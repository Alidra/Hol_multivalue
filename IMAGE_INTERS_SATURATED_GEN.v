Require Import coq.
Require Import theory_hol.
Require Import hol_types.
Require Import hol_terms.
Require Import hol_axioms.
Require Import hol_type_abbrevs.
Require Import IMAGE_INTERS_SATURATED_GEN_term_abbrevs.
Require Import CONJ_ASSOC_spec.
Require Import DISJ_ACI_spec.
Require Import DISJ_ASSOC_spec.
Require Import EXCLUDED_MIDDLE_spec.
Require Import EXTENSION_spec.
Require Import FORALL_IN_INSERT_spec.
Require Import FORALL_UNWIND_THM2_spec.
Require Import IMAGE_CLAUSES_spec.
Require Import IMAGE_INTER_SATURATED_GEN_spec.
Require Import IN_IMAGE_spec.
Require Import IN_INTERS_spec.
Require Import LEFT_IMP_EXISTS_THM_spec.
Require Import NOT_CLAUSES_WEAK_spec.
Require Import NOT_INSERT_EMPTY_spec.
Require Import NOT_IN_EMPTY_spec.
Require Import SWAP_FORALL_THM_spec.
Require Import thm0_spec.
Require Import thm10578_spec.
Require Import thm10597_spec.
Require Import thm16474_spec.
Require Import thm16506_spec.
Require Import thm16507_spec.
Require Import thm16933_spec.
Require Import thm17045_spec.
Require Import thm17160_spec.
Require Import thm17265_spec.
Require Import thm17362_spec.
Require Import thm17646_spec.
Require Import thm17784_spec.
Require Import thm18392_spec.
Require Import thm18394_spec.
Require Import thm1842_spec.
Require Import thm1857_spec.
Require Import thm1862_spec.
Require Import thm1863_spec.
Require Import thm18898_spec.
Require Import thm18899_spec.
Require Import thm18904_spec.
Require Import thm18905_spec.
Require Import thm18910_spec.
Require Import thm18911_spec.
Require Import thm18916_spec.
Require Import thm18917_spec.
Require Import thm18922_spec.
Require Import thm18923_spec.
Require Import thm18928_spec.
Require Import thm18929_spec.
Require Import thm18952_spec.
Require Import thm18953_spec.
Require Import thm19006_spec.
Require Import thm19007_spec.
Require Import thm19012_spec.
Require Import thm19013_spec.
Require Import thm19018_spec.
Require Import thm19019_spec.
Require Import thm19030_spec.
Require Import thm19031_spec.
Require Import thm19490_spec.
Require Import thm19699_spec.
Require Import thm19792_spec.
Require Import thm20230_spec.
Require Import thm20661_spec.
Require Import thm20662_spec.
Require Import thm20664_spec.
Require Import thm20665_spec.
Require Import thm20668_spec.
Require Import thm20682_spec.
Require Import thm20764_spec.
Require Import thm20780_spec.
Require Import thm20789_spec.
Require Import thm20895_spec.
Require Import thm20904_spec.
Require Import thm21007_spec.
Require Import thm21021_spec.
Require Import thm21028_spec.
Require Import thm21107_spec.
Require Import thm21114_spec.
Require Import thm21182_spec.
Require Import thm21385_spec.
Require Import thm21386_spec.
Require Import thm21394_spec.
Require Import thm21490_spec.
Require Import thm21501_spec.
Require Import thm21598_spec.
Require Import thm3211609_spec.
Require Import thm3211610_spec.
Require Import thm3211640_spec.
Require Import thm3211641_spec.
Require Import thm3211656_spec.
Require Import thm3211657_spec.
Require Import thm3211668_spec.
Require Import thm3211669_spec.
Require Import thm3211683_spec.
Require Import thm3211684_spec.
Require Import thm3211692_spec.
Require Import thm3211693_spec.
Require Import thm3211710_spec.
Require Import thm3211711_spec.
Require Import thm3211729_spec.
Require Import thm3211730_spec.
Require Import thm3211750_spec.
Require Import thm3211751_spec.
Require Import thm3211756_spec.
Require Import thm3211757_spec.
Require Import thm3354723_spec.
Require Import thm3355403_spec.
Require Import thm3356591_spec.
Require Import thm3358011_spec.
Require Import thm4211_spec.
Require Import thm69_spec.
Require Import thm82_spec.
Require Import thm885_spec.
Require Import thm886_spec.
Lemma lem3493631 (t1 : Prop) : term0 t1.
Proof. exact (@lem693 t1). Qed.
Lemma lem3493632 (t1 : Prop) : (term0 t1) = (term1 t1).
Proof. exact (eq_refl (term0 t1)). Qed.
Lemma lem3493633 (t1 : Prop) : term1 t1.
Proof. exact (EQ_MP (@lem3493632 t1) (@lem3493631 t1)). Qed.
Lemma lem3493634 (t1 : Prop) (t2 : Prop) : term2 t1 t2.
Proof. exact (@lem3493633 t1 t2). Qed.
Lemma lem3493635 (t1 : Prop) (t2 : Prop) : (term2 t1 t2) = (term3 t1 t2).
Proof. exact (eq_refl (term2 t1 t2)). Qed.
Lemma lem3493636 (t1 : Prop) (t2 : Prop) : term3 t1 t2.
Proof. exact (EQ_MP (@lem3493635 t1 t2) (@lem3493634 t1 t2)). Qed.
Lemma lem3493637 (t1 : Prop) (t2 : Prop) (t3 : Prop) : term4 t1 t2 t3.
Proof. exact (@lem3493636 t1 t2 t3). Qed.
Lemma lem3493638 (t1 : Prop) (t2 : Prop) (t3 : Prop) : (term4 t1 t2 t3) = ((term5 t1 t2 t3) = (term6 t1 t2 t3)).
Proof. exact (eq_refl (term4 t1 t2 t3)). Qed.
Lemma lem3493639 (t1 : Prop) (t2 : Prop) (t3 : Prop) : (term5 t1 t2 t3) = (term6 t1 t2 t3).
Proof. exact (EQ_MP (@lem3493638 t1 t2 t3) (@lem3493637 t1 t2 t3)). Qed.
Lemma lem3493640 (t1 : Prop) (t2 : Prop) (t3 : Prop) : (term6 t1 t2 t3) = (term5 t1 t2 t3).
Proof. exact (SYM (@lem3493639 t1 t2 t3)). Qed.
Lemma lem3493641 {A : Type'} (P : A -> Prop) : term7 A P.
Proof. exact (@lem4628 A P). Qed.
Lemma lem3493642 {A : Type'} (P : A -> Prop) : (term7 A P) = (term8 A P).
Proof. exact (eq_refl (term7 A P)). Qed.
Lemma lem3493643 {A : Type'} (P : A -> Prop) : term8 A P.
Proof. exact (EQ_MP (@lem3493642 A P) (@lem3493641 A P)). Qed.
Lemma lem3493644 {A : Type'} (P : A -> Prop) (a : A) : term9 A P a.
Proof. exact (@lem3493643 A P a). Qed.
Lemma lem3493645 {A : Type'} (P : A -> Prop) (a : A) : (term9 A P a) = ((term10 A a P) = (P a)).
Proof. exact (eq_refl (term9 A P a)). Qed.
Lemma lem3493647 {A B : Type'} (P : type1413 A B) : term11 A B P.
Proof. exact (@lem4792 A B P). Qed.
Lemma lem3493648 {A B : Type'} (P : type1413 A B) : (term11 A B P) = ((term12 A B P) = (term13 A B P)).
Proof. exact (eq_refl (term11 A B P)). Qed.
Lemma lem3493650 {A : Type'} (x : A) : term14 A x.
Proof. exact (@lem3204775 A x). Qed.
Lemma lem3493651 {A : Type'} (x : A) : (term14 A x) = (term15 A x).
Proof. exact (eq_refl (term14 A x)). Qed.
Lemma lem3493652 {A : Type'} (x : A) : term15 A x.
Proof. exact (EQ_MP (@lem3493651 A x) (@lem3493650 A x)). Qed.
Lemma lem3493653 {A : Type'} (x : A) : term16 A x.
Proof. exact (@lem82 (@IN A x (@EMPTY A))). Qed.
Lemma lem3493693 {A : Type'} (P : A -> Prop) : term17 A P.
Proof. exact (@lem6644 A P). Qed.
Lemma lem3493694 {A : Type'} (P : A -> Prop) : (term17 A P) = (term18 A P).
Proof. exact (eq_refl (term17 A P)). Qed.
Lemma lem3493695 {A : Type'} (P : A -> Prop) : term18 A P.
Proof. exact (EQ_MP (@lem3493694 A P) (@lem3493693 A P)). Qed.
Lemma lem3493696 {A : Type'} (P : A -> Prop) (Q : Prop) : term19 A P Q.
Proof. exact (@lem3493695 A P Q). Qed.
Lemma lem3493697 {A : Type'} (P : A -> Prop) (Q : Prop) : (term19 A P Q) = ((term20 A P Q) = (term21 A P Q)).
Proof. exact (eq_refl (term19 A P Q)). Qed.
Lemma lem3493699 {A B : Type'} (y : B) : term22 A B y.
Proof. exact (@lem3206070 A B y). Qed.
Lemma lem3493700 {A B : Type'} (y : B) : (term22 A B y) = (term23 A B y).
Proof. exact (eq_refl (term22 A B y)). Qed.
Lemma lem3493701 {A B : Type'} (y : B) : term23 A B y.
Proof. exact (EQ_MP (@lem3493700 A B y) (@lem3493699 A B y)). Qed.
Lemma lem3493702 {A B : Type'} (y : B) (s : A -> Prop) : term24 A B y s.
Proof. exact (@lem3493701 A B y s). Qed.
Lemma lem3493703 {A B : Type'} (y : B) (s : A -> Prop) : (term24 A B y s) = (term25 A B y s).
Proof. exact (eq_refl (term24 A B y s)). Qed.
Lemma lem3493704 {A B : Type'} (y : B) (s : A -> Prop) : term25 A B y s.
Proof. exact (EQ_MP (@lem3493703 A B y s) (@lem3493702 A B y s)). Qed.
Lemma lem3493705 {A B : Type'} (y : B) (s : A -> Prop) (f : A -> B) : term26 A B y s f.
Proof. exact (@lem3493704 A B y s f). Qed.
Lemma lem3493706 {A B : Type'} (y : B) (f : A -> B) (s : A -> Prop) : (term26 A B y s f) = ((term27 A B y f s) = (term28 A B y f s)).
Proof. exact (eq_refl (term26 A B y s f)). Qed.
Lemma lem3493708 {A : Type'} (s : type686 A) : term29 A s.
Proof. exact (@lem3205364 A s). Qed.
Lemma lem3493709 {A : Type'} (s : type686 A) : (term29 A s) = (term30 A s).
Proof. exact (eq_refl (term29 A s)). Qed.
Lemma lem3493710 {A : Type'} (s : type686 A) : term30 A s.
Proof. exact (EQ_MP (@lem3493709 A s) (@lem3493708 A s)). Qed.
Lemma lem3493711 {A : Type'} (s : type686 A) (x : A) : term31 A s x.
Proof. exact (@lem3493710 A s x). Qed.
Lemma lem3493712 {A : Type'} (s : type686 A) (x : A) : (term31 A s x) = ((term32 A x s) = (term33 A s x)).
Proof. exact (eq_refl (term31 A s x)). Qed.
Lemma lem3493720 {A : Type'} (s : A -> Prop) : term34 A s.
Proof. exact (@lem3181245 A s). Qed.
Lemma lem3493721 {A : Type'} (s : A -> Prop) : (term34 A s) = (term35 A s).
Proof. exact (eq_refl (term34 A s)). Qed.
Lemma lem3493722 {A : Type'} (s : A -> Prop) : term35 A s.
Proof. exact (EQ_MP (@lem3493721 A s) (@lem3493720 A s)). Qed.
Lemma lem3493723 {A : Type'} (s : A -> Prop) (t : A -> Prop) : term36 A s t.
Proof. exact (@lem3493722 A s t). Qed.
Lemma lem3493724 {A : Type'} (s : A -> Prop) (t : A -> Prop) : (term36 A s t) = ((s = t) = (term37 A s t)).
Proof. exact (eq_refl (term36 A s t)). Qed.
Lemma lem3493733 {A : Type'} (s : A -> Prop) (t : A -> Prop) : (s = t) = (term37 A s t).
Proof. exact (EQ_MP (@lem3493724 A s t) (@lem3493723 A s t)). Qed.
Lemma lem3493734 {_90715 : Type'} (s : type686 _90715) (t : type686 _90715) : (s = t) = (term38 _90715 s t).
Proof. exact (@lem3493733 (_90715 -> Prop) s t). Qed.
Lemma lem3493735 {_90715 : Type'} (g : type686 _90715) : (g = (@EMPTY (_90715 -> Prop))) = (term39 _90715 g).
Proof. exact (@lem3493734 _90715 g (@EMPTY (_90715 -> Prop))). Qed.
Lemma lem3493736 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem3493737 {_90715 : Type'} (g : type686 _90715) : (term40 _90715 g) = (term41 _90715 g).
Proof. exact (MK_COMB (@lem3493736) (@lem3493735 _90715 g)). Qed.
Lemma lem3493738 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem3493739 {_90715 : Type'} (g : type686 _90715) : (term42 _90715 g) = (term43 _90715 g).
Proof. exact (MK_COMB (@lem3493738) (@lem3493737 _90715 g)). Qed.
Lemma lem3493754 {_90715 _90724 : Type'} (g : type686 _90715) (u : _90715 -> Prop) (f : _90715 -> _90724) : (term44 _90715 _90724 g u f) = (term44 _90715 _90724 g u f).
Proof. exact (eq_refl (term44 _90715 _90724 g u f)). Qed.
Lemma lem3493755 {_90715 _90724 : Type'} (g : type686 _90715) (u : _90715 -> Prop) (f : _90715 -> _90724) : (term45 _90715 _90724 g u f) = (term46 _90715 _90724 g u f).
Proof. exact (MK_COMB (@lem3493739 _90715 g) (@lem3493754 _90715 _90724 g u f)). Qed.
Lemma lem3493756 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem3493757 {_90715 _90724 : Type'} (g : type686 _90715) (u : _90715 -> Prop) (f : _90715 -> _90724) : (term47 _90715 _90724 g u f) = (term48 _90715 _90724 g u f).
Proof. exact (MK_COMB (@lem3493756) (@lem3493755 _90715 _90724 g u f)). Qed.
Lemma lem3493761 {A : Type'} (s : A -> Prop) (t : A -> Prop) : (s = t) = (term37 A s t).
Proof. exact (EQ_MP (@lem3493724 A s t) (@lem3493723 A s t)). Qed.
Lemma lem3493762 {_90724 : Type'} (s : _90724 -> Prop) (t : _90724 -> Prop) : (s = t) = (term37 _90724 s t).
Proof. exact (@lem3493761 _90724 s t). Qed.
Lemma lem3493763 {_90715 _90724 : Type'} (f : _90715 -> _90724) (g : type686 _90715) : ((term49 _90715 _90724 f g) = (term50 _90715 _90724 f g)) = (term51 _90715 _90724 f g).
Proof. exact (@lem3493762 _90724 (term49 _90715 _90724 f g) (term50 _90715 _90724 f g)). Qed.
Lemma lem3493764 {_90715 _90724 : Type'} (u : _90715 -> Prop) (f : _90715 -> _90724) (g : type686 _90715) : (term52 _90715 _90724 u f g) = (term53 _90715 _90724 u f g).
Proof. exact (MK_COMB (@lem3493757 _90715 _90724 g u f) (@lem3493763 _90715 _90724 f g)). Qed.
Lemma lem3493765 {_90715 _90724 : Type'} (u : _90715 -> Prop) (f : _90715 -> _90724) (g : type686 _90715) : (term53 _90715 _90724 u f g) = (term52 _90715 _90724 u f g).
Proof. exact (SYM (@lem3493764 _90715 _90724 u f g)). Qed.
Lemma lem3493791 {A B : Type'} (y : B) (f : A -> B) (s : A -> Prop) : (term27 A B y f s) = (term28 A B y f s).
Proof. exact (EQ_MP (@lem3493706 A B y f s) (@lem3493705 A B y s f)). Qed.
Lemma lem3493792 {_90715 _90724 : Type'} (y : _90724) (f : _90715 -> _90724) (s : _90715 -> Prop) : (term27 _90715 _90724 y f s) = (term28 _90715 _90724 y f s).
Proof. exact (@lem3493791 _90715 _90724 y f s). Qed.
Lemma lem3493793 {_90715 _90724 : Type'} (x : _90715) (f : _90715 -> _90724) (t : _90715 -> Prop) : (term54 _90715 _90724 x f t) = (term55 _90715 _90724 x f t).
Proof. exact (@lem3493792 _90715 _90724 (f x) f t). Qed.
Lemma lem3493802 {_90715 : Type'} (x : _90715) (u : _90715 -> Prop) : (term56 _90715 x u) = (term56 _90715 x u).
Proof. exact (eq_refl (term56 _90715 x u)). Qed.
Lemma lem3493803 {_90715 _90724 : Type'} (u : _90715 -> Prop) (x : _90715) (f : _90715 -> _90724) (t : _90715 -> Prop) : (term57 _90715 _90724 u x f t) = (term58 _90715 _90724 u x f t).
Proof. exact (MK_COMB (@lem3493802 _90715 x u) (@lem3493793 _90715 _90724 x f t)). Qed.
Lemma lem3493806 {_90715 : Type'} (GEN_PVAR_84 : _90715) : (@SETSPEC _90715 GEN_PVAR_84) = (@SETSPEC _90715 GEN_PVAR_84).
Proof. exact (eq_refl (@SETSPEC _90715 GEN_PVAR_84)). Qed.
Lemma lem3493807 {_90715 _90724 : Type'} (GEN_PVAR_84 : _90715) (u : _90715 -> Prop) (x : _90715) (f : _90715 -> _90724) (t : _90715 -> Prop) : (term59 _90715 _90724 GEN_PVAR_84 u x f t) = (term60 _90715 _90724 GEN_PVAR_84 u x f t).
Proof. exact (MK_COMB (@lem3493806 _90715 GEN_PVAR_84) (@lem3493803 _90715 _90724 u x f t)). Qed.
Lemma lem3493808 {_90715 : Type'} (x : _90715) : x = x.
Proof. exact (eq_refl x). Qed.
Lemma lem3493809 {_90715 _90724 : Type'} (GEN_PVAR_84 : _90715) (u : _90715 -> Prop) (f : _90715 -> _90724) (t : _90715 -> Prop) (x : _90715) : (term61 _90715 _90724 GEN_PVAR_84 u f t x) = (term62 _90715 _90724 GEN_PVAR_84 u f t x).
Proof. exact (MK_COMB (@lem3493807 _90715 _90724 GEN_PVAR_84 u x f t) (@lem3493808 _90715 x)). Qed.
Lemma lem3493810 {_90715 _90724 : Type'} (GEN_PVAR_84 : _90715) (u : _90715 -> Prop) (f : _90715 -> _90724) (t : _90715 -> Prop) : (term63 _90715 _90724 GEN_PVAR_84 u f t) = (term64 _90715 _90724 GEN_PVAR_84 u f t).
Proof. exact (fun_ext (fun x : _90715 => @lem3493809 _90715 _90724 GEN_PVAR_84 u f t x)). Qed.
Lemma lem3493811 {_90715 : Type'} : (@ex _90715) = (@ex _90715).
Proof. exact (eq_refl (@ex _90715)). Qed.
Lemma lem3493812 {_90715 _90724 : Type'} (GEN_PVAR_84 : _90715) (u : _90715 -> Prop) (f : _90715 -> _90724) (t : _90715 -> Prop) : (term65 _90715 _90724 GEN_PVAR_84 u f t) = (term66 _90715 _90724 GEN_PVAR_84 u f t).
Proof. exact (MK_COMB (@lem3493811 _90715) (@lem3493810 _90715 _90724 GEN_PVAR_84 u f t)). Qed.
Lemma lem3493817 {_90715 _90724 : Type'} (u : _90715 -> Prop) (f : _90715 -> _90724) (t : _90715 -> Prop) : (term67 _90715 _90724 u f t) = (term68 _90715 _90724 u f t).
Proof. exact (fun_ext (fun GEN_PVAR_84 : _90715 => @lem3493812 _90715 _90724 GEN_PVAR_84 u f t)). Qed.
Lemma lem3493818 {_90715 : Type'} : (@GSPEC _90715) = (@GSPEC _90715).
Proof. exact (eq_refl (@GSPEC _90715)). Qed.
Lemma lem3493819 {_90715 _90724 : Type'} (u : _90715 -> Prop) (f : _90715 -> _90724) (t : _90715 -> Prop) : (term69 _90715 _90724 u f t) = (term70 _90715 _90724 u f t).
Proof. exact (MK_COMB (@lem3493818 _90715) (@lem3493817 _90715 _90724 u f t)). Qed.
Lemma lem3493820 {_90715 : Type'} : (@SUBSET _90715) = (@SUBSET _90715).
Proof. exact (eq_refl (@SUBSET _90715)). Qed.
Lemma lem3493821 {_90715 _90724 : Type'} (u : _90715 -> Prop) (f : _90715 -> _90724) (t : _90715 -> Prop) : (term71 _90715 _90724 u f t) = (term72 _90715 _90724 u f t).
Proof. exact (MK_COMB (@lem3493820 _90715) (@lem3493819 _90715 _90724 u f t)). Qed.
Lemma lem3493822 {_90715 : Type'} (t : _90715 -> Prop) : t = t.
Proof. exact (eq_refl t). Qed.
Lemma lem3493823 {_90715 _90724 : Type'} (u : _90715 -> Prop) (f : _90715 -> _90724) (t : _90715 -> Prop) : (term73 _90715 _90724 u f t) = (term74 _90715 _90724 u f t).
Proof. exact (MK_COMB (@lem3493821 _90715 _90724 u f t) (@lem3493822 _90715 t)). Qed.
Lemma lem3493824 {_90715 : Type'} (t : _90715 -> Prop) (u : _90715 -> Prop) : (term75 _90715 t u) = (term75 _90715 t u).
Proof. exact (eq_refl (term75 _90715 t u)). Qed.
Lemma lem3493825 {_90715 _90724 : Type'} (u : _90715 -> Prop) (f : _90715 -> _90724) (t : _90715 -> Prop) : (term76 _90715 _90724 u f t) = (term77 _90715 _90724 u f t).
Proof. exact (MK_COMB (@lem3493824 _90715 t u) (@lem3493823 _90715 _90724 u f t)). Qed.
Lemma lem3493828 {_90715 : Type'} (t : _90715 -> Prop) (g : type686 _90715) : (term78 _90715 t g) = (term78 _90715 t g).
Proof. exact (eq_refl (term78 _90715 t g)). Qed.
Lemma lem3493829 {_90715 _90724 : Type'} (g : type686 _90715) (u : _90715 -> Prop) (f : _90715 -> _90724) (t : _90715 -> Prop) : (term79 _90715 _90724 g u f t) = (term80 _90715 _90724 g u f t).
Proof. exact (MK_COMB (@lem3493828 _90715 t g) (@lem3493825 _90715 _90724 u f t)). Qed.
Lemma lem3493832 {_90715 _90724 : Type'} (g : type686 _90715) (u : _90715 -> Prop) (f : _90715 -> _90724) : (term81 _90715 _90724 g u f) = (term82 _90715 _90724 g u f).
Proof. exact (fun_ext (fun t : _90715 -> Prop => @lem3493829 _90715 _90724 g u f t)). Qed.
Lemma lem3493833 {_90715 : Type'} : (@all (_90715 -> Prop)) = (@all (_90715 -> Prop)).
Proof. exact (eq_refl (@all (_90715 -> Prop))). Qed.
Lemma lem3493834 {_90715 _90724 : Type'} (g : type686 _90715) (u : _90715 -> Prop) (f : _90715 -> _90724) : (term44 _90715 _90724 g u f) = (term83 _90715 _90724 g u f).
Proof. exact (MK_COMB (@lem3493833 _90715) (@lem3493832 _90715 _90724 g u f)). Qed.
Lemma lem3493839 {_90715 : Type'} (g : type686 _90715) : (term43 _90715 g) = (term43 _90715 g).
Proof. exact (eq_refl (term43 _90715 g)). Qed.
Lemma lem3493840 {_90715 _90724 : Type'} (g : type686 _90715) (u : _90715 -> Prop) (f : _90715 -> _90724) : (term46 _90715 _90724 g u f) = (term84 _90715 _90724 g u f).
Proof. exact (MK_COMB (@lem3493839 _90715 g) (@lem3493834 _90715 _90724 g u f)). Qed.
Lemma lem3493843 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem3493844 {_90715 _90724 : Type'} (g : type686 _90715) (u : _90715 -> Prop) (f : _90715 -> _90724) : (term48 _90715 _90724 g u f) = (term85 _90715 _90724 g u f).
Proof. exact (MK_COMB (@lem3493843) (@lem3493840 _90715 _90724 g u f)). Qed.
Lemma lem3493852 {A B : Type'} (y : B) (f : A -> B) (s : A -> Prop) : (term27 A B y f s) = (term28 A B y f s).
Proof. exact (EQ_MP (@lem3493706 A B y f s) (@lem3493705 A B y s f)). Qed.
Lemma lem3493853 {_90715 _90724 : Type'} (y : _90724) (f : _90715 -> _90724) (s : _90715 -> Prop) : (term27 _90715 _90724 y f s) = (term28 _90715 _90724 y f s).
Proof. exact (@lem3493852 _90715 _90724 y f s). Qed.
Lemma lem3493854 {_90715 _90724 : Type'} (x : _90724) (f : _90715 -> _90724) (g : type686 _90715) : (term86 _90715 _90724 x f g) = (term87 _90715 _90724 x f g).
Proof. exact (@lem3493853 _90715 _90724 x f (@INTERS _90715 g)). Qed.
Lemma lem3493864 {A : Type'} (s : type686 A) (x : A) : (term32 A x s) = (term33 A s x).
Proof. exact (EQ_MP (@lem3493712 A s x) (@lem3493711 A s x)). Qed.
Lemma lem3493865 {_90715 : Type'} (s : type686 _90715) (x : _90715) : (term32 _90715 x s) = (term33 _90715 s x).
Proof. exact (@lem3493864 _90715 s x). Qed.
Lemma lem3493866 {_90715 : Type'} (g : type686 _90715) (x : _90715) : (term32 _90715 x g) = (term33 _90715 g x).
Proof. exact (@lem3493865 _90715 g x). Qed.
Lemma lem3493873 {_90715 _90724 : Type'} (x : _90724) (f : _90715 -> _90724) (x' : _90715) : (term88 _90715 _90724 x f x') = (term88 _90715 _90724 x f x').
Proof. exact (eq_refl (term88 _90715 _90724 x f x')). Qed.
Lemma lem3493874 {_90715 _90724 : Type'} (x : _90724) (f : _90715 -> _90724) (g : type686 _90715) (x' : _90715) : (term89 _90715 _90724 x f x' g) = (term90 _90715 _90724 x f g x').
Proof. exact (MK_COMB (@lem3493873 _90715 _90724 x f x') (@lem3493866 _90715 g x')). Qed.
Lemma lem3493877 {_90715 _90724 : Type'} (x : _90724) (f : _90715 -> _90724) (g : type686 _90715) : (term91 _90715 _90724 x f g) = (term92 _90715 _90724 x f g).
Proof. exact (fun_ext (fun x' : _90715 => @lem3493874 _90715 _90724 x f g x')). Qed.
Lemma lem3493878 {_90715 : Type'} : (@ex _90715) = (@ex _90715).
Proof. exact (eq_refl (@ex _90715)). Qed.
Lemma lem3493879 {_90715 _90724 : Type'} (x : _90724) (f : _90715 -> _90724) (g : type686 _90715) : (term87 _90715 _90724 x f g) = (term93 _90715 _90724 x f g).
Proof. exact (MK_COMB (@lem3493878 _90715) (@lem3493877 _90715 _90724 x f g)). Qed.
Lemma lem3493884 {_90715 _90724 : Type'} (x : _90724) (f : _90715 -> _90724) (g : type686 _90715) : (term86 _90715 _90724 x f g) = (term93 _90715 _90724 x f g).
Proof. exact (TRANS (@lem3493854 _90715 _90724 x f g) (@lem3493879 _90715 _90724 x f g)). Qed.
Lemma lem3493885 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem3493886 {_90715 _90724 : Type'} (x : _90724) (f : _90715 -> _90724) (g : type686 _90715) : (term94 _90715 _90724 x f g) = (term95 _90715 _90724 x f g).
Proof. exact (MK_COMB (@lem3493885) (@lem3493884 _90715 _90724 x f g)). Qed.
Lemma lem3493888 {A : Type'} (s : type686 A) (x : A) : (term32 A x s) = (term33 A s x).
Proof. exact (EQ_MP (@lem3493712 A s x) (@lem3493711 A s x)). Qed.
Lemma lem3493889 {_90724 : Type'} (s : type686 _90724) (x : _90724) : (term32 _90724 x s) = (term33 _90724 s x).
Proof. exact (@lem3493888 _90724 s x). Qed.
Lemma lem3493890 {_90715 _90724 : Type'} (f : _90715 -> _90724) (g : type686 _90715) (x : _90724) : (term96 _90715 _90724 x f g) = (term97 _90715 _90724 f g x).
Proof. exact (@lem3493889 _90724 (term98 _90715 _90724 f g) x). Qed.
Lemma lem3493898 {A B : Type'} (y : B) (f : A -> B) (s : A -> Prop) : (term27 A B y f s) = (term28 A B y f s).
Proof. exact (EQ_MP (@lem3493706 A B y f s) (@lem3493705 A B y s f)). Qed.
Lemma lem3493899 {_90715 _90724 : Type'} (y : _90724 -> Prop) (f : type678 _90715 _90724) (s : type686 _90715) : (term99 _90715 _90724 y f s) = (term100 _90715 _90724 y f s).
Proof. exact (@lem3493898 (_90715 -> Prop) (_90724 -> Prop) y f s). Qed.
Lemma lem3493900 {_90715 _90724 : Type'} (t : _90724 -> Prop) (f : _90715 -> _90724) (g : type686 _90715) : (term101 _90715 _90724 t f g) = (term102 _90715 _90724 t f g).
Proof. exact (@lem3493899 _90715 _90724 t (@IMAGE _90715 _90724 f) g). Qed.
Lemma lem3493909 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem3493910 {_90715 _90724 : Type'} (t : _90724 -> Prop) (f : _90715 -> _90724) (g : type686 _90715) : (term103 _90715 _90724 t f g) = (term104 _90715 _90724 t f g).
Proof. exact (MK_COMB (@lem3493909) (@lem3493900 _90715 _90724 t f g)). Qed.
Lemma lem3493911 {_90724 : Type'} (x : _90724) (t : _90724 -> Prop) : (@IN _90724 x t) = (@IN _90724 x t).
Proof. exact (eq_refl (@IN _90724 x t)). Qed.
Lemma lem3493912 {_90715 _90724 : Type'} (f : _90715 -> _90724) (g : type686 _90715) (x : _90724) (t : _90724 -> Prop) : (term105 _90715 _90724 f g x t) = (term106 _90715 _90724 f g x t).
Proof. exact (MK_COMB (@lem3493910 _90715 _90724 t f g) (@lem3493911 _90724 x t)). Qed.
Lemma lem3493915 {_90715 _90724 : Type'} (f : _90715 -> _90724) (g : type686 _90715) (x : _90724) : (term107 _90715 _90724 f g x) = (term108 _90715 _90724 f g x).
Proof. exact (fun_ext (fun t : _90724 -> Prop => @lem3493912 _90715 _90724 f g x t)). Qed.
Lemma lem3493916 {_90724 : Type'} : (@all (_90724 -> Prop)) = (@all (_90724 -> Prop)).
Proof. exact (eq_refl (@all (_90724 -> Prop))). Qed.
Lemma lem3493917 {_90715 _90724 : Type'} (f : _90715 -> _90724) (g : type686 _90715) (x : _90724) : (term97 _90715 _90724 f g x) = (term109 _90715 _90724 f g x).
Proof. exact (MK_COMB (@lem3493916 _90724) (@lem3493915 _90715 _90724 f g x)). Qed.
Lemma lem3493922 {_90715 _90724 : Type'} (f : _90715 -> _90724) (g : type686 _90715) (x : _90724) : (term96 _90715 _90724 x f g) = (term109 _90715 _90724 f g x).
Proof. exact (TRANS (@lem3493890 _90715 _90724 f g x) (@lem3493917 _90715 _90724 f g x)). Qed.
Lemma lem3493923 {_90715 _90724 : Type'} (f : _90715 -> _90724) (g : type686 _90715) (x : _90724) : ((term86 _90715 _90724 x f g) = (term96 _90715 _90724 x f g)) = ((term93 _90715 _90724 x f g) = (term109 _90715 _90724 f g x)).
Proof. exact (MK_COMB (@lem3493886 _90715 _90724 x f g) (@lem3493922 _90715 _90724 f g x)). Qed.
Lemma lem3493926 {_90715 _90724 : Type'} (f : _90715 -> _90724) (g : type686 _90715) : (term110 _90715 _90724 f g) = (term111 _90715 _90724 f g).
Proof. exact (fun_ext (fun x : _90724 => @lem3493923 _90715 _90724 f g x)). Qed.
Lemma lem3493927 {_90724 : Type'} : (@all _90724) = (@all _90724).
Proof. exact (eq_refl (@all _90724)). Qed.
Lemma lem3493928 {_90715 _90724 : Type'} (f : _90715 -> _90724) (g : type686 _90715) : (term51 _90715 _90724 f g) = (term112 _90715 _90724 f g).
Proof. exact (MK_COMB (@lem3493927 _90724) (@lem3493926 _90715 _90724 f g)). Qed.
Lemma lem3493933 {_90715 _90724 : Type'} (u : _90715 -> Prop) (f : _90715 -> _90724) (g : type686 _90715) : (term53 _90715 _90724 u f g) = (term113 _90715 _90724 u f g).
Proof. exact (MK_COMB (@lem3493844 _90715 _90724 g u f) (@lem3493928 _90715 _90724 f g)). Qed.
Lemma lem3493936 {_90715 _90724 : Type'} (u : _90715 -> Prop) (f : _90715 -> _90724) (g : type686 _90715) : (term113 _90715 _90724 u f g) = (term53 _90715 _90724 u f g).
Proof. exact (SYM (@lem3493933 _90715 _90724 u f g)). Qed.
Lemma lem3493948 {A : Type'} (x : A) : (@IN A x (@EMPTY A)) = False.
Proof. exact (@lem3493653 A x (@lem3493652 A x)). Qed.
Lemma lem3493949 {_90715 : Type'} (x : _90715 -> Prop) : (@IN (_90715 -> Prop) x (@EMPTY (_90715 -> Prop))) = False.
Proof. exact (@lem3493948 (_90715 -> Prop) x). Qed.
Lemma lem3493950 {_90715 : Type'} (x : _90715 -> Prop) (g : type686 _90715) : (term114 _90715 x g) = (term114 _90715 x g).
Proof. exact (eq_refl (term114 _90715 x g)). Qed.
Lemma lem3493951 {_90715 : Type'} (x : _90715 -> Prop) (g : type686 _90715) : ((@IN (_90715 -> Prop) x g) = (@IN (_90715 -> Prop) x (@EMPTY (_90715 -> Prop)))) = ((@IN (_90715 -> Prop) x g) = False).
Proof. exact (MK_COMB (@lem3493950 _90715 x g) (@lem3493949 _90715 x)). Qed.
Lemma lem3493953 (t : Prop) : (t = False) = (~ t).
Proof. exact (proj2 (@lem1857 t)). Qed.
Lemma lem3493954 {_90715 : Type'} (x : _90715 -> Prop) (g : type686 _90715) : ((@IN (_90715 -> Prop) x g) = False) = (term115 _90715 x g).
Proof. exact (@lem3493953 (@IN (_90715 -> Prop) x g)). Qed.
Lemma lem3493955 {_90715 : Type'} (x : _90715 -> Prop) (g : type686 _90715) : ((@IN (_90715 -> Prop) x g) = (@IN (_90715 -> Prop) x (@EMPTY (_90715 -> Prop)))) = (term115 _90715 x g).
Proof. exact (TRANS (@lem3493951 _90715 x g) (@lem3493954 _90715 x g)). Qed.
Lemma lem3493956 {_90715 : Type'} (g : type686 _90715) : (term116 _90715 g) = (term117 _90715 g).
Proof. exact (fun_ext (fun x : _90715 -> Prop => @lem3493955 _90715 x g)). Qed.
Lemma lem3493957 {_90715 : Type'} : (@all (_90715 -> Prop)) = (@all (_90715 -> Prop)).
Proof. exact (eq_refl (@all (_90715 -> Prop))). Qed.
Lemma lem3493958 {_90715 : Type'} (g : type686 _90715) : (term39 _90715 g) = (term118 _90715 g).
Proof. exact (MK_COMB (@lem3493957 _90715) (@lem3493956 _90715 g)). Qed.
Lemma lem3493963 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem3493964 {_90715 : Type'} (g : type686 _90715) : (term41 _90715 g) = (term119 _90715 g).
Proof. exact (MK_COMB (@lem3493963) (@lem3493958 _90715 g)). Qed.
Lemma lem3493965 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem3493966 {_90715 : Type'} (g : type686 _90715) : (term43 _90715 g) = (term120 _90715 g).
Proof. exact (MK_COMB (@lem3493965) (@lem3493964 _90715 g)). Qed.
Lemma lem3493989 {_90715 _90724 : Type'} (g : type686 _90715) (u : _90715 -> Prop) (f : _90715 -> _90724) : (term83 _90715 _90724 g u f) = (term83 _90715 _90724 g u f).
Proof. exact (eq_refl (term83 _90715 _90724 g u f)). Qed.
Lemma lem3493990 {_90715 _90724 : Type'} (g : type686 _90715) (u : _90715 -> Prop) (f : _90715 -> _90724) : (term84 _90715 _90724 g u f) = (term121 _90715 _90724 g u f).
Proof. exact (MK_COMB (@lem3493966 _90715 g) (@lem3493989 _90715 _90724 g u f)). Qed.
Lemma lem3493993 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem3493994 {_90715 _90724 : Type'} (g : type686 _90715) (u : _90715 -> Prop) (f : _90715 -> _90724) : (term85 _90715 _90724 g u f) = (term122 _90715 _90724 g u f).
Proof. exact (MK_COMB (@lem3493993) (@lem3493990 _90715 _90724 g u f)). Qed.
Lemma lem3494020 {A : Type'} (P : A -> Prop) (Q : Prop) : (term20 A P Q) = (term21 A P Q).
Proof. exact (EQ_MP (@lem3493697 A P Q) (@lem3493696 A P Q)). Qed.
Lemma lem3494021 {_90715 : Type'} (P : type686 _90715) (Q : Prop) : (term123 _90715 P Q) = (term124 _90715 P Q).
Proof. exact (@lem3494020 (_90715 -> Prop) P Q). Qed.
Lemma lem3494022 {_90715 _90724 : Type'} (f : _90715 -> _90724) (g : type686 _90715) (x : _90724) (t : _90724 -> Prop) : (term125 _90715 _90724 f g x t) = (term126 _90715 _90724 f g x t).
Proof. exact (@lem3494021 _90715 (term127 _90715 _90724 t f g) (@IN _90724 x t)). Qed.
Lemma lem3494023 {_90715 _90724 : Type'} (t : _90724 -> Prop) (f : _90715 -> _90724) (x : _90715 -> Prop) (g : type686 _90715) : (term128 _90715 _90724 t f g x) = (term129 _90715 _90724 t f x g).
Proof. exact (eq_refl (term128 _90715 _90724 t f g x)). Qed.
Lemma lem3494024 {_90715 _90724 : Type'} (t : _90724 -> Prop) (f : _90715 -> _90724) (g : type686 _90715) : (term130 _90715 _90724 t f g) = (term127 _90715 _90724 t f g).
Proof. exact (fun_ext (fun x : _90715 -> Prop => @lem3494023 _90715 _90724 t f x g)). Qed.
Lemma lem3494025 {_90715 : Type'} : (@ex (_90715 -> Prop)) = (@ex (_90715 -> Prop)).
Proof. exact (eq_refl (@ex (_90715 -> Prop))). Qed.
Lemma lem3494026 {_90715 _90724 : Type'} (t : _90724 -> Prop) (f : _90715 -> _90724) (g : type686 _90715) : (term131 _90715 _90724 t f g) = (term102 _90715 _90724 t f g).
Proof. exact (MK_COMB (@lem3494025 _90715) (@lem3494024 _90715 _90724 t f g)). Qed.
Lemma lem3494027 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem3494028 {_90715 _90724 : Type'} (t : _90724 -> Prop) (f : _90715 -> _90724) (g : type686 _90715) : (term132 _90715 _90724 t f g) = (term104 _90715 _90724 t f g).
Proof. exact (MK_COMB (@lem3494027) (@lem3494026 _90715 _90724 t f g)). Qed.
Lemma lem3494029 {_90724 : Type'} (x : _90724) (t : _90724 -> Prop) : (@IN _90724 x t) = (@IN _90724 x t).
Proof. exact (eq_refl (@IN _90724 x t)). Qed.
Lemma lem3494030 {_90715 _90724 : Type'} (f : _90715 -> _90724) (g : type686 _90715) (x : _90724) (t : _90724 -> Prop) : (term125 _90715 _90724 f g x t) = (term106 _90715 _90724 f g x t).
Proof. exact (MK_COMB (@lem3494028 _90715 _90724 t f g) (@lem3494029 _90724 x t)). Qed.
Lemma lem3494031 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem3494032 {_90715 _90724 : Type'} (f : _90715 -> _90724) (g : type686 _90715) (x : _90724) (t : _90724 -> Prop) : (term133 _90715 _90724 f g x t) = (term134 _90715 _90724 f g x t).
Proof. exact (MK_COMB (@lem3494031) (@lem3494030 _90715 _90724 f g x t)). Qed.
Lemma lem3494033 {_90715 _90724 : Type'} (t : _90724 -> Prop) (f : _90715 -> _90724) (x : _90715 -> Prop) (g : type686 _90715) : (term128 _90715 _90724 t f g x) = (term129 _90715 _90724 t f x g).
Proof. exact (eq_refl (term128 _90715 _90724 t f g x)). Qed.
Lemma lem3494034 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem3494035 {_90715 _90724 : Type'} (t : _90724 -> Prop) (f : _90715 -> _90724) (x : _90715 -> Prop) (g : type686 _90715) : (term135 _90715 _90724 t f g x) = (term136 _90715 _90724 t f x g).
Proof. exact (MK_COMB (@lem3494034) (@lem3494033 _90715 _90724 t f x g)). Qed.
Lemma lem3494036 {_90724 : Type'} (x : _90724) (t : _90724 -> Prop) : (@IN _90724 x t) = (@IN _90724 x t).
Proof. exact (eq_refl (@IN _90724 x t)). Qed.
Lemma lem3494037 {_90715 _90724 : Type'} (f : _90715 -> _90724) (x : _90715 -> Prop) (g : type686 _90715) (x' : _90724) (t : _90724 -> Prop) : (term137 _90715 _90724 f g x x' t) = (term138 _90715 _90724 f x g x' t).
Proof. exact (MK_COMB (@lem3494035 _90715 _90724 t f x g) (@lem3494036 _90724 x' t)). Qed.
Lemma lem3494038 {_90715 _90724 : Type'} (f : _90715 -> _90724) (g : type686 _90715) (x : _90724) (t : _90724 -> Prop) : (term139 _90715 _90724 f g x t) = (term140 _90715 _90724 f g x t).
Proof. exact (fun_ext (fun x' : _90715 -> Prop => @lem3494037 _90715 _90724 f x' g x t)). Qed.
Lemma lem3494039 {_90715 : Type'} : (@all (_90715 -> Prop)) = (@all (_90715 -> Prop)).
Proof. exact (eq_refl (@all (_90715 -> Prop))). Qed.
Lemma lem3494040 {_90715 _90724 : Type'} (f : _90715 -> _90724) (g : type686 _90715) (x : _90724) (t : _90724 -> Prop) : (term126 _90715 _90724 f g x t) = (term141 _90715 _90724 f g x t).
Proof. exact (MK_COMB (@lem3494039 _90715) (@lem3494038 _90715 _90724 f g x t)). Qed.
Lemma lem3494041 {_90715 _90724 : Type'} (f : _90715 -> _90724) (g : type686 _90715) (x : _90724) (t : _90724 -> Prop) : ((term125 _90715 _90724 f g x t) = (term126 _90715 _90724 f g x t)) = ((term106 _90715 _90724 f g x t) = (term141 _90715 _90724 f g x t)).
Proof. exact (MK_COMB (@lem3494032 _90715 _90724 f g x t) (@lem3494040 _90715 _90724 f g x t)). Qed.
Lemma lem3494042 {_90715 _90724 : Type'} (f : _90715 -> _90724) (g : type686 _90715) (x : _90724) (t : _90724 -> Prop) : (term106 _90715 _90724 f g x t) = (term141 _90715 _90724 f g x t).
Proof. exact (EQ_MP (@lem3494041 _90715 _90724 f g x t) (@lem3494022 _90715 _90724 f g x t)). Qed.
Lemma lem3494053 {_90715 _90724 : Type'} (f : _90715 -> _90724) (g : type686 _90715) (x : _90724) : (term108 _90715 _90724 f g x) = (term142 _90715 _90724 f g x).
Proof. exact (fun_ext (fun t : _90724 -> Prop => @lem3494042 _90715 _90724 f g x t)). Qed.
Lemma lem3494054 {_90724 : Type'} : (@all (_90724 -> Prop)) = (@all (_90724 -> Prop)).
Proof. exact (eq_refl (@all (_90724 -> Prop))). Qed.
Lemma lem3494055 {_90715 _90724 : Type'} (f : _90715 -> _90724) (g : type686 _90715) (x : _90724) : (term109 _90715 _90724 f g x) = (term143 _90715 _90724 f g x).
Proof. exact (MK_COMB (@lem3494054 _90724) (@lem3494053 _90715 _90724 f g x)). Qed.
Lemma lem3494060 {_90715 _90724 : Type'} (x : _90724) (f : _90715 -> _90724) (g : type686 _90715) : (term95 _90715 _90724 x f g) = (term95 _90715 _90724 x f g).
Proof. exact (eq_refl (term95 _90715 _90724 x f g)). Qed.
Lemma lem3494061 {_90715 _90724 : Type'} (f : _90715 -> _90724) (g : type686 _90715) (x : _90724) : ((term93 _90715 _90724 x f g) = (term109 _90715 _90724 f g x)) = ((term93 _90715 _90724 x f g) = (term143 _90715 _90724 f g x)).
Proof. exact (MK_COMB (@lem3494060 _90715 _90724 x f g) (@lem3494055 _90715 _90724 f g x)). Qed.
Lemma lem3494064 {_90715 _90724 : Type'} (f : _90715 -> _90724) (g : type686 _90715) : (term111 _90715 _90724 f g) = (term144 _90715 _90724 f g).
Proof. exact (fun_ext (fun x : _90724 => @lem3494061 _90715 _90724 f g x)). Qed.
Lemma lem3494065 {_90724 : Type'} : (@all _90724) = (@all _90724).
Proof. exact (eq_refl (@all _90724)). Qed.
Lemma lem3494066 {_90715 _90724 : Type'} (f : _90715 -> _90724) (g : type686 _90715) : (term112 _90715 _90724 f g) = (term145 _90715 _90724 f g).
Proof. exact (MK_COMB (@lem3494065 _90724) (@lem3494064 _90715 _90724 f g)). Qed.
Lemma lem3494071 {_90715 _90724 : Type'} (u : _90715 -> Prop) (f : _90715 -> _90724) (g : type686 _90715) : (term113 _90715 _90724 u f g) = (term146 _90715 _90724 u f g).
Proof. exact (MK_COMB (@lem3493994 _90715 _90724 g u f) (@lem3494066 _90715 _90724 f g)). Qed.
Lemma lem3494074 {_90715 _90724 : Type'} (u : _90715 -> Prop) (f : _90715 -> _90724) (g : type686 _90715) : (term146 _90715 _90724 u f g) = (term113 _90715 _90724 u f g).
Proof. exact (SYM (@lem3494071 _90715 _90724 u f g)). Qed.
Lemma lem3494126 {A B : Type'} (P : type1413 A B) : (term12 A B P) = (term13 A B P).
Proof. exact (EQ_MP (@lem3493648 A B P) (@lem3493647 A B P)). Qed.
Lemma lem3494127 {_90715 _90724 : Type'} (P : type841 _90715 _90724) : (term147 _90715 _90724 P) = (term148 _90715 _90724 P).
Proof. exact (@lem3494126 (_90724 -> Prop) (_90715 -> Prop) P). Qed.
Lemma lem3494128 {_90715 _90724 : Type'} (f : _90715 -> _90724) (g : type686 _90715) (x : _90724) : (term149 _90715 _90724 f g x) = (term150 _90715 _90724 f g x).
Proof. exact (@lem3494127 _90715 _90724 (term151 _90715 _90724 f g x)). Qed.
Lemma lem3494129 {_90715 _90724 : Type'} (f : _90715 -> _90724) (g : type686 _90715) (x : _90724) (t : _90724 -> Prop) : (term152 _90715 _90724 f g x t) = (term140 _90715 _90724 f g x t).
Proof. exact (eq_refl (term152 _90715 _90724 f g x t)). Qed.
Lemma lem3494130 {_90715 : Type'} (x : _90715 -> Prop) : x = x.
Proof. exact (eq_refl x). Qed.
Lemma lem3494131 {_90715 _90724 : Type'} (f : _90715 -> _90724) (g : type686 _90715) (x : _90724) (t : _90724 -> Prop) (x' : _90715 -> Prop) : (term153 _90715 _90724 f g x t x') = (term154 _90715 _90724 f g x t x').
Proof. exact (MK_COMB (@lem3494129 _90715 _90724 f g x t) (@lem3494130 _90715 x')). Qed.
Lemma lem3494132 {_90715 _90724 : Type'} (f : _90715 -> _90724) (x : _90715 -> Prop) (g : type686 _90715) (x' : _90724) (t : _90724 -> Prop) : (term154 _90715 _90724 f g x' t x) = (term138 _90715 _90724 f x g x' t).
Proof. exact (eq_refl (term154 _90715 _90724 f g x' t x)). Qed.
Lemma lem3494133 {_90715 _90724 : Type'} (f : _90715 -> _90724) (x : _90715 -> Prop) (g : type686 _90715) (x' : _90724) (t : _90724 -> Prop) : (term153 _90715 _90724 f g x' t x) = (term138 _90715 _90724 f x g x' t).
Proof. exact (TRANS (@lem3494131 _90715 _90724 f g x' t x) (@lem3494132 _90715 _90724 f x g x' t)). Qed.
Lemma lem3494134 {_90715 _90724 : Type'} (f : _90715 -> _90724) (g : type686 _90715) (x : _90724) (t : _90724 -> Prop) : (term155 _90715 _90724 f g x t) = (term140 _90715 _90724 f g x t).
Proof. exact (fun_ext (fun x' : _90715 -> Prop => @lem3494133 _90715 _90724 f x' g x t)). Qed.
Lemma lem3494135 {_90715 : Type'} : (@all (_90715 -> Prop)) = (@all (_90715 -> Prop)).
Proof. exact (eq_refl (@all (_90715 -> Prop))). Qed.
Lemma lem3494136 {_90715 _90724 : Type'} (f : _90715 -> _90724) (g : type686 _90715) (x : _90724) (t : _90724 -> Prop) : (term156 _90715 _90724 f g x t) = (term141 _90715 _90724 f g x t).
Proof. exact (MK_COMB (@lem3494135 _90715) (@lem3494134 _90715 _90724 f g x t)). Qed.
Lemma lem3494137 {_90715 _90724 : Type'} (f : _90715 -> _90724) (g : type686 _90715) (x : _90724) : (term157 _90715 _90724 f g x) = (term142 _90715 _90724 f g x).
Proof. exact (fun_ext (fun t : _90724 -> Prop => @lem3494136 _90715 _90724 f g x t)). Qed.
Lemma lem3494138 {_90724 : Type'} : (@all (_90724 -> Prop)) = (@all (_90724 -> Prop)).
Proof. exact (eq_refl (@all (_90724 -> Prop))). Qed.
Lemma lem3494139 {_90715 _90724 : Type'} (f : _90715 -> _90724) (g : type686 _90715) (x : _90724) : (term149 _90715 _90724 f g x) = (term143 _90715 _90724 f g x).
Proof. exact (MK_COMB (@lem3494138 _90724) (@lem3494137 _90715 _90724 f g x)). Qed.
Lemma lem3494140 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem3494141 {_90715 _90724 : Type'} (f : _90715 -> _90724) (g : type686 _90715) (x : _90724) : (term158 _90715 _90724 f g x) = (term159 _90715 _90724 f g x).
Proof. exact (MK_COMB (@lem3494140) (@lem3494139 _90715 _90724 f g x)). Qed.
Lemma lem3494142 {_90715 _90724 : Type'} (f : _90715 -> _90724) (g : type686 _90715) (x : _90724) (t : _90724 -> Prop) : (term152 _90715 _90724 f g x t) = (term140 _90715 _90724 f g x t).
Proof. exact (eq_refl (term152 _90715 _90724 f g x t)). Qed.
Lemma lem3494143 {_90715 : Type'} (x : _90715 -> Prop) : x = x.
Proof. exact (eq_refl x). Qed.
Lemma lem3494144 {_90715 _90724 : Type'} (f : _90715 -> _90724) (g : type686 _90715) (x : _90724) (t : _90724 -> Prop) (x' : _90715 -> Prop) : (term153 _90715 _90724 f g x t x') = (term154 _90715 _90724 f g x t x').
Proof. exact (MK_COMB (@lem3494142 _90715 _90724 f g x t) (@lem3494143 _90715 x')). Qed.
Lemma lem3494145 {_90715 _90724 : Type'} (f : _90715 -> _90724) (x : _90715 -> Prop) (g : type686 _90715) (x' : _90724) (t : _90724 -> Prop) : (term154 _90715 _90724 f g x' t x) = (term138 _90715 _90724 f x g x' t).
Proof. exact (eq_refl (term154 _90715 _90724 f g x' t x)). Qed.
Lemma lem3494146 {_90715 _90724 : Type'} (f : _90715 -> _90724) (x : _90715 -> Prop) (g : type686 _90715) (x' : _90724) (t : _90724 -> Prop) : (term153 _90715 _90724 f g x' t x) = (term138 _90715 _90724 f x g x' t).
Proof. exact (TRANS (@lem3494144 _90715 _90724 f g x' t x) (@lem3494145 _90715 _90724 f x g x' t)). Qed.
Lemma lem3494147 {_90715 _90724 : Type'} (f : _90715 -> _90724) (x : _90715 -> Prop) (g : type686 _90715) (x' : _90724) : (term160 _90715 _90724 f g x' x) = (term161 _90715 _90724 f x g x').
Proof. exact (fun_ext (fun t : _90724 -> Prop => @lem3494146 _90715 _90724 f x g x' t)). Qed.
Lemma lem3494148 {_90724 : Type'} : (@all (_90724 -> Prop)) = (@all (_90724 -> Prop)).
Proof. exact (eq_refl (@all (_90724 -> Prop))). Qed.
Lemma lem3494149 {_90715 _90724 : Type'} (f : _90715 -> _90724) (x : _90715 -> Prop) (g : type686 _90715) (x' : _90724) : (term162 _90715 _90724 f g x' x) = (term163 _90715 _90724 f x g x').
Proof. exact (MK_COMB (@lem3494148 _90724) (@lem3494147 _90715 _90724 f x g x')). Qed.
Lemma lem3494150 {_90715 _90724 : Type'} (f : _90715 -> _90724) (g : type686 _90715) (x : _90724) : (term164 _90715 _90724 f g x) = (term165 _90715 _90724 f g x).
Proof. exact (fun_ext (fun x' : _90715 -> Prop => @lem3494149 _90715 _90724 f x' g x)). Qed.
Lemma lem3494151 {_90715 : Type'} : (@all (_90715 -> Prop)) = (@all (_90715 -> Prop)).
Proof. exact (eq_refl (@all (_90715 -> Prop))). Qed.
Lemma lem3494152 {_90715 _90724 : Type'} (f : _90715 -> _90724) (g : type686 _90715) (x : _90724) : (term150 _90715 _90724 f g x) = (term166 _90715 _90724 f g x).
Proof. exact (MK_COMB (@lem3494151 _90715) (@lem3494150 _90715 _90724 f g x)). Qed.
Lemma lem3494153 {_90715 _90724 : Type'} (f : _90715 -> _90724) (g : type686 _90715) (x : _90724) : ((term149 _90715 _90724 f g x) = (term150 _90715 _90724 f g x)) = ((term143 _90715 _90724 f g x) = (term166 _90715 _90724 f g x)).
Proof. exact (MK_COMB (@lem3494141 _90715 _90724 f g x) (@lem3494152 _90715 _90724 f g x)). Qed.
Lemma lem3494154 {_90715 _90724 : Type'} (f : _90715 -> _90724) (g : type686 _90715) (x : _90724) : (term143 _90715 _90724 f g x) = (term166 _90715 _90724 f g x).
Proof. exact (EQ_MP (@lem3494153 _90715 _90724 f g x) (@lem3494128 _90715 _90724 f g x)). Qed.
Lemma lem3494155 {_90715 _90724 : Type'} (x : _90724) (f : _90715 -> _90724) (g : type686 _90715) : (term95 _90715 _90724 x f g) = (term95 _90715 _90724 x f g).
Proof. exact (eq_refl (term95 _90715 _90724 x f g)). Qed.
Lemma lem3494156 {_90715 _90724 : Type'} (f : _90715 -> _90724) (g : type686 _90715) (x : _90724) : ((term93 _90715 _90724 x f g) = (term143 _90715 _90724 f g x)) = ((term93 _90715 _90724 x f g) = (term166 _90715 _90724 f g x)).
Proof. exact (MK_COMB (@lem3494155 _90715 _90724 x f g) (@lem3494154 _90715 _90724 f g x)). Qed.
Lemma lem3494157 {_90715 _90724 : Type'} (f : _90715 -> _90724) (g : type686 _90715) : (term144 _90715 _90724 f g) = (term167 _90715 _90724 f g).
Proof. exact (fun_ext (fun x : _90724 => @lem3494156 _90715 _90724 f g x)). Qed.
Lemma lem3494158 {_90724 : Type'} : (@all _90724) = (@all _90724).
Proof. exact (eq_refl (@all _90724)). Qed.
Lemma lem3494159 {_90715 _90724 : Type'} (f : _90715 -> _90724) (g : type686 _90715) : (term145 _90715 _90724 f g) = (term168 _90715 _90724 f g).
Proof. exact (MK_COMB (@lem3494158 _90724) (@lem3494157 _90715 _90724 f g)). Qed.
Lemma lem3494160 {_90715 _90724 : Type'} (g : type686 _90715) (u : _90715 -> Prop) (f : _90715 -> _90724) : (term122 _90715 _90724 g u f) = (term122 _90715 _90724 g u f).
Proof. exact (eq_refl (term122 _90715 _90724 g u f)). Qed.
Lemma lem3494161 {_90715 _90724 : Type'} (u : _90715 -> Prop) (f : _90715 -> _90724) (g : type686 _90715) : (term146 _90715 _90724 u f g) = (term169 _90715 _90724 u f g).
Proof. exact (MK_COMB (@lem3494160 _90715 _90724 g u f) (@lem3494159 _90715 _90724 f g)). Qed.
Lemma lem3494162 {_90715 _90724 : Type'} (u : _90715 -> Prop) (f : _90715 -> _90724) (g : type686 _90715) : (term169 _90715 _90724 u f g) = (term146 _90715 _90724 u f g).
Proof. exact (SYM (@lem3494161 _90715 _90724 u f g)). Qed.
Lemma lem3494164 (p : Prop) (q : Prop) (r : Prop) : (term170 p q r) = (term171 p q r).
Proof. exact (EQ_MP (@lem886 p q r) (@lem885 p q r)). Qed.
Lemma lem3494165 {_90715 _90724 : Type'} (u : _90715 -> Prop) (f : _90715 -> _90724) (g : type686 _90715) : (term169 _90715 _90724 u f g) = (term172 _90715 _90724 u f g).
Proof. exact (@lem3494164 (term119 _90715 g) (term83 _90715 _90724 g u f) (term168 _90715 _90724 f g)). Qed.
Lemma lem3494225 (p : Prop) (q : Prop) (r : Prop) : (term170 p q r) = (term171 p q r).
Proof. exact (EQ_MP (@lem886 p q r) (@lem885 p q r)). Qed.
Lemma lem3494226 {_90715 _90724 : Type'} (f : _90715 -> _90724) (x : _90715 -> Prop) (g : type686 _90715) (x' : _90724) (t : _90724 -> Prop) : (term138 _90715 _90724 f x g x' t) = (term173 _90715 _90724 f x g x' t).
Proof. exact (@lem3494225 (t = (@IMAGE _90715 _90724 f x)) (@IN (_90715 -> Prop) x g) (@IN _90724 x' t)). Qed.
Lemma lem3494235 {_90715 _90724 : Type'} (f : _90715 -> _90724) (x : _90715 -> Prop) (g : type686 _90715) (x' : _90724) : (term161 _90715 _90724 f x g x') = (term174 _90715 _90724 f x g x').
Proof. exact (fun_ext (fun t : _90724 -> Prop => @lem3494226 _90715 _90724 f x g x' t)). Qed.
Lemma lem3494236 {_90724 : Type'} : (@all (_90724 -> Prop)) = (@all (_90724 -> Prop)).
Proof. exact (eq_refl (@all (_90724 -> Prop))). Qed.
Lemma lem3494237 {_90715 _90724 : Type'} (f : _90715 -> _90724) (x : _90715 -> Prop) (g : type686 _90715) (x' : _90724) : (term163 _90715 _90724 f x g x') = (term175 _90715 _90724 f x g x').
Proof. exact (MK_COMB (@lem3494236 _90724) (@lem3494235 _90715 _90724 f x g x')). Qed.
Lemma lem3494239 {A : Type'} (P : A -> Prop) (a : A) : (term10 A a P) = (P a).
Proof. exact (EQ_MP (@lem3493645 A P a) (@lem3493644 A P a)). Qed.
Lemma lem3494240 {_90724 : Type'} (P : type686 _90724) (a : _90724 -> Prop) : (term176 _90724 a P) = (P a).
Proof. exact (@lem3494239 (_90724 -> Prop) P a). Qed.
Lemma lem3494241 {_90715 _90724 : Type'} (g : type686 _90715) (x : _90724) (f : _90715 -> _90724) (x' : _90715 -> Prop) : (term177 _90715 _90724 f x' g x) = (term178 _90715 _90724 g x f x').
Proof. exact (@lem3494240 _90724 (term179 _90715 _90724 x' g x) (@IMAGE _90715 _90724 f x')). Qed.
Lemma lem3494242 {_90715 _90724 : Type'} (x : _90715 -> Prop) (g : type686 _90715) (x' : _90724) (t : _90724 -> Prop) : (term180 _90715 _90724 x g x' t) = (term181 _90715 _90724 x g x' t).
Proof. exact (eq_refl (term180 _90715 _90724 x g x' t)). Qed.
Lemma lem3494243 {_90715 _90724 : Type'} (t : _90724 -> Prop) (f : _90715 -> _90724) (x : _90715 -> Prop) : (term182 _90715 _90724 t f x) = (term182 _90715 _90724 t f x).
Proof. exact (eq_refl (term182 _90715 _90724 t f x)). Qed.
Lemma lem3494244 {_90715 _90724 : Type'} (f : _90715 -> _90724) (x : _90715 -> Prop) (g : type686 _90715) (x' : _90724) (t : _90724 -> Prop) : (term183 _90715 _90724 f x g x' t) = (term173 _90715 _90724 f x g x' t).
Proof. exact (MK_COMB (@lem3494243 _90715 _90724 t f x) (@lem3494242 _90715 _90724 x g x' t)). Qed.
Lemma lem3494245 {_90715 _90724 : Type'} (f : _90715 -> _90724) (x : _90715 -> Prop) (g : type686 _90715) (x' : _90724) : (term184 _90715 _90724 f x g x') = (term174 _90715 _90724 f x g x').
Proof. exact (fun_ext (fun t : _90724 -> Prop => @lem3494244 _90715 _90724 f x g x' t)). Qed.
Lemma lem3494246 {_90724 : Type'} : (@all (_90724 -> Prop)) = (@all (_90724 -> Prop)).
Proof. exact (eq_refl (@all (_90724 -> Prop))). Qed.
Lemma lem3494247 {_90715 _90724 : Type'} (f : _90715 -> _90724) (x : _90715 -> Prop) (g : type686 _90715) (x' : _90724) : (term177 _90715 _90724 f x g x') = (term175 _90715 _90724 f x g x').
Proof. exact (MK_COMB (@lem3494246 _90724) (@lem3494245 _90715 _90724 f x g x')). Qed.
Lemma lem3494248 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem3494249 {_90715 _90724 : Type'} (f : _90715 -> _90724) (x : _90715 -> Prop) (g : type686 _90715) (x' : _90724) : (term185 _90715 _90724 f x g x') = (term186 _90715 _90724 f x g x').
Proof. exact (MK_COMB (@lem3494248) (@lem3494247 _90715 _90724 f x g x')). Qed.
Lemma lem3494250 {_90715 _90724 : Type'} (g : type686 _90715) (x : _90724) (f : _90715 -> _90724) (x' : _90715 -> Prop) : (term178 _90715 _90724 g x f x') = (term187 _90715 _90724 g x f x').
Proof. exact (eq_refl (term178 _90715 _90724 g x f x')). Qed.
Lemma lem3494251 {_90715 _90724 : Type'} (g : type686 _90715) (x : _90724) (f : _90715 -> _90724) (x' : _90715 -> Prop) : ((term177 _90715 _90724 f x' g x) = (term178 _90715 _90724 g x f x')) = ((term175 _90715 _90724 f x' g x) = (term187 _90715 _90724 g x f x')).
Proof. exact (MK_COMB (@lem3494249 _90715 _90724 f x' g x) (@lem3494250 _90715 _90724 g x f x')). Qed.
Lemma lem3494252 {_90715 _90724 : Type'} (g : type686 _90715) (x : _90724) (f : _90715 -> _90724) (x' : _90715 -> Prop) : (term175 _90715 _90724 f x' g x) = (term187 _90715 _90724 g x f x').
Proof. exact (EQ_MP (@lem3494251 _90715 _90724 g x f x') (@lem3494241 _90715 _90724 g x f x')). Qed.
Lemma lem3494255 {_90715 _90724 : Type'} (g : type686 _90715) (x : _90724) (f : _90715 -> _90724) (x' : _90715 -> Prop) : (term163 _90715 _90724 f x' g x) = (term187 _90715 _90724 g x f x').
Proof. exact (TRANS (@lem3494237 _90715 _90724 f x' g x) (@lem3494252 _90715 _90724 g x f x')). Qed.
Lemma lem3494256 {_90715 _90724 : Type'} (g : type686 _90715) (x : _90724) (f : _90715 -> _90724) : (term165 _90715 _90724 f g x) = (term188 _90715 _90724 g x f).
Proof. exact (fun_ext (fun x' : _90715 -> Prop => @lem3494255 _90715 _90724 g x f x')). Qed.
Lemma lem3494257 {_90715 : Type'} : (@all (_90715 -> Prop)) = (@all (_90715 -> Prop)).
Proof. exact (eq_refl (@all (_90715 -> Prop))). Qed.
Lemma lem3494258 {_90715 _90724 : Type'} (g : type686 _90715) (x : _90724) (f : _90715 -> _90724) : (term166 _90715 _90724 f g x) = (term189 _90715 _90724 g x f).
Proof. exact (MK_COMB (@lem3494257 _90715) (@lem3494256 _90715 _90724 g x f)). Qed.
Lemma lem3494263 {_90715 _90724 : Type'} (x : _90724) (f : _90715 -> _90724) (g : type686 _90715) : (term95 _90715 _90724 x f g) = (term95 _90715 _90724 x f g).
Proof. exact (eq_refl (term95 _90715 _90724 x f g)). Qed.
Lemma lem3494264 {_90715 _90724 : Type'} (g : type686 _90715) (x : _90724) (f : _90715 -> _90724) : ((term93 _90715 _90724 x f g) = (term166 _90715 _90724 f g x)) = ((term93 _90715 _90724 x f g) = (term189 _90715 _90724 g x f)).
Proof. exact (MK_COMB (@lem3494263 _90715 _90724 x f g) (@lem3494258 _90715 _90724 g x f)). Qed.
Lemma lem3494267 {_90715 _90724 : Type'} (g : type686 _90715) (f : _90715 -> _90724) : (term167 _90715 _90724 f g) = (term190 _90715 _90724 g f).
Proof. exact (fun_ext (fun x : _90724 => @lem3494264 _90715 _90724 g x f)). Qed.
Lemma lem3494268 {_90724 : Type'} : (@all _90724) = (@all _90724).
Proof. exact (eq_refl (@all _90724)). Qed.
Lemma lem3494269 {_90715 _90724 : Type'} (g : type686 _90715) (f : _90715 -> _90724) : (term168 _90715 _90724 f g) = (term191 _90715 _90724 g f).
Proof. exact (MK_COMB (@lem3494268 _90724) (@lem3494267 _90715 _90724 g f)). Qed.
Lemma lem3494274 {_90715 _90724 : Type'} (g : type686 _90715) (u : _90715 -> Prop) (f : _90715 -> _90724) : (term192 _90715 _90724 g u f) = (term192 _90715 _90724 g u f).
Proof. exact (eq_refl (term192 _90715 _90724 g u f)). Qed.
Lemma lem3494275 {_90715 _90724 : Type'} (u : _90715 -> Prop) (g : type686 _90715) (f : _90715 -> _90724) : (term193 _90715 _90724 u f g) = (term194 _90715 _90724 u g f).
Proof. exact (MK_COMB (@lem3494274 _90715 _90724 g u f) (@lem3494269 _90715 _90724 g f)). Qed.
Lemma lem3494278 {_90715 : Type'} (g : type686 _90715) : (term195 _90715 g) = (term195 _90715 g).
Proof. exact (eq_refl (term195 _90715 g)). Qed.
Lemma lem3494279 {_90715 _90724 : Type'} (u : _90715 -> Prop) (g : type686 _90715) (f : _90715 -> _90724) : (term172 _90715 _90724 u f g) = (term196 _90715 _90724 u g f).
Proof. exact (MK_COMB (@lem3494278 _90715 g) (@lem3494275 _90715 _90724 u g f)). Qed.
Lemma lem3494282 {_90715 _90724 : Type'} (u : _90715 -> Prop) (g : type686 _90715) (f : _90715 -> _90724) : (term169 _90715 _90724 u f g) = (term196 _90715 _90724 u g f).
Proof. exact (TRANS (@lem3494165 _90715 _90724 u f g) (@lem3494279 _90715 _90724 u g f)). Qed.
Lemma lem3494283 {_90715 _90724 : Type'} (u : _90715 -> Prop) (f : _90715 -> _90724) (g : type686 _90715) : (term196 _90715 _90724 u g f) = (term169 _90715 _90724 u f g).
Proof. exact (SYM (@lem3494282 _90715 _90724 u g f)). Qed.
Lemma lem3494301 {A : Type'} (s : A -> Prop) (t : A -> Prop) : (@SUBSET A s t) = (term197 A s t).
Proof. exact (EQ_MP (@lem3211751 A s t) (@lem3211750 A s t)). Qed.
Lemma lem3494302 {_90715 : Type'} (s : _90715 -> Prop) (t : _90715 -> Prop) : (@SUBSET _90715 s t) = (term197 _90715 s t).
Proof. exact (@lem3494301 _90715 s t). Qed.
Lemma lem3494303 {_90715 : Type'} (t : _90715 -> Prop) (u : _90715 -> Prop) : (@SUBSET _90715 t u) = (term197 _90715 t u).
Proof. exact (@lem3494302 _90715 t u). Qed.
Lemma lem3494310 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem3494311 {_90715 : Type'} (t : _90715 -> Prop) (u : _90715 -> Prop) : (term75 _90715 t u) = (term198 _90715 t u).
Proof. exact (MK_COMB (@lem3494310) (@lem3494303 _90715 t u)). Qed.
Lemma lem3494313 {A : Type'} (s : A -> Prop) (t : A -> Prop) : (@SUBSET A s t) = (term197 A s t).
Proof. exact (EQ_MP (@lem3211751 A s t) (@lem3211750 A s t)). Qed.
Lemma lem3494314 {_90715 : Type'} (s : _90715 -> Prop) (t : _90715 -> Prop) : (@SUBSET _90715 s t) = (term197 _90715 s t).
Proof. exact (@lem3494313 _90715 s t). Qed.
Lemma lem3494315 {_90715 _90724 : Type'} (u : _90715 -> Prop) (f : _90715 -> _90724) (t : _90715 -> Prop) : (term74 _90715 _90724 u f t) = (term199 _90715 _90724 u f t).
Proof. exact (@lem3494314 _90715 (term70 _90715 _90724 u f t) t). Qed.
Lemma lem3494338 {_90715 _90724 : Type'} (u : _90715 -> Prop) (f : _90715 -> _90724) (t : _90715 -> Prop) : (term77 _90715 _90724 u f t) = (term200 _90715 _90724 u f t).
Proof. exact (MK_COMB (@lem3494311 _90715 t u) (@lem3494315 _90715 _90724 u f t)). Qed.
Lemma lem3494341 {_90715 : Type'} (t : _90715 -> Prop) (g : type686 _90715) : (term78 _90715 t g) = (term78 _90715 t g).
Proof. exact (eq_refl (term78 _90715 t g)). Qed.
Lemma lem3494342 {_90715 _90724 : Type'} (g : type686 _90715) (u : _90715 -> Prop) (f : _90715 -> _90724) (t : _90715 -> Prop) : (term80 _90715 _90724 g u f t) = (term201 _90715 _90724 g u f t).
Proof. exact (MK_COMB (@lem3494341 _90715 t g) (@lem3494338 _90715 _90724 u f t)). Qed.
Lemma lem3494345 {_90715 _90724 : Type'} (g : type686 _90715) (u : _90715 -> Prop) (f : _90715 -> _90724) : (term82 _90715 _90724 g u f) = (term202 _90715 _90724 g u f).
Proof. exact (fun_ext (fun t : _90715 -> Prop => @lem3494342 _90715 _90724 g u f t)). Qed.
Lemma lem3494346 {_90715 : Type'} : (@all (_90715 -> Prop)) = (@all (_90715 -> Prop)).
Proof. exact (eq_refl (@all (_90715 -> Prop))). Qed.
Lemma lem3494347 {_90715 _90724 : Type'} (g : type686 _90715) (u : _90715 -> Prop) (f : _90715 -> _90724) : (term83 _90715 _90724 g u f) = (term203 _90715 _90724 g u f).
Proof. exact (MK_COMB (@lem3494346 _90715) (@lem3494345 _90715 _90724 g u f)). Qed.
Lemma lem3494352 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem3494353 {_90715 _90724 : Type'} (g : type686 _90715) (u : _90715 -> Prop) (f : _90715 -> _90724) : (term192 _90715 _90724 g u f) = (term204 _90715 _90724 g u f).
Proof. exact (MK_COMB (@lem3494352) (@lem3494347 _90715 _90724 g u f)). Qed.
Lemma lem3494384 {_90715 _90724 : Type'} (g : type686 _90715) (f : _90715 -> _90724) : (term191 _90715 _90724 g f) = (term191 _90715 _90724 g f).
Proof. exact (eq_refl (term191 _90715 _90724 g f)). Qed.
Lemma lem3494385 {_90715 _90724 : Type'} (u : _90715 -> Prop) (g : type686 _90715) (f : _90715 -> _90724) : (term194 _90715 _90724 u g f) = (term205 _90715 _90724 u g f).
Proof. exact (MK_COMB (@lem3494353 _90715 _90724 g u f) (@lem3494384 _90715 _90724 g f)). Qed.
Lemma lem3494388 {_90715 : Type'} (g : type686 _90715) : (term195 _90715 g) = (term195 _90715 g).
Proof. exact (eq_refl (term195 _90715 g)). Qed.
Lemma lem3494389 {_90715 _90724 : Type'} (u : _90715 -> Prop) (g : type686 _90715) (f : _90715 -> _90724) : (term196 _90715 _90724 u g f) = (term206 _90715 _90724 u g f).
Proof. exact (MK_COMB (@lem3494388 _90715 g) (@lem3494385 _90715 _90724 u g f)). Qed.
Lemma lem3494392 {_90715 _90724 : Type'} (u : _90715 -> Prop) (g : type686 _90715) (f : _90715 -> _90724) : (term206 _90715 _90724 u g f) = (term196 _90715 _90724 u g f).
Proof. exact (SYM (@lem3494389 _90715 _90724 u g f)). Qed.
Lemma lem3494400 {A : Type'} (P : A -> Prop) (x : A) : (@IN A x P) = (P x).
Proof. exact (EQ_MP (@lem3211610 A P x) (@lem3211609 A P x)). Qed.
Lemma lem3494401 {_90715 : Type'} (P : type686 _90715) (x : _90715 -> Prop) : (@IN (_90715 -> Prop) x P) = (P x).
Proof. exact (@lem3494400 (_90715 -> Prop) P x). Qed.
Lemma lem3494402 {_90715 : Type'} (g : type686 _90715) (x : _90715 -> Prop) : (@IN (_90715 -> Prop) x g) = (g x).
Proof. exact (@lem3494401 _90715 g x). Qed.
Lemma lem3494403 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem3494404 {_90715 : Type'} (g : type686 _90715) (x : _90715 -> Prop) : (term115 _90715 x g) = (term207 _90715 g x).
Proof. exact (MK_COMB (@lem3494403) (@lem3494402 _90715 g x)). Qed.
Lemma lem3494405 {_90715 : Type'} (g : type686 _90715) : (term117 _90715 g) = (term208 _90715 g).
Proof. exact (fun_ext (fun x : _90715 -> Prop => @lem3494404 _90715 g x)). Qed.
Lemma lem3494406 {_90715 : Type'} : (@all (_90715 -> Prop)) = (@all (_90715 -> Prop)).
Proof. exact (eq_refl (@all (_90715 -> Prop))). Qed.
Lemma lem3494407 {_90715 : Type'} (g : type686 _90715) : (term118 _90715 g) = (term209 _90715 g).
Proof. exact (MK_COMB (@lem3494406 _90715) (@lem3494405 _90715 g)). Qed.
Lemma lem3494412 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem3494413 {_90715 : Type'} (g : type686 _90715) : (term119 _90715 g) = (term210 _90715 g).
Proof. exact (MK_COMB (@lem3494412) (@lem3494407 _90715 g)). Qed.
Lemma lem3494414 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem3494415 {_90715 : Type'} (g : type686 _90715) : (term195 _90715 g) = (term211 _90715 g).
Proof. exact (MK_COMB (@lem3494414) (@lem3494413 _90715 g)). Qed.
Lemma lem3494425 {A : Type'} (P : A -> Prop) (x : A) : (@IN A x P) = (P x).
Proof. exact (EQ_MP (@lem3211610 A P x) (@lem3211609 A P x)). Qed.
Lemma lem3494426 {_90715 : Type'} (P : type686 _90715) (x : _90715 -> Prop) : (@IN (_90715 -> Prop) x P) = (P x).
Proof. exact (@lem3494425 (_90715 -> Prop) P x). Qed.
Lemma lem3494427 {_90715 : Type'} (g : type686 _90715) (t : _90715 -> Prop) : (@IN (_90715 -> Prop) t g) = (g t).
Proof. exact (@lem3494426 _90715 g t). Qed.
Lemma lem3494428 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem3494429 {_90715 : Type'} (g : type686 _90715) (t : _90715 -> Prop) : (term78 _90715 t g) = (term212 _90715 g t).
Proof. exact (MK_COMB (@lem3494428) (@lem3494427 _90715 g t)). Qed.
Lemma lem3494439 {A : Type'} (P : A -> Prop) (x : A) : (@IN A x P) = (P x).
Proof. exact (EQ_MP (@lem3211610 A P x) (@lem3211609 A P x)). Qed.
Lemma lem3494440 {_90715 : Type'} (P : _90715 -> Prop) (x : _90715) : (@IN _90715 x P) = (P x).
Proof. exact (@lem3494439 _90715 P x). Qed.
Lemma lem3494441 {_90715 : Type'} (t : _90715 -> Prop) (x : _90715) : (@IN _90715 x t) = (t x).
Proof. exact (@lem3494440 _90715 t x). Qed.
Lemma lem3494442 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem3494443 {_90715 : Type'} (t : _90715 -> Prop) (x : _90715) : (term213 _90715 x t) = (term214 _90715 t x).
Proof. exact (MK_COMB (@lem3494442) (@lem3494441 _90715 t x)). Qed.
Lemma lem3494445 {A : Type'} (P : A -> Prop) (x : A) : (@IN A x P) = (P x).
Proof. exact (EQ_MP (@lem3211610 A P x) (@lem3211609 A P x)). Qed.
Lemma lem3494446 {_90715 : Type'} (P : _90715 -> Prop) (x : _90715) : (@IN _90715 x P) = (P x).
Proof. exact (@lem3494445 _90715 P x). Qed.
Lemma lem3494447 {_90715 : Type'} (u : _90715 -> Prop) (x : _90715) : (@IN _90715 x u) = (u x).
Proof. exact (@lem3494446 _90715 u x). Qed.
Lemma lem3494448 {_90715 : Type'} (t : _90715 -> Prop) (u : _90715 -> Prop) (x : _90715) : (term215 _90715 t x u) = (term216 _90715 t u x).
Proof. exact (MK_COMB (@lem3494443 _90715 t x) (@lem3494447 _90715 u x)). Qed.
Lemma lem3494451 {_90715 : Type'} (t : _90715 -> Prop) (u : _90715 -> Prop) : (term217 _90715 t u) = (term218 _90715 t u).
Proof. exact (fun_ext (fun x : _90715 => @lem3494448 _90715 t u x)). Qed.
Lemma lem3494452 {_90715 : Type'} : (@all _90715) = (@all _90715).
Proof. exact (eq_refl (@all _90715)). Qed.
Lemma lem3494453 {_90715 : Type'} (t : _90715 -> Prop) (u : _90715 -> Prop) : (term197 _90715 t u) = (term219 _90715 t u).
Proof. exact (MK_COMB (@lem3494452 _90715) (@lem3494451 _90715 t u)). Qed.
Lemma lem3494458 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem3494459 {_90715 : Type'} (t : _90715 -> Prop) (u : _90715 -> Prop) : (term198 _90715 t u) = (term220 _90715 t u).
Proof. exact (MK_COMB (@lem3494458) (@lem3494453 _90715 t u)). Qed.
Lemma lem3494467 {_83095 : Type'} (p : _83095 -> Prop) (x : _83095) : (term221 _83095 x p) = (p x).
Proof. exact (EQ_MP (@lem3211641 _83095 p x) (@lem3211640 _83095 p x)). Qed.
Lemma lem3494468 {_90715 : Type'} (p : _90715 -> Prop) (x : _90715) : (term221 _90715 x p) = (p x).
Proof. exact (@lem3494467 _90715 p x). Qed.
Lemma lem3494469 {_90715 _90724 : Type'} (u : _90715 -> Prop) (f : _90715 -> _90724) (t : _90715 -> Prop) (x : _90715) : (term222 _90715 _90724 x u f t) = (term223 _90715 _90724 u f t x).
Proof. exact (@lem3494468 _90715 (term224 _90715 _90724 u f t) x). Qed.
Lemma lem3494470 {_90715 _90724 : Type'} (u : _90715 -> Prop) (x : _90715) (f : _90715 -> _90724) (t : _90715 -> Prop) : (term223 _90715 _90724 u f t x) = (term58 _90715 _90724 u x f t).
Proof. exact (eq_refl (term223 _90715 _90724 u f t x)). Qed.
Lemma lem3494471 {_90715 : Type'} (GEN_PVAR_84 : _90715) : (@SETSPEC _90715 GEN_PVAR_84) = (@SETSPEC _90715 GEN_PVAR_84).
Proof. exact (eq_refl (@SETSPEC _90715 GEN_PVAR_84)). Qed.
Lemma lem3494472 {_90715 _90724 : Type'} (GEN_PVAR_84 : _90715) (u : _90715 -> Prop) (x : _90715) (f : _90715 -> _90724) (t : _90715 -> Prop) : (term225 _90715 _90724 GEN_PVAR_84 u f t x) = (term60 _90715 _90724 GEN_PVAR_84 u x f t).
Proof. exact (MK_COMB (@lem3494471 _90715 GEN_PVAR_84) (@lem3494470 _90715 _90724 u x f t)). Qed.
Lemma lem3494473 {_90715 : Type'} (x : _90715) : x = x.
Proof. exact (eq_refl x). Qed.
Lemma lem3494474 {_90715 _90724 : Type'} (GEN_PVAR_84 : _90715) (u : _90715 -> Prop) (f : _90715 -> _90724) (t : _90715 -> Prop) (x : _90715) : (term226 _90715 _90724 GEN_PVAR_84 u f t x) = (term62 _90715 _90724 GEN_PVAR_84 u f t x).
Proof. exact (MK_COMB (@lem3494472 _90715 _90724 GEN_PVAR_84 u x f t) (@lem3494473 _90715 x)). Qed.
Lemma lem3494475 {_90715 _90724 : Type'} (GEN_PVAR_84 : _90715) (u : _90715 -> Prop) (f : _90715 -> _90724) (t : _90715 -> Prop) : (term227 _90715 _90724 GEN_PVAR_84 u f t) = (term64 _90715 _90724 GEN_PVAR_84 u f t).
Proof. exact (fun_ext (fun x : _90715 => @lem3494474 _90715 _90724 GEN_PVAR_84 u f t x)). Qed.
Lemma lem3494476 {_90715 : Type'} : (@ex _90715) = (@ex _90715).
Proof. exact (eq_refl (@ex _90715)). Qed.
Lemma lem3494477 {_90715 _90724 : Type'} (GEN_PVAR_84 : _90715) (u : _90715 -> Prop) (f : _90715 -> _90724) (t : _90715 -> Prop) : (term228 _90715 _90724 GEN_PVAR_84 u f t) = (term66 _90715 _90724 GEN_PVAR_84 u f t).
Proof. exact (MK_COMB (@lem3494476 _90715) (@lem3494475 _90715 _90724 GEN_PVAR_84 u f t)). Qed.
Lemma lem3494478 {_90715 _90724 : Type'} (u : _90715 -> Prop) (f : _90715 -> _90724) (t : _90715 -> Prop) : (term229 _90715 _90724 u f t) = (term68 _90715 _90724 u f t).
Proof. exact (fun_ext (fun GEN_PVAR_84 : _90715 => @lem3494477 _90715 _90724 GEN_PVAR_84 u f t)). Qed.
Lemma lem3494479 {_90715 : Type'} : (@GSPEC _90715) = (@GSPEC _90715).
Proof. exact (eq_refl (@GSPEC _90715)). Qed.
Lemma lem3494480 {_90715 _90724 : Type'} (u : _90715 -> Prop) (f : _90715 -> _90724) (t : _90715 -> Prop) : (term230 _90715 _90724 u f t) = (term70 _90715 _90724 u f t).
Proof. exact (MK_COMB (@lem3494479 _90715) (@lem3494478 _90715 _90724 u f t)). Qed.
Lemma lem3494481 {_90715 : Type'} (x : _90715) : (@IN _90715 x) = (@IN _90715 x).
Proof. exact (eq_refl (@IN _90715 x)). Qed.
Lemma lem3494482 {_90715 _90724 : Type'} (x : _90715) (u : _90715 -> Prop) (f : _90715 -> _90724) (t : _90715 -> Prop) : (term222 _90715 _90724 x u f t) = (term231 _90715 _90724 x u f t).
Proof. exact (MK_COMB (@lem3494481 _90715 x) (@lem3494480 _90715 _90724 u f t)). Qed.
Lemma lem3494483 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem3494484 {_90715 _90724 : Type'} (x : _90715) (u : _90715 -> Prop) (f : _90715 -> _90724) (t : _90715 -> Prop) : (term232 _90715 _90724 x u f t) = (term233 _90715 _90724 x u f t).
Proof. exact (MK_COMB (@lem3494483) (@lem3494482 _90715 _90724 x u f t)). Qed.
Lemma lem3494485 {_90715 _90724 : Type'} (u : _90715 -> Prop) (x : _90715) (f : _90715 -> _90724) (t : _90715 -> Prop) : (term223 _90715 _90724 u f t x) = (term58 _90715 _90724 u x f t).
Proof. exact (eq_refl (term223 _90715 _90724 u f t x)). Qed.
Lemma lem3494486 {_90715 _90724 : Type'} (u : _90715 -> Prop) (x : _90715) (f : _90715 -> _90724) (t : _90715 -> Prop) : ((term222 _90715 _90724 x u f t) = (term223 _90715 _90724 u f t x)) = ((term231 _90715 _90724 x u f t) = (term58 _90715 _90724 u x f t)).
Proof. exact (MK_COMB (@lem3494484 _90715 _90724 x u f t) (@lem3494485 _90715 _90724 u x f t)). Qed.
Lemma lem3494487 {_90715 _90724 : Type'} (u : _90715 -> Prop) (x : _90715) (f : _90715 -> _90724) (t : _90715 -> Prop) : (term231 _90715 _90724 x u f t) = (term58 _90715 _90724 u x f t).
Proof. exact (EQ_MP (@lem3494486 _90715 _90724 u x f t) (@lem3494469 _90715 _90724 u f t x)). Qed.
Lemma lem3494491 {A : Type'} (P : A -> Prop) (x : A) : (@IN A x P) = (P x).
Proof. exact (EQ_MP (@lem3211610 A P x) (@lem3211609 A P x)). Qed.
Lemma lem3494492 {_90715 : Type'} (P : _90715 -> Prop) (x : _90715) : (@IN _90715 x P) = (P x).
Proof. exact (@lem3494491 _90715 P x). Qed.
Lemma lem3494493 {_90715 : Type'} (u : _90715 -> Prop) (x : _90715) : (@IN _90715 x u) = (u x).
Proof. exact (@lem3494492 _90715 u x). Qed.
Lemma lem3494494 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem3494495 {_90715 : Type'} (u : _90715 -> Prop) (x : _90715) : (term56 _90715 x u) = (term234 _90715 u x).
Proof. exact (MK_COMB (@lem3494494) (@lem3494493 _90715 u x)). Qed.
Lemma lem3494505 {A : Type'} (P : A -> Prop) (x : A) : (@IN A x P) = (P x).
Proof. exact (EQ_MP (@lem3211610 A P x) (@lem3211609 A P x)). Qed.
Lemma lem3494506 {_90715 : Type'} (P : _90715 -> Prop) (x : _90715) : (@IN _90715 x P) = (P x).
Proof. exact (@lem3494505 _90715 P x). Qed.
Lemma lem3494507 {_90715 : Type'} (t : _90715 -> Prop) (x' : _90715) : (@IN _90715 x' t) = (t x').
Proof. exact (@lem3494506 _90715 t x'). Qed.
Lemma lem3494508 {_90715 _90724 : Type'} (x : _90715) (f : _90715 -> _90724) (x' : _90715) : (term235 _90715 _90724 x f x') = (term235 _90715 _90724 x f x').
Proof. exact (eq_refl (term235 _90715 _90724 x f x')). Qed.
Lemma lem3494509 {_90715 _90724 : Type'} (x : _90715) (f : _90715 -> _90724) (t : _90715 -> Prop) (x' : _90715) : (term236 _90715 _90724 x f x' t) = (term237 _90715 _90724 x f t x').
Proof. exact (MK_COMB (@lem3494508 _90715 _90724 x f x') (@lem3494507 _90715 t x')). Qed.
Lemma lem3494512 {_90715 _90724 : Type'} (x : _90715) (f : _90715 -> _90724) (t : _90715 -> Prop) : (term238 _90715 _90724 x f t) = (term239 _90715 _90724 x f t).
Proof. exact (fun_ext (fun x' : _90715 => @lem3494509 _90715 _90724 x f t x')). Qed.
Lemma lem3494513 {_90715 : Type'} : (@ex _90715) = (@ex _90715).
Proof. exact (eq_refl (@ex _90715)). Qed.
Lemma lem3494514 {_90715 _90724 : Type'} (x : _90715) (f : _90715 -> _90724) (t : _90715 -> Prop) : (term55 _90715 _90724 x f t) = (term240 _90715 _90724 x f t).
Proof. exact (MK_COMB (@lem3494513 _90715) (@lem3494512 _90715 _90724 x f t)). Qed.
Lemma lem3494519 {_90715 _90724 : Type'} (u : _90715 -> Prop) (x : _90715) (f : _90715 -> _90724) (t : _90715 -> Prop) : (term58 _90715 _90724 u x f t) = (term241 _90715 _90724 u x f t).
Proof. exact (MK_COMB (@lem3494495 _90715 u x) (@lem3494514 _90715 _90724 x f t)). Qed.
Lemma lem3494522 {_90715 _90724 : Type'} (u : _90715 -> Prop) (x : _90715) (f : _90715 -> _90724) (t : _90715 -> Prop) : (term231 _90715 _90724 x u f t) = (term241 _90715 _90724 u x f t).
Proof. exact (TRANS (@lem3494487 _90715 _90724 u x f t) (@lem3494519 _90715 _90724 u x f t)). Qed.
Lemma lem3494523 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem3494524 {_90715 _90724 : Type'} (u : _90715 -> Prop) (x : _90715) (f : _90715 -> _90724) (t : _90715 -> Prop) : (term242 _90715 _90724 x u f t) = (term243 _90715 _90724 u x f t).
Proof. exact (MK_COMB (@lem3494523) (@lem3494522 _90715 _90724 u x f t)). Qed.
Lemma lem3494526 {A : Type'} (P : A -> Prop) (x : A) : (@IN A x P) = (P x).
Proof. exact (EQ_MP (@lem3211610 A P x) (@lem3211609 A P x)). Qed.
Lemma lem3494527 {_90715 : Type'} (P : _90715 -> Prop) (x : _90715) : (@IN _90715 x P) = (P x).
Proof. exact (@lem3494526 _90715 P x). Qed.
Lemma lem3494528 {_90715 : Type'} (t : _90715 -> Prop) (x : _90715) : (@IN _90715 x t) = (t x).
Proof. exact (@lem3494527 _90715 t x). Qed.
Lemma lem3494529 {_90715 _90724 : Type'} (u : _90715 -> Prop) (f : _90715 -> _90724) (t : _90715 -> Prop) (x : _90715) : (term244 _90715 _90724 u f x t) = (term245 _90715 _90724 u f t x).
Proof. exact (MK_COMB (@lem3494524 _90715 _90724 u x f t) (@lem3494528 _90715 t x)). Qed.
Lemma lem3494532 {_90715 _90724 : Type'} (u : _90715 -> Prop) (f : _90715 -> _90724) (t : _90715 -> Prop) : (term246 _90715 _90724 u f t) = (term247 _90715 _90724 u f t).
Proof. exact (fun_ext (fun x : _90715 => @lem3494529 _90715 _90724 u f t x)). Qed.
Lemma lem3494533 {_90715 : Type'} : (@all _90715) = (@all _90715).
Proof. exact (eq_refl (@all _90715)). Qed.
Lemma lem3494534 {_90715 _90724 : Type'} (u : _90715 -> Prop) (f : _90715 -> _90724) (t : _90715 -> Prop) : (term199 _90715 _90724 u f t) = (term248 _90715 _90724 u f t).
Proof. exact (MK_COMB (@lem3494533 _90715) (@lem3494532 _90715 _90724 u f t)). Qed.
Lemma lem3494539 {_90715 _90724 : Type'} (u : _90715 -> Prop) (f : _90715 -> _90724) (t : _90715 -> Prop) : (term200 _90715 _90724 u f t) = (term249 _90715 _90724 u f t).
Proof. exact (MK_COMB (@lem3494459 _90715 t u) (@lem3494534 _90715 _90724 u f t)). Qed.
Lemma lem3494542 {_90715 _90724 : Type'} (g : type686 _90715) (u : _90715 -> Prop) (f : _90715 -> _90724) (t : _90715 -> Prop) : (term201 _90715 _90724 g u f t) = (term250 _90715 _90724 g u f t).
Proof. exact (MK_COMB (@lem3494429 _90715 g t) (@lem3494539 _90715 _90724 u f t)). Qed.
Lemma lem3494545 {_90715 _90724 : Type'} (g : type686 _90715) (u : _90715 -> Prop) (f : _90715 -> _90724) : (term202 _90715 _90724 g u f) = (term251 _90715 _90724 g u f).
Proof. exact (fun_ext (fun t : _90715 -> Prop => @lem3494542 _90715 _90724 g u f t)). Qed.
Lemma lem3494546 {_90715 : Type'} : (@all (_90715 -> Prop)) = (@all (_90715 -> Prop)).
Proof. exact (eq_refl (@all (_90715 -> Prop))). Qed.
Lemma lem3494547 {_90715 _90724 : Type'} (g : type686 _90715) (u : _90715 -> Prop) (f : _90715 -> _90724) : (term203 _90715 _90724 g u f) = (term252 _90715 _90724 g u f).
Proof. exact (MK_COMB (@lem3494546 _90715) (@lem3494545 _90715 _90724 g u f)). Qed.
Lemma lem3494552 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem3494553 {_90715 _90724 : Type'} (g : type686 _90715) (u : _90715 -> Prop) (f : _90715 -> _90724) : (term204 _90715 _90724 g u f) = (term253 _90715 _90724 g u f).
Proof. exact (MK_COMB (@lem3494552) (@lem3494547 _90715 _90724 g u f)). Qed.
Lemma lem3494575 {A : Type'} (P : A -> Prop) (x : A) : (@IN A x P) = (P x).
Proof. exact (EQ_MP (@lem3211610 A P x) (@lem3211609 A P x)). Qed.
Lemma lem3494576 {_90715 : Type'} (P : type686 _90715) (x : _90715 -> Prop) : (@IN (_90715 -> Prop) x P) = (P x).
Proof. exact (@lem3494575 (_90715 -> Prop) P x). Qed.
Lemma lem3494577 {_90715 : Type'} (g : type686 _90715) (t : _90715 -> Prop) : (@IN (_90715 -> Prop) t g) = (g t).
Proof. exact (@lem3494576 _90715 g t). Qed.
Lemma lem3494578 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem3494579 {_90715 : Type'} (g : type686 _90715) (t : _90715 -> Prop) : (term78 _90715 t g) = (term212 _90715 g t).
Proof. exact (MK_COMB (@lem3494578) (@lem3494577 _90715 g t)). Qed.
Lemma lem3494581 {A : Type'} (P : A -> Prop) (x : A) : (@IN A x P) = (P x).
Proof. exact (EQ_MP (@lem3211610 A P x) (@lem3211609 A P x)). Qed.
Lemma lem3494582 {_90715 : Type'} (P : _90715 -> Prop) (x : _90715) : (@IN _90715 x P) = (P x).
Proof. exact (@lem3494581 _90715 P x). Qed.
Lemma lem3494583 {_90715 : Type'} (t : _90715 -> Prop) (x : _90715) : (@IN _90715 x t) = (t x).
Proof. exact (@lem3494582 _90715 t x). Qed.
Lemma lem3494584 {_90715 : Type'} (g : type686 _90715) (t : _90715 -> Prop) (x : _90715) : (term254 _90715 g x t) = (term255 _90715 g t x).
Proof. exact (MK_COMB (@lem3494579 _90715 g t) (@lem3494583 _90715 t x)). Qed.
Lemma lem3494587 {_90715 : Type'} (g : type686 _90715) (x : _90715) : (term256 _90715 g x) = (term257 _90715 g x).
Proof. exact (fun_ext (fun t : _90715 -> Prop => @lem3494584 _90715 g t x)). Qed.
Lemma lem3494588 {_90715 : Type'} : (@all (_90715 -> Prop)) = (@all (_90715 -> Prop)).
Proof. exact (eq_refl (@all (_90715 -> Prop))). Qed.
Lemma lem3494589 {_90715 : Type'} (g : type686 _90715) (x : _90715) : (term33 _90715 g x) = (term258 _90715 g x).
Proof. exact (MK_COMB (@lem3494588 _90715) (@lem3494587 _90715 g x)). Qed.
Lemma lem3494594 {_90715 _90724 : Type'} (x : _90724) (f : _90715 -> _90724) (x' : _90715) : (term88 _90715 _90724 x f x') = (term88 _90715 _90724 x f x').
Proof. exact (eq_refl (term88 _90715 _90724 x f x')). Qed.
Lemma lem3494595 {_90715 _90724 : Type'} (x : _90724) (f : _90715 -> _90724) (g : type686 _90715) (x' : _90715) : (term90 _90715 _90724 x f g x') = (term259 _90715 _90724 x f g x').
Proof. exact (MK_COMB (@lem3494594 _90715 _90724 x f x') (@lem3494589 _90715 g x')). Qed.
Lemma lem3494598 {_90715 _90724 : Type'} (x : _90724) (f : _90715 -> _90724) (g : type686 _90715) : (term92 _90715 _90724 x f g) = (term260 _90715 _90724 x f g).
Proof. exact (fun_ext (fun x' : _90715 => @lem3494595 _90715 _90724 x f g x')). Qed.
Lemma lem3494599 {_90715 : Type'} : (@ex _90715) = (@ex _90715).
Proof. exact (eq_refl (@ex _90715)). Qed.
Lemma lem3494600 {_90715 _90724 : Type'} (x : _90724) (f : _90715 -> _90724) (g : type686 _90715) : (term93 _90715 _90724 x f g) = (term261 _90715 _90724 x f g).
Proof. exact (MK_COMB (@lem3494599 _90715) (@lem3494598 _90715 _90724 x f g)). Qed.
Lemma lem3494605 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem3494606 {_90715 _90724 : Type'} (x : _90724) (f : _90715 -> _90724) (g : type686 _90715) : (term95 _90715 _90724 x f g) = (term262 _90715 _90724 x f g).
Proof. exact (MK_COMB (@lem3494605) (@lem3494600 _90715 _90724 x f g)). Qed.
Lemma lem3494614 {A : Type'} (P : A -> Prop) (x : A) : (@IN A x P) = (P x).
Proof. exact (EQ_MP (@lem3211610 A P x) (@lem3211609 A P x)). Qed.
Lemma lem3494615 {_90715 : Type'} (P : type686 _90715) (x : _90715 -> Prop) : (@IN (_90715 -> Prop) x P) = (P x).
Proof. exact (@lem3494614 (_90715 -> Prop) P x). Qed.
Lemma lem3494616 {_90715 : Type'} (g : type686 _90715) (x : _90715 -> Prop) : (@IN (_90715 -> Prop) x g) = (g x).
Proof. exact (@lem3494615 _90715 g x). Qed.
Lemma lem3494617 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem3494618 {_90715 : Type'} (g : type686 _90715) (x : _90715 -> Prop) : (term78 _90715 x g) = (term212 _90715 g x).
Proof. exact (MK_COMB (@lem3494617) (@lem3494616 _90715 g x)). Qed.
Lemma lem3494620 {A B : Type'} (y : B) (f : A -> B) (s : A -> Prop) : (term27 A B y f s) = (term28 A B y f s).
Proof. exact (EQ_MP (@lem3211657 A B y f s) (@lem3211656 A B y s f)). Qed.
Lemma lem3494621 {_90715 _90724 : Type'} (y : _90724) (f : _90715 -> _90724) (s : _90715 -> Prop) : (term27 _90715 _90724 y f s) = (term28 _90715 _90724 y f s).
Proof. exact (@lem3494620 _90715 _90724 y f s). Qed.
Lemma lem3494622 {_90715 _90724 : Type'} (x : _90724) (f : _90715 -> _90724) (x' : _90715 -> Prop) : (term27 _90715 _90724 x f x') = (term28 _90715 _90724 x f x').
Proof. exact (@lem3494621 _90715 _90724 x f x'). Qed.
Lemma lem3494632 {A : Type'} (P : A -> Prop) (x : A) : (@IN A x P) = (P x).
Proof. exact (EQ_MP (@lem3211610 A P x) (@lem3211609 A P x)). Qed.
Lemma lem3494633 {_90715 : Type'} (P : _90715 -> Prop) (x : _90715) : (@IN _90715 x P) = (P x).
Proof. exact (@lem3494632 _90715 P x). Qed.
Lemma lem3494634 {_90715 : Type'} (x : _90715 -> Prop) (x' : _90715) : (@IN _90715 x' x) = (x x').
Proof. exact (@lem3494633 _90715 x x'). Qed.
Lemma lem3494635 {_90715 _90724 : Type'} (x : _90724) (f : _90715 -> _90724) (x' : _90715) : (term88 _90715 _90724 x f x') = (term88 _90715 _90724 x f x').
Proof. exact (eq_refl (term88 _90715 _90724 x f x')). Qed.
Lemma lem3494636 {_90715 _90724 : Type'} (x : _90724) (f : _90715 -> _90724) (x' : _90715 -> Prop) (x'' : _90715) : (term263 _90715 _90724 x f x'' x') = (term264 _90715 _90724 x f x' x'').
Proof. exact (MK_COMB (@lem3494635 _90715 _90724 x f x'') (@lem3494634 _90715 x' x'')). Qed.
Lemma lem3494639 {_90715 _90724 : Type'} (x : _90724) (f : _90715 -> _90724) (x' : _90715 -> Prop) : (term265 _90715 _90724 x f x') = (term266 _90715 _90724 x f x').
Proof. exact (fun_ext (fun x'' : _90715 => @lem3494636 _90715 _90724 x f x' x'')). Qed.
Lemma lem3494640 {_90715 : Type'} : (@ex _90715) = (@ex _90715).
Proof. exact (eq_refl (@ex _90715)). Qed.
Lemma lem3494641 {_90715 _90724 : Type'} (x : _90724) (f : _90715 -> _90724) (x' : _90715 -> Prop) : (term28 _90715 _90724 x f x') = (term267 _90715 _90724 x f x').
Proof. exact (MK_COMB (@lem3494640 _90715) (@lem3494639 _90715 _90724 x f x')). Qed.
Lemma lem3494646 {_90715 _90724 : Type'} (x : _90724) (f : _90715 -> _90724) (x' : _90715 -> Prop) : (term27 _90715 _90724 x f x') = (term267 _90715 _90724 x f x').
Proof. exact (TRANS (@lem3494622 _90715 _90724 x f x') (@lem3494641 _90715 _90724 x f x')). Qed.
Lemma lem3494647 {_90715 _90724 : Type'} (g : type686 _90715) (x : _90724) (f : _90715 -> _90724) (x' : _90715 -> Prop) : (term187 _90715 _90724 g x f x') = (term268 _90715 _90724 g x f x').
Proof. exact (MK_COMB (@lem3494618 _90715 g x') (@lem3494646 _90715 _90724 x f x')). Qed.
Lemma lem3494650 {_90715 _90724 : Type'} (g : type686 _90715) (x : _90724) (f : _90715 -> _90724) : (term188 _90715 _90724 g x f) = (term269 _90715 _90724 g x f).
Proof. exact (fun_ext (fun x' : _90715 -> Prop => @lem3494647 _90715 _90724 g x f x')). Qed.
Lemma lem3494651 {_90715 : Type'} : (@all (_90715 -> Prop)) = (@all (_90715 -> Prop)).
Proof. exact (eq_refl (@all (_90715 -> Prop))). Qed.
Lemma lem3494652 {_90715 _90724 : Type'} (g : type686 _90715) (x : _90724) (f : _90715 -> _90724) : (term189 _90715 _90724 g x f) = (term270 _90715 _90724 g x f).
Proof. exact (MK_COMB (@lem3494651 _90715) (@lem3494650 _90715 _90724 g x f)). Qed.
Lemma lem3494657 {_90715 _90724 : Type'} (g : type686 _90715) (x : _90724) (f : _90715 -> _90724) : ((term93 _90715 _90724 x f g) = (term189 _90715 _90724 g x f)) = ((term261 _90715 _90724 x f g) = (term270 _90715 _90724 g x f)).
Proof. exact (MK_COMB (@lem3494606 _90715 _90724 x f g) (@lem3494652 _90715 _90724 g x f)). Qed.
Lemma lem3494660 {_90715 _90724 : Type'} (g : type686 _90715) (f : _90715 -> _90724) : (term190 _90715 _90724 g f) = (term271 _90715 _90724 g f).
Proof. exact (fun_ext (fun x : _90724 => @lem3494657 _90715 _90724 g x f)). Qed.
Lemma lem3494661 {_90724 : Type'} : (@all _90724) = (@all _90724).
Proof. exact (eq_refl (@all _90724)). Qed.
Lemma lem3494662 {_90715 _90724 : Type'} (g : type686 _90715) (f : _90715 -> _90724) : (term191 _90715 _90724 g f) = (term272 _90715 _90724 g f).
Proof. exact (MK_COMB (@lem3494661 _90724) (@lem3494660 _90715 _90724 g f)). Qed.
Lemma lem3494667 {_90715 _90724 : Type'} (u : _90715 -> Prop) (g : type686 _90715) (f : _90715 -> _90724) : (term205 _90715 _90724 u g f) = (term273 _90715 _90724 u g f).
Proof. exact (MK_COMB (@lem3494553 _90715 _90724 g u f) (@lem3494662 _90715 _90724 g f)). Qed.
Lemma lem3494670 {_90715 _90724 : Type'} (u : _90715 -> Prop) (g : type686 _90715) (f : _90715 -> _90724) : (term206 _90715 _90724 u g f) = (term274 _90715 _90724 u g f).
Proof. exact (MK_COMB (@lem3494415 _90715 g) (@lem3494667 _90715 _90724 u g f)). Qed.
Lemma lem3494673 {_90715 _90724 : Type'} (u : _90715 -> Prop) (g : type686 _90715) (f : _90715 -> _90724) : (term274 _90715 _90724 u g f) = (term206 _90715 _90724 u g f).
Proof. exact (SYM (@lem3494670 _90715 _90724 u g f)). Qed.
Lemma lem3494675 (p : Prop) : p = (term275 p).
Proof. exact (EQ_MP (@lem10578 p) (@lem10597 p)). Qed.
Lemma lem3494676 {_90715 _90724 : Type'} (u : _90715 -> Prop) (g : type686 _90715) (f : _90715 -> _90724) : (term274 _90715 _90724 u g f) = (term276 _90715 _90724 u g f).
Proof. exact (@lem3494675 (term274 _90715 _90724 u g f)). Qed.
Lemma lem3494677 {_90715 _90724 : Type'} (u : _90715 -> Prop) (g : type686 _90715) (f : _90715 -> _90724) : (term276 _90715 _90724 u g f) = (term274 _90715 _90724 u g f).
Proof. exact (SYM (@lem3494676 _90715 _90724 u g f)). Qed.
Lemma lem3494678 {_90715 _90724 : Type'} (u : _90715 -> Prop) (g : type686 _90715) (f : _90715 -> _90724) (h1 : term277 _90715 _90724 u g f) : term277 _90715 _90724 u g f.
Proof. exact (h1). Qed.
Lemma lem3494681 {_90715 _90724 : Type'} (u : _90715 -> Prop) (g : type686 _90715) (f : _90715 -> _90724) (h1 : term276 _90715 _90724 u g f) : term276 _90715 _90724 u g f.
Proof. exact (h1). Qed.
Lemma lem3494682 {_90715 _90724 : Type'} (u : _90715 -> Prop) (g : type686 _90715) (f : _90715 -> _90724) : term278 _90715 _90724 u g f.
Proof. exact (fun h0 : term276 _90715 _90724 u g f => @lem3494681 _90715 _90724 u g f h0). Qed.
Lemma lem3494683 {_90715 _90724 : Type'} (u : _90715 -> Prop) (g : type686 _90715) (f : _90715 -> _90724) (h1 : term278 _90715 _90724 u g f) : term278 _90715 _90724 u g f.
Proof. exact (h1). Qed.
Lemma lem3494684 {_90715 _90724 : Type'} (u : _90715 -> Prop) (g : type686 _90715) (f : _90715 -> _90724) (h1 : term276 _90715 _90724 u g f) : term276 _90715 _90724 u g f.
Proof. exact (h1). Qed.
Lemma lem3494685 {_90715 _90724 : Type'} (u : _90715 -> Prop) (g : type686 _90715) (f : _90715 -> _90724) (h1 : term276 _90715 _90724 u g f) (h2 : term278 _90715 _90724 u g f) : term276 _90715 _90724 u g f.
Proof. exact (@lem3494683 _90715 _90724 u g f h2 (@lem3494684 _90715 _90724 u g f h1)). Qed.
Lemma lem3494686 {_90715 _90724 : Type'} (u : _90715 -> Prop) (g : type686 _90715) (f : _90715 -> _90724) (h1 : term276 _90715 _90724 u g f) : term279 _90715 _90724 u g f.
Proof. exact (fun h0 : term278 _90715 _90724 u g f => @lem3494685 _90715 _90724 u g f h1 h0). Qed.
Lemma lem3494687 {_90715 _90724 : Type'} (u : _90715 -> Prop) (g : type686 _90715) (f : _90715 -> _90724) (h1 : term278 _90715 _90724 u g f) : term278 _90715 _90724 u g f.
Proof. exact (h1). Qed.
Lemma lem3494688 {_90715 _90724 : Type'} (u : _90715 -> Prop) (g : type686 _90715) (f : _90715 -> _90724) (h1 : term276 _90715 _90724 u g f) (h2 : term278 _90715 _90724 u g f) : term276 _90715 _90724 u g f.
Proof. exact (@lem3494686 _90715 _90724 u g f h1 (@lem3494687 _90715 _90724 u g f h2)). Qed.
Lemma lem3494689 {_90715 _90724 : Type'} (u : _90715 -> Prop) (g : type686 _90715) (f : _90715 -> _90724) (h1 : term278 _90715 _90724 u g f) : term278 _90715 _90724 u g f.
Proof. exact (fun h0 : term276 _90715 _90724 u g f => @lem3494688 _90715 _90724 u g f h0 h1). Qed.
Lemma lem3494690 {_90715 _90724 : Type'} (u : _90715 -> Prop) (g : type686 _90715) (f : _90715 -> _90724) : term280 _90715 _90724 u g f.
Proof. exact (fun h0 : term278 _90715 _90724 u g f => @lem3494689 _90715 _90724 u g f h0). Qed.
Lemma lem3494693 {_90715 _90724 : Type'} (u : _90715 -> Prop) (g : type686 _90715) (f : _90715 -> _90724) : term278 _90715 _90724 u g f.
Proof. exact (@lem3494690 _90715 _90724 u g f (@lem3494682 _90715 _90724 u g f)). Qed.
Lemma lem3494694 {_90715 _90724 : Type'} (u : _90715 -> Prop) (g : type686 _90715) (f : _90715 -> _90724) : term278 _90715 _90724 u g f.
Proof. exact (@lem3494693 _90715 _90724 u g f). Qed.
Lemma lem3494708 (t : Prop) : (t -> False) = (~ t).
Proof. exact (proj2 (@lem16474 t)). Qed.
Lemma lem3494709 {_90715 _90724 : Type'} (u : _90715 -> Prop) (g : type686 _90715) (f : _90715 -> _90724) : (term276 _90715 _90724 u g f) = (term281 _90715 _90724 u g f).
Proof. exact (@lem3494708 (term277 _90715 _90724 u g f)). Qed.
Lemma lem3494711 (t : Prop) : (term282 t) = t.
Proof. exact (EQ_MP (@lem16507 t) (@lem16506 t)). Qed.
Lemma lem3494712 {_90715 _90724 : Type'} (u : _90715 -> Prop) (g : type686 _90715) (f : _90715 -> _90724) : (term281 _90715 _90724 u g f) = (term274 _90715 _90724 u g f).
Proof. exact (@lem3494711 (term274 _90715 _90724 u g f)). Qed.
Lemma lem3494715 {_90715 _90724 : Type'} (u : _90715 -> Prop) (g : type686 _90715) (f : _90715 -> _90724) : (term276 _90715 _90724 u g f) = (term274 _90715 _90724 u g f).
Proof. exact (TRANS (@lem3494709 _90715 _90724 u g f) (@lem3494712 _90715 _90724 u g f)). Qed.
Lemma lem3494878 {_90715 _90724 : Type'} (g : type686 _90715) (f : _90715 -> _90724) : (term283 _90715 _90724 g f) = (term284 _90715 _90724 g f).
Proof. exact (fun_ext (fun u : _90715 -> Prop => @lem3494715 _90715 _90724 u g f)). Qed.
Lemma lem3494879 {_90715 : Type'} : (@all (_90715 -> Prop)) = (@all (_90715 -> Prop)).
Proof. exact (eq_refl (@all (_90715 -> Prop))). Qed.
Lemma lem3494880 {_90715 _90724 : Type'} (g : type686 _90715) (f : _90715 -> _90724) : (term285 _90715 _90724 g f) = (term286 _90715 _90724 g f).
Proof. exact (MK_COMB (@lem3494879 _90715) (@lem3494878 _90715 _90724 g f)). Qed.
Lemma lem3494885 {_90715 _90724 : Type'} (f : _90715 -> _90724) : (term287 _90715 _90724 f) = (term288 _90715 _90724 f).
Proof. exact (fun_ext (fun g : type686 _90715 => @lem3494880 _90715 _90724 g f)). Qed.
Lemma lem3494886 {_90715 : Type'} : (@all ((_90715 -> Prop) -> Prop)) = (@all ((_90715 -> Prop) -> Prop)).
Proof. exact (eq_refl (@all ((_90715 -> Prop) -> Prop))). Qed.
Lemma lem3494887 {_90715 _90724 : Type'} (f : _90715 -> _90724) : (term289 _90715 _90724 f) = (term290 _90715 _90724 f).
Proof. exact (MK_COMB (@lem3494886 _90715) (@lem3494885 _90715 _90724 f)). Qed.
Lemma lem3494892 {_90715 _90724 : Type'} : (term291 _90715 _90724) = (term292 _90715 _90724).
Proof. exact (fun_ext (fun f : _90715 -> _90724 => @lem3494887 _90715 _90724 f)). Qed.
Lemma lem3494893 {_90715 _90724 : Type'} : (@all (_90715 -> _90724)) = (@all (_90715 -> _90724)).
Proof. exact (eq_refl (@all (_90715 -> _90724))). Qed.
Lemma lem3494902 {_90715 _90724 : Type'} : (term293 _90715 _90724) = (term294 _90715 _90724).
Proof. exact (MK_COMB (@lem3494893 _90715 _90724) (@lem3494892 _90715 _90724)). Qed.
Lemma lem3494907 {_90715 _90724 : Type'} (x : _90724) (f : _90715 -> _90724) (x' : _90715 -> Prop) (x'' : _90715) : (term264 _90715 _90724 x f x' x'') = (term264 _90715 _90724 x f x' x'').
Proof. exact (eq_refl (term264 _90715 _90724 x f x' x'')). Qed.
Lemma lem3494908 {_90715 _90724 : Type'} (x : _90724) (f : _90715 -> _90724) (x' : _90715 -> Prop) : (term266 _90715 _90724 x f x') = (term266 _90715 _90724 x f x').
Proof. exact (fun_ext (fun x'' : _90715 => @lem3494907 _90715 _90724 x f x' x'')). Qed.
Lemma lem3494909 {_90715 : Type'} : (@ex _90715) = (@ex _90715).
Proof. exact (eq_refl (@ex _90715)). Qed.
Lemma lem3494910 {_90715 _90724 : Type'} (x : _90724) (f : _90715 -> _90724) (x' : _90715 -> Prop) : (term267 _90715 _90724 x f x') = (term267 _90715 _90724 x f x').
Proof. exact (MK_COMB (@lem3494909 _90715) (@lem3494908 _90715 _90724 x f x')). Qed.
Lemma lem3494913 {_90715 : Type'} (g : type686 _90715) (x : _90715 -> Prop) : (term212 _90715 g x) = (term212 _90715 g x).
Proof. exact (eq_refl (term212 _90715 g x)). Qed.
Lemma lem3494914 {_90715 _90724 : Type'} (g : type686 _90715) (x : _90724) (f : _90715 -> _90724) (x' : _90715 -> Prop) : (term268 _90715 _90724 g x f x') = (term268 _90715 _90724 g x f x').
Proof. exact (MK_COMB (@lem3494913 _90715 g x') (@lem3494910 _90715 _90724 x f x')). Qed.
Lemma lem3494915 {_90715 _90724 : Type'} (g : type686 _90715) (x : _90724) (f : _90715 -> _90724) : (term269 _90715 _90724 g x f) = (term269 _90715 _90724 g x f).
Proof. exact (fun_ext (fun x' : _90715 -> Prop => @lem3494914 _90715 _90724 g x f x')). Qed.
Lemma lem3494916 {_90715 : Type'} : (@all (_90715 -> Prop)) = (@all (_90715 -> Prop)).
Proof. exact (eq_refl (@all (_90715 -> Prop))). Qed.
Lemma lem3494917 {_90715 _90724 : Type'} (g : type686 _90715) (x : _90724) (f : _90715 -> _90724) : (term270 _90715 _90724 g x f) = (term270 _90715 _90724 g x f).
Proof. exact (MK_COMB (@lem3494916 _90715) (@lem3494915 _90715 _90724 g x f)). Qed.
Lemma lem3494922 {_90715 : Type'} (g : type686 _90715) (t : _90715 -> Prop) (x : _90715) : (term255 _90715 g t x) = (term255 _90715 g t x).
Proof. exact (eq_refl (term255 _90715 g t x)). Qed.
Lemma lem3494923 {_90715 : Type'} (g : type686 _90715) (x : _90715) : (term257 _90715 g x) = (term257 _90715 g x).
Proof. exact (fun_ext (fun t : _90715 -> Prop => @lem3494922 _90715 g t x)). Qed.
Lemma lem3494924 {_90715 : Type'} : (@all (_90715 -> Prop)) = (@all (_90715 -> Prop)).
Proof. exact (eq_refl (@all (_90715 -> Prop))). Qed.
Lemma lem3494925 {_90715 : Type'} (g : type686 _90715) (x : _90715) : (term258 _90715 g x) = (term258 _90715 g x).
Proof. exact (MK_COMB (@lem3494924 _90715) (@lem3494923 _90715 g x)). Qed.
Lemma lem3494928 {_90715 _90724 : Type'} (x : _90724) (f : _90715 -> _90724) (x' : _90715) : (term88 _90715 _90724 x f x') = (term88 _90715 _90724 x f x').
Proof. exact (eq_refl (term88 _90715 _90724 x f x')). Qed.
Lemma lem3494929 {_90715 _90724 : Type'} (x : _90724) (f : _90715 -> _90724) (g : type686 _90715) (x' : _90715) : (term259 _90715 _90724 x f g x') = (term259 _90715 _90724 x f g x').
Proof. exact (MK_COMB (@lem3494928 _90715 _90724 x f x') (@lem3494925 _90715 g x')). Qed.
Lemma lem3494930 {_90715 _90724 : Type'} (x : _90724) (f : _90715 -> _90724) (g : type686 _90715) : (term260 _90715 _90724 x f g) = (term260 _90715 _90724 x f g).
Proof. exact (fun_ext (fun x' : _90715 => @lem3494929 _90715 _90724 x f g x')). Qed.
Lemma lem3494931 {_90715 : Type'} : (@ex _90715) = (@ex _90715).
Proof. exact (eq_refl (@ex _90715)). Qed.
Lemma lem3494932 {_90715 _90724 : Type'} (x : _90724) (f : _90715 -> _90724) (g : type686 _90715) : (term261 _90715 _90724 x f g) = (term261 _90715 _90724 x f g).
Proof. exact (MK_COMB (@lem3494931 _90715) (@lem3494930 _90715 _90724 x f g)). Qed.
Lemma lem3494933 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem3494934 {_90715 _90724 : Type'} (x : _90724) (f : _90715 -> _90724) (g : type686 _90715) : (term262 _90715 _90724 x f g) = (term262 _90715 _90724 x f g).
Proof. exact (MK_COMB (@lem3494933) (@lem3494932 _90715 _90724 x f g)). Qed.
Lemma lem3494935 {_90715 _90724 : Type'} (g : type686 _90715) (x : _90724) (f : _90715 -> _90724) : ((term261 _90715 _90724 x f g) = (term270 _90715 _90724 g x f)) = ((term261 _90715 _90724 x f g) = (term270 _90715 _90724 g x f)).
Proof. exact (MK_COMB (@lem3494934 _90715 _90724 x f g) (@lem3494917 _90715 _90724 g x f)). Qed.
Lemma lem3494936 {_90715 _90724 : Type'} (g : type686 _90715) (f : _90715 -> _90724) : (term271 _90715 _90724 g f) = (term271 _90715 _90724 g f).
Proof. exact (fun_ext (fun x : _90724 => @lem3494935 _90715 _90724 g x f)). Qed.
Lemma lem3494937 {_90724 : Type'} : (@all _90724) = (@all _90724).
Proof. exact (eq_refl (@all _90724)). Qed.
Lemma lem3494938 {_90715 _90724 : Type'} (g : type686 _90715) (f : _90715 -> _90724) : (term272 _90715 _90724 g f) = (term272 _90715 _90724 g f).
Proof. exact (MK_COMB (@lem3494937 _90724) (@lem3494936 _90715 _90724 g f)). Qed.
Lemma lem3494939 {_90715 : Type'} (t : _90715 -> Prop) (x : _90715) : (t x) = (t x).
Proof. exact (eq_refl (t x)). Qed.
Lemma lem3494944 {_90715 _90724 : Type'} (x : _90715) (f : _90715 -> _90724) (t : _90715 -> Prop) (x' : _90715) : (term237 _90715 _90724 x f t x') = (term237 _90715 _90724 x f t x').
Proof. exact (eq_refl (term237 _90715 _90724 x f t x')). Qed.
Lemma lem3494945 {_90715 _90724 : Type'} (x : _90715) (f : _90715 -> _90724) (t : _90715 -> Prop) : (term239 _90715 _90724 x f t) = (term239 _90715 _90724 x f t).
Proof. exact (fun_ext (fun x' : _90715 => @lem3494944 _90715 _90724 x f t x')). Qed.
Lemma lem3494946 {_90715 : Type'} : (@ex _90715) = (@ex _90715).
Proof. exact (eq_refl (@ex _90715)). Qed.
Lemma lem3494947 {_90715 _90724 : Type'} (x : _90715) (f : _90715 -> _90724) (t : _90715 -> Prop) : (term240 _90715 _90724 x f t) = (term240 _90715 _90724 x f t).
Proof. exact (MK_COMB (@lem3494946 _90715) (@lem3494945 _90715 _90724 x f t)). Qed.
Lemma lem3494950 {_90715 : Type'} (u : _90715 -> Prop) (x : _90715) : (term234 _90715 u x) = (term234 _90715 u x).
Proof. exact (eq_refl (term234 _90715 u x)). Qed.
Lemma lem3494951 {_90715 _90724 : Type'} (u : _90715 -> Prop) (x : _90715) (f : _90715 -> _90724) (t : _90715 -> Prop) : (term241 _90715 _90724 u x f t) = (term241 _90715 _90724 u x f t).
Proof. exact (MK_COMB (@lem3494950 _90715 u x) (@lem3494947 _90715 _90724 x f t)). Qed.
Lemma lem3494952 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem3494953 {_90715 _90724 : Type'} (u : _90715 -> Prop) (x : _90715) (f : _90715 -> _90724) (t : _90715 -> Prop) : (term243 _90715 _90724 u x f t) = (term243 _90715 _90724 u x f t).
Proof. exact (MK_COMB (@lem3494952) (@lem3494951 _90715 _90724 u x f t)). Qed.
Lemma lem3494954 {_90715 _90724 : Type'} (u : _90715 -> Prop) (f : _90715 -> _90724) (t : _90715 -> Prop) (x : _90715) : (term245 _90715 _90724 u f t x) = (term245 _90715 _90724 u f t x).
Proof. exact (MK_COMB (@lem3494953 _90715 _90724 u x f t) (@lem3494939 _90715 t x)). Qed.
Lemma lem3494955 {_90715 _90724 : Type'} (u : _90715 -> Prop) (f : _90715 -> _90724) (t : _90715 -> Prop) : (term247 _90715 _90724 u f t) = (term247 _90715 _90724 u f t).
Proof. exact (fun_ext (fun x : _90715 => @lem3494954 _90715 _90724 u f t x)). Qed.
Lemma lem3494956 {_90715 : Type'} : (@all _90715) = (@all _90715).
Proof. exact (eq_refl (@all _90715)). Qed.
Lemma lem3494957 {_90715 _90724 : Type'} (u : _90715 -> Prop) (f : _90715 -> _90724) (t : _90715 -> Prop) : (term248 _90715 _90724 u f t) = (term248 _90715 _90724 u f t).
Proof. exact (MK_COMB (@lem3494956 _90715) (@lem3494955 _90715 _90724 u f t)). Qed.
Lemma lem3494962 {_90715 : Type'} (t : _90715 -> Prop) (u : _90715 -> Prop) (x : _90715) : (term216 _90715 t u x) = (term216 _90715 t u x).
Proof. exact (eq_refl (term216 _90715 t u x)). Qed.
Lemma lem3494963 {_90715 : Type'} (t : _90715 -> Prop) (u : _90715 -> Prop) : (term218 _90715 t u) = (term218 _90715 t u).
Proof. exact (fun_ext (fun x : _90715 => @lem3494962 _90715 t u x)). Qed.
Lemma lem3494964 {_90715 : Type'} : (@all _90715) = (@all _90715).
Proof. exact (eq_refl (@all _90715)). Qed.
Lemma lem3494965 {_90715 : Type'} (t : _90715 -> Prop) (u : _90715 -> Prop) : (term219 _90715 t u) = (term219 _90715 t u).
Proof. exact (MK_COMB (@lem3494964 _90715) (@lem3494963 _90715 t u)). Qed.
Lemma lem3494966 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem3494967 {_90715 : Type'} (t : _90715 -> Prop) (u : _90715 -> Prop) : (term220 _90715 t u) = (term220 _90715 t u).
Proof. exact (MK_COMB (@lem3494966) (@lem3494965 _90715 t u)). Qed.
Lemma lem3494968 {_90715 _90724 : Type'} (u : _90715 -> Prop) (f : _90715 -> _90724) (t : _90715 -> Prop) : (term249 _90715 _90724 u f t) = (term249 _90715 _90724 u f t).
Proof. exact (MK_COMB (@lem3494967 _90715 t u) (@lem3494957 _90715 _90724 u f t)). Qed.
Lemma lem3494971 {_90715 : Type'} (g : type686 _90715) (t : _90715 -> Prop) : (term212 _90715 g t) = (term212 _90715 g t).
Proof. exact (eq_refl (term212 _90715 g t)). Qed.
Lemma lem3494972 {_90715 _90724 : Type'} (g : type686 _90715) (u : _90715 -> Prop) (f : _90715 -> _90724) (t : _90715 -> Prop) : (term250 _90715 _90724 g u f t) = (term250 _90715 _90724 g u f t).
Proof. exact (MK_COMB (@lem3494971 _90715 g t) (@lem3494968 _90715 _90724 u f t)). Qed.
Lemma lem3494973 {_90715 _90724 : Type'} (g : type686 _90715) (u : _90715 -> Prop) (f : _90715 -> _90724) : (term251 _90715 _90724 g u f) = (term251 _90715 _90724 g u f).
Proof. exact (fun_ext (fun t : _90715 -> Prop => @lem3494972 _90715 _90724 g u f t)). Qed.
Lemma lem3494974 {_90715 : Type'} : (@all (_90715 -> Prop)) = (@all (_90715 -> Prop)).
Proof. exact (eq_refl (@all (_90715 -> Prop))). Qed.
Lemma lem3494975 {_90715 _90724 : Type'} (g : type686 _90715) (u : _90715 -> Prop) (f : _90715 -> _90724) : (term252 _90715 _90724 g u f) = (term252 _90715 _90724 g u f).
Proof. exact (MK_COMB (@lem3494974 _90715) (@lem3494973 _90715 _90724 g u f)). Qed.
Lemma lem3494976 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem3494977 {_90715 _90724 : Type'} (g : type686 _90715) (u : _90715 -> Prop) (f : _90715 -> _90724) : (term253 _90715 _90724 g u f) = (term253 _90715 _90724 g u f).
Proof. exact (MK_COMB (@lem3494976) (@lem3494975 _90715 _90724 g u f)). Qed.
Lemma lem3494978 {_90715 _90724 : Type'} (u : _90715 -> Prop) (g : type686 _90715) (f : _90715 -> _90724) : (term273 _90715 _90724 u g f) = (term273 _90715 _90724 u g f).
Proof. exact (MK_COMB (@lem3494977 _90715 _90724 g u f) (@lem3494938 _90715 _90724 g f)). Qed.
Lemma lem3494981 {_90715 : Type'} (g : type686 _90715) (x : _90715 -> Prop) : (term207 _90715 g x) = (term207 _90715 g x).
Proof. exact (eq_refl (term207 _90715 g x)). Qed.
Lemma lem3494982 {_90715 : Type'} (g : type686 _90715) : (term208 _90715 g) = (term208 _90715 g).
Proof. exact (fun_ext (fun x : _90715 -> Prop => @lem3494981 _90715 g x)). Qed.
Lemma lem3494983 {_90715 : Type'} : (@all (_90715 -> Prop)) = (@all (_90715 -> Prop)).
Proof. exact (eq_refl (@all (_90715 -> Prop))). Qed.
Lemma lem3494984 {_90715 : Type'} (g : type686 _90715) : (term209 _90715 g) = (term209 _90715 g).
Proof. exact (MK_COMB (@lem3494983 _90715) (@lem3494982 _90715 g)). Qed.
Lemma lem3494985 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem3494986 {_90715 : Type'} (g : type686 _90715) : (term210 _90715 g) = (term210 _90715 g).
Proof. exact (MK_COMB (@lem3494985) (@lem3494984 _90715 g)). Qed.
Lemma lem3494987 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem3494988 {_90715 : Type'} (g : type686 _90715) : (term211 _90715 g) = (term211 _90715 g).
Proof. exact (MK_COMB (@lem3494987) (@lem3494986 _90715 g)). Qed.
Lemma lem3494989 {_90715 _90724 : Type'} (u : _90715 -> Prop) (g : type686 _90715) (f : _90715 -> _90724) : (term274 _90715 _90724 u g f) = (term274 _90715 _90724 u g f).
Proof. exact (MK_COMB (@lem3494988 _90715 g) (@lem3494978 _90715 _90724 u g f)). Qed.
Lemma lem3494990 {_90715 _90724 : Type'} (g : type686 _90715) (f : _90715 -> _90724) : (term284 _90715 _90724 g f) = (term284 _90715 _90724 g f).
Proof. exact (fun_ext (fun u : _90715 -> Prop => @lem3494989 _90715 _90724 u g f)). Qed.
Lemma lem3494991 {_90715 : Type'} : (@all (_90715 -> Prop)) = (@all (_90715 -> Prop)).
Proof. exact (eq_refl (@all (_90715 -> Prop))). Qed.
Lemma lem3494992 {_90715 _90724 : Type'} (g : type686 _90715) (f : _90715 -> _90724) : (term286 _90715 _90724 g f) = (term286 _90715 _90724 g f).
Proof. exact (MK_COMB (@lem3494991 _90715) (@lem3494990 _90715 _90724 g f)). Qed.
Lemma lem3494993 {_90715 _90724 : Type'} (f : _90715 -> _90724) : (term288 _90715 _90724 f) = (term288 _90715 _90724 f).
Proof. exact (fun_ext (fun g : type686 _90715 => @lem3494992 _90715 _90724 g f)). Qed.
Lemma lem3494994 {_90715 : Type'} : (@all ((_90715 -> Prop) -> Prop)) = (@all ((_90715 -> Prop) -> Prop)).
Proof. exact (eq_refl (@all ((_90715 -> Prop) -> Prop))). Qed.
Lemma lem3494995 {_90715 _90724 : Type'} (f : _90715 -> _90724) : (term290 _90715 _90724 f) = (term290 _90715 _90724 f).
Proof. exact (MK_COMB (@lem3494994 _90715) (@lem3494993 _90715 _90724 f)). Qed.
Lemma lem3494996 {_90715 _90724 : Type'} : (term292 _90715 _90724) = (term292 _90715 _90724).
Proof. exact (fun_ext (fun f : _90715 -> _90724 => @lem3494995 _90715 _90724 f)). Qed.
Lemma lem3494997 {_90715 _90724 : Type'} : (@all (_90715 -> _90724)) = (@all (_90715 -> _90724)).
Proof. exact (eq_refl (@all (_90715 -> _90724))). Qed.
Lemma lem3494998 {_90715 _90724 : Type'} : (term294 _90715 _90724) = (term294 _90715 _90724).
Proof. exact (MK_COMB (@lem3494997 _90715 _90724) (@lem3494996 _90715 _90724)). Qed.
Lemma lem3495103 {_90715 _90724 : Type'} : (term293 _90715 _90724) = (term294 _90715 _90724).
Proof. exact (TRANS (@lem3494902 _90715 _90724) (@lem3494998 _90715 _90724)). Qed.
Lemma lem3495104 {_90715 _90724 : Type'} : (term294 _90715 _90724) = (term293 _90715 _90724).
Proof. exact (SYM (@lem3495103 _90715 _90724)). Qed.
Lemma lem3495105 {_90715 : Type'} (g : type686 _90715) (h1 : term210 _90715 g) : term210 _90715 g.
Proof. exact (h1). Qed.
Lemma lem3495106 {_90715 _90724 : Type'} (g : type686 _90715) (u : _90715 -> Prop) (f : _90715 -> _90724) (h1 : term252 _90715 _90724 g u f) : term252 _90715 _90724 g u f.
Proof. exact (h1). Qed.
Lemma lem3495108 (p : Prop) : p = (term275 p).
Proof. exact (EQ_MP (@lem10578 p) (@lem10597 p)). Qed.
Lemma lem3495109 {_90715 _90724 : Type'} (g : type686 _90715) (x : _90724) (f : _90715 -> _90724) : ((term261 _90715 _90724 x f g) = (term270 _90715 _90724 g x f)) = (term295 _90715 _90724 g x f).
Proof. exact (@lem3495108 ((term261 _90715 _90724 x f g) = (term270 _90715 _90724 g x f))). Qed.
Lemma lem3495110 {_90715 _90724 : Type'} (g : type686 _90715) (x : _90724) (f : _90715 -> _90724) : (term295 _90715 _90724 g x f) = ((term261 _90715 _90724 x f g) = (term270 _90715 _90724 g x f)).
Proof. exact (SYM (@lem3495109 _90715 _90724 g x f)). Qed.
Lemma lem3495111 {_90715 _90724 : Type'} (g : type686 _90715) (x : _90724) (f : _90715 -> _90724) (h1 : term296 _90715 _90724 g x f) : term296 _90715 _90724 g x f.
Proof. exact (h1). Qed.
Lemma lem3495114 {_90715 : Type'} (g : type686 _90715) (x : _90715 -> Prop) : (term297 _90715 g x) = (g x).
Proof. exact (@lem16933 (g x)). Qed.
Lemma lem3495115 {_90715 : Type'} (P : type686 _90715) : (term298 _90715 P) = (term299 _90715 P).
Proof. exact (@lem18392 (_90715 -> Prop) P). Qed.
Lemma lem3495116 {_90715 : Type'} (g : type686 _90715) : (term210 _90715 g) = (term300 _90715 g).
Proof. exact (@lem3495115 _90715 (term208 _90715 g)). Qed.
Lemma lem3495117 {_90715 : Type'} (g : type686 _90715) (x : _90715 -> Prop) : (term301 _90715 g x) = (term207 _90715 g x).
Proof. exact (eq_refl (term301 _90715 g x)). Qed.
Lemma lem3495118 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem3495119 {_90715 : Type'} (g : type686 _90715) (x : _90715 -> Prop) : (term302 _90715 g x) = (term297 _90715 g x).
Proof. exact (MK_COMB (@lem3495118) (@lem3495117 _90715 g x)). Qed.
Lemma lem3495120 {_90715 : Type'} (g : type686 _90715) (x : _90715 -> Prop) : (term302 _90715 g x) = (g x).
Proof. exact (TRANS (@lem3495119 _90715 g x) (@lem3495114 _90715 g x)). Qed.
Lemma lem3495121 {_90715 : Type'} (g : type686 _90715) : (term303 _90715 g) = (term304 _90715 g).
Proof. exact (fun_ext (fun x : _90715 -> Prop => @lem3495120 _90715 g x)). Qed.
Lemma lem3495122 {_90715 : Type'} : (@ex (_90715 -> Prop)) = (@ex (_90715 -> Prop)).
Proof. exact (eq_refl (@ex (_90715 -> Prop))). Qed.
Lemma lem3495123 {_90715 : Type'} (g : type686 _90715) : (term300 _90715 g) = (term305 _90715 g).
Proof. exact (MK_COMB (@lem3495122 _90715) (@lem3495121 _90715 g)). Qed.
Lemma lem3495132 {_90715 : Type'} (g : type686 _90715) : (term210 _90715 g) = (term305 _90715 g).
Proof. exact (TRANS (@lem3495116 _90715 g) (@lem3495123 _90715 g)). Qed.
Lemma lem3495133 {_90715 : Type'} (g : type686 _90715) (h1 : term210 _90715 g) : term305 _90715 g.
Proof. exact (EQ_MP (@lem3495132 _90715 g) (@lem3495105 _90715 g h1)). Qed.
Lemma lem3495141 {_90715 : Type'} (t : _90715 -> Prop) (u : _90715 -> Prop) (x : _90715) : (term216 _90715 t u x) = (term306 _90715 t u x).
Proof. exact (@lem17265 (t x) (u x)). Qed.
Lemma lem3495142 {_90715 : Type'} (t : _90715 -> Prop) (u : _90715 -> Prop) : (term218 _90715 t u) = (term307 _90715 t u).
Proof. exact (fun_ext (fun x : _90715 => @lem3495141 _90715 t u x)). Qed.
Lemma lem3495143 {_90715 : Type'} : (@all _90715) = (@all _90715).
Proof. exact (eq_refl (@all _90715)). Qed.
Lemma lem3495144 {_90715 : Type'} (t : _90715 -> Prop) (u : _90715 -> Prop) : (term219 _90715 t u) = (term308 _90715 t u).
Proof. exact (MK_COMB (@lem3495143 _90715) (@lem3495142 _90715 t u)). Qed.
Lemma lem3495152 {_90715 _90724 : Type'} (x : _90715) (f : _90715 -> _90724) (t : _90715 -> Prop) (x' : _90715) : (term309 _90715 _90724 x f t x') = (term310 _90715 _90724 x f t x').
Proof. exact (@lem17045 ((f x) = (f x')) (t x')). Qed.
Lemma lem3495153 {_90715 : Type'} (P : _90715 -> Prop) : (term311 _90715 P) = (term312 _90715 P).
Proof. exact (@lem18394 _90715 P). Qed.
Lemma lem3495154 {_90715 _90724 : Type'} (x : _90715) (f : _90715 -> _90724) (t : _90715 -> Prop) : (term313 _90715 _90724 x f t) = (term314 _90715 _90724 x f t).
Proof. exact (@lem3495153 _90715 (term239 _90715 _90724 x f t)). Qed.
Lemma lem3495155 {_90715 _90724 : Type'} (x : _90715) (f : _90715 -> _90724) (t : _90715 -> Prop) (x' : _90715) : (term315 _90715 _90724 x f t x') = (term237 _90715 _90724 x f t x').
Proof. exact (eq_refl (term315 _90715 _90724 x f t x')). Qed.
Lemma lem3495156 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem3495157 {_90715 _90724 : Type'} (x : _90715) (f : _90715 -> _90724) (t : _90715 -> Prop) (x' : _90715) : (term316 _90715 _90724 x f t x') = (term309 _90715 _90724 x f t x').
Proof. exact (MK_COMB (@lem3495156) (@lem3495155 _90715 _90724 x f t x')). Qed.
Lemma lem3495158 {_90715 _90724 : Type'} (x : _90715) (f : _90715 -> _90724) (t : _90715 -> Prop) (x' : _90715) : (term316 _90715 _90724 x f t x') = (term310 _90715 _90724 x f t x').
Proof. exact (TRANS (@lem3495157 _90715 _90724 x f t x') (@lem3495152 _90715 _90724 x f t x')). Qed.
Lemma lem3495159 {_90715 _90724 : Type'} (x : _90715) (f : _90715 -> _90724) (t : _90715 -> Prop) : (term317 _90715 _90724 x f t) = (term318 _90715 _90724 x f t).
Proof. exact (fun_ext (fun x' : _90715 => @lem3495158 _90715 _90724 x f t x')). Qed.
Lemma lem3495160 {_90715 : Type'} : (@all _90715) = (@all _90715).
Proof. exact (eq_refl (@all _90715)). Qed.
Lemma lem3495161 {_90715 _90724 : Type'} (x : _90715) (f : _90715 -> _90724) (t : _90715 -> Prop) : (term314 _90715 _90724 x f t) = (term319 _90715 _90724 x f t).
Proof. exact (MK_COMB (@lem3495160 _90715) (@lem3495159 _90715 _90724 x f t)). Qed.
Lemma lem3495162 {_90715 _90724 : Type'} (x : _90715) (f : _90715 -> _90724) (t : _90715 -> Prop) : (term313 _90715 _90724 x f t) = (term319 _90715 _90724 x f t).
Proof. exact (TRANS (@lem3495154 _90715 _90724 x f t) (@lem3495161 _90715 _90724 x f t)). Qed.
Lemma lem3495164 {_90715 : Type'} (u : _90715 -> Prop) (x : _90715) : (term320 _90715 u x) = (term320 _90715 u x).
Proof. exact (eq_refl (term320 _90715 u x)). Qed.
Lemma lem3495165 {_90715 _90724 : Type'} (u : _90715 -> Prop) (x : _90715) (f : _90715 -> _90724) (t : _90715 -> Prop) : (term321 _90715 _90724 u x f t) = (term322 _90715 _90724 u x f t).
Proof. exact (MK_COMB (@lem3495164 _90715 u x) (@lem3495162 _90715 _90724 x f t)). Qed.
Lemma lem3495166 {_90715 _90724 : Type'} (u : _90715 -> Prop) (x : _90715) (f : _90715 -> _90724) (t : _90715 -> Prop) : (term323 _90715 _90724 u x f t) = (term321 _90715 _90724 u x f t).
Proof. exact (@lem17045 (u x) (term240 _90715 _90724 x f t)). Qed.
Lemma lem3495167 {_90715 _90724 : Type'} (u : _90715 -> Prop) (x : _90715) (f : _90715 -> _90724) (t : _90715 -> Prop) : (term323 _90715 _90724 u x f t) = (term322 _90715 _90724 u x f t).
Proof. exact (TRANS (@lem3495166 _90715 _90724 u x f t) (@lem3495165 _90715 _90724 u x f t)). Qed.
Lemma lem3495168 {_90715 : Type'} (t : _90715 -> Prop) (x : _90715) : (t x) = (t x).
Proof. exact (eq_refl (t x)). Qed.
Lemma lem3495169 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem3495170 {_90715 _90724 : Type'} (u : _90715 -> Prop) (x : _90715) (f : _90715 -> _90724) (t : _90715 -> Prop) : (term324 _90715 _90724 u x f t) = (term325 _90715 _90724 u x f t).
Proof. exact (MK_COMB (@lem3495169) (@lem3495167 _90715 _90724 u x f t)). Qed.
Lemma lem3495171 {_90715 _90724 : Type'} (u : _90715 -> Prop) (f : _90715 -> _90724) (t : _90715 -> Prop) (x : _90715) : (term326 _90715 _90724 u f t x) = (term327 _90715 _90724 u f t x).
Proof. exact (MK_COMB (@lem3495170 _90715 _90724 u x f t) (@lem3495168 _90715 t x)). Qed.
Lemma lem3495172 {_90715 _90724 : Type'} (u : _90715 -> Prop) (f : _90715 -> _90724) (t : _90715 -> Prop) (x : _90715) : (term245 _90715 _90724 u f t x) = (term326 _90715 _90724 u f t x).
Proof. exact (@lem17265 (term241 _90715 _90724 u x f t) (t x)). Qed.
Lemma lem3495173 {_90715 _90724 : Type'} (u : _90715 -> Prop) (f : _90715 -> _90724) (t : _90715 -> Prop) (x : _90715) : (term245 _90715 _90724 u f t x) = (term327 _90715 _90724 u f t x).
Proof. exact (TRANS (@lem3495172 _90715 _90724 u f t x) (@lem3495171 _90715 _90724 u f t x)). Qed.
Lemma lem3495174 {_90715 _90724 : Type'} (u : _90715 -> Prop) (f : _90715 -> _90724) (t : _90715 -> Prop) : (term247 _90715 _90724 u f t) = (term328 _90715 _90724 u f t).
Proof. exact (fun_ext (fun x : _90715 => @lem3495173 _90715 _90724 u f t x)). Qed.
Lemma lem3495175 {_90715 : Type'} : (@all _90715) = (@all _90715).
Proof. exact (eq_refl (@all _90715)). Qed.
Lemma lem3495176 {_90715 _90724 : Type'} (u : _90715 -> Prop) (f : _90715 -> _90724) (t : _90715 -> Prop) : (term248 _90715 _90724 u f t) = (term329 _90715 _90724 u f t).
Proof. exact (MK_COMB (@lem3495175 _90715) (@lem3495174 _90715 _90724 u f t)). Qed.
Lemma lem3495177 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem3495178 {_90715 : Type'} (t : _90715 -> Prop) (u : _90715 -> Prop) : (term220 _90715 t u) = (term330 _90715 t u).
Proof. exact (MK_COMB (@lem3495177) (@lem3495144 _90715 t u)). Qed.
Lemma lem3495179 {_90715 _90724 : Type'} (u : _90715 -> Prop) (f : _90715 -> _90724) (t : _90715 -> Prop) : (term249 _90715 _90724 u f t) = (term331 _90715 _90724 u f t).
Proof. exact (MK_COMB (@lem3495178 _90715 t u) (@lem3495176 _90715 _90724 u f t)). Qed.
Lemma lem3495181 {_90715 : Type'} (g : type686 _90715) (t : _90715 -> Prop) : (term332 _90715 g t) = (term332 _90715 g t).
Proof. exact (eq_refl (term332 _90715 g t)). Qed.
Lemma lem3495182 {_90715 _90724 : Type'} (g : type686 _90715) (u : _90715 -> Prop) (f : _90715 -> _90724) (t : _90715 -> Prop) : (term333 _90715 _90724 g u f t) = (term334 _90715 _90724 g u f t).
Proof. exact (MK_COMB (@lem3495181 _90715 g t) (@lem3495179 _90715 _90724 u f t)). Qed.
Lemma lem3495183 {_90715 _90724 : Type'} (g : type686 _90715) (u : _90715 -> Prop) (f : _90715 -> _90724) (t : _90715 -> Prop) : (term250 _90715 _90724 g u f t) = (term333 _90715 _90724 g u f t).
Proof. exact (@lem17265 (g t) (term249 _90715 _90724 u f t)). Qed.
Lemma lem3495184 {_90715 _90724 : Type'} (g : type686 _90715) (u : _90715 -> Prop) (f : _90715 -> _90724) (t : _90715 -> Prop) : (term250 _90715 _90724 g u f t) = (term334 _90715 _90724 g u f t).
Proof. exact (TRANS (@lem3495183 _90715 _90724 g u f t) (@lem3495182 _90715 _90724 g u f t)). Qed.
Lemma lem3495185 {_90715 _90724 : Type'} (g : type686 _90715) (u : _90715 -> Prop) (f : _90715 -> _90724) : (term251 _90715 _90724 g u f) = (term335 _90715 _90724 g u f).
Proof. exact (fun_ext (fun t : _90715 -> Prop => @lem3495184 _90715 _90724 g u f t)). Qed.
Lemma lem3495186 {_90715 : Type'} : (@all (_90715 -> Prop)) = (@all (_90715 -> Prop)).
Proof. exact (eq_refl (@all (_90715 -> Prop))). Qed.
Lemma lem3495351 {_90715 _90724 : Type'} (g : type686 _90715) (u : _90715 -> Prop) (f : _90715 -> _90724) : (term252 _90715 _90724 g u f) = (term336 _90715 _90724 g u f).
Proof. exact (MK_COMB (@lem3495186 _90715) (@lem3495185 _90715 _90724 g u f)). Qed.
Lemma lem3495352 {_90715 _90724 : Type'} (g : type686 _90715) (u : _90715 -> Prop) (f : _90715 -> _90724) (h1 : term252 _90715 _90724 g u f) : term336 _90715 _90724 g u f.
Proof. exact (EQ_MP (@lem3495351 _90715 _90724 g u f) (@lem3495106 _90715 _90724 g u f h1)). Qed.
Lemma lem3495363 {_90715 : Type'} (g : type686 _90715) (t : _90715 -> Prop) (x : _90715) : (term337 _90715 g t x) = (term338 _90715 g t x).
Proof. exact (@lem17362 (g t) (t x)). Qed.
Lemma lem3495368 {_90715 : Type'} (g : type686 _90715) (t : _90715 -> Prop) (x : _90715) : (term255 _90715 g t x) = (term339 _90715 g t x).
Proof. exact (@lem17265 (g t) (t x)). Qed.
Lemma lem3495369 {_90715 : Type'} (P : type686 _90715) : (term298 _90715 P) = (term299 _90715 P).
Proof. exact (@lem18392 (_90715 -> Prop) P). Qed.
Lemma lem3495370 {_90715 : Type'} (g : type686 _90715) (x : _90715) : (term340 _90715 g x) = (term341 _90715 g x).
Proof. exact (@lem3495369 _90715 (term257 _90715 g x)). Qed.
Lemma lem3495371 {_90715 : Type'} (g : type686 _90715) (t : _90715 -> Prop) (x : _90715) : (term342 _90715 g x t) = (term255 _90715 g t x).
Proof. exact (eq_refl (term342 _90715 g x t)). Qed.
Lemma lem3495372 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem3495373 {_90715 : Type'} (g : type686 _90715) (t : _90715 -> Prop) (x : _90715) : (term343 _90715 g x t) = (term337 _90715 g t x).
Proof. exact (MK_COMB (@lem3495372) (@lem3495371 _90715 g t x)). Qed.
Lemma lem3495374 {_90715 : Type'} (g : type686 _90715) (t : _90715 -> Prop) (x : _90715) : (term343 _90715 g x t) = (term338 _90715 g t x).
Proof. exact (TRANS (@lem3495373 _90715 g t x) (@lem3495363 _90715 g t x)). Qed.
Lemma lem3495375 {_90715 : Type'} (g : type686 _90715) (x : _90715) : (term344 _90715 g x) = (term345 _90715 g x).
Proof. exact (fun_ext (fun t : _90715 -> Prop => @lem3495374 _90715 g t x)). Qed.
Lemma lem3495376 {_90715 : Type'} : (@ex (_90715 -> Prop)) = (@ex (_90715 -> Prop)).
Proof. exact (eq_refl (@ex (_90715 -> Prop))). Qed.
Lemma lem3495377 {_90715 : Type'} (g : type686 _90715) (x : _90715) : (term341 _90715 g x) = (term346 _90715 g x).
Proof. exact (MK_COMB (@lem3495376 _90715) (@lem3495375 _90715 g x)). Qed.
Lemma lem3495378 {_90715 : Type'} (g : type686 _90715) (x : _90715) : (term340 _90715 g x) = (term346 _90715 g x).
Proof. exact (TRANS (@lem3495370 _90715 g x) (@lem3495377 _90715 g x)). Qed.
Lemma lem3495379 {_90715 : Type'} (g : type686 _90715) (x : _90715) : (term257 _90715 g x) = (term347 _90715 g x).
Proof. exact (fun_ext (fun t : _90715 -> Prop => @lem3495368 _90715 g t x)). Qed.
Lemma lem3495380 {_90715 : Type'} : (@all (_90715 -> Prop)) = (@all (_90715 -> Prop)).
Proof. exact (eq_refl (@all (_90715 -> Prop))). Qed.
Lemma lem3495381 {_90715 : Type'} (g : type686 _90715) (x : _90715) : (term258 _90715 g x) = (term348 _90715 g x).
Proof. exact (MK_COMB (@lem3495380 _90715) (@lem3495379 _90715 g x)). Qed.
Lemma lem3495383 {_90715 _90724 : Type'} (x : _90724) (f : _90715 -> _90724) (x' : _90715) : (term349 _90715 _90724 x f x') = (term349 _90715 _90724 x f x').
Proof. exact (eq_refl (term349 _90715 _90724 x f x')). Qed.
Lemma lem3495384 {_90715 _90724 : Type'} (x : _90724) (f : _90715 -> _90724) (g : type686 _90715) (x' : _90715) : (term350 _90715 _90724 x f g x') = (term351 _90715 _90724 x f g x').
Proof. exact (MK_COMB (@lem3495383 _90715 _90724 x f x') (@lem3495378 _90715 g x')). Qed.
Lemma lem3495385 {_90715 _90724 : Type'} (x : _90724) (f : _90715 -> _90724) (g : type686 _90715) (x' : _90715) : (term352 _90715 _90724 x f g x') = (term350 _90715 _90724 x f g x').
Proof. exact (@lem17045 (x = (f x')) (term258 _90715 g x')). Qed.
Lemma lem3495386 {_90715 _90724 : Type'} (x : _90724) (f : _90715 -> _90724) (g : type686 _90715) (x' : _90715) : (term352 _90715 _90724 x f g x') = (term351 _90715 _90724 x f g x').
Proof. exact (TRANS (@lem3495385 _90715 _90724 x f g x') (@lem3495384 _90715 _90724 x f g x')). Qed.
Lemma lem3495388 {_90715 _90724 : Type'} (x : _90724) (f : _90715 -> _90724) (x' : _90715) : (term88 _90715 _90724 x f x') = (term88 _90715 _90724 x f x').
Proof. exact (eq_refl (term88 _90715 _90724 x f x')). Qed.
Lemma lem3495389 {_90715 _90724 : Type'} (x : _90724) (f : _90715 -> _90724) (g : type686 _90715) (x' : _90715) : (term259 _90715 _90724 x f g x') = (term353 _90715 _90724 x f g x').
Proof. exact (MK_COMB (@lem3495388 _90715 _90724 x f x') (@lem3495381 _90715 g x')). Qed.
Lemma lem3495390 {_90715 : Type'} (P : _90715 -> Prop) : (term311 _90715 P) = (term312 _90715 P).
Proof. exact (@lem18394 _90715 P). Qed.
Lemma lem3495391 {_90715 _90724 : Type'} (x : _90724) (f : _90715 -> _90724) (g : type686 _90715) : (term354 _90715 _90724 x f g) = (term355 _90715 _90724 x f g).
Proof. exact (@lem3495390 _90715 (term260 _90715 _90724 x f g)). Qed.
Lemma lem3495392 {_90715 _90724 : Type'} (x : _90724) (f : _90715 -> _90724) (g : type686 _90715) (x' : _90715) : (term356 _90715 _90724 x f g x') = (term259 _90715 _90724 x f g x').
Proof. exact (eq_refl (term356 _90715 _90724 x f g x')). Qed.
Lemma lem3495393 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem3495394 {_90715 _90724 : Type'} (x : _90724) (f : _90715 -> _90724) (g : type686 _90715) (x' : _90715) : (term357 _90715 _90724 x f g x') = (term352 _90715 _90724 x f g x').
Proof. exact (MK_COMB (@lem3495393) (@lem3495392 _90715 _90724 x f g x')). Qed.
Lemma lem3495395 {_90715 _90724 : Type'} (x : _90724) (f : _90715 -> _90724) (g : type686 _90715) (x' : _90715) : (term357 _90715 _90724 x f g x') = (term351 _90715 _90724 x f g x').
Proof. exact (TRANS (@lem3495394 _90715 _90724 x f g x') (@lem3495386 _90715 _90724 x f g x')). Qed.
Lemma lem3495396 {_90715 _90724 : Type'} (x : _90724) (f : _90715 -> _90724) (g : type686 _90715) : (term358 _90715 _90724 x f g) = (term359 _90715 _90724 x f g).
Proof. exact (fun_ext (fun x' : _90715 => @lem3495395 _90715 _90724 x f g x')). Qed.
Lemma lem3495397 {_90715 : Type'} : (@all _90715) = (@all _90715).
Proof. exact (eq_refl (@all _90715)). Qed.
Lemma lem3495398 {_90715 _90724 : Type'} (x : _90724) (f : _90715 -> _90724) (g : type686 _90715) : (term355 _90715 _90724 x f g) = (term360 _90715 _90724 x f g).
Proof. exact (MK_COMB (@lem3495397 _90715) (@lem3495396 _90715 _90724 x f g)). Qed.
Lemma lem3495399 {_90715 _90724 : Type'} (x : _90724) (f : _90715 -> _90724) (g : type686 _90715) : (term354 _90715 _90724 x f g) = (term360 _90715 _90724 x f g).
Proof. exact (TRANS (@lem3495391 _90715 _90724 x f g) (@lem3495398 _90715 _90724 x f g)). Qed.
Lemma lem3495400 {_90715 _90724 : Type'} (x : _90724) (f : _90715 -> _90724) (g : type686 _90715) : (term260 _90715 _90724 x f g) = (term361 _90715 _90724 x f g).
Proof. exact (fun_ext (fun x' : _90715 => @lem3495389 _90715 _90724 x f g x')). Qed.
Lemma lem3495401 {_90715 : Type'} : (@ex _90715) = (@ex _90715).
Proof. exact (eq_refl (@ex _90715)). Qed.
Lemma lem3495402 {_90715 _90724 : Type'} (x : _90724) (f : _90715 -> _90724) (g : type686 _90715) : (term261 _90715 _90724 x f g) = (term362 _90715 _90724 x f g).
Proof. exact (MK_COMB (@lem3495401 _90715) (@lem3495400 _90715 _90724 x f g)). Qed.
Lemma lem3495413 {_90715 _90724 : Type'} (x : _90724) (f : _90715 -> _90724) (x' : _90715 -> Prop) (x'' : _90715) : (term363 _90715 _90724 x f x' x'') = (term364 _90715 _90724 x f x' x'').
Proof. exact (@lem17045 (x = (f x'')) (x' x'')). Qed.
Lemma lem3495416 {_90715 _90724 : Type'} (x : _90724) (f : _90715 -> _90724) (x' : _90715 -> Prop) (x'' : _90715) : (term264 _90715 _90724 x f x' x'') = (term264 _90715 _90724 x f x' x'').
Proof. exact (eq_refl (term264 _90715 _90724 x f x' x'')). Qed.
Lemma lem3495417 {_90715 : Type'} (P : _90715 -> Prop) : (term311 _90715 P) = (term312 _90715 P).
Proof. exact (@lem18394 _90715 P). Qed.
Lemma lem3495418 {_90715 _90724 : Type'} (x : _90724) (f : _90715 -> _90724) (x' : _90715 -> Prop) : (term365 _90715 _90724 x f x') = (term366 _90715 _90724 x f x').
Proof. exact (@lem3495417 _90715 (term266 _90715 _90724 x f x')). Qed.
Lemma lem3495419 {_90715 _90724 : Type'} (x : _90724) (f : _90715 -> _90724) (x' : _90715 -> Prop) (x'' : _90715) : (term367 _90715 _90724 x f x' x'') = (term264 _90715 _90724 x f x' x'').
Proof. exact (eq_refl (term367 _90715 _90724 x f x' x'')). Qed.
Lemma lem3495420 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem3495421 {_90715 _90724 : Type'} (x : _90724) (f : _90715 -> _90724) (x' : _90715 -> Prop) (x'' : _90715) : (term368 _90715 _90724 x f x' x'') = (term363 _90715 _90724 x f x' x'').
Proof. exact (MK_COMB (@lem3495420) (@lem3495419 _90715 _90724 x f x' x'')). Qed.
Lemma lem3495422 {_90715 _90724 : Type'} (x : _90724) (f : _90715 -> _90724) (x' : _90715 -> Prop) (x'' : _90715) : (term368 _90715 _90724 x f x' x'') = (term364 _90715 _90724 x f x' x'').
Proof. exact (TRANS (@lem3495421 _90715 _90724 x f x' x'') (@lem3495413 _90715 _90724 x f x' x'')). Qed.
Lemma lem3495423 {_90715 _90724 : Type'} (x : _90724) (f : _90715 -> _90724) (x' : _90715 -> Prop) : (term369 _90715 _90724 x f x') = (term370 _90715 _90724 x f x').
Proof. exact (fun_ext (fun x'' : _90715 => @lem3495422 _90715 _90724 x f x' x'')). Qed.
Lemma lem3495424 {_90715 : Type'} : (@all _90715) = (@all _90715).
Proof. exact (eq_refl (@all _90715)). Qed.
Lemma lem3495425 {_90715 _90724 : Type'} (x : _90724) (f : _90715 -> _90724) (x' : _90715 -> Prop) : (term366 _90715 _90724 x f x') = (term371 _90715 _90724 x f x').
Proof. exact (MK_COMB (@lem3495424 _90715) (@lem3495423 _90715 _90724 x f x')). Qed.
Lemma lem3495426 {_90715 _90724 : Type'} (x : _90724) (f : _90715 -> _90724) (x' : _90715 -> Prop) : (term365 _90715 _90724 x f x') = (term371 _90715 _90724 x f x').
Proof. exact (TRANS (@lem3495418 _90715 _90724 x f x') (@lem3495425 _90715 _90724 x f x')). Qed.
Lemma lem3495427 {_90715 _90724 : Type'} (x : _90724) (f : _90715 -> _90724) (x' : _90715 -> Prop) : (term266 _90715 _90724 x f x') = (term266 _90715 _90724 x f x').
Proof. exact (fun_ext (fun x'' : _90715 => @lem3495416 _90715 _90724 x f x' x'')). Qed.
Lemma lem3495428 {_90715 : Type'} : (@ex _90715) = (@ex _90715).
Proof. exact (eq_refl (@ex _90715)). Qed.
Lemma lem3495429 {_90715 _90724 : Type'} (x : _90724) (f : _90715 -> _90724) (x' : _90715 -> Prop) : (term267 _90715 _90724 x f x') = (term267 _90715 _90724 x f x').
Proof. exact (MK_COMB (@lem3495428 _90715) (@lem3495427 _90715 _90724 x f x')). Qed.
Lemma lem3495431 {_90715 : Type'} (g : type686 _90715) (x : _90715 -> Prop) : (term372 _90715 g x) = (term372 _90715 g x).
Proof. exact (eq_refl (term372 _90715 g x)). Qed.
Lemma lem3495432 {_90715 _90724 : Type'} (g : type686 _90715) (x : _90724) (f : _90715 -> _90724) (x' : _90715 -> Prop) : (term373 _90715 _90724 g x f x') = (term374 _90715 _90724 g x f x').
Proof. exact (MK_COMB (@lem3495431 _90715 g x') (@lem3495426 _90715 _90724 x f x')). Qed.
Lemma lem3495433 {_90715 _90724 : Type'} (g : type686 _90715) (x : _90724) (f : _90715 -> _90724) (x' : _90715 -> Prop) : (term375 _90715 _90724 g x f x') = (term373 _90715 _90724 g x f x').
Proof. exact (@lem17362 (g x') (term267 _90715 _90724 x f x')). Qed.
Lemma lem3495434 {_90715 _90724 : Type'} (g : type686 _90715) (x : _90724) (f : _90715 -> _90724) (x' : _90715 -> Prop) : (term375 _90715 _90724 g x f x') = (term374 _90715 _90724 g x f x').
Proof. exact (TRANS (@lem3495433 _90715 _90724 g x f x') (@lem3495432 _90715 _90724 g x f x')). Qed.
Lemma lem3495436 {_90715 : Type'} (g : type686 _90715) (x : _90715 -> Prop) : (term332 _90715 g x) = (term332 _90715 g x).
Proof. exact (eq_refl (term332 _90715 g x)). Qed.
Lemma lem3495437 {_90715 _90724 : Type'} (g : type686 _90715) (x : _90724) (f : _90715 -> _90724) (x' : _90715 -> Prop) : (term376 _90715 _90724 g x f x') = (term376 _90715 _90724 g x f x').
Proof. exact (MK_COMB (@lem3495436 _90715 g x') (@lem3495429 _90715 _90724 x f x')). Qed.
Lemma lem3495438 {_90715 _90724 : Type'} (g : type686 _90715) (x : _90724) (f : _90715 -> _90724) (x' : _90715 -> Prop) : (term268 _90715 _90724 g x f x') = (term376 _90715 _90724 g x f x').
Proof. exact (@lem17265 (g x') (term267 _90715 _90724 x f x')). Qed.
Lemma lem3495439 {_90715 _90724 : Type'} (g : type686 _90715) (x : _90724) (f : _90715 -> _90724) (x' : _90715 -> Prop) : (term268 _90715 _90724 g x f x') = (term376 _90715 _90724 g x f x').
Proof. exact (TRANS (@lem3495438 _90715 _90724 g x f x') (@lem3495437 _90715 _90724 g x f x')). Qed.
Lemma lem3495440 {_90715 : Type'} (P : type686 _90715) : (term298 _90715 P) = (term299 _90715 P).
Proof. exact (@lem18392 (_90715 -> Prop) P). Qed.
Lemma lem3495441 {_90715 _90724 : Type'} (g : type686 _90715) (x : _90724) (f : _90715 -> _90724) : (term377 _90715 _90724 g x f) = (term378 _90715 _90724 g x f).
Proof. exact (@lem3495440 _90715 (term269 _90715 _90724 g x f)). Qed.
Lemma lem3495442 {_90715 _90724 : Type'} (g : type686 _90715) (x : _90724) (f : _90715 -> _90724) (x' : _90715 -> Prop) : (term379 _90715 _90724 g x f x') = (term268 _90715 _90724 g x f x').
Proof. exact (eq_refl (term379 _90715 _90724 g x f x')). Qed.
Lemma lem3495443 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem3495444 {_90715 _90724 : Type'} (g : type686 _90715) (x : _90724) (f : _90715 -> _90724) (x' : _90715 -> Prop) : (term380 _90715 _90724 g x f x') = (term375 _90715 _90724 g x f x').
Proof. exact (MK_COMB (@lem3495443) (@lem3495442 _90715 _90724 g x f x')). Qed.
Lemma lem3495445 {_90715 _90724 : Type'} (g : type686 _90715) (x : _90724) (f : _90715 -> _90724) (x' : _90715 -> Prop) : (term380 _90715 _90724 g x f x') = (term374 _90715 _90724 g x f x').
Proof. exact (TRANS (@lem3495444 _90715 _90724 g x f x') (@lem3495434 _90715 _90724 g x f x')). Qed.
Lemma lem3495446 {_90715 _90724 : Type'} (g : type686 _90715) (x : _90724) (f : _90715 -> _90724) : (term381 _90715 _90724 g x f) = (term382 _90715 _90724 g x f).
Proof. exact (fun_ext (fun x' : _90715 -> Prop => @lem3495445 _90715 _90724 g x f x')). Qed.
Lemma lem3495447 {_90715 : Type'} : (@ex (_90715 -> Prop)) = (@ex (_90715 -> Prop)).
Proof. exact (eq_refl (@ex (_90715 -> Prop))). Qed.
Lemma lem3495448 {_90715 _90724 : Type'} (g : type686 _90715) (x : _90724) (f : _90715 -> _90724) : (term378 _90715 _90724 g x f) = (term383 _90715 _90724 g x f).
Proof. exact (MK_COMB (@lem3495447 _90715) (@lem3495446 _90715 _90724 g x f)). Qed.
Lemma lem3495449 {_90715 _90724 : Type'} (g : type686 _90715) (x : _90724) (f : _90715 -> _90724) : (term377 _90715 _90724 g x f) = (term383 _90715 _90724 g x f).
Proof. exact (TRANS (@lem3495441 _90715 _90724 g x f) (@lem3495448 _90715 _90724 g x f)). Qed.
Lemma lem3495450 {_90715 _90724 : Type'} (g : type686 _90715) (x : _90724) (f : _90715 -> _90724) : (term269 _90715 _90724 g x f) = (term384 _90715 _90724 g x f).
Proof. exact (fun_ext (fun x' : _90715 -> Prop => @lem3495439 _90715 _90724 g x f x')). Qed.
Lemma lem3495451 {_90715 : Type'} : (@all (_90715 -> Prop)) = (@all (_90715 -> Prop)).
Proof. exact (eq_refl (@all (_90715 -> Prop))). Qed.
Lemma lem3495452 {_90715 _90724 : Type'} (g : type686 _90715) (x : _90724) (f : _90715 -> _90724) : (term270 _90715 _90724 g x f) = (term385 _90715 _90724 g x f).
Proof. exact (MK_COMB (@lem3495451 _90715) (@lem3495450 _90715 _90724 g x f)). Qed.
Lemma lem3495453 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem3495454 {_90715 _90724 : Type'} (x : _90724) (f : _90715 -> _90724) (g : type686 _90715) : (term386 _90715 _90724 x f g) = (term387 _90715 _90724 x f g).
Proof. exact (MK_COMB (@lem3495453) (@lem3495399 _90715 _90724 x f g)). Qed.
Lemma lem3495455 {_90715 _90724 : Type'} (g : type686 _90715) (x : _90724) (f : _90715 -> _90724) : (term388 _90715 _90724 g x f) = (term389 _90715 _90724 g x f).
Proof. exact (MK_COMB (@lem3495454 _90715 _90724 x f g) (@lem3495452 _90715 _90724 g x f)). Qed.
Lemma lem3495456 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem3495457 {_90715 _90724 : Type'} (x : _90724) (f : _90715 -> _90724) (g : type686 _90715) : (term390 _90715 _90724 x f g) = (term391 _90715 _90724 x f g).
Proof. exact (MK_COMB (@lem3495456) (@lem3495402 _90715 _90724 x f g)). Qed.
Lemma lem3495458 {_90715 _90724 : Type'} (g : type686 _90715) (x : _90724) (f : _90715 -> _90724) : (term392 _90715 _90724 g x f) = (term393 _90715 _90724 g x f).
Proof. exact (MK_COMB (@lem3495457 _90715 _90724 x f g) (@lem3495449 _90715 _90724 g x f)). Qed.
Lemma lem3495459 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem3495460 {_90715 _90724 : Type'} (g : type686 _90715) (x : _90724) (f : _90715 -> _90724) : (term394 _90715 _90724 g x f) = (term395 _90715 _90724 g x f).
Proof. exact (MK_COMB (@lem3495459) (@lem3495458 _90715 _90724 g x f)). Qed.
Lemma lem3495461 {_90715 _90724 : Type'} (g : type686 _90715) (x : _90724) (f : _90715 -> _90724) : (term396 _90715 _90724 g x f) = (term397 _90715 _90724 g x f).
Proof. exact (MK_COMB (@lem3495460 _90715 _90724 g x f) (@lem3495455 _90715 _90724 g x f)). Qed.
Lemma lem3495462 {_90715 _90724 : Type'} (g : type686 _90715) (x : _90724) (f : _90715 -> _90724) : (term296 _90715 _90724 g x f) = (term396 _90715 _90724 g x f).
Proof. exact (@lem17646 (term261 _90715 _90724 x f g) (term270 _90715 _90724 g x f)). Qed.
Lemma lem3495463 {_90715 _90724 : Type'} (g : type686 _90715) (x : _90724) (f : _90715 -> _90724) : (term296 _90715 _90724 g x f) = (term397 _90715 _90724 g x f).
Proof. exact (TRANS (@lem3495462 _90715 _90724 g x f) (@lem3495461 _90715 _90724 g x f)). Qed.
Lemma lem3495794 {A : Type'} (P : A -> Prop) (Q : Prop) : (term398 A P Q) = (term399 A P Q).
Proof. exact (EQ_MP (@lem18923 A P Q) (@lem18922 A P Q)). Qed.
Lemma lem3495795 {_90715 : Type'} (P : _90715 -> Prop) (Q : Prop) : (term398 _90715 P Q) = (term399 _90715 P Q).
Proof. exact (@lem3495794 _90715 P Q). Qed.
Lemma lem3495796 {_90715 _90724 : Type'} (g : type686 _90715) (x : _90724) (f : _90715 -> _90724) : (term400 _90715 _90724 g x f) = (term401 _90715 _90724 g x f).
Proof. exact (@lem3495795 _90715 (term361 _90715 _90724 x f g) (term383 _90715 _90724 g x f)). Qed.
Lemma lem3495797 {_90715 _90724 : Type'} (x : _90724) (f : _90715 -> _90724) (g : type686 _90715) (x' : _90715) : (term402 _90715 _90724 x f g x') = (term353 _90715 _90724 x f g x').
Proof. exact (eq_refl (term402 _90715 _90724 x f g x')). Qed.
Lemma lem3495798 {_90715 _90724 : Type'} (x : _90724) (f : _90715 -> _90724) (g : type686 _90715) : (term403 _90715 _90724 x f g) = (term361 _90715 _90724 x f g).
Proof. exact (fun_ext (fun x' : _90715 => @lem3495797 _90715 _90724 x f g x')). Qed.
Lemma lem3495799 {_90715 : Type'} : (@ex _90715) = (@ex _90715).
Proof. exact (eq_refl (@ex _90715)). Qed.
Lemma lem3495800 {_90715 _90724 : Type'} (x : _90724) (f : _90715 -> _90724) (g : type686 _90715) : (term404 _90715 _90724 x f g) = (term362 _90715 _90724 x f g).
Proof. exact (MK_COMB (@lem3495799 _90715) (@lem3495798 _90715 _90724 x f g)). Qed.
Lemma lem3495801 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem3495802 {_90715 _90724 : Type'} (x : _90724) (f : _90715 -> _90724) (g : type686 _90715) : (term405 _90715 _90724 x f g) = (term391 _90715 _90724 x f g).
Proof. exact (MK_COMB (@lem3495801) (@lem3495800 _90715 _90724 x f g)). Qed.
Lemma lem3495803 {_90715 _90724 : Type'} (g : type686 _90715) (x : _90724) (f : _90715 -> _90724) : (term383 _90715 _90724 g x f) = (term383 _90715 _90724 g x f).
Proof. exact (eq_refl (term383 _90715 _90724 g x f)). Qed.
Lemma lem3495804 {_90715 _90724 : Type'} (g : type686 _90715) (x : _90724) (f : _90715 -> _90724) : (term400 _90715 _90724 g x f) = (term393 _90715 _90724 g x f).
Proof. exact (MK_COMB (@lem3495802 _90715 _90724 x f g) (@lem3495803 _90715 _90724 g x f)). Qed.
Lemma lem3495805 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem3495806 {_90715 _90724 : Type'} (g : type686 _90715) (x : _90724) (f : _90715 -> _90724) : (term406 _90715 _90724 g x f) = (term407 _90715 _90724 g x f).
Proof. exact (MK_COMB (@lem3495805) (@lem3495804 _90715 _90724 g x f)). Qed.
Lemma lem3495807 {_90715 _90724 : Type'} (x : _90724) (f : _90715 -> _90724) (g : type686 _90715) (x' : _90715) : (term402 _90715 _90724 x f g x') = (term353 _90715 _90724 x f g x').
Proof. exact (eq_refl (term402 _90715 _90724 x f g x')). Qed.
Lemma lem3495808 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem3495809 {_90715 _90724 : Type'} (x : _90724) (f : _90715 -> _90724) (g : type686 _90715) (x' : _90715) : (term408 _90715 _90724 x f g x') = (term409 _90715 _90724 x f g x').
Proof. exact (MK_COMB (@lem3495808) (@lem3495807 _90715 _90724 x f g x')). Qed.
Lemma lem3495810 {_90715 _90724 : Type'} (g : type686 _90715) (x : _90724) (f : _90715 -> _90724) : (term383 _90715 _90724 g x f) = (term383 _90715 _90724 g x f).
Proof. exact (eq_refl (term383 _90715 _90724 g x f)). Qed.
Lemma lem3495811 {_90715 _90724 : Type'} (x : _90715) (g : type686 _90715) (x' : _90724) (f : _90715 -> _90724) : (term410 _90715 _90724 x g x' f) = (term411 _90715 _90724 x g x' f).
Proof. exact (MK_COMB (@lem3495809 _90715 _90724 x' f g x) (@lem3495810 _90715 _90724 g x' f)). Qed.
Lemma lem3495812 {_90715 _90724 : Type'} (g : type686 _90715) (x : _90724) (f : _90715 -> _90724) : (term412 _90715 _90724 g x f) = (term413 _90715 _90724 g x f).
Proof. exact (fun_ext (fun x' : _90715 => @lem3495811 _90715 _90724 x' g x f)). Qed.
Lemma lem3495813 {_90715 : Type'} : (@ex _90715) = (@ex _90715).
Proof. exact (eq_refl (@ex _90715)). Qed.
Lemma lem3495814 {_90715 _90724 : Type'} (g : type686 _90715) (x : _90724) (f : _90715 -> _90724) : (term401 _90715 _90724 g x f) = (term414 _90715 _90724 g x f).
Proof. exact (MK_COMB (@lem3495813 _90715) (@lem3495812 _90715 _90724 g x f)). Qed.
Lemma lem3495815 {_90715 _90724 : Type'} (g : type686 _90715) (x : _90724) (f : _90715 -> _90724) : ((term400 _90715 _90724 g x f) = (term401 _90715 _90724 g x f)) = ((term393 _90715 _90724 g x f) = (term414 _90715 _90724 g x f)).
Proof. exact (MK_COMB (@lem3495806 _90715 _90724 g x f) (@lem3495814 _90715 _90724 g x f)). Qed.
Lemma lem3495816 {_90715 _90724 : Type'} (g : type686 _90715) (x : _90724) (f : _90715 -> _90724) : (term393 _90715 _90724 g x f) = (term414 _90715 _90724 g x f).
Proof. exact (EQ_MP (@lem3495815 _90715 _90724 g x f) (@lem3495796 _90715 _90724 g x f)). Qed.
Lemma lem3495818 {A : Type'} (P : Prop) (Q : A -> Prop) : (term415 A P Q) = (term416 A P Q).
Proof. exact (EQ_MP (@lem18929 A P Q) (@lem18928 A P Q)). Qed.
Lemma lem3495819 {_90715 : Type'} (P : Prop) (Q : type686 _90715) : (term417 _90715 P Q) = (term418 _90715 P Q).
Proof. exact (@lem3495818 (_90715 -> Prop) P Q). Qed.
Lemma lem3495820 {_90715 _90724 : Type'} (x : _90715) (g : type686 _90715) (x' : _90724) (f : _90715 -> _90724) : (term419 _90715 _90724 x g x' f) = (term420 _90715 _90724 x g x' f).
Proof. exact (@lem3495819 _90715 (term353 _90715 _90724 x' f g x) (term382 _90715 _90724 g x' f)). Qed.
Lemma lem3495821 {_90715 _90724 : Type'} (g : type686 _90715) (x : _90724) (f : _90715 -> _90724) (x' : _90715 -> Prop) : (term421 _90715 _90724 g x f x') = (term374 _90715 _90724 g x f x').
Proof. exact (eq_refl (term421 _90715 _90724 g x f x')). Qed.
Lemma lem3495822 {_90715 _90724 : Type'} (g : type686 _90715) (x : _90724) (f : _90715 -> _90724) : (term422 _90715 _90724 g x f) = (term382 _90715 _90724 g x f).
Proof. exact (fun_ext (fun x' : _90715 -> Prop => @lem3495821 _90715 _90724 g x f x')). Qed.
Lemma lem3495823 {_90715 : Type'} : (@ex (_90715 -> Prop)) = (@ex (_90715 -> Prop)).
Proof. exact (eq_refl (@ex (_90715 -> Prop))). Qed.
Lemma lem3495824 {_90715 _90724 : Type'} (g : type686 _90715) (x : _90724) (f : _90715 -> _90724) : (term423 _90715 _90724 g x f) = (term383 _90715 _90724 g x f).
Proof. exact (MK_COMB (@lem3495823 _90715) (@lem3495822 _90715 _90724 g x f)). Qed.
Lemma lem3495825 {_90715 _90724 : Type'} (x : _90724) (f : _90715 -> _90724) (g : type686 _90715) (x' : _90715) : (term409 _90715 _90724 x f g x') = (term409 _90715 _90724 x f g x').
Proof. exact (eq_refl (term409 _90715 _90724 x f g x')). Qed.
Lemma lem3495826 {_90715 _90724 : Type'} (x : _90715) (g : type686 _90715) (x' : _90724) (f : _90715 -> _90724) : (term419 _90715 _90724 x g x' f) = (term411 _90715 _90724 x g x' f).
Proof. exact (MK_COMB (@lem3495825 _90715 _90724 x' f g x) (@lem3495824 _90715 _90724 g x' f)). Qed.
Lemma lem3495827 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem3495828 {_90715 _90724 : Type'} (x : _90715) (g : type686 _90715) (x' : _90724) (f : _90715 -> _90724) : (term424 _90715 _90724 x g x' f) = (term425 _90715 _90724 x g x' f).
Proof. exact (MK_COMB (@lem3495827) (@lem3495826 _90715 _90724 x g x' f)). Qed.
Lemma lem3495829 {_90715 _90724 : Type'} (g : type686 _90715) (x : _90724) (f : _90715 -> _90724) (x' : _90715 -> Prop) : (term421 _90715 _90724 g x f x') = (term374 _90715 _90724 g x f x').
Proof. exact (eq_refl (term421 _90715 _90724 g x f x')). Qed.
Lemma lem3495830 {_90715 _90724 : Type'} (x : _90724) (f : _90715 -> _90724) (g : type686 _90715) (x' : _90715) : (term409 _90715 _90724 x f g x') = (term409 _90715 _90724 x f g x').
Proof. exact (eq_refl (term409 _90715 _90724 x f g x')). Qed.
Lemma lem3495831 {_90715 _90724 : Type'} (x : _90715) (g : type686 _90715) (x' : _90724) (f : _90715 -> _90724) (x'' : _90715 -> Prop) : (term426 _90715 _90724 x g x' f x'') = (term427 _90715 _90724 x g x' f x'').
Proof. exact (MK_COMB (@lem3495830 _90715 _90724 x' f g x) (@lem3495829 _90715 _90724 g x' f x'')). Qed.
Lemma lem3495832 {_90715 _90724 : Type'} (x : _90715) (g : type686 _90715) (x' : _90724) (f : _90715 -> _90724) : (term428 _90715 _90724 x g x' f) = (term429 _90715 _90724 x g x' f).
Proof. exact (fun_ext (fun x'' : _90715 -> Prop => @lem3495831 _90715 _90724 x g x' f x'')). Qed.
Lemma lem3495833 {_90715 : Type'} : (@ex (_90715 -> Prop)) = (@ex (_90715 -> Prop)).
Proof. exact (eq_refl (@ex (_90715 -> Prop))). Qed.
Lemma lem3495834 {_90715 _90724 : Type'} (x : _90715) (g : type686 _90715) (x' : _90724) (f : _90715 -> _90724) : (term420 _90715 _90724 x g x' f) = (term430 _90715 _90724 x g x' f).
Proof. exact (MK_COMB (@lem3495833 _90715) (@lem3495832 _90715 _90724 x g x' f)). Qed.
Lemma lem3495835 {_90715 _90724 : Type'} (x : _90715) (g : type686 _90715) (x' : _90724) (f : _90715 -> _90724) : ((term419 _90715 _90724 x g x' f) = (term420 _90715 _90724 x g x' f)) = ((term411 _90715 _90724 x g x' f) = (term430 _90715 _90724 x g x' f)).
Proof. exact (MK_COMB (@lem3495828 _90715 _90724 x g x' f) (@lem3495834 _90715 _90724 x g x' f)). Qed.
Lemma lem3495836 {_90715 _90724 : Type'} (x : _90715) (g : type686 _90715) (x' : _90724) (f : _90715 -> _90724) : (term411 _90715 _90724 x g x' f) = (term430 _90715 _90724 x g x' f).
Proof. exact (EQ_MP (@lem3495835 _90715 _90724 x g x' f) (@lem3495820 _90715 _90724 x g x' f)). Qed.
Lemma lem3495837 {_90715 _90724 : Type'} (g : type686 _90715) (x : _90724) (f : _90715 -> _90724) : (term413 _90715 _90724 g x f) = (term431 _90715 _90724 g x f).
Proof. exact (fun_ext (fun x' : _90715 => @lem3495836 _90715 _90724 x' g x f)). Qed.
Lemma lem3495838 {_90715 : Type'} : (@ex _90715) = (@ex _90715).
Proof. exact (eq_refl (@ex _90715)). Qed.
Lemma lem3495839 {_90715 _90724 : Type'} (g : type686 _90715) (x : _90724) (f : _90715 -> _90724) : (term414 _90715 _90724 g x f) = (term432 _90715 _90724 g x f).
Proof. exact (MK_COMB (@lem3495838 _90715) (@lem3495837 _90715 _90724 g x f)). Qed.
Lemma lem3495840 {_90715 _90724 : Type'} (g : type686 _90715) (x : _90724) (f : _90715 -> _90724) : (term393 _90715 _90724 g x f) = (term432 _90715 _90724 g x f).
Proof. exact (TRANS (@lem3495816 _90715 _90724 g x f) (@lem3495839 _90715 _90724 g x f)). Qed.
Lemma lem3495841 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem3495842 {_90715 _90724 : Type'} (g : type686 _90715) (x : _90724) (f : _90715 -> _90724) : (term395 _90715 _90724 g x f) = (term433 _90715 _90724 g x f).
Proof. exact (MK_COMB (@lem3495841) (@lem3495840 _90715 _90724 g x f)). Qed.
Lemma lem3495844 {A : Type'} (P : Prop) (Q : A -> Prop) : (term434 A P Q) = (term435 A P Q).
Proof. exact (EQ_MP (@lem18911 A P Q) (@lem18910 A P Q)). Qed.
Lemma lem3495845 {_90715 : Type'} (P : Prop) (Q : type686 _90715) : (term436 _90715 P Q) = (term437 _90715 P Q).
Proof. exact (@lem3495844 (_90715 -> Prop) P Q). Qed.
Lemma lem3495846 {_90715 _90724 : Type'} (x : _90724) (f : _90715 -> _90724) (g : type686 _90715) (x' : _90715) : (term438 _90715 _90724 x f g x') = (term439 _90715 _90724 x f g x').
Proof. exact (@lem3495845 _90715 (term440 _90715 _90724 x f x') (term345 _90715 g x')). Qed.
Lemma lem3495847 {_90715 : Type'} (g : type686 _90715) (t : _90715 -> Prop) (x : _90715) : (term441 _90715 g x t) = (term338 _90715 g t x).
Proof. exact (eq_refl (term441 _90715 g x t)). Qed.
Lemma lem3495848 {_90715 : Type'} (g : type686 _90715) (x : _90715) : (term442 _90715 g x) = (term345 _90715 g x).
Proof. exact (fun_ext (fun t : _90715 -> Prop => @lem3495847 _90715 g t x)). Qed.
Lemma lem3495849 {_90715 : Type'} : (@ex (_90715 -> Prop)) = (@ex (_90715 -> Prop)).
Proof. exact (eq_refl (@ex (_90715 -> Prop))). Qed.
Lemma lem3495850 {_90715 : Type'} (g : type686 _90715) (x : _90715) : (term443 _90715 g x) = (term346 _90715 g x).
Proof. exact (MK_COMB (@lem3495849 _90715) (@lem3495848 _90715 g x)). Qed.
Lemma lem3495851 {_90715 _90724 : Type'} (x : _90724) (f : _90715 -> _90724) (x' : _90715) : (term349 _90715 _90724 x f x') = (term349 _90715 _90724 x f x').
Proof. exact (eq_refl (term349 _90715 _90724 x f x')). Qed.
Lemma lem3495852 {_90715 _90724 : Type'} (x : _90724) (f : _90715 -> _90724) (g : type686 _90715) (x' : _90715) : (term438 _90715 _90724 x f g x') = (term351 _90715 _90724 x f g x').
Proof. exact (MK_COMB (@lem3495851 _90715 _90724 x f x') (@lem3495850 _90715 g x')). Qed.
Lemma lem3495853 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem3495854 {_90715 _90724 : Type'} (x : _90724) (f : _90715 -> _90724) (g : type686 _90715) (x' : _90715) : (term444 _90715 _90724 x f g x') = (term445 _90715 _90724 x f g x').
Proof. exact (MK_COMB (@lem3495853) (@lem3495852 _90715 _90724 x f g x')). Qed.
Lemma lem3495855 {_90715 : Type'} (g : type686 _90715) (t : _90715 -> Prop) (x : _90715) : (term441 _90715 g x t) = (term338 _90715 g t x).
Proof. exact (eq_refl (term441 _90715 g x t)). Qed.
Lemma lem3495856 {_90715 _90724 : Type'} (x : _90724) (f : _90715 -> _90724) (x' : _90715) : (term349 _90715 _90724 x f x') = (term349 _90715 _90724 x f x').
Proof. exact (eq_refl (term349 _90715 _90724 x f x')). Qed.
Lemma lem3495857 {_90715 _90724 : Type'} (x : _90724) (f : _90715 -> _90724) (g : type686 _90715) (t : _90715 -> Prop) (x' : _90715) : (term446 _90715 _90724 x f g x' t) = (term447 _90715 _90724 x f g t x').
Proof. exact (MK_COMB (@lem3495856 _90715 _90724 x f x') (@lem3495855 _90715 g t x')). Qed.
Lemma lem3495858 {_90715 _90724 : Type'} (x : _90724) (f : _90715 -> _90724) (g : type686 _90715) (x' : _90715) : (term448 _90715 _90724 x f g x') = (term449 _90715 _90724 x f g x').
Proof. exact (fun_ext (fun t : _90715 -> Prop => @lem3495857 _90715 _90724 x f g t x')). Qed.
Lemma lem3495859 {_90715 : Type'} : (@ex (_90715 -> Prop)) = (@ex (_90715 -> Prop)).
Proof. exact (eq_refl (@ex (_90715 -> Prop))). Qed.
Lemma lem3495860 {_90715 _90724 : Type'} (x : _90724) (f : _90715 -> _90724) (g : type686 _90715) (x' : _90715) : (term439 _90715 _90724 x f g x') = (term450 _90715 _90724 x f g x').
Proof. exact (MK_COMB (@lem3495859 _90715) (@lem3495858 _90715 _90724 x f g x')). Qed.
Lemma lem3495861 {_90715 _90724 : Type'} (x : _90724) (f : _90715 -> _90724) (g : type686 _90715) (x' : _90715) : ((term438 _90715 _90724 x f g x') = (term439 _90715 _90724 x f g x')) = ((term351 _90715 _90724 x f g x') = (term450 _90715 _90724 x f g x')).
Proof. exact (MK_COMB (@lem3495854 _90715 _90724 x f g x') (@lem3495860 _90715 _90724 x f g x')). Qed.
Lemma lem3495862 {_90715 _90724 : Type'} (x : _90724) (f : _90715 -> _90724) (g : type686 _90715) (x' : _90715) : (term351 _90715 _90724 x f g x') = (term450 _90715 _90724 x f g x').
Proof. exact (EQ_MP (@lem3495861 _90715 _90724 x f g x') (@lem3495846 _90715 _90724 x f g x')). Qed.
Lemma lem3495863 {_90715 _90724 : Type'} (x : _90724) (f : _90715 -> _90724) (g : type686 _90715) : (term359 _90715 _90724 x f g) = (term451 _90715 _90724 x f g).
Proof. exact (fun_ext (fun x' : _90715 => @lem3495862 _90715 _90724 x f g x')). Qed.
Lemma lem3495864 {_90715 : Type'} : (@all _90715) = (@all _90715).
Proof. exact (eq_refl (@all _90715)). Qed.
Lemma lem3495865 {_90715 _90724 : Type'} (x : _90724) (f : _90715 -> _90724) (g : type686 _90715) : (term360 _90715 _90724 x f g) = (term452 _90715 _90724 x f g).
Proof. exact (MK_COMB (@lem3495864 _90715) (@lem3495863 _90715 _90724 x f g)). Qed.
Lemma lem3495867 {A B : Type'} (P : type1413 A B) : (term453 A B P) = (term454 A B P).
Proof. exact (EQ_MP (@lem18899 A B P) (@lem18898 A B P)). Qed.
Lemma lem3495868 {_90715 : Type'} (P : type1364 _90715) : (term455 _90715 P) = (term456 _90715 P).
Proof. exact (@lem3495867 _90715 (_90715 -> Prop) P). Qed.
Lemma lem3495869 {_90715 _90724 : Type'} (x : _90724) (f : _90715 -> _90724) (g : type686 _90715) : (term457 _90715 _90724 x f g) = (term458 _90715 _90724 x f g).
Proof. exact (@lem3495868 _90715 (term459 _90715 _90724 x f g)). Qed.
Lemma lem3495870 {_90715 _90724 : Type'} (x : _90724) (f : _90715 -> _90724) (g : type686 _90715) (x' : _90715) : (term460 _90715 _90724 x f g x') = (term449 _90715 _90724 x f g x').
Proof. exact (eq_refl (term460 _90715 _90724 x f g x')). Qed.
Lemma lem3495871 {_90715 : Type'} (t : _90715 -> Prop) : t = t.
Proof. exact (eq_refl t). Qed.
Lemma lem3495872 {_90715 _90724 : Type'} (x : _90724) (f : _90715 -> _90724) (g : type686 _90715) (x' : _90715) (t : _90715 -> Prop) : (term461 _90715 _90724 x f g x' t) = (term462 _90715 _90724 x f g x' t).
Proof. exact (MK_COMB (@lem3495870 _90715 _90724 x f g x') (@lem3495871 _90715 t)). Qed.
Lemma lem3495873 {_90715 _90724 : Type'} (x : _90724) (f : _90715 -> _90724) (g : type686 _90715) (t : _90715 -> Prop) (x' : _90715) : (term462 _90715 _90724 x f g x' t) = (term447 _90715 _90724 x f g t x').
Proof. exact (eq_refl (term462 _90715 _90724 x f g x' t)). Qed.
Lemma lem3495874 {_90715 _90724 : Type'} (x : _90724) (f : _90715 -> _90724) (g : type686 _90715) (t : _90715 -> Prop) (x' : _90715) : (term461 _90715 _90724 x f g x' t) = (term447 _90715 _90724 x f g t x').
Proof. exact (TRANS (@lem3495872 _90715 _90724 x f g x' t) (@lem3495873 _90715 _90724 x f g t x')). Qed.
Lemma lem3495875 {_90715 _90724 : Type'} (x : _90724) (f : _90715 -> _90724) (g : type686 _90715) (x' : _90715) : (term463 _90715 _90724 x f g x') = (term449 _90715 _90724 x f g x').
Proof. exact (fun_ext (fun t : _90715 -> Prop => @lem3495874 _90715 _90724 x f g t x')). Qed.
Lemma lem3495876 {_90715 : Type'} : (@ex (_90715 -> Prop)) = (@ex (_90715 -> Prop)).
Proof. exact (eq_refl (@ex (_90715 -> Prop))). Qed.
Lemma lem3495877 {_90715 _90724 : Type'} (x : _90724) (f : _90715 -> _90724) (g : type686 _90715) (x' : _90715) : (term464 _90715 _90724 x f g x') = (term450 _90715 _90724 x f g x').
Proof. exact (MK_COMB (@lem3495876 _90715) (@lem3495875 _90715 _90724 x f g x')). Qed.
Lemma lem3495878 {_90715 _90724 : Type'} (x : _90724) (f : _90715 -> _90724) (g : type686 _90715) : (term465 _90715 _90724 x f g) = (term451 _90715 _90724 x f g).
Proof. exact (fun_ext (fun x' : _90715 => @lem3495877 _90715 _90724 x f g x')). Qed.
Lemma lem3495879 {_90715 : Type'} : (@all _90715) = (@all _90715).
Proof. exact (eq_refl (@all _90715)). Qed.
Lemma lem3495880 {_90715 _90724 : Type'} (x : _90724) (f : _90715 -> _90724) (g : type686 _90715) : (term457 _90715 _90724 x f g) = (term452 _90715 _90724 x f g).
Proof. exact (MK_COMB (@lem3495879 _90715) (@lem3495878 _90715 _90724 x f g)). Qed.
Lemma lem3495881 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem3495882 {_90715 _90724 : Type'} (x : _90724) (f : _90715 -> _90724) (g : type686 _90715) : (term466 _90715 _90724 x f g) = (term467 _90715 _90724 x f g).
Proof. exact (MK_COMB (@lem3495881) (@lem3495880 _90715 _90724 x f g)). Qed.
Lemma lem3495883 {_90715 _90724 : Type'} (x : _90724) (f : _90715 -> _90724) (g : type686 _90715) (x' : _90715) : (term460 _90715 _90724 x f g x') = (term449 _90715 _90724 x f g x').
Proof. exact (eq_refl (term460 _90715 _90724 x f g x')). Qed.
Lemma lem3495884 {_90715 : Type'} (t : type1402 _90715) (x : _90715) : (t x) = (t x).
Proof. exact (eq_refl (t x)). Qed.
Lemma lem3495885 {_90715 _90724 : Type'} (x : _90724) (f : _90715 -> _90724) (g : type686 _90715) (t : type1402 _90715) (x' : _90715) : (term468 _90715 _90724 x f g t x') = (term469 _90715 _90724 x f g t x').
Proof. exact (MK_COMB (@lem3495883 _90715 _90724 x f g x') (@lem3495884 _90715 t x')). Qed.
Lemma lem3495886 {_90715 _90724 : Type'} (x : _90724) (f : _90715 -> _90724) (g : type686 _90715) (t : type1402 _90715) (x' : _90715) : (term469 _90715 _90724 x f g t x') = (term470 _90715 _90724 x f g t x').
Proof. exact (eq_refl (term469 _90715 _90724 x f g t x')). Qed.
Lemma lem3495887 {_90715 _90724 : Type'} (x : _90724) (f : _90715 -> _90724) (g : type686 _90715) (t : type1402 _90715) (x' : _90715) : (term468 _90715 _90724 x f g t x') = (term470 _90715 _90724 x f g t x').
Proof. exact (TRANS (@lem3495885 _90715 _90724 x f g t x') (@lem3495886 _90715 _90724 x f g t x')). Qed.
Lemma lem3495888 {_90715 _90724 : Type'} (x : _90724) (f : _90715 -> _90724) (g : type686 _90715) (t : type1402 _90715) : (term471 _90715 _90724 x f g t) = (term472 _90715 _90724 x f g t).
Proof. exact (fun_ext (fun x' : _90715 => @lem3495887 _90715 _90724 x f g t x')). Qed.
Lemma lem3495889 {_90715 : Type'} : (@all _90715) = (@all _90715).
Proof. exact (eq_refl (@all _90715)). Qed.
Lemma lem3495890 {_90715 _90724 : Type'} (x : _90724) (f : _90715 -> _90724) (g : type686 _90715) (t : type1402 _90715) : (term473 _90715 _90724 x f g t) = (term474 _90715 _90724 x f g t).
Proof. exact (MK_COMB (@lem3495889 _90715) (@lem3495888 _90715 _90724 x f g t)). Qed.
Lemma lem3495891 {_90715 _90724 : Type'} (x : _90724) (f : _90715 -> _90724) (g : type686 _90715) : (term475 _90715 _90724 x f g) = (term476 _90715 _90724 x f g).
Proof. exact (fun_ext (fun t : type1402 _90715 => @lem3495890 _90715 _90724 x f g t)). Qed.
Lemma lem3495892 {_90715 : Type'} : (@ex (_90715 -> _90715 -> Prop)) = (@ex (_90715 -> _90715 -> Prop)).
Proof. exact (eq_refl (@ex (_90715 -> _90715 -> Prop))). Qed.
Lemma lem3495893 {_90715 _90724 : Type'} (x : _90724) (f : _90715 -> _90724) (g : type686 _90715) : (term458 _90715 _90724 x f g) = (term477 _90715 _90724 x f g).
Proof. exact (MK_COMB (@lem3495892 _90715) (@lem3495891 _90715 _90724 x f g)). Qed.
Lemma lem3495894 {_90715 _90724 : Type'} (x : _90724) (f : _90715 -> _90724) (g : type686 _90715) : ((term457 _90715 _90724 x f g) = (term458 _90715 _90724 x f g)) = ((term452 _90715 _90724 x f g) = (term477 _90715 _90724 x f g)).
Proof. exact (MK_COMB (@lem3495882 _90715 _90724 x f g) (@lem3495893 _90715 _90724 x f g)). Qed.
Lemma lem3495895 {_90715 _90724 : Type'} (x : _90724) (f : _90715 -> _90724) (g : type686 _90715) : (term452 _90715 _90724 x f g) = (term477 _90715 _90724 x f g).
Proof. exact (EQ_MP (@lem3495894 _90715 _90724 x f g) (@lem3495869 _90715 _90724 x f g)). Qed.
Lemma lem3495896 {_90715 _90724 : Type'} (x : _90724) (f : _90715 -> _90724) (g : type686 _90715) : (term360 _90715 _90724 x f g) = (term477 _90715 _90724 x f g).
Proof. exact (TRANS (@lem3495865 _90715 _90724 x f g) (@lem3495895 _90715 _90724 x f g)). Qed.
Lemma lem3495897 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem3495898 {_90715 _90724 : Type'} (x : _90724) (f : _90715 -> _90724) (g : type686 _90715) : (term387 _90715 _90724 x f g) = (term478 _90715 _90724 x f g).
Proof. exact (MK_COMB (@lem3495897) (@lem3495896 _90715 _90724 x f g)). Qed.
Lemma lem3495900 {A : Type'} (P : Prop) (Q : A -> Prop) : (term434 A P Q) = (term435 A P Q).
Proof. exact (EQ_MP (@lem18911 A P Q) (@lem18910 A P Q)). Qed.
Lemma lem3495901 {_90715 : Type'} (P : Prop) (Q : _90715 -> Prop) : (term434 _90715 P Q) = (term435 _90715 P Q).
Proof. exact (@lem3495900 _90715 P Q). Qed.
Lemma lem3495902 {_90715 _90724 : Type'} (g : type686 _90715) (x : _90724) (f : _90715 -> _90724) (x' : _90715 -> Prop) : (term479 _90715 _90724 g x f x') = (term480 _90715 _90724 g x f x').
Proof. exact (@lem3495901 _90715 (term207 _90715 g x') (term266 _90715 _90724 x f x')). Qed.
Lemma lem3495903 {_90715 _90724 : Type'} (x : _90724) (f : _90715 -> _90724) (x' : _90715 -> Prop) (x'' : _90715) : (term367 _90715 _90724 x f x' x'') = (term264 _90715 _90724 x f x' x'').
Proof. exact (eq_refl (term367 _90715 _90724 x f x' x'')). Qed.
Lemma lem3495904 {_90715 _90724 : Type'} (x : _90724) (f : _90715 -> _90724) (x' : _90715 -> Prop) : (term481 _90715 _90724 x f x') = (term266 _90715 _90724 x f x').
Proof. exact (fun_ext (fun x'' : _90715 => @lem3495903 _90715 _90724 x f x' x'')). Qed.
Lemma lem3495905 {_90715 : Type'} : (@ex _90715) = (@ex _90715).
Proof. exact (eq_refl (@ex _90715)). Qed.
Lemma lem3495906 {_90715 _90724 : Type'} (x : _90724) (f : _90715 -> _90724) (x' : _90715 -> Prop) : (term482 _90715 _90724 x f x') = (term267 _90715 _90724 x f x').
Proof. exact (MK_COMB (@lem3495905 _90715) (@lem3495904 _90715 _90724 x f x')). Qed.
Lemma lem3495907 {_90715 : Type'} (g : type686 _90715) (x : _90715 -> Prop) : (term332 _90715 g x) = (term332 _90715 g x).
Proof. exact (eq_refl (term332 _90715 g x)). Qed.
Lemma lem3495908 {_90715 _90724 : Type'} (g : type686 _90715) (x : _90724) (f : _90715 -> _90724) (x' : _90715 -> Prop) : (term479 _90715 _90724 g x f x') = (term376 _90715 _90724 g x f x').
Proof. exact (MK_COMB (@lem3495907 _90715 g x') (@lem3495906 _90715 _90724 x f x')). Qed.
Lemma lem3495909 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem3495910 {_90715 _90724 : Type'} (g : type686 _90715) (x : _90724) (f : _90715 -> _90724) (x' : _90715 -> Prop) : (term483 _90715 _90724 g x f x') = (term484 _90715 _90724 g x f x').
Proof. exact (MK_COMB (@lem3495909) (@lem3495908 _90715 _90724 g x f x')). Qed.
Lemma lem3495911 {_90715 _90724 : Type'} (x : _90724) (f : _90715 -> _90724) (x' : _90715 -> Prop) (x'' : _90715) : (term367 _90715 _90724 x f x' x'') = (term264 _90715 _90724 x f x' x'').
Proof. exact (eq_refl (term367 _90715 _90724 x f x' x'')). Qed.
Lemma lem3495912 {_90715 : Type'} (g : type686 _90715) (x : _90715 -> Prop) : (term332 _90715 g x) = (term332 _90715 g x).
Proof. exact (eq_refl (term332 _90715 g x)). Qed.
Lemma lem3495913 {_90715 _90724 : Type'} (g : type686 _90715) (x : _90724) (f : _90715 -> _90724) (x' : _90715 -> Prop) (x'' : _90715) : (term485 _90715 _90724 g x f x' x'') = (term486 _90715 _90724 g x f x' x'').
Proof. exact (MK_COMB (@lem3495912 _90715 g x') (@lem3495911 _90715 _90724 x f x' x'')). Qed.
Lemma lem3495914 {_90715 _90724 : Type'} (g : type686 _90715) (x : _90724) (f : _90715 -> _90724) (x' : _90715 -> Prop) : (term487 _90715 _90724 g x f x') = (term488 _90715 _90724 g x f x').
Proof. exact (fun_ext (fun x'' : _90715 => @lem3495913 _90715 _90724 g x f x' x'')). Qed.
Lemma lem3495915 {_90715 : Type'} : (@ex _90715) = (@ex _90715).
Proof. exact (eq_refl (@ex _90715)). Qed.
Lemma lem3495916 {_90715 _90724 : Type'} (g : type686 _90715) (x : _90724) (f : _90715 -> _90724) (x' : _90715 -> Prop) : (term480 _90715 _90724 g x f x') = (term489 _90715 _90724 g x f x').
Proof. exact (MK_COMB (@lem3495915 _90715) (@lem3495914 _90715 _90724 g x f x')). Qed.
Lemma lem3495917 {_90715 _90724 : Type'} (g : type686 _90715) (x : _90724) (f : _90715 -> _90724) (x' : _90715 -> Prop) : ((term479 _90715 _90724 g x f x') = (term480 _90715 _90724 g x f x')) = ((term376 _90715 _90724 g x f x') = (term489 _90715 _90724 g x f x')).
Proof. exact (MK_COMB (@lem3495910 _90715 _90724 g x f x') (@lem3495916 _90715 _90724 g x f x')). Qed.
Lemma lem3495918 {_90715 _90724 : Type'} (g : type686 _90715) (x : _90724) (f : _90715 -> _90724) (x' : _90715 -> Prop) : (term376 _90715 _90724 g x f x') = (term489 _90715 _90724 g x f x').
Proof. exact (EQ_MP (@lem3495917 _90715 _90724 g x f x') (@lem3495902 _90715 _90724 g x f x')). Qed.
Lemma lem3495919 {_90715 _90724 : Type'} (g : type686 _90715) (x : _90724) (f : _90715 -> _90724) : (term384 _90715 _90724 g x f) = (term490 _90715 _90724 g x f).
Proof. exact (fun_ext (fun x' : _90715 -> Prop => @lem3495918 _90715 _90724 g x f x')). Qed.
Lemma lem3495920 {_90715 : Type'} : (@all (_90715 -> Prop)) = (@all (_90715 -> Prop)).
Proof. exact (eq_refl (@all (_90715 -> Prop))). Qed.
Lemma lem3495921 {_90715 _90724 : Type'} (g : type686 _90715) (x : _90724) (f : _90715 -> _90724) : (term385 _90715 _90724 g x f) = (term491 _90715 _90724 g x f).
Proof. exact (MK_COMB (@lem3495920 _90715) (@lem3495919 _90715 _90724 g x f)). Qed.
Lemma lem3495923 {A B : Type'} (P : type1413 A B) : (term453 A B P) = (term454 A B P).
Proof. exact (EQ_MP (@lem18899 A B P) (@lem18898 A B P)). Qed.
Lemma lem3495924 {_90715 : Type'} (P : type672 _90715) : (term492 _90715 P) = (term493 _90715 P).
Proof. exact (@lem3495923 (_90715 -> Prop) _90715 P). Qed.
Lemma lem3495925 {_90715 _90724 : Type'} (g : type686 _90715) (x : _90724) (f : _90715 -> _90724) : (term494 _90715 _90724 g x f) = (term495 _90715 _90724 g x f).
Proof. exact (@lem3495924 _90715 (term496 _90715 _90724 g x f)). Qed.
Lemma lem3495926 {_90715 _90724 : Type'} (g : type686 _90715) (x : _90724) (f : _90715 -> _90724) (x' : _90715 -> Prop) : (term497 _90715 _90724 g x f x') = (term488 _90715 _90724 g x f x').
Proof. exact (eq_refl (term497 _90715 _90724 g x f x')). Qed.
Lemma lem3495927 {_90715 : Type'} (x : _90715) : x = x.
Proof. exact (eq_refl x). Qed.
Lemma lem3495928 {_90715 _90724 : Type'} (g : type686 _90715) (x : _90724) (f : _90715 -> _90724) (x' : _90715 -> Prop) (x'' : _90715) : (term498 _90715 _90724 g x f x' x'') = (term499 _90715 _90724 g x f x' x'').
Proof. exact (MK_COMB (@lem3495926 _90715 _90724 g x f x') (@lem3495927 _90715 x'')). Qed.
Lemma lem3495929 {_90715 _90724 : Type'} (g : type686 _90715) (x : _90724) (f : _90715 -> _90724) (x' : _90715 -> Prop) (x'' : _90715) : (term499 _90715 _90724 g x f x' x'') = (term486 _90715 _90724 g x f x' x'').
Proof. exact (eq_refl (term499 _90715 _90724 g x f x' x'')). Qed.
Lemma lem3495930 {_90715 _90724 : Type'} (g : type686 _90715) (x : _90724) (f : _90715 -> _90724) (x' : _90715 -> Prop) (x'' : _90715) : (term498 _90715 _90724 g x f x' x'') = (term486 _90715 _90724 g x f x' x'').
Proof. exact (TRANS (@lem3495928 _90715 _90724 g x f x' x'') (@lem3495929 _90715 _90724 g x f x' x'')). Qed.
Lemma lem3495931 {_90715 _90724 : Type'} (g : type686 _90715) (x : _90724) (f : _90715 -> _90724) (x' : _90715 -> Prop) : (term500 _90715 _90724 g x f x') = (term488 _90715 _90724 g x f x').
Proof. exact (fun_ext (fun x'' : _90715 => @lem3495930 _90715 _90724 g x f x' x'')). Qed.
Lemma lem3495932 {_90715 : Type'} : (@ex _90715) = (@ex _90715).
Proof. exact (eq_refl (@ex _90715)). Qed.
Lemma lem3495933 {_90715 _90724 : Type'} (g : type686 _90715) (x : _90724) (f : _90715 -> _90724) (x' : _90715 -> Prop) : (term501 _90715 _90724 g x f x') = (term489 _90715 _90724 g x f x').
Proof. exact (MK_COMB (@lem3495932 _90715) (@lem3495931 _90715 _90724 g x f x')). Qed.
Lemma lem3495934 {_90715 _90724 : Type'} (g : type686 _90715) (x : _90724) (f : _90715 -> _90724) : (term502 _90715 _90724 g x f) = (term490 _90715 _90724 g x f).
Proof. exact (fun_ext (fun x' : _90715 -> Prop => @lem3495933 _90715 _90724 g x f x')). Qed.
Lemma lem3495935 {_90715 : Type'} : (@all (_90715 -> Prop)) = (@all (_90715 -> Prop)).
Proof. exact (eq_refl (@all (_90715 -> Prop))). Qed.
Lemma lem3495936 {_90715 _90724 : Type'} (g : type686 _90715) (x : _90724) (f : _90715 -> _90724) : (term494 _90715 _90724 g x f) = (term491 _90715 _90724 g x f).
Proof. exact (MK_COMB (@lem3495935 _90715) (@lem3495934 _90715 _90724 g x f)). Qed.
Lemma lem3495937 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem3495938 {_90715 _90724 : Type'} (g : type686 _90715) (x : _90724) (f : _90715 -> _90724) : (term503 _90715 _90724 g x f) = (term504 _90715 _90724 g x f).
Proof. exact (MK_COMB (@lem3495937) (@lem3495936 _90715 _90724 g x f)). Qed.
Lemma lem3495939 {_90715 _90724 : Type'} (g : type686 _90715) (x : _90724) (f : _90715 -> _90724) (x' : _90715 -> Prop) : (term497 _90715 _90724 g x f x') = (term488 _90715 _90724 g x f x').
Proof. exact (eq_refl (term497 _90715 _90724 g x f x')). Qed.
Lemma lem3495940 {_90715 : Type'} (x : type684 _90715) (x' : _90715 -> Prop) : (x x') = (x x').
Proof. exact (eq_refl (x x')). Qed.
Lemma lem3495941 {_90715 _90724 : Type'} (g : type686 _90715) (x : _90724) (f : _90715 -> _90724) (x' : type684 _90715) (x'' : _90715 -> Prop) : (term505 _90715 _90724 g x f x' x'') = (term506 _90715 _90724 g x f x' x'').
Proof. exact (MK_COMB (@lem3495939 _90715 _90724 g x f x'') (@lem3495940 _90715 x' x'')). Qed.
Lemma lem3495942 {_90715 _90724 : Type'} (g : type686 _90715) (x : _90724) (f : _90715 -> _90724) (x' : type684 _90715) (x'' : _90715 -> Prop) : (term506 _90715 _90724 g x f x' x'') = (term507 _90715 _90724 g x f x' x'').
Proof. exact (eq_refl (term506 _90715 _90724 g x f x' x'')). Qed.
Lemma lem3495943 {_90715 _90724 : Type'} (g : type686 _90715) (x : _90724) (f : _90715 -> _90724) (x' : type684 _90715) (x'' : _90715 -> Prop) : (term505 _90715 _90724 g x f x' x'') = (term507 _90715 _90724 g x f x' x'').
Proof. exact (TRANS (@lem3495941 _90715 _90724 g x f x' x'') (@lem3495942 _90715 _90724 g x f x' x'')). Qed.
Lemma lem3495944 {_90715 _90724 : Type'} (g : type686 _90715) (x : _90724) (f : _90715 -> _90724) (x' : type684 _90715) : (term508 _90715 _90724 g x f x') = (term509 _90715 _90724 g x f x').
Proof. exact (fun_ext (fun x'' : _90715 -> Prop => @lem3495943 _90715 _90724 g x f x' x'')). Qed.
Lemma lem3495945 {_90715 : Type'} : (@all (_90715 -> Prop)) = (@all (_90715 -> Prop)).
Proof. exact (eq_refl (@all (_90715 -> Prop))). Qed.
Lemma lem3495946 {_90715 _90724 : Type'} (g : type686 _90715) (x : _90724) (f : _90715 -> _90724) (x' : type684 _90715) : (term510 _90715 _90724 g x f x') = (term511 _90715 _90724 g x f x').
Proof. exact (MK_COMB (@lem3495945 _90715) (@lem3495944 _90715 _90724 g x f x')). Qed.
Lemma lem3495947 {_90715 _90724 : Type'} (g : type686 _90715) (x : _90724) (f : _90715 -> _90724) : (term512 _90715 _90724 g x f) = (term513 _90715 _90724 g x f).
Proof. exact (fun_ext (fun x' : type684 _90715 => @lem3495946 _90715 _90724 g x f x')). Qed.
Lemma lem3495948 {_90715 : Type'} : (@ex ((_90715 -> Prop) -> _90715)) = (@ex ((_90715 -> Prop) -> _90715)).
Proof. exact (eq_refl (@ex ((_90715 -> Prop) -> _90715))). Qed.
Lemma lem3495949 {_90715 _90724 : Type'} (g : type686 _90715) (x : _90724) (f : _90715 -> _90724) : (term495 _90715 _90724 g x f) = (term514 _90715 _90724 g x f).
Proof. exact (MK_COMB (@lem3495948 _90715) (@lem3495947 _90715 _90724 g x f)). Qed.
Lemma lem3495950 {_90715 _90724 : Type'} (g : type686 _90715) (x : _90724) (f : _90715 -> _90724) : ((term494 _90715 _90724 g x f) = (term495 _90715 _90724 g x f)) = ((term491 _90715 _90724 g x f) = (term514 _90715 _90724 g x f)).
Proof. exact (MK_COMB (@lem3495938 _90715 _90724 g x f) (@lem3495949 _90715 _90724 g x f)). Qed.
Lemma lem3495951 {_90715 _90724 : Type'} (g : type686 _90715) (x : _90724) (f : _90715 -> _90724) : (term491 _90715 _90724 g x f) = (term514 _90715 _90724 g x f).
Proof. exact (EQ_MP (@lem3495950 _90715 _90724 g x f) (@lem3495925 _90715 _90724 g x f)). Qed.
Lemma lem3495952 {_90715 _90724 : Type'} (g : type686 _90715) (x : _90724) (f : _90715 -> _90724) : (term385 _90715 _90724 g x f) = (term514 _90715 _90724 g x f).
Proof. exact (TRANS (@lem3495921 _90715 _90724 g x f) (@lem3495951 _90715 _90724 g x f)). Qed.
Lemma lem3495953 {_90715 _90724 : Type'} (g : type686 _90715) (x : _90724) (f : _90715 -> _90724) : (term389 _90715 _90724 g x f) = (term515 _90715 _90724 g x f).
Proof. exact (MK_COMB (@lem3495898 _90715 _90724 x f g) (@lem3495952 _90715 _90724 g x f)). Qed.
Lemma lem3495955 {A : Type'} (P : A -> Prop) (Q : Prop) : (term398 A P Q) = (term399 A P Q).
Proof. exact (EQ_MP (@lem18923 A P Q) (@lem18922 A P Q)). Qed.
Lemma lem3495956 {_90715 : Type'} (P : type421 _90715) (Q : Prop) : (term516 _90715 P Q) = (term517 _90715 P Q).
Proof. exact (@lem3495955 (type1402 _90715) P Q). Qed.
Lemma lem3495957 {_90715 _90724 : Type'} (g : type686 _90715) (x : _90724) (f : _90715 -> _90724) : (term518 _90715 _90724 g x f) = (term519 _90715 _90724 g x f).
Proof. exact (@lem3495956 _90715 (term476 _90715 _90724 x f g) (term514 _90715 _90724 g x f)). Qed.
Lemma lem3495958 {_90715 _90724 : Type'} (x : _90724) (f : _90715 -> _90724) (g : type686 _90715) (t : type1402 _90715) : (term520 _90715 _90724 x f g t) = (term474 _90715 _90724 x f g t).
Proof. exact (eq_refl (term520 _90715 _90724 x f g t)). Qed.
Lemma lem3495959 {_90715 _90724 : Type'} (x : _90724) (f : _90715 -> _90724) (g : type686 _90715) : (term521 _90715 _90724 x f g) = (term476 _90715 _90724 x f g).
Proof. exact (fun_ext (fun t : type1402 _90715 => @lem3495958 _90715 _90724 x f g t)). Qed.
Lemma lem3495960 {_90715 : Type'} : (@ex (_90715 -> _90715 -> Prop)) = (@ex (_90715 -> _90715 -> Prop)).
Proof. exact (eq_refl (@ex (_90715 -> _90715 -> Prop))). Qed.
Lemma lem3495961 {_90715 _90724 : Type'} (x : _90724) (f : _90715 -> _90724) (g : type686 _90715) : (term522 _90715 _90724 x f g) = (term477 _90715 _90724 x f g).
Proof. exact (MK_COMB (@lem3495960 _90715) (@lem3495959 _90715 _90724 x f g)). Qed.
Lemma lem3495962 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem3495963 {_90715 _90724 : Type'} (x : _90724) (f : _90715 -> _90724) (g : type686 _90715) : (term523 _90715 _90724 x f g) = (term478 _90715 _90724 x f g).
Proof. exact (MK_COMB (@lem3495962) (@lem3495961 _90715 _90724 x f g)). Qed.
Lemma lem3495964 {_90715 _90724 : Type'} (g : type686 _90715) (x : _90724) (f : _90715 -> _90724) : (term514 _90715 _90724 g x f) = (term514 _90715 _90724 g x f).
Proof. exact (eq_refl (term514 _90715 _90724 g x f)). Qed.
Lemma lem3495965 {_90715 _90724 : Type'} (g : type686 _90715) (x : _90724) (f : _90715 -> _90724) : (term518 _90715 _90724 g x f) = (term515 _90715 _90724 g x f).
Proof. exact (MK_COMB (@lem3495963 _90715 _90724 x f g) (@lem3495964 _90715 _90724 g x f)). Qed.
Lemma lem3495966 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem3495967 {_90715 _90724 : Type'} (g : type686 _90715) (x : _90724) (f : _90715 -> _90724) : (term524 _90715 _90724 g x f) = (term525 _90715 _90724 g x f).
Proof. exact (MK_COMB (@lem3495966) (@lem3495965 _90715 _90724 g x f)). Qed.
Lemma lem3495968 {_90715 _90724 : Type'} (x : _90724) (f : _90715 -> _90724) (g : type686 _90715) (t : type1402 _90715) : (term520 _90715 _90724 x f g t) = (term474 _90715 _90724 x f g t).
Proof. exact (eq_refl (term520 _90715 _90724 x f g t)). Qed.
Lemma lem3495969 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem3495970 {_90715 _90724 : Type'} (x : _90724) (f : _90715 -> _90724) (g : type686 _90715) (t : type1402 _90715) : (term526 _90715 _90724 x f g t) = (term527 _90715 _90724 x f g t).
Proof. exact (MK_COMB (@lem3495969) (@lem3495968 _90715 _90724 x f g t)). Qed.
Lemma lem3495971 {_90715 _90724 : Type'} (g : type686 _90715) (x : _90724) (f : _90715 -> _90724) : (term514 _90715 _90724 g x f) = (term514 _90715 _90724 g x f).
Proof. exact (eq_refl (term514 _90715 _90724 g x f)). Qed.
Lemma lem3495972 {_90715 _90724 : Type'} (t : type1402 _90715) (g : type686 _90715) (x : _90724) (f : _90715 -> _90724) : (term528 _90715 _90724 t g x f) = (term529 _90715 _90724 t g x f).
Proof. exact (MK_COMB (@lem3495970 _90715 _90724 x f g t) (@lem3495971 _90715 _90724 g x f)). Qed.
Lemma lem3495973 {_90715 _90724 : Type'} (g : type686 _90715) (x : _90724) (f : _90715 -> _90724) : (term530 _90715 _90724 g x f) = (term531 _90715 _90724 g x f).
Proof. exact (fun_ext (fun t : type1402 _90715 => @lem3495972 _90715 _90724 t g x f)). Qed.
Lemma lem3495974 {_90715 : Type'} : (@ex (_90715 -> _90715 -> Prop)) = (@ex (_90715 -> _90715 -> Prop)).
Proof. exact (eq_refl (@ex (_90715 -> _90715 -> Prop))). Qed.
Lemma lem3495975 {_90715 _90724 : Type'} (g : type686 _90715) (x : _90724) (f : _90715 -> _90724) : (term519 _90715 _90724 g x f) = (term532 _90715 _90724 g x f).
Proof. exact (MK_COMB (@lem3495974 _90715) (@lem3495973 _90715 _90724 g x f)). Qed.
Lemma lem3495976 {_90715 _90724 : Type'} (g : type686 _90715) (x : _90724) (f : _90715 -> _90724) : ((term518 _90715 _90724 g x f) = (term519 _90715 _90724 g x f)) = ((term515 _90715 _90724 g x f) = (term532 _90715 _90724 g x f)).
Proof. exact (MK_COMB (@lem3495967 _90715 _90724 g x f) (@lem3495975 _90715 _90724 g x f)). Qed.
Lemma lem3495977 {_90715 _90724 : Type'} (g : type686 _90715) (x : _90724) (f : _90715 -> _90724) : (term515 _90715 _90724 g x f) = (term532 _90715 _90724 g x f).
Proof. exact (EQ_MP (@lem3495976 _90715 _90724 g x f) (@lem3495957 _90715 _90724 g x f)). Qed.
Lemma lem3495979 {A : Type'} (P : Prop) (Q : A -> Prop) : (term415 A P Q) = (term416 A P Q).
Proof. exact (EQ_MP (@lem18929 A P Q) (@lem18928 A P Q)). Qed.
Lemma lem3495980 {_90715 : Type'} (P : Prop) (Q : type162 _90715) : (term533 _90715 P Q) = (term534 _90715 P Q).
Proof. exact (@lem3495979 (type684 _90715) P Q). Qed.
Lemma lem3495981 {_90715 _90724 : Type'} (t : type1402 _90715) (g : type686 _90715) (x : _90724) (f : _90715 -> _90724) : (term535 _90715 _90724 t g x f) = (term536 _90715 _90724 t g x f).
Proof. exact (@lem3495980 _90715 (term474 _90715 _90724 x f g t) (term513 _90715 _90724 g x f)). Qed.
Lemma lem3495982 {_90715 _90724 : Type'} (g : type686 _90715) (x : _90724) (f : _90715 -> _90724) (x' : type684 _90715) : (term537 _90715 _90724 g x f x') = (term511 _90715 _90724 g x f x').
Proof. exact (eq_refl (term537 _90715 _90724 g x f x')). Qed.
Lemma lem3495983 {_90715 _90724 : Type'} (g : type686 _90715) (x : _90724) (f : _90715 -> _90724) : (term538 _90715 _90724 g x f) = (term513 _90715 _90724 g x f).
Proof. exact (fun_ext (fun x' : type684 _90715 => @lem3495982 _90715 _90724 g x f x')). Qed.
Lemma lem3495984 {_90715 : Type'} : (@ex ((_90715 -> Prop) -> _90715)) = (@ex ((_90715 -> Prop) -> _90715)).
Proof. exact (eq_refl (@ex ((_90715 -> Prop) -> _90715))). Qed.
Lemma lem3495985 {_90715 _90724 : Type'} (g : type686 _90715) (x : _90724) (f : _90715 -> _90724) : (term539 _90715 _90724 g x f) = (term514 _90715 _90724 g x f).
Proof. exact (MK_COMB (@lem3495984 _90715) (@lem3495983 _90715 _90724 g x f)). Qed.
Lemma lem3495986 {_90715 _90724 : Type'} (x : _90724) (f : _90715 -> _90724) (g : type686 _90715) (t : type1402 _90715) : (term527 _90715 _90724 x f g t) = (term527 _90715 _90724 x f g t).
Proof. exact (eq_refl (term527 _90715 _90724 x f g t)). Qed.
Lemma lem3495987 {_90715 _90724 : Type'} (t : type1402 _90715) (g : type686 _90715) (x : _90724) (f : _90715 -> _90724) : (term535 _90715 _90724 t g x f) = (term529 _90715 _90724 t g x f).
Proof. exact (MK_COMB (@lem3495986 _90715 _90724 x f g t) (@lem3495985 _90715 _90724 g x f)). Qed.
Lemma lem3495988 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem3495989 {_90715 _90724 : Type'} (t : type1402 _90715) (g : type686 _90715) (x : _90724) (f : _90715 -> _90724) : (term540 _90715 _90724 t g x f) = (term541 _90715 _90724 t g x f).
Proof. exact (MK_COMB (@lem3495988) (@lem3495987 _90715 _90724 t g x f)). Qed.
Lemma lem3495990 {_90715 _90724 : Type'} (g : type686 _90715) (x : _90724) (f : _90715 -> _90724) (x' : type684 _90715) : (term537 _90715 _90724 g x f x') = (term511 _90715 _90724 g x f x').
Proof. exact (eq_refl (term537 _90715 _90724 g x f x')). Qed.
Lemma lem3495991 {_90715 _90724 : Type'} (x : _90724) (f : _90715 -> _90724) (g : type686 _90715) (t : type1402 _90715) : (term527 _90715 _90724 x f g t) = (term527 _90715 _90724 x f g t).
Proof. exact (eq_refl (term527 _90715 _90724 x f g t)). Qed.
Lemma lem3495992 {_90715 _90724 : Type'} (t : type1402 _90715) (g : type686 _90715) (x : _90724) (f : _90715 -> _90724) (x' : type684 _90715) : (term542 _90715 _90724 t g x f x') = (term543 _90715 _90724 t g x f x').
Proof. exact (MK_COMB (@lem3495991 _90715 _90724 x f g t) (@lem3495990 _90715 _90724 g x f x')). Qed.
Lemma lem3495993 {_90715 _90724 : Type'} (t : type1402 _90715) (g : type686 _90715) (x : _90724) (f : _90715 -> _90724) : (term544 _90715 _90724 t g x f) = (term545 _90715 _90724 t g x f).
Proof. exact (fun_ext (fun x' : type684 _90715 => @lem3495992 _90715 _90724 t g x f x')). Qed.
Lemma lem3495994 {_90715 : Type'} : (@ex ((_90715 -> Prop) -> _90715)) = (@ex ((_90715 -> Prop) -> _90715)).
Proof. exact (eq_refl (@ex ((_90715 -> Prop) -> _90715))). Qed.
Lemma lem3495995 {_90715 _90724 : Type'} (t : type1402 _90715) (g : type686 _90715) (x : _90724) (f : _90715 -> _90724) : (term536 _90715 _90724 t g x f) = (term546 _90715 _90724 t g x f).
Proof. exact (MK_COMB (@lem3495994 _90715) (@lem3495993 _90715 _90724 t g x f)). Qed.
Lemma lem3495996 {_90715 _90724 : Type'} (t : type1402 _90715) (g : type686 _90715) (x : _90724) (f : _90715 -> _90724) : ((term535 _90715 _90724 t g x f) = (term536 _90715 _90724 t g x f)) = ((term529 _90715 _90724 t g x f) = (term546 _90715 _90724 t g x f)).
Proof. exact (MK_COMB (@lem3495989 _90715 _90724 t g x f) (@lem3495995 _90715 _90724 t g x f)). Qed.
Lemma lem3495997 {_90715 _90724 : Type'} (t : type1402 _90715) (g : type686 _90715) (x : _90724) (f : _90715 -> _90724) : (term529 _90715 _90724 t g x f) = (term546 _90715 _90724 t g x f).
Proof. exact (EQ_MP (@lem3495996 _90715 _90724 t g x f) (@lem3495981 _90715 _90724 t g x f)). Qed.
Lemma lem3495998 {_90715 _90724 : Type'} (g : type686 _90715) (x : _90724) (f : _90715 -> _90724) : (term531 _90715 _90724 g x f) = (term547 _90715 _90724 g x f).
Proof. exact (fun_ext (fun t : type1402 _90715 => @lem3495997 _90715 _90724 t g x f)). Qed.
Lemma lem3495999 {_90715 : Type'} : (@ex (_90715 -> _90715 -> Prop)) = (@ex (_90715 -> _90715 -> Prop)).
Proof. exact (eq_refl (@ex (_90715 -> _90715 -> Prop))). Qed.
Lemma lem3496000 {_90715 _90724 : Type'} (g : type686 _90715) (x : _90724) (f : _90715 -> _90724) : (term532 _90715 _90724 g x f) = (term548 _90715 _90724 g x f).
Proof. exact (MK_COMB (@lem3495999 _90715) (@lem3495998 _90715 _90724 g x f)). Qed.
Lemma lem3496001 {_90715 _90724 : Type'} (g : type686 _90715) (x : _90724) (f : _90715 -> _90724) : (term515 _90715 _90724 g x f) = (term548 _90715 _90724 g x f).
Proof. exact (TRANS (@lem3495977 _90715 _90724 g x f) (@lem3496000 _90715 _90724 g x f)). Qed.
Lemma lem3496002 {_90715 _90724 : Type'} (g : type686 _90715) (x : _90724) (f : _90715 -> _90724) : (term389 _90715 _90724 g x f) = (term548 _90715 _90724 g x f).
Proof. exact (TRANS (@lem3495953 _90715 _90724 g x f) (@lem3496001 _90715 _90724 g x f)). Qed.
Lemma lem3496003 {_90715 _90724 : Type'} (g : type686 _90715) (x : _90724) (f : _90715 -> _90724) : (term397 _90715 _90724 g x f) = (term549 _90715 _90724 g x f).
Proof. exact (MK_COMB (@lem3495842 _90715 _90724 g x f) (@lem3496002 _90715 _90724 g x f)). Qed.
Lemma lem3496007 {A : Type'} (P : A -> Prop) (Q : Prop) : (term550 A P Q) = (term551 A P Q).
Proof. exact (EQ_MP (@lem18905 A P Q) (@lem18904 A P Q)). Qed.
Lemma lem3496008 {_90715 : Type'} (P : _90715 -> Prop) (Q : Prop) : (term550 _90715 P Q) = (term551 _90715 P Q).
Proof. exact (@lem3496007 _90715 P Q). Qed.
Lemma lem3496009 {_90715 _90724 : Type'} (g : type686 _90715) (x : _90724) (f : _90715 -> _90724) : (term552 _90715 _90724 g x f) = (term553 _90715 _90724 g x f).
Proof. exact (@lem3496008 _90715 (term431 _90715 _90724 g x f) (term548 _90715 _90724 g x f)). Qed.
Lemma lem3496010 {_90715 _90724 : Type'} (x : _90715) (g : type686 _90715) (x' : _90724) (f : _90715 -> _90724) : (term554 _90715 _90724 g x' f x) = (term430 _90715 _90724 x g x' f).
Proof. exact (eq_refl (term554 _90715 _90724 g x' f x)). Qed.
Lemma lem3496011 {_90715 _90724 : Type'} (g : type686 _90715) (x : _90724) (f : _90715 -> _90724) : (term555 _90715 _90724 g x f) = (term431 _90715 _90724 g x f).
Proof. exact (fun_ext (fun x' : _90715 => @lem3496010 _90715 _90724 x' g x f)). Qed.
Lemma lem3496012 {_90715 : Type'} : (@ex _90715) = (@ex _90715).
Proof. exact (eq_refl (@ex _90715)). Qed.
Lemma lem3496013 {_90715 _90724 : Type'} (g : type686 _90715) (x : _90724) (f : _90715 -> _90724) : (term556 _90715 _90724 g x f) = (term432 _90715 _90724 g x f).
Proof. exact (MK_COMB (@lem3496012 _90715) (@lem3496011 _90715 _90724 g x f)). Qed.
Lemma lem3496014 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem3496015 {_90715 _90724 : Type'} (g : type686 _90715) (x : _90724) (f : _90715 -> _90724) : (term557 _90715 _90724 g x f) = (term433 _90715 _90724 g x f).
Proof. exact (MK_COMB (@lem3496014) (@lem3496013 _90715 _90724 g x f)). Qed.
Lemma lem3496016 {_90715 _90724 : Type'} (g : type686 _90715) (x : _90724) (f : _90715 -> _90724) : (term548 _90715 _90724 g x f) = (term548 _90715 _90724 g x f).
Proof. exact (eq_refl (term548 _90715 _90724 g x f)). Qed.
Lemma lem3496017 {_90715 _90724 : Type'} (g : type686 _90715) (x : _90724) (f : _90715 -> _90724) : (term552 _90715 _90724 g x f) = (term549 _90715 _90724 g x f).
Proof. exact (MK_COMB (@lem3496015 _90715 _90724 g x f) (@lem3496016 _90715 _90724 g x f)). Qed.
Lemma lem3496018 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem3496019 {_90715 _90724 : Type'} (g : type686 _90715) (x : _90724) (f : _90715 -> _90724) : (term558 _90715 _90724 g x f) = (term559 _90715 _90724 g x f).
Proof. exact (MK_COMB (@lem3496018) (@lem3496017 _90715 _90724 g x f)). Qed.
Lemma lem3496020 {_90715 _90724 : Type'} (x : _90715) (g : type686 _90715) (x' : _90724) (f : _90715 -> _90724) : (term554 _90715 _90724 g x' f x) = (term430 _90715 _90724 x g x' f).
Proof. exact (eq_refl (term554 _90715 _90724 g x' f x)). Qed.
Lemma lem3496021 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem3496022 {_90715 _90724 : Type'} (x : _90715) (g : type686 _90715) (x' : _90724) (f : _90715 -> _90724) : (term560 _90715 _90724 g x' f x) = (term561 _90715 _90724 x g x' f).
Proof. exact (MK_COMB (@lem3496021) (@lem3496020 _90715 _90724 x g x' f)). Qed.
Lemma lem3496023 {_90715 _90724 : Type'} (g : type686 _90715) (x : _90724) (f : _90715 -> _90724) : (term548 _90715 _90724 g x f) = (term548 _90715 _90724 g x f).
Proof. exact (eq_refl (term548 _90715 _90724 g x f)). Qed.
Lemma lem3496024 {_90715 _90724 : Type'} (x : _90715) (g : type686 _90715) (x' : _90724) (f : _90715 -> _90724) : (term562 _90715 _90724 x g x' f) = (term563 _90715 _90724 x g x' f).
Proof. exact (MK_COMB (@lem3496022 _90715 _90724 x g x' f) (@lem3496023 _90715 _90724 g x' f)). Qed.
Lemma lem3496025 {_90715 _90724 : Type'} (g : type686 _90715) (x : _90724) (f : _90715 -> _90724) : (term564 _90715 _90724 g x f) = (term565 _90715 _90724 g x f).
Proof. exact (fun_ext (fun x' : _90715 => @lem3496024 _90715 _90724 x' g x f)). Qed.
Lemma lem3496026 {_90715 : Type'} : (@ex _90715) = (@ex _90715).
Proof. exact (eq_refl (@ex _90715)). Qed.
Lemma lem3496027 {_90715 _90724 : Type'} (g : type686 _90715) (x : _90724) (f : _90715 -> _90724) : (term553 _90715 _90724 g x f) = (term566 _90715 _90724 g x f).
Proof. exact (MK_COMB (@lem3496026 _90715) (@lem3496025 _90715 _90724 g x f)). Qed.
Lemma lem3496028 {_90715 _90724 : Type'} (g : type686 _90715) (x : _90724) (f : _90715 -> _90724) : ((term552 _90715 _90724 g x f) = (term553 _90715 _90724 g x f)) = ((term549 _90715 _90724 g x f) = (term566 _90715 _90724 g x f)).
Proof. exact (MK_COMB (@lem3496019 _90715 _90724 g x f) (@lem3496027 _90715 _90724 g x f)). Qed.
Lemma lem3496029 {_90715 _90724 : Type'} (g : type686 _90715) (x : _90724) (f : _90715 -> _90724) : (term549 _90715 _90724 g x f) = (term566 _90715 _90724 g x f).
Proof. exact (EQ_MP (@lem3496028 _90715 _90724 g x f) (@lem3496009 _90715 _90724 g x f)). Qed.
Lemma lem3496033 {A : Type'} (P : A -> Prop) (Q : Prop) : (term550 A P Q) = (term551 A P Q).
Proof. exact (EQ_MP (@lem18905 A P Q) (@lem18904 A P Q)). Qed.
Lemma lem3496034 {_90715 : Type'} (P : type686 _90715) (Q : Prop) : (term567 _90715 P Q) = (term568 _90715 P Q).
Proof. exact (@lem3496033 (_90715 -> Prop) P Q). Qed.
Lemma lem3496035 {_90715 _90724 : Type'} (x : _90715) (g : type686 _90715) (x' : _90724) (f : _90715 -> _90724) : (term569 _90715 _90724 x g x' f) = (term570 _90715 _90724 x g x' f).
Proof. exact (@lem3496034 _90715 (term429 _90715 _90724 x g x' f) (term548 _90715 _90724 g x' f)). Qed.
Lemma lem3496036 {_90715 _90724 : Type'} (x : _90715) (g : type686 _90715) (x' : _90724) (f : _90715 -> _90724) (x'' : _90715 -> Prop) : (term571 _90715 _90724 x g x' f x'') = (term427 _90715 _90724 x g x' f x'').
Proof. exact (eq_refl (term571 _90715 _90724 x g x' f x'')). Qed.
Lemma lem3496037 {_90715 _90724 : Type'} (x : _90715) (g : type686 _90715) (x' : _90724) (f : _90715 -> _90724) : (term572 _90715 _90724 x g x' f) = (term429 _90715 _90724 x g x' f).
Proof. exact (fun_ext (fun x'' : _90715 -> Prop => @lem3496036 _90715 _90724 x g x' f x'')). Qed.
Lemma lem3496038 {_90715 : Type'} : (@ex (_90715 -> Prop)) = (@ex (_90715 -> Prop)).
Proof. exact (eq_refl (@ex (_90715 -> Prop))). Qed.
Lemma lem3496039 {_90715 _90724 : Type'} (x : _90715) (g : type686 _90715) (x' : _90724) (f : _90715 -> _90724) : (term573 _90715 _90724 x g x' f) = (term430 _90715 _90724 x g x' f).
Proof. exact (MK_COMB (@lem3496038 _90715) (@lem3496037 _90715 _90724 x g x' f)). Qed.
Lemma lem3496040 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem3496041 {_90715 _90724 : Type'} (x : _90715) (g : type686 _90715) (x' : _90724) (f : _90715 -> _90724) : (term574 _90715 _90724 x g x' f) = (term561 _90715 _90724 x g x' f).
Proof. exact (MK_COMB (@lem3496040) (@lem3496039 _90715 _90724 x g x' f)). Qed.
Lemma lem3496042 {_90715 _90724 : Type'} (g : type686 _90715) (x : _90724) (f : _90715 -> _90724) : (term548 _90715 _90724 g x f) = (term548 _90715 _90724 g x f).
Proof. exact (eq_refl (term548 _90715 _90724 g x f)). Qed.
Lemma lem3496043 {_90715 _90724 : Type'} (x : _90715) (g : type686 _90715) (x' : _90724) (f : _90715 -> _90724) : (term569 _90715 _90724 x g x' f) = (term563 _90715 _90724 x g x' f).
Proof. exact (MK_COMB (@lem3496041 _90715 _90724 x g x' f) (@lem3496042 _90715 _90724 g x' f)). Qed.
Lemma lem3496044 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem3496045 {_90715 _90724 : Type'} (x : _90715) (g : type686 _90715) (x' : _90724) (f : _90715 -> _90724) : (term575 _90715 _90724 x g x' f) = (term576 _90715 _90724 x g x' f).
Proof. exact (MK_COMB (@lem3496044) (@lem3496043 _90715 _90724 x g x' f)). Qed.
Lemma lem3496046 {_90715 _90724 : Type'} (x : _90715) (g : type686 _90715) (x' : _90724) (f : _90715 -> _90724) (x'' : _90715 -> Prop) : (term571 _90715 _90724 x g x' f x'') = (term427 _90715 _90724 x g x' f x'').
Proof. exact (eq_refl (term571 _90715 _90724 x g x' f x'')). Qed.
Lemma lem3496047 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem3496048 {_90715 _90724 : Type'} (x : _90715) (g : type686 _90715) (x' : _90724) (f : _90715 -> _90724) (x'' : _90715 -> Prop) : (term577 _90715 _90724 x g x' f x'') = (term578 _90715 _90724 x g x' f x'').
Proof. exact (MK_COMB (@lem3496047) (@lem3496046 _90715 _90724 x g x' f x'')). Qed.
Lemma lem3496049 {_90715 _90724 : Type'} (g : type686 _90715) (x : _90724) (f : _90715 -> _90724) : (term548 _90715 _90724 g x f) = (term548 _90715 _90724 g x f).
Proof. exact (eq_refl (term548 _90715 _90724 g x f)). Qed.
Lemma lem3496050 {_90715 _90724 : Type'} (x : _90715) (x' : _90715 -> Prop) (g : type686 _90715) (x'' : _90724) (f : _90715 -> _90724) : (term579 _90715 _90724 x x' g x'' f) = (term580 _90715 _90724 x x' g x'' f).
Proof. exact (MK_COMB (@lem3496048 _90715 _90724 x g x'' f x') (@lem3496049 _90715 _90724 g x'' f)). Qed.
Lemma lem3496051 {_90715 _90724 : Type'} (x : _90715) (g : type686 _90715) (x' : _90724) (f : _90715 -> _90724) : (term581 _90715 _90724 x g x' f) = (term582 _90715 _90724 x g x' f).
Proof. exact (fun_ext (fun x'' : _90715 -> Prop => @lem3496050 _90715 _90724 x x'' g x' f)). Qed.
Lemma lem3496052 {_90715 : Type'} : (@ex (_90715 -> Prop)) = (@ex (_90715 -> Prop)).
Proof. exact (eq_refl (@ex (_90715 -> Prop))). Qed.
Lemma lem3496053 {_90715 _90724 : Type'} (x : _90715) (g : type686 _90715) (x' : _90724) (f : _90715 -> _90724) : (term570 _90715 _90724 x g x' f) = (term583 _90715 _90724 x g x' f).
Proof. exact (MK_COMB (@lem3496052 _90715) (@lem3496051 _90715 _90724 x g x' f)). Qed.
Lemma lem3496054 {_90715 _90724 : Type'} (x : _90715) (g : type686 _90715) (x' : _90724) (f : _90715 -> _90724) : ((term569 _90715 _90724 x g x' f) = (term570 _90715 _90724 x g x' f)) = ((term563 _90715 _90724 x g x' f) = (term583 _90715 _90724 x g x' f)).
Proof. exact (MK_COMB (@lem3496045 _90715 _90724 x g x' f) (@lem3496053 _90715 _90724 x g x' f)). Qed.
Lemma lem3496055 {_90715 _90724 : Type'} (x : _90715) (g : type686 _90715) (x' : _90724) (f : _90715 -> _90724) : (term563 _90715 _90724 x g x' f) = (term583 _90715 _90724 x g x' f).
Proof. exact (EQ_MP (@lem3496054 _90715 _90724 x g x' f) (@lem3496035 _90715 _90724 x g x' f)). Qed.
Lemma lem3496057 {A : Type'} (P : Prop) (Q : A -> Prop) : (term434 A P Q) = (term435 A P Q).
Proof. exact (EQ_MP (@lem18911 A P Q) (@lem18910 A P Q)). Qed.
Lemma lem3496058 {_90715 : Type'} (P : Prop) (Q : type421 _90715) : (term584 _90715 P Q) = (term585 _90715 P Q).
Proof. exact (@lem3496057 (type1402 _90715) P Q). Qed.
Lemma lem3496059 {_90715 _90724 : Type'} (x : _90715) (x' : _90715 -> Prop) (g : type686 _90715) (x'' : _90724) (f : _90715 -> _90724) : (term586 _90715 _90724 x x' g x'' f) = (term587 _90715 _90724 x x' g x'' f).
Proof. exact (@lem3496058 _90715 (term427 _90715 _90724 x g x'' f x') (term547 _90715 _90724 g x'' f)). Qed.
Lemma lem3496060 {_90715 _90724 : Type'} (t : type1402 _90715) (g : type686 _90715) (x : _90724) (f : _90715 -> _90724) : (term588 _90715 _90724 g x f t) = (term546 _90715 _90724 t g x f).
Proof. exact (eq_refl (term588 _90715 _90724 g x f t)). Qed.
Lemma lem3496061 {_90715 _90724 : Type'} (g : type686 _90715) (x : _90724) (f : _90715 -> _90724) : (term589 _90715 _90724 g x f) = (term547 _90715 _90724 g x f).
Proof. exact (fun_ext (fun t : type1402 _90715 => @lem3496060 _90715 _90724 t g x f)). Qed.
Lemma lem3496062 {_90715 : Type'} : (@ex (_90715 -> _90715 -> Prop)) = (@ex (_90715 -> _90715 -> Prop)).
Proof. exact (eq_refl (@ex (_90715 -> _90715 -> Prop))). Qed.
Lemma lem3496063 {_90715 _90724 : Type'} (g : type686 _90715) (x : _90724) (f : _90715 -> _90724) : (term590 _90715 _90724 g x f) = (term548 _90715 _90724 g x f).
Proof. exact (MK_COMB (@lem3496062 _90715) (@lem3496061 _90715 _90724 g x f)). Qed.
Lemma lem3496064 {_90715 _90724 : Type'} (x : _90715) (g : type686 _90715) (x' : _90724) (f : _90715 -> _90724) (x'' : _90715 -> Prop) : (term578 _90715 _90724 x g x' f x'') = (term578 _90715 _90724 x g x' f x'').
Proof. exact (eq_refl (term578 _90715 _90724 x g x' f x'')). Qed.
Lemma lem3496065 {_90715 _90724 : Type'} (x : _90715) (x' : _90715 -> Prop) (g : type686 _90715) (x'' : _90724) (f : _90715 -> _90724) : (term586 _90715 _90724 x x' g x'' f) = (term580 _90715 _90724 x x' g x'' f).
Proof. exact (MK_COMB (@lem3496064 _90715 _90724 x g x'' f x') (@lem3496063 _90715 _90724 g x'' f)). Qed.
Lemma lem3496066 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem3496067 {_90715 _90724 : Type'} (x : _90715) (x' : _90715 -> Prop) (g : type686 _90715) (x'' : _90724) (f : _90715 -> _90724) : (term591 _90715 _90724 x x' g x'' f) = (term592 _90715 _90724 x x' g x'' f).
Proof. exact (MK_COMB (@lem3496066) (@lem3496065 _90715 _90724 x x' g x'' f)). Qed.
Lemma lem3496068 {_90715 _90724 : Type'} (t : type1402 _90715) (g : type686 _90715) (x : _90724) (f : _90715 -> _90724) : (term588 _90715 _90724 g x f t) = (term546 _90715 _90724 t g x f).
Proof. exact (eq_refl (term588 _90715 _90724 g x f t)). Qed.
Lemma lem3496069 {_90715 _90724 : Type'} (x : _90715) (g : type686 _90715) (x' : _90724) (f : _90715 -> _90724) (x'' : _90715 -> Prop) : (term578 _90715 _90724 x g x' f x'') = (term578 _90715 _90724 x g x' f x'').
Proof. exact (eq_refl (term578 _90715 _90724 x g x' f x'')). Qed.
Lemma lem3496070 {_90715 _90724 : Type'} (x : _90715) (x' : _90715 -> Prop) (t : type1402 _90715) (g : type686 _90715) (x'' : _90724) (f : _90715 -> _90724) : (term593 _90715 _90724 x x' g x'' f t) = (term594 _90715 _90724 x x' t g x'' f).
Proof. exact (MK_COMB (@lem3496069 _90715 _90724 x g x'' f x') (@lem3496068 _90715 _90724 t g x'' f)). Qed.
Lemma lem3496071 {_90715 _90724 : Type'} (x : _90715) (x' : _90715 -> Prop) (g : type686 _90715) (x'' : _90724) (f : _90715 -> _90724) : (term595 _90715 _90724 x x' g x'' f) = (term596 _90715 _90724 x x' g x'' f).
Proof. exact (fun_ext (fun t : type1402 _90715 => @lem3496070 _90715 _90724 x x' t g x'' f)). Qed.
Lemma lem3496072 {_90715 : Type'} : (@ex (_90715 -> _90715 -> Prop)) = (@ex (_90715 -> _90715 -> Prop)).
Proof. exact (eq_refl (@ex (_90715 -> _90715 -> Prop))). Qed.
Lemma lem3496073 {_90715 _90724 : Type'} (x : _90715) (x' : _90715 -> Prop) (g : type686 _90715) (x'' : _90724) (f : _90715 -> _90724) : (term587 _90715 _90724 x x' g x'' f) = (term597 _90715 _90724 x x' g x'' f).
Proof. exact (MK_COMB (@lem3496072 _90715) (@lem3496071 _90715 _90724 x x' g x'' f)). Qed.
Lemma lem3496074 {_90715 _90724 : Type'} (x : _90715) (x' : _90715 -> Prop) (g : type686 _90715) (x'' : _90724) (f : _90715 -> _90724) : ((term586 _90715 _90724 x x' g x'' f) = (term587 _90715 _90724 x x' g x'' f)) = ((term580 _90715 _90724 x x' g x'' f) = (term597 _90715 _90724 x x' g x'' f)).
Proof. exact (MK_COMB (@lem3496067 _90715 _90724 x x' g x'' f) (@lem3496073 _90715 _90724 x x' g x'' f)). Qed.
Lemma lem3496075 {_90715 _90724 : Type'} (x : _90715) (x' : _90715 -> Prop) (g : type686 _90715) (x'' : _90724) (f : _90715 -> _90724) : (term580 _90715 _90724 x x' g x'' f) = (term597 _90715 _90724 x x' g x'' f).
Proof. exact (EQ_MP (@lem3496074 _90715 _90724 x x' g x'' f) (@lem3496059 _90715 _90724 x x' g x'' f)). Qed.
Lemma lem3496077 {A : Type'} (P : Prop) (Q : A -> Prop) : (term434 A P Q) = (term435 A P Q).
Proof. exact (EQ_MP (@lem18911 A P Q) (@lem18910 A P Q)). Qed.
Lemma lem3496078 {_90715 : Type'} (P : Prop) (Q : type162 _90715) : (term598 _90715 P Q) = (term599 _90715 P Q).
Proof. exact (@lem3496077 (type684 _90715) P Q). Qed.
Lemma lem3496079 {_90715 _90724 : Type'} (x : _90715) (x' : _90715 -> Prop) (t : type1402 _90715) (g : type686 _90715) (x'' : _90724) (f : _90715 -> _90724) : (term600 _90715 _90724 x x' t g x'' f) = (term601 _90715 _90724 x x' t g x'' f).
Proof. exact (@lem3496078 _90715 (term427 _90715 _90724 x g x'' f x') (term545 _90715 _90724 t g x'' f)). Qed.
Lemma lem3496080 {_90715 _90724 : Type'} (t : type1402 _90715) (g : type686 _90715) (x : _90724) (f : _90715 -> _90724) (x' : type684 _90715) : (term602 _90715 _90724 t g x f x') = (term543 _90715 _90724 t g x f x').
Proof. exact (eq_refl (term602 _90715 _90724 t g x f x')). Qed.
Lemma lem3496081 {_90715 _90724 : Type'} (t : type1402 _90715) (g : type686 _90715) (x : _90724) (f : _90715 -> _90724) : (term603 _90715 _90724 t g x f) = (term545 _90715 _90724 t g x f).
Proof. exact (fun_ext (fun x' : type684 _90715 => @lem3496080 _90715 _90724 t g x f x')). Qed.
Lemma lem3496082 {_90715 : Type'} : (@ex ((_90715 -> Prop) -> _90715)) = (@ex ((_90715 -> Prop) -> _90715)).
Proof. exact (eq_refl (@ex ((_90715 -> Prop) -> _90715))). Qed.
Lemma lem3496083 {_90715 _90724 : Type'} (t : type1402 _90715) (g : type686 _90715) (x : _90724) (f : _90715 -> _90724) : (term604 _90715 _90724 t g x f) = (term546 _90715 _90724 t g x f).
Proof. exact (MK_COMB (@lem3496082 _90715) (@lem3496081 _90715 _90724 t g x f)). Qed.
Lemma lem3496084 {_90715 _90724 : Type'} (x : _90715) (g : type686 _90715) (x' : _90724) (f : _90715 -> _90724) (x'' : _90715 -> Prop) : (term578 _90715 _90724 x g x' f x'') = (term578 _90715 _90724 x g x' f x'').
Proof. exact (eq_refl (term578 _90715 _90724 x g x' f x'')). Qed.
Lemma lem3496085 {_90715 _90724 : Type'} (x : _90715) (x' : _90715 -> Prop) (t : type1402 _90715) (g : type686 _90715) (x'' : _90724) (f : _90715 -> _90724) : (term600 _90715 _90724 x x' t g x'' f) = (term594 _90715 _90724 x x' t g x'' f).
Proof. exact (MK_COMB (@lem3496084 _90715 _90724 x g x'' f x') (@lem3496083 _90715 _90724 t g x'' f)). Qed.
Lemma lem3496086 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem3496087 {_90715 _90724 : Type'} (x : _90715) (x' : _90715 -> Prop) (t : type1402 _90715) (g : type686 _90715) (x'' : _90724) (f : _90715 -> _90724) : (term605 _90715 _90724 x x' t g x'' f) = (term606 _90715 _90724 x x' t g x'' f).
Proof. exact (MK_COMB (@lem3496086) (@lem3496085 _90715 _90724 x x' t g x'' f)). Qed.
Lemma lem3496088 {_90715 _90724 : Type'} (t : type1402 _90715) (g : type686 _90715) (x : _90724) (f : _90715 -> _90724) (x' : type684 _90715) : (term602 _90715 _90724 t g x f x') = (term543 _90715 _90724 t g x f x').
Proof. exact (eq_refl (term602 _90715 _90724 t g x f x')). Qed.
Lemma lem3496089 {_90715 _90724 : Type'} (x : _90715) (g : type686 _90715) (x' : _90724) (f : _90715 -> _90724) (x'' : _90715 -> Prop) : (term578 _90715 _90724 x g x' f x'') = (term578 _90715 _90724 x g x' f x'').
Proof. exact (eq_refl (term578 _90715 _90724 x g x' f x'')). Qed.
Lemma lem3496090 {_90715 _90724 : Type'} (x : _90715) (x' : _90715 -> Prop) (t : type1402 _90715) (g : type686 _90715) (x'' : _90724) (f : _90715 -> _90724) (x''' : type684 _90715) : (term607 _90715 _90724 x x' t g x'' f x''') = (term608 _90715 _90724 x x' t g x'' f x''').
Proof. exact (MK_COMB (@lem3496089 _90715 _90724 x g x'' f x') (@lem3496088 _90715 _90724 t g x'' f x''')). Qed.
Lemma lem3496091 {_90715 _90724 : Type'} (x : _90715) (x' : _90715 -> Prop) (t : type1402 _90715) (g : type686 _90715) (x'' : _90724) (f : _90715 -> _90724) : (term609 _90715 _90724 x x' t g x'' f) = (term610 _90715 _90724 x x' t g x'' f).
Proof. exact (fun_ext (fun x''' : type684 _90715 => @lem3496090 _90715 _90724 x x' t g x'' f x''')). Qed.
Lemma lem3496092 {_90715 : Type'} : (@ex ((_90715 -> Prop) -> _90715)) = (@ex ((_90715 -> Prop) -> _90715)).
Proof. exact (eq_refl (@ex ((_90715 -> Prop) -> _90715))). Qed.
Lemma lem3496093 {_90715 _90724 : Type'} (x : _90715) (x' : _90715 -> Prop) (t : type1402 _90715) (g : type686 _90715) (x'' : _90724) (f : _90715 -> _90724) : (term601 _90715 _90724 x x' t g x'' f) = (term611 _90715 _90724 x x' t g x'' f).
Proof. exact (MK_COMB (@lem3496092 _90715) (@lem3496091 _90715 _90724 x x' t g x'' f)). Qed.
Lemma lem3496094 {_90715 _90724 : Type'} (x : _90715) (x' : _90715 -> Prop) (t : type1402 _90715) (g : type686 _90715) (x'' : _90724) (f : _90715 -> _90724) : ((term600 _90715 _90724 x x' t g x'' f) = (term601 _90715 _90724 x x' t g x'' f)) = ((term594 _90715 _90724 x x' t g x'' f) = (term611 _90715 _90724 x x' t g x'' f)).
Proof. exact (MK_COMB (@lem3496087 _90715 _90724 x x' t g x'' f) (@lem3496093 _90715 _90724 x x' t g x'' f)). Qed.
Lemma lem3496095 {_90715 _90724 : Type'} (x : _90715) (x' : _90715 -> Prop) (t : type1402 _90715) (g : type686 _90715) (x'' : _90724) (f : _90715 -> _90724) : (term594 _90715 _90724 x x' t g x'' f) = (term611 _90715 _90724 x x' t g x'' f).
Proof. exact (EQ_MP (@lem3496094 _90715 _90724 x x' t g x'' f) (@lem3496079 _90715 _90724 x x' t g x'' f)). Qed.
Lemma lem3496096 {_90715 _90724 : Type'} (x : _90715) (x' : _90715 -> Prop) (g : type686 _90715) (x'' : _90724) (f : _90715 -> _90724) : (term596 _90715 _90724 x x' g x'' f) = (term612 _90715 _90724 x x' g x'' f).
Proof. exact (fun_ext (fun t : type1402 _90715 => @lem3496095 _90715 _90724 x x' t g x'' f)). Qed.
Lemma lem3496097 {_90715 : Type'} : (@ex (_90715 -> _90715 -> Prop)) = (@ex (_90715 -> _90715 -> Prop)).
Proof. exact (eq_refl (@ex (_90715 -> _90715 -> Prop))). Qed.
Lemma lem3496098 {_90715 _90724 : Type'} (x : _90715) (x' : _90715 -> Prop) (g : type686 _90715) (x'' : _90724) (f : _90715 -> _90724) : (term597 _90715 _90724 x x' g x'' f) = (term613 _90715 _90724 x x' g x'' f).
Proof. exact (MK_COMB (@lem3496097 _90715) (@lem3496096 _90715 _90724 x x' g x'' f)). Qed.
Lemma lem3496099 {_90715 _90724 : Type'} (x : _90715) (x' : _90715 -> Prop) (g : type686 _90715) (x'' : _90724) (f : _90715 -> _90724) : (term580 _90715 _90724 x x' g x'' f) = (term613 _90715 _90724 x x' g x'' f).
Proof. exact (TRANS (@lem3496075 _90715 _90724 x x' g x'' f) (@lem3496098 _90715 _90724 x x' g x'' f)). Qed.
Lemma lem3496100 {_90715 _90724 : Type'} (x : _90715) (g : type686 _90715) (x' : _90724) (f : _90715 -> _90724) : (term582 _90715 _90724 x g x' f) = (term614 _90715 _90724 x g x' f).
Proof. exact (fun_ext (fun x'' : _90715 -> Prop => @lem3496099 _90715 _90724 x x'' g x' f)). Qed.
Lemma lem3496101 {_90715 : Type'} : (@ex (_90715 -> Prop)) = (@ex (_90715 -> Prop)).
Proof. exact (eq_refl (@ex (_90715 -> Prop))). Qed.
Lemma lem3496102 {_90715 _90724 : Type'} (x : _90715) (g : type686 _90715) (x' : _90724) (f : _90715 -> _90724) : (term583 _90715 _90724 x g x' f) = (term615 _90715 _90724 x g x' f).
Proof. exact (MK_COMB (@lem3496101 _90715) (@lem3496100 _90715 _90724 x g x' f)). Qed.
Lemma lem3496103 {_90715 _90724 : Type'} (x : _90715) (g : type686 _90715) (x' : _90724) (f : _90715 -> _90724) : (term563 _90715 _90724 x g x' f) = (term615 _90715 _90724 x g x' f).
Proof. exact (TRANS (@lem3496055 _90715 _90724 x g x' f) (@lem3496102 _90715 _90724 x g x' f)). Qed.
Lemma lem3496104 {_90715 _90724 : Type'} (g : type686 _90715) (x : _90724) (f : _90715 -> _90724) : (term565 _90715 _90724 g x f) = (term616 _90715 _90724 g x f).
Proof. exact (fun_ext (fun x' : _90715 => @lem3496103 _90715 _90724 x' g x f)). Qed.
Lemma lem3496105 {_90715 : Type'} : (@ex _90715) = (@ex _90715).
Proof. exact (eq_refl (@ex _90715)). Qed.
Lemma lem3496106 {_90715 _90724 : Type'} (g : type686 _90715) (x : _90724) (f : _90715 -> _90724) : (term566 _90715 _90724 g x f) = (term617 _90715 _90724 g x f).
Proof. exact (MK_COMB (@lem3496105 _90715) (@lem3496104 _90715 _90724 g x f)). Qed.
Lemma lem3496107 {_90715 _90724 : Type'} (g : type686 _90715) (x : _90724) (f : _90715 -> _90724) : (term549 _90715 _90724 g x f) = (term617 _90715 _90724 g x f).
Proof. exact (TRANS (@lem3496029 _90715 _90724 g x f) (@lem3496106 _90715 _90724 g x f)). Qed.
Lemma lem3496109 {_90715 _90724 : Type'} (g : type686 _90715) (x : _90724) (f : _90715 -> _90724) : (term397 _90715 _90724 g x f) = (term617 _90715 _90724 g x f).
Proof. exact (TRANS (@lem3496003 _90715 _90724 g x f) (@lem3496107 _90715 _90724 g x f)). Qed.
Lemma lem3496110 {_90715 _90724 : Type'} (g : type686 _90715) (x : _90724) (f : _90715 -> _90724) : (term296 _90715 _90724 g x f) = (term617 _90715 _90724 g x f).
Proof. exact (TRANS (@lem3495463 _90715 _90724 g x f) (@lem3496109 _90715 _90724 g x f)). Qed.
Lemma lem3496111 {_90715 _90724 : Type'} (g : type686 _90715) (x : _90724) (f : _90715 -> _90724) (h1 : term296 _90715 _90724 g x f) : term617 _90715 _90724 g x f.
Proof. exact (EQ_MP (@lem3496110 _90715 _90724 g x f) (@lem3495111 _90715 _90724 g x f h1)). Qed.
Lemma lem3496112 {_90715 _90724 : Type'} (x' : _90715) (g : type686 _90715) (x : _90724) (f : _90715 -> _90724) (h1 : term615 _90715 _90724 x' g x f) : term615 _90715 _90724 x' g x f.
Proof. exact (h1). Qed.
Lemma lem3496113 {_90715 _90724 : Type'} (x' : _90715) (x'' : _90715 -> Prop) (g : type686 _90715) (x : _90724) (f : _90715 -> _90724) (h1 : term613 _90715 _90724 x' x'' g x f) : term613 _90715 _90724 x' x'' g x f.
Proof. exact (h1). Qed.
Lemma lem3496114 {_90715 _90724 : Type'} (x' : _90715) (x'' : _90715 -> Prop) (t : type1402 _90715) (g : type686 _90715) (x : _90724) (f : _90715 -> _90724) (h1 : term611 _90715 _90724 x' x'' t g x f) : term611 _90715 _90724 x' x'' t g x f.
Proof. exact (h1). Qed.
Lemma lem3496115 {_90715 _90724 : Type'} (x' : _90715) (x'' : _90715 -> Prop) (t : type1402 _90715) (g : type686 _90715) (x : _90724) (f : _90715 -> _90724) (x''' : type684 _90715) (h1 : term608 _90715 _90724 x' x'' t g x f x''') : term608 _90715 _90724 x' x'' t g x f x'''.
Proof. exact (h1). Qed.
Lemma lem3496116 {_90715 : Type'} (g : type686 _90715) (x'''' : _90715 -> Prop) (h1 : g x'''') : g x''''.
Proof. exact (h1). Qed.
Lemma lem3496121 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem3496122 {_90715 : Type'} (f : _90715 -> Prop) (x : _90715) : (f x) = (@I (_90715 -> Prop) f x).
Proof. exact (@lem3496121 _90715 Prop f x). Qed.
Lemma lem3496124 {_90715 : Type'} (t : _90715 -> Prop) (x : _90715) : (t x) = (@I (_90715 -> Prop) t x).
Proof. exact (@lem3496122 _90715 t x). Qed.
Lemma lem3496125 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem3496130 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem3496131 {_90715 : Type'} (f : _90715 -> Prop) (x : _90715) : (f x) = (@I (_90715 -> Prop) f x).
Proof. exact (@lem3496130 _90715 Prop f x). Qed.
Lemma lem3496133 {_90715 : Type'} (t : _90715 -> Prop) (x' : _90715) : (t x') = (@I (_90715 -> Prop) t x').
Proof. exact (@lem3496131 _90715 t x'). Qed.
Lemma lem3496134 {_90715 : Type'} (t : _90715 -> Prop) (x' : _90715) : (term618 _90715 t x') = (term619 _90715 t x').
Proof. exact (MK_COMB (@lem3496125) (@lem3496133 _90715 t x')). Qed.
Lemma lem3496135 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem3496136 {_90724 : Type'} : (@eq _90724) = (@eq _90724).
Proof. exact (eq_refl (@eq _90724)). Qed.
Lemma lem3496141 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem3496143 {_90715 _90724 : Type'} (f : _90715 -> _90724) (x : _90715) : (f x) = (@I (_90715 -> _90724) f x).
Proof. exact (@lem3496141 _90715 _90724 f x). Qed.
Lemma lem3496148 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem3496149 {_90715 _90724 : Type'} (f : _90715 -> _90724) (x : _90715) : (f x) = (@I (_90715 -> _90724) f x).
Proof. exact (@lem3496148 _90715 _90724 f x). Qed.
Lemma lem3496151 {_90715 _90724 : Type'} (f : _90715 -> _90724) (x' : _90715) : (f x') = (@I (_90715 -> _90724) f x').
Proof. exact (@lem3496149 _90715 _90724 f x'). Qed.
Lemma lem3496152 {_90715 _90724 : Type'} (f : _90715 -> _90724) (x : _90715) : (term620 _90715 _90724 f x) = (term621 _90715 _90724 f x).
Proof. exact (MK_COMB (@lem3496136 _90724) (@lem3496143 _90715 _90724 f x)). Qed.
Lemma lem3496153 {_90715 _90724 : Type'} (x : _90715) (f : _90715 -> _90724) (x' : _90715) : ((f x) = (f x')) = ((@I (_90715 -> _90724) f x) = (@I (_90715 -> _90724) f x')).
Proof. exact (MK_COMB (@lem3496152 _90715 _90724 f x) (@lem3496151 _90715 _90724 f x')). Qed.
Lemma lem3496154 {_90715 _90724 : Type'} (x : _90715) (f : _90715 -> _90724) (x' : _90715) : (term622 _90715 _90724 x f x') = (term623 _90715 _90724 x f x').
Proof. exact (MK_COMB (@lem3496135) (@lem3496153 _90715 _90724 x f x')). Qed.
Lemma lem3496155 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem3496156 {_90715 _90724 : Type'} (x : _90715) (f : _90715 -> _90724) (x' : _90715) : (term624 _90715 _90724 x f x') = (term625 _90715 _90724 x f x').
Proof. exact (MK_COMB (@lem3496155) (@lem3496154 _90715 _90724 x f x')). Qed.
Lemma lem3496157 {_90715 _90724 : Type'} (x : _90715) (f : _90715 -> _90724) (t : _90715 -> Prop) (x' : _90715) : (term310 _90715 _90724 x f t x') = (term626 _90715 _90724 x f t x').
Proof. exact (MK_COMB (@lem3496156 _90715 _90724 x f x') (@lem3496134 _90715 t x')). Qed.
Lemma lem3496158 {_90715 _90724 : Type'} (x : _90715) (f : _90715 -> _90724) (t : _90715 -> Prop) : (term318 _90715 _90724 x f t) = (term627 _90715 _90724 x f t).
Proof. exact (fun_ext (fun x' : _90715 => @lem3496157 _90715 _90724 x f t x')). Qed.
Lemma lem3496159 {_90715 : Type'} : (@all _90715) = (@all _90715).
Proof. exact (eq_refl (@all _90715)). Qed.
Lemma lem3496160 {_90715 _90724 : Type'} (x : _90715) (f : _90715 -> _90724) (t : _90715 -> Prop) : (term319 _90715 _90724 x f t) = (term628 _90715 _90724 x f t).
Proof. exact (MK_COMB (@lem3496159 _90715) (@lem3496158 _90715 _90724 x f t)). Qed.
Lemma lem3496161 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem3496166 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem3496167 {_90715 : Type'} (f : _90715 -> Prop) (x : _90715) : (f x) = (@I (_90715 -> Prop) f x).
Proof. exact (@lem3496166 _90715 Prop f x). Qed.
Lemma lem3496169 {_90715 : Type'} (u : _90715 -> Prop) (x : _90715) : (u x) = (@I (_90715 -> Prop) u x).
Proof. exact (@lem3496167 _90715 u x). Qed.
Lemma lem3496170 {_90715 : Type'} (u : _90715 -> Prop) (x : _90715) : (term618 _90715 u x) = (term619 _90715 u x).
Proof. exact (MK_COMB (@lem3496161) (@lem3496169 _90715 u x)). Qed.
Lemma lem3496171 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem3496172 {_90715 : Type'} (u : _90715 -> Prop) (x : _90715) : (term320 _90715 u x) = (term629 _90715 u x).
Proof. exact (MK_COMB (@lem3496171) (@lem3496170 _90715 u x)). Qed.
Lemma lem3496173 {_90715 _90724 : Type'} (u : _90715 -> Prop) (x : _90715) (f : _90715 -> _90724) (t : _90715 -> Prop) : (term322 _90715 _90724 u x f t) = (term630 _90715 _90724 u x f t).
Proof. exact (MK_COMB (@lem3496172 _90715 u x) (@lem3496160 _90715 _90724 x f t)). Qed.
Lemma lem3496174 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem3496175 {_90715 _90724 : Type'} (u : _90715 -> Prop) (x : _90715) (f : _90715 -> _90724) (t : _90715 -> Prop) : (term325 _90715 _90724 u x f t) = (term631 _90715 _90724 u x f t).
Proof. exact (MK_COMB (@lem3496174) (@lem3496173 _90715 _90724 u x f t)). Qed.
Lemma lem3496176 {_90715 _90724 : Type'} (u : _90715 -> Prop) (f : _90715 -> _90724) (t : _90715 -> Prop) (x : _90715) : (term327 _90715 _90724 u f t x) = (term632 _90715 _90724 u f t x).
Proof. exact (MK_COMB (@lem3496175 _90715 _90724 u x f t) (@lem3496124 _90715 t x)). Qed.
Lemma lem3496177 {_90715 _90724 : Type'} (u : _90715 -> Prop) (f : _90715 -> _90724) (t : _90715 -> Prop) : (term328 _90715 _90724 u f t) = (term633 _90715 _90724 u f t).
Proof. exact (fun_ext (fun x : _90715 => @lem3496176 _90715 _90724 u f t x)). Qed.
Lemma lem3496178 {_90715 : Type'} : (@all _90715) = (@all _90715).
Proof. exact (eq_refl (@all _90715)). Qed.
Lemma lem3496179 {_90715 _90724 : Type'} (u : _90715 -> Prop) (f : _90715 -> _90724) (t : _90715 -> Prop) : (term329 _90715 _90724 u f t) = (term634 _90715 _90724 u f t).
Proof. exact (MK_COMB (@lem3496178 _90715) (@lem3496177 _90715 _90724 u f t)). Qed.
Lemma lem3496184 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem3496185 {_90715 : Type'} (f : _90715 -> Prop) (x : _90715) : (f x) = (@I (_90715 -> Prop) f x).
Proof. exact (@lem3496184 _90715 Prop f x). Qed.
Lemma lem3496187 {_90715 : Type'} (u : _90715 -> Prop) (x : _90715) : (u x) = (@I (_90715 -> Prop) u x).
Proof. exact (@lem3496185 _90715 u x). Qed.
Lemma lem3496188 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem3496193 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem3496194 {_90715 : Type'} (f : _90715 -> Prop) (x : _90715) : (f x) = (@I (_90715 -> Prop) f x).
Proof. exact (@lem3496193 _90715 Prop f x). Qed.
Lemma lem3496196 {_90715 : Type'} (t : _90715 -> Prop) (x : _90715) : (t x) = (@I (_90715 -> Prop) t x).
Proof. exact (@lem3496194 _90715 t x). Qed.
Lemma lem3496197 {_90715 : Type'} (t : _90715 -> Prop) (x : _90715) : (term618 _90715 t x) = (term619 _90715 t x).
Proof. exact (MK_COMB (@lem3496188) (@lem3496196 _90715 t x)). Qed.
Lemma lem3496198 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem3496199 {_90715 : Type'} (t : _90715 -> Prop) (x : _90715) : (term320 _90715 t x) = (term629 _90715 t x).
Proof. exact (MK_COMB (@lem3496198) (@lem3496197 _90715 t x)). Qed.
Lemma lem3496200 {_90715 : Type'} (t : _90715 -> Prop) (u : _90715 -> Prop) (x : _90715) : (term306 _90715 t u x) = (term635 _90715 t u x).
Proof. exact (MK_COMB (@lem3496199 _90715 t x) (@lem3496187 _90715 u x)). Qed.
Lemma lem3496201 {_90715 : Type'} (t : _90715 -> Prop) (u : _90715 -> Prop) : (term307 _90715 t u) = (term636 _90715 t u).
Proof. exact (fun_ext (fun x : _90715 => @lem3496200 _90715 t u x)). Qed.
Lemma lem3496202 {_90715 : Type'} : (@all _90715) = (@all _90715).
Proof. exact (eq_refl (@all _90715)). Qed.
Lemma lem3496203 {_90715 : Type'} (t : _90715 -> Prop) (u : _90715 -> Prop) : (term308 _90715 t u) = (term637 _90715 t u).
Proof. exact (MK_COMB (@lem3496202 _90715) (@lem3496201 _90715 t u)). Qed.
Lemma lem3496204 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem3496205 {_90715 : Type'} (t : _90715 -> Prop) (u : _90715 -> Prop) : (term330 _90715 t u) = (term638 _90715 t u).
Proof. exact (MK_COMB (@lem3496204) (@lem3496203 _90715 t u)). Qed.
Lemma lem3496206 {_90715 _90724 : Type'} (u : _90715 -> Prop) (f : _90715 -> _90724) (t : _90715 -> Prop) : (term331 _90715 _90724 u f t) = (term639 _90715 _90724 u f t).
Proof. exact (MK_COMB (@lem3496205 _90715 t u) (@lem3496179 _90715 _90724 u f t)). Qed.
Lemma lem3496207 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem3496212 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem3496213 {_90715 : Type'} (f : type686 _90715) (x : _90715 -> Prop) : (f x) = (@I ((_90715 -> Prop) -> Prop) f x).
Proof. exact (@lem3496212 (_90715 -> Prop) Prop f x). Qed.
Lemma lem3496215 {_90715 : Type'} (g : type686 _90715) (t : _90715 -> Prop) : (g t) = (@I ((_90715 -> Prop) -> Prop) g t).
Proof. exact (@lem3496213 _90715 g t). Qed.
Lemma lem3496216 {_90715 : Type'} (g : type686 _90715) (t : _90715 -> Prop) : (term207 _90715 g t) = (term640 _90715 g t).
Proof. exact (MK_COMB (@lem3496207) (@lem3496215 _90715 g t)). Qed.
Lemma lem3496217 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem3496218 {_90715 : Type'} (g : type686 _90715) (t : _90715 -> Prop) : (term332 _90715 g t) = (term641 _90715 g t).
Proof. exact (MK_COMB (@lem3496217) (@lem3496216 _90715 g t)). Qed.
Lemma lem3496219 {_90715 _90724 : Type'} (g : type686 _90715) (u : _90715 -> Prop) (f : _90715 -> _90724) (t : _90715 -> Prop) : (term334 _90715 _90724 g u f t) = (term642 _90715 _90724 g u f t).
Proof. exact (MK_COMB (@lem3496218 _90715 g t) (@lem3496206 _90715 _90724 u f t)). Qed.
Lemma lem3496220 {_90715 _90724 : Type'} (g : type686 _90715) (u : _90715 -> Prop) (f : _90715 -> _90724) : (term335 _90715 _90724 g u f) = (term643 _90715 _90724 g u f).
Proof. exact (fun_ext (fun t : _90715 -> Prop => @lem3496219 _90715 _90724 g u f t)). Qed.
Lemma lem3496221 {_90715 : Type'} : (@all (_90715 -> Prop)) = (@all (_90715 -> Prop)).
Proof. exact (eq_refl (@all (_90715 -> Prop))). Qed.
Lemma lem3496222 {_90715 _90724 : Type'} (g : type686 _90715) (u : _90715 -> Prop) (f : _90715 -> _90724) : (term336 _90715 _90724 g u f) = (term644 _90715 _90724 g u f).
Proof. exact (MK_COMB (@lem3496221 _90715) (@lem3496220 _90715 _90724 g u f)). Qed.
Lemma lem3496223 {_90715 _90724 : Type'} (g : type686 _90715) (u : _90715 -> Prop) (f : _90715 -> _90724) (h1 : term252 _90715 _90724 g u f) : term644 _90715 _90724 g u f.
Proof. exact (EQ_MP (@lem3496222 _90715 _90724 g u f) (@lem3495352 _90715 _90724 g u f h1)). Qed.
Lemma lem3496224 {_90715 : Type'} (x : _90715 -> Prop) : x = x.
Proof. exact (eq_refl x). Qed.
Lemma lem3496229 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem3496230 {_90715 : Type'} (f : type684 _90715) (x : _90715 -> Prop) : (f x) = (@I ((_90715 -> Prop) -> _90715) f x).
Proof. exact (@lem3496229 (_90715 -> Prop) _90715 f x). Qed.
Lemma lem3496232 {_90715 : Type'} (x''' : type684 _90715) (x : _90715 -> Prop) : (x''' x) = (@I ((_90715 -> Prop) -> _90715) x''' x).
Proof. exact (@lem3496230 _90715 x''' x). Qed.
Lemma lem3496233 {_90715 : Type'} (x''' : type684 _90715) (x : _90715 -> Prop) : (term645 _90715 x''' x) = (term646 _90715 x''' x).
Proof. exact (MK_COMB (@lem3496224 _90715 x) (@lem3496232 _90715 x''' x)). Qed.
Lemma lem3496235 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem3496236 {_90715 : Type'} (f : _90715 -> Prop) (x : _90715) : (f x) = (@I (_90715 -> Prop) f x).
Proof. exact (@lem3496235 _90715 Prop f x). Qed.
Lemma lem3496237 {_90715 : Type'} (x''' : type684 _90715) (x : _90715 -> Prop) : (term646 _90715 x''' x) = (term647 _90715 x''' x).
Proof. exact (@lem3496236 _90715 x (@I ((_90715 -> Prop) -> _90715) x''' x)). Qed.
Lemma lem3496238 {_90715 : Type'} (x''' : type684 _90715) (x : _90715 -> Prop) : (term645 _90715 x''' x) = (term647 _90715 x''' x).
Proof. exact (TRANS (@lem3496233 _90715 x''' x) (@lem3496237 _90715 x''' x)). Qed.
Lemma lem3496241 {_90715 _90724 : Type'} (f : _90715 -> _90724) : f = f.
Proof. exact (eq_refl f). Qed.
Lemma lem3496246 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem3496247 {_90715 : Type'} (f : type684 _90715) (x : _90715 -> Prop) : (f x) = (@I ((_90715 -> Prop) -> _90715) f x).
Proof. exact (@lem3496246 (_90715 -> Prop) _90715 f x). Qed.
Lemma lem3496249 {_90715 : Type'} (x''' : type684 _90715) (x : _90715 -> Prop) : (x''' x) = (@I ((_90715 -> Prop) -> _90715) x''' x).
Proof. exact (@lem3496247 _90715 x''' x). Qed.
Lemma lem3496250 {_90715 _90724 : Type'} (f : _90715 -> _90724) (x''' : type684 _90715) (x : _90715 -> Prop) : (term648 _90715 _90724 f x''' x) = (term649 _90715 _90724 f x''' x).
Proof. exact (MK_COMB (@lem3496241 _90715 _90724 f) (@lem3496249 _90715 x''' x)). Qed.
Lemma lem3496252 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem3496253 {_90715 _90724 : Type'} (f : _90715 -> _90724) (x : _90715) : (f x) = (@I (_90715 -> _90724) f x).
Proof. exact (@lem3496252 _90715 _90724 f x). Qed.
Lemma lem3496254 {_90715 _90724 : Type'} (f : _90715 -> _90724) (x''' : type684 _90715) (x : _90715 -> Prop) : (term649 _90715 _90724 f x''' x) = (term650 _90715 _90724 f x''' x).
Proof. exact (@lem3496253 _90715 _90724 f (@I ((_90715 -> Prop) -> _90715) x''' x)). Qed.
Lemma lem3496255 {_90715 _90724 : Type'} (f : _90715 -> _90724) (x''' : type684 _90715) (x : _90715 -> Prop) : (term648 _90715 _90724 f x''' x) = (term650 _90715 _90724 f x''' x).
Proof. exact (TRANS (@lem3496250 _90715 _90724 f x''' x) (@lem3496254 _90715 _90724 f x''' x)). Qed.
Lemma lem3496256 {_90724 : Type'} (x : _90724) : (@eq _90724 x) = (@eq _90724 x).
Proof. exact (eq_refl (@eq _90724 x)). Qed.
Lemma lem3496257 {_90715 _90724 : Type'} (x : _90724) (f : _90715 -> _90724) (x''' : type684 _90715) (x' : _90715 -> Prop) : (x = (term648 _90715 _90724 f x''' x')) = (x = (term650 _90715 _90724 f x''' x')).
Proof. exact (MK_COMB (@lem3496256 _90724 x) (@lem3496255 _90715 _90724 f x''' x')). Qed.
Lemma lem3496258 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem3496259 {_90715 _90724 : Type'} (x : _90724) (f : _90715 -> _90724) (x''' : type684 _90715) (x' : _90715 -> Prop) : (term651 _90715 _90724 x f x''' x') = (term652 _90715 _90724 x f x''' x').
Proof. exact (MK_COMB (@lem3496258) (@lem3496257 _90715 _90724 x f x''' x')). Qed.
Lemma lem3496260 {_90715 _90724 : Type'} (x : _90724) (f : _90715 -> _90724) (x''' : type684 _90715) (x' : _90715 -> Prop) : (term653 _90715 _90724 x f x''' x') = (term654 _90715 _90724 x f x''' x').
Proof. exact (MK_COMB (@lem3496259 _90715 _90724 x f x''' x') (@lem3496238 _90715 x''' x')). Qed.
Lemma lem3496261 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem3496266 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem3496267 {_90715 : Type'} (f : type686 _90715) (x : _90715 -> Prop) : (f x) = (@I ((_90715 -> Prop) -> Prop) f x).
Proof. exact (@lem3496266 (_90715 -> Prop) Prop f x). Qed.
Lemma lem3496269 {_90715 : Type'} (g : type686 _90715) (x : _90715 -> Prop) : (g x) = (@I ((_90715 -> Prop) -> Prop) g x).
Proof. exact (@lem3496267 _90715 g x). Qed.
Lemma lem3496270 {_90715 : Type'} (g : type686 _90715) (x : _90715 -> Prop) : (term207 _90715 g x) = (term640 _90715 g x).
Proof. exact (MK_COMB (@lem3496261) (@lem3496269 _90715 g x)). Qed.
Lemma lem3496271 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem3496272 {_90715 : Type'} (g : type686 _90715) (x : _90715 -> Prop) : (term332 _90715 g x) = (term641 _90715 g x).
Proof. exact (MK_COMB (@lem3496271) (@lem3496270 _90715 g x)). Qed.
Lemma lem3496273 {_90715 _90724 : Type'} (g : type686 _90715) (x : _90724) (f : _90715 -> _90724) (x''' : type684 _90715) (x' : _90715 -> Prop) : (term507 _90715 _90724 g x f x''' x') = (term655 _90715 _90724 g x f x''' x').
Proof. exact (MK_COMB (@lem3496272 _90715 g x') (@lem3496260 _90715 _90724 x f x''' x')). Qed.
Lemma lem3496274 {_90715 _90724 : Type'} (g : type686 _90715) (x : _90724) (f : _90715 -> _90724) (x''' : type684 _90715) : (term509 _90715 _90724 g x f x''') = (term656 _90715 _90724 g x f x''').
Proof. exact (fun_ext (fun x' : _90715 -> Prop => @lem3496273 _90715 _90724 g x f x''' x')). Qed.
Lemma lem3496275 {_90715 : Type'} : (@all (_90715 -> Prop)) = (@all (_90715 -> Prop)).
Proof. exact (eq_refl (@all (_90715 -> Prop))). Qed.
Lemma lem3496276 {_90715 _90724 : Type'} (g : type686 _90715) (x : _90724) (f : _90715 -> _90724) (x''' : type684 _90715) : (term511 _90715 _90724 g x f x''') = (term657 _90715 _90724 g x f x''').
Proof. exact (MK_COMB (@lem3496275 _90715) (@lem3496274 _90715 _90724 g x f x''')). Qed.
Lemma lem3496277 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem3496284 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem3496285 {_90715 : Type'} (f : type1402 _90715) (x : _90715) : (f x) = (@I (_90715 -> _90715 -> Prop) f x).
Proof. exact (@lem3496284 _90715 (_90715 -> Prop) f x). Qed.
Lemma lem3496286 {_90715 : Type'} (t : type1402 _90715) (x : _90715) : (t x) = (@I (_90715 -> _90715 -> Prop) t x).
Proof. exact (@lem3496285 _90715 t x). Qed.
Lemma lem3496287 {_90715 : Type'} (x : _90715) : x = x.
Proof. exact (eq_refl x). Qed.
Lemma lem3496288 {_90715 : Type'} (t : type1402 _90715) (x : _90715) : (t x x) = (@I (_90715 -> _90715 -> Prop) t x x).
Proof. exact (MK_COMB (@lem3496286 _90715 t x) (@lem3496287 _90715 x)). Qed.
Lemma lem3496290 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem3496291 {_90715 : Type'} (f : _90715 -> Prop) (x : _90715) : (f x) = (@I (_90715 -> Prop) f x).
Proof. exact (@lem3496290 _90715 Prop f x). Qed.
Lemma lem3496292 {_90715 : Type'} (t : type1402 _90715) (x : _90715) : (@I (_90715 -> _90715 -> Prop) t x x) = (term658 _90715 t x).
Proof. exact (@lem3496291 _90715 (@I (_90715 -> _90715 -> Prop) t x) x). Qed.
Lemma lem3496294 {_90715 : Type'} (t : type1402 _90715) (x : _90715) : (t x x) = (term658 _90715 t x).
Proof. exact (TRANS (@lem3496288 _90715 t x) (@lem3496292 _90715 t x)). Qed.
Lemma lem3496295 {_90715 : Type'} (t : type1402 _90715) (x : _90715) : (term659 _90715 t x) = (term660 _90715 t x).
Proof. exact (MK_COMB (@lem3496277) (@lem3496294 _90715 t x)). Qed.
Lemma lem3496296 {_90715 : Type'} (g : type686 _90715) : g = g.
Proof. exact (eq_refl g). Qed.
Lemma lem3496301 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem3496302 {_90715 : Type'} (f : type1402 _90715) (x : _90715) : (f x) = (@I (_90715 -> _90715 -> Prop) f x).
Proof. exact (@lem3496301 _90715 (_90715 -> Prop) f x). Qed.
Lemma lem3496304 {_90715 : Type'} (t : type1402 _90715) (x : _90715) : (t x) = (@I (_90715 -> _90715 -> Prop) t x).
Proof. exact (@lem3496302 _90715 t x). Qed.
Lemma lem3496305 {_90715 : Type'} (g : type686 _90715) (t : type1402 _90715) (x : _90715) : (term661 _90715 g t x) = (term662 _90715 g t x).
Proof. exact (MK_COMB (@lem3496296 _90715 g) (@lem3496304 _90715 t x)). Qed.
Lemma lem3496307 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem3496308 {_90715 : Type'} (f : type686 _90715) (x : _90715 -> Prop) : (f x) = (@I ((_90715 -> Prop) -> Prop) f x).
Proof. exact (@lem3496307 (_90715 -> Prop) Prop f x). Qed.
Lemma lem3496309 {_90715 : Type'} (g : type686 _90715) (t : type1402 _90715) (x : _90715) : (term662 _90715 g t x) = (term663 _90715 g t x).
Proof. exact (@lem3496308 _90715 g (@I (_90715 -> _90715 -> Prop) t x)). Qed.
Lemma lem3496310 {_90715 : Type'} (g : type686 _90715) (t : type1402 _90715) (x : _90715) : (term661 _90715 g t x) = (term663 _90715 g t x).
Proof. exact (TRANS (@lem3496305 _90715 g t x) (@lem3496309 _90715 g t x)). Qed.
Lemma lem3496311 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem3496312 {_90715 : Type'} (g : type686 _90715) (t : type1402 _90715) (x : _90715) : (term664 _90715 g t x) = (term665 _90715 g t x).
Proof. exact (MK_COMB (@lem3496311) (@lem3496310 _90715 g t x)). Qed.
Lemma lem3496313 {_90715 : Type'} (g : type686 _90715) (t : type1402 _90715) (x : _90715) : (term666 _90715 g t x) = (term667 _90715 g t x).
Proof. exact (MK_COMB (@lem3496312 _90715 g t x) (@lem3496295 _90715 t x)). Qed.
Lemma lem3496314 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem3496321 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem3496323 {_90715 _90724 : Type'} (f : _90715 -> _90724) (x : _90715) : (f x) = (@I (_90715 -> _90724) f x).
Proof. exact (@lem3496321 _90715 _90724 f x). Qed.
Lemma lem3496324 {_90724 : Type'} (x : _90724) : (@eq _90724 x) = (@eq _90724 x).
Proof. exact (eq_refl (@eq _90724 x)). Qed.
Lemma lem3496325 {_90715 _90724 : Type'} (x : _90724) (f : _90715 -> _90724) (x' : _90715) : (x = (f x')) = (x = (@I (_90715 -> _90724) f x')).
Proof. exact (MK_COMB (@lem3496324 _90724 x) (@lem3496323 _90715 _90724 f x')). Qed.
Lemma lem3496326 {_90715 _90724 : Type'} (x : _90724) (f : _90715 -> _90724) (x' : _90715) : (term440 _90715 _90724 x f x') = (term668 _90715 _90724 x f x').
Proof. exact (MK_COMB (@lem3496314) (@lem3496325 _90715 _90724 x f x')). Qed.
Lemma lem3496327 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem3496328 {_90715 _90724 : Type'} (x : _90724) (f : _90715 -> _90724) (x' : _90715) : (term349 _90715 _90724 x f x') = (term669 _90715 _90724 x f x').
Proof. exact (MK_COMB (@lem3496327) (@lem3496326 _90715 _90724 x f x')). Qed.
Lemma lem3496329 {_90715 _90724 : Type'} (x : _90724) (f : _90715 -> _90724) (g : type686 _90715) (t : type1402 _90715) (x' : _90715) : (term470 _90715 _90724 x f g t x') = (term670 _90715 _90724 x f g t x').
Proof. exact (MK_COMB (@lem3496328 _90715 _90724 x f x') (@lem3496313 _90715 g t x')). Qed.
Lemma lem3496330 {_90715 _90724 : Type'} (x : _90724) (f : _90715 -> _90724) (g : type686 _90715) (t : type1402 _90715) : (term472 _90715 _90724 x f g t) = (term671 _90715 _90724 x f g t).
Proof. exact (fun_ext (fun x' : _90715 => @lem3496329 _90715 _90724 x f g t x')). Qed.
Lemma lem3496331 {_90715 : Type'} : (@all _90715) = (@all _90715).
Proof. exact (eq_refl (@all _90715)). Qed.
Lemma lem3496332 {_90715 _90724 : Type'} (x : _90724) (f : _90715 -> _90724) (g : type686 _90715) (t : type1402 _90715) : (term474 _90715 _90724 x f g t) = (term672 _90715 _90724 x f g t).
Proof. exact (MK_COMB (@lem3496331 _90715) (@lem3496330 _90715 _90724 x f g t)). Qed.
Lemma lem3496333 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem3496334 {_90715 _90724 : Type'} (x : _90724) (f : _90715 -> _90724) (g : type686 _90715) (t : type1402 _90715) : (term527 _90715 _90724 x f g t) = (term673 _90715 _90724 x f g t).
Proof. exact (MK_COMB (@lem3496333) (@lem3496332 _90715 _90724 x f g t)). Qed.
Lemma lem3496335 {_90715 _90724 : Type'} (t : type1402 _90715) (g : type686 _90715) (x : _90724) (f : _90715 -> _90724) (x''' : type684 _90715) : (term543 _90715 _90724 t g x f x''') = (term674 _90715 _90724 t g x f x''').
Proof. exact (MK_COMB (@lem3496334 _90715 _90724 x f g t) (@lem3496276 _90715 _90724 g x f x''')). Qed.
Lemma lem3496336 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem3496341 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem3496342 {_90715 : Type'} (f : _90715 -> Prop) (x : _90715) : (f x) = (@I (_90715 -> Prop) f x).
Proof. exact (@lem3496341 _90715 Prop f x). Qed.
Lemma lem3496344 {_90715 : Type'} (x'' : _90715 -> Prop) (x : _90715) : (x'' x) = (@I (_90715 -> Prop) x'' x).
Proof. exact (@lem3496342 _90715 x'' x). Qed.
Lemma lem3496345 {_90715 : Type'} (x'' : _90715 -> Prop) (x : _90715) : (term618 _90715 x'' x) = (term619 _90715 x'' x).
Proof. exact (MK_COMB (@lem3496336) (@lem3496344 _90715 x'' x)). Qed.
Lemma lem3496346 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem3496353 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem3496355 {_90715 _90724 : Type'} (f : _90715 -> _90724) (x : _90715) : (f x) = (@I (_90715 -> _90724) f x).
Proof. exact (@lem3496353 _90715 _90724 f x). Qed.
Lemma lem3496356 {_90724 : Type'} (x : _90724) : (@eq _90724 x) = (@eq _90724 x).
Proof. exact (eq_refl (@eq _90724 x)). Qed.
Lemma lem3496357 {_90715 _90724 : Type'} (x : _90724) (f : _90715 -> _90724) (x' : _90715) : (x = (f x')) = (x = (@I (_90715 -> _90724) f x')).
Proof. exact (MK_COMB (@lem3496356 _90724 x) (@lem3496355 _90715 _90724 f x')). Qed.
Lemma lem3496358 {_90715 _90724 : Type'} (x : _90724) (f : _90715 -> _90724) (x' : _90715) : (term440 _90715 _90724 x f x') = (term668 _90715 _90724 x f x').
Proof. exact (MK_COMB (@lem3496346) (@lem3496357 _90715 _90724 x f x')). Qed.
Lemma lem3496359 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem3496360 {_90715 _90724 : Type'} (x : _90724) (f : _90715 -> _90724) (x' : _90715) : (term349 _90715 _90724 x f x') = (term669 _90715 _90724 x f x').
Proof. exact (MK_COMB (@lem3496359) (@lem3496358 _90715 _90724 x f x')). Qed.
Lemma lem3496361 {_90715 _90724 : Type'} (x : _90724) (f : _90715 -> _90724) (x'' : _90715 -> Prop) (x' : _90715) : (term364 _90715 _90724 x f x'' x') = (term675 _90715 _90724 x f x'' x').
Proof. exact (MK_COMB (@lem3496360 _90715 _90724 x f x') (@lem3496345 _90715 x'' x')). Qed.
Lemma lem3496362 {_90715 _90724 : Type'} (x : _90724) (f : _90715 -> _90724) (x'' : _90715 -> Prop) : (term370 _90715 _90724 x f x'') = (term676 _90715 _90724 x f x'').
Proof. exact (fun_ext (fun x' : _90715 => @lem3496361 _90715 _90724 x f x'' x')). Qed.
Lemma lem3496363 {_90715 : Type'} : (@all _90715) = (@all _90715).
Proof. exact (eq_refl (@all _90715)). Qed.
Lemma lem3496364 {_90715 _90724 : Type'} (x : _90724) (f : _90715 -> _90724) (x'' : _90715 -> Prop) : (term371 _90715 _90724 x f x'') = (term677 _90715 _90724 x f x'').
Proof. exact (MK_COMB (@lem3496363 _90715) (@lem3496362 _90715 _90724 x f x'')). Qed.
Lemma lem3496369 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem3496370 {_90715 : Type'} (f : type686 _90715) (x : _90715 -> Prop) : (f x) = (@I ((_90715 -> Prop) -> Prop) f x).
Proof. exact (@lem3496369 (_90715 -> Prop) Prop f x). Qed.
Lemma lem3496372 {_90715 : Type'} (g : type686 _90715) (x'' : _90715 -> Prop) : (g x'') = (@I ((_90715 -> Prop) -> Prop) g x'').
Proof. exact (@lem3496370 _90715 g x''). Qed.
Lemma lem3496373 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem3496374 {_90715 : Type'} (g : type686 _90715) (x'' : _90715 -> Prop) : (term372 _90715 g x'') = (term678 _90715 g x'').
Proof. exact (MK_COMB (@lem3496373) (@lem3496372 _90715 g x'')). Qed.
Lemma lem3496375 {_90715 _90724 : Type'} (g : type686 _90715) (x : _90724) (f : _90715 -> _90724) (x'' : _90715 -> Prop) : (term374 _90715 _90724 g x f x'') = (term679 _90715 _90724 g x f x'').
Proof. exact (MK_COMB (@lem3496374 _90715 g x'') (@lem3496364 _90715 _90724 x f x'')). Qed.
Lemma lem3496380 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem3496381 {_90715 : Type'} (f : _90715 -> Prop) (x : _90715) : (f x) = (@I (_90715 -> Prop) f x).
Proof. exact (@lem3496380 _90715 Prop f x). Qed.
Lemma lem3496383 {_90715 : Type'} (t : _90715 -> Prop) (x' : _90715) : (t x') = (@I (_90715 -> Prop) t x').
Proof. exact (@lem3496381 _90715 t x'). Qed.
Lemma lem3496384 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem3496389 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem3496390 {_90715 : Type'} (f : type686 _90715) (x : _90715 -> Prop) : (f x) = (@I ((_90715 -> Prop) -> Prop) f x).
Proof. exact (@lem3496389 (_90715 -> Prop) Prop f x). Qed.
Lemma lem3496392 {_90715 : Type'} (g : type686 _90715) (t : _90715 -> Prop) : (g t) = (@I ((_90715 -> Prop) -> Prop) g t).
Proof. exact (@lem3496390 _90715 g t). Qed.
Lemma lem3496393 {_90715 : Type'} (g : type686 _90715) (t : _90715 -> Prop) : (term207 _90715 g t) = (term640 _90715 g t).
Proof. exact (MK_COMB (@lem3496384) (@lem3496392 _90715 g t)). Qed.
Lemma lem3496394 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem3496395 {_90715 : Type'} (g : type686 _90715) (t : _90715 -> Prop) : (term332 _90715 g t) = (term641 _90715 g t).
Proof. exact (MK_COMB (@lem3496394) (@lem3496393 _90715 g t)). Qed.
Lemma lem3496396 {_90715 : Type'} (g : type686 _90715) (t : _90715 -> Prop) (x' : _90715) : (term339 _90715 g t x') = (term680 _90715 g t x').
Proof. exact (MK_COMB (@lem3496395 _90715 g t) (@lem3496383 _90715 t x')). Qed.
Lemma lem3496397 {_90715 : Type'} (g : type686 _90715) (x' : _90715) : (term347 _90715 g x') = (term681 _90715 g x').
Proof. exact (fun_ext (fun t : _90715 -> Prop => @lem3496396 _90715 g t x')). Qed.
Lemma lem3496398 {_90715 : Type'} : (@all (_90715 -> Prop)) = (@all (_90715 -> Prop)).
Proof. exact (eq_refl (@all (_90715 -> Prop))). Qed.
Lemma lem3496399 {_90715 : Type'} (g : type686 _90715) (x' : _90715) : (term348 _90715 g x') = (term682 _90715 g x').
Proof. exact (MK_COMB (@lem3496398 _90715) (@lem3496397 _90715 g x')). Qed.
Lemma lem3496406 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem3496407 {_90715 _90724 : Type'} (f : _90715 -> _90724) (x : _90715) : (f x) = (@I (_90715 -> _90724) f x).
Proof. exact (@lem3496406 _90715 _90724 f x). Qed.
Lemma lem3496409 {_90715 _90724 : Type'} (f : _90715 -> _90724) (x' : _90715) : (f x') = (@I (_90715 -> _90724) f x').
Proof. exact (@lem3496407 _90715 _90724 f x'). Qed.
Lemma lem3496410 {_90724 : Type'} (x : _90724) : (@eq _90724 x) = (@eq _90724 x).
Proof. exact (eq_refl (@eq _90724 x)). Qed.
Lemma lem3496411 {_90715 _90724 : Type'} (x : _90724) (f : _90715 -> _90724) (x' : _90715) : (x = (f x')) = (x = (@I (_90715 -> _90724) f x')).
Proof. exact (MK_COMB (@lem3496410 _90724 x) (@lem3496409 _90715 _90724 f x')). Qed.
Lemma lem3496412 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem3496413 {_90715 _90724 : Type'} (x : _90724) (f : _90715 -> _90724) (x' : _90715) : (term88 _90715 _90724 x f x') = (term683 _90715 _90724 x f x').
Proof. exact (MK_COMB (@lem3496412) (@lem3496411 _90715 _90724 x f x')). Qed.
Lemma lem3496414 {_90715 _90724 : Type'} (x : _90724) (f : _90715 -> _90724) (g : type686 _90715) (x' : _90715) : (term353 _90715 _90724 x f g x') = (term684 _90715 _90724 x f g x').
Proof. exact (MK_COMB (@lem3496413 _90715 _90724 x f x') (@lem3496399 _90715 g x')). Qed.
Lemma lem3496415 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem3496416 {_90715 _90724 : Type'} (x : _90724) (f : _90715 -> _90724) (g : type686 _90715) (x' : _90715) : (term409 _90715 _90724 x f g x') = (term685 _90715 _90724 x f g x').
Proof. exact (MK_COMB (@lem3496415) (@lem3496414 _90715 _90724 x f g x')). Qed.
Lemma lem3496417 {_90715 _90724 : Type'} (x' : _90715) (g : type686 _90715) (x : _90724) (f : _90715 -> _90724) (x'' : _90715 -> Prop) : (term427 _90715 _90724 x' g x f x'') = (term686 _90715 _90724 x' g x f x'').
Proof. exact (MK_COMB (@lem3496416 _90715 _90724 x f g x') (@lem3496375 _90715 _90724 g x f x'')). Qed.
Lemma lem3496418 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem3496419 {_90715 _90724 : Type'} (x' : _90715) (g : type686 _90715) (x : _90724) (f : _90715 -> _90724) (x'' : _90715 -> Prop) : (term578 _90715 _90724 x' g x f x'') = (term687 _90715 _90724 x' g x f x'').
Proof. exact (MK_COMB (@lem3496418) (@lem3496417 _90715 _90724 x' g x f x'')). Qed.
Lemma lem3496420 {_90715 _90724 : Type'} (x' : _90715) (x'' : _90715 -> Prop) (t : type1402 _90715) (g : type686 _90715) (x : _90724) (f : _90715 -> _90724) (x''' : type684 _90715) : (term608 _90715 _90724 x' x'' t g x f x''') = (term688 _90715 _90724 x' x'' t g x f x''').
Proof. exact (MK_COMB (@lem3496419 _90715 _90724 x' g x f x'') (@lem3496335 _90715 _90724 t g x f x''')). Qed.
Lemma lem3496421 {_90715 _90724 : Type'} (x' : _90715) (x'' : _90715 -> Prop) (t : type1402 _90715) (g : type686 _90715) (x : _90724) (f : _90715 -> _90724) (x''' : type684 _90715) (h1 : term608 _90715 _90724 x' x'' t g x f x''') : term688 _90715 _90724 x' x'' t g x f x'''.
Proof. exact (EQ_MP (@lem3496420 _90715 _90724 x' x'' t g x f x''') (@lem3496115 _90715 _90724 x' x'' t g x f x''' h1)). Qed.
Lemma lem3496426 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem3496427 {_90715 : Type'} (f : type686 _90715) (x : _90715 -> Prop) : (f x) = (@I ((_90715 -> Prop) -> Prop) f x).
Proof. exact (@lem3496426 (_90715 -> Prop) Prop f x). Qed.
Lemma lem3496429 {_90715 : Type'} (g : type686 _90715) (x'''' : _90715 -> Prop) : (g x'''') = (@I ((_90715 -> Prop) -> Prop) g x'''').
Proof. exact (@lem3496427 _90715 g x''''). Qed.
Lemma lem3496431 {_90715 _90724 : Type'} (x' : _90715) (g : type686 _90715) (x : _90724) (f : _90715 -> _90724) (x'' : _90715 -> Prop) (h1 : term686 _90715 _90724 x' g x f x'') : term686 _90715 _90724 x' g x f x''.
Proof. exact (h1). Qed.
Lemma lem3496432 {_90715 _90724 : Type'} (t : type1402 _90715) (g : type686 _90715) (x : _90724) (f : _90715 -> _90724) (x''' : type684 _90715) (h1 : term674 _90715 _90724 t g x f x''') : term674 _90715 _90724 t g x f x'''.
Proof. exact (h1). Qed.
Lemma lem3496433 {_90715 _90724 : Type'} (x' : _90715) (g : type686 _90715) (x : _90724) (f : _90715 -> _90724) (x'' : _90715 -> Prop) (h1 : term686 _90715 _90724 x' g x f x'') : term679 _90715 _90724 g x f x''.
Proof. exact (proj2 (@lem3496431 _90715 _90724 x' g x f x'' h1)). Qed.
Lemma lem3496434 {_90715 _90724 : Type'} (x' : _90715) (g : type686 _90715) (x : _90724) (f : _90715 -> _90724) (x'' : _90715 -> Prop) (h1 : term686 _90715 _90724 x' g x f x'') : term684 _90715 _90724 x f g x'.
Proof. exact (proj1 (@lem3496431 _90715 _90724 x' g x f x'' h1)). Qed.
Lemma lem3496435 {_90715 _90724 : Type'} (x' : _90715) (g : type686 _90715) (x : _90724) (f : _90715 -> _90724) (x'' : _90715 -> Prop) (h1 : term686 _90715 _90724 x' g x f x'') : term677 _90715 _90724 x f x''.
Proof. exact (proj2 (@lem3496433 _90715 _90724 x' g x f x'' h1)). Qed.
Lemma lem3496437 {_90715 _90724 : Type'} (x' : _90715) (g : type686 _90715) (x : _90724) (f : _90715 -> _90724) (x'' : _90715 -> Prop) (h1 : term686 _90715 _90724 x' g x f x'') : term682 _90715 g x'.
Proof. exact (proj2 (@lem3496434 _90715 _90724 x' g x f x'' h1)). Qed.
Lemma lem3496439 {_90715 _90724 : Type'} (t : type1402 _90715) (g : type686 _90715) (x : _90724) (f : _90715 -> _90724) (x''' : type684 _90715) (h1 : term674 _90715 _90724 t g x f x''') : term657 _90715 _90724 g x f x'''.
Proof. exact (proj2 (@lem3496432 _90715 _90724 t g x f x''' h1)). Qed.
Lemma lem3496440 {_90715 _90724 : Type'} (t : type1402 _90715) (g : type686 _90715) (x : _90724) (f : _90715 -> _90724) (x''' : type684 _90715) (h1 : term674 _90715 _90724 t g x f x''') : term672 _90715 _90724 x f g t.
Proof. exact (proj1 (@lem3496432 _90715 _90724 t g x f x''' h1)). Qed.
Lemma lem3496664 {_90715 _90724 : Type'} (x : _90724) (f : _90715 -> _90724) (x'' : _90715 -> Prop) (x' : _90715) : (term675 _90715 _90724 x f x'' x') = (term675 _90715 _90724 x f x'' x').
Proof. exact (eq_refl (term675 _90715 _90724 x f x'' x')). Qed.
Lemma lem3496665 {_90715 _90724 : Type'} (x : _90724) (f : _90715 -> _90724) (x'' : _90715 -> Prop) : (term676 _90715 _90724 x f x'') = (term676 _90715 _90724 x f x'').
Proof. exact (fun_ext (fun x' : _90715 => @lem3496664 _90715 _90724 x f x'' x')). Qed.
Lemma lem3496666 {_90715 : Type'} : (@all _90715) = (@all _90715).
Proof. exact (eq_refl (@all _90715)). Qed.
Lemma lem3496668 {_90715 _90724 : Type'} (x : _90724) (f : _90715 -> _90724) (x'' : _90715 -> Prop) : (term677 _90715 _90724 x f x'') = (term677 _90715 _90724 x f x'').
Proof. exact (MK_COMB (@lem3496666 _90715) (@lem3496665 _90715 _90724 x f x'')). Qed.
Lemma lem3496669 {_90715 _90724 : Type'} (x' : _90715) (g : type686 _90715) (x : _90724) (f : _90715 -> _90724) (x'' : _90715 -> Prop) (h1 : term686 _90715 _90724 x' g x f x'') : term677 _90715 _90724 x f x''.
Proof. exact (EQ_MP (@lem3496668 _90715 _90724 x f x'') (@lem3496435 _90715 _90724 x' g x f x'' h1)). Qed.
Lemma lem3496681 {_90715 : Type'} (g : type686 _90715) (t : _90715 -> Prop) (x' : _90715) : (term680 _90715 g t x') = (term680 _90715 g t x').
Proof. exact (eq_refl (term680 _90715 g t x')). Qed.
Lemma lem3496682 {_90715 : Type'} (g : type686 _90715) (x' : _90715) : (term681 _90715 g x') = (term681 _90715 g x').
Proof. exact (fun_ext (fun t : _90715 -> Prop => @lem3496681 _90715 g t x')). Qed.
Lemma lem3496683 {_90715 : Type'} : (@all (_90715 -> Prop)) = (@all (_90715 -> Prop)).
Proof. exact (eq_refl (@all (_90715 -> Prop))). Qed.
Lemma lem3496685 {_90715 : Type'} (g : type686 _90715) (x' : _90715) : (term682 _90715 g x') = (term682 _90715 g x').
Proof. exact (MK_COMB (@lem3496683 _90715) (@lem3496682 _90715 g x')). Qed.
Lemma lem3496686 {_90715 _90724 : Type'} (x' : _90715) (g : type686 _90715) (x : _90724) (f : _90715 -> _90724) (x'' : _90715 -> Prop) (h1 : term686 _90715 _90724 x' g x f x'') : term682 _90715 g x'.
Proof. exact (EQ_MP (@lem3496685 _90715 g x') (@lem3496437 _90715 _90724 x' g x f x'' h1)). Qed.
Lemma lem3496688 {A : Type'} (P : Prop) (Q : A -> Prop) : (term689 A P Q) = (term690 A P Q).
Proof. exact (EQ_MP (@lem19007 A P Q) (@lem19006 A P Q)). Qed.
Lemma lem3496689 {_90715 : Type'} (P : Prop) (Q : _90715 -> Prop) : (term689 _90715 P Q) = (term690 _90715 P Q).
Proof. exact (@lem3496688 _90715 P Q). Qed.
Lemma lem3496690 {_90715 _90724 : Type'} (u : _90715 -> Prop) (x : _90715) (f : _90715 -> _90724) (t : _90715 -> Prop) : (term691 _90715 _90724 u x f t) = (term692 _90715 _90724 u x f t).
Proof. exact (@lem3496689 _90715 (term619 _90715 u x) (term627 _90715 _90724 x f t)). Qed.
Lemma lem3496691 {_90715 _90724 : Type'} (x : _90715) (f : _90715 -> _90724) (t : _90715 -> Prop) (x' : _90715) : (term693 _90715 _90724 x f t x') = (term626 _90715 _90724 x f t x').
Proof. exact (eq_refl (term693 _90715 _90724 x f t x')). Qed.
Lemma lem3496692 {_90715 _90724 : Type'} (x : _90715) (f : _90715 -> _90724) (t : _90715 -> Prop) : (term694 _90715 _90724 x f t) = (term627 _90715 _90724 x f t).
Proof. exact (fun_ext (fun x' : _90715 => @lem3496691 _90715 _90724 x f t x')). Qed.
Lemma lem3496693 {_90715 : Type'} : (@all _90715) = (@all _90715).
Proof. exact (eq_refl (@all _90715)). Qed.
Lemma lem3496694 {_90715 _90724 : Type'} (x : _90715) (f : _90715 -> _90724) (t : _90715 -> Prop) : (term695 _90715 _90724 x f t) = (term628 _90715 _90724 x f t).
Proof. exact (MK_COMB (@lem3496693 _90715) (@lem3496692 _90715 _90724 x f t)). Qed.
Lemma lem3496695 {_90715 : Type'} (u : _90715 -> Prop) (x : _90715) : (term629 _90715 u x) = (term629 _90715 u x).
Proof. exact (eq_refl (term629 _90715 u x)). Qed.
Lemma lem3496696 {_90715 _90724 : Type'} (u : _90715 -> Prop) (x : _90715) (f : _90715 -> _90724) (t : _90715 -> Prop) : (term691 _90715 _90724 u x f t) = (term630 _90715 _90724 u x f t).
Proof. exact (MK_COMB (@lem3496695 _90715 u x) (@lem3496694 _90715 _90724 x f t)). Qed.
Lemma lem3496697 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem3496698 {_90715 _90724 : Type'} (u : _90715 -> Prop) (x : _90715) (f : _90715 -> _90724) (t : _90715 -> Prop) : (term696 _90715 _90724 u x f t) = (term697 _90715 _90724 u x f t).
Proof. exact (MK_COMB (@lem3496697) (@lem3496696 _90715 _90724 u x f t)). Qed.
Lemma lem3496699 {_90715 _90724 : Type'} (x : _90715) (f : _90715 -> _90724) (t : _90715 -> Prop) (x' : _90715) : (term693 _90715 _90724 x f t x') = (term626 _90715 _90724 x f t x').
Proof. exact (eq_refl (term693 _90715 _90724 x f t x')). Qed.
Lemma lem3496700 {_90715 : Type'} (u : _90715 -> Prop) (x : _90715) : (term629 _90715 u x) = (term629 _90715 u x).
Proof. exact (eq_refl (term629 _90715 u x)). Qed.
Lemma lem3496701 {_90715 _90724 : Type'} (u : _90715 -> Prop) (x : _90715) (f : _90715 -> _90724) (t : _90715 -> Prop) (x' : _90715) : (term698 _90715 _90724 u x f t x') = (term699 _90715 _90724 u x f t x').
Proof. exact (MK_COMB (@lem3496700 _90715 u x) (@lem3496699 _90715 _90724 x f t x')). Qed.
Lemma lem3496702 {_90715 _90724 : Type'} (u : _90715 -> Prop) (x : _90715) (f : _90715 -> _90724) (t : _90715 -> Prop) : (term700 _90715 _90724 u x f t) = (term701 _90715 _90724 u x f t).
Proof. exact (fun_ext (fun x' : _90715 => @lem3496701 _90715 _90724 u x f t x')). Qed.
Lemma lem3496703 {_90715 : Type'} : (@all _90715) = (@all _90715).
Proof. exact (eq_refl (@all _90715)). Qed.
Lemma lem3496704 {_90715 _90724 : Type'} (u : _90715 -> Prop) (x : _90715) (f : _90715 -> _90724) (t : _90715 -> Prop) : (term692 _90715 _90724 u x f t) = (term702 _90715 _90724 u x f t).
Proof. exact (MK_COMB (@lem3496703 _90715) (@lem3496702 _90715 _90724 u x f t)). Qed.
Lemma lem3496705 {_90715 _90724 : Type'} (u : _90715 -> Prop) (x : _90715) (f : _90715 -> _90724) (t : _90715 -> Prop) : ((term691 _90715 _90724 u x f t) = (term692 _90715 _90724 u x f t)) = ((term630 _90715 _90724 u x f t) = (term702 _90715 _90724 u x f t)).
Proof. exact (MK_COMB (@lem3496698 _90715 _90724 u x f t) (@lem3496704 _90715 _90724 u x f t)). Qed.
Lemma lem3496706 {_90715 _90724 : Type'} (u : _90715 -> Prop) (x : _90715) (f : _90715 -> _90724) (t : _90715 -> Prop) : (term630 _90715 _90724 u x f t) = (term702 _90715 _90724 u x f t).
Proof. exact (EQ_MP (@lem3496705 _90715 _90724 u x f t) (@lem3496690 _90715 _90724 u x f t)). Qed.
Lemma lem3496707 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem3496708 {_90715 _90724 : Type'} (u : _90715 -> Prop) (x : _90715) (f : _90715 -> _90724) (t : _90715 -> Prop) : (term631 _90715 _90724 u x f t) = (term703 _90715 _90724 u x f t).
Proof. exact (MK_COMB (@lem3496707) (@lem3496706 _90715 _90724 u x f t)). Qed.
Lemma lem3496709 {_90715 : Type'} (t : _90715 -> Prop) (x : _90715) : (@I (_90715 -> Prop) t x) = (@I (_90715 -> Prop) t x).
Proof. exact (eq_refl (@I (_90715 -> Prop) t x)). Qed.
Lemma lem3496710 {_90715 _90724 : Type'} (u : _90715 -> Prop) (f : _90715 -> _90724) (t : _90715 -> Prop) (x : _90715) : (term632 _90715 _90724 u f t x) = (term704 _90715 _90724 u f t x).
Proof. exact (MK_COMB (@lem3496708 _90715 _90724 u x f t) (@lem3496709 _90715 t x)). Qed.
Lemma lem3496712 {A : Type'} (P : A -> Prop) (Q : Prop) : (term705 A P Q) = (term706 A P Q).
Proof. exact (EQ_MP (@lem19013 A P Q) (@lem19012 A P Q)). Qed.
Lemma lem3496713 {_90715 : Type'} (P : _90715 -> Prop) (Q : Prop) : (term705 _90715 P Q) = (term706 _90715 P Q).
Proof. exact (@lem3496712 _90715 P Q). Qed.
Lemma lem3496714 {_90715 _90724 : Type'} (u : _90715 -> Prop) (f : _90715 -> _90724) (t : _90715 -> Prop) (x : _90715) : (term707 _90715 _90724 u f t x) = (term708 _90715 _90724 u f t x).
Proof. exact (@lem3496713 _90715 (term701 _90715 _90724 u x f t) (@I (_90715 -> Prop) t x)). Qed.
Lemma lem3496715 {_90715 _90724 : Type'} (u : _90715 -> Prop) (x : _90715) (f : _90715 -> _90724) (t : _90715 -> Prop) (x' : _90715) : (term709 _90715 _90724 u x f t x') = (term699 _90715 _90724 u x f t x').
Proof. exact (eq_refl (term709 _90715 _90724 u x f t x')). Qed.
Lemma lem3496716 {_90715 _90724 : Type'} (u : _90715 -> Prop) (x : _90715) (f : _90715 -> _90724) (t : _90715 -> Prop) : (term710 _90715 _90724 u x f t) = (term701 _90715 _90724 u x f t).
Proof. exact (fun_ext (fun x' : _90715 => @lem3496715 _90715 _90724 u x f t x')). Qed.
Lemma lem3496717 {_90715 : Type'} : (@all _90715) = (@all _90715).
Proof. exact (eq_refl (@all _90715)). Qed.
Lemma lem3496718 {_90715 _90724 : Type'} (u : _90715 -> Prop) (x : _90715) (f : _90715 -> _90724) (t : _90715 -> Prop) : (term711 _90715 _90724 u x f t) = (term702 _90715 _90724 u x f t).
Proof. exact (MK_COMB (@lem3496717 _90715) (@lem3496716 _90715 _90724 u x f t)). Qed.
Lemma lem3496719 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem3496720 {_90715 _90724 : Type'} (u : _90715 -> Prop) (x : _90715) (f : _90715 -> _90724) (t : _90715 -> Prop) : (term712 _90715 _90724 u x f t) = (term703 _90715 _90724 u x f t).
Proof. exact (MK_COMB (@lem3496719) (@lem3496718 _90715 _90724 u x f t)). Qed.
Lemma lem3496721 {_90715 : Type'} (t : _90715 -> Prop) (x : _90715) : (@I (_90715 -> Prop) t x) = (@I (_90715 -> Prop) t x).
Proof. exact (eq_refl (@I (_90715 -> Prop) t x)). Qed.
Lemma lem3496722 {_90715 _90724 : Type'} (u : _90715 -> Prop) (f : _90715 -> _90724) (t : _90715 -> Prop) (x : _90715) : (term707 _90715 _90724 u f t x) = (term704 _90715 _90724 u f t x).
Proof. exact (MK_COMB (@lem3496720 _90715 _90724 u x f t) (@lem3496721 _90715 t x)). Qed.
Lemma lem3496723 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem3496724 {_90715 _90724 : Type'} (u : _90715 -> Prop) (f : _90715 -> _90724) (t : _90715 -> Prop) (x : _90715) : (term713 _90715 _90724 u f t x) = (term714 _90715 _90724 u f t x).
Proof. exact (MK_COMB (@lem3496723) (@lem3496722 _90715 _90724 u f t x)). Qed.
Lemma lem3496725 {_90715 _90724 : Type'} (u : _90715 -> Prop) (x : _90715) (f : _90715 -> _90724) (t : _90715 -> Prop) (x' : _90715) : (term709 _90715 _90724 u x f t x') = (term699 _90715 _90724 u x f t x').
Proof. exact (eq_refl (term709 _90715 _90724 u x f t x')). Qed.
Lemma lem3496726 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem3496727 {_90715 _90724 : Type'} (u : _90715 -> Prop) (x : _90715) (f : _90715 -> _90724) (t : _90715 -> Prop) (x' : _90715) : (term715 _90715 _90724 u x f t x') = (term716 _90715 _90724 u x f t x').
Proof. exact (MK_COMB (@lem3496726) (@lem3496725 _90715 _90724 u x f t x')). Qed.
Lemma lem3496728 {_90715 : Type'} (t : _90715 -> Prop) (x : _90715) : (@I (_90715 -> Prop) t x) = (@I (_90715 -> Prop) t x).
Proof. exact (eq_refl (@I (_90715 -> Prop) t x)). Qed.
Lemma lem3496729 {_90715 _90724 : Type'} (u : _90715 -> Prop) (f : _90715 -> _90724) (x' : _90715) (t : _90715 -> Prop) (x : _90715) : (term717 _90715 _90724 u f x' t x) = (term718 _90715 _90724 u f x' t x).
Proof. exact (MK_COMB (@lem3496727 _90715 _90724 u x f t x') (@lem3496728 _90715 t x)). Qed.
Lemma lem3496730 {_90715 _90724 : Type'} (u : _90715 -> Prop) (f : _90715 -> _90724) (t : _90715 -> Prop) (x : _90715) : (term719 _90715 _90724 u f t x) = (term720 _90715 _90724 u f t x).
Proof. exact (fun_ext (fun x' : _90715 => @lem3496729 _90715 _90724 u f x' t x)). Qed.
Lemma lem3496731 {_90715 : Type'} : (@all _90715) = (@all _90715).
Proof. exact (eq_refl (@all _90715)). Qed.
Lemma lem3496732 {_90715 _90724 : Type'} (u : _90715 -> Prop) (f : _90715 -> _90724) (t : _90715 -> Prop) (x : _90715) : (term708 _90715 _90724 u f t x) = (term721 _90715 _90724 u f t x).
Proof. exact (MK_COMB (@lem3496731 _90715) (@lem3496730 _90715 _90724 u f t x)). Qed.
Lemma lem3496733 {_90715 _90724 : Type'} (u : _90715 -> Prop) (f : _90715 -> _90724) (t : _90715 -> Prop) (x : _90715) : ((term707 _90715 _90724 u f t x) = (term708 _90715 _90724 u f t x)) = ((term704 _90715 _90724 u f t x) = (term721 _90715 _90724 u f t x)).
Proof. exact (MK_COMB (@lem3496724 _90715 _90724 u f t x) (@lem3496732 _90715 _90724 u f t x)). Qed.
Lemma lem3496734 {_90715 _90724 : Type'} (u : _90715 -> Prop) (f : _90715 -> _90724) (t : _90715 -> Prop) (x : _90715) : (term704 _90715 _90724 u f t x) = (term721 _90715 _90724 u f t x).
Proof. exact (EQ_MP (@lem3496733 _90715 _90724 u f t x) (@lem3496714 _90715 _90724 u f t x)). Qed.
Lemma lem3496735 {_90715 _90724 : Type'} (u : _90715 -> Prop) (f : _90715 -> _90724) (t : _90715 -> Prop) (x : _90715) : (term632 _90715 _90724 u f t x) = (term721 _90715 _90724 u f t x).
Proof. exact (TRANS (@lem3496710 _90715 _90724 u f t x) (@lem3496734 _90715 _90724 u f t x)). Qed.
Lemma lem3496736 {_90715 _90724 : Type'} (u : _90715 -> Prop) (f : _90715 -> _90724) (t : _90715 -> Prop) : (term633 _90715 _90724 u f t) = (term722 _90715 _90724 u f t).
Proof. exact (fun_ext (fun x : _90715 => @lem3496735 _90715 _90724 u f t x)). Qed.
Lemma lem3496737 {_90715 : Type'} : (@all _90715) = (@all _90715).
Proof. exact (eq_refl (@all _90715)). Qed.
Lemma lem3496738 {_90715 _90724 : Type'} (u : _90715 -> Prop) (f : _90715 -> _90724) (t : _90715 -> Prop) : (term634 _90715 _90724 u f t) = (term723 _90715 _90724 u f t).
Proof. exact (MK_COMB (@lem3496737 _90715) (@lem3496736 _90715 _90724 u f t)). Qed.
Lemma lem3496739 {_90715 : Type'} (t : _90715 -> Prop) (u : _90715 -> Prop) : (term638 _90715 t u) = (term638 _90715 t u).
Proof. exact (eq_refl (term638 _90715 t u)). Qed.
Lemma lem3496740 {_90715 _90724 : Type'} (u : _90715 -> Prop) (f : _90715 -> _90724) (t : _90715 -> Prop) : (term639 _90715 _90724 u f t) = (term724 _90715 _90724 u f t).
Proof. exact (MK_COMB (@lem3496739 _90715 t u) (@lem3496738 _90715 _90724 u f t)). Qed.
Lemma lem3496742 {A : Type'} (P : A -> Prop) (Q : A -> Prop) : (term725 A P Q) = (term726 A P Q).
Proof. exact (EQ_MP (@lem19031 A P Q) (@lem19030 A P Q)). Qed.
Lemma lem3496743 {_90715 : Type'} (P : _90715 -> Prop) (Q : _90715 -> Prop) : (term725 _90715 P Q) = (term726 _90715 P Q).
Proof. exact (@lem3496742 _90715 P Q). Qed.
Lemma lem3496744 {_90715 _90724 : Type'} (u : _90715 -> Prop) (f : _90715 -> _90724) (t : _90715 -> Prop) : (term727 _90715 _90724 u f t) = (term728 _90715 _90724 u f t).
Proof. exact (@lem3496743 _90715 (term636 _90715 t u) (term722 _90715 _90724 u f t)). Qed.
Lemma lem3496745 {_90715 : Type'} (t : _90715 -> Prop) (u : _90715 -> Prop) (x : _90715) : (term729 _90715 t u x) = (term635 _90715 t u x).
Proof. exact (eq_refl (term729 _90715 t u x)). Qed.
Lemma lem3496746 {_90715 : Type'} (t : _90715 -> Prop) (u : _90715 -> Prop) : (term730 _90715 t u) = (term636 _90715 t u).
Proof. exact (fun_ext (fun x : _90715 => @lem3496745 _90715 t u x)). Qed.
Lemma lem3496747 {_90715 : Type'} : (@all _90715) = (@all _90715).
Proof. exact (eq_refl (@all _90715)). Qed.
Lemma lem3496748 {_90715 : Type'} (t : _90715 -> Prop) (u : _90715 -> Prop) : (term731 _90715 t u) = (term637 _90715 t u).
Proof. exact (MK_COMB (@lem3496747 _90715) (@lem3496746 _90715 t u)). Qed.
Lemma lem3496749 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem3496750 {_90715 : Type'} (t : _90715 -> Prop) (u : _90715 -> Prop) : (term732 _90715 t u) = (term638 _90715 t u).
Proof. exact (MK_COMB (@lem3496749) (@lem3496748 _90715 t u)). Qed.
Lemma lem3496751 {_90715 _90724 : Type'} (u : _90715 -> Prop) (f : _90715 -> _90724) (t : _90715 -> Prop) (x : _90715) : (term733 _90715 _90724 u f t x) = (term721 _90715 _90724 u f t x).
Proof. exact (eq_refl (term733 _90715 _90724 u f t x)). Qed.
Lemma lem3496752 {_90715 _90724 : Type'} (u : _90715 -> Prop) (f : _90715 -> _90724) (t : _90715 -> Prop) : (term734 _90715 _90724 u f t) = (term722 _90715 _90724 u f t).
Proof. exact (fun_ext (fun x : _90715 => @lem3496751 _90715 _90724 u f t x)). Qed.
Lemma lem3496753 {_90715 : Type'} : (@all _90715) = (@all _90715).
Proof. exact (eq_refl (@all _90715)). Qed.
Lemma lem3496754 {_90715 _90724 : Type'} (u : _90715 -> Prop) (f : _90715 -> _90724) (t : _90715 -> Prop) : (term735 _90715 _90724 u f t) = (term723 _90715 _90724 u f t).
Proof. exact (MK_COMB (@lem3496753 _90715) (@lem3496752 _90715 _90724 u f t)). Qed.
Lemma lem3496755 {_90715 _90724 : Type'} (u : _90715 -> Prop) (f : _90715 -> _90724) (t : _90715 -> Prop) : (term727 _90715 _90724 u f t) = (term724 _90715 _90724 u f t).
Proof. exact (MK_COMB (@lem3496750 _90715 t u) (@lem3496754 _90715 _90724 u f t)). Qed.
Lemma lem3496756 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem3496757 {_90715 _90724 : Type'} (u : _90715 -> Prop) (f : _90715 -> _90724) (t : _90715 -> Prop) : (term736 _90715 _90724 u f t) = (term737 _90715 _90724 u f t).
Proof. exact (MK_COMB (@lem3496756) (@lem3496755 _90715 _90724 u f t)). Qed.
Lemma lem3496758 {_90715 : Type'} (t : _90715 -> Prop) (u : _90715 -> Prop) (x : _90715) : (term729 _90715 t u x) = (term635 _90715 t u x).
Proof. exact (eq_refl (term729 _90715 t u x)). Qed.
Lemma lem3496759 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem3496760 {_90715 : Type'} (t : _90715 -> Prop) (u : _90715 -> Prop) (x : _90715) : (term738 _90715 t u x) = (term739 _90715 t u x).
Proof. exact (MK_COMB (@lem3496759) (@lem3496758 _90715 t u x)). Qed.
Lemma lem3496761 {_90715 _90724 : Type'} (u : _90715 -> Prop) (f : _90715 -> _90724) (t : _90715 -> Prop) (x : _90715) : (term733 _90715 _90724 u f t x) = (term721 _90715 _90724 u f t x).
Proof. exact (eq_refl (term733 _90715 _90724 u f t x)). Qed.
Lemma lem3496762 {_90715 _90724 : Type'} (u : _90715 -> Prop) (f : _90715 -> _90724) (t : _90715 -> Prop) (x : _90715) : (term740 _90715 _90724 u f t x) = (term741 _90715 _90724 u f t x).
Proof. exact (MK_COMB (@lem3496760 _90715 t u x) (@lem3496761 _90715 _90724 u f t x)). Qed.
Lemma lem3496763 {_90715 _90724 : Type'} (u : _90715 -> Prop) (f : _90715 -> _90724) (t : _90715 -> Prop) : (term742 _90715 _90724 u f t) = (term743 _90715 _90724 u f t).
Proof. exact (fun_ext (fun x : _90715 => @lem3496762 _90715 _90724 u f t x)). Qed.
Lemma lem3496764 {_90715 : Type'} : (@all _90715) = (@all _90715).
Proof. exact (eq_refl (@all _90715)). Qed.
Lemma lem3496765 {_90715 _90724 : Type'} (u : _90715 -> Prop) (f : _90715 -> _90724) (t : _90715 -> Prop) : (term728 _90715 _90724 u f t) = (term744 _90715 _90724 u f t).
Proof. exact (MK_COMB (@lem3496764 _90715) (@lem3496763 _90715 _90724 u f t)). Qed.
Lemma lem3496766 {_90715 _90724 : Type'} (u : _90715 -> Prop) (f : _90715 -> _90724) (t : _90715 -> Prop) : ((term727 _90715 _90724 u f t) = (term728 _90715 _90724 u f t)) = ((term724 _90715 _90724 u f t) = (term744 _90715 _90724 u f t)).
Proof. exact (MK_COMB (@lem3496757 _90715 _90724 u f t) (@lem3496765 _90715 _90724 u f t)). Qed.
Lemma lem3496767 {_90715 _90724 : Type'} (u : _90715 -> Prop) (f : _90715 -> _90724) (t : _90715 -> Prop) : (term724 _90715 _90724 u f t) = (term744 _90715 _90724 u f t).
Proof. exact (EQ_MP (@lem3496766 _90715 _90724 u f t) (@lem3496744 _90715 _90724 u f t)). Qed.
Lemma lem3496769 {A : Type'} (P : Prop) (Q : A -> Prop) : (term745 A P Q) = (term746 A P Q).
Proof. exact (EQ_MP (@lem19019 A P Q) (@lem19018 A P Q)). Qed.
Lemma lem3496770 {_90715 : Type'} (P : Prop) (Q : _90715 -> Prop) : (term745 _90715 P Q) = (term746 _90715 P Q).
Proof. exact (@lem3496769 _90715 P Q). Qed.
Lemma lem3496771 {_90715 _90724 : Type'} (u : _90715 -> Prop) (f : _90715 -> _90724) (t : _90715 -> Prop) (x : _90715) : (term747 _90715 _90724 u f t x) = (term748 _90715 _90724 u f t x).
Proof. exact (@lem3496770 _90715 (term635 _90715 t u x) (term720 _90715 _90724 u f t x)). Qed.
Lemma lem3496772 {_90715 _90724 : Type'} (u : _90715 -> Prop) (f : _90715 -> _90724) (x' : _90715) (t : _90715 -> Prop) (x : _90715) : (term749 _90715 _90724 u f t x x') = (term718 _90715 _90724 u f x' t x).
Proof. exact (eq_refl (term749 _90715 _90724 u f t x x')). Qed.
Lemma lem3496773 {_90715 _90724 : Type'} (u : _90715 -> Prop) (f : _90715 -> _90724) (t : _90715 -> Prop) (x : _90715) : (term750 _90715 _90724 u f t x) = (term720 _90715 _90724 u f t x).
Proof. exact (fun_ext (fun x' : _90715 => @lem3496772 _90715 _90724 u f x' t x)). Qed.
Lemma lem3496774 {_90715 : Type'} : (@all _90715) = (@all _90715).
Proof. exact (eq_refl (@all _90715)). Qed.
Lemma lem3496775 {_90715 _90724 : Type'} (u : _90715 -> Prop) (f : _90715 -> _90724) (t : _90715 -> Prop) (x : _90715) : (term751 _90715 _90724 u f t x) = (term721 _90715 _90724 u f t x).
Proof. exact (MK_COMB (@lem3496774 _90715) (@lem3496773 _90715 _90724 u f t x)). Qed.
Lemma lem3496776 {_90715 : Type'} (t : _90715 -> Prop) (u : _90715 -> Prop) (x : _90715) : (term739 _90715 t u x) = (term739 _90715 t u x).
Proof. exact (eq_refl (term739 _90715 t u x)). Qed.
Lemma lem3496777 {_90715 _90724 : Type'} (u : _90715 -> Prop) (f : _90715 -> _90724) (t : _90715 -> Prop) (x : _90715) : (term747 _90715 _90724 u f t x) = (term741 _90715 _90724 u f t x).
Proof. exact (MK_COMB (@lem3496776 _90715 t u x) (@lem3496775 _90715 _90724 u f t x)). Qed.
Lemma lem3496778 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem3496779 {_90715 _90724 : Type'} (u : _90715 -> Prop) (f : _90715 -> _90724) (t : _90715 -> Prop) (x : _90715) : (term752 _90715 _90724 u f t x) = (term753 _90715 _90724 u f t x).
Proof. exact (MK_COMB (@lem3496778) (@lem3496777 _90715 _90724 u f t x)). Qed.
Lemma lem3496780 {_90715 _90724 : Type'} (u : _90715 -> Prop) (f : _90715 -> _90724) (x' : _90715) (t : _90715 -> Prop) (x : _90715) : (term749 _90715 _90724 u f t x x') = (term718 _90715 _90724 u f x' t x).
Proof. exact (eq_refl (term749 _90715 _90724 u f t x x')). Qed.
Lemma lem3496781 {_90715 : Type'} (t : _90715 -> Prop) (u : _90715 -> Prop) (x : _90715) : (term739 _90715 t u x) = (term739 _90715 t u x).
Proof. exact (eq_refl (term739 _90715 t u x)). Qed.
Lemma lem3496782 {_90715 _90724 : Type'} (u : _90715 -> Prop) (f : _90715 -> _90724) (x' : _90715) (t : _90715 -> Prop) (x : _90715) : (term754 _90715 _90724 u f t x x') = (term755 _90715 _90724 u f x' t x).
Proof. exact (MK_COMB (@lem3496781 _90715 t u x) (@lem3496780 _90715 _90724 u f x' t x)). Qed.
Lemma lem3496783 {_90715 _90724 : Type'} (u : _90715 -> Prop) (f : _90715 -> _90724) (t : _90715 -> Prop) (x : _90715) : (term756 _90715 _90724 u f t x) = (term757 _90715 _90724 u f t x).
Proof. exact (fun_ext (fun x' : _90715 => @lem3496782 _90715 _90724 u f x' t x)). Qed.
Lemma lem3496784 {_90715 : Type'} : (@all _90715) = (@all _90715).
Proof. exact (eq_refl (@all _90715)). Qed.
Lemma lem3496785 {_90715 _90724 : Type'} (u : _90715 -> Prop) (f : _90715 -> _90724) (t : _90715 -> Prop) (x : _90715) : (term748 _90715 _90724 u f t x) = (term758 _90715 _90724 u f t x).
Proof. exact (MK_COMB (@lem3496784 _90715) (@lem3496783 _90715 _90724 u f t x)). Qed.
Lemma lem3496786 {_90715 _90724 : Type'} (u : _90715 -> Prop) (f : _90715 -> _90724) (t : _90715 -> Prop) (x : _90715) : ((term747 _90715 _90724 u f t x) = (term748 _90715 _90724 u f t x)) = ((term741 _90715 _90724 u f t x) = (term758 _90715 _90724 u f t x)).
Proof. exact (MK_COMB (@lem3496779 _90715 _90724 u f t x) (@lem3496785 _90715 _90724 u f t x)). Qed.
Lemma lem3496787 {_90715 _90724 : Type'} (u : _90715 -> Prop) (f : _90715 -> _90724) (t : _90715 -> Prop) (x : _90715) : (term741 _90715 _90724 u f t x) = (term758 _90715 _90724 u f t x).
Proof. exact (EQ_MP (@lem3496786 _90715 _90724 u f t x) (@lem3496771 _90715 _90724 u f t x)). Qed.
Lemma lem3496788 {_90715 _90724 : Type'} (u : _90715 -> Prop) (f : _90715 -> _90724) (t : _90715 -> Prop) : (term743 _90715 _90724 u f t) = (term759 _90715 _90724 u f t).
Proof. exact (fun_ext (fun x : _90715 => @lem3496787 _90715 _90724 u f t x)). Qed.
Lemma lem3496789 {_90715 : Type'} : (@all _90715) = (@all _90715).
Proof. exact (eq_refl (@all _90715)). Qed.
Lemma lem3496790 {_90715 _90724 : Type'} (u : _90715 -> Prop) (f : _90715 -> _90724) (t : _90715 -> Prop) : (term744 _90715 _90724 u f t) = (term760 _90715 _90724 u f t).
Proof. exact (MK_COMB (@lem3496789 _90715) (@lem3496788 _90715 _90724 u f t)). Qed.
Lemma lem3496791 {_90715 _90724 : Type'} (u : _90715 -> Prop) (f : _90715 -> _90724) (t : _90715 -> Prop) : (term724 _90715 _90724 u f t) = (term760 _90715 _90724 u f t).
Proof. exact (TRANS (@lem3496767 _90715 _90724 u f t) (@lem3496790 _90715 _90724 u f t)). Qed.
Lemma lem3496792 {_90715 _90724 : Type'} (u : _90715 -> Prop) (f : _90715 -> _90724) (t : _90715 -> Prop) : (term639 _90715 _90724 u f t) = (term760 _90715 _90724 u f t).
Proof. exact (TRANS (@lem3496740 _90715 _90724 u f t) (@lem3496791 _90715 _90724 u f t)). Qed.
Lemma lem3496793 {_90715 : Type'} (g : type686 _90715) (t : _90715 -> Prop) : (term641 _90715 g t) = (term641 _90715 g t).
Proof. exact (eq_refl (term641 _90715 g t)). Qed.
Lemma lem3496794 {_90715 _90724 : Type'} (g : type686 _90715) (u : _90715 -> Prop) (f : _90715 -> _90724) (t : _90715 -> Prop) : (term642 _90715 _90724 g u f t) = (term761 _90715 _90724 g u f t).
Proof. exact (MK_COMB (@lem3496793 _90715 g t) (@lem3496792 _90715 _90724 u f t)). Qed.
Lemma lem3496796 {A : Type'} (P : Prop) (Q : A -> Prop) : (term689 A P Q) = (term690 A P Q).
Proof. exact (EQ_MP (@lem19007 A P Q) (@lem19006 A P Q)). Qed.
Lemma lem3496797 {_90715 : Type'} (P : Prop) (Q : _90715 -> Prop) : (term689 _90715 P Q) = (term690 _90715 P Q).
Proof. exact (@lem3496796 _90715 P Q). Qed.
Lemma lem3496798 {_90715 _90724 : Type'} (g : type686 _90715) (u : _90715 -> Prop) (f : _90715 -> _90724) (t : _90715 -> Prop) : (term762 _90715 _90724 g u f t) = (term763 _90715 _90724 g u f t).
Proof. exact (@lem3496797 _90715 (term640 _90715 g t) (term759 _90715 _90724 u f t)). Qed.
Lemma lem3496799 {_90715 _90724 : Type'} (u : _90715 -> Prop) (f : _90715 -> _90724) (t : _90715 -> Prop) (x : _90715) : (term764 _90715 _90724 u f t x) = (term758 _90715 _90724 u f t x).
Proof. exact (eq_refl (term764 _90715 _90724 u f t x)). Qed.
Lemma lem3496800 {_90715 _90724 : Type'} (u : _90715 -> Prop) (f : _90715 -> _90724) (t : _90715 -> Prop) : (term765 _90715 _90724 u f t) = (term759 _90715 _90724 u f t).
Proof. exact (fun_ext (fun x : _90715 => @lem3496799 _90715 _90724 u f t x)). Qed.
Lemma lem3496801 {_90715 : Type'} : (@all _90715) = (@all _90715).
Proof. exact (eq_refl (@all _90715)). Qed.
Lemma lem3496802 {_90715 _90724 : Type'} (u : _90715 -> Prop) (f : _90715 -> _90724) (t : _90715 -> Prop) : (term766 _90715 _90724 u f t) = (term760 _90715 _90724 u f t).
Proof. exact (MK_COMB (@lem3496801 _90715) (@lem3496800 _90715 _90724 u f t)). Qed.
Lemma lem3496803 {_90715 : Type'} (g : type686 _90715) (t : _90715 -> Prop) : (term641 _90715 g t) = (term641 _90715 g t).
Proof. exact (eq_refl (term641 _90715 g t)). Qed.
Lemma lem3496804 {_90715 _90724 : Type'} (g : type686 _90715) (u : _90715 -> Prop) (f : _90715 -> _90724) (t : _90715 -> Prop) : (term762 _90715 _90724 g u f t) = (term761 _90715 _90724 g u f t).
Proof. exact (MK_COMB (@lem3496803 _90715 g t) (@lem3496802 _90715 _90724 u f t)). Qed.
Lemma lem3496805 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem3496806 {_90715 _90724 : Type'} (g : type686 _90715) (u : _90715 -> Prop) (f : _90715 -> _90724) (t : _90715 -> Prop) : (term767 _90715 _90724 g u f t) = (term768 _90715 _90724 g u f t).
Proof. exact (MK_COMB (@lem3496805) (@lem3496804 _90715 _90724 g u f t)). Qed.
Lemma lem3496807 {_90715 _90724 : Type'} (u : _90715 -> Prop) (f : _90715 -> _90724) (t : _90715 -> Prop) (x : _90715) : (term764 _90715 _90724 u f t x) = (term758 _90715 _90724 u f t x).
Proof. exact (eq_refl (term764 _90715 _90724 u f t x)). Qed.
Lemma lem3496808 {_90715 : Type'} (g : type686 _90715) (t : _90715 -> Prop) : (term641 _90715 g t) = (term641 _90715 g t).
Proof. exact (eq_refl (term641 _90715 g t)). Qed.
Lemma lem3496809 {_90715 _90724 : Type'} (g : type686 _90715) (u : _90715 -> Prop) (f : _90715 -> _90724) (t : _90715 -> Prop) (x : _90715) : (term769 _90715 _90724 g u f t x) = (term770 _90715 _90724 g u f t x).
Proof. exact (MK_COMB (@lem3496808 _90715 g t) (@lem3496807 _90715 _90724 u f t x)). Qed.
Lemma lem3496810 {_90715 _90724 : Type'} (g : type686 _90715) (u : _90715 -> Prop) (f : _90715 -> _90724) (t : _90715 -> Prop) : (term771 _90715 _90724 g u f t) = (term772 _90715 _90724 g u f t).
Proof. exact (fun_ext (fun x : _90715 => @lem3496809 _90715 _90724 g u f t x)). Qed.
Lemma lem3496811 {_90715 : Type'} : (@all _90715) = (@all _90715).
Proof. exact (eq_refl (@all _90715)). Qed.
Lemma lem3496812 {_90715 _90724 : Type'} (g : type686 _90715) (u : _90715 -> Prop) (f : _90715 -> _90724) (t : _90715 -> Prop) : (term763 _90715 _90724 g u f t) = (term773 _90715 _90724 g u f t).
Proof. exact (MK_COMB (@lem3496811 _90715) (@lem3496810 _90715 _90724 g u f t)). Qed.
Lemma lem3496813 {_90715 _90724 : Type'} (g : type686 _90715) (u : _90715 -> Prop) (f : _90715 -> _90724) (t : _90715 -> Prop) : ((term762 _90715 _90724 g u f t) = (term763 _90715 _90724 g u f t)) = ((term761 _90715 _90724 g u f t) = (term773 _90715 _90724 g u f t)).
Proof. exact (MK_COMB (@lem3496806 _90715 _90724 g u f t) (@lem3496812 _90715 _90724 g u f t)). Qed.
Lemma lem3496814 {_90715 _90724 : Type'} (g : type686 _90715) (u : _90715 -> Prop) (f : _90715 -> _90724) (t : _90715 -> Prop) : (term761 _90715 _90724 g u f t) = (term773 _90715 _90724 g u f t).
Proof. exact (EQ_MP (@lem3496813 _90715 _90724 g u f t) (@lem3496798 _90715 _90724 g u f t)). Qed.
Lemma lem3496816 {A : Type'} (P : Prop) (Q : A -> Prop) : (term689 A P Q) = (term690 A P Q).
Proof. exact (EQ_MP (@lem19007 A P Q) (@lem19006 A P Q)). Qed.
Lemma lem3496817 {_90715 : Type'} (P : Prop) (Q : _90715 -> Prop) : (term689 _90715 P Q) = (term690 _90715 P Q).
Proof. exact (@lem3496816 _90715 P Q). Qed.
Lemma lem3496818 {_90715 _90724 : Type'} (g : type686 _90715) (u : _90715 -> Prop) (f : _90715 -> _90724) (t : _90715 -> Prop) (x : _90715) : (term774 _90715 _90724 g u f t x) = (term775 _90715 _90724 g u f t x).
Proof. exact (@lem3496817 _90715 (term640 _90715 g t) (term757 _90715 _90724 u f t x)). Qed.
Lemma lem3496819 {_90715 _90724 : Type'} (u : _90715 -> Prop) (f : _90715 -> _90724) (x' : _90715) (t : _90715 -> Prop) (x : _90715) : (term776 _90715 _90724 u f t x x') = (term755 _90715 _90724 u f x' t x).
Proof. exact (eq_refl (term776 _90715 _90724 u f t x x')). Qed.
Lemma lem3496820 {_90715 _90724 : Type'} (u : _90715 -> Prop) (f : _90715 -> _90724) (t : _90715 -> Prop) (x : _90715) : (term777 _90715 _90724 u f t x) = (term757 _90715 _90724 u f t x).
Proof. exact (fun_ext (fun x' : _90715 => @lem3496819 _90715 _90724 u f x' t x)). Qed.
Lemma lem3496821 {_90715 : Type'} : (@all _90715) = (@all _90715).
Proof. exact (eq_refl (@all _90715)). Qed.
Lemma lem3496822 {_90715 _90724 : Type'} (u : _90715 -> Prop) (f : _90715 -> _90724) (t : _90715 -> Prop) (x : _90715) : (term778 _90715 _90724 u f t x) = (term758 _90715 _90724 u f t x).
Proof. exact (MK_COMB (@lem3496821 _90715) (@lem3496820 _90715 _90724 u f t x)). Qed.
Lemma lem3496823 {_90715 : Type'} (g : type686 _90715) (t : _90715 -> Prop) : (term641 _90715 g t) = (term641 _90715 g t).
Proof. exact (eq_refl (term641 _90715 g t)). Qed.
Lemma lem3496824 {_90715 _90724 : Type'} (g : type686 _90715) (u : _90715 -> Prop) (f : _90715 -> _90724) (t : _90715 -> Prop) (x : _90715) : (term774 _90715 _90724 g u f t x) = (term770 _90715 _90724 g u f t x).
Proof. exact (MK_COMB (@lem3496823 _90715 g t) (@lem3496822 _90715 _90724 u f t x)). Qed.
Lemma lem3496825 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem3496826 {_90715 _90724 : Type'} (g : type686 _90715) (u : _90715 -> Prop) (f : _90715 -> _90724) (t : _90715 -> Prop) (x : _90715) : (term779 _90715 _90724 g u f t x) = (term780 _90715 _90724 g u f t x).
Proof. exact (MK_COMB (@lem3496825) (@lem3496824 _90715 _90724 g u f t x)). Qed.
Lemma lem3496827 {_90715 _90724 : Type'} (u : _90715 -> Prop) (f : _90715 -> _90724) (x' : _90715) (t : _90715 -> Prop) (x : _90715) : (term776 _90715 _90724 u f t x x') = (term755 _90715 _90724 u f x' t x).
Proof. exact (eq_refl (term776 _90715 _90724 u f t x x')). Qed.
Lemma lem3496828 {_90715 : Type'} (g : type686 _90715) (t : _90715 -> Prop) : (term641 _90715 g t) = (term641 _90715 g t).
Proof. exact (eq_refl (term641 _90715 g t)). Qed.
Lemma lem3496829 {_90715 _90724 : Type'} (g : type686 _90715) (u : _90715 -> Prop) (f : _90715 -> _90724) (x' : _90715) (t : _90715 -> Prop) (x : _90715) : (term781 _90715 _90724 g u f t x x') = (term782 _90715 _90724 g u f x' t x).
Proof. exact (MK_COMB (@lem3496828 _90715 g t) (@lem3496827 _90715 _90724 u f x' t x)). Qed.
Lemma lem3496830 {_90715 _90724 : Type'} (g : type686 _90715) (u : _90715 -> Prop) (f : _90715 -> _90724) (t : _90715 -> Prop) (x : _90715) : (term783 _90715 _90724 g u f t x) = (term784 _90715 _90724 g u f t x).
Proof. exact (fun_ext (fun x' : _90715 => @lem3496829 _90715 _90724 g u f x' t x)). Qed.
Lemma lem3496831 {_90715 : Type'} : (@all _90715) = (@all _90715).
Proof. exact (eq_refl (@all _90715)). Qed.
Lemma lem3496832 {_90715 _90724 : Type'} (g : type686 _90715) (u : _90715 -> Prop) (f : _90715 -> _90724) (t : _90715 -> Prop) (x : _90715) : (term775 _90715 _90724 g u f t x) = (term785 _90715 _90724 g u f t x).
Proof. exact (MK_COMB (@lem3496831 _90715) (@lem3496830 _90715 _90724 g u f t x)). Qed.
Lemma lem3496833 {_90715 _90724 : Type'} (g : type686 _90715) (u : _90715 -> Prop) (f : _90715 -> _90724) (t : _90715 -> Prop) (x : _90715) : ((term774 _90715 _90724 g u f t x) = (term775 _90715 _90724 g u f t x)) = ((term770 _90715 _90724 g u f t x) = (term785 _90715 _90724 g u f t x)).
Proof. exact (MK_COMB (@lem3496826 _90715 _90724 g u f t x) (@lem3496832 _90715 _90724 g u f t x)). Qed.
Lemma lem3496834 {_90715 _90724 : Type'} (g : type686 _90715) (u : _90715 -> Prop) (f : _90715 -> _90724) (t : _90715 -> Prop) (x : _90715) : (term770 _90715 _90724 g u f t x) = (term785 _90715 _90724 g u f t x).
Proof. exact (EQ_MP (@lem3496833 _90715 _90724 g u f t x) (@lem3496818 _90715 _90724 g u f t x)). Qed.
Lemma lem3496835 {_90715 _90724 : Type'} (g : type686 _90715) (u : _90715 -> Prop) (f : _90715 -> _90724) (t : _90715 -> Prop) : (term772 _90715 _90724 g u f t) = (term786 _90715 _90724 g u f t).
Proof. exact (fun_ext (fun x : _90715 => @lem3496834 _90715 _90724 g u f t x)). Qed.
Lemma lem3496836 {_90715 : Type'} : (@all _90715) = (@all _90715).
Proof. exact (eq_refl (@all _90715)). Qed.
Lemma lem3496837 {_90715 _90724 : Type'} (g : type686 _90715) (u : _90715 -> Prop) (f : _90715 -> _90724) (t : _90715 -> Prop) : (term773 _90715 _90724 g u f t) = (term787 _90715 _90724 g u f t).
Proof. exact (MK_COMB (@lem3496836 _90715) (@lem3496835 _90715 _90724 g u f t)). Qed.
Lemma lem3496838 {_90715 _90724 : Type'} (g : type686 _90715) (u : _90715 -> Prop) (f : _90715 -> _90724) (t : _90715 -> Prop) : (term761 _90715 _90724 g u f t) = (term787 _90715 _90724 g u f t).
Proof. exact (TRANS (@lem3496814 _90715 _90724 g u f t) (@lem3496837 _90715 _90724 g u f t)). Qed.
Lemma lem3496839 {_90715 _90724 : Type'} (g : type686 _90715) (u : _90715 -> Prop) (f : _90715 -> _90724) (t : _90715 -> Prop) : (term642 _90715 _90724 g u f t) = (term787 _90715 _90724 g u f t).
Proof. exact (TRANS (@lem3496794 _90715 _90724 g u f t) (@lem3496838 _90715 _90724 g u f t)). Qed.
Lemma lem3496840 {_90715 _90724 : Type'} (g : type686 _90715) (u : _90715 -> Prop) (f : _90715 -> _90724) : (term643 _90715 _90724 g u f) = (term788 _90715 _90724 g u f).
Proof. exact (fun_ext (fun t : _90715 -> Prop => @lem3496839 _90715 _90724 g u f t)). Qed.
Lemma lem3496841 {_90715 : Type'} : (@all (_90715 -> Prop)) = (@all (_90715 -> Prop)).
Proof. exact (eq_refl (@all (_90715 -> Prop))). Qed.
Lemma lem3496842 {_90715 _90724 : Type'} (g : type686 _90715) (u : _90715 -> Prop) (f : _90715 -> _90724) : (term644 _90715 _90724 g u f) = (term789 _90715 _90724 g u f).
Proof. exact (MK_COMB (@lem3496841 _90715) (@lem3496840 _90715 _90724 g u f)). Qed.
Lemma lem3496883 {_90715 _90724 : Type'} (g : type686 _90715) (u : _90715 -> Prop) (f : _90715 -> _90724) (x' : _90715) (t : _90715 -> Prop) (x : _90715) : (term782 _90715 _90724 g u f x' t x) = (term790 _90715 _90724 g u f x' t x).
Proof. exact (@lem19490 (term635 _90715 t u x) (term640 _90715 g t) (term718 _90715 _90724 u f x' t x)). Qed.
Lemma lem3496884 {_90715 _90724 : Type'} (g : type686 _90715) (u : _90715 -> Prop) (f : _90715 -> _90724) (t : _90715 -> Prop) (x : _90715) : (term784 _90715 _90724 g u f t x) = (term791 _90715 _90724 g u f t x).
Proof. exact (fun_ext (fun x' : _90715 => @lem3496883 _90715 _90724 g u f x' t x)). Qed.
Lemma lem3496885 {_90715 : Type'} : (@all _90715) = (@all _90715).
Proof. exact (eq_refl (@all _90715)). Qed.
Lemma lem3496886 {_90715 _90724 : Type'} (g : type686 _90715) (u : _90715 -> Prop) (f : _90715 -> _90724) (t : _90715 -> Prop) (x : _90715) : (term785 _90715 _90724 g u f t x) = (term792 _90715 _90724 g u f t x).
Proof. exact (MK_COMB (@lem3496885 _90715) (@lem3496884 _90715 _90724 g u f t x)). Qed.
Lemma lem3496887 {_90715 _90724 : Type'} (g : type686 _90715) (u : _90715 -> Prop) (f : _90715 -> _90724) (t : _90715 -> Prop) : (term786 _90715 _90724 g u f t) = (term793 _90715 _90724 g u f t).
Proof. exact (fun_ext (fun x : _90715 => @lem3496886 _90715 _90724 g u f t x)). Qed.
Lemma lem3496888 {_90715 : Type'} : (@all _90715) = (@all _90715).
Proof. exact (eq_refl (@all _90715)). Qed.
Lemma lem3496889 {_90715 _90724 : Type'} (g : type686 _90715) (u : _90715 -> Prop) (f : _90715 -> _90724) (t : _90715 -> Prop) : (term787 _90715 _90724 g u f t) = (term794 _90715 _90724 g u f t).
Proof. exact (MK_COMB (@lem3496888 _90715) (@lem3496887 _90715 _90724 g u f t)). Qed.
Lemma lem3496890 {_90715 _90724 : Type'} (g : type686 _90715) (u : _90715 -> Prop) (f : _90715 -> _90724) : (term788 _90715 _90724 g u f) = (term795 _90715 _90724 g u f).
Proof. exact (fun_ext (fun t : _90715 -> Prop => @lem3496889 _90715 _90724 g u f t)). Qed.
Lemma lem3496891 {_90715 : Type'} : (@all (_90715 -> Prop)) = (@all (_90715 -> Prop)).
Proof. exact (eq_refl (@all (_90715 -> Prop))). Qed.
Lemma lem3496892 {_90715 _90724 : Type'} (g : type686 _90715) (u : _90715 -> Prop) (f : _90715 -> _90724) : (term789 _90715 _90724 g u f) = (term796 _90715 _90724 g u f).
Proof. exact (MK_COMB (@lem3496891 _90715) (@lem3496890 _90715 _90724 g u f)). Qed.
Lemma lem3496893 {_90715 _90724 : Type'} (g : type686 _90715) (u : _90715 -> Prop) (f : _90715 -> _90724) : (term644 _90715 _90724 g u f) = (term796 _90715 _90724 g u f).
Proof. exact (TRANS (@lem3496842 _90715 _90724 g u f) (@lem3496892 _90715 _90724 g u f)). Qed.
Lemma lem3496894 {_90715 _90724 : Type'} (g : type686 _90715) (u : _90715 -> Prop) (f : _90715 -> _90724) (h1 : term252 _90715 _90724 g u f) : term796 _90715 _90724 g u f.
Proof. exact (EQ_MP (@lem3496893 _90715 _90724 g u f) (@lem3496223 _90715 _90724 g u f h1)). Qed.
Lemma lem3496916 {_90715 _90724 : Type'} (g : type686 _90715) (x : _90724) (f : _90715 -> _90724) (t : type1402 _90715) (x' : _90715) : (term670 _90715 _90724 x f g t x') = (term797 _90715 _90724 g x f t x').
Proof. exact (@lem19490 (term663 _90715 g t x') (term668 _90715 _90724 x f x') (term660 _90715 t x')). Qed.
Lemma lem3496917 {_90715 _90724 : Type'} (g : type686 _90715) (x : _90724) (f : _90715 -> _90724) (t : type1402 _90715) : (term671 _90715 _90724 x f g t) = (term798 _90715 _90724 g x f t).
Proof. exact (fun_ext (fun x' : _90715 => @lem3496916 _90715 _90724 g x f t x')). Qed.
Lemma lem3496918 {_90715 : Type'} : (@all _90715) = (@all _90715).
Proof. exact (eq_refl (@all _90715)). Qed.
Lemma lem3496920 {_90715 _90724 : Type'} (g : type686 _90715) (x : _90724) (f : _90715 -> _90724) (t : type1402 _90715) : (term672 _90715 _90724 x f g t) = (term799 _90715 _90724 g x f t).
Proof. exact (MK_COMB (@lem3496918 _90715) (@lem3496917 _90715 _90724 g x f t)). Qed.
Lemma lem3496921 {_90715 _90724 : Type'} (t : type1402 _90715) (g : type686 _90715) (x : _90724) (f : _90715 -> _90724) (x''' : type684 _90715) (h1 : term674 _90715 _90724 t g x f x''') : term799 _90715 _90724 g x f t.
Proof. exact (EQ_MP (@lem3496920 _90715 _90724 g x f t) (@lem3496440 _90715 _90724 t g x f x''' h1)). Qed.
Lemma lem3496939 {_90715 _90724 : Type'} (x : _90724) (f : _90715 -> _90724) (g : type686 _90715) (x''' : type684 _90715) (x' : _90715 -> Prop) : (term655 _90715 _90724 g x f x''' x') = (term800 _90715 _90724 x f g x''' x').
Proof. exact (@lem19490 (x = (term650 _90715 _90724 f x''' x')) (term640 _90715 g x') (term647 _90715 x''' x')). Qed.
Lemma lem3496940 {_90715 _90724 : Type'} (x : _90724) (f : _90715 -> _90724) (g : type686 _90715) (x''' : type684 _90715) : (term656 _90715 _90724 g x f x''') = (term801 _90715 _90724 x f g x''').
Proof. exact (fun_ext (fun x' : _90715 -> Prop => @lem3496939 _90715 _90724 x f g x''' x')). Qed.
Lemma lem3496941 {_90715 : Type'} : (@all (_90715 -> Prop)) = (@all (_90715 -> Prop)).
Proof. exact (eq_refl (@all (_90715 -> Prop))). Qed.
Lemma lem3496943 {_90715 _90724 : Type'} (x : _90724) (f : _90715 -> _90724) (g : type686 _90715) (x''' : type684 _90715) : (term657 _90715 _90724 g x f x''') = (term802 _90715 _90724 x f g x''').
Proof. exact (MK_COMB (@lem3496941 _90715) (@lem3496940 _90715 _90724 x f g x''')). Qed.
Lemma lem3496944 {_90715 _90724 : Type'} (t : type1402 _90715) (g : type686 _90715) (x : _90724) (f : _90715 -> _90724) (x''' : type684 _90715) (h1 : term674 _90715 _90724 t g x f x''') : term802 _90715 _90724 x f g x'''.
Proof. exact (EQ_MP (@lem3496943 _90715 _90724 x f g x''') (@lem3496439 _90715 _90724 t g x f x''' h1)). Qed.
Lemma lem3496954 {_90715 _90724 : Type'} (_36924 : _90715) (x' : _90715) (g : type686 _90715) (x : _90724) (f : _90715 -> _90724) (x'' : _90715 -> Prop) (h1 : term686 _90715 _90724 x' g x f x'') : term803 _90715 _90724 x f x'' _36924.
Proof. exact (@lem3496669 _90715 _90724 x' g x f x'' h1 _36924). Qed.
Lemma lem3496955 {_90715 _90724 : Type'} (x : _90724) (f : _90715 -> _90724) (x'' : _90715 -> Prop) (_36924 : _90715) : (term803 _90715 _90724 x f x'' _36924) = (term675 _90715 _90724 x f x'' _36924).
Proof. exact (eq_refl (term803 _90715 _90724 x f x'' _36924)). Qed.
Lemma lem3496957 {_90715 _90724 : Type'} (_36925 : _90715 -> Prop) (x' : _90715) (g : type686 _90715) (x : _90724) (f : _90715 -> _90724) (x'' : _90715 -> Prop) (h1 : term686 _90715 _90724 x' g x f x'') : term804 _90715 g x' _36925.
Proof. exact (@lem3496686 _90715 _90724 x' g x f x'' h1 _36925). Qed.
Lemma lem3496958 {_90715 : Type'} (g : type686 _90715) (_36925 : _90715 -> Prop) (x' : _90715) : (term804 _90715 g x' _36925) = (term680 _90715 g _36925 x').
Proof. exact (eq_refl (term804 _90715 g x' _36925)). Qed.
Lemma lem3496960 {_90715 _90724 : Type'} (_36926 : _90715 -> Prop) (g : type686 _90715) (u : _90715 -> Prop) (f : _90715 -> _90724) (h1 : term252 _90715 _90724 g u f) : term805 _90715 _90724 g u f _36926.
Proof. exact (@lem3496894 _90715 _90724 g u f h1 _36926). Qed.
Lemma lem3496961 {_90715 _90724 : Type'} (g : type686 _90715) (u : _90715 -> Prop) (f : _90715 -> _90724) (_36926 : _90715 -> Prop) : (term805 _90715 _90724 g u f _36926) = (term794 _90715 _90724 g u f _36926).
Proof. exact (eq_refl (term805 _90715 _90724 g u f _36926)). Qed.
Lemma lem3496962 {_90715 _90724 : Type'} (_36926 : _90715 -> Prop) (g : type686 _90715) (u : _90715 -> Prop) (f : _90715 -> _90724) (h1 : term252 _90715 _90724 g u f) : term794 _90715 _90724 g u f _36926.
Proof. exact (EQ_MP (@lem3496961 _90715 _90724 g u f _36926) (@lem3496960 _90715 _90724 _36926 g u f h1)). Qed.
Lemma lem3496963 {_90715 _90724 : Type'} (_36926 : _90715 -> Prop) (_36927 : _90715) (g : type686 _90715) (u : _90715 -> Prop) (f : _90715 -> _90724) (h1 : term252 _90715 _90724 g u f) : term806 _90715 _90724 g u f _36926 _36927.
Proof. exact (@lem3496962 _90715 _90724 _36926 g u f h1 _36927). Qed.
Lemma lem3496964 {_90715 _90724 : Type'} (g : type686 _90715) (u : _90715 -> Prop) (f : _90715 -> _90724) (_36926 : _90715 -> Prop) (_36927 : _90715) : (term806 _90715 _90724 g u f _36926 _36927) = (term792 _90715 _90724 g u f _36926 _36927).
Proof. exact (eq_refl (term806 _90715 _90724 g u f _36926 _36927)). Qed.
Lemma lem3496965 {_90715 _90724 : Type'} (_36926 : _90715 -> Prop) (_36927 : _90715) (g : type686 _90715) (u : _90715 -> Prop) (f : _90715 -> _90724) (h1 : term252 _90715 _90724 g u f) : term792 _90715 _90724 g u f _36926 _36927.
Proof. exact (EQ_MP (@lem3496964 _90715 _90724 g u f _36926 _36927) (@lem3496963 _90715 _90724 _36926 _36927 g u f h1)). Qed.
Lemma lem3496966 {_90715 _90724 : Type'} (_36926 : _90715 -> Prop) (_36927 : _90715) (_36928 : _90715) (g : type686 _90715) (u : _90715 -> Prop) (f : _90715 -> _90724) (h1 : term252 _90715 _90724 g u f) : term807 _90715 _90724 g u f _36926 _36927 _36928.
Proof. exact (@lem3496965 _90715 _90724 _36926 _36927 g u f h1 _36928). Qed.
Lemma lem3496967 {_90715 _90724 : Type'} (g : type686 _90715) (u : _90715 -> Prop) (f : _90715 -> _90724) (_36928 : _90715) (_36926 : _90715 -> Prop) (_36927 : _90715) : (term807 _90715 _90724 g u f _36926 _36927 _36928) = (term790 _90715 _90724 g u f _36928 _36926 _36927).
Proof. exact (eq_refl (term807 _90715 _90724 g u f _36926 _36927 _36928)). Qed.
Lemma lem3496968 {_90715 _90724 : Type'} (_36928 : _90715) (_36926 : _90715 -> Prop) (_36927 : _90715) (g : type686 _90715) (u : _90715 -> Prop) (f : _90715 -> _90724) (h1 : term252 _90715 _90724 g u f) : term790 _90715 _90724 g u f _36928 _36926 _36927.
Proof. exact (EQ_MP (@lem3496967 _90715 _90724 g u f _36928 _36926 _36927) (@lem3496966 _90715 _90724 _36926 _36927 _36928 g u f h1)). Qed.
Lemma lem3496969 {_90715 _90724 : Type'} (_36929 : _90715) (t : type1402 _90715) (g : type686 _90715) (x : _90724) (f : _90715 -> _90724) (x''' : type684 _90715) (h1 : term674 _90715 _90724 t g x f x''') : term808 _90715 _90724 g x f t _36929.
Proof. exact (@lem3496921 _90715 _90724 t g x f x''' h1 _36929). Qed.
Lemma lem3496970 {_90715 _90724 : Type'} (g : type686 _90715) (x : _90724) (f : _90715 -> _90724) (t : type1402 _90715) (_36929 : _90715) : (term808 _90715 _90724 g x f t _36929) = (term797 _90715 _90724 g x f t _36929).
Proof. exact (eq_refl (term808 _90715 _90724 g x f t _36929)). Qed.
Lemma lem3496971 {_90715 _90724 : Type'} (_36929 : _90715) (t : type1402 _90715) (g : type686 _90715) (x : _90724) (f : _90715 -> _90724) (x''' : type684 _90715) (h1 : term674 _90715 _90724 t g x f x''') : term797 _90715 _90724 g x f t _36929.
Proof. exact (EQ_MP (@lem3496970 _90715 _90724 g x f t _36929) (@lem3496969 _90715 _90724 _36929 t g x f x''' h1)). Qed.
Lemma lem3496972 {_90715 _90724 : Type'} (_36930 : _90715 -> Prop) (t : type1402 _90715) (g : type686 _90715) (x : _90724) (f : _90715 -> _90724) (x''' : type684 _90715) (h1 : term674 _90715 _90724 t g x f x''') : term809 _90715 _90724 x f g x''' _36930.
Proof. exact (@lem3496944 _90715 _90724 t g x f x''' h1 _36930). Qed.
Lemma lem3496973 {_90715 _90724 : Type'} (x : _90724) (f : _90715 -> _90724) (g : type686 _90715) (x''' : type684 _90715) (_36930 : _90715 -> Prop) : (term809 _90715 _90724 x f g x''' _36930) = (term800 _90715 _90724 x f g x''' _36930).
Proof. exact (eq_refl (term809 _90715 _90724 x f g x''' _36930)). Qed.
Lemma lem3496974 {_90715 _90724 : Type'} (_36930 : _90715 -> Prop) (t : type1402 _90715) (g : type686 _90715) (x : _90724) (f : _90715 -> _90724) (x''' : type684 _90715) (h1 : term674 _90715 _90724 t g x f x''') : term800 _90715 _90724 x f g x''' _36930.
Proof. exact (EQ_MP (@lem3496973 _90715 _90724 x f g x''' _36930) (@lem3496972 _90715 _90724 _36930 t g x f x''' h1)). Qed.
Lemma lem3496981 {_90715 _90724 : Type'} (_36928 : _90715) (_36926 : _90715 -> Prop) (_36927 : _90715) (g : type686 _90715) (u : _90715 -> Prop) (f : _90715 -> _90724) (h1 : term252 _90715 _90724 g u f) : term810 _90715 _90724 g u f _36928 _36926 _36927.
Proof. exact (proj2 (@lem3496968 _90715 _90724 _36928 _36926 _36927 g u f h1)). Qed.
Lemma lem3496992 {_90715 _90724 : Type'} (_36924 : _90715) (x' : _90715) (g : type686 _90715) (x : _90724) (f : _90715 -> _90724) (x'' : _90715 -> Prop) (h1 : term686 _90715 _90724 x' g x f x'') : term675 _90715 _90724 x f x'' _36924.
Proof. exact (EQ_MP (@lem3496955 _90715 _90724 x f x'' _36924) (@lem3496954 _90715 _90724 _36924 x' g x f x'' h1)). Qed.
Lemma lem3496994 {_90715 _90724 : Type'} (x' : _90715) (g : type686 _90715) (x : _90724) (f : _90715 -> _90724) (x'' : _90715 -> Prop) (h1 : term686 _90715 _90724 x' g x f x'') : x = (@I (_90715 -> _90724) f x').
Proof. exact (proj1 (@lem3496434 _90715 _90724 x' g x f x'' h1)). Qed.
Lemma lem3497040 {_90715 _90724 : Type'} (_36930 : _90715 -> Prop) (t : type1402 _90715) (g : type686 _90715) (x : _90724) (f : _90715 -> _90724) (x''' : type684 _90715) (h1 : term674 _90715 _90724 t g x f x''') : term811 _90715 _90724 g x f x''' _36930.
Proof. exact (proj1 (@lem3496974 _90715 _90724 _36930 t g x f x''' h1)). Qed.
Lemma lem3497046 {_90715 _90724 : Type'} (_36930 : _90715 -> Prop) (t : type1402 _90715) (g : type686 _90715) (x : _90724) (f : _90715 -> _90724) (x''' : type684 _90715) (h1 : term674 _90715 _90724 t g x f x''') : term812 _90715 g x''' _36930.
Proof. exact (proj2 (@lem3496974 _90715 _90724 _36930 t g x f x''' h1)). Qed.
Lemma lem3497052 {_90715 _90724 : Type'} (_36929 : _90715) (t : type1402 _90715) (g : type686 _90715) (x : _90724) (f : _90715 -> _90724) (x''' : type684 _90715) (h1 : term674 _90715 _90724 t g x f x''') : term813 _90715 _90724 x f g t _36929.
Proof. exact (proj1 (@lem3496971 _90715 _90724 _36929 t g x f x''' h1)). Qed.
Lemma lem3497058 {_90715 _90724 : Type'} (_36929 : _90715) (t : type1402 _90715) (g : type686 _90715) (x : _90724) (f : _90715 -> _90724) (x''' : type684 _90715) (h1 : term674 _90715 _90724 t g x f x''') : term814 _90715 _90724 x f t _36929.
Proof. exact (proj2 (@lem3496971 _90715 _90724 _36929 t g x f x''' h1)). Qed.
Lemma lem3497068 {_90715 _90724 : Type'} (_36926 : _90715 -> Prop) (_36927 : _90715) (g : type686 _90715) (u : _90715 -> Prop) (f : _90715 -> _90724) (h1 : term252 _90715 _90724 g u f) : term815 _90715 g _36926 u _36927.
Proof. exact (proj1 (@lem3496968 _90715 _90724 (@el _90715) _36926 _36927 g u f h1)). Qed.
Lemma lem3497072 {_90715 _90724 : Type'} (u : _90715 -> Prop) (f : _90715 -> _90724) (_36928 : _90715) (_36926 : _90715 -> Prop) (_36927 : _90715) : (term718 _90715 _90724 u f _36928 _36926 _36927) = (term816 _90715 _90724 u f _36928 _36926 _36927).
Proof. exact (@lem3493640 (term619 _90715 u _36927) (term626 _90715 _90724 _36927 f _36926 _36928) (@I (_90715 -> Prop) _36926 _36927)). Qed.
Lemma lem3497079 {_90715 _90724 : Type'} (f : _90715 -> _90724) (_36928 : _90715) (_36926 : _90715 -> Prop) (_36927 : _90715) : (term817 _90715 _90724 f _36928 _36926 _36927) = (term818 _90715 _90724 f _36928 _36926 _36927).
Proof. exact (@lem3493640 (term623 _90715 _90724 _36927 f _36928) (term619 _90715 _36926 _36928) (@I (_90715 -> Prop) _36926 _36927)). Qed.
Lemma lem3497080 {_90715 : Type'} (u : _90715 -> Prop) (_36927 : _90715) : (term629 _90715 u _36927) = (term629 _90715 u _36927).
Proof. exact (eq_refl (term629 _90715 u _36927)). Qed.
Lemma lem3497083 {_90715 _90724 : Type'} (u : _90715 -> Prop) (f : _90715 -> _90724) (_36928 : _90715) (_36926 : _90715 -> Prop) (_36927 : _90715) : (term816 _90715 _90724 u f _36928 _36926 _36927) = (term819 _90715 _90724 u f _36928 _36926 _36927).
Proof. exact (MK_COMB (@lem3497080 _90715 u _36927) (@lem3497079 _90715 _90724 f _36928 _36926 _36927)). Qed.
Lemma lem3497085 {_90715 _90724 : Type'} (u : _90715 -> Prop) (f : _90715 -> _90724) (_36928 : _90715) (_36926 : _90715 -> Prop) (_36927 : _90715) : (term718 _90715 _90724 u f _36928 _36926 _36927) = (term819 _90715 _90724 u f _36928 _36926 _36927).
Proof. exact (TRANS (@lem3497072 _90715 _90724 u f _36928 _36926 _36927) (@lem3497083 _90715 _90724 u f _36928 _36926 _36927)). Qed.
Lemma lem3497086 {_90715 : Type'} (g : type686 _90715) (_36926 : _90715 -> Prop) : (term641 _90715 g _36926) = (term641 _90715 g _36926).
Proof. exact (eq_refl (term641 _90715 g _36926)). Qed.
Lemma lem3497089 {_90715 _90724 : Type'} (g : type686 _90715) (u : _90715 -> Prop) (f : _90715 -> _90724) (_36928 : _90715) (_36926 : _90715 -> Prop) (_36927 : _90715) : (term810 _90715 _90724 g u f _36928 _36926 _36927) = (term820 _90715 _90724 g u f _36928 _36926 _36927).
Proof. exact (MK_COMB (@lem3497086 _90715 g _36926) (@lem3497085 _90715 _90724 u f _36928 _36926 _36927)). Qed.
Lemma lem3497090 {_90715 _90724 : Type'} (_36928 : _90715) (_36926 : _90715 -> Prop) (_36927 : _90715) (g : type686 _90715) (u : _90715 -> Prop) (f : _90715 -> _90724) (h1 : term252 _90715 _90724 g u f) : term820 _90715 _90724 g u f _36928 _36926 _36927.
Proof. exact (EQ_MP (@lem3497089 _90715 _90724 g u f _36928 _36926 _36927) (@lem3496981 _90715 _90724 _36928 _36926 _36927 g u f h1)). Qed.
Lemma lem3497133 {_90715 _90724 : Type'} (f : _90715 -> _90724) (x'' : _90715 -> Prop) (_36924 : _90715) : (term821 _90715 _90724 f x'' _36924) = (term821 _90715 _90724 f x'' _36924).
Proof. exact (eq_refl (term821 _90715 _90724 f x'' _36924)). Qed.
Lemma lem3497134 {_90715 _90724 : Type'} (_36924 : _90715) (x' : _90715) (g : type686 _90715) (x : _90724) (f : _90715 -> _90724) (x'' : _90715 -> Prop) (h1 : term686 _90715 _90724 x' g x f x'') : (term822 _90715 _90724 f x'' _36924 x) = (term823 _90715 _90724 x'' _36924 f x').
Proof. exact (MK_COMB (@lem3497133 _90715 _90724 f x'' _36924) (@lem3496994 _90715 _90724 x' g x f x'' h1)). Qed.
Lemma lem3497135 {_90715 _90724 : Type'} (x' : _90715) (f : _90715 -> _90724) (x'' : _90715 -> Prop) (_36924 : _90715) : (term823 _90715 _90724 x'' _36924 f x') = (term626 _90715 _90724 x' f x'' _36924).
Proof. exact (eq_refl (term823 _90715 _90724 x'' _36924 f x')). Qed.
Lemma lem3497136 {_90715 _90724 : Type'} (f : _90715 -> _90724) (x'' : _90715 -> Prop) (_36924 : _90715) (x : _90724) : (term824 _90715 _90724 f x'' _36924 x) = (term824 _90715 _90724 f x'' _36924 x).
Proof. exact (eq_refl (term824 _90715 _90724 f x'' _36924 x)). Qed.
Lemma lem3497137 {_90715 _90724 : Type'} (x : _90724) (x' : _90715) (f : _90715 -> _90724) (x'' : _90715 -> Prop) (_36924 : _90715) : ((term822 _90715 _90724 f x'' _36924 x) = (term823 _90715 _90724 x'' _36924 f x')) = ((term822 _90715 _90724 f x'' _36924 x) = (term626 _90715 _90724 x' f x'' _36924)).
Proof. exact (MK_COMB (@lem3497136 _90715 _90724 f x'' _36924 x) (@lem3497135 _90715 _90724 x' f x'' _36924)). Qed.
Lemma lem3497138 {_90715 _90724 : Type'} (x : _90724) (f : _90715 -> _90724) (x'' : _90715 -> Prop) (_36924 : _90715) : (term822 _90715 _90724 f x'' _36924 x) = (term675 _90715 _90724 x f x'' _36924).
Proof. exact (eq_refl (term822 _90715 _90724 f x'' _36924 x)). Qed.
Lemma lem3497139 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem3497140 {_90715 _90724 : Type'} (x : _90724) (f : _90715 -> _90724) (x'' : _90715 -> Prop) (_36924 : _90715) : (term824 _90715 _90724 f x'' _36924 x) = (term825 _90715 _90724 x f x'' _36924).
Proof. exact (MK_COMB (@lem3497139) (@lem3497138 _90715 _90724 x f x'' _36924)). Qed.
Lemma lem3497141 {_90715 _90724 : Type'} (x' : _90715) (f : _90715 -> _90724) (x'' : _90715 -> Prop) (_36924 : _90715) : (term626 _90715 _90724 x' f x'' _36924) = (term626 _90715 _90724 x' f x'' _36924).
Proof. exact (eq_refl (term626 _90715 _90724 x' f x'' _36924)). Qed.
Lemma lem3497142 {_90715 _90724 : Type'} (x : _90724) (x' : _90715) (f : _90715 -> _90724) (x'' : _90715 -> Prop) (_36924 : _90715) : ((term822 _90715 _90724 f x'' _36924 x) = (term626 _90715 _90724 x' f x'' _36924)) = ((term675 _90715 _90724 x f x'' _36924) = (term626 _90715 _90724 x' f x'' _36924)).
Proof. exact (MK_COMB (@lem3497140 _90715 _90724 x f x'' _36924) (@lem3497141 _90715 _90724 x' f x'' _36924)). Qed.
Lemma lem3497143 {_90715 _90724 : Type'} (x : _90724) (x' : _90715) (f : _90715 -> _90724) (x'' : _90715 -> Prop) (_36924 : _90715) : ((term822 _90715 _90724 f x'' _36924 x) = (term823 _90715 _90724 x'' _36924 f x')) = ((term675 _90715 _90724 x f x'' _36924) = (term626 _90715 _90724 x' f x'' _36924)).
Proof. exact (TRANS (@lem3497137 _90715 _90724 x x' f x'' _36924) (@lem3497142 _90715 _90724 x x' f x'' _36924)). Qed.
Lemma lem3497144 {_90715 _90724 : Type'} (_36924 : _90715) (x' : _90715) (g : type686 _90715) (x : _90724) (f : _90715 -> _90724) (x'' : _90715 -> Prop) (h1 : term686 _90715 _90724 x' g x f x'') : (term675 _90715 _90724 x f x'' _36924) = (term626 _90715 _90724 x' f x'' _36924).
Proof. exact (EQ_MP (@lem3497143 _90715 _90724 x x' f x'' _36924) (@lem3497134 _90715 _90724 _36924 x' g x f x'' h1)). Qed.
Lemma lem3497145 {_90715 _90724 : Type'} (_36924 : _90715) (x' : _90715) (g : type686 _90715) (x : _90724) (f : _90715 -> _90724) (x'' : _90715 -> Prop) (h1 : term686 _90715 _90724 x' g x f x'') : term626 _90715 _90724 x' f x'' _36924.
Proof. exact (EQ_MP (@lem3497144 _90715 _90724 _36924 x' g x f x'' h1) (@lem3496992 _90715 _90724 _36924 x' g x f x'' h1)). Qed.
Lemma lem3497159 {_90715 _90724 : Type'} (_36925 : _90715 -> Prop) (x' : _90715) (g : type686 _90715) (x : _90724) (f : _90715 -> _90724) (x'' : _90715 -> Prop) (h1 : term686 _90715 _90724 x' g x f x'') : term680 _90715 g _36925 x'.
Proof. exact (EQ_MP (@lem3496958 _90715 g _36925 x') (@lem3496957 _90715 _90724 _36925 x' g x f x'' h1)). Qed.
Lemma lem3497252 {_90724 : Type'} (x : _90724) : x = x.
Proof. exact (@lem21386 _90724 x). Qed.
Lemma lem3497253 {_90724 : Type'} (x : _90724) : x = x.
Proof. exact (@lem3497252 _90724 x). Qed.
Lemma lem3497254 {_90715 _90724 : Type'} (f : _90715 -> _90724) (x' : _90715) : (@I (_90715 -> _90724) f x') = (@I (_90715 -> _90724) f x').
Proof. exact (@lem3497253 _90724 (@I (_90715 -> _90724) f x')). Qed.
Lemma lem3497255 {_90715 _90724 : Type'} (f : _90715 -> _90724) (x' : _90715) : term826 _90715 _90724 f x'.
Proof. exact (fun h0 : term827 _90715 _90724 f x' => @lem3497254 _90715 _90724 f x'). Qed.
Lemma lem3497257 (p : Prop) : (term828 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem3497258 {_90715 _90724 : Type'} (f : _90715 -> _90724) (x' : _90715) : (term826 _90715 _90724 f x') = ((@I (_90715 -> _90724) f x') = (@I (_90715 -> _90724) f x')).
Proof. exact (@lem3497257 ((@I (_90715 -> _90724) f x') = (@I (_90715 -> _90724) f x'))). Qed.
Lemma lem3497259 {_90715 _90724 : Type'} (f : _90715 -> _90724) (x' : _90715) : (@I (_90715 -> _90724) f x') = (@I (_90715 -> _90724) f x').
Proof. exact (EQ_MP (@lem3497258 _90715 _90724 f x') (@lem3497255 _90715 _90724 f x')). Qed.
Lemma lem3497261 {_90715 _90724 : Type'} (x' : _90715) (g : type686 _90715) (x : _90724) (f : _90715 -> _90724) (x'' : _90715 -> Prop) (h1 : term686 _90715 _90724 x' g x f x'') : @I ((_90715 -> Prop) -> Prop) g x''.
Proof. exact (proj1 (@lem3496433 _90715 _90724 x' g x f x'' h1)). Qed.
Lemma lem3497262 {_90715 _90724 : Type'} (x' : _90715) (g : type686 _90715) (x : _90724) (f : _90715 -> _90724) (x'' : _90715 -> Prop) (h1 : term686 _90715 _90724 x' g x f x'') : term829 _90715 g x''.
Proof. exact (fun h0 : term640 _90715 g x'' => @lem3497261 _90715 _90724 x' g x f x'' h1). Qed.
Lemma lem3497264 (p : Prop) : (term828 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem3497265 {_90715 : Type'} (g : type686 _90715) (x'' : _90715 -> Prop) : (term829 _90715 g x'') = (@I ((_90715 -> Prop) -> Prop) g x'').
Proof. exact (@lem3497264 (@I ((_90715 -> Prop) -> Prop) g x'')). Qed.
Lemma lem3497266 {_90715 _90724 : Type'} (x' : _90715) (g : type686 _90715) (x : _90724) (f : _90715 -> _90724) (x'' : _90715 -> Prop) (h1 : term686 _90715 _90724 x' g x f x'') : @I ((_90715 -> Prop) -> Prop) g x''.
Proof. exact (EQ_MP (@lem3497265 _90715 g x'') (@lem3497262 _90715 _90724 x' g x f x'' h1)). Qed.
Lemma lem3497272 (q : Prop) (p : Prop) : (p \/ q) = (q \/ p).
Proof. exact (proj1 (@lem827 (@el Prop) p q)). Qed.
Lemma lem3497273 {_90715 : Type'} (x' : _90715) (g : type686 _90715) (_36925 : _90715 -> Prop) : (term680 _90715 g _36925 x') = (term830 _90715 x' g _36925).
Proof. exact (@lem3497272 (@I (_90715 -> Prop) _36925 x') (term640 _90715 g _36925)). Qed.
Lemma lem3497279 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem3497280 {_90715 : Type'} (x' : _90715) (g : type686 _90715) (_36925 : _90715 -> Prop) : (term831 _90715 g _36925 x') = (term832 _90715 x' g _36925).
Proof. exact (MK_COMB (@lem3497279) (@lem3497273 _90715 x' g _36925)). Qed.
Lemma lem3497286 {_90715 : Type'} (x' : _90715) (g : type686 _90715) (_36925 : _90715 -> Prop) : (term830 _90715 x' g _36925) = (term830 _90715 x' g _36925).
Proof. exact (eq_refl (term830 _90715 x' g _36925)). Qed.
Lemma lem3497287 {_90715 : Type'} (x' : _90715) (g : type686 _90715) (_36925 : _90715 -> Prop) : ((term680 _90715 g _36925 x') = (term830 _90715 x' g _36925)) = ((term830 _90715 x' g _36925) = (term830 _90715 x' g _36925)).
Proof. exact (MK_COMB (@lem3497280 _90715 x' g _36925) (@lem3497286 _90715 x' g _36925)). Qed.
Lemma lem3497289 {A : Type'} (x : A) : (x = x) = True.
Proof. exact (EQ_MP (@lem20665 A x) (@lem20664 A x)). Qed.
Lemma lem3497290 (x : Prop) : (x = x) = True.
Proof. exact (@lem3497289 Prop x). Qed.
Lemma lem3497291 {_90715 : Type'} (x' : _90715) (g : type686 _90715) (_36925 : _90715 -> Prop) : ((term830 _90715 x' g _36925) = (term830 _90715 x' g _36925)) = True.
Proof. exact (@lem3497290 (term830 _90715 x' g _36925)). Qed.
Lemma lem3497292 {_90715 : Type'} (x' : _90715) (g : type686 _90715) (_36925 : _90715 -> Prop) : ((term680 _90715 g _36925 x') = (term830 _90715 x' g _36925)) = True.
Proof. exact (TRANS (@lem3497287 _90715 x' g _36925) (@lem3497291 _90715 x' g _36925)). Qed.
Lemma lem3497293 {_90715 : Type'} (x' : _90715) (g : type686 _90715) (_36925 : _90715 -> Prop) : True = ((term680 _90715 g _36925 x') = (term830 _90715 x' g _36925)).
Proof. exact (SYM (@lem3497292 _90715 x' g _36925)). Qed.
Lemma lem3497294 {_90715 : Type'} (x' : _90715) (g : type686 _90715) (_36925 : _90715 -> Prop) : (term680 _90715 g _36925 x') = (term830 _90715 x' g _36925).
Proof. exact (EQ_MP (@lem3497293 _90715 x' g _36925) (@lem0)). Qed.
Lemma lem3497295 {_90715 _90724 : Type'} (_36925 : _90715 -> Prop) (x' : _90715) (g : type686 _90715) (x : _90724) (f : _90715 -> _90724) (x'' : _90715 -> Prop) (h1 : term686 _90715 _90724 x' g x f x'') : term830 _90715 x' g _36925.
Proof. exact (EQ_MP (@lem3497294 _90715 x' g _36925) (@lem3497159 _90715 _90724 _36925 x' g x f x'' h1)). Qed.
Lemma lem3497297 (b : Prop) (a : Prop) : (a \/ b) = (term833 b a).
Proof. exact (EQ_MP (@lem20682 b a) (@lem20764 b a)). Qed.
Lemma lem3497298 {_90715 : Type'} (g : type686 _90715) (_36925 : _90715 -> Prop) (x' : _90715) : (term830 _90715 x' g _36925) = (term834 _90715 g _36925 x').
Proof. exact (@lem3497297 (term640 _90715 g _36925) (@I (_90715 -> Prop) _36925 x')). Qed.
Lemma lem3497300 (a : Prop) : (term282 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem3497301 {_90715 : Type'} (g : type686 _90715) (_36925 : _90715 -> Prop) : (term835 _90715 g _36925) = (@I ((_90715 -> Prop) -> Prop) g _36925).
Proof. exact (@lem3497300 (@I ((_90715 -> Prop) -> Prop) g _36925)). Qed.
Lemma lem3497302 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem3497303 {_90715 : Type'} (g : type686 _90715) (_36925 : _90715 -> Prop) : (term836 _90715 g _36925) = (term837 _90715 g _36925).
Proof. exact (MK_COMB (@lem3497302) (@lem3497301 _90715 g _36925)). Qed.
Lemma lem3497304 {_90715 : Type'} (_36925 : _90715 -> Prop) (x' : _90715) : (@I (_90715 -> Prop) _36925 x') = (@I (_90715 -> Prop) _36925 x').
Proof. exact (eq_refl (@I (_90715 -> Prop) _36925 x')). Qed.
Lemma lem3497305 {_90715 : Type'} (g : type686 _90715) (_36925 : _90715 -> Prop) (x' : _90715) : (term834 _90715 g _36925 x') = (term838 _90715 g _36925 x').
Proof. exact (MK_COMB (@lem3497303 _90715 g _36925) (@lem3497304 _90715 _36925 x')). Qed.
Lemma lem3497306 {_90715 : Type'} (g : type686 _90715) (_36925 : _90715 -> Prop) (x' : _90715) : (term830 _90715 x' g _36925) = (term838 _90715 g _36925 x').
Proof. exact (TRANS (@lem3497298 _90715 g _36925 x') (@lem3497305 _90715 g _36925 x')). Qed.
Lemma lem3497309 {_90715 _90724 : Type'} (_36925 : _90715 -> Prop) (x' : _90715) (g : type686 _90715) (x : _90724) (f : _90715 -> _90724) (x'' : _90715 -> Prop) (h1 : term686 _90715 _90724 x' g x f x'') : term838 _90715 g _36925 x'.
Proof. exact (EQ_MP (@lem3497306 _90715 g _36925 x') (@lem3497295 _90715 _90724 _36925 x' g x f x'' h1)). Qed.
Lemma lem3497310 {_90715 _90724 : Type'} (_36925 : _90715 -> Prop) (x' : _90715) (g : type686 _90715) (x : _90724) (f : _90715 -> _90724) (x'' : _90715 -> Prop) (h1 : term686 _90715 _90724 x' g x f x'') : term838 _90715 g _36925 x'.
Proof. exact (@lem3497309 _90715 _90724 _36925 x' g x f x'' h1). Qed.
Lemma lem3497311 {_90715 _90724 : Type'} (x' : _90715) (g : type686 _90715) (x : _90724) (f : _90715 -> _90724) (x'' : _90715 -> Prop) (h1 : term686 _90715 _90724 x' g x f x'') : term838 _90715 g x'' x'.
Proof. exact (@lem3497310 _90715 _90724 x'' x' g x f x'' h1). Qed.
Lemma lem3497314 {_90715 _90724 : Type'} (x' : _90715) (g : type686 _90715) (x : _90724) (f : _90715 -> _90724) (x'' : _90715 -> Prop) (h1 : term686 _90715 _90724 x' g x f x'') : @I (_90715 -> Prop) x'' x'.
Proof. exact (@lem3497311 _90715 _90724 x' g x f x'' h1 (@lem3497266 _90715 _90724 x' g x f x'' h1)). Qed.
Lemma lem3497315 {_90715 _90724 : Type'} (x' : _90715) (g : type686 _90715) (x : _90724) (f : _90715 -> _90724) (x'' : _90715 -> Prop) (h1 : term686 _90715 _90724 x' g x f x'') : term839 _90715 x'' x'.
Proof. exact (fun h0 : term619 _90715 x'' x' => @lem3497314 _90715 _90724 x' g x f x'' h1). Qed.
Lemma lem3497317 (p : Prop) : (term828 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem3497318 {_90715 : Type'} (x'' : _90715 -> Prop) (x' : _90715) : (term839 _90715 x'' x') = (@I (_90715 -> Prop) x'' x').
Proof. exact (@lem3497317 (@I (_90715 -> Prop) x'' x')). Qed.
Lemma lem3497319 {_90715 _90724 : Type'} (x' : _90715) (g : type686 _90715) (x : _90724) (f : _90715 -> _90724) (x'' : _90715 -> Prop) (h1 : term686 _90715 _90724 x' g x f x'') : @I (_90715 -> Prop) x'' x'.
Proof. exact (EQ_MP (@lem3497318 _90715 x'' x') (@lem3497315 _90715 _90724 x' g x f x'' h1)). Qed.
Lemma lem3497321 (a : Prop) (b : Prop) : (term840 a b) = (term841 a b).
Proof. exact (EQ_MP (@lem20904 a b) (@lem21007 a b)). Qed.
Lemma lem3497322 {_90715 _90724 : Type'} (x' : _90715) (f : _90715 -> _90724) (x'' : _90715 -> Prop) (_36924 : _90715) : (term626 _90715 _90724 x' f x'' _36924) = (term842 _90715 _90724 x' f x'' _36924).
Proof. exact (@lem3497321 ((@I (_90715 -> _90724) f x') = (@I (_90715 -> _90724) f _36924)) (@I (_90715 -> Prop) x'' _36924)). Qed.
Lemma lem3497324 (p : Prop) : (~ p) = (p -> False).
Proof. exact (EQ_MP (@lem21021 p) (@lem0)). Qed.
Lemma lem3497325 {_90715 _90724 : Type'} (x' : _90715) (f : _90715 -> _90724) (x'' : _90715 -> Prop) (_36924 : _90715) : (term842 _90715 _90724 x' f x'' _36924) = (term843 _90715 _90724 x' f x'' _36924).
Proof. exact (@lem3497324 (term844 _90715 _90724 x' f x'' _36924)). Qed.
Lemma lem3497326 {_90715 _90724 : Type'} (x' : _90715) (f : _90715 -> _90724) (x'' : _90715 -> Prop) (_36924 : _90715) : (term626 _90715 _90724 x' f x'' _36924) = (term843 _90715 _90724 x' f x'' _36924).
Proof. exact (TRANS (@lem3497322 _90715 _90724 x' f x'' _36924) (@lem3497325 _90715 _90724 x' f x'' _36924)). Qed.
Lemma lem3497328 {_90715 _90724 : Type'} (x' : _90715) (g : type686 _90715) (x : _90724) (f : _90715 -> _90724) (x'' : _90715 -> Prop) (h1 : term686 _90715 _90724 x' g x f x'') : term845 _90715 _90724 f x'' x'.
Proof. exact (conj (@lem3497259 _90715 _90724 f x') (@lem3497319 _90715 _90724 x' g x f x'' h1)). Qed.
Lemma lem3497330 {_90715 _90724 : Type'} (_36924 : _90715) (x' : _90715) (g : type686 _90715) (x : _90724) (f : _90715 -> _90724) (x'' : _90715 -> Prop) (h1 : term686 _90715 _90724 x' g x f x'') : term843 _90715 _90724 x' f x'' _36924.
Proof. exact (EQ_MP (@lem3497326 _90715 _90724 x' f x'' _36924) (@lem3497145 _90715 _90724 _36924 x' g x f x'' h1)). Qed.
Lemma lem3497331 {_90715 _90724 : Type'} (_36924 : _90715) (x' : _90715) (g : type686 _90715) (x : _90724) (f : _90715 -> _90724) (x'' : _90715 -> Prop) (h1 : term686 _90715 _90724 x' g x f x'') : term843 _90715 _90724 x' f x'' _36924.
Proof. exact (@lem3497330 _90715 _90724 _36924 x' g x f x'' h1). Qed.
Lemma lem3497332 {_90715 _90724 : Type'} (x' : _90715) (g : type686 _90715) (x : _90724) (f : _90715 -> _90724) (x'' : _90715 -> Prop) (h1 : term686 _90715 _90724 x' g x f x'') : term846 _90715 _90724 f x'' x'.
Proof. exact (@lem3497331 _90715 _90724 x' x' g x f x'' h1). Qed.
Lemma lem3497335 {_90715 _90724 : Type'} (x' : _90715) (g : type686 _90715) (x : _90724) (f : _90715 -> _90724) (x'' : _90715 -> Prop) (h1 : term686 _90715 _90724 x' g x f x'') : False.
Proof. exact (@lem3497332 _90715 _90724 x' g x f x'' h1 (@lem3497328 _90715 _90724 x' g x f x'' h1)). Qed.
Lemma lem3497336 {_90715 _90724 : Type'} (x' : _90715) (g : type686 _90715) (x : _90724) (f : _90715 -> _90724) (x'' : _90715 -> Prop) (h1 : term686 _90715 _90724 x' g x f x'') : term847.
Proof. exact (fun h0 : ~ False => @lem3497335 _90715 _90724 x' g x f x'' h1). Qed.
Lemma lem3497338 (p : Prop) : (term828 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem3497339 : term847 = False.
Proof. exact (@lem3497338 False). Qed.
Lemma lem3497425 {_90724 : Type'} (x : _90724) (y : _90724) (z : _90724) : term848 _90724 x y z.
Proof. exact (@lem21385 _90724 x y z). Qed.
Lemma lem3497439 {_90715 : Type'} (g : type686 _90715) (x'''' : _90715 -> Prop) (h1 : g x'''') : @I ((_90715 -> Prop) -> Prop) g x''''.
Proof. exact (EQ_MP (@lem3496429 _90715 g x'''') (@lem3496116 _90715 g x'''' h1)). Qed.
Lemma lem3497440 {_90715 : Type'} (g : type686 _90715) (x'''' : _90715 -> Prop) (h1 : g x'''') : term829 _90715 g x''''.
Proof. exact (fun h0 : term640 _90715 g x'''' => @lem3497439 _90715 g x'''' h1). Qed.
Lemma lem3497442 (p : Prop) : (term828 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem3497443 {_90715 : Type'} (g : type686 _90715) (x'''' : _90715 -> Prop) : (term829 _90715 g x'''') = (@I ((_90715 -> Prop) -> Prop) g x'''').
Proof. exact (@lem3497442 (@I ((_90715 -> Prop) -> Prop) g x'''')). Qed.
Lemma lem3497444 {_90715 : Type'} (g : type686 _90715) (x'''' : _90715 -> Prop) (h1 : g x'''') : @I ((_90715 -> Prop) -> Prop) g x''''.
Proof. exact (EQ_MP (@lem3497443 _90715 g x'''') (@lem3497440 _90715 g x'''' h1)). Qed.
Lemma lem3497450 (q : Prop) (p : Prop) : (p \/ q) = (q \/ p).
Proof. exact (proj1 (@lem827 (@el Prop) p q)). Qed.
Lemma lem3497451 {_90715 _90724 : Type'} (x : _90724) (f : _90715 -> _90724) (x''' : type684 _90715) (g : type686 _90715) (_36930 : _90715 -> Prop) : (term811 _90715 _90724 g x f x''' _36930) = (term849 _90715 _90724 x f x''' g _36930).
Proof. exact (@lem3497450 (x = (term650 _90715 _90724 f x''' _36930)) (term640 _90715 g _36930)). Qed.
Lemma lem3497459 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem3497460 {_90715 _90724 : Type'} (x : _90724) (f : _90715 -> _90724) (x''' : type684 _90715) (g : type686 _90715) (_36930 : _90715 -> Prop) : (term850 _90715 _90724 g x f x''' _36930) = (term851 _90715 _90724 x f x''' g _36930).
Proof. exact (MK_COMB (@lem3497459) (@lem3497451 _90715 _90724 x f x''' g _36930)). Qed.
Lemma lem3497468 {_90715 _90724 : Type'} (x : _90724) (f : _90715 -> _90724) (x''' : type684 _90715) (g : type686 _90715) (_36930 : _90715 -> Prop) : (term849 _90715 _90724 x f x''' g _36930) = (term849 _90715 _90724 x f x''' g _36930).
Proof. exact (eq_refl (term849 _90715 _90724 x f x''' g _36930)). Qed.
Lemma lem3497469 {_90715 _90724 : Type'} (x : _90724) (f : _90715 -> _90724) (x''' : type684 _90715) (g : type686 _90715) (_36930 : _90715 -> Prop) : ((term811 _90715 _90724 g x f x''' _36930) = (term849 _90715 _90724 x f x''' g _36930)) = ((term849 _90715 _90724 x f x''' g _36930) = (term849 _90715 _90724 x f x''' g _36930)).
Proof. exact (MK_COMB (@lem3497460 _90715 _90724 x f x''' g _36930) (@lem3497468 _90715 _90724 x f x''' g _36930)). Qed.
Lemma lem3497471 {A : Type'} (x : A) : (x = x) = True.
Proof. exact (EQ_MP (@lem20665 A x) (@lem20664 A x)). Qed.
Lemma lem3497472 (x : Prop) : (x = x) = True.
Proof. exact (@lem3497471 Prop x). Qed.
Lemma lem3497473 {_90715 _90724 : Type'} (x : _90724) (f : _90715 -> _90724) (x''' : type684 _90715) (g : type686 _90715) (_36930 : _90715 -> Prop) : ((term849 _90715 _90724 x f x''' g _36930) = (term849 _90715 _90724 x f x''' g _36930)) = True.
Proof. exact (@lem3497472 (term849 _90715 _90724 x f x''' g _36930)). Qed.
Lemma lem3497474 {_90715 _90724 : Type'} (x : _90724) (f : _90715 -> _90724) (x''' : type684 _90715) (g : type686 _90715) (_36930 : _90715 -> Prop) : ((term811 _90715 _90724 g x f x''' _36930) = (term849 _90715 _90724 x f x''' g _36930)) = True.
Proof. exact (TRANS (@lem3497469 _90715 _90724 x f x''' g _36930) (@lem3497473 _90715 _90724 x f x''' g _36930)). Qed.
Lemma lem3497475 {_90715 _90724 : Type'} (x : _90724) (f : _90715 -> _90724) (x''' : type684 _90715) (g : type686 _90715) (_36930 : _90715 -> Prop) : True = ((term811 _90715 _90724 g x f x''' _36930) = (term849 _90715 _90724 x f x''' g _36930)).
Proof. exact (SYM (@lem3497474 _90715 _90724 x f x''' g _36930)). Qed.
Lemma lem3497476 {_90715 _90724 : Type'} (x : _90724) (f : _90715 -> _90724) (x''' : type684 _90715) (g : type686 _90715) (_36930 : _90715 -> Prop) : (term811 _90715 _90724 g x f x''' _36930) = (term849 _90715 _90724 x f x''' g _36930).
Proof. exact (EQ_MP (@lem3497475 _90715 _90724 x f x''' g _36930) (@lem0)). Qed.
Lemma lem3497477 {_90715 _90724 : Type'} (_36930 : _90715 -> Prop) (t : type1402 _90715) (g : type686 _90715) (x : _90724) (f : _90715 -> _90724) (x''' : type684 _90715) (h1 : term674 _90715 _90724 t g x f x''') : term849 _90715 _90724 x f x''' g _36930.
Proof. exact (EQ_MP (@lem3497476 _90715 _90724 x f x''' g _36930) (@lem3497040 _90715 _90724 _36930 t g x f x''' h1)). Qed.
Lemma lem3497479 (b : Prop) (a : Prop) : (a \/ b) = (term833 b a).
Proof. exact (EQ_MP (@lem20682 b a) (@lem20764 b a)). Qed.
Lemma lem3497480 {_90715 _90724 : Type'} (g : type686 _90715) (x : _90724) (f : _90715 -> _90724) (x''' : type684 _90715) (_36930 : _90715 -> Prop) : (term849 _90715 _90724 x f x''' g _36930) = (term852 _90715 _90724 g x f x''' _36930).
Proof. exact (@lem3497479 (term640 _90715 g _36930) (x = (term650 _90715 _90724 f x''' _36930))). Qed.
Lemma lem3497482 (a : Prop) : (term282 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem3497483 {_90715 : Type'} (g : type686 _90715) (_36930 : _90715 -> Prop) : (term835 _90715 g _36930) = (@I ((_90715 -> Prop) -> Prop) g _36930).
Proof. exact (@lem3497482 (@I ((_90715 -> Prop) -> Prop) g _36930)). Qed.
Lemma lem3497484 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem3497485 {_90715 : Type'} (g : type686 _90715) (_36930 : _90715 -> Prop) : (term836 _90715 g _36930) = (term837 _90715 g _36930).
Proof. exact (MK_COMB (@lem3497484) (@lem3497483 _90715 g _36930)). Qed.
Lemma lem3497486 {_90715 _90724 : Type'} (x : _90724) (f : _90715 -> _90724) (x''' : type684 _90715) (_36930 : _90715 -> Prop) : (x = (term650 _90715 _90724 f x''' _36930)) = (x = (term650 _90715 _90724 f x''' _36930)).
Proof. exact (eq_refl (x = (term650 _90715 _90724 f x''' _36930))). Qed.
Lemma lem3497487 {_90715 _90724 : Type'} (g : type686 _90715) (x : _90724) (f : _90715 -> _90724) (x''' : type684 _90715) (_36930 : _90715 -> Prop) : (term852 _90715 _90724 g x f x''' _36930) = (term853 _90715 _90724 g x f x''' _36930).
Proof. exact (MK_COMB (@lem3497485 _90715 g _36930) (@lem3497486 _90715 _90724 x f x''' _36930)). Qed.
Lemma lem3497488 {_90715 _90724 : Type'} (g : type686 _90715) (x : _90724) (f : _90715 -> _90724) (x''' : type684 _90715) (_36930 : _90715 -> Prop) : (term849 _90715 _90724 x f x''' g _36930) = (term853 _90715 _90724 g x f x''' _36930).
Proof. exact (TRANS (@lem3497480 _90715 _90724 g x f x''' _36930) (@lem3497487 _90715 _90724 g x f x''' _36930)). Qed.
Lemma lem3497491 {_90715 _90724 : Type'} (_36930 : _90715 -> Prop) (t : type1402 _90715) (g : type686 _90715) (x : _90724) (f : _90715 -> _90724) (x''' : type684 _90715) (h1 : term674 _90715 _90724 t g x f x''') : term853 _90715 _90724 g x f x''' _36930.
Proof. exact (EQ_MP (@lem3497488 _90715 _90724 g x f x''' _36930) (@lem3497477 _90715 _90724 _36930 t g x f x''' h1)). Qed.
Lemma lem3497492 {_90715 _90724 : Type'} (_36930 : _90715 -> Prop) (t : type1402 _90715) (g : type686 _90715) (x : _90724) (f : _90715 -> _90724) (x''' : type684 _90715) (h1 : term674 _90715 _90724 t g x f x''') : term853 _90715 _90724 g x f x''' _36930.
Proof. exact (@lem3497491 _90715 _90724 _36930 t g x f x''' h1). Qed.
Lemma lem3497493 {_90715 _90724 : Type'} (x'''' : _90715 -> Prop) (t : type1402 _90715) (g : type686 _90715) (x : _90724) (f : _90715 -> _90724) (x''' : type684 _90715) (h1 : term674 _90715 _90724 t g x f x''') : term853 _90715 _90724 g x f x''' x''''.
Proof. exact (@lem3497492 _90715 _90724 x'''' t g x f x''' h1). Qed.
Lemma lem3497496 {_90715 _90724 : Type'} (x'''' : _90715 -> Prop) (t : type1402 _90715) (g : type686 _90715) (x : _90724) (f : _90715 -> _90724) (x''' : type684 _90715) (h1 : g x'''') (h2 : term674 _90715 _90724 t g x f x''') : x = (term650 _90715 _90724 f x''' x'''').
Proof. exact (@lem3497493 _90715 _90724 x'''' t g x f x''' h2 (@lem3497444 _90715 g x'''' h1)). Qed.
Lemma lem3497497 {_90715 _90724 : Type'} (x'''' : _90715 -> Prop) (t : type1402 _90715) (g : type686 _90715) (x : _90724) (f : _90715 -> _90724) (x''' : type684 _90715) (h1 : g x'''') (h2 : term674 _90715 _90724 t g x f x''') : term854 _90715 _90724 x f x''' x''''.
Proof. exact (fun h0 : term855 _90715 _90724 x f x''' x'''' => @lem3497496 _90715 _90724 x'''' t g x f x''' h1 h2). Qed.
Lemma lem3497499 (p : Prop) : (term828 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem3497500 {_90715 _90724 : Type'} (x : _90724) (f : _90715 -> _90724) (x''' : type684 _90715) (x'''' : _90715 -> Prop) : (term854 _90715 _90724 x f x''' x'''') = (x = (term650 _90715 _90724 f x''' x'''')).
Proof. exact (@lem3497499 (x = (term650 _90715 _90724 f x''' x''''))). Qed.
Lemma lem3497501 {_90715 _90724 : Type'} (x'''' : _90715 -> Prop) (t : type1402 _90715) (g : type686 _90715) (x : _90724) (f : _90715 -> _90724) (x''' : type684 _90715) (h1 : g x'''') (h2 : term674 _90715 _90724 t g x f x''') : x = (term650 _90715 _90724 f x''' x'''').
Proof. exact (EQ_MP (@lem3497500 _90715 _90724 x f x''' x'''') (@lem3497497 _90715 _90724 x'''' t g x f x''' h1 h2)). Qed.
Lemma lem3497503 {_90715 : Type'} (g : type686 _90715) (x'''' : _90715 -> Prop) (h1 : g x'''') : @I ((_90715 -> Prop) -> Prop) g x''''.
Proof. exact (EQ_MP (@lem3496429 _90715 g x'''') (@lem3496116 _90715 g x'''' h1)). Qed.
Lemma lem3497504 {_90715 : Type'} (g : type686 _90715) (x'''' : _90715 -> Prop) (h1 : g x'''') : term829 _90715 g x''''.
Proof. exact (fun h0 : term640 _90715 g x'''' => @lem3497503 _90715 g x'''' h1). Qed.
Lemma lem3497506 (p : Prop) : (term828 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem3497507 {_90715 : Type'} (g : type686 _90715) (x'''' : _90715 -> Prop) : (term829 _90715 g x'''') = (@I ((_90715 -> Prop) -> Prop) g x'''').
Proof. exact (@lem3497506 (@I ((_90715 -> Prop) -> Prop) g x'''')). Qed.
Lemma lem3497508 {_90715 : Type'} (g : type686 _90715) (x'''' : _90715 -> Prop) (h1 : g x'''') : @I ((_90715 -> Prop) -> Prop) g x''''.
Proof. exact (EQ_MP (@lem3497507 _90715 g x'''') (@lem3497504 _90715 g x'''' h1)). Qed.
Lemma lem3497510 {_90715 _90724 : Type'} (_36930 : _90715 -> Prop) (t : type1402 _90715) (g : type686 _90715) (x : _90724) (f : _90715 -> _90724) (x''' : type684 _90715) (h1 : term674 _90715 _90724 t g x f x''') : term853 _90715 _90724 g x f x''' _36930.
Proof. exact (EQ_MP (@lem3497488 _90715 _90724 g x f x''' _36930) (@lem3497477 _90715 _90724 _36930 t g x f x''' h1)). Qed.
Lemma lem3497511 {_90715 _90724 : Type'} (_36930 : _90715 -> Prop) (t : type1402 _90715) (g : type686 _90715) (x : _90724) (f : _90715 -> _90724) (x''' : type684 _90715) (h1 : term674 _90715 _90724 t g x f x''') : term853 _90715 _90724 g x f x''' _36930.
Proof. exact (@lem3497510 _90715 _90724 _36930 t g x f x''' h1). Qed.
Lemma lem3497512 {_90715 _90724 : Type'} (x'''' : _90715 -> Prop) (t : type1402 _90715) (g : type686 _90715) (x : _90724) (f : _90715 -> _90724) (x''' : type684 _90715) (h1 : term674 _90715 _90724 t g x f x''') : term853 _90715 _90724 g x f x''' x''''.
Proof. exact (@lem3497511 _90715 _90724 x'''' t g x f x''' h1). Qed.
Lemma lem3497515 {_90715 _90724 : Type'} (x'''' : _90715 -> Prop) (t : type1402 _90715) (g : type686 _90715) (x : _90724) (f : _90715 -> _90724) (x''' : type684 _90715) (h1 : g x'''') (h2 : term674 _90715 _90724 t g x f x''') : x = (term650 _90715 _90724 f x''' x'''').
Proof. exact (@lem3497512 _90715 _90724 x'''' t g x f x''' h2 (@lem3497508 _90715 g x'''' h1)). Qed.
Lemma lem3497516 {_90715 _90724 : Type'} (x'''' : _90715 -> Prop) (t : type1402 _90715) (g : type686 _90715) (x : _90724) (f : _90715 -> _90724) (x''' : type684 _90715) (h1 : g x'''') (h2 : term674 _90715 _90724 t g x f x''') : term854 _90715 _90724 x f x''' x''''.
Proof. exact (fun h0 : term855 _90715 _90724 x f x''' x'''' => @lem3497515 _90715 _90724 x'''' t g x f x''' h1 h2). Qed.
Lemma lem3497518 (p : Prop) : (term828 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem3497519 {_90715 _90724 : Type'} (x : _90724) (f : _90715 -> _90724) (x''' : type684 _90715) (x'''' : _90715 -> Prop) : (term854 _90715 _90724 x f x''' x'''') = (x = (term650 _90715 _90724 f x''' x'''')).
Proof. exact (@lem3497518 (x = (term650 _90715 _90724 f x''' x''''))). Qed.
Lemma lem3497520 {_90715 _90724 : Type'} (x'''' : _90715 -> Prop) (t : type1402 _90715) (g : type686 _90715) (x : _90724) (f : _90715 -> _90724) (x''' : type684 _90715) (h1 : g x'''') (h2 : term674 _90715 _90724 t g x f x''') : x = (term650 _90715 _90724 f x''' x'''').
Proof. exact (EQ_MP (@lem3497519 _90715 _90724 x f x''' x'''') (@lem3497516 _90715 _90724 x'''' t g x f x''' h1 h2)). Qed.
Lemma lem3497526 (q : Prop) (p : Prop) : (p \/ q) = (q \/ p).
Proof. exact (proj1 (@lem827 (@el Prop) p q)). Qed.
Lemma lem3497527 {_90715 _90724 : Type'} (g : type686 _90715) (t : type1402 _90715) (x : _90724) (f : _90715 -> _90724) (_36929 : _90715) : (term813 _90715 _90724 x f g t _36929) = (term856 _90715 _90724 g t x f _36929).
Proof. exact (@lem3497526 (term663 _90715 g t _36929) (term668 _90715 _90724 x f _36929)). Qed.
Lemma lem3497535 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem3497536 {_90715 _90724 : Type'} (g : type686 _90715) (t : type1402 _90715) (x : _90724) (f : _90715 -> _90724) (_36929 : _90715) : (term857 _90715 _90724 x f g t _36929) = (term858 _90715 _90724 g t x f _36929).
Proof. exact (MK_COMB (@lem3497535) (@lem3497527 _90715 _90724 g t x f _36929)). Qed.
Lemma lem3497544 {_90715 _90724 : Type'} (g : type686 _90715) (t : type1402 _90715) (x : _90724) (f : _90715 -> _90724) (_36929 : _90715) : (term856 _90715 _90724 g t x f _36929) = (term856 _90715 _90724 g t x f _36929).
Proof. exact (eq_refl (term856 _90715 _90724 g t x f _36929)). Qed.
Lemma lem3497545 {_90715 _90724 : Type'} (g : type686 _90715) (t : type1402 _90715) (x : _90724) (f : _90715 -> _90724) (_36929 : _90715) : ((term813 _90715 _90724 x f g t _36929) = (term856 _90715 _90724 g t x f _36929)) = ((term856 _90715 _90724 g t x f _36929) = (term856 _90715 _90724 g t x f _36929)).
Proof. exact (MK_COMB (@lem3497536 _90715 _90724 g t x f _36929) (@lem3497544 _90715 _90724 g t x f _36929)). Qed.
Lemma lem3497547 {A : Type'} (x : A) : (x = x) = True.
Proof. exact (EQ_MP (@lem20665 A x) (@lem20664 A x)). Qed.
Lemma lem3497548 (x : Prop) : (x = x) = True.
Proof. exact (@lem3497547 Prop x). Qed.
Lemma lem3497549 {_90715 _90724 : Type'} (g : type686 _90715) (t : type1402 _90715) (x : _90724) (f : _90715 -> _90724) (_36929 : _90715) : ((term856 _90715 _90724 g t x f _36929) = (term856 _90715 _90724 g t x f _36929)) = True.
Proof. exact (@lem3497548 (term856 _90715 _90724 g t x f _36929)). Qed.
Lemma lem3497550 {_90715 _90724 : Type'} (g : type686 _90715) (t : type1402 _90715) (x : _90724) (f : _90715 -> _90724) (_36929 : _90715) : ((term813 _90715 _90724 x f g t _36929) = (term856 _90715 _90724 g t x f _36929)) = True.
Proof. exact (TRANS (@lem3497545 _90715 _90724 g t x f _36929) (@lem3497549 _90715 _90724 g t x f _36929)). Qed.
Lemma lem3497551 {_90715 _90724 : Type'} (g : type686 _90715) (t : type1402 _90715) (x : _90724) (f : _90715 -> _90724) (_36929 : _90715) : True = ((term813 _90715 _90724 x f g t _36929) = (term856 _90715 _90724 g t x f _36929)).
Proof. exact (SYM (@lem3497550 _90715 _90724 g t x f _36929)). Qed.
Lemma lem3497552 {_90715 _90724 : Type'} (g : type686 _90715) (t : type1402 _90715) (x : _90724) (f : _90715 -> _90724) (_36929 : _90715) : (term813 _90715 _90724 x f g t _36929) = (term856 _90715 _90724 g t x f _36929).
Proof. exact (EQ_MP (@lem3497551 _90715 _90724 g t x f _36929) (@lem0)). Qed.
Lemma lem3497553 {_90715 _90724 : Type'} (_36929 : _90715) (t : type1402 _90715) (g : type686 _90715) (x : _90724) (f : _90715 -> _90724) (x''' : type684 _90715) (h1 : term674 _90715 _90724 t g x f x''') : term856 _90715 _90724 g t x f _36929.
Proof. exact (EQ_MP (@lem3497552 _90715 _90724 g t x f _36929) (@lem3497052 _90715 _90724 _36929 t g x f x''' h1)). Qed.
Lemma lem3497555 (b : Prop) (a : Prop) : (a \/ b) = (term833 b a).
Proof. exact (EQ_MP (@lem20682 b a) (@lem20764 b a)). Qed.
Lemma lem3497556 {_90715 _90724 : Type'} (x : _90724) (f : _90715 -> _90724) (g : type686 _90715) (t : type1402 _90715) (_36929 : _90715) : (term856 _90715 _90724 g t x f _36929) = (term859 _90715 _90724 x f g t _36929).
Proof. exact (@lem3497555 (term668 _90715 _90724 x f _36929) (term663 _90715 g t _36929)). Qed.
Lemma lem3497558 (a : Prop) : (term282 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem3497559 {_90715 _90724 : Type'} (x : _90724) (f : _90715 -> _90724) (_36929 : _90715) : (term860 _90715 _90724 x f _36929) = (x = (@I (_90715 -> _90724) f _36929)).
Proof. exact (@lem3497558 (x = (@I (_90715 -> _90724) f _36929))). Qed.
Lemma lem3497560 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem3497561 {_90715 _90724 : Type'} (x : _90724) (f : _90715 -> _90724) (_36929 : _90715) : (term861 _90715 _90724 x f _36929) = (term862 _90715 _90724 x f _36929).
Proof. exact (MK_COMB (@lem3497560) (@lem3497559 _90715 _90724 x f _36929)). Qed.
Lemma lem3497562 {_90715 : Type'} (g : type686 _90715) (t : type1402 _90715) (_36929 : _90715) : (term663 _90715 g t _36929) = (term663 _90715 g t _36929).
Proof. exact (eq_refl (term663 _90715 g t _36929)). Qed.
Lemma lem3497563 {_90715 _90724 : Type'} (x : _90724) (f : _90715 -> _90724) (g : type686 _90715) (t : type1402 _90715) (_36929 : _90715) : (term859 _90715 _90724 x f g t _36929) = (term863 _90715 _90724 x f g t _36929).
Proof. exact (MK_COMB (@lem3497561 _90715 _90724 x f _36929) (@lem3497562 _90715 g t _36929)). Qed.
Lemma lem3497564 {_90715 _90724 : Type'} (x : _90724) (f : _90715 -> _90724) (g : type686 _90715) (t : type1402 _90715) (_36929 : _90715) : (term856 _90715 _90724 g t x f _36929) = (term863 _90715 _90724 x f g t _36929).
Proof. exact (TRANS (@lem3497556 _90715 _90724 x f g t _36929) (@lem3497563 _90715 _90724 x f g t _36929)). Qed.
Lemma lem3497567 {_90715 _90724 : Type'} (_36929 : _90715) (t : type1402 _90715) (g : type686 _90715) (x : _90724) (f : _90715 -> _90724) (x''' : type684 _90715) (h1 : term674 _90715 _90724 t g x f x''') : term863 _90715 _90724 x f g t _36929.
Proof. exact (EQ_MP (@lem3497564 _90715 _90724 x f g t _36929) (@lem3497553 _90715 _90724 _36929 t g x f x''' h1)). Qed.
Lemma lem3497568 {_90715 _90724 : Type'} (_36929 : _90715) (t : type1402 _90715) (g : type686 _90715) (x : _90724) (f : _90715 -> _90724) (x''' : type684 _90715) (h1 : term674 _90715 _90724 t g x f x''') : term863 _90715 _90724 x f g t _36929.
Proof. exact (@lem3497567 _90715 _90724 _36929 t g x f x''' h1). Qed.
Lemma lem3497569 {_90715 _90724 : Type'} (x'''' : _90715 -> Prop) (t : type1402 _90715) (g : type686 _90715) (x : _90724) (f : _90715 -> _90724) (x''' : type684 _90715) (h1 : term674 _90715 _90724 t g x f x''') : term864 _90715 _90724 x f g t x''' x''''.
Proof. exact (@lem3497568 _90715 _90724 (@I ((_90715 -> Prop) -> _90715) x''' x'''') t g x f x''' h1). Qed.
Lemma lem3497572 {_90715 _90724 : Type'} (x'''' : _90715 -> Prop) (t : type1402 _90715) (g : type686 _90715) (x : _90724) (f : _90715 -> _90724) (x''' : type684 _90715) (h1 : g x'''') (h2 : term674 _90715 _90724 t g x f x''') : term865 _90715 g t x''' x''''.
Proof. exact (@lem3497569 _90715 _90724 x'''' t g x f x''' h2 (@lem3497520 _90715 _90724 x'''' t g x f x''' h1 h2)). Qed.
Lemma lem3497573 {_90715 _90724 : Type'} (x'''' : _90715 -> Prop) (t : type1402 _90715) (g : type686 _90715) (x : _90724) (f : _90715 -> _90724) (x''' : type684 _90715) (h1 : g x'''') (h2 : term674 _90715 _90724 t g x f x''') : term866 _90715 g t x''' x''''.
Proof. exact (fun h0 : term867 _90715 g t x''' x'''' => @lem3497572 _90715 _90724 x'''' t g x f x''' h1 h2). Qed.
Lemma lem3497575 (p : Prop) : (term828 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem3497576 {_90715 : Type'} (g : type686 _90715) (t : type1402 _90715) (x''' : type684 _90715) (x'''' : _90715 -> Prop) : (term866 _90715 g t x''' x'''') = (term865 _90715 g t x''' x'''').
Proof. exact (@lem3497575 (term865 _90715 g t x''' x'''')). Qed.
Lemma lem3497577 {_90715 _90724 : Type'} (x'''' : _90715 -> Prop) (t : type1402 _90715) (g : type686 _90715) (x : _90724) (f : _90715 -> _90724) (x''' : type684 _90715) (h1 : g x'''') (h2 : term674 _90715 _90724 t g x f x''') : term865 _90715 g t x''' x''''.
Proof. exact (EQ_MP (@lem3497576 _90715 g t x''' x'''') (@lem3497573 _90715 _90724 x'''' t g x f x''' h1 h2)). Qed.
Lemma lem3497579 {_90715 : Type'} (g : type686 _90715) (x'''' : _90715 -> Prop) (h1 : g x'''') : @I ((_90715 -> Prop) -> Prop) g x''''.
Proof. exact (EQ_MP (@lem3496429 _90715 g x'''') (@lem3496116 _90715 g x'''' h1)). Qed.
Lemma lem3497580 {_90715 : Type'} (g : type686 _90715) (x'''' : _90715 -> Prop) (h1 : g x'''') : term829 _90715 g x''''.
Proof. exact (fun h0 : term640 _90715 g x'''' => @lem3497579 _90715 g x'''' h1). Qed.
Lemma lem3497582 (p : Prop) : (term828 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem3497583 {_90715 : Type'} (g : type686 _90715) (x'''' : _90715 -> Prop) : (term829 _90715 g x'''') = (@I ((_90715 -> Prop) -> Prop) g x'''').
Proof. exact (@lem3497582 (@I ((_90715 -> Prop) -> Prop) g x'''')). Qed.
Lemma lem3497584 {_90715 : Type'} (g : type686 _90715) (x'''' : _90715 -> Prop) (h1 : g x'''') : @I ((_90715 -> Prop) -> Prop) g x''''.
Proof. exact (EQ_MP (@lem3497583 _90715 g x'''') (@lem3497580 _90715 g x'''' h1)). Qed.
Lemma lem3497586 {_90715 : Type'} (g : type686 _90715) (x'''' : _90715 -> Prop) (h1 : g x'''') : @I ((_90715 -> Prop) -> Prop) g x''''.
Proof. exact (EQ_MP (@lem3496429 _90715 g x'''') (@lem3496116 _90715 g x'''' h1)). Qed.
Lemma lem3497587 {_90715 : Type'} (g : type686 _90715) (x'''' : _90715 -> Prop) (h1 : g x'''') : term829 _90715 g x''''.
Proof. exact (fun h0 : term640 _90715 g x'''' => @lem3497586 _90715 g x'''' h1). Qed.
Lemma lem3497589 (p : Prop) : (term828 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem3497590 {_90715 : Type'} (g : type686 _90715) (x'''' : _90715 -> Prop) : (term829 _90715 g x'''') = (@I ((_90715 -> Prop) -> Prop) g x'''').
Proof. exact (@lem3497589 (@I ((_90715 -> Prop) -> Prop) g x'''')). Qed.
Lemma lem3497591 {_90715 : Type'} (g : type686 _90715) (x'''' : _90715 -> Prop) (h1 : g x'''') : @I ((_90715 -> Prop) -> Prop) g x''''.
Proof. exact (EQ_MP (@lem3497590 _90715 g x'''') (@lem3497587 _90715 g x'''' h1)). Qed.
Lemma lem3497597 (q : Prop) (p : Prop) : (p \/ q) = (q \/ p).
Proof. exact (proj1 (@lem827 (@el Prop) p q)). Qed.
Lemma lem3497598 {_90715 : Type'} (x''' : type684 _90715) (g : type686 _90715) (_36930 : _90715 -> Prop) : (term812 _90715 g x''' _36930) = (term868 _90715 x''' g _36930).
Proof. exact (@lem3497597 (term647 _90715 x''' _36930) (term640 _90715 g _36930)). Qed.
Lemma lem3497604 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem3497605 {_90715 : Type'} (x''' : type684 _90715) (g : type686 _90715) (_36930 : _90715 -> Prop) : (term869 _90715 g x''' _36930) = (term870 _90715 x''' g _36930).
Proof. exact (MK_COMB (@lem3497604) (@lem3497598 _90715 x''' g _36930)). Qed.
Lemma lem3497611 {_90715 : Type'} (x''' : type684 _90715) (g : type686 _90715) (_36930 : _90715 -> Prop) : (term868 _90715 x''' g _36930) = (term868 _90715 x''' g _36930).
Proof. exact (eq_refl (term868 _90715 x''' g _36930)). Qed.
Lemma lem3497612 {_90715 : Type'} (x''' : type684 _90715) (g : type686 _90715) (_36930 : _90715 -> Prop) : ((term812 _90715 g x''' _36930) = (term868 _90715 x''' g _36930)) = ((term868 _90715 x''' g _36930) = (term868 _90715 x''' g _36930)).
Proof. exact (MK_COMB (@lem3497605 _90715 x''' g _36930) (@lem3497611 _90715 x''' g _36930)). Qed.
Lemma lem3497614 {A : Type'} (x : A) : (x = x) = True.
Proof. exact (EQ_MP (@lem20665 A x) (@lem20664 A x)). Qed.
Lemma lem3497615 (x : Prop) : (x = x) = True.
Proof. exact (@lem3497614 Prop x). Qed.
Lemma lem3497616 {_90715 : Type'} (x''' : type684 _90715) (g : type686 _90715) (_36930 : _90715 -> Prop) : ((term868 _90715 x''' g _36930) = (term868 _90715 x''' g _36930)) = True.
Proof. exact (@lem3497615 (term868 _90715 x''' g _36930)). Qed.
Lemma lem3497617 {_90715 : Type'} (x''' : type684 _90715) (g : type686 _90715) (_36930 : _90715 -> Prop) : ((term812 _90715 g x''' _36930) = (term868 _90715 x''' g _36930)) = True.
Proof. exact (TRANS (@lem3497612 _90715 x''' g _36930) (@lem3497616 _90715 x''' g _36930)). Qed.
Lemma lem3497618 {_90715 : Type'} (x''' : type684 _90715) (g : type686 _90715) (_36930 : _90715 -> Prop) : True = ((term812 _90715 g x''' _36930) = (term868 _90715 x''' g _36930)).
Proof. exact (SYM (@lem3497617 _90715 x''' g _36930)). Qed.
Lemma lem3497619 {_90715 : Type'} (x''' : type684 _90715) (g : type686 _90715) (_36930 : _90715 -> Prop) : (term812 _90715 g x''' _36930) = (term868 _90715 x''' g _36930).
Proof. exact (EQ_MP (@lem3497618 _90715 x''' g _36930) (@lem0)). Qed.
Lemma lem3497620 {_90715 _90724 : Type'} (_36930 : _90715 -> Prop) (t : type1402 _90715) (g : type686 _90715) (x : _90724) (f : _90715 -> _90724) (x''' : type684 _90715) (h1 : term674 _90715 _90724 t g x f x''') : term868 _90715 x''' g _36930.
Proof. exact (EQ_MP (@lem3497619 _90715 x''' g _36930) (@lem3497046 _90715 _90724 _36930 t g x f x''' h1)). Qed.
Lemma lem3497622 (b : Prop) (a : Prop) : (a \/ b) = (term833 b a).
Proof. exact (EQ_MP (@lem20682 b a) (@lem20764 b a)). Qed.
Lemma lem3497623 {_90715 : Type'} (g : type686 _90715) (x''' : type684 _90715) (_36930 : _90715 -> Prop) : (term868 _90715 x''' g _36930) = (term871 _90715 g x''' _36930).
Proof. exact (@lem3497622 (term640 _90715 g _36930) (term647 _90715 x''' _36930)). Qed.
Lemma lem3497625 (a : Prop) : (term282 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem3497626 {_90715 : Type'} (g : type686 _90715) (_36930 : _90715 -> Prop) : (term835 _90715 g _36930) = (@I ((_90715 -> Prop) -> Prop) g _36930).
Proof. exact (@lem3497625 (@I ((_90715 -> Prop) -> Prop) g _36930)). Qed.
Lemma lem3497627 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem3497628 {_90715 : Type'} (g : type686 _90715) (_36930 : _90715 -> Prop) : (term836 _90715 g _36930) = (term837 _90715 g _36930).
Proof. exact (MK_COMB (@lem3497627) (@lem3497626 _90715 g _36930)). Qed.
Lemma lem3497629 {_90715 : Type'} (x''' : type684 _90715) (_36930 : _90715 -> Prop) : (term647 _90715 x''' _36930) = (term647 _90715 x''' _36930).
Proof. exact (eq_refl (term647 _90715 x''' _36930)). Qed.
Lemma lem3497630 {_90715 : Type'} (g : type686 _90715) (x''' : type684 _90715) (_36930 : _90715 -> Prop) : (term871 _90715 g x''' _36930) = (term872 _90715 g x''' _36930).
Proof. exact (MK_COMB (@lem3497628 _90715 g _36930) (@lem3497629 _90715 x''' _36930)). Qed.
Lemma lem3497631 {_90715 : Type'} (g : type686 _90715) (x''' : type684 _90715) (_36930 : _90715 -> Prop) : (term868 _90715 x''' g _36930) = (term872 _90715 g x''' _36930).
Proof. exact (TRANS (@lem3497623 _90715 g x''' _36930) (@lem3497630 _90715 g x''' _36930)). Qed.
Lemma lem3497634 {_90715 _90724 : Type'} (_36930 : _90715 -> Prop) (t : type1402 _90715) (g : type686 _90715) (x : _90724) (f : _90715 -> _90724) (x''' : type684 _90715) (h1 : term674 _90715 _90724 t g x f x''') : term872 _90715 g x''' _36930.
Proof. exact (EQ_MP (@lem3497631 _90715 g x''' _36930) (@lem3497620 _90715 _90724 _36930 t g x f x''' h1)). Qed.
Lemma lem3497635 {_90715 _90724 : Type'} (_36930 : _90715 -> Prop) (t : type1402 _90715) (g : type686 _90715) (x : _90724) (f : _90715 -> _90724) (x''' : type684 _90715) (h1 : term674 _90715 _90724 t g x f x''') : term872 _90715 g x''' _36930.
Proof. exact (@lem3497634 _90715 _90724 _36930 t g x f x''' h1). Qed.
Lemma lem3497636 {_90715 _90724 : Type'} (x'''' : _90715 -> Prop) (t : type1402 _90715) (g : type686 _90715) (x : _90724) (f : _90715 -> _90724) (x''' : type684 _90715) (h1 : term674 _90715 _90724 t g x f x''') : term872 _90715 g x''' x''''.
Proof. exact (@lem3497635 _90715 _90724 x'''' t g x f x''' h1). Qed.
Lemma lem3497639 {_90715 _90724 : Type'} (x'''' : _90715 -> Prop) (t : type1402 _90715) (g : type686 _90715) (x : _90724) (f : _90715 -> _90724) (x''' : type684 _90715) (h1 : g x'''') (h2 : term674 _90715 _90724 t g x f x''') : term647 _90715 x''' x''''.
Proof. exact (@lem3497636 _90715 _90724 x'''' t g x f x''' h2 (@lem3497591 _90715 g x'''' h1)). Qed.
Lemma lem3497640 {_90715 _90724 : Type'} (x'''' : _90715 -> Prop) (t : type1402 _90715) (g : type686 _90715) (x : _90724) (f : _90715 -> _90724) (x''' : type684 _90715) (h1 : g x'''') (h2 : term674 _90715 _90724 t g x f x''') : term873 _90715 x''' x''''.
Proof. exact (fun h0 : term874 _90715 x''' x'''' => @lem3497639 _90715 _90724 x'''' t g x f x''' h1 h2). Qed.
Lemma lem3497642 (p : Prop) : (term828 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem3497643 {_90715 : Type'} (x''' : type684 _90715) (x'''' : _90715 -> Prop) : (term873 _90715 x''' x'''') = (term647 _90715 x''' x'''').
Proof. exact (@lem3497642 (term647 _90715 x''' x'''')). Qed.
Lemma lem3497644 {_90715 _90724 : Type'} (x'''' : _90715 -> Prop) (t : type1402 _90715) (g : type686 _90715) (x : _90724) (f : _90715 -> _90724) (x''' : type684 _90715) (h1 : g x'''') (h2 : term674 _90715 _90724 t g x f x''') : term647 _90715 x''' x''''.
Proof. exact (EQ_MP (@lem3497643 _90715 x''' x'''') (@lem3497640 _90715 _90724 x'''' t g x f x''' h1 h2)). Qed.
Lemma lem3497650 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem3497651 {_90715 : Type'} (g : type686 _90715) (_36926 : _90715 -> Prop) (u : _90715 -> Prop) (_36927 : _90715) : (term815 _90715 g _36926 u _36927) = (term875 _90715 g _36926 u _36927).
Proof. exact (@lem3497650 (term619 _90715 _36926 _36927) (term640 _90715 g _36926) (@I (_90715 -> Prop) u _36927)). Qed.
Lemma lem3497665 (q : Prop) (p : Prop) : (p \/ q) = (q \/ p).
Proof. exact (proj1 (@lem827 (@el Prop) p q)). Qed.
Lemma lem3497666 {_90715 : Type'} (u : _90715 -> Prop) (_36927 : _90715) (g : type686 _90715) (_36926 : _90715 -> Prop) : (term876 _90715 g _36926 u _36927) = (term877 _90715 u _36927 g _36926).
Proof. exact (@lem3497665 (@I (_90715 -> Prop) u _36927) (term640 _90715 g _36926)). Qed.
Lemma lem3497672 {_90715 : Type'} (_36926 : _90715 -> Prop) (_36927 : _90715) : (term629 _90715 _36926 _36927) = (term629 _90715 _36926 _36927).
Proof. exact (eq_refl (term629 _90715 _36926 _36927)). Qed.
Lemma lem3497673 {_90715 : Type'} (u : _90715 -> Prop) (_36927 : _90715) (g : type686 _90715) (_36926 : _90715 -> Prop) : (term875 _90715 g _36926 u _36927) = (term878 _90715 u _36927 g _36926).
Proof. exact (MK_COMB (@lem3497672 _90715 _36926 _36927) (@lem3497666 _90715 u _36927 g _36926)). Qed.
Lemma lem3497677 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem3497678 {_90715 : Type'} (u : _90715 -> Prop) (_36927 : _90715) (g : type686 _90715) (_36926 : _90715 -> Prop) : (term878 _90715 u _36927 g _36926) = (term879 _90715 u _36927 g _36926).
Proof. exact (@lem3497677 (@I (_90715 -> Prop) u _36927) (term619 _90715 _36926 _36927) (term640 _90715 g _36926)). Qed.
Lemma lem3497694 {_90715 : Type'} (u : _90715 -> Prop) (_36927 : _90715) (g : type686 _90715) (_36926 : _90715 -> Prop) : (term875 _90715 g _36926 u _36927) = (term879 _90715 u _36927 g _36926).
Proof. exact (TRANS (@lem3497673 _90715 u _36927 g _36926) (@lem3497678 _90715 u _36927 g _36926)). Qed.
Lemma lem3497695 {_90715 : Type'} (u : _90715 -> Prop) (_36927 : _90715) (g : type686 _90715) (_36926 : _90715 -> Prop) : (term815 _90715 g _36926 u _36927) = (term879 _90715 u _36927 g _36926).
Proof. exact (TRANS (@lem3497651 _90715 g _36926 u _36927) (@lem3497694 _90715 u _36927 g _36926)). Qed.
Lemma lem3497696 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem3497697 {_90715 : Type'} (u : _90715 -> Prop) (_36927 : _90715) (g : type686 _90715) (_36926 : _90715 -> Prop) : (term880 _90715 g _36926 u _36927) = (term881 _90715 u _36927 g _36926).
Proof. exact (MK_COMB (@lem3497696) (@lem3497695 _90715 u _36927 g _36926)). Qed.
Lemma lem3497711 (q : Prop) (p : Prop) : (p \/ q) = (q \/ p).
Proof. exact (proj1 (@lem827 (@el Prop) p q)). Qed.
Lemma lem3497712 {_90715 : Type'} (_36927 : _90715) (g : type686 _90715) (_36926 : _90715 -> Prop) : (term882 _90715 g _36926 _36927) = (term883 _90715 _36927 g _36926).
Proof. exact (@lem3497711 (term619 _90715 _36926 _36927) (term640 _90715 g _36926)). Qed.
Lemma lem3497718 {_90715 : Type'} (u : _90715 -> Prop) (_36927 : _90715) : (term884 _90715 u _36927) = (term884 _90715 u _36927).
Proof. exact (eq_refl (term884 _90715 u _36927)). Qed.
Lemma lem3497719 {_90715 : Type'} (u : _90715 -> Prop) (_36927 : _90715) (g : type686 _90715) (_36926 : _90715 -> Prop) : (term885 _90715 u g _36926 _36927) = (term879 _90715 u _36927 g _36926).
Proof. exact (MK_COMB (@lem3497718 _90715 u _36927) (@lem3497712 _90715 _36927 g _36926)). Qed.
Lemma lem3497730 {_90715 : Type'} (u : _90715 -> Prop) (_36927 : _90715) (g : type686 _90715) (_36926 : _90715 -> Prop) : ((term815 _90715 g _36926 u _36927) = (term885 _90715 u g _36926 _36927)) = ((term879 _90715 u _36927 g _36926) = (term879 _90715 u _36927 g _36926)).
Proof. exact (MK_COMB (@lem3497697 _90715 u _36927 g _36926) (@lem3497719 _90715 u _36927 g _36926)). Qed.
Lemma lem3497732 {A : Type'} (x : A) : (x = x) = True.
Proof. exact (EQ_MP (@lem20665 A x) (@lem20664 A x)). Qed.
Lemma lem3497733 (x : Prop) : (x = x) = True.
Proof. exact (@lem3497732 Prop x). Qed.
Lemma lem3497734 {_90715 : Type'} (u : _90715 -> Prop) (_36927 : _90715) (g : type686 _90715) (_36926 : _90715 -> Prop) : ((term879 _90715 u _36927 g _36926) = (term879 _90715 u _36927 g _36926)) = True.
Proof. exact (@lem3497733 (term879 _90715 u _36927 g _36926)). Qed.
Lemma lem3497735 {_90715 : Type'} (u : _90715 -> Prop) (g : type686 _90715) (_36926 : _90715 -> Prop) (_36927 : _90715) : ((term815 _90715 g _36926 u _36927) = (term885 _90715 u g _36926 _36927)) = True.
Proof. exact (TRANS (@lem3497730 _90715 u _36927 g _36926) (@lem3497734 _90715 u _36927 g _36926)). Qed.
Lemma lem3497736 {_90715 : Type'} (u : _90715 -> Prop) (g : type686 _90715) (_36926 : _90715 -> Prop) (_36927 : _90715) : True = ((term815 _90715 g _36926 u _36927) = (term885 _90715 u g _36926 _36927)).
Proof. exact (SYM (@lem3497735 _90715 u g _36926 _36927)). Qed.
Lemma lem3497737 {_90715 : Type'} (u : _90715 -> Prop) (g : type686 _90715) (_36926 : _90715 -> Prop) (_36927 : _90715) : (term815 _90715 g _36926 u _36927) = (term885 _90715 u g _36926 _36927).
Proof. exact (EQ_MP (@lem3497736 _90715 u g _36926 _36927) (@lem0)). Qed.
Lemma lem3497738 {_90715 _90724 : Type'} (_36926 : _90715 -> Prop) (_36927 : _90715) (g : type686 _90715) (u : _90715 -> Prop) (f : _90715 -> _90724) (h1 : term252 _90715 _90724 g u f) : term885 _90715 u g _36926 _36927.
Proof. exact (EQ_MP (@lem3497737 _90715 u g _36926 _36927) (@lem3497068 _90715 _90724 _36926 _36927 g u f h1)). Qed.
Lemma lem3497740 (b : Prop) (a : Prop) : (a \/ b) = (term833 b a).
Proof. exact (EQ_MP (@lem20682 b a) (@lem20764 b a)). Qed.
Lemma lem3497741 {_90715 : Type'} (g : type686 _90715) (_36926 : _90715 -> Prop) (u : _90715 -> Prop) (_36927 : _90715) : (term885 _90715 u g _36926 _36927) = (term886 _90715 g _36926 u _36927).
Proof. exact (@lem3497740 (term882 _90715 g _36926 _36927) (@I (_90715 -> Prop) u _36927)). Qed.
Lemma lem3497743 (a : Prop) (b : Prop) : (term887 a b) = (term888 a b).
Proof. exact (EQ_MP (@lem20789 a b) (@lem20895 a b)). Qed.
Lemma lem3497744 {_90715 : Type'} (g : type686 _90715) (_36926 : _90715 -> Prop) (_36927 : _90715) : (term889 _90715 g _36926 _36927) = (term890 _90715 g _36926 _36927).
Proof. exact (@lem3497743 (term640 _90715 g _36926) (term619 _90715 _36926 _36927)). Qed.
Lemma lem3497746 (a : Prop) : (term282 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem3497747 {_90715 : Type'} (g : type686 _90715) (_36926 : _90715 -> Prop) : (term835 _90715 g _36926) = (@I ((_90715 -> Prop) -> Prop) g _36926).
Proof. exact (@lem3497746 (@I ((_90715 -> Prop) -> Prop) g _36926)). Qed.
Lemma lem3497748 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem3497749 {_90715 : Type'} (g : type686 _90715) (_36926 : _90715 -> Prop) : (term891 _90715 g _36926) = (term678 _90715 g _36926).
Proof. exact (MK_COMB (@lem3497748) (@lem3497747 _90715 g _36926)). Qed.
Lemma lem3497751 (a : Prop) : (term282 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem3497752 {_90715 : Type'} (_36926 : _90715 -> Prop) (_36927 : _90715) : (term892 _90715 _36926 _36927) = (@I (_90715 -> Prop) _36926 _36927).
Proof. exact (@lem3497751 (@I (_90715 -> Prop) _36926 _36927)). Qed.
Lemma lem3497753 {_90715 : Type'} (g : type686 _90715) (_36926 : _90715 -> Prop) (_36927 : _90715) : (term890 _90715 g _36926 _36927) = (term893 _90715 g _36926 _36927).
Proof. exact (MK_COMB (@lem3497749 _90715 g _36926) (@lem3497752 _90715 _36926 _36927)). Qed.
Lemma lem3497754 {_90715 : Type'} (g : type686 _90715) (_36926 : _90715 -> Prop) (_36927 : _90715) : (term889 _90715 g _36926 _36927) = (term893 _90715 g _36926 _36927).
Proof. exact (TRANS (@lem3497744 _90715 g _36926 _36927) (@lem3497753 _90715 g _36926 _36927)). Qed.
Lemma lem3497755 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem3497756 {_90715 : Type'} (g : type686 _90715) (_36926 : _90715 -> Prop) (_36927 : _90715) : (term894 _90715 g _36926 _36927) = (term895 _90715 g _36926 _36927).
Proof. exact (MK_COMB (@lem3497755) (@lem3497754 _90715 g _36926 _36927)). Qed.
Lemma lem3497757 {_90715 : Type'} (u : _90715 -> Prop) (_36927 : _90715) : (@I (_90715 -> Prop) u _36927) = (@I (_90715 -> Prop) u _36927).
Proof. exact (eq_refl (@I (_90715 -> Prop) u _36927)). Qed.
Lemma lem3497758 {_90715 : Type'} (g : type686 _90715) (_36926 : _90715 -> Prop) (u : _90715 -> Prop) (_36927 : _90715) : (term886 _90715 g _36926 u _36927) = (term896 _90715 g _36926 u _36927).
Proof. exact (MK_COMB (@lem3497756 _90715 g _36926 _36927) (@lem3497757 _90715 u _36927)). Qed.
Lemma lem3497759 {_90715 : Type'} (g : type686 _90715) (_36926 : _90715 -> Prop) (u : _90715 -> Prop) (_36927 : _90715) : (term885 _90715 u g _36926 _36927) = (term896 _90715 g _36926 u _36927).
Proof. exact (TRANS (@lem3497741 _90715 g _36926 u _36927) (@lem3497758 _90715 g _36926 u _36927)). Qed.
Lemma lem3497761 {_90715 _90724 : Type'} (x'''' : _90715 -> Prop) (t : type1402 _90715) (g : type686 _90715) (x : _90724) (f : _90715 -> _90724) (x''' : type684 _90715) (h1 : g x'''') (h2 : term674 _90715 _90724 t g x f x''') : term897 _90715 g x''' x''''.
Proof. exact (conj (@lem3497584 _90715 g x'''' h1) (@lem3497644 _90715 _90724 x'''' t g x f x''' h1 h2)). Qed.
Lemma lem3497763 {_90715 _90724 : Type'} (_36926 : _90715 -> Prop) (_36927 : _90715) (g : type686 _90715) (u : _90715 -> Prop) (f : _90715 -> _90724) (h1 : term252 _90715 _90724 g u f) : term896 _90715 g _36926 u _36927.
Proof. exact (EQ_MP (@lem3497759 _90715 g _36926 u _36927) (@lem3497738 _90715 _90724 _36926 _36927 g u f h1)). Qed.
Lemma lem3497764 {_90715 _90724 : Type'} (_36926 : _90715 -> Prop) (_36927 : _90715) (g : type686 _90715) (u : _90715 -> Prop) (f : _90715 -> _90724) (h1 : term252 _90715 _90724 g u f) : term896 _90715 g _36926 u _36927.
Proof. exact (@lem3497763 _90715 _90724 _36926 _36927 g u f h1). Qed.
Lemma lem3497765 {_90715 _90724 : Type'} (x''' : type684 _90715) (x'''' : _90715 -> Prop) (g : type686 _90715) (u : _90715 -> Prop) (f : _90715 -> _90724) (h1 : term252 _90715 _90724 g u f) : term898 _90715 g u x''' x''''.
Proof. exact (@lem3497764 _90715 _90724 x'''' (@I ((_90715 -> Prop) -> _90715) x''' x'''') g u f h1). Qed.
Lemma lem3497768 {_90715 _90724 : Type'} (u : _90715 -> Prop) (x'''' : _90715 -> Prop) (t : type1402 _90715) (g : type686 _90715) (x : _90724) (f : _90715 -> _90724) (x''' : type684 _90715) (h1 : term252 _90715 _90724 g u f) (h2 : g x'''') (h3 : term674 _90715 _90724 t g x f x''') : term899 _90715 u x''' x''''.
Proof. exact (@lem3497765 _90715 _90724 x''' x'''' g u f h1 (@lem3497761 _90715 _90724 x'''' t g x f x''' h2 h3)). Qed.
Lemma lem3497769 {_90715 _90724 : Type'} (u : _90715 -> Prop) (x'''' : _90715 -> Prop) (t : type1402 _90715) (g : type686 _90715) (x : _90724) (f : _90715 -> _90724) (x''' : type684 _90715) (h1 : term252 _90715 _90724 g u f) (h2 : g x'''') (h3 : term674 _90715 _90724 t g x f x''') : term900 _90715 u x''' x''''.
Proof. exact (fun h0 : term901 _90715 u x''' x'''' => @lem3497768 _90715 _90724 u x'''' t g x f x''' h1 h2 h3). Qed.
Lemma lem3497771 (p : Prop) : (term828 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem3497772 {_90715 : Type'} (u : _90715 -> Prop) (x''' : type684 _90715) (x'''' : _90715 -> Prop) : (term900 _90715 u x''' x'''') = (term899 _90715 u x''' x'''').
Proof. exact (@lem3497771 (term899 _90715 u x''' x'''')). Qed.
Lemma lem3497773 {_90715 _90724 : Type'} (u : _90715 -> Prop) (x'''' : _90715 -> Prop) (t : type1402 _90715) (g : type686 _90715) (x : _90724) (f : _90715 -> _90724) (x''' : type684 _90715) (h1 : term252 _90715 _90724 g u f) (h2 : g x'''') (h3 : term674 _90715 _90724 t g x f x''') : term899 _90715 u x''' x''''.
Proof. exact (EQ_MP (@lem3497772 _90715 u x''' x'''') (@lem3497769 _90715 _90724 u x'''' t g x f x''' h1 h2 h3)). Qed.
Lemma lem3497775 {_90715 : Type'} (g : type686 _90715) (x'''' : _90715 -> Prop) (h1 : g x'''') : @I ((_90715 -> Prop) -> Prop) g x''''.
Proof. exact (EQ_MP (@lem3496429 _90715 g x'''') (@lem3496116 _90715 g x'''' h1)). Qed.
Lemma lem3497776 {_90715 : Type'} (g : type686 _90715) (x'''' : _90715 -> Prop) (h1 : g x'''') : term829 _90715 g x''''.
Proof. exact (fun h0 : term640 _90715 g x'''' => @lem3497775 _90715 g x'''' h1). Qed.
Lemma lem3497778 (p : Prop) : (term828 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem3497779 {_90715 : Type'} (g : type686 _90715) (x'''' : _90715 -> Prop) : (term829 _90715 g x'''') = (@I ((_90715 -> Prop) -> Prop) g x'''').
Proof. exact (@lem3497778 (@I ((_90715 -> Prop) -> Prop) g x'''')). Qed.
Lemma lem3497780 {_90715 : Type'} (g : type686 _90715) (x'''' : _90715 -> Prop) (h1 : g x'''') : @I ((_90715 -> Prop) -> Prop) g x''''.
Proof. exact (EQ_MP (@lem3497779 _90715 g x'''') (@lem3497776 _90715 g x'''' h1)). Qed.
Lemma lem3497782 {_90715 _90724 : Type'} (_36930 : _90715 -> Prop) (t : type1402 _90715) (g : type686 _90715) (x : _90724) (f : _90715 -> _90724) (x''' : type684 _90715) (h1 : term674 _90715 _90724 t g x f x''') : term853 _90715 _90724 g x f x''' _36930.
Proof. exact (EQ_MP (@lem3497488 _90715 _90724 g x f x''' _36930) (@lem3497477 _90715 _90724 _36930 t g x f x''' h1)). Qed.
Lemma lem3497783 {_90715 _90724 : Type'} (_36930 : _90715 -> Prop) (t : type1402 _90715) (g : type686 _90715) (x : _90724) (f : _90715 -> _90724) (x''' : type684 _90715) (h1 : term674 _90715 _90724 t g x f x''') : term853 _90715 _90724 g x f x''' _36930.
Proof. exact (@lem3497782 _90715 _90724 _36930 t g x f x''' h1). Qed.
Lemma lem3497784 {_90715 _90724 : Type'} (x'''' : _90715 -> Prop) (t : type1402 _90715) (g : type686 _90715) (x : _90724) (f : _90715 -> _90724) (x''' : type684 _90715) (h1 : term674 _90715 _90724 t g x f x''') : term853 _90715 _90724 g x f x''' x''''.
Proof. exact (@lem3497783 _90715 _90724 x'''' t g x f x''' h1). Qed.
Lemma lem3497787 {_90715 _90724 : Type'} (x'''' : _90715 -> Prop) (t : type1402 _90715) (g : type686 _90715) (x : _90724) (f : _90715 -> _90724) (x''' : type684 _90715) (h1 : g x'''') (h2 : term674 _90715 _90724 t g x f x''') : x = (term650 _90715 _90724 f x''' x'''').
Proof. exact (@lem3497784 _90715 _90724 x'''' t g x f x''' h2 (@lem3497780 _90715 g x'''' h1)). Qed.
Lemma lem3497788 {_90715 _90724 : Type'} (x'''' : _90715 -> Prop) (t : type1402 _90715) (g : type686 _90715) (x : _90724) (f : _90715 -> _90724) (x''' : type684 _90715) (h1 : g x'''') (h2 : term674 _90715 _90724 t g x f x''') : term854 _90715 _90724 x f x''' x''''.
Proof. exact (fun h0 : term855 _90715 _90724 x f x''' x'''' => @lem3497787 _90715 _90724 x'''' t g x f x''' h1 h2). Qed.
Lemma lem3497790 (p : Prop) : (term828 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem3497791 {_90715 _90724 : Type'} (x : _90724) (f : _90715 -> _90724) (x''' : type684 _90715) (x'''' : _90715 -> Prop) : (term854 _90715 _90724 x f x''' x'''') = (x = (term650 _90715 _90724 f x''' x'''')).
Proof. exact (@lem3497790 (x = (term650 _90715 _90724 f x''' x''''))). Qed.
Lemma lem3497792 {_90715 _90724 : Type'} (x'''' : _90715 -> Prop) (t : type1402 _90715) (g : type686 _90715) (x : _90724) (f : _90715 -> _90724) (x''' : type684 _90715) (h1 : g x'''') (h2 : term674 _90715 _90724 t g x f x''') : x = (term650 _90715 _90724 f x''' x'''').
Proof. exact (EQ_MP (@lem3497791 _90715 _90724 x f x''' x'''') (@lem3497788 _90715 _90724 x'''' t g x f x''' h1 h2)). Qed.
Lemma lem3497794 {_90715 : Type'} (g : type686 _90715) (x'''' : _90715 -> Prop) (h1 : g x'''') : @I ((_90715 -> Prop) -> Prop) g x''''.
Proof. exact (EQ_MP (@lem3496429 _90715 g x'''') (@lem3496116 _90715 g x'''' h1)). Qed.
Lemma lem3497795 {_90715 : Type'} (g : type686 _90715) (x'''' : _90715 -> Prop) (h1 : g x'''') : term829 _90715 g x''''.
Proof. exact (fun h0 : term640 _90715 g x'''' => @lem3497794 _90715 g x'''' h1). Qed.
Lemma lem3497797 (p : Prop) : (term828 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem3497798 {_90715 : Type'} (g : type686 _90715) (x'''' : _90715 -> Prop) : (term829 _90715 g x'''') = (@I ((_90715 -> Prop) -> Prop) g x'''').
Proof. exact (@lem3497797 (@I ((_90715 -> Prop) -> Prop) g x'''')). Qed.
Lemma lem3497799 {_90715 : Type'} (g : type686 _90715) (x'''' : _90715 -> Prop) (h1 : g x'''') : @I ((_90715 -> Prop) -> Prop) g x''''.
Proof. exact (EQ_MP (@lem3497798 _90715 g x'''') (@lem3497795 _90715 g x'''' h1)). Qed.
Lemma lem3497801 {_90715 _90724 : Type'} (_36930 : _90715 -> Prop) (t : type1402 _90715) (g : type686 _90715) (x : _90724) (f : _90715 -> _90724) (x''' : type684 _90715) (h1 : term674 _90715 _90724 t g x f x''') : term853 _90715 _90724 g x f x''' _36930.
Proof. exact (EQ_MP (@lem3497488 _90715 _90724 g x f x''' _36930) (@lem3497477 _90715 _90724 _36930 t g x f x''' h1)). Qed.
Lemma lem3497802 {_90715 _90724 : Type'} (_36930 : _90715 -> Prop) (t : type1402 _90715) (g : type686 _90715) (x : _90724) (f : _90715 -> _90724) (x''' : type684 _90715) (h1 : term674 _90715 _90724 t g x f x''') : term853 _90715 _90724 g x f x''' _36930.
Proof. exact (@lem3497801 _90715 _90724 _36930 t g x f x''' h1). Qed.
Lemma lem3497803 {_90715 _90724 : Type'} (x'''' : _90715 -> Prop) (t : type1402 _90715) (g : type686 _90715) (x : _90724) (f : _90715 -> _90724) (x''' : type684 _90715) (h1 : term674 _90715 _90724 t g x f x''') : term853 _90715 _90724 g x f x''' x''''.
Proof. exact (@lem3497802 _90715 _90724 x'''' t g x f x''' h1). Qed.
Lemma lem3497806 {_90715 _90724 : Type'} (x'''' : _90715 -> Prop) (t : type1402 _90715) (g : type686 _90715) (x : _90724) (f : _90715 -> _90724) (x''' : type684 _90715) (h1 : g x'''') (h2 : term674 _90715 _90724 t g x f x''') : x = (term650 _90715 _90724 f x''' x'''').
Proof. exact (@lem3497803 _90715 _90724 x'''' t g x f x''' h2 (@lem3497799 _90715 g x'''' h1)). Qed.
Lemma lem3497807 {_90715 _90724 : Type'} (x'''' : _90715 -> Prop) (t : type1402 _90715) (g : type686 _90715) (x : _90724) (f : _90715 -> _90724) (x''' : type684 _90715) (h1 : g x'''') (h2 : term674 _90715 _90724 t g x f x''') : term854 _90715 _90724 x f x''' x''''.
Proof. exact (fun h0 : term855 _90715 _90724 x f x''' x'''' => @lem3497806 _90715 _90724 x'''' t g x f x''' h1 h2). Qed.
Lemma lem3497809 (p : Prop) : (term828 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem3497810 {_90715 _90724 : Type'} (x : _90724) (f : _90715 -> _90724) (x''' : type684 _90715) (x'''' : _90715 -> Prop) : (term854 _90715 _90724 x f x''' x'''') = (x = (term650 _90715 _90724 f x''' x'''')).
Proof. exact (@lem3497809 (x = (term650 _90715 _90724 f x''' x''''))). Qed.
Lemma lem3497811 {_90715 _90724 : Type'} (x'''' : _90715 -> Prop) (t : type1402 _90715) (g : type686 _90715) (x : _90724) (f : _90715 -> _90724) (x''' : type684 _90715) (h1 : g x'''') (h2 : term674 _90715 _90724 t g x f x''') : x = (term650 _90715 _90724 f x''' x'''').
Proof. exact (EQ_MP (@lem3497810 _90715 _90724 x f x''' x'''') (@lem3497807 _90715 _90724 x'''' t g x f x''' h1 h2)). Qed.
Lemma lem3497813 {_90715 _90724 : Type'} (_36929 : _90715) (t : type1402 _90715) (g : type686 _90715) (x : _90724) (f : _90715 -> _90724) (x''' : type684 _90715) (h1 : term674 _90715 _90724 t g x f x''') : term863 _90715 _90724 x f g t _36929.
Proof. exact (EQ_MP (@lem3497564 _90715 _90724 x f g t _36929) (@lem3497553 _90715 _90724 _36929 t g x f x''' h1)). Qed.
Lemma lem3497814 {_90715 _90724 : Type'} (_36929 : _90715) (t : type1402 _90715) (g : type686 _90715) (x : _90724) (f : _90715 -> _90724) (x''' : type684 _90715) (h1 : term674 _90715 _90724 t g x f x''') : term863 _90715 _90724 x f g t _36929.
Proof. exact (@lem3497813 _90715 _90724 _36929 t g x f x''' h1). Qed.
Lemma lem3497815 {_90715 _90724 : Type'} (x'''' : _90715 -> Prop) (t : type1402 _90715) (g : type686 _90715) (x : _90724) (f : _90715 -> _90724) (x''' : type684 _90715) (h1 : term674 _90715 _90724 t g x f x''') : term864 _90715 _90724 x f g t x''' x''''.
Proof. exact (@lem3497814 _90715 _90724 (@I ((_90715 -> Prop) -> _90715) x''' x'''') t g x f x''' h1). Qed.
Lemma lem3497818 {_90715 _90724 : Type'} (x'''' : _90715 -> Prop) (t : type1402 _90715) (g : type686 _90715) (x : _90724) (f : _90715 -> _90724) (x''' : type684 _90715) (h1 : g x'''') (h2 : term674 _90715 _90724 t g x f x''') : term865 _90715 g t x''' x''''.
Proof. exact (@lem3497815 _90715 _90724 x'''' t g x f x''' h2 (@lem3497811 _90715 _90724 x'''' t g x f x''' h1 h2)). Qed.
Lemma lem3497819 {_90715 _90724 : Type'} (x'''' : _90715 -> Prop) (t : type1402 _90715) (g : type686 _90715) (x : _90724) (f : _90715 -> _90724) (x''' : type684 _90715) (h1 : g x'''') (h2 : term674 _90715 _90724 t g x f x''') : term866 _90715 g t x''' x''''.
Proof. exact (fun h0 : term867 _90715 g t x''' x'''' => @lem3497818 _90715 _90724 x'''' t g x f x''' h1 h2). Qed.
Lemma lem3497821 (p : Prop) : (term828 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem3497822 {_90715 : Type'} (g : type686 _90715) (t : type1402 _90715) (x''' : type684 _90715) (x'''' : _90715 -> Prop) : (term866 _90715 g t x''' x'''') = (term865 _90715 g t x''' x'''').
Proof. exact (@lem3497821 (term865 _90715 g t x''' x'''')). Qed.
Lemma lem3497823 {_90715 _90724 : Type'} (x'''' : _90715 -> Prop) (t : type1402 _90715) (g : type686 _90715) (x : _90724) (f : _90715 -> _90724) (x''' : type684 _90715) (h1 : g x'''') (h2 : term674 _90715 _90724 t g x f x''') : term865 _90715 g t x''' x''''.
Proof. exact (EQ_MP (@lem3497822 _90715 g t x''' x'''') (@lem3497819 _90715 _90724 x'''' t g x f x''' h1 h2)). Qed.
Lemma lem3497825 {_90715 _90724 : Type'} (_36930 : _90715 -> Prop) (t : type1402 _90715) (g : type686 _90715) (x : _90724) (f : _90715 -> _90724) (x''' : type684 _90715) (h1 : term674 _90715 _90724 t g x f x''') : term853 _90715 _90724 g x f x''' _36930.
Proof. exact (EQ_MP (@lem3497488 _90715 _90724 g x f x''' _36930) (@lem3497477 _90715 _90724 _36930 t g x f x''' h1)). Qed.
Lemma lem3497826 {_90715 _90724 : Type'} (_36930 : _90715 -> Prop) (t : type1402 _90715) (g : type686 _90715) (x : _90724) (f : _90715 -> _90724) (x''' : type684 _90715) (h1 : term674 _90715 _90724 t g x f x''') : term853 _90715 _90724 g x f x''' _36930.
Proof. exact (@lem3497825 _90715 _90724 _36930 t g x f x''' h1). Qed.
Lemma lem3497827 {_90715 _90724 : Type'} (x'''' : _90715 -> Prop) (t : type1402 _90715) (g : type686 _90715) (x : _90724) (f : _90715 -> _90724) (x''' : type684 _90715) (h1 : term674 _90715 _90724 t g x f x''') : term902 _90715 _90724 g x f t x''' x''''.
Proof. exact (@lem3497826 _90715 _90724 (term903 _90715 t x''' x'''') t g x f x''' h1). Qed.
Lemma lem3497830 {_90715 _90724 : Type'} (x'''' : _90715 -> Prop) (t : type1402 _90715) (g : type686 _90715) (x : _90724) (f : _90715 -> _90724) (x''' : type684 _90715) (h1 : g x'''') (h2 : term674 _90715 _90724 t g x f x''') : x = (term904 _90715 _90724 f t x''' x'''').
Proof. exact (@lem3497827 _90715 _90724 x'''' t g x f x''' h2 (@lem3497823 _90715 _90724 x'''' t g x f x''' h1 h2)). Qed.
Lemma lem3497831 {_90715 _90724 : Type'} (x'''' : _90715 -> Prop) (t : type1402 _90715) (g : type686 _90715) (x : _90724) (f : _90715 -> _90724) (x''' : type684 _90715) (h1 : g x'''') (h2 : term674 _90715 _90724 t g x f x''') : term905 _90715 _90724 x f t x''' x''''.
Proof. exact (fun h0 : term906 _90715 _90724 x f t x''' x'''' => @lem3497830 _90715 _90724 x'''' t g x f x''' h1 h2). Qed.
Lemma lem3497833 (p : Prop) : (term828 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem3497834 {_90715 _90724 : Type'} (x : _90724) (f : _90715 -> _90724) (t : type1402 _90715) (x''' : type684 _90715) (x'''' : _90715 -> Prop) : (term905 _90715 _90724 x f t x''' x'''') = (x = (term904 _90715 _90724 f t x''' x'''')).
Proof. exact (@lem3497833 (x = (term904 _90715 _90724 f t x''' x''''))). Qed.
Lemma lem3497835 {_90715 _90724 : Type'} (x'''' : _90715 -> Prop) (t : type1402 _90715) (g : type686 _90715) (x : _90724) (f : _90715 -> _90724) (x''' : type684 _90715) (h1 : g x'''') (h2 : term674 _90715 _90724 t g x f x''') : x = (term904 _90715 _90724 f t x''' x'''').
Proof. exact (EQ_MP (@lem3497834 _90715 _90724 x f t x''' x'''') (@lem3497831 _90715 _90724 x'''' t g x f x''' h1 h2)). Qed.
Lemma lem3497853 (q : Prop) (p : Prop) : (p \/ q) = (q \/ p).
Proof. exact (proj1 (@lem827 (@el Prop) p q)). Qed.
Lemma lem3497854 {_90724 : Type'} (y : _90724) (x : _90724) (z : _90724) : (term907 _90724 x y z) = (term908 _90724 y x z).
Proof. exact (@lem3497853 (y = z) (term909 _90724 x z)). Qed.
Lemma lem3497864 {_90724 : Type'} (x : _90724) (y : _90724) : (term910 _90724 x y) = (term910 _90724 x y).
Proof. exact (eq_refl (term910 _90724 x y)). Qed.
Lemma lem3497865 {_90724 : Type'} (y : _90724) (x : _90724) (z : _90724) : (term848 _90724 x y z) = (term911 _90724 y x z).
Proof. exact (MK_COMB (@lem3497864 _90724 x y) (@lem3497854 _90724 y x z)). Qed.
Lemma lem3497869 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem3497870 {_90724 : Type'} (y : _90724) (x : _90724) (z : _90724) : (term911 _90724 y x z) = (term912 _90724 y x z).
Proof. exact (@lem3497869 (y = z) (term909 _90724 x y) (term909 _90724 x z)). Qed.
Lemma lem3497892 {_90724 : Type'} (y : _90724) (x : _90724) (z : _90724) : (term848 _90724 x y z) = (term912 _90724 y x z).
Proof. exact (TRANS (@lem3497865 _90724 y x z) (@lem3497870 _90724 y x z)). Qed.
Lemma lem3497893 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem3497894 {_90724 : Type'} (y : _90724) (x : _90724) (z : _90724) : (term913 _90724 x y z) = (term914 _90724 y x z).
Proof. exact (MK_COMB (@lem3497893) (@lem3497892 _90724 y x z)). Qed.
Lemma lem3497916 {_90724 : Type'} (y : _90724) (x : _90724) (z : _90724) : (term912 _90724 y x z) = (term912 _90724 y x z).
Proof. exact (eq_refl (term912 _90724 y x z)). Qed.
Lemma lem3497917 {_90724 : Type'} (y : _90724) (x : _90724) (z : _90724) : ((term848 _90724 x y z) = (term912 _90724 y x z)) = ((term912 _90724 y x z) = (term912 _90724 y x z)).
Proof. exact (MK_COMB (@lem3497894 _90724 y x z) (@lem3497916 _90724 y x z)). Qed.
Lemma lem3497919 {A : Type'} (x : A) : (x = x) = True.
Proof. exact (EQ_MP (@lem20665 A x) (@lem20664 A x)). Qed.
Lemma lem3497920 (x : Prop) : (x = x) = True.
Proof. exact (@lem3497919 Prop x). Qed.
Lemma lem3497921 {_90724 : Type'} (y : _90724) (x : _90724) (z : _90724) : ((term912 _90724 y x z) = (term912 _90724 y x z)) = True.
Proof. exact (@lem3497920 (term912 _90724 y x z)). Qed.
Lemma lem3497922 {_90724 : Type'} (y : _90724) (x : _90724) (z : _90724) : ((term848 _90724 x y z) = (term912 _90724 y x z)) = True.
Proof. exact (TRANS (@lem3497917 _90724 y x z) (@lem3497921 _90724 y x z)). Qed.
Lemma lem3497923 {_90724 : Type'} (y : _90724) (x : _90724) (z : _90724) : True = ((term848 _90724 x y z) = (term912 _90724 y x z)).
Proof. exact (SYM (@lem3497922 _90724 y x z)). Qed.
Lemma lem3497924 {_90724 : Type'} (y : _90724) (x : _90724) (z : _90724) : (term848 _90724 x y z) = (term912 _90724 y x z).
Proof. exact (EQ_MP (@lem3497923 _90724 y x z) (@lem0)). Qed.
Lemma lem3497925 {_90724 : Type'} (y : _90724) (x : _90724) (z : _90724) : term912 _90724 y x z.
Proof. exact (EQ_MP (@lem3497924 _90724 y x z) (@lem3497425 _90724 x y z)). Qed.
Lemma lem3497927 (b : Prop) (a : Prop) : (a \/ b) = (term833 b a).
Proof. exact (EQ_MP (@lem20682 b a) (@lem20764 b a)). Qed.
Lemma lem3497928 {_90724 : Type'} (x : _90724) (y : _90724) (z : _90724) : (term912 _90724 y x z) = (term915 _90724 x y z).
Proof. exact (@lem3497927 (term916 _90724 y x z) (y = z)). Qed.
Lemma lem3497930 (a : Prop) (b : Prop) : (term887 a b) = (term888 a b).
Proof. exact (EQ_MP (@lem20789 a b) (@lem20895 a b)). Qed.
Lemma lem3497931 {_90724 : Type'} (y : _90724) (x : _90724) (z : _90724) : (term917 _90724 y x z) = (term918 _90724 y x z).
Proof. exact (@lem3497930 (term909 _90724 x y) (term909 _90724 x z)). Qed.
Lemma lem3497933 (a : Prop) : (term282 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem3497934 {_90724 : Type'} (x : _90724) (y : _90724) : (term919 _90724 x y) = (x = y).
Proof. exact (@lem3497933 (x = y)). Qed.
Lemma lem3497935 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem3497936 {_90724 : Type'} (x : _90724) (y : _90724) : (term920 _90724 x y) = (term921 _90724 x y).
Proof. exact (MK_COMB (@lem3497935) (@lem3497934 _90724 x y)). Qed.
Lemma lem3497938 (a : Prop) : (term282 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem3497939 {_90724 : Type'} (x : _90724) (z : _90724) : (term919 _90724 x z) = (x = z).
Proof. exact (@lem3497938 (x = z)). Qed.
Lemma lem3497940 {_90724 : Type'} (y : _90724) (x : _90724) (z : _90724) : (term918 _90724 y x z) = (term922 _90724 y x z).
Proof. exact (MK_COMB (@lem3497936 _90724 x y) (@lem3497939 _90724 x z)). Qed.
Lemma lem3497941 {_90724 : Type'} (y : _90724) (x : _90724) (z : _90724) : (term917 _90724 y x z) = (term922 _90724 y x z).
Proof. exact (TRANS (@lem3497931 _90724 y x z) (@lem3497940 _90724 y x z)). Qed.
Lemma lem3497942 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem3497943 {_90724 : Type'} (y : _90724) (x : _90724) (z : _90724) : (term923 _90724 y x z) = (term924 _90724 y x z).
Proof. exact (MK_COMB (@lem3497942) (@lem3497941 _90724 y x z)). Qed.
Lemma lem3497944 {_90724 : Type'} (y : _90724) (z : _90724) : (y = z) = (y = z).
Proof. exact (eq_refl (y = z)). Qed.
Lemma lem3497945 {_90724 : Type'} (x : _90724) (y : _90724) (z : _90724) : (term915 _90724 x y z) = (term925 _90724 x y z).
Proof. exact (MK_COMB (@lem3497943 _90724 y x z) (@lem3497944 _90724 y z)). Qed.
Lemma lem3497946 {_90724 : Type'} (x : _90724) (y : _90724) (z : _90724) : (term912 _90724 y x z) = (term925 _90724 x y z).
Proof. exact (TRANS (@lem3497928 _90724 x y z) (@lem3497945 _90724 x y z)). Qed.
Lemma lem3497948 {_90715 _90724 : Type'} (x'''' : _90715 -> Prop) (t : type1402 _90715) (g : type686 _90715) (x : _90724) (f : _90715 -> _90724) (x''' : type684 _90715) (h1 : g x'''') (h2 : term674 _90715 _90724 t g x f x''') : term926 _90715 _90724 x f t x''' x''''.
Proof. exact (conj (@lem3497792 _90715 _90724 x'''' t g x f x''' h1 h2) (@lem3497835 _90715 _90724 x'''' t g x f x''' h1 h2)). Qed.
Lemma lem3497950 {_90724 : Type'} (x : _90724) (y : _90724) (z : _90724) : term925 _90724 x y z.
Proof. exact (EQ_MP (@lem3497946 _90724 x y z) (@lem3497925 _90724 y x z)). Qed.
Lemma lem3497951 {_90724 : Type'} (x : _90724) (y : _90724) (z : _90724) : term925 _90724 x y z.
Proof. exact (@lem3497950 _90724 x y z). Qed.
Lemma lem3497952 {_90715 _90724 : Type'} (x : _90724) (f : _90715 -> _90724) (t : type1402 _90715) (x''' : type684 _90715) (x'''' : _90715 -> Prop) : term927 _90715 _90724 x f t x''' x''''.
Proof. exact (@lem3497951 _90724 x (term650 _90715 _90724 f x''' x'''') (term904 _90715 _90724 f t x''' x'''')). Qed.
Lemma lem3497955 {_90715 _90724 : Type'} (x'''' : _90715 -> Prop) (t : type1402 _90715) (g : type686 _90715) (x : _90724) (f : _90715 -> _90724) (x''' : type684 _90715) (h1 : g x'''') (h2 : term674 _90715 _90724 t g x f x''') : (term650 _90715 _90724 f x''' x'''') = (term904 _90715 _90724 f t x''' x'''').
Proof. exact (@lem3497952 _90715 _90724 x f t x''' x'''' (@lem3497948 _90715 _90724 x'''' t g x f x''' h1 h2)). Qed.
Lemma lem3497956 {_90715 _90724 : Type'} (x'''' : _90715 -> Prop) (t : type1402 _90715) (g : type686 _90715) (x : _90724) (f : _90715 -> _90724) (x''' : type684 _90715) (h1 : g x'''') (h2 : term674 _90715 _90724 t g x f x''') : term928 _90715 _90724 f t x''' x''''.
Proof. exact (fun h0 : term929 _90715 _90724 f t x''' x'''' => @lem3497955 _90715 _90724 x'''' t g x f x''' h1 h2). Qed.
Lemma lem3497958 (p : Prop) : (term828 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem3497959 {_90715 _90724 : Type'} (f : _90715 -> _90724) (t : type1402 _90715) (x''' : type684 _90715) (x'''' : _90715 -> Prop) : (term928 _90715 _90724 f t x''' x'''') = ((term650 _90715 _90724 f x''' x'''') = (term904 _90715 _90724 f t x''' x'''')).
Proof. exact (@lem3497958 ((term650 _90715 _90724 f x''' x'''') = (term904 _90715 _90724 f t x''' x''''))). Qed.
Lemma lem3497960 {_90715 _90724 : Type'} (x'''' : _90715 -> Prop) (t : type1402 _90715) (g : type686 _90715) (x : _90724) (f : _90715 -> _90724) (x''' : type684 _90715) (h1 : g x'''') (h2 : term674 _90715 _90724 t g x f x''') : (term650 _90715 _90724 f x''' x'''') = (term904 _90715 _90724 f t x''' x'''').
Proof. exact (EQ_MP (@lem3497959 _90715 _90724 f t x''' x'''') (@lem3497956 _90715 _90724 x'''' t g x f x''' h1 h2)). Qed.
Lemma lem3497962 {_90715 : Type'} (g : type686 _90715) (x'''' : _90715 -> Prop) (h1 : g x'''') : @I ((_90715 -> Prop) -> Prop) g x''''.
Proof. exact (EQ_MP (@lem3496429 _90715 g x'''') (@lem3496116 _90715 g x'''' h1)). Qed.
Lemma lem3497963 {_90715 : Type'} (g : type686 _90715) (x'''' : _90715 -> Prop) (h1 : g x'''') : term829 _90715 g x''''.
Proof. exact (fun h0 : term640 _90715 g x'''' => @lem3497962 _90715 g x'''' h1). Qed.
Lemma lem3497965 (p : Prop) : (term828 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem3497966 {_90715 : Type'} (g : type686 _90715) (x'''' : _90715 -> Prop) : (term829 _90715 g x'''') = (@I ((_90715 -> Prop) -> Prop) g x'''').
Proof. exact (@lem3497965 (@I ((_90715 -> Prop) -> Prop) g x'''')). Qed.
Lemma lem3497967 {_90715 : Type'} (g : type686 _90715) (x'''' : _90715 -> Prop) (h1 : g x'''') : @I ((_90715 -> Prop) -> Prop) g x''''.
Proof. exact (EQ_MP (@lem3497966 _90715 g x'''') (@lem3497963 _90715 g x'''' h1)). Qed.
Lemma lem3497969 {_90715 _90724 : Type'} (_36930 : _90715 -> Prop) (t : type1402 _90715) (g : type686 _90715) (x : _90724) (f : _90715 -> _90724) (x''' : type684 _90715) (h1 : term674 _90715 _90724 t g x f x''') : term853 _90715 _90724 g x f x''' _36930.
Proof. exact (EQ_MP (@lem3497488 _90715 _90724 g x f x''' _36930) (@lem3497477 _90715 _90724 _36930 t g x f x''' h1)). Qed.
Lemma lem3497970 {_90715 _90724 : Type'} (_36930 : _90715 -> Prop) (t : type1402 _90715) (g : type686 _90715) (x : _90724) (f : _90715 -> _90724) (x''' : type684 _90715) (h1 : term674 _90715 _90724 t g x f x''') : term853 _90715 _90724 g x f x''' _36930.
Proof. exact (@lem3497969 _90715 _90724 _36930 t g x f x''' h1). Qed.
Lemma lem3497971 {_90715 _90724 : Type'} (x'''' : _90715 -> Prop) (t : type1402 _90715) (g : type686 _90715) (x : _90724) (f : _90715 -> _90724) (x''' : type684 _90715) (h1 : term674 _90715 _90724 t g x f x''') : term853 _90715 _90724 g x f x''' x''''.
Proof. exact (@lem3497970 _90715 _90724 x'''' t g x f x''' h1). Qed.
Lemma lem3497974 {_90715 _90724 : Type'} (x'''' : _90715 -> Prop) (t : type1402 _90715) (g : type686 _90715) (x : _90724) (f : _90715 -> _90724) (x''' : type684 _90715) (h1 : g x'''') (h2 : term674 _90715 _90724 t g x f x''') : x = (term650 _90715 _90724 f x''' x'''').
Proof. exact (@lem3497971 _90715 _90724 x'''' t g x f x''' h2 (@lem3497967 _90715 g x'''' h1)). Qed.
Lemma lem3497975 {_90715 _90724 : Type'} (x'''' : _90715 -> Prop) (t : type1402 _90715) (g : type686 _90715) (x : _90724) (f : _90715 -> _90724) (x''' : type684 _90715) (h1 : g x'''') (h2 : term674 _90715 _90724 t g x f x''') : term854 _90715 _90724 x f x''' x''''.
Proof. exact (fun h0 : term855 _90715 _90724 x f x''' x'''' => @lem3497974 _90715 _90724 x'''' t g x f x''' h1 h2). Qed.
Lemma lem3497977 (p : Prop) : (term828 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem3497978 {_90715 _90724 : Type'} (x : _90724) (f : _90715 -> _90724) (x''' : type684 _90715) (x'''' : _90715 -> Prop) : (term854 _90715 _90724 x f x''' x'''') = (x = (term650 _90715 _90724 f x''' x'''')).
Proof. exact (@lem3497977 (x = (term650 _90715 _90724 f x''' x''''))). Qed.
Lemma lem3497979 {_90715 _90724 : Type'} (x'''' : _90715 -> Prop) (t : type1402 _90715) (g : type686 _90715) (x : _90724) (f : _90715 -> _90724) (x''' : type684 _90715) (h1 : g x'''') (h2 : term674 _90715 _90724 t g x f x''') : x = (term650 _90715 _90724 f x''' x'''').
Proof. exact (EQ_MP (@lem3497978 _90715 _90724 x f x''' x'''') (@lem3497975 _90715 _90724 x'''' t g x f x''' h1 h2)). Qed.
Lemma lem3497981 {_90715 _90724 : Type'} (_36929 : _90715) (t : type1402 _90715) (g : type686 _90715) (x : _90724) (f : _90715 -> _90724) (x''' : type684 _90715) (h1 : term674 _90715 _90724 t g x f x''') : term863 _90715 _90724 x f g t _36929.
Proof. exact (EQ_MP (@lem3497564 _90715 _90724 x f g t _36929) (@lem3497553 _90715 _90724 _36929 t g x f x''' h1)). Qed.
Lemma lem3497982 {_90715 _90724 : Type'} (_36929 : _90715) (t : type1402 _90715) (g : type686 _90715) (x : _90724) (f : _90715 -> _90724) (x''' : type684 _90715) (h1 : term674 _90715 _90724 t g x f x''') : term863 _90715 _90724 x f g t _36929.
Proof. exact (@lem3497981 _90715 _90724 _36929 t g x f x''' h1). Qed.
Lemma lem3497983 {_90715 _90724 : Type'} (x'''' : _90715 -> Prop) (t : type1402 _90715) (g : type686 _90715) (x : _90724) (f : _90715 -> _90724) (x''' : type684 _90715) (h1 : term674 _90715 _90724 t g x f x''') : term864 _90715 _90724 x f g t x''' x''''.
Proof. exact (@lem3497982 _90715 _90724 (@I ((_90715 -> Prop) -> _90715) x''' x'''') t g x f x''' h1). Qed.
Lemma lem3497986 {_90715 _90724 : Type'} (x'''' : _90715 -> Prop) (t : type1402 _90715) (g : type686 _90715) (x : _90724) (f : _90715 -> _90724) (x''' : type684 _90715) (h1 : g x'''') (h2 : term674 _90715 _90724 t g x f x''') : term865 _90715 g t x''' x''''.
Proof. exact (@lem3497983 _90715 _90724 x'''' t g x f x''' h2 (@lem3497979 _90715 _90724 x'''' t g x f x''' h1 h2)). Qed.
Lemma lem3497987 {_90715 _90724 : Type'} (x'''' : _90715 -> Prop) (t : type1402 _90715) (g : type686 _90715) (x : _90724) (f : _90715 -> _90724) (x''' : type684 _90715) (h1 : g x'''') (h2 : term674 _90715 _90724 t g x f x''') : term866 _90715 g t x''' x''''.
Proof. exact (fun h0 : term867 _90715 g t x''' x'''' => @lem3497986 _90715 _90724 x'''' t g x f x''' h1 h2). Qed.
Lemma lem3497989 (p : Prop) : (term828 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem3497990 {_90715 : Type'} (g : type686 _90715) (t : type1402 _90715) (x''' : type684 _90715) (x'''' : _90715 -> Prop) : (term866 _90715 g t x''' x'''') = (term865 _90715 g t x''' x'''').
Proof. exact (@lem3497989 (term865 _90715 g t x''' x'''')). Qed.
Lemma lem3497991 {_90715 _90724 : Type'} (x'''' : _90715 -> Prop) (t : type1402 _90715) (g : type686 _90715) (x : _90724) (f : _90715 -> _90724) (x''' : type684 _90715) (h1 : g x'''') (h2 : term674 _90715 _90724 t g x f x''') : term865 _90715 g t x''' x''''.
Proof. exact (EQ_MP (@lem3497990 _90715 g t x''' x'''') (@lem3497987 _90715 _90724 x'''' t g x f x''' h1 h2)). Qed.
Lemma lem3497993 {_90715 _90724 : Type'} (_36930 : _90715 -> Prop) (t : type1402 _90715) (g : type686 _90715) (x : _90724) (f : _90715 -> _90724) (x''' : type684 _90715) (h1 : term674 _90715 _90724 t g x f x''') : term872 _90715 g x''' _36930.
Proof. exact (EQ_MP (@lem3497631 _90715 g x''' _36930) (@lem3497620 _90715 _90724 _36930 t g x f x''' h1)). Qed.
Lemma lem3497994 {_90715 _90724 : Type'} (_36930 : _90715 -> Prop) (t : type1402 _90715) (g : type686 _90715) (x : _90724) (f : _90715 -> _90724) (x''' : type684 _90715) (h1 : term674 _90715 _90724 t g x f x''') : term872 _90715 g x''' _36930.
Proof. exact (@lem3497993 _90715 _90724 _36930 t g x f x''' h1). Qed.
Lemma lem3497995 {_90715 _90724 : Type'} (x'''' : _90715 -> Prop) (t : type1402 _90715) (g : type686 _90715) (x : _90724) (f : _90715 -> _90724) (x''' : type684 _90715) (h1 : term674 _90715 _90724 t g x f x''') : term930 _90715 g t x''' x''''.
Proof. exact (@lem3497994 _90715 _90724 (term903 _90715 t x''' x'''') t g x f x''' h1). Qed.
Lemma lem3497998 {_90715 _90724 : Type'} (x'''' : _90715 -> Prop) (t : type1402 _90715) (g : type686 _90715) (x : _90724) (f : _90715 -> _90724) (x''' : type684 _90715) (h1 : g x'''') (h2 : term674 _90715 _90724 t g x f x''') : term931 _90715 t x''' x''''.
Proof. exact (@lem3497995 _90715 _90724 x'''' t g x f x''' h2 (@lem3497991 _90715 _90724 x'''' t g x f x''' h1 h2)). Qed.
Lemma lem3497999 {_90715 _90724 : Type'} (x'''' : _90715 -> Prop) (t : type1402 _90715) (g : type686 _90715) (x : _90724) (f : _90715 -> _90724) (x''' : type684 _90715) (h1 : g x'''') (h2 : term674 _90715 _90724 t g x f x''') : term932 _90715 t x''' x''''.
Proof. exact (fun h0 : term933 _90715 t x''' x'''' => @lem3497998 _90715 _90724 x'''' t g x f x''' h1 h2). Qed.
Lemma lem3498001 (p : Prop) : (term828 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem3498002 {_90715 : Type'} (t : type1402 _90715) (x''' : type684 _90715) (x'''' : _90715 -> Prop) : (term932 _90715 t x''' x'''') = (term931 _90715 t x''' x'''').
Proof. exact (@lem3498001 (term931 _90715 t x''' x'''')). Qed.
Lemma lem3498003 {_90715 _90724 : Type'} (x'''' : _90715 -> Prop) (t : type1402 _90715) (g : type686 _90715) (x : _90724) (f : _90715 -> _90724) (x''' : type684 _90715) (h1 : g x'''') (h2 : term674 _90715 _90724 t g x f x''') : term931 _90715 t x''' x''''.
Proof. exact (EQ_MP (@lem3498002 _90715 t x''' x'''') (@lem3497999 _90715 _90724 x'''' t g x f x''' h1 h2)). Qed.
Lemma lem3498009 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem3498010 {_90715 _90724 : Type'} (u : _90715 -> Prop) (g : type686 _90715) (f : _90715 -> _90724) (_36928 : _90715) (_36926 : _90715 -> Prop) (_36927 : _90715) : (term820 _90715 _90724 g u f _36928 _36926 _36927) = (term934 _90715 _90724 u g f _36928 _36926 _36927).
Proof. exact (@lem3498009 (term619 _90715 u _36927) (term640 _90715 g _36926) (term818 _90715 _90724 f _36928 _36926 _36927)). Qed.
Lemma lem3498024 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem3498025 {_90715 _90724 : Type'} (f : _90715 -> _90724) (g : type686 _90715) (_36928 : _90715) (_36926 : _90715 -> Prop) (_36927 : _90715) : (term935 _90715 _90724 g f _36928 _36926 _36927) = (term936 _90715 _90724 f g _36928 _36926 _36927).
Proof. exact (@lem3498024 (term623 _90715 _90724 _36927 f _36928) (term640 _90715 g _36926) (term937 _90715 _36928 _36926 _36927)). Qed.
Lemma lem3498041 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem3498042 {_90715 : Type'} (_36928 : _90715) (g : type686 _90715) (_36926 : _90715 -> Prop) (_36927 : _90715) : (term938 _90715 g _36928 _36926 _36927) = (term939 _90715 _36928 g _36926 _36927).
Proof. exact (@lem3498041 (term619 _90715 _36926 _36928) (term640 _90715 g _36926) (@I (_90715 -> Prop) _36926 _36927)). Qed.
Lemma lem3498056 (q : Prop) (p : Prop) : (p \/ q) = (q \/ p).
Proof. exact (proj1 (@lem827 (@el Prop) p q)). Qed.
Lemma lem3498057 {_90715 : Type'} (_36927 : _90715) (g : type686 _90715) (_36926 : _90715 -> Prop) : (term680 _90715 g _36926 _36927) = (term830 _90715 _36927 g _36926).
Proof. exact (@lem3498056 (@I (_90715 -> Prop) _36926 _36927) (term640 _90715 g _36926)). Qed.
Lemma lem3498063 {_90715 : Type'} (_36926 : _90715 -> Prop) (_36928 : _90715) : (term629 _90715 _36926 _36928) = (term629 _90715 _36926 _36928).
Proof. exact (eq_refl (term629 _90715 _36926 _36928)). Qed.
Lemma lem3498064 {_90715 : Type'} (_36928 : _90715) (_36927 : _90715) (g : type686 _90715) (_36926 : _90715 -> Prop) : (term939 _90715 _36928 g _36926 _36927) = (term940 _90715 _36928 _36927 g _36926).
Proof. exact (MK_COMB (@lem3498063 _90715 _36926 _36928) (@lem3498057 _90715 _36927 g _36926)). Qed.
Lemma lem3498068 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem3498069 {_90715 : Type'} (_36927 : _90715) (_36928 : _90715) (g : type686 _90715) (_36926 : _90715 -> Prop) : (term940 _90715 _36928 _36927 g _36926) = (term941 _90715 _36927 _36928 g _36926).
Proof. exact (@lem3498068 (@I (_90715 -> Prop) _36926 _36927) (term619 _90715 _36926 _36928) (term640 _90715 g _36926)). Qed.
Lemma lem3498085 {_90715 : Type'} (_36927 : _90715) (_36928 : _90715) (g : type686 _90715) (_36926 : _90715 -> Prop) : (term939 _90715 _36928 g _36926 _36927) = (term941 _90715 _36927 _36928 g _36926).
Proof. exact (TRANS (@lem3498064 _90715 _36928 _36927 g _36926) (@lem3498069 _90715 _36927 _36928 g _36926)). Qed.
Lemma lem3498086 {_90715 : Type'} (_36927 : _90715) (_36928 : _90715) (g : type686 _90715) (_36926 : _90715 -> Prop) : (term938 _90715 g _36928 _36926 _36927) = (term941 _90715 _36927 _36928 g _36926).
Proof. exact (TRANS (@lem3498042 _90715 _36928 g _36926 _36927) (@lem3498085 _90715 _36927 _36928 g _36926)). Qed.
Lemma lem3498087 {_90715 _90724 : Type'} (_36927 : _90715) (f : _90715 -> _90724) (_36928 : _90715) : (term625 _90715 _90724 _36927 f _36928) = (term625 _90715 _90724 _36927 f _36928).
Proof. exact (eq_refl (term625 _90715 _90724 _36927 f _36928)). Qed.
Lemma lem3498088 {_90715 _90724 : Type'} (f : _90715 -> _90724) (_36927 : _90715) (_36928 : _90715) (g : type686 _90715) (_36926 : _90715 -> Prop) : (term936 _90715 _90724 f g _36928 _36926 _36927) = (term942 _90715 _90724 f _36927 _36928 g _36926).
Proof. exact (MK_COMB (@lem3498087 _90715 _90724 _36927 f _36928) (@lem3498086 _90715 _36927 _36928 g _36926)). Qed.
Lemma lem3498092 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem3498093 {_90715 _90724 : Type'} (_36927 : _90715) (f : _90715 -> _90724) (_36928 : _90715) (g : type686 _90715) (_36926 : _90715 -> Prop) : (term942 _90715 _90724 f _36927 _36928 g _36926) = (term943 _90715 _90724 _36927 f _36928 g _36926).
Proof. exact (@lem3498092 (@I (_90715 -> Prop) _36926 _36927) (term623 _90715 _90724 _36927 f _36928) (term883 _90715 _36928 g _36926)). Qed.
Lemma lem3498121 {_90715 _90724 : Type'} (_36927 : _90715) (f : _90715 -> _90724) (_36928 : _90715) (g : type686 _90715) (_36926 : _90715 -> Prop) : (term936 _90715 _90724 f g _36928 _36926 _36927) = (term943 _90715 _90724 _36927 f _36928 g _36926).
Proof. exact (TRANS (@lem3498088 _90715 _90724 f _36927 _36928 g _36926) (@lem3498093 _90715 _90724 _36927 f _36928 g _36926)). Qed.
Lemma lem3498122 {_90715 _90724 : Type'} (_36927 : _90715) (f : _90715 -> _90724) (_36928 : _90715) (g : type686 _90715) (_36926 : _90715 -> Prop) : (term935 _90715 _90724 g f _36928 _36926 _36927) = (term943 _90715 _90724 _36927 f _36928 g _36926).
Proof. exact (TRANS (@lem3498025 _90715 _90724 f g _36928 _36926 _36927) (@lem3498121 _90715 _90724 _36927 f _36928 g _36926)). Qed.
Lemma lem3498123 {_90715 : Type'} (u : _90715 -> Prop) (_36927 : _90715) : (term629 _90715 u _36927) = (term629 _90715 u _36927).
Proof. exact (eq_refl (term629 _90715 u _36927)). Qed.
Lemma lem3498124 {_90715 _90724 : Type'} (u : _90715 -> Prop) (_36927 : _90715) (f : _90715 -> _90724) (_36928 : _90715) (g : type686 _90715) (_36926 : _90715 -> Prop) : (term934 _90715 _90724 u g f _36928 _36926 _36927) = (term944 _90715 _90724 u _36927 f _36928 g _36926).
Proof. exact (MK_COMB (@lem3498123 _90715 u _36927) (@lem3498122 _90715 _90724 _36927 f _36928 g _36926)). Qed.
Lemma lem3498128 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem3498129 {_90715 _90724 : Type'} (u : _90715 -> Prop) (_36927 : _90715) (f : _90715 -> _90724) (_36928 : _90715) (g : type686 _90715) (_36926 : _90715 -> Prop) : (term944 _90715 _90724 u _36927 f _36928 g _36926) = (term945 _90715 _90724 u _36927 f _36928 g _36926).
Proof. exact (@lem3498128 (@I (_90715 -> Prop) _36926 _36927) (term619 _90715 u _36927) (term946 _90715 _90724 _36927 f _36928 g _36926)). Qed.
Lemma lem3498143 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem3498144 {_90715 _90724 : Type'} (f : _90715 -> _90724) (u : _90715 -> Prop) (_36927 : _90715) (_36928 : _90715) (g : type686 _90715) (_36926 : _90715 -> Prop) : (term947 _90715 _90724 u _36927 f _36928 g _36926) = (term948 _90715 _90724 f u _36927 _36928 g _36926).
Proof. exact (@lem3498143 (term623 _90715 _90724 _36927 f _36928) (term619 _90715 u _36927) (term883 _90715 _36928 g _36926)). Qed.
Lemma lem3498160 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem3498161 {_90715 : Type'} (_36928 : _90715) (u : _90715 -> Prop) (_36927 : _90715) (g : type686 _90715) (_36926 : _90715 -> Prop) : (term949 _90715 u _36927 _36928 g _36926) = (term950 _90715 _36928 u _36927 g _36926).
Proof. exact (@lem3498160 (term619 _90715 _36926 _36928) (term619 _90715 u _36927) (term640 _90715 g _36926)). Qed.
Lemma lem3498177 {_90715 _90724 : Type'} (_36927 : _90715) (f : _90715 -> _90724) (_36928 : _90715) : (term625 _90715 _90724 _36927 f _36928) = (term625 _90715 _90724 _36927 f _36928).
Proof. exact (eq_refl (term625 _90715 _90724 _36927 f _36928)). Qed.
Lemma lem3498178 {_90715 _90724 : Type'} (f : _90715 -> _90724) (_36928 : _90715) (u : _90715 -> Prop) (_36927 : _90715) (g : type686 _90715) (_36926 : _90715 -> Prop) : (term948 _90715 _90724 f u _36927 _36928 g _36926) = (term951 _90715 _90724 f _36928 u _36927 g _36926).
Proof. exact (MK_COMB (@lem3498177 _90715 _90724 _36927 f _36928) (@lem3498161 _90715 _36928 u _36927 g _36926)). Qed.
Lemma lem3498189 {_90715 _90724 : Type'} (f : _90715 -> _90724) (_36928 : _90715) (u : _90715 -> Prop) (_36927 : _90715) (g : type686 _90715) (_36926 : _90715 -> Prop) : (term947 _90715 _90724 u _36927 f _36928 g _36926) = (term951 _90715 _90724 f _36928 u _36927 g _36926).
Proof. exact (TRANS (@lem3498144 _90715 _90724 f u _36927 _36928 g _36926) (@lem3498178 _90715 _90724 f _36928 u _36927 g _36926)). Qed.
Lemma lem3498190 {_90715 : Type'} (_36926 : _90715 -> Prop) (_36927 : _90715) : (term884 _90715 _36926 _36927) = (term884 _90715 _36926 _36927).
Proof. exact (eq_refl (term884 _90715 _36926 _36927)). Qed.
Lemma lem3498191 {_90715 _90724 : Type'} (f : _90715 -> _90724) (_36928 : _90715) (u : _90715 -> Prop) (_36927 : _90715) (g : type686 _90715) (_36926 : _90715 -> Prop) : (term945 _90715 _90724 u _36927 f _36928 g _36926) = (term952 _90715 _90724 f _36928 u _36927 g _36926).
Proof. exact (MK_COMB (@lem3498190 _90715 _36926 _36927) (@lem3498189 _90715 _90724 f _36928 u _36927 g _36926)). Qed.
Lemma lem3498202 {_90715 _90724 : Type'} (f : _90715 -> _90724) (_36928 : _90715) (u : _90715 -> Prop) (_36927 : _90715) (g : type686 _90715) (_36926 : _90715 -> Prop) : (term944 _90715 _90724 u _36927 f _36928 g _36926) = (term952 _90715 _90724 f _36928 u _36927 g _36926).
Proof. exact (TRANS (@lem3498129 _90715 _90724 u _36927 f _36928 g _36926) (@lem3498191 _90715 _90724 f _36928 u _36927 g _36926)). Qed.
Lemma lem3498203 {_90715 _90724 : Type'} (f : _90715 -> _90724) (_36928 : _90715) (u : _90715 -> Prop) (_36927 : _90715) (g : type686 _90715) (_36926 : _90715 -> Prop) : (term934 _90715 _90724 u g f _36928 _36926 _36927) = (term952 _90715 _90724 f _36928 u _36927 g _36926).
Proof. exact (TRANS (@lem3498124 _90715 _90724 u _36927 f _36928 g _36926) (@lem3498202 _90715 _90724 f _36928 u _36927 g _36926)). Qed.
Lemma lem3498204 {_90715 _90724 : Type'} (f : _90715 -> _90724) (_36928 : _90715) (u : _90715 -> Prop) (_36927 : _90715) (g : type686 _90715) (_36926 : _90715 -> Prop) : (term820 _90715 _90724 g u f _36928 _36926 _36927) = (term952 _90715 _90724 f _36928 u _36927 g _36926).
Proof. exact (TRANS (@lem3498010 _90715 _90724 u g f _36928 _36926 _36927) (@lem3498203 _90715 _90724 f _36928 u _36927 g _36926)). Qed.
Lemma lem3498205 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem3498206 {_90715 _90724 : Type'} (f : _90715 -> _90724) (_36928 : _90715) (u : _90715 -> Prop) (_36927 : _90715) (g : type686 _90715) (_36926 : _90715 -> Prop) : (term953 _90715 _90724 g u f _36928 _36926 _36927) = (term954 _90715 _90724 f _36928 u _36927 g _36926).
Proof. exact (MK_COMB (@lem3498205) (@lem3498204 _90715 _90724 f _36928 u _36927 g _36926)). Qed.
Lemma lem3498220 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem3498221 {_90715 _90724 : Type'} (u : _90715 -> Prop) (g : type686 _90715) (_36927 : _90715) (f : _90715 -> _90724) (_36926 : _90715 -> Prop) (_36928 : _90715) : (term955 _90715 _90724 g u _36927 f _36926 _36928) = (term956 _90715 _90724 u g _36927 f _36926 _36928).
Proof. exact (@lem3498220 (term619 _90715 u _36927) (term640 _90715 g _36926) (term626 _90715 _90724 _36927 f _36926 _36928)). Qed.
Lemma lem3498235 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem3498236 {_90715 _90724 : Type'} (_36927 : _90715) (f : _90715 -> _90724) (g : type686 _90715) (_36926 : _90715 -> Prop) (_36928 : _90715) : (term957 _90715 _90724 g _36927 f _36926 _36928) = (term958 _90715 _90724 _36927 f g _36926 _36928).
Proof. exact (@lem3498235 (term623 _90715 _90724 _36927 f _36928) (term640 _90715 g _36926) (term619 _90715 _36926 _36928)). Qed.
Lemma lem3498252 (q : Prop) (p : Prop) : (p \/ q) = (q \/ p).
Proof. exact (proj1 (@lem827 (@el Prop) p q)). Qed.
Lemma lem3498253 {_90715 : Type'} (_36928 : _90715) (g : type686 _90715) (_36926 : _90715 -> Prop) : (term882 _90715 g _36926 _36928) = (term883 _90715 _36928 g _36926).
Proof. exact (@lem3498252 (term619 _90715 _36926 _36928) (term640 _90715 g _36926)). Qed.
Lemma lem3498259 {_90715 _90724 : Type'} (_36927 : _90715) (f : _90715 -> _90724) (_36928 : _90715) : (term625 _90715 _90724 _36927 f _36928) = (term625 _90715 _90724 _36927 f _36928).
Proof. exact (eq_refl (term625 _90715 _90724 _36927 f _36928)). Qed.
Lemma lem3498260 {_90715 _90724 : Type'} (_36927 : _90715) (f : _90715 -> _90724) (_36928 : _90715) (g : type686 _90715) (_36926 : _90715 -> Prop) : (term958 _90715 _90724 _36927 f g _36926 _36928) = (term946 _90715 _90724 _36927 f _36928 g _36926).
Proof. exact (MK_COMB (@lem3498259 _90715 _90724 _36927 f _36928) (@lem3498253 _90715 _36928 g _36926)). Qed.
Lemma lem3498271 {_90715 _90724 : Type'} (_36927 : _90715) (f : _90715 -> _90724) (_36928 : _90715) (g : type686 _90715) (_36926 : _90715 -> Prop) : (term957 _90715 _90724 g _36927 f _36926 _36928) = (term946 _90715 _90724 _36927 f _36928 g _36926).
Proof. exact (TRANS (@lem3498236 _90715 _90724 _36927 f g _36926 _36928) (@lem3498260 _90715 _90724 _36927 f _36928 g _36926)). Qed.
Lemma lem3498272 {_90715 : Type'} (u : _90715 -> Prop) (_36927 : _90715) : (term629 _90715 u _36927) = (term629 _90715 u _36927).
Proof. exact (eq_refl (term629 _90715 u _36927)). Qed.
Lemma lem3498273 {_90715 _90724 : Type'} (u : _90715 -> Prop) (_36927 : _90715) (f : _90715 -> _90724) (_36928 : _90715) (g : type686 _90715) (_36926 : _90715 -> Prop) : (term956 _90715 _90724 u g _36927 f _36926 _36928) = (term947 _90715 _90724 u _36927 f _36928 g _36926).
Proof. exact (MK_COMB (@lem3498272 _90715 u _36927) (@lem3498271 _90715 _90724 _36927 f _36928 g _36926)). Qed.
Lemma lem3498277 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem3498278 {_90715 _90724 : Type'} (f : _90715 -> _90724) (u : _90715 -> Prop) (_36927 : _90715) (_36928 : _90715) (g : type686 _90715) (_36926 : _90715 -> Prop) : (term947 _90715 _90724 u _36927 f _36928 g _36926) = (term948 _90715 _90724 f u _36927 _36928 g _36926).
Proof. exact (@lem3498277 (term623 _90715 _90724 _36927 f _36928) (term619 _90715 u _36927) (term883 _90715 _36928 g _36926)). Qed.
Lemma lem3498294 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem3498295 {_90715 : Type'} (_36928 : _90715) (u : _90715 -> Prop) (_36927 : _90715) (g : type686 _90715) (_36926 : _90715 -> Prop) : (term949 _90715 u _36927 _36928 g _36926) = (term950 _90715 _36928 u _36927 g _36926).
Proof. exact (@lem3498294 (term619 _90715 _36926 _36928) (term619 _90715 u _36927) (term640 _90715 g _36926)). Qed.
Lemma lem3498311 {_90715 _90724 : Type'} (_36927 : _90715) (f : _90715 -> _90724) (_36928 : _90715) : (term625 _90715 _90724 _36927 f _36928) = (term625 _90715 _90724 _36927 f _36928).
Proof. exact (eq_refl (term625 _90715 _90724 _36927 f _36928)). Qed.
Lemma lem3498312 {_90715 _90724 : Type'} (f : _90715 -> _90724) (_36928 : _90715) (u : _90715 -> Prop) (_36927 : _90715) (g : type686 _90715) (_36926 : _90715 -> Prop) : (term948 _90715 _90724 f u _36927 _36928 g _36926) = (term951 _90715 _90724 f _36928 u _36927 g _36926).
Proof. exact (MK_COMB (@lem3498311 _90715 _90724 _36927 f _36928) (@lem3498295 _90715 _36928 u _36927 g _36926)). Qed.
Lemma lem3498323 {_90715 _90724 : Type'} (f : _90715 -> _90724) (_36928 : _90715) (u : _90715 -> Prop) (_36927 : _90715) (g : type686 _90715) (_36926 : _90715 -> Prop) : (term947 _90715 _90724 u _36927 f _36928 g _36926) = (term951 _90715 _90724 f _36928 u _36927 g _36926).
Proof. exact (TRANS (@lem3498278 _90715 _90724 f u _36927 _36928 g _36926) (@lem3498312 _90715 _90724 f _36928 u _36927 g _36926)). Qed.
Lemma lem3498324 {_90715 _90724 : Type'} (f : _90715 -> _90724) (_36928 : _90715) (u : _90715 -> Prop) (_36927 : _90715) (g : type686 _90715) (_36926 : _90715 -> Prop) : (term956 _90715 _90724 u g _36927 f _36926 _36928) = (term951 _90715 _90724 f _36928 u _36927 g _36926).
Proof. exact (TRANS (@lem3498273 _90715 _90724 u _36927 f _36928 g _36926) (@lem3498323 _90715 _90724 f _36928 u _36927 g _36926)). Qed.
Lemma lem3498325 {_90715 _90724 : Type'} (f : _90715 -> _90724) (_36928 : _90715) (u : _90715 -> Prop) (_36927 : _90715) (g : type686 _90715) (_36926 : _90715 -> Prop) : (term955 _90715 _90724 g u _36927 f _36926 _36928) = (term951 _90715 _90724 f _36928 u _36927 g _36926).
Proof. exact (TRANS (@lem3498221 _90715 _90724 u g _36927 f _36926 _36928) (@lem3498324 _90715 _90724 f _36928 u _36927 g _36926)). Qed.
Lemma lem3498326 {_90715 : Type'} (_36926 : _90715 -> Prop) (_36927 : _90715) : (term884 _90715 _36926 _36927) = (term884 _90715 _36926 _36927).
Proof. exact (eq_refl (term884 _90715 _36926 _36927)). Qed.
Lemma lem3498327 {_90715 _90724 : Type'} (f : _90715 -> _90724) (_36928 : _90715) (u : _90715 -> Prop) (_36927 : _90715) (g : type686 _90715) (_36926 : _90715 -> Prop) : (term959 _90715 _90724 g u _36927 f _36926 _36928) = (term952 _90715 _90724 f _36928 u _36927 g _36926).
Proof. exact (MK_COMB (@lem3498326 _90715 _36926 _36927) (@lem3498325 _90715 _90724 f _36928 u _36927 g _36926)). Qed.
Lemma lem3498338 {_90715 _90724 : Type'} (f : _90715 -> _90724) (_36928 : _90715) (u : _90715 -> Prop) (_36927 : _90715) (g : type686 _90715) (_36926 : _90715 -> Prop) : ((term820 _90715 _90724 g u f _36928 _36926 _36927) = (term959 _90715 _90724 g u _36927 f _36926 _36928)) = ((term952 _90715 _90724 f _36928 u _36927 g _36926) = (term952 _90715 _90724 f _36928 u _36927 g _36926)).
Proof. exact (MK_COMB (@lem3498206 _90715 _90724 f _36928 u _36927 g _36926) (@lem3498327 _90715 _90724 f _36928 u _36927 g _36926)). Qed.
Lemma lem3498340 {A : Type'} (x : A) : (x = x) = True.
Proof. exact (EQ_MP (@lem20665 A x) (@lem20664 A x)). Qed.
Lemma lem3498341 (x : Prop) : (x = x) = True.
Proof. exact (@lem3498340 Prop x). Qed.
Lemma lem3498342 {_90715 _90724 : Type'} (f : _90715 -> _90724) (_36928 : _90715) (u : _90715 -> Prop) (_36927 : _90715) (g : type686 _90715) (_36926 : _90715 -> Prop) : ((term952 _90715 _90724 f _36928 u _36927 g _36926) = (term952 _90715 _90724 f _36928 u _36927 g _36926)) = True.
Proof. exact (@lem3498341 (term952 _90715 _90724 f _36928 u _36927 g _36926)). Qed.
Lemma lem3498343 {_90715 _90724 : Type'} (g : type686 _90715) (u : _90715 -> Prop) (_36927 : _90715) (f : _90715 -> _90724) (_36926 : _90715 -> Prop) (_36928 : _90715) : ((term820 _90715 _90724 g u f _36928 _36926 _36927) = (term959 _90715 _90724 g u _36927 f _36926 _36928)) = True.
Proof. exact (TRANS (@lem3498338 _90715 _90724 f _36928 u _36927 g _36926) (@lem3498342 _90715 _90724 f _36928 u _36927 g _36926)). Qed.
Lemma lem3498344 {_90715 _90724 : Type'} (g : type686 _90715) (u : _90715 -> Prop) (_36927 : _90715) (f : _90715 -> _90724) (_36926 : _90715 -> Prop) (_36928 : _90715) : True = ((term820 _90715 _90724 g u f _36928 _36926 _36927) = (term959 _90715 _90724 g u _36927 f _36926 _36928)).
Proof. exact (SYM (@lem3498343 _90715 _90724 g u _36927 f _36926 _36928)). Qed.
Lemma lem3498345 {_90715 _90724 : Type'} (g : type686 _90715) (u : _90715 -> Prop) (_36927 : _90715) (f : _90715 -> _90724) (_36926 : _90715 -> Prop) (_36928 : _90715) : (term820 _90715 _90724 g u f _36928 _36926 _36927) = (term959 _90715 _90724 g u _36927 f _36926 _36928).
Proof. exact (EQ_MP (@lem3498344 _90715 _90724 g u _36927 f _36926 _36928) (@lem0)). Qed.
Lemma lem3498346 {_90715 _90724 : Type'} (_36927 : _90715) (_36926 : _90715 -> Prop) (_36928 : _90715) (g : type686 _90715) (u : _90715 -> Prop) (f : _90715 -> _90724) (h1 : term252 _90715 _90724 g u f) : term959 _90715 _90724 g u _36927 f _36926 _36928.
Proof. exact (EQ_MP (@lem3498345 _90715 _90724 g u _36927 f _36926 _36928) (@lem3497090 _90715 _90724 _36928 _36926 _36927 g u f h1)). Qed.
Lemma lem3498348 (b : Prop) (a : Prop) : (a \/ b) = (term833 b a).
Proof. exact (EQ_MP (@lem20682 b a) (@lem20764 b a)). Qed.
Lemma lem3498349 {_90715 _90724 : Type'} (g : type686 _90715) (u : _90715 -> Prop) (f : _90715 -> _90724) (_36928 : _90715) (_36926 : _90715 -> Prop) (_36927 : _90715) : (term959 _90715 _90724 g u _36927 f _36926 _36928) = (term960 _90715 _90724 g u f _36928 _36926 _36927).
Proof. exact (@lem3498348 (term955 _90715 _90724 g u _36927 f _36926 _36928) (@I (_90715 -> Prop) _36926 _36927)). Qed.
Lemma lem3498351 (a : Prop) (b : Prop) : (term887 a b) = (term888 a b).
Proof. exact (EQ_MP (@lem20789 a b) (@lem20895 a b)). Qed.
Lemma lem3498352 {_90715 _90724 : Type'} (g : type686 _90715) (u : _90715 -> Prop) (_36927 : _90715) (f : _90715 -> _90724) (_36926 : _90715 -> Prop) (_36928 : _90715) : (term961 _90715 _90724 g u _36927 f _36926 _36928) = (term962 _90715 _90724 g u _36927 f _36926 _36928).
Proof. exact (@lem3498351 (term640 _90715 g _36926) (term699 _90715 _90724 u _36927 f _36926 _36928)). Qed.
Lemma lem3498354 (a : Prop) : (term282 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem3498355 {_90715 : Type'} (g : type686 _90715) (_36926 : _90715 -> Prop) : (term835 _90715 g _36926) = (@I ((_90715 -> Prop) -> Prop) g _36926).
Proof. exact (@lem3498354 (@I ((_90715 -> Prop) -> Prop) g _36926)). Qed.
Lemma lem3498356 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem3498357 {_90715 : Type'} (g : type686 _90715) (_36926 : _90715 -> Prop) : (term891 _90715 g _36926) = (term678 _90715 g _36926).
Proof. exact (MK_COMB (@lem3498356) (@lem3498355 _90715 g _36926)). Qed.
Lemma lem3498359 (a : Prop) (b : Prop) : (term887 a b) = (term888 a b).
Proof. exact (EQ_MP (@lem20789 a b) (@lem20895 a b)). Qed.
Lemma lem3498360 {_90715 _90724 : Type'} (u : _90715 -> Prop) (_36927 : _90715) (f : _90715 -> _90724) (_36926 : _90715 -> Prop) (_36928 : _90715) : (term963 _90715 _90724 u _36927 f _36926 _36928) = (term964 _90715 _90724 u _36927 f _36926 _36928).
Proof. exact (@lem3498359 (term619 _90715 u _36927) (term626 _90715 _90724 _36927 f _36926 _36928)). Qed.
Lemma lem3498362 (a : Prop) : (term282 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem3498363 {_90715 : Type'} (u : _90715 -> Prop) (_36927 : _90715) : (term892 _90715 u _36927) = (@I (_90715 -> Prop) u _36927).
Proof. exact (@lem3498362 (@I (_90715 -> Prop) u _36927)). Qed.
Lemma lem3498364 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem3498365 {_90715 : Type'} (u : _90715 -> Prop) (_36927 : _90715) : (term965 _90715 u _36927) = (term966 _90715 u _36927).
Proof. exact (MK_COMB (@lem3498364) (@lem3498363 _90715 u _36927)). Qed.
Lemma lem3498367 (a : Prop) (b : Prop) : (term887 a b) = (term888 a b).
Proof. exact (EQ_MP (@lem20789 a b) (@lem20895 a b)). Qed.
Lemma lem3498368 {_90715 _90724 : Type'} (_36927 : _90715) (f : _90715 -> _90724) (_36926 : _90715 -> Prop) (_36928 : _90715) : (term967 _90715 _90724 _36927 f _36926 _36928) = (term968 _90715 _90724 _36927 f _36926 _36928).
Proof. exact (@lem3498367 (term623 _90715 _90724 _36927 f _36928) (term619 _90715 _36926 _36928)). Qed.
Lemma lem3498370 (a : Prop) : (term282 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem3498371 {_90715 _90724 : Type'} (_36927 : _90715) (f : _90715 -> _90724) (_36928 : _90715) : (term969 _90715 _90724 _36927 f _36928) = ((@I (_90715 -> _90724) f _36927) = (@I (_90715 -> _90724) f _36928)).
Proof. exact (@lem3498370 ((@I (_90715 -> _90724) f _36927) = (@I (_90715 -> _90724) f _36928))). Qed.
Lemma lem3498372 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem3498373 {_90715 _90724 : Type'} (_36927 : _90715) (f : _90715 -> _90724) (_36928 : _90715) : (term970 _90715 _90724 _36927 f _36928) = (term971 _90715 _90724 _36927 f _36928).
Proof. exact (MK_COMB (@lem3498372) (@lem3498371 _90715 _90724 _36927 f _36928)). Qed.
Lemma lem3498375 (a : Prop) : (term282 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem3498376 {_90715 : Type'} (_36926 : _90715 -> Prop) (_36928 : _90715) : (term892 _90715 _36926 _36928) = (@I (_90715 -> Prop) _36926 _36928).
Proof. exact (@lem3498375 (@I (_90715 -> Prop) _36926 _36928)). Qed.
Lemma lem3498377 {_90715 _90724 : Type'} (_36927 : _90715) (f : _90715 -> _90724) (_36926 : _90715 -> Prop) (_36928 : _90715) : (term968 _90715 _90724 _36927 f _36926 _36928) = (term844 _90715 _90724 _36927 f _36926 _36928).
Proof. exact (MK_COMB (@lem3498373 _90715 _90724 _36927 f _36928) (@lem3498376 _90715 _36926 _36928)). Qed.
Lemma lem3498378 {_90715 _90724 : Type'} (_36927 : _90715) (f : _90715 -> _90724) (_36926 : _90715 -> Prop) (_36928 : _90715) : (term967 _90715 _90724 _36927 f _36926 _36928) = (term844 _90715 _90724 _36927 f _36926 _36928).
Proof. exact (TRANS (@lem3498368 _90715 _90724 _36927 f _36926 _36928) (@lem3498377 _90715 _90724 _36927 f _36926 _36928)). Qed.
Lemma lem3498379 {_90715 _90724 : Type'} (u : _90715 -> Prop) (_36927 : _90715) (f : _90715 -> _90724) (_36926 : _90715 -> Prop) (_36928 : _90715) : (term964 _90715 _90724 u _36927 f _36926 _36928) = (term972 _90715 _90724 u _36927 f _36926 _36928).
Proof. exact (MK_COMB (@lem3498365 _90715 u _36927) (@lem3498378 _90715 _90724 _36927 f _36926 _36928)). Qed.
Lemma lem3498380 {_90715 _90724 : Type'} (u : _90715 -> Prop) (_36927 : _90715) (f : _90715 -> _90724) (_36926 : _90715 -> Prop) (_36928 : _90715) : (term963 _90715 _90724 u _36927 f _36926 _36928) = (term972 _90715 _90724 u _36927 f _36926 _36928).
Proof. exact (TRANS (@lem3498360 _90715 _90724 u _36927 f _36926 _36928) (@lem3498379 _90715 _90724 u _36927 f _36926 _36928)). Qed.
Lemma lem3498381 {_90715 _90724 : Type'} (g : type686 _90715) (u : _90715 -> Prop) (_36927 : _90715) (f : _90715 -> _90724) (_36926 : _90715 -> Prop) (_36928 : _90715) : (term962 _90715 _90724 g u _36927 f _36926 _36928) = (term973 _90715 _90724 g u _36927 f _36926 _36928).
Proof. exact (MK_COMB (@lem3498357 _90715 g _36926) (@lem3498380 _90715 _90724 u _36927 f _36926 _36928)). Qed.
Lemma lem3498382 {_90715 _90724 : Type'} (g : type686 _90715) (u : _90715 -> Prop) (_36927 : _90715) (f : _90715 -> _90724) (_36926 : _90715 -> Prop) (_36928 : _90715) : (term961 _90715 _90724 g u _36927 f _36926 _36928) = (term973 _90715 _90724 g u _36927 f _36926 _36928).
Proof. exact (TRANS (@lem3498352 _90715 _90724 g u _36927 f _36926 _36928) (@lem3498381 _90715 _90724 g u _36927 f _36926 _36928)). Qed.
Lemma lem3498383 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem3498384 {_90715 _90724 : Type'} (g : type686 _90715) (u : _90715 -> Prop) (_36927 : _90715) (f : _90715 -> _90724) (_36926 : _90715 -> Prop) (_36928 : _90715) : (term974 _90715 _90724 g u _36927 f _36926 _36928) = (term975 _90715 _90724 g u _36927 f _36926 _36928).
Proof. exact (MK_COMB (@lem3498383) (@lem3498382 _90715 _90724 g u _36927 f _36926 _36928)). Qed.
Lemma lem3498385 {_90715 : Type'} (_36926 : _90715 -> Prop) (_36927 : _90715) : (@I (_90715 -> Prop) _36926 _36927) = (@I (_90715 -> Prop) _36926 _36927).
Proof. exact (eq_refl (@I (_90715 -> Prop) _36926 _36927)). Qed.
Lemma lem3498386 {_90715 _90724 : Type'} (g : type686 _90715) (u : _90715 -> Prop) (f : _90715 -> _90724) (_36928 : _90715) (_36926 : _90715 -> Prop) (_36927 : _90715) : (term960 _90715 _90724 g u f _36928 _36926 _36927) = (term976 _90715 _90724 g u f _36928 _36926 _36927).
Proof. exact (MK_COMB (@lem3498384 _90715 _90724 g u _36927 f _36926 _36928) (@lem3498385 _90715 _36926 _36927)). Qed.
Lemma lem3498387 {_90715 _90724 : Type'} (g : type686 _90715) (u : _90715 -> Prop) (f : _90715 -> _90724) (_36928 : _90715) (_36926 : _90715 -> Prop) (_36927 : _90715) : (term959 _90715 _90724 g u _36927 f _36926 _36928) = (term976 _90715 _90724 g u f _36928 _36926 _36927).
Proof. exact (TRANS (@lem3498349 _90715 _90724 g u f _36928 _36926 _36927) (@lem3498386 _90715 _90724 g u f _36928 _36926 _36927)). Qed.
Lemma lem3498389 {_90715 _90724 : Type'} (x'''' : _90715 -> Prop) (t : type1402 _90715) (g : type686 _90715) (x : _90724) (f : _90715 -> _90724) (x''' : type684 _90715) (h1 : g x'''') (h2 : term674 _90715 _90724 t g x f x''') : term977 _90715 _90724 f t x''' x''''.
Proof. exact (conj (@lem3497960 _90715 _90724 x'''' t g x f x''' h1 h2) (@lem3498003 _90715 _90724 x'''' t g x f x''' h1 h2)). Qed.
Lemma lem3498390 {_90715 _90724 : Type'} (u : _90715 -> Prop) (x'''' : _90715 -> Prop) (t : type1402 _90715) (g : type686 _90715) (x : _90724) (f : _90715 -> _90724) (x''' : type684 _90715) (h1 : term252 _90715 _90724 g u f) (h2 : g x'''') (h3 : term674 _90715 _90724 t g x f x''') : term978 _90715 _90724 u f t x''' x''''.
Proof. exact (conj (@lem3497773 _90715 _90724 u x'''' t g x f x''' h1 h2 h3) (@lem3498389 _90715 _90724 x'''' t g x f x''' h2 h3)). Qed.
Lemma lem3498391 {_90715 _90724 : Type'} (u : _90715 -> Prop) (x'''' : _90715 -> Prop) (t : type1402 _90715) (g : type686 _90715) (x : _90724) (f : _90715 -> _90724) (x''' : type684 _90715) (h1 : term252 _90715 _90724 g u f) (h2 : g x'''') (h3 : term674 _90715 _90724 t g x f x''') : term979 _90715 _90724 g u f t x''' x''''.
Proof. exact (conj (@lem3497577 _90715 _90724 x'''' t g x f x''' h2 h3) (@lem3498390 _90715 _90724 u x'''' t g x f x''' h1 h2 h3)). Qed.
Lemma lem3498393 {_90715 _90724 : Type'} (_36928 : _90715) (_36926 : _90715 -> Prop) (_36927 : _90715) (g : type686 _90715) (u : _90715 -> Prop) (f : _90715 -> _90724) (h1 : term252 _90715 _90724 g u f) : term976 _90715 _90724 g u f _36928 _36926 _36927.
Proof. exact (EQ_MP (@lem3498387 _90715 _90724 g u f _36928 _36926 _36927) (@lem3498346 _90715 _90724 _36927 _36926 _36928 g u f h1)). Qed.
Lemma lem3498394 {_90715 _90724 : Type'} (_36928 : _90715) (_36926 : _90715 -> Prop) (_36927 : _90715) (g : type686 _90715) (u : _90715 -> Prop) (f : _90715 -> _90724) (h1 : term252 _90715 _90724 g u f) : term976 _90715 _90724 g u f _36928 _36926 _36927.
Proof. exact (@lem3498393 _90715 _90724 _36928 _36926 _36927 g u f h1). Qed.
Lemma lem3498395 {_90715 _90724 : Type'} (t : type1402 _90715) (x''' : type684 _90715) (x'''' : _90715 -> Prop) (g : type686 _90715) (u : _90715 -> Prop) (f : _90715 -> _90724) (h1 : term252 _90715 _90724 g u f) : term980 _90715 _90724 g u f t x''' x''''.
Proof. exact (@lem3498394 _90715 _90724 (term981 _90715 t x''' x'''') (term903 _90715 t x''' x'''') (@I ((_90715 -> Prop) -> _90715) x''' x'''') g u f h1). Qed.
Lemma lem3498398 {_90715 _90724 : Type'} (u : _90715 -> Prop) (x'''' : _90715 -> Prop) (t : type1402 _90715) (g : type686 _90715) (x : _90724) (f : _90715 -> _90724) (x''' : type684 _90715) (h1 : term252 _90715 _90724 g u f) (h2 : g x'''') (h3 : term674 _90715 _90724 t g x f x''') : term982 _90715 t x''' x''''.
Proof. exact (@lem3498395 _90715 _90724 t x''' x'''' g u f h1 (@lem3498391 _90715 _90724 u x'''' t g x f x''' h1 h2 h3)). Qed.
Lemma lem3498399 {_90715 _90724 : Type'} (u : _90715 -> Prop) (x'''' : _90715 -> Prop) (t : type1402 _90715) (g : type686 _90715) (x : _90724) (f : _90715 -> _90724) (x''' : type684 _90715) (h1 : term252 _90715 _90724 g u f) (h2 : g x'''') (h3 : term674 _90715 _90724 t g x f x''') : term983 _90715 t x''' x''''.
Proof. exact (fun h0 : term984 _90715 t x''' x'''' => @lem3498398 _90715 _90724 u x'''' t g x f x''' h1 h2 h3). Qed.
Lemma lem3498401 (p : Prop) : (term828 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem3498402 {_90715 : Type'} (t : type1402 _90715) (x''' : type684 _90715) (x'''' : _90715 -> Prop) : (term983 _90715 t x''' x'''') = (term982 _90715 t x''' x'''').
Proof. exact (@lem3498401 (term982 _90715 t x''' x'''')). Qed.
Lemma lem3498403 {_90715 _90724 : Type'} (u : _90715 -> Prop) (x'''' : _90715 -> Prop) (t : type1402 _90715) (g : type686 _90715) (x : _90724) (f : _90715 -> _90724) (x''' : type684 _90715) (h1 : term252 _90715 _90724 g u f) (h2 : g x'''') (h3 : term674 _90715 _90724 t g x f x''') : term982 _90715 t x''' x''''.
Proof. exact (EQ_MP (@lem3498402 _90715 t x''' x'''') (@lem3498399 _90715 _90724 u x'''' t g x f x''' h1 h2 h3)). Qed.
Lemma lem3498405 (a : Prop) (b : Prop) : (term840 a b) = (term841 a b).
Proof. exact (EQ_MP (@lem20904 a b) (@lem21007 a b)). Qed.
Lemma lem3498406 {_90715 _90724 : Type'} (x : _90724) (f : _90715 -> _90724) (t : type1402 _90715) (_36929 : _90715) : (term814 _90715 _90724 x f t _36929) = (term985 _90715 _90724 x f t _36929).
Proof. exact (@lem3498405 (x = (@I (_90715 -> _90724) f _36929)) (term658 _90715 t _36929)). Qed.
Lemma lem3498408 (p : Prop) : (~ p) = (p -> False).
Proof. exact (EQ_MP (@lem21021 p) (@lem0)). Qed.
Lemma lem3498409 {_90715 _90724 : Type'} (x : _90724) (f : _90715 -> _90724) (t : type1402 _90715) (_36929 : _90715) : (term985 _90715 _90724 x f t _36929) = (term986 _90715 _90724 x f t _36929).
Proof. exact (@lem3498408 (term987 _90715 _90724 x f t _36929)). Qed.
Lemma lem3498410 {_90715 _90724 : Type'} (x : _90724) (f : _90715 -> _90724) (t : type1402 _90715) (_36929 : _90715) : (term814 _90715 _90724 x f t _36929) = (term986 _90715 _90724 x f t _36929).
Proof. exact (TRANS (@lem3498406 _90715 _90724 x f t _36929) (@lem3498409 _90715 _90724 x f t _36929)). Qed.
Lemma lem3498412 {_90715 _90724 : Type'} (u : _90715 -> Prop) (x'''' : _90715 -> Prop) (t : type1402 _90715) (g : type686 _90715) (x : _90724) (f : _90715 -> _90724) (x''' : type684 _90715) (h1 : term252 _90715 _90724 g u f) (h2 : g x'''') (h3 : term674 _90715 _90724 t g x f x''') : term988 _90715 _90724 x f t x''' x''''.
Proof. exact (conj (@lem3497501 _90715 _90724 x'''' t g x f x''' h2 h3) (@lem3498403 _90715 _90724 u x'''' t g x f x''' h1 h2 h3)). Qed.
Lemma lem3498414 {_90715 _90724 : Type'} (_36929 : _90715) (t : type1402 _90715) (g : type686 _90715) (x : _90724) (f : _90715 -> _90724) (x''' : type684 _90715) (h1 : term674 _90715 _90724 t g x f x''') : term986 _90715 _90724 x f t _36929.
Proof. exact (EQ_MP (@lem3498410 _90715 _90724 x f t _36929) (@lem3497058 _90715 _90724 _36929 t g x f x''' h1)). Qed.
Lemma lem3498415 {_90715 _90724 : Type'} (_36929 : _90715) (t : type1402 _90715) (g : type686 _90715) (x : _90724) (f : _90715 -> _90724) (x''' : type684 _90715) (h1 : term674 _90715 _90724 t g x f x''') : term986 _90715 _90724 x f t _36929.
Proof. exact (@lem3498414 _90715 _90724 _36929 t g x f x''' h1). Qed.
Lemma lem3498416 {_90715 _90724 : Type'} (x'''' : _90715 -> Prop) (t : type1402 _90715) (g : type686 _90715) (x : _90724) (f : _90715 -> _90724) (x''' : type684 _90715) (h1 : term674 _90715 _90724 t g x f x''') : term989 _90715 _90724 x f t x''' x''''.
Proof. exact (@lem3498415 _90715 _90724 (@I ((_90715 -> Prop) -> _90715) x''' x'''') t g x f x''' h1). Qed.
Lemma lem3498419 {_90715 _90724 : Type'} (u : _90715 -> Prop) (x'''' : _90715 -> Prop) (t : type1402 _90715) (g : type686 _90715) (x : _90724) (f : _90715 -> _90724) (x''' : type684 _90715) (h1 : term252 _90715 _90724 g u f) (h2 : g x'''') (h3 : term674 _90715 _90724 t g x f x''') : False.
Proof. exact (@lem3498416 _90715 _90724 x'''' t g x f x''' h3 (@lem3498412 _90715 _90724 u x'''' t g x f x''' h1 h2 h3)). Qed.
Lemma lem3498420 {_90715 _90724 : Type'} (u : _90715 -> Prop) (x'''' : _90715 -> Prop) (t : type1402 _90715) (g : type686 _90715) (x : _90724) (f : _90715 -> _90724) (x''' : type684 _90715) (h1 : term252 _90715 _90724 g u f) (h2 : g x'''') (h3 : term674 _90715 _90724 t g x f x''') : term847.
Proof. exact (fun h0 : ~ False => @lem3498419 _90715 _90724 u x'''' t g x f x''' h1 h2 h3). Qed.
Lemma lem3498422 (p : Prop) : (term828 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem3498423 : term847 = False.
Proof. exact (@lem3498422 False). Qed.
Lemma lem3498424 {_90715 _90724 : Type'} (u : _90715 -> Prop) (x'''' : _90715 -> Prop) (t : type1402 _90715) (g : type686 _90715) (x : _90724) (f : _90715 -> _90724) (x''' : type684 _90715) (h1 : term252 _90715 _90724 g u f) (h2 : g x'''') (h3 : term674 _90715 _90724 t g x f x''') : False.
Proof. exact (EQ_MP (@lem3498423) (@lem3498420 _90715 _90724 u x'''' t g x f x''' h1 h2 h3)). Qed.
Lemma lem3498425 {_90715 _90724 : Type'} (x' : _90715) (g : type686 _90715) (x : _90724) (f : _90715 -> _90724) (x'' : _90715 -> Prop) (h1 : term686 _90715 _90724 x' g x f x'') : False.
Proof. exact (EQ_MP (@lem3497339) (@lem3497336 _90715 _90724 x' g x f x'' h1)). Qed.
Lemma lem3498426 {_90715 _90724 : Type'} (u : _90715 -> Prop) (x'''' : _90715 -> Prop) (x' : _90715) (x'' : _90715 -> Prop) (t : type1402 _90715) (g : type686 _90715) (x : _90724) (f : _90715 -> _90724) (x''' : type684 _90715) (h1 : term252 _90715 _90724 g u f) (h2 : g x'''') (h3 : term608 _90715 _90724 x' x'' t g x f x''') : False.
Proof. exact (or_elim (@lem3496421 _90715 _90724 x' x'' t g x f x''' h3) (fun h0 : term686 _90715 _90724 x' g x f x'' => @lem3498425 _90715 _90724 x' g x f x'' h0) (fun h0 : term674 _90715 _90724 t g x f x''' => @lem3498424 _90715 _90724 u x'''' t g x f x''' h1 h2 h0)). Qed.
Lemma lem3498427 {_90715 _90724 : Type'} (u : _90715 -> Prop) (x' : _90715) (x'' : _90715 -> Prop) (t : type1402 _90715) (g : type686 _90715) (x : _90724) (f : _90715 -> _90724) (x''' : type684 _90715) (h1 : term252 _90715 _90724 g u f) (h2 : term210 _90715 g) (h3 : term608 _90715 _90724 x' x'' t g x f x''') : False.
Proof. exact (ex_elim (@lem3495133 _90715 g h2) (fun x'''' : _90715 -> Prop => fun h0 : term304 _90715 g x'''' => @lem3498426 _90715 _90724 u x'''' x' x'' t g x f x''' h1 h0 h3)). Qed.
Lemma lem3498428 {_90715 _90724 : Type'} (u : _90715 -> Prop) (x' : _90715) (x'' : _90715 -> Prop) (t : type1402 _90715) (x : _90724) (f : _90715 -> _90724) (g : type686 _90715) (h1 : term252 _90715 _90724 g u f) (h2 : term611 _90715 _90724 x' x'' t g x f) (h3 : term210 _90715 g) : False.
Proof. exact (ex_elim (@lem3496114 _90715 _90724 x' x'' t g x f h2) (fun x''' : type684 _90715 => fun h0 : term610 _90715 _90724 x' x'' t g x f x''' => @lem3498427 _90715 _90724 u x' x'' t g x f x''' h1 h3 h0)). Qed.
Lemma lem3498429 {_90715 _90724 : Type'} (u : _90715 -> Prop) (x' : _90715) (x'' : _90715 -> Prop) (x : _90724) (f : _90715 -> _90724) (g : type686 _90715) (h1 : term252 _90715 _90724 g u f) (h2 : term613 _90715 _90724 x' x'' g x f) (h3 : term210 _90715 g) : False.
Proof. exact (ex_elim (@lem3496113 _90715 _90724 x' x'' g x f h2) (fun t : type1402 _90715 => fun h0 : term612 _90715 _90724 x' x'' g x f t => @lem3498428 _90715 _90724 u x' x'' t x f g h1 h0 h3)). Qed.
Lemma lem3498430 {_90715 _90724 : Type'} (u : _90715 -> Prop) (x' : _90715) (x : _90724) (f : _90715 -> _90724) (g : type686 _90715) (h1 : term252 _90715 _90724 g u f) (h2 : term615 _90715 _90724 x' g x f) (h3 : term210 _90715 g) : False.
Proof. exact (ex_elim (@lem3496112 _90715 _90724 x' g x f h2) (fun x'' : _90715 -> Prop => fun h0 : term614 _90715 _90724 x' g x f x'' => @lem3498429 _90715 _90724 u x' x'' x f g h1 h0 h3)). Qed.
Lemma lem3498431 {_90715 _90724 : Type'} (u : _90715 -> Prop) (g : type686 _90715) (x : _90724) (f : _90715 -> _90724) (h1 : term252 _90715 _90724 g u f) (h2 : term210 _90715 g) (h3 : term296 _90715 _90724 g x f) : False.
Proof. exact (ex_elim (@lem3496111 _90715 _90724 g x f h3) (fun x' : _90715 => fun h0 : term616 _90715 _90724 g x f x' => @lem3498430 _90715 _90724 u x' x f g h1 h0 h2)). Qed.
Lemma lem3498432 {_90715 _90724 : Type'} (u : _90715 -> Prop) (g : type686 _90715) (x : _90724) (f : _90715 -> _90724) (h1 : term252 _90715 _90724 g u f) (h2 : term210 _90715 g) (h3 : term296 _90715 _90724 g x f) : (term296 _90715 _90724 g x f) = False.
Proof. exact (prop_ext (fun h4 : term296 _90715 _90724 g x f => @lem3498431 _90715 _90724 u g x f h1 h2 h3) (fun h4 : False => @lem3495111 _90715 _90724 g x f h3)). Qed.
Lemma lem3498433 {_90715 _90724 : Type'} (u : _90715 -> Prop) (g : type686 _90715) (x : _90724) (f : _90715 -> _90724) (h1 : term252 _90715 _90724 g u f) (h2 : term210 _90715 g) (h3 : term296 _90715 _90724 g x f) : False.
Proof. exact (EQ_MP (@lem3498432 _90715 _90724 u g x f h1 h2 h3) (@lem3495111 _90715 _90724 g x f h3)). Qed.
Lemma lem3498434 {_90715 _90724 : Type'} (x : _90724) (u : _90715 -> Prop) (f : _90715 -> _90724) (g : type686 _90715) (h1 : term252 _90715 _90724 g u f) (h2 : term210 _90715 g) : term295 _90715 _90724 g x f.
Proof. exact (fun h0 : term296 _90715 _90724 g x f => @lem3498433 _90715 _90724 u g x f h1 h2 h0). Qed.
Lemma lem3498435 {_90715 _90724 : Type'} (x : _90724) (u : _90715 -> Prop) (f : _90715 -> _90724) (g : type686 _90715) (h1 : term252 _90715 _90724 g u f) (h2 : term210 _90715 g) : (term261 _90715 _90724 x f g) = (term270 _90715 _90724 g x f).
Proof. exact (EQ_MP (@lem3495110 _90715 _90724 g x f) (@lem3498434 _90715 _90724 x u f g h1 h2)). Qed.
Lemma lem3498440 {_90715 _90724 : Type'} (u : _90715 -> Prop) (f : _90715 -> _90724) (g : type686 _90715) (h1 : term252 _90715 _90724 g u f) (h2 : term210 _90715 g) : term272 _90715 _90724 g f.
Proof. exact (fun x : _90724 => @lem3498435 _90715 _90724 x u f g h1 h2). Qed.
Lemma lem3498441 {_90715 _90724 : Type'} (u : _90715 -> Prop) (f : _90715 -> _90724) (g : type686 _90715) (h1 : term210 _90715 g) : term273 _90715 _90724 u g f.
Proof. exact (fun h0 : term252 _90715 _90724 g u f => @lem3498440 _90715 _90724 u f g h0 h1). Qed.
Lemma lem3498442 {_90715 _90724 : Type'} (u : _90715 -> Prop) (g : type686 _90715) (f : _90715 -> _90724) : term274 _90715 _90724 u g f.
Proof. exact (fun h0 : term210 _90715 g => @lem3498441 _90715 _90724 u f g h0). Qed.
Lemma lem3498447 {_90715 _90724 : Type'} (g : type686 _90715) (f : _90715 -> _90724) : term286 _90715 _90724 g f.
Proof. exact (fun u : _90715 -> Prop => @lem3498442 _90715 _90724 u g f). Qed.
Lemma lem3498452 {_90715 _90724 : Type'} (f : _90715 -> _90724) : term290 _90715 _90724 f.
Proof. exact (fun g : type686 _90715 => @lem3498447 _90715 _90724 g f). Qed.
Lemma lem3498457 {_90715 _90724 : Type'} : term294 _90715 _90724.
Proof. exact (fun f : _90715 -> _90724 => @lem3498452 _90715 _90724 f). Qed.
Lemma lem3498458 {_90715 _90724 : Type'} : term293 _90715 _90724.
Proof. exact (EQ_MP (@lem3495104 _90715 _90724) (@lem3498457 _90715 _90724)). Qed.
Lemma lem3498459 {_90715 _90724 : Type'} (f : _90715 -> _90724) : term990 _90715 _90724 f.
Proof. exact (@lem3498458 _90715 _90724 f). Qed.
Lemma lem3498460 {_90715 _90724 : Type'} (f : _90715 -> _90724) : (term990 _90715 _90724 f) = (term289 _90715 _90724 f).
Proof. exact (eq_refl (term990 _90715 _90724 f)). Qed.
Lemma lem3498461 {_90715 _90724 : Type'} (f : _90715 -> _90724) : term289 _90715 _90724 f.
Proof. exact (EQ_MP (@lem3498460 _90715 _90724 f) (@lem3498459 _90715 _90724 f)). Qed.
Lemma lem3498462 {_90715 _90724 : Type'} (f : _90715 -> _90724) (g : type686 _90715) : term991 _90715 _90724 f g.
Proof. exact (@lem3498461 _90715 _90724 f g). Qed.
Lemma lem3498463 {_90715 _90724 : Type'} (g : type686 _90715) (f : _90715 -> _90724) : (term991 _90715 _90724 f g) = (term285 _90715 _90724 g f).
Proof. exact (eq_refl (term991 _90715 _90724 f g)). Qed.
Lemma lem3498464 {_90715 _90724 : Type'} (g : type686 _90715) (f : _90715 -> _90724) : term285 _90715 _90724 g f.
Proof. exact (EQ_MP (@lem3498463 _90715 _90724 g f) (@lem3498462 _90715 _90724 f g)). Qed.
Lemma lem3498465 {_90715 _90724 : Type'} (g : type686 _90715) (f : _90715 -> _90724) (u : _90715 -> Prop) : term992 _90715 _90724 g f u.
Proof. exact (@lem3498464 _90715 _90724 g f u). Qed.
Lemma lem3498466 {_90715 _90724 : Type'} (u : _90715 -> Prop) (g : type686 _90715) (f : _90715 -> _90724) : (term992 _90715 _90724 g f u) = (term276 _90715 _90724 u g f).
Proof. exact (eq_refl (term992 _90715 _90724 g f u)). Qed.
Lemma lem3498467 {_90715 _90724 : Type'} (u : _90715 -> Prop) (g : type686 _90715) (f : _90715 -> _90724) : term276 _90715 _90724 u g f.
Proof. exact (EQ_MP (@lem3498466 _90715 _90724 u g f) (@lem3498465 _90715 _90724 g f u)). Qed.
Lemma lem3498469 {_90715 _90724 : Type'} (u : _90715 -> Prop) (g : type686 _90715) (f : _90715 -> _90724) : term276 _90715 _90724 u g f.
Proof. exact (@lem3494694 _90715 _90724 u g f (@lem3498467 _90715 _90724 u g f)). Qed.
Lemma lem3498470 {_90715 _90724 : Type'} (u : _90715 -> Prop) (g : type686 _90715) (f : _90715 -> _90724) (h1 : term277 _90715 _90724 u g f) : False.
Proof. exact (@lem3498469 _90715 _90724 u g f (@lem3494678 _90715 _90724 u g f h1)). Qed.
Lemma lem3498471 {_90715 _90724 : Type'} (u : _90715 -> Prop) (g : type686 _90715) (f : _90715 -> _90724) (h1 : term277 _90715 _90724 u g f) : (term277 _90715 _90724 u g f) = False.
Proof. exact (prop_ext (fun h2 : term277 _90715 _90724 u g f => @lem3498470 _90715 _90724 u g f h1) (fun h2 : False => @lem3494678 _90715 _90724 u g f h1)). Qed.
Lemma lem3498472 {_90715 _90724 : Type'} (u : _90715 -> Prop) (g : type686 _90715) (f : _90715 -> _90724) (h1 : term277 _90715 _90724 u g f) : False.
Proof. exact (EQ_MP (@lem3498471 _90715 _90724 u g f h1) (@lem3494678 _90715 _90724 u g f h1)). Qed.
Lemma lem3498473 {_90715 _90724 : Type'} (u : _90715 -> Prop) (g : type686 _90715) (f : _90715 -> _90724) : term276 _90715 _90724 u g f.
Proof. exact (fun h0 : term277 _90715 _90724 u g f => @lem3498472 _90715 _90724 u g f h0). Qed.
Lemma lem3498474 {_90715 _90724 : Type'} (u : _90715 -> Prop) (g : type686 _90715) (f : _90715 -> _90724) : term274 _90715 _90724 u g f.
Proof. exact (EQ_MP (@lem3494677 _90715 _90724 u g f) (@lem3498473 _90715 _90724 u g f)). Qed.
Lemma lem3498475 {_90715 _90724 : Type'} (u : _90715 -> Prop) (g : type686 _90715) (f : _90715 -> _90724) : term206 _90715 _90724 u g f.
Proof. exact (EQ_MP (@lem3494673 _90715 _90724 u g f) (@lem3498474 _90715 _90724 u g f)). Qed.
Lemma lem3498476 {_90715 _90724 : Type'} (u : _90715 -> Prop) (g : type686 _90715) (f : _90715 -> _90724) : term196 _90715 _90724 u g f.
Proof. exact (EQ_MP (@lem3494392 _90715 _90724 u g f) (@lem3498475 _90715 _90724 u g f)). Qed.
Lemma lem3498477 {_90715 _90724 : Type'} (u : _90715 -> Prop) (f : _90715 -> _90724) (g : type686 _90715) : term169 _90715 _90724 u f g.
Proof. exact (EQ_MP (@lem3494283 _90715 _90724 u f g) (@lem3498476 _90715 _90724 u g f)). Qed.
Lemma lem3498478 {_90715 _90724 : Type'} (u : _90715 -> Prop) (f : _90715 -> _90724) (g : type686 _90715) : term146 _90715 _90724 u f g.
Proof. exact (EQ_MP (@lem3494162 _90715 _90724 u f g) (@lem3498477 _90715 _90724 u f g)). Qed.
Lemma lem3498479 {_90715 _90724 : Type'} (u : _90715 -> Prop) (f : _90715 -> _90724) (g : type686 _90715) : term113 _90715 _90724 u f g.
Proof. exact (EQ_MP (@lem3494074 _90715 _90724 u f g) (@lem3498478 _90715 _90724 u f g)). Qed.
Lemma lem3498480 {_90715 _90724 : Type'} (u : _90715 -> Prop) (f : _90715 -> _90724) (g : type686 _90715) : term53 _90715 _90724 u f g.
Proof. exact (EQ_MP (@lem3493936 _90715 _90724 u f g) (@lem3498479 _90715 _90724 u f g)). Qed.
Lemma lem3498481 {_90715 _90724 : Type'} (u : _90715 -> Prop) (f : _90715 -> _90724) (g : type686 _90715) : term52 _90715 _90724 u f g.
Proof. exact (EQ_MP (@lem3493765 _90715 _90724 u f g) (@lem3498480 _90715 _90724 u f g)). Qed.
Lemma lem3498482 {_90715 _90724 : Type'} (u : _90715 -> Prop) (f : _90715 -> _90724) (g : type686 _90715) (h1 : term52 _90715 _90724 u f g) : term52 _90715 _90724 u f g.
Proof. exact (h1). Qed.
Lemma lem3498483 {_90715 _90724 : Type'} (g : type686 _90715) (u : _90715 -> Prop) (f : _90715 -> _90724) (h1 : term45 _90715 _90724 g u f) : term45 _90715 _90724 g u f.
Proof. exact (h1). Qed.
Lemma lem3498484 {_90715 _90724 : Type'} (u : _90715 -> Prop) (f : _90715 -> _90724) (g : type686 _90715) (h1 : term45 _90715 _90724 g u f) (h2 : term52 _90715 _90724 u f g) : (term49 _90715 _90724 f g) = (term50 _90715 _90724 f g).
Proof. exact (@lem3498482 _90715 _90724 u f g h2 (@lem3498483 _90715 _90724 g u f h1)). Qed.
Lemma lem3498485 {_90715 _90724 : Type'} (g : type686 _90715) (u : _90715 -> Prop) (f : _90715 -> _90724) (h1 : term45 _90715 _90724 g u f) : term993 _90715 _90724 u f g.
Proof. exact (fun h0 : term52 _90715 _90724 u f g => @lem3498484 _90715 _90724 u f g h1 h0). Qed.
Lemma lem3498486 {_90715 _90724 : Type'} (u : _90715 -> Prop) (f : _90715 -> _90724) (g : type686 _90715) (h1 : term52 _90715 _90724 u f g) : term52 _90715 _90724 u f g.
Proof. exact (h1). Qed.
Lemma lem3498487 {_90715 _90724 : Type'} (u : _90715 -> Prop) (f : _90715 -> _90724) (g : type686 _90715) (h1 : term45 _90715 _90724 g u f) (h2 : term52 _90715 _90724 u f g) : (term49 _90715 _90724 f g) = (term50 _90715 _90724 f g).
Proof. exact (@lem3498485 _90715 _90724 g u f h1 (@lem3498486 _90715 _90724 u f g h2)). Qed.
Lemma lem3498488 {_90715 _90724 : Type'} (u : _90715 -> Prop) (f : _90715 -> _90724) (g : type686 _90715) (h1 : term52 _90715 _90724 u f g) : term52 _90715 _90724 u f g.
Proof. exact (fun h0 : term45 _90715 _90724 g u f => @lem3498487 _90715 _90724 u f g h0 h1). Qed.
Lemma lem3498489 {_90715 _90724 : Type'} (u : _90715 -> Prop) (f : _90715 -> _90724) (g : type686 _90715) : term994 _90715 _90724 u f g.
Proof. exact (fun h0 : term52 _90715 _90724 u f g => @lem3498488 _90715 _90724 u f g h0). Qed.
Lemma lem3498491 {A B : Type'} (h1 : term995 A B) : term995 A B.
Proof. exact (h1). Qed.
Lemma lem3498492 {A B : Type'} (f : A -> B) (h1 : term995 A B) : term996 A B f.
Proof. exact (@lem3498491 A B h1 f). Qed.
Lemma lem3498493 {A B : Type'} (f : A -> B) : (term996 A B f) = (term997 A B f).
Proof. exact (eq_refl (term996 A B f)). Qed.
Lemma lem3498494 {A B : Type'} (f : A -> B) (h1 : term995 A B) : term997 A B f.
Proof. exact (EQ_MP (@lem3498493 A B f) (@lem3498492 A B f h1)). Qed.
Lemma lem3498495 {A B : Type'} (f : A -> B) (s : A -> Prop) (h1 : term995 A B) : term998 A B f s.
Proof. exact (@lem3498494 A B f h1 s). Qed.
Lemma lem3498496 {A B : Type'} (s : A -> Prop) (f : A -> B) : (term998 A B f s) = (term999 A B s f).
Proof. exact (eq_refl (term998 A B f s)). Qed.
Lemma lem3498497 {A B : Type'} (s : A -> Prop) (f : A -> B) (h1 : term995 A B) : term999 A B s f.
Proof. exact (EQ_MP (@lem3498496 A B s f) (@lem3498495 A B f s h1)). Qed.
Lemma lem3498498 {A B : Type'} (s : A -> Prop) (f : A -> B) (t : A -> Prop) (h1 : term995 A B) : term1000 A B s f t.
Proof. exact (@lem3498497 A B s f h1 t). Qed.
Lemma lem3498499 {A B : Type'} (s : A -> Prop) (f : A -> B) (t : A -> Prop) : (term1000 A B s f t) = (term1001 A B s f t).
Proof. exact (eq_refl (term1000 A B s f t)). Qed.
Lemma lem3498500 {A B : Type'} (s : A -> Prop) (f : A -> B) (t : A -> Prop) (h1 : term995 A B) : term1001 A B s f t.
Proof. exact (EQ_MP (@lem3498499 A B s f t) (@lem3498498 A B s f t h1)). Qed.
Lemma lem3498501 {A B : Type'} (s : A -> Prop) (f : A -> B) (t : A -> Prop) (u : A -> Prop) (h1 : term995 A B) : term1002 A B s f t u.
Proof. exact (@lem3498500 A B s f t h1 u). Qed.
Lemma lem3498502 {A B : Type'} (u : A -> Prop) (s : A -> Prop) (f : A -> B) (t : A -> Prop) : (term1002 A B s f t u) = (term1003 A B u s f t).
Proof. exact (eq_refl (term1002 A B s f t u)). Qed.
Lemma lem3498503 {A B : Type'} (u : A -> Prop) (s : A -> Prop) (f : A -> B) (t : A -> Prop) (h1 : term995 A B) : term1003 A B u s f t.
Proof. exact (EQ_MP (@lem3498502 A B u s f t) (@lem3498501 A B s f t u h1)). Qed.
Lemma lem3498504 {A B : Type'} (f : A -> B) (t : A -> Prop) (s : A -> Prop) (u : A -> Prop) (h1 : term1004 A B f t s u) : term1004 A B f t s u.
Proof. exact (h1). Qed.
Lemma lem3498505 {A B : Type'} (f : A -> B) (t : A -> Prop) (s : A -> Prop) (u : A -> Prop) (h1 : term995 A B) (h2 : term1004 A B f t s u) : (term1005 A B f s t) = (term1006 A B s f t).
Proof. exact (@lem3498503 A B u s f t h1 (@lem3498504 A B f t s u h2)). Qed.
Lemma lem3498506 {A B : Type'} (f : A -> B) (t : A -> Prop) (s : A -> Prop) (u : A -> Prop) (h1 : term1004 A B f t s u) : term1007 A B s f t.
Proof. exact (fun h0 : term995 A B => @lem3498505 A B f t s u h0 h1). Qed.
Lemma lem3498507 {A B : Type'} (f : A -> B) (t : A -> Prop) (s : A -> Prop) (h1 : term1008 A B f t s) : term1008 A B f t s.
Proof. exact (h1). Qed.
Lemma lem3498508 {A B : Type'} (f : A -> B) (t : A -> Prop) (s : A -> Prop) (h1 : term1008 A B f t s) : term1007 A B s f t.
Proof. exact (ex_elim (@lem3498507 A B f t s h1) (fun u : A -> Prop => fun h0 : term1009 A B f t s u => @lem3498506 A B f t s u h0)). Qed.
Lemma lem3498509 {A B : Type'} (h1 : term995 A B) : term995 A B.
Proof. exact (h1). Qed.
Lemma lem3498510 {A B : Type'} (f : A -> B) (t : A -> Prop) (s : A -> Prop) (h1 : term995 A B) (h2 : term1008 A B f t s) : (term1005 A B f s t) = (term1006 A B s f t).
Proof. exact (@lem3498508 A B f t s h2 (@lem3498509 A B h1)). Qed.
Lemma lem3498511 {A B : Type'} (s : A -> Prop) (f : A -> B) (t : A -> Prop) (h1 : term995 A B) : term1010 A B s f t.
Proof. exact (fun h0 : term1008 A B f t s => @lem3498510 A B f t s h1 h0). Qed.
Lemma lem3498512 {A B : Type'} (s : A -> Prop) (f : A -> B) (h1 : term995 A B) : term1011 A B s f.
Proof. exact (fun t : A -> Prop => @lem3498511 A B s f t h1). Qed.
Lemma lem3498513 {A B : Type'} (s : A -> Prop) (h1 : term995 A B) : term1012 A B s.
Proof. exact (fun f : A -> B => @lem3498512 A B s f h1). Qed.
Lemma lem3498514 {A B : Type'} (h1 : term995 A B) : term1013 A B.
Proof. exact (fun s : A -> Prop => @lem3498513 A B s h1). Qed.
Lemma lem3498515 {A B : Type'} : term1014 A B.
Proof. exact (fun h0 : term995 A B => @lem3498514 A B h0). Qed.
Lemma lem3498516 {A B : Type'} : term1013 A B.
Proof. exact (@lem3498515 A B (@lem3493630 A B)). Qed.
Lemma lem3498517 {A B : Type'} (s : A -> Prop) : term1015 A B s.
Proof. exact (@lem3498516 A B s). Qed.
Lemma lem3498518 {A B : Type'} (s : A -> Prop) : (term1015 A B s) = (term1012 A B s).
Proof. exact (eq_refl (term1015 A B s)). Qed.
Lemma lem3498519 {A B : Type'} (s : A -> Prop) : term1012 A B s.
Proof. exact (EQ_MP (@lem3498518 A B s) (@lem3498517 A B s)). Qed.
Lemma lem3498520 {A B : Type'} (s : A -> Prop) (f : A -> B) : term1016 A B s f.
Proof. exact (@lem3498519 A B s f). Qed.
Lemma lem3498521 {A B : Type'} (s : A -> Prop) (f : A -> B) : (term1016 A B s f) = (term1011 A B s f).
Proof. exact (eq_refl (term1016 A B s f)). Qed.
Lemma lem3498522 {A B : Type'} (s : A -> Prop) (f : A -> B) : term1011 A B s f.
Proof. exact (EQ_MP (@lem3498521 A B s f) (@lem3498520 A B s f)). Qed.
Lemma lem3498523 {A B : Type'} (s : A -> Prop) (f : A -> B) (t : A -> Prop) : term1017 A B s f t.
Proof. exact (@lem3498522 A B s f t). Qed.
Lemma lem3498524 {A B : Type'} (s : A -> Prop) (f : A -> B) (t : A -> Prop) : (term1017 A B s f t) = (term1010 A B s f t).
Proof. exact (eq_refl (term1017 A B s f t)). Qed.
Lemma lem3498526 (t1 : Prop) : term0 t1.
Proof. exact (@lem693 t1). Qed.
Lemma lem3498527 (t1 : Prop) : (term0 t1) = (term1 t1).
Proof. exact (eq_refl (term0 t1)). Qed.
Lemma lem3498528 (t1 : Prop) : term1 t1.
Proof. exact (EQ_MP (@lem3498527 t1) (@lem3498526 t1)). Qed.
Lemma lem3498529 (t1 : Prop) (t2 : Prop) : term2 t1 t2.
Proof. exact (@lem3498528 t1 t2). Qed.
Lemma lem3498530 (t1 : Prop) (t2 : Prop) : (term2 t1 t2) = (term3 t1 t2).
Proof. exact (eq_refl (term2 t1 t2)). Qed.
Lemma lem3498531 (t1 : Prop) (t2 : Prop) : term3 t1 t2.
Proof. exact (EQ_MP (@lem3498530 t1 t2) (@lem3498529 t1 t2)). Qed.
Lemma lem3498532 (t1 : Prop) (t2 : Prop) (t3 : Prop) : term4 t1 t2 t3.
Proof. exact (@lem3498531 t1 t2 t3). Qed.
Lemma lem3498533 (t1 : Prop) (t2 : Prop) (t3 : Prop) : (term4 t1 t2 t3) = ((term5 t1 t2 t3) = (term6 t1 t2 t3)).
Proof. exact (eq_refl (term4 t1 t2 t3)). Qed.
Lemma lem3498534 (t1 : Prop) (t2 : Prop) (t3 : Prop) : (term5 t1 t2 t3) = (term6 t1 t2 t3).
Proof. exact (EQ_MP (@lem3498533 t1 t2 t3) (@lem3498532 t1 t2 t3)). Qed.
Lemma lem3498535 (t1 : Prop) (t2 : Prop) (t3 : Prop) : (term6 t1 t2 t3) = (term5 t1 t2 t3).
Proof. exact (SYM (@lem3498534 t1 t2 t3)). Qed.
Lemma lem3498543 {A : Type'} (s : A -> Prop) (t : A -> Prop) : (s = t) = (term37 A s t).
Proof. exact (EQ_MP (@lem3211757 A s t) (@lem3211756 A s t)). Qed.
Lemma lem3498544 {_90775 : Type'} (s : _90775 -> Prop) (t : _90775 -> Prop) : (s = t) = (term37 _90775 s t).
Proof. exact (@lem3498543 _90775 s t). Qed.
Lemma lem3498545 {_90768 _90775 : Type'} (s : _90768 -> Prop) (f : _90768 -> _90775) (t : _90768 -> Prop) : ((term1005 _90768 _90775 f s t) = (term1006 _90768 _90775 s f t)) = (term1018 _90768 _90775 s f t).
Proof. exact (@lem3498544 _90775 (term1005 _90768 _90775 f s t) (term1006 _90768 _90775 s f t)). Qed.
Lemma lem3498554 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem3498555 {_90768 _90775 : Type'} (s : _90768 -> Prop) (f : _90768 -> _90775) (t : _90768 -> Prop) : (term1019 _90768 _90775 s f t) = (term1020 _90768 _90775 s f t).
Proof. exact (MK_COMB (@lem3498554) (@lem3498545 _90768 _90775 s f t)). Qed.
Lemma lem3498559 {A : Type'} (s : A -> Prop) (t : A -> Prop) : (s = t) = (term37 A s t).
Proof. exact (EQ_MP (@lem3211757 A s t) (@lem3211756 A s t)). Qed.
Lemma lem3498560 {_90775 : Type'} (s : _90775 -> Prop) (t : _90775 -> Prop) : (s = t) = (term37 _90775 s t).
Proof. exact (@lem3498559 _90775 s t). Qed.
Lemma lem3498561 {_90768 _90775 : Type'} (f : _90768 -> _90775) (t : _90768 -> Prop) (u : _90775 -> Prop) : ((@IMAGE _90768 _90775 f t) = u) = (term1021 _90768 _90775 f t u).
Proof. exact (@lem3498560 _90775 (@IMAGE _90768 _90775 f t) u). Qed.
Lemma lem3498570 {_90768 _90775 : Type'} (s : _90768 -> Prop) (f : _90768 -> _90775) (t : _90768 -> Prop) (u : _90775 -> Prop) : (term1022 _90768 _90775 s f t u) = (term1023 _90768 _90775 s f t u).
Proof. exact (MK_COMB (@lem3498555 _90768 _90775 s f t) (@lem3498561 _90768 _90775 f t u)). Qed.
Lemma lem3498573 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem3498574 {_90768 _90775 : Type'} (s : _90768 -> Prop) (f : _90768 -> _90775) (t : _90768 -> Prop) (u : _90775 -> Prop) : (term1024 _90768 _90775 s f t u) = (term1025 _90768 _90775 s f t u).
Proof. exact (MK_COMB (@lem3498573) (@lem3498570 _90768 _90775 s f t u)). Qed.
Lemma lem3498578 {A : Type'} (s : A -> Prop) (t : A -> Prop) : (s = t) = (term37 A s t).
Proof. exact (EQ_MP (@lem3211757 A s t) (@lem3211756 A s t)). Qed.
Lemma lem3498579 {_90775 : Type'} (s : _90775 -> Prop) (t : _90775 -> Prop) : (s = t) = (term37 _90775 s t).
Proof. exact (@lem3498578 _90775 s t). Qed.
Lemma lem3498580 {_90768 _90775 : Type'} (t : _90768 -> Prop) (f : _90768 -> _90775) (s : _90768 -> Prop) (u : _90775 -> Prop) : ((term1005 _90768 _90775 f s t) = (term1026 _90768 _90775 f s u)) = (term1027 _90768 _90775 t f s u).
Proof. exact (@lem3498579 _90775 (term1005 _90768 _90775 f s t) (term1026 _90768 _90775 f s u)). Qed.
Lemma lem3498589 {_90768 _90775 : Type'} (t : _90768 -> Prop) (f : _90768 -> _90775) (s : _90768 -> Prop) (u : _90775 -> Prop) : (term1028 _90768 _90775 t f s u) = (term1029 _90768 _90775 t f s u).
Proof. exact (MK_COMB (@lem3498574 _90768 _90775 s f t u) (@lem3498580 _90768 _90775 t f s u)). Qed.
Lemma lem3498592 {_90768 _90775 : Type'} (t : _90768 -> Prop) (f : _90768 -> _90775) (s : _90768 -> Prop) (u : _90775 -> Prop) : (term1029 _90768 _90775 t f s u) = (term1028 _90768 _90775 t f s u).
Proof. exact (SYM (@lem3498589 _90768 _90775 t f s u)). Qed.
Lemma lem3498604 {A B : Type'} (y : B) (f : A -> B) (s : A -> Prop) : (term27 A B y f s) = (term28 A B y f s).
Proof. exact (EQ_MP (@lem3211657 A B y f s) (@lem3211656 A B y s f)). Qed.
Lemma lem3498605 {_90768 _90775 : Type'} (y : _90775) (f : _90768 -> _90775) (s : _90768 -> Prop) : (term27 _90768 _90775 y f s) = (term28 _90768 _90775 y f s).
Proof. exact (@lem3498604 _90768 _90775 y f s). Qed.
Lemma lem3498606 {_90768 _90775 : Type'} (x : _90775) (f : _90768 -> _90775) (s : _90768 -> Prop) (t : _90768 -> Prop) : (term1030 _90768 _90775 x f s t) = (term1031 _90768 _90775 x f s t).
Proof. exact (@lem3498605 _90768 _90775 x f (@INTER _90768 s t)). Qed.
Lemma lem3498616 {A : Type'} (s : A -> Prop) (x : A) (t : A -> Prop) : (term1032 A x s t) = (term1033 A s x t).
Proof. exact (EQ_MP (@lem3211711 A s x t) (@lem3211710 A s t x)). Qed.
Lemma lem3498617 {_90768 : Type'} (s : _90768 -> Prop) (x : _90768) (t : _90768 -> Prop) : (term1032 _90768 x s t) = (term1033 _90768 s x t).
Proof. exact (@lem3498616 _90768 s x t). Qed.
Lemma lem3498621 {A : Type'} (P : A -> Prop) (x : A) : (@IN A x P) = (P x).
Proof. exact (EQ_MP (@lem3211610 A P x) (@lem3211609 A P x)). Qed.
Lemma lem3498622 {_90768 : Type'} (P : _90768 -> Prop) (x : _90768) : (@IN _90768 x P) = (P x).
Proof. exact (@lem3498621 _90768 P x). Qed.
Lemma lem3498623 {_90768 : Type'} (s : _90768 -> Prop) (x : _90768) : (@IN _90768 x s) = (s x).
Proof. exact (@lem3498622 _90768 s x). Qed.
Lemma lem3498624 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem3498625 {_90768 : Type'} (s : _90768 -> Prop) (x : _90768) : (term56 _90768 x s) = (term234 _90768 s x).
Proof. exact (MK_COMB (@lem3498624) (@lem3498623 _90768 s x)). Qed.
Lemma lem3498627 {A : Type'} (P : A -> Prop) (x : A) : (@IN A x P) = (P x).
Proof. exact (EQ_MP (@lem3211610 A P x) (@lem3211609 A P x)). Qed.
Lemma lem3498628 {_90768 : Type'} (P : _90768 -> Prop) (x : _90768) : (@IN _90768 x P) = (P x).
Proof. exact (@lem3498627 _90768 P x). Qed.
Lemma lem3498629 {_90768 : Type'} (t : _90768 -> Prop) (x : _90768) : (@IN _90768 x t) = (t x).
Proof. exact (@lem3498628 _90768 t x). Qed.
Lemma lem3498630 {_90768 : Type'} (s : _90768 -> Prop) (t : _90768 -> Prop) (x : _90768) : (term1033 _90768 s x t) = (term1034 _90768 s t x).
Proof. exact (MK_COMB (@lem3498625 _90768 s x) (@lem3498629 _90768 t x)). Qed.
Lemma lem3498633 {_90768 : Type'} (s : _90768 -> Prop) (t : _90768 -> Prop) (x : _90768) : (term1032 _90768 x s t) = (term1034 _90768 s t x).
Proof. exact (TRANS (@lem3498617 _90768 s x t) (@lem3498630 _90768 s t x)). Qed.
Lemma lem3498634 {_90768 _90775 : Type'} (x : _90775) (f : _90768 -> _90775) (x' : _90768) : (term88 _90768 _90775 x f x') = (term88 _90768 _90775 x f x').
Proof. exact (eq_refl (term88 _90768 _90775 x f x')). Qed.
Lemma lem3498635 {_90768 _90775 : Type'} (x : _90775) (f : _90768 -> _90775) (s : _90768 -> Prop) (t : _90768 -> Prop) (x' : _90768) : (term1035 _90768 _90775 x f x' s t) = (term1036 _90768 _90775 x f s t x').
Proof. exact (MK_COMB (@lem3498634 _90768 _90775 x f x') (@lem3498633 _90768 s t x')). Qed.
Lemma lem3498638 {_90768 _90775 : Type'} (x : _90775) (f : _90768 -> _90775) (s : _90768 -> Prop) (t : _90768 -> Prop) : (term1037 _90768 _90775 x f s t) = (term1038 _90768 _90775 x f s t).
Proof. exact (fun_ext (fun x' : _90768 => @lem3498635 _90768 _90775 x f s t x')). Qed.
Lemma lem3498639 {_90768 : Type'} : (@ex _90768) = (@ex _90768).
Proof. exact (eq_refl (@ex _90768)). Qed.
Lemma lem3498640 {_90768 _90775 : Type'} (x : _90775) (f : _90768 -> _90775) (s : _90768 -> Prop) (t : _90768 -> Prop) : (term1031 _90768 _90775 x f s t) = (term1039 _90768 _90775 x f s t).
Proof. exact (MK_COMB (@lem3498639 _90768) (@lem3498638 _90768 _90775 x f s t)). Qed.
Lemma lem3498645 {_90768 _90775 : Type'} (x : _90775) (f : _90768 -> _90775) (s : _90768 -> Prop) (t : _90768 -> Prop) : (term1030 _90768 _90775 x f s t) = (term1039 _90768 _90775 x f s t).
Proof. exact (TRANS (@lem3498606 _90768 _90775 x f s t) (@lem3498640 _90768 _90775 x f s t)). Qed.
Lemma lem3498646 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem3498647 {_90768 _90775 : Type'} (x : _90775) (f : _90768 -> _90775) (s : _90768 -> Prop) (t : _90768 -> Prop) : (term1040 _90768 _90775 x f s t) = (term1041 _90768 _90775 x f s t).
Proof. exact (MK_COMB (@lem3498646) (@lem3498645 _90768 _90775 x f s t)). Qed.
Lemma lem3498649 {A : Type'} (s : A -> Prop) (x : A) (t : A -> Prop) : (term1032 A x s t) = (term1033 A s x t).
Proof. exact (EQ_MP (@lem3211711 A s x t) (@lem3211710 A s t x)). Qed.
Lemma lem3498650 {_90775 : Type'} (s : _90775 -> Prop) (x : _90775) (t : _90775 -> Prop) : (term1032 _90775 x s t) = (term1033 _90775 s x t).
Proof. exact (@lem3498649 _90775 s x t). Qed.
Lemma lem3498651 {_90768 _90775 : Type'} (s : _90768 -> Prop) (x : _90775) (f : _90768 -> _90775) (t : _90768 -> Prop) : (term1042 _90768 _90775 x s f t) = (term1043 _90768 _90775 s x f t).
Proof. exact (@lem3498650 _90775 (@IMAGE _90768 _90775 f s) x (@IMAGE _90768 _90775 f t)). Qed.
Lemma lem3498655 {A B : Type'} (y : B) (f : A -> B) (s : A -> Prop) : (term27 A B y f s) = (term28 A B y f s).
Proof. exact (EQ_MP (@lem3211657 A B y f s) (@lem3211656 A B y s f)). Qed.
Lemma lem3498656 {_90768 _90775 : Type'} (y : _90775) (f : _90768 -> _90775) (s : _90768 -> Prop) : (term27 _90768 _90775 y f s) = (term28 _90768 _90775 y f s).
Proof. exact (@lem3498655 _90768 _90775 y f s). Qed.
Lemma lem3498657 {_90768 _90775 : Type'} (x : _90775) (f : _90768 -> _90775) (s : _90768 -> Prop) : (term27 _90768 _90775 x f s) = (term28 _90768 _90775 x f s).
Proof. exact (@lem3498656 _90768 _90775 x f s). Qed.
Lemma lem3498667 {A : Type'} (P : A -> Prop) (x : A) : (@IN A x P) = (P x).
Proof. exact (EQ_MP (@lem3211610 A P x) (@lem3211609 A P x)). Qed.
Lemma lem3498668 {_90768 : Type'} (P : _90768 -> Prop) (x : _90768) : (@IN _90768 x P) = (P x).
Proof. exact (@lem3498667 _90768 P x). Qed.
Lemma lem3498669 {_90768 : Type'} (s : _90768 -> Prop) (x : _90768) : (@IN _90768 x s) = (s x).
Proof. exact (@lem3498668 _90768 s x). Qed.
Lemma lem3498670 {_90768 _90775 : Type'} (x : _90775) (f : _90768 -> _90775) (x' : _90768) : (term88 _90768 _90775 x f x') = (term88 _90768 _90775 x f x').
Proof. exact (eq_refl (term88 _90768 _90775 x f x')). Qed.
Lemma lem3498671 {_90768 _90775 : Type'} (x : _90775) (f : _90768 -> _90775) (s : _90768 -> Prop) (x' : _90768) : (term263 _90768 _90775 x f x' s) = (term264 _90768 _90775 x f s x').
Proof. exact (MK_COMB (@lem3498670 _90768 _90775 x f x') (@lem3498669 _90768 s x')). Qed.
Lemma lem3498674 {_90768 _90775 : Type'} (x : _90775) (f : _90768 -> _90775) (s : _90768 -> Prop) : (term265 _90768 _90775 x f s) = (term266 _90768 _90775 x f s).
Proof. exact (fun_ext (fun x' : _90768 => @lem3498671 _90768 _90775 x f s x')). Qed.
Lemma lem3498675 {_90768 : Type'} : (@ex _90768) = (@ex _90768).
Proof. exact (eq_refl (@ex _90768)). Qed.
Lemma lem3498676 {_90768 _90775 : Type'} (x : _90775) (f : _90768 -> _90775) (s : _90768 -> Prop) : (term28 _90768 _90775 x f s) = (term267 _90768 _90775 x f s).
Proof. exact (MK_COMB (@lem3498675 _90768) (@lem3498674 _90768 _90775 x f s)). Qed.
Lemma lem3498681 {_90768 _90775 : Type'} (x : _90775) (f : _90768 -> _90775) (s : _90768 -> Prop) : (term27 _90768 _90775 x f s) = (term267 _90768 _90775 x f s).
Proof. exact (TRANS (@lem3498657 _90768 _90775 x f s) (@lem3498676 _90768 _90775 x f s)). Qed.
Lemma lem3498682 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem3498683 {_90768 _90775 : Type'} (x : _90775) (f : _90768 -> _90775) (s : _90768 -> Prop) : (term1044 _90768 _90775 x f s) = (term1045 _90768 _90775 x f s).
Proof. exact (MK_COMB (@lem3498682) (@lem3498681 _90768 _90775 x f s)). Qed.
Lemma lem3498685 {A B : Type'} (y : B) (f : A -> B) (s : A -> Prop) : (term27 A B y f s) = (term28 A B y f s).
Proof. exact (EQ_MP (@lem3211657 A B y f s) (@lem3211656 A B y s f)). Qed.
Lemma lem3498686 {_90768 _90775 : Type'} (y : _90775) (f : _90768 -> _90775) (s : _90768 -> Prop) : (term27 _90768 _90775 y f s) = (term28 _90768 _90775 y f s).
Proof. exact (@lem3498685 _90768 _90775 y f s). Qed.
Lemma lem3498687 {_90768 _90775 : Type'} (x : _90775) (f : _90768 -> _90775) (t : _90768 -> Prop) : (term27 _90768 _90775 x f t) = (term28 _90768 _90775 x f t).
Proof. exact (@lem3498686 _90768 _90775 x f t). Qed.
Lemma lem3498697 {A : Type'} (P : A -> Prop) (x : A) : (@IN A x P) = (P x).
Proof. exact (EQ_MP (@lem3211610 A P x) (@lem3211609 A P x)). Qed.
Lemma lem3498698 {_90768 : Type'} (P : _90768 -> Prop) (x : _90768) : (@IN _90768 x P) = (P x).
Proof. exact (@lem3498697 _90768 P x). Qed.
Lemma lem3498699 {_90768 : Type'} (t : _90768 -> Prop) (x : _90768) : (@IN _90768 x t) = (t x).
Proof. exact (@lem3498698 _90768 t x). Qed.
Lemma lem3498700 {_90768 _90775 : Type'} (x : _90775) (f : _90768 -> _90775) (x' : _90768) : (term88 _90768 _90775 x f x') = (term88 _90768 _90775 x f x').
Proof. exact (eq_refl (term88 _90768 _90775 x f x')). Qed.
Lemma lem3498701 {_90768 _90775 : Type'} (x : _90775) (f : _90768 -> _90775) (t : _90768 -> Prop) (x' : _90768) : (term263 _90768 _90775 x f x' t) = (term264 _90768 _90775 x f t x').
Proof. exact (MK_COMB (@lem3498700 _90768 _90775 x f x') (@lem3498699 _90768 t x')). Qed.
Lemma lem3498704 {_90768 _90775 : Type'} (x : _90775) (f : _90768 -> _90775) (t : _90768 -> Prop) : (term265 _90768 _90775 x f t) = (term266 _90768 _90775 x f t).
Proof. exact (fun_ext (fun x' : _90768 => @lem3498701 _90768 _90775 x f t x')). Qed.
Lemma lem3498705 {_90768 : Type'} : (@ex _90768) = (@ex _90768).
Proof. exact (eq_refl (@ex _90768)). Qed.
Lemma lem3498706 {_90768 _90775 : Type'} (x : _90775) (f : _90768 -> _90775) (t : _90768 -> Prop) : (term28 _90768 _90775 x f t) = (term267 _90768 _90775 x f t).
Proof. exact (MK_COMB (@lem3498705 _90768) (@lem3498704 _90768 _90775 x f t)). Qed.
Lemma lem3498711 {_90768 _90775 : Type'} (x : _90775) (f : _90768 -> _90775) (t : _90768 -> Prop) : (term27 _90768 _90775 x f t) = (term267 _90768 _90775 x f t).
Proof. exact (TRANS (@lem3498687 _90768 _90775 x f t) (@lem3498706 _90768 _90775 x f t)). Qed.
Lemma lem3498712 {_90768 _90775 : Type'} (s : _90768 -> Prop) (x : _90775) (f : _90768 -> _90775) (t : _90768 -> Prop) : (term1043 _90768 _90775 s x f t) = (term1046 _90768 _90775 s x f t).
Proof. exact (MK_COMB (@lem3498683 _90768 _90775 x f s) (@lem3498711 _90768 _90775 x f t)). Qed.
Lemma lem3498715 {_90768 _90775 : Type'} (s : _90768 -> Prop) (x : _90775) (f : _90768 -> _90775) (t : _90768 -> Prop) : (term1042 _90768 _90775 x s f t) = (term1046 _90768 _90775 s x f t).
Proof. exact (TRANS (@lem3498651 _90768 _90775 s x f t) (@lem3498712 _90768 _90775 s x f t)). Qed.
Lemma lem3498716 {_90768 _90775 : Type'} (s : _90768 -> Prop) (x : _90775) (f : _90768 -> _90775) (t : _90768 -> Prop) : ((term1030 _90768 _90775 x f s t) = (term1042 _90768 _90775 x s f t)) = ((term1039 _90768 _90775 x f s t) = (term1046 _90768 _90775 s x f t)).
Proof. exact (MK_COMB (@lem3498647 _90768 _90775 x f s t) (@lem3498715 _90768 _90775 s x f t)). Qed.
Lemma lem3498719 {_90768 _90775 : Type'} (s : _90768 -> Prop) (f : _90768 -> _90775) (t : _90768 -> Prop) : (term1047 _90768 _90775 s f t) = (term1048 _90768 _90775 s f t).
Proof. exact (fun_ext (fun x : _90775 => @lem3498716 _90768 _90775 s x f t)). Qed.
Lemma lem3498720 {_90775 : Type'} : (@all _90775) = (@all _90775).
Proof. exact (eq_refl (@all _90775)). Qed.
Lemma lem3498721 {_90768 _90775 : Type'} (s : _90768 -> Prop) (f : _90768 -> _90775) (t : _90768 -> Prop) : (term1018 _90768 _90775 s f t) = (term1049 _90768 _90775 s f t).
Proof. exact (MK_COMB (@lem3498720 _90775) (@lem3498719 _90768 _90775 s f t)). Qed.
Lemma lem3498726 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem3498727 {_90768 _90775 : Type'} (s : _90768 -> Prop) (f : _90768 -> _90775) (t : _90768 -> Prop) : (term1020 _90768 _90775 s f t) = (term1050 _90768 _90775 s f t).
Proof. exact (MK_COMB (@lem3498726) (@lem3498721 _90768 _90775 s f t)). Qed.
Lemma lem3498735 {A B : Type'} (y : B) (f : A -> B) (s : A -> Prop) : (term27 A B y f s) = (term28 A B y f s).
Proof. exact (EQ_MP (@lem3211657 A B y f s) (@lem3211656 A B y s f)). Qed.
Lemma lem3498736 {_90768 _90775 : Type'} (y : _90775) (f : _90768 -> _90775) (s : _90768 -> Prop) : (term27 _90768 _90775 y f s) = (term28 _90768 _90775 y f s).
Proof. exact (@lem3498735 _90768 _90775 y f s). Qed.
Lemma lem3498737 {_90768 _90775 : Type'} (x : _90775) (f : _90768 -> _90775) (t : _90768 -> Prop) : (term27 _90768 _90775 x f t) = (term28 _90768 _90775 x f t).
Proof. exact (@lem3498736 _90768 _90775 x f t). Qed.
Lemma lem3498747 {A : Type'} (P : A -> Prop) (x : A) : (@IN A x P) = (P x).
Proof. exact (EQ_MP (@lem3211610 A P x) (@lem3211609 A P x)). Qed.
Lemma lem3498748 {_90768 : Type'} (P : _90768 -> Prop) (x : _90768) : (@IN _90768 x P) = (P x).
Proof. exact (@lem3498747 _90768 P x). Qed.
Lemma lem3498749 {_90768 : Type'} (t : _90768 -> Prop) (x : _90768) : (@IN _90768 x t) = (t x).
Proof. exact (@lem3498748 _90768 t x). Qed.
Lemma lem3498750 {_90768 _90775 : Type'} (x : _90775) (f : _90768 -> _90775) (x' : _90768) : (term88 _90768 _90775 x f x') = (term88 _90768 _90775 x f x').
Proof. exact (eq_refl (term88 _90768 _90775 x f x')). Qed.
Lemma lem3498751 {_90768 _90775 : Type'} (x : _90775) (f : _90768 -> _90775) (t : _90768 -> Prop) (x' : _90768) : (term263 _90768 _90775 x f x' t) = (term264 _90768 _90775 x f t x').
Proof. exact (MK_COMB (@lem3498750 _90768 _90775 x f x') (@lem3498749 _90768 t x')). Qed.
Lemma lem3498754 {_90768 _90775 : Type'} (x : _90775) (f : _90768 -> _90775) (t : _90768 -> Prop) : (term265 _90768 _90775 x f t) = (term266 _90768 _90775 x f t).
Proof. exact (fun_ext (fun x' : _90768 => @lem3498751 _90768 _90775 x f t x')). Qed.
Lemma lem3498755 {_90768 : Type'} : (@ex _90768) = (@ex _90768).
Proof. exact (eq_refl (@ex _90768)). Qed.
Lemma lem3498756 {_90768 _90775 : Type'} (x : _90775) (f : _90768 -> _90775) (t : _90768 -> Prop) : (term28 _90768 _90775 x f t) = (term267 _90768 _90775 x f t).
Proof. exact (MK_COMB (@lem3498755 _90768) (@lem3498754 _90768 _90775 x f t)). Qed.
Lemma lem3498761 {_90768 _90775 : Type'} (x : _90775) (f : _90768 -> _90775) (t : _90768 -> Prop) : (term27 _90768 _90775 x f t) = (term267 _90768 _90775 x f t).
Proof. exact (TRANS (@lem3498737 _90768 _90775 x f t) (@lem3498756 _90768 _90775 x f t)). Qed.
Lemma lem3498762 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem3498763 {_90768 _90775 : Type'} (x : _90775) (f : _90768 -> _90775) (t : _90768 -> Prop) : (term1051 _90768 _90775 x f t) = (term1052 _90768 _90775 x f t).
Proof. exact (MK_COMB (@lem3498762) (@lem3498761 _90768 _90775 x f t)). Qed.
Lemma lem3498765 {A : Type'} (P : A -> Prop) (x : A) : (@IN A x P) = (P x).
Proof. exact (EQ_MP (@lem3211610 A P x) (@lem3211609 A P x)). Qed.
Lemma lem3498766 {_90775 : Type'} (P : _90775 -> Prop) (x : _90775) : (@IN _90775 x P) = (P x).
Proof. exact (@lem3498765 _90775 P x). Qed.
Lemma lem3498767 {_90775 : Type'} (u : _90775 -> Prop) (x : _90775) : (@IN _90775 x u) = (u x).
Proof. exact (@lem3498766 _90775 u x). Qed.
Lemma lem3498768 {_90768 _90775 : Type'} (f : _90768 -> _90775) (t : _90768 -> Prop) (u : _90775 -> Prop) (x : _90775) : ((term27 _90768 _90775 x f t) = (@IN _90775 x u)) = ((term267 _90768 _90775 x f t) = (u x)).
Proof. exact (MK_COMB (@lem3498763 _90768 _90775 x f t) (@lem3498767 _90775 u x)). Qed.
Lemma lem3498771 {_90768 _90775 : Type'} (f : _90768 -> _90775) (t : _90768 -> Prop) (u : _90775 -> Prop) : (term1053 _90768 _90775 f t u) = (term1054 _90768 _90775 f t u).
Proof. exact (fun_ext (fun x : _90775 => @lem3498768 _90768 _90775 f t u x)). Qed.
Lemma lem3498772 {_90775 : Type'} : (@all _90775) = (@all _90775).
Proof. exact (eq_refl (@all _90775)). Qed.
Lemma lem3498773 {_90768 _90775 : Type'} (f : _90768 -> _90775) (t : _90768 -> Prop) (u : _90775 -> Prop) : (term1021 _90768 _90775 f t u) = (term1055 _90768 _90775 f t u).
Proof. exact (MK_COMB (@lem3498772 _90775) (@lem3498771 _90768 _90775 f t u)). Qed.
Lemma lem3498778 {_90768 _90775 : Type'} (s : _90768 -> Prop) (f : _90768 -> _90775) (t : _90768 -> Prop) (u : _90775 -> Prop) : (term1023 _90768 _90775 s f t u) = (term1056 _90768 _90775 s f t u).
Proof. exact (MK_COMB (@lem3498727 _90768 _90775 s f t) (@lem3498773 _90768 _90775 f t u)). Qed.
Lemma lem3498781 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem3498782 {_90768 _90775 : Type'} (s : _90768 -> Prop) (f : _90768 -> _90775) (t : _90768 -> Prop) (u : _90775 -> Prop) : (term1025 _90768 _90775 s f t u) = (term1057 _90768 _90775 s f t u).
Proof. exact (MK_COMB (@lem3498781) (@lem3498778 _90768 _90775 s f t u)). Qed.
Lemma lem3498790 {A B : Type'} (y : B) (f : A -> B) (s : A -> Prop) : (term27 A B y f s) = (term28 A B y f s).
Proof. exact (EQ_MP (@lem3211657 A B y f s) (@lem3211656 A B y s f)). Qed.
Lemma lem3498791 {_90768 _90775 : Type'} (y : _90775) (f : _90768 -> _90775) (s : _90768 -> Prop) : (term27 _90768 _90775 y f s) = (term28 _90768 _90775 y f s).
Proof. exact (@lem3498790 _90768 _90775 y f s). Qed.
Lemma lem3498792 {_90768 _90775 : Type'} (x : _90775) (f : _90768 -> _90775) (s : _90768 -> Prop) (t : _90768 -> Prop) : (term1030 _90768 _90775 x f s t) = (term1031 _90768 _90775 x f s t).
Proof. exact (@lem3498791 _90768 _90775 x f (@INTER _90768 s t)). Qed.
Lemma lem3498802 {A : Type'} (s : A -> Prop) (x : A) (t : A -> Prop) : (term1032 A x s t) = (term1033 A s x t).
Proof. exact (EQ_MP (@lem3211711 A s x t) (@lem3211710 A s t x)). Qed.
Lemma lem3498803 {_90768 : Type'} (s : _90768 -> Prop) (x : _90768) (t : _90768 -> Prop) : (term1032 _90768 x s t) = (term1033 _90768 s x t).
Proof. exact (@lem3498802 _90768 s x t). Qed.
Lemma lem3498807 {A : Type'} (P : A -> Prop) (x : A) : (@IN A x P) = (P x).
Proof. exact (EQ_MP (@lem3211610 A P x) (@lem3211609 A P x)). Qed.
Lemma lem3498808 {_90768 : Type'} (P : _90768 -> Prop) (x : _90768) : (@IN _90768 x P) = (P x).
Proof. exact (@lem3498807 _90768 P x). Qed.
Lemma lem3498809 {_90768 : Type'} (s : _90768 -> Prop) (x : _90768) : (@IN _90768 x s) = (s x).
Proof. exact (@lem3498808 _90768 s x). Qed.
Lemma lem3498810 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem3498811 {_90768 : Type'} (s : _90768 -> Prop) (x : _90768) : (term56 _90768 x s) = (term234 _90768 s x).
Proof. exact (MK_COMB (@lem3498810) (@lem3498809 _90768 s x)). Qed.
Lemma lem3498813 {A : Type'} (P : A -> Prop) (x : A) : (@IN A x P) = (P x).
Proof. exact (EQ_MP (@lem3211610 A P x) (@lem3211609 A P x)). Qed.
Lemma lem3498814 {_90768 : Type'} (P : _90768 -> Prop) (x : _90768) : (@IN _90768 x P) = (P x).
Proof. exact (@lem3498813 _90768 P x). Qed.
Lemma lem3498815 {_90768 : Type'} (t : _90768 -> Prop) (x : _90768) : (@IN _90768 x t) = (t x).
Proof. exact (@lem3498814 _90768 t x). Qed.
Lemma lem3498816 {_90768 : Type'} (s : _90768 -> Prop) (t : _90768 -> Prop) (x : _90768) : (term1033 _90768 s x t) = (term1034 _90768 s t x).
Proof. exact (MK_COMB (@lem3498811 _90768 s x) (@lem3498815 _90768 t x)). Qed.
Lemma lem3498819 {_90768 : Type'} (s : _90768 -> Prop) (t : _90768 -> Prop) (x : _90768) : (term1032 _90768 x s t) = (term1034 _90768 s t x).
Proof. exact (TRANS (@lem3498803 _90768 s x t) (@lem3498816 _90768 s t x)). Qed.
Lemma lem3498820 {_90768 _90775 : Type'} (x : _90775) (f : _90768 -> _90775) (x' : _90768) : (term88 _90768 _90775 x f x') = (term88 _90768 _90775 x f x').
Proof. exact (eq_refl (term88 _90768 _90775 x f x')). Qed.
Lemma lem3498821 {_90768 _90775 : Type'} (x : _90775) (f : _90768 -> _90775) (s : _90768 -> Prop) (t : _90768 -> Prop) (x' : _90768) : (term1035 _90768 _90775 x f x' s t) = (term1036 _90768 _90775 x f s t x').
Proof. exact (MK_COMB (@lem3498820 _90768 _90775 x f x') (@lem3498819 _90768 s t x')). Qed.
Lemma lem3498824 {_90768 _90775 : Type'} (x : _90775) (f : _90768 -> _90775) (s : _90768 -> Prop) (t : _90768 -> Prop) : (term1037 _90768 _90775 x f s t) = (term1038 _90768 _90775 x f s t).
Proof. exact (fun_ext (fun x' : _90768 => @lem3498821 _90768 _90775 x f s t x')). Qed.
Lemma lem3498825 {_90768 : Type'} : (@ex _90768) = (@ex _90768).
Proof. exact (eq_refl (@ex _90768)). Qed.
Lemma lem3498826 {_90768 _90775 : Type'} (x : _90775) (f : _90768 -> _90775) (s : _90768 -> Prop) (t : _90768 -> Prop) : (term1031 _90768 _90775 x f s t) = (term1039 _90768 _90775 x f s t).
Proof. exact (MK_COMB (@lem3498825 _90768) (@lem3498824 _90768 _90775 x f s t)). Qed.
Lemma lem3498831 {_90768 _90775 : Type'} (x : _90775) (f : _90768 -> _90775) (s : _90768 -> Prop) (t : _90768 -> Prop) : (term1030 _90768 _90775 x f s t) = (term1039 _90768 _90775 x f s t).
Proof. exact (TRANS (@lem3498792 _90768 _90775 x f s t) (@lem3498826 _90768 _90775 x f s t)). Qed.
Lemma lem3498832 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem3498833 {_90768 _90775 : Type'} (x : _90775) (f : _90768 -> _90775) (s : _90768 -> Prop) (t : _90768 -> Prop) : (term1040 _90768 _90775 x f s t) = (term1041 _90768 _90775 x f s t).
Proof. exact (MK_COMB (@lem3498832) (@lem3498831 _90768 _90775 x f s t)). Qed.
Lemma lem3498835 {A : Type'} (s : A -> Prop) (x : A) (t : A -> Prop) : (term1032 A x s t) = (term1033 A s x t).
Proof. exact (EQ_MP (@lem3211711 A s x t) (@lem3211710 A s t x)). Qed.
Lemma lem3498836 {_90775 : Type'} (s : _90775 -> Prop) (x : _90775) (t : _90775 -> Prop) : (term1032 _90775 x s t) = (term1033 _90775 s x t).
Proof. exact (@lem3498835 _90775 s x t). Qed.
Lemma lem3498837 {_90768 _90775 : Type'} (f : _90768 -> _90775) (s : _90768 -> Prop) (x : _90775) (u : _90775 -> Prop) : (term1058 _90768 _90775 x f s u) = (term1059 _90768 _90775 f s x u).
Proof. exact (@lem3498836 _90775 (@IMAGE _90768 _90775 f s) x u). Qed.
Lemma lem3498841 {A B : Type'} (y : B) (f : A -> B) (s : A -> Prop) : (term27 A B y f s) = (term28 A B y f s).
Proof. exact (EQ_MP (@lem3211657 A B y f s) (@lem3211656 A B y s f)). Qed.
Lemma lem3498842 {_90768 _90775 : Type'} (y : _90775) (f : _90768 -> _90775) (s : _90768 -> Prop) : (term27 _90768 _90775 y f s) = (term28 _90768 _90775 y f s).
Proof. exact (@lem3498841 _90768 _90775 y f s). Qed.
Lemma lem3498843 {_90768 _90775 : Type'} (x : _90775) (f : _90768 -> _90775) (s : _90768 -> Prop) : (term27 _90768 _90775 x f s) = (term28 _90768 _90775 x f s).
Proof. exact (@lem3498842 _90768 _90775 x f s). Qed.
Lemma lem3498853 {A : Type'} (P : A -> Prop) (x : A) : (@IN A x P) = (P x).
Proof. exact (EQ_MP (@lem3211610 A P x) (@lem3211609 A P x)). Qed.
Lemma lem3498854 {_90768 : Type'} (P : _90768 -> Prop) (x : _90768) : (@IN _90768 x P) = (P x).
Proof. exact (@lem3498853 _90768 P x). Qed.
Lemma lem3498855 {_90768 : Type'} (s : _90768 -> Prop) (x : _90768) : (@IN _90768 x s) = (s x).
Proof. exact (@lem3498854 _90768 s x). Qed.
Lemma lem3498856 {_90768 _90775 : Type'} (x : _90775) (f : _90768 -> _90775) (x' : _90768) : (term88 _90768 _90775 x f x') = (term88 _90768 _90775 x f x').
Proof. exact (eq_refl (term88 _90768 _90775 x f x')). Qed.
Lemma lem3498857 {_90768 _90775 : Type'} (x : _90775) (f : _90768 -> _90775) (s : _90768 -> Prop) (x' : _90768) : (term263 _90768 _90775 x f x' s) = (term264 _90768 _90775 x f s x').
Proof. exact (MK_COMB (@lem3498856 _90768 _90775 x f x') (@lem3498855 _90768 s x')). Qed.
Lemma lem3498860 {_90768 _90775 : Type'} (x : _90775) (f : _90768 -> _90775) (s : _90768 -> Prop) : (term265 _90768 _90775 x f s) = (term266 _90768 _90775 x f s).
Proof. exact (fun_ext (fun x' : _90768 => @lem3498857 _90768 _90775 x f s x')). Qed.
Lemma lem3498861 {_90768 : Type'} : (@ex _90768) = (@ex _90768).
Proof. exact (eq_refl (@ex _90768)). Qed.
Lemma lem3498862 {_90768 _90775 : Type'} (x : _90775) (f : _90768 -> _90775) (s : _90768 -> Prop) : (term28 _90768 _90775 x f s) = (term267 _90768 _90775 x f s).
Proof. exact (MK_COMB (@lem3498861 _90768) (@lem3498860 _90768 _90775 x f s)). Qed.
Lemma lem3498867 {_90768 _90775 : Type'} (x : _90775) (f : _90768 -> _90775) (s : _90768 -> Prop) : (term27 _90768 _90775 x f s) = (term267 _90768 _90775 x f s).
Proof. exact (TRANS (@lem3498843 _90768 _90775 x f s) (@lem3498862 _90768 _90775 x f s)). Qed.
Lemma lem3498868 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem3498869 {_90768 _90775 : Type'} (x : _90775) (f : _90768 -> _90775) (s : _90768 -> Prop) : (term1044 _90768 _90775 x f s) = (term1045 _90768 _90775 x f s).
Proof. exact (MK_COMB (@lem3498868) (@lem3498867 _90768 _90775 x f s)). Qed.
Lemma lem3498871 {A : Type'} (P : A -> Prop) (x : A) : (@IN A x P) = (P x).
Proof. exact (EQ_MP (@lem3211610 A P x) (@lem3211609 A P x)). Qed.
Lemma lem3498872 {_90775 : Type'} (P : _90775 -> Prop) (x : _90775) : (@IN _90775 x P) = (P x).
Proof. exact (@lem3498871 _90775 P x). Qed.
Lemma lem3498873 {_90775 : Type'} (u : _90775 -> Prop) (x : _90775) : (@IN _90775 x u) = (u x).
Proof. exact (@lem3498872 _90775 u x). Qed.
Lemma lem3498874 {_90768 _90775 : Type'} (f : _90768 -> _90775) (s : _90768 -> Prop) (u : _90775 -> Prop) (x : _90775) : (term1059 _90768 _90775 f s x u) = (term1060 _90768 _90775 f s u x).
Proof. exact (MK_COMB (@lem3498869 _90768 _90775 x f s) (@lem3498873 _90775 u x)). Qed.
Lemma lem3498877 {_90768 _90775 : Type'} (f : _90768 -> _90775) (s : _90768 -> Prop) (u : _90775 -> Prop) (x : _90775) : (term1058 _90768 _90775 x f s u) = (term1060 _90768 _90775 f s u x).
Proof. exact (TRANS (@lem3498837 _90768 _90775 f s x u) (@lem3498874 _90768 _90775 f s u x)). Qed.
Lemma lem3498878 {_90768 _90775 : Type'} (t : _90768 -> Prop) (f : _90768 -> _90775) (s : _90768 -> Prop) (u : _90775 -> Prop) (x : _90775) : ((term1030 _90768 _90775 x f s t) = (term1058 _90768 _90775 x f s u)) = ((term1039 _90768 _90775 x f s t) = (term1060 _90768 _90775 f s u x)).
Proof. exact (MK_COMB (@lem3498833 _90768 _90775 x f s t) (@lem3498877 _90768 _90775 f s u x)). Qed.
Lemma lem3498881 {_90768 _90775 : Type'} (t : _90768 -> Prop) (f : _90768 -> _90775) (s : _90768 -> Prop) (u : _90775 -> Prop) : (term1061 _90768 _90775 t f s u) = (term1062 _90768 _90775 t f s u).
Proof. exact (fun_ext (fun x : _90775 => @lem3498878 _90768 _90775 t f s u x)). Qed.
Lemma lem3498882 {_90775 : Type'} : (@all _90775) = (@all _90775).
Proof. exact (eq_refl (@all _90775)). Qed.
Lemma lem3498883 {_90768 _90775 : Type'} (t : _90768 -> Prop) (f : _90768 -> _90775) (s : _90768 -> Prop) (u : _90775 -> Prop) : (term1027 _90768 _90775 t f s u) = (term1063 _90768 _90775 t f s u).
Proof. exact (MK_COMB (@lem3498882 _90775) (@lem3498881 _90768 _90775 t f s u)). Qed.
Lemma lem3498888 {_90768 _90775 : Type'} (t : _90768 -> Prop) (f : _90768 -> _90775) (s : _90768 -> Prop) (u : _90775 -> Prop) : (term1029 _90768 _90775 t f s u) = (term1064 _90768 _90775 t f s u).
Proof. exact (MK_COMB (@lem3498782 _90768 _90775 s f t u) (@lem3498883 _90768 _90775 t f s u)). Qed.
Lemma lem3498891 {_90768 _90775 : Type'} (t : _90768 -> Prop) (f : _90768 -> _90775) (s : _90768 -> Prop) (u : _90775 -> Prop) : (term1064 _90768 _90775 t f s u) = (term1029 _90768 _90775 t f s u).
Proof. exact (SYM (@lem3498888 _90768 _90775 t f s u)). Qed.
Lemma lem3498893 (p : Prop) : p = (term275 p).
Proof. exact (EQ_MP (@lem10578 p) (@lem10597 p)). Qed.
Lemma lem3498894 {_90768 _90775 : Type'} (t : _90768 -> Prop) (f : _90768 -> _90775) (s : _90768 -> Prop) (u : _90775 -> Prop) : (term1064 _90768 _90775 t f s u) = (term1065 _90768 _90775 t f s u).
Proof. exact (@lem3498893 (term1064 _90768 _90775 t f s u)). Qed.
Lemma lem3498895 {_90768 _90775 : Type'} (t : _90768 -> Prop) (f : _90768 -> _90775) (s : _90768 -> Prop) (u : _90775 -> Prop) : (term1065 _90768 _90775 t f s u) = (term1064 _90768 _90775 t f s u).
Proof. exact (SYM (@lem3498894 _90768 _90775 t f s u)). Qed.
Lemma lem3498896 {_90768 _90775 : Type'} (t : _90768 -> Prop) (f : _90768 -> _90775) (s : _90768 -> Prop) (u : _90775 -> Prop) (h1 : term1066 _90768 _90775 t f s u) : term1066 _90768 _90775 t f s u.
Proof. exact (h1). Qed.
Lemma lem3498899 {_90768 _90775 : Type'} (t : _90768 -> Prop) (f : _90768 -> _90775) (s : _90768 -> Prop) (u : _90775 -> Prop) (h1 : term1065 _90768 _90775 t f s u) : term1065 _90768 _90775 t f s u.
Proof. exact (h1). Qed.
Lemma lem3498900 {_90768 _90775 : Type'} (t : _90768 -> Prop) (f : _90768 -> _90775) (s : _90768 -> Prop) (u : _90775 -> Prop) : term1067 _90768 _90775 t f s u.
Proof. exact (fun h0 : term1065 _90768 _90775 t f s u => @lem3498899 _90768 _90775 t f s u h0). Qed.
Lemma lem3498901 {_90768 _90775 : Type'} (t : _90768 -> Prop) (f : _90768 -> _90775) (s : _90768 -> Prop) (u : _90775 -> Prop) (h1 : term1067 _90768 _90775 t f s u) : term1067 _90768 _90775 t f s u.
Proof. exact (h1). Qed.
Lemma lem3498902 {_90768 _90775 : Type'} (t : _90768 -> Prop) (f : _90768 -> _90775) (s : _90768 -> Prop) (u : _90775 -> Prop) (h1 : term1065 _90768 _90775 t f s u) : term1065 _90768 _90775 t f s u.
Proof. exact (h1). Qed.
Lemma lem3498903 {_90768 _90775 : Type'} (t : _90768 -> Prop) (f : _90768 -> _90775) (s : _90768 -> Prop) (u : _90775 -> Prop) (h1 : term1065 _90768 _90775 t f s u) (h2 : term1067 _90768 _90775 t f s u) : term1065 _90768 _90775 t f s u.
Proof. exact (@lem3498901 _90768 _90775 t f s u h2 (@lem3498902 _90768 _90775 t f s u h1)). Qed.
Lemma lem3498904 {_90768 _90775 : Type'} (t : _90768 -> Prop) (f : _90768 -> _90775) (s : _90768 -> Prop) (u : _90775 -> Prop) (h1 : term1065 _90768 _90775 t f s u) : term1068 _90768 _90775 t f s u.
Proof. exact (fun h0 : term1067 _90768 _90775 t f s u => @lem3498903 _90768 _90775 t f s u h1 h0). Qed.
Lemma lem3498905 {_90768 _90775 : Type'} (t : _90768 -> Prop) (f : _90768 -> _90775) (s : _90768 -> Prop) (u : _90775 -> Prop) (h1 : term1067 _90768 _90775 t f s u) : term1067 _90768 _90775 t f s u.
Proof. exact (h1). Qed.
Lemma lem3498906 {_90768 _90775 : Type'} (t : _90768 -> Prop) (f : _90768 -> _90775) (s : _90768 -> Prop) (u : _90775 -> Prop) (h1 : term1065 _90768 _90775 t f s u) (h2 : term1067 _90768 _90775 t f s u) : term1065 _90768 _90775 t f s u.
Proof. exact (@lem3498904 _90768 _90775 t f s u h1 (@lem3498905 _90768 _90775 t f s u h2)). Qed.
Lemma lem3498907 {_90768 _90775 : Type'} (t : _90768 -> Prop) (f : _90768 -> _90775) (s : _90768 -> Prop) (u : _90775 -> Prop) (h1 : term1067 _90768 _90775 t f s u) : term1067 _90768 _90775 t f s u.
Proof. exact (fun h0 : term1065 _90768 _90775 t f s u => @lem3498906 _90768 _90775 t f s u h0 h1). Qed.
Lemma lem3498908 {_90768 _90775 : Type'} (t : _90768 -> Prop) (f : _90768 -> _90775) (s : _90768 -> Prop) (u : _90775 -> Prop) : term1069 _90768 _90775 t f s u.
Proof. exact (fun h0 : term1067 _90768 _90775 t f s u => @lem3498907 _90768 _90775 t f s u h0). Qed.
Lemma lem3498911 {_90768 _90775 : Type'} (t : _90768 -> Prop) (f : _90768 -> _90775) (s : _90768 -> Prop) (u : _90775 -> Prop) : term1067 _90768 _90775 t f s u.
Proof. exact (@lem3498908 _90768 _90775 t f s u (@lem3498900 _90768 _90775 t f s u)). Qed.
Lemma lem3498912 {_90768 _90775 : Type'} (t : _90768 -> Prop) (f : _90768 -> _90775) (s : _90768 -> Prop) (u : _90775 -> Prop) : term1067 _90768 _90775 t f s u.
Proof. exact (@lem3498911 _90768 _90775 t f s u). Qed.
Lemma lem3498930 (t : Prop) : (t -> False) = (~ t).
Proof. exact (proj2 (@lem16474 t)). Qed.
Lemma lem3498931 {_90768 _90775 : Type'} (t : _90768 -> Prop) (f : _90768 -> _90775) (s : _90768 -> Prop) (u : _90775 -> Prop) : (term1065 _90768 _90775 t f s u) = (term1070 _90768 _90775 t f s u).
Proof. exact (@lem3498930 (term1066 _90768 _90775 t f s u)). Qed.
Lemma lem3498933 (t : Prop) : (term282 t) = t.
Proof. exact (EQ_MP (@lem16507 t) (@lem16506 t)). Qed.
Lemma lem3498934 {_90768 _90775 : Type'} (t : _90768 -> Prop) (f : _90768 -> _90775) (s : _90768 -> Prop) (u : _90775 -> Prop) : (term1070 _90768 _90775 t f s u) = (term1064 _90768 _90775 t f s u).
Proof. exact (@lem3498933 (term1064 _90768 _90775 t f s u)). Qed.
Lemma lem3498937 {_90768 _90775 : Type'} (t : _90768 -> Prop) (f : _90768 -> _90775) (s : _90768 -> Prop) (u : _90775 -> Prop) : (term1065 _90768 _90775 t f s u) = (term1064 _90768 _90775 t f s u).
Proof. exact (TRANS (@lem3498931 _90768 _90775 t f s u) (@lem3498934 _90768 _90775 t f s u)). Qed.
Lemma lem3499196 {_90768 _90775 : Type'} (f : _90768 -> _90775) (s : _90768 -> Prop) (u : _90775 -> Prop) : (term1071 _90768 _90775 f s u) = (term1072 _90768 _90775 f s u).
Proof. exact (fun_ext (fun t : _90768 -> Prop => @lem3498937 _90768 _90775 t f s u)). Qed.
Lemma lem3499197 {_90768 : Type'} : (@all (_90768 -> Prop)) = (@all (_90768 -> Prop)).
Proof. exact (eq_refl (@all (_90768 -> Prop))). Qed.
Lemma lem3499198 {_90768 _90775 : Type'} (f : _90768 -> _90775) (s : _90768 -> Prop) (u : _90775 -> Prop) : (term1073 _90768 _90775 f s u) = (term1074 _90768 _90775 f s u).
Proof. exact (MK_COMB (@lem3499197 _90768) (@lem3499196 _90768 _90775 f s u)). Qed.
Lemma lem3499203 {_90768 _90775 : Type'} (s : _90768 -> Prop) (u : _90775 -> Prop) : (term1075 _90768 _90775 s u) = (term1076 _90768 _90775 s u).
Proof. exact (fun_ext (fun f : _90768 -> _90775 => @lem3499198 _90768 _90775 f s u)). Qed.
Lemma lem3499204 {_90768 _90775 : Type'} : (@all (_90768 -> _90775)) = (@all (_90768 -> _90775)).
Proof. exact (eq_refl (@all (_90768 -> _90775))). Qed.
Lemma lem3499205 {_90768 _90775 : Type'} (s : _90768 -> Prop) (u : _90775 -> Prop) : (term1077 _90768 _90775 s u) = (term1078 _90768 _90775 s u).
Proof. exact (MK_COMB (@lem3499204 _90768 _90775) (@lem3499203 _90768 _90775 s u)). Qed.
Lemma lem3499210 {_90768 _90775 : Type'} (u : _90775 -> Prop) : (term1079 _90768 _90775 u) = (term1080 _90768 _90775 u).
Proof. exact (fun_ext (fun s : _90768 -> Prop => @lem3499205 _90768 _90775 s u)). Qed.
Lemma lem3499211 {_90768 : Type'} : (@all (_90768 -> Prop)) = (@all (_90768 -> Prop)).
Proof. exact (eq_refl (@all (_90768 -> Prop))). Qed.
Lemma lem3499212 {_90768 _90775 : Type'} (u : _90775 -> Prop) : (term1081 _90768 _90775 u) = (term1082 _90768 _90775 u).
Proof. exact (MK_COMB (@lem3499211 _90768) (@lem3499210 _90768 _90775 u)). Qed.
Lemma lem3499217 {_90768 _90775 : Type'} : (term1083 _90768 _90775) = (term1084 _90768 _90775).
Proof. exact (fun_ext (fun u : _90775 -> Prop => @lem3499212 _90768 _90775 u)). Qed.
Lemma lem3499218 {_90775 : Type'} : (@all (_90775 -> Prop)) = (@all (_90775 -> Prop)).
Proof. exact (eq_refl (@all (_90775 -> Prop))). Qed.
Lemma lem3499227 {_90768 _90775 : Type'} : (term1085 _90768 _90775) = (term1086 _90768 _90775).
Proof. exact (MK_COMB (@lem3499218 _90775) (@lem3499217 _90768 _90775)). Qed.
Lemma lem3499228 {_90775 : Type'} (u : _90775 -> Prop) (x : _90775) : (u x) = (u x).
Proof. exact (eq_refl (u x)). Qed.
Lemma lem3499233 {_90768 _90775 : Type'} (x : _90775) (f : _90768 -> _90775) (s : _90768 -> Prop) (x' : _90768) : (term264 _90768 _90775 x f s x') = (term264 _90768 _90775 x f s x').
Proof. exact (eq_refl (term264 _90768 _90775 x f s x')). Qed.
Lemma lem3499234 {_90768 _90775 : Type'} (x : _90775) (f : _90768 -> _90775) (s : _90768 -> Prop) : (term266 _90768 _90775 x f s) = (term266 _90768 _90775 x f s).
Proof. exact (fun_ext (fun x' : _90768 => @lem3499233 _90768 _90775 x f s x')). Qed.
Lemma lem3499235 {_90768 : Type'} : (@ex _90768) = (@ex _90768).
Proof. exact (eq_refl (@ex _90768)). Qed.
Lemma lem3499236 {_90768 _90775 : Type'} (x : _90775) (f : _90768 -> _90775) (s : _90768 -> Prop) : (term267 _90768 _90775 x f s) = (term267 _90768 _90775 x f s).
Proof. exact (MK_COMB (@lem3499235 _90768) (@lem3499234 _90768 _90775 x f s)). Qed.
Lemma lem3499237 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem3499238 {_90768 _90775 : Type'} (x : _90775) (f : _90768 -> _90775) (s : _90768 -> Prop) : (term1045 _90768 _90775 x f s) = (term1045 _90768 _90775 x f s).
Proof. exact (MK_COMB (@lem3499237) (@lem3499236 _90768 _90775 x f s)). Qed.
Lemma lem3499239 {_90768 _90775 : Type'} (f : _90768 -> _90775) (s : _90768 -> Prop) (u : _90775 -> Prop) (x : _90775) : (term1060 _90768 _90775 f s u x) = (term1060 _90768 _90775 f s u x).
Proof. exact (MK_COMB (@lem3499238 _90768 _90775 x f s) (@lem3499228 _90775 u x)). Qed.
Lemma lem3499248 {_90768 _90775 : Type'} (x : _90775) (f : _90768 -> _90775) (s : _90768 -> Prop) (t : _90768 -> Prop) (x' : _90768) : (term1036 _90768 _90775 x f s t x') = (term1036 _90768 _90775 x f s t x').
Proof. exact (eq_refl (term1036 _90768 _90775 x f s t x')). Qed.
Lemma lem3499249 {_90768 _90775 : Type'} (x : _90775) (f : _90768 -> _90775) (s : _90768 -> Prop) (t : _90768 -> Prop) : (term1038 _90768 _90775 x f s t) = (term1038 _90768 _90775 x f s t).
Proof. exact (fun_ext (fun x' : _90768 => @lem3499248 _90768 _90775 x f s t x')). Qed.
Lemma lem3499250 {_90768 : Type'} : (@ex _90768) = (@ex _90768).
Proof. exact (eq_refl (@ex _90768)). Qed.
Lemma lem3499251 {_90768 _90775 : Type'} (x : _90775) (f : _90768 -> _90775) (s : _90768 -> Prop) (t : _90768 -> Prop) : (term1039 _90768 _90775 x f s t) = (term1039 _90768 _90775 x f s t).
Proof. exact (MK_COMB (@lem3499250 _90768) (@lem3499249 _90768 _90775 x f s t)). Qed.
Lemma lem3499252 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem3499253 {_90768 _90775 : Type'} (x : _90775) (f : _90768 -> _90775) (s : _90768 -> Prop) (t : _90768 -> Prop) : (term1041 _90768 _90775 x f s t) = (term1041 _90768 _90775 x f s t).
Proof. exact (MK_COMB (@lem3499252) (@lem3499251 _90768 _90775 x f s t)). Qed.
Lemma lem3499254 {_90768 _90775 : Type'} (t : _90768 -> Prop) (f : _90768 -> _90775) (s : _90768 -> Prop) (u : _90775 -> Prop) (x : _90775) : ((term1039 _90768 _90775 x f s t) = (term1060 _90768 _90775 f s u x)) = ((term1039 _90768 _90775 x f s t) = (term1060 _90768 _90775 f s u x)).
Proof. exact (MK_COMB (@lem3499253 _90768 _90775 x f s t) (@lem3499239 _90768 _90775 f s u x)). Qed.
Lemma lem3499255 {_90768 _90775 : Type'} (t : _90768 -> Prop) (f : _90768 -> _90775) (s : _90768 -> Prop) (u : _90775 -> Prop) : (term1062 _90768 _90775 t f s u) = (term1062 _90768 _90775 t f s u).
Proof. exact (fun_ext (fun x : _90775 => @lem3499254 _90768 _90775 t f s u x)). Qed.
Lemma lem3499256 {_90775 : Type'} : (@all _90775) = (@all _90775).
Proof. exact (eq_refl (@all _90775)). Qed.
Lemma lem3499257 {_90768 _90775 : Type'} (t : _90768 -> Prop) (f : _90768 -> _90775) (s : _90768 -> Prop) (u : _90775 -> Prop) : (term1063 _90768 _90775 t f s u) = (term1063 _90768 _90775 t f s u).
Proof. exact (MK_COMB (@lem3499256 _90775) (@lem3499255 _90768 _90775 t f s u)). Qed.
Lemma lem3499258 {_90775 : Type'} (u : _90775 -> Prop) (x : _90775) : (u x) = (u x).
Proof. exact (eq_refl (u x)). Qed.
Lemma lem3499263 {_90768 _90775 : Type'} (x : _90775) (f : _90768 -> _90775) (t : _90768 -> Prop) (x' : _90768) : (term264 _90768 _90775 x f t x') = (term264 _90768 _90775 x f t x').
Proof. exact (eq_refl (term264 _90768 _90775 x f t x')). Qed.
Lemma lem3499264 {_90768 _90775 : Type'} (x : _90775) (f : _90768 -> _90775) (t : _90768 -> Prop) : (term266 _90768 _90775 x f t) = (term266 _90768 _90775 x f t).
Proof. exact (fun_ext (fun x' : _90768 => @lem3499263 _90768 _90775 x f t x')). Qed.
Lemma lem3499265 {_90768 : Type'} : (@ex _90768) = (@ex _90768).
Proof. exact (eq_refl (@ex _90768)). Qed.
Lemma lem3499266 {_90768 _90775 : Type'} (x : _90775) (f : _90768 -> _90775) (t : _90768 -> Prop) : (term267 _90768 _90775 x f t) = (term267 _90768 _90775 x f t).
Proof. exact (MK_COMB (@lem3499265 _90768) (@lem3499264 _90768 _90775 x f t)). Qed.
Lemma lem3499267 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem3499268 {_90768 _90775 : Type'} (x : _90775) (f : _90768 -> _90775) (t : _90768 -> Prop) : (term1052 _90768 _90775 x f t) = (term1052 _90768 _90775 x f t).
Proof. exact (MK_COMB (@lem3499267) (@lem3499266 _90768 _90775 x f t)). Qed.
Lemma lem3499269 {_90768 _90775 : Type'} (f : _90768 -> _90775) (t : _90768 -> Prop) (u : _90775 -> Prop) (x : _90775) : ((term267 _90768 _90775 x f t) = (u x)) = ((term267 _90768 _90775 x f t) = (u x)).
Proof. exact (MK_COMB (@lem3499268 _90768 _90775 x f t) (@lem3499258 _90775 u x)). Qed.
Lemma lem3499270 {_90768 _90775 : Type'} (f : _90768 -> _90775) (t : _90768 -> Prop) (u : _90775 -> Prop) : (term1054 _90768 _90775 f t u) = (term1054 _90768 _90775 f t u).
Proof. exact (fun_ext (fun x : _90775 => @lem3499269 _90768 _90775 f t u x)). Qed.
Lemma lem3499271 {_90775 : Type'} : (@all _90775) = (@all _90775).
Proof. exact (eq_refl (@all _90775)). Qed.
Lemma lem3499272 {_90768 _90775 : Type'} (f : _90768 -> _90775) (t : _90768 -> Prop) (u : _90775 -> Prop) : (term1055 _90768 _90775 f t u) = (term1055 _90768 _90775 f t u).
Proof. exact (MK_COMB (@lem3499271 _90775) (@lem3499270 _90768 _90775 f t u)). Qed.
Lemma lem3499277 {_90768 _90775 : Type'} (x : _90775) (f : _90768 -> _90775) (t : _90768 -> Prop) (x' : _90768) : (term264 _90768 _90775 x f t x') = (term264 _90768 _90775 x f t x').
Proof. exact (eq_refl (term264 _90768 _90775 x f t x')). Qed.
Lemma lem3499278 {_90768 _90775 : Type'} (x : _90775) (f : _90768 -> _90775) (t : _90768 -> Prop) : (term266 _90768 _90775 x f t) = (term266 _90768 _90775 x f t).
Proof. exact (fun_ext (fun x' : _90768 => @lem3499277 _90768 _90775 x f t x')). Qed.
Lemma lem3499279 {_90768 : Type'} : (@ex _90768) = (@ex _90768).
Proof. exact (eq_refl (@ex _90768)). Qed.
Lemma lem3499280 {_90768 _90775 : Type'} (x : _90775) (f : _90768 -> _90775) (t : _90768 -> Prop) : (term267 _90768 _90775 x f t) = (term267 _90768 _90775 x f t).
Proof. exact (MK_COMB (@lem3499279 _90768) (@lem3499278 _90768 _90775 x f t)). Qed.
Lemma lem3499285 {_90768 _90775 : Type'} (x : _90775) (f : _90768 -> _90775) (s : _90768 -> Prop) (x' : _90768) : (term264 _90768 _90775 x f s x') = (term264 _90768 _90775 x f s x').
Proof. exact (eq_refl (term264 _90768 _90775 x f s x')). Qed.
Lemma lem3499286 {_90768 _90775 : Type'} (x : _90775) (f : _90768 -> _90775) (s : _90768 -> Prop) : (term266 _90768 _90775 x f s) = (term266 _90768 _90775 x f s).
Proof. exact (fun_ext (fun x' : _90768 => @lem3499285 _90768 _90775 x f s x')). Qed.
Lemma lem3499287 {_90768 : Type'} : (@ex _90768) = (@ex _90768).
Proof. exact (eq_refl (@ex _90768)). Qed.
Lemma lem3499288 {_90768 _90775 : Type'} (x : _90775) (f : _90768 -> _90775) (s : _90768 -> Prop) : (term267 _90768 _90775 x f s) = (term267 _90768 _90775 x f s).
Proof. exact (MK_COMB (@lem3499287 _90768) (@lem3499286 _90768 _90775 x f s)). Qed.
Lemma lem3499289 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem3499290 {_90768 _90775 : Type'} (x : _90775) (f : _90768 -> _90775) (s : _90768 -> Prop) : (term1045 _90768 _90775 x f s) = (term1045 _90768 _90775 x f s).
Proof. exact (MK_COMB (@lem3499289) (@lem3499288 _90768 _90775 x f s)). Qed.
Lemma lem3499291 {_90768 _90775 : Type'} (s : _90768 -> Prop) (x : _90775) (f : _90768 -> _90775) (t : _90768 -> Prop) : (term1046 _90768 _90775 s x f t) = (term1046 _90768 _90775 s x f t).
Proof. exact (MK_COMB (@lem3499290 _90768 _90775 x f s) (@lem3499280 _90768 _90775 x f t)). Qed.
Lemma lem3499300 {_90768 _90775 : Type'} (x : _90775) (f : _90768 -> _90775) (s : _90768 -> Prop) (t : _90768 -> Prop) (x' : _90768) : (term1036 _90768 _90775 x f s t x') = (term1036 _90768 _90775 x f s t x').
Proof. exact (eq_refl (term1036 _90768 _90775 x f s t x')). Qed.
Lemma lem3499301 {_90768 _90775 : Type'} (x : _90775) (f : _90768 -> _90775) (s : _90768 -> Prop) (t : _90768 -> Prop) : (term1038 _90768 _90775 x f s t) = (term1038 _90768 _90775 x f s t).
Proof. exact (fun_ext (fun x' : _90768 => @lem3499300 _90768 _90775 x f s t x')). Qed.
Lemma lem3499302 {_90768 : Type'} : (@ex _90768) = (@ex _90768).
Proof. exact (eq_refl (@ex _90768)). Qed.
Lemma lem3499303 {_90768 _90775 : Type'} (x : _90775) (f : _90768 -> _90775) (s : _90768 -> Prop) (t : _90768 -> Prop) : (term1039 _90768 _90775 x f s t) = (term1039 _90768 _90775 x f s t).
Proof. exact (MK_COMB (@lem3499302 _90768) (@lem3499301 _90768 _90775 x f s t)). Qed.
Lemma lem3499304 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem3499305 {_90768 _90775 : Type'} (x : _90775) (f : _90768 -> _90775) (s : _90768 -> Prop) (t : _90768 -> Prop) : (term1041 _90768 _90775 x f s t) = (term1041 _90768 _90775 x f s t).
Proof. exact (MK_COMB (@lem3499304) (@lem3499303 _90768 _90775 x f s t)). Qed.
Lemma lem3499306 {_90768 _90775 : Type'} (s : _90768 -> Prop) (x : _90775) (f : _90768 -> _90775) (t : _90768 -> Prop) : ((term1039 _90768 _90775 x f s t) = (term1046 _90768 _90775 s x f t)) = ((term1039 _90768 _90775 x f s t) = (term1046 _90768 _90775 s x f t)).
Proof. exact (MK_COMB (@lem3499305 _90768 _90775 x f s t) (@lem3499291 _90768 _90775 s x f t)). Qed.
Lemma lem3499307 {_90768 _90775 : Type'} (s : _90768 -> Prop) (f : _90768 -> _90775) (t : _90768 -> Prop) : (term1048 _90768 _90775 s f t) = (term1048 _90768 _90775 s f t).
Proof. exact (fun_ext (fun x : _90775 => @lem3499306 _90768 _90775 s x f t)). Qed.
Lemma lem3499308 {_90775 : Type'} : (@all _90775) = (@all _90775).
Proof. exact (eq_refl (@all _90775)). Qed.
Lemma lem3499309 {_90768 _90775 : Type'} (s : _90768 -> Prop) (f : _90768 -> _90775) (t : _90768 -> Prop) : (term1049 _90768 _90775 s f t) = (term1049 _90768 _90775 s f t).
Proof. exact (MK_COMB (@lem3499308 _90775) (@lem3499307 _90768 _90775 s f t)). Qed.
Lemma lem3499310 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem3499311 {_90768 _90775 : Type'} (s : _90768 -> Prop) (f : _90768 -> _90775) (t : _90768 -> Prop) : (term1050 _90768 _90775 s f t) = (term1050 _90768 _90775 s f t).
Proof. exact (MK_COMB (@lem3499310) (@lem3499309 _90768 _90775 s f t)). Qed.
Lemma lem3499312 {_90768 _90775 : Type'} (s : _90768 -> Prop) (f : _90768 -> _90775) (t : _90768 -> Prop) (u : _90775 -> Prop) : (term1056 _90768 _90775 s f t u) = (term1056 _90768 _90775 s f t u).
Proof. exact (MK_COMB (@lem3499311 _90768 _90775 s f t) (@lem3499272 _90768 _90775 f t u)). Qed.
Lemma lem3499313 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem3499314 {_90768 _90775 : Type'} (s : _90768 -> Prop) (f : _90768 -> _90775) (t : _90768 -> Prop) (u : _90775 -> Prop) : (term1057 _90768 _90775 s f t u) = (term1057 _90768 _90775 s f t u).
Proof. exact (MK_COMB (@lem3499313) (@lem3499312 _90768 _90775 s f t u)). Qed.
Lemma lem3499315 {_90768 _90775 : Type'} (t : _90768 -> Prop) (f : _90768 -> _90775) (s : _90768 -> Prop) (u : _90775 -> Prop) : (term1064 _90768 _90775 t f s u) = (term1064 _90768 _90775 t f s u).
Proof. exact (MK_COMB (@lem3499314 _90768 _90775 s f t u) (@lem3499257 _90768 _90775 t f s u)). Qed.
Lemma lem3499316 {_90768 _90775 : Type'} (f : _90768 -> _90775) (s : _90768 -> Prop) (u : _90775 -> Prop) : (term1072 _90768 _90775 f s u) = (term1072 _90768 _90775 f s u).
Proof. exact (fun_ext (fun t : _90768 -> Prop => @lem3499315 _90768 _90775 t f s u)). Qed.
Lemma lem3499317 {_90768 : Type'} : (@all (_90768 -> Prop)) = (@all (_90768 -> Prop)).
Proof. exact (eq_refl (@all (_90768 -> Prop))). Qed.
Lemma lem3499318 {_90768 _90775 : Type'} (f : _90768 -> _90775) (s : _90768 -> Prop) (u : _90775 -> Prop) : (term1074 _90768 _90775 f s u) = (term1074 _90768 _90775 f s u).
Proof. exact (MK_COMB (@lem3499317 _90768) (@lem3499316 _90768 _90775 f s u)). Qed.
Lemma lem3499319 {_90768 _90775 : Type'} (s : _90768 -> Prop) (u : _90775 -> Prop) : (term1076 _90768 _90775 s u) = (term1076 _90768 _90775 s u).
Proof. exact (fun_ext (fun f : _90768 -> _90775 => @lem3499318 _90768 _90775 f s u)). Qed.
Lemma lem3499320 {_90768 _90775 : Type'} : (@all (_90768 -> _90775)) = (@all (_90768 -> _90775)).
Proof. exact (eq_refl (@all (_90768 -> _90775))). Qed.
Lemma lem3499321 {_90768 _90775 : Type'} (s : _90768 -> Prop) (u : _90775 -> Prop) : (term1078 _90768 _90775 s u) = (term1078 _90768 _90775 s u).
Proof. exact (MK_COMB (@lem3499320 _90768 _90775) (@lem3499319 _90768 _90775 s u)). Qed.
Lemma lem3499322 {_90768 _90775 : Type'} (u : _90775 -> Prop) : (term1080 _90768 _90775 u) = (term1080 _90768 _90775 u).
Proof. exact (fun_ext (fun s : _90768 -> Prop => @lem3499321 _90768 _90775 s u)). Qed.
Lemma lem3499323 {_90768 : Type'} : (@all (_90768 -> Prop)) = (@all (_90768 -> Prop)).
Proof. exact (eq_refl (@all (_90768 -> Prop))). Qed.
Lemma lem3499324 {_90768 _90775 : Type'} (u : _90775 -> Prop) : (term1082 _90768 _90775 u) = (term1082 _90768 _90775 u).
Proof. exact (MK_COMB (@lem3499323 _90768) (@lem3499322 _90768 _90775 u)). Qed.
Lemma lem3499325 {_90768 _90775 : Type'} : (term1084 _90768 _90775) = (term1084 _90768 _90775).
Proof. exact (fun_ext (fun u : _90775 -> Prop => @lem3499324 _90768 _90775 u)). Qed.
Lemma lem3499326 {_90775 : Type'} : (@all (_90775 -> Prop)) = (@all (_90775 -> Prop)).
Proof. exact (eq_refl (@all (_90775 -> Prop))). Qed.
Lemma lem3499327 {_90768 _90775 : Type'} : (term1086 _90768 _90775) = (term1086 _90768 _90775).
Proof. exact (MK_COMB (@lem3499326 _90775) (@lem3499325 _90768 _90775)). Qed.
Lemma lem3499432 {_90768 _90775 : Type'} : (term1085 _90768 _90775) = (term1086 _90768 _90775).
Proof. exact (TRANS (@lem3499227 _90768 _90775) (@lem3499327 _90768 _90775)). Qed.
Lemma lem3499433 {_90768 _90775 : Type'} : (term1086 _90768 _90775) = (term1085 _90768 _90775).
Proof. exact (SYM (@lem3499432 _90768 _90775)). Qed.
Lemma lem3499434 {_90768 _90775 : Type'} (s : _90768 -> Prop) (f : _90768 -> _90775) (t : _90768 -> Prop) (u : _90775 -> Prop) (h1 : term1056 _90768 _90775 s f t u) : term1056 _90768 _90775 s f t u.
Proof. exact (h1). Qed.
Lemma lem3499436 (p : Prop) : p = (term275 p).
Proof. exact (EQ_MP (@lem10578 p) (@lem10597 p)). Qed.
Lemma lem3499437 {_90768 _90775 : Type'} (t : _90768 -> Prop) (f : _90768 -> _90775) (s : _90768 -> Prop) (u : _90775 -> Prop) (x : _90775) : ((term1039 _90768 _90775 x f s t) = (term1060 _90768 _90775 f s u x)) = (term1087 _90768 _90775 t f s u x).
Proof. exact (@lem3499436 ((term1039 _90768 _90775 x f s t) = (term1060 _90768 _90775 f s u x))). Qed.
Lemma lem3499438 {_90768 _90775 : Type'} (t : _90768 -> Prop) (f : _90768 -> _90775) (s : _90768 -> Prop) (u : _90775 -> Prop) (x : _90775) : (term1087 _90768 _90775 t f s u x) = ((term1039 _90768 _90775 x f s t) = (term1060 _90768 _90775 f s u x)).
Proof. exact (SYM (@lem3499437 _90768 _90775 t f s u x)). Qed.
Lemma lem3499439 {_90768 _90775 : Type'} (t : _90768 -> Prop) (f : _90768 -> _90775) (s : _90768 -> Prop) (u : _90775 -> Prop) (x : _90775) (h1 : term1088 _90768 _90775 t f s u x) : term1088 _90768 _90775 t f s u x.
Proof. exact (h1). Qed.
Lemma lem3499450 {_90768 : Type'} (s : _90768 -> Prop) (t : _90768 -> Prop) (x : _90768) : (term1089 _90768 s t x) = (term1090 _90768 s t x).
Proof. exact (@lem17045 (s x) (t x)). Qed.
Lemma lem3499455 {_90768 _90775 : Type'} (x : _90775) (f : _90768 -> _90775) (x' : _90768) : (term349 _90768 _90775 x f x') = (term349 _90768 _90775 x f x').
Proof. exact (eq_refl (term349 _90768 _90775 x f x')). Qed.
Lemma lem3499456 {_90768 _90775 : Type'} (x : _90775) (f : _90768 -> _90775) (s : _90768 -> Prop) (t : _90768 -> Prop) (x' : _90768) : (term1091 _90768 _90775 x f s t x') = (term1092 _90768 _90775 x f s t x').
Proof. exact (MK_COMB (@lem3499455 _90768 _90775 x f x') (@lem3499450 _90768 s t x')). Qed.
Lemma lem3499457 {_90768 _90775 : Type'} (x : _90775) (f : _90768 -> _90775) (s : _90768 -> Prop) (t : _90768 -> Prop) (x' : _90768) : (term1093 _90768 _90775 x f s t x') = (term1091 _90768 _90775 x f s t x').
Proof. exact (@lem17045 (x = (f x')) (term1034 _90768 s t x')). Qed.
Lemma lem3499458 {_90768 _90775 : Type'} (x : _90775) (f : _90768 -> _90775) (s : _90768 -> Prop) (t : _90768 -> Prop) (x' : _90768) : (term1093 _90768 _90775 x f s t x') = (term1092 _90768 _90775 x f s t x').
Proof. exact (TRANS (@lem3499457 _90768 _90775 x f s t x') (@lem3499456 _90768 _90775 x f s t x')). Qed.
Lemma lem3499461 {_90768 _90775 : Type'} (x : _90775) (f : _90768 -> _90775) (s : _90768 -> Prop) (t : _90768 -> Prop) (x' : _90768) : (term1036 _90768 _90775 x f s t x') = (term1036 _90768 _90775 x f s t x').
Proof. exact (eq_refl (term1036 _90768 _90775 x f s t x')). Qed.
Lemma lem3499462 {_90768 : Type'} (P : _90768 -> Prop) : (term311 _90768 P) = (term312 _90768 P).
Proof. exact (@lem18394 _90768 P). Qed.
Lemma lem3499463 {_90768 _90775 : Type'} (x : _90775) (f : _90768 -> _90775) (s : _90768 -> Prop) (t : _90768 -> Prop) : (term1094 _90768 _90775 x f s t) = (term1095 _90768 _90775 x f s t).
Proof. exact (@lem3499462 _90768 (term1038 _90768 _90775 x f s t)). Qed.
Lemma lem3499464 {_90768 _90775 : Type'} (x : _90775) (f : _90768 -> _90775) (s : _90768 -> Prop) (t : _90768 -> Prop) (x' : _90768) : (term1096 _90768 _90775 x f s t x') = (term1036 _90768 _90775 x f s t x').
Proof. exact (eq_refl (term1096 _90768 _90775 x f s t x')). Qed.
Lemma lem3499465 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem3499466 {_90768 _90775 : Type'} (x : _90775) (f : _90768 -> _90775) (s : _90768 -> Prop) (t : _90768 -> Prop) (x' : _90768) : (term1097 _90768 _90775 x f s t x') = (term1093 _90768 _90775 x f s t x').
Proof. exact (MK_COMB (@lem3499465) (@lem3499464 _90768 _90775 x f s t x')). Qed.
Lemma lem3499467 {_90768 _90775 : Type'} (x : _90775) (f : _90768 -> _90775) (s : _90768 -> Prop) (t : _90768 -> Prop) (x' : _90768) : (term1097 _90768 _90775 x f s t x') = (term1092 _90768 _90775 x f s t x').
Proof. exact (TRANS (@lem3499466 _90768 _90775 x f s t x') (@lem3499458 _90768 _90775 x f s t x')). Qed.
Lemma lem3499468 {_90768 _90775 : Type'} (x : _90775) (f : _90768 -> _90775) (s : _90768 -> Prop) (t : _90768 -> Prop) : (term1098 _90768 _90775 x f s t) = (term1099 _90768 _90775 x f s t).
Proof. exact (fun_ext (fun x' : _90768 => @lem3499467 _90768 _90775 x f s t x')). Qed.
Lemma lem3499469 {_90768 : Type'} : (@all _90768) = (@all _90768).
Proof. exact (eq_refl (@all _90768)). Qed.
Lemma lem3499470 {_90768 _90775 : Type'} (x : _90775) (f : _90768 -> _90775) (s : _90768 -> Prop) (t : _90768 -> Prop) : (term1095 _90768 _90775 x f s t) = (term1100 _90768 _90775 x f s t).
Proof. exact (MK_COMB (@lem3499469 _90768) (@lem3499468 _90768 _90775 x f s t)). Qed.
Lemma lem3499471 {_90768 _90775 : Type'} (x : _90775) (f : _90768 -> _90775) (s : _90768 -> Prop) (t : _90768 -> Prop) : (term1094 _90768 _90775 x f s t) = (term1100 _90768 _90775 x f s t).
Proof. exact (TRANS (@lem3499463 _90768 _90775 x f s t) (@lem3499470 _90768 _90775 x f s t)). Qed.
Lemma lem3499472 {_90768 _90775 : Type'} (x : _90775) (f : _90768 -> _90775) (s : _90768 -> Prop) (t : _90768 -> Prop) : (term1038 _90768 _90775 x f s t) = (term1038 _90768 _90775 x f s t).
Proof. exact (fun_ext (fun x' : _90768 => @lem3499461 _90768 _90775 x f s t x')). Qed.
Lemma lem3499473 {_90768 : Type'} : (@ex _90768) = (@ex _90768).
Proof. exact (eq_refl (@ex _90768)). Qed.
Lemma lem3499474 {_90768 _90775 : Type'} (x : _90775) (f : _90768 -> _90775) (s : _90768 -> Prop) (t : _90768 -> Prop) : (term1039 _90768 _90775 x f s t) = (term1039 _90768 _90775 x f s t).
Proof. exact (MK_COMB (@lem3499473 _90768) (@lem3499472 _90768 _90775 x f s t)). Qed.
Lemma lem3499483 {_90768 _90775 : Type'} (x : _90775) (f : _90768 -> _90775) (s : _90768 -> Prop) (x' : _90768) : (term363 _90768 _90775 x f s x') = (term364 _90768 _90775 x f s x').
Proof. exact (@lem17045 (x = (f x')) (s x')). Qed.
Lemma lem3499486 {_90768 _90775 : Type'} (x : _90775) (f : _90768 -> _90775) (s : _90768 -> Prop) (x' : _90768) : (term264 _90768 _90775 x f s x') = (term264 _90768 _90775 x f s x').
Proof. exact (eq_refl (term264 _90768 _90775 x f s x')). Qed.
Lemma lem3499487 {_90768 : Type'} (P : _90768 -> Prop) : (term311 _90768 P) = (term312 _90768 P).
Proof. exact (@lem18394 _90768 P). Qed.
Lemma lem3499488 {_90768 _90775 : Type'} (x : _90775) (f : _90768 -> _90775) (s : _90768 -> Prop) : (term365 _90768 _90775 x f s) = (term366 _90768 _90775 x f s).
Proof. exact (@lem3499487 _90768 (term266 _90768 _90775 x f s)). Qed.
Lemma lem3499489 {_90768 _90775 : Type'} (x : _90775) (f : _90768 -> _90775) (s : _90768 -> Prop) (x' : _90768) : (term367 _90768 _90775 x f s x') = (term264 _90768 _90775 x f s x').
Proof. exact (eq_refl (term367 _90768 _90775 x f s x')). Qed.
Lemma lem3499490 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem3499491 {_90768 _90775 : Type'} (x : _90775) (f : _90768 -> _90775) (s : _90768 -> Prop) (x' : _90768) : (term368 _90768 _90775 x f s x') = (term363 _90768 _90775 x f s x').
Proof. exact (MK_COMB (@lem3499490) (@lem3499489 _90768 _90775 x f s x')). Qed.
Lemma lem3499492 {_90768 _90775 : Type'} (x : _90775) (f : _90768 -> _90775) (s : _90768 -> Prop) (x' : _90768) : (term368 _90768 _90775 x f s x') = (term364 _90768 _90775 x f s x').
Proof. exact (TRANS (@lem3499491 _90768 _90775 x f s x') (@lem3499483 _90768 _90775 x f s x')). Qed.
Lemma lem3499493 {_90768 _90775 : Type'} (x : _90775) (f : _90768 -> _90775) (s : _90768 -> Prop) : (term369 _90768 _90775 x f s) = (term370 _90768 _90775 x f s).
Proof. exact (fun_ext (fun x' : _90768 => @lem3499492 _90768 _90775 x f s x')). Qed.
Lemma lem3499494 {_90768 : Type'} : (@all _90768) = (@all _90768).
Proof. exact (eq_refl (@all _90768)). Qed.
Lemma lem3499495 {_90768 _90775 : Type'} (x : _90775) (f : _90768 -> _90775) (s : _90768 -> Prop) : (term366 _90768 _90775 x f s) = (term371 _90768 _90775 x f s).
Proof. exact (MK_COMB (@lem3499494 _90768) (@lem3499493 _90768 _90775 x f s)). Qed.
Lemma lem3499496 {_90768 _90775 : Type'} (x : _90775) (f : _90768 -> _90775) (s : _90768 -> Prop) : (term365 _90768 _90775 x f s) = (term371 _90768 _90775 x f s).
Proof. exact (TRANS (@lem3499488 _90768 _90775 x f s) (@lem3499495 _90768 _90775 x f s)). Qed.
Lemma lem3499497 {_90768 _90775 : Type'} (x : _90775) (f : _90768 -> _90775) (s : _90768 -> Prop) : (term266 _90768 _90775 x f s) = (term266 _90768 _90775 x f s).
Proof. exact (fun_ext (fun x' : _90768 => @lem3499486 _90768 _90775 x f s x')). Qed.
Lemma lem3499498 {_90768 : Type'} : (@ex _90768) = (@ex _90768).
Proof. exact (eq_refl (@ex _90768)). Qed.
Lemma lem3499499 {_90768 _90775 : Type'} (x : _90775) (f : _90768 -> _90775) (s : _90768 -> Prop) : (term267 _90768 _90775 x f s) = (term267 _90768 _90775 x f s).
Proof. exact (MK_COMB (@lem3499498 _90768) (@lem3499497 _90768 _90775 x f s)). Qed.
Lemma lem3499508 {_90768 _90775 : Type'} (x : _90775) (f : _90768 -> _90775) (t : _90768 -> Prop) (x' : _90768) : (term363 _90768 _90775 x f t x') = (term364 _90768 _90775 x f t x').
Proof. exact (@lem17045 (x = (f x')) (t x')). Qed.
Lemma lem3499511 {_90768 _90775 : Type'} (x : _90775) (f : _90768 -> _90775) (t : _90768 -> Prop) (x' : _90768) : (term264 _90768 _90775 x f t x') = (term264 _90768 _90775 x f t x').
Proof. exact (eq_refl (term264 _90768 _90775 x f t x')). Qed.
Lemma lem3499512 {_90768 : Type'} (P : _90768 -> Prop) : (term311 _90768 P) = (term312 _90768 P).
Proof. exact (@lem18394 _90768 P). Qed.
Lemma lem3499513 {_90768 _90775 : Type'} (x : _90775) (f : _90768 -> _90775) (t : _90768 -> Prop) : (term365 _90768 _90775 x f t) = (term366 _90768 _90775 x f t).
Proof. exact (@lem3499512 _90768 (term266 _90768 _90775 x f t)). Qed.
Lemma lem3499514 {_90768 _90775 : Type'} (x : _90775) (f : _90768 -> _90775) (t : _90768 -> Prop) (x' : _90768) : (term367 _90768 _90775 x f t x') = (term264 _90768 _90775 x f t x').
Proof. exact (eq_refl (term367 _90768 _90775 x f t x')). Qed.
Lemma lem3499515 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem3499516 {_90768 _90775 : Type'} (x : _90775) (f : _90768 -> _90775) (t : _90768 -> Prop) (x' : _90768) : (term368 _90768 _90775 x f t x') = (term363 _90768 _90775 x f t x').
Proof. exact (MK_COMB (@lem3499515) (@lem3499514 _90768 _90775 x f t x')). Qed.
Lemma lem3499517 {_90768 _90775 : Type'} (x : _90775) (f : _90768 -> _90775) (t : _90768 -> Prop) (x' : _90768) : (term368 _90768 _90775 x f t x') = (term364 _90768 _90775 x f t x').
Proof. exact (TRANS (@lem3499516 _90768 _90775 x f t x') (@lem3499508 _90768 _90775 x f t x')). Qed.
Lemma lem3499518 {_90768 _90775 : Type'} (x : _90775) (f : _90768 -> _90775) (t : _90768 -> Prop) : (term369 _90768 _90775 x f t) = (term370 _90768 _90775 x f t).
Proof. exact (fun_ext (fun x' : _90768 => @lem3499517 _90768 _90775 x f t x')). Qed.
Lemma lem3499519 {_90768 : Type'} : (@all _90768) = (@all _90768).
Proof. exact (eq_refl (@all _90768)). Qed.
Lemma lem3499520 {_90768 _90775 : Type'} (x : _90775) (f : _90768 -> _90775) (t : _90768 -> Prop) : (term366 _90768 _90775 x f t) = (term371 _90768 _90775 x f t).
Proof. exact (MK_COMB (@lem3499519 _90768) (@lem3499518 _90768 _90775 x f t)). Qed.
Lemma lem3499521 {_90768 _90775 : Type'} (x : _90775) (f : _90768 -> _90775) (t : _90768 -> Prop) : (term365 _90768 _90775 x f t) = (term371 _90768 _90775 x f t).
Proof. exact (TRANS (@lem3499513 _90768 _90775 x f t) (@lem3499520 _90768 _90775 x f t)). Qed.
Lemma lem3499522 {_90768 _90775 : Type'} (x : _90775) (f : _90768 -> _90775) (t : _90768 -> Prop) : (term266 _90768 _90775 x f t) = (term266 _90768 _90775 x f t).
Proof. exact (fun_ext (fun x' : _90768 => @lem3499511 _90768 _90775 x f t x')). Qed.
Lemma lem3499523 {_90768 : Type'} : (@ex _90768) = (@ex _90768).
Proof. exact (eq_refl (@ex _90768)). Qed.
Lemma lem3499524 {_90768 _90775 : Type'} (x : _90775) (f : _90768 -> _90775) (t : _90768 -> Prop) : (term267 _90768 _90775 x f t) = (term267 _90768 _90775 x f t).
Proof. exact (MK_COMB (@lem3499523 _90768) (@lem3499522 _90768 _90775 x f t)). Qed.
Lemma lem3499525 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem3499526 {_90768 _90775 : Type'} (x : _90775) (f : _90768 -> _90775) (s : _90768 -> Prop) : (term1101 _90768 _90775 x f s) = (term1102 _90768 _90775 x f s).
Proof. exact (MK_COMB (@lem3499525) (@lem3499496 _90768 _90775 x f s)). Qed.
Lemma lem3499527 {_90768 _90775 : Type'} (s : _90768 -> Prop) (x : _90775) (f : _90768 -> _90775) (t : _90768 -> Prop) : (term1103 _90768 _90775 s x f t) = (term1104 _90768 _90775 s x f t).
Proof. exact (MK_COMB (@lem3499526 _90768 _90775 x f s) (@lem3499521 _90768 _90775 x f t)). Qed.
Lemma lem3499528 {_90768 _90775 : Type'} (s : _90768 -> Prop) (x : _90775) (f : _90768 -> _90775) (t : _90768 -> Prop) : (term1105 _90768 _90775 s x f t) = (term1103 _90768 _90775 s x f t).
Proof. exact (@lem17045 (term267 _90768 _90775 x f s) (term267 _90768 _90775 x f t)). Qed.
Lemma lem3499529 {_90768 _90775 : Type'} (s : _90768 -> Prop) (x : _90775) (f : _90768 -> _90775) (t : _90768 -> Prop) : (term1105 _90768 _90775 s x f t) = (term1104 _90768 _90775 s x f t).
Proof. exact (TRANS (@lem3499528 _90768 _90775 s x f t) (@lem3499527 _90768 _90775 s x f t)). Qed.
Lemma lem3499530 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem3499531 {_90768 _90775 : Type'} (x : _90775) (f : _90768 -> _90775) (s : _90768 -> Prop) : (term1045 _90768 _90775 x f s) = (term1045 _90768 _90775 x f s).
Proof. exact (MK_COMB (@lem3499530) (@lem3499499 _90768 _90775 x f s)). Qed.
Lemma lem3499532 {_90768 _90775 : Type'} (s : _90768 -> Prop) (x : _90775) (f : _90768 -> _90775) (t : _90768 -> Prop) : (term1046 _90768 _90775 s x f t) = (term1046 _90768 _90775 s x f t).
Proof. exact (MK_COMB (@lem3499531 _90768 _90775 x f s) (@lem3499524 _90768 _90775 x f t)). Qed.
Lemma lem3499533 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem3499534 {_90768 _90775 : Type'} (x : _90775) (f : _90768 -> _90775) (s : _90768 -> Prop) (t : _90768 -> Prop) : (term1106 _90768 _90775 x f s t) = (term1107 _90768 _90775 x f s t).
Proof. exact (MK_COMB (@lem3499533) (@lem3499471 _90768 _90775 x f s t)). Qed.
Lemma lem3499535 {_90768 _90775 : Type'} (s : _90768 -> Prop) (x : _90775) (f : _90768 -> _90775) (t : _90768 -> Prop) : (term1108 _90768 _90775 s x f t) = (term1109 _90768 _90775 s x f t).
Proof. exact (MK_COMB (@lem3499534 _90768 _90775 x f s t) (@lem3499532 _90768 _90775 s x f t)). Qed.
Lemma lem3499536 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem3499537 {_90768 _90775 : Type'} (x : _90775) (f : _90768 -> _90775) (s : _90768 -> Prop) (t : _90768 -> Prop) : (term1110 _90768 _90775 x f s t) = (term1110 _90768 _90775 x f s t).
Proof. exact (MK_COMB (@lem3499536) (@lem3499474 _90768 _90775 x f s t)). Qed.
Lemma lem3499538 {_90768 _90775 : Type'} (s : _90768 -> Prop) (x : _90775) (f : _90768 -> _90775) (t : _90768 -> Prop) : (term1111 _90768 _90775 s x f t) = (term1112 _90768 _90775 s x f t).
Proof. exact (MK_COMB (@lem3499537 _90768 _90775 x f s t) (@lem3499529 _90768 _90775 s x f t)). Qed.
Lemma lem3499539 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem3499540 {_90768 _90775 : Type'} (s : _90768 -> Prop) (x : _90775) (f : _90768 -> _90775) (t : _90768 -> Prop) : (term1113 _90768 _90775 s x f t) = (term1114 _90768 _90775 s x f t).
Proof. exact (MK_COMB (@lem3499539) (@lem3499538 _90768 _90775 s x f t)). Qed.
Lemma lem3499541 {_90768 _90775 : Type'} (s : _90768 -> Prop) (x : _90775) (f : _90768 -> _90775) (t : _90768 -> Prop) : (term1115 _90768 _90775 s x f t) = (term1116 _90768 _90775 s x f t).
Proof. exact (MK_COMB (@lem3499540 _90768 _90775 s x f t) (@lem3499535 _90768 _90775 s x f t)). Qed.
Lemma lem3499542 {_90768 _90775 : Type'} (s : _90768 -> Prop) (x : _90775) (f : _90768 -> _90775) (t : _90768 -> Prop) : ((term1039 _90768 _90775 x f s t) = (term1046 _90768 _90775 s x f t)) = (term1115 _90768 _90775 s x f t).
Proof. exact (@lem17784 (term1039 _90768 _90775 x f s t) (term1046 _90768 _90775 s x f t)). Qed.
Lemma lem3499543 {_90768 _90775 : Type'} (s : _90768 -> Prop) (x : _90775) (f : _90768 -> _90775) (t : _90768 -> Prop) : ((term1039 _90768 _90775 x f s t) = (term1046 _90768 _90775 s x f t)) = (term1116 _90768 _90775 s x f t).
Proof. exact (TRANS (@lem3499542 _90768 _90775 s x f t) (@lem3499541 _90768 _90775 s x f t)). Qed.
Lemma lem3499544 {_90768 _90775 : Type'} (s : _90768 -> Prop) (f : _90768 -> _90775) (t : _90768 -> Prop) : (term1048 _90768 _90775 s f t) = (term1117 _90768 _90775 s f t).
Proof. exact (fun_ext (fun x : _90775 => @lem3499543 _90768 _90775 s x f t)). Qed.
Lemma lem3499545 {_90775 : Type'} : (@all _90775) = (@all _90775).
Proof. exact (eq_refl (@all _90775)). Qed.
Lemma lem3499546 {_90768 _90775 : Type'} (s : _90768 -> Prop) (f : _90768 -> _90775) (t : _90768 -> Prop) : (term1049 _90768 _90775 s f t) = (term1118 _90768 _90775 s f t).
Proof. exact (MK_COMB (@lem3499545 _90775) (@lem3499544 _90768 _90775 s f t)). Qed.
Lemma lem3499555 {_90768 _90775 : Type'} (x : _90775) (f : _90768 -> _90775) (t : _90768 -> Prop) (x' : _90768) : (term363 _90768 _90775 x f t x') = (term364 _90768 _90775 x f t x').
Proof. exact (@lem17045 (x = (f x')) (t x')). Qed.
Lemma lem3499558 {_90768 _90775 : Type'} (x : _90775) (f : _90768 -> _90775) (t : _90768 -> Prop) (x' : _90768) : (term264 _90768 _90775 x f t x') = (term264 _90768 _90775 x f t x').
Proof. exact (eq_refl (term264 _90768 _90775 x f t x')). Qed.
Lemma lem3499559 {_90768 : Type'} (P : _90768 -> Prop) : (term311 _90768 P) = (term312 _90768 P).
Proof. exact (@lem18394 _90768 P). Qed.
Lemma lem3499560 {_90768 _90775 : Type'} (x : _90775) (f : _90768 -> _90775) (t : _90768 -> Prop) : (term365 _90768 _90775 x f t) = (term366 _90768 _90775 x f t).
Proof. exact (@lem3499559 _90768 (term266 _90768 _90775 x f t)). Qed.
Lemma lem3499561 {_90768 _90775 : Type'} (x : _90775) (f : _90768 -> _90775) (t : _90768 -> Prop) (x' : _90768) : (term367 _90768 _90775 x f t x') = (term264 _90768 _90775 x f t x').
Proof. exact (eq_refl (term367 _90768 _90775 x f t x')). Qed.
Lemma lem3499562 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem3499563 {_90768 _90775 : Type'} (x : _90775) (f : _90768 -> _90775) (t : _90768 -> Prop) (x' : _90768) : (term368 _90768 _90775 x f t x') = (term363 _90768 _90775 x f t x').
Proof. exact (MK_COMB (@lem3499562) (@lem3499561 _90768 _90775 x f t x')). Qed.
Lemma lem3499564 {_90768 _90775 : Type'} (x : _90775) (f : _90768 -> _90775) (t : _90768 -> Prop) (x' : _90768) : (term368 _90768 _90775 x f t x') = (term364 _90768 _90775 x f t x').
Proof. exact (TRANS (@lem3499563 _90768 _90775 x f t x') (@lem3499555 _90768 _90775 x f t x')). Qed.
Lemma lem3499565 {_90768 _90775 : Type'} (x : _90775) (f : _90768 -> _90775) (t : _90768 -> Prop) : (term369 _90768 _90775 x f t) = (term370 _90768 _90775 x f t).
Proof. exact (fun_ext (fun x' : _90768 => @lem3499564 _90768 _90775 x f t x')). Qed.
Lemma lem3499566 {_90768 : Type'} : (@all _90768) = (@all _90768).
Proof. exact (eq_refl (@all _90768)). Qed.
Lemma lem3499567 {_90768 _90775 : Type'} (x : _90775) (f : _90768 -> _90775) (t : _90768 -> Prop) : (term366 _90768 _90775 x f t) = (term371 _90768 _90775 x f t).
Proof. exact (MK_COMB (@lem3499566 _90768) (@lem3499565 _90768 _90775 x f t)). Qed.
Lemma lem3499568 {_90768 _90775 : Type'} (x : _90775) (f : _90768 -> _90775) (t : _90768 -> Prop) : (term365 _90768 _90775 x f t) = (term371 _90768 _90775 x f t).
Proof. exact (TRANS (@lem3499560 _90768 _90775 x f t) (@lem3499567 _90768 _90775 x f t)). Qed.
Lemma lem3499569 {_90768 _90775 : Type'} (x : _90775) (f : _90768 -> _90775) (t : _90768 -> Prop) : (term266 _90768 _90775 x f t) = (term266 _90768 _90775 x f t).
Proof. exact (fun_ext (fun x' : _90768 => @lem3499558 _90768 _90775 x f t x')). Qed.
Lemma lem3499570 {_90768 : Type'} : (@ex _90768) = (@ex _90768).
Proof. exact (eq_refl (@ex _90768)). Qed.
Lemma lem3499571 {_90768 _90775 : Type'} (x : _90775) (f : _90768 -> _90775) (t : _90768 -> Prop) : (term267 _90768 _90775 x f t) = (term267 _90768 _90775 x f t).
Proof. exact (MK_COMB (@lem3499570 _90768) (@lem3499569 _90768 _90775 x f t)). Qed.
Lemma lem3499572 {_90775 : Type'} (u : _90775 -> Prop) (x : _90775) : (term618 _90775 u x) = (term618 _90775 u x).
Proof. exact (eq_refl (term618 _90775 u x)). Qed.
Lemma lem3499573 {_90775 : Type'} (u : _90775 -> Prop) (x : _90775) : (u x) = (u x).
Proof. exact (eq_refl (u x)). Qed.
Lemma lem3499574 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem3499575 {_90768 _90775 : Type'} (x : _90775) (f : _90768 -> _90775) (t : _90768 -> Prop) : (term1101 _90768 _90775 x f t) = (term1102 _90768 _90775 x f t).
Proof. exact (MK_COMB (@lem3499574) (@lem3499568 _90768 _90775 x f t)). Qed.
Lemma lem3499576 {_90768 _90775 : Type'} (f : _90768 -> _90775) (t : _90768 -> Prop) (u : _90775 -> Prop) (x : _90775) : (term1119 _90768 _90775 f t u x) = (term1120 _90768 _90775 f t u x).
Proof. exact (MK_COMB (@lem3499575 _90768 _90775 x f t) (@lem3499573 _90775 u x)). Qed.
Lemma lem3499577 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem3499578 {_90768 _90775 : Type'} (x : _90775) (f : _90768 -> _90775) (t : _90768 -> Prop) : (term1121 _90768 _90775 x f t) = (term1121 _90768 _90775 x f t).
Proof. exact (MK_COMB (@lem3499577) (@lem3499571 _90768 _90775 x f t)). Qed.
Lemma lem3499579 {_90768 _90775 : Type'} (f : _90768 -> _90775) (t : _90768 -> Prop) (u : _90775 -> Prop) (x : _90775) : (term1122 _90768 _90775 f t u x) = (term1122 _90768 _90775 f t u x).
Proof. exact (MK_COMB (@lem3499578 _90768 _90775 x f t) (@lem3499572 _90775 u x)). Qed.
Lemma lem3499580 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem3499581 {_90768 _90775 : Type'} (f : _90768 -> _90775) (t : _90768 -> Prop) (u : _90775 -> Prop) (x : _90775) : (term1123 _90768 _90775 f t u x) = (term1123 _90768 _90775 f t u x).
Proof. exact (MK_COMB (@lem3499580) (@lem3499579 _90768 _90775 f t u x)). Qed.
Lemma lem3499582 {_90768 _90775 : Type'} (f : _90768 -> _90775) (t : _90768 -> Prop) (u : _90775 -> Prop) (x : _90775) : (term1124 _90768 _90775 f t u x) = (term1125 _90768 _90775 f t u x).
Proof. exact (MK_COMB (@lem3499581 _90768 _90775 f t u x) (@lem3499576 _90768 _90775 f t u x)). Qed.
Lemma lem3499583 {_90768 _90775 : Type'} (f : _90768 -> _90775) (t : _90768 -> Prop) (u : _90775 -> Prop) (x : _90775) : ((term267 _90768 _90775 x f t) = (u x)) = (term1124 _90768 _90775 f t u x).
Proof. exact (@lem17784 (term267 _90768 _90775 x f t) (u x)). Qed.
Lemma lem3499584 {_90768 _90775 : Type'} (f : _90768 -> _90775) (t : _90768 -> Prop) (u : _90775 -> Prop) (x : _90775) : ((term267 _90768 _90775 x f t) = (u x)) = (term1125 _90768 _90775 f t u x).
Proof. exact (TRANS (@lem3499583 _90768 _90775 f t u x) (@lem3499582 _90768 _90775 f t u x)). Qed.
Lemma lem3499585 {_90768 _90775 : Type'} (f : _90768 -> _90775) (t : _90768 -> Prop) (u : _90775 -> Prop) : (term1054 _90768 _90775 f t u) = (term1126 _90768 _90775 f t u).
Proof. exact (fun_ext (fun x : _90775 => @lem3499584 _90768 _90775 f t u x)). Qed.
Lemma lem3499586 {_90775 : Type'} : (@all _90775) = (@all _90775).
Proof. exact (eq_refl (@all _90775)). Qed.
Lemma lem3499587 {_90768 _90775 : Type'} (f : _90768 -> _90775) (t : _90768 -> Prop) (u : _90775 -> Prop) : (term1055 _90768 _90775 f t u) = (term1127 _90768 _90775 f t u).
Proof. exact (MK_COMB (@lem3499586 _90775) (@lem3499585 _90768 _90775 f t u)). Qed.
Lemma lem3499588 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem3499589 {_90768 _90775 : Type'} (s : _90768 -> Prop) (f : _90768 -> _90775) (t : _90768 -> Prop) : (term1050 _90768 _90775 s f t) = (term1128 _90768 _90775 s f t).
Proof. exact (MK_COMB (@lem3499588) (@lem3499546 _90768 _90775 s f t)). Qed.
Lemma lem3499590 {_90768 _90775 : Type'} (s : _90768 -> Prop) (f : _90768 -> _90775) (t : _90768 -> Prop) (u : _90775 -> Prop) : (term1056 _90768 _90775 s f t u) = (term1129 _90768 _90775 s f t u).
Proof. exact (MK_COMB (@lem3499589 _90768 _90775 s f t) (@lem3499587 _90768 _90775 f t u)). Qed.
Lemma lem3499592 {A : Type'} (P : A -> Prop) (Q : A -> Prop) : (term726 A P Q) = (term725 A P Q).
Proof. exact (EQ_MP (@lem18953 A P Q) (@lem18952 A P Q)). Qed.
Lemma lem3499593 {_90775 : Type'} (P : _90775 -> Prop) (Q : _90775 -> Prop) : (term726 _90775 P Q) = (term725 _90775 P Q).
Proof. exact (@lem3499592 _90775 P Q). Qed.
Lemma lem3499594 {_90768 _90775 : Type'} (s : _90768 -> Prop) (f : _90768 -> _90775) (t : _90768 -> Prop) : (term1130 _90768 _90775 s f t) = (term1131 _90768 _90775 s f t).
Proof. exact (@lem3499593 _90775 (term1132 _90768 _90775 s f t) (term1133 _90768 _90775 s f t)). Qed.
Lemma lem3499595 {_90768 _90775 : Type'} (s : _90768 -> Prop) (x : _90775) (f : _90768 -> _90775) (t : _90768 -> Prop) : (term1134 _90768 _90775 s f t x) = (term1112 _90768 _90775 s x f t).
Proof. exact (eq_refl (term1134 _90768 _90775 s f t x)). Qed.
Lemma lem3499596 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem3499597 {_90768 _90775 : Type'} (s : _90768 -> Prop) (x : _90775) (f : _90768 -> _90775) (t : _90768 -> Prop) : (term1135 _90768 _90775 s f t x) = (term1114 _90768 _90775 s x f t).
Proof. exact (MK_COMB (@lem3499596) (@lem3499595 _90768 _90775 s x f t)). Qed.
Lemma lem3499598 {_90768 _90775 : Type'} (s : _90768 -> Prop) (x : _90775) (f : _90768 -> _90775) (t : _90768 -> Prop) : (term1136 _90768 _90775 s f t x) = (term1109 _90768 _90775 s x f t).
Proof. exact (eq_refl (term1136 _90768 _90775 s f t x)). Qed.
Lemma lem3499599 {_90768 _90775 : Type'} (s : _90768 -> Prop) (x : _90775) (f : _90768 -> _90775) (t : _90768 -> Prop) : (term1137 _90768 _90775 s f t x) = (term1116 _90768 _90775 s x f t).
Proof. exact (MK_COMB (@lem3499597 _90768 _90775 s x f t) (@lem3499598 _90768 _90775 s x f t)). Qed.
Lemma lem3499600 {_90768 _90775 : Type'} (s : _90768 -> Prop) (f : _90768 -> _90775) (t : _90768 -> Prop) : (term1138 _90768 _90775 s f t) = (term1117 _90768 _90775 s f t).
Proof. exact (fun_ext (fun x : _90775 => @lem3499599 _90768 _90775 s x f t)). Qed.
Lemma lem3499601 {_90775 : Type'} : (@all _90775) = (@all _90775).
Proof. exact (eq_refl (@all _90775)). Qed.
Lemma lem3499602 {_90768 _90775 : Type'} (s : _90768 -> Prop) (f : _90768 -> _90775) (t : _90768 -> Prop) : (term1130 _90768 _90775 s f t) = (term1118 _90768 _90775 s f t).
Proof. exact (MK_COMB (@lem3499601 _90775) (@lem3499600 _90768 _90775 s f t)). Qed.
Lemma lem3499603 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem3499604 {_90768 _90775 : Type'} (s : _90768 -> Prop) (f : _90768 -> _90775) (t : _90768 -> Prop) : (term1139 _90768 _90775 s f t) = (term1140 _90768 _90775 s f t).
Proof. exact (MK_COMB (@lem3499603) (@lem3499602 _90768 _90775 s f t)). Qed.
Lemma lem3499605 {_90768 _90775 : Type'} (s : _90768 -> Prop) (x : _90775) (f : _90768 -> _90775) (t : _90768 -> Prop) : (term1134 _90768 _90775 s f t x) = (term1112 _90768 _90775 s x f t).
Proof. exact (eq_refl (term1134 _90768 _90775 s f t x)). Qed.
Lemma lem3499606 {_90768 _90775 : Type'} (s : _90768 -> Prop) (f : _90768 -> _90775) (t : _90768 -> Prop) : (term1141 _90768 _90775 s f t) = (term1132 _90768 _90775 s f t).
Proof. exact (fun_ext (fun x : _90775 => @lem3499605 _90768 _90775 s x f t)). Qed.
Lemma lem3499607 {_90775 : Type'} : (@all _90775) = (@all _90775).
Proof. exact (eq_refl (@all _90775)). Qed.
Lemma lem3499608 {_90768 _90775 : Type'} (s : _90768 -> Prop) (f : _90768 -> _90775) (t : _90768 -> Prop) : (term1142 _90768 _90775 s f t) = (term1143 _90768 _90775 s f t).
Proof. exact (MK_COMB (@lem3499607 _90775) (@lem3499606 _90768 _90775 s f t)). Qed.
Lemma lem3499609 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem3499610 {_90768 _90775 : Type'} (s : _90768 -> Prop) (f : _90768 -> _90775) (t : _90768 -> Prop) : (term1144 _90768 _90775 s f t) = (term1145 _90768 _90775 s f t).
Proof. exact (MK_COMB (@lem3499609) (@lem3499608 _90768 _90775 s f t)). Qed.
Lemma lem3499611 {_90768 _90775 : Type'} (s : _90768 -> Prop) (x : _90775) (f : _90768 -> _90775) (t : _90768 -> Prop) : (term1136 _90768 _90775 s f t x) = (term1109 _90768 _90775 s x f t).
Proof. exact (eq_refl (term1136 _90768 _90775 s f t x)). Qed.
Lemma lem3499612 {_90768 _90775 : Type'} (s : _90768 -> Prop) (f : _90768 -> _90775) (t : _90768 -> Prop) : (term1146 _90768 _90775 s f t) = (term1133 _90768 _90775 s f t).
Proof. exact (fun_ext (fun x : _90775 => @lem3499611 _90768 _90775 s x f t)). Qed.
Lemma lem3499613 {_90775 : Type'} : (@all _90775) = (@all _90775).
Proof. exact (eq_refl (@all _90775)). Qed.
Lemma lem3499614 {_90768 _90775 : Type'} (s : _90768 -> Prop) (f : _90768 -> _90775) (t : _90768 -> Prop) : (term1147 _90768 _90775 s f t) = (term1148 _90768 _90775 s f t).
Proof. exact (MK_COMB (@lem3499613 _90775) (@lem3499612 _90768 _90775 s f t)). Qed.
Lemma lem3499615 {_90768 _90775 : Type'} (s : _90768 -> Prop) (f : _90768 -> _90775) (t : _90768 -> Prop) : (term1131 _90768 _90775 s f t) = (term1149 _90768 _90775 s f t).
Proof. exact (MK_COMB (@lem3499610 _90768 _90775 s f t) (@lem3499614 _90768 _90775 s f t)). Qed.
Lemma lem3499616 {_90768 _90775 : Type'} (s : _90768 -> Prop) (f : _90768 -> _90775) (t : _90768 -> Prop) : ((term1130 _90768 _90775 s f t) = (term1131 _90768 _90775 s f t)) = ((term1118 _90768 _90775 s f t) = (term1149 _90768 _90775 s f t)).
Proof. exact (MK_COMB (@lem3499604 _90768 _90775 s f t) (@lem3499615 _90768 _90775 s f t)). Qed.
Lemma lem3499617 {_90768 _90775 : Type'} (s : _90768 -> Prop) (f : _90768 -> _90775) (t : _90768 -> Prop) : (term1118 _90768 _90775 s f t) = (term1149 _90768 _90775 s f t).
Proof. exact (EQ_MP (@lem3499616 _90768 _90775 s f t) (@lem3499594 _90768 _90775 s f t)). Qed.
Lemma lem3499970 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem3499971 {_90768 _90775 : Type'} (s : _90768 -> Prop) (f : _90768 -> _90775) (t : _90768 -> Prop) : (term1128 _90768 _90775 s f t) = (term1150 _90768 _90775 s f t).
Proof. exact (MK_COMB (@lem3499970) (@lem3499617 _90768 _90775 s f t)). Qed.
Lemma lem3499973 {A : Type'} (P : A -> Prop) (Q : A -> Prop) : (term726 A P Q) = (term725 A P Q).
Proof. exact (EQ_MP (@lem18953 A P Q) (@lem18952 A P Q)). Qed.
Lemma lem3499974 {_90775 : Type'} (P : _90775 -> Prop) (Q : _90775 -> Prop) : (term726 _90775 P Q) = (term725 _90775 P Q).
Proof. exact (@lem3499973 _90775 P Q). Qed.
Lemma lem3499975 {_90768 _90775 : Type'} (f : _90768 -> _90775) (t : _90768 -> Prop) (u : _90775 -> Prop) : (term1151 _90768 _90775 f t u) = (term1152 _90768 _90775 f t u).
Proof. exact (@lem3499974 _90775 (term1153 _90768 _90775 f t u) (term1154 _90768 _90775 f t u)). Qed.
Lemma lem3499976 {_90768 _90775 : Type'} (f : _90768 -> _90775) (t : _90768 -> Prop) (u : _90775 -> Prop) (x : _90775) : (term1155 _90768 _90775 f t u x) = (term1122 _90768 _90775 f t u x).
Proof. exact (eq_refl (term1155 _90768 _90775 f t u x)). Qed.
Lemma lem3499977 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem3499978 {_90768 _90775 : Type'} (f : _90768 -> _90775) (t : _90768 -> Prop) (u : _90775 -> Prop) (x : _90775) : (term1156 _90768 _90775 f t u x) = (term1123 _90768 _90775 f t u x).
Proof. exact (MK_COMB (@lem3499977) (@lem3499976 _90768 _90775 f t u x)). Qed.
Lemma lem3499979 {_90768 _90775 : Type'} (f : _90768 -> _90775) (t : _90768 -> Prop) (u : _90775 -> Prop) (x : _90775) : (term1157 _90768 _90775 f t u x) = (term1120 _90768 _90775 f t u x).
Proof. exact (eq_refl (term1157 _90768 _90775 f t u x)). Qed.
Lemma lem3499980 {_90768 _90775 : Type'} (f : _90768 -> _90775) (t : _90768 -> Prop) (u : _90775 -> Prop) (x : _90775) : (term1158 _90768 _90775 f t u x) = (term1125 _90768 _90775 f t u x).
Proof. exact (MK_COMB (@lem3499978 _90768 _90775 f t u x) (@lem3499979 _90768 _90775 f t u x)). Qed.
Lemma lem3499981 {_90768 _90775 : Type'} (f : _90768 -> _90775) (t : _90768 -> Prop) (u : _90775 -> Prop) : (term1159 _90768 _90775 f t u) = (term1126 _90768 _90775 f t u).
Proof. exact (fun_ext (fun x : _90775 => @lem3499980 _90768 _90775 f t u x)). Qed.
Lemma lem3499982 {_90775 : Type'} : (@all _90775) = (@all _90775).
Proof. exact (eq_refl (@all _90775)). Qed.
Lemma lem3499983 {_90768 _90775 : Type'} (f : _90768 -> _90775) (t : _90768 -> Prop) (u : _90775 -> Prop) : (term1151 _90768 _90775 f t u) = (term1127 _90768 _90775 f t u).
Proof. exact (MK_COMB (@lem3499982 _90775) (@lem3499981 _90768 _90775 f t u)). Qed.
Lemma lem3499984 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem3499985 {_90768 _90775 : Type'} (f : _90768 -> _90775) (t : _90768 -> Prop) (u : _90775 -> Prop) : (term1160 _90768 _90775 f t u) = (term1161 _90768 _90775 f t u).
Proof. exact (MK_COMB (@lem3499984) (@lem3499983 _90768 _90775 f t u)). Qed.
Lemma lem3499986 {_90768 _90775 : Type'} (f : _90768 -> _90775) (t : _90768 -> Prop) (u : _90775 -> Prop) (x : _90775) : (term1155 _90768 _90775 f t u x) = (term1122 _90768 _90775 f t u x).
Proof. exact (eq_refl (term1155 _90768 _90775 f t u x)). Qed.
Lemma lem3499987 {_90768 _90775 : Type'} (f : _90768 -> _90775) (t : _90768 -> Prop) (u : _90775 -> Prop) : (term1162 _90768 _90775 f t u) = (term1153 _90768 _90775 f t u).
Proof. exact (fun_ext (fun x : _90775 => @lem3499986 _90768 _90775 f t u x)). Qed.
Lemma lem3499988 {_90775 : Type'} : (@all _90775) = (@all _90775).
Proof. exact (eq_refl (@all _90775)). Qed.
Lemma lem3499989 {_90768 _90775 : Type'} (f : _90768 -> _90775) (t : _90768 -> Prop) (u : _90775 -> Prop) : (term1163 _90768 _90775 f t u) = (term1164 _90768 _90775 f t u).
Proof. exact (MK_COMB (@lem3499988 _90775) (@lem3499987 _90768 _90775 f t u)). Qed.
Lemma lem3499990 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem3499991 {_90768 _90775 : Type'} (f : _90768 -> _90775) (t : _90768 -> Prop) (u : _90775 -> Prop) : (term1165 _90768 _90775 f t u) = (term1166 _90768 _90775 f t u).
Proof. exact (MK_COMB (@lem3499990) (@lem3499989 _90768 _90775 f t u)). Qed.
Lemma lem3499992 {_90768 _90775 : Type'} (f : _90768 -> _90775) (t : _90768 -> Prop) (u : _90775 -> Prop) (x : _90775) : (term1157 _90768 _90775 f t u x) = (term1120 _90768 _90775 f t u x).
Proof. exact (eq_refl (term1157 _90768 _90775 f t u x)). Qed.
Lemma lem3499993 {_90768 _90775 : Type'} (f : _90768 -> _90775) (t : _90768 -> Prop) (u : _90775 -> Prop) : (term1167 _90768 _90775 f t u) = (term1154 _90768 _90775 f t u).
Proof. exact (fun_ext (fun x : _90775 => @lem3499992 _90768 _90775 f t u x)). Qed.
Lemma lem3499994 {_90775 : Type'} : (@all _90775) = (@all _90775).
Proof. exact (eq_refl (@all _90775)). Qed.
Lemma lem3499995 {_90768 _90775 : Type'} (f : _90768 -> _90775) (t : _90768 -> Prop) (u : _90775 -> Prop) : (term1168 _90768 _90775 f t u) = (term1169 _90768 _90775 f t u).
Proof. exact (MK_COMB (@lem3499994 _90775) (@lem3499993 _90768 _90775 f t u)). Qed.
Lemma lem3499996 {_90768 _90775 : Type'} (f : _90768 -> _90775) (t : _90768 -> Prop) (u : _90775 -> Prop) : (term1152 _90768 _90775 f t u) = (term1170 _90768 _90775 f t u).
Proof. exact (MK_COMB (@lem3499991 _90768 _90775 f t u) (@lem3499995 _90768 _90775 f t u)). Qed.
Lemma lem3499997 {_90768 _90775 : Type'} (f : _90768 -> _90775) (t : _90768 -> Prop) (u : _90775 -> Prop) : ((term1151 _90768 _90775 f t u) = (term1152 _90768 _90775 f t u)) = ((term1127 _90768 _90775 f t u) = (term1170 _90768 _90775 f t u)).
Proof. exact (MK_COMB (@lem3499985 _90768 _90775 f t u) (@lem3499996 _90768 _90775 f t u)). Qed.
Lemma lem3499998 {_90768 _90775 : Type'} (f : _90768 -> _90775) (t : _90768 -> Prop) (u : _90775 -> Prop) : (term1127 _90768 _90775 f t u) = (term1170 _90768 _90775 f t u).
Proof. exact (EQ_MP (@lem3499997 _90768 _90775 f t u) (@lem3499975 _90768 _90775 f t u)). Qed.
Lemma lem3500159 {_90768 _90775 : Type'} (s : _90768 -> Prop) (f : _90768 -> _90775) (t : _90768 -> Prop) (u : _90775 -> Prop) : (term1129 _90768 _90775 s f t u) = (term1171 _90768 _90775 s f t u).
Proof. exact (MK_COMB (@lem3499971 _90768 _90775 s f t) (@lem3499998 _90768 _90775 f t u)). Qed.
Lemma lem3500161 {A : Type'} (P : A -> Prop) (Q : Prop) : (term550 A P Q) = (term551 A P Q).
Proof. exact (EQ_MP (@lem18905 A P Q) (@lem18904 A P Q)). Qed.
Lemma lem3500162 {_90768 : Type'} (P : _90768 -> Prop) (Q : Prop) : (term550 _90768 P Q) = (term551 _90768 P Q).
Proof. exact (@lem3500161 _90768 P Q). Qed.
Lemma lem3500163 {_90768 _90775 : Type'} (s : _90768 -> Prop) (x : _90775) (f : _90768 -> _90775) (t : _90768 -> Prop) : (term1172 _90768 _90775 s x f t) = (term1173 _90768 _90775 s x f t).
Proof. exact (@lem3500162 _90768 (term1038 _90768 _90775 x f s t) (term1104 _90768 _90775 s x f t)). Qed.
Lemma lem3500164 {_90768 _90775 : Type'} (x : _90775) (f : _90768 -> _90775) (s : _90768 -> Prop) (t : _90768 -> Prop) (x' : _90768) : (term1096 _90768 _90775 x f s t x') = (term1036 _90768 _90775 x f s t x').
Proof. exact (eq_refl (term1096 _90768 _90775 x f s t x')). Qed.
Lemma lem3500165 {_90768 _90775 : Type'} (x : _90775) (f : _90768 -> _90775) (s : _90768 -> Prop) (t : _90768 -> Prop) : (term1174 _90768 _90775 x f s t) = (term1038 _90768 _90775 x f s t).
Proof. exact (fun_ext (fun x' : _90768 => @lem3500164 _90768 _90775 x f s t x')). Qed.
Lemma lem3500166 {_90768 : Type'} : (@ex _90768) = (@ex _90768).
Proof. exact (eq_refl (@ex _90768)). Qed.
Lemma lem3500167 {_90768 _90775 : Type'} (x : _90775) (f : _90768 -> _90775) (s : _90768 -> Prop) (t : _90768 -> Prop) : (term1175 _90768 _90775 x f s t) = (term1039 _90768 _90775 x f s t).
Proof. exact (MK_COMB (@lem3500166 _90768) (@lem3500165 _90768 _90775 x f s t)). Qed.
Lemma lem3500168 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem3500169 {_90768 _90775 : Type'} (x : _90775) (f : _90768 -> _90775) (s : _90768 -> Prop) (t : _90768 -> Prop) : (term1176 _90768 _90775 x f s t) = (term1110 _90768 _90775 x f s t).
Proof. exact (MK_COMB (@lem3500168) (@lem3500167 _90768 _90775 x f s t)). Qed.
Lemma lem3500170 {_90768 _90775 : Type'} (s : _90768 -> Prop) (x : _90775) (f : _90768 -> _90775) (t : _90768 -> Prop) : (term1104 _90768 _90775 s x f t) = (term1104 _90768 _90775 s x f t).
Proof. exact (eq_refl (term1104 _90768 _90775 s x f t)). Qed.
Lemma lem3500171 {_90768 _90775 : Type'} (s : _90768 -> Prop) (x : _90775) (f : _90768 -> _90775) (t : _90768 -> Prop) : (term1172 _90768 _90775 s x f t) = (term1112 _90768 _90775 s x f t).
Proof. exact (MK_COMB (@lem3500169 _90768 _90775 x f s t) (@lem3500170 _90768 _90775 s x f t)). Qed.
Lemma lem3500172 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem3500173 {_90768 _90775 : Type'} (s : _90768 -> Prop) (x : _90775) (f : _90768 -> _90775) (t : _90768 -> Prop) : (term1177 _90768 _90775 s x f t) = (term1178 _90768 _90775 s x f t).
Proof. exact (MK_COMB (@lem3500172) (@lem3500171 _90768 _90775 s x f t)). Qed.
Lemma lem3500174 {_90768 _90775 : Type'} (x : _90775) (f : _90768 -> _90775) (s : _90768 -> Prop) (t : _90768 -> Prop) (x' : _90768) : (term1096 _90768 _90775 x f s t x') = (term1036 _90768 _90775 x f s t x').
Proof. exact (eq_refl (term1096 _90768 _90775 x f s t x')). Qed.
Lemma lem3500175 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem3500176 {_90768 _90775 : Type'} (x : _90775) (f : _90768 -> _90775) (s : _90768 -> Prop) (t : _90768 -> Prop) (x' : _90768) : (term1179 _90768 _90775 x f s t x') = (term1180 _90768 _90775 x f s t x').
Proof. exact (MK_COMB (@lem3500175) (@lem3500174 _90768 _90775 x f s t x')). Qed.
Lemma lem3500177 {_90768 _90775 : Type'} (s : _90768 -> Prop) (x : _90775) (f : _90768 -> _90775) (t : _90768 -> Prop) : (term1104 _90768 _90775 s x f t) = (term1104 _90768 _90775 s x f t).
Proof. exact (eq_refl (term1104 _90768 _90775 s x f t)). Qed.
Lemma lem3500178 {_90768 _90775 : Type'} (x : _90768) (s : _90768 -> Prop) (x' : _90775) (f : _90768 -> _90775) (t : _90768 -> Prop) : (term1181 _90768 _90775 x s x' f t) = (term1182 _90768 _90775 x s x' f t).
Proof. exact (MK_COMB (@lem3500176 _90768 _90775 x' f s t x) (@lem3500177 _90768 _90775 s x' f t)). Qed.
Lemma lem3500179 {_90768 _90775 : Type'} (s : _90768 -> Prop) (x : _90775) (f : _90768 -> _90775) (t : _90768 -> Prop) : (term1183 _90768 _90775 s x f t) = (term1184 _90768 _90775 s x f t).
Proof. exact (fun_ext (fun x' : _90768 => @lem3500178 _90768 _90775 x' s x f t)). Qed.
Lemma lem3500180 {_90768 : Type'} : (@ex _90768) = (@ex _90768).
Proof. exact (eq_refl (@ex _90768)). Qed.
Lemma lem3500181 {_90768 _90775 : Type'} (s : _90768 -> Prop) (x : _90775) (f : _90768 -> _90775) (t : _90768 -> Prop) : (term1173 _90768 _90775 s x f t) = (term1185 _90768 _90775 s x f t).
Proof. exact (MK_COMB (@lem3500180 _90768) (@lem3500179 _90768 _90775 s x f t)). Qed.
Lemma lem3500182 {_90768 _90775 : Type'} (s : _90768 -> Prop) (x : _90775) (f : _90768 -> _90775) (t : _90768 -> Prop) : ((term1172 _90768 _90775 s x f t) = (term1173 _90768 _90775 s x f t)) = ((term1112 _90768 _90775 s x f t) = (term1185 _90768 _90775 s x f t)).
Proof. exact (MK_COMB (@lem3500173 _90768 _90775 s x f t) (@lem3500181 _90768 _90775 s x f t)). Qed.
Lemma lem3500183 {_90768 _90775 : Type'} (s : _90768 -> Prop) (x : _90775) (f : _90768 -> _90775) (t : _90768 -> Prop) : (term1112 _90768 _90775 s x f t) = (term1185 _90768 _90775 s x f t).
Proof. exact (EQ_MP (@lem3500182 _90768 _90775 s x f t) (@lem3500163 _90768 _90775 s x f t)). Qed.
Lemma lem3500184 {_90768 _90775 : Type'} (s : _90768 -> Prop) (f : _90768 -> _90775) (t : _90768 -> Prop) : (term1132 _90768 _90775 s f t) = (term1186 _90768 _90775 s f t).
Proof. exact (fun_ext (fun x : _90775 => @lem3500183 _90768 _90775 s x f t)). Qed.
Lemma lem3500185 {_90775 : Type'} : (@all _90775) = (@all _90775).
Proof. exact (eq_refl (@all _90775)). Qed.
Lemma lem3500186 {_90768 _90775 : Type'} (s : _90768 -> Prop) (f : _90768 -> _90775) (t : _90768 -> Prop) : (term1143 _90768 _90775 s f t) = (term1187 _90768 _90775 s f t).
Proof. exact (MK_COMB (@lem3500185 _90775) (@lem3500184 _90768 _90775 s f t)). Qed.
Lemma lem3500188 {A B : Type'} (P : type1413 A B) : (term453 A B P) = (term454 A B P).
Proof. exact (EQ_MP (@lem18899 A B P) (@lem18898 A B P)). Qed.
Lemma lem3500189 {_90768 _90775 : Type'} (P : type1470 _90768 _90775) : (term1188 _90768 _90775 P) = (term1189 _90768 _90775 P).
Proof. exact (@lem3500188 _90775 _90768 P). Qed.
Lemma lem3500190 {_90768 _90775 : Type'} (s : _90768 -> Prop) (f : _90768 -> _90775) (t : _90768 -> Prop) : (term1190 _90768 _90775 s f t) = (term1191 _90768 _90775 s f t).
Proof. exact (@lem3500189 _90768 _90775 (term1192 _90768 _90775 s f t)). Qed.
Lemma lem3500191 {_90768 _90775 : Type'} (s : _90768 -> Prop) (x : _90775) (f : _90768 -> _90775) (t : _90768 -> Prop) : (term1193 _90768 _90775 s f t x) = (term1184 _90768 _90775 s x f t).
Proof. exact (eq_refl (term1193 _90768 _90775 s f t x)). Qed.
Lemma lem3500192 {_90768 : Type'} (x : _90768) : x = x.
Proof. exact (eq_refl x). Qed.
Lemma lem3500193 {_90768 _90775 : Type'} (s : _90768 -> Prop) (x : _90775) (f : _90768 -> _90775) (t : _90768 -> Prop) (x' : _90768) : (term1194 _90768 _90775 s f t x x') = (term1195 _90768 _90775 s x f t x').
Proof. exact (MK_COMB (@lem3500191 _90768 _90775 s x f t) (@lem3500192 _90768 x')). Qed.
Lemma lem3500194 {_90768 _90775 : Type'} (x : _90768) (s : _90768 -> Prop) (x' : _90775) (f : _90768 -> _90775) (t : _90768 -> Prop) : (term1195 _90768 _90775 s x' f t x) = (term1182 _90768 _90775 x s x' f t).
Proof. exact (eq_refl (term1195 _90768 _90775 s x' f t x)). Qed.
Lemma lem3500195 {_90768 _90775 : Type'} (x : _90768) (s : _90768 -> Prop) (x' : _90775) (f : _90768 -> _90775) (t : _90768 -> Prop) : (term1194 _90768 _90775 s f t x' x) = (term1182 _90768 _90775 x s x' f t).
Proof. exact (TRANS (@lem3500193 _90768 _90775 s x' f t x) (@lem3500194 _90768 _90775 x s x' f t)). Qed.
Lemma lem3500196 {_90768 _90775 : Type'} (s : _90768 -> Prop) (x : _90775) (f : _90768 -> _90775) (t : _90768 -> Prop) : (term1196 _90768 _90775 s f t x) = (term1184 _90768 _90775 s x f t).
Proof. exact (fun_ext (fun x' : _90768 => @lem3500195 _90768 _90775 x' s x f t)). Qed.
Lemma lem3500197 {_90768 : Type'} : (@ex _90768) = (@ex _90768).
Proof. exact (eq_refl (@ex _90768)). Qed.
Lemma lem3500198 {_90768 _90775 : Type'} (s : _90768 -> Prop) (x : _90775) (f : _90768 -> _90775) (t : _90768 -> Prop) : (term1197 _90768 _90775 s f t x) = (term1185 _90768 _90775 s x f t).
Proof. exact (MK_COMB (@lem3500197 _90768) (@lem3500196 _90768 _90775 s x f t)). Qed.
Lemma lem3500199 {_90768 _90775 : Type'} (s : _90768 -> Prop) (f : _90768 -> _90775) (t : _90768 -> Prop) : (term1198 _90768 _90775 s f t) = (term1186 _90768 _90775 s f t).
Proof. exact (fun_ext (fun x : _90775 => @lem3500198 _90768 _90775 s x f t)). Qed.
Lemma lem3500200 {_90775 : Type'} : (@all _90775) = (@all _90775).
Proof. exact (eq_refl (@all _90775)). Qed.
Lemma lem3500201 {_90768 _90775 : Type'} (s : _90768 -> Prop) (f : _90768 -> _90775) (t : _90768 -> Prop) : (term1190 _90768 _90775 s f t) = (term1187 _90768 _90775 s f t).
Proof. exact (MK_COMB (@lem3500200 _90775) (@lem3500199 _90768 _90775 s f t)). Qed.
Lemma lem3500202 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem3500203 {_90768 _90775 : Type'} (s : _90768 -> Prop) (f : _90768 -> _90775) (t : _90768 -> Prop) : (term1199 _90768 _90775 s f t) = (term1200 _90768 _90775 s f t).
Proof. exact (MK_COMB (@lem3500202) (@lem3500201 _90768 _90775 s f t)). Qed.
Lemma lem3500204 {_90768 _90775 : Type'} (s : _90768 -> Prop) (x : _90775) (f : _90768 -> _90775) (t : _90768 -> Prop) : (term1193 _90768 _90775 s f t x) = (term1184 _90768 _90775 s x f t).
Proof. exact (eq_refl (term1193 _90768 _90775 s f t x)). Qed.
Lemma lem3500205 {_90768 _90775 : Type'} (x : _90775 -> _90768) (x' : _90775) : (x x') = (x x').
Proof. exact (eq_refl (x x')). Qed.
Lemma lem3500206 {_90768 _90775 : Type'} (s : _90768 -> Prop) (f : _90768 -> _90775) (t : _90768 -> Prop) (x : _90775 -> _90768) (x' : _90775) : (term1201 _90768 _90775 s f t x x') = (term1202 _90768 _90775 s f t x x').
Proof. exact (MK_COMB (@lem3500204 _90768 _90775 s x' f t) (@lem3500205 _90768 _90775 x x')). Qed.
Lemma lem3500207 {_90768 _90775 : Type'} (x : _90775 -> _90768) (s : _90768 -> Prop) (x' : _90775) (f : _90768 -> _90775) (t : _90768 -> Prop) : (term1202 _90768 _90775 s f t x x') = (term1203 _90768 _90775 x s x' f t).
Proof. exact (eq_refl (term1202 _90768 _90775 s f t x x')). Qed.
Lemma lem3500208 {_90768 _90775 : Type'} (x : _90775 -> _90768) (s : _90768 -> Prop) (x' : _90775) (f : _90768 -> _90775) (t : _90768 -> Prop) : (term1201 _90768 _90775 s f t x x') = (term1203 _90768 _90775 x s x' f t).
Proof. exact (TRANS (@lem3500206 _90768 _90775 s f t x x') (@lem3500207 _90768 _90775 x s x' f t)). Qed.
Lemma lem3500209 {_90768 _90775 : Type'} (x : _90775 -> _90768) (s : _90768 -> Prop) (f : _90768 -> _90775) (t : _90768 -> Prop) : (term1204 _90768 _90775 s f t x) = (term1205 _90768 _90775 x s f t).
Proof. exact (fun_ext (fun x' : _90775 => @lem3500208 _90768 _90775 x s x' f t)). Qed.
Lemma lem3500210 {_90775 : Type'} : (@all _90775) = (@all _90775).
Proof. exact (eq_refl (@all _90775)). Qed.
Lemma lem3500211 {_90768 _90775 : Type'} (x : _90775 -> _90768) (s : _90768 -> Prop) (f : _90768 -> _90775) (t : _90768 -> Prop) : (term1206 _90768 _90775 s f t x) = (term1207 _90768 _90775 x s f t).
Proof. exact (MK_COMB (@lem3500210 _90775) (@lem3500209 _90768 _90775 x s f t)). Qed.
Lemma lem3500212 {_90768 _90775 : Type'} (s : _90768 -> Prop) (f : _90768 -> _90775) (t : _90768 -> Prop) : (term1208 _90768 _90775 s f t) = (term1209 _90768 _90775 s f t).
Proof. exact (fun_ext (fun x : _90775 -> _90768 => @lem3500211 _90768 _90775 x s f t)). Qed.
Lemma lem3500213 {_90768 _90775 : Type'} : (@ex (_90775 -> _90768)) = (@ex (_90775 -> _90768)).
Proof. exact (eq_refl (@ex (_90775 -> _90768))). Qed.
Lemma lem3500214 {_90768 _90775 : Type'} (s : _90768 -> Prop) (f : _90768 -> _90775) (t : _90768 -> Prop) : (term1191 _90768 _90775 s f t) = (term1210 _90768 _90775 s f t).
Proof. exact (MK_COMB (@lem3500213 _90768 _90775) (@lem3500212 _90768 _90775 s f t)). Qed.
Lemma lem3500215 {_90768 _90775 : Type'} (s : _90768 -> Prop) (f : _90768 -> _90775) (t : _90768 -> Prop) : ((term1190 _90768 _90775 s f t) = (term1191 _90768 _90775 s f t)) = ((term1187 _90768 _90775 s f t) = (term1210 _90768 _90775 s f t)).
Proof. exact (MK_COMB (@lem3500203 _90768 _90775 s f t) (@lem3500214 _90768 _90775 s f t)). Qed.
Lemma lem3500216 {_90768 _90775 : Type'} (s : _90768 -> Prop) (f : _90768 -> _90775) (t : _90768 -> Prop) : (term1187 _90768 _90775 s f t) = (term1210 _90768 _90775 s f t).
Proof. exact (EQ_MP (@lem3500215 _90768 _90775 s f t) (@lem3500190 _90768 _90775 s f t)). Qed.
Lemma lem3500217 {_90768 _90775 : Type'} (s : _90768 -> Prop) (f : _90768 -> _90775) (t : _90768 -> Prop) : (term1143 _90768 _90775 s f t) = (term1210 _90768 _90775 s f t).
Proof. exact (TRANS (@lem3500186 _90768 _90775 s f t) (@lem3500216 _90768 _90775 s f t)). Qed.
Lemma lem3500218 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem3500219 {_90768 _90775 : Type'} (s : _90768 -> Prop) (f : _90768 -> _90775) (t : _90768 -> Prop) : (term1145 _90768 _90775 s f t) = (term1211 _90768 _90775 s f t).
Proof. exact (MK_COMB (@lem3500218) (@lem3500217 _90768 _90775 s f t)). Qed.
Lemma lem3500221 {A : Type'} (P : A -> Prop) (Q : Prop) : (term398 A P Q) = (term399 A P Q).
Proof. exact (EQ_MP (@lem18923 A P Q) (@lem18922 A P Q)). Qed.
Lemma lem3500222 {_90768 : Type'} (P : _90768 -> Prop) (Q : Prop) : (term398 _90768 P Q) = (term399 _90768 P Q).
Proof. exact (@lem3500221 _90768 P Q). Qed.
Lemma lem3500223 {_90768 _90775 : Type'} (s : _90768 -> Prop) (x : _90775) (f : _90768 -> _90775) (t : _90768 -> Prop) : (term1212 _90768 _90775 s x f t) = (term1213 _90768 _90775 s x f t).
Proof. exact (@lem3500222 _90768 (term266 _90768 _90775 x f s) (term267 _90768 _90775 x f t)). Qed.
Lemma lem3500224 {_90768 _90775 : Type'} (x : _90775) (f : _90768 -> _90775) (s : _90768 -> Prop) (x' : _90768) : (term367 _90768 _90775 x f s x') = (term264 _90768 _90775 x f s x').
Proof. exact (eq_refl (term367 _90768 _90775 x f s x')). Qed.
Lemma lem3500225 {_90768 _90775 : Type'} (x : _90775) (f : _90768 -> _90775) (s : _90768 -> Prop) : (term481 _90768 _90775 x f s) = (term266 _90768 _90775 x f s).
Proof. exact (fun_ext (fun x' : _90768 => @lem3500224 _90768 _90775 x f s x')). Qed.
Lemma lem3500226 {_90768 : Type'} : (@ex _90768) = (@ex _90768).
Proof. exact (eq_refl (@ex _90768)). Qed.
Lemma lem3500227 {_90768 _90775 : Type'} (x : _90775) (f : _90768 -> _90775) (s : _90768 -> Prop) : (term482 _90768 _90775 x f s) = (term267 _90768 _90775 x f s).
Proof. exact (MK_COMB (@lem3500226 _90768) (@lem3500225 _90768 _90775 x f s)). Qed.
Lemma lem3500228 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem3500229 {_90768 _90775 : Type'} (x : _90775) (f : _90768 -> _90775) (s : _90768 -> Prop) : (term1214 _90768 _90775 x f s) = (term1045 _90768 _90775 x f s).
Proof. exact (MK_COMB (@lem3500228) (@lem3500227 _90768 _90775 x f s)). Qed.
Lemma lem3500230 {_90768 _90775 : Type'} (x : _90775) (f : _90768 -> _90775) (t : _90768 -> Prop) : (term267 _90768 _90775 x f t) = (term267 _90768 _90775 x f t).
Proof. exact (eq_refl (term267 _90768 _90775 x f t)). Qed.
Lemma lem3500231 {_90768 _90775 : Type'} (s : _90768 -> Prop) (x : _90775) (f : _90768 -> _90775) (t : _90768 -> Prop) : (term1212 _90768 _90775 s x f t) = (term1046 _90768 _90775 s x f t).
Proof. exact (MK_COMB (@lem3500229 _90768 _90775 x f s) (@lem3500230 _90768 _90775 x f t)). Qed.
Lemma lem3500232 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem3500233 {_90768 _90775 : Type'} (s : _90768 -> Prop) (x : _90775) (f : _90768 -> _90775) (t : _90768 -> Prop) : (term1215 _90768 _90775 s x f t) = (term1216 _90768 _90775 s x f t).
Proof. exact (MK_COMB (@lem3500232) (@lem3500231 _90768 _90775 s x f t)). Qed.
Lemma lem3500234 {_90768 _90775 : Type'} (x : _90775) (f : _90768 -> _90775) (s : _90768 -> Prop) (x' : _90768) : (term367 _90768 _90775 x f s x') = (term264 _90768 _90775 x f s x').
Proof. exact (eq_refl (term367 _90768 _90775 x f s x')). Qed.
Lemma lem3500235 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem3500236 {_90768 _90775 : Type'} (x : _90775) (f : _90768 -> _90775) (s : _90768 -> Prop) (x' : _90768) : (term1217 _90768 _90775 x f s x') = (term1218 _90768 _90775 x f s x').
Proof. exact (MK_COMB (@lem3500235) (@lem3500234 _90768 _90775 x f s x')). Qed.
Lemma lem3500237 {_90768 _90775 : Type'} (x : _90775) (f : _90768 -> _90775) (t : _90768 -> Prop) : (term267 _90768 _90775 x f t) = (term267 _90768 _90775 x f t).
Proof. exact (eq_refl (term267 _90768 _90775 x f t)). Qed.
Lemma lem3500238 {_90768 _90775 : Type'} (s : _90768 -> Prop) (x : _90768) (x' : _90775) (f : _90768 -> _90775) (t : _90768 -> Prop) : (term1219 _90768 _90775 s x x' f t) = (term1220 _90768 _90775 s x x' f t).
Proof. exact (MK_COMB (@lem3500236 _90768 _90775 x' f s x) (@lem3500237 _90768 _90775 x' f t)). Qed.
Lemma lem3500239 {_90768 _90775 : Type'} (s : _90768 -> Prop) (x : _90775) (f : _90768 -> _90775) (t : _90768 -> Prop) : (term1221 _90768 _90775 s x f t) = (term1222 _90768 _90775 s x f t).
Proof. exact (fun_ext (fun x' : _90768 => @lem3500238 _90768 _90775 s x' x f t)). Qed.
Lemma lem3500240 {_90768 : Type'} : (@ex _90768) = (@ex _90768).
Proof. exact (eq_refl (@ex _90768)). Qed.
Lemma lem3500241 {_90768 _90775 : Type'} (s : _90768 -> Prop) (x : _90775) (f : _90768 -> _90775) (t : _90768 -> Prop) : (term1213 _90768 _90775 s x f t) = (term1223 _90768 _90775 s x f t).
Proof. exact (MK_COMB (@lem3500240 _90768) (@lem3500239 _90768 _90775 s x f t)). Qed.
Lemma lem3500242 {_90768 _90775 : Type'} (s : _90768 -> Prop) (x : _90775) (f : _90768 -> _90775) (t : _90768 -> Prop) : ((term1212 _90768 _90775 s x f t) = (term1213 _90768 _90775 s x f t)) = ((term1046 _90768 _90775 s x f t) = (term1223 _90768 _90775 s x f t)).
Proof. exact (MK_COMB (@lem3500233 _90768 _90775 s x f t) (@lem3500241 _90768 _90775 s x f t)). Qed.
Lemma lem3500243 {_90768 _90775 : Type'} (s : _90768 -> Prop) (x : _90775) (f : _90768 -> _90775) (t : _90768 -> Prop) : (term1046 _90768 _90775 s x f t) = (term1223 _90768 _90775 s x f t).
Proof. exact (EQ_MP (@lem3500242 _90768 _90775 s x f t) (@lem3500223 _90768 _90775 s x f t)). Qed.
Lemma lem3500245 {A : Type'} (P : Prop) (Q : A -> Prop) : (term415 A P Q) = (term416 A P Q).
Proof. exact (EQ_MP (@lem18929 A P Q) (@lem18928 A P Q)). Qed.
Lemma lem3500246 {_90768 : Type'} (P : Prop) (Q : _90768 -> Prop) : (term415 _90768 P Q) = (term416 _90768 P Q).
Proof. exact (@lem3500245 _90768 P Q). Qed.
Lemma lem3500247 {_90768 _90775 : Type'} (s : _90768 -> Prop) (x : _90768) (x' : _90775) (f : _90768 -> _90775) (t : _90768 -> Prop) : (term1224 _90768 _90775 s x x' f t) = (term1225 _90768 _90775 s x x' f t).
Proof. exact (@lem3500246 _90768 (term264 _90768 _90775 x' f s x) (term266 _90768 _90775 x' f t)). Qed.
Lemma lem3500248 {_90768 _90775 : Type'} (x : _90775) (f : _90768 -> _90775) (t : _90768 -> Prop) (x' : _90768) : (term367 _90768 _90775 x f t x') = (term264 _90768 _90775 x f t x').
Proof. exact (eq_refl (term367 _90768 _90775 x f t x')). Qed.
Lemma lem3500249 {_90768 _90775 : Type'} (x : _90775) (f : _90768 -> _90775) (t : _90768 -> Prop) : (term481 _90768 _90775 x f t) = (term266 _90768 _90775 x f t).
Proof. exact (fun_ext (fun x' : _90768 => @lem3500248 _90768 _90775 x f t x')). Qed.
Lemma lem3500250 {_90768 : Type'} : (@ex _90768) = (@ex _90768).
Proof. exact (eq_refl (@ex _90768)). Qed.
Lemma lem3500251 {_90768 _90775 : Type'} (x : _90775) (f : _90768 -> _90775) (t : _90768 -> Prop) : (term482 _90768 _90775 x f t) = (term267 _90768 _90775 x f t).
Proof. exact (MK_COMB (@lem3500250 _90768) (@lem3500249 _90768 _90775 x f t)). Qed.
Lemma lem3500252 {_90768 _90775 : Type'} (x : _90775) (f : _90768 -> _90775) (s : _90768 -> Prop) (x' : _90768) : (term1218 _90768 _90775 x f s x') = (term1218 _90768 _90775 x f s x').
Proof. exact (eq_refl (term1218 _90768 _90775 x f s x')). Qed.
Lemma lem3500253 {_90768 _90775 : Type'} (s : _90768 -> Prop) (x : _90768) (x' : _90775) (f : _90768 -> _90775) (t : _90768 -> Prop) : (term1224 _90768 _90775 s x x' f t) = (term1220 _90768 _90775 s x x' f t).
Proof. exact (MK_COMB (@lem3500252 _90768 _90775 x' f s x) (@lem3500251 _90768 _90775 x' f t)). Qed.
Lemma lem3500254 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem3500255 {_90768 _90775 : Type'} (s : _90768 -> Prop) (x : _90768) (x' : _90775) (f : _90768 -> _90775) (t : _90768 -> Prop) : (term1226 _90768 _90775 s x x' f t) = (term1227 _90768 _90775 s x x' f t).
Proof. exact (MK_COMB (@lem3500254) (@lem3500253 _90768 _90775 s x x' f t)). Qed.
Lemma lem3500256 {_90768 _90775 : Type'} (x : _90775) (f : _90768 -> _90775) (t : _90768 -> Prop) (x' : _90768) : (term367 _90768 _90775 x f t x') = (term264 _90768 _90775 x f t x').
Proof. exact (eq_refl (term367 _90768 _90775 x f t x')). Qed.
Lemma lem3500257 {_90768 _90775 : Type'} (x : _90775) (f : _90768 -> _90775) (s : _90768 -> Prop) (x' : _90768) : (term1218 _90768 _90775 x f s x') = (term1218 _90768 _90775 x f s x').
Proof. exact (eq_refl (term1218 _90768 _90775 x f s x')). Qed.
Lemma lem3500258 {_90768 _90775 : Type'} (s : _90768 -> Prop) (x : _90768) (x' : _90775) (f : _90768 -> _90775) (t : _90768 -> Prop) (x'' : _90768) : (term1228 _90768 _90775 s x x' f t x'') = (term1229 _90768 _90775 s x x' f t x'').
Proof. exact (MK_COMB (@lem3500257 _90768 _90775 x' f s x) (@lem3500256 _90768 _90775 x' f t x'')). Qed.
Lemma lem3500259 {_90768 _90775 : Type'} (s : _90768 -> Prop) (x : _90768) (x' : _90775) (f : _90768 -> _90775) (t : _90768 -> Prop) : (term1230 _90768 _90775 s x x' f t) = (term1231 _90768 _90775 s x x' f t).
Proof. exact (fun_ext (fun x'' : _90768 => @lem3500258 _90768 _90775 s x x' f t x'')). Qed.
Lemma lem3500260 {_90768 : Type'} : (@ex _90768) = (@ex _90768).
Proof. exact (eq_refl (@ex _90768)). Qed.
Lemma lem3500261 {_90768 _90775 : Type'} (s : _90768 -> Prop) (x : _90768) (x' : _90775) (f : _90768 -> _90775) (t : _90768 -> Prop) : (term1225 _90768 _90775 s x x' f t) = (term1232 _90768 _90775 s x x' f t).
Proof. exact (MK_COMB (@lem3500260 _90768) (@lem3500259 _90768 _90775 s x x' f t)). Qed.
Lemma lem3500262 {_90768 _90775 : Type'} (s : _90768 -> Prop) (x : _90768) (x' : _90775) (f : _90768 -> _90775) (t : _90768 -> Prop) : ((term1224 _90768 _90775 s x x' f t) = (term1225 _90768 _90775 s x x' f t)) = ((term1220 _90768 _90775 s x x' f t) = (term1232 _90768 _90775 s x x' f t)).
Proof. exact (MK_COMB (@lem3500255 _90768 _90775 s x x' f t) (@lem3500261 _90768 _90775 s x x' f t)). Qed.
Lemma lem3500263 {_90768 _90775 : Type'} (s : _90768 -> Prop) (x : _90768) (x' : _90775) (f : _90768 -> _90775) (t : _90768 -> Prop) : (term1220 _90768 _90775 s x x' f t) = (term1232 _90768 _90775 s x x' f t).
Proof. exact (EQ_MP (@lem3500262 _90768 _90775 s x x' f t) (@lem3500247 _90768 _90775 s x x' f t)). Qed.
Lemma lem3500264 {_90768 _90775 : Type'} (s : _90768 -> Prop) (x : _90775) (f : _90768 -> _90775) (t : _90768 -> Prop) : (term1222 _90768 _90775 s x f t) = (term1233 _90768 _90775 s x f t).
Proof. exact (fun_ext (fun x' : _90768 => @lem3500263 _90768 _90775 s x' x f t)). Qed.
Lemma lem3500265 {_90768 : Type'} : (@ex _90768) = (@ex _90768).
Proof. exact (eq_refl (@ex _90768)). Qed.
Lemma lem3500266 {_90768 _90775 : Type'} (s : _90768 -> Prop) (x : _90775) (f : _90768 -> _90775) (t : _90768 -> Prop) : (term1223 _90768 _90775 s x f t) = (term1234 _90768 _90775 s x f t).
Proof. exact (MK_COMB (@lem3500265 _90768) (@lem3500264 _90768 _90775 s x f t)). Qed.
Lemma lem3500267 {_90768 _90775 : Type'} (s : _90768 -> Prop) (x : _90775) (f : _90768 -> _90775) (t : _90768 -> Prop) : (term1046 _90768 _90775 s x f t) = (term1234 _90768 _90775 s x f t).
Proof. exact (TRANS (@lem3500243 _90768 _90775 s x f t) (@lem3500266 _90768 _90775 s x f t)). Qed.
Lemma lem3500268 {_90768 _90775 : Type'} (x : _90775) (f : _90768 -> _90775) (s : _90768 -> Prop) (t : _90768 -> Prop) : (term1107 _90768 _90775 x f s t) = (term1107 _90768 _90775 x f s t).
Proof. exact (eq_refl (term1107 _90768 _90775 x f s t)). Qed.
Lemma lem3500269 {_90768 _90775 : Type'} (s : _90768 -> Prop) (x : _90775) (f : _90768 -> _90775) (t : _90768 -> Prop) : (term1109 _90768 _90775 s x f t) = (term1235 _90768 _90775 s x f t).
Proof. exact (MK_COMB (@lem3500268 _90768 _90775 x f s t) (@lem3500267 _90768 _90775 s x f t)). Qed.
Lemma lem3500271 {A : Type'} (P : Prop) (Q : A -> Prop) : (term434 A P Q) = (term435 A P Q).
Proof. exact (EQ_MP (@lem18911 A P Q) (@lem18910 A P Q)). Qed.
Lemma lem3500272 {_90768 : Type'} (P : Prop) (Q : _90768 -> Prop) : (term434 _90768 P Q) = (term435 _90768 P Q).
Proof. exact (@lem3500271 _90768 P Q). Qed.
Lemma lem3500273 {_90768 _90775 : Type'} (s : _90768 -> Prop) (x : _90775) (f : _90768 -> _90775) (t : _90768 -> Prop) : (term1236 _90768 _90775 s x f t) = (term1237 _90768 _90775 s x f t).
Proof. exact (@lem3500272 _90768 (term1100 _90768 _90775 x f s t) (term1233 _90768 _90775 s x f t)). Qed.
Lemma lem3500274 {_90768 _90775 : Type'} (s : _90768 -> Prop) (x : _90768) (x' : _90775) (f : _90768 -> _90775) (t : _90768 -> Prop) : (term1238 _90768 _90775 s x' f t x) = (term1232 _90768 _90775 s x x' f t).
Proof. exact (eq_refl (term1238 _90768 _90775 s x' f t x)). Qed.
Lemma lem3500275 {_90768 _90775 : Type'} (s : _90768 -> Prop) (x : _90775) (f : _90768 -> _90775) (t : _90768 -> Prop) : (term1239 _90768 _90775 s x f t) = (term1233 _90768 _90775 s x f t).
Proof. exact (fun_ext (fun x' : _90768 => @lem3500274 _90768 _90775 s x' x f t)). Qed.
Lemma lem3500276 {_90768 : Type'} : (@ex _90768) = (@ex _90768).
Proof. exact (eq_refl (@ex _90768)). Qed.
Lemma lem3500277 {_90768 _90775 : Type'} (s : _90768 -> Prop) (x : _90775) (f : _90768 -> _90775) (t : _90768 -> Prop) : (term1240 _90768 _90775 s x f t) = (term1234 _90768 _90775 s x f t).
Proof. exact (MK_COMB (@lem3500276 _90768) (@lem3500275 _90768 _90775 s x f t)). Qed.
Lemma lem3500278 {_90768 _90775 : Type'} (x : _90775) (f : _90768 -> _90775) (s : _90768 -> Prop) (t : _90768 -> Prop) : (term1107 _90768 _90775 x f s t) = (term1107 _90768 _90775 x f s t).
Proof. exact (eq_refl (term1107 _90768 _90775 x f s t)). Qed.
Lemma lem3500279 {_90768 _90775 : Type'} (s : _90768 -> Prop) (x : _90775) (f : _90768 -> _90775) (t : _90768 -> Prop) : (term1236 _90768 _90775 s x f t) = (term1235 _90768 _90775 s x f t).
Proof. exact (MK_COMB (@lem3500278 _90768 _90775 x f s t) (@lem3500277 _90768 _90775 s x f t)). Qed.
Lemma lem3500280 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem3500281 {_90768 _90775 : Type'} (s : _90768 -> Prop) (x : _90775) (f : _90768 -> _90775) (t : _90768 -> Prop) : (term1241 _90768 _90775 s x f t) = (term1242 _90768 _90775 s x f t).
Proof. exact (MK_COMB (@lem3500280) (@lem3500279 _90768 _90775 s x f t)). Qed.
Lemma lem3500282 {_90768 _90775 : Type'} (s : _90768 -> Prop) (x : _90768) (x' : _90775) (f : _90768 -> _90775) (t : _90768 -> Prop) : (term1238 _90768 _90775 s x' f t x) = (term1232 _90768 _90775 s x x' f t).
Proof. exact (eq_refl (term1238 _90768 _90775 s x' f t x)). Qed.
Lemma lem3500283 {_90768 _90775 : Type'} (x : _90775) (f : _90768 -> _90775) (s : _90768 -> Prop) (t : _90768 -> Prop) : (term1107 _90768 _90775 x f s t) = (term1107 _90768 _90775 x f s t).
Proof. exact (eq_refl (term1107 _90768 _90775 x f s t)). Qed.
Lemma lem3500284 {_90768 _90775 : Type'} (s : _90768 -> Prop) (x : _90768) (x' : _90775) (f : _90768 -> _90775) (t : _90768 -> Prop) : (term1243 _90768 _90775 s x' f t x) = (term1244 _90768 _90775 s x x' f t).
Proof. exact (MK_COMB (@lem3500283 _90768 _90775 x' f s t) (@lem3500282 _90768 _90775 s x x' f t)). Qed.
Lemma lem3500285 {_90768 _90775 : Type'} (s : _90768 -> Prop) (x : _90775) (f : _90768 -> _90775) (t : _90768 -> Prop) : (term1245 _90768 _90775 s x f t) = (term1246 _90768 _90775 s x f t).
Proof. exact (fun_ext (fun x' : _90768 => @lem3500284 _90768 _90775 s x' x f t)). Qed.
Lemma lem3500286 {_90768 : Type'} : (@ex _90768) = (@ex _90768).
Proof. exact (eq_refl (@ex _90768)). Qed.
Lemma lem3500287 {_90768 _90775 : Type'} (s : _90768 -> Prop) (x : _90775) (f : _90768 -> _90775) (t : _90768 -> Prop) : (term1237 _90768 _90775 s x f t) = (term1247 _90768 _90775 s x f t).
Proof. exact (MK_COMB (@lem3500286 _90768) (@lem3500285 _90768 _90775 s x f t)). Qed.
Lemma lem3500288 {_90768 _90775 : Type'} (s : _90768 -> Prop) (x : _90775) (f : _90768 -> _90775) (t : _90768 -> Prop) : ((term1236 _90768 _90775 s x f t) = (term1237 _90768 _90775 s x f t)) = ((term1235 _90768 _90775 s x f t) = (term1247 _90768 _90775 s x f t)).
Proof. exact (MK_COMB (@lem3500281 _90768 _90775 s x f t) (@lem3500287 _90768 _90775 s x f t)). Qed.
Lemma lem3500289 {_90768 _90775 : Type'} (s : _90768 -> Prop) (x : _90775) (f : _90768 -> _90775) (t : _90768 -> Prop) : (term1235 _90768 _90775 s x f t) = (term1247 _90768 _90775 s x f t).
Proof. exact (EQ_MP (@lem3500288 _90768 _90775 s x f t) (@lem3500273 _90768 _90775 s x f t)). Qed.
Lemma lem3500291 {A : Type'} (P : Prop) (Q : A -> Prop) : (term434 A P Q) = (term435 A P Q).
Proof. exact (EQ_MP (@lem18911 A P Q) (@lem18910 A P Q)). Qed.
Lemma lem3500292 {_90768 : Type'} (P : Prop) (Q : _90768 -> Prop) : (term434 _90768 P Q) = (term435 _90768 P Q).
Proof. exact (@lem3500291 _90768 P Q). Qed.
Lemma lem3500293 {_90768 _90775 : Type'} (s : _90768 -> Prop) (x : _90768) (x' : _90775) (f : _90768 -> _90775) (t : _90768 -> Prop) : (term1248 _90768 _90775 s x x' f t) = (term1249 _90768 _90775 s x x' f t).
Proof. exact (@lem3500292 _90768 (term1100 _90768 _90775 x' f s t) (term1231 _90768 _90775 s x x' f t)). Qed.
Lemma lem3500294 {_90768 _90775 : Type'} (s : _90768 -> Prop) (x : _90768) (x' : _90775) (f : _90768 -> _90775) (t : _90768 -> Prop) (x'' : _90768) : (term1250 _90768 _90775 s x x' f t x'') = (term1229 _90768 _90775 s x x' f t x'').
Proof. exact (eq_refl (term1250 _90768 _90775 s x x' f t x'')). Qed.
Lemma lem3500295 {_90768 _90775 : Type'} (s : _90768 -> Prop) (x : _90768) (x' : _90775) (f : _90768 -> _90775) (t : _90768 -> Prop) : (term1251 _90768 _90775 s x x' f t) = (term1231 _90768 _90775 s x x' f t).
Proof. exact (fun_ext (fun x'' : _90768 => @lem3500294 _90768 _90775 s x x' f t x'')). Qed.
Lemma lem3500296 {_90768 : Type'} : (@ex _90768) = (@ex _90768).
Proof. exact (eq_refl (@ex _90768)). Qed.
Lemma lem3500297 {_90768 _90775 : Type'} (s : _90768 -> Prop) (x : _90768) (x' : _90775) (f : _90768 -> _90775) (t : _90768 -> Prop) : (term1252 _90768 _90775 s x x' f t) = (term1232 _90768 _90775 s x x' f t).
Proof. exact (MK_COMB (@lem3500296 _90768) (@lem3500295 _90768 _90775 s x x' f t)). Qed.
Lemma lem3500298 {_90768 _90775 : Type'} (x : _90775) (f : _90768 -> _90775) (s : _90768 -> Prop) (t : _90768 -> Prop) : (term1107 _90768 _90775 x f s t) = (term1107 _90768 _90775 x f s t).
Proof. exact (eq_refl (term1107 _90768 _90775 x f s t)). Qed.
Lemma lem3500299 {_90768 _90775 : Type'} (s : _90768 -> Prop) (x : _90768) (x' : _90775) (f : _90768 -> _90775) (t : _90768 -> Prop) : (term1248 _90768 _90775 s x x' f t) = (term1244 _90768 _90775 s x x' f t).
Proof. exact (MK_COMB (@lem3500298 _90768 _90775 x' f s t) (@lem3500297 _90768 _90775 s x x' f t)). Qed.
Lemma lem3500300 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem3500301 {_90768 _90775 : Type'} (s : _90768 -> Prop) (x : _90768) (x' : _90775) (f : _90768 -> _90775) (t : _90768 -> Prop) : (term1253 _90768 _90775 s x x' f t) = (term1254 _90768 _90775 s x x' f t).
Proof. exact (MK_COMB (@lem3500300) (@lem3500299 _90768 _90775 s x x' f t)). Qed.
Lemma lem3500302 {_90768 _90775 : Type'} (s : _90768 -> Prop) (x : _90768) (x' : _90775) (f : _90768 -> _90775) (t : _90768 -> Prop) (x'' : _90768) : (term1250 _90768 _90775 s x x' f t x'') = (term1229 _90768 _90775 s x x' f t x'').
Proof. exact (eq_refl (term1250 _90768 _90775 s x x' f t x'')). Qed.
Lemma lem3500303 {_90768 _90775 : Type'} (x : _90775) (f : _90768 -> _90775) (s : _90768 -> Prop) (t : _90768 -> Prop) : (term1107 _90768 _90775 x f s t) = (term1107 _90768 _90775 x f s t).
Proof. exact (eq_refl (term1107 _90768 _90775 x f s t)). Qed.
Lemma lem3500304 {_90768 _90775 : Type'} (s : _90768 -> Prop) (x : _90768) (x' : _90775) (f : _90768 -> _90775) (t : _90768 -> Prop) (x'' : _90768) : (term1255 _90768 _90775 s x x' f t x'') = (term1256 _90768 _90775 s x x' f t x'').
Proof. exact (MK_COMB (@lem3500303 _90768 _90775 x' f s t) (@lem3500302 _90768 _90775 s x x' f t x'')). Qed.
Lemma lem3500305 {_90768 _90775 : Type'} (s : _90768 -> Prop) (x : _90768) (x' : _90775) (f : _90768 -> _90775) (t : _90768 -> Prop) : (term1257 _90768 _90775 s x x' f t) = (term1258 _90768 _90775 s x x' f t).
Proof. exact (fun_ext (fun x'' : _90768 => @lem3500304 _90768 _90775 s x x' f t x'')). Qed.
Lemma lem3500306 {_90768 : Type'} : (@ex _90768) = (@ex _90768).
Proof. exact (eq_refl (@ex _90768)). Qed.
Lemma lem3500307 {_90768 _90775 : Type'} (s : _90768 -> Prop) (x : _90768) (x' : _90775) (f : _90768 -> _90775) (t : _90768 -> Prop) : (term1249 _90768 _90775 s x x' f t) = (term1259 _90768 _90775 s x x' f t).
Proof. exact (MK_COMB (@lem3500306 _90768) (@lem3500305 _90768 _90775 s x x' f t)). Qed.
Lemma lem3500308 {_90768 _90775 : Type'} (s : _90768 -> Prop) (x : _90768) (x' : _90775) (f : _90768 -> _90775) (t : _90768 -> Prop) : ((term1248 _90768 _90775 s x x' f t) = (term1249 _90768 _90775 s x x' f t)) = ((term1244 _90768 _90775 s x x' f t) = (term1259 _90768 _90775 s x x' f t)).
Proof. exact (MK_COMB (@lem3500301 _90768 _90775 s x x' f t) (@lem3500307 _90768 _90775 s x x' f t)). Qed.
Lemma lem3500309 {_90768 _90775 : Type'} (s : _90768 -> Prop) (x : _90768) (x' : _90775) (f : _90768 -> _90775) (t : _90768 -> Prop) : (term1244 _90768 _90775 s x x' f t) = (term1259 _90768 _90775 s x x' f t).
Proof. exact (EQ_MP (@lem3500308 _90768 _90775 s x x' f t) (@lem3500293 _90768 _90775 s x x' f t)). Qed.
Lemma lem3500310 {_90768 _90775 : Type'} (s : _90768 -> Prop) (x : _90775) (f : _90768 -> _90775) (t : _90768 -> Prop) : (term1246 _90768 _90775 s x f t) = (term1260 _90768 _90775 s x f t).
Proof. exact (fun_ext (fun x' : _90768 => @lem3500309 _90768 _90775 s x' x f t)). Qed.
Lemma lem3500311 {_90768 : Type'} : (@ex _90768) = (@ex _90768).
Proof. exact (eq_refl (@ex _90768)). Qed.
Lemma lem3500312 {_90768 _90775 : Type'} (s : _90768 -> Prop) (x : _90775) (f : _90768 -> _90775) (t : _90768 -> Prop) : (term1247 _90768 _90775 s x f t) = (term1261 _90768 _90775 s x f t).
Proof. exact (MK_COMB (@lem3500311 _90768) (@lem3500310 _90768 _90775 s x f t)). Qed.
Lemma lem3500313 {_90768 _90775 : Type'} (s : _90768 -> Prop) (x : _90775) (f : _90768 -> _90775) (t : _90768 -> Prop) : (term1235 _90768 _90775 s x f t) = (term1261 _90768 _90775 s x f t).
Proof. exact (TRANS (@lem3500289 _90768 _90775 s x f t) (@lem3500312 _90768 _90775 s x f t)). Qed.
Lemma lem3500314 {_90768 _90775 : Type'} (s : _90768 -> Prop) (x : _90775) (f : _90768 -> _90775) (t : _90768 -> Prop) : (term1109 _90768 _90775 s x f t) = (term1261 _90768 _90775 s x f t).
Proof. exact (TRANS (@lem3500269 _90768 _90775 s x f t) (@lem3500313 _90768 _90775 s x f t)). Qed.
Lemma lem3500315 {_90768 _90775 : Type'} (s : _90768 -> Prop) (f : _90768 -> _90775) (t : _90768 -> Prop) : (term1133 _90768 _90775 s f t) = (term1262 _90768 _90775 s f t).
Proof. exact (fun_ext (fun x : _90775 => @lem3500314 _90768 _90775 s x f t)). Qed.
Lemma lem3500316 {_90775 : Type'} : (@all _90775) = (@all _90775).
Proof. exact (eq_refl (@all _90775)). Qed.
Lemma lem3500317 {_90768 _90775 : Type'} (s : _90768 -> Prop) (f : _90768 -> _90775) (t : _90768 -> Prop) : (term1148 _90768 _90775 s f t) = (term1263 _90768 _90775 s f t).
Proof. exact (MK_COMB (@lem3500316 _90775) (@lem3500315 _90768 _90775 s f t)). Qed.
Lemma lem3500319 {A B : Type'} (P : type1413 A B) : (term453 A B P) = (term454 A B P).
Proof. exact (EQ_MP (@lem18899 A B P) (@lem18898 A B P)). Qed.
Lemma lem3500320 {_90768 _90775 : Type'} (P : type1470 _90768 _90775) : (term1188 _90768 _90775 P) = (term1189 _90768 _90775 P).
Proof. exact (@lem3500319 _90775 _90768 P). Qed.
Lemma lem3500321 {_90768 _90775 : Type'} (s : _90768 -> Prop) (f : _90768 -> _90775) (t : _90768 -> Prop) : (term1264 _90768 _90775 s f t) = (term1265 _90768 _90775 s f t).
Proof. exact (@lem3500320 _90768 _90775 (term1266 _90768 _90775 s f t)). Qed.
Lemma lem3500322 {_90768 _90775 : Type'} (s : _90768 -> Prop) (x : _90775) (f : _90768 -> _90775) (t : _90768 -> Prop) : (term1267 _90768 _90775 s f t x) = (term1260 _90768 _90775 s x f t).
Proof. exact (eq_refl (term1267 _90768 _90775 s f t x)). Qed.
Lemma lem3500323 {_90768 : Type'} (x : _90768) : x = x.
Proof. exact (eq_refl x). Qed.
Lemma lem3500324 {_90768 _90775 : Type'} (s : _90768 -> Prop) (x : _90775) (f : _90768 -> _90775) (t : _90768 -> Prop) (x' : _90768) : (term1268 _90768 _90775 s f t x x') = (term1269 _90768 _90775 s x f t x').
Proof. exact (MK_COMB (@lem3500322 _90768 _90775 s x f t) (@lem3500323 _90768 x')). Qed.
Lemma lem3500325 {_90768 _90775 : Type'} (s : _90768 -> Prop) (x : _90768) (x' : _90775) (f : _90768 -> _90775) (t : _90768 -> Prop) : (term1269 _90768 _90775 s x' f t x) = (term1259 _90768 _90775 s x x' f t).
Proof. exact (eq_refl (term1269 _90768 _90775 s x' f t x)). Qed.
Lemma lem3500326 {_90768 _90775 : Type'} (s : _90768 -> Prop) (x : _90768) (x' : _90775) (f : _90768 -> _90775) (t : _90768 -> Prop) : (term1268 _90768 _90775 s f t x' x) = (term1259 _90768 _90775 s x x' f t).
Proof. exact (TRANS (@lem3500324 _90768 _90775 s x' f t x) (@lem3500325 _90768 _90775 s x x' f t)). Qed.
Lemma lem3500327 {_90768 _90775 : Type'} (s : _90768 -> Prop) (x : _90775) (f : _90768 -> _90775) (t : _90768 -> Prop) : (term1270 _90768 _90775 s f t x) = (term1260 _90768 _90775 s x f t).
Proof. exact (fun_ext (fun x' : _90768 => @lem3500326 _90768 _90775 s x' x f t)). Qed.
Lemma lem3500328 {_90768 : Type'} : (@ex _90768) = (@ex _90768).
Proof. exact (eq_refl (@ex _90768)). Qed.
Lemma lem3500329 {_90768 _90775 : Type'} (s : _90768 -> Prop) (x : _90775) (f : _90768 -> _90775) (t : _90768 -> Prop) : (term1271 _90768 _90775 s f t x) = (term1261 _90768 _90775 s x f t).
Proof. exact (MK_COMB (@lem3500328 _90768) (@lem3500327 _90768 _90775 s x f t)). Qed.
Lemma lem3500330 {_90768 _90775 : Type'} (s : _90768 -> Prop) (f : _90768 -> _90775) (t : _90768 -> Prop) : (term1272 _90768 _90775 s f t) = (term1262 _90768 _90775 s f t).
Proof. exact (fun_ext (fun x : _90775 => @lem3500329 _90768 _90775 s x f t)). Qed.
Lemma lem3500331 {_90775 : Type'} : (@all _90775) = (@all _90775).
Proof. exact (eq_refl (@all _90775)). Qed.
Lemma lem3500332 {_90768 _90775 : Type'} (s : _90768 -> Prop) (f : _90768 -> _90775) (t : _90768 -> Prop) : (term1264 _90768 _90775 s f t) = (term1263 _90768 _90775 s f t).
Proof. exact (MK_COMB (@lem3500331 _90775) (@lem3500330 _90768 _90775 s f t)). Qed.
Lemma lem3500333 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem3500334 {_90768 _90775 : Type'} (s : _90768 -> Prop) (f : _90768 -> _90775) (t : _90768 -> Prop) : (term1273 _90768 _90775 s f t) = (term1274 _90768 _90775 s f t).
Proof. exact (MK_COMB (@lem3500333) (@lem3500332 _90768 _90775 s f t)). Qed.
Lemma lem3500335 {_90768 _90775 : Type'} (s : _90768 -> Prop) (x : _90775) (f : _90768 -> _90775) (t : _90768 -> Prop) : (term1267 _90768 _90775 s f t x) = (term1260 _90768 _90775 s x f t).
Proof. exact (eq_refl (term1267 _90768 _90775 s f t x)). Qed.
Lemma lem3500336 {_90768 _90775 : Type'} (x : _90775 -> _90768) (x' : _90775) : (x x') = (x x').
Proof. exact (eq_refl (x x')). Qed.
Lemma lem3500337 {_90768 _90775 : Type'} (s : _90768 -> Prop) (f : _90768 -> _90775) (t : _90768 -> Prop) (x : _90775 -> _90768) (x' : _90775) : (term1275 _90768 _90775 s f t x x') = (term1276 _90768 _90775 s f t x x').
Proof. exact (MK_COMB (@lem3500335 _90768 _90775 s x' f t) (@lem3500336 _90768 _90775 x x')). Qed.
Lemma lem3500338 {_90768 _90775 : Type'} (s : _90768 -> Prop) (x : _90775 -> _90768) (x' : _90775) (f : _90768 -> _90775) (t : _90768 -> Prop) : (term1276 _90768 _90775 s f t x x') = (term1277 _90768 _90775 s x x' f t).
Proof. exact (eq_refl (term1276 _90768 _90775 s f t x x')). Qed.
Lemma lem3500339 {_90768 _90775 : Type'} (s : _90768 -> Prop) (x : _90775 -> _90768) (x' : _90775) (f : _90768 -> _90775) (t : _90768 -> Prop) : (term1275 _90768 _90775 s f t x x') = (term1277 _90768 _90775 s x x' f t).
Proof. exact (TRANS (@lem3500337 _90768 _90775 s f t x x') (@lem3500338 _90768 _90775 s x x' f t)). Qed.
Lemma lem3500340 {_90768 _90775 : Type'} (s : _90768 -> Prop) (x : _90775 -> _90768) (f : _90768 -> _90775) (t : _90768 -> Prop) : (term1278 _90768 _90775 s f t x) = (term1279 _90768 _90775 s x f t).
Proof. exact (fun_ext (fun x' : _90775 => @lem3500339 _90768 _90775 s x x' f t)). Qed.
Lemma lem3500341 {_90775 : Type'} : (@all _90775) = (@all _90775).
Proof. exact (eq_refl (@all _90775)). Qed.
Lemma lem3500342 {_90768 _90775 : Type'} (s : _90768 -> Prop) (x : _90775 -> _90768) (f : _90768 -> _90775) (t : _90768 -> Prop) : (term1280 _90768 _90775 s f t x) = (term1281 _90768 _90775 s x f t).
Proof. exact (MK_COMB (@lem3500341 _90775) (@lem3500340 _90768 _90775 s x f t)). Qed.
Lemma lem3500343 {_90768 _90775 : Type'} (s : _90768 -> Prop) (f : _90768 -> _90775) (t : _90768 -> Prop) : (term1282 _90768 _90775 s f t) = (term1283 _90768 _90775 s f t).
Proof. exact (fun_ext (fun x : _90775 -> _90768 => @lem3500342 _90768 _90775 s x f t)). Qed.
Lemma lem3500344 {_90768 _90775 : Type'} : (@ex (_90775 -> _90768)) = (@ex (_90775 -> _90768)).
Proof. exact (eq_refl (@ex (_90775 -> _90768))). Qed.
Lemma lem3500345 {_90768 _90775 : Type'} (s : _90768 -> Prop) (f : _90768 -> _90775) (t : _90768 -> Prop) : (term1265 _90768 _90775 s f t) = (term1284 _90768 _90775 s f t).
Proof. exact (MK_COMB (@lem3500344 _90768 _90775) (@lem3500343 _90768 _90775 s f t)). Qed.
Lemma lem3500346 {_90768 _90775 : Type'} (s : _90768 -> Prop) (f : _90768 -> _90775) (t : _90768 -> Prop) : ((term1264 _90768 _90775 s f t) = (term1265 _90768 _90775 s f t)) = ((term1263 _90768 _90775 s f t) = (term1284 _90768 _90775 s f t)).
Proof. exact (MK_COMB (@lem3500334 _90768 _90775 s f t) (@lem3500345 _90768 _90775 s f t)). Qed.
Lemma lem3500347 {_90768 _90775 : Type'} (s : _90768 -> Prop) (f : _90768 -> _90775) (t : _90768 -> Prop) : (term1263 _90768 _90775 s f t) = (term1284 _90768 _90775 s f t).
Proof. exact (EQ_MP (@lem3500346 _90768 _90775 s f t) (@lem3500321 _90768 _90775 s f t)). Qed.
Lemma lem3500349 {A B : Type'} (P : type1413 A B) : (term453 A B P) = (term454 A B P).
Proof. exact (EQ_MP (@lem18899 A B P) (@lem18898 A B P)). Qed.
Lemma lem3500350 {_90768 _90775 : Type'} (P : type1470 _90768 _90775) : (term1188 _90768 _90775 P) = (term1189 _90768 _90775 P).
Proof. exact (@lem3500349 _90775 _90768 P). Qed.
Lemma lem3500351 {_90768 _90775 : Type'} (s : _90768 -> Prop) (x : _90775 -> _90768) (f : _90768 -> _90775) (t : _90768 -> Prop) : (term1285 _90768 _90775 s x f t) = (term1286 _90768 _90775 s x f t).
Proof. exact (@lem3500350 _90768 _90775 (term1287 _90768 _90775 s x f t)). Qed.
Lemma lem3500352 {_90768 _90775 : Type'} (s : _90768 -> Prop) (x : _90775 -> _90768) (x' : _90775) (f : _90768 -> _90775) (t : _90768 -> Prop) : (term1288 _90768 _90775 s x f t x') = (term1289 _90768 _90775 s x x' f t).
Proof. exact (eq_refl (term1288 _90768 _90775 s x f t x')). Qed.
Lemma lem3500353 {_90768 : Type'} (x' : _90768) : x' = x'.
Proof. exact (eq_refl x'). Qed.
Lemma lem3500354 {_90768 _90775 : Type'} (s : _90768 -> Prop) (x : _90775 -> _90768) (x' : _90775) (f : _90768 -> _90775) (t : _90768 -> Prop) (x'' : _90768) : (term1290 _90768 _90775 s x f t x' x'') = (term1291 _90768 _90775 s x x' f t x'').
Proof. exact (MK_COMB (@lem3500352 _90768 _90775 s x x' f t) (@lem3500353 _90768 x'')). Qed.
Lemma lem3500355 {_90768 _90775 : Type'} (s : _90768 -> Prop) (x : _90775 -> _90768) (x' : _90775) (f : _90768 -> _90775) (t : _90768 -> Prop) (x'' : _90768) : (term1291 _90768 _90775 s x x' f t x'') = (term1292 _90768 _90775 s x x' f t x'').
Proof. exact (eq_refl (term1291 _90768 _90775 s x x' f t x'')). Qed.
Lemma lem3500356 {_90768 _90775 : Type'} (s : _90768 -> Prop) (x : _90775 -> _90768) (x' : _90775) (f : _90768 -> _90775) (t : _90768 -> Prop) (x'' : _90768) : (term1290 _90768 _90775 s x f t x' x'') = (term1292 _90768 _90775 s x x' f t x'').
Proof. exact (TRANS (@lem3500354 _90768 _90775 s x x' f t x'') (@lem3500355 _90768 _90775 s x x' f t x'')). Qed.
Lemma lem3500357 {_90768 _90775 : Type'} (s : _90768 -> Prop) (x : _90775 -> _90768) (x' : _90775) (f : _90768 -> _90775) (t : _90768 -> Prop) : (term1293 _90768 _90775 s x f t x') = (term1289 _90768 _90775 s x x' f t).
Proof. exact (fun_ext (fun x'' : _90768 => @lem3500356 _90768 _90775 s x x' f t x'')). Qed.
Lemma lem3500358 {_90768 : Type'} : (@ex _90768) = (@ex _90768).
Proof. exact (eq_refl (@ex _90768)). Qed.
Lemma lem3500359 {_90768 _90775 : Type'} (s : _90768 -> Prop) (x : _90775 -> _90768) (x' : _90775) (f : _90768 -> _90775) (t : _90768 -> Prop) : (term1294 _90768 _90775 s x f t x') = (term1277 _90768 _90775 s x x' f t).
Proof. exact (MK_COMB (@lem3500358 _90768) (@lem3500357 _90768 _90775 s x x' f t)). Qed.
Lemma lem3500360 {_90768 _90775 : Type'} (s : _90768 -> Prop) (x : _90775 -> _90768) (f : _90768 -> _90775) (t : _90768 -> Prop) : (term1295 _90768 _90775 s x f t) = (term1279 _90768 _90775 s x f t).
Proof. exact (fun_ext (fun x' : _90775 => @lem3500359 _90768 _90775 s x x' f t)). Qed.
Lemma lem3500361 {_90775 : Type'} : (@all _90775) = (@all _90775).
Proof. exact (eq_refl (@all _90775)). Qed.
Lemma lem3500362 {_90768 _90775 : Type'} (s : _90768 -> Prop) (x : _90775 -> _90768) (f : _90768 -> _90775) (t : _90768 -> Prop) : (term1285 _90768 _90775 s x f t) = (term1281 _90768 _90775 s x f t).
Proof. exact (MK_COMB (@lem3500361 _90775) (@lem3500360 _90768 _90775 s x f t)). Qed.
Lemma lem3500363 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem3500364 {_90768 _90775 : Type'} (s : _90768 -> Prop) (x : _90775 -> _90768) (f : _90768 -> _90775) (t : _90768 -> Prop) : (term1296 _90768 _90775 s x f t) = (term1297 _90768 _90775 s x f t).
Proof. exact (MK_COMB (@lem3500363) (@lem3500362 _90768 _90775 s x f t)). Qed.
Lemma lem3500365 {_90768 _90775 : Type'} (s : _90768 -> Prop) (x : _90775 -> _90768) (x' : _90775) (f : _90768 -> _90775) (t : _90768 -> Prop) : (term1288 _90768 _90775 s x f t x') = (term1289 _90768 _90775 s x x' f t).
Proof. exact (eq_refl (term1288 _90768 _90775 s x f t x')). Qed.
Lemma lem3500366 {_90768 _90775 : Type'} (x' : _90775 -> _90768) (x : _90775) : (x' x) = (x' x).
Proof. exact (eq_refl (x' x)). Qed.
Lemma lem3500367 {_90768 _90775 : Type'} (s : _90768 -> Prop) (x : _90775 -> _90768) (f : _90768 -> _90775) (t : _90768 -> Prop) (x' : _90775 -> _90768) (x'' : _90775) : (term1298 _90768 _90775 s x f t x' x'') = (term1299 _90768 _90775 s x f t x' x'').
Proof. exact (MK_COMB (@lem3500365 _90768 _90775 s x x'' f t) (@lem3500366 _90768 _90775 x' x'')). Qed.
Lemma lem3500368 {_90768 _90775 : Type'} (s : _90768 -> Prop) (x : _90775 -> _90768) (f : _90768 -> _90775) (t : _90768 -> Prop) (x' : _90775 -> _90768) (x'' : _90775) : (term1299 _90768 _90775 s x f t x' x'') = (term1300 _90768 _90775 s x f t x' x'').
Proof. exact (eq_refl (term1299 _90768 _90775 s x f t x' x'')). Qed.
Lemma lem3500369 {_90768 _90775 : Type'} (s : _90768 -> Prop) (x : _90775 -> _90768) (f : _90768 -> _90775) (t : _90768 -> Prop) (x' : _90775 -> _90768) (x'' : _90775) : (term1298 _90768 _90775 s x f t x' x'') = (term1300 _90768 _90775 s x f t x' x'').
Proof. exact (TRANS (@lem3500367 _90768 _90775 s x f t x' x'') (@lem3500368 _90768 _90775 s x f t x' x'')). Qed.
Lemma lem3500370 {_90768 _90775 : Type'} (s : _90768 -> Prop) (x : _90775 -> _90768) (f : _90768 -> _90775) (t : _90768 -> Prop) (x' : _90775 -> _90768) : (term1301 _90768 _90775 s x f t x') = (term1302 _90768 _90775 s x f t x').
Proof. exact (fun_ext (fun x'' : _90775 => @lem3500369 _90768 _90775 s x f t x' x'')). Qed.
Lemma lem3500371 {_90775 : Type'} : (@all _90775) = (@all _90775).
Proof. exact (eq_refl (@all _90775)). Qed.
Lemma lem3500372 {_90768 _90775 : Type'} (s : _90768 -> Prop) (x : _90775 -> _90768) (f : _90768 -> _90775) (t : _90768 -> Prop) (x' : _90775 -> _90768) : (term1303 _90768 _90775 s x f t x') = (term1304 _90768 _90775 s x f t x').
Proof. exact (MK_COMB (@lem3500371 _90775) (@lem3500370 _90768 _90775 s x f t x')). Qed.
Lemma lem3500373 {_90768 _90775 : Type'} (s : _90768 -> Prop) (x : _90775 -> _90768) (f : _90768 -> _90775) (t : _90768 -> Prop) : (term1305 _90768 _90775 s x f t) = (term1306 _90768 _90775 s x f t).
Proof. exact (fun_ext (fun x' : _90775 -> _90768 => @lem3500372 _90768 _90775 s x f t x')). Qed.
Lemma lem3500374 {_90768 _90775 : Type'} : (@ex (_90775 -> _90768)) = (@ex (_90775 -> _90768)).
Proof. exact (eq_refl (@ex (_90775 -> _90768))). Qed.
Lemma lem3500375 {_90768 _90775 : Type'} (s : _90768 -> Prop) (x : _90775 -> _90768) (f : _90768 -> _90775) (t : _90768 -> Prop) : (term1286 _90768 _90775 s x f t) = (term1307 _90768 _90775 s x f t).
Proof. exact (MK_COMB (@lem3500374 _90768 _90775) (@lem3500373 _90768 _90775 s x f t)). Qed.
Lemma lem3500376 {_90768 _90775 : Type'} (s : _90768 -> Prop) (x : _90775 -> _90768) (f : _90768 -> _90775) (t : _90768 -> Prop) : ((term1285 _90768 _90775 s x f t) = (term1286 _90768 _90775 s x f t)) = ((term1281 _90768 _90775 s x f t) = (term1307 _90768 _90775 s x f t)).
Proof. exact (MK_COMB (@lem3500364 _90768 _90775 s x f t) (@lem3500375 _90768 _90775 s x f t)). Qed.
Lemma lem3500377 {_90768 _90775 : Type'} (s : _90768 -> Prop) (x : _90775 -> _90768) (f : _90768 -> _90775) (t : _90768 -> Prop) : (term1281 _90768 _90775 s x f t) = (term1307 _90768 _90775 s x f t).
Proof. exact (EQ_MP (@lem3500376 _90768 _90775 s x f t) (@lem3500351 _90768 _90775 s x f t)). Qed.
Lemma lem3500378 {_90768 _90775 : Type'} (s : _90768 -> Prop) (f : _90768 -> _90775) (t : _90768 -> Prop) : (term1283 _90768 _90775 s f t) = (term1308 _90768 _90775 s f t).
Proof. exact (fun_ext (fun x : _90775 -> _90768 => @lem3500377 _90768 _90775 s x f t)). Qed.
Lemma lem3500379 {_90768 _90775 : Type'} : (@ex (_90775 -> _90768)) = (@ex (_90775 -> _90768)).
Proof. exact (eq_refl (@ex (_90775 -> _90768))). Qed.
Lemma lem3500380 {_90768 _90775 : Type'} (s : _90768 -> Prop) (f : _90768 -> _90775) (t : _90768 -> Prop) : (term1284 _90768 _90775 s f t) = (term1309 _90768 _90775 s f t).
Proof. exact (MK_COMB (@lem3500379 _90768 _90775) (@lem3500378 _90768 _90775 s f t)). Qed.
Lemma lem3500381 {_90768 _90775 : Type'} (s : _90768 -> Prop) (f : _90768 -> _90775) (t : _90768 -> Prop) : (term1263 _90768 _90775 s f t) = (term1309 _90768 _90775 s f t).
Proof. exact (TRANS (@lem3500347 _90768 _90775 s f t) (@lem3500380 _90768 _90775 s f t)). Qed.
Lemma lem3500382 {_90768 _90775 : Type'} (s : _90768 -> Prop) (f : _90768 -> _90775) (t : _90768 -> Prop) : (term1148 _90768 _90775 s f t) = (term1309 _90768 _90775 s f t).
Proof. exact (TRANS (@lem3500317 _90768 _90775 s f t) (@lem3500381 _90768 _90775 s f t)). Qed.
Lemma lem3500383 {_90768 _90775 : Type'} (s : _90768 -> Prop) (f : _90768 -> _90775) (t : _90768 -> Prop) : (term1149 _90768 _90775 s f t) = (term1310 _90768 _90775 s f t).
Proof. exact (MK_COMB (@lem3500219 _90768 _90775 s f t) (@lem3500382 _90768 _90775 s f t)). Qed.
Lemma lem3500385 {A : Type'} (P : A -> Prop) (Q : Prop) : (term398 A P Q) = (term399 A P Q).
Proof. exact (EQ_MP (@lem18923 A P Q) (@lem18922 A P Q)). Qed.
Lemma lem3500386 {_90768 _90775 : Type'} (P : type805 _90768 _90775) (Q : Prop) : (term1311 _90768 _90775 P Q) = (term1312 _90768 _90775 P Q).
Proof. exact (@lem3500385 (_90775 -> _90768) P Q). Qed.
Lemma lem3500387 {_90768 _90775 : Type'} (s : _90768 -> Prop) (f : _90768 -> _90775) (t : _90768 -> Prop) : (term1313 _90768 _90775 s f t) = (term1314 _90768 _90775 s f t).
Proof. exact (@lem3500386 _90768 _90775 (term1209 _90768 _90775 s f t) (term1309 _90768 _90775 s f t)). Qed.
Lemma lem3500388 {_90768 _90775 : Type'} (x : _90775 -> _90768) (s : _90768 -> Prop) (f : _90768 -> _90775) (t : _90768 -> Prop) : (term1315 _90768 _90775 s f t x) = (term1207 _90768 _90775 x s f t).
Proof. exact (eq_refl (term1315 _90768 _90775 s f t x)). Qed.
Lemma lem3500389 {_90768 _90775 : Type'} (s : _90768 -> Prop) (f : _90768 -> _90775) (t : _90768 -> Prop) : (term1316 _90768 _90775 s f t) = (term1209 _90768 _90775 s f t).
Proof. exact (fun_ext (fun x : _90775 -> _90768 => @lem3500388 _90768 _90775 x s f t)). Qed.
Lemma lem3500390 {_90768 _90775 : Type'} : (@ex (_90775 -> _90768)) = (@ex (_90775 -> _90768)).
Proof. exact (eq_refl (@ex (_90775 -> _90768))). Qed.
Lemma lem3500391 {_90768 _90775 : Type'} (s : _90768 -> Prop) (f : _90768 -> _90775) (t : _90768 -> Prop) : (term1317 _90768 _90775 s f t) = (term1210 _90768 _90775 s f t).
Proof. exact (MK_COMB (@lem3500390 _90768 _90775) (@lem3500389 _90768 _90775 s f t)). Qed.
Lemma lem3500392 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem3500393 {_90768 _90775 : Type'} (s : _90768 -> Prop) (f : _90768 -> _90775) (t : _90768 -> Prop) : (term1318 _90768 _90775 s f t) = (term1211 _90768 _90775 s f t).
Proof. exact (MK_COMB (@lem3500392) (@lem3500391 _90768 _90775 s f t)). Qed.
Lemma lem3500394 {_90768 _90775 : Type'} (s : _90768 -> Prop) (f : _90768 -> _90775) (t : _90768 -> Prop) : (term1309 _90768 _90775 s f t) = (term1309 _90768 _90775 s f t).
Proof. exact (eq_refl (term1309 _90768 _90775 s f t)). Qed.
Lemma lem3500395 {_90768 _90775 : Type'} (s : _90768 -> Prop) (f : _90768 -> _90775) (t : _90768 -> Prop) : (term1313 _90768 _90775 s f t) = (term1310 _90768 _90775 s f t).
Proof. exact (MK_COMB (@lem3500393 _90768 _90775 s f t) (@lem3500394 _90768 _90775 s f t)). Qed.
Lemma lem3500396 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem3500397 {_90768 _90775 : Type'} (s : _90768 -> Prop) (f : _90768 -> _90775) (t : _90768 -> Prop) : (term1319 _90768 _90775 s f t) = (term1320 _90768 _90775 s f t).
Proof. exact (MK_COMB (@lem3500396) (@lem3500395 _90768 _90775 s f t)). Qed.
Lemma lem3500398 {_90768 _90775 : Type'} (x : _90775 -> _90768) (s : _90768 -> Prop) (f : _90768 -> _90775) (t : _90768 -> Prop) : (term1315 _90768 _90775 s f t x) = (term1207 _90768 _90775 x s f t).
Proof. exact (eq_refl (term1315 _90768 _90775 s f t x)). Qed.
Lemma lem3500399 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem3500400 {_90768 _90775 : Type'} (x : _90775 -> _90768) (s : _90768 -> Prop) (f : _90768 -> _90775) (t : _90768 -> Prop) : (term1321 _90768 _90775 s f t x) = (term1322 _90768 _90775 x s f t).
Proof. exact (MK_COMB (@lem3500399) (@lem3500398 _90768 _90775 x s f t)). Qed.
Lemma lem3500401 {_90768 _90775 : Type'} (s : _90768 -> Prop) (f : _90768 -> _90775) (t : _90768 -> Prop) : (term1309 _90768 _90775 s f t) = (term1309 _90768 _90775 s f t).
Proof. exact (eq_refl (term1309 _90768 _90775 s f t)). Qed.
Lemma lem3500402 {_90768 _90775 : Type'} (x : _90775 -> _90768) (s : _90768 -> Prop) (f : _90768 -> _90775) (t : _90768 -> Prop) : (term1323 _90768 _90775 x s f t) = (term1324 _90768 _90775 x s f t).
Proof. exact (MK_COMB (@lem3500400 _90768 _90775 x s f t) (@lem3500401 _90768 _90775 s f t)). Qed.
Lemma lem3500403 {_90768 _90775 : Type'} (s : _90768 -> Prop) (f : _90768 -> _90775) (t : _90768 -> Prop) : (term1325 _90768 _90775 s f t) = (term1326 _90768 _90775 s f t).
Proof. exact (fun_ext (fun x : _90775 -> _90768 => @lem3500402 _90768 _90775 x s f t)). Qed.
Lemma lem3500404 {_90768 _90775 : Type'} : (@ex (_90775 -> _90768)) = (@ex (_90775 -> _90768)).
Proof. exact (eq_refl (@ex (_90775 -> _90768))). Qed.
Lemma lem3500405 {_90768 _90775 : Type'} (s : _90768 -> Prop) (f : _90768 -> _90775) (t : _90768 -> Prop) : (term1314 _90768 _90775 s f t) = (term1327 _90768 _90775 s f t).
Proof. exact (MK_COMB (@lem3500404 _90768 _90775) (@lem3500403 _90768 _90775 s f t)). Qed.
Lemma lem3500406 {_90768 _90775 : Type'} (s : _90768 -> Prop) (f : _90768 -> _90775) (t : _90768 -> Prop) : ((term1313 _90768 _90775 s f t) = (term1314 _90768 _90775 s f t)) = ((term1310 _90768 _90775 s f t) = (term1327 _90768 _90775 s f t)).
Proof. exact (MK_COMB (@lem3500397 _90768 _90775 s f t) (@lem3500405 _90768 _90775 s f t)). Qed.
Lemma lem3500407 {_90768 _90775 : Type'} (s : _90768 -> Prop) (f : _90768 -> _90775) (t : _90768 -> Prop) : (term1310 _90768 _90775 s f t) = (term1327 _90768 _90775 s f t).
Proof. exact (EQ_MP (@lem3500406 _90768 _90775 s f t) (@lem3500387 _90768 _90775 s f t)). Qed.
Lemma lem3500409 {A : Type'} (P : Prop) (Q : A -> Prop) : (term415 A P Q) = (term416 A P Q).
Proof. exact (EQ_MP (@lem18929 A P Q) (@lem18928 A P Q)). Qed.
Lemma lem3500410 {_90768 _90775 : Type'} (P : Prop) (Q : type805 _90768 _90775) : (term1328 _90768 _90775 P Q) = (term1329 _90768 _90775 P Q).
Proof. exact (@lem3500409 (_90775 -> _90768) P Q). Qed.
Lemma lem3500411 {_90768 _90775 : Type'} (x : _90775 -> _90768) (s : _90768 -> Prop) (f : _90768 -> _90775) (t : _90768 -> Prop) : (term1330 _90768 _90775 x s f t) = (term1331 _90768 _90775 x s f t).
Proof. exact (@lem3500410 _90768 _90775 (term1207 _90768 _90775 x s f t) (term1308 _90768 _90775 s f t)). Qed.
Lemma lem3500412 {_90768 _90775 : Type'} (s : _90768 -> Prop) (x : _90775 -> _90768) (f : _90768 -> _90775) (t : _90768 -> Prop) : (term1332 _90768 _90775 s f t x) = (term1307 _90768 _90775 s x f t).
Proof. exact (eq_refl (term1332 _90768 _90775 s f t x)). Qed.
Lemma lem3500413 {_90768 _90775 : Type'} (s : _90768 -> Prop) (f : _90768 -> _90775) (t : _90768 -> Prop) : (term1333 _90768 _90775 s f t) = (term1308 _90768 _90775 s f t).
Proof. exact (fun_ext (fun x : _90775 -> _90768 => @lem3500412 _90768 _90775 s x f t)). Qed.
Lemma lem3500414 {_90768 _90775 : Type'} : (@ex (_90775 -> _90768)) = (@ex (_90775 -> _90768)).
Proof. exact (eq_refl (@ex (_90775 -> _90768))). Qed.
Lemma lem3500415 {_90768 _90775 : Type'} (s : _90768 -> Prop) (f : _90768 -> _90775) (t : _90768 -> Prop) : (term1334 _90768 _90775 s f t) = (term1309 _90768 _90775 s f t).
Proof. exact (MK_COMB (@lem3500414 _90768 _90775) (@lem3500413 _90768 _90775 s f t)). Qed.
Lemma lem3500416 {_90768 _90775 : Type'} (x : _90775 -> _90768) (s : _90768 -> Prop) (f : _90768 -> _90775) (t : _90768 -> Prop) : (term1322 _90768 _90775 x s f t) = (term1322 _90768 _90775 x s f t).
Proof. exact (eq_refl (term1322 _90768 _90775 x s f t)). Qed.
Lemma lem3500417 {_90768 _90775 : Type'} (x : _90775 -> _90768) (s : _90768 -> Prop) (f : _90768 -> _90775) (t : _90768 -> Prop) : (term1330 _90768 _90775 x s f t) = (term1324 _90768 _90775 x s f t).
Proof. exact (MK_COMB (@lem3500416 _90768 _90775 x s f t) (@lem3500415 _90768 _90775 s f t)). Qed.
Lemma lem3500418 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem3500419 {_90768 _90775 : Type'} (x : _90775 -> _90768) (s : _90768 -> Prop) (f : _90768 -> _90775) (t : _90768 -> Prop) : (term1335 _90768 _90775 x s f t) = (term1336 _90768 _90775 x s f t).
Proof. exact (MK_COMB (@lem3500418) (@lem3500417 _90768 _90775 x s f t)). Qed.
Lemma lem3500420 {_90768 _90775 : Type'} (s : _90768 -> Prop) (x' : _90775 -> _90768) (f : _90768 -> _90775) (t : _90768 -> Prop) : (term1332 _90768 _90775 s f t x') = (term1307 _90768 _90775 s x' f t).
Proof. exact (eq_refl (term1332 _90768 _90775 s f t x')). Qed.
Lemma lem3500421 {_90768 _90775 : Type'} (x : _90775 -> _90768) (s : _90768 -> Prop) (f : _90768 -> _90775) (t : _90768 -> Prop) : (term1322 _90768 _90775 x s f t) = (term1322 _90768 _90775 x s f t).
Proof. exact (eq_refl (term1322 _90768 _90775 x s f t)). Qed.
Lemma lem3500422 {_90768 _90775 : Type'} (x : _90775 -> _90768) (s : _90768 -> Prop) (x' : _90775 -> _90768) (f : _90768 -> _90775) (t : _90768 -> Prop) : (term1337 _90768 _90775 x s f t x') = (term1338 _90768 _90775 x s x' f t).
Proof. exact (MK_COMB (@lem3500421 _90768 _90775 x s f t) (@lem3500420 _90768 _90775 s x' f t)). Qed.
Lemma lem3500423 {_90768 _90775 : Type'} (x : _90775 -> _90768) (s : _90768 -> Prop) (f : _90768 -> _90775) (t : _90768 -> Prop) : (term1339 _90768 _90775 x s f t) = (term1340 _90768 _90775 x s f t).
Proof. exact (fun_ext (fun x' : _90775 -> _90768 => @lem3500422 _90768 _90775 x s x' f t)). Qed.
Lemma lem3500424 {_90768 _90775 : Type'} : (@ex (_90775 -> _90768)) = (@ex (_90775 -> _90768)).
Proof. exact (eq_refl (@ex (_90775 -> _90768))). Qed.
Lemma lem3500425 {_90768 _90775 : Type'} (x : _90775 -> _90768) (s : _90768 -> Prop) (f : _90768 -> _90775) (t : _90768 -> Prop) : (term1331 _90768 _90775 x s f t) = (term1341 _90768 _90775 x s f t).
Proof. exact (MK_COMB (@lem3500424 _90768 _90775) (@lem3500423 _90768 _90775 x s f t)). Qed.
Lemma lem3500426 {_90768 _90775 : Type'} (x : _90775 -> _90768) (s : _90768 -> Prop) (f : _90768 -> _90775) (t : _90768 -> Prop) : ((term1330 _90768 _90775 x s f t) = (term1331 _90768 _90775 x s f t)) = ((term1324 _90768 _90775 x s f t) = (term1341 _90768 _90775 x s f t)).
Proof. exact (MK_COMB (@lem3500419 _90768 _90775 x s f t) (@lem3500425 _90768 _90775 x s f t)). Qed.
Lemma lem3500427 {_90768 _90775 : Type'} (x : _90775 -> _90768) (s : _90768 -> Prop) (f : _90768 -> _90775) (t : _90768 -> Prop) : (term1324 _90768 _90775 x s f t) = (term1341 _90768 _90775 x s f t).
Proof. exact (EQ_MP (@lem3500426 _90768 _90775 x s f t) (@lem3500411 _90768 _90775 x s f t)). Qed.
Lemma lem3500429 {A : Type'} (P : Prop) (Q : A -> Prop) : (term415 A P Q) = (term416 A P Q).
Proof. exact (EQ_MP (@lem18929 A P Q) (@lem18928 A P Q)). Qed.
Lemma lem3500430 {_90768 _90775 : Type'} (P : Prop) (Q : type805 _90768 _90775) : (term1328 _90768 _90775 P Q) = (term1329 _90768 _90775 P Q).
Proof. exact (@lem3500429 (_90775 -> _90768) P Q). Qed.
Lemma lem3500431 {_90768 _90775 : Type'} (x : _90775 -> _90768) (s : _90768 -> Prop) (x' : _90775 -> _90768) (f : _90768 -> _90775) (t : _90768 -> Prop) : (term1342 _90768 _90775 x s x' f t) = (term1343 _90768 _90775 x s x' f t).
Proof. exact (@lem3500430 _90768 _90775 (term1207 _90768 _90775 x s f t) (term1306 _90768 _90775 s x' f t)). Qed.
Lemma lem3500432 {_90768 _90775 : Type'} (s : _90768 -> Prop) (x' : _90775 -> _90768) (f : _90768 -> _90775) (t : _90768 -> Prop) (x'' : _90775 -> _90768) : (term1344 _90768 _90775 s x' f t x'') = (term1304 _90768 _90775 s x' f t x'').
Proof. exact (eq_refl (term1344 _90768 _90775 s x' f t x'')). Qed.
Lemma lem3500433 {_90768 _90775 : Type'} (s : _90768 -> Prop) (x' : _90775 -> _90768) (f : _90768 -> _90775) (t : _90768 -> Prop) : (term1345 _90768 _90775 s x' f t) = (term1306 _90768 _90775 s x' f t).
Proof. exact (fun_ext (fun x'' : _90775 -> _90768 => @lem3500432 _90768 _90775 s x' f t x'')). Qed.
Lemma lem3500434 {_90768 _90775 : Type'} : (@ex (_90775 -> _90768)) = (@ex (_90775 -> _90768)).
Proof. exact (eq_refl (@ex (_90775 -> _90768))). Qed.
Lemma lem3500435 {_90768 _90775 : Type'} (s : _90768 -> Prop) (x' : _90775 -> _90768) (f : _90768 -> _90775) (t : _90768 -> Prop) : (term1346 _90768 _90775 s x' f t) = (term1307 _90768 _90775 s x' f t).
Proof. exact (MK_COMB (@lem3500434 _90768 _90775) (@lem3500433 _90768 _90775 s x' f t)). Qed.
Lemma lem3500436 {_90768 _90775 : Type'} (x : _90775 -> _90768) (s : _90768 -> Prop) (f : _90768 -> _90775) (t : _90768 -> Prop) : (term1322 _90768 _90775 x s f t) = (term1322 _90768 _90775 x s f t).
Proof. exact (eq_refl (term1322 _90768 _90775 x s f t)). Qed.
Lemma lem3500437 {_90768 _90775 : Type'} (x : _90775 -> _90768) (s : _90768 -> Prop) (x' : _90775 -> _90768) (f : _90768 -> _90775) (t : _90768 -> Prop) : (term1342 _90768 _90775 x s x' f t) = (term1338 _90768 _90775 x s x' f t).
Proof. exact (MK_COMB (@lem3500436 _90768 _90775 x s f t) (@lem3500435 _90768 _90775 s x' f t)). Qed.
Lemma lem3500438 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem3500439 {_90768 _90775 : Type'} (x : _90775 -> _90768) (s : _90768 -> Prop) (x' : _90775 -> _90768) (f : _90768 -> _90775) (t : _90768 -> Prop) : (term1347 _90768 _90775 x s x' f t) = (term1348 _90768 _90775 x s x' f t).
Proof. exact (MK_COMB (@lem3500438) (@lem3500437 _90768 _90775 x s x' f t)). Qed.
Lemma lem3500440 {_90768 _90775 : Type'} (s : _90768 -> Prop) (x' : _90775 -> _90768) (f : _90768 -> _90775) (t : _90768 -> Prop) (x'' : _90775 -> _90768) : (term1344 _90768 _90775 s x' f t x'') = (term1304 _90768 _90775 s x' f t x'').
Proof. exact (eq_refl (term1344 _90768 _90775 s x' f t x'')). Qed.
Lemma lem3500441 {_90768 _90775 : Type'} (x : _90775 -> _90768) (s : _90768 -> Prop) (f : _90768 -> _90775) (t : _90768 -> Prop) : (term1322 _90768 _90775 x s f t) = (term1322 _90768 _90775 x s f t).
Proof. exact (eq_refl (term1322 _90768 _90775 x s f t)). Qed.
Lemma lem3500442 {_90768 _90775 : Type'} (x : _90775 -> _90768) (s : _90768 -> Prop) (x' : _90775 -> _90768) (f : _90768 -> _90775) (t : _90768 -> Prop) (x'' : _90775 -> _90768) : (term1349 _90768 _90775 x s x' f t x'') = (term1350 _90768 _90775 x s x' f t x'').
Proof. exact (MK_COMB (@lem3500441 _90768 _90775 x s f t) (@lem3500440 _90768 _90775 s x' f t x'')). Qed.
Lemma lem3500443 {_90768 _90775 : Type'} (x : _90775 -> _90768) (s : _90768 -> Prop) (x' : _90775 -> _90768) (f : _90768 -> _90775) (t : _90768 -> Prop) : (term1351 _90768 _90775 x s x' f t) = (term1352 _90768 _90775 x s x' f t).
Proof. exact (fun_ext (fun x'' : _90775 -> _90768 => @lem3500442 _90768 _90775 x s x' f t x'')). Qed.
Lemma lem3500444 {_90768 _90775 : Type'} : (@ex (_90775 -> _90768)) = (@ex (_90775 -> _90768)).
Proof. exact (eq_refl (@ex (_90775 -> _90768))). Qed.
Lemma lem3500445 {_90768 _90775 : Type'} (x : _90775 -> _90768) (s : _90768 -> Prop) (x' : _90775 -> _90768) (f : _90768 -> _90775) (t : _90768 -> Prop) : (term1343 _90768 _90775 x s x' f t) = (term1353 _90768 _90775 x s x' f t).
Proof. exact (MK_COMB (@lem3500444 _90768 _90775) (@lem3500443 _90768 _90775 x s x' f t)). Qed.
Lemma lem3500446 {_90768 _90775 : Type'} (x : _90775 -> _90768) (s : _90768 -> Prop) (x' : _90775 -> _90768) (f : _90768 -> _90775) (t : _90768 -> Prop) : ((term1342 _90768 _90775 x s x' f t) = (term1343 _90768 _90775 x s x' f t)) = ((term1338 _90768 _90775 x s x' f t) = (term1353 _90768 _90775 x s x' f t)).
Proof. exact (MK_COMB (@lem3500439 _90768 _90775 x s x' f t) (@lem3500445 _90768 _90775 x s x' f t)). Qed.
Lemma lem3500447 {_90768 _90775 : Type'} (x : _90775 -> _90768) (s : _90768 -> Prop) (x' : _90775 -> _90768) (f : _90768 -> _90775) (t : _90768 -> Prop) : (term1338 _90768 _90775 x s x' f t) = (term1353 _90768 _90775 x s x' f t).
Proof. exact (EQ_MP (@lem3500446 _90768 _90775 x s x' f t) (@lem3500431 _90768 _90775 x s x' f t)). Qed.
Lemma lem3500448 {_90768 _90775 : Type'} (x : _90775 -> _90768) (s : _90768 -> Prop) (f : _90768 -> _90775) (t : _90768 -> Prop) : (term1340 _90768 _90775 x s f t) = (term1354 _90768 _90775 x s f t).
Proof. exact (fun_ext (fun x' : _90775 -> _90768 => @lem3500447 _90768 _90775 x s x' f t)). Qed.
Lemma lem3500449 {_90768 _90775 : Type'} : (@ex (_90775 -> _90768)) = (@ex (_90775 -> _90768)).
Proof. exact (eq_refl (@ex (_90775 -> _90768))). Qed.
Lemma lem3500450 {_90768 _90775 : Type'} (x : _90775 -> _90768) (s : _90768 -> Prop) (f : _90768 -> _90775) (t : _90768 -> Prop) : (term1341 _90768 _90775 x s f t) = (term1355 _90768 _90775 x s f t).
Proof. exact (MK_COMB (@lem3500449 _90768 _90775) (@lem3500448 _90768 _90775 x s f t)). Qed.
Lemma lem3500451 {_90768 _90775 : Type'} (x : _90775 -> _90768) (s : _90768 -> Prop) (f : _90768 -> _90775) (t : _90768 -> Prop) : (term1324 _90768 _90775 x s f t) = (term1355 _90768 _90775 x s f t).
Proof. exact (TRANS (@lem3500427 _90768 _90775 x s f t) (@lem3500450 _90768 _90775 x s f t)). Qed.
Lemma lem3500452 {_90768 _90775 : Type'} (s : _90768 -> Prop) (f : _90768 -> _90775) (t : _90768 -> Prop) : (term1326 _90768 _90775 s f t) = (term1356 _90768 _90775 s f t).
Proof. exact (fun_ext (fun x : _90775 -> _90768 => @lem3500451 _90768 _90775 x s f t)). Qed.
Lemma lem3500453 {_90768 _90775 : Type'} : (@ex (_90775 -> _90768)) = (@ex (_90775 -> _90768)).
Proof. exact (eq_refl (@ex (_90775 -> _90768))). Qed.
Lemma lem3500454 {_90768 _90775 : Type'} (s : _90768 -> Prop) (f : _90768 -> _90775) (t : _90768 -> Prop) : (term1327 _90768 _90775 s f t) = (term1357 _90768 _90775 s f t).
Proof. exact (MK_COMB (@lem3500453 _90768 _90775) (@lem3500452 _90768 _90775 s f t)). Qed.
Lemma lem3500455 {_90768 _90775 : Type'} (s : _90768 -> Prop) (f : _90768 -> _90775) (t : _90768 -> Prop) : (term1310 _90768 _90775 s f t) = (term1357 _90768 _90775 s f t).
Proof. exact (TRANS (@lem3500407 _90768 _90775 s f t) (@lem3500454 _90768 _90775 s f t)). Qed.
Lemma lem3500456 {_90768 _90775 : Type'} (s : _90768 -> Prop) (f : _90768 -> _90775) (t : _90768 -> Prop) : (term1149 _90768 _90775 s f t) = (term1357 _90768 _90775 s f t).
Proof. exact (TRANS (@lem3500383 _90768 _90775 s f t) (@lem3500455 _90768 _90775 s f t)). Qed.
Lemma lem3500457 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem3500458 {_90768 _90775 : Type'} (s : _90768 -> Prop) (f : _90768 -> _90775) (t : _90768 -> Prop) : (term1150 _90768 _90775 s f t) = (term1358 _90768 _90775 s f t).
Proof. exact (MK_COMB (@lem3500457) (@lem3500456 _90768 _90775 s f t)). Qed.
Lemma lem3500460 {A : Type'} (P : A -> Prop) (Q : Prop) : (term550 A P Q) = (term551 A P Q).
Proof. exact (EQ_MP (@lem18905 A P Q) (@lem18904 A P Q)). Qed.
Lemma lem3500461 {_90768 : Type'} (P : _90768 -> Prop) (Q : Prop) : (term550 _90768 P Q) = (term551 _90768 P Q).
Proof. exact (@lem3500460 _90768 P Q). Qed.
Lemma lem3500462 {_90768 _90775 : Type'} (f : _90768 -> _90775) (t : _90768 -> Prop) (u : _90775 -> Prop) (x : _90775) : (term1359 _90768 _90775 f t u x) = (term1360 _90768 _90775 f t u x).
Proof. exact (@lem3500461 _90768 (term266 _90768 _90775 x f t) (term618 _90775 u x)). Qed.
Lemma lem3500463 {_90768 _90775 : Type'} (x : _90775) (f : _90768 -> _90775) (t : _90768 -> Prop) (x' : _90768) : (term367 _90768 _90775 x f t x') = (term264 _90768 _90775 x f t x').
Proof. exact (eq_refl (term367 _90768 _90775 x f t x')). Qed.
Lemma lem3500464 {_90768 _90775 : Type'} (x : _90775) (f : _90768 -> _90775) (t : _90768 -> Prop) : (term481 _90768 _90775 x f t) = (term266 _90768 _90775 x f t).
Proof. exact (fun_ext (fun x' : _90768 => @lem3500463 _90768 _90775 x f t x')). Qed.
Lemma lem3500465 {_90768 : Type'} : (@ex _90768) = (@ex _90768).
Proof. exact (eq_refl (@ex _90768)). Qed.
Lemma lem3500466 {_90768 _90775 : Type'} (x : _90775) (f : _90768 -> _90775) (t : _90768 -> Prop) : (term482 _90768 _90775 x f t) = (term267 _90768 _90775 x f t).
Proof. exact (MK_COMB (@lem3500465 _90768) (@lem3500464 _90768 _90775 x f t)). Qed.
Lemma lem3500467 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem3500468 {_90768 _90775 : Type'} (x : _90775) (f : _90768 -> _90775) (t : _90768 -> Prop) : (term1361 _90768 _90775 x f t) = (term1121 _90768 _90775 x f t).
Proof. exact (MK_COMB (@lem3500467) (@lem3500466 _90768 _90775 x f t)). Qed.
Lemma lem3500469 {_90775 : Type'} (u : _90775 -> Prop) (x : _90775) : (term618 _90775 u x) = (term618 _90775 u x).
Proof. exact (eq_refl (term618 _90775 u x)). Qed.
Lemma lem3500470 {_90768 _90775 : Type'} (f : _90768 -> _90775) (t : _90768 -> Prop) (u : _90775 -> Prop) (x : _90775) : (term1359 _90768 _90775 f t u x) = (term1122 _90768 _90775 f t u x).
Proof. exact (MK_COMB (@lem3500468 _90768 _90775 x f t) (@lem3500469 _90775 u x)). Qed.
Lemma lem3500471 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem3500472 {_90768 _90775 : Type'} (f : _90768 -> _90775) (t : _90768 -> Prop) (u : _90775 -> Prop) (x : _90775) : (term1362 _90768 _90775 f t u x) = (term1363 _90768 _90775 f t u x).
Proof. exact (MK_COMB (@lem3500471) (@lem3500470 _90768 _90775 f t u x)). Qed.
Lemma lem3500473 {_90768 _90775 : Type'} (x : _90775) (f : _90768 -> _90775) (t : _90768 -> Prop) (x' : _90768) : (term367 _90768 _90775 x f t x') = (term264 _90768 _90775 x f t x').
Proof. exact (eq_refl (term367 _90768 _90775 x f t x')). Qed.
Lemma lem3500474 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem3500475 {_90768 _90775 : Type'} (x : _90775) (f : _90768 -> _90775) (t : _90768 -> Prop) (x' : _90768) : (term1364 _90768 _90775 x f t x') = (term1365 _90768 _90775 x f t x').
Proof. exact (MK_COMB (@lem3500474) (@lem3500473 _90768 _90775 x f t x')). Qed.
Lemma lem3500476 {_90775 : Type'} (u : _90775 -> Prop) (x : _90775) : (term618 _90775 u x) = (term618 _90775 u x).
Proof. exact (eq_refl (term618 _90775 u x)). Qed.
Lemma lem3500477 {_90768 _90775 : Type'} (f : _90768 -> _90775) (t : _90768 -> Prop) (x : _90768) (u : _90775 -> Prop) (x' : _90775) : (term1366 _90768 _90775 f t x u x') = (term1367 _90768 _90775 f t x u x').
Proof. exact (MK_COMB (@lem3500475 _90768 _90775 x' f t x) (@lem3500476 _90775 u x')). Qed.
Lemma lem3500478 {_90768 _90775 : Type'} (f : _90768 -> _90775) (t : _90768 -> Prop) (u : _90775 -> Prop) (x : _90775) : (term1368 _90768 _90775 f t u x) = (term1369 _90768 _90775 f t u x).
Proof. exact (fun_ext (fun x' : _90768 => @lem3500477 _90768 _90775 f t x' u x)). Qed.
Lemma lem3500479 {_90768 : Type'} : (@ex _90768) = (@ex _90768).
Proof. exact (eq_refl (@ex _90768)). Qed.
Lemma lem3500480 {_90768 _90775 : Type'} (f : _90768 -> _90775) (t : _90768 -> Prop) (u : _90775 -> Prop) (x : _90775) : (term1360 _90768 _90775 f t u x) = (term1370 _90768 _90775 f t u x).
Proof. exact (MK_COMB (@lem3500479 _90768) (@lem3500478 _90768 _90775 f t u x)). Qed.
Lemma lem3500481 {_90768 _90775 : Type'} (f : _90768 -> _90775) (t : _90768 -> Prop) (u : _90775 -> Prop) (x : _90775) : ((term1359 _90768 _90775 f t u x) = (term1360 _90768 _90775 f t u x)) = ((term1122 _90768 _90775 f t u x) = (term1370 _90768 _90775 f t u x)).
Proof. exact (MK_COMB (@lem3500472 _90768 _90775 f t u x) (@lem3500480 _90768 _90775 f t u x)). Qed.
Lemma lem3500482 {_90768 _90775 : Type'} (f : _90768 -> _90775) (t : _90768 -> Prop) (u : _90775 -> Prop) (x : _90775) : (term1122 _90768 _90775 f t u x) = (term1370 _90768 _90775 f t u x).
Proof. exact (EQ_MP (@lem3500481 _90768 _90775 f t u x) (@lem3500462 _90768 _90775 f t u x)). Qed.
Lemma lem3500483 {_90768 _90775 : Type'} (f : _90768 -> _90775) (t : _90768 -> Prop) (u : _90775 -> Prop) : (term1153 _90768 _90775 f t u) = (term1371 _90768 _90775 f t u).
Proof. exact (fun_ext (fun x : _90775 => @lem3500482 _90768 _90775 f t u x)). Qed.
Lemma lem3500484 {_90775 : Type'} : (@all _90775) = (@all _90775).
Proof. exact (eq_refl (@all _90775)). Qed.
Lemma lem3500485 {_90768 _90775 : Type'} (f : _90768 -> _90775) (t : _90768 -> Prop) (u : _90775 -> Prop) : (term1164 _90768 _90775 f t u) = (term1372 _90768 _90775 f t u).
Proof. exact (MK_COMB (@lem3500484 _90775) (@lem3500483 _90768 _90775 f t u)). Qed.
Lemma lem3500487 {A B : Type'} (P : type1413 A B) : (term453 A B P) = (term454 A B P).
Proof. exact (EQ_MP (@lem18899 A B P) (@lem18898 A B P)). Qed.
Lemma lem3500488 {_90768 _90775 : Type'} (P : type1470 _90768 _90775) : (term1188 _90768 _90775 P) = (term1189 _90768 _90775 P).
Proof. exact (@lem3500487 _90775 _90768 P). Qed.
Lemma lem3500489 {_90768 _90775 : Type'} (f : _90768 -> _90775) (t : _90768 -> Prop) (u : _90775 -> Prop) : (term1373 _90768 _90775 f t u) = (term1374 _90768 _90775 f t u).
Proof. exact (@lem3500488 _90768 _90775 (term1375 _90768 _90775 f t u)). Qed.
Lemma lem3500490 {_90768 _90775 : Type'} (f : _90768 -> _90775) (t : _90768 -> Prop) (u : _90775 -> Prop) (x : _90775) : (term1376 _90768 _90775 f t u x) = (term1369 _90768 _90775 f t u x).
Proof. exact (eq_refl (term1376 _90768 _90775 f t u x)). Qed.
Lemma lem3500491 {_90768 : Type'} (x : _90768) : x = x.
Proof. exact (eq_refl x). Qed.
Lemma lem3500492 {_90768 _90775 : Type'} (f : _90768 -> _90775) (t : _90768 -> Prop) (u : _90775 -> Prop) (x : _90775) (x' : _90768) : (term1377 _90768 _90775 f t u x x') = (term1378 _90768 _90775 f t u x x').
Proof. exact (MK_COMB (@lem3500490 _90768 _90775 f t u x) (@lem3500491 _90768 x')). Qed.
Lemma lem3500493 {_90768 _90775 : Type'} (f : _90768 -> _90775) (t : _90768 -> Prop) (x : _90768) (u : _90775 -> Prop) (x' : _90775) : (term1378 _90768 _90775 f t u x' x) = (term1367 _90768 _90775 f t x u x').
Proof. exact (eq_refl (term1378 _90768 _90775 f t u x' x)). Qed.
Lemma lem3500494 {_90768 _90775 : Type'} (f : _90768 -> _90775) (t : _90768 -> Prop) (x : _90768) (u : _90775 -> Prop) (x' : _90775) : (term1377 _90768 _90775 f t u x' x) = (term1367 _90768 _90775 f t x u x').
Proof. exact (TRANS (@lem3500492 _90768 _90775 f t u x' x) (@lem3500493 _90768 _90775 f t x u x')). Qed.
Lemma lem3500495 {_90768 _90775 : Type'} (f : _90768 -> _90775) (t : _90768 -> Prop) (u : _90775 -> Prop) (x : _90775) : (term1379 _90768 _90775 f t u x) = (term1369 _90768 _90775 f t u x).
Proof. exact (fun_ext (fun x' : _90768 => @lem3500494 _90768 _90775 f t x' u x)). Qed.
Lemma lem3500496 {_90768 : Type'} : (@ex _90768) = (@ex _90768).
Proof. exact (eq_refl (@ex _90768)). Qed.
Lemma lem3500497 {_90768 _90775 : Type'} (f : _90768 -> _90775) (t : _90768 -> Prop) (u : _90775 -> Prop) (x : _90775) : (term1380 _90768 _90775 f t u x) = (term1370 _90768 _90775 f t u x).
Proof. exact (MK_COMB (@lem3500496 _90768) (@lem3500495 _90768 _90775 f t u x)). Qed.
Lemma lem3500498 {_90768 _90775 : Type'} (f : _90768 -> _90775) (t : _90768 -> Prop) (u : _90775 -> Prop) : (term1381 _90768 _90775 f t u) = (term1371 _90768 _90775 f t u).
Proof. exact (fun_ext (fun x : _90775 => @lem3500497 _90768 _90775 f t u x)). Qed.
Lemma lem3500499 {_90775 : Type'} : (@all _90775) = (@all _90775).
Proof. exact (eq_refl (@all _90775)). Qed.
Lemma lem3500500 {_90768 _90775 : Type'} (f : _90768 -> _90775) (t : _90768 -> Prop) (u : _90775 -> Prop) : (term1373 _90768 _90775 f t u) = (term1372 _90768 _90775 f t u).
Proof. exact (MK_COMB (@lem3500499 _90775) (@lem3500498 _90768 _90775 f t u)). Qed.
Lemma lem3500501 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem3500502 {_90768 _90775 : Type'} (f : _90768 -> _90775) (t : _90768 -> Prop) (u : _90775 -> Prop) : (term1382 _90768 _90775 f t u) = (term1383 _90768 _90775 f t u).
Proof. exact (MK_COMB (@lem3500501) (@lem3500500 _90768 _90775 f t u)). Qed.
Lemma lem3500503 {_90768 _90775 : Type'} (f : _90768 -> _90775) (t : _90768 -> Prop) (u : _90775 -> Prop) (x : _90775) : (term1376 _90768 _90775 f t u x) = (term1369 _90768 _90775 f t u x).
Proof. exact (eq_refl (term1376 _90768 _90775 f t u x)). Qed.
Lemma lem3500504 {_90768 _90775 : Type'} (x : _90775 -> _90768) (x' : _90775) : (x x') = (x x').
Proof. exact (eq_refl (x x')). Qed.
Lemma lem3500505 {_90768 _90775 : Type'} (f : _90768 -> _90775) (t : _90768 -> Prop) (u : _90775 -> Prop) (x : _90775 -> _90768) (x' : _90775) : (term1384 _90768 _90775 f t u x x') = (term1385 _90768 _90775 f t u x x').
Proof. exact (MK_COMB (@lem3500503 _90768 _90775 f t u x') (@lem3500504 _90768 _90775 x x')). Qed.
Lemma lem3500506 {_90768 _90775 : Type'} (f : _90768 -> _90775) (t : _90768 -> Prop) (x : _90775 -> _90768) (u : _90775 -> Prop) (x' : _90775) : (term1385 _90768 _90775 f t u x x') = (term1386 _90768 _90775 f t x u x').
Proof. exact (eq_refl (term1385 _90768 _90775 f t u x x')). Qed.
Lemma lem3500507 {_90768 _90775 : Type'} (f : _90768 -> _90775) (t : _90768 -> Prop) (x : _90775 -> _90768) (u : _90775 -> Prop) (x' : _90775) : (term1384 _90768 _90775 f t u x x') = (term1386 _90768 _90775 f t x u x').
Proof. exact (TRANS (@lem3500505 _90768 _90775 f t u x x') (@lem3500506 _90768 _90775 f t x u x')). Qed.
Lemma lem3500508 {_90768 _90775 : Type'} (f : _90768 -> _90775) (t : _90768 -> Prop) (x : _90775 -> _90768) (u : _90775 -> Prop) : (term1387 _90768 _90775 f t u x) = (term1388 _90768 _90775 f t x u).
Proof. exact (fun_ext (fun x' : _90775 => @lem3500507 _90768 _90775 f t x u x')). Qed.
Lemma lem3500509 {_90775 : Type'} : (@all _90775) = (@all _90775).
Proof. exact (eq_refl (@all _90775)). Qed.
Lemma lem3500510 {_90768 _90775 : Type'} (f : _90768 -> _90775) (t : _90768 -> Prop) (x : _90775 -> _90768) (u : _90775 -> Prop) : (term1389 _90768 _90775 f t u x) = (term1390 _90768 _90775 f t x u).
Proof. exact (MK_COMB (@lem3500509 _90775) (@lem3500508 _90768 _90775 f t x u)). Qed.
Lemma lem3500511 {_90768 _90775 : Type'} (f : _90768 -> _90775) (t : _90768 -> Prop) (u : _90775 -> Prop) : (term1391 _90768 _90775 f t u) = (term1392 _90768 _90775 f t u).
Proof. exact (fun_ext (fun x : _90775 -> _90768 => @lem3500510 _90768 _90775 f t x u)). Qed.
Lemma lem3500512 {_90768 _90775 : Type'} : (@ex (_90775 -> _90768)) = (@ex (_90775 -> _90768)).
Proof. exact (eq_refl (@ex (_90775 -> _90768))). Qed.
Lemma lem3500513 {_90768 _90775 : Type'} (f : _90768 -> _90775) (t : _90768 -> Prop) (u : _90775 -> Prop) : (term1374 _90768 _90775 f t u) = (term1393 _90768 _90775 f t u).
Proof. exact (MK_COMB (@lem3500512 _90768 _90775) (@lem3500511 _90768 _90775 f t u)). Qed.
Lemma lem3500514 {_90768 _90775 : Type'} (f : _90768 -> _90775) (t : _90768 -> Prop) (u : _90775 -> Prop) : ((term1373 _90768 _90775 f t u) = (term1374 _90768 _90775 f t u)) = ((term1372 _90768 _90775 f t u) = (term1393 _90768 _90775 f t u)).
Proof. exact (MK_COMB (@lem3500502 _90768 _90775 f t u) (@lem3500513 _90768 _90775 f t u)). Qed.
Lemma lem3500515 {_90768 _90775 : Type'} (f : _90768 -> _90775) (t : _90768 -> Prop) (u : _90775 -> Prop) : (term1372 _90768 _90775 f t u) = (term1393 _90768 _90775 f t u).
Proof. exact (EQ_MP (@lem3500514 _90768 _90775 f t u) (@lem3500489 _90768 _90775 f t u)). Qed.
Lemma lem3500516 {_90768 _90775 : Type'} (f : _90768 -> _90775) (t : _90768 -> Prop) (u : _90775 -> Prop) : (term1164 _90768 _90775 f t u) = (term1393 _90768 _90775 f t u).
Proof. exact (TRANS (@lem3500485 _90768 _90775 f t u) (@lem3500515 _90768 _90775 f t u)). Qed.
Lemma lem3500517 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem3500518 {_90768 _90775 : Type'} (f : _90768 -> _90775) (t : _90768 -> Prop) (u : _90775 -> Prop) : (term1166 _90768 _90775 f t u) = (term1394 _90768 _90775 f t u).
Proof. exact (MK_COMB (@lem3500517) (@lem3500516 _90768 _90775 f t u)). Qed.
Lemma lem3500519 {_90768 _90775 : Type'} (f : _90768 -> _90775) (t : _90768 -> Prop) (u : _90775 -> Prop) : (term1169 _90768 _90775 f t u) = (term1169 _90768 _90775 f t u).
Proof. exact (eq_refl (term1169 _90768 _90775 f t u)). Qed.
Lemma lem3500520 {_90768 _90775 : Type'} (f : _90768 -> _90775) (t : _90768 -> Prop) (u : _90775 -> Prop) : (term1170 _90768 _90775 f t u) = (term1395 _90768 _90775 f t u).
Proof. exact (MK_COMB (@lem3500518 _90768 _90775 f t u) (@lem3500519 _90768 _90775 f t u)). Qed.
Lemma lem3500522 {A : Type'} (P : A -> Prop) (Q : Prop) : (term398 A P Q) = (term399 A P Q).
Proof. exact (EQ_MP (@lem18923 A P Q) (@lem18922 A P Q)). Qed.
Lemma lem3500523 {_90768 _90775 : Type'} (P : type805 _90768 _90775) (Q : Prop) : (term1311 _90768 _90775 P Q) = (term1312 _90768 _90775 P Q).
Proof. exact (@lem3500522 (_90775 -> _90768) P Q). Qed.
Lemma lem3500524 {_90768 _90775 : Type'} (f : _90768 -> _90775) (t : _90768 -> Prop) (u : _90775 -> Prop) : (term1396 _90768 _90775 f t u) = (term1397 _90768 _90775 f t u).
Proof. exact (@lem3500523 _90768 _90775 (term1392 _90768 _90775 f t u) (term1169 _90768 _90775 f t u)). Qed.
Lemma lem3500525 {_90768 _90775 : Type'} (f : _90768 -> _90775) (t : _90768 -> Prop) (x : _90775 -> _90768) (u : _90775 -> Prop) : (term1398 _90768 _90775 f t u x) = (term1390 _90768 _90775 f t x u).
Proof. exact (eq_refl (term1398 _90768 _90775 f t u x)). Qed.
Lemma lem3500526 {_90768 _90775 : Type'} (f : _90768 -> _90775) (t : _90768 -> Prop) (u : _90775 -> Prop) : (term1399 _90768 _90775 f t u) = (term1392 _90768 _90775 f t u).
Proof. exact (fun_ext (fun x : _90775 -> _90768 => @lem3500525 _90768 _90775 f t x u)). Qed.
Lemma lem3500527 {_90768 _90775 : Type'} : (@ex (_90775 -> _90768)) = (@ex (_90775 -> _90768)).
Proof. exact (eq_refl (@ex (_90775 -> _90768))). Qed.
Lemma lem3500528 {_90768 _90775 : Type'} (f : _90768 -> _90775) (t : _90768 -> Prop) (u : _90775 -> Prop) : (term1400 _90768 _90775 f t u) = (term1393 _90768 _90775 f t u).
Proof. exact (MK_COMB (@lem3500527 _90768 _90775) (@lem3500526 _90768 _90775 f t u)). Qed.
Lemma lem3500529 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem3500530 {_90768 _90775 : Type'} (f : _90768 -> _90775) (t : _90768 -> Prop) (u : _90775 -> Prop) : (term1401 _90768 _90775 f t u) = (term1394 _90768 _90775 f t u).
Proof. exact (MK_COMB (@lem3500529) (@lem3500528 _90768 _90775 f t u)). Qed.
Lemma lem3500531 {_90768 _90775 : Type'} (f : _90768 -> _90775) (t : _90768 -> Prop) (u : _90775 -> Prop) : (term1169 _90768 _90775 f t u) = (term1169 _90768 _90775 f t u).
Proof. exact (eq_refl (term1169 _90768 _90775 f t u)). Qed.
Lemma lem3500532 {_90768 _90775 : Type'} (f : _90768 -> _90775) (t : _90768 -> Prop) (u : _90775 -> Prop) : (term1396 _90768 _90775 f t u) = (term1395 _90768 _90775 f t u).
Proof. exact (MK_COMB (@lem3500530 _90768 _90775 f t u) (@lem3500531 _90768 _90775 f t u)). Qed.
Lemma lem3500533 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem3500534 {_90768 _90775 : Type'} (f : _90768 -> _90775) (t : _90768 -> Prop) (u : _90775 -> Prop) : (term1402 _90768 _90775 f t u) = (term1403 _90768 _90775 f t u).
Proof. exact (MK_COMB (@lem3500533) (@lem3500532 _90768 _90775 f t u)). Qed.
Lemma lem3500535 {_90768 _90775 : Type'} (f : _90768 -> _90775) (t : _90768 -> Prop) (x : _90775 -> _90768) (u : _90775 -> Prop) : (term1398 _90768 _90775 f t u x) = (term1390 _90768 _90775 f t x u).
Proof. exact (eq_refl (term1398 _90768 _90775 f t u x)). Qed.
Lemma lem3500536 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem3500537 {_90768 _90775 : Type'} (f : _90768 -> _90775) (t : _90768 -> Prop) (x : _90775 -> _90768) (u : _90775 -> Prop) : (term1404 _90768 _90775 f t u x) = (term1405 _90768 _90775 f t x u).
Proof. exact (MK_COMB (@lem3500536) (@lem3500535 _90768 _90775 f t x u)). Qed.
Lemma lem3500538 {_90768 _90775 : Type'} (f : _90768 -> _90775) (t : _90768 -> Prop) (u : _90775 -> Prop) : (term1169 _90768 _90775 f t u) = (term1169 _90768 _90775 f t u).
Proof. exact (eq_refl (term1169 _90768 _90775 f t u)). Qed.
Lemma lem3500539 {_90768 _90775 : Type'} (x : _90775 -> _90768) (f : _90768 -> _90775) (t : _90768 -> Prop) (u : _90775 -> Prop) : (term1406 _90768 _90775 x f t u) = (term1407 _90768 _90775 x f t u).
Proof. exact (MK_COMB (@lem3500537 _90768 _90775 f t x u) (@lem3500538 _90768 _90775 f t u)). Qed.
Lemma lem3500540 {_90768 _90775 : Type'} (f : _90768 -> _90775) (t : _90768 -> Prop) (u : _90775 -> Prop) : (term1408 _90768 _90775 f t u) = (term1409 _90768 _90775 f t u).
Proof. exact (fun_ext (fun x : _90775 -> _90768 => @lem3500539 _90768 _90775 x f t u)). Qed.
Lemma lem3500541 {_90768 _90775 : Type'} : (@ex (_90775 -> _90768)) = (@ex (_90775 -> _90768)).
Proof. exact (eq_refl (@ex (_90775 -> _90768))). Qed.
Lemma lem3500542 {_90768 _90775 : Type'} (f : _90768 -> _90775) (t : _90768 -> Prop) (u : _90775 -> Prop) : (term1397 _90768 _90775 f t u) = (term1410 _90768 _90775 f t u).
Proof. exact (MK_COMB (@lem3500541 _90768 _90775) (@lem3500540 _90768 _90775 f t u)). Qed.
Lemma lem3500543 {_90768 _90775 : Type'} (f : _90768 -> _90775) (t : _90768 -> Prop) (u : _90775 -> Prop) : ((term1396 _90768 _90775 f t u) = (term1397 _90768 _90775 f t u)) = ((term1395 _90768 _90775 f t u) = (term1410 _90768 _90775 f t u)).
Proof. exact (MK_COMB (@lem3500534 _90768 _90775 f t u) (@lem3500542 _90768 _90775 f t u)). Qed.
Lemma lem3500544 {_90768 _90775 : Type'} (f : _90768 -> _90775) (t : _90768 -> Prop) (u : _90775 -> Prop) : (term1395 _90768 _90775 f t u) = (term1410 _90768 _90775 f t u).
Proof. exact (EQ_MP (@lem3500543 _90768 _90775 f t u) (@lem3500524 _90768 _90775 f t u)). Qed.
Lemma lem3500545 {_90768 _90775 : Type'} (f : _90768 -> _90775) (t : _90768 -> Prop) (u : _90775 -> Prop) : (term1170 _90768 _90775 f t u) = (term1410 _90768 _90775 f t u).
Proof. exact (TRANS (@lem3500520 _90768 _90775 f t u) (@lem3500544 _90768 _90775 f t u)). Qed.
Lemma lem3500546 {_90768 _90775 : Type'} (s : _90768 -> Prop) (f : _90768 -> _90775) (t : _90768 -> Prop) (u : _90775 -> Prop) : (term1171 _90768 _90775 s f t u) = (term1411 _90768 _90775 s f t u).
Proof. exact (MK_COMB (@lem3500458 _90768 _90775 s f t) (@lem3500545 _90768 _90775 f t u)). Qed.
Lemma lem3500548 {A : Type'} (P : A -> Prop) (Q : Prop) : (term398 A P Q) = (term399 A P Q).
Proof. exact (EQ_MP (@lem18923 A P Q) (@lem18922 A P Q)). Qed.
Lemma lem3500549 {_90768 _90775 : Type'} (P : type805 _90768 _90775) (Q : Prop) : (term1311 _90768 _90775 P Q) = (term1312 _90768 _90775 P Q).
Proof. exact (@lem3500548 (_90775 -> _90768) P Q). Qed.
Lemma lem3500550 {_90768 _90775 : Type'} (s : _90768 -> Prop) (f : _90768 -> _90775) (t : _90768 -> Prop) (u : _90775 -> Prop) : (term1412 _90768 _90775 s f t u) = (term1413 _90768 _90775 s f t u).
Proof. exact (@lem3500549 _90768 _90775 (term1356 _90768 _90775 s f t) (term1410 _90768 _90775 f t u)). Qed.
Lemma lem3500551 {_90768 _90775 : Type'} (x : _90775 -> _90768) (s : _90768 -> Prop) (f : _90768 -> _90775) (t : _90768 -> Prop) : (term1414 _90768 _90775 s f t x) = (term1355 _90768 _90775 x s f t).
Proof. exact (eq_refl (term1414 _90768 _90775 s f t x)). Qed.
Lemma lem3500552 {_90768 _90775 : Type'} (s : _90768 -> Prop) (f : _90768 -> _90775) (t : _90768 -> Prop) : (term1415 _90768 _90775 s f t) = (term1356 _90768 _90775 s f t).
Proof. exact (fun_ext (fun x : _90775 -> _90768 => @lem3500551 _90768 _90775 x s f t)). Qed.
Lemma lem3500553 {_90768 _90775 : Type'} : (@ex (_90775 -> _90768)) = (@ex (_90775 -> _90768)).
Proof. exact (eq_refl (@ex (_90775 -> _90768))). Qed.
Lemma lem3500554 {_90768 _90775 : Type'} (s : _90768 -> Prop) (f : _90768 -> _90775) (t : _90768 -> Prop) : (term1416 _90768 _90775 s f t) = (term1357 _90768 _90775 s f t).
Proof. exact (MK_COMB (@lem3500553 _90768 _90775) (@lem3500552 _90768 _90775 s f t)). Qed.
Lemma lem3500555 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem3500556 {_90768 _90775 : Type'} (s : _90768 -> Prop) (f : _90768 -> _90775) (t : _90768 -> Prop) : (term1417 _90768 _90775 s f t) = (term1358 _90768 _90775 s f t).
Proof. exact (MK_COMB (@lem3500555) (@lem3500554 _90768 _90775 s f t)). Qed.
Lemma lem3500557 {_90768 _90775 : Type'} (f : _90768 -> _90775) (t : _90768 -> Prop) (u : _90775 -> Prop) : (term1410 _90768 _90775 f t u) = (term1410 _90768 _90775 f t u).
Proof. exact (eq_refl (term1410 _90768 _90775 f t u)). Qed.
Lemma lem3500558 {_90768 _90775 : Type'} (s : _90768 -> Prop) (f : _90768 -> _90775) (t : _90768 -> Prop) (u : _90775 -> Prop) : (term1412 _90768 _90775 s f t u) = (term1411 _90768 _90775 s f t u).
Proof. exact (MK_COMB (@lem3500556 _90768 _90775 s f t) (@lem3500557 _90768 _90775 f t u)). Qed.
Lemma lem3500559 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem3500560 {_90768 _90775 : Type'} (s : _90768 -> Prop) (f : _90768 -> _90775) (t : _90768 -> Prop) (u : _90775 -> Prop) : (term1418 _90768 _90775 s f t u) = (term1419 _90768 _90775 s f t u).
Proof. exact (MK_COMB (@lem3500559) (@lem3500558 _90768 _90775 s f t u)). Qed.
Lemma lem3500561 {_90768 _90775 : Type'} (x : _90775 -> _90768) (s : _90768 -> Prop) (f : _90768 -> _90775) (t : _90768 -> Prop) : (term1414 _90768 _90775 s f t x) = (term1355 _90768 _90775 x s f t).
Proof. exact (eq_refl (term1414 _90768 _90775 s f t x)). Qed.
Lemma lem3500562 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem3500563 {_90768 _90775 : Type'} (x : _90775 -> _90768) (s : _90768 -> Prop) (f : _90768 -> _90775) (t : _90768 -> Prop) : (term1420 _90768 _90775 s f t x) = (term1421 _90768 _90775 x s f t).
Proof. exact (MK_COMB (@lem3500562) (@lem3500561 _90768 _90775 x s f t)). Qed.
Lemma lem3500564 {_90768 _90775 : Type'} (f : _90768 -> _90775) (t : _90768 -> Prop) (u : _90775 -> Prop) : (term1410 _90768 _90775 f t u) = (term1410 _90768 _90775 f t u).
Proof. exact (eq_refl (term1410 _90768 _90775 f t u)). Qed.
Lemma lem3500565 {_90768 _90775 : Type'} (x : _90775 -> _90768) (s : _90768 -> Prop) (f : _90768 -> _90775) (t : _90768 -> Prop) (u : _90775 -> Prop) : (term1422 _90768 _90775 s x f t u) = (term1423 _90768 _90775 x s f t u).
Proof. exact (MK_COMB (@lem3500563 _90768 _90775 x s f t) (@lem3500564 _90768 _90775 f t u)). Qed.
Lemma lem3500566 {_90768 _90775 : Type'} (s : _90768 -> Prop) (f : _90768 -> _90775) (t : _90768 -> Prop) (u : _90775 -> Prop) : (term1424 _90768 _90775 s f t u) = (term1425 _90768 _90775 s f t u).
Proof. exact (fun_ext (fun x : _90775 -> _90768 => @lem3500565 _90768 _90775 x s f t u)). Qed.
Lemma lem3500567 {_90768 _90775 : Type'} : (@ex (_90775 -> _90768)) = (@ex (_90775 -> _90768)).
Proof. exact (eq_refl (@ex (_90775 -> _90768))). Qed.
Lemma lem3500568 {_90768 _90775 : Type'} (s : _90768 -> Prop) (f : _90768 -> _90775) (t : _90768 -> Prop) (u : _90775 -> Prop) : (term1413 _90768 _90775 s f t u) = (term1426 _90768 _90775 s f t u).
Proof. exact (MK_COMB (@lem3500567 _90768 _90775) (@lem3500566 _90768 _90775 s f t u)). Qed.
Lemma lem3500569 {_90768 _90775 : Type'} (s : _90768 -> Prop) (f : _90768 -> _90775) (t : _90768 -> Prop) (u : _90775 -> Prop) : ((term1412 _90768 _90775 s f t u) = (term1413 _90768 _90775 s f t u)) = ((term1411 _90768 _90775 s f t u) = (term1426 _90768 _90775 s f t u)).
Proof. exact (MK_COMB (@lem3500560 _90768 _90775 s f t u) (@lem3500568 _90768 _90775 s f t u)). Qed.
Lemma lem3500570 {_90768 _90775 : Type'} (s : _90768 -> Prop) (f : _90768 -> _90775) (t : _90768 -> Prop) (u : _90775 -> Prop) : (term1411 _90768 _90775 s f t u) = (term1426 _90768 _90775 s f t u).
Proof. exact (EQ_MP (@lem3500569 _90768 _90775 s f t u) (@lem3500550 _90768 _90775 s f t u)). Qed.
Lemma lem3500572 {A : Type'} (P : A -> Prop) (Q : Prop) : (term398 A P Q) = (term399 A P Q).
Proof. exact (EQ_MP (@lem18923 A P Q) (@lem18922 A P Q)). Qed.
Lemma lem3500573 {_90768 _90775 : Type'} (P : type805 _90768 _90775) (Q : Prop) : (term1311 _90768 _90775 P Q) = (term1312 _90768 _90775 P Q).
Proof. exact (@lem3500572 (_90775 -> _90768) P Q). Qed.
Lemma lem3500574 {_90768 _90775 : Type'} (x : _90775 -> _90768) (s : _90768 -> Prop) (f : _90768 -> _90775) (t : _90768 -> Prop) (u : _90775 -> Prop) : (term1427 _90768 _90775 x s f t u) = (term1428 _90768 _90775 x s f t u).
Proof. exact (@lem3500573 _90768 _90775 (term1354 _90768 _90775 x s f t) (term1410 _90768 _90775 f t u)). Qed.
Lemma lem3500575 {_90768 _90775 : Type'} (x : _90775 -> _90768) (s : _90768 -> Prop) (x' : _90775 -> _90768) (f : _90768 -> _90775) (t : _90768 -> Prop) : (term1429 _90768 _90775 x s f t x') = (term1353 _90768 _90775 x s x' f t).
Proof. exact (eq_refl (term1429 _90768 _90775 x s f t x')). Qed.
Lemma lem3500576 {_90768 _90775 : Type'} (x : _90775 -> _90768) (s : _90768 -> Prop) (f : _90768 -> _90775) (t : _90768 -> Prop) : (term1430 _90768 _90775 x s f t) = (term1354 _90768 _90775 x s f t).
Proof. exact (fun_ext (fun x' : _90775 -> _90768 => @lem3500575 _90768 _90775 x s x' f t)). Qed.
Lemma lem3500577 {_90768 _90775 : Type'} : (@ex (_90775 -> _90768)) = (@ex (_90775 -> _90768)).
Proof. exact (eq_refl (@ex (_90775 -> _90768))). Qed.
Lemma lem3500578 {_90768 _90775 : Type'} (x : _90775 -> _90768) (s : _90768 -> Prop) (f : _90768 -> _90775) (t : _90768 -> Prop) : (term1431 _90768 _90775 x s f t) = (term1355 _90768 _90775 x s f t).
Proof. exact (MK_COMB (@lem3500577 _90768 _90775) (@lem3500576 _90768 _90775 x s f t)). Qed.
Lemma lem3500579 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem3500580 {_90768 _90775 : Type'} (x : _90775 -> _90768) (s : _90768 -> Prop) (f : _90768 -> _90775) (t : _90768 -> Prop) : (term1432 _90768 _90775 x s f t) = (term1421 _90768 _90775 x s f t).
Proof. exact (MK_COMB (@lem3500579) (@lem3500578 _90768 _90775 x s f t)). Qed.
Lemma lem3500581 {_90768 _90775 : Type'} (f : _90768 -> _90775) (t : _90768 -> Prop) (u : _90775 -> Prop) : (term1410 _90768 _90775 f t u) = (term1410 _90768 _90775 f t u).
Proof. exact (eq_refl (term1410 _90768 _90775 f t u)). Qed.
Lemma lem3500582 {_90768 _90775 : Type'} (x : _90775 -> _90768) (s : _90768 -> Prop) (f : _90768 -> _90775) (t : _90768 -> Prop) (u : _90775 -> Prop) : (term1427 _90768 _90775 x s f t u) = (term1423 _90768 _90775 x s f t u).
Proof. exact (MK_COMB (@lem3500580 _90768 _90775 x s f t) (@lem3500581 _90768 _90775 f t u)). Qed.
Lemma lem3500583 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem3500584 {_90768 _90775 : Type'} (x : _90775 -> _90768) (s : _90768 -> Prop) (f : _90768 -> _90775) (t : _90768 -> Prop) (u : _90775 -> Prop) : (term1433 _90768 _90775 x s f t u) = (term1434 _90768 _90775 x s f t u).
Proof. exact (MK_COMB (@lem3500583) (@lem3500582 _90768 _90775 x s f t u)). Qed.
Lemma lem3500585 {_90768 _90775 : Type'} (x : _90775 -> _90768) (s : _90768 -> Prop) (x' : _90775 -> _90768) (f : _90768 -> _90775) (t : _90768 -> Prop) : (term1429 _90768 _90775 x s f t x') = (term1353 _90768 _90775 x s x' f t).
Proof. exact (eq_refl (term1429 _90768 _90775 x s f t x')). Qed.
Lemma lem3500586 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem3500587 {_90768 _90775 : Type'} (x : _90775 -> _90768) (s : _90768 -> Prop) (x' : _90775 -> _90768) (f : _90768 -> _90775) (t : _90768 -> Prop) : (term1435 _90768 _90775 x s f t x') = (term1436 _90768 _90775 x s x' f t).
Proof. exact (MK_COMB (@lem3500586) (@lem3500585 _90768 _90775 x s x' f t)). Qed.
Lemma lem3500588 {_90768 _90775 : Type'} (f : _90768 -> _90775) (t : _90768 -> Prop) (u : _90775 -> Prop) : (term1410 _90768 _90775 f t u) = (term1410 _90768 _90775 f t u).
Proof. exact (eq_refl (term1410 _90768 _90775 f t u)). Qed.
Lemma lem3500589 {_90768 _90775 : Type'} (x : _90775 -> _90768) (s : _90768 -> Prop) (x' : _90775 -> _90768) (f : _90768 -> _90775) (t : _90768 -> Prop) (u : _90775 -> Prop) : (term1437 _90768 _90775 x s x' f t u) = (term1438 _90768 _90775 x s x' f t u).
Proof. exact (MK_COMB (@lem3500587 _90768 _90775 x s x' f t) (@lem3500588 _90768 _90775 f t u)). Qed.
Lemma lem3500590 {_90768 _90775 : Type'} (x : _90775 -> _90768) (s : _90768 -> Prop) (f : _90768 -> _90775) (t : _90768 -> Prop) (u : _90775 -> Prop) : (term1439 _90768 _90775 x s f t u) = (term1440 _90768 _90775 x s f t u).
Proof. exact (fun_ext (fun x' : _90775 -> _90768 => @lem3500589 _90768 _90775 x s x' f t u)). Qed.
Lemma lem3500591 {_90768 _90775 : Type'} : (@ex (_90775 -> _90768)) = (@ex (_90775 -> _90768)).
Proof. exact (eq_refl (@ex (_90775 -> _90768))). Qed.
Lemma lem3500592 {_90768 _90775 : Type'} (x : _90775 -> _90768) (s : _90768 -> Prop) (f : _90768 -> _90775) (t : _90768 -> Prop) (u : _90775 -> Prop) : (term1428 _90768 _90775 x s f t u) = (term1441 _90768 _90775 x s f t u).
Proof. exact (MK_COMB (@lem3500591 _90768 _90775) (@lem3500590 _90768 _90775 x s f t u)). Qed.
Lemma lem3500593 {_90768 _90775 : Type'} (x : _90775 -> _90768) (s : _90768 -> Prop) (f : _90768 -> _90775) (t : _90768 -> Prop) (u : _90775 -> Prop) : ((term1427 _90768 _90775 x s f t u) = (term1428 _90768 _90775 x s f t u)) = ((term1423 _90768 _90775 x s f t u) = (term1441 _90768 _90775 x s f t u)).
Proof. exact (MK_COMB (@lem3500584 _90768 _90775 x s f t u) (@lem3500592 _90768 _90775 x s f t u)). Qed.
Lemma lem3500594 {_90768 _90775 : Type'} (x : _90775 -> _90768) (s : _90768 -> Prop) (f : _90768 -> _90775) (t : _90768 -> Prop) (u : _90775 -> Prop) : (term1423 _90768 _90775 x s f t u) = (term1441 _90768 _90775 x s f t u).
Proof. exact (EQ_MP (@lem3500593 _90768 _90775 x s f t u) (@lem3500574 _90768 _90775 x s f t u)). Qed.
Lemma lem3500596 {A : Type'} (P : A -> Prop) (Q : Prop) : (term398 A P Q) = (term399 A P Q).
Proof. exact (EQ_MP (@lem18923 A P Q) (@lem18922 A P Q)). Qed.
Lemma lem3500597 {_90768 _90775 : Type'} (P : type805 _90768 _90775) (Q : Prop) : (term1311 _90768 _90775 P Q) = (term1312 _90768 _90775 P Q).
Proof. exact (@lem3500596 (_90775 -> _90768) P Q). Qed.
Lemma lem3500598 {_90768 _90775 : Type'} (x : _90775 -> _90768) (s : _90768 -> Prop) (x' : _90775 -> _90768) (f : _90768 -> _90775) (t : _90768 -> Prop) (u : _90775 -> Prop) : (term1442 _90768 _90775 x s x' f t u) = (term1443 _90768 _90775 x s x' f t u).
Proof. exact (@lem3500597 _90768 _90775 (term1352 _90768 _90775 x s x' f t) (term1410 _90768 _90775 f t u)). Qed.
Lemma lem3500599 {_90768 _90775 : Type'} (x : _90775 -> _90768) (s : _90768 -> Prop) (x' : _90775 -> _90768) (f : _90768 -> _90775) (t : _90768 -> Prop) (x'' : _90775 -> _90768) : (term1444 _90768 _90775 x s x' f t x'') = (term1350 _90768 _90775 x s x' f t x'').
Proof. exact (eq_refl (term1444 _90768 _90775 x s x' f t x'')). Qed.
Lemma lem3500600 {_90768 _90775 : Type'} (x : _90775 -> _90768) (s : _90768 -> Prop) (x' : _90775 -> _90768) (f : _90768 -> _90775) (t : _90768 -> Prop) : (term1445 _90768 _90775 x s x' f t) = (term1352 _90768 _90775 x s x' f t).
Proof. exact (fun_ext (fun x'' : _90775 -> _90768 => @lem3500599 _90768 _90775 x s x' f t x'')). Qed.
Lemma lem3500601 {_90768 _90775 : Type'} : (@ex (_90775 -> _90768)) = (@ex (_90775 -> _90768)).
Proof. exact (eq_refl (@ex (_90775 -> _90768))). Qed.
Lemma lem3500602 {_90768 _90775 : Type'} (x : _90775 -> _90768) (s : _90768 -> Prop) (x' : _90775 -> _90768) (f : _90768 -> _90775) (t : _90768 -> Prop) : (term1446 _90768 _90775 x s x' f t) = (term1353 _90768 _90775 x s x' f t).
Proof. exact (MK_COMB (@lem3500601 _90768 _90775) (@lem3500600 _90768 _90775 x s x' f t)). Qed.
Lemma lem3500603 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem3500604 {_90768 _90775 : Type'} (x : _90775 -> _90768) (s : _90768 -> Prop) (x' : _90775 -> _90768) (f : _90768 -> _90775) (t : _90768 -> Prop) : (term1447 _90768 _90775 x s x' f t) = (term1436 _90768 _90775 x s x' f t).
Proof. exact (MK_COMB (@lem3500603) (@lem3500602 _90768 _90775 x s x' f t)). Qed.
Lemma lem3500605 {_90768 _90775 : Type'} (f : _90768 -> _90775) (t : _90768 -> Prop) (u : _90775 -> Prop) : (term1410 _90768 _90775 f t u) = (term1410 _90768 _90775 f t u).
Proof. exact (eq_refl (term1410 _90768 _90775 f t u)). Qed.
Lemma lem3500606 {_90768 _90775 : Type'} (x : _90775 -> _90768) (s : _90768 -> Prop) (x' : _90775 -> _90768) (f : _90768 -> _90775) (t : _90768 -> Prop) (u : _90775 -> Prop) : (term1442 _90768 _90775 x s x' f t u) = (term1438 _90768 _90775 x s x' f t u).
Proof. exact (MK_COMB (@lem3500604 _90768 _90775 x s x' f t) (@lem3500605 _90768 _90775 f t u)). Qed.
Lemma lem3500607 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem3500608 {_90768 _90775 : Type'} (x : _90775 -> _90768) (s : _90768 -> Prop) (x' : _90775 -> _90768) (f : _90768 -> _90775) (t : _90768 -> Prop) (u : _90775 -> Prop) : (term1448 _90768 _90775 x s x' f t u) = (term1449 _90768 _90775 x s x' f t u).
Proof. exact (MK_COMB (@lem3500607) (@lem3500606 _90768 _90775 x s x' f t u)). Qed.
Lemma lem3500609 {_90768 _90775 : Type'} (x : _90775 -> _90768) (s : _90768 -> Prop) (x' : _90775 -> _90768) (f : _90768 -> _90775) (t : _90768 -> Prop) (x'' : _90775 -> _90768) : (term1444 _90768 _90775 x s x' f t x'') = (term1350 _90768 _90775 x s x' f t x'').
Proof. exact (eq_refl (term1444 _90768 _90775 x s x' f t x'')). Qed.
Lemma lem3500610 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem3500611 {_90768 _90775 : Type'} (x : _90775 -> _90768) (s : _90768 -> Prop) (x' : _90775 -> _90768) (f : _90768 -> _90775) (t : _90768 -> Prop) (x'' : _90775 -> _90768) : (term1450 _90768 _90775 x s x' f t x'') = (term1451 _90768 _90775 x s x' f t x'').
Proof. exact (MK_COMB (@lem3500610) (@lem3500609 _90768 _90775 x s x' f t x'')). Qed.
Lemma lem3500612 {_90768 _90775 : Type'} (f : _90768 -> _90775) (t : _90768 -> Prop) (u : _90775 -> Prop) : (term1410 _90768 _90775 f t u) = (term1410 _90768 _90775 f t u).
Proof. exact (eq_refl (term1410 _90768 _90775 f t u)). Qed.
Lemma lem3500613 {_90768 _90775 : Type'} (x : _90775 -> _90768) (s : _90768 -> Prop) (x' : _90775 -> _90768) (x'' : _90775 -> _90768) (f : _90768 -> _90775) (t : _90768 -> Prop) (u : _90775 -> Prop) : (term1452 _90768 _90775 x s x' x'' f t u) = (term1453 _90768 _90775 x s x' x'' f t u).
Proof. exact (MK_COMB (@lem3500611 _90768 _90775 x s x' f t x'') (@lem3500612 _90768 _90775 f t u)). Qed.
Lemma lem3500614 {_90768 _90775 : Type'} (x : _90775 -> _90768) (s : _90768 -> Prop) (x' : _90775 -> _90768) (f : _90768 -> _90775) (t : _90768 -> Prop) (u : _90775 -> Prop) : (term1454 _90768 _90775 x s x' f t u) = (term1455 _90768 _90775 x s x' f t u).
Proof. exact (fun_ext (fun x'' : _90775 -> _90768 => @lem3500613 _90768 _90775 x s x' x'' f t u)). Qed.
Lemma lem3500615 {_90768 _90775 : Type'} : (@ex (_90775 -> _90768)) = (@ex (_90775 -> _90768)).
Proof. exact (eq_refl (@ex (_90775 -> _90768))). Qed.
Lemma lem3500616 {_90768 _90775 : Type'} (x : _90775 -> _90768) (s : _90768 -> Prop) (x' : _90775 -> _90768) (f : _90768 -> _90775) (t : _90768 -> Prop) (u : _90775 -> Prop) : (term1443 _90768 _90775 x s x' f t u) = (term1456 _90768 _90775 x s x' f t u).
Proof. exact (MK_COMB (@lem3500615 _90768 _90775) (@lem3500614 _90768 _90775 x s x' f t u)). Qed.
Lemma lem3500617 {_90768 _90775 : Type'} (x : _90775 -> _90768) (s : _90768 -> Prop) (x' : _90775 -> _90768) (f : _90768 -> _90775) (t : _90768 -> Prop) (u : _90775 -> Prop) : ((term1442 _90768 _90775 x s x' f t u) = (term1443 _90768 _90775 x s x' f t u)) = ((term1438 _90768 _90775 x s x' f t u) = (term1456 _90768 _90775 x s x' f t u)).
Proof. exact (MK_COMB (@lem3500608 _90768 _90775 x s x' f t u) (@lem3500616 _90768 _90775 x s x' f t u)). Qed.
Lemma lem3500618 {_90768 _90775 : Type'} (x : _90775 -> _90768) (s : _90768 -> Prop) (x' : _90775 -> _90768) (f : _90768 -> _90775) (t : _90768 -> Prop) (u : _90775 -> Prop) : (term1438 _90768 _90775 x s x' f t u) = (term1456 _90768 _90775 x s x' f t u).
Proof. exact (EQ_MP (@lem3500617 _90768 _90775 x s x' f t u) (@lem3500598 _90768 _90775 x s x' f t u)). Qed.
Lemma lem3500620 {A : Type'} (P : Prop) (Q : A -> Prop) : (term415 A P Q) = (term416 A P Q).
Proof. exact (EQ_MP (@lem18929 A P Q) (@lem18928 A P Q)). Qed.
Lemma lem3500621 {_90768 _90775 : Type'} (P : Prop) (Q : type805 _90768 _90775) : (term1328 _90768 _90775 P Q) = (term1329 _90768 _90775 P Q).
Proof. exact (@lem3500620 (_90775 -> _90768) P Q). Qed.
Lemma lem3500622 {_90768 _90775 : Type'} (x : _90775 -> _90768) (s : _90768 -> Prop) (x' : _90775 -> _90768) (x'' : _90775 -> _90768) (f : _90768 -> _90775) (t : _90768 -> Prop) (u : _90775 -> Prop) : (term1457 _90768 _90775 x s x' x'' f t u) = (term1458 _90768 _90775 x s x' x'' f t u).
Proof. exact (@lem3500621 _90768 _90775 (term1350 _90768 _90775 x s x' f t x'') (term1409 _90768 _90775 f t u)). Qed.
Lemma lem3500623 {_90768 _90775 : Type'} (x : _90775 -> _90768) (f : _90768 -> _90775) (t : _90768 -> Prop) (u : _90775 -> Prop) : (term1459 _90768 _90775 f t u x) = (term1407 _90768 _90775 x f t u).
Proof. exact (eq_refl (term1459 _90768 _90775 f t u x)). Qed.
Lemma lem3500624 {_90768 _90775 : Type'} (f : _90768 -> _90775) (t : _90768 -> Prop) (u : _90775 -> Prop) : (term1460 _90768 _90775 f t u) = (term1409 _90768 _90775 f t u).
Proof. exact (fun_ext (fun x : _90775 -> _90768 => @lem3500623 _90768 _90775 x f t u)). Qed.
Lemma lem3500625 {_90768 _90775 : Type'} : (@ex (_90775 -> _90768)) = (@ex (_90775 -> _90768)).
Proof. exact (eq_refl (@ex (_90775 -> _90768))). Qed.
Lemma lem3500626 {_90768 _90775 : Type'} (f : _90768 -> _90775) (t : _90768 -> Prop) (u : _90775 -> Prop) : (term1461 _90768 _90775 f t u) = (term1410 _90768 _90775 f t u).
Proof. exact (MK_COMB (@lem3500625 _90768 _90775) (@lem3500624 _90768 _90775 f t u)). Qed.
Lemma lem3500627 {_90768 _90775 : Type'} (x : _90775 -> _90768) (s : _90768 -> Prop) (x' : _90775 -> _90768) (f : _90768 -> _90775) (t : _90768 -> Prop) (x'' : _90775 -> _90768) : (term1451 _90768 _90775 x s x' f t x'') = (term1451 _90768 _90775 x s x' f t x'').
Proof. exact (eq_refl (term1451 _90768 _90775 x s x' f t x'')). Qed.
Lemma lem3500628 {_90768 _90775 : Type'} (x : _90775 -> _90768) (s : _90768 -> Prop) (x' : _90775 -> _90768) (x'' : _90775 -> _90768) (f : _90768 -> _90775) (t : _90768 -> Prop) (u : _90775 -> Prop) : (term1457 _90768 _90775 x s x' x'' f t u) = (term1453 _90768 _90775 x s x' x'' f t u).
Proof. exact (MK_COMB (@lem3500627 _90768 _90775 x s x' f t x'') (@lem3500626 _90768 _90775 f t u)). Qed.
Lemma lem3500629 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem3500630 {_90768 _90775 : Type'} (x : _90775 -> _90768) (s : _90768 -> Prop) (x' : _90775 -> _90768) (x'' : _90775 -> _90768) (f : _90768 -> _90775) (t : _90768 -> Prop) (u : _90775 -> Prop) : (term1462 _90768 _90775 x s x' x'' f t u) = (term1463 _90768 _90775 x s x' x'' f t u).
Proof. exact (MK_COMB (@lem3500629) (@lem3500628 _90768 _90775 x s x' x'' f t u)). Qed.
Lemma lem3500631 {_90768 _90775 : Type'} (x''' : _90775 -> _90768) (f : _90768 -> _90775) (t : _90768 -> Prop) (u : _90775 -> Prop) : (term1459 _90768 _90775 f t u x''') = (term1407 _90768 _90775 x''' f t u).
Proof. exact (eq_refl (term1459 _90768 _90775 f t u x''')). Qed.
Lemma lem3500632 {_90768 _90775 : Type'} (x : _90775 -> _90768) (s : _90768 -> Prop) (x' : _90775 -> _90768) (f : _90768 -> _90775) (t : _90768 -> Prop) (x'' : _90775 -> _90768) : (term1451 _90768 _90775 x s x' f t x'') = (term1451 _90768 _90775 x s x' f t x'').
Proof. exact (eq_refl (term1451 _90768 _90775 x s x' f t x'')). Qed.
Lemma lem3500633 {_90768 _90775 : Type'} (x : _90775 -> _90768) (s : _90768 -> Prop) (x' : _90775 -> _90768) (x'' : _90775 -> _90768) (x''' : _90775 -> _90768) (f : _90768 -> _90775) (t : _90768 -> Prop) (u : _90775 -> Prop) : (term1464 _90768 _90775 x s x' x'' f t u x''') = (term1465 _90768 _90775 x s x' x'' x''' f t u).
Proof. exact (MK_COMB (@lem3500632 _90768 _90775 x s x' f t x'') (@lem3500631 _90768 _90775 x''' f t u)). Qed.
Lemma lem3500634 {_90768 _90775 : Type'} (x : _90775 -> _90768) (s : _90768 -> Prop) (x' : _90775 -> _90768) (x'' : _90775 -> _90768) (f : _90768 -> _90775) (t : _90768 -> Prop) (u : _90775 -> Prop) : (term1466 _90768 _90775 x s x' x'' f t u) = (term1467 _90768 _90775 x s x' x'' f t u).
Proof. exact (fun_ext (fun x''' : _90775 -> _90768 => @lem3500633 _90768 _90775 x s x' x'' x''' f t u)). Qed.
Lemma lem3500635 {_90768 _90775 : Type'} : (@ex (_90775 -> _90768)) = (@ex (_90775 -> _90768)).
Proof. exact (eq_refl (@ex (_90775 -> _90768))). Qed.
Lemma lem3500636 {_90768 _90775 : Type'} (x : _90775 -> _90768) (s : _90768 -> Prop) (x' : _90775 -> _90768) (x'' : _90775 -> _90768) (f : _90768 -> _90775) (t : _90768 -> Prop) (u : _90775 -> Prop) : (term1458 _90768 _90775 x s x' x'' f t u) = (term1468 _90768 _90775 x s x' x'' f t u).
Proof. exact (MK_COMB (@lem3500635 _90768 _90775) (@lem3500634 _90768 _90775 x s x' x'' f t u)). Qed.
Lemma lem3500637 {_90768 _90775 : Type'} (x : _90775 -> _90768) (s : _90768 -> Prop) (x' : _90775 -> _90768) (x'' : _90775 -> _90768) (f : _90768 -> _90775) (t : _90768 -> Prop) (u : _90775 -> Prop) : ((term1457 _90768 _90775 x s x' x'' f t u) = (term1458 _90768 _90775 x s x' x'' f t u)) = ((term1453 _90768 _90775 x s x' x'' f t u) = (term1468 _90768 _90775 x s x' x'' f t u)).
Proof. exact (MK_COMB (@lem3500630 _90768 _90775 x s x' x'' f t u) (@lem3500636 _90768 _90775 x s x' x'' f t u)). Qed.
Lemma lem3500638 {_90768 _90775 : Type'} (x : _90775 -> _90768) (s : _90768 -> Prop) (x' : _90775 -> _90768) (x'' : _90775 -> _90768) (f : _90768 -> _90775) (t : _90768 -> Prop) (u : _90775 -> Prop) : (term1453 _90768 _90775 x s x' x'' f t u) = (term1468 _90768 _90775 x s x' x'' f t u).
Proof. exact (EQ_MP (@lem3500637 _90768 _90775 x s x' x'' f t u) (@lem3500622 _90768 _90775 x s x' x'' f t u)). Qed.
Lemma lem3500639 {_90768 _90775 : Type'} (x : _90775 -> _90768) (s : _90768 -> Prop) (x' : _90775 -> _90768) (f : _90768 -> _90775) (t : _90768 -> Prop) (u : _90775 -> Prop) : (term1455 _90768 _90775 x s x' f t u) = (term1469 _90768 _90775 x s x' f t u).
Proof. exact (fun_ext (fun x'' : _90775 -> _90768 => @lem3500638 _90768 _90775 x s x' x'' f t u)). Qed.
Lemma lem3500640 {_90768 _90775 : Type'} : (@ex (_90775 -> _90768)) = (@ex (_90775 -> _90768)).
Proof. exact (eq_refl (@ex (_90775 -> _90768))). Qed.
Lemma lem3500641 {_90768 _90775 : Type'} (x : _90775 -> _90768) (s : _90768 -> Prop) (x' : _90775 -> _90768) (f : _90768 -> _90775) (t : _90768 -> Prop) (u : _90775 -> Prop) : (term1456 _90768 _90775 x s x' f t u) = (term1470 _90768 _90775 x s x' f t u).
Proof. exact (MK_COMB (@lem3500640 _90768 _90775) (@lem3500639 _90768 _90775 x s x' f t u)). Qed.
Lemma lem3500642 {_90768 _90775 : Type'} (x : _90775 -> _90768) (s : _90768 -> Prop) (x' : _90775 -> _90768) (f : _90768 -> _90775) (t : _90768 -> Prop) (u : _90775 -> Prop) : (term1438 _90768 _90775 x s x' f t u) = (term1470 _90768 _90775 x s x' f t u).
Proof. exact (TRANS (@lem3500618 _90768 _90775 x s x' f t u) (@lem3500641 _90768 _90775 x s x' f t u)). Qed.
Lemma lem3500643 {_90768 _90775 : Type'} (x : _90775 -> _90768) (s : _90768 -> Prop) (f : _90768 -> _90775) (t : _90768 -> Prop) (u : _90775 -> Prop) : (term1440 _90768 _90775 x s f t u) = (term1471 _90768 _90775 x s f t u).
Proof. exact (fun_ext (fun x' : _90775 -> _90768 => @lem3500642 _90768 _90775 x s x' f t u)). Qed.
Lemma lem3500644 {_90768 _90775 : Type'} : (@ex (_90775 -> _90768)) = (@ex (_90775 -> _90768)).
Proof. exact (eq_refl (@ex (_90775 -> _90768))). Qed.
Lemma lem3500645 {_90768 _90775 : Type'} (x : _90775 -> _90768) (s : _90768 -> Prop) (f : _90768 -> _90775) (t : _90768 -> Prop) (u : _90775 -> Prop) : (term1441 _90768 _90775 x s f t u) = (term1472 _90768 _90775 x s f t u).
Proof. exact (MK_COMB (@lem3500644 _90768 _90775) (@lem3500643 _90768 _90775 x s f t u)). Qed.
Lemma lem3500646 {_90768 _90775 : Type'} (x : _90775 -> _90768) (s : _90768 -> Prop) (f : _90768 -> _90775) (t : _90768 -> Prop) (u : _90775 -> Prop) : (term1423 _90768 _90775 x s f t u) = (term1472 _90768 _90775 x s f t u).
Proof. exact (TRANS (@lem3500594 _90768 _90775 x s f t u) (@lem3500645 _90768 _90775 x s f t u)). Qed.
Lemma lem3500647 {_90768 _90775 : Type'} (s : _90768 -> Prop) (f : _90768 -> _90775) (t : _90768 -> Prop) (u : _90775 -> Prop) : (term1425 _90768 _90775 s f t u) = (term1473 _90768 _90775 s f t u).
Proof. exact (fun_ext (fun x : _90775 -> _90768 => @lem3500646 _90768 _90775 x s f t u)). Qed.
Lemma lem3500648 {_90768 _90775 : Type'} : (@ex (_90775 -> _90768)) = (@ex (_90775 -> _90768)).
Proof. exact (eq_refl (@ex (_90775 -> _90768))). Qed.
Lemma lem3500649 {_90768 _90775 : Type'} (s : _90768 -> Prop) (f : _90768 -> _90775) (t : _90768 -> Prop) (u : _90775 -> Prop) : (term1426 _90768 _90775 s f t u) = (term1474 _90768 _90775 s f t u).
Proof. exact (MK_COMB (@lem3500648 _90768 _90775) (@lem3500647 _90768 _90775 s f t u)). Qed.
Lemma lem3500650 {_90768 _90775 : Type'} (s : _90768 -> Prop) (f : _90768 -> _90775) (t : _90768 -> Prop) (u : _90775 -> Prop) : (term1411 _90768 _90775 s f t u) = (term1474 _90768 _90775 s f t u).
Proof. exact (TRANS (@lem3500570 _90768 _90775 s f t u) (@lem3500649 _90768 _90775 s f t u)). Qed.
Lemma lem3500651 {_90768 _90775 : Type'} (s : _90768 -> Prop) (f : _90768 -> _90775) (t : _90768 -> Prop) (u : _90775 -> Prop) : (term1171 _90768 _90775 s f t u) = (term1474 _90768 _90775 s f t u).
Proof. exact (TRANS (@lem3500546 _90768 _90775 s f t u) (@lem3500650 _90768 _90775 s f t u)). Qed.
Lemma lem3500652 {_90768 _90775 : Type'} (s : _90768 -> Prop) (f : _90768 -> _90775) (t : _90768 -> Prop) (u : _90775 -> Prop) : (term1129 _90768 _90775 s f t u) = (term1474 _90768 _90775 s f t u).
Proof. exact (TRANS (@lem3500159 _90768 _90775 s f t u) (@lem3500651 _90768 _90775 s f t u)). Qed.
Lemma lem3500653 {_90768 _90775 : Type'} (s : _90768 -> Prop) (f : _90768 -> _90775) (t : _90768 -> Prop) (u : _90775 -> Prop) : (term1056 _90768 _90775 s f t u) = (term1474 _90768 _90775 s f t u).
Proof. exact (TRANS (@lem3499590 _90768 _90775 s f t u) (@lem3500652 _90768 _90775 s f t u)). Qed.
Lemma lem3500654 {_90768 _90775 : Type'} (s : _90768 -> Prop) (f : _90768 -> _90775) (t : _90768 -> Prop) (u : _90775 -> Prop) (h1 : term1056 _90768 _90775 s f t u) : term1474 _90768 _90775 s f t u.
Proof. exact (EQ_MP (@lem3500653 _90768 _90775 s f t u) (@lem3499434 _90768 _90775 s f t u h1)). Qed.
Lemma lem3500665 {_90768 : Type'} (s : _90768 -> Prop) (t : _90768 -> Prop) (x : _90768) : (term1089 _90768 s t x) = (term1090 _90768 s t x).
Proof. exact (@lem17045 (s x) (t x)). Qed.
Lemma lem3500670 {_90768 _90775 : Type'} (x : _90775) (f : _90768 -> _90775) (x' : _90768) : (term349 _90768 _90775 x f x') = (term349 _90768 _90775 x f x').
Proof. exact (eq_refl (term349 _90768 _90775 x f x')). Qed.
Lemma lem3500671 {_90768 _90775 : Type'} (x : _90775) (f : _90768 -> _90775) (s : _90768 -> Prop) (t : _90768 -> Prop) (x' : _90768) : (term1091 _90768 _90775 x f s t x') = (term1092 _90768 _90775 x f s t x').
Proof. exact (MK_COMB (@lem3500670 _90768 _90775 x f x') (@lem3500665 _90768 s t x')). Qed.
Lemma lem3500672 {_90768 _90775 : Type'} (x : _90775) (f : _90768 -> _90775) (s : _90768 -> Prop) (t : _90768 -> Prop) (x' : _90768) : (term1093 _90768 _90775 x f s t x') = (term1091 _90768 _90775 x f s t x').
Proof. exact (@lem17045 (x = (f x')) (term1034 _90768 s t x')). Qed.
Lemma lem3500673 {_90768 _90775 : Type'} (x : _90775) (f : _90768 -> _90775) (s : _90768 -> Prop) (t : _90768 -> Prop) (x' : _90768) : (term1093 _90768 _90775 x f s t x') = (term1092 _90768 _90775 x f s t x').
Proof. exact (TRANS (@lem3500672 _90768 _90775 x f s t x') (@lem3500671 _90768 _90775 x f s t x')). Qed.
Lemma lem3500676 {_90768 _90775 : Type'} (x : _90775) (f : _90768 -> _90775) (s : _90768 -> Prop) (t : _90768 -> Prop) (x' : _90768) : (term1036 _90768 _90775 x f s t x') = (term1036 _90768 _90775 x f s t x').
Proof. exact (eq_refl (term1036 _90768 _90775 x f s t x')). Qed.
Lemma lem3500677 {_90768 : Type'} (P : _90768 -> Prop) : (term311 _90768 P) = (term312 _90768 P).
Proof. exact (@lem18394 _90768 P). Qed.
Lemma lem3500678 {_90768 _90775 : Type'} (x : _90775) (f : _90768 -> _90775) (s : _90768 -> Prop) (t : _90768 -> Prop) : (term1094 _90768 _90775 x f s t) = (term1095 _90768 _90775 x f s t).
Proof. exact (@lem3500677 _90768 (term1038 _90768 _90775 x f s t)). Qed.
Lemma lem3500679 {_90768 _90775 : Type'} (x : _90775) (f : _90768 -> _90775) (s : _90768 -> Prop) (t : _90768 -> Prop) (x' : _90768) : (term1096 _90768 _90775 x f s t x') = (term1036 _90768 _90775 x f s t x').
Proof. exact (eq_refl (term1096 _90768 _90775 x f s t x')). Qed.
Lemma lem3500680 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem3500681 {_90768 _90775 : Type'} (x : _90775) (f : _90768 -> _90775) (s : _90768 -> Prop) (t : _90768 -> Prop) (x' : _90768) : (term1097 _90768 _90775 x f s t x') = (term1093 _90768 _90775 x f s t x').
Proof. exact (MK_COMB (@lem3500680) (@lem3500679 _90768 _90775 x f s t x')). Qed.
Lemma lem3500682 {_90768 _90775 : Type'} (x : _90775) (f : _90768 -> _90775) (s : _90768 -> Prop) (t : _90768 -> Prop) (x' : _90768) : (term1097 _90768 _90775 x f s t x') = (term1092 _90768 _90775 x f s t x').
Proof. exact (TRANS (@lem3500681 _90768 _90775 x f s t x') (@lem3500673 _90768 _90775 x f s t x')). Qed.
Lemma lem3500683 {_90768 _90775 : Type'} (x : _90775) (f : _90768 -> _90775) (s : _90768 -> Prop) (t : _90768 -> Prop) : (term1098 _90768 _90775 x f s t) = (term1099 _90768 _90775 x f s t).
Proof. exact (fun_ext (fun x' : _90768 => @lem3500682 _90768 _90775 x f s t x')). Qed.
Lemma lem3500684 {_90768 : Type'} : (@all _90768) = (@all _90768).
Proof. exact (eq_refl (@all _90768)). Qed.
Lemma lem3500685 {_90768 _90775 : Type'} (x : _90775) (f : _90768 -> _90775) (s : _90768 -> Prop) (t : _90768 -> Prop) : (term1095 _90768 _90775 x f s t) = (term1100 _90768 _90775 x f s t).
Proof. exact (MK_COMB (@lem3500684 _90768) (@lem3500683 _90768 _90775 x f s t)). Qed.
Lemma lem3500686 {_90768 _90775 : Type'} (x : _90775) (f : _90768 -> _90775) (s : _90768 -> Prop) (t : _90768 -> Prop) : (term1094 _90768 _90775 x f s t) = (term1100 _90768 _90775 x f s t).
Proof. exact (TRANS (@lem3500678 _90768 _90775 x f s t) (@lem3500685 _90768 _90775 x f s t)). Qed.
Lemma lem3500687 {_90768 _90775 : Type'} (x : _90775) (f : _90768 -> _90775) (s : _90768 -> Prop) (t : _90768 -> Prop) : (term1038 _90768 _90775 x f s t) = (term1038 _90768 _90775 x f s t).
Proof. exact (fun_ext (fun x' : _90768 => @lem3500676 _90768 _90775 x f s t x')). Qed.
Lemma lem3500688 {_90768 : Type'} : (@ex _90768) = (@ex _90768).
Proof. exact (eq_refl (@ex _90768)). Qed.
Lemma lem3500689 {_90768 _90775 : Type'} (x : _90775) (f : _90768 -> _90775) (s : _90768 -> Prop) (t : _90768 -> Prop) : (term1039 _90768 _90775 x f s t) = (term1039 _90768 _90775 x f s t).
Proof. exact (MK_COMB (@lem3500688 _90768) (@lem3500687 _90768 _90775 x f s t)). Qed.
Lemma lem3500698 {_90768 _90775 : Type'} (x : _90775) (f : _90768 -> _90775) (s : _90768 -> Prop) (x' : _90768) : (term363 _90768 _90775 x f s x') = (term364 _90768 _90775 x f s x').
Proof. exact (@lem17045 (x = (f x')) (s x')). Qed.
Lemma lem3500701 {_90768 _90775 : Type'} (x : _90775) (f : _90768 -> _90775) (s : _90768 -> Prop) (x' : _90768) : (term264 _90768 _90775 x f s x') = (term264 _90768 _90775 x f s x').
Proof. exact (eq_refl (term264 _90768 _90775 x f s x')). Qed.
Lemma lem3500702 {_90768 : Type'} (P : _90768 -> Prop) : (term311 _90768 P) = (term312 _90768 P).
Proof. exact (@lem18394 _90768 P). Qed.
Lemma lem3500703 {_90768 _90775 : Type'} (x : _90775) (f : _90768 -> _90775) (s : _90768 -> Prop) : (term365 _90768 _90775 x f s) = (term366 _90768 _90775 x f s).
Proof. exact (@lem3500702 _90768 (term266 _90768 _90775 x f s)). Qed.
Lemma lem3500704 {_90768 _90775 : Type'} (x : _90775) (f : _90768 -> _90775) (s : _90768 -> Prop) (x' : _90768) : (term367 _90768 _90775 x f s x') = (term264 _90768 _90775 x f s x').
Proof. exact (eq_refl (term367 _90768 _90775 x f s x')). Qed.
Lemma lem3500705 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem3500706 {_90768 _90775 : Type'} (x : _90775) (f : _90768 -> _90775) (s : _90768 -> Prop) (x' : _90768) : (term368 _90768 _90775 x f s x') = (term363 _90768 _90775 x f s x').
Proof. exact (MK_COMB (@lem3500705) (@lem3500704 _90768 _90775 x f s x')). Qed.
Lemma lem3500707 {_90768 _90775 : Type'} (x : _90775) (f : _90768 -> _90775) (s : _90768 -> Prop) (x' : _90768) : (term368 _90768 _90775 x f s x') = (term364 _90768 _90775 x f s x').
Proof. exact (TRANS (@lem3500706 _90768 _90775 x f s x') (@lem3500698 _90768 _90775 x f s x')). Qed.
Lemma lem3500708 {_90768 _90775 : Type'} (x : _90775) (f : _90768 -> _90775) (s : _90768 -> Prop) : (term369 _90768 _90775 x f s) = (term370 _90768 _90775 x f s).
Proof. exact (fun_ext (fun x' : _90768 => @lem3500707 _90768 _90775 x f s x')). Qed.
Lemma lem3500709 {_90768 : Type'} : (@all _90768) = (@all _90768).
Proof. exact (eq_refl (@all _90768)). Qed.
Lemma lem3500710 {_90768 _90775 : Type'} (x : _90775) (f : _90768 -> _90775) (s : _90768 -> Prop) : (term366 _90768 _90775 x f s) = (term371 _90768 _90775 x f s).
Proof. exact (MK_COMB (@lem3500709 _90768) (@lem3500708 _90768 _90775 x f s)). Qed.
Lemma lem3500711 {_90768 _90775 : Type'} (x : _90775) (f : _90768 -> _90775) (s : _90768 -> Prop) : (term365 _90768 _90775 x f s) = (term371 _90768 _90775 x f s).
Proof. exact (TRANS (@lem3500703 _90768 _90775 x f s) (@lem3500710 _90768 _90775 x f s)). Qed.
Lemma lem3500712 {_90768 _90775 : Type'} (x : _90775) (f : _90768 -> _90775) (s : _90768 -> Prop) : (term266 _90768 _90775 x f s) = (term266 _90768 _90775 x f s).
Proof. exact (fun_ext (fun x' : _90768 => @lem3500701 _90768 _90775 x f s x')). Qed.
Lemma lem3500713 {_90768 : Type'} : (@ex _90768) = (@ex _90768).
Proof. exact (eq_refl (@ex _90768)). Qed.
Lemma lem3500714 {_90768 _90775 : Type'} (x : _90775) (f : _90768 -> _90775) (s : _90768 -> Prop) : (term267 _90768 _90775 x f s) = (term267 _90768 _90775 x f s).
Proof. exact (MK_COMB (@lem3500713 _90768) (@lem3500712 _90768 _90775 x f s)). Qed.
Lemma lem3500715 {_90775 : Type'} (u : _90775 -> Prop) (x : _90775) : (term618 _90775 u x) = (term618 _90775 u x).
Proof. exact (eq_refl (term618 _90775 u x)). Qed.
Lemma lem3500716 {_90775 : Type'} (u : _90775 -> Prop) (x : _90775) : (u x) = (u x).
Proof. exact (eq_refl (u x)). Qed.
Lemma lem3500717 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem3500718 {_90768 _90775 : Type'} (x : _90775) (f : _90768 -> _90775) (s : _90768 -> Prop) : (term1101 _90768 _90775 x f s) = (term1102 _90768 _90775 x f s).
Proof. exact (MK_COMB (@lem3500717) (@lem3500711 _90768 _90775 x f s)). Qed.
Lemma lem3500719 {_90768 _90775 : Type'} (f : _90768 -> _90775) (s : _90768 -> Prop) (u : _90775 -> Prop) (x : _90775) : (term1475 _90768 _90775 f s u x) = (term1476 _90768 _90775 f s u x).
Proof. exact (MK_COMB (@lem3500718 _90768 _90775 x f s) (@lem3500715 _90775 u x)). Qed.
Lemma lem3500720 {_90768 _90775 : Type'} (f : _90768 -> _90775) (s : _90768 -> Prop) (u : _90775 -> Prop) (x : _90775) : (term1477 _90768 _90775 f s u x) = (term1475 _90768 _90775 f s u x).
Proof. exact (@lem17045 (term267 _90768 _90775 x f s) (u x)). Qed.
Lemma lem3500721 {_90768 _90775 : Type'} (f : _90768 -> _90775) (s : _90768 -> Prop) (u : _90775 -> Prop) (x : _90775) : (term1477 _90768 _90775 f s u x) = (term1476 _90768 _90775 f s u x).
Proof. exact (TRANS (@lem3500720 _90768 _90775 f s u x) (@lem3500719 _90768 _90775 f s u x)). Qed.
Lemma lem3500722 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem3500723 {_90768 _90775 : Type'} (x : _90775) (f : _90768 -> _90775) (s : _90768 -> Prop) : (term1045 _90768 _90775 x f s) = (term1045 _90768 _90775 x f s).
Proof. exact (MK_COMB (@lem3500722) (@lem3500714 _90768 _90775 x f s)). Qed.
Lemma lem3500724 {_90768 _90775 : Type'} (f : _90768 -> _90775) (s : _90768 -> Prop) (u : _90775 -> Prop) (x : _90775) : (term1060 _90768 _90775 f s u x) = (term1060 _90768 _90775 f s u x).
Proof. exact (MK_COMB (@lem3500723 _90768 _90775 x f s) (@lem3500716 _90775 u x)). Qed.
Lemma lem3500725 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem3500726 {_90768 _90775 : Type'} (x : _90775) (f : _90768 -> _90775) (s : _90768 -> Prop) (t : _90768 -> Prop) : (term1478 _90768 _90775 x f s t) = (term1479 _90768 _90775 x f s t).
Proof. exact (MK_COMB (@lem3500725) (@lem3500686 _90768 _90775 x f s t)). Qed.
Lemma lem3500727 {_90768 _90775 : Type'} (t : _90768 -> Prop) (f : _90768 -> _90775) (s : _90768 -> Prop) (u : _90775 -> Prop) (x : _90775) : (term1480 _90768 _90775 t f s u x) = (term1481 _90768 _90775 t f s u x).
Proof. exact (MK_COMB (@lem3500726 _90768 _90775 x f s t) (@lem3500724 _90768 _90775 f s u x)). Qed.
Lemma lem3500728 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem3500729 {_90768 _90775 : Type'} (x : _90775) (f : _90768 -> _90775) (s : _90768 -> Prop) (t : _90768 -> Prop) : (term1482 _90768 _90775 x f s t) = (term1482 _90768 _90775 x f s t).
Proof. exact (MK_COMB (@lem3500728) (@lem3500689 _90768 _90775 x f s t)). Qed.
Lemma lem3500730 {_90768 _90775 : Type'} (t : _90768 -> Prop) (f : _90768 -> _90775) (s : _90768 -> Prop) (u : _90775 -> Prop) (x : _90775) : (term1483 _90768 _90775 t f s u x) = (term1484 _90768 _90775 t f s u x).
Proof. exact (MK_COMB (@lem3500729 _90768 _90775 x f s t) (@lem3500721 _90768 _90775 f s u x)). Qed.
Lemma lem3500731 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem3500732 {_90768 _90775 : Type'} (t : _90768 -> Prop) (f : _90768 -> _90775) (s : _90768 -> Prop) (u : _90775 -> Prop) (x : _90775) : (term1485 _90768 _90775 t f s u x) = (term1486 _90768 _90775 t f s u x).
Proof. exact (MK_COMB (@lem3500731) (@lem3500730 _90768 _90775 t f s u x)). Qed.
Lemma lem3500733 {_90768 _90775 : Type'} (t : _90768 -> Prop) (f : _90768 -> _90775) (s : _90768 -> Prop) (u : _90775 -> Prop) (x : _90775) : (term1487 _90768 _90775 t f s u x) = (term1488 _90768 _90775 t f s u x).
Proof. exact (MK_COMB (@lem3500732 _90768 _90775 t f s u x) (@lem3500727 _90768 _90775 t f s u x)). Qed.
Lemma lem3500734 {_90768 _90775 : Type'} (t : _90768 -> Prop) (f : _90768 -> _90775) (s : _90768 -> Prop) (u : _90775 -> Prop) (x : _90775) : (term1088 _90768 _90775 t f s u x) = (term1487 _90768 _90775 t f s u x).
Proof. exact (@lem17646 (term1039 _90768 _90775 x f s t) (term1060 _90768 _90775 f s u x)). Qed.
Lemma lem3500735 {_90768 _90775 : Type'} (t : _90768 -> Prop) (f : _90768 -> _90775) (s : _90768 -> Prop) (u : _90775 -> Prop) (x : _90775) : (term1088 _90768 _90775 t f s u x) = (term1488 _90768 _90775 t f s u x).
Proof. exact (TRANS (@lem3500734 _90768 _90775 t f s u x) (@lem3500733 _90768 _90775 t f s u x)). Qed.
Lemma lem3500914 {A : Type'} (P : A -> Prop) (Q : Prop) : (term398 A P Q) = (term399 A P Q).
Proof. exact (EQ_MP (@lem18923 A P Q) (@lem18922 A P Q)). Qed.
Lemma lem3500915 {_90768 : Type'} (P : _90768 -> Prop) (Q : Prop) : (term398 _90768 P Q) = (term399 _90768 P Q).
Proof. exact (@lem3500914 _90768 P Q). Qed.
Lemma lem3500916 {_90768 _90775 : Type'} (t : _90768 -> Prop) (f : _90768 -> _90775) (s : _90768 -> Prop) (u : _90775 -> Prop) (x : _90775) : (term1489 _90768 _90775 t f s u x) = (term1490 _90768 _90775 t f s u x).
Proof. exact (@lem3500915 _90768 (term1038 _90768 _90775 x f s t) (term1476 _90768 _90775 f s u x)). Qed.
Lemma lem3500917 {_90768 _90775 : Type'} (x : _90775) (f : _90768 -> _90775) (s : _90768 -> Prop) (t : _90768 -> Prop) (x' : _90768) : (term1096 _90768 _90775 x f s t x') = (term1036 _90768 _90775 x f s t x').
Proof. exact (eq_refl (term1096 _90768 _90775 x f s t x')). Qed.
Lemma lem3500918 {_90768 _90775 : Type'} (x : _90775) (f : _90768 -> _90775) (s : _90768 -> Prop) (t : _90768 -> Prop) : (term1174 _90768 _90775 x f s t) = (term1038 _90768 _90775 x f s t).
Proof. exact (fun_ext (fun x' : _90768 => @lem3500917 _90768 _90775 x f s t x')). Qed.
Lemma lem3500919 {_90768 : Type'} : (@ex _90768) = (@ex _90768).
Proof. exact (eq_refl (@ex _90768)). Qed.
Lemma lem3500920 {_90768 _90775 : Type'} (x : _90775) (f : _90768 -> _90775) (s : _90768 -> Prop) (t : _90768 -> Prop) : (term1175 _90768 _90775 x f s t) = (term1039 _90768 _90775 x f s t).
Proof. exact (MK_COMB (@lem3500919 _90768) (@lem3500918 _90768 _90775 x f s t)). Qed.
Lemma lem3500921 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem3500922 {_90768 _90775 : Type'} (x : _90775) (f : _90768 -> _90775) (s : _90768 -> Prop) (t : _90768 -> Prop) : (term1491 _90768 _90775 x f s t) = (term1482 _90768 _90775 x f s t).
Proof. exact (MK_COMB (@lem3500921) (@lem3500920 _90768 _90775 x f s t)). Qed.
Lemma lem3500923 {_90768 _90775 : Type'} (f : _90768 -> _90775) (s : _90768 -> Prop) (u : _90775 -> Prop) (x : _90775) : (term1476 _90768 _90775 f s u x) = (term1476 _90768 _90775 f s u x).
Proof. exact (eq_refl (term1476 _90768 _90775 f s u x)). Qed.
Lemma lem3500924 {_90768 _90775 : Type'} (t : _90768 -> Prop) (f : _90768 -> _90775) (s : _90768 -> Prop) (u : _90775 -> Prop) (x : _90775) : (term1489 _90768 _90775 t f s u x) = (term1484 _90768 _90775 t f s u x).
Proof. exact (MK_COMB (@lem3500922 _90768 _90775 x f s t) (@lem3500923 _90768 _90775 f s u x)). Qed.
Lemma lem3500925 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem3500926 {_90768 _90775 : Type'} (t : _90768 -> Prop) (f : _90768 -> _90775) (s : _90768 -> Prop) (u : _90775 -> Prop) (x : _90775) : (term1492 _90768 _90775 t f s u x) = (term1493 _90768 _90775 t f s u x).
Proof. exact (MK_COMB (@lem3500925) (@lem3500924 _90768 _90775 t f s u x)). Qed.
Lemma lem3500927 {_90768 _90775 : Type'} (x : _90775) (f : _90768 -> _90775) (s : _90768 -> Prop) (t : _90768 -> Prop) (x' : _90768) : (term1096 _90768 _90775 x f s t x') = (term1036 _90768 _90775 x f s t x').
Proof. exact (eq_refl (term1096 _90768 _90775 x f s t x')). Qed.
Lemma lem3500928 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem3500929 {_90768 _90775 : Type'} (x : _90775) (f : _90768 -> _90775) (s : _90768 -> Prop) (t : _90768 -> Prop) (x' : _90768) : (term1494 _90768 _90775 x f s t x') = (term1495 _90768 _90775 x f s t x').
Proof. exact (MK_COMB (@lem3500928) (@lem3500927 _90768 _90775 x f s t x')). Qed.
Lemma lem3500930 {_90768 _90775 : Type'} (f : _90768 -> _90775) (s : _90768 -> Prop) (u : _90775 -> Prop) (x : _90775) : (term1476 _90768 _90775 f s u x) = (term1476 _90768 _90775 f s u x).
Proof. exact (eq_refl (term1476 _90768 _90775 f s u x)). Qed.
Lemma lem3500931 {_90768 _90775 : Type'} (t : _90768 -> Prop) (x : _90768) (f : _90768 -> _90775) (s : _90768 -> Prop) (u : _90775 -> Prop) (x' : _90775) : (term1496 _90768 _90775 t x f s u x') = (term1497 _90768 _90775 t x f s u x').
Proof. exact (MK_COMB (@lem3500929 _90768 _90775 x' f s t x) (@lem3500930 _90768 _90775 f s u x')). Qed.
Lemma lem3500932 {_90768 _90775 : Type'} (t : _90768 -> Prop) (f : _90768 -> _90775) (s : _90768 -> Prop) (u : _90775 -> Prop) (x : _90775) : (term1498 _90768 _90775 t f s u x) = (term1499 _90768 _90775 t f s u x).
Proof. exact (fun_ext (fun x' : _90768 => @lem3500931 _90768 _90775 t x' f s u x)). Qed.
Lemma lem3500933 {_90768 : Type'} : (@ex _90768) = (@ex _90768).
Proof. exact (eq_refl (@ex _90768)). Qed.
Lemma lem3500934 {_90768 _90775 : Type'} (t : _90768 -> Prop) (f : _90768 -> _90775) (s : _90768 -> Prop) (u : _90775 -> Prop) (x : _90775) : (term1490 _90768 _90775 t f s u x) = (term1500 _90768 _90775 t f s u x).
Proof. exact (MK_COMB (@lem3500933 _90768) (@lem3500932 _90768 _90775 t f s u x)). Qed.
Lemma lem3500935 {_90768 _90775 : Type'} (t : _90768 -> Prop) (f : _90768 -> _90775) (s : _90768 -> Prop) (u : _90775 -> Prop) (x : _90775) : ((term1489 _90768 _90775 t f s u x) = (term1490 _90768 _90775 t f s u x)) = ((term1484 _90768 _90775 t f s u x) = (term1500 _90768 _90775 t f s u x)).
Proof. exact (MK_COMB (@lem3500926 _90768 _90775 t f s u x) (@lem3500934 _90768 _90775 t f s u x)). Qed.
Lemma lem3500936 {_90768 _90775 : Type'} (t : _90768 -> Prop) (f : _90768 -> _90775) (s : _90768 -> Prop) (u : _90775 -> Prop) (x : _90775) : (term1484 _90768 _90775 t f s u x) = (term1500 _90768 _90775 t f s u x).
Proof. exact (EQ_MP (@lem3500935 _90768 _90775 t f s u x) (@lem3500916 _90768 _90775 t f s u x)). Qed.
Lemma lem3500937 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem3500938 {_90768 _90775 : Type'} (t : _90768 -> Prop) (f : _90768 -> _90775) (s : _90768 -> Prop) (u : _90775 -> Prop) (x : _90775) : (term1486 _90768 _90775 t f s u x) = (term1501 _90768 _90775 t f s u x).
Proof. exact (MK_COMB (@lem3500937) (@lem3500936 _90768 _90775 t f s u x)). Qed.
Lemma lem3500940 {A : Type'} (P : A -> Prop) (Q : Prop) : (term398 A P Q) = (term399 A P Q).
Proof. exact (EQ_MP (@lem18923 A P Q) (@lem18922 A P Q)). Qed.
Lemma lem3500941 {_90768 : Type'} (P : _90768 -> Prop) (Q : Prop) : (term398 _90768 P Q) = (term399 _90768 P Q).
Proof. exact (@lem3500940 _90768 P Q). Qed.
Lemma lem3500942 {_90768 _90775 : Type'} (f : _90768 -> _90775) (s : _90768 -> Prop) (u : _90775 -> Prop) (x : _90775) : (term1502 _90768 _90775 f s u x) = (term1503 _90768 _90775 f s u x).
Proof. exact (@lem3500941 _90768 (term266 _90768 _90775 x f s) (u x)). Qed.
Lemma lem3500943 {_90768 _90775 : Type'} (x : _90775) (f : _90768 -> _90775) (s : _90768 -> Prop) (x' : _90768) : (term367 _90768 _90775 x f s x') = (term264 _90768 _90775 x f s x').
Proof. exact (eq_refl (term367 _90768 _90775 x f s x')). Qed.
Lemma lem3500944 {_90768 _90775 : Type'} (x : _90775) (f : _90768 -> _90775) (s : _90768 -> Prop) : (term481 _90768 _90775 x f s) = (term266 _90768 _90775 x f s).
Proof. exact (fun_ext (fun x' : _90768 => @lem3500943 _90768 _90775 x f s x')). Qed.
Lemma lem3500945 {_90768 : Type'} : (@ex _90768) = (@ex _90768).
Proof. exact (eq_refl (@ex _90768)). Qed.
Lemma lem3500946 {_90768 _90775 : Type'} (x : _90775) (f : _90768 -> _90775) (s : _90768 -> Prop) : (term482 _90768 _90775 x f s) = (term267 _90768 _90775 x f s).
Proof. exact (MK_COMB (@lem3500945 _90768) (@lem3500944 _90768 _90775 x f s)). Qed.
Lemma lem3500947 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem3500948 {_90768 _90775 : Type'} (x : _90775) (f : _90768 -> _90775) (s : _90768 -> Prop) : (term1214 _90768 _90775 x f s) = (term1045 _90768 _90775 x f s).
Proof. exact (MK_COMB (@lem3500947) (@lem3500946 _90768 _90775 x f s)). Qed.
Lemma lem3500949 {_90775 : Type'} (u : _90775 -> Prop) (x : _90775) : (u x) = (u x).
Proof. exact (eq_refl (u x)). Qed.
Lemma lem3500950 {_90768 _90775 : Type'} (f : _90768 -> _90775) (s : _90768 -> Prop) (u : _90775 -> Prop) (x : _90775) : (term1502 _90768 _90775 f s u x) = (term1060 _90768 _90775 f s u x).
Proof. exact (MK_COMB (@lem3500948 _90768 _90775 x f s) (@lem3500949 _90775 u x)). Qed.
Lemma lem3500951 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem3500952 {_90768 _90775 : Type'} (f : _90768 -> _90775) (s : _90768 -> Prop) (u : _90775 -> Prop) (x : _90775) : (term1504 _90768 _90775 f s u x) = (term1505 _90768 _90775 f s u x).
Proof. exact (MK_COMB (@lem3500951) (@lem3500950 _90768 _90775 f s u x)). Qed.
Lemma lem3500953 {_90768 _90775 : Type'} (x : _90775) (f : _90768 -> _90775) (s : _90768 -> Prop) (x' : _90768) : (term367 _90768 _90775 x f s x') = (term264 _90768 _90775 x f s x').
Proof. exact (eq_refl (term367 _90768 _90775 x f s x')). Qed.
Lemma lem3500954 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem3500955 {_90768 _90775 : Type'} (x : _90775) (f : _90768 -> _90775) (s : _90768 -> Prop) (x' : _90768) : (term1217 _90768 _90775 x f s x') = (term1218 _90768 _90775 x f s x').
Proof. exact (MK_COMB (@lem3500954) (@lem3500953 _90768 _90775 x f s x')). Qed.
Lemma lem3500956 {_90775 : Type'} (u : _90775 -> Prop) (x : _90775) : (u x) = (u x).
Proof. exact (eq_refl (u x)). Qed.
Lemma lem3500957 {_90768 _90775 : Type'} (f : _90768 -> _90775) (s : _90768 -> Prop) (x : _90768) (u : _90775 -> Prop) (x' : _90775) : (term1506 _90768 _90775 f s x u x') = (term1507 _90768 _90775 f s x u x').
Proof. exact (MK_COMB (@lem3500955 _90768 _90775 x' f s x) (@lem3500956 _90775 u x')). Qed.
Lemma lem3500958 {_90768 _90775 : Type'} (f : _90768 -> _90775) (s : _90768 -> Prop) (u : _90775 -> Prop) (x : _90775) : (term1508 _90768 _90775 f s u x) = (term1509 _90768 _90775 f s u x).
Proof. exact (fun_ext (fun x' : _90768 => @lem3500957 _90768 _90775 f s x' u x)). Qed.
Lemma lem3500959 {_90768 : Type'} : (@ex _90768) = (@ex _90768).
Proof. exact (eq_refl (@ex _90768)). Qed.
Lemma lem3500960 {_90768 _90775 : Type'} (f : _90768 -> _90775) (s : _90768 -> Prop) (u : _90775 -> Prop) (x : _90775) : (term1503 _90768 _90775 f s u x) = (term1510 _90768 _90775 f s u x).
Proof. exact (MK_COMB (@lem3500959 _90768) (@lem3500958 _90768 _90775 f s u x)). Qed.
Lemma lem3500961 {_90768 _90775 : Type'} (f : _90768 -> _90775) (s : _90768 -> Prop) (u : _90775 -> Prop) (x : _90775) : ((term1502 _90768 _90775 f s u x) = (term1503 _90768 _90775 f s u x)) = ((term1060 _90768 _90775 f s u x) = (term1510 _90768 _90775 f s u x)).
Proof. exact (MK_COMB (@lem3500952 _90768 _90775 f s u x) (@lem3500960 _90768 _90775 f s u x)). Qed.
Lemma lem3500962 {_90768 _90775 : Type'} (f : _90768 -> _90775) (s : _90768 -> Prop) (u : _90775 -> Prop) (x : _90775) : (term1060 _90768 _90775 f s u x) = (term1510 _90768 _90775 f s u x).
Proof. exact (EQ_MP (@lem3500961 _90768 _90775 f s u x) (@lem3500942 _90768 _90775 f s u x)). Qed.
Lemma lem3500963 {_90768 _90775 : Type'} (x : _90775) (f : _90768 -> _90775) (s : _90768 -> Prop) (t : _90768 -> Prop) : (term1479 _90768 _90775 x f s t) = (term1479 _90768 _90775 x f s t).
Proof. exact (eq_refl (term1479 _90768 _90775 x f s t)). Qed.
Lemma lem3500964 {_90768 _90775 : Type'} (t : _90768 -> Prop) (f : _90768 -> _90775) (s : _90768 -> Prop) (u : _90775 -> Prop) (x : _90775) : (term1481 _90768 _90775 t f s u x) = (term1511 _90768 _90775 t f s u x).
Proof. exact (MK_COMB (@lem3500963 _90768 _90775 x f s t) (@lem3500962 _90768 _90775 f s u x)). Qed.
Lemma lem3500966 {A : Type'} (P : Prop) (Q : A -> Prop) : (term415 A P Q) = (term416 A P Q).
Proof. exact (EQ_MP (@lem18929 A P Q) (@lem18928 A P Q)). Qed.
Lemma lem3500967 {_90768 : Type'} (P : Prop) (Q : _90768 -> Prop) : (term415 _90768 P Q) = (term416 _90768 P Q).
Proof. exact (@lem3500966 _90768 P Q). Qed.
Lemma lem3500968 {_90768 _90775 : Type'} (t : _90768 -> Prop) (f : _90768 -> _90775) (s : _90768 -> Prop) (u : _90775 -> Prop) (x : _90775) : (term1512 _90768 _90775 t f s u x) = (term1513 _90768 _90775 t f s u x).
Proof. exact (@lem3500967 _90768 (term1100 _90768 _90775 x f s t) (term1509 _90768 _90775 f s u x)). Qed.
Lemma lem3500969 {_90768 _90775 : Type'} (f : _90768 -> _90775) (s : _90768 -> Prop) (x : _90768) (u : _90775 -> Prop) (x' : _90775) : (term1514 _90768 _90775 f s u x' x) = (term1507 _90768 _90775 f s x u x').
Proof. exact (eq_refl (term1514 _90768 _90775 f s u x' x)). Qed.
Lemma lem3500970 {_90768 _90775 : Type'} (f : _90768 -> _90775) (s : _90768 -> Prop) (u : _90775 -> Prop) (x : _90775) : (term1515 _90768 _90775 f s u x) = (term1509 _90768 _90775 f s u x).
Proof. exact (fun_ext (fun x' : _90768 => @lem3500969 _90768 _90775 f s x' u x)). Qed.
Lemma lem3500971 {_90768 : Type'} : (@ex _90768) = (@ex _90768).
Proof. exact (eq_refl (@ex _90768)). Qed.
Lemma lem3500972 {_90768 _90775 : Type'} (f : _90768 -> _90775) (s : _90768 -> Prop) (u : _90775 -> Prop) (x : _90775) : (term1516 _90768 _90775 f s u x) = (term1510 _90768 _90775 f s u x).
Proof. exact (MK_COMB (@lem3500971 _90768) (@lem3500970 _90768 _90775 f s u x)). Qed.
Lemma lem3500973 {_90768 _90775 : Type'} (x : _90775) (f : _90768 -> _90775) (s : _90768 -> Prop) (t : _90768 -> Prop) : (term1479 _90768 _90775 x f s t) = (term1479 _90768 _90775 x f s t).
Proof. exact (eq_refl (term1479 _90768 _90775 x f s t)). Qed.
Lemma lem3500974 {_90768 _90775 : Type'} (t : _90768 -> Prop) (f : _90768 -> _90775) (s : _90768 -> Prop) (u : _90775 -> Prop) (x : _90775) : (term1512 _90768 _90775 t f s u x) = (term1511 _90768 _90775 t f s u x).
Proof. exact (MK_COMB (@lem3500973 _90768 _90775 x f s t) (@lem3500972 _90768 _90775 f s u x)). Qed.
Lemma lem3500975 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem3500976 {_90768 _90775 : Type'} (t : _90768 -> Prop) (f : _90768 -> _90775) (s : _90768 -> Prop) (u : _90775 -> Prop) (x : _90775) : (term1517 _90768 _90775 t f s u x) = (term1518 _90768 _90775 t f s u x).
Proof. exact (MK_COMB (@lem3500975) (@lem3500974 _90768 _90775 t f s u x)). Qed.
Lemma lem3500977 {_90768 _90775 : Type'} (f : _90768 -> _90775) (s : _90768 -> Prop) (x : _90768) (u : _90775 -> Prop) (x' : _90775) : (term1514 _90768 _90775 f s u x' x) = (term1507 _90768 _90775 f s x u x').
Proof. exact (eq_refl (term1514 _90768 _90775 f s u x' x)). Qed.
Lemma lem3500978 {_90768 _90775 : Type'} (x : _90775) (f : _90768 -> _90775) (s : _90768 -> Prop) (t : _90768 -> Prop) : (term1479 _90768 _90775 x f s t) = (term1479 _90768 _90775 x f s t).
Proof. exact (eq_refl (term1479 _90768 _90775 x f s t)). Qed.
Lemma lem3500979 {_90768 _90775 : Type'} (t : _90768 -> Prop) (f : _90768 -> _90775) (s : _90768 -> Prop) (x : _90768) (u : _90775 -> Prop) (x' : _90775) : (term1519 _90768 _90775 t f s u x' x) = (term1520 _90768 _90775 t f s x u x').
Proof. exact (MK_COMB (@lem3500978 _90768 _90775 x' f s t) (@lem3500977 _90768 _90775 f s x u x')). Qed.
Lemma lem3500980 {_90768 _90775 : Type'} (t : _90768 -> Prop) (f : _90768 -> _90775) (s : _90768 -> Prop) (u : _90775 -> Prop) (x : _90775) : (term1521 _90768 _90775 t f s u x) = (term1522 _90768 _90775 t f s u x).
Proof. exact (fun_ext (fun x' : _90768 => @lem3500979 _90768 _90775 t f s x' u x)). Qed.
Lemma lem3500981 {_90768 : Type'} : (@ex _90768) = (@ex _90768).
Proof. exact (eq_refl (@ex _90768)). Qed.
Lemma lem3500982 {_90768 _90775 : Type'} (t : _90768 -> Prop) (f : _90768 -> _90775) (s : _90768 -> Prop) (u : _90775 -> Prop) (x : _90775) : (term1513 _90768 _90775 t f s u x) = (term1523 _90768 _90775 t f s u x).
Proof. exact (MK_COMB (@lem3500981 _90768) (@lem3500980 _90768 _90775 t f s u x)). Qed.
Lemma lem3500983 {_90768 _90775 : Type'} (t : _90768 -> Prop) (f : _90768 -> _90775) (s : _90768 -> Prop) (u : _90775 -> Prop) (x : _90775) : ((term1512 _90768 _90775 t f s u x) = (term1513 _90768 _90775 t f s u x)) = ((term1511 _90768 _90775 t f s u x) = (term1523 _90768 _90775 t f s u x)).
Proof. exact (MK_COMB (@lem3500976 _90768 _90775 t f s u x) (@lem3500982 _90768 _90775 t f s u x)). Qed.
Lemma lem3500984 {_90768 _90775 : Type'} (t : _90768 -> Prop) (f : _90768 -> _90775) (s : _90768 -> Prop) (u : _90775 -> Prop) (x : _90775) : (term1511 _90768 _90775 t f s u x) = (term1523 _90768 _90775 t f s u x).
Proof. exact (EQ_MP (@lem3500983 _90768 _90775 t f s u x) (@lem3500968 _90768 _90775 t f s u x)). Qed.
Lemma lem3500985 {_90768 _90775 : Type'} (t : _90768 -> Prop) (f : _90768 -> _90775) (s : _90768 -> Prop) (u : _90775 -> Prop) (x : _90775) : (term1481 _90768 _90775 t f s u x) = (term1523 _90768 _90775 t f s u x).
Proof. exact (TRANS (@lem3500964 _90768 _90775 t f s u x) (@lem3500984 _90768 _90775 t f s u x)). Qed.
Lemma lem3500986 {_90768 _90775 : Type'} (t : _90768 -> Prop) (f : _90768 -> _90775) (s : _90768 -> Prop) (u : _90775 -> Prop) (x : _90775) : (term1488 _90768 _90775 t f s u x) = (term1524 _90768 _90775 t f s u x).
Proof. exact (MK_COMB (@lem3500938 _90768 _90775 t f s u x) (@lem3500985 _90768 _90775 t f s u x)). Qed.
Lemma lem3500988 {A : Type'} (P : A -> Prop) (Q : A -> Prop) : (term1525 A P Q) = (term1526 A P Q).
Proof. exact (EQ_MP (@lem18917 A P Q) (@lem18916 A P Q)). Qed.
Lemma lem3500989 {_90768 : Type'} (P : _90768 -> Prop) (Q : _90768 -> Prop) : (term1525 _90768 P Q) = (term1526 _90768 P Q).
Proof. exact (@lem3500988 _90768 P Q). Qed.
Lemma lem3500990 {_90768 _90775 : Type'} (t : _90768 -> Prop) (f : _90768 -> _90775) (s : _90768 -> Prop) (u : _90775 -> Prop) (x : _90775) : (term1527 _90768 _90775 t f s u x) = (term1528 _90768 _90775 t f s u x).
Proof. exact (@lem3500989 _90768 (term1499 _90768 _90775 t f s u x) (term1522 _90768 _90775 t f s u x)). Qed.
Lemma lem3500991 {_90768 _90775 : Type'} (t : _90768 -> Prop) (x : _90768) (f : _90768 -> _90775) (s : _90768 -> Prop) (u : _90775 -> Prop) (x' : _90775) : (term1529 _90768 _90775 t f s u x' x) = (term1497 _90768 _90775 t x f s u x').
Proof. exact (eq_refl (term1529 _90768 _90775 t f s u x' x)). Qed.
Lemma lem3500992 {_90768 _90775 : Type'} (t : _90768 -> Prop) (f : _90768 -> _90775) (s : _90768 -> Prop) (u : _90775 -> Prop) (x : _90775) : (term1530 _90768 _90775 t f s u x) = (term1499 _90768 _90775 t f s u x).
Proof. exact (fun_ext (fun x' : _90768 => @lem3500991 _90768 _90775 t x' f s u x)). Qed.
Lemma lem3500993 {_90768 : Type'} : (@ex _90768) = (@ex _90768).
Proof. exact (eq_refl (@ex _90768)). Qed.
Lemma lem3500994 {_90768 _90775 : Type'} (t : _90768 -> Prop) (f : _90768 -> _90775) (s : _90768 -> Prop) (u : _90775 -> Prop) (x : _90775) : (term1531 _90768 _90775 t f s u x) = (term1500 _90768 _90775 t f s u x).
Proof. exact (MK_COMB (@lem3500993 _90768) (@lem3500992 _90768 _90775 t f s u x)). Qed.
Lemma lem3500995 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem3500996 {_90768 _90775 : Type'} (t : _90768 -> Prop) (f : _90768 -> _90775) (s : _90768 -> Prop) (u : _90775 -> Prop) (x : _90775) : (term1532 _90768 _90775 t f s u x) = (term1501 _90768 _90775 t f s u x).
Proof. exact (MK_COMB (@lem3500995) (@lem3500994 _90768 _90775 t f s u x)). Qed.
Lemma lem3500997 {_90768 _90775 : Type'} (t : _90768 -> Prop) (f : _90768 -> _90775) (s : _90768 -> Prop) (x : _90768) (u : _90775 -> Prop) (x' : _90775) : (term1533 _90768 _90775 t f s u x' x) = (term1520 _90768 _90775 t f s x u x').
Proof. exact (eq_refl (term1533 _90768 _90775 t f s u x' x)). Qed.
Lemma lem3500998 {_90768 _90775 : Type'} (t : _90768 -> Prop) (f : _90768 -> _90775) (s : _90768 -> Prop) (u : _90775 -> Prop) (x : _90775) : (term1534 _90768 _90775 t f s u x) = (term1522 _90768 _90775 t f s u x).
Proof. exact (fun_ext (fun x' : _90768 => @lem3500997 _90768 _90775 t f s x' u x)). Qed.
Lemma lem3500999 {_90768 : Type'} : (@ex _90768) = (@ex _90768).
Proof. exact (eq_refl (@ex _90768)). Qed.
Lemma lem3501000 {_90768 _90775 : Type'} (t : _90768 -> Prop) (f : _90768 -> _90775) (s : _90768 -> Prop) (u : _90775 -> Prop) (x : _90775) : (term1535 _90768 _90775 t f s u x) = (term1523 _90768 _90775 t f s u x).
Proof. exact (MK_COMB (@lem3500999 _90768) (@lem3500998 _90768 _90775 t f s u x)). Qed.
Lemma lem3501001 {_90768 _90775 : Type'} (t : _90768 -> Prop) (f : _90768 -> _90775) (s : _90768 -> Prop) (u : _90775 -> Prop) (x : _90775) : (term1527 _90768 _90775 t f s u x) = (term1524 _90768 _90775 t f s u x).
Proof. exact (MK_COMB (@lem3500996 _90768 _90775 t f s u x) (@lem3501000 _90768 _90775 t f s u x)). Qed.
Lemma lem3501002 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem3501003 {_90768 _90775 : Type'} (t : _90768 -> Prop) (f : _90768 -> _90775) (s : _90768 -> Prop) (u : _90775 -> Prop) (x : _90775) : (term1536 _90768 _90775 t f s u x) = (term1537 _90768 _90775 t f s u x).
Proof. exact (MK_COMB (@lem3501002) (@lem3501001 _90768 _90775 t f s u x)). Qed.
Lemma lem3501004 {_90768 _90775 : Type'} (t : _90768 -> Prop) (x : _90768) (f : _90768 -> _90775) (s : _90768 -> Prop) (u : _90775 -> Prop) (x' : _90775) : (term1529 _90768 _90775 t f s u x' x) = (term1497 _90768 _90775 t x f s u x').
Proof. exact (eq_refl (term1529 _90768 _90775 t f s u x' x)). Qed.
Lemma lem3501005 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem3501006 {_90768 _90775 : Type'} (t : _90768 -> Prop) (x : _90768) (f : _90768 -> _90775) (s : _90768 -> Prop) (u : _90775 -> Prop) (x' : _90775) : (term1538 _90768 _90775 t f s u x' x) = (term1539 _90768 _90775 t x f s u x').
Proof. exact (MK_COMB (@lem3501005) (@lem3501004 _90768 _90775 t x f s u x')). Qed.
Lemma lem3501007 {_90768 _90775 : Type'} (t : _90768 -> Prop) (f : _90768 -> _90775) (s : _90768 -> Prop) (x : _90768) (u : _90775 -> Prop) (x' : _90775) : (term1533 _90768 _90775 t f s u x' x) = (term1520 _90768 _90775 t f s x u x').
Proof. exact (eq_refl (term1533 _90768 _90775 t f s u x' x)). Qed.
Lemma lem3501008 {_90768 _90775 : Type'} (t : _90768 -> Prop) (f : _90768 -> _90775) (s : _90768 -> Prop) (x : _90768) (u : _90775 -> Prop) (x' : _90775) : (term1540 _90768 _90775 t f s u x' x) = (term1541 _90768 _90775 t f s x u x').
Proof. exact (MK_COMB (@lem3501006 _90768 _90775 t x f s u x') (@lem3501007 _90768 _90775 t f s x u x')). Qed.
Lemma lem3501009 {_90768 _90775 : Type'} (t : _90768 -> Prop) (f : _90768 -> _90775) (s : _90768 -> Prop) (u : _90775 -> Prop) (x : _90775) : (term1542 _90768 _90775 t f s u x) = (term1543 _90768 _90775 t f s u x).
Proof. exact (fun_ext (fun x' : _90768 => @lem3501008 _90768 _90775 t f s x' u x)). Qed.
Lemma lem3501010 {_90768 : Type'} : (@ex _90768) = (@ex _90768).
Proof. exact (eq_refl (@ex _90768)). Qed.
Lemma lem3501011 {_90768 _90775 : Type'} (t : _90768 -> Prop) (f : _90768 -> _90775) (s : _90768 -> Prop) (u : _90775 -> Prop) (x : _90775) : (term1528 _90768 _90775 t f s u x) = (term1544 _90768 _90775 t f s u x).
Proof. exact (MK_COMB (@lem3501010 _90768) (@lem3501009 _90768 _90775 t f s u x)). Qed.
Lemma lem3501012 {_90768 _90775 : Type'} (t : _90768 -> Prop) (f : _90768 -> _90775) (s : _90768 -> Prop) (u : _90775 -> Prop) (x : _90775) : ((term1527 _90768 _90775 t f s u x) = (term1528 _90768 _90775 t f s u x)) = ((term1524 _90768 _90775 t f s u x) = (term1544 _90768 _90775 t f s u x)).
Proof. exact (MK_COMB (@lem3501003 _90768 _90775 t f s u x) (@lem3501011 _90768 _90775 t f s u x)). Qed.
Lemma lem3501013 {_90768 _90775 : Type'} (t : _90768 -> Prop) (f : _90768 -> _90775) (s : _90768 -> Prop) (u : _90775 -> Prop) (x : _90775) : (term1524 _90768 _90775 t f s u x) = (term1544 _90768 _90775 t f s u x).
Proof. exact (EQ_MP (@lem3501012 _90768 _90775 t f s u x) (@lem3500990 _90768 _90775 t f s u x)). Qed.
Lemma lem3501015 {_90768 _90775 : Type'} (t : _90768 -> Prop) (f : _90768 -> _90775) (s : _90768 -> Prop) (u : _90775 -> Prop) (x : _90775) : (term1488 _90768 _90775 t f s u x) = (term1544 _90768 _90775 t f s u x).
Proof. exact (TRANS (@lem3500986 _90768 _90775 t f s u x) (@lem3501013 _90768 _90775 t f s u x)). Qed.
Lemma lem3501016 {_90768 _90775 : Type'} (t : _90768 -> Prop) (f : _90768 -> _90775) (s : _90768 -> Prop) (u : _90775 -> Prop) (x : _90775) : (term1088 _90768 _90775 t f s u x) = (term1544 _90768 _90775 t f s u x).
Proof. exact (TRANS (@lem3500735 _90768 _90775 t f s u x) (@lem3501015 _90768 _90775 t f s u x)). Qed.
Lemma lem3501017 {_90768 _90775 : Type'} (t : _90768 -> Prop) (f : _90768 -> _90775) (s : _90768 -> Prop) (u : _90775 -> Prop) (x : _90775) (h1 : term1088 _90768 _90775 t f s u x) : term1544 _90768 _90775 t f s u x.
Proof. exact (EQ_MP (@lem3501016 _90768 _90775 t f s u x) (@lem3499439 _90768 _90775 t f s u x h1)). Qed.
Lemma lem3501018 {_90768 _90775 : Type'} (t : _90768 -> Prop) (f : _90768 -> _90775) (s : _90768 -> Prop) (x' : _90768) (u : _90775 -> Prop) (x : _90775) (h1 : term1541 _90768 _90775 t f s x' u x) : term1541 _90768 _90775 t f s x' u x.
Proof. exact (h1). Qed.
Lemma lem3501019 {_90768 _90775 : Type'} (x'' : _90775 -> _90768) (s : _90768 -> Prop) (f : _90768 -> _90775) (t : _90768 -> Prop) (u : _90775 -> Prop) (h1 : term1472 _90768 _90775 x'' s f t u) : term1472 _90768 _90775 x'' s f t u.
Proof. exact (h1). Qed.
Lemma lem3501020 {_90768 _90775 : Type'} (x'' : _90775 -> _90768) (s : _90768 -> Prop) (x''' : _90775 -> _90768) (f : _90768 -> _90775) (t : _90768 -> Prop) (u : _90775 -> Prop) (h1 : term1470 _90768 _90775 x'' s x''' f t u) : term1470 _90768 _90775 x'' s x''' f t u.
Proof. exact (h1). Qed.
Lemma lem3501021 {_90768 _90775 : Type'} (x'' : _90775 -> _90768) (s : _90768 -> Prop) (x''' : _90775 -> _90768) (x'''' : _90775 -> _90768) (f : _90768 -> _90775) (t : _90768 -> Prop) (u : _90775 -> Prop) (h1 : term1468 _90768 _90775 x'' s x''' x'''' f t u) : term1468 _90768 _90775 x'' s x''' x'''' f t u.
Proof. exact (h1). Qed.
Lemma lem3501022 {_90768 _90775 : Type'} (x'' : _90775 -> _90768) (s : _90768 -> Prop) (x''' : _90775 -> _90768) (x'''' : _90775 -> _90768) (x''''' : _90775 -> _90768) (f : _90768 -> _90775) (t : _90768 -> Prop) (u : _90775 -> Prop) (h1 : term1465 _90768 _90775 x'' s x''' x'''' x''''' f t u) : term1465 _90768 _90775 x'' s x''' x'''' x''''' f t u.
Proof. exact (h1). Qed.
Lemma lem3501041 {_90768 _90775 : Type'} (f : _90768 -> _90775) (s : _90768 -> Prop) (x' : _90768) (u : _90775 -> Prop) (x : _90775) : (term1507 _90768 _90775 f s x' u x) = (term1507 _90768 _90775 f s x' u x).
Proof. exact (eq_refl (term1507 _90768 _90775 f s x' u x)). Qed.
Lemma lem3501066 {_90768 _90775 : Type'} (x : _90775) (f : _90768 -> _90775) (s : _90768 -> Prop) (t : _90768 -> Prop) (x' : _90768) : (term1092 _90768 _90775 x f s t x') = (term1092 _90768 _90775 x f s t x').
Proof. exact (eq_refl (term1092 _90768 _90775 x f s t x')). Qed.
Lemma lem3501067 {_90768 _90775 : Type'} (x : _90775) (f : _90768 -> _90775) (s : _90768 -> Prop) (t : _90768 -> Prop) : (term1099 _90768 _90775 x f s t) = (term1099 _90768 _90775 x f s t).
Proof. exact (fun_ext (fun x' : _90768 => @lem3501066 _90768 _90775 x f s t x')). Qed.
Lemma lem3501068 {_90768 : Type'} : (@all _90768) = (@all _90768).
Proof. exact (eq_refl (@all _90768)). Qed.
Lemma lem3501069 {_90768 _90775 : Type'} (x : _90775) (f : _90768 -> _90775) (s : _90768 -> Prop) (t : _90768 -> Prop) : (term1100 _90768 _90775 x f s t) = (term1100 _90768 _90775 x f s t).
Proof. exact (MK_COMB (@lem3501068 _90768) (@lem3501067 _90768 _90775 x f s t)). Qed.
Lemma lem3501070 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem3501071 {_90768 _90775 : Type'} (x : _90775) (f : _90768 -> _90775) (s : _90768 -> Prop) (t : _90768 -> Prop) : (term1479 _90768 _90775 x f s t) = (term1479 _90768 _90775 x f s t).
Proof. exact (MK_COMB (@lem3501070) (@lem3501069 _90768 _90775 x f s t)). Qed.
Lemma lem3501072 {_90768 _90775 : Type'} (t : _90768 -> Prop) (f : _90768 -> _90775) (s : _90768 -> Prop) (x' : _90768) (u : _90775 -> Prop) (x : _90775) : (term1520 _90768 _90775 t f s x' u x) = (term1520 _90768 _90775 t f s x' u x).
Proof. exact (MK_COMB (@lem3501071 _90768 _90775 x f s t) (@lem3501041 _90768 _90775 f s x' u x)). Qed.
Lemma lem3501077 {_90775 : Type'} (u : _90775 -> Prop) (x : _90775) : (term618 _90775 u x) = (term618 _90775 u x).
Proof. exact (eq_refl (term618 _90775 u x)). Qed.
Lemma lem3501094 {_90768 _90775 : Type'} (x : _90775) (f : _90768 -> _90775) (s : _90768 -> Prop) (x' : _90768) : (term364 _90768 _90775 x f s x') = (term364 _90768 _90775 x f s x').
Proof. exact (eq_refl (term364 _90768 _90775 x f s x')). Qed.
Lemma lem3501095 {_90768 _90775 : Type'} (x : _90775) (f : _90768 -> _90775) (s : _90768 -> Prop) : (term370 _90768 _90775 x f s) = (term370 _90768 _90775 x f s).
Proof. exact (fun_ext (fun x' : _90768 => @lem3501094 _90768 _90775 x f s x')). Qed.
Lemma lem3501096 {_90768 : Type'} : (@all _90768) = (@all _90768).
Proof. exact (eq_refl (@all _90768)). Qed.
Lemma lem3501097 {_90768 _90775 : Type'} (x : _90775) (f : _90768 -> _90775) (s : _90768 -> Prop) : (term371 _90768 _90775 x f s) = (term371 _90768 _90775 x f s).
Proof. exact (MK_COMB (@lem3501096 _90768) (@lem3501095 _90768 _90775 x f s)). Qed.
Lemma lem3501098 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem3501099 {_90768 _90775 : Type'} (x : _90775) (f : _90768 -> _90775) (s : _90768 -> Prop) : (term1102 _90768 _90775 x f s) = (term1102 _90768 _90775 x f s).
Proof. exact (MK_COMB (@lem3501098) (@lem3501097 _90768 _90775 x f s)). Qed.
Lemma lem3501100 {_90768 _90775 : Type'} (f : _90768 -> _90775) (s : _90768 -> Prop) (u : _90775 -> Prop) (x : _90775) : (term1476 _90768 _90775 f s u x) = (term1476 _90768 _90775 f s u x).
Proof. exact (MK_COMB (@lem3501099 _90768 _90775 x f s) (@lem3501077 _90775 u x)). Qed.
Lemma lem3501121 {_90768 _90775 : Type'} (x : _90775) (f : _90768 -> _90775) (s : _90768 -> Prop) (t : _90768 -> Prop) (x' : _90768) : (term1495 _90768 _90775 x f s t x') = (term1495 _90768 _90775 x f s t x').
Proof. exact (eq_refl (term1495 _90768 _90775 x f s t x')). Qed.
Lemma lem3501122 {_90768 _90775 : Type'} (t : _90768 -> Prop) (x' : _90768) (f : _90768 -> _90775) (s : _90768 -> Prop) (u : _90775 -> Prop) (x : _90775) : (term1497 _90768 _90775 t x' f s u x) = (term1497 _90768 _90775 t x' f s u x).
Proof. exact (MK_COMB (@lem3501121 _90768 _90775 x f s t x') (@lem3501100 _90768 _90775 f s u x)). Qed.
Lemma lem3501123 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem3501124 {_90768 _90775 : Type'} (t : _90768 -> Prop) (x' : _90768) (f : _90768 -> _90775) (s : _90768 -> Prop) (u : _90775 -> Prop) (x : _90775) : (term1539 _90768 _90775 t x' f s u x) = (term1539 _90768 _90775 t x' f s u x).
Proof. exact (MK_COMB (@lem3501123) (@lem3501122 _90768 _90775 t x' f s u x)). Qed.
Lemma lem3501125 {_90768 _90775 : Type'} (t : _90768 -> Prop) (f : _90768 -> _90775) (s : _90768 -> Prop) (x' : _90768) (u : _90775 -> Prop) (x : _90775) : (term1541 _90768 _90775 t f s x' u x) = (term1541 _90768 _90775 t f s x' u x).
Proof. exact (MK_COMB (@lem3501124 _90768 _90775 t x' f s u x) (@lem3501072 _90768 _90775 t f s x' u x)). Qed.
Lemma lem3501126 {_90768 _90775 : Type'} (t : _90768 -> Prop) (f : _90768 -> _90775) (s : _90768 -> Prop) (x' : _90768) (u : _90775 -> Prop) (x : _90775) (h1 : term1541 _90768 _90775 t f s x' u x) : term1541 _90768 _90775 t f s x' u x.
Proof. exact (EQ_MP (@lem3501125 _90768 _90775 t f s x' u x) (@lem3501018 _90768 _90775 t f s x' u x h1)). Qed.
Lemma lem3501129 {_90775 : Type'} (u : _90775 -> Prop) (x : _90775) : (u x) = (u x).
Proof. exact (eq_refl (u x)). Qed.
Lemma lem3501146 {_90768 _90775 : Type'} (x : _90775) (f : _90768 -> _90775) (t : _90768 -> Prop) (x' : _90768) : (term364 _90768 _90775 x f t x') = (term364 _90768 _90775 x f t x').
Proof. exact (eq_refl (term364 _90768 _90775 x f t x')). Qed.
Lemma lem3501147 {_90768 _90775 : Type'} (x : _90775) (f : _90768 -> _90775) (t : _90768 -> Prop) : (term370 _90768 _90775 x f t) = (term370 _90768 _90775 x f t).
Proof. exact (fun_ext (fun x' : _90768 => @lem3501146 _90768 _90775 x f t x')). Qed.
Lemma lem3501148 {_90768 : Type'} : (@all _90768) = (@all _90768).
Proof. exact (eq_refl (@all _90768)). Qed.
Lemma lem3501149 {_90768 _90775 : Type'} (x : _90775) (f : _90768 -> _90775) (t : _90768 -> Prop) : (term371 _90768 _90775 x f t) = (term371 _90768 _90775 x f t).
Proof. exact (MK_COMB (@lem3501148 _90768) (@lem3501147 _90768 _90775 x f t)). Qed.
Lemma lem3501150 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem3501151 {_90768 _90775 : Type'} (x : _90775) (f : _90768 -> _90775) (t : _90768 -> Prop) : (term1102 _90768 _90775 x f t) = (term1102 _90768 _90775 x f t).
Proof. exact (MK_COMB (@lem3501150) (@lem3501149 _90768 _90775 x f t)). Qed.
Lemma lem3501152 {_90768 _90775 : Type'} (f : _90768 -> _90775) (t : _90768 -> Prop) (u : _90775 -> Prop) (x : _90775) : (term1120 _90768 _90775 f t u x) = (term1120 _90768 _90775 f t u x).
Proof. exact (MK_COMB (@lem3501151 _90768 _90775 x f t) (@lem3501129 _90775 u x)). Qed.
Lemma lem3501153 {_90768 _90775 : Type'} (f : _90768 -> _90775) (t : _90768 -> Prop) (u : _90775 -> Prop) : (term1154 _90768 _90775 f t u) = (term1154 _90768 _90775 f t u).
Proof. exact (fun_ext (fun x : _90775 => @lem3501152 _90768 _90775 f t u x)). Qed.
Lemma lem3501154 {_90775 : Type'} : (@all _90775) = (@all _90775).
Proof. exact (eq_refl (@all _90775)). Qed.
Lemma lem3501155 {_90768 _90775 : Type'} (f : _90768 -> _90775) (t : _90768 -> Prop) (u : _90775 -> Prop) : (term1169 _90768 _90775 f t u) = (term1169 _90768 _90775 f t u).
Proof. exact (MK_COMB (@lem3501154 _90775) (@lem3501153 _90768 _90775 f t u)). Qed.
Lemma lem3501180 {_90768 _90775 : Type'} (f : _90768 -> _90775) (t : _90768 -> Prop) (x''''' : _90775 -> _90768) (u : _90775 -> Prop) (x : _90775) : (term1386 _90768 _90775 f t x''''' u x) = (term1386 _90768 _90775 f t x''''' u x).
Proof. exact (eq_refl (term1386 _90768 _90775 f t x''''' u x)). Qed.
Lemma lem3501181 {_90768 _90775 : Type'} (f : _90768 -> _90775) (t : _90768 -> Prop) (x''''' : _90775 -> _90768) (u : _90775 -> Prop) : (term1388 _90768 _90775 f t x''''' u) = (term1388 _90768 _90775 f t x''''' u).
Proof. exact (fun_ext (fun x : _90775 => @lem3501180 _90768 _90775 f t x''''' u x)). Qed.
Lemma lem3501182 {_90775 : Type'} : (@all _90775) = (@all _90775).
Proof. exact (eq_refl (@all _90775)). Qed.
Lemma lem3501183 {_90768 _90775 : Type'} (f : _90768 -> _90775) (t : _90768 -> Prop) (x''''' : _90775 -> _90768) (u : _90775 -> Prop) : (term1390 _90768 _90775 f t x''''' u) = (term1390 _90768 _90775 f t x''''' u).
Proof. exact (MK_COMB (@lem3501182 _90775) (@lem3501181 _90768 _90775 f t x''''' u)). Qed.
Lemma lem3501184 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem3501185 {_90768 _90775 : Type'} (f : _90768 -> _90775) (t : _90768 -> Prop) (x''''' : _90775 -> _90768) (u : _90775 -> Prop) : (term1405 _90768 _90775 f t x''''' u) = (term1405 _90768 _90775 f t x''''' u).
Proof. exact (MK_COMB (@lem3501184) (@lem3501183 _90768 _90775 f t x''''' u)). Qed.
Lemma lem3501186 {_90768 _90775 : Type'} (x''''' : _90775 -> _90768) (f : _90768 -> _90775) (t : _90768 -> Prop) (u : _90775 -> Prop) : (term1407 _90768 _90775 x''''' f t u) = (term1407 _90768 _90775 x''''' f t u).
Proof. exact (MK_COMB (@lem3501185 _90768 _90775 f t x''''' u) (@lem3501155 _90768 _90775 f t u)). Qed.
Lemma lem3501223 {_90768 _90775 : Type'} (s : _90768 -> Prop) (x''' : _90775 -> _90768) (f : _90768 -> _90775) (t : _90768 -> Prop) (x'''' : _90775 -> _90768) (x : _90775) : (term1545 _90768 _90775 s x''' f t x'''' x) = (term1545 _90768 _90775 s x''' f t x'''' x).
Proof. exact (eq_refl (term1545 _90768 _90775 s x''' f t x'''' x)). Qed.
Lemma lem3501248 {_90768 _90775 : Type'} (x : _90775) (f : _90768 -> _90775) (s : _90768 -> Prop) (t : _90768 -> Prop) (x' : _90768) : (term1092 _90768 _90775 x f s t x') = (term1092 _90768 _90775 x f s t x').
Proof. exact (eq_refl (term1092 _90768 _90775 x f s t x')). Qed.
Lemma lem3501249 {_90768 _90775 : Type'} (x : _90775) (f : _90768 -> _90775) (s : _90768 -> Prop) (t : _90768 -> Prop) : (term1099 _90768 _90775 x f s t) = (term1099 _90768 _90775 x f s t).
Proof. exact (fun_ext (fun x' : _90768 => @lem3501248 _90768 _90775 x f s t x')). Qed.
Lemma lem3501250 {_90768 : Type'} : (@all _90768) = (@all _90768).
Proof. exact (eq_refl (@all _90768)). Qed.
Lemma lem3501251 {_90768 _90775 : Type'} (x : _90775) (f : _90768 -> _90775) (s : _90768 -> Prop) (t : _90768 -> Prop) : (term1100 _90768 _90775 x f s t) = (term1100 _90768 _90775 x f s t).
Proof. exact (MK_COMB (@lem3501250 _90768) (@lem3501249 _90768 _90775 x f s t)). Qed.
Lemma lem3501252 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem3501253 {_90768 _90775 : Type'} (x : _90775) (f : _90768 -> _90775) (s : _90768 -> Prop) (t : _90768 -> Prop) : (term1107 _90768 _90775 x f s t) = (term1107 _90768 _90775 x f s t).
Proof. exact (MK_COMB (@lem3501252) (@lem3501251 _90768 _90775 x f s t)). Qed.
Lemma lem3501254 {_90768 _90775 : Type'} (s : _90768 -> Prop) (x''' : _90775 -> _90768) (f : _90768 -> _90775) (t : _90768 -> Prop) (x'''' : _90775 -> _90768) (x : _90775) : (term1300 _90768 _90775 s x''' f t x'''' x) = (term1300 _90768 _90775 s x''' f t x'''' x).
Proof. exact (MK_COMB (@lem3501253 _90768 _90775 x f s t) (@lem3501223 _90768 _90775 s x''' f t x'''' x)). Qed.
Lemma lem3501255 {_90768 _90775 : Type'} (s : _90768 -> Prop) (x''' : _90775 -> _90768) (f : _90768 -> _90775) (t : _90768 -> Prop) (x'''' : _90775 -> _90768) : (term1302 _90768 _90775 s x''' f t x'''') = (term1302 _90768 _90775 s x''' f t x'''').
Proof. exact (fun_ext (fun x : _90775 => @lem3501254 _90768 _90775 s x''' f t x'''' x)). Qed.
Lemma lem3501256 {_90775 : Type'} : (@all _90775) = (@all _90775).
Proof. exact (eq_refl (@all _90775)). Qed.
Lemma lem3501257 {_90768 _90775 : Type'} (s : _90768 -> Prop) (x''' : _90775 -> _90768) (f : _90768 -> _90775) (t : _90768 -> Prop) (x'''' : _90775 -> _90768) : (term1304 _90768 _90775 s x''' f t x'''') = (term1304 _90768 _90775 s x''' f t x'''').
Proof. exact (MK_COMB (@lem3501256 _90775) (@lem3501255 _90768 _90775 s x''' f t x'''')). Qed.
Lemma lem3501274 {_90768 _90775 : Type'} (x : _90775) (f : _90768 -> _90775) (t : _90768 -> Prop) (x' : _90768) : (term364 _90768 _90775 x f t x') = (term364 _90768 _90775 x f t x').
Proof. exact (eq_refl (term364 _90768 _90775 x f t x')). Qed.
Lemma lem3501275 {_90768 _90775 : Type'} (x : _90775) (f : _90768 -> _90775) (t : _90768 -> Prop) : (term370 _90768 _90775 x f t) = (term370 _90768 _90775 x f t).
Proof. exact (fun_ext (fun x' : _90768 => @lem3501274 _90768 _90775 x f t x')). Qed.
Lemma lem3501276 {_90768 : Type'} : (@all _90768) = (@all _90768).
Proof. exact (eq_refl (@all _90768)). Qed.
Lemma lem3501277 {_90768 _90775 : Type'} (x : _90775) (f : _90768 -> _90775) (t : _90768 -> Prop) : (term371 _90768 _90775 x f t) = (term371 _90768 _90775 x f t).
Proof. exact (MK_COMB (@lem3501276 _90768) (@lem3501275 _90768 _90775 x f t)). Qed.
Lemma lem3501294 {_90768 _90775 : Type'} (x : _90775) (f : _90768 -> _90775) (s : _90768 -> Prop) (x' : _90768) : (term364 _90768 _90775 x f s x') = (term364 _90768 _90775 x f s x').
Proof. exact (eq_refl (term364 _90768 _90775 x f s x')). Qed.
Lemma lem3501295 {_90768 _90775 : Type'} (x : _90775) (f : _90768 -> _90775) (s : _90768 -> Prop) : (term370 _90768 _90775 x f s) = (term370 _90768 _90775 x f s).
Proof. exact (fun_ext (fun x' : _90768 => @lem3501294 _90768 _90775 x f s x')). Qed.
Lemma lem3501296 {_90768 : Type'} : (@all _90768) = (@all _90768).
Proof. exact (eq_refl (@all _90768)). Qed.
Lemma lem3501297 {_90768 _90775 : Type'} (x : _90775) (f : _90768 -> _90775) (s : _90768 -> Prop) : (term371 _90768 _90775 x f s) = (term371 _90768 _90775 x f s).
Proof. exact (MK_COMB (@lem3501296 _90768) (@lem3501295 _90768 _90775 x f s)). Qed.
Lemma lem3501298 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem3501299 {_90768 _90775 : Type'} (x : _90775) (f : _90768 -> _90775) (s : _90768 -> Prop) : (term1102 _90768 _90775 x f s) = (term1102 _90768 _90775 x f s).
Proof. exact (MK_COMB (@lem3501298) (@lem3501297 _90768 _90775 x f s)). Qed.
Lemma lem3501300 {_90768 _90775 : Type'} (s : _90768 -> Prop) (x : _90775) (f : _90768 -> _90775) (t : _90768 -> Prop) : (term1104 _90768 _90775 s x f t) = (term1104 _90768 _90775 s x f t).
Proof. exact (MK_COMB (@lem3501299 _90768 _90775 x f s) (@lem3501277 _90768 _90775 x f t)). Qed.
Lemma lem3501327 {_90768 _90775 : Type'} (f : _90768 -> _90775) (s : _90768 -> Prop) (t : _90768 -> Prop) (x'' : _90775 -> _90768) (x : _90775) : (term1546 _90768 _90775 f s t x'' x) = (term1546 _90768 _90775 f s t x'' x).
Proof. exact (eq_refl (term1546 _90768 _90775 f s t x'' x)). Qed.
Lemma lem3501328 {_90768 _90775 : Type'} (x'' : _90775 -> _90768) (s : _90768 -> Prop) (x : _90775) (f : _90768 -> _90775) (t : _90768 -> Prop) : (term1203 _90768 _90775 x'' s x f t) = (term1203 _90768 _90775 x'' s x f t).
Proof. exact (MK_COMB (@lem3501327 _90768 _90775 f s t x'' x) (@lem3501300 _90768 _90775 s x f t)). Qed.
Lemma lem3501329 {_90768 _90775 : Type'} (x'' : _90775 -> _90768) (s : _90768 -> Prop) (f : _90768 -> _90775) (t : _90768 -> Prop) : (term1205 _90768 _90775 x'' s f t) = (term1205 _90768 _90775 x'' s f t).
Proof. exact (fun_ext (fun x : _90775 => @lem3501328 _90768 _90775 x'' s x f t)). Qed.
Lemma lem3501330 {_90775 : Type'} : (@all _90775) = (@all _90775).
Proof. exact (eq_refl (@all _90775)). Qed.
Lemma lem3501331 {_90768 _90775 : Type'} (x'' : _90775 -> _90768) (s : _90768 -> Prop) (f : _90768 -> _90775) (t : _90768 -> Prop) : (term1207 _90768 _90775 x'' s f t) = (term1207 _90768 _90775 x'' s f t).
Proof. exact (MK_COMB (@lem3501330 _90775) (@lem3501329 _90768 _90775 x'' s f t)). Qed.
Lemma lem3501332 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem3501333 {_90768 _90775 : Type'} (x'' : _90775 -> _90768) (s : _90768 -> Prop) (f : _90768 -> _90775) (t : _90768 -> Prop) : (term1322 _90768 _90775 x'' s f t) = (term1322 _90768 _90775 x'' s f t).
Proof. exact (MK_COMB (@lem3501332) (@lem3501331 _90768 _90775 x'' s f t)). Qed.
Lemma lem3501334 {_90768 _90775 : Type'} (x'' : _90775 -> _90768) (s : _90768 -> Prop) (x''' : _90775 -> _90768) (f : _90768 -> _90775) (t : _90768 -> Prop) (x'''' : _90775 -> _90768) : (term1350 _90768 _90775 x'' s x''' f t x'''') = (term1350 _90768 _90775 x'' s x''' f t x'''').
Proof. exact (MK_COMB (@lem3501333 _90768 _90775 x'' s f t) (@lem3501257 _90768 _90775 s x''' f t x'''')). Qed.
Lemma lem3501335 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem3501336 {_90768 _90775 : Type'} (x'' : _90775 -> _90768) (s : _90768 -> Prop) (x''' : _90775 -> _90768) (f : _90768 -> _90775) (t : _90768 -> Prop) (x'''' : _90775 -> _90768) : (term1451 _90768 _90775 x'' s x''' f t x'''') = (term1451 _90768 _90775 x'' s x''' f t x'''').
Proof. exact (MK_COMB (@lem3501335) (@lem3501334 _90768 _90775 x'' s x''' f t x'''')). Qed.
Lemma lem3501337 {_90768 _90775 : Type'} (x'' : _90775 -> _90768) (s : _90768 -> Prop) (x''' : _90775 -> _90768) (x'''' : _90775 -> _90768) (x''''' : _90775 -> _90768) (f : _90768 -> _90775) (t : _90768 -> Prop) (u : _90775 -> Prop) : (term1465 _90768 _90775 x'' s x''' x'''' x''''' f t u) = (term1465 _90768 _90775 x'' s x''' x'''' x''''' f t u).
Proof. exact (MK_COMB (@lem3501336 _90768 _90775 x'' s x''' f t x'''') (@lem3501186 _90768 _90775 x''''' f t u)). Qed.
Lemma lem3501338 {_90768 _90775 : Type'} (x'' : _90775 -> _90768) (s : _90768 -> Prop) (x''' : _90775 -> _90768) (x'''' : _90775 -> _90768) (x''''' : _90775 -> _90768) (f : _90768 -> _90775) (t : _90768 -> Prop) (u : _90775 -> Prop) (h1 : term1465 _90768 _90775 x'' s x''' x'''' x''''' f t u) : term1465 _90768 _90775 x'' s x''' x'''' x''''' f t u.
Proof. exact (EQ_MP (@lem3501337 _90768 _90775 x'' s x''' x'''' x''''' f t u) (@lem3501022 _90768 _90775 x'' s x''' x'''' x''''' f t u h1)). Qed.
Lemma lem3501339 {_90768 _90775 : Type'} (x'' : _90775 -> _90768) (s : _90768 -> Prop) (x''' : _90775 -> _90768) (x'''' : _90775 -> _90768) (x''''' : _90775 -> _90768) (f : _90768 -> _90775) (t : _90768 -> Prop) (u : _90775 -> Prop) (h1 : term1465 _90768 _90775 x'' s x''' x'''' x''''' f t u) : term1407 _90768 _90775 x''''' f t u.
Proof. exact (proj2 (@lem3501338 _90768 _90775 x'' s x''' x'''' x''''' f t u h1)). Qed.
Lemma lem3501340 {_90768 _90775 : Type'} (x'' : _90775 -> _90768) (s : _90768 -> Prop) (x''' : _90775 -> _90768) (x'''' : _90775 -> _90768) (x''''' : _90775 -> _90768) (f : _90768 -> _90775) (t : _90768 -> Prop) (u : _90775 -> Prop) (h1 : term1465 _90768 _90775 x'' s x''' x'''' x''''' f t u) : term1350 _90768 _90775 x'' s x''' f t x''''.
Proof. exact (proj1 (@lem3501338 _90768 _90775 x'' s x''' x'''' x''''' f t u h1)). Qed.
Lemma lem3501341 {_90768 _90775 : Type'} (x'' : _90775 -> _90768) (s : _90768 -> Prop) (x''' : _90775 -> _90768) (x'''' : _90775 -> _90768) (x''''' : _90775 -> _90768) (f : _90768 -> _90775) (t : _90768 -> Prop) (u : _90775 -> Prop) (h1 : term1465 _90768 _90775 x'' s x''' x'''' x''''' f t u) : term1169 _90768 _90775 f t u.
Proof. exact (proj2 (@lem3501339 _90768 _90775 x'' s x''' x'''' x''''' f t u h1)). Qed.
Lemma lem3501342 {_90768 _90775 : Type'} (x'' : _90775 -> _90768) (s : _90768 -> Prop) (x''' : _90775 -> _90768) (x'''' : _90775 -> _90768) (x''''' : _90775 -> _90768) (f : _90768 -> _90775) (t : _90768 -> Prop) (u : _90775 -> Prop) (h1 : term1465 _90768 _90775 x'' s x''' x'''' x''''' f t u) : term1390 _90768 _90775 f t x''''' u.
Proof. exact (proj1 (@lem3501339 _90768 _90775 x'' s x''' x'''' x''''' f t u h1)). Qed.
Lemma lem3501344 {_90768 _90775 : Type'} (x'' : _90775 -> _90768) (s : _90768 -> Prop) (x''' : _90775 -> _90768) (x'''' : _90775 -> _90768) (x''''' : _90775 -> _90768) (f : _90768 -> _90775) (t : _90768 -> Prop) (u : _90775 -> Prop) (h1 : term1465 _90768 _90775 x'' s x''' x'''' x''''' f t u) : term1207 _90768 _90775 x'' s f t.
Proof. exact (proj1 (@lem3501340 _90768 _90775 x'' s x''' x'''' x''''' f t u h1)). Qed.
Lemma lem3501345 {_90768 _90775 : Type'} (t : _90768 -> Prop) (x' : _90768) (f : _90768 -> _90775) (s : _90768 -> Prop) (u : _90775 -> Prop) (x : _90775) (h1 : term1497 _90768 _90775 t x' f s u x) : term1497 _90768 _90775 t x' f s u x.
Proof. exact (h1). Qed.
Lemma lem3501346 {_90768 _90775 : Type'} (t : _90768 -> Prop) (f : _90768 -> _90775) (s : _90768 -> Prop) (x' : _90768) (u : _90775 -> Prop) (x : _90775) (h1 : term1520 _90768 _90775 t f s x' u x) : term1520 _90768 _90775 t f s x' u x.
Proof. exact (h1). Qed.
Lemma lem3501347 {_90768 _90775 : Type'} (t : _90768 -> Prop) (x' : _90768) (f : _90768 -> _90775) (s : _90768 -> Prop) (u : _90775 -> Prop) (x : _90775) (h1 : term1497 _90768 _90775 t x' f s u x) : term1476 _90768 _90775 f s u x.
Proof. exact (proj2 (@lem3501345 _90768 _90775 t x' f s u x h1)). Qed.
Lemma lem3501348 {_90768 _90775 : Type'} (t : _90768 -> Prop) (x' : _90768) (f : _90768 -> _90775) (s : _90768 -> Prop) (u : _90775 -> Prop) (x : _90775) (h1 : term1497 _90768 _90775 t x' f s u x) : term1036 _90768 _90775 x f s t x'.
Proof. exact (proj1 (@lem3501345 _90768 _90775 t x' f s u x h1)). Qed.
Lemma lem3501349 {_90768 _90775 : Type'} (t : _90768 -> Prop) (x' : _90768) (f : _90768 -> _90775) (s : _90768 -> Prop) (u : _90775 -> Prop) (x : _90775) (h1 : term1497 _90768 _90775 t x' f s u x) : term1034 _90768 s t x'.
Proof. exact (proj2 (@lem3501348 _90768 _90775 t x' f s u x h1)). Qed.
Lemma lem3501353 {_90768 _90775 : Type'} (x : _90775) (f : _90768 -> _90775) (s : _90768 -> Prop) (h1 : term371 _90768 _90775 x f s) : term371 _90768 _90775 x f s.
Proof. exact (h1). Qed.
Lemma lem3501355 {_90768 _90775 : Type'} (t : _90768 -> Prop) (f : _90768 -> _90775) (s : _90768 -> Prop) (x' : _90768) (u : _90775 -> Prop) (x : _90775) (h1 : term1520 _90768 _90775 t f s x' u x) : term1507 _90768 _90775 f s x' u x.
Proof. exact (proj2 (@lem3501346 _90768 _90775 t f s x' u x h1)). Qed.
Lemma lem3501356 {_90768 _90775 : Type'} (t : _90768 -> Prop) (f : _90768 -> _90775) (s : _90768 -> Prop) (x' : _90768) (u : _90775 -> Prop) (x : _90775) (h1 : term1520 _90768 _90775 t f s x' u x) : term1100 _90768 _90775 x f s t.
Proof. exact (proj1 (@lem3501346 _90768 _90775 t f s x' u x h1)). Qed.
Lemma lem3501358 {_90768 _90775 : Type'} (t : _90768 -> Prop) (f : _90768 -> _90775) (s : _90768 -> Prop) (x' : _90768) (u : _90775 -> Prop) (x : _90775) (h1 : term1520 _90768 _90775 t f s x' u x) : term264 _90768 _90775 x f s x'.
Proof. exact (proj1 (@lem3501355 _90768 _90775 t f s x' u x h1)). Qed.
Lemma lem3501689 {_90768 _90775 : Type'} (x : _90775) (f : _90768 -> _90775) (s : _90768 -> Prop) (x' : _90768) : (term364 _90768 _90775 x f s x') = (term364 _90768 _90775 x f s x').
Proof. exact (eq_refl (term364 _90768 _90775 x f s x')). Qed.
Lemma lem3501690 {_90768 _90775 : Type'} (x : _90775) (f : _90768 -> _90775) (s : _90768 -> Prop) : (term370 _90768 _90775 x f s) = (term370 _90768 _90775 x f s).
Proof. exact (fun_ext (fun x' : _90768 => @lem3501689 _90768 _90775 x f s x')). Qed.
Lemma lem3501691 {_90768 : Type'} : (@all _90768) = (@all _90768).
Proof. exact (eq_refl (@all _90768)). Qed.
Lemma lem3501693 {_90768 _90775 : Type'} (x : _90775) (f : _90768 -> _90775) (s : _90768 -> Prop) : (term371 _90768 _90775 x f s) = (term371 _90768 _90775 x f s).
Proof. exact (MK_COMB (@lem3501691 _90768) (@lem3501690 _90768 _90775 x f s)). Qed.
Lemma lem3501694 {_90768 _90775 : Type'} (x : _90775) (f : _90768 -> _90775) (s : _90768 -> Prop) (h1 : term371 _90768 _90775 x f s) : term371 _90768 _90775 x f s.
Proof. exact (EQ_MP (@lem3501693 _90768 _90775 x f s) (@lem3501353 _90768 _90775 x f s h1)). Qed.
Lemma lem3501719 {A : Type'} (P : A -> Prop) (Q : Prop) : (term705 A P Q) = (term706 A P Q).
Proof. exact (EQ_MP (@lem19013 A P Q) (@lem19012 A P Q)). Qed.
Lemma lem3501720 {_90768 : Type'} (P : _90768 -> Prop) (Q : Prop) : (term705 _90768 P Q) = (term706 _90768 P Q).
Proof. exact (@lem3501719 _90768 P Q). Qed.
Lemma lem3501721 {_90768 _90775 : Type'} (f : _90768 -> _90775) (t : _90768 -> Prop) (u : _90775 -> Prop) (x : _90775) : (term1547 _90768 _90775 f t u x) = (term1548 _90768 _90775 f t u x).
Proof. exact (@lem3501720 _90768 (term370 _90768 _90775 x f t) (u x)). Qed.
Lemma lem3501722 {_90768 _90775 : Type'} (x : _90775) (f : _90768 -> _90775) (t : _90768 -> Prop) (x' : _90768) : (term1549 _90768 _90775 x f t x') = (term364 _90768 _90775 x f t x').
Proof. exact (eq_refl (term1549 _90768 _90775 x f t x')). Qed.
Lemma lem3501723 {_90768 _90775 : Type'} (x : _90775) (f : _90768 -> _90775) (t : _90768 -> Prop) : (term1550 _90768 _90775 x f t) = (term370 _90768 _90775 x f t).
Proof. exact (fun_ext (fun x' : _90768 => @lem3501722 _90768 _90775 x f t x')). Qed.
Lemma lem3501724 {_90768 : Type'} : (@all _90768) = (@all _90768).
Proof. exact (eq_refl (@all _90768)). Qed.
Lemma lem3501725 {_90768 _90775 : Type'} (x : _90775) (f : _90768 -> _90775) (t : _90768 -> Prop) : (term1551 _90768 _90775 x f t) = (term371 _90768 _90775 x f t).
Proof. exact (MK_COMB (@lem3501724 _90768) (@lem3501723 _90768 _90775 x f t)). Qed.
Lemma lem3501726 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem3501727 {_90768 _90775 : Type'} (x : _90775) (f : _90768 -> _90775) (t : _90768 -> Prop) : (term1552 _90768 _90775 x f t) = (term1102 _90768 _90775 x f t).
Proof. exact (MK_COMB (@lem3501726) (@lem3501725 _90768 _90775 x f t)). Qed.
Lemma lem3501728 {_90775 : Type'} (u : _90775 -> Prop) (x : _90775) : (u x) = (u x).
Proof. exact (eq_refl (u x)). Qed.
Lemma lem3501729 {_90768 _90775 : Type'} (f : _90768 -> _90775) (t : _90768 -> Prop) (u : _90775 -> Prop) (x : _90775) : (term1547 _90768 _90775 f t u x) = (term1120 _90768 _90775 f t u x).
Proof. exact (MK_COMB (@lem3501727 _90768 _90775 x f t) (@lem3501728 _90775 u x)). Qed.
Lemma lem3501730 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem3501731 {_90768 _90775 : Type'} (f : _90768 -> _90775) (t : _90768 -> Prop) (u : _90775 -> Prop) (x : _90775) : (term1553 _90768 _90775 f t u x) = (term1554 _90768 _90775 f t u x).
Proof. exact (MK_COMB (@lem3501730) (@lem3501729 _90768 _90775 f t u x)). Qed.
Lemma lem3501732 {_90768 _90775 : Type'} (x : _90775) (f : _90768 -> _90775) (t : _90768 -> Prop) (x' : _90768) : (term1549 _90768 _90775 x f t x') = (term364 _90768 _90775 x f t x').
Proof. exact (eq_refl (term1549 _90768 _90775 x f t x')). Qed.
Lemma lem3501733 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem3501734 {_90768 _90775 : Type'} (x : _90775) (f : _90768 -> _90775) (t : _90768 -> Prop) (x' : _90768) : (term1555 _90768 _90775 x f t x') = (term1556 _90768 _90775 x f t x').
Proof. exact (MK_COMB (@lem3501733) (@lem3501732 _90768 _90775 x f t x')). Qed.
Lemma lem3501735 {_90775 : Type'} (u : _90775 -> Prop) (x : _90775) : (u x) = (u x).
Proof. exact (eq_refl (u x)). Qed.
Lemma lem3501736 {_90768 _90775 : Type'} (f : _90768 -> _90775) (t : _90768 -> Prop) (x : _90768) (u : _90775 -> Prop) (x' : _90775) : (term1557 _90768 _90775 f t x u x') = (term1558 _90768 _90775 f t x u x').
Proof. exact (MK_COMB (@lem3501734 _90768 _90775 x' f t x) (@lem3501735 _90775 u x')). Qed.
Lemma lem3501737 {_90768 _90775 : Type'} (f : _90768 -> _90775) (t : _90768 -> Prop) (u : _90775 -> Prop) (x : _90775) : (term1559 _90768 _90775 f t u x) = (term1560 _90768 _90775 f t u x).
Proof. exact (fun_ext (fun x' : _90768 => @lem3501736 _90768 _90775 f t x' u x)). Qed.
Lemma lem3501738 {_90768 : Type'} : (@all _90768) = (@all _90768).
Proof. exact (eq_refl (@all _90768)). Qed.
Lemma lem3501739 {_90768 _90775 : Type'} (f : _90768 -> _90775) (t : _90768 -> Prop) (u : _90775 -> Prop) (x : _90775) : (term1548 _90768 _90775 f t u x) = (term1561 _90768 _90775 f t u x).
Proof. exact (MK_COMB (@lem3501738 _90768) (@lem3501737 _90768 _90775 f t u x)). Qed.
Lemma lem3501740 {_90768 _90775 : Type'} (f : _90768 -> _90775) (t : _90768 -> Prop) (u : _90775 -> Prop) (x : _90775) : ((term1547 _90768 _90775 f t u x) = (term1548 _90768 _90775 f t u x)) = ((term1120 _90768 _90775 f t u x) = (term1561 _90768 _90775 f t u x)).
Proof. exact (MK_COMB (@lem3501731 _90768 _90775 f t u x) (@lem3501739 _90768 _90775 f t u x)). Qed.
Lemma lem3501741 {_90768 _90775 : Type'} (f : _90768 -> _90775) (t : _90768 -> Prop) (u : _90775 -> Prop) (x : _90775) : (term1120 _90768 _90775 f t u x) = (term1561 _90768 _90775 f t u x).
Proof. exact (EQ_MP (@lem3501740 _90768 _90775 f t u x) (@lem3501721 _90768 _90775 f t u x)). Qed.
Lemma lem3501742 {_90768 _90775 : Type'} (f : _90768 -> _90775) (t : _90768 -> Prop) (u : _90775 -> Prop) : (term1154 _90768 _90775 f t u) = (term1562 _90768 _90775 f t u).
Proof. exact (fun_ext (fun x : _90775 => @lem3501741 _90768 _90775 f t u x)). Qed.
Lemma lem3501743 {_90775 : Type'} : (@all _90775) = (@all _90775).
Proof. exact (eq_refl (@all _90775)). Qed.
Lemma lem3501744 {_90768 _90775 : Type'} (f : _90768 -> _90775) (t : _90768 -> Prop) (u : _90775 -> Prop) : (term1169 _90768 _90775 f t u) = (term1563 _90768 _90775 f t u).
Proof. exact (MK_COMB (@lem3501743 _90775) (@lem3501742 _90768 _90775 f t u)). Qed.
Lemma lem3501757 {_90768 _90775 : Type'} (f : _90768 -> _90775) (t : _90768 -> Prop) (x : _90768) (u : _90775 -> Prop) (x' : _90775) : (term1558 _90768 _90775 f t x u x') = (term1558 _90768 _90775 f t x u x').
Proof. exact (eq_refl (term1558 _90768 _90775 f t x u x')). Qed.
Lemma lem3501758 {_90768 _90775 : Type'} (f : _90768 -> _90775) (t : _90768 -> Prop) (u : _90775 -> Prop) (x : _90775) : (term1560 _90768 _90775 f t u x) = (term1560 _90768 _90775 f t u x).
Proof. exact (fun_ext (fun x' : _90768 => @lem3501757 _90768 _90775 f t x' u x)). Qed.
Lemma lem3501759 {_90768 : Type'} : (@all _90768) = (@all _90768).
Proof. exact (eq_refl (@all _90768)). Qed.
Lemma lem3501760 {_90768 _90775 : Type'} (f : _90768 -> _90775) (t : _90768 -> Prop) (u : _90775 -> Prop) (x : _90775) : (term1561 _90768 _90775 f t u x) = (term1561 _90768 _90775 f t u x).
Proof. exact (MK_COMB (@lem3501759 _90768) (@lem3501758 _90768 _90775 f t u x)). Qed.
Lemma lem3501761 {_90768 _90775 : Type'} (f : _90768 -> _90775) (t : _90768 -> Prop) (u : _90775 -> Prop) : (term1562 _90768 _90775 f t u) = (term1562 _90768 _90775 f t u).
Proof. exact (fun_ext (fun x : _90775 => @lem3501760 _90768 _90775 f t u x)). Qed.
Lemma lem3501762 {_90775 : Type'} : (@all _90775) = (@all _90775).
Proof. exact (eq_refl (@all _90775)). Qed.
Lemma lem3501763 {_90768 _90775 : Type'} (f : _90768 -> _90775) (t : _90768 -> Prop) (u : _90775 -> Prop) : (term1563 _90768 _90775 f t u) = (term1563 _90768 _90775 f t u).
Proof. exact (MK_COMB (@lem3501762 _90775) (@lem3501761 _90768 _90775 f t u)). Qed.
Lemma lem3501764 {_90768 _90775 : Type'} (f : _90768 -> _90775) (t : _90768 -> Prop) (u : _90775 -> Prop) : (term1169 _90768 _90775 f t u) = (term1563 _90768 _90775 f t u).
Proof. exact (TRANS (@lem3501744 _90768 _90775 f t u) (@lem3501763 _90768 _90775 f t u)). Qed.
Lemma lem3501765 {_90768 _90775 : Type'} (x'' : _90775 -> _90768) (s : _90768 -> Prop) (x''' : _90775 -> _90768) (x'''' : _90775 -> _90768) (x''''' : _90775 -> _90768) (f : _90768 -> _90775) (t : _90768 -> Prop) (u : _90775 -> Prop) (h1 : term1465 _90768 _90775 x'' s x''' x'''' x''''' f t u) : term1563 _90768 _90775 f t u.
Proof. exact (EQ_MP (@lem3501764 _90768 _90775 f t u) (@lem3501341 _90768 _90775 x'' s x''' x'''' x''''' f t u h1)). Qed.
Lemma lem3502019 {_90775 : Type'} (u : _90775 -> Prop) (x : _90775) (h1 : term618 _90775 u x) : term618 _90775 u x.
Proof. exact (h1). Qed.
Lemma lem3502037 {_90768 _90775 : Type'} (f : _90768 -> _90775) (t : _90768 -> Prop) (x''''' : _90775 -> _90768) (u : _90775 -> Prop) (x : _90775) : (term1386 _90768 _90775 f t x''''' u x) = (term1564 _90768 _90775 f t x''''' u x).
Proof. exact (@lem19699 (x = (term1565 _90768 _90775 f x''''' x)) (term1566 _90768 _90775 t x''''' x) (term618 _90775 u x)). Qed.
Lemma lem3502038 {_90768 _90775 : Type'} (f : _90768 -> _90775) (t : _90768 -> Prop) (x''''' : _90775 -> _90768) (u : _90775 -> Prop) : (term1388 _90768 _90775 f t x''''' u) = (term1567 _90768 _90775 f t x''''' u).
Proof. exact (fun_ext (fun x : _90775 => @lem3502037 _90768 _90775 f t x''''' u x)). Qed.
Lemma lem3502039 {_90775 : Type'} : (@all _90775) = (@all _90775).
Proof. exact (eq_refl (@all _90775)). Qed.
Lemma lem3502041 {_90768 _90775 : Type'} (f : _90768 -> _90775) (t : _90768 -> Prop) (x''''' : _90775 -> _90768) (u : _90775 -> Prop) : (term1390 _90768 _90775 f t x''''' u) = (term1568 _90768 _90775 f t x''''' u).
Proof. exact (MK_COMB (@lem3502039 _90775) (@lem3502038 _90768 _90775 f t x''''' u)). Qed.
Lemma lem3502042 {_90768 _90775 : Type'} (x'' : _90775 -> _90768) (s : _90768 -> Prop) (x''' : _90775 -> _90768) (x'''' : _90775 -> _90768) (x''''' : _90775 -> _90768) (f : _90768 -> _90775) (t : _90768 -> Prop) (u : _90775 -> Prop) (h1 : term1465 _90768 _90775 x'' s x''' x'''' x''''' f t u) : term1568 _90768 _90775 f t x''''' u.
Proof. exact (EQ_MP (@lem3502041 _90768 _90775 f t x''''' u) (@lem3501342 _90768 _90775 x'' s x''' x'''' x''''' f t u h1)). Qed.
Lemma lem3502092 {A : Type'} (P : A -> Prop) (Q : Prop) : (term705 A P Q) = (term706 A P Q).
Proof. exact (EQ_MP (@lem19013 A P Q) (@lem19012 A P Q)). Qed.
Lemma lem3502093 {_90768 : Type'} (P : _90768 -> Prop) (Q : Prop) : (term705 _90768 P Q) = (term706 _90768 P Q).
Proof. exact (@lem3502092 _90768 P Q). Qed.
Lemma lem3502094 {_90768 _90775 : Type'} (s : _90768 -> Prop) (x : _90775) (f : _90768 -> _90775) (t : _90768 -> Prop) : (term1569 _90768 _90775 s x f t) = (term1570 _90768 _90775 s x f t).
Proof. exact (@lem3502093 _90768 (term370 _90768 _90775 x f s) (term371 _90768 _90775 x f t)). Qed.
Lemma lem3502095 {_90768 _90775 : Type'} (x : _90775) (f : _90768 -> _90775) (s : _90768 -> Prop) (x' : _90768) : (term1549 _90768 _90775 x f s x') = (term364 _90768 _90775 x f s x').
Proof. exact (eq_refl (term1549 _90768 _90775 x f s x')). Qed.
Lemma lem3502096 {_90768 _90775 : Type'} (x : _90775) (f : _90768 -> _90775) (s : _90768 -> Prop) : (term1550 _90768 _90775 x f s) = (term370 _90768 _90775 x f s).
Proof. exact (fun_ext (fun x' : _90768 => @lem3502095 _90768 _90775 x f s x')). Qed.
Lemma lem3502097 {_90768 : Type'} : (@all _90768) = (@all _90768).
Proof. exact (eq_refl (@all _90768)). Qed.
Lemma lem3502098 {_90768 _90775 : Type'} (x : _90775) (f : _90768 -> _90775) (s : _90768 -> Prop) : (term1551 _90768 _90775 x f s) = (term371 _90768 _90775 x f s).
Proof. exact (MK_COMB (@lem3502097 _90768) (@lem3502096 _90768 _90775 x f s)). Qed.
Lemma lem3502099 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem3502100 {_90768 _90775 : Type'} (x : _90775) (f : _90768 -> _90775) (s : _90768 -> Prop) : (term1552 _90768 _90775 x f s) = (term1102 _90768 _90775 x f s).
Proof. exact (MK_COMB (@lem3502099) (@lem3502098 _90768 _90775 x f s)). Qed.
Lemma lem3502101 {_90768 _90775 : Type'} (x : _90775) (f : _90768 -> _90775) (t : _90768 -> Prop) : (term371 _90768 _90775 x f t) = (term371 _90768 _90775 x f t).
Proof. exact (eq_refl (term371 _90768 _90775 x f t)). Qed.
Lemma lem3502102 {_90768 _90775 : Type'} (s : _90768 -> Prop) (x : _90775) (f : _90768 -> _90775) (t : _90768 -> Prop) : (term1569 _90768 _90775 s x f t) = (term1104 _90768 _90775 s x f t).
Proof. exact (MK_COMB (@lem3502100 _90768 _90775 x f s) (@lem3502101 _90768 _90775 x f t)). Qed.
Lemma lem3502103 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem3502104 {_90768 _90775 : Type'} (s : _90768 -> Prop) (x : _90775) (f : _90768 -> _90775) (t : _90768 -> Prop) : (term1571 _90768 _90775 s x f t) = (term1572 _90768 _90775 s x f t).
Proof. exact (MK_COMB (@lem3502103) (@lem3502102 _90768 _90775 s x f t)). Qed.
Lemma lem3502105 {_90768 _90775 : Type'} (x : _90775) (f : _90768 -> _90775) (s : _90768 -> Prop) (x' : _90768) : (term1549 _90768 _90775 x f s x') = (term364 _90768 _90775 x f s x').
Proof. exact (eq_refl (term1549 _90768 _90775 x f s x')). Qed.
Lemma lem3502106 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem3502107 {_90768 _90775 : Type'} (x : _90775) (f : _90768 -> _90775) (s : _90768 -> Prop) (x' : _90768) : (term1555 _90768 _90775 x f s x') = (term1556 _90768 _90775 x f s x').
Proof. exact (MK_COMB (@lem3502106) (@lem3502105 _90768 _90775 x f s x')). Qed.
Lemma lem3502108 {_90768 _90775 : Type'} (x : _90775) (f : _90768 -> _90775) (t : _90768 -> Prop) : (term371 _90768 _90775 x f t) = (term371 _90768 _90775 x f t).
Proof. exact (eq_refl (term371 _90768 _90775 x f t)). Qed.
Lemma lem3502109 {_90768 _90775 : Type'} (s : _90768 -> Prop) (x : _90768) (x' : _90775) (f : _90768 -> _90775) (t : _90768 -> Prop) : (term1573 _90768 _90775 s x x' f t) = (term1574 _90768 _90775 s x x' f t).
Proof. exact (MK_COMB (@lem3502107 _90768 _90775 x' f s x) (@lem3502108 _90768 _90775 x' f t)). Qed.
Lemma lem3502110 {_90768 _90775 : Type'} (s : _90768 -> Prop) (x : _90775) (f : _90768 -> _90775) (t : _90768 -> Prop) : (term1575 _90768 _90775 s x f t) = (term1576 _90768 _90775 s x f t).
Proof. exact (fun_ext (fun x' : _90768 => @lem3502109 _90768 _90775 s x' x f t)). Qed.
Lemma lem3502111 {_90768 : Type'} : (@all _90768) = (@all _90768).
Proof. exact (eq_refl (@all _90768)). Qed.
Lemma lem3502112 {_90768 _90775 : Type'} (s : _90768 -> Prop) (x : _90775) (f : _90768 -> _90775) (t : _90768 -> Prop) : (term1570 _90768 _90775 s x f t) = (term1577 _90768 _90775 s x f t).
Proof. exact (MK_COMB (@lem3502111 _90768) (@lem3502110 _90768 _90775 s x f t)). Qed.
Lemma lem3502113 {_90768 _90775 : Type'} (s : _90768 -> Prop) (x : _90775) (f : _90768 -> _90775) (t : _90768 -> Prop) : ((term1569 _90768 _90775 s x f t) = (term1570 _90768 _90775 s x f t)) = ((term1104 _90768 _90775 s x f t) = (term1577 _90768 _90775 s x f t)).
Proof. exact (MK_COMB (@lem3502104 _90768 _90775 s x f t) (@lem3502112 _90768 _90775 s x f t)). Qed.
Lemma lem3502114 {_90768 _90775 : Type'} (s : _90768 -> Prop) (x : _90775) (f : _90768 -> _90775) (t : _90768 -> Prop) : (term1104 _90768 _90775 s x f t) = (term1577 _90768 _90775 s x f t).
Proof. exact (EQ_MP (@lem3502113 _90768 _90775 s x f t) (@lem3502094 _90768 _90775 s x f t)). Qed.
Lemma lem3502116 {A : Type'} (P : Prop) (Q : A -> Prop) : (term689 A P Q) = (term690 A P Q).
Proof. exact (EQ_MP (@lem19007 A P Q) (@lem19006 A P Q)). Qed.
Lemma lem3502117 {_90768 : Type'} (P : Prop) (Q : _90768 -> Prop) : (term689 _90768 P Q) = (term690 _90768 P Q).
Proof. exact (@lem3502116 _90768 P Q). Qed.
Lemma lem3502118 {_90768 _90775 : Type'} (s : _90768 -> Prop) (x : _90768) (x' : _90775) (f : _90768 -> _90775) (t : _90768 -> Prop) : (term1578 _90768 _90775 s x x' f t) = (term1579 _90768 _90775 s x x' f t).
Proof. exact (@lem3502117 _90768 (term364 _90768 _90775 x' f s x) (term370 _90768 _90775 x' f t)). Qed.
Lemma lem3502119 {_90768 _90775 : Type'} (x : _90775) (f : _90768 -> _90775) (t : _90768 -> Prop) (x' : _90768) : (term1549 _90768 _90775 x f t x') = (term364 _90768 _90775 x f t x').
Proof. exact (eq_refl (term1549 _90768 _90775 x f t x')). Qed.
Lemma lem3502120 {_90768 _90775 : Type'} (x : _90775) (f : _90768 -> _90775) (t : _90768 -> Prop) : (term1550 _90768 _90775 x f t) = (term370 _90768 _90775 x f t).
Proof. exact (fun_ext (fun x' : _90768 => @lem3502119 _90768 _90775 x f t x')). Qed.
Lemma lem3502121 {_90768 : Type'} : (@all _90768) = (@all _90768).
Proof. exact (eq_refl (@all _90768)). Qed.
Lemma lem3502122 {_90768 _90775 : Type'} (x : _90775) (f : _90768 -> _90775) (t : _90768 -> Prop) : (term1551 _90768 _90775 x f t) = (term371 _90768 _90775 x f t).
Proof. exact (MK_COMB (@lem3502121 _90768) (@lem3502120 _90768 _90775 x f t)). Qed.
Lemma lem3502123 {_90768 _90775 : Type'} (x : _90775) (f : _90768 -> _90775) (s : _90768 -> Prop) (x' : _90768) : (term1556 _90768 _90775 x f s x') = (term1556 _90768 _90775 x f s x').
Proof. exact (eq_refl (term1556 _90768 _90775 x f s x')). Qed.
Lemma lem3502124 {_90768 _90775 : Type'} (s : _90768 -> Prop) (x : _90768) (x' : _90775) (f : _90768 -> _90775) (t : _90768 -> Prop) : (term1578 _90768 _90775 s x x' f t) = (term1574 _90768 _90775 s x x' f t).
Proof. exact (MK_COMB (@lem3502123 _90768 _90775 x' f s x) (@lem3502122 _90768 _90775 x' f t)). Qed.
Lemma lem3502125 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem3502126 {_90768 _90775 : Type'} (s : _90768 -> Prop) (x : _90768) (x' : _90775) (f : _90768 -> _90775) (t : _90768 -> Prop) : (term1580 _90768 _90775 s x x' f t) = (term1581 _90768 _90775 s x x' f t).
Proof. exact (MK_COMB (@lem3502125) (@lem3502124 _90768 _90775 s x x' f t)). Qed.
Lemma lem3502127 {_90768 _90775 : Type'} (x : _90775) (f : _90768 -> _90775) (t : _90768 -> Prop) (x' : _90768) : (term1549 _90768 _90775 x f t x') = (term364 _90768 _90775 x f t x').
Proof. exact (eq_refl (term1549 _90768 _90775 x f t x')). Qed.
Lemma lem3502128 {_90768 _90775 : Type'} (x : _90775) (f : _90768 -> _90775) (s : _90768 -> Prop) (x' : _90768) : (term1556 _90768 _90775 x f s x') = (term1556 _90768 _90775 x f s x').
Proof. exact (eq_refl (term1556 _90768 _90775 x f s x')). Qed.
Lemma lem3502129 {_90768 _90775 : Type'} (s : _90768 -> Prop) (x : _90768) (x' : _90775) (f : _90768 -> _90775) (t : _90768 -> Prop) (x'' : _90768) : (term1582 _90768 _90775 s x x' f t x'') = (term1583 _90768 _90775 s x x' f t x'').
Proof. exact (MK_COMB (@lem3502128 _90768 _90775 x' f s x) (@lem3502127 _90768 _90775 x' f t x'')). Qed.
Lemma lem3502130 {_90768 _90775 : Type'} (s : _90768 -> Prop) (x : _90768) (x' : _90775) (f : _90768 -> _90775) (t : _90768 -> Prop) : (term1584 _90768 _90775 s x x' f t) = (term1585 _90768 _90775 s x x' f t).
Proof. exact (fun_ext (fun x'' : _90768 => @lem3502129 _90768 _90775 s x x' f t x'')). Qed.
Lemma lem3502131 {_90768 : Type'} : (@all _90768) = (@all _90768).
Proof. exact (eq_refl (@all _90768)). Qed.
Lemma lem3502132 {_90768 _90775 : Type'} (s : _90768 -> Prop) (x : _90768) (x' : _90775) (f : _90768 -> _90775) (t : _90768 -> Prop) : (term1579 _90768 _90775 s x x' f t) = (term1586 _90768 _90775 s x x' f t).
Proof. exact (MK_COMB (@lem3502131 _90768) (@lem3502130 _90768 _90775 s x x' f t)). Qed.
Lemma lem3502133 {_90768 _90775 : Type'} (s : _90768 -> Prop) (x : _90768) (x' : _90775) (f : _90768 -> _90775) (t : _90768 -> Prop) : ((term1578 _90768 _90775 s x x' f t) = (term1579 _90768 _90775 s x x' f t)) = ((term1574 _90768 _90775 s x x' f t) = (term1586 _90768 _90775 s x x' f t)).
Proof. exact (MK_COMB (@lem3502126 _90768 _90775 s x x' f t) (@lem3502132 _90768 _90775 s x x' f t)). Qed.
Lemma lem3502134 {_90768 _90775 : Type'} (s : _90768 -> Prop) (x : _90768) (x' : _90775) (f : _90768 -> _90775) (t : _90768 -> Prop) : (term1574 _90768 _90775 s x x' f t) = (term1586 _90768 _90775 s x x' f t).
Proof. exact (EQ_MP (@lem3502133 _90768 _90775 s x x' f t) (@lem3502118 _90768 _90775 s x x' f t)). Qed.
Lemma lem3502135 {_90768 _90775 : Type'} (s : _90768 -> Prop) (x : _90775) (f : _90768 -> _90775) (t : _90768 -> Prop) : (term1576 _90768 _90775 s x f t) = (term1587 _90768 _90775 s x f t).
Proof. exact (fun_ext (fun x' : _90768 => @lem3502134 _90768 _90775 s x' x f t)). Qed.
Lemma lem3502136 {_90768 : Type'} : (@all _90768) = (@all _90768).
Proof. exact (eq_refl (@all _90768)). Qed.
Lemma lem3502137 {_90768 _90775 : Type'} (s : _90768 -> Prop) (x : _90775) (f : _90768 -> _90775) (t : _90768 -> Prop) : (term1577 _90768 _90775 s x f t) = (term1588 _90768 _90775 s x f t).
Proof. exact (MK_COMB (@lem3502136 _90768) (@lem3502135 _90768 _90775 s x f t)). Qed.
Lemma lem3502138 {_90768 _90775 : Type'} (s : _90768 -> Prop) (x : _90775) (f : _90768 -> _90775) (t : _90768 -> Prop) : (term1104 _90768 _90775 s x f t) = (term1588 _90768 _90775 s x f t).
Proof. exact (TRANS (@lem3502114 _90768 _90775 s x f t) (@lem3502137 _90768 _90775 s x f t)). Qed.
Lemma lem3502139 {_90768 _90775 : Type'} (f : _90768 -> _90775) (s : _90768 -> Prop) (t : _90768 -> Prop) (x'' : _90775 -> _90768) (x : _90775) : (term1546 _90768 _90775 f s t x'' x) = (term1546 _90768 _90775 f s t x'' x).
Proof. exact (eq_refl (term1546 _90768 _90775 f s t x'' x)). Qed.
Lemma lem3502140 {_90768 _90775 : Type'} (x'' : _90775 -> _90768) (s : _90768 -> Prop) (x : _90775) (f : _90768 -> _90775) (t : _90768 -> Prop) : (term1203 _90768 _90775 x'' s x f t) = (term1589 _90768 _90775 x'' s x f t).
Proof. exact (MK_COMB (@lem3502139 _90768 _90775 f s t x'' x) (@lem3502138 _90768 _90775 s x f t)). Qed.
Lemma lem3502142 {A : Type'} (P : Prop) (Q : A -> Prop) : (term689 A P Q) = (term690 A P Q).
Proof. exact (EQ_MP (@lem19007 A P Q) (@lem19006 A P Q)). Qed.
Lemma lem3502143 {_90768 : Type'} (P : Prop) (Q : _90768 -> Prop) : (term689 _90768 P Q) = (term690 _90768 P Q).
Proof. exact (@lem3502142 _90768 P Q). Qed.
Lemma lem3502144 {_90768 _90775 : Type'} (x'' : _90775 -> _90768) (s : _90768 -> Prop) (x : _90775) (f : _90768 -> _90775) (t : _90768 -> Prop) : (term1590 _90768 _90775 x'' s x f t) = (term1591 _90768 _90775 x'' s x f t).
Proof. exact (@lem3502143 _90768 (term1592 _90768 _90775 f s t x'' x) (term1587 _90768 _90775 s x f t)). Qed.
Lemma lem3502145 {_90768 _90775 : Type'} (s : _90768 -> Prop) (x : _90768) (x' : _90775) (f : _90768 -> _90775) (t : _90768 -> Prop) : (term1593 _90768 _90775 s x' f t x) = (term1586 _90768 _90775 s x x' f t).
Proof. exact (eq_refl (term1593 _90768 _90775 s x' f t x)). Qed.
Lemma lem3502146 {_90768 _90775 : Type'} (s : _90768 -> Prop) (x : _90775) (f : _90768 -> _90775) (t : _90768 -> Prop) : (term1594 _90768 _90775 s x f t) = (term1587 _90768 _90775 s x f t).
Proof. exact (fun_ext (fun x' : _90768 => @lem3502145 _90768 _90775 s x' x f t)). Qed.
Lemma lem3502147 {_90768 : Type'} : (@all _90768) = (@all _90768).
Proof. exact (eq_refl (@all _90768)). Qed.
Lemma lem3502148 {_90768 _90775 : Type'} (s : _90768 -> Prop) (x : _90775) (f : _90768 -> _90775) (t : _90768 -> Prop) : (term1595 _90768 _90775 s x f t) = (term1588 _90768 _90775 s x f t).
Proof. exact (MK_COMB (@lem3502147 _90768) (@lem3502146 _90768 _90775 s x f t)). Qed.
Lemma lem3502149 {_90768 _90775 : Type'} (f : _90768 -> _90775) (s : _90768 -> Prop) (t : _90768 -> Prop) (x'' : _90775 -> _90768) (x : _90775) : (term1546 _90768 _90775 f s t x'' x) = (term1546 _90768 _90775 f s t x'' x).
Proof. exact (eq_refl (term1546 _90768 _90775 f s t x'' x)). Qed.
Lemma lem3502150 {_90768 _90775 : Type'} (x'' : _90775 -> _90768) (s : _90768 -> Prop) (x : _90775) (f : _90768 -> _90775) (t : _90768 -> Prop) : (term1590 _90768 _90775 x'' s x f t) = (term1589 _90768 _90775 x'' s x f t).
Proof. exact (MK_COMB (@lem3502149 _90768 _90775 f s t x'' x) (@lem3502148 _90768 _90775 s x f t)). Qed.
Lemma lem3502151 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem3502152 {_90768 _90775 : Type'} (x'' : _90775 -> _90768) (s : _90768 -> Prop) (x : _90775) (f : _90768 -> _90775) (t : _90768 -> Prop) : (term1596 _90768 _90775 x'' s x f t) = (term1597 _90768 _90775 x'' s x f t).
Proof. exact (MK_COMB (@lem3502151) (@lem3502150 _90768 _90775 x'' s x f t)). Qed.
Lemma lem3502153 {_90768 _90775 : Type'} (s : _90768 -> Prop) (x : _90768) (x' : _90775) (f : _90768 -> _90775) (t : _90768 -> Prop) : (term1593 _90768 _90775 s x' f t x) = (term1586 _90768 _90775 s x x' f t).
Proof. exact (eq_refl (term1593 _90768 _90775 s x' f t x)). Qed.
Lemma lem3502154 {_90768 _90775 : Type'} (f : _90768 -> _90775) (s : _90768 -> Prop) (t : _90768 -> Prop) (x'' : _90775 -> _90768) (x : _90775) : (term1546 _90768 _90775 f s t x'' x) = (term1546 _90768 _90775 f s t x'' x).
Proof. exact (eq_refl (term1546 _90768 _90775 f s t x'' x)). Qed.
Lemma lem3502155 {_90768 _90775 : Type'} (x'' : _90775 -> _90768) (s : _90768 -> Prop) (x : _90768) (x' : _90775) (f : _90768 -> _90775) (t : _90768 -> Prop) : (term1598 _90768 _90775 x'' s x' f t x) = (term1599 _90768 _90775 x'' s x x' f t).
Proof. exact (MK_COMB (@lem3502154 _90768 _90775 f s t x'' x') (@lem3502153 _90768 _90775 s x x' f t)). Qed.
Lemma lem3502156 {_90768 _90775 : Type'} (x'' : _90775 -> _90768) (s : _90768 -> Prop) (x : _90775) (f : _90768 -> _90775) (t : _90768 -> Prop) : (term1600 _90768 _90775 x'' s x f t) = (term1601 _90768 _90775 x'' s x f t).
Proof. exact (fun_ext (fun x' : _90768 => @lem3502155 _90768 _90775 x'' s x' x f t)). Qed.
Lemma lem3502157 {_90768 : Type'} : (@all _90768) = (@all _90768).
Proof. exact (eq_refl (@all _90768)). Qed.
Lemma lem3502158 {_90768 _90775 : Type'} (x'' : _90775 -> _90768) (s : _90768 -> Prop) (x : _90775) (f : _90768 -> _90775) (t : _90768 -> Prop) : (term1591 _90768 _90775 x'' s x f t) = (term1602 _90768 _90775 x'' s x f t).
Proof. exact (MK_COMB (@lem3502157 _90768) (@lem3502156 _90768 _90775 x'' s x f t)). Qed.
Lemma lem3502159 {_90768 _90775 : Type'} (x'' : _90775 -> _90768) (s : _90768 -> Prop) (x : _90775) (f : _90768 -> _90775) (t : _90768 -> Prop) : ((term1590 _90768 _90775 x'' s x f t) = (term1591 _90768 _90775 x'' s x f t)) = ((term1589 _90768 _90775 x'' s x f t) = (term1602 _90768 _90775 x'' s x f t)).
Proof. exact (MK_COMB (@lem3502152 _90768 _90775 x'' s x f t) (@lem3502158 _90768 _90775 x'' s x f t)). Qed.
Lemma lem3502160 {_90768 _90775 : Type'} (x'' : _90775 -> _90768) (s : _90768 -> Prop) (x : _90775) (f : _90768 -> _90775) (t : _90768 -> Prop) : (term1589 _90768 _90775 x'' s x f t) = (term1602 _90768 _90775 x'' s x f t).
Proof. exact (EQ_MP (@lem3502159 _90768 _90775 x'' s x f t) (@lem3502144 _90768 _90775 x'' s x f t)). Qed.
Lemma lem3502162 {A : Type'} (P : Prop) (Q : A -> Prop) : (term689 A P Q) = (term690 A P Q).
Proof. exact (EQ_MP (@lem19007 A P Q) (@lem19006 A P Q)). Qed.
Lemma lem3502163 {_90768 : Type'} (P : Prop) (Q : _90768 -> Prop) : (term689 _90768 P Q) = (term690 _90768 P Q).
Proof. exact (@lem3502162 _90768 P Q). Qed.
Lemma lem3502164 {_90768 _90775 : Type'} (x'' : _90775 -> _90768) (s : _90768 -> Prop) (x : _90768) (x' : _90775) (f : _90768 -> _90775) (t : _90768 -> Prop) : (term1603 _90768 _90775 x'' s x x' f t) = (term1604 _90768 _90775 x'' s x x' f t).
Proof. exact (@lem3502163 _90768 (term1592 _90768 _90775 f s t x'' x') (term1585 _90768 _90775 s x x' f t)). Qed.
Lemma lem3502165 {_90768 _90775 : Type'} (s : _90768 -> Prop) (x : _90768) (x' : _90775) (f : _90768 -> _90775) (t : _90768 -> Prop) (x'' : _90768) : (term1605 _90768 _90775 s x x' f t x'') = (term1583 _90768 _90775 s x x' f t x'').
Proof. exact (eq_refl (term1605 _90768 _90775 s x x' f t x'')). Qed.
Lemma lem3502166 {_90768 _90775 : Type'} (s : _90768 -> Prop) (x : _90768) (x' : _90775) (f : _90768 -> _90775) (t : _90768 -> Prop) : (term1606 _90768 _90775 s x x' f t) = (term1585 _90768 _90775 s x x' f t).
Proof. exact (fun_ext (fun x'' : _90768 => @lem3502165 _90768 _90775 s x x' f t x'')). Qed.
Lemma lem3502167 {_90768 : Type'} : (@all _90768) = (@all _90768).
Proof. exact (eq_refl (@all _90768)). Qed.
Lemma lem3502168 {_90768 _90775 : Type'} (s : _90768 -> Prop) (x : _90768) (x' : _90775) (f : _90768 -> _90775) (t : _90768 -> Prop) : (term1607 _90768 _90775 s x x' f t) = (term1586 _90768 _90775 s x x' f t).
Proof. exact (MK_COMB (@lem3502167 _90768) (@lem3502166 _90768 _90775 s x x' f t)). Qed.
Lemma lem3502169 {_90768 _90775 : Type'} (f : _90768 -> _90775) (s : _90768 -> Prop) (t : _90768 -> Prop) (x'' : _90775 -> _90768) (x : _90775) : (term1546 _90768 _90775 f s t x'' x) = (term1546 _90768 _90775 f s t x'' x).
Proof. exact (eq_refl (term1546 _90768 _90775 f s t x'' x)). Qed.
Lemma lem3502170 {_90768 _90775 : Type'} (x'' : _90775 -> _90768) (s : _90768 -> Prop) (x : _90768) (x' : _90775) (f : _90768 -> _90775) (t : _90768 -> Prop) : (term1603 _90768 _90775 x'' s x x' f t) = (term1599 _90768 _90775 x'' s x x' f t).
Proof. exact (MK_COMB (@lem3502169 _90768 _90775 f s t x'' x') (@lem3502168 _90768 _90775 s x x' f t)). Qed.
Lemma lem3502171 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem3502172 {_90768 _90775 : Type'} (x'' : _90775 -> _90768) (s : _90768 -> Prop) (x : _90768) (x' : _90775) (f : _90768 -> _90775) (t : _90768 -> Prop) : (term1608 _90768 _90775 x'' s x x' f t) = (term1609 _90768 _90775 x'' s x x' f t).
Proof. exact (MK_COMB (@lem3502171) (@lem3502170 _90768 _90775 x'' s x x' f t)). Qed.
Lemma lem3502173 {_90768 _90775 : Type'} (s : _90768 -> Prop) (x : _90768) (x' : _90775) (f : _90768 -> _90775) (t : _90768 -> Prop) (x'' : _90768) : (term1605 _90768 _90775 s x x' f t x'') = (term1583 _90768 _90775 s x x' f t x'').
Proof. exact (eq_refl (term1605 _90768 _90775 s x x' f t x'')). Qed.
Lemma lem3502174 {_90768 _90775 : Type'} (f : _90768 -> _90775) (s : _90768 -> Prop) (t : _90768 -> Prop) (x'' : _90775 -> _90768) (x : _90775) : (term1546 _90768 _90775 f s t x'' x) = (term1546 _90768 _90775 f s t x'' x).
Proof. exact (eq_refl (term1546 _90768 _90775 f s t x'' x)). Qed.
Lemma lem3502175 {_90768 _90775 : Type'} (x'' : _90775 -> _90768) (s : _90768 -> Prop) (x : _90768) (x' : _90775) (f : _90768 -> _90775) (t : _90768 -> Prop) (x''' : _90768) : (term1610 _90768 _90775 x'' s x x' f t x''') = (term1611 _90768 _90775 x'' s x x' f t x''').
Proof. exact (MK_COMB (@lem3502174 _90768 _90775 f s t x'' x') (@lem3502173 _90768 _90775 s x x' f t x''')). Qed.
Lemma lem3502176 {_90768 _90775 : Type'} (x'' : _90775 -> _90768) (s : _90768 -> Prop) (x : _90768) (x' : _90775) (f : _90768 -> _90775) (t : _90768 -> Prop) : (term1612 _90768 _90775 x'' s x x' f t) = (term1613 _90768 _90775 x'' s x x' f t).
Proof. exact (fun_ext (fun x''' : _90768 => @lem3502175 _90768 _90775 x'' s x x' f t x''')). Qed.
Lemma lem3502177 {_90768 : Type'} : (@all _90768) = (@all _90768).
Proof. exact (eq_refl (@all _90768)). Qed.
Lemma lem3502178 {_90768 _90775 : Type'} (x'' : _90775 -> _90768) (s : _90768 -> Prop) (x : _90768) (x' : _90775) (f : _90768 -> _90775) (t : _90768 -> Prop) : (term1604 _90768 _90775 x'' s x x' f t) = (term1614 _90768 _90775 x'' s x x' f t).
Proof. exact (MK_COMB (@lem3502177 _90768) (@lem3502176 _90768 _90775 x'' s x x' f t)). Qed.
Lemma lem3502179 {_90768 _90775 : Type'} (x'' : _90775 -> _90768) (s : _90768 -> Prop) (x : _90768) (x' : _90775) (f : _90768 -> _90775) (t : _90768 -> Prop) : ((term1603 _90768 _90775 x'' s x x' f t) = (term1604 _90768 _90775 x'' s x x' f t)) = ((term1599 _90768 _90775 x'' s x x' f t) = (term1614 _90768 _90775 x'' s x x' f t)).
Proof. exact (MK_COMB (@lem3502172 _90768 _90775 x'' s x x' f t) (@lem3502178 _90768 _90775 x'' s x x' f t)). Qed.
Lemma lem3502180 {_90768 _90775 : Type'} (x'' : _90775 -> _90768) (s : _90768 -> Prop) (x : _90768) (x' : _90775) (f : _90768 -> _90775) (t : _90768 -> Prop) : (term1599 _90768 _90775 x'' s x x' f t) = (term1614 _90768 _90775 x'' s x x' f t).
Proof. exact (EQ_MP (@lem3502179 _90768 _90775 x'' s x x' f t) (@lem3502164 _90768 _90775 x'' s x x' f t)). Qed.
Lemma lem3502181 {_90768 _90775 : Type'} (x'' : _90775 -> _90768) (s : _90768 -> Prop) (x : _90775) (f : _90768 -> _90775) (t : _90768 -> Prop) : (term1601 _90768 _90775 x'' s x f t) = (term1615 _90768 _90775 x'' s x f t).
Proof. exact (fun_ext (fun x' : _90768 => @lem3502180 _90768 _90775 x'' s x' x f t)). Qed.
Lemma lem3502182 {_90768 : Type'} : (@all _90768) = (@all _90768).
Proof. exact (eq_refl (@all _90768)). Qed.
Lemma lem3502183 {_90768 _90775 : Type'} (x'' : _90775 -> _90768) (s : _90768 -> Prop) (x : _90775) (f : _90768 -> _90775) (t : _90768 -> Prop) : (term1602 _90768 _90775 x'' s x f t) = (term1616 _90768 _90775 x'' s x f t).
Proof. exact (MK_COMB (@lem3502182 _90768) (@lem3502181 _90768 _90775 x'' s x f t)). Qed.
Lemma lem3502184 {_90768 _90775 : Type'} (x'' : _90775 -> _90768) (s : _90768 -> Prop) (x : _90775) (f : _90768 -> _90775) (t : _90768 -> Prop) : (term1589 _90768 _90775 x'' s x f t) = (term1616 _90768 _90775 x'' s x f t).
Proof. exact (TRANS (@lem3502160 _90768 _90775 x'' s x f t) (@lem3502183 _90768 _90775 x'' s x f t)). Qed.
Lemma lem3502185 {_90768 _90775 : Type'} (x'' : _90775 -> _90768) (s : _90768 -> Prop) (x : _90775) (f : _90768 -> _90775) (t : _90768 -> Prop) : (term1203 _90768 _90775 x'' s x f t) = (term1616 _90768 _90775 x'' s x f t).
Proof. exact (TRANS (@lem3502140 _90768 _90775 x'' s x f t) (@lem3502184 _90768 _90775 x'' s x f t)). Qed.
Lemma lem3502186 {_90768 _90775 : Type'} (x'' : _90775 -> _90768) (s : _90768 -> Prop) (f : _90768 -> _90775) (t : _90768 -> Prop) : (term1205 _90768 _90775 x'' s f t) = (term1617 _90768 _90775 x'' s f t).
Proof. exact (fun_ext (fun x : _90775 => @lem3502185 _90768 _90775 x'' s x f t)). Qed.
Lemma lem3502187 {_90775 : Type'} : (@all _90775) = (@all _90775).
Proof. exact (eq_refl (@all _90775)). Qed.
Lemma lem3502188 {_90768 _90775 : Type'} (x'' : _90775 -> _90768) (s : _90768 -> Prop) (f : _90768 -> _90775) (t : _90768 -> Prop) : (term1207 _90768 _90775 x'' s f t) = (term1618 _90768 _90775 x'' s f t).
Proof. exact (MK_COMB (@lem3502187 _90775) (@lem3502186 _90768 _90775 x'' s f t)). Qed.
Lemma lem3502220 {_90768 _90775 : Type'} (x'' : _90775 -> _90768) (s : _90768 -> Prop) (x : _90768) (x' : _90775) (f : _90768 -> _90775) (t : _90768 -> Prop) (x''' : _90768) : (term1611 _90768 _90775 x'' s x x' f t x''') = (term1619 _90768 _90775 x'' s x x' f t x''').
Proof. exact (@lem19699 (x' = (term1565 _90768 _90775 f x'' x')) (term1620 _90768 _90775 s t x'' x') (term1583 _90768 _90775 s x x' f t x''')). Qed.
Lemma lem3502227 {_90768 _90775 : Type'} (x'' : _90775 -> _90768) (s : _90768 -> Prop) (x : _90768) (x' : _90775) (f : _90768 -> _90775) (t : _90768 -> Prop) (x''' : _90768) : (term1621 _90768 _90775 x'' s x x' f t x''') = (term1622 _90768 _90775 x'' s x x' f t x''').
Proof. exact (@lem19699 (term1566 _90768 _90775 s x'' x') (term1566 _90768 _90775 t x'' x') (term1583 _90768 _90775 s x x' f t x''')). Qed.
Lemma lem3502230 {_90768 _90775 : Type'} (x'' : _90775 -> _90768) (s : _90768 -> Prop) (x : _90768) (x' : _90775) (f : _90768 -> _90775) (t : _90768 -> Prop) (x''' : _90768) : (term1623 _90768 _90775 x'' s x x' f t x''') = (term1623 _90768 _90775 x'' s x x' f t x''').
Proof. exact (eq_refl (term1623 _90768 _90775 x'' s x x' f t x''')). Qed.
Lemma lem3502231 {_90768 _90775 : Type'} (x'' : _90775 -> _90768) (s : _90768 -> Prop) (x : _90768) (x' : _90775) (f : _90768 -> _90775) (t : _90768 -> Prop) (x''' : _90768) : (term1619 _90768 _90775 x'' s x x' f t x''') = (term1624 _90768 _90775 x'' s x x' f t x''').
Proof. exact (MK_COMB (@lem3502230 _90768 _90775 x'' s x x' f t x''') (@lem3502227 _90768 _90775 x'' s x x' f t x''')). Qed.
Lemma lem3502233 {_90768 _90775 : Type'} (x'' : _90775 -> _90768) (s : _90768 -> Prop) (x : _90768) (x' : _90775) (f : _90768 -> _90775) (t : _90768 -> Prop) (x''' : _90768) : (term1611 _90768 _90775 x'' s x x' f t x''') = (term1624 _90768 _90775 x'' s x x' f t x''').
Proof. exact (TRANS (@lem3502220 _90768 _90775 x'' s x x' f t x''') (@lem3502231 _90768 _90775 x'' s x x' f t x''')). Qed.
Lemma lem3502234 {_90768 _90775 : Type'} (x'' : _90775 -> _90768) (s : _90768 -> Prop) (x : _90768) (x' : _90775) (f : _90768 -> _90775) (t : _90768 -> Prop) : (term1613 _90768 _90775 x'' s x x' f t) = (term1625 _90768 _90775 x'' s x x' f t).
Proof. exact (fun_ext (fun x''' : _90768 => @lem3502233 _90768 _90775 x'' s x x' f t x''')). Qed.
Lemma lem3502235 {_90768 : Type'} : (@all _90768) = (@all _90768).
Proof. exact (eq_refl (@all _90768)). Qed.
Lemma lem3502236 {_90768 _90775 : Type'} (x'' : _90775 -> _90768) (s : _90768 -> Prop) (x : _90768) (x' : _90775) (f : _90768 -> _90775) (t : _90768 -> Prop) : (term1614 _90768 _90775 x'' s x x' f t) = (term1626 _90768 _90775 x'' s x x' f t).
Proof. exact (MK_COMB (@lem3502235 _90768) (@lem3502234 _90768 _90775 x'' s x x' f t)). Qed.
Lemma lem3502237 {_90768 _90775 : Type'} (x'' : _90775 -> _90768) (s : _90768 -> Prop) (x : _90775) (f : _90768 -> _90775) (t : _90768 -> Prop) : (term1615 _90768 _90775 x'' s x f t) = (term1627 _90768 _90775 x'' s x f t).
Proof. exact (fun_ext (fun x' : _90768 => @lem3502236 _90768 _90775 x'' s x' x f t)). Qed.
Lemma lem3502238 {_90768 : Type'} : (@all _90768) = (@all _90768).
Proof. exact (eq_refl (@all _90768)). Qed.
Lemma lem3502239 {_90768 _90775 : Type'} (x'' : _90775 -> _90768) (s : _90768 -> Prop) (x : _90775) (f : _90768 -> _90775) (t : _90768 -> Prop) : (term1616 _90768 _90775 x'' s x f t) = (term1628 _90768 _90775 x'' s x f t).
Proof. exact (MK_COMB (@lem3502238 _90768) (@lem3502237 _90768 _90775 x'' s x f t)). Qed.
Lemma lem3502240 {_90768 _90775 : Type'} (x'' : _90775 -> _90768) (s : _90768 -> Prop) (f : _90768 -> _90775) (t : _90768 -> Prop) : (term1617 _90768 _90775 x'' s f t) = (term1629 _90768 _90775 x'' s f t).
Proof. exact (fun_ext (fun x : _90775 => @lem3502239 _90768 _90775 x'' s x f t)). Qed.
Lemma lem3502241 {_90775 : Type'} : (@all _90775) = (@all _90775).
Proof. exact (eq_refl (@all _90775)). Qed.
Lemma lem3502242 {_90768 _90775 : Type'} (x'' : _90775 -> _90768) (s : _90768 -> Prop) (f : _90768 -> _90775) (t : _90768 -> Prop) : (term1618 _90768 _90775 x'' s f t) = (term1630 _90768 _90775 x'' s f t).
Proof. exact (MK_COMB (@lem3502241 _90775) (@lem3502240 _90768 _90775 x'' s f t)). Qed.
Lemma lem3502243 {_90768 _90775 : Type'} (x'' : _90775 -> _90768) (s : _90768 -> Prop) (f : _90768 -> _90775) (t : _90768 -> Prop) : (term1207 _90768 _90775 x'' s f t) = (term1630 _90768 _90775 x'' s f t).
Proof. exact (TRANS (@lem3502188 _90768 _90775 x'' s f t) (@lem3502242 _90768 _90775 x'' s f t)). Qed.
Lemma lem3502244 {_90768 _90775 : Type'} (x'' : _90775 -> _90768) (s : _90768 -> Prop) (x''' : _90775 -> _90768) (x'''' : _90775 -> _90768) (x''''' : _90775 -> _90768) (f : _90768 -> _90775) (t : _90768 -> Prop) (u : _90775 -> Prop) (h1 : term1465 _90768 _90775 x'' s x''' x'''' x''''' f t u) : term1630 _90768 _90775 x'' s f t.
Proof. exact (EQ_MP (@lem3502243 _90768 _90775 x'' s f t) (@lem3501344 _90768 _90775 x'' s x''' x'''' x''''' f t u h1)). Qed.
Lemma lem3502342 {_90768 _90775 : Type'} (x : _90775) (f : _90768 -> _90775) (s : _90768 -> Prop) (t : _90768 -> Prop) (x' : _90768) : (term1092 _90768 _90775 x f s t x') = (term1092 _90768 _90775 x f s t x').
Proof. exact (eq_refl (term1092 _90768 _90775 x f s t x')). Qed.
Lemma lem3502343 {_90768 _90775 : Type'} (x : _90775) (f : _90768 -> _90775) (s : _90768 -> Prop) (t : _90768 -> Prop) : (term1099 _90768 _90775 x f s t) = (term1099 _90768 _90775 x f s t).
Proof. exact (fun_ext (fun x' : _90768 => @lem3502342 _90768 _90775 x f s t x')). Qed.
Lemma lem3502344 {_90768 : Type'} : (@all _90768) = (@all _90768).
Proof. exact (eq_refl (@all _90768)). Qed.
Lemma lem3502346 {_90768 _90775 : Type'} (x : _90775) (f : _90768 -> _90775) (s : _90768 -> Prop) (t : _90768 -> Prop) : (term1100 _90768 _90775 x f s t) = (term1100 _90768 _90775 x f s t).
Proof. exact (MK_COMB (@lem3502344 _90768) (@lem3502343 _90768 _90775 x f s t)). Qed.
Lemma lem3502347 {_90768 _90775 : Type'} (t : _90768 -> Prop) (f : _90768 -> _90775) (s : _90768 -> Prop) (x' : _90768) (u : _90775 -> Prop) (x : _90775) (h1 : term1520 _90768 _90775 t f s x' u x) : term1100 _90768 _90775 x f s t.
Proof. exact (EQ_MP (@lem3502346 _90768 _90775 x f s t) (@lem3501356 _90768 _90775 t f s x' u x h1)). Qed.
Lemma lem3502384 {_90768 _90775 : Type'} (_36985 : _90768) (x : _90775) (f : _90768 -> _90775) (s : _90768 -> Prop) (h1 : term371 _90768 _90775 x f s) : term1549 _90768 _90775 x f s _36985.
Proof. exact (@lem3501694 _90768 _90775 x f s h1 _36985). Qed.
Lemma lem3502385 {_90768 _90775 : Type'} (x : _90775) (f : _90768 -> _90775) (s : _90768 -> Prop) (_36985 : _90768) : (term1549 _90768 _90775 x f s _36985) = (term364 _90768 _90775 x f s _36985).
Proof. exact (eq_refl (term1549 _90768 _90775 x f s _36985)). Qed.
Lemma lem3502390 {_90768 _90775 : Type'} (_36987 : _90775) (x'' : _90775 -> _90768) (s : _90768 -> Prop) (x''' : _90775 -> _90768) (x'''' : _90775 -> _90768) (x''''' : _90775 -> _90768) (f : _90768 -> _90775) (t : _90768 -> Prop) (u : _90775 -> Prop) (h1 : term1465 _90768 _90775 x'' s x''' x'''' x''''' f t u) : term1631 _90768 _90775 f t u _36987.
Proof. exact (@lem3501765 _90768 _90775 x'' s x''' x'''' x''''' f t u h1 _36987). Qed.
Lemma lem3502391 {_90768 _90775 : Type'} (f : _90768 -> _90775) (t : _90768 -> Prop) (u : _90775 -> Prop) (_36987 : _90775) : (term1631 _90768 _90775 f t u _36987) = (term1561 _90768 _90775 f t u _36987).
Proof. exact (eq_refl (term1631 _90768 _90775 f t u _36987)). Qed.
Lemma lem3502392 {_90768 _90775 : Type'} (_36987 : _90775) (x'' : _90775 -> _90768) (s : _90768 -> Prop) (x''' : _90775 -> _90768) (x'''' : _90775 -> _90768) (x''''' : _90775 -> _90768) (f : _90768 -> _90775) (t : _90768 -> Prop) (u : _90775 -> Prop) (h1 : term1465 _90768 _90775 x'' s x''' x'''' x''''' f t u) : term1561 _90768 _90775 f t u _36987.
Proof. exact (EQ_MP (@lem3502391 _90768 _90775 f t u _36987) (@lem3502390 _90768 _90775 _36987 x'' s x''' x'''' x''''' f t u h1)). Qed.
Lemma lem3502393 {_90768 _90775 : Type'} (_36987 : _90775) (_36988 : _90768) (x'' : _90775 -> _90768) (s : _90768 -> Prop) (x''' : _90775 -> _90768) (x'''' : _90775 -> _90768) (x''''' : _90775 -> _90768) (f : _90768 -> _90775) (t : _90768 -> Prop) (u : _90775 -> Prop) (h1 : term1465 _90768 _90775 x'' s x''' x'''' x''''' f t u) : term1632 _90768 _90775 f t u _36987 _36988.
Proof. exact (@lem3502392 _90768 _90775 _36987 x'' s x''' x'''' x''''' f t u h1 _36988). Qed.
Lemma lem3502394 {_90768 _90775 : Type'} (f : _90768 -> _90775) (t : _90768 -> Prop) (_36988 : _90768) (u : _90775 -> Prop) (_36987 : _90775) : (term1632 _90768 _90775 f t u _36987 _36988) = (term1558 _90768 _90775 f t _36988 u _36987).
Proof. exact (eq_refl (term1632 _90768 _90775 f t u _36987 _36988)). Qed.
Lemma lem3502395 {_90768 _90775 : Type'} (_36988 : _90768) (_36987 : _90775) (x'' : _90775 -> _90768) (s : _90768 -> Prop) (x''' : _90775 -> _90768) (x'''' : _90775 -> _90768) (x''''' : _90775 -> _90768) (f : _90768 -> _90775) (t : _90768 -> Prop) (u : _90775 -> Prop) (h1 : term1465 _90768 _90775 x'' s x''' x'''' x''''' f t u) : term1558 _90768 _90775 f t _36988 u _36987.
Proof. exact (EQ_MP (@lem3502394 _90768 _90775 f t _36988 u _36987) (@lem3502393 _90768 _90775 _36987 _36988 x'' s x''' x'''' x''''' f t u h1)). Qed.
Lemma lem3502411 {_90768 _90775 : Type'} (_36994 : _90775) (x'' : _90775 -> _90768) (s : _90768 -> Prop) (x''' : _90775 -> _90768) (x'''' : _90775 -> _90768) (x''''' : _90775 -> _90768) (f : _90768 -> _90775) (t : _90768 -> Prop) (u : _90775 -> Prop) (h1 : term1465 _90768 _90775 x'' s x''' x'''' x''''' f t u) : term1633 _90768 _90775 f t x''''' u _36994.
Proof. exact (@lem3502042 _90768 _90775 x'' s x''' x'''' x''''' f t u h1 _36994). Qed.
Lemma lem3502412 {_90768 _90775 : Type'} (f : _90768 -> _90775) (t : _90768 -> Prop) (x''''' : _90775 -> _90768) (u : _90775 -> Prop) (_36994 : _90775) : (term1633 _90768 _90775 f t x''''' u _36994) = (term1564 _90768 _90775 f t x''''' u _36994).
Proof. exact (eq_refl (term1633 _90768 _90775 f t x''''' u _36994)). Qed.
Lemma lem3502413 {_90768 _90775 : Type'} (_36994 : _90775) (x'' : _90775 -> _90768) (s : _90768 -> Prop) (x''' : _90775 -> _90768) (x'''' : _90775 -> _90768) (x''''' : _90775 -> _90768) (f : _90768 -> _90775) (t : _90768 -> Prop) (u : _90775 -> Prop) (h1 : term1465 _90768 _90775 x'' s x''' x'''' x''''' f t u) : term1564 _90768 _90775 f t x''''' u _36994.
Proof. exact (EQ_MP (@lem3502412 _90768 _90775 f t x''''' u _36994) (@lem3502411 _90768 _90775 _36994 x'' s x''' x'''' x''''' f t u h1)). Qed.
Lemma lem3502420 {_90768 _90775 : Type'} (_36997 : _90775) (x'' : _90775 -> _90768) (s : _90768 -> Prop) (x''' : _90775 -> _90768) (x'''' : _90775 -> _90768) (x''''' : _90775 -> _90768) (f : _90768 -> _90775) (t : _90768 -> Prop) (u : _90775 -> Prop) (h1 : term1465 _90768 _90775 x'' s x''' x'''' x''''' f t u) : term1634 _90768 _90775 x'' s f t _36997.
Proof. exact (@lem3502244 _90768 _90775 x'' s x''' x'''' x''''' f t u h1 _36997). Qed.
Lemma lem3502421 {_90768 _90775 : Type'} (x'' : _90775 -> _90768) (s : _90768 -> Prop) (_36997 : _90775) (f : _90768 -> _90775) (t : _90768 -> Prop) : (term1634 _90768 _90775 x'' s f t _36997) = (term1628 _90768 _90775 x'' s _36997 f t).
Proof. exact (eq_refl (term1634 _90768 _90775 x'' s f t _36997)). Qed.
Lemma lem3502422 {_90768 _90775 : Type'} (_36997 : _90775) (x'' : _90775 -> _90768) (s : _90768 -> Prop) (x''' : _90775 -> _90768) (x'''' : _90775 -> _90768) (x''''' : _90775 -> _90768) (f : _90768 -> _90775) (t : _90768 -> Prop) (u : _90775 -> Prop) (h1 : term1465 _90768 _90775 x'' s x''' x'''' x''''' f t u) : term1628 _90768 _90775 x'' s _36997 f t.
Proof. exact (EQ_MP (@lem3502421 _90768 _90775 x'' s _36997 f t) (@lem3502420 _90768 _90775 _36997 x'' s x''' x'''' x''''' f t u h1)). Qed.
Lemma lem3502423 {_90768 _90775 : Type'} (_36997 : _90775) (_36998 : _90768) (x'' : _90775 -> _90768) (s : _90768 -> Prop) (x''' : _90775 -> _90768) (x'''' : _90775 -> _90768) (x''''' : _90775 -> _90768) (f : _90768 -> _90775) (t : _90768 -> Prop) (u : _90775 -> Prop) (h1 : term1465 _90768 _90775 x'' s x''' x'''' x''''' f t u) : term1635 _90768 _90775 x'' s _36997 f t _36998.
Proof. exact (@lem3502422 _90768 _90775 _36997 x'' s x''' x'''' x''''' f t u h1 _36998). Qed.
Lemma lem3502424 {_90768 _90775 : Type'} (x'' : _90775 -> _90768) (s : _90768 -> Prop) (_36998 : _90768) (_36997 : _90775) (f : _90768 -> _90775) (t : _90768 -> Prop) : (term1635 _90768 _90775 x'' s _36997 f t _36998) = (term1626 _90768 _90775 x'' s _36998 _36997 f t).
Proof. exact (eq_refl (term1635 _90768 _90775 x'' s _36997 f t _36998)). Qed.
Lemma lem3502425 {_90768 _90775 : Type'} (_36998 : _90768) (_36997 : _90775) (x'' : _90775 -> _90768) (s : _90768 -> Prop) (x''' : _90775 -> _90768) (x'''' : _90775 -> _90768) (x''''' : _90775 -> _90768) (f : _90768 -> _90775) (t : _90768 -> Prop) (u : _90775 -> Prop) (h1 : term1465 _90768 _90775 x'' s x''' x'''' x''''' f t u) : term1626 _90768 _90775 x'' s _36998 _36997 f t.
Proof. exact (EQ_MP (@lem3502424 _90768 _90775 x'' s _36998 _36997 f t) (@lem3502423 _90768 _90775 _36997 _36998 x'' s x''' x'''' x''''' f t u h1)). Qed.
Lemma lem3502426 {_90768 _90775 : Type'} (_36998 : _90768) (_36997 : _90775) (_36999 : _90768) (x'' : _90775 -> _90768) (s : _90768 -> Prop) (x''' : _90775 -> _90768) (x'''' : _90775 -> _90768) (x''''' : _90775 -> _90768) (f : _90768 -> _90775) (t : _90768 -> Prop) (u : _90775 -> Prop) (h1 : term1465 _90768 _90775 x'' s x''' x'''' x''''' f t u) : term1636 _90768 _90775 x'' s _36998 _36997 f t _36999.
Proof. exact (@lem3502425 _90768 _90775 _36998 _36997 x'' s x''' x'''' x''''' f t u h1 _36999). Qed.
Lemma lem3502427 {_90768 _90775 : Type'} (x'' : _90775 -> _90768) (s : _90768 -> Prop) (_36998 : _90768) (_36997 : _90775) (f : _90768 -> _90775) (t : _90768 -> Prop) (_36999 : _90768) : (term1636 _90768 _90775 x'' s _36998 _36997 f t _36999) = (term1624 _90768 _90775 x'' s _36998 _36997 f t _36999).
Proof. exact (eq_refl (term1636 _90768 _90775 x'' s _36998 _36997 f t _36999)). Qed.
Lemma lem3502428 {_90768 _90775 : Type'} (_36998 : _90768) (_36997 : _90775) (_36999 : _90768) (x'' : _90775 -> _90768) (s : _90768 -> Prop) (x''' : _90775 -> _90768) (x'''' : _90775 -> _90768) (x''''' : _90775 -> _90768) (f : _90768 -> _90775) (t : _90768 -> Prop) (u : _90775 -> Prop) (h1 : term1465 _90768 _90775 x'' s x''' x'''' x''''' f t u) : term1624 _90768 _90775 x'' s _36998 _36997 f t _36999.
Proof. exact (EQ_MP (@lem3502427 _90768 _90775 x'' s _36998 _36997 f t _36999) (@lem3502426 _90768 _90775 _36998 _36997 _36999 x'' s x''' x'''' x''''' f t u h1)). Qed.
Lemma lem3502435 {_90768 _90775 : Type'} (_37002 : _90768) (t : _90768 -> Prop) (f : _90768 -> _90775) (s : _90768 -> Prop) (x' : _90768) (u : _90775 -> Prop) (x : _90775) (h1 : term1520 _90768 _90775 t f s x' u x) : term1637 _90768 _90775 x f s t _37002.
Proof. exact (@lem3502347 _90768 _90775 t f s x' u x h1 _37002). Qed.
Lemma lem3502436 {_90768 _90775 : Type'} (x : _90775) (f : _90768 -> _90775) (s : _90768 -> Prop) (t : _90768 -> Prop) (_37002 : _90768) : (term1637 _90768 _90775 x f s t _37002) = (term1092 _90768 _90775 x f s t _37002).
Proof. exact (eq_refl (term1637 _90768 _90775 x f s t _37002)). Qed.
Lemma lem3502468 {_90768 _90775 : Type'} (_36998 : _90768) (_36997 : _90775) (_36999 : _90768) (x'' : _90775 -> _90768) (s : _90768 -> Prop) (x''' : _90775 -> _90768) (x'''' : _90775 -> _90768) (x''''' : _90775 -> _90768) (f : _90768 -> _90775) (t : _90768 -> Prop) (u : _90775 -> Prop) (h1 : term1465 _90768 _90775 x'' s x''' x'''' x''''' f t u) : term1622 _90768 _90775 x'' s _36998 _36997 f t _36999.
Proof. exact (proj2 (@lem3502428 _90768 _90775 _36998 _36997 _36999 x'' s x''' x'''' x''''' f t u h1)). Qed.
Lemma lem3502469 {_90768 _90775 : Type'} (_36998 : _90768) (_36997 : _90775) (_36999 : _90768) (x'' : _90775 -> _90768) (s : _90768 -> Prop) (x''' : _90775 -> _90768) (x'''' : _90775 -> _90768) (x''''' : _90775 -> _90768) (f : _90768 -> _90775) (t : _90768 -> Prop) (u : _90775 -> Prop) (h1 : term1465 _90768 _90775 x'' s x''' x'''' x''''' f t u) : term1638 _90768 _90775 x'' s _36998 _36997 f t _36999.
Proof. exact (proj1 (@lem3502428 _90768 _90775 _36998 _36997 _36999 x'' s x''' x'''' x''''' f t u h1)). Qed.
Lemma lem3502470 {_90768 _90775 : Type'} (_36998 : _90768) (_36997 : _90775) (_36999 : _90768) (x'' : _90775 -> _90768) (s : _90768 -> Prop) (x''' : _90775 -> _90768) (x'''' : _90775 -> _90768) (x''''' : _90775 -> _90768) (f : _90768 -> _90775) (t : _90768 -> Prop) (u : _90775 -> Prop) (h1 : term1465 _90768 _90775 x'' s x''' x'''' x''''' f t u) : term1639 _90768 _90775 x'' s _36998 _36997 f t _36999.
Proof. exact (proj2 (@lem3502468 _90768 _90775 _36998 _36997 _36999 x'' s x''' x'''' x''''' f t u h1)). Qed.
Lemma lem3502471 {_90768 _90775 : Type'} (_36998 : _90768) (_36997 : _90775) (_36999 : _90768) (x'' : _90775 -> _90768) (s : _90768 -> Prop) (x''' : _90775 -> _90768) (x'''' : _90775 -> _90768) (x''''' : _90775 -> _90768) (f : _90768 -> _90775) (t : _90768 -> Prop) (u : _90775 -> Prop) (h1 : term1465 _90768 _90775 x'' s x''' x'''' x''''' f t u) : term1640 _90768 _90775 x'' s _36998 _36997 f t _36999.
Proof. exact (proj1 (@lem3502468 _90768 _90775 _36998 _36997 _36999 x'' s x''' x'''' x''''' f t u h1)). Qed.
Lemma lem3502487 {_90768 _90775 : Type'} (t : _90768 -> Prop) (x' : _90768) (f : _90768 -> _90775) (s : _90768 -> Prop) (u : _90775 -> Prop) (x : _90775) (h1 : term1497 _90768 _90775 t x' f s u x) : x = (f x').
Proof. exact (proj1 (@lem3501348 _90768 _90775 t x' f s u x h1)). Qed.
Lemma lem3502497 {_90768 _90775 : Type'} (_36985 : _90768) (x : _90775) (f : _90768 -> _90775) (s : _90768 -> Prop) (h1 : term371 _90768 _90775 x f s) : term364 _90768 _90775 x f s _36985.
Proof. exact (EQ_MP (@lem3502385 _90768 _90775 x f s _36985) (@lem3502384 _90768 _90775 _36985 x f s h1)). Qed.
Lemma lem3502652 {_90768 _90775 : Type'} (f : _90768 -> _90775) (t : _90768 -> Prop) (_36988 : _90768) (u : _90775 -> Prop) (_36987 : _90775) : (term1558 _90768 _90775 f t _36988 u _36987) = (term1641 _90768 _90775 f t _36988 u _36987).
Proof. exact (@lem3498535 (term440 _90768 _90775 _36987 f _36988) (term618 _90768 t _36988) (u _36987)). Qed.
Lemma lem3502655 {_90768 _90775 : Type'} (t : _90768 -> Prop) (x' : _90768) (f : _90768 -> _90775) (s : _90768 -> Prop) (u : _90775 -> Prop) (x : _90775) (h1 : term1497 _90768 _90775 t x' f s u x) : x = (f x').
Proof. exact (proj1 (@lem3501348 _90768 _90775 t x' f s u x h1)). Qed.
Lemma lem3502661 {_90775 : Type'} (u : _90775 -> Prop) (x : _90775) (h1 : term618 _90775 u x) : term618 _90775 u x.
Proof. exact (h1). Qed.
Lemma lem3502827 {_90768 _90775 : Type'} (_37002 : _90768) (t : _90768 -> Prop) (f : _90768 -> _90775) (s : _90768 -> Prop) (x' : _90768) (u : _90775 -> Prop) (x : _90775) (h1 : term1520 _90768 _90775 t f s x' u x) : term1092 _90768 _90775 x f s t _37002.
Proof. exact (EQ_MP (@lem3502436 _90768 _90775 x f s t _37002) (@lem3502435 _90768 _90775 _37002 t f s x' u x h1)). Qed.
Lemma lem3502829 {_90768 _90775 : Type'} (t : _90768 -> Prop) (f : _90768 -> _90775) (s : _90768 -> Prop) (x' : _90768) (u : _90775 -> Prop) (x : _90775) (h1 : term1520 _90768 _90775 t f s x' u x) : u x.
Proof. exact (proj2 (@lem3501355 _90768 _90775 t f s x' u x h1)). Qed.
Lemma lem3502831 {_90768 _90775 : Type'} (t : _90768 -> Prop) (f : _90768 -> _90775) (s : _90768 -> Prop) (x' : _90768) (u : _90775 -> Prop) (x : _90775) (h1 : term1520 _90768 _90775 t f s x' u x) : x = (f x').
Proof. exact (proj1 (@lem3501358 _90768 _90775 t f s x' u x h1)). Qed.
Lemma lem3502920 {_90768 _90775 : Type'} (s : _90768 -> Prop) (_36998 : _90768) (_36997 : _90775) (f : _90768 -> _90775) (t : _90768 -> Prop) (_36999 : _90768) : (term1583 _90768 _90775 s _36998 _36997 f t _36999) = (term1642 _90768 _90775 s _36998 _36997 f t _36999).
Proof. exact (@lem3498535 (term440 _90768 _90775 _36997 f _36998) (term618 _90768 s _36998) (term364 _90768 _90775 _36997 f t _36999)). Qed.
Lemma lem3502921 {_90768 _90775 : Type'} (f : _90768 -> _90775) (x'' : _90775 -> _90768) (_36997 : _90775) : (term1643 _90768 _90775 f x'' _36997) = (term1643 _90768 _90775 f x'' _36997).
Proof. exact (eq_refl (term1643 _90768 _90775 f x'' _36997)). Qed.
Lemma lem3502924 {_90768 _90775 : Type'} (x'' : _90775 -> _90768) (s : _90768 -> Prop) (_36998 : _90768) (_36997 : _90775) (f : _90768 -> _90775) (t : _90768 -> Prop) (_36999 : _90768) : (term1638 _90768 _90775 x'' s _36998 _36997 f t _36999) = (term1644 _90768 _90775 x'' s _36998 _36997 f t _36999).
Proof. exact (MK_COMB (@lem3502921 _90768 _90775 f x'' _36997) (@lem3502920 _90768 _90775 s _36998 _36997 f t _36999)). Qed.
Lemma lem3502940 {_90768 _90775 : Type'} (s : _90768 -> Prop) (_36998 : _90768) (_36997 : _90775) (f : _90768 -> _90775) (t : _90768 -> Prop) (_36999 : _90768) : (term1583 _90768 _90775 s _36998 _36997 f t _36999) = (term1642 _90768 _90775 s _36998 _36997 f t _36999).
Proof. exact (@lem3498535 (term440 _90768 _90775 _36997 f _36998) (term618 _90768 s _36998) (term364 _90768 _90775 _36997 f t _36999)). Qed.
Lemma lem3502941 {_90768 _90775 : Type'} (s : _90768 -> Prop) (x'' : _90775 -> _90768) (_36997 : _90775) : (term1645 _90768 _90775 s x'' _36997) = (term1645 _90768 _90775 s x'' _36997).
Proof. exact (eq_refl (term1645 _90768 _90775 s x'' _36997)). Qed.
Lemma lem3502944 {_90768 _90775 : Type'} (x'' : _90775 -> _90768) (s : _90768 -> Prop) (_36998 : _90768) (_36997 : _90775) (f : _90768 -> _90775) (t : _90768 -> Prop) (_36999 : _90768) : (term1640 _90768 _90775 x'' s _36998 _36997 f t _36999) = (term1646 _90768 _90775 x'' s _36998 _36997 f t _36999).
Proof. exact (MK_COMB (@lem3502941 _90768 _90775 s x'' _36997) (@lem3502940 _90768 _90775 s _36998 _36997 f t _36999)). Qed.
Lemma lem3502960 {_90768 _90775 : Type'} (s : _90768 -> Prop) (_36998 : _90768) (_36997 : _90775) (f : _90768 -> _90775) (t : _90768 -> Prop) (_36999 : _90768) : (term1583 _90768 _90775 s _36998 _36997 f t _36999) = (term1642 _90768 _90775 s _36998 _36997 f t _36999).
Proof. exact (@lem3498535 (term440 _90768 _90775 _36997 f _36998) (term618 _90768 s _36998) (term364 _90768 _90775 _36997 f t _36999)). Qed.
Lemma lem3502961 {_90768 _90775 : Type'} (t : _90768 -> Prop) (x'' : _90775 -> _90768) (_36997 : _90775) : (term1645 _90768 _90775 t x'' _36997) = (term1645 _90768 _90775 t x'' _36997).
Proof. exact (eq_refl (term1645 _90768 _90775 t x'' _36997)). Qed.
Lemma lem3502964 {_90768 _90775 : Type'} (x'' : _90775 -> _90768) (s : _90768 -> Prop) (_36998 : _90768) (_36997 : _90775) (f : _90768 -> _90775) (t : _90768 -> Prop) (_36999 : _90768) : (term1639 _90768 _90775 x'' s _36998 _36997 f t _36999) = (term1647 _90768 _90775 x'' s _36998 _36997 f t _36999).
Proof. exact (MK_COMB (@lem3502961 _90768 _90775 t x'' _36997) (@lem3502960 _90768 _90775 s _36998 _36997 f t _36999)). Qed.
Lemma lem3503034 {_90768 _90775 : Type'} (f : _90768 -> _90775) (s : _90768 -> Prop) (_36985 : _90768) : (term1648 _90768 _90775 f s _36985) = (term1648 _90768 _90775 f s _36985).
Proof. exact (eq_refl (term1648 _90768 _90775 f s _36985)). Qed.
Lemma lem3503035 {_90768 _90775 : Type'} (_36985 : _90768) (t : _90768 -> Prop) (x' : _90768) (f : _90768 -> _90775) (s : _90768 -> Prop) (u : _90775 -> Prop) (x : _90775) (h1 : term1497 _90768 _90775 t x' f s u x) : (term1649 _90768 _90775 f s _36985 x) = (term1650 _90768 _90775 s _36985 f x').
Proof. exact (MK_COMB (@lem3503034 _90768 _90775 f s _36985) (@lem3502487 _90768 _90775 t x' f s u x h1)). Qed.
Lemma lem3503036 {_90768 _90775 : Type'} (x' : _90768) (f : _90768 -> _90775) (s : _90768 -> Prop) (_36985 : _90768) : (term1650 _90768 _90775 s _36985 f x') = (term310 _90768 _90775 x' f s _36985).
Proof. exact (eq_refl (term1650 _90768 _90775 s _36985 f x')). Qed.
Lemma lem3503037 {_90768 _90775 : Type'} (f : _90768 -> _90775) (s : _90768 -> Prop) (_36985 : _90768) (x : _90775) : (term1651 _90768 _90775 f s _36985 x) = (term1651 _90768 _90775 f s _36985 x).
Proof. exact (eq_refl (term1651 _90768 _90775 f s _36985 x)). Qed.
Lemma lem3503038 {_90768 _90775 : Type'} (x : _90775) (x' : _90768) (f : _90768 -> _90775) (s : _90768 -> Prop) (_36985 : _90768) : ((term1649 _90768 _90775 f s _36985 x) = (term1650 _90768 _90775 s _36985 f x')) = ((term1649 _90768 _90775 f s _36985 x) = (term310 _90768 _90775 x' f s _36985)).
Proof. exact (MK_COMB (@lem3503037 _90768 _90775 f s _36985 x) (@lem3503036 _90768 _90775 x' f s _36985)). Qed.
Lemma lem3503039 {_90768 _90775 : Type'} (x : _90775) (f : _90768 -> _90775) (s : _90768 -> Prop) (_36985 : _90768) : (term1649 _90768 _90775 f s _36985 x) = (term364 _90768 _90775 x f s _36985).
Proof. exact (eq_refl (term1649 _90768 _90775 f s _36985 x)). Qed.
Lemma lem3503040 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem3503041 {_90768 _90775 : Type'} (x : _90775) (f : _90768 -> _90775) (s : _90768 -> Prop) (_36985 : _90768) : (term1651 _90768 _90775 f s _36985 x) = (term1652 _90768 _90775 x f s _36985).
Proof. exact (MK_COMB (@lem3503040) (@lem3503039 _90768 _90775 x f s _36985)). Qed.
Lemma lem3503042 {_90768 _90775 : Type'} (x' : _90768) (f : _90768 -> _90775) (s : _90768 -> Prop) (_36985 : _90768) : (term310 _90768 _90775 x' f s _36985) = (term310 _90768 _90775 x' f s _36985).
Proof. exact (eq_refl (term310 _90768 _90775 x' f s _36985)). Qed.
Lemma lem3503043 {_90768 _90775 : Type'} (x : _90775) (x' : _90768) (f : _90768 -> _90775) (s : _90768 -> Prop) (_36985 : _90768) : ((term1649 _90768 _90775 f s _36985 x) = (term310 _90768 _90775 x' f s _36985)) = ((term364 _90768 _90775 x f s _36985) = (term310 _90768 _90775 x' f s _36985)).
Proof. exact (MK_COMB (@lem3503041 _90768 _90775 x f s _36985) (@lem3503042 _90768 _90775 x' f s _36985)). Qed.
Lemma lem3503044 {_90768 _90775 : Type'} (x : _90775) (x' : _90768) (f : _90768 -> _90775) (s : _90768 -> Prop) (_36985 : _90768) : ((term1649 _90768 _90775 f s _36985 x) = (term1650 _90768 _90775 s _36985 f x')) = ((term364 _90768 _90775 x f s _36985) = (term310 _90768 _90775 x' f s _36985)).
Proof. exact (TRANS (@lem3503038 _90768 _90775 x x' f s _36985) (@lem3503043 _90768 _90775 x x' f s _36985)). Qed.
Lemma lem3503045 {_90768 _90775 : Type'} (_36985 : _90768) (t : _90768 -> Prop) (x' : _90768) (f : _90768 -> _90775) (s : _90768 -> Prop) (u : _90775 -> Prop) (x : _90775) (h1 : term1497 _90768 _90775 t x' f s u x) : (term364 _90768 _90775 x f s _36985) = (term310 _90768 _90775 x' f s _36985).
Proof. exact (EQ_MP (@lem3503044 _90768 _90775 x x' f s _36985) (@lem3503035 _90768 _90775 _36985 t x' f s u x h1)). Qed.
Lemma lem3503046 {_90768 _90775 : Type'} (_36985 : _90768) (t : _90768 -> Prop) (x' : _90768) (f : _90768 -> _90775) (s : _90768 -> Prop) (u : _90775 -> Prop) (x : _90775) (h1 : term371 _90768 _90775 x f s) (h2 : term1497 _90768 _90775 t x' f s u x) : term310 _90768 _90775 x' f s _36985.
Proof. exact (EQ_MP (@lem3503045 _90768 _90775 _36985 t x' f s u x h2) (@lem3502497 _90768 _90775 _36985 x f s h1)). Qed.
Lemma lem3503200 {_90768 _90775 : Type'} (_36988 : _90768) (_36987 : _90775) (x'' : _90775 -> _90768) (s : _90768 -> Prop) (x''' : _90775 -> _90768) (x'''' : _90775 -> _90768) (x''''' : _90775 -> _90768) (f : _90768 -> _90775) (t : _90768 -> Prop) (u : _90775 -> Prop) (h1 : term1465 _90768 _90775 x'' s x''' x'''' x''''' f t u) : term1641 _90768 _90775 f t _36988 u _36987.
Proof. exact (EQ_MP (@lem3502652 _90768 _90775 f t _36988 u _36987) (@lem3502395 _90768 _90775 _36988 _36987 x'' s x''' x'''' x''''' f t u h1)). Qed.
Lemma lem3503229 {_90775 : Type'} (u : _90775 -> Prop) : (term1653 _90775 u) = (term1653 _90775 u).
Proof. exact (eq_refl (term1653 _90775 u)). Qed.
Lemma lem3503230 {_90768 _90775 : Type'} (t : _90768 -> Prop) (x' : _90768) (f : _90768 -> _90775) (s : _90768 -> Prop) (u : _90775 -> Prop) (x : _90775) (h1 : term1497 _90768 _90775 t x' f s u x) : (term1654 _90775 u x) = (term1655 _90768 _90775 u f x').
Proof. exact (MK_COMB (@lem3503229 _90775 u) (@lem3502655 _90768 _90775 t x' f s u x h1)). Qed.
Lemma lem3503231 {_90768 _90775 : Type'} (u : _90775 -> Prop) (f : _90768 -> _90775) (x' : _90768) : (term1655 _90768 _90775 u f x') = (term1656 _90768 _90775 u f x').
Proof. exact (eq_refl (term1655 _90768 _90775 u f x')). Qed.
Lemma lem3503232 {_90775 : Type'} (u : _90775 -> Prop) (x : _90775) : (term1657 _90775 u x) = (term1657 _90775 u x).
Proof. exact (eq_refl (term1657 _90775 u x)). Qed.
Lemma lem3503233 {_90768 _90775 : Type'} (x : _90775) (u : _90775 -> Prop) (f : _90768 -> _90775) (x' : _90768) : ((term1654 _90775 u x) = (term1655 _90768 _90775 u f x')) = ((term1654 _90775 u x) = (term1656 _90768 _90775 u f x')).
Proof. exact (MK_COMB (@lem3503232 _90775 u x) (@lem3503231 _90768 _90775 u f x')). Qed.
Lemma lem3503234 {_90775 : Type'} (u : _90775 -> Prop) (x : _90775) : (term1654 _90775 u x) = (term618 _90775 u x).
Proof. exact (eq_refl (term1654 _90775 u x)). Qed.
Lemma lem3503235 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem3503236 {_90775 : Type'} (u : _90775 -> Prop) (x : _90775) : (term1657 _90775 u x) = (term1658 _90775 u x).
Proof. exact (MK_COMB (@lem3503235) (@lem3503234 _90775 u x)). Qed.
Lemma lem3503237 {_90768 _90775 : Type'} (u : _90775 -> Prop) (f : _90768 -> _90775) (x' : _90768) : (term1656 _90768 _90775 u f x') = (term1656 _90768 _90775 u f x').
Proof. exact (eq_refl (term1656 _90768 _90775 u f x')). Qed.
Lemma lem3503238 {_90768 _90775 : Type'} (x : _90775) (u : _90775 -> Prop) (f : _90768 -> _90775) (x' : _90768) : ((term1654 _90775 u x) = (term1656 _90768 _90775 u f x')) = ((term618 _90775 u x) = (term1656 _90768 _90775 u f x')).
Proof. exact (MK_COMB (@lem3503236 _90775 u x) (@lem3503237 _90768 _90775 u f x')). Qed.
Lemma lem3503239 {_90768 _90775 : Type'} (x : _90775) (u : _90775 -> Prop) (f : _90768 -> _90775) (x' : _90768) : ((term1654 _90775 u x) = (term1655 _90768 _90775 u f x')) = ((term618 _90775 u x) = (term1656 _90768 _90775 u f x')).
Proof. exact (TRANS (@lem3503233 _90768 _90775 x u f x') (@lem3503238 _90768 _90775 x u f x')). Qed.
Lemma lem3503240 {_90768 _90775 : Type'} (t : _90768 -> Prop) (x' : _90768) (f : _90768 -> _90775) (s : _90768 -> Prop) (u : _90775 -> Prop) (x : _90775) (h1 : term1497 _90768 _90775 t x' f s u x) : (term618 _90775 u x) = (term1656 _90768 _90775 u f x').
Proof. exact (EQ_MP (@lem3503239 _90768 _90775 x u f x') (@lem3503230 _90768 _90775 t x' f s u x h1)). Qed.
Lemma lem3503241 {_90768 _90775 : Type'} (t : _90768 -> Prop) (x' : _90768) (f : _90768 -> _90775) (s : _90768 -> Prop) (u : _90775 -> Prop) (x : _90775) (h1 : term618 _90775 u x) (h2 : term1497 _90768 _90775 t x' f s u x) : term1656 _90768 _90775 u f x'.
Proof. exact (EQ_MP (@lem3503240 _90768 _90775 t x' f s u x h2) (@lem3502661 _90775 u x h1)). Qed.
Lemma lem3503396 {_90768 _90775 : Type'} (f : _90768 -> _90775) (s : _90768 -> Prop) (t : _90768 -> Prop) (_37002 : _90768) : (term1659 _90768 _90775 f s t _37002) = (term1659 _90768 _90775 f s t _37002).
Proof. exact (eq_refl (term1659 _90768 _90775 f s t _37002)). Qed.
Lemma lem3503397 {_90768 _90775 : Type'} (_37002 : _90768) (t : _90768 -> Prop) (f : _90768 -> _90775) (s : _90768 -> Prop) (x' : _90768) (u : _90775 -> Prop) (x : _90775) (h1 : term1520 _90768 _90775 t f s x' u x) : (term1660 _90768 _90775 f s t _37002 x) = (term1661 _90768 _90775 s t _37002 f x').
Proof. exact (MK_COMB (@lem3503396 _90768 _90775 f s t _37002) (@lem3502831 _90768 _90775 t f s x' u x h1)). Qed.
Lemma lem3503398 {_90768 _90775 : Type'} (x' : _90768) (f : _90768 -> _90775) (s : _90768 -> Prop) (t : _90768 -> Prop) (_37002 : _90768) : (term1661 _90768 _90775 s t _37002 f x') = (term1662 _90768 _90775 x' f s t _37002).
Proof. exact (eq_refl (term1661 _90768 _90775 s t _37002 f x')). Qed.
Lemma lem3503399 {_90768 _90775 : Type'} (f : _90768 -> _90775) (s : _90768 -> Prop) (t : _90768 -> Prop) (_37002 : _90768) (x : _90775) : (term1663 _90768 _90775 f s t _37002 x) = (term1663 _90768 _90775 f s t _37002 x).
Proof. exact (eq_refl (term1663 _90768 _90775 f s t _37002 x)). Qed.
Lemma lem3503400 {_90768 _90775 : Type'} (x : _90775) (x' : _90768) (f : _90768 -> _90775) (s : _90768 -> Prop) (t : _90768 -> Prop) (_37002 : _90768) : ((term1660 _90768 _90775 f s t _37002 x) = (term1661 _90768 _90775 s t _37002 f x')) = ((term1660 _90768 _90775 f s t _37002 x) = (term1662 _90768 _90775 x' f s t _37002)).
Proof. exact (MK_COMB (@lem3503399 _90768 _90775 f s t _37002 x) (@lem3503398 _90768 _90775 x' f s t _37002)). Qed.
Lemma lem3503401 {_90768 _90775 : Type'} (x : _90775) (f : _90768 -> _90775) (s : _90768 -> Prop) (t : _90768 -> Prop) (_37002 : _90768) : (term1660 _90768 _90775 f s t _37002 x) = (term1092 _90768 _90775 x f s t _37002).
Proof. exact (eq_refl (term1660 _90768 _90775 f s t _37002 x)). Qed.
Lemma lem3503402 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem3503403 {_90768 _90775 : Type'} (x : _90775) (f : _90768 -> _90775) (s : _90768 -> Prop) (t : _90768 -> Prop) (_37002 : _90768) : (term1663 _90768 _90775 f s t _37002 x) = (term1664 _90768 _90775 x f s t _37002).
Proof. exact (MK_COMB (@lem3503402) (@lem3503401 _90768 _90775 x f s t _37002)). Qed.
Lemma lem3503404 {_90768 _90775 : Type'} (x' : _90768) (f : _90768 -> _90775) (s : _90768 -> Prop) (t : _90768 -> Prop) (_37002 : _90768) : (term1662 _90768 _90775 x' f s t _37002) = (term1662 _90768 _90775 x' f s t _37002).
Proof. exact (eq_refl (term1662 _90768 _90775 x' f s t _37002)). Qed.
Lemma lem3503405 {_90768 _90775 : Type'} (x : _90775) (x' : _90768) (f : _90768 -> _90775) (s : _90768 -> Prop) (t : _90768 -> Prop) (_37002 : _90768) : ((term1660 _90768 _90775 f s t _37002 x) = (term1662 _90768 _90775 x' f s t _37002)) = ((term1092 _90768 _90775 x f s t _37002) = (term1662 _90768 _90775 x' f s t _37002)).
Proof. exact (MK_COMB (@lem3503403 _90768 _90775 x f s t _37002) (@lem3503404 _90768 _90775 x' f s t _37002)). Qed.
Lemma lem3503406 {_90768 _90775 : Type'} (x : _90775) (x' : _90768) (f : _90768 -> _90775) (s : _90768 -> Prop) (t : _90768 -> Prop) (_37002 : _90768) : ((term1660 _90768 _90775 f s t _37002 x) = (term1661 _90768 _90775 s t _37002 f x')) = ((term1092 _90768 _90775 x f s t _37002) = (term1662 _90768 _90775 x' f s t _37002)).
Proof. exact (TRANS (@lem3503400 _90768 _90775 x x' f s t _37002) (@lem3503405 _90768 _90775 x x' f s t _37002)). Qed.
Lemma lem3503407 {_90768 _90775 : Type'} (_37002 : _90768) (t : _90768 -> Prop) (f : _90768 -> _90775) (s : _90768 -> Prop) (x' : _90768) (u : _90775 -> Prop) (x : _90775) (h1 : term1520 _90768 _90775 t f s x' u x) : (term1092 _90768 _90775 x f s t _37002) = (term1662 _90768 _90775 x' f s t _37002).
Proof. exact (EQ_MP (@lem3503406 _90768 _90775 x x' f s t _37002) (@lem3503397 _90768 _90775 _37002 t f s x' u x h1)). Qed.
Lemma lem3503408 {_90768 _90775 : Type'} (_37002 : _90768) (t : _90768 -> Prop) (f : _90768 -> _90775) (s : _90768 -> Prop) (x' : _90768) (u : _90775 -> Prop) (x : _90775) (h1 : term1520 _90768 _90775 t f s x' u x) : term1662 _90768 _90775 x' f s t _37002.
Proof. exact (EQ_MP (@lem3503407 _90768 _90775 _37002 t f s x' u x h1) (@lem3502827 _90768 _90775 _37002 t f s x' u x h1)). Qed.
Lemma lem3503409 {_90775 : Type'} (u : _90775 -> Prop) : (term1665 _90775 u) = (term1665 _90775 u).
Proof. exact (eq_refl (term1665 _90775 u)). Qed.
Lemma lem3503410 {_90768 _90775 : Type'} (t : _90768 -> Prop) (f : _90768 -> _90775) (s : _90768 -> Prop) (x' : _90768) (u : _90775 -> Prop) (x : _90775) (h1 : term1520 _90768 _90775 t f s x' u x) : (term1666 _90775 u x) = (term1667 _90768 _90775 u f x').
Proof. exact (MK_COMB (@lem3503409 _90775 u) (@lem3502831 _90768 _90775 t f s x' u x h1)). Qed.
Lemma lem3503411 {_90768 _90775 : Type'} (u : _90775 -> Prop) (f : _90768 -> _90775) (x' : _90768) : (term1667 _90768 _90775 u f x') = (term1668 _90768 _90775 u f x').
Proof. exact (eq_refl (term1667 _90768 _90775 u f x')). Qed.
Lemma lem3503412 {_90775 : Type'} (u : _90775 -> Prop) (x : _90775) : (term1669 _90775 u x) = (term1669 _90775 u x).
Proof. exact (eq_refl (term1669 _90775 u x)). Qed.
Lemma lem3503413 {_90768 _90775 : Type'} (x : _90775) (u : _90775 -> Prop) (f : _90768 -> _90775) (x' : _90768) : ((term1666 _90775 u x) = (term1667 _90768 _90775 u f x')) = ((term1666 _90775 u x) = (term1668 _90768 _90775 u f x')).
Proof. exact (MK_COMB (@lem3503412 _90775 u x) (@lem3503411 _90768 _90775 u f x')). Qed.
Lemma lem3503414 {_90775 : Type'} (u : _90775 -> Prop) (x : _90775) : (term1666 _90775 u x) = (u x).
Proof. exact (eq_refl (term1666 _90775 u x)). Qed.
Lemma lem3503415 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem3503416 {_90775 : Type'} (u : _90775 -> Prop) (x : _90775) : (term1669 _90775 u x) = (term1670 _90775 u x).
Proof. exact (MK_COMB (@lem3503415) (@lem3503414 _90775 u x)). Qed.
Lemma lem3503417 {_90768 _90775 : Type'} (u : _90775 -> Prop) (f : _90768 -> _90775) (x' : _90768) : (term1668 _90768 _90775 u f x') = (term1668 _90768 _90775 u f x').
Proof. exact (eq_refl (term1668 _90768 _90775 u f x')). Qed.
Lemma lem3503418 {_90768 _90775 : Type'} (x : _90775) (u : _90775 -> Prop) (f : _90768 -> _90775) (x' : _90768) : ((term1666 _90775 u x) = (term1668 _90768 _90775 u f x')) = ((u x) = (term1668 _90768 _90775 u f x')).
Proof. exact (MK_COMB (@lem3503416 _90775 u x) (@lem3503417 _90768 _90775 u f x')). Qed.
Lemma lem3503419 {_90768 _90775 : Type'} (x : _90775) (u : _90775 -> Prop) (f : _90768 -> _90775) (x' : _90768) : ((term1666 _90775 u x) = (term1667 _90768 _90775 u f x')) = ((u x) = (term1668 _90768 _90775 u f x')).
Proof. exact (TRANS (@lem3503413 _90768 _90775 x u f x') (@lem3503418 _90768 _90775 x u f x')). Qed.
Lemma lem3503420 {_90768 _90775 : Type'} (t : _90768 -> Prop) (f : _90768 -> _90775) (s : _90768 -> Prop) (x' : _90768) (u : _90775 -> Prop) (x : _90775) (h1 : term1520 _90768 _90775 t f s x' u x) : (u x) = (term1668 _90768 _90775 u f x').
Proof. exact (EQ_MP (@lem3503419 _90768 _90775 x u f x') (@lem3503410 _90768 _90775 t f s x' u x h1)). Qed.
Lemma lem3503505 {_90768 _90775 : Type'} (_36998 : _90768) (_36997 : _90775) (_36999 : _90768) (x'' : _90775 -> _90768) (s : _90768 -> Prop) (x''' : _90775 -> _90768) (x'''' : _90775 -> _90768) (x''''' : _90775 -> _90768) (f : _90768 -> _90775) (t : _90768 -> Prop) (u : _90775 -> Prop) (h1 : term1465 _90768 _90775 x'' s x''' x'''' x''''' f t u) : term1644 _90768 _90775 x'' s _36998 _36997 f t _36999.
Proof. exact (EQ_MP (@lem3502924 _90768 _90775 x'' s _36998 _36997 f t _36999) (@lem3502469 _90768 _90775 _36998 _36997 _36999 x'' s x''' x'''' x''''' f t u h1)). Qed.
Lemma lem3503519 {_90768 _90775 : Type'} (_36998 : _90768) (_36997 : _90775) (_36999 : _90768) (x'' : _90775 -> _90768) (s : _90768 -> Prop) (x''' : _90775 -> _90768) (x'''' : _90775 -> _90768) (x''''' : _90775 -> _90768) (f : _90768 -> _90775) (t : _90768 -> Prop) (u : _90775 -> Prop) (h1 : term1465 _90768 _90775 x'' s x''' x'''' x''''' f t u) : term1646 _90768 _90775 x'' s _36998 _36997 f t _36999.
Proof. exact (EQ_MP (@lem3502944 _90768 _90775 x'' s _36998 _36997 f t _36999) (@lem3502471 _90768 _90775 _36998 _36997 _36999 x'' s x''' x'''' x''''' f t u h1)). Qed.
Lemma lem3503533 {_90768 _90775 : Type'} (_36998 : _90768) (_36997 : _90775) (_36999 : _90768) (x'' : _90775 -> _90768) (s : _90768 -> Prop) (x''' : _90775 -> _90768) (x'''' : _90775 -> _90768) (x''''' : _90775 -> _90768) (f : _90768 -> _90775) (t : _90768 -> Prop) (u : _90775 -> Prop) (h1 : term1465 _90768 _90775 x'' s x''' x'''' x''''' f t u) : term1647 _90768 _90775 x'' s _36998 _36997 f t _36999.
Proof. exact (EQ_MP (@lem3502964 _90768 _90775 x'' s _36998 _36997 f t _36999) (@lem3502470 _90768 _90775 _36998 _36997 _36999 x'' s x''' x'''' x''''' f t u h1)). Qed.
Lemma lem3503547 {_90768 _90775 : Type'} (_36994 : _90775) (x'' : _90775 -> _90768) (s : _90768 -> Prop) (x''' : _90775 -> _90768) (x'''' : _90775 -> _90768) (x''''' : _90775 -> _90768) (f : _90768 -> _90775) (t : _90768 -> Prop) (u : _90775 -> Prop) (h1 : term1465 _90768 _90775 x'' s x''' x'''' x''''' f t u) : term1671 _90768 _90775 f x''''' u _36994.
Proof. exact (proj1 (@lem3502413 _90768 _90775 _36994 x'' s x''' x'''' x''''' f t u h1)). Qed.
Lemma lem3503561 {_90768 _90775 : Type'} (_36994 : _90775) (x'' : _90775 -> _90768) (s : _90768 -> Prop) (x''' : _90775 -> _90768) (x'''' : _90775 -> _90768) (x''''' : _90775 -> _90768) (f : _90768 -> _90775) (t : _90768 -> Prop) (u : _90775 -> Prop) (h1 : term1465 _90768 _90775 x'' s x''' x'''' x''''' f t u) : term1672 _90768 _90775 t x''''' u _36994.
Proof. exact (proj2 (@lem3502413 _90768 _90775 _36994 x'' s x''' x'''' x''''' f t u h1)). Qed.
Lemma lem3503643 {_90775 : Type'} (x : _90775) : x = x.
Proof. exact (@lem21386 _90775 x). Qed.
Lemma lem3503644 {_90775 : Type'} (x : _90775) : x = x.
Proof. exact (@lem3503643 _90775 x). Qed.
Lemma lem3503645 {_90768 _90775 : Type'} (f : _90768 -> _90775) (x' : _90768) : (f x') = (f x').
Proof. exact (@lem3503644 _90775 (f x')). Qed.
Lemma lem3503646 {_90768 _90775 : Type'} (f : _90768 -> _90775) (x' : _90768) : term1673 _90768 _90775 f x'.
Proof. exact (fun h0 : term1674 _90768 _90775 f x' => @lem3503645 _90768 _90775 f x'). Qed.
Lemma lem3503648 (p : Prop) : (term828 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem3503649 {_90768 _90775 : Type'} (f : _90768 -> _90775) (x' : _90768) : (term1673 _90768 _90775 f x') = ((f x') = (f x')).
Proof. exact (@lem3503648 ((f x') = (f x'))). Qed.
Lemma lem3503650 {_90768 _90775 : Type'} (f : _90768 -> _90775) (x' : _90768) : (f x') = (f x').
Proof. exact (EQ_MP (@lem3503649 _90768 _90775 f x') (@lem3503646 _90768 _90775 f x')). Qed.
Lemma lem3503652 {_90768 _90775 : Type'} (t : _90768 -> Prop) (x' : _90768) (f : _90768 -> _90775) (s : _90768 -> Prop) (u : _90775 -> Prop) (x : _90775) (h1 : term1497 _90768 _90775 t x' f s u x) : s x'.
Proof. exact (proj1 (@lem3501349 _90768 _90775 t x' f s u x h1)). Qed.
Lemma lem3503653 {_90768 _90775 : Type'} (t : _90768 -> Prop) (x' : _90768) (f : _90768 -> _90775) (s : _90768 -> Prop) (u : _90775 -> Prop) (x : _90775) (h1 : term1497 _90768 _90775 t x' f s u x) : term1675 _90768 s x'.
Proof. exact (fun h0 : term618 _90768 s x' => @lem3503652 _90768 _90775 t x' f s u x h1). Qed.
Lemma lem3503655 (p : Prop) : (term828 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem3503656 {_90768 : Type'} (s : _90768 -> Prop) (x' : _90768) : (term1675 _90768 s x') = (s x').
Proof. exact (@lem3503655 (s x')). Qed.
Lemma lem3503657 {_90768 _90775 : Type'} (t : _90768 -> Prop) (x' : _90768) (f : _90768 -> _90775) (s : _90768 -> Prop) (u : _90775 -> Prop) (x : _90775) (h1 : term1497 _90768 _90775 t x' f s u x) : s x'.
Proof. exact (EQ_MP (@lem3503656 _90768 s x') (@lem3503653 _90768 _90775 t x' f s u x h1)). Qed.
Lemma lem3503659 (a : Prop) (b : Prop) : (term840 a b) = (term841 a b).
Proof. exact (EQ_MP (@lem20904 a b) (@lem21007 a b)). Qed.
Lemma lem3503660 {_90768 _90775 : Type'} (x' : _90768) (f : _90768 -> _90775) (s : _90768 -> Prop) (_36985 : _90768) : (term310 _90768 _90775 x' f s _36985) = (term309 _90768 _90775 x' f s _36985).
Proof. exact (@lem3503659 ((f x') = (f _36985)) (s _36985)). Qed.
Lemma lem3503662 (p : Prop) : (~ p) = (p -> False).
Proof. exact (EQ_MP (@lem21021 p) (@lem0)). Qed.
Lemma lem3503663 {_90768 _90775 : Type'} (x' : _90768) (f : _90768 -> _90775) (s : _90768 -> Prop) (_36985 : _90768) : (term309 _90768 _90775 x' f s _36985) = (term1676 _90768 _90775 x' f s _36985).
Proof. exact (@lem3503662 (term237 _90768 _90775 x' f s _36985)). Qed.
Lemma lem3503664 {_90768 _90775 : Type'} (x' : _90768) (f : _90768 -> _90775) (s : _90768 -> Prop) (_36985 : _90768) : (term310 _90768 _90775 x' f s _36985) = (term1676 _90768 _90775 x' f s _36985).
Proof. exact (TRANS (@lem3503660 _90768 _90775 x' f s _36985) (@lem3503663 _90768 _90775 x' f s _36985)). Qed.
Lemma lem3503666 {_90768 _90775 : Type'} (t : _90768 -> Prop) (x' : _90768) (f : _90768 -> _90775) (s : _90768 -> Prop) (u : _90775 -> Prop) (x : _90775) (h1 : term1497 _90768 _90775 t x' f s u x) : term1677 _90768 _90775 f s x'.
Proof. exact (conj (@lem3503650 _90768 _90775 f x') (@lem3503657 _90768 _90775 t x' f s u x h1)). Qed.
Lemma lem3503668 {_90768 _90775 : Type'} (_36985 : _90768) (t : _90768 -> Prop) (x' : _90768) (f : _90768 -> _90775) (s : _90768 -> Prop) (u : _90775 -> Prop) (x : _90775) (h1 : term371 _90768 _90775 x f s) (h2 : term1497 _90768 _90775 t x' f s u x) : term1676 _90768 _90775 x' f s _36985.
Proof. exact (EQ_MP (@lem3503664 _90768 _90775 x' f s _36985) (@lem3503046 _90768 _90775 _36985 t x' f s u x h1 h2)). Qed.
Lemma lem3503669 {_90768 _90775 : Type'} (_36985 : _90768) (t : _90768 -> Prop) (x' : _90768) (f : _90768 -> _90775) (s : _90768 -> Prop) (u : _90775 -> Prop) (x : _90775) (h1 : term371 _90768 _90775 x f s) (h2 : term1497 _90768 _90775 t x' f s u x) : term1676 _90768 _90775 x' f s _36985.
Proof. exact (@lem3503668 _90768 _90775 _36985 t x' f s u x h1 h2). Qed.
Lemma lem3503670 {_90768 _90775 : Type'} (t : _90768 -> Prop) (x' : _90768) (f : _90768 -> _90775) (s : _90768 -> Prop) (u : _90775 -> Prop) (x : _90775) (h1 : term371 _90768 _90775 x f s) (h2 : term1497 _90768 _90775 t x' f s u x) : term1678 _90768 _90775 f s x'.
Proof. exact (@lem3503669 _90768 _90775 x' t x' f s u x h1 h2). Qed.
Lemma lem3503673 {_90768 _90775 : Type'} (t : _90768 -> Prop) (x' : _90768) (f : _90768 -> _90775) (s : _90768 -> Prop) (u : _90775 -> Prop) (x : _90775) (h1 : term371 _90768 _90775 x f s) (h2 : term1497 _90768 _90775 t x' f s u x) : False.
Proof. exact (@lem3503670 _90768 _90775 t x' f s u x h1 h2 (@lem3503666 _90768 _90775 t x' f s u x h2)). Qed.
Lemma lem3503674 {_90768 _90775 : Type'} (t : _90768 -> Prop) (x' : _90768) (f : _90768 -> _90775) (s : _90768 -> Prop) (u : _90775 -> Prop) (x : _90775) (h1 : term371 _90768 _90775 x f s) (h2 : term1497 _90768 _90775 t x' f s u x) : term847.
Proof. exact (fun h0 : ~ False => @lem3503673 _90768 _90775 t x' f s u x h1 h2). Qed.
Lemma lem3503676 (p : Prop) : (term828 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem3503677 : term847 = False.
Proof. exact (@lem3503676 False). Qed.
Lemma lem3503760 {_90775 : Type'} (x : _90775) : x = x.
Proof. exact (@lem21386 _90775 x). Qed.
Lemma lem3503761 {_90775 : Type'} (x : _90775) : x = x.
Proof. exact (@lem3503760 _90775 x). Qed.
Lemma lem3503762 {_90768 _90775 : Type'} (f : _90768 -> _90775) (x' : _90768) : (f x') = (f x').
Proof. exact (@lem3503761 _90775 (f x')). Qed.
Lemma lem3503763 {_90768 _90775 : Type'} (f : _90768 -> _90775) (x' : _90768) : term1673 _90768 _90775 f x'.
Proof. exact (fun h0 : term1674 _90768 _90775 f x' => @lem3503762 _90768 _90775 f x'). Qed.
Lemma lem3503765 (p : Prop) : (term828 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem3503766 {_90768 _90775 : Type'} (f : _90768 -> _90775) (x' : _90768) : (term1673 _90768 _90775 f x') = ((f x') = (f x')).
Proof. exact (@lem3503765 ((f x') = (f x'))). Qed.
Lemma lem3503767 {_90768 _90775 : Type'} (f : _90768 -> _90775) (x' : _90768) : (f x') = (f x').
Proof. exact (EQ_MP (@lem3503766 _90768 _90775 f x') (@lem3503763 _90768 _90775 f x')). Qed.
Lemma lem3503769 {_90768 _90775 : Type'} (t : _90768 -> Prop) (x' : _90768) (f : _90768 -> _90775) (s : _90768 -> Prop) (u : _90775 -> Prop) (x : _90775) (h1 : term1497 _90768 _90775 t x' f s u x) : t x'.
Proof. exact (proj2 (@lem3501349 _90768 _90775 t x' f s u x h1)). Qed.
Lemma lem3503770 {_90768 _90775 : Type'} (t : _90768 -> Prop) (x' : _90768) (f : _90768 -> _90775) (s : _90768 -> Prop) (u : _90775 -> Prop) (x : _90775) (h1 : term1497 _90768 _90775 t x' f s u x) : term1675 _90768 t x'.
Proof. exact (fun h0 : term618 _90768 t x' => @lem3503769 _90768 _90775 t x' f s u x h1). Qed.
Lemma lem3503772 (p : Prop) : (term828 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem3503773 {_90768 : Type'} (t : _90768 -> Prop) (x' : _90768) : (term1675 _90768 t x') = (t x').
Proof. exact (@lem3503772 (t x')). Qed.
Lemma lem3503774 {_90768 _90775 : Type'} (t : _90768 -> Prop) (x' : _90768) (f : _90768 -> _90775) (s : _90768 -> Prop) (u : _90775 -> Prop) (x : _90775) (h1 : term1497 _90768 _90775 t x' f s u x) : t x'.
Proof. exact (EQ_MP (@lem3503773 _90768 t x') (@lem3503770 _90768 _90775 t x' f s u x h1)). Qed.
Lemma lem3503780 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem3503781 {_90768 _90775 : Type'} (t : _90768 -> Prop) (f : _90768 -> _90775) (_36988 : _90768) (u : _90775 -> Prop) (_36987 : _90775) : (term1641 _90768 _90775 f t _36988 u _36987) = (term1679 _90768 _90775 t f _36988 u _36987).
Proof. exact (@lem3503780 (term618 _90768 t _36988) (term440 _90768 _90775 _36987 f _36988) (u _36987)). Qed.
Lemma lem3503795 (q : Prop) (p : Prop) : (p \/ q) = (q \/ p).
Proof. exact (proj1 (@lem827 (@el Prop) p q)). Qed.
Lemma lem3503796 {_90768 _90775 : Type'} (u : _90775 -> Prop) (_36987 : _90775) (f : _90768 -> _90775) (_36988 : _90768) : (term1680 _90768 _90775 f _36988 u _36987) = (term1681 _90768 _90775 u _36987 f _36988).
Proof. exact (@lem3503795 (u _36987) (term440 _90768 _90775 _36987 f _36988)). Qed.
Lemma lem3503804 {_90768 : Type'} (t : _90768 -> Prop) (_36988 : _90768) : (term320 _90768 t _36988) = (term320 _90768 t _36988).
Proof. exact (eq_refl (term320 _90768 t _36988)). Qed.
Lemma lem3503805 {_90768 _90775 : Type'} (t : _90768 -> Prop) (u : _90775 -> Prop) (_36987 : _90775) (f : _90768 -> _90775) (_36988 : _90768) : (term1679 _90768 _90775 t f _36988 u _36987) = (term1682 _90768 _90775 t u _36987 f _36988).
Proof. exact (MK_COMB (@lem3503804 _90768 t _36988) (@lem3503796 _90768 _90775 u _36987 f _36988)). Qed.
Lemma lem3503809 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem3503810 {_90768 _90775 : Type'} (u : _90775 -> Prop) (t : _90768 -> Prop) (_36987 : _90775) (f : _90768 -> _90775) (_36988 : _90768) : (term1682 _90768 _90775 t u _36987 f _36988) = (term1683 _90768 _90775 u t _36987 f _36988).
Proof. exact (@lem3503809 (u _36987) (term618 _90768 t _36988) (term440 _90768 _90775 _36987 f _36988)). Qed.
Lemma lem3503828 {_90768 _90775 : Type'} (u : _90775 -> Prop) (t : _90768 -> Prop) (_36987 : _90775) (f : _90768 -> _90775) (_36988 : _90768) : (term1679 _90768 _90775 t f _36988 u _36987) = (term1683 _90768 _90775 u t _36987 f _36988).
Proof. exact (TRANS (@lem3503805 _90768 _90775 t u _36987 f _36988) (@lem3503810 _90768 _90775 u t _36987 f _36988)). Qed.
Lemma lem3503829 {_90768 _90775 : Type'} (u : _90775 -> Prop) (t : _90768 -> Prop) (_36987 : _90775) (f : _90768 -> _90775) (_36988 : _90768) : (term1641 _90768 _90775 f t _36988 u _36987) = (term1683 _90768 _90775 u t _36987 f _36988).
Proof. exact (TRANS (@lem3503781 _90768 _90775 t f _36988 u _36987) (@lem3503828 _90768 _90775 u t _36987 f _36988)). Qed.
Lemma lem3503830 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem3503831 {_90768 _90775 : Type'} (u : _90775 -> Prop) (t : _90768 -> Prop) (_36987 : _90775) (f : _90768 -> _90775) (_36988 : _90768) : (term1684 _90768 _90775 f t _36988 u _36987) = (term1685 _90768 _90775 u t _36987 f _36988).
Proof. exact (MK_COMB (@lem3503830) (@lem3503829 _90768 _90775 u t _36987 f _36988)). Qed.
Lemma lem3503845 (q : Prop) (p : Prop) : (p \/ q) = (q \/ p).
Proof. exact (proj1 (@lem827 (@el Prop) p q)). Qed.
Lemma lem3503846 {_90768 _90775 : Type'} (t : _90768 -> Prop) (_36987 : _90775) (f : _90768 -> _90775) (_36988 : _90768) : (term364 _90768 _90775 _36987 f t _36988) = (term1686 _90768 _90775 t _36987 f _36988).
Proof. exact (@lem3503845 (term618 _90768 t _36988) (term440 _90768 _90775 _36987 f _36988)). Qed.
Lemma lem3503854 {_90775 : Type'} (u : _90775 -> Prop) (_36987 : _90775) : (term1687 _90775 u _36987) = (term1687 _90775 u _36987).
Proof. exact (eq_refl (term1687 _90775 u _36987)). Qed.
Lemma lem3503855 {_90768 _90775 : Type'} (u : _90775 -> Prop) (t : _90768 -> Prop) (_36987 : _90775) (f : _90768 -> _90775) (_36988 : _90768) : (term1688 _90768 _90775 u _36987 f t _36988) = (term1683 _90768 _90775 u t _36987 f _36988).
Proof. exact (MK_COMB (@lem3503854 _90775 u _36987) (@lem3503846 _90768 _90775 t _36987 f _36988)). Qed.
Lemma lem3503866 {_90768 _90775 : Type'} (u : _90775 -> Prop) (t : _90768 -> Prop) (_36987 : _90775) (f : _90768 -> _90775) (_36988 : _90768) : ((term1641 _90768 _90775 f t _36988 u _36987) = (term1688 _90768 _90775 u _36987 f t _36988)) = ((term1683 _90768 _90775 u t _36987 f _36988) = (term1683 _90768 _90775 u t _36987 f _36988)).
Proof. exact (MK_COMB (@lem3503831 _90768 _90775 u t _36987 f _36988) (@lem3503855 _90768 _90775 u t _36987 f _36988)). Qed.
Lemma lem3503868 {A : Type'} (x : A) : (x = x) = True.
Proof. exact (EQ_MP (@lem20665 A x) (@lem20664 A x)). Qed.
Lemma lem3503869 (x : Prop) : (x = x) = True.
Proof. exact (@lem3503868 Prop x). Qed.
Lemma lem3503870 {_90768 _90775 : Type'} (u : _90775 -> Prop) (t : _90768 -> Prop) (_36987 : _90775) (f : _90768 -> _90775) (_36988 : _90768) : ((term1683 _90768 _90775 u t _36987 f _36988) = (term1683 _90768 _90775 u t _36987 f _36988)) = True.
Proof. exact (@lem3503869 (term1683 _90768 _90775 u t _36987 f _36988)). Qed.
Lemma lem3503871 {_90768 _90775 : Type'} (u : _90775 -> Prop) (_36987 : _90775) (f : _90768 -> _90775) (t : _90768 -> Prop) (_36988 : _90768) : ((term1641 _90768 _90775 f t _36988 u _36987) = (term1688 _90768 _90775 u _36987 f t _36988)) = True.
Proof. exact (TRANS (@lem3503866 _90768 _90775 u t _36987 f _36988) (@lem3503870 _90768 _90775 u t _36987 f _36988)). Qed.
Lemma lem3503872 {_90768 _90775 : Type'} (u : _90775 -> Prop) (_36987 : _90775) (f : _90768 -> _90775) (t : _90768 -> Prop) (_36988 : _90768) : True = ((term1641 _90768 _90775 f t _36988 u _36987) = (term1688 _90768 _90775 u _36987 f t _36988)).
Proof. exact (SYM (@lem3503871 _90768 _90775 u _36987 f t _36988)). Qed.
Lemma lem3503873 {_90768 _90775 : Type'} (u : _90775 -> Prop) (_36987 : _90775) (f : _90768 -> _90775) (t : _90768 -> Prop) (_36988 : _90768) : (term1641 _90768 _90775 f t _36988 u _36987) = (term1688 _90768 _90775 u _36987 f t _36988).
Proof. exact (EQ_MP (@lem3503872 _90768 _90775 u _36987 f t _36988) (@lem0)). Qed.
Lemma lem3503874 {_90768 _90775 : Type'} (_36987 : _90775) (_36988 : _90768) (x'' : _90775 -> _90768) (s : _90768 -> Prop) (x''' : _90775 -> _90768) (x'''' : _90775 -> _90768) (x''''' : _90775 -> _90768) (f : _90768 -> _90775) (t : _90768 -> Prop) (u : _90775 -> Prop) (h1 : term1465 _90768 _90775 x'' s x''' x'''' x''''' f t u) : term1688 _90768 _90775 u _36987 f t _36988.
Proof. exact (EQ_MP (@lem3503873 _90768 _90775 u _36987 f t _36988) (@lem3503200 _90768 _90775 _36988 _36987 x'' s x''' x'''' x''''' f t u h1)). Qed.
Lemma lem3503876 (b : Prop) (a : Prop) : (a \/ b) = (term833 b a).
Proof. exact (EQ_MP (@lem20682 b a) (@lem20764 b a)). Qed.
Lemma lem3503877 {_90768 _90775 : Type'} (f : _90768 -> _90775) (t : _90768 -> Prop) (_36988 : _90768) (u : _90775 -> Prop) (_36987 : _90775) : (term1688 _90768 _90775 u _36987 f t _36988) = (term1689 _90768 _90775 f t _36988 u _36987).
Proof. exact (@lem3503876 (term364 _90768 _90775 _36987 f t _36988) (u _36987)). Qed.
Lemma lem3503879 (a : Prop) (b : Prop) : (term887 a b) = (term888 a b).
Proof. exact (EQ_MP (@lem20789 a b) (@lem20895 a b)). Qed.
Lemma lem3503880 {_90768 _90775 : Type'} (_36987 : _90775) (f : _90768 -> _90775) (t : _90768 -> Prop) (_36988 : _90768) : (term1690 _90768 _90775 _36987 f t _36988) = (term1691 _90768 _90775 _36987 f t _36988).
Proof. exact (@lem3503879 (term440 _90768 _90775 _36987 f _36988) (term618 _90768 t _36988)). Qed.
Lemma lem3503882 (a : Prop) : (term282 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem3503883 {_90768 _90775 : Type'} (_36987 : _90775) (f : _90768 -> _90775) (_36988 : _90768) : (term1692 _90768 _90775 _36987 f _36988) = (_36987 = (f _36988)).
Proof. exact (@lem3503882 (_36987 = (f _36988))). Qed.
Lemma lem3503884 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem3503885 {_90768 _90775 : Type'} (_36987 : _90775) (f : _90768 -> _90775) (_36988 : _90768) : (term1693 _90768 _90775 _36987 f _36988) = (term88 _90768 _90775 _36987 f _36988).
Proof. exact (MK_COMB (@lem3503884) (@lem3503883 _90768 _90775 _36987 f _36988)). Qed.
Lemma lem3503887 (a : Prop) : (term282 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem3503888 {_90768 : Type'} (t : _90768 -> Prop) (_36988 : _90768) : (term1694 _90768 t _36988) = (t _36988).
Proof. exact (@lem3503887 (t _36988)). Qed.
Lemma lem3503889 {_90768 _90775 : Type'} (_36987 : _90775) (f : _90768 -> _90775) (t : _90768 -> Prop) (_36988 : _90768) : (term1691 _90768 _90775 _36987 f t _36988) = (term264 _90768 _90775 _36987 f t _36988).
Proof. exact (MK_COMB (@lem3503885 _90768 _90775 _36987 f _36988) (@lem3503888 _90768 t _36988)). Qed.
Lemma lem3503890 {_90768 _90775 : Type'} (_36987 : _90775) (f : _90768 -> _90775) (t : _90768 -> Prop) (_36988 : _90768) : (term1690 _90768 _90775 _36987 f t _36988) = (term264 _90768 _90775 _36987 f t _36988).
Proof. exact (TRANS (@lem3503880 _90768 _90775 _36987 f t _36988) (@lem3503889 _90768 _90775 _36987 f t _36988)). Qed.
Lemma lem3503891 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem3503892 {_90768 _90775 : Type'} (_36987 : _90775) (f : _90768 -> _90775) (t : _90768 -> Prop) (_36988 : _90768) : (term1695 _90768 _90775 _36987 f t _36988) = (term1696 _90768 _90775 _36987 f t _36988).
Proof. exact (MK_COMB (@lem3503891) (@lem3503890 _90768 _90775 _36987 f t _36988)). Qed.
Lemma lem3503893 {_90775 : Type'} (u : _90775 -> Prop) (_36987 : _90775) : (u _36987) = (u _36987).
Proof. exact (eq_refl (u _36987)). Qed.
Lemma lem3503894 {_90768 _90775 : Type'} (f : _90768 -> _90775) (t : _90768 -> Prop) (_36988 : _90768) (u : _90775 -> Prop) (_36987 : _90775) : (term1689 _90768 _90775 f t _36988 u _36987) = (term1697 _90768 _90775 f t _36988 u _36987).
Proof. exact (MK_COMB (@lem3503892 _90768 _90775 _36987 f t _36988) (@lem3503893 _90775 u _36987)). Qed.
Lemma lem3503895 {_90768 _90775 : Type'} (f : _90768 -> _90775) (t : _90768 -> Prop) (_36988 : _90768) (u : _90775 -> Prop) (_36987 : _90775) : (term1688 _90768 _90775 u _36987 f t _36988) = (term1697 _90768 _90775 f t _36988 u _36987).
Proof. exact (TRANS (@lem3503877 _90768 _90775 f t _36988 u _36987) (@lem3503894 _90768 _90775 f t _36988 u _36987)). Qed.
Lemma lem3503897 {_90768 _90775 : Type'} (t : _90768 -> Prop) (x' : _90768) (f : _90768 -> _90775) (s : _90768 -> Prop) (u : _90775 -> Prop) (x : _90775) (h1 : term1497 _90768 _90775 t x' f s u x) : term1677 _90768 _90775 f t x'.
Proof. exact (conj (@lem3503767 _90768 _90775 f x') (@lem3503774 _90768 _90775 t x' f s u x h1)). Qed.
Lemma lem3503899 {_90768 _90775 : Type'} (_36988 : _90768) (_36987 : _90775) (x'' : _90775 -> _90768) (s : _90768 -> Prop) (x''' : _90775 -> _90768) (x'''' : _90775 -> _90768) (x''''' : _90775 -> _90768) (f : _90768 -> _90775) (t : _90768 -> Prop) (u : _90775 -> Prop) (h1 : term1465 _90768 _90775 x'' s x''' x'''' x''''' f t u) : term1697 _90768 _90775 f t _36988 u _36987.
Proof. exact (EQ_MP (@lem3503895 _90768 _90775 f t _36988 u _36987) (@lem3503874 _90768 _90775 _36987 _36988 x'' s x''' x'''' x''''' f t u h1)). Qed.
Lemma lem3503900 {_90768 _90775 : Type'} (_36988 : _90768) (_36987 : _90775) (x'' : _90775 -> _90768) (s : _90768 -> Prop) (x''' : _90775 -> _90768) (x'''' : _90775 -> _90768) (x''''' : _90775 -> _90768) (f : _90768 -> _90775) (t : _90768 -> Prop) (u : _90775 -> Prop) (h1 : term1465 _90768 _90775 x'' s x''' x'''' x''''' f t u) : term1697 _90768 _90775 f t _36988 u _36987.
Proof. exact (@lem3503899 _90768 _90775 _36988 _36987 x'' s x''' x'''' x''''' f t u h1). Qed.
Lemma lem3503901 {_90768 _90775 : Type'} (x' : _90768) (x'' : _90775 -> _90768) (s : _90768 -> Prop) (x''' : _90775 -> _90768) (x'''' : _90775 -> _90768) (x''''' : _90775 -> _90768) (f : _90768 -> _90775) (t : _90768 -> Prop) (u : _90775 -> Prop) (h1 : term1465 _90768 _90775 x'' s x''' x'''' x''''' f t u) : term1698 _90768 _90775 t u f x'.
Proof. exact (@lem3503900 _90768 _90775 x' (f x') x'' s x''' x'''' x''''' f t u h1). Qed.
Lemma lem3503904 {_90768 _90775 : Type'} (x'' : _90775 -> _90768) (x''' : _90775 -> _90768) (x'''' : _90775 -> _90768) (x''''' : _90775 -> _90768) (t : _90768 -> Prop) (x' : _90768) (f : _90768 -> _90775) (s : _90768 -> Prop) (u : _90775 -> Prop) (x : _90775) (h1 : term1465 _90768 _90775 x'' s x''' x'''' x''''' f t u) (h2 : term1497 _90768 _90775 t x' f s u x) : term1668 _90768 _90775 u f x'.
Proof. exact (@lem3503901 _90768 _90775 x' x'' s x''' x'''' x''''' f t u h1 (@lem3503897 _90768 _90775 t x' f s u x h2)). Qed.
Lemma lem3503905 {_90768 _90775 : Type'} (x'' : _90775 -> _90768) (x''' : _90775 -> _90768) (x'''' : _90775 -> _90768) (x''''' : _90775 -> _90768) (t : _90768 -> Prop) (x' : _90768) (f : _90768 -> _90775) (s : _90768 -> Prop) (u : _90775 -> Prop) (x : _90775) (h1 : term1465 _90768 _90775 x'' s x''' x'''' x''''' f t u) (h2 : term1497 _90768 _90775 t x' f s u x) : term1699 _90768 _90775 u f x'.
Proof. exact (fun h0 : term1656 _90768 _90775 u f x' => @lem3503904 _90768 _90775 x'' x''' x'''' x''''' t x' f s u x h1 h2). Qed.
Lemma lem3503907 (p : Prop) : (term828 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem3503908 {_90768 _90775 : Type'} (u : _90775 -> Prop) (f : _90768 -> _90775) (x' : _90768) : (term1699 _90768 _90775 u f x') = (term1668 _90768 _90775 u f x').
Proof. exact (@lem3503907 (term1668 _90768 _90775 u f x')). Qed.
Lemma lem3503909 {_90768 _90775 : Type'} (x'' : _90775 -> _90768) (x''' : _90775 -> _90768) (x'''' : _90775 -> _90768) (x''''' : _90775 -> _90768) (t : _90768 -> Prop) (x' : _90768) (f : _90768 -> _90775) (s : _90768 -> Prop) (u : _90775 -> Prop) (x : _90775) (h1 : term1465 _90768 _90775 x'' s x''' x'''' x''''' f t u) (h2 : term1497 _90768 _90775 t x' f s u x) : term1668 _90768 _90775 u f x'.
Proof. exact (EQ_MP (@lem3503908 _90768 _90775 u f x') (@lem3503905 _90768 _90775 x'' x''' x'''' x''''' t x' f s u x h1 h2)). Qed.
Lemma lem3503912 (p : Prop) : (~ p) = (p -> False).
Proof. exact (EQ_MP (@lem21021 p) (@lem0)). Qed.
Lemma lem3503914 {_90768 _90775 : Type'} (u : _90775 -> Prop) (f : _90768 -> _90775) (x' : _90768) : (term1656 _90768 _90775 u f x') = (term1700 _90768 _90775 u f x').
Proof. exact (@lem3503912 (term1668 _90768 _90775 u f x')). Qed.
Lemma lem3503917 {_90768 _90775 : Type'} (t : _90768 -> Prop) (x' : _90768) (f : _90768 -> _90775) (s : _90768 -> Prop) (u : _90775 -> Prop) (x : _90775) (h1 : term618 _90775 u x) (h2 : term1497 _90768 _90775 t x' f s u x) : term1700 _90768 _90775 u f x'.
Proof. exact (EQ_MP (@lem3503914 _90768 _90775 u f x') (@lem3503241 _90768 _90775 t x' f s u x h1 h2)). Qed.
Lemma lem3503920 {_90768 _90775 : Type'} (x'' : _90775 -> _90768) (x''' : _90775 -> _90768) (x'''' : _90775 -> _90768) (x''''' : _90775 -> _90768) (t : _90768 -> Prop) (x' : _90768) (f : _90768 -> _90775) (s : _90768 -> Prop) (u : _90775 -> Prop) (x : _90775) (h1 : term618 _90775 u x) (h2 : term1465 _90768 _90775 x'' s x''' x'''' x''''' f t u) (h3 : term1497 _90768 _90775 t x' f s u x) : False.
Proof. exact (@lem3503917 _90768 _90775 t x' f s u x h1 h3 (@lem3503909 _90768 _90775 x'' x''' x'''' x''''' t x' f s u x h2 h3)). Qed.
Lemma lem3503921 {_90768 _90775 : Type'} (x'' : _90775 -> _90768) (x''' : _90775 -> _90768) (x'''' : _90775 -> _90768) (x''''' : _90775 -> _90768) (t : _90768 -> Prop) (x' : _90768) (f : _90768 -> _90775) (s : _90768 -> Prop) (u : _90775 -> Prop) (x : _90775) (h1 : term618 _90775 u x) (h2 : term1465 _90768 _90775 x'' s x''' x'''' x''''' f t u) (h3 : term1497 _90768 _90775 t x' f s u x) : term847.
Proof. exact (fun h0 : ~ False => @lem3503920 _90768 _90775 x'' x''' x'''' x''''' t x' f s u x h1 h2 h3). Qed.
Lemma lem3503923 (p : Prop) : (term828 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem3503924 : term847 = False.
Proof. exact (@lem3503923 False). Qed.
Lemma lem3503938 {_90768 : Type'} (t : _90768 -> Prop) : t = t.
Proof. exact (eq_refl t). Qed.
Lemma lem3503939 {_90768 : Type'} (_37121 : _90768) (_37122 : _90768) (h1 : _37121 = _37122) : _37121 = _37122.
Proof. exact (h1). Qed.
Lemma lem3503940 {_90768 : Type'} (t : _90768 -> Prop) (_37121 : _90768) (_37122 : _90768) (h1 : _37121 = _37122) : (t _37121) = (t _37122).
Proof. exact (MK_COMB (@lem3503938 _90768 t) (@lem3503939 _90768 _37121 _37122 h1)). Qed.
Lemma lem3503942 (b : Prop) (a : Prop) : term1701 b a.
Proof. exact (EQ_MP (@lem21501 b a) (@lem21598 b a)). Qed.
Lemma lem3503943 {_90768 : Type'} (_37122 : _90768) (t : _90768 -> Prop) (_37121 : _90768) : term1702 _90768 _37122 t _37121.
Proof. exact (@lem3503942 (t _37122) (t _37121)). Qed.
Lemma lem3503944 {_90768 : Type'} (t : _90768 -> Prop) (_37121 : _90768) (_37122 : _90768) (h1 : _37121 = _37122) : term1703 _90768 _37122 t _37121.
Proof. exact (@lem3503943 _90768 _37122 t _37121 (@lem3503940 _90768 t _37121 _37122 h1)). Qed.
Lemma lem3503945 {_90768 : Type'} (_37122 : _90768) (t : _90768 -> Prop) (_37121 : _90768) : term1704 _90768 _37122 t _37121.
Proof. exact (fun h0 : _37121 = _37122 => @lem3503944 _90768 t _37121 _37122 h0). Qed.
Lemma lem3503947 (a : Prop) (b : Prop) : (a -> b) = (term1705 a b).
Proof. exact (EQ_MP (@lem21394 a b) (@lem21490 a b)). Qed.
Lemma lem3503948 {_90768 : Type'} (_37122 : _90768) (t : _90768 -> Prop) (_37121 : _90768) : (term1704 _90768 _37122 t _37121) = (term1706 _90768 _37122 t _37121).
Proof. exact (@lem3503947 (_37121 = _37122) (term1703 _90768 _37122 t _37121)). Qed.
Lemma lem3503949 {_90768 : Type'} (_37122 : _90768) (t : _90768 -> Prop) (_37121 : _90768) : term1706 _90768 _37122 t _37121.
Proof. exact (EQ_MP (@lem3503948 _90768 _37122 t _37121) (@lem3503945 _90768 _37122 t _37121)). Qed.
Lemma lem3503970 {_90768 _90775 : Type'} (x'' : _90775 -> _90768) : x'' = x''.
Proof. exact (eq_refl x''). Qed.
Lemma lem3503971 {_90775 : Type'} (_37127 : _90775) (_37128 : _90775) (h1 : _37127 = _37128) : _37127 = _37128.
Proof. exact (h1). Qed.
Lemma lem3503972 {_90768 _90775 : Type'} (x'' : _90775 -> _90768) (_37127 : _90775) (_37128 : _90775) (h1 : _37127 = _37128) : (x'' _37127) = (x'' _37128).
Proof. exact (MK_COMB (@lem3503970 _90768 _90775 x'') (@lem3503971 _90775 _37127 _37128 h1)). Qed.
Lemma lem3503973 {_90768 _90775 : Type'} (_37127 : _90775) (x'' : _90775 -> _90768) (_37128 : _90775) : term1707 _90768 _90775 _37127 x'' _37128.
Proof. exact (fun h0 : _37127 = _37128 => @lem3503972 _90768 _90775 x'' _37127 _37128 h0). Qed.
Lemma lem3503975 (a : Prop) (b : Prop) : (a -> b) = (term1705 a b).
Proof. exact (EQ_MP (@lem21394 a b) (@lem21490 a b)). Qed.
Lemma lem3503976 {_90768 _90775 : Type'} (_37127 : _90775) (x'' : _90775 -> _90768) (_37128 : _90775) : (term1707 _90768 _90775 _37127 x'' _37128) = (term1708 _90768 _90775 _37127 x'' _37128).
Proof. exact (@lem3503975 (_37127 = _37128) ((x'' _37127) = (x'' _37128))). Qed.
Lemma lem3503977 {_90768 _90775 : Type'} (_37127 : _90775) (x'' : _90775 -> _90768) (_37128 : _90775) : term1708 _90768 _90775 _37127 x'' _37128.
Proof. exact (EQ_MP (@lem3503976 _90768 _90775 _37127 x'' _37128) (@lem3503973 _90768 _90775 _37127 x'' _37128)). Qed.
Lemma lem3504003 {_90775 : Type'} (x : _90775) (y : _90775) (z : _90775) : term848 _90775 x y z.
Proof. exact (@lem21385 _90775 x y z). Qed.
Lemma lem3504007 {_90775 : Type'} (x : _90775) : x = x.
Proof. exact (@lem21386 _90775 x). Qed.
Lemma lem3504008 {_90775 : Type'} (x : _90775) : x = x.
Proof. exact (@lem3504007 _90775 x). Qed.
Lemma lem3504009 {_90768 _90775 : Type'} (f : _90768 -> _90775) (x' : _90768) : (f x') = (f x').
Proof. exact (@lem3504008 _90775 (f x')). Qed.
Lemma lem3504010 {_90768 _90775 : Type'} (f : _90768 -> _90775) (x' : _90768) : term1673 _90768 _90775 f x'.
Proof. exact (fun h0 : term1674 _90768 _90775 f x' => @lem3504009 _90768 _90775 f x'). Qed.
Lemma lem3504012 (p : Prop) : (term828 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem3504013 {_90768 _90775 : Type'} (f : _90768 -> _90775) (x' : _90768) : (term1673 _90768 _90775 f x') = ((f x') = (f x')).
Proof. exact (@lem3504012 ((f x') = (f x'))). Qed.
Lemma lem3504014 {_90768 _90775 : Type'} (f : _90768 -> _90775) (x' : _90768) : (f x') = (f x').
Proof. exact (EQ_MP (@lem3504013 _90768 _90775 f x') (@lem3504010 _90768 _90775 f x')). Qed.
Lemma lem3504016 {_90768 _90775 : Type'} (t : _90768 -> Prop) (f : _90768 -> _90775) (s : _90768 -> Prop) (x' : _90768) (u : _90775 -> Prop) (x : _90775) (h1 : term1520 _90768 _90775 t f s x' u x) : s x'.
Proof. exact (proj2 (@lem3501358 _90768 _90775 t f s x' u x h1)). Qed.
Lemma lem3504017 {_90768 _90775 : Type'} (t : _90768 -> Prop) (f : _90768 -> _90775) (s : _90768 -> Prop) (x' : _90768) (u : _90775 -> Prop) (x : _90775) (h1 : term1520 _90768 _90775 t f s x' u x) : term1675 _90768 s x'.
Proof. exact (fun h0 : term618 _90768 s x' => @lem3504016 _90768 _90775 t f s x' u x h1). Qed.
Lemma lem3504019 (p : Prop) : (term828 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem3504020 {_90768 : Type'} (s : _90768 -> Prop) (x' : _90768) : (term1675 _90768 s x') = (s x').
Proof. exact (@lem3504019 (s x')). Qed.
Lemma lem3504021 {_90768 _90775 : Type'} (t : _90768 -> Prop) (f : _90768 -> _90775) (s : _90768 -> Prop) (x' : _90768) (u : _90775 -> Prop) (x : _90775) (h1 : term1520 _90768 _90775 t f s x' u x) : s x'.
Proof. exact (EQ_MP (@lem3504020 _90768 s x') (@lem3504017 _90768 _90775 t f s x' u x h1)). Qed.
Lemma lem3504023 {_90768 _90775 : Type'} (t : _90768 -> Prop) (f : _90768 -> _90775) (s : _90768 -> Prop) (x' : _90768) (u : _90775 -> Prop) (x : _90775) (h1 : term1520 _90768 _90775 t f s x' u x) : term1668 _90768 _90775 u f x'.
Proof. exact (EQ_MP (@lem3503420 _90768 _90775 t f s x' u x h1) (@lem3502829 _90768 _90775 t f s x' u x h1)). Qed.
Lemma lem3504024 {_90768 _90775 : Type'} (t : _90768 -> Prop) (f : _90768 -> _90775) (s : _90768 -> Prop) (x' : _90768) (u : _90775 -> Prop) (x : _90775) (h1 : term1520 _90768 _90775 t f s x' u x) : term1699 _90768 _90775 u f x'.
Proof. exact (fun h0 : term1656 _90768 _90775 u f x' => @lem3504023 _90768 _90775 t f s x' u x h1). Qed.
Lemma lem3504026 (p : Prop) : (term828 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem3504027 {_90768 _90775 : Type'} (u : _90775 -> Prop) (f : _90768 -> _90775) (x' : _90768) : (term1699 _90768 _90775 u f x') = (term1668 _90768 _90775 u f x').
Proof. exact (@lem3504026 (term1668 _90768 _90775 u f x')). Qed.
Lemma lem3504028 {_90768 _90775 : Type'} (t : _90768 -> Prop) (f : _90768 -> _90775) (s : _90768 -> Prop) (x' : _90768) (u : _90775 -> Prop) (x : _90775) (h1 : term1520 _90768 _90775 t f s x' u x) : term1668 _90768 _90775 u f x'.
Proof. exact (EQ_MP (@lem3504027 _90768 _90775 u f x') (@lem3504024 _90768 _90775 t f s x' u x h1)). Qed.
Lemma lem3504030 (b : Prop) (a : Prop) : (a \/ b) = (term833 b a).
Proof. exact (EQ_MP (@lem20682 b a) (@lem20764 b a)). Qed.
Lemma lem3504031 {_90768 _90775 : Type'} (u : _90775 -> Prop) (f : _90768 -> _90775) (x''''' : _90775 -> _90768) (_36994 : _90775) : (term1671 _90768 _90775 f x''''' u _36994) = (term1709 _90768 _90775 u f x''''' _36994).
Proof. exact (@lem3504030 (term618 _90775 u _36994) (_36994 = (term1565 _90768 _90775 f x''''' _36994))). Qed.
Lemma lem3504033 (a : Prop) : (term282 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem3504034 {_90775 : Type'} (u : _90775 -> Prop) (_36994 : _90775) : (term1694 _90775 u _36994) = (u _36994).
Proof. exact (@lem3504033 (u _36994)). Qed.
Lemma lem3504035 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem3504036 {_90775 : Type'} (u : _90775 -> Prop) (_36994 : _90775) : (term1710 _90775 u _36994) = (term214 _90775 u _36994).
Proof. exact (MK_COMB (@lem3504035) (@lem3504034 _90775 u _36994)). Qed.
Lemma lem3504037 {_90768 _90775 : Type'} (f : _90768 -> _90775) (x''''' : _90775 -> _90768) (_36994 : _90775) : (_36994 = (term1565 _90768 _90775 f x''''' _36994)) = (_36994 = (term1565 _90768 _90775 f x''''' _36994)).
Proof. exact (eq_refl (_36994 = (term1565 _90768 _90775 f x''''' _36994))). Qed.
Lemma lem3504038 {_90768 _90775 : Type'} (u : _90775 -> Prop) (f : _90768 -> _90775) (x''''' : _90775 -> _90768) (_36994 : _90775) : (term1709 _90768 _90775 u f x''''' _36994) = (term1711 _90768 _90775 u f x''''' _36994).
Proof. exact (MK_COMB (@lem3504036 _90775 u _36994) (@lem3504037 _90768 _90775 f x''''' _36994)). Qed.
Lemma lem3504039 {_90768 _90775 : Type'} (u : _90775 -> Prop) (f : _90768 -> _90775) (x''''' : _90775 -> _90768) (_36994 : _90775) : (term1671 _90768 _90775 f x''''' u _36994) = (term1711 _90768 _90775 u f x''''' _36994).
Proof. exact (TRANS (@lem3504031 _90768 _90775 u f x''''' _36994) (@lem3504038 _90768 _90775 u f x''''' _36994)). Qed.
Lemma lem3504042 {_90768 _90775 : Type'} (_36994 : _90775) (x'' : _90775 -> _90768) (s : _90768 -> Prop) (x''' : _90775 -> _90768) (x'''' : _90775 -> _90768) (x''''' : _90775 -> _90768) (f : _90768 -> _90775) (t : _90768 -> Prop) (u : _90775 -> Prop) (h1 : term1465 _90768 _90775 x'' s x''' x'''' x''''' f t u) : term1711 _90768 _90775 u f x''''' _36994.
Proof. exact (EQ_MP (@lem3504039 _90768 _90775 u f x''''' _36994) (@lem3503547 _90768 _90775 _36994 x'' s x''' x'''' x''''' f t u h1)). Qed.
Lemma lem3504043 {_90768 _90775 : Type'} (_36994 : _90775) (x'' : _90775 -> _90768) (s : _90768 -> Prop) (x''' : _90775 -> _90768) (x'''' : _90775 -> _90768) (x''''' : _90775 -> _90768) (f : _90768 -> _90775) (t : _90768 -> Prop) (u : _90775 -> Prop) (h1 : term1465 _90768 _90775 x'' s x''' x'''' x''''' f t u) : term1711 _90768 _90775 u f x''''' _36994.
Proof. exact (@lem3504042 _90768 _90775 _36994 x'' s x''' x'''' x''''' f t u h1). Qed.
Lemma lem3504044 {_90768 _90775 : Type'} (x' : _90768) (x'' : _90775 -> _90768) (s : _90768 -> Prop) (x''' : _90775 -> _90768) (x'''' : _90775 -> _90768) (x''''' : _90775 -> _90768) (f : _90768 -> _90775) (t : _90768 -> Prop) (u : _90775 -> Prop) (h1 : term1465 _90768 _90775 x'' s x''' x'''' x''''' f t u) : term1712 _90768 _90775 u x''''' f x'.
Proof. exact (@lem3504043 _90768 _90775 (f x') x'' s x''' x'''' x''''' f t u h1). Qed.
Lemma lem3504047 {_90768 _90775 : Type'} (x' : _90768) (x : _90775) (x'' : _90775 -> _90768) (s : _90768 -> Prop) (x''' : _90775 -> _90768) (x'''' : _90775 -> _90768) (x''''' : _90775 -> _90768) (f : _90768 -> _90775) (t : _90768 -> Prop) (u : _90775 -> Prop) (h1 : term1520 _90768 _90775 t f s x' u x) (h2 : term1465 _90768 _90775 x'' s x''' x'''' x''''' f t u) : (f x') = (term1713 _90768 _90775 x''''' f x').
Proof. exact (@lem3504044 _90768 _90775 x' x'' s x''' x'''' x''''' f t u h2 (@lem3504028 _90768 _90775 t f s x' u x h1)). Qed.
Lemma lem3504048 {_90768 _90775 : Type'} (x' : _90768) (x : _90775) (x'' : _90775 -> _90768) (s : _90768 -> Prop) (x''' : _90775 -> _90768) (x'''' : _90775 -> _90768) (x''''' : _90775 -> _90768) (f : _90768 -> _90775) (t : _90768 -> Prop) (u : _90775 -> Prop) (h1 : term1520 _90768 _90775 t f s x' u x) (h2 : term1465 _90768 _90775 x'' s x''' x'''' x''''' f t u) : term1714 _90768 _90775 x''''' f x'.
Proof. exact (fun h0 : term1715 _90768 _90775 x''''' f x' => @lem3504047 _90768 _90775 x' x x'' s x''' x'''' x''''' f t u h1 h2). Qed.
Lemma lem3504050 (p : Prop) : (term828 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem3504051 {_90768 _90775 : Type'} (x''''' : _90775 -> _90768) (f : _90768 -> _90775) (x' : _90768) : (term1714 _90768 _90775 x''''' f x') = ((f x') = (term1713 _90768 _90775 x''''' f x')).
Proof. exact (@lem3504050 ((f x') = (term1713 _90768 _90775 x''''' f x'))). Qed.
Lemma lem3504052 {_90768 _90775 : Type'} (x' : _90768) (x : _90775) (x'' : _90775 -> _90768) (s : _90768 -> Prop) (x''' : _90775 -> _90768) (x'''' : _90775 -> _90768) (x''''' : _90775 -> _90768) (f : _90768 -> _90775) (t : _90768 -> Prop) (u : _90775 -> Prop) (h1 : term1520 _90768 _90775 t f s x' u x) (h2 : term1465 _90768 _90775 x'' s x''' x'''' x''''' f t u) : (f x') = (term1713 _90768 _90775 x''''' f x').
Proof. exact (EQ_MP (@lem3504051 _90768 _90775 x''''' f x') (@lem3504048 _90768 _90775 x' x x'' s x''' x'''' x''''' f t u h1 h2)). Qed.
Lemma lem3504054 {_90768 _90775 : Type'} (t : _90768 -> Prop) (f : _90768 -> _90775) (s : _90768 -> Prop) (x' : _90768) (u : _90775 -> Prop) (x : _90775) (h1 : term1520 _90768 _90775 t f s x' u x) : term1668 _90768 _90775 u f x'.
Proof. exact (EQ_MP (@lem3503420 _90768 _90775 t f s x' u x h1) (@lem3502829 _90768 _90775 t f s x' u x h1)). Qed.
Lemma lem3504055 {_90768 _90775 : Type'} (t : _90768 -> Prop) (f : _90768 -> _90775) (s : _90768 -> Prop) (x' : _90768) (u : _90775 -> Prop) (x : _90775) (h1 : term1520 _90768 _90775 t f s x' u x) : term1699 _90768 _90775 u f x'.
Proof. exact (fun h0 : term1656 _90768 _90775 u f x' => @lem3504054 _90768 _90775 t f s x' u x h1). Qed.
Lemma lem3504057 (p : Prop) : (term828 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem3504058 {_90768 _90775 : Type'} (u : _90775 -> Prop) (f : _90768 -> _90775) (x' : _90768) : (term1699 _90768 _90775 u f x') = (term1668 _90768 _90775 u f x').
Proof. exact (@lem3504057 (term1668 _90768 _90775 u f x')). Qed.
Lemma lem3504059 {_90768 _90775 : Type'} (t : _90768 -> Prop) (f : _90768 -> _90775) (s : _90768 -> Prop) (x' : _90768) (u : _90775 -> Prop) (x : _90775) (h1 : term1520 _90768 _90775 t f s x' u x) : term1668 _90768 _90775 u f x'.
Proof. exact (EQ_MP (@lem3504058 _90768 _90775 u f x') (@lem3504055 _90768 _90775 t f s x' u x h1)). Qed.
Lemma lem3504061 (b : Prop) (a : Prop) : (a \/ b) = (term833 b a).
Proof. exact (EQ_MP (@lem20682 b a) (@lem20764 b a)). Qed.
Lemma lem3504062 {_90768 _90775 : Type'} (u : _90775 -> Prop) (t : _90768 -> Prop) (x''''' : _90775 -> _90768) (_36994 : _90775) : (term1672 _90768 _90775 t x''''' u _36994) = (term1716 _90768 _90775 u t x''''' _36994).
Proof. exact (@lem3504061 (term618 _90775 u _36994) (term1566 _90768 _90775 t x''''' _36994)). Qed.
Lemma lem3504064 (a : Prop) : (term282 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem3504065 {_90775 : Type'} (u : _90775 -> Prop) (_36994 : _90775) : (term1694 _90775 u _36994) = (u _36994).
Proof. exact (@lem3504064 (u _36994)). Qed.
Lemma lem3504066 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem3504067 {_90775 : Type'} (u : _90775 -> Prop) (_36994 : _90775) : (term1710 _90775 u _36994) = (term214 _90775 u _36994).
Proof. exact (MK_COMB (@lem3504066) (@lem3504065 _90775 u _36994)). Qed.
Lemma lem3504068 {_90768 _90775 : Type'} (t : _90768 -> Prop) (x''''' : _90775 -> _90768) (_36994 : _90775) : (term1566 _90768 _90775 t x''''' _36994) = (term1566 _90768 _90775 t x''''' _36994).
Proof. exact (eq_refl (term1566 _90768 _90775 t x''''' _36994)). Qed.
Lemma lem3504069 {_90768 _90775 : Type'} (u : _90775 -> Prop) (t : _90768 -> Prop) (x''''' : _90775 -> _90768) (_36994 : _90775) : (term1716 _90768 _90775 u t x''''' _36994) = (term1717 _90768 _90775 u t x''''' _36994).
Proof. exact (MK_COMB (@lem3504067 _90775 u _36994) (@lem3504068 _90768 _90775 t x''''' _36994)). Qed.
Lemma lem3504070 {_90768 _90775 : Type'} (u : _90775 -> Prop) (t : _90768 -> Prop) (x''''' : _90775 -> _90768) (_36994 : _90775) : (term1672 _90768 _90775 t x''''' u _36994) = (term1717 _90768 _90775 u t x''''' _36994).
Proof. exact (TRANS (@lem3504062 _90768 _90775 u t x''''' _36994) (@lem3504069 _90768 _90775 u t x''''' _36994)). Qed.
Lemma lem3504073 {_90768 _90775 : Type'} (_36994 : _90775) (x'' : _90775 -> _90768) (s : _90768 -> Prop) (x''' : _90775 -> _90768) (x'''' : _90775 -> _90768) (x''''' : _90775 -> _90768) (f : _90768 -> _90775) (t : _90768 -> Prop) (u : _90775 -> Prop) (h1 : term1465 _90768 _90775 x'' s x''' x'''' x''''' f t u) : term1717 _90768 _90775 u t x''''' _36994.
Proof. exact (EQ_MP (@lem3504070 _90768 _90775 u t x''''' _36994) (@lem3503561 _90768 _90775 _36994 x'' s x''' x'''' x''''' f t u h1)). Qed.
Lemma lem3504074 {_90768 _90775 : Type'} (_36994 : _90775) (x'' : _90775 -> _90768) (s : _90768 -> Prop) (x''' : _90775 -> _90768) (x'''' : _90775 -> _90768) (x''''' : _90775 -> _90768) (f : _90768 -> _90775) (t : _90768 -> Prop) (u : _90775 -> Prop) (h1 : term1465 _90768 _90775 x'' s x''' x'''' x''''' f t u) : term1717 _90768 _90775 u t x''''' _36994.
Proof. exact (@lem3504073 _90768 _90775 _36994 x'' s x''' x'''' x''''' f t u h1). Qed.
Lemma lem3504075 {_90768 _90775 : Type'} (x' : _90768) (x'' : _90775 -> _90768) (s : _90768 -> Prop) (x''' : _90775 -> _90768) (x'''' : _90775 -> _90768) (x''''' : _90775 -> _90768) (f : _90768 -> _90775) (t : _90768 -> Prop) (u : _90775 -> Prop) (h1 : term1465 _90768 _90775 x'' s x''' x'''' x''''' f t u) : term1718 _90768 _90775 u t x''''' f x'.
Proof. exact (@lem3504074 _90768 _90775 (f x') x'' s x''' x'''' x''''' f t u h1). Qed.
Lemma lem3504078 {_90768 _90775 : Type'} (x' : _90768) (x : _90775) (x'' : _90775 -> _90768) (s : _90768 -> Prop) (x''' : _90775 -> _90768) (x'''' : _90775 -> _90768) (x''''' : _90775 -> _90768) (f : _90768 -> _90775) (t : _90768 -> Prop) (u : _90775 -> Prop) (h1 : term1520 _90768 _90775 t f s x' u x) (h2 : term1465 _90768 _90775 x'' s x''' x'''' x''''' f t u) : term1719 _90768 _90775 t x''''' f x'.
Proof. exact (@lem3504075 _90768 _90775 x' x'' s x''' x'''' x''''' f t u h2 (@lem3504059 _90768 _90775 t f s x' u x h1)). Qed.
Lemma lem3504079 {_90768 _90775 : Type'} (x' : _90768) (x : _90775) (x'' : _90775 -> _90768) (s : _90768 -> Prop) (x''' : _90775 -> _90768) (x'''' : _90775 -> _90768) (x''''' : _90775 -> _90768) (f : _90768 -> _90775) (t : _90768 -> Prop) (u : _90775 -> Prop) (h1 : term1520 _90768 _90775 t f s x' u x) (h2 : term1465 _90768 _90775 x'' s x''' x'''' x''''' f t u) : term1720 _90768 _90775 t x''''' f x'.
Proof. exact (fun h0 : term1721 _90768 _90775 t x''''' f x' => @lem3504078 _90768 _90775 x' x x'' s x''' x'''' x''''' f t u h1 h2). Qed.
Lemma lem3504081 (p : Prop) : (term828 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem3504082 {_90768 _90775 : Type'} (t : _90768 -> Prop) (x''''' : _90775 -> _90768) (f : _90768 -> _90775) (x' : _90768) : (term1720 _90768 _90775 t x''''' f x') = (term1719 _90768 _90775 t x''''' f x').
Proof. exact (@lem3504081 (term1719 _90768 _90775 t x''''' f x')). Qed.
Lemma lem3504083 {_90768 _90775 : Type'} (x' : _90768) (x : _90775) (x'' : _90775 -> _90768) (s : _90768 -> Prop) (x''' : _90775 -> _90768) (x'''' : _90775 -> _90768) (x''''' : _90775 -> _90768) (f : _90768 -> _90775) (t : _90768 -> Prop) (u : _90775 -> Prop) (h1 : term1520 _90768 _90775 t f s x' u x) (h2 : term1465 _90768 _90775 x'' s x''' x'''' x''''' f t u) : term1719 _90768 _90775 t x''''' f x'.
Proof. exact (EQ_MP (@lem3504082 _90768 _90775 t x''''' f x') (@lem3504079 _90768 _90775 x' x x'' s x''' x'''' x''''' f t u h1 h2)). Qed.
Lemma lem3504085 (b : Prop) (a : Prop) : (a \/ b) = (term833 b a).
Proof. exact (EQ_MP (@lem20682 b a) (@lem20764 b a)). Qed.
Lemma lem3504086 {_90768 _90775 : Type'} (s : _90768 -> Prop) (_36998 : _90768) (t : _90768 -> Prop) (_36999 : _90768) (f : _90768 -> _90775) (x'' : _90775 -> _90768) (_36997 : _90775) : (term1644 _90768 _90775 x'' s _36998 _36997 f t _36999) = (term1722 _90768 _90775 s _36998 t _36999 f x'' _36997).
Proof. exact (@lem3504085 (term1642 _90768 _90775 s _36998 _36997 f t _36999) (_36997 = (term1565 _90768 _90775 f x'' _36997))). Qed.
Lemma lem3504088 (a : Prop) (b : Prop) : (term887 a b) = (term888 a b).
Proof. exact (EQ_MP (@lem20789 a b) (@lem20895 a b)). Qed.
Lemma lem3504089 {_90768 _90775 : Type'} (s : _90768 -> Prop) (_36998 : _90768) (_36997 : _90775) (f : _90768 -> _90775) (t : _90768 -> Prop) (_36999 : _90768) : (term1723 _90768 _90775 s _36998 _36997 f t _36999) = (term1724 _90768 _90775 s _36998 _36997 f t _36999).
Proof. exact (@lem3504088 (term440 _90768 _90775 _36997 f _36998) (term1725 _90768 _90775 s _36998 _36997 f t _36999)). Qed.
Lemma lem3504091 (a : Prop) : (term282 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem3504092 {_90768 _90775 : Type'} (_36997 : _90775) (f : _90768 -> _90775) (_36998 : _90768) : (term1692 _90768 _90775 _36997 f _36998) = (_36997 = (f _36998)).
Proof. exact (@lem3504091 (_36997 = (f _36998))). Qed.
Lemma lem3504093 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem3504094 {_90768 _90775 : Type'} (_36997 : _90775) (f : _90768 -> _90775) (_36998 : _90768) : (term1693 _90768 _90775 _36997 f _36998) = (term88 _90768 _90775 _36997 f _36998).
Proof. exact (MK_COMB (@lem3504093) (@lem3504092 _90768 _90775 _36997 f _36998)). Qed.
Lemma lem3504096 (a : Prop) (b : Prop) : (term887 a b) = (term888 a b).
Proof. exact (EQ_MP (@lem20789 a b) (@lem20895 a b)). Qed.
Lemma lem3504097 {_90768 _90775 : Type'} (s : _90768 -> Prop) (_36998 : _90768) (_36997 : _90775) (f : _90768 -> _90775) (t : _90768 -> Prop) (_36999 : _90768) : (term1726 _90768 _90775 s _36998 _36997 f t _36999) = (term1727 _90768 _90775 s _36998 _36997 f t _36999).
Proof. exact (@lem3504096 (term618 _90768 s _36998) (term364 _90768 _90775 _36997 f t _36999)). Qed.
Lemma lem3504099 (a : Prop) : (term282 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem3504100 {_90768 : Type'} (s : _90768 -> Prop) (_36998 : _90768) : (term1694 _90768 s _36998) = (s _36998).
Proof. exact (@lem3504099 (s _36998)). Qed.
Lemma lem3504101 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem3504102 {_90768 : Type'} (s : _90768 -> Prop) (_36998 : _90768) : (term1728 _90768 s _36998) = (term234 _90768 s _36998).
Proof. exact (MK_COMB (@lem3504101) (@lem3504100 _90768 s _36998)). Qed.
Lemma lem3504104 (a : Prop) (b : Prop) : (term887 a b) = (term888 a b).
Proof. exact (EQ_MP (@lem20789 a b) (@lem20895 a b)). Qed.
Lemma lem3504105 {_90768 _90775 : Type'} (_36997 : _90775) (f : _90768 -> _90775) (t : _90768 -> Prop) (_36999 : _90768) : (term1690 _90768 _90775 _36997 f t _36999) = (term1691 _90768 _90775 _36997 f t _36999).
Proof. exact (@lem3504104 (term440 _90768 _90775 _36997 f _36999) (term618 _90768 t _36999)). Qed.
Lemma lem3504107 (a : Prop) : (term282 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem3504108 {_90768 _90775 : Type'} (_36997 : _90775) (f : _90768 -> _90775) (_36999 : _90768) : (term1692 _90768 _90775 _36997 f _36999) = (_36997 = (f _36999)).
Proof. exact (@lem3504107 (_36997 = (f _36999))). Qed.
Lemma lem3504109 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem3504110 {_90768 _90775 : Type'} (_36997 : _90775) (f : _90768 -> _90775) (_36999 : _90768) : (term1693 _90768 _90775 _36997 f _36999) = (term88 _90768 _90775 _36997 f _36999).
Proof. exact (MK_COMB (@lem3504109) (@lem3504108 _90768 _90775 _36997 f _36999)). Qed.
Lemma lem3504112 (a : Prop) : (term282 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem3504113 {_90768 : Type'} (t : _90768 -> Prop) (_36999 : _90768) : (term1694 _90768 t _36999) = (t _36999).
Proof. exact (@lem3504112 (t _36999)). Qed.
Lemma lem3504114 {_90768 _90775 : Type'} (_36997 : _90775) (f : _90768 -> _90775) (t : _90768 -> Prop) (_36999 : _90768) : (term1691 _90768 _90775 _36997 f t _36999) = (term264 _90768 _90775 _36997 f t _36999).
Proof. exact (MK_COMB (@lem3504110 _90768 _90775 _36997 f _36999) (@lem3504113 _90768 t _36999)). Qed.
Lemma lem3504115 {_90768 _90775 : Type'} (_36997 : _90775) (f : _90768 -> _90775) (t : _90768 -> Prop) (_36999 : _90768) : (term1690 _90768 _90775 _36997 f t _36999) = (term264 _90768 _90775 _36997 f t _36999).
Proof. exact (TRANS (@lem3504105 _90768 _90775 _36997 f t _36999) (@lem3504114 _90768 _90775 _36997 f t _36999)). Qed.
Lemma lem3504116 {_90768 _90775 : Type'} (s : _90768 -> Prop) (_36998 : _90768) (_36997 : _90775) (f : _90768 -> _90775) (t : _90768 -> Prop) (_36999 : _90768) : (term1727 _90768 _90775 s _36998 _36997 f t _36999) = (term1729 _90768 _90775 s _36998 _36997 f t _36999).
Proof. exact (MK_COMB (@lem3504102 _90768 s _36998) (@lem3504115 _90768 _90775 _36997 f t _36999)). Qed.
Lemma lem3504117 {_90768 _90775 : Type'} (s : _90768 -> Prop) (_36998 : _90768) (_36997 : _90775) (f : _90768 -> _90775) (t : _90768 -> Prop) (_36999 : _90768) : (term1726 _90768 _90775 s _36998 _36997 f t _36999) = (term1729 _90768 _90775 s _36998 _36997 f t _36999).
Proof. exact (TRANS (@lem3504097 _90768 _90775 s _36998 _36997 f t _36999) (@lem3504116 _90768 _90775 s _36998 _36997 f t _36999)). Qed.
Lemma lem3504118 {_90768 _90775 : Type'} (s : _90768 -> Prop) (_36998 : _90768) (_36997 : _90775) (f : _90768 -> _90775) (t : _90768 -> Prop) (_36999 : _90768) : (term1724 _90768 _90775 s _36998 _36997 f t _36999) = (term1730 _90768 _90775 s _36998 _36997 f t _36999).
Proof. exact (MK_COMB (@lem3504094 _90768 _90775 _36997 f _36998) (@lem3504117 _90768 _90775 s _36998 _36997 f t _36999)). Qed.
Lemma lem3504119 {_90768 _90775 : Type'} (s : _90768 -> Prop) (_36998 : _90768) (_36997 : _90775) (f : _90768 -> _90775) (t : _90768 -> Prop) (_36999 : _90768) : (term1723 _90768 _90775 s _36998 _36997 f t _36999) = (term1730 _90768 _90775 s _36998 _36997 f t _36999).
Proof. exact (TRANS (@lem3504089 _90768 _90775 s _36998 _36997 f t _36999) (@lem3504118 _90768 _90775 s _36998 _36997 f t _36999)). Qed.
Lemma lem3504120 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem3504121 {_90768 _90775 : Type'} (s : _90768 -> Prop) (_36998 : _90768) (_36997 : _90775) (f : _90768 -> _90775) (t : _90768 -> Prop) (_36999 : _90768) : (term1731 _90768 _90775 s _36998 _36997 f t _36999) = (term1732 _90768 _90775 s _36998 _36997 f t _36999).
Proof. exact (MK_COMB (@lem3504120) (@lem3504119 _90768 _90775 s _36998 _36997 f t _36999)). Qed.
Lemma lem3504122 {_90768 _90775 : Type'} (f : _90768 -> _90775) (x'' : _90775 -> _90768) (_36997 : _90775) : (_36997 = (term1565 _90768 _90775 f x'' _36997)) = (_36997 = (term1565 _90768 _90775 f x'' _36997)).
Proof. exact (eq_refl (_36997 = (term1565 _90768 _90775 f x'' _36997))). Qed.
Lemma lem3504123 {_90768 _90775 : Type'} (s : _90768 -> Prop) (_36998 : _90768) (t : _90768 -> Prop) (_36999 : _90768) (f : _90768 -> _90775) (x'' : _90775 -> _90768) (_36997 : _90775) : (term1722 _90768 _90775 s _36998 t _36999 f x'' _36997) = (term1733 _90768 _90775 s _36998 t _36999 f x'' _36997).
Proof. exact (MK_COMB (@lem3504121 _90768 _90775 s _36998 _36997 f t _36999) (@lem3504122 _90768 _90775 f x'' _36997)). Qed.
Lemma lem3504124 {_90768 _90775 : Type'} (s : _90768 -> Prop) (_36998 : _90768) (t : _90768 -> Prop) (_36999 : _90768) (f : _90768 -> _90775) (x'' : _90775 -> _90768) (_36997 : _90775) : (term1644 _90768 _90775 x'' s _36998 _36997 f t _36999) = (term1733 _90768 _90775 s _36998 t _36999 f x'' _36997).
Proof. exact (TRANS (@lem3504086 _90768 _90775 s _36998 t _36999 f x'' _36997) (@lem3504123 _90768 _90775 s _36998 t _36999 f x'' _36997)). Qed.
Lemma lem3504126 {_90768 _90775 : Type'} (x' : _90768) (x : _90775) (x'' : _90775 -> _90768) (s : _90768 -> Prop) (x''' : _90775 -> _90768) (x'''' : _90775 -> _90768) (x''''' : _90775 -> _90768) (f : _90768 -> _90775) (t : _90768 -> Prop) (u : _90775 -> Prop) (h1 : term1520 _90768 _90775 t f s x' u x) (h2 : term1465 _90768 _90775 x'' s x''' x'''' x''''' f t u) : term1734 _90768 _90775 t x''''' f x'.
Proof. exact (conj (@lem3504052 _90768 _90775 x' x x'' s x''' x'''' x''''' f t u h1 h2) (@lem3504083 _90768 _90775 x' x x'' s x''' x'''' x''''' f t u h1 h2)). Qed.
Lemma lem3504127 {_90768 _90775 : Type'} (x' : _90768) (x : _90775) (x'' : _90775 -> _90768) (s : _90768 -> Prop) (x''' : _90775 -> _90768) (x'''' : _90775 -> _90768) (x''''' : _90775 -> _90768) (f : _90768 -> _90775) (t : _90768 -> Prop) (u : _90775 -> Prop) (h1 : term1520 _90768 _90775 t f s x' u x) (h2 : term1465 _90768 _90775 x'' s x''' x'''' x''''' f t u) : term1735 _90768 _90775 s t x''''' f x'.
Proof. exact (conj (@lem3504021 _90768 _90775 t f s x' u x h1) (@lem3504126 _90768 _90775 x' x x'' s x''' x'''' x''''' f t u h1 h2)). Qed.
Lemma lem3504128 {_90768 _90775 : Type'} (x' : _90768) (x : _90775) (x'' : _90775 -> _90768) (s : _90768 -> Prop) (x''' : _90775 -> _90768) (x'''' : _90775 -> _90768) (x''''' : _90775 -> _90768) (f : _90768 -> _90775) (t : _90768 -> Prop) (u : _90775 -> Prop) (h1 : term1520 _90768 _90775 t f s x' u x) (h2 : term1465 _90768 _90775 x'' s x''' x'''' x''''' f t u) : term1736 _90768 _90775 s t x''''' f x'.
Proof. exact (conj (@lem3504014 _90768 _90775 f x') (@lem3504127 _90768 _90775 x' x x'' s x''' x'''' x''''' f t u h1 h2)). Qed.
Lemma lem3504130 {_90768 _90775 : Type'} (_36998 : _90768) (_36999 : _90768) (_36997 : _90775) (x'' : _90775 -> _90768) (s : _90768 -> Prop) (x''' : _90775 -> _90768) (x'''' : _90775 -> _90768) (x''''' : _90775 -> _90768) (f : _90768 -> _90775) (t : _90768 -> Prop) (u : _90775 -> Prop) (h1 : term1465 _90768 _90775 x'' s x''' x'''' x''''' f t u) : term1733 _90768 _90775 s _36998 t _36999 f x'' _36997.
Proof. exact (EQ_MP (@lem3504124 _90768 _90775 s _36998 t _36999 f x'' _36997) (@lem3503505 _90768 _90775 _36998 _36997 _36999 x'' s x''' x'''' x''''' f t u h1)). Qed.
Lemma lem3504131 {_90768 _90775 : Type'} (_36998 : _90768) (_36999 : _90768) (_36997 : _90775) (x'' : _90775 -> _90768) (s : _90768 -> Prop) (x''' : _90775 -> _90768) (x'''' : _90775 -> _90768) (x''''' : _90775 -> _90768) (f : _90768 -> _90775) (t : _90768 -> Prop) (u : _90775 -> Prop) (h1 : term1465 _90768 _90775 x'' s x''' x'''' x''''' f t u) : term1733 _90768 _90775 s _36998 t _36999 f x'' _36997.
Proof. exact (@lem3504130 _90768 _90775 _36998 _36999 _36997 x'' s x''' x'''' x''''' f t u h1). Qed.
Lemma lem3504132 {_90768 _90775 : Type'} (x' : _90768) (x'' : _90775 -> _90768) (s : _90768 -> Prop) (x''' : _90775 -> _90768) (x'''' : _90775 -> _90768) (x''''' : _90775 -> _90768) (f : _90768 -> _90775) (t : _90768 -> Prop) (u : _90775 -> Prop) (h1 : term1465 _90768 _90775 x'' s x''' x'''' x''''' f t u) : term1737 _90768 _90775 s t x''''' x'' f x'.
Proof. exact (@lem3504131 _90768 _90775 x' (term1738 _90768 _90775 x''''' f x') (f x') x'' s x''' x'''' x''''' f t u h1). Qed.
Lemma lem3504135 {_90768 _90775 : Type'} (x' : _90768) (x : _90775) (x'' : _90775 -> _90768) (s : _90768 -> Prop) (x''' : _90775 -> _90768) (x'''' : _90775 -> _90768) (x''''' : _90775 -> _90768) (f : _90768 -> _90775) (t : _90768 -> Prop) (u : _90775 -> Prop) (h1 : term1520 _90768 _90775 t f s x' u x) (h2 : term1465 _90768 _90775 x'' s x''' x'''' x''''' f t u) : (f x') = (term1713 _90768 _90775 x'' f x').
Proof. exact (@lem3504132 _90768 _90775 x' x'' s x''' x'''' x''''' f t u h2 (@lem3504128 _90768 _90775 x' x x'' s x''' x'''' x''''' f t u h1 h2)). Qed.
Lemma lem3504136 {_90768 _90775 : Type'} (x' : _90768) (x : _90775) (x'' : _90775 -> _90768) (s : _90768 -> Prop) (x''' : _90775 -> _90768) (x'''' : _90775 -> _90768) (x''''' : _90775 -> _90768) (f : _90768 -> _90775) (t : _90768 -> Prop) (u : _90775 -> Prop) (h1 : term1520 _90768 _90775 t f s x' u x) (h2 : term1465 _90768 _90775 x'' s x''' x'''' x''''' f t u) : term1714 _90768 _90775 x'' f x'.
Proof. exact (fun h0 : term1715 _90768 _90775 x'' f x' => @lem3504135 _90768 _90775 x' x x'' s x''' x'''' x''''' f t u h1 h2). Qed.
Lemma lem3504138 (p : Prop) : (term828 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem3504139 {_90768 _90775 : Type'} (x'' : _90775 -> _90768) (f : _90768 -> _90775) (x' : _90768) : (term1714 _90768 _90775 x'' f x') = ((f x') = (term1713 _90768 _90775 x'' f x')).
Proof. exact (@lem3504138 ((f x') = (term1713 _90768 _90775 x'' f x'))). Qed.
Lemma lem3504140 {_90768 _90775 : Type'} (x' : _90768) (x : _90775) (x'' : _90775 -> _90768) (s : _90768 -> Prop) (x''' : _90775 -> _90768) (x'''' : _90775 -> _90768) (x''''' : _90775 -> _90768) (f : _90768 -> _90775) (t : _90768 -> Prop) (u : _90775 -> Prop) (h1 : term1520 _90768 _90775 t f s x' u x) (h2 : term1465 _90768 _90775 x'' s x''' x'''' x''''' f t u) : (f x') = (term1713 _90768 _90775 x'' f x').
Proof. exact (EQ_MP (@lem3504139 _90768 _90775 x'' f x') (@lem3504136 _90768 _90775 x' x x'' s x''' x'''' x''''' f t u h1 h2)). Qed.
Lemma lem3504142 {_90775 : Type'} (x : _90775) : x = x.
Proof. exact (@lem21386 _90775 x). Qed.
Lemma lem3504143 {_90775 : Type'} (x : _90775) : x = x.
Proof. exact (@lem3504142 _90775 x). Qed.
Lemma lem3504144 {_90768 _90775 : Type'} (f : _90768 -> _90775) (x' : _90768) : (f x') = (f x').
Proof. exact (@lem3504143 _90775 (f x')). Qed.
Lemma lem3504145 {_90768 _90775 : Type'} (f : _90768 -> _90775) (x' : _90768) : term1673 _90768 _90775 f x'.
Proof. exact (fun h0 : term1674 _90768 _90775 f x' => @lem3504144 _90768 _90775 f x'). Qed.
Lemma lem3504147 (p : Prop) : (term828 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem3504148 {_90768 _90775 : Type'} (f : _90768 -> _90775) (x' : _90768) : (term1673 _90768 _90775 f x') = ((f x') = (f x')).
Proof. exact (@lem3504147 ((f x') = (f x'))). Qed.
Lemma lem3504149 {_90768 _90775 : Type'} (f : _90768 -> _90775) (x' : _90768) : (f x') = (f x').
Proof. exact (EQ_MP (@lem3504148 _90768 _90775 f x') (@lem3504145 _90768 _90775 f x')). Qed.
Lemma lem3504151 {_90768 _90775 : Type'} (t : _90768 -> Prop) (f : _90768 -> _90775) (s : _90768 -> Prop) (x' : _90768) (u : _90775 -> Prop) (x : _90775) (h1 : term1520 _90768 _90775 t f s x' u x) : s x'.
Proof. exact (proj2 (@lem3501358 _90768 _90775 t f s x' u x h1)). Qed.
Lemma lem3504152 {_90768 _90775 : Type'} (t : _90768 -> Prop) (f : _90768 -> _90775) (s : _90768 -> Prop) (x' : _90768) (u : _90775 -> Prop) (x : _90775) (h1 : term1520 _90768 _90775 t f s x' u x) : term1675 _90768 s x'.
Proof. exact (fun h0 : term618 _90768 s x' => @lem3504151 _90768 _90775 t f s x' u x h1). Qed.
Lemma lem3504154 (p : Prop) : (term828 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem3504155 {_90768 : Type'} (s : _90768 -> Prop) (x' : _90768) : (term1675 _90768 s x') = (s x').
Proof. exact (@lem3504154 (s x')). Qed.
Lemma lem3504156 {_90768 _90775 : Type'} (t : _90768 -> Prop) (f : _90768 -> _90775) (s : _90768 -> Prop) (x' : _90768) (u : _90775 -> Prop) (x : _90775) (h1 : term1520 _90768 _90775 t f s x' u x) : s x'.
Proof. exact (EQ_MP (@lem3504155 _90768 s x') (@lem3504152 _90768 _90775 t f s x' u x h1)). Qed.
Lemma lem3504158 {_90768 _90775 : Type'} (t : _90768 -> Prop) (f : _90768 -> _90775) (s : _90768 -> Prop) (x' : _90768) (u : _90775 -> Prop) (x : _90775) (h1 : term1520 _90768 _90775 t f s x' u x) : term1668 _90768 _90775 u f x'.
Proof. exact (EQ_MP (@lem3503420 _90768 _90775 t f s x' u x h1) (@lem3502829 _90768 _90775 t f s x' u x h1)). Qed.
Lemma lem3504159 {_90768 _90775 : Type'} (t : _90768 -> Prop) (f : _90768 -> _90775) (s : _90768 -> Prop) (x' : _90768) (u : _90775 -> Prop) (x : _90775) (h1 : term1520 _90768 _90775 t f s x' u x) : term1699 _90768 _90775 u f x'.
Proof. exact (fun h0 : term1656 _90768 _90775 u f x' => @lem3504158 _90768 _90775 t f s x' u x h1). Qed.
Lemma lem3504161 (p : Prop) : (term828 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem3504162 {_90768 _90775 : Type'} (u : _90775 -> Prop) (f : _90768 -> _90775) (x' : _90768) : (term1699 _90768 _90775 u f x') = (term1668 _90768 _90775 u f x').
Proof. exact (@lem3504161 (term1668 _90768 _90775 u f x')). Qed.
Lemma lem3504163 {_90768 _90775 : Type'} (t : _90768 -> Prop) (f : _90768 -> _90775) (s : _90768 -> Prop) (x' : _90768) (u : _90775 -> Prop) (x : _90775) (h1 : term1520 _90768 _90775 t f s x' u x) : term1668 _90768 _90775 u f x'.
Proof. exact (EQ_MP (@lem3504162 _90768 _90775 u f x') (@lem3504159 _90768 _90775 t f s x' u x h1)). Qed.
Lemma lem3504165 {_90768 _90775 : Type'} (_36994 : _90775) (x'' : _90775 -> _90768) (s : _90768 -> Prop) (x''' : _90775 -> _90768) (x'''' : _90775 -> _90768) (x''''' : _90775 -> _90768) (f : _90768 -> _90775) (t : _90768 -> Prop) (u : _90775 -> Prop) (h1 : term1465 _90768 _90775 x'' s x''' x'''' x''''' f t u) : term1711 _90768 _90775 u f x''''' _36994.
Proof. exact (EQ_MP (@lem3504039 _90768 _90775 u f x''''' _36994) (@lem3503547 _90768 _90775 _36994 x'' s x''' x'''' x''''' f t u h1)). Qed.
Lemma lem3504166 {_90768 _90775 : Type'} (_36994 : _90775) (x'' : _90775 -> _90768) (s : _90768 -> Prop) (x''' : _90775 -> _90768) (x'''' : _90775 -> _90768) (x''''' : _90775 -> _90768) (f : _90768 -> _90775) (t : _90768 -> Prop) (u : _90775 -> Prop) (h1 : term1465 _90768 _90775 x'' s x''' x'''' x''''' f t u) : term1711 _90768 _90775 u f x''''' _36994.
Proof. exact (@lem3504165 _90768 _90775 _36994 x'' s x''' x'''' x''''' f t u h1). Qed.
Lemma lem3504167 {_90768 _90775 : Type'} (x' : _90768) (x'' : _90775 -> _90768) (s : _90768 -> Prop) (x''' : _90775 -> _90768) (x'''' : _90775 -> _90768) (x''''' : _90775 -> _90768) (f : _90768 -> _90775) (t : _90768 -> Prop) (u : _90775 -> Prop) (h1 : term1465 _90768 _90775 x'' s x''' x'''' x''''' f t u) : term1712 _90768 _90775 u x''''' f x'.
Proof. exact (@lem3504166 _90768 _90775 (f x') x'' s x''' x'''' x''''' f t u h1). Qed.
Lemma lem3504170 {_90768 _90775 : Type'} (x' : _90768) (x : _90775) (x'' : _90775 -> _90768) (s : _90768 -> Prop) (x''' : _90775 -> _90768) (x'''' : _90775 -> _90768) (x''''' : _90775 -> _90768) (f : _90768 -> _90775) (t : _90768 -> Prop) (u : _90775 -> Prop) (h1 : term1520 _90768 _90775 t f s x' u x) (h2 : term1465 _90768 _90775 x'' s x''' x'''' x''''' f t u) : (f x') = (term1713 _90768 _90775 x''''' f x').
Proof. exact (@lem3504167 _90768 _90775 x' x'' s x''' x'''' x''''' f t u h2 (@lem3504163 _90768 _90775 t f s x' u x h1)). Qed.
Lemma lem3504171 {_90768 _90775 : Type'} (x' : _90768) (x : _90775) (x'' : _90775 -> _90768) (s : _90768 -> Prop) (x''' : _90775 -> _90768) (x'''' : _90775 -> _90768) (x''''' : _90775 -> _90768) (f : _90768 -> _90775) (t : _90768 -> Prop) (u : _90775 -> Prop) (h1 : term1520 _90768 _90775 t f s x' u x) (h2 : term1465 _90768 _90775 x'' s x''' x'''' x''''' f t u) : term1714 _90768 _90775 x''''' f x'.
Proof. exact (fun h0 : term1715 _90768 _90775 x''''' f x' => @lem3504170 _90768 _90775 x' x x'' s x''' x'''' x''''' f t u h1 h2). Qed.
Lemma lem3504173 (p : Prop) : (term828 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem3504174 {_90768 _90775 : Type'} (x''''' : _90775 -> _90768) (f : _90768 -> _90775) (x' : _90768) : (term1714 _90768 _90775 x''''' f x') = ((f x') = (term1713 _90768 _90775 x''''' f x')).
Proof. exact (@lem3504173 ((f x') = (term1713 _90768 _90775 x''''' f x'))). Qed.
Lemma lem3504175 {_90768 _90775 : Type'} (x' : _90768) (x : _90775) (x'' : _90775 -> _90768) (s : _90768 -> Prop) (x''' : _90775 -> _90768) (x'''' : _90775 -> _90768) (x''''' : _90775 -> _90768) (f : _90768 -> _90775) (t : _90768 -> Prop) (u : _90775 -> Prop) (h1 : term1520 _90768 _90775 t f s x' u x) (h2 : term1465 _90768 _90775 x'' s x''' x'''' x''''' f t u) : (f x') = (term1713 _90768 _90775 x''''' f x').
Proof. exact (EQ_MP (@lem3504174 _90768 _90775 x''''' f x') (@lem3504171 _90768 _90775 x' x x'' s x''' x'''' x''''' f t u h1 h2)). Qed.
Lemma lem3504177 {_90768 _90775 : Type'} (t : _90768 -> Prop) (f : _90768 -> _90775) (s : _90768 -> Prop) (x' : _90768) (u : _90775 -> Prop) (x : _90775) (h1 : term1520 _90768 _90775 t f s x' u x) : term1668 _90768 _90775 u f x'.
Proof. exact (EQ_MP (@lem3503420 _90768 _90775 t f s x' u x h1) (@lem3502829 _90768 _90775 t f s x' u x h1)). Qed.
Lemma lem3504178 {_90768 _90775 : Type'} (t : _90768 -> Prop) (f : _90768 -> _90775) (s : _90768 -> Prop) (x' : _90768) (u : _90775 -> Prop) (x : _90775) (h1 : term1520 _90768 _90775 t f s x' u x) : term1699 _90768 _90775 u f x'.
Proof. exact (fun h0 : term1656 _90768 _90775 u f x' => @lem3504177 _90768 _90775 t f s x' u x h1). Qed.
Lemma lem3504180 (p : Prop) : (term828 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem3504181 {_90768 _90775 : Type'} (u : _90775 -> Prop) (f : _90768 -> _90775) (x' : _90768) : (term1699 _90768 _90775 u f x') = (term1668 _90768 _90775 u f x').
Proof. exact (@lem3504180 (term1668 _90768 _90775 u f x')). Qed.
Lemma lem3504182 {_90768 _90775 : Type'} (t : _90768 -> Prop) (f : _90768 -> _90775) (s : _90768 -> Prop) (x' : _90768) (u : _90775 -> Prop) (x : _90775) (h1 : term1520 _90768 _90775 t f s x' u x) : term1668 _90768 _90775 u f x'.
Proof. exact (EQ_MP (@lem3504181 _90768 _90775 u f x') (@lem3504178 _90768 _90775 t f s x' u x h1)). Qed.
Lemma lem3504184 {_90768 _90775 : Type'} (_36994 : _90775) (x'' : _90775 -> _90768) (s : _90768 -> Prop) (x''' : _90775 -> _90768) (x'''' : _90775 -> _90768) (x''''' : _90775 -> _90768) (f : _90768 -> _90775) (t : _90768 -> Prop) (u : _90775 -> Prop) (h1 : term1465 _90768 _90775 x'' s x''' x'''' x''''' f t u) : term1717 _90768 _90775 u t x''''' _36994.
Proof. exact (EQ_MP (@lem3504070 _90768 _90775 u t x''''' _36994) (@lem3503561 _90768 _90775 _36994 x'' s x''' x'''' x''''' f t u h1)). Qed.
Lemma lem3504185 {_90768 _90775 : Type'} (_36994 : _90775) (x'' : _90775 -> _90768) (s : _90768 -> Prop) (x''' : _90775 -> _90768) (x'''' : _90775 -> _90768) (x''''' : _90775 -> _90768) (f : _90768 -> _90775) (t : _90768 -> Prop) (u : _90775 -> Prop) (h1 : term1465 _90768 _90775 x'' s x''' x'''' x''''' f t u) : term1717 _90768 _90775 u t x''''' _36994.
Proof. exact (@lem3504184 _90768 _90775 _36994 x'' s x''' x'''' x''''' f t u h1). Qed.
Lemma lem3504186 {_90768 _90775 : Type'} (x' : _90768) (x'' : _90775 -> _90768) (s : _90768 -> Prop) (x''' : _90775 -> _90768) (x'''' : _90775 -> _90768) (x''''' : _90775 -> _90768) (f : _90768 -> _90775) (t : _90768 -> Prop) (u : _90775 -> Prop) (h1 : term1465 _90768 _90775 x'' s x''' x'''' x''''' f t u) : term1718 _90768 _90775 u t x''''' f x'.
Proof. exact (@lem3504185 _90768 _90775 (f x') x'' s x''' x'''' x''''' f t u h1). Qed.
Lemma lem3504189 {_90768 _90775 : Type'} (x' : _90768) (x : _90775) (x'' : _90775 -> _90768) (s : _90768 -> Prop) (x''' : _90775 -> _90768) (x'''' : _90775 -> _90768) (x''''' : _90775 -> _90768) (f : _90768 -> _90775) (t : _90768 -> Prop) (u : _90775 -> Prop) (h1 : term1520 _90768 _90775 t f s x' u x) (h2 : term1465 _90768 _90775 x'' s x''' x'''' x''''' f t u) : term1719 _90768 _90775 t x''''' f x'.
Proof. exact (@lem3504186 _90768 _90775 x' x'' s x''' x'''' x''''' f t u h2 (@lem3504182 _90768 _90775 t f s x' u x h1)). Qed.
Lemma lem3504190 {_90768 _90775 : Type'} (x' : _90768) (x : _90775) (x'' : _90775 -> _90768) (s : _90768 -> Prop) (x''' : _90775 -> _90768) (x'''' : _90775 -> _90768) (x''''' : _90775 -> _90768) (f : _90768 -> _90775) (t : _90768 -> Prop) (u : _90775 -> Prop) (h1 : term1520 _90768 _90775 t f s x' u x) (h2 : term1465 _90768 _90775 x'' s x''' x'''' x''''' f t u) : term1720 _90768 _90775 t x''''' f x'.
Proof. exact (fun h0 : term1721 _90768 _90775 t x''''' f x' => @lem3504189 _90768 _90775 x' x x'' s x''' x'''' x''''' f t u h1 h2). Qed.
Lemma lem3504192 (p : Prop) : (term828 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem3504193 {_90768 _90775 : Type'} (t : _90768 -> Prop) (x''''' : _90775 -> _90768) (f : _90768 -> _90775) (x' : _90768) : (term1720 _90768 _90775 t x''''' f x') = (term1719 _90768 _90775 t x''''' f x').
Proof. exact (@lem3504192 (term1719 _90768 _90775 t x''''' f x')). Qed.
Lemma lem3504194 {_90768 _90775 : Type'} (x' : _90768) (x : _90775) (x'' : _90775 -> _90768) (s : _90768 -> Prop) (x''' : _90775 -> _90768) (x'''' : _90775 -> _90768) (x''''' : _90775 -> _90768) (f : _90768 -> _90775) (t : _90768 -> Prop) (u : _90775 -> Prop) (h1 : term1520 _90768 _90775 t f s x' u x) (h2 : term1465 _90768 _90775 x'' s x''' x'''' x''''' f t u) : term1719 _90768 _90775 t x''''' f x'.
Proof. exact (EQ_MP (@lem3504193 _90768 _90775 t x''''' f x') (@lem3504190 _90768 _90775 x' x x'' s x''' x'''' x''''' f t u h1 h2)). Qed.
Lemma lem3504196 (b : Prop) (a : Prop) : (a \/ b) = (term833 b a).
Proof. exact (EQ_MP (@lem20682 b a) (@lem20764 b a)). Qed.
Lemma lem3504197 {_90768 _90775 : Type'} (_36998 : _90768) (f : _90768 -> _90775) (t : _90768 -> Prop) (_36999 : _90768) (s : _90768 -> Prop) (x'' : _90775 -> _90768) (_36997 : _90775) : (term1646 _90768 _90775 x'' s _36998 _36997 f t _36999) = (term1739 _90768 _90775 _36998 f t _36999 s x'' _36997).
Proof. exact (@lem3504196 (term1642 _90768 _90775 s _36998 _36997 f t _36999) (term1566 _90768 _90775 s x'' _36997)). Qed.
Lemma lem3504199 (a : Prop) (b : Prop) : (term887 a b) = (term888 a b).
Proof. exact (EQ_MP (@lem20789 a b) (@lem20895 a b)). Qed.
Lemma lem3504200 {_90768 _90775 : Type'} (s : _90768 -> Prop) (_36998 : _90768) (_36997 : _90775) (f : _90768 -> _90775) (t : _90768 -> Prop) (_36999 : _90768) : (term1723 _90768 _90775 s _36998 _36997 f t _36999) = (term1724 _90768 _90775 s _36998 _36997 f t _36999).
Proof. exact (@lem3504199 (term440 _90768 _90775 _36997 f _36998) (term1725 _90768 _90775 s _36998 _36997 f t _36999)). Qed.
Lemma lem3504202 (a : Prop) : (term282 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem3504203 {_90768 _90775 : Type'} (_36997 : _90775) (f : _90768 -> _90775) (_36998 : _90768) : (term1692 _90768 _90775 _36997 f _36998) = (_36997 = (f _36998)).
Proof. exact (@lem3504202 (_36997 = (f _36998))). Qed.
Lemma lem3504204 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem3504205 {_90768 _90775 : Type'} (_36997 : _90775) (f : _90768 -> _90775) (_36998 : _90768) : (term1693 _90768 _90775 _36997 f _36998) = (term88 _90768 _90775 _36997 f _36998).
Proof. exact (MK_COMB (@lem3504204) (@lem3504203 _90768 _90775 _36997 f _36998)). Qed.
Lemma lem3504207 (a : Prop) (b : Prop) : (term887 a b) = (term888 a b).
Proof. exact (EQ_MP (@lem20789 a b) (@lem20895 a b)). Qed.
Lemma lem3504208 {_90768 _90775 : Type'} (s : _90768 -> Prop) (_36998 : _90768) (_36997 : _90775) (f : _90768 -> _90775) (t : _90768 -> Prop) (_36999 : _90768) : (term1726 _90768 _90775 s _36998 _36997 f t _36999) = (term1727 _90768 _90775 s _36998 _36997 f t _36999).
Proof. exact (@lem3504207 (term618 _90768 s _36998) (term364 _90768 _90775 _36997 f t _36999)). Qed.
Lemma lem3504210 (a : Prop) : (term282 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem3504211 {_90768 : Type'} (s : _90768 -> Prop) (_36998 : _90768) : (term1694 _90768 s _36998) = (s _36998).
Proof. exact (@lem3504210 (s _36998)). Qed.
Lemma lem3504212 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem3504213 {_90768 : Type'} (s : _90768 -> Prop) (_36998 : _90768) : (term1728 _90768 s _36998) = (term234 _90768 s _36998).
Proof. exact (MK_COMB (@lem3504212) (@lem3504211 _90768 s _36998)). Qed.
Lemma lem3504215 (a : Prop) (b : Prop) : (term887 a b) = (term888 a b).
Proof. exact (EQ_MP (@lem20789 a b) (@lem20895 a b)). Qed.
Lemma lem3504216 {_90768 _90775 : Type'} (_36997 : _90775) (f : _90768 -> _90775) (t : _90768 -> Prop) (_36999 : _90768) : (term1690 _90768 _90775 _36997 f t _36999) = (term1691 _90768 _90775 _36997 f t _36999).
Proof. exact (@lem3504215 (term440 _90768 _90775 _36997 f _36999) (term618 _90768 t _36999)). Qed.
Lemma lem3504218 (a : Prop) : (term282 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem3504219 {_90768 _90775 : Type'} (_36997 : _90775) (f : _90768 -> _90775) (_36999 : _90768) : (term1692 _90768 _90775 _36997 f _36999) = (_36997 = (f _36999)).
Proof. exact (@lem3504218 (_36997 = (f _36999))). Qed.
Lemma lem3504220 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem3504221 {_90768 _90775 : Type'} (_36997 : _90775) (f : _90768 -> _90775) (_36999 : _90768) : (term1693 _90768 _90775 _36997 f _36999) = (term88 _90768 _90775 _36997 f _36999).
Proof. exact (MK_COMB (@lem3504220) (@lem3504219 _90768 _90775 _36997 f _36999)). Qed.
Lemma lem3504223 (a : Prop) : (term282 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem3504224 {_90768 : Type'} (t : _90768 -> Prop) (_36999 : _90768) : (term1694 _90768 t _36999) = (t _36999).
Proof. exact (@lem3504223 (t _36999)). Qed.
Lemma lem3504225 {_90768 _90775 : Type'} (_36997 : _90775) (f : _90768 -> _90775) (t : _90768 -> Prop) (_36999 : _90768) : (term1691 _90768 _90775 _36997 f t _36999) = (term264 _90768 _90775 _36997 f t _36999).
Proof. exact (MK_COMB (@lem3504221 _90768 _90775 _36997 f _36999) (@lem3504224 _90768 t _36999)). Qed.
Lemma lem3504226 {_90768 _90775 : Type'} (_36997 : _90775) (f : _90768 -> _90775) (t : _90768 -> Prop) (_36999 : _90768) : (term1690 _90768 _90775 _36997 f t _36999) = (term264 _90768 _90775 _36997 f t _36999).
Proof. exact (TRANS (@lem3504216 _90768 _90775 _36997 f t _36999) (@lem3504225 _90768 _90775 _36997 f t _36999)). Qed.
Lemma lem3504227 {_90768 _90775 : Type'} (s : _90768 -> Prop) (_36998 : _90768) (_36997 : _90775) (f : _90768 -> _90775) (t : _90768 -> Prop) (_36999 : _90768) : (term1727 _90768 _90775 s _36998 _36997 f t _36999) = (term1729 _90768 _90775 s _36998 _36997 f t _36999).
Proof. exact (MK_COMB (@lem3504213 _90768 s _36998) (@lem3504226 _90768 _90775 _36997 f t _36999)). Qed.
Lemma lem3504228 {_90768 _90775 : Type'} (s : _90768 -> Prop) (_36998 : _90768) (_36997 : _90775) (f : _90768 -> _90775) (t : _90768 -> Prop) (_36999 : _90768) : (term1726 _90768 _90775 s _36998 _36997 f t _36999) = (term1729 _90768 _90775 s _36998 _36997 f t _36999).
Proof. exact (TRANS (@lem3504208 _90768 _90775 s _36998 _36997 f t _36999) (@lem3504227 _90768 _90775 s _36998 _36997 f t _36999)). Qed.
Lemma lem3504229 {_90768 _90775 : Type'} (s : _90768 -> Prop) (_36998 : _90768) (_36997 : _90775) (f : _90768 -> _90775) (t : _90768 -> Prop) (_36999 : _90768) : (term1724 _90768 _90775 s _36998 _36997 f t _36999) = (term1730 _90768 _90775 s _36998 _36997 f t _36999).
Proof. exact (MK_COMB (@lem3504205 _90768 _90775 _36997 f _36998) (@lem3504228 _90768 _90775 s _36998 _36997 f t _36999)). Qed.
Lemma lem3504230 {_90768 _90775 : Type'} (s : _90768 -> Prop) (_36998 : _90768) (_36997 : _90775) (f : _90768 -> _90775) (t : _90768 -> Prop) (_36999 : _90768) : (term1723 _90768 _90775 s _36998 _36997 f t _36999) = (term1730 _90768 _90775 s _36998 _36997 f t _36999).
Proof. exact (TRANS (@lem3504200 _90768 _90775 s _36998 _36997 f t _36999) (@lem3504229 _90768 _90775 s _36998 _36997 f t _36999)). Qed.
Lemma lem3504231 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem3504232 {_90768 _90775 : Type'} (s : _90768 -> Prop) (_36998 : _90768) (_36997 : _90775) (f : _90768 -> _90775) (t : _90768 -> Prop) (_36999 : _90768) : (term1731 _90768 _90775 s _36998 _36997 f t _36999) = (term1732 _90768 _90775 s _36998 _36997 f t _36999).
Proof. exact (MK_COMB (@lem3504231) (@lem3504230 _90768 _90775 s _36998 _36997 f t _36999)). Qed.
Lemma lem3504233 {_90768 _90775 : Type'} (s : _90768 -> Prop) (x'' : _90775 -> _90768) (_36997 : _90775) : (term1566 _90768 _90775 s x'' _36997) = (term1566 _90768 _90775 s x'' _36997).
Proof. exact (eq_refl (term1566 _90768 _90775 s x'' _36997)). Qed.
Lemma lem3504234 {_90768 _90775 : Type'} (_36998 : _90768) (f : _90768 -> _90775) (t : _90768 -> Prop) (_36999 : _90768) (s : _90768 -> Prop) (x'' : _90775 -> _90768) (_36997 : _90775) : (term1739 _90768 _90775 _36998 f t _36999 s x'' _36997) = (term1740 _90768 _90775 _36998 f t _36999 s x'' _36997).
Proof. exact (MK_COMB (@lem3504232 _90768 _90775 s _36998 _36997 f t _36999) (@lem3504233 _90768 _90775 s x'' _36997)). Qed.
Lemma lem3504235 {_90768 _90775 : Type'} (_36998 : _90768) (f : _90768 -> _90775) (t : _90768 -> Prop) (_36999 : _90768) (s : _90768 -> Prop) (x'' : _90775 -> _90768) (_36997 : _90775) : (term1646 _90768 _90775 x'' s _36998 _36997 f t _36999) = (term1740 _90768 _90775 _36998 f t _36999 s x'' _36997).
Proof. exact (TRANS (@lem3504197 _90768 _90775 _36998 f t _36999 s x'' _36997) (@lem3504234 _90768 _90775 _36998 f t _36999 s x'' _36997)). Qed.
Lemma lem3504237 {_90768 _90775 : Type'} (x' : _90768) (x : _90775) (x'' : _90775 -> _90768) (s : _90768 -> Prop) (x''' : _90775 -> _90768) (x'''' : _90775 -> _90768) (x''''' : _90775 -> _90768) (f : _90768 -> _90775) (t : _90768 -> Prop) (u : _90775 -> Prop) (h1 : term1520 _90768 _90775 t f s x' u x) (h2 : term1465 _90768 _90775 x'' s x''' x'''' x''''' f t u) : term1734 _90768 _90775 t x''''' f x'.
Proof. exact (conj (@lem3504175 _90768 _90775 x' x x'' s x''' x'''' x''''' f t u h1 h2) (@lem3504194 _90768 _90775 x' x x'' s x''' x'''' x''''' f t u h1 h2)). Qed.
Lemma lem3504238 {_90768 _90775 : Type'} (x' : _90768) (x : _90775) (x'' : _90775 -> _90768) (s : _90768 -> Prop) (x''' : _90775 -> _90768) (x'''' : _90775 -> _90768) (x''''' : _90775 -> _90768) (f : _90768 -> _90775) (t : _90768 -> Prop) (u : _90775 -> Prop) (h1 : term1520 _90768 _90775 t f s x' u x) (h2 : term1465 _90768 _90775 x'' s x''' x'''' x''''' f t u) : term1735 _90768 _90775 s t x''''' f x'.
Proof. exact (conj (@lem3504156 _90768 _90775 t f s x' u x h1) (@lem3504237 _90768 _90775 x' x x'' s x''' x'''' x''''' f t u h1 h2)). Qed.
Lemma lem3504239 {_90768 _90775 : Type'} (x' : _90768) (x : _90775) (x'' : _90775 -> _90768) (s : _90768 -> Prop) (x''' : _90775 -> _90768) (x'''' : _90775 -> _90768) (x''''' : _90775 -> _90768) (f : _90768 -> _90775) (t : _90768 -> Prop) (u : _90775 -> Prop) (h1 : term1520 _90768 _90775 t f s x' u x) (h2 : term1465 _90768 _90775 x'' s x''' x'''' x''''' f t u) : term1736 _90768 _90775 s t x''''' f x'.
Proof. exact (conj (@lem3504149 _90768 _90775 f x') (@lem3504238 _90768 _90775 x' x x'' s x''' x'''' x''''' f t u h1 h2)). Qed.
Lemma lem3504241 {_90768 _90775 : Type'} (_36998 : _90768) (_36999 : _90768) (_36997 : _90775) (x'' : _90775 -> _90768) (s : _90768 -> Prop) (x''' : _90775 -> _90768) (x'''' : _90775 -> _90768) (x''''' : _90775 -> _90768) (f : _90768 -> _90775) (t : _90768 -> Prop) (u : _90775 -> Prop) (h1 : term1465 _90768 _90775 x'' s x''' x'''' x''''' f t u) : term1740 _90768 _90775 _36998 f t _36999 s x'' _36997.
Proof. exact (EQ_MP (@lem3504235 _90768 _90775 _36998 f t _36999 s x'' _36997) (@lem3503519 _90768 _90775 _36998 _36997 _36999 x'' s x''' x'''' x''''' f t u h1)). Qed.
Lemma lem3504242 {_90768 _90775 : Type'} (_36998 : _90768) (_36999 : _90768) (_36997 : _90775) (x'' : _90775 -> _90768) (s : _90768 -> Prop) (x''' : _90775 -> _90768) (x'''' : _90775 -> _90768) (x''''' : _90775 -> _90768) (f : _90768 -> _90775) (t : _90768 -> Prop) (u : _90775 -> Prop) (h1 : term1465 _90768 _90775 x'' s x''' x'''' x''''' f t u) : term1740 _90768 _90775 _36998 f t _36999 s x'' _36997.
Proof. exact (@lem3504241 _90768 _90775 _36998 _36999 _36997 x'' s x''' x'''' x''''' f t u h1). Qed.
Lemma lem3504243 {_90768 _90775 : Type'} (x' : _90768) (x'' : _90775 -> _90768) (s : _90768 -> Prop) (x''' : _90775 -> _90768) (x'''' : _90775 -> _90768) (x''''' : _90775 -> _90768) (f : _90768 -> _90775) (t : _90768 -> Prop) (u : _90775 -> Prop) (h1 : term1465 _90768 _90775 x'' s x''' x'''' x''''' f t u) : term1741 _90768 _90775 t x''''' s x'' f x'.
Proof. exact (@lem3504242 _90768 _90775 x' (term1738 _90768 _90775 x''''' f x') (f x') x'' s x''' x'''' x''''' f t u h1). Qed.
Lemma lem3504246 {_90768 _90775 : Type'} (x' : _90768) (x : _90775) (x'' : _90775 -> _90768) (s : _90768 -> Prop) (x''' : _90775 -> _90768) (x'''' : _90775 -> _90768) (x''''' : _90775 -> _90768) (f : _90768 -> _90775) (t : _90768 -> Prop) (u : _90775 -> Prop) (h1 : term1520 _90768 _90775 t f s x' u x) (h2 : term1465 _90768 _90775 x'' s x''' x'''' x''''' f t u) : term1719 _90768 _90775 s x'' f x'.
Proof. exact (@lem3504243 _90768 _90775 x' x'' s x''' x'''' x''''' f t u h2 (@lem3504239 _90768 _90775 x' x x'' s x''' x'''' x''''' f t u h1 h2)). Qed.
Lemma lem3504247 {_90768 _90775 : Type'} (x' : _90768) (x : _90775) (x'' : _90775 -> _90768) (s : _90768 -> Prop) (x''' : _90775 -> _90768) (x'''' : _90775 -> _90768) (x''''' : _90775 -> _90768) (f : _90768 -> _90775) (t : _90768 -> Prop) (u : _90775 -> Prop) (h1 : term1520 _90768 _90775 t f s x' u x) (h2 : term1465 _90768 _90775 x'' s x''' x'''' x''''' f t u) : term1720 _90768 _90775 s x'' f x'.
Proof. exact (fun h0 : term1721 _90768 _90775 s x'' f x' => @lem3504246 _90768 _90775 x' x x'' s x''' x'''' x''''' f t u h1 h2). Qed.
Lemma lem3504249 (p : Prop) : (term828 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem3504250 {_90768 _90775 : Type'} (s : _90768 -> Prop) (x'' : _90775 -> _90768) (f : _90768 -> _90775) (x' : _90768) : (term1720 _90768 _90775 s x'' f x') = (term1719 _90768 _90775 s x'' f x').
Proof. exact (@lem3504249 (term1719 _90768 _90775 s x'' f x')). Qed.
Lemma lem3504251 {_90768 _90775 : Type'} (x' : _90768) (x : _90775) (x'' : _90775 -> _90768) (s : _90768 -> Prop) (x''' : _90775 -> _90768) (x'''' : _90775 -> _90768) (x''''' : _90775 -> _90768) (f : _90768 -> _90775) (t : _90768 -> Prop) (u : _90775 -> Prop) (h1 : term1520 _90768 _90775 t f s x' u x) (h2 : term1465 _90768 _90775 x'' s x''' x'''' x''''' f t u) : term1719 _90768 _90775 s x'' f x'.
Proof. exact (EQ_MP (@lem3504250 _90768 _90775 s x'' f x') (@lem3504247 _90768 _90775 x' x x'' s x''' x'''' x''''' f t u h1 h2)). Qed.
Lemma lem3504253 {_90768 _90775 : Type'} (t : _90768 -> Prop) (f : _90768 -> _90775) (s : _90768 -> Prop) (x' : _90768) (u : _90775 -> Prop) (x : _90775) (h1 : term1520 _90768 _90775 t f s x' u x) : term1668 _90768 _90775 u f x'.
Proof. exact (EQ_MP (@lem3503420 _90768 _90775 t f s x' u x h1) (@lem3502829 _90768 _90775 t f s x' u x h1)). Qed.
Lemma lem3504254 {_90768 _90775 : Type'} (t : _90768 -> Prop) (f : _90768 -> _90775) (s : _90768 -> Prop) (x' : _90768) (u : _90775 -> Prop) (x : _90775) (h1 : term1520 _90768 _90775 t f s x' u x) : term1699 _90768 _90775 u f x'.
Proof. exact (fun h0 : term1656 _90768 _90775 u f x' => @lem3504253 _90768 _90775 t f s x' u x h1). Qed.
Lemma lem3504256 (p : Prop) : (term828 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem3504257 {_90768 _90775 : Type'} (u : _90775 -> Prop) (f : _90768 -> _90775) (x' : _90768) : (term1699 _90768 _90775 u f x') = (term1668 _90768 _90775 u f x').
Proof. exact (@lem3504256 (term1668 _90768 _90775 u f x')). Qed.
Lemma lem3504258 {_90768 _90775 : Type'} (t : _90768 -> Prop) (f : _90768 -> _90775) (s : _90768 -> Prop) (x' : _90768) (u : _90775 -> Prop) (x : _90775) (h1 : term1520 _90768 _90775 t f s x' u x) : term1668 _90768 _90775 u f x'.
Proof. exact (EQ_MP (@lem3504257 _90768 _90775 u f x') (@lem3504254 _90768 _90775 t f s x' u x h1)). Qed.
Lemma lem3504260 {_90768 _90775 : Type'} (_36994 : _90775) (x'' : _90775 -> _90768) (s : _90768 -> Prop) (x''' : _90775 -> _90768) (x'''' : _90775 -> _90768) (x''''' : _90775 -> _90768) (f : _90768 -> _90775) (t : _90768 -> Prop) (u : _90775 -> Prop) (h1 : term1465 _90768 _90775 x'' s x''' x'''' x''''' f t u) : term1711 _90768 _90775 u f x''''' _36994.
Proof. exact (EQ_MP (@lem3504039 _90768 _90775 u f x''''' _36994) (@lem3503547 _90768 _90775 _36994 x'' s x''' x'''' x''''' f t u h1)). Qed.
Lemma lem3504261 {_90768 _90775 : Type'} (_36994 : _90775) (x'' : _90775 -> _90768) (s : _90768 -> Prop) (x''' : _90775 -> _90768) (x'''' : _90775 -> _90768) (x''''' : _90775 -> _90768) (f : _90768 -> _90775) (t : _90768 -> Prop) (u : _90775 -> Prop) (h1 : term1465 _90768 _90775 x'' s x''' x'''' x''''' f t u) : term1711 _90768 _90775 u f x''''' _36994.
Proof. exact (@lem3504260 _90768 _90775 _36994 x'' s x''' x'''' x''''' f t u h1). Qed.
Lemma lem3504262 {_90768 _90775 : Type'} (x' : _90768) (x'' : _90775 -> _90768) (s : _90768 -> Prop) (x''' : _90775 -> _90768) (x'''' : _90775 -> _90768) (x''''' : _90775 -> _90768) (f : _90768 -> _90775) (t : _90768 -> Prop) (u : _90775 -> Prop) (h1 : term1465 _90768 _90775 x'' s x''' x'''' x''''' f t u) : term1712 _90768 _90775 u x''''' f x'.
Proof. exact (@lem3504261 _90768 _90775 (f x') x'' s x''' x'''' x''''' f t u h1). Qed.
Lemma lem3504265 {_90768 _90775 : Type'} (x' : _90768) (x : _90775) (x'' : _90775 -> _90768) (s : _90768 -> Prop) (x''' : _90775 -> _90768) (x'''' : _90775 -> _90768) (x''''' : _90775 -> _90768) (f : _90768 -> _90775) (t : _90768 -> Prop) (u : _90775 -> Prop) (h1 : term1520 _90768 _90775 t f s x' u x) (h2 : term1465 _90768 _90775 x'' s x''' x'''' x''''' f t u) : (f x') = (term1713 _90768 _90775 x''''' f x').
Proof. exact (@lem3504262 _90768 _90775 x' x'' s x''' x'''' x''''' f t u h2 (@lem3504258 _90768 _90775 t f s x' u x h1)). Qed.
Lemma lem3504266 {_90768 _90775 : Type'} (x' : _90768) (x : _90775) (x'' : _90775 -> _90768) (s : _90768 -> Prop) (x''' : _90775 -> _90768) (x'''' : _90775 -> _90768) (x''''' : _90775 -> _90768) (f : _90768 -> _90775) (t : _90768 -> Prop) (u : _90775 -> Prop) (h1 : term1520 _90768 _90775 t f s x' u x) (h2 : term1465 _90768 _90775 x'' s x''' x'''' x''''' f t u) : term1714 _90768 _90775 x''''' f x'.
Proof. exact (fun h0 : term1715 _90768 _90775 x''''' f x' => @lem3504265 _90768 _90775 x' x x'' s x''' x'''' x''''' f t u h1 h2). Qed.
Lemma lem3504268 (p : Prop) : (term828 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem3504269 {_90768 _90775 : Type'} (x''''' : _90775 -> _90768) (f : _90768 -> _90775) (x' : _90768) : (term1714 _90768 _90775 x''''' f x') = ((f x') = (term1713 _90768 _90775 x''''' f x')).
Proof. exact (@lem3504268 ((f x') = (term1713 _90768 _90775 x''''' f x'))). Qed.
Lemma lem3504270 {_90768 _90775 : Type'} (x' : _90768) (x : _90775) (x'' : _90775 -> _90768) (s : _90768 -> Prop) (x''' : _90775 -> _90768) (x'''' : _90775 -> _90768) (x''''' : _90775 -> _90768) (f : _90768 -> _90775) (t : _90768 -> Prop) (u : _90775 -> Prop) (h1 : term1520 _90768 _90775 t f s x' u x) (h2 : term1465 _90768 _90775 x'' s x''' x'''' x''''' f t u) : (f x') = (term1713 _90768 _90775 x''''' f x').
Proof. exact (EQ_MP (@lem3504269 _90768 _90775 x''''' f x') (@lem3504266 _90768 _90775 x' x x'' s x''' x'''' x''''' f t u h1 h2)). Qed.
Lemma lem3504272 {_90775 : Type'} (x : _90775) : x = x.
Proof. exact (@lem21386 _90775 x). Qed.
Lemma lem3504273 {_90775 : Type'} (x : _90775) : x = x.
Proof. exact (@lem3504272 _90775 x). Qed.
Lemma lem3504274 {_90768 _90775 : Type'} (f : _90768 -> _90775) (x' : _90768) : (f x') = (f x').
Proof. exact (@lem3504273 _90775 (f x')). Qed.
Lemma lem3504275 {_90768 _90775 : Type'} (f : _90768 -> _90775) (x' : _90768) : term1673 _90768 _90775 f x'.
Proof. exact (fun h0 : term1674 _90768 _90775 f x' => @lem3504274 _90768 _90775 f x'). Qed.
Lemma lem3504277 (p : Prop) : (term828 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem3504278 {_90768 _90775 : Type'} (f : _90768 -> _90775) (x' : _90768) : (term1673 _90768 _90775 f x') = ((f x') = (f x')).
Proof. exact (@lem3504277 ((f x') = (f x'))). Qed.
Lemma lem3504279 {_90768 _90775 : Type'} (f : _90768 -> _90775) (x' : _90768) : (f x') = (f x').
Proof. exact (EQ_MP (@lem3504278 _90768 _90775 f x') (@lem3504275 _90768 _90775 f x')). Qed.
Lemma lem3504297 (q : Prop) (p : Prop) : (p \/ q) = (q \/ p).
Proof. exact (proj1 (@lem827 (@el Prop) p q)). Qed.
Lemma lem3504298 {_90775 : Type'} (y : _90775) (x : _90775) (z : _90775) : (term907 _90775 x y z) = (term908 _90775 y x z).
Proof. exact (@lem3504297 (y = z) (term909 _90775 x z)). Qed.
Lemma lem3504308 {_90775 : Type'} (x : _90775) (y : _90775) : (term910 _90775 x y) = (term910 _90775 x y).
Proof. exact (eq_refl (term910 _90775 x y)). Qed.
Lemma lem3504309 {_90775 : Type'} (y : _90775) (x : _90775) (z : _90775) : (term848 _90775 x y z) = (term911 _90775 y x z).
Proof. exact (MK_COMB (@lem3504308 _90775 x y) (@lem3504298 _90775 y x z)). Qed.
Lemma lem3504313 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem3504314 {_90775 : Type'} (y : _90775) (x : _90775) (z : _90775) : (term911 _90775 y x z) = (term912 _90775 y x z).
Proof. exact (@lem3504313 (y = z) (term909 _90775 x y) (term909 _90775 x z)). Qed.
Lemma lem3504336 {_90775 : Type'} (y : _90775) (x : _90775) (z : _90775) : (term848 _90775 x y z) = (term912 _90775 y x z).
Proof. exact (TRANS (@lem3504309 _90775 y x z) (@lem3504314 _90775 y x z)). Qed.
Lemma lem3504337 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem3504338 {_90775 : Type'} (y : _90775) (x : _90775) (z : _90775) : (term913 _90775 x y z) = (term914 _90775 y x z).
Proof. exact (MK_COMB (@lem3504337) (@lem3504336 _90775 y x z)). Qed.
Lemma lem3504360 {_90775 : Type'} (y : _90775) (x : _90775) (z : _90775) : (term912 _90775 y x z) = (term912 _90775 y x z).
Proof. exact (eq_refl (term912 _90775 y x z)). Qed.
Lemma lem3504361 {_90775 : Type'} (y : _90775) (x : _90775) (z : _90775) : ((term848 _90775 x y z) = (term912 _90775 y x z)) = ((term912 _90775 y x z) = (term912 _90775 y x z)).
Proof. exact (MK_COMB (@lem3504338 _90775 y x z) (@lem3504360 _90775 y x z)). Qed.
Lemma lem3504363 {A : Type'} (x : A) : (x = x) = True.
Proof. exact (EQ_MP (@lem20665 A x) (@lem20664 A x)). Qed.
Lemma lem3504364 (x : Prop) : (x = x) = True.
Proof. exact (@lem3504363 Prop x). Qed.
Lemma lem3504365 {_90775 : Type'} (y : _90775) (x : _90775) (z : _90775) : ((term912 _90775 y x z) = (term912 _90775 y x z)) = True.
Proof. exact (@lem3504364 (term912 _90775 y x z)). Qed.
Lemma lem3504366 {_90775 : Type'} (y : _90775) (x : _90775) (z : _90775) : ((term848 _90775 x y z) = (term912 _90775 y x z)) = True.
Proof. exact (TRANS (@lem3504361 _90775 y x z) (@lem3504365 _90775 y x z)). Qed.
Lemma lem3504367 {_90775 : Type'} (y : _90775) (x : _90775) (z : _90775) : True = ((term848 _90775 x y z) = (term912 _90775 y x z)).
Proof. exact (SYM (@lem3504366 _90775 y x z)). Qed.
Lemma lem3504368 {_90775 : Type'} (y : _90775) (x : _90775) (z : _90775) : (term848 _90775 x y z) = (term912 _90775 y x z).
Proof. exact (EQ_MP (@lem3504367 _90775 y x z) (@lem0)). Qed.
Lemma lem3504369 {_90775 : Type'} (y : _90775) (x : _90775) (z : _90775) : term912 _90775 y x z.
Proof. exact (EQ_MP (@lem3504368 _90775 y x z) (@lem3504003 _90775 x y z)). Qed.
Lemma lem3504371 (b : Prop) (a : Prop) : (a \/ b) = (term833 b a).
Proof. exact (EQ_MP (@lem20682 b a) (@lem20764 b a)). Qed.
Lemma lem3504372 {_90775 : Type'} (x : _90775) (y : _90775) (z : _90775) : (term912 _90775 y x z) = (term915 _90775 x y z).
Proof. exact (@lem3504371 (term916 _90775 y x z) (y = z)). Qed.
Lemma lem3504374 (a : Prop) (b : Prop) : (term887 a b) = (term888 a b).
Proof. exact (EQ_MP (@lem20789 a b) (@lem20895 a b)). Qed.
Lemma lem3504375 {_90775 : Type'} (y : _90775) (x : _90775) (z : _90775) : (term917 _90775 y x z) = (term918 _90775 y x z).
Proof. exact (@lem3504374 (term909 _90775 x y) (term909 _90775 x z)). Qed.
Lemma lem3504377 (a : Prop) : (term282 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem3504378 {_90775 : Type'} (x : _90775) (y : _90775) : (term919 _90775 x y) = (x = y).
Proof. exact (@lem3504377 (x = y)). Qed.
Lemma lem3504379 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem3504380 {_90775 : Type'} (x : _90775) (y : _90775) : (term920 _90775 x y) = (term921 _90775 x y).
Proof. exact (MK_COMB (@lem3504379) (@lem3504378 _90775 x y)). Qed.
Lemma lem3504382 (a : Prop) : (term282 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem3504383 {_90775 : Type'} (x : _90775) (z : _90775) : (term919 _90775 x z) = (x = z).
Proof. exact (@lem3504382 (x = z)). Qed.
Lemma lem3504384 {_90775 : Type'} (y : _90775) (x : _90775) (z : _90775) : (term918 _90775 y x z) = (term922 _90775 y x z).
Proof. exact (MK_COMB (@lem3504380 _90775 x y) (@lem3504383 _90775 x z)). Qed.
Lemma lem3504385 {_90775 : Type'} (y : _90775) (x : _90775) (z : _90775) : (term917 _90775 y x z) = (term922 _90775 y x z).
Proof. exact (TRANS (@lem3504375 _90775 y x z) (@lem3504384 _90775 y x z)). Qed.
Lemma lem3504386 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem3504387 {_90775 : Type'} (y : _90775) (x : _90775) (z : _90775) : (term923 _90775 y x z) = (term924 _90775 y x z).
Proof. exact (MK_COMB (@lem3504386) (@lem3504385 _90775 y x z)). Qed.
Lemma lem3504388 {_90775 : Type'} (y : _90775) (z : _90775) : (y = z) = (y = z).
Proof. exact (eq_refl (y = z)). Qed.
Lemma lem3504389 {_90775 : Type'} (x : _90775) (y : _90775) (z : _90775) : (term915 _90775 x y z) = (term925 _90775 x y z).
Proof. exact (MK_COMB (@lem3504387 _90775 y x z) (@lem3504388 _90775 y z)). Qed.
Lemma lem3504390 {_90775 : Type'} (x : _90775) (y : _90775) (z : _90775) : (term912 _90775 y x z) = (term925 _90775 x y z).
Proof. exact (TRANS (@lem3504372 _90775 x y z) (@lem3504389 _90775 x y z)). Qed.
Lemma lem3504392 {_90768 _90775 : Type'} (x' : _90768) (x : _90775) (x'' : _90775 -> _90768) (s : _90768 -> Prop) (x''' : _90775 -> _90768) (x'''' : _90775 -> _90768) (x''''' : _90775 -> _90768) (f : _90768 -> _90775) (t : _90768 -> Prop) (u : _90775 -> Prop) (h1 : term1520 _90768 _90775 t f s x' u x) (h2 : term1465 _90768 _90775 x'' s x''' x'''' x''''' f t u) : term1742 _90768 _90775 x''''' f x'.
Proof. exact (conj (@lem3504270 _90768 _90775 x' x x'' s x''' x'''' x''''' f t u h1 h2) (@lem3504279 _90768 _90775 f x')). Qed.
Lemma lem3504394 {_90775 : Type'} (x : _90775) (y : _90775) (z : _90775) : term925 _90775 x y z.
Proof. exact (EQ_MP (@lem3504390 _90775 x y z) (@lem3504369 _90775 y x z)). Qed.
Lemma lem3504395 {_90775 : Type'} (x : _90775) (y : _90775) (z : _90775) : term925 _90775 x y z.
Proof. exact (@lem3504394 _90775 x y z). Qed.
Lemma lem3504396 {_90768 _90775 : Type'} (x''''' : _90775 -> _90768) (f : _90768 -> _90775) (x' : _90768) : term1743 _90768 _90775 x''''' f x'.
Proof. exact (@lem3504395 _90775 (f x') (term1713 _90768 _90775 x''''' f x') (f x')). Qed.
Lemma lem3504399 {_90768 _90775 : Type'} (x' : _90768) (x : _90775) (x'' : _90775 -> _90768) (s : _90768 -> Prop) (x''' : _90775 -> _90768) (x'''' : _90775 -> _90768) (x''''' : _90775 -> _90768) (f : _90768 -> _90775) (t : _90768 -> Prop) (u : _90775 -> Prop) (h1 : term1520 _90768 _90775 t f s x' u x) (h2 : term1465 _90768 _90775 x'' s x''' x'''' x''''' f t u) : (term1713 _90768 _90775 x''''' f x') = (f x').
Proof. exact (@lem3504396 _90768 _90775 x''''' f x' (@lem3504392 _90768 _90775 x' x x'' s x''' x'''' x''''' f t u h1 h2)). Qed.
Lemma lem3504400 {_90768 _90775 : Type'} (x' : _90768) (x : _90775) (x'' : _90775 -> _90768) (s : _90768 -> Prop) (x''' : _90775 -> _90768) (x'''' : _90775 -> _90768) (x''''' : _90775 -> _90768) (f : _90768 -> _90775) (t : _90768 -> Prop) (u : _90775 -> Prop) (h1 : term1520 _90768 _90775 t f s x' u x) (h2 : term1465 _90768 _90775 x'' s x''' x'''' x''''' f t u) : term1744 _90768 _90775 x''''' f x'.
Proof. exact (fun h0 : term1745 _90768 _90775 x''''' f x' => @lem3504399 _90768 _90775 x' x x'' s x''' x'''' x''''' f t u h1 h2). Qed.
Lemma lem3504402 (p : Prop) : (term828 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem3504403 {_90768 _90775 : Type'} (x''''' : _90775 -> _90768) (f : _90768 -> _90775) (x' : _90768) : (term1744 _90768 _90775 x''''' f x') = ((term1713 _90768 _90775 x''''' f x') = (f x')).
Proof. exact (@lem3504402 ((term1713 _90768 _90775 x''''' f x') = (f x'))). Qed.
Lemma lem3504404 {_90768 _90775 : Type'} (x' : _90768) (x : _90775) (x'' : _90775 -> _90768) (s : _90768 -> Prop) (x''' : _90775 -> _90768) (x'''' : _90775 -> _90768) (x''''' : _90775 -> _90768) (f : _90768 -> _90775) (t : _90768 -> Prop) (u : _90775 -> Prop) (h1 : term1520 _90768 _90775 t f s x' u x) (h2 : term1465 _90768 _90775 x'' s x''' x'''' x''''' f t u) : (term1713 _90768 _90775 x''''' f x') = (f x').
Proof. exact (EQ_MP (@lem3504403 _90768 _90775 x''''' f x') (@lem3504400 _90768 _90775 x' x x'' s x''' x'''' x''''' f t u h1 h2)). Qed.
Lemma lem3504410 (q : Prop) (p : Prop) : (p \/ q) = (q \/ p).
Proof. exact (proj1 (@lem827 (@el Prop) p q)). Qed.
Lemma lem3504411 {_90768 _90775 : Type'} (x'' : _90775 -> _90768) (_37127 : _90775) (_37128 : _90775) : (term1708 _90768 _90775 _37127 x'' _37128) = (term1746 _90768 _90775 x'' _37127 _37128).
Proof. exact (@lem3504410 ((x'' _37127) = (x'' _37128)) (term909 _90775 _37127 _37128)). Qed.
Lemma lem3504421 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem3504422 {_90768 _90775 : Type'} (x'' : _90775 -> _90768) (_37127 : _90775) (_37128 : _90775) : (term1747 _90768 _90775 _37127 x'' _37128) = (term1748 _90768 _90775 x'' _37127 _37128).
Proof. exact (MK_COMB (@lem3504421) (@lem3504411 _90768 _90775 x'' _37127 _37128)). Qed.
Lemma lem3504432 {_90768 _90775 : Type'} (x'' : _90775 -> _90768) (_37127 : _90775) (_37128 : _90775) : (term1746 _90768 _90775 x'' _37127 _37128) = (term1746 _90768 _90775 x'' _37127 _37128).
Proof. exact (eq_refl (term1746 _90768 _90775 x'' _37127 _37128)). Qed.
Lemma lem3504433 {_90768 _90775 : Type'} (x'' : _90775 -> _90768) (_37127 : _90775) (_37128 : _90775) : ((term1708 _90768 _90775 _37127 x'' _37128) = (term1746 _90768 _90775 x'' _37127 _37128)) = ((term1746 _90768 _90775 x'' _37127 _37128) = (term1746 _90768 _90775 x'' _37127 _37128)).
Proof. exact (MK_COMB (@lem3504422 _90768 _90775 x'' _37127 _37128) (@lem3504432 _90768 _90775 x'' _37127 _37128)). Qed.
Lemma lem3504435 {A : Type'} (x : A) : (x = x) = True.
Proof. exact (EQ_MP (@lem20665 A x) (@lem20664 A x)). Qed.
Lemma lem3504436 (x : Prop) : (x = x) = True.
Proof. exact (@lem3504435 Prop x). Qed.
Lemma lem3504437 {_90768 _90775 : Type'} (x'' : _90775 -> _90768) (_37127 : _90775) (_37128 : _90775) : ((term1746 _90768 _90775 x'' _37127 _37128) = (term1746 _90768 _90775 x'' _37127 _37128)) = True.
Proof. exact (@lem3504436 (term1746 _90768 _90775 x'' _37127 _37128)). Qed.
Lemma lem3504438 {_90768 _90775 : Type'} (x'' : _90775 -> _90768) (_37127 : _90775) (_37128 : _90775) : ((term1708 _90768 _90775 _37127 x'' _37128) = (term1746 _90768 _90775 x'' _37127 _37128)) = True.
Proof. exact (TRANS (@lem3504433 _90768 _90775 x'' _37127 _37128) (@lem3504437 _90768 _90775 x'' _37127 _37128)). Qed.
Lemma lem3504439 {_90768 _90775 : Type'} (x'' : _90775 -> _90768) (_37127 : _90775) (_37128 : _90775) : True = ((term1708 _90768 _90775 _37127 x'' _37128) = (term1746 _90768 _90775 x'' _37127 _37128)).
Proof. exact (SYM (@lem3504438 _90768 _90775 x'' _37127 _37128)). Qed.
Lemma lem3504440 {_90768 _90775 : Type'} (x'' : _90775 -> _90768) (_37127 : _90775) (_37128 : _90775) : (term1708 _90768 _90775 _37127 x'' _37128) = (term1746 _90768 _90775 x'' _37127 _37128).
Proof. exact (EQ_MP (@lem3504439 _90768 _90775 x'' _37127 _37128) (@lem0)). Qed.
Lemma lem3504441 {_90768 _90775 : Type'} (x'' : _90775 -> _90768) (_37127 : _90775) (_37128 : _90775) : term1746 _90768 _90775 x'' _37127 _37128.
Proof. exact (EQ_MP (@lem3504440 _90768 _90775 x'' _37127 _37128) (@lem3503977 _90768 _90775 _37127 x'' _37128)). Qed.
Lemma lem3504443 (b : Prop) (a : Prop) : (a \/ b) = (term833 b a).
Proof. exact (EQ_MP (@lem20682 b a) (@lem20764 b a)). Qed.
Lemma lem3504444 {_90768 _90775 : Type'} (_37127 : _90775) (x'' : _90775 -> _90768) (_37128 : _90775) : (term1746 _90768 _90775 x'' _37127 _37128) = (term1749 _90768 _90775 _37127 x'' _37128).
Proof. exact (@lem3504443 (term909 _90775 _37127 _37128) ((x'' _37127) = (x'' _37128))). Qed.
Lemma lem3504446 (a : Prop) : (term282 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem3504447 {_90775 : Type'} (_37127 : _90775) (_37128 : _90775) : (term919 _90775 _37127 _37128) = (_37127 = _37128).
Proof. exact (@lem3504446 (_37127 = _37128)). Qed.
Lemma lem3504448 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem3504449 {_90775 : Type'} (_37127 : _90775) (_37128 : _90775) : (term1750 _90775 _37127 _37128) = (term1751 _90775 _37127 _37128).
Proof. exact (MK_COMB (@lem3504448) (@lem3504447 _90775 _37127 _37128)). Qed.
Lemma lem3504450 {_90768 _90775 : Type'} (_37127 : _90775) (x'' : _90775 -> _90768) (_37128 : _90775) : ((x'' _37127) = (x'' _37128)) = ((x'' _37127) = (x'' _37128)).
Proof. exact (eq_refl ((x'' _37127) = (x'' _37128))). Qed.
Lemma lem3504451 {_90768 _90775 : Type'} (_37127 : _90775) (x'' : _90775 -> _90768) (_37128 : _90775) : (term1749 _90768 _90775 _37127 x'' _37128) = (term1707 _90768 _90775 _37127 x'' _37128).
Proof. exact (MK_COMB (@lem3504449 _90775 _37127 _37128) (@lem3504450 _90768 _90775 _37127 x'' _37128)). Qed.
Lemma lem3504452 {_90768 _90775 : Type'} (_37127 : _90775) (x'' : _90775 -> _90768) (_37128 : _90775) : (term1746 _90768 _90775 x'' _37127 _37128) = (term1707 _90768 _90775 _37127 x'' _37128).
Proof. exact (TRANS (@lem3504444 _90768 _90775 _37127 x'' _37128) (@lem3504451 _90768 _90775 _37127 x'' _37128)). Qed.
Lemma lem3504455 {_90768 _90775 : Type'} (_37127 : _90775) (x'' : _90775 -> _90768) (_37128 : _90775) : term1707 _90768 _90775 _37127 x'' _37128.
Proof. exact (EQ_MP (@lem3504452 _90768 _90775 _37127 x'' _37128) (@lem3504441 _90768 _90775 x'' _37127 _37128)). Qed.
Lemma lem3504456 {_90768 _90775 : Type'} (_37127 : _90775) (x'' : _90775 -> _90768) (_37128 : _90775) : term1707 _90768 _90775 _37127 x'' _37128.
Proof. exact (@lem3504455 _90768 _90775 _37127 x'' _37128). Qed.
Lemma lem3504457 {_90768 _90775 : Type'} (x''''' : _90775 -> _90768) (x'' : _90775 -> _90768) (f : _90768 -> _90775) (x' : _90768) : term1752 _90768 _90775 x''''' x'' f x'.
Proof. exact (@lem3504456 _90768 _90775 (term1713 _90768 _90775 x''''' f x') x'' (f x')). Qed.
Lemma lem3504460 {_90768 _90775 : Type'} (x' : _90768) (x : _90775) (x'' : _90775 -> _90768) (s : _90768 -> Prop) (x''' : _90775 -> _90768) (x'''' : _90775 -> _90768) (x''''' : _90775 -> _90768) (f : _90768 -> _90775) (t : _90768 -> Prop) (u : _90775 -> Prop) (h1 : term1520 _90768 _90775 t f s x' u x) (h2 : term1465 _90768 _90775 x'' s x''' x'''' x''''' f t u) : (term1753 _90768 _90775 x'' x''''' f x') = (term1738 _90768 _90775 x'' f x').
Proof. exact (@lem3504457 _90768 _90775 x''''' x'' f x' (@lem3504404 _90768 _90775 x' x x'' s x''' x'''' x''''' f t u h1 h2)). Qed.
Lemma lem3504461 {_90768 _90775 : Type'} (x' : _90768) (x : _90775) (x'' : _90775 -> _90768) (s : _90768 -> Prop) (x''' : _90775 -> _90768) (x'''' : _90775 -> _90768) (x''''' : _90775 -> _90768) (f : _90768 -> _90775) (t : _90768 -> Prop) (u : _90775 -> Prop) (h1 : term1520 _90768 _90775 t f s x' u x) (h2 : term1465 _90768 _90775 x'' s x''' x'''' x''''' f t u) : term1754 _90768 _90775 x''''' x'' f x'.
Proof. exact (fun h0 : term1755 _90768 _90775 x''''' x'' f x' => @lem3504460 _90768 _90775 x' x x'' s x''' x'''' x''''' f t u h1 h2). Qed.
Lemma lem3504463 (p : Prop) : (term828 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem3504464 {_90768 _90775 : Type'} (x''''' : _90775 -> _90768) (x'' : _90775 -> _90768) (f : _90768 -> _90775) (x' : _90768) : (term1754 _90768 _90775 x''''' x'' f x') = ((term1753 _90768 _90775 x'' x''''' f x') = (term1738 _90768 _90775 x'' f x')).
Proof. exact (@lem3504463 ((term1753 _90768 _90775 x'' x''''' f x') = (term1738 _90768 _90775 x'' f x'))). Qed.
Lemma lem3504465 {_90768 _90775 : Type'} (x' : _90768) (x : _90775) (x'' : _90775 -> _90768) (s : _90768 -> Prop) (x''' : _90775 -> _90768) (x'''' : _90775 -> _90768) (x''''' : _90775 -> _90768) (f : _90768 -> _90775) (t : _90768 -> Prop) (u : _90775 -> Prop) (h1 : term1520 _90768 _90775 t f s x' u x) (h2 : term1465 _90768 _90775 x'' s x''' x'''' x''''' f t u) : (term1753 _90768 _90775 x'' x''''' f x') = (term1738 _90768 _90775 x'' f x').
Proof. exact (EQ_MP (@lem3504464 _90768 _90775 x''''' x'' f x') (@lem3504461 _90768 _90775 x' x x'' s x''' x'''' x''''' f t u h1 h2)). Qed.
Lemma lem3504467 {_90768 _90775 : Type'} (t : _90768 -> Prop) (f : _90768 -> _90775) (s : _90768 -> Prop) (x' : _90768) (u : _90775 -> Prop) (x : _90775) (h1 : term1520 _90768 _90775 t f s x' u x) : term1668 _90768 _90775 u f x'.
Proof. exact (EQ_MP (@lem3503420 _90768 _90775 t f s x' u x h1) (@lem3502829 _90768 _90775 t f s x' u x h1)). Qed.
Lemma lem3504468 {_90768 _90775 : Type'} (t : _90768 -> Prop) (f : _90768 -> _90775) (s : _90768 -> Prop) (x' : _90768) (u : _90775 -> Prop) (x : _90775) (h1 : term1520 _90768 _90775 t f s x' u x) : term1699 _90768 _90775 u f x'.
Proof. exact (fun h0 : term1656 _90768 _90775 u f x' => @lem3504467 _90768 _90775 t f s x' u x h1). Qed.
Lemma lem3504470 (p : Prop) : (term828 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem3504471 {_90768 _90775 : Type'} (u : _90775 -> Prop) (f : _90768 -> _90775) (x' : _90768) : (term1699 _90768 _90775 u f x') = (term1668 _90768 _90775 u f x').
Proof. exact (@lem3504470 (term1668 _90768 _90775 u f x')). Qed.
Lemma lem3504472 {_90768 _90775 : Type'} (t : _90768 -> Prop) (f : _90768 -> _90775) (s : _90768 -> Prop) (x' : _90768) (u : _90775 -> Prop) (x : _90775) (h1 : term1520 _90768 _90775 t f s x' u x) : term1668 _90768 _90775 u f x'.
Proof. exact (EQ_MP (@lem3504471 _90768 _90775 u f x') (@lem3504468 _90768 _90775 t f s x' u x h1)). Qed.
Lemma lem3504474 {_90768 _90775 : Type'} (_36994 : _90775) (x'' : _90775 -> _90768) (s : _90768 -> Prop) (x''' : _90775 -> _90768) (x'''' : _90775 -> _90768) (x''''' : _90775 -> _90768) (f : _90768 -> _90775) (t : _90768 -> Prop) (u : _90775 -> Prop) (h1 : term1465 _90768 _90775 x'' s x''' x'''' x''''' f t u) : term1711 _90768 _90775 u f x''''' _36994.
Proof. exact (EQ_MP (@lem3504039 _90768 _90775 u f x''''' _36994) (@lem3503547 _90768 _90775 _36994 x'' s x''' x'''' x''''' f t u h1)). Qed.
Lemma lem3504475 {_90768 _90775 : Type'} (_36994 : _90775) (x'' : _90775 -> _90768) (s : _90768 -> Prop) (x''' : _90775 -> _90768) (x'''' : _90775 -> _90768) (x''''' : _90775 -> _90768) (f : _90768 -> _90775) (t : _90768 -> Prop) (u : _90775 -> Prop) (h1 : term1465 _90768 _90775 x'' s x''' x'''' x''''' f t u) : term1711 _90768 _90775 u f x''''' _36994.
Proof. exact (@lem3504474 _90768 _90775 _36994 x'' s x''' x'''' x''''' f t u h1). Qed.
Lemma lem3504476 {_90768 _90775 : Type'} (x' : _90768) (x'' : _90775 -> _90768) (s : _90768 -> Prop) (x''' : _90775 -> _90768) (x'''' : _90775 -> _90768) (x''''' : _90775 -> _90768) (f : _90768 -> _90775) (t : _90768 -> Prop) (u : _90775 -> Prop) (h1 : term1465 _90768 _90775 x'' s x''' x'''' x''''' f t u) : term1712 _90768 _90775 u x''''' f x'.
Proof. exact (@lem3504475 _90768 _90775 (f x') x'' s x''' x'''' x''''' f t u h1). Qed.
Lemma lem3504479 {_90768 _90775 : Type'} (x' : _90768) (x : _90775) (x'' : _90775 -> _90768) (s : _90768 -> Prop) (x''' : _90775 -> _90768) (x'''' : _90775 -> _90768) (x''''' : _90775 -> _90768) (f : _90768 -> _90775) (t : _90768 -> Prop) (u : _90775 -> Prop) (h1 : term1520 _90768 _90775 t f s x' u x) (h2 : term1465 _90768 _90775 x'' s x''' x'''' x''''' f t u) : (f x') = (term1713 _90768 _90775 x''''' f x').
Proof. exact (@lem3504476 _90768 _90775 x' x'' s x''' x'''' x''''' f t u h2 (@lem3504472 _90768 _90775 t f s x' u x h1)). Qed.
Lemma lem3504480 {_90768 _90775 : Type'} (x' : _90768) (x : _90775) (x'' : _90775 -> _90768) (s : _90768 -> Prop) (x''' : _90775 -> _90768) (x'''' : _90775 -> _90768) (x''''' : _90775 -> _90768) (f : _90768 -> _90775) (t : _90768 -> Prop) (u : _90775 -> Prop) (h1 : term1520 _90768 _90775 t f s x' u x) (h2 : term1465 _90768 _90775 x'' s x''' x'''' x''''' f t u) : term1714 _90768 _90775 x''''' f x'.
Proof. exact (fun h0 : term1715 _90768 _90775 x''''' f x' => @lem3504479 _90768 _90775 x' x x'' s x''' x'''' x''''' f t u h1 h2). Qed.
Lemma lem3504482 (p : Prop) : (term828 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem3504483 {_90768 _90775 : Type'} (x''''' : _90775 -> _90768) (f : _90768 -> _90775) (x' : _90768) : (term1714 _90768 _90775 x''''' f x') = ((f x') = (term1713 _90768 _90775 x''''' f x')).
Proof. exact (@lem3504482 ((f x') = (term1713 _90768 _90775 x''''' f x'))). Qed.
Lemma lem3504484 {_90768 _90775 : Type'} (x' : _90768) (x : _90775) (x'' : _90775 -> _90768) (s : _90768 -> Prop) (x''' : _90775 -> _90768) (x'''' : _90775 -> _90768) (x''''' : _90775 -> _90768) (f : _90768 -> _90775) (t : _90768 -> Prop) (u : _90775 -> Prop) (h1 : term1520 _90768 _90775 t f s x' u x) (h2 : term1465 _90768 _90775 x'' s x''' x'''' x''''' f t u) : (f x') = (term1713 _90768 _90775 x''''' f x').
Proof. exact (EQ_MP (@lem3504483 _90768 _90775 x''''' f x') (@lem3504480 _90768 _90775 x' x x'' s x''' x'''' x''''' f t u h1 h2)). Qed.
Lemma lem3504486 {_90775 : Type'} (x : _90775) : x = x.
Proof. exact (@lem21386 _90775 x). Qed.
Lemma lem3504487 {_90775 : Type'} (x : _90775) : x = x.
Proof. exact (@lem3504486 _90775 x). Qed.
Lemma lem3504488 {_90768 _90775 : Type'} (f : _90768 -> _90775) (x' : _90768) : (f x') = (f x').
Proof. exact (@lem3504487 _90775 (f x')). Qed.
Lemma lem3504489 {_90768 _90775 : Type'} (f : _90768 -> _90775) (x' : _90768) : term1673 _90768 _90775 f x'.
Proof. exact (fun h0 : term1674 _90768 _90775 f x' => @lem3504488 _90768 _90775 f x'). Qed.
Lemma lem3504491 (p : Prop) : (term828 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem3504492 {_90768 _90775 : Type'} (f : _90768 -> _90775) (x' : _90768) : (term1673 _90768 _90775 f x') = ((f x') = (f x')).
Proof. exact (@lem3504491 ((f x') = (f x'))). Qed.
Lemma lem3504493 {_90768 _90775 : Type'} (f : _90768 -> _90775) (x' : _90768) : (f x') = (f x').
Proof. exact (EQ_MP (@lem3504492 _90768 _90775 f x') (@lem3504489 _90768 _90775 f x')). Qed.
Lemma lem3504494 {_90768 _90775 : Type'} (x' : _90768) (x : _90775) (x'' : _90775 -> _90768) (s : _90768 -> Prop) (x''' : _90775 -> _90768) (x'''' : _90775 -> _90768) (x''''' : _90775 -> _90768) (f : _90768 -> _90775) (t : _90768 -> Prop) (u : _90775 -> Prop) (h1 : term1520 _90768 _90775 t f s x' u x) (h2 : term1465 _90768 _90775 x'' s x''' x'''' x''''' f t u) : term1742 _90768 _90775 x''''' f x'.
Proof. exact (conj (@lem3504484 _90768 _90775 x' x x'' s x''' x'''' x''''' f t u h1 h2) (@lem3504493 _90768 _90775 f x')). Qed.
Lemma lem3504496 {_90775 : Type'} (x : _90775) (y : _90775) (z : _90775) : term925 _90775 x y z.
Proof. exact (EQ_MP (@lem3504390 _90775 x y z) (@lem3504369 _90775 y x z)). Qed.
Lemma lem3504497 {_90775 : Type'} (x : _90775) (y : _90775) (z : _90775) : term925 _90775 x y z.
Proof. exact (@lem3504496 _90775 x y z). Qed.
Lemma lem3504498 {_90768 _90775 : Type'} (x''''' : _90775 -> _90768) (f : _90768 -> _90775) (x' : _90768) : term1743 _90768 _90775 x''''' f x'.
Proof. exact (@lem3504497 _90775 (f x') (term1713 _90768 _90775 x''''' f x') (f x')). Qed.
Lemma lem3504501 {_90768 _90775 : Type'} (x' : _90768) (x : _90775) (x'' : _90775 -> _90768) (s : _90768 -> Prop) (x''' : _90775 -> _90768) (x'''' : _90775 -> _90768) (x''''' : _90775 -> _90768) (f : _90768 -> _90775) (t : _90768 -> Prop) (u : _90775 -> Prop) (h1 : term1520 _90768 _90775 t f s x' u x) (h2 : term1465 _90768 _90775 x'' s x''' x'''' x''''' f t u) : (term1713 _90768 _90775 x''''' f x') = (f x').
Proof. exact (@lem3504498 _90768 _90775 x''''' f x' (@lem3504494 _90768 _90775 x' x x'' s x''' x'''' x''''' f t u h1 h2)). Qed.
Lemma lem3504502 {_90768 _90775 : Type'} (x' : _90768) (x : _90775) (x'' : _90775 -> _90768) (s : _90768 -> Prop) (x''' : _90775 -> _90768) (x'''' : _90775 -> _90768) (x''''' : _90775 -> _90768) (f : _90768 -> _90775) (t : _90768 -> Prop) (u : _90775 -> Prop) (h1 : term1520 _90768 _90775 t f s x' u x) (h2 : term1465 _90768 _90775 x'' s x''' x'''' x''''' f t u) : term1744 _90768 _90775 x''''' f x'.
Proof. exact (fun h0 : term1745 _90768 _90775 x''''' f x' => @lem3504501 _90768 _90775 x' x x'' s x''' x'''' x''''' f t u h1 h2). Qed.
Lemma lem3504504 (p : Prop) : (term828 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem3504505 {_90768 _90775 : Type'} (x''''' : _90775 -> _90768) (f : _90768 -> _90775) (x' : _90768) : (term1744 _90768 _90775 x''''' f x') = ((term1713 _90768 _90775 x''''' f x') = (f x')).
Proof. exact (@lem3504504 ((term1713 _90768 _90775 x''''' f x') = (f x'))). Qed.
Lemma lem3504506 {_90768 _90775 : Type'} (x' : _90768) (x : _90775) (x'' : _90775 -> _90768) (s : _90768 -> Prop) (x''' : _90775 -> _90768) (x'''' : _90775 -> _90768) (x''''' : _90775 -> _90768) (f : _90768 -> _90775) (t : _90768 -> Prop) (u : _90775 -> Prop) (h1 : term1520 _90768 _90775 t f s x' u x) (h2 : term1465 _90768 _90775 x'' s x''' x'''' x''''' f t u) : (term1713 _90768 _90775 x''''' f x') = (f x').
Proof. exact (EQ_MP (@lem3504505 _90768 _90775 x''''' f x') (@lem3504502 _90768 _90775 x' x x'' s x''' x'''' x''''' f t u h1 h2)). Qed.
Lemma lem3504508 {_90768 _90775 : Type'} (t : _90768 -> Prop) (f : _90768 -> _90775) (s : _90768 -> Prop) (x' : _90768) (u : _90775 -> Prop) (x : _90775) (h1 : term1520 _90768 _90775 t f s x' u x) : s x'.
Proof. exact (proj2 (@lem3501358 _90768 _90775 t f s x' u x h1)). Qed.
Lemma lem3504509 {_90768 _90775 : Type'} (t : _90768 -> Prop) (f : _90768 -> _90775) (s : _90768 -> Prop) (x' : _90768) (u : _90775 -> Prop) (x : _90775) (h1 : term1520 _90768 _90775 t f s x' u x) : term1675 _90768 s x'.
Proof. exact (fun h0 : term618 _90768 s x' => @lem3504508 _90768 _90775 t f s x' u x h1). Qed.
Lemma lem3504511 (p : Prop) : (term828 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem3504512 {_90768 : Type'} (s : _90768 -> Prop) (x' : _90768) : (term1675 _90768 s x') = (s x').
Proof. exact (@lem3504511 (s x')). Qed.
Lemma lem3504513 {_90768 _90775 : Type'} (t : _90768 -> Prop) (f : _90768 -> _90775) (s : _90768 -> Prop) (x' : _90768) (u : _90775 -> Prop) (x : _90775) (h1 : term1520 _90768 _90775 t f s x' u x) : s x'.
Proof. exact (EQ_MP (@lem3504512 _90768 s x') (@lem3504509 _90768 _90775 t f s x' u x h1)). Qed.
Lemma lem3504515 {_90775 : Type'} (x : _90775) : x = x.
Proof. exact (@lem21386 _90775 x). Qed.
Lemma lem3504516 {_90775 : Type'} (x : _90775) : x = x.
Proof. exact (@lem3504515 _90775 x). Qed.
Lemma lem3504517 {_90768 _90775 : Type'} (x''''' : _90775 -> _90768) (f : _90768 -> _90775) (x' : _90768) : (term1713 _90768 _90775 x''''' f x') = (term1713 _90768 _90775 x''''' f x').
Proof. exact (@lem3504516 _90775 (term1713 _90768 _90775 x''''' f x')). Qed.
Lemma lem3504518 {_90768 _90775 : Type'} (x''''' : _90775 -> _90768) (f : _90768 -> _90775) (x' : _90768) : term1756 _90768 _90775 x''''' f x'.
Proof. exact (fun h0 : term1757 _90768 _90775 x''''' f x' => @lem3504517 _90768 _90775 x''''' f x'). Qed.
Lemma lem3504520 (p : Prop) : (term828 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem3504521 {_90768 _90775 : Type'} (x''''' : _90775 -> _90768) (f : _90768 -> _90775) (x' : _90768) : (term1756 _90768 _90775 x''''' f x') = ((term1713 _90768 _90775 x''''' f x') = (term1713 _90768 _90775 x''''' f x')).
Proof. exact (@lem3504520 ((term1713 _90768 _90775 x''''' f x') = (term1713 _90768 _90775 x''''' f x'))). Qed.
Lemma lem3504522 {_90768 _90775 : Type'} (x''''' : _90775 -> _90768) (f : _90768 -> _90775) (x' : _90768) : (term1713 _90768 _90775 x''''' f x') = (term1713 _90768 _90775 x''''' f x').
Proof. exact (EQ_MP (@lem3504521 _90768 _90775 x''''' f x') (@lem3504518 _90768 _90775 x''''' f x')). Qed.
Lemma lem3504524 {_90768 _90775 : Type'} (t : _90768 -> Prop) (f : _90768 -> _90775) (s : _90768 -> Prop) (x' : _90768) (u : _90775 -> Prop) (x : _90775) (h1 : term1520 _90768 _90775 t f s x' u x) : term1668 _90768 _90775 u f x'.
Proof. exact (EQ_MP (@lem3503420 _90768 _90775 t f s x' u x h1) (@lem3502829 _90768 _90775 t f s x' u x h1)). Qed.
Lemma lem3504525 {_90768 _90775 : Type'} (t : _90768 -> Prop) (f : _90768 -> _90775) (s : _90768 -> Prop) (x' : _90768) (u : _90775 -> Prop) (x : _90775) (h1 : term1520 _90768 _90775 t f s x' u x) : term1699 _90768 _90775 u f x'.
Proof. exact (fun h0 : term1656 _90768 _90775 u f x' => @lem3504524 _90768 _90775 t f s x' u x h1). Qed.
Lemma lem3504527 (p : Prop) : (term828 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem3504528 {_90768 _90775 : Type'} (u : _90775 -> Prop) (f : _90768 -> _90775) (x' : _90768) : (term1699 _90768 _90775 u f x') = (term1668 _90768 _90775 u f x').
Proof. exact (@lem3504527 (term1668 _90768 _90775 u f x')). Qed.
Lemma lem3504529 {_90768 _90775 : Type'} (t : _90768 -> Prop) (f : _90768 -> _90775) (s : _90768 -> Prop) (x' : _90768) (u : _90775 -> Prop) (x : _90775) (h1 : term1520 _90768 _90775 t f s x' u x) : term1668 _90768 _90775 u f x'.
Proof. exact (EQ_MP (@lem3504528 _90768 _90775 u f x') (@lem3504525 _90768 _90775 t f s x' u x h1)). Qed.
Lemma lem3504531 {_90768 _90775 : Type'} (_36994 : _90775) (x'' : _90775 -> _90768) (s : _90768 -> Prop) (x''' : _90775 -> _90768) (x'''' : _90775 -> _90768) (x''''' : _90775 -> _90768) (f : _90768 -> _90775) (t : _90768 -> Prop) (u : _90775 -> Prop) (h1 : term1465 _90768 _90775 x'' s x''' x'''' x''''' f t u) : term1717 _90768 _90775 u t x''''' _36994.
Proof. exact (EQ_MP (@lem3504070 _90768 _90775 u t x''''' _36994) (@lem3503561 _90768 _90775 _36994 x'' s x''' x'''' x''''' f t u h1)). Qed.
Lemma lem3504532 {_90768 _90775 : Type'} (_36994 : _90775) (x'' : _90775 -> _90768) (s : _90768 -> Prop) (x''' : _90775 -> _90768) (x'''' : _90775 -> _90768) (x''''' : _90775 -> _90768) (f : _90768 -> _90775) (t : _90768 -> Prop) (u : _90775 -> Prop) (h1 : term1465 _90768 _90775 x'' s x''' x'''' x''''' f t u) : term1717 _90768 _90775 u t x''''' _36994.
Proof. exact (@lem3504531 _90768 _90775 _36994 x'' s x''' x'''' x''''' f t u h1). Qed.
Lemma lem3504533 {_90768 _90775 : Type'} (x' : _90768) (x'' : _90775 -> _90768) (s : _90768 -> Prop) (x''' : _90775 -> _90768) (x'''' : _90775 -> _90768) (x''''' : _90775 -> _90768) (f : _90768 -> _90775) (t : _90768 -> Prop) (u : _90775 -> Prop) (h1 : term1465 _90768 _90775 x'' s x''' x'''' x''''' f t u) : term1718 _90768 _90775 u t x''''' f x'.
Proof. exact (@lem3504532 _90768 _90775 (f x') x'' s x''' x'''' x''''' f t u h1). Qed.
Lemma lem3504536 {_90768 _90775 : Type'} (x' : _90768) (x : _90775) (x'' : _90775 -> _90768) (s : _90768 -> Prop) (x''' : _90775 -> _90768) (x'''' : _90775 -> _90768) (x''''' : _90775 -> _90768) (f : _90768 -> _90775) (t : _90768 -> Prop) (u : _90775 -> Prop) (h1 : term1520 _90768 _90775 t f s x' u x) (h2 : term1465 _90768 _90775 x'' s x''' x'''' x''''' f t u) : term1719 _90768 _90775 t x''''' f x'.
Proof. exact (@lem3504533 _90768 _90775 x' x'' s x''' x'''' x''''' f t u h2 (@lem3504529 _90768 _90775 t f s x' u x h1)). Qed.
Lemma lem3504537 {_90768 _90775 : Type'} (x' : _90768) (x : _90775) (x'' : _90775 -> _90768) (s : _90768 -> Prop) (x''' : _90775 -> _90768) (x'''' : _90775 -> _90768) (x''''' : _90775 -> _90768) (f : _90768 -> _90775) (t : _90768 -> Prop) (u : _90775 -> Prop) (h1 : term1520 _90768 _90775 t f s x' u x) (h2 : term1465 _90768 _90775 x'' s x''' x'''' x''''' f t u) : term1720 _90768 _90775 t x''''' f x'.
Proof. exact (fun h0 : term1721 _90768 _90775 t x''''' f x' => @lem3504536 _90768 _90775 x' x x'' s x''' x'''' x''''' f t u h1 h2). Qed.
Lemma lem3504539 (p : Prop) : (term828 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem3504540 {_90768 _90775 : Type'} (t : _90768 -> Prop) (x''''' : _90775 -> _90768) (f : _90768 -> _90775) (x' : _90768) : (term1720 _90768 _90775 t x''''' f x') = (term1719 _90768 _90775 t x''''' f x').
Proof. exact (@lem3504539 (term1719 _90768 _90775 t x''''' f x')). Qed.
Lemma lem3504541 {_90768 _90775 : Type'} (x' : _90768) (x : _90775) (x'' : _90775 -> _90768) (s : _90768 -> Prop) (x''' : _90775 -> _90768) (x'''' : _90775 -> _90768) (x''''' : _90775 -> _90768) (f : _90768 -> _90775) (t : _90768 -> Prop) (u : _90775 -> Prop) (h1 : term1520 _90768 _90775 t f s x' u x) (h2 : term1465 _90768 _90775 x'' s x''' x'''' x''''' f t u) : term1719 _90768 _90775 t x''''' f x'.
Proof. exact (EQ_MP (@lem3504540 _90768 _90775 t x''''' f x') (@lem3504537 _90768 _90775 x' x x'' s x''' x'''' x''''' f t u h1 h2)). Qed.
Lemma lem3504543 (b : Prop) (a : Prop) : (a \/ b) = (term833 b a).
Proof. exact (EQ_MP (@lem20682 b a) (@lem20764 b a)). Qed.
Lemma lem3504544 {_90768 _90775 : Type'} (s : _90768 -> Prop) (_36998 : _90768) (f : _90768 -> _90775) (_36999 : _90768) (t : _90768 -> Prop) (x'' : _90775 -> _90768) (_36997 : _90775) : (term1647 _90768 _90775 x'' s _36998 _36997 f t _36999) = (term1758 _90768 _90775 s _36998 f _36999 t x'' _36997).
Proof. exact (@lem3504543 (term1642 _90768 _90775 s _36998 _36997 f t _36999) (term1566 _90768 _90775 t x'' _36997)). Qed.
Lemma lem3504546 (a : Prop) (b : Prop) : (term887 a b) = (term888 a b).
Proof. exact (EQ_MP (@lem20789 a b) (@lem20895 a b)). Qed.
Lemma lem3504547 {_90768 _90775 : Type'} (s : _90768 -> Prop) (_36998 : _90768) (_36997 : _90775) (f : _90768 -> _90775) (t : _90768 -> Prop) (_36999 : _90768) : (term1723 _90768 _90775 s _36998 _36997 f t _36999) = (term1724 _90768 _90775 s _36998 _36997 f t _36999).
Proof. exact (@lem3504546 (term440 _90768 _90775 _36997 f _36998) (term1725 _90768 _90775 s _36998 _36997 f t _36999)). Qed.
Lemma lem3504549 (a : Prop) : (term282 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem3504550 {_90768 _90775 : Type'} (_36997 : _90775) (f : _90768 -> _90775) (_36998 : _90768) : (term1692 _90768 _90775 _36997 f _36998) = (_36997 = (f _36998)).
Proof. exact (@lem3504549 (_36997 = (f _36998))). Qed.
Lemma lem3504551 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem3504552 {_90768 _90775 : Type'} (_36997 : _90775) (f : _90768 -> _90775) (_36998 : _90768) : (term1693 _90768 _90775 _36997 f _36998) = (term88 _90768 _90775 _36997 f _36998).
Proof. exact (MK_COMB (@lem3504551) (@lem3504550 _90768 _90775 _36997 f _36998)). Qed.
Lemma lem3504554 (a : Prop) (b : Prop) : (term887 a b) = (term888 a b).
Proof. exact (EQ_MP (@lem20789 a b) (@lem20895 a b)). Qed.
Lemma lem3504555 {_90768 _90775 : Type'} (s : _90768 -> Prop) (_36998 : _90768) (_36997 : _90775) (f : _90768 -> _90775) (t : _90768 -> Prop) (_36999 : _90768) : (term1726 _90768 _90775 s _36998 _36997 f t _36999) = (term1727 _90768 _90775 s _36998 _36997 f t _36999).
Proof. exact (@lem3504554 (term618 _90768 s _36998) (term364 _90768 _90775 _36997 f t _36999)). Qed.
Lemma lem3504557 (a : Prop) : (term282 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem3504558 {_90768 : Type'} (s : _90768 -> Prop) (_36998 : _90768) : (term1694 _90768 s _36998) = (s _36998).
Proof. exact (@lem3504557 (s _36998)). Qed.
Lemma lem3504559 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem3504560 {_90768 : Type'} (s : _90768 -> Prop) (_36998 : _90768) : (term1728 _90768 s _36998) = (term234 _90768 s _36998).
Proof. exact (MK_COMB (@lem3504559) (@lem3504558 _90768 s _36998)). Qed.
Lemma lem3504562 (a : Prop) (b : Prop) : (term887 a b) = (term888 a b).
Proof. exact (EQ_MP (@lem20789 a b) (@lem20895 a b)). Qed.
Lemma lem3504563 {_90768 _90775 : Type'} (_36997 : _90775) (f : _90768 -> _90775) (t : _90768 -> Prop) (_36999 : _90768) : (term1690 _90768 _90775 _36997 f t _36999) = (term1691 _90768 _90775 _36997 f t _36999).
Proof. exact (@lem3504562 (term440 _90768 _90775 _36997 f _36999) (term618 _90768 t _36999)). Qed.
Lemma lem3504565 (a : Prop) : (term282 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem3504566 {_90768 _90775 : Type'} (_36997 : _90775) (f : _90768 -> _90775) (_36999 : _90768) : (term1692 _90768 _90775 _36997 f _36999) = (_36997 = (f _36999)).
Proof. exact (@lem3504565 (_36997 = (f _36999))). Qed.
Lemma lem3504567 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem3504568 {_90768 _90775 : Type'} (_36997 : _90775) (f : _90768 -> _90775) (_36999 : _90768) : (term1693 _90768 _90775 _36997 f _36999) = (term88 _90768 _90775 _36997 f _36999).
Proof. exact (MK_COMB (@lem3504567) (@lem3504566 _90768 _90775 _36997 f _36999)). Qed.
Lemma lem3504570 (a : Prop) : (term282 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem3504571 {_90768 : Type'} (t : _90768 -> Prop) (_36999 : _90768) : (term1694 _90768 t _36999) = (t _36999).
Proof. exact (@lem3504570 (t _36999)). Qed.
Lemma lem3504572 {_90768 _90775 : Type'} (_36997 : _90775) (f : _90768 -> _90775) (t : _90768 -> Prop) (_36999 : _90768) : (term1691 _90768 _90775 _36997 f t _36999) = (term264 _90768 _90775 _36997 f t _36999).
Proof. exact (MK_COMB (@lem3504568 _90768 _90775 _36997 f _36999) (@lem3504571 _90768 t _36999)). Qed.
Lemma lem3504573 {_90768 _90775 : Type'} (_36997 : _90775) (f : _90768 -> _90775) (t : _90768 -> Prop) (_36999 : _90768) : (term1690 _90768 _90775 _36997 f t _36999) = (term264 _90768 _90775 _36997 f t _36999).
Proof. exact (TRANS (@lem3504563 _90768 _90775 _36997 f t _36999) (@lem3504572 _90768 _90775 _36997 f t _36999)). Qed.
Lemma lem3504574 {_90768 _90775 : Type'} (s : _90768 -> Prop) (_36998 : _90768) (_36997 : _90775) (f : _90768 -> _90775) (t : _90768 -> Prop) (_36999 : _90768) : (term1727 _90768 _90775 s _36998 _36997 f t _36999) = (term1729 _90768 _90775 s _36998 _36997 f t _36999).
Proof. exact (MK_COMB (@lem3504560 _90768 s _36998) (@lem3504573 _90768 _90775 _36997 f t _36999)). Qed.
Lemma lem3504575 {_90768 _90775 : Type'} (s : _90768 -> Prop) (_36998 : _90768) (_36997 : _90775) (f : _90768 -> _90775) (t : _90768 -> Prop) (_36999 : _90768) : (term1726 _90768 _90775 s _36998 _36997 f t _36999) = (term1729 _90768 _90775 s _36998 _36997 f t _36999).
Proof. exact (TRANS (@lem3504555 _90768 _90775 s _36998 _36997 f t _36999) (@lem3504574 _90768 _90775 s _36998 _36997 f t _36999)). Qed.
Lemma lem3504576 {_90768 _90775 : Type'} (s : _90768 -> Prop) (_36998 : _90768) (_36997 : _90775) (f : _90768 -> _90775) (t : _90768 -> Prop) (_36999 : _90768) : (term1724 _90768 _90775 s _36998 _36997 f t _36999) = (term1730 _90768 _90775 s _36998 _36997 f t _36999).
Proof. exact (MK_COMB (@lem3504552 _90768 _90775 _36997 f _36998) (@lem3504575 _90768 _90775 s _36998 _36997 f t _36999)). Qed.
Lemma lem3504577 {_90768 _90775 : Type'} (s : _90768 -> Prop) (_36998 : _90768) (_36997 : _90775) (f : _90768 -> _90775) (t : _90768 -> Prop) (_36999 : _90768) : (term1723 _90768 _90775 s _36998 _36997 f t _36999) = (term1730 _90768 _90775 s _36998 _36997 f t _36999).
Proof. exact (TRANS (@lem3504547 _90768 _90775 s _36998 _36997 f t _36999) (@lem3504576 _90768 _90775 s _36998 _36997 f t _36999)). Qed.
Lemma lem3504578 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem3504579 {_90768 _90775 : Type'} (s : _90768 -> Prop) (_36998 : _90768) (_36997 : _90775) (f : _90768 -> _90775) (t : _90768 -> Prop) (_36999 : _90768) : (term1731 _90768 _90775 s _36998 _36997 f t _36999) = (term1732 _90768 _90775 s _36998 _36997 f t _36999).
Proof. exact (MK_COMB (@lem3504578) (@lem3504577 _90768 _90775 s _36998 _36997 f t _36999)). Qed.
Lemma lem3504580 {_90768 _90775 : Type'} (t : _90768 -> Prop) (x'' : _90775 -> _90768) (_36997 : _90775) : (term1566 _90768 _90775 t x'' _36997) = (term1566 _90768 _90775 t x'' _36997).
Proof. exact (eq_refl (term1566 _90768 _90775 t x'' _36997)). Qed.
Lemma lem3504581 {_90768 _90775 : Type'} (s : _90768 -> Prop) (_36998 : _90768) (f : _90768 -> _90775) (_36999 : _90768) (t : _90768 -> Prop) (x'' : _90775 -> _90768) (_36997 : _90775) : (term1758 _90768 _90775 s _36998 f _36999 t x'' _36997) = (term1759 _90768 _90775 s _36998 f _36999 t x'' _36997).
Proof. exact (MK_COMB (@lem3504579 _90768 _90775 s _36998 _36997 f t _36999) (@lem3504580 _90768 _90775 t x'' _36997)). Qed.
Lemma lem3504582 {_90768 _90775 : Type'} (s : _90768 -> Prop) (_36998 : _90768) (f : _90768 -> _90775) (_36999 : _90768) (t : _90768 -> Prop) (x'' : _90775 -> _90768) (_36997 : _90775) : (term1647 _90768 _90775 x'' s _36998 _36997 f t _36999) = (term1759 _90768 _90775 s _36998 f _36999 t x'' _36997).
Proof. exact (TRANS (@lem3504544 _90768 _90775 s _36998 f _36999 t x'' _36997) (@lem3504581 _90768 _90775 s _36998 f _36999 t x'' _36997)). Qed.
Lemma lem3504584 {_90768 _90775 : Type'} (x' : _90768) (x : _90775) (x'' : _90775 -> _90768) (s : _90768 -> Prop) (x''' : _90775 -> _90768) (x'''' : _90775 -> _90768) (x''''' : _90775 -> _90768) (f : _90768 -> _90775) (t : _90768 -> Prop) (u : _90775 -> Prop) (h1 : term1520 _90768 _90775 t f s x' u x) (h2 : term1465 _90768 _90775 x'' s x''' x'''' x''''' f t u) : term1760 _90768 _90775 t x''''' f x'.
Proof. exact (conj (@lem3504522 _90768 _90775 x''''' f x') (@lem3504541 _90768 _90775 x' x x'' s x''' x'''' x''''' f t u h1 h2)). Qed.
Lemma lem3504585 {_90768 _90775 : Type'} (x' : _90768) (x : _90775) (x'' : _90775 -> _90768) (s : _90768 -> Prop) (x''' : _90775 -> _90768) (x'''' : _90775 -> _90768) (x''''' : _90775 -> _90768) (f : _90768 -> _90775) (t : _90768 -> Prop) (u : _90775 -> Prop) (h1 : term1520 _90768 _90775 t f s x' u x) (h2 : term1465 _90768 _90775 x'' s x''' x'''' x''''' f t u) : term1761 _90768 _90775 s t x''''' f x'.
Proof. exact (conj (@lem3504513 _90768 _90775 t f s x' u x h1) (@lem3504584 _90768 _90775 x' x x'' s x''' x'''' x''''' f t u h1 h2)). Qed.
Lemma lem3504586 {_90768 _90775 : Type'} (x' : _90768) (x : _90775) (x'' : _90775 -> _90768) (s : _90768 -> Prop) (x''' : _90775 -> _90768) (x'''' : _90775 -> _90768) (x''''' : _90775 -> _90768) (f : _90768 -> _90775) (t : _90768 -> Prop) (u : _90775 -> Prop) (h1 : term1520 _90768 _90775 t f s x' u x) (h2 : term1465 _90768 _90775 x'' s x''' x'''' x''''' f t u) : term1762 _90768 _90775 s t x''''' f x'.
Proof. exact (conj (@lem3504506 _90768 _90775 x' x x'' s x''' x'''' x''''' f t u h1 h2) (@lem3504585 _90768 _90775 x' x x'' s x''' x'''' x''''' f t u h1 h2)). Qed.
Lemma lem3504588 {_90768 _90775 : Type'} (_36998 : _90768) (_36999 : _90768) (_36997 : _90775) (x'' : _90775 -> _90768) (s : _90768 -> Prop) (x''' : _90775 -> _90768) (x'''' : _90775 -> _90768) (x''''' : _90775 -> _90768) (f : _90768 -> _90775) (t : _90768 -> Prop) (u : _90775 -> Prop) (h1 : term1465 _90768 _90775 x'' s x''' x'''' x''''' f t u) : term1759 _90768 _90775 s _36998 f _36999 t x'' _36997.
Proof. exact (EQ_MP (@lem3504582 _90768 _90775 s _36998 f _36999 t x'' _36997) (@lem3503533 _90768 _90775 _36998 _36997 _36999 x'' s x''' x'''' x''''' f t u h1)). Qed.
Lemma lem3504589 {_90768 _90775 : Type'} (_36998 : _90768) (_36999 : _90768) (_36997 : _90775) (x'' : _90775 -> _90768) (s : _90768 -> Prop) (x''' : _90775 -> _90768) (x'''' : _90775 -> _90768) (x''''' : _90775 -> _90768) (f : _90768 -> _90775) (t : _90768 -> Prop) (u : _90775 -> Prop) (h1 : term1465 _90768 _90775 x'' s x''' x'''' x''''' f t u) : term1759 _90768 _90775 s _36998 f _36999 t x'' _36997.
Proof. exact (@lem3504588 _90768 _90775 _36998 _36999 _36997 x'' s x''' x'''' x''''' f t u h1). Qed.
Lemma lem3504590 {_90768 _90775 : Type'} (x' : _90768) (x'' : _90775 -> _90768) (s : _90768 -> Prop) (x''' : _90775 -> _90768) (x'''' : _90775 -> _90768) (x''''' : _90775 -> _90768) (f : _90768 -> _90775) (t : _90768 -> Prop) (u : _90775 -> Prop) (h1 : term1465 _90768 _90775 x'' s x''' x'''' x''''' f t u) : term1763 _90768 _90775 s t x'' x''''' f x'.
Proof. exact (@lem3504589 _90768 _90775 x' (term1738 _90768 _90775 x''''' f x') (term1713 _90768 _90775 x''''' f x') x'' s x''' x'''' x''''' f t u h1). Qed.
Lemma lem3504593 {_90768 _90775 : Type'} (x' : _90768) (x : _90775) (x'' : _90775 -> _90768) (s : _90768 -> Prop) (x''' : _90775 -> _90768) (x'''' : _90775 -> _90768) (x''''' : _90775 -> _90768) (f : _90768 -> _90775) (t : _90768 -> Prop) (u : _90775 -> Prop) (h1 : term1520 _90768 _90775 t f s x' u x) (h2 : term1465 _90768 _90775 x'' s x''' x'''' x''''' f t u) : term1764 _90768 _90775 t x'' x''''' f x'.
Proof. exact (@lem3504590 _90768 _90775 x' x'' s x''' x'''' x''''' f t u h2 (@lem3504586 _90768 _90775 x' x x'' s x''' x'''' x''''' f t u h1 h2)). Qed.
Lemma lem3504594 {_90768 _90775 : Type'} (x' : _90768) (x : _90775) (x'' : _90775 -> _90768) (s : _90768 -> Prop) (x''' : _90775 -> _90768) (x'''' : _90775 -> _90768) (x''''' : _90775 -> _90768) (f : _90768 -> _90775) (t : _90768 -> Prop) (u : _90775 -> Prop) (h1 : term1520 _90768 _90775 t f s x' u x) (h2 : term1465 _90768 _90775 x'' s x''' x'''' x''''' f t u) : term1765 _90768 _90775 t x'' x''''' f x'.
Proof. exact (fun h0 : term1766 _90768 _90775 t x'' x''''' f x' => @lem3504593 _90768 _90775 x' x x'' s x''' x'''' x''''' f t u h1 h2). Qed.
Lemma lem3504596 (p : Prop) : (term828 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem3504597 {_90768 _90775 : Type'} (t : _90768 -> Prop) (x'' : _90775 -> _90768) (x''''' : _90775 -> _90768) (f : _90768 -> _90775) (x' : _90768) : (term1765 _90768 _90775 t x'' x''''' f x') = (term1764 _90768 _90775 t x'' x''''' f x').
Proof. exact (@lem3504596 (term1764 _90768 _90775 t x'' x''''' f x')). Qed.
Lemma lem3504598 {_90768 _90775 : Type'} (x' : _90768) (x : _90775) (x'' : _90775 -> _90768) (s : _90768 -> Prop) (x''' : _90775 -> _90768) (x'''' : _90775 -> _90768) (x''''' : _90775 -> _90768) (f : _90768 -> _90775) (t : _90768 -> Prop) (u : _90775 -> Prop) (h1 : term1520 _90768 _90775 t f s x' u x) (h2 : term1465 _90768 _90775 x'' s x''' x'''' x''''' f t u) : term1764 _90768 _90775 t x'' x''''' f x'.
Proof. exact (EQ_MP (@lem3504597 _90768 _90775 t x'' x''''' f x') (@lem3504594 _90768 _90775 x' x x'' s x''' x'''' x''''' f t u h1 h2)). Qed.
Lemma lem3504604 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem3504605 {_90768 : Type'} (_37122 : _90768) (t : _90768 -> Prop) (_37121 : _90768) : (term1706 _90768 _37122 t _37121) = (term1767 _90768 _37122 t _37121).
Proof. exact (@lem3504604 (t _37122) (term909 _90768 _37121 _37122) (term618 _90768 t _37121)). Qed.
Lemma lem3504619 (q : Prop) (p : Prop) : (p \/ q) = (q \/ p).
Proof. exact (proj1 (@lem827 (@el Prop) p q)). Qed.
Lemma lem3504620 {_90768 : Type'} (t : _90768 -> Prop) (_37121 : _90768) (_37122 : _90768) : (term1768 _90768 _37122 t _37121) = (term1769 _90768 t _37121 _37122).
Proof. exact (@lem3504619 (term618 _90768 t _37121) (term909 _90768 _37121 _37122)). Qed.
Lemma lem3504628 {_90768 : Type'} (t : _90768 -> Prop) (_37122 : _90768) : (term1687 _90768 t _37122) = (term1687 _90768 t _37122).
Proof. exact (eq_refl (term1687 _90768 t _37122)). Qed.
Lemma lem3504629 {_90768 : Type'} (t : _90768 -> Prop) (_37121 : _90768) (_37122 : _90768) : (term1767 _90768 _37122 t _37121) = (term1770 _90768 t _37121 _37122).
Proof. exact (MK_COMB (@lem3504628 _90768 t _37122) (@lem3504620 _90768 t _37121 _37122)). Qed.
Lemma lem3504640 {_90768 : Type'} (t : _90768 -> Prop) (_37121 : _90768) (_37122 : _90768) : (term1706 _90768 _37122 t _37121) = (term1770 _90768 t _37121 _37122).
Proof. exact (TRANS (@lem3504605 _90768 _37122 t _37121) (@lem3504629 _90768 t _37121 _37122)). Qed.
Lemma lem3504641 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem3504642 {_90768 : Type'} (t : _90768 -> Prop) (_37121 : _90768) (_37122 : _90768) : (term1771 _90768 _37122 t _37121) = (term1772 _90768 t _37121 _37122).
Proof. exact (MK_COMB (@lem3504641) (@lem3504640 _90768 t _37121 _37122)). Qed.
Lemma lem3504656 (q : Prop) (p : Prop) : (p \/ q) = (q \/ p).
Proof. exact (proj1 (@lem827 (@el Prop) p q)). Qed.
Lemma lem3504657 {_90768 : Type'} (t : _90768 -> Prop) (_37121 : _90768) (_37122 : _90768) : (term1768 _90768 _37122 t _37121) = (term1769 _90768 t _37121 _37122).
Proof. exact (@lem3504656 (term618 _90768 t _37121) (term909 _90768 _37121 _37122)). Qed.
Lemma lem3504665 {_90768 : Type'} (t : _90768 -> Prop) (_37122 : _90768) : (term1687 _90768 t _37122) = (term1687 _90768 t _37122).
Proof. exact (eq_refl (term1687 _90768 t _37122)). Qed.
Lemma lem3504666 {_90768 : Type'} (t : _90768 -> Prop) (_37121 : _90768) (_37122 : _90768) : (term1767 _90768 _37122 t _37121) = (term1770 _90768 t _37121 _37122).
Proof. exact (MK_COMB (@lem3504665 _90768 t _37122) (@lem3504657 _90768 t _37121 _37122)). Qed.
Lemma lem3504677 {_90768 : Type'} (t : _90768 -> Prop) (_37121 : _90768) (_37122 : _90768) : ((term1706 _90768 _37122 t _37121) = (term1767 _90768 _37122 t _37121)) = ((term1770 _90768 t _37121 _37122) = (term1770 _90768 t _37121 _37122)).
Proof. exact (MK_COMB (@lem3504642 _90768 t _37121 _37122) (@lem3504666 _90768 t _37121 _37122)). Qed.
Lemma lem3504679 {A : Type'} (x : A) : (x = x) = True.
Proof. exact (EQ_MP (@lem20665 A x) (@lem20664 A x)). Qed.
Lemma lem3504680 (x : Prop) : (x = x) = True.
Proof. exact (@lem3504679 Prop x). Qed.
Lemma lem3504681 {_90768 : Type'} (t : _90768 -> Prop) (_37121 : _90768) (_37122 : _90768) : ((term1770 _90768 t _37121 _37122) = (term1770 _90768 t _37121 _37122)) = True.
Proof. exact (@lem3504680 (term1770 _90768 t _37121 _37122)). Qed.
Lemma lem3504682 {_90768 : Type'} (_37122 : _90768) (t : _90768 -> Prop) (_37121 : _90768) : ((term1706 _90768 _37122 t _37121) = (term1767 _90768 _37122 t _37121)) = True.
Proof. exact (TRANS (@lem3504677 _90768 t _37121 _37122) (@lem3504681 _90768 t _37121 _37122)). Qed.
Lemma lem3504683 {_90768 : Type'} (_37122 : _90768) (t : _90768 -> Prop) (_37121 : _90768) : True = ((term1706 _90768 _37122 t _37121) = (term1767 _90768 _37122 t _37121)).
Proof. exact (SYM (@lem3504682 _90768 _37122 t _37121)). Qed.
Lemma lem3504684 {_90768 : Type'} (_37122 : _90768) (t : _90768 -> Prop) (_37121 : _90768) : (term1706 _90768 _37122 t _37121) = (term1767 _90768 _37122 t _37121).
Proof. exact (EQ_MP (@lem3504683 _90768 _37122 t _37121) (@lem0)). Qed.
Lemma lem3504685 {_90768 : Type'} (_37122 : _90768) (t : _90768 -> Prop) (_37121 : _90768) : term1767 _90768 _37122 t _37121.
Proof. exact (EQ_MP (@lem3504684 _90768 _37122 t _37121) (@lem3503949 _90768 _37122 t _37121)). Qed.
Lemma lem3504687 (b : Prop) (a : Prop) : (a \/ b) = (term833 b a).
Proof. exact (EQ_MP (@lem20682 b a) (@lem20764 b a)). Qed.
Lemma lem3504688 {_90768 : Type'} (_37121 : _90768) (t : _90768 -> Prop) (_37122 : _90768) : (term1767 _90768 _37122 t _37121) = (term1773 _90768 _37121 t _37122).
Proof. exact (@lem3504687 (term1768 _90768 _37122 t _37121) (t _37122)). Qed.
Lemma lem3504690 (a : Prop) (b : Prop) : (term887 a b) = (term888 a b).
Proof. exact (EQ_MP (@lem20789 a b) (@lem20895 a b)). Qed.
Lemma lem3504691 {_90768 : Type'} (_37122 : _90768) (t : _90768 -> Prop) (_37121 : _90768) : (term1774 _90768 _37122 t _37121) = (term1775 _90768 _37122 t _37121).
Proof. exact (@lem3504690 (term909 _90768 _37121 _37122) (term618 _90768 t _37121)). Qed.
Lemma lem3504693 (a : Prop) : (term282 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem3504694 {_90768 : Type'} (_37121 : _90768) (_37122 : _90768) : (term919 _90768 _37121 _37122) = (_37121 = _37122).
Proof. exact (@lem3504693 (_37121 = _37122)). Qed.
Lemma lem3504695 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem3504696 {_90768 : Type'} (_37121 : _90768) (_37122 : _90768) : (term920 _90768 _37121 _37122) = (term921 _90768 _37121 _37122).
Proof. exact (MK_COMB (@lem3504695) (@lem3504694 _90768 _37121 _37122)). Qed.
Lemma lem3504698 (a : Prop) : (term282 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem3504699 {_90768 : Type'} (t : _90768 -> Prop) (_37121 : _90768) : (term1694 _90768 t _37121) = (t _37121).
Proof. exact (@lem3504698 (t _37121)). Qed.
Lemma lem3504700 {_90768 : Type'} (_37122 : _90768) (t : _90768 -> Prop) (_37121 : _90768) : (term1775 _90768 _37122 t _37121) = (term1776 _90768 _37122 t _37121).
Proof. exact (MK_COMB (@lem3504696 _90768 _37121 _37122) (@lem3504699 _90768 t _37121)). Qed.
Lemma lem3504701 {_90768 : Type'} (_37122 : _90768) (t : _90768 -> Prop) (_37121 : _90768) : (term1774 _90768 _37122 t _37121) = (term1776 _90768 _37122 t _37121).
Proof. exact (TRANS (@lem3504691 _90768 _37122 t _37121) (@lem3504700 _90768 _37122 t _37121)). Qed.
Lemma lem3504702 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem3504703 {_90768 : Type'} (_37122 : _90768) (t : _90768 -> Prop) (_37121 : _90768) : (term1777 _90768 _37122 t _37121) = (term1778 _90768 _37122 t _37121).
Proof. exact (MK_COMB (@lem3504702) (@lem3504701 _90768 _37122 t _37121)). Qed.
Lemma lem3504704 {_90768 : Type'} (t : _90768 -> Prop) (_37122 : _90768) : (t _37122) = (t _37122).
Proof. exact (eq_refl (t _37122)). Qed.
Lemma lem3504705 {_90768 : Type'} (_37121 : _90768) (t : _90768 -> Prop) (_37122 : _90768) : (term1773 _90768 _37121 t _37122) = (term1779 _90768 _37121 t _37122).
Proof. exact (MK_COMB (@lem3504703 _90768 _37122 t _37121) (@lem3504704 _90768 t _37122)). Qed.
Lemma lem3504706 {_90768 : Type'} (_37121 : _90768) (t : _90768 -> Prop) (_37122 : _90768) : (term1767 _90768 _37122 t _37121) = (term1779 _90768 _37121 t _37122).
Proof. exact (TRANS (@lem3504688 _90768 _37121 t _37122) (@lem3504705 _90768 _37121 t _37122)). Qed.
Lemma lem3504708 {_90768 _90775 : Type'} (x' : _90768) (x : _90775) (x'' : _90775 -> _90768) (s : _90768 -> Prop) (x''' : _90775 -> _90768) (x'''' : _90775 -> _90768) (x''''' : _90775 -> _90768) (f : _90768 -> _90775) (t : _90768 -> Prop) (u : _90775 -> Prop) (h1 : term1520 _90768 _90775 t f s x' u x) (h2 : term1465 _90768 _90775 x'' s x''' x'''' x''''' f t u) : term1780 _90768 _90775 t x'' x''''' f x'.
Proof. exact (conj (@lem3504465 _90768 _90775 x' x x'' s x''' x'''' x''''' f t u h1 h2) (@lem3504598 _90768 _90775 x' x x'' s x''' x'''' x''''' f t u h1 h2)). Qed.
Lemma lem3504710 {_90768 : Type'} (_37121 : _90768) (t : _90768 -> Prop) (_37122 : _90768) : term1779 _90768 _37121 t _37122.
Proof. exact (EQ_MP (@lem3504706 _90768 _37121 t _37122) (@lem3504685 _90768 _37122 t _37121)). Qed.
Lemma lem3504711 {_90768 : Type'} (_37121 : _90768) (t : _90768 -> Prop) (_37122 : _90768) : term1779 _90768 _37121 t _37122.
Proof. exact (@lem3504710 _90768 _37121 t _37122). Qed.
Lemma lem3504712 {_90768 _90775 : Type'} (x''''' : _90775 -> _90768) (t : _90768 -> Prop) (x'' : _90775 -> _90768) (f : _90768 -> _90775) (x' : _90768) : term1781 _90768 _90775 x''''' t x'' f x'.
Proof. exact (@lem3504711 _90768 (term1753 _90768 _90775 x'' x''''' f x') t (term1738 _90768 _90775 x'' f x')). Qed.
Lemma lem3504715 {_90768 _90775 : Type'} (x' : _90768) (x : _90775) (x'' : _90775 -> _90768) (s : _90768 -> Prop) (x''' : _90775 -> _90768) (x'''' : _90775 -> _90768) (x''''' : _90775 -> _90768) (f : _90768 -> _90775) (t : _90768 -> Prop) (u : _90775 -> Prop) (h1 : term1520 _90768 _90775 t f s x' u x) (h2 : term1465 _90768 _90775 x'' s x''' x'''' x''''' f t u) : term1719 _90768 _90775 t x'' f x'.
Proof. exact (@lem3504712 _90768 _90775 x''''' t x'' f x' (@lem3504708 _90768 _90775 x' x x'' s x''' x'''' x''''' f t u h1 h2)). Qed.
Lemma lem3504716 {_90768 _90775 : Type'} (x' : _90768) (x : _90775) (x'' : _90775 -> _90768) (s : _90768 -> Prop) (x''' : _90775 -> _90768) (x'''' : _90775 -> _90768) (x''''' : _90775 -> _90768) (f : _90768 -> _90775) (t : _90768 -> Prop) (u : _90775 -> Prop) (h1 : term1520 _90768 _90775 t f s x' u x) (h2 : term1465 _90768 _90775 x'' s x''' x'''' x''''' f t u) : term1720 _90768 _90775 t x'' f x'.
Proof. exact (fun h0 : term1721 _90768 _90775 t x'' f x' => @lem3504715 _90768 _90775 x' x x'' s x''' x'''' x''''' f t u h1 h2). Qed.
Lemma lem3504718 (p : Prop) : (term828 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem3504719 {_90768 _90775 : Type'} (t : _90768 -> Prop) (x'' : _90775 -> _90768) (f : _90768 -> _90775) (x' : _90768) : (term1720 _90768 _90775 t x'' f x') = (term1719 _90768 _90775 t x'' f x').
Proof. exact (@lem3504718 (term1719 _90768 _90775 t x'' f x')). Qed.
Lemma lem3504720 {_90768 _90775 : Type'} (x' : _90768) (x : _90775) (x'' : _90775 -> _90768) (s : _90768 -> Prop) (x''' : _90775 -> _90768) (x'''' : _90775 -> _90768) (x''''' : _90775 -> _90768) (f : _90768 -> _90775) (t : _90768 -> Prop) (u : _90775 -> Prop) (h1 : term1520 _90768 _90775 t f s x' u x) (h2 : term1465 _90768 _90775 x'' s x''' x'''' x''''' f t u) : term1719 _90768 _90775 t x'' f x'.
Proof. exact (EQ_MP (@lem3504719 _90768 _90775 t x'' f x') (@lem3504716 _90768 _90775 x' x x'' s x''' x'''' x''''' f t u h1 h2)). Qed.
Lemma lem3504722 (a : Prop) (b : Prop) : (term840 a b) = (term841 a b).
Proof. exact (EQ_MP (@lem20904 a b) (@lem21007 a b)). Qed.
Lemma lem3504723 {_90768 : Type'} (s : _90768 -> Prop) (t : _90768 -> Prop) (_37002 : _90768) : (term1090 _90768 s t _37002) = (term1089 _90768 s t _37002).
Proof. exact (@lem3504722 (s _37002) (t _37002)). Qed.
Lemma lem3504724 {_90768 _90775 : Type'} (x' : _90768) (f : _90768 -> _90775) (_37002 : _90768) : (term624 _90768 _90775 x' f _37002) = (term624 _90768 _90775 x' f _37002).
Proof. exact (eq_refl (term624 _90768 _90775 x' f _37002)). Qed.
Lemma lem3504725 {_90768 _90775 : Type'} (x' : _90768) (f : _90768 -> _90775) (s : _90768 -> Prop) (t : _90768 -> Prop) (_37002 : _90768) : (term1662 _90768 _90775 x' f s t _37002) = (term1782 _90768 _90775 x' f s t _37002).
Proof. exact (MK_COMB (@lem3504724 _90768 _90775 x' f _37002) (@lem3504723 _90768 s t _37002)). Qed.
Lemma lem3504727 (a : Prop) (b : Prop) : (term840 a b) = (term841 a b).
Proof. exact (EQ_MP (@lem20904 a b) (@lem21007 a b)). Qed.
Lemma lem3504728 {_90768 _90775 : Type'} (x' : _90768) (f : _90768 -> _90775) (s : _90768 -> Prop) (t : _90768 -> Prop) (_37002 : _90768) : (term1782 _90768 _90775 x' f s t _37002) = (term1783 _90768 _90775 x' f s t _37002).
Proof. exact (@lem3504727 ((f x') = (f _37002)) (term1034 _90768 s t _37002)). Qed.
Lemma lem3504729 {_90768 _90775 : Type'} (x' : _90768) (f : _90768 -> _90775) (s : _90768 -> Prop) (t : _90768 -> Prop) (_37002 : _90768) : (term1662 _90768 _90775 x' f s t _37002) = (term1783 _90768 _90775 x' f s t _37002).
Proof. exact (TRANS (@lem3504725 _90768 _90775 x' f s t _37002) (@lem3504728 _90768 _90775 x' f s t _37002)). Qed.
Lemma lem3504731 (p : Prop) : (~ p) = (p -> False).
Proof. exact (EQ_MP (@lem21021 p) (@lem0)). Qed.
Lemma lem3504732 {_90768 _90775 : Type'} (x' : _90768) (f : _90768 -> _90775) (s : _90768 -> Prop) (t : _90768 -> Prop) (_37002 : _90768) : (term1783 _90768 _90775 x' f s t _37002) = (term1784 _90768 _90775 x' f s t _37002).
Proof. exact (@lem3504731 (term1785 _90768 _90775 x' f s t _37002)). Qed.
Lemma lem3504733 {_90768 _90775 : Type'} (x' : _90768) (f : _90768 -> _90775) (s : _90768 -> Prop) (t : _90768 -> Prop) (_37002 : _90768) : (term1662 _90768 _90775 x' f s t _37002) = (term1784 _90768 _90775 x' f s t _37002).
Proof. exact (TRANS (@lem3504729 _90768 _90775 x' f s t _37002) (@lem3504732 _90768 _90775 x' f s t _37002)). Qed.
Lemma lem3504735 {_90768 _90775 : Type'} (x' : _90768) (x : _90775) (x'' : _90775 -> _90768) (s : _90768 -> Prop) (x''' : _90775 -> _90768) (x'''' : _90775 -> _90768) (x''''' : _90775 -> _90768) (f : _90768 -> _90775) (t : _90768 -> Prop) (u : _90775 -> Prop) (h1 : term1520 _90768 _90775 t f s x' u x) (h2 : term1465 _90768 _90775 x'' s x''' x'''' x''''' f t u) : term1786 _90768 _90775 s t x'' f x'.
Proof. exact (conj (@lem3504251 _90768 _90775 x' x x'' s x''' x'''' x''''' f t u h1 h2) (@lem3504720 _90768 _90775 x' x x'' s x''' x'''' x''''' f t u h1 h2)). Qed.
Lemma lem3504736 {_90768 _90775 : Type'} (x' : _90768) (x : _90775) (x'' : _90775 -> _90768) (s : _90768 -> Prop) (x''' : _90775 -> _90768) (x'''' : _90775 -> _90768) (x''''' : _90775 -> _90768) (f : _90768 -> _90775) (t : _90768 -> Prop) (u : _90775 -> Prop) (h1 : term1520 _90768 _90775 t f s x' u x) (h2 : term1465 _90768 _90775 x'' s x''' x'''' x''''' f t u) : term1787 _90768 _90775 s t x'' f x'.
Proof. exact (conj (@lem3504140 _90768 _90775 x' x x'' s x''' x'''' x''''' f t u h1 h2) (@lem3504735 _90768 _90775 x' x x'' s x''' x'''' x''''' f t u h1 h2)). Qed.
Lemma lem3504738 {_90768 _90775 : Type'} (_37002 : _90768) (t : _90768 -> Prop) (f : _90768 -> _90775) (s : _90768 -> Prop) (x' : _90768) (u : _90775 -> Prop) (x : _90775) (h1 : term1520 _90768 _90775 t f s x' u x) : term1784 _90768 _90775 x' f s t _37002.
Proof. exact (EQ_MP (@lem3504733 _90768 _90775 x' f s t _37002) (@lem3503408 _90768 _90775 _37002 t f s x' u x h1)). Qed.
Lemma lem3504739 {_90768 _90775 : Type'} (_37002 : _90768) (t : _90768 -> Prop) (f : _90768 -> _90775) (s : _90768 -> Prop) (x' : _90768) (u : _90775 -> Prop) (x : _90775) (h1 : term1520 _90768 _90775 t f s x' u x) : term1784 _90768 _90775 x' f s t _37002.
Proof. exact (@lem3504738 _90768 _90775 _37002 t f s x' u x h1). Qed.
Lemma lem3504740 {_90768 _90775 : Type'} (x'' : _90775 -> _90768) (t : _90768 -> Prop) (f : _90768 -> _90775) (s : _90768 -> Prop) (x' : _90768) (u : _90775 -> Prop) (x : _90775) (h1 : term1520 _90768 _90775 t f s x' u x) : term1788 _90768 _90775 s t x'' f x'.
Proof. exact (@lem3504739 _90768 _90775 (term1738 _90768 _90775 x'' f x') t f s x' u x h1). Qed.
Lemma lem3504743 {_90768 _90775 : Type'} (x' : _90768) (x : _90775) (x'' : _90775 -> _90768) (s : _90768 -> Prop) (x''' : _90775 -> _90768) (x'''' : _90775 -> _90768) (x''''' : _90775 -> _90768) (f : _90768 -> _90775) (t : _90768 -> Prop) (u : _90775 -> Prop) (h1 : term1520 _90768 _90775 t f s x' u x) (h2 : term1465 _90768 _90775 x'' s x''' x'''' x''''' f t u) : False.
Proof. exact (@lem3504740 _90768 _90775 x'' t f s x' u x h1 (@lem3504736 _90768 _90775 x' x x'' s x''' x'''' x''''' f t u h1 h2)). Qed.
Lemma lem3504744 {_90768 _90775 : Type'} (x' : _90768) (x : _90775) (x'' : _90775 -> _90768) (s : _90768 -> Prop) (x''' : _90775 -> _90768) (x'''' : _90775 -> _90768) (x''''' : _90775 -> _90768) (f : _90768 -> _90775) (t : _90768 -> Prop) (u : _90775 -> Prop) (h1 : term1520 _90768 _90775 t f s x' u x) (h2 : term1465 _90768 _90775 x'' s x''' x'''' x''''' f t u) : term847.
Proof. exact (fun h0 : ~ False => @lem3504743 _90768 _90775 x' x x'' s x''' x'''' x''''' f t u h1 h2). Qed.
Lemma lem3504746 (p : Prop) : (term828 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem3504747 : term847 = False.
Proof. exact (@lem3504746 False). Qed.
Lemma lem3504749 {_90768 _90775 : Type'} (x' : _90768) (x : _90775) (x'' : _90775 -> _90768) (s : _90768 -> Prop) (x''' : _90775 -> _90768) (x'''' : _90775 -> _90768) (x''''' : _90775 -> _90768) (f : _90768 -> _90775) (t : _90768 -> Prop) (u : _90775 -> Prop) (h1 : term1520 _90768 _90775 t f s x' u x) (h2 : term1465 _90768 _90775 x'' s x''' x'''' x''''' f t u) : False.
Proof. exact (EQ_MP (@lem3504747) (@lem3504744 _90768 _90775 x' x x'' s x''' x'''' x''''' f t u h1 h2)). Qed.
Lemma lem3504750 {_90768 _90775 : Type'} (x'' : _90775 -> _90768) (x''' : _90775 -> _90768) (x'''' : _90775 -> _90768) (x''''' : _90775 -> _90768) (t : _90768 -> Prop) (x' : _90768) (f : _90768 -> _90775) (s : _90768 -> Prop) (u : _90775 -> Prop) (x : _90775) (h1 : term618 _90775 u x) (h2 : term1465 _90768 _90775 x'' s x''' x'''' x''''' f t u) (h3 : term1497 _90768 _90775 t x' f s u x) : False.
Proof. exact (EQ_MP (@lem3503924) (@lem3503921 _90768 _90775 x'' x''' x'''' x''''' t x' f s u x h1 h2 h3)). Qed.
Lemma lem3504751 {_90768 _90775 : Type'} (t : _90768 -> Prop) (x' : _90768) (f : _90768 -> _90775) (s : _90768 -> Prop) (u : _90775 -> Prop) (x : _90775) (h1 : term371 _90768 _90775 x f s) (h2 : term1497 _90768 _90775 t x' f s u x) : False.
Proof. exact (EQ_MP (@lem3503677) (@lem3503674 _90768 _90775 t x' f s u x h1 h2)). Qed.
Lemma lem3504752 {_90768 _90775 : Type'} (x'' : _90775 -> _90768) (x''' : _90775 -> _90768) (x'''' : _90775 -> _90768) (x''''' : _90775 -> _90768) (t : _90768 -> Prop) (x' : _90768) (f : _90768 -> _90775) (s : _90768 -> Prop) (u : _90775 -> Prop) (x : _90775) (h1 : term618 _90775 u x) (h2 : term1465 _90768 _90775 x'' s x''' x'''' x''''' f t u) (h3 : term1497 _90768 _90775 t x' f s u x) : (term618 _90775 u x) = False.
Proof. exact (prop_ext (fun h4 : term618 _90775 u x => @lem3504750 _90768 _90775 x'' x''' x'''' x''''' t x' f s u x h1 h2 h3) (fun h4 : False => @lem3502661 _90775 u x h1)). Qed.
Lemma lem3504753 {_90768 _90775 : Type'} (x'' : _90775 -> _90768) (x''' : _90775 -> _90768) (x'''' : _90775 -> _90768) (x''''' : _90775 -> _90768) (t : _90768 -> Prop) (x' : _90768) (f : _90768 -> _90775) (s : _90768 -> Prop) (u : _90775 -> Prop) (x : _90775) (h1 : term618 _90775 u x) (h2 : term1465 _90768 _90775 x'' s x''' x'''' x''''' f t u) (h3 : term1497 _90768 _90775 t x' f s u x) : False.
Proof. exact (EQ_MP (@lem3504752 _90768 _90775 x'' x''' x'''' x''''' t x' f s u x h1 h2 h3) (@lem3502661 _90775 u x h1)). Qed.
Lemma lem3504754 {_90768 _90775 : Type'} (x'' : _90775 -> _90768) (x''' : _90775 -> _90768) (x'''' : _90775 -> _90768) (x''''' : _90775 -> _90768) (t : _90768 -> Prop) (x' : _90768) (f : _90768 -> _90775) (s : _90768 -> Prop) (u : _90775 -> Prop) (x : _90775) (h1 : term618 _90775 u x) (h2 : term1465 _90768 _90775 x'' s x''' x'''' x''''' f t u) (h3 : term1497 _90768 _90775 t x' f s u x) : (term618 _90775 u x) = False.
Proof. exact (prop_ext (fun h4 : term618 _90775 u x => @lem3504753 _90768 _90775 x'' x''' x'''' x''''' t x' f s u x h1 h2 h3) (fun h4 : False => @lem3502019 _90775 u x h1)). Qed.
Lemma lem3504755 {_90768 _90775 : Type'} (x'' : _90775 -> _90768) (x''' : _90775 -> _90768) (x'''' : _90775 -> _90768) (x''''' : _90775 -> _90768) (t : _90768 -> Prop) (x' : _90768) (f : _90768 -> _90775) (s : _90768 -> Prop) (u : _90775 -> Prop) (x : _90775) (h1 : term618 _90775 u x) (h2 : term1465 _90768 _90775 x'' s x''' x'''' x''''' f t u) (h3 : term1497 _90768 _90775 t x' f s u x) : False.
Proof. exact (EQ_MP (@lem3504754 _90768 _90775 x'' x''' x'''' x''''' t x' f s u x h1 h2 h3) (@lem3502019 _90775 u x h1)). Qed.
Lemma lem3504756 {_90768 _90775 : Type'} (x'' : _90775 -> _90768) (x''' : _90775 -> _90768) (x'''' : _90775 -> _90768) (x''''' : _90775 -> _90768) (t : _90768 -> Prop) (x' : _90768) (f : _90768 -> _90775) (s : _90768 -> Prop) (u : _90775 -> Prop) (x : _90775) (h1 : term618 _90775 u x) (h2 : term1465 _90768 _90775 x'' s x''' x'''' x''''' f t u) (h3 : term1497 _90768 _90775 t x' f s u x) : (term618 _90775 u x) = False.
Proof. exact (prop_ext (fun h4 : term618 _90775 u x => @lem3504755 _90768 _90775 x'' x''' x'''' x''''' t x' f s u x h1 h2 h3) (fun h4 : False => @lem3502019 _90775 u x h1)). Qed.
Lemma lem3504757 {_90768 _90775 : Type'} (x'' : _90775 -> _90768) (x''' : _90775 -> _90768) (x'''' : _90775 -> _90768) (x''''' : _90775 -> _90768) (t : _90768 -> Prop) (x' : _90768) (f : _90768 -> _90775) (s : _90768 -> Prop) (u : _90775 -> Prop) (x : _90775) (h1 : term618 _90775 u x) (h2 : term1465 _90768 _90775 x'' s x''' x'''' x''''' f t u) (h3 : term1497 _90768 _90775 t x' f s u x) : False.
Proof. exact (EQ_MP (@lem3504756 _90768 _90775 x'' x''' x'''' x''''' t x' f s u x h1 h2 h3) (@lem3502019 _90775 u x h1)). Qed.
Lemma lem3504758 {_90768 _90775 : Type'} (t : _90768 -> Prop) (x' : _90768) (f : _90768 -> _90775) (s : _90768 -> Prop) (u : _90775 -> Prop) (x : _90775) (h1 : term371 _90768 _90775 x f s) (h2 : term1497 _90768 _90775 t x' f s u x) : (term371 _90768 _90775 x f s) = False.
Proof. exact (prop_ext (fun h3 : term371 _90768 _90775 x f s => @lem3504751 _90768 _90775 t x' f s u x h1 h2) (fun h3 : False => @lem3501694 _90768 _90775 x f s h1)). Qed.
Lemma lem3504759 {_90768 _90775 : Type'} (t : _90768 -> Prop) (x' : _90768) (f : _90768 -> _90775) (s : _90768 -> Prop) (u : _90775 -> Prop) (x : _90775) (h1 : term371 _90768 _90775 x f s) (h2 : term1497 _90768 _90775 t x' f s u x) : False.
Proof. exact (EQ_MP (@lem3504758 _90768 _90775 t x' f s u x h1 h2) (@lem3501694 _90768 _90775 x f s h1)). Qed.
Lemma lem3504760 {_90768 _90775 : Type'} (x'' : _90775 -> _90768) (x''' : _90775 -> _90768) (x'''' : _90775 -> _90768) (x''''' : _90775 -> _90768) (t : _90768 -> Prop) (x' : _90768) (f : _90768 -> _90775) (s : _90768 -> Prop) (u : _90775 -> Prop) (x : _90775) (h1 : term1465 _90768 _90775 x'' s x''' x'''' x''''' f t u) (h2 : term1497 _90768 _90775 t x' f s u x) : False.
Proof. exact (or_elim (@lem3501347 _90768 _90775 t x' f s u x h2) (fun h0 : term371 _90768 _90775 x f s => @lem3504759 _90768 _90775 t x' f s u x h0 h2) (fun h0 : term618 _90775 u x => @lem3504757 _90768 _90775 x'' x''' x'''' x''''' t x' f s u x h0 h1 h2)). Qed.
Lemma lem3504761 {_90768 _90775 : Type'} (x'' : _90775 -> _90768) (x''' : _90775 -> _90768) (x'''' : _90775 -> _90768) (x''''' : _90775 -> _90768) (t : _90768 -> Prop) (f : _90768 -> _90775) (s : _90768 -> Prop) (x' : _90768) (u : _90775 -> Prop) (x : _90775) (h1 : term1465 _90768 _90775 x'' s x''' x'''' x''''' f t u) (h2 : term1541 _90768 _90775 t f s x' u x) : False.
Proof. exact (or_elim (@lem3501126 _90768 _90775 t f s x' u x h2) (fun h0 : term1497 _90768 _90775 t x' f s u x => @lem3504760 _90768 _90775 x'' x''' x'''' x''''' t x' f s u x h1 h0) (fun h0 : term1520 _90768 _90775 t f s x' u x => @lem3504749 _90768 _90775 x' x x'' s x''' x'''' x''''' f t u h0 h1)). Qed.
Lemma lem3504762 {_90768 _90775 : Type'} (x'' : _90775 -> _90768) (x''' : _90775 -> _90768) (x'''' : _90775 -> _90768) (x''''' : _90775 -> _90768) (t : _90768 -> Prop) (f : _90768 -> _90775) (s : _90768 -> Prop) (x' : _90768) (u : _90775 -> Prop) (x : _90775) (h1 : term1465 _90768 _90775 x'' s x''' x'''' x''''' f t u) (h2 : term1541 _90768 _90775 t f s x' u x) : (term1465 _90768 _90775 x'' s x''' x'''' x''''' f t u) = False.
Proof. exact (prop_ext (fun h3 : term1465 _90768 _90775 x'' s x''' x'''' x''''' f t u => @lem3504761 _90768 _90775 x'' x''' x'''' x''''' t f s x' u x h1 h2) (fun h3 : False => @lem3501338 _90768 _90775 x'' s x''' x'''' x''''' f t u h1)). Qed.
Lemma lem3504763 {_90768 _90775 : Type'} (x'' : _90775 -> _90768) (x''' : _90775 -> _90768) (x'''' : _90775 -> _90768) (x''''' : _90775 -> _90768) (t : _90768 -> Prop) (f : _90768 -> _90775) (s : _90768 -> Prop) (x' : _90768) (u : _90775 -> Prop) (x : _90775) (h1 : term1465 _90768 _90775 x'' s x''' x'''' x''''' f t u) (h2 : term1541 _90768 _90775 t f s x' u x) : False.
Proof. exact (EQ_MP (@lem3504762 _90768 _90775 x'' x''' x'''' x''''' t f s x' u x h1 h2) (@lem3501338 _90768 _90775 x'' s x''' x'''' x''''' f t u h1)). Qed.
Lemma lem3504764 {_90768 _90775 : Type'} (x'' : _90775 -> _90768) (x''' : _90775 -> _90768) (x'''' : _90775 -> _90768) (x''''' : _90775 -> _90768) (t : _90768 -> Prop) (f : _90768 -> _90775) (s : _90768 -> Prop) (x' : _90768) (u : _90775 -> Prop) (x : _90775) (h1 : term1465 _90768 _90775 x'' s x''' x'''' x''''' f t u) (h2 : term1541 _90768 _90775 t f s x' u x) : (term1541 _90768 _90775 t f s x' u x) = False.
Proof. exact (prop_ext (fun h3 : term1541 _90768 _90775 t f s x' u x => @lem3504763 _90768 _90775 x'' x''' x'''' x''''' t f s x' u x h1 h2) (fun h3 : False => @lem3501126 _90768 _90775 t f s x' u x h2)). Qed.
Lemma lem3504765 {_90768 _90775 : Type'} (x'' : _90775 -> _90768) (x''' : _90775 -> _90768) (x'''' : _90775 -> _90768) (x''''' : _90775 -> _90768) (t : _90768 -> Prop) (f : _90768 -> _90775) (s : _90768 -> Prop) (x' : _90768) (u : _90775 -> Prop) (x : _90775) (h1 : term1465 _90768 _90775 x'' s x''' x'''' x''''' f t u) (h2 : term1541 _90768 _90775 t f s x' u x) : False.
Proof. exact (EQ_MP (@lem3504764 _90768 _90775 x'' x''' x'''' x''''' t f s x' u x h1 h2) (@lem3501126 _90768 _90775 t f s x' u x h2)). Qed.
Lemma lem3504766 {_90768 _90775 : Type'} (x'' : _90775 -> _90768) (x''' : _90775 -> _90768) (x'''' : _90775 -> _90768) (t : _90768 -> Prop) (f : _90768 -> _90775) (s : _90768 -> Prop) (x' : _90768) (u : _90775 -> Prop) (x : _90775) (h1 : term1468 _90768 _90775 x'' s x''' x'''' f t u) (h2 : term1541 _90768 _90775 t f s x' u x) : False.
Proof. exact (ex_elim (@lem3501021 _90768 _90775 x'' s x''' x'''' f t u h1) (fun x''''' : _90775 -> _90768 => fun h0 : term1467 _90768 _90775 x'' s x''' x'''' f t u x''''' => @lem3504765 _90768 _90775 x'' x''' x'''' x''''' t f s x' u x h0 h2)). Qed.
Lemma lem3504767 {_90768 _90775 : Type'} (x'' : _90775 -> _90768) (x''' : _90775 -> _90768) (t : _90768 -> Prop) (f : _90768 -> _90775) (s : _90768 -> Prop) (x' : _90768) (u : _90775 -> Prop) (x : _90775) (h1 : term1470 _90768 _90775 x'' s x''' f t u) (h2 : term1541 _90768 _90775 t f s x' u x) : False.
Proof. exact (ex_elim (@lem3501020 _90768 _90775 x'' s x''' f t u h1) (fun x'''' : _90775 -> _90768 => fun h0 : term1469 _90768 _90775 x'' s x''' f t u x'''' => @lem3504766 _90768 _90775 x'' x''' x'''' t f s x' u x h0 h2)). Qed.
Lemma lem3504768 {_90768 _90775 : Type'} (x'' : _90775 -> _90768) (t : _90768 -> Prop) (f : _90768 -> _90775) (s : _90768 -> Prop) (x' : _90768) (u : _90775 -> Prop) (x : _90775) (h1 : term1472 _90768 _90775 x'' s f t u) (h2 : term1541 _90768 _90775 t f s x' u x) : False.
Proof. exact (ex_elim (@lem3501019 _90768 _90775 x'' s f t u h1) (fun x''' : _90775 -> _90768 => fun h0 : term1471 _90768 _90775 x'' s f t u x''' => @lem3504767 _90768 _90775 x'' x''' t f s x' u x h0 h2)). Qed.
Lemma lem3504769 {_90768 _90775 : Type'} (t : _90768 -> Prop) (f : _90768 -> _90775) (s : _90768 -> Prop) (x' : _90768) (u : _90775 -> Prop) (x : _90775) (h1 : term1056 _90768 _90775 s f t u) (h2 : term1541 _90768 _90775 t f s x' u x) : False.
Proof. exact (ex_elim (@lem3500654 _90768 _90775 s f t u h1) (fun x'' : _90775 -> _90768 => fun h0 : term1473 _90768 _90775 s f t u x'' => @lem3504768 _90768 _90775 x'' t f s x' u x h0 h2)). Qed.
Lemma lem3504770 {_90768 _90775 : Type'} (x : _90775) (s : _90768 -> Prop) (f : _90768 -> _90775) (t : _90768 -> Prop) (u : _90775 -> Prop) (h1 : term1088 _90768 _90775 t f s u x) (h2 : term1056 _90768 _90775 s f t u) : False.
Proof. exact (ex_elim (@lem3501017 _90768 _90775 t f s u x h1) (fun x' : _90768 => fun h0 : term1543 _90768 _90775 t f s u x x' => @lem3504769 _90768 _90775 t f s x' u x h2 h0)). Qed.
Lemma lem3504771 {_90768 _90775 : Type'} (x : _90775) (s : _90768 -> Prop) (f : _90768 -> _90775) (t : _90768 -> Prop) (u : _90775 -> Prop) (h1 : term1088 _90768 _90775 t f s u x) (h2 : term1056 _90768 _90775 s f t u) : (term1088 _90768 _90775 t f s u x) = False.
Proof. exact (prop_ext (fun h3 : term1088 _90768 _90775 t f s u x => @lem3504770 _90768 _90775 x s f t u h1 h2) (fun h3 : False => @lem3499439 _90768 _90775 t f s u x h1)). Qed.
Lemma lem3504772 {_90768 _90775 : Type'} (x : _90775) (s : _90768 -> Prop) (f : _90768 -> _90775) (t : _90768 -> Prop) (u : _90775 -> Prop) (h1 : term1088 _90768 _90775 t f s u x) (h2 : term1056 _90768 _90775 s f t u) : False.
Proof. exact (EQ_MP (@lem3504771 _90768 _90775 x s f t u h1 h2) (@lem3499439 _90768 _90775 t f s u x h1)). Qed.
Lemma lem3504773 {_90768 _90775 : Type'} (x : _90775) (s : _90768 -> Prop) (f : _90768 -> _90775) (t : _90768 -> Prop) (u : _90775 -> Prop) (h1 : term1056 _90768 _90775 s f t u) : term1087 _90768 _90775 t f s u x.
Proof. exact (fun h0 : term1088 _90768 _90775 t f s u x => @lem3504772 _90768 _90775 x s f t u h0 h1). Qed.
Lemma lem3504774 {_90768 _90775 : Type'} (x : _90775) (s : _90768 -> Prop) (f : _90768 -> _90775) (t : _90768 -> Prop) (u : _90775 -> Prop) (h1 : term1056 _90768 _90775 s f t u) : (term1039 _90768 _90775 x f s t) = (term1060 _90768 _90775 f s u x).
Proof. exact (EQ_MP (@lem3499438 _90768 _90775 t f s u x) (@lem3504773 _90768 _90775 x s f t u h1)). Qed.
Lemma lem3504779 {_90768 _90775 : Type'} (s : _90768 -> Prop) (f : _90768 -> _90775) (t : _90768 -> Prop) (u : _90775 -> Prop) (h1 : term1056 _90768 _90775 s f t u) : term1063 _90768 _90775 t f s u.
Proof. exact (fun x : _90775 => @lem3504774 _90768 _90775 x s f t u h1). Qed.
Lemma lem3504780 {_90768 _90775 : Type'} (t : _90768 -> Prop) (f : _90768 -> _90775) (s : _90768 -> Prop) (u : _90775 -> Prop) : term1064 _90768 _90775 t f s u.
Proof. exact (fun h0 : term1056 _90768 _90775 s f t u => @lem3504779 _90768 _90775 s f t u h0). Qed.
Lemma lem3504785 {_90768 _90775 : Type'} (f : _90768 -> _90775) (s : _90768 -> Prop) (u : _90775 -> Prop) : term1074 _90768 _90775 f s u.
Proof. exact (fun t : _90768 -> Prop => @lem3504780 _90768 _90775 t f s u). Qed.
Lemma lem3504790 {_90768 _90775 : Type'} (s : _90768 -> Prop) (u : _90775 -> Prop) : term1078 _90768 _90775 s u.
Proof. exact (fun f : _90768 -> _90775 => @lem3504785 _90768 _90775 f s u). Qed.
Lemma lem3504795 {_90768 _90775 : Type'} (u : _90775 -> Prop) : term1082 _90768 _90775 u.
Proof. exact (fun s : _90768 -> Prop => @lem3504790 _90768 _90775 s u). Qed.
Lemma lem3504800 {_90768 _90775 : Type'} : term1086 _90768 _90775.
Proof. exact (fun u : _90775 -> Prop => @lem3504795 _90768 _90775 u). Qed.
Lemma lem3504801 {_90768 _90775 : Type'} : term1085 _90768 _90775.
Proof. exact (EQ_MP (@lem3499433 _90768 _90775) (@lem3504800 _90768 _90775)). Qed.
Lemma lem3504802 {_90768 _90775 : Type'} (u : _90775 -> Prop) : term1789 _90768 _90775 u.
Proof. exact (@lem3504801 _90768 _90775 u). Qed.
Lemma lem3504803 {_90768 _90775 : Type'} (u : _90775 -> Prop) : (term1789 _90768 _90775 u) = (term1081 _90768 _90775 u).
Proof. exact (eq_refl (term1789 _90768 _90775 u)). Qed.
Lemma lem3504804 {_90768 _90775 : Type'} (u : _90775 -> Prop) : term1081 _90768 _90775 u.
Proof. exact (EQ_MP (@lem3504803 _90768 _90775 u) (@lem3504802 _90768 _90775 u)). Qed.
Lemma lem3504805 {_90768 _90775 : Type'} (u : _90775 -> Prop) (s : _90768 -> Prop) : term1790 _90768 _90775 u s.
Proof. exact (@lem3504804 _90768 _90775 u s). Qed.
Lemma lem3504806 {_90768 _90775 : Type'} (s : _90768 -> Prop) (u : _90775 -> Prop) : (term1790 _90768 _90775 u s) = (term1077 _90768 _90775 s u).
Proof. exact (eq_refl (term1790 _90768 _90775 u s)). Qed.
Lemma lem3504807 {_90768 _90775 : Type'} (s : _90768 -> Prop) (u : _90775 -> Prop) : term1077 _90768 _90775 s u.
Proof. exact (EQ_MP (@lem3504806 _90768 _90775 s u) (@lem3504805 _90768 _90775 u s)). Qed.
Lemma lem3504808 {_90768 _90775 : Type'} (s : _90768 -> Prop) (u : _90775 -> Prop) (f : _90768 -> _90775) : term1791 _90768 _90775 s u f.
Proof. exact (@lem3504807 _90768 _90775 s u f). Qed.
Lemma lem3504809 {_90768 _90775 : Type'} (f : _90768 -> _90775) (s : _90768 -> Prop) (u : _90775 -> Prop) : (term1791 _90768 _90775 s u f) = (term1073 _90768 _90775 f s u).
Proof. exact (eq_refl (term1791 _90768 _90775 s u f)). Qed.
Lemma lem3504810 {_90768 _90775 : Type'} (f : _90768 -> _90775) (s : _90768 -> Prop) (u : _90775 -> Prop) : term1073 _90768 _90775 f s u.
Proof. exact (EQ_MP (@lem3504809 _90768 _90775 f s u) (@lem3504808 _90768 _90775 s u f)). Qed.
Lemma lem3504811 {_90768 _90775 : Type'} (f : _90768 -> _90775) (s : _90768 -> Prop) (u : _90775 -> Prop) (t : _90768 -> Prop) : term1792 _90768 _90775 f s u t.
Proof. exact (@lem3504810 _90768 _90775 f s u t). Qed.
Lemma lem3504812 {_90768 _90775 : Type'} (t : _90768 -> Prop) (f : _90768 -> _90775) (s : _90768 -> Prop) (u : _90775 -> Prop) : (term1792 _90768 _90775 f s u t) = (term1065 _90768 _90775 t f s u).
Proof. exact (eq_refl (term1792 _90768 _90775 f s u t)). Qed.
Lemma lem3504813 {_90768 _90775 : Type'} (t : _90768 -> Prop) (f : _90768 -> _90775) (s : _90768 -> Prop) (u : _90775 -> Prop) : term1065 _90768 _90775 t f s u.
Proof. exact (EQ_MP (@lem3504812 _90768 _90775 t f s u) (@lem3504811 _90768 _90775 f s u t)). Qed.
Lemma lem3504815 {_90768 _90775 : Type'} (t : _90768 -> Prop) (f : _90768 -> _90775) (s : _90768 -> Prop) (u : _90775 -> Prop) : term1065 _90768 _90775 t f s u.
Proof. exact (@lem3498912 _90768 _90775 t f s u (@lem3504813 _90768 _90775 t f s u)). Qed.
Lemma lem3504816 {_90768 _90775 : Type'} (t : _90768 -> Prop) (f : _90768 -> _90775) (s : _90768 -> Prop) (u : _90775 -> Prop) (h1 : term1066 _90768 _90775 t f s u) : False.
Proof. exact (@lem3504815 _90768 _90775 t f s u (@lem3498896 _90768 _90775 t f s u h1)). Qed.
Lemma lem3504817 {_90768 _90775 : Type'} (t : _90768 -> Prop) (f : _90768 -> _90775) (s : _90768 -> Prop) (u : _90775 -> Prop) (h1 : term1066 _90768 _90775 t f s u) : (term1066 _90768 _90775 t f s u) = False.
Proof. exact (prop_ext (fun h2 : term1066 _90768 _90775 t f s u => @lem3504816 _90768 _90775 t f s u h1) (fun h2 : False => @lem3498896 _90768 _90775 t f s u h1)). Qed.
Lemma lem3504818 {_90768 _90775 : Type'} (t : _90768 -> Prop) (f : _90768 -> _90775) (s : _90768 -> Prop) (u : _90775 -> Prop) (h1 : term1066 _90768 _90775 t f s u) : False.
Proof. exact (EQ_MP (@lem3504817 _90768 _90775 t f s u h1) (@lem3498896 _90768 _90775 t f s u h1)). Qed.
Lemma lem3504819 {_90768 _90775 : Type'} (t : _90768 -> Prop) (f : _90768 -> _90775) (s : _90768 -> Prop) (u : _90775 -> Prop) : term1065 _90768 _90775 t f s u.
Proof. exact (fun h0 : term1066 _90768 _90775 t f s u => @lem3504818 _90768 _90775 t f s u h0). Qed.
Lemma lem3504820 {_90768 _90775 : Type'} (t : _90768 -> Prop) (f : _90768 -> _90775) (s : _90768 -> Prop) (u : _90775 -> Prop) : term1064 _90768 _90775 t f s u.
Proof. exact (EQ_MP (@lem3498895 _90768 _90775 t f s u) (@lem3504819 _90768 _90775 t f s u)). Qed.
Lemma lem3504821 {_90768 _90775 : Type'} (t : _90768 -> Prop) (f : _90768 -> _90775) (s : _90768 -> Prop) (u : _90775 -> Prop) : term1029 _90768 _90775 t f s u.
Proof. exact (EQ_MP (@lem3498891 _90768 _90775 t f s u) (@lem3504820 _90768 _90775 t f s u)). Qed.
Lemma lem3504822 {_90768 _90775 : Type'} (t : _90768 -> Prop) (f : _90768 -> _90775) (s : _90768 -> Prop) (u : _90775 -> Prop) : term1028 _90768 _90775 t f s u.
Proof. exact (EQ_MP (@lem3498592 _90768 _90775 t f s u) (@lem3504821 _90768 _90775 t f s u)). Qed.
Lemma lem3504823 {_90768 _90775 : Type'} (t : _90768 -> Prop) (f : _90768 -> _90775) (s : _90768 -> Prop) (u : _90775 -> Prop) (h1 : term1028 _90768 _90775 t f s u) : term1028 _90768 _90775 t f s u.
Proof. exact (h1). Qed.
Lemma lem3504824 {_90768 _90775 : Type'} (s : _90768 -> Prop) (f : _90768 -> _90775) (t : _90768 -> Prop) (u : _90775 -> Prop) (h1 : term1022 _90768 _90775 s f t u) : term1022 _90768 _90775 s f t u.
Proof. exact (h1). Qed.
Lemma lem3504825 {_90768 _90775 : Type'} (t : _90768 -> Prop) (f : _90768 -> _90775) (s : _90768 -> Prop) (u : _90775 -> Prop) (h1 : term1022 _90768 _90775 s f t u) (h2 : term1028 _90768 _90775 t f s u) : (term1005 _90768 _90775 f s t) = (term1026 _90768 _90775 f s u).
Proof. exact (@lem3504823 _90768 _90775 t f s u h2 (@lem3504824 _90768 _90775 s f t u h1)). Qed.
Lemma lem3504826 {_90768 _90775 : Type'} (s : _90768 -> Prop) (f : _90768 -> _90775) (t : _90768 -> Prop) (u : _90775 -> Prop) (h1 : term1022 _90768 _90775 s f t u) : term1793 _90768 _90775 t f s u.
Proof. exact (fun h0 : term1028 _90768 _90775 t f s u => @lem3504825 _90768 _90775 t f s u h1 h0). Qed.
Lemma lem3504827 {_90768 _90775 : Type'} (t : _90768 -> Prop) (f : _90768 -> _90775) (s : _90768 -> Prop) (u : _90775 -> Prop) (h1 : term1028 _90768 _90775 t f s u) : term1028 _90768 _90775 t f s u.
Proof. exact (h1). Qed.
Lemma lem3504828 {_90768 _90775 : Type'} (t : _90768 -> Prop) (f : _90768 -> _90775) (s : _90768 -> Prop) (u : _90775 -> Prop) (h1 : term1022 _90768 _90775 s f t u) (h2 : term1028 _90768 _90775 t f s u) : (term1005 _90768 _90775 f s t) = (term1026 _90768 _90775 f s u).
Proof. exact (@lem3504826 _90768 _90775 s f t u h1 (@lem3504827 _90768 _90775 t f s u h2)). Qed.
Lemma lem3504829 {_90768 _90775 : Type'} (t : _90768 -> Prop) (f : _90768 -> _90775) (s : _90768 -> Prop) (u : _90775 -> Prop) (h1 : term1028 _90768 _90775 t f s u) : term1028 _90768 _90775 t f s u.
Proof. exact (fun h0 : term1022 _90768 _90775 s f t u => @lem3504828 _90768 _90775 t f s u h0 h1). Qed.
Lemma lem3504830 {_90768 _90775 : Type'} (t : _90768 -> Prop) (f : _90768 -> _90775) (s : _90768 -> Prop) (u : _90775 -> Prop) : term1794 _90768 _90775 t f s u.
Proof. exact (fun h0 : term1028 _90768 _90775 t f s u => @lem3504829 _90768 _90775 t f s u h0). Qed.
Lemma lem3504834 {A : Type'} (g : type686 A) (s : A -> Prop) : term1795 A g s.
Proof. exact (@lem9784 ((@DELETE (A -> Prop) g s) = (@EMPTY (A -> Prop)))). Qed.
Lemma lem3504835 {A : Type'} (g : type686 A) (s : A -> Prop) : (term1795 A g s) = (term1796 A g s).
Proof. exact (eq_refl (term1795 A g s)). Qed.
Lemma lem3504836 {A : Type'} (g : type686 A) (s : A -> Prop) : term1796 A g s.
Proof. exact (EQ_MP (@lem3504835 A g s) (@lem3504834 A g s)). Qed.
Lemma lem3504838 {A : Type'} (g : type686 A) (s : A -> Prop) (h1 : term1797 A g s) : term1797 A g s.
Proof. exact (h1). Qed.
Lemma lem3504839 {A : Type'} (x : A) : term1798 A x.
Proof. exact (@lem3278799 A x). Qed.
Lemma lem3504840 {A : Type'} (x : A) : (term1798 A x) = (term1799 A x).
Proof. exact (eq_refl (term1798 A x)). Qed.
Lemma lem3504841 {A : Type'} (x : A) : term1799 A x.
Proof. exact (EQ_MP (@lem3504840 A x) (@lem3504839 A x)). Qed.
Lemma lem3504842 {A : Type'} (x : A) (s : A -> Prop) : term1800 A x s.
Proof. exact (@lem3504841 A x s). Qed.
Lemma lem3504843 {A : Type'} (x : A) (s : A -> Prop) : (term1800 A x s) = (term1801 A x s).
Proof. exact (eq_refl (term1800 A x s)). Qed.
Lemma lem3504844 {A : Type'} (x : A) (s : A -> Prop) : term1801 A x s.
Proof. exact (EQ_MP (@lem3504843 A x s) (@lem3504842 A x s)). Qed.
Lemma lem3504845 {A : Type'} (x : A) (s : A -> Prop) : term1802 A x s.
Proof. exact (@lem82 ((@INSERT A x s) = (@EMPTY A))). Qed.
Lemma lem3504858 {_83983 : Type'} (P : _83983 -> Prop) : term1803 _83983 P.
Proof. exact (@lem3207453 _83983 P). Qed.
Lemma lem3504859 {_83983 : Type'} (P : _83983 -> Prop) : (term1803 _83983 P) = (term1804 _83983 P).
Proof. exact (eq_refl (term1803 _83983 P)). Qed.
Lemma lem3504860 {_83983 : Type'} (P : _83983 -> Prop) : term1804 _83983 P.
Proof. exact (EQ_MP (@lem3504859 _83983 P) (@lem3504858 _83983 P)). Qed.
Lemma lem3504861 {_83983 : Type'} (P : _83983 -> Prop) (a : _83983) : term1805 _83983 P a.
Proof. exact (@lem3504860 _83983 P a). Qed.
Lemma lem3504862 {_83983 : Type'} (a : _83983) (P : _83983 -> Prop) : (term1805 _83983 P a) = (term1806 _83983 a P).
Proof. exact (eq_refl (term1805 _83983 P a)). Qed.
Lemma lem3504863 {_83983 : Type'} (a : _83983) (P : _83983 -> Prop) : term1806 _83983 a P.
Proof. exact (EQ_MP (@lem3504862 _83983 a P) (@lem3504861 _83983 P a)). Qed.
Lemma lem3504864 {_83983 : Type'} (a : _83983) (P : _83983 -> Prop) (s : _83983 -> Prop) : term1807 _83983 a P s.
Proof. exact (@lem3504863 _83983 a P s). Qed.
Lemma lem3504865 {_83983 : Type'} (a : _83983) (s : _83983 -> Prop) (P : _83983 -> Prop) : (term1807 _83983 a P s) = ((term1808 _83983 a s P) = (term1809 _83983 a s P)).
Proof. exact (eq_refl (term1807 _83983 a P s)). Qed.
Lemma lem3504882 {A : Type'} (s : A -> Prop) (t : A -> Prop) : (s = t) = (term37 A s t).
Proof. exact (EQ_MP (@lem3211757 A s t) (@lem3211756 A s t)). Qed.
Lemma lem3504883 {_90796 : Type'} (s : _90796 -> Prop) (t : _90796 -> Prop) : (s = t) = (term37 _90796 s t).
Proof. exact (@lem3504882 _90796 s t). Qed.
Lemma lem3504884 {_90796 : Type'} (s : _90796 -> Prop) (x : _90796) : (s = (term1810 _90796 s x)) = (term1811 _90796 s x).
Proof. exact (@lem3504883 _90796 s (term1810 _90796 s x)). Qed.
Lemma lem3504893 {_90796 : Type'} (x : _90796) (s : _90796 -> Prop) : (term213 _90796 x s) = (term213 _90796 x s).
Proof. exact (eq_refl (term213 _90796 x s)). Qed.
Lemma lem3504894 {_90796 : Type'} (s : _90796 -> Prop) (x : _90796) : (term1812 _90796 s x) = (term1813 _90796 s x).
Proof. exact (MK_COMB (@lem3504893 _90796 x s) (@lem3504884 _90796 s x)). Qed.
Lemma lem3504897 {_90796 : Type'} (s : _90796 -> Prop) (x : _90796) : (term1813 _90796 s x) = (term1812 _90796 s x).
Proof. exact (SYM (@lem3504894 _90796 s x)). Qed.
Lemma lem3504901 {A : Type'} (P : A -> Prop) (x : A) : (@IN A x P) = (P x).
Proof. exact (EQ_MP (@lem3211610 A P x) (@lem3211609 A P x)). Qed.
Lemma lem3504902 {_90796 : Type'} (P : _90796 -> Prop) (x : _90796) : (@IN _90796 x P) = (P x).
Proof. exact (@lem3504901 _90796 P x). Qed.
Lemma lem3504903 {_90796 : Type'} (s : _90796 -> Prop) (x : _90796) : (@IN _90796 x s) = (s x).
Proof. exact (@lem3504902 _90796 s x). Qed.
Lemma lem3504904 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem3504905 {_90796 : Type'} (s : _90796 -> Prop) (x : _90796) : (term213 _90796 x s) = (term214 _90796 s x).
Proof. exact (MK_COMB (@lem3504904) (@lem3504903 _90796 s x)). Qed.
Lemma lem3504913 {A : Type'} (P : A -> Prop) (x : A) : (@IN A x P) = (P x).
Proof. exact (EQ_MP (@lem3211610 A P x) (@lem3211609 A P x)). Qed.
Lemma lem3504914 {_90796 : Type'} (P : _90796 -> Prop) (x : _90796) : (@IN _90796 x P) = (P x).
Proof. exact (@lem3504913 _90796 P x). Qed.
Lemma lem3504915 {_90796 : Type'} (s : _90796 -> Prop) (x' : _90796) : (@IN _90796 x' s) = (s x').
Proof. exact (@lem3504914 _90796 s x'). Qed.
Lemma lem3504916 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem3504917 {_90796 : Type'} (s : _90796 -> Prop) (x' : _90796) : (term1814 _90796 x' s) = (term1670 _90796 s x').
Proof. exact (MK_COMB (@lem3504916) (@lem3504915 _90796 s x')). Qed.
Lemma lem3504919 {A : Type'} (y : A) (x : A) (s : A -> Prop) : (term1815 A x y s) = (term1816 A y x s).
Proof. exact (EQ_MP (@lem3211693 A y x s) (@lem3211692 A y x s)). Qed.
Lemma lem3504920 {_90796 : Type'} (y : _90796) (x : _90796) (s : _90796 -> Prop) : (term1815 _90796 x y s) = (term1816 _90796 y x s).
Proof. exact (@lem3504919 _90796 y x s). Qed.
Lemma lem3504921 {_90796 : Type'} (x' : _90796) (s : _90796 -> Prop) (x : _90796) : (term1817 _90796 x' s x) = (term1818 _90796 x' s x).
Proof. exact (@lem3504920 _90796 x x' (@DELETE _90796 s x)). Qed.
Lemma lem3504927 {A : Type'} (s : A -> Prop) (x : A) (y : A) : (term1819 A x s y) = (term1820 A s x y).
Proof. exact (EQ_MP (@lem3211684 A s x y) (@lem3211683 A s x y)). Qed.
Lemma lem3504928 {_90796 : Type'} (s : _90796 -> Prop) (x : _90796) (y : _90796) : (term1819 _90796 x s y) = (term1820 _90796 s x y).
Proof. exact (@lem3504927 _90796 s x y). Qed.
Lemma lem3504929 {_90796 : Type'} (s : _90796 -> Prop) (x' : _90796) (x : _90796) : (term1819 _90796 x' s x) = (term1820 _90796 s x' x).
Proof. exact (@lem3504928 _90796 s x' x). Qed.
Lemma lem3504933 {A : Type'} (P : A -> Prop) (x : A) : (@IN A x P) = (P x).
Proof. exact (EQ_MP (@lem3211610 A P x) (@lem3211609 A P x)). Qed.
Lemma lem3504934 {_90796 : Type'} (P : _90796 -> Prop) (x : _90796) : (@IN _90796 x P) = (P x).
Proof. exact (@lem3504933 _90796 P x). Qed.
Lemma lem3504935 {_90796 : Type'} (s : _90796 -> Prop) (x' : _90796) : (@IN _90796 x' s) = (s x').
Proof. exact (@lem3504934 _90796 s x'). Qed.
Lemma lem3504936 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem3504937 {_90796 : Type'} (s : _90796 -> Prop) (x' : _90796) : (term56 _90796 x' s) = (term234 _90796 s x').
Proof. exact (MK_COMB (@lem3504936) (@lem3504935 _90796 s x')). Qed.
Lemma lem3504940 {_90796 : Type'} (x' : _90796) (x : _90796) : (term909 _90796 x' x) = (term909 _90796 x' x).
Proof. exact (eq_refl (term909 _90796 x' x)). Qed.
Lemma lem3504941 {_90796 : Type'} (s : _90796 -> Prop) (x' : _90796) (x : _90796) : (term1820 _90796 s x' x) = (term1821 _90796 s x' x).
Proof. exact (MK_COMB (@lem3504937 _90796 s x') (@lem3504940 _90796 x' x)). Qed.
Lemma lem3504944 {_90796 : Type'} (s : _90796 -> Prop) (x' : _90796) (x : _90796) : (term1819 _90796 x' s x) = (term1821 _90796 s x' x).
Proof. exact (TRANS (@lem3504929 _90796 s x' x) (@lem3504941 _90796 s x' x)). Qed.
Lemma lem3504945 {_90796 : Type'} (x' : _90796) (x : _90796) : (term1822 _90796 x' x) = (term1822 _90796 x' x).
Proof. exact (eq_refl (term1822 _90796 x' x)). Qed.
Lemma lem3504946 {_90796 : Type'} (s : _90796 -> Prop) (x' : _90796) (x : _90796) : (term1818 _90796 x' s x) = (term1823 _90796 s x' x).
Proof. exact (MK_COMB (@lem3504945 _90796 x' x) (@lem3504944 _90796 s x' x)). Qed.
Lemma lem3504949 {_90796 : Type'} (s : _90796 -> Prop) (x' : _90796) (x : _90796) : (term1817 _90796 x' s x) = (term1823 _90796 s x' x).
Proof. exact (TRANS (@lem3504921 _90796 x' s x) (@lem3504946 _90796 s x' x)). Qed.
Lemma lem3504950 {_90796 : Type'} (s : _90796 -> Prop) (x' : _90796) (x : _90796) : ((@IN _90796 x' s) = (term1817 _90796 x' s x)) = ((s x') = (term1823 _90796 s x' x)).
Proof. exact (MK_COMB (@lem3504917 _90796 s x') (@lem3504949 _90796 s x' x)). Qed.
Lemma lem3504953 {_90796 : Type'} (s : _90796 -> Prop) (x : _90796) : (term1824 _90796 s x) = (term1825 _90796 s x).
Proof. exact (fun_ext (fun x' : _90796 => @lem3504950 _90796 s x' x)). Qed.
Lemma lem3504954 {_90796 : Type'} : (@all _90796) = (@all _90796).
Proof. exact (eq_refl (@all _90796)). Qed.
Lemma lem3504955 {_90796 : Type'} (s : _90796 -> Prop) (x : _90796) : (term1811 _90796 s x) = (term1826 _90796 s x).
Proof. exact (MK_COMB (@lem3504954 _90796) (@lem3504953 _90796 s x)). Qed.
Lemma lem3504960 {_90796 : Type'} (s : _90796 -> Prop) (x : _90796) : (term1813 _90796 s x) = (term1827 _90796 s x).
Proof. exact (MK_COMB (@lem3504905 _90796 s x) (@lem3504955 _90796 s x)). Qed.
Lemma lem3504963 {_90796 : Type'} (s : _90796 -> Prop) (x : _90796) : (term1827 _90796 s x) = (term1813 _90796 s x).
Proof. exact (SYM (@lem3504960 _90796 s x)). Qed.
Lemma lem3504965 (p : Prop) : p = (term275 p).
Proof. exact (EQ_MP (@lem10578 p) (@lem10597 p)). Qed.
Lemma lem3504966 {_90796 : Type'} (s : _90796 -> Prop) (x : _90796) : (term1827 _90796 s x) = (term1828 _90796 s x).
Proof. exact (@lem3504965 (term1827 _90796 s x)). Qed.
Lemma lem3504967 {_90796 : Type'} (s : _90796 -> Prop) (x : _90796) : (term1828 _90796 s x) = (term1827 _90796 s x).
Proof. exact (SYM (@lem3504966 _90796 s x)). Qed.
Lemma lem3504968 {_90796 : Type'} (s : _90796 -> Prop) (x : _90796) (h1 : term1829 _90796 s x) : term1829 _90796 s x.
Proof. exact (h1). Qed.
Lemma lem3504971 {_90796 : Type'} (s : _90796 -> Prop) (x : _90796) (h1 : term1828 _90796 s x) : term1828 _90796 s x.
Proof. exact (h1). Qed.
Lemma lem3504972 {_90796 : Type'} (s : _90796 -> Prop) (x : _90796) : term1830 _90796 s x.
Proof. exact (fun h0 : term1828 _90796 s x => @lem3504971 _90796 s x h0). Qed.
Lemma lem3504973 {_90796 : Type'} (s : _90796 -> Prop) (x : _90796) (h1 : term1830 _90796 s x) : term1830 _90796 s x.
Proof. exact (h1). Qed.
Lemma lem3504974 {_90796 : Type'} (s : _90796 -> Prop) (x : _90796) (h1 : term1828 _90796 s x) : term1828 _90796 s x.
Proof. exact (h1). Qed.
Lemma lem3504975 {_90796 : Type'} (s : _90796 -> Prop) (x : _90796) (h1 : term1828 _90796 s x) (h2 : term1830 _90796 s x) : term1828 _90796 s x.
Proof. exact (@lem3504973 _90796 s x h2 (@lem3504974 _90796 s x h1)). Qed.
Lemma lem3504976 {_90796 : Type'} (s : _90796 -> Prop) (x : _90796) (h1 : term1828 _90796 s x) : term1831 _90796 s x.
Proof. exact (fun h0 : term1830 _90796 s x => @lem3504975 _90796 s x h1 h0). Qed.
Lemma lem3504977 {_90796 : Type'} (s : _90796 -> Prop) (x : _90796) (h1 : term1830 _90796 s x) : term1830 _90796 s x.
Proof. exact (h1). Qed.
Lemma lem3504978 {_90796 : Type'} (s : _90796 -> Prop) (x : _90796) (h1 : term1828 _90796 s x) (h2 : term1830 _90796 s x) : term1828 _90796 s x.
Proof. exact (@lem3504976 _90796 s x h1 (@lem3504977 _90796 s x h2)). Qed.
Lemma lem3504979 {_90796 : Type'} (s : _90796 -> Prop) (x : _90796) (h1 : term1830 _90796 s x) : term1830 _90796 s x.
Proof. exact (fun h0 : term1828 _90796 s x => @lem3504978 _90796 s x h0 h1). Qed.
Lemma lem3504980 {_90796 : Type'} (s : _90796 -> Prop) (x : _90796) : term1832 _90796 s x.
Proof. exact (fun h0 : term1830 _90796 s x => @lem3504979 _90796 s x h0). Qed.
Lemma lem3504983 {_90796 : Type'} (s : _90796 -> Prop) (x : _90796) : term1830 _90796 s x.
Proof. exact (@lem3504980 _90796 s x (@lem3504972 _90796 s x)). Qed.
Lemma lem3504984 {_90796 : Type'} (s : _90796 -> Prop) (x : _90796) : term1830 _90796 s x.
Proof. exact (@lem3504983 _90796 s x). Qed.
Lemma lem3504994 (t : Prop) : (t -> False) = (~ t).
Proof. exact (proj2 (@lem16474 t)). Qed.
Lemma lem3504995 {_90796 : Type'} (s : _90796 -> Prop) (x : _90796) : (term1828 _90796 s x) = (term1833 _90796 s x).
Proof. exact (@lem3504994 (term1829 _90796 s x)). Qed.
Lemma lem3504997 (t : Prop) : (term282 t) = t.
Proof. exact (EQ_MP (@lem16507 t) (@lem16506 t)). Qed.
Lemma lem3504998 {_90796 : Type'} (s : _90796 -> Prop) (x : _90796) : (term1833 _90796 s x) = (term1827 _90796 s x).
Proof. exact (@lem3504997 (term1827 _90796 s x)). Qed.
Lemma lem3505001 {_90796 : Type'} (s : _90796 -> Prop) (x : _90796) : (term1828 _90796 s x) = (term1827 _90796 s x).
Proof. exact (TRANS (@lem3504995 _90796 s x) (@lem3504998 _90796 s x)). Qed.
Lemma lem3505010 {_90796 : Type'} (x : _90796) : (term1834 _90796 x) = (term1835 _90796 x).
Proof. exact (fun_ext (fun s : _90796 -> Prop => @lem3505001 _90796 s x)). Qed.
Lemma lem3505011 {_90796 : Type'} : (@all (_90796 -> Prop)) = (@all (_90796 -> Prop)).
Proof. exact (eq_refl (@all (_90796 -> Prop))). Qed.
Lemma lem3505012 {_90796 : Type'} (x : _90796) : (term1836 _90796 x) = (term1837 _90796 x).
Proof. exact (MK_COMB (@lem3505011 _90796) (@lem3505010 _90796 x)). Qed.
Lemma lem3505017 {_90796 : Type'} : (term1838 _90796) = (term1839 _90796).
Proof. exact (fun_ext (fun x : _90796 => @lem3505012 _90796 x)). Qed.
Lemma lem3505018 {_90796 : Type'} : (@all _90796) = (@all _90796).
Proof. exact (eq_refl (@all _90796)). Qed.
Lemma lem3505027 {_90796 : Type'} : (term1840 _90796) = (term1841 _90796).
Proof. exact (MK_COMB (@lem3505018 _90796) (@lem3505017 _90796)). Qed.
Lemma lem3505042 {_90796 : Type'} (s : _90796 -> Prop) (x' : _90796) (x : _90796) : ((s x') = (term1823 _90796 s x' x)) = ((s x') = (term1823 _90796 s x' x)).
Proof. exact (eq_refl ((s x') = (term1823 _90796 s x' x))). Qed.
Lemma lem3505043 {_90796 : Type'} (s : _90796 -> Prop) (x : _90796) : (term1825 _90796 s x) = (term1825 _90796 s x).
Proof. exact (fun_ext (fun x' : _90796 => @lem3505042 _90796 s x' x)). Qed.
Lemma lem3505044 {_90796 : Type'} : (@all _90796) = (@all _90796).
Proof. exact (eq_refl (@all _90796)). Qed.
Lemma lem3505045 {_90796 : Type'} (s : _90796 -> Prop) (x : _90796) : (term1826 _90796 s x) = (term1826 _90796 s x).
Proof. exact (MK_COMB (@lem3505044 _90796) (@lem3505043 _90796 s x)). Qed.
Lemma lem3505048 {_90796 : Type'} (s : _90796 -> Prop) (x : _90796) : (term214 _90796 s x) = (term214 _90796 s x).
Proof. exact (eq_refl (term214 _90796 s x)). Qed.
Lemma lem3505049 {_90796 : Type'} (s : _90796 -> Prop) (x : _90796) : (term1827 _90796 s x) = (term1827 _90796 s x).
Proof. exact (MK_COMB (@lem3505048 _90796 s x) (@lem3505045 _90796 s x)). Qed.
Lemma lem3505050 {_90796 : Type'} (x : _90796) : (term1835 _90796 x) = (term1835 _90796 x).
Proof. exact (fun_ext (fun s : _90796 -> Prop => @lem3505049 _90796 s x)). Qed.
Lemma lem3505051 {_90796 : Type'} : (@all (_90796 -> Prop)) = (@all (_90796 -> Prop)).
Proof. exact (eq_refl (@all (_90796 -> Prop))). Qed.
Lemma lem3505052 {_90796 : Type'} (x : _90796) : (term1837 _90796 x) = (term1837 _90796 x).
Proof. exact (MK_COMB (@lem3505051 _90796) (@lem3505050 _90796 x)). Qed.
Lemma lem3505053 {_90796 : Type'} : (term1839 _90796) = (term1839 _90796).
Proof. exact (fun_ext (fun x : _90796 => @lem3505052 _90796 x)). Qed.
Lemma lem3505054 {_90796 : Type'} : (@all _90796) = (@all _90796).
Proof. exact (eq_refl (@all _90796)). Qed.
Lemma lem3505055 {_90796 : Type'} : (term1841 _90796) = (term1841 _90796).
Proof. exact (MK_COMB (@lem3505054 _90796) (@lem3505053 _90796)). Qed.
Lemma lem3505082 {_90796 : Type'} : (term1840 _90796) = (term1841 _90796).
Proof. exact (TRANS (@lem3505027 _90796) (@lem3505055 _90796)). Qed.
Lemma lem3505083 {_90796 : Type'} : (term1841 _90796) = (term1840 _90796).
Proof. exact (SYM (@lem3505082 _90796)). Qed.
Lemma lem3505086 (p : Prop) : p = (term275 p).
Proof. exact (EQ_MP (@lem10578 p) (@lem10597 p)). Qed.
Lemma lem3505087 {_90796 : Type'} (s : _90796 -> Prop) (x' : _90796) (x : _90796) : ((s x') = (term1823 _90796 s x' x)) = (term1842 _90796 s x' x).
Proof. exact (@lem3505086 ((s x') = (term1823 _90796 s x' x))). Qed.
Lemma lem3505088 {_90796 : Type'} (s : _90796 -> Prop) (x' : _90796) (x : _90796) : (term1842 _90796 s x' x) = ((s x') = (term1823 _90796 s x' x)).
Proof. exact (SYM (@lem3505087 _90796 s x' x)). Qed.
Lemma lem3505089 {_90796 : Type'} (s : _90796 -> Prop) (x' : _90796) (x : _90796) (h1 : term1843 _90796 s x' x) : term1843 _90796 s x' x.
Proof. exact (h1). Qed.
Lemma lem3505095 {_90796 : Type'} (s : _90796 -> Prop) (x : _90796) (h1 : s x) : s x.
Proof. exact (h1). Qed.
Lemma lem3505105 {_90796 : Type'} (x' : _90796) (x : _90796) : (term919 _90796 x' x) = (x' = x).
Proof. exact (@lem16933 (x' = x)). Qed.
Lemma lem3505107 {_90796 : Type'} (s : _90796 -> Prop) (x' : _90796) : (term320 _90796 s x') = (term320 _90796 s x').
Proof. exact (eq_refl (term320 _90796 s x')). Qed.
Lemma lem3505108 {_90796 : Type'} (s : _90796 -> Prop) (x' : _90796) (x : _90796) : (term1844 _90796 s x' x) = (term1845 _90796 s x' x).
Proof. exact (MK_COMB (@lem3505107 _90796 s x') (@lem3505105 _90796 x' x)). Qed.
Lemma lem3505109 {_90796 : Type'} (s : _90796 -> Prop) (x' : _90796) (x : _90796) : (term1846 _90796 s x' x) = (term1844 _90796 s x' x).
Proof. exact (@lem17045 (s x') (term909 _90796 x' x)). Qed.
Lemma lem3505110 {_90796 : Type'} (s : _90796 -> Prop) (x' : _90796) (x : _90796) : (term1846 _90796 s x' x) = (term1845 _90796 s x' x).
Proof. exact (TRANS (@lem3505109 _90796 s x' x) (@lem3505108 _90796 s x' x)). Qed.
Lemma lem3505115 {_90796 : Type'} (x' : _90796) (x : _90796) : (term1847 _90796 x' x) = (term1847 _90796 x' x).
Proof. exact (eq_refl (term1847 _90796 x' x)). Qed.
Lemma lem3505116 {_90796 : Type'} (s : _90796 -> Prop) (x' : _90796) (x : _90796) : (term1848 _90796 s x' x) = (term1849 _90796 s x' x).
Proof. exact (MK_COMB (@lem3505115 _90796 x' x) (@lem3505110 _90796 s x' x)). Qed.
Lemma lem3505117 {_90796 : Type'} (s : _90796 -> Prop) (x' : _90796) (x : _90796) : (term1850 _90796 s x' x) = (term1848 _90796 s x' x).
Proof. exact (@lem17160 (x' = x) (term1821 _90796 s x' x)). Qed.
Lemma lem3505118 {_90796 : Type'} (s : _90796 -> Prop) (x' : _90796) (x : _90796) : (term1850 _90796 s x' x) = (term1849 _90796 s x' x).
Proof. exact (TRANS (@lem3505117 _90796 s x' x) (@lem3505116 _90796 s x' x)). Qed.
Lemma lem3505124 {_90796 : Type'} (s : _90796 -> Prop) (x' : _90796) (x : _90796) : (term1851 _90796 s x' x) = (term1851 _90796 s x' x).
Proof. exact (eq_refl (term1851 _90796 s x' x)). Qed.
Lemma lem3505126 {_90796 : Type'} (s : _90796 -> Prop) (x' : _90796) : (term234 _90796 s x') = (term234 _90796 s x').
Proof. exact (eq_refl (term234 _90796 s x')). Qed.
Lemma lem3505127 {_90796 : Type'} (s : _90796 -> Prop) (x' : _90796) (x : _90796) : (term1852 _90796 s x' x) = (term1853 _90796 s x' x).
Proof. exact (MK_COMB (@lem3505126 _90796 s x') (@lem3505118 _90796 s x' x)). Qed.
Lemma lem3505128 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem3505129 {_90796 : Type'} (s : _90796 -> Prop) (x' : _90796) (x : _90796) : (term1854 _90796 s x' x) = (term1855 _90796 s x' x).
Proof. exact (MK_COMB (@lem3505128) (@lem3505127 _90796 s x' x)). Qed.
Lemma lem3505130 {_90796 : Type'} (s : _90796 -> Prop) (x' : _90796) (x : _90796) : (term1856 _90796 s x' x) = (term1857 _90796 s x' x).
Proof. exact (MK_COMB (@lem3505129 _90796 s x' x) (@lem3505124 _90796 s x' x)). Qed.
Lemma lem3505131 {_90796 : Type'} (s : _90796 -> Prop) (x' : _90796) (x : _90796) : (term1843 _90796 s x' x) = (term1856 _90796 s x' x).
Proof. exact (@lem17646 (s x') (term1823 _90796 s x' x)). Qed.
Lemma lem3505136 {_90796 : Type'} (s : _90796 -> Prop) (x' : _90796) (x : _90796) : (term1843 _90796 s x' x) = (term1857 _90796 s x' x).
Proof. exact (TRANS (@lem3505131 _90796 s x' x) (@lem3505130 _90796 s x' x)). Qed.
Lemma lem3505141 {_90796 : Type'} (s : _90796 -> Prop) (x : _90796) (h1 : s x) : s x.
Proof. exact (h1). Qed.
Lemma lem3505203 {_90796 : Type'} (s : _90796 -> Prop) (x' : _90796) (x : _90796) (h1 : term1843 _90796 s x' x) : term1857 _90796 s x' x.
Proof. exact (EQ_MP (@lem3505136 _90796 s x' x) (@lem3505089 _90796 s x' x h1)). Qed.
Lemma lem3505204 {_90796 : Type'} (s : _90796 -> Prop) (x' : _90796) (x : _90796) (h1 : term1853 _90796 s x' x) : term1853 _90796 s x' x.
Proof. exact (h1). Qed.
Lemma lem3505205 {_90796 : Type'} (s : _90796 -> Prop) (x' : _90796) (x : _90796) (h1 : term1851 _90796 s x' x) : term1851 _90796 s x' x.
Proof. exact (h1). Qed.
Lemma lem3505206 {_90796 : Type'} (s : _90796 -> Prop) (x' : _90796) (x : _90796) (h1 : term1853 _90796 s x' x) : term1849 _90796 s x' x.
Proof. exact (proj2 (@lem3505204 _90796 s x' x h1)). Qed.
Lemma lem3505208 {_90796 : Type'} (s : _90796 -> Prop) (x' : _90796) (x : _90796) (h1 : term1853 _90796 s x' x) : term1845 _90796 s x' x.
Proof. exact (proj2 (@lem3505206 _90796 s x' x h1)). Qed.
Lemma lem3505212 {_90796 : Type'} (s : _90796 -> Prop) (x' : _90796) (x : _90796) (h1 : term1851 _90796 s x' x) : term1823 _90796 s x' x.
Proof. exact (proj2 (@lem3505205 _90796 s x' x h1)). Qed.
Lemma lem3505215 {_90796 : Type'} (s : _90796 -> Prop) (x' : _90796) (x : _90796) (h1 : term1821 _90796 s x' x) : term1821 _90796 s x' x.
Proof. exact (h1). Qed.
Lemma lem3505233 {_90796 : Type'} (s : _90796 -> Prop) (x' : _90796) (h1 : term618 _90796 s x') : term618 _90796 s x'.
Proof. exact (h1). Qed.
Lemma lem3505249 {_90796 : Type'} (x' : _90796) (x : _90796) (h1 : x' = x) : x' = x.
Proof. exact (h1). Qed.
Lemma lem3505253 {_90796 : Type'} (s : _90796 -> Prop) (x : _90796) (h1 : s x) : s x.
Proof. exact (h1). Qed.
Lemma lem3505261 {_90796 : Type'} (x' : _90796) (x : _90796) (h1 : x' = x) : x' = x.
Proof. exact (h1). Qed.
Lemma lem3505285 {_90796 : Type'} (s : _90796 -> Prop) (x' : _90796) (h1 : term618 _90796 s x') : term618 _90796 s x'.
Proof. exact (h1). Qed.
Lemma lem3505291 {_90796 : Type'} (s : _90796 -> Prop) (x' : _90796) (x : _90796) (h1 : term1853 _90796 s x' x) : term909 _90796 x' x.
Proof. exact (proj1 (@lem3505206 _90796 s x' x h1)). Qed.
Lemma lem3505293 {_90796 : Type'} (x' : _90796) (x : _90796) (h1 : x' = x) : x' = x.
Proof. exact (h1). Qed.
Lemma lem3505295 {_90796 : Type'} (s : _90796 -> Prop) (x : _90796) (h1 : s x) : s x.
Proof. exact (h1). Qed.
Lemma lem3505297 {_90796 : Type'} (s : _90796 -> Prop) (x' : _90796) (x : _90796) (h1 : term1851 _90796 s x' x) : term618 _90796 s x'.
Proof. exact (proj1 (@lem3505205 _90796 s x' x h1)). Qed.
Lemma lem3505299 {_90796 : Type'} (x' : _90796) (x : _90796) (h1 : x' = x) : x' = x.
Proof. exact (h1). Qed.
Lemma lem3505303 {_90796 : Type'} (s : _90796 -> Prop) (x' : _90796) (x : _90796) (h1 : term1851 _90796 s x' x) : term618 _90796 s x'.
Proof. exact (proj1 (@lem3505205 _90796 s x' x h1)). Qed.
Lemma lem3505349 {_90796 : Type'} (x : _90796) : (term1858 _90796 x) = (term1858 _90796 x).
Proof. exact (eq_refl (term1858 _90796 x)). Qed.
Lemma lem3505350 {_90796 : Type'} (x' : _90796) (x : _90796) (h1 : x' = x) : (term1859 _90796 x x') = (term1860 _90796 x).
Proof. exact (MK_COMB (@lem3505349 _90796 x) (@lem3505293 _90796 x' x h1)). Qed.
Lemma lem3505351 {_90796 : Type'} (x : _90796) : (term1860 _90796 x) = (term1861 _90796 x).
Proof. exact (eq_refl (term1860 _90796 x)). Qed.
Lemma lem3505352 {_90796 : Type'} (x : _90796) (x' : _90796) : (term1862 _90796 x x') = (term1862 _90796 x x').
Proof. exact (eq_refl (term1862 _90796 x x')). Qed.
Lemma lem3505353 {_90796 : Type'} (x' : _90796) (x : _90796) : ((term1859 _90796 x x') = (term1860 _90796 x)) = ((term1859 _90796 x x') = (term1861 _90796 x)).
Proof. exact (MK_COMB (@lem3505352 _90796 x x') (@lem3505351 _90796 x)). Qed.
Lemma lem3505354 {_90796 : Type'} (x' : _90796) (x : _90796) : (term1859 _90796 x x') = (term909 _90796 x' x).
Proof. exact (eq_refl (term1859 _90796 x x')). Qed.
Lemma lem3505355 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem3505356 {_90796 : Type'} (x' : _90796) (x : _90796) : (term1862 _90796 x x') = (term1863 _90796 x' x).
Proof. exact (MK_COMB (@lem3505355) (@lem3505354 _90796 x' x)). Qed.
Lemma lem3505357 {_90796 : Type'} (x : _90796) : (term1861 _90796 x) = (term1861 _90796 x).
Proof. exact (eq_refl (term1861 _90796 x)). Qed.
Lemma lem3505358 {_90796 : Type'} (x' : _90796) (x : _90796) : ((term1859 _90796 x x') = (term1861 _90796 x)) = ((term909 _90796 x' x) = (term1861 _90796 x)).
Proof. exact (MK_COMB (@lem3505356 _90796 x' x) (@lem3505357 _90796 x)). Qed.
Lemma lem3505359 {_90796 : Type'} (x' : _90796) (x : _90796) : ((term1859 _90796 x x') = (term1860 _90796 x)) = ((term909 _90796 x' x) = (term1861 _90796 x)).
Proof. exact (TRANS (@lem3505353 _90796 x' x) (@lem3505358 _90796 x' x)). Qed.
Lemma lem3505360 {_90796 : Type'} (x' : _90796) (x : _90796) (h1 : x' = x) : (term909 _90796 x' x) = (term1861 _90796 x).
Proof. exact (EQ_MP (@lem3505359 _90796 x' x) (@lem3505350 _90796 x' x h1)). Qed.
Lemma lem3505361 {_90796 : Type'} (s : _90796 -> Prop) (x' : _90796) (x : _90796) (h1 : term1853 _90796 s x' x) (h2 : x' = x) : term1861 _90796 x.
Proof. exact (EQ_MP (@lem3505360 _90796 x' x h2) (@lem3505291 _90796 s x' x h1)). Qed.
Lemma lem3505389 {_90796 : Type'} (s : _90796 -> Prop) (x : _90796) (h1 : s x) : s x.
Proof. exact (h1). Qed.
Lemma lem3505390 {_90796 : Type'} (s : _90796 -> Prop) : (term1653 _90796 s) = (term1653 _90796 s).
Proof. exact (eq_refl (term1653 _90796 s)). Qed.
Lemma lem3505391 {_90796 : Type'} (s : _90796 -> Prop) (x' : _90796) (x : _90796) (h1 : x' = x) : (term1654 _90796 s x') = (term1654 _90796 s x).
Proof. exact (MK_COMB (@lem3505390 _90796 s) (@lem3505299 _90796 x' x h1)). Qed.
Lemma lem3505392 {_90796 : Type'} (s : _90796 -> Prop) (x : _90796) : (term1654 _90796 s x) = (term618 _90796 s x).
Proof. exact (eq_refl (term1654 _90796 s x)). Qed.
Lemma lem3505393 {_90796 : Type'} (s : _90796 -> Prop) (x' : _90796) : (term1657 _90796 s x') = (term1657 _90796 s x').
Proof. exact (eq_refl (term1657 _90796 s x')). Qed.
Lemma lem3505394 {_90796 : Type'} (x' : _90796) (s : _90796 -> Prop) (x : _90796) : ((term1654 _90796 s x') = (term1654 _90796 s x)) = ((term1654 _90796 s x') = (term618 _90796 s x)).
Proof. exact (MK_COMB (@lem3505393 _90796 s x') (@lem3505392 _90796 s x)). Qed.
Lemma lem3505395 {_90796 : Type'} (s : _90796 -> Prop) (x' : _90796) : (term1654 _90796 s x') = (term618 _90796 s x').
Proof. exact (eq_refl (term1654 _90796 s x')). Qed.
Lemma lem3505396 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem3505397 {_90796 : Type'} (s : _90796 -> Prop) (x' : _90796) : (term1657 _90796 s x') = (term1658 _90796 s x').
Proof. exact (MK_COMB (@lem3505396) (@lem3505395 _90796 s x')). Qed.
Lemma lem3505398 {_90796 : Type'} (s : _90796 -> Prop) (x : _90796) : (term618 _90796 s x) = (term618 _90796 s x).
Proof. exact (eq_refl (term618 _90796 s x)). Qed.
Lemma lem3505399 {_90796 : Type'} (x' : _90796) (s : _90796 -> Prop) (x : _90796) : ((term1654 _90796 s x') = (term618 _90796 s x)) = ((term618 _90796 s x') = (term618 _90796 s x)).
Proof. exact (MK_COMB (@lem3505397 _90796 s x') (@lem3505398 _90796 s x)). Qed.
Lemma lem3505400 {_90796 : Type'} (x' : _90796) (s : _90796 -> Prop) (x : _90796) : ((term1654 _90796 s x') = (term1654 _90796 s x)) = ((term618 _90796 s x') = (term618 _90796 s x)).
Proof. exact (TRANS (@lem3505394 _90796 x' s x) (@lem3505399 _90796 x' s x)). Qed.
Lemma lem3505401 {_90796 : Type'} (s : _90796 -> Prop) (x' : _90796) (x : _90796) (h1 : x' = x) : (term618 _90796 s x') = (term618 _90796 s x).
Proof. exact (EQ_MP (@lem3505400 _90796 x' s x) (@lem3505391 _90796 s x' x h1)). Qed.
Lemma lem3505402 {_90796 : Type'} (s : _90796 -> Prop) (x' : _90796) (x : _90796) (h1 : term1851 _90796 s x' x) (h2 : x' = x) : term618 _90796 s x.
Proof. exact (EQ_MP (@lem3505401 _90796 s x' x h2) (@lem3505297 _90796 s x' x h1)). Qed.
Lemma lem3505418 {_90796 : Type'} (s : _90796 -> Prop) (x' : _90796) (x : _90796) (h1 : term1853 _90796 s x' x) : s x'.
Proof. exact (proj1 (@lem3505204 _90796 s x' x h1)). Qed.
Lemma lem3505419 {_90796 : Type'} (s : _90796 -> Prop) (x' : _90796) (x : _90796) (h1 : term1853 _90796 s x' x) : term1675 _90796 s x'.
Proof. exact (fun h0 : term618 _90796 s x' => @lem3505418 _90796 s x' x h1). Qed.
Lemma lem3505421 (p : Prop) : (term828 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem3505422 {_90796 : Type'} (s : _90796 -> Prop) (x' : _90796) : (term1675 _90796 s x') = (s x').
Proof. exact (@lem3505421 (s x')). Qed.
Lemma lem3505423 {_90796 : Type'} (s : _90796 -> Prop) (x' : _90796) (x : _90796) (h1 : term1853 _90796 s x' x) : s x'.
Proof. exact (EQ_MP (@lem3505422 _90796 s x') (@lem3505419 _90796 s x' x h1)). Qed.
Lemma lem3505426 (p : Prop) : (~ p) = (p -> False).
Proof. exact (EQ_MP (@lem21021 p) (@lem0)). Qed.
Lemma lem3505428 {_90796 : Type'} (s : _90796 -> Prop) (x' : _90796) : (term618 _90796 s x') = (term1864 _90796 s x').
Proof. exact (@lem3505426 (s x')). Qed.
Lemma lem3505431 {_90796 : Type'} (s : _90796 -> Prop) (x' : _90796) (h1 : term618 _90796 s x') : term1864 _90796 s x'.
Proof. exact (EQ_MP (@lem3505428 _90796 s x') (@lem3505285 _90796 s x' h1)). Qed.
Lemma lem3505434 {_90796 : Type'} (s : _90796 -> Prop) (x' : _90796) (x : _90796) (h1 : term618 _90796 s x') (h2 : term1853 _90796 s x' x) : False.
Proof. exact (@lem3505431 _90796 s x' h1 (@lem3505423 _90796 s x' x h2)). Qed.
Lemma lem3505435 {_90796 : Type'} (s : _90796 -> Prop) (x' : _90796) (x : _90796) (h1 : term618 _90796 s x') (h2 : term1853 _90796 s x' x) : term847.
Proof. exact (fun h0 : ~ False => @lem3505434 _90796 s x' x h1 h2). Qed.
Lemma lem3505437 (p : Prop) : (term828 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem3505438 : term847 = False.
Proof. exact (@lem3505437 False). Qed.
Lemma lem3505439 {_90796 : Type'} (s : _90796 -> Prop) (x' : _90796) (x : _90796) (h1 : term618 _90796 s x') (h2 : term1853 _90796 s x' x) : False.
Proof. exact (EQ_MP (@lem3505438) (@lem3505435 _90796 s x' x h1 h2)). Qed.
Lemma lem3505455 {_90796 : Type'} (x : _90796) : x = x.
Proof. exact (@lem21386 _90796 x). Qed.
Lemma lem3505456 {_90796 : Type'} (x : _90796) : x = x.
Proof. exact (@lem3505455 _90796 x). Qed.
Lemma lem3505457 {_90796 : Type'} (x : _90796) : term1865 _90796 x.
Proof. exact (fun h0 : term1861 _90796 x => @lem3505456 _90796 x). Qed.
Lemma lem3505459 (p : Prop) : (term828 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem3505460 {_90796 : Type'} (x : _90796) : (term1865 _90796 x) = (x = x).
Proof. exact (@lem3505459 (x = x)). Qed.
Lemma lem3505461 {_90796 : Type'} (x : _90796) : x = x.
Proof. exact (EQ_MP (@lem3505460 _90796 x) (@lem3505457 _90796 x)). Qed.
Lemma lem3505464 (p : Prop) : (~ p) = (p -> False).
Proof. exact (EQ_MP (@lem21021 p) (@lem0)). Qed.
Lemma lem3505466 {_90796 : Type'} (x : _90796) : (term1861 _90796 x) = (term1866 _90796 x).
Proof. exact (@lem3505464 (x = x)). Qed.
Lemma lem3505469 {_90796 : Type'} (s : _90796 -> Prop) (x' : _90796) (x : _90796) (h1 : term1853 _90796 s x' x) (h2 : x' = x) : term1866 _90796 x.
Proof. exact (EQ_MP (@lem3505466 _90796 x) (@lem3505361 _90796 s x' x h1 h2)). Qed.
Lemma lem3505472 {_90796 : Type'} (s : _90796 -> Prop) (x' : _90796) (x : _90796) (h1 : term1853 _90796 s x' x) (h2 : x' = x) : False.
Proof. exact (@lem3505469 _90796 s x' x h1 h2 (@lem3505461 _90796 x)). Qed.
Lemma lem3505473 {_90796 : Type'} (s : _90796 -> Prop) (x' : _90796) (x : _90796) (h1 : term1853 _90796 s x' x) (h2 : x' = x) : term847.
Proof. exact (fun h0 : ~ False => @lem3505472 _90796 s x' x h1 h2). Qed.
Lemma lem3505475 (p : Prop) : (term828 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem3505476 : term847 = False.
Proof. exact (@lem3505475 False). Qed.
Lemma lem3505479 {_90796 : Type'} (s : _90796 -> Prop) (x : _90796) (h1 : s x) : s x.
Proof. exact (h1). Qed.
Lemma lem3505480 {_90796 : Type'} (s : _90796 -> Prop) (x : _90796) (h1 : s x) : term1675 _90796 s x.
Proof. exact (fun h0 : term618 _90796 s x => @lem3505479 _90796 s x h1). Qed.
Lemma lem3505482 (p : Prop) : (term828 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem3505483 {_90796 : Type'} (s : _90796 -> Prop) (x : _90796) : (term1675 _90796 s x) = (s x).
Proof. exact (@lem3505482 (s x)). Qed.
Lemma lem3505484 {_90796 : Type'} (s : _90796 -> Prop) (x : _90796) (h1 : s x) : s x.
Proof. exact (EQ_MP (@lem3505483 _90796 s x) (@lem3505480 _90796 s x h1)). Qed.
Lemma lem3505487 (p : Prop) : (~ p) = (p -> False).
Proof. exact (EQ_MP (@lem21021 p) (@lem0)). Qed.
Lemma lem3505489 {_90796 : Type'} (s : _90796 -> Prop) (x : _90796) : (term618 _90796 s x) = (term1864 _90796 s x).
Proof. exact (@lem3505487 (s x)). Qed.
Lemma lem3505492 {_90796 : Type'} (s : _90796 -> Prop) (x' : _90796) (x : _90796) (h1 : term1851 _90796 s x' x) (h2 : x' = x) : term1864 _90796 s x.
Proof. exact (EQ_MP (@lem3505489 _90796 s x) (@lem3505402 _90796 s x' x h1 h2)). Qed.
Lemma lem3505495 {_90796 : Type'} (s : _90796 -> Prop) (x' : _90796) (x : _90796) (h1 : s x) (h2 : term1851 _90796 s x' x) (h3 : x' = x) : False.
Proof. exact (@lem3505492 _90796 s x' x h2 h3 (@lem3505484 _90796 s x h1)). Qed.
Lemma lem3505496 {_90796 : Type'} (s : _90796 -> Prop) (x' : _90796) (x : _90796) (h1 : s x) (h2 : term1851 _90796 s x' x) (h3 : x' = x) : term847.
Proof. exact (fun h0 : ~ False => @lem3505495 _90796 s x' x h1 h2 h3). Qed.
Lemma lem3505498 (p : Prop) : (term828 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem3505499 : term847 = False.
Proof. exact (@lem3505498 False). Qed.
Lemma lem3505500 {_90796 : Type'} (s : _90796 -> Prop) (x' : _90796) (x : _90796) (h1 : s x) (h2 : term1851 _90796 s x' x) (h3 : x' = x) : False.
Proof. exact (EQ_MP (@lem3505499) (@lem3505496 _90796 s x' x h1 h2 h3)). Qed.
Lemma lem3505516 {_90796 : Type'} (s : _90796 -> Prop) (x' : _90796) (x : _90796) (h1 : term1821 _90796 s x' x) : s x'.
Proof. exact (proj1 (@lem3505215 _90796 s x' x h1)). Qed.
Lemma lem3505517 {_90796 : Type'} (s : _90796 -> Prop) (x' : _90796) (x : _90796) (h1 : term1821 _90796 s x' x) : term1675 _90796 s x'.
Proof. exact (fun h0 : term618 _90796 s x' => @lem3505516 _90796 s x' x h1). Qed.
Lemma lem3505519 (p : Prop) : (term828 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem3505520 {_90796 : Type'} (s : _90796 -> Prop) (x' : _90796) : (term1675 _90796 s x') = (s x').
Proof. exact (@lem3505519 (s x')). Qed.
Lemma lem3505521 {_90796 : Type'} (s : _90796 -> Prop) (x' : _90796) (x : _90796) (h1 : term1821 _90796 s x' x) : s x'.
Proof. exact (EQ_MP (@lem3505520 _90796 s x') (@lem3505517 _90796 s x' x h1)). Qed.
Lemma lem3505524 (p : Prop) : (~ p) = (p -> False).
Proof. exact (EQ_MP (@lem21021 p) (@lem0)). Qed.
Lemma lem3505526 {_90796 : Type'} (s : _90796 -> Prop) (x' : _90796) : (term618 _90796 s x') = (term1864 _90796 s x').
Proof. exact (@lem3505524 (s x')). Qed.
Lemma lem3505529 {_90796 : Type'} (s : _90796 -> Prop) (x' : _90796) (x : _90796) (h1 : term1851 _90796 s x' x) : term1864 _90796 s x'.
Proof. exact (EQ_MP (@lem3505526 _90796 s x') (@lem3505303 _90796 s x' x h1)). Qed.
Lemma lem3505532 {_90796 : Type'} (s : _90796 -> Prop) (x' : _90796) (x : _90796) (h1 : term1851 _90796 s x' x) (h2 : term1821 _90796 s x' x) : False.
Proof. exact (@lem3505529 _90796 s x' x h1 (@lem3505521 _90796 s x' x h2)). Qed.
Lemma lem3505533 {_90796 : Type'} (s : _90796 -> Prop) (x' : _90796) (x : _90796) (h1 : term1851 _90796 s x' x) (h2 : term1821 _90796 s x' x) : term847.
Proof. exact (fun h0 : ~ False => @lem3505532 _90796 s x' x h1 h2). Qed.
Lemma lem3505535 (p : Prop) : (term828 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem3505536 : term847 = False.
Proof. exact (@lem3505535 False). Qed.
Lemma lem3505537 {_90796 : Type'} (s : _90796 -> Prop) (x' : _90796) (x : _90796) (h1 : term1851 _90796 s x' x) (h2 : term1821 _90796 s x' x) : False.
Proof. exact (EQ_MP (@lem3505536) (@lem3505533 _90796 s x' x h1 h2)). Qed.
Lemma lem3505538 {_90796 : Type'} (s : _90796 -> Prop) (x' : _90796) (x : _90796) (h1 : s x) (h2 : term1851 _90796 s x' x) (h3 : x' = x) : (s x) = False.
Proof. exact (prop_ext (fun h4 : s x => @lem3505500 _90796 s x' x h1 h2 h3) (fun h4 : False => @lem3505389 _90796 s x h1)). Qed.
Lemma lem3505540 {_90796 : Type'} (s : _90796 -> Prop) (x' : _90796) (x : _90796) (h1 : s x) (h2 : term1851 _90796 s x' x) (h3 : x' = x) : False.
Proof. exact (EQ_MP (@lem3505538 _90796 s x' x h1 h2 h3) (@lem3505389 _90796 s x h1)). Qed.
Lemma lem3505541 {_90796 : Type'} (s : _90796 -> Prop) (x' : _90796) (x : _90796) (h1 : term1853 _90796 s x' x) (h2 : x' = x) : False.
Proof. exact (EQ_MP (@lem3505476) (@lem3505473 _90796 s x' x h1 h2)). Qed.
Lemma lem3505542 {_90796 : Type'} (s : _90796 -> Prop) (x' : _90796) (x : _90796) (h1 : s x) (h2 : term1851 _90796 s x' x) (h3 : x' = x) : (x' = x) = False.
Proof. exact (prop_ext (fun h4 : x' = x => @lem3505540 _90796 s x' x h1 h2 h3) (fun h4 : False => @lem3505299 _90796 x' x h3)). Qed.
Lemma lem3505543 {_90796 : Type'} (s : _90796 -> Prop) (x' : _90796) (x : _90796) (h1 : s x) (h2 : term1851 _90796 s x' x) (h3 : x' = x) : False.
Proof. exact (EQ_MP (@lem3505542 _90796 s x' x h1 h2 h3) (@lem3505299 _90796 x' x h3)). Qed.
Lemma lem3505544 {_90796 : Type'} (s : _90796 -> Prop) (x' : _90796) (x : _90796) (h1 : s x) (h2 : term1851 _90796 s x' x) (h3 : x' = x) : (s x) = False.
Proof. exact (prop_ext (fun h4 : s x => @lem3505543 _90796 s x' x h1 h2 h3) (fun h4 : False => @lem3505295 _90796 s x h1)). Qed.
Lemma lem3505545 {_90796 : Type'} (s : _90796 -> Prop) (x' : _90796) (x : _90796) (h1 : s x) (h2 : term1851 _90796 s x' x) (h3 : x' = x) : False.
Proof. exact (EQ_MP (@lem3505544 _90796 s x' x h1 h2 h3) (@lem3505295 _90796 s x h1)). Qed.
Lemma lem3505546 {_90796 : Type'} (s : _90796 -> Prop) (x' : _90796) (x : _90796) (h1 : term1853 _90796 s x' x) (h2 : x' = x) : (x' = x) = False.
Proof. exact (prop_ext (fun h3 : x' = x => @lem3505541 _90796 s x' x h1 h2) (fun h3 : False => @lem3505293 _90796 x' x h2)). Qed.
Lemma lem3505547 {_90796 : Type'} (s : _90796 -> Prop) (x' : _90796) (x : _90796) (h1 : term1853 _90796 s x' x) (h2 : x' = x) : False.
Proof. exact (EQ_MP (@lem3505546 _90796 s x' x h1 h2) (@lem3505293 _90796 x' x h2)). Qed.
Lemma lem3505548 {_90796 : Type'} (s : _90796 -> Prop) (x' : _90796) (x : _90796) (h1 : term618 _90796 s x') (h2 : term1853 _90796 s x' x) : (term618 _90796 s x') = False.
Proof. exact (prop_ext (fun h3 : term618 _90796 s x' => @lem3505439 _90796 s x' x h1 h2) (fun h3 : False => @lem3505285 _90796 s x' h1)). Qed.
Lemma lem3505549 {_90796 : Type'} (s : _90796 -> Prop) (x' : _90796) (x : _90796) (h1 : term618 _90796 s x') (h2 : term1853 _90796 s x' x) : False.
Proof. exact (EQ_MP (@lem3505548 _90796 s x' x h1 h2) (@lem3505285 _90796 s x' h1)). Qed.
Lemma lem3505550 {_90796 : Type'} (s : _90796 -> Prop) (x' : _90796) (x : _90796) (h1 : s x) (h2 : term1851 _90796 s x' x) (h3 : x' = x) : (x' = x) = False.
Proof. exact (prop_ext (fun h4 : x' = x => @lem3505545 _90796 s x' x h1 h2 h3) (fun h4 : False => @lem3505261 _90796 x' x h3)). Qed.
Lemma lem3505551 {_90796 : Type'} (s : _90796 -> Prop) (x' : _90796) (x : _90796) (h1 : s x) (h2 : term1851 _90796 s x' x) (h3 : x' = x) : False.
Proof. exact (EQ_MP (@lem3505550 _90796 s x' x h1 h2 h3) (@lem3505261 _90796 x' x h3)). Qed.
Lemma lem3505552 {_90796 : Type'} (s : _90796 -> Prop) (x' : _90796) (x : _90796) (h1 : s x) (h2 : term1851 _90796 s x' x) (h3 : x' = x) : (s x) = False.
Proof. exact (prop_ext (fun h4 : s x => @lem3505551 _90796 s x' x h1 h2 h3) (fun h4 : False => @lem3505253 _90796 s x h1)). Qed.
Lemma lem3505553 {_90796 : Type'} (s : _90796 -> Prop) (x' : _90796) (x : _90796) (h1 : s x) (h2 : term1851 _90796 s x' x) (h3 : x' = x) : False.
Proof. exact (EQ_MP (@lem3505552 _90796 s x' x h1 h2 h3) (@lem3505253 _90796 s x h1)). Qed.
Lemma lem3505554 {_90796 : Type'} (s : _90796 -> Prop) (x' : _90796) (x : _90796) (h1 : term1853 _90796 s x' x) (h2 : x' = x) : (x' = x) = False.
Proof. exact (prop_ext (fun h3 : x' = x => @lem3505547 _90796 s x' x h1 h2) (fun h3 : False => @lem3505249 _90796 x' x h2)). Qed.
Lemma lem3505555 {_90796 : Type'} (s : _90796 -> Prop) (x' : _90796) (x : _90796) (h1 : term1853 _90796 s x' x) (h2 : x' = x) : False.
Proof. exact (EQ_MP (@lem3505554 _90796 s x' x h1 h2) (@lem3505249 _90796 x' x h2)). Qed.
Lemma lem3505556 {_90796 : Type'} (s : _90796 -> Prop) (x' : _90796) (x : _90796) (h1 : term618 _90796 s x') (h2 : term1853 _90796 s x' x) : (term618 _90796 s x') = False.
Proof. exact (prop_ext (fun h3 : term618 _90796 s x' => @lem3505549 _90796 s x' x h1 h2) (fun h3 : False => @lem3505233 _90796 s x' h1)). Qed.
Lemma lem3505557 {_90796 : Type'} (s : _90796 -> Prop) (x' : _90796) (x : _90796) (h1 : term618 _90796 s x') (h2 : term1853 _90796 s x' x) : False.
Proof. exact (EQ_MP (@lem3505556 _90796 s x' x h1 h2) (@lem3505233 _90796 s x' h1)). Qed.
Lemma lem3505558 {_90796 : Type'} (s : _90796 -> Prop) (x' : _90796) (x : _90796) (h1 : s x) (h2 : term1851 _90796 s x' x) (h3 : x' = x) : (x' = x) = False.
Proof. exact (prop_ext (fun h4 : x' = x => @lem3505553 _90796 s x' x h1 h2 h3) (fun h4 : False => @lem3505261 _90796 x' x h3)). Qed.
Lemma lem3505559 {_90796 : Type'} (s : _90796 -> Prop) (x' : _90796) (x : _90796) (h1 : s x) (h2 : term1851 _90796 s x' x) (h3 : x' = x) : False.
Proof. exact (EQ_MP (@lem3505558 _90796 s x' x h1 h2 h3) (@lem3505261 _90796 x' x h3)). Qed.
Lemma lem3505560 {_90796 : Type'} (s : _90796 -> Prop) (x' : _90796) (x : _90796) (h1 : s x) (h2 : term1851 _90796 s x' x) (h3 : x' = x) : (s x) = False.
Proof. exact (prop_ext (fun h4 : s x => @lem3505559 _90796 s x' x h1 h2 h3) (fun h4 : False => @lem3505253 _90796 s x h1)). Qed.
Lemma lem3505561 {_90796 : Type'} (s : _90796 -> Prop) (x' : _90796) (x : _90796) (h1 : s x) (h2 : term1851 _90796 s x' x) (h3 : x' = x) : False.
Proof. exact (EQ_MP (@lem3505560 _90796 s x' x h1 h2 h3) (@lem3505253 _90796 s x h1)). Qed.
Lemma lem3505562 {_90796 : Type'} (s : _90796 -> Prop) (x' : _90796) (x : _90796) (h1 : term1853 _90796 s x' x) (h2 : x' = x) : (x' = x) = False.
Proof. exact (prop_ext (fun h3 : x' = x => @lem3505555 _90796 s x' x h1 h2) (fun h3 : False => @lem3505249 _90796 x' x h2)). Qed.
Lemma lem3505563 {_90796 : Type'} (s : _90796 -> Prop) (x' : _90796) (x : _90796) (h1 : term1853 _90796 s x' x) (h2 : x' = x) : False.
Proof. exact (EQ_MP (@lem3505562 _90796 s x' x h1 h2) (@lem3505249 _90796 x' x h2)). Qed.
Lemma lem3505564 {_90796 : Type'} (s : _90796 -> Prop) (x' : _90796) (x : _90796) (h1 : term618 _90796 s x') (h2 : term1853 _90796 s x' x) : (term618 _90796 s x') = False.
Proof. exact (prop_ext (fun h3 : term618 _90796 s x' => @lem3505557 _90796 s x' x h1 h2) (fun h3 : False => @lem3505233 _90796 s x' h1)). Qed.
Lemma lem3505565 {_90796 : Type'} (s : _90796 -> Prop) (x' : _90796) (x : _90796) (h1 : term618 _90796 s x') (h2 : term1853 _90796 s x' x) : False.
Proof. exact (EQ_MP (@lem3505564 _90796 s x' x h1 h2) (@lem3505233 _90796 s x' h1)). Qed.
Lemma lem3505566 {_90796 : Type'} (s : _90796 -> Prop) (x' : _90796) (x : _90796) (h1 : s x) (h2 : term1851 _90796 s x' x) : False.
Proof. exact (or_elim (@lem3505212 _90796 s x' x h2) (fun h0 : x' = x => @lem3505561 _90796 s x' x h1 h2 h0) (fun h0 : term1821 _90796 s x' x => @lem3505537 _90796 s x' x h2 h0)). Qed.
Lemma lem3505567 {_90796 : Type'} (s : _90796 -> Prop) (x' : _90796) (x : _90796) (h1 : term1853 _90796 s x' x) : False.
Proof. exact (or_elim (@lem3505208 _90796 s x' x h1) (fun h0 : term618 _90796 s x' => @lem3505565 _90796 s x' x h0 h1) (fun h0 : x' = x => @lem3505563 _90796 s x' x h1 h0)). Qed.
Lemma lem3505568 {_90796 : Type'} (x' : _90796) (s : _90796 -> Prop) (x : _90796) (h1 : term1843 _90796 s x' x) (h2 : s x) : False.
Proof. exact (or_elim (@lem3505203 _90796 s x' x h1) (fun h0 : term1853 _90796 s x' x => @lem3505567 _90796 s x' x h0) (fun h0 : term1851 _90796 s x' x => @lem3505566 _90796 s x' x h2 h0)). Qed.
Lemma lem3505569 {_90796 : Type'} (x' : _90796) (s : _90796 -> Prop) (x : _90796) (h1 : term1843 _90796 s x' x) (h2 : s x) : (s x) = False.
Proof. exact (prop_ext (fun h3 : s x => @lem3505568 _90796 x' s x h1 h2) (fun h3 : False => @lem3505141 _90796 s x h2)). Qed.
Lemma lem3505570 {_90796 : Type'} (x' : _90796) (s : _90796 -> Prop) (x : _90796) (h1 : term1843 _90796 s x' x) (h2 : s x) : False.
Proof. exact (EQ_MP (@lem3505569 _90796 x' s x h1 h2) (@lem3505141 _90796 s x h2)). Qed.
Lemma lem3505571 {_90796 : Type'} (x' : _90796) (s : _90796 -> Prop) (x : _90796) (h1 : term1843 _90796 s x' x) (h2 : s x) : (s x) = False.
Proof. exact (prop_ext (fun h3 : s x => @lem3505570 _90796 x' s x h1 h2) (fun h3 : False => @lem3505095 _90796 s x h2)). Qed.
Lemma lem3505572 {_90796 : Type'} (x' : _90796) (s : _90796 -> Prop) (x : _90796) (h1 : term1843 _90796 s x' x) (h2 : s x) : False.
Proof. exact (EQ_MP (@lem3505571 _90796 x' s x h1 h2) (@lem3505095 _90796 s x h2)). Qed.
Lemma lem3505573 {_90796 : Type'} (x' : _90796) (s : _90796 -> Prop) (x : _90796) (h1 : term1843 _90796 s x' x) (h2 : s x) : (term1843 _90796 s x' x) = False.
Proof. exact (prop_ext (fun h3 : term1843 _90796 s x' x => @lem3505572 _90796 x' s x h1 h2) (fun h3 : False => @lem3505089 _90796 s x' x h1)). Qed.
Lemma lem3505574 {_90796 : Type'} (x' : _90796) (s : _90796 -> Prop) (x : _90796) (h1 : term1843 _90796 s x' x) (h2 : s x) : False.
Proof. exact (EQ_MP (@lem3505573 _90796 x' s x h1 h2) (@lem3505089 _90796 s x' x h1)). Qed.
Lemma lem3505575 {_90796 : Type'} (x' : _90796) (s : _90796 -> Prop) (x : _90796) (h1 : s x) : term1842 _90796 s x' x.
Proof. exact (fun h0 : term1843 _90796 s x' x => @lem3505574 _90796 x' s x h0 h1). Qed.
Lemma lem3505576 {_90796 : Type'} (x' : _90796) (s : _90796 -> Prop) (x : _90796) (h1 : s x) : (s x') = (term1823 _90796 s x' x).
Proof. exact (EQ_MP (@lem3505088 _90796 s x' x) (@lem3505575 _90796 x' s x h1)). Qed.
Lemma lem3505581 {_90796 : Type'} (s : _90796 -> Prop) (x : _90796) (h1 : s x) : term1826 _90796 s x.
Proof. exact (fun x' : _90796 => @lem3505576 _90796 x' s x h1). Qed.
Lemma lem3505582 {_90796 : Type'} (s : _90796 -> Prop) (x : _90796) : term1827 _90796 s x.
Proof. exact (fun h0 : s x => @lem3505581 _90796 s x h0). Qed.
Lemma lem3505587 {_90796 : Type'} (x : _90796) : term1837 _90796 x.
Proof. exact (fun s : _90796 -> Prop => @lem3505582 _90796 s x). Qed.
Lemma lem3505592 {_90796 : Type'} : term1841 _90796.
Proof. exact (fun x : _90796 => @lem3505587 _90796 x). Qed.
Lemma lem3505593 {_90796 : Type'} : term1840 _90796.
Proof. exact (EQ_MP (@lem3505083 _90796) (@lem3505592 _90796)). Qed.
Lemma lem3505594 {_90796 : Type'} (x : _90796) : term1867 _90796 x.
Proof. exact (@lem3505593 _90796 x). Qed.
Lemma lem3505595 {_90796 : Type'} (x : _90796) : (term1867 _90796 x) = (term1836 _90796 x).
Proof. exact (eq_refl (term1867 _90796 x)). Qed.
Lemma lem3505596 {_90796 : Type'} (x : _90796) : term1836 _90796 x.
Proof. exact (EQ_MP (@lem3505595 _90796 x) (@lem3505594 _90796 x)). Qed.
Lemma lem3505597 {_90796 : Type'} (x : _90796) (s : _90796 -> Prop) : term1868 _90796 x s.
Proof. exact (@lem3505596 _90796 x s). Qed.
Lemma lem3505598 {_90796 : Type'} (s : _90796 -> Prop) (x : _90796) : (term1868 _90796 x s) = (term1828 _90796 s x).
Proof. exact (eq_refl (term1868 _90796 x s)). Qed.
Lemma lem3505599 {_90796 : Type'} (s : _90796 -> Prop) (x : _90796) : term1828 _90796 s x.
Proof. exact (EQ_MP (@lem3505598 _90796 s x) (@lem3505597 _90796 x s)). Qed.
Lemma lem3505601 {_90796 : Type'} (s : _90796 -> Prop) (x : _90796) : term1828 _90796 s x.
Proof. exact (@lem3504984 _90796 s x (@lem3505599 _90796 s x)). Qed.
Lemma lem3505602 {_90796 : Type'} (s : _90796 -> Prop) (x : _90796) (h1 : term1829 _90796 s x) : False.
Proof. exact (@lem3505601 _90796 s x (@lem3504968 _90796 s x h1)). Qed.
Lemma lem3505603 {_90796 : Type'} (s : _90796 -> Prop) (x : _90796) (h1 : term1829 _90796 s x) : (term1829 _90796 s x) = False.
Proof. exact (prop_ext (fun h2 : term1829 _90796 s x => @lem3505602 _90796 s x h1) (fun h2 : False => @lem3504968 _90796 s x h1)). Qed.
Lemma lem3505604 {_90796 : Type'} (s : _90796 -> Prop) (x : _90796) (h1 : term1829 _90796 s x) : False.
Proof. exact (EQ_MP (@lem3505603 _90796 s x h1) (@lem3504968 _90796 s x h1)). Qed.
Lemma lem3505605 {_90796 : Type'} (s : _90796 -> Prop) (x : _90796) : term1828 _90796 s x.
Proof. exact (fun h0 : term1829 _90796 s x => @lem3505604 _90796 s x h0). Qed.
Lemma lem3505606 {_90796 : Type'} (s : _90796 -> Prop) (x : _90796) : term1827 _90796 s x.
Proof. exact (EQ_MP (@lem3504967 _90796 s x) (@lem3505605 _90796 s x)). Qed.
Lemma lem3505607 {_90796 : Type'} (s : _90796 -> Prop) (x : _90796) : term1813 _90796 s x.
Proof. exact (EQ_MP (@lem3504963 _90796 s x) (@lem3505606 _90796 s x)). Qed.
Lemma lem3505609 (t1 : Prop) : term1869 t1.
Proof. exact (@lem512 t1). Qed.
Lemma lem3505610 (t1 : Prop) : (term1869 t1) = (term1870 t1).
Proof. exact (eq_refl (term1869 t1)). Qed.
Lemma lem3505611 (t1 : Prop) : term1870 t1.
Proof. exact (EQ_MP (@lem3505610 t1) (@lem3505609 t1)). Qed.
Lemma lem3505612 (t1 : Prop) (t2 : Prop) : term1871 t1 t2.
Proof. exact (@lem3505611 t1 t2). Qed.
Lemma lem3505613 (t1 : Prop) (t2 : Prop) : (term1871 t1 t2) = (term1872 t1 t2).
Proof. exact (eq_refl (term1871 t1 t2)). Qed.
Lemma lem3505614 (t1 : Prop) (t2 : Prop) : term1872 t1 t2.
Proof. exact (EQ_MP (@lem3505613 t1 t2) (@lem3505612 t1 t2)). Qed.
Lemma lem3505615 (t1 : Prop) (t2 : Prop) (t3 : Prop) : term1873 t1 t2 t3.
Proof. exact (@lem3505614 t1 t2 t3). Qed.
Lemma lem3505616 (t1 : Prop) (t2 : Prop) (t3 : Prop) : (term1873 t1 t2 t3) = ((term1874 t1 t2 t3) = (term1875 t1 t2 t3)).
Proof. exact (eq_refl (term1873 t1 t2 t3)). Qed.
Lemma lem3505618 (t1 : Prop) : term0 t1.
Proof. exact (@lem693 t1). Qed.
Lemma lem3505619 (t1 : Prop) : (term0 t1) = (term1 t1).
Proof. exact (eq_refl (term0 t1)). Qed.
Lemma lem3505620 (t1 : Prop) : term1 t1.
Proof. exact (EQ_MP (@lem3505619 t1) (@lem3505618 t1)). Qed.
Lemma lem3505621 (t1 : Prop) (t2 : Prop) : term2 t1 t2.
Proof. exact (@lem3505620 t1 t2). Qed.
Lemma lem3505622 (t1 : Prop) (t2 : Prop) : (term2 t1 t2) = (term3 t1 t2).
Proof. exact (eq_refl (term2 t1 t2)). Qed.
Lemma lem3505623 (t1 : Prop) (t2 : Prop) : term3 t1 t2.
Proof. exact (EQ_MP (@lem3505622 t1 t2) (@lem3505621 t1 t2)). Qed.
Lemma lem3505624 (t1 : Prop) (t2 : Prop) (t3 : Prop) : term4 t1 t2 t3.
Proof. exact (@lem3505623 t1 t2 t3). Qed.
Lemma lem3505625 (t1 : Prop) (t2 : Prop) (t3 : Prop) : (term4 t1 t2 t3) = ((term5 t1 t2 t3) = (term6 t1 t2 t3)).
Proof. exact (eq_refl (term4 t1 t2 t3)). Qed.
Lemma lem3505626 (t1 : Prop) (t2 : Prop) (t3 : Prop) : (term5 t1 t2 t3) = (term6 t1 t2 t3).
Proof. exact (EQ_MP (@lem3505625 t1 t2 t3) (@lem3505624 t1 t2 t3)). Qed.
Lemma lem3505627 (t1 : Prop) (t2 : Prop) (t3 : Prop) : (term6 t1 t2 t3) = (term5 t1 t2 t3).
Proof. exact (SYM (@lem3505626 t1 t2 t3)). Qed.
Lemma lem3505628 {_90715 _90724 : Type'} (u : _90715 -> Prop) (f : _90715 -> _90724) : term1876 _90715 _90724 u f.
Proof. exact (fun g : type686 _90715 => @lem3498481 _90715 _90724 u f g). Qed.
Lemma lem3505629 {_90715 _90724 : Type'} (u : _90715 -> Prop) : term1877 _90715 _90724 u.
Proof. exact (fun f : _90715 -> _90724 => @lem3505628 _90715 _90724 u f). Qed.
Lemma lem3505630 {_90715 _90724 : Type'} : term1878 _90715 _90724.
Proof. exact (fun u : _90715 -> Prop => @lem3505629 _90715 _90724 u). Qed.
Lemma lem3505646 {A : Type'} (s : A -> Prop) (t : A -> Prop) : (s = t) = (term37 A s t).
Proof. exact (EQ_MP (@lem3211757 A s t) (@lem3211756 A s t)). Qed.
Lemma lem3505647 {_90804 : Type'} (s : _90804 -> Prop) (t : _90804 -> Prop) : (s = t) = (term37 _90804 s t).
Proof. exact (@lem3505646 _90804 s t). Qed.
Lemma lem3505648 {_90804 : Type'} (s : _90804) (g : _90804 -> Prop) : ((@DELETE _90804 g s) = g) = (term1879 _90804 s g).
Proof. exact (@lem3505647 _90804 (@DELETE _90804 g s) g). Qed.
Lemma lem3505657 {_90804 : Type'} (s : _90804) (g : _90804 -> Prop) : (term1880 _90804 s g) = (term1880 _90804 s g).
Proof. exact (eq_refl (term1880 _90804 s g)). Qed.
Lemma lem3505658 {_90804 : Type'} (s : _90804) (g : _90804 -> Prop) : (term1881 _90804 s g) = (term1882 _90804 s g).
Proof. exact (MK_COMB (@lem3505657 _90804 s g) (@lem3505648 _90804 s g)). Qed.
Lemma lem3505661 {_90804 : Type'} (s : _90804) (g : _90804 -> Prop) : (term1882 _90804 s g) = (term1881 _90804 s g).
Proof. exact (SYM (@lem3505658 _90804 s g)). Qed.
Lemma lem3505665 {A : Type'} (P : A -> Prop) (x : A) : (@IN A x P) = (P x).
Proof. exact (EQ_MP (@lem3211610 A P x) (@lem3211609 A P x)). Qed.
Lemma lem3505666 {_90804 : Type'} (P : _90804 -> Prop) (x : _90804) : (@IN _90804 x P) = (P x).
Proof. exact (@lem3505665 _90804 P x). Qed.
Lemma lem3505667 {_90804 : Type'} (g : _90804 -> Prop) (s : _90804) : (@IN _90804 s g) = (g s).
Proof. exact (@lem3505666 _90804 g s). Qed.
Lemma lem3505668 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem3505669 {_90804 : Type'} (g : _90804 -> Prop) (s : _90804) : (term1883 _90804 s g) = (term618 _90804 g s).
Proof. exact (MK_COMB (@lem3505668) (@lem3505667 _90804 g s)). Qed.
Lemma lem3505670 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem3505671 {_90804 : Type'} (g : _90804 -> Prop) (s : _90804) : (term1880 _90804 s g) = (term1884 _90804 g s).
Proof. exact (MK_COMB (@lem3505670) (@lem3505669 _90804 g s)). Qed.
Lemma lem3505679 {A : Type'} (s : A -> Prop) (x : A) (y : A) : (term1819 A x s y) = (term1820 A s x y).
Proof. exact (EQ_MP (@lem3211684 A s x y) (@lem3211683 A s x y)). Qed.
Lemma lem3505680 {_90804 : Type'} (s : _90804 -> Prop) (x : _90804) (y : _90804) : (term1819 _90804 x s y) = (term1820 _90804 s x y).
Proof. exact (@lem3505679 _90804 s x y). Qed.
Lemma lem3505681 {_90804 : Type'} (g : _90804 -> Prop) (x : _90804) (s : _90804) : (term1819 _90804 x g s) = (term1820 _90804 g x s).
Proof. exact (@lem3505680 _90804 g x s). Qed.
Lemma lem3505685 {A : Type'} (P : A -> Prop) (x : A) : (@IN A x P) = (P x).
Proof. exact (EQ_MP (@lem3211610 A P x) (@lem3211609 A P x)). Qed.
Lemma lem3505686 {_90804 : Type'} (P : _90804 -> Prop) (x : _90804) : (@IN _90804 x P) = (P x).
Proof. exact (@lem3505685 _90804 P x). Qed.
Lemma lem3505687 {_90804 : Type'} (g : _90804 -> Prop) (x : _90804) : (@IN _90804 x g) = (g x).
Proof. exact (@lem3505686 _90804 g x). Qed.
Lemma lem3505688 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem3505689 {_90804 : Type'} (g : _90804 -> Prop) (x : _90804) : (term56 _90804 x g) = (term234 _90804 g x).
Proof. exact (MK_COMB (@lem3505688) (@lem3505687 _90804 g x)). Qed.
Lemma lem3505692 {_90804 : Type'} (x : _90804) (s : _90804) : (term909 _90804 x s) = (term909 _90804 x s).
Proof. exact (eq_refl (term909 _90804 x s)). Qed.
Lemma lem3505693 {_90804 : Type'} (g : _90804 -> Prop) (x : _90804) (s : _90804) : (term1820 _90804 g x s) = (term1821 _90804 g x s).
Proof. exact (MK_COMB (@lem3505689 _90804 g x) (@lem3505692 _90804 x s)). Qed.
Lemma lem3505696 {_90804 : Type'} (g : _90804 -> Prop) (x : _90804) (s : _90804) : (term1819 _90804 x g s) = (term1821 _90804 g x s).
Proof. exact (TRANS (@lem3505681 _90804 g x s) (@lem3505693 _90804 g x s)). Qed.
Lemma lem3505697 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem3505698 {_90804 : Type'} (g : _90804 -> Prop) (x : _90804) (s : _90804) : (term1885 _90804 x g s) = (term1886 _90804 g x s).
Proof. exact (MK_COMB (@lem3505697) (@lem3505696 _90804 g x s)). Qed.
Lemma lem3505700 {A : Type'} (P : A -> Prop) (x : A) : (@IN A x P) = (P x).
Proof. exact (EQ_MP (@lem3211610 A P x) (@lem3211609 A P x)). Qed.
Lemma lem3505701 {_90804 : Type'} (P : _90804 -> Prop) (x : _90804) : (@IN _90804 x P) = (P x).
Proof. exact (@lem3505700 _90804 P x). Qed.
Lemma lem3505702 {_90804 : Type'} (g : _90804 -> Prop) (x : _90804) : (@IN _90804 x g) = (g x).
Proof. exact (@lem3505701 _90804 g x). Qed.
Lemma lem3505703 {_90804 : Type'} (s : _90804) (g : _90804 -> Prop) (x : _90804) : ((term1819 _90804 x g s) = (@IN _90804 x g)) = ((term1821 _90804 g x s) = (g x)).
Proof. exact (MK_COMB (@lem3505698 _90804 g x s) (@lem3505702 _90804 g x)). Qed.
Lemma lem3505706 {_90804 : Type'} (s : _90804) (g : _90804 -> Prop) : (term1887 _90804 s g) = (term1888 _90804 s g).
Proof. exact (fun_ext (fun x : _90804 => @lem3505703 _90804 s g x)). Qed.
Lemma lem3505707 {_90804 : Type'} : (@all _90804) = (@all _90804).
Proof. exact (eq_refl (@all _90804)). Qed.
Lemma lem3505708 {_90804 : Type'} (s : _90804) (g : _90804 -> Prop) : (term1879 _90804 s g) = (term1889 _90804 s g).
Proof. exact (MK_COMB (@lem3505707 _90804) (@lem3505706 _90804 s g)). Qed.
Lemma lem3505713 {_90804 : Type'} (s : _90804) (g : _90804 -> Prop) : (term1882 _90804 s g) = (term1890 _90804 s g).
Proof. exact (MK_COMB (@lem3505671 _90804 g s) (@lem3505708 _90804 s g)). Qed.
Lemma lem3505716 {_90804 : Type'} (s : _90804) (g : _90804 -> Prop) : (term1890 _90804 s g) = (term1882 _90804 s g).
Proof. exact (SYM (@lem3505713 _90804 s g)). Qed.
Lemma lem3505718 (p : Prop) : p = (term275 p).
Proof. exact (EQ_MP (@lem10578 p) (@lem10597 p)). Qed.
Lemma lem3505719 {_90804 : Type'} (s : _90804) (g : _90804 -> Prop) : (term1890 _90804 s g) = (term1891 _90804 s g).
Proof. exact (@lem3505718 (term1890 _90804 s g)). Qed.
Lemma lem3505720 {_90804 : Type'} (s : _90804) (g : _90804 -> Prop) : (term1891 _90804 s g) = (term1890 _90804 s g).
Proof. exact (SYM (@lem3505719 _90804 s g)). Qed.
Lemma lem3505721 {_90804 : Type'} (s : _90804) (g : _90804 -> Prop) (h1 : term1892 _90804 s g) : term1892 _90804 s g.
Proof. exact (h1). Qed.
Lemma lem3505724 {_90804 : Type'} (s : _90804) (g : _90804 -> Prop) (h1 : term1891 _90804 s g) : term1891 _90804 s g.
Proof. exact (h1). Qed.
Lemma lem3505725 {_90804 : Type'} (s : _90804) (g : _90804 -> Prop) : term1893 _90804 s g.
Proof. exact (fun h0 : term1891 _90804 s g => @lem3505724 _90804 s g h0). Qed.
Lemma lem3505726 {_90804 : Type'} (s : _90804) (g : _90804 -> Prop) (h1 : term1893 _90804 s g) : term1893 _90804 s g.
Proof. exact (h1). Qed.
Lemma lem3505727 {_90804 : Type'} (s : _90804) (g : _90804 -> Prop) (h1 : term1891 _90804 s g) : term1891 _90804 s g.
Proof. exact (h1). Qed.
Lemma lem3505728 {_90804 : Type'} (s : _90804) (g : _90804 -> Prop) (h1 : term1891 _90804 s g) (h2 : term1893 _90804 s g) : term1891 _90804 s g.
Proof. exact (@lem3505726 _90804 s g h2 (@lem3505727 _90804 s g h1)). Qed.
Lemma lem3505729 {_90804 : Type'} (s : _90804) (g : _90804 -> Prop) (h1 : term1891 _90804 s g) : term1894 _90804 s g.
Proof. exact (fun h0 : term1893 _90804 s g => @lem3505728 _90804 s g h1 h0). Qed.
Lemma lem3505730 {_90804 : Type'} (s : _90804) (g : _90804 -> Prop) (h1 : term1893 _90804 s g) : term1893 _90804 s g.
Proof. exact (h1). Qed.
Lemma lem3505731 {_90804 : Type'} (s : _90804) (g : _90804 -> Prop) (h1 : term1891 _90804 s g) (h2 : term1893 _90804 s g) : term1891 _90804 s g.
Proof. exact (@lem3505729 _90804 s g h1 (@lem3505730 _90804 s g h2)). Qed.
Lemma lem3505732 {_90804 : Type'} (s : _90804) (g : _90804 -> Prop) (h1 : term1893 _90804 s g) : term1893 _90804 s g.
Proof. exact (fun h0 : term1891 _90804 s g => @lem3505731 _90804 s g h0 h1). Qed.
Lemma lem3505733 {_90804 : Type'} (s : _90804) (g : _90804 -> Prop) : term1895 _90804 s g.
Proof. exact (fun h0 : term1893 _90804 s g => @lem3505732 _90804 s g h0). Qed.
Lemma lem3505736 {_90804 : Type'} (s : _90804) (g : _90804 -> Prop) : term1893 _90804 s g.
Proof. exact (@lem3505733 _90804 s g (@lem3505725 _90804 s g)). Qed.
Lemma lem3505737 {_90804 : Type'} (s : _90804) (g : _90804 -> Prop) : term1893 _90804 s g.
Proof. exact (@lem3505736 _90804 s g). Qed.
Lemma lem3505747 (t : Prop) : (t -> False) = (~ t).
Proof. exact (proj2 (@lem16474 t)). Qed.
Lemma lem3505748 {_90804 : Type'} (s : _90804) (g : _90804 -> Prop) : (term1891 _90804 s g) = (term1896 _90804 s g).
Proof. exact (@lem3505747 (term1892 _90804 s g)). Qed.
Lemma lem3505750 (t : Prop) : (term282 t) = t.
Proof. exact (EQ_MP (@lem16507 t) (@lem16506 t)). Qed.
Lemma lem3505751 {_90804 : Type'} (s : _90804) (g : _90804 -> Prop) : (term1896 _90804 s g) = (term1890 _90804 s g).
Proof. exact (@lem3505750 (term1890 _90804 s g)). Qed.
Lemma lem3505754 {_90804 : Type'} (s : _90804) (g : _90804 -> Prop) : (term1891 _90804 s g) = (term1890 _90804 s g).
Proof. exact (TRANS (@lem3505748 _90804 s g) (@lem3505751 _90804 s g)). Qed.
Lemma lem3505761 {_90804 : Type'} (g : _90804 -> Prop) : (term1897 _90804 g) = (term1898 _90804 g).
Proof. exact (fun_ext (fun s : _90804 => @lem3505754 _90804 s g)). Qed.
Lemma lem3505762 {_90804 : Type'} : (@all _90804) = (@all _90804).
Proof. exact (eq_refl (@all _90804)). Qed.
Lemma lem3505763 {_90804 : Type'} (g : _90804 -> Prop) : (term1899 _90804 g) = (term1900 _90804 g).
Proof. exact (MK_COMB (@lem3505762 _90804) (@lem3505761 _90804 g)). Qed.
Lemma lem3505768 {_90804 : Type'} : (term1901 _90804) = (term1902 _90804).
Proof. exact (fun_ext (fun g : _90804 -> Prop => @lem3505763 _90804 g)). Qed.
Lemma lem3505769 {_90804 : Type'} : (@all (_90804 -> Prop)) = (@all (_90804 -> Prop)).
Proof. exact (eq_refl (@all (_90804 -> Prop))). Qed.
Lemma lem3505778 {_90804 : Type'} : (term1903 _90804) = (term1904 _90804).
Proof. exact (MK_COMB (@lem3505769 _90804) (@lem3505768 _90804)). Qed.
Lemma lem3505789 {_90804 : Type'} (s : _90804) (g : _90804 -> Prop) (x : _90804) : ((term1821 _90804 g x s) = (g x)) = ((term1821 _90804 g x s) = (g x)).
Proof. exact (eq_refl ((term1821 _90804 g x s) = (g x))). Qed.
Lemma lem3505790 {_90804 : Type'} (s : _90804) (g : _90804 -> Prop) : (term1888 _90804 s g) = (term1888 _90804 s g).
Proof. exact (fun_ext (fun x : _90804 => @lem3505789 _90804 s g x)). Qed.
Lemma lem3505791 {_90804 : Type'} : (@all _90804) = (@all _90804).
Proof. exact (eq_refl (@all _90804)). Qed.
Lemma lem3505792 {_90804 : Type'} (s : _90804) (g : _90804 -> Prop) : (term1889 _90804 s g) = (term1889 _90804 s g).
Proof. exact (MK_COMB (@lem3505791 _90804) (@lem3505790 _90804 s g)). Qed.
Lemma lem3505797 {_90804 : Type'} (g : _90804 -> Prop) (s : _90804) : (term1884 _90804 g s) = (term1884 _90804 g s).
Proof. exact (eq_refl (term1884 _90804 g s)). Qed.
Lemma lem3505798 {_90804 : Type'} (s : _90804) (g : _90804 -> Prop) : (term1890 _90804 s g) = (term1890 _90804 s g).
Proof. exact (MK_COMB (@lem3505797 _90804 g s) (@lem3505792 _90804 s g)). Qed.
Lemma lem3505799 {_90804 : Type'} (g : _90804 -> Prop) : (term1898 _90804 g) = (term1898 _90804 g).
Proof. exact (fun_ext (fun s : _90804 => @lem3505798 _90804 s g)). Qed.
Lemma lem3505800 {_90804 : Type'} : (@all _90804) = (@all _90804).
Proof. exact (eq_refl (@all _90804)). Qed.
Lemma lem3505801 {_90804 : Type'} (g : _90804 -> Prop) : (term1900 _90804 g) = (term1900 _90804 g).
Proof. exact (MK_COMB (@lem3505800 _90804) (@lem3505799 _90804 g)). Qed.
Lemma lem3505802 {_90804 : Type'} : (term1902 _90804) = (term1902 _90804).
Proof. exact (fun_ext (fun g : _90804 -> Prop => @lem3505801 _90804 g)). Qed.
Lemma lem3505803 {_90804 : Type'} : (@all (_90804 -> Prop)) = (@all (_90804 -> Prop)).
Proof. exact (eq_refl (@all (_90804 -> Prop))). Qed.
Lemma lem3505804 {_90804 : Type'} : (term1904 _90804) = (term1904 _90804).
Proof. exact (MK_COMB (@lem3505803 _90804) (@lem3505802 _90804)). Qed.
Lemma lem3505829 {_90804 : Type'} : (term1903 _90804) = (term1904 _90804).
Proof. exact (TRANS (@lem3505778 _90804) (@lem3505804 _90804)). Qed.
Lemma lem3505830 {_90804 : Type'} : (term1904 _90804) = (term1903 _90804).
Proof. exact (SYM (@lem3505829 _90804)). Qed.
Lemma lem3505833 (p : Prop) : p = (term275 p).
Proof. exact (EQ_MP (@lem10578 p) (@lem10597 p)). Qed.
Lemma lem3505834 {_90804 : Type'} (s : _90804) (g : _90804 -> Prop) (x : _90804) : ((term1821 _90804 g x s) = (g x)) = (term1905 _90804 s g x).
Proof. exact (@lem3505833 ((term1821 _90804 g x s) = (g x))). Qed.
Lemma lem3505835 {_90804 : Type'} (s : _90804) (g : _90804 -> Prop) (x : _90804) : (term1905 _90804 s g x) = ((term1821 _90804 g x s) = (g x)).
Proof. exact (SYM (@lem3505834 _90804 s g x)). Qed.
Lemma lem3505836 {_90804 : Type'} (s : _90804) (g : _90804 -> Prop) (x : _90804) (h1 : term1906 _90804 s g x) : term1906 _90804 s g x.
Proof. exact (h1). Qed.
Lemma lem3505842 {_90804 : Type'} (g : _90804 -> Prop) (s : _90804) (h1 : term618 _90804 g s) : term618 _90804 g s.
Proof. exact (h1). Qed.
Lemma lem3505848 {_90804 : Type'} (x : _90804) (s : _90804) : (term919 _90804 x s) = (x = s).
Proof. exact (@lem16933 (x = s)). Qed.
Lemma lem3505850 {_90804 : Type'} (g : _90804 -> Prop) (x : _90804) : (term320 _90804 g x) = (term320 _90804 g x).
Proof. exact (eq_refl (term320 _90804 g x)). Qed.
Lemma lem3505851 {_90804 : Type'} (g : _90804 -> Prop) (x : _90804) (s : _90804) : (term1844 _90804 g x s) = (term1845 _90804 g x s).
Proof. exact (MK_COMB (@lem3505850 _90804 g x) (@lem3505848 _90804 x s)). Qed.
Lemma lem3505852 {_90804 : Type'} (g : _90804 -> Prop) (x : _90804) (s : _90804) : (term1846 _90804 g x s) = (term1844 _90804 g x s).
Proof. exact (@lem17045 (g x) (term909 _90804 x s)). Qed.
Lemma lem3505853 {_90804 : Type'} (g : _90804 -> Prop) (x : _90804) (s : _90804) : (term1846 _90804 g x s) = (term1845 _90804 g x s).
Proof. exact (TRANS (@lem3505852 _90804 g x s) (@lem3505851 _90804 g x s)). Qed.
Lemma lem3505858 {_90804 : Type'} (g : _90804 -> Prop) (x : _90804) : (g x) = (g x).
Proof. exact (eq_refl (g x)). Qed.
Lemma lem3505859 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem3505860 {_90804 : Type'} (g : _90804 -> Prop) (x : _90804) (s : _90804) : (term1907 _90804 g x s) = (term1908 _90804 g x s).
Proof. exact (MK_COMB (@lem3505859) (@lem3505853 _90804 g x s)). Qed.
Lemma lem3505861 {_90804 : Type'} (s : _90804) (g : _90804 -> Prop) (x : _90804) : (term1909 _90804 s g x) = (term1910 _90804 s g x).
Proof. exact (MK_COMB (@lem3505860 _90804 g x s) (@lem3505858 _90804 g x)). Qed.
Lemma lem3505866 {_90804 : Type'} (s : _90804) (g : _90804 -> Prop) (x : _90804) : (term1911 _90804 s g x) = (term1911 _90804 s g x).
Proof. exact (eq_refl (term1911 _90804 s g x)). Qed.
Lemma lem3505867 {_90804 : Type'} (s : _90804) (g : _90804 -> Prop) (x : _90804) : (term1912 _90804 s g x) = (term1913 _90804 s g x).
Proof. exact (MK_COMB (@lem3505866 _90804 s g x) (@lem3505861 _90804 s g x)). Qed.
Lemma lem3505868 {_90804 : Type'} (s : _90804) (g : _90804 -> Prop) (x : _90804) : (term1906 _90804 s g x) = (term1912 _90804 s g x).
Proof. exact (@lem17646 (term1821 _90804 g x s) (g x)). Qed.
Lemma lem3505873 {_90804 : Type'} (s : _90804) (g : _90804 -> Prop) (x : _90804) : (term1906 _90804 s g x) = (term1913 _90804 s g x).
Proof. exact (TRANS (@lem3505868 _90804 s g x) (@lem3505867 _90804 s g x)). Qed.
Lemma lem3505880 {_90804 : Type'} (g : _90804 -> Prop) (s : _90804) (h1 : term618 _90804 g s) : term618 _90804 g s.
Proof. exact (h1). Qed.
Lemma lem3505924 {_90804 : Type'} (s : _90804) (g : _90804 -> Prop) (x : _90804) (h1 : term1906 _90804 s g x) : term1913 _90804 s g x.
Proof. exact (EQ_MP (@lem3505873 _90804 s g x) (@lem3505836 _90804 s g x h1)). Qed.
Lemma lem3505925 {_90804 : Type'} (s : _90804) (g : _90804 -> Prop) (x : _90804) (h1 : term1914 _90804 s g x) : term1914 _90804 s g x.
Proof. exact (h1). Qed.
Lemma lem3505926 {_90804 : Type'} (s : _90804) (g : _90804 -> Prop) (x : _90804) (h1 : term1910 _90804 s g x) : term1910 _90804 s g x.
Proof. exact (h1). Qed.
Lemma lem3505928 {_90804 : Type'} (s : _90804) (g : _90804 -> Prop) (x : _90804) (h1 : term1914 _90804 s g x) : term1821 _90804 g x s.
Proof. exact (proj1 (@lem3505925 _90804 s g x h1)). Qed.
Lemma lem3505932 {_90804 : Type'} (s : _90804) (g : _90804 -> Prop) (x : _90804) (h1 : term1910 _90804 s g x) : term1845 _90804 g x s.
Proof. exact (proj1 (@lem3505926 _90804 s g x h1)). Qed.
Lemma lem3505962 {_90804 : Type'} (g : _90804 -> Prop) (x : _90804) (h1 : term618 _90804 g x) : term618 _90804 g x.
Proof. exact (h1). Qed.
Lemma lem3505966 {_90804 : Type'} (g : _90804 -> Prop) (s : _90804) (h1 : term618 _90804 g s) : term618 _90804 g s.
Proof. exact (h1). Qed.
Lemma lem3505974 {_90804 : Type'} (x : _90804) (s : _90804) (h1 : x = s) : x = s.
Proof. exact (h1). Qed.
Lemma lem3505978 {_90804 : Type'} (s : _90804) (g : _90804 -> Prop) (x : _90804) (h1 : term1914 _90804 s g x) : term618 _90804 g x.
Proof. exact (proj2 (@lem3505925 _90804 s g x h1)). Qed.
Lemma lem3505988 {_90804 : Type'} (g : _90804 -> Prop) (x : _90804) (h1 : term618 _90804 g x) : term618 _90804 g x.
Proof. exact (h1). Qed.
Lemma lem3505990 {_90804 : Type'} (g : _90804 -> Prop) (s : _90804) (h1 : term618 _90804 g s) : term618 _90804 g s.
Proof. exact (h1). Qed.
Lemma lem3505992 {_90804 : Type'} (s : _90804) (g : _90804 -> Prop) (x : _90804) (h1 : term1910 _90804 s g x) : g x.
Proof. exact (proj2 (@lem3505926 _90804 s g x h1)). Qed.
Lemma lem3505994 {_90804 : Type'} (x : _90804) (s : _90804) (h1 : x = s) : x = s.
Proof. exact (h1). Qed.
Lemma lem3506022 {_90804 : Type'} (g : _90804 -> Prop) (s : _90804) (h1 : term618 _90804 g s) : term618 _90804 g s.
Proof. exact (h1). Qed.
Lemma lem3506023 {_90804 : Type'} (g : _90804 -> Prop) : (term1665 _90804 g) = (term1665 _90804 g).
Proof. exact (eq_refl (term1665 _90804 g)). Qed.
Lemma lem3506024 {_90804 : Type'} (g : _90804 -> Prop) (x : _90804) (s : _90804) (h1 : x = s) : (term1666 _90804 g x) = (term1666 _90804 g s).
Proof. exact (MK_COMB (@lem3506023 _90804 g) (@lem3505994 _90804 x s h1)). Qed.
Lemma lem3506025 {_90804 : Type'} (g : _90804 -> Prop) (s : _90804) : (term1666 _90804 g s) = (g s).
Proof. exact (eq_refl (term1666 _90804 g s)). Qed.
Lemma lem3506026 {_90804 : Type'} (g : _90804 -> Prop) (x : _90804) : (term1669 _90804 g x) = (term1669 _90804 g x).
Proof. exact (eq_refl (term1669 _90804 g x)). Qed.
Lemma lem3506027 {_90804 : Type'} (x : _90804) (g : _90804 -> Prop) (s : _90804) : ((term1666 _90804 g x) = (term1666 _90804 g s)) = ((term1666 _90804 g x) = (g s)).
Proof. exact (MK_COMB (@lem3506026 _90804 g x) (@lem3506025 _90804 g s)). Qed.
Lemma lem3506028 {_90804 : Type'} (g : _90804 -> Prop) (x : _90804) : (term1666 _90804 g x) = (g x).
Proof. exact (eq_refl (term1666 _90804 g x)). Qed.
Lemma lem3506029 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem3506030 {_90804 : Type'} (g : _90804 -> Prop) (x : _90804) : (term1669 _90804 g x) = (term1670 _90804 g x).
Proof. exact (MK_COMB (@lem3506029) (@lem3506028 _90804 g x)). Qed.
Lemma lem3506031 {_90804 : Type'} (g : _90804 -> Prop) (s : _90804) : (g s) = (g s).
Proof. exact (eq_refl (g s)). Qed.
Lemma lem3506032 {_90804 : Type'} (x : _90804) (g : _90804 -> Prop) (s : _90804) : ((term1666 _90804 g x) = (g s)) = ((g x) = (g s)).
Proof. exact (MK_COMB (@lem3506030 _90804 g x) (@lem3506031 _90804 g s)). Qed.
Lemma lem3506033 {_90804 : Type'} (x : _90804) (g : _90804 -> Prop) (s : _90804) : ((term1666 _90804 g x) = (term1666 _90804 g s)) = ((g x) = (g s)).
Proof. exact (TRANS (@lem3506027 _90804 x g s) (@lem3506032 _90804 x g s)). Qed.
Lemma lem3506034 {_90804 : Type'} (g : _90804 -> Prop) (x : _90804) (s : _90804) (h1 : x = s) : (g x) = (g s).
Proof. exact (EQ_MP (@lem3506033 _90804 x g s) (@lem3506024 _90804 g x s h1)). Qed.
Lemma lem3506051 {_90804 : Type'} (s : _90804) (g : _90804 -> Prop) (x : _90804) (h1 : term1914 _90804 s g x) : g x.
Proof. exact (proj1 (@lem3505928 _90804 s g x h1)). Qed.
Lemma lem3506052 {_90804 : Type'} (s : _90804) (g : _90804 -> Prop) (x : _90804) (h1 : term1914 _90804 s g x) : term1675 _90804 g x.
Proof. exact (fun h0 : term618 _90804 g x => @lem3506051 _90804 s g x h1). Qed.
Lemma lem3506054 (p : Prop) : (term828 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem3506055 {_90804 : Type'} (g : _90804 -> Prop) (x : _90804) : (term1675 _90804 g x) = (g x).
Proof. exact (@lem3506054 (g x)). Qed.
Lemma lem3506056 {_90804 : Type'} (s : _90804) (g : _90804 -> Prop) (x : _90804) (h1 : term1914 _90804 s g x) : g x.
Proof. exact (EQ_MP (@lem3506055 _90804 g x) (@lem3506052 _90804 s g x h1)). Qed.
Lemma lem3506059 (p : Prop) : (~ p) = (p -> False).
Proof. exact (EQ_MP (@lem21021 p) (@lem0)). Qed.
Lemma lem3506061 {_90804 : Type'} (g : _90804 -> Prop) (x : _90804) : (term618 _90804 g x) = (term1864 _90804 g x).
Proof. exact (@lem3506059 (g x)). Qed.
Lemma lem3506064 {_90804 : Type'} (s : _90804) (g : _90804 -> Prop) (x : _90804) (h1 : term1914 _90804 s g x) : term1864 _90804 g x.
Proof. exact (EQ_MP (@lem3506061 _90804 g x) (@lem3505978 _90804 s g x h1)). Qed.
Lemma lem3506067 {_90804 : Type'} (s : _90804) (g : _90804 -> Prop) (x : _90804) (h1 : term1914 _90804 s g x) : False.
Proof. exact (@lem3506064 _90804 s g x h1 (@lem3506056 _90804 s g x h1)). Qed.
Lemma lem3506068 {_90804 : Type'} (s : _90804) (g : _90804 -> Prop) (x : _90804) (h1 : term1914 _90804 s g x) : term847.
Proof. exact (fun h0 : ~ False => @lem3506067 _90804 s g x h1). Qed.
Lemma lem3506070 (p : Prop) : (term828 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem3506071 : term847 = False.
Proof. exact (@lem3506070 False). Qed.
Lemma lem3506072 {_90804 : Type'} (s : _90804) (g : _90804 -> Prop) (x : _90804) (h1 : term1914 _90804 s g x) : False.
Proof. exact (EQ_MP (@lem3506071) (@lem3506068 _90804 s g x h1)). Qed.
Lemma lem3506074 {_90804 : Type'} (s : _90804) (g : _90804 -> Prop) (x : _90804) (h1 : term1910 _90804 s g x) : g x.
Proof. exact (proj2 (@lem3505926 _90804 s g x h1)). Qed.
Lemma lem3506075 {_90804 : Type'} (s : _90804) (g : _90804 -> Prop) (x : _90804) (h1 : term1910 _90804 s g x) : term1675 _90804 g x.
Proof. exact (fun h0 : term618 _90804 g x => @lem3506074 _90804 s g x h1). Qed.
Lemma lem3506077 (p : Prop) : (term828 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem3506078 {_90804 : Type'} (g : _90804 -> Prop) (x : _90804) : (term1675 _90804 g x) = (g x).
Proof. exact (@lem3506077 (g x)). Qed.
Lemma lem3506079 {_90804 : Type'} (s : _90804) (g : _90804 -> Prop) (x : _90804) (h1 : term1910 _90804 s g x) : g x.
Proof. exact (EQ_MP (@lem3506078 _90804 g x) (@lem3506075 _90804 s g x h1)). Qed.
Lemma lem3506082 (p : Prop) : (~ p) = (p -> False).
Proof. exact (EQ_MP (@lem21021 p) (@lem0)). Qed.
Lemma lem3506084 {_90804 : Type'} (g : _90804 -> Prop) (x : _90804) : (term618 _90804 g x) = (term1864 _90804 g x).
Proof. exact (@lem3506082 (g x)). Qed.
Lemma lem3506087 {_90804 : Type'} (g : _90804 -> Prop) (x : _90804) (h1 : term618 _90804 g x) : term1864 _90804 g x.
Proof. exact (EQ_MP (@lem3506084 _90804 g x) (@lem3505988 _90804 g x h1)). Qed.
Lemma lem3506090 {_90804 : Type'} (s : _90804) (g : _90804 -> Prop) (x : _90804) (h1 : term618 _90804 g x) (h2 : term1910 _90804 s g x) : False.
Proof. exact (@lem3506087 _90804 g x h1 (@lem3506079 _90804 s g x h2)). Qed.
Lemma lem3506091 {_90804 : Type'} (s : _90804) (g : _90804 -> Prop) (x : _90804) (h1 : term618 _90804 g x) (h2 : term1910 _90804 s g x) : term847.
Proof. exact (fun h0 : ~ False => @lem3506090 _90804 s g x h1 h2). Qed.
Lemma lem3506093 (p : Prop) : (term828 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem3506094 : term847 = False.
Proof. exact (@lem3506093 False). Qed.
Lemma lem3506095 {_90804 : Type'} (s : _90804) (g : _90804 -> Prop) (x : _90804) (h1 : term618 _90804 g x) (h2 : term1910 _90804 s g x) : False.
Proof. exact (EQ_MP (@lem3506094) (@lem3506091 _90804 s g x h1 h2)). Qed.
Lemma lem3506097 {_90804 : Type'} (g : _90804 -> Prop) (x : _90804) (s : _90804) (h1 : term1910 _90804 s g x) (h2 : x = s) : g s.
Proof. exact (EQ_MP (@lem3506034 _90804 g x s h2) (@lem3505992 _90804 s g x h1)). Qed.
Lemma lem3506098 {_90804 : Type'} (g : _90804 -> Prop) (x : _90804) (s : _90804) (h1 : term1910 _90804 s g x) (h2 : x = s) : term1675 _90804 g s.
Proof. exact (fun h0 : term618 _90804 g s => @lem3506097 _90804 g x s h1 h2). Qed.
Lemma lem3506100 (p : Prop) : (term828 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem3506101 {_90804 : Type'} (g : _90804 -> Prop) (s : _90804) : (term1675 _90804 g s) = (g s).
Proof. exact (@lem3506100 (g s)). Qed.
Lemma lem3506102 {_90804 : Type'} (g : _90804 -> Prop) (x : _90804) (s : _90804) (h1 : term1910 _90804 s g x) (h2 : x = s) : g s.
Proof. exact (EQ_MP (@lem3506101 _90804 g s) (@lem3506098 _90804 g x s h1 h2)). Qed.
Lemma lem3506105 (p : Prop) : (~ p) = (p -> False).
Proof. exact (EQ_MP (@lem21021 p) (@lem0)). Qed.
Lemma lem3506107 {_90804 : Type'} (g : _90804 -> Prop) (s : _90804) : (term618 _90804 g s) = (term1864 _90804 g s).
Proof. exact (@lem3506105 (g s)). Qed.
Lemma lem3506110 {_90804 : Type'} (g : _90804 -> Prop) (s : _90804) (h1 : term618 _90804 g s) : term1864 _90804 g s.
Proof. exact (EQ_MP (@lem3506107 _90804 g s) (@lem3506022 _90804 g s h1)). Qed.
Lemma lem3506113 {_90804 : Type'} (g : _90804 -> Prop) (x : _90804) (s : _90804) (h1 : term618 _90804 g s) (h2 : term1910 _90804 s g x) (h3 : x = s) : False.
Proof. exact (@lem3506110 _90804 g s h1 (@lem3506102 _90804 g x s h2 h3)). Qed.
Lemma lem3506114 {_90804 : Type'} (g : _90804 -> Prop) (x : _90804) (s : _90804) (h1 : term618 _90804 g s) (h2 : term1910 _90804 s g x) (h3 : x = s) : term847.
Proof. exact (fun h0 : ~ False => @lem3506113 _90804 g x s h1 h2 h3). Qed.
Lemma lem3506116 (p : Prop) : (term828 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem3506117 : term847 = False.
Proof. exact (@lem3506116 False). Qed.
Lemma lem3506118 {_90804 : Type'} (g : _90804 -> Prop) (x : _90804) (s : _90804) (h1 : term618 _90804 g s) (h2 : term1910 _90804 s g x) (h3 : x = s) : False.
Proof. exact (EQ_MP (@lem3506117) (@lem3506114 _90804 g x s h1 h2 h3)). Qed.
Lemma lem3506119 {_90804 : Type'} (g : _90804 -> Prop) (x : _90804) (s : _90804) (h1 : term618 _90804 g s) (h2 : term1910 _90804 s g x) (h3 : x = s) : (term618 _90804 g s) = False.
Proof. exact (prop_ext (fun h4 : term618 _90804 g s => @lem3506118 _90804 g x s h1 h2 h3) (fun h4 : False => @lem3506022 _90804 g s h1)). Qed.
Lemma lem3506121 {_90804 : Type'} (g : _90804 -> Prop) (x : _90804) (s : _90804) (h1 : term618 _90804 g s) (h2 : term1910 _90804 s g x) (h3 : x = s) : False.
Proof. exact (EQ_MP (@lem3506119 _90804 g x s h1 h2 h3) (@lem3506022 _90804 g s h1)). Qed.
Lemma lem3506122 {_90804 : Type'} (g : _90804 -> Prop) (x : _90804) (s : _90804) (h1 : term618 _90804 g s) (h2 : term1910 _90804 s g x) (h3 : x = s) : (x = s) = False.
Proof. exact (prop_ext (fun h4 : x = s => @lem3506121 _90804 g x s h1 h2 h3) (fun h4 : False => @lem3505994 _90804 x s h3)). Qed.
Lemma lem3506123 {_90804 : Type'} (g : _90804 -> Prop) (x : _90804) (s : _90804) (h1 : term618 _90804 g s) (h2 : term1910 _90804 s g x) (h3 : x = s) : False.
Proof. exact (EQ_MP (@lem3506122 _90804 g x s h1 h2 h3) (@lem3505994 _90804 x s h3)). Qed.
Lemma lem3506124 {_90804 : Type'} (g : _90804 -> Prop) (x : _90804) (s : _90804) (h1 : term618 _90804 g s) (h2 : term1910 _90804 s g x) (h3 : x = s) : (term618 _90804 g s) = False.
Proof. exact (prop_ext (fun h4 : term618 _90804 g s => @lem3506123 _90804 g x s h1 h2 h3) (fun h4 : False => @lem3505990 _90804 g s h1)). Qed.
Lemma lem3506125 {_90804 : Type'} (g : _90804 -> Prop) (x : _90804) (s : _90804) (h1 : term618 _90804 g s) (h2 : term1910 _90804 s g x) (h3 : x = s) : False.
Proof. exact (EQ_MP (@lem3506124 _90804 g x s h1 h2 h3) (@lem3505990 _90804 g s h1)). Qed.
Lemma lem3506126 {_90804 : Type'} (s : _90804) (g : _90804 -> Prop) (x : _90804) (h1 : term618 _90804 g x) (h2 : term1910 _90804 s g x) : (term618 _90804 g x) = False.
Proof. exact (prop_ext (fun h3 : term618 _90804 g x => @lem3506095 _90804 s g x h1 h2) (fun h3 : False => @lem3505988 _90804 g x h1)). Qed.
Lemma lem3506127 {_90804 : Type'} (s : _90804) (g : _90804 -> Prop) (x : _90804) (h1 : term618 _90804 g x) (h2 : term1910 _90804 s g x) : False.
Proof. exact (EQ_MP (@lem3506126 _90804 s g x h1 h2) (@lem3505988 _90804 g x h1)). Qed.
Lemma lem3506128 {_90804 : Type'} (g : _90804 -> Prop) (x : _90804) (s : _90804) (h1 : term618 _90804 g s) (h2 : term1910 _90804 s g x) (h3 : x = s) : (x = s) = False.
Proof. exact (prop_ext (fun h4 : x = s => @lem3506125 _90804 g x s h1 h2 h3) (fun h4 : False => @lem3505974 _90804 x s h3)). Qed.
Lemma lem3506129 {_90804 : Type'} (g : _90804 -> Prop) (x : _90804) (s : _90804) (h1 : term618 _90804 g s) (h2 : term1910 _90804 s g x) (h3 : x = s) : False.
Proof. exact (EQ_MP (@lem3506128 _90804 g x s h1 h2 h3) (@lem3505974 _90804 x s h3)). Qed.
Lemma lem3506130 {_90804 : Type'} (g : _90804 -> Prop) (x : _90804) (s : _90804) (h1 : term618 _90804 g s) (h2 : term1910 _90804 s g x) (h3 : x = s) : (term618 _90804 g s) = False.
Proof. exact (prop_ext (fun h4 : term618 _90804 g s => @lem3506129 _90804 g x s h1 h2 h3) (fun h4 : False => @lem3505966 _90804 g s h1)). Qed.
Lemma lem3506131 {_90804 : Type'} (g : _90804 -> Prop) (x : _90804) (s : _90804) (h1 : term618 _90804 g s) (h2 : term1910 _90804 s g x) (h3 : x = s) : False.
Proof. exact (EQ_MP (@lem3506130 _90804 g x s h1 h2 h3) (@lem3505966 _90804 g s h1)). Qed.
Lemma lem3506132 {_90804 : Type'} (s : _90804) (g : _90804 -> Prop) (x : _90804) (h1 : term618 _90804 g x) (h2 : term1910 _90804 s g x) : (term618 _90804 g x) = False.
Proof. exact (prop_ext (fun h3 : term618 _90804 g x => @lem3506127 _90804 s g x h1 h2) (fun h3 : False => @lem3505962 _90804 g x h1)). Qed.
Lemma lem3506133 {_90804 : Type'} (s : _90804) (g : _90804 -> Prop) (x : _90804) (h1 : term618 _90804 g x) (h2 : term1910 _90804 s g x) : False.
Proof. exact (EQ_MP (@lem3506132 _90804 s g x h1 h2) (@lem3505962 _90804 g x h1)). Qed.
Lemma lem3506134 {_90804 : Type'} (g : _90804 -> Prop) (x : _90804) (s : _90804) (h1 : term618 _90804 g s) (h2 : term1910 _90804 s g x) (h3 : x = s) : (x = s) = False.
Proof. exact (prop_ext (fun h4 : x = s => @lem3506131 _90804 g x s h1 h2 h3) (fun h4 : False => @lem3505974 _90804 x s h3)). Qed.
Lemma lem3506135 {_90804 : Type'} (g : _90804 -> Prop) (x : _90804) (s : _90804) (h1 : term618 _90804 g s) (h2 : term1910 _90804 s g x) (h3 : x = s) : False.
Proof. exact (EQ_MP (@lem3506134 _90804 g x s h1 h2 h3) (@lem3505974 _90804 x s h3)). Qed.
Lemma lem3506136 {_90804 : Type'} (g : _90804 -> Prop) (x : _90804) (s : _90804) (h1 : term618 _90804 g s) (h2 : term1910 _90804 s g x) (h3 : x = s) : (term618 _90804 g s) = False.
Proof. exact (prop_ext (fun h4 : term618 _90804 g s => @lem3506135 _90804 g x s h1 h2 h3) (fun h4 : False => @lem3505966 _90804 g s h1)). Qed.
Lemma lem3506137 {_90804 : Type'} (g : _90804 -> Prop) (x : _90804) (s : _90804) (h1 : term618 _90804 g s) (h2 : term1910 _90804 s g x) (h3 : x = s) : False.
Proof. exact (EQ_MP (@lem3506136 _90804 g x s h1 h2 h3) (@lem3505966 _90804 g s h1)). Qed.
Lemma lem3506138 {_90804 : Type'} (s : _90804) (g : _90804 -> Prop) (x : _90804) (h1 : term618 _90804 g x) (h2 : term1910 _90804 s g x) : (term618 _90804 g x) = False.
Proof. exact (prop_ext (fun h3 : term618 _90804 g x => @lem3506133 _90804 s g x h1 h2) (fun h3 : False => @lem3505962 _90804 g x h1)). Qed.
Lemma lem3506139 {_90804 : Type'} (s : _90804) (g : _90804 -> Prop) (x : _90804) (h1 : term618 _90804 g x) (h2 : term1910 _90804 s g x) : False.
Proof. exact (EQ_MP (@lem3506138 _90804 s g x h1 h2) (@lem3505962 _90804 g x h1)). Qed.
Lemma lem3506140 {_90804 : Type'} (s : _90804) (g : _90804 -> Prop) (x : _90804) (h1 : term618 _90804 g s) (h2 : term1910 _90804 s g x) : False.
Proof. exact (or_elim (@lem3505932 _90804 s g x h2) (fun h0 : term618 _90804 g x => @lem3506139 _90804 s g x h0 h2) (fun h0 : x = s => @lem3506137 _90804 g x s h1 h2 h0)). Qed.
Lemma lem3506141 {_90804 : Type'} (s : _90804) (g : _90804 -> Prop) (x : _90804) (h1 : term618 _90804 g s) (h2 : term1906 _90804 s g x) : False.
Proof. exact (or_elim (@lem3505924 _90804 s g x h2) (fun h0 : term1914 _90804 s g x => @lem3506072 _90804 s g x h0) (fun h0 : term1910 _90804 s g x => @lem3506140 _90804 s g x h1 h0)). Qed.
Lemma lem3506142 {_90804 : Type'} (s : _90804) (g : _90804 -> Prop) (x : _90804) (h1 : term618 _90804 g s) (h2 : term1906 _90804 s g x) : (term618 _90804 g s) = False.
Proof. exact (prop_ext (fun h3 : term618 _90804 g s => @lem3506141 _90804 s g x h1 h2) (fun h3 : False => @lem3505880 _90804 g s h1)). Qed.
Lemma lem3506143 {_90804 : Type'} (s : _90804) (g : _90804 -> Prop) (x : _90804) (h1 : term618 _90804 g s) (h2 : term1906 _90804 s g x) : False.
Proof. exact (EQ_MP (@lem3506142 _90804 s g x h1 h2) (@lem3505880 _90804 g s h1)). Qed.
Lemma lem3506144 {_90804 : Type'} (s : _90804) (g : _90804 -> Prop) (x : _90804) (h1 : term618 _90804 g s) (h2 : term1906 _90804 s g x) : (term618 _90804 g s) = False.
Proof. exact (prop_ext (fun h3 : term618 _90804 g s => @lem3506143 _90804 s g x h1 h2) (fun h3 : False => @lem3505842 _90804 g s h1)). Qed.
Lemma lem3506145 {_90804 : Type'} (s : _90804) (g : _90804 -> Prop) (x : _90804) (h1 : term618 _90804 g s) (h2 : term1906 _90804 s g x) : False.
Proof. exact (EQ_MP (@lem3506144 _90804 s g x h1 h2) (@lem3505842 _90804 g s h1)). Qed.
Lemma lem3506146 {_90804 : Type'} (s : _90804) (g : _90804 -> Prop) (x : _90804) (h1 : term618 _90804 g s) (h2 : term1906 _90804 s g x) : (term1906 _90804 s g x) = False.
Proof. exact (prop_ext (fun h3 : term1906 _90804 s g x => @lem3506145 _90804 s g x h1 h2) (fun h3 : False => @lem3505836 _90804 s g x h2)). Qed.
Lemma lem3506147 {_90804 : Type'} (s : _90804) (g : _90804 -> Prop) (x : _90804) (h1 : term618 _90804 g s) (h2 : term1906 _90804 s g x) : False.
Proof. exact (EQ_MP (@lem3506146 _90804 s g x h1 h2) (@lem3505836 _90804 s g x h2)). Qed.
Lemma lem3506148 {_90804 : Type'} (x : _90804) (g : _90804 -> Prop) (s : _90804) (h1 : term618 _90804 g s) : term1905 _90804 s g x.
Proof. exact (fun h0 : term1906 _90804 s g x => @lem3506147 _90804 s g x h1 h0). Qed.
Lemma lem3506149 {_90804 : Type'} (x : _90804) (g : _90804 -> Prop) (s : _90804) (h1 : term618 _90804 g s) : (term1821 _90804 g x s) = (g x).
Proof. exact (EQ_MP (@lem3505835 _90804 s g x) (@lem3506148 _90804 x g s h1)). Qed.
Lemma lem3506154 {_90804 : Type'} (g : _90804 -> Prop) (s : _90804) (h1 : term618 _90804 g s) : term1889 _90804 s g.
Proof. exact (fun x : _90804 => @lem3506149 _90804 x g s h1). Qed.
Lemma lem3506155 {_90804 : Type'} (s : _90804) (g : _90804 -> Prop) : term1890 _90804 s g.
Proof. exact (fun h0 : term618 _90804 g s => @lem3506154 _90804 g s h0). Qed.
Lemma lem3506160 {_90804 : Type'} (g : _90804 -> Prop) : term1900 _90804 g.
Proof. exact (fun s : _90804 => @lem3506155 _90804 s g). Qed.
Lemma lem3506165 {_90804 : Type'} : term1904 _90804.
Proof. exact (fun g : _90804 -> Prop => @lem3506160 _90804 g). Qed.
Lemma lem3506166 {_90804 : Type'} : term1903 _90804.
Proof. exact (EQ_MP (@lem3505830 _90804) (@lem3506165 _90804)). Qed.
Lemma lem3506167 {_90804 : Type'} (g : _90804 -> Prop) : term1915 _90804 g.
Proof. exact (@lem3506166 _90804 g). Qed.
Lemma lem3506168 {_90804 : Type'} (g : _90804 -> Prop) : (term1915 _90804 g) = (term1899 _90804 g).
Proof. exact (eq_refl (term1915 _90804 g)). Qed.
Lemma lem3506169 {_90804 : Type'} (g : _90804 -> Prop) : term1899 _90804 g.
Proof. exact (EQ_MP (@lem3506168 _90804 g) (@lem3506167 _90804 g)). Qed.
Lemma lem3506170 {_90804 : Type'} (g : _90804 -> Prop) (s : _90804) : term1916 _90804 g s.
Proof. exact (@lem3506169 _90804 g s). Qed.
Lemma lem3506171 {_90804 : Type'} (s : _90804) (g : _90804 -> Prop) : (term1916 _90804 g s) = (term1891 _90804 s g).
Proof. exact (eq_refl (term1916 _90804 g s)). Qed.
Lemma lem3506172 {_90804 : Type'} (s : _90804) (g : _90804 -> Prop) : term1891 _90804 s g.
Proof. exact (EQ_MP (@lem3506171 _90804 s g) (@lem3506170 _90804 g s)). Qed.
Lemma lem3506174 {_90804 : Type'} (s : _90804) (g : _90804 -> Prop) : term1891 _90804 s g.
Proof. exact (@lem3505737 _90804 s g (@lem3506172 _90804 s g)). Qed.
Lemma lem3506175 {_90804 : Type'} (s : _90804) (g : _90804 -> Prop) (h1 : term1892 _90804 s g) : False.
Proof. exact (@lem3506174 _90804 s g (@lem3505721 _90804 s g h1)). Qed.
Lemma lem3506176 {_90804 : Type'} (s : _90804) (g : _90804 -> Prop) (h1 : term1892 _90804 s g) : (term1892 _90804 s g) = False.
Proof. exact (prop_ext (fun h2 : term1892 _90804 s g => @lem3506175 _90804 s g h1) (fun h2 : False => @lem3505721 _90804 s g h1)). Qed.
Lemma lem3506177 {_90804 : Type'} (s : _90804) (g : _90804 -> Prop) (h1 : term1892 _90804 s g) : False.
Proof. exact (EQ_MP (@lem3506176 _90804 s g h1) (@lem3505721 _90804 s g h1)). Qed.
Lemma lem3506178 {_90804 : Type'} (s : _90804) (g : _90804 -> Prop) : term1891 _90804 s g.
Proof. exact (fun h0 : term1892 _90804 s g => @lem3506177 _90804 s g h0). Qed.
Lemma lem3506179 {_90804 : Type'} (s : _90804) (g : _90804 -> Prop) : term1890 _90804 s g.
Proof. exact (EQ_MP (@lem3505720 _90804 s g) (@lem3506178 _90804 s g)). Qed.
Lemma lem3506180 {_90804 : Type'} (s : _90804) (g : _90804 -> Prop) : term1882 _90804 s g.
Proof. exact (EQ_MP (@lem3505716 _90804 s g) (@lem3506179 _90804 s g)). Qed.
Lemma lem3506181 {_90804 : Type'} (s : _90804) (g : _90804 -> Prop) : term1881 _90804 s g.
Proof. exact (EQ_MP (@lem3505661 _90804 s g) (@lem3506180 _90804 s g)). Qed.
Lemma lem3506182 {A : Type'} (s : A -> Prop) (g : type686 A) : term1917 A s g.
Proof. exact (@lem9784 (@IN (A -> Prop) s g)). Qed.
Lemma lem3506183 {A : Type'} (s : A -> Prop) (g : type686 A) : (term1917 A s g) = (term1918 A s g).
Proof. exact (eq_refl (term1917 A s g)). Qed.
Lemma lem3506184 {A : Type'} (s : A -> Prop) (g : type686 A) : term1918 A s g.
Proof. exact (EQ_MP (@lem3506183 A s g) (@lem3506182 A s g)). Qed.
Lemma lem3506185 {A : Type'} (s : A -> Prop) (g : type686 A) (h1 : @IN (A -> Prop) s g) : @IN (A -> Prop) s g.
Proof. exact (h1). Qed.
Lemma lem3506186 {A : Type'} (s : A -> Prop) (g : type686 A) (h1 : term115 A s g) : term115 A s g.
Proof. exact (h1). Qed.
Lemma lem3506452 {_90804 : Type'} (s : _90804) (g : _90804 -> Prop) (h1 : term1883 _90804 s g) : term1883 _90804 s g.
Proof. exact (h1). Qed.
Lemma lem3506453 {_90804 : Type'} (s : _90804) (g : _90804 -> Prop) (h1 : term1883 _90804 s g) : (@DELETE _90804 g s) = g.
Proof. exact (@lem3506181 _90804 s g (@lem3506452 _90804 s g h1)). Qed.
Lemma lem3506459 {A : Type'} (s : A -> Prop) (g : type686 A) : term1919 A s g.
Proof. exact (@lem82 (@IN (A -> Prop) s g)). Qed.
Lemma lem3506464 (p : Prop) (q : Prop) (p' : Prop) (q' : Prop) : term1920 p q p' q'.
Proof. exact (fun h0 : p = p' => @lem4211 q q' p p' h0). Qed.
Lemma lem3506465 (p : Prop) (q : Prop) (p' : Prop) : term1921 p q p'.
Proof. exact (fun q' : Prop => @lem3506464 p q p' q'). Qed.
Lemma lem3506466 (p : Prop) (q : Prop) : term1922 p q.
Proof. exact (fun p' : Prop => @lem3506465 p q p'). Qed.
Lemma lem3506467 {A B : Type'} (s : A -> Prop) (u : A -> Prop) (f : A -> B) (g : type686 A) : term1923 A B s u f g.
Proof. exact (@lem3506466 (term1924 A B g s u f) ((term49 A B f g) = (term50 A B f g))). Qed.
Lemma lem3506468 {A B : Type'} (s : A -> Prop) (u : A -> Prop) (f : A -> B) (g : type686 A) (p' : Prop) : term1925 A B s u f g p'.
Proof. exact (@lem3506467 A B s u f g p'). Qed.
Lemma lem3506469 {A B : Type'} (s : A -> Prop) (u : A -> Prop) (f : A -> B) (g : type686 A) (p' : Prop) : (term1925 A B s u f g p') = (term1926 A B s u f g p').
Proof. exact (eq_refl (term1925 A B s u f g p')). Qed.
Lemma lem3506470 {A B : Type'} (s : A -> Prop) (u : A -> Prop) (f : A -> B) (g : type686 A) (p' : Prop) : term1926 A B s u f g p'.
Proof. exact (EQ_MP (@lem3506469 A B s u f g p') (@lem3506468 A B s u f g p')). Qed.
Lemma lem3506471 {A B : Type'} (s : A -> Prop) (u : A -> Prop) (f : A -> B) (g : type686 A) (p' : Prop) (q' : Prop) : term1927 A B s u f g p' q'.
Proof. exact (@lem3506470 A B s u f g p' q'). Qed.
Lemma lem3506472 {A B : Type'} (s : A -> Prop) (u : A -> Prop) (f : A -> B) (g : type686 A) (p' : Prop) (q' : Prop) : (term1927 A B s u f g p' q') = (term1928 A B s u f g p' q').
Proof. exact (eq_refl (term1927 A B s u f g p' q')). Qed.
Lemma lem3506473 {A B : Type'} (s : A -> Prop) (u : A -> Prop) (f : A -> B) (g : type686 A) (p' : Prop) (q' : Prop) : term1928 A B s u f g p' q'.
Proof. exact (EQ_MP (@lem3506472 A B s u f g p' q') (@lem3506471 A B s u f g p' q')). Qed.
Lemma lem3506514 (p : Prop) (q : Prop) (p' : Prop) (q' : Prop) : term1920 p q p' q'.
Proof. exact (fun h0 : p = p' => @lem4211 q q' p p' h0). Qed.
Lemma lem3506515 (p : Prop) (q : Prop) (p' : Prop) : term1921 p q p'.
Proof. exact (fun q' : Prop => @lem3506514 p q p' q'). Qed.
Lemma lem3506516 (p : Prop) (q : Prop) : term1922 p q.
Proof. exact (fun p' : Prop => @lem3506515 p q p'). Qed.
Lemma lem3506517 {A B : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) (t : A -> Prop) : term1929 A B g s u f t.
Proof. exact (@lem3506516 (term1930 A t g s) (term73 A B u f t)). Qed.
Lemma lem3506518 {A B : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) (t : A -> Prop) (p' : Prop) : term1931 A B g s u f t p'.
Proof. exact (@lem3506517 A B g s u f t p'). Qed.
Lemma lem3506519 {A B : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) (t : A -> Prop) (p' : Prop) : (term1931 A B g s u f t p') = (term1932 A B g s u f t p').
Proof. exact (eq_refl (term1931 A B g s u f t p')). Qed.
Lemma lem3506520 {A B : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) (t : A -> Prop) (p' : Prop) : term1932 A B g s u f t p'.
Proof. exact (EQ_MP (@lem3506519 A B g s u f t p') (@lem3506518 A B g s u f t p')). Qed.
Lemma lem3506521 {A B : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) (t : A -> Prop) (p' : Prop) (q' : Prop) : term1933 A B g s u f t p' q'.
Proof. exact (@lem3506520 A B g s u f t p' q'). Qed.
Lemma lem3506522 {A B : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) (t : A -> Prop) (p' : Prop) (q' : Prop) : (term1933 A B g s u f t p' q') = (term1934 A B g s u f t p' q').
Proof. exact (eq_refl (term1933 A B g s u f t p' q')). Qed.
Lemma lem3506523 {A B : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) (t : A -> Prop) (p' : Prop) (q' : Prop) : term1934 A B g s u f t p' q'.
Proof. exact (EQ_MP (@lem3506522 A B g s u f t p' q') (@lem3506521 A B g s u f t p' q')). Qed.
Lemma lem3506525 {_90804 : Type'} (s : _90804) (g : _90804 -> Prop) : term1881 _90804 s g.
Proof. exact (fun h0 : term1883 _90804 s g => @lem3506453 _90804 s g h0). Qed.
Lemma lem3506526 {A : Type'} (s : A -> Prop) (g : type686 A) : term1935 A s g.
Proof. exact (@lem3506525 (A -> Prop) s g). Qed.
Lemma lem3506528 {A : Type'} (s : A -> Prop) (g : type686 A) (h1 : term115 A s g) : (@IN (A -> Prop) s g) = False.
Proof. exact (@lem3506459 A s g (@lem3506186 A s g h1)). Qed.
Lemma lem3506529 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem3506530 {A : Type'} (s : A -> Prop) (g : type686 A) (h1 : term115 A s g) : (term115 A s g) = (~ False).
Proof. exact (MK_COMB (@lem3506529) (@lem3506528 A s g h1)). Qed.
Lemma lem3506532 : (~ False) = True.
Proof. exact (proj2 (@lem1504)). Qed.
Lemma lem3506533 {A : Type'} (s : A -> Prop) (g : type686 A) (h1 : term115 A s g) : (term115 A s g) = True.
Proof. exact (TRANS (@lem3506530 A s g h1) (@lem3506532)). Qed.
Lemma lem3506534 {A : Type'} (s : A -> Prop) (g : type686 A) (h1 : term115 A s g) : True = (term115 A s g).
Proof. exact (SYM (@lem3506533 A s g h1)). Qed.
Lemma lem3506535 {A : Type'} (s : A -> Prop) (g : type686 A) (h1 : term115 A s g) : term115 A s g.
Proof. exact (EQ_MP (@lem3506534 A s g h1) (@lem0)). Qed.
Lemma lem3506536 {A : Type'} (s : A -> Prop) (g : type686 A) (h1 : term115 A s g) : (@DELETE (A -> Prop) g s) = g.
Proof. exact (@lem3506526 A s g (@lem3506535 A s g h1)). Qed.
Lemma lem3506537 {A : Type'} (t : A -> Prop) : (@IN (A -> Prop) t) = (@IN (A -> Prop) t).
Proof. exact (eq_refl (@IN (A -> Prop) t)). Qed.
Lemma lem3506538 {A : Type'} (t : A -> Prop) (s : A -> Prop) (g : type686 A) (h1 : term115 A s g) : (term1930 A t g s) = (@IN (A -> Prop) t g).
Proof. exact (MK_COMB (@lem3506537 A t) (@lem3506536 A s g h1)). Qed.
Lemma lem3506539 {A B : Type'} (s : A -> Prop) (u : A -> Prop) (f : A -> B) (t : A -> Prop) (g : type686 A) (q' : Prop) : term1936 A B s u f t g q'.
Proof. exact (@lem3506523 A B g s u f t (@IN (A -> Prop) t g) q'). Qed.
Lemma lem3506540 {A B : Type'} (u : A -> Prop) (f : A -> B) (t : A -> Prop) (q' : Prop) (s : A -> Prop) (g : type686 A) (h1 : term115 A s g) : term1937 A B s u f t g q'.
Proof. exact (@lem3506539 A B s u f t g q' (@lem3506538 A t s g h1)). Qed.
Lemma lem3506550 {A B : Type'} (u : A -> Prop) (f : A -> B) (t : A -> Prop) : (term73 A B u f t) = (term73 A B u f t).
Proof. exact (eq_refl (term73 A B u f t)). Qed.
Lemma lem3506551 {A B : Type'} (g : type686 A) (u : A -> Prop) (f : A -> B) (t : A -> Prop) : term1938 A B g u f t.
Proof. exact (fun h0 : @IN (A -> Prop) t g => @lem3506550 A B u f t). Qed.
Lemma lem3506552 {A B : Type'} (u : A -> Prop) (f : A -> B) (t : A -> Prop) (s : A -> Prop) (g : type686 A) (h1 : term115 A s g) : term1939 A B s g u f t.
Proof. exact (@lem3506540 A B u f t (term73 A B u f t) s g h1). Qed.
Lemma lem3506553 {A B : Type'} (u : A -> Prop) (f : A -> B) (t : A -> Prop) (s : A -> Prop) (g : type686 A) (h1 : term115 A s g) : (term1940 A B g s u f t) = (term1941 A B g u f t).
Proof. exact (@lem3506552 A B u f t s g h1 (@lem3506551 A B g u f t)). Qed.
Lemma lem3506589 {A B : Type'} (u : A -> Prop) (f : A -> B) (s : A -> Prop) (g : type686 A) (h1 : term115 A s g) : (term1942 A B g s u f) = (term1943 A B g u f).
Proof. exact (fun_ext (fun t : A -> Prop => @lem3506553 A B u f t s g h1)). Qed.
Lemma lem3506625 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem3506626 {A B : Type'} (u : A -> Prop) (f : A -> B) (s : A -> Prop) (g : type686 A) (h1 : term115 A s g) : (term1944 A B g s u f) = (term1945 A B g u f).
Proof. exact (MK_COMB (@lem3506625 A) (@lem3506589 A B u f s g h1)). Qed.
Lemma lem3506666 {A : Type'} (g : type686 A) (u : A -> Prop) : (term1946 A g u) = (term1946 A g u).
Proof. exact (eq_refl (term1946 A g u)). Qed.
Lemma lem3506667 {A B : Type'} (u : A -> Prop) (f : A -> B) (s : A -> Prop) (g : type686 A) (h1 : term115 A s g) : (term1947 A B g s u f) = (term1948 A B g u f).
Proof. exact (MK_COMB (@lem3506666 A g u) (@lem3506626 A B u f s g h1)). Qed.
Lemma lem3506736 {A : Type'} (g : type686 A) : (term42 A g) = (term42 A g).
Proof. exact (eq_refl (term42 A g)). Qed.
Lemma lem3506737 {A B : Type'} (u : A -> Prop) (f : A -> B) (s : A -> Prop) (g : type686 A) (h1 : term115 A s g) : (term1924 A B g s u f) = (term1949 A B g u f).
Proof. exact (MK_COMB (@lem3506736 A g) (@lem3506667 A B u f s g h1)). Qed.
Lemma lem3506810 {A B : Type'} (s : A -> Prop) (g : type686 A) (u : A -> Prop) (f : A -> B) (q' : Prop) : term1950 A B s g u f q'.
Proof. exact (@lem3506473 A B s u f g (term1949 A B g u f) q'). Qed.
Lemma lem3506811 {A B : Type'} (u : A -> Prop) (f : A -> B) (q' : Prop) (s : A -> Prop) (g : type686 A) (h1 : term115 A s g) : term1951 A B s g u f q'.
Proof. exact (@lem3506810 A B s g u f q' (@lem3506737 A B u f s g h1)). Qed.
Lemma lem3506856 {A B : Type'} (f : A -> B) (g : type686 A) : ((term49 A B f g) = (term50 A B f g)) = ((term49 A B f g) = (term50 A B f g)).
Proof. exact (eq_refl ((term49 A B f g) = (term50 A B f g))). Qed.
Lemma lem3506857 {A B : Type'} (u : A -> Prop) (f : A -> B) (g : type686 A) : term1952 A B u f g.
Proof. exact (fun h0 : term1949 A B g u f => @lem3506856 A B f g). Qed.
Lemma lem3506858 {A B : Type'} (u : A -> Prop) (f : A -> B) (s : A -> Prop) (g : type686 A) (h1 : term115 A s g) : term1953 A B s u f g.
Proof. exact (@lem3506811 A B u f ((term49 A B f g) = (term50 A B f g)) s g h1). Qed.
Lemma lem3506859 {A B : Type'} (u : A -> Prop) (f : A -> B) (s : A -> Prop) (g : type686 A) (h1 : term115 A s g) : (term1954 A B s u f g) = (term1955 A B u f g).
Proof. exact (@lem3506858 A B u f s g h1 (@lem3506857 A B u f g)). Qed.
Lemma lem3507070 {A B : Type'} (u : A -> Prop) (f : A -> B) (s : A -> Prop) (g : type686 A) (h1 : term115 A s g) : (term1955 A B u f g) = (term1954 A B s u f g).
Proof. exact (SYM (@lem3506859 A B u f s g h1)). Qed.
Lemma lem3507072 (p : Prop) : p = (term275 p).
Proof. exact (EQ_MP (@lem10578 p) (@lem10597 p)). Qed.
Lemma lem3507073 {A B : Type'} (u : A -> Prop) (f : A -> B) (g : type686 A) : (term1955 A B u f g) = (term1956 A B u f g).
Proof. exact (@lem3507072 (term1955 A B u f g)). Qed.
Lemma lem3507074 {A B : Type'} (u : A -> Prop) (f : A -> B) (g : type686 A) : (term1956 A B u f g) = (term1955 A B u f g).
Proof. exact (SYM (@lem3507073 A B u f g)). Qed.
Lemma lem3507075 {A B : Type'} (u : A -> Prop) (f : A -> B) (g : type686 A) (h1 : term1957 A B u f g) : term1957 A B u f g.
Proof. exact (h1). Qed.
Lemma lem3507076 {_90724 A : Type'} : term1958 _90724 A.
Proof. exact (@lem3505630 A _90724). Qed.
Lemma lem3507083 {_90724 A : Type'} : term1959 _90724 A.
Proof. exact (@lem3505630 (A -> Prop) _90724). Qed.
Lemma lem3507085 {_90724 B : Type'} : term1958 _90724 B.
Proof. exact (@lem3505630 B _90724). Qed.
Lemma lem3507086 {_90715 A : Type'} : term1960 _90715 A.
Proof. exact (@lem3505630 _90715 (A -> Prop)). Qed.
Lemma lem3507087 {_90715 A : Type'} : term1878 _90715 A.
Proof. exact (@lem3505630 _90715 A). Qed.
Lemma lem3507088 {_90715 B : Type'} : term1878 _90715 B.
Proof. exact (@lem3505630 _90715 B). Qed.
Lemma lem3507089 {A B : Type'} : term1878 A B.
Proof. exact (@lem3505630 A B). Qed.
Lemma lem3507090 {A B : Type'} : term1961 A B.
Proof. exact (@lem3505630 (A -> Prop) (B -> Prop)). Qed.
Lemma lem3507100 {_90715 _90724 A B : Type'} (u : A -> Prop) (f : A -> B) (g : type686 A) (h1 : term1962 _90715 _90724 A B u f g) : term1962 _90715 _90724 A B u f g.
Proof. exact (h1). Qed.
Lemma lem3507101 {_90715 _90724 A B : Type'} (u : A -> Prop) (f : A -> B) (g : type686 A) : term1963 _90715 _90724 A B u f g.
Proof. exact (fun h0 : term1962 _90715 _90724 A B u f g => @lem3507100 _90715 _90724 A B u f g h0). Qed.
Lemma lem3507102 {_90715 _90724 A B : Type'} (u : A -> Prop) (f : A -> B) (g : type686 A) (h1 : term1963 _90715 _90724 A B u f g) : term1963 _90715 _90724 A B u f g.
Proof. exact (h1). Qed.
Lemma lem3507103 {_90715 _90724 A B : Type'} (u : A -> Prop) (f : A -> B) (g : type686 A) (h1 : term1962 _90715 _90724 A B u f g) : term1962 _90715 _90724 A B u f g.
Proof. exact (h1). Qed.
Lemma lem3507104 {_90715 _90724 A B : Type'} (u : A -> Prop) (f : A -> B) (g : type686 A) (h1 : term1962 _90715 _90724 A B u f g) (h2 : term1963 _90715 _90724 A B u f g) : term1962 _90715 _90724 A B u f g.
Proof. exact (@lem3507102 _90715 _90724 A B u f g h2 (@lem3507103 _90715 _90724 A B u f g h1)). Qed.
Lemma lem3507105 {_90715 _90724 A B : Type'} (u : A -> Prop) (f : A -> B) (g : type686 A) (h1 : term1962 _90715 _90724 A B u f g) : term1964 _90715 _90724 A B u f g.
Proof. exact (fun h0 : term1963 _90715 _90724 A B u f g => @lem3507104 _90715 _90724 A B u f g h1 h0). Qed.
Lemma lem3507106 {_90715 _90724 A B : Type'} (u : A -> Prop) (f : A -> B) (g : type686 A) (h1 : term1963 _90715 _90724 A B u f g) : term1963 _90715 _90724 A B u f g.
Proof. exact (h1). Qed.
Lemma lem3507107 {_90715 _90724 A B : Type'} (u : A -> Prop) (f : A -> B) (g : type686 A) (h1 : term1962 _90715 _90724 A B u f g) (h2 : term1963 _90715 _90724 A B u f g) : term1962 _90715 _90724 A B u f g.
Proof. exact (@lem3507105 _90715 _90724 A B u f g h1 (@lem3507106 _90715 _90724 A B u f g h2)). Qed.
Lemma lem3507108 {_90715 _90724 A B : Type'} (u : A -> Prop) (f : A -> B) (g : type686 A) (h1 : term1963 _90715 _90724 A B u f g) : term1963 _90715 _90724 A B u f g.
Proof. exact (fun h0 : term1962 _90715 _90724 A B u f g => @lem3507107 _90715 _90724 A B u f g h0 h1). Qed.
Lemma lem3507109 {_90715 _90724 A B : Type'} (u : A -> Prop) (f : A -> B) (g : type686 A) : term1965 _90715 _90724 A B u f g.
Proof. exact (fun h0 : term1963 _90715 _90724 A B u f g => @lem3507108 _90715 _90724 A B u f g h0). Qed.
Lemma lem3507112 {_90715 _90724 A B : Type'} (u : A -> Prop) (f : A -> B) (g : type686 A) : term1963 _90715 _90724 A B u f g.
Proof. exact (@lem3507109 _90715 _90724 A B u f g (@lem3507101 _90715 _90724 A B u f g)). Qed.
Lemma lem3507113 {_90715 _90724 A B : Type'} (u : A -> Prop) (f : A -> B) (g : type686 A) : term1963 _90715 _90724 A B u f g.
Proof. exact (@lem3507112 _90715 _90724 A B u f g). Qed.
Lemma lem3507409 (t : Prop) : (t -> False) = (~ t).
Proof. exact (proj2 (@lem16474 t)). Qed.
Lemma lem3507410 {A B : Type'} : (term1966 A B) = (term1967 A B).
Proof. exact (@lem3507409 (term1961 A B)). Qed.
Lemma lem3507441 {_90724 A : Type'} : (term1968 _90724 A) = (term1968 _90724 A).
Proof. exact (eq_refl (term1968 _90724 A)). Qed.
Lemma lem3507442 {_90724 A B : Type'} : (term1969 _90724 A B) = (term1970 _90724 A B).
Proof. exact (MK_COMB (@lem3507441 _90724 A) (@lem3507410 A B)). Qed.
Lemma lem3507445 {_90724 B : Type'} : (term1971 _90724 B) = (term1971 _90724 B).
Proof. exact (eq_refl (term1971 _90724 B)). Qed.
Lemma lem3507446 {_90724 A B : Type'} : (term1972 _90724 A B) = (term1973 _90724 A B).
Proof. exact (MK_COMB (@lem3507445 _90724 B) (@lem3507442 _90724 A B)). Qed.
Lemma lem3507449 {A B : Type'} : (term1974 A B) = (term1974 A B).
Proof. exact (eq_refl (term1974 A B)). Qed.
Lemma lem3507450 {_90724 A B : Type'} : (term1975 _90724 A B) = (term1976 _90724 A B).
Proof. exact (MK_COMB (@lem3507449 A B) (@lem3507446 _90724 A B)). Qed.
Lemma lem3507453 {_90724 A : Type'} : (term1971 _90724 A) = (term1971 _90724 A).
Proof. exact (eq_refl (term1971 _90724 A)). Qed.
Lemma lem3507454 {_90724 A B : Type'} : (term1977 _90724 A B) = (term1978 _90724 A B).
Proof. exact (MK_COMB (@lem3507453 _90724 A) (@lem3507450 _90724 A B)). Qed.
Lemma lem3507457 {_90715 A : Type'} : (term1979 _90715 A) = (term1979 _90715 A).
Proof. exact (eq_refl (term1979 _90715 A)). Qed.
Lemma lem3507458 {_90715 _90724 A B : Type'} : (term1980 _90715 _90724 A B) = (term1981 _90715 _90724 A B).
Proof. exact (MK_COMB (@lem3507457 _90715 A) (@lem3507454 _90724 A B)). Qed.
Lemma lem3507461 {_90715 B : Type'} : (term1974 _90715 B) = (term1974 _90715 B).
Proof. exact (eq_refl (term1974 _90715 B)). Qed.
Lemma lem3507462 {_90715 _90724 A B : Type'} : (term1982 _90715 _90724 A B) = (term1983 _90715 _90724 A B).
Proof. exact (MK_COMB (@lem3507461 _90715 B) (@lem3507458 _90715 _90724 A B)). Qed.
Lemma lem3507465 {_90715 A : Type'} : (term1974 _90715 A) = (term1974 _90715 A).
Proof. exact (eq_refl (term1974 _90715 A)). Qed.
Lemma lem3507466 {_90715 _90724 A B : Type'} : (term1984 _90715 _90724 A B) = (term1985 _90715 _90724 A B).
Proof. exact (MK_COMB (@lem3507465 _90715 A) (@lem3507462 _90715 _90724 A B)). Qed.
Lemma lem3507469 {_90715 _90724 : Type'} : (term1974 _90715 _90724) = (term1974 _90715 _90724).
Proof. exact (eq_refl (term1974 _90715 _90724)). Qed.
Lemma lem3507470 {_90715 _90724 A B : Type'} : (term1986 _90715 _90724 A B) = (term1987 _90715 _90724 A B).
Proof. exact (MK_COMB (@lem3507469 _90715 _90724) (@lem3507466 _90715 _90724 A B)). Qed.
Lemma lem3507473 {A B : Type'} (u : A -> Prop) (f : A -> B) (g : type686 A) : (term1988 A B u f g) = (term1988 A B u f g).
Proof. exact (eq_refl (term1988 A B u f g)). Qed.
Lemma lem3507474 {_90715 _90724 A B : Type'} (u : A -> Prop) (f : A -> B) (g : type686 A) : (term1962 _90715 _90724 A B u f g) = (term1989 _90715 _90724 A B u f g).
Proof. exact (MK_COMB (@lem3507473 A B u f g) (@lem3507470 _90715 _90724 A B)). Qed.
Lemma lem3507477 {_90715 _90724 A B : Type'} (f : A -> B) (g : type686 A) : (term1990 _90715 _90724 A B f g) = (term1991 _90715 _90724 A B f g).
Proof. exact (fun_ext (fun u : A -> Prop => @lem3507474 _90715 _90724 A B u f g)). Qed.
Lemma lem3507478 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem3507479 {_90715 _90724 A B : Type'} (f : A -> B) (g : type686 A) : (term1992 _90715 _90724 A B f g) = (term1993 _90715 _90724 A B f g).
Proof. exact (MK_COMB (@lem3507478 A) (@lem3507477 _90715 _90724 A B f g)). Qed.
Lemma lem3507484 {_90715 _90724 A B : Type'} (g : type686 A) : (term1994 _90715 _90724 A B g) = (term1995 _90715 _90724 A B g).
Proof. exact (fun_ext (fun f : A -> B => @lem3507479 _90715 _90724 A B f g)). Qed.
Lemma lem3507485 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem3507486 {_90715 _90724 A B : Type'} (g : type686 A) : (term1996 _90715 _90724 A B g) = (term1997 _90715 _90724 A B g).
Proof. exact (MK_COMB (@lem3507485 A B) (@lem3507484 _90715 _90724 A B g)). Qed.
Lemma lem3507491 {_90715 _90724 A B : Type'} : (term1998 _90715 _90724 A B) = (term1999 _90715 _90724 A B).
Proof. exact (fun_ext (fun g : type686 A => @lem3507486 _90715 _90724 A B g)). Qed.
Lemma lem3507492 {A : Type'} : (@all ((A -> Prop) -> Prop)) = (@all ((A -> Prop) -> Prop)).
Proof. exact (eq_refl (@all ((A -> Prop) -> Prop))). Qed.
Lemma lem3507499 {_90715 _90724 A B : Type'} : (term2000 _90715 _90724 A B) = (term2001 _90715 _90724 A B).
Proof. exact (MK_COMB (@lem3507492 A) (@lem3507491 _90715 _90724 A B)). Qed.
Lemma lem3507500 {A B : Type'} (_37163 : type627 A B) (h1 : _37163 = (term2002 A B)) : _37163 = (term2002 A B).
Proof. exact (h1). Qed.
Lemma lem3507501 {A : Type'} (u : A -> Prop) : u = u.
Proof. exact (eq_refl u). Qed.
Lemma lem3507502 {A B : Type'} (u : A -> Prop) (_37163 : type627 A B) (h1 : _37163 = (term2002 A B)) : (_37163 u) = (term2003 A B u).
Proof. exact (MK_COMB (@lem3507500 A B _37163 h1) (@lem3507501 A u)). Qed.
Lemma lem3507503 {A B : Type'} (u : A -> Prop) : (term2003 A B u) = (term2004 A B u).
Proof. exact (eq_refl (term2003 A B u)). Qed.
Lemma lem3507504 {A B : Type'} (_37163 : type627 A B) (u : A -> Prop) : (term2005 A B _37163 u) = (term2005 A B _37163 u).
Proof. exact (eq_refl (term2005 A B _37163 u)). Qed.
Lemma lem3507505 {A B : Type'} (_37163 : type627 A B) (u : A -> Prop) : ((_37163 u) = (term2003 A B u)) = ((_37163 u) = (term2004 A B u)).
Proof. exact (MK_COMB (@lem3507504 A B _37163 u) (@lem3507503 A B u)). Qed.
Lemma lem3507506 {A B : Type'} (u : A -> Prop) (_37163 : type627 A B) (h1 : _37163 = (term2002 A B)) : (_37163 u) = (term2004 A B u).
Proof. exact (EQ_MP (@lem3507505 A B _37163 u) (@lem3507502 A B u _37163 h1)). Qed.
Lemma lem3507507 {A B : Type'} (f : A -> B) : f = f.
Proof. exact (eq_refl f). Qed.
Lemma lem3507508 {A B : Type'} (u : A -> Prop) (f : A -> B) (_37163 : type627 A B) (h1 : _37163 = (term2002 A B)) : (_37163 u f) = (term2006 A B u f).
Proof. exact (MK_COMB (@lem3507506 A B u _37163 h1) (@lem3507507 A B f)). Qed.
Lemma lem3507509 {A B : Type'} (u : A -> Prop) (f : A -> B) : (term2006 A B u f) = (term2007 A B u f).
Proof. exact (eq_refl (term2006 A B u f)). Qed.
Lemma lem3507510 {A B : Type'} (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) : (term2008 A B _37163 u f) = (term2008 A B _37163 u f).
Proof. exact (eq_refl (term2008 A B _37163 u f)). Qed.
Lemma lem3507511 {A B : Type'} (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) : ((_37163 u f) = (term2006 A B u f)) = ((_37163 u f) = (term2007 A B u f)).
Proof. exact (MK_COMB (@lem3507510 A B _37163 u f) (@lem3507509 A B u f)). Qed.
Lemma lem3507512 {A B : Type'} (u : A -> Prop) (f : A -> B) (_37163 : type627 A B) (h1 : _37163 = (term2002 A B)) : (_37163 u f) = (term2007 A B u f).
Proof. exact (EQ_MP (@lem3507511 A B _37163 u f) (@lem3507508 A B u f _37163 h1)). Qed.
Lemma lem3507513 {A : Type'} (t : A -> Prop) : t = t.
Proof. exact (eq_refl t). Qed.
Lemma lem3507514 {A B : Type'} (u : A -> Prop) (f : A -> B) (t : A -> Prop) (_37163 : type627 A B) (h1 : _37163 = (term2002 A B)) : (_37163 u f t) = (term2009 A B u f t).
Proof. exact (MK_COMB (@lem3507512 A B u f _37163 h1) (@lem3507513 A t)). Qed.
Lemma lem3507515 {A B : Type'} (u : A -> Prop) (f : A -> B) (t : A -> Prop) : (term2009 A B u f t) = (term67 A B u f t).
Proof. exact (eq_refl (term2009 A B u f t)). Qed.
Lemma lem3507516 {A B : Type'} (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) (t : A -> Prop) : (term2010 A B _37163 u f t) = (term2010 A B _37163 u f t).
Proof. exact (eq_refl (term2010 A B _37163 u f t)). Qed.
Lemma lem3507517 {A B : Type'} (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) (t : A -> Prop) : ((_37163 u f t) = (term2009 A B u f t)) = ((_37163 u f t) = (term67 A B u f t)).
Proof. exact (MK_COMB (@lem3507516 A B _37163 u f t) (@lem3507515 A B u f t)). Qed.
Lemma lem3507518 {A B : Type'} (u : A -> Prop) (f : A -> B) (t : A -> Prop) (_37163 : type627 A B) (h1 : _37163 = (term2002 A B)) : (_37163 u f t) = (term67 A B u f t).
Proof. exact (EQ_MP (@lem3507517 A B _37163 u f t) (@lem3507514 A B u f t _37163 h1)). Qed.
Lemma lem3507538 {A B : Type'} (f : type678 A B) (g : type180 A) : ((term2011 A B f g) = (term2012 A B f g)) = ((term2011 A B f g) = (term2012 A B f g)).
Proof. exact (eq_refl ((term2011 A B f g) = (term2012 A B f g))). Qed.
Lemma lem3507539 {A : Type'} (t : type686 A) : t = t.
Proof. exact (eq_refl t). Qed.
Lemma lem3507567 {A B : Type'} (GEN_PVAR_84 : A -> Prop) (u : type686 A) (f : type678 A B) (t : type686 A) (x : A -> Prop) : (term2013 A B GEN_PVAR_84 u f t x) = (term2013 A B GEN_PVAR_84 u f t x).
Proof. exact (eq_refl (term2013 A B GEN_PVAR_84 u f t x)). Qed.
Lemma lem3507568 {A B : Type'} (GEN_PVAR_84 : A -> Prop) (u : type686 A) (f : type678 A B) (t : type686 A) : (term2014 A B GEN_PVAR_84 u f t) = (term2014 A B GEN_PVAR_84 u f t).
Proof. exact (fun_ext (fun x : A -> Prop => @lem3507567 A B GEN_PVAR_84 u f t x)). Qed.
Lemma lem3507569 {A : Type'} : (@ex (A -> Prop)) = (@ex (A -> Prop)).
Proof. exact (eq_refl (@ex (A -> Prop))). Qed.
Lemma lem3507570 {A B : Type'} (GEN_PVAR_84 : A -> Prop) (u : type686 A) (f : type678 A B) (t : type686 A) : (term2015 A B GEN_PVAR_84 u f t) = (term2015 A B GEN_PVAR_84 u f t).
Proof. exact (MK_COMB (@lem3507569 A) (@lem3507568 A B GEN_PVAR_84 u f t)). Qed.
Lemma lem3507571 {A B : Type'} (u : type686 A) (f : type678 A B) (t : type686 A) : (term2016 A B u f t) = (term2016 A B u f t).
Proof. exact (fun_ext (fun GEN_PVAR_84 : A -> Prop => @lem3507570 A B GEN_PVAR_84 u f t)). Qed.
Lemma lem3507572 {A : Type'} : (@GSPEC (A -> Prop)) = (@GSPEC (A -> Prop)).
Proof. exact (eq_refl (@GSPEC (A -> Prop))). Qed.
Lemma lem3507573 {A B : Type'} (u : type686 A) (f : type678 A B) (t : type686 A) : (term2017 A B u f t) = (term2017 A B u f t).
Proof. exact (MK_COMB (@lem3507572 A) (@lem3507571 A B u f t)). Qed.
Lemma lem3507574 {A : Type'} : (@SUBSET (A -> Prop)) = (@SUBSET (A -> Prop)).
Proof. exact (eq_refl (@SUBSET (A -> Prop))). Qed.
Lemma lem3507575 {A B : Type'} (u : type686 A) (f : type678 A B) (t : type686 A) : (term2018 A B u f t) = (term2018 A B u f t).
Proof. exact (MK_COMB (@lem3507574 A) (@lem3507573 A B u f t)). Qed.
Lemma lem3507576 {A B : Type'} (u : type686 A) (f : type678 A B) (t : type686 A) : (term2019 A B u f t) = (term2019 A B u f t).
Proof. exact (MK_COMB (@lem3507575 A B u f t) (@lem3507539 A t)). Qed.
Lemma lem3507583 {A : Type'} (t : type686 A) (u : type686 A) : (term2020 A t u) = (term2020 A t u).
Proof. exact (eq_refl (term2020 A t u)). Qed.
Lemma lem3507584 {A B : Type'} (u : type686 A) (f : type678 A B) (t : type686 A) : (term2021 A B u f t) = (term2021 A B u f t).
Proof. exact (MK_COMB (@lem3507583 A t u) (@lem3507576 A B u f t)). Qed.
Lemma lem3507591 {A : Type'} (t : type686 A) (g : type180 A) : (term2022 A t g) = (term2022 A t g).
Proof. exact (eq_refl (term2022 A t g)). Qed.
Lemma lem3507592 {A B : Type'} (g : type180 A) (u : type686 A) (f : type678 A B) (t : type686 A) : (term2023 A B g u f t) = (term2023 A B g u f t).
Proof. exact (MK_COMB (@lem3507591 A t g) (@lem3507584 A B u f t)). Qed.
Lemma lem3507593 {A B : Type'} (g : type180 A) (u : type686 A) (f : type678 A B) : (term2024 A B g u f) = (term2024 A B g u f).
Proof. exact (fun_ext (fun t : type686 A => @lem3507592 A B g u f t)). Qed.
Lemma lem3507594 {A : Type'} : (@all ((A -> Prop) -> Prop)) = (@all ((A -> Prop) -> Prop)).
Proof. exact (eq_refl (@all ((A -> Prop) -> Prop))). Qed.
Lemma lem3507595 {A B : Type'} (g : type180 A) (u : type686 A) (f : type678 A B) : (term2025 A B g u f) = (term2025 A B g u f).
Proof. exact (MK_COMB (@lem3507594 A) (@lem3507593 A B g u f)). Qed.
Lemma lem3507604 {A : Type'} (g : type180 A) : (term2026 A g) = (term2026 A g).
Proof. exact (eq_refl (term2026 A g)). Qed.
Lemma lem3507605 {A B : Type'} (g : type180 A) (u : type686 A) (f : type678 A B) : (term2027 A B g u f) = (term2027 A B g u f).
Proof. exact (MK_COMB (@lem3507604 A g) (@lem3507595 A B g u f)). Qed.
Lemma lem3507606 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem3507607 {A B : Type'} (g : type180 A) (u : type686 A) (f : type678 A B) : (term2028 A B g u f) = (term2028 A B g u f).
Proof. exact (MK_COMB (@lem3507606) (@lem3507605 A B g u f)). Qed.
Lemma lem3507608 {A B : Type'} (u : type686 A) (f : type678 A B) (g : type180 A) : (term2029 A B u f g) = (term2029 A B u f g).
Proof. exact (MK_COMB (@lem3507607 A B g u f) (@lem3507538 A B f g)). Qed.
Lemma lem3507609 {A B : Type'} (u : type686 A) (f : type678 A B) : (term2030 A B u f) = (term2030 A B u f).
Proof. exact (fun_ext (fun g : type180 A => @lem3507608 A B u f g)). Qed.
Lemma lem3507610 {A : Type'} : (@all (((A -> Prop) -> Prop) -> Prop)) = (@all (((A -> Prop) -> Prop) -> Prop)).
Proof. exact (eq_refl (@all (((A -> Prop) -> Prop) -> Prop))). Qed.
Lemma lem3507611 {A B : Type'} (u : type686 A) (f : type678 A B) : (term2031 A B u f) = (term2031 A B u f).
Proof. exact (MK_COMB (@lem3507610 A) (@lem3507609 A B u f)). Qed.
Lemma lem3507612 {A B : Type'} (u : type686 A) : (term2032 A B u) = (term2032 A B u).
Proof. exact (fun_ext (fun f : type678 A B => @lem3507611 A B u f)). Qed.
Lemma lem3507613 {A B : Type'} : (@all ((A -> Prop) -> B -> Prop)) = (@all ((A -> Prop) -> B -> Prop)).
Proof. exact (eq_refl (@all ((A -> Prop) -> B -> Prop))). Qed.
Lemma lem3507614 {A B : Type'} (u : type686 A) : (term2033 A B u) = (term2033 A B u).
Proof. exact (MK_COMB (@lem3507613 A B) (@lem3507612 A B u)). Qed.
Lemma lem3507615 {A B : Type'} : (term2034 A B) = (term2034 A B).
Proof. exact (fun_ext (fun u : type686 A => @lem3507614 A B u)). Qed.
Lemma lem3507616 {A : Type'} : (@all ((A -> Prop) -> Prop)) = (@all ((A -> Prop) -> Prop)).
Proof. exact (eq_refl (@all ((A -> Prop) -> Prop))). Qed.
Lemma lem3507617 {A B : Type'} : (term1961 A B) = (term1961 A B).
Proof. exact (MK_COMB (@lem3507616 A) (@lem3507615 A B)). Qed.
Lemma lem3507618 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem3507619 {A B : Type'} : (term1967 A B) = (term1967 A B).
Proof. exact (MK_COMB (@lem3507618) (@lem3507617 A B)). Qed.
Lemma lem3507638 {_90724 A : Type'} (f : type862 _90724 A) (g : type180 A) : ((term2035 _90724 A f g) = (term2036 _90724 A f g)) = ((term2035 _90724 A f g) = (term2036 _90724 A f g)).
Proof. exact (eq_refl ((term2035 _90724 A f g) = (term2036 _90724 A f g))). Qed.
Lemma lem3507639 {A : Type'} (t : type686 A) : t = t.
Proof. exact (eq_refl t). Qed.
Lemma lem3507667 {_90724 A : Type'} (GEN_PVAR_84 : A -> Prop) (u : type686 A) (f : type862 _90724 A) (t : type686 A) (x : A -> Prop) : (term2037 _90724 A GEN_PVAR_84 u f t x) = (term2037 _90724 A GEN_PVAR_84 u f t x).
Proof. exact (eq_refl (term2037 _90724 A GEN_PVAR_84 u f t x)). Qed.
Lemma lem3507668 {_90724 A : Type'} (GEN_PVAR_84 : A -> Prop) (u : type686 A) (f : type862 _90724 A) (t : type686 A) : (term2038 _90724 A GEN_PVAR_84 u f t) = (term2038 _90724 A GEN_PVAR_84 u f t).
Proof. exact (fun_ext (fun x : A -> Prop => @lem3507667 _90724 A GEN_PVAR_84 u f t x)). Qed.
Lemma lem3507669 {A : Type'} : (@ex (A -> Prop)) = (@ex (A -> Prop)).
Proof. exact (eq_refl (@ex (A -> Prop))). Qed.
Lemma lem3507670 {_90724 A : Type'} (GEN_PVAR_84 : A -> Prop) (u : type686 A) (f : type862 _90724 A) (t : type686 A) : (term2039 _90724 A GEN_PVAR_84 u f t) = (term2039 _90724 A GEN_PVAR_84 u f t).
Proof. exact (MK_COMB (@lem3507669 A) (@lem3507668 _90724 A GEN_PVAR_84 u f t)). Qed.
Lemma lem3507671 {_90724 A : Type'} (u : type686 A) (f : type862 _90724 A) (t : type686 A) : (term2040 _90724 A u f t) = (term2040 _90724 A u f t).
Proof. exact (fun_ext (fun GEN_PVAR_84 : A -> Prop => @lem3507670 _90724 A GEN_PVAR_84 u f t)). Qed.
Lemma lem3507672 {A : Type'} : (@GSPEC (A -> Prop)) = (@GSPEC (A -> Prop)).
Proof. exact (eq_refl (@GSPEC (A -> Prop))). Qed.
Lemma lem3507673 {_90724 A : Type'} (u : type686 A) (f : type862 _90724 A) (t : type686 A) : (term2041 _90724 A u f t) = (term2041 _90724 A u f t).
Proof. exact (MK_COMB (@lem3507672 A) (@lem3507671 _90724 A u f t)). Qed.
Lemma lem3507674 {A : Type'} : (@SUBSET (A -> Prop)) = (@SUBSET (A -> Prop)).
Proof. exact (eq_refl (@SUBSET (A -> Prop))). Qed.
Lemma lem3507675 {_90724 A : Type'} (u : type686 A) (f : type862 _90724 A) (t : type686 A) : (term2042 _90724 A u f t) = (term2042 _90724 A u f t).
Proof. exact (MK_COMB (@lem3507674 A) (@lem3507673 _90724 A u f t)). Qed.
Lemma lem3507676 {_90724 A : Type'} (u : type686 A) (f : type862 _90724 A) (t : type686 A) : (term2043 _90724 A u f t) = (term2043 _90724 A u f t).
Proof. exact (MK_COMB (@lem3507675 _90724 A u f t) (@lem3507639 A t)). Qed.
Lemma lem3507683 {A : Type'} (t : type686 A) (u : type686 A) : (term2020 A t u) = (term2020 A t u).
Proof. exact (eq_refl (term2020 A t u)). Qed.
Lemma lem3507684 {_90724 A : Type'} (u : type686 A) (f : type862 _90724 A) (t : type686 A) : (term2044 _90724 A u f t) = (term2044 _90724 A u f t).
Proof. exact (MK_COMB (@lem3507683 A t u) (@lem3507676 _90724 A u f t)). Qed.
Lemma lem3507691 {A : Type'} (t : type686 A) (g : type180 A) : (term2022 A t g) = (term2022 A t g).
Proof. exact (eq_refl (term2022 A t g)). Qed.
Lemma lem3507692 {_90724 A : Type'} (g : type180 A) (u : type686 A) (f : type862 _90724 A) (t : type686 A) : (term2045 _90724 A g u f t) = (term2045 _90724 A g u f t).
Proof. exact (MK_COMB (@lem3507691 A t g) (@lem3507684 _90724 A u f t)). Qed.
Lemma lem3507693 {_90724 A : Type'} (g : type180 A) (u : type686 A) (f : type862 _90724 A) : (term2046 _90724 A g u f) = (term2046 _90724 A g u f).
Proof. exact (fun_ext (fun t : type686 A => @lem3507692 _90724 A g u f t)). Qed.
Lemma lem3507694 {A : Type'} : (@all ((A -> Prop) -> Prop)) = (@all ((A -> Prop) -> Prop)).
Proof. exact (eq_refl (@all ((A -> Prop) -> Prop))). Qed.
Lemma lem3507695 {_90724 A : Type'} (g : type180 A) (u : type686 A) (f : type862 _90724 A) : (term2047 _90724 A g u f) = (term2047 _90724 A g u f).
Proof. exact (MK_COMB (@lem3507694 A) (@lem3507693 _90724 A g u f)). Qed.
Lemma lem3507704 {A : Type'} (g : type180 A) : (term2026 A g) = (term2026 A g).
Proof. exact (eq_refl (term2026 A g)). Qed.
Lemma lem3507705 {_90724 A : Type'} (g : type180 A) (u : type686 A) (f : type862 _90724 A) : (term2048 _90724 A g u f) = (term2048 _90724 A g u f).
Proof. exact (MK_COMB (@lem3507704 A g) (@lem3507695 _90724 A g u f)). Qed.
Lemma lem3507706 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem3507707 {_90724 A : Type'} (g : type180 A) (u : type686 A) (f : type862 _90724 A) : (term2049 _90724 A g u f) = (term2049 _90724 A g u f).
Proof. exact (MK_COMB (@lem3507706) (@lem3507705 _90724 A g u f)). Qed.
Lemma lem3507708 {_90724 A : Type'} (u : type686 A) (f : type862 _90724 A) (g : type180 A) : (term2050 _90724 A u f g) = (term2050 _90724 A u f g).
Proof. exact (MK_COMB (@lem3507707 _90724 A g u f) (@lem3507638 _90724 A f g)). Qed.
Lemma lem3507709 {_90724 A : Type'} (u : type686 A) (f : type862 _90724 A) : (term2051 _90724 A u f) = (term2051 _90724 A u f).
Proof. exact (fun_ext (fun g : type180 A => @lem3507708 _90724 A u f g)). Qed.
Lemma lem3507710 {A : Type'} : (@all (((A -> Prop) -> Prop) -> Prop)) = (@all (((A -> Prop) -> Prop) -> Prop)).
Proof. exact (eq_refl (@all (((A -> Prop) -> Prop) -> Prop))). Qed.
Lemma lem3507711 {_90724 A : Type'} (u : type686 A) (f : type862 _90724 A) : (term2052 _90724 A u f) = (term2052 _90724 A u f).
Proof. exact (MK_COMB (@lem3507710 A) (@lem3507709 _90724 A u f)). Qed.
Lemma lem3507712 {_90724 A : Type'} (u : type686 A) : (term2053 _90724 A u) = (term2053 _90724 A u).
Proof. exact (fun_ext (fun f : type862 _90724 A => @lem3507711 _90724 A u f)). Qed.
Lemma lem3507713 {_90724 A : Type'} : (@all ((A -> Prop) -> _90724)) = (@all ((A -> Prop) -> _90724)).
Proof. exact (eq_refl (@all ((A -> Prop) -> _90724))). Qed.
Lemma lem3507714 {_90724 A : Type'} (u : type686 A) : (term2054 _90724 A u) = (term2054 _90724 A u).
Proof. exact (MK_COMB (@lem3507713 _90724 A) (@lem3507712 _90724 A u)). Qed.
Lemma lem3507715 {_90724 A : Type'} : (term2055 _90724 A) = (term2055 _90724 A).
Proof. exact (fun_ext (fun u : type686 A => @lem3507714 _90724 A u)). Qed.
Lemma lem3507716 {A : Type'} : (@all ((A -> Prop) -> Prop)) = (@all ((A -> Prop) -> Prop)).
Proof. exact (eq_refl (@all ((A -> Prop) -> Prop))). Qed.
Lemma lem3507717 {_90724 A : Type'} : (term1959 _90724 A) = (term1959 _90724 A).
Proof. exact (MK_COMB (@lem3507716 A) (@lem3507715 _90724 A)). Qed.
Lemma lem3507718 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem3507719 {_90724 A : Type'} : (term1968 _90724 A) = (term1968 _90724 A).
Proof. exact (MK_COMB (@lem3507718) (@lem3507717 _90724 A)). Qed.
Lemma lem3507720 {_90724 A B : Type'} : (term1970 _90724 A B) = (term1970 _90724 A B).
Proof. exact (MK_COMB (@lem3507719 _90724 A) (@lem3507619 A B)). Qed.
Lemma lem3507739 {_90724 B : Type'} (f : B -> _90724) (g : type686 B) : ((term2056 _90724 B f g) = (term2057 _90724 B f g)) = ((term2056 _90724 B f g) = (term2057 _90724 B f g)).
Proof. exact (eq_refl ((term2056 _90724 B f g) = (term2057 _90724 B f g))). Qed.
Lemma lem3507740 {B : Type'} (t : B -> Prop) : t = t.
Proof. exact (eq_refl t). Qed.
Lemma lem3507768 {_90724 B : Type'} (GEN_PVAR_84 : B) (u : B -> Prop) (f : B -> _90724) (t : B -> Prop) (x : B) : (term2058 _90724 B GEN_PVAR_84 u f t x) = (term2058 _90724 B GEN_PVAR_84 u f t x).
Proof. exact (eq_refl (term2058 _90724 B GEN_PVAR_84 u f t x)). Qed.
Lemma lem3507769 {_90724 B : Type'} (GEN_PVAR_84 : B) (u : B -> Prop) (f : B -> _90724) (t : B -> Prop) : (term2059 _90724 B GEN_PVAR_84 u f t) = (term2059 _90724 B GEN_PVAR_84 u f t).
Proof. exact (fun_ext (fun x : B => @lem3507768 _90724 B GEN_PVAR_84 u f t x)). Qed.
Lemma lem3507770 {B : Type'} : (@ex B) = (@ex B).
Proof. exact (eq_refl (@ex B)). Qed.
Lemma lem3507771 {_90724 B : Type'} (GEN_PVAR_84 : B) (u : B -> Prop) (f : B -> _90724) (t : B -> Prop) : (term2060 _90724 B GEN_PVAR_84 u f t) = (term2060 _90724 B GEN_PVAR_84 u f t).
Proof. exact (MK_COMB (@lem3507770 B) (@lem3507769 _90724 B GEN_PVAR_84 u f t)). Qed.
Lemma lem3507772 {_90724 B : Type'} (u : B -> Prop) (f : B -> _90724) (t : B -> Prop) : (term2061 _90724 B u f t) = (term2061 _90724 B u f t).
Proof. exact (fun_ext (fun GEN_PVAR_84 : B => @lem3507771 _90724 B GEN_PVAR_84 u f t)). Qed.
Lemma lem3507773 {B : Type'} : (@GSPEC B) = (@GSPEC B).
Proof. exact (eq_refl (@GSPEC B)). Qed.
Lemma lem3507774 {_90724 B : Type'} (u : B -> Prop) (f : B -> _90724) (t : B -> Prop) : (term2062 _90724 B u f t) = (term2062 _90724 B u f t).
Proof. exact (MK_COMB (@lem3507773 B) (@lem3507772 _90724 B u f t)). Qed.
Lemma lem3507775 {B : Type'} : (@SUBSET B) = (@SUBSET B).
Proof. exact (eq_refl (@SUBSET B)). Qed.
Lemma lem3507776 {_90724 B : Type'} (u : B -> Prop) (f : B -> _90724) (t : B -> Prop) : (term2063 _90724 B u f t) = (term2063 _90724 B u f t).
Proof. exact (MK_COMB (@lem3507775 B) (@lem3507774 _90724 B u f t)). Qed.
Lemma lem3507777 {_90724 B : Type'} (u : B -> Prop) (f : B -> _90724) (t : B -> Prop) : (term2064 _90724 B u f t) = (term2064 _90724 B u f t).
Proof. exact (MK_COMB (@lem3507776 _90724 B u f t) (@lem3507740 B t)). Qed.
Lemma lem3507784 {B : Type'} (t : B -> Prop) (u : B -> Prop) : (term75 B t u) = (term75 B t u).
Proof. exact (eq_refl (term75 B t u)). Qed.
Lemma lem3507785 {_90724 B : Type'} (u : B -> Prop) (f : B -> _90724) (t : B -> Prop) : (term2065 _90724 B u f t) = (term2065 _90724 B u f t).
Proof. exact (MK_COMB (@lem3507784 B t u) (@lem3507777 _90724 B u f t)). Qed.
Lemma lem3507792 {B : Type'} (t : B -> Prop) (g : type686 B) : (term78 B t g) = (term78 B t g).
Proof. exact (eq_refl (term78 B t g)). Qed.
Lemma lem3507793 {_90724 B : Type'} (g : type686 B) (u : B -> Prop) (f : B -> _90724) (t : B -> Prop) : (term2066 _90724 B g u f t) = (term2066 _90724 B g u f t).
Proof. exact (MK_COMB (@lem3507792 B t g) (@lem3507785 _90724 B u f t)). Qed.
Lemma lem3507794 {_90724 B : Type'} (g : type686 B) (u : B -> Prop) (f : B -> _90724) : (term2067 _90724 B g u f) = (term2067 _90724 B g u f).
Proof. exact (fun_ext (fun t : B -> Prop => @lem3507793 _90724 B g u f t)). Qed.
Lemma lem3507795 {B : Type'} : (@all (B -> Prop)) = (@all (B -> Prop)).
Proof. exact (eq_refl (@all (B -> Prop))). Qed.
Lemma lem3507796 {_90724 B : Type'} (g : type686 B) (u : B -> Prop) (f : B -> _90724) : (term2068 _90724 B g u f) = (term2068 _90724 B g u f).
Proof. exact (MK_COMB (@lem3507795 B) (@lem3507794 _90724 B g u f)). Qed.
Lemma lem3507805 {B : Type'} (g : type686 B) : (term42 B g) = (term42 B g).
Proof. exact (eq_refl (term42 B g)). Qed.
Lemma lem3507806 {_90724 B : Type'} (g : type686 B) (u : B -> Prop) (f : B -> _90724) : (term2069 _90724 B g u f) = (term2069 _90724 B g u f).
Proof. exact (MK_COMB (@lem3507805 B g) (@lem3507796 _90724 B g u f)). Qed.
Lemma lem3507807 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem3507808 {_90724 B : Type'} (g : type686 B) (u : B -> Prop) (f : B -> _90724) : (term2070 _90724 B g u f) = (term2070 _90724 B g u f).
Proof. exact (MK_COMB (@lem3507807) (@lem3507806 _90724 B g u f)). Qed.
Lemma lem3507809 {_90724 B : Type'} (u : B -> Prop) (f : B -> _90724) (g : type686 B) : (term2071 _90724 B u f g) = (term2071 _90724 B u f g).
Proof. exact (MK_COMB (@lem3507808 _90724 B g u f) (@lem3507739 _90724 B f g)). Qed.
Lemma lem3507810 {_90724 B : Type'} (u : B -> Prop) (f : B -> _90724) : (term2072 _90724 B u f) = (term2072 _90724 B u f).
Proof. exact (fun_ext (fun g : type686 B => @lem3507809 _90724 B u f g)). Qed.
Lemma lem3507811 {B : Type'} : (@all ((B -> Prop) -> Prop)) = (@all ((B -> Prop) -> Prop)).
Proof. exact (eq_refl (@all ((B -> Prop) -> Prop))). Qed.
Lemma lem3507812 {_90724 B : Type'} (u : B -> Prop) (f : B -> _90724) : (term2073 _90724 B u f) = (term2073 _90724 B u f).
Proof. exact (MK_COMB (@lem3507811 B) (@lem3507810 _90724 B u f)). Qed.
Lemma lem3507813 {_90724 B : Type'} (u : B -> Prop) : (term2074 _90724 B u) = (term2074 _90724 B u).
Proof. exact (fun_ext (fun f : B -> _90724 => @lem3507812 _90724 B u f)). Qed.
Lemma lem3507814 {_90724 B : Type'} : (@all (B -> _90724)) = (@all (B -> _90724)).
Proof. exact (eq_refl (@all (B -> _90724))). Qed.
Lemma lem3507815 {_90724 B : Type'} (u : B -> Prop) : (term2075 _90724 B u) = (term2075 _90724 B u).
Proof. exact (MK_COMB (@lem3507814 _90724 B) (@lem3507813 _90724 B u)). Qed.
Lemma lem3507816 {_90724 B : Type'} : (term2076 _90724 B) = (term2076 _90724 B).
Proof. exact (fun_ext (fun u : B -> Prop => @lem3507815 _90724 B u)). Qed.
Lemma lem3507817 {B : Type'} : (@all (B -> Prop)) = (@all (B -> Prop)).
Proof. exact (eq_refl (@all (B -> Prop))). Qed.
Lemma lem3507818 {_90724 B : Type'} : (term1958 _90724 B) = (term1958 _90724 B).
Proof. exact (MK_COMB (@lem3507817 B) (@lem3507816 _90724 B)). Qed.
Lemma lem3507819 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem3507820 {_90724 B : Type'} : (term1971 _90724 B) = (term1971 _90724 B).
Proof. exact (MK_COMB (@lem3507819) (@lem3507818 _90724 B)). Qed.
Lemma lem3507821 {_90724 A B : Type'} : (term1973 _90724 A B) = (term1973 _90724 A B).
Proof. exact (MK_COMB (@lem3507820 _90724 B) (@lem3507720 _90724 A B)). Qed.
Lemma lem3507840 {A B : Type'} (f : A -> B) (g : type686 A) : ((term49 A B f g) = (term50 A B f g)) = ((term49 A B f g) = (term50 A B f g)).
Proof. exact (eq_refl ((term49 A B f g) = (term50 A B f g))). Qed.
Lemma lem3507841 {A : Type'} (t : A -> Prop) : t = t.
Proof. exact (eq_refl t). Qed.
Lemma lem3507843 {A B : Type'} (u : A -> Prop) (f : A -> B) (t : A -> Prop) (_37163 : type627 A B) (h1 : _37163 = (term2002 A B)) : (term67 A B u f t) = (_37163 u f t).
Proof. exact (SYM (@lem3507518 A B u f t _37163 h1)). Qed.
Lemma lem3507844 {A B : Type'} (u : A -> Prop) (f : A -> B) (t : A -> Prop) (_37163 : type627 A B) (h1 : _37163 = (term2002 A B)) : (term67 A B u f t) = (_37163 u f t).
Proof. exact (@lem3507843 A B u f t _37163 h1). Qed.
Lemma lem3507845 {A : Type'} : (@GSPEC A) = (@GSPEC A).
Proof. exact (eq_refl (@GSPEC A)). Qed.
Lemma lem3507846 {A B : Type'} (u : A -> Prop) (f : A -> B) (t : A -> Prop) (_37163 : type627 A B) (h1 : _37163 = (term2002 A B)) : (term69 A B u f t) = (term2077 A B _37163 u f t).
Proof. exact (MK_COMB (@lem3507845 A) (@lem3507844 A B u f t _37163 h1)). Qed.
Lemma lem3507847 {A : Type'} : (@SUBSET A) = (@SUBSET A).
Proof. exact (eq_refl (@SUBSET A)). Qed.
Lemma lem3507848 {A B : Type'} (u : A -> Prop) (f : A -> B) (t : A -> Prop) (_37163 : type627 A B) (h1 : _37163 = (term2002 A B)) : (term71 A B u f t) = (term2078 A B _37163 u f t).
Proof. exact (MK_COMB (@lem3507847 A) (@lem3507846 A B u f t _37163 h1)). Qed.
Lemma lem3507849 {A B : Type'} (u : A -> Prop) (f : A -> B) (t : A -> Prop) (_37163 : type627 A B) (h1 : _37163 = (term2002 A B)) : (term73 A B u f t) = (term2079 A B _37163 u f t).
Proof. exact (MK_COMB (@lem3507848 A B u f t _37163 h1) (@lem3507841 A t)). Qed.
Lemma lem3507856 {A : Type'} (t : A -> Prop) (u : A -> Prop) : (term75 A t u) = (term75 A t u).
Proof. exact (eq_refl (term75 A t u)). Qed.
Lemma lem3507857 {A B : Type'} (u : A -> Prop) (f : A -> B) (t : A -> Prop) (_37163 : type627 A B) (h1 : _37163 = (term2002 A B)) : (term76 A B u f t) = (term2080 A B _37163 u f t).
Proof. exact (MK_COMB (@lem3507856 A t u) (@lem3507849 A B u f t _37163 h1)). Qed.
Lemma lem3507864 {A : Type'} (t : A -> Prop) (g : type686 A) : (term78 A t g) = (term78 A t g).
Proof. exact (eq_refl (term78 A t g)). Qed.
Lemma lem3507865 {A B : Type'} (g : type686 A) (u : A -> Prop) (f : A -> B) (t : A -> Prop) (_37163 : type627 A B) (h1 : _37163 = (term2002 A B)) : (term79 A B g u f t) = (term2081 A B g _37163 u f t).
Proof. exact (MK_COMB (@lem3507864 A t g) (@lem3507857 A B u f t _37163 h1)). Qed.
Lemma lem3507866 {A B : Type'} (g : type686 A) (u : A -> Prop) (f : A -> B) (_37163 : type627 A B) (h1 : _37163 = (term2002 A B)) : (term81 A B g u f) = (term2082 A B g _37163 u f).
Proof. exact (fun_ext (fun t : A -> Prop => @lem3507865 A B g u f t _37163 h1)). Qed.
Lemma lem3507867 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem3507868 {A B : Type'} (g : type686 A) (u : A -> Prop) (f : A -> B) (_37163 : type627 A B) (h1 : _37163 = (term2002 A B)) : (term44 A B g u f) = (term2083 A B g _37163 u f).
Proof. exact (MK_COMB (@lem3507867 A) (@lem3507866 A B g u f _37163 h1)). Qed.
Lemma lem3507877 {A : Type'} (g : type686 A) : (term42 A g) = (term42 A g).
Proof. exact (eq_refl (term42 A g)). Qed.
Lemma lem3507878 {A B : Type'} (g : type686 A) (u : A -> Prop) (f : A -> B) (_37163 : type627 A B) (h1 : _37163 = (term2002 A B)) : (term45 A B g u f) = (term2084 A B g _37163 u f).
Proof. exact (MK_COMB (@lem3507877 A g) (@lem3507868 A B g u f _37163 h1)). Qed.
Lemma lem3507879 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem3507880 {A B : Type'} (g : type686 A) (u : A -> Prop) (f : A -> B) (_37163 : type627 A B) (h1 : _37163 = (term2002 A B)) : (term47 A B g u f) = (term2085 A B g _37163 u f).
Proof. exact (MK_COMB (@lem3507879) (@lem3507878 A B g u f _37163 h1)). Qed.
Lemma lem3507881 {A B : Type'} (u : A -> Prop) (f : A -> B) (g : type686 A) (_37163 : type627 A B) (h1 : _37163 = (term2002 A B)) : (term52 A B u f g) = (term2086 A B _37163 u f g).
Proof. exact (MK_COMB (@lem3507880 A B g u f _37163 h1) (@lem3507840 A B f g)). Qed.
Lemma lem3507882 {A B : Type'} (u : A -> Prop) (f : A -> B) (_37163 : type627 A B) (h1 : _37163 = (term2002 A B)) : (term2087 A B u f) = (term2088 A B _37163 u f).
Proof. exact (fun_ext (fun g : type686 A => @lem3507881 A B u f g _37163 h1)). Qed.
Lemma lem3507883 {A : Type'} : (@all ((A -> Prop) -> Prop)) = (@all ((A -> Prop) -> Prop)).
Proof. exact (eq_refl (@all ((A -> Prop) -> Prop))). Qed.
Lemma lem3507884 {A B : Type'} (u : A -> Prop) (f : A -> B) (_37163 : type627 A B) (h1 : _37163 = (term2002 A B)) : (term1876 A B u f) = (term2089 A B _37163 u f).
Proof. exact (MK_COMB (@lem3507883 A) (@lem3507882 A B u f _37163 h1)). Qed.
Lemma lem3507885 {A B : Type'} (u : A -> Prop) (_37163 : type627 A B) (h1 : _37163 = (term2002 A B)) : (term2090 A B u) = (term2091 A B _37163 u).
Proof. exact (fun_ext (fun f : A -> B => @lem3507884 A B u f _37163 h1)). Qed.
Lemma lem3507886 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem3507887 {A B : Type'} (u : A -> Prop) (_37163 : type627 A B) (h1 : _37163 = (term2002 A B)) : (term1877 A B u) = (term2092 A B _37163 u).
Proof. exact (MK_COMB (@lem3507886 A B) (@lem3507885 A B u _37163 h1)). Qed.
Lemma lem3507888 {A B : Type'} (_37163 : type627 A B) (h1 : _37163 = (term2002 A B)) : (term2093 A B) = (term2094 A B _37163).
Proof. exact (fun_ext (fun u : A -> Prop => @lem3507887 A B u _37163 h1)). Qed.
Lemma lem3507889 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem3507890 {A B : Type'} (_37163 : type627 A B) (h1 : _37163 = (term2002 A B)) : (term1878 A B) = (term2095 A B _37163).
Proof. exact (MK_COMB (@lem3507889 A) (@lem3507888 A B _37163 h1)). Qed.
Lemma lem3507891 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem3507892 {A B : Type'} (_37163 : type627 A B) (h1 : _37163 = (term2002 A B)) : (term1974 A B) = (term2096 A B _37163).
Proof. exact (MK_COMB (@lem3507891) (@lem3507890 A B _37163 h1)). Qed.
Lemma lem3507893 {_90724 A B : Type'} (_37163 : type627 A B) (h1 : _37163 = (term2002 A B)) : (term1976 _90724 A B) = (term2097 _90724 A B _37163).
Proof. exact (MK_COMB (@lem3507892 A B _37163 h1) (@lem3507821 _90724 A B)). Qed.
Lemma lem3507912 {_90724 A : Type'} (f : A -> _90724) (g : type686 A) : ((term2056 _90724 A f g) = (term2057 _90724 A f g)) = ((term2056 _90724 A f g) = (term2057 _90724 A f g)).
Proof. exact (eq_refl ((term2056 _90724 A f g) = (term2057 _90724 A f g))). Qed.
Lemma lem3507913 {A : Type'} (t : A -> Prop) : t = t.
Proof. exact (eq_refl t). Qed.
Lemma lem3507941 {_90724 A : Type'} (GEN_PVAR_84 : A) (u : A -> Prop) (f : A -> _90724) (t : A -> Prop) (x : A) : (term2058 _90724 A GEN_PVAR_84 u f t x) = (term2058 _90724 A GEN_PVAR_84 u f t x).
Proof. exact (eq_refl (term2058 _90724 A GEN_PVAR_84 u f t x)). Qed.
Lemma lem3507942 {_90724 A : Type'} (GEN_PVAR_84 : A) (u : A -> Prop) (f : A -> _90724) (t : A -> Prop) : (term2059 _90724 A GEN_PVAR_84 u f t) = (term2059 _90724 A GEN_PVAR_84 u f t).
Proof. exact (fun_ext (fun x : A => @lem3507941 _90724 A GEN_PVAR_84 u f t x)). Qed.
Lemma lem3507943 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem3507944 {_90724 A : Type'} (GEN_PVAR_84 : A) (u : A -> Prop) (f : A -> _90724) (t : A -> Prop) : (term2060 _90724 A GEN_PVAR_84 u f t) = (term2060 _90724 A GEN_PVAR_84 u f t).
Proof. exact (MK_COMB (@lem3507943 A) (@lem3507942 _90724 A GEN_PVAR_84 u f t)). Qed.
Lemma lem3507945 {_90724 A : Type'} (u : A -> Prop) (f : A -> _90724) (t : A -> Prop) : (term2061 _90724 A u f t) = (term2061 _90724 A u f t).
Proof. exact (fun_ext (fun GEN_PVAR_84 : A => @lem3507944 _90724 A GEN_PVAR_84 u f t)). Qed.
Lemma lem3507946 {A : Type'} : (@GSPEC A) = (@GSPEC A).
Proof. exact (eq_refl (@GSPEC A)). Qed.
Lemma lem3507947 {_90724 A : Type'} (u : A -> Prop) (f : A -> _90724) (t : A -> Prop) : (term2062 _90724 A u f t) = (term2062 _90724 A u f t).
Proof. exact (MK_COMB (@lem3507946 A) (@lem3507945 _90724 A u f t)). Qed.
Lemma lem3507948 {A : Type'} : (@SUBSET A) = (@SUBSET A).
Proof. exact (eq_refl (@SUBSET A)). Qed.
Lemma lem3507949 {_90724 A : Type'} (u : A -> Prop) (f : A -> _90724) (t : A -> Prop) : (term2063 _90724 A u f t) = (term2063 _90724 A u f t).
Proof. exact (MK_COMB (@lem3507948 A) (@lem3507947 _90724 A u f t)). Qed.
Lemma lem3507950 {_90724 A : Type'} (u : A -> Prop) (f : A -> _90724) (t : A -> Prop) : (term2064 _90724 A u f t) = (term2064 _90724 A u f t).
Proof. exact (MK_COMB (@lem3507949 _90724 A u f t) (@lem3507913 A t)). Qed.
Lemma lem3507957 {A : Type'} (t : A -> Prop) (u : A -> Prop) : (term75 A t u) = (term75 A t u).
Proof. exact (eq_refl (term75 A t u)). Qed.
Lemma lem3507958 {_90724 A : Type'} (u : A -> Prop) (f : A -> _90724) (t : A -> Prop) : (term2065 _90724 A u f t) = (term2065 _90724 A u f t).
Proof. exact (MK_COMB (@lem3507957 A t u) (@lem3507950 _90724 A u f t)). Qed.
Lemma lem3507965 {A : Type'} (t : A -> Prop) (g : type686 A) : (term78 A t g) = (term78 A t g).
Proof. exact (eq_refl (term78 A t g)). Qed.
Lemma lem3507966 {_90724 A : Type'} (g : type686 A) (u : A -> Prop) (f : A -> _90724) (t : A -> Prop) : (term2066 _90724 A g u f t) = (term2066 _90724 A g u f t).
Proof. exact (MK_COMB (@lem3507965 A t g) (@lem3507958 _90724 A u f t)). Qed.
Lemma lem3507967 {_90724 A : Type'} (g : type686 A) (u : A -> Prop) (f : A -> _90724) : (term2067 _90724 A g u f) = (term2067 _90724 A g u f).
Proof. exact (fun_ext (fun t : A -> Prop => @lem3507966 _90724 A g u f t)). Qed.
Lemma lem3507968 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem3507969 {_90724 A : Type'} (g : type686 A) (u : A -> Prop) (f : A -> _90724) : (term2068 _90724 A g u f) = (term2068 _90724 A g u f).
Proof. exact (MK_COMB (@lem3507968 A) (@lem3507967 _90724 A g u f)). Qed.
Lemma lem3507978 {A : Type'} (g : type686 A) : (term42 A g) = (term42 A g).
Proof. exact (eq_refl (term42 A g)). Qed.
Lemma lem3507979 {_90724 A : Type'} (g : type686 A) (u : A -> Prop) (f : A -> _90724) : (term2069 _90724 A g u f) = (term2069 _90724 A g u f).
Proof. exact (MK_COMB (@lem3507978 A g) (@lem3507969 _90724 A g u f)). Qed.
Lemma lem3507980 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem3507981 {_90724 A : Type'} (g : type686 A) (u : A -> Prop) (f : A -> _90724) : (term2070 _90724 A g u f) = (term2070 _90724 A g u f).
Proof. exact (MK_COMB (@lem3507980) (@lem3507979 _90724 A g u f)). Qed.
Lemma lem3507982 {_90724 A : Type'} (u : A -> Prop) (f : A -> _90724) (g : type686 A) : (term2071 _90724 A u f g) = (term2071 _90724 A u f g).
Proof. exact (MK_COMB (@lem3507981 _90724 A g u f) (@lem3507912 _90724 A f g)). Qed.
Lemma lem3507983 {_90724 A : Type'} (u : A -> Prop) (f : A -> _90724) : (term2072 _90724 A u f) = (term2072 _90724 A u f).
Proof. exact (fun_ext (fun g : type686 A => @lem3507982 _90724 A u f g)). Qed.
Lemma lem3507984 {A : Type'} : (@all ((A -> Prop) -> Prop)) = (@all ((A -> Prop) -> Prop)).
Proof. exact (eq_refl (@all ((A -> Prop) -> Prop))). Qed.
Lemma lem3507985 {_90724 A : Type'} (u : A -> Prop) (f : A -> _90724) : (term2073 _90724 A u f) = (term2073 _90724 A u f).
Proof. exact (MK_COMB (@lem3507984 A) (@lem3507983 _90724 A u f)). Qed.
Lemma lem3507986 {_90724 A : Type'} (u : A -> Prop) : (term2074 _90724 A u) = (term2074 _90724 A u).
Proof. exact (fun_ext (fun f : A -> _90724 => @lem3507985 _90724 A u f)). Qed.
Lemma lem3507987 {_90724 A : Type'} : (@all (A -> _90724)) = (@all (A -> _90724)).
Proof. exact (eq_refl (@all (A -> _90724))). Qed.
Lemma lem3507988 {_90724 A : Type'} (u : A -> Prop) : (term2075 _90724 A u) = (term2075 _90724 A u).
Proof. exact (MK_COMB (@lem3507987 _90724 A) (@lem3507986 _90724 A u)). Qed.
Lemma lem3507989 {_90724 A : Type'} : (term2076 _90724 A) = (term2076 _90724 A).
Proof. exact (fun_ext (fun u : A -> Prop => @lem3507988 _90724 A u)). Qed.
Lemma lem3507990 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem3507991 {_90724 A : Type'} : (term1958 _90724 A) = (term1958 _90724 A).
Proof. exact (MK_COMB (@lem3507990 A) (@lem3507989 _90724 A)). Qed.
Lemma lem3507992 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem3507993 {_90724 A : Type'} : (term1971 _90724 A) = (term1971 _90724 A).
Proof. exact (MK_COMB (@lem3507992) (@lem3507991 _90724 A)). Qed.
Lemma lem3507994 {_90724 A B : Type'} (_37163 : type627 A B) (h1 : _37163 = (term2002 A B)) : (term1978 _90724 A B) = (term2098 _90724 A B _37163).
Proof. exact (MK_COMB (@lem3507993 _90724 A) (@lem3507893 _90724 A B _37163 h1)). Qed.
Lemma lem3508013 {_90715 A : Type'} (f : type1413 _90715 A) (g : type686 _90715) : ((term2099 _90715 A f g) = (term2100 _90715 A f g)) = ((term2099 _90715 A f g) = (term2100 _90715 A f g)).
Proof. exact (eq_refl ((term2099 _90715 A f g) = (term2100 _90715 A f g))). Qed.
Lemma lem3508014 {_90715 : Type'} (t : _90715 -> Prop) : t = t.
Proof. exact (eq_refl t). Qed.
Lemma lem3508042 {_90715 A : Type'} (GEN_PVAR_84 : _90715) (u : _90715 -> Prop) (f : type1413 _90715 A) (t : _90715 -> Prop) (x : _90715) : (term2101 _90715 A GEN_PVAR_84 u f t x) = (term2101 _90715 A GEN_PVAR_84 u f t x).
Proof. exact (eq_refl (term2101 _90715 A GEN_PVAR_84 u f t x)). Qed.
Lemma lem3508043 {_90715 A : Type'} (GEN_PVAR_84 : _90715) (u : _90715 -> Prop) (f : type1413 _90715 A) (t : _90715 -> Prop) : (term2102 _90715 A GEN_PVAR_84 u f t) = (term2102 _90715 A GEN_PVAR_84 u f t).
Proof. exact (fun_ext (fun x : _90715 => @lem3508042 _90715 A GEN_PVAR_84 u f t x)). Qed.
Lemma lem3508044 {_90715 : Type'} : (@ex _90715) = (@ex _90715).
Proof. exact (eq_refl (@ex _90715)). Qed.
Lemma lem3508045 {_90715 A : Type'} (GEN_PVAR_84 : _90715) (u : _90715 -> Prop) (f : type1413 _90715 A) (t : _90715 -> Prop) : (term2103 _90715 A GEN_PVAR_84 u f t) = (term2103 _90715 A GEN_PVAR_84 u f t).
Proof. exact (MK_COMB (@lem3508044 _90715) (@lem3508043 _90715 A GEN_PVAR_84 u f t)). Qed.
Lemma lem3508046 {_90715 A : Type'} (u : _90715 -> Prop) (f : type1413 _90715 A) (t : _90715 -> Prop) : (term2104 _90715 A u f t) = (term2104 _90715 A u f t).
Proof. exact (fun_ext (fun GEN_PVAR_84 : _90715 => @lem3508045 _90715 A GEN_PVAR_84 u f t)). Qed.
Lemma lem3508047 {_90715 : Type'} : (@GSPEC _90715) = (@GSPEC _90715).
Proof. exact (eq_refl (@GSPEC _90715)). Qed.
Lemma lem3508048 {_90715 A : Type'} (u : _90715 -> Prop) (f : type1413 _90715 A) (t : _90715 -> Prop) : (term2105 _90715 A u f t) = (term2105 _90715 A u f t).
Proof. exact (MK_COMB (@lem3508047 _90715) (@lem3508046 _90715 A u f t)). Qed.
Lemma lem3508049 {_90715 : Type'} : (@SUBSET _90715) = (@SUBSET _90715).
Proof. exact (eq_refl (@SUBSET _90715)). Qed.
Lemma lem3508050 {_90715 A : Type'} (u : _90715 -> Prop) (f : type1413 _90715 A) (t : _90715 -> Prop) : (term2106 _90715 A u f t) = (term2106 _90715 A u f t).
Proof. exact (MK_COMB (@lem3508049 _90715) (@lem3508048 _90715 A u f t)). Qed.
Lemma lem3508051 {_90715 A : Type'} (u : _90715 -> Prop) (f : type1413 _90715 A) (t : _90715 -> Prop) : (term2107 _90715 A u f t) = (term2107 _90715 A u f t).
Proof. exact (MK_COMB (@lem3508050 _90715 A u f t) (@lem3508014 _90715 t)). Qed.
Lemma lem3508058 {_90715 : Type'} (t : _90715 -> Prop) (u : _90715 -> Prop) : (term75 _90715 t u) = (term75 _90715 t u).
Proof. exact (eq_refl (term75 _90715 t u)). Qed.
Lemma lem3508059 {_90715 A : Type'} (u : _90715 -> Prop) (f : type1413 _90715 A) (t : _90715 -> Prop) : (term2108 _90715 A u f t) = (term2108 _90715 A u f t).
Proof. exact (MK_COMB (@lem3508058 _90715 t u) (@lem3508051 _90715 A u f t)). Qed.
Lemma lem3508066 {_90715 : Type'} (t : _90715 -> Prop) (g : type686 _90715) : (term78 _90715 t g) = (term78 _90715 t g).
Proof. exact (eq_refl (term78 _90715 t g)). Qed.
Lemma lem3508067 {_90715 A : Type'} (g : type686 _90715) (u : _90715 -> Prop) (f : type1413 _90715 A) (t : _90715 -> Prop) : (term2109 _90715 A g u f t) = (term2109 _90715 A g u f t).
Proof. exact (MK_COMB (@lem3508066 _90715 t g) (@lem3508059 _90715 A u f t)). Qed.
Lemma lem3508068 {_90715 A : Type'} (g : type686 _90715) (u : _90715 -> Prop) (f : type1413 _90715 A) : (term2110 _90715 A g u f) = (term2110 _90715 A g u f).
Proof. exact (fun_ext (fun t : _90715 -> Prop => @lem3508067 _90715 A g u f t)). Qed.
Lemma lem3508069 {_90715 : Type'} : (@all (_90715 -> Prop)) = (@all (_90715 -> Prop)).
Proof. exact (eq_refl (@all (_90715 -> Prop))). Qed.
Lemma lem3508070 {_90715 A : Type'} (g : type686 _90715) (u : _90715 -> Prop) (f : type1413 _90715 A) : (term2111 _90715 A g u f) = (term2111 _90715 A g u f).
Proof. exact (MK_COMB (@lem3508069 _90715) (@lem3508068 _90715 A g u f)). Qed.
Lemma lem3508079 {_90715 : Type'} (g : type686 _90715) : (term42 _90715 g) = (term42 _90715 g).
Proof. exact (eq_refl (term42 _90715 g)). Qed.
Lemma lem3508080 {_90715 A : Type'} (g : type686 _90715) (u : _90715 -> Prop) (f : type1413 _90715 A) : (term2112 _90715 A g u f) = (term2112 _90715 A g u f).
Proof. exact (MK_COMB (@lem3508079 _90715 g) (@lem3508070 _90715 A g u f)). Qed.
Lemma lem3508081 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem3508082 {_90715 A : Type'} (g : type686 _90715) (u : _90715 -> Prop) (f : type1413 _90715 A) : (term2113 _90715 A g u f) = (term2113 _90715 A g u f).
Proof. exact (MK_COMB (@lem3508081) (@lem3508080 _90715 A g u f)). Qed.
Lemma lem3508083 {_90715 A : Type'} (u : _90715 -> Prop) (f : type1413 _90715 A) (g : type686 _90715) : (term2114 _90715 A u f g) = (term2114 _90715 A u f g).
Proof. exact (MK_COMB (@lem3508082 _90715 A g u f) (@lem3508013 _90715 A f g)). Qed.
Lemma lem3508084 {_90715 A : Type'} (u : _90715 -> Prop) (f : type1413 _90715 A) : (term2115 _90715 A u f) = (term2115 _90715 A u f).
Proof. exact (fun_ext (fun g : type686 _90715 => @lem3508083 _90715 A u f g)). Qed.
Lemma lem3508085 {_90715 : Type'} : (@all ((_90715 -> Prop) -> Prop)) = (@all ((_90715 -> Prop) -> Prop)).
Proof. exact (eq_refl (@all ((_90715 -> Prop) -> Prop))). Qed.
Lemma lem3508086 {_90715 A : Type'} (u : _90715 -> Prop) (f : type1413 _90715 A) : (term2116 _90715 A u f) = (term2116 _90715 A u f).
Proof. exact (MK_COMB (@lem3508085 _90715) (@lem3508084 _90715 A u f)). Qed.
Lemma lem3508087 {_90715 A : Type'} (u : _90715 -> Prop) : (term2117 _90715 A u) = (term2117 _90715 A u).
Proof. exact (fun_ext (fun f : type1413 _90715 A => @lem3508086 _90715 A u f)). Qed.
Lemma lem3508088 {_90715 A : Type'} : (@all (_90715 -> A -> Prop)) = (@all (_90715 -> A -> Prop)).
Proof. exact (eq_refl (@all (_90715 -> A -> Prop))). Qed.
Lemma lem3508089 {_90715 A : Type'} (u : _90715 -> Prop) : (term2118 _90715 A u) = (term2118 _90715 A u).
Proof. exact (MK_COMB (@lem3508088 _90715 A) (@lem3508087 _90715 A u)). Qed.
Lemma lem3508090 {_90715 A : Type'} : (term2119 _90715 A) = (term2119 _90715 A).
Proof. exact (fun_ext (fun u : _90715 -> Prop => @lem3508089 _90715 A u)). Qed.
Lemma lem3508091 {_90715 : Type'} : (@all (_90715 -> Prop)) = (@all (_90715 -> Prop)).
Proof. exact (eq_refl (@all (_90715 -> Prop))). Qed.
Lemma lem3508092 {_90715 A : Type'} : (term1960 _90715 A) = (term1960 _90715 A).
Proof. exact (MK_COMB (@lem3508091 _90715) (@lem3508090 _90715 A)). Qed.
Lemma lem3508093 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem3508094 {_90715 A : Type'} : (term1979 _90715 A) = (term1979 _90715 A).
Proof. exact (MK_COMB (@lem3508093) (@lem3508092 _90715 A)). Qed.
Lemma lem3508095 {_90715 _90724 A B : Type'} (_37163 : type627 A B) (h1 : _37163 = (term2002 A B)) : (term1981 _90715 _90724 A B) = (term2120 _90715 _90724 A B _37163).
Proof. exact (MK_COMB (@lem3508094 _90715 A) (@lem3507994 _90724 A B _37163 h1)). Qed.
Lemma lem3508114 {_90715 B : Type'} (f : _90715 -> B) (g : type686 _90715) : ((term49 _90715 B f g) = (term50 _90715 B f g)) = ((term49 _90715 B f g) = (term50 _90715 B f g)).
Proof. exact (eq_refl ((term49 _90715 B f g) = (term50 _90715 B f g))). Qed.
Lemma lem3508115 {_90715 : Type'} (t : _90715 -> Prop) : t = t.
Proof. exact (eq_refl t). Qed.
Lemma lem3508143 {_90715 B : Type'} (GEN_PVAR_84 : _90715) (u : _90715 -> Prop) (f : _90715 -> B) (t : _90715 -> Prop) (x : _90715) : (term61 _90715 B GEN_PVAR_84 u f t x) = (term61 _90715 B GEN_PVAR_84 u f t x).
Proof. exact (eq_refl (term61 _90715 B GEN_PVAR_84 u f t x)). Qed.
Lemma lem3508144 {_90715 B : Type'} (GEN_PVAR_84 : _90715) (u : _90715 -> Prop) (f : _90715 -> B) (t : _90715 -> Prop) : (term63 _90715 B GEN_PVAR_84 u f t) = (term63 _90715 B GEN_PVAR_84 u f t).
Proof. exact (fun_ext (fun x : _90715 => @lem3508143 _90715 B GEN_PVAR_84 u f t x)). Qed.
Lemma lem3508145 {_90715 : Type'} : (@ex _90715) = (@ex _90715).
Proof. exact (eq_refl (@ex _90715)). Qed.
Lemma lem3508146 {_90715 B : Type'} (GEN_PVAR_84 : _90715) (u : _90715 -> Prop) (f : _90715 -> B) (t : _90715 -> Prop) : (term65 _90715 B GEN_PVAR_84 u f t) = (term65 _90715 B GEN_PVAR_84 u f t).
Proof. exact (MK_COMB (@lem3508145 _90715) (@lem3508144 _90715 B GEN_PVAR_84 u f t)). Qed.
Lemma lem3508147 {_90715 B : Type'} (u : _90715 -> Prop) (f : _90715 -> B) (t : _90715 -> Prop) : (term67 _90715 B u f t) = (term67 _90715 B u f t).
Proof. exact (fun_ext (fun GEN_PVAR_84 : _90715 => @lem3508146 _90715 B GEN_PVAR_84 u f t)). Qed.
Lemma lem3508148 {_90715 : Type'} : (@GSPEC _90715) = (@GSPEC _90715).
Proof. exact (eq_refl (@GSPEC _90715)). Qed.
Lemma lem3508149 {_90715 B : Type'} (u : _90715 -> Prop) (f : _90715 -> B) (t : _90715 -> Prop) : (term69 _90715 B u f t) = (term69 _90715 B u f t).
Proof. exact (MK_COMB (@lem3508148 _90715) (@lem3508147 _90715 B u f t)). Qed.
Lemma lem3508150 {_90715 : Type'} : (@SUBSET _90715) = (@SUBSET _90715).
Proof. exact (eq_refl (@SUBSET _90715)). Qed.
Lemma lem3508151 {_90715 B : Type'} (u : _90715 -> Prop) (f : _90715 -> B) (t : _90715 -> Prop) : (term71 _90715 B u f t) = (term71 _90715 B u f t).
Proof. exact (MK_COMB (@lem3508150 _90715) (@lem3508149 _90715 B u f t)). Qed.
Lemma lem3508152 {_90715 B : Type'} (u : _90715 -> Prop) (f : _90715 -> B) (t : _90715 -> Prop) : (term73 _90715 B u f t) = (term73 _90715 B u f t).
Proof. exact (MK_COMB (@lem3508151 _90715 B u f t) (@lem3508115 _90715 t)). Qed.
Lemma lem3508159 {_90715 : Type'} (t : _90715 -> Prop) (u : _90715 -> Prop) : (term75 _90715 t u) = (term75 _90715 t u).
Proof. exact (eq_refl (term75 _90715 t u)). Qed.
Lemma lem3508160 {_90715 B : Type'} (u : _90715 -> Prop) (f : _90715 -> B) (t : _90715 -> Prop) : (term76 _90715 B u f t) = (term76 _90715 B u f t).
Proof. exact (MK_COMB (@lem3508159 _90715 t u) (@lem3508152 _90715 B u f t)). Qed.
Lemma lem3508167 {_90715 : Type'} (t : _90715 -> Prop) (g : type686 _90715) : (term78 _90715 t g) = (term78 _90715 t g).
Proof. exact (eq_refl (term78 _90715 t g)). Qed.
Lemma lem3508168 {_90715 B : Type'} (g : type686 _90715) (u : _90715 -> Prop) (f : _90715 -> B) (t : _90715 -> Prop) : (term79 _90715 B g u f t) = (term79 _90715 B g u f t).
Proof. exact (MK_COMB (@lem3508167 _90715 t g) (@lem3508160 _90715 B u f t)). Qed.
Lemma lem3508169 {_90715 B : Type'} (g : type686 _90715) (u : _90715 -> Prop) (f : _90715 -> B) : (term81 _90715 B g u f) = (term81 _90715 B g u f).
Proof. exact (fun_ext (fun t : _90715 -> Prop => @lem3508168 _90715 B g u f t)). Qed.
Lemma lem3508170 {_90715 : Type'} : (@all (_90715 -> Prop)) = (@all (_90715 -> Prop)).
Proof. exact (eq_refl (@all (_90715 -> Prop))). Qed.
Lemma lem3508171 {_90715 B : Type'} (g : type686 _90715) (u : _90715 -> Prop) (f : _90715 -> B) : (term44 _90715 B g u f) = (term44 _90715 B g u f).
Proof. exact (MK_COMB (@lem3508170 _90715) (@lem3508169 _90715 B g u f)). Qed.
Lemma lem3508180 {_90715 : Type'} (g : type686 _90715) : (term42 _90715 g) = (term42 _90715 g).
Proof. exact (eq_refl (term42 _90715 g)). Qed.
Lemma lem3508181 {_90715 B : Type'} (g : type686 _90715) (u : _90715 -> Prop) (f : _90715 -> B) : (term45 _90715 B g u f) = (term45 _90715 B g u f).
Proof. exact (MK_COMB (@lem3508180 _90715 g) (@lem3508171 _90715 B g u f)). Qed.
Lemma lem3508182 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem3508183 {_90715 B : Type'} (g : type686 _90715) (u : _90715 -> Prop) (f : _90715 -> B) : (term47 _90715 B g u f) = (term47 _90715 B g u f).
Proof. exact (MK_COMB (@lem3508182) (@lem3508181 _90715 B g u f)). Qed.
Lemma lem3508184 {_90715 B : Type'} (u : _90715 -> Prop) (f : _90715 -> B) (g : type686 _90715) : (term52 _90715 B u f g) = (term52 _90715 B u f g).
Proof. exact (MK_COMB (@lem3508183 _90715 B g u f) (@lem3508114 _90715 B f g)). Qed.
Lemma lem3508185 {_90715 B : Type'} (u : _90715 -> Prop) (f : _90715 -> B) : (term2087 _90715 B u f) = (term2087 _90715 B u f).
Proof. exact (fun_ext (fun g : type686 _90715 => @lem3508184 _90715 B u f g)). Qed.
Lemma lem3508186 {_90715 : Type'} : (@all ((_90715 -> Prop) -> Prop)) = (@all ((_90715 -> Prop) -> Prop)).
Proof. exact (eq_refl (@all ((_90715 -> Prop) -> Prop))). Qed.
Lemma lem3508187 {_90715 B : Type'} (u : _90715 -> Prop) (f : _90715 -> B) : (term1876 _90715 B u f) = (term1876 _90715 B u f).
Proof. exact (MK_COMB (@lem3508186 _90715) (@lem3508185 _90715 B u f)). Qed.
Lemma lem3508188 {_90715 B : Type'} (u : _90715 -> Prop) : (term2090 _90715 B u) = (term2090 _90715 B u).
Proof. exact (fun_ext (fun f : _90715 -> B => @lem3508187 _90715 B u f)). Qed.
Lemma lem3508189 {_90715 B : Type'} : (@all (_90715 -> B)) = (@all (_90715 -> B)).
Proof. exact (eq_refl (@all (_90715 -> B))). Qed.
Lemma lem3508190 {_90715 B : Type'} (u : _90715 -> Prop) : (term1877 _90715 B u) = (term1877 _90715 B u).
Proof. exact (MK_COMB (@lem3508189 _90715 B) (@lem3508188 _90715 B u)). Qed.
Lemma lem3508191 {_90715 B : Type'} : (term2093 _90715 B) = (term2093 _90715 B).
Proof. exact (fun_ext (fun u : _90715 -> Prop => @lem3508190 _90715 B u)). Qed.
Lemma lem3508192 {_90715 : Type'} : (@all (_90715 -> Prop)) = (@all (_90715 -> Prop)).
Proof. exact (eq_refl (@all (_90715 -> Prop))). Qed.
Lemma lem3508193 {_90715 B : Type'} : (term1878 _90715 B) = (term1878 _90715 B).
Proof. exact (MK_COMB (@lem3508192 _90715) (@lem3508191 _90715 B)). Qed.
Lemma lem3508194 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem3508195 {_90715 B : Type'} : (term1974 _90715 B) = (term1974 _90715 B).
Proof. exact (MK_COMB (@lem3508194) (@lem3508193 _90715 B)). Qed.
Lemma lem3508196 {_90715 _90724 A B : Type'} (_37163 : type627 A B) (h1 : _37163 = (term2002 A B)) : (term1983 _90715 _90724 A B) = (term2121 _90715 _90724 A B _37163).
Proof. exact (MK_COMB (@lem3508195 _90715 B) (@lem3508095 _90715 _90724 A B _37163 h1)). Qed.
Lemma lem3508215 {_90715 A : Type'} (f : _90715 -> A) (g : type686 _90715) : ((term49 _90715 A f g) = (term50 _90715 A f g)) = ((term49 _90715 A f g) = (term50 _90715 A f g)).
Proof. exact (eq_refl ((term49 _90715 A f g) = (term50 _90715 A f g))). Qed.
Lemma lem3508216 {_90715 : Type'} (t : _90715 -> Prop) : t = t.
Proof. exact (eq_refl t). Qed.
Lemma lem3508244 {_90715 A : Type'} (GEN_PVAR_84 : _90715) (u : _90715 -> Prop) (f : _90715 -> A) (t : _90715 -> Prop) (x : _90715) : (term61 _90715 A GEN_PVAR_84 u f t x) = (term61 _90715 A GEN_PVAR_84 u f t x).
Proof. exact (eq_refl (term61 _90715 A GEN_PVAR_84 u f t x)). Qed.
Lemma lem3508245 {_90715 A : Type'} (GEN_PVAR_84 : _90715) (u : _90715 -> Prop) (f : _90715 -> A) (t : _90715 -> Prop) : (term63 _90715 A GEN_PVAR_84 u f t) = (term63 _90715 A GEN_PVAR_84 u f t).
Proof. exact (fun_ext (fun x : _90715 => @lem3508244 _90715 A GEN_PVAR_84 u f t x)). Qed.
Lemma lem3508246 {_90715 : Type'} : (@ex _90715) = (@ex _90715).
Proof. exact (eq_refl (@ex _90715)). Qed.
Lemma lem3508247 {_90715 A : Type'} (GEN_PVAR_84 : _90715) (u : _90715 -> Prop) (f : _90715 -> A) (t : _90715 -> Prop) : (term65 _90715 A GEN_PVAR_84 u f t) = (term65 _90715 A GEN_PVAR_84 u f t).
Proof. exact (MK_COMB (@lem3508246 _90715) (@lem3508245 _90715 A GEN_PVAR_84 u f t)). Qed.
Lemma lem3508248 {_90715 A : Type'} (u : _90715 -> Prop) (f : _90715 -> A) (t : _90715 -> Prop) : (term67 _90715 A u f t) = (term67 _90715 A u f t).
Proof. exact (fun_ext (fun GEN_PVAR_84 : _90715 => @lem3508247 _90715 A GEN_PVAR_84 u f t)). Qed.
Lemma lem3508249 {_90715 : Type'} : (@GSPEC _90715) = (@GSPEC _90715).
Proof. exact (eq_refl (@GSPEC _90715)). Qed.
Lemma lem3508250 {_90715 A : Type'} (u : _90715 -> Prop) (f : _90715 -> A) (t : _90715 -> Prop) : (term69 _90715 A u f t) = (term69 _90715 A u f t).
Proof. exact (MK_COMB (@lem3508249 _90715) (@lem3508248 _90715 A u f t)). Qed.
Lemma lem3508251 {_90715 : Type'} : (@SUBSET _90715) = (@SUBSET _90715).
Proof. exact (eq_refl (@SUBSET _90715)). Qed.
Lemma lem3508252 {_90715 A : Type'} (u : _90715 -> Prop) (f : _90715 -> A) (t : _90715 -> Prop) : (term71 _90715 A u f t) = (term71 _90715 A u f t).
Proof. exact (MK_COMB (@lem3508251 _90715) (@lem3508250 _90715 A u f t)). Qed.
Lemma lem3508253 {_90715 A : Type'} (u : _90715 -> Prop) (f : _90715 -> A) (t : _90715 -> Prop) : (term73 _90715 A u f t) = (term73 _90715 A u f t).
Proof. exact (MK_COMB (@lem3508252 _90715 A u f t) (@lem3508216 _90715 t)). Qed.
Lemma lem3508260 {_90715 : Type'} (t : _90715 -> Prop) (u : _90715 -> Prop) : (term75 _90715 t u) = (term75 _90715 t u).
Proof. exact (eq_refl (term75 _90715 t u)). Qed.
Lemma lem3508261 {_90715 A : Type'} (u : _90715 -> Prop) (f : _90715 -> A) (t : _90715 -> Prop) : (term76 _90715 A u f t) = (term76 _90715 A u f t).
Proof. exact (MK_COMB (@lem3508260 _90715 t u) (@lem3508253 _90715 A u f t)). Qed.
Lemma lem3508268 {_90715 : Type'} (t : _90715 -> Prop) (g : type686 _90715) : (term78 _90715 t g) = (term78 _90715 t g).
Proof. exact (eq_refl (term78 _90715 t g)). Qed.
Lemma lem3508269 {_90715 A : Type'} (g : type686 _90715) (u : _90715 -> Prop) (f : _90715 -> A) (t : _90715 -> Prop) : (term79 _90715 A g u f t) = (term79 _90715 A g u f t).
Proof. exact (MK_COMB (@lem3508268 _90715 t g) (@lem3508261 _90715 A u f t)). Qed.
Lemma lem3508270 {_90715 A : Type'} (g : type686 _90715) (u : _90715 -> Prop) (f : _90715 -> A) : (term81 _90715 A g u f) = (term81 _90715 A g u f).
Proof. exact (fun_ext (fun t : _90715 -> Prop => @lem3508269 _90715 A g u f t)). Qed.
Lemma lem3508271 {_90715 : Type'} : (@all (_90715 -> Prop)) = (@all (_90715 -> Prop)).
Proof. exact (eq_refl (@all (_90715 -> Prop))). Qed.
Lemma lem3508272 {_90715 A : Type'} (g : type686 _90715) (u : _90715 -> Prop) (f : _90715 -> A) : (term44 _90715 A g u f) = (term44 _90715 A g u f).
Proof. exact (MK_COMB (@lem3508271 _90715) (@lem3508270 _90715 A g u f)). Qed.
Lemma lem3508281 {_90715 : Type'} (g : type686 _90715) : (term42 _90715 g) = (term42 _90715 g).
Proof. exact (eq_refl (term42 _90715 g)). Qed.
Lemma lem3508282 {_90715 A : Type'} (g : type686 _90715) (u : _90715 -> Prop) (f : _90715 -> A) : (term45 _90715 A g u f) = (term45 _90715 A g u f).
Proof. exact (MK_COMB (@lem3508281 _90715 g) (@lem3508272 _90715 A g u f)). Qed.
Lemma lem3508283 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem3508284 {_90715 A : Type'} (g : type686 _90715) (u : _90715 -> Prop) (f : _90715 -> A) : (term47 _90715 A g u f) = (term47 _90715 A g u f).
Proof. exact (MK_COMB (@lem3508283) (@lem3508282 _90715 A g u f)). Qed.
Lemma lem3508285 {_90715 A : Type'} (u : _90715 -> Prop) (f : _90715 -> A) (g : type686 _90715) : (term52 _90715 A u f g) = (term52 _90715 A u f g).
Proof. exact (MK_COMB (@lem3508284 _90715 A g u f) (@lem3508215 _90715 A f g)). Qed.
Lemma lem3508286 {_90715 A : Type'} (u : _90715 -> Prop) (f : _90715 -> A) : (term2087 _90715 A u f) = (term2087 _90715 A u f).
Proof. exact (fun_ext (fun g : type686 _90715 => @lem3508285 _90715 A u f g)). Qed.
Lemma lem3508287 {_90715 : Type'} : (@all ((_90715 -> Prop) -> Prop)) = (@all ((_90715 -> Prop) -> Prop)).
Proof. exact (eq_refl (@all ((_90715 -> Prop) -> Prop))). Qed.
Lemma lem3508288 {_90715 A : Type'} (u : _90715 -> Prop) (f : _90715 -> A) : (term1876 _90715 A u f) = (term1876 _90715 A u f).
Proof. exact (MK_COMB (@lem3508287 _90715) (@lem3508286 _90715 A u f)). Qed.
Lemma lem3508289 {_90715 A : Type'} (u : _90715 -> Prop) : (term2090 _90715 A u) = (term2090 _90715 A u).
Proof. exact (fun_ext (fun f : _90715 -> A => @lem3508288 _90715 A u f)). Qed.
Lemma lem3508290 {_90715 A : Type'} : (@all (_90715 -> A)) = (@all (_90715 -> A)).
Proof. exact (eq_refl (@all (_90715 -> A))). Qed.
Lemma lem3508291 {_90715 A : Type'} (u : _90715 -> Prop) : (term1877 _90715 A u) = (term1877 _90715 A u).
Proof. exact (MK_COMB (@lem3508290 _90715 A) (@lem3508289 _90715 A u)). Qed.
Lemma lem3508292 {_90715 A : Type'} : (term2093 _90715 A) = (term2093 _90715 A).
Proof. exact (fun_ext (fun u : _90715 -> Prop => @lem3508291 _90715 A u)). Qed.
Lemma lem3508293 {_90715 : Type'} : (@all (_90715 -> Prop)) = (@all (_90715 -> Prop)).
Proof. exact (eq_refl (@all (_90715 -> Prop))). Qed.
Lemma lem3508294 {_90715 A : Type'} : (term1878 _90715 A) = (term1878 _90715 A).
Proof. exact (MK_COMB (@lem3508293 _90715) (@lem3508292 _90715 A)). Qed.
Lemma lem3508295 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem3508296 {_90715 A : Type'} : (term1974 _90715 A) = (term1974 _90715 A).
Proof. exact (MK_COMB (@lem3508295) (@lem3508294 _90715 A)). Qed.
Lemma lem3508297 {_90715 _90724 A B : Type'} (_37163 : type627 A B) (h1 : _37163 = (term2002 A B)) : (term1985 _90715 _90724 A B) = (term2122 _90715 _90724 A B _37163).
Proof. exact (MK_COMB (@lem3508296 _90715 A) (@lem3508196 _90715 _90724 A B _37163 h1)). Qed.
Lemma lem3508316 {_90715 _90724 : Type'} (f : _90715 -> _90724) (g : type686 _90715) : ((term49 _90715 _90724 f g) = (term50 _90715 _90724 f g)) = ((term49 _90715 _90724 f g) = (term50 _90715 _90724 f g)).
Proof. exact (eq_refl ((term49 _90715 _90724 f g) = (term50 _90715 _90724 f g))). Qed.
Lemma lem3508317 {_90715 : Type'} (t : _90715 -> Prop) : t = t.
Proof. exact (eq_refl t). Qed.
Lemma lem3508345 {_90715 _90724 : Type'} (GEN_PVAR_84 : _90715) (u : _90715 -> Prop) (f : _90715 -> _90724) (t : _90715 -> Prop) (x : _90715) : (term61 _90715 _90724 GEN_PVAR_84 u f t x) = (term61 _90715 _90724 GEN_PVAR_84 u f t x).
Proof. exact (eq_refl (term61 _90715 _90724 GEN_PVAR_84 u f t x)). Qed.
Lemma lem3508346 {_90715 _90724 : Type'} (GEN_PVAR_84 : _90715) (u : _90715 -> Prop) (f : _90715 -> _90724) (t : _90715 -> Prop) : (term63 _90715 _90724 GEN_PVAR_84 u f t) = (term63 _90715 _90724 GEN_PVAR_84 u f t).
Proof. exact (fun_ext (fun x : _90715 => @lem3508345 _90715 _90724 GEN_PVAR_84 u f t x)). Qed.
Lemma lem3508347 {_90715 : Type'} : (@ex _90715) = (@ex _90715).
Proof. exact (eq_refl (@ex _90715)). Qed.
Lemma lem3508348 {_90715 _90724 : Type'} (GEN_PVAR_84 : _90715) (u : _90715 -> Prop) (f : _90715 -> _90724) (t : _90715 -> Prop) : (term65 _90715 _90724 GEN_PVAR_84 u f t) = (term65 _90715 _90724 GEN_PVAR_84 u f t).
Proof. exact (MK_COMB (@lem3508347 _90715) (@lem3508346 _90715 _90724 GEN_PVAR_84 u f t)). Qed.
Lemma lem3508349 {_90715 _90724 : Type'} (u : _90715 -> Prop) (f : _90715 -> _90724) (t : _90715 -> Prop) : (term67 _90715 _90724 u f t) = (term67 _90715 _90724 u f t).
Proof. exact (fun_ext (fun GEN_PVAR_84 : _90715 => @lem3508348 _90715 _90724 GEN_PVAR_84 u f t)). Qed.
Lemma lem3508350 {_90715 : Type'} : (@GSPEC _90715) = (@GSPEC _90715).
Proof. exact (eq_refl (@GSPEC _90715)). Qed.
Lemma lem3508351 {_90715 _90724 : Type'} (u : _90715 -> Prop) (f : _90715 -> _90724) (t : _90715 -> Prop) : (term69 _90715 _90724 u f t) = (term69 _90715 _90724 u f t).
Proof. exact (MK_COMB (@lem3508350 _90715) (@lem3508349 _90715 _90724 u f t)). Qed.
Lemma lem3508352 {_90715 : Type'} : (@SUBSET _90715) = (@SUBSET _90715).
Proof. exact (eq_refl (@SUBSET _90715)). Qed.
Lemma lem3508353 {_90715 _90724 : Type'} (u : _90715 -> Prop) (f : _90715 -> _90724) (t : _90715 -> Prop) : (term71 _90715 _90724 u f t) = (term71 _90715 _90724 u f t).
Proof. exact (MK_COMB (@lem3508352 _90715) (@lem3508351 _90715 _90724 u f t)). Qed.
Lemma lem3508354 {_90715 _90724 : Type'} (u : _90715 -> Prop) (f : _90715 -> _90724) (t : _90715 -> Prop) : (term73 _90715 _90724 u f t) = (term73 _90715 _90724 u f t).
Proof. exact (MK_COMB (@lem3508353 _90715 _90724 u f t) (@lem3508317 _90715 t)). Qed.
Lemma lem3508361 {_90715 : Type'} (t : _90715 -> Prop) (u : _90715 -> Prop) : (term75 _90715 t u) = (term75 _90715 t u).
Proof. exact (eq_refl (term75 _90715 t u)). Qed.
Lemma lem3508362 {_90715 _90724 : Type'} (u : _90715 -> Prop) (f : _90715 -> _90724) (t : _90715 -> Prop) : (term76 _90715 _90724 u f t) = (term76 _90715 _90724 u f t).
Proof. exact (MK_COMB (@lem3508361 _90715 t u) (@lem3508354 _90715 _90724 u f t)). Qed.
Lemma lem3508369 {_90715 : Type'} (t : _90715 -> Prop) (g : type686 _90715) : (term78 _90715 t g) = (term78 _90715 t g).
Proof. exact (eq_refl (term78 _90715 t g)). Qed.
Lemma lem3508370 {_90715 _90724 : Type'} (g : type686 _90715) (u : _90715 -> Prop) (f : _90715 -> _90724) (t : _90715 -> Prop) : (term79 _90715 _90724 g u f t) = (term79 _90715 _90724 g u f t).
Proof. exact (MK_COMB (@lem3508369 _90715 t g) (@lem3508362 _90715 _90724 u f t)). Qed.
Lemma lem3508371 {_90715 _90724 : Type'} (g : type686 _90715) (u : _90715 -> Prop) (f : _90715 -> _90724) : (term81 _90715 _90724 g u f) = (term81 _90715 _90724 g u f).
Proof. exact (fun_ext (fun t : _90715 -> Prop => @lem3508370 _90715 _90724 g u f t)). Qed.
Lemma lem3508372 {_90715 : Type'} : (@all (_90715 -> Prop)) = (@all (_90715 -> Prop)).
Proof. exact (eq_refl (@all (_90715 -> Prop))). Qed.
Lemma lem3508373 {_90715 _90724 : Type'} (g : type686 _90715) (u : _90715 -> Prop) (f : _90715 -> _90724) : (term44 _90715 _90724 g u f) = (term44 _90715 _90724 g u f).
Proof. exact (MK_COMB (@lem3508372 _90715) (@lem3508371 _90715 _90724 g u f)). Qed.
Lemma lem3508382 {_90715 : Type'} (g : type686 _90715) : (term42 _90715 g) = (term42 _90715 g).
Proof. exact (eq_refl (term42 _90715 g)). Qed.
Lemma lem3508383 {_90715 _90724 : Type'} (g : type686 _90715) (u : _90715 -> Prop) (f : _90715 -> _90724) : (term45 _90715 _90724 g u f) = (term45 _90715 _90724 g u f).
Proof. exact (MK_COMB (@lem3508382 _90715 g) (@lem3508373 _90715 _90724 g u f)). Qed.
Lemma lem3508384 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem3508385 {_90715 _90724 : Type'} (g : type686 _90715) (u : _90715 -> Prop) (f : _90715 -> _90724) : (term47 _90715 _90724 g u f) = (term47 _90715 _90724 g u f).
Proof. exact (MK_COMB (@lem3508384) (@lem3508383 _90715 _90724 g u f)). Qed.
Lemma lem3508386 {_90715 _90724 : Type'} (u : _90715 -> Prop) (f : _90715 -> _90724) (g : type686 _90715) : (term52 _90715 _90724 u f g) = (term52 _90715 _90724 u f g).
Proof. exact (MK_COMB (@lem3508385 _90715 _90724 g u f) (@lem3508316 _90715 _90724 f g)). Qed.
Lemma lem3508387 {_90715 _90724 : Type'} (u : _90715 -> Prop) (f : _90715 -> _90724) : (term2087 _90715 _90724 u f) = (term2087 _90715 _90724 u f).
Proof. exact (fun_ext (fun g : type686 _90715 => @lem3508386 _90715 _90724 u f g)). Qed.
Lemma lem3508388 {_90715 : Type'} : (@all ((_90715 -> Prop) -> Prop)) = (@all ((_90715 -> Prop) -> Prop)).
Proof. exact (eq_refl (@all ((_90715 -> Prop) -> Prop))). Qed.
Lemma lem3508389 {_90715 _90724 : Type'} (u : _90715 -> Prop) (f : _90715 -> _90724) : (term1876 _90715 _90724 u f) = (term1876 _90715 _90724 u f).
Proof. exact (MK_COMB (@lem3508388 _90715) (@lem3508387 _90715 _90724 u f)). Qed.
Lemma lem3508390 {_90715 _90724 : Type'} (u : _90715 -> Prop) : (term2090 _90715 _90724 u) = (term2090 _90715 _90724 u).
Proof. exact (fun_ext (fun f : _90715 -> _90724 => @lem3508389 _90715 _90724 u f)). Qed.
Lemma lem3508391 {_90715 _90724 : Type'} : (@all (_90715 -> _90724)) = (@all (_90715 -> _90724)).
Proof. exact (eq_refl (@all (_90715 -> _90724))). Qed.
Lemma lem3508392 {_90715 _90724 : Type'} (u : _90715 -> Prop) : (term1877 _90715 _90724 u) = (term1877 _90715 _90724 u).
Proof. exact (MK_COMB (@lem3508391 _90715 _90724) (@lem3508390 _90715 _90724 u)). Qed.
Lemma lem3508393 {_90715 _90724 : Type'} : (term2093 _90715 _90724) = (term2093 _90715 _90724).
Proof. exact (fun_ext (fun u : _90715 -> Prop => @lem3508392 _90715 _90724 u)). Qed.
Lemma lem3508394 {_90715 : Type'} : (@all (_90715 -> Prop)) = (@all (_90715 -> Prop)).
Proof. exact (eq_refl (@all (_90715 -> Prop))). Qed.
Lemma lem3508395 {_90715 _90724 : Type'} : (term1878 _90715 _90724) = (term1878 _90715 _90724).
Proof. exact (MK_COMB (@lem3508394 _90715) (@lem3508393 _90715 _90724)). Qed.
Lemma lem3508396 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem3508397 {_90715 _90724 : Type'} : (term1974 _90715 _90724) = (term1974 _90715 _90724).
Proof. exact (MK_COMB (@lem3508396) (@lem3508395 _90715 _90724)). Qed.
Lemma lem3508398 {_90715 _90724 A B : Type'} (_37163 : type627 A B) (h1 : _37163 = (term2002 A B)) : (term1987 _90715 _90724 A B) = (term2123 _90715 _90724 A B _37163).
Proof. exact (MK_COMB (@lem3508397 _90715 _90724) (@lem3508297 _90715 _90724 A B _37163 h1)). Qed.
Lemma lem3508417 {A B : Type'} (f : A -> B) (g : type686 A) : ((term49 A B f g) = (term50 A B f g)) = ((term49 A B f g) = (term50 A B f g)).
Proof. exact (eq_refl ((term49 A B f g) = (term50 A B f g))). Qed.
Lemma lem3508418 {A : Type'} (t : A -> Prop) : t = t.
Proof. exact (eq_refl t). Qed.
Lemma lem3508420 {A B : Type'} (u : A -> Prop) (f : A -> B) (t : A -> Prop) (_37163 : type627 A B) (h1 : _37163 = (term2002 A B)) : (term67 A B u f t) = (_37163 u f t).
Proof. exact (SYM (@lem3507518 A B u f t _37163 h1)). Qed.
Lemma lem3508421 {A B : Type'} (u : A -> Prop) (f : A -> B) (t : A -> Prop) (_37163 : type627 A B) (h1 : _37163 = (term2002 A B)) : (term67 A B u f t) = (_37163 u f t).
Proof. exact (@lem3508420 A B u f t _37163 h1). Qed.
Lemma lem3508422 {A : Type'} : (@GSPEC A) = (@GSPEC A).
Proof. exact (eq_refl (@GSPEC A)). Qed.
Lemma lem3508423 {A B : Type'} (u : A -> Prop) (f : A -> B) (t : A -> Prop) (_37163 : type627 A B) (h1 : _37163 = (term2002 A B)) : (term69 A B u f t) = (term2077 A B _37163 u f t).
Proof. exact (MK_COMB (@lem3508422 A) (@lem3508421 A B u f t _37163 h1)). Qed.
Lemma lem3508424 {A : Type'} : (@SUBSET A) = (@SUBSET A).
Proof. exact (eq_refl (@SUBSET A)). Qed.
Lemma lem3508425 {A B : Type'} (u : A -> Prop) (f : A -> B) (t : A -> Prop) (_37163 : type627 A B) (h1 : _37163 = (term2002 A B)) : (term71 A B u f t) = (term2078 A B _37163 u f t).
Proof. exact (MK_COMB (@lem3508424 A) (@lem3508423 A B u f t _37163 h1)). Qed.
Lemma lem3508426 {A B : Type'} (u : A -> Prop) (f : A -> B) (t : A -> Prop) (_37163 : type627 A B) (h1 : _37163 = (term2002 A B)) : (term73 A B u f t) = (term2079 A B _37163 u f t).
Proof. exact (MK_COMB (@lem3508425 A B u f t _37163 h1) (@lem3508418 A t)). Qed.
Lemma lem3508433 {A : Type'} (t : A -> Prop) (g : type686 A) : (term78 A t g) = (term78 A t g).
Proof. exact (eq_refl (term78 A t g)). Qed.
Lemma lem3508434 {A B : Type'} (g : type686 A) (u : A -> Prop) (f : A -> B) (t : A -> Prop) (_37163 : type627 A B) (h1 : _37163 = (term2002 A B)) : (term1941 A B g u f t) = (term2124 A B g _37163 u f t).
Proof. exact (MK_COMB (@lem3508433 A t g) (@lem3508426 A B u f t _37163 h1)). Qed.
Lemma lem3508435 {A B : Type'} (g : type686 A) (u : A -> Prop) (f : A -> B) (_37163 : type627 A B) (h1 : _37163 = (term2002 A B)) : (term1943 A B g u f) = (term2125 A B g _37163 u f).
Proof. exact (fun_ext (fun t : A -> Prop => @lem3508434 A B g u f t _37163 h1)). Qed.
Lemma lem3508436 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem3508437 {A B : Type'} (g : type686 A) (u : A -> Prop) (f : A -> B) (_37163 : type627 A B) (h1 : _37163 = (term2002 A B)) : (term1945 A B g u f) = (term2126 A B g _37163 u f).
Proof. exact (MK_COMB (@lem3508436 A) (@lem3508435 A B g u f _37163 h1)). Qed.
Lemma lem3508450 {A : Type'} (g : type686 A) (t : A -> Prop) (u : A -> Prop) : (term2127 A g t u) = (term2127 A g t u).
Proof. exact (eq_refl (term2127 A g t u)). Qed.
Lemma lem3508451 {A : Type'} (g : type686 A) (u : A -> Prop) : (term2128 A g u) = (term2128 A g u).
Proof. exact (fun_ext (fun t : A -> Prop => @lem3508450 A g t u)). Qed.
Lemma lem3508452 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem3508453 {A : Type'} (g : type686 A) (u : A -> Prop) : (term2129 A g u) = (term2129 A g u).
Proof. exact (MK_COMB (@lem3508452 A) (@lem3508451 A g u)). Qed.
Lemma lem3508454 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem3508455 {A : Type'} (g : type686 A) (u : A -> Prop) : (term1946 A g u) = (term1946 A g u).
Proof. exact (MK_COMB (@lem3508454) (@lem3508453 A g u)). Qed.
Lemma lem3508456 {A B : Type'} (g : type686 A) (u : A -> Prop) (f : A -> B) (_37163 : type627 A B) (h1 : _37163 = (term2002 A B)) : (term1948 A B g u f) = (term2130 A B g _37163 u f).
Proof. exact (MK_COMB (@lem3508455 A g u) (@lem3508437 A B g u f _37163 h1)). Qed.
Lemma lem3508465 {A : Type'} (g : type686 A) : (term42 A g) = (term42 A g).
Proof. exact (eq_refl (term42 A g)). Qed.
Lemma lem3508466 {A B : Type'} (g : type686 A) (u : A -> Prop) (f : A -> B) (_37163 : type627 A B) (h1 : _37163 = (term2002 A B)) : (term1949 A B g u f) = (term2131 A B g _37163 u f).
Proof. exact (MK_COMB (@lem3508465 A g) (@lem3508456 A B g u f _37163 h1)). Qed.
Lemma lem3508467 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem3508468 {A B : Type'} (g : type686 A) (u : A -> Prop) (f : A -> B) (_37163 : type627 A B) (h1 : _37163 = (term2002 A B)) : (term2132 A B g u f) = (term2133 A B g _37163 u f).
Proof. exact (MK_COMB (@lem3508467) (@lem3508466 A B g u f _37163 h1)). Qed.
Lemma lem3508469 {A B : Type'} (u : A -> Prop) (f : A -> B) (g : type686 A) (_37163 : type627 A B) (h1 : _37163 = (term2002 A B)) : (term1955 A B u f g) = (term2134 A B _37163 u f g).
Proof. exact (MK_COMB (@lem3508468 A B g u f _37163 h1) (@lem3508417 A B f g)). Qed.
Lemma lem3508470 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem3508471 {A B : Type'} (u : A -> Prop) (f : A -> B) (g : type686 A) (_37163 : type627 A B) (h1 : _37163 = (term2002 A B)) : (term1957 A B u f g) = (term2135 A B _37163 u f g).
Proof. exact (MK_COMB (@lem3508470) (@lem3508469 A B u f g _37163 h1)). Qed.
Lemma lem3508472 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem3508473 {A B : Type'} (u : A -> Prop) (f : A -> B) (g : type686 A) (_37163 : type627 A B) (h1 : _37163 = (term2002 A B)) : (term1988 A B u f g) = (term2136 A B _37163 u f g).
Proof. exact (MK_COMB (@lem3508472) (@lem3508471 A B u f g _37163 h1)). Qed.
Lemma lem3508474 {_90715 _90724 A B : Type'} (u : A -> Prop) (f : A -> B) (g : type686 A) (_37163 : type627 A B) (h1 : _37163 = (term2002 A B)) : (term1989 _90715 _90724 A B u f g) = (term2137 _90715 _90724 A B u f g _37163).
Proof. exact (MK_COMB (@lem3508473 A B u f g _37163 h1) (@lem3508398 _90715 _90724 A B _37163 h1)). Qed.
Lemma lem3508475 {_90715 _90724 A B : Type'} (f : A -> B) (g : type686 A) (_37163 : type627 A B) (h1 : _37163 = (term2002 A B)) : (term1991 _90715 _90724 A B f g) = (term2138 _90715 _90724 A B f g _37163).
Proof. exact (fun_ext (fun u : A -> Prop => @lem3508474 _90715 _90724 A B u f g _37163 h1)). Qed.
Lemma lem3508476 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem3508477 {_90715 _90724 A B : Type'} (f : A -> B) (g : type686 A) (_37163 : type627 A B) (h1 : _37163 = (term2002 A B)) : (term1993 _90715 _90724 A B f g) = (term2139 _90715 _90724 A B f g _37163).
Proof. exact (MK_COMB (@lem3508476 A) (@lem3508475 _90715 _90724 A B f g _37163 h1)). Qed.
Lemma lem3508478 {_90715 _90724 A B : Type'} (g : type686 A) (_37163 : type627 A B) (h1 : _37163 = (term2002 A B)) : (term1995 _90715 _90724 A B g) = (term2140 _90715 _90724 A B g _37163).
Proof. exact (fun_ext (fun f : A -> B => @lem3508477 _90715 _90724 A B f g _37163 h1)). Qed.
Lemma lem3508479 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem3508480 {_90715 _90724 A B : Type'} (g : type686 A) (_37163 : type627 A B) (h1 : _37163 = (term2002 A B)) : (term1997 _90715 _90724 A B g) = (term2141 _90715 _90724 A B g _37163).
Proof. exact (MK_COMB (@lem3508479 A B) (@lem3508478 _90715 _90724 A B g _37163 h1)). Qed.
Lemma lem3508481 {_90715 _90724 A B : Type'} (_37163 : type627 A B) (h1 : _37163 = (term2002 A B)) : (term1999 _90715 _90724 A B) = (term2142 _90715 _90724 A B _37163).
Proof. exact (fun_ext (fun g : type686 A => @lem3508480 _90715 _90724 A B g _37163 h1)). Qed.
Lemma lem3508482 {A : Type'} : (@all ((A -> Prop) -> Prop)) = (@all ((A -> Prop) -> Prop)).
Proof. exact (eq_refl (@all ((A -> Prop) -> Prop))). Qed.
Lemma lem3508483 {_90715 _90724 A B : Type'} (_37163 : type627 A B) (h1 : _37163 = (term2002 A B)) : (term2001 _90715 _90724 A B) = (term2143 _90715 _90724 A B _37163).
Proof. exact (MK_COMB (@lem3508482 A) (@lem3508481 _90715 _90724 A B _37163 h1)). Qed.
Lemma lem3508484 {_90715 _90724 A B : Type'} (_37163 : type627 A B) : term2144 _90715 _90724 A B _37163.
Proof. exact (fun h0 : _37163 = (term2002 A B) => @lem3508483 _90715 _90724 A B _37163 h0). Qed.
Lemma lem3508485 {_90715 _90724 A B : Type'} : term2145 _90715 _90724 A B.
Proof. exact (fun _37163 : type627 A B => @lem3508484 _90715 _90724 A B _37163). Qed.
Lemma lem3508487 {_3603 : Type'} (P : Prop) (c : _3603) (Q : _3603 -> Prop) : term2146 _3603 P c Q.
Proof. exact (EQ_MP (@lem20230 _3603 P c Q) (@lem0)). Qed.
Lemma lem3508488 {A B : Type'} (P : Prop) (c : type627 A B) (Q : type132 A B) : term2147 A B P c Q.
Proof. exact (@lem3508487 (type627 A B) P c Q). Qed.
Lemma lem3508489 {_90715 _90724 A B : Type'} : term2148 _90715 _90724 A B.
Proof. exact (@lem3508488 A B (term2001 _90715 _90724 A B) (term2002 A B) (term2149 _90715 _90724 A B)). Qed.
Lemma lem3508490 {_90715 _90724 A B : Type'} (_37163 : type627 A B) : (term2150 _90715 _90724 A B _37163) = (term2143 _90715 _90724 A B _37163).
Proof. exact (eq_refl (term2150 _90715 _90724 A B _37163)). Qed.
Lemma lem3508491 {_90715 _90724 A B : Type'} : (term2151 _90715 _90724 A B) = (term2151 _90715 _90724 A B).
Proof. exact (eq_refl (term2151 _90715 _90724 A B)). Qed.
Lemma lem3508492 {_90715 _90724 A B : Type'} (_37163 : type627 A B) : ((term2001 _90715 _90724 A B) = (term2150 _90715 _90724 A B _37163)) = ((term2001 _90715 _90724 A B) = (term2143 _90715 _90724 A B _37163)).
Proof. exact (MK_COMB (@lem3508491 _90715 _90724 A B) (@lem3508490 _90715 _90724 A B _37163)). Qed.
Lemma lem3508493 {A B : Type'} (_37163 : type627 A B) : (term2152 A B _37163) = (term2152 A B _37163).
Proof. exact (eq_refl (term2152 A B _37163)). Qed.
Lemma lem3508494 {_90715 _90724 A B : Type'} (_37163 : type627 A B) : (term2153 _90715 _90724 A B _37163) = (term2144 _90715 _90724 A B _37163).
Proof. exact (MK_COMB (@lem3508493 A B _37163) (@lem3508492 _90715 _90724 A B _37163)). Qed.
Lemma lem3508495 {_90715 _90724 A B : Type'} : (term2154 _90715 _90724 A B) = (term2155 _90715 _90724 A B).
Proof. exact (fun_ext (fun _37163 : type627 A B => @lem3508494 _90715 _90724 A B _37163)). Qed.
Lemma lem3508496 {A B : Type'} : (@all ((A -> Prop) -> (A -> B) -> (A -> Prop) -> A -> Prop)) = (@all ((A -> Prop) -> (A -> B) -> (A -> Prop) -> A -> Prop)).
Proof. exact (eq_refl (@all ((A -> Prop) -> (A -> B) -> (A -> Prop) -> A -> Prop))). Qed.
Lemma lem3508497 {_90715 _90724 A B : Type'} : (term2156 _90715 _90724 A B) = (term2145 _90715 _90724 A B).
Proof. exact (MK_COMB (@lem3508496 A B) (@lem3508495 _90715 _90724 A B)). Qed.
Lemma lem3508498 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem3508499 {_90715 _90724 A B : Type'} : (term2157 _90715 _90724 A B) = (term2158 _90715 _90724 A B).
Proof. exact (MK_COMB (@lem3508498) (@lem3508497 _90715 _90724 A B)). Qed.
Lemma lem3508500 {_90715 _90724 A B : Type'} (_37163 : type627 A B) : (term2150 _90715 _90724 A B _37163) = (term2143 _90715 _90724 A B _37163).
Proof. exact (eq_refl (term2150 _90715 _90724 A B _37163)). Qed.
Lemma lem3508501 {A B : Type'} (_37163 : type627 A B) : (term2152 A B _37163) = (term2152 A B _37163).
Proof. exact (eq_refl (term2152 A B _37163)). Qed.
Lemma lem3508502 {_90715 _90724 A B : Type'} (_37163 : type627 A B) : (term2159 _90715 _90724 A B _37163) = (term2160 _90715 _90724 A B _37163).
Proof. exact (MK_COMB (@lem3508501 A B _37163) (@lem3508500 _90715 _90724 A B _37163)). Qed.
Lemma lem3508503 {_90715 _90724 A B : Type'} : (term2161 _90715 _90724 A B) = (term2162 _90715 _90724 A B).
Proof. exact (fun_ext (fun _37163 : type627 A B => @lem3508502 _90715 _90724 A B _37163)). Qed.
Lemma lem3508504 {A B : Type'} : (@all ((A -> Prop) -> (A -> B) -> (A -> Prop) -> A -> Prop)) = (@all ((A -> Prop) -> (A -> B) -> (A -> Prop) -> A -> Prop)).
Proof. exact (eq_refl (@all ((A -> Prop) -> (A -> B) -> (A -> Prop) -> A -> Prop))). Qed.
Lemma lem3508505 {_90715 _90724 A B : Type'} : (term2163 _90715 _90724 A B) = (term2164 _90715 _90724 A B).
Proof. exact (MK_COMB (@lem3508504 A B) (@lem3508503 _90715 _90724 A B)). Qed.
Lemma lem3508506 {_90715 _90724 A B : Type'} : (term2151 _90715 _90724 A B) = (term2151 _90715 _90724 A B).
Proof. exact (eq_refl (term2151 _90715 _90724 A B)). Qed.
Lemma lem3508507 {_90715 _90724 A B : Type'} : ((term2001 _90715 _90724 A B) = (term2163 _90715 _90724 A B)) = ((term2001 _90715 _90724 A B) = (term2164 _90715 _90724 A B)).
Proof. exact (MK_COMB (@lem3508506 _90715 _90724 A B) (@lem3508505 _90715 _90724 A B)). Qed.
Lemma lem3508508 {_90715 _90724 A B : Type'} : (term2148 _90715 _90724 A B) = (term2165 _90715 _90724 A B).
Proof. exact (MK_COMB (@lem3508499 _90715 _90724 A B) (@lem3508507 _90715 _90724 A B)). Qed.
Lemma lem3508509 {_90715 _90724 A B : Type'} : term2165 _90715 _90724 A B.
Proof. exact (EQ_MP (@lem3508508 _90715 _90724 A B) (@lem3508489 _90715 _90724 A B)). Qed.
Lemma lem3508510 {_90715 _90724 A B : Type'} : (term2001 _90715 _90724 A B) = (term2164 _90715 _90724 A B).
Proof. exact (@lem3508509 _90715 _90724 A B (@lem3508485 _90715 _90724 A B)). Qed.
Lemma lem3508512 {_3571 _3575 : Type'} (s : _3575 -> _3571) (t : _3575 -> _3571) : (s = (term2166 _3571 _3575 t)) = (term2167 _3571 _3575 s t).
Proof. exact (EQ_MP (@lem19792 _3571 _3575 s t) (@lem0)). Qed.
Lemma lem3508513 {A B : Type'} (s : type627 A B) (t : type627 A B) : (s = (term2168 A B t)) = (term2169 A B s t).
Proof. exact (@lem3508512 (type527 A B) (A -> Prop) s t). Qed.
Lemma lem3508514 {A B : Type'} (_37163 : type627 A B) : (_37163 = (term2170 A B)) = (term2171 A B _37163).
Proof. exact (@lem3508513 A B _37163 (term2002 A B)). Qed.
Lemma lem3508515 {A B : Type'} (u : A -> Prop) : (term2003 A B u) = (term2004 A B u).
Proof. exact (eq_refl (term2003 A B u)). Qed.
Lemma lem3508516 {A B : Type'} : (term2170 A B) = (term2002 A B).
Proof. exact (fun_ext (fun u : A -> Prop => @lem3508515 A B u)). Qed.
Lemma lem3508517 {A B : Type'} (_37163 : type627 A B) : (@eq ((A -> Prop) -> (A -> B) -> (A -> Prop) -> A -> Prop) _37163) = (@eq ((A -> Prop) -> (A -> B) -> (A -> Prop) -> A -> Prop) _37163).
Proof. exact (eq_refl (@eq ((A -> Prop) -> (A -> B) -> (A -> Prop) -> A -> Prop) _37163)). Qed.
Lemma lem3508518 {A B : Type'} (_37163 : type627 A B) : (_37163 = (term2170 A B)) = (_37163 = (term2002 A B)).
Proof. exact (MK_COMB (@lem3508517 A B _37163) (@lem3508516 A B)). Qed.
Lemma lem3508519 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem3508520 {A B : Type'} (_37163 : type627 A B) : (term2172 A B _37163) = (term2173 A B _37163).
Proof. exact (MK_COMB (@lem3508519) (@lem3508518 A B _37163)). Qed.
Lemma lem3508521 {A B : Type'} (u : A -> Prop) : (term2003 A B u) = (term2004 A B u).
Proof. exact (eq_refl (term2003 A B u)). Qed.
Lemma lem3508522 {A B : Type'} (_37163 : type627 A B) (u : A -> Prop) : (term2005 A B _37163 u) = (term2005 A B _37163 u).
Proof. exact (eq_refl (term2005 A B _37163 u)). Qed.
Lemma lem3508523 {A B : Type'} (_37163 : type627 A B) (u : A -> Prop) : ((_37163 u) = (term2003 A B u)) = ((_37163 u) = (term2004 A B u)).
Proof. exact (MK_COMB (@lem3508522 A B _37163 u) (@lem3508521 A B u)). Qed.
Lemma lem3508524 {A B : Type'} (_37163 : type627 A B) : (term2174 A B _37163) = (term2175 A B _37163).
Proof. exact (fun_ext (fun u : A -> Prop => @lem3508523 A B _37163 u)). Qed.
Lemma lem3508525 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem3508526 {A B : Type'} (_37163 : type627 A B) : (term2171 A B _37163) = (term2176 A B _37163).
Proof. exact (MK_COMB (@lem3508525 A) (@lem3508524 A B _37163)). Qed.
Lemma lem3508527 {A B : Type'} (_37163 : type627 A B) : ((_37163 = (term2170 A B)) = (term2171 A B _37163)) = ((_37163 = (term2002 A B)) = (term2176 A B _37163)).
Proof. exact (MK_COMB (@lem3508520 A B _37163) (@lem3508526 A B _37163)). Qed.
Lemma lem3508528 {A B : Type'} (_37163 : type627 A B) : (_37163 = (term2002 A B)) = (term2176 A B _37163).
Proof. exact (EQ_MP (@lem3508527 A B _37163) (@lem3508514 A B _37163)). Qed.
Lemma lem3508530 {_3571 _3575 : Type'} (s : _3575 -> _3571) (t : _3575 -> _3571) : (s = (term2166 _3571 _3575 t)) = (term2167 _3571 _3575 s t).
Proof. exact (EQ_MP (@lem19792 _3571 _3575 s t) (@lem0)). Qed.
Lemma lem3508531 {A B : Type'} (s : type527 A B) (t : type527 A B) : (s = (term2177 A B t)) = (term2178 A B s t).
Proof. exact (@lem3508530 (type672 A) (A -> B) s t). Qed.
Lemma lem3508532 {A B : Type'} (_37163 : type627 A B) (u : A -> Prop) : ((_37163 u) = (term2179 A B u)) = (term2180 A B _37163 u).
Proof. exact (@lem3508531 A B (_37163 u) (term2004 A B u)). Qed.
Lemma lem3508533 {A B : Type'} (u : A -> Prop) (f : A -> B) : (term2006 A B u f) = (term2007 A B u f).
Proof. exact (eq_refl (term2006 A B u f)). Qed.
Lemma lem3508534 {A B : Type'} (u : A -> Prop) : (term2179 A B u) = (term2004 A B u).
Proof. exact (fun_ext (fun f : A -> B => @lem3508533 A B u f)). Qed.
Lemma lem3508535 {A B : Type'} (_37163 : type627 A B) (u : A -> Prop) : (term2005 A B _37163 u) = (term2005 A B _37163 u).
Proof. exact (eq_refl (term2005 A B _37163 u)). Qed.
Lemma lem3508536 {A B : Type'} (_37163 : type627 A B) (u : A -> Prop) : ((_37163 u) = (term2179 A B u)) = ((_37163 u) = (term2004 A B u)).
Proof. exact (MK_COMB (@lem3508535 A B _37163 u) (@lem3508534 A B u)). Qed.
Lemma lem3508537 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem3508538 {A B : Type'} (_37163 : type627 A B) (u : A -> Prop) : (term2181 A B _37163 u) = (term2182 A B _37163 u).
Proof. exact (MK_COMB (@lem3508537) (@lem3508536 A B _37163 u)). Qed.
Lemma lem3508539 {A B : Type'} (u : A -> Prop) (f : A -> B) : (term2006 A B u f) = (term2007 A B u f).
Proof. exact (eq_refl (term2006 A B u f)). Qed.
Lemma lem3508540 {A B : Type'} (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) : (term2008 A B _37163 u f) = (term2008 A B _37163 u f).
Proof. exact (eq_refl (term2008 A B _37163 u f)). Qed.
Lemma lem3508541 {A B : Type'} (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) : ((_37163 u f) = (term2006 A B u f)) = ((_37163 u f) = (term2007 A B u f)).
Proof. exact (MK_COMB (@lem3508540 A B _37163 u f) (@lem3508539 A B u f)). Qed.
Lemma lem3508542 {A B : Type'} (_37163 : type627 A B) (u : A -> Prop) : (term2183 A B _37163 u) = (term2184 A B _37163 u).
Proof. exact (fun_ext (fun f : A -> B => @lem3508541 A B _37163 u f)). Qed.
Lemma lem3508543 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem3508544 {A B : Type'} (_37163 : type627 A B) (u : A -> Prop) : (term2180 A B _37163 u) = (term2185 A B _37163 u).
Proof. exact (MK_COMB (@lem3508543 A B) (@lem3508542 A B _37163 u)). Qed.
Lemma lem3508545 {A B : Type'} (_37163 : type627 A B) (u : A -> Prop) : (((_37163 u) = (term2179 A B u)) = (term2180 A B _37163 u)) = (((_37163 u) = (term2004 A B u)) = (term2185 A B _37163 u)).
Proof. exact (MK_COMB (@lem3508538 A B _37163 u) (@lem3508544 A B _37163 u)). Qed.
Lemma lem3508546 {A B : Type'} (_37163 : type627 A B) (u : A -> Prop) : ((_37163 u) = (term2004 A B u)) = (term2185 A B _37163 u).
Proof. exact (EQ_MP (@lem3508545 A B _37163 u) (@lem3508532 A B _37163 u)). Qed.
Lemma lem3508548 {_3571 _3575 : Type'} (s : _3575 -> _3571) (t : _3575 -> _3571) : (s = (term2166 _3571 _3575 t)) = (term2167 _3571 _3575 s t).
Proof. exact (EQ_MP (@lem19792 _3571 _3575 s t) (@lem0)). Qed.
Lemma lem3508549 {A : Type'} (s : type672 A) (t : type672 A) : (s = (term2186 A t)) = (term2187 A s t).
Proof. exact (@lem3508548 (A -> Prop) (A -> Prop) s t). Qed.
Lemma lem3508550 {A B : Type'} (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) : ((_37163 u f) = (term2188 A B u f)) = (term2189 A B _37163 u f).
Proof. exact (@lem3508549 A (_37163 u f) (term2007 A B u f)). Qed.
Lemma lem3508551 {A B : Type'} (u : A -> Prop) (f : A -> B) (t : A -> Prop) : (term2009 A B u f t) = (term67 A B u f t).
Proof. exact (eq_refl (term2009 A B u f t)). Qed.
Lemma lem3508552 {A B : Type'} (u : A -> Prop) (f : A -> B) : (term2188 A B u f) = (term2007 A B u f).
Proof. exact (fun_ext (fun t : A -> Prop => @lem3508551 A B u f t)). Qed.
Lemma lem3508553 {A B : Type'} (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) : (term2008 A B _37163 u f) = (term2008 A B _37163 u f).
Proof. exact (eq_refl (term2008 A B _37163 u f)). Qed.
Lemma lem3508554 {A B : Type'} (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) : ((_37163 u f) = (term2188 A B u f)) = ((_37163 u f) = (term2007 A B u f)).
Proof. exact (MK_COMB (@lem3508553 A B _37163 u f) (@lem3508552 A B u f)). Qed.
Lemma lem3508555 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem3508556 {A B : Type'} (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) : (term2190 A B _37163 u f) = (term2191 A B _37163 u f).
Proof. exact (MK_COMB (@lem3508555) (@lem3508554 A B _37163 u f)). Qed.
Lemma lem3508557 {A B : Type'} (u : A -> Prop) (f : A -> B) (t : A -> Prop) : (term2009 A B u f t) = (term67 A B u f t).
Proof. exact (eq_refl (term2009 A B u f t)). Qed.
Lemma lem3508558 {A B : Type'} (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) (t : A -> Prop) : (term2010 A B _37163 u f t) = (term2010 A B _37163 u f t).
Proof. exact (eq_refl (term2010 A B _37163 u f t)). Qed.
Lemma lem3508559 {A B : Type'} (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) (t : A -> Prop) : ((_37163 u f t) = (term2009 A B u f t)) = ((_37163 u f t) = (term67 A B u f t)).
Proof. exact (MK_COMB (@lem3508558 A B _37163 u f t) (@lem3508557 A B u f t)). Qed.
Lemma lem3508560 {A B : Type'} (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) : (term2192 A B _37163 u f) = (term2193 A B _37163 u f).
Proof. exact (fun_ext (fun t : A -> Prop => @lem3508559 A B _37163 u f t)). Qed.
Lemma lem3508561 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem3508562 {A B : Type'} (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) : (term2189 A B _37163 u f) = (term2194 A B _37163 u f).
Proof. exact (MK_COMB (@lem3508561 A) (@lem3508560 A B _37163 u f)). Qed.
Lemma lem3508563 {A B : Type'} (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) : (((_37163 u f) = (term2188 A B u f)) = (term2189 A B _37163 u f)) = (((_37163 u f) = (term2007 A B u f)) = (term2194 A B _37163 u f)).
Proof. exact (MK_COMB (@lem3508556 A B _37163 u f) (@lem3508562 A B _37163 u f)). Qed.
Lemma lem3508564 {A B : Type'} (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) : ((_37163 u f) = (term2007 A B u f)) = (term2194 A B _37163 u f).
Proof. exact (EQ_MP (@lem3508563 A B _37163 u f) (@lem3508550 A B _37163 u f)). Qed.
Lemma lem3508566 {_3571 _3575 : Type'} (s : _3575 -> _3571) (t : _3575 -> _3571) : (s = (term2166 _3571 _3575 t)) = (term2167 _3571 _3575 s t).
Proof. exact (EQ_MP (@lem19792 _3571 _3575 s t) (@lem0)). Qed.
Lemma lem3508567 {A : Type'} (s : A -> Prop) (t : A -> Prop) : (s = (term1665 A t)) = (term2195 A s t).
Proof. exact (@lem3508566 Prop A s t). Qed.
Lemma lem3508568 {A B : Type'} (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) (t : A -> Prop) : ((_37163 u f t) = (term2196 A B u f t)) = (term2197 A B _37163 u f t).
Proof. exact (@lem3508567 A (_37163 u f t) (term67 A B u f t)). Qed.
Lemma lem3508569 {A B : Type'} (GEN_PVAR_85 : A) (u : A -> Prop) (f : A -> B) (t : A -> Prop) : (term2198 A B u f t GEN_PVAR_85) = (term65 A B GEN_PVAR_85 u f t).
Proof. exact (eq_refl (term2198 A B u f t GEN_PVAR_85)). Qed.
Lemma lem3508570 {A B : Type'} (u : A -> Prop) (f : A -> B) (t : A -> Prop) : (term2196 A B u f t) = (term67 A B u f t).
Proof. exact (fun_ext (fun GEN_PVAR_85 : A => @lem3508569 A B GEN_PVAR_85 u f t)). Qed.
Lemma lem3508571 {A B : Type'} (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) (t : A -> Prop) : (term2010 A B _37163 u f t) = (term2010 A B _37163 u f t).
Proof. exact (eq_refl (term2010 A B _37163 u f t)). Qed.
Lemma lem3508572 {A B : Type'} (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) (t : A -> Prop) : ((_37163 u f t) = (term2196 A B u f t)) = ((_37163 u f t) = (term67 A B u f t)).
Proof. exact (MK_COMB (@lem3508571 A B _37163 u f t) (@lem3508570 A B u f t)). Qed.
Lemma lem3508573 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem3508574 {A B : Type'} (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) (t : A -> Prop) : (term2199 A B _37163 u f t) = (term2200 A B _37163 u f t).
Proof. exact (MK_COMB (@lem3508573) (@lem3508572 A B _37163 u f t)). Qed.
Lemma lem3508575 {A B : Type'} (GEN_PVAR_85 : A) (u : A -> Prop) (f : A -> B) (t : A -> Prop) : (term2198 A B u f t GEN_PVAR_85) = (term65 A B GEN_PVAR_85 u f t).
Proof. exact (eq_refl (term2198 A B u f t GEN_PVAR_85)). Qed.
Lemma lem3508576 {A B : Type'} (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) (t : A -> Prop) (GEN_PVAR_85 : A) : (term2201 A B _37163 u f t GEN_PVAR_85) = (term2201 A B _37163 u f t GEN_PVAR_85).
Proof. exact (eq_refl (term2201 A B _37163 u f t GEN_PVAR_85)). Qed.
Lemma lem3508577 {A B : Type'} (_37163 : type627 A B) (GEN_PVAR_85 : A) (u : A -> Prop) (f : A -> B) (t : A -> Prop) : ((_37163 u f t GEN_PVAR_85) = (term2198 A B u f t GEN_PVAR_85)) = ((_37163 u f t GEN_PVAR_85) = (term65 A B GEN_PVAR_85 u f t)).
Proof. exact (MK_COMB (@lem3508576 A B _37163 u f t GEN_PVAR_85) (@lem3508575 A B GEN_PVAR_85 u f t)). Qed.
Lemma lem3508578 {A B : Type'} (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) (t : A -> Prop) : (term2202 A B _37163 u f t) = (term2203 A B _37163 u f t).
Proof. exact (fun_ext (fun GEN_PVAR_85 : A => @lem3508577 A B _37163 GEN_PVAR_85 u f t)). Qed.
Lemma lem3508579 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem3508580 {A B : Type'} (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) (t : A -> Prop) : (term2197 A B _37163 u f t) = (term2204 A B _37163 u f t).
Proof. exact (MK_COMB (@lem3508579 A) (@lem3508578 A B _37163 u f t)). Qed.
Lemma lem3508581 {A B : Type'} (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) (t : A -> Prop) : (((_37163 u f t) = (term2196 A B u f t)) = (term2197 A B _37163 u f t)) = (((_37163 u f t) = (term67 A B u f t)) = (term2204 A B _37163 u f t)).
Proof. exact (MK_COMB (@lem3508574 A B _37163 u f t) (@lem3508580 A B _37163 u f t)). Qed.
Lemma lem3508582 {A B : Type'} (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) (t : A -> Prop) : ((_37163 u f t) = (term67 A B u f t)) = (term2204 A B _37163 u f t).
Proof. exact (EQ_MP (@lem3508581 A B _37163 u f t) (@lem3508568 A B _37163 u f t)). Qed.
Lemma lem3508583 {A B : Type'} (_37163 : type627 A B) (GEN_PVAR_85 : A) (u : A -> Prop) (f : A -> B) (t : A -> Prop) : ((_37163 u f t GEN_PVAR_85) = (term65 A B GEN_PVAR_85 u f t)) = ((_37163 u f t GEN_PVAR_85) = (term65 A B GEN_PVAR_85 u f t)).
Proof. exact (eq_refl ((_37163 u f t GEN_PVAR_85) = (term65 A B GEN_PVAR_85 u f t))). Qed.
Lemma lem3508584 {A B : Type'} (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) (t : A -> Prop) : (term2203 A B _37163 u f t) = (term2203 A B _37163 u f t).
Proof. exact (fun_ext (fun GEN_PVAR_85 : A => @lem3508583 A B _37163 GEN_PVAR_85 u f t)). Qed.
Lemma lem3508585 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem3508586 {A B : Type'} (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) (t : A -> Prop) : (term2204 A B _37163 u f t) = (term2204 A B _37163 u f t).
Proof. exact (MK_COMB (@lem3508585 A) (@lem3508584 A B _37163 u f t)). Qed.
Lemma lem3508587 {A B : Type'} (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) (t : A -> Prop) : ((_37163 u f t) = (term67 A B u f t)) = (term2204 A B _37163 u f t).
Proof. exact (TRANS (@lem3508582 A B _37163 u f t) (@lem3508586 A B _37163 u f t)). Qed.
Lemma lem3508588 {A B : Type'} (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) : (term2193 A B _37163 u f) = (term2205 A B _37163 u f).
Proof. exact (fun_ext (fun t : A -> Prop => @lem3508587 A B _37163 u f t)). Qed.
Lemma lem3508589 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem3508590 {A B : Type'} (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) : (term2194 A B _37163 u f) = (term2206 A B _37163 u f).
Proof. exact (MK_COMB (@lem3508589 A) (@lem3508588 A B _37163 u f)). Qed.
Lemma lem3508591 {A B : Type'} (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) : ((_37163 u f) = (term2007 A B u f)) = (term2206 A B _37163 u f).
Proof. exact (TRANS (@lem3508564 A B _37163 u f) (@lem3508590 A B _37163 u f)). Qed.
Lemma lem3508592 {A B : Type'} (_37163 : type627 A B) (u : A -> Prop) : (term2184 A B _37163 u) = (term2207 A B _37163 u).
Proof. exact (fun_ext (fun f : A -> B => @lem3508591 A B _37163 u f)). Qed.
Lemma lem3508593 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem3508594 {A B : Type'} (_37163 : type627 A B) (u : A -> Prop) : (term2185 A B _37163 u) = (term2208 A B _37163 u).
Proof. exact (MK_COMB (@lem3508593 A B) (@lem3508592 A B _37163 u)). Qed.
Lemma lem3508595 {A B : Type'} (_37163 : type627 A B) (u : A -> Prop) : ((_37163 u) = (term2004 A B u)) = (term2208 A B _37163 u).
Proof. exact (TRANS (@lem3508546 A B _37163 u) (@lem3508594 A B _37163 u)). Qed.
Lemma lem3508596 {A B : Type'} (_37163 : type627 A B) : (term2175 A B _37163) = (term2209 A B _37163).
Proof. exact (fun_ext (fun u : A -> Prop => @lem3508595 A B _37163 u)). Qed.
Lemma lem3508597 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem3508598 {A B : Type'} (_37163 : type627 A B) : (term2176 A B _37163) = (term2210 A B _37163).
Proof. exact (MK_COMB (@lem3508597 A) (@lem3508596 A B _37163)). Qed.
Lemma lem3508599 {A B : Type'} (_37163 : type627 A B) : (_37163 = (term2002 A B)) = (term2210 A B _37163).
Proof. exact (TRANS (@lem3508528 A B _37163) (@lem3508598 A B _37163)). Qed.
Lemma lem3508600 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem3508601 {A B : Type'} (_37163 : type627 A B) : (term2152 A B _37163) = (term2211 A B _37163).
Proof. exact (MK_COMB (@lem3508600) (@lem3508599 A B _37163)). Qed.
Lemma lem3508602 {_90715 _90724 A B : Type'} (_37163 : type627 A B) : (term2143 _90715 _90724 A B _37163) = (term2143 _90715 _90724 A B _37163).
Proof. exact (eq_refl (term2143 _90715 _90724 A B _37163)). Qed.
Lemma lem3508603 {_90715 _90724 A B : Type'} (_37163 : type627 A B) : (term2160 _90715 _90724 A B _37163) = (term2212 _90715 _90724 A B _37163).
Proof. exact (MK_COMB (@lem3508601 A B _37163) (@lem3508602 _90715 _90724 A B _37163)). Qed.
Lemma lem3508604 {_90715 _90724 A B : Type'} : (term2162 _90715 _90724 A B) = (term2213 _90715 _90724 A B).
Proof. exact (fun_ext (fun _37163 : type627 A B => @lem3508603 _90715 _90724 A B _37163)). Qed.
Lemma lem3508605 {A B : Type'} : (@all ((A -> Prop) -> (A -> B) -> (A -> Prop) -> A -> Prop)) = (@all ((A -> Prop) -> (A -> B) -> (A -> Prop) -> A -> Prop)).
Proof. exact (eq_refl (@all ((A -> Prop) -> (A -> B) -> (A -> Prop) -> A -> Prop))). Qed.
Lemma lem3508606 {_90715 _90724 A B : Type'} : (term2164 _90715 _90724 A B) = (term2214 _90715 _90724 A B).
Proof. exact (MK_COMB (@lem3508605 A B) (@lem3508604 _90715 _90724 A B)). Qed.
Lemma lem3508607 {_90715 _90724 A B : Type'} : (term2151 _90715 _90724 A B) = (term2151 _90715 _90724 A B).
Proof. exact (eq_refl (term2151 _90715 _90724 A B)). Qed.
Lemma lem3508608 {_90715 _90724 A B : Type'} : ((term2001 _90715 _90724 A B) = (term2164 _90715 _90724 A B)) = ((term2001 _90715 _90724 A B) = (term2214 _90715 _90724 A B)).
Proof. exact (MK_COMB (@lem3508607 _90715 _90724 A B) (@lem3508606 _90715 _90724 A B)). Qed.
Lemma lem3508609 {_90715 _90724 A B : Type'} : (term2001 _90715 _90724 A B) = (term2214 _90715 _90724 A B).
Proof. exact (EQ_MP (@lem3508608 _90715 _90724 A B) (@lem3508510 _90715 _90724 A B)). Qed.
Lemma lem3508610 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) (h1 : _37164 = (term2002 _90715 _90724)) : _37164 = (term2002 _90715 _90724).
Proof. exact (h1). Qed.
Lemma lem3508611 {_90715 : Type'} (u : _90715 -> Prop) : u = u.
Proof. exact (eq_refl u). Qed.
Lemma lem3508612 {_90715 _90724 : Type'} (u : _90715 -> Prop) (_37164 : type627 _90715 _90724) (h1 : _37164 = (term2002 _90715 _90724)) : (_37164 u) = (term2003 _90715 _90724 u).
Proof. exact (MK_COMB (@lem3508610 _90715 _90724 _37164 h1) (@lem3508611 _90715 u)). Qed.
Lemma lem3508613 {_90715 _90724 : Type'} (u : _90715 -> Prop) : (term2003 _90715 _90724 u) = (term2004 _90715 _90724 u).
Proof. exact (eq_refl (term2003 _90715 _90724 u)). Qed.
Lemma lem3508614 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) (u : _90715 -> Prop) : (term2005 _90715 _90724 _37164 u) = (term2005 _90715 _90724 _37164 u).
Proof. exact (eq_refl (term2005 _90715 _90724 _37164 u)). Qed.
Lemma lem3508615 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) (u : _90715 -> Prop) : ((_37164 u) = (term2003 _90715 _90724 u)) = ((_37164 u) = (term2004 _90715 _90724 u)).
Proof. exact (MK_COMB (@lem3508614 _90715 _90724 _37164 u) (@lem3508613 _90715 _90724 u)). Qed.
Lemma lem3508616 {_90715 _90724 : Type'} (u : _90715 -> Prop) (_37164 : type627 _90715 _90724) (h1 : _37164 = (term2002 _90715 _90724)) : (_37164 u) = (term2004 _90715 _90724 u).
Proof. exact (EQ_MP (@lem3508615 _90715 _90724 _37164 u) (@lem3508612 _90715 _90724 u _37164 h1)). Qed.
Lemma lem3508617 {_90715 _90724 : Type'} (f : _90715 -> _90724) : f = f.
Proof. exact (eq_refl f). Qed.
Lemma lem3508618 {_90715 _90724 : Type'} (u : _90715 -> Prop) (f : _90715 -> _90724) (_37164 : type627 _90715 _90724) (h1 : _37164 = (term2002 _90715 _90724)) : (_37164 u f) = (term2006 _90715 _90724 u f).
Proof. exact (MK_COMB (@lem3508616 _90715 _90724 u _37164 h1) (@lem3508617 _90715 _90724 f)). Qed.
Lemma lem3508619 {_90715 _90724 : Type'} (u : _90715 -> Prop) (f : _90715 -> _90724) : (term2006 _90715 _90724 u f) = (term2007 _90715 _90724 u f).
Proof. exact (eq_refl (term2006 _90715 _90724 u f)). Qed.
Lemma lem3508620 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) (u : _90715 -> Prop) (f : _90715 -> _90724) : (term2008 _90715 _90724 _37164 u f) = (term2008 _90715 _90724 _37164 u f).
Proof. exact (eq_refl (term2008 _90715 _90724 _37164 u f)). Qed.
Lemma lem3508621 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) (u : _90715 -> Prop) (f : _90715 -> _90724) : ((_37164 u f) = (term2006 _90715 _90724 u f)) = ((_37164 u f) = (term2007 _90715 _90724 u f)).
Proof. exact (MK_COMB (@lem3508620 _90715 _90724 _37164 u f) (@lem3508619 _90715 _90724 u f)). Qed.
Lemma lem3508622 {_90715 _90724 : Type'} (u : _90715 -> Prop) (f : _90715 -> _90724) (_37164 : type627 _90715 _90724) (h1 : _37164 = (term2002 _90715 _90724)) : (_37164 u f) = (term2007 _90715 _90724 u f).
Proof. exact (EQ_MP (@lem3508621 _90715 _90724 _37164 u f) (@lem3508618 _90715 _90724 u f _37164 h1)). Qed.
Lemma lem3508623 {_90715 : Type'} (t : _90715 -> Prop) : t = t.
Proof. exact (eq_refl t). Qed.
Lemma lem3508624 {_90715 _90724 : Type'} (u : _90715 -> Prop) (f : _90715 -> _90724) (t : _90715 -> Prop) (_37164 : type627 _90715 _90724) (h1 : _37164 = (term2002 _90715 _90724)) : (_37164 u f t) = (term2009 _90715 _90724 u f t).
Proof. exact (MK_COMB (@lem3508622 _90715 _90724 u f _37164 h1) (@lem3508623 _90715 t)). Qed.
Lemma lem3508625 {_90715 _90724 : Type'} (u : _90715 -> Prop) (f : _90715 -> _90724) (t : _90715 -> Prop) : (term2009 _90715 _90724 u f t) = (term67 _90715 _90724 u f t).
Proof. exact (eq_refl (term2009 _90715 _90724 u f t)). Qed.
Lemma lem3508626 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) (u : _90715 -> Prop) (f : _90715 -> _90724) (t : _90715 -> Prop) : (term2010 _90715 _90724 _37164 u f t) = (term2010 _90715 _90724 _37164 u f t).
Proof. exact (eq_refl (term2010 _90715 _90724 _37164 u f t)). Qed.
Lemma lem3508627 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) (u : _90715 -> Prop) (f : _90715 -> _90724) (t : _90715 -> Prop) : ((_37164 u f t) = (term2009 _90715 _90724 u f t)) = ((_37164 u f t) = (term67 _90715 _90724 u f t)).
Proof. exact (MK_COMB (@lem3508626 _90715 _90724 _37164 u f t) (@lem3508625 _90715 _90724 u f t)). Qed.
Lemma lem3508628 {_90715 _90724 : Type'} (u : _90715 -> Prop) (f : _90715 -> _90724) (t : _90715 -> Prop) (_37164 : type627 _90715 _90724) (h1 : _37164 = (term2002 _90715 _90724)) : (_37164 u f t) = (term67 _90715 _90724 u f t).
Proof. exact (EQ_MP (@lem3508627 _90715 _90724 _37164 u f t) (@lem3508624 _90715 _90724 u f t _37164 h1)). Qed.
Lemma lem3508648 {A B : Type'} (f : type678 A B) (g : type180 A) : ((term2011 A B f g) = (term2012 A B f g)) = ((term2011 A B f g) = (term2012 A B f g)).
Proof. exact (eq_refl ((term2011 A B f g) = (term2012 A B f g))). Qed.
Lemma lem3508649 {A : Type'} (t : type686 A) : t = t.
Proof. exact (eq_refl t). Qed.
Lemma lem3508677 {A B : Type'} (GEN_PVAR_84 : A -> Prop) (u : type686 A) (f : type678 A B) (t : type686 A) (x : A -> Prop) : (term2013 A B GEN_PVAR_84 u f t x) = (term2013 A B GEN_PVAR_84 u f t x).
Proof. exact (eq_refl (term2013 A B GEN_PVAR_84 u f t x)). Qed.
Lemma lem3508678 {A B : Type'} (GEN_PVAR_84 : A -> Prop) (u : type686 A) (f : type678 A B) (t : type686 A) : (term2014 A B GEN_PVAR_84 u f t) = (term2014 A B GEN_PVAR_84 u f t).
Proof. exact (fun_ext (fun x : A -> Prop => @lem3508677 A B GEN_PVAR_84 u f t x)). Qed.
Lemma lem3508679 {A : Type'} : (@ex (A -> Prop)) = (@ex (A -> Prop)).
Proof. exact (eq_refl (@ex (A -> Prop))). Qed.
Lemma lem3508680 {A B : Type'} (GEN_PVAR_84 : A -> Prop) (u : type686 A) (f : type678 A B) (t : type686 A) : (term2015 A B GEN_PVAR_84 u f t) = (term2015 A B GEN_PVAR_84 u f t).
Proof. exact (MK_COMB (@lem3508679 A) (@lem3508678 A B GEN_PVAR_84 u f t)). Qed.
Lemma lem3508681 {A B : Type'} (u : type686 A) (f : type678 A B) (t : type686 A) : (term2016 A B u f t) = (term2016 A B u f t).
Proof. exact (fun_ext (fun GEN_PVAR_84 : A -> Prop => @lem3508680 A B GEN_PVAR_84 u f t)). Qed.
Lemma lem3508682 {A : Type'} : (@GSPEC (A -> Prop)) = (@GSPEC (A -> Prop)).
Proof. exact (eq_refl (@GSPEC (A -> Prop))). Qed.
Lemma lem3508683 {A B : Type'} (u : type686 A) (f : type678 A B) (t : type686 A) : (term2017 A B u f t) = (term2017 A B u f t).
Proof. exact (MK_COMB (@lem3508682 A) (@lem3508681 A B u f t)). Qed.
Lemma lem3508684 {A : Type'} : (@SUBSET (A -> Prop)) = (@SUBSET (A -> Prop)).
Proof. exact (eq_refl (@SUBSET (A -> Prop))). Qed.
Lemma lem3508685 {A B : Type'} (u : type686 A) (f : type678 A B) (t : type686 A) : (term2018 A B u f t) = (term2018 A B u f t).
Proof. exact (MK_COMB (@lem3508684 A) (@lem3508683 A B u f t)). Qed.
Lemma lem3508686 {A B : Type'} (u : type686 A) (f : type678 A B) (t : type686 A) : (term2019 A B u f t) = (term2019 A B u f t).
Proof. exact (MK_COMB (@lem3508685 A B u f t) (@lem3508649 A t)). Qed.
Lemma lem3508693 {A : Type'} (t : type686 A) (u : type686 A) : (term2020 A t u) = (term2020 A t u).
Proof. exact (eq_refl (term2020 A t u)). Qed.
Lemma lem3508694 {A B : Type'} (u : type686 A) (f : type678 A B) (t : type686 A) : (term2021 A B u f t) = (term2021 A B u f t).
Proof. exact (MK_COMB (@lem3508693 A t u) (@lem3508686 A B u f t)). Qed.
Lemma lem3508701 {A : Type'} (t : type686 A) (g : type180 A) : (term2022 A t g) = (term2022 A t g).
Proof. exact (eq_refl (term2022 A t g)). Qed.
Lemma lem3508702 {A B : Type'} (g : type180 A) (u : type686 A) (f : type678 A B) (t : type686 A) : (term2023 A B g u f t) = (term2023 A B g u f t).
Proof. exact (MK_COMB (@lem3508701 A t g) (@lem3508694 A B u f t)). Qed.
Lemma lem3508703 {A B : Type'} (g : type180 A) (u : type686 A) (f : type678 A B) : (term2024 A B g u f) = (term2024 A B g u f).
Proof. exact (fun_ext (fun t : type686 A => @lem3508702 A B g u f t)). Qed.
Lemma lem3508704 {A : Type'} : (@all ((A -> Prop) -> Prop)) = (@all ((A -> Prop) -> Prop)).
Proof. exact (eq_refl (@all ((A -> Prop) -> Prop))). Qed.
Lemma lem3508705 {A B : Type'} (g : type180 A) (u : type686 A) (f : type678 A B) : (term2025 A B g u f) = (term2025 A B g u f).
Proof. exact (MK_COMB (@lem3508704 A) (@lem3508703 A B g u f)). Qed.
Lemma lem3508714 {A : Type'} (g : type180 A) : (term2026 A g) = (term2026 A g).
Proof. exact (eq_refl (term2026 A g)). Qed.
Lemma lem3508715 {A B : Type'} (g : type180 A) (u : type686 A) (f : type678 A B) : (term2027 A B g u f) = (term2027 A B g u f).
Proof. exact (MK_COMB (@lem3508714 A g) (@lem3508705 A B g u f)). Qed.
Lemma lem3508716 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem3508717 {A B : Type'} (g : type180 A) (u : type686 A) (f : type678 A B) : (term2028 A B g u f) = (term2028 A B g u f).
Proof. exact (MK_COMB (@lem3508716) (@lem3508715 A B g u f)). Qed.
Lemma lem3508718 {A B : Type'} (u : type686 A) (f : type678 A B) (g : type180 A) : (term2029 A B u f g) = (term2029 A B u f g).
Proof. exact (MK_COMB (@lem3508717 A B g u f) (@lem3508648 A B f g)). Qed.
Lemma lem3508719 {A B : Type'} (u : type686 A) (f : type678 A B) : (term2030 A B u f) = (term2030 A B u f).
Proof. exact (fun_ext (fun g : type180 A => @lem3508718 A B u f g)). Qed.
Lemma lem3508720 {A : Type'} : (@all (((A -> Prop) -> Prop) -> Prop)) = (@all (((A -> Prop) -> Prop) -> Prop)).
Proof. exact (eq_refl (@all (((A -> Prop) -> Prop) -> Prop))). Qed.
Lemma lem3508721 {A B : Type'} (u : type686 A) (f : type678 A B) : (term2031 A B u f) = (term2031 A B u f).
Proof. exact (MK_COMB (@lem3508720 A) (@lem3508719 A B u f)). Qed.
Lemma lem3508722 {A B : Type'} (u : type686 A) : (term2032 A B u) = (term2032 A B u).
Proof. exact (fun_ext (fun f : type678 A B => @lem3508721 A B u f)). Qed.
Lemma lem3508723 {A B : Type'} : (@all ((A -> Prop) -> B -> Prop)) = (@all ((A -> Prop) -> B -> Prop)).
Proof. exact (eq_refl (@all ((A -> Prop) -> B -> Prop))). Qed.
Lemma lem3508724 {A B : Type'} (u : type686 A) : (term2033 A B u) = (term2033 A B u).
Proof. exact (MK_COMB (@lem3508723 A B) (@lem3508722 A B u)). Qed.
Lemma lem3508725 {A B : Type'} : (term2034 A B) = (term2034 A B).
Proof. exact (fun_ext (fun u : type686 A => @lem3508724 A B u)). Qed.
Lemma lem3508726 {A : Type'} : (@all ((A -> Prop) -> Prop)) = (@all ((A -> Prop) -> Prop)).
Proof. exact (eq_refl (@all ((A -> Prop) -> Prop))). Qed.
Lemma lem3508727 {A B : Type'} : (term1961 A B) = (term1961 A B).
Proof. exact (MK_COMB (@lem3508726 A) (@lem3508725 A B)). Qed.
Lemma lem3508728 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem3508729 {A B : Type'} : (term1967 A B) = (term1967 A B).
Proof. exact (MK_COMB (@lem3508728) (@lem3508727 A B)). Qed.
Lemma lem3508748 {_90724 A : Type'} (f : type862 _90724 A) (g : type180 A) : ((term2035 _90724 A f g) = (term2036 _90724 A f g)) = ((term2035 _90724 A f g) = (term2036 _90724 A f g)).
Proof. exact (eq_refl ((term2035 _90724 A f g) = (term2036 _90724 A f g))). Qed.
Lemma lem3508749 {A : Type'} (t : type686 A) : t = t.
Proof. exact (eq_refl t). Qed.
Lemma lem3508777 {_90724 A : Type'} (GEN_PVAR_84 : A -> Prop) (u : type686 A) (f : type862 _90724 A) (t : type686 A) (x : A -> Prop) : (term2037 _90724 A GEN_PVAR_84 u f t x) = (term2037 _90724 A GEN_PVAR_84 u f t x).
Proof. exact (eq_refl (term2037 _90724 A GEN_PVAR_84 u f t x)). Qed.
Lemma lem3508778 {_90724 A : Type'} (GEN_PVAR_84 : A -> Prop) (u : type686 A) (f : type862 _90724 A) (t : type686 A) : (term2038 _90724 A GEN_PVAR_84 u f t) = (term2038 _90724 A GEN_PVAR_84 u f t).
Proof. exact (fun_ext (fun x : A -> Prop => @lem3508777 _90724 A GEN_PVAR_84 u f t x)). Qed.
Lemma lem3508779 {A : Type'} : (@ex (A -> Prop)) = (@ex (A -> Prop)).
Proof. exact (eq_refl (@ex (A -> Prop))). Qed.
Lemma lem3508780 {_90724 A : Type'} (GEN_PVAR_84 : A -> Prop) (u : type686 A) (f : type862 _90724 A) (t : type686 A) : (term2039 _90724 A GEN_PVAR_84 u f t) = (term2039 _90724 A GEN_PVAR_84 u f t).
Proof. exact (MK_COMB (@lem3508779 A) (@lem3508778 _90724 A GEN_PVAR_84 u f t)). Qed.
Lemma lem3508781 {_90724 A : Type'} (u : type686 A) (f : type862 _90724 A) (t : type686 A) : (term2040 _90724 A u f t) = (term2040 _90724 A u f t).
Proof. exact (fun_ext (fun GEN_PVAR_84 : A -> Prop => @lem3508780 _90724 A GEN_PVAR_84 u f t)). Qed.
Lemma lem3508782 {A : Type'} : (@GSPEC (A -> Prop)) = (@GSPEC (A -> Prop)).
Proof. exact (eq_refl (@GSPEC (A -> Prop))). Qed.
Lemma lem3508783 {_90724 A : Type'} (u : type686 A) (f : type862 _90724 A) (t : type686 A) : (term2041 _90724 A u f t) = (term2041 _90724 A u f t).
Proof. exact (MK_COMB (@lem3508782 A) (@lem3508781 _90724 A u f t)). Qed.
Lemma lem3508784 {A : Type'} : (@SUBSET (A -> Prop)) = (@SUBSET (A -> Prop)).
Proof. exact (eq_refl (@SUBSET (A -> Prop))). Qed.
Lemma lem3508785 {_90724 A : Type'} (u : type686 A) (f : type862 _90724 A) (t : type686 A) : (term2042 _90724 A u f t) = (term2042 _90724 A u f t).
Proof. exact (MK_COMB (@lem3508784 A) (@lem3508783 _90724 A u f t)). Qed.
Lemma lem3508786 {_90724 A : Type'} (u : type686 A) (f : type862 _90724 A) (t : type686 A) : (term2043 _90724 A u f t) = (term2043 _90724 A u f t).
Proof. exact (MK_COMB (@lem3508785 _90724 A u f t) (@lem3508749 A t)). Qed.
Lemma lem3508793 {A : Type'} (t : type686 A) (u : type686 A) : (term2020 A t u) = (term2020 A t u).
Proof. exact (eq_refl (term2020 A t u)). Qed.
Lemma lem3508794 {_90724 A : Type'} (u : type686 A) (f : type862 _90724 A) (t : type686 A) : (term2044 _90724 A u f t) = (term2044 _90724 A u f t).
Proof. exact (MK_COMB (@lem3508793 A t u) (@lem3508786 _90724 A u f t)). Qed.
Lemma lem3508801 {A : Type'} (t : type686 A) (g : type180 A) : (term2022 A t g) = (term2022 A t g).
Proof. exact (eq_refl (term2022 A t g)). Qed.
Lemma lem3508802 {_90724 A : Type'} (g : type180 A) (u : type686 A) (f : type862 _90724 A) (t : type686 A) : (term2045 _90724 A g u f t) = (term2045 _90724 A g u f t).
Proof. exact (MK_COMB (@lem3508801 A t g) (@lem3508794 _90724 A u f t)). Qed.
Lemma lem3508803 {_90724 A : Type'} (g : type180 A) (u : type686 A) (f : type862 _90724 A) : (term2046 _90724 A g u f) = (term2046 _90724 A g u f).
Proof. exact (fun_ext (fun t : type686 A => @lem3508802 _90724 A g u f t)). Qed.
Lemma lem3508804 {A : Type'} : (@all ((A -> Prop) -> Prop)) = (@all ((A -> Prop) -> Prop)).
Proof. exact (eq_refl (@all ((A -> Prop) -> Prop))). Qed.
Lemma lem3508805 {_90724 A : Type'} (g : type180 A) (u : type686 A) (f : type862 _90724 A) : (term2047 _90724 A g u f) = (term2047 _90724 A g u f).
Proof. exact (MK_COMB (@lem3508804 A) (@lem3508803 _90724 A g u f)). Qed.
Lemma lem3508814 {A : Type'} (g : type180 A) : (term2026 A g) = (term2026 A g).
Proof. exact (eq_refl (term2026 A g)). Qed.
Lemma lem3508815 {_90724 A : Type'} (g : type180 A) (u : type686 A) (f : type862 _90724 A) : (term2048 _90724 A g u f) = (term2048 _90724 A g u f).
Proof. exact (MK_COMB (@lem3508814 A g) (@lem3508805 _90724 A g u f)). Qed.
Lemma lem3508816 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem3508817 {_90724 A : Type'} (g : type180 A) (u : type686 A) (f : type862 _90724 A) : (term2049 _90724 A g u f) = (term2049 _90724 A g u f).
Proof. exact (MK_COMB (@lem3508816) (@lem3508815 _90724 A g u f)). Qed.
Lemma lem3508818 {_90724 A : Type'} (u : type686 A) (f : type862 _90724 A) (g : type180 A) : (term2050 _90724 A u f g) = (term2050 _90724 A u f g).
Proof. exact (MK_COMB (@lem3508817 _90724 A g u f) (@lem3508748 _90724 A f g)). Qed.
Lemma lem3508819 {_90724 A : Type'} (u : type686 A) (f : type862 _90724 A) : (term2051 _90724 A u f) = (term2051 _90724 A u f).
Proof. exact (fun_ext (fun g : type180 A => @lem3508818 _90724 A u f g)). Qed.
Lemma lem3508820 {A : Type'} : (@all (((A -> Prop) -> Prop) -> Prop)) = (@all (((A -> Prop) -> Prop) -> Prop)).
Proof. exact (eq_refl (@all (((A -> Prop) -> Prop) -> Prop))). Qed.
Lemma lem3508821 {_90724 A : Type'} (u : type686 A) (f : type862 _90724 A) : (term2052 _90724 A u f) = (term2052 _90724 A u f).
Proof. exact (MK_COMB (@lem3508820 A) (@lem3508819 _90724 A u f)). Qed.
Lemma lem3508822 {_90724 A : Type'} (u : type686 A) : (term2053 _90724 A u) = (term2053 _90724 A u).
Proof. exact (fun_ext (fun f : type862 _90724 A => @lem3508821 _90724 A u f)). Qed.
Lemma lem3508823 {_90724 A : Type'} : (@all ((A -> Prop) -> _90724)) = (@all ((A -> Prop) -> _90724)).
Proof. exact (eq_refl (@all ((A -> Prop) -> _90724))). Qed.
Lemma lem3508824 {_90724 A : Type'} (u : type686 A) : (term2054 _90724 A u) = (term2054 _90724 A u).
Proof. exact (MK_COMB (@lem3508823 _90724 A) (@lem3508822 _90724 A u)). Qed.
Lemma lem3508825 {_90724 A : Type'} : (term2055 _90724 A) = (term2055 _90724 A).
Proof. exact (fun_ext (fun u : type686 A => @lem3508824 _90724 A u)). Qed.
Lemma lem3508826 {A : Type'} : (@all ((A -> Prop) -> Prop)) = (@all ((A -> Prop) -> Prop)).
Proof. exact (eq_refl (@all ((A -> Prop) -> Prop))). Qed.
Lemma lem3508827 {_90724 A : Type'} : (term1959 _90724 A) = (term1959 _90724 A).
Proof. exact (MK_COMB (@lem3508826 A) (@lem3508825 _90724 A)). Qed.
Lemma lem3508828 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem3508829 {_90724 A : Type'} : (term1968 _90724 A) = (term1968 _90724 A).
Proof. exact (MK_COMB (@lem3508828) (@lem3508827 _90724 A)). Qed.
Lemma lem3508830 {_90724 A B : Type'} : (term1970 _90724 A B) = (term1970 _90724 A B).
Proof. exact (MK_COMB (@lem3508829 _90724 A) (@lem3508729 A B)). Qed.
Lemma lem3508849 {_90724 B : Type'} (f : B -> _90724) (g : type686 B) : ((term2056 _90724 B f g) = (term2057 _90724 B f g)) = ((term2056 _90724 B f g) = (term2057 _90724 B f g)).
Proof. exact (eq_refl ((term2056 _90724 B f g) = (term2057 _90724 B f g))). Qed.
Lemma lem3508850 {B : Type'} (t : B -> Prop) : t = t.
Proof. exact (eq_refl t). Qed.
Lemma lem3508878 {_90724 B : Type'} (GEN_PVAR_84 : B) (u : B -> Prop) (f : B -> _90724) (t : B -> Prop) (x : B) : (term2058 _90724 B GEN_PVAR_84 u f t x) = (term2058 _90724 B GEN_PVAR_84 u f t x).
Proof. exact (eq_refl (term2058 _90724 B GEN_PVAR_84 u f t x)). Qed.
Lemma lem3508879 {_90724 B : Type'} (GEN_PVAR_84 : B) (u : B -> Prop) (f : B -> _90724) (t : B -> Prop) : (term2059 _90724 B GEN_PVAR_84 u f t) = (term2059 _90724 B GEN_PVAR_84 u f t).
Proof. exact (fun_ext (fun x : B => @lem3508878 _90724 B GEN_PVAR_84 u f t x)). Qed.
Lemma lem3508880 {B : Type'} : (@ex B) = (@ex B).
Proof. exact (eq_refl (@ex B)). Qed.
Lemma lem3508881 {_90724 B : Type'} (GEN_PVAR_84 : B) (u : B -> Prop) (f : B -> _90724) (t : B -> Prop) : (term2060 _90724 B GEN_PVAR_84 u f t) = (term2060 _90724 B GEN_PVAR_84 u f t).
Proof. exact (MK_COMB (@lem3508880 B) (@lem3508879 _90724 B GEN_PVAR_84 u f t)). Qed.
Lemma lem3508882 {_90724 B : Type'} (u : B -> Prop) (f : B -> _90724) (t : B -> Prop) : (term2061 _90724 B u f t) = (term2061 _90724 B u f t).
Proof. exact (fun_ext (fun GEN_PVAR_84 : B => @lem3508881 _90724 B GEN_PVAR_84 u f t)). Qed.
Lemma lem3508883 {B : Type'} : (@GSPEC B) = (@GSPEC B).
Proof. exact (eq_refl (@GSPEC B)). Qed.
Lemma lem3508884 {_90724 B : Type'} (u : B -> Prop) (f : B -> _90724) (t : B -> Prop) : (term2062 _90724 B u f t) = (term2062 _90724 B u f t).
Proof. exact (MK_COMB (@lem3508883 B) (@lem3508882 _90724 B u f t)). Qed.
Lemma lem3508885 {B : Type'} : (@SUBSET B) = (@SUBSET B).
Proof. exact (eq_refl (@SUBSET B)). Qed.
Lemma lem3508886 {_90724 B : Type'} (u : B -> Prop) (f : B -> _90724) (t : B -> Prop) : (term2063 _90724 B u f t) = (term2063 _90724 B u f t).
Proof. exact (MK_COMB (@lem3508885 B) (@lem3508884 _90724 B u f t)). Qed.
Lemma lem3508887 {_90724 B : Type'} (u : B -> Prop) (f : B -> _90724) (t : B -> Prop) : (term2064 _90724 B u f t) = (term2064 _90724 B u f t).
Proof. exact (MK_COMB (@lem3508886 _90724 B u f t) (@lem3508850 B t)). Qed.
Lemma lem3508894 {B : Type'} (t : B -> Prop) (u : B -> Prop) : (term75 B t u) = (term75 B t u).
Proof. exact (eq_refl (term75 B t u)). Qed.
Lemma lem3508895 {_90724 B : Type'} (u : B -> Prop) (f : B -> _90724) (t : B -> Prop) : (term2065 _90724 B u f t) = (term2065 _90724 B u f t).
Proof. exact (MK_COMB (@lem3508894 B t u) (@lem3508887 _90724 B u f t)). Qed.
Lemma lem3508902 {B : Type'} (t : B -> Prop) (g : type686 B) : (term78 B t g) = (term78 B t g).
Proof. exact (eq_refl (term78 B t g)). Qed.
Lemma lem3508903 {_90724 B : Type'} (g : type686 B) (u : B -> Prop) (f : B -> _90724) (t : B -> Prop) : (term2066 _90724 B g u f t) = (term2066 _90724 B g u f t).
Proof. exact (MK_COMB (@lem3508902 B t g) (@lem3508895 _90724 B u f t)). Qed.
Lemma lem3508904 {_90724 B : Type'} (g : type686 B) (u : B -> Prop) (f : B -> _90724) : (term2067 _90724 B g u f) = (term2067 _90724 B g u f).
Proof. exact (fun_ext (fun t : B -> Prop => @lem3508903 _90724 B g u f t)). Qed.
Lemma lem3508905 {B : Type'} : (@all (B -> Prop)) = (@all (B -> Prop)).
Proof. exact (eq_refl (@all (B -> Prop))). Qed.
Lemma lem3508906 {_90724 B : Type'} (g : type686 B) (u : B -> Prop) (f : B -> _90724) : (term2068 _90724 B g u f) = (term2068 _90724 B g u f).
Proof. exact (MK_COMB (@lem3508905 B) (@lem3508904 _90724 B g u f)). Qed.
Lemma lem3508915 {B : Type'} (g : type686 B) : (term42 B g) = (term42 B g).
Proof. exact (eq_refl (term42 B g)). Qed.
Lemma lem3508916 {_90724 B : Type'} (g : type686 B) (u : B -> Prop) (f : B -> _90724) : (term2069 _90724 B g u f) = (term2069 _90724 B g u f).
Proof. exact (MK_COMB (@lem3508915 B g) (@lem3508906 _90724 B g u f)). Qed.
Lemma lem3508917 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem3508918 {_90724 B : Type'} (g : type686 B) (u : B -> Prop) (f : B -> _90724) : (term2070 _90724 B g u f) = (term2070 _90724 B g u f).
Proof. exact (MK_COMB (@lem3508917) (@lem3508916 _90724 B g u f)). Qed.
Lemma lem3508919 {_90724 B : Type'} (u : B -> Prop) (f : B -> _90724) (g : type686 B) : (term2071 _90724 B u f g) = (term2071 _90724 B u f g).
Proof. exact (MK_COMB (@lem3508918 _90724 B g u f) (@lem3508849 _90724 B f g)). Qed.
Lemma lem3508920 {_90724 B : Type'} (u : B -> Prop) (f : B -> _90724) : (term2072 _90724 B u f) = (term2072 _90724 B u f).
Proof. exact (fun_ext (fun g : type686 B => @lem3508919 _90724 B u f g)). Qed.
Lemma lem3508921 {B : Type'} : (@all ((B -> Prop) -> Prop)) = (@all ((B -> Prop) -> Prop)).
Proof. exact (eq_refl (@all ((B -> Prop) -> Prop))). Qed.
Lemma lem3508922 {_90724 B : Type'} (u : B -> Prop) (f : B -> _90724) : (term2073 _90724 B u f) = (term2073 _90724 B u f).
Proof. exact (MK_COMB (@lem3508921 B) (@lem3508920 _90724 B u f)). Qed.
Lemma lem3508923 {_90724 B : Type'} (u : B -> Prop) : (term2074 _90724 B u) = (term2074 _90724 B u).
Proof. exact (fun_ext (fun f : B -> _90724 => @lem3508922 _90724 B u f)). Qed.
Lemma lem3508924 {_90724 B : Type'} : (@all (B -> _90724)) = (@all (B -> _90724)).
Proof. exact (eq_refl (@all (B -> _90724))). Qed.
Lemma lem3508925 {_90724 B : Type'} (u : B -> Prop) : (term2075 _90724 B u) = (term2075 _90724 B u).
Proof. exact (MK_COMB (@lem3508924 _90724 B) (@lem3508923 _90724 B u)). Qed.
Lemma lem3508926 {_90724 B : Type'} : (term2076 _90724 B) = (term2076 _90724 B).
Proof. exact (fun_ext (fun u : B -> Prop => @lem3508925 _90724 B u)). Qed.
Lemma lem3508927 {B : Type'} : (@all (B -> Prop)) = (@all (B -> Prop)).
Proof. exact (eq_refl (@all (B -> Prop))). Qed.
Lemma lem3508928 {_90724 B : Type'} : (term1958 _90724 B) = (term1958 _90724 B).
Proof. exact (MK_COMB (@lem3508927 B) (@lem3508926 _90724 B)). Qed.
Lemma lem3508929 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem3508930 {_90724 B : Type'} : (term1971 _90724 B) = (term1971 _90724 B).
Proof. exact (MK_COMB (@lem3508929) (@lem3508928 _90724 B)). Qed.
Lemma lem3508931 {_90724 A B : Type'} : (term1973 _90724 A B) = (term1973 _90724 A B).
Proof. exact (MK_COMB (@lem3508930 _90724 B) (@lem3508830 _90724 A B)). Qed.
Lemma lem3508950 {A B : Type'} (f : A -> B) (g : type686 A) : ((term49 A B f g) = (term50 A B f g)) = ((term49 A B f g) = (term50 A B f g)).
Proof. exact (eq_refl ((term49 A B f g) = (term50 A B f g))). Qed.
Lemma lem3508979 {A B : Type'} (g : type686 A) (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) (t : A -> Prop) : (term2081 A B g _37163 u f t) = (term2081 A B g _37163 u f t).
Proof. exact (eq_refl (term2081 A B g _37163 u f t)). Qed.
Lemma lem3508980 {A B : Type'} (g : type686 A) (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) : (term2082 A B g _37163 u f) = (term2082 A B g _37163 u f).
Proof. exact (fun_ext (fun t : A -> Prop => @lem3508979 A B g _37163 u f t)). Qed.
Lemma lem3508981 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem3508982 {A B : Type'} (g : type686 A) (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) : (term2083 A B g _37163 u f) = (term2083 A B g _37163 u f).
Proof. exact (MK_COMB (@lem3508981 A) (@lem3508980 A B g _37163 u f)). Qed.
Lemma lem3508991 {A : Type'} (g : type686 A) : (term42 A g) = (term42 A g).
Proof. exact (eq_refl (term42 A g)). Qed.
Lemma lem3508992 {A B : Type'} (g : type686 A) (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) : (term2084 A B g _37163 u f) = (term2084 A B g _37163 u f).
Proof. exact (MK_COMB (@lem3508991 A g) (@lem3508982 A B g _37163 u f)). Qed.
Lemma lem3508993 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem3508994 {A B : Type'} (g : type686 A) (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) : (term2085 A B g _37163 u f) = (term2085 A B g _37163 u f).
Proof. exact (MK_COMB (@lem3508993) (@lem3508992 A B g _37163 u f)). Qed.
Lemma lem3508995 {A B : Type'} (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) (g : type686 A) : (term2086 A B _37163 u f g) = (term2086 A B _37163 u f g).
Proof. exact (MK_COMB (@lem3508994 A B g _37163 u f) (@lem3508950 A B f g)). Qed.
Lemma lem3508996 {A B : Type'} (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) : (term2088 A B _37163 u f) = (term2088 A B _37163 u f).
Proof. exact (fun_ext (fun g : type686 A => @lem3508995 A B _37163 u f g)). Qed.
Lemma lem3508997 {A : Type'} : (@all ((A -> Prop) -> Prop)) = (@all ((A -> Prop) -> Prop)).
Proof. exact (eq_refl (@all ((A -> Prop) -> Prop))). Qed.
Lemma lem3508998 {A B : Type'} (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) : (term2089 A B _37163 u f) = (term2089 A B _37163 u f).
Proof. exact (MK_COMB (@lem3508997 A) (@lem3508996 A B _37163 u f)). Qed.
Lemma lem3508999 {A B : Type'} (_37163 : type627 A B) (u : A -> Prop) : (term2091 A B _37163 u) = (term2091 A B _37163 u).
Proof. exact (fun_ext (fun f : A -> B => @lem3508998 A B _37163 u f)). Qed.
Lemma lem3509000 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem3509001 {A B : Type'} (_37163 : type627 A B) (u : A -> Prop) : (term2092 A B _37163 u) = (term2092 A B _37163 u).
Proof. exact (MK_COMB (@lem3509000 A B) (@lem3508999 A B _37163 u)). Qed.
Lemma lem3509002 {A B : Type'} (_37163 : type627 A B) : (term2094 A B _37163) = (term2094 A B _37163).
Proof. exact (fun_ext (fun u : A -> Prop => @lem3509001 A B _37163 u)). Qed.
Lemma lem3509003 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem3509004 {A B : Type'} (_37163 : type627 A B) : (term2095 A B _37163) = (term2095 A B _37163).
Proof. exact (MK_COMB (@lem3509003 A) (@lem3509002 A B _37163)). Qed.
Lemma lem3509005 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem3509006 {A B : Type'} (_37163 : type627 A B) : (term2096 A B _37163) = (term2096 A B _37163).
Proof. exact (MK_COMB (@lem3509005) (@lem3509004 A B _37163)). Qed.
Lemma lem3509007 {_90724 A B : Type'} (_37163 : type627 A B) : (term2097 _90724 A B _37163) = (term2097 _90724 A B _37163).
Proof. exact (MK_COMB (@lem3509006 A B _37163) (@lem3508931 _90724 A B)). Qed.
Lemma lem3509026 {_90724 A : Type'} (f : A -> _90724) (g : type686 A) : ((term2056 _90724 A f g) = (term2057 _90724 A f g)) = ((term2056 _90724 A f g) = (term2057 _90724 A f g)).
Proof. exact (eq_refl ((term2056 _90724 A f g) = (term2057 _90724 A f g))). Qed.
Lemma lem3509027 {A : Type'} (t : A -> Prop) : t = t.
Proof. exact (eq_refl t). Qed.
Lemma lem3509055 {_90724 A : Type'} (GEN_PVAR_84 : A) (u : A -> Prop) (f : A -> _90724) (t : A -> Prop) (x : A) : (term2058 _90724 A GEN_PVAR_84 u f t x) = (term2058 _90724 A GEN_PVAR_84 u f t x).
Proof. exact (eq_refl (term2058 _90724 A GEN_PVAR_84 u f t x)). Qed.
Lemma lem3509056 {_90724 A : Type'} (GEN_PVAR_84 : A) (u : A -> Prop) (f : A -> _90724) (t : A -> Prop) : (term2059 _90724 A GEN_PVAR_84 u f t) = (term2059 _90724 A GEN_PVAR_84 u f t).
Proof. exact (fun_ext (fun x : A => @lem3509055 _90724 A GEN_PVAR_84 u f t x)). Qed.
Lemma lem3509057 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem3509058 {_90724 A : Type'} (GEN_PVAR_84 : A) (u : A -> Prop) (f : A -> _90724) (t : A -> Prop) : (term2060 _90724 A GEN_PVAR_84 u f t) = (term2060 _90724 A GEN_PVAR_84 u f t).
Proof. exact (MK_COMB (@lem3509057 A) (@lem3509056 _90724 A GEN_PVAR_84 u f t)). Qed.
Lemma lem3509059 {_90724 A : Type'} (u : A -> Prop) (f : A -> _90724) (t : A -> Prop) : (term2061 _90724 A u f t) = (term2061 _90724 A u f t).
Proof. exact (fun_ext (fun GEN_PVAR_84 : A => @lem3509058 _90724 A GEN_PVAR_84 u f t)). Qed.
Lemma lem3509060 {A : Type'} : (@GSPEC A) = (@GSPEC A).
Proof. exact (eq_refl (@GSPEC A)). Qed.
Lemma lem3509061 {_90724 A : Type'} (u : A -> Prop) (f : A -> _90724) (t : A -> Prop) : (term2062 _90724 A u f t) = (term2062 _90724 A u f t).
Proof. exact (MK_COMB (@lem3509060 A) (@lem3509059 _90724 A u f t)). Qed.
Lemma lem3509062 {A : Type'} : (@SUBSET A) = (@SUBSET A).
Proof. exact (eq_refl (@SUBSET A)). Qed.
Lemma lem3509063 {_90724 A : Type'} (u : A -> Prop) (f : A -> _90724) (t : A -> Prop) : (term2063 _90724 A u f t) = (term2063 _90724 A u f t).
Proof. exact (MK_COMB (@lem3509062 A) (@lem3509061 _90724 A u f t)). Qed.
Lemma lem3509064 {_90724 A : Type'} (u : A -> Prop) (f : A -> _90724) (t : A -> Prop) : (term2064 _90724 A u f t) = (term2064 _90724 A u f t).
Proof. exact (MK_COMB (@lem3509063 _90724 A u f t) (@lem3509027 A t)). Qed.
Lemma lem3509071 {A : Type'} (t : A -> Prop) (u : A -> Prop) : (term75 A t u) = (term75 A t u).
Proof. exact (eq_refl (term75 A t u)). Qed.
Lemma lem3509072 {_90724 A : Type'} (u : A -> Prop) (f : A -> _90724) (t : A -> Prop) : (term2065 _90724 A u f t) = (term2065 _90724 A u f t).
Proof. exact (MK_COMB (@lem3509071 A t u) (@lem3509064 _90724 A u f t)). Qed.
Lemma lem3509079 {A : Type'} (t : A -> Prop) (g : type686 A) : (term78 A t g) = (term78 A t g).
Proof. exact (eq_refl (term78 A t g)). Qed.
Lemma lem3509080 {_90724 A : Type'} (g : type686 A) (u : A -> Prop) (f : A -> _90724) (t : A -> Prop) : (term2066 _90724 A g u f t) = (term2066 _90724 A g u f t).
Proof. exact (MK_COMB (@lem3509079 A t g) (@lem3509072 _90724 A u f t)). Qed.
Lemma lem3509081 {_90724 A : Type'} (g : type686 A) (u : A -> Prop) (f : A -> _90724) : (term2067 _90724 A g u f) = (term2067 _90724 A g u f).
Proof. exact (fun_ext (fun t : A -> Prop => @lem3509080 _90724 A g u f t)). Qed.
Lemma lem3509082 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem3509083 {_90724 A : Type'} (g : type686 A) (u : A -> Prop) (f : A -> _90724) : (term2068 _90724 A g u f) = (term2068 _90724 A g u f).
Proof. exact (MK_COMB (@lem3509082 A) (@lem3509081 _90724 A g u f)). Qed.
Lemma lem3509092 {A : Type'} (g : type686 A) : (term42 A g) = (term42 A g).
Proof. exact (eq_refl (term42 A g)). Qed.
Lemma lem3509093 {_90724 A : Type'} (g : type686 A) (u : A -> Prop) (f : A -> _90724) : (term2069 _90724 A g u f) = (term2069 _90724 A g u f).
Proof. exact (MK_COMB (@lem3509092 A g) (@lem3509083 _90724 A g u f)). Qed.
Lemma lem3509094 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem3509095 {_90724 A : Type'} (g : type686 A) (u : A -> Prop) (f : A -> _90724) : (term2070 _90724 A g u f) = (term2070 _90724 A g u f).
Proof. exact (MK_COMB (@lem3509094) (@lem3509093 _90724 A g u f)). Qed.
Lemma lem3509096 {_90724 A : Type'} (u : A -> Prop) (f : A -> _90724) (g : type686 A) : (term2071 _90724 A u f g) = (term2071 _90724 A u f g).
Proof. exact (MK_COMB (@lem3509095 _90724 A g u f) (@lem3509026 _90724 A f g)). Qed.
Lemma lem3509097 {_90724 A : Type'} (u : A -> Prop) (f : A -> _90724) : (term2072 _90724 A u f) = (term2072 _90724 A u f).
Proof. exact (fun_ext (fun g : type686 A => @lem3509096 _90724 A u f g)). Qed.
Lemma lem3509098 {A : Type'} : (@all ((A -> Prop) -> Prop)) = (@all ((A -> Prop) -> Prop)).
Proof. exact (eq_refl (@all ((A -> Prop) -> Prop))). Qed.
Lemma lem3509099 {_90724 A : Type'} (u : A -> Prop) (f : A -> _90724) : (term2073 _90724 A u f) = (term2073 _90724 A u f).
Proof. exact (MK_COMB (@lem3509098 A) (@lem3509097 _90724 A u f)). Qed.
Lemma lem3509100 {_90724 A : Type'} (u : A -> Prop) : (term2074 _90724 A u) = (term2074 _90724 A u).
Proof. exact (fun_ext (fun f : A -> _90724 => @lem3509099 _90724 A u f)). Qed.
Lemma lem3509101 {_90724 A : Type'} : (@all (A -> _90724)) = (@all (A -> _90724)).
Proof. exact (eq_refl (@all (A -> _90724))). Qed.
Lemma lem3509102 {_90724 A : Type'} (u : A -> Prop) : (term2075 _90724 A u) = (term2075 _90724 A u).
Proof. exact (MK_COMB (@lem3509101 _90724 A) (@lem3509100 _90724 A u)). Qed.
Lemma lem3509103 {_90724 A : Type'} : (term2076 _90724 A) = (term2076 _90724 A).
Proof. exact (fun_ext (fun u : A -> Prop => @lem3509102 _90724 A u)). Qed.
Lemma lem3509104 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem3509105 {_90724 A : Type'} : (term1958 _90724 A) = (term1958 _90724 A).
Proof. exact (MK_COMB (@lem3509104 A) (@lem3509103 _90724 A)). Qed.
Lemma lem3509106 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem3509107 {_90724 A : Type'} : (term1971 _90724 A) = (term1971 _90724 A).
Proof. exact (MK_COMB (@lem3509106) (@lem3509105 _90724 A)). Qed.
Lemma lem3509108 {_90724 A B : Type'} (_37163 : type627 A B) : (term2098 _90724 A B _37163) = (term2098 _90724 A B _37163).
Proof. exact (MK_COMB (@lem3509107 _90724 A) (@lem3509007 _90724 A B _37163)). Qed.
Lemma lem3509127 {_90715 A : Type'} (f : type1413 _90715 A) (g : type686 _90715) : ((term2099 _90715 A f g) = (term2100 _90715 A f g)) = ((term2099 _90715 A f g) = (term2100 _90715 A f g)).
Proof. exact (eq_refl ((term2099 _90715 A f g) = (term2100 _90715 A f g))). Qed.
Lemma lem3509128 {_90715 : Type'} (t : _90715 -> Prop) : t = t.
Proof. exact (eq_refl t). Qed.
Lemma lem3509156 {_90715 A : Type'} (GEN_PVAR_84 : _90715) (u : _90715 -> Prop) (f : type1413 _90715 A) (t : _90715 -> Prop) (x : _90715) : (term2101 _90715 A GEN_PVAR_84 u f t x) = (term2101 _90715 A GEN_PVAR_84 u f t x).
Proof. exact (eq_refl (term2101 _90715 A GEN_PVAR_84 u f t x)). Qed.
Lemma lem3509157 {_90715 A : Type'} (GEN_PVAR_84 : _90715) (u : _90715 -> Prop) (f : type1413 _90715 A) (t : _90715 -> Prop) : (term2102 _90715 A GEN_PVAR_84 u f t) = (term2102 _90715 A GEN_PVAR_84 u f t).
Proof. exact (fun_ext (fun x : _90715 => @lem3509156 _90715 A GEN_PVAR_84 u f t x)). Qed.
Lemma lem3509158 {_90715 : Type'} : (@ex _90715) = (@ex _90715).
Proof. exact (eq_refl (@ex _90715)). Qed.
Lemma lem3509159 {_90715 A : Type'} (GEN_PVAR_84 : _90715) (u : _90715 -> Prop) (f : type1413 _90715 A) (t : _90715 -> Prop) : (term2103 _90715 A GEN_PVAR_84 u f t) = (term2103 _90715 A GEN_PVAR_84 u f t).
Proof. exact (MK_COMB (@lem3509158 _90715) (@lem3509157 _90715 A GEN_PVAR_84 u f t)). Qed.
Lemma lem3509160 {_90715 A : Type'} (u : _90715 -> Prop) (f : type1413 _90715 A) (t : _90715 -> Prop) : (term2104 _90715 A u f t) = (term2104 _90715 A u f t).
Proof. exact (fun_ext (fun GEN_PVAR_84 : _90715 => @lem3509159 _90715 A GEN_PVAR_84 u f t)). Qed.
Lemma lem3509161 {_90715 : Type'} : (@GSPEC _90715) = (@GSPEC _90715).
Proof. exact (eq_refl (@GSPEC _90715)). Qed.
Lemma lem3509162 {_90715 A : Type'} (u : _90715 -> Prop) (f : type1413 _90715 A) (t : _90715 -> Prop) : (term2105 _90715 A u f t) = (term2105 _90715 A u f t).
Proof. exact (MK_COMB (@lem3509161 _90715) (@lem3509160 _90715 A u f t)). Qed.
Lemma lem3509163 {_90715 : Type'} : (@SUBSET _90715) = (@SUBSET _90715).
Proof. exact (eq_refl (@SUBSET _90715)). Qed.
Lemma lem3509164 {_90715 A : Type'} (u : _90715 -> Prop) (f : type1413 _90715 A) (t : _90715 -> Prop) : (term2106 _90715 A u f t) = (term2106 _90715 A u f t).
Proof. exact (MK_COMB (@lem3509163 _90715) (@lem3509162 _90715 A u f t)). Qed.
Lemma lem3509165 {_90715 A : Type'} (u : _90715 -> Prop) (f : type1413 _90715 A) (t : _90715 -> Prop) : (term2107 _90715 A u f t) = (term2107 _90715 A u f t).
Proof. exact (MK_COMB (@lem3509164 _90715 A u f t) (@lem3509128 _90715 t)). Qed.
Lemma lem3509172 {_90715 : Type'} (t : _90715 -> Prop) (u : _90715 -> Prop) : (term75 _90715 t u) = (term75 _90715 t u).
Proof. exact (eq_refl (term75 _90715 t u)). Qed.
Lemma lem3509173 {_90715 A : Type'} (u : _90715 -> Prop) (f : type1413 _90715 A) (t : _90715 -> Prop) : (term2108 _90715 A u f t) = (term2108 _90715 A u f t).
Proof. exact (MK_COMB (@lem3509172 _90715 t u) (@lem3509165 _90715 A u f t)). Qed.
Lemma lem3509180 {_90715 : Type'} (t : _90715 -> Prop) (g : type686 _90715) : (term78 _90715 t g) = (term78 _90715 t g).
Proof. exact (eq_refl (term78 _90715 t g)). Qed.
Lemma lem3509181 {_90715 A : Type'} (g : type686 _90715) (u : _90715 -> Prop) (f : type1413 _90715 A) (t : _90715 -> Prop) : (term2109 _90715 A g u f t) = (term2109 _90715 A g u f t).
Proof. exact (MK_COMB (@lem3509180 _90715 t g) (@lem3509173 _90715 A u f t)). Qed.
Lemma lem3509182 {_90715 A : Type'} (g : type686 _90715) (u : _90715 -> Prop) (f : type1413 _90715 A) : (term2110 _90715 A g u f) = (term2110 _90715 A g u f).
Proof. exact (fun_ext (fun t : _90715 -> Prop => @lem3509181 _90715 A g u f t)). Qed.
Lemma lem3509183 {_90715 : Type'} : (@all (_90715 -> Prop)) = (@all (_90715 -> Prop)).
Proof. exact (eq_refl (@all (_90715 -> Prop))). Qed.
Lemma lem3509184 {_90715 A : Type'} (g : type686 _90715) (u : _90715 -> Prop) (f : type1413 _90715 A) : (term2111 _90715 A g u f) = (term2111 _90715 A g u f).
Proof. exact (MK_COMB (@lem3509183 _90715) (@lem3509182 _90715 A g u f)). Qed.
Lemma lem3509193 {_90715 : Type'} (g : type686 _90715) : (term42 _90715 g) = (term42 _90715 g).
Proof. exact (eq_refl (term42 _90715 g)). Qed.
Lemma lem3509194 {_90715 A : Type'} (g : type686 _90715) (u : _90715 -> Prop) (f : type1413 _90715 A) : (term2112 _90715 A g u f) = (term2112 _90715 A g u f).
Proof. exact (MK_COMB (@lem3509193 _90715 g) (@lem3509184 _90715 A g u f)). Qed.
Lemma lem3509195 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem3509196 {_90715 A : Type'} (g : type686 _90715) (u : _90715 -> Prop) (f : type1413 _90715 A) : (term2113 _90715 A g u f) = (term2113 _90715 A g u f).
Proof. exact (MK_COMB (@lem3509195) (@lem3509194 _90715 A g u f)). Qed.
Lemma lem3509197 {_90715 A : Type'} (u : _90715 -> Prop) (f : type1413 _90715 A) (g : type686 _90715) : (term2114 _90715 A u f g) = (term2114 _90715 A u f g).
Proof. exact (MK_COMB (@lem3509196 _90715 A g u f) (@lem3509127 _90715 A f g)). Qed.
Lemma lem3509198 {_90715 A : Type'} (u : _90715 -> Prop) (f : type1413 _90715 A) : (term2115 _90715 A u f) = (term2115 _90715 A u f).
Proof. exact (fun_ext (fun g : type686 _90715 => @lem3509197 _90715 A u f g)). Qed.
Lemma lem3509199 {_90715 : Type'} : (@all ((_90715 -> Prop) -> Prop)) = (@all ((_90715 -> Prop) -> Prop)).
Proof. exact (eq_refl (@all ((_90715 -> Prop) -> Prop))). Qed.
Lemma lem3509200 {_90715 A : Type'} (u : _90715 -> Prop) (f : type1413 _90715 A) : (term2116 _90715 A u f) = (term2116 _90715 A u f).
Proof. exact (MK_COMB (@lem3509199 _90715) (@lem3509198 _90715 A u f)). Qed.
Lemma lem3509201 {_90715 A : Type'} (u : _90715 -> Prop) : (term2117 _90715 A u) = (term2117 _90715 A u).
Proof. exact (fun_ext (fun f : type1413 _90715 A => @lem3509200 _90715 A u f)). Qed.
Lemma lem3509202 {_90715 A : Type'} : (@all (_90715 -> A -> Prop)) = (@all (_90715 -> A -> Prop)).
Proof. exact (eq_refl (@all (_90715 -> A -> Prop))). Qed.
Lemma lem3509203 {_90715 A : Type'} (u : _90715 -> Prop) : (term2118 _90715 A u) = (term2118 _90715 A u).
Proof. exact (MK_COMB (@lem3509202 _90715 A) (@lem3509201 _90715 A u)). Qed.
Lemma lem3509204 {_90715 A : Type'} : (term2119 _90715 A) = (term2119 _90715 A).
Proof. exact (fun_ext (fun u : _90715 -> Prop => @lem3509203 _90715 A u)). Qed.
Lemma lem3509205 {_90715 : Type'} : (@all (_90715 -> Prop)) = (@all (_90715 -> Prop)).
Proof. exact (eq_refl (@all (_90715 -> Prop))). Qed.
Lemma lem3509206 {_90715 A : Type'} : (term1960 _90715 A) = (term1960 _90715 A).
Proof. exact (MK_COMB (@lem3509205 _90715) (@lem3509204 _90715 A)). Qed.
Lemma lem3509207 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem3509208 {_90715 A : Type'} : (term1979 _90715 A) = (term1979 _90715 A).
Proof. exact (MK_COMB (@lem3509207) (@lem3509206 _90715 A)). Qed.
Lemma lem3509209 {_90715 _90724 A B : Type'} (_37163 : type627 A B) : (term2120 _90715 _90724 A B _37163) = (term2120 _90715 _90724 A B _37163).
Proof. exact (MK_COMB (@lem3509208 _90715 A) (@lem3509108 _90724 A B _37163)). Qed.
Lemma lem3509228 {_90715 B : Type'} (f : _90715 -> B) (g : type686 _90715) : ((term49 _90715 B f g) = (term50 _90715 B f g)) = ((term49 _90715 B f g) = (term50 _90715 B f g)).
Proof. exact (eq_refl ((term49 _90715 B f g) = (term50 _90715 B f g))). Qed.
Lemma lem3509229 {_90715 : Type'} (t : _90715 -> Prop) : t = t.
Proof. exact (eq_refl t). Qed.
Lemma lem3509257 {_90715 B : Type'} (GEN_PVAR_84 : _90715) (u : _90715 -> Prop) (f : _90715 -> B) (t : _90715 -> Prop) (x : _90715) : (term61 _90715 B GEN_PVAR_84 u f t x) = (term61 _90715 B GEN_PVAR_84 u f t x).
Proof. exact (eq_refl (term61 _90715 B GEN_PVAR_84 u f t x)). Qed.
Lemma lem3509258 {_90715 B : Type'} (GEN_PVAR_84 : _90715) (u : _90715 -> Prop) (f : _90715 -> B) (t : _90715 -> Prop) : (term63 _90715 B GEN_PVAR_84 u f t) = (term63 _90715 B GEN_PVAR_84 u f t).
Proof. exact (fun_ext (fun x : _90715 => @lem3509257 _90715 B GEN_PVAR_84 u f t x)). Qed.
Lemma lem3509259 {_90715 : Type'} : (@ex _90715) = (@ex _90715).
Proof. exact (eq_refl (@ex _90715)). Qed.
Lemma lem3509260 {_90715 B : Type'} (GEN_PVAR_84 : _90715) (u : _90715 -> Prop) (f : _90715 -> B) (t : _90715 -> Prop) : (term65 _90715 B GEN_PVAR_84 u f t) = (term65 _90715 B GEN_PVAR_84 u f t).
Proof. exact (MK_COMB (@lem3509259 _90715) (@lem3509258 _90715 B GEN_PVAR_84 u f t)). Qed.
Lemma lem3509261 {_90715 B : Type'} (u : _90715 -> Prop) (f : _90715 -> B) (t : _90715 -> Prop) : (term67 _90715 B u f t) = (term67 _90715 B u f t).
Proof. exact (fun_ext (fun GEN_PVAR_84 : _90715 => @lem3509260 _90715 B GEN_PVAR_84 u f t)). Qed.
Lemma lem3509262 {_90715 : Type'} : (@GSPEC _90715) = (@GSPEC _90715).
Proof. exact (eq_refl (@GSPEC _90715)). Qed.
Lemma lem3509263 {_90715 B : Type'} (u : _90715 -> Prop) (f : _90715 -> B) (t : _90715 -> Prop) : (term69 _90715 B u f t) = (term69 _90715 B u f t).
Proof. exact (MK_COMB (@lem3509262 _90715) (@lem3509261 _90715 B u f t)). Qed.
Lemma lem3509264 {_90715 : Type'} : (@SUBSET _90715) = (@SUBSET _90715).
Proof. exact (eq_refl (@SUBSET _90715)). Qed.
Lemma lem3509265 {_90715 B : Type'} (u : _90715 -> Prop) (f : _90715 -> B) (t : _90715 -> Prop) : (term71 _90715 B u f t) = (term71 _90715 B u f t).
Proof. exact (MK_COMB (@lem3509264 _90715) (@lem3509263 _90715 B u f t)). Qed.
Lemma lem3509266 {_90715 B : Type'} (u : _90715 -> Prop) (f : _90715 -> B) (t : _90715 -> Prop) : (term73 _90715 B u f t) = (term73 _90715 B u f t).
Proof. exact (MK_COMB (@lem3509265 _90715 B u f t) (@lem3509229 _90715 t)). Qed.
Lemma lem3509273 {_90715 : Type'} (t : _90715 -> Prop) (u : _90715 -> Prop) : (term75 _90715 t u) = (term75 _90715 t u).
Proof. exact (eq_refl (term75 _90715 t u)). Qed.
Lemma lem3509274 {_90715 B : Type'} (u : _90715 -> Prop) (f : _90715 -> B) (t : _90715 -> Prop) : (term76 _90715 B u f t) = (term76 _90715 B u f t).
Proof. exact (MK_COMB (@lem3509273 _90715 t u) (@lem3509266 _90715 B u f t)). Qed.
Lemma lem3509281 {_90715 : Type'} (t : _90715 -> Prop) (g : type686 _90715) : (term78 _90715 t g) = (term78 _90715 t g).
Proof. exact (eq_refl (term78 _90715 t g)). Qed.
Lemma lem3509282 {_90715 B : Type'} (g : type686 _90715) (u : _90715 -> Prop) (f : _90715 -> B) (t : _90715 -> Prop) : (term79 _90715 B g u f t) = (term79 _90715 B g u f t).
Proof. exact (MK_COMB (@lem3509281 _90715 t g) (@lem3509274 _90715 B u f t)). Qed.
Lemma lem3509283 {_90715 B : Type'} (g : type686 _90715) (u : _90715 -> Prop) (f : _90715 -> B) : (term81 _90715 B g u f) = (term81 _90715 B g u f).
Proof. exact (fun_ext (fun t : _90715 -> Prop => @lem3509282 _90715 B g u f t)). Qed.
Lemma lem3509284 {_90715 : Type'} : (@all (_90715 -> Prop)) = (@all (_90715 -> Prop)).
Proof. exact (eq_refl (@all (_90715 -> Prop))). Qed.
Lemma lem3509285 {_90715 B : Type'} (g : type686 _90715) (u : _90715 -> Prop) (f : _90715 -> B) : (term44 _90715 B g u f) = (term44 _90715 B g u f).
Proof. exact (MK_COMB (@lem3509284 _90715) (@lem3509283 _90715 B g u f)). Qed.
Lemma lem3509294 {_90715 : Type'} (g : type686 _90715) : (term42 _90715 g) = (term42 _90715 g).
Proof. exact (eq_refl (term42 _90715 g)). Qed.
Lemma lem3509295 {_90715 B : Type'} (g : type686 _90715) (u : _90715 -> Prop) (f : _90715 -> B) : (term45 _90715 B g u f) = (term45 _90715 B g u f).
Proof. exact (MK_COMB (@lem3509294 _90715 g) (@lem3509285 _90715 B g u f)). Qed.
Lemma lem3509296 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem3509297 {_90715 B : Type'} (g : type686 _90715) (u : _90715 -> Prop) (f : _90715 -> B) : (term47 _90715 B g u f) = (term47 _90715 B g u f).
Proof. exact (MK_COMB (@lem3509296) (@lem3509295 _90715 B g u f)). Qed.
Lemma lem3509298 {_90715 B : Type'} (u : _90715 -> Prop) (f : _90715 -> B) (g : type686 _90715) : (term52 _90715 B u f g) = (term52 _90715 B u f g).
Proof. exact (MK_COMB (@lem3509297 _90715 B g u f) (@lem3509228 _90715 B f g)). Qed.
Lemma lem3509299 {_90715 B : Type'} (u : _90715 -> Prop) (f : _90715 -> B) : (term2087 _90715 B u f) = (term2087 _90715 B u f).
Proof. exact (fun_ext (fun g : type686 _90715 => @lem3509298 _90715 B u f g)). Qed.
Lemma lem3509300 {_90715 : Type'} : (@all ((_90715 -> Prop) -> Prop)) = (@all ((_90715 -> Prop) -> Prop)).
Proof. exact (eq_refl (@all ((_90715 -> Prop) -> Prop))). Qed.
Lemma lem3509301 {_90715 B : Type'} (u : _90715 -> Prop) (f : _90715 -> B) : (term1876 _90715 B u f) = (term1876 _90715 B u f).
Proof. exact (MK_COMB (@lem3509300 _90715) (@lem3509299 _90715 B u f)). Qed.
Lemma lem3509302 {_90715 B : Type'} (u : _90715 -> Prop) : (term2090 _90715 B u) = (term2090 _90715 B u).
Proof. exact (fun_ext (fun f : _90715 -> B => @lem3509301 _90715 B u f)). Qed.
Lemma lem3509303 {_90715 B : Type'} : (@all (_90715 -> B)) = (@all (_90715 -> B)).
Proof. exact (eq_refl (@all (_90715 -> B))). Qed.
Lemma lem3509304 {_90715 B : Type'} (u : _90715 -> Prop) : (term1877 _90715 B u) = (term1877 _90715 B u).
Proof. exact (MK_COMB (@lem3509303 _90715 B) (@lem3509302 _90715 B u)). Qed.
Lemma lem3509305 {_90715 B : Type'} : (term2093 _90715 B) = (term2093 _90715 B).
Proof. exact (fun_ext (fun u : _90715 -> Prop => @lem3509304 _90715 B u)). Qed.
Lemma lem3509306 {_90715 : Type'} : (@all (_90715 -> Prop)) = (@all (_90715 -> Prop)).
Proof. exact (eq_refl (@all (_90715 -> Prop))). Qed.
Lemma lem3509307 {_90715 B : Type'} : (term1878 _90715 B) = (term1878 _90715 B).
Proof. exact (MK_COMB (@lem3509306 _90715) (@lem3509305 _90715 B)). Qed.
Lemma lem3509308 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem3509309 {_90715 B : Type'} : (term1974 _90715 B) = (term1974 _90715 B).
Proof. exact (MK_COMB (@lem3509308) (@lem3509307 _90715 B)). Qed.
Lemma lem3509310 {_90715 _90724 A B : Type'} (_37163 : type627 A B) : (term2121 _90715 _90724 A B _37163) = (term2121 _90715 _90724 A B _37163).
Proof. exact (MK_COMB (@lem3509309 _90715 B) (@lem3509209 _90715 _90724 A B _37163)). Qed.
Lemma lem3509329 {_90715 A : Type'} (f : _90715 -> A) (g : type686 _90715) : ((term49 _90715 A f g) = (term50 _90715 A f g)) = ((term49 _90715 A f g) = (term50 _90715 A f g)).
Proof. exact (eq_refl ((term49 _90715 A f g) = (term50 _90715 A f g))). Qed.
Lemma lem3509330 {_90715 : Type'} (t : _90715 -> Prop) : t = t.
Proof. exact (eq_refl t). Qed.
Lemma lem3509358 {_90715 A : Type'} (GEN_PVAR_84 : _90715) (u : _90715 -> Prop) (f : _90715 -> A) (t : _90715 -> Prop) (x : _90715) : (term61 _90715 A GEN_PVAR_84 u f t x) = (term61 _90715 A GEN_PVAR_84 u f t x).
Proof. exact (eq_refl (term61 _90715 A GEN_PVAR_84 u f t x)). Qed.
Lemma lem3509359 {_90715 A : Type'} (GEN_PVAR_84 : _90715) (u : _90715 -> Prop) (f : _90715 -> A) (t : _90715 -> Prop) : (term63 _90715 A GEN_PVAR_84 u f t) = (term63 _90715 A GEN_PVAR_84 u f t).
Proof. exact (fun_ext (fun x : _90715 => @lem3509358 _90715 A GEN_PVAR_84 u f t x)). Qed.
Lemma lem3509360 {_90715 : Type'} : (@ex _90715) = (@ex _90715).
Proof. exact (eq_refl (@ex _90715)). Qed.
Lemma lem3509361 {_90715 A : Type'} (GEN_PVAR_84 : _90715) (u : _90715 -> Prop) (f : _90715 -> A) (t : _90715 -> Prop) : (term65 _90715 A GEN_PVAR_84 u f t) = (term65 _90715 A GEN_PVAR_84 u f t).
Proof. exact (MK_COMB (@lem3509360 _90715) (@lem3509359 _90715 A GEN_PVAR_84 u f t)). Qed.
Lemma lem3509362 {_90715 A : Type'} (u : _90715 -> Prop) (f : _90715 -> A) (t : _90715 -> Prop) : (term67 _90715 A u f t) = (term67 _90715 A u f t).
Proof. exact (fun_ext (fun GEN_PVAR_84 : _90715 => @lem3509361 _90715 A GEN_PVAR_84 u f t)). Qed.
Lemma lem3509363 {_90715 : Type'} : (@GSPEC _90715) = (@GSPEC _90715).
Proof. exact (eq_refl (@GSPEC _90715)). Qed.
Lemma lem3509364 {_90715 A : Type'} (u : _90715 -> Prop) (f : _90715 -> A) (t : _90715 -> Prop) : (term69 _90715 A u f t) = (term69 _90715 A u f t).
Proof. exact (MK_COMB (@lem3509363 _90715) (@lem3509362 _90715 A u f t)). Qed.
Lemma lem3509365 {_90715 : Type'} : (@SUBSET _90715) = (@SUBSET _90715).
Proof. exact (eq_refl (@SUBSET _90715)). Qed.
Lemma lem3509366 {_90715 A : Type'} (u : _90715 -> Prop) (f : _90715 -> A) (t : _90715 -> Prop) : (term71 _90715 A u f t) = (term71 _90715 A u f t).
Proof. exact (MK_COMB (@lem3509365 _90715) (@lem3509364 _90715 A u f t)). Qed.
Lemma lem3509367 {_90715 A : Type'} (u : _90715 -> Prop) (f : _90715 -> A) (t : _90715 -> Prop) : (term73 _90715 A u f t) = (term73 _90715 A u f t).
Proof. exact (MK_COMB (@lem3509366 _90715 A u f t) (@lem3509330 _90715 t)). Qed.
Lemma lem3509374 {_90715 : Type'} (t : _90715 -> Prop) (u : _90715 -> Prop) : (term75 _90715 t u) = (term75 _90715 t u).
Proof. exact (eq_refl (term75 _90715 t u)). Qed.
Lemma lem3509375 {_90715 A : Type'} (u : _90715 -> Prop) (f : _90715 -> A) (t : _90715 -> Prop) : (term76 _90715 A u f t) = (term76 _90715 A u f t).
Proof. exact (MK_COMB (@lem3509374 _90715 t u) (@lem3509367 _90715 A u f t)). Qed.
Lemma lem3509382 {_90715 : Type'} (t : _90715 -> Prop) (g : type686 _90715) : (term78 _90715 t g) = (term78 _90715 t g).
Proof. exact (eq_refl (term78 _90715 t g)). Qed.
Lemma lem3509383 {_90715 A : Type'} (g : type686 _90715) (u : _90715 -> Prop) (f : _90715 -> A) (t : _90715 -> Prop) : (term79 _90715 A g u f t) = (term79 _90715 A g u f t).
Proof. exact (MK_COMB (@lem3509382 _90715 t g) (@lem3509375 _90715 A u f t)). Qed.
Lemma lem3509384 {_90715 A : Type'} (g : type686 _90715) (u : _90715 -> Prop) (f : _90715 -> A) : (term81 _90715 A g u f) = (term81 _90715 A g u f).
Proof. exact (fun_ext (fun t : _90715 -> Prop => @lem3509383 _90715 A g u f t)). Qed.
Lemma lem3509385 {_90715 : Type'} : (@all (_90715 -> Prop)) = (@all (_90715 -> Prop)).
Proof. exact (eq_refl (@all (_90715 -> Prop))). Qed.
Lemma lem3509386 {_90715 A : Type'} (g : type686 _90715) (u : _90715 -> Prop) (f : _90715 -> A) : (term44 _90715 A g u f) = (term44 _90715 A g u f).
Proof. exact (MK_COMB (@lem3509385 _90715) (@lem3509384 _90715 A g u f)). Qed.
Lemma lem3509395 {_90715 : Type'} (g : type686 _90715) : (term42 _90715 g) = (term42 _90715 g).
Proof. exact (eq_refl (term42 _90715 g)). Qed.
Lemma lem3509396 {_90715 A : Type'} (g : type686 _90715) (u : _90715 -> Prop) (f : _90715 -> A) : (term45 _90715 A g u f) = (term45 _90715 A g u f).
Proof. exact (MK_COMB (@lem3509395 _90715 g) (@lem3509386 _90715 A g u f)). Qed.
Lemma lem3509397 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem3509398 {_90715 A : Type'} (g : type686 _90715) (u : _90715 -> Prop) (f : _90715 -> A) : (term47 _90715 A g u f) = (term47 _90715 A g u f).
Proof. exact (MK_COMB (@lem3509397) (@lem3509396 _90715 A g u f)). Qed.
Lemma lem3509399 {_90715 A : Type'} (u : _90715 -> Prop) (f : _90715 -> A) (g : type686 _90715) : (term52 _90715 A u f g) = (term52 _90715 A u f g).
Proof. exact (MK_COMB (@lem3509398 _90715 A g u f) (@lem3509329 _90715 A f g)). Qed.
Lemma lem3509400 {_90715 A : Type'} (u : _90715 -> Prop) (f : _90715 -> A) : (term2087 _90715 A u f) = (term2087 _90715 A u f).
Proof. exact (fun_ext (fun g : type686 _90715 => @lem3509399 _90715 A u f g)). Qed.
Lemma lem3509401 {_90715 : Type'} : (@all ((_90715 -> Prop) -> Prop)) = (@all ((_90715 -> Prop) -> Prop)).
Proof. exact (eq_refl (@all ((_90715 -> Prop) -> Prop))). Qed.
Lemma lem3509402 {_90715 A : Type'} (u : _90715 -> Prop) (f : _90715 -> A) : (term1876 _90715 A u f) = (term1876 _90715 A u f).
Proof. exact (MK_COMB (@lem3509401 _90715) (@lem3509400 _90715 A u f)). Qed.
Lemma lem3509403 {_90715 A : Type'} (u : _90715 -> Prop) : (term2090 _90715 A u) = (term2090 _90715 A u).
Proof. exact (fun_ext (fun f : _90715 -> A => @lem3509402 _90715 A u f)). Qed.
Lemma lem3509404 {_90715 A : Type'} : (@all (_90715 -> A)) = (@all (_90715 -> A)).
Proof. exact (eq_refl (@all (_90715 -> A))). Qed.
Lemma lem3509405 {_90715 A : Type'} (u : _90715 -> Prop) : (term1877 _90715 A u) = (term1877 _90715 A u).
Proof. exact (MK_COMB (@lem3509404 _90715 A) (@lem3509403 _90715 A u)). Qed.
Lemma lem3509406 {_90715 A : Type'} : (term2093 _90715 A) = (term2093 _90715 A).
Proof. exact (fun_ext (fun u : _90715 -> Prop => @lem3509405 _90715 A u)). Qed.
Lemma lem3509407 {_90715 : Type'} : (@all (_90715 -> Prop)) = (@all (_90715 -> Prop)).
Proof. exact (eq_refl (@all (_90715 -> Prop))). Qed.
Lemma lem3509408 {_90715 A : Type'} : (term1878 _90715 A) = (term1878 _90715 A).
Proof. exact (MK_COMB (@lem3509407 _90715) (@lem3509406 _90715 A)). Qed.
Lemma lem3509409 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem3509410 {_90715 A : Type'} : (term1974 _90715 A) = (term1974 _90715 A).
Proof. exact (MK_COMB (@lem3509409) (@lem3509408 _90715 A)). Qed.
Lemma lem3509411 {_90715 _90724 A B : Type'} (_37163 : type627 A B) : (term2122 _90715 _90724 A B _37163) = (term2122 _90715 _90724 A B _37163).
Proof. exact (MK_COMB (@lem3509410 _90715 A) (@lem3509310 _90715 _90724 A B _37163)). Qed.
Lemma lem3509430 {_90715 _90724 : Type'} (f : _90715 -> _90724) (g : type686 _90715) : ((term49 _90715 _90724 f g) = (term50 _90715 _90724 f g)) = ((term49 _90715 _90724 f g) = (term50 _90715 _90724 f g)).
Proof. exact (eq_refl ((term49 _90715 _90724 f g) = (term50 _90715 _90724 f g))). Qed.
Lemma lem3509431 {_90715 : Type'} (t : _90715 -> Prop) : t = t.
Proof. exact (eq_refl t). Qed.
Lemma lem3509433 {_90715 _90724 : Type'} (u : _90715 -> Prop) (f : _90715 -> _90724) (t : _90715 -> Prop) (_37164 : type627 _90715 _90724) (h1 : _37164 = (term2002 _90715 _90724)) : (term67 _90715 _90724 u f t) = (_37164 u f t).
Proof. exact (SYM (@lem3508628 _90715 _90724 u f t _37164 h1)). Qed.
Lemma lem3509434 {_90715 _90724 : Type'} (u : _90715 -> Prop) (f : _90715 -> _90724) (t : _90715 -> Prop) (_37164 : type627 _90715 _90724) (h1 : _37164 = (term2002 _90715 _90724)) : (term67 _90715 _90724 u f t) = (_37164 u f t).
Proof. exact (@lem3509433 _90715 _90724 u f t _37164 h1). Qed.
Lemma lem3509435 {_90715 : Type'} : (@GSPEC _90715) = (@GSPEC _90715).
Proof. exact (eq_refl (@GSPEC _90715)). Qed.
Lemma lem3509436 {_90715 _90724 : Type'} (u : _90715 -> Prop) (f : _90715 -> _90724) (t : _90715 -> Prop) (_37164 : type627 _90715 _90724) (h1 : _37164 = (term2002 _90715 _90724)) : (term69 _90715 _90724 u f t) = (term2077 _90715 _90724 _37164 u f t).
Proof. exact (MK_COMB (@lem3509435 _90715) (@lem3509434 _90715 _90724 u f t _37164 h1)). Qed.
Lemma lem3509437 {_90715 : Type'} : (@SUBSET _90715) = (@SUBSET _90715).
Proof. exact (eq_refl (@SUBSET _90715)). Qed.
Lemma lem3509438 {_90715 _90724 : Type'} (u : _90715 -> Prop) (f : _90715 -> _90724) (t : _90715 -> Prop) (_37164 : type627 _90715 _90724) (h1 : _37164 = (term2002 _90715 _90724)) : (term71 _90715 _90724 u f t) = (term2078 _90715 _90724 _37164 u f t).
Proof. exact (MK_COMB (@lem3509437 _90715) (@lem3509436 _90715 _90724 u f t _37164 h1)). Qed.
Lemma lem3509439 {_90715 _90724 : Type'} (u : _90715 -> Prop) (f : _90715 -> _90724) (t : _90715 -> Prop) (_37164 : type627 _90715 _90724) (h1 : _37164 = (term2002 _90715 _90724)) : (term73 _90715 _90724 u f t) = (term2079 _90715 _90724 _37164 u f t).
Proof. exact (MK_COMB (@lem3509438 _90715 _90724 u f t _37164 h1) (@lem3509431 _90715 t)). Qed.
Lemma lem3509446 {_90715 : Type'} (t : _90715 -> Prop) (u : _90715 -> Prop) : (term75 _90715 t u) = (term75 _90715 t u).
Proof. exact (eq_refl (term75 _90715 t u)). Qed.
Lemma lem3509447 {_90715 _90724 : Type'} (u : _90715 -> Prop) (f : _90715 -> _90724) (t : _90715 -> Prop) (_37164 : type627 _90715 _90724) (h1 : _37164 = (term2002 _90715 _90724)) : (term76 _90715 _90724 u f t) = (term2080 _90715 _90724 _37164 u f t).
Proof. exact (MK_COMB (@lem3509446 _90715 t u) (@lem3509439 _90715 _90724 u f t _37164 h1)). Qed.
Lemma lem3509454 {_90715 : Type'} (t : _90715 -> Prop) (g : type686 _90715) : (term78 _90715 t g) = (term78 _90715 t g).
Proof. exact (eq_refl (term78 _90715 t g)). Qed.
Lemma lem3509455 {_90715 _90724 : Type'} (g : type686 _90715) (u : _90715 -> Prop) (f : _90715 -> _90724) (t : _90715 -> Prop) (_37164 : type627 _90715 _90724) (h1 : _37164 = (term2002 _90715 _90724)) : (term79 _90715 _90724 g u f t) = (term2081 _90715 _90724 g _37164 u f t).
Proof. exact (MK_COMB (@lem3509454 _90715 t g) (@lem3509447 _90715 _90724 u f t _37164 h1)). Qed.
Lemma lem3509456 {_90715 _90724 : Type'} (g : type686 _90715) (u : _90715 -> Prop) (f : _90715 -> _90724) (_37164 : type627 _90715 _90724) (h1 : _37164 = (term2002 _90715 _90724)) : (term81 _90715 _90724 g u f) = (term2082 _90715 _90724 g _37164 u f).
Proof. exact (fun_ext (fun t : _90715 -> Prop => @lem3509455 _90715 _90724 g u f t _37164 h1)). Qed.
Lemma lem3509457 {_90715 : Type'} : (@all (_90715 -> Prop)) = (@all (_90715 -> Prop)).
Proof. exact (eq_refl (@all (_90715 -> Prop))). Qed.
Lemma lem3509458 {_90715 _90724 : Type'} (g : type686 _90715) (u : _90715 -> Prop) (f : _90715 -> _90724) (_37164 : type627 _90715 _90724) (h1 : _37164 = (term2002 _90715 _90724)) : (term44 _90715 _90724 g u f) = (term2083 _90715 _90724 g _37164 u f).
Proof. exact (MK_COMB (@lem3509457 _90715) (@lem3509456 _90715 _90724 g u f _37164 h1)). Qed.
Lemma lem3509467 {_90715 : Type'} (g : type686 _90715) : (term42 _90715 g) = (term42 _90715 g).
Proof. exact (eq_refl (term42 _90715 g)). Qed.
Lemma lem3509468 {_90715 _90724 : Type'} (g : type686 _90715) (u : _90715 -> Prop) (f : _90715 -> _90724) (_37164 : type627 _90715 _90724) (h1 : _37164 = (term2002 _90715 _90724)) : (term45 _90715 _90724 g u f) = (term2084 _90715 _90724 g _37164 u f).
Proof. exact (MK_COMB (@lem3509467 _90715 g) (@lem3509458 _90715 _90724 g u f _37164 h1)). Qed.
Lemma lem3509469 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem3509470 {_90715 _90724 : Type'} (g : type686 _90715) (u : _90715 -> Prop) (f : _90715 -> _90724) (_37164 : type627 _90715 _90724) (h1 : _37164 = (term2002 _90715 _90724)) : (term47 _90715 _90724 g u f) = (term2085 _90715 _90724 g _37164 u f).
Proof. exact (MK_COMB (@lem3509469) (@lem3509468 _90715 _90724 g u f _37164 h1)). Qed.
Lemma lem3509471 {_90715 _90724 : Type'} (u : _90715 -> Prop) (f : _90715 -> _90724) (g : type686 _90715) (_37164 : type627 _90715 _90724) (h1 : _37164 = (term2002 _90715 _90724)) : (term52 _90715 _90724 u f g) = (term2086 _90715 _90724 _37164 u f g).
Proof. exact (MK_COMB (@lem3509470 _90715 _90724 g u f _37164 h1) (@lem3509430 _90715 _90724 f g)). Qed.
Lemma lem3509472 {_90715 _90724 : Type'} (u : _90715 -> Prop) (f : _90715 -> _90724) (_37164 : type627 _90715 _90724) (h1 : _37164 = (term2002 _90715 _90724)) : (term2087 _90715 _90724 u f) = (term2088 _90715 _90724 _37164 u f).
Proof. exact (fun_ext (fun g : type686 _90715 => @lem3509471 _90715 _90724 u f g _37164 h1)). Qed.
Lemma lem3509473 {_90715 : Type'} : (@all ((_90715 -> Prop) -> Prop)) = (@all ((_90715 -> Prop) -> Prop)).
Proof. exact (eq_refl (@all ((_90715 -> Prop) -> Prop))). Qed.
Lemma lem3509474 {_90715 _90724 : Type'} (u : _90715 -> Prop) (f : _90715 -> _90724) (_37164 : type627 _90715 _90724) (h1 : _37164 = (term2002 _90715 _90724)) : (term1876 _90715 _90724 u f) = (term2089 _90715 _90724 _37164 u f).
Proof. exact (MK_COMB (@lem3509473 _90715) (@lem3509472 _90715 _90724 u f _37164 h1)). Qed.
Lemma lem3509475 {_90715 _90724 : Type'} (u : _90715 -> Prop) (_37164 : type627 _90715 _90724) (h1 : _37164 = (term2002 _90715 _90724)) : (term2090 _90715 _90724 u) = (term2091 _90715 _90724 _37164 u).
Proof. exact (fun_ext (fun f : _90715 -> _90724 => @lem3509474 _90715 _90724 u f _37164 h1)). Qed.
Lemma lem3509476 {_90715 _90724 : Type'} : (@all (_90715 -> _90724)) = (@all (_90715 -> _90724)).
Proof. exact (eq_refl (@all (_90715 -> _90724))). Qed.
Lemma lem3509477 {_90715 _90724 : Type'} (u : _90715 -> Prop) (_37164 : type627 _90715 _90724) (h1 : _37164 = (term2002 _90715 _90724)) : (term1877 _90715 _90724 u) = (term2092 _90715 _90724 _37164 u).
Proof. exact (MK_COMB (@lem3509476 _90715 _90724) (@lem3509475 _90715 _90724 u _37164 h1)). Qed.
Lemma lem3509478 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) (h1 : _37164 = (term2002 _90715 _90724)) : (term2093 _90715 _90724) = (term2094 _90715 _90724 _37164).
Proof. exact (fun_ext (fun u : _90715 -> Prop => @lem3509477 _90715 _90724 u _37164 h1)). Qed.
Lemma lem3509479 {_90715 : Type'} : (@all (_90715 -> Prop)) = (@all (_90715 -> Prop)).
Proof. exact (eq_refl (@all (_90715 -> Prop))). Qed.
Lemma lem3509480 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) (h1 : _37164 = (term2002 _90715 _90724)) : (term1878 _90715 _90724) = (term2095 _90715 _90724 _37164).
Proof. exact (MK_COMB (@lem3509479 _90715) (@lem3509478 _90715 _90724 _37164 h1)). Qed.
Lemma lem3509481 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem3509482 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) (h1 : _37164 = (term2002 _90715 _90724)) : (term1974 _90715 _90724) = (term2096 _90715 _90724 _37164).
Proof. exact (MK_COMB (@lem3509481) (@lem3509480 _90715 _90724 _37164 h1)). Qed.
Lemma lem3509483 {_90715 _90724 A B : Type'} (_37163 : type627 A B) (_37164 : type627 _90715 _90724) (h1 : _37164 = (term2002 _90715 _90724)) : (term2123 _90715 _90724 A B _37163) = (term2215 _90715 _90724 A B _37164 _37163).
Proof. exact (MK_COMB (@lem3509482 _90715 _90724 _37164 h1) (@lem3509411 _90715 _90724 A B _37163)). Qed.
Lemma lem3509502 {A B : Type'} (f : A -> B) (g : type686 A) : ((term49 A B f g) = (term50 A B f g)) = ((term49 A B f g) = (term50 A B f g)).
Proof. exact (eq_refl ((term49 A B f g) = (term50 A B f g))). Qed.
Lemma lem3509523 {A B : Type'} (g : type686 A) (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) (t : A -> Prop) : (term2124 A B g _37163 u f t) = (term2124 A B g _37163 u f t).
Proof. exact (eq_refl (term2124 A B g _37163 u f t)). Qed.
Lemma lem3509524 {A B : Type'} (g : type686 A) (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) : (term2125 A B g _37163 u f) = (term2125 A B g _37163 u f).
Proof. exact (fun_ext (fun t : A -> Prop => @lem3509523 A B g _37163 u f t)). Qed.
Lemma lem3509525 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem3509526 {A B : Type'} (g : type686 A) (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) : (term2126 A B g _37163 u f) = (term2126 A B g _37163 u f).
Proof. exact (MK_COMB (@lem3509525 A) (@lem3509524 A B g _37163 u f)). Qed.
Lemma lem3509539 {A : Type'} (g : type686 A) (t : A -> Prop) (u : A -> Prop) : (term2127 A g t u) = (term2127 A g t u).
Proof. exact (eq_refl (term2127 A g t u)). Qed.
Lemma lem3509540 {A : Type'} (g : type686 A) (u : A -> Prop) : (term2128 A g u) = (term2128 A g u).
Proof. exact (fun_ext (fun t : A -> Prop => @lem3509539 A g t u)). Qed.
Lemma lem3509541 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem3509542 {A : Type'} (g : type686 A) (u : A -> Prop) : (term2129 A g u) = (term2129 A g u).
Proof. exact (MK_COMB (@lem3509541 A) (@lem3509540 A g u)). Qed.
Lemma lem3509543 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem3509544 {A : Type'} (g : type686 A) (u : A -> Prop) : (term1946 A g u) = (term1946 A g u).
Proof. exact (MK_COMB (@lem3509543) (@lem3509542 A g u)). Qed.
Lemma lem3509545 {A B : Type'} (g : type686 A) (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) : (term2130 A B g _37163 u f) = (term2130 A B g _37163 u f).
Proof. exact (MK_COMB (@lem3509544 A g u) (@lem3509526 A B g _37163 u f)). Qed.
Lemma lem3509554 {A : Type'} (g : type686 A) : (term42 A g) = (term42 A g).
Proof. exact (eq_refl (term42 A g)). Qed.
Lemma lem3509555 {A B : Type'} (g : type686 A) (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) : (term2131 A B g _37163 u f) = (term2131 A B g _37163 u f).
Proof. exact (MK_COMB (@lem3509554 A g) (@lem3509545 A B g _37163 u f)). Qed.
Lemma lem3509556 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem3509557 {A B : Type'} (g : type686 A) (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) : (term2133 A B g _37163 u f) = (term2133 A B g _37163 u f).
Proof. exact (MK_COMB (@lem3509556) (@lem3509555 A B g _37163 u f)). Qed.
Lemma lem3509558 {A B : Type'} (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) (g : type686 A) : (term2134 A B _37163 u f g) = (term2134 A B _37163 u f g).
Proof. exact (MK_COMB (@lem3509557 A B g _37163 u f) (@lem3509502 A B f g)). Qed.
Lemma lem3509559 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem3509560 {A B : Type'} (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) (g : type686 A) : (term2135 A B _37163 u f g) = (term2135 A B _37163 u f g).
Proof. exact (MK_COMB (@lem3509559) (@lem3509558 A B _37163 u f g)). Qed.
Lemma lem3509561 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem3509562 {A B : Type'} (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) (g : type686 A) : (term2136 A B _37163 u f g) = (term2136 A B _37163 u f g).
Proof. exact (MK_COMB (@lem3509561) (@lem3509560 A B _37163 u f g)). Qed.
Lemma lem3509563 {_90715 _90724 A B : Type'} (u : A -> Prop) (f : A -> B) (g : type686 A) (_37163 : type627 A B) (_37164 : type627 _90715 _90724) (h1 : _37164 = (term2002 _90715 _90724)) : (term2137 _90715 _90724 A B u f g _37163) = (term2216 _90715 _90724 A B u f g _37164 _37163).
Proof. exact (MK_COMB (@lem3509562 A B _37163 u f g) (@lem3509483 _90715 _90724 A B _37163 _37164 h1)). Qed.
Lemma lem3509564 {_90715 _90724 A B : Type'} (f : A -> B) (g : type686 A) (_37163 : type627 A B) (_37164 : type627 _90715 _90724) (h1 : _37164 = (term2002 _90715 _90724)) : (term2138 _90715 _90724 A B f g _37163) = (term2217 _90715 _90724 A B f g _37164 _37163).
Proof. exact (fun_ext (fun u : A -> Prop => @lem3509563 _90715 _90724 A B u f g _37163 _37164 h1)). Qed.
Lemma lem3509565 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem3509566 {_90715 _90724 A B : Type'} (f : A -> B) (g : type686 A) (_37163 : type627 A B) (_37164 : type627 _90715 _90724) (h1 : _37164 = (term2002 _90715 _90724)) : (term2139 _90715 _90724 A B f g _37163) = (term2218 _90715 _90724 A B f g _37164 _37163).
Proof. exact (MK_COMB (@lem3509565 A) (@lem3509564 _90715 _90724 A B f g _37163 _37164 h1)). Qed.
Lemma lem3509567 {_90715 _90724 A B : Type'} (g : type686 A) (_37163 : type627 A B) (_37164 : type627 _90715 _90724) (h1 : _37164 = (term2002 _90715 _90724)) : (term2140 _90715 _90724 A B g _37163) = (term2219 _90715 _90724 A B g _37164 _37163).
Proof. exact (fun_ext (fun f : A -> B => @lem3509566 _90715 _90724 A B f g _37163 _37164 h1)). Qed.
Lemma lem3509568 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem3509569 {_90715 _90724 A B : Type'} (g : type686 A) (_37163 : type627 A B) (_37164 : type627 _90715 _90724) (h1 : _37164 = (term2002 _90715 _90724)) : (term2141 _90715 _90724 A B g _37163) = (term2220 _90715 _90724 A B g _37164 _37163).
Proof. exact (MK_COMB (@lem3509568 A B) (@lem3509567 _90715 _90724 A B g _37163 _37164 h1)). Qed.
Lemma lem3509570 {_90715 _90724 A B : Type'} (_37163 : type627 A B) (_37164 : type627 _90715 _90724) (h1 : _37164 = (term2002 _90715 _90724)) : (term2142 _90715 _90724 A B _37163) = (term2221 _90715 _90724 A B _37164 _37163).
Proof. exact (fun_ext (fun g : type686 A => @lem3509569 _90715 _90724 A B g _37163 _37164 h1)). Qed.
Lemma lem3509571 {A : Type'} : (@all ((A -> Prop) -> Prop)) = (@all ((A -> Prop) -> Prop)).
Proof. exact (eq_refl (@all ((A -> Prop) -> Prop))). Qed.
Lemma lem3509572 {_90715 _90724 A B : Type'} (_37163 : type627 A B) (_37164 : type627 _90715 _90724) (h1 : _37164 = (term2002 _90715 _90724)) : (term2143 _90715 _90724 A B _37163) = (term2222 _90715 _90724 A B _37164 _37163).
Proof. exact (MK_COMB (@lem3509571 A) (@lem3509570 _90715 _90724 A B _37163 _37164 h1)). Qed.
Lemma lem3509597 {A B : Type'} (GEN_PVAR_85 : A) (u : A -> Prop) (f : A -> B) (t : A -> Prop) (x : A) : (term61 A B GEN_PVAR_85 u f t x) = (term61 A B GEN_PVAR_85 u f t x).
Proof. exact (eq_refl (term61 A B GEN_PVAR_85 u f t x)). Qed.
Lemma lem3509598 {A B : Type'} (GEN_PVAR_85 : A) (u : A -> Prop) (f : A -> B) (t : A -> Prop) : (term63 A B GEN_PVAR_85 u f t) = (term63 A B GEN_PVAR_85 u f t).
Proof. exact (fun_ext (fun x : A => @lem3509597 A B GEN_PVAR_85 u f t x)). Qed.
Lemma lem3509599 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem3509600 {A B : Type'} (GEN_PVAR_85 : A) (u : A -> Prop) (f : A -> B) (t : A -> Prop) : (term65 A B GEN_PVAR_85 u f t) = (term65 A B GEN_PVAR_85 u f t).
Proof. exact (MK_COMB (@lem3509599 A) (@lem3509598 A B GEN_PVAR_85 u f t)). Qed.
Lemma lem3509611 {A B : Type'} (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) (t : A -> Prop) (GEN_PVAR_85 : A) : (term2201 A B _37163 u f t GEN_PVAR_85) = (term2201 A B _37163 u f t GEN_PVAR_85).
Proof. exact (eq_refl (term2201 A B _37163 u f t GEN_PVAR_85)). Qed.
Lemma lem3509612 {A B : Type'} (_37163 : type627 A B) (GEN_PVAR_85 : A) (u : A -> Prop) (f : A -> B) (t : A -> Prop) : ((_37163 u f t GEN_PVAR_85) = (term65 A B GEN_PVAR_85 u f t)) = ((_37163 u f t GEN_PVAR_85) = (term65 A B GEN_PVAR_85 u f t)).
Proof. exact (MK_COMB (@lem3509611 A B _37163 u f t GEN_PVAR_85) (@lem3509600 A B GEN_PVAR_85 u f t)). Qed.
Lemma lem3509613 {A B : Type'} (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) (t : A -> Prop) : (term2203 A B _37163 u f t) = (term2203 A B _37163 u f t).
Proof. exact (fun_ext (fun GEN_PVAR_85 : A => @lem3509612 A B _37163 GEN_PVAR_85 u f t)). Qed.
Lemma lem3509614 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem3509615 {A B : Type'} (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) (t : A -> Prop) : (term2204 A B _37163 u f t) = (term2204 A B _37163 u f t).
Proof. exact (MK_COMB (@lem3509614 A) (@lem3509613 A B _37163 u f t)). Qed.
Lemma lem3509616 {A B : Type'} (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) : (term2205 A B _37163 u f) = (term2205 A B _37163 u f).
Proof. exact (fun_ext (fun t : A -> Prop => @lem3509615 A B _37163 u f t)). Qed.
Lemma lem3509617 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem3509618 {A B : Type'} (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) : (term2206 A B _37163 u f) = (term2206 A B _37163 u f).
Proof. exact (MK_COMB (@lem3509617 A) (@lem3509616 A B _37163 u f)). Qed.
Lemma lem3509619 {A B : Type'} (_37163 : type627 A B) (u : A -> Prop) : (term2207 A B _37163 u) = (term2207 A B _37163 u).
Proof. exact (fun_ext (fun f : A -> B => @lem3509618 A B _37163 u f)). Qed.
Lemma lem3509620 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem3509621 {A B : Type'} (_37163 : type627 A B) (u : A -> Prop) : (term2208 A B _37163 u) = (term2208 A B _37163 u).
Proof. exact (MK_COMB (@lem3509620 A B) (@lem3509619 A B _37163 u)). Qed.
Lemma lem3509622 {A B : Type'} (_37163 : type627 A B) : (term2209 A B _37163) = (term2209 A B _37163).
Proof. exact (fun_ext (fun u : A -> Prop => @lem3509621 A B _37163 u)). Qed.
Lemma lem3509623 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem3509624 {A B : Type'} (_37163 : type627 A B) : (term2210 A B _37163) = (term2210 A B _37163).
Proof. exact (MK_COMB (@lem3509623 A) (@lem3509622 A B _37163)). Qed.
Lemma lem3509625 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem3509626 {A B : Type'} (_37163 : type627 A B) : (term2211 A B _37163) = (term2211 A B _37163).
Proof. exact (MK_COMB (@lem3509625) (@lem3509624 A B _37163)). Qed.
Lemma lem3509627 {_90715 _90724 A B : Type'} (_37163 : type627 A B) (_37164 : type627 _90715 _90724) (h1 : _37164 = (term2002 _90715 _90724)) : (term2212 _90715 _90724 A B _37163) = (term2223 _90715 _90724 A B _37164 _37163).
Proof. exact (MK_COMB (@lem3509626 A B _37163) (@lem3509572 _90715 _90724 A B _37163 _37164 h1)). Qed.
Lemma lem3509628 {_90715 _90724 A B : Type'} (_37164 : type627 _90715 _90724) (h1 : _37164 = (term2002 _90715 _90724)) : (term2213 _90715 _90724 A B) = (term2224 _90715 _90724 A B _37164).
Proof. exact (fun_ext (fun _37163 : type627 A B => @lem3509627 _90715 _90724 A B _37163 _37164 h1)). Qed.
Lemma lem3509629 {A B : Type'} : (@all ((A -> Prop) -> (A -> B) -> (A -> Prop) -> A -> Prop)) = (@all ((A -> Prop) -> (A -> B) -> (A -> Prop) -> A -> Prop)).
Proof. exact (eq_refl (@all ((A -> Prop) -> (A -> B) -> (A -> Prop) -> A -> Prop))). Qed.
Lemma lem3509630 {_90715 _90724 A B : Type'} (_37164 : type627 _90715 _90724) (h1 : _37164 = (term2002 _90715 _90724)) : (term2214 _90715 _90724 A B) = (term2225 _90715 _90724 A B _37164).
Proof. exact (MK_COMB (@lem3509629 A B) (@lem3509628 _90715 _90724 A B _37164 h1)). Qed.
Lemma lem3509631 {_90715 _90724 A B : Type'} (_37164 : type627 _90715 _90724) : term2226 _90715 _90724 A B _37164.
Proof. exact (fun h0 : _37164 = (term2002 _90715 _90724) => @lem3509630 _90715 _90724 A B _37164 h0). Qed.
Lemma lem3509632 {_90715 _90724 A B : Type'} : term2227 _90715 _90724 A B.
Proof. exact (fun _37164 : type627 _90715 _90724 => @lem3509631 _90715 _90724 A B _37164). Qed.
Lemma lem3509634 {_3603 : Type'} (P : Prop) (c : _3603) (Q : _3603 -> Prop) : term2146 _3603 P c Q.
Proof. exact (EQ_MP (@lem20230 _3603 P c Q) (@lem0)). Qed.
Lemma lem3509635 {_90715 _90724 : Type'} (P : Prop) (c : type627 _90715 _90724) (Q : type132 _90715 _90724) : term2147 _90715 _90724 P c Q.
Proof. exact (@lem3509634 (type627 _90715 _90724) P c Q). Qed.
Lemma lem3509636 {_90715 _90724 A B : Type'} : term2228 _90715 _90724 A B.
Proof. exact (@lem3509635 _90715 _90724 (term2214 _90715 _90724 A B) (term2002 _90715 _90724) (term2229 _90715 _90724 A B)). Qed.
Lemma lem3509637 {_90715 _90724 A B : Type'} (_37164 : type627 _90715 _90724) : (term2230 _90715 _90724 A B _37164) = (term2225 _90715 _90724 A B _37164).
Proof. exact (eq_refl (term2230 _90715 _90724 A B _37164)). Qed.
Lemma lem3509638 {_90715 _90724 A B : Type'} : (term2231 _90715 _90724 A B) = (term2231 _90715 _90724 A B).
Proof. exact (eq_refl (term2231 _90715 _90724 A B)). Qed.
Lemma lem3509639 {_90715 _90724 A B : Type'} (_37164 : type627 _90715 _90724) : ((term2214 _90715 _90724 A B) = (term2230 _90715 _90724 A B _37164)) = ((term2214 _90715 _90724 A B) = (term2225 _90715 _90724 A B _37164)).
Proof. exact (MK_COMB (@lem3509638 _90715 _90724 A B) (@lem3509637 _90715 _90724 A B _37164)). Qed.
Lemma lem3509640 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) : (term2152 _90715 _90724 _37164) = (term2152 _90715 _90724 _37164).
Proof. exact (eq_refl (term2152 _90715 _90724 _37164)). Qed.
Lemma lem3509641 {_90715 _90724 A B : Type'} (_37164 : type627 _90715 _90724) : (term2232 _90715 _90724 A B _37164) = (term2226 _90715 _90724 A B _37164).
Proof. exact (MK_COMB (@lem3509640 _90715 _90724 _37164) (@lem3509639 _90715 _90724 A B _37164)). Qed.
Lemma lem3509642 {_90715 _90724 A B : Type'} : (term2233 _90715 _90724 A B) = (term2234 _90715 _90724 A B).
Proof. exact (fun_ext (fun _37164 : type627 _90715 _90724 => @lem3509641 _90715 _90724 A B _37164)). Qed.
Lemma lem3509643 {_90715 _90724 : Type'} : (@all ((_90715 -> Prop) -> (_90715 -> _90724) -> (_90715 -> Prop) -> _90715 -> Prop)) = (@all ((_90715 -> Prop) -> (_90715 -> _90724) -> (_90715 -> Prop) -> _90715 -> Prop)).
Proof. exact (eq_refl (@all ((_90715 -> Prop) -> (_90715 -> _90724) -> (_90715 -> Prop) -> _90715 -> Prop))). Qed.
Lemma lem3509644 {_90715 _90724 A B : Type'} : (term2235 _90715 _90724 A B) = (term2227 _90715 _90724 A B).
Proof. exact (MK_COMB (@lem3509643 _90715 _90724) (@lem3509642 _90715 _90724 A B)). Qed.
Lemma lem3509645 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem3509646 {_90715 _90724 A B : Type'} : (term2236 _90715 _90724 A B) = (term2237 _90715 _90724 A B).
Proof. exact (MK_COMB (@lem3509645) (@lem3509644 _90715 _90724 A B)). Qed.
Lemma lem3509647 {_90715 _90724 A B : Type'} (_37164 : type627 _90715 _90724) : (term2230 _90715 _90724 A B _37164) = (term2225 _90715 _90724 A B _37164).
Proof. exact (eq_refl (term2230 _90715 _90724 A B _37164)). Qed.
Lemma lem3509648 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) : (term2152 _90715 _90724 _37164) = (term2152 _90715 _90724 _37164).
Proof. exact (eq_refl (term2152 _90715 _90724 _37164)). Qed.
Lemma lem3509649 {_90715 _90724 A B : Type'} (_37164 : type627 _90715 _90724) : (term2238 _90715 _90724 A B _37164) = (term2239 _90715 _90724 A B _37164).
Proof. exact (MK_COMB (@lem3509648 _90715 _90724 _37164) (@lem3509647 _90715 _90724 A B _37164)). Qed.
Lemma lem3509650 {_90715 _90724 A B : Type'} : (term2240 _90715 _90724 A B) = (term2241 _90715 _90724 A B).
Proof. exact (fun_ext (fun _37164 : type627 _90715 _90724 => @lem3509649 _90715 _90724 A B _37164)). Qed.
Lemma lem3509651 {_90715 _90724 : Type'} : (@all ((_90715 -> Prop) -> (_90715 -> _90724) -> (_90715 -> Prop) -> _90715 -> Prop)) = (@all ((_90715 -> Prop) -> (_90715 -> _90724) -> (_90715 -> Prop) -> _90715 -> Prop)).
Proof. exact (eq_refl (@all ((_90715 -> Prop) -> (_90715 -> _90724) -> (_90715 -> Prop) -> _90715 -> Prop))). Qed.
Lemma lem3509652 {_90715 _90724 A B : Type'} : (term2242 _90715 _90724 A B) = (term2243 _90715 _90724 A B).
Proof. exact (MK_COMB (@lem3509651 _90715 _90724) (@lem3509650 _90715 _90724 A B)). Qed.
Lemma lem3509653 {_90715 _90724 A B : Type'} : (term2231 _90715 _90724 A B) = (term2231 _90715 _90724 A B).
Proof. exact (eq_refl (term2231 _90715 _90724 A B)). Qed.
Lemma lem3509654 {_90715 _90724 A B : Type'} : ((term2214 _90715 _90724 A B) = (term2242 _90715 _90724 A B)) = ((term2214 _90715 _90724 A B) = (term2243 _90715 _90724 A B)).
Proof. exact (MK_COMB (@lem3509653 _90715 _90724 A B) (@lem3509652 _90715 _90724 A B)). Qed.
Lemma lem3509655 {_90715 _90724 A B : Type'} : (term2228 _90715 _90724 A B) = (term2244 _90715 _90724 A B).
Proof. exact (MK_COMB (@lem3509646 _90715 _90724 A B) (@lem3509654 _90715 _90724 A B)). Qed.
Lemma lem3509656 {_90715 _90724 A B : Type'} : term2244 _90715 _90724 A B.
Proof. exact (EQ_MP (@lem3509655 _90715 _90724 A B) (@lem3509636 _90715 _90724 A B)). Qed.
Lemma lem3509657 {_90715 _90724 A B : Type'} : (term2214 _90715 _90724 A B) = (term2243 _90715 _90724 A B).
Proof. exact (@lem3509656 _90715 _90724 A B (@lem3509632 _90715 _90724 A B)). Qed.
Lemma lem3509659 {_3571 _3575 : Type'} (s : _3575 -> _3571) (t : _3575 -> _3571) : (s = (term2166 _3571 _3575 t)) = (term2167 _3571 _3575 s t).
Proof. exact (EQ_MP (@lem19792 _3571 _3575 s t) (@lem0)). Qed.
Lemma lem3509660 {_90715 _90724 : Type'} (s : type627 _90715 _90724) (t : type627 _90715 _90724) : (s = (term2168 _90715 _90724 t)) = (term2169 _90715 _90724 s t).
Proof. exact (@lem3509659 (type527 _90715 _90724) (_90715 -> Prop) s t). Qed.
Lemma lem3509661 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) : (_37164 = (term2170 _90715 _90724)) = (term2171 _90715 _90724 _37164).
Proof. exact (@lem3509660 _90715 _90724 _37164 (term2002 _90715 _90724)). Qed.
Lemma lem3509662 {_90715 _90724 : Type'} (u : _90715 -> Prop) : (term2003 _90715 _90724 u) = (term2004 _90715 _90724 u).
Proof. exact (eq_refl (term2003 _90715 _90724 u)). Qed.
Lemma lem3509663 {_90715 _90724 : Type'} : (term2170 _90715 _90724) = (term2002 _90715 _90724).
Proof. exact (fun_ext (fun u : _90715 -> Prop => @lem3509662 _90715 _90724 u)). Qed.
Lemma lem3509664 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) : (@eq ((_90715 -> Prop) -> (_90715 -> _90724) -> (_90715 -> Prop) -> _90715 -> Prop) _37164) = (@eq ((_90715 -> Prop) -> (_90715 -> _90724) -> (_90715 -> Prop) -> _90715 -> Prop) _37164).
Proof. exact (eq_refl (@eq ((_90715 -> Prop) -> (_90715 -> _90724) -> (_90715 -> Prop) -> _90715 -> Prop) _37164)). Qed.
Lemma lem3509665 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) : (_37164 = (term2170 _90715 _90724)) = (_37164 = (term2002 _90715 _90724)).
Proof. exact (MK_COMB (@lem3509664 _90715 _90724 _37164) (@lem3509663 _90715 _90724)). Qed.
Lemma lem3509666 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem3509667 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) : (term2172 _90715 _90724 _37164) = (term2173 _90715 _90724 _37164).
Proof. exact (MK_COMB (@lem3509666) (@lem3509665 _90715 _90724 _37164)). Qed.
Lemma lem3509668 {_90715 _90724 : Type'} (u : _90715 -> Prop) : (term2003 _90715 _90724 u) = (term2004 _90715 _90724 u).
Proof. exact (eq_refl (term2003 _90715 _90724 u)). Qed.
Lemma lem3509669 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) (u : _90715 -> Prop) : (term2005 _90715 _90724 _37164 u) = (term2005 _90715 _90724 _37164 u).
Proof. exact (eq_refl (term2005 _90715 _90724 _37164 u)). Qed.
Lemma lem3509670 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) (u : _90715 -> Prop) : ((_37164 u) = (term2003 _90715 _90724 u)) = ((_37164 u) = (term2004 _90715 _90724 u)).
Proof. exact (MK_COMB (@lem3509669 _90715 _90724 _37164 u) (@lem3509668 _90715 _90724 u)). Qed.
Lemma lem3509671 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) : (term2174 _90715 _90724 _37164) = (term2175 _90715 _90724 _37164).
Proof. exact (fun_ext (fun u : _90715 -> Prop => @lem3509670 _90715 _90724 _37164 u)). Qed.
Lemma lem3509672 {_90715 : Type'} : (@all (_90715 -> Prop)) = (@all (_90715 -> Prop)).
Proof. exact (eq_refl (@all (_90715 -> Prop))). Qed.
Lemma lem3509673 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) : (term2171 _90715 _90724 _37164) = (term2176 _90715 _90724 _37164).
Proof. exact (MK_COMB (@lem3509672 _90715) (@lem3509671 _90715 _90724 _37164)). Qed.
Lemma lem3509674 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) : ((_37164 = (term2170 _90715 _90724)) = (term2171 _90715 _90724 _37164)) = ((_37164 = (term2002 _90715 _90724)) = (term2176 _90715 _90724 _37164)).
Proof. exact (MK_COMB (@lem3509667 _90715 _90724 _37164) (@lem3509673 _90715 _90724 _37164)). Qed.
Lemma lem3509675 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) : (_37164 = (term2002 _90715 _90724)) = (term2176 _90715 _90724 _37164).
Proof. exact (EQ_MP (@lem3509674 _90715 _90724 _37164) (@lem3509661 _90715 _90724 _37164)). Qed.
Lemma lem3509677 {_3571 _3575 : Type'} (s : _3575 -> _3571) (t : _3575 -> _3571) : (s = (term2166 _3571 _3575 t)) = (term2167 _3571 _3575 s t).
Proof. exact (EQ_MP (@lem19792 _3571 _3575 s t) (@lem0)). Qed.
Lemma lem3509678 {_90715 _90724 : Type'} (s : type527 _90715 _90724) (t : type527 _90715 _90724) : (s = (term2177 _90715 _90724 t)) = (term2178 _90715 _90724 s t).
Proof. exact (@lem3509677 (type672 _90715) (_90715 -> _90724) s t). Qed.
Lemma lem3509679 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) (u : _90715 -> Prop) : ((_37164 u) = (term2179 _90715 _90724 u)) = (term2180 _90715 _90724 _37164 u).
Proof. exact (@lem3509678 _90715 _90724 (_37164 u) (term2004 _90715 _90724 u)). Qed.
Lemma lem3509680 {_90715 _90724 : Type'} (u : _90715 -> Prop) (f : _90715 -> _90724) : (term2006 _90715 _90724 u f) = (term2007 _90715 _90724 u f).
Proof. exact (eq_refl (term2006 _90715 _90724 u f)). Qed.
Lemma lem3509681 {_90715 _90724 : Type'} (u : _90715 -> Prop) : (term2179 _90715 _90724 u) = (term2004 _90715 _90724 u).
Proof. exact (fun_ext (fun f : _90715 -> _90724 => @lem3509680 _90715 _90724 u f)). Qed.
Lemma lem3509682 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) (u : _90715 -> Prop) : (term2005 _90715 _90724 _37164 u) = (term2005 _90715 _90724 _37164 u).
Proof. exact (eq_refl (term2005 _90715 _90724 _37164 u)). Qed.
Lemma lem3509683 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) (u : _90715 -> Prop) : ((_37164 u) = (term2179 _90715 _90724 u)) = ((_37164 u) = (term2004 _90715 _90724 u)).
Proof. exact (MK_COMB (@lem3509682 _90715 _90724 _37164 u) (@lem3509681 _90715 _90724 u)). Qed.
Lemma lem3509684 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem3509685 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) (u : _90715 -> Prop) : (term2181 _90715 _90724 _37164 u) = (term2182 _90715 _90724 _37164 u).
Proof. exact (MK_COMB (@lem3509684) (@lem3509683 _90715 _90724 _37164 u)). Qed.
Lemma lem3509686 {_90715 _90724 : Type'} (u : _90715 -> Prop) (f : _90715 -> _90724) : (term2006 _90715 _90724 u f) = (term2007 _90715 _90724 u f).
Proof. exact (eq_refl (term2006 _90715 _90724 u f)). Qed.
Lemma lem3509687 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) (u : _90715 -> Prop) (f : _90715 -> _90724) : (term2008 _90715 _90724 _37164 u f) = (term2008 _90715 _90724 _37164 u f).
Proof. exact (eq_refl (term2008 _90715 _90724 _37164 u f)). Qed.
Lemma lem3509688 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) (u : _90715 -> Prop) (f : _90715 -> _90724) : ((_37164 u f) = (term2006 _90715 _90724 u f)) = ((_37164 u f) = (term2007 _90715 _90724 u f)).
Proof. exact (MK_COMB (@lem3509687 _90715 _90724 _37164 u f) (@lem3509686 _90715 _90724 u f)). Qed.
Lemma lem3509689 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) (u : _90715 -> Prop) : (term2183 _90715 _90724 _37164 u) = (term2184 _90715 _90724 _37164 u).
Proof. exact (fun_ext (fun f : _90715 -> _90724 => @lem3509688 _90715 _90724 _37164 u f)). Qed.
Lemma lem3509690 {_90715 _90724 : Type'} : (@all (_90715 -> _90724)) = (@all (_90715 -> _90724)).
Proof. exact (eq_refl (@all (_90715 -> _90724))). Qed.
Lemma lem3509691 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) (u : _90715 -> Prop) : (term2180 _90715 _90724 _37164 u) = (term2185 _90715 _90724 _37164 u).
Proof. exact (MK_COMB (@lem3509690 _90715 _90724) (@lem3509689 _90715 _90724 _37164 u)). Qed.
Lemma lem3509692 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) (u : _90715 -> Prop) : (((_37164 u) = (term2179 _90715 _90724 u)) = (term2180 _90715 _90724 _37164 u)) = (((_37164 u) = (term2004 _90715 _90724 u)) = (term2185 _90715 _90724 _37164 u)).
Proof. exact (MK_COMB (@lem3509685 _90715 _90724 _37164 u) (@lem3509691 _90715 _90724 _37164 u)). Qed.
Lemma lem3509693 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) (u : _90715 -> Prop) : ((_37164 u) = (term2004 _90715 _90724 u)) = (term2185 _90715 _90724 _37164 u).
Proof. exact (EQ_MP (@lem3509692 _90715 _90724 _37164 u) (@lem3509679 _90715 _90724 _37164 u)). Qed.
Lemma lem3509695 {_3571 _3575 : Type'} (s : _3575 -> _3571) (t : _3575 -> _3571) : (s = (term2166 _3571 _3575 t)) = (term2167 _3571 _3575 s t).
Proof. exact (EQ_MP (@lem19792 _3571 _3575 s t) (@lem0)). Qed.
Lemma lem3509696 {_90715 : Type'} (s : type672 _90715) (t : type672 _90715) : (s = (term2186 _90715 t)) = (term2187 _90715 s t).
Proof. exact (@lem3509695 (_90715 -> Prop) (_90715 -> Prop) s t). Qed.
Lemma lem3509697 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) (u : _90715 -> Prop) (f : _90715 -> _90724) : ((_37164 u f) = (term2188 _90715 _90724 u f)) = (term2189 _90715 _90724 _37164 u f).
Proof. exact (@lem3509696 _90715 (_37164 u f) (term2007 _90715 _90724 u f)). Qed.
Lemma lem3509698 {_90715 _90724 : Type'} (u : _90715 -> Prop) (f : _90715 -> _90724) (t : _90715 -> Prop) : (term2009 _90715 _90724 u f t) = (term67 _90715 _90724 u f t).
Proof. exact (eq_refl (term2009 _90715 _90724 u f t)). Qed.
Lemma lem3509699 {_90715 _90724 : Type'} (u : _90715 -> Prop) (f : _90715 -> _90724) : (term2188 _90715 _90724 u f) = (term2007 _90715 _90724 u f).
Proof. exact (fun_ext (fun t : _90715 -> Prop => @lem3509698 _90715 _90724 u f t)). Qed.
Lemma lem3509700 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) (u : _90715 -> Prop) (f : _90715 -> _90724) : (term2008 _90715 _90724 _37164 u f) = (term2008 _90715 _90724 _37164 u f).
Proof. exact (eq_refl (term2008 _90715 _90724 _37164 u f)). Qed.
Lemma lem3509701 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) (u : _90715 -> Prop) (f : _90715 -> _90724) : ((_37164 u f) = (term2188 _90715 _90724 u f)) = ((_37164 u f) = (term2007 _90715 _90724 u f)).
Proof. exact (MK_COMB (@lem3509700 _90715 _90724 _37164 u f) (@lem3509699 _90715 _90724 u f)). Qed.
Lemma lem3509702 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem3509703 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) (u : _90715 -> Prop) (f : _90715 -> _90724) : (term2190 _90715 _90724 _37164 u f) = (term2191 _90715 _90724 _37164 u f).
Proof. exact (MK_COMB (@lem3509702) (@lem3509701 _90715 _90724 _37164 u f)). Qed.
Lemma lem3509704 {_90715 _90724 : Type'} (u : _90715 -> Prop) (f : _90715 -> _90724) (t : _90715 -> Prop) : (term2009 _90715 _90724 u f t) = (term67 _90715 _90724 u f t).
Proof. exact (eq_refl (term2009 _90715 _90724 u f t)). Qed.
Lemma lem3509705 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) (u : _90715 -> Prop) (f : _90715 -> _90724) (t : _90715 -> Prop) : (term2010 _90715 _90724 _37164 u f t) = (term2010 _90715 _90724 _37164 u f t).
Proof. exact (eq_refl (term2010 _90715 _90724 _37164 u f t)). Qed.
Lemma lem3509706 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) (u : _90715 -> Prop) (f : _90715 -> _90724) (t : _90715 -> Prop) : ((_37164 u f t) = (term2009 _90715 _90724 u f t)) = ((_37164 u f t) = (term67 _90715 _90724 u f t)).
Proof. exact (MK_COMB (@lem3509705 _90715 _90724 _37164 u f t) (@lem3509704 _90715 _90724 u f t)). Qed.
Lemma lem3509707 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) (u : _90715 -> Prop) (f : _90715 -> _90724) : (term2192 _90715 _90724 _37164 u f) = (term2193 _90715 _90724 _37164 u f).
Proof. exact (fun_ext (fun t : _90715 -> Prop => @lem3509706 _90715 _90724 _37164 u f t)). Qed.
Lemma lem3509708 {_90715 : Type'} : (@all (_90715 -> Prop)) = (@all (_90715 -> Prop)).
Proof. exact (eq_refl (@all (_90715 -> Prop))). Qed.
Lemma lem3509709 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) (u : _90715 -> Prop) (f : _90715 -> _90724) : (term2189 _90715 _90724 _37164 u f) = (term2194 _90715 _90724 _37164 u f).
Proof. exact (MK_COMB (@lem3509708 _90715) (@lem3509707 _90715 _90724 _37164 u f)). Qed.
Lemma lem3509710 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) (u : _90715 -> Prop) (f : _90715 -> _90724) : (((_37164 u f) = (term2188 _90715 _90724 u f)) = (term2189 _90715 _90724 _37164 u f)) = (((_37164 u f) = (term2007 _90715 _90724 u f)) = (term2194 _90715 _90724 _37164 u f)).
Proof. exact (MK_COMB (@lem3509703 _90715 _90724 _37164 u f) (@lem3509709 _90715 _90724 _37164 u f)). Qed.
Lemma lem3509711 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) (u : _90715 -> Prop) (f : _90715 -> _90724) : ((_37164 u f) = (term2007 _90715 _90724 u f)) = (term2194 _90715 _90724 _37164 u f).
Proof. exact (EQ_MP (@lem3509710 _90715 _90724 _37164 u f) (@lem3509697 _90715 _90724 _37164 u f)). Qed.
Lemma lem3509713 {_3571 _3575 : Type'} (s : _3575 -> _3571) (t : _3575 -> _3571) : (s = (term2166 _3571 _3575 t)) = (term2167 _3571 _3575 s t).
Proof. exact (EQ_MP (@lem19792 _3571 _3575 s t) (@lem0)). Qed.
Lemma lem3509714 {_90715 : Type'} (s : _90715 -> Prop) (t : _90715 -> Prop) : (s = (term1665 _90715 t)) = (term2195 _90715 s t).
Proof. exact (@lem3509713 Prop _90715 s t). Qed.
Lemma lem3509715 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) (u : _90715 -> Prop) (f : _90715 -> _90724) (t : _90715 -> Prop) : ((_37164 u f t) = (term2196 _90715 _90724 u f t)) = (term2197 _90715 _90724 _37164 u f t).
Proof. exact (@lem3509714 _90715 (_37164 u f t) (term67 _90715 _90724 u f t)). Qed.
Lemma lem3509716 {_90715 _90724 : Type'} (GEN_PVAR_84 : _90715) (u : _90715 -> Prop) (f : _90715 -> _90724) (t : _90715 -> Prop) : (term2198 _90715 _90724 u f t GEN_PVAR_84) = (term65 _90715 _90724 GEN_PVAR_84 u f t).
Proof. exact (eq_refl (term2198 _90715 _90724 u f t GEN_PVAR_84)). Qed.
Lemma lem3509717 {_90715 _90724 : Type'} (u : _90715 -> Prop) (f : _90715 -> _90724) (t : _90715 -> Prop) : (term2196 _90715 _90724 u f t) = (term67 _90715 _90724 u f t).
Proof. exact (fun_ext (fun GEN_PVAR_84 : _90715 => @lem3509716 _90715 _90724 GEN_PVAR_84 u f t)). Qed.
Lemma lem3509718 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) (u : _90715 -> Prop) (f : _90715 -> _90724) (t : _90715 -> Prop) : (term2010 _90715 _90724 _37164 u f t) = (term2010 _90715 _90724 _37164 u f t).
Proof. exact (eq_refl (term2010 _90715 _90724 _37164 u f t)). Qed.
Lemma lem3509719 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) (u : _90715 -> Prop) (f : _90715 -> _90724) (t : _90715 -> Prop) : ((_37164 u f t) = (term2196 _90715 _90724 u f t)) = ((_37164 u f t) = (term67 _90715 _90724 u f t)).
Proof. exact (MK_COMB (@lem3509718 _90715 _90724 _37164 u f t) (@lem3509717 _90715 _90724 u f t)). Qed.
Lemma lem3509720 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem3509721 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) (u : _90715 -> Prop) (f : _90715 -> _90724) (t : _90715 -> Prop) : (term2199 _90715 _90724 _37164 u f t) = (term2200 _90715 _90724 _37164 u f t).
Proof. exact (MK_COMB (@lem3509720) (@lem3509719 _90715 _90724 _37164 u f t)). Qed.
Lemma lem3509722 {_90715 _90724 : Type'} (GEN_PVAR_84 : _90715) (u : _90715 -> Prop) (f : _90715 -> _90724) (t : _90715 -> Prop) : (term2198 _90715 _90724 u f t GEN_PVAR_84) = (term65 _90715 _90724 GEN_PVAR_84 u f t).
Proof. exact (eq_refl (term2198 _90715 _90724 u f t GEN_PVAR_84)). Qed.
Lemma lem3509723 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) (u : _90715 -> Prop) (f : _90715 -> _90724) (t : _90715 -> Prop) (GEN_PVAR_84 : _90715) : (term2201 _90715 _90724 _37164 u f t GEN_PVAR_84) = (term2201 _90715 _90724 _37164 u f t GEN_PVAR_84).
Proof. exact (eq_refl (term2201 _90715 _90724 _37164 u f t GEN_PVAR_84)). Qed.
Lemma lem3509724 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) (GEN_PVAR_84 : _90715) (u : _90715 -> Prop) (f : _90715 -> _90724) (t : _90715 -> Prop) : ((_37164 u f t GEN_PVAR_84) = (term2198 _90715 _90724 u f t GEN_PVAR_84)) = ((_37164 u f t GEN_PVAR_84) = (term65 _90715 _90724 GEN_PVAR_84 u f t)).
Proof. exact (MK_COMB (@lem3509723 _90715 _90724 _37164 u f t GEN_PVAR_84) (@lem3509722 _90715 _90724 GEN_PVAR_84 u f t)). Qed.
Lemma lem3509725 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) (u : _90715 -> Prop) (f : _90715 -> _90724) (t : _90715 -> Prop) : (term2202 _90715 _90724 _37164 u f t) = (term2203 _90715 _90724 _37164 u f t).
Proof. exact (fun_ext (fun GEN_PVAR_84 : _90715 => @lem3509724 _90715 _90724 _37164 GEN_PVAR_84 u f t)). Qed.
Lemma lem3509726 {_90715 : Type'} : (@all _90715) = (@all _90715).
Proof. exact (eq_refl (@all _90715)). Qed.
Lemma lem3509727 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) (u : _90715 -> Prop) (f : _90715 -> _90724) (t : _90715 -> Prop) : (term2197 _90715 _90724 _37164 u f t) = (term2204 _90715 _90724 _37164 u f t).
Proof. exact (MK_COMB (@lem3509726 _90715) (@lem3509725 _90715 _90724 _37164 u f t)). Qed.
Lemma lem3509728 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) (u : _90715 -> Prop) (f : _90715 -> _90724) (t : _90715 -> Prop) : (((_37164 u f t) = (term2196 _90715 _90724 u f t)) = (term2197 _90715 _90724 _37164 u f t)) = (((_37164 u f t) = (term67 _90715 _90724 u f t)) = (term2204 _90715 _90724 _37164 u f t)).
Proof. exact (MK_COMB (@lem3509721 _90715 _90724 _37164 u f t) (@lem3509727 _90715 _90724 _37164 u f t)). Qed.
Lemma lem3509729 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) (u : _90715 -> Prop) (f : _90715 -> _90724) (t : _90715 -> Prop) : ((_37164 u f t) = (term67 _90715 _90724 u f t)) = (term2204 _90715 _90724 _37164 u f t).
Proof. exact (EQ_MP (@lem3509728 _90715 _90724 _37164 u f t) (@lem3509715 _90715 _90724 _37164 u f t)). Qed.
Lemma lem3509730 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) (GEN_PVAR_84 : _90715) (u : _90715 -> Prop) (f : _90715 -> _90724) (t : _90715 -> Prop) : ((_37164 u f t GEN_PVAR_84) = (term65 _90715 _90724 GEN_PVAR_84 u f t)) = ((_37164 u f t GEN_PVAR_84) = (term65 _90715 _90724 GEN_PVAR_84 u f t)).
Proof. exact (eq_refl ((_37164 u f t GEN_PVAR_84) = (term65 _90715 _90724 GEN_PVAR_84 u f t))). Qed.
Lemma lem3509731 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) (u : _90715 -> Prop) (f : _90715 -> _90724) (t : _90715 -> Prop) : (term2203 _90715 _90724 _37164 u f t) = (term2203 _90715 _90724 _37164 u f t).
Proof. exact (fun_ext (fun GEN_PVAR_84 : _90715 => @lem3509730 _90715 _90724 _37164 GEN_PVAR_84 u f t)). Qed.
Lemma lem3509732 {_90715 : Type'} : (@all _90715) = (@all _90715).
Proof. exact (eq_refl (@all _90715)). Qed.
Lemma lem3509733 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) (u : _90715 -> Prop) (f : _90715 -> _90724) (t : _90715 -> Prop) : (term2204 _90715 _90724 _37164 u f t) = (term2204 _90715 _90724 _37164 u f t).
Proof. exact (MK_COMB (@lem3509732 _90715) (@lem3509731 _90715 _90724 _37164 u f t)). Qed.
Lemma lem3509734 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) (u : _90715 -> Prop) (f : _90715 -> _90724) (t : _90715 -> Prop) : ((_37164 u f t) = (term67 _90715 _90724 u f t)) = (term2204 _90715 _90724 _37164 u f t).
Proof. exact (TRANS (@lem3509729 _90715 _90724 _37164 u f t) (@lem3509733 _90715 _90724 _37164 u f t)). Qed.
Lemma lem3509735 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) (u : _90715 -> Prop) (f : _90715 -> _90724) : (term2193 _90715 _90724 _37164 u f) = (term2205 _90715 _90724 _37164 u f).
Proof. exact (fun_ext (fun t : _90715 -> Prop => @lem3509734 _90715 _90724 _37164 u f t)). Qed.
Lemma lem3509736 {_90715 : Type'} : (@all (_90715 -> Prop)) = (@all (_90715 -> Prop)).
Proof. exact (eq_refl (@all (_90715 -> Prop))). Qed.
Lemma lem3509737 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) (u : _90715 -> Prop) (f : _90715 -> _90724) : (term2194 _90715 _90724 _37164 u f) = (term2206 _90715 _90724 _37164 u f).
Proof. exact (MK_COMB (@lem3509736 _90715) (@lem3509735 _90715 _90724 _37164 u f)). Qed.
Lemma lem3509738 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) (u : _90715 -> Prop) (f : _90715 -> _90724) : ((_37164 u f) = (term2007 _90715 _90724 u f)) = (term2206 _90715 _90724 _37164 u f).
Proof. exact (TRANS (@lem3509711 _90715 _90724 _37164 u f) (@lem3509737 _90715 _90724 _37164 u f)). Qed.
Lemma lem3509739 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) (u : _90715 -> Prop) : (term2184 _90715 _90724 _37164 u) = (term2207 _90715 _90724 _37164 u).
Proof. exact (fun_ext (fun f : _90715 -> _90724 => @lem3509738 _90715 _90724 _37164 u f)). Qed.
Lemma lem3509740 {_90715 _90724 : Type'} : (@all (_90715 -> _90724)) = (@all (_90715 -> _90724)).
Proof. exact (eq_refl (@all (_90715 -> _90724))). Qed.
Lemma lem3509741 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) (u : _90715 -> Prop) : (term2185 _90715 _90724 _37164 u) = (term2208 _90715 _90724 _37164 u).
Proof. exact (MK_COMB (@lem3509740 _90715 _90724) (@lem3509739 _90715 _90724 _37164 u)). Qed.
Lemma lem3509742 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) (u : _90715 -> Prop) : ((_37164 u) = (term2004 _90715 _90724 u)) = (term2208 _90715 _90724 _37164 u).
Proof. exact (TRANS (@lem3509693 _90715 _90724 _37164 u) (@lem3509741 _90715 _90724 _37164 u)). Qed.
Lemma lem3509743 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) : (term2175 _90715 _90724 _37164) = (term2209 _90715 _90724 _37164).
Proof. exact (fun_ext (fun u : _90715 -> Prop => @lem3509742 _90715 _90724 _37164 u)). Qed.
Lemma lem3509744 {_90715 : Type'} : (@all (_90715 -> Prop)) = (@all (_90715 -> Prop)).
Proof. exact (eq_refl (@all (_90715 -> Prop))). Qed.
Lemma lem3509745 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) : (term2176 _90715 _90724 _37164) = (term2210 _90715 _90724 _37164).
Proof. exact (MK_COMB (@lem3509744 _90715) (@lem3509743 _90715 _90724 _37164)). Qed.
Lemma lem3509746 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) : (_37164 = (term2002 _90715 _90724)) = (term2210 _90715 _90724 _37164).
Proof. exact (TRANS (@lem3509675 _90715 _90724 _37164) (@lem3509745 _90715 _90724 _37164)). Qed.
Lemma lem3509747 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem3509748 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) : (term2152 _90715 _90724 _37164) = (term2211 _90715 _90724 _37164).
Proof. exact (MK_COMB (@lem3509747) (@lem3509746 _90715 _90724 _37164)). Qed.
Lemma lem3509749 {_90715 _90724 A B : Type'} (_37164 : type627 _90715 _90724) : (term2225 _90715 _90724 A B _37164) = (term2225 _90715 _90724 A B _37164).
Proof. exact (eq_refl (term2225 _90715 _90724 A B _37164)). Qed.
Lemma lem3509750 {_90715 _90724 A B : Type'} (_37164 : type627 _90715 _90724) : (term2239 _90715 _90724 A B _37164) = (term2245 _90715 _90724 A B _37164).
Proof. exact (MK_COMB (@lem3509748 _90715 _90724 _37164) (@lem3509749 _90715 _90724 A B _37164)). Qed.
Lemma lem3509751 {_90715 _90724 A B : Type'} : (term2241 _90715 _90724 A B) = (term2246 _90715 _90724 A B).
Proof. exact (fun_ext (fun _37164 : type627 _90715 _90724 => @lem3509750 _90715 _90724 A B _37164)). Qed.
Lemma lem3509752 {_90715 _90724 : Type'} : (@all ((_90715 -> Prop) -> (_90715 -> _90724) -> (_90715 -> Prop) -> _90715 -> Prop)) = (@all ((_90715 -> Prop) -> (_90715 -> _90724) -> (_90715 -> Prop) -> _90715 -> Prop)).
Proof. exact (eq_refl (@all ((_90715 -> Prop) -> (_90715 -> _90724) -> (_90715 -> Prop) -> _90715 -> Prop))). Qed.
Lemma lem3509753 {_90715 _90724 A B : Type'} : (term2243 _90715 _90724 A B) = (term2247 _90715 _90724 A B).
Proof. exact (MK_COMB (@lem3509752 _90715 _90724) (@lem3509751 _90715 _90724 A B)). Qed.
Lemma lem3509754 {_90715 _90724 A B : Type'} : (term2231 _90715 _90724 A B) = (term2231 _90715 _90724 A B).
Proof. exact (eq_refl (term2231 _90715 _90724 A B)). Qed.
Lemma lem3509755 {_90715 _90724 A B : Type'} : ((term2214 _90715 _90724 A B) = (term2243 _90715 _90724 A B)) = ((term2214 _90715 _90724 A B) = (term2247 _90715 _90724 A B)).
Proof. exact (MK_COMB (@lem3509754 _90715 _90724 A B) (@lem3509753 _90715 _90724 A B)). Qed.
Lemma lem3509756 {_90715 _90724 A B : Type'} : (term2214 _90715 _90724 A B) = (term2247 _90715 _90724 A B).
Proof. exact (EQ_MP (@lem3509755 _90715 _90724 A B) (@lem3509657 _90715 _90724 A B)). Qed.
Lemma lem3509757 {_90715 A : Type'} (_37165 : type627 _90715 A) (h1 : _37165 = (term2002 _90715 A)) : _37165 = (term2002 _90715 A).
Proof. exact (h1). Qed.
Lemma lem3509758 {_90715 : Type'} (u : _90715 -> Prop) : u = u.
Proof. exact (eq_refl u). Qed.
Lemma lem3509759 {_90715 A : Type'} (u : _90715 -> Prop) (_37165 : type627 _90715 A) (h1 : _37165 = (term2002 _90715 A)) : (_37165 u) = (term2003 _90715 A u).
Proof. exact (MK_COMB (@lem3509757 _90715 A _37165 h1) (@lem3509758 _90715 u)). Qed.
Lemma lem3509760 {_90715 A : Type'} (u : _90715 -> Prop) : (term2003 _90715 A u) = (term2004 _90715 A u).
Proof. exact (eq_refl (term2003 _90715 A u)). Qed.
Lemma lem3509761 {_90715 A : Type'} (_37165 : type627 _90715 A) (u : _90715 -> Prop) : (term2005 _90715 A _37165 u) = (term2005 _90715 A _37165 u).
Proof. exact (eq_refl (term2005 _90715 A _37165 u)). Qed.
Lemma lem3509762 {_90715 A : Type'} (_37165 : type627 _90715 A) (u : _90715 -> Prop) : ((_37165 u) = (term2003 _90715 A u)) = ((_37165 u) = (term2004 _90715 A u)).
Proof. exact (MK_COMB (@lem3509761 _90715 A _37165 u) (@lem3509760 _90715 A u)). Qed.
Lemma lem3509763 {_90715 A : Type'} (u : _90715 -> Prop) (_37165 : type627 _90715 A) (h1 : _37165 = (term2002 _90715 A)) : (_37165 u) = (term2004 _90715 A u).
Proof. exact (EQ_MP (@lem3509762 _90715 A _37165 u) (@lem3509759 _90715 A u _37165 h1)). Qed.
Lemma lem3509764 {_90715 A : Type'} (f : _90715 -> A) : f = f.
Proof. exact (eq_refl f). Qed.
Lemma lem3509765 {_90715 A : Type'} (u : _90715 -> Prop) (f : _90715 -> A) (_37165 : type627 _90715 A) (h1 : _37165 = (term2002 _90715 A)) : (_37165 u f) = (term2006 _90715 A u f).
Proof. exact (MK_COMB (@lem3509763 _90715 A u _37165 h1) (@lem3509764 _90715 A f)). Qed.
Lemma lem3509766 {_90715 A : Type'} (u : _90715 -> Prop) (f : _90715 -> A) : (term2006 _90715 A u f) = (term2007 _90715 A u f).
Proof. exact (eq_refl (term2006 _90715 A u f)). Qed.
Lemma lem3509767 {_90715 A : Type'} (_37165 : type627 _90715 A) (u : _90715 -> Prop) (f : _90715 -> A) : (term2008 _90715 A _37165 u f) = (term2008 _90715 A _37165 u f).
Proof. exact (eq_refl (term2008 _90715 A _37165 u f)). Qed.
Lemma lem3509768 {_90715 A : Type'} (_37165 : type627 _90715 A) (u : _90715 -> Prop) (f : _90715 -> A) : ((_37165 u f) = (term2006 _90715 A u f)) = ((_37165 u f) = (term2007 _90715 A u f)).
Proof. exact (MK_COMB (@lem3509767 _90715 A _37165 u f) (@lem3509766 _90715 A u f)). Qed.
Lemma lem3509769 {_90715 A : Type'} (u : _90715 -> Prop) (f : _90715 -> A) (_37165 : type627 _90715 A) (h1 : _37165 = (term2002 _90715 A)) : (_37165 u f) = (term2007 _90715 A u f).
Proof. exact (EQ_MP (@lem3509768 _90715 A _37165 u f) (@lem3509765 _90715 A u f _37165 h1)). Qed.
Lemma lem3509770 {_90715 : Type'} (t : _90715 -> Prop) : t = t.
Proof. exact (eq_refl t). Qed.
Lemma lem3509771 {_90715 A : Type'} (u : _90715 -> Prop) (f : _90715 -> A) (t : _90715 -> Prop) (_37165 : type627 _90715 A) (h1 : _37165 = (term2002 _90715 A)) : (_37165 u f t) = (term2009 _90715 A u f t).
Proof. exact (MK_COMB (@lem3509769 _90715 A u f _37165 h1) (@lem3509770 _90715 t)). Qed.
Lemma lem3509772 {_90715 A : Type'} (u : _90715 -> Prop) (f : _90715 -> A) (t : _90715 -> Prop) : (term2009 _90715 A u f t) = (term67 _90715 A u f t).
Proof. exact (eq_refl (term2009 _90715 A u f t)). Qed.
Lemma lem3509773 {_90715 A : Type'} (_37165 : type627 _90715 A) (u : _90715 -> Prop) (f : _90715 -> A) (t : _90715 -> Prop) : (term2010 _90715 A _37165 u f t) = (term2010 _90715 A _37165 u f t).
Proof. exact (eq_refl (term2010 _90715 A _37165 u f t)). Qed.
Lemma lem3509774 {_90715 A : Type'} (_37165 : type627 _90715 A) (u : _90715 -> Prop) (f : _90715 -> A) (t : _90715 -> Prop) : ((_37165 u f t) = (term2009 _90715 A u f t)) = ((_37165 u f t) = (term67 _90715 A u f t)).
Proof. exact (MK_COMB (@lem3509773 _90715 A _37165 u f t) (@lem3509772 _90715 A u f t)). Qed.
Lemma lem3509775 {_90715 A : Type'} (u : _90715 -> Prop) (f : _90715 -> A) (t : _90715 -> Prop) (_37165 : type627 _90715 A) (h1 : _37165 = (term2002 _90715 A)) : (_37165 u f t) = (term67 _90715 A u f t).
Proof. exact (EQ_MP (@lem3509774 _90715 A _37165 u f t) (@lem3509771 _90715 A u f t _37165 h1)). Qed.
Lemma lem3509795 {A B : Type'} (f : type678 A B) (g : type180 A) : ((term2011 A B f g) = (term2012 A B f g)) = ((term2011 A B f g) = (term2012 A B f g)).
Proof. exact (eq_refl ((term2011 A B f g) = (term2012 A B f g))). Qed.
Lemma lem3509796 {A : Type'} (t : type686 A) : t = t.
Proof. exact (eq_refl t). Qed.
Lemma lem3509824 {A B : Type'} (GEN_PVAR_84 : A -> Prop) (u : type686 A) (f : type678 A B) (t : type686 A) (x : A -> Prop) : (term2013 A B GEN_PVAR_84 u f t x) = (term2013 A B GEN_PVAR_84 u f t x).
Proof. exact (eq_refl (term2013 A B GEN_PVAR_84 u f t x)). Qed.
Lemma lem3509825 {A B : Type'} (GEN_PVAR_84 : A -> Prop) (u : type686 A) (f : type678 A B) (t : type686 A) : (term2014 A B GEN_PVAR_84 u f t) = (term2014 A B GEN_PVAR_84 u f t).
Proof. exact (fun_ext (fun x : A -> Prop => @lem3509824 A B GEN_PVAR_84 u f t x)). Qed.
Lemma lem3509826 {A : Type'} : (@ex (A -> Prop)) = (@ex (A -> Prop)).
Proof. exact (eq_refl (@ex (A -> Prop))). Qed.
Lemma lem3509827 {A B : Type'} (GEN_PVAR_84 : A -> Prop) (u : type686 A) (f : type678 A B) (t : type686 A) : (term2015 A B GEN_PVAR_84 u f t) = (term2015 A B GEN_PVAR_84 u f t).
Proof. exact (MK_COMB (@lem3509826 A) (@lem3509825 A B GEN_PVAR_84 u f t)). Qed.
Lemma lem3509828 {A B : Type'} (u : type686 A) (f : type678 A B) (t : type686 A) : (term2016 A B u f t) = (term2016 A B u f t).
Proof. exact (fun_ext (fun GEN_PVAR_84 : A -> Prop => @lem3509827 A B GEN_PVAR_84 u f t)). Qed.
Lemma lem3509829 {A : Type'} : (@GSPEC (A -> Prop)) = (@GSPEC (A -> Prop)).
Proof. exact (eq_refl (@GSPEC (A -> Prop))). Qed.
Lemma lem3509830 {A B : Type'} (u : type686 A) (f : type678 A B) (t : type686 A) : (term2017 A B u f t) = (term2017 A B u f t).
Proof. exact (MK_COMB (@lem3509829 A) (@lem3509828 A B u f t)). Qed.
Lemma lem3509831 {A : Type'} : (@SUBSET (A -> Prop)) = (@SUBSET (A -> Prop)).
Proof. exact (eq_refl (@SUBSET (A -> Prop))). Qed.
Lemma lem3509832 {A B : Type'} (u : type686 A) (f : type678 A B) (t : type686 A) : (term2018 A B u f t) = (term2018 A B u f t).
Proof. exact (MK_COMB (@lem3509831 A) (@lem3509830 A B u f t)). Qed.
Lemma lem3509833 {A B : Type'} (u : type686 A) (f : type678 A B) (t : type686 A) : (term2019 A B u f t) = (term2019 A B u f t).
Proof. exact (MK_COMB (@lem3509832 A B u f t) (@lem3509796 A t)). Qed.
Lemma lem3509840 {A : Type'} (t : type686 A) (u : type686 A) : (term2020 A t u) = (term2020 A t u).
Proof. exact (eq_refl (term2020 A t u)). Qed.
Lemma lem3509841 {A B : Type'} (u : type686 A) (f : type678 A B) (t : type686 A) : (term2021 A B u f t) = (term2021 A B u f t).
Proof. exact (MK_COMB (@lem3509840 A t u) (@lem3509833 A B u f t)). Qed.
Lemma lem3509848 {A : Type'} (t : type686 A) (g : type180 A) : (term2022 A t g) = (term2022 A t g).
Proof. exact (eq_refl (term2022 A t g)). Qed.
Lemma lem3509849 {A B : Type'} (g : type180 A) (u : type686 A) (f : type678 A B) (t : type686 A) : (term2023 A B g u f t) = (term2023 A B g u f t).
Proof. exact (MK_COMB (@lem3509848 A t g) (@lem3509841 A B u f t)). Qed.
Lemma lem3509850 {A B : Type'} (g : type180 A) (u : type686 A) (f : type678 A B) : (term2024 A B g u f) = (term2024 A B g u f).
Proof. exact (fun_ext (fun t : type686 A => @lem3509849 A B g u f t)). Qed.
Lemma lem3509851 {A : Type'} : (@all ((A -> Prop) -> Prop)) = (@all ((A -> Prop) -> Prop)).
Proof. exact (eq_refl (@all ((A -> Prop) -> Prop))). Qed.
Lemma lem3509852 {A B : Type'} (g : type180 A) (u : type686 A) (f : type678 A B) : (term2025 A B g u f) = (term2025 A B g u f).
Proof. exact (MK_COMB (@lem3509851 A) (@lem3509850 A B g u f)). Qed.
Lemma lem3509861 {A : Type'} (g : type180 A) : (term2026 A g) = (term2026 A g).
Proof. exact (eq_refl (term2026 A g)). Qed.
Lemma lem3509862 {A B : Type'} (g : type180 A) (u : type686 A) (f : type678 A B) : (term2027 A B g u f) = (term2027 A B g u f).
Proof. exact (MK_COMB (@lem3509861 A g) (@lem3509852 A B g u f)). Qed.
Lemma lem3509863 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem3509864 {A B : Type'} (g : type180 A) (u : type686 A) (f : type678 A B) : (term2028 A B g u f) = (term2028 A B g u f).
Proof. exact (MK_COMB (@lem3509863) (@lem3509862 A B g u f)). Qed.
Lemma lem3509865 {A B : Type'} (u : type686 A) (f : type678 A B) (g : type180 A) : (term2029 A B u f g) = (term2029 A B u f g).
Proof. exact (MK_COMB (@lem3509864 A B g u f) (@lem3509795 A B f g)). Qed.
Lemma lem3509866 {A B : Type'} (u : type686 A) (f : type678 A B) : (term2030 A B u f) = (term2030 A B u f).
Proof. exact (fun_ext (fun g : type180 A => @lem3509865 A B u f g)). Qed.
Lemma lem3509867 {A : Type'} : (@all (((A -> Prop) -> Prop) -> Prop)) = (@all (((A -> Prop) -> Prop) -> Prop)).
Proof. exact (eq_refl (@all (((A -> Prop) -> Prop) -> Prop))). Qed.
Lemma lem3509868 {A B : Type'} (u : type686 A) (f : type678 A B) : (term2031 A B u f) = (term2031 A B u f).
Proof. exact (MK_COMB (@lem3509867 A) (@lem3509866 A B u f)). Qed.
Lemma lem3509869 {A B : Type'} (u : type686 A) : (term2032 A B u) = (term2032 A B u).
Proof. exact (fun_ext (fun f : type678 A B => @lem3509868 A B u f)). Qed.
Lemma lem3509870 {A B : Type'} : (@all ((A -> Prop) -> B -> Prop)) = (@all ((A -> Prop) -> B -> Prop)).
Proof. exact (eq_refl (@all ((A -> Prop) -> B -> Prop))). Qed.
Lemma lem3509871 {A B : Type'} (u : type686 A) : (term2033 A B u) = (term2033 A B u).
Proof. exact (MK_COMB (@lem3509870 A B) (@lem3509869 A B u)). Qed.
Lemma lem3509872 {A B : Type'} : (term2034 A B) = (term2034 A B).
Proof. exact (fun_ext (fun u : type686 A => @lem3509871 A B u)). Qed.
Lemma lem3509873 {A : Type'} : (@all ((A -> Prop) -> Prop)) = (@all ((A -> Prop) -> Prop)).
Proof. exact (eq_refl (@all ((A -> Prop) -> Prop))). Qed.
Lemma lem3509874 {A B : Type'} : (term1961 A B) = (term1961 A B).
Proof. exact (MK_COMB (@lem3509873 A) (@lem3509872 A B)). Qed.
Lemma lem3509875 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem3509876 {A B : Type'} : (term1967 A B) = (term1967 A B).
Proof. exact (MK_COMB (@lem3509875) (@lem3509874 A B)). Qed.
Lemma lem3509895 {_90724 A : Type'} (f : type862 _90724 A) (g : type180 A) : ((term2035 _90724 A f g) = (term2036 _90724 A f g)) = ((term2035 _90724 A f g) = (term2036 _90724 A f g)).
Proof. exact (eq_refl ((term2035 _90724 A f g) = (term2036 _90724 A f g))). Qed.
Lemma lem3509896 {A : Type'} (t : type686 A) : t = t.
Proof. exact (eq_refl t). Qed.
Lemma lem3509924 {_90724 A : Type'} (GEN_PVAR_84 : A -> Prop) (u : type686 A) (f : type862 _90724 A) (t : type686 A) (x : A -> Prop) : (term2037 _90724 A GEN_PVAR_84 u f t x) = (term2037 _90724 A GEN_PVAR_84 u f t x).
Proof. exact (eq_refl (term2037 _90724 A GEN_PVAR_84 u f t x)). Qed.
Lemma lem3509925 {_90724 A : Type'} (GEN_PVAR_84 : A -> Prop) (u : type686 A) (f : type862 _90724 A) (t : type686 A) : (term2038 _90724 A GEN_PVAR_84 u f t) = (term2038 _90724 A GEN_PVAR_84 u f t).
Proof. exact (fun_ext (fun x : A -> Prop => @lem3509924 _90724 A GEN_PVAR_84 u f t x)). Qed.
Lemma lem3509926 {A : Type'} : (@ex (A -> Prop)) = (@ex (A -> Prop)).
Proof. exact (eq_refl (@ex (A -> Prop))). Qed.
Lemma lem3509927 {_90724 A : Type'} (GEN_PVAR_84 : A -> Prop) (u : type686 A) (f : type862 _90724 A) (t : type686 A) : (term2039 _90724 A GEN_PVAR_84 u f t) = (term2039 _90724 A GEN_PVAR_84 u f t).
Proof. exact (MK_COMB (@lem3509926 A) (@lem3509925 _90724 A GEN_PVAR_84 u f t)). Qed.
Lemma lem3509928 {_90724 A : Type'} (u : type686 A) (f : type862 _90724 A) (t : type686 A) : (term2040 _90724 A u f t) = (term2040 _90724 A u f t).
Proof. exact (fun_ext (fun GEN_PVAR_84 : A -> Prop => @lem3509927 _90724 A GEN_PVAR_84 u f t)). Qed.
Lemma lem3509929 {A : Type'} : (@GSPEC (A -> Prop)) = (@GSPEC (A -> Prop)).
Proof. exact (eq_refl (@GSPEC (A -> Prop))). Qed.
Lemma lem3509930 {_90724 A : Type'} (u : type686 A) (f : type862 _90724 A) (t : type686 A) : (term2041 _90724 A u f t) = (term2041 _90724 A u f t).
Proof. exact (MK_COMB (@lem3509929 A) (@lem3509928 _90724 A u f t)). Qed.
Lemma lem3509931 {A : Type'} : (@SUBSET (A -> Prop)) = (@SUBSET (A -> Prop)).
Proof. exact (eq_refl (@SUBSET (A -> Prop))). Qed.
Lemma lem3509932 {_90724 A : Type'} (u : type686 A) (f : type862 _90724 A) (t : type686 A) : (term2042 _90724 A u f t) = (term2042 _90724 A u f t).
Proof. exact (MK_COMB (@lem3509931 A) (@lem3509930 _90724 A u f t)). Qed.
Lemma lem3509933 {_90724 A : Type'} (u : type686 A) (f : type862 _90724 A) (t : type686 A) : (term2043 _90724 A u f t) = (term2043 _90724 A u f t).
Proof. exact (MK_COMB (@lem3509932 _90724 A u f t) (@lem3509896 A t)). Qed.
Lemma lem3509940 {A : Type'} (t : type686 A) (u : type686 A) : (term2020 A t u) = (term2020 A t u).
Proof. exact (eq_refl (term2020 A t u)). Qed.
Lemma lem3509941 {_90724 A : Type'} (u : type686 A) (f : type862 _90724 A) (t : type686 A) : (term2044 _90724 A u f t) = (term2044 _90724 A u f t).
Proof. exact (MK_COMB (@lem3509940 A t u) (@lem3509933 _90724 A u f t)). Qed.
Lemma lem3509948 {A : Type'} (t : type686 A) (g : type180 A) : (term2022 A t g) = (term2022 A t g).
Proof. exact (eq_refl (term2022 A t g)). Qed.
Lemma lem3509949 {_90724 A : Type'} (g : type180 A) (u : type686 A) (f : type862 _90724 A) (t : type686 A) : (term2045 _90724 A g u f t) = (term2045 _90724 A g u f t).
Proof. exact (MK_COMB (@lem3509948 A t g) (@lem3509941 _90724 A u f t)). Qed.
Lemma lem3509950 {_90724 A : Type'} (g : type180 A) (u : type686 A) (f : type862 _90724 A) : (term2046 _90724 A g u f) = (term2046 _90724 A g u f).
Proof. exact (fun_ext (fun t : type686 A => @lem3509949 _90724 A g u f t)). Qed.
Lemma lem3509951 {A : Type'} : (@all ((A -> Prop) -> Prop)) = (@all ((A -> Prop) -> Prop)).
Proof. exact (eq_refl (@all ((A -> Prop) -> Prop))). Qed.
Lemma lem3509952 {_90724 A : Type'} (g : type180 A) (u : type686 A) (f : type862 _90724 A) : (term2047 _90724 A g u f) = (term2047 _90724 A g u f).
Proof. exact (MK_COMB (@lem3509951 A) (@lem3509950 _90724 A g u f)). Qed.
Lemma lem3509961 {A : Type'} (g : type180 A) : (term2026 A g) = (term2026 A g).
Proof. exact (eq_refl (term2026 A g)). Qed.
Lemma lem3509962 {_90724 A : Type'} (g : type180 A) (u : type686 A) (f : type862 _90724 A) : (term2048 _90724 A g u f) = (term2048 _90724 A g u f).
Proof. exact (MK_COMB (@lem3509961 A g) (@lem3509952 _90724 A g u f)). Qed.
Lemma lem3509963 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem3509964 {_90724 A : Type'} (g : type180 A) (u : type686 A) (f : type862 _90724 A) : (term2049 _90724 A g u f) = (term2049 _90724 A g u f).
Proof. exact (MK_COMB (@lem3509963) (@lem3509962 _90724 A g u f)). Qed.
Lemma lem3509965 {_90724 A : Type'} (u : type686 A) (f : type862 _90724 A) (g : type180 A) : (term2050 _90724 A u f g) = (term2050 _90724 A u f g).
Proof. exact (MK_COMB (@lem3509964 _90724 A g u f) (@lem3509895 _90724 A f g)). Qed.
Lemma lem3509966 {_90724 A : Type'} (u : type686 A) (f : type862 _90724 A) : (term2051 _90724 A u f) = (term2051 _90724 A u f).
Proof. exact (fun_ext (fun g : type180 A => @lem3509965 _90724 A u f g)). Qed.
Lemma lem3509967 {A : Type'} : (@all (((A -> Prop) -> Prop) -> Prop)) = (@all (((A -> Prop) -> Prop) -> Prop)).
Proof. exact (eq_refl (@all (((A -> Prop) -> Prop) -> Prop))). Qed.
Lemma lem3509968 {_90724 A : Type'} (u : type686 A) (f : type862 _90724 A) : (term2052 _90724 A u f) = (term2052 _90724 A u f).
Proof. exact (MK_COMB (@lem3509967 A) (@lem3509966 _90724 A u f)). Qed.
Lemma lem3509969 {_90724 A : Type'} (u : type686 A) : (term2053 _90724 A u) = (term2053 _90724 A u).
Proof. exact (fun_ext (fun f : type862 _90724 A => @lem3509968 _90724 A u f)). Qed.
Lemma lem3509970 {_90724 A : Type'} : (@all ((A -> Prop) -> _90724)) = (@all ((A -> Prop) -> _90724)).
Proof. exact (eq_refl (@all ((A -> Prop) -> _90724))). Qed.
Lemma lem3509971 {_90724 A : Type'} (u : type686 A) : (term2054 _90724 A u) = (term2054 _90724 A u).
Proof. exact (MK_COMB (@lem3509970 _90724 A) (@lem3509969 _90724 A u)). Qed.
Lemma lem3509972 {_90724 A : Type'} : (term2055 _90724 A) = (term2055 _90724 A).
Proof. exact (fun_ext (fun u : type686 A => @lem3509971 _90724 A u)). Qed.
Lemma lem3509973 {A : Type'} : (@all ((A -> Prop) -> Prop)) = (@all ((A -> Prop) -> Prop)).
Proof. exact (eq_refl (@all ((A -> Prop) -> Prop))). Qed.
Lemma lem3509974 {_90724 A : Type'} : (term1959 _90724 A) = (term1959 _90724 A).
Proof. exact (MK_COMB (@lem3509973 A) (@lem3509972 _90724 A)). Qed.
Lemma lem3509975 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem3509976 {_90724 A : Type'} : (term1968 _90724 A) = (term1968 _90724 A).
Proof. exact (MK_COMB (@lem3509975) (@lem3509974 _90724 A)). Qed.
Lemma lem3509977 {_90724 A B : Type'} : (term1970 _90724 A B) = (term1970 _90724 A B).
Proof. exact (MK_COMB (@lem3509976 _90724 A) (@lem3509876 A B)). Qed.
Lemma lem3509996 {_90724 B : Type'} (f : B -> _90724) (g : type686 B) : ((term2056 _90724 B f g) = (term2057 _90724 B f g)) = ((term2056 _90724 B f g) = (term2057 _90724 B f g)).
Proof. exact (eq_refl ((term2056 _90724 B f g) = (term2057 _90724 B f g))). Qed.
Lemma lem3509997 {B : Type'} (t : B -> Prop) : t = t.
Proof. exact (eq_refl t). Qed.
Lemma lem3510025 {_90724 B : Type'} (GEN_PVAR_84 : B) (u : B -> Prop) (f : B -> _90724) (t : B -> Prop) (x : B) : (term2058 _90724 B GEN_PVAR_84 u f t x) = (term2058 _90724 B GEN_PVAR_84 u f t x).
Proof. exact (eq_refl (term2058 _90724 B GEN_PVAR_84 u f t x)). Qed.
Lemma lem3510026 {_90724 B : Type'} (GEN_PVAR_84 : B) (u : B -> Prop) (f : B -> _90724) (t : B -> Prop) : (term2059 _90724 B GEN_PVAR_84 u f t) = (term2059 _90724 B GEN_PVAR_84 u f t).
Proof. exact (fun_ext (fun x : B => @lem3510025 _90724 B GEN_PVAR_84 u f t x)). Qed.
Lemma lem3510027 {B : Type'} : (@ex B) = (@ex B).
Proof. exact (eq_refl (@ex B)). Qed.
Lemma lem3510028 {_90724 B : Type'} (GEN_PVAR_84 : B) (u : B -> Prop) (f : B -> _90724) (t : B -> Prop) : (term2060 _90724 B GEN_PVAR_84 u f t) = (term2060 _90724 B GEN_PVAR_84 u f t).
Proof. exact (MK_COMB (@lem3510027 B) (@lem3510026 _90724 B GEN_PVAR_84 u f t)). Qed.
Lemma lem3510029 {_90724 B : Type'} (u : B -> Prop) (f : B -> _90724) (t : B -> Prop) : (term2061 _90724 B u f t) = (term2061 _90724 B u f t).
Proof. exact (fun_ext (fun GEN_PVAR_84 : B => @lem3510028 _90724 B GEN_PVAR_84 u f t)). Qed.
Lemma lem3510030 {B : Type'} : (@GSPEC B) = (@GSPEC B).
Proof. exact (eq_refl (@GSPEC B)). Qed.
Lemma lem3510031 {_90724 B : Type'} (u : B -> Prop) (f : B -> _90724) (t : B -> Prop) : (term2062 _90724 B u f t) = (term2062 _90724 B u f t).
Proof. exact (MK_COMB (@lem3510030 B) (@lem3510029 _90724 B u f t)). Qed.
Lemma lem3510032 {B : Type'} : (@SUBSET B) = (@SUBSET B).
Proof. exact (eq_refl (@SUBSET B)). Qed.
Lemma lem3510033 {_90724 B : Type'} (u : B -> Prop) (f : B -> _90724) (t : B -> Prop) : (term2063 _90724 B u f t) = (term2063 _90724 B u f t).
Proof. exact (MK_COMB (@lem3510032 B) (@lem3510031 _90724 B u f t)). Qed.
Lemma lem3510034 {_90724 B : Type'} (u : B -> Prop) (f : B -> _90724) (t : B -> Prop) : (term2064 _90724 B u f t) = (term2064 _90724 B u f t).
Proof. exact (MK_COMB (@lem3510033 _90724 B u f t) (@lem3509997 B t)). Qed.
Lemma lem3510041 {B : Type'} (t : B -> Prop) (u : B -> Prop) : (term75 B t u) = (term75 B t u).
Proof. exact (eq_refl (term75 B t u)). Qed.
Lemma lem3510042 {_90724 B : Type'} (u : B -> Prop) (f : B -> _90724) (t : B -> Prop) : (term2065 _90724 B u f t) = (term2065 _90724 B u f t).
Proof. exact (MK_COMB (@lem3510041 B t u) (@lem3510034 _90724 B u f t)). Qed.
Lemma lem3510049 {B : Type'} (t : B -> Prop) (g : type686 B) : (term78 B t g) = (term78 B t g).
Proof. exact (eq_refl (term78 B t g)). Qed.
Lemma lem3510050 {_90724 B : Type'} (g : type686 B) (u : B -> Prop) (f : B -> _90724) (t : B -> Prop) : (term2066 _90724 B g u f t) = (term2066 _90724 B g u f t).
Proof. exact (MK_COMB (@lem3510049 B t g) (@lem3510042 _90724 B u f t)). Qed.
Lemma lem3510051 {_90724 B : Type'} (g : type686 B) (u : B -> Prop) (f : B -> _90724) : (term2067 _90724 B g u f) = (term2067 _90724 B g u f).
Proof. exact (fun_ext (fun t : B -> Prop => @lem3510050 _90724 B g u f t)). Qed.
Lemma lem3510052 {B : Type'} : (@all (B -> Prop)) = (@all (B -> Prop)).
Proof. exact (eq_refl (@all (B -> Prop))). Qed.
Lemma lem3510053 {_90724 B : Type'} (g : type686 B) (u : B -> Prop) (f : B -> _90724) : (term2068 _90724 B g u f) = (term2068 _90724 B g u f).
Proof. exact (MK_COMB (@lem3510052 B) (@lem3510051 _90724 B g u f)). Qed.
Lemma lem3510062 {B : Type'} (g : type686 B) : (term42 B g) = (term42 B g).
Proof. exact (eq_refl (term42 B g)). Qed.
Lemma lem3510063 {_90724 B : Type'} (g : type686 B) (u : B -> Prop) (f : B -> _90724) : (term2069 _90724 B g u f) = (term2069 _90724 B g u f).
Proof. exact (MK_COMB (@lem3510062 B g) (@lem3510053 _90724 B g u f)). Qed.
Lemma lem3510064 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem3510065 {_90724 B : Type'} (g : type686 B) (u : B -> Prop) (f : B -> _90724) : (term2070 _90724 B g u f) = (term2070 _90724 B g u f).
Proof. exact (MK_COMB (@lem3510064) (@lem3510063 _90724 B g u f)). Qed.
Lemma lem3510066 {_90724 B : Type'} (u : B -> Prop) (f : B -> _90724) (g : type686 B) : (term2071 _90724 B u f g) = (term2071 _90724 B u f g).
Proof. exact (MK_COMB (@lem3510065 _90724 B g u f) (@lem3509996 _90724 B f g)). Qed.
Lemma lem3510067 {_90724 B : Type'} (u : B -> Prop) (f : B -> _90724) : (term2072 _90724 B u f) = (term2072 _90724 B u f).
Proof. exact (fun_ext (fun g : type686 B => @lem3510066 _90724 B u f g)). Qed.
Lemma lem3510068 {B : Type'} : (@all ((B -> Prop) -> Prop)) = (@all ((B -> Prop) -> Prop)).
Proof. exact (eq_refl (@all ((B -> Prop) -> Prop))). Qed.
Lemma lem3510069 {_90724 B : Type'} (u : B -> Prop) (f : B -> _90724) : (term2073 _90724 B u f) = (term2073 _90724 B u f).
Proof. exact (MK_COMB (@lem3510068 B) (@lem3510067 _90724 B u f)). Qed.
Lemma lem3510070 {_90724 B : Type'} (u : B -> Prop) : (term2074 _90724 B u) = (term2074 _90724 B u).
Proof. exact (fun_ext (fun f : B -> _90724 => @lem3510069 _90724 B u f)). Qed.
Lemma lem3510071 {_90724 B : Type'} : (@all (B -> _90724)) = (@all (B -> _90724)).
Proof. exact (eq_refl (@all (B -> _90724))). Qed.
Lemma lem3510072 {_90724 B : Type'} (u : B -> Prop) : (term2075 _90724 B u) = (term2075 _90724 B u).
Proof. exact (MK_COMB (@lem3510071 _90724 B) (@lem3510070 _90724 B u)). Qed.
Lemma lem3510073 {_90724 B : Type'} : (term2076 _90724 B) = (term2076 _90724 B).
Proof. exact (fun_ext (fun u : B -> Prop => @lem3510072 _90724 B u)). Qed.
Lemma lem3510074 {B : Type'} : (@all (B -> Prop)) = (@all (B -> Prop)).
Proof. exact (eq_refl (@all (B -> Prop))). Qed.
Lemma lem3510075 {_90724 B : Type'} : (term1958 _90724 B) = (term1958 _90724 B).
Proof. exact (MK_COMB (@lem3510074 B) (@lem3510073 _90724 B)). Qed.
Lemma lem3510076 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem3510077 {_90724 B : Type'} : (term1971 _90724 B) = (term1971 _90724 B).
Proof. exact (MK_COMB (@lem3510076) (@lem3510075 _90724 B)). Qed.
Lemma lem3510078 {_90724 A B : Type'} : (term1973 _90724 A B) = (term1973 _90724 A B).
Proof. exact (MK_COMB (@lem3510077 _90724 B) (@lem3509977 _90724 A B)). Qed.
Lemma lem3510097 {A B : Type'} (f : A -> B) (g : type686 A) : ((term49 A B f g) = (term50 A B f g)) = ((term49 A B f g) = (term50 A B f g)).
Proof. exact (eq_refl ((term49 A B f g) = (term50 A B f g))). Qed.
Lemma lem3510126 {A B : Type'} (g : type686 A) (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) (t : A -> Prop) : (term2081 A B g _37163 u f t) = (term2081 A B g _37163 u f t).
Proof. exact (eq_refl (term2081 A B g _37163 u f t)). Qed.
Lemma lem3510127 {A B : Type'} (g : type686 A) (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) : (term2082 A B g _37163 u f) = (term2082 A B g _37163 u f).
Proof. exact (fun_ext (fun t : A -> Prop => @lem3510126 A B g _37163 u f t)). Qed.
Lemma lem3510128 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem3510129 {A B : Type'} (g : type686 A) (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) : (term2083 A B g _37163 u f) = (term2083 A B g _37163 u f).
Proof. exact (MK_COMB (@lem3510128 A) (@lem3510127 A B g _37163 u f)). Qed.
Lemma lem3510138 {A : Type'} (g : type686 A) : (term42 A g) = (term42 A g).
Proof. exact (eq_refl (term42 A g)). Qed.
Lemma lem3510139 {A B : Type'} (g : type686 A) (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) : (term2084 A B g _37163 u f) = (term2084 A B g _37163 u f).
Proof. exact (MK_COMB (@lem3510138 A g) (@lem3510129 A B g _37163 u f)). Qed.
Lemma lem3510140 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem3510141 {A B : Type'} (g : type686 A) (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) : (term2085 A B g _37163 u f) = (term2085 A B g _37163 u f).
Proof. exact (MK_COMB (@lem3510140) (@lem3510139 A B g _37163 u f)). Qed.
Lemma lem3510142 {A B : Type'} (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) (g : type686 A) : (term2086 A B _37163 u f g) = (term2086 A B _37163 u f g).
Proof. exact (MK_COMB (@lem3510141 A B g _37163 u f) (@lem3510097 A B f g)). Qed.
Lemma lem3510143 {A B : Type'} (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) : (term2088 A B _37163 u f) = (term2088 A B _37163 u f).
Proof. exact (fun_ext (fun g : type686 A => @lem3510142 A B _37163 u f g)). Qed.
Lemma lem3510144 {A : Type'} : (@all ((A -> Prop) -> Prop)) = (@all ((A -> Prop) -> Prop)).
Proof. exact (eq_refl (@all ((A -> Prop) -> Prop))). Qed.
Lemma lem3510145 {A B : Type'} (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) : (term2089 A B _37163 u f) = (term2089 A B _37163 u f).
Proof. exact (MK_COMB (@lem3510144 A) (@lem3510143 A B _37163 u f)). Qed.
Lemma lem3510146 {A B : Type'} (_37163 : type627 A B) (u : A -> Prop) : (term2091 A B _37163 u) = (term2091 A B _37163 u).
Proof. exact (fun_ext (fun f : A -> B => @lem3510145 A B _37163 u f)). Qed.
Lemma lem3510147 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem3510148 {A B : Type'} (_37163 : type627 A B) (u : A -> Prop) : (term2092 A B _37163 u) = (term2092 A B _37163 u).
Proof. exact (MK_COMB (@lem3510147 A B) (@lem3510146 A B _37163 u)). Qed.
Lemma lem3510149 {A B : Type'} (_37163 : type627 A B) : (term2094 A B _37163) = (term2094 A B _37163).
Proof. exact (fun_ext (fun u : A -> Prop => @lem3510148 A B _37163 u)). Qed.
Lemma lem3510150 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem3510151 {A B : Type'} (_37163 : type627 A B) : (term2095 A B _37163) = (term2095 A B _37163).
Proof. exact (MK_COMB (@lem3510150 A) (@lem3510149 A B _37163)). Qed.
Lemma lem3510152 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem3510153 {A B : Type'} (_37163 : type627 A B) : (term2096 A B _37163) = (term2096 A B _37163).
Proof. exact (MK_COMB (@lem3510152) (@lem3510151 A B _37163)). Qed.
Lemma lem3510154 {_90724 A B : Type'} (_37163 : type627 A B) : (term2097 _90724 A B _37163) = (term2097 _90724 A B _37163).
Proof. exact (MK_COMB (@lem3510153 A B _37163) (@lem3510078 _90724 A B)). Qed.
Lemma lem3510173 {_90724 A : Type'} (f : A -> _90724) (g : type686 A) : ((term2056 _90724 A f g) = (term2057 _90724 A f g)) = ((term2056 _90724 A f g) = (term2057 _90724 A f g)).
Proof. exact (eq_refl ((term2056 _90724 A f g) = (term2057 _90724 A f g))). Qed.
Lemma lem3510174 {A : Type'} (t : A -> Prop) : t = t.
Proof. exact (eq_refl t). Qed.
Lemma lem3510202 {_90724 A : Type'} (GEN_PVAR_84 : A) (u : A -> Prop) (f : A -> _90724) (t : A -> Prop) (x : A) : (term2058 _90724 A GEN_PVAR_84 u f t x) = (term2058 _90724 A GEN_PVAR_84 u f t x).
Proof. exact (eq_refl (term2058 _90724 A GEN_PVAR_84 u f t x)). Qed.
Lemma lem3510203 {_90724 A : Type'} (GEN_PVAR_84 : A) (u : A -> Prop) (f : A -> _90724) (t : A -> Prop) : (term2059 _90724 A GEN_PVAR_84 u f t) = (term2059 _90724 A GEN_PVAR_84 u f t).
Proof. exact (fun_ext (fun x : A => @lem3510202 _90724 A GEN_PVAR_84 u f t x)). Qed.
Lemma lem3510204 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem3510205 {_90724 A : Type'} (GEN_PVAR_84 : A) (u : A -> Prop) (f : A -> _90724) (t : A -> Prop) : (term2060 _90724 A GEN_PVAR_84 u f t) = (term2060 _90724 A GEN_PVAR_84 u f t).
Proof. exact (MK_COMB (@lem3510204 A) (@lem3510203 _90724 A GEN_PVAR_84 u f t)). Qed.
Lemma lem3510206 {_90724 A : Type'} (u : A -> Prop) (f : A -> _90724) (t : A -> Prop) : (term2061 _90724 A u f t) = (term2061 _90724 A u f t).
Proof. exact (fun_ext (fun GEN_PVAR_84 : A => @lem3510205 _90724 A GEN_PVAR_84 u f t)). Qed.
Lemma lem3510207 {A : Type'} : (@GSPEC A) = (@GSPEC A).
Proof. exact (eq_refl (@GSPEC A)). Qed.
Lemma lem3510208 {_90724 A : Type'} (u : A -> Prop) (f : A -> _90724) (t : A -> Prop) : (term2062 _90724 A u f t) = (term2062 _90724 A u f t).
Proof. exact (MK_COMB (@lem3510207 A) (@lem3510206 _90724 A u f t)). Qed.
Lemma lem3510209 {A : Type'} : (@SUBSET A) = (@SUBSET A).
Proof. exact (eq_refl (@SUBSET A)). Qed.
Lemma lem3510210 {_90724 A : Type'} (u : A -> Prop) (f : A -> _90724) (t : A -> Prop) : (term2063 _90724 A u f t) = (term2063 _90724 A u f t).
Proof. exact (MK_COMB (@lem3510209 A) (@lem3510208 _90724 A u f t)). Qed.
Lemma lem3510211 {_90724 A : Type'} (u : A -> Prop) (f : A -> _90724) (t : A -> Prop) : (term2064 _90724 A u f t) = (term2064 _90724 A u f t).
Proof. exact (MK_COMB (@lem3510210 _90724 A u f t) (@lem3510174 A t)). Qed.
Lemma lem3510218 {A : Type'} (t : A -> Prop) (u : A -> Prop) : (term75 A t u) = (term75 A t u).
Proof. exact (eq_refl (term75 A t u)). Qed.
Lemma lem3510219 {_90724 A : Type'} (u : A -> Prop) (f : A -> _90724) (t : A -> Prop) : (term2065 _90724 A u f t) = (term2065 _90724 A u f t).
Proof. exact (MK_COMB (@lem3510218 A t u) (@lem3510211 _90724 A u f t)). Qed.
Lemma lem3510226 {A : Type'} (t : A -> Prop) (g : type686 A) : (term78 A t g) = (term78 A t g).
Proof. exact (eq_refl (term78 A t g)). Qed.
Lemma lem3510227 {_90724 A : Type'} (g : type686 A) (u : A -> Prop) (f : A -> _90724) (t : A -> Prop) : (term2066 _90724 A g u f t) = (term2066 _90724 A g u f t).
Proof. exact (MK_COMB (@lem3510226 A t g) (@lem3510219 _90724 A u f t)). Qed.
Lemma lem3510228 {_90724 A : Type'} (g : type686 A) (u : A -> Prop) (f : A -> _90724) : (term2067 _90724 A g u f) = (term2067 _90724 A g u f).
Proof. exact (fun_ext (fun t : A -> Prop => @lem3510227 _90724 A g u f t)). Qed.
Lemma lem3510229 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem3510230 {_90724 A : Type'} (g : type686 A) (u : A -> Prop) (f : A -> _90724) : (term2068 _90724 A g u f) = (term2068 _90724 A g u f).
Proof. exact (MK_COMB (@lem3510229 A) (@lem3510228 _90724 A g u f)). Qed.
Lemma lem3510239 {A : Type'} (g : type686 A) : (term42 A g) = (term42 A g).
Proof. exact (eq_refl (term42 A g)). Qed.
Lemma lem3510240 {_90724 A : Type'} (g : type686 A) (u : A -> Prop) (f : A -> _90724) : (term2069 _90724 A g u f) = (term2069 _90724 A g u f).
Proof. exact (MK_COMB (@lem3510239 A g) (@lem3510230 _90724 A g u f)). Qed.
Lemma lem3510241 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem3510242 {_90724 A : Type'} (g : type686 A) (u : A -> Prop) (f : A -> _90724) : (term2070 _90724 A g u f) = (term2070 _90724 A g u f).
Proof. exact (MK_COMB (@lem3510241) (@lem3510240 _90724 A g u f)). Qed.
Lemma lem3510243 {_90724 A : Type'} (u : A -> Prop) (f : A -> _90724) (g : type686 A) : (term2071 _90724 A u f g) = (term2071 _90724 A u f g).
Proof. exact (MK_COMB (@lem3510242 _90724 A g u f) (@lem3510173 _90724 A f g)). Qed.
Lemma lem3510244 {_90724 A : Type'} (u : A -> Prop) (f : A -> _90724) : (term2072 _90724 A u f) = (term2072 _90724 A u f).
Proof. exact (fun_ext (fun g : type686 A => @lem3510243 _90724 A u f g)). Qed.
Lemma lem3510245 {A : Type'} : (@all ((A -> Prop) -> Prop)) = (@all ((A -> Prop) -> Prop)).
Proof. exact (eq_refl (@all ((A -> Prop) -> Prop))). Qed.
Lemma lem3510246 {_90724 A : Type'} (u : A -> Prop) (f : A -> _90724) : (term2073 _90724 A u f) = (term2073 _90724 A u f).
Proof. exact (MK_COMB (@lem3510245 A) (@lem3510244 _90724 A u f)). Qed.
Lemma lem3510247 {_90724 A : Type'} (u : A -> Prop) : (term2074 _90724 A u) = (term2074 _90724 A u).
Proof. exact (fun_ext (fun f : A -> _90724 => @lem3510246 _90724 A u f)). Qed.
Lemma lem3510248 {_90724 A : Type'} : (@all (A -> _90724)) = (@all (A -> _90724)).
Proof. exact (eq_refl (@all (A -> _90724))). Qed.
Lemma lem3510249 {_90724 A : Type'} (u : A -> Prop) : (term2075 _90724 A u) = (term2075 _90724 A u).
Proof. exact (MK_COMB (@lem3510248 _90724 A) (@lem3510247 _90724 A u)). Qed.
Lemma lem3510250 {_90724 A : Type'} : (term2076 _90724 A) = (term2076 _90724 A).
Proof. exact (fun_ext (fun u : A -> Prop => @lem3510249 _90724 A u)). Qed.
Lemma lem3510251 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem3510252 {_90724 A : Type'} : (term1958 _90724 A) = (term1958 _90724 A).
Proof. exact (MK_COMB (@lem3510251 A) (@lem3510250 _90724 A)). Qed.
Lemma lem3510253 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem3510254 {_90724 A : Type'} : (term1971 _90724 A) = (term1971 _90724 A).
Proof. exact (MK_COMB (@lem3510253) (@lem3510252 _90724 A)). Qed.
Lemma lem3510255 {_90724 A B : Type'} (_37163 : type627 A B) : (term2098 _90724 A B _37163) = (term2098 _90724 A B _37163).
Proof. exact (MK_COMB (@lem3510254 _90724 A) (@lem3510154 _90724 A B _37163)). Qed.
Lemma lem3510274 {_90715 A : Type'} (f : type1413 _90715 A) (g : type686 _90715) : ((term2099 _90715 A f g) = (term2100 _90715 A f g)) = ((term2099 _90715 A f g) = (term2100 _90715 A f g)).
Proof. exact (eq_refl ((term2099 _90715 A f g) = (term2100 _90715 A f g))). Qed.
Lemma lem3510275 {_90715 : Type'} (t : _90715 -> Prop) : t = t.
Proof. exact (eq_refl t). Qed.
Lemma lem3510303 {_90715 A : Type'} (GEN_PVAR_84 : _90715) (u : _90715 -> Prop) (f : type1413 _90715 A) (t : _90715 -> Prop) (x : _90715) : (term2101 _90715 A GEN_PVAR_84 u f t x) = (term2101 _90715 A GEN_PVAR_84 u f t x).
Proof. exact (eq_refl (term2101 _90715 A GEN_PVAR_84 u f t x)). Qed.
Lemma lem3510304 {_90715 A : Type'} (GEN_PVAR_84 : _90715) (u : _90715 -> Prop) (f : type1413 _90715 A) (t : _90715 -> Prop) : (term2102 _90715 A GEN_PVAR_84 u f t) = (term2102 _90715 A GEN_PVAR_84 u f t).
Proof. exact (fun_ext (fun x : _90715 => @lem3510303 _90715 A GEN_PVAR_84 u f t x)). Qed.
Lemma lem3510305 {_90715 : Type'} : (@ex _90715) = (@ex _90715).
Proof. exact (eq_refl (@ex _90715)). Qed.
Lemma lem3510306 {_90715 A : Type'} (GEN_PVAR_84 : _90715) (u : _90715 -> Prop) (f : type1413 _90715 A) (t : _90715 -> Prop) : (term2103 _90715 A GEN_PVAR_84 u f t) = (term2103 _90715 A GEN_PVAR_84 u f t).
Proof. exact (MK_COMB (@lem3510305 _90715) (@lem3510304 _90715 A GEN_PVAR_84 u f t)). Qed.
Lemma lem3510307 {_90715 A : Type'} (u : _90715 -> Prop) (f : type1413 _90715 A) (t : _90715 -> Prop) : (term2104 _90715 A u f t) = (term2104 _90715 A u f t).
Proof. exact (fun_ext (fun GEN_PVAR_84 : _90715 => @lem3510306 _90715 A GEN_PVAR_84 u f t)). Qed.
Lemma lem3510308 {_90715 : Type'} : (@GSPEC _90715) = (@GSPEC _90715).
Proof. exact (eq_refl (@GSPEC _90715)). Qed.
Lemma lem3510309 {_90715 A : Type'} (u : _90715 -> Prop) (f : type1413 _90715 A) (t : _90715 -> Prop) : (term2105 _90715 A u f t) = (term2105 _90715 A u f t).
Proof. exact (MK_COMB (@lem3510308 _90715) (@lem3510307 _90715 A u f t)). Qed.
Lemma lem3510310 {_90715 : Type'} : (@SUBSET _90715) = (@SUBSET _90715).
Proof. exact (eq_refl (@SUBSET _90715)). Qed.
Lemma lem3510311 {_90715 A : Type'} (u : _90715 -> Prop) (f : type1413 _90715 A) (t : _90715 -> Prop) : (term2106 _90715 A u f t) = (term2106 _90715 A u f t).
Proof. exact (MK_COMB (@lem3510310 _90715) (@lem3510309 _90715 A u f t)). Qed.
Lemma lem3510312 {_90715 A : Type'} (u : _90715 -> Prop) (f : type1413 _90715 A) (t : _90715 -> Prop) : (term2107 _90715 A u f t) = (term2107 _90715 A u f t).
Proof. exact (MK_COMB (@lem3510311 _90715 A u f t) (@lem3510275 _90715 t)). Qed.
Lemma lem3510319 {_90715 : Type'} (t : _90715 -> Prop) (u : _90715 -> Prop) : (term75 _90715 t u) = (term75 _90715 t u).
Proof. exact (eq_refl (term75 _90715 t u)). Qed.
Lemma lem3510320 {_90715 A : Type'} (u : _90715 -> Prop) (f : type1413 _90715 A) (t : _90715 -> Prop) : (term2108 _90715 A u f t) = (term2108 _90715 A u f t).
Proof. exact (MK_COMB (@lem3510319 _90715 t u) (@lem3510312 _90715 A u f t)). Qed.
Lemma lem3510327 {_90715 : Type'} (t : _90715 -> Prop) (g : type686 _90715) : (term78 _90715 t g) = (term78 _90715 t g).
Proof. exact (eq_refl (term78 _90715 t g)). Qed.
Lemma lem3510328 {_90715 A : Type'} (g : type686 _90715) (u : _90715 -> Prop) (f : type1413 _90715 A) (t : _90715 -> Prop) : (term2109 _90715 A g u f t) = (term2109 _90715 A g u f t).
Proof. exact (MK_COMB (@lem3510327 _90715 t g) (@lem3510320 _90715 A u f t)). Qed.
Lemma lem3510329 {_90715 A : Type'} (g : type686 _90715) (u : _90715 -> Prop) (f : type1413 _90715 A) : (term2110 _90715 A g u f) = (term2110 _90715 A g u f).
Proof. exact (fun_ext (fun t : _90715 -> Prop => @lem3510328 _90715 A g u f t)). Qed.
Lemma lem3510330 {_90715 : Type'} : (@all (_90715 -> Prop)) = (@all (_90715 -> Prop)).
Proof. exact (eq_refl (@all (_90715 -> Prop))). Qed.
Lemma lem3510331 {_90715 A : Type'} (g : type686 _90715) (u : _90715 -> Prop) (f : type1413 _90715 A) : (term2111 _90715 A g u f) = (term2111 _90715 A g u f).
Proof. exact (MK_COMB (@lem3510330 _90715) (@lem3510329 _90715 A g u f)). Qed.
Lemma lem3510340 {_90715 : Type'} (g : type686 _90715) : (term42 _90715 g) = (term42 _90715 g).
Proof. exact (eq_refl (term42 _90715 g)). Qed.
Lemma lem3510341 {_90715 A : Type'} (g : type686 _90715) (u : _90715 -> Prop) (f : type1413 _90715 A) : (term2112 _90715 A g u f) = (term2112 _90715 A g u f).
Proof. exact (MK_COMB (@lem3510340 _90715 g) (@lem3510331 _90715 A g u f)). Qed.
Lemma lem3510342 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem3510343 {_90715 A : Type'} (g : type686 _90715) (u : _90715 -> Prop) (f : type1413 _90715 A) : (term2113 _90715 A g u f) = (term2113 _90715 A g u f).
Proof. exact (MK_COMB (@lem3510342) (@lem3510341 _90715 A g u f)). Qed.
Lemma lem3510344 {_90715 A : Type'} (u : _90715 -> Prop) (f : type1413 _90715 A) (g : type686 _90715) : (term2114 _90715 A u f g) = (term2114 _90715 A u f g).
Proof. exact (MK_COMB (@lem3510343 _90715 A g u f) (@lem3510274 _90715 A f g)). Qed.
Lemma lem3510345 {_90715 A : Type'} (u : _90715 -> Prop) (f : type1413 _90715 A) : (term2115 _90715 A u f) = (term2115 _90715 A u f).
Proof. exact (fun_ext (fun g : type686 _90715 => @lem3510344 _90715 A u f g)). Qed.
Lemma lem3510346 {_90715 : Type'} : (@all ((_90715 -> Prop) -> Prop)) = (@all ((_90715 -> Prop) -> Prop)).
Proof. exact (eq_refl (@all ((_90715 -> Prop) -> Prop))). Qed.
Lemma lem3510347 {_90715 A : Type'} (u : _90715 -> Prop) (f : type1413 _90715 A) : (term2116 _90715 A u f) = (term2116 _90715 A u f).
Proof. exact (MK_COMB (@lem3510346 _90715) (@lem3510345 _90715 A u f)). Qed.
Lemma lem3510348 {_90715 A : Type'} (u : _90715 -> Prop) : (term2117 _90715 A u) = (term2117 _90715 A u).
Proof. exact (fun_ext (fun f : type1413 _90715 A => @lem3510347 _90715 A u f)). Qed.
Lemma lem3510349 {_90715 A : Type'} : (@all (_90715 -> A -> Prop)) = (@all (_90715 -> A -> Prop)).
Proof. exact (eq_refl (@all (_90715 -> A -> Prop))). Qed.
Lemma lem3510350 {_90715 A : Type'} (u : _90715 -> Prop) : (term2118 _90715 A u) = (term2118 _90715 A u).
Proof. exact (MK_COMB (@lem3510349 _90715 A) (@lem3510348 _90715 A u)). Qed.
Lemma lem3510351 {_90715 A : Type'} : (term2119 _90715 A) = (term2119 _90715 A).
Proof. exact (fun_ext (fun u : _90715 -> Prop => @lem3510350 _90715 A u)). Qed.
Lemma lem3510352 {_90715 : Type'} : (@all (_90715 -> Prop)) = (@all (_90715 -> Prop)).
Proof. exact (eq_refl (@all (_90715 -> Prop))). Qed.
Lemma lem3510353 {_90715 A : Type'} : (term1960 _90715 A) = (term1960 _90715 A).
Proof. exact (MK_COMB (@lem3510352 _90715) (@lem3510351 _90715 A)). Qed.
Lemma lem3510354 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem3510355 {_90715 A : Type'} : (term1979 _90715 A) = (term1979 _90715 A).
Proof. exact (MK_COMB (@lem3510354) (@lem3510353 _90715 A)). Qed.
Lemma lem3510356 {_90715 _90724 A B : Type'} (_37163 : type627 A B) : (term2120 _90715 _90724 A B _37163) = (term2120 _90715 _90724 A B _37163).
Proof. exact (MK_COMB (@lem3510355 _90715 A) (@lem3510255 _90724 A B _37163)). Qed.
Lemma lem3510375 {_90715 B : Type'} (f : _90715 -> B) (g : type686 _90715) : ((term49 _90715 B f g) = (term50 _90715 B f g)) = ((term49 _90715 B f g) = (term50 _90715 B f g)).
Proof. exact (eq_refl ((term49 _90715 B f g) = (term50 _90715 B f g))). Qed.
Lemma lem3510376 {_90715 : Type'} (t : _90715 -> Prop) : t = t.
Proof. exact (eq_refl t). Qed.
Lemma lem3510404 {_90715 B : Type'} (GEN_PVAR_84 : _90715) (u : _90715 -> Prop) (f : _90715 -> B) (t : _90715 -> Prop) (x : _90715) : (term61 _90715 B GEN_PVAR_84 u f t x) = (term61 _90715 B GEN_PVAR_84 u f t x).
Proof. exact (eq_refl (term61 _90715 B GEN_PVAR_84 u f t x)). Qed.
Lemma lem3510405 {_90715 B : Type'} (GEN_PVAR_84 : _90715) (u : _90715 -> Prop) (f : _90715 -> B) (t : _90715 -> Prop) : (term63 _90715 B GEN_PVAR_84 u f t) = (term63 _90715 B GEN_PVAR_84 u f t).
Proof. exact (fun_ext (fun x : _90715 => @lem3510404 _90715 B GEN_PVAR_84 u f t x)). Qed.
Lemma lem3510406 {_90715 : Type'} : (@ex _90715) = (@ex _90715).
Proof. exact (eq_refl (@ex _90715)). Qed.
Lemma lem3510407 {_90715 B : Type'} (GEN_PVAR_84 : _90715) (u : _90715 -> Prop) (f : _90715 -> B) (t : _90715 -> Prop) : (term65 _90715 B GEN_PVAR_84 u f t) = (term65 _90715 B GEN_PVAR_84 u f t).
Proof. exact (MK_COMB (@lem3510406 _90715) (@lem3510405 _90715 B GEN_PVAR_84 u f t)). Qed.
Lemma lem3510408 {_90715 B : Type'} (u : _90715 -> Prop) (f : _90715 -> B) (t : _90715 -> Prop) : (term67 _90715 B u f t) = (term67 _90715 B u f t).
Proof. exact (fun_ext (fun GEN_PVAR_84 : _90715 => @lem3510407 _90715 B GEN_PVAR_84 u f t)). Qed.
Lemma lem3510409 {_90715 : Type'} : (@GSPEC _90715) = (@GSPEC _90715).
Proof. exact (eq_refl (@GSPEC _90715)). Qed.
Lemma lem3510410 {_90715 B : Type'} (u : _90715 -> Prop) (f : _90715 -> B) (t : _90715 -> Prop) : (term69 _90715 B u f t) = (term69 _90715 B u f t).
Proof. exact (MK_COMB (@lem3510409 _90715) (@lem3510408 _90715 B u f t)). Qed.
Lemma lem3510411 {_90715 : Type'} : (@SUBSET _90715) = (@SUBSET _90715).
Proof. exact (eq_refl (@SUBSET _90715)). Qed.
Lemma lem3510412 {_90715 B : Type'} (u : _90715 -> Prop) (f : _90715 -> B) (t : _90715 -> Prop) : (term71 _90715 B u f t) = (term71 _90715 B u f t).
Proof. exact (MK_COMB (@lem3510411 _90715) (@lem3510410 _90715 B u f t)). Qed.
Lemma lem3510413 {_90715 B : Type'} (u : _90715 -> Prop) (f : _90715 -> B) (t : _90715 -> Prop) : (term73 _90715 B u f t) = (term73 _90715 B u f t).
Proof. exact (MK_COMB (@lem3510412 _90715 B u f t) (@lem3510376 _90715 t)). Qed.
Lemma lem3510420 {_90715 : Type'} (t : _90715 -> Prop) (u : _90715 -> Prop) : (term75 _90715 t u) = (term75 _90715 t u).
Proof. exact (eq_refl (term75 _90715 t u)). Qed.
Lemma lem3510421 {_90715 B : Type'} (u : _90715 -> Prop) (f : _90715 -> B) (t : _90715 -> Prop) : (term76 _90715 B u f t) = (term76 _90715 B u f t).
Proof. exact (MK_COMB (@lem3510420 _90715 t u) (@lem3510413 _90715 B u f t)). Qed.
Lemma lem3510428 {_90715 : Type'} (t : _90715 -> Prop) (g : type686 _90715) : (term78 _90715 t g) = (term78 _90715 t g).
Proof. exact (eq_refl (term78 _90715 t g)). Qed.
Lemma lem3510429 {_90715 B : Type'} (g : type686 _90715) (u : _90715 -> Prop) (f : _90715 -> B) (t : _90715 -> Prop) : (term79 _90715 B g u f t) = (term79 _90715 B g u f t).
Proof. exact (MK_COMB (@lem3510428 _90715 t g) (@lem3510421 _90715 B u f t)). Qed.
Lemma lem3510430 {_90715 B : Type'} (g : type686 _90715) (u : _90715 -> Prop) (f : _90715 -> B) : (term81 _90715 B g u f) = (term81 _90715 B g u f).
Proof. exact (fun_ext (fun t : _90715 -> Prop => @lem3510429 _90715 B g u f t)). Qed.
Lemma lem3510431 {_90715 : Type'} : (@all (_90715 -> Prop)) = (@all (_90715 -> Prop)).
Proof. exact (eq_refl (@all (_90715 -> Prop))). Qed.
Lemma lem3510432 {_90715 B : Type'} (g : type686 _90715) (u : _90715 -> Prop) (f : _90715 -> B) : (term44 _90715 B g u f) = (term44 _90715 B g u f).
Proof. exact (MK_COMB (@lem3510431 _90715) (@lem3510430 _90715 B g u f)). Qed.
Lemma lem3510441 {_90715 : Type'} (g : type686 _90715) : (term42 _90715 g) = (term42 _90715 g).
Proof. exact (eq_refl (term42 _90715 g)). Qed.
Lemma lem3510442 {_90715 B : Type'} (g : type686 _90715) (u : _90715 -> Prop) (f : _90715 -> B) : (term45 _90715 B g u f) = (term45 _90715 B g u f).
Proof. exact (MK_COMB (@lem3510441 _90715 g) (@lem3510432 _90715 B g u f)). Qed.
Lemma lem3510443 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem3510444 {_90715 B : Type'} (g : type686 _90715) (u : _90715 -> Prop) (f : _90715 -> B) : (term47 _90715 B g u f) = (term47 _90715 B g u f).
Proof. exact (MK_COMB (@lem3510443) (@lem3510442 _90715 B g u f)). Qed.
Lemma lem3510445 {_90715 B : Type'} (u : _90715 -> Prop) (f : _90715 -> B) (g : type686 _90715) : (term52 _90715 B u f g) = (term52 _90715 B u f g).
Proof. exact (MK_COMB (@lem3510444 _90715 B g u f) (@lem3510375 _90715 B f g)). Qed.
Lemma lem3510446 {_90715 B : Type'} (u : _90715 -> Prop) (f : _90715 -> B) : (term2087 _90715 B u f) = (term2087 _90715 B u f).
Proof. exact (fun_ext (fun g : type686 _90715 => @lem3510445 _90715 B u f g)). Qed.
Lemma lem3510447 {_90715 : Type'} : (@all ((_90715 -> Prop) -> Prop)) = (@all ((_90715 -> Prop) -> Prop)).
Proof. exact (eq_refl (@all ((_90715 -> Prop) -> Prop))). Qed.
Lemma lem3510448 {_90715 B : Type'} (u : _90715 -> Prop) (f : _90715 -> B) : (term1876 _90715 B u f) = (term1876 _90715 B u f).
Proof. exact (MK_COMB (@lem3510447 _90715) (@lem3510446 _90715 B u f)). Qed.
Lemma lem3510449 {_90715 B : Type'} (u : _90715 -> Prop) : (term2090 _90715 B u) = (term2090 _90715 B u).
Proof. exact (fun_ext (fun f : _90715 -> B => @lem3510448 _90715 B u f)). Qed.
Lemma lem3510450 {_90715 B : Type'} : (@all (_90715 -> B)) = (@all (_90715 -> B)).
Proof. exact (eq_refl (@all (_90715 -> B))). Qed.
Lemma lem3510451 {_90715 B : Type'} (u : _90715 -> Prop) : (term1877 _90715 B u) = (term1877 _90715 B u).
Proof. exact (MK_COMB (@lem3510450 _90715 B) (@lem3510449 _90715 B u)). Qed.
Lemma lem3510452 {_90715 B : Type'} : (term2093 _90715 B) = (term2093 _90715 B).
Proof. exact (fun_ext (fun u : _90715 -> Prop => @lem3510451 _90715 B u)). Qed.
Lemma lem3510453 {_90715 : Type'} : (@all (_90715 -> Prop)) = (@all (_90715 -> Prop)).
Proof. exact (eq_refl (@all (_90715 -> Prop))). Qed.
Lemma lem3510454 {_90715 B : Type'} : (term1878 _90715 B) = (term1878 _90715 B).
Proof. exact (MK_COMB (@lem3510453 _90715) (@lem3510452 _90715 B)). Qed.
Lemma lem3510455 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem3510456 {_90715 B : Type'} : (term1974 _90715 B) = (term1974 _90715 B).
Proof. exact (MK_COMB (@lem3510455) (@lem3510454 _90715 B)). Qed.
Lemma lem3510457 {_90715 _90724 A B : Type'} (_37163 : type627 A B) : (term2121 _90715 _90724 A B _37163) = (term2121 _90715 _90724 A B _37163).
Proof. exact (MK_COMB (@lem3510456 _90715 B) (@lem3510356 _90715 _90724 A B _37163)). Qed.
Lemma lem3510476 {_90715 A : Type'} (f : _90715 -> A) (g : type686 _90715) : ((term49 _90715 A f g) = (term50 _90715 A f g)) = ((term49 _90715 A f g) = (term50 _90715 A f g)).
Proof. exact (eq_refl ((term49 _90715 A f g) = (term50 _90715 A f g))). Qed.
Lemma lem3510477 {_90715 : Type'} (t : _90715 -> Prop) : t = t.
Proof. exact (eq_refl t). Qed.
Lemma lem3510479 {_90715 A : Type'} (u : _90715 -> Prop) (f : _90715 -> A) (t : _90715 -> Prop) (_37165 : type627 _90715 A) (h1 : _37165 = (term2002 _90715 A)) : (term67 _90715 A u f t) = (_37165 u f t).
Proof. exact (SYM (@lem3509775 _90715 A u f t _37165 h1)). Qed.
Lemma lem3510480 {_90715 A : Type'} (u : _90715 -> Prop) (f : _90715 -> A) (t : _90715 -> Prop) (_37165 : type627 _90715 A) (h1 : _37165 = (term2002 _90715 A)) : (term67 _90715 A u f t) = (_37165 u f t).
Proof. exact (@lem3510479 _90715 A u f t _37165 h1). Qed.
Lemma lem3510481 {_90715 : Type'} : (@GSPEC _90715) = (@GSPEC _90715).
Proof. exact (eq_refl (@GSPEC _90715)). Qed.
Lemma lem3510482 {_90715 A : Type'} (u : _90715 -> Prop) (f : _90715 -> A) (t : _90715 -> Prop) (_37165 : type627 _90715 A) (h1 : _37165 = (term2002 _90715 A)) : (term69 _90715 A u f t) = (term2077 _90715 A _37165 u f t).
Proof. exact (MK_COMB (@lem3510481 _90715) (@lem3510480 _90715 A u f t _37165 h1)). Qed.
Lemma lem3510483 {_90715 : Type'} : (@SUBSET _90715) = (@SUBSET _90715).
Proof. exact (eq_refl (@SUBSET _90715)). Qed.
Lemma lem3510484 {_90715 A : Type'} (u : _90715 -> Prop) (f : _90715 -> A) (t : _90715 -> Prop) (_37165 : type627 _90715 A) (h1 : _37165 = (term2002 _90715 A)) : (term71 _90715 A u f t) = (term2078 _90715 A _37165 u f t).
Proof. exact (MK_COMB (@lem3510483 _90715) (@lem3510482 _90715 A u f t _37165 h1)). Qed.
Lemma lem3510485 {_90715 A : Type'} (u : _90715 -> Prop) (f : _90715 -> A) (t : _90715 -> Prop) (_37165 : type627 _90715 A) (h1 : _37165 = (term2002 _90715 A)) : (term73 _90715 A u f t) = (term2079 _90715 A _37165 u f t).
Proof. exact (MK_COMB (@lem3510484 _90715 A u f t _37165 h1) (@lem3510477 _90715 t)). Qed.
Lemma lem3510492 {_90715 : Type'} (t : _90715 -> Prop) (u : _90715 -> Prop) : (term75 _90715 t u) = (term75 _90715 t u).
Proof. exact (eq_refl (term75 _90715 t u)). Qed.
Lemma lem3510493 {_90715 A : Type'} (u : _90715 -> Prop) (f : _90715 -> A) (t : _90715 -> Prop) (_37165 : type627 _90715 A) (h1 : _37165 = (term2002 _90715 A)) : (term76 _90715 A u f t) = (term2080 _90715 A _37165 u f t).
Proof. exact (MK_COMB (@lem3510492 _90715 t u) (@lem3510485 _90715 A u f t _37165 h1)). Qed.
Lemma lem3510500 {_90715 : Type'} (t : _90715 -> Prop) (g : type686 _90715) : (term78 _90715 t g) = (term78 _90715 t g).
Proof. exact (eq_refl (term78 _90715 t g)). Qed.
Lemma lem3510501 {_90715 A : Type'} (g : type686 _90715) (u : _90715 -> Prop) (f : _90715 -> A) (t : _90715 -> Prop) (_37165 : type627 _90715 A) (h1 : _37165 = (term2002 _90715 A)) : (term79 _90715 A g u f t) = (term2081 _90715 A g _37165 u f t).
Proof. exact (MK_COMB (@lem3510500 _90715 t g) (@lem3510493 _90715 A u f t _37165 h1)). Qed.
Lemma lem3510502 {_90715 A : Type'} (g : type686 _90715) (u : _90715 -> Prop) (f : _90715 -> A) (_37165 : type627 _90715 A) (h1 : _37165 = (term2002 _90715 A)) : (term81 _90715 A g u f) = (term2082 _90715 A g _37165 u f).
Proof. exact (fun_ext (fun t : _90715 -> Prop => @lem3510501 _90715 A g u f t _37165 h1)). Qed.
Lemma lem3510503 {_90715 : Type'} : (@all (_90715 -> Prop)) = (@all (_90715 -> Prop)).
Proof. exact (eq_refl (@all (_90715 -> Prop))). Qed.
Lemma lem3510504 {_90715 A : Type'} (g : type686 _90715) (u : _90715 -> Prop) (f : _90715 -> A) (_37165 : type627 _90715 A) (h1 : _37165 = (term2002 _90715 A)) : (term44 _90715 A g u f) = (term2083 _90715 A g _37165 u f).
Proof. exact (MK_COMB (@lem3510503 _90715) (@lem3510502 _90715 A g u f _37165 h1)). Qed.
Lemma lem3510513 {_90715 : Type'} (g : type686 _90715) : (term42 _90715 g) = (term42 _90715 g).
Proof. exact (eq_refl (term42 _90715 g)). Qed.
Lemma lem3510514 {_90715 A : Type'} (g : type686 _90715) (u : _90715 -> Prop) (f : _90715 -> A) (_37165 : type627 _90715 A) (h1 : _37165 = (term2002 _90715 A)) : (term45 _90715 A g u f) = (term2084 _90715 A g _37165 u f).
Proof. exact (MK_COMB (@lem3510513 _90715 g) (@lem3510504 _90715 A g u f _37165 h1)). Qed.
Lemma lem3510515 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem3510516 {_90715 A : Type'} (g : type686 _90715) (u : _90715 -> Prop) (f : _90715 -> A) (_37165 : type627 _90715 A) (h1 : _37165 = (term2002 _90715 A)) : (term47 _90715 A g u f) = (term2085 _90715 A g _37165 u f).
Proof. exact (MK_COMB (@lem3510515) (@lem3510514 _90715 A g u f _37165 h1)). Qed.
Lemma lem3510517 {_90715 A : Type'} (u : _90715 -> Prop) (f : _90715 -> A) (g : type686 _90715) (_37165 : type627 _90715 A) (h1 : _37165 = (term2002 _90715 A)) : (term52 _90715 A u f g) = (term2086 _90715 A _37165 u f g).
Proof. exact (MK_COMB (@lem3510516 _90715 A g u f _37165 h1) (@lem3510476 _90715 A f g)). Qed.
Lemma lem3510518 {_90715 A : Type'} (u : _90715 -> Prop) (f : _90715 -> A) (_37165 : type627 _90715 A) (h1 : _37165 = (term2002 _90715 A)) : (term2087 _90715 A u f) = (term2088 _90715 A _37165 u f).
Proof. exact (fun_ext (fun g : type686 _90715 => @lem3510517 _90715 A u f g _37165 h1)). Qed.
Lemma lem3510519 {_90715 : Type'} : (@all ((_90715 -> Prop) -> Prop)) = (@all ((_90715 -> Prop) -> Prop)).
Proof. exact (eq_refl (@all ((_90715 -> Prop) -> Prop))). Qed.
Lemma lem3510520 {_90715 A : Type'} (u : _90715 -> Prop) (f : _90715 -> A) (_37165 : type627 _90715 A) (h1 : _37165 = (term2002 _90715 A)) : (term1876 _90715 A u f) = (term2089 _90715 A _37165 u f).
Proof. exact (MK_COMB (@lem3510519 _90715) (@lem3510518 _90715 A u f _37165 h1)). Qed.
Lemma lem3510521 {_90715 A : Type'} (u : _90715 -> Prop) (_37165 : type627 _90715 A) (h1 : _37165 = (term2002 _90715 A)) : (term2090 _90715 A u) = (term2091 _90715 A _37165 u).
Proof. exact (fun_ext (fun f : _90715 -> A => @lem3510520 _90715 A u f _37165 h1)). Qed.
Lemma lem3510522 {_90715 A : Type'} : (@all (_90715 -> A)) = (@all (_90715 -> A)).
Proof. exact (eq_refl (@all (_90715 -> A))). Qed.
Lemma lem3510523 {_90715 A : Type'} (u : _90715 -> Prop) (_37165 : type627 _90715 A) (h1 : _37165 = (term2002 _90715 A)) : (term1877 _90715 A u) = (term2092 _90715 A _37165 u).
Proof. exact (MK_COMB (@lem3510522 _90715 A) (@lem3510521 _90715 A u _37165 h1)). Qed.
Lemma lem3510524 {_90715 A : Type'} (_37165 : type627 _90715 A) (h1 : _37165 = (term2002 _90715 A)) : (term2093 _90715 A) = (term2094 _90715 A _37165).
Proof. exact (fun_ext (fun u : _90715 -> Prop => @lem3510523 _90715 A u _37165 h1)). Qed.
Lemma lem3510525 {_90715 : Type'} : (@all (_90715 -> Prop)) = (@all (_90715 -> Prop)).
Proof. exact (eq_refl (@all (_90715 -> Prop))). Qed.
Lemma lem3510526 {_90715 A : Type'} (_37165 : type627 _90715 A) (h1 : _37165 = (term2002 _90715 A)) : (term1878 _90715 A) = (term2095 _90715 A _37165).
Proof. exact (MK_COMB (@lem3510525 _90715) (@lem3510524 _90715 A _37165 h1)). Qed.
Lemma lem3510527 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem3510528 {_90715 A : Type'} (_37165 : type627 _90715 A) (h1 : _37165 = (term2002 _90715 A)) : (term1974 _90715 A) = (term2096 _90715 A _37165).
Proof. exact (MK_COMB (@lem3510527) (@lem3510526 _90715 A _37165 h1)). Qed.
Lemma lem3510529 {_90715 _90724 A B : Type'} (_37163 : type627 A B) (_37165 : type627 _90715 A) (h1 : _37165 = (term2002 _90715 A)) : (term2122 _90715 _90724 A B _37163) = (term2248 _90715 _90724 A B _37165 _37163).
Proof. exact (MK_COMB (@lem3510528 _90715 A _37165 h1) (@lem3510457 _90715 _90724 A B _37163)). Qed.
Lemma lem3510548 {_90715 _90724 : Type'} (f : _90715 -> _90724) (g : type686 _90715) : ((term49 _90715 _90724 f g) = (term50 _90715 _90724 f g)) = ((term49 _90715 _90724 f g) = (term50 _90715 _90724 f g)).
Proof. exact (eq_refl ((term49 _90715 _90724 f g) = (term50 _90715 _90724 f g))). Qed.
Lemma lem3510577 {_90715 _90724 : Type'} (g : type686 _90715) (_37164 : type627 _90715 _90724) (u : _90715 -> Prop) (f : _90715 -> _90724) (t : _90715 -> Prop) : (term2081 _90715 _90724 g _37164 u f t) = (term2081 _90715 _90724 g _37164 u f t).
Proof. exact (eq_refl (term2081 _90715 _90724 g _37164 u f t)). Qed.
Lemma lem3510578 {_90715 _90724 : Type'} (g : type686 _90715) (_37164 : type627 _90715 _90724) (u : _90715 -> Prop) (f : _90715 -> _90724) : (term2082 _90715 _90724 g _37164 u f) = (term2082 _90715 _90724 g _37164 u f).
Proof. exact (fun_ext (fun t : _90715 -> Prop => @lem3510577 _90715 _90724 g _37164 u f t)). Qed.
Lemma lem3510579 {_90715 : Type'} : (@all (_90715 -> Prop)) = (@all (_90715 -> Prop)).
Proof. exact (eq_refl (@all (_90715 -> Prop))). Qed.
Lemma lem3510580 {_90715 _90724 : Type'} (g : type686 _90715) (_37164 : type627 _90715 _90724) (u : _90715 -> Prop) (f : _90715 -> _90724) : (term2083 _90715 _90724 g _37164 u f) = (term2083 _90715 _90724 g _37164 u f).
Proof. exact (MK_COMB (@lem3510579 _90715) (@lem3510578 _90715 _90724 g _37164 u f)). Qed.
Lemma lem3510589 {_90715 : Type'} (g : type686 _90715) : (term42 _90715 g) = (term42 _90715 g).
Proof. exact (eq_refl (term42 _90715 g)). Qed.
Lemma lem3510590 {_90715 _90724 : Type'} (g : type686 _90715) (_37164 : type627 _90715 _90724) (u : _90715 -> Prop) (f : _90715 -> _90724) : (term2084 _90715 _90724 g _37164 u f) = (term2084 _90715 _90724 g _37164 u f).
Proof. exact (MK_COMB (@lem3510589 _90715 g) (@lem3510580 _90715 _90724 g _37164 u f)). Qed.
Lemma lem3510591 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem3510592 {_90715 _90724 : Type'} (g : type686 _90715) (_37164 : type627 _90715 _90724) (u : _90715 -> Prop) (f : _90715 -> _90724) : (term2085 _90715 _90724 g _37164 u f) = (term2085 _90715 _90724 g _37164 u f).
Proof. exact (MK_COMB (@lem3510591) (@lem3510590 _90715 _90724 g _37164 u f)). Qed.
Lemma lem3510593 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) (u : _90715 -> Prop) (f : _90715 -> _90724) (g : type686 _90715) : (term2086 _90715 _90724 _37164 u f g) = (term2086 _90715 _90724 _37164 u f g).
Proof. exact (MK_COMB (@lem3510592 _90715 _90724 g _37164 u f) (@lem3510548 _90715 _90724 f g)). Qed.
Lemma lem3510594 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) (u : _90715 -> Prop) (f : _90715 -> _90724) : (term2088 _90715 _90724 _37164 u f) = (term2088 _90715 _90724 _37164 u f).
Proof. exact (fun_ext (fun g : type686 _90715 => @lem3510593 _90715 _90724 _37164 u f g)). Qed.
Lemma lem3510595 {_90715 : Type'} : (@all ((_90715 -> Prop) -> Prop)) = (@all ((_90715 -> Prop) -> Prop)).
Proof. exact (eq_refl (@all ((_90715 -> Prop) -> Prop))). Qed.
Lemma lem3510596 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) (u : _90715 -> Prop) (f : _90715 -> _90724) : (term2089 _90715 _90724 _37164 u f) = (term2089 _90715 _90724 _37164 u f).
Proof. exact (MK_COMB (@lem3510595 _90715) (@lem3510594 _90715 _90724 _37164 u f)). Qed.
Lemma lem3510597 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) (u : _90715 -> Prop) : (term2091 _90715 _90724 _37164 u) = (term2091 _90715 _90724 _37164 u).
Proof. exact (fun_ext (fun f : _90715 -> _90724 => @lem3510596 _90715 _90724 _37164 u f)). Qed.
Lemma lem3510598 {_90715 _90724 : Type'} : (@all (_90715 -> _90724)) = (@all (_90715 -> _90724)).
Proof. exact (eq_refl (@all (_90715 -> _90724))). Qed.
Lemma lem3510599 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) (u : _90715 -> Prop) : (term2092 _90715 _90724 _37164 u) = (term2092 _90715 _90724 _37164 u).
Proof. exact (MK_COMB (@lem3510598 _90715 _90724) (@lem3510597 _90715 _90724 _37164 u)). Qed.
Lemma lem3510600 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) : (term2094 _90715 _90724 _37164) = (term2094 _90715 _90724 _37164).
Proof. exact (fun_ext (fun u : _90715 -> Prop => @lem3510599 _90715 _90724 _37164 u)). Qed.
Lemma lem3510601 {_90715 : Type'} : (@all (_90715 -> Prop)) = (@all (_90715 -> Prop)).
Proof. exact (eq_refl (@all (_90715 -> Prop))). Qed.
Lemma lem3510602 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) : (term2095 _90715 _90724 _37164) = (term2095 _90715 _90724 _37164).
Proof. exact (MK_COMB (@lem3510601 _90715) (@lem3510600 _90715 _90724 _37164)). Qed.
Lemma lem3510603 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem3510604 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) : (term2096 _90715 _90724 _37164) = (term2096 _90715 _90724 _37164).
Proof. exact (MK_COMB (@lem3510603) (@lem3510602 _90715 _90724 _37164)). Qed.
Lemma lem3510605 {_90715 _90724 A B : Type'} (_37164 : type627 _90715 _90724) (_37163 : type627 A B) (_37165 : type627 _90715 A) (h1 : _37165 = (term2002 _90715 A)) : (term2215 _90715 _90724 A B _37164 _37163) = (term2249 _90715 _90724 A B _37164 _37165 _37163).
Proof. exact (MK_COMB (@lem3510604 _90715 _90724 _37164) (@lem3510529 _90715 _90724 A B _37163 _37165 h1)). Qed.
Lemma lem3510624 {A B : Type'} (f : A -> B) (g : type686 A) : ((term49 A B f g) = (term50 A B f g)) = ((term49 A B f g) = (term50 A B f g)).
Proof. exact (eq_refl ((term49 A B f g) = (term50 A B f g))). Qed.
Lemma lem3510645 {A B : Type'} (g : type686 A) (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) (t : A -> Prop) : (term2124 A B g _37163 u f t) = (term2124 A B g _37163 u f t).
Proof. exact (eq_refl (term2124 A B g _37163 u f t)). Qed.
Lemma lem3510646 {A B : Type'} (g : type686 A) (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) : (term2125 A B g _37163 u f) = (term2125 A B g _37163 u f).
Proof. exact (fun_ext (fun t : A -> Prop => @lem3510645 A B g _37163 u f t)). Qed.
Lemma lem3510647 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem3510648 {A B : Type'} (g : type686 A) (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) : (term2126 A B g _37163 u f) = (term2126 A B g _37163 u f).
Proof. exact (MK_COMB (@lem3510647 A) (@lem3510646 A B g _37163 u f)). Qed.
Lemma lem3510661 {A : Type'} (g : type686 A) (t : A -> Prop) (u : A -> Prop) : (term2127 A g t u) = (term2127 A g t u).
Proof. exact (eq_refl (term2127 A g t u)). Qed.
Lemma lem3510662 {A : Type'} (g : type686 A) (u : A -> Prop) : (term2128 A g u) = (term2128 A g u).
Proof. exact (fun_ext (fun t : A -> Prop => @lem3510661 A g t u)). Qed.
Lemma lem3510663 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem3510664 {A : Type'} (g : type686 A) (u : A -> Prop) : (term2129 A g u) = (term2129 A g u).
Proof. exact (MK_COMB (@lem3510663 A) (@lem3510662 A g u)). Qed.
Lemma lem3510665 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem3510666 {A : Type'} (g : type686 A) (u : A -> Prop) : (term1946 A g u) = (term1946 A g u).
Proof. exact (MK_COMB (@lem3510665) (@lem3510664 A g u)). Qed.
Lemma lem3510667 {A B : Type'} (g : type686 A) (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) : (term2130 A B g _37163 u f) = (term2130 A B g _37163 u f).
Proof. exact (MK_COMB (@lem3510666 A g u) (@lem3510648 A B g _37163 u f)). Qed.
Lemma lem3510676 {A : Type'} (g : type686 A) : (term42 A g) = (term42 A g).
Proof. exact (eq_refl (term42 A g)). Qed.
Lemma lem3510677 {A B : Type'} (g : type686 A) (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) : (term2131 A B g _37163 u f) = (term2131 A B g _37163 u f).
Proof. exact (MK_COMB (@lem3510676 A g) (@lem3510667 A B g _37163 u f)). Qed.
Lemma lem3510678 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem3510679 {A B : Type'} (g : type686 A) (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) : (term2133 A B g _37163 u f) = (term2133 A B g _37163 u f).
Proof. exact (MK_COMB (@lem3510678) (@lem3510677 A B g _37163 u f)). Qed.
Lemma lem3510680 {A B : Type'} (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) (g : type686 A) : (term2134 A B _37163 u f g) = (term2134 A B _37163 u f g).
Proof. exact (MK_COMB (@lem3510679 A B g _37163 u f) (@lem3510624 A B f g)). Qed.
Lemma lem3510681 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem3510682 {A B : Type'} (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) (g : type686 A) : (term2135 A B _37163 u f g) = (term2135 A B _37163 u f g).
Proof. exact (MK_COMB (@lem3510681) (@lem3510680 A B _37163 u f g)). Qed.
Lemma lem3510683 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem3510684 {A B : Type'} (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) (g : type686 A) : (term2136 A B _37163 u f g) = (term2136 A B _37163 u f g).
Proof. exact (MK_COMB (@lem3510683) (@lem3510682 A B _37163 u f g)). Qed.
Lemma lem3510685 {_90715 _90724 A B : Type'} (u : A -> Prop) (f : A -> B) (g : type686 A) (_37164 : type627 _90715 _90724) (_37163 : type627 A B) (_37165 : type627 _90715 A) (h1 : _37165 = (term2002 _90715 A)) : (term2216 _90715 _90724 A B u f g _37164 _37163) = (term2250 _90715 _90724 A B u f g _37164 _37165 _37163).
Proof. exact (MK_COMB (@lem3510684 A B _37163 u f g) (@lem3510605 _90715 _90724 A B _37164 _37163 _37165 h1)). Qed.
Lemma lem3510686 {_90715 _90724 A B : Type'} (f : A -> B) (g : type686 A) (_37164 : type627 _90715 _90724) (_37163 : type627 A B) (_37165 : type627 _90715 A) (h1 : _37165 = (term2002 _90715 A)) : (term2217 _90715 _90724 A B f g _37164 _37163) = (term2251 _90715 _90724 A B f g _37164 _37165 _37163).
Proof. exact (fun_ext (fun u : A -> Prop => @lem3510685 _90715 _90724 A B u f g _37164 _37163 _37165 h1)). Qed.
Lemma lem3510687 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem3510688 {_90715 _90724 A B : Type'} (f : A -> B) (g : type686 A) (_37164 : type627 _90715 _90724) (_37163 : type627 A B) (_37165 : type627 _90715 A) (h1 : _37165 = (term2002 _90715 A)) : (term2218 _90715 _90724 A B f g _37164 _37163) = (term2252 _90715 _90724 A B f g _37164 _37165 _37163).
Proof. exact (MK_COMB (@lem3510687 A) (@lem3510686 _90715 _90724 A B f g _37164 _37163 _37165 h1)). Qed.
Lemma lem3510689 {_90715 _90724 A B : Type'} (g : type686 A) (_37164 : type627 _90715 _90724) (_37163 : type627 A B) (_37165 : type627 _90715 A) (h1 : _37165 = (term2002 _90715 A)) : (term2219 _90715 _90724 A B g _37164 _37163) = (term2253 _90715 _90724 A B g _37164 _37165 _37163).
Proof. exact (fun_ext (fun f : A -> B => @lem3510688 _90715 _90724 A B f g _37164 _37163 _37165 h1)). Qed.
Lemma lem3510690 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem3510691 {_90715 _90724 A B : Type'} (g : type686 A) (_37164 : type627 _90715 _90724) (_37163 : type627 A B) (_37165 : type627 _90715 A) (h1 : _37165 = (term2002 _90715 A)) : (term2220 _90715 _90724 A B g _37164 _37163) = (term2254 _90715 _90724 A B g _37164 _37165 _37163).
Proof. exact (MK_COMB (@lem3510690 A B) (@lem3510689 _90715 _90724 A B g _37164 _37163 _37165 h1)). Qed.
Lemma lem3510692 {_90715 _90724 A B : Type'} (_37164 : type627 _90715 _90724) (_37163 : type627 A B) (_37165 : type627 _90715 A) (h1 : _37165 = (term2002 _90715 A)) : (term2221 _90715 _90724 A B _37164 _37163) = (term2255 _90715 _90724 A B _37164 _37165 _37163).
Proof. exact (fun_ext (fun g : type686 A => @lem3510691 _90715 _90724 A B g _37164 _37163 _37165 h1)). Qed.
Lemma lem3510693 {A : Type'} : (@all ((A -> Prop) -> Prop)) = (@all ((A -> Prop) -> Prop)).
Proof. exact (eq_refl (@all ((A -> Prop) -> Prop))). Qed.
Lemma lem3510694 {_90715 _90724 A B : Type'} (_37164 : type627 _90715 _90724) (_37163 : type627 A B) (_37165 : type627 _90715 A) (h1 : _37165 = (term2002 _90715 A)) : (term2222 _90715 _90724 A B _37164 _37163) = (term2256 _90715 _90724 A B _37164 _37165 _37163).
Proof. exact (MK_COMB (@lem3510693 A) (@lem3510692 _90715 _90724 A B _37164 _37163 _37165 h1)). Qed.
Lemma lem3510719 {A B : Type'} (GEN_PVAR_85 : A) (u : A -> Prop) (f : A -> B) (t : A -> Prop) (x : A) : (term61 A B GEN_PVAR_85 u f t x) = (term61 A B GEN_PVAR_85 u f t x).
Proof. exact (eq_refl (term61 A B GEN_PVAR_85 u f t x)). Qed.
Lemma lem3510720 {A B : Type'} (GEN_PVAR_85 : A) (u : A -> Prop) (f : A -> B) (t : A -> Prop) : (term63 A B GEN_PVAR_85 u f t) = (term63 A B GEN_PVAR_85 u f t).
Proof. exact (fun_ext (fun x : A => @lem3510719 A B GEN_PVAR_85 u f t x)). Qed.
Lemma lem3510721 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem3510722 {A B : Type'} (GEN_PVAR_85 : A) (u : A -> Prop) (f : A -> B) (t : A -> Prop) : (term65 A B GEN_PVAR_85 u f t) = (term65 A B GEN_PVAR_85 u f t).
Proof. exact (MK_COMB (@lem3510721 A) (@lem3510720 A B GEN_PVAR_85 u f t)). Qed.
Lemma lem3510733 {A B : Type'} (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) (t : A -> Prop) (GEN_PVAR_85 : A) : (term2201 A B _37163 u f t GEN_PVAR_85) = (term2201 A B _37163 u f t GEN_PVAR_85).
Proof. exact (eq_refl (term2201 A B _37163 u f t GEN_PVAR_85)). Qed.
Lemma lem3510734 {A B : Type'} (_37163 : type627 A B) (GEN_PVAR_85 : A) (u : A -> Prop) (f : A -> B) (t : A -> Prop) : ((_37163 u f t GEN_PVAR_85) = (term65 A B GEN_PVAR_85 u f t)) = ((_37163 u f t GEN_PVAR_85) = (term65 A B GEN_PVAR_85 u f t)).
Proof. exact (MK_COMB (@lem3510733 A B _37163 u f t GEN_PVAR_85) (@lem3510722 A B GEN_PVAR_85 u f t)). Qed.
Lemma lem3510735 {A B : Type'} (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) (t : A -> Prop) : (term2203 A B _37163 u f t) = (term2203 A B _37163 u f t).
Proof. exact (fun_ext (fun GEN_PVAR_85 : A => @lem3510734 A B _37163 GEN_PVAR_85 u f t)). Qed.
Lemma lem3510736 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem3510737 {A B : Type'} (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) (t : A -> Prop) : (term2204 A B _37163 u f t) = (term2204 A B _37163 u f t).
Proof. exact (MK_COMB (@lem3510736 A) (@lem3510735 A B _37163 u f t)). Qed.
Lemma lem3510738 {A B : Type'} (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) : (term2205 A B _37163 u f) = (term2205 A B _37163 u f).
Proof. exact (fun_ext (fun t : A -> Prop => @lem3510737 A B _37163 u f t)). Qed.
Lemma lem3510739 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem3510740 {A B : Type'} (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) : (term2206 A B _37163 u f) = (term2206 A B _37163 u f).
Proof. exact (MK_COMB (@lem3510739 A) (@lem3510738 A B _37163 u f)). Qed.
Lemma lem3510741 {A B : Type'} (_37163 : type627 A B) (u : A -> Prop) : (term2207 A B _37163 u) = (term2207 A B _37163 u).
Proof. exact (fun_ext (fun f : A -> B => @lem3510740 A B _37163 u f)). Qed.
Lemma lem3510742 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem3510743 {A B : Type'} (_37163 : type627 A B) (u : A -> Prop) : (term2208 A B _37163 u) = (term2208 A B _37163 u).
Proof. exact (MK_COMB (@lem3510742 A B) (@lem3510741 A B _37163 u)). Qed.
Lemma lem3510744 {A B : Type'} (_37163 : type627 A B) : (term2209 A B _37163) = (term2209 A B _37163).
Proof. exact (fun_ext (fun u : A -> Prop => @lem3510743 A B _37163 u)). Qed.
Lemma lem3510745 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem3510746 {A B : Type'} (_37163 : type627 A B) : (term2210 A B _37163) = (term2210 A B _37163).
Proof. exact (MK_COMB (@lem3510745 A) (@lem3510744 A B _37163)). Qed.
Lemma lem3510747 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem3510748 {A B : Type'} (_37163 : type627 A B) : (term2211 A B _37163) = (term2211 A B _37163).
Proof. exact (MK_COMB (@lem3510747) (@lem3510746 A B _37163)). Qed.
Lemma lem3510749 {_90715 _90724 A B : Type'} (_37164 : type627 _90715 _90724) (_37163 : type627 A B) (_37165 : type627 _90715 A) (h1 : _37165 = (term2002 _90715 A)) : (term2223 _90715 _90724 A B _37164 _37163) = (term2257 _90715 _90724 A B _37164 _37165 _37163).
Proof. exact (MK_COMB (@lem3510748 A B _37163) (@lem3510694 _90715 _90724 A B _37164 _37163 _37165 h1)). Qed.
Lemma lem3510750 {_90715 _90724 A B : Type'} (_37164 : type627 _90715 _90724) (_37165 : type627 _90715 A) (h1 : _37165 = (term2002 _90715 A)) : (term2224 _90715 _90724 A B _37164) = (term2258 _90715 _90724 A B _37164 _37165).
Proof. exact (fun_ext (fun _37163 : type627 A B => @lem3510749 _90715 _90724 A B _37164 _37163 _37165 h1)). Qed.
Lemma lem3510751 {A B : Type'} : (@all ((A -> Prop) -> (A -> B) -> (A -> Prop) -> A -> Prop)) = (@all ((A -> Prop) -> (A -> B) -> (A -> Prop) -> A -> Prop)).
Proof. exact (eq_refl (@all ((A -> Prop) -> (A -> B) -> (A -> Prop) -> A -> Prop))). Qed.
Lemma lem3510752 {_90715 _90724 A B : Type'} (_37164 : type627 _90715 _90724) (_37165 : type627 _90715 A) (h1 : _37165 = (term2002 _90715 A)) : (term2225 _90715 _90724 A B _37164) = (term2259 _90715 _90724 A B _37164 _37165).
Proof. exact (MK_COMB (@lem3510751 A B) (@lem3510750 _90715 _90724 A B _37164 _37165 h1)). Qed.
Lemma lem3510777 {_90715 _90724 : Type'} (GEN_PVAR_84 : _90715) (u : _90715 -> Prop) (f : _90715 -> _90724) (t : _90715 -> Prop) (x : _90715) : (term61 _90715 _90724 GEN_PVAR_84 u f t x) = (term61 _90715 _90724 GEN_PVAR_84 u f t x).
Proof. exact (eq_refl (term61 _90715 _90724 GEN_PVAR_84 u f t x)). Qed.
Lemma lem3510778 {_90715 _90724 : Type'} (GEN_PVAR_84 : _90715) (u : _90715 -> Prop) (f : _90715 -> _90724) (t : _90715 -> Prop) : (term63 _90715 _90724 GEN_PVAR_84 u f t) = (term63 _90715 _90724 GEN_PVAR_84 u f t).
Proof. exact (fun_ext (fun x : _90715 => @lem3510777 _90715 _90724 GEN_PVAR_84 u f t x)). Qed.
Lemma lem3510779 {_90715 : Type'} : (@ex _90715) = (@ex _90715).
Proof. exact (eq_refl (@ex _90715)). Qed.
Lemma lem3510780 {_90715 _90724 : Type'} (GEN_PVAR_84 : _90715) (u : _90715 -> Prop) (f : _90715 -> _90724) (t : _90715 -> Prop) : (term65 _90715 _90724 GEN_PVAR_84 u f t) = (term65 _90715 _90724 GEN_PVAR_84 u f t).
Proof. exact (MK_COMB (@lem3510779 _90715) (@lem3510778 _90715 _90724 GEN_PVAR_84 u f t)). Qed.
Lemma lem3510791 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) (u : _90715 -> Prop) (f : _90715 -> _90724) (t : _90715 -> Prop) (GEN_PVAR_84 : _90715) : (term2201 _90715 _90724 _37164 u f t GEN_PVAR_84) = (term2201 _90715 _90724 _37164 u f t GEN_PVAR_84).
Proof. exact (eq_refl (term2201 _90715 _90724 _37164 u f t GEN_PVAR_84)). Qed.
Lemma lem3510792 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) (GEN_PVAR_84 : _90715) (u : _90715 -> Prop) (f : _90715 -> _90724) (t : _90715 -> Prop) : ((_37164 u f t GEN_PVAR_84) = (term65 _90715 _90724 GEN_PVAR_84 u f t)) = ((_37164 u f t GEN_PVAR_84) = (term65 _90715 _90724 GEN_PVAR_84 u f t)).
Proof. exact (MK_COMB (@lem3510791 _90715 _90724 _37164 u f t GEN_PVAR_84) (@lem3510780 _90715 _90724 GEN_PVAR_84 u f t)). Qed.
Lemma lem3510793 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) (u : _90715 -> Prop) (f : _90715 -> _90724) (t : _90715 -> Prop) : (term2203 _90715 _90724 _37164 u f t) = (term2203 _90715 _90724 _37164 u f t).
Proof. exact (fun_ext (fun GEN_PVAR_84 : _90715 => @lem3510792 _90715 _90724 _37164 GEN_PVAR_84 u f t)). Qed.
Lemma lem3510794 {_90715 : Type'} : (@all _90715) = (@all _90715).
Proof. exact (eq_refl (@all _90715)). Qed.
Lemma lem3510795 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) (u : _90715 -> Prop) (f : _90715 -> _90724) (t : _90715 -> Prop) : (term2204 _90715 _90724 _37164 u f t) = (term2204 _90715 _90724 _37164 u f t).
Proof. exact (MK_COMB (@lem3510794 _90715) (@lem3510793 _90715 _90724 _37164 u f t)). Qed.
Lemma lem3510796 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) (u : _90715 -> Prop) (f : _90715 -> _90724) : (term2205 _90715 _90724 _37164 u f) = (term2205 _90715 _90724 _37164 u f).
Proof. exact (fun_ext (fun t : _90715 -> Prop => @lem3510795 _90715 _90724 _37164 u f t)). Qed.
Lemma lem3510797 {_90715 : Type'} : (@all (_90715 -> Prop)) = (@all (_90715 -> Prop)).
Proof. exact (eq_refl (@all (_90715 -> Prop))). Qed.
Lemma lem3510798 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) (u : _90715 -> Prop) (f : _90715 -> _90724) : (term2206 _90715 _90724 _37164 u f) = (term2206 _90715 _90724 _37164 u f).
Proof. exact (MK_COMB (@lem3510797 _90715) (@lem3510796 _90715 _90724 _37164 u f)). Qed.
Lemma lem3510799 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) (u : _90715 -> Prop) : (term2207 _90715 _90724 _37164 u) = (term2207 _90715 _90724 _37164 u).
Proof. exact (fun_ext (fun f : _90715 -> _90724 => @lem3510798 _90715 _90724 _37164 u f)). Qed.
Lemma lem3510800 {_90715 _90724 : Type'} : (@all (_90715 -> _90724)) = (@all (_90715 -> _90724)).
Proof. exact (eq_refl (@all (_90715 -> _90724))). Qed.
Lemma lem3510801 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) (u : _90715 -> Prop) : (term2208 _90715 _90724 _37164 u) = (term2208 _90715 _90724 _37164 u).
Proof. exact (MK_COMB (@lem3510800 _90715 _90724) (@lem3510799 _90715 _90724 _37164 u)). Qed.
Lemma lem3510802 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) : (term2209 _90715 _90724 _37164) = (term2209 _90715 _90724 _37164).
Proof. exact (fun_ext (fun u : _90715 -> Prop => @lem3510801 _90715 _90724 _37164 u)). Qed.
Lemma lem3510803 {_90715 : Type'} : (@all (_90715 -> Prop)) = (@all (_90715 -> Prop)).
Proof. exact (eq_refl (@all (_90715 -> Prop))). Qed.
Lemma lem3510804 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) : (term2210 _90715 _90724 _37164) = (term2210 _90715 _90724 _37164).
Proof. exact (MK_COMB (@lem3510803 _90715) (@lem3510802 _90715 _90724 _37164)). Qed.
Lemma lem3510805 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem3510806 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) : (term2211 _90715 _90724 _37164) = (term2211 _90715 _90724 _37164).
Proof. exact (MK_COMB (@lem3510805) (@lem3510804 _90715 _90724 _37164)). Qed.
Lemma lem3510807 {_90715 _90724 A B : Type'} (_37164 : type627 _90715 _90724) (_37165 : type627 _90715 A) (h1 : _37165 = (term2002 _90715 A)) : (term2245 _90715 _90724 A B _37164) = (term2260 _90715 _90724 A B _37164 _37165).
Proof. exact (MK_COMB (@lem3510806 _90715 _90724 _37164) (@lem3510752 _90715 _90724 A B _37164 _37165 h1)). Qed.
Lemma lem3510808 {_90715 _90724 A B : Type'} (_37165 : type627 _90715 A) (h1 : _37165 = (term2002 _90715 A)) : (term2246 _90715 _90724 A B) = (term2261 _90715 _90724 A B _37165).
Proof. exact (fun_ext (fun _37164 : type627 _90715 _90724 => @lem3510807 _90715 _90724 A B _37164 _37165 h1)). Qed.
Lemma lem3510809 {_90715 _90724 : Type'} : (@all ((_90715 -> Prop) -> (_90715 -> _90724) -> (_90715 -> Prop) -> _90715 -> Prop)) = (@all ((_90715 -> Prop) -> (_90715 -> _90724) -> (_90715 -> Prop) -> _90715 -> Prop)).
Proof. exact (eq_refl (@all ((_90715 -> Prop) -> (_90715 -> _90724) -> (_90715 -> Prop) -> _90715 -> Prop))). Qed.
Lemma lem3510810 {_90715 _90724 A B : Type'} (_37165 : type627 _90715 A) (h1 : _37165 = (term2002 _90715 A)) : (term2247 _90715 _90724 A B) = (term2262 _90715 _90724 A B _37165).
Proof. exact (MK_COMB (@lem3510809 _90715 _90724) (@lem3510808 _90715 _90724 A B _37165 h1)). Qed.
Lemma lem3510811 {_90715 _90724 A B : Type'} (_37165 : type627 _90715 A) : term2263 _90715 _90724 A B _37165.
Proof. exact (fun h0 : _37165 = (term2002 _90715 A) => @lem3510810 _90715 _90724 A B _37165 h0). Qed.
Lemma lem3510812 {_90715 _90724 A B : Type'} : term2264 _90715 _90724 A B.
Proof. exact (fun _37165 : type627 _90715 A => @lem3510811 _90715 _90724 A B _37165). Qed.
Lemma lem3510814 {_3603 : Type'} (P : Prop) (c : _3603) (Q : _3603 -> Prop) : term2146 _3603 P c Q.
Proof. exact (EQ_MP (@lem20230 _3603 P c Q) (@lem0)). Qed.
Lemma lem3510815 {_90715 A : Type'} (P : Prop) (c : type627 _90715 A) (Q : type132 _90715 A) : term2147 _90715 A P c Q.
Proof. exact (@lem3510814 (type627 _90715 A) P c Q). Qed.
Lemma lem3510816 {_90715 _90724 A B : Type'} : term2265 _90715 _90724 A B.
Proof. exact (@lem3510815 _90715 A (term2247 _90715 _90724 A B) (term2002 _90715 A) (term2266 _90715 _90724 A B)). Qed.
Lemma lem3510817 {_90715 _90724 A B : Type'} (_37165 : type627 _90715 A) : (term2267 _90715 _90724 A B _37165) = (term2262 _90715 _90724 A B _37165).
Proof. exact (eq_refl (term2267 _90715 _90724 A B _37165)). Qed.
Lemma lem3510818 {_90715 _90724 A B : Type'} : (term2268 _90715 _90724 A B) = (term2268 _90715 _90724 A B).
Proof. exact (eq_refl (term2268 _90715 _90724 A B)). Qed.
Lemma lem3510819 {_90715 _90724 A B : Type'} (_37165 : type627 _90715 A) : ((term2247 _90715 _90724 A B) = (term2267 _90715 _90724 A B _37165)) = ((term2247 _90715 _90724 A B) = (term2262 _90715 _90724 A B _37165)).
Proof. exact (MK_COMB (@lem3510818 _90715 _90724 A B) (@lem3510817 _90715 _90724 A B _37165)). Qed.
Lemma lem3510820 {_90715 A : Type'} (_37165 : type627 _90715 A) : (term2152 _90715 A _37165) = (term2152 _90715 A _37165).
Proof. exact (eq_refl (term2152 _90715 A _37165)). Qed.
Lemma lem3510821 {_90715 _90724 A B : Type'} (_37165 : type627 _90715 A) : (term2269 _90715 _90724 A B _37165) = (term2263 _90715 _90724 A B _37165).
Proof. exact (MK_COMB (@lem3510820 _90715 A _37165) (@lem3510819 _90715 _90724 A B _37165)). Qed.
Lemma lem3510822 {_90715 _90724 A B : Type'} : (term2270 _90715 _90724 A B) = (term2271 _90715 _90724 A B).
Proof. exact (fun_ext (fun _37165 : type627 _90715 A => @lem3510821 _90715 _90724 A B _37165)). Qed.
Lemma lem3510823 {_90715 A : Type'} : (@all ((_90715 -> Prop) -> (_90715 -> A) -> (_90715 -> Prop) -> _90715 -> Prop)) = (@all ((_90715 -> Prop) -> (_90715 -> A) -> (_90715 -> Prop) -> _90715 -> Prop)).
Proof. exact (eq_refl (@all ((_90715 -> Prop) -> (_90715 -> A) -> (_90715 -> Prop) -> _90715 -> Prop))). Qed.
Lemma lem3510824 {_90715 _90724 A B : Type'} : (term2272 _90715 _90724 A B) = (term2264 _90715 _90724 A B).
Proof. exact (MK_COMB (@lem3510823 _90715 A) (@lem3510822 _90715 _90724 A B)). Qed.
Lemma lem3510825 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem3510826 {_90715 _90724 A B : Type'} : (term2273 _90715 _90724 A B) = (term2274 _90715 _90724 A B).
Proof. exact (MK_COMB (@lem3510825) (@lem3510824 _90715 _90724 A B)). Qed.
Lemma lem3510827 {_90715 _90724 A B : Type'} (_37165 : type627 _90715 A) : (term2267 _90715 _90724 A B _37165) = (term2262 _90715 _90724 A B _37165).
Proof. exact (eq_refl (term2267 _90715 _90724 A B _37165)). Qed.
Lemma lem3510828 {_90715 A : Type'} (_37165 : type627 _90715 A) : (term2152 _90715 A _37165) = (term2152 _90715 A _37165).
Proof. exact (eq_refl (term2152 _90715 A _37165)). Qed.
Lemma lem3510829 {_90715 _90724 A B : Type'} (_37165 : type627 _90715 A) : (term2275 _90715 _90724 A B _37165) = (term2276 _90715 _90724 A B _37165).
Proof. exact (MK_COMB (@lem3510828 _90715 A _37165) (@lem3510827 _90715 _90724 A B _37165)). Qed.
Lemma lem3510830 {_90715 _90724 A B : Type'} : (term2277 _90715 _90724 A B) = (term2278 _90715 _90724 A B).
Proof. exact (fun_ext (fun _37165 : type627 _90715 A => @lem3510829 _90715 _90724 A B _37165)). Qed.
Lemma lem3510831 {_90715 A : Type'} : (@all ((_90715 -> Prop) -> (_90715 -> A) -> (_90715 -> Prop) -> _90715 -> Prop)) = (@all ((_90715 -> Prop) -> (_90715 -> A) -> (_90715 -> Prop) -> _90715 -> Prop)).
Proof. exact (eq_refl (@all ((_90715 -> Prop) -> (_90715 -> A) -> (_90715 -> Prop) -> _90715 -> Prop))). Qed.
Lemma lem3510832 {_90715 _90724 A B : Type'} : (term2279 _90715 _90724 A B) = (term2280 _90715 _90724 A B).
Proof. exact (MK_COMB (@lem3510831 _90715 A) (@lem3510830 _90715 _90724 A B)). Qed.
Lemma lem3510833 {_90715 _90724 A B : Type'} : (term2268 _90715 _90724 A B) = (term2268 _90715 _90724 A B).
Proof. exact (eq_refl (term2268 _90715 _90724 A B)). Qed.
Lemma lem3510834 {_90715 _90724 A B : Type'} : ((term2247 _90715 _90724 A B) = (term2279 _90715 _90724 A B)) = ((term2247 _90715 _90724 A B) = (term2280 _90715 _90724 A B)).
Proof. exact (MK_COMB (@lem3510833 _90715 _90724 A B) (@lem3510832 _90715 _90724 A B)). Qed.
Lemma lem3510835 {_90715 _90724 A B : Type'} : (term2265 _90715 _90724 A B) = (term2281 _90715 _90724 A B).
Proof. exact (MK_COMB (@lem3510826 _90715 _90724 A B) (@lem3510834 _90715 _90724 A B)). Qed.
Lemma lem3510836 {_90715 _90724 A B : Type'} : term2281 _90715 _90724 A B.
Proof. exact (EQ_MP (@lem3510835 _90715 _90724 A B) (@lem3510816 _90715 _90724 A B)). Qed.
Lemma lem3510837 {_90715 _90724 A B : Type'} : (term2247 _90715 _90724 A B) = (term2280 _90715 _90724 A B).
Proof. exact (@lem3510836 _90715 _90724 A B (@lem3510812 _90715 _90724 A B)). Qed.
Lemma lem3510839 {_3571 _3575 : Type'} (s : _3575 -> _3571) (t : _3575 -> _3571) : (s = (term2166 _3571 _3575 t)) = (term2167 _3571 _3575 s t).
Proof. exact (EQ_MP (@lem19792 _3571 _3575 s t) (@lem0)). Qed.
Lemma lem3510840 {_90715 A : Type'} (s : type627 _90715 A) (t : type627 _90715 A) : (s = (term2168 _90715 A t)) = (term2169 _90715 A s t).
Proof. exact (@lem3510839 (type527 _90715 A) (_90715 -> Prop) s t). Qed.
Lemma lem3510841 {_90715 A : Type'} (_37165 : type627 _90715 A) : (_37165 = (term2170 _90715 A)) = (term2171 _90715 A _37165).
Proof. exact (@lem3510840 _90715 A _37165 (term2002 _90715 A)). Qed.
Lemma lem3510842 {_90715 A : Type'} (u : _90715 -> Prop) : (term2003 _90715 A u) = (term2004 _90715 A u).
Proof. exact (eq_refl (term2003 _90715 A u)). Qed.
Lemma lem3510843 {_90715 A : Type'} : (term2170 _90715 A) = (term2002 _90715 A).
Proof. exact (fun_ext (fun u : _90715 -> Prop => @lem3510842 _90715 A u)). Qed.
Lemma lem3510844 {_90715 A : Type'} (_37165 : type627 _90715 A) : (@eq ((_90715 -> Prop) -> (_90715 -> A) -> (_90715 -> Prop) -> _90715 -> Prop) _37165) = (@eq ((_90715 -> Prop) -> (_90715 -> A) -> (_90715 -> Prop) -> _90715 -> Prop) _37165).
Proof. exact (eq_refl (@eq ((_90715 -> Prop) -> (_90715 -> A) -> (_90715 -> Prop) -> _90715 -> Prop) _37165)). Qed.
Lemma lem3510845 {_90715 A : Type'} (_37165 : type627 _90715 A) : (_37165 = (term2170 _90715 A)) = (_37165 = (term2002 _90715 A)).
Proof. exact (MK_COMB (@lem3510844 _90715 A _37165) (@lem3510843 _90715 A)). Qed.
Lemma lem3510846 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem3510847 {_90715 A : Type'} (_37165 : type627 _90715 A) : (term2172 _90715 A _37165) = (term2173 _90715 A _37165).
Proof. exact (MK_COMB (@lem3510846) (@lem3510845 _90715 A _37165)). Qed.
Lemma lem3510848 {_90715 A : Type'} (u : _90715 -> Prop) : (term2003 _90715 A u) = (term2004 _90715 A u).
Proof. exact (eq_refl (term2003 _90715 A u)). Qed.
Lemma lem3510849 {_90715 A : Type'} (_37165 : type627 _90715 A) (u : _90715 -> Prop) : (term2005 _90715 A _37165 u) = (term2005 _90715 A _37165 u).
Proof. exact (eq_refl (term2005 _90715 A _37165 u)). Qed.
Lemma lem3510850 {_90715 A : Type'} (_37165 : type627 _90715 A) (u : _90715 -> Prop) : ((_37165 u) = (term2003 _90715 A u)) = ((_37165 u) = (term2004 _90715 A u)).
Proof. exact (MK_COMB (@lem3510849 _90715 A _37165 u) (@lem3510848 _90715 A u)). Qed.
Lemma lem3510851 {_90715 A : Type'} (_37165 : type627 _90715 A) : (term2174 _90715 A _37165) = (term2175 _90715 A _37165).
Proof. exact (fun_ext (fun u : _90715 -> Prop => @lem3510850 _90715 A _37165 u)). Qed.
Lemma lem3510852 {_90715 : Type'} : (@all (_90715 -> Prop)) = (@all (_90715 -> Prop)).
Proof. exact (eq_refl (@all (_90715 -> Prop))). Qed.
Lemma lem3510853 {_90715 A : Type'} (_37165 : type627 _90715 A) : (term2171 _90715 A _37165) = (term2176 _90715 A _37165).
Proof. exact (MK_COMB (@lem3510852 _90715) (@lem3510851 _90715 A _37165)). Qed.
Lemma lem3510854 {_90715 A : Type'} (_37165 : type627 _90715 A) : ((_37165 = (term2170 _90715 A)) = (term2171 _90715 A _37165)) = ((_37165 = (term2002 _90715 A)) = (term2176 _90715 A _37165)).
Proof. exact (MK_COMB (@lem3510847 _90715 A _37165) (@lem3510853 _90715 A _37165)). Qed.
Lemma lem3510855 {_90715 A : Type'} (_37165 : type627 _90715 A) : (_37165 = (term2002 _90715 A)) = (term2176 _90715 A _37165).
Proof. exact (EQ_MP (@lem3510854 _90715 A _37165) (@lem3510841 _90715 A _37165)). Qed.
Lemma lem3510857 {_3571 _3575 : Type'} (s : _3575 -> _3571) (t : _3575 -> _3571) : (s = (term2166 _3571 _3575 t)) = (term2167 _3571 _3575 s t).
Proof. exact (EQ_MP (@lem19792 _3571 _3575 s t) (@lem0)). Qed.
Lemma lem3510858 {_90715 A : Type'} (s : type527 _90715 A) (t : type527 _90715 A) : (s = (term2177 _90715 A t)) = (term2178 _90715 A s t).
Proof. exact (@lem3510857 (type672 _90715) (_90715 -> A) s t). Qed.
Lemma lem3510859 {_90715 A : Type'} (_37165 : type627 _90715 A) (u : _90715 -> Prop) : ((_37165 u) = (term2179 _90715 A u)) = (term2180 _90715 A _37165 u).
Proof. exact (@lem3510858 _90715 A (_37165 u) (term2004 _90715 A u)). Qed.
Lemma lem3510860 {_90715 A : Type'} (u : _90715 -> Prop) (f : _90715 -> A) : (term2006 _90715 A u f) = (term2007 _90715 A u f).
Proof. exact (eq_refl (term2006 _90715 A u f)). Qed.
Lemma lem3510861 {_90715 A : Type'} (u : _90715 -> Prop) : (term2179 _90715 A u) = (term2004 _90715 A u).
Proof. exact (fun_ext (fun f : _90715 -> A => @lem3510860 _90715 A u f)). Qed.
Lemma lem3510862 {_90715 A : Type'} (_37165 : type627 _90715 A) (u : _90715 -> Prop) : (term2005 _90715 A _37165 u) = (term2005 _90715 A _37165 u).
Proof. exact (eq_refl (term2005 _90715 A _37165 u)). Qed.
Lemma lem3510863 {_90715 A : Type'} (_37165 : type627 _90715 A) (u : _90715 -> Prop) : ((_37165 u) = (term2179 _90715 A u)) = ((_37165 u) = (term2004 _90715 A u)).
Proof. exact (MK_COMB (@lem3510862 _90715 A _37165 u) (@lem3510861 _90715 A u)). Qed.
Lemma lem3510864 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem3510865 {_90715 A : Type'} (_37165 : type627 _90715 A) (u : _90715 -> Prop) : (term2181 _90715 A _37165 u) = (term2182 _90715 A _37165 u).
Proof. exact (MK_COMB (@lem3510864) (@lem3510863 _90715 A _37165 u)). Qed.
Lemma lem3510866 {_90715 A : Type'} (u : _90715 -> Prop) (f : _90715 -> A) : (term2006 _90715 A u f) = (term2007 _90715 A u f).
Proof. exact (eq_refl (term2006 _90715 A u f)). Qed.
Lemma lem3510867 {_90715 A : Type'} (_37165 : type627 _90715 A) (u : _90715 -> Prop) (f : _90715 -> A) : (term2008 _90715 A _37165 u f) = (term2008 _90715 A _37165 u f).
Proof. exact (eq_refl (term2008 _90715 A _37165 u f)). Qed.
Lemma lem3510868 {_90715 A : Type'} (_37165 : type627 _90715 A) (u : _90715 -> Prop) (f : _90715 -> A) : ((_37165 u f) = (term2006 _90715 A u f)) = ((_37165 u f) = (term2007 _90715 A u f)).
Proof. exact (MK_COMB (@lem3510867 _90715 A _37165 u f) (@lem3510866 _90715 A u f)). Qed.
Lemma lem3510869 {_90715 A : Type'} (_37165 : type627 _90715 A) (u : _90715 -> Prop) : (term2183 _90715 A _37165 u) = (term2184 _90715 A _37165 u).
Proof. exact (fun_ext (fun f : _90715 -> A => @lem3510868 _90715 A _37165 u f)). Qed.
Lemma lem3510870 {_90715 A : Type'} : (@all (_90715 -> A)) = (@all (_90715 -> A)).
Proof. exact (eq_refl (@all (_90715 -> A))). Qed.
Lemma lem3510871 {_90715 A : Type'} (_37165 : type627 _90715 A) (u : _90715 -> Prop) : (term2180 _90715 A _37165 u) = (term2185 _90715 A _37165 u).
Proof. exact (MK_COMB (@lem3510870 _90715 A) (@lem3510869 _90715 A _37165 u)). Qed.
Lemma lem3510872 {_90715 A : Type'} (_37165 : type627 _90715 A) (u : _90715 -> Prop) : (((_37165 u) = (term2179 _90715 A u)) = (term2180 _90715 A _37165 u)) = (((_37165 u) = (term2004 _90715 A u)) = (term2185 _90715 A _37165 u)).
Proof. exact (MK_COMB (@lem3510865 _90715 A _37165 u) (@lem3510871 _90715 A _37165 u)). Qed.
Lemma lem3510873 {_90715 A : Type'} (_37165 : type627 _90715 A) (u : _90715 -> Prop) : ((_37165 u) = (term2004 _90715 A u)) = (term2185 _90715 A _37165 u).
Proof. exact (EQ_MP (@lem3510872 _90715 A _37165 u) (@lem3510859 _90715 A _37165 u)). Qed.
Lemma lem3510875 {_3571 _3575 : Type'} (s : _3575 -> _3571) (t : _3575 -> _3571) : (s = (term2166 _3571 _3575 t)) = (term2167 _3571 _3575 s t).
Proof. exact (EQ_MP (@lem19792 _3571 _3575 s t) (@lem0)). Qed.
Lemma lem3510876 {_90715 : Type'} (s : type672 _90715) (t : type672 _90715) : (s = (term2186 _90715 t)) = (term2187 _90715 s t).
Proof. exact (@lem3510875 (_90715 -> Prop) (_90715 -> Prop) s t). Qed.
Lemma lem3510877 {_90715 A : Type'} (_37165 : type627 _90715 A) (u : _90715 -> Prop) (f : _90715 -> A) : ((_37165 u f) = (term2188 _90715 A u f)) = (term2189 _90715 A _37165 u f).
Proof. exact (@lem3510876 _90715 (_37165 u f) (term2007 _90715 A u f)). Qed.
Lemma lem3510878 {_90715 A : Type'} (u : _90715 -> Prop) (f : _90715 -> A) (t : _90715 -> Prop) : (term2009 _90715 A u f t) = (term67 _90715 A u f t).
Proof. exact (eq_refl (term2009 _90715 A u f t)). Qed.
Lemma lem3510879 {_90715 A : Type'} (u : _90715 -> Prop) (f : _90715 -> A) : (term2188 _90715 A u f) = (term2007 _90715 A u f).
Proof. exact (fun_ext (fun t : _90715 -> Prop => @lem3510878 _90715 A u f t)). Qed.
Lemma lem3510880 {_90715 A : Type'} (_37165 : type627 _90715 A) (u : _90715 -> Prop) (f : _90715 -> A) : (term2008 _90715 A _37165 u f) = (term2008 _90715 A _37165 u f).
Proof. exact (eq_refl (term2008 _90715 A _37165 u f)). Qed.
Lemma lem3510881 {_90715 A : Type'} (_37165 : type627 _90715 A) (u : _90715 -> Prop) (f : _90715 -> A) : ((_37165 u f) = (term2188 _90715 A u f)) = ((_37165 u f) = (term2007 _90715 A u f)).
Proof. exact (MK_COMB (@lem3510880 _90715 A _37165 u f) (@lem3510879 _90715 A u f)). Qed.
Lemma lem3510882 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem3510883 {_90715 A : Type'} (_37165 : type627 _90715 A) (u : _90715 -> Prop) (f : _90715 -> A) : (term2190 _90715 A _37165 u f) = (term2191 _90715 A _37165 u f).
Proof. exact (MK_COMB (@lem3510882) (@lem3510881 _90715 A _37165 u f)). Qed.
Lemma lem3510884 {_90715 A : Type'} (u : _90715 -> Prop) (f : _90715 -> A) (t : _90715 -> Prop) : (term2009 _90715 A u f t) = (term67 _90715 A u f t).
Proof. exact (eq_refl (term2009 _90715 A u f t)). Qed.
Lemma lem3510885 {_90715 A : Type'} (_37165 : type627 _90715 A) (u : _90715 -> Prop) (f : _90715 -> A) (t : _90715 -> Prop) : (term2010 _90715 A _37165 u f t) = (term2010 _90715 A _37165 u f t).
Proof. exact (eq_refl (term2010 _90715 A _37165 u f t)). Qed.
Lemma lem3510886 {_90715 A : Type'} (_37165 : type627 _90715 A) (u : _90715 -> Prop) (f : _90715 -> A) (t : _90715 -> Prop) : ((_37165 u f t) = (term2009 _90715 A u f t)) = ((_37165 u f t) = (term67 _90715 A u f t)).
Proof. exact (MK_COMB (@lem3510885 _90715 A _37165 u f t) (@lem3510884 _90715 A u f t)). Qed.
Lemma lem3510887 {_90715 A : Type'} (_37165 : type627 _90715 A) (u : _90715 -> Prop) (f : _90715 -> A) : (term2192 _90715 A _37165 u f) = (term2193 _90715 A _37165 u f).
Proof. exact (fun_ext (fun t : _90715 -> Prop => @lem3510886 _90715 A _37165 u f t)). Qed.
Lemma lem3510888 {_90715 : Type'} : (@all (_90715 -> Prop)) = (@all (_90715 -> Prop)).
Proof. exact (eq_refl (@all (_90715 -> Prop))). Qed.
Lemma lem3510889 {_90715 A : Type'} (_37165 : type627 _90715 A) (u : _90715 -> Prop) (f : _90715 -> A) : (term2189 _90715 A _37165 u f) = (term2194 _90715 A _37165 u f).
Proof. exact (MK_COMB (@lem3510888 _90715) (@lem3510887 _90715 A _37165 u f)). Qed.
Lemma lem3510890 {_90715 A : Type'} (_37165 : type627 _90715 A) (u : _90715 -> Prop) (f : _90715 -> A) : (((_37165 u f) = (term2188 _90715 A u f)) = (term2189 _90715 A _37165 u f)) = (((_37165 u f) = (term2007 _90715 A u f)) = (term2194 _90715 A _37165 u f)).
Proof. exact (MK_COMB (@lem3510883 _90715 A _37165 u f) (@lem3510889 _90715 A _37165 u f)). Qed.
Lemma lem3510891 {_90715 A : Type'} (_37165 : type627 _90715 A) (u : _90715 -> Prop) (f : _90715 -> A) : ((_37165 u f) = (term2007 _90715 A u f)) = (term2194 _90715 A _37165 u f).
Proof. exact (EQ_MP (@lem3510890 _90715 A _37165 u f) (@lem3510877 _90715 A _37165 u f)). Qed.
Lemma lem3510893 {_3571 _3575 : Type'} (s : _3575 -> _3571) (t : _3575 -> _3571) : (s = (term2166 _3571 _3575 t)) = (term2167 _3571 _3575 s t).
Proof. exact (EQ_MP (@lem19792 _3571 _3575 s t) (@lem0)). Qed.
Lemma lem3510894 {_90715 : Type'} (s : _90715 -> Prop) (t : _90715 -> Prop) : (s = (term1665 _90715 t)) = (term2195 _90715 s t).
Proof. exact (@lem3510893 Prop _90715 s t). Qed.
Lemma lem3510895 {_90715 A : Type'} (_37165 : type627 _90715 A) (u : _90715 -> Prop) (f : _90715 -> A) (t : _90715 -> Prop) : ((_37165 u f t) = (term2196 _90715 A u f t)) = (term2197 _90715 A _37165 u f t).
Proof. exact (@lem3510894 _90715 (_37165 u f t) (term67 _90715 A u f t)). Qed.
Lemma lem3510896 {_90715 A : Type'} (GEN_PVAR_84 : _90715) (u : _90715 -> Prop) (f : _90715 -> A) (t : _90715 -> Prop) : (term2198 _90715 A u f t GEN_PVAR_84) = (term65 _90715 A GEN_PVAR_84 u f t).
Proof. exact (eq_refl (term2198 _90715 A u f t GEN_PVAR_84)). Qed.
Lemma lem3510897 {_90715 A : Type'} (u : _90715 -> Prop) (f : _90715 -> A) (t : _90715 -> Prop) : (term2196 _90715 A u f t) = (term67 _90715 A u f t).
Proof. exact (fun_ext (fun GEN_PVAR_84 : _90715 => @lem3510896 _90715 A GEN_PVAR_84 u f t)). Qed.
Lemma lem3510898 {_90715 A : Type'} (_37165 : type627 _90715 A) (u : _90715 -> Prop) (f : _90715 -> A) (t : _90715 -> Prop) : (term2010 _90715 A _37165 u f t) = (term2010 _90715 A _37165 u f t).
Proof. exact (eq_refl (term2010 _90715 A _37165 u f t)). Qed.
Lemma lem3510899 {_90715 A : Type'} (_37165 : type627 _90715 A) (u : _90715 -> Prop) (f : _90715 -> A) (t : _90715 -> Prop) : ((_37165 u f t) = (term2196 _90715 A u f t)) = ((_37165 u f t) = (term67 _90715 A u f t)).
Proof. exact (MK_COMB (@lem3510898 _90715 A _37165 u f t) (@lem3510897 _90715 A u f t)). Qed.
Lemma lem3510900 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem3510901 {_90715 A : Type'} (_37165 : type627 _90715 A) (u : _90715 -> Prop) (f : _90715 -> A) (t : _90715 -> Prop) : (term2199 _90715 A _37165 u f t) = (term2200 _90715 A _37165 u f t).
Proof. exact (MK_COMB (@lem3510900) (@lem3510899 _90715 A _37165 u f t)). Qed.
Lemma lem3510902 {_90715 A : Type'} (GEN_PVAR_84 : _90715) (u : _90715 -> Prop) (f : _90715 -> A) (t : _90715 -> Prop) : (term2198 _90715 A u f t GEN_PVAR_84) = (term65 _90715 A GEN_PVAR_84 u f t).
Proof. exact (eq_refl (term2198 _90715 A u f t GEN_PVAR_84)). Qed.
Lemma lem3510903 {_90715 A : Type'} (_37165 : type627 _90715 A) (u : _90715 -> Prop) (f : _90715 -> A) (t : _90715 -> Prop) (GEN_PVAR_84 : _90715) : (term2201 _90715 A _37165 u f t GEN_PVAR_84) = (term2201 _90715 A _37165 u f t GEN_PVAR_84).
Proof. exact (eq_refl (term2201 _90715 A _37165 u f t GEN_PVAR_84)). Qed.
Lemma lem3510904 {_90715 A : Type'} (_37165 : type627 _90715 A) (GEN_PVAR_84 : _90715) (u : _90715 -> Prop) (f : _90715 -> A) (t : _90715 -> Prop) : ((_37165 u f t GEN_PVAR_84) = (term2198 _90715 A u f t GEN_PVAR_84)) = ((_37165 u f t GEN_PVAR_84) = (term65 _90715 A GEN_PVAR_84 u f t)).
Proof. exact (MK_COMB (@lem3510903 _90715 A _37165 u f t GEN_PVAR_84) (@lem3510902 _90715 A GEN_PVAR_84 u f t)). Qed.
Lemma lem3510905 {_90715 A : Type'} (_37165 : type627 _90715 A) (u : _90715 -> Prop) (f : _90715 -> A) (t : _90715 -> Prop) : (term2202 _90715 A _37165 u f t) = (term2203 _90715 A _37165 u f t).
Proof. exact (fun_ext (fun GEN_PVAR_84 : _90715 => @lem3510904 _90715 A _37165 GEN_PVAR_84 u f t)). Qed.
Lemma lem3510906 {_90715 : Type'} : (@all _90715) = (@all _90715).
Proof. exact (eq_refl (@all _90715)). Qed.
Lemma lem3510907 {_90715 A : Type'} (_37165 : type627 _90715 A) (u : _90715 -> Prop) (f : _90715 -> A) (t : _90715 -> Prop) : (term2197 _90715 A _37165 u f t) = (term2204 _90715 A _37165 u f t).
Proof. exact (MK_COMB (@lem3510906 _90715) (@lem3510905 _90715 A _37165 u f t)). Qed.
Lemma lem3510908 {_90715 A : Type'} (_37165 : type627 _90715 A) (u : _90715 -> Prop) (f : _90715 -> A) (t : _90715 -> Prop) : (((_37165 u f t) = (term2196 _90715 A u f t)) = (term2197 _90715 A _37165 u f t)) = (((_37165 u f t) = (term67 _90715 A u f t)) = (term2204 _90715 A _37165 u f t)).
Proof. exact (MK_COMB (@lem3510901 _90715 A _37165 u f t) (@lem3510907 _90715 A _37165 u f t)). Qed.
Lemma lem3510909 {_90715 A : Type'} (_37165 : type627 _90715 A) (u : _90715 -> Prop) (f : _90715 -> A) (t : _90715 -> Prop) : ((_37165 u f t) = (term67 _90715 A u f t)) = (term2204 _90715 A _37165 u f t).
Proof. exact (EQ_MP (@lem3510908 _90715 A _37165 u f t) (@lem3510895 _90715 A _37165 u f t)). Qed.
Lemma lem3510910 {_90715 A : Type'} (_37165 : type627 _90715 A) (GEN_PVAR_84 : _90715) (u : _90715 -> Prop) (f : _90715 -> A) (t : _90715 -> Prop) : ((_37165 u f t GEN_PVAR_84) = (term65 _90715 A GEN_PVAR_84 u f t)) = ((_37165 u f t GEN_PVAR_84) = (term65 _90715 A GEN_PVAR_84 u f t)).
Proof. exact (eq_refl ((_37165 u f t GEN_PVAR_84) = (term65 _90715 A GEN_PVAR_84 u f t))). Qed.
Lemma lem3510911 {_90715 A : Type'} (_37165 : type627 _90715 A) (u : _90715 -> Prop) (f : _90715 -> A) (t : _90715 -> Prop) : (term2203 _90715 A _37165 u f t) = (term2203 _90715 A _37165 u f t).
Proof. exact (fun_ext (fun GEN_PVAR_84 : _90715 => @lem3510910 _90715 A _37165 GEN_PVAR_84 u f t)). Qed.
Lemma lem3510912 {_90715 : Type'} : (@all _90715) = (@all _90715).
Proof. exact (eq_refl (@all _90715)). Qed.
Lemma lem3510913 {_90715 A : Type'} (_37165 : type627 _90715 A) (u : _90715 -> Prop) (f : _90715 -> A) (t : _90715 -> Prop) : (term2204 _90715 A _37165 u f t) = (term2204 _90715 A _37165 u f t).
Proof. exact (MK_COMB (@lem3510912 _90715) (@lem3510911 _90715 A _37165 u f t)). Qed.
Lemma lem3510914 {_90715 A : Type'} (_37165 : type627 _90715 A) (u : _90715 -> Prop) (f : _90715 -> A) (t : _90715 -> Prop) : ((_37165 u f t) = (term67 _90715 A u f t)) = (term2204 _90715 A _37165 u f t).
Proof. exact (TRANS (@lem3510909 _90715 A _37165 u f t) (@lem3510913 _90715 A _37165 u f t)). Qed.
Lemma lem3510915 {_90715 A : Type'} (_37165 : type627 _90715 A) (u : _90715 -> Prop) (f : _90715 -> A) : (term2193 _90715 A _37165 u f) = (term2205 _90715 A _37165 u f).
Proof. exact (fun_ext (fun t : _90715 -> Prop => @lem3510914 _90715 A _37165 u f t)). Qed.
Lemma lem3510916 {_90715 : Type'} : (@all (_90715 -> Prop)) = (@all (_90715 -> Prop)).
Proof. exact (eq_refl (@all (_90715 -> Prop))). Qed.
Lemma lem3510917 {_90715 A : Type'} (_37165 : type627 _90715 A) (u : _90715 -> Prop) (f : _90715 -> A) : (term2194 _90715 A _37165 u f) = (term2206 _90715 A _37165 u f).
Proof. exact (MK_COMB (@lem3510916 _90715) (@lem3510915 _90715 A _37165 u f)). Qed.
Lemma lem3510918 {_90715 A : Type'} (_37165 : type627 _90715 A) (u : _90715 -> Prop) (f : _90715 -> A) : ((_37165 u f) = (term2007 _90715 A u f)) = (term2206 _90715 A _37165 u f).
Proof. exact (TRANS (@lem3510891 _90715 A _37165 u f) (@lem3510917 _90715 A _37165 u f)). Qed.
Lemma lem3510919 {_90715 A : Type'} (_37165 : type627 _90715 A) (u : _90715 -> Prop) : (term2184 _90715 A _37165 u) = (term2207 _90715 A _37165 u).
Proof. exact (fun_ext (fun f : _90715 -> A => @lem3510918 _90715 A _37165 u f)). Qed.
Lemma lem3510920 {_90715 A : Type'} : (@all (_90715 -> A)) = (@all (_90715 -> A)).
Proof. exact (eq_refl (@all (_90715 -> A))). Qed.
Lemma lem3510921 {_90715 A : Type'} (_37165 : type627 _90715 A) (u : _90715 -> Prop) : (term2185 _90715 A _37165 u) = (term2208 _90715 A _37165 u).
Proof. exact (MK_COMB (@lem3510920 _90715 A) (@lem3510919 _90715 A _37165 u)). Qed.
Lemma lem3510922 {_90715 A : Type'} (_37165 : type627 _90715 A) (u : _90715 -> Prop) : ((_37165 u) = (term2004 _90715 A u)) = (term2208 _90715 A _37165 u).
Proof. exact (TRANS (@lem3510873 _90715 A _37165 u) (@lem3510921 _90715 A _37165 u)). Qed.
Lemma lem3510923 {_90715 A : Type'} (_37165 : type627 _90715 A) : (term2175 _90715 A _37165) = (term2209 _90715 A _37165).
Proof. exact (fun_ext (fun u : _90715 -> Prop => @lem3510922 _90715 A _37165 u)). Qed.
Lemma lem3510924 {_90715 : Type'} : (@all (_90715 -> Prop)) = (@all (_90715 -> Prop)).
Proof. exact (eq_refl (@all (_90715 -> Prop))). Qed.
Lemma lem3510925 {_90715 A : Type'} (_37165 : type627 _90715 A) : (term2176 _90715 A _37165) = (term2210 _90715 A _37165).
Proof. exact (MK_COMB (@lem3510924 _90715) (@lem3510923 _90715 A _37165)). Qed.
Lemma lem3510926 {_90715 A : Type'} (_37165 : type627 _90715 A) : (_37165 = (term2002 _90715 A)) = (term2210 _90715 A _37165).
Proof. exact (TRANS (@lem3510855 _90715 A _37165) (@lem3510925 _90715 A _37165)). Qed.
Lemma lem3510927 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem3510928 {_90715 A : Type'} (_37165 : type627 _90715 A) : (term2152 _90715 A _37165) = (term2211 _90715 A _37165).
Proof. exact (MK_COMB (@lem3510927) (@lem3510926 _90715 A _37165)). Qed.
Lemma lem3510929 {_90715 _90724 A B : Type'} (_37165 : type627 _90715 A) : (term2262 _90715 _90724 A B _37165) = (term2262 _90715 _90724 A B _37165).
Proof. exact (eq_refl (term2262 _90715 _90724 A B _37165)). Qed.
Lemma lem3510930 {_90715 _90724 A B : Type'} (_37165 : type627 _90715 A) : (term2276 _90715 _90724 A B _37165) = (term2282 _90715 _90724 A B _37165).
Proof. exact (MK_COMB (@lem3510928 _90715 A _37165) (@lem3510929 _90715 _90724 A B _37165)). Qed.
Lemma lem3510931 {_90715 _90724 A B : Type'} : (term2278 _90715 _90724 A B) = (term2283 _90715 _90724 A B).
Proof. exact (fun_ext (fun _37165 : type627 _90715 A => @lem3510930 _90715 _90724 A B _37165)). Qed.
Lemma lem3510932 {_90715 A : Type'} : (@all ((_90715 -> Prop) -> (_90715 -> A) -> (_90715 -> Prop) -> _90715 -> Prop)) = (@all ((_90715 -> Prop) -> (_90715 -> A) -> (_90715 -> Prop) -> _90715 -> Prop)).
Proof. exact (eq_refl (@all ((_90715 -> Prop) -> (_90715 -> A) -> (_90715 -> Prop) -> _90715 -> Prop))). Qed.
Lemma lem3510933 {_90715 _90724 A B : Type'} : (term2280 _90715 _90724 A B) = (term2284 _90715 _90724 A B).
Proof. exact (MK_COMB (@lem3510932 _90715 A) (@lem3510931 _90715 _90724 A B)). Qed.
Lemma lem3510934 {_90715 _90724 A B : Type'} : (term2268 _90715 _90724 A B) = (term2268 _90715 _90724 A B).
Proof. exact (eq_refl (term2268 _90715 _90724 A B)). Qed.
Lemma lem3510935 {_90715 _90724 A B : Type'} : ((term2247 _90715 _90724 A B) = (term2280 _90715 _90724 A B)) = ((term2247 _90715 _90724 A B) = (term2284 _90715 _90724 A B)).
Proof. exact (MK_COMB (@lem3510934 _90715 _90724 A B) (@lem3510933 _90715 _90724 A B)). Qed.
Lemma lem3510936 {_90715 _90724 A B : Type'} : (term2247 _90715 _90724 A B) = (term2284 _90715 _90724 A B).
Proof. exact (EQ_MP (@lem3510935 _90715 _90724 A B) (@lem3510837 _90715 _90724 A B)). Qed.
Lemma lem3510937 {_90715 B : Type'} (_37166 : type627 _90715 B) (h1 : _37166 = (term2002 _90715 B)) : _37166 = (term2002 _90715 B).
Proof. exact (h1). Qed.
Lemma lem3510938 {_90715 : Type'} (u : _90715 -> Prop) : u = u.
Proof. exact (eq_refl u). Qed.
Lemma lem3510939 {_90715 B : Type'} (u : _90715 -> Prop) (_37166 : type627 _90715 B) (h1 : _37166 = (term2002 _90715 B)) : (_37166 u) = (term2003 _90715 B u).
Proof. exact (MK_COMB (@lem3510937 _90715 B _37166 h1) (@lem3510938 _90715 u)). Qed.
Lemma lem3510940 {_90715 B : Type'} (u : _90715 -> Prop) : (term2003 _90715 B u) = (term2004 _90715 B u).
Proof. exact (eq_refl (term2003 _90715 B u)). Qed.
Lemma lem3510941 {_90715 B : Type'} (_37166 : type627 _90715 B) (u : _90715 -> Prop) : (term2005 _90715 B _37166 u) = (term2005 _90715 B _37166 u).
Proof. exact (eq_refl (term2005 _90715 B _37166 u)). Qed.
Lemma lem3510942 {_90715 B : Type'} (_37166 : type627 _90715 B) (u : _90715 -> Prop) : ((_37166 u) = (term2003 _90715 B u)) = ((_37166 u) = (term2004 _90715 B u)).
Proof. exact (MK_COMB (@lem3510941 _90715 B _37166 u) (@lem3510940 _90715 B u)). Qed.
Lemma lem3510943 {_90715 B : Type'} (u : _90715 -> Prop) (_37166 : type627 _90715 B) (h1 : _37166 = (term2002 _90715 B)) : (_37166 u) = (term2004 _90715 B u).
Proof. exact (EQ_MP (@lem3510942 _90715 B _37166 u) (@lem3510939 _90715 B u _37166 h1)). Qed.
Lemma lem3510944 {_90715 B : Type'} (f : _90715 -> B) : f = f.
Proof. exact (eq_refl f). Qed.
Lemma lem3510945 {_90715 B : Type'} (u : _90715 -> Prop) (f : _90715 -> B) (_37166 : type627 _90715 B) (h1 : _37166 = (term2002 _90715 B)) : (_37166 u f) = (term2006 _90715 B u f).
Proof. exact (MK_COMB (@lem3510943 _90715 B u _37166 h1) (@lem3510944 _90715 B f)). Qed.
Lemma lem3510946 {_90715 B : Type'} (u : _90715 -> Prop) (f : _90715 -> B) : (term2006 _90715 B u f) = (term2007 _90715 B u f).
Proof. exact (eq_refl (term2006 _90715 B u f)). Qed.
Lemma lem3510947 {_90715 B : Type'} (_37166 : type627 _90715 B) (u : _90715 -> Prop) (f : _90715 -> B) : (term2008 _90715 B _37166 u f) = (term2008 _90715 B _37166 u f).
Proof. exact (eq_refl (term2008 _90715 B _37166 u f)). Qed.
Lemma lem3510948 {_90715 B : Type'} (_37166 : type627 _90715 B) (u : _90715 -> Prop) (f : _90715 -> B) : ((_37166 u f) = (term2006 _90715 B u f)) = ((_37166 u f) = (term2007 _90715 B u f)).
Proof. exact (MK_COMB (@lem3510947 _90715 B _37166 u f) (@lem3510946 _90715 B u f)). Qed.
Lemma lem3510949 {_90715 B : Type'} (u : _90715 -> Prop) (f : _90715 -> B) (_37166 : type627 _90715 B) (h1 : _37166 = (term2002 _90715 B)) : (_37166 u f) = (term2007 _90715 B u f).
Proof. exact (EQ_MP (@lem3510948 _90715 B _37166 u f) (@lem3510945 _90715 B u f _37166 h1)). Qed.
Lemma lem3510950 {_90715 : Type'} (t : _90715 -> Prop) : t = t.
Proof. exact (eq_refl t). Qed.
Lemma lem3510951 {_90715 B : Type'} (u : _90715 -> Prop) (f : _90715 -> B) (t : _90715 -> Prop) (_37166 : type627 _90715 B) (h1 : _37166 = (term2002 _90715 B)) : (_37166 u f t) = (term2009 _90715 B u f t).
Proof. exact (MK_COMB (@lem3510949 _90715 B u f _37166 h1) (@lem3510950 _90715 t)). Qed.
Lemma lem3510952 {_90715 B : Type'} (u : _90715 -> Prop) (f : _90715 -> B) (t : _90715 -> Prop) : (term2009 _90715 B u f t) = (term67 _90715 B u f t).
Proof. exact (eq_refl (term2009 _90715 B u f t)). Qed.
Lemma lem3510953 {_90715 B : Type'} (_37166 : type627 _90715 B) (u : _90715 -> Prop) (f : _90715 -> B) (t : _90715 -> Prop) : (term2010 _90715 B _37166 u f t) = (term2010 _90715 B _37166 u f t).
Proof. exact (eq_refl (term2010 _90715 B _37166 u f t)). Qed.
Lemma lem3510954 {_90715 B : Type'} (_37166 : type627 _90715 B) (u : _90715 -> Prop) (f : _90715 -> B) (t : _90715 -> Prop) : ((_37166 u f t) = (term2009 _90715 B u f t)) = ((_37166 u f t) = (term67 _90715 B u f t)).
Proof. exact (MK_COMB (@lem3510953 _90715 B _37166 u f t) (@lem3510952 _90715 B u f t)). Qed.
Lemma lem3510955 {_90715 B : Type'} (u : _90715 -> Prop) (f : _90715 -> B) (t : _90715 -> Prop) (_37166 : type627 _90715 B) (h1 : _37166 = (term2002 _90715 B)) : (_37166 u f t) = (term67 _90715 B u f t).
Proof. exact (EQ_MP (@lem3510954 _90715 B _37166 u f t) (@lem3510951 _90715 B u f t _37166 h1)). Qed.
Lemma lem3510975 {A B : Type'} (f : type678 A B) (g : type180 A) : ((term2011 A B f g) = (term2012 A B f g)) = ((term2011 A B f g) = (term2012 A B f g)).
Proof. exact (eq_refl ((term2011 A B f g) = (term2012 A B f g))). Qed.
Lemma lem3510976 {A : Type'} (t : type686 A) : t = t.
Proof. exact (eq_refl t). Qed.
Lemma lem3511004 {A B : Type'} (GEN_PVAR_84 : A -> Prop) (u : type686 A) (f : type678 A B) (t : type686 A) (x : A -> Prop) : (term2013 A B GEN_PVAR_84 u f t x) = (term2013 A B GEN_PVAR_84 u f t x).
Proof. exact (eq_refl (term2013 A B GEN_PVAR_84 u f t x)). Qed.
Lemma lem3511005 {A B : Type'} (GEN_PVAR_84 : A -> Prop) (u : type686 A) (f : type678 A B) (t : type686 A) : (term2014 A B GEN_PVAR_84 u f t) = (term2014 A B GEN_PVAR_84 u f t).
Proof. exact (fun_ext (fun x : A -> Prop => @lem3511004 A B GEN_PVAR_84 u f t x)). Qed.
Lemma lem3511006 {A : Type'} : (@ex (A -> Prop)) = (@ex (A -> Prop)).
Proof. exact (eq_refl (@ex (A -> Prop))). Qed.
Lemma lem3511007 {A B : Type'} (GEN_PVAR_84 : A -> Prop) (u : type686 A) (f : type678 A B) (t : type686 A) : (term2015 A B GEN_PVAR_84 u f t) = (term2015 A B GEN_PVAR_84 u f t).
Proof. exact (MK_COMB (@lem3511006 A) (@lem3511005 A B GEN_PVAR_84 u f t)). Qed.
Lemma lem3511008 {A B : Type'} (u : type686 A) (f : type678 A B) (t : type686 A) : (term2016 A B u f t) = (term2016 A B u f t).
Proof. exact (fun_ext (fun GEN_PVAR_84 : A -> Prop => @lem3511007 A B GEN_PVAR_84 u f t)). Qed.
Lemma lem3511009 {A : Type'} : (@GSPEC (A -> Prop)) = (@GSPEC (A -> Prop)).
Proof. exact (eq_refl (@GSPEC (A -> Prop))). Qed.
Lemma lem3511010 {A B : Type'} (u : type686 A) (f : type678 A B) (t : type686 A) : (term2017 A B u f t) = (term2017 A B u f t).
Proof. exact (MK_COMB (@lem3511009 A) (@lem3511008 A B u f t)). Qed.
Lemma lem3511011 {A : Type'} : (@SUBSET (A -> Prop)) = (@SUBSET (A -> Prop)).
Proof. exact (eq_refl (@SUBSET (A -> Prop))). Qed.
Lemma lem3511012 {A B : Type'} (u : type686 A) (f : type678 A B) (t : type686 A) : (term2018 A B u f t) = (term2018 A B u f t).
Proof. exact (MK_COMB (@lem3511011 A) (@lem3511010 A B u f t)). Qed.
Lemma lem3511013 {A B : Type'} (u : type686 A) (f : type678 A B) (t : type686 A) : (term2019 A B u f t) = (term2019 A B u f t).
Proof. exact (MK_COMB (@lem3511012 A B u f t) (@lem3510976 A t)). Qed.
Lemma lem3511020 {A : Type'} (t : type686 A) (u : type686 A) : (term2020 A t u) = (term2020 A t u).
Proof. exact (eq_refl (term2020 A t u)). Qed.
Lemma lem3511021 {A B : Type'} (u : type686 A) (f : type678 A B) (t : type686 A) : (term2021 A B u f t) = (term2021 A B u f t).
Proof. exact (MK_COMB (@lem3511020 A t u) (@lem3511013 A B u f t)). Qed.
Lemma lem3511028 {A : Type'} (t : type686 A) (g : type180 A) : (term2022 A t g) = (term2022 A t g).
Proof. exact (eq_refl (term2022 A t g)). Qed.
Lemma lem3511029 {A B : Type'} (g : type180 A) (u : type686 A) (f : type678 A B) (t : type686 A) : (term2023 A B g u f t) = (term2023 A B g u f t).
Proof. exact (MK_COMB (@lem3511028 A t g) (@lem3511021 A B u f t)). Qed.
Lemma lem3511030 {A B : Type'} (g : type180 A) (u : type686 A) (f : type678 A B) : (term2024 A B g u f) = (term2024 A B g u f).
Proof. exact (fun_ext (fun t : type686 A => @lem3511029 A B g u f t)). Qed.
Lemma lem3511031 {A : Type'} : (@all ((A -> Prop) -> Prop)) = (@all ((A -> Prop) -> Prop)).
Proof. exact (eq_refl (@all ((A -> Prop) -> Prop))). Qed.
Lemma lem3511032 {A B : Type'} (g : type180 A) (u : type686 A) (f : type678 A B) : (term2025 A B g u f) = (term2025 A B g u f).
Proof. exact (MK_COMB (@lem3511031 A) (@lem3511030 A B g u f)). Qed.
Lemma lem3511041 {A : Type'} (g : type180 A) : (term2026 A g) = (term2026 A g).
Proof. exact (eq_refl (term2026 A g)). Qed.
Lemma lem3511042 {A B : Type'} (g : type180 A) (u : type686 A) (f : type678 A B) : (term2027 A B g u f) = (term2027 A B g u f).
Proof. exact (MK_COMB (@lem3511041 A g) (@lem3511032 A B g u f)). Qed.
Lemma lem3511043 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem3511044 {A B : Type'} (g : type180 A) (u : type686 A) (f : type678 A B) : (term2028 A B g u f) = (term2028 A B g u f).
Proof. exact (MK_COMB (@lem3511043) (@lem3511042 A B g u f)). Qed.
Lemma lem3511045 {A B : Type'} (u : type686 A) (f : type678 A B) (g : type180 A) : (term2029 A B u f g) = (term2029 A B u f g).
Proof. exact (MK_COMB (@lem3511044 A B g u f) (@lem3510975 A B f g)). Qed.
Lemma lem3511046 {A B : Type'} (u : type686 A) (f : type678 A B) : (term2030 A B u f) = (term2030 A B u f).
Proof. exact (fun_ext (fun g : type180 A => @lem3511045 A B u f g)). Qed.
Lemma lem3511047 {A : Type'} : (@all (((A -> Prop) -> Prop) -> Prop)) = (@all (((A -> Prop) -> Prop) -> Prop)).
Proof. exact (eq_refl (@all (((A -> Prop) -> Prop) -> Prop))). Qed.
Lemma lem3511048 {A B : Type'} (u : type686 A) (f : type678 A B) : (term2031 A B u f) = (term2031 A B u f).
Proof. exact (MK_COMB (@lem3511047 A) (@lem3511046 A B u f)). Qed.
Lemma lem3511049 {A B : Type'} (u : type686 A) : (term2032 A B u) = (term2032 A B u).
Proof. exact (fun_ext (fun f : type678 A B => @lem3511048 A B u f)). Qed.
Lemma lem3511050 {A B : Type'} : (@all ((A -> Prop) -> B -> Prop)) = (@all ((A -> Prop) -> B -> Prop)).
Proof. exact (eq_refl (@all ((A -> Prop) -> B -> Prop))). Qed.
Lemma lem3511051 {A B : Type'} (u : type686 A) : (term2033 A B u) = (term2033 A B u).
Proof. exact (MK_COMB (@lem3511050 A B) (@lem3511049 A B u)). Qed.
Lemma lem3511052 {A B : Type'} : (term2034 A B) = (term2034 A B).
Proof. exact (fun_ext (fun u : type686 A => @lem3511051 A B u)). Qed.
Lemma lem3511053 {A : Type'} : (@all ((A -> Prop) -> Prop)) = (@all ((A -> Prop) -> Prop)).
Proof. exact (eq_refl (@all ((A -> Prop) -> Prop))). Qed.
Lemma lem3511054 {A B : Type'} : (term1961 A B) = (term1961 A B).
Proof. exact (MK_COMB (@lem3511053 A) (@lem3511052 A B)). Qed.
Lemma lem3511055 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem3511056 {A B : Type'} : (term1967 A B) = (term1967 A B).
Proof. exact (MK_COMB (@lem3511055) (@lem3511054 A B)). Qed.
Lemma lem3511075 {_90724 A : Type'} (f : type862 _90724 A) (g : type180 A) : ((term2035 _90724 A f g) = (term2036 _90724 A f g)) = ((term2035 _90724 A f g) = (term2036 _90724 A f g)).
Proof. exact (eq_refl ((term2035 _90724 A f g) = (term2036 _90724 A f g))). Qed.
Lemma lem3511076 {A : Type'} (t : type686 A) : t = t.
Proof. exact (eq_refl t). Qed.
Lemma lem3511104 {_90724 A : Type'} (GEN_PVAR_84 : A -> Prop) (u : type686 A) (f : type862 _90724 A) (t : type686 A) (x : A -> Prop) : (term2037 _90724 A GEN_PVAR_84 u f t x) = (term2037 _90724 A GEN_PVAR_84 u f t x).
Proof. exact (eq_refl (term2037 _90724 A GEN_PVAR_84 u f t x)). Qed.
Lemma lem3511105 {_90724 A : Type'} (GEN_PVAR_84 : A -> Prop) (u : type686 A) (f : type862 _90724 A) (t : type686 A) : (term2038 _90724 A GEN_PVAR_84 u f t) = (term2038 _90724 A GEN_PVAR_84 u f t).
Proof. exact (fun_ext (fun x : A -> Prop => @lem3511104 _90724 A GEN_PVAR_84 u f t x)). Qed.
Lemma lem3511106 {A : Type'} : (@ex (A -> Prop)) = (@ex (A -> Prop)).
Proof. exact (eq_refl (@ex (A -> Prop))). Qed.
Lemma lem3511107 {_90724 A : Type'} (GEN_PVAR_84 : A -> Prop) (u : type686 A) (f : type862 _90724 A) (t : type686 A) : (term2039 _90724 A GEN_PVAR_84 u f t) = (term2039 _90724 A GEN_PVAR_84 u f t).
Proof. exact (MK_COMB (@lem3511106 A) (@lem3511105 _90724 A GEN_PVAR_84 u f t)). Qed.
Lemma lem3511108 {_90724 A : Type'} (u : type686 A) (f : type862 _90724 A) (t : type686 A) : (term2040 _90724 A u f t) = (term2040 _90724 A u f t).
Proof. exact (fun_ext (fun GEN_PVAR_84 : A -> Prop => @lem3511107 _90724 A GEN_PVAR_84 u f t)). Qed.
Lemma lem3511109 {A : Type'} : (@GSPEC (A -> Prop)) = (@GSPEC (A -> Prop)).
Proof. exact (eq_refl (@GSPEC (A -> Prop))). Qed.
Lemma lem3511110 {_90724 A : Type'} (u : type686 A) (f : type862 _90724 A) (t : type686 A) : (term2041 _90724 A u f t) = (term2041 _90724 A u f t).
Proof. exact (MK_COMB (@lem3511109 A) (@lem3511108 _90724 A u f t)). Qed.
Lemma lem3511111 {A : Type'} : (@SUBSET (A -> Prop)) = (@SUBSET (A -> Prop)).
Proof. exact (eq_refl (@SUBSET (A -> Prop))). Qed.
Lemma lem3511112 {_90724 A : Type'} (u : type686 A) (f : type862 _90724 A) (t : type686 A) : (term2042 _90724 A u f t) = (term2042 _90724 A u f t).
Proof. exact (MK_COMB (@lem3511111 A) (@lem3511110 _90724 A u f t)). Qed.
Lemma lem3511113 {_90724 A : Type'} (u : type686 A) (f : type862 _90724 A) (t : type686 A) : (term2043 _90724 A u f t) = (term2043 _90724 A u f t).
Proof. exact (MK_COMB (@lem3511112 _90724 A u f t) (@lem3511076 A t)). Qed.
Lemma lem3511120 {A : Type'} (t : type686 A) (u : type686 A) : (term2020 A t u) = (term2020 A t u).
Proof. exact (eq_refl (term2020 A t u)). Qed.
Lemma lem3511121 {_90724 A : Type'} (u : type686 A) (f : type862 _90724 A) (t : type686 A) : (term2044 _90724 A u f t) = (term2044 _90724 A u f t).
Proof. exact (MK_COMB (@lem3511120 A t u) (@lem3511113 _90724 A u f t)). Qed.
Lemma lem3511128 {A : Type'} (t : type686 A) (g : type180 A) : (term2022 A t g) = (term2022 A t g).
Proof. exact (eq_refl (term2022 A t g)). Qed.
Lemma lem3511129 {_90724 A : Type'} (g : type180 A) (u : type686 A) (f : type862 _90724 A) (t : type686 A) : (term2045 _90724 A g u f t) = (term2045 _90724 A g u f t).
Proof. exact (MK_COMB (@lem3511128 A t g) (@lem3511121 _90724 A u f t)). Qed.
Lemma lem3511130 {_90724 A : Type'} (g : type180 A) (u : type686 A) (f : type862 _90724 A) : (term2046 _90724 A g u f) = (term2046 _90724 A g u f).
Proof. exact (fun_ext (fun t : type686 A => @lem3511129 _90724 A g u f t)). Qed.
Lemma lem3511131 {A : Type'} : (@all ((A -> Prop) -> Prop)) = (@all ((A -> Prop) -> Prop)).
Proof. exact (eq_refl (@all ((A -> Prop) -> Prop))). Qed.
Lemma lem3511132 {_90724 A : Type'} (g : type180 A) (u : type686 A) (f : type862 _90724 A) : (term2047 _90724 A g u f) = (term2047 _90724 A g u f).
Proof. exact (MK_COMB (@lem3511131 A) (@lem3511130 _90724 A g u f)). Qed.
Lemma lem3511141 {A : Type'} (g : type180 A) : (term2026 A g) = (term2026 A g).
Proof. exact (eq_refl (term2026 A g)). Qed.
Lemma lem3511142 {_90724 A : Type'} (g : type180 A) (u : type686 A) (f : type862 _90724 A) : (term2048 _90724 A g u f) = (term2048 _90724 A g u f).
Proof. exact (MK_COMB (@lem3511141 A g) (@lem3511132 _90724 A g u f)). Qed.
Lemma lem3511143 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem3511144 {_90724 A : Type'} (g : type180 A) (u : type686 A) (f : type862 _90724 A) : (term2049 _90724 A g u f) = (term2049 _90724 A g u f).
Proof. exact (MK_COMB (@lem3511143) (@lem3511142 _90724 A g u f)). Qed.
Lemma lem3511145 {_90724 A : Type'} (u : type686 A) (f : type862 _90724 A) (g : type180 A) : (term2050 _90724 A u f g) = (term2050 _90724 A u f g).
Proof. exact (MK_COMB (@lem3511144 _90724 A g u f) (@lem3511075 _90724 A f g)). Qed.
Lemma lem3511146 {_90724 A : Type'} (u : type686 A) (f : type862 _90724 A) : (term2051 _90724 A u f) = (term2051 _90724 A u f).
Proof. exact (fun_ext (fun g : type180 A => @lem3511145 _90724 A u f g)). Qed.
Lemma lem3511147 {A : Type'} : (@all (((A -> Prop) -> Prop) -> Prop)) = (@all (((A -> Prop) -> Prop) -> Prop)).
Proof. exact (eq_refl (@all (((A -> Prop) -> Prop) -> Prop))). Qed.
Lemma lem3511148 {_90724 A : Type'} (u : type686 A) (f : type862 _90724 A) : (term2052 _90724 A u f) = (term2052 _90724 A u f).
Proof. exact (MK_COMB (@lem3511147 A) (@lem3511146 _90724 A u f)). Qed.
Lemma lem3511149 {_90724 A : Type'} (u : type686 A) : (term2053 _90724 A u) = (term2053 _90724 A u).
Proof. exact (fun_ext (fun f : type862 _90724 A => @lem3511148 _90724 A u f)). Qed.
Lemma lem3511150 {_90724 A : Type'} : (@all ((A -> Prop) -> _90724)) = (@all ((A -> Prop) -> _90724)).
Proof. exact (eq_refl (@all ((A -> Prop) -> _90724))). Qed.
Lemma lem3511151 {_90724 A : Type'} (u : type686 A) : (term2054 _90724 A u) = (term2054 _90724 A u).
Proof. exact (MK_COMB (@lem3511150 _90724 A) (@lem3511149 _90724 A u)). Qed.
Lemma lem3511152 {_90724 A : Type'} : (term2055 _90724 A) = (term2055 _90724 A).
Proof. exact (fun_ext (fun u : type686 A => @lem3511151 _90724 A u)). Qed.
Lemma lem3511153 {A : Type'} : (@all ((A -> Prop) -> Prop)) = (@all ((A -> Prop) -> Prop)).
Proof. exact (eq_refl (@all ((A -> Prop) -> Prop))). Qed.
Lemma lem3511154 {_90724 A : Type'} : (term1959 _90724 A) = (term1959 _90724 A).
Proof. exact (MK_COMB (@lem3511153 A) (@lem3511152 _90724 A)). Qed.
Lemma lem3511155 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem3511156 {_90724 A : Type'} : (term1968 _90724 A) = (term1968 _90724 A).
Proof. exact (MK_COMB (@lem3511155) (@lem3511154 _90724 A)). Qed.
Lemma lem3511157 {_90724 A B : Type'} : (term1970 _90724 A B) = (term1970 _90724 A B).
Proof. exact (MK_COMB (@lem3511156 _90724 A) (@lem3511056 A B)). Qed.
Lemma lem3511176 {_90724 B : Type'} (f : B -> _90724) (g : type686 B) : ((term2056 _90724 B f g) = (term2057 _90724 B f g)) = ((term2056 _90724 B f g) = (term2057 _90724 B f g)).
Proof. exact (eq_refl ((term2056 _90724 B f g) = (term2057 _90724 B f g))). Qed.
Lemma lem3511177 {B : Type'} (t : B -> Prop) : t = t.
Proof. exact (eq_refl t). Qed.
Lemma lem3511205 {_90724 B : Type'} (GEN_PVAR_84 : B) (u : B -> Prop) (f : B -> _90724) (t : B -> Prop) (x : B) : (term2058 _90724 B GEN_PVAR_84 u f t x) = (term2058 _90724 B GEN_PVAR_84 u f t x).
Proof. exact (eq_refl (term2058 _90724 B GEN_PVAR_84 u f t x)). Qed.
Lemma lem3511206 {_90724 B : Type'} (GEN_PVAR_84 : B) (u : B -> Prop) (f : B -> _90724) (t : B -> Prop) : (term2059 _90724 B GEN_PVAR_84 u f t) = (term2059 _90724 B GEN_PVAR_84 u f t).
Proof. exact (fun_ext (fun x : B => @lem3511205 _90724 B GEN_PVAR_84 u f t x)). Qed.
Lemma lem3511207 {B : Type'} : (@ex B) = (@ex B).
Proof. exact (eq_refl (@ex B)). Qed.
Lemma lem3511208 {_90724 B : Type'} (GEN_PVAR_84 : B) (u : B -> Prop) (f : B -> _90724) (t : B -> Prop) : (term2060 _90724 B GEN_PVAR_84 u f t) = (term2060 _90724 B GEN_PVAR_84 u f t).
Proof. exact (MK_COMB (@lem3511207 B) (@lem3511206 _90724 B GEN_PVAR_84 u f t)). Qed.
Lemma lem3511209 {_90724 B : Type'} (u : B -> Prop) (f : B -> _90724) (t : B -> Prop) : (term2061 _90724 B u f t) = (term2061 _90724 B u f t).
Proof. exact (fun_ext (fun GEN_PVAR_84 : B => @lem3511208 _90724 B GEN_PVAR_84 u f t)). Qed.
Lemma lem3511210 {B : Type'} : (@GSPEC B) = (@GSPEC B).
Proof. exact (eq_refl (@GSPEC B)). Qed.
Lemma lem3511211 {_90724 B : Type'} (u : B -> Prop) (f : B -> _90724) (t : B -> Prop) : (term2062 _90724 B u f t) = (term2062 _90724 B u f t).
Proof. exact (MK_COMB (@lem3511210 B) (@lem3511209 _90724 B u f t)). Qed.
Lemma lem3511212 {B : Type'} : (@SUBSET B) = (@SUBSET B).
Proof. exact (eq_refl (@SUBSET B)). Qed.
Lemma lem3511213 {_90724 B : Type'} (u : B -> Prop) (f : B -> _90724) (t : B -> Prop) : (term2063 _90724 B u f t) = (term2063 _90724 B u f t).
Proof. exact (MK_COMB (@lem3511212 B) (@lem3511211 _90724 B u f t)). Qed.
Lemma lem3511214 {_90724 B : Type'} (u : B -> Prop) (f : B -> _90724) (t : B -> Prop) : (term2064 _90724 B u f t) = (term2064 _90724 B u f t).
Proof. exact (MK_COMB (@lem3511213 _90724 B u f t) (@lem3511177 B t)). Qed.
Lemma lem3511221 {B : Type'} (t : B -> Prop) (u : B -> Prop) : (term75 B t u) = (term75 B t u).
Proof. exact (eq_refl (term75 B t u)). Qed.
Lemma lem3511222 {_90724 B : Type'} (u : B -> Prop) (f : B -> _90724) (t : B -> Prop) : (term2065 _90724 B u f t) = (term2065 _90724 B u f t).
Proof. exact (MK_COMB (@lem3511221 B t u) (@lem3511214 _90724 B u f t)). Qed.
Lemma lem3511229 {B : Type'} (t : B -> Prop) (g : type686 B) : (term78 B t g) = (term78 B t g).
Proof. exact (eq_refl (term78 B t g)). Qed.
Lemma lem3511230 {_90724 B : Type'} (g : type686 B) (u : B -> Prop) (f : B -> _90724) (t : B -> Prop) : (term2066 _90724 B g u f t) = (term2066 _90724 B g u f t).
Proof. exact (MK_COMB (@lem3511229 B t g) (@lem3511222 _90724 B u f t)). Qed.
Lemma lem3511231 {_90724 B : Type'} (g : type686 B) (u : B -> Prop) (f : B -> _90724) : (term2067 _90724 B g u f) = (term2067 _90724 B g u f).
Proof. exact (fun_ext (fun t : B -> Prop => @lem3511230 _90724 B g u f t)). Qed.
Lemma lem3511232 {B : Type'} : (@all (B -> Prop)) = (@all (B -> Prop)).
Proof. exact (eq_refl (@all (B -> Prop))). Qed.
Lemma lem3511233 {_90724 B : Type'} (g : type686 B) (u : B -> Prop) (f : B -> _90724) : (term2068 _90724 B g u f) = (term2068 _90724 B g u f).
Proof. exact (MK_COMB (@lem3511232 B) (@lem3511231 _90724 B g u f)). Qed.
Lemma lem3511242 {B : Type'} (g : type686 B) : (term42 B g) = (term42 B g).
Proof. exact (eq_refl (term42 B g)). Qed.
Lemma lem3511243 {_90724 B : Type'} (g : type686 B) (u : B -> Prop) (f : B -> _90724) : (term2069 _90724 B g u f) = (term2069 _90724 B g u f).
Proof. exact (MK_COMB (@lem3511242 B g) (@lem3511233 _90724 B g u f)). Qed.
Lemma lem3511244 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem3511245 {_90724 B : Type'} (g : type686 B) (u : B -> Prop) (f : B -> _90724) : (term2070 _90724 B g u f) = (term2070 _90724 B g u f).
Proof. exact (MK_COMB (@lem3511244) (@lem3511243 _90724 B g u f)). Qed.
Lemma lem3511246 {_90724 B : Type'} (u : B -> Prop) (f : B -> _90724) (g : type686 B) : (term2071 _90724 B u f g) = (term2071 _90724 B u f g).
Proof. exact (MK_COMB (@lem3511245 _90724 B g u f) (@lem3511176 _90724 B f g)). Qed.
Lemma lem3511247 {_90724 B : Type'} (u : B -> Prop) (f : B -> _90724) : (term2072 _90724 B u f) = (term2072 _90724 B u f).
Proof. exact (fun_ext (fun g : type686 B => @lem3511246 _90724 B u f g)). Qed.
Lemma lem3511248 {B : Type'} : (@all ((B -> Prop) -> Prop)) = (@all ((B -> Prop) -> Prop)).
Proof. exact (eq_refl (@all ((B -> Prop) -> Prop))). Qed.
Lemma lem3511249 {_90724 B : Type'} (u : B -> Prop) (f : B -> _90724) : (term2073 _90724 B u f) = (term2073 _90724 B u f).
Proof. exact (MK_COMB (@lem3511248 B) (@lem3511247 _90724 B u f)). Qed.
Lemma lem3511250 {_90724 B : Type'} (u : B -> Prop) : (term2074 _90724 B u) = (term2074 _90724 B u).
Proof. exact (fun_ext (fun f : B -> _90724 => @lem3511249 _90724 B u f)). Qed.
Lemma lem3511251 {_90724 B : Type'} : (@all (B -> _90724)) = (@all (B -> _90724)).
Proof. exact (eq_refl (@all (B -> _90724))). Qed.
Lemma lem3511252 {_90724 B : Type'} (u : B -> Prop) : (term2075 _90724 B u) = (term2075 _90724 B u).
Proof. exact (MK_COMB (@lem3511251 _90724 B) (@lem3511250 _90724 B u)). Qed.
Lemma lem3511253 {_90724 B : Type'} : (term2076 _90724 B) = (term2076 _90724 B).
Proof. exact (fun_ext (fun u : B -> Prop => @lem3511252 _90724 B u)). Qed.
Lemma lem3511254 {B : Type'} : (@all (B -> Prop)) = (@all (B -> Prop)).
Proof. exact (eq_refl (@all (B -> Prop))). Qed.
Lemma lem3511255 {_90724 B : Type'} : (term1958 _90724 B) = (term1958 _90724 B).
Proof. exact (MK_COMB (@lem3511254 B) (@lem3511253 _90724 B)). Qed.
Lemma lem3511256 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem3511257 {_90724 B : Type'} : (term1971 _90724 B) = (term1971 _90724 B).
Proof. exact (MK_COMB (@lem3511256) (@lem3511255 _90724 B)). Qed.
Lemma lem3511258 {_90724 A B : Type'} : (term1973 _90724 A B) = (term1973 _90724 A B).
Proof. exact (MK_COMB (@lem3511257 _90724 B) (@lem3511157 _90724 A B)). Qed.
Lemma lem3511277 {A B : Type'} (f : A -> B) (g : type686 A) : ((term49 A B f g) = (term50 A B f g)) = ((term49 A B f g) = (term50 A B f g)).
Proof. exact (eq_refl ((term49 A B f g) = (term50 A B f g))). Qed.
Lemma lem3511306 {A B : Type'} (g : type686 A) (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) (t : A -> Prop) : (term2081 A B g _37163 u f t) = (term2081 A B g _37163 u f t).
Proof. exact (eq_refl (term2081 A B g _37163 u f t)). Qed.
Lemma lem3511307 {A B : Type'} (g : type686 A) (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) : (term2082 A B g _37163 u f) = (term2082 A B g _37163 u f).
Proof. exact (fun_ext (fun t : A -> Prop => @lem3511306 A B g _37163 u f t)). Qed.
Lemma lem3511308 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem3511309 {A B : Type'} (g : type686 A) (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) : (term2083 A B g _37163 u f) = (term2083 A B g _37163 u f).
Proof. exact (MK_COMB (@lem3511308 A) (@lem3511307 A B g _37163 u f)). Qed.
Lemma lem3511318 {A : Type'} (g : type686 A) : (term42 A g) = (term42 A g).
Proof. exact (eq_refl (term42 A g)). Qed.
Lemma lem3511319 {A B : Type'} (g : type686 A) (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) : (term2084 A B g _37163 u f) = (term2084 A B g _37163 u f).
Proof. exact (MK_COMB (@lem3511318 A g) (@lem3511309 A B g _37163 u f)). Qed.
Lemma lem3511320 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem3511321 {A B : Type'} (g : type686 A) (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) : (term2085 A B g _37163 u f) = (term2085 A B g _37163 u f).
Proof. exact (MK_COMB (@lem3511320) (@lem3511319 A B g _37163 u f)). Qed.
Lemma lem3511322 {A B : Type'} (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) (g : type686 A) : (term2086 A B _37163 u f g) = (term2086 A B _37163 u f g).
Proof. exact (MK_COMB (@lem3511321 A B g _37163 u f) (@lem3511277 A B f g)). Qed.
Lemma lem3511323 {A B : Type'} (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) : (term2088 A B _37163 u f) = (term2088 A B _37163 u f).
Proof. exact (fun_ext (fun g : type686 A => @lem3511322 A B _37163 u f g)). Qed.
Lemma lem3511324 {A : Type'} : (@all ((A -> Prop) -> Prop)) = (@all ((A -> Prop) -> Prop)).
Proof. exact (eq_refl (@all ((A -> Prop) -> Prop))). Qed.
Lemma lem3511325 {A B : Type'} (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) : (term2089 A B _37163 u f) = (term2089 A B _37163 u f).
Proof. exact (MK_COMB (@lem3511324 A) (@lem3511323 A B _37163 u f)). Qed.
Lemma lem3511326 {A B : Type'} (_37163 : type627 A B) (u : A -> Prop) : (term2091 A B _37163 u) = (term2091 A B _37163 u).
Proof. exact (fun_ext (fun f : A -> B => @lem3511325 A B _37163 u f)). Qed.
Lemma lem3511327 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem3511328 {A B : Type'} (_37163 : type627 A B) (u : A -> Prop) : (term2092 A B _37163 u) = (term2092 A B _37163 u).
Proof. exact (MK_COMB (@lem3511327 A B) (@lem3511326 A B _37163 u)). Qed.
Lemma lem3511329 {A B : Type'} (_37163 : type627 A B) : (term2094 A B _37163) = (term2094 A B _37163).
Proof. exact (fun_ext (fun u : A -> Prop => @lem3511328 A B _37163 u)). Qed.
Lemma lem3511330 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem3511331 {A B : Type'} (_37163 : type627 A B) : (term2095 A B _37163) = (term2095 A B _37163).
Proof. exact (MK_COMB (@lem3511330 A) (@lem3511329 A B _37163)). Qed.
Lemma lem3511332 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem3511333 {A B : Type'} (_37163 : type627 A B) : (term2096 A B _37163) = (term2096 A B _37163).
Proof. exact (MK_COMB (@lem3511332) (@lem3511331 A B _37163)). Qed.
Lemma lem3511334 {_90724 A B : Type'} (_37163 : type627 A B) : (term2097 _90724 A B _37163) = (term2097 _90724 A B _37163).
Proof. exact (MK_COMB (@lem3511333 A B _37163) (@lem3511258 _90724 A B)). Qed.
Lemma lem3511353 {_90724 A : Type'} (f : A -> _90724) (g : type686 A) : ((term2056 _90724 A f g) = (term2057 _90724 A f g)) = ((term2056 _90724 A f g) = (term2057 _90724 A f g)).
Proof. exact (eq_refl ((term2056 _90724 A f g) = (term2057 _90724 A f g))). Qed.
Lemma lem3511354 {A : Type'} (t : A -> Prop) : t = t.
Proof. exact (eq_refl t). Qed.
Lemma lem3511382 {_90724 A : Type'} (GEN_PVAR_84 : A) (u : A -> Prop) (f : A -> _90724) (t : A -> Prop) (x : A) : (term2058 _90724 A GEN_PVAR_84 u f t x) = (term2058 _90724 A GEN_PVAR_84 u f t x).
Proof. exact (eq_refl (term2058 _90724 A GEN_PVAR_84 u f t x)). Qed.
Lemma lem3511383 {_90724 A : Type'} (GEN_PVAR_84 : A) (u : A -> Prop) (f : A -> _90724) (t : A -> Prop) : (term2059 _90724 A GEN_PVAR_84 u f t) = (term2059 _90724 A GEN_PVAR_84 u f t).
Proof. exact (fun_ext (fun x : A => @lem3511382 _90724 A GEN_PVAR_84 u f t x)). Qed.
Lemma lem3511384 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem3511385 {_90724 A : Type'} (GEN_PVAR_84 : A) (u : A -> Prop) (f : A -> _90724) (t : A -> Prop) : (term2060 _90724 A GEN_PVAR_84 u f t) = (term2060 _90724 A GEN_PVAR_84 u f t).
Proof. exact (MK_COMB (@lem3511384 A) (@lem3511383 _90724 A GEN_PVAR_84 u f t)). Qed.
Lemma lem3511386 {_90724 A : Type'} (u : A -> Prop) (f : A -> _90724) (t : A -> Prop) : (term2061 _90724 A u f t) = (term2061 _90724 A u f t).
Proof. exact (fun_ext (fun GEN_PVAR_84 : A => @lem3511385 _90724 A GEN_PVAR_84 u f t)). Qed.
Lemma lem3511387 {A : Type'} : (@GSPEC A) = (@GSPEC A).
Proof. exact (eq_refl (@GSPEC A)). Qed.
Lemma lem3511388 {_90724 A : Type'} (u : A -> Prop) (f : A -> _90724) (t : A -> Prop) : (term2062 _90724 A u f t) = (term2062 _90724 A u f t).
Proof. exact (MK_COMB (@lem3511387 A) (@lem3511386 _90724 A u f t)). Qed.
Lemma lem3511389 {A : Type'} : (@SUBSET A) = (@SUBSET A).
Proof. exact (eq_refl (@SUBSET A)). Qed.
Lemma lem3511390 {_90724 A : Type'} (u : A -> Prop) (f : A -> _90724) (t : A -> Prop) : (term2063 _90724 A u f t) = (term2063 _90724 A u f t).
Proof. exact (MK_COMB (@lem3511389 A) (@lem3511388 _90724 A u f t)). Qed.
Lemma lem3511391 {_90724 A : Type'} (u : A -> Prop) (f : A -> _90724) (t : A -> Prop) : (term2064 _90724 A u f t) = (term2064 _90724 A u f t).
Proof. exact (MK_COMB (@lem3511390 _90724 A u f t) (@lem3511354 A t)). Qed.
Lemma lem3511398 {A : Type'} (t : A -> Prop) (u : A -> Prop) : (term75 A t u) = (term75 A t u).
Proof. exact (eq_refl (term75 A t u)). Qed.
Lemma lem3511399 {_90724 A : Type'} (u : A -> Prop) (f : A -> _90724) (t : A -> Prop) : (term2065 _90724 A u f t) = (term2065 _90724 A u f t).
Proof. exact (MK_COMB (@lem3511398 A t u) (@lem3511391 _90724 A u f t)). Qed.
Lemma lem3511406 {A : Type'} (t : A -> Prop) (g : type686 A) : (term78 A t g) = (term78 A t g).
Proof. exact (eq_refl (term78 A t g)). Qed.
Lemma lem3511407 {_90724 A : Type'} (g : type686 A) (u : A -> Prop) (f : A -> _90724) (t : A -> Prop) : (term2066 _90724 A g u f t) = (term2066 _90724 A g u f t).
Proof. exact (MK_COMB (@lem3511406 A t g) (@lem3511399 _90724 A u f t)). Qed.
Lemma lem3511408 {_90724 A : Type'} (g : type686 A) (u : A -> Prop) (f : A -> _90724) : (term2067 _90724 A g u f) = (term2067 _90724 A g u f).
Proof. exact (fun_ext (fun t : A -> Prop => @lem3511407 _90724 A g u f t)). Qed.
Lemma lem3511409 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem3511410 {_90724 A : Type'} (g : type686 A) (u : A -> Prop) (f : A -> _90724) : (term2068 _90724 A g u f) = (term2068 _90724 A g u f).
Proof. exact (MK_COMB (@lem3511409 A) (@lem3511408 _90724 A g u f)). Qed.
Lemma lem3511419 {A : Type'} (g : type686 A) : (term42 A g) = (term42 A g).
Proof. exact (eq_refl (term42 A g)). Qed.
Lemma lem3511420 {_90724 A : Type'} (g : type686 A) (u : A -> Prop) (f : A -> _90724) : (term2069 _90724 A g u f) = (term2069 _90724 A g u f).
Proof. exact (MK_COMB (@lem3511419 A g) (@lem3511410 _90724 A g u f)). Qed.
Lemma lem3511421 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem3511422 {_90724 A : Type'} (g : type686 A) (u : A -> Prop) (f : A -> _90724) : (term2070 _90724 A g u f) = (term2070 _90724 A g u f).
Proof. exact (MK_COMB (@lem3511421) (@lem3511420 _90724 A g u f)). Qed.
Lemma lem3511423 {_90724 A : Type'} (u : A -> Prop) (f : A -> _90724) (g : type686 A) : (term2071 _90724 A u f g) = (term2071 _90724 A u f g).
Proof. exact (MK_COMB (@lem3511422 _90724 A g u f) (@lem3511353 _90724 A f g)). Qed.
Lemma lem3511424 {_90724 A : Type'} (u : A -> Prop) (f : A -> _90724) : (term2072 _90724 A u f) = (term2072 _90724 A u f).
Proof. exact (fun_ext (fun g : type686 A => @lem3511423 _90724 A u f g)). Qed.
Lemma lem3511425 {A : Type'} : (@all ((A -> Prop) -> Prop)) = (@all ((A -> Prop) -> Prop)).
Proof. exact (eq_refl (@all ((A -> Prop) -> Prop))). Qed.
Lemma lem3511426 {_90724 A : Type'} (u : A -> Prop) (f : A -> _90724) : (term2073 _90724 A u f) = (term2073 _90724 A u f).
Proof. exact (MK_COMB (@lem3511425 A) (@lem3511424 _90724 A u f)). Qed.
Lemma lem3511427 {_90724 A : Type'} (u : A -> Prop) : (term2074 _90724 A u) = (term2074 _90724 A u).
Proof. exact (fun_ext (fun f : A -> _90724 => @lem3511426 _90724 A u f)). Qed.
Lemma lem3511428 {_90724 A : Type'} : (@all (A -> _90724)) = (@all (A -> _90724)).
Proof. exact (eq_refl (@all (A -> _90724))). Qed.
Lemma lem3511429 {_90724 A : Type'} (u : A -> Prop) : (term2075 _90724 A u) = (term2075 _90724 A u).
Proof. exact (MK_COMB (@lem3511428 _90724 A) (@lem3511427 _90724 A u)). Qed.
Lemma lem3511430 {_90724 A : Type'} : (term2076 _90724 A) = (term2076 _90724 A).
Proof. exact (fun_ext (fun u : A -> Prop => @lem3511429 _90724 A u)). Qed.
Lemma lem3511431 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem3511432 {_90724 A : Type'} : (term1958 _90724 A) = (term1958 _90724 A).
Proof. exact (MK_COMB (@lem3511431 A) (@lem3511430 _90724 A)). Qed.
Lemma lem3511433 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem3511434 {_90724 A : Type'} : (term1971 _90724 A) = (term1971 _90724 A).
Proof. exact (MK_COMB (@lem3511433) (@lem3511432 _90724 A)). Qed.
Lemma lem3511435 {_90724 A B : Type'} (_37163 : type627 A B) : (term2098 _90724 A B _37163) = (term2098 _90724 A B _37163).
Proof. exact (MK_COMB (@lem3511434 _90724 A) (@lem3511334 _90724 A B _37163)). Qed.
Lemma lem3511454 {_90715 A : Type'} (f : type1413 _90715 A) (g : type686 _90715) : ((term2099 _90715 A f g) = (term2100 _90715 A f g)) = ((term2099 _90715 A f g) = (term2100 _90715 A f g)).
Proof. exact (eq_refl ((term2099 _90715 A f g) = (term2100 _90715 A f g))). Qed.
Lemma lem3511455 {_90715 : Type'} (t : _90715 -> Prop) : t = t.
Proof. exact (eq_refl t). Qed.
Lemma lem3511483 {_90715 A : Type'} (GEN_PVAR_84 : _90715) (u : _90715 -> Prop) (f : type1413 _90715 A) (t : _90715 -> Prop) (x : _90715) : (term2101 _90715 A GEN_PVAR_84 u f t x) = (term2101 _90715 A GEN_PVAR_84 u f t x).
Proof. exact (eq_refl (term2101 _90715 A GEN_PVAR_84 u f t x)). Qed.
Lemma lem3511484 {_90715 A : Type'} (GEN_PVAR_84 : _90715) (u : _90715 -> Prop) (f : type1413 _90715 A) (t : _90715 -> Prop) : (term2102 _90715 A GEN_PVAR_84 u f t) = (term2102 _90715 A GEN_PVAR_84 u f t).
Proof. exact (fun_ext (fun x : _90715 => @lem3511483 _90715 A GEN_PVAR_84 u f t x)). Qed.
Lemma lem3511485 {_90715 : Type'} : (@ex _90715) = (@ex _90715).
Proof. exact (eq_refl (@ex _90715)). Qed.
Lemma lem3511486 {_90715 A : Type'} (GEN_PVAR_84 : _90715) (u : _90715 -> Prop) (f : type1413 _90715 A) (t : _90715 -> Prop) : (term2103 _90715 A GEN_PVAR_84 u f t) = (term2103 _90715 A GEN_PVAR_84 u f t).
Proof. exact (MK_COMB (@lem3511485 _90715) (@lem3511484 _90715 A GEN_PVAR_84 u f t)). Qed.
Lemma lem3511487 {_90715 A : Type'} (u : _90715 -> Prop) (f : type1413 _90715 A) (t : _90715 -> Prop) : (term2104 _90715 A u f t) = (term2104 _90715 A u f t).
Proof. exact (fun_ext (fun GEN_PVAR_84 : _90715 => @lem3511486 _90715 A GEN_PVAR_84 u f t)). Qed.
Lemma lem3511488 {_90715 : Type'} : (@GSPEC _90715) = (@GSPEC _90715).
Proof. exact (eq_refl (@GSPEC _90715)). Qed.
Lemma lem3511489 {_90715 A : Type'} (u : _90715 -> Prop) (f : type1413 _90715 A) (t : _90715 -> Prop) : (term2105 _90715 A u f t) = (term2105 _90715 A u f t).
Proof. exact (MK_COMB (@lem3511488 _90715) (@lem3511487 _90715 A u f t)). Qed.
Lemma lem3511490 {_90715 : Type'} : (@SUBSET _90715) = (@SUBSET _90715).
Proof. exact (eq_refl (@SUBSET _90715)). Qed.
Lemma lem3511491 {_90715 A : Type'} (u : _90715 -> Prop) (f : type1413 _90715 A) (t : _90715 -> Prop) : (term2106 _90715 A u f t) = (term2106 _90715 A u f t).
Proof. exact (MK_COMB (@lem3511490 _90715) (@lem3511489 _90715 A u f t)). Qed.
Lemma lem3511492 {_90715 A : Type'} (u : _90715 -> Prop) (f : type1413 _90715 A) (t : _90715 -> Prop) : (term2107 _90715 A u f t) = (term2107 _90715 A u f t).
Proof. exact (MK_COMB (@lem3511491 _90715 A u f t) (@lem3511455 _90715 t)). Qed.
Lemma lem3511499 {_90715 : Type'} (t : _90715 -> Prop) (u : _90715 -> Prop) : (term75 _90715 t u) = (term75 _90715 t u).
Proof. exact (eq_refl (term75 _90715 t u)). Qed.
Lemma lem3511500 {_90715 A : Type'} (u : _90715 -> Prop) (f : type1413 _90715 A) (t : _90715 -> Prop) : (term2108 _90715 A u f t) = (term2108 _90715 A u f t).
Proof. exact (MK_COMB (@lem3511499 _90715 t u) (@lem3511492 _90715 A u f t)). Qed.
Lemma lem3511507 {_90715 : Type'} (t : _90715 -> Prop) (g : type686 _90715) : (term78 _90715 t g) = (term78 _90715 t g).
Proof. exact (eq_refl (term78 _90715 t g)). Qed.
Lemma lem3511508 {_90715 A : Type'} (g : type686 _90715) (u : _90715 -> Prop) (f : type1413 _90715 A) (t : _90715 -> Prop) : (term2109 _90715 A g u f t) = (term2109 _90715 A g u f t).
Proof. exact (MK_COMB (@lem3511507 _90715 t g) (@lem3511500 _90715 A u f t)). Qed.
Lemma lem3511509 {_90715 A : Type'} (g : type686 _90715) (u : _90715 -> Prop) (f : type1413 _90715 A) : (term2110 _90715 A g u f) = (term2110 _90715 A g u f).
Proof. exact (fun_ext (fun t : _90715 -> Prop => @lem3511508 _90715 A g u f t)). Qed.
Lemma lem3511510 {_90715 : Type'} : (@all (_90715 -> Prop)) = (@all (_90715 -> Prop)).
Proof. exact (eq_refl (@all (_90715 -> Prop))). Qed.
Lemma lem3511511 {_90715 A : Type'} (g : type686 _90715) (u : _90715 -> Prop) (f : type1413 _90715 A) : (term2111 _90715 A g u f) = (term2111 _90715 A g u f).
Proof. exact (MK_COMB (@lem3511510 _90715) (@lem3511509 _90715 A g u f)). Qed.
Lemma lem3511520 {_90715 : Type'} (g : type686 _90715) : (term42 _90715 g) = (term42 _90715 g).
Proof. exact (eq_refl (term42 _90715 g)). Qed.
Lemma lem3511521 {_90715 A : Type'} (g : type686 _90715) (u : _90715 -> Prop) (f : type1413 _90715 A) : (term2112 _90715 A g u f) = (term2112 _90715 A g u f).
Proof. exact (MK_COMB (@lem3511520 _90715 g) (@lem3511511 _90715 A g u f)). Qed.
Lemma lem3511522 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem3511523 {_90715 A : Type'} (g : type686 _90715) (u : _90715 -> Prop) (f : type1413 _90715 A) : (term2113 _90715 A g u f) = (term2113 _90715 A g u f).
Proof. exact (MK_COMB (@lem3511522) (@lem3511521 _90715 A g u f)). Qed.
Lemma lem3511524 {_90715 A : Type'} (u : _90715 -> Prop) (f : type1413 _90715 A) (g : type686 _90715) : (term2114 _90715 A u f g) = (term2114 _90715 A u f g).
Proof. exact (MK_COMB (@lem3511523 _90715 A g u f) (@lem3511454 _90715 A f g)). Qed.
Lemma lem3511525 {_90715 A : Type'} (u : _90715 -> Prop) (f : type1413 _90715 A) : (term2115 _90715 A u f) = (term2115 _90715 A u f).
Proof. exact (fun_ext (fun g : type686 _90715 => @lem3511524 _90715 A u f g)). Qed.
Lemma lem3511526 {_90715 : Type'} : (@all ((_90715 -> Prop) -> Prop)) = (@all ((_90715 -> Prop) -> Prop)).
Proof. exact (eq_refl (@all ((_90715 -> Prop) -> Prop))). Qed.
Lemma lem3511527 {_90715 A : Type'} (u : _90715 -> Prop) (f : type1413 _90715 A) : (term2116 _90715 A u f) = (term2116 _90715 A u f).
Proof. exact (MK_COMB (@lem3511526 _90715) (@lem3511525 _90715 A u f)). Qed.
Lemma lem3511528 {_90715 A : Type'} (u : _90715 -> Prop) : (term2117 _90715 A u) = (term2117 _90715 A u).
Proof. exact (fun_ext (fun f : type1413 _90715 A => @lem3511527 _90715 A u f)). Qed.
Lemma lem3511529 {_90715 A : Type'} : (@all (_90715 -> A -> Prop)) = (@all (_90715 -> A -> Prop)).
Proof. exact (eq_refl (@all (_90715 -> A -> Prop))). Qed.
Lemma lem3511530 {_90715 A : Type'} (u : _90715 -> Prop) : (term2118 _90715 A u) = (term2118 _90715 A u).
Proof. exact (MK_COMB (@lem3511529 _90715 A) (@lem3511528 _90715 A u)). Qed.
Lemma lem3511531 {_90715 A : Type'} : (term2119 _90715 A) = (term2119 _90715 A).
Proof. exact (fun_ext (fun u : _90715 -> Prop => @lem3511530 _90715 A u)). Qed.
Lemma lem3511532 {_90715 : Type'} : (@all (_90715 -> Prop)) = (@all (_90715 -> Prop)).
Proof. exact (eq_refl (@all (_90715 -> Prop))). Qed.
Lemma lem3511533 {_90715 A : Type'} : (term1960 _90715 A) = (term1960 _90715 A).
Proof. exact (MK_COMB (@lem3511532 _90715) (@lem3511531 _90715 A)). Qed.
Lemma lem3511534 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem3511535 {_90715 A : Type'} : (term1979 _90715 A) = (term1979 _90715 A).
Proof. exact (MK_COMB (@lem3511534) (@lem3511533 _90715 A)). Qed.
Lemma lem3511536 {_90715 _90724 A B : Type'} (_37163 : type627 A B) : (term2120 _90715 _90724 A B _37163) = (term2120 _90715 _90724 A B _37163).
Proof. exact (MK_COMB (@lem3511535 _90715 A) (@lem3511435 _90724 A B _37163)). Qed.
Lemma lem3511555 {_90715 B : Type'} (f : _90715 -> B) (g : type686 _90715) : ((term49 _90715 B f g) = (term50 _90715 B f g)) = ((term49 _90715 B f g) = (term50 _90715 B f g)).
Proof. exact (eq_refl ((term49 _90715 B f g) = (term50 _90715 B f g))). Qed.
Lemma lem3511556 {_90715 : Type'} (t : _90715 -> Prop) : t = t.
Proof. exact (eq_refl t). Qed.
Lemma lem3511558 {_90715 B : Type'} (u : _90715 -> Prop) (f : _90715 -> B) (t : _90715 -> Prop) (_37166 : type627 _90715 B) (h1 : _37166 = (term2002 _90715 B)) : (term67 _90715 B u f t) = (_37166 u f t).
Proof. exact (SYM (@lem3510955 _90715 B u f t _37166 h1)). Qed.
Lemma lem3511559 {_90715 B : Type'} (u : _90715 -> Prop) (f : _90715 -> B) (t : _90715 -> Prop) (_37166 : type627 _90715 B) (h1 : _37166 = (term2002 _90715 B)) : (term67 _90715 B u f t) = (_37166 u f t).
Proof. exact (@lem3511558 _90715 B u f t _37166 h1). Qed.
Lemma lem3511560 {_90715 : Type'} : (@GSPEC _90715) = (@GSPEC _90715).
Proof. exact (eq_refl (@GSPEC _90715)). Qed.
Lemma lem3511561 {_90715 B : Type'} (u : _90715 -> Prop) (f : _90715 -> B) (t : _90715 -> Prop) (_37166 : type627 _90715 B) (h1 : _37166 = (term2002 _90715 B)) : (term69 _90715 B u f t) = (term2077 _90715 B _37166 u f t).
Proof. exact (MK_COMB (@lem3511560 _90715) (@lem3511559 _90715 B u f t _37166 h1)). Qed.
Lemma lem3511562 {_90715 : Type'} : (@SUBSET _90715) = (@SUBSET _90715).
Proof. exact (eq_refl (@SUBSET _90715)). Qed.
Lemma lem3511563 {_90715 B : Type'} (u : _90715 -> Prop) (f : _90715 -> B) (t : _90715 -> Prop) (_37166 : type627 _90715 B) (h1 : _37166 = (term2002 _90715 B)) : (term71 _90715 B u f t) = (term2078 _90715 B _37166 u f t).
Proof. exact (MK_COMB (@lem3511562 _90715) (@lem3511561 _90715 B u f t _37166 h1)). Qed.
Lemma lem3511564 {_90715 B : Type'} (u : _90715 -> Prop) (f : _90715 -> B) (t : _90715 -> Prop) (_37166 : type627 _90715 B) (h1 : _37166 = (term2002 _90715 B)) : (term73 _90715 B u f t) = (term2079 _90715 B _37166 u f t).
Proof. exact (MK_COMB (@lem3511563 _90715 B u f t _37166 h1) (@lem3511556 _90715 t)). Qed.
Lemma lem3511571 {_90715 : Type'} (t : _90715 -> Prop) (u : _90715 -> Prop) : (term75 _90715 t u) = (term75 _90715 t u).
Proof. exact (eq_refl (term75 _90715 t u)). Qed.
Lemma lem3511572 {_90715 B : Type'} (u : _90715 -> Prop) (f : _90715 -> B) (t : _90715 -> Prop) (_37166 : type627 _90715 B) (h1 : _37166 = (term2002 _90715 B)) : (term76 _90715 B u f t) = (term2080 _90715 B _37166 u f t).
Proof. exact (MK_COMB (@lem3511571 _90715 t u) (@lem3511564 _90715 B u f t _37166 h1)). Qed.
Lemma lem3511579 {_90715 : Type'} (t : _90715 -> Prop) (g : type686 _90715) : (term78 _90715 t g) = (term78 _90715 t g).
Proof. exact (eq_refl (term78 _90715 t g)). Qed.
Lemma lem3511580 {_90715 B : Type'} (g : type686 _90715) (u : _90715 -> Prop) (f : _90715 -> B) (t : _90715 -> Prop) (_37166 : type627 _90715 B) (h1 : _37166 = (term2002 _90715 B)) : (term79 _90715 B g u f t) = (term2081 _90715 B g _37166 u f t).
Proof. exact (MK_COMB (@lem3511579 _90715 t g) (@lem3511572 _90715 B u f t _37166 h1)). Qed.
Lemma lem3511581 {_90715 B : Type'} (g : type686 _90715) (u : _90715 -> Prop) (f : _90715 -> B) (_37166 : type627 _90715 B) (h1 : _37166 = (term2002 _90715 B)) : (term81 _90715 B g u f) = (term2082 _90715 B g _37166 u f).
Proof. exact (fun_ext (fun t : _90715 -> Prop => @lem3511580 _90715 B g u f t _37166 h1)). Qed.
Lemma lem3511582 {_90715 : Type'} : (@all (_90715 -> Prop)) = (@all (_90715 -> Prop)).
Proof. exact (eq_refl (@all (_90715 -> Prop))). Qed.
Lemma lem3511583 {_90715 B : Type'} (g : type686 _90715) (u : _90715 -> Prop) (f : _90715 -> B) (_37166 : type627 _90715 B) (h1 : _37166 = (term2002 _90715 B)) : (term44 _90715 B g u f) = (term2083 _90715 B g _37166 u f).
Proof. exact (MK_COMB (@lem3511582 _90715) (@lem3511581 _90715 B g u f _37166 h1)). Qed.
Lemma lem3511592 {_90715 : Type'} (g : type686 _90715) : (term42 _90715 g) = (term42 _90715 g).
Proof. exact (eq_refl (term42 _90715 g)). Qed.
Lemma lem3511593 {_90715 B : Type'} (g : type686 _90715) (u : _90715 -> Prop) (f : _90715 -> B) (_37166 : type627 _90715 B) (h1 : _37166 = (term2002 _90715 B)) : (term45 _90715 B g u f) = (term2084 _90715 B g _37166 u f).
Proof. exact (MK_COMB (@lem3511592 _90715 g) (@lem3511583 _90715 B g u f _37166 h1)). Qed.
Lemma lem3511594 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem3511595 {_90715 B : Type'} (g : type686 _90715) (u : _90715 -> Prop) (f : _90715 -> B) (_37166 : type627 _90715 B) (h1 : _37166 = (term2002 _90715 B)) : (term47 _90715 B g u f) = (term2085 _90715 B g _37166 u f).
Proof. exact (MK_COMB (@lem3511594) (@lem3511593 _90715 B g u f _37166 h1)). Qed.
Lemma lem3511596 {_90715 B : Type'} (u : _90715 -> Prop) (f : _90715 -> B) (g : type686 _90715) (_37166 : type627 _90715 B) (h1 : _37166 = (term2002 _90715 B)) : (term52 _90715 B u f g) = (term2086 _90715 B _37166 u f g).
Proof. exact (MK_COMB (@lem3511595 _90715 B g u f _37166 h1) (@lem3511555 _90715 B f g)). Qed.
Lemma lem3511597 {_90715 B : Type'} (u : _90715 -> Prop) (f : _90715 -> B) (_37166 : type627 _90715 B) (h1 : _37166 = (term2002 _90715 B)) : (term2087 _90715 B u f) = (term2088 _90715 B _37166 u f).
Proof. exact (fun_ext (fun g : type686 _90715 => @lem3511596 _90715 B u f g _37166 h1)). Qed.
Lemma lem3511598 {_90715 : Type'} : (@all ((_90715 -> Prop) -> Prop)) = (@all ((_90715 -> Prop) -> Prop)).
Proof. exact (eq_refl (@all ((_90715 -> Prop) -> Prop))). Qed.
Lemma lem3511599 {_90715 B : Type'} (u : _90715 -> Prop) (f : _90715 -> B) (_37166 : type627 _90715 B) (h1 : _37166 = (term2002 _90715 B)) : (term1876 _90715 B u f) = (term2089 _90715 B _37166 u f).
Proof. exact (MK_COMB (@lem3511598 _90715) (@lem3511597 _90715 B u f _37166 h1)). Qed.
Lemma lem3511600 {_90715 B : Type'} (u : _90715 -> Prop) (_37166 : type627 _90715 B) (h1 : _37166 = (term2002 _90715 B)) : (term2090 _90715 B u) = (term2091 _90715 B _37166 u).
Proof. exact (fun_ext (fun f : _90715 -> B => @lem3511599 _90715 B u f _37166 h1)). Qed.
Lemma lem3511601 {_90715 B : Type'} : (@all (_90715 -> B)) = (@all (_90715 -> B)).
Proof. exact (eq_refl (@all (_90715 -> B))). Qed.
Lemma lem3511602 {_90715 B : Type'} (u : _90715 -> Prop) (_37166 : type627 _90715 B) (h1 : _37166 = (term2002 _90715 B)) : (term1877 _90715 B u) = (term2092 _90715 B _37166 u).
Proof. exact (MK_COMB (@lem3511601 _90715 B) (@lem3511600 _90715 B u _37166 h1)). Qed.
Lemma lem3511603 {_90715 B : Type'} (_37166 : type627 _90715 B) (h1 : _37166 = (term2002 _90715 B)) : (term2093 _90715 B) = (term2094 _90715 B _37166).
Proof. exact (fun_ext (fun u : _90715 -> Prop => @lem3511602 _90715 B u _37166 h1)). Qed.
Lemma lem3511604 {_90715 : Type'} : (@all (_90715 -> Prop)) = (@all (_90715 -> Prop)).
Proof. exact (eq_refl (@all (_90715 -> Prop))). Qed.
Lemma lem3511605 {_90715 B : Type'} (_37166 : type627 _90715 B) (h1 : _37166 = (term2002 _90715 B)) : (term1878 _90715 B) = (term2095 _90715 B _37166).
Proof. exact (MK_COMB (@lem3511604 _90715) (@lem3511603 _90715 B _37166 h1)). Qed.
Lemma lem3511606 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem3511607 {_90715 B : Type'} (_37166 : type627 _90715 B) (h1 : _37166 = (term2002 _90715 B)) : (term1974 _90715 B) = (term2096 _90715 B _37166).
Proof. exact (MK_COMB (@lem3511606) (@lem3511605 _90715 B _37166 h1)). Qed.
Lemma lem3511608 {_90715 _90724 A B : Type'} (_37163 : type627 A B) (_37166 : type627 _90715 B) (h1 : _37166 = (term2002 _90715 B)) : (term2121 _90715 _90724 A B _37163) = (term2285 _90715 _90724 A B _37166 _37163).
Proof. exact (MK_COMB (@lem3511607 _90715 B _37166 h1) (@lem3511536 _90715 _90724 A B _37163)). Qed.
Lemma lem3511627 {_90715 A : Type'} (f : _90715 -> A) (g : type686 _90715) : ((term49 _90715 A f g) = (term50 _90715 A f g)) = ((term49 _90715 A f g) = (term50 _90715 A f g)).
Proof. exact (eq_refl ((term49 _90715 A f g) = (term50 _90715 A f g))). Qed.
Lemma lem3511656 {_90715 A : Type'} (g : type686 _90715) (_37165 : type627 _90715 A) (u : _90715 -> Prop) (f : _90715 -> A) (t : _90715 -> Prop) : (term2081 _90715 A g _37165 u f t) = (term2081 _90715 A g _37165 u f t).
Proof. exact (eq_refl (term2081 _90715 A g _37165 u f t)). Qed.
Lemma lem3511657 {_90715 A : Type'} (g : type686 _90715) (_37165 : type627 _90715 A) (u : _90715 -> Prop) (f : _90715 -> A) : (term2082 _90715 A g _37165 u f) = (term2082 _90715 A g _37165 u f).
Proof. exact (fun_ext (fun t : _90715 -> Prop => @lem3511656 _90715 A g _37165 u f t)). Qed.
Lemma lem3511658 {_90715 : Type'} : (@all (_90715 -> Prop)) = (@all (_90715 -> Prop)).
Proof. exact (eq_refl (@all (_90715 -> Prop))). Qed.
Lemma lem3511659 {_90715 A : Type'} (g : type686 _90715) (_37165 : type627 _90715 A) (u : _90715 -> Prop) (f : _90715 -> A) : (term2083 _90715 A g _37165 u f) = (term2083 _90715 A g _37165 u f).
Proof. exact (MK_COMB (@lem3511658 _90715) (@lem3511657 _90715 A g _37165 u f)). Qed.
Lemma lem3511668 {_90715 : Type'} (g : type686 _90715) : (term42 _90715 g) = (term42 _90715 g).
Proof. exact (eq_refl (term42 _90715 g)). Qed.
Lemma lem3511669 {_90715 A : Type'} (g : type686 _90715) (_37165 : type627 _90715 A) (u : _90715 -> Prop) (f : _90715 -> A) : (term2084 _90715 A g _37165 u f) = (term2084 _90715 A g _37165 u f).
Proof. exact (MK_COMB (@lem3511668 _90715 g) (@lem3511659 _90715 A g _37165 u f)). Qed.
Lemma lem3511670 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem3511671 {_90715 A : Type'} (g : type686 _90715) (_37165 : type627 _90715 A) (u : _90715 -> Prop) (f : _90715 -> A) : (term2085 _90715 A g _37165 u f) = (term2085 _90715 A g _37165 u f).
Proof. exact (MK_COMB (@lem3511670) (@lem3511669 _90715 A g _37165 u f)). Qed.
Lemma lem3511672 {_90715 A : Type'} (_37165 : type627 _90715 A) (u : _90715 -> Prop) (f : _90715 -> A) (g : type686 _90715) : (term2086 _90715 A _37165 u f g) = (term2086 _90715 A _37165 u f g).
Proof. exact (MK_COMB (@lem3511671 _90715 A g _37165 u f) (@lem3511627 _90715 A f g)). Qed.
Lemma lem3511673 {_90715 A : Type'} (_37165 : type627 _90715 A) (u : _90715 -> Prop) (f : _90715 -> A) : (term2088 _90715 A _37165 u f) = (term2088 _90715 A _37165 u f).
Proof. exact (fun_ext (fun g : type686 _90715 => @lem3511672 _90715 A _37165 u f g)). Qed.
Lemma lem3511674 {_90715 : Type'} : (@all ((_90715 -> Prop) -> Prop)) = (@all ((_90715 -> Prop) -> Prop)).
Proof. exact (eq_refl (@all ((_90715 -> Prop) -> Prop))). Qed.
Lemma lem3511675 {_90715 A : Type'} (_37165 : type627 _90715 A) (u : _90715 -> Prop) (f : _90715 -> A) : (term2089 _90715 A _37165 u f) = (term2089 _90715 A _37165 u f).
Proof. exact (MK_COMB (@lem3511674 _90715) (@lem3511673 _90715 A _37165 u f)). Qed.
Lemma lem3511676 {_90715 A : Type'} (_37165 : type627 _90715 A) (u : _90715 -> Prop) : (term2091 _90715 A _37165 u) = (term2091 _90715 A _37165 u).
Proof. exact (fun_ext (fun f : _90715 -> A => @lem3511675 _90715 A _37165 u f)). Qed.
Lemma lem3511677 {_90715 A : Type'} : (@all (_90715 -> A)) = (@all (_90715 -> A)).
Proof. exact (eq_refl (@all (_90715 -> A))). Qed.
Lemma lem3511678 {_90715 A : Type'} (_37165 : type627 _90715 A) (u : _90715 -> Prop) : (term2092 _90715 A _37165 u) = (term2092 _90715 A _37165 u).
Proof. exact (MK_COMB (@lem3511677 _90715 A) (@lem3511676 _90715 A _37165 u)). Qed.
Lemma lem3511679 {_90715 A : Type'} (_37165 : type627 _90715 A) : (term2094 _90715 A _37165) = (term2094 _90715 A _37165).
Proof. exact (fun_ext (fun u : _90715 -> Prop => @lem3511678 _90715 A _37165 u)). Qed.
Lemma lem3511680 {_90715 : Type'} : (@all (_90715 -> Prop)) = (@all (_90715 -> Prop)).
Proof. exact (eq_refl (@all (_90715 -> Prop))). Qed.
Lemma lem3511681 {_90715 A : Type'} (_37165 : type627 _90715 A) : (term2095 _90715 A _37165) = (term2095 _90715 A _37165).
Proof. exact (MK_COMB (@lem3511680 _90715) (@lem3511679 _90715 A _37165)). Qed.
Lemma lem3511682 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem3511683 {_90715 A : Type'} (_37165 : type627 _90715 A) : (term2096 _90715 A _37165) = (term2096 _90715 A _37165).
Proof. exact (MK_COMB (@lem3511682) (@lem3511681 _90715 A _37165)). Qed.
Lemma lem3511684 {_90715 _90724 A B : Type'} (_37165 : type627 _90715 A) (_37163 : type627 A B) (_37166 : type627 _90715 B) (h1 : _37166 = (term2002 _90715 B)) : (term2248 _90715 _90724 A B _37165 _37163) = (term2286 _90715 _90724 A B _37165 _37166 _37163).
Proof. exact (MK_COMB (@lem3511683 _90715 A _37165) (@lem3511608 _90715 _90724 A B _37163 _37166 h1)). Qed.
Lemma lem3511703 {_90715 _90724 : Type'} (f : _90715 -> _90724) (g : type686 _90715) : ((term49 _90715 _90724 f g) = (term50 _90715 _90724 f g)) = ((term49 _90715 _90724 f g) = (term50 _90715 _90724 f g)).
Proof. exact (eq_refl ((term49 _90715 _90724 f g) = (term50 _90715 _90724 f g))). Qed.
Lemma lem3511732 {_90715 _90724 : Type'} (g : type686 _90715) (_37164 : type627 _90715 _90724) (u : _90715 -> Prop) (f : _90715 -> _90724) (t : _90715 -> Prop) : (term2081 _90715 _90724 g _37164 u f t) = (term2081 _90715 _90724 g _37164 u f t).
Proof. exact (eq_refl (term2081 _90715 _90724 g _37164 u f t)). Qed.
Lemma lem3511733 {_90715 _90724 : Type'} (g : type686 _90715) (_37164 : type627 _90715 _90724) (u : _90715 -> Prop) (f : _90715 -> _90724) : (term2082 _90715 _90724 g _37164 u f) = (term2082 _90715 _90724 g _37164 u f).
Proof. exact (fun_ext (fun t : _90715 -> Prop => @lem3511732 _90715 _90724 g _37164 u f t)). Qed.
Lemma lem3511734 {_90715 : Type'} : (@all (_90715 -> Prop)) = (@all (_90715 -> Prop)).
Proof. exact (eq_refl (@all (_90715 -> Prop))). Qed.
Lemma lem3511735 {_90715 _90724 : Type'} (g : type686 _90715) (_37164 : type627 _90715 _90724) (u : _90715 -> Prop) (f : _90715 -> _90724) : (term2083 _90715 _90724 g _37164 u f) = (term2083 _90715 _90724 g _37164 u f).
Proof. exact (MK_COMB (@lem3511734 _90715) (@lem3511733 _90715 _90724 g _37164 u f)). Qed.
Lemma lem3511744 {_90715 : Type'} (g : type686 _90715) : (term42 _90715 g) = (term42 _90715 g).
Proof. exact (eq_refl (term42 _90715 g)). Qed.
Lemma lem3511745 {_90715 _90724 : Type'} (g : type686 _90715) (_37164 : type627 _90715 _90724) (u : _90715 -> Prop) (f : _90715 -> _90724) : (term2084 _90715 _90724 g _37164 u f) = (term2084 _90715 _90724 g _37164 u f).
Proof. exact (MK_COMB (@lem3511744 _90715 g) (@lem3511735 _90715 _90724 g _37164 u f)). Qed.
Lemma lem3511746 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem3511747 {_90715 _90724 : Type'} (g : type686 _90715) (_37164 : type627 _90715 _90724) (u : _90715 -> Prop) (f : _90715 -> _90724) : (term2085 _90715 _90724 g _37164 u f) = (term2085 _90715 _90724 g _37164 u f).
Proof. exact (MK_COMB (@lem3511746) (@lem3511745 _90715 _90724 g _37164 u f)). Qed.
Lemma lem3511748 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) (u : _90715 -> Prop) (f : _90715 -> _90724) (g : type686 _90715) : (term2086 _90715 _90724 _37164 u f g) = (term2086 _90715 _90724 _37164 u f g).
Proof. exact (MK_COMB (@lem3511747 _90715 _90724 g _37164 u f) (@lem3511703 _90715 _90724 f g)). Qed.
Lemma lem3511749 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) (u : _90715 -> Prop) (f : _90715 -> _90724) : (term2088 _90715 _90724 _37164 u f) = (term2088 _90715 _90724 _37164 u f).
Proof. exact (fun_ext (fun g : type686 _90715 => @lem3511748 _90715 _90724 _37164 u f g)). Qed.
Lemma lem3511750 {_90715 : Type'} : (@all ((_90715 -> Prop) -> Prop)) = (@all ((_90715 -> Prop) -> Prop)).
Proof. exact (eq_refl (@all ((_90715 -> Prop) -> Prop))). Qed.
Lemma lem3511751 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) (u : _90715 -> Prop) (f : _90715 -> _90724) : (term2089 _90715 _90724 _37164 u f) = (term2089 _90715 _90724 _37164 u f).
Proof. exact (MK_COMB (@lem3511750 _90715) (@lem3511749 _90715 _90724 _37164 u f)). Qed.
Lemma lem3511752 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) (u : _90715 -> Prop) : (term2091 _90715 _90724 _37164 u) = (term2091 _90715 _90724 _37164 u).
Proof. exact (fun_ext (fun f : _90715 -> _90724 => @lem3511751 _90715 _90724 _37164 u f)). Qed.
Lemma lem3511753 {_90715 _90724 : Type'} : (@all (_90715 -> _90724)) = (@all (_90715 -> _90724)).
Proof. exact (eq_refl (@all (_90715 -> _90724))). Qed.
Lemma lem3511754 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) (u : _90715 -> Prop) : (term2092 _90715 _90724 _37164 u) = (term2092 _90715 _90724 _37164 u).
Proof. exact (MK_COMB (@lem3511753 _90715 _90724) (@lem3511752 _90715 _90724 _37164 u)). Qed.
Lemma lem3511755 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) : (term2094 _90715 _90724 _37164) = (term2094 _90715 _90724 _37164).
Proof. exact (fun_ext (fun u : _90715 -> Prop => @lem3511754 _90715 _90724 _37164 u)). Qed.
Lemma lem3511756 {_90715 : Type'} : (@all (_90715 -> Prop)) = (@all (_90715 -> Prop)).
Proof. exact (eq_refl (@all (_90715 -> Prop))). Qed.
Lemma lem3511757 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) : (term2095 _90715 _90724 _37164) = (term2095 _90715 _90724 _37164).
Proof. exact (MK_COMB (@lem3511756 _90715) (@lem3511755 _90715 _90724 _37164)). Qed.
Lemma lem3511758 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem3511759 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) : (term2096 _90715 _90724 _37164) = (term2096 _90715 _90724 _37164).
Proof. exact (MK_COMB (@lem3511758) (@lem3511757 _90715 _90724 _37164)). Qed.
Lemma lem3511760 {_90715 _90724 A B : Type'} (_37164 : type627 _90715 _90724) (_37165 : type627 _90715 A) (_37163 : type627 A B) (_37166 : type627 _90715 B) (h1 : _37166 = (term2002 _90715 B)) : (term2249 _90715 _90724 A B _37164 _37165 _37163) = (term2287 _90715 _90724 A B _37164 _37165 _37166 _37163).
Proof. exact (MK_COMB (@lem3511759 _90715 _90724 _37164) (@lem3511684 _90715 _90724 A B _37165 _37163 _37166 h1)). Qed.
Lemma lem3511779 {A B : Type'} (f : A -> B) (g : type686 A) : ((term49 A B f g) = (term50 A B f g)) = ((term49 A B f g) = (term50 A B f g)).
Proof. exact (eq_refl ((term49 A B f g) = (term50 A B f g))). Qed.
Lemma lem3511800 {A B : Type'} (g : type686 A) (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) (t : A -> Prop) : (term2124 A B g _37163 u f t) = (term2124 A B g _37163 u f t).
Proof. exact (eq_refl (term2124 A B g _37163 u f t)). Qed.
Lemma lem3511801 {A B : Type'} (g : type686 A) (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) : (term2125 A B g _37163 u f) = (term2125 A B g _37163 u f).
Proof. exact (fun_ext (fun t : A -> Prop => @lem3511800 A B g _37163 u f t)). Qed.
Lemma lem3511802 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem3511803 {A B : Type'} (g : type686 A) (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) : (term2126 A B g _37163 u f) = (term2126 A B g _37163 u f).
Proof. exact (MK_COMB (@lem3511802 A) (@lem3511801 A B g _37163 u f)). Qed.
Lemma lem3511816 {A : Type'} (g : type686 A) (t : A -> Prop) (u : A -> Prop) : (term2127 A g t u) = (term2127 A g t u).
Proof. exact (eq_refl (term2127 A g t u)). Qed.
Lemma lem3511817 {A : Type'} (g : type686 A) (u : A -> Prop) : (term2128 A g u) = (term2128 A g u).
Proof. exact (fun_ext (fun t : A -> Prop => @lem3511816 A g t u)). Qed.
Lemma lem3511818 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem3511819 {A : Type'} (g : type686 A) (u : A -> Prop) : (term2129 A g u) = (term2129 A g u).
Proof. exact (MK_COMB (@lem3511818 A) (@lem3511817 A g u)). Qed.
Lemma lem3511820 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem3511821 {A : Type'} (g : type686 A) (u : A -> Prop) : (term1946 A g u) = (term1946 A g u).
Proof. exact (MK_COMB (@lem3511820) (@lem3511819 A g u)). Qed.
Lemma lem3511822 {A B : Type'} (g : type686 A) (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) : (term2130 A B g _37163 u f) = (term2130 A B g _37163 u f).
Proof. exact (MK_COMB (@lem3511821 A g u) (@lem3511803 A B g _37163 u f)). Qed.
Lemma lem3511831 {A : Type'} (g : type686 A) : (term42 A g) = (term42 A g).
Proof. exact (eq_refl (term42 A g)). Qed.
Lemma lem3511832 {A B : Type'} (g : type686 A) (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) : (term2131 A B g _37163 u f) = (term2131 A B g _37163 u f).
Proof. exact (MK_COMB (@lem3511831 A g) (@lem3511822 A B g _37163 u f)). Qed.
Lemma lem3511833 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem3511834 {A B : Type'} (g : type686 A) (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) : (term2133 A B g _37163 u f) = (term2133 A B g _37163 u f).
Proof. exact (MK_COMB (@lem3511833) (@lem3511832 A B g _37163 u f)). Qed.
Lemma lem3511835 {A B : Type'} (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) (g : type686 A) : (term2134 A B _37163 u f g) = (term2134 A B _37163 u f g).
Proof. exact (MK_COMB (@lem3511834 A B g _37163 u f) (@lem3511779 A B f g)). Qed.
Lemma lem3511836 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem3511837 {A B : Type'} (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) (g : type686 A) : (term2135 A B _37163 u f g) = (term2135 A B _37163 u f g).
Proof. exact (MK_COMB (@lem3511836) (@lem3511835 A B _37163 u f g)). Qed.
Lemma lem3511838 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem3511839 {A B : Type'} (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) (g : type686 A) : (term2136 A B _37163 u f g) = (term2136 A B _37163 u f g).
Proof. exact (MK_COMB (@lem3511838) (@lem3511837 A B _37163 u f g)). Qed.
Lemma lem3511840 {_90715 _90724 A B : Type'} (u : A -> Prop) (f : A -> B) (g : type686 A) (_37164 : type627 _90715 _90724) (_37165 : type627 _90715 A) (_37163 : type627 A B) (_37166 : type627 _90715 B) (h1 : _37166 = (term2002 _90715 B)) : (term2250 _90715 _90724 A B u f g _37164 _37165 _37163) = (term2288 _90715 _90724 A B u f g _37164 _37165 _37166 _37163).
Proof. exact (MK_COMB (@lem3511839 A B _37163 u f g) (@lem3511760 _90715 _90724 A B _37164 _37165 _37163 _37166 h1)). Qed.
Lemma lem3511841 {_90715 _90724 A B : Type'} (f : A -> B) (g : type686 A) (_37164 : type627 _90715 _90724) (_37165 : type627 _90715 A) (_37163 : type627 A B) (_37166 : type627 _90715 B) (h1 : _37166 = (term2002 _90715 B)) : (term2251 _90715 _90724 A B f g _37164 _37165 _37163) = (term2289 _90715 _90724 A B f g _37164 _37165 _37166 _37163).
Proof. exact (fun_ext (fun u : A -> Prop => @lem3511840 _90715 _90724 A B u f g _37164 _37165 _37163 _37166 h1)). Qed.
Lemma lem3511842 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem3511843 {_90715 _90724 A B : Type'} (f : A -> B) (g : type686 A) (_37164 : type627 _90715 _90724) (_37165 : type627 _90715 A) (_37163 : type627 A B) (_37166 : type627 _90715 B) (h1 : _37166 = (term2002 _90715 B)) : (term2252 _90715 _90724 A B f g _37164 _37165 _37163) = (term2290 _90715 _90724 A B f g _37164 _37165 _37166 _37163).
Proof. exact (MK_COMB (@lem3511842 A) (@lem3511841 _90715 _90724 A B f g _37164 _37165 _37163 _37166 h1)). Qed.
Lemma lem3511844 {_90715 _90724 A B : Type'} (g : type686 A) (_37164 : type627 _90715 _90724) (_37165 : type627 _90715 A) (_37163 : type627 A B) (_37166 : type627 _90715 B) (h1 : _37166 = (term2002 _90715 B)) : (term2253 _90715 _90724 A B g _37164 _37165 _37163) = (term2291 _90715 _90724 A B g _37164 _37165 _37166 _37163).
Proof. exact (fun_ext (fun f : A -> B => @lem3511843 _90715 _90724 A B f g _37164 _37165 _37163 _37166 h1)). Qed.
Lemma lem3511845 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem3511846 {_90715 _90724 A B : Type'} (g : type686 A) (_37164 : type627 _90715 _90724) (_37165 : type627 _90715 A) (_37163 : type627 A B) (_37166 : type627 _90715 B) (h1 : _37166 = (term2002 _90715 B)) : (term2254 _90715 _90724 A B g _37164 _37165 _37163) = (term2292 _90715 _90724 A B g _37164 _37165 _37166 _37163).
Proof. exact (MK_COMB (@lem3511845 A B) (@lem3511844 _90715 _90724 A B g _37164 _37165 _37163 _37166 h1)). Qed.
Lemma lem3511847 {_90715 _90724 A B : Type'} (_37164 : type627 _90715 _90724) (_37165 : type627 _90715 A) (_37163 : type627 A B) (_37166 : type627 _90715 B) (h1 : _37166 = (term2002 _90715 B)) : (term2255 _90715 _90724 A B _37164 _37165 _37163) = (term2293 _90715 _90724 A B _37164 _37165 _37166 _37163).
Proof. exact (fun_ext (fun g : type686 A => @lem3511846 _90715 _90724 A B g _37164 _37165 _37163 _37166 h1)). Qed.
Lemma lem3511848 {A : Type'} : (@all ((A -> Prop) -> Prop)) = (@all ((A -> Prop) -> Prop)).
Proof. exact (eq_refl (@all ((A -> Prop) -> Prop))). Qed.
Lemma lem3511849 {_90715 _90724 A B : Type'} (_37164 : type627 _90715 _90724) (_37165 : type627 _90715 A) (_37163 : type627 A B) (_37166 : type627 _90715 B) (h1 : _37166 = (term2002 _90715 B)) : (term2256 _90715 _90724 A B _37164 _37165 _37163) = (term2294 _90715 _90724 A B _37164 _37165 _37166 _37163).
Proof. exact (MK_COMB (@lem3511848 A) (@lem3511847 _90715 _90724 A B _37164 _37165 _37163 _37166 h1)). Qed.
Lemma lem3511874 {A B : Type'} (GEN_PVAR_85 : A) (u : A -> Prop) (f : A -> B) (t : A -> Prop) (x : A) : (term61 A B GEN_PVAR_85 u f t x) = (term61 A B GEN_PVAR_85 u f t x).
Proof. exact (eq_refl (term61 A B GEN_PVAR_85 u f t x)). Qed.
Lemma lem3511875 {A B : Type'} (GEN_PVAR_85 : A) (u : A -> Prop) (f : A -> B) (t : A -> Prop) : (term63 A B GEN_PVAR_85 u f t) = (term63 A B GEN_PVAR_85 u f t).
Proof. exact (fun_ext (fun x : A => @lem3511874 A B GEN_PVAR_85 u f t x)). Qed.
Lemma lem3511876 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem3511877 {A B : Type'} (GEN_PVAR_85 : A) (u : A -> Prop) (f : A -> B) (t : A -> Prop) : (term65 A B GEN_PVAR_85 u f t) = (term65 A B GEN_PVAR_85 u f t).
Proof. exact (MK_COMB (@lem3511876 A) (@lem3511875 A B GEN_PVAR_85 u f t)). Qed.
Lemma lem3511888 {A B : Type'} (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) (t : A -> Prop) (GEN_PVAR_85 : A) : (term2201 A B _37163 u f t GEN_PVAR_85) = (term2201 A B _37163 u f t GEN_PVAR_85).
Proof. exact (eq_refl (term2201 A B _37163 u f t GEN_PVAR_85)). Qed.
Lemma lem3511889 {A B : Type'} (_37163 : type627 A B) (GEN_PVAR_85 : A) (u : A -> Prop) (f : A -> B) (t : A -> Prop) : ((_37163 u f t GEN_PVAR_85) = (term65 A B GEN_PVAR_85 u f t)) = ((_37163 u f t GEN_PVAR_85) = (term65 A B GEN_PVAR_85 u f t)).
Proof. exact (MK_COMB (@lem3511888 A B _37163 u f t GEN_PVAR_85) (@lem3511877 A B GEN_PVAR_85 u f t)). Qed.
Lemma lem3511890 {A B : Type'} (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) (t : A -> Prop) : (term2203 A B _37163 u f t) = (term2203 A B _37163 u f t).
Proof. exact (fun_ext (fun GEN_PVAR_85 : A => @lem3511889 A B _37163 GEN_PVAR_85 u f t)). Qed.
Lemma lem3511891 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem3511892 {A B : Type'} (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) (t : A -> Prop) : (term2204 A B _37163 u f t) = (term2204 A B _37163 u f t).
Proof. exact (MK_COMB (@lem3511891 A) (@lem3511890 A B _37163 u f t)). Qed.
Lemma lem3511893 {A B : Type'} (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) : (term2205 A B _37163 u f) = (term2205 A B _37163 u f).
Proof. exact (fun_ext (fun t : A -> Prop => @lem3511892 A B _37163 u f t)). Qed.
Lemma lem3511894 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem3511895 {A B : Type'} (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) : (term2206 A B _37163 u f) = (term2206 A B _37163 u f).
Proof. exact (MK_COMB (@lem3511894 A) (@lem3511893 A B _37163 u f)). Qed.
Lemma lem3511896 {A B : Type'} (_37163 : type627 A B) (u : A -> Prop) : (term2207 A B _37163 u) = (term2207 A B _37163 u).
Proof. exact (fun_ext (fun f : A -> B => @lem3511895 A B _37163 u f)). Qed.
Lemma lem3511897 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem3511898 {A B : Type'} (_37163 : type627 A B) (u : A -> Prop) : (term2208 A B _37163 u) = (term2208 A B _37163 u).
Proof. exact (MK_COMB (@lem3511897 A B) (@lem3511896 A B _37163 u)). Qed.
Lemma lem3511899 {A B : Type'} (_37163 : type627 A B) : (term2209 A B _37163) = (term2209 A B _37163).
Proof. exact (fun_ext (fun u : A -> Prop => @lem3511898 A B _37163 u)). Qed.
Lemma lem3511900 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem3511901 {A B : Type'} (_37163 : type627 A B) : (term2210 A B _37163) = (term2210 A B _37163).
Proof. exact (MK_COMB (@lem3511900 A) (@lem3511899 A B _37163)). Qed.
Lemma lem3511902 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem3511903 {A B : Type'} (_37163 : type627 A B) : (term2211 A B _37163) = (term2211 A B _37163).
Proof. exact (MK_COMB (@lem3511902) (@lem3511901 A B _37163)). Qed.
Lemma lem3511904 {_90715 _90724 A B : Type'} (_37164 : type627 _90715 _90724) (_37165 : type627 _90715 A) (_37163 : type627 A B) (_37166 : type627 _90715 B) (h1 : _37166 = (term2002 _90715 B)) : (term2257 _90715 _90724 A B _37164 _37165 _37163) = (term2295 _90715 _90724 A B _37164 _37165 _37166 _37163).
Proof. exact (MK_COMB (@lem3511903 A B _37163) (@lem3511849 _90715 _90724 A B _37164 _37165 _37163 _37166 h1)). Qed.
Lemma lem3511905 {_90715 _90724 A B : Type'} (_37164 : type627 _90715 _90724) (_37165 : type627 _90715 A) (_37166 : type627 _90715 B) (h1 : _37166 = (term2002 _90715 B)) : (term2258 _90715 _90724 A B _37164 _37165) = (term2296 _90715 _90724 A B _37164 _37165 _37166).
Proof. exact (fun_ext (fun _37163 : type627 A B => @lem3511904 _90715 _90724 A B _37164 _37165 _37163 _37166 h1)). Qed.
Lemma lem3511906 {A B : Type'} : (@all ((A -> Prop) -> (A -> B) -> (A -> Prop) -> A -> Prop)) = (@all ((A -> Prop) -> (A -> B) -> (A -> Prop) -> A -> Prop)).
Proof. exact (eq_refl (@all ((A -> Prop) -> (A -> B) -> (A -> Prop) -> A -> Prop))). Qed.
Lemma lem3511907 {_90715 _90724 A B : Type'} (_37164 : type627 _90715 _90724) (_37165 : type627 _90715 A) (_37166 : type627 _90715 B) (h1 : _37166 = (term2002 _90715 B)) : (term2259 _90715 _90724 A B _37164 _37165) = (term2297 _90715 _90724 A B _37164 _37165 _37166).
Proof. exact (MK_COMB (@lem3511906 A B) (@lem3511905 _90715 _90724 A B _37164 _37165 _37166 h1)). Qed.
Lemma lem3511932 {_90715 _90724 : Type'} (GEN_PVAR_84 : _90715) (u : _90715 -> Prop) (f : _90715 -> _90724) (t : _90715 -> Prop) (x : _90715) : (term61 _90715 _90724 GEN_PVAR_84 u f t x) = (term61 _90715 _90724 GEN_PVAR_84 u f t x).
Proof. exact (eq_refl (term61 _90715 _90724 GEN_PVAR_84 u f t x)). Qed.
Lemma lem3511933 {_90715 _90724 : Type'} (GEN_PVAR_84 : _90715) (u : _90715 -> Prop) (f : _90715 -> _90724) (t : _90715 -> Prop) : (term63 _90715 _90724 GEN_PVAR_84 u f t) = (term63 _90715 _90724 GEN_PVAR_84 u f t).
Proof. exact (fun_ext (fun x : _90715 => @lem3511932 _90715 _90724 GEN_PVAR_84 u f t x)). Qed.
Lemma lem3511934 {_90715 : Type'} : (@ex _90715) = (@ex _90715).
Proof. exact (eq_refl (@ex _90715)). Qed.
Lemma lem3511935 {_90715 _90724 : Type'} (GEN_PVAR_84 : _90715) (u : _90715 -> Prop) (f : _90715 -> _90724) (t : _90715 -> Prop) : (term65 _90715 _90724 GEN_PVAR_84 u f t) = (term65 _90715 _90724 GEN_PVAR_84 u f t).
Proof. exact (MK_COMB (@lem3511934 _90715) (@lem3511933 _90715 _90724 GEN_PVAR_84 u f t)). Qed.
Lemma lem3511946 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) (u : _90715 -> Prop) (f : _90715 -> _90724) (t : _90715 -> Prop) (GEN_PVAR_84 : _90715) : (term2201 _90715 _90724 _37164 u f t GEN_PVAR_84) = (term2201 _90715 _90724 _37164 u f t GEN_PVAR_84).
Proof. exact (eq_refl (term2201 _90715 _90724 _37164 u f t GEN_PVAR_84)). Qed.
Lemma lem3511947 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) (GEN_PVAR_84 : _90715) (u : _90715 -> Prop) (f : _90715 -> _90724) (t : _90715 -> Prop) : ((_37164 u f t GEN_PVAR_84) = (term65 _90715 _90724 GEN_PVAR_84 u f t)) = ((_37164 u f t GEN_PVAR_84) = (term65 _90715 _90724 GEN_PVAR_84 u f t)).
Proof. exact (MK_COMB (@lem3511946 _90715 _90724 _37164 u f t GEN_PVAR_84) (@lem3511935 _90715 _90724 GEN_PVAR_84 u f t)). Qed.
Lemma lem3511948 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) (u : _90715 -> Prop) (f : _90715 -> _90724) (t : _90715 -> Prop) : (term2203 _90715 _90724 _37164 u f t) = (term2203 _90715 _90724 _37164 u f t).
Proof. exact (fun_ext (fun GEN_PVAR_84 : _90715 => @lem3511947 _90715 _90724 _37164 GEN_PVAR_84 u f t)). Qed.
Lemma lem3511949 {_90715 : Type'} : (@all _90715) = (@all _90715).
Proof. exact (eq_refl (@all _90715)). Qed.
Lemma lem3511950 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) (u : _90715 -> Prop) (f : _90715 -> _90724) (t : _90715 -> Prop) : (term2204 _90715 _90724 _37164 u f t) = (term2204 _90715 _90724 _37164 u f t).
Proof. exact (MK_COMB (@lem3511949 _90715) (@lem3511948 _90715 _90724 _37164 u f t)). Qed.
Lemma lem3511951 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) (u : _90715 -> Prop) (f : _90715 -> _90724) : (term2205 _90715 _90724 _37164 u f) = (term2205 _90715 _90724 _37164 u f).
Proof. exact (fun_ext (fun t : _90715 -> Prop => @lem3511950 _90715 _90724 _37164 u f t)). Qed.
Lemma lem3511952 {_90715 : Type'} : (@all (_90715 -> Prop)) = (@all (_90715 -> Prop)).
Proof. exact (eq_refl (@all (_90715 -> Prop))). Qed.
Lemma lem3511953 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) (u : _90715 -> Prop) (f : _90715 -> _90724) : (term2206 _90715 _90724 _37164 u f) = (term2206 _90715 _90724 _37164 u f).
Proof. exact (MK_COMB (@lem3511952 _90715) (@lem3511951 _90715 _90724 _37164 u f)). Qed.
Lemma lem3511954 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) (u : _90715 -> Prop) : (term2207 _90715 _90724 _37164 u) = (term2207 _90715 _90724 _37164 u).
Proof. exact (fun_ext (fun f : _90715 -> _90724 => @lem3511953 _90715 _90724 _37164 u f)). Qed.
Lemma lem3511955 {_90715 _90724 : Type'} : (@all (_90715 -> _90724)) = (@all (_90715 -> _90724)).
Proof. exact (eq_refl (@all (_90715 -> _90724))). Qed.
Lemma lem3511956 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) (u : _90715 -> Prop) : (term2208 _90715 _90724 _37164 u) = (term2208 _90715 _90724 _37164 u).
Proof. exact (MK_COMB (@lem3511955 _90715 _90724) (@lem3511954 _90715 _90724 _37164 u)). Qed.
Lemma lem3511957 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) : (term2209 _90715 _90724 _37164) = (term2209 _90715 _90724 _37164).
Proof. exact (fun_ext (fun u : _90715 -> Prop => @lem3511956 _90715 _90724 _37164 u)). Qed.
Lemma lem3511958 {_90715 : Type'} : (@all (_90715 -> Prop)) = (@all (_90715 -> Prop)).
Proof. exact (eq_refl (@all (_90715 -> Prop))). Qed.
Lemma lem3511959 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) : (term2210 _90715 _90724 _37164) = (term2210 _90715 _90724 _37164).
Proof. exact (MK_COMB (@lem3511958 _90715) (@lem3511957 _90715 _90724 _37164)). Qed.
Lemma lem3511960 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem3511961 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) : (term2211 _90715 _90724 _37164) = (term2211 _90715 _90724 _37164).
Proof. exact (MK_COMB (@lem3511960) (@lem3511959 _90715 _90724 _37164)). Qed.
Lemma lem3511962 {_90715 _90724 A B : Type'} (_37164 : type627 _90715 _90724) (_37165 : type627 _90715 A) (_37166 : type627 _90715 B) (h1 : _37166 = (term2002 _90715 B)) : (term2260 _90715 _90724 A B _37164 _37165) = (term2298 _90715 _90724 A B _37164 _37165 _37166).
Proof. exact (MK_COMB (@lem3511961 _90715 _90724 _37164) (@lem3511907 _90715 _90724 A B _37164 _37165 _37166 h1)). Qed.
Lemma lem3511963 {_90715 _90724 A B : Type'} (_37165 : type627 _90715 A) (_37166 : type627 _90715 B) (h1 : _37166 = (term2002 _90715 B)) : (term2261 _90715 _90724 A B _37165) = (term2299 _90715 _90724 A B _37165 _37166).
Proof. exact (fun_ext (fun _37164 : type627 _90715 _90724 => @lem3511962 _90715 _90724 A B _37164 _37165 _37166 h1)). Qed.
Lemma lem3511964 {_90715 _90724 : Type'} : (@all ((_90715 -> Prop) -> (_90715 -> _90724) -> (_90715 -> Prop) -> _90715 -> Prop)) = (@all ((_90715 -> Prop) -> (_90715 -> _90724) -> (_90715 -> Prop) -> _90715 -> Prop)).
Proof. exact (eq_refl (@all ((_90715 -> Prop) -> (_90715 -> _90724) -> (_90715 -> Prop) -> _90715 -> Prop))). Qed.
Lemma lem3511965 {_90715 _90724 A B : Type'} (_37165 : type627 _90715 A) (_37166 : type627 _90715 B) (h1 : _37166 = (term2002 _90715 B)) : (term2262 _90715 _90724 A B _37165) = (term2300 _90715 _90724 A B _37165 _37166).
Proof. exact (MK_COMB (@lem3511964 _90715 _90724) (@lem3511963 _90715 _90724 A B _37165 _37166 h1)). Qed.
Lemma lem3511990 {_90715 A : Type'} (GEN_PVAR_84 : _90715) (u : _90715 -> Prop) (f : _90715 -> A) (t : _90715 -> Prop) (x : _90715) : (term61 _90715 A GEN_PVAR_84 u f t x) = (term61 _90715 A GEN_PVAR_84 u f t x).
Proof. exact (eq_refl (term61 _90715 A GEN_PVAR_84 u f t x)). Qed.
Lemma lem3511991 {_90715 A : Type'} (GEN_PVAR_84 : _90715) (u : _90715 -> Prop) (f : _90715 -> A) (t : _90715 -> Prop) : (term63 _90715 A GEN_PVAR_84 u f t) = (term63 _90715 A GEN_PVAR_84 u f t).
Proof. exact (fun_ext (fun x : _90715 => @lem3511990 _90715 A GEN_PVAR_84 u f t x)). Qed.
Lemma lem3511992 {_90715 : Type'} : (@ex _90715) = (@ex _90715).
Proof. exact (eq_refl (@ex _90715)). Qed.
Lemma lem3511993 {_90715 A : Type'} (GEN_PVAR_84 : _90715) (u : _90715 -> Prop) (f : _90715 -> A) (t : _90715 -> Prop) : (term65 _90715 A GEN_PVAR_84 u f t) = (term65 _90715 A GEN_PVAR_84 u f t).
Proof. exact (MK_COMB (@lem3511992 _90715) (@lem3511991 _90715 A GEN_PVAR_84 u f t)). Qed.
Lemma lem3512004 {_90715 A : Type'} (_37165 : type627 _90715 A) (u : _90715 -> Prop) (f : _90715 -> A) (t : _90715 -> Prop) (GEN_PVAR_84 : _90715) : (term2201 _90715 A _37165 u f t GEN_PVAR_84) = (term2201 _90715 A _37165 u f t GEN_PVAR_84).
Proof. exact (eq_refl (term2201 _90715 A _37165 u f t GEN_PVAR_84)). Qed.
Lemma lem3512005 {_90715 A : Type'} (_37165 : type627 _90715 A) (GEN_PVAR_84 : _90715) (u : _90715 -> Prop) (f : _90715 -> A) (t : _90715 -> Prop) : ((_37165 u f t GEN_PVAR_84) = (term65 _90715 A GEN_PVAR_84 u f t)) = ((_37165 u f t GEN_PVAR_84) = (term65 _90715 A GEN_PVAR_84 u f t)).
Proof. exact (MK_COMB (@lem3512004 _90715 A _37165 u f t GEN_PVAR_84) (@lem3511993 _90715 A GEN_PVAR_84 u f t)). Qed.
Lemma lem3512006 {_90715 A : Type'} (_37165 : type627 _90715 A) (u : _90715 -> Prop) (f : _90715 -> A) (t : _90715 -> Prop) : (term2203 _90715 A _37165 u f t) = (term2203 _90715 A _37165 u f t).
Proof. exact (fun_ext (fun GEN_PVAR_84 : _90715 => @lem3512005 _90715 A _37165 GEN_PVAR_84 u f t)). Qed.
Lemma lem3512007 {_90715 : Type'} : (@all _90715) = (@all _90715).
Proof. exact (eq_refl (@all _90715)). Qed.
Lemma lem3512008 {_90715 A : Type'} (_37165 : type627 _90715 A) (u : _90715 -> Prop) (f : _90715 -> A) (t : _90715 -> Prop) : (term2204 _90715 A _37165 u f t) = (term2204 _90715 A _37165 u f t).
Proof. exact (MK_COMB (@lem3512007 _90715) (@lem3512006 _90715 A _37165 u f t)). Qed.
Lemma lem3512009 {_90715 A : Type'} (_37165 : type627 _90715 A) (u : _90715 -> Prop) (f : _90715 -> A) : (term2205 _90715 A _37165 u f) = (term2205 _90715 A _37165 u f).
Proof. exact (fun_ext (fun t : _90715 -> Prop => @lem3512008 _90715 A _37165 u f t)). Qed.
Lemma lem3512010 {_90715 : Type'} : (@all (_90715 -> Prop)) = (@all (_90715 -> Prop)).
Proof. exact (eq_refl (@all (_90715 -> Prop))). Qed.
Lemma lem3512011 {_90715 A : Type'} (_37165 : type627 _90715 A) (u : _90715 -> Prop) (f : _90715 -> A) : (term2206 _90715 A _37165 u f) = (term2206 _90715 A _37165 u f).
Proof. exact (MK_COMB (@lem3512010 _90715) (@lem3512009 _90715 A _37165 u f)). Qed.
Lemma lem3512012 {_90715 A : Type'} (_37165 : type627 _90715 A) (u : _90715 -> Prop) : (term2207 _90715 A _37165 u) = (term2207 _90715 A _37165 u).
Proof. exact (fun_ext (fun f : _90715 -> A => @lem3512011 _90715 A _37165 u f)). Qed.
Lemma lem3512013 {_90715 A : Type'} : (@all (_90715 -> A)) = (@all (_90715 -> A)).
Proof. exact (eq_refl (@all (_90715 -> A))). Qed.
Lemma lem3512014 {_90715 A : Type'} (_37165 : type627 _90715 A) (u : _90715 -> Prop) : (term2208 _90715 A _37165 u) = (term2208 _90715 A _37165 u).
Proof. exact (MK_COMB (@lem3512013 _90715 A) (@lem3512012 _90715 A _37165 u)). Qed.
Lemma lem3512015 {_90715 A : Type'} (_37165 : type627 _90715 A) : (term2209 _90715 A _37165) = (term2209 _90715 A _37165).
Proof. exact (fun_ext (fun u : _90715 -> Prop => @lem3512014 _90715 A _37165 u)). Qed.
Lemma lem3512016 {_90715 : Type'} : (@all (_90715 -> Prop)) = (@all (_90715 -> Prop)).
Proof. exact (eq_refl (@all (_90715 -> Prop))). Qed.
Lemma lem3512017 {_90715 A : Type'} (_37165 : type627 _90715 A) : (term2210 _90715 A _37165) = (term2210 _90715 A _37165).
Proof. exact (MK_COMB (@lem3512016 _90715) (@lem3512015 _90715 A _37165)). Qed.
Lemma lem3512018 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem3512019 {_90715 A : Type'} (_37165 : type627 _90715 A) : (term2211 _90715 A _37165) = (term2211 _90715 A _37165).
Proof. exact (MK_COMB (@lem3512018) (@lem3512017 _90715 A _37165)). Qed.
Lemma lem3512020 {_90715 _90724 A B : Type'} (_37165 : type627 _90715 A) (_37166 : type627 _90715 B) (h1 : _37166 = (term2002 _90715 B)) : (term2282 _90715 _90724 A B _37165) = (term2301 _90715 _90724 A B _37165 _37166).
Proof. exact (MK_COMB (@lem3512019 _90715 A _37165) (@lem3511965 _90715 _90724 A B _37165 _37166 h1)). Qed.
Lemma lem3512021 {_90715 _90724 A B : Type'} (_37166 : type627 _90715 B) (h1 : _37166 = (term2002 _90715 B)) : (term2283 _90715 _90724 A B) = (term2302 _90715 _90724 A B _37166).
Proof. exact (fun_ext (fun _37165 : type627 _90715 A => @lem3512020 _90715 _90724 A B _37165 _37166 h1)). Qed.
Lemma lem3512022 {_90715 A : Type'} : (@all ((_90715 -> Prop) -> (_90715 -> A) -> (_90715 -> Prop) -> _90715 -> Prop)) = (@all ((_90715 -> Prop) -> (_90715 -> A) -> (_90715 -> Prop) -> _90715 -> Prop)).
Proof. exact (eq_refl (@all ((_90715 -> Prop) -> (_90715 -> A) -> (_90715 -> Prop) -> _90715 -> Prop))). Qed.
Lemma lem3512023 {_90715 _90724 A B : Type'} (_37166 : type627 _90715 B) (h1 : _37166 = (term2002 _90715 B)) : (term2284 _90715 _90724 A B) = (term2303 _90715 _90724 A B _37166).
Proof. exact (MK_COMB (@lem3512022 _90715 A) (@lem3512021 _90715 _90724 A B _37166 h1)). Qed.
Lemma lem3512024 {_90715 _90724 A B : Type'} (_37166 : type627 _90715 B) : term2304 _90715 _90724 A B _37166.
Proof. exact (fun h0 : _37166 = (term2002 _90715 B) => @lem3512023 _90715 _90724 A B _37166 h0). Qed.
Lemma lem3512025 {_90715 _90724 A B : Type'} : term2305 _90715 _90724 A B.
Proof. exact (fun _37166 : type627 _90715 B => @lem3512024 _90715 _90724 A B _37166). Qed.
Lemma lem3512027 {_3603 : Type'} (P : Prop) (c : _3603) (Q : _3603 -> Prop) : term2146 _3603 P c Q.
Proof. exact (EQ_MP (@lem20230 _3603 P c Q) (@lem0)). Qed.
Lemma lem3512028 {_90715 B : Type'} (P : Prop) (c : type627 _90715 B) (Q : type132 _90715 B) : term2147 _90715 B P c Q.
Proof. exact (@lem3512027 (type627 _90715 B) P c Q). Qed.
Lemma lem3512029 {_90715 _90724 A B : Type'} : term2306 _90715 _90724 A B.
Proof. exact (@lem3512028 _90715 B (term2284 _90715 _90724 A B) (term2002 _90715 B) (term2307 _90715 _90724 A B)). Qed.
Lemma lem3512030 {_90715 _90724 A B : Type'} (_37166 : type627 _90715 B) : (term2308 _90715 _90724 A B _37166) = (term2303 _90715 _90724 A B _37166).
Proof. exact (eq_refl (term2308 _90715 _90724 A B _37166)). Qed.
Lemma lem3512031 {_90715 _90724 A B : Type'} : (term2309 _90715 _90724 A B) = (term2309 _90715 _90724 A B).
Proof. exact (eq_refl (term2309 _90715 _90724 A B)). Qed.
Lemma lem3512032 {_90715 _90724 A B : Type'} (_37166 : type627 _90715 B) : ((term2284 _90715 _90724 A B) = (term2308 _90715 _90724 A B _37166)) = ((term2284 _90715 _90724 A B) = (term2303 _90715 _90724 A B _37166)).
Proof. exact (MK_COMB (@lem3512031 _90715 _90724 A B) (@lem3512030 _90715 _90724 A B _37166)). Qed.
Lemma lem3512033 {_90715 B : Type'} (_37166 : type627 _90715 B) : (term2152 _90715 B _37166) = (term2152 _90715 B _37166).
Proof. exact (eq_refl (term2152 _90715 B _37166)). Qed.
Lemma lem3512034 {_90715 _90724 A B : Type'} (_37166 : type627 _90715 B) : (term2310 _90715 _90724 A B _37166) = (term2304 _90715 _90724 A B _37166).
Proof. exact (MK_COMB (@lem3512033 _90715 B _37166) (@lem3512032 _90715 _90724 A B _37166)). Qed.
Lemma lem3512035 {_90715 _90724 A B : Type'} : (term2311 _90715 _90724 A B) = (term2312 _90715 _90724 A B).
Proof. exact (fun_ext (fun _37166 : type627 _90715 B => @lem3512034 _90715 _90724 A B _37166)). Qed.
Lemma lem3512036 {_90715 B : Type'} : (@all ((_90715 -> Prop) -> (_90715 -> B) -> (_90715 -> Prop) -> _90715 -> Prop)) = (@all ((_90715 -> Prop) -> (_90715 -> B) -> (_90715 -> Prop) -> _90715 -> Prop)).
Proof. exact (eq_refl (@all ((_90715 -> Prop) -> (_90715 -> B) -> (_90715 -> Prop) -> _90715 -> Prop))). Qed.
Lemma lem3512037 {_90715 _90724 A B : Type'} : (term2313 _90715 _90724 A B) = (term2305 _90715 _90724 A B).
Proof. exact (MK_COMB (@lem3512036 _90715 B) (@lem3512035 _90715 _90724 A B)). Qed.
Lemma lem3512038 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem3512039 {_90715 _90724 A B : Type'} : (term2314 _90715 _90724 A B) = (term2315 _90715 _90724 A B).
Proof. exact (MK_COMB (@lem3512038) (@lem3512037 _90715 _90724 A B)). Qed.
Lemma lem3512040 {_90715 _90724 A B : Type'} (_37166 : type627 _90715 B) : (term2308 _90715 _90724 A B _37166) = (term2303 _90715 _90724 A B _37166).
Proof. exact (eq_refl (term2308 _90715 _90724 A B _37166)). Qed.
Lemma lem3512041 {_90715 B : Type'} (_37166 : type627 _90715 B) : (term2152 _90715 B _37166) = (term2152 _90715 B _37166).
Proof. exact (eq_refl (term2152 _90715 B _37166)). Qed.
Lemma lem3512042 {_90715 _90724 A B : Type'} (_37166 : type627 _90715 B) : (term2316 _90715 _90724 A B _37166) = (term2317 _90715 _90724 A B _37166).
Proof. exact (MK_COMB (@lem3512041 _90715 B _37166) (@lem3512040 _90715 _90724 A B _37166)). Qed.
Lemma lem3512043 {_90715 _90724 A B : Type'} : (term2318 _90715 _90724 A B) = (term2319 _90715 _90724 A B).
Proof. exact (fun_ext (fun _37166 : type627 _90715 B => @lem3512042 _90715 _90724 A B _37166)). Qed.
Lemma lem3512044 {_90715 B : Type'} : (@all ((_90715 -> Prop) -> (_90715 -> B) -> (_90715 -> Prop) -> _90715 -> Prop)) = (@all ((_90715 -> Prop) -> (_90715 -> B) -> (_90715 -> Prop) -> _90715 -> Prop)).
Proof. exact (eq_refl (@all ((_90715 -> Prop) -> (_90715 -> B) -> (_90715 -> Prop) -> _90715 -> Prop))). Qed.
Lemma lem3512045 {_90715 _90724 A B : Type'} : (term2320 _90715 _90724 A B) = (term2321 _90715 _90724 A B).
Proof. exact (MK_COMB (@lem3512044 _90715 B) (@lem3512043 _90715 _90724 A B)). Qed.
Lemma lem3512046 {_90715 _90724 A B : Type'} : (term2309 _90715 _90724 A B) = (term2309 _90715 _90724 A B).
Proof. exact (eq_refl (term2309 _90715 _90724 A B)). Qed.
Lemma lem3512047 {_90715 _90724 A B : Type'} : ((term2284 _90715 _90724 A B) = (term2320 _90715 _90724 A B)) = ((term2284 _90715 _90724 A B) = (term2321 _90715 _90724 A B)).
Proof. exact (MK_COMB (@lem3512046 _90715 _90724 A B) (@lem3512045 _90715 _90724 A B)). Qed.
Lemma lem3512048 {_90715 _90724 A B : Type'} : (term2306 _90715 _90724 A B) = (term2322 _90715 _90724 A B).
Proof. exact (MK_COMB (@lem3512039 _90715 _90724 A B) (@lem3512047 _90715 _90724 A B)). Qed.
Lemma lem3512049 {_90715 _90724 A B : Type'} : term2322 _90715 _90724 A B.
Proof. exact (EQ_MP (@lem3512048 _90715 _90724 A B) (@lem3512029 _90715 _90724 A B)). Qed.
Lemma lem3512050 {_90715 _90724 A B : Type'} : (term2284 _90715 _90724 A B) = (term2321 _90715 _90724 A B).
Proof. exact (@lem3512049 _90715 _90724 A B (@lem3512025 _90715 _90724 A B)). Qed.
Lemma lem3512052 {_3571 _3575 : Type'} (s : _3575 -> _3571) (t : _3575 -> _3571) : (s = (term2166 _3571 _3575 t)) = (term2167 _3571 _3575 s t).
Proof. exact (EQ_MP (@lem19792 _3571 _3575 s t) (@lem0)). Qed.
Lemma lem3512053 {_90715 B : Type'} (s : type627 _90715 B) (t : type627 _90715 B) : (s = (term2168 _90715 B t)) = (term2169 _90715 B s t).
Proof. exact (@lem3512052 (type527 _90715 B) (_90715 -> Prop) s t). Qed.
Lemma lem3512054 {_90715 B : Type'} (_37166 : type627 _90715 B) : (_37166 = (term2170 _90715 B)) = (term2171 _90715 B _37166).
Proof. exact (@lem3512053 _90715 B _37166 (term2002 _90715 B)). Qed.
Lemma lem3512055 {_90715 B : Type'} (u : _90715 -> Prop) : (term2003 _90715 B u) = (term2004 _90715 B u).
Proof. exact (eq_refl (term2003 _90715 B u)). Qed.
Lemma lem3512056 {_90715 B : Type'} : (term2170 _90715 B) = (term2002 _90715 B).
Proof. exact (fun_ext (fun u : _90715 -> Prop => @lem3512055 _90715 B u)). Qed.
Lemma lem3512057 {_90715 B : Type'} (_37166 : type627 _90715 B) : (@eq ((_90715 -> Prop) -> (_90715 -> B) -> (_90715 -> Prop) -> _90715 -> Prop) _37166) = (@eq ((_90715 -> Prop) -> (_90715 -> B) -> (_90715 -> Prop) -> _90715 -> Prop) _37166).
Proof. exact (eq_refl (@eq ((_90715 -> Prop) -> (_90715 -> B) -> (_90715 -> Prop) -> _90715 -> Prop) _37166)). Qed.
Lemma lem3512058 {_90715 B : Type'} (_37166 : type627 _90715 B) : (_37166 = (term2170 _90715 B)) = (_37166 = (term2002 _90715 B)).
Proof. exact (MK_COMB (@lem3512057 _90715 B _37166) (@lem3512056 _90715 B)). Qed.
Lemma lem3512059 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem3512060 {_90715 B : Type'} (_37166 : type627 _90715 B) : (term2172 _90715 B _37166) = (term2173 _90715 B _37166).
Proof. exact (MK_COMB (@lem3512059) (@lem3512058 _90715 B _37166)). Qed.
Lemma lem3512061 {_90715 B : Type'} (u : _90715 -> Prop) : (term2003 _90715 B u) = (term2004 _90715 B u).
Proof. exact (eq_refl (term2003 _90715 B u)). Qed.
Lemma lem3512062 {_90715 B : Type'} (_37166 : type627 _90715 B) (u : _90715 -> Prop) : (term2005 _90715 B _37166 u) = (term2005 _90715 B _37166 u).
Proof. exact (eq_refl (term2005 _90715 B _37166 u)). Qed.
Lemma lem3512063 {_90715 B : Type'} (_37166 : type627 _90715 B) (u : _90715 -> Prop) : ((_37166 u) = (term2003 _90715 B u)) = ((_37166 u) = (term2004 _90715 B u)).
Proof. exact (MK_COMB (@lem3512062 _90715 B _37166 u) (@lem3512061 _90715 B u)). Qed.
Lemma lem3512064 {_90715 B : Type'} (_37166 : type627 _90715 B) : (term2174 _90715 B _37166) = (term2175 _90715 B _37166).
Proof. exact (fun_ext (fun u : _90715 -> Prop => @lem3512063 _90715 B _37166 u)). Qed.
Lemma lem3512065 {_90715 : Type'} : (@all (_90715 -> Prop)) = (@all (_90715 -> Prop)).
Proof. exact (eq_refl (@all (_90715 -> Prop))). Qed.
Lemma lem3512066 {_90715 B : Type'} (_37166 : type627 _90715 B) : (term2171 _90715 B _37166) = (term2176 _90715 B _37166).
Proof. exact (MK_COMB (@lem3512065 _90715) (@lem3512064 _90715 B _37166)). Qed.
Lemma lem3512067 {_90715 B : Type'} (_37166 : type627 _90715 B) : ((_37166 = (term2170 _90715 B)) = (term2171 _90715 B _37166)) = ((_37166 = (term2002 _90715 B)) = (term2176 _90715 B _37166)).
Proof. exact (MK_COMB (@lem3512060 _90715 B _37166) (@lem3512066 _90715 B _37166)). Qed.
Lemma lem3512068 {_90715 B : Type'} (_37166 : type627 _90715 B) : (_37166 = (term2002 _90715 B)) = (term2176 _90715 B _37166).
Proof. exact (EQ_MP (@lem3512067 _90715 B _37166) (@lem3512054 _90715 B _37166)). Qed.
Lemma lem3512070 {_3571 _3575 : Type'} (s : _3575 -> _3571) (t : _3575 -> _3571) : (s = (term2166 _3571 _3575 t)) = (term2167 _3571 _3575 s t).
Proof. exact (EQ_MP (@lem19792 _3571 _3575 s t) (@lem0)). Qed.
Lemma lem3512071 {_90715 B : Type'} (s : type527 _90715 B) (t : type527 _90715 B) : (s = (term2177 _90715 B t)) = (term2178 _90715 B s t).
Proof. exact (@lem3512070 (type672 _90715) (_90715 -> B) s t). Qed.
Lemma lem3512072 {_90715 B : Type'} (_37166 : type627 _90715 B) (u : _90715 -> Prop) : ((_37166 u) = (term2179 _90715 B u)) = (term2180 _90715 B _37166 u).
Proof. exact (@lem3512071 _90715 B (_37166 u) (term2004 _90715 B u)). Qed.
Lemma lem3512073 {_90715 B : Type'} (u : _90715 -> Prop) (f : _90715 -> B) : (term2006 _90715 B u f) = (term2007 _90715 B u f).
Proof. exact (eq_refl (term2006 _90715 B u f)). Qed.
Lemma lem3512074 {_90715 B : Type'} (u : _90715 -> Prop) : (term2179 _90715 B u) = (term2004 _90715 B u).
Proof. exact (fun_ext (fun f : _90715 -> B => @lem3512073 _90715 B u f)). Qed.
Lemma lem3512075 {_90715 B : Type'} (_37166 : type627 _90715 B) (u : _90715 -> Prop) : (term2005 _90715 B _37166 u) = (term2005 _90715 B _37166 u).
Proof. exact (eq_refl (term2005 _90715 B _37166 u)). Qed.
Lemma lem3512076 {_90715 B : Type'} (_37166 : type627 _90715 B) (u : _90715 -> Prop) : ((_37166 u) = (term2179 _90715 B u)) = ((_37166 u) = (term2004 _90715 B u)).
Proof. exact (MK_COMB (@lem3512075 _90715 B _37166 u) (@lem3512074 _90715 B u)). Qed.
Lemma lem3512077 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem3512078 {_90715 B : Type'} (_37166 : type627 _90715 B) (u : _90715 -> Prop) : (term2181 _90715 B _37166 u) = (term2182 _90715 B _37166 u).
Proof. exact (MK_COMB (@lem3512077) (@lem3512076 _90715 B _37166 u)). Qed.
Lemma lem3512079 {_90715 B : Type'} (u : _90715 -> Prop) (f : _90715 -> B) : (term2006 _90715 B u f) = (term2007 _90715 B u f).
Proof. exact (eq_refl (term2006 _90715 B u f)). Qed.
Lemma lem3512080 {_90715 B : Type'} (_37166 : type627 _90715 B) (u : _90715 -> Prop) (f : _90715 -> B) : (term2008 _90715 B _37166 u f) = (term2008 _90715 B _37166 u f).
Proof. exact (eq_refl (term2008 _90715 B _37166 u f)). Qed.
Lemma lem3512081 {_90715 B : Type'} (_37166 : type627 _90715 B) (u : _90715 -> Prop) (f : _90715 -> B) : ((_37166 u f) = (term2006 _90715 B u f)) = ((_37166 u f) = (term2007 _90715 B u f)).
Proof. exact (MK_COMB (@lem3512080 _90715 B _37166 u f) (@lem3512079 _90715 B u f)). Qed.
Lemma lem3512082 {_90715 B : Type'} (_37166 : type627 _90715 B) (u : _90715 -> Prop) : (term2183 _90715 B _37166 u) = (term2184 _90715 B _37166 u).
Proof. exact (fun_ext (fun f : _90715 -> B => @lem3512081 _90715 B _37166 u f)). Qed.
Lemma lem3512083 {_90715 B : Type'} : (@all (_90715 -> B)) = (@all (_90715 -> B)).
Proof. exact (eq_refl (@all (_90715 -> B))). Qed.
Lemma lem3512084 {_90715 B : Type'} (_37166 : type627 _90715 B) (u : _90715 -> Prop) : (term2180 _90715 B _37166 u) = (term2185 _90715 B _37166 u).
Proof. exact (MK_COMB (@lem3512083 _90715 B) (@lem3512082 _90715 B _37166 u)). Qed.
Lemma lem3512085 {_90715 B : Type'} (_37166 : type627 _90715 B) (u : _90715 -> Prop) : (((_37166 u) = (term2179 _90715 B u)) = (term2180 _90715 B _37166 u)) = (((_37166 u) = (term2004 _90715 B u)) = (term2185 _90715 B _37166 u)).
Proof. exact (MK_COMB (@lem3512078 _90715 B _37166 u) (@lem3512084 _90715 B _37166 u)). Qed.
Lemma lem3512086 {_90715 B : Type'} (_37166 : type627 _90715 B) (u : _90715 -> Prop) : ((_37166 u) = (term2004 _90715 B u)) = (term2185 _90715 B _37166 u).
Proof. exact (EQ_MP (@lem3512085 _90715 B _37166 u) (@lem3512072 _90715 B _37166 u)). Qed.
Lemma lem3512088 {_3571 _3575 : Type'} (s : _3575 -> _3571) (t : _3575 -> _3571) : (s = (term2166 _3571 _3575 t)) = (term2167 _3571 _3575 s t).
Proof. exact (EQ_MP (@lem19792 _3571 _3575 s t) (@lem0)). Qed.
Lemma lem3512089 {_90715 : Type'} (s : type672 _90715) (t : type672 _90715) : (s = (term2186 _90715 t)) = (term2187 _90715 s t).
Proof. exact (@lem3512088 (_90715 -> Prop) (_90715 -> Prop) s t). Qed.
Lemma lem3512090 {_90715 B : Type'} (_37166 : type627 _90715 B) (u : _90715 -> Prop) (f : _90715 -> B) : ((_37166 u f) = (term2188 _90715 B u f)) = (term2189 _90715 B _37166 u f).
Proof. exact (@lem3512089 _90715 (_37166 u f) (term2007 _90715 B u f)). Qed.
Lemma lem3512091 {_90715 B : Type'} (u : _90715 -> Prop) (f : _90715 -> B) (t : _90715 -> Prop) : (term2009 _90715 B u f t) = (term67 _90715 B u f t).
Proof. exact (eq_refl (term2009 _90715 B u f t)). Qed.
Lemma lem3512092 {_90715 B : Type'} (u : _90715 -> Prop) (f : _90715 -> B) : (term2188 _90715 B u f) = (term2007 _90715 B u f).
Proof. exact (fun_ext (fun t : _90715 -> Prop => @lem3512091 _90715 B u f t)). Qed.
Lemma lem3512093 {_90715 B : Type'} (_37166 : type627 _90715 B) (u : _90715 -> Prop) (f : _90715 -> B) : (term2008 _90715 B _37166 u f) = (term2008 _90715 B _37166 u f).
Proof. exact (eq_refl (term2008 _90715 B _37166 u f)). Qed.
Lemma lem3512094 {_90715 B : Type'} (_37166 : type627 _90715 B) (u : _90715 -> Prop) (f : _90715 -> B) : ((_37166 u f) = (term2188 _90715 B u f)) = ((_37166 u f) = (term2007 _90715 B u f)).
Proof. exact (MK_COMB (@lem3512093 _90715 B _37166 u f) (@lem3512092 _90715 B u f)). Qed.
Lemma lem3512095 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem3512096 {_90715 B : Type'} (_37166 : type627 _90715 B) (u : _90715 -> Prop) (f : _90715 -> B) : (term2190 _90715 B _37166 u f) = (term2191 _90715 B _37166 u f).
Proof. exact (MK_COMB (@lem3512095) (@lem3512094 _90715 B _37166 u f)). Qed.
Lemma lem3512097 {_90715 B : Type'} (u : _90715 -> Prop) (f : _90715 -> B) (t : _90715 -> Prop) : (term2009 _90715 B u f t) = (term67 _90715 B u f t).
Proof. exact (eq_refl (term2009 _90715 B u f t)). Qed.
Lemma lem3512098 {_90715 B : Type'} (_37166 : type627 _90715 B) (u : _90715 -> Prop) (f : _90715 -> B) (t : _90715 -> Prop) : (term2010 _90715 B _37166 u f t) = (term2010 _90715 B _37166 u f t).
Proof. exact (eq_refl (term2010 _90715 B _37166 u f t)). Qed.
Lemma lem3512099 {_90715 B : Type'} (_37166 : type627 _90715 B) (u : _90715 -> Prop) (f : _90715 -> B) (t : _90715 -> Prop) : ((_37166 u f t) = (term2009 _90715 B u f t)) = ((_37166 u f t) = (term67 _90715 B u f t)).
Proof. exact (MK_COMB (@lem3512098 _90715 B _37166 u f t) (@lem3512097 _90715 B u f t)). Qed.
Lemma lem3512100 {_90715 B : Type'} (_37166 : type627 _90715 B) (u : _90715 -> Prop) (f : _90715 -> B) : (term2192 _90715 B _37166 u f) = (term2193 _90715 B _37166 u f).
Proof. exact (fun_ext (fun t : _90715 -> Prop => @lem3512099 _90715 B _37166 u f t)). Qed.
Lemma lem3512101 {_90715 : Type'} : (@all (_90715 -> Prop)) = (@all (_90715 -> Prop)).
Proof. exact (eq_refl (@all (_90715 -> Prop))). Qed.
Lemma lem3512102 {_90715 B : Type'} (_37166 : type627 _90715 B) (u : _90715 -> Prop) (f : _90715 -> B) : (term2189 _90715 B _37166 u f) = (term2194 _90715 B _37166 u f).
Proof. exact (MK_COMB (@lem3512101 _90715) (@lem3512100 _90715 B _37166 u f)). Qed.
Lemma lem3512103 {_90715 B : Type'} (_37166 : type627 _90715 B) (u : _90715 -> Prop) (f : _90715 -> B) : (((_37166 u f) = (term2188 _90715 B u f)) = (term2189 _90715 B _37166 u f)) = (((_37166 u f) = (term2007 _90715 B u f)) = (term2194 _90715 B _37166 u f)).
Proof. exact (MK_COMB (@lem3512096 _90715 B _37166 u f) (@lem3512102 _90715 B _37166 u f)). Qed.
Lemma lem3512104 {_90715 B : Type'} (_37166 : type627 _90715 B) (u : _90715 -> Prop) (f : _90715 -> B) : ((_37166 u f) = (term2007 _90715 B u f)) = (term2194 _90715 B _37166 u f).
Proof. exact (EQ_MP (@lem3512103 _90715 B _37166 u f) (@lem3512090 _90715 B _37166 u f)). Qed.
Lemma lem3512106 {_3571 _3575 : Type'} (s : _3575 -> _3571) (t : _3575 -> _3571) : (s = (term2166 _3571 _3575 t)) = (term2167 _3571 _3575 s t).
Proof. exact (EQ_MP (@lem19792 _3571 _3575 s t) (@lem0)). Qed.
Lemma lem3512107 {_90715 : Type'} (s : _90715 -> Prop) (t : _90715 -> Prop) : (s = (term1665 _90715 t)) = (term2195 _90715 s t).
Proof. exact (@lem3512106 Prop _90715 s t). Qed.
Lemma lem3512108 {_90715 B : Type'} (_37166 : type627 _90715 B) (u : _90715 -> Prop) (f : _90715 -> B) (t : _90715 -> Prop) : ((_37166 u f t) = (term2196 _90715 B u f t)) = (term2197 _90715 B _37166 u f t).
Proof. exact (@lem3512107 _90715 (_37166 u f t) (term67 _90715 B u f t)). Qed.
Lemma lem3512109 {_90715 B : Type'} (GEN_PVAR_84 : _90715) (u : _90715 -> Prop) (f : _90715 -> B) (t : _90715 -> Prop) : (term2198 _90715 B u f t GEN_PVAR_84) = (term65 _90715 B GEN_PVAR_84 u f t).
Proof. exact (eq_refl (term2198 _90715 B u f t GEN_PVAR_84)). Qed.
Lemma lem3512110 {_90715 B : Type'} (u : _90715 -> Prop) (f : _90715 -> B) (t : _90715 -> Prop) : (term2196 _90715 B u f t) = (term67 _90715 B u f t).
Proof. exact (fun_ext (fun GEN_PVAR_84 : _90715 => @lem3512109 _90715 B GEN_PVAR_84 u f t)). Qed.
Lemma lem3512111 {_90715 B : Type'} (_37166 : type627 _90715 B) (u : _90715 -> Prop) (f : _90715 -> B) (t : _90715 -> Prop) : (term2010 _90715 B _37166 u f t) = (term2010 _90715 B _37166 u f t).
Proof. exact (eq_refl (term2010 _90715 B _37166 u f t)). Qed.
Lemma lem3512112 {_90715 B : Type'} (_37166 : type627 _90715 B) (u : _90715 -> Prop) (f : _90715 -> B) (t : _90715 -> Prop) : ((_37166 u f t) = (term2196 _90715 B u f t)) = ((_37166 u f t) = (term67 _90715 B u f t)).
Proof. exact (MK_COMB (@lem3512111 _90715 B _37166 u f t) (@lem3512110 _90715 B u f t)). Qed.
Lemma lem3512113 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem3512114 {_90715 B : Type'} (_37166 : type627 _90715 B) (u : _90715 -> Prop) (f : _90715 -> B) (t : _90715 -> Prop) : (term2199 _90715 B _37166 u f t) = (term2200 _90715 B _37166 u f t).
Proof. exact (MK_COMB (@lem3512113) (@lem3512112 _90715 B _37166 u f t)). Qed.
Lemma lem3512115 {_90715 B : Type'} (GEN_PVAR_84 : _90715) (u : _90715 -> Prop) (f : _90715 -> B) (t : _90715 -> Prop) : (term2198 _90715 B u f t GEN_PVAR_84) = (term65 _90715 B GEN_PVAR_84 u f t).
Proof. exact (eq_refl (term2198 _90715 B u f t GEN_PVAR_84)). Qed.
Lemma lem3512116 {_90715 B : Type'} (_37166 : type627 _90715 B) (u : _90715 -> Prop) (f : _90715 -> B) (t : _90715 -> Prop) (GEN_PVAR_84 : _90715) : (term2201 _90715 B _37166 u f t GEN_PVAR_84) = (term2201 _90715 B _37166 u f t GEN_PVAR_84).
Proof. exact (eq_refl (term2201 _90715 B _37166 u f t GEN_PVAR_84)). Qed.
Lemma lem3512117 {_90715 B : Type'} (_37166 : type627 _90715 B) (GEN_PVAR_84 : _90715) (u : _90715 -> Prop) (f : _90715 -> B) (t : _90715 -> Prop) : ((_37166 u f t GEN_PVAR_84) = (term2198 _90715 B u f t GEN_PVAR_84)) = ((_37166 u f t GEN_PVAR_84) = (term65 _90715 B GEN_PVAR_84 u f t)).
Proof. exact (MK_COMB (@lem3512116 _90715 B _37166 u f t GEN_PVAR_84) (@lem3512115 _90715 B GEN_PVAR_84 u f t)). Qed.
Lemma lem3512118 {_90715 B : Type'} (_37166 : type627 _90715 B) (u : _90715 -> Prop) (f : _90715 -> B) (t : _90715 -> Prop) : (term2202 _90715 B _37166 u f t) = (term2203 _90715 B _37166 u f t).
Proof. exact (fun_ext (fun GEN_PVAR_84 : _90715 => @lem3512117 _90715 B _37166 GEN_PVAR_84 u f t)). Qed.
Lemma lem3512119 {_90715 : Type'} : (@all _90715) = (@all _90715).
Proof. exact (eq_refl (@all _90715)). Qed.
Lemma lem3512120 {_90715 B : Type'} (_37166 : type627 _90715 B) (u : _90715 -> Prop) (f : _90715 -> B) (t : _90715 -> Prop) : (term2197 _90715 B _37166 u f t) = (term2204 _90715 B _37166 u f t).
Proof. exact (MK_COMB (@lem3512119 _90715) (@lem3512118 _90715 B _37166 u f t)). Qed.
Lemma lem3512121 {_90715 B : Type'} (_37166 : type627 _90715 B) (u : _90715 -> Prop) (f : _90715 -> B) (t : _90715 -> Prop) : (((_37166 u f t) = (term2196 _90715 B u f t)) = (term2197 _90715 B _37166 u f t)) = (((_37166 u f t) = (term67 _90715 B u f t)) = (term2204 _90715 B _37166 u f t)).
Proof. exact (MK_COMB (@lem3512114 _90715 B _37166 u f t) (@lem3512120 _90715 B _37166 u f t)). Qed.
Lemma lem3512122 {_90715 B : Type'} (_37166 : type627 _90715 B) (u : _90715 -> Prop) (f : _90715 -> B) (t : _90715 -> Prop) : ((_37166 u f t) = (term67 _90715 B u f t)) = (term2204 _90715 B _37166 u f t).
Proof. exact (EQ_MP (@lem3512121 _90715 B _37166 u f t) (@lem3512108 _90715 B _37166 u f t)). Qed.
Lemma lem3512123 {_90715 B : Type'} (_37166 : type627 _90715 B) (GEN_PVAR_84 : _90715) (u : _90715 -> Prop) (f : _90715 -> B) (t : _90715 -> Prop) : ((_37166 u f t GEN_PVAR_84) = (term65 _90715 B GEN_PVAR_84 u f t)) = ((_37166 u f t GEN_PVAR_84) = (term65 _90715 B GEN_PVAR_84 u f t)).
Proof. exact (eq_refl ((_37166 u f t GEN_PVAR_84) = (term65 _90715 B GEN_PVAR_84 u f t))). Qed.
Lemma lem3512124 {_90715 B : Type'} (_37166 : type627 _90715 B) (u : _90715 -> Prop) (f : _90715 -> B) (t : _90715 -> Prop) : (term2203 _90715 B _37166 u f t) = (term2203 _90715 B _37166 u f t).
Proof. exact (fun_ext (fun GEN_PVAR_84 : _90715 => @lem3512123 _90715 B _37166 GEN_PVAR_84 u f t)). Qed.
Lemma lem3512125 {_90715 : Type'} : (@all _90715) = (@all _90715).
Proof. exact (eq_refl (@all _90715)). Qed.
Lemma lem3512126 {_90715 B : Type'} (_37166 : type627 _90715 B) (u : _90715 -> Prop) (f : _90715 -> B) (t : _90715 -> Prop) : (term2204 _90715 B _37166 u f t) = (term2204 _90715 B _37166 u f t).
Proof. exact (MK_COMB (@lem3512125 _90715) (@lem3512124 _90715 B _37166 u f t)). Qed.
Lemma lem3512127 {_90715 B : Type'} (_37166 : type627 _90715 B) (u : _90715 -> Prop) (f : _90715 -> B) (t : _90715 -> Prop) : ((_37166 u f t) = (term67 _90715 B u f t)) = (term2204 _90715 B _37166 u f t).
Proof. exact (TRANS (@lem3512122 _90715 B _37166 u f t) (@lem3512126 _90715 B _37166 u f t)). Qed.
Lemma lem3512128 {_90715 B : Type'} (_37166 : type627 _90715 B) (u : _90715 -> Prop) (f : _90715 -> B) : (term2193 _90715 B _37166 u f) = (term2205 _90715 B _37166 u f).
Proof. exact (fun_ext (fun t : _90715 -> Prop => @lem3512127 _90715 B _37166 u f t)). Qed.
Lemma lem3512129 {_90715 : Type'} : (@all (_90715 -> Prop)) = (@all (_90715 -> Prop)).
Proof. exact (eq_refl (@all (_90715 -> Prop))). Qed.
Lemma lem3512130 {_90715 B : Type'} (_37166 : type627 _90715 B) (u : _90715 -> Prop) (f : _90715 -> B) : (term2194 _90715 B _37166 u f) = (term2206 _90715 B _37166 u f).
Proof. exact (MK_COMB (@lem3512129 _90715) (@lem3512128 _90715 B _37166 u f)). Qed.
Lemma lem3512131 {_90715 B : Type'} (_37166 : type627 _90715 B) (u : _90715 -> Prop) (f : _90715 -> B) : ((_37166 u f) = (term2007 _90715 B u f)) = (term2206 _90715 B _37166 u f).
Proof. exact (TRANS (@lem3512104 _90715 B _37166 u f) (@lem3512130 _90715 B _37166 u f)). Qed.
Lemma lem3512132 {_90715 B : Type'} (_37166 : type627 _90715 B) (u : _90715 -> Prop) : (term2184 _90715 B _37166 u) = (term2207 _90715 B _37166 u).
Proof. exact (fun_ext (fun f : _90715 -> B => @lem3512131 _90715 B _37166 u f)). Qed.
Lemma lem3512133 {_90715 B : Type'} : (@all (_90715 -> B)) = (@all (_90715 -> B)).
Proof. exact (eq_refl (@all (_90715 -> B))). Qed.
Lemma lem3512134 {_90715 B : Type'} (_37166 : type627 _90715 B) (u : _90715 -> Prop) : (term2185 _90715 B _37166 u) = (term2208 _90715 B _37166 u).
Proof. exact (MK_COMB (@lem3512133 _90715 B) (@lem3512132 _90715 B _37166 u)). Qed.
Lemma lem3512135 {_90715 B : Type'} (_37166 : type627 _90715 B) (u : _90715 -> Prop) : ((_37166 u) = (term2004 _90715 B u)) = (term2208 _90715 B _37166 u).
Proof. exact (TRANS (@lem3512086 _90715 B _37166 u) (@lem3512134 _90715 B _37166 u)). Qed.
Lemma lem3512136 {_90715 B : Type'} (_37166 : type627 _90715 B) : (term2175 _90715 B _37166) = (term2209 _90715 B _37166).
Proof. exact (fun_ext (fun u : _90715 -> Prop => @lem3512135 _90715 B _37166 u)). Qed.
Lemma lem3512137 {_90715 : Type'} : (@all (_90715 -> Prop)) = (@all (_90715 -> Prop)).
Proof. exact (eq_refl (@all (_90715 -> Prop))). Qed.
Lemma lem3512138 {_90715 B : Type'} (_37166 : type627 _90715 B) : (term2176 _90715 B _37166) = (term2210 _90715 B _37166).
Proof. exact (MK_COMB (@lem3512137 _90715) (@lem3512136 _90715 B _37166)). Qed.
Lemma lem3512139 {_90715 B : Type'} (_37166 : type627 _90715 B) : (_37166 = (term2002 _90715 B)) = (term2210 _90715 B _37166).
Proof. exact (TRANS (@lem3512068 _90715 B _37166) (@lem3512138 _90715 B _37166)). Qed.
Lemma lem3512140 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem3512141 {_90715 B : Type'} (_37166 : type627 _90715 B) : (term2152 _90715 B _37166) = (term2211 _90715 B _37166).
Proof. exact (MK_COMB (@lem3512140) (@lem3512139 _90715 B _37166)). Qed.
Lemma lem3512142 {_90715 _90724 A B : Type'} (_37166 : type627 _90715 B) : (term2303 _90715 _90724 A B _37166) = (term2303 _90715 _90724 A B _37166).
Proof. exact (eq_refl (term2303 _90715 _90724 A B _37166)). Qed.
Lemma lem3512143 {_90715 _90724 A B : Type'} (_37166 : type627 _90715 B) : (term2317 _90715 _90724 A B _37166) = (term2323 _90715 _90724 A B _37166).
Proof. exact (MK_COMB (@lem3512141 _90715 B _37166) (@lem3512142 _90715 _90724 A B _37166)). Qed.
Lemma lem3512144 {_90715 _90724 A B : Type'} : (term2319 _90715 _90724 A B) = (term2324 _90715 _90724 A B).
Proof. exact (fun_ext (fun _37166 : type627 _90715 B => @lem3512143 _90715 _90724 A B _37166)). Qed.
Lemma lem3512145 {_90715 B : Type'} : (@all ((_90715 -> Prop) -> (_90715 -> B) -> (_90715 -> Prop) -> _90715 -> Prop)) = (@all ((_90715 -> Prop) -> (_90715 -> B) -> (_90715 -> Prop) -> _90715 -> Prop)).
Proof. exact (eq_refl (@all ((_90715 -> Prop) -> (_90715 -> B) -> (_90715 -> Prop) -> _90715 -> Prop))). Qed.
Lemma lem3512146 {_90715 _90724 A B : Type'} : (term2321 _90715 _90724 A B) = (term2325 _90715 _90724 A B).
Proof. exact (MK_COMB (@lem3512145 _90715 B) (@lem3512144 _90715 _90724 A B)). Qed.
Lemma lem3512147 {_90715 _90724 A B : Type'} : (term2309 _90715 _90724 A B) = (term2309 _90715 _90724 A B).
Proof. exact (eq_refl (term2309 _90715 _90724 A B)). Qed.
Lemma lem3512148 {_90715 _90724 A B : Type'} : ((term2284 _90715 _90724 A B) = (term2321 _90715 _90724 A B)) = ((term2284 _90715 _90724 A B) = (term2325 _90715 _90724 A B)).
Proof. exact (MK_COMB (@lem3512147 _90715 _90724 A B) (@lem3512146 _90715 _90724 A B)). Qed.
Lemma lem3512149 {_90715 _90724 A B : Type'} : (term2284 _90715 _90724 A B) = (term2325 _90715 _90724 A B).
Proof. exact (EQ_MP (@lem3512148 _90715 _90724 A B) (@lem3512050 _90715 _90724 A B)). Qed.
Lemma lem3512150 {_90715 A : Type'} (_37167 : type616 _90715 A) (h1 : _37167 = (term2326 _90715 A)) : _37167 = (term2326 _90715 A).
Proof. exact (h1). Qed.
Lemma lem3512151 {_90715 : Type'} (u : _90715 -> Prop) : u = u.
Proof. exact (eq_refl u). Qed.
Lemma lem3512152 {_90715 A : Type'} (u : _90715 -> Prop) (_37167 : type616 _90715 A) (h1 : _37167 = (term2326 _90715 A)) : (_37167 u) = (term2327 _90715 A u).
Proof. exact (MK_COMB (@lem3512150 _90715 A _37167 h1) (@lem3512151 _90715 u)). Qed.
Lemma lem3512153 {_90715 A : Type'} (u : _90715 -> Prop) : (term2327 _90715 A u) = (term2328 _90715 A u).
Proof. exact (eq_refl (term2327 _90715 A u)). Qed.
Lemma lem3512154 {_90715 A : Type'} (_37167 : type616 _90715 A) (u : _90715 -> Prop) : (term2329 _90715 A _37167 u) = (term2329 _90715 A _37167 u).
Proof. exact (eq_refl (term2329 _90715 A _37167 u)). Qed.
Lemma lem3512155 {_90715 A : Type'} (_37167 : type616 _90715 A) (u : _90715 -> Prop) : ((_37167 u) = (term2327 _90715 A u)) = ((_37167 u) = (term2328 _90715 A u)).
Proof. exact (MK_COMB (@lem3512154 _90715 A _37167 u) (@lem3512153 _90715 A u)). Qed.
Lemma lem3512156 {_90715 A : Type'} (u : _90715 -> Prop) (_37167 : type616 _90715 A) (h1 : _37167 = (term2326 _90715 A)) : (_37167 u) = (term2328 _90715 A u).
Proof. exact (EQ_MP (@lem3512155 _90715 A _37167 u) (@lem3512152 _90715 A u _37167 h1)). Qed.
Lemma lem3512157 {_90715 A : Type'} (f : type1413 _90715 A) : f = f.
Proof. exact (eq_refl f). Qed.
Lemma lem3512158 {_90715 A : Type'} (u : _90715 -> Prop) (f : type1413 _90715 A) (_37167 : type616 _90715 A) (h1 : _37167 = (term2326 _90715 A)) : (_37167 u f) = (term2330 _90715 A u f).
Proof. exact (MK_COMB (@lem3512156 _90715 A u _37167 h1) (@lem3512157 _90715 A f)). Qed.
Lemma lem3512159 {_90715 A : Type'} (u : _90715 -> Prop) (f : type1413 _90715 A) : (term2330 _90715 A u f) = (term2331 _90715 A u f).
Proof. exact (eq_refl (term2330 _90715 A u f)). Qed.
Lemma lem3512160 {_90715 A : Type'} (_37167 : type616 _90715 A) (u : _90715 -> Prop) (f : type1413 _90715 A) : (term2332 _90715 A _37167 u f) = (term2332 _90715 A _37167 u f).
Proof. exact (eq_refl (term2332 _90715 A _37167 u f)). Qed.
Lemma lem3512161 {_90715 A : Type'} (_37167 : type616 _90715 A) (u : _90715 -> Prop) (f : type1413 _90715 A) : ((_37167 u f) = (term2330 _90715 A u f)) = ((_37167 u f) = (term2331 _90715 A u f)).
Proof. exact (MK_COMB (@lem3512160 _90715 A _37167 u f) (@lem3512159 _90715 A u f)). Qed.
Lemma lem3512162 {_90715 A : Type'} (u : _90715 -> Prop) (f : type1413 _90715 A) (_37167 : type616 _90715 A) (h1 : _37167 = (term2326 _90715 A)) : (_37167 u f) = (term2331 _90715 A u f).
Proof. exact (EQ_MP (@lem3512161 _90715 A _37167 u f) (@lem3512158 _90715 A u f _37167 h1)). Qed.
Lemma lem3512163 {_90715 : Type'} (t : _90715 -> Prop) : t = t.
Proof. exact (eq_refl t). Qed.
Lemma lem3512164 {_90715 A : Type'} (u : _90715 -> Prop) (f : type1413 _90715 A) (t : _90715 -> Prop) (_37167 : type616 _90715 A) (h1 : _37167 = (term2326 _90715 A)) : (_37167 u f t) = (term2333 _90715 A u f t).
Proof. exact (MK_COMB (@lem3512162 _90715 A u f _37167 h1) (@lem3512163 _90715 t)). Qed.
Lemma lem3512165 {_90715 A : Type'} (u : _90715 -> Prop) (f : type1413 _90715 A) (t : _90715 -> Prop) : (term2333 _90715 A u f t) = (term2104 _90715 A u f t).
Proof. exact (eq_refl (term2333 _90715 A u f t)). Qed.
Lemma lem3512166 {_90715 A : Type'} (_37167 : type616 _90715 A) (u : _90715 -> Prop) (f : type1413 _90715 A) (t : _90715 -> Prop) : (term2334 _90715 A _37167 u f t) = (term2334 _90715 A _37167 u f t).
Proof. exact (eq_refl (term2334 _90715 A _37167 u f t)). Qed.
Lemma lem3512167 {_90715 A : Type'} (_37167 : type616 _90715 A) (u : _90715 -> Prop) (f : type1413 _90715 A) (t : _90715 -> Prop) : ((_37167 u f t) = (term2333 _90715 A u f t)) = ((_37167 u f t) = (term2104 _90715 A u f t)).
Proof. exact (MK_COMB (@lem3512166 _90715 A _37167 u f t) (@lem3512165 _90715 A u f t)). Qed.
Lemma lem3512168 {_90715 A : Type'} (u : _90715 -> Prop) (f : type1413 _90715 A) (t : _90715 -> Prop) (_37167 : type616 _90715 A) (h1 : _37167 = (term2326 _90715 A)) : (_37167 u f t) = (term2104 _90715 A u f t).
Proof. exact (EQ_MP (@lem3512167 _90715 A _37167 u f t) (@lem3512164 _90715 A u f t _37167 h1)). Qed.
Lemma lem3512188 {A B : Type'} (f : type678 A B) (g : type180 A) : ((term2011 A B f g) = (term2012 A B f g)) = ((term2011 A B f g) = (term2012 A B f g)).
Proof. exact (eq_refl ((term2011 A B f g) = (term2012 A B f g))). Qed.
Lemma lem3512189 {A : Type'} (t : type686 A) : t = t.
Proof. exact (eq_refl t). Qed.
Lemma lem3512217 {A B : Type'} (GEN_PVAR_84 : A -> Prop) (u : type686 A) (f : type678 A B) (t : type686 A) (x : A -> Prop) : (term2013 A B GEN_PVAR_84 u f t x) = (term2013 A B GEN_PVAR_84 u f t x).
Proof. exact (eq_refl (term2013 A B GEN_PVAR_84 u f t x)). Qed.
Lemma lem3512218 {A B : Type'} (GEN_PVAR_84 : A -> Prop) (u : type686 A) (f : type678 A B) (t : type686 A) : (term2014 A B GEN_PVAR_84 u f t) = (term2014 A B GEN_PVAR_84 u f t).
Proof. exact (fun_ext (fun x : A -> Prop => @lem3512217 A B GEN_PVAR_84 u f t x)). Qed.
Lemma lem3512219 {A : Type'} : (@ex (A -> Prop)) = (@ex (A -> Prop)).
Proof. exact (eq_refl (@ex (A -> Prop))). Qed.
Lemma lem3512220 {A B : Type'} (GEN_PVAR_84 : A -> Prop) (u : type686 A) (f : type678 A B) (t : type686 A) : (term2015 A B GEN_PVAR_84 u f t) = (term2015 A B GEN_PVAR_84 u f t).
Proof. exact (MK_COMB (@lem3512219 A) (@lem3512218 A B GEN_PVAR_84 u f t)). Qed.
Lemma lem3512221 {A B : Type'} (u : type686 A) (f : type678 A B) (t : type686 A) : (term2016 A B u f t) = (term2016 A B u f t).
Proof. exact (fun_ext (fun GEN_PVAR_84 : A -> Prop => @lem3512220 A B GEN_PVAR_84 u f t)). Qed.
Lemma lem3512222 {A : Type'} : (@GSPEC (A -> Prop)) = (@GSPEC (A -> Prop)).
Proof. exact (eq_refl (@GSPEC (A -> Prop))). Qed.
Lemma lem3512223 {A B : Type'} (u : type686 A) (f : type678 A B) (t : type686 A) : (term2017 A B u f t) = (term2017 A B u f t).
Proof. exact (MK_COMB (@lem3512222 A) (@lem3512221 A B u f t)). Qed.
Lemma lem3512224 {A : Type'} : (@SUBSET (A -> Prop)) = (@SUBSET (A -> Prop)).
Proof. exact (eq_refl (@SUBSET (A -> Prop))). Qed.
Lemma lem3512225 {A B : Type'} (u : type686 A) (f : type678 A B) (t : type686 A) : (term2018 A B u f t) = (term2018 A B u f t).
Proof. exact (MK_COMB (@lem3512224 A) (@lem3512223 A B u f t)). Qed.
Lemma lem3512226 {A B : Type'} (u : type686 A) (f : type678 A B) (t : type686 A) : (term2019 A B u f t) = (term2019 A B u f t).
Proof. exact (MK_COMB (@lem3512225 A B u f t) (@lem3512189 A t)). Qed.
Lemma lem3512233 {A : Type'} (t : type686 A) (u : type686 A) : (term2020 A t u) = (term2020 A t u).
Proof. exact (eq_refl (term2020 A t u)). Qed.
Lemma lem3512234 {A B : Type'} (u : type686 A) (f : type678 A B) (t : type686 A) : (term2021 A B u f t) = (term2021 A B u f t).
Proof. exact (MK_COMB (@lem3512233 A t u) (@lem3512226 A B u f t)). Qed.
Lemma lem3512241 {A : Type'} (t : type686 A) (g : type180 A) : (term2022 A t g) = (term2022 A t g).
Proof. exact (eq_refl (term2022 A t g)). Qed.
Lemma lem3512242 {A B : Type'} (g : type180 A) (u : type686 A) (f : type678 A B) (t : type686 A) : (term2023 A B g u f t) = (term2023 A B g u f t).
Proof. exact (MK_COMB (@lem3512241 A t g) (@lem3512234 A B u f t)). Qed.
Lemma lem3512243 {A B : Type'} (g : type180 A) (u : type686 A) (f : type678 A B) : (term2024 A B g u f) = (term2024 A B g u f).
Proof. exact (fun_ext (fun t : type686 A => @lem3512242 A B g u f t)). Qed.
Lemma lem3512244 {A : Type'} : (@all ((A -> Prop) -> Prop)) = (@all ((A -> Prop) -> Prop)).
Proof. exact (eq_refl (@all ((A -> Prop) -> Prop))). Qed.
Lemma lem3512245 {A B : Type'} (g : type180 A) (u : type686 A) (f : type678 A B) : (term2025 A B g u f) = (term2025 A B g u f).
Proof. exact (MK_COMB (@lem3512244 A) (@lem3512243 A B g u f)). Qed.
Lemma lem3512254 {A : Type'} (g : type180 A) : (term2026 A g) = (term2026 A g).
Proof. exact (eq_refl (term2026 A g)). Qed.
Lemma lem3512255 {A B : Type'} (g : type180 A) (u : type686 A) (f : type678 A B) : (term2027 A B g u f) = (term2027 A B g u f).
Proof. exact (MK_COMB (@lem3512254 A g) (@lem3512245 A B g u f)). Qed.
Lemma lem3512256 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem3512257 {A B : Type'} (g : type180 A) (u : type686 A) (f : type678 A B) : (term2028 A B g u f) = (term2028 A B g u f).
Proof. exact (MK_COMB (@lem3512256) (@lem3512255 A B g u f)). Qed.
Lemma lem3512258 {A B : Type'} (u : type686 A) (f : type678 A B) (g : type180 A) : (term2029 A B u f g) = (term2029 A B u f g).
Proof. exact (MK_COMB (@lem3512257 A B g u f) (@lem3512188 A B f g)). Qed.
Lemma lem3512259 {A B : Type'} (u : type686 A) (f : type678 A B) : (term2030 A B u f) = (term2030 A B u f).
Proof. exact (fun_ext (fun g : type180 A => @lem3512258 A B u f g)). Qed.
Lemma lem3512260 {A : Type'} : (@all (((A -> Prop) -> Prop) -> Prop)) = (@all (((A -> Prop) -> Prop) -> Prop)).
Proof. exact (eq_refl (@all (((A -> Prop) -> Prop) -> Prop))). Qed.
Lemma lem3512261 {A B : Type'} (u : type686 A) (f : type678 A B) : (term2031 A B u f) = (term2031 A B u f).
Proof. exact (MK_COMB (@lem3512260 A) (@lem3512259 A B u f)). Qed.
Lemma lem3512262 {A B : Type'} (u : type686 A) : (term2032 A B u) = (term2032 A B u).
Proof. exact (fun_ext (fun f : type678 A B => @lem3512261 A B u f)). Qed.
Lemma lem3512263 {A B : Type'} : (@all ((A -> Prop) -> B -> Prop)) = (@all ((A -> Prop) -> B -> Prop)).
Proof. exact (eq_refl (@all ((A -> Prop) -> B -> Prop))). Qed.
Lemma lem3512264 {A B : Type'} (u : type686 A) : (term2033 A B u) = (term2033 A B u).
Proof. exact (MK_COMB (@lem3512263 A B) (@lem3512262 A B u)). Qed.
Lemma lem3512265 {A B : Type'} : (term2034 A B) = (term2034 A B).
Proof. exact (fun_ext (fun u : type686 A => @lem3512264 A B u)). Qed.
Lemma lem3512266 {A : Type'} : (@all ((A -> Prop) -> Prop)) = (@all ((A -> Prop) -> Prop)).
Proof. exact (eq_refl (@all ((A -> Prop) -> Prop))). Qed.
Lemma lem3512267 {A B : Type'} : (term1961 A B) = (term1961 A B).
Proof. exact (MK_COMB (@lem3512266 A) (@lem3512265 A B)). Qed.
Lemma lem3512268 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem3512269 {A B : Type'} : (term1967 A B) = (term1967 A B).
Proof. exact (MK_COMB (@lem3512268) (@lem3512267 A B)). Qed.
Lemma lem3512288 {_90724 A : Type'} (f : type862 _90724 A) (g : type180 A) : ((term2035 _90724 A f g) = (term2036 _90724 A f g)) = ((term2035 _90724 A f g) = (term2036 _90724 A f g)).
Proof. exact (eq_refl ((term2035 _90724 A f g) = (term2036 _90724 A f g))). Qed.
Lemma lem3512289 {A : Type'} (t : type686 A) : t = t.
Proof. exact (eq_refl t). Qed.
Lemma lem3512316 {_90724 A : Type'} (GEN_PVAR_84 : A -> Prop) (u : type686 A) (f : type862 _90724 A) (t : type686 A) (x : A -> Prop) : (term2037 _90724 A GEN_PVAR_84 u f t x) = (term2037 _90724 A GEN_PVAR_84 u f t x).
Proof. exact (eq_refl (term2037 _90724 A GEN_PVAR_84 u f t x)). Qed.
Lemma lem3512317 {_90724 A : Type'} (GEN_PVAR_84 : A -> Prop) (u : type686 A) (f : type862 _90724 A) (t : type686 A) : (term2038 _90724 A GEN_PVAR_84 u f t) = (term2038 _90724 A GEN_PVAR_84 u f t).
Proof. exact (fun_ext (fun x : A -> Prop => @lem3512316 _90724 A GEN_PVAR_84 u f t x)). Qed.
Lemma lem3512318 {A : Type'} : (@ex (A -> Prop)) = (@ex (A -> Prop)).
Proof. exact (eq_refl (@ex (A -> Prop))). Qed.
Lemma lem3512319 {_90724 A : Type'} (GEN_PVAR_84 : A -> Prop) (u : type686 A) (f : type862 _90724 A) (t : type686 A) : (term2039 _90724 A GEN_PVAR_84 u f t) = (term2039 _90724 A GEN_PVAR_84 u f t).
Proof. exact (MK_COMB (@lem3512318 A) (@lem3512317 _90724 A GEN_PVAR_84 u f t)). Qed.
Lemma lem3512320 {_90724 A : Type'} (u : type686 A) (f : type862 _90724 A) (t : type686 A) : (term2040 _90724 A u f t) = (term2040 _90724 A u f t).
Proof. exact (fun_ext (fun GEN_PVAR_84 : A -> Prop => @lem3512319 _90724 A GEN_PVAR_84 u f t)). Qed.
Lemma lem3512321 {A : Type'} : (@GSPEC (A -> Prop)) = (@GSPEC (A -> Prop)).
Proof. exact (eq_refl (@GSPEC (A -> Prop))). Qed.
Lemma lem3512322 {_90724 A : Type'} (u : type686 A) (f : type862 _90724 A) (t : type686 A) : (term2041 _90724 A u f t) = (term2041 _90724 A u f t).
Proof. exact (MK_COMB (@lem3512321 A) (@lem3512320 _90724 A u f t)). Qed.
Lemma lem3512323 {A : Type'} : (@SUBSET (A -> Prop)) = (@SUBSET (A -> Prop)).
Proof. exact (eq_refl (@SUBSET (A -> Prop))). Qed.
Lemma lem3512324 {_90724 A : Type'} (u : type686 A) (f : type862 _90724 A) (t : type686 A) : (term2042 _90724 A u f t) = (term2042 _90724 A u f t).
Proof. exact (MK_COMB (@lem3512323 A) (@lem3512322 _90724 A u f t)). Qed.
Lemma lem3512325 {_90724 A : Type'} (u : type686 A) (f : type862 _90724 A) (t : type686 A) : (term2043 _90724 A u f t) = (term2043 _90724 A u f t).
Proof. exact (MK_COMB (@lem3512324 _90724 A u f t) (@lem3512289 A t)). Qed.
Lemma lem3512332 {A : Type'} (t : type686 A) (u : type686 A) : (term2020 A t u) = (term2020 A t u).
Proof. exact (eq_refl (term2020 A t u)). Qed.
Lemma lem3512333 {_90724 A : Type'} (u : type686 A) (f : type862 _90724 A) (t : type686 A) : (term2044 _90724 A u f t) = (term2044 _90724 A u f t).
Proof. exact (MK_COMB (@lem3512332 A t u) (@lem3512325 _90724 A u f t)). Qed.
Lemma lem3512340 {A : Type'} (t : type686 A) (g : type180 A) : (term2022 A t g) = (term2022 A t g).
Proof. exact (eq_refl (term2022 A t g)). Qed.
Lemma lem3512341 {_90724 A : Type'} (g : type180 A) (u : type686 A) (f : type862 _90724 A) (t : type686 A) : (term2045 _90724 A g u f t) = (term2045 _90724 A g u f t).
Proof. exact (MK_COMB (@lem3512340 A t g) (@lem3512333 _90724 A u f t)). Qed.
Lemma lem3512342 {_90724 A : Type'} (g : type180 A) (u : type686 A) (f : type862 _90724 A) : (term2046 _90724 A g u f) = (term2046 _90724 A g u f).
Proof. exact (fun_ext (fun t : type686 A => @lem3512341 _90724 A g u f t)). Qed.
Lemma lem3512343 {A : Type'} : (@all ((A -> Prop) -> Prop)) = (@all ((A -> Prop) -> Prop)).
Proof. exact (eq_refl (@all ((A -> Prop) -> Prop))). Qed.
Lemma lem3512344 {_90724 A : Type'} (g : type180 A) (u : type686 A) (f : type862 _90724 A) : (term2047 _90724 A g u f) = (term2047 _90724 A g u f).
Proof. exact (MK_COMB (@lem3512343 A) (@lem3512342 _90724 A g u f)). Qed.
Lemma lem3512353 {A : Type'} (g : type180 A) : (term2026 A g) = (term2026 A g).
Proof. exact (eq_refl (term2026 A g)). Qed.
Lemma lem3512354 {_90724 A : Type'} (g : type180 A) (u : type686 A) (f : type862 _90724 A) : (term2048 _90724 A g u f) = (term2048 _90724 A g u f).
Proof. exact (MK_COMB (@lem3512353 A g) (@lem3512344 _90724 A g u f)). Qed.
Lemma lem3512355 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem3512356 {_90724 A : Type'} (g : type180 A) (u : type686 A) (f : type862 _90724 A) : (term2049 _90724 A g u f) = (term2049 _90724 A g u f).
Proof. exact (MK_COMB (@lem3512355) (@lem3512354 _90724 A g u f)). Qed.
Lemma lem3512357 {_90724 A : Type'} (u : type686 A) (f : type862 _90724 A) (g : type180 A) : (term2050 _90724 A u f g) = (term2050 _90724 A u f g).
Proof. exact (MK_COMB (@lem3512356 _90724 A g u f) (@lem3512288 _90724 A f g)). Qed.
Lemma lem3512358 {_90724 A : Type'} (u : type686 A) (f : type862 _90724 A) : (term2051 _90724 A u f) = (term2051 _90724 A u f).
Proof. exact (fun_ext (fun g : type180 A => @lem3512357 _90724 A u f g)). Qed.
Lemma lem3512359 {A : Type'} : (@all (((A -> Prop) -> Prop) -> Prop)) = (@all (((A -> Prop) -> Prop) -> Prop)).
Proof. exact (eq_refl (@all (((A -> Prop) -> Prop) -> Prop))). Qed.
Lemma lem3512360 {_90724 A : Type'} (u : type686 A) (f : type862 _90724 A) : (term2052 _90724 A u f) = (term2052 _90724 A u f).
Proof. exact (MK_COMB (@lem3512359 A) (@lem3512358 _90724 A u f)). Qed.
Lemma lem3512361 {_90724 A : Type'} (u : type686 A) : (term2053 _90724 A u) = (term2053 _90724 A u).
Proof. exact (fun_ext (fun f : type862 _90724 A => @lem3512360 _90724 A u f)). Qed.
Lemma lem3512362 {_90724 A : Type'} : (@all ((A -> Prop) -> _90724)) = (@all ((A -> Prop) -> _90724)).
Proof. exact (eq_refl (@all ((A -> Prop) -> _90724))). Qed.
Lemma lem3512363 {_90724 A : Type'} (u : type686 A) : (term2054 _90724 A u) = (term2054 _90724 A u).
Proof. exact (MK_COMB (@lem3512362 _90724 A) (@lem3512361 _90724 A u)). Qed.
Lemma lem3512364 {_90724 A : Type'} : (term2055 _90724 A) = (term2055 _90724 A).
Proof. exact (fun_ext (fun u : type686 A => @lem3512363 _90724 A u)). Qed.
Lemma lem3512365 {A : Type'} : (@all ((A -> Prop) -> Prop)) = (@all ((A -> Prop) -> Prop)).
Proof. exact (eq_refl (@all ((A -> Prop) -> Prop))). Qed.
Lemma lem3512366 {_90724 A : Type'} : (term1959 _90724 A) = (term1959 _90724 A).
Proof. exact (MK_COMB (@lem3512365 A) (@lem3512364 _90724 A)). Qed.
Lemma lem3512367 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem3512368 {_90724 A : Type'} : (term1968 _90724 A) = (term1968 _90724 A).
Proof. exact (MK_COMB (@lem3512367) (@lem3512366 _90724 A)). Qed.
Lemma lem3512369 {_90724 A B : Type'} : (term1970 _90724 A B) = (term1970 _90724 A B).
Proof. exact (MK_COMB (@lem3512368 _90724 A) (@lem3512269 A B)). Qed.
Lemma lem3512388 {_90724 B : Type'} (f : B -> _90724) (g : type686 B) : ((term2056 _90724 B f g) = (term2057 _90724 B f g)) = ((term2056 _90724 B f g) = (term2057 _90724 B f g)).
Proof. exact (eq_refl ((term2056 _90724 B f g) = (term2057 _90724 B f g))). Qed.
Lemma lem3512389 {B : Type'} (t : B -> Prop) : t = t.
Proof. exact (eq_refl t). Qed.
Lemma lem3512416 {_90724 B : Type'} (GEN_PVAR_84 : B) (u : B -> Prop) (f : B -> _90724) (t : B -> Prop) (x : B) : (term2058 _90724 B GEN_PVAR_84 u f t x) = (term2058 _90724 B GEN_PVAR_84 u f t x).
Proof. exact (eq_refl (term2058 _90724 B GEN_PVAR_84 u f t x)). Qed.
Lemma lem3512417 {_90724 B : Type'} (GEN_PVAR_84 : B) (u : B -> Prop) (f : B -> _90724) (t : B -> Prop) : (term2059 _90724 B GEN_PVAR_84 u f t) = (term2059 _90724 B GEN_PVAR_84 u f t).
Proof. exact (fun_ext (fun x : B => @lem3512416 _90724 B GEN_PVAR_84 u f t x)). Qed.
Lemma lem3512418 {B : Type'} : (@ex B) = (@ex B).
Proof. exact (eq_refl (@ex B)). Qed.
Lemma lem3512419 {_90724 B : Type'} (GEN_PVAR_84 : B) (u : B -> Prop) (f : B -> _90724) (t : B -> Prop) : (term2060 _90724 B GEN_PVAR_84 u f t) = (term2060 _90724 B GEN_PVAR_84 u f t).
Proof. exact (MK_COMB (@lem3512418 B) (@lem3512417 _90724 B GEN_PVAR_84 u f t)). Qed.
Lemma lem3512420 {_90724 B : Type'} (u : B -> Prop) (f : B -> _90724) (t : B -> Prop) : (term2061 _90724 B u f t) = (term2061 _90724 B u f t).
Proof. exact (fun_ext (fun GEN_PVAR_84 : B => @lem3512419 _90724 B GEN_PVAR_84 u f t)). Qed.
Lemma lem3512421 {B : Type'} : (@GSPEC B) = (@GSPEC B).
Proof. exact (eq_refl (@GSPEC B)). Qed.
Lemma lem3512422 {_90724 B : Type'} (u : B -> Prop) (f : B -> _90724) (t : B -> Prop) : (term2062 _90724 B u f t) = (term2062 _90724 B u f t).
Proof. exact (MK_COMB (@lem3512421 B) (@lem3512420 _90724 B u f t)). Qed.
Lemma lem3512423 {B : Type'} : (@SUBSET B) = (@SUBSET B).
Proof. exact (eq_refl (@SUBSET B)). Qed.
Lemma lem3512424 {_90724 B : Type'} (u : B -> Prop) (f : B -> _90724) (t : B -> Prop) : (term2063 _90724 B u f t) = (term2063 _90724 B u f t).
Proof. exact (MK_COMB (@lem3512423 B) (@lem3512422 _90724 B u f t)). Qed.
Lemma lem3512425 {_90724 B : Type'} (u : B -> Prop) (f : B -> _90724) (t : B -> Prop) : (term2064 _90724 B u f t) = (term2064 _90724 B u f t).
Proof. exact (MK_COMB (@lem3512424 _90724 B u f t) (@lem3512389 B t)). Qed.
Lemma lem3512432 {B : Type'} (t : B -> Prop) (u : B -> Prop) : (term75 B t u) = (term75 B t u).
Proof. exact (eq_refl (term75 B t u)). Qed.
Lemma lem3512433 {_90724 B : Type'} (u : B -> Prop) (f : B -> _90724) (t : B -> Prop) : (term2065 _90724 B u f t) = (term2065 _90724 B u f t).
Proof. exact (MK_COMB (@lem3512432 B t u) (@lem3512425 _90724 B u f t)). Qed.
Lemma lem3512440 {B : Type'} (t : B -> Prop) (g : type686 B) : (term78 B t g) = (term78 B t g).
Proof. exact (eq_refl (term78 B t g)). Qed.
Lemma lem3512441 {_90724 B : Type'} (g : type686 B) (u : B -> Prop) (f : B -> _90724) (t : B -> Prop) : (term2066 _90724 B g u f t) = (term2066 _90724 B g u f t).
Proof. exact (MK_COMB (@lem3512440 B t g) (@lem3512433 _90724 B u f t)). Qed.
Lemma lem3512442 {_90724 B : Type'} (g : type686 B) (u : B -> Prop) (f : B -> _90724) : (term2067 _90724 B g u f) = (term2067 _90724 B g u f).
Proof. exact (fun_ext (fun t : B -> Prop => @lem3512441 _90724 B g u f t)). Qed.
Lemma lem3512443 {B : Type'} : (@all (B -> Prop)) = (@all (B -> Prop)).
Proof. exact (eq_refl (@all (B -> Prop))). Qed.
Lemma lem3512444 {_90724 B : Type'} (g : type686 B) (u : B -> Prop) (f : B -> _90724) : (term2068 _90724 B g u f) = (term2068 _90724 B g u f).
Proof. exact (MK_COMB (@lem3512443 B) (@lem3512442 _90724 B g u f)). Qed.
Lemma lem3512453 {B : Type'} (g : type686 B) : (term42 B g) = (term42 B g).
Proof. exact (eq_refl (term42 B g)). Qed.
Lemma lem3512454 {_90724 B : Type'} (g : type686 B) (u : B -> Prop) (f : B -> _90724) : (term2069 _90724 B g u f) = (term2069 _90724 B g u f).
Proof. exact (MK_COMB (@lem3512453 B g) (@lem3512444 _90724 B g u f)). Qed.
Lemma lem3512455 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem3512456 {_90724 B : Type'} (g : type686 B) (u : B -> Prop) (f : B -> _90724) : (term2070 _90724 B g u f) = (term2070 _90724 B g u f).
Proof. exact (MK_COMB (@lem3512455) (@lem3512454 _90724 B g u f)). Qed.
Lemma lem3512457 {_90724 B : Type'} (u : B -> Prop) (f : B -> _90724) (g : type686 B) : (term2071 _90724 B u f g) = (term2071 _90724 B u f g).
Proof. exact (MK_COMB (@lem3512456 _90724 B g u f) (@lem3512388 _90724 B f g)). Qed.
Lemma lem3512458 {_90724 B : Type'} (u : B -> Prop) (f : B -> _90724) : (term2072 _90724 B u f) = (term2072 _90724 B u f).
Proof. exact (fun_ext (fun g : type686 B => @lem3512457 _90724 B u f g)). Qed.
Lemma lem3512459 {B : Type'} : (@all ((B -> Prop) -> Prop)) = (@all ((B -> Prop) -> Prop)).
Proof. exact (eq_refl (@all ((B -> Prop) -> Prop))). Qed.
Lemma lem3512460 {_90724 B : Type'} (u : B -> Prop) (f : B -> _90724) : (term2073 _90724 B u f) = (term2073 _90724 B u f).
Proof. exact (MK_COMB (@lem3512459 B) (@lem3512458 _90724 B u f)). Qed.
Lemma lem3512461 {_90724 B : Type'} (u : B -> Prop) : (term2074 _90724 B u) = (term2074 _90724 B u).
Proof. exact (fun_ext (fun f : B -> _90724 => @lem3512460 _90724 B u f)). Qed.
Lemma lem3512462 {_90724 B : Type'} : (@all (B -> _90724)) = (@all (B -> _90724)).
Proof. exact (eq_refl (@all (B -> _90724))). Qed.
Lemma lem3512463 {_90724 B : Type'} (u : B -> Prop) : (term2075 _90724 B u) = (term2075 _90724 B u).
Proof. exact (MK_COMB (@lem3512462 _90724 B) (@lem3512461 _90724 B u)). Qed.
Lemma lem3512464 {_90724 B : Type'} : (term2076 _90724 B) = (term2076 _90724 B).
Proof. exact (fun_ext (fun u : B -> Prop => @lem3512463 _90724 B u)). Qed.
Lemma lem3512465 {B : Type'} : (@all (B -> Prop)) = (@all (B -> Prop)).
Proof. exact (eq_refl (@all (B -> Prop))). Qed.
Lemma lem3512466 {_90724 B : Type'} : (term1958 _90724 B) = (term1958 _90724 B).
Proof. exact (MK_COMB (@lem3512465 B) (@lem3512464 _90724 B)). Qed.
Lemma lem3512467 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem3512468 {_90724 B : Type'} : (term1971 _90724 B) = (term1971 _90724 B).
Proof. exact (MK_COMB (@lem3512467) (@lem3512466 _90724 B)). Qed.
Lemma lem3512469 {_90724 A B : Type'} : (term1973 _90724 A B) = (term1973 _90724 A B).
Proof. exact (MK_COMB (@lem3512468 _90724 B) (@lem3512369 _90724 A B)). Qed.
Lemma lem3512488 {A B : Type'} (f : A -> B) (g : type686 A) : ((term49 A B f g) = (term50 A B f g)) = ((term49 A B f g) = (term50 A B f g)).
Proof. exact (eq_refl ((term49 A B f g) = (term50 A B f g))). Qed.
Lemma lem3512517 {A B : Type'} (g : type686 A) (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) (t : A -> Prop) : (term2081 A B g _37163 u f t) = (term2081 A B g _37163 u f t).
Proof. exact (eq_refl (term2081 A B g _37163 u f t)). Qed.
Lemma lem3512518 {A B : Type'} (g : type686 A) (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) : (term2082 A B g _37163 u f) = (term2082 A B g _37163 u f).
Proof. exact (fun_ext (fun t : A -> Prop => @lem3512517 A B g _37163 u f t)). Qed.
Lemma lem3512519 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem3512520 {A B : Type'} (g : type686 A) (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) : (term2083 A B g _37163 u f) = (term2083 A B g _37163 u f).
Proof. exact (MK_COMB (@lem3512519 A) (@lem3512518 A B g _37163 u f)). Qed.
Lemma lem3512529 {A : Type'} (g : type686 A) : (term42 A g) = (term42 A g).
Proof. exact (eq_refl (term42 A g)). Qed.
Lemma lem3512530 {A B : Type'} (g : type686 A) (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) : (term2084 A B g _37163 u f) = (term2084 A B g _37163 u f).
Proof. exact (MK_COMB (@lem3512529 A g) (@lem3512520 A B g _37163 u f)). Qed.
Lemma lem3512531 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem3512532 {A B : Type'} (g : type686 A) (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) : (term2085 A B g _37163 u f) = (term2085 A B g _37163 u f).
Proof. exact (MK_COMB (@lem3512531) (@lem3512530 A B g _37163 u f)). Qed.
Lemma lem3512533 {A B : Type'} (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) (g : type686 A) : (term2086 A B _37163 u f g) = (term2086 A B _37163 u f g).
Proof. exact (MK_COMB (@lem3512532 A B g _37163 u f) (@lem3512488 A B f g)). Qed.
Lemma lem3512534 {A B : Type'} (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) : (term2088 A B _37163 u f) = (term2088 A B _37163 u f).
Proof. exact (fun_ext (fun g : type686 A => @lem3512533 A B _37163 u f g)). Qed.
Lemma lem3512535 {A : Type'} : (@all ((A -> Prop) -> Prop)) = (@all ((A -> Prop) -> Prop)).
Proof. exact (eq_refl (@all ((A -> Prop) -> Prop))). Qed.
Lemma lem3512536 {A B : Type'} (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) : (term2089 A B _37163 u f) = (term2089 A B _37163 u f).
Proof. exact (MK_COMB (@lem3512535 A) (@lem3512534 A B _37163 u f)). Qed.
Lemma lem3512537 {A B : Type'} (_37163 : type627 A B) (u : A -> Prop) : (term2091 A B _37163 u) = (term2091 A B _37163 u).
Proof. exact (fun_ext (fun f : A -> B => @lem3512536 A B _37163 u f)). Qed.
Lemma lem3512538 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem3512539 {A B : Type'} (_37163 : type627 A B) (u : A -> Prop) : (term2092 A B _37163 u) = (term2092 A B _37163 u).
Proof. exact (MK_COMB (@lem3512538 A B) (@lem3512537 A B _37163 u)). Qed.
Lemma lem3512540 {A B : Type'} (_37163 : type627 A B) : (term2094 A B _37163) = (term2094 A B _37163).
Proof. exact (fun_ext (fun u : A -> Prop => @lem3512539 A B _37163 u)). Qed.
Lemma lem3512541 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem3512542 {A B : Type'} (_37163 : type627 A B) : (term2095 A B _37163) = (term2095 A B _37163).
Proof. exact (MK_COMB (@lem3512541 A) (@lem3512540 A B _37163)). Qed.
Lemma lem3512543 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem3512544 {A B : Type'} (_37163 : type627 A B) : (term2096 A B _37163) = (term2096 A B _37163).
Proof. exact (MK_COMB (@lem3512543) (@lem3512542 A B _37163)). Qed.
Lemma lem3512545 {_90724 A B : Type'} (_37163 : type627 A B) : (term2097 _90724 A B _37163) = (term2097 _90724 A B _37163).
Proof. exact (MK_COMB (@lem3512544 A B _37163) (@lem3512469 _90724 A B)). Qed.
Lemma lem3512564 {_90724 A : Type'} (f : A -> _90724) (g : type686 A) : ((term2056 _90724 A f g) = (term2057 _90724 A f g)) = ((term2056 _90724 A f g) = (term2057 _90724 A f g)).
Proof. exact (eq_refl ((term2056 _90724 A f g) = (term2057 _90724 A f g))). Qed.
Lemma lem3512565 {A : Type'} (t : A -> Prop) : t = t.
Proof. exact (eq_refl t). Qed.
Lemma lem3512592 {_90724 A : Type'} (GEN_PVAR_84 : A) (u : A -> Prop) (f : A -> _90724) (t : A -> Prop) (x : A) : (term2058 _90724 A GEN_PVAR_84 u f t x) = (term2058 _90724 A GEN_PVAR_84 u f t x).
Proof. exact (eq_refl (term2058 _90724 A GEN_PVAR_84 u f t x)). Qed.
Lemma lem3512593 {_90724 A : Type'} (GEN_PVAR_84 : A) (u : A -> Prop) (f : A -> _90724) (t : A -> Prop) : (term2059 _90724 A GEN_PVAR_84 u f t) = (term2059 _90724 A GEN_PVAR_84 u f t).
Proof. exact (fun_ext (fun x : A => @lem3512592 _90724 A GEN_PVAR_84 u f t x)). Qed.
Lemma lem3512594 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem3512595 {_90724 A : Type'} (GEN_PVAR_84 : A) (u : A -> Prop) (f : A -> _90724) (t : A -> Prop) : (term2060 _90724 A GEN_PVAR_84 u f t) = (term2060 _90724 A GEN_PVAR_84 u f t).
Proof. exact (MK_COMB (@lem3512594 A) (@lem3512593 _90724 A GEN_PVAR_84 u f t)). Qed.
Lemma lem3512596 {_90724 A : Type'} (u : A -> Prop) (f : A -> _90724) (t : A -> Prop) : (term2061 _90724 A u f t) = (term2061 _90724 A u f t).
Proof. exact (fun_ext (fun GEN_PVAR_84 : A => @lem3512595 _90724 A GEN_PVAR_84 u f t)). Qed.
Lemma lem3512597 {A : Type'} : (@GSPEC A) = (@GSPEC A).
Proof. exact (eq_refl (@GSPEC A)). Qed.
Lemma lem3512598 {_90724 A : Type'} (u : A -> Prop) (f : A -> _90724) (t : A -> Prop) : (term2062 _90724 A u f t) = (term2062 _90724 A u f t).
Proof. exact (MK_COMB (@lem3512597 A) (@lem3512596 _90724 A u f t)). Qed.
Lemma lem3512599 {A : Type'} : (@SUBSET A) = (@SUBSET A).
Proof. exact (eq_refl (@SUBSET A)). Qed.
Lemma lem3512600 {_90724 A : Type'} (u : A -> Prop) (f : A -> _90724) (t : A -> Prop) : (term2063 _90724 A u f t) = (term2063 _90724 A u f t).
Proof. exact (MK_COMB (@lem3512599 A) (@lem3512598 _90724 A u f t)). Qed.
Lemma lem3512601 {_90724 A : Type'} (u : A -> Prop) (f : A -> _90724) (t : A -> Prop) : (term2064 _90724 A u f t) = (term2064 _90724 A u f t).
Proof. exact (MK_COMB (@lem3512600 _90724 A u f t) (@lem3512565 A t)). Qed.
Lemma lem3512608 {A : Type'} (t : A -> Prop) (u : A -> Prop) : (term75 A t u) = (term75 A t u).
Proof. exact (eq_refl (term75 A t u)). Qed.
Lemma lem3512609 {_90724 A : Type'} (u : A -> Prop) (f : A -> _90724) (t : A -> Prop) : (term2065 _90724 A u f t) = (term2065 _90724 A u f t).
Proof. exact (MK_COMB (@lem3512608 A t u) (@lem3512601 _90724 A u f t)). Qed.
Lemma lem3512616 {A : Type'} (t : A -> Prop) (g : type686 A) : (term78 A t g) = (term78 A t g).
Proof. exact (eq_refl (term78 A t g)). Qed.
Lemma lem3512617 {_90724 A : Type'} (g : type686 A) (u : A -> Prop) (f : A -> _90724) (t : A -> Prop) : (term2066 _90724 A g u f t) = (term2066 _90724 A g u f t).
Proof. exact (MK_COMB (@lem3512616 A t g) (@lem3512609 _90724 A u f t)). Qed.
Lemma lem3512618 {_90724 A : Type'} (g : type686 A) (u : A -> Prop) (f : A -> _90724) : (term2067 _90724 A g u f) = (term2067 _90724 A g u f).
Proof. exact (fun_ext (fun t : A -> Prop => @lem3512617 _90724 A g u f t)). Qed.
Lemma lem3512619 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem3512620 {_90724 A : Type'} (g : type686 A) (u : A -> Prop) (f : A -> _90724) : (term2068 _90724 A g u f) = (term2068 _90724 A g u f).
Proof. exact (MK_COMB (@lem3512619 A) (@lem3512618 _90724 A g u f)). Qed.
Lemma lem3512629 {A : Type'} (g : type686 A) : (term42 A g) = (term42 A g).
Proof. exact (eq_refl (term42 A g)). Qed.
Lemma lem3512630 {_90724 A : Type'} (g : type686 A) (u : A -> Prop) (f : A -> _90724) : (term2069 _90724 A g u f) = (term2069 _90724 A g u f).
Proof. exact (MK_COMB (@lem3512629 A g) (@lem3512620 _90724 A g u f)). Qed.
Lemma lem3512631 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem3512632 {_90724 A : Type'} (g : type686 A) (u : A -> Prop) (f : A -> _90724) : (term2070 _90724 A g u f) = (term2070 _90724 A g u f).
Proof. exact (MK_COMB (@lem3512631) (@lem3512630 _90724 A g u f)). Qed.
Lemma lem3512633 {_90724 A : Type'} (u : A -> Prop) (f : A -> _90724) (g : type686 A) : (term2071 _90724 A u f g) = (term2071 _90724 A u f g).
Proof. exact (MK_COMB (@lem3512632 _90724 A g u f) (@lem3512564 _90724 A f g)). Qed.
Lemma lem3512634 {_90724 A : Type'} (u : A -> Prop) (f : A -> _90724) : (term2072 _90724 A u f) = (term2072 _90724 A u f).
Proof. exact (fun_ext (fun g : type686 A => @lem3512633 _90724 A u f g)). Qed.
Lemma lem3512635 {A : Type'} : (@all ((A -> Prop) -> Prop)) = (@all ((A -> Prop) -> Prop)).
Proof. exact (eq_refl (@all ((A -> Prop) -> Prop))). Qed.
Lemma lem3512636 {_90724 A : Type'} (u : A -> Prop) (f : A -> _90724) : (term2073 _90724 A u f) = (term2073 _90724 A u f).
Proof. exact (MK_COMB (@lem3512635 A) (@lem3512634 _90724 A u f)). Qed.
Lemma lem3512637 {_90724 A : Type'} (u : A -> Prop) : (term2074 _90724 A u) = (term2074 _90724 A u).
Proof. exact (fun_ext (fun f : A -> _90724 => @lem3512636 _90724 A u f)). Qed.
Lemma lem3512638 {_90724 A : Type'} : (@all (A -> _90724)) = (@all (A -> _90724)).
Proof. exact (eq_refl (@all (A -> _90724))). Qed.
Lemma lem3512639 {_90724 A : Type'} (u : A -> Prop) : (term2075 _90724 A u) = (term2075 _90724 A u).
Proof. exact (MK_COMB (@lem3512638 _90724 A) (@lem3512637 _90724 A u)). Qed.
Lemma lem3512640 {_90724 A : Type'} : (term2076 _90724 A) = (term2076 _90724 A).
Proof. exact (fun_ext (fun u : A -> Prop => @lem3512639 _90724 A u)). Qed.
Lemma lem3512641 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem3512642 {_90724 A : Type'} : (term1958 _90724 A) = (term1958 _90724 A).
Proof. exact (MK_COMB (@lem3512641 A) (@lem3512640 _90724 A)). Qed.
Lemma lem3512643 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem3512644 {_90724 A : Type'} : (term1971 _90724 A) = (term1971 _90724 A).
Proof. exact (MK_COMB (@lem3512643) (@lem3512642 _90724 A)). Qed.
Lemma lem3512645 {_90724 A B : Type'} (_37163 : type627 A B) : (term2098 _90724 A B _37163) = (term2098 _90724 A B _37163).
Proof. exact (MK_COMB (@lem3512644 _90724 A) (@lem3512545 _90724 A B _37163)). Qed.
Lemma lem3512664 {_90715 A : Type'} (f : type1413 _90715 A) (g : type686 _90715) : ((term2099 _90715 A f g) = (term2100 _90715 A f g)) = ((term2099 _90715 A f g) = (term2100 _90715 A f g)).
Proof. exact (eq_refl ((term2099 _90715 A f g) = (term2100 _90715 A f g))). Qed.
Lemma lem3512665 {_90715 : Type'} (t : _90715 -> Prop) : t = t.
Proof. exact (eq_refl t). Qed.
Lemma lem3512667 {_90715 A : Type'} (u : _90715 -> Prop) (f : type1413 _90715 A) (t : _90715 -> Prop) (_37167 : type616 _90715 A) (h1 : _37167 = (term2326 _90715 A)) : (term2104 _90715 A u f t) = (_37167 u f t).
Proof. exact (SYM (@lem3512168 _90715 A u f t _37167 h1)). Qed.
Lemma lem3512668 {_90715 A : Type'} (u : _90715 -> Prop) (f : type1413 _90715 A) (t : _90715 -> Prop) (_37167 : type616 _90715 A) (h1 : _37167 = (term2326 _90715 A)) : (term2104 _90715 A u f t) = (_37167 u f t).
Proof. exact (@lem3512667 _90715 A u f t _37167 h1). Qed.
Lemma lem3512669 {_90715 : Type'} : (@GSPEC _90715) = (@GSPEC _90715).
Proof. exact (eq_refl (@GSPEC _90715)). Qed.
Lemma lem3512670 {_90715 A : Type'} (u : _90715 -> Prop) (f : type1413 _90715 A) (t : _90715 -> Prop) (_37167 : type616 _90715 A) (h1 : _37167 = (term2326 _90715 A)) : (term2105 _90715 A u f t) = (term2335 _90715 A _37167 u f t).
Proof. exact (MK_COMB (@lem3512669 _90715) (@lem3512668 _90715 A u f t _37167 h1)). Qed.
Lemma lem3512671 {_90715 : Type'} : (@SUBSET _90715) = (@SUBSET _90715).
Proof. exact (eq_refl (@SUBSET _90715)). Qed.
Lemma lem3512672 {_90715 A : Type'} (u : _90715 -> Prop) (f : type1413 _90715 A) (t : _90715 -> Prop) (_37167 : type616 _90715 A) (h1 : _37167 = (term2326 _90715 A)) : (term2106 _90715 A u f t) = (term2336 _90715 A _37167 u f t).
Proof. exact (MK_COMB (@lem3512671 _90715) (@lem3512670 _90715 A u f t _37167 h1)). Qed.
Lemma lem3512673 {_90715 A : Type'} (u : _90715 -> Prop) (f : type1413 _90715 A) (t : _90715 -> Prop) (_37167 : type616 _90715 A) (h1 : _37167 = (term2326 _90715 A)) : (term2107 _90715 A u f t) = (term2337 _90715 A _37167 u f t).
Proof. exact (MK_COMB (@lem3512672 _90715 A u f t _37167 h1) (@lem3512665 _90715 t)). Qed.
Lemma lem3512680 {_90715 : Type'} (t : _90715 -> Prop) (u : _90715 -> Prop) : (term75 _90715 t u) = (term75 _90715 t u).
Proof. exact (eq_refl (term75 _90715 t u)). Qed.
Lemma lem3512681 {_90715 A : Type'} (u : _90715 -> Prop) (f : type1413 _90715 A) (t : _90715 -> Prop) (_37167 : type616 _90715 A) (h1 : _37167 = (term2326 _90715 A)) : (term2108 _90715 A u f t) = (term2338 _90715 A _37167 u f t).
Proof. exact (MK_COMB (@lem3512680 _90715 t u) (@lem3512673 _90715 A u f t _37167 h1)). Qed.
Lemma lem3512688 {_90715 : Type'} (t : _90715 -> Prop) (g : type686 _90715) : (term78 _90715 t g) = (term78 _90715 t g).
Proof. exact (eq_refl (term78 _90715 t g)). Qed.
Lemma lem3512689 {_90715 A : Type'} (g : type686 _90715) (u : _90715 -> Prop) (f : type1413 _90715 A) (t : _90715 -> Prop) (_37167 : type616 _90715 A) (h1 : _37167 = (term2326 _90715 A)) : (term2109 _90715 A g u f t) = (term2339 _90715 A g _37167 u f t).
Proof. exact (MK_COMB (@lem3512688 _90715 t g) (@lem3512681 _90715 A u f t _37167 h1)). Qed.
Lemma lem3512690 {_90715 A : Type'} (g : type686 _90715) (u : _90715 -> Prop) (f : type1413 _90715 A) (_37167 : type616 _90715 A) (h1 : _37167 = (term2326 _90715 A)) : (term2110 _90715 A g u f) = (term2340 _90715 A g _37167 u f).
Proof. exact (fun_ext (fun t : _90715 -> Prop => @lem3512689 _90715 A g u f t _37167 h1)). Qed.
Lemma lem3512691 {_90715 : Type'} : (@all (_90715 -> Prop)) = (@all (_90715 -> Prop)).
Proof. exact (eq_refl (@all (_90715 -> Prop))). Qed.
Lemma lem3512692 {_90715 A : Type'} (g : type686 _90715) (u : _90715 -> Prop) (f : type1413 _90715 A) (_37167 : type616 _90715 A) (h1 : _37167 = (term2326 _90715 A)) : (term2111 _90715 A g u f) = (term2341 _90715 A g _37167 u f).
Proof. exact (MK_COMB (@lem3512691 _90715) (@lem3512690 _90715 A g u f _37167 h1)). Qed.
Lemma lem3512701 {_90715 : Type'} (g : type686 _90715) : (term42 _90715 g) = (term42 _90715 g).
Proof. exact (eq_refl (term42 _90715 g)). Qed.
Lemma lem3512702 {_90715 A : Type'} (g : type686 _90715) (u : _90715 -> Prop) (f : type1413 _90715 A) (_37167 : type616 _90715 A) (h1 : _37167 = (term2326 _90715 A)) : (term2112 _90715 A g u f) = (term2342 _90715 A g _37167 u f).
Proof. exact (MK_COMB (@lem3512701 _90715 g) (@lem3512692 _90715 A g u f _37167 h1)). Qed.
Lemma lem3512703 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem3512704 {_90715 A : Type'} (g : type686 _90715) (u : _90715 -> Prop) (f : type1413 _90715 A) (_37167 : type616 _90715 A) (h1 : _37167 = (term2326 _90715 A)) : (term2113 _90715 A g u f) = (term2343 _90715 A g _37167 u f).
Proof. exact (MK_COMB (@lem3512703) (@lem3512702 _90715 A g u f _37167 h1)). Qed.
Lemma lem3512705 {_90715 A : Type'} (u : _90715 -> Prop) (f : type1413 _90715 A) (g : type686 _90715) (_37167 : type616 _90715 A) (h1 : _37167 = (term2326 _90715 A)) : (term2114 _90715 A u f g) = (term2344 _90715 A _37167 u f g).
Proof. exact (MK_COMB (@lem3512704 _90715 A g u f _37167 h1) (@lem3512664 _90715 A f g)). Qed.
Lemma lem3512706 {_90715 A : Type'} (u : _90715 -> Prop) (f : type1413 _90715 A) (_37167 : type616 _90715 A) (h1 : _37167 = (term2326 _90715 A)) : (term2115 _90715 A u f) = (term2345 _90715 A _37167 u f).
Proof. exact (fun_ext (fun g : type686 _90715 => @lem3512705 _90715 A u f g _37167 h1)). Qed.
Lemma lem3512707 {_90715 : Type'} : (@all ((_90715 -> Prop) -> Prop)) = (@all ((_90715 -> Prop) -> Prop)).
Proof. exact (eq_refl (@all ((_90715 -> Prop) -> Prop))). Qed.
Lemma lem3512708 {_90715 A : Type'} (u : _90715 -> Prop) (f : type1413 _90715 A) (_37167 : type616 _90715 A) (h1 : _37167 = (term2326 _90715 A)) : (term2116 _90715 A u f) = (term2346 _90715 A _37167 u f).
Proof. exact (MK_COMB (@lem3512707 _90715) (@lem3512706 _90715 A u f _37167 h1)). Qed.
Lemma lem3512709 {_90715 A : Type'} (u : _90715 -> Prop) (_37167 : type616 _90715 A) (h1 : _37167 = (term2326 _90715 A)) : (term2117 _90715 A u) = (term2347 _90715 A _37167 u).
Proof. exact (fun_ext (fun f : type1413 _90715 A => @lem3512708 _90715 A u f _37167 h1)). Qed.
Lemma lem3512710 {_90715 A : Type'} : (@all (_90715 -> A -> Prop)) = (@all (_90715 -> A -> Prop)).
Proof. exact (eq_refl (@all (_90715 -> A -> Prop))). Qed.
Lemma lem3512711 {_90715 A : Type'} (u : _90715 -> Prop) (_37167 : type616 _90715 A) (h1 : _37167 = (term2326 _90715 A)) : (term2118 _90715 A u) = (term2348 _90715 A _37167 u).
Proof. exact (MK_COMB (@lem3512710 _90715 A) (@lem3512709 _90715 A u _37167 h1)). Qed.
Lemma lem3512712 {_90715 A : Type'} (_37167 : type616 _90715 A) (h1 : _37167 = (term2326 _90715 A)) : (term2119 _90715 A) = (term2349 _90715 A _37167).
Proof. exact (fun_ext (fun u : _90715 -> Prop => @lem3512711 _90715 A u _37167 h1)). Qed.
Lemma lem3512713 {_90715 : Type'} : (@all (_90715 -> Prop)) = (@all (_90715 -> Prop)).
Proof. exact (eq_refl (@all (_90715 -> Prop))). Qed.
Lemma lem3512714 {_90715 A : Type'} (_37167 : type616 _90715 A) (h1 : _37167 = (term2326 _90715 A)) : (term1960 _90715 A) = (term2350 _90715 A _37167).
Proof. exact (MK_COMB (@lem3512713 _90715) (@lem3512712 _90715 A _37167 h1)). Qed.
Lemma lem3512715 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem3512716 {_90715 A : Type'} (_37167 : type616 _90715 A) (h1 : _37167 = (term2326 _90715 A)) : (term1979 _90715 A) = (term2351 _90715 A _37167).
Proof. exact (MK_COMB (@lem3512715) (@lem3512714 _90715 A _37167 h1)). Qed.
Lemma lem3512717 {_90715 _90724 A B : Type'} (_37163 : type627 A B) (_37167 : type616 _90715 A) (h1 : _37167 = (term2326 _90715 A)) : (term2120 _90715 _90724 A B _37163) = (term2352 _90715 _90724 A B _37167 _37163).
Proof. exact (MK_COMB (@lem3512716 _90715 A _37167 h1) (@lem3512645 _90724 A B _37163)). Qed.
Lemma lem3512736 {_90715 B : Type'} (f : _90715 -> B) (g : type686 _90715) : ((term49 _90715 B f g) = (term50 _90715 B f g)) = ((term49 _90715 B f g) = (term50 _90715 B f g)).
Proof. exact (eq_refl ((term49 _90715 B f g) = (term50 _90715 B f g))). Qed.
Lemma lem3512765 {_90715 B : Type'} (g : type686 _90715) (_37166 : type627 _90715 B) (u : _90715 -> Prop) (f : _90715 -> B) (t : _90715 -> Prop) : (term2081 _90715 B g _37166 u f t) = (term2081 _90715 B g _37166 u f t).
Proof. exact (eq_refl (term2081 _90715 B g _37166 u f t)). Qed.
Lemma lem3512766 {_90715 B : Type'} (g : type686 _90715) (_37166 : type627 _90715 B) (u : _90715 -> Prop) (f : _90715 -> B) : (term2082 _90715 B g _37166 u f) = (term2082 _90715 B g _37166 u f).
Proof. exact (fun_ext (fun t : _90715 -> Prop => @lem3512765 _90715 B g _37166 u f t)). Qed.
Lemma lem3512767 {_90715 : Type'} : (@all (_90715 -> Prop)) = (@all (_90715 -> Prop)).
Proof. exact (eq_refl (@all (_90715 -> Prop))). Qed.
Lemma lem3512768 {_90715 B : Type'} (g : type686 _90715) (_37166 : type627 _90715 B) (u : _90715 -> Prop) (f : _90715 -> B) : (term2083 _90715 B g _37166 u f) = (term2083 _90715 B g _37166 u f).
Proof. exact (MK_COMB (@lem3512767 _90715) (@lem3512766 _90715 B g _37166 u f)). Qed.
Lemma lem3512777 {_90715 : Type'} (g : type686 _90715) : (term42 _90715 g) = (term42 _90715 g).
Proof. exact (eq_refl (term42 _90715 g)). Qed.
Lemma lem3512778 {_90715 B : Type'} (g : type686 _90715) (_37166 : type627 _90715 B) (u : _90715 -> Prop) (f : _90715 -> B) : (term2084 _90715 B g _37166 u f) = (term2084 _90715 B g _37166 u f).
Proof. exact (MK_COMB (@lem3512777 _90715 g) (@lem3512768 _90715 B g _37166 u f)). Qed.
Lemma lem3512779 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem3512780 {_90715 B : Type'} (g : type686 _90715) (_37166 : type627 _90715 B) (u : _90715 -> Prop) (f : _90715 -> B) : (term2085 _90715 B g _37166 u f) = (term2085 _90715 B g _37166 u f).
Proof. exact (MK_COMB (@lem3512779) (@lem3512778 _90715 B g _37166 u f)). Qed.
Lemma lem3512781 {_90715 B : Type'} (_37166 : type627 _90715 B) (u : _90715 -> Prop) (f : _90715 -> B) (g : type686 _90715) : (term2086 _90715 B _37166 u f g) = (term2086 _90715 B _37166 u f g).
Proof. exact (MK_COMB (@lem3512780 _90715 B g _37166 u f) (@lem3512736 _90715 B f g)). Qed.
Lemma lem3512782 {_90715 B : Type'} (_37166 : type627 _90715 B) (u : _90715 -> Prop) (f : _90715 -> B) : (term2088 _90715 B _37166 u f) = (term2088 _90715 B _37166 u f).
Proof. exact (fun_ext (fun g : type686 _90715 => @lem3512781 _90715 B _37166 u f g)). Qed.
Lemma lem3512783 {_90715 : Type'} : (@all ((_90715 -> Prop) -> Prop)) = (@all ((_90715 -> Prop) -> Prop)).
Proof. exact (eq_refl (@all ((_90715 -> Prop) -> Prop))). Qed.
Lemma lem3512784 {_90715 B : Type'} (_37166 : type627 _90715 B) (u : _90715 -> Prop) (f : _90715 -> B) : (term2089 _90715 B _37166 u f) = (term2089 _90715 B _37166 u f).
Proof. exact (MK_COMB (@lem3512783 _90715) (@lem3512782 _90715 B _37166 u f)). Qed.
Lemma lem3512785 {_90715 B : Type'} (_37166 : type627 _90715 B) (u : _90715 -> Prop) : (term2091 _90715 B _37166 u) = (term2091 _90715 B _37166 u).
Proof. exact (fun_ext (fun f : _90715 -> B => @lem3512784 _90715 B _37166 u f)). Qed.
Lemma lem3512786 {_90715 B : Type'} : (@all (_90715 -> B)) = (@all (_90715 -> B)).
Proof. exact (eq_refl (@all (_90715 -> B))). Qed.
Lemma lem3512787 {_90715 B : Type'} (_37166 : type627 _90715 B) (u : _90715 -> Prop) : (term2092 _90715 B _37166 u) = (term2092 _90715 B _37166 u).
Proof. exact (MK_COMB (@lem3512786 _90715 B) (@lem3512785 _90715 B _37166 u)). Qed.
Lemma lem3512788 {_90715 B : Type'} (_37166 : type627 _90715 B) : (term2094 _90715 B _37166) = (term2094 _90715 B _37166).
Proof. exact (fun_ext (fun u : _90715 -> Prop => @lem3512787 _90715 B _37166 u)). Qed.
Lemma lem3512789 {_90715 : Type'} : (@all (_90715 -> Prop)) = (@all (_90715 -> Prop)).
Proof. exact (eq_refl (@all (_90715 -> Prop))). Qed.
Lemma lem3512790 {_90715 B : Type'} (_37166 : type627 _90715 B) : (term2095 _90715 B _37166) = (term2095 _90715 B _37166).
Proof. exact (MK_COMB (@lem3512789 _90715) (@lem3512788 _90715 B _37166)). Qed.
Lemma lem3512791 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem3512792 {_90715 B : Type'} (_37166 : type627 _90715 B) : (term2096 _90715 B _37166) = (term2096 _90715 B _37166).
Proof. exact (MK_COMB (@lem3512791) (@lem3512790 _90715 B _37166)). Qed.
Lemma lem3512793 {_90715 _90724 A B : Type'} (_37166 : type627 _90715 B) (_37163 : type627 A B) (_37167 : type616 _90715 A) (h1 : _37167 = (term2326 _90715 A)) : (term2285 _90715 _90724 A B _37166 _37163) = (term2353 _90715 _90724 A B _37166 _37167 _37163).
Proof. exact (MK_COMB (@lem3512792 _90715 B _37166) (@lem3512717 _90715 _90724 A B _37163 _37167 h1)). Qed.
Lemma lem3512812 {_90715 A : Type'} (f : _90715 -> A) (g : type686 _90715) : ((term49 _90715 A f g) = (term50 _90715 A f g)) = ((term49 _90715 A f g) = (term50 _90715 A f g)).
Proof. exact (eq_refl ((term49 _90715 A f g) = (term50 _90715 A f g))). Qed.
Lemma lem3512841 {_90715 A : Type'} (g : type686 _90715) (_37165 : type627 _90715 A) (u : _90715 -> Prop) (f : _90715 -> A) (t : _90715 -> Prop) : (term2081 _90715 A g _37165 u f t) = (term2081 _90715 A g _37165 u f t).
Proof. exact (eq_refl (term2081 _90715 A g _37165 u f t)). Qed.
Lemma lem3512842 {_90715 A : Type'} (g : type686 _90715) (_37165 : type627 _90715 A) (u : _90715 -> Prop) (f : _90715 -> A) : (term2082 _90715 A g _37165 u f) = (term2082 _90715 A g _37165 u f).
Proof. exact (fun_ext (fun t : _90715 -> Prop => @lem3512841 _90715 A g _37165 u f t)). Qed.
Lemma lem3512843 {_90715 : Type'} : (@all (_90715 -> Prop)) = (@all (_90715 -> Prop)).
Proof. exact (eq_refl (@all (_90715 -> Prop))). Qed.
Lemma lem3512844 {_90715 A : Type'} (g : type686 _90715) (_37165 : type627 _90715 A) (u : _90715 -> Prop) (f : _90715 -> A) : (term2083 _90715 A g _37165 u f) = (term2083 _90715 A g _37165 u f).
Proof. exact (MK_COMB (@lem3512843 _90715) (@lem3512842 _90715 A g _37165 u f)). Qed.
Lemma lem3512853 {_90715 : Type'} (g : type686 _90715) : (term42 _90715 g) = (term42 _90715 g).
Proof. exact (eq_refl (term42 _90715 g)). Qed.
Lemma lem3512854 {_90715 A : Type'} (g : type686 _90715) (_37165 : type627 _90715 A) (u : _90715 -> Prop) (f : _90715 -> A) : (term2084 _90715 A g _37165 u f) = (term2084 _90715 A g _37165 u f).
Proof. exact (MK_COMB (@lem3512853 _90715 g) (@lem3512844 _90715 A g _37165 u f)). Qed.
Lemma lem3512855 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem3512856 {_90715 A : Type'} (g : type686 _90715) (_37165 : type627 _90715 A) (u : _90715 -> Prop) (f : _90715 -> A) : (term2085 _90715 A g _37165 u f) = (term2085 _90715 A g _37165 u f).
Proof. exact (MK_COMB (@lem3512855) (@lem3512854 _90715 A g _37165 u f)). Qed.
Lemma lem3512857 {_90715 A : Type'} (_37165 : type627 _90715 A) (u : _90715 -> Prop) (f : _90715 -> A) (g : type686 _90715) : (term2086 _90715 A _37165 u f g) = (term2086 _90715 A _37165 u f g).
Proof. exact (MK_COMB (@lem3512856 _90715 A g _37165 u f) (@lem3512812 _90715 A f g)). Qed.
Lemma lem3512858 {_90715 A : Type'} (_37165 : type627 _90715 A) (u : _90715 -> Prop) (f : _90715 -> A) : (term2088 _90715 A _37165 u f) = (term2088 _90715 A _37165 u f).
Proof. exact (fun_ext (fun g : type686 _90715 => @lem3512857 _90715 A _37165 u f g)). Qed.
Lemma lem3512859 {_90715 : Type'} : (@all ((_90715 -> Prop) -> Prop)) = (@all ((_90715 -> Prop) -> Prop)).
Proof. exact (eq_refl (@all ((_90715 -> Prop) -> Prop))). Qed.
Lemma lem3512860 {_90715 A : Type'} (_37165 : type627 _90715 A) (u : _90715 -> Prop) (f : _90715 -> A) : (term2089 _90715 A _37165 u f) = (term2089 _90715 A _37165 u f).
Proof. exact (MK_COMB (@lem3512859 _90715) (@lem3512858 _90715 A _37165 u f)). Qed.
Lemma lem3512861 {_90715 A : Type'} (_37165 : type627 _90715 A) (u : _90715 -> Prop) : (term2091 _90715 A _37165 u) = (term2091 _90715 A _37165 u).
Proof. exact (fun_ext (fun f : _90715 -> A => @lem3512860 _90715 A _37165 u f)). Qed.
Lemma lem3512862 {_90715 A : Type'} : (@all (_90715 -> A)) = (@all (_90715 -> A)).
Proof. exact (eq_refl (@all (_90715 -> A))). Qed.
Lemma lem3512863 {_90715 A : Type'} (_37165 : type627 _90715 A) (u : _90715 -> Prop) : (term2092 _90715 A _37165 u) = (term2092 _90715 A _37165 u).
Proof. exact (MK_COMB (@lem3512862 _90715 A) (@lem3512861 _90715 A _37165 u)). Qed.
Lemma lem3512864 {_90715 A : Type'} (_37165 : type627 _90715 A) : (term2094 _90715 A _37165) = (term2094 _90715 A _37165).
Proof. exact (fun_ext (fun u : _90715 -> Prop => @lem3512863 _90715 A _37165 u)). Qed.
Lemma lem3512865 {_90715 : Type'} : (@all (_90715 -> Prop)) = (@all (_90715 -> Prop)).
Proof. exact (eq_refl (@all (_90715 -> Prop))). Qed.
Lemma lem3512866 {_90715 A : Type'} (_37165 : type627 _90715 A) : (term2095 _90715 A _37165) = (term2095 _90715 A _37165).
Proof. exact (MK_COMB (@lem3512865 _90715) (@lem3512864 _90715 A _37165)). Qed.
Lemma lem3512867 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem3512868 {_90715 A : Type'} (_37165 : type627 _90715 A) : (term2096 _90715 A _37165) = (term2096 _90715 A _37165).
Proof. exact (MK_COMB (@lem3512867) (@lem3512866 _90715 A _37165)). Qed.
Lemma lem3512869 {_90715 _90724 A B : Type'} (_37165 : type627 _90715 A) (_37166 : type627 _90715 B) (_37163 : type627 A B) (_37167 : type616 _90715 A) (h1 : _37167 = (term2326 _90715 A)) : (term2286 _90715 _90724 A B _37165 _37166 _37163) = (term2354 _90715 _90724 A B _37165 _37166 _37167 _37163).
Proof. exact (MK_COMB (@lem3512868 _90715 A _37165) (@lem3512793 _90715 _90724 A B _37166 _37163 _37167 h1)). Qed.
Lemma lem3512888 {_90715 _90724 : Type'} (f : _90715 -> _90724) (g : type686 _90715) : ((term49 _90715 _90724 f g) = (term50 _90715 _90724 f g)) = ((term49 _90715 _90724 f g) = (term50 _90715 _90724 f g)).
Proof. exact (eq_refl ((term49 _90715 _90724 f g) = (term50 _90715 _90724 f g))). Qed.
Lemma lem3512917 {_90715 _90724 : Type'} (g : type686 _90715) (_37164 : type627 _90715 _90724) (u : _90715 -> Prop) (f : _90715 -> _90724) (t : _90715 -> Prop) : (term2081 _90715 _90724 g _37164 u f t) = (term2081 _90715 _90724 g _37164 u f t).
Proof. exact (eq_refl (term2081 _90715 _90724 g _37164 u f t)). Qed.
Lemma lem3512918 {_90715 _90724 : Type'} (g : type686 _90715) (_37164 : type627 _90715 _90724) (u : _90715 -> Prop) (f : _90715 -> _90724) : (term2082 _90715 _90724 g _37164 u f) = (term2082 _90715 _90724 g _37164 u f).
Proof. exact (fun_ext (fun t : _90715 -> Prop => @lem3512917 _90715 _90724 g _37164 u f t)). Qed.
Lemma lem3512919 {_90715 : Type'} : (@all (_90715 -> Prop)) = (@all (_90715 -> Prop)).
Proof. exact (eq_refl (@all (_90715 -> Prop))). Qed.
Lemma lem3512920 {_90715 _90724 : Type'} (g : type686 _90715) (_37164 : type627 _90715 _90724) (u : _90715 -> Prop) (f : _90715 -> _90724) : (term2083 _90715 _90724 g _37164 u f) = (term2083 _90715 _90724 g _37164 u f).
Proof. exact (MK_COMB (@lem3512919 _90715) (@lem3512918 _90715 _90724 g _37164 u f)). Qed.
Lemma lem3512929 {_90715 : Type'} (g : type686 _90715) : (term42 _90715 g) = (term42 _90715 g).
Proof. exact (eq_refl (term42 _90715 g)). Qed.
Lemma lem3512930 {_90715 _90724 : Type'} (g : type686 _90715) (_37164 : type627 _90715 _90724) (u : _90715 -> Prop) (f : _90715 -> _90724) : (term2084 _90715 _90724 g _37164 u f) = (term2084 _90715 _90724 g _37164 u f).
Proof. exact (MK_COMB (@lem3512929 _90715 g) (@lem3512920 _90715 _90724 g _37164 u f)). Qed.
Lemma lem3512931 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem3512932 {_90715 _90724 : Type'} (g : type686 _90715) (_37164 : type627 _90715 _90724) (u : _90715 -> Prop) (f : _90715 -> _90724) : (term2085 _90715 _90724 g _37164 u f) = (term2085 _90715 _90724 g _37164 u f).
Proof. exact (MK_COMB (@lem3512931) (@lem3512930 _90715 _90724 g _37164 u f)). Qed.
Lemma lem3512933 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) (u : _90715 -> Prop) (f : _90715 -> _90724) (g : type686 _90715) : (term2086 _90715 _90724 _37164 u f g) = (term2086 _90715 _90724 _37164 u f g).
Proof. exact (MK_COMB (@lem3512932 _90715 _90724 g _37164 u f) (@lem3512888 _90715 _90724 f g)). Qed.
Lemma lem3512934 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) (u : _90715 -> Prop) (f : _90715 -> _90724) : (term2088 _90715 _90724 _37164 u f) = (term2088 _90715 _90724 _37164 u f).
Proof. exact (fun_ext (fun g : type686 _90715 => @lem3512933 _90715 _90724 _37164 u f g)). Qed.
Lemma lem3512935 {_90715 : Type'} : (@all ((_90715 -> Prop) -> Prop)) = (@all ((_90715 -> Prop) -> Prop)).
Proof. exact (eq_refl (@all ((_90715 -> Prop) -> Prop))). Qed.
Lemma lem3512936 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) (u : _90715 -> Prop) (f : _90715 -> _90724) : (term2089 _90715 _90724 _37164 u f) = (term2089 _90715 _90724 _37164 u f).
Proof. exact (MK_COMB (@lem3512935 _90715) (@lem3512934 _90715 _90724 _37164 u f)). Qed.
Lemma lem3512937 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) (u : _90715 -> Prop) : (term2091 _90715 _90724 _37164 u) = (term2091 _90715 _90724 _37164 u).
Proof. exact (fun_ext (fun f : _90715 -> _90724 => @lem3512936 _90715 _90724 _37164 u f)). Qed.
Lemma lem3512938 {_90715 _90724 : Type'} : (@all (_90715 -> _90724)) = (@all (_90715 -> _90724)).
Proof. exact (eq_refl (@all (_90715 -> _90724))). Qed.
Lemma lem3512939 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) (u : _90715 -> Prop) : (term2092 _90715 _90724 _37164 u) = (term2092 _90715 _90724 _37164 u).
Proof. exact (MK_COMB (@lem3512938 _90715 _90724) (@lem3512937 _90715 _90724 _37164 u)). Qed.
Lemma lem3512940 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) : (term2094 _90715 _90724 _37164) = (term2094 _90715 _90724 _37164).
Proof. exact (fun_ext (fun u : _90715 -> Prop => @lem3512939 _90715 _90724 _37164 u)). Qed.
Lemma lem3512941 {_90715 : Type'} : (@all (_90715 -> Prop)) = (@all (_90715 -> Prop)).
Proof. exact (eq_refl (@all (_90715 -> Prop))). Qed.
Lemma lem3512942 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) : (term2095 _90715 _90724 _37164) = (term2095 _90715 _90724 _37164).
Proof. exact (MK_COMB (@lem3512941 _90715) (@lem3512940 _90715 _90724 _37164)). Qed.
Lemma lem3512943 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem3512944 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) : (term2096 _90715 _90724 _37164) = (term2096 _90715 _90724 _37164).
Proof. exact (MK_COMB (@lem3512943) (@lem3512942 _90715 _90724 _37164)). Qed.
Lemma lem3512945 {_90715 _90724 A B : Type'} (_37164 : type627 _90715 _90724) (_37165 : type627 _90715 A) (_37166 : type627 _90715 B) (_37163 : type627 A B) (_37167 : type616 _90715 A) (h1 : _37167 = (term2326 _90715 A)) : (term2287 _90715 _90724 A B _37164 _37165 _37166 _37163) = (term2355 _90715 _90724 A B _37164 _37165 _37166 _37167 _37163).
Proof. exact (MK_COMB (@lem3512944 _90715 _90724 _37164) (@lem3512869 _90715 _90724 A B _37165 _37166 _37163 _37167 h1)). Qed.
Lemma lem3512964 {A B : Type'} (f : A -> B) (g : type686 A) : ((term49 A B f g) = (term50 A B f g)) = ((term49 A B f g) = (term50 A B f g)).
Proof. exact (eq_refl ((term49 A B f g) = (term50 A B f g))). Qed.
Lemma lem3512985 {A B : Type'} (g : type686 A) (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) (t : A -> Prop) : (term2124 A B g _37163 u f t) = (term2124 A B g _37163 u f t).
Proof. exact (eq_refl (term2124 A B g _37163 u f t)). Qed.
Lemma lem3512986 {A B : Type'} (g : type686 A) (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) : (term2125 A B g _37163 u f) = (term2125 A B g _37163 u f).
Proof. exact (fun_ext (fun t : A -> Prop => @lem3512985 A B g _37163 u f t)). Qed.
Lemma lem3512987 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem3512988 {A B : Type'} (g : type686 A) (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) : (term2126 A B g _37163 u f) = (term2126 A B g _37163 u f).
Proof. exact (MK_COMB (@lem3512987 A) (@lem3512986 A B g _37163 u f)). Qed.
Lemma lem3513001 {A : Type'} (g : type686 A) (t : A -> Prop) (u : A -> Prop) : (term2127 A g t u) = (term2127 A g t u).
Proof. exact (eq_refl (term2127 A g t u)). Qed.
Lemma lem3513002 {A : Type'} (g : type686 A) (u : A -> Prop) : (term2128 A g u) = (term2128 A g u).
Proof. exact (fun_ext (fun t : A -> Prop => @lem3513001 A g t u)). Qed.
Lemma lem3513003 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem3513004 {A : Type'} (g : type686 A) (u : A -> Prop) : (term2129 A g u) = (term2129 A g u).
Proof. exact (MK_COMB (@lem3513003 A) (@lem3513002 A g u)). Qed.
Lemma lem3513005 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem3513006 {A : Type'} (g : type686 A) (u : A -> Prop) : (term1946 A g u) = (term1946 A g u).
Proof. exact (MK_COMB (@lem3513005) (@lem3513004 A g u)). Qed.
Lemma lem3513007 {A B : Type'} (g : type686 A) (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) : (term2130 A B g _37163 u f) = (term2130 A B g _37163 u f).
Proof. exact (MK_COMB (@lem3513006 A g u) (@lem3512988 A B g _37163 u f)). Qed.
Lemma lem3513016 {A : Type'} (g : type686 A) : (term42 A g) = (term42 A g).
Proof. exact (eq_refl (term42 A g)). Qed.
Lemma lem3513017 {A B : Type'} (g : type686 A) (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) : (term2131 A B g _37163 u f) = (term2131 A B g _37163 u f).
Proof. exact (MK_COMB (@lem3513016 A g) (@lem3513007 A B g _37163 u f)). Qed.
Lemma lem3513018 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem3513019 {A B : Type'} (g : type686 A) (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) : (term2133 A B g _37163 u f) = (term2133 A B g _37163 u f).
Proof. exact (MK_COMB (@lem3513018) (@lem3513017 A B g _37163 u f)). Qed.
Lemma lem3513020 {A B : Type'} (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) (g : type686 A) : (term2134 A B _37163 u f g) = (term2134 A B _37163 u f g).
Proof. exact (MK_COMB (@lem3513019 A B g _37163 u f) (@lem3512964 A B f g)). Qed.
Lemma lem3513021 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem3513022 {A B : Type'} (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) (g : type686 A) : (term2135 A B _37163 u f g) = (term2135 A B _37163 u f g).
Proof. exact (MK_COMB (@lem3513021) (@lem3513020 A B _37163 u f g)). Qed.
Lemma lem3513023 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem3513024 {A B : Type'} (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) (g : type686 A) : (term2136 A B _37163 u f g) = (term2136 A B _37163 u f g).
Proof. exact (MK_COMB (@lem3513023) (@lem3513022 A B _37163 u f g)). Qed.
Lemma lem3513025 {_90715 _90724 A B : Type'} (u : A -> Prop) (f : A -> B) (g : type686 A) (_37164 : type627 _90715 _90724) (_37165 : type627 _90715 A) (_37166 : type627 _90715 B) (_37163 : type627 A B) (_37167 : type616 _90715 A) (h1 : _37167 = (term2326 _90715 A)) : (term2288 _90715 _90724 A B u f g _37164 _37165 _37166 _37163) = (term2356 _90715 _90724 A B u f g _37164 _37165 _37166 _37167 _37163).
Proof. exact (MK_COMB (@lem3513024 A B _37163 u f g) (@lem3512945 _90715 _90724 A B _37164 _37165 _37166 _37163 _37167 h1)). Qed.
Lemma lem3513026 {_90715 _90724 A B : Type'} (f : A -> B) (g : type686 A) (_37164 : type627 _90715 _90724) (_37165 : type627 _90715 A) (_37166 : type627 _90715 B) (_37163 : type627 A B) (_37167 : type616 _90715 A) (h1 : _37167 = (term2326 _90715 A)) : (term2289 _90715 _90724 A B f g _37164 _37165 _37166 _37163) = (term2357 _90715 _90724 A B f g _37164 _37165 _37166 _37167 _37163).
Proof. exact (fun_ext (fun u : A -> Prop => @lem3513025 _90715 _90724 A B u f g _37164 _37165 _37166 _37163 _37167 h1)). Qed.
Lemma lem3513027 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem3513028 {_90715 _90724 A B : Type'} (f : A -> B) (g : type686 A) (_37164 : type627 _90715 _90724) (_37165 : type627 _90715 A) (_37166 : type627 _90715 B) (_37163 : type627 A B) (_37167 : type616 _90715 A) (h1 : _37167 = (term2326 _90715 A)) : (term2290 _90715 _90724 A B f g _37164 _37165 _37166 _37163) = (term2358 _90715 _90724 A B f g _37164 _37165 _37166 _37167 _37163).
Proof. exact (MK_COMB (@lem3513027 A) (@lem3513026 _90715 _90724 A B f g _37164 _37165 _37166 _37163 _37167 h1)). Qed.
Lemma lem3513029 {_90715 _90724 A B : Type'} (g : type686 A) (_37164 : type627 _90715 _90724) (_37165 : type627 _90715 A) (_37166 : type627 _90715 B) (_37163 : type627 A B) (_37167 : type616 _90715 A) (h1 : _37167 = (term2326 _90715 A)) : (term2291 _90715 _90724 A B g _37164 _37165 _37166 _37163) = (term2359 _90715 _90724 A B g _37164 _37165 _37166 _37167 _37163).
Proof. exact (fun_ext (fun f : A -> B => @lem3513028 _90715 _90724 A B f g _37164 _37165 _37166 _37163 _37167 h1)). Qed.
Lemma lem3513030 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem3513031 {_90715 _90724 A B : Type'} (g : type686 A) (_37164 : type627 _90715 _90724) (_37165 : type627 _90715 A) (_37166 : type627 _90715 B) (_37163 : type627 A B) (_37167 : type616 _90715 A) (h1 : _37167 = (term2326 _90715 A)) : (term2292 _90715 _90724 A B g _37164 _37165 _37166 _37163) = (term2360 _90715 _90724 A B g _37164 _37165 _37166 _37167 _37163).
Proof. exact (MK_COMB (@lem3513030 A B) (@lem3513029 _90715 _90724 A B g _37164 _37165 _37166 _37163 _37167 h1)). Qed.
Lemma lem3513032 {_90715 _90724 A B : Type'} (_37164 : type627 _90715 _90724) (_37165 : type627 _90715 A) (_37166 : type627 _90715 B) (_37163 : type627 A B) (_37167 : type616 _90715 A) (h1 : _37167 = (term2326 _90715 A)) : (term2293 _90715 _90724 A B _37164 _37165 _37166 _37163) = (term2361 _90715 _90724 A B _37164 _37165 _37166 _37167 _37163).
Proof. exact (fun_ext (fun g : type686 A => @lem3513031 _90715 _90724 A B g _37164 _37165 _37166 _37163 _37167 h1)). Qed.
Lemma lem3513033 {A : Type'} : (@all ((A -> Prop) -> Prop)) = (@all ((A -> Prop) -> Prop)).
Proof. exact (eq_refl (@all ((A -> Prop) -> Prop))). Qed.
Lemma lem3513034 {_90715 _90724 A B : Type'} (_37164 : type627 _90715 _90724) (_37165 : type627 _90715 A) (_37166 : type627 _90715 B) (_37163 : type627 A B) (_37167 : type616 _90715 A) (h1 : _37167 = (term2326 _90715 A)) : (term2294 _90715 _90724 A B _37164 _37165 _37166 _37163) = (term2362 _90715 _90724 A B _37164 _37165 _37166 _37167 _37163).
Proof. exact (MK_COMB (@lem3513033 A) (@lem3513032 _90715 _90724 A B _37164 _37165 _37166 _37163 _37167 h1)). Qed.
Lemma lem3513059 {A B : Type'} (GEN_PVAR_85 : A) (u : A -> Prop) (f : A -> B) (t : A -> Prop) (x : A) : (term61 A B GEN_PVAR_85 u f t x) = (term61 A B GEN_PVAR_85 u f t x).
Proof. exact (eq_refl (term61 A B GEN_PVAR_85 u f t x)). Qed.
Lemma lem3513060 {A B : Type'} (GEN_PVAR_85 : A) (u : A -> Prop) (f : A -> B) (t : A -> Prop) : (term63 A B GEN_PVAR_85 u f t) = (term63 A B GEN_PVAR_85 u f t).
Proof. exact (fun_ext (fun x : A => @lem3513059 A B GEN_PVAR_85 u f t x)). Qed.
Lemma lem3513061 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem3513062 {A B : Type'} (GEN_PVAR_85 : A) (u : A -> Prop) (f : A -> B) (t : A -> Prop) : (term65 A B GEN_PVAR_85 u f t) = (term65 A B GEN_PVAR_85 u f t).
Proof. exact (MK_COMB (@lem3513061 A) (@lem3513060 A B GEN_PVAR_85 u f t)). Qed.
Lemma lem3513073 {A B : Type'} (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) (t : A -> Prop) (GEN_PVAR_85 : A) : (term2201 A B _37163 u f t GEN_PVAR_85) = (term2201 A B _37163 u f t GEN_PVAR_85).
Proof. exact (eq_refl (term2201 A B _37163 u f t GEN_PVAR_85)). Qed.
Lemma lem3513074 {A B : Type'} (_37163 : type627 A B) (GEN_PVAR_85 : A) (u : A -> Prop) (f : A -> B) (t : A -> Prop) : ((_37163 u f t GEN_PVAR_85) = (term65 A B GEN_PVAR_85 u f t)) = ((_37163 u f t GEN_PVAR_85) = (term65 A B GEN_PVAR_85 u f t)).
Proof. exact (MK_COMB (@lem3513073 A B _37163 u f t GEN_PVAR_85) (@lem3513062 A B GEN_PVAR_85 u f t)). Qed.
Lemma lem3513075 {A B : Type'} (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) (t : A -> Prop) : (term2203 A B _37163 u f t) = (term2203 A B _37163 u f t).
Proof. exact (fun_ext (fun GEN_PVAR_85 : A => @lem3513074 A B _37163 GEN_PVAR_85 u f t)). Qed.
Lemma lem3513076 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem3513077 {A B : Type'} (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) (t : A -> Prop) : (term2204 A B _37163 u f t) = (term2204 A B _37163 u f t).
Proof. exact (MK_COMB (@lem3513076 A) (@lem3513075 A B _37163 u f t)). Qed.
Lemma lem3513078 {A B : Type'} (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) : (term2205 A B _37163 u f) = (term2205 A B _37163 u f).
Proof. exact (fun_ext (fun t : A -> Prop => @lem3513077 A B _37163 u f t)). Qed.
Lemma lem3513079 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem3513080 {A B : Type'} (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) : (term2206 A B _37163 u f) = (term2206 A B _37163 u f).
Proof. exact (MK_COMB (@lem3513079 A) (@lem3513078 A B _37163 u f)). Qed.
Lemma lem3513081 {A B : Type'} (_37163 : type627 A B) (u : A -> Prop) : (term2207 A B _37163 u) = (term2207 A B _37163 u).
Proof. exact (fun_ext (fun f : A -> B => @lem3513080 A B _37163 u f)). Qed.
Lemma lem3513082 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem3513083 {A B : Type'} (_37163 : type627 A B) (u : A -> Prop) : (term2208 A B _37163 u) = (term2208 A B _37163 u).
Proof. exact (MK_COMB (@lem3513082 A B) (@lem3513081 A B _37163 u)). Qed.
Lemma lem3513084 {A B : Type'} (_37163 : type627 A B) : (term2209 A B _37163) = (term2209 A B _37163).
Proof. exact (fun_ext (fun u : A -> Prop => @lem3513083 A B _37163 u)). Qed.
Lemma lem3513085 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem3513086 {A B : Type'} (_37163 : type627 A B) : (term2210 A B _37163) = (term2210 A B _37163).
Proof. exact (MK_COMB (@lem3513085 A) (@lem3513084 A B _37163)). Qed.
Lemma lem3513087 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem3513088 {A B : Type'} (_37163 : type627 A B) : (term2211 A B _37163) = (term2211 A B _37163).
Proof. exact (MK_COMB (@lem3513087) (@lem3513086 A B _37163)). Qed.
Lemma lem3513089 {_90715 _90724 A B : Type'} (_37164 : type627 _90715 _90724) (_37165 : type627 _90715 A) (_37166 : type627 _90715 B) (_37163 : type627 A B) (_37167 : type616 _90715 A) (h1 : _37167 = (term2326 _90715 A)) : (term2295 _90715 _90724 A B _37164 _37165 _37166 _37163) = (term2363 _90715 _90724 A B _37164 _37165 _37166 _37167 _37163).
Proof. exact (MK_COMB (@lem3513088 A B _37163) (@lem3513034 _90715 _90724 A B _37164 _37165 _37166 _37163 _37167 h1)). Qed.
Lemma lem3513090 {_90715 _90724 A B : Type'} (_37164 : type627 _90715 _90724) (_37165 : type627 _90715 A) (_37166 : type627 _90715 B) (_37167 : type616 _90715 A) (h1 : _37167 = (term2326 _90715 A)) : (term2296 _90715 _90724 A B _37164 _37165 _37166) = (term2364 _90715 _90724 A B _37164 _37165 _37166 _37167).
Proof. exact (fun_ext (fun _37163 : type627 A B => @lem3513089 _90715 _90724 A B _37164 _37165 _37166 _37163 _37167 h1)). Qed.
Lemma lem3513091 {A B : Type'} : (@all ((A -> Prop) -> (A -> B) -> (A -> Prop) -> A -> Prop)) = (@all ((A -> Prop) -> (A -> B) -> (A -> Prop) -> A -> Prop)).
Proof. exact (eq_refl (@all ((A -> Prop) -> (A -> B) -> (A -> Prop) -> A -> Prop))). Qed.
Lemma lem3513092 {_90715 _90724 A B : Type'} (_37164 : type627 _90715 _90724) (_37165 : type627 _90715 A) (_37166 : type627 _90715 B) (_37167 : type616 _90715 A) (h1 : _37167 = (term2326 _90715 A)) : (term2297 _90715 _90724 A B _37164 _37165 _37166) = (term2365 _90715 _90724 A B _37164 _37165 _37166 _37167).
Proof. exact (MK_COMB (@lem3513091 A B) (@lem3513090 _90715 _90724 A B _37164 _37165 _37166 _37167 h1)). Qed.
Lemma lem3513117 {_90715 _90724 : Type'} (GEN_PVAR_84 : _90715) (u : _90715 -> Prop) (f : _90715 -> _90724) (t : _90715 -> Prop) (x : _90715) : (term61 _90715 _90724 GEN_PVAR_84 u f t x) = (term61 _90715 _90724 GEN_PVAR_84 u f t x).
Proof. exact (eq_refl (term61 _90715 _90724 GEN_PVAR_84 u f t x)). Qed.
Lemma lem3513118 {_90715 _90724 : Type'} (GEN_PVAR_84 : _90715) (u : _90715 -> Prop) (f : _90715 -> _90724) (t : _90715 -> Prop) : (term63 _90715 _90724 GEN_PVAR_84 u f t) = (term63 _90715 _90724 GEN_PVAR_84 u f t).
Proof. exact (fun_ext (fun x : _90715 => @lem3513117 _90715 _90724 GEN_PVAR_84 u f t x)). Qed.
Lemma lem3513119 {_90715 : Type'} : (@ex _90715) = (@ex _90715).
Proof. exact (eq_refl (@ex _90715)). Qed.
Lemma lem3513120 {_90715 _90724 : Type'} (GEN_PVAR_84 : _90715) (u : _90715 -> Prop) (f : _90715 -> _90724) (t : _90715 -> Prop) : (term65 _90715 _90724 GEN_PVAR_84 u f t) = (term65 _90715 _90724 GEN_PVAR_84 u f t).
Proof. exact (MK_COMB (@lem3513119 _90715) (@lem3513118 _90715 _90724 GEN_PVAR_84 u f t)). Qed.
Lemma lem3513131 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) (u : _90715 -> Prop) (f : _90715 -> _90724) (t : _90715 -> Prop) (GEN_PVAR_84 : _90715) : (term2201 _90715 _90724 _37164 u f t GEN_PVAR_84) = (term2201 _90715 _90724 _37164 u f t GEN_PVAR_84).
Proof. exact (eq_refl (term2201 _90715 _90724 _37164 u f t GEN_PVAR_84)). Qed.
Lemma lem3513132 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) (GEN_PVAR_84 : _90715) (u : _90715 -> Prop) (f : _90715 -> _90724) (t : _90715 -> Prop) : ((_37164 u f t GEN_PVAR_84) = (term65 _90715 _90724 GEN_PVAR_84 u f t)) = ((_37164 u f t GEN_PVAR_84) = (term65 _90715 _90724 GEN_PVAR_84 u f t)).
Proof. exact (MK_COMB (@lem3513131 _90715 _90724 _37164 u f t GEN_PVAR_84) (@lem3513120 _90715 _90724 GEN_PVAR_84 u f t)). Qed.
Lemma lem3513133 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) (u : _90715 -> Prop) (f : _90715 -> _90724) (t : _90715 -> Prop) : (term2203 _90715 _90724 _37164 u f t) = (term2203 _90715 _90724 _37164 u f t).
Proof. exact (fun_ext (fun GEN_PVAR_84 : _90715 => @lem3513132 _90715 _90724 _37164 GEN_PVAR_84 u f t)). Qed.
Lemma lem3513134 {_90715 : Type'} : (@all _90715) = (@all _90715).
Proof. exact (eq_refl (@all _90715)). Qed.
Lemma lem3513135 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) (u : _90715 -> Prop) (f : _90715 -> _90724) (t : _90715 -> Prop) : (term2204 _90715 _90724 _37164 u f t) = (term2204 _90715 _90724 _37164 u f t).
Proof. exact (MK_COMB (@lem3513134 _90715) (@lem3513133 _90715 _90724 _37164 u f t)). Qed.
Lemma lem3513136 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) (u : _90715 -> Prop) (f : _90715 -> _90724) : (term2205 _90715 _90724 _37164 u f) = (term2205 _90715 _90724 _37164 u f).
Proof. exact (fun_ext (fun t : _90715 -> Prop => @lem3513135 _90715 _90724 _37164 u f t)). Qed.
Lemma lem3513137 {_90715 : Type'} : (@all (_90715 -> Prop)) = (@all (_90715 -> Prop)).
Proof. exact (eq_refl (@all (_90715 -> Prop))). Qed.
Lemma lem3513138 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) (u : _90715 -> Prop) (f : _90715 -> _90724) : (term2206 _90715 _90724 _37164 u f) = (term2206 _90715 _90724 _37164 u f).
Proof. exact (MK_COMB (@lem3513137 _90715) (@lem3513136 _90715 _90724 _37164 u f)). Qed.
Lemma lem3513139 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) (u : _90715 -> Prop) : (term2207 _90715 _90724 _37164 u) = (term2207 _90715 _90724 _37164 u).
Proof. exact (fun_ext (fun f : _90715 -> _90724 => @lem3513138 _90715 _90724 _37164 u f)). Qed.
Lemma lem3513140 {_90715 _90724 : Type'} : (@all (_90715 -> _90724)) = (@all (_90715 -> _90724)).
Proof. exact (eq_refl (@all (_90715 -> _90724))). Qed.
Lemma lem3513141 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) (u : _90715 -> Prop) : (term2208 _90715 _90724 _37164 u) = (term2208 _90715 _90724 _37164 u).
Proof. exact (MK_COMB (@lem3513140 _90715 _90724) (@lem3513139 _90715 _90724 _37164 u)). Qed.
Lemma lem3513142 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) : (term2209 _90715 _90724 _37164) = (term2209 _90715 _90724 _37164).
Proof. exact (fun_ext (fun u : _90715 -> Prop => @lem3513141 _90715 _90724 _37164 u)). Qed.
Lemma lem3513143 {_90715 : Type'} : (@all (_90715 -> Prop)) = (@all (_90715 -> Prop)).
Proof. exact (eq_refl (@all (_90715 -> Prop))). Qed.
Lemma lem3513144 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) : (term2210 _90715 _90724 _37164) = (term2210 _90715 _90724 _37164).
Proof. exact (MK_COMB (@lem3513143 _90715) (@lem3513142 _90715 _90724 _37164)). Qed.
Lemma lem3513145 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem3513146 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) : (term2211 _90715 _90724 _37164) = (term2211 _90715 _90724 _37164).
Proof. exact (MK_COMB (@lem3513145) (@lem3513144 _90715 _90724 _37164)). Qed.
Lemma lem3513147 {_90715 _90724 A B : Type'} (_37164 : type627 _90715 _90724) (_37165 : type627 _90715 A) (_37166 : type627 _90715 B) (_37167 : type616 _90715 A) (h1 : _37167 = (term2326 _90715 A)) : (term2298 _90715 _90724 A B _37164 _37165 _37166) = (term2366 _90715 _90724 A B _37164 _37165 _37166 _37167).
Proof. exact (MK_COMB (@lem3513146 _90715 _90724 _37164) (@lem3513092 _90715 _90724 A B _37164 _37165 _37166 _37167 h1)). Qed.
Lemma lem3513148 {_90715 _90724 A B : Type'} (_37165 : type627 _90715 A) (_37166 : type627 _90715 B) (_37167 : type616 _90715 A) (h1 : _37167 = (term2326 _90715 A)) : (term2299 _90715 _90724 A B _37165 _37166) = (term2367 _90715 _90724 A B _37165 _37166 _37167).
Proof. exact (fun_ext (fun _37164 : type627 _90715 _90724 => @lem3513147 _90715 _90724 A B _37164 _37165 _37166 _37167 h1)). Qed.
Lemma lem3513149 {_90715 _90724 : Type'} : (@all ((_90715 -> Prop) -> (_90715 -> _90724) -> (_90715 -> Prop) -> _90715 -> Prop)) = (@all ((_90715 -> Prop) -> (_90715 -> _90724) -> (_90715 -> Prop) -> _90715 -> Prop)).
Proof. exact (eq_refl (@all ((_90715 -> Prop) -> (_90715 -> _90724) -> (_90715 -> Prop) -> _90715 -> Prop))). Qed.
Lemma lem3513150 {_90715 _90724 A B : Type'} (_37165 : type627 _90715 A) (_37166 : type627 _90715 B) (_37167 : type616 _90715 A) (h1 : _37167 = (term2326 _90715 A)) : (term2300 _90715 _90724 A B _37165 _37166) = (term2368 _90715 _90724 A B _37165 _37166 _37167).
Proof. exact (MK_COMB (@lem3513149 _90715 _90724) (@lem3513148 _90715 _90724 A B _37165 _37166 _37167 h1)). Qed.
Lemma lem3513175 {_90715 A : Type'} (GEN_PVAR_84 : _90715) (u : _90715 -> Prop) (f : _90715 -> A) (t : _90715 -> Prop) (x : _90715) : (term61 _90715 A GEN_PVAR_84 u f t x) = (term61 _90715 A GEN_PVAR_84 u f t x).
Proof. exact (eq_refl (term61 _90715 A GEN_PVAR_84 u f t x)). Qed.
Lemma lem3513176 {_90715 A : Type'} (GEN_PVAR_84 : _90715) (u : _90715 -> Prop) (f : _90715 -> A) (t : _90715 -> Prop) : (term63 _90715 A GEN_PVAR_84 u f t) = (term63 _90715 A GEN_PVAR_84 u f t).
Proof. exact (fun_ext (fun x : _90715 => @lem3513175 _90715 A GEN_PVAR_84 u f t x)). Qed.
Lemma lem3513177 {_90715 : Type'} : (@ex _90715) = (@ex _90715).
Proof. exact (eq_refl (@ex _90715)). Qed.
Lemma lem3513178 {_90715 A : Type'} (GEN_PVAR_84 : _90715) (u : _90715 -> Prop) (f : _90715 -> A) (t : _90715 -> Prop) : (term65 _90715 A GEN_PVAR_84 u f t) = (term65 _90715 A GEN_PVAR_84 u f t).
Proof. exact (MK_COMB (@lem3513177 _90715) (@lem3513176 _90715 A GEN_PVAR_84 u f t)). Qed.
Lemma lem3513189 {_90715 A : Type'} (_37165 : type627 _90715 A) (u : _90715 -> Prop) (f : _90715 -> A) (t : _90715 -> Prop) (GEN_PVAR_84 : _90715) : (term2201 _90715 A _37165 u f t GEN_PVAR_84) = (term2201 _90715 A _37165 u f t GEN_PVAR_84).
Proof. exact (eq_refl (term2201 _90715 A _37165 u f t GEN_PVAR_84)). Qed.
Lemma lem3513190 {_90715 A : Type'} (_37165 : type627 _90715 A) (GEN_PVAR_84 : _90715) (u : _90715 -> Prop) (f : _90715 -> A) (t : _90715 -> Prop) : ((_37165 u f t GEN_PVAR_84) = (term65 _90715 A GEN_PVAR_84 u f t)) = ((_37165 u f t GEN_PVAR_84) = (term65 _90715 A GEN_PVAR_84 u f t)).
Proof. exact (MK_COMB (@lem3513189 _90715 A _37165 u f t GEN_PVAR_84) (@lem3513178 _90715 A GEN_PVAR_84 u f t)). Qed.
Lemma lem3513191 {_90715 A : Type'} (_37165 : type627 _90715 A) (u : _90715 -> Prop) (f : _90715 -> A) (t : _90715 -> Prop) : (term2203 _90715 A _37165 u f t) = (term2203 _90715 A _37165 u f t).
Proof. exact (fun_ext (fun GEN_PVAR_84 : _90715 => @lem3513190 _90715 A _37165 GEN_PVAR_84 u f t)). Qed.
Lemma lem3513192 {_90715 : Type'} : (@all _90715) = (@all _90715).
Proof. exact (eq_refl (@all _90715)). Qed.
Lemma lem3513193 {_90715 A : Type'} (_37165 : type627 _90715 A) (u : _90715 -> Prop) (f : _90715 -> A) (t : _90715 -> Prop) : (term2204 _90715 A _37165 u f t) = (term2204 _90715 A _37165 u f t).
Proof. exact (MK_COMB (@lem3513192 _90715) (@lem3513191 _90715 A _37165 u f t)). Qed.
Lemma lem3513194 {_90715 A : Type'} (_37165 : type627 _90715 A) (u : _90715 -> Prop) (f : _90715 -> A) : (term2205 _90715 A _37165 u f) = (term2205 _90715 A _37165 u f).
Proof. exact (fun_ext (fun t : _90715 -> Prop => @lem3513193 _90715 A _37165 u f t)). Qed.
Lemma lem3513195 {_90715 : Type'} : (@all (_90715 -> Prop)) = (@all (_90715 -> Prop)).
Proof. exact (eq_refl (@all (_90715 -> Prop))). Qed.
Lemma lem3513196 {_90715 A : Type'} (_37165 : type627 _90715 A) (u : _90715 -> Prop) (f : _90715 -> A) : (term2206 _90715 A _37165 u f) = (term2206 _90715 A _37165 u f).
Proof. exact (MK_COMB (@lem3513195 _90715) (@lem3513194 _90715 A _37165 u f)). Qed.
Lemma lem3513197 {_90715 A : Type'} (_37165 : type627 _90715 A) (u : _90715 -> Prop) : (term2207 _90715 A _37165 u) = (term2207 _90715 A _37165 u).
Proof. exact (fun_ext (fun f : _90715 -> A => @lem3513196 _90715 A _37165 u f)). Qed.
Lemma lem3513198 {_90715 A : Type'} : (@all (_90715 -> A)) = (@all (_90715 -> A)).
Proof. exact (eq_refl (@all (_90715 -> A))). Qed.
Lemma lem3513199 {_90715 A : Type'} (_37165 : type627 _90715 A) (u : _90715 -> Prop) : (term2208 _90715 A _37165 u) = (term2208 _90715 A _37165 u).
Proof. exact (MK_COMB (@lem3513198 _90715 A) (@lem3513197 _90715 A _37165 u)). Qed.
Lemma lem3513200 {_90715 A : Type'} (_37165 : type627 _90715 A) : (term2209 _90715 A _37165) = (term2209 _90715 A _37165).
Proof. exact (fun_ext (fun u : _90715 -> Prop => @lem3513199 _90715 A _37165 u)). Qed.
Lemma lem3513201 {_90715 : Type'} : (@all (_90715 -> Prop)) = (@all (_90715 -> Prop)).
Proof. exact (eq_refl (@all (_90715 -> Prop))). Qed.
Lemma lem3513202 {_90715 A : Type'} (_37165 : type627 _90715 A) : (term2210 _90715 A _37165) = (term2210 _90715 A _37165).
Proof. exact (MK_COMB (@lem3513201 _90715) (@lem3513200 _90715 A _37165)). Qed.
Lemma lem3513203 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem3513204 {_90715 A : Type'} (_37165 : type627 _90715 A) : (term2211 _90715 A _37165) = (term2211 _90715 A _37165).
Proof. exact (MK_COMB (@lem3513203) (@lem3513202 _90715 A _37165)). Qed.
Lemma lem3513205 {_90715 _90724 A B : Type'} (_37165 : type627 _90715 A) (_37166 : type627 _90715 B) (_37167 : type616 _90715 A) (h1 : _37167 = (term2326 _90715 A)) : (term2301 _90715 _90724 A B _37165 _37166) = (term2369 _90715 _90724 A B _37165 _37166 _37167).
Proof. exact (MK_COMB (@lem3513204 _90715 A _37165) (@lem3513150 _90715 _90724 A B _37165 _37166 _37167 h1)). Qed.
Lemma lem3513206 {_90715 _90724 A B : Type'} (_37166 : type627 _90715 B) (_37167 : type616 _90715 A) (h1 : _37167 = (term2326 _90715 A)) : (term2302 _90715 _90724 A B _37166) = (term2370 _90715 _90724 A B _37166 _37167).
Proof. exact (fun_ext (fun _37165 : type627 _90715 A => @lem3513205 _90715 _90724 A B _37165 _37166 _37167 h1)). Qed.
Lemma lem3513207 {_90715 A : Type'} : (@all ((_90715 -> Prop) -> (_90715 -> A) -> (_90715 -> Prop) -> _90715 -> Prop)) = (@all ((_90715 -> Prop) -> (_90715 -> A) -> (_90715 -> Prop) -> _90715 -> Prop)).
Proof. exact (eq_refl (@all ((_90715 -> Prop) -> (_90715 -> A) -> (_90715 -> Prop) -> _90715 -> Prop))). Qed.
Lemma lem3513208 {_90715 _90724 A B : Type'} (_37166 : type627 _90715 B) (_37167 : type616 _90715 A) (h1 : _37167 = (term2326 _90715 A)) : (term2303 _90715 _90724 A B _37166) = (term2371 _90715 _90724 A B _37166 _37167).
Proof. exact (MK_COMB (@lem3513207 _90715 A) (@lem3513206 _90715 _90724 A B _37166 _37167 h1)). Qed.
Lemma lem3513233 {_90715 B : Type'} (GEN_PVAR_84 : _90715) (u : _90715 -> Prop) (f : _90715 -> B) (t : _90715 -> Prop) (x : _90715) : (term61 _90715 B GEN_PVAR_84 u f t x) = (term61 _90715 B GEN_PVAR_84 u f t x).
Proof. exact (eq_refl (term61 _90715 B GEN_PVAR_84 u f t x)). Qed.
Lemma lem3513234 {_90715 B : Type'} (GEN_PVAR_84 : _90715) (u : _90715 -> Prop) (f : _90715 -> B) (t : _90715 -> Prop) : (term63 _90715 B GEN_PVAR_84 u f t) = (term63 _90715 B GEN_PVAR_84 u f t).
Proof. exact (fun_ext (fun x : _90715 => @lem3513233 _90715 B GEN_PVAR_84 u f t x)). Qed.
Lemma lem3513235 {_90715 : Type'} : (@ex _90715) = (@ex _90715).
Proof. exact (eq_refl (@ex _90715)). Qed.
Lemma lem3513236 {_90715 B : Type'} (GEN_PVAR_84 : _90715) (u : _90715 -> Prop) (f : _90715 -> B) (t : _90715 -> Prop) : (term65 _90715 B GEN_PVAR_84 u f t) = (term65 _90715 B GEN_PVAR_84 u f t).
Proof. exact (MK_COMB (@lem3513235 _90715) (@lem3513234 _90715 B GEN_PVAR_84 u f t)). Qed.
Lemma lem3513247 {_90715 B : Type'} (_37166 : type627 _90715 B) (u : _90715 -> Prop) (f : _90715 -> B) (t : _90715 -> Prop) (GEN_PVAR_84 : _90715) : (term2201 _90715 B _37166 u f t GEN_PVAR_84) = (term2201 _90715 B _37166 u f t GEN_PVAR_84).
Proof. exact (eq_refl (term2201 _90715 B _37166 u f t GEN_PVAR_84)). Qed.
Lemma lem3513248 {_90715 B : Type'} (_37166 : type627 _90715 B) (GEN_PVAR_84 : _90715) (u : _90715 -> Prop) (f : _90715 -> B) (t : _90715 -> Prop) : ((_37166 u f t GEN_PVAR_84) = (term65 _90715 B GEN_PVAR_84 u f t)) = ((_37166 u f t GEN_PVAR_84) = (term65 _90715 B GEN_PVAR_84 u f t)).
Proof. exact (MK_COMB (@lem3513247 _90715 B _37166 u f t GEN_PVAR_84) (@lem3513236 _90715 B GEN_PVAR_84 u f t)). Qed.
Lemma lem3513249 {_90715 B : Type'} (_37166 : type627 _90715 B) (u : _90715 -> Prop) (f : _90715 -> B) (t : _90715 -> Prop) : (term2203 _90715 B _37166 u f t) = (term2203 _90715 B _37166 u f t).
Proof. exact (fun_ext (fun GEN_PVAR_84 : _90715 => @lem3513248 _90715 B _37166 GEN_PVAR_84 u f t)). Qed.
Lemma lem3513250 {_90715 : Type'} : (@all _90715) = (@all _90715).
Proof. exact (eq_refl (@all _90715)). Qed.
Lemma lem3513251 {_90715 B : Type'} (_37166 : type627 _90715 B) (u : _90715 -> Prop) (f : _90715 -> B) (t : _90715 -> Prop) : (term2204 _90715 B _37166 u f t) = (term2204 _90715 B _37166 u f t).
Proof. exact (MK_COMB (@lem3513250 _90715) (@lem3513249 _90715 B _37166 u f t)). Qed.
Lemma lem3513252 {_90715 B : Type'} (_37166 : type627 _90715 B) (u : _90715 -> Prop) (f : _90715 -> B) : (term2205 _90715 B _37166 u f) = (term2205 _90715 B _37166 u f).
Proof. exact (fun_ext (fun t : _90715 -> Prop => @lem3513251 _90715 B _37166 u f t)). Qed.
Lemma lem3513253 {_90715 : Type'} : (@all (_90715 -> Prop)) = (@all (_90715 -> Prop)).
Proof. exact (eq_refl (@all (_90715 -> Prop))). Qed.
Lemma lem3513254 {_90715 B : Type'} (_37166 : type627 _90715 B) (u : _90715 -> Prop) (f : _90715 -> B) : (term2206 _90715 B _37166 u f) = (term2206 _90715 B _37166 u f).
Proof. exact (MK_COMB (@lem3513253 _90715) (@lem3513252 _90715 B _37166 u f)). Qed.
Lemma lem3513255 {_90715 B : Type'} (_37166 : type627 _90715 B) (u : _90715 -> Prop) : (term2207 _90715 B _37166 u) = (term2207 _90715 B _37166 u).
Proof. exact (fun_ext (fun f : _90715 -> B => @lem3513254 _90715 B _37166 u f)). Qed.
Lemma lem3513256 {_90715 B : Type'} : (@all (_90715 -> B)) = (@all (_90715 -> B)).
Proof. exact (eq_refl (@all (_90715 -> B))). Qed.
Lemma lem3513257 {_90715 B : Type'} (_37166 : type627 _90715 B) (u : _90715 -> Prop) : (term2208 _90715 B _37166 u) = (term2208 _90715 B _37166 u).
Proof. exact (MK_COMB (@lem3513256 _90715 B) (@lem3513255 _90715 B _37166 u)). Qed.
Lemma lem3513258 {_90715 B : Type'} (_37166 : type627 _90715 B) : (term2209 _90715 B _37166) = (term2209 _90715 B _37166).
Proof. exact (fun_ext (fun u : _90715 -> Prop => @lem3513257 _90715 B _37166 u)). Qed.
Lemma lem3513259 {_90715 : Type'} : (@all (_90715 -> Prop)) = (@all (_90715 -> Prop)).
Proof. exact (eq_refl (@all (_90715 -> Prop))). Qed.
Lemma lem3513260 {_90715 B : Type'} (_37166 : type627 _90715 B) : (term2210 _90715 B _37166) = (term2210 _90715 B _37166).
Proof. exact (MK_COMB (@lem3513259 _90715) (@lem3513258 _90715 B _37166)). Qed.
Lemma lem3513261 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem3513262 {_90715 B : Type'} (_37166 : type627 _90715 B) : (term2211 _90715 B _37166) = (term2211 _90715 B _37166).
Proof. exact (MK_COMB (@lem3513261) (@lem3513260 _90715 B _37166)). Qed.
Lemma lem3513263 {_90715 _90724 A B : Type'} (_37166 : type627 _90715 B) (_37167 : type616 _90715 A) (h1 : _37167 = (term2326 _90715 A)) : (term2323 _90715 _90724 A B _37166) = (term2372 _90715 _90724 A B _37166 _37167).
Proof. exact (MK_COMB (@lem3513262 _90715 B _37166) (@lem3513208 _90715 _90724 A B _37166 _37167 h1)). Qed.
Lemma lem3513264 {_90715 _90724 A B : Type'} (_37167 : type616 _90715 A) (h1 : _37167 = (term2326 _90715 A)) : (term2324 _90715 _90724 A B) = (term2373 _90715 _90724 A B _37167).
Proof. exact (fun_ext (fun _37166 : type627 _90715 B => @lem3513263 _90715 _90724 A B _37166 _37167 h1)). Qed.
Lemma lem3513265 {_90715 B : Type'} : (@all ((_90715 -> Prop) -> (_90715 -> B) -> (_90715 -> Prop) -> _90715 -> Prop)) = (@all ((_90715 -> Prop) -> (_90715 -> B) -> (_90715 -> Prop) -> _90715 -> Prop)).
Proof. exact (eq_refl (@all ((_90715 -> Prop) -> (_90715 -> B) -> (_90715 -> Prop) -> _90715 -> Prop))). Qed.
Lemma lem3513266 {_90715 _90724 A B : Type'} (_37167 : type616 _90715 A) (h1 : _37167 = (term2326 _90715 A)) : (term2325 _90715 _90724 A B) = (term2374 _90715 _90724 A B _37167).
Proof. exact (MK_COMB (@lem3513265 _90715 B) (@lem3513264 _90715 _90724 A B _37167 h1)). Qed.
Lemma lem3513267 {_90715 _90724 A B : Type'} (_37167 : type616 _90715 A) : term2375 _90715 _90724 A B _37167.
Proof. exact (fun h0 : _37167 = (term2326 _90715 A) => @lem3513266 _90715 _90724 A B _37167 h0). Qed.
Lemma lem3513268 {_90715 _90724 A B : Type'} : term2376 _90715 _90724 A B.
Proof. exact (fun _37167 : type616 _90715 A => @lem3513267 _90715 _90724 A B _37167). Qed.
Lemma lem3513270 {_3603 : Type'} (P : Prop) (c : _3603) (Q : _3603 -> Prop) : term2146 _3603 P c Q.
Proof. exact (EQ_MP (@lem20230 _3603 P c Q) (@lem0)). Qed.
Lemma lem3513271 {_90715 A : Type'} (P : Prop) (c : type616 _90715 A) (Q : type125 _90715 A) : term2377 _90715 A P c Q.
Proof. exact (@lem3513270 (type616 _90715 A) P c Q). Qed.
Lemma lem3513272 {_90715 _90724 A B : Type'} : term2378 _90715 _90724 A B.
Proof. exact (@lem3513271 _90715 A (term2325 _90715 _90724 A B) (term2326 _90715 A) (term2379 _90715 _90724 A B)). Qed.
Lemma lem3513273 {_90715 _90724 A B : Type'} (_37167 : type616 _90715 A) : (term2380 _90715 _90724 A B _37167) = (term2374 _90715 _90724 A B _37167).
Proof. exact (eq_refl (term2380 _90715 _90724 A B _37167)). Qed.
Lemma lem3513274 {_90715 _90724 A B : Type'} : (term2381 _90715 _90724 A B) = (term2381 _90715 _90724 A B).
Proof. exact (eq_refl (term2381 _90715 _90724 A B)). Qed.
Lemma lem3513275 {_90715 _90724 A B : Type'} (_37167 : type616 _90715 A) : ((term2325 _90715 _90724 A B) = (term2380 _90715 _90724 A B _37167)) = ((term2325 _90715 _90724 A B) = (term2374 _90715 _90724 A B _37167)).
Proof. exact (MK_COMB (@lem3513274 _90715 _90724 A B) (@lem3513273 _90715 _90724 A B _37167)). Qed.
Lemma lem3513276 {_90715 A : Type'} (_37167 : type616 _90715 A) : (term2382 _90715 A _37167) = (term2382 _90715 A _37167).
Proof. exact (eq_refl (term2382 _90715 A _37167)). Qed.
Lemma lem3513277 {_90715 _90724 A B : Type'} (_37167 : type616 _90715 A) : (term2383 _90715 _90724 A B _37167) = (term2375 _90715 _90724 A B _37167).
Proof. exact (MK_COMB (@lem3513276 _90715 A _37167) (@lem3513275 _90715 _90724 A B _37167)). Qed.
Lemma lem3513278 {_90715 _90724 A B : Type'} : (term2384 _90715 _90724 A B) = (term2385 _90715 _90724 A B).
Proof. exact (fun_ext (fun _37167 : type616 _90715 A => @lem3513277 _90715 _90724 A B _37167)). Qed.
Lemma lem3513279 {_90715 A : Type'} : (@all ((_90715 -> Prop) -> (_90715 -> A -> Prop) -> (_90715 -> Prop) -> _90715 -> Prop)) = (@all ((_90715 -> Prop) -> (_90715 -> A -> Prop) -> (_90715 -> Prop) -> _90715 -> Prop)).
Proof. exact (eq_refl (@all ((_90715 -> Prop) -> (_90715 -> A -> Prop) -> (_90715 -> Prop) -> _90715 -> Prop))). Qed.
Lemma lem3513280 {_90715 _90724 A B : Type'} : (term2386 _90715 _90724 A B) = (term2376 _90715 _90724 A B).
Proof. exact (MK_COMB (@lem3513279 _90715 A) (@lem3513278 _90715 _90724 A B)). Qed.
Lemma lem3513281 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem3513282 {_90715 _90724 A B : Type'} : (term2387 _90715 _90724 A B) = (term2388 _90715 _90724 A B).
Proof. exact (MK_COMB (@lem3513281) (@lem3513280 _90715 _90724 A B)). Qed.
Lemma lem3513283 {_90715 _90724 A B : Type'} (_37167 : type616 _90715 A) : (term2380 _90715 _90724 A B _37167) = (term2374 _90715 _90724 A B _37167).
Proof. exact (eq_refl (term2380 _90715 _90724 A B _37167)). Qed.
Lemma lem3513284 {_90715 A : Type'} (_37167 : type616 _90715 A) : (term2382 _90715 A _37167) = (term2382 _90715 A _37167).
Proof. exact (eq_refl (term2382 _90715 A _37167)). Qed.
Lemma lem3513285 {_90715 _90724 A B : Type'} (_37167 : type616 _90715 A) : (term2389 _90715 _90724 A B _37167) = (term2390 _90715 _90724 A B _37167).
Proof. exact (MK_COMB (@lem3513284 _90715 A _37167) (@lem3513283 _90715 _90724 A B _37167)). Qed.
Lemma lem3513286 {_90715 _90724 A B : Type'} : (term2391 _90715 _90724 A B) = (term2392 _90715 _90724 A B).
Proof. exact (fun_ext (fun _37167 : type616 _90715 A => @lem3513285 _90715 _90724 A B _37167)). Qed.
Lemma lem3513287 {_90715 A : Type'} : (@all ((_90715 -> Prop) -> (_90715 -> A -> Prop) -> (_90715 -> Prop) -> _90715 -> Prop)) = (@all ((_90715 -> Prop) -> (_90715 -> A -> Prop) -> (_90715 -> Prop) -> _90715 -> Prop)).
Proof. exact (eq_refl (@all ((_90715 -> Prop) -> (_90715 -> A -> Prop) -> (_90715 -> Prop) -> _90715 -> Prop))). Qed.
Lemma lem3513288 {_90715 _90724 A B : Type'} : (term2393 _90715 _90724 A B) = (term2394 _90715 _90724 A B).
Proof. exact (MK_COMB (@lem3513287 _90715 A) (@lem3513286 _90715 _90724 A B)). Qed.
Lemma lem3513289 {_90715 _90724 A B : Type'} : (term2381 _90715 _90724 A B) = (term2381 _90715 _90724 A B).
Proof. exact (eq_refl (term2381 _90715 _90724 A B)). Qed.
Lemma lem3513290 {_90715 _90724 A B : Type'} : ((term2325 _90715 _90724 A B) = (term2393 _90715 _90724 A B)) = ((term2325 _90715 _90724 A B) = (term2394 _90715 _90724 A B)).
Proof. exact (MK_COMB (@lem3513289 _90715 _90724 A B) (@lem3513288 _90715 _90724 A B)). Qed.
Lemma lem3513291 {_90715 _90724 A B : Type'} : (term2378 _90715 _90724 A B) = (term2395 _90715 _90724 A B).
Proof. exact (MK_COMB (@lem3513282 _90715 _90724 A B) (@lem3513290 _90715 _90724 A B)). Qed.
Lemma lem3513292 {_90715 _90724 A B : Type'} : term2395 _90715 _90724 A B.
Proof. exact (EQ_MP (@lem3513291 _90715 _90724 A B) (@lem3513272 _90715 _90724 A B)). Qed.
Lemma lem3513293 {_90715 _90724 A B : Type'} : (term2325 _90715 _90724 A B) = (term2394 _90715 _90724 A B).
Proof. exact (@lem3513292 _90715 _90724 A B (@lem3513268 _90715 _90724 A B)). Qed.
Lemma lem3513295 {_3571 _3575 : Type'} (s : _3575 -> _3571) (t : _3575 -> _3571) : (s = (term2166 _3571 _3575 t)) = (term2167 _3571 _3575 s t).
Proof. exact (EQ_MP (@lem19792 _3571 _3575 s t) (@lem0)). Qed.
Lemma lem3513296 {_90715 A : Type'} (s : type616 _90715 A) (t : type616 _90715 A) : (s = (term2396 _90715 A t)) = (term2397 _90715 A s t).
Proof. exact (@lem3513295 (type456 _90715 A) (_90715 -> Prop) s t). Qed.
Lemma lem3513297 {_90715 A : Type'} (_37167 : type616 _90715 A) : (_37167 = (term2398 _90715 A)) = (term2399 _90715 A _37167).
Proof. exact (@lem3513296 _90715 A _37167 (term2326 _90715 A)). Qed.
Lemma lem3513298 {_90715 A : Type'} (u : _90715 -> Prop) : (term2327 _90715 A u) = (term2328 _90715 A u).
Proof. exact (eq_refl (term2327 _90715 A u)). Qed.
Lemma lem3513299 {_90715 A : Type'} : (term2398 _90715 A) = (term2326 _90715 A).
Proof. exact (fun_ext (fun u : _90715 -> Prop => @lem3513298 _90715 A u)). Qed.
Lemma lem3513300 {_90715 A : Type'} (_37167 : type616 _90715 A) : (@eq ((_90715 -> Prop) -> (_90715 -> A -> Prop) -> (_90715 -> Prop) -> _90715 -> Prop) _37167) = (@eq ((_90715 -> Prop) -> (_90715 -> A -> Prop) -> (_90715 -> Prop) -> _90715 -> Prop) _37167).
Proof. exact (eq_refl (@eq ((_90715 -> Prop) -> (_90715 -> A -> Prop) -> (_90715 -> Prop) -> _90715 -> Prop) _37167)). Qed.
Lemma lem3513301 {_90715 A : Type'} (_37167 : type616 _90715 A) : (_37167 = (term2398 _90715 A)) = (_37167 = (term2326 _90715 A)).
Proof. exact (MK_COMB (@lem3513300 _90715 A _37167) (@lem3513299 _90715 A)). Qed.
Lemma lem3513302 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem3513303 {_90715 A : Type'} (_37167 : type616 _90715 A) : (term2400 _90715 A _37167) = (term2401 _90715 A _37167).
Proof. exact (MK_COMB (@lem3513302) (@lem3513301 _90715 A _37167)). Qed.
Lemma lem3513304 {_90715 A : Type'} (u : _90715 -> Prop) : (term2327 _90715 A u) = (term2328 _90715 A u).
Proof. exact (eq_refl (term2327 _90715 A u)). Qed.
Lemma lem3513305 {_90715 A : Type'} (_37167 : type616 _90715 A) (u : _90715 -> Prop) : (term2329 _90715 A _37167 u) = (term2329 _90715 A _37167 u).
Proof. exact (eq_refl (term2329 _90715 A _37167 u)). Qed.
Lemma lem3513306 {_90715 A : Type'} (_37167 : type616 _90715 A) (u : _90715 -> Prop) : ((_37167 u) = (term2327 _90715 A u)) = ((_37167 u) = (term2328 _90715 A u)).
Proof. exact (MK_COMB (@lem3513305 _90715 A _37167 u) (@lem3513304 _90715 A u)). Qed.
Lemma lem3513307 {_90715 A : Type'} (_37167 : type616 _90715 A) : (term2402 _90715 A _37167) = (term2403 _90715 A _37167).
Proof. exact (fun_ext (fun u : _90715 -> Prop => @lem3513306 _90715 A _37167 u)). Qed.
Lemma lem3513308 {_90715 : Type'} : (@all (_90715 -> Prop)) = (@all (_90715 -> Prop)).
Proof. exact (eq_refl (@all (_90715 -> Prop))). Qed.
Lemma lem3513309 {_90715 A : Type'} (_37167 : type616 _90715 A) : (term2399 _90715 A _37167) = (term2404 _90715 A _37167).
Proof. exact (MK_COMB (@lem3513308 _90715) (@lem3513307 _90715 A _37167)). Qed.
Lemma lem3513310 {_90715 A : Type'} (_37167 : type616 _90715 A) : ((_37167 = (term2398 _90715 A)) = (term2399 _90715 A _37167)) = ((_37167 = (term2326 _90715 A)) = (term2404 _90715 A _37167)).
Proof. exact (MK_COMB (@lem3513303 _90715 A _37167) (@lem3513309 _90715 A _37167)). Qed.
Lemma lem3513311 {_90715 A : Type'} (_37167 : type616 _90715 A) : (_37167 = (term2326 _90715 A)) = (term2404 _90715 A _37167).
Proof. exact (EQ_MP (@lem3513310 _90715 A _37167) (@lem3513297 _90715 A _37167)). Qed.
Lemma lem3513313 {_3571 _3575 : Type'} (s : _3575 -> _3571) (t : _3575 -> _3571) : (s = (term2166 _3571 _3575 t)) = (term2167 _3571 _3575 s t).
Proof. exact (EQ_MP (@lem19792 _3571 _3575 s t) (@lem0)). Qed.
Lemma lem3513314 {_90715 A : Type'} (s : type456 _90715 A) (t : type456 _90715 A) : (s = (term2405 _90715 A t)) = (term2406 _90715 A s t).
Proof. exact (@lem3513313 (type672 _90715) (type1413 _90715 A) s t). Qed.
Lemma lem3513315 {_90715 A : Type'} (_37167 : type616 _90715 A) (u : _90715 -> Prop) : ((_37167 u) = (term2407 _90715 A u)) = (term2408 _90715 A _37167 u).
Proof. exact (@lem3513314 _90715 A (_37167 u) (term2328 _90715 A u)). Qed.
Lemma lem3513316 {_90715 A : Type'} (u : _90715 -> Prop) (f : type1413 _90715 A) : (term2330 _90715 A u f) = (term2331 _90715 A u f).
Proof. exact (eq_refl (term2330 _90715 A u f)). Qed.
Lemma lem3513317 {_90715 A : Type'} (u : _90715 -> Prop) : (term2407 _90715 A u) = (term2328 _90715 A u).
Proof. exact (fun_ext (fun f : type1413 _90715 A => @lem3513316 _90715 A u f)). Qed.
Lemma lem3513318 {_90715 A : Type'} (_37167 : type616 _90715 A) (u : _90715 -> Prop) : (term2329 _90715 A _37167 u) = (term2329 _90715 A _37167 u).
Proof. exact (eq_refl (term2329 _90715 A _37167 u)). Qed.
Lemma lem3513319 {_90715 A : Type'} (_37167 : type616 _90715 A) (u : _90715 -> Prop) : ((_37167 u) = (term2407 _90715 A u)) = ((_37167 u) = (term2328 _90715 A u)).
Proof. exact (MK_COMB (@lem3513318 _90715 A _37167 u) (@lem3513317 _90715 A u)). Qed.
Lemma lem3513320 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem3513321 {_90715 A : Type'} (_37167 : type616 _90715 A) (u : _90715 -> Prop) : (term2409 _90715 A _37167 u) = (term2410 _90715 A _37167 u).
Proof. exact (MK_COMB (@lem3513320) (@lem3513319 _90715 A _37167 u)). Qed.
Lemma lem3513322 {_90715 A : Type'} (u : _90715 -> Prop) (f : type1413 _90715 A) : (term2330 _90715 A u f) = (term2331 _90715 A u f).
Proof. exact (eq_refl (term2330 _90715 A u f)). Qed.
Lemma lem3513323 {_90715 A : Type'} (_37167 : type616 _90715 A) (u : _90715 -> Prop) (f : type1413 _90715 A) : (term2332 _90715 A _37167 u f) = (term2332 _90715 A _37167 u f).
Proof. exact (eq_refl (term2332 _90715 A _37167 u f)). Qed.
Lemma lem3513324 {_90715 A : Type'} (_37167 : type616 _90715 A) (u : _90715 -> Prop) (f : type1413 _90715 A) : ((_37167 u f) = (term2330 _90715 A u f)) = ((_37167 u f) = (term2331 _90715 A u f)).
Proof. exact (MK_COMB (@lem3513323 _90715 A _37167 u f) (@lem3513322 _90715 A u f)). Qed.
Lemma lem3513325 {_90715 A : Type'} (_37167 : type616 _90715 A) (u : _90715 -> Prop) : (term2411 _90715 A _37167 u) = (term2412 _90715 A _37167 u).
Proof. exact (fun_ext (fun f : type1413 _90715 A => @lem3513324 _90715 A _37167 u f)). Qed.
Lemma lem3513326 {_90715 A : Type'} : (@all (_90715 -> A -> Prop)) = (@all (_90715 -> A -> Prop)).
Proof. exact (eq_refl (@all (_90715 -> A -> Prop))). Qed.
Lemma lem3513327 {_90715 A : Type'} (_37167 : type616 _90715 A) (u : _90715 -> Prop) : (term2408 _90715 A _37167 u) = (term2413 _90715 A _37167 u).
Proof. exact (MK_COMB (@lem3513326 _90715 A) (@lem3513325 _90715 A _37167 u)). Qed.
Lemma lem3513328 {_90715 A : Type'} (_37167 : type616 _90715 A) (u : _90715 -> Prop) : (((_37167 u) = (term2407 _90715 A u)) = (term2408 _90715 A _37167 u)) = (((_37167 u) = (term2328 _90715 A u)) = (term2413 _90715 A _37167 u)).
Proof. exact (MK_COMB (@lem3513321 _90715 A _37167 u) (@lem3513327 _90715 A _37167 u)). Qed.
Lemma lem3513329 {_90715 A : Type'} (_37167 : type616 _90715 A) (u : _90715 -> Prop) : ((_37167 u) = (term2328 _90715 A u)) = (term2413 _90715 A _37167 u).
Proof. exact (EQ_MP (@lem3513328 _90715 A _37167 u) (@lem3513315 _90715 A _37167 u)). Qed.
Lemma lem3513331 {_3571 _3575 : Type'} (s : _3575 -> _3571) (t : _3575 -> _3571) : (s = (term2166 _3571 _3575 t)) = (term2167 _3571 _3575 s t).
Proof. exact (EQ_MP (@lem19792 _3571 _3575 s t) (@lem0)). Qed.
Lemma lem3513332 {_90715 : Type'} (s : type672 _90715) (t : type672 _90715) : (s = (term2186 _90715 t)) = (term2187 _90715 s t).
Proof. exact (@lem3513331 (_90715 -> Prop) (_90715 -> Prop) s t). Qed.
Lemma lem3513333 {_90715 A : Type'} (_37167 : type616 _90715 A) (u : _90715 -> Prop) (f : type1413 _90715 A) : ((_37167 u f) = (term2414 _90715 A u f)) = (term2415 _90715 A _37167 u f).
Proof. exact (@lem3513332 _90715 (_37167 u f) (term2331 _90715 A u f)). Qed.
Lemma lem3513334 {_90715 A : Type'} (u : _90715 -> Prop) (f : type1413 _90715 A) (t : _90715 -> Prop) : (term2333 _90715 A u f t) = (term2104 _90715 A u f t).
Proof. exact (eq_refl (term2333 _90715 A u f t)). Qed.
Lemma lem3513335 {_90715 A : Type'} (u : _90715 -> Prop) (f : type1413 _90715 A) : (term2414 _90715 A u f) = (term2331 _90715 A u f).
Proof. exact (fun_ext (fun t : _90715 -> Prop => @lem3513334 _90715 A u f t)). Qed.
Lemma lem3513336 {_90715 A : Type'} (_37167 : type616 _90715 A) (u : _90715 -> Prop) (f : type1413 _90715 A) : (term2332 _90715 A _37167 u f) = (term2332 _90715 A _37167 u f).
Proof. exact (eq_refl (term2332 _90715 A _37167 u f)). Qed.
Lemma lem3513337 {_90715 A : Type'} (_37167 : type616 _90715 A) (u : _90715 -> Prop) (f : type1413 _90715 A) : ((_37167 u f) = (term2414 _90715 A u f)) = ((_37167 u f) = (term2331 _90715 A u f)).
Proof. exact (MK_COMB (@lem3513336 _90715 A _37167 u f) (@lem3513335 _90715 A u f)). Qed.
Lemma lem3513338 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem3513339 {_90715 A : Type'} (_37167 : type616 _90715 A) (u : _90715 -> Prop) (f : type1413 _90715 A) : (term2416 _90715 A _37167 u f) = (term2417 _90715 A _37167 u f).
Proof. exact (MK_COMB (@lem3513338) (@lem3513337 _90715 A _37167 u f)). Qed.
Lemma lem3513340 {_90715 A : Type'} (u : _90715 -> Prop) (f : type1413 _90715 A) (t : _90715 -> Prop) : (term2333 _90715 A u f t) = (term2104 _90715 A u f t).
Proof. exact (eq_refl (term2333 _90715 A u f t)). Qed.
Lemma lem3513341 {_90715 A : Type'} (_37167 : type616 _90715 A) (u : _90715 -> Prop) (f : type1413 _90715 A) (t : _90715 -> Prop) : (term2334 _90715 A _37167 u f t) = (term2334 _90715 A _37167 u f t).
Proof. exact (eq_refl (term2334 _90715 A _37167 u f t)). Qed.
Lemma lem3513342 {_90715 A : Type'} (_37167 : type616 _90715 A) (u : _90715 -> Prop) (f : type1413 _90715 A) (t : _90715 -> Prop) : ((_37167 u f t) = (term2333 _90715 A u f t)) = ((_37167 u f t) = (term2104 _90715 A u f t)).
Proof. exact (MK_COMB (@lem3513341 _90715 A _37167 u f t) (@lem3513340 _90715 A u f t)). Qed.
Lemma lem3513343 {_90715 A : Type'} (_37167 : type616 _90715 A) (u : _90715 -> Prop) (f : type1413 _90715 A) : (term2418 _90715 A _37167 u f) = (term2419 _90715 A _37167 u f).
Proof. exact (fun_ext (fun t : _90715 -> Prop => @lem3513342 _90715 A _37167 u f t)). Qed.
Lemma lem3513344 {_90715 : Type'} : (@all (_90715 -> Prop)) = (@all (_90715 -> Prop)).
Proof. exact (eq_refl (@all (_90715 -> Prop))). Qed.
Lemma lem3513345 {_90715 A : Type'} (_37167 : type616 _90715 A) (u : _90715 -> Prop) (f : type1413 _90715 A) : (term2415 _90715 A _37167 u f) = (term2420 _90715 A _37167 u f).
Proof. exact (MK_COMB (@lem3513344 _90715) (@lem3513343 _90715 A _37167 u f)). Qed.
Lemma lem3513346 {_90715 A : Type'} (_37167 : type616 _90715 A) (u : _90715 -> Prop) (f : type1413 _90715 A) : (((_37167 u f) = (term2414 _90715 A u f)) = (term2415 _90715 A _37167 u f)) = (((_37167 u f) = (term2331 _90715 A u f)) = (term2420 _90715 A _37167 u f)).
Proof. exact (MK_COMB (@lem3513339 _90715 A _37167 u f) (@lem3513345 _90715 A _37167 u f)). Qed.
Lemma lem3513347 {_90715 A : Type'} (_37167 : type616 _90715 A) (u : _90715 -> Prop) (f : type1413 _90715 A) : ((_37167 u f) = (term2331 _90715 A u f)) = (term2420 _90715 A _37167 u f).
Proof. exact (EQ_MP (@lem3513346 _90715 A _37167 u f) (@lem3513333 _90715 A _37167 u f)). Qed.
Lemma lem3513349 {_3571 _3575 : Type'} (s : _3575 -> _3571) (t : _3575 -> _3571) : (s = (term2166 _3571 _3575 t)) = (term2167 _3571 _3575 s t).
Proof. exact (EQ_MP (@lem19792 _3571 _3575 s t) (@lem0)). Qed.
Lemma lem3513350 {_90715 : Type'} (s : _90715 -> Prop) (t : _90715 -> Prop) : (s = (term1665 _90715 t)) = (term2195 _90715 s t).
Proof. exact (@lem3513349 Prop _90715 s t). Qed.
Lemma lem3513351 {_90715 A : Type'} (_37167 : type616 _90715 A) (u : _90715 -> Prop) (f : type1413 _90715 A) (t : _90715 -> Prop) : ((_37167 u f t) = (term2421 _90715 A u f t)) = (term2422 _90715 A _37167 u f t).
Proof. exact (@lem3513350 _90715 (_37167 u f t) (term2104 _90715 A u f t)). Qed.
Lemma lem3513352 {_90715 A : Type'} (GEN_PVAR_84 : _90715) (u : _90715 -> Prop) (f : type1413 _90715 A) (t : _90715 -> Prop) : (term2423 _90715 A u f t GEN_PVAR_84) = (term2103 _90715 A GEN_PVAR_84 u f t).
Proof. exact (eq_refl (term2423 _90715 A u f t GEN_PVAR_84)). Qed.
Lemma lem3513353 {_90715 A : Type'} (u : _90715 -> Prop) (f : type1413 _90715 A) (t : _90715 -> Prop) : (term2421 _90715 A u f t) = (term2104 _90715 A u f t).
Proof. exact (fun_ext (fun GEN_PVAR_84 : _90715 => @lem3513352 _90715 A GEN_PVAR_84 u f t)). Qed.
Lemma lem3513354 {_90715 A : Type'} (_37167 : type616 _90715 A) (u : _90715 -> Prop) (f : type1413 _90715 A) (t : _90715 -> Prop) : (term2334 _90715 A _37167 u f t) = (term2334 _90715 A _37167 u f t).
Proof. exact (eq_refl (term2334 _90715 A _37167 u f t)). Qed.
Lemma lem3513355 {_90715 A : Type'} (_37167 : type616 _90715 A) (u : _90715 -> Prop) (f : type1413 _90715 A) (t : _90715 -> Prop) : ((_37167 u f t) = (term2421 _90715 A u f t)) = ((_37167 u f t) = (term2104 _90715 A u f t)).
Proof. exact (MK_COMB (@lem3513354 _90715 A _37167 u f t) (@lem3513353 _90715 A u f t)). Qed.
Lemma lem3513356 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem3513357 {_90715 A : Type'} (_37167 : type616 _90715 A) (u : _90715 -> Prop) (f : type1413 _90715 A) (t : _90715 -> Prop) : (term2424 _90715 A _37167 u f t) = (term2425 _90715 A _37167 u f t).
Proof. exact (MK_COMB (@lem3513356) (@lem3513355 _90715 A _37167 u f t)). Qed.
Lemma lem3513358 {_90715 A : Type'} (GEN_PVAR_84 : _90715) (u : _90715 -> Prop) (f : type1413 _90715 A) (t : _90715 -> Prop) : (term2423 _90715 A u f t GEN_PVAR_84) = (term2103 _90715 A GEN_PVAR_84 u f t).
Proof. exact (eq_refl (term2423 _90715 A u f t GEN_PVAR_84)). Qed.
Lemma lem3513359 {_90715 A : Type'} (_37167 : type616 _90715 A) (u : _90715 -> Prop) (f : type1413 _90715 A) (t : _90715 -> Prop) (GEN_PVAR_84 : _90715) : (term2426 _90715 A _37167 u f t GEN_PVAR_84) = (term2426 _90715 A _37167 u f t GEN_PVAR_84).
Proof. exact (eq_refl (term2426 _90715 A _37167 u f t GEN_PVAR_84)). Qed.
Lemma lem3513360 {_90715 A : Type'} (_37167 : type616 _90715 A) (GEN_PVAR_84 : _90715) (u : _90715 -> Prop) (f : type1413 _90715 A) (t : _90715 -> Prop) : ((_37167 u f t GEN_PVAR_84) = (term2423 _90715 A u f t GEN_PVAR_84)) = ((_37167 u f t GEN_PVAR_84) = (term2103 _90715 A GEN_PVAR_84 u f t)).
Proof. exact (MK_COMB (@lem3513359 _90715 A _37167 u f t GEN_PVAR_84) (@lem3513358 _90715 A GEN_PVAR_84 u f t)). Qed.
Lemma lem3513361 {_90715 A : Type'} (_37167 : type616 _90715 A) (u : _90715 -> Prop) (f : type1413 _90715 A) (t : _90715 -> Prop) : (term2427 _90715 A _37167 u f t) = (term2428 _90715 A _37167 u f t).
Proof. exact (fun_ext (fun GEN_PVAR_84 : _90715 => @lem3513360 _90715 A _37167 GEN_PVAR_84 u f t)). Qed.
Lemma lem3513362 {_90715 : Type'} : (@all _90715) = (@all _90715).
Proof. exact (eq_refl (@all _90715)). Qed.
Lemma lem3513363 {_90715 A : Type'} (_37167 : type616 _90715 A) (u : _90715 -> Prop) (f : type1413 _90715 A) (t : _90715 -> Prop) : (term2422 _90715 A _37167 u f t) = (term2429 _90715 A _37167 u f t).
Proof. exact (MK_COMB (@lem3513362 _90715) (@lem3513361 _90715 A _37167 u f t)). Qed.
Lemma lem3513364 {_90715 A : Type'} (_37167 : type616 _90715 A) (u : _90715 -> Prop) (f : type1413 _90715 A) (t : _90715 -> Prop) : (((_37167 u f t) = (term2421 _90715 A u f t)) = (term2422 _90715 A _37167 u f t)) = (((_37167 u f t) = (term2104 _90715 A u f t)) = (term2429 _90715 A _37167 u f t)).
Proof. exact (MK_COMB (@lem3513357 _90715 A _37167 u f t) (@lem3513363 _90715 A _37167 u f t)). Qed.
Lemma lem3513365 {_90715 A : Type'} (_37167 : type616 _90715 A) (u : _90715 -> Prop) (f : type1413 _90715 A) (t : _90715 -> Prop) : ((_37167 u f t) = (term2104 _90715 A u f t)) = (term2429 _90715 A _37167 u f t).
Proof. exact (EQ_MP (@lem3513364 _90715 A _37167 u f t) (@lem3513351 _90715 A _37167 u f t)). Qed.
Lemma lem3513366 {_90715 A : Type'} (_37167 : type616 _90715 A) (GEN_PVAR_84 : _90715) (u : _90715 -> Prop) (f : type1413 _90715 A) (t : _90715 -> Prop) : ((_37167 u f t GEN_PVAR_84) = (term2103 _90715 A GEN_PVAR_84 u f t)) = ((_37167 u f t GEN_PVAR_84) = (term2103 _90715 A GEN_PVAR_84 u f t)).
Proof. exact (eq_refl ((_37167 u f t GEN_PVAR_84) = (term2103 _90715 A GEN_PVAR_84 u f t))). Qed.
Lemma lem3513367 {_90715 A : Type'} (_37167 : type616 _90715 A) (u : _90715 -> Prop) (f : type1413 _90715 A) (t : _90715 -> Prop) : (term2428 _90715 A _37167 u f t) = (term2428 _90715 A _37167 u f t).
Proof. exact (fun_ext (fun GEN_PVAR_84 : _90715 => @lem3513366 _90715 A _37167 GEN_PVAR_84 u f t)). Qed.
Lemma lem3513368 {_90715 : Type'} : (@all _90715) = (@all _90715).
Proof. exact (eq_refl (@all _90715)). Qed.
Lemma lem3513369 {_90715 A : Type'} (_37167 : type616 _90715 A) (u : _90715 -> Prop) (f : type1413 _90715 A) (t : _90715 -> Prop) : (term2429 _90715 A _37167 u f t) = (term2429 _90715 A _37167 u f t).
Proof. exact (MK_COMB (@lem3513368 _90715) (@lem3513367 _90715 A _37167 u f t)). Qed.
Lemma lem3513370 {_90715 A : Type'} (_37167 : type616 _90715 A) (u : _90715 -> Prop) (f : type1413 _90715 A) (t : _90715 -> Prop) : ((_37167 u f t) = (term2104 _90715 A u f t)) = (term2429 _90715 A _37167 u f t).
Proof. exact (TRANS (@lem3513365 _90715 A _37167 u f t) (@lem3513369 _90715 A _37167 u f t)). Qed.
Lemma lem3513371 {_90715 A : Type'} (_37167 : type616 _90715 A) (u : _90715 -> Prop) (f : type1413 _90715 A) : (term2419 _90715 A _37167 u f) = (term2430 _90715 A _37167 u f).
Proof. exact (fun_ext (fun t : _90715 -> Prop => @lem3513370 _90715 A _37167 u f t)). Qed.
Lemma lem3513372 {_90715 : Type'} : (@all (_90715 -> Prop)) = (@all (_90715 -> Prop)).
Proof. exact (eq_refl (@all (_90715 -> Prop))). Qed.
Lemma lem3513373 {_90715 A : Type'} (_37167 : type616 _90715 A) (u : _90715 -> Prop) (f : type1413 _90715 A) : (term2420 _90715 A _37167 u f) = (term2431 _90715 A _37167 u f).
Proof. exact (MK_COMB (@lem3513372 _90715) (@lem3513371 _90715 A _37167 u f)). Qed.
Lemma lem3513374 {_90715 A : Type'} (_37167 : type616 _90715 A) (u : _90715 -> Prop) (f : type1413 _90715 A) : ((_37167 u f) = (term2331 _90715 A u f)) = (term2431 _90715 A _37167 u f).
Proof. exact (TRANS (@lem3513347 _90715 A _37167 u f) (@lem3513373 _90715 A _37167 u f)). Qed.
Lemma lem3513375 {_90715 A : Type'} (_37167 : type616 _90715 A) (u : _90715 -> Prop) : (term2412 _90715 A _37167 u) = (term2432 _90715 A _37167 u).
Proof. exact (fun_ext (fun f : type1413 _90715 A => @lem3513374 _90715 A _37167 u f)). Qed.
Lemma lem3513376 {_90715 A : Type'} : (@all (_90715 -> A -> Prop)) = (@all (_90715 -> A -> Prop)).
Proof. exact (eq_refl (@all (_90715 -> A -> Prop))). Qed.
Lemma lem3513377 {_90715 A : Type'} (_37167 : type616 _90715 A) (u : _90715 -> Prop) : (term2413 _90715 A _37167 u) = (term2433 _90715 A _37167 u).
Proof. exact (MK_COMB (@lem3513376 _90715 A) (@lem3513375 _90715 A _37167 u)). Qed.
Lemma lem3513378 {_90715 A : Type'} (_37167 : type616 _90715 A) (u : _90715 -> Prop) : ((_37167 u) = (term2328 _90715 A u)) = (term2433 _90715 A _37167 u).
Proof. exact (TRANS (@lem3513329 _90715 A _37167 u) (@lem3513377 _90715 A _37167 u)). Qed.
Lemma lem3513379 {_90715 A : Type'} (_37167 : type616 _90715 A) : (term2403 _90715 A _37167) = (term2434 _90715 A _37167).
Proof. exact (fun_ext (fun u : _90715 -> Prop => @lem3513378 _90715 A _37167 u)). Qed.
Lemma lem3513380 {_90715 : Type'} : (@all (_90715 -> Prop)) = (@all (_90715 -> Prop)).
Proof. exact (eq_refl (@all (_90715 -> Prop))). Qed.
Lemma lem3513381 {_90715 A : Type'} (_37167 : type616 _90715 A) : (term2404 _90715 A _37167) = (term2435 _90715 A _37167).
Proof. exact (MK_COMB (@lem3513380 _90715) (@lem3513379 _90715 A _37167)). Qed.
Lemma lem3513382 {_90715 A : Type'} (_37167 : type616 _90715 A) : (_37167 = (term2326 _90715 A)) = (term2435 _90715 A _37167).
Proof. exact (TRANS (@lem3513311 _90715 A _37167) (@lem3513381 _90715 A _37167)). Qed.
Lemma lem3513383 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem3513384 {_90715 A : Type'} (_37167 : type616 _90715 A) : (term2382 _90715 A _37167) = (term2436 _90715 A _37167).
Proof. exact (MK_COMB (@lem3513383) (@lem3513382 _90715 A _37167)). Qed.
Lemma lem3513385 {_90715 _90724 A B : Type'} (_37167 : type616 _90715 A) : (term2374 _90715 _90724 A B _37167) = (term2374 _90715 _90724 A B _37167).
Proof. exact (eq_refl (term2374 _90715 _90724 A B _37167)). Qed.
Lemma lem3513386 {_90715 _90724 A B : Type'} (_37167 : type616 _90715 A) : (term2390 _90715 _90724 A B _37167) = (term2437 _90715 _90724 A B _37167).
Proof. exact (MK_COMB (@lem3513384 _90715 A _37167) (@lem3513385 _90715 _90724 A B _37167)). Qed.
Lemma lem3513387 {_90715 _90724 A B : Type'} : (term2392 _90715 _90724 A B) = (term2438 _90715 _90724 A B).
Proof. exact (fun_ext (fun _37167 : type616 _90715 A => @lem3513386 _90715 _90724 A B _37167)). Qed.
Lemma lem3513388 {_90715 A : Type'} : (@all ((_90715 -> Prop) -> (_90715 -> A -> Prop) -> (_90715 -> Prop) -> _90715 -> Prop)) = (@all ((_90715 -> Prop) -> (_90715 -> A -> Prop) -> (_90715 -> Prop) -> _90715 -> Prop)).
Proof. exact (eq_refl (@all ((_90715 -> Prop) -> (_90715 -> A -> Prop) -> (_90715 -> Prop) -> _90715 -> Prop))). Qed.
Lemma lem3513389 {_90715 _90724 A B : Type'} : (term2394 _90715 _90724 A B) = (term2439 _90715 _90724 A B).
Proof. exact (MK_COMB (@lem3513388 _90715 A) (@lem3513387 _90715 _90724 A B)). Qed.
Lemma lem3513390 {_90715 _90724 A B : Type'} : (term2381 _90715 _90724 A B) = (term2381 _90715 _90724 A B).
Proof. exact (eq_refl (term2381 _90715 _90724 A B)). Qed.
Lemma lem3513391 {_90715 _90724 A B : Type'} : ((term2325 _90715 _90724 A B) = (term2394 _90715 _90724 A B)) = ((term2325 _90715 _90724 A B) = (term2439 _90715 _90724 A B)).
Proof. exact (MK_COMB (@lem3513390 _90715 _90724 A B) (@lem3513389 _90715 _90724 A B)). Qed.
Lemma lem3513392 {_90715 _90724 A B : Type'} : (term2325 _90715 _90724 A B) = (term2439 _90715 _90724 A B).
Proof. exact (EQ_MP (@lem3513391 _90715 _90724 A B) (@lem3513293 _90715 _90724 A B)). Qed.
Lemma lem3513393 {_90724 A : Type'} (_37168 : type852 _90724 A) (h1 : _37168 = (term2440 _90724 A)) : _37168 = (term2440 _90724 A).
Proof. exact (h1). Qed.
Lemma lem3513394 {A : Type'} (u : A -> Prop) : u = u.
Proof. exact (eq_refl u). Qed.
Lemma lem3513395 {_90724 A : Type'} (u : A -> Prop) (_37168 : type852 _90724 A) (h1 : _37168 = (term2440 _90724 A)) : (_37168 u) = (term2441 _90724 A u).
Proof. exact (MK_COMB (@lem3513393 _90724 A _37168 h1) (@lem3513394 A u)). Qed.
Lemma lem3513396 {_90724 A : Type'} (u : A -> Prop) : (term2441 _90724 A u) = (term2442 _90724 A u).
Proof. exact (eq_refl (term2441 _90724 A u)). Qed.
Lemma lem3513397 {_90724 A : Type'} (_37168 : type852 _90724 A) (u : A -> Prop) : (term2443 _90724 A _37168 u) = (term2443 _90724 A _37168 u).
Proof. exact (eq_refl (term2443 _90724 A _37168 u)). Qed.
Lemma lem3513398 {_90724 A : Type'} (_37168 : type852 _90724 A) (u : A -> Prop) : ((_37168 u) = (term2441 _90724 A u)) = ((_37168 u) = (term2442 _90724 A u)).
Proof. exact (MK_COMB (@lem3513397 _90724 A _37168 u) (@lem3513396 _90724 A u)). Qed.
Lemma lem3513399 {_90724 A : Type'} (u : A -> Prop) (_37168 : type852 _90724 A) (h1 : _37168 = (term2440 _90724 A)) : (_37168 u) = (term2442 _90724 A u).
Proof. exact (EQ_MP (@lem3513398 _90724 A _37168 u) (@lem3513395 _90724 A u _37168 h1)). Qed.
Lemma lem3513400 {_90724 A : Type'} (f : A -> _90724) : f = f.
Proof. exact (eq_refl f). Qed.
Lemma lem3513401 {_90724 A : Type'} (u : A -> Prop) (f : A -> _90724) (_37168 : type852 _90724 A) (h1 : _37168 = (term2440 _90724 A)) : (_37168 u f) = (term2444 _90724 A u f).
Proof. exact (MK_COMB (@lem3513399 _90724 A u _37168 h1) (@lem3513400 _90724 A f)). Qed.
Lemma lem3513402 {_90724 A : Type'} (u : A -> Prop) (f : A -> _90724) : (term2444 _90724 A u f) = (term2445 _90724 A u f).
Proof. exact (eq_refl (term2444 _90724 A u f)). Qed.
Lemma lem3513403 {_90724 A : Type'} (_37168 : type852 _90724 A) (u : A -> Prop) (f : A -> _90724) : (term2446 _90724 A _37168 u f) = (term2446 _90724 A _37168 u f).
Proof. exact (eq_refl (term2446 _90724 A _37168 u f)). Qed.
Lemma lem3513404 {_90724 A : Type'} (_37168 : type852 _90724 A) (u : A -> Prop) (f : A -> _90724) : ((_37168 u f) = (term2444 _90724 A u f)) = ((_37168 u f) = (term2445 _90724 A u f)).
Proof. exact (MK_COMB (@lem3513403 _90724 A _37168 u f) (@lem3513402 _90724 A u f)). Qed.
Lemma lem3513405 {_90724 A : Type'} (u : A -> Prop) (f : A -> _90724) (_37168 : type852 _90724 A) (h1 : _37168 = (term2440 _90724 A)) : (_37168 u f) = (term2445 _90724 A u f).
Proof. exact (EQ_MP (@lem3513404 _90724 A _37168 u f) (@lem3513401 _90724 A u f _37168 h1)). Qed.
Lemma lem3513406 {A : Type'} (t : A -> Prop) : t = t.
Proof. exact (eq_refl t). Qed.
Lemma lem3513407 {_90724 A : Type'} (u : A -> Prop) (f : A -> _90724) (t : A -> Prop) (_37168 : type852 _90724 A) (h1 : _37168 = (term2440 _90724 A)) : (_37168 u f t) = (term2447 _90724 A u f t).
Proof. exact (MK_COMB (@lem3513405 _90724 A u f _37168 h1) (@lem3513406 A t)). Qed.
Lemma lem3513408 {_90724 A : Type'} (u : A -> Prop) (f : A -> _90724) (t : A -> Prop) : (term2447 _90724 A u f t) = (term2061 _90724 A u f t).
Proof. exact (eq_refl (term2447 _90724 A u f t)). Qed.
Lemma lem3513409 {_90724 A : Type'} (_37168 : type852 _90724 A) (u : A -> Prop) (f : A -> _90724) (t : A -> Prop) : (term2448 _90724 A _37168 u f t) = (term2448 _90724 A _37168 u f t).
Proof. exact (eq_refl (term2448 _90724 A _37168 u f t)). Qed.
Lemma lem3513410 {_90724 A : Type'} (_37168 : type852 _90724 A) (u : A -> Prop) (f : A -> _90724) (t : A -> Prop) : ((_37168 u f t) = (term2447 _90724 A u f t)) = ((_37168 u f t) = (term2061 _90724 A u f t)).
Proof. exact (MK_COMB (@lem3513409 _90724 A _37168 u f t) (@lem3513408 _90724 A u f t)). Qed.
Lemma lem3513411 {_90724 A : Type'} (u : A -> Prop) (f : A -> _90724) (t : A -> Prop) (_37168 : type852 _90724 A) (h1 : _37168 = (term2440 _90724 A)) : (_37168 u f t) = (term2061 _90724 A u f t).
Proof. exact (EQ_MP (@lem3513410 _90724 A _37168 u f t) (@lem3513407 _90724 A u f t _37168 h1)). Qed.
Lemma lem3513431 {A B : Type'} (f : type678 A B) (g : type180 A) : ((term2011 A B f g) = (term2012 A B f g)) = ((term2011 A B f g) = (term2012 A B f g)).
Proof. exact (eq_refl ((term2011 A B f g) = (term2012 A B f g))). Qed.
Lemma lem3513432 {A : Type'} (t : type686 A) : t = t.
Proof. exact (eq_refl t). Qed.
Lemma lem3513460 {A B : Type'} (GEN_PVAR_84 : A -> Prop) (u : type686 A) (f : type678 A B) (t : type686 A) (x : A -> Prop) : (term2013 A B GEN_PVAR_84 u f t x) = (term2013 A B GEN_PVAR_84 u f t x).
Proof. exact (eq_refl (term2013 A B GEN_PVAR_84 u f t x)). Qed.
Lemma lem3513461 {A B : Type'} (GEN_PVAR_84 : A -> Prop) (u : type686 A) (f : type678 A B) (t : type686 A) : (term2014 A B GEN_PVAR_84 u f t) = (term2014 A B GEN_PVAR_84 u f t).
Proof. exact (fun_ext (fun x : A -> Prop => @lem3513460 A B GEN_PVAR_84 u f t x)). Qed.
Lemma lem3513462 {A : Type'} : (@ex (A -> Prop)) = (@ex (A -> Prop)).
Proof. exact (eq_refl (@ex (A -> Prop))). Qed.
Lemma lem3513463 {A B : Type'} (GEN_PVAR_84 : A -> Prop) (u : type686 A) (f : type678 A B) (t : type686 A) : (term2015 A B GEN_PVAR_84 u f t) = (term2015 A B GEN_PVAR_84 u f t).
Proof. exact (MK_COMB (@lem3513462 A) (@lem3513461 A B GEN_PVAR_84 u f t)). Qed.
Lemma lem3513464 {A B : Type'} (u : type686 A) (f : type678 A B) (t : type686 A) : (term2016 A B u f t) = (term2016 A B u f t).
Proof. exact (fun_ext (fun GEN_PVAR_84 : A -> Prop => @lem3513463 A B GEN_PVAR_84 u f t)). Qed.
Lemma lem3513465 {A : Type'} : (@GSPEC (A -> Prop)) = (@GSPEC (A -> Prop)).
Proof. exact (eq_refl (@GSPEC (A -> Prop))). Qed.
Lemma lem3513466 {A B : Type'} (u : type686 A) (f : type678 A B) (t : type686 A) : (term2017 A B u f t) = (term2017 A B u f t).
Proof. exact (MK_COMB (@lem3513465 A) (@lem3513464 A B u f t)). Qed.
Lemma lem3513467 {A : Type'} : (@SUBSET (A -> Prop)) = (@SUBSET (A -> Prop)).
Proof. exact (eq_refl (@SUBSET (A -> Prop))). Qed.
Lemma lem3513468 {A B : Type'} (u : type686 A) (f : type678 A B) (t : type686 A) : (term2018 A B u f t) = (term2018 A B u f t).
Proof. exact (MK_COMB (@lem3513467 A) (@lem3513466 A B u f t)). Qed.
Lemma lem3513469 {A B : Type'} (u : type686 A) (f : type678 A B) (t : type686 A) : (term2019 A B u f t) = (term2019 A B u f t).
Proof. exact (MK_COMB (@lem3513468 A B u f t) (@lem3513432 A t)). Qed.
Lemma lem3513476 {A : Type'} (t : type686 A) (u : type686 A) : (term2020 A t u) = (term2020 A t u).
Proof. exact (eq_refl (term2020 A t u)). Qed.
Lemma lem3513477 {A B : Type'} (u : type686 A) (f : type678 A B) (t : type686 A) : (term2021 A B u f t) = (term2021 A B u f t).
Proof. exact (MK_COMB (@lem3513476 A t u) (@lem3513469 A B u f t)). Qed.
Lemma lem3513484 {A : Type'} (t : type686 A) (g : type180 A) : (term2022 A t g) = (term2022 A t g).
Proof. exact (eq_refl (term2022 A t g)). Qed.
Lemma lem3513485 {A B : Type'} (g : type180 A) (u : type686 A) (f : type678 A B) (t : type686 A) : (term2023 A B g u f t) = (term2023 A B g u f t).
Proof. exact (MK_COMB (@lem3513484 A t g) (@lem3513477 A B u f t)). Qed.
Lemma lem3513486 {A B : Type'} (g : type180 A) (u : type686 A) (f : type678 A B) : (term2024 A B g u f) = (term2024 A B g u f).
Proof. exact (fun_ext (fun t : type686 A => @lem3513485 A B g u f t)). Qed.
Lemma lem3513487 {A : Type'} : (@all ((A -> Prop) -> Prop)) = (@all ((A -> Prop) -> Prop)).
Proof. exact (eq_refl (@all ((A -> Prop) -> Prop))). Qed.
Lemma lem3513488 {A B : Type'} (g : type180 A) (u : type686 A) (f : type678 A B) : (term2025 A B g u f) = (term2025 A B g u f).
Proof. exact (MK_COMB (@lem3513487 A) (@lem3513486 A B g u f)). Qed.
Lemma lem3513497 {A : Type'} (g : type180 A) : (term2026 A g) = (term2026 A g).
Proof. exact (eq_refl (term2026 A g)). Qed.
Lemma lem3513498 {A B : Type'} (g : type180 A) (u : type686 A) (f : type678 A B) : (term2027 A B g u f) = (term2027 A B g u f).
Proof. exact (MK_COMB (@lem3513497 A g) (@lem3513488 A B g u f)). Qed.
Lemma lem3513499 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem3513500 {A B : Type'} (g : type180 A) (u : type686 A) (f : type678 A B) : (term2028 A B g u f) = (term2028 A B g u f).
Proof. exact (MK_COMB (@lem3513499) (@lem3513498 A B g u f)). Qed.
Lemma lem3513501 {A B : Type'} (u : type686 A) (f : type678 A B) (g : type180 A) : (term2029 A B u f g) = (term2029 A B u f g).
Proof. exact (MK_COMB (@lem3513500 A B g u f) (@lem3513431 A B f g)). Qed.
Lemma lem3513502 {A B : Type'} (u : type686 A) (f : type678 A B) : (term2030 A B u f) = (term2030 A B u f).
Proof. exact (fun_ext (fun g : type180 A => @lem3513501 A B u f g)). Qed.
Lemma lem3513503 {A : Type'} : (@all (((A -> Prop) -> Prop) -> Prop)) = (@all (((A -> Prop) -> Prop) -> Prop)).
Proof. exact (eq_refl (@all (((A -> Prop) -> Prop) -> Prop))). Qed.
Lemma lem3513504 {A B : Type'} (u : type686 A) (f : type678 A B) : (term2031 A B u f) = (term2031 A B u f).
Proof. exact (MK_COMB (@lem3513503 A) (@lem3513502 A B u f)). Qed.
Lemma lem3513505 {A B : Type'} (u : type686 A) : (term2032 A B u) = (term2032 A B u).
Proof. exact (fun_ext (fun f : type678 A B => @lem3513504 A B u f)). Qed.
Lemma lem3513506 {A B : Type'} : (@all ((A -> Prop) -> B -> Prop)) = (@all ((A -> Prop) -> B -> Prop)).
Proof. exact (eq_refl (@all ((A -> Prop) -> B -> Prop))). Qed.
Lemma lem3513507 {A B : Type'} (u : type686 A) : (term2033 A B u) = (term2033 A B u).
Proof. exact (MK_COMB (@lem3513506 A B) (@lem3513505 A B u)). Qed.
Lemma lem3513508 {A B : Type'} : (term2034 A B) = (term2034 A B).
Proof. exact (fun_ext (fun u : type686 A => @lem3513507 A B u)). Qed.
Lemma lem3513509 {A : Type'} : (@all ((A -> Prop) -> Prop)) = (@all ((A -> Prop) -> Prop)).
Proof. exact (eq_refl (@all ((A -> Prop) -> Prop))). Qed.
Lemma lem3513510 {A B : Type'} : (term1961 A B) = (term1961 A B).
Proof. exact (MK_COMB (@lem3513509 A) (@lem3513508 A B)). Qed.
Lemma lem3513511 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem3513512 {A B : Type'} : (term1967 A B) = (term1967 A B).
Proof. exact (MK_COMB (@lem3513511) (@lem3513510 A B)). Qed.
Lemma lem3513531 {_90724 A : Type'} (f : type862 _90724 A) (g : type180 A) : ((term2035 _90724 A f g) = (term2036 _90724 A f g)) = ((term2035 _90724 A f g) = (term2036 _90724 A f g)).
Proof. exact (eq_refl ((term2035 _90724 A f g) = (term2036 _90724 A f g))). Qed.
Lemma lem3513532 {A : Type'} (t : type686 A) : t = t.
Proof. exact (eq_refl t). Qed.
Lemma lem3513560 {_90724 A : Type'} (GEN_PVAR_84 : A -> Prop) (u : type686 A) (f : type862 _90724 A) (t : type686 A) (x : A -> Prop) : (term2037 _90724 A GEN_PVAR_84 u f t x) = (term2037 _90724 A GEN_PVAR_84 u f t x).
Proof. exact (eq_refl (term2037 _90724 A GEN_PVAR_84 u f t x)). Qed.
Lemma lem3513561 {_90724 A : Type'} (GEN_PVAR_84 : A -> Prop) (u : type686 A) (f : type862 _90724 A) (t : type686 A) : (term2038 _90724 A GEN_PVAR_84 u f t) = (term2038 _90724 A GEN_PVAR_84 u f t).
Proof. exact (fun_ext (fun x : A -> Prop => @lem3513560 _90724 A GEN_PVAR_84 u f t x)). Qed.
Lemma lem3513562 {A : Type'} : (@ex (A -> Prop)) = (@ex (A -> Prop)).
Proof. exact (eq_refl (@ex (A -> Prop))). Qed.
Lemma lem3513563 {_90724 A : Type'} (GEN_PVAR_84 : A -> Prop) (u : type686 A) (f : type862 _90724 A) (t : type686 A) : (term2039 _90724 A GEN_PVAR_84 u f t) = (term2039 _90724 A GEN_PVAR_84 u f t).
Proof. exact (MK_COMB (@lem3513562 A) (@lem3513561 _90724 A GEN_PVAR_84 u f t)). Qed.
Lemma lem3513564 {_90724 A : Type'} (u : type686 A) (f : type862 _90724 A) (t : type686 A) : (term2040 _90724 A u f t) = (term2040 _90724 A u f t).
Proof. exact (fun_ext (fun GEN_PVAR_84 : A -> Prop => @lem3513563 _90724 A GEN_PVAR_84 u f t)). Qed.
Lemma lem3513565 {A : Type'} : (@GSPEC (A -> Prop)) = (@GSPEC (A -> Prop)).
Proof. exact (eq_refl (@GSPEC (A -> Prop))). Qed.
Lemma lem3513566 {_90724 A : Type'} (u : type686 A) (f : type862 _90724 A) (t : type686 A) : (term2041 _90724 A u f t) = (term2041 _90724 A u f t).
Proof. exact (MK_COMB (@lem3513565 A) (@lem3513564 _90724 A u f t)). Qed.
Lemma lem3513567 {A : Type'} : (@SUBSET (A -> Prop)) = (@SUBSET (A -> Prop)).
Proof. exact (eq_refl (@SUBSET (A -> Prop))). Qed.
Lemma lem3513568 {_90724 A : Type'} (u : type686 A) (f : type862 _90724 A) (t : type686 A) : (term2042 _90724 A u f t) = (term2042 _90724 A u f t).
Proof. exact (MK_COMB (@lem3513567 A) (@lem3513566 _90724 A u f t)). Qed.
Lemma lem3513569 {_90724 A : Type'} (u : type686 A) (f : type862 _90724 A) (t : type686 A) : (term2043 _90724 A u f t) = (term2043 _90724 A u f t).
Proof. exact (MK_COMB (@lem3513568 _90724 A u f t) (@lem3513532 A t)). Qed.
Lemma lem3513576 {A : Type'} (t : type686 A) (u : type686 A) : (term2020 A t u) = (term2020 A t u).
Proof. exact (eq_refl (term2020 A t u)). Qed.
Lemma lem3513577 {_90724 A : Type'} (u : type686 A) (f : type862 _90724 A) (t : type686 A) : (term2044 _90724 A u f t) = (term2044 _90724 A u f t).
Proof. exact (MK_COMB (@lem3513576 A t u) (@lem3513569 _90724 A u f t)). Qed.
Lemma lem3513584 {A : Type'} (t : type686 A) (g : type180 A) : (term2022 A t g) = (term2022 A t g).
Proof. exact (eq_refl (term2022 A t g)). Qed.
Lemma lem3513585 {_90724 A : Type'} (g : type180 A) (u : type686 A) (f : type862 _90724 A) (t : type686 A) : (term2045 _90724 A g u f t) = (term2045 _90724 A g u f t).
Proof. exact (MK_COMB (@lem3513584 A t g) (@lem3513577 _90724 A u f t)). Qed.
Lemma lem3513586 {_90724 A : Type'} (g : type180 A) (u : type686 A) (f : type862 _90724 A) : (term2046 _90724 A g u f) = (term2046 _90724 A g u f).
Proof. exact (fun_ext (fun t : type686 A => @lem3513585 _90724 A g u f t)). Qed.
Lemma lem3513587 {A : Type'} : (@all ((A -> Prop) -> Prop)) = (@all ((A -> Prop) -> Prop)).
Proof. exact (eq_refl (@all ((A -> Prop) -> Prop))). Qed.
Lemma lem3513588 {_90724 A : Type'} (g : type180 A) (u : type686 A) (f : type862 _90724 A) : (term2047 _90724 A g u f) = (term2047 _90724 A g u f).
Proof. exact (MK_COMB (@lem3513587 A) (@lem3513586 _90724 A g u f)). Qed.
Lemma lem3513597 {A : Type'} (g : type180 A) : (term2026 A g) = (term2026 A g).
Proof. exact (eq_refl (term2026 A g)). Qed.
Lemma lem3513598 {_90724 A : Type'} (g : type180 A) (u : type686 A) (f : type862 _90724 A) : (term2048 _90724 A g u f) = (term2048 _90724 A g u f).
Proof. exact (MK_COMB (@lem3513597 A g) (@lem3513588 _90724 A g u f)). Qed.
Lemma lem3513599 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem3513600 {_90724 A : Type'} (g : type180 A) (u : type686 A) (f : type862 _90724 A) : (term2049 _90724 A g u f) = (term2049 _90724 A g u f).
Proof. exact (MK_COMB (@lem3513599) (@lem3513598 _90724 A g u f)). Qed.
Lemma lem3513601 {_90724 A : Type'} (u : type686 A) (f : type862 _90724 A) (g : type180 A) : (term2050 _90724 A u f g) = (term2050 _90724 A u f g).
Proof. exact (MK_COMB (@lem3513600 _90724 A g u f) (@lem3513531 _90724 A f g)). Qed.
Lemma lem3513602 {_90724 A : Type'} (u : type686 A) (f : type862 _90724 A) : (term2051 _90724 A u f) = (term2051 _90724 A u f).
Proof. exact (fun_ext (fun g : type180 A => @lem3513601 _90724 A u f g)). Qed.
Lemma lem3513603 {A : Type'} : (@all (((A -> Prop) -> Prop) -> Prop)) = (@all (((A -> Prop) -> Prop) -> Prop)).
Proof. exact (eq_refl (@all (((A -> Prop) -> Prop) -> Prop))). Qed.
Lemma lem3513604 {_90724 A : Type'} (u : type686 A) (f : type862 _90724 A) : (term2052 _90724 A u f) = (term2052 _90724 A u f).
Proof. exact (MK_COMB (@lem3513603 A) (@lem3513602 _90724 A u f)). Qed.
Lemma lem3513605 {_90724 A : Type'} (u : type686 A) : (term2053 _90724 A u) = (term2053 _90724 A u).
Proof. exact (fun_ext (fun f : type862 _90724 A => @lem3513604 _90724 A u f)). Qed.
Lemma lem3513606 {_90724 A : Type'} : (@all ((A -> Prop) -> _90724)) = (@all ((A -> Prop) -> _90724)).
Proof. exact (eq_refl (@all ((A -> Prop) -> _90724))). Qed.
Lemma lem3513607 {_90724 A : Type'} (u : type686 A) : (term2054 _90724 A u) = (term2054 _90724 A u).
Proof. exact (MK_COMB (@lem3513606 _90724 A) (@lem3513605 _90724 A u)). Qed.
Lemma lem3513608 {_90724 A : Type'} : (term2055 _90724 A) = (term2055 _90724 A).
Proof. exact (fun_ext (fun u : type686 A => @lem3513607 _90724 A u)). Qed.
Lemma lem3513609 {A : Type'} : (@all ((A -> Prop) -> Prop)) = (@all ((A -> Prop) -> Prop)).
Proof. exact (eq_refl (@all ((A -> Prop) -> Prop))). Qed.
Lemma lem3513610 {_90724 A : Type'} : (term1959 _90724 A) = (term1959 _90724 A).
Proof. exact (MK_COMB (@lem3513609 A) (@lem3513608 _90724 A)). Qed.
Lemma lem3513611 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem3513612 {_90724 A : Type'} : (term1968 _90724 A) = (term1968 _90724 A).
Proof. exact (MK_COMB (@lem3513611) (@lem3513610 _90724 A)). Qed.
Lemma lem3513613 {_90724 A B : Type'} : (term1970 _90724 A B) = (term1970 _90724 A B).
Proof. exact (MK_COMB (@lem3513612 _90724 A) (@lem3513512 A B)). Qed.
Lemma lem3513632 {_90724 B : Type'} (f : B -> _90724) (g : type686 B) : ((term2056 _90724 B f g) = (term2057 _90724 B f g)) = ((term2056 _90724 B f g) = (term2057 _90724 B f g)).
Proof. exact (eq_refl ((term2056 _90724 B f g) = (term2057 _90724 B f g))). Qed.
Lemma lem3513633 {B : Type'} (t : B -> Prop) : t = t.
Proof. exact (eq_refl t). Qed.
Lemma lem3513661 {_90724 B : Type'} (GEN_PVAR_84 : B) (u : B -> Prop) (f : B -> _90724) (t : B -> Prop) (x : B) : (term2058 _90724 B GEN_PVAR_84 u f t x) = (term2058 _90724 B GEN_PVAR_84 u f t x).
Proof. exact (eq_refl (term2058 _90724 B GEN_PVAR_84 u f t x)). Qed.
Lemma lem3513662 {_90724 B : Type'} (GEN_PVAR_84 : B) (u : B -> Prop) (f : B -> _90724) (t : B -> Prop) : (term2059 _90724 B GEN_PVAR_84 u f t) = (term2059 _90724 B GEN_PVAR_84 u f t).
Proof. exact (fun_ext (fun x : B => @lem3513661 _90724 B GEN_PVAR_84 u f t x)). Qed.
Lemma lem3513663 {B : Type'} : (@ex B) = (@ex B).
Proof. exact (eq_refl (@ex B)). Qed.
Lemma lem3513664 {_90724 B : Type'} (GEN_PVAR_84 : B) (u : B -> Prop) (f : B -> _90724) (t : B -> Prop) : (term2060 _90724 B GEN_PVAR_84 u f t) = (term2060 _90724 B GEN_PVAR_84 u f t).
Proof. exact (MK_COMB (@lem3513663 B) (@lem3513662 _90724 B GEN_PVAR_84 u f t)). Qed.
Lemma lem3513665 {_90724 B : Type'} (u : B -> Prop) (f : B -> _90724) (t : B -> Prop) : (term2061 _90724 B u f t) = (term2061 _90724 B u f t).
Proof. exact (fun_ext (fun GEN_PVAR_84 : B => @lem3513664 _90724 B GEN_PVAR_84 u f t)). Qed.
Lemma lem3513666 {B : Type'} : (@GSPEC B) = (@GSPEC B).
Proof. exact (eq_refl (@GSPEC B)). Qed.
Lemma lem3513667 {_90724 B : Type'} (u : B -> Prop) (f : B -> _90724) (t : B -> Prop) : (term2062 _90724 B u f t) = (term2062 _90724 B u f t).
Proof. exact (MK_COMB (@lem3513666 B) (@lem3513665 _90724 B u f t)). Qed.
Lemma lem3513668 {B : Type'} : (@SUBSET B) = (@SUBSET B).
Proof. exact (eq_refl (@SUBSET B)). Qed.
Lemma lem3513669 {_90724 B : Type'} (u : B -> Prop) (f : B -> _90724) (t : B -> Prop) : (term2063 _90724 B u f t) = (term2063 _90724 B u f t).
Proof. exact (MK_COMB (@lem3513668 B) (@lem3513667 _90724 B u f t)). Qed.
Lemma lem3513670 {_90724 B : Type'} (u : B -> Prop) (f : B -> _90724) (t : B -> Prop) : (term2064 _90724 B u f t) = (term2064 _90724 B u f t).
Proof. exact (MK_COMB (@lem3513669 _90724 B u f t) (@lem3513633 B t)). Qed.
Lemma lem3513677 {B : Type'} (t : B -> Prop) (u : B -> Prop) : (term75 B t u) = (term75 B t u).
Proof. exact (eq_refl (term75 B t u)). Qed.
Lemma lem3513678 {_90724 B : Type'} (u : B -> Prop) (f : B -> _90724) (t : B -> Prop) : (term2065 _90724 B u f t) = (term2065 _90724 B u f t).
Proof. exact (MK_COMB (@lem3513677 B t u) (@lem3513670 _90724 B u f t)). Qed.
Lemma lem3513685 {B : Type'} (t : B -> Prop) (g : type686 B) : (term78 B t g) = (term78 B t g).
Proof. exact (eq_refl (term78 B t g)). Qed.
Lemma lem3513686 {_90724 B : Type'} (g : type686 B) (u : B -> Prop) (f : B -> _90724) (t : B -> Prop) : (term2066 _90724 B g u f t) = (term2066 _90724 B g u f t).
Proof. exact (MK_COMB (@lem3513685 B t g) (@lem3513678 _90724 B u f t)). Qed.
Lemma lem3513687 {_90724 B : Type'} (g : type686 B) (u : B -> Prop) (f : B -> _90724) : (term2067 _90724 B g u f) = (term2067 _90724 B g u f).
Proof. exact (fun_ext (fun t : B -> Prop => @lem3513686 _90724 B g u f t)). Qed.
Lemma lem3513688 {B : Type'} : (@all (B -> Prop)) = (@all (B -> Prop)).
Proof. exact (eq_refl (@all (B -> Prop))). Qed.
Lemma lem3513689 {_90724 B : Type'} (g : type686 B) (u : B -> Prop) (f : B -> _90724) : (term2068 _90724 B g u f) = (term2068 _90724 B g u f).
Proof. exact (MK_COMB (@lem3513688 B) (@lem3513687 _90724 B g u f)). Qed.
Lemma lem3513698 {B : Type'} (g : type686 B) : (term42 B g) = (term42 B g).
Proof. exact (eq_refl (term42 B g)). Qed.
Lemma lem3513699 {_90724 B : Type'} (g : type686 B) (u : B -> Prop) (f : B -> _90724) : (term2069 _90724 B g u f) = (term2069 _90724 B g u f).
Proof. exact (MK_COMB (@lem3513698 B g) (@lem3513689 _90724 B g u f)). Qed.
Lemma lem3513700 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem3513701 {_90724 B : Type'} (g : type686 B) (u : B -> Prop) (f : B -> _90724) : (term2070 _90724 B g u f) = (term2070 _90724 B g u f).
Proof. exact (MK_COMB (@lem3513700) (@lem3513699 _90724 B g u f)). Qed.
Lemma lem3513702 {_90724 B : Type'} (u : B -> Prop) (f : B -> _90724) (g : type686 B) : (term2071 _90724 B u f g) = (term2071 _90724 B u f g).
Proof. exact (MK_COMB (@lem3513701 _90724 B g u f) (@lem3513632 _90724 B f g)). Qed.
Lemma lem3513703 {_90724 B : Type'} (u : B -> Prop) (f : B -> _90724) : (term2072 _90724 B u f) = (term2072 _90724 B u f).
Proof. exact (fun_ext (fun g : type686 B => @lem3513702 _90724 B u f g)). Qed.
Lemma lem3513704 {B : Type'} : (@all ((B -> Prop) -> Prop)) = (@all ((B -> Prop) -> Prop)).
Proof. exact (eq_refl (@all ((B -> Prop) -> Prop))). Qed.
Lemma lem3513705 {_90724 B : Type'} (u : B -> Prop) (f : B -> _90724) : (term2073 _90724 B u f) = (term2073 _90724 B u f).
Proof. exact (MK_COMB (@lem3513704 B) (@lem3513703 _90724 B u f)). Qed.
Lemma lem3513706 {_90724 B : Type'} (u : B -> Prop) : (term2074 _90724 B u) = (term2074 _90724 B u).
Proof. exact (fun_ext (fun f : B -> _90724 => @lem3513705 _90724 B u f)). Qed.
Lemma lem3513707 {_90724 B : Type'} : (@all (B -> _90724)) = (@all (B -> _90724)).
Proof. exact (eq_refl (@all (B -> _90724))). Qed.
Lemma lem3513708 {_90724 B : Type'} (u : B -> Prop) : (term2075 _90724 B u) = (term2075 _90724 B u).
Proof. exact (MK_COMB (@lem3513707 _90724 B) (@lem3513706 _90724 B u)). Qed.
Lemma lem3513709 {_90724 B : Type'} : (term2076 _90724 B) = (term2076 _90724 B).
Proof. exact (fun_ext (fun u : B -> Prop => @lem3513708 _90724 B u)). Qed.
Lemma lem3513710 {B : Type'} : (@all (B -> Prop)) = (@all (B -> Prop)).
Proof. exact (eq_refl (@all (B -> Prop))). Qed.
Lemma lem3513711 {_90724 B : Type'} : (term1958 _90724 B) = (term1958 _90724 B).
Proof. exact (MK_COMB (@lem3513710 B) (@lem3513709 _90724 B)). Qed.
Lemma lem3513712 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem3513713 {_90724 B : Type'} : (term1971 _90724 B) = (term1971 _90724 B).
Proof. exact (MK_COMB (@lem3513712) (@lem3513711 _90724 B)). Qed.
Lemma lem3513714 {_90724 A B : Type'} : (term1973 _90724 A B) = (term1973 _90724 A B).
Proof. exact (MK_COMB (@lem3513713 _90724 B) (@lem3513613 _90724 A B)). Qed.
Lemma lem3513733 {A B : Type'} (f : A -> B) (g : type686 A) : ((term49 A B f g) = (term50 A B f g)) = ((term49 A B f g) = (term50 A B f g)).
Proof. exact (eq_refl ((term49 A B f g) = (term50 A B f g))). Qed.
Lemma lem3513762 {A B : Type'} (g : type686 A) (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) (t : A -> Prop) : (term2081 A B g _37163 u f t) = (term2081 A B g _37163 u f t).
Proof. exact (eq_refl (term2081 A B g _37163 u f t)). Qed.
Lemma lem3513763 {A B : Type'} (g : type686 A) (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) : (term2082 A B g _37163 u f) = (term2082 A B g _37163 u f).
Proof. exact (fun_ext (fun t : A -> Prop => @lem3513762 A B g _37163 u f t)). Qed.
Lemma lem3513764 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem3513765 {A B : Type'} (g : type686 A) (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) : (term2083 A B g _37163 u f) = (term2083 A B g _37163 u f).
Proof. exact (MK_COMB (@lem3513764 A) (@lem3513763 A B g _37163 u f)). Qed.
Lemma lem3513774 {A : Type'} (g : type686 A) : (term42 A g) = (term42 A g).
Proof. exact (eq_refl (term42 A g)). Qed.
Lemma lem3513775 {A B : Type'} (g : type686 A) (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) : (term2084 A B g _37163 u f) = (term2084 A B g _37163 u f).
Proof. exact (MK_COMB (@lem3513774 A g) (@lem3513765 A B g _37163 u f)). Qed.
Lemma lem3513776 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem3513777 {A B : Type'} (g : type686 A) (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) : (term2085 A B g _37163 u f) = (term2085 A B g _37163 u f).
Proof. exact (MK_COMB (@lem3513776) (@lem3513775 A B g _37163 u f)). Qed.
Lemma lem3513778 {A B : Type'} (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) (g : type686 A) : (term2086 A B _37163 u f g) = (term2086 A B _37163 u f g).
Proof. exact (MK_COMB (@lem3513777 A B g _37163 u f) (@lem3513733 A B f g)). Qed.
Lemma lem3513779 {A B : Type'} (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) : (term2088 A B _37163 u f) = (term2088 A B _37163 u f).
Proof. exact (fun_ext (fun g : type686 A => @lem3513778 A B _37163 u f g)). Qed.
Lemma lem3513780 {A : Type'} : (@all ((A -> Prop) -> Prop)) = (@all ((A -> Prop) -> Prop)).
Proof. exact (eq_refl (@all ((A -> Prop) -> Prop))). Qed.
Lemma lem3513781 {A B : Type'} (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) : (term2089 A B _37163 u f) = (term2089 A B _37163 u f).
Proof. exact (MK_COMB (@lem3513780 A) (@lem3513779 A B _37163 u f)). Qed.
Lemma lem3513782 {A B : Type'} (_37163 : type627 A B) (u : A -> Prop) : (term2091 A B _37163 u) = (term2091 A B _37163 u).
Proof. exact (fun_ext (fun f : A -> B => @lem3513781 A B _37163 u f)). Qed.
Lemma lem3513783 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem3513784 {A B : Type'} (_37163 : type627 A B) (u : A -> Prop) : (term2092 A B _37163 u) = (term2092 A B _37163 u).
Proof. exact (MK_COMB (@lem3513783 A B) (@lem3513782 A B _37163 u)). Qed.
Lemma lem3513785 {A B : Type'} (_37163 : type627 A B) : (term2094 A B _37163) = (term2094 A B _37163).
Proof. exact (fun_ext (fun u : A -> Prop => @lem3513784 A B _37163 u)). Qed.
Lemma lem3513786 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem3513787 {A B : Type'} (_37163 : type627 A B) : (term2095 A B _37163) = (term2095 A B _37163).
Proof. exact (MK_COMB (@lem3513786 A) (@lem3513785 A B _37163)). Qed.
Lemma lem3513788 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem3513789 {A B : Type'} (_37163 : type627 A B) : (term2096 A B _37163) = (term2096 A B _37163).
Proof. exact (MK_COMB (@lem3513788) (@lem3513787 A B _37163)). Qed.
Lemma lem3513790 {_90724 A B : Type'} (_37163 : type627 A B) : (term2097 _90724 A B _37163) = (term2097 _90724 A B _37163).
Proof. exact (MK_COMB (@lem3513789 A B _37163) (@lem3513714 _90724 A B)). Qed.
Lemma lem3513809 {_90724 A : Type'} (f : A -> _90724) (g : type686 A) : ((term2056 _90724 A f g) = (term2057 _90724 A f g)) = ((term2056 _90724 A f g) = (term2057 _90724 A f g)).
Proof. exact (eq_refl ((term2056 _90724 A f g) = (term2057 _90724 A f g))). Qed.
Lemma lem3513810 {A : Type'} (t : A -> Prop) : t = t.
Proof. exact (eq_refl t). Qed.
Lemma lem3513812 {_90724 A : Type'} (u : A -> Prop) (f : A -> _90724) (t : A -> Prop) (_37168 : type852 _90724 A) (h1 : _37168 = (term2440 _90724 A)) : (term2061 _90724 A u f t) = (_37168 u f t).
Proof. exact (SYM (@lem3513411 _90724 A u f t _37168 h1)). Qed.
Lemma lem3513813 {_90724 A : Type'} (u : A -> Prop) (f : A -> _90724) (t : A -> Prop) (_37168 : type852 _90724 A) (h1 : _37168 = (term2440 _90724 A)) : (term2061 _90724 A u f t) = (_37168 u f t).
Proof. exact (@lem3513812 _90724 A u f t _37168 h1). Qed.
Lemma lem3513814 {A : Type'} : (@GSPEC A) = (@GSPEC A).
Proof. exact (eq_refl (@GSPEC A)). Qed.
Lemma lem3513815 {_90724 A : Type'} (u : A -> Prop) (f : A -> _90724) (t : A -> Prop) (_37168 : type852 _90724 A) (h1 : _37168 = (term2440 _90724 A)) : (term2062 _90724 A u f t) = (term2449 _90724 A _37168 u f t).
Proof. exact (MK_COMB (@lem3513814 A) (@lem3513813 _90724 A u f t _37168 h1)). Qed.
Lemma lem3513816 {A : Type'} : (@SUBSET A) = (@SUBSET A).
Proof. exact (eq_refl (@SUBSET A)). Qed.
Lemma lem3513817 {_90724 A : Type'} (u : A -> Prop) (f : A -> _90724) (t : A -> Prop) (_37168 : type852 _90724 A) (h1 : _37168 = (term2440 _90724 A)) : (term2063 _90724 A u f t) = (term2450 _90724 A _37168 u f t).
Proof. exact (MK_COMB (@lem3513816 A) (@lem3513815 _90724 A u f t _37168 h1)). Qed.
Lemma lem3513818 {_90724 A : Type'} (u : A -> Prop) (f : A -> _90724) (t : A -> Prop) (_37168 : type852 _90724 A) (h1 : _37168 = (term2440 _90724 A)) : (term2064 _90724 A u f t) = (term2451 _90724 A _37168 u f t).
Proof. exact (MK_COMB (@lem3513817 _90724 A u f t _37168 h1) (@lem3513810 A t)). Qed.
Lemma lem3513825 {A : Type'} (t : A -> Prop) (u : A -> Prop) : (term75 A t u) = (term75 A t u).
Proof. exact (eq_refl (term75 A t u)). Qed.
Lemma lem3513826 {_90724 A : Type'} (u : A -> Prop) (f : A -> _90724) (t : A -> Prop) (_37168 : type852 _90724 A) (h1 : _37168 = (term2440 _90724 A)) : (term2065 _90724 A u f t) = (term2452 _90724 A _37168 u f t).
Proof. exact (MK_COMB (@lem3513825 A t u) (@lem3513818 _90724 A u f t _37168 h1)). Qed.
Lemma lem3513833 {A : Type'} (t : A -> Prop) (g : type686 A) : (term78 A t g) = (term78 A t g).
Proof. exact (eq_refl (term78 A t g)). Qed.
Lemma lem3513834 {_90724 A : Type'} (g : type686 A) (u : A -> Prop) (f : A -> _90724) (t : A -> Prop) (_37168 : type852 _90724 A) (h1 : _37168 = (term2440 _90724 A)) : (term2066 _90724 A g u f t) = (term2453 _90724 A g _37168 u f t).
Proof. exact (MK_COMB (@lem3513833 A t g) (@lem3513826 _90724 A u f t _37168 h1)). Qed.
Lemma lem3513835 {_90724 A : Type'} (g : type686 A) (u : A -> Prop) (f : A -> _90724) (_37168 : type852 _90724 A) (h1 : _37168 = (term2440 _90724 A)) : (term2067 _90724 A g u f) = (term2454 _90724 A g _37168 u f).
Proof. exact (fun_ext (fun t : A -> Prop => @lem3513834 _90724 A g u f t _37168 h1)). Qed.
Lemma lem3513836 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem3513837 {_90724 A : Type'} (g : type686 A) (u : A -> Prop) (f : A -> _90724) (_37168 : type852 _90724 A) (h1 : _37168 = (term2440 _90724 A)) : (term2068 _90724 A g u f) = (term2455 _90724 A g _37168 u f).
Proof. exact (MK_COMB (@lem3513836 A) (@lem3513835 _90724 A g u f _37168 h1)). Qed.
Lemma lem3513846 {A : Type'} (g : type686 A) : (term42 A g) = (term42 A g).
Proof. exact (eq_refl (term42 A g)). Qed.
Lemma lem3513847 {_90724 A : Type'} (g : type686 A) (u : A -> Prop) (f : A -> _90724) (_37168 : type852 _90724 A) (h1 : _37168 = (term2440 _90724 A)) : (term2069 _90724 A g u f) = (term2456 _90724 A g _37168 u f).
Proof. exact (MK_COMB (@lem3513846 A g) (@lem3513837 _90724 A g u f _37168 h1)). Qed.
Lemma lem3513848 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem3513849 {_90724 A : Type'} (g : type686 A) (u : A -> Prop) (f : A -> _90724) (_37168 : type852 _90724 A) (h1 : _37168 = (term2440 _90724 A)) : (term2070 _90724 A g u f) = (term2457 _90724 A g _37168 u f).
Proof. exact (MK_COMB (@lem3513848) (@lem3513847 _90724 A g u f _37168 h1)). Qed.
Lemma lem3513850 {_90724 A : Type'} (u : A -> Prop) (f : A -> _90724) (g : type686 A) (_37168 : type852 _90724 A) (h1 : _37168 = (term2440 _90724 A)) : (term2071 _90724 A u f g) = (term2458 _90724 A _37168 u f g).
Proof. exact (MK_COMB (@lem3513849 _90724 A g u f _37168 h1) (@lem3513809 _90724 A f g)). Qed.
Lemma lem3513851 {_90724 A : Type'} (u : A -> Prop) (f : A -> _90724) (_37168 : type852 _90724 A) (h1 : _37168 = (term2440 _90724 A)) : (term2072 _90724 A u f) = (term2459 _90724 A _37168 u f).
Proof. exact (fun_ext (fun g : type686 A => @lem3513850 _90724 A u f g _37168 h1)). Qed.
Lemma lem3513852 {A : Type'} : (@all ((A -> Prop) -> Prop)) = (@all ((A -> Prop) -> Prop)).
Proof. exact (eq_refl (@all ((A -> Prop) -> Prop))). Qed.
Lemma lem3513853 {_90724 A : Type'} (u : A -> Prop) (f : A -> _90724) (_37168 : type852 _90724 A) (h1 : _37168 = (term2440 _90724 A)) : (term2073 _90724 A u f) = (term2460 _90724 A _37168 u f).
Proof. exact (MK_COMB (@lem3513852 A) (@lem3513851 _90724 A u f _37168 h1)). Qed.
Lemma lem3513854 {_90724 A : Type'} (u : A -> Prop) (_37168 : type852 _90724 A) (h1 : _37168 = (term2440 _90724 A)) : (term2074 _90724 A u) = (term2461 _90724 A _37168 u).
Proof. exact (fun_ext (fun f : A -> _90724 => @lem3513853 _90724 A u f _37168 h1)). Qed.
Lemma lem3513855 {_90724 A : Type'} : (@all (A -> _90724)) = (@all (A -> _90724)).
Proof. exact (eq_refl (@all (A -> _90724))). Qed.
Lemma lem3513856 {_90724 A : Type'} (u : A -> Prop) (_37168 : type852 _90724 A) (h1 : _37168 = (term2440 _90724 A)) : (term2075 _90724 A u) = (term2462 _90724 A _37168 u).
Proof. exact (MK_COMB (@lem3513855 _90724 A) (@lem3513854 _90724 A u _37168 h1)). Qed.
Lemma lem3513857 {_90724 A : Type'} (_37168 : type852 _90724 A) (h1 : _37168 = (term2440 _90724 A)) : (term2076 _90724 A) = (term2463 _90724 A _37168).
Proof. exact (fun_ext (fun u : A -> Prop => @lem3513856 _90724 A u _37168 h1)). Qed.
Lemma lem3513858 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem3513859 {_90724 A : Type'} (_37168 : type852 _90724 A) (h1 : _37168 = (term2440 _90724 A)) : (term1958 _90724 A) = (term2464 _90724 A _37168).
Proof. exact (MK_COMB (@lem3513858 A) (@lem3513857 _90724 A _37168 h1)). Qed.
Lemma lem3513860 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem3513861 {_90724 A : Type'} (_37168 : type852 _90724 A) (h1 : _37168 = (term2440 _90724 A)) : (term1971 _90724 A) = (term2465 _90724 A _37168).
Proof. exact (MK_COMB (@lem3513860) (@lem3513859 _90724 A _37168 h1)). Qed.
Lemma lem3513862 {_90724 A B : Type'} (_37163 : type627 A B) (_37168 : type852 _90724 A) (h1 : _37168 = (term2440 _90724 A)) : (term2098 _90724 A B _37163) = (term2466 _90724 A B _37168 _37163).
Proof. exact (MK_COMB (@lem3513861 _90724 A _37168 h1) (@lem3513790 _90724 A B _37163)). Qed.
Lemma lem3513881 {_90715 A : Type'} (f : type1413 _90715 A) (g : type686 _90715) : ((term2099 _90715 A f g) = (term2100 _90715 A f g)) = ((term2099 _90715 A f g) = (term2100 _90715 A f g)).
Proof. exact (eq_refl ((term2099 _90715 A f g) = (term2100 _90715 A f g))). Qed.
Lemma lem3513910 {_90715 A : Type'} (g : type686 _90715) (_37167 : type616 _90715 A) (u : _90715 -> Prop) (f : type1413 _90715 A) (t : _90715 -> Prop) : (term2339 _90715 A g _37167 u f t) = (term2339 _90715 A g _37167 u f t).
Proof. exact (eq_refl (term2339 _90715 A g _37167 u f t)). Qed.
Lemma lem3513911 {_90715 A : Type'} (g : type686 _90715) (_37167 : type616 _90715 A) (u : _90715 -> Prop) (f : type1413 _90715 A) : (term2340 _90715 A g _37167 u f) = (term2340 _90715 A g _37167 u f).
Proof. exact (fun_ext (fun t : _90715 -> Prop => @lem3513910 _90715 A g _37167 u f t)). Qed.
Lemma lem3513912 {_90715 : Type'} : (@all (_90715 -> Prop)) = (@all (_90715 -> Prop)).
Proof. exact (eq_refl (@all (_90715 -> Prop))). Qed.
Lemma lem3513913 {_90715 A : Type'} (g : type686 _90715) (_37167 : type616 _90715 A) (u : _90715 -> Prop) (f : type1413 _90715 A) : (term2341 _90715 A g _37167 u f) = (term2341 _90715 A g _37167 u f).
Proof. exact (MK_COMB (@lem3513912 _90715) (@lem3513911 _90715 A g _37167 u f)). Qed.
Lemma lem3513922 {_90715 : Type'} (g : type686 _90715) : (term42 _90715 g) = (term42 _90715 g).
Proof. exact (eq_refl (term42 _90715 g)). Qed.
Lemma lem3513923 {_90715 A : Type'} (g : type686 _90715) (_37167 : type616 _90715 A) (u : _90715 -> Prop) (f : type1413 _90715 A) : (term2342 _90715 A g _37167 u f) = (term2342 _90715 A g _37167 u f).
Proof. exact (MK_COMB (@lem3513922 _90715 g) (@lem3513913 _90715 A g _37167 u f)). Qed.
Lemma lem3513924 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem3513925 {_90715 A : Type'} (g : type686 _90715) (_37167 : type616 _90715 A) (u : _90715 -> Prop) (f : type1413 _90715 A) : (term2343 _90715 A g _37167 u f) = (term2343 _90715 A g _37167 u f).
Proof. exact (MK_COMB (@lem3513924) (@lem3513923 _90715 A g _37167 u f)). Qed.
Lemma lem3513926 {_90715 A : Type'} (_37167 : type616 _90715 A) (u : _90715 -> Prop) (f : type1413 _90715 A) (g : type686 _90715) : (term2344 _90715 A _37167 u f g) = (term2344 _90715 A _37167 u f g).
Proof. exact (MK_COMB (@lem3513925 _90715 A g _37167 u f) (@lem3513881 _90715 A f g)). Qed.
Lemma lem3513927 {_90715 A : Type'} (_37167 : type616 _90715 A) (u : _90715 -> Prop) (f : type1413 _90715 A) : (term2345 _90715 A _37167 u f) = (term2345 _90715 A _37167 u f).
Proof. exact (fun_ext (fun g : type686 _90715 => @lem3513926 _90715 A _37167 u f g)). Qed.
Lemma lem3513928 {_90715 : Type'} : (@all ((_90715 -> Prop) -> Prop)) = (@all ((_90715 -> Prop) -> Prop)).
Proof. exact (eq_refl (@all ((_90715 -> Prop) -> Prop))). Qed.
Lemma lem3513929 {_90715 A : Type'} (_37167 : type616 _90715 A) (u : _90715 -> Prop) (f : type1413 _90715 A) : (term2346 _90715 A _37167 u f) = (term2346 _90715 A _37167 u f).
Proof. exact (MK_COMB (@lem3513928 _90715) (@lem3513927 _90715 A _37167 u f)). Qed.
Lemma lem3513930 {_90715 A : Type'} (_37167 : type616 _90715 A) (u : _90715 -> Prop) : (term2347 _90715 A _37167 u) = (term2347 _90715 A _37167 u).
Proof. exact (fun_ext (fun f : type1413 _90715 A => @lem3513929 _90715 A _37167 u f)). Qed.
Lemma lem3513931 {_90715 A : Type'} : (@all (_90715 -> A -> Prop)) = (@all (_90715 -> A -> Prop)).
Proof. exact (eq_refl (@all (_90715 -> A -> Prop))). Qed.
Lemma lem3513932 {_90715 A : Type'} (_37167 : type616 _90715 A) (u : _90715 -> Prop) : (term2348 _90715 A _37167 u) = (term2348 _90715 A _37167 u).
Proof. exact (MK_COMB (@lem3513931 _90715 A) (@lem3513930 _90715 A _37167 u)). Qed.
Lemma lem3513933 {_90715 A : Type'} (_37167 : type616 _90715 A) : (term2349 _90715 A _37167) = (term2349 _90715 A _37167).
Proof. exact (fun_ext (fun u : _90715 -> Prop => @lem3513932 _90715 A _37167 u)). Qed.
Lemma lem3513934 {_90715 : Type'} : (@all (_90715 -> Prop)) = (@all (_90715 -> Prop)).
Proof. exact (eq_refl (@all (_90715 -> Prop))). Qed.
Lemma lem3513935 {_90715 A : Type'} (_37167 : type616 _90715 A) : (term2350 _90715 A _37167) = (term2350 _90715 A _37167).
Proof. exact (MK_COMB (@lem3513934 _90715) (@lem3513933 _90715 A _37167)). Qed.
Lemma lem3513936 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem3513937 {_90715 A : Type'} (_37167 : type616 _90715 A) : (term2351 _90715 A _37167) = (term2351 _90715 A _37167).
Proof. exact (MK_COMB (@lem3513936) (@lem3513935 _90715 A _37167)). Qed.
Lemma lem3513938 {_90715 _90724 A B : Type'} (_37167 : type616 _90715 A) (_37163 : type627 A B) (_37168 : type852 _90724 A) (h1 : _37168 = (term2440 _90724 A)) : (term2352 _90715 _90724 A B _37167 _37163) = (term2467 _90715 _90724 A B _37167 _37168 _37163).
Proof. exact (MK_COMB (@lem3513937 _90715 A _37167) (@lem3513862 _90724 A B _37163 _37168 h1)). Qed.
Lemma lem3513957 {_90715 B : Type'} (f : _90715 -> B) (g : type686 _90715) : ((term49 _90715 B f g) = (term50 _90715 B f g)) = ((term49 _90715 B f g) = (term50 _90715 B f g)).
Proof. exact (eq_refl ((term49 _90715 B f g) = (term50 _90715 B f g))). Qed.
Lemma lem3513986 {_90715 B : Type'} (g : type686 _90715) (_37166 : type627 _90715 B) (u : _90715 -> Prop) (f : _90715 -> B) (t : _90715 -> Prop) : (term2081 _90715 B g _37166 u f t) = (term2081 _90715 B g _37166 u f t).
Proof. exact (eq_refl (term2081 _90715 B g _37166 u f t)). Qed.
Lemma lem3513987 {_90715 B : Type'} (g : type686 _90715) (_37166 : type627 _90715 B) (u : _90715 -> Prop) (f : _90715 -> B) : (term2082 _90715 B g _37166 u f) = (term2082 _90715 B g _37166 u f).
Proof. exact (fun_ext (fun t : _90715 -> Prop => @lem3513986 _90715 B g _37166 u f t)). Qed.
Lemma lem3513988 {_90715 : Type'} : (@all (_90715 -> Prop)) = (@all (_90715 -> Prop)).
Proof. exact (eq_refl (@all (_90715 -> Prop))). Qed.
Lemma lem3513989 {_90715 B : Type'} (g : type686 _90715) (_37166 : type627 _90715 B) (u : _90715 -> Prop) (f : _90715 -> B) : (term2083 _90715 B g _37166 u f) = (term2083 _90715 B g _37166 u f).
Proof. exact (MK_COMB (@lem3513988 _90715) (@lem3513987 _90715 B g _37166 u f)). Qed.
Lemma lem3513998 {_90715 : Type'} (g : type686 _90715) : (term42 _90715 g) = (term42 _90715 g).
Proof. exact (eq_refl (term42 _90715 g)). Qed.
Lemma lem3513999 {_90715 B : Type'} (g : type686 _90715) (_37166 : type627 _90715 B) (u : _90715 -> Prop) (f : _90715 -> B) : (term2084 _90715 B g _37166 u f) = (term2084 _90715 B g _37166 u f).
Proof. exact (MK_COMB (@lem3513998 _90715 g) (@lem3513989 _90715 B g _37166 u f)). Qed.
Lemma lem3514000 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem3514001 {_90715 B : Type'} (g : type686 _90715) (_37166 : type627 _90715 B) (u : _90715 -> Prop) (f : _90715 -> B) : (term2085 _90715 B g _37166 u f) = (term2085 _90715 B g _37166 u f).
Proof. exact (MK_COMB (@lem3514000) (@lem3513999 _90715 B g _37166 u f)). Qed.
Lemma lem3514002 {_90715 B : Type'} (_37166 : type627 _90715 B) (u : _90715 -> Prop) (f : _90715 -> B) (g : type686 _90715) : (term2086 _90715 B _37166 u f g) = (term2086 _90715 B _37166 u f g).
Proof. exact (MK_COMB (@lem3514001 _90715 B g _37166 u f) (@lem3513957 _90715 B f g)). Qed.
Lemma lem3514003 {_90715 B : Type'} (_37166 : type627 _90715 B) (u : _90715 -> Prop) (f : _90715 -> B) : (term2088 _90715 B _37166 u f) = (term2088 _90715 B _37166 u f).
Proof. exact (fun_ext (fun g : type686 _90715 => @lem3514002 _90715 B _37166 u f g)). Qed.
Lemma lem3514004 {_90715 : Type'} : (@all ((_90715 -> Prop) -> Prop)) = (@all ((_90715 -> Prop) -> Prop)).
Proof. exact (eq_refl (@all ((_90715 -> Prop) -> Prop))). Qed.
Lemma lem3514005 {_90715 B : Type'} (_37166 : type627 _90715 B) (u : _90715 -> Prop) (f : _90715 -> B) : (term2089 _90715 B _37166 u f) = (term2089 _90715 B _37166 u f).
Proof. exact (MK_COMB (@lem3514004 _90715) (@lem3514003 _90715 B _37166 u f)). Qed.
Lemma lem3514006 {_90715 B : Type'} (_37166 : type627 _90715 B) (u : _90715 -> Prop) : (term2091 _90715 B _37166 u) = (term2091 _90715 B _37166 u).
Proof. exact (fun_ext (fun f : _90715 -> B => @lem3514005 _90715 B _37166 u f)). Qed.
Lemma lem3514007 {_90715 B : Type'} : (@all (_90715 -> B)) = (@all (_90715 -> B)).
Proof. exact (eq_refl (@all (_90715 -> B))). Qed.
Lemma lem3514008 {_90715 B : Type'} (_37166 : type627 _90715 B) (u : _90715 -> Prop) : (term2092 _90715 B _37166 u) = (term2092 _90715 B _37166 u).
Proof. exact (MK_COMB (@lem3514007 _90715 B) (@lem3514006 _90715 B _37166 u)). Qed.
Lemma lem3514009 {_90715 B : Type'} (_37166 : type627 _90715 B) : (term2094 _90715 B _37166) = (term2094 _90715 B _37166).
Proof. exact (fun_ext (fun u : _90715 -> Prop => @lem3514008 _90715 B _37166 u)). Qed.
Lemma lem3514010 {_90715 : Type'} : (@all (_90715 -> Prop)) = (@all (_90715 -> Prop)).
Proof. exact (eq_refl (@all (_90715 -> Prop))). Qed.
Lemma lem3514011 {_90715 B : Type'} (_37166 : type627 _90715 B) : (term2095 _90715 B _37166) = (term2095 _90715 B _37166).
Proof. exact (MK_COMB (@lem3514010 _90715) (@lem3514009 _90715 B _37166)). Qed.
Lemma lem3514012 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem3514013 {_90715 B : Type'} (_37166 : type627 _90715 B) : (term2096 _90715 B _37166) = (term2096 _90715 B _37166).
Proof. exact (MK_COMB (@lem3514012) (@lem3514011 _90715 B _37166)). Qed.
Lemma lem3514014 {_90715 _90724 A B : Type'} (_37166 : type627 _90715 B) (_37167 : type616 _90715 A) (_37163 : type627 A B) (_37168 : type852 _90724 A) (h1 : _37168 = (term2440 _90724 A)) : (term2353 _90715 _90724 A B _37166 _37167 _37163) = (term2468 _90715 _90724 A B _37166 _37167 _37168 _37163).
Proof. exact (MK_COMB (@lem3514013 _90715 B _37166) (@lem3513938 _90715 _90724 A B _37167 _37163 _37168 h1)). Qed.
Lemma lem3514033 {_90715 A : Type'} (f : _90715 -> A) (g : type686 _90715) : ((term49 _90715 A f g) = (term50 _90715 A f g)) = ((term49 _90715 A f g) = (term50 _90715 A f g)).
Proof. exact (eq_refl ((term49 _90715 A f g) = (term50 _90715 A f g))). Qed.
Lemma lem3514062 {_90715 A : Type'} (g : type686 _90715) (_37165 : type627 _90715 A) (u : _90715 -> Prop) (f : _90715 -> A) (t : _90715 -> Prop) : (term2081 _90715 A g _37165 u f t) = (term2081 _90715 A g _37165 u f t).
Proof. exact (eq_refl (term2081 _90715 A g _37165 u f t)). Qed.
Lemma lem3514063 {_90715 A : Type'} (g : type686 _90715) (_37165 : type627 _90715 A) (u : _90715 -> Prop) (f : _90715 -> A) : (term2082 _90715 A g _37165 u f) = (term2082 _90715 A g _37165 u f).
Proof. exact (fun_ext (fun t : _90715 -> Prop => @lem3514062 _90715 A g _37165 u f t)). Qed.
Lemma lem3514064 {_90715 : Type'} : (@all (_90715 -> Prop)) = (@all (_90715 -> Prop)).
Proof. exact (eq_refl (@all (_90715 -> Prop))). Qed.
Lemma lem3514065 {_90715 A : Type'} (g : type686 _90715) (_37165 : type627 _90715 A) (u : _90715 -> Prop) (f : _90715 -> A) : (term2083 _90715 A g _37165 u f) = (term2083 _90715 A g _37165 u f).
Proof. exact (MK_COMB (@lem3514064 _90715) (@lem3514063 _90715 A g _37165 u f)). Qed.
Lemma lem3514074 {_90715 : Type'} (g : type686 _90715) : (term42 _90715 g) = (term42 _90715 g).
Proof. exact (eq_refl (term42 _90715 g)). Qed.
Lemma lem3514075 {_90715 A : Type'} (g : type686 _90715) (_37165 : type627 _90715 A) (u : _90715 -> Prop) (f : _90715 -> A) : (term2084 _90715 A g _37165 u f) = (term2084 _90715 A g _37165 u f).
Proof. exact (MK_COMB (@lem3514074 _90715 g) (@lem3514065 _90715 A g _37165 u f)). Qed.
Lemma lem3514076 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem3514077 {_90715 A : Type'} (g : type686 _90715) (_37165 : type627 _90715 A) (u : _90715 -> Prop) (f : _90715 -> A) : (term2085 _90715 A g _37165 u f) = (term2085 _90715 A g _37165 u f).
Proof. exact (MK_COMB (@lem3514076) (@lem3514075 _90715 A g _37165 u f)). Qed.
Lemma lem3514078 {_90715 A : Type'} (_37165 : type627 _90715 A) (u : _90715 -> Prop) (f : _90715 -> A) (g : type686 _90715) : (term2086 _90715 A _37165 u f g) = (term2086 _90715 A _37165 u f g).
Proof. exact (MK_COMB (@lem3514077 _90715 A g _37165 u f) (@lem3514033 _90715 A f g)). Qed.
Lemma lem3514079 {_90715 A : Type'} (_37165 : type627 _90715 A) (u : _90715 -> Prop) (f : _90715 -> A) : (term2088 _90715 A _37165 u f) = (term2088 _90715 A _37165 u f).
Proof. exact (fun_ext (fun g : type686 _90715 => @lem3514078 _90715 A _37165 u f g)). Qed.
Lemma lem3514080 {_90715 : Type'} : (@all ((_90715 -> Prop) -> Prop)) = (@all ((_90715 -> Prop) -> Prop)).
Proof. exact (eq_refl (@all ((_90715 -> Prop) -> Prop))). Qed.
Lemma lem3514081 {_90715 A : Type'} (_37165 : type627 _90715 A) (u : _90715 -> Prop) (f : _90715 -> A) : (term2089 _90715 A _37165 u f) = (term2089 _90715 A _37165 u f).
Proof. exact (MK_COMB (@lem3514080 _90715) (@lem3514079 _90715 A _37165 u f)). Qed.
Lemma lem3514082 {_90715 A : Type'} (_37165 : type627 _90715 A) (u : _90715 -> Prop) : (term2091 _90715 A _37165 u) = (term2091 _90715 A _37165 u).
Proof. exact (fun_ext (fun f : _90715 -> A => @lem3514081 _90715 A _37165 u f)). Qed.
Lemma lem3514083 {_90715 A : Type'} : (@all (_90715 -> A)) = (@all (_90715 -> A)).
Proof. exact (eq_refl (@all (_90715 -> A))). Qed.
Lemma lem3514084 {_90715 A : Type'} (_37165 : type627 _90715 A) (u : _90715 -> Prop) : (term2092 _90715 A _37165 u) = (term2092 _90715 A _37165 u).
Proof. exact (MK_COMB (@lem3514083 _90715 A) (@lem3514082 _90715 A _37165 u)). Qed.
Lemma lem3514085 {_90715 A : Type'} (_37165 : type627 _90715 A) : (term2094 _90715 A _37165) = (term2094 _90715 A _37165).
Proof. exact (fun_ext (fun u : _90715 -> Prop => @lem3514084 _90715 A _37165 u)). Qed.
Lemma lem3514086 {_90715 : Type'} : (@all (_90715 -> Prop)) = (@all (_90715 -> Prop)).
Proof. exact (eq_refl (@all (_90715 -> Prop))). Qed.
Lemma lem3514087 {_90715 A : Type'} (_37165 : type627 _90715 A) : (term2095 _90715 A _37165) = (term2095 _90715 A _37165).
Proof. exact (MK_COMB (@lem3514086 _90715) (@lem3514085 _90715 A _37165)). Qed.
Lemma lem3514088 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem3514089 {_90715 A : Type'} (_37165 : type627 _90715 A) : (term2096 _90715 A _37165) = (term2096 _90715 A _37165).
Proof. exact (MK_COMB (@lem3514088) (@lem3514087 _90715 A _37165)). Qed.
Lemma lem3514090 {_90715 _90724 A B : Type'} (_37165 : type627 _90715 A) (_37166 : type627 _90715 B) (_37167 : type616 _90715 A) (_37163 : type627 A B) (_37168 : type852 _90724 A) (h1 : _37168 = (term2440 _90724 A)) : (term2354 _90715 _90724 A B _37165 _37166 _37167 _37163) = (term2469 _90715 _90724 A B _37165 _37166 _37167 _37168 _37163).
Proof. exact (MK_COMB (@lem3514089 _90715 A _37165) (@lem3514014 _90715 _90724 A B _37166 _37167 _37163 _37168 h1)). Qed.
Lemma lem3514109 {_90715 _90724 : Type'} (f : _90715 -> _90724) (g : type686 _90715) : ((term49 _90715 _90724 f g) = (term50 _90715 _90724 f g)) = ((term49 _90715 _90724 f g) = (term50 _90715 _90724 f g)).
Proof. exact (eq_refl ((term49 _90715 _90724 f g) = (term50 _90715 _90724 f g))). Qed.
Lemma lem3514138 {_90715 _90724 : Type'} (g : type686 _90715) (_37164 : type627 _90715 _90724) (u : _90715 -> Prop) (f : _90715 -> _90724) (t : _90715 -> Prop) : (term2081 _90715 _90724 g _37164 u f t) = (term2081 _90715 _90724 g _37164 u f t).
Proof. exact (eq_refl (term2081 _90715 _90724 g _37164 u f t)). Qed.
Lemma lem3514139 {_90715 _90724 : Type'} (g : type686 _90715) (_37164 : type627 _90715 _90724) (u : _90715 -> Prop) (f : _90715 -> _90724) : (term2082 _90715 _90724 g _37164 u f) = (term2082 _90715 _90724 g _37164 u f).
Proof. exact (fun_ext (fun t : _90715 -> Prop => @lem3514138 _90715 _90724 g _37164 u f t)). Qed.
Lemma lem3514140 {_90715 : Type'} : (@all (_90715 -> Prop)) = (@all (_90715 -> Prop)).
Proof. exact (eq_refl (@all (_90715 -> Prop))). Qed.
Lemma lem3514141 {_90715 _90724 : Type'} (g : type686 _90715) (_37164 : type627 _90715 _90724) (u : _90715 -> Prop) (f : _90715 -> _90724) : (term2083 _90715 _90724 g _37164 u f) = (term2083 _90715 _90724 g _37164 u f).
Proof. exact (MK_COMB (@lem3514140 _90715) (@lem3514139 _90715 _90724 g _37164 u f)). Qed.
Lemma lem3514150 {_90715 : Type'} (g : type686 _90715) : (term42 _90715 g) = (term42 _90715 g).
Proof. exact (eq_refl (term42 _90715 g)). Qed.
Lemma lem3514151 {_90715 _90724 : Type'} (g : type686 _90715) (_37164 : type627 _90715 _90724) (u : _90715 -> Prop) (f : _90715 -> _90724) : (term2084 _90715 _90724 g _37164 u f) = (term2084 _90715 _90724 g _37164 u f).
Proof. exact (MK_COMB (@lem3514150 _90715 g) (@lem3514141 _90715 _90724 g _37164 u f)). Qed.
Lemma lem3514152 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem3514153 {_90715 _90724 : Type'} (g : type686 _90715) (_37164 : type627 _90715 _90724) (u : _90715 -> Prop) (f : _90715 -> _90724) : (term2085 _90715 _90724 g _37164 u f) = (term2085 _90715 _90724 g _37164 u f).
Proof. exact (MK_COMB (@lem3514152) (@lem3514151 _90715 _90724 g _37164 u f)). Qed.
Lemma lem3514154 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) (u : _90715 -> Prop) (f : _90715 -> _90724) (g : type686 _90715) : (term2086 _90715 _90724 _37164 u f g) = (term2086 _90715 _90724 _37164 u f g).
Proof. exact (MK_COMB (@lem3514153 _90715 _90724 g _37164 u f) (@lem3514109 _90715 _90724 f g)). Qed.
Lemma lem3514155 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) (u : _90715 -> Prop) (f : _90715 -> _90724) : (term2088 _90715 _90724 _37164 u f) = (term2088 _90715 _90724 _37164 u f).
Proof. exact (fun_ext (fun g : type686 _90715 => @lem3514154 _90715 _90724 _37164 u f g)). Qed.
Lemma lem3514156 {_90715 : Type'} : (@all ((_90715 -> Prop) -> Prop)) = (@all ((_90715 -> Prop) -> Prop)).
Proof. exact (eq_refl (@all ((_90715 -> Prop) -> Prop))). Qed.
Lemma lem3514157 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) (u : _90715 -> Prop) (f : _90715 -> _90724) : (term2089 _90715 _90724 _37164 u f) = (term2089 _90715 _90724 _37164 u f).
Proof. exact (MK_COMB (@lem3514156 _90715) (@lem3514155 _90715 _90724 _37164 u f)). Qed.
Lemma lem3514158 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) (u : _90715 -> Prop) : (term2091 _90715 _90724 _37164 u) = (term2091 _90715 _90724 _37164 u).
Proof. exact (fun_ext (fun f : _90715 -> _90724 => @lem3514157 _90715 _90724 _37164 u f)). Qed.
Lemma lem3514159 {_90715 _90724 : Type'} : (@all (_90715 -> _90724)) = (@all (_90715 -> _90724)).
Proof. exact (eq_refl (@all (_90715 -> _90724))). Qed.
Lemma lem3514160 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) (u : _90715 -> Prop) : (term2092 _90715 _90724 _37164 u) = (term2092 _90715 _90724 _37164 u).
Proof. exact (MK_COMB (@lem3514159 _90715 _90724) (@lem3514158 _90715 _90724 _37164 u)). Qed.
Lemma lem3514161 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) : (term2094 _90715 _90724 _37164) = (term2094 _90715 _90724 _37164).
Proof. exact (fun_ext (fun u : _90715 -> Prop => @lem3514160 _90715 _90724 _37164 u)). Qed.
Lemma lem3514162 {_90715 : Type'} : (@all (_90715 -> Prop)) = (@all (_90715 -> Prop)).
Proof. exact (eq_refl (@all (_90715 -> Prop))). Qed.
Lemma lem3514163 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) : (term2095 _90715 _90724 _37164) = (term2095 _90715 _90724 _37164).
Proof. exact (MK_COMB (@lem3514162 _90715) (@lem3514161 _90715 _90724 _37164)). Qed.
Lemma lem3514164 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem3514165 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) : (term2096 _90715 _90724 _37164) = (term2096 _90715 _90724 _37164).
Proof. exact (MK_COMB (@lem3514164) (@lem3514163 _90715 _90724 _37164)). Qed.
Lemma lem3514166 {_90715 _90724 A B : Type'} (_37164 : type627 _90715 _90724) (_37165 : type627 _90715 A) (_37166 : type627 _90715 B) (_37167 : type616 _90715 A) (_37163 : type627 A B) (_37168 : type852 _90724 A) (h1 : _37168 = (term2440 _90724 A)) : (term2355 _90715 _90724 A B _37164 _37165 _37166 _37167 _37163) = (term2470 _90715 _90724 A B _37164 _37165 _37166 _37167 _37168 _37163).
Proof. exact (MK_COMB (@lem3514165 _90715 _90724 _37164) (@lem3514090 _90715 _90724 A B _37165 _37166 _37167 _37163 _37168 h1)). Qed.
Lemma lem3514185 {A B : Type'} (f : A -> B) (g : type686 A) : ((term49 A B f g) = (term50 A B f g)) = ((term49 A B f g) = (term50 A B f g)).
Proof. exact (eq_refl ((term49 A B f g) = (term50 A B f g))). Qed.
Lemma lem3514206 {A B : Type'} (g : type686 A) (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) (t : A -> Prop) : (term2124 A B g _37163 u f t) = (term2124 A B g _37163 u f t).
Proof. exact (eq_refl (term2124 A B g _37163 u f t)). Qed.
Lemma lem3514207 {A B : Type'} (g : type686 A) (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) : (term2125 A B g _37163 u f) = (term2125 A B g _37163 u f).
Proof. exact (fun_ext (fun t : A -> Prop => @lem3514206 A B g _37163 u f t)). Qed.
Lemma lem3514208 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem3514209 {A B : Type'} (g : type686 A) (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) : (term2126 A B g _37163 u f) = (term2126 A B g _37163 u f).
Proof. exact (MK_COMB (@lem3514208 A) (@lem3514207 A B g _37163 u f)). Qed.
Lemma lem3514222 {A : Type'} (g : type686 A) (t : A -> Prop) (u : A -> Prop) : (term2127 A g t u) = (term2127 A g t u).
Proof. exact (eq_refl (term2127 A g t u)). Qed.
Lemma lem3514223 {A : Type'} (g : type686 A) (u : A -> Prop) : (term2128 A g u) = (term2128 A g u).
Proof. exact (fun_ext (fun t : A -> Prop => @lem3514222 A g t u)). Qed.
Lemma lem3514224 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem3514225 {A : Type'} (g : type686 A) (u : A -> Prop) : (term2129 A g u) = (term2129 A g u).
Proof. exact (MK_COMB (@lem3514224 A) (@lem3514223 A g u)). Qed.
Lemma lem3514226 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem3514227 {A : Type'} (g : type686 A) (u : A -> Prop) : (term1946 A g u) = (term1946 A g u).
Proof. exact (MK_COMB (@lem3514226) (@lem3514225 A g u)). Qed.
Lemma lem3514228 {A B : Type'} (g : type686 A) (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) : (term2130 A B g _37163 u f) = (term2130 A B g _37163 u f).
Proof. exact (MK_COMB (@lem3514227 A g u) (@lem3514209 A B g _37163 u f)). Qed.
Lemma lem3514237 {A : Type'} (g : type686 A) : (term42 A g) = (term42 A g).
Proof. exact (eq_refl (term42 A g)). Qed.
Lemma lem3514238 {A B : Type'} (g : type686 A) (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) : (term2131 A B g _37163 u f) = (term2131 A B g _37163 u f).
Proof. exact (MK_COMB (@lem3514237 A g) (@lem3514228 A B g _37163 u f)). Qed.
Lemma lem3514239 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem3514240 {A B : Type'} (g : type686 A) (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) : (term2133 A B g _37163 u f) = (term2133 A B g _37163 u f).
Proof. exact (MK_COMB (@lem3514239) (@lem3514238 A B g _37163 u f)). Qed.
Lemma lem3514241 {A B : Type'} (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) (g : type686 A) : (term2134 A B _37163 u f g) = (term2134 A B _37163 u f g).
Proof. exact (MK_COMB (@lem3514240 A B g _37163 u f) (@lem3514185 A B f g)). Qed.
Lemma lem3514242 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem3514243 {A B : Type'} (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) (g : type686 A) : (term2135 A B _37163 u f g) = (term2135 A B _37163 u f g).
Proof. exact (MK_COMB (@lem3514242) (@lem3514241 A B _37163 u f g)). Qed.
Lemma lem3514244 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem3514245 {A B : Type'} (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) (g : type686 A) : (term2136 A B _37163 u f g) = (term2136 A B _37163 u f g).
Proof. exact (MK_COMB (@lem3514244) (@lem3514243 A B _37163 u f g)). Qed.
Lemma lem3514246 {_90715 _90724 A B : Type'} (u : A -> Prop) (f : A -> B) (g : type686 A) (_37164 : type627 _90715 _90724) (_37165 : type627 _90715 A) (_37166 : type627 _90715 B) (_37167 : type616 _90715 A) (_37163 : type627 A B) (_37168 : type852 _90724 A) (h1 : _37168 = (term2440 _90724 A)) : (term2356 _90715 _90724 A B u f g _37164 _37165 _37166 _37167 _37163) = (term2471 _90715 _90724 A B u f g _37164 _37165 _37166 _37167 _37168 _37163).
Proof. exact (MK_COMB (@lem3514245 A B _37163 u f g) (@lem3514166 _90715 _90724 A B _37164 _37165 _37166 _37167 _37163 _37168 h1)). Qed.
Lemma lem3514247 {_90715 _90724 A B : Type'} (f : A -> B) (g : type686 A) (_37164 : type627 _90715 _90724) (_37165 : type627 _90715 A) (_37166 : type627 _90715 B) (_37167 : type616 _90715 A) (_37163 : type627 A B) (_37168 : type852 _90724 A) (h1 : _37168 = (term2440 _90724 A)) : (term2357 _90715 _90724 A B f g _37164 _37165 _37166 _37167 _37163) = (term2472 _90715 _90724 A B f g _37164 _37165 _37166 _37167 _37168 _37163).
Proof. exact (fun_ext (fun u : A -> Prop => @lem3514246 _90715 _90724 A B u f g _37164 _37165 _37166 _37167 _37163 _37168 h1)). Qed.
Lemma lem3514248 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem3514249 {_90715 _90724 A B : Type'} (f : A -> B) (g : type686 A) (_37164 : type627 _90715 _90724) (_37165 : type627 _90715 A) (_37166 : type627 _90715 B) (_37167 : type616 _90715 A) (_37163 : type627 A B) (_37168 : type852 _90724 A) (h1 : _37168 = (term2440 _90724 A)) : (term2358 _90715 _90724 A B f g _37164 _37165 _37166 _37167 _37163) = (term2473 _90715 _90724 A B f g _37164 _37165 _37166 _37167 _37168 _37163).
Proof. exact (MK_COMB (@lem3514248 A) (@lem3514247 _90715 _90724 A B f g _37164 _37165 _37166 _37167 _37163 _37168 h1)). Qed.
Lemma lem3514250 {_90715 _90724 A B : Type'} (g : type686 A) (_37164 : type627 _90715 _90724) (_37165 : type627 _90715 A) (_37166 : type627 _90715 B) (_37167 : type616 _90715 A) (_37163 : type627 A B) (_37168 : type852 _90724 A) (h1 : _37168 = (term2440 _90724 A)) : (term2359 _90715 _90724 A B g _37164 _37165 _37166 _37167 _37163) = (term2474 _90715 _90724 A B g _37164 _37165 _37166 _37167 _37168 _37163).
Proof. exact (fun_ext (fun f : A -> B => @lem3514249 _90715 _90724 A B f g _37164 _37165 _37166 _37167 _37163 _37168 h1)). Qed.
Lemma lem3514251 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem3514252 {_90715 _90724 A B : Type'} (g : type686 A) (_37164 : type627 _90715 _90724) (_37165 : type627 _90715 A) (_37166 : type627 _90715 B) (_37167 : type616 _90715 A) (_37163 : type627 A B) (_37168 : type852 _90724 A) (h1 : _37168 = (term2440 _90724 A)) : (term2360 _90715 _90724 A B g _37164 _37165 _37166 _37167 _37163) = (term2475 _90715 _90724 A B g _37164 _37165 _37166 _37167 _37168 _37163).
Proof. exact (MK_COMB (@lem3514251 A B) (@lem3514250 _90715 _90724 A B g _37164 _37165 _37166 _37167 _37163 _37168 h1)). Qed.
Lemma lem3514253 {_90715 _90724 A B : Type'} (_37164 : type627 _90715 _90724) (_37165 : type627 _90715 A) (_37166 : type627 _90715 B) (_37167 : type616 _90715 A) (_37163 : type627 A B) (_37168 : type852 _90724 A) (h1 : _37168 = (term2440 _90724 A)) : (term2361 _90715 _90724 A B _37164 _37165 _37166 _37167 _37163) = (term2476 _90715 _90724 A B _37164 _37165 _37166 _37167 _37168 _37163).
Proof. exact (fun_ext (fun g : type686 A => @lem3514252 _90715 _90724 A B g _37164 _37165 _37166 _37167 _37163 _37168 h1)). Qed.
Lemma lem3514254 {A : Type'} : (@all ((A -> Prop) -> Prop)) = (@all ((A -> Prop) -> Prop)).
Proof. exact (eq_refl (@all ((A -> Prop) -> Prop))). Qed.
Lemma lem3514255 {_90715 _90724 A B : Type'} (_37164 : type627 _90715 _90724) (_37165 : type627 _90715 A) (_37166 : type627 _90715 B) (_37167 : type616 _90715 A) (_37163 : type627 A B) (_37168 : type852 _90724 A) (h1 : _37168 = (term2440 _90724 A)) : (term2362 _90715 _90724 A B _37164 _37165 _37166 _37167 _37163) = (term2477 _90715 _90724 A B _37164 _37165 _37166 _37167 _37168 _37163).
Proof. exact (MK_COMB (@lem3514254 A) (@lem3514253 _90715 _90724 A B _37164 _37165 _37166 _37167 _37163 _37168 h1)). Qed.
Lemma lem3514280 {A B : Type'} (GEN_PVAR_85 : A) (u : A -> Prop) (f : A -> B) (t : A -> Prop) (x : A) : (term61 A B GEN_PVAR_85 u f t x) = (term61 A B GEN_PVAR_85 u f t x).
Proof. exact (eq_refl (term61 A B GEN_PVAR_85 u f t x)). Qed.
Lemma lem3514281 {A B : Type'} (GEN_PVAR_85 : A) (u : A -> Prop) (f : A -> B) (t : A -> Prop) : (term63 A B GEN_PVAR_85 u f t) = (term63 A B GEN_PVAR_85 u f t).
Proof. exact (fun_ext (fun x : A => @lem3514280 A B GEN_PVAR_85 u f t x)). Qed.
Lemma lem3514282 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem3514283 {A B : Type'} (GEN_PVAR_85 : A) (u : A -> Prop) (f : A -> B) (t : A -> Prop) : (term65 A B GEN_PVAR_85 u f t) = (term65 A B GEN_PVAR_85 u f t).
Proof. exact (MK_COMB (@lem3514282 A) (@lem3514281 A B GEN_PVAR_85 u f t)). Qed.
Lemma lem3514294 {A B : Type'} (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) (t : A -> Prop) (GEN_PVAR_85 : A) : (term2201 A B _37163 u f t GEN_PVAR_85) = (term2201 A B _37163 u f t GEN_PVAR_85).
Proof. exact (eq_refl (term2201 A B _37163 u f t GEN_PVAR_85)). Qed.
Lemma lem3514295 {A B : Type'} (_37163 : type627 A B) (GEN_PVAR_85 : A) (u : A -> Prop) (f : A -> B) (t : A -> Prop) : ((_37163 u f t GEN_PVAR_85) = (term65 A B GEN_PVAR_85 u f t)) = ((_37163 u f t GEN_PVAR_85) = (term65 A B GEN_PVAR_85 u f t)).
Proof. exact (MK_COMB (@lem3514294 A B _37163 u f t GEN_PVAR_85) (@lem3514283 A B GEN_PVAR_85 u f t)). Qed.
Lemma lem3514296 {A B : Type'} (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) (t : A -> Prop) : (term2203 A B _37163 u f t) = (term2203 A B _37163 u f t).
Proof. exact (fun_ext (fun GEN_PVAR_85 : A => @lem3514295 A B _37163 GEN_PVAR_85 u f t)). Qed.
Lemma lem3514297 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem3514298 {A B : Type'} (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) (t : A -> Prop) : (term2204 A B _37163 u f t) = (term2204 A B _37163 u f t).
Proof. exact (MK_COMB (@lem3514297 A) (@lem3514296 A B _37163 u f t)). Qed.
Lemma lem3514299 {A B : Type'} (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) : (term2205 A B _37163 u f) = (term2205 A B _37163 u f).
Proof. exact (fun_ext (fun t : A -> Prop => @lem3514298 A B _37163 u f t)). Qed.
Lemma lem3514300 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem3514301 {A B : Type'} (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) : (term2206 A B _37163 u f) = (term2206 A B _37163 u f).
Proof. exact (MK_COMB (@lem3514300 A) (@lem3514299 A B _37163 u f)). Qed.
Lemma lem3514302 {A B : Type'} (_37163 : type627 A B) (u : A -> Prop) : (term2207 A B _37163 u) = (term2207 A B _37163 u).
Proof. exact (fun_ext (fun f : A -> B => @lem3514301 A B _37163 u f)). Qed.
Lemma lem3514303 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem3514304 {A B : Type'} (_37163 : type627 A B) (u : A -> Prop) : (term2208 A B _37163 u) = (term2208 A B _37163 u).
Proof. exact (MK_COMB (@lem3514303 A B) (@lem3514302 A B _37163 u)). Qed.
Lemma lem3514305 {A B : Type'} (_37163 : type627 A B) : (term2209 A B _37163) = (term2209 A B _37163).
Proof. exact (fun_ext (fun u : A -> Prop => @lem3514304 A B _37163 u)). Qed.
Lemma lem3514306 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem3514307 {A B : Type'} (_37163 : type627 A B) : (term2210 A B _37163) = (term2210 A B _37163).
Proof. exact (MK_COMB (@lem3514306 A) (@lem3514305 A B _37163)). Qed.
Lemma lem3514308 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem3514309 {A B : Type'} (_37163 : type627 A B) : (term2211 A B _37163) = (term2211 A B _37163).
Proof. exact (MK_COMB (@lem3514308) (@lem3514307 A B _37163)). Qed.
Lemma lem3514310 {_90715 _90724 A B : Type'} (_37164 : type627 _90715 _90724) (_37165 : type627 _90715 A) (_37166 : type627 _90715 B) (_37167 : type616 _90715 A) (_37163 : type627 A B) (_37168 : type852 _90724 A) (h1 : _37168 = (term2440 _90724 A)) : (term2363 _90715 _90724 A B _37164 _37165 _37166 _37167 _37163) = (term2478 _90715 _90724 A B _37164 _37165 _37166 _37167 _37168 _37163).
Proof. exact (MK_COMB (@lem3514309 A B _37163) (@lem3514255 _90715 _90724 A B _37164 _37165 _37166 _37167 _37163 _37168 h1)). Qed.
Lemma lem3514311 {_90715 _90724 A B : Type'} (_37164 : type627 _90715 _90724) (_37165 : type627 _90715 A) (_37166 : type627 _90715 B) (_37167 : type616 _90715 A) (_37168 : type852 _90724 A) (h1 : _37168 = (term2440 _90724 A)) : (term2364 _90715 _90724 A B _37164 _37165 _37166 _37167) = (term2479 _90715 _90724 A B _37164 _37165 _37166 _37167 _37168).
Proof. exact (fun_ext (fun _37163 : type627 A B => @lem3514310 _90715 _90724 A B _37164 _37165 _37166 _37167 _37163 _37168 h1)). Qed.
Lemma lem3514312 {A B : Type'} : (@all ((A -> Prop) -> (A -> B) -> (A -> Prop) -> A -> Prop)) = (@all ((A -> Prop) -> (A -> B) -> (A -> Prop) -> A -> Prop)).
Proof. exact (eq_refl (@all ((A -> Prop) -> (A -> B) -> (A -> Prop) -> A -> Prop))). Qed.
Lemma lem3514313 {_90715 _90724 A B : Type'} (_37164 : type627 _90715 _90724) (_37165 : type627 _90715 A) (_37166 : type627 _90715 B) (_37167 : type616 _90715 A) (_37168 : type852 _90724 A) (h1 : _37168 = (term2440 _90724 A)) : (term2365 _90715 _90724 A B _37164 _37165 _37166 _37167) = (term2480 _90715 _90724 A B _37164 _37165 _37166 _37167 _37168).
Proof. exact (MK_COMB (@lem3514312 A B) (@lem3514311 _90715 _90724 A B _37164 _37165 _37166 _37167 _37168 h1)). Qed.
Lemma lem3514338 {_90715 _90724 : Type'} (GEN_PVAR_84 : _90715) (u : _90715 -> Prop) (f : _90715 -> _90724) (t : _90715 -> Prop) (x : _90715) : (term61 _90715 _90724 GEN_PVAR_84 u f t x) = (term61 _90715 _90724 GEN_PVAR_84 u f t x).
Proof. exact (eq_refl (term61 _90715 _90724 GEN_PVAR_84 u f t x)). Qed.
Lemma lem3514339 {_90715 _90724 : Type'} (GEN_PVAR_84 : _90715) (u : _90715 -> Prop) (f : _90715 -> _90724) (t : _90715 -> Prop) : (term63 _90715 _90724 GEN_PVAR_84 u f t) = (term63 _90715 _90724 GEN_PVAR_84 u f t).
Proof. exact (fun_ext (fun x : _90715 => @lem3514338 _90715 _90724 GEN_PVAR_84 u f t x)). Qed.
Lemma lem3514340 {_90715 : Type'} : (@ex _90715) = (@ex _90715).
Proof. exact (eq_refl (@ex _90715)). Qed.
Lemma lem3514341 {_90715 _90724 : Type'} (GEN_PVAR_84 : _90715) (u : _90715 -> Prop) (f : _90715 -> _90724) (t : _90715 -> Prop) : (term65 _90715 _90724 GEN_PVAR_84 u f t) = (term65 _90715 _90724 GEN_PVAR_84 u f t).
Proof. exact (MK_COMB (@lem3514340 _90715) (@lem3514339 _90715 _90724 GEN_PVAR_84 u f t)). Qed.
Lemma lem3514352 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) (u : _90715 -> Prop) (f : _90715 -> _90724) (t : _90715 -> Prop) (GEN_PVAR_84 : _90715) : (term2201 _90715 _90724 _37164 u f t GEN_PVAR_84) = (term2201 _90715 _90724 _37164 u f t GEN_PVAR_84).
Proof. exact (eq_refl (term2201 _90715 _90724 _37164 u f t GEN_PVAR_84)). Qed.
Lemma lem3514353 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) (GEN_PVAR_84 : _90715) (u : _90715 -> Prop) (f : _90715 -> _90724) (t : _90715 -> Prop) : ((_37164 u f t GEN_PVAR_84) = (term65 _90715 _90724 GEN_PVAR_84 u f t)) = ((_37164 u f t GEN_PVAR_84) = (term65 _90715 _90724 GEN_PVAR_84 u f t)).
Proof. exact (MK_COMB (@lem3514352 _90715 _90724 _37164 u f t GEN_PVAR_84) (@lem3514341 _90715 _90724 GEN_PVAR_84 u f t)). Qed.
Lemma lem3514354 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) (u : _90715 -> Prop) (f : _90715 -> _90724) (t : _90715 -> Prop) : (term2203 _90715 _90724 _37164 u f t) = (term2203 _90715 _90724 _37164 u f t).
Proof. exact (fun_ext (fun GEN_PVAR_84 : _90715 => @lem3514353 _90715 _90724 _37164 GEN_PVAR_84 u f t)). Qed.
Lemma lem3514355 {_90715 : Type'} : (@all _90715) = (@all _90715).
Proof. exact (eq_refl (@all _90715)). Qed.
Lemma lem3514356 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) (u : _90715 -> Prop) (f : _90715 -> _90724) (t : _90715 -> Prop) : (term2204 _90715 _90724 _37164 u f t) = (term2204 _90715 _90724 _37164 u f t).
Proof. exact (MK_COMB (@lem3514355 _90715) (@lem3514354 _90715 _90724 _37164 u f t)). Qed.
Lemma lem3514357 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) (u : _90715 -> Prop) (f : _90715 -> _90724) : (term2205 _90715 _90724 _37164 u f) = (term2205 _90715 _90724 _37164 u f).
Proof. exact (fun_ext (fun t : _90715 -> Prop => @lem3514356 _90715 _90724 _37164 u f t)). Qed.
Lemma lem3514358 {_90715 : Type'} : (@all (_90715 -> Prop)) = (@all (_90715 -> Prop)).
Proof. exact (eq_refl (@all (_90715 -> Prop))). Qed.
Lemma lem3514359 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) (u : _90715 -> Prop) (f : _90715 -> _90724) : (term2206 _90715 _90724 _37164 u f) = (term2206 _90715 _90724 _37164 u f).
Proof. exact (MK_COMB (@lem3514358 _90715) (@lem3514357 _90715 _90724 _37164 u f)). Qed.
Lemma lem3514360 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) (u : _90715 -> Prop) : (term2207 _90715 _90724 _37164 u) = (term2207 _90715 _90724 _37164 u).
Proof. exact (fun_ext (fun f : _90715 -> _90724 => @lem3514359 _90715 _90724 _37164 u f)). Qed.
Lemma lem3514361 {_90715 _90724 : Type'} : (@all (_90715 -> _90724)) = (@all (_90715 -> _90724)).
Proof. exact (eq_refl (@all (_90715 -> _90724))). Qed.
Lemma lem3514362 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) (u : _90715 -> Prop) : (term2208 _90715 _90724 _37164 u) = (term2208 _90715 _90724 _37164 u).
Proof. exact (MK_COMB (@lem3514361 _90715 _90724) (@lem3514360 _90715 _90724 _37164 u)). Qed.
Lemma lem3514363 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) : (term2209 _90715 _90724 _37164) = (term2209 _90715 _90724 _37164).
Proof. exact (fun_ext (fun u : _90715 -> Prop => @lem3514362 _90715 _90724 _37164 u)). Qed.
Lemma lem3514364 {_90715 : Type'} : (@all (_90715 -> Prop)) = (@all (_90715 -> Prop)).
Proof. exact (eq_refl (@all (_90715 -> Prop))). Qed.
Lemma lem3514365 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) : (term2210 _90715 _90724 _37164) = (term2210 _90715 _90724 _37164).
Proof. exact (MK_COMB (@lem3514364 _90715) (@lem3514363 _90715 _90724 _37164)). Qed.
Lemma lem3514366 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem3514367 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) : (term2211 _90715 _90724 _37164) = (term2211 _90715 _90724 _37164).
Proof. exact (MK_COMB (@lem3514366) (@lem3514365 _90715 _90724 _37164)). Qed.
Lemma lem3514368 {_90715 _90724 A B : Type'} (_37164 : type627 _90715 _90724) (_37165 : type627 _90715 A) (_37166 : type627 _90715 B) (_37167 : type616 _90715 A) (_37168 : type852 _90724 A) (h1 : _37168 = (term2440 _90724 A)) : (term2366 _90715 _90724 A B _37164 _37165 _37166 _37167) = (term2481 _90715 _90724 A B _37164 _37165 _37166 _37167 _37168).
Proof. exact (MK_COMB (@lem3514367 _90715 _90724 _37164) (@lem3514313 _90715 _90724 A B _37164 _37165 _37166 _37167 _37168 h1)). Qed.
Lemma lem3514369 {_90715 _90724 A B : Type'} (_37165 : type627 _90715 A) (_37166 : type627 _90715 B) (_37167 : type616 _90715 A) (_37168 : type852 _90724 A) (h1 : _37168 = (term2440 _90724 A)) : (term2367 _90715 _90724 A B _37165 _37166 _37167) = (term2482 _90715 _90724 A B _37165 _37166 _37167 _37168).
Proof. exact (fun_ext (fun _37164 : type627 _90715 _90724 => @lem3514368 _90715 _90724 A B _37164 _37165 _37166 _37167 _37168 h1)). Qed.
Lemma lem3514370 {_90715 _90724 : Type'} : (@all ((_90715 -> Prop) -> (_90715 -> _90724) -> (_90715 -> Prop) -> _90715 -> Prop)) = (@all ((_90715 -> Prop) -> (_90715 -> _90724) -> (_90715 -> Prop) -> _90715 -> Prop)).
Proof. exact (eq_refl (@all ((_90715 -> Prop) -> (_90715 -> _90724) -> (_90715 -> Prop) -> _90715 -> Prop))). Qed.
Lemma lem3514371 {_90715 _90724 A B : Type'} (_37165 : type627 _90715 A) (_37166 : type627 _90715 B) (_37167 : type616 _90715 A) (_37168 : type852 _90724 A) (h1 : _37168 = (term2440 _90724 A)) : (term2368 _90715 _90724 A B _37165 _37166 _37167) = (term2483 _90715 _90724 A B _37165 _37166 _37167 _37168).
Proof. exact (MK_COMB (@lem3514370 _90715 _90724) (@lem3514369 _90715 _90724 A B _37165 _37166 _37167 _37168 h1)). Qed.
Lemma lem3514396 {_90715 A : Type'} (GEN_PVAR_84 : _90715) (u : _90715 -> Prop) (f : _90715 -> A) (t : _90715 -> Prop) (x : _90715) : (term61 _90715 A GEN_PVAR_84 u f t x) = (term61 _90715 A GEN_PVAR_84 u f t x).
Proof. exact (eq_refl (term61 _90715 A GEN_PVAR_84 u f t x)). Qed.
Lemma lem3514397 {_90715 A : Type'} (GEN_PVAR_84 : _90715) (u : _90715 -> Prop) (f : _90715 -> A) (t : _90715 -> Prop) : (term63 _90715 A GEN_PVAR_84 u f t) = (term63 _90715 A GEN_PVAR_84 u f t).
Proof. exact (fun_ext (fun x : _90715 => @lem3514396 _90715 A GEN_PVAR_84 u f t x)). Qed.
Lemma lem3514398 {_90715 : Type'} : (@ex _90715) = (@ex _90715).
Proof. exact (eq_refl (@ex _90715)). Qed.
Lemma lem3514399 {_90715 A : Type'} (GEN_PVAR_84 : _90715) (u : _90715 -> Prop) (f : _90715 -> A) (t : _90715 -> Prop) : (term65 _90715 A GEN_PVAR_84 u f t) = (term65 _90715 A GEN_PVAR_84 u f t).
Proof. exact (MK_COMB (@lem3514398 _90715) (@lem3514397 _90715 A GEN_PVAR_84 u f t)). Qed.
Lemma lem3514410 {_90715 A : Type'} (_37165 : type627 _90715 A) (u : _90715 -> Prop) (f : _90715 -> A) (t : _90715 -> Prop) (GEN_PVAR_84 : _90715) : (term2201 _90715 A _37165 u f t GEN_PVAR_84) = (term2201 _90715 A _37165 u f t GEN_PVAR_84).
Proof. exact (eq_refl (term2201 _90715 A _37165 u f t GEN_PVAR_84)). Qed.
Lemma lem3514411 {_90715 A : Type'} (_37165 : type627 _90715 A) (GEN_PVAR_84 : _90715) (u : _90715 -> Prop) (f : _90715 -> A) (t : _90715 -> Prop) : ((_37165 u f t GEN_PVAR_84) = (term65 _90715 A GEN_PVAR_84 u f t)) = ((_37165 u f t GEN_PVAR_84) = (term65 _90715 A GEN_PVAR_84 u f t)).
Proof. exact (MK_COMB (@lem3514410 _90715 A _37165 u f t GEN_PVAR_84) (@lem3514399 _90715 A GEN_PVAR_84 u f t)). Qed.
Lemma lem3514412 {_90715 A : Type'} (_37165 : type627 _90715 A) (u : _90715 -> Prop) (f : _90715 -> A) (t : _90715 -> Prop) : (term2203 _90715 A _37165 u f t) = (term2203 _90715 A _37165 u f t).
Proof. exact (fun_ext (fun GEN_PVAR_84 : _90715 => @lem3514411 _90715 A _37165 GEN_PVAR_84 u f t)). Qed.
Lemma lem3514413 {_90715 : Type'} : (@all _90715) = (@all _90715).
Proof. exact (eq_refl (@all _90715)). Qed.
Lemma lem3514414 {_90715 A : Type'} (_37165 : type627 _90715 A) (u : _90715 -> Prop) (f : _90715 -> A) (t : _90715 -> Prop) : (term2204 _90715 A _37165 u f t) = (term2204 _90715 A _37165 u f t).
Proof. exact (MK_COMB (@lem3514413 _90715) (@lem3514412 _90715 A _37165 u f t)). Qed.
Lemma lem3514415 {_90715 A : Type'} (_37165 : type627 _90715 A) (u : _90715 -> Prop) (f : _90715 -> A) : (term2205 _90715 A _37165 u f) = (term2205 _90715 A _37165 u f).
Proof. exact (fun_ext (fun t : _90715 -> Prop => @lem3514414 _90715 A _37165 u f t)). Qed.
Lemma lem3514416 {_90715 : Type'} : (@all (_90715 -> Prop)) = (@all (_90715 -> Prop)).
Proof. exact (eq_refl (@all (_90715 -> Prop))). Qed.
Lemma lem3514417 {_90715 A : Type'} (_37165 : type627 _90715 A) (u : _90715 -> Prop) (f : _90715 -> A) : (term2206 _90715 A _37165 u f) = (term2206 _90715 A _37165 u f).
Proof. exact (MK_COMB (@lem3514416 _90715) (@lem3514415 _90715 A _37165 u f)). Qed.
Lemma lem3514418 {_90715 A : Type'} (_37165 : type627 _90715 A) (u : _90715 -> Prop) : (term2207 _90715 A _37165 u) = (term2207 _90715 A _37165 u).
Proof. exact (fun_ext (fun f : _90715 -> A => @lem3514417 _90715 A _37165 u f)). Qed.
Lemma lem3514419 {_90715 A : Type'} : (@all (_90715 -> A)) = (@all (_90715 -> A)).
Proof. exact (eq_refl (@all (_90715 -> A))). Qed.
Lemma lem3514420 {_90715 A : Type'} (_37165 : type627 _90715 A) (u : _90715 -> Prop) : (term2208 _90715 A _37165 u) = (term2208 _90715 A _37165 u).
Proof. exact (MK_COMB (@lem3514419 _90715 A) (@lem3514418 _90715 A _37165 u)). Qed.
Lemma lem3514421 {_90715 A : Type'} (_37165 : type627 _90715 A) : (term2209 _90715 A _37165) = (term2209 _90715 A _37165).
Proof. exact (fun_ext (fun u : _90715 -> Prop => @lem3514420 _90715 A _37165 u)). Qed.
Lemma lem3514422 {_90715 : Type'} : (@all (_90715 -> Prop)) = (@all (_90715 -> Prop)).
Proof. exact (eq_refl (@all (_90715 -> Prop))). Qed.
Lemma lem3514423 {_90715 A : Type'} (_37165 : type627 _90715 A) : (term2210 _90715 A _37165) = (term2210 _90715 A _37165).
Proof. exact (MK_COMB (@lem3514422 _90715) (@lem3514421 _90715 A _37165)). Qed.
Lemma lem3514424 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem3514425 {_90715 A : Type'} (_37165 : type627 _90715 A) : (term2211 _90715 A _37165) = (term2211 _90715 A _37165).
Proof. exact (MK_COMB (@lem3514424) (@lem3514423 _90715 A _37165)). Qed.
Lemma lem3514426 {_90715 _90724 A B : Type'} (_37165 : type627 _90715 A) (_37166 : type627 _90715 B) (_37167 : type616 _90715 A) (_37168 : type852 _90724 A) (h1 : _37168 = (term2440 _90724 A)) : (term2369 _90715 _90724 A B _37165 _37166 _37167) = (term2484 _90715 _90724 A B _37165 _37166 _37167 _37168).
Proof. exact (MK_COMB (@lem3514425 _90715 A _37165) (@lem3514371 _90715 _90724 A B _37165 _37166 _37167 _37168 h1)). Qed.
Lemma lem3514427 {_90715 _90724 A B : Type'} (_37166 : type627 _90715 B) (_37167 : type616 _90715 A) (_37168 : type852 _90724 A) (h1 : _37168 = (term2440 _90724 A)) : (term2370 _90715 _90724 A B _37166 _37167) = (term2485 _90715 _90724 A B _37166 _37167 _37168).
Proof. exact (fun_ext (fun _37165 : type627 _90715 A => @lem3514426 _90715 _90724 A B _37165 _37166 _37167 _37168 h1)). Qed.
Lemma lem3514428 {_90715 A : Type'} : (@all ((_90715 -> Prop) -> (_90715 -> A) -> (_90715 -> Prop) -> _90715 -> Prop)) = (@all ((_90715 -> Prop) -> (_90715 -> A) -> (_90715 -> Prop) -> _90715 -> Prop)).
Proof. exact (eq_refl (@all ((_90715 -> Prop) -> (_90715 -> A) -> (_90715 -> Prop) -> _90715 -> Prop))). Qed.
Lemma lem3514429 {_90715 _90724 A B : Type'} (_37166 : type627 _90715 B) (_37167 : type616 _90715 A) (_37168 : type852 _90724 A) (h1 : _37168 = (term2440 _90724 A)) : (term2371 _90715 _90724 A B _37166 _37167) = (term2486 _90715 _90724 A B _37166 _37167 _37168).
Proof. exact (MK_COMB (@lem3514428 _90715 A) (@lem3514427 _90715 _90724 A B _37166 _37167 _37168 h1)). Qed.
Lemma lem3514454 {_90715 B : Type'} (GEN_PVAR_84 : _90715) (u : _90715 -> Prop) (f : _90715 -> B) (t : _90715 -> Prop) (x : _90715) : (term61 _90715 B GEN_PVAR_84 u f t x) = (term61 _90715 B GEN_PVAR_84 u f t x).
Proof. exact (eq_refl (term61 _90715 B GEN_PVAR_84 u f t x)). Qed.
Lemma lem3514455 {_90715 B : Type'} (GEN_PVAR_84 : _90715) (u : _90715 -> Prop) (f : _90715 -> B) (t : _90715 -> Prop) : (term63 _90715 B GEN_PVAR_84 u f t) = (term63 _90715 B GEN_PVAR_84 u f t).
Proof. exact (fun_ext (fun x : _90715 => @lem3514454 _90715 B GEN_PVAR_84 u f t x)). Qed.
Lemma lem3514456 {_90715 : Type'} : (@ex _90715) = (@ex _90715).
Proof. exact (eq_refl (@ex _90715)). Qed.
Lemma lem3514457 {_90715 B : Type'} (GEN_PVAR_84 : _90715) (u : _90715 -> Prop) (f : _90715 -> B) (t : _90715 -> Prop) : (term65 _90715 B GEN_PVAR_84 u f t) = (term65 _90715 B GEN_PVAR_84 u f t).
Proof. exact (MK_COMB (@lem3514456 _90715) (@lem3514455 _90715 B GEN_PVAR_84 u f t)). Qed.
Lemma lem3514468 {_90715 B : Type'} (_37166 : type627 _90715 B) (u : _90715 -> Prop) (f : _90715 -> B) (t : _90715 -> Prop) (GEN_PVAR_84 : _90715) : (term2201 _90715 B _37166 u f t GEN_PVAR_84) = (term2201 _90715 B _37166 u f t GEN_PVAR_84).
Proof. exact (eq_refl (term2201 _90715 B _37166 u f t GEN_PVAR_84)). Qed.
Lemma lem3514469 {_90715 B : Type'} (_37166 : type627 _90715 B) (GEN_PVAR_84 : _90715) (u : _90715 -> Prop) (f : _90715 -> B) (t : _90715 -> Prop) : ((_37166 u f t GEN_PVAR_84) = (term65 _90715 B GEN_PVAR_84 u f t)) = ((_37166 u f t GEN_PVAR_84) = (term65 _90715 B GEN_PVAR_84 u f t)).
Proof. exact (MK_COMB (@lem3514468 _90715 B _37166 u f t GEN_PVAR_84) (@lem3514457 _90715 B GEN_PVAR_84 u f t)). Qed.
Lemma lem3514470 {_90715 B : Type'} (_37166 : type627 _90715 B) (u : _90715 -> Prop) (f : _90715 -> B) (t : _90715 -> Prop) : (term2203 _90715 B _37166 u f t) = (term2203 _90715 B _37166 u f t).
Proof. exact (fun_ext (fun GEN_PVAR_84 : _90715 => @lem3514469 _90715 B _37166 GEN_PVAR_84 u f t)). Qed.
Lemma lem3514471 {_90715 : Type'} : (@all _90715) = (@all _90715).
Proof. exact (eq_refl (@all _90715)). Qed.
Lemma lem3514472 {_90715 B : Type'} (_37166 : type627 _90715 B) (u : _90715 -> Prop) (f : _90715 -> B) (t : _90715 -> Prop) : (term2204 _90715 B _37166 u f t) = (term2204 _90715 B _37166 u f t).
Proof. exact (MK_COMB (@lem3514471 _90715) (@lem3514470 _90715 B _37166 u f t)). Qed.
Lemma lem3514473 {_90715 B : Type'} (_37166 : type627 _90715 B) (u : _90715 -> Prop) (f : _90715 -> B) : (term2205 _90715 B _37166 u f) = (term2205 _90715 B _37166 u f).
Proof. exact (fun_ext (fun t : _90715 -> Prop => @lem3514472 _90715 B _37166 u f t)). Qed.
Lemma lem3514474 {_90715 : Type'} : (@all (_90715 -> Prop)) = (@all (_90715 -> Prop)).
Proof. exact (eq_refl (@all (_90715 -> Prop))). Qed.
Lemma lem3514475 {_90715 B : Type'} (_37166 : type627 _90715 B) (u : _90715 -> Prop) (f : _90715 -> B) : (term2206 _90715 B _37166 u f) = (term2206 _90715 B _37166 u f).
Proof. exact (MK_COMB (@lem3514474 _90715) (@lem3514473 _90715 B _37166 u f)). Qed.
Lemma lem3514476 {_90715 B : Type'} (_37166 : type627 _90715 B) (u : _90715 -> Prop) : (term2207 _90715 B _37166 u) = (term2207 _90715 B _37166 u).
Proof. exact (fun_ext (fun f : _90715 -> B => @lem3514475 _90715 B _37166 u f)). Qed.
Lemma lem3514477 {_90715 B : Type'} : (@all (_90715 -> B)) = (@all (_90715 -> B)).
Proof. exact (eq_refl (@all (_90715 -> B))). Qed.
Lemma lem3514478 {_90715 B : Type'} (_37166 : type627 _90715 B) (u : _90715 -> Prop) : (term2208 _90715 B _37166 u) = (term2208 _90715 B _37166 u).
Proof. exact (MK_COMB (@lem3514477 _90715 B) (@lem3514476 _90715 B _37166 u)). Qed.
Lemma lem3514479 {_90715 B : Type'} (_37166 : type627 _90715 B) : (term2209 _90715 B _37166) = (term2209 _90715 B _37166).
Proof. exact (fun_ext (fun u : _90715 -> Prop => @lem3514478 _90715 B _37166 u)). Qed.
Lemma lem3514480 {_90715 : Type'} : (@all (_90715 -> Prop)) = (@all (_90715 -> Prop)).
Proof. exact (eq_refl (@all (_90715 -> Prop))). Qed.
Lemma lem3514481 {_90715 B : Type'} (_37166 : type627 _90715 B) : (term2210 _90715 B _37166) = (term2210 _90715 B _37166).
Proof. exact (MK_COMB (@lem3514480 _90715) (@lem3514479 _90715 B _37166)). Qed.
Lemma lem3514482 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem3514483 {_90715 B : Type'} (_37166 : type627 _90715 B) : (term2211 _90715 B _37166) = (term2211 _90715 B _37166).
Proof. exact (MK_COMB (@lem3514482) (@lem3514481 _90715 B _37166)). Qed.
Lemma lem3514484 {_90715 _90724 A B : Type'} (_37166 : type627 _90715 B) (_37167 : type616 _90715 A) (_37168 : type852 _90724 A) (h1 : _37168 = (term2440 _90724 A)) : (term2372 _90715 _90724 A B _37166 _37167) = (term2487 _90715 _90724 A B _37166 _37167 _37168).
Proof. exact (MK_COMB (@lem3514483 _90715 B _37166) (@lem3514429 _90715 _90724 A B _37166 _37167 _37168 h1)). Qed.
Lemma lem3514485 {_90715 _90724 A B : Type'} (_37167 : type616 _90715 A) (_37168 : type852 _90724 A) (h1 : _37168 = (term2440 _90724 A)) : (term2373 _90715 _90724 A B _37167) = (term2488 _90715 _90724 A B _37167 _37168).
Proof. exact (fun_ext (fun _37166 : type627 _90715 B => @lem3514484 _90715 _90724 A B _37166 _37167 _37168 h1)). Qed.
Lemma lem3514486 {_90715 B : Type'} : (@all ((_90715 -> Prop) -> (_90715 -> B) -> (_90715 -> Prop) -> _90715 -> Prop)) = (@all ((_90715 -> Prop) -> (_90715 -> B) -> (_90715 -> Prop) -> _90715 -> Prop)).
Proof. exact (eq_refl (@all ((_90715 -> Prop) -> (_90715 -> B) -> (_90715 -> Prop) -> _90715 -> Prop))). Qed.
Lemma lem3514487 {_90715 _90724 A B : Type'} (_37167 : type616 _90715 A) (_37168 : type852 _90724 A) (h1 : _37168 = (term2440 _90724 A)) : (term2374 _90715 _90724 A B _37167) = (term2489 _90715 _90724 A B _37167 _37168).
Proof. exact (MK_COMB (@lem3514486 _90715 B) (@lem3514485 _90715 _90724 A B _37167 _37168 h1)). Qed.
Lemma lem3514512 {_90715 A : Type'} (GEN_PVAR_84 : _90715) (u : _90715 -> Prop) (f : type1413 _90715 A) (t : _90715 -> Prop) (x : _90715) : (term2101 _90715 A GEN_PVAR_84 u f t x) = (term2101 _90715 A GEN_PVAR_84 u f t x).
Proof. exact (eq_refl (term2101 _90715 A GEN_PVAR_84 u f t x)). Qed.
Lemma lem3514513 {_90715 A : Type'} (GEN_PVAR_84 : _90715) (u : _90715 -> Prop) (f : type1413 _90715 A) (t : _90715 -> Prop) : (term2102 _90715 A GEN_PVAR_84 u f t) = (term2102 _90715 A GEN_PVAR_84 u f t).
Proof. exact (fun_ext (fun x : _90715 => @lem3514512 _90715 A GEN_PVAR_84 u f t x)). Qed.
Lemma lem3514514 {_90715 : Type'} : (@ex _90715) = (@ex _90715).
Proof. exact (eq_refl (@ex _90715)). Qed.
Lemma lem3514515 {_90715 A : Type'} (GEN_PVAR_84 : _90715) (u : _90715 -> Prop) (f : type1413 _90715 A) (t : _90715 -> Prop) : (term2103 _90715 A GEN_PVAR_84 u f t) = (term2103 _90715 A GEN_PVAR_84 u f t).
Proof. exact (MK_COMB (@lem3514514 _90715) (@lem3514513 _90715 A GEN_PVAR_84 u f t)). Qed.
Lemma lem3514526 {_90715 A : Type'} (_37167 : type616 _90715 A) (u : _90715 -> Prop) (f : type1413 _90715 A) (t : _90715 -> Prop) (GEN_PVAR_84 : _90715) : (term2426 _90715 A _37167 u f t GEN_PVAR_84) = (term2426 _90715 A _37167 u f t GEN_PVAR_84).
Proof. exact (eq_refl (term2426 _90715 A _37167 u f t GEN_PVAR_84)). Qed.
Lemma lem3514527 {_90715 A : Type'} (_37167 : type616 _90715 A) (GEN_PVAR_84 : _90715) (u : _90715 -> Prop) (f : type1413 _90715 A) (t : _90715 -> Prop) : ((_37167 u f t GEN_PVAR_84) = (term2103 _90715 A GEN_PVAR_84 u f t)) = ((_37167 u f t GEN_PVAR_84) = (term2103 _90715 A GEN_PVAR_84 u f t)).
Proof. exact (MK_COMB (@lem3514526 _90715 A _37167 u f t GEN_PVAR_84) (@lem3514515 _90715 A GEN_PVAR_84 u f t)). Qed.
Lemma lem3514528 {_90715 A : Type'} (_37167 : type616 _90715 A) (u : _90715 -> Prop) (f : type1413 _90715 A) (t : _90715 -> Prop) : (term2428 _90715 A _37167 u f t) = (term2428 _90715 A _37167 u f t).
Proof. exact (fun_ext (fun GEN_PVAR_84 : _90715 => @lem3514527 _90715 A _37167 GEN_PVAR_84 u f t)). Qed.
Lemma lem3514529 {_90715 : Type'} : (@all _90715) = (@all _90715).
Proof. exact (eq_refl (@all _90715)). Qed.
Lemma lem3514530 {_90715 A : Type'} (_37167 : type616 _90715 A) (u : _90715 -> Prop) (f : type1413 _90715 A) (t : _90715 -> Prop) : (term2429 _90715 A _37167 u f t) = (term2429 _90715 A _37167 u f t).
Proof. exact (MK_COMB (@lem3514529 _90715) (@lem3514528 _90715 A _37167 u f t)). Qed.
Lemma lem3514531 {_90715 A : Type'} (_37167 : type616 _90715 A) (u : _90715 -> Prop) (f : type1413 _90715 A) : (term2430 _90715 A _37167 u f) = (term2430 _90715 A _37167 u f).
Proof. exact (fun_ext (fun t : _90715 -> Prop => @lem3514530 _90715 A _37167 u f t)). Qed.
Lemma lem3514532 {_90715 : Type'} : (@all (_90715 -> Prop)) = (@all (_90715 -> Prop)).
Proof. exact (eq_refl (@all (_90715 -> Prop))). Qed.
Lemma lem3514533 {_90715 A : Type'} (_37167 : type616 _90715 A) (u : _90715 -> Prop) (f : type1413 _90715 A) : (term2431 _90715 A _37167 u f) = (term2431 _90715 A _37167 u f).
Proof. exact (MK_COMB (@lem3514532 _90715) (@lem3514531 _90715 A _37167 u f)). Qed.
Lemma lem3514534 {_90715 A : Type'} (_37167 : type616 _90715 A) (u : _90715 -> Prop) : (term2432 _90715 A _37167 u) = (term2432 _90715 A _37167 u).
Proof. exact (fun_ext (fun f : type1413 _90715 A => @lem3514533 _90715 A _37167 u f)). Qed.
Lemma lem3514535 {_90715 A : Type'} : (@all (_90715 -> A -> Prop)) = (@all (_90715 -> A -> Prop)).
Proof. exact (eq_refl (@all (_90715 -> A -> Prop))). Qed.
Lemma lem3514536 {_90715 A : Type'} (_37167 : type616 _90715 A) (u : _90715 -> Prop) : (term2433 _90715 A _37167 u) = (term2433 _90715 A _37167 u).
Proof. exact (MK_COMB (@lem3514535 _90715 A) (@lem3514534 _90715 A _37167 u)). Qed.
Lemma lem3514537 {_90715 A : Type'} (_37167 : type616 _90715 A) : (term2434 _90715 A _37167) = (term2434 _90715 A _37167).
Proof. exact (fun_ext (fun u : _90715 -> Prop => @lem3514536 _90715 A _37167 u)). Qed.
Lemma lem3514538 {_90715 : Type'} : (@all (_90715 -> Prop)) = (@all (_90715 -> Prop)).
Proof. exact (eq_refl (@all (_90715 -> Prop))). Qed.
Lemma lem3514539 {_90715 A : Type'} (_37167 : type616 _90715 A) : (term2435 _90715 A _37167) = (term2435 _90715 A _37167).
Proof. exact (MK_COMB (@lem3514538 _90715) (@lem3514537 _90715 A _37167)). Qed.
Lemma lem3514540 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem3514541 {_90715 A : Type'} (_37167 : type616 _90715 A) : (term2436 _90715 A _37167) = (term2436 _90715 A _37167).
Proof. exact (MK_COMB (@lem3514540) (@lem3514539 _90715 A _37167)). Qed.
Lemma lem3514542 {_90715 _90724 A B : Type'} (_37167 : type616 _90715 A) (_37168 : type852 _90724 A) (h1 : _37168 = (term2440 _90724 A)) : (term2437 _90715 _90724 A B _37167) = (term2490 _90715 _90724 A B _37167 _37168).
Proof. exact (MK_COMB (@lem3514541 _90715 A _37167) (@lem3514487 _90715 _90724 A B _37167 _37168 h1)). Qed.
Lemma lem3514543 {_90715 _90724 A B : Type'} (_37168 : type852 _90724 A) (h1 : _37168 = (term2440 _90724 A)) : (term2438 _90715 _90724 A B) = (term2491 _90715 _90724 A B _37168).
Proof. exact (fun_ext (fun _37167 : type616 _90715 A => @lem3514542 _90715 _90724 A B _37167 _37168 h1)). Qed.
Lemma lem3514544 {_90715 A : Type'} : (@all ((_90715 -> Prop) -> (_90715 -> A -> Prop) -> (_90715 -> Prop) -> _90715 -> Prop)) = (@all ((_90715 -> Prop) -> (_90715 -> A -> Prop) -> (_90715 -> Prop) -> _90715 -> Prop)).
Proof. exact (eq_refl (@all ((_90715 -> Prop) -> (_90715 -> A -> Prop) -> (_90715 -> Prop) -> _90715 -> Prop))). Qed.
Lemma lem3514545 {_90715 _90724 A B : Type'} (_37168 : type852 _90724 A) (h1 : _37168 = (term2440 _90724 A)) : (term2439 _90715 _90724 A B) = (term2492 _90715 _90724 A B _37168).
Proof. exact (MK_COMB (@lem3514544 _90715 A) (@lem3514543 _90715 _90724 A B _37168 h1)). Qed.
Lemma lem3514546 {_90715 _90724 A B : Type'} (_37168 : type852 _90724 A) : term2493 _90715 _90724 A B _37168.
Proof. exact (fun h0 : _37168 = (term2440 _90724 A) => @lem3514545 _90715 _90724 A B _37168 h0). Qed.
Lemma lem3514547 {_90715 _90724 A B : Type'} : term2494 _90715 _90724 A B.
Proof. exact (fun _37168 : type852 _90724 A => @lem3514546 _90715 _90724 A B _37168). Qed.
Lemma lem3514549 {_3603 : Type'} (P : Prop) (c : _3603) (Q : _3603 -> Prop) : term2146 _3603 P c Q.
Proof. exact (EQ_MP (@lem20230 _3603 P c Q) (@lem0)). Qed.
Lemma lem3514550 {_90724 A : Type'} (P : Prop) (c : type852 _90724 A) (Q : type222 _90724 A) : term2495 _90724 A P c Q.
Proof. exact (@lem3514549 (type852 _90724 A) P c Q). Qed.
Lemma lem3514551 {_90715 _90724 A B : Type'} : term2496 _90715 _90724 A B.
Proof. exact (@lem3514550 _90724 A (term2439 _90715 _90724 A B) (term2440 _90724 A) (term2497 _90715 _90724 A B)). Qed.
Lemma lem3514552 {_90715 _90724 A B : Type'} (_37168 : type852 _90724 A) : (term2498 _90715 _90724 A B _37168) = (term2492 _90715 _90724 A B _37168).
Proof. exact (eq_refl (term2498 _90715 _90724 A B _37168)). Qed.
Lemma lem3514553 {_90715 _90724 A B : Type'} : (term2499 _90715 _90724 A B) = (term2499 _90715 _90724 A B).
Proof. exact (eq_refl (term2499 _90715 _90724 A B)). Qed.
Lemma lem3514554 {_90715 _90724 A B : Type'} (_37168 : type852 _90724 A) : ((term2439 _90715 _90724 A B) = (term2498 _90715 _90724 A B _37168)) = ((term2439 _90715 _90724 A B) = (term2492 _90715 _90724 A B _37168)).
Proof. exact (MK_COMB (@lem3514553 _90715 _90724 A B) (@lem3514552 _90715 _90724 A B _37168)). Qed.
Lemma lem3514555 {_90724 A : Type'} (_37168 : type852 _90724 A) : (term2500 _90724 A _37168) = (term2500 _90724 A _37168).
Proof. exact (eq_refl (term2500 _90724 A _37168)). Qed.
Lemma lem3514556 {_90715 _90724 A B : Type'} (_37168 : type852 _90724 A) : (term2501 _90715 _90724 A B _37168) = (term2493 _90715 _90724 A B _37168).
Proof. exact (MK_COMB (@lem3514555 _90724 A _37168) (@lem3514554 _90715 _90724 A B _37168)). Qed.
Lemma lem3514557 {_90715 _90724 A B : Type'} : (term2502 _90715 _90724 A B) = (term2503 _90715 _90724 A B).
Proof. exact (fun_ext (fun _37168 : type852 _90724 A => @lem3514556 _90715 _90724 A B _37168)). Qed.
Lemma lem3514558 {_90724 A : Type'} : (@all ((A -> Prop) -> (A -> _90724) -> (A -> Prop) -> A -> Prop)) = (@all ((A -> Prop) -> (A -> _90724) -> (A -> Prop) -> A -> Prop)).
Proof. exact (eq_refl (@all ((A -> Prop) -> (A -> _90724) -> (A -> Prop) -> A -> Prop))). Qed.
Lemma lem3514559 {_90715 _90724 A B : Type'} : (term2504 _90715 _90724 A B) = (term2494 _90715 _90724 A B).
Proof. exact (MK_COMB (@lem3514558 _90724 A) (@lem3514557 _90715 _90724 A B)). Qed.
Lemma lem3514560 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem3514561 {_90715 _90724 A B : Type'} : (term2505 _90715 _90724 A B) = (term2506 _90715 _90724 A B).
Proof. exact (MK_COMB (@lem3514560) (@lem3514559 _90715 _90724 A B)). Qed.
Lemma lem3514562 {_90715 _90724 A B : Type'} (_37168 : type852 _90724 A) : (term2498 _90715 _90724 A B _37168) = (term2492 _90715 _90724 A B _37168).
Proof. exact (eq_refl (term2498 _90715 _90724 A B _37168)). Qed.
Lemma lem3514563 {_90724 A : Type'} (_37168 : type852 _90724 A) : (term2500 _90724 A _37168) = (term2500 _90724 A _37168).
Proof. exact (eq_refl (term2500 _90724 A _37168)). Qed.
Lemma lem3514564 {_90715 _90724 A B : Type'} (_37168 : type852 _90724 A) : (term2507 _90715 _90724 A B _37168) = (term2508 _90715 _90724 A B _37168).
Proof. exact (MK_COMB (@lem3514563 _90724 A _37168) (@lem3514562 _90715 _90724 A B _37168)). Qed.
Lemma lem3514565 {_90715 _90724 A B : Type'} : (term2509 _90715 _90724 A B) = (term2510 _90715 _90724 A B).
Proof. exact (fun_ext (fun _37168 : type852 _90724 A => @lem3514564 _90715 _90724 A B _37168)). Qed.
Lemma lem3514566 {_90724 A : Type'} : (@all ((A -> Prop) -> (A -> _90724) -> (A -> Prop) -> A -> Prop)) = (@all ((A -> Prop) -> (A -> _90724) -> (A -> Prop) -> A -> Prop)).
Proof. exact (eq_refl (@all ((A -> Prop) -> (A -> _90724) -> (A -> Prop) -> A -> Prop))). Qed.
Lemma lem3514567 {_90715 _90724 A B : Type'} : (term2511 _90715 _90724 A B) = (term2512 _90715 _90724 A B).
Proof. exact (MK_COMB (@lem3514566 _90724 A) (@lem3514565 _90715 _90724 A B)). Qed.
Lemma lem3514568 {_90715 _90724 A B : Type'} : (term2499 _90715 _90724 A B) = (term2499 _90715 _90724 A B).
Proof. exact (eq_refl (term2499 _90715 _90724 A B)). Qed.
Lemma lem3514569 {_90715 _90724 A B : Type'} : ((term2439 _90715 _90724 A B) = (term2511 _90715 _90724 A B)) = ((term2439 _90715 _90724 A B) = (term2512 _90715 _90724 A B)).
Proof. exact (MK_COMB (@lem3514568 _90715 _90724 A B) (@lem3514567 _90715 _90724 A B)). Qed.
Lemma lem3514570 {_90715 _90724 A B : Type'} : (term2496 _90715 _90724 A B) = (term2513 _90715 _90724 A B).
Proof. exact (MK_COMB (@lem3514561 _90715 _90724 A B) (@lem3514569 _90715 _90724 A B)). Qed.
Lemma lem3514571 {_90715 _90724 A B : Type'} : term2513 _90715 _90724 A B.
Proof. exact (EQ_MP (@lem3514570 _90715 _90724 A B) (@lem3514551 _90715 _90724 A B)). Qed.
Lemma lem3514572 {_90715 _90724 A B : Type'} : (term2439 _90715 _90724 A B) = (term2512 _90715 _90724 A B).
Proof. exact (@lem3514571 _90715 _90724 A B (@lem3514547 _90715 _90724 A B)). Qed.
Lemma lem3514574 {_3571 _3575 : Type'} (s : _3575 -> _3571) (t : _3575 -> _3571) : (s = (term2166 _3571 _3575 t)) = (term2167 _3571 _3575 s t).
Proof. exact (EQ_MP (@lem19792 _3571 _3575 s t) (@lem0)). Qed.
Lemma lem3514575 {_90724 A : Type'} (s : type852 _90724 A) (t : type852 _90724 A) : (s = (term2514 _90724 A t)) = (term2515 _90724 A s t).
Proof. exact (@lem3514574 (type789 _90724 A) (A -> Prop) s t). Qed.
Lemma lem3514576 {_90724 A : Type'} (_37168 : type852 _90724 A) : (_37168 = (term2516 _90724 A)) = (term2517 _90724 A _37168).
Proof. exact (@lem3514575 _90724 A _37168 (term2440 _90724 A)). Qed.
Lemma lem3514577 {_90724 A : Type'} (u : A -> Prop) : (term2441 _90724 A u) = (term2442 _90724 A u).
Proof. exact (eq_refl (term2441 _90724 A u)). Qed.
Lemma lem3514578 {_90724 A : Type'} : (term2516 _90724 A) = (term2440 _90724 A).
Proof. exact (fun_ext (fun u : A -> Prop => @lem3514577 _90724 A u)). Qed.
Lemma lem3514579 {_90724 A : Type'} (_37168 : type852 _90724 A) : (@eq ((A -> Prop) -> (A -> _90724) -> (A -> Prop) -> A -> Prop) _37168) = (@eq ((A -> Prop) -> (A -> _90724) -> (A -> Prop) -> A -> Prop) _37168).
Proof. exact (eq_refl (@eq ((A -> Prop) -> (A -> _90724) -> (A -> Prop) -> A -> Prop) _37168)). Qed.
Lemma lem3514580 {_90724 A : Type'} (_37168 : type852 _90724 A) : (_37168 = (term2516 _90724 A)) = (_37168 = (term2440 _90724 A)).
Proof. exact (MK_COMB (@lem3514579 _90724 A _37168) (@lem3514578 _90724 A)). Qed.
Lemma lem3514581 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem3514582 {_90724 A : Type'} (_37168 : type852 _90724 A) : (term2518 _90724 A _37168) = (term2519 _90724 A _37168).
Proof. exact (MK_COMB (@lem3514581) (@lem3514580 _90724 A _37168)). Qed.
Lemma lem3514583 {_90724 A : Type'} (u : A -> Prop) : (term2441 _90724 A u) = (term2442 _90724 A u).
Proof. exact (eq_refl (term2441 _90724 A u)). Qed.
Lemma lem3514584 {_90724 A : Type'} (_37168 : type852 _90724 A) (u : A -> Prop) : (term2443 _90724 A _37168 u) = (term2443 _90724 A _37168 u).
Proof. exact (eq_refl (term2443 _90724 A _37168 u)). Qed.
Lemma lem3514585 {_90724 A : Type'} (_37168 : type852 _90724 A) (u : A -> Prop) : ((_37168 u) = (term2441 _90724 A u)) = ((_37168 u) = (term2442 _90724 A u)).
Proof. exact (MK_COMB (@lem3514584 _90724 A _37168 u) (@lem3514583 _90724 A u)). Qed.
Lemma lem3514586 {_90724 A : Type'} (_37168 : type852 _90724 A) : (term2520 _90724 A _37168) = (term2521 _90724 A _37168).
Proof. exact (fun_ext (fun u : A -> Prop => @lem3514585 _90724 A _37168 u)). Qed.
Lemma lem3514587 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem3514588 {_90724 A : Type'} (_37168 : type852 _90724 A) : (term2517 _90724 A _37168) = (term2522 _90724 A _37168).
Proof. exact (MK_COMB (@lem3514587 A) (@lem3514586 _90724 A _37168)). Qed.
Lemma lem3514589 {_90724 A : Type'} (_37168 : type852 _90724 A) : ((_37168 = (term2516 _90724 A)) = (term2517 _90724 A _37168)) = ((_37168 = (term2440 _90724 A)) = (term2522 _90724 A _37168)).
Proof. exact (MK_COMB (@lem3514582 _90724 A _37168) (@lem3514588 _90724 A _37168)). Qed.
Lemma lem3514590 {_90724 A : Type'} (_37168 : type852 _90724 A) : (_37168 = (term2440 _90724 A)) = (term2522 _90724 A _37168).
Proof. exact (EQ_MP (@lem3514589 _90724 A _37168) (@lem3514576 _90724 A _37168)). Qed.
Lemma lem3514592 {_3571 _3575 : Type'} (s : _3575 -> _3571) (t : _3575 -> _3571) : (s = (term2166 _3571 _3575 t)) = (term2167 _3571 _3575 s t).
Proof. exact (EQ_MP (@lem19792 _3571 _3575 s t) (@lem0)). Qed.
Lemma lem3514593 {_90724 A : Type'} (s : type789 _90724 A) (t : type789 _90724 A) : (s = (term2523 _90724 A t)) = (term2524 _90724 A s t).
Proof. exact (@lem3514592 (type672 A) (A -> _90724) s t). Qed.
Lemma lem3514594 {_90724 A : Type'} (_37168 : type852 _90724 A) (u : A -> Prop) : ((_37168 u) = (term2525 _90724 A u)) = (term2526 _90724 A _37168 u).
Proof. exact (@lem3514593 _90724 A (_37168 u) (term2442 _90724 A u)). Qed.
Lemma lem3514595 {_90724 A : Type'} (u : A -> Prop) (f : A -> _90724) : (term2444 _90724 A u f) = (term2445 _90724 A u f).
Proof. exact (eq_refl (term2444 _90724 A u f)). Qed.
Lemma lem3514596 {_90724 A : Type'} (u : A -> Prop) : (term2525 _90724 A u) = (term2442 _90724 A u).
Proof. exact (fun_ext (fun f : A -> _90724 => @lem3514595 _90724 A u f)). Qed.
Lemma lem3514597 {_90724 A : Type'} (_37168 : type852 _90724 A) (u : A -> Prop) : (term2443 _90724 A _37168 u) = (term2443 _90724 A _37168 u).
Proof. exact (eq_refl (term2443 _90724 A _37168 u)). Qed.
Lemma lem3514598 {_90724 A : Type'} (_37168 : type852 _90724 A) (u : A -> Prop) : ((_37168 u) = (term2525 _90724 A u)) = ((_37168 u) = (term2442 _90724 A u)).
Proof. exact (MK_COMB (@lem3514597 _90724 A _37168 u) (@lem3514596 _90724 A u)). Qed.
Lemma lem3514599 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem3514600 {_90724 A : Type'} (_37168 : type852 _90724 A) (u : A -> Prop) : (term2527 _90724 A _37168 u) = (term2528 _90724 A _37168 u).
Proof. exact (MK_COMB (@lem3514599) (@lem3514598 _90724 A _37168 u)). Qed.
Lemma lem3514601 {_90724 A : Type'} (u : A -> Prop) (f : A -> _90724) : (term2444 _90724 A u f) = (term2445 _90724 A u f).
Proof. exact (eq_refl (term2444 _90724 A u f)). Qed.
Lemma lem3514602 {_90724 A : Type'} (_37168 : type852 _90724 A) (u : A -> Prop) (f : A -> _90724) : (term2446 _90724 A _37168 u f) = (term2446 _90724 A _37168 u f).
Proof. exact (eq_refl (term2446 _90724 A _37168 u f)). Qed.
Lemma lem3514603 {_90724 A : Type'} (_37168 : type852 _90724 A) (u : A -> Prop) (f : A -> _90724) : ((_37168 u f) = (term2444 _90724 A u f)) = ((_37168 u f) = (term2445 _90724 A u f)).
Proof. exact (MK_COMB (@lem3514602 _90724 A _37168 u f) (@lem3514601 _90724 A u f)). Qed.
Lemma lem3514604 {_90724 A : Type'} (_37168 : type852 _90724 A) (u : A -> Prop) : (term2529 _90724 A _37168 u) = (term2530 _90724 A _37168 u).
Proof. exact (fun_ext (fun f : A -> _90724 => @lem3514603 _90724 A _37168 u f)). Qed.
Lemma lem3514605 {_90724 A : Type'} : (@all (A -> _90724)) = (@all (A -> _90724)).
Proof. exact (eq_refl (@all (A -> _90724))). Qed.
Lemma lem3514606 {_90724 A : Type'} (_37168 : type852 _90724 A) (u : A -> Prop) : (term2526 _90724 A _37168 u) = (term2531 _90724 A _37168 u).
Proof. exact (MK_COMB (@lem3514605 _90724 A) (@lem3514604 _90724 A _37168 u)). Qed.
Lemma lem3514607 {_90724 A : Type'} (_37168 : type852 _90724 A) (u : A -> Prop) : (((_37168 u) = (term2525 _90724 A u)) = (term2526 _90724 A _37168 u)) = (((_37168 u) = (term2442 _90724 A u)) = (term2531 _90724 A _37168 u)).
Proof. exact (MK_COMB (@lem3514600 _90724 A _37168 u) (@lem3514606 _90724 A _37168 u)). Qed.
Lemma lem3514608 {_90724 A : Type'} (_37168 : type852 _90724 A) (u : A -> Prop) : ((_37168 u) = (term2442 _90724 A u)) = (term2531 _90724 A _37168 u).
Proof. exact (EQ_MP (@lem3514607 _90724 A _37168 u) (@lem3514594 _90724 A _37168 u)). Qed.
Lemma lem3514610 {_3571 _3575 : Type'} (s : _3575 -> _3571) (t : _3575 -> _3571) : (s = (term2166 _3571 _3575 t)) = (term2167 _3571 _3575 s t).
Proof. exact (EQ_MP (@lem19792 _3571 _3575 s t) (@lem0)). Qed.
Lemma lem3514611 {A : Type'} (s : type672 A) (t : type672 A) : (s = (term2186 A t)) = (term2187 A s t).
Proof. exact (@lem3514610 (A -> Prop) (A -> Prop) s t). Qed.
Lemma lem3514612 {_90724 A : Type'} (_37168 : type852 _90724 A) (u : A -> Prop) (f : A -> _90724) : ((_37168 u f) = (term2532 _90724 A u f)) = (term2533 _90724 A _37168 u f).
Proof. exact (@lem3514611 A (_37168 u f) (term2445 _90724 A u f)). Qed.
Lemma lem3514613 {_90724 A : Type'} (u : A -> Prop) (f : A -> _90724) (t : A -> Prop) : (term2447 _90724 A u f t) = (term2061 _90724 A u f t).
Proof. exact (eq_refl (term2447 _90724 A u f t)). Qed.
Lemma lem3514614 {_90724 A : Type'} (u : A -> Prop) (f : A -> _90724) : (term2532 _90724 A u f) = (term2445 _90724 A u f).
Proof. exact (fun_ext (fun t : A -> Prop => @lem3514613 _90724 A u f t)). Qed.
Lemma lem3514615 {_90724 A : Type'} (_37168 : type852 _90724 A) (u : A -> Prop) (f : A -> _90724) : (term2446 _90724 A _37168 u f) = (term2446 _90724 A _37168 u f).
Proof. exact (eq_refl (term2446 _90724 A _37168 u f)). Qed.
Lemma lem3514616 {_90724 A : Type'} (_37168 : type852 _90724 A) (u : A -> Prop) (f : A -> _90724) : ((_37168 u f) = (term2532 _90724 A u f)) = ((_37168 u f) = (term2445 _90724 A u f)).
Proof. exact (MK_COMB (@lem3514615 _90724 A _37168 u f) (@lem3514614 _90724 A u f)). Qed.
Lemma lem3514617 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem3514618 {_90724 A : Type'} (_37168 : type852 _90724 A) (u : A -> Prop) (f : A -> _90724) : (term2534 _90724 A _37168 u f) = (term2535 _90724 A _37168 u f).
Proof. exact (MK_COMB (@lem3514617) (@lem3514616 _90724 A _37168 u f)). Qed.
Lemma lem3514619 {_90724 A : Type'} (u : A -> Prop) (f : A -> _90724) (t : A -> Prop) : (term2447 _90724 A u f t) = (term2061 _90724 A u f t).
Proof. exact (eq_refl (term2447 _90724 A u f t)). Qed.
Lemma lem3514620 {_90724 A : Type'} (_37168 : type852 _90724 A) (u : A -> Prop) (f : A -> _90724) (t : A -> Prop) : (term2448 _90724 A _37168 u f t) = (term2448 _90724 A _37168 u f t).
Proof. exact (eq_refl (term2448 _90724 A _37168 u f t)). Qed.
Lemma lem3514621 {_90724 A : Type'} (_37168 : type852 _90724 A) (u : A -> Prop) (f : A -> _90724) (t : A -> Prop) : ((_37168 u f t) = (term2447 _90724 A u f t)) = ((_37168 u f t) = (term2061 _90724 A u f t)).
Proof. exact (MK_COMB (@lem3514620 _90724 A _37168 u f t) (@lem3514619 _90724 A u f t)). Qed.
Lemma lem3514622 {_90724 A : Type'} (_37168 : type852 _90724 A) (u : A -> Prop) (f : A -> _90724) : (term2536 _90724 A _37168 u f) = (term2537 _90724 A _37168 u f).
Proof. exact (fun_ext (fun t : A -> Prop => @lem3514621 _90724 A _37168 u f t)). Qed.
Lemma lem3514623 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem3514624 {_90724 A : Type'} (_37168 : type852 _90724 A) (u : A -> Prop) (f : A -> _90724) : (term2533 _90724 A _37168 u f) = (term2538 _90724 A _37168 u f).
Proof. exact (MK_COMB (@lem3514623 A) (@lem3514622 _90724 A _37168 u f)). Qed.
Lemma lem3514625 {_90724 A : Type'} (_37168 : type852 _90724 A) (u : A -> Prop) (f : A -> _90724) : (((_37168 u f) = (term2532 _90724 A u f)) = (term2533 _90724 A _37168 u f)) = (((_37168 u f) = (term2445 _90724 A u f)) = (term2538 _90724 A _37168 u f)).
Proof. exact (MK_COMB (@lem3514618 _90724 A _37168 u f) (@lem3514624 _90724 A _37168 u f)). Qed.
Lemma lem3514626 {_90724 A : Type'} (_37168 : type852 _90724 A) (u : A -> Prop) (f : A -> _90724) : ((_37168 u f) = (term2445 _90724 A u f)) = (term2538 _90724 A _37168 u f).
Proof. exact (EQ_MP (@lem3514625 _90724 A _37168 u f) (@lem3514612 _90724 A _37168 u f)). Qed.
Lemma lem3514628 {_3571 _3575 : Type'} (s : _3575 -> _3571) (t : _3575 -> _3571) : (s = (term2166 _3571 _3575 t)) = (term2167 _3571 _3575 s t).
Proof. exact (EQ_MP (@lem19792 _3571 _3575 s t) (@lem0)). Qed.
Lemma lem3514629 {A : Type'} (s : A -> Prop) (t : A -> Prop) : (s = (term1665 A t)) = (term2195 A s t).
Proof. exact (@lem3514628 Prop A s t). Qed.
Lemma lem3514630 {_90724 A : Type'} (_37168 : type852 _90724 A) (u : A -> Prop) (f : A -> _90724) (t : A -> Prop) : ((_37168 u f t) = (term2539 _90724 A u f t)) = (term2540 _90724 A _37168 u f t).
Proof. exact (@lem3514629 A (_37168 u f t) (term2061 _90724 A u f t)). Qed.
Lemma lem3514631 {_90724 A : Type'} (GEN_PVAR_84 : A) (u : A -> Prop) (f : A -> _90724) (t : A -> Prop) : (term2541 _90724 A u f t GEN_PVAR_84) = (term2060 _90724 A GEN_PVAR_84 u f t).
Proof. exact (eq_refl (term2541 _90724 A u f t GEN_PVAR_84)). Qed.
Lemma lem3514632 {_90724 A : Type'} (u : A -> Prop) (f : A -> _90724) (t : A -> Prop) : (term2539 _90724 A u f t) = (term2061 _90724 A u f t).
Proof. exact (fun_ext (fun GEN_PVAR_84 : A => @lem3514631 _90724 A GEN_PVAR_84 u f t)). Qed.
Lemma lem3514633 {_90724 A : Type'} (_37168 : type852 _90724 A) (u : A -> Prop) (f : A -> _90724) (t : A -> Prop) : (term2448 _90724 A _37168 u f t) = (term2448 _90724 A _37168 u f t).
Proof. exact (eq_refl (term2448 _90724 A _37168 u f t)). Qed.
Lemma lem3514634 {_90724 A : Type'} (_37168 : type852 _90724 A) (u : A -> Prop) (f : A -> _90724) (t : A -> Prop) : ((_37168 u f t) = (term2539 _90724 A u f t)) = ((_37168 u f t) = (term2061 _90724 A u f t)).
Proof. exact (MK_COMB (@lem3514633 _90724 A _37168 u f t) (@lem3514632 _90724 A u f t)). Qed.
Lemma lem3514635 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem3514636 {_90724 A : Type'} (_37168 : type852 _90724 A) (u : A -> Prop) (f : A -> _90724) (t : A -> Prop) : (term2542 _90724 A _37168 u f t) = (term2543 _90724 A _37168 u f t).
Proof. exact (MK_COMB (@lem3514635) (@lem3514634 _90724 A _37168 u f t)). Qed.
Lemma lem3514637 {_90724 A : Type'} (GEN_PVAR_84 : A) (u : A -> Prop) (f : A -> _90724) (t : A -> Prop) : (term2541 _90724 A u f t GEN_PVAR_84) = (term2060 _90724 A GEN_PVAR_84 u f t).
Proof. exact (eq_refl (term2541 _90724 A u f t GEN_PVAR_84)). Qed.
Lemma lem3514638 {_90724 A : Type'} (_37168 : type852 _90724 A) (u : A -> Prop) (f : A -> _90724) (t : A -> Prop) (GEN_PVAR_84 : A) : (term2544 _90724 A _37168 u f t GEN_PVAR_84) = (term2544 _90724 A _37168 u f t GEN_PVAR_84).
Proof. exact (eq_refl (term2544 _90724 A _37168 u f t GEN_PVAR_84)). Qed.
Lemma lem3514639 {_90724 A : Type'} (_37168 : type852 _90724 A) (GEN_PVAR_84 : A) (u : A -> Prop) (f : A -> _90724) (t : A -> Prop) : ((_37168 u f t GEN_PVAR_84) = (term2541 _90724 A u f t GEN_PVAR_84)) = ((_37168 u f t GEN_PVAR_84) = (term2060 _90724 A GEN_PVAR_84 u f t)).
Proof. exact (MK_COMB (@lem3514638 _90724 A _37168 u f t GEN_PVAR_84) (@lem3514637 _90724 A GEN_PVAR_84 u f t)). Qed.
Lemma lem3514640 {_90724 A : Type'} (_37168 : type852 _90724 A) (u : A -> Prop) (f : A -> _90724) (t : A -> Prop) : (term2545 _90724 A _37168 u f t) = (term2546 _90724 A _37168 u f t).
Proof. exact (fun_ext (fun GEN_PVAR_84 : A => @lem3514639 _90724 A _37168 GEN_PVAR_84 u f t)). Qed.
Lemma lem3514641 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem3514642 {_90724 A : Type'} (_37168 : type852 _90724 A) (u : A -> Prop) (f : A -> _90724) (t : A -> Prop) : (term2540 _90724 A _37168 u f t) = (term2547 _90724 A _37168 u f t).
Proof. exact (MK_COMB (@lem3514641 A) (@lem3514640 _90724 A _37168 u f t)). Qed.
Lemma lem3514643 {_90724 A : Type'} (_37168 : type852 _90724 A) (u : A -> Prop) (f : A -> _90724) (t : A -> Prop) : (((_37168 u f t) = (term2539 _90724 A u f t)) = (term2540 _90724 A _37168 u f t)) = (((_37168 u f t) = (term2061 _90724 A u f t)) = (term2547 _90724 A _37168 u f t)).
Proof. exact (MK_COMB (@lem3514636 _90724 A _37168 u f t) (@lem3514642 _90724 A _37168 u f t)). Qed.
Lemma lem3514644 {_90724 A : Type'} (_37168 : type852 _90724 A) (u : A -> Prop) (f : A -> _90724) (t : A -> Prop) : ((_37168 u f t) = (term2061 _90724 A u f t)) = (term2547 _90724 A _37168 u f t).
Proof. exact (EQ_MP (@lem3514643 _90724 A _37168 u f t) (@lem3514630 _90724 A _37168 u f t)). Qed.
Lemma lem3514645 {_90724 A : Type'} (_37168 : type852 _90724 A) (GEN_PVAR_84 : A) (u : A -> Prop) (f : A -> _90724) (t : A -> Prop) : ((_37168 u f t GEN_PVAR_84) = (term2060 _90724 A GEN_PVAR_84 u f t)) = ((_37168 u f t GEN_PVAR_84) = (term2060 _90724 A GEN_PVAR_84 u f t)).
Proof. exact (eq_refl ((_37168 u f t GEN_PVAR_84) = (term2060 _90724 A GEN_PVAR_84 u f t))). Qed.
Lemma lem3514646 {_90724 A : Type'} (_37168 : type852 _90724 A) (u : A -> Prop) (f : A -> _90724) (t : A -> Prop) : (term2546 _90724 A _37168 u f t) = (term2546 _90724 A _37168 u f t).
Proof. exact (fun_ext (fun GEN_PVAR_84 : A => @lem3514645 _90724 A _37168 GEN_PVAR_84 u f t)). Qed.
Lemma lem3514647 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem3514648 {_90724 A : Type'} (_37168 : type852 _90724 A) (u : A -> Prop) (f : A -> _90724) (t : A -> Prop) : (term2547 _90724 A _37168 u f t) = (term2547 _90724 A _37168 u f t).
Proof. exact (MK_COMB (@lem3514647 A) (@lem3514646 _90724 A _37168 u f t)). Qed.
Lemma lem3514649 {_90724 A : Type'} (_37168 : type852 _90724 A) (u : A -> Prop) (f : A -> _90724) (t : A -> Prop) : ((_37168 u f t) = (term2061 _90724 A u f t)) = (term2547 _90724 A _37168 u f t).
Proof. exact (TRANS (@lem3514644 _90724 A _37168 u f t) (@lem3514648 _90724 A _37168 u f t)). Qed.
Lemma lem3514650 {_90724 A : Type'} (_37168 : type852 _90724 A) (u : A -> Prop) (f : A -> _90724) : (term2537 _90724 A _37168 u f) = (term2548 _90724 A _37168 u f).
Proof. exact (fun_ext (fun t : A -> Prop => @lem3514649 _90724 A _37168 u f t)). Qed.
Lemma lem3514651 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem3514652 {_90724 A : Type'} (_37168 : type852 _90724 A) (u : A -> Prop) (f : A -> _90724) : (term2538 _90724 A _37168 u f) = (term2549 _90724 A _37168 u f).
Proof. exact (MK_COMB (@lem3514651 A) (@lem3514650 _90724 A _37168 u f)). Qed.
Lemma lem3514653 {_90724 A : Type'} (_37168 : type852 _90724 A) (u : A -> Prop) (f : A -> _90724) : ((_37168 u f) = (term2445 _90724 A u f)) = (term2549 _90724 A _37168 u f).
Proof. exact (TRANS (@lem3514626 _90724 A _37168 u f) (@lem3514652 _90724 A _37168 u f)). Qed.
Lemma lem3514654 {_90724 A : Type'} (_37168 : type852 _90724 A) (u : A -> Prop) : (term2530 _90724 A _37168 u) = (term2550 _90724 A _37168 u).
Proof. exact (fun_ext (fun f : A -> _90724 => @lem3514653 _90724 A _37168 u f)). Qed.
Lemma lem3514655 {_90724 A : Type'} : (@all (A -> _90724)) = (@all (A -> _90724)).
Proof. exact (eq_refl (@all (A -> _90724))). Qed.
Lemma lem3514656 {_90724 A : Type'} (_37168 : type852 _90724 A) (u : A -> Prop) : (term2531 _90724 A _37168 u) = (term2551 _90724 A _37168 u).
Proof. exact (MK_COMB (@lem3514655 _90724 A) (@lem3514654 _90724 A _37168 u)). Qed.
Lemma lem3514657 {_90724 A : Type'} (_37168 : type852 _90724 A) (u : A -> Prop) : ((_37168 u) = (term2442 _90724 A u)) = (term2551 _90724 A _37168 u).
Proof. exact (TRANS (@lem3514608 _90724 A _37168 u) (@lem3514656 _90724 A _37168 u)). Qed.
Lemma lem3514658 {_90724 A : Type'} (_37168 : type852 _90724 A) : (term2521 _90724 A _37168) = (term2552 _90724 A _37168).
Proof. exact (fun_ext (fun u : A -> Prop => @lem3514657 _90724 A _37168 u)). Qed.
Lemma lem3514659 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem3514660 {_90724 A : Type'} (_37168 : type852 _90724 A) : (term2522 _90724 A _37168) = (term2553 _90724 A _37168).
Proof. exact (MK_COMB (@lem3514659 A) (@lem3514658 _90724 A _37168)). Qed.
Lemma lem3514661 {_90724 A : Type'} (_37168 : type852 _90724 A) : (_37168 = (term2440 _90724 A)) = (term2553 _90724 A _37168).
Proof. exact (TRANS (@lem3514590 _90724 A _37168) (@lem3514660 _90724 A _37168)). Qed.
Lemma lem3514662 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem3514663 {_90724 A : Type'} (_37168 : type852 _90724 A) : (term2500 _90724 A _37168) = (term2554 _90724 A _37168).
Proof. exact (MK_COMB (@lem3514662) (@lem3514661 _90724 A _37168)). Qed.
Lemma lem3514664 {_90715 _90724 A B : Type'} (_37168 : type852 _90724 A) : (term2492 _90715 _90724 A B _37168) = (term2492 _90715 _90724 A B _37168).
Proof. exact (eq_refl (term2492 _90715 _90724 A B _37168)). Qed.
Lemma lem3514665 {_90715 _90724 A B : Type'} (_37168 : type852 _90724 A) : (term2508 _90715 _90724 A B _37168) = (term2555 _90715 _90724 A B _37168).
Proof. exact (MK_COMB (@lem3514663 _90724 A _37168) (@lem3514664 _90715 _90724 A B _37168)). Qed.
Lemma lem3514666 {_90715 _90724 A B : Type'} : (term2510 _90715 _90724 A B) = (term2556 _90715 _90724 A B).
Proof. exact (fun_ext (fun _37168 : type852 _90724 A => @lem3514665 _90715 _90724 A B _37168)). Qed.
Lemma lem3514667 {_90724 A : Type'} : (@all ((A -> Prop) -> (A -> _90724) -> (A -> Prop) -> A -> Prop)) = (@all ((A -> Prop) -> (A -> _90724) -> (A -> Prop) -> A -> Prop)).
Proof. exact (eq_refl (@all ((A -> Prop) -> (A -> _90724) -> (A -> Prop) -> A -> Prop))). Qed.
Lemma lem3514668 {_90715 _90724 A B : Type'} : (term2512 _90715 _90724 A B) = (term2557 _90715 _90724 A B).
Proof. exact (MK_COMB (@lem3514667 _90724 A) (@lem3514666 _90715 _90724 A B)). Qed.
Lemma lem3514669 {_90715 _90724 A B : Type'} : (term2499 _90715 _90724 A B) = (term2499 _90715 _90724 A B).
Proof. exact (eq_refl (term2499 _90715 _90724 A B)). Qed.
Lemma lem3514670 {_90715 _90724 A B : Type'} : ((term2439 _90715 _90724 A B) = (term2512 _90715 _90724 A B)) = ((term2439 _90715 _90724 A B) = (term2557 _90715 _90724 A B)).
Proof. exact (MK_COMB (@lem3514669 _90715 _90724 A B) (@lem3514668 _90715 _90724 A B)). Qed.
Lemma lem3514671 {_90715 _90724 A B : Type'} : (term2439 _90715 _90724 A B) = (term2557 _90715 _90724 A B).
Proof. exact (EQ_MP (@lem3514670 _90715 _90724 A B) (@lem3514572 _90715 _90724 A B)). Qed.
Lemma lem3514672 {_90724 B : Type'} (_37169 : type852 _90724 B) (h1 : _37169 = (term2440 _90724 B)) : _37169 = (term2440 _90724 B).
Proof. exact (h1). Qed.
Lemma lem3514673 {B : Type'} (u : B -> Prop) : u = u.
Proof. exact (eq_refl u). Qed.
Lemma lem3514674 {_90724 B : Type'} (u : B -> Prop) (_37169 : type852 _90724 B) (h1 : _37169 = (term2440 _90724 B)) : (_37169 u) = (term2441 _90724 B u).
Proof. exact (MK_COMB (@lem3514672 _90724 B _37169 h1) (@lem3514673 B u)). Qed.
Lemma lem3514675 {_90724 B : Type'} (u : B -> Prop) : (term2441 _90724 B u) = (term2442 _90724 B u).
Proof. exact (eq_refl (term2441 _90724 B u)). Qed.
Lemma lem3514676 {_90724 B : Type'} (_37169 : type852 _90724 B) (u : B -> Prop) : (term2443 _90724 B _37169 u) = (term2443 _90724 B _37169 u).
Proof. exact (eq_refl (term2443 _90724 B _37169 u)). Qed.
Lemma lem3514677 {_90724 B : Type'} (_37169 : type852 _90724 B) (u : B -> Prop) : ((_37169 u) = (term2441 _90724 B u)) = ((_37169 u) = (term2442 _90724 B u)).
Proof. exact (MK_COMB (@lem3514676 _90724 B _37169 u) (@lem3514675 _90724 B u)). Qed.
Lemma lem3514678 {_90724 B : Type'} (u : B -> Prop) (_37169 : type852 _90724 B) (h1 : _37169 = (term2440 _90724 B)) : (_37169 u) = (term2442 _90724 B u).
Proof. exact (EQ_MP (@lem3514677 _90724 B _37169 u) (@lem3514674 _90724 B u _37169 h1)). Qed.
Lemma lem3514679 {_90724 B : Type'} (f : B -> _90724) : f = f.
Proof. exact (eq_refl f). Qed.
Lemma lem3514680 {_90724 B : Type'} (u : B -> Prop) (f : B -> _90724) (_37169 : type852 _90724 B) (h1 : _37169 = (term2440 _90724 B)) : (_37169 u f) = (term2444 _90724 B u f).
Proof. exact (MK_COMB (@lem3514678 _90724 B u _37169 h1) (@lem3514679 _90724 B f)). Qed.
Lemma lem3514681 {_90724 B : Type'} (u : B -> Prop) (f : B -> _90724) : (term2444 _90724 B u f) = (term2445 _90724 B u f).
Proof. exact (eq_refl (term2444 _90724 B u f)). Qed.
Lemma lem3514682 {_90724 B : Type'} (_37169 : type852 _90724 B) (u : B -> Prop) (f : B -> _90724) : (term2446 _90724 B _37169 u f) = (term2446 _90724 B _37169 u f).
Proof. exact (eq_refl (term2446 _90724 B _37169 u f)). Qed.
Lemma lem3514683 {_90724 B : Type'} (_37169 : type852 _90724 B) (u : B -> Prop) (f : B -> _90724) : ((_37169 u f) = (term2444 _90724 B u f)) = ((_37169 u f) = (term2445 _90724 B u f)).
Proof. exact (MK_COMB (@lem3514682 _90724 B _37169 u f) (@lem3514681 _90724 B u f)). Qed.
Lemma lem3514684 {_90724 B : Type'} (u : B -> Prop) (f : B -> _90724) (_37169 : type852 _90724 B) (h1 : _37169 = (term2440 _90724 B)) : (_37169 u f) = (term2445 _90724 B u f).
Proof. exact (EQ_MP (@lem3514683 _90724 B _37169 u f) (@lem3514680 _90724 B u f _37169 h1)). Qed.
Lemma lem3514685 {B : Type'} (t : B -> Prop) : t = t.
Proof. exact (eq_refl t). Qed.
Lemma lem3514686 {_90724 B : Type'} (u : B -> Prop) (f : B -> _90724) (t : B -> Prop) (_37169 : type852 _90724 B) (h1 : _37169 = (term2440 _90724 B)) : (_37169 u f t) = (term2447 _90724 B u f t).
Proof. exact (MK_COMB (@lem3514684 _90724 B u f _37169 h1) (@lem3514685 B t)). Qed.
Lemma lem3514687 {_90724 B : Type'} (u : B -> Prop) (f : B -> _90724) (t : B -> Prop) : (term2447 _90724 B u f t) = (term2061 _90724 B u f t).
Proof. exact (eq_refl (term2447 _90724 B u f t)). Qed.
Lemma lem3514688 {_90724 B : Type'} (_37169 : type852 _90724 B) (u : B -> Prop) (f : B -> _90724) (t : B -> Prop) : (term2448 _90724 B _37169 u f t) = (term2448 _90724 B _37169 u f t).
Proof. exact (eq_refl (term2448 _90724 B _37169 u f t)). Qed.
Lemma lem3514689 {_90724 B : Type'} (_37169 : type852 _90724 B) (u : B -> Prop) (f : B -> _90724) (t : B -> Prop) : ((_37169 u f t) = (term2447 _90724 B u f t)) = ((_37169 u f t) = (term2061 _90724 B u f t)).
Proof. exact (MK_COMB (@lem3514688 _90724 B _37169 u f t) (@lem3514687 _90724 B u f t)). Qed.
Lemma lem3514690 {_90724 B : Type'} (u : B -> Prop) (f : B -> _90724) (t : B -> Prop) (_37169 : type852 _90724 B) (h1 : _37169 = (term2440 _90724 B)) : (_37169 u f t) = (term2061 _90724 B u f t).
Proof. exact (EQ_MP (@lem3514689 _90724 B _37169 u f t) (@lem3514686 _90724 B u f t _37169 h1)). Qed.
Lemma lem3514710 {A B : Type'} (f : type678 A B) (g : type180 A) : ((term2011 A B f g) = (term2012 A B f g)) = ((term2011 A B f g) = (term2012 A B f g)).
Proof. exact (eq_refl ((term2011 A B f g) = (term2012 A B f g))). Qed.
Lemma lem3514711 {A : Type'} (t : type686 A) : t = t.
Proof. exact (eq_refl t). Qed.
Lemma lem3514739 {A B : Type'} (GEN_PVAR_84 : A -> Prop) (u : type686 A) (f : type678 A B) (t : type686 A) (x : A -> Prop) : (term2013 A B GEN_PVAR_84 u f t x) = (term2013 A B GEN_PVAR_84 u f t x).
Proof. exact (eq_refl (term2013 A B GEN_PVAR_84 u f t x)). Qed.
Lemma lem3514740 {A B : Type'} (GEN_PVAR_84 : A -> Prop) (u : type686 A) (f : type678 A B) (t : type686 A) : (term2014 A B GEN_PVAR_84 u f t) = (term2014 A B GEN_PVAR_84 u f t).
Proof. exact (fun_ext (fun x : A -> Prop => @lem3514739 A B GEN_PVAR_84 u f t x)). Qed.
Lemma lem3514741 {A : Type'} : (@ex (A -> Prop)) = (@ex (A -> Prop)).
Proof. exact (eq_refl (@ex (A -> Prop))). Qed.
Lemma lem3514742 {A B : Type'} (GEN_PVAR_84 : A -> Prop) (u : type686 A) (f : type678 A B) (t : type686 A) : (term2015 A B GEN_PVAR_84 u f t) = (term2015 A B GEN_PVAR_84 u f t).
Proof. exact (MK_COMB (@lem3514741 A) (@lem3514740 A B GEN_PVAR_84 u f t)). Qed.
Lemma lem3514743 {A B : Type'} (u : type686 A) (f : type678 A B) (t : type686 A) : (term2016 A B u f t) = (term2016 A B u f t).
Proof. exact (fun_ext (fun GEN_PVAR_84 : A -> Prop => @lem3514742 A B GEN_PVAR_84 u f t)). Qed.
Lemma lem3514744 {A : Type'} : (@GSPEC (A -> Prop)) = (@GSPEC (A -> Prop)).
Proof. exact (eq_refl (@GSPEC (A -> Prop))). Qed.
Lemma lem3514745 {A B : Type'} (u : type686 A) (f : type678 A B) (t : type686 A) : (term2017 A B u f t) = (term2017 A B u f t).
Proof. exact (MK_COMB (@lem3514744 A) (@lem3514743 A B u f t)). Qed.
Lemma lem3514746 {A : Type'} : (@SUBSET (A -> Prop)) = (@SUBSET (A -> Prop)).
Proof. exact (eq_refl (@SUBSET (A -> Prop))). Qed.
Lemma lem3514747 {A B : Type'} (u : type686 A) (f : type678 A B) (t : type686 A) : (term2018 A B u f t) = (term2018 A B u f t).
Proof. exact (MK_COMB (@lem3514746 A) (@lem3514745 A B u f t)). Qed.
Lemma lem3514748 {A B : Type'} (u : type686 A) (f : type678 A B) (t : type686 A) : (term2019 A B u f t) = (term2019 A B u f t).
Proof. exact (MK_COMB (@lem3514747 A B u f t) (@lem3514711 A t)). Qed.
Lemma lem3514755 {A : Type'} (t : type686 A) (u : type686 A) : (term2020 A t u) = (term2020 A t u).
Proof. exact (eq_refl (term2020 A t u)). Qed.
Lemma lem3514756 {A B : Type'} (u : type686 A) (f : type678 A B) (t : type686 A) : (term2021 A B u f t) = (term2021 A B u f t).
Proof. exact (MK_COMB (@lem3514755 A t u) (@lem3514748 A B u f t)). Qed.
Lemma lem3514763 {A : Type'} (t : type686 A) (g : type180 A) : (term2022 A t g) = (term2022 A t g).
Proof. exact (eq_refl (term2022 A t g)). Qed.
Lemma lem3514764 {A B : Type'} (g : type180 A) (u : type686 A) (f : type678 A B) (t : type686 A) : (term2023 A B g u f t) = (term2023 A B g u f t).
Proof. exact (MK_COMB (@lem3514763 A t g) (@lem3514756 A B u f t)). Qed.
Lemma lem3514765 {A B : Type'} (g : type180 A) (u : type686 A) (f : type678 A B) : (term2024 A B g u f) = (term2024 A B g u f).
Proof. exact (fun_ext (fun t : type686 A => @lem3514764 A B g u f t)). Qed.
Lemma lem3514766 {A : Type'} : (@all ((A -> Prop) -> Prop)) = (@all ((A -> Prop) -> Prop)).
Proof. exact (eq_refl (@all ((A -> Prop) -> Prop))). Qed.
Lemma lem3514767 {A B : Type'} (g : type180 A) (u : type686 A) (f : type678 A B) : (term2025 A B g u f) = (term2025 A B g u f).
Proof. exact (MK_COMB (@lem3514766 A) (@lem3514765 A B g u f)). Qed.
Lemma lem3514776 {A : Type'} (g : type180 A) : (term2026 A g) = (term2026 A g).
Proof. exact (eq_refl (term2026 A g)). Qed.
Lemma lem3514777 {A B : Type'} (g : type180 A) (u : type686 A) (f : type678 A B) : (term2027 A B g u f) = (term2027 A B g u f).
Proof. exact (MK_COMB (@lem3514776 A g) (@lem3514767 A B g u f)). Qed.
Lemma lem3514778 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem3514779 {A B : Type'} (g : type180 A) (u : type686 A) (f : type678 A B) : (term2028 A B g u f) = (term2028 A B g u f).
Proof. exact (MK_COMB (@lem3514778) (@lem3514777 A B g u f)). Qed.
Lemma lem3514780 {A B : Type'} (u : type686 A) (f : type678 A B) (g : type180 A) : (term2029 A B u f g) = (term2029 A B u f g).
Proof. exact (MK_COMB (@lem3514779 A B g u f) (@lem3514710 A B f g)). Qed.
Lemma lem3514781 {A B : Type'} (u : type686 A) (f : type678 A B) : (term2030 A B u f) = (term2030 A B u f).
Proof. exact (fun_ext (fun g : type180 A => @lem3514780 A B u f g)). Qed.
Lemma lem3514782 {A : Type'} : (@all (((A -> Prop) -> Prop) -> Prop)) = (@all (((A -> Prop) -> Prop) -> Prop)).
Proof. exact (eq_refl (@all (((A -> Prop) -> Prop) -> Prop))). Qed.
Lemma lem3514783 {A B : Type'} (u : type686 A) (f : type678 A B) : (term2031 A B u f) = (term2031 A B u f).
Proof. exact (MK_COMB (@lem3514782 A) (@lem3514781 A B u f)). Qed.
Lemma lem3514784 {A B : Type'} (u : type686 A) : (term2032 A B u) = (term2032 A B u).
Proof. exact (fun_ext (fun f : type678 A B => @lem3514783 A B u f)). Qed.
Lemma lem3514785 {A B : Type'} : (@all ((A -> Prop) -> B -> Prop)) = (@all ((A -> Prop) -> B -> Prop)).
Proof. exact (eq_refl (@all ((A -> Prop) -> B -> Prop))). Qed.
Lemma lem3514786 {A B : Type'} (u : type686 A) : (term2033 A B u) = (term2033 A B u).
Proof. exact (MK_COMB (@lem3514785 A B) (@lem3514784 A B u)). Qed.
Lemma lem3514787 {A B : Type'} : (term2034 A B) = (term2034 A B).
Proof. exact (fun_ext (fun u : type686 A => @lem3514786 A B u)). Qed.
Lemma lem3514788 {A : Type'} : (@all ((A -> Prop) -> Prop)) = (@all ((A -> Prop) -> Prop)).
Proof. exact (eq_refl (@all ((A -> Prop) -> Prop))). Qed.
Lemma lem3514789 {A B : Type'} : (term1961 A B) = (term1961 A B).
Proof. exact (MK_COMB (@lem3514788 A) (@lem3514787 A B)). Qed.
Lemma lem3514790 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem3514791 {A B : Type'} : (term1967 A B) = (term1967 A B).
Proof. exact (MK_COMB (@lem3514790) (@lem3514789 A B)). Qed.
Lemma lem3514810 {_90724 A : Type'} (f : type862 _90724 A) (g : type180 A) : ((term2035 _90724 A f g) = (term2036 _90724 A f g)) = ((term2035 _90724 A f g) = (term2036 _90724 A f g)).
Proof. exact (eq_refl ((term2035 _90724 A f g) = (term2036 _90724 A f g))). Qed.
Lemma lem3514811 {A : Type'} (t : type686 A) : t = t.
Proof. exact (eq_refl t). Qed.
Lemma lem3514839 {_90724 A : Type'} (GEN_PVAR_84 : A -> Prop) (u : type686 A) (f : type862 _90724 A) (t : type686 A) (x : A -> Prop) : (term2037 _90724 A GEN_PVAR_84 u f t x) = (term2037 _90724 A GEN_PVAR_84 u f t x).
Proof. exact (eq_refl (term2037 _90724 A GEN_PVAR_84 u f t x)). Qed.
Lemma lem3514840 {_90724 A : Type'} (GEN_PVAR_84 : A -> Prop) (u : type686 A) (f : type862 _90724 A) (t : type686 A) : (term2038 _90724 A GEN_PVAR_84 u f t) = (term2038 _90724 A GEN_PVAR_84 u f t).
Proof. exact (fun_ext (fun x : A -> Prop => @lem3514839 _90724 A GEN_PVAR_84 u f t x)). Qed.
Lemma lem3514841 {A : Type'} : (@ex (A -> Prop)) = (@ex (A -> Prop)).
Proof. exact (eq_refl (@ex (A -> Prop))). Qed.
Lemma lem3514842 {_90724 A : Type'} (GEN_PVAR_84 : A -> Prop) (u : type686 A) (f : type862 _90724 A) (t : type686 A) : (term2039 _90724 A GEN_PVAR_84 u f t) = (term2039 _90724 A GEN_PVAR_84 u f t).
Proof. exact (MK_COMB (@lem3514841 A) (@lem3514840 _90724 A GEN_PVAR_84 u f t)). Qed.
Lemma lem3514843 {_90724 A : Type'} (u : type686 A) (f : type862 _90724 A) (t : type686 A) : (term2040 _90724 A u f t) = (term2040 _90724 A u f t).
Proof. exact (fun_ext (fun GEN_PVAR_84 : A -> Prop => @lem3514842 _90724 A GEN_PVAR_84 u f t)). Qed.
Lemma lem3514844 {A : Type'} : (@GSPEC (A -> Prop)) = (@GSPEC (A -> Prop)).
Proof. exact (eq_refl (@GSPEC (A -> Prop))). Qed.
Lemma lem3514845 {_90724 A : Type'} (u : type686 A) (f : type862 _90724 A) (t : type686 A) : (term2041 _90724 A u f t) = (term2041 _90724 A u f t).
Proof. exact (MK_COMB (@lem3514844 A) (@lem3514843 _90724 A u f t)). Qed.
Lemma lem3514846 {A : Type'} : (@SUBSET (A -> Prop)) = (@SUBSET (A -> Prop)).
Proof. exact (eq_refl (@SUBSET (A -> Prop))). Qed.
Lemma lem3514847 {_90724 A : Type'} (u : type686 A) (f : type862 _90724 A) (t : type686 A) : (term2042 _90724 A u f t) = (term2042 _90724 A u f t).
Proof. exact (MK_COMB (@lem3514846 A) (@lem3514845 _90724 A u f t)). Qed.
Lemma lem3514848 {_90724 A : Type'} (u : type686 A) (f : type862 _90724 A) (t : type686 A) : (term2043 _90724 A u f t) = (term2043 _90724 A u f t).
Proof. exact (MK_COMB (@lem3514847 _90724 A u f t) (@lem3514811 A t)). Qed.
Lemma lem3514855 {A : Type'} (t : type686 A) (u : type686 A) : (term2020 A t u) = (term2020 A t u).
Proof. exact (eq_refl (term2020 A t u)). Qed.
Lemma lem3514856 {_90724 A : Type'} (u : type686 A) (f : type862 _90724 A) (t : type686 A) : (term2044 _90724 A u f t) = (term2044 _90724 A u f t).
Proof. exact (MK_COMB (@lem3514855 A t u) (@lem3514848 _90724 A u f t)). Qed.
Lemma lem3514863 {A : Type'} (t : type686 A) (g : type180 A) : (term2022 A t g) = (term2022 A t g).
Proof. exact (eq_refl (term2022 A t g)). Qed.
Lemma lem3514864 {_90724 A : Type'} (g : type180 A) (u : type686 A) (f : type862 _90724 A) (t : type686 A) : (term2045 _90724 A g u f t) = (term2045 _90724 A g u f t).
Proof. exact (MK_COMB (@lem3514863 A t g) (@lem3514856 _90724 A u f t)). Qed.
Lemma lem3514865 {_90724 A : Type'} (g : type180 A) (u : type686 A) (f : type862 _90724 A) : (term2046 _90724 A g u f) = (term2046 _90724 A g u f).
Proof. exact (fun_ext (fun t : type686 A => @lem3514864 _90724 A g u f t)). Qed.
Lemma lem3514866 {A : Type'} : (@all ((A -> Prop) -> Prop)) = (@all ((A -> Prop) -> Prop)).
Proof. exact (eq_refl (@all ((A -> Prop) -> Prop))). Qed.
Lemma lem3514867 {_90724 A : Type'} (g : type180 A) (u : type686 A) (f : type862 _90724 A) : (term2047 _90724 A g u f) = (term2047 _90724 A g u f).
Proof. exact (MK_COMB (@lem3514866 A) (@lem3514865 _90724 A g u f)). Qed.
Lemma lem3514876 {A : Type'} (g : type180 A) : (term2026 A g) = (term2026 A g).
Proof. exact (eq_refl (term2026 A g)). Qed.
Lemma lem3514877 {_90724 A : Type'} (g : type180 A) (u : type686 A) (f : type862 _90724 A) : (term2048 _90724 A g u f) = (term2048 _90724 A g u f).
Proof. exact (MK_COMB (@lem3514876 A g) (@lem3514867 _90724 A g u f)). Qed.
Lemma lem3514878 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem3514879 {_90724 A : Type'} (g : type180 A) (u : type686 A) (f : type862 _90724 A) : (term2049 _90724 A g u f) = (term2049 _90724 A g u f).
Proof. exact (MK_COMB (@lem3514878) (@lem3514877 _90724 A g u f)). Qed.
Lemma lem3514880 {_90724 A : Type'} (u : type686 A) (f : type862 _90724 A) (g : type180 A) : (term2050 _90724 A u f g) = (term2050 _90724 A u f g).
Proof. exact (MK_COMB (@lem3514879 _90724 A g u f) (@lem3514810 _90724 A f g)). Qed.
Lemma lem3514881 {_90724 A : Type'} (u : type686 A) (f : type862 _90724 A) : (term2051 _90724 A u f) = (term2051 _90724 A u f).
Proof. exact (fun_ext (fun g : type180 A => @lem3514880 _90724 A u f g)). Qed.
Lemma lem3514882 {A : Type'} : (@all (((A -> Prop) -> Prop) -> Prop)) = (@all (((A -> Prop) -> Prop) -> Prop)).
Proof. exact (eq_refl (@all (((A -> Prop) -> Prop) -> Prop))). Qed.
Lemma lem3514883 {_90724 A : Type'} (u : type686 A) (f : type862 _90724 A) : (term2052 _90724 A u f) = (term2052 _90724 A u f).
Proof. exact (MK_COMB (@lem3514882 A) (@lem3514881 _90724 A u f)). Qed.
Lemma lem3514884 {_90724 A : Type'} (u : type686 A) : (term2053 _90724 A u) = (term2053 _90724 A u).
Proof. exact (fun_ext (fun f : type862 _90724 A => @lem3514883 _90724 A u f)). Qed.
Lemma lem3514885 {_90724 A : Type'} : (@all ((A -> Prop) -> _90724)) = (@all ((A -> Prop) -> _90724)).
Proof. exact (eq_refl (@all ((A -> Prop) -> _90724))). Qed.
Lemma lem3514886 {_90724 A : Type'} (u : type686 A) : (term2054 _90724 A u) = (term2054 _90724 A u).
Proof. exact (MK_COMB (@lem3514885 _90724 A) (@lem3514884 _90724 A u)). Qed.
Lemma lem3514887 {_90724 A : Type'} : (term2055 _90724 A) = (term2055 _90724 A).
Proof. exact (fun_ext (fun u : type686 A => @lem3514886 _90724 A u)). Qed.
Lemma lem3514888 {A : Type'} : (@all ((A -> Prop) -> Prop)) = (@all ((A -> Prop) -> Prop)).
Proof. exact (eq_refl (@all ((A -> Prop) -> Prop))). Qed.
Lemma lem3514889 {_90724 A : Type'} : (term1959 _90724 A) = (term1959 _90724 A).
Proof. exact (MK_COMB (@lem3514888 A) (@lem3514887 _90724 A)). Qed.
Lemma lem3514890 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem3514891 {_90724 A : Type'} : (term1968 _90724 A) = (term1968 _90724 A).
Proof. exact (MK_COMB (@lem3514890) (@lem3514889 _90724 A)). Qed.
Lemma lem3514892 {_90724 A B : Type'} : (term1970 _90724 A B) = (term1970 _90724 A B).
Proof. exact (MK_COMB (@lem3514891 _90724 A) (@lem3514791 A B)). Qed.
Lemma lem3514911 {_90724 B : Type'} (f : B -> _90724) (g : type686 B) : ((term2056 _90724 B f g) = (term2057 _90724 B f g)) = ((term2056 _90724 B f g) = (term2057 _90724 B f g)).
Proof. exact (eq_refl ((term2056 _90724 B f g) = (term2057 _90724 B f g))). Qed.
Lemma lem3514912 {B : Type'} (t : B -> Prop) : t = t.
Proof. exact (eq_refl t). Qed.
Lemma lem3514914 {_90724 B : Type'} (u : B -> Prop) (f : B -> _90724) (t : B -> Prop) (_37169 : type852 _90724 B) (h1 : _37169 = (term2440 _90724 B)) : (term2061 _90724 B u f t) = (_37169 u f t).
Proof. exact (SYM (@lem3514690 _90724 B u f t _37169 h1)). Qed.
Lemma lem3514915 {_90724 B : Type'} (u : B -> Prop) (f : B -> _90724) (t : B -> Prop) (_37169 : type852 _90724 B) (h1 : _37169 = (term2440 _90724 B)) : (term2061 _90724 B u f t) = (_37169 u f t).
Proof. exact (@lem3514914 _90724 B u f t _37169 h1). Qed.
Lemma lem3514916 {B : Type'} : (@GSPEC B) = (@GSPEC B).
Proof. exact (eq_refl (@GSPEC B)). Qed.
Lemma lem3514917 {_90724 B : Type'} (u : B -> Prop) (f : B -> _90724) (t : B -> Prop) (_37169 : type852 _90724 B) (h1 : _37169 = (term2440 _90724 B)) : (term2062 _90724 B u f t) = (term2449 _90724 B _37169 u f t).
Proof. exact (MK_COMB (@lem3514916 B) (@lem3514915 _90724 B u f t _37169 h1)). Qed.
Lemma lem3514918 {B : Type'} : (@SUBSET B) = (@SUBSET B).
Proof. exact (eq_refl (@SUBSET B)). Qed.
Lemma lem3514919 {_90724 B : Type'} (u : B -> Prop) (f : B -> _90724) (t : B -> Prop) (_37169 : type852 _90724 B) (h1 : _37169 = (term2440 _90724 B)) : (term2063 _90724 B u f t) = (term2450 _90724 B _37169 u f t).
Proof. exact (MK_COMB (@lem3514918 B) (@lem3514917 _90724 B u f t _37169 h1)). Qed.
Lemma lem3514920 {_90724 B : Type'} (u : B -> Prop) (f : B -> _90724) (t : B -> Prop) (_37169 : type852 _90724 B) (h1 : _37169 = (term2440 _90724 B)) : (term2064 _90724 B u f t) = (term2451 _90724 B _37169 u f t).
Proof. exact (MK_COMB (@lem3514919 _90724 B u f t _37169 h1) (@lem3514912 B t)). Qed.
Lemma lem3514927 {B : Type'} (t : B -> Prop) (u : B -> Prop) : (term75 B t u) = (term75 B t u).
Proof. exact (eq_refl (term75 B t u)). Qed.
Lemma lem3514928 {_90724 B : Type'} (u : B -> Prop) (f : B -> _90724) (t : B -> Prop) (_37169 : type852 _90724 B) (h1 : _37169 = (term2440 _90724 B)) : (term2065 _90724 B u f t) = (term2452 _90724 B _37169 u f t).
Proof. exact (MK_COMB (@lem3514927 B t u) (@lem3514920 _90724 B u f t _37169 h1)). Qed.
Lemma lem3514935 {B : Type'} (t : B -> Prop) (g : type686 B) : (term78 B t g) = (term78 B t g).
Proof. exact (eq_refl (term78 B t g)). Qed.
Lemma lem3514936 {_90724 B : Type'} (g : type686 B) (u : B -> Prop) (f : B -> _90724) (t : B -> Prop) (_37169 : type852 _90724 B) (h1 : _37169 = (term2440 _90724 B)) : (term2066 _90724 B g u f t) = (term2453 _90724 B g _37169 u f t).
Proof. exact (MK_COMB (@lem3514935 B t g) (@lem3514928 _90724 B u f t _37169 h1)). Qed.
Lemma lem3514937 {_90724 B : Type'} (g : type686 B) (u : B -> Prop) (f : B -> _90724) (_37169 : type852 _90724 B) (h1 : _37169 = (term2440 _90724 B)) : (term2067 _90724 B g u f) = (term2454 _90724 B g _37169 u f).
Proof. exact (fun_ext (fun t : B -> Prop => @lem3514936 _90724 B g u f t _37169 h1)). Qed.
Lemma lem3514938 {B : Type'} : (@all (B -> Prop)) = (@all (B -> Prop)).
Proof. exact (eq_refl (@all (B -> Prop))). Qed.
Lemma lem3514939 {_90724 B : Type'} (g : type686 B) (u : B -> Prop) (f : B -> _90724) (_37169 : type852 _90724 B) (h1 : _37169 = (term2440 _90724 B)) : (term2068 _90724 B g u f) = (term2455 _90724 B g _37169 u f).
Proof. exact (MK_COMB (@lem3514938 B) (@lem3514937 _90724 B g u f _37169 h1)). Qed.
Lemma lem3514948 {B : Type'} (g : type686 B) : (term42 B g) = (term42 B g).
Proof. exact (eq_refl (term42 B g)). Qed.
Lemma lem3514949 {_90724 B : Type'} (g : type686 B) (u : B -> Prop) (f : B -> _90724) (_37169 : type852 _90724 B) (h1 : _37169 = (term2440 _90724 B)) : (term2069 _90724 B g u f) = (term2456 _90724 B g _37169 u f).
Proof. exact (MK_COMB (@lem3514948 B g) (@lem3514939 _90724 B g u f _37169 h1)). Qed.
Lemma lem3514950 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem3514951 {_90724 B : Type'} (g : type686 B) (u : B -> Prop) (f : B -> _90724) (_37169 : type852 _90724 B) (h1 : _37169 = (term2440 _90724 B)) : (term2070 _90724 B g u f) = (term2457 _90724 B g _37169 u f).
Proof. exact (MK_COMB (@lem3514950) (@lem3514949 _90724 B g u f _37169 h1)). Qed.
Lemma lem3514952 {_90724 B : Type'} (u : B -> Prop) (f : B -> _90724) (g : type686 B) (_37169 : type852 _90724 B) (h1 : _37169 = (term2440 _90724 B)) : (term2071 _90724 B u f g) = (term2458 _90724 B _37169 u f g).
Proof. exact (MK_COMB (@lem3514951 _90724 B g u f _37169 h1) (@lem3514911 _90724 B f g)). Qed.
Lemma lem3514953 {_90724 B : Type'} (u : B -> Prop) (f : B -> _90724) (_37169 : type852 _90724 B) (h1 : _37169 = (term2440 _90724 B)) : (term2072 _90724 B u f) = (term2459 _90724 B _37169 u f).
Proof. exact (fun_ext (fun g : type686 B => @lem3514952 _90724 B u f g _37169 h1)). Qed.
Lemma lem3514954 {B : Type'} : (@all ((B -> Prop) -> Prop)) = (@all ((B -> Prop) -> Prop)).
Proof. exact (eq_refl (@all ((B -> Prop) -> Prop))). Qed.
Lemma lem3514955 {_90724 B : Type'} (u : B -> Prop) (f : B -> _90724) (_37169 : type852 _90724 B) (h1 : _37169 = (term2440 _90724 B)) : (term2073 _90724 B u f) = (term2460 _90724 B _37169 u f).
Proof. exact (MK_COMB (@lem3514954 B) (@lem3514953 _90724 B u f _37169 h1)). Qed.
Lemma lem3514956 {_90724 B : Type'} (u : B -> Prop) (_37169 : type852 _90724 B) (h1 : _37169 = (term2440 _90724 B)) : (term2074 _90724 B u) = (term2461 _90724 B _37169 u).
Proof. exact (fun_ext (fun f : B -> _90724 => @lem3514955 _90724 B u f _37169 h1)). Qed.
Lemma lem3514957 {_90724 B : Type'} : (@all (B -> _90724)) = (@all (B -> _90724)).
Proof. exact (eq_refl (@all (B -> _90724))). Qed.
Lemma lem3514958 {_90724 B : Type'} (u : B -> Prop) (_37169 : type852 _90724 B) (h1 : _37169 = (term2440 _90724 B)) : (term2075 _90724 B u) = (term2462 _90724 B _37169 u).
Proof. exact (MK_COMB (@lem3514957 _90724 B) (@lem3514956 _90724 B u _37169 h1)). Qed.
Lemma lem3514959 {_90724 B : Type'} (_37169 : type852 _90724 B) (h1 : _37169 = (term2440 _90724 B)) : (term2076 _90724 B) = (term2463 _90724 B _37169).
Proof. exact (fun_ext (fun u : B -> Prop => @lem3514958 _90724 B u _37169 h1)). Qed.
Lemma lem3514960 {B : Type'} : (@all (B -> Prop)) = (@all (B -> Prop)).
Proof. exact (eq_refl (@all (B -> Prop))). Qed.
Lemma lem3514961 {_90724 B : Type'} (_37169 : type852 _90724 B) (h1 : _37169 = (term2440 _90724 B)) : (term1958 _90724 B) = (term2464 _90724 B _37169).
Proof. exact (MK_COMB (@lem3514960 B) (@lem3514959 _90724 B _37169 h1)). Qed.
Lemma lem3514962 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem3514963 {_90724 B : Type'} (_37169 : type852 _90724 B) (h1 : _37169 = (term2440 _90724 B)) : (term1971 _90724 B) = (term2465 _90724 B _37169).
Proof. exact (MK_COMB (@lem3514962) (@lem3514961 _90724 B _37169 h1)). Qed.
Lemma lem3514964 {_90724 A B : Type'} (_37169 : type852 _90724 B) (h1 : _37169 = (term2440 _90724 B)) : (term1973 _90724 A B) = (term2558 _90724 A B _37169).
Proof. exact (MK_COMB (@lem3514963 _90724 B _37169 h1) (@lem3514892 _90724 A B)). Qed.
Lemma lem3514983 {A B : Type'} (f : A -> B) (g : type686 A) : ((term49 A B f g) = (term50 A B f g)) = ((term49 A B f g) = (term50 A B f g)).
Proof. exact (eq_refl ((term49 A B f g) = (term50 A B f g))). Qed.
Lemma lem3515012 {A B : Type'} (g : type686 A) (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) (t : A -> Prop) : (term2081 A B g _37163 u f t) = (term2081 A B g _37163 u f t).
Proof. exact (eq_refl (term2081 A B g _37163 u f t)). Qed.
Lemma lem3515013 {A B : Type'} (g : type686 A) (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) : (term2082 A B g _37163 u f) = (term2082 A B g _37163 u f).
Proof. exact (fun_ext (fun t : A -> Prop => @lem3515012 A B g _37163 u f t)). Qed.
Lemma lem3515014 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem3515015 {A B : Type'} (g : type686 A) (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) : (term2083 A B g _37163 u f) = (term2083 A B g _37163 u f).
Proof. exact (MK_COMB (@lem3515014 A) (@lem3515013 A B g _37163 u f)). Qed.
Lemma lem3515024 {A : Type'} (g : type686 A) : (term42 A g) = (term42 A g).
Proof. exact (eq_refl (term42 A g)). Qed.
Lemma lem3515025 {A B : Type'} (g : type686 A) (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) : (term2084 A B g _37163 u f) = (term2084 A B g _37163 u f).
Proof. exact (MK_COMB (@lem3515024 A g) (@lem3515015 A B g _37163 u f)). Qed.
Lemma lem3515026 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem3515027 {A B : Type'} (g : type686 A) (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) : (term2085 A B g _37163 u f) = (term2085 A B g _37163 u f).
Proof. exact (MK_COMB (@lem3515026) (@lem3515025 A B g _37163 u f)). Qed.
Lemma lem3515028 {A B : Type'} (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) (g : type686 A) : (term2086 A B _37163 u f g) = (term2086 A B _37163 u f g).
Proof. exact (MK_COMB (@lem3515027 A B g _37163 u f) (@lem3514983 A B f g)). Qed.
Lemma lem3515029 {A B : Type'} (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) : (term2088 A B _37163 u f) = (term2088 A B _37163 u f).
Proof. exact (fun_ext (fun g : type686 A => @lem3515028 A B _37163 u f g)). Qed.
Lemma lem3515030 {A : Type'} : (@all ((A -> Prop) -> Prop)) = (@all ((A -> Prop) -> Prop)).
Proof. exact (eq_refl (@all ((A -> Prop) -> Prop))). Qed.
Lemma lem3515031 {A B : Type'} (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) : (term2089 A B _37163 u f) = (term2089 A B _37163 u f).
Proof. exact (MK_COMB (@lem3515030 A) (@lem3515029 A B _37163 u f)). Qed.
Lemma lem3515032 {A B : Type'} (_37163 : type627 A B) (u : A -> Prop) : (term2091 A B _37163 u) = (term2091 A B _37163 u).
Proof. exact (fun_ext (fun f : A -> B => @lem3515031 A B _37163 u f)). Qed.
Lemma lem3515033 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem3515034 {A B : Type'} (_37163 : type627 A B) (u : A -> Prop) : (term2092 A B _37163 u) = (term2092 A B _37163 u).
Proof. exact (MK_COMB (@lem3515033 A B) (@lem3515032 A B _37163 u)). Qed.
Lemma lem3515035 {A B : Type'} (_37163 : type627 A B) : (term2094 A B _37163) = (term2094 A B _37163).
Proof. exact (fun_ext (fun u : A -> Prop => @lem3515034 A B _37163 u)). Qed.
Lemma lem3515036 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem3515037 {A B : Type'} (_37163 : type627 A B) : (term2095 A B _37163) = (term2095 A B _37163).
Proof. exact (MK_COMB (@lem3515036 A) (@lem3515035 A B _37163)). Qed.
Lemma lem3515038 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem3515039 {A B : Type'} (_37163 : type627 A B) : (term2096 A B _37163) = (term2096 A B _37163).
Proof. exact (MK_COMB (@lem3515038) (@lem3515037 A B _37163)). Qed.
Lemma lem3515040 {_90724 A B : Type'} (_37163 : type627 A B) (_37169 : type852 _90724 B) (h1 : _37169 = (term2440 _90724 B)) : (term2097 _90724 A B _37163) = (term2559 _90724 A B _37163 _37169).
Proof. exact (MK_COMB (@lem3515039 A B _37163) (@lem3514964 _90724 A B _37169 h1)). Qed.
Lemma lem3515059 {_90724 A : Type'} (f : A -> _90724) (g : type686 A) : ((term2056 _90724 A f g) = (term2057 _90724 A f g)) = ((term2056 _90724 A f g) = (term2057 _90724 A f g)).
Proof. exact (eq_refl ((term2056 _90724 A f g) = (term2057 _90724 A f g))). Qed.
Lemma lem3515088 {_90724 A : Type'} (g : type686 A) (_37168 : type852 _90724 A) (u : A -> Prop) (f : A -> _90724) (t : A -> Prop) : (term2453 _90724 A g _37168 u f t) = (term2453 _90724 A g _37168 u f t).
Proof. exact (eq_refl (term2453 _90724 A g _37168 u f t)). Qed.
Lemma lem3515089 {_90724 A : Type'} (g : type686 A) (_37168 : type852 _90724 A) (u : A -> Prop) (f : A -> _90724) : (term2454 _90724 A g _37168 u f) = (term2454 _90724 A g _37168 u f).
Proof. exact (fun_ext (fun t : A -> Prop => @lem3515088 _90724 A g _37168 u f t)). Qed.
Lemma lem3515090 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem3515091 {_90724 A : Type'} (g : type686 A) (_37168 : type852 _90724 A) (u : A -> Prop) (f : A -> _90724) : (term2455 _90724 A g _37168 u f) = (term2455 _90724 A g _37168 u f).
Proof. exact (MK_COMB (@lem3515090 A) (@lem3515089 _90724 A g _37168 u f)). Qed.
Lemma lem3515100 {A : Type'} (g : type686 A) : (term42 A g) = (term42 A g).
Proof. exact (eq_refl (term42 A g)). Qed.
Lemma lem3515101 {_90724 A : Type'} (g : type686 A) (_37168 : type852 _90724 A) (u : A -> Prop) (f : A -> _90724) : (term2456 _90724 A g _37168 u f) = (term2456 _90724 A g _37168 u f).
Proof. exact (MK_COMB (@lem3515100 A g) (@lem3515091 _90724 A g _37168 u f)). Qed.
Lemma lem3515102 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem3515103 {_90724 A : Type'} (g : type686 A) (_37168 : type852 _90724 A) (u : A -> Prop) (f : A -> _90724) : (term2457 _90724 A g _37168 u f) = (term2457 _90724 A g _37168 u f).
Proof. exact (MK_COMB (@lem3515102) (@lem3515101 _90724 A g _37168 u f)). Qed.
Lemma lem3515104 {_90724 A : Type'} (_37168 : type852 _90724 A) (u : A -> Prop) (f : A -> _90724) (g : type686 A) : (term2458 _90724 A _37168 u f g) = (term2458 _90724 A _37168 u f g).
Proof. exact (MK_COMB (@lem3515103 _90724 A g _37168 u f) (@lem3515059 _90724 A f g)). Qed.
Lemma lem3515105 {_90724 A : Type'} (_37168 : type852 _90724 A) (u : A -> Prop) (f : A -> _90724) : (term2459 _90724 A _37168 u f) = (term2459 _90724 A _37168 u f).
Proof. exact (fun_ext (fun g : type686 A => @lem3515104 _90724 A _37168 u f g)). Qed.
Lemma lem3515106 {A : Type'} : (@all ((A -> Prop) -> Prop)) = (@all ((A -> Prop) -> Prop)).
Proof. exact (eq_refl (@all ((A -> Prop) -> Prop))). Qed.
Lemma lem3515107 {_90724 A : Type'} (_37168 : type852 _90724 A) (u : A -> Prop) (f : A -> _90724) : (term2460 _90724 A _37168 u f) = (term2460 _90724 A _37168 u f).
Proof. exact (MK_COMB (@lem3515106 A) (@lem3515105 _90724 A _37168 u f)). Qed.
Lemma lem3515108 {_90724 A : Type'} (_37168 : type852 _90724 A) (u : A -> Prop) : (term2461 _90724 A _37168 u) = (term2461 _90724 A _37168 u).
Proof. exact (fun_ext (fun f : A -> _90724 => @lem3515107 _90724 A _37168 u f)). Qed.
Lemma lem3515109 {_90724 A : Type'} : (@all (A -> _90724)) = (@all (A -> _90724)).
Proof. exact (eq_refl (@all (A -> _90724))). Qed.
Lemma lem3515110 {_90724 A : Type'} (_37168 : type852 _90724 A) (u : A -> Prop) : (term2462 _90724 A _37168 u) = (term2462 _90724 A _37168 u).
Proof. exact (MK_COMB (@lem3515109 _90724 A) (@lem3515108 _90724 A _37168 u)). Qed.
Lemma lem3515111 {_90724 A : Type'} (_37168 : type852 _90724 A) : (term2463 _90724 A _37168) = (term2463 _90724 A _37168).
Proof. exact (fun_ext (fun u : A -> Prop => @lem3515110 _90724 A _37168 u)). Qed.
Lemma lem3515112 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem3515113 {_90724 A : Type'} (_37168 : type852 _90724 A) : (term2464 _90724 A _37168) = (term2464 _90724 A _37168).
Proof. exact (MK_COMB (@lem3515112 A) (@lem3515111 _90724 A _37168)). Qed.
Lemma lem3515114 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem3515115 {_90724 A : Type'} (_37168 : type852 _90724 A) : (term2465 _90724 A _37168) = (term2465 _90724 A _37168).
Proof. exact (MK_COMB (@lem3515114) (@lem3515113 _90724 A _37168)). Qed.
Lemma lem3515116 {_90724 A B : Type'} (_37168 : type852 _90724 A) (_37163 : type627 A B) (_37169 : type852 _90724 B) (h1 : _37169 = (term2440 _90724 B)) : (term2466 _90724 A B _37168 _37163) = (term2560 _90724 A B _37168 _37163 _37169).
Proof. exact (MK_COMB (@lem3515115 _90724 A _37168) (@lem3515040 _90724 A B _37163 _37169 h1)). Qed.
Lemma lem3515135 {_90715 A : Type'} (f : type1413 _90715 A) (g : type686 _90715) : ((term2099 _90715 A f g) = (term2100 _90715 A f g)) = ((term2099 _90715 A f g) = (term2100 _90715 A f g)).
Proof. exact (eq_refl ((term2099 _90715 A f g) = (term2100 _90715 A f g))). Qed.
Lemma lem3515164 {_90715 A : Type'} (g : type686 _90715) (_37167 : type616 _90715 A) (u : _90715 -> Prop) (f : type1413 _90715 A) (t : _90715 -> Prop) : (term2339 _90715 A g _37167 u f t) = (term2339 _90715 A g _37167 u f t).
Proof. exact (eq_refl (term2339 _90715 A g _37167 u f t)). Qed.
Lemma lem3515165 {_90715 A : Type'} (g : type686 _90715) (_37167 : type616 _90715 A) (u : _90715 -> Prop) (f : type1413 _90715 A) : (term2340 _90715 A g _37167 u f) = (term2340 _90715 A g _37167 u f).
Proof. exact (fun_ext (fun t : _90715 -> Prop => @lem3515164 _90715 A g _37167 u f t)). Qed.
Lemma lem3515166 {_90715 : Type'} : (@all (_90715 -> Prop)) = (@all (_90715 -> Prop)).
Proof. exact (eq_refl (@all (_90715 -> Prop))). Qed.
Lemma lem3515167 {_90715 A : Type'} (g : type686 _90715) (_37167 : type616 _90715 A) (u : _90715 -> Prop) (f : type1413 _90715 A) : (term2341 _90715 A g _37167 u f) = (term2341 _90715 A g _37167 u f).
Proof. exact (MK_COMB (@lem3515166 _90715) (@lem3515165 _90715 A g _37167 u f)). Qed.
Lemma lem3515176 {_90715 : Type'} (g : type686 _90715) : (term42 _90715 g) = (term42 _90715 g).
Proof. exact (eq_refl (term42 _90715 g)). Qed.
Lemma lem3515177 {_90715 A : Type'} (g : type686 _90715) (_37167 : type616 _90715 A) (u : _90715 -> Prop) (f : type1413 _90715 A) : (term2342 _90715 A g _37167 u f) = (term2342 _90715 A g _37167 u f).
Proof. exact (MK_COMB (@lem3515176 _90715 g) (@lem3515167 _90715 A g _37167 u f)). Qed.
Lemma lem3515178 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem3515179 {_90715 A : Type'} (g : type686 _90715) (_37167 : type616 _90715 A) (u : _90715 -> Prop) (f : type1413 _90715 A) : (term2343 _90715 A g _37167 u f) = (term2343 _90715 A g _37167 u f).
Proof. exact (MK_COMB (@lem3515178) (@lem3515177 _90715 A g _37167 u f)). Qed.
Lemma lem3515180 {_90715 A : Type'} (_37167 : type616 _90715 A) (u : _90715 -> Prop) (f : type1413 _90715 A) (g : type686 _90715) : (term2344 _90715 A _37167 u f g) = (term2344 _90715 A _37167 u f g).
Proof. exact (MK_COMB (@lem3515179 _90715 A g _37167 u f) (@lem3515135 _90715 A f g)). Qed.
Lemma lem3515181 {_90715 A : Type'} (_37167 : type616 _90715 A) (u : _90715 -> Prop) (f : type1413 _90715 A) : (term2345 _90715 A _37167 u f) = (term2345 _90715 A _37167 u f).
Proof. exact (fun_ext (fun g : type686 _90715 => @lem3515180 _90715 A _37167 u f g)). Qed.
Lemma lem3515182 {_90715 : Type'} : (@all ((_90715 -> Prop) -> Prop)) = (@all ((_90715 -> Prop) -> Prop)).
Proof. exact (eq_refl (@all ((_90715 -> Prop) -> Prop))). Qed.
Lemma lem3515183 {_90715 A : Type'} (_37167 : type616 _90715 A) (u : _90715 -> Prop) (f : type1413 _90715 A) : (term2346 _90715 A _37167 u f) = (term2346 _90715 A _37167 u f).
Proof. exact (MK_COMB (@lem3515182 _90715) (@lem3515181 _90715 A _37167 u f)). Qed.
Lemma lem3515184 {_90715 A : Type'} (_37167 : type616 _90715 A) (u : _90715 -> Prop) : (term2347 _90715 A _37167 u) = (term2347 _90715 A _37167 u).
Proof. exact (fun_ext (fun f : type1413 _90715 A => @lem3515183 _90715 A _37167 u f)). Qed.
Lemma lem3515185 {_90715 A : Type'} : (@all (_90715 -> A -> Prop)) = (@all (_90715 -> A -> Prop)).
Proof. exact (eq_refl (@all (_90715 -> A -> Prop))). Qed.
Lemma lem3515186 {_90715 A : Type'} (_37167 : type616 _90715 A) (u : _90715 -> Prop) : (term2348 _90715 A _37167 u) = (term2348 _90715 A _37167 u).
Proof. exact (MK_COMB (@lem3515185 _90715 A) (@lem3515184 _90715 A _37167 u)). Qed.
Lemma lem3515187 {_90715 A : Type'} (_37167 : type616 _90715 A) : (term2349 _90715 A _37167) = (term2349 _90715 A _37167).
Proof. exact (fun_ext (fun u : _90715 -> Prop => @lem3515186 _90715 A _37167 u)). Qed.
Lemma lem3515188 {_90715 : Type'} : (@all (_90715 -> Prop)) = (@all (_90715 -> Prop)).
Proof. exact (eq_refl (@all (_90715 -> Prop))). Qed.
Lemma lem3515189 {_90715 A : Type'} (_37167 : type616 _90715 A) : (term2350 _90715 A _37167) = (term2350 _90715 A _37167).
Proof. exact (MK_COMB (@lem3515188 _90715) (@lem3515187 _90715 A _37167)). Qed.
Lemma lem3515190 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem3515191 {_90715 A : Type'} (_37167 : type616 _90715 A) : (term2351 _90715 A _37167) = (term2351 _90715 A _37167).
Proof. exact (MK_COMB (@lem3515190) (@lem3515189 _90715 A _37167)). Qed.
Lemma lem3515192 {_90715 _90724 A B : Type'} (_37167 : type616 _90715 A) (_37168 : type852 _90724 A) (_37163 : type627 A B) (_37169 : type852 _90724 B) (h1 : _37169 = (term2440 _90724 B)) : (term2467 _90715 _90724 A B _37167 _37168 _37163) = (term2561 _90715 _90724 A B _37167 _37168 _37163 _37169).
Proof. exact (MK_COMB (@lem3515191 _90715 A _37167) (@lem3515116 _90724 A B _37168 _37163 _37169 h1)). Qed.
Lemma lem3515211 {_90715 B : Type'} (f : _90715 -> B) (g : type686 _90715) : ((term49 _90715 B f g) = (term50 _90715 B f g)) = ((term49 _90715 B f g) = (term50 _90715 B f g)).
Proof. exact (eq_refl ((term49 _90715 B f g) = (term50 _90715 B f g))). Qed.
Lemma lem3515240 {_90715 B : Type'} (g : type686 _90715) (_37166 : type627 _90715 B) (u : _90715 -> Prop) (f : _90715 -> B) (t : _90715 -> Prop) : (term2081 _90715 B g _37166 u f t) = (term2081 _90715 B g _37166 u f t).
Proof. exact (eq_refl (term2081 _90715 B g _37166 u f t)). Qed.
Lemma lem3515241 {_90715 B : Type'} (g : type686 _90715) (_37166 : type627 _90715 B) (u : _90715 -> Prop) (f : _90715 -> B) : (term2082 _90715 B g _37166 u f) = (term2082 _90715 B g _37166 u f).
Proof. exact (fun_ext (fun t : _90715 -> Prop => @lem3515240 _90715 B g _37166 u f t)). Qed.
Lemma lem3515242 {_90715 : Type'} : (@all (_90715 -> Prop)) = (@all (_90715 -> Prop)).
Proof. exact (eq_refl (@all (_90715 -> Prop))). Qed.
Lemma lem3515243 {_90715 B : Type'} (g : type686 _90715) (_37166 : type627 _90715 B) (u : _90715 -> Prop) (f : _90715 -> B) : (term2083 _90715 B g _37166 u f) = (term2083 _90715 B g _37166 u f).
Proof. exact (MK_COMB (@lem3515242 _90715) (@lem3515241 _90715 B g _37166 u f)). Qed.
Lemma lem3515252 {_90715 : Type'} (g : type686 _90715) : (term42 _90715 g) = (term42 _90715 g).
Proof. exact (eq_refl (term42 _90715 g)). Qed.
Lemma lem3515253 {_90715 B : Type'} (g : type686 _90715) (_37166 : type627 _90715 B) (u : _90715 -> Prop) (f : _90715 -> B) : (term2084 _90715 B g _37166 u f) = (term2084 _90715 B g _37166 u f).
Proof. exact (MK_COMB (@lem3515252 _90715 g) (@lem3515243 _90715 B g _37166 u f)). Qed.
Lemma lem3515254 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem3515255 {_90715 B : Type'} (g : type686 _90715) (_37166 : type627 _90715 B) (u : _90715 -> Prop) (f : _90715 -> B) : (term2085 _90715 B g _37166 u f) = (term2085 _90715 B g _37166 u f).
Proof. exact (MK_COMB (@lem3515254) (@lem3515253 _90715 B g _37166 u f)). Qed.
Lemma lem3515256 {_90715 B : Type'} (_37166 : type627 _90715 B) (u : _90715 -> Prop) (f : _90715 -> B) (g : type686 _90715) : (term2086 _90715 B _37166 u f g) = (term2086 _90715 B _37166 u f g).
Proof. exact (MK_COMB (@lem3515255 _90715 B g _37166 u f) (@lem3515211 _90715 B f g)). Qed.
Lemma lem3515257 {_90715 B : Type'} (_37166 : type627 _90715 B) (u : _90715 -> Prop) (f : _90715 -> B) : (term2088 _90715 B _37166 u f) = (term2088 _90715 B _37166 u f).
Proof. exact (fun_ext (fun g : type686 _90715 => @lem3515256 _90715 B _37166 u f g)). Qed.
Lemma lem3515258 {_90715 : Type'} : (@all ((_90715 -> Prop) -> Prop)) = (@all ((_90715 -> Prop) -> Prop)).
Proof. exact (eq_refl (@all ((_90715 -> Prop) -> Prop))). Qed.
Lemma lem3515259 {_90715 B : Type'} (_37166 : type627 _90715 B) (u : _90715 -> Prop) (f : _90715 -> B) : (term2089 _90715 B _37166 u f) = (term2089 _90715 B _37166 u f).
Proof. exact (MK_COMB (@lem3515258 _90715) (@lem3515257 _90715 B _37166 u f)). Qed.
Lemma lem3515260 {_90715 B : Type'} (_37166 : type627 _90715 B) (u : _90715 -> Prop) : (term2091 _90715 B _37166 u) = (term2091 _90715 B _37166 u).
Proof. exact (fun_ext (fun f : _90715 -> B => @lem3515259 _90715 B _37166 u f)). Qed.
Lemma lem3515261 {_90715 B : Type'} : (@all (_90715 -> B)) = (@all (_90715 -> B)).
Proof. exact (eq_refl (@all (_90715 -> B))). Qed.
Lemma lem3515262 {_90715 B : Type'} (_37166 : type627 _90715 B) (u : _90715 -> Prop) : (term2092 _90715 B _37166 u) = (term2092 _90715 B _37166 u).
Proof. exact (MK_COMB (@lem3515261 _90715 B) (@lem3515260 _90715 B _37166 u)). Qed.
Lemma lem3515263 {_90715 B : Type'} (_37166 : type627 _90715 B) : (term2094 _90715 B _37166) = (term2094 _90715 B _37166).
Proof. exact (fun_ext (fun u : _90715 -> Prop => @lem3515262 _90715 B _37166 u)). Qed.
Lemma lem3515264 {_90715 : Type'} : (@all (_90715 -> Prop)) = (@all (_90715 -> Prop)).
Proof. exact (eq_refl (@all (_90715 -> Prop))). Qed.
Lemma lem3515265 {_90715 B : Type'} (_37166 : type627 _90715 B) : (term2095 _90715 B _37166) = (term2095 _90715 B _37166).
Proof. exact (MK_COMB (@lem3515264 _90715) (@lem3515263 _90715 B _37166)). Qed.
Lemma lem3515266 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem3515267 {_90715 B : Type'} (_37166 : type627 _90715 B) : (term2096 _90715 B _37166) = (term2096 _90715 B _37166).
Proof. exact (MK_COMB (@lem3515266) (@lem3515265 _90715 B _37166)). Qed.
Lemma lem3515268 {_90715 _90724 A B : Type'} (_37166 : type627 _90715 B) (_37167 : type616 _90715 A) (_37168 : type852 _90724 A) (_37163 : type627 A B) (_37169 : type852 _90724 B) (h1 : _37169 = (term2440 _90724 B)) : (term2468 _90715 _90724 A B _37166 _37167 _37168 _37163) = (term2562 _90715 _90724 A B _37166 _37167 _37168 _37163 _37169).
Proof. exact (MK_COMB (@lem3515267 _90715 B _37166) (@lem3515192 _90715 _90724 A B _37167 _37168 _37163 _37169 h1)). Qed.
Lemma lem3515287 {_90715 A : Type'} (f : _90715 -> A) (g : type686 _90715) : ((term49 _90715 A f g) = (term50 _90715 A f g)) = ((term49 _90715 A f g) = (term50 _90715 A f g)).
Proof. exact (eq_refl ((term49 _90715 A f g) = (term50 _90715 A f g))). Qed.
Lemma lem3515316 {_90715 A : Type'} (g : type686 _90715) (_37165 : type627 _90715 A) (u : _90715 -> Prop) (f : _90715 -> A) (t : _90715 -> Prop) : (term2081 _90715 A g _37165 u f t) = (term2081 _90715 A g _37165 u f t).
Proof. exact (eq_refl (term2081 _90715 A g _37165 u f t)). Qed.
Lemma lem3515317 {_90715 A : Type'} (g : type686 _90715) (_37165 : type627 _90715 A) (u : _90715 -> Prop) (f : _90715 -> A) : (term2082 _90715 A g _37165 u f) = (term2082 _90715 A g _37165 u f).
Proof. exact (fun_ext (fun t : _90715 -> Prop => @lem3515316 _90715 A g _37165 u f t)). Qed.
Lemma lem3515318 {_90715 : Type'} : (@all (_90715 -> Prop)) = (@all (_90715 -> Prop)).
Proof. exact (eq_refl (@all (_90715 -> Prop))). Qed.
Lemma lem3515319 {_90715 A : Type'} (g : type686 _90715) (_37165 : type627 _90715 A) (u : _90715 -> Prop) (f : _90715 -> A) : (term2083 _90715 A g _37165 u f) = (term2083 _90715 A g _37165 u f).
Proof. exact (MK_COMB (@lem3515318 _90715) (@lem3515317 _90715 A g _37165 u f)). Qed.
Lemma lem3515328 {_90715 : Type'} (g : type686 _90715) : (term42 _90715 g) = (term42 _90715 g).
Proof. exact (eq_refl (term42 _90715 g)). Qed.
Lemma lem3515329 {_90715 A : Type'} (g : type686 _90715) (_37165 : type627 _90715 A) (u : _90715 -> Prop) (f : _90715 -> A) : (term2084 _90715 A g _37165 u f) = (term2084 _90715 A g _37165 u f).
Proof. exact (MK_COMB (@lem3515328 _90715 g) (@lem3515319 _90715 A g _37165 u f)). Qed.
Lemma lem3515330 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem3515331 {_90715 A : Type'} (g : type686 _90715) (_37165 : type627 _90715 A) (u : _90715 -> Prop) (f : _90715 -> A) : (term2085 _90715 A g _37165 u f) = (term2085 _90715 A g _37165 u f).
Proof. exact (MK_COMB (@lem3515330) (@lem3515329 _90715 A g _37165 u f)). Qed.
Lemma lem3515332 {_90715 A : Type'} (_37165 : type627 _90715 A) (u : _90715 -> Prop) (f : _90715 -> A) (g : type686 _90715) : (term2086 _90715 A _37165 u f g) = (term2086 _90715 A _37165 u f g).
Proof. exact (MK_COMB (@lem3515331 _90715 A g _37165 u f) (@lem3515287 _90715 A f g)). Qed.
Lemma lem3515333 {_90715 A : Type'} (_37165 : type627 _90715 A) (u : _90715 -> Prop) (f : _90715 -> A) : (term2088 _90715 A _37165 u f) = (term2088 _90715 A _37165 u f).
Proof. exact (fun_ext (fun g : type686 _90715 => @lem3515332 _90715 A _37165 u f g)). Qed.
Lemma lem3515334 {_90715 : Type'} : (@all ((_90715 -> Prop) -> Prop)) = (@all ((_90715 -> Prop) -> Prop)).
Proof. exact (eq_refl (@all ((_90715 -> Prop) -> Prop))). Qed.
Lemma lem3515335 {_90715 A : Type'} (_37165 : type627 _90715 A) (u : _90715 -> Prop) (f : _90715 -> A) : (term2089 _90715 A _37165 u f) = (term2089 _90715 A _37165 u f).
Proof. exact (MK_COMB (@lem3515334 _90715) (@lem3515333 _90715 A _37165 u f)). Qed.
Lemma lem3515336 {_90715 A : Type'} (_37165 : type627 _90715 A) (u : _90715 -> Prop) : (term2091 _90715 A _37165 u) = (term2091 _90715 A _37165 u).
Proof. exact (fun_ext (fun f : _90715 -> A => @lem3515335 _90715 A _37165 u f)). Qed.
Lemma lem3515337 {_90715 A : Type'} : (@all (_90715 -> A)) = (@all (_90715 -> A)).
Proof. exact (eq_refl (@all (_90715 -> A))). Qed.
Lemma lem3515338 {_90715 A : Type'} (_37165 : type627 _90715 A) (u : _90715 -> Prop) : (term2092 _90715 A _37165 u) = (term2092 _90715 A _37165 u).
Proof. exact (MK_COMB (@lem3515337 _90715 A) (@lem3515336 _90715 A _37165 u)). Qed.
Lemma lem3515339 {_90715 A : Type'} (_37165 : type627 _90715 A) : (term2094 _90715 A _37165) = (term2094 _90715 A _37165).
Proof. exact (fun_ext (fun u : _90715 -> Prop => @lem3515338 _90715 A _37165 u)). Qed.
Lemma lem3515340 {_90715 : Type'} : (@all (_90715 -> Prop)) = (@all (_90715 -> Prop)).
Proof. exact (eq_refl (@all (_90715 -> Prop))). Qed.
Lemma lem3515341 {_90715 A : Type'} (_37165 : type627 _90715 A) : (term2095 _90715 A _37165) = (term2095 _90715 A _37165).
Proof. exact (MK_COMB (@lem3515340 _90715) (@lem3515339 _90715 A _37165)). Qed.
Lemma lem3515342 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem3515343 {_90715 A : Type'} (_37165 : type627 _90715 A) : (term2096 _90715 A _37165) = (term2096 _90715 A _37165).
Proof. exact (MK_COMB (@lem3515342) (@lem3515341 _90715 A _37165)). Qed.
Lemma lem3515344 {_90715 _90724 A B : Type'} (_37165 : type627 _90715 A) (_37166 : type627 _90715 B) (_37167 : type616 _90715 A) (_37168 : type852 _90724 A) (_37163 : type627 A B) (_37169 : type852 _90724 B) (h1 : _37169 = (term2440 _90724 B)) : (term2469 _90715 _90724 A B _37165 _37166 _37167 _37168 _37163) = (term2563 _90715 _90724 A B _37165 _37166 _37167 _37168 _37163 _37169).
Proof. exact (MK_COMB (@lem3515343 _90715 A _37165) (@lem3515268 _90715 _90724 A B _37166 _37167 _37168 _37163 _37169 h1)). Qed.
Lemma lem3515363 {_90715 _90724 : Type'} (f : _90715 -> _90724) (g : type686 _90715) : ((term49 _90715 _90724 f g) = (term50 _90715 _90724 f g)) = ((term49 _90715 _90724 f g) = (term50 _90715 _90724 f g)).
Proof. exact (eq_refl ((term49 _90715 _90724 f g) = (term50 _90715 _90724 f g))). Qed.
Lemma lem3515392 {_90715 _90724 : Type'} (g : type686 _90715) (_37164 : type627 _90715 _90724) (u : _90715 -> Prop) (f : _90715 -> _90724) (t : _90715 -> Prop) : (term2081 _90715 _90724 g _37164 u f t) = (term2081 _90715 _90724 g _37164 u f t).
Proof. exact (eq_refl (term2081 _90715 _90724 g _37164 u f t)). Qed.
Lemma lem3515393 {_90715 _90724 : Type'} (g : type686 _90715) (_37164 : type627 _90715 _90724) (u : _90715 -> Prop) (f : _90715 -> _90724) : (term2082 _90715 _90724 g _37164 u f) = (term2082 _90715 _90724 g _37164 u f).
Proof. exact (fun_ext (fun t : _90715 -> Prop => @lem3515392 _90715 _90724 g _37164 u f t)). Qed.
Lemma lem3515394 {_90715 : Type'} : (@all (_90715 -> Prop)) = (@all (_90715 -> Prop)).
Proof. exact (eq_refl (@all (_90715 -> Prop))). Qed.
Lemma lem3515395 {_90715 _90724 : Type'} (g : type686 _90715) (_37164 : type627 _90715 _90724) (u : _90715 -> Prop) (f : _90715 -> _90724) : (term2083 _90715 _90724 g _37164 u f) = (term2083 _90715 _90724 g _37164 u f).
Proof. exact (MK_COMB (@lem3515394 _90715) (@lem3515393 _90715 _90724 g _37164 u f)). Qed.
Lemma lem3515404 {_90715 : Type'} (g : type686 _90715) : (term42 _90715 g) = (term42 _90715 g).
Proof. exact (eq_refl (term42 _90715 g)). Qed.
Lemma lem3515405 {_90715 _90724 : Type'} (g : type686 _90715) (_37164 : type627 _90715 _90724) (u : _90715 -> Prop) (f : _90715 -> _90724) : (term2084 _90715 _90724 g _37164 u f) = (term2084 _90715 _90724 g _37164 u f).
Proof. exact (MK_COMB (@lem3515404 _90715 g) (@lem3515395 _90715 _90724 g _37164 u f)). Qed.
Lemma lem3515406 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem3515407 {_90715 _90724 : Type'} (g : type686 _90715) (_37164 : type627 _90715 _90724) (u : _90715 -> Prop) (f : _90715 -> _90724) : (term2085 _90715 _90724 g _37164 u f) = (term2085 _90715 _90724 g _37164 u f).
Proof. exact (MK_COMB (@lem3515406) (@lem3515405 _90715 _90724 g _37164 u f)). Qed.
Lemma lem3515408 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) (u : _90715 -> Prop) (f : _90715 -> _90724) (g : type686 _90715) : (term2086 _90715 _90724 _37164 u f g) = (term2086 _90715 _90724 _37164 u f g).
Proof. exact (MK_COMB (@lem3515407 _90715 _90724 g _37164 u f) (@lem3515363 _90715 _90724 f g)). Qed.
Lemma lem3515409 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) (u : _90715 -> Prop) (f : _90715 -> _90724) : (term2088 _90715 _90724 _37164 u f) = (term2088 _90715 _90724 _37164 u f).
Proof. exact (fun_ext (fun g : type686 _90715 => @lem3515408 _90715 _90724 _37164 u f g)). Qed.
Lemma lem3515410 {_90715 : Type'} : (@all ((_90715 -> Prop) -> Prop)) = (@all ((_90715 -> Prop) -> Prop)).
Proof. exact (eq_refl (@all ((_90715 -> Prop) -> Prop))). Qed.
Lemma lem3515411 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) (u : _90715 -> Prop) (f : _90715 -> _90724) : (term2089 _90715 _90724 _37164 u f) = (term2089 _90715 _90724 _37164 u f).
Proof. exact (MK_COMB (@lem3515410 _90715) (@lem3515409 _90715 _90724 _37164 u f)). Qed.
Lemma lem3515412 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) (u : _90715 -> Prop) : (term2091 _90715 _90724 _37164 u) = (term2091 _90715 _90724 _37164 u).
Proof. exact (fun_ext (fun f : _90715 -> _90724 => @lem3515411 _90715 _90724 _37164 u f)). Qed.
Lemma lem3515413 {_90715 _90724 : Type'} : (@all (_90715 -> _90724)) = (@all (_90715 -> _90724)).
Proof. exact (eq_refl (@all (_90715 -> _90724))). Qed.
Lemma lem3515414 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) (u : _90715 -> Prop) : (term2092 _90715 _90724 _37164 u) = (term2092 _90715 _90724 _37164 u).
Proof. exact (MK_COMB (@lem3515413 _90715 _90724) (@lem3515412 _90715 _90724 _37164 u)). Qed.
Lemma lem3515415 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) : (term2094 _90715 _90724 _37164) = (term2094 _90715 _90724 _37164).
Proof. exact (fun_ext (fun u : _90715 -> Prop => @lem3515414 _90715 _90724 _37164 u)). Qed.
Lemma lem3515416 {_90715 : Type'} : (@all (_90715 -> Prop)) = (@all (_90715 -> Prop)).
Proof. exact (eq_refl (@all (_90715 -> Prop))). Qed.
Lemma lem3515417 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) : (term2095 _90715 _90724 _37164) = (term2095 _90715 _90724 _37164).
Proof. exact (MK_COMB (@lem3515416 _90715) (@lem3515415 _90715 _90724 _37164)). Qed.
Lemma lem3515418 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem3515419 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) : (term2096 _90715 _90724 _37164) = (term2096 _90715 _90724 _37164).
Proof. exact (MK_COMB (@lem3515418) (@lem3515417 _90715 _90724 _37164)). Qed.
Lemma lem3515420 {_90715 _90724 A B : Type'} (_37164 : type627 _90715 _90724) (_37165 : type627 _90715 A) (_37166 : type627 _90715 B) (_37167 : type616 _90715 A) (_37168 : type852 _90724 A) (_37163 : type627 A B) (_37169 : type852 _90724 B) (h1 : _37169 = (term2440 _90724 B)) : (term2470 _90715 _90724 A B _37164 _37165 _37166 _37167 _37168 _37163) = (term2564 _90715 _90724 A B _37164 _37165 _37166 _37167 _37168 _37163 _37169).
Proof. exact (MK_COMB (@lem3515419 _90715 _90724 _37164) (@lem3515344 _90715 _90724 A B _37165 _37166 _37167 _37168 _37163 _37169 h1)). Qed.
Lemma lem3515439 {A B : Type'} (f : A -> B) (g : type686 A) : ((term49 A B f g) = (term50 A B f g)) = ((term49 A B f g) = (term50 A B f g)).
Proof. exact (eq_refl ((term49 A B f g) = (term50 A B f g))). Qed.
Lemma lem3515460 {A B : Type'} (g : type686 A) (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) (t : A -> Prop) : (term2124 A B g _37163 u f t) = (term2124 A B g _37163 u f t).
Proof. exact (eq_refl (term2124 A B g _37163 u f t)). Qed.
Lemma lem3515461 {A B : Type'} (g : type686 A) (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) : (term2125 A B g _37163 u f) = (term2125 A B g _37163 u f).
Proof. exact (fun_ext (fun t : A -> Prop => @lem3515460 A B g _37163 u f t)). Qed.
Lemma lem3515462 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem3515463 {A B : Type'} (g : type686 A) (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) : (term2126 A B g _37163 u f) = (term2126 A B g _37163 u f).
Proof. exact (MK_COMB (@lem3515462 A) (@lem3515461 A B g _37163 u f)). Qed.
Lemma lem3515476 {A : Type'} (g : type686 A) (t : A -> Prop) (u : A -> Prop) : (term2127 A g t u) = (term2127 A g t u).
Proof. exact (eq_refl (term2127 A g t u)). Qed.
Lemma lem3515477 {A : Type'} (g : type686 A) (u : A -> Prop) : (term2128 A g u) = (term2128 A g u).
Proof. exact (fun_ext (fun t : A -> Prop => @lem3515476 A g t u)). Qed.
Lemma lem3515478 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem3515479 {A : Type'} (g : type686 A) (u : A -> Prop) : (term2129 A g u) = (term2129 A g u).
Proof. exact (MK_COMB (@lem3515478 A) (@lem3515477 A g u)). Qed.
Lemma lem3515480 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem3515481 {A : Type'} (g : type686 A) (u : A -> Prop) : (term1946 A g u) = (term1946 A g u).
Proof. exact (MK_COMB (@lem3515480) (@lem3515479 A g u)). Qed.
Lemma lem3515482 {A B : Type'} (g : type686 A) (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) : (term2130 A B g _37163 u f) = (term2130 A B g _37163 u f).
Proof. exact (MK_COMB (@lem3515481 A g u) (@lem3515463 A B g _37163 u f)). Qed.
Lemma lem3515491 {A : Type'} (g : type686 A) : (term42 A g) = (term42 A g).
Proof. exact (eq_refl (term42 A g)). Qed.
Lemma lem3515492 {A B : Type'} (g : type686 A) (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) : (term2131 A B g _37163 u f) = (term2131 A B g _37163 u f).
Proof. exact (MK_COMB (@lem3515491 A g) (@lem3515482 A B g _37163 u f)). Qed.
Lemma lem3515493 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem3515494 {A B : Type'} (g : type686 A) (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) : (term2133 A B g _37163 u f) = (term2133 A B g _37163 u f).
Proof. exact (MK_COMB (@lem3515493) (@lem3515492 A B g _37163 u f)). Qed.
Lemma lem3515495 {A B : Type'} (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) (g : type686 A) : (term2134 A B _37163 u f g) = (term2134 A B _37163 u f g).
Proof. exact (MK_COMB (@lem3515494 A B g _37163 u f) (@lem3515439 A B f g)). Qed.
Lemma lem3515496 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem3515497 {A B : Type'} (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) (g : type686 A) : (term2135 A B _37163 u f g) = (term2135 A B _37163 u f g).
Proof. exact (MK_COMB (@lem3515496) (@lem3515495 A B _37163 u f g)). Qed.
Lemma lem3515498 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem3515499 {A B : Type'} (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) (g : type686 A) : (term2136 A B _37163 u f g) = (term2136 A B _37163 u f g).
Proof. exact (MK_COMB (@lem3515498) (@lem3515497 A B _37163 u f g)). Qed.
Lemma lem3515500 {_90715 _90724 A B : Type'} (u : A -> Prop) (f : A -> B) (g : type686 A) (_37164 : type627 _90715 _90724) (_37165 : type627 _90715 A) (_37166 : type627 _90715 B) (_37167 : type616 _90715 A) (_37168 : type852 _90724 A) (_37163 : type627 A B) (_37169 : type852 _90724 B) (h1 : _37169 = (term2440 _90724 B)) : (term2471 _90715 _90724 A B u f g _37164 _37165 _37166 _37167 _37168 _37163) = (term2565 _90715 _90724 A B u f g _37164 _37165 _37166 _37167 _37168 _37163 _37169).
Proof. exact (MK_COMB (@lem3515499 A B _37163 u f g) (@lem3515420 _90715 _90724 A B _37164 _37165 _37166 _37167 _37168 _37163 _37169 h1)). Qed.
Lemma lem3515501 {_90715 _90724 A B : Type'} (f : A -> B) (g : type686 A) (_37164 : type627 _90715 _90724) (_37165 : type627 _90715 A) (_37166 : type627 _90715 B) (_37167 : type616 _90715 A) (_37168 : type852 _90724 A) (_37163 : type627 A B) (_37169 : type852 _90724 B) (h1 : _37169 = (term2440 _90724 B)) : (term2472 _90715 _90724 A B f g _37164 _37165 _37166 _37167 _37168 _37163) = (term2566 _90715 _90724 A B f g _37164 _37165 _37166 _37167 _37168 _37163 _37169).
Proof. exact (fun_ext (fun u : A -> Prop => @lem3515500 _90715 _90724 A B u f g _37164 _37165 _37166 _37167 _37168 _37163 _37169 h1)). Qed.
Lemma lem3515502 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem3515503 {_90715 _90724 A B : Type'} (f : A -> B) (g : type686 A) (_37164 : type627 _90715 _90724) (_37165 : type627 _90715 A) (_37166 : type627 _90715 B) (_37167 : type616 _90715 A) (_37168 : type852 _90724 A) (_37163 : type627 A B) (_37169 : type852 _90724 B) (h1 : _37169 = (term2440 _90724 B)) : (term2473 _90715 _90724 A B f g _37164 _37165 _37166 _37167 _37168 _37163) = (term2567 _90715 _90724 A B f g _37164 _37165 _37166 _37167 _37168 _37163 _37169).
Proof. exact (MK_COMB (@lem3515502 A) (@lem3515501 _90715 _90724 A B f g _37164 _37165 _37166 _37167 _37168 _37163 _37169 h1)). Qed.
Lemma lem3515504 {_90715 _90724 A B : Type'} (g : type686 A) (_37164 : type627 _90715 _90724) (_37165 : type627 _90715 A) (_37166 : type627 _90715 B) (_37167 : type616 _90715 A) (_37168 : type852 _90724 A) (_37163 : type627 A B) (_37169 : type852 _90724 B) (h1 : _37169 = (term2440 _90724 B)) : (term2474 _90715 _90724 A B g _37164 _37165 _37166 _37167 _37168 _37163) = (term2568 _90715 _90724 A B g _37164 _37165 _37166 _37167 _37168 _37163 _37169).
Proof. exact (fun_ext (fun f : A -> B => @lem3515503 _90715 _90724 A B f g _37164 _37165 _37166 _37167 _37168 _37163 _37169 h1)). Qed.
Lemma lem3515505 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem3515506 {_90715 _90724 A B : Type'} (g : type686 A) (_37164 : type627 _90715 _90724) (_37165 : type627 _90715 A) (_37166 : type627 _90715 B) (_37167 : type616 _90715 A) (_37168 : type852 _90724 A) (_37163 : type627 A B) (_37169 : type852 _90724 B) (h1 : _37169 = (term2440 _90724 B)) : (term2475 _90715 _90724 A B g _37164 _37165 _37166 _37167 _37168 _37163) = (term2569 _90715 _90724 A B g _37164 _37165 _37166 _37167 _37168 _37163 _37169).
Proof. exact (MK_COMB (@lem3515505 A B) (@lem3515504 _90715 _90724 A B g _37164 _37165 _37166 _37167 _37168 _37163 _37169 h1)). Qed.
Lemma lem3515507 {_90715 _90724 A B : Type'} (_37164 : type627 _90715 _90724) (_37165 : type627 _90715 A) (_37166 : type627 _90715 B) (_37167 : type616 _90715 A) (_37168 : type852 _90724 A) (_37163 : type627 A B) (_37169 : type852 _90724 B) (h1 : _37169 = (term2440 _90724 B)) : (term2476 _90715 _90724 A B _37164 _37165 _37166 _37167 _37168 _37163) = (term2570 _90715 _90724 A B _37164 _37165 _37166 _37167 _37168 _37163 _37169).
Proof. exact (fun_ext (fun g : type686 A => @lem3515506 _90715 _90724 A B g _37164 _37165 _37166 _37167 _37168 _37163 _37169 h1)). Qed.
Lemma lem3515508 {A : Type'} : (@all ((A -> Prop) -> Prop)) = (@all ((A -> Prop) -> Prop)).
Proof. exact (eq_refl (@all ((A -> Prop) -> Prop))). Qed.
Lemma lem3515509 {_90715 _90724 A B : Type'} (_37164 : type627 _90715 _90724) (_37165 : type627 _90715 A) (_37166 : type627 _90715 B) (_37167 : type616 _90715 A) (_37168 : type852 _90724 A) (_37163 : type627 A B) (_37169 : type852 _90724 B) (h1 : _37169 = (term2440 _90724 B)) : (term2477 _90715 _90724 A B _37164 _37165 _37166 _37167 _37168 _37163) = (term2571 _90715 _90724 A B _37164 _37165 _37166 _37167 _37168 _37163 _37169).
Proof. exact (MK_COMB (@lem3515508 A) (@lem3515507 _90715 _90724 A B _37164 _37165 _37166 _37167 _37168 _37163 _37169 h1)). Qed.
Lemma lem3515534 {A B : Type'} (GEN_PVAR_85 : A) (u : A -> Prop) (f : A -> B) (t : A -> Prop) (x : A) : (term61 A B GEN_PVAR_85 u f t x) = (term61 A B GEN_PVAR_85 u f t x).
Proof. exact (eq_refl (term61 A B GEN_PVAR_85 u f t x)). Qed.
Lemma lem3515535 {A B : Type'} (GEN_PVAR_85 : A) (u : A -> Prop) (f : A -> B) (t : A -> Prop) : (term63 A B GEN_PVAR_85 u f t) = (term63 A B GEN_PVAR_85 u f t).
Proof. exact (fun_ext (fun x : A => @lem3515534 A B GEN_PVAR_85 u f t x)). Qed.
Lemma lem3515536 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem3515537 {A B : Type'} (GEN_PVAR_85 : A) (u : A -> Prop) (f : A -> B) (t : A -> Prop) : (term65 A B GEN_PVAR_85 u f t) = (term65 A B GEN_PVAR_85 u f t).
Proof. exact (MK_COMB (@lem3515536 A) (@lem3515535 A B GEN_PVAR_85 u f t)). Qed.
Lemma lem3515548 {A B : Type'} (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) (t : A -> Prop) (GEN_PVAR_85 : A) : (term2201 A B _37163 u f t GEN_PVAR_85) = (term2201 A B _37163 u f t GEN_PVAR_85).
Proof. exact (eq_refl (term2201 A B _37163 u f t GEN_PVAR_85)). Qed.
Lemma lem3515549 {A B : Type'} (_37163 : type627 A B) (GEN_PVAR_85 : A) (u : A -> Prop) (f : A -> B) (t : A -> Prop) : ((_37163 u f t GEN_PVAR_85) = (term65 A B GEN_PVAR_85 u f t)) = ((_37163 u f t GEN_PVAR_85) = (term65 A B GEN_PVAR_85 u f t)).
Proof. exact (MK_COMB (@lem3515548 A B _37163 u f t GEN_PVAR_85) (@lem3515537 A B GEN_PVAR_85 u f t)). Qed.
Lemma lem3515550 {A B : Type'} (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) (t : A -> Prop) : (term2203 A B _37163 u f t) = (term2203 A B _37163 u f t).
Proof. exact (fun_ext (fun GEN_PVAR_85 : A => @lem3515549 A B _37163 GEN_PVAR_85 u f t)). Qed.
Lemma lem3515551 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem3515552 {A B : Type'} (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) (t : A -> Prop) : (term2204 A B _37163 u f t) = (term2204 A B _37163 u f t).
Proof. exact (MK_COMB (@lem3515551 A) (@lem3515550 A B _37163 u f t)). Qed.
Lemma lem3515553 {A B : Type'} (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) : (term2205 A B _37163 u f) = (term2205 A B _37163 u f).
Proof. exact (fun_ext (fun t : A -> Prop => @lem3515552 A B _37163 u f t)). Qed.
Lemma lem3515554 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem3515555 {A B : Type'} (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) : (term2206 A B _37163 u f) = (term2206 A B _37163 u f).
Proof. exact (MK_COMB (@lem3515554 A) (@lem3515553 A B _37163 u f)). Qed.
Lemma lem3515556 {A B : Type'} (_37163 : type627 A B) (u : A -> Prop) : (term2207 A B _37163 u) = (term2207 A B _37163 u).
Proof. exact (fun_ext (fun f : A -> B => @lem3515555 A B _37163 u f)). Qed.
Lemma lem3515557 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem3515558 {A B : Type'} (_37163 : type627 A B) (u : A -> Prop) : (term2208 A B _37163 u) = (term2208 A B _37163 u).
Proof. exact (MK_COMB (@lem3515557 A B) (@lem3515556 A B _37163 u)). Qed.
Lemma lem3515559 {A B : Type'} (_37163 : type627 A B) : (term2209 A B _37163) = (term2209 A B _37163).
Proof. exact (fun_ext (fun u : A -> Prop => @lem3515558 A B _37163 u)). Qed.
Lemma lem3515560 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem3515561 {A B : Type'} (_37163 : type627 A B) : (term2210 A B _37163) = (term2210 A B _37163).
Proof. exact (MK_COMB (@lem3515560 A) (@lem3515559 A B _37163)). Qed.
Lemma lem3515562 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem3515563 {A B : Type'} (_37163 : type627 A B) : (term2211 A B _37163) = (term2211 A B _37163).
Proof. exact (MK_COMB (@lem3515562) (@lem3515561 A B _37163)). Qed.
Lemma lem3515564 {_90715 _90724 A B : Type'} (_37164 : type627 _90715 _90724) (_37165 : type627 _90715 A) (_37166 : type627 _90715 B) (_37167 : type616 _90715 A) (_37168 : type852 _90724 A) (_37163 : type627 A B) (_37169 : type852 _90724 B) (h1 : _37169 = (term2440 _90724 B)) : (term2478 _90715 _90724 A B _37164 _37165 _37166 _37167 _37168 _37163) = (term2572 _90715 _90724 A B _37164 _37165 _37166 _37167 _37168 _37163 _37169).
Proof. exact (MK_COMB (@lem3515563 A B _37163) (@lem3515509 _90715 _90724 A B _37164 _37165 _37166 _37167 _37168 _37163 _37169 h1)). Qed.
Lemma lem3515565 {_90715 _90724 A B : Type'} (_37164 : type627 _90715 _90724) (_37165 : type627 _90715 A) (_37166 : type627 _90715 B) (_37167 : type616 _90715 A) (_37168 : type852 _90724 A) (_37169 : type852 _90724 B) (h1 : _37169 = (term2440 _90724 B)) : (term2479 _90715 _90724 A B _37164 _37165 _37166 _37167 _37168) = (term2573 _90715 _90724 A B _37164 _37165 _37166 _37167 _37168 _37169).
Proof. exact (fun_ext (fun _37163 : type627 A B => @lem3515564 _90715 _90724 A B _37164 _37165 _37166 _37167 _37168 _37163 _37169 h1)). Qed.
Lemma lem3515566 {A B : Type'} : (@all ((A -> Prop) -> (A -> B) -> (A -> Prop) -> A -> Prop)) = (@all ((A -> Prop) -> (A -> B) -> (A -> Prop) -> A -> Prop)).
Proof. exact (eq_refl (@all ((A -> Prop) -> (A -> B) -> (A -> Prop) -> A -> Prop))). Qed.
Lemma lem3515567 {_90715 _90724 A B : Type'} (_37164 : type627 _90715 _90724) (_37165 : type627 _90715 A) (_37166 : type627 _90715 B) (_37167 : type616 _90715 A) (_37168 : type852 _90724 A) (_37169 : type852 _90724 B) (h1 : _37169 = (term2440 _90724 B)) : (term2480 _90715 _90724 A B _37164 _37165 _37166 _37167 _37168) = (term2574 _90715 _90724 A B _37164 _37165 _37166 _37167 _37168 _37169).
Proof. exact (MK_COMB (@lem3515566 A B) (@lem3515565 _90715 _90724 A B _37164 _37165 _37166 _37167 _37168 _37169 h1)). Qed.
Lemma lem3515592 {_90715 _90724 : Type'} (GEN_PVAR_84 : _90715) (u : _90715 -> Prop) (f : _90715 -> _90724) (t : _90715 -> Prop) (x : _90715) : (term61 _90715 _90724 GEN_PVAR_84 u f t x) = (term61 _90715 _90724 GEN_PVAR_84 u f t x).
Proof. exact (eq_refl (term61 _90715 _90724 GEN_PVAR_84 u f t x)). Qed.
Lemma lem3515593 {_90715 _90724 : Type'} (GEN_PVAR_84 : _90715) (u : _90715 -> Prop) (f : _90715 -> _90724) (t : _90715 -> Prop) : (term63 _90715 _90724 GEN_PVAR_84 u f t) = (term63 _90715 _90724 GEN_PVAR_84 u f t).
Proof. exact (fun_ext (fun x : _90715 => @lem3515592 _90715 _90724 GEN_PVAR_84 u f t x)). Qed.
Lemma lem3515594 {_90715 : Type'} : (@ex _90715) = (@ex _90715).
Proof. exact (eq_refl (@ex _90715)). Qed.
Lemma lem3515595 {_90715 _90724 : Type'} (GEN_PVAR_84 : _90715) (u : _90715 -> Prop) (f : _90715 -> _90724) (t : _90715 -> Prop) : (term65 _90715 _90724 GEN_PVAR_84 u f t) = (term65 _90715 _90724 GEN_PVAR_84 u f t).
Proof. exact (MK_COMB (@lem3515594 _90715) (@lem3515593 _90715 _90724 GEN_PVAR_84 u f t)). Qed.
Lemma lem3515606 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) (u : _90715 -> Prop) (f : _90715 -> _90724) (t : _90715 -> Prop) (GEN_PVAR_84 : _90715) : (term2201 _90715 _90724 _37164 u f t GEN_PVAR_84) = (term2201 _90715 _90724 _37164 u f t GEN_PVAR_84).
Proof. exact (eq_refl (term2201 _90715 _90724 _37164 u f t GEN_PVAR_84)). Qed.
Lemma lem3515607 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) (GEN_PVAR_84 : _90715) (u : _90715 -> Prop) (f : _90715 -> _90724) (t : _90715 -> Prop) : ((_37164 u f t GEN_PVAR_84) = (term65 _90715 _90724 GEN_PVAR_84 u f t)) = ((_37164 u f t GEN_PVAR_84) = (term65 _90715 _90724 GEN_PVAR_84 u f t)).
Proof. exact (MK_COMB (@lem3515606 _90715 _90724 _37164 u f t GEN_PVAR_84) (@lem3515595 _90715 _90724 GEN_PVAR_84 u f t)). Qed.
Lemma lem3515608 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) (u : _90715 -> Prop) (f : _90715 -> _90724) (t : _90715 -> Prop) : (term2203 _90715 _90724 _37164 u f t) = (term2203 _90715 _90724 _37164 u f t).
Proof. exact (fun_ext (fun GEN_PVAR_84 : _90715 => @lem3515607 _90715 _90724 _37164 GEN_PVAR_84 u f t)). Qed.
Lemma lem3515609 {_90715 : Type'} : (@all _90715) = (@all _90715).
Proof. exact (eq_refl (@all _90715)). Qed.
Lemma lem3515610 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) (u : _90715 -> Prop) (f : _90715 -> _90724) (t : _90715 -> Prop) : (term2204 _90715 _90724 _37164 u f t) = (term2204 _90715 _90724 _37164 u f t).
Proof. exact (MK_COMB (@lem3515609 _90715) (@lem3515608 _90715 _90724 _37164 u f t)). Qed.
Lemma lem3515611 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) (u : _90715 -> Prop) (f : _90715 -> _90724) : (term2205 _90715 _90724 _37164 u f) = (term2205 _90715 _90724 _37164 u f).
Proof. exact (fun_ext (fun t : _90715 -> Prop => @lem3515610 _90715 _90724 _37164 u f t)). Qed.
Lemma lem3515612 {_90715 : Type'} : (@all (_90715 -> Prop)) = (@all (_90715 -> Prop)).
Proof. exact (eq_refl (@all (_90715 -> Prop))). Qed.
Lemma lem3515613 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) (u : _90715 -> Prop) (f : _90715 -> _90724) : (term2206 _90715 _90724 _37164 u f) = (term2206 _90715 _90724 _37164 u f).
Proof. exact (MK_COMB (@lem3515612 _90715) (@lem3515611 _90715 _90724 _37164 u f)). Qed.
Lemma lem3515614 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) (u : _90715 -> Prop) : (term2207 _90715 _90724 _37164 u) = (term2207 _90715 _90724 _37164 u).
Proof. exact (fun_ext (fun f : _90715 -> _90724 => @lem3515613 _90715 _90724 _37164 u f)). Qed.
Lemma lem3515615 {_90715 _90724 : Type'} : (@all (_90715 -> _90724)) = (@all (_90715 -> _90724)).
Proof. exact (eq_refl (@all (_90715 -> _90724))). Qed.
Lemma lem3515616 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) (u : _90715 -> Prop) : (term2208 _90715 _90724 _37164 u) = (term2208 _90715 _90724 _37164 u).
Proof. exact (MK_COMB (@lem3515615 _90715 _90724) (@lem3515614 _90715 _90724 _37164 u)). Qed.
Lemma lem3515617 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) : (term2209 _90715 _90724 _37164) = (term2209 _90715 _90724 _37164).
Proof. exact (fun_ext (fun u : _90715 -> Prop => @lem3515616 _90715 _90724 _37164 u)). Qed.
Lemma lem3515618 {_90715 : Type'} : (@all (_90715 -> Prop)) = (@all (_90715 -> Prop)).
Proof. exact (eq_refl (@all (_90715 -> Prop))). Qed.
Lemma lem3515619 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) : (term2210 _90715 _90724 _37164) = (term2210 _90715 _90724 _37164).
Proof. exact (MK_COMB (@lem3515618 _90715) (@lem3515617 _90715 _90724 _37164)). Qed.
Lemma lem3515620 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem3515621 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) : (term2211 _90715 _90724 _37164) = (term2211 _90715 _90724 _37164).
Proof. exact (MK_COMB (@lem3515620) (@lem3515619 _90715 _90724 _37164)). Qed.
Lemma lem3515622 {_90715 _90724 A B : Type'} (_37164 : type627 _90715 _90724) (_37165 : type627 _90715 A) (_37166 : type627 _90715 B) (_37167 : type616 _90715 A) (_37168 : type852 _90724 A) (_37169 : type852 _90724 B) (h1 : _37169 = (term2440 _90724 B)) : (term2481 _90715 _90724 A B _37164 _37165 _37166 _37167 _37168) = (term2575 _90715 _90724 A B _37164 _37165 _37166 _37167 _37168 _37169).
Proof. exact (MK_COMB (@lem3515621 _90715 _90724 _37164) (@lem3515567 _90715 _90724 A B _37164 _37165 _37166 _37167 _37168 _37169 h1)). Qed.
Lemma lem3515623 {_90715 _90724 A B : Type'} (_37165 : type627 _90715 A) (_37166 : type627 _90715 B) (_37167 : type616 _90715 A) (_37168 : type852 _90724 A) (_37169 : type852 _90724 B) (h1 : _37169 = (term2440 _90724 B)) : (term2482 _90715 _90724 A B _37165 _37166 _37167 _37168) = (term2576 _90715 _90724 A B _37165 _37166 _37167 _37168 _37169).
Proof. exact (fun_ext (fun _37164 : type627 _90715 _90724 => @lem3515622 _90715 _90724 A B _37164 _37165 _37166 _37167 _37168 _37169 h1)). Qed.
Lemma lem3515624 {_90715 _90724 : Type'} : (@all ((_90715 -> Prop) -> (_90715 -> _90724) -> (_90715 -> Prop) -> _90715 -> Prop)) = (@all ((_90715 -> Prop) -> (_90715 -> _90724) -> (_90715 -> Prop) -> _90715 -> Prop)).
Proof. exact (eq_refl (@all ((_90715 -> Prop) -> (_90715 -> _90724) -> (_90715 -> Prop) -> _90715 -> Prop))). Qed.
Lemma lem3515625 {_90715 _90724 A B : Type'} (_37165 : type627 _90715 A) (_37166 : type627 _90715 B) (_37167 : type616 _90715 A) (_37168 : type852 _90724 A) (_37169 : type852 _90724 B) (h1 : _37169 = (term2440 _90724 B)) : (term2483 _90715 _90724 A B _37165 _37166 _37167 _37168) = (term2577 _90715 _90724 A B _37165 _37166 _37167 _37168 _37169).
Proof. exact (MK_COMB (@lem3515624 _90715 _90724) (@lem3515623 _90715 _90724 A B _37165 _37166 _37167 _37168 _37169 h1)). Qed.
Lemma lem3515650 {_90715 A : Type'} (GEN_PVAR_84 : _90715) (u : _90715 -> Prop) (f : _90715 -> A) (t : _90715 -> Prop) (x : _90715) : (term61 _90715 A GEN_PVAR_84 u f t x) = (term61 _90715 A GEN_PVAR_84 u f t x).
Proof. exact (eq_refl (term61 _90715 A GEN_PVAR_84 u f t x)). Qed.
Lemma lem3515651 {_90715 A : Type'} (GEN_PVAR_84 : _90715) (u : _90715 -> Prop) (f : _90715 -> A) (t : _90715 -> Prop) : (term63 _90715 A GEN_PVAR_84 u f t) = (term63 _90715 A GEN_PVAR_84 u f t).
Proof. exact (fun_ext (fun x : _90715 => @lem3515650 _90715 A GEN_PVAR_84 u f t x)). Qed.
Lemma lem3515652 {_90715 : Type'} : (@ex _90715) = (@ex _90715).
Proof. exact (eq_refl (@ex _90715)). Qed.
Lemma lem3515653 {_90715 A : Type'} (GEN_PVAR_84 : _90715) (u : _90715 -> Prop) (f : _90715 -> A) (t : _90715 -> Prop) : (term65 _90715 A GEN_PVAR_84 u f t) = (term65 _90715 A GEN_PVAR_84 u f t).
Proof. exact (MK_COMB (@lem3515652 _90715) (@lem3515651 _90715 A GEN_PVAR_84 u f t)). Qed.
Lemma lem3515664 {_90715 A : Type'} (_37165 : type627 _90715 A) (u : _90715 -> Prop) (f : _90715 -> A) (t : _90715 -> Prop) (GEN_PVAR_84 : _90715) : (term2201 _90715 A _37165 u f t GEN_PVAR_84) = (term2201 _90715 A _37165 u f t GEN_PVAR_84).
Proof. exact (eq_refl (term2201 _90715 A _37165 u f t GEN_PVAR_84)). Qed.
Lemma lem3515665 {_90715 A : Type'} (_37165 : type627 _90715 A) (GEN_PVAR_84 : _90715) (u : _90715 -> Prop) (f : _90715 -> A) (t : _90715 -> Prop) : ((_37165 u f t GEN_PVAR_84) = (term65 _90715 A GEN_PVAR_84 u f t)) = ((_37165 u f t GEN_PVAR_84) = (term65 _90715 A GEN_PVAR_84 u f t)).
Proof. exact (MK_COMB (@lem3515664 _90715 A _37165 u f t GEN_PVAR_84) (@lem3515653 _90715 A GEN_PVAR_84 u f t)). Qed.
Lemma lem3515666 {_90715 A : Type'} (_37165 : type627 _90715 A) (u : _90715 -> Prop) (f : _90715 -> A) (t : _90715 -> Prop) : (term2203 _90715 A _37165 u f t) = (term2203 _90715 A _37165 u f t).
Proof. exact (fun_ext (fun GEN_PVAR_84 : _90715 => @lem3515665 _90715 A _37165 GEN_PVAR_84 u f t)). Qed.
Lemma lem3515667 {_90715 : Type'} : (@all _90715) = (@all _90715).
Proof. exact (eq_refl (@all _90715)). Qed.
Lemma lem3515668 {_90715 A : Type'} (_37165 : type627 _90715 A) (u : _90715 -> Prop) (f : _90715 -> A) (t : _90715 -> Prop) : (term2204 _90715 A _37165 u f t) = (term2204 _90715 A _37165 u f t).
Proof. exact (MK_COMB (@lem3515667 _90715) (@lem3515666 _90715 A _37165 u f t)). Qed.
Lemma lem3515669 {_90715 A : Type'} (_37165 : type627 _90715 A) (u : _90715 -> Prop) (f : _90715 -> A) : (term2205 _90715 A _37165 u f) = (term2205 _90715 A _37165 u f).
Proof. exact (fun_ext (fun t : _90715 -> Prop => @lem3515668 _90715 A _37165 u f t)). Qed.
Lemma lem3515670 {_90715 : Type'} : (@all (_90715 -> Prop)) = (@all (_90715 -> Prop)).
Proof. exact (eq_refl (@all (_90715 -> Prop))). Qed.
Lemma lem3515671 {_90715 A : Type'} (_37165 : type627 _90715 A) (u : _90715 -> Prop) (f : _90715 -> A) : (term2206 _90715 A _37165 u f) = (term2206 _90715 A _37165 u f).
Proof. exact (MK_COMB (@lem3515670 _90715) (@lem3515669 _90715 A _37165 u f)). Qed.
Lemma lem3515672 {_90715 A : Type'} (_37165 : type627 _90715 A) (u : _90715 -> Prop) : (term2207 _90715 A _37165 u) = (term2207 _90715 A _37165 u).
Proof. exact (fun_ext (fun f : _90715 -> A => @lem3515671 _90715 A _37165 u f)). Qed.
Lemma lem3515673 {_90715 A : Type'} : (@all (_90715 -> A)) = (@all (_90715 -> A)).
Proof. exact (eq_refl (@all (_90715 -> A))). Qed.
Lemma lem3515674 {_90715 A : Type'} (_37165 : type627 _90715 A) (u : _90715 -> Prop) : (term2208 _90715 A _37165 u) = (term2208 _90715 A _37165 u).
Proof. exact (MK_COMB (@lem3515673 _90715 A) (@lem3515672 _90715 A _37165 u)). Qed.
Lemma lem3515675 {_90715 A : Type'} (_37165 : type627 _90715 A) : (term2209 _90715 A _37165) = (term2209 _90715 A _37165).
Proof. exact (fun_ext (fun u : _90715 -> Prop => @lem3515674 _90715 A _37165 u)). Qed.
Lemma lem3515676 {_90715 : Type'} : (@all (_90715 -> Prop)) = (@all (_90715 -> Prop)).
Proof. exact (eq_refl (@all (_90715 -> Prop))). Qed.
Lemma lem3515677 {_90715 A : Type'} (_37165 : type627 _90715 A) : (term2210 _90715 A _37165) = (term2210 _90715 A _37165).
Proof. exact (MK_COMB (@lem3515676 _90715) (@lem3515675 _90715 A _37165)). Qed.
Lemma lem3515678 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem3515679 {_90715 A : Type'} (_37165 : type627 _90715 A) : (term2211 _90715 A _37165) = (term2211 _90715 A _37165).
Proof. exact (MK_COMB (@lem3515678) (@lem3515677 _90715 A _37165)). Qed.
Lemma lem3515680 {_90715 _90724 A B : Type'} (_37165 : type627 _90715 A) (_37166 : type627 _90715 B) (_37167 : type616 _90715 A) (_37168 : type852 _90724 A) (_37169 : type852 _90724 B) (h1 : _37169 = (term2440 _90724 B)) : (term2484 _90715 _90724 A B _37165 _37166 _37167 _37168) = (term2578 _90715 _90724 A B _37165 _37166 _37167 _37168 _37169).
Proof. exact (MK_COMB (@lem3515679 _90715 A _37165) (@lem3515625 _90715 _90724 A B _37165 _37166 _37167 _37168 _37169 h1)). Qed.
Lemma lem3515681 {_90715 _90724 A B : Type'} (_37166 : type627 _90715 B) (_37167 : type616 _90715 A) (_37168 : type852 _90724 A) (_37169 : type852 _90724 B) (h1 : _37169 = (term2440 _90724 B)) : (term2485 _90715 _90724 A B _37166 _37167 _37168) = (term2579 _90715 _90724 A B _37166 _37167 _37168 _37169).
Proof. exact (fun_ext (fun _37165 : type627 _90715 A => @lem3515680 _90715 _90724 A B _37165 _37166 _37167 _37168 _37169 h1)). Qed.
Lemma lem3515682 {_90715 A : Type'} : (@all ((_90715 -> Prop) -> (_90715 -> A) -> (_90715 -> Prop) -> _90715 -> Prop)) = (@all ((_90715 -> Prop) -> (_90715 -> A) -> (_90715 -> Prop) -> _90715 -> Prop)).
Proof. exact (eq_refl (@all ((_90715 -> Prop) -> (_90715 -> A) -> (_90715 -> Prop) -> _90715 -> Prop))). Qed.
Lemma lem3515683 {_90715 _90724 A B : Type'} (_37166 : type627 _90715 B) (_37167 : type616 _90715 A) (_37168 : type852 _90724 A) (_37169 : type852 _90724 B) (h1 : _37169 = (term2440 _90724 B)) : (term2486 _90715 _90724 A B _37166 _37167 _37168) = (term2580 _90715 _90724 A B _37166 _37167 _37168 _37169).
Proof. exact (MK_COMB (@lem3515682 _90715 A) (@lem3515681 _90715 _90724 A B _37166 _37167 _37168 _37169 h1)). Qed.
Lemma lem3515708 {_90715 B : Type'} (GEN_PVAR_84 : _90715) (u : _90715 -> Prop) (f : _90715 -> B) (t : _90715 -> Prop) (x : _90715) : (term61 _90715 B GEN_PVAR_84 u f t x) = (term61 _90715 B GEN_PVAR_84 u f t x).
Proof. exact (eq_refl (term61 _90715 B GEN_PVAR_84 u f t x)). Qed.
Lemma lem3515709 {_90715 B : Type'} (GEN_PVAR_84 : _90715) (u : _90715 -> Prop) (f : _90715 -> B) (t : _90715 -> Prop) : (term63 _90715 B GEN_PVAR_84 u f t) = (term63 _90715 B GEN_PVAR_84 u f t).
Proof. exact (fun_ext (fun x : _90715 => @lem3515708 _90715 B GEN_PVAR_84 u f t x)). Qed.
Lemma lem3515710 {_90715 : Type'} : (@ex _90715) = (@ex _90715).
Proof. exact (eq_refl (@ex _90715)). Qed.
Lemma lem3515711 {_90715 B : Type'} (GEN_PVAR_84 : _90715) (u : _90715 -> Prop) (f : _90715 -> B) (t : _90715 -> Prop) : (term65 _90715 B GEN_PVAR_84 u f t) = (term65 _90715 B GEN_PVAR_84 u f t).
Proof. exact (MK_COMB (@lem3515710 _90715) (@lem3515709 _90715 B GEN_PVAR_84 u f t)). Qed.
Lemma lem3515722 {_90715 B : Type'} (_37166 : type627 _90715 B) (u : _90715 -> Prop) (f : _90715 -> B) (t : _90715 -> Prop) (GEN_PVAR_84 : _90715) : (term2201 _90715 B _37166 u f t GEN_PVAR_84) = (term2201 _90715 B _37166 u f t GEN_PVAR_84).
Proof. exact (eq_refl (term2201 _90715 B _37166 u f t GEN_PVAR_84)). Qed.
Lemma lem3515723 {_90715 B : Type'} (_37166 : type627 _90715 B) (GEN_PVAR_84 : _90715) (u : _90715 -> Prop) (f : _90715 -> B) (t : _90715 -> Prop) : ((_37166 u f t GEN_PVAR_84) = (term65 _90715 B GEN_PVAR_84 u f t)) = ((_37166 u f t GEN_PVAR_84) = (term65 _90715 B GEN_PVAR_84 u f t)).
Proof. exact (MK_COMB (@lem3515722 _90715 B _37166 u f t GEN_PVAR_84) (@lem3515711 _90715 B GEN_PVAR_84 u f t)). Qed.
Lemma lem3515724 {_90715 B : Type'} (_37166 : type627 _90715 B) (u : _90715 -> Prop) (f : _90715 -> B) (t : _90715 -> Prop) : (term2203 _90715 B _37166 u f t) = (term2203 _90715 B _37166 u f t).
Proof. exact (fun_ext (fun GEN_PVAR_84 : _90715 => @lem3515723 _90715 B _37166 GEN_PVAR_84 u f t)). Qed.
Lemma lem3515725 {_90715 : Type'} : (@all _90715) = (@all _90715).
Proof. exact (eq_refl (@all _90715)). Qed.
Lemma lem3515726 {_90715 B : Type'} (_37166 : type627 _90715 B) (u : _90715 -> Prop) (f : _90715 -> B) (t : _90715 -> Prop) : (term2204 _90715 B _37166 u f t) = (term2204 _90715 B _37166 u f t).
Proof. exact (MK_COMB (@lem3515725 _90715) (@lem3515724 _90715 B _37166 u f t)). Qed.
Lemma lem3515727 {_90715 B : Type'} (_37166 : type627 _90715 B) (u : _90715 -> Prop) (f : _90715 -> B) : (term2205 _90715 B _37166 u f) = (term2205 _90715 B _37166 u f).
Proof. exact (fun_ext (fun t : _90715 -> Prop => @lem3515726 _90715 B _37166 u f t)). Qed.
Lemma lem3515728 {_90715 : Type'} : (@all (_90715 -> Prop)) = (@all (_90715 -> Prop)).
Proof. exact (eq_refl (@all (_90715 -> Prop))). Qed.
Lemma lem3515729 {_90715 B : Type'} (_37166 : type627 _90715 B) (u : _90715 -> Prop) (f : _90715 -> B) : (term2206 _90715 B _37166 u f) = (term2206 _90715 B _37166 u f).
Proof. exact (MK_COMB (@lem3515728 _90715) (@lem3515727 _90715 B _37166 u f)). Qed.
Lemma lem3515730 {_90715 B : Type'} (_37166 : type627 _90715 B) (u : _90715 -> Prop) : (term2207 _90715 B _37166 u) = (term2207 _90715 B _37166 u).
Proof. exact (fun_ext (fun f : _90715 -> B => @lem3515729 _90715 B _37166 u f)). Qed.
Lemma lem3515731 {_90715 B : Type'} : (@all (_90715 -> B)) = (@all (_90715 -> B)).
Proof. exact (eq_refl (@all (_90715 -> B))). Qed.
Lemma lem3515732 {_90715 B : Type'} (_37166 : type627 _90715 B) (u : _90715 -> Prop) : (term2208 _90715 B _37166 u) = (term2208 _90715 B _37166 u).
Proof. exact (MK_COMB (@lem3515731 _90715 B) (@lem3515730 _90715 B _37166 u)). Qed.
Lemma lem3515733 {_90715 B : Type'} (_37166 : type627 _90715 B) : (term2209 _90715 B _37166) = (term2209 _90715 B _37166).
Proof. exact (fun_ext (fun u : _90715 -> Prop => @lem3515732 _90715 B _37166 u)). Qed.
Lemma lem3515734 {_90715 : Type'} : (@all (_90715 -> Prop)) = (@all (_90715 -> Prop)).
Proof. exact (eq_refl (@all (_90715 -> Prop))). Qed.
Lemma lem3515735 {_90715 B : Type'} (_37166 : type627 _90715 B) : (term2210 _90715 B _37166) = (term2210 _90715 B _37166).
Proof. exact (MK_COMB (@lem3515734 _90715) (@lem3515733 _90715 B _37166)). Qed.
Lemma lem3515736 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem3515737 {_90715 B : Type'} (_37166 : type627 _90715 B) : (term2211 _90715 B _37166) = (term2211 _90715 B _37166).
Proof. exact (MK_COMB (@lem3515736) (@lem3515735 _90715 B _37166)). Qed.
Lemma lem3515738 {_90715 _90724 A B : Type'} (_37166 : type627 _90715 B) (_37167 : type616 _90715 A) (_37168 : type852 _90724 A) (_37169 : type852 _90724 B) (h1 : _37169 = (term2440 _90724 B)) : (term2487 _90715 _90724 A B _37166 _37167 _37168) = (term2581 _90715 _90724 A B _37166 _37167 _37168 _37169).
Proof. exact (MK_COMB (@lem3515737 _90715 B _37166) (@lem3515683 _90715 _90724 A B _37166 _37167 _37168 _37169 h1)). Qed.
Lemma lem3515739 {_90715 _90724 A B : Type'} (_37167 : type616 _90715 A) (_37168 : type852 _90724 A) (_37169 : type852 _90724 B) (h1 : _37169 = (term2440 _90724 B)) : (term2488 _90715 _90724 A B _37167 _37168) = (term2582 _90715 _90724 A B _37167 _37168 _37169).
Proof. exact (fun_ext (fun _37166 : type627 _90715 B => @lem3515738 _90715 _90724 A B _37166 _37167 _37168 _37169 h1)). Qed.
Lemma lem3515740 {_90715 B : Type'} : (@all ((_90715 -> Prop) -> (_90715 -> B) -> (_90715 -> Prop) -> _90715 -> Prop)) = (@all ((_90715 -> Prop) -> (_90715 -> B) -> (_90715 -> Prop) -> _90715 -> Prop)).
Proof. exact (eq_refl (@all ((_90715 -> Prop) -> (_90715 -> B) -> (_90715 -> Prop) -> _90715 -> Prop))). Qed.
Lemma lem3515741 {_90715 _90724 A B : Type'} (_37167 : type616 _90715 A) (_37168 : type852 _90724 A) (_37169 : type852 _90724 B) (h1 : _37169 = (term2440 _90724 B)) : (term2489 _90715 _90724 A B _37167 _37168) = (term2583 _90715 _90724 A B _37167 _37168 _37169).
Proof. exact (MK_COMB (@lem3515740 _90715 B) (@lem3515739 _90715 _90724 A B _37167 _37168 _37169 h1)). Qed.
Lemma lem3515766 {_90715 A : Type'} (GEN_PVAR_84 : _90715) (u : _90715 -> Prop) (f : type1413 _90715 A) (t : _90715 -> Prop) (x : _90715) : (term2101 _90715 A GEN_PVAR_84 u f t x) = (term2101 _90715 A GEN_PVAR_84 u f t x).
Proof. exact (eq_refl (term2101 _90715 A GEN_PVAR_84 u f t x)). Qed.
Lemma lem3515767 {_90715 A : Type'} (GEN_PVAR_84 : _90715) (u : _90715 -> Prop) (f : type1413 _90715 A) (t : _90715 -> Prop) : (term2102 _90715 A GEN_PVAR_84 u f t) = (term2102 _90715 A GEN_PVAR_84 u f t).
Proof. exact (fun_ext (fun x : _90715 => @lem3515766 _90715 A GEN_PVAR_84 u f t x)). Qed.
Lemma lem3515768 {_90715 : Type'} : (@ex _90715) = (@ex _90715).
Proof. exact (eq_refl (@ex _90715)). Qed.
Lemma lem3515769 {_90715 A : Type'} (GEN_PVAR_84 : _90715) (u : _90715 -> Prop) (f : type1413 _90715 A) (t : _90715 -> Prop) : (term2103 _90715 A GEN_PVAR_84 u f t) = (term2103 _90715 A GEN_PVAR_84 u f t).
Proof. exact (MK_COMB (@lem3515768 _90715) (@lem3515767 _90715 A GEN_PVAR_84 u f t)). Qed.
Lemma lem3515780 {_90715 A : Type'} (_37167 : type616 _90715 A) (u : _90715 -> Prop) (f : type1413 _90715 A) (t : _90715 -> Prop) (GEN_PVAR_84 : _90715) : (term2426 _90715 A _37167 u f t GEN_PVAR_84) = (term2426 _90715 A _37167 u f t GEN_PVAR_84).
Proof. exact (eq_refl (term2426 _90715 A _37167 u f t GEN_PVAR_84)). Qed.
Lemma lem3515781 {_90715 A : Type'} (_37167 : type616 _90715 A) (GEN_PVAR_84 : _90715) (u : _90715 -> Prop) (f : type1413 _90715 A) (t : _90715 -> Prop) : ((_37167 u f t GEN_PVAR_84) = (term2103 _90715 A GEN_PVAR_84 u f t)) = ((_37167 u f t GEN_PVAR_84) = (term2103 _90715 A GEN_PVAR_84 u f t)).
Proof. exact (MK_COMB (@lem3515780 _90715 A _37167 u f t GEN_PVAR_84) (@lem3515769 _90715 A GEN_PVAR_84 u f t)). Qed.
Lemma lem3515782 {_90715 A : Type'} (_37167 : type616 _90715 A) (u : _90715 -> Prop) (f : type1413 _90715 A) (t : _90715 -> Prop) : (term2428 _90715 A _37167 u f t) = (term2428 _90715 A _37167 u f t).
Proof. exact (fun_ext (fun GEN_PVAR_84 : _90715 => @lem3515781 _90715 A _37167 GEN_PVAR_84 u f t)). Qed.
Lemma lem3515783 {_90715 : Type'} : (@all _90715) = (@all _90715).
Proof. exact (eq_refl (@all _90715)). Qed.
Lemma lem3515784 {_90715 A : Type'} (_37167 : type616 _90715 A) (u : _90715 -> Prop) (f : type1413 _90715 A) (t : _90715 -> Prop) : (term2429 _90715 A _37167 u f t) = (term2429 _90715 A _37167 u f t).
Proof. exact (MK_COMB (@lem3515783 _90715) (@lem3515782 _90715 A _37167 u f t)). Qed.
Lemma lem3515785 {_90715 A : Type'} (_37167 : type616 _90715 A) (u : _90715 -> Prop) (f : type1413 _90715 A) : (term2430 _90715 A _37167 u f) = (term2430 _90715 A _37167 u f).
Proof. exact (fun_ext (fun t : _90715 -> Prop => @lem3515784 _90715 A _37167 u f t)). Qed.
Lemma lem3515786 {_90715 : Type'} : (@all (_90715 -> Prop)) = (@all (_90715 -> Prop)).
Proof. exact (eq_refl (@all (_90715 -> Prop))). Qed.
Lemma lem3515787 {_90715 A : Type'} (_37167 : type616 _90715 A) (u : _90715 -> Prop) (f : type1413 _90715 A) : (term2431 _90715 A _37167 u f) = (term2431 _90715 A _37167 u f).
Proof. exact (MK_COMB (@lem3515786 _90715) (@lem3515785 _90715 A _37167 u f)). Qed.
Lemma lem3515788 {_90715 A : Type'} (_37167 : type616 _90715 A) (u : _90715 -> Prop) : (term2432 _90715 A _37167 u) = (term2432 _90715 A _37167 u).
Proof. exact (fun_ext (fun f : type1413 _90715 A => @lem3515787 _90715 A _37167 u f)). Qed.
Lemma lem3515789 {_90715 A : Type'} : (@all (_90715 -> A -> Prop)) = (@all (_90715 -> A -> Prop)).
Proof. exact (eq_refl (@all (_90715 -> A -> Prop))). Qed.
Lemma lem3515790 {_90715 A : Type'} (_37167 : type616 _90715 A) (u : _90715 -> Prop) : (term2433 _90715 A _37167 u) = (term2433 _90715 A _37167 u).
Proof. exact (MK_COMB (@lem3515789 _90715 A) (@lem3515788 _90715 A _37167 u)). Qed.
Lemma lem3515791 {_90715 A : Type'} (_37167 : type616 _90715 A) : (term2434 _90715 A _37167) = (term2434 _90715 A _37167).
Proof. exact (fun_ext (fun u : _90715 -> Prop => @lem3515790 _90715 A _37167 u)). Qed.
Lemma lem3515792 {_90715 : Type'} : (@all (_90715 -> Prop)) = (@all (_90715 -> Prop)).
Proof. exact (eq_refl (@all (_90715 -> Prop))). Qed.
Lemma lem3515793 {_90715 A : Type'} (_37167 : type616 _90715 A) : (term2435 _90715 A _37167) = (term2435 _90715 A _37167).
Proof. exact (MK_COMB (@lem3515792 _90715) (@lem3515791 _90715 A _37167)). Qed.
Lemma lem3515794 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem3515795 {_90715 A : Type'} (_37167 : type616 _90715 A) : (term2436 _90715 A _37167) = (term2436 _90715 A _37167).
Proof. exact (MK_COMB (@lem3515794) (@lem3515793 _90715 A _37167)). Qed.
Lemma lem3515796 {_90715 _90724 A B : Type'} (_37167 : type616 _90715 A) (_37168 : type852 _90724 A) (_37169 : type852 _90724 B) (h1 : _37169 = (term2440 _90724 B)) : (term2490 _90715 _90724 A B _37167 _37168) = (term2584 _90715 _90724 A B _37167 _37168 _37169).
Proof. exact (MK_COMB (@lem3515795 _90715 A _37167) (@lem3515741 _90715 _90724 A B _37167 _37168 _37169 h1)). Qed.
Lemma lem3515797 {_90715 _90724 A B : Type'} (_37168 : type852 _90724 A) (_37169 : type852 _90724 B) (h1 : _37169 = (term2440 _90724 B)) : (term2491 _90715 _90724 A B _37168) = (term2585 _90715 _90724 A B _37168 _37169).
Proof. exact (fun_ext (fun _37167 : type616 _90715 A => @lem3515796 _90715 _90724 A B _37167 _37168 _37169 h1)). Qed.
Lemma lem3515798 {_90715 A : Type'} : (@all ((_90715 -> Prop) -> (_90715 -> A -> Prop) -> (_90715 -> Prop) -> _90715 -> Prop)) = (@all ((_90715 -> Prop) -> (_90715 -> A -> Prop) -> (_90715 -> Prop) -> _90715 -> Prop)).
Proof. exact (eq_refl (@all ((_90715 -> Prop) -> (_90715 -> A -> Prop) -> (_90715 -> Prop) -> _90715 -> Prop))). Qed.
Lemma lem3515799 {_90715 _90724 A B : Type'} (_37168 : type852 _90724 A) (_37169 : type852 _90724 B) (h1 : _37169 = (term2440 _90724 B)) : (term2492 _90715 _90724 A B _37168) = (term2586 _90715 _90724 A B _37168 _37169).
Proof. exact (MK_COMB (@lem3515798 _90715 A) (@lem3515797 _90715 _90724 A B _37168 _37169 h1)). Qed.
Lemma lem3515824 {_90724 A : Type'} (GEN_PVAR_84 : A) (u : A -> Prop) (f : A -> _90724) (t : A -> Prop) (x : A) : (term2058 _90724 A GEN_PVAR_84 u f t x) = (term2058 _90724 A GEN_PVAR_84 u f t x).
Proof. exact (eq_refl (term2058 _90724 A GEN_PVAR_84 u f t x)). Qed.
Lemma lem3515825 {_90724 A : Type'} (GEN_PVAR_84 : A) (u : A -> Prop) (f : A -> _90724) (t : A -> Prop) : (term2059 _90724 A GEN_PVAR_84 u f t) = (term2059 _90724 A GEN_PVAR_84 u f t).
Proof. exact (fun_ext (fun x : A => @lem3515824 _90724 A GEN_PVAR_84 u f t x)). Qed.
Lemma lem3515826 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem3515827 {_90724 A : Type'} (GEN_PVAR_84 : A) (u : A -> Prop) (f : A -> _90724) (t : A -> Prop) : (term2060 _90724 A GEN_PVAR_84 u f t) = (term2060 _90724 A GEN_PVAR_84 u f t).
Proof. exact (MK_COMB (@lem3515826 A) (@lem3515825 _90724 A GEN_PVAR_84 u f t)). Qed.
Lemma lem3515838 {_90724 A : Type'} (_37168 : type852 _90724 A) (u : A -> Prop) (f : A -> _90724) (t : A -> Prop) (GEN_PVAR_84 : A) : (term2544 _90724 A _37168 u f t GEN_PVAR_84) = (term2544 _90724 A _37168 u f t GEN_PVAR_84).
Proof. exact (eq_refl (term2544 _90724 A _37168 u f t GEN_PVAR_84)). Qed.
Lemma lem3515839 {_90724 A : Type'} (_37168 : type852 _90724 A) (GEN_PVAR_84 : A) (u : A -> Prop) (f : A -> _90724) (t : A -> Prop) : ((_37168 u f t GEN_PVAR_84) = (term2060 _90724 A GEN_PVAR_84 u f t)) = ((_37168 u f t GEN_PVAR_84) = (term2060 _90724 A GEN_PVAR_84 u f t)).
Proof. exact (MK_COMB (@lem3515838 _90724 A _37168 u f t GEN_PVAR_84) (@lem3515827 _90724 A GEN_PVAR_84 u f t)). Qed.
Lemma lem3515840 {_90724 A : Type'} (_37168 : type852 _90724 A) (u : A -> Prop) (f : A -> _90724) (t : A -> Prop) : (term2546 _90724 A _37168 u f t) = (term2546 _90724 A _37168 u f t).
Proof. exact (fun_ext (fun GEN_PVAR_84 : A => @lem3515839 _90724 A _37168 GEN_PVAR_84 u f t)). Qed.
Lemma lem3515841 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem3515842 {_90724 A : Type'} (_37168 : type852 _90724 A) (u : A -> Prop) (f : A -> _90724) (t : A -> Prop) : (term2547 _90724 A _37168 u f t) = (term2547 _90724 A _37168 u f t).
Proof. exact (MK_COMB (@lem3515841 A) (@lem3515840 _90724 A _37168 u f t)). Qed.
Lemma lem3515843 {_90724 A : Type'} (_37168 : type852 _90724 A) (u : A -> Prop) (f : A -> _90724) : (term2548 _90724 A _37168 u f) = (term2548 _90724 A _37168 u f).
Proof. exact (fun_ext (fun t : A -> Prop => @lem3515842 _90724 A _37168 u f t)). Qed.
Lemma lem3515844 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem3515845 {_90724 A : Type'} (_37168 : type852 _90724 A) (u : A -> Prop) (f : A -> _90724) : (term2549 _90724 A _37168 u f) = (term2549 _90724 A _37168 u f).
Proof. exact (MK_COMB (@lem3515844 A) (@lem3515843 _90724 A _37168 u f)). Qed.
Lemma lem3515846 {_90724 A : Type'} (_37168 : type852 _90724 A) (u : A -> Prop) : (term2550 _90724 A _37168 u) = (term2550 _90724 A _37168 u).
Proof. exact (fun_ext (fun f : A -> _90724 => @lem3515845 _90724 A _37168 u f)). Qed.
Lemma lem3515847 {_90724 A : Type'} : (@all (A -> _90724)) = (@all (A -> _90724)).
Proof. exact (eq_refl (@all (A -> _90724))). Qed.
Lemma lem3515848 {_90724 A : Type'} (_37168 : type852 _90724 A) (u : A -> Prop) : (term2551 _90724 A _37168 u) = (term2551 _90724 A _37168 u).
Proof. exact (MK_COMB (@lem3515847 _90724 A) (@lem3515846 _90724 A _37168 u)). Qed.
Lemma lem3515849 {_90724 A : Type'} (_37168 : type852 _90724 A) : (term2552 _90724 A _37168) = (term2552 _90724 A _37168).
Proof. exact (fun_ext (fun u : A -> Prop => @lem3515848 _90724 A _37168 u)). Qed.
Lemma lem3515850 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem3515851 {_90724 A : Type'} (_37168 : type852 _90724 A) : (term2553 _90724 A _37168) = (term2553 _90724 A _37168).
Proof. exact (MK_COMB (@lem3515850 A) (@lem3515849 _90724 A _37168)). Qed.
Lemma lem3515852 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem3515853 {_90724 A : Type'} (_37168 : type852 _90724 A) : (term2554 _90724 A _37168) = (term2554 _90724 A _37168).
Proof. exact (MK_COMB (@lem3515852) (@lem3515851 _90724 A _37168)). Qed.
Lemma lem3515854 {_90715 _90724 A B : Type'} (_37168 : type852 _90724 A) (_37169 : type852 _90724 B) (h1 : _37169 = (term2440 _90724 B)) : (term2555 _90715 _90724 A B _37168) = (term2587 _90715 _90724 A B _37168 _37169).
Proof. exact (MK_COMB (@lem3515853 _90724 A _37168) (@lem3515799 _90715 _90724 A B _37168 _37169 h1)). Qed.
Lemma lem3515855 {_90715 _90724 A B : Type'} (_37169 : type852 _90724 B) (h1 : _37169 = (term2440 _90724 B)) : (term2556 _90715 _90724 A B) = (term2588 _90715 _90724 A B _37169).
Proof. exact (fun_ext (fun _37168 : type852 _90724 A => @lem3515854 _90715 _90724 A B _37168 _37169 h1)). Qed.
Lemma lem3515856 {_90724 A : Type'} : (@all ((A -> Prop) -> (A -> _90724) -> (A -> Prop) -> A -> Prop)) = (@all ((A -> Prop) -> (A -> _90724) -> (A -> Prop) -> A -> Prop)).
Proof. exact (eq_refl (@all ((A -> Prop) -> (A -> _90724) -> (A -> Prop) -> A -> Prop))). Qed.
Lemma lem3515857 {_90715 _90724 A B : Type'} (_37169 : type852 _90724 B) (h1 : _37169 = (term2440 _90724 B)) : (term2557 _90715 _90724 A B) = (term2589 _90715 _90724 A B _37169).
Proof. exact (MK_COMB (@lem3515856 _90724 A) (@lem3515855 _90715 _90724 A B _37169 h1)). Qed.
Lemma lem3515858 {_90715 _90724 A B : Type'} (_37169 : type852 _90724 B) : term2590 _90715 _90724 A B _37169.
Proof. exact (fun h0 : _37169 = (term2440 _90724 B) => @lem3515857 _90715 _90724 A B _37169 h0). Qed.
Lemma lem3515859 {_90715 _90724 A B : Type'} : term2591 _90715 _90724 A B.
Proof. exact (fun _37169 : type852 _90724 B => @lem3515858 _90715 _90724 A B _37169). Qed.
Lemma lem3515861 {_3603 : Type'} (P : Prop) (c : _3603) (Q : _3603 -> Prop) : term2146 _3603 P c Q.
Proof. exact (EQ_MP (@lem20230 _3603 P c Q) (@lem0)). Qed.
Lemma lem3515862 {_90724 B : Type'} (P : Prop) (c : type852 _90724 B) (Q : type222 _90724 B) : term2495 _90724 B P c Q.
Proof. exact (@lem3515861 (type852 _90724 B) P c Q). Qed.
Lemma lem3515863 {_90715 _90724 A B : Type'} : term2592 _90715 _90724 A B.
Proof. exact (@lem3515862 _90724 B (term2557 _90715 _90724 A B) (term2440 _90724 B) (term2593 _90715 _90724 A B)). Qed.
Lemma lem3515864 {_90715 _90724 A B : Type'} (_37169 : type852 _90724 B) : (term2594 _90715 _90724 A B _37169) = (term2589 _90715 _90724 A B _37169).
Proof. exact (eq_refl (term2594 _90715 _90724 A B _37169)). Qed.
Lemma lem3515865 {_90715 _90724 A B : Type'} : (term2595 _90715 _90724 A B) = (term2595 _90715 _90724 A B).
Proof. exact (eq_refl (term2595 _90715 _90724 A B)). Qed.
Lemma lem3515866 {_90715 _90724 A B : Type'} (_37169 : type852 _90724 B) : ((term2557 _90715 _90724 A B) = (term2594 _90715 _90724 A B _37169)) = ((term2557 _90715 _90724 A B) = (term2589 _90715 _90724 A B _37169)).
Proof. exact (MK_COMB (@lem3515865 _90715 _90724 A B) (@lem3515864 _90715 _90724 A B _37169)). Qed.
Lemma lem3515867 {_90724 B : Type'} (_37169 : type852 _90724 B) : (term2500 _90724 B _37169) = (term2500 _90724 B _37169).
Proof. exact (eq_refl (term2500 _90724 B _37169)). Qed.
Lemma lem3515868 {_90715 _90724 A B : Type'} (_37169 : type852 _90724 B) : (term2596 _90715 _90724 A B _37169) = (term2590 _90715 _90724 A B _37169).
Proof. exact (MK_COMB (@lem3515867 _90724 B _37169) (@lem3515866 _90715 _90724 A B _37169)). Qed.
Lemma lem3515869 {_90715 _90724 A B : Type'} : (term2597 _90715 _90724 A B) = (term2598 _90715 _90724 A B).
Proof. exact (fun_ext (fun _37169 : type852 _90724 B => @lem3515868 _90715 _90724 A B _37169)). Qed.
Lemma lem3515870 {_90724 B : Type'} : (@all ((B -> Prop) -> (B -> _90724) -> (B -> Prop) -> B -> Prop)) = (@all ((B -> Prop) -> (B -> _90724) -> (B -> Prop) -> B -> Prop)).
Proof. exact (eq_refl (@all ((B -> Prop) -> (B -> _90724) -> (B -> Prop) -> B -> Prop))). Qed.
Lemma lem3515871 {_90715 _90724 A B : Type'} : (term2599 _90715 _90724 A B) = (term2591 _90715 _90724 A B).
Proof. exact (MK_COMB (@lem3515870 _90724 B) (@lem3515869 _90715 _90724 A B)). Qed.
Lemma lem3515872 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem3515873 {_90715 _90724 A B : Type'} : (term2600 _90715 _90724 A B) = (term2601 _90715 _90724 A B).
Proof. exact (MK_COMB (@lem3515872) (@lem3515871 _90715 _90724 A B)). Qed.
Lemma lem3515874 {_90715 _90724 A B : Type'} (_37169 : type852 _90724 B) : (term2594 _90715 _90724 A B _37169) = (term2589 _90715 _90724 A B _37169).
Proof. exact (eq_refl (term2594 _90715 _90724 A B _37169)). Qed.
Lemma lem3515875 {_90724 B : Type'} (_37169 : type852 _90724 B) : (term2500 _90724 B _37169) = (term2500 _90724 B _37169).
Proof. exact (eq_refl (term2500 _90724 B _37169)). Qed.
Lemma lem3515876 {_90715 _90724 A B : Type'} (_37169 : type852 _90724 B) : (term2602 _90715 _90724 A B _37169) = (term2603 _90715 _90724 A B _37169).
Proof. exact (MK_COMB (@lem3515875 _90724 B _37169) (@lem3515874 _90715 _90724 A B _37169)). Qed.
Lemma lem3515877 {_90715 _90724 A B : Type'} : (term2604 _90715 _90724 A B) = (term2605 _90715 _90724 A B).
Proof. exact (fun_ext (fun _37169 : type852 _90724 B => @lem3515876 _90715 _90724 A B _37169)). Qed.
Lemma lem3515878 {_90724 B : Type'} : (@all ((B -> Prop) -> (B -> _90724) -> (B -> Prop) -> B -> Prop)) = (@all ((B -> Prop) -> (B -> _90724) -> (B -> Prop) -> B -> Prop)).
Proof. exact (eq_refl (@all ((B -> Prop) -> (B -> _90724) -> (B -> Prop) -> B -> Prop))). Qed.
Lemma lem3515879 {_90715 _90724 A B : Type'} : (term2606 _90715 _90724 A B) = (term2607 _90715 _90724 A B).
Proof. exact (MK_COMB (@lem3515878 _90724 B) (@lem3515877 _90715 _90724 A B)). Qed.
Lemma lem3515880 {_90715 _90724 A B : Type'} : (term2595 _90715 _90724 A B) = (term2595 _90715 _90724 A B).
Proof. exact (eq_refl (term2595 _90715 _90724 A B)). Qed.
Lemma lem3515881 {_90715 _90724 A B : Type'} : ((term2557 _90715 _90724 A B) = (term2606 _90715 _90724 A B)) = ((term2557 _90715 _90724 A B) = (term2607 _90715 _90724 A B)).
Proof. exact (MK_COMB (@lem3515880 _90715 _90724 A B) (@lem3515879 _90715 _90724 A B)). Qed.
Lemma lem3515882 {_90715 _90724 A B : Type'} : (term2592 _90715 _90724 A B) = (term2608 _90715 _90724 A B).
Proof. exact (MK_COMB (@lem3515873 _90715 _90724 A B) (@lem3515881 _90715 _90724 A B)). Qed.
Lemma lem3515883 {_90715 _90724 A B : Type'} : term2608 _90715 _90724 A B.
Proof. exact (EQ_MP (@lem3515882 _90715 _90724 A B) (@lem3515863 _90715 _90724 A B)). Qed.
Lemma lem3515884 {_90715 _90724 A B : Type'} : (term2557 _90715 _90724 A B) = (term2607 _90715 _90724 A B).
Proof. exact (@lem3515883 _90715 _90724 A B (@lem3515859 _90715 _90724 A B)). Qed.
Lemma lem3515886 {_3571 _3575 : Type'} (s : _3575 -> _3571) (t : _3575 -> _3571) : (s = (term2166 _3571 _3575 t)) = (term2167 _3571 _3575 s t).
Proof. exact (EQ_MP (@lem19792 _3571 _3575 s t) (@lem0)). Qed.
Lemma lem3515887 {_90724 B : Type'} (s : type852 _90724 B) (t : type852 _90724 B) : (s = (term2514 _90724 B t)) = (term2515 _90724 B s t).
Proof. exact (@lem3515886 (type789 _90724 B) (B -> Prop) s t). Qed.
Lemma lem3515888 {_90724 B : Type'} (_37169 : type852 _90724 B) : (_37169 = (term2516 _90724 B)) = (term2517 _90724 B _37169).
Proof. exact (@lem3515887 _90724 B _37169 (term2440 _90724 B)). Qed.
Lemma lem3515889 {_90724 B : Type'} (u : B -> Prop) : (term2441 _90724 B u) = (term2442 _90724 B u).
Proof. exact (eq_refl (term2441 _90724 B u)). Qed.
Lemma lem3515890 {_90724 B : Type'} : (term2516 _90724 B) = (term2440 _90724 B).
Proof. exact (fun_ext (fun u : B -> Prop => @lem3515889 _90724 B u)). Qed.
Lemma lem3515891 {_90724 B : Type'} (_37169 : type852 _90724 B) : (@eq ((B -> Prop) -> (B -> _90724) -> (B -> Prop) -> B -> Prop) _37169) = (@eq ((B -> Prop) -> (B -> _90724) -> (B -> Prop) -> B -> Prop) _37169).
Proof. exact (eq_refl (@eq ((B -> Prop) -> (B -> _90724) -> (B -> Prop) -> B -> Prop) _37169)). Qed.
Lemma lem3515892 {_90724 B : Type'} (_37169 : type852 _90724 B) : (_37169 = (term2516 _90724 B)) = (_37169 = (term2440 _90724 B)).
Proof. exact (MK_COMB (@lem3515891 _90724 B _37169) (@lem3515890 _90724 B)). Qed.
Lemma lem3515893 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem3515894 {_90724 B : Type'} (_37169 : type852 _90724 B) : (term2518 _90724 B _37169) = (term2519 _90724 B _37169).
Proof. exact (MK_COMB (@lem3515893) (@lem3515892 _90724 B _37169)). Qed.
Lemma lem3515895 {_90724 B : Type'} (u : B -> Prop) : (term2441 _90724 B u) = (term2442 _90724 B u).
Proof. exact (eq_refl (term2441 _90724 B u)). Qed.
Lemma lem3515896 {_90724 B : Type'} (_37169 : type852 _90724 B) (u : B -> Prop) : (term2443 _90724 B _37169 u) = (term2443 _90724 B _37169 u).
Proof. exact (eq_refl (term2443 _90724 B _37169 u)). Qed.
Lemma lem3515897 {_90724 B : Type'} (_37169 : type852 _90724 B) (u : B -> Prop) : ((_37169 u) = (term2441 _90724 B u)) = ((_37169 u) = (term2442 _90724 B u)).
Proof. exact (MK_COMB (@lem3515896 _90724 B _37169 u) (@lem3515895 _90724 B u)). Qed.
Lemma lem3515898 {_90724 B : Type'} (_37169 : type852 _90724 B) : (term2520 _90724 B _37169) = (term2521 _90724 B _37169).
Proof. exact (fun_ext (fun u : B -> Prop => @lem3515897 _90724 B _37169 u)). Qed.
Lemma lem3515899 {B : Type'} : (@all (B -> Prop)) = (@all (B -> Prop)).
Proof. exact (eq_refl (@all (B -> Prop))). Qed.
Lemma lem3515900 {_90724 B : Type'} (_37169 : type852 _90724 B) : (term2517 _90724 B _37169) = (term2522 _90724 B _37169).
Proof. exact (MK_COMB (@lem3515899 B) (@lem3515898 _90724 B _37169)). Qed.
Lemma lem3515901 {_90724 B : Type'} (_37169 : type852 _90724 B) : ((_37169 = (term2516 _90724 B)) = (term2517 _90724 B _37169)) = ((_37169 = (term2440 _90724 B)) = (term2522 _90724 B _37169)).
Proof. exact (MK_COMB (@lem3515894 _90724 B _37169) (@lem3515900 _90724 B _37169)). Qed.
Lemma lem3515902 {_90724 B : Type'} (_37169 : type852 _90724 B) : (_37169 = (term2440 _90724 B)) = (term2522 _90724 B _37169).
Proof. exact (EQ_MP (@lem3515901 _90724 B _37169) (@lem3515888 _90724 B _37169)). Qed.
Lemma lem3515904 {_3571 _3575 : Type'} (s : _3575 -> _3571) (t : _3575 -> _3571) : (s = (term2166 _3571 _3575 t)) = (term2167 _3571 _3575 s t).
Proof. exact (EQ_MP (@lem19792 _3571 _3575 s t) (@lem0)). Qed.
Lemma lem3515905 {_90724 B : Type'} (s : type789 _90724 B) (t : type789 _90724 B) : (s = (term2523 _90724 B t)) = (term2524 _90724 B s t).
Proof. exact (@lem3515904 (type672 B) (B -> _90724) s t). Qed.
Lemma lem3515906 {_90724 B : Type'} (_37169 : type852 _90724 B) (u : B -> Prop) : ((_37169 u) = (term2525 _90724 B u)) = (term2526 _90724 B _37169 u).
Proof. exact (@lem3515905 _90724 B (_37169 u) (term2442 _90724 B u)). Qed.
Lemma lem3515907 {_90724 B : Type'} (u : B -> Prop) (f : B -> _90724) : (term2444 _90724 B u f) = (term2445 _90724 B u f).
Proof. exact (eq_refl (term2444 _90724 B u f)). Qed.
Lemma lem3515908 {_90724 B : Type'} (u : B -> Prop) : (term2525 _90724 B u) = (term2442 _90724 B u).
Proof. exact (fun_ext (fun f : B -> _90724 => @lem3515907 _90724 B u f)). Qed.
Lemma lem3515909 {_90724 B : Type'} (_37169 : type852 _90724 B) (u : B -> Prop) : (term2443 _90724 B _37169 u) = (term2443 _90724 B _37169 u).
Proof. exact (eq_refl (term2443 _90724 B _37169 u)). Qed.
Lemma lem3515910 {_90724 B : Type'} (_37169 : type852 _90724 B) (u : B -> Prop) : ((_37169 u) = (term2525 _90724 B u)) = ((_37169 u) = (term2442 _90724 B u)).
Proof. exact (MK_COMB (@lem3515909 _90724 B _37169 u) (@lem3515908 _90724 B u)). Qed.
Lemma lem3515911 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem3515912 {_90724 B : Type'} (_37169 : type852 _90724 B) (u : B -> Prop) : (term2527 _90724 B _37169 u) = (term2528 _90724 B _37169 u).
Proof. exact (MK_COMB (@lem3515911) (@lem3515910 _90724 B _37169 u)). Qed.
Lemma lem3515913 {_90724 B : Type'} (u : B -> Prop) (f : B -> _90724) : (term2444 _90724 B u f) = (term2445 _90724 B u f).
Proof. exact (eq_refl (term2444 _90724 B u f)). Qed.
Lemma lem3515914 {_90724 B : Type'} (_37169 : type852 _90724 B) (u : B -> Prop) (f : B -> _90724) : (term2446 _90724 B _37169 u f) = (term2446 _90724 B _37169 u f).
Proof. exact (eq_refl (term2446 _90724 B _37169 u f)). Qed.
Lemma lem3515915 {_90724 B : Type'} (_37169 : type852 _90724 B) (u : B -> Prop) (f : B -> _90724) : ((_37169 u f) = (term2444 _90724 B u f)) = ((_37169 u f) = (term2445 _90724 B u f)).
Proof. exact (MK_COMB (@lem3515914 _90724 B _37169 u f) (@lem3515913 _90724 B u f)). Qed.
Lemma lem3515916 {_90724 B : Type'} (_37169 : type852 _90724 B) (u : B -> Prop) : (term2529 _90724 B _37169 u) = (term2530 _90724 B _37169 u).
Proof. exact (fun_ext (fun f : B -> _90724 => @lem3515915 _90724 B _37169 u f)). Qed.
Lemma lem3515917 {_90724 B : Type'} : (@all (B -> _90724)) = (@all (B -> _90724)).
Proof. exact (eq_refl (@all (B -> _90724))). Qed.
Lemma lem3515918 {_90724 B : Type'} (_37169 : type852 _90724 B) (u : B -> Prop) : (term2526 _90724 B _37169 u) = (term2531 _90724 B _37169 u).
Proof. exact (MK_COMB (@lem3515917 _90724 B) (@lem3515916 _90724 B _37169 u)). Qed.
Lemma lem3515919 {_90724 B : Type'} (_37169 : type852 _90724 B) (u : B -> Prop) : (((_37169 u) = (term2525 _90724 B u)) = (term2526 _90724 B _37169 u)) = (((_37169 u) = (term2442 _90724 B u)) = (term2531 _90724 B _37169 u)).
Proof. exact (MK_COMB (@lem3515912 _90724 B _37169 u) (@lem3515918 _90724 B _37169 u)). Qed.
Lemma lem3515920 {_90724 B : Type'} (_37169 : type852 _90724 B) (u : B -> Prop) : ((_37169 u) = (term2442 _90724 B u)) = (term2531 _90724 B _37169 u).
Proof. exact (EQ_MP (@lem3515919 _90724 B _37169 u) (@lem3515906 _90724 B _37169 u)). Qed.
Lemma lem3515922 {_3571 _3575 : Type'} (s : _3575 -> _3571) (t : _3575 -> _3571) : (s = (term2166 _3571 _3575 t)) = (term2167 _3571 _3575 s t).
Proof. exact (EQ_MP (@lem19792 _3571 _3575 s t) (@lem0)). Qed.
Lemma lem3515923 {B : Type'} (s : type672 B) (t : type672 B) : (s = (term2186 B t)) = (term2187 B s t).
Proof. exact (@lem3515922 (B -> Prop) (B -> Prop) s t). Qed.
Lemma lem3515924 {_90724 B : Type'} (_37169 : type852 _90724 B) (u : B -> Prop) (f : B -> _90724) : ((_37169 u f) = (term2532 _90724 B u f)) = (term2533 _90724 B _37169 u f).
Proof. exact (@lem3515923 B (_37169 u f) (term2445 _90724 B u f)). Qed.
Lemma lem3515925 {_90724 B : Type'} (u : B -> Prop) (f : B -> _90724) (t : B -> Prop) : (term2447 _90724 B u f t) = (term2061 _90724 B u f t).
Proof. exact (eq_refl (term2447 _90724 B u f t)). Qed.
Lemma lem3515926 {_90724 B : Type'} (u : B -> Prop) (f : B -> _90724) : (term2532 _90724 B u f) = (term2445 _90724 B u f).
Proof. exact (fun_ext (fun t : B -> Prop => @lem3515925 _90724 B u f t)). Qed.
Lemma lem3515927 {_90724 B : Type'} (_37169 : type852 _90724 B) (u : B -> Prop) (f : B -> _90724) : (term2446 _90724 B _37169 u f) = (term2446 _90724 B _37169 u f).
Proof. exact (eq_refl (term2446 _90724 B _37169 u f)). Qed.
Lemma lem3515928 {_90724 B : Type'} (_37169 : type852 _90724 B) (u : B -> Prop) (f : B -> _90724) : ((_37169 u f) = (term2532 _90724 B u f)) = ((_37169 u f) = (term2445 _90724 B u f)).
Proof. exact (MK_COMB (@lem3515927 _90724 B _37169 u f) (@lem3515926 _90724 B u f)). Qed.
Lemma lem3515929 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem3515930 {_90724 B : Type'} (_37169 : type852 _90724 B) (u : B -> Prop) (f : B -> _90724) : (term2534 _90724 B _37169 u f) = (term2535 _90724 B _37169 u f).
Proof. exact (MK_COMB (@lem3515929) (@lem3515928 _90724 B _37169 u f)). Qed.
Lemma lem3515931 {_90724 B : Type'} (u : B -> Prop) (f : B -> _90724) (t : B -> Prop) : (term2447 _90724 B u f t) = (term2061 _90724 B u f t).
Proof. exact (eq_refl (term2447 _90724 B u f t)). Qed.
Lemma lem3515932 {_90724 B : Type'} (_37169 : type852 _90724 B) (u : B -> Prop) (f : B -> _90724) (t : B -> Prop) : (term2448 _90724 B _37169 u f t) = (term2448 _90724 B _37169 u f t).
Proof. exact (eq_refl (term2448 _90724 B _37169 u f t)). Qed.
Lemma lem3515933 {_90724 B : Type'} (_37169 : type852 _90724 B) (u : B -> Prop) (f : B -> _90724) (t : B -> Prop) : ((_37169 u f t) = (term2447 _90724 B u f t)) = ((_37169 u f t) = (term2061 _90724 B u f t)).
Proof. exact (MK_COMB (@lem3515932 _90724 B _37169 u f t) (@lem3515931 _90724 B u f t)). Qed.
Lemma lem3515934 {_90724 B : Type'} (_37169 : type852 _90724 B) (u : B -> Prop) (f : B -> _90724) : (term2536 _90724 B _37169 u f) = (term2537 _90724 B _37169 u f).
Proof. exact (fun_ext (fun t : B -> Prop => @lem3515933 _90724 B _37169 u f t)). Qed.
Lemma lem3515935 {B : Type'} : (@all (B -> Prop)) = (@all (B -> Prop)).
Proof. exact (eq_refl (@all (B -> Prop))). Qed.
Lemma lem3515936 {_90724 B : Type'} (_37169 : type852 _90724 B) (u : B -> Prop) (f : B -> _90724) : (term2533 _90724 B _37169 u f) = (term2538 _90724 B _37169 u f).
Proof. exact (MK_COMB (@lem3515935 B) (@lem3515934 _90724 B _37169 u f)). Qed.
Lemma lem3515937 {_90724 B : Type'} (_37169 : type852 _90724 B) (u : B -> Prop) (f : B -> _90724) : (((_37169 u f) = (term2532 _90724 B u f)) = (term2533 _90724 B _37169 u f)) = (((_37169 u f) = (term2445 _90724 B u f)) = (term2538 _90724 B _37169 u f)).
Proof. exact (MK_COMB (@lem3515930 _90724 B _37169 u f) (@lem3515936 _90724 B _37169 u f)). Qed.
Lemma lem3515938 {_90724 B : Type'} (_37169 : type852 _90724 B) (u : B -> Prop) (f : B -> _90724) : ((_37169 u f) = (term2445 _90724 B u f)) = (term2538 _90724 B _37169 u f).
Proof. exact (EQ_MP (@lem3515937 _90724 B _37169 u f) (@lem3515924 _90724 B _37169 u f)). Qed.
Lemma lem3515940 {_3571 _3575 : Type'} (s : _3575 -> _3571) (t : _3575 -> _3571) : (s = (term2166 _3571 _3575 t)) = (term2167 _3571 _3575 s t).
Proof. exact (EQ_MP (@lem19792 _3571 _3575 s t) (@lem0)). Qed.
Lemma lem3515941 {B : Type'} (s : B -> Prop) (t : B -> Prop) : (s = (term1665 B t)) = (term2195 B s t).
Proof. exact (@lem3515940 Prop B s t). Qed.
Lemma lem3515942 {_90724 B : Type'} (_37169 : type852 _90724 B) (u : B -> Prop) (f : B -> _90724) (t : B -> Prop) : ((_37169 u f t) = (term2539 _90724 B u f t)) = (term2540 _90724 B _37169 u f t).
Proof. exact (@lem3515941 B (_37169 u f t) (term2061 _90724 B u f t)). Qed.
Lemma lem3515943 {_90724 B : Type'} (GEN_PVAR_84 : B) (u : B -> Prop) (f : B -> _90724) (t : B -> Prop) : (term2541 _90724 B u f t GEN_PVAR_84) = (term2060 _90724 B GEN_PVAR_84 u f t).
Proof. exact (eq_refl (term2541 _90724 B u f t GEN_PVAR_84)). Qed.
Lemma lem3515944 {_90724 B : Type'} (u : B -> Prop) (f : B -> _90724) (t : B -> Prop) : (term2539 _90724 B u f t) = (term2061 _90724 B u f t).
Proof. exact (fun_ext (fun GEN_PVAR_84 : B => @lem3515943 _90724 B GEN_PVAR_84 u f t)). Qed.
Lemma lem3515945 {_90724 B : Type'} (_37169 : type852 _90724 B) (u : B -> Prop) (f : B -> _90724) (t : B -> Prop) : (term2448 _90724 B _37169 u f t) = (term2448 _90724 B _37169 u f t).
Proof. exact (eq_refl (term2448 _90724 B _37169 u f t)). Qed.
Lemma lem3515946 {_90724 B : Type'} (_37169 : type852 _90724 B) (u : B -> Prop) (f : B -> _90724) (t : B -> Prop) : ((_37169 u f t) = (term2539 _90724 B u f t)) = ((_37169 u f t) = (term2061 _90724 B u f t)).
Proof. exact (MK_COMB (@lem3515945 _90724 B _37169 u f t) (@lem3515944 _90724 B u f t)). Qed.
Lemma lem3515947 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem3515948 {_90724 B : Type'} (_37169 : type852 _90724 B) (u : B -> Prop) (f : B -> _90724) (t : B -> Prop) : (term2542 _90724 B _37169 u f t) = (term2543 _90724 B _37169 u f t).
Proof. exact (MK_COMB (@lem3515947) (@lem3515946 _90724 B _37169 u f t)). Qed.
Lemma lem3515949 {_90724 B : Type'} (GEN_PVAR_84 : B) (u : B -> Prop) (f : B -> _90724) (t : B -> Prop) : (term2541 _90724 B u f t GEN_PVAR_84) = (term2060 _90724 B GEN_PVAR_84 u f t).
Proof. exact (eq_refl (term2541 _90724 B u f t GEN_PVAR_84)). Qed.
Lemma lem3515950 {_90724 B : Type'} (_37169 : type852 _90724 B) (u : B -> Prop) (f : B -> _90724) (t : B -> Prop) (GEN_PVAR_84 : B) : (term2544 _90724 B _37169 u f t GEN_PVAR_84) = (term2544 _90724 B _37169 u f t GEN_PVAR_84).
Proof. exact (eq_refl (term2544 _90724 B _37169 u f t GEN_PVAR_84)). Qed.
Lemma lem3515951 {_90724 B : Type'} (_37169 : type852 _90724 B) (GEN_PVAR_84 : B) (u : B -> Prop) (f : B -> _90724) (t : B -> Prop) : ((_37169 u f t GEN_PVAR_84) = (term2541 _90724 B u f t GEN_PVAR_84)) = ((_37169 u f t GEN_PVAR_84) = (term2060 _90724 B GEN_PVAR_84 u f t)).
Proof. exact (MK_COMB (@lem3515950 _90724 B _37169 u f t GEN_PVAR_84) (@lem3515949 _90724 B GEN_PVAR_84 u f t)). Qed.
Lemma lem3515952 {_90724 B : Type'} (_37169 : type852 _90724 B) (u : B -> Prop) (f : B -> _90724) (t : B -> Prop) : (term2545 _90724 B _37169 u f t) = (term2546 _90724 B _37169 u f t).
Proof. exact (fun_ext (fun GEN_PVAR_84 : B => @lem3515951 _90724 B _37169 GEN_PVAR_84 u f t)). Qed.
Lemma lem3515953 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem3515954 {_90724 B : Type'} (_37169 : type852 _90724 B) (u : B -> Prop) (f : B -> _90724) (t : B -> Prop) : (term2540 _90724 B _37169 u f t) = (term2547 _90724 B _37169 u f t).
Proof. exact (MK_COMB (@lem3515953 B) (@lem3515952 _90724 B _37169 u f t)). Qed.
Lemma lem3515955 {_90724 B : Type'} (_37169 : type852 _90724 B) (u : B -> Prop) (f : B -> _90724) (t : B -> Prop) : (((_37169 u f t) = (term2539 _90724 B u f t)) = (term2540 _90724 B _37169 u f t)) = (((_37169 u f t) = (term2061 _90724 B u f t)) = (term2547 _90724 B _37169 u f t)).
Proof. exact (MK_COMB (@lem3515948 _90724 B _37169 u f t) (@lem3515954 _90724 B _37169 u f t)). Qed.
Lemma lem3515956 {_90724 B : Type'} (_37169 : type852 _90724 B) (u : B -> Prop) (f : B -> _90724) (t : B -> Prop) : ((_37169 u f t) = (term2061 _90724 B u f t)) = (term2547 _90724 B _37169 u f t).
Proof. exact (EQ_MP (@lem3515955 _90724 B _37169 u f t) (@lem3515942 _90724 B _37169 u f t)). Qed.
Lemma lem3515957 {_90724 B : Type'} (_37169 : type852 _90724 B) (GEN_PVAR_84 : B) (u : B -> Prop) (f : B -> _90724) (t : B -> Prop) : ((_37169 u f t GEN_PVAR_84) = (term2060 _90724 B GEN_PVAR_84 u f t)) = ((_37169 u f t GEN_PVAR_84) = (term2060 _90724 B GEN_PVAR_84 u f t)).
Proof. exact (eq_refl ((_37169 u f t GEN_PVAR_84) = (term2060 _90724 B GEN_PVAR_84 u f t))). Qed.
Lemma lem3515958 {_90724 B : Type'} (_37169 : type852 _90724 B) (u : B -> Prop) (f : B -> _90724) (t : B -> Prop) : (term2546 _90724 B _37169 u f t) = (term2546 _90724 B _37169 u f t).
Proof. exact (fun_ext (fun GEN_PVAR_84 : B => @lem3515957 _90724 B _37169 GEN_PVAR_84 u f t)). Qed.
Lemma lem3515959 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem3515960 {_90724 B : Type'} (_37169 : type852 _90724 B) (u : B -> Prop) (f : B -> _90724) (t : B -> Prop) : (term2547 _90724 B _37169 u f t) = (term2547 _90724 B _37169 u f t).
Proof. exact (MK_COMB (@lem3515959 B) (@lem3515958 _90724 B _37169 u f t)). Qed.
Lemma lem3515961 {_90724 B : Type'} (_37169 : type852 _90724 B) (u : B -> Prop) (f : B -> _90724) (t : B -> Prop) : ((_37169 u f t) = (term2061 _90724 B u f t)) = (term2547 _90724 B _37169 u f t).
Proof. exact (TRANS (@lem3515956 _90724 B _37169 u f t) (@lem3515960 _90724 B _37169 u f t)). Qed.
Lemma lem3515962 {_90724 B : Type'} (_37169 : type852 _90724 B) (u : B -> Prop) (f : B -> _90724) : (term2537 _90724 B _37169 u f) = (term2548 _90724 B _37169 u f).
Proof. exact (fun_ext (fun t : B -> Prop => @lem3515961 _90724 B _37169 u f t)). Qed.
Lemma lem3515963 {B : Type'} : (@all (B -> Prop)) = (@all (B -> Prop)).
Proof. exact (eq_refl (@all (B -> Prop))). Qed.
Lemma lem3515964 {_90724 B : Type'} (_37169 : type852 _90724 B) (u : B -> Prop) (f : B -> _90724) : (term2538 _90724 B _37169 u f) = (term2549 _90724 B _37169 u f).
Proof. exact (MK_COMB (@lem3515963 B) (@lem3515962 _90724 B _37169 u f)). Qed.
Lemma lem3515965 {_90724 B : Type'} (_37169 : type852 _90724 B) (u : B -> Prop) (f : B -> _90724) : ((_37169 u f) = (term2445 _90724 B u f)) = (term2549 _90724 B _37169 u f).
Proof. exact (TRANS (@lem3515938 _90724 B _37169 u f) (@lem3515964 _90724 B _37169 u f)). Qed.
Lemma lem3515966 {_90724 B : Type'} (_37169 : type852 _90724 B) (u : B -> Prop) : (term2530 _90724 B _37169 u) = (term2550 _90724 B _37169 u).
Proof. exact (fun_ext (fun f : B -> _90724 => @lem3515965 _90724 B _37169 u f)). Qed.
Lemma lem3515967 {_90724 B : Type'} : (@all (B -> _90724)) = (@all (B -> _90724)).
Proof. exact (eq_refl (@all (B -> _90724))). Qed.
Lemma lem3515968 {_90724 B : Type'} (_37169 : type852 _90724 B) (u : B -> Prop) : (term2531 _90724 B _37169 u) = (term2551 _90724 B _37169 u).
Proof. exact (MK_COMB (@lem3515967 _90724 B) (@lem3515966 _90724 B _37169 u)). Qed.
Lemma lem3515969 {_90724 B : Type'} (_37169 : type852 _90724 B) (u : B -> Prop) : ((_37169 u) = (term2442 _90724 B u)) = (term2551 _90724 B _37169 u).
Proof. exact (TRANS (@lem3515920 _90724 B _37169 u) (@lem3515968 _90724 B _37169 u)). Qed.
Lemma lem3515970 {_90724 B : Type'} (_37169 : type852 _90724 B) : (term2521 _90724 B _37169) = (term2552 _90724 B _37169).
Proof. exact (fun_ext (fun u : B -> Prop => @lem3515969 _90724 B _37169 u)). Qed.
Lemma lem3515971 {B : Type'} : (@all (B -> Prop)) = (@all (B -> Prop)).
Proof. exact (eq_refl (@all (B -> Prop))). Qed.
Lemma lem3515972 {_90724 B : Type'} (_37169 : type852 _90724 B) : (term2522 _90724 B _37169) = (term2553 _90724 B _37169).
Proof. exact (MK_COMB (@lem3515971 B) (@lem3515970 _90724 B _37169)). Qed.
Lemma lem3515973 {_90724 B : Type'} (_37169 : type852 _90724 B) : (_37169 = (term2440 _90724 B)) = (term2553 _90724 B _37169).
Proof. exact (TRANS (@lem3515902 _90724 B _37169) (@lem3515972 _90724 B _37169)). Qed.
Lemma lem3515974 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem3515975 {_90724 B : Type'} (_37169 : type852 _90724 B) : (term2500 _90724 B _37169) = (term2554 _90724 B _37169).
Proof. exact (MK_COMB (@lem3515974) (@lem3515973 _90724 B _37169)). Qed.
Lemma lem3515976 {_90715 _90724 A B : Type'} (_37169 : type852 _90724 B) : (term2589 _90715 _90724 A B _37169) = (term2589 _90715 _90724 A B _37169).
Proof. exact (eq_refl (term2589 _90715 _90724 A B _37169)). Qed.
Lemma lem3515977 {_90715 _90724 A B : Type'} (_37169 : type852 _90724 B) : (term2603 _90715 _90724 A B _37169) = (term2609 _90715 _90724 A B _37169).
Proof. exact (MK_COMB (@lem3515975 _90724 B _37169) (@lem3515976 _90715 _90724 A B _37169)). Qed.
Lemma lem3515978 {_90715 _90724 A B : Type'} : (term2605 _90715 _90724 A B) = (term2610 _90715 _90724 A B).
Proof. exact (fun_ext (fun _37169 : type852 _90724 B => @lem3515977 _90715 _90724 A B _37169)). Qed.
Lemma lem3515979 {_90724 B : Type'} : (@all ((B -> Prop) -> (B -> _90724) -> (B -> Prop) -> B -> Prop)) = (@all ((B -> Prop) -> (B -> _90724) -> (B -> Prop) -> B -> Prop)).
Proof. exact (eq_refl (@all ((B -> Prop) -> (B -> _90724) -> (B -> Prop) -> B -> Prop))). Qed.
Lemma lem3515980 {_90715 _90724 A B : Type'} : (term2607 _90715 _90724 A B) = (term2611 _90715 _90724 A B).
Proof. exact (MK_COMB (@lem3515979 _90724 B) (@lem3515978 _90715 _90724 A B)). Qed.
Lemma lem3515981 {_90715 _90724 A B : Type'} : (term2595 _90715 _90724 A B) = (term2595 _90715 _90724 A B).
Proof. exact (eq_refl (term2595 _90715 _90724 A B)). Qed.
Lemma lem3515982 {_90715 _90724 A B : Type'} : ((term2557 _90715 _90724 A B) = (term2607 _90715 _90724 A B)) = ((term2557 _90715 _90724 A B) = (term2611 _90715 _90724 A B)).
Proof. exact (MK_COMB (@lem3515981 _90715 _90724 A B) (@lem3515980 _90715 _90724 A B)). Qed.
Lemma lem3515983 {_90715 _90724 A B : Type'} : (term2557 _90715 _90724 A B) = (term2611 _90715 _90724 A B).
Proof. exact (EQ_MP (@lem3515982 _90715 _90724 A B) (@lem3515884 _90715 _90724 A B)). Qed.
Lemma lem3515984 {_90724 A : Type'} (_37170 : type235 _90724 A) (h1 : _37170 = (term2612 _90724 A)) : _37170 = (term2612 _90724 A).
Proof. exact (h1). Qed.
Lemma lem3515985 {A : Type'} (u : type686 A) : u = u.
Proof. exact (eq_refl u). Qed.
Lemma lem3515986 {_90724 A : Type'} (u : type686 A) (_37170 : type235 _90724 A) (h1 : _37170 = (term2612 _90724 A)) : (_37170 u) = (term2613 _90724 A u).
Proof. exact (MK_COMB (@lem3515984 _90724 A _37170 h1) (@lem3515985 A u)). Qed.
Lemma lem3515987 {_90724 A : Type'} (u : type686 A) : (term2613 _90724 A u) = (term2614 _90724 A u).
Proof. exact (eq_refl (term2613 _90724 A u)). Qed.
Lemma lem3515988 {_90724 A : Type'} (_37170 : type235 _90724 A) (u : type686 A) : (term2615 _90724 A _37170 u) = (term2615 _90724 A _37170 u).
Proof. exact (eq_refl (term2615 _90724 A _37170 u)). Qed.
Lemma lem3515989 {_90724 A : Type'} (_37170 : type235 _90724 A) (u : type686 A) : ((_37170 u) = (term2613 _90724 A u)) = ((_37170 u) = (term2614 _90724 A u)).
Proof. exact (MK_COMB (@lem3515988 _90724 A _37170 u) (@lem3515987 _90724 A u)). Qed.
Lemma lem3515990 {_90724 A : Type'} (u : type686 A) (_37170 : type235 _90724 A) (h1 : _37170 = (term2612 _90724 A)) : (_37170 u) = (term2614 _90724 A u).
Proof. exact (EQ_MP (@lem3515989 _90724 A _37170 u) (@lem3515986 _90724 A u _37170 h1)). Qed.
Lemma lem3515991 {_90724 A : Type'} (f : type862 _90724 A) : f = f.
Proof. exact (eq_refl f). Qed.
Lemma lem3515992 {_90724 A : Type'} (u : type686 A) (f : type862 _90724 A) (_37170 : type235 _90724 A) (h1 : _37170 = (term2612 _90724 A)) : (_37170 u f) = (term2616 _90724 A u f).
Proof. exact (MK_COMB (@lem3515990 _90724 A u _37170 h1) (@lem3515991 _90724 A f)). Qed.
Lemma lem3515993 {_90724 A : Type'} (u : type686 A) (f : type862 _90724 A) : (term2616 _90724 A u f) = (term2617 _90724 A u f).
Proof. exact (eq_refl (term2616 _90724 A u f)). Qed.
Lemma lem3515994 {_90724 A : Type'} (_37170 : type235 _90724 A) (u : type686 A) (f : type862 _90724 A) : (term2618 _90724 A _37170 u f) = (term2618 _90724 A _37170 u f).
Proof. exact (eq_refl (term2618 _90724 A _37170 u f)). Qed.
Lemma lem3515995 {_90724 A : Type'} (_37170 : type235 _90724 A) (u : type686 A) (f : type862 _90724 A) : ((_37170 u f) = (term2616 _90724 A u f)) = ((_37170 u f) = (term2617 _90724 A u f)).
Proof. exact (MK_COMB (@lem3515994 _90724 A _37170 u f) (@lem3515993 _90724 A u f)). Qed.
Lemma lem3515996 {_90724 A : Type'} (u : type686 A) (f : type862 _90724 A) (_37170 : type235 _90724 A) (h1 : _37170 = (term2612 _90724 A)) : (_37170 u f) = (term2617 _90724 A u f).
Proof. exact (EQ_MP (@lem3515995 _90724 A _37170 u f) (@lem3515992 _90724 A u f _37170 h1)). Qed.
Lemma lem3515997 {A : Type'} (t : type686 A) : t = t.
Proof. exact (eq_refl t). Qed.
Lemma lem3515998 {_90724 A : Type'} (u : type686 A) (f : type862 _90724 A) (t : type686 A) (_37170 : type235 _90724 A) (h1 : _37170 = (term2612 _90724 A)) : (_37170 u f t) = (term2619 _90724 A u f t).
Proof. exact (MK_COMB (@lem3515996 _90724 A u f _37170 h1) (@lem3515997 A t)). Qed.
Lemma lem3515999 {_90724 A : Type'} (u : type686 A) (f : type862 _90724 A) (t : type686 A) : (term2619 _90724 A u f t) = (term2040 _90724 A u f t).
Proof. exact (eq_refl (term2619 _90724 A u f t)). Qed.
Lemma lem3516000 {_90724 A : Type'} (_37170 : type235 _90724 A) (u : type686 A) (f : type862 _90724 A) (t : type686 A) : (term2620 _90724 A _37170 u f t) = (term2620 _90724 A _37170 u f t).
Proof. exact (eq_refl (term2620 _90724 A _37170 u f t)). Qed.
Lemma lem3516001 {_90724 A : Type'} (_37170 : type235 _90724 A) (u : type686 A) (f : type862 _90724 A) (t : type686 A) : ((_37170 u f t) = (term2619 _90724 A u f t)) = ((_37170 u f t) = (term2040 _90724 A u f t)).
Proof. exact (MK_COMB (@lem3516000 _90724 A _37170 u f t) (@lem3515999 _90724 A u f t)). Qed.
Lemma lem3516002 {_90724 A : Type'} (u : type686 A) (f : type862 _90724 A) (t : type686 A) (_37170 : type235 _90724 A) (h1 : _37170 = (term2612 _90724 A)) : (_37170 u f t) = (term2040 _90724 A u f t).
Proof. exact (EQ_MP (@lem3516001 _90724 A _37170 u f t) (@lem3515998 _90724 A u f t _37170 h1)). Qed.
Lemma lem3516022 {A B : Type'} (f : type678 A B) (g : type180 A) : ((term2011 A B f g) = (term2012 A B f g)) = ((term2011 A B f g) = (term2012 A B f g)).
Proof. exact (eq_refl ((term2011 A B f g) = (term2012 A B f g))). Qed.
Lemma lem3516023 {A : Type'} (t : type686 A) : t = t.
Proof. exact (eq_refl t). Qed.
Lemma lem3516051 {A B : Type'} (GEN_PVAR_84 : A -> Prop) (u : type686 A) (f : type678 A B) (t : type686 A) (x : A -> Prop) : (term2013 A B GEN_PVAR_84 u f t x) = (term2013 A B GEN_PVAR_84 u f t x).
Proof. exact (eq_refl (term2013 A B GEN_PVAR_84 u f t x)). Qed.
Lemma lem3516052 {A B : Type'} (GEN_PVAR_84 : A -> Prop) (u : type686 A) (f : type678 A B) (t : type686 A) : (term2014 A B GEN_PVAR_84 u f t) = (term2014 A B GEN_PVAR_84 u f t).
Proof. exact (fun_ext (fun x : A -> Prop => @lem3516051 A B GEN_PVAR_84 u f t x)). Qed.
Lemma lem3516053 {A : Type'} : (@ex (A -> Prop)) = (@ex (A -> Prop)).
Proof. exact (eq_refl (@ex (A -> Prop))). Qed.
Lemma lem3516054 {A B : Type'} (GEN_PVAR_84 : A -> Prop) (u : type686 A) (f : type678 A B) (t : type686 A) : (term2015 A B GEN_PVAR_84 u f t) = (term2015 A B GEN_PVAR_84 u f t).
Proof. exact (MK_COMB (@lem3516053 A) (@lem3516052 A B GEN_PVAR_84 u f t)). Qed.
Lemma lem3516055 {A B : Type'} (u : type686 A) (f : type678 A B) (t : type686 A) : (term2016 A B u f t) = (term2016 A B u f t).
Proof. exact (fun_ext (fun GEN_PVAR_84 : A -> Prop => @lem3516054 A B GEN_PVAR_84 u f t)). Qed.
Lemma lem3516056 {A : Type'} : (@GSPEC (A -> Prop)) = (@GSPEC (A -> Prop)).
Proof. exact (eq_refl (@GSPEC (A -> Prop))). Qed.
Lemma lem3516057 {A B : Type'} (u : type686 A) (f : type678 A B) (t : type686 A) : (term2017 A B u f t) = (term2017 A B u f t).
Proof. exact (MK_COMB (@lem3516056 A) (@lem3516055 A B u f t)). Qed.
Lemma lem3516058 {A : Type'} : (@SUBSET (A -> Prop)) = (@SUBSET (A -> Prop)).
Proof. exact (eq_refl (@SUBSET (A -> Prop))). Qed.
Lemma lem3516059 {A B : Type'} (u : type686 A) (f : type678 A B) (t : type686 A) : (term2018 A B u f t) = (term2018 A B u f t).
Proof. exact (MK_COMB (@lem3516058 A) (@lem3516057 A B u f t)). Qed.
Lemma lem3516060 {A B : Type'} (u : type686 A) (f : type678 A B) (t : type686 A) : (term2019 A B u f t) = (term2019 A B u f t).
Proof. exact (MK_COMB (@lem3516059 A B u f t) (@lem3516023 A t)). Qed.
Lemma lem3516067 {A : Type'} (t : type686 A) (u : type686 A) : (term2020 A t u) = (term2020 A t u).
Proof. exact (eq_refl (term2020 A t u)). Qed.
Lemma lem3516068 {A B : Type'} (u : type686 A) (f : type678 A B) (t : type686 A) : (term2021 A B u f t) = (term2021 A B u f t).
Proof. exact (MK_COMB (@lem3516067 A t u) (@lem3516060 A B u f t)). Qed.
Lemma lem3516075 {A : Type'} (t : type686 A) (g : type180 A) : (term2022 A t g) = (term2022 A t g).
Proof. exact (eq_refl (term2022 A t g)). Qed.
Lemma lem3516076 {A B : Type'} (g : type180 A) (u : type686 A) (f : type678 A B) (t : type686 A) : (term2023 A B g u f t) = (term2023 A B g u f t).
Proof. exact (MK_COMB (@lem3516075 A t g) (@lem3516068 A B u f t)). Qed.
Lemma lem3516077 {A B : Type'} (g : type180 A) (u : type686 A) (f : type678 A B) : (term2024 A B g u f) = (term2024 A B g u f).
Proof. exact (fun_ext (fun t : type686 A => @lem3516076 A B g u f t)). Qed.
Lemma lem3516078 {A : Type'} : (@all ((A -> Prop) -> Prop)) = (@all ((A -> Prop) -> Prop)).
Proof. exact (eq_refl (@all ((A -> Prop) -> Prop))). Qed.
Lemma lem3516079 {A B : Type'} (g : type180 A) (u : type686 A) (f : type678 A B) : (term2025 A B g u f) = (term2025 A B g u f).
Proof. exact (MK_COMB (@lem3516078 A) (@lem3516077 A B g u f)). Qed.
Lemma lem3516088 {A : Type'} (g : type180 A) : (term2026 A g) = (term2026 A g).
Proof. exact (eq_refl (term2026 A g)). Qed.
Lemma lem3516089 {A B : Type'} (g : type180 A) (u : type686 A) (f : type678 A B) : (term2027 A B g u f) = (term2027 A B g u f).
Proof. exact (MK_COMB (@lem3516088 A g) (@lem3516079 A B g u f)). Qed.
Lemma lem3516090 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem3516091 {A B : Type'} (g : type180 A) (u : type686 A) (f : type678 A B) : (term2028 A B g u f) = (term2028 A B g u f).
Proof. exact (MK_COMB (@lem3516090) (@lem3516089 A B g u f)). Qed.
Lemma lem3516092 {A B : Type'} (u : type686 A) (f : type678 A B) (g : type180 A) : (term2029 A B u f g) = (term2029 A B u f g).
Proof. exact (MK_COMB (@lem3516091 A B g u f) (@lem3516022 A B f g)). Qed.
Lemma lem3516093 {A B : Type'} (u : type686 A) (f : type678 A B) : (term2030 A B u f) = (term2030 A B u f).
Proof. exact (fun_ext (fun g : type180 A => @lem3516092 A B u f g)). Qed.
Lemma lem3516094 {A : Type'} : (@all (((A -> Prop) -> Prop) -> Prop)) = (@all (((A -> Prop) -> Prop) -> Prop)).
Proof. exact (eq_refl (@all (((A -> Prop) -> Prop) -> Prop))). Qed.
Lemma lem3516095 {A B : Type'} (u : type686 A) (f : type678 A B) : (term2031 A B u f) = (term2031 A B u f).
Proof. exact (MK_COMB (@lem3516094 A) (@lem3516093 A B u f)). Qed.
Lemma lem3516096 {A B : Type'} (u : type686 A) : (term2032 A B u) = (term2032 A B u).
Proof. exact (fun_ext (fun f : type678 A B => @lem3516095 A B u f)). Qed.
Lemma lem3516097 {A B : Type'} : (@all ((A -> Prop) -> B -> Prop)) = (@all ((A -> Prop) -> B -> Prop)).
Proof. exact (eq_refl (@all ((A -> Prop) -> B -> Prop))). Qed.
Lemma lem3516098 {A B : Type'} (u : type686 A) : (term2033 A B u) = (term2033 A B u).
Proof. exact (MK_COMB (@lem3516097 A B) (@lem3516096 A B u)). Qed.
Lemma lem3516099 {A B : Type'} : (term2034 A B) = (term2034 A B).
Proof. exact (fun_ext (fun u : type686 A => @lem3516098 A B u)). Qed.
Lemma lem3516100 {A : Type'} : (@all ((A -> Prop) -> Prop)) = (@all ((A -> Prop) -> Prop)).
Proof. exact (eq_refl (@all ((A -> Prop) -> Prop))). Qed.
Lemma lem3516101 {A B : Type'} : (term1961 A B) = (term1961 A B).
Proof. exact (MK_COMB (@lem3516100 A) (@lem3516099 A B)). Qed.
Lemma lem3516102 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem3516103 {A B : Type'} : (term1967 A B) = (term1967 A B).
Proof. exact (MK_COMB (@lem3516102) (@lem3516101 A B)). Qed.
Lemma lem3516122 {_90724 A : Type'} (f : type862 _90724 A) (g : type180 A) : ((term2035 _90724 A f g) = (term2036 _90724 A f g)) = ((term2035 _90724 A f g) = (term2036 _90724 A f g)).
Proof. exact (eq_refl ((term2035 _90724 A f g) = (term2036 _90724 A f g))). Qed.
Lemma lem3516123 {A : Type'} (t : type686 A) : t = t.
Proof. exact (eq_refl t). Qed.
Lemma lem3516125 {_90724 A : Type'} (u : type686 A) (f : type862 _90724 A) (t : type686 A) (_37170 : type235 _90724 A) (h1 : _37170 = (term2612 _90724 A)) : (term2040 _90724 A u f t) = (_37170 u f t).
Proof. exact (SYM (@lem3516002 _90724 A u f t _37170 h1)). Qed.
Lemma lem3516126 {_90724 A : Type'} (u : type686 A) (f : type862 _90724 A) (t : type686 A) (_37170 : type235 _90724 A) (h1 : _37170 = (term2612 _90724 A)) : (term2040 _90724 A u f t) = (_37170 u f t).
Proof. exact (@lem3516125 _90724 A u f t _37170 h1). Qed.
Lemma lem3516127 {A : Type'} : (@GSPEC (A -> Prop)) = (@GSPEC (A -> Prop)).
Proof. exact (eq_refl (@GSPEC (A -> Prop))). Qed.
Lemma lem3516128 {_90724 A : Type'} (u : type686 A) (f : type862 _90724 A) (t : type686 A) (_37170 : type235 _90724 A) (h1 : _37170 = (term2612 _90724 A)) : (term2041 _90724 A u f t) = (term2621 _90724 A _37170 u f t).
Proof. exact (MK_COMB (@lem3516127 A) (@lem3516126 _90724 A u f t _37170 h1)). Qed.
Lemma lem3516129 {A : Type'} : (@SUBSET (A -> Prop)) = (@SUBSET (A -> Prop)).
Proof. exact (eq_refl (@SUBSET (A -> Prop))). Qed.
Lemma lem3516130 {_90724 A : Type'} (u : type686 A) (f : type862 _90724 A) (t : type686 A) (_37170 : type235 _90724 A) (h1 : _37170 = (term2612 _90724 A)) : (term2042 _90724 A u f t) = (term2622 _90724 A _37170 u f t).
Proof. exact (MK_COMB (@lem3516129 A) (@lem3516128 _90724 A u f t _37170 h1)). Qed.
Lemma lem3516131 {_90724 A : Type'} (u : type686 A) (f : type862 _90724 A) (t : type686 A) (_37170 : type235 _90724 A) (h1 : _37170 = (term2612 _90724 A)) : (term2043 _90724 A u f t) = (term2623 _90724 A _37170 u f t).
Proof. exact (MK_COMB (@lem3516130 _90724 A u f t _37170 h1) (@lem3516123 A t)). Qed.
Lemma lem3516138 {A : Type'} (t : type686 A) (u : type686 A) : (term2020 A t u) = (term2020 A t u).
Proof. exact (eq_refl (term2020 A t u)). Qed.
Lemma lem3516139 {_90724 A : Type'} (u : type686 A) (f : type862 _90724 A) (t : type686 A) (_37170 : type235 _90724 A) (h1 : _37170 = (term2612 _90724 A)) : (term2044 _90724 A u f t) = (term2624 _90724 A _37170 u f t).
Proof. exact (MK_COMB (@lem3516138 A t u) (@lem3516131 _90724 A u f t _37170 h1)). Qed.
Lemma lem3516146 {A : Type'} (t : type686 A) (g : type180 A) : (term2022 A t g) = (term2022 A t g).
Proof. exact (eq_refl (term2022 A t g)). Qed.
Lemma lem3516147 {_90724 A : Type'} (g : type180 A) (u : type686 A) (f : type862 _90724 A) (t : type686 A) (_37170 : type235 _90724 A) (h1 : _37170 = (term2612 _90724 A)) : (term2045 _90724 A g u f t) = (term2625 _90724 A g _37170 u f t).
Proof. exact (MK_COMB (@lem3516146 A t g) (@lem3516139 _90724 A u f t _37170 h1)). Qed.
Lemma lem3516148 {_90724 A : Type'} (g : type180 A) (u : type686 A) (f : type862 _90724 A) (_37170 : type235 _90724 A) (h1 : _37170 = (term2612 _90724 A)) : (term2046 _90724 A g u f) = (term2626 _90724 A g _37170 u f).
Proof. exact (fun_ext (fun t : type686 A => @lem3516147 _90724 A g u f t _37170 h1)). Qed.
Lemma lem3516149 {A : Type'} : (@all ((A -> Prop) -> Prop)) = (@all ((A -> Prop) -> Prop)).
Proof. exact (eq_refl (@all ((A -> Prop) -> Prop))). Qed.
Lemma lem3516150 {_90724 A : Type'} (g : type180 A) (u : type686 A) (f : type862 _90724 A) (_37170 : type235 _90724 A) (h1 : _37170 = (term2612 _90724 A)) : (term2047 _90724 A g u f) = (term2627 _90724 A g _37170 u f).
Proof. exact (MK_COMB (@lem3516149 A) (@lem3516148 _90724 A g u f _37170 h1)). Qed.
Lemma lem3516159 {A : Type'} (g : type180 A) : (term2026 A g) = (term2026 A g).
Proof. exact (eq_refl (term2026 A g)). Qed.
Lemma lem3516160 {_90724 A : Type'} (g : type180 A) (u : type686 A) (f : type862 _90724 A) (_37170 : type235 _90724 A) (h1 : _37170 = (term2612 _90724 A)) : (term2048 _90724 A g u f) = (term2628 _90724 A g _37170 u f).
Proof. exact (MK_COMB (@lem3516159 A g) (@lem3516150 _90724 A g u f _37170 h1)). Qed.
Lemma lem3516161 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem3516162 {_90724 A : Type'} (g : type180 A) (u : type686 A) (f : type862 _90724 A) (_37170 : type235 _90724 A) (h1 : _37170 = (term2612 _90724 A)) : (term2049 _90724 A g u f) = (term2629 _90724 A g _37170 u f).
Proof. exact (MK_COMB (@lem3516161) (@lem3516160 _90724 A g u f _37170 h1)). Qed.
Lemma lem3516163 {_90724 A : Type'} (u : type686 A) (f : type862 _90724 A) (g : type180 A) (_37170 : type235 _90724 A) (h1 : _37170 = (term2612 _90724 A)) : (term2050 _90724 A u f g) = (term2630 _90724 A _37170 u f g).
Proof. exact (MK_COMB (@lem3516162 _90724 A g u f _37170 h1) (@lem3516122 _90724 A f g)). Qed.
Lemma lem3516164 {_90724 A : Type'} (u : type686 A) (f : type862 _90724 A) (_37170 : type235 _90724 A) (h1 : _37170 = (term2612 _90724 A)) : (term2051 _90724 A u f) = (term2631 _90724 A _37170 u f).
Proof. exact (fun_ext (fun g : type180 A => @lem3516163 _90724 A u f g _37170 h1)). Qed.
Lemma lem3516165 {A : Type'} : (@all (((A -> Prop) -> Prop) -> Prop)) = (@all (((A -> Prop) -> Prop) -> Prop)).
Proof. exact (eq_refl (@all (((A -> Prop) -> Prop) -> Prop))). Qed.
Lemma lem3516166 {_90724 A : Type'} (u : type686 A) (f : type862 _90724 A) (_37170 : type235 _90724 A) (h1 : _37170 = (term2612 _90724 A)) : (term2052 _90724 A u f) = (term2632 _90724 A _37170 u f).
Proof. exact (MK_COMB (@lem3516165 A) (@lem3516164 _90724 A u f _37170 h1)). Qed.
Lemma lem3516167 {_90724 A : Type'} (u : type686 A) (_37170 : type235 _90724 A) (h1 : _37170 = (term2612 _90724 A)) : (term2053 _90724 A u) = (term2633 _90724 A _37170 u).
Proof. exact (fun_ext (fun f : type862 _90724 A => @lem3516166 _90724 A u f _37170 h1)). Qed.
Lemma lem3516168 {_90724 A : Type'} : (@all ((A -> Prop) -> _90724)) = (@all ((A -> Prop) -> _90724)).
Proof. exact (eq_refl (@all ((A -> Prop) -> _90724))). Qed.
Lemma lem3516169 {_90724 A : Type'} (u : type686 A) (_37170 : type235 _90724 A) (h1 : _37170 = (term2612 _90724 A)) : (term2054 _90724 A u) = (term2634 _90724 A _37170 u).
Proof. exact (MK_COMB (@lem3516168 _90724 A) (@lem3516167 _90724 A u _37170 h1)). Qed.
Lemma lem3516170 {_90724 A : Type'} (_37170 : type235 _90724 A) (h1 : _37170 = (term2612 _90724 A)) : (term2055 _90724 A) = (term2635 _90724 A _37170).
Proof. exact (fun_ext (fun u : type686 A => @lem3516169 _90724 A u _37170 h1)). Qed.
Lemma lem3516171 {A : Type'} : (@all ((A -> Prop) -> Prop)) = (@all ((A -> Prop) -> Prop)).
Proof. exact (eq_refl (@all ((A -> Prop) -> Prop))). Qed.
Lemma lem3516172 {_90724 A : Type'} (_37170 : type235 _90724 A) (h1 : _37170 = (term2612 _90724 A)) : (term1959 _90724 A) = (term2636 _90724 A _37170).
Proof. exact (MK_COMB (@lem3516171 A) (@lem3516170 _90724 A _37170 h1)). Qed.
Lemma lem3516173 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem3516174 {_90724 A : Type'} (_37170 : type235 _90724 A) (h1 : _37170 = (term2612 _90724 A)) : (term1968 _90724 A) = (term2637 _90724 A _37170).
Proof. exact (MK_COMB (@lem3516173) (@lem3516172 _90724 A _37170 h1)). Qed.
Lemma lem3516175 {_90724 A B : Type'} (_37170 : type235 _90724 A) (h1 : _37170 = (term2612 _90724 A)) : (term1970 _90724 A B) = (term2638 _90724 A B _37170).
Proof. exact (MK_COMB (@lem3516174 _90724 A _37170 h1) (@lem3516103 A B)). Qed.
Lemma lem3516194 {_90724 B : Type'} (f : B -> _90724) (g : type686 B) : ((term2056 _90724 B f g) = (term2057 _90724 B f g)) = ((term2056 _90724 B f g) = (term2057 _90724 B f g)).
Proof. exact (eq_refl ((term2056 _90724 B f g) = (term2057 _90724 B f g))). Qed.
Lemma lem3516223 {_90724 B : Type'} (g : type686 B) (_37169 : type852 _90724 B) (u : B -> Prop) (f : B -> _90724) (t : B -> Prop) : (term2453 _90724 B g _37169 u f t) = (term2453 _90724 B g _37169 u f t).
Proof. exact (eq_refl (term2453 _90724 B g _37169 u f t)). Qed.
Lemma lem3516224 {_90724 B : Type'} (g : type686 B) (_37169 : type852 _90724 B) (u : B -> Prop) (f : B -> _90724) : (term2454 _90724 B g _37169 u f) = (term2454 _90724 B g _37169 u f).
Proof. exact (fun_ext (fun t : B -> Prop => @lem3516223 _90724 B g _37169 u f t)). Qed.
Lemma lem3516225 {B : Type'} : (@all (B -> Prop)) = (@all (B -> Prop)).
Proof. exact (eq_refl (@all (B -> Prop))). Qed.
Lemma lem3516226 {_90724 B : Type'} (g : type686 B) (_37169 : type852 _90724 B) (u : B -> Prop) (f : B -> _90724) : (term2455 _90724 B g _37169 u f) = (term2455 _90724 B g _37169 u f).
Proof. exact (MK_COMB (@lem3516225 B) (@lem3516224 _90724 B g _37169 u f)). Qed.
Lemma lem3516235 {B : Type'} (g : type686 B) : (term42 B g) = (term42 B g).
Proof. exact (eq_refl (term42 B g)). Qed.
Lemma lem3516236 {_90724 B : Type'} (g : type686 B) (_37169 : type852 _90724 B) (u : B -> Prop) (f : B -> _90724) : (term2456 _90724 B g _37169 u f) = (term2456 _90724 B g _37169 u f).
Proof. exact (MK_COMB (@lem3516235 B g) (@lem3516226 _90724 B g _37169 u f)). Qed.
Lemma lem3516237 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem3516238 {_90724 B : Type'} (g : type686 B) (_37169 : type852 _90724 B) (u : B -> Prop) (f : B -> _90724) : (term2457 _90724 B g _37169 u f) = (term2457 _90724 B g _37169 u f).
Proof. exact (MK_COMB (@lem3516237) (@lem3516236 _90724 B g _37169 u f)). Qed.
Lemma lem3516239 {_90724 B : Type'} (_37169 : type852 _90724 B) (u : B -> Prop) (f : B -> _90724) (g : type686 B) : (term2458 _90724 B _37169 u f g) = (term2458 _90724 B _37169 u f g).
Proof. exact (MK_COMB (@lem3516238 _90724 B g _37169 u f) (@lem3516194 _90724 B f g)). Qed.
Lemma lem3516240 {_90724 B : Type'} (_37169 : type852 _90724 B) (u : B -> Prop) (f : B -> _90724) : (term2459 _90724 B _37169 u f) = (term2459 _90724 B _37169 u f).
Proof. exact (fun_ext (fun g : type686 B => @lem3516239 _90724 B _37169 u f g)). Qed.
Lemma lem3516241 {B : Type'} : (@all ((B -> Prop) -> Prop)) = (@all ((B -> Prop) -> Prop)).
Proof. exact (eq_refl (@all ((B -> Prop) -> Prop))). Qed.
Lemma lem3516242 {_90724 B : Type'} (_37169 : type852 _90724 B) (u : B -> Prop) (f : B -> _90724) : (term2460 _90724 B _37169 u f) = (term2460 _90724 B _37169 u f).
Proof. exact (MK_COMB (@lem3516241 B) (@lem3516240 _90724 B _37169 u f)). Qed.
Lemma lem3516243 {_90724 B : Type'} (_37169 : type852 _90724 B) (u : B -> Prop) : (term2461 _90724 B _37169 u) = (term2461 _90724 B _37169 u).
Proof. exact (fun_ext (fun f : B -> _90724 => @lem3516242 _90724 B _37169 u f)). Qed.
Lemma lem3516244 {_90724 B : Type'} : (@all (B -> _90724)) = (@all (B -> _90724)).
Proof. exact (eq_refl (@all (B -> _90724))). Qed.
Lemma lem3516245 {_90724 B : Type'} (_37169 : type852 _90724 B) (u : B -> Prop) : (term2462 _90724 B _37169 u) = (term2462 _90724 B _37169 u).
Proof. exact (MK_COMB (@lem3516244 _90724 B) (@lem3516243 _90724 B _37169 u)). Qed.
Lemma lem3516246 {_90724 B : Type'} (_37169 : type852 _90724 B) : (term2463 _90724 B _37169) = (term2463 _90724 B _37169).
Proof. exact (fun_ext (fun u : B -> Prop => @lem3516245 _90724 B _37169 u)). Qed.
Lemma lem3516247 {B : Type'} : (@all (B -> Prop)) = (@all (B -> Prop)).
Proof. exact (eq_refl (@all (B -> Prop))). Qed.
Lemma lem3516248 {_90724 B : Type'} (_37169 : type852 _90724 B) : (term2464 _90724 B _37169) = (term2464 _90724 B _37169).
Proof. exact (MK_COMB (@lem3516247 B) (@lem3516246 _90724 B _37169)). Qed.
Lemma lem3516249 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem3516250 {_90724 B : Type'} (_37169 : type852 _90724 B) : (term2465 _90724 B _37169) = (term2465 _90724 B _37169).
Proof. exact (MK_COMB (@lem3516249) (@lem3516248 _90724 B _37169)). Qed.
Lemma lem3516251 {_90724 A B : Type'} (_37169 : type852 _90724 B) (_37170 : type235 _90724 A) (h1 : _37170 = (term2612 _90724 A)) : (term2558 _90724 A B _37169) = (term2639 _90724 A B _37169 _37170).
Proof. exact (MK_COMB (@lem3516250 _90724 B _37169) (@lem3516175 _90724 A B _37170 h1)). Qed.
Lemma lem3516270 {A B : Type'} (f : A -> B) (g : type686 A) : ((term49 A B f g) = (term50 A B f g)) = ((term49 A B f g) = (term50 A B f g)).
Proof. exact (eq_refl ((term49 A B f g) = (term50 A B f g))). Qed.
Lemma lem3516299 {A B : Type'} (g : type686 A) (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) (t : A -> Prop) : (term2081 A B g _37163 u f t) = (term2081 A B g _37163 u f t).
Proof. exact (eq_refl (term2081 A B g _37163 u f t)). Qed.
Lemma lem3516300 {A B : Type'} (g : type686 A) (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) : (term2082 A B g _37163 u f) = (term2082 A B g _37163 u f).
Proof. exact (fun_ext (fun t : A -> Prop => @lem3516299 A B g _37163 u f t)). Qed.
Lemma lem3516301 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem3516302 {A B : Type'} (g : type686 A) (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) : (term2083 A B g _37163 u f) = (term2083 A B g _37163 u f).
Proof. exact (MK_COMB (@lem3516301 A) (@lem3516300 A B g _37163 u f)). Qed.
Lemma lem3516311 {A : Type'} (g : type686 A) : (term42 A g) = (term42 A g).
Proof. exact (eq_refl (term42 A g)). Qed.
Lemma lem3516312 {A B : Type'} (g : type686 A) (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) : (term2084 A B g _37163 u f) = (term2084 A B g _37163 u f).
Proof. exact (MK_COMB (@lem3516311 A g) (@lem3516302 A B g _37163 u f)). Qed.
Lemma lem3516313 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem3516314 {A B : Type'} (g : type686 A) (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) : (term2085 A B g _37163 u f) = (term2085 A B g _37163 u f).
Proof. exact (MK_COMB (@lem3516313) (@lem3516312 A B g _37163 u f)). Qed.
Lemma lem3516315 {A B : Type'} (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) (g : type686 A) : (term2086 A B _37163 u f g) = (term2086 A B _37163 u f g).
Proof. exact (MK_COMB (@lem3516314 A B g _37163 u f) (@lem3516270 A B f g)). Qed.
Lemma lem3516316 {A B : Type'} (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) : (term2088 A B _37163 u f) = (term2088 A B _37163 u f).
Proof. exact (fun_ext (fun g : type686 A => @lem3516315 A B _37163 u f g)). Qed.
Lemma lem3516317 {A : Type'} : (@all ((A -> Prop) -> Prop)) = (@all ((A -> Prop) -> Prop)).
Proof. exact (eq_refl (@all ((A -> Prop) -> Prop))). Qed.
Lemma lem3516318 {A B : Type'} (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) : (term2089 A B _37163 u f) = (term2089 A B _37163 u f).
Proof. exact (MK_COMB (@lem3516317 A) (@lem3516316 A B _37163 u f)). Qed.
Lemma lem3516319 {A B : Type'} (_37163 : type627 A B) (u : A -> Prop) : (term2091 A B _37163 u) = (term2091 A B _37163 u).
Proof. exact (fun_ext (fun f : A -> B => @lem3516318 A B _37163 u f)). Qed.
Lemma lem3516320 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem3516321 {A B : Type'} (_37163 : type627 A B) (u : A -> Prop) : (term2092 A B _37163 u) = (term2092 A B _37163 u).
Proof. exact (MK_COMB (@lem3516320 A B) (@lem3516319 A B _37163 u)). Qed.
Lemma lem3516322 {A B : Type'} (_37163 : type627 A B) : (term2094 A B _37163) = (term2094 A B _37163).
Proof. exact (fun_ext (fun u : A -> Prop => @lem3516321 A B _37163 u)). Qed.
Lemma lem3516323 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem3516324 {A B : Type'} (_37163 : type627 A B) : (term2095 A B _37163) = (term2095 A B _37163).
Proof. exact (MK_COMB (@lem3516323 A) (@lem3516322 A B _37163)). Qed.
Lemma lem3516325 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem3516326 {A B : Type'} (_37163 : type627 A B) : (term2096 A B _37163) = (term2096 A B _37163).
Proof. exact (MK_COMB (@lem3516325) (@lem3516324 A B _37163)). Qed.
Lemma lem3516327 {_90724 A B : Type'} (_37163 : type627 A B) (_37169 : type852 _90724 B) (_37170 : type235 _90724 A) (h1 : _37170 = (term2612 _90724 A)) : (term2559 _90724 A B _37163 _37169) = (term2640 _90724 A B _37163 _37169 _37170).
Proof. exact (MK_COMB (@lem3516326 A B _37163) (@lem3516251 _90724 A B _37169 _37170 h1)). Qed.
Lemma lem3516346 {_90724 A : Type'} (f : A -> _90724) (g : type686 A) : ((term2056 _90724 A f g) = (term2057 _90724 A f g)) = ((term2056 _90724 A f g) = (term2057 _90724 A f g)).
Proof. exact (eq_refl ((term2056 _90724 A f g) = (term2057 _90724 A f g))). Qed.
Lemma lem3516375 {_90724 A : Type'} (g : type686 A) (_37168 : type852 _90724 A) (u : A -> Prop) (f : A -> _90724) (t : A -> Prop) : (term2453 _90724 A g _37168 u f t) = (term2453 _90724 A g _37168 u f t).
Proof. exact (eq_refl (term2453 _90724 A g _37168 u f t)). Qed.
Lemma lem3516376 {_90724 A : Type'} (g : type686 A) (_37168 : type852 _90724 A) (u : A -> Prop) (f : A -> _90724) : (term2454 _90724 A g _37168 u f) = (term2454 _90724 A g _37168 u f).
Proof. exact (fun_ext (fun t : A -> Prop => @lem3516375 _90724 A g _37168 u f t)). Qed.
Lemma lem3516377 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem3516378 {_90724 A : Type'} (g : type686 A) (_37168 : type852 _90724 A) (u : A -> Prop) (f : A -> _90724) : (term2455 _90724 A g _37168 u f) = (term2455 _90724 A g _37168 u f).
Proof. exact (MK_COMB (@lem3516377 A) (@lem3516376 _90724 A g _37168 u f)). Qed.
Lemma lem3516387 {A : Type'} (g : type686 A) : (term42 A g) = (term42 A g).
Proof. exact (eq_refl (term42 A g)). Qed.
Lemma lem3516388 {_90724 A : Type'} (g : type686 A) (_37168 : type852 _90724 A) (u : A -> Prop) (f : A -> _90724) : (term2456 _90724 A g _37168 u f) = (term2456 _90724 A g _37168 u f).
Proof. exact (MK_COMB (@lem3516387 A g) (@lem3516378 _90724 A g _37168 u f)). Qed.
Lemma lem3516389 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem3516390 {_90724 A : Type'} (g : type686 A) (_37168 : type852 _90724 A) (u : A -> Prop) (f : A -> _90724) : (term2457 _90724 A g _37168 u f) = (term2457 _90724 A g _37168 u f).
Proof. exact (MK_COMB (@lem3516389) (@lem3516388 _90724 A g _37168 u f)). Qed.
Lemma lem3516391 {_90724 A : Type'} (_37168 : type852 _90724 A) (u : A -> Prop) (f : A -> _90724) (g : type686 A) : (term2458 _90724 A _37168 u f g) = (term2458 _90724 A _37168 u f g).
Proof. exact (MK_COMB (@lem3516390 _90724 A g _37168 u f) (@lem3516346 _90724 A f g)). Qed.
Lemma lem3516392 {_90724 A : Type'} (_37168 : type852 _90724 A) (u : A -> Prop) (f : A -> _90724) : (term2459 _90724 A _37168 u f) = (term2459 _90724 A _37168 u f).
Proof. exact (fun_ext (fun g : type686 A => @lem3516391 _90724 A _37168 u f g)). Qed.
Lemma lem3516393 {A : Type'} : (@all ((A -> Prop) -> Prop)) = (@all ((A -> Prop) -> Prop)).
Proof. exact (eq_refl (@all ((A -> Prop) -> Prop))). Qed.
Lemma lem3516394 {_90724 A : Type'} (_37168 : type852 _90724 A) (u : A -> Prop) (f : A -> _90724) : (term2460 _90724 A _37168 u f) = (term2460 _90724 A _37168 u f).
Proof. exact (MK_COMB (@lem3516393 A) (@lem3516392 _90724 A _37168 u f)). Qed.
Lemma lem3516395 {_90724 A : Type'} (_37168 : type852 _90724 A) (u : A -> Prop) : (term2461 _90724 A _37168 u) = (term2461 _90724 A _37168 u).
Proof. exact (fun_ext (fun f : A -> _90724 => @lem3516394 _90724 A _37168 u f)). Qed.
Lemma lem3516396 {_90724 A : Type'} : (@all (A -> _90724)) = (@all (A -> _90724)).
Proof. exact (eq_refl (@all (A -> _90724))). Qed.
Lemma lem3516397 {_90724 A : Type'} (_37168 : type852 _90724 A) (u : A -> Prop) : (term2462 _90724 A _37168 u) = (term2462 _90724 A _37168 u).
Proof. exact (MK_COMB (@lem3516396 _90724 A) (@lem3516395 _90724 A _37168 u)). Qed.
Lemma lem3516398 {_90724 A : Type'} (_37168 : type852 _90724 A) : (term2463 _90724 A _37168) = (term2463 _90724 A _37168).
Proof. exact (fun_ext (fun u : A -> Prop => @lem3516397 _90724 A _37168 u)). Qed.
Lemma lem3516399 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem3516400 {_90724 A : Type'} (_37168 : type852 _90724 A) : (term2464 _90724 A _37168) = (term2464 _90724 A _37168).
Proof. exact (MK_COMB (@lem3516399 A) (@lem3516398 _90724 A _37168)). Qed.
Lemma lem3516401 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem3516402 {_90724 A : Type'} (_37168 : type852 _90724 A) : (term2465 _90724 A _37168) = (term2465 _90724 A _37168).
Proof. exact (MK_COMB (@lem3516401) (@lem3516400 _90724 A _37168)). Qed.
Lemma lem3516403 {_90724 A B : Type'} (_37168 : type852 _90724 A) (_37163 : type627 A B) (_37169 : type852 _90724 B) (_37170 : type235 _90724 A) (h1 : _37170 = (term2612 _90724 A)) : (term2560 _90724 A B _37168 _37163 _37169) = (term2641 _90724 A B _37168 _37163 _37169 _37170).
Proof. exact (MK_COMB (@lem3516402 _90724 A _37168) (@lem3516327 _90724 A B _37163 _37169 _37170 h1)). Qed.
Lemma lem3516422 {_90715 A : Type'} (f : type1413 _90715 A) (g : type686 _90715) : ((term2099 _90715 A f g) = (term2100 _90715 A f g)) = ((term2099 _90715 A f g) = (term2100 _90715 A f g)).
Proof. exact (eq_refl ((term2099 _90715 A f g) = (term2100 _90715 A f g))). Qed.
Lemma lem3516451 {_90715 A : Type'} (g : type686 _90715) (_37167 : type616 _90715 A) (u : _90715 -> Prop) (f : type1413 _90715 A) (t : _90715 -> Prop) : (term2339 _90715 A g _37167 u f t) = (term2339 _90715 A g _37167 u f t).
Proof. exact (eq_refl (term2339 _90715 A g _37167 u f t)). Qed.
Lemma lem3516452 {_90715 A : Type'} (g : type686 _90715) (_37167 : type616 _90715 A) (u : _90715 -> Prop) (f : type1413 _90715 A) : (term2340 _90715 A g _37167 u f) = (term2340 _90715 A g _37167 u f).
Proof. exact (fun_ext (fun t : _90715 -> Prop => @lem3516451 _90715 A g _37167 u f t)). Qed.
Lemma lem3516453 {_90715 : Type'} : (@all (_90715 -> Prop)) = (@all (_90715 -> Prop)).
Proof. exact (eq_refl (@all (_90715 -> Prop))). Qed.
Lemma lem3516454 {_90715 A : Type'} (g : type686 _90715) (_37167 : type616 _90715 A) (u : _90715 -> Prop) (f : type1413 _90715 A) : (term2341 _90715 A g _37167 u f) = (term2341 _90715 A g _37167 u f).
Proof. exact (MK_COMB (@lem3516453 _90715) (@lem3516452 _90715 A g _37167 u f)). Qed.
Lemma lem3516463 {_90715 : Type'} (g : type686 _90715) : (term42 _90715 g) = (term42 _90715 g).
Proof. exact (eq_refl (term42 _90715 g)). Qed.
Lemma lem3516464 {_90715 A : Type'} (g : type686 _90715) (_37167 : type616 _90715 A) (u : _90715 -> Prop) (f : type1413 _90715 A) : (term2342 _90715 A g _37167 u f) = (term2342 _90715 A g _37167 u f).
Proof. exact (MK_COMB (@lem3516463 _90715 g) (@lem3516454 _90715 A g _37167 u f)). Qed.
Lemma lem3516465 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem3516466 {_90715 A : Type'} (g : type686 _90715) (_37167 : type616 _90715 A) (u : _90715 -> Prop) (f : type1413 _90715 A) : (term2343 _90715 A g _37167 u f) = (term2343 _90715 A g _37167 u f).
Proof. exact (MK_COMB (@lem3516465) (@lem3516464 _90715 A g _37167 u f)). Qed.
Lemma lem3516467 {_90715 A : Type'} (_37167 : type616 _90715 A) (u : _90715 -> Prop) (f : type1413 _90715 A) (g : type686 _90715) : (term2344 _90715 A _37167 u f g) = (term2344 _90715 A _37167 u f g).
Proof. exact (MK_COMB (@lem3516466 _90715 A g _37167 u f) (@lem3516422 _90715 A f g)). Qed.
Lemma lem3516468 {_90715 A : Type'} (_37167 : type616 _90715 A) (u : _90715 -> Prop) (f : type1413 _90715 A) : (term2345 _90715 A _37167 u f) = (term2345 _90715 A _37167 u f).
Proof. exact (fun_ext (fun g : type686 _90715 => @lem3516467 _90715 A _37167 u f g)). Qed.
Lemma lem3516469 {_90715 : Type'} : (@all ((_90715 -> Prop) -> Prop)) = (@all ((_90715 -> Prop) -> Prop)).
Proof. exact (eq_refl (@all ((_90715 -> Prop) -> Prop))). Qed.
Lemma lem3516470 {_90715 A : Type'} (_37167 : type616 _90715 A) (u : _90715 -> Prop) (f : type1413 _90715 A) : (term2346 _90715 A _37167 u f) = (term2346 _90715 A _37167 u f).
Proof. exact (MK_COMB (@lem3516469 _90715) (@lem3516468 _90715 A _37167 u f)). Qed.
Lemma lem3516471 {_90715 A : Type'} (_37167 : type616 _90715 A) (u : _90715 -> Prop) : (term2347 _90715 A _37167 u) = (term2347 _90715 A _37167 u).
Proof. exact (fun_ext (fun f : type1413 _90715 A => @lem3516470 _90715 A _37167 u f)). Qed.
Lemma lem3516472 {_90715 A : Type'} : (@all (_90715 -> A -> Prop)) = (@all (_90715 -> A -> Prop)).
Proof. exact (eq_refl (@all (_90715 -> A -> Prop))). Qed.
Lemma lem3516473 {_90715 A : Type'} (_37167 : type616 _90715 A) (u : _90715 -> Prop) : (term2348 _90715 A _37167 u) = (term2348 _90715 A _37167 u).
Proof. exact (MK_COMB (@lem3516472 _90715 A) (@lem3516471 _90715 A _37167 u)). Qed.
Lemma lem3516474 {_90715 A : Type'} (_37167 : type616 _90715 A) : (term2349 _90715 A _37167) = (term2349 _90715 A _37167).
Proof. exact (fun_ext (fun u : _90715 -> Prop => @lem3516473 _90715 A _37167 u)). Qed.
Lemma lem3516475 {_90715 : Type'} : (@all (_90715 -> Prop)) = (@all (_90715 -> Prop)).
Proof. exact (eq_refl (@all (_90715 -> Prop))). Qed.
Lemma lem3516476 {_90715 A : Type'} (_37167 : type616 _90715 A) : (term2350 _90715 A _37167) = (term2350 _90715 A _37167).
Proof. exact (MK_COMB (@lem3516475 _90715) (@lem3516474 _90715 A _37167)). Qed.
Lemma lem3516477 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem3516478 {_90715 A : Type'} (_37167 : type616 _90715 A) : (term2351 _90715 A _37167) = (term2351 _90715 A _37167).
Proof. exact (MK_COMB (@lem3516477) (@lem3516476 _90715 A _37167)). Qed.
Lemma lem3516479 {_90715 _90724 A B : Type'} (_37167 : type616 _90715 A) (_37168 : type852 _90724 A) (_37163 : type627 A B) (_37169 : type852 _90724 B) (_37170 : type235 _90724 A) (h1 : _37170 = (term2612 _90724 A)) : (term2561 _90715 _90724 A B _37167 _37168 _37163 _37169) = (term2642 _90715 _90724 A B _37167 _37168 _37163 _37169 _37170).
Proof. exact (MK_COMB (@lem3516478 _90715 A _37167) (@lem3516403 _90724 A B _37168 _37163 _37169 _37170 h1)). Qed.
Lemma lem3516498 {_90715 B : Type'} (f : _90715 -> B) (g : type686 _90715) : ((term49 _90715 B f g) = (term50 _90715 B f g)) = ((term49 _90715 B f g) = (term50 _90715 B f g)).
Proof. exact (eq_refl ((term49 _90715 B f g) = (term50 _90715 B f g))). Qed.
Lemma lem3516527 {_90715 B : Type'} (g : type686 _90715) (_37166 : type627 _90715 B) (u : _90715 -> Prop) (f : _90715 -> B) (t : _90715 -> Prop) : (term2081 _90715 B g _37166 u f t) = (term2081 _90715 B g _37166 u f t).
Proof. exact (eq_refl (term2081 _90715 B g _37166 u f t)). Qed.
Lemma lem3516528 {_90715 B : Type'} (g : type686 _90715) (_37166 : type627 _90715 B) (u : _90715 -> Prop) (f : _90715 -> B) : (term2082 _90715 B g _37166 u f) = (term2082 _90715 B g _37166 u f).
Proof. exact (fun_ext (fun t : _90715 -> Prop => @lem3516527 _90715 B g _37166 u f t)). Qed.
Lemma lem3516529 {_90715 : Type'} : (@all (_90715 -> Prop)) = (@all (_90715 -> Prop)).
Proof. exact (eq_refl (@all (_90715 -> Prop))). Qed.
Lemma lem3516530 {_90715 B : Type'} (g : type686 _90715) (_37166 : type627 _90715 B) (u : _90715 -> Prop) (f : _90715 -> B) : (term2083 _90715 B g _37166 u f) = (term2083 _90715 B g _37166 u f).
Proof. exact (MK_COMB (@lem3516529 _90715) (@lem3516528 _90715 B g _37166 u f)). Qed.
Lemma lem3516539 {_90715 : Type'} (g : type686 _90715) : (term42 _90715 g) = (term42 _90715 g).
Proof. exact (eq_refl (term42 _90715 g)). Qed.
Lemma lem3516540 {_90715 B : Type'} (g : type686 _90715) (_37166 : type627 _90715 B) (u : _90715 -> Prop) (f : _90715 -> B) : (term2084 _90715 B g _37166 u f) = (term2084 _90715 B g _37166 u f).
Proof. exact (MK_COMB (@lem3516539 _90715 g) (@lem3516530 _90715 B g _37166 u f)). Qed.
Lemma lem3516541 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem3516542 {_90715 B : Type'} (g : type686 _90715) (_37166 : type627 _90715 B) (u : _90715 -> Prop) (f : _90715 -> B) : (term2085 _90715 B g _37166 u f) = (term2085 _90715 B g _37166 u f).
Proof. exact (MK_COMB (@lem3516541) (@lem3516540 _90715 B g _37166 u f)). Qed.
Lemma lem3516543 {_90715 B : Type'} (_37166 : type627 _90715 B) (u : _90715 -> Prop) (f : _90715 -> B) (g : type686 _90715) : (term2086 _90715 B _37166 u f g) = (term2086 _90715 B _37166 u f g).
Proof. exact (MK_COMB (@lem3516542 _90715 B g _37166 u f) (@lem3516498 _90715 B f g)). Qed.
Lemma lem3516544 {_90715 B : Type'} (_37166 : type627 _90715 B) (u : _90715 -> Prop) (f : _90715 -> B) : (term2088 _90715 B _37166 u f) = (term2088 _90715 B _37166 u f).
Proof. exact (fun_ext (fun g : type686 _90715 => @lem3516543 _90715 B _37166 u f g)). Qed.
Lemma lem3516545 {_90715 : Type'} : (@all ((_90715 -> Prop) -> Prop)) = (@all ((_90715 -> Prop) -> Prop)).
Proof. exact (eq_refl (@all ((_90715 -> Prop) -> Prop))). Qed.
Lemma lem3516546 {_90715 B : Type'} (_37166 : type627 _90715 B) (u : _90715 -> Prop) (f : _90715 -> B) : (term2089 _90715 B _37166 u f) = (term2089 _90715 B _37166 u f).
Proof. exact (MK_COMB (@lem3516545 _90715) (@lem3516544 _90715 B _37166 u f)). Qed.
Lemma lem3516547 {_90715 B : Type'} (_37166 : type627 _90715 B) (u : _90715 -> Prop) : (term2091 _90715 B _37166 u) = (term2091 _90715 B _37166 u).
Proof. exact (fun_ext (fun f : _90715 -> B => @lem3516546 _90715 B _37166 u f)). Qed.
Lemma lem3516548 {_90715 B : Type'} : (@all (_90715 -> B)) = (@all (_90715 -> B)).
Proof. exact (eq_refl (@all (_90715 -> B))). Qed.
Lemma lem3516549 {_90715 B : Type'} (_37166 : type627 _90715 B) (u : _90715 -> Prop) : (term2092 _90715 B _37166 u) = (term2092 _90715 B _37166 u).
Proof. exact (MK_COMB (@lem3516548 _90715 B) (@lem3516547 _90715 B _37166 u)). Qed.
Lemma lem3516550 {_90715 B : Type'} (_37166 : type627 _90715 B) : (term2094 _90715 B _37166) = (term2094 _90715 B _37166).
Proof. exact (fun_ext (fun u : _90715 -> Prop => @lem3516549 _90715 B _37166 u)). Qed.
Lemma lem3516551 {_90715 : Type'} : (@all (_90715 -> Prop)) = (@all (_90715 -> Prop)).
Proof. exact (eq_refl (@all (_90715 -> Prop))). Qed.
Lemma lem3516552 {_90715 B : Type'} (_37166 : type627 _90715 B) : (term2095 _90715 B _37166) = (term2095 _90715 B _37166).
Proof. exact (MK_COMB (@lem3516551 _90715) (@lem3516550 _90715 B _37166)). Qed.
Lemma lem3516553 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem3516554 {_90715 B : Type'} (_37166 : type627 _90715 B) : (term2096 _90715 B _37166) = (term2096 _90715 B _37166).
Proof. exact (MK_COMB (@lem3516553) (@lem3516552 _90715 B _37166)). Qed.
Lemma lem3516555 {_90715 _90724 A B : Type'} (_37166 : type627 _90715 B) (_37167 : type616 _90715 A) (_37168 : type852 _90724 A) (_37163 : type627 A B) (_37169 : type852 _90724 B) (_37170 : type235 _90724 A) (h1 : _37170 = (term2612 _90724 A)) : (term2562 _90715 _90724 A B _37166 _37167 _37168 _37163 _37169) = (term2643 _90715 _90724 A B _37166 _37167 _37168 _37163 _37169 _37170).
Proof. exact (MK_COMB (@lem3516554 _90715 B _37166) (@lem3516479 _90715 _90724 A B _37167 _37168 _37163 _37169 _37170 h1)). Qed.
Lemma lem3516574 {_90715 A : Type'} (f : _90715 -> A) (g : type686 _90715) : ((term49 _90715 A f g) = (term50 _90715 A f g)) = ((term49 _90715 A f g) = (term50 _90715 A f g)).
Proof. exact (eq_refl ((term49 _90715 A f g) = (term50 _90715 A f g))). Qed.
Lemma lem3516603 {_90715 A : Type'} (g : type686 _90715) (_37165 : type627 _90715 A) (u : _90715 -> Prop) (f : _90715 -> A) (t : _90715 -> Prop) : (term2081 _90715 A g _37165 u f t) = (term2081 _90715 A g _37165 u f t).
Proof. exact (eq_refl (term2081 _90715 A g _37165 u f t)). Qed.
Lemma lem3516604 {_90715 A : Type'} (g : type686 _90715) (_37165 : type627 _90715 A) (u : _90715 -> Prop) (f : _90715 -> A) : (term2082 _90715 A g _37165 u f) = (term2082 _90715 A g _37165 u f).
Proof. exact (fun_ext (fun t : _90715 -> Prop => @lem3516603 _90715 A g _37165 u f t)). Qed.
Lemma lem3516605 {_90715 : Type'} : (@all (_90715 -> Prop)) = (@all (_90715 -> Prop)).
Proof. exact (eq_refl (@all (_90715 -> Prop))). Qed.
Lemma lem3516606 {_90715 A : Type'} (g : type686 _90715) (_37165 : type627 _90715 A) (u : _90715 -> Prop) (f : _90715 -> A) : (term2083 _90715 A g _37165 u f) = (term2083 _90715 A g _37165 u f).
Proof. exact (MK_COMB (@lem3516605 _90715) (@lem3516604 _90715 A g _37165 u f)). Qed.
Lemma lem3516615 {_90715 : Type'} (g : type686 _90715) : (term42 _90715 g) = (term42 _90715 g).
Proof. exact (eq_refl (term42 _90715 g)). Qed.
Lemma lem3516616 {_90715 A : Type'} (g : type686 _90715) (_37165 : type627 _90715 A) (u : _90715 -> Prop) (f : _90715 -> A) : (term2084 _90715 A g _37165 u f) = (term2084 _90715 A g _37165 u f).
Proof. exact (MK_COMB (@lem3516615 _90715 g) (@lem3516606 _90715 A g _37165 u f)). Qed.
Lemma lem3516617 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem3516618 {_90715 A : Type'} (g : type686 _90715) (_37165 : type627 _90715 A) (u : _90715 -> Prop) (f : _90715 -> A) : (term2085 _90715 A g _37165 u f) = (term2085 _90715 A g _37165 u f).
Proof. exact (MK_COMB (@lem3516617) (@lem3516616 _90715 A g _37165 u f)). Qed.
Lemma lem3516619 {_90715 A : Type'} (_37165 : type627 _90715 A) (u : _90715 -> Prop) (f : _90715 -> A) (g : type686 _90715) : (term2086 _90715 A _37165 u f g) = (term2086 _90715 A _37165 u f g).
Proof. exact (MK_COMB (@lem3516618 _90715 A g _37165 u f) (@lem3516574 _90715 A f g)). Qed.
Lemma lem3516620 {_90715 A : Type'} (_37165 : type627 _90715 A) (u : _90715 -> Prop) (f : _90715 -> A) : (term2088 _90715 A _37165 u f) = (term2088 _90715 A _37165 u f).
Proof. exact (fun_ext (fun g : type686 _90715 => @lem3516619 _90715 A _37165 u f g)). Qed.
Lemma lem3516621 {_90715 : Type'} : (@all ((_90715 -> Prop) -> Prop)) = (@all ((_90715 -> Prop) -> Prop)).
Proof. exact (eq_refl (@all ((_90715 -> Prop) -> Prop))). Qed.
Lemma lem3516622 {_90715 A : Type'} (_37165 : type627 _90715 A) (u : _90715 -> Prop) (f : _90715 -> A) : (term2089 _90715 A _37165 u f) = (term2089 _90715 A _37165 u f).
Proof. exact (MK_COMB (@lem3516621 _90715) (@lem3516620 _90715 A _37165 u f)). Qed.
Lemma lem3516623 {_90715 A : Type'} (_37165 : type627 _90715 A) (u : _90715 -> Prop) : (term2091 _90715 A _37165 u) = (term2091 _90715 A _37165 u).
Proof. exact (fun_ext (fun f : _90715 -> A => @lem3516622 _90715 A _37165 u f)). Qed.
Lemma lem3516624 {_90715 A : Type'} : (@all (_90715 -> A)) = (@all (_90715 -> A)).
Proof. exact (eq_refl (@all (_90715 -> A))). Qed.
Lemma lem3516625 {_90715 A : Type'} (_37165 : type627 _90715 A) (u : _90715 -> Prop) : (term2092 _90715 A _37165 u) = (term2092 _90715 A _37165 u).
Proof. exact (MK_COMB (@lem3516624 _90715 A) (@lem3516623 _90715 A _37165 u)). Qed.
Lemma lem3516626 {_90715 A : Type'} (_37165 : type627 _90715 A) : (term2094 _90715 A _37165) = (term2094 _90715 A _37165).
Proof. exact (fun_ext (fun u : _90715 -> Prop => @lem3516625 _90715 A _37165 u)). Qed.
Lemma lem3516627 {_90715 : Type'} : (@all (_90715 -> Prop)) = (@all (_90715 -> Prop)).
Proof. exact (eq_refl (@all (_90715 -> Prop))). Qed.
Lemma lem3516628 {_90715 A : Type'} (_37165 : type627 _90715 A) : (term2095 _90715 A _37165) = (term2095 _90715 A _37165).
Proof. exact (MK_COMB (@lem3516627 _90715) (@lem3516626 _90715 A _37165)). Qed.
Lemma lem3516629 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem3516630 {_90715 A : Type'} (_37165 : type627 _90715 A) : (term2096 _90715 A _37165) = (term2096 _90715 A _37165).
Proof. exact (MK_COMB (@lem3516629) (@lem3516628 _90715 A _37165)). Qed.
Lemma lem3516631 {_90715 _90724 A B : Type'} (_37165 : type627 _90715 A) (_37166 : type627 _90715 B) (_37167 : type616 _90715 A) (_37168 : type852 _90724 A) (_37163 : type627 A B) (_37169 : type852 _90724 B) (_37170 : type235 _90724 A) (h1 : _37170 = (term2612 _90724 A)) : (term2563 _90715 _90724 A B _37165 _37166 _37167 _37168 _37163 _37169) = (term2644 _90715 _90724 A B _37165 _37166 _37167 _37168 _37163 _37169 _37170).
Proof. exact (MK_COMB (@lem3516630 _90715 A _37165) (@lem3516555 _90715 _90724 A B _37166 _37167 _37168 _37163 _37169 _37170 h1)). Qed.
Lemma lem3516650 {_90715 _90724 : Type'} (f : _90715 -> _90724) (g : type686 _90715) : ((term49 _90715 _90724 f g) = (term50 _90715 _90724 f g)) = ((term49 _90715 _90724 f g) = (term50 _90715 _90724 f g)).
Proof. exact (eq_refl ((term49 _90715 _90724 f g) = (term50 _90715 _90724 f g))). Qed.
Lemma lem3516679 {_90715 _90724 : Type'} (g : type686 _90715) (_37164 : type627 _90715 _90724) (u : _90715 -> Prop) (f : _90715 -> _90724) (t : _90715 -> Prop) : (term2081 _90715 _90724 g _37164 u f t) = (term2081 _90715 _90724 g _37164 u f t).
Proof. exact (eq_refl (term2081 _90715 _90724 g _37164 u f t)). Qed.
Lemma lem3516680 {_90715 _90724 : Type'} (g : type686 _90715) (_37164 : type627 _90715 _90724) (u : _90715 -> Prop) (f : _90715 -> _90724) : (term2082 _90715 _90724 g _37164 u f) = (term2082 _90715 _90724 g _37164 u f).
Proof. exact (fun_ext (fun t : _90715 -> Prop => @lem3516679 _90715 _90724 g _37164 u f t)). Qed.
Lemma lem3516681 {_90715 : Type'} : (@all (_90715 -> Prop)) = (@all (_90715 -> Prop)).
Proof. exact (eq_refl (@all (_90715 -> Prop))). Qed.
Lemma lem3516682 {_90715 _90724 : Type'} (g : type686 _90715) (_37164 : type627 _90715 _90724) (u : _90715 -> Prop) (f : _90715 -> _90724) : (term2083 _90715 _90724 g _37164 u f) = (term2083 _90715 _90724 g _37164 u f).
Proof. exact (MK_COMB (@lem3516681 _90715) (@lem3516680 _90715 _90724 g _37164 u f)). Qed.
Lemma lem3516691 {_90715 : Type'} (g : type686 _90715) : (term42 _90715 g) = (term42 _90715 g).
Proof. exact (eq_refl (term42 _90715 g)). Qed.
Lemma lem3516692 {_90715 _90724 : Type'} (g : type686 _90715) (_37164 : type627 _90715 _90724) (u : _90715 -> Prop) (f : _90715 -> _90724) : (term2084 _90715 _90724 g _37164 u f) = (term2084 _90715 _90724 g _37164 u f).
Proof. exact (MK_COMB (@lem3516691 _90715 g) (@lem3516682 _90715 _90724 g _37164 u f)). Qed.
Lemma lem3516693 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem3516694 {_90715 _90724 : Type'} (g : type686 _90715) (_37164 : type627 _90715 _90724) (u : _90715 -> Prop) (f : _90715 -> _90724) : (term2085 _90715 _90724 g _37164 u f) = (term2085 _90715 _90724 g _37164 u f).
Proof. exact (MK_COMB (@lem3516693) (@lem3516692 _90715 _90724 g _37164 u f)). Qed.
Lemma lem3516695 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) (u : _90715 -> Prop) (f : _90715 -> _90724) (g : type686 _90715) : (term2086 _90715 _90724 _37164 u f g) = (term2086 _90715 _90724 _37164 u f g).
Proof. exact (MK_COMB (@lem3516694 _90715 _90724 g _37164 u f) (@lem3516650 _90715 _90724 f g)). Qed.
Lemma lem3516696 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) (u : _90715 -> Prop) (f : _90715 -> _90724) : (term2088 _90715 _90724 _37164 u f) = (term2088 _90715 _90724 _37164 u f).
Proof. exact (fun_ext (fun g : type686 _90715 => @lem3516695 _90715 _90724 _37164 u f g)). Qed.
Lemma lem3516697 {_90715 : Type'} : (@all ((_90715 -> Prop) -> Prop)) = (@all ((_90715 -> Prop) -> Prop)).
Proof. exact (eq_refl (@all ((_90715 -> Prop) -> Prop))). Qed.
Lemma lem3516698 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) (u : _90715 -> Prop) (f : _90715 -> _90724) : (term2089 _90715 _90724 _37164 u f) = (term2089 _90715 _90724 _37164 u f).
Proof. exact (MK_COMB (@lem3516697 _90715) (@lem3516696 _90715 _90724 _37164 u f)). Qed.
Lemma lem3516699 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) (u : _90715 -> Prop) : (term2091 _90715 _90724 _37164 u) = (term2091 _90715 _90724 _37164 u).
Proof. exact (fun_ext (fun f : _90715 -> _90724 => @lem3516698 _90715 _90724 _37164 u f)). Qed.
Lemma lem3516700 {_90715 _90724 : Type'} : (@all (_90715 -> _90724)) = (@all (_90715 -> _90724)).
Proof. exact (eq_refl (@all (_90715 -> _90724))). Qed.
Lemma lem3516701 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) (u : _90715 -> Prop) : (term2092 _90715 _90724 _37164 u) = (term2092 _90715 _90724 _37164 u).
Proof. exact (MK_COMB (@lem3516700 _90715 _90724) (@lem3516699 _90715 _90724 _37164 u)). Qed.
Lemma lem3516702 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) : (term2094 _90715 _90724 _37164) = (term2094 _90715 _90724 _37164).
Proof. exact (fun_ext (fun u : _90715 -> Prop => @lem3516701 _90715 _90724 _37164 u)). Qed.
Lemma lem3516703 {_90715 : Type'} : (@all (_90715 -> Prop)) = (@all (_90715 -> Prop)).
Proof. exact (eq_refl (@all (_90715 -> Prop))). Qed.
Lemma lem3516704 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) : (term2095 _90715 _90724 _37164) = (term2095 _90715 _90724 _37164).
Proof. exact (MK_COMB (@lem3516703 _90715) (@lem3516702 _90715 _90724 _37164)). Qed.
Lemma lem3516705 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem3516706 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) : (term2096 _90715 _90724 _37164) = (term2096 _90715 _90724 _37164).
Proof. exact (MK_COMB (@lem3516705) (@lem3516704 _90715 _90724 _37164)). Qed.
Lemma lem3516707 {_90715 _90724 A B : Type'} (_37164 : type627 _90715 _90724) (_37165 : type627 _90715 A) (_37166 : type627 _90715 B) (_37167 : type616 _90715 A) (_37168 : type852 _90724 A) (_37163 : type627 A B) (_37169 : type852 _90724 B) (_37170 : type235 _90724 A) (h1 : _37170 = (term2612 _90724 A)) : (term2564 _90715 _90724 A B _37164 _37165 _37166 _37167 _37168 _37163 _37169) = (term2645 _90715 _90724 A B _37164 _37165 _37166 _37167 _37168 _37163 _37169 _37170).
Proof. exact (MK_COMB (@lem3516706 _90715 _90724 _37164) (@lem3516631 _90715 _90724 A B _37165 _37166 _37167 _37168 _37163 _37169 _37170 h1)). Qed.
Lemma lem3516726 {A B : Type'} (f : A -> B) (g : type686 A) : ((term49 A B f g) = (term50 A B f g)) = ((term49 A B f g) = (term50 A B f g)).
Proof. exact (eq_refl ((term49 A B f g) = (term50 A B f g))). Qed.
Lemma lem3516747 {A B : Type'} (g : type686 A) (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) (t : A -> Prop) : (term2124 A B g _37163 u f t) = (term2124 A B g _37163 u f t).
Proof. exact (eq_refl (term2124 A B g _37163 u f t)). Qed.
Lemma lem3516748 {A B : Type'} (g : type686 A) (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) : (term2125 A B g _37163 u f) = (term2125 A B g _37163 u f).
Proof. exact (fun_ext (fun t : A -> Prop => @lem3516747 A B g _37163 u f t)). Qed.
Lemma lem3516749 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem3516750 {A B : Type'} (g : type686 A) (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) : (term2126 A B g _37163 u f) = (term2126 A B g _37163 u f).
Proof. exact (MK_COMB (@lem3516749 A) (@lem3516748 A B g _37163 u f)). Qed.
Lemma lem3516763 {A : Type'} (g : type686 A) (t : A -> Prop) (u : A -> Prop) : (term2127 A g t u) = (term2127 A g t u).
Proof. exact (eq_refl (term2127 A g t u)). Qed.
Lemma lem3516764 {A : Type'} (g : type686 A) (u : A -> Prop) : (term2128 A g u) = (term2128 A g u).
Proof. exact (fun_ext (fun t : A -> Prop => @lem3516763 A g t u)). Qed.
Lemma lem3516765 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem3516766 {A : Type'} (g : type686 A) (u : A -> Prop) : (term2129 A g u) = (term2129 A g u).
Proof. exact (MK_COMB (@lem3516765 A) (@lem3516764 A g u)). Qed.
Lemma lem3516767 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem3516768 {A : Type'} (g : type686 A) (u : A -> Prop) : (term1946 A g u) = (term1946 A g u).
Proof. exact (MK_COMB (@lem3516767) (@lem3516766 A g u)). Qed.
Lemma lem3516769 {A B : Type'} (g : type686 A) (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) : (term2130 A B g _37163 u f) = (term2130 A B g _37163 u f).
Proof. exact (MK_COMB (@lem3516768 A g u) (@lem3516750 A B g _37163 u f)). Qed.
Lemma lem3516778 {A : Type'} (g : type686 A) : (term42 A g) = (term42 A g).
Proof. exact (eq_refl (term42 A g)). Qed.
Lemma lem3516779 {A B : Type'} (g : type686 A) (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) : (term2131 A B g _37163 u f) = (term2131 A B g _37163 u f).
Proof. exact (MK_COMB (@lem3516778 A g) (@lem3516769 A B g _37163 u f)). Qed.
Lemma lem3516780 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem3516781 {A B : Type'} (g : type686 A) (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) : (term2133 A B g _37163 u f) = (term2133 A B g _37163 u f).
Proof. exact (MK_COMB (@lem3516780) (@lem3516779 A B g _37163 u f)). Qed.
Lemma lem3516782 {A B : Type'} (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) (g : type686 A) : (term2134 A B _37163 u f g) = (term2134 A B _37163 u f g).
Proof. exact (MK_COMB (@lem3516781 A B g _37163 u f) (@lem3516726 A B f g)). Qed.
Lemma lem3516783 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem3516784 {A B : Type'} (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) (g : type686 A) : (term2135 A B _37163 u f g) = (term2135 A B _37163 u f g).
Proof. exact (MK_COMB (@lem3516783) (@lem3516782 A B _37163 u f g)). Qed.
Lemma lem3516785 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem3516786 {A B : Type'} (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) (g : type686 A) : (term2136 A B _37163 u f g) = (term2136 A B _37163 u f g).
Proof. exact (MK_COMB (@lem3516785) (@lem3516784 A B _37163 u f g)). Qed.
Lemma lem3516787 {_90715 _90724 A B : Type'} (u : A -> Prop) (f : A -> B) (g : type686 A) (_37164 : type627 _90715 _90724) (_37165 : type627 _90715 A) (_37166 : type627 _90715 B) (_37167 : type616 _90715 A) (_37168 : type852 _90724 A) (_37163 : type627 A B) (_37169 : type852 _90724 B) (_37170 : type235 _90724 A) (h1 : _37170 = (term2612 _90724 A)) : (term2565 _90715 _90724 A B u f g _37164 _37165 _37166 _37167 _37168 _37163 _37169) = (term2646 _90715 _90724 A B u f g _37164 _37165 _37166 _37167 _37168 _37163 _37169 _37170).
Proof. exact (MK_COMB (@lem3516786 A B _37163 u f g) (@lem3516707 _90715 _90724 A B _37164 _37165 _37166 _37167 _37168 _37163 _37169 _37170 h1)). Qed.
Lemma lem3516788 {_90715 _90724 A B : Type'} (f : A -> B) (g : type686 A) (_37164 : type627 _90715 _90724) (_37165 : type627 _90715 A) (_37166 : type627 _90715 B) (_37167 : type616 _90715 A) (_37168 : type852 _90724 A) (_37163 : type627 A B) (_37169 : type852 _90724 B) (_37170 : type235 _90724 A) (h1 : _37170 = (term2612 _90724 A)) : (term2566 _90715 _90724 A B f g _37164 _37165 _37166 _37167 _37168 _37163 _37169) = (term2647 _90715 _90724 A B f g _37164 _37165 _37166 _37167 _37168 _37163 _37169 _37170).
Proof. exact (fun_ext (fun u : A -> Prop => @lem3516787 _90715 _90724 A B u f g _37164 _37165 _37166 _37167 _37168 _37163 _37169 _37170 h1)). Qed.
Lemma lem3516789 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem3516790 {_90715 _90724 A B : Type'} (f : A -> B) (g : type686 A) (_37164 : type627 _90715 _90724) (_37165 : type627 _90715 A) (_37166 : type627 _90715 B) (_37167 : type616 _90715 A) (_37168 : type852 _90724 A) (_37163 : type627 A B) (_37169 : type852 _90724 B) (_37170 : type235 _90724 A) (h1 : _37170 = (term2612 _90724 A)) : (term2567 _90715 _90724 A B f g _37164 _37165 _37166 _37167 _37168 _37163 _37169) = (term2648 _90715 _90724 A B f g _37164 _37165 _37166 _37167 _37168 _37163 _37169 _37170).
Proof. exact (MK_COMB (@lem3516789 A) (@lem3516788 _90715 _90724 A B f g _37164 _37165 _37166 _37167 _37168 _37163 _37169 _37170 h1)). Qed.
Lemma lem3516791 {_90715 _90724 A B : Type'} (g : type686 A) (_37164 : type627 _90715 _90724) (_37165 : type627 _90715 A) (_37166 : type627 _90715 B) (_37167 : type616 _90715 A) (_37168 : type852 _90724 A) (_37163 : type627 A B) (_37169 : type852 _90724 B) (_37170 : type235 _90724 A) (h1 : _37170 = (term2612 _90724 A)) : (term2568 _90715 _90724 A B g _37164 _37165 _37166 _37167 _37168 _37163 _37169) = (term2649 _90715 _90724 A B g _37164 _37165 _37166 _37167 _37168 _37163 _37169 _37170).
Proof. exact (fun_ext (fun f : A -> B => @lem3516790 _90715 _90724 A B f g _37164 _37165 _37166 _37167 _37168 _37163 _37169 _37170 h1)). Qed.
Lemma lem3516792 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem3516793 {_90715 _90724 A B : Type'} (g : type686 A) (_37164 : type627 _90715 _90724) (_37165 : type627 _90715 A) (_37166 : type627 _90715 B) (_37167 : type616 _90715 A) (_37168 : type852 _90724 A) (_37163 : type627 A B) (_37169 : type852 _90724 B) (_37170 : type235 _90724 A) (h1 : _37170 = (term2612 _90724 A)) : (term2569 _90715 _90724 A B g _37164 _37165 _37166 _37167 _37168 _37163 _37169) = (term2650 _90715 _90724 A B g _37164 _37165 _37166 _37167 _37168 _37163 _37169 _37170).
Proof. exact (MK_COMB (@lem3516792 A B) (@lem3516791 _90715 _90724 A B g _37164 _37165 _37166 _37167 _37168 _37163 _37169 _37170 h1)). Qed.
Lemma lem3516794 {_90715 _90724 A B : Type'} (_37164 : type627 _90715 _90724) (_37165 : type627 _90715 A) (_37166 : type627 _90715 B) (_37167 : type616 _90715 A) (_37168 : type852 _90724 A) (_37163 : type627 A B) (_37169 : type852 _90724 B) (_37170 : type235 _90724 A) (h1 : _37170 = (term2612 _90724 A)) : (term2570 _90715 _90724 A B _37164 _37165 _37166 _37167 _37168 _37163 _37169) = (term2651 _90715 _90724 A B _37164 _37165 _37166 _37167 _37168 _37163 _37169 _37170).
Proof. exact (fun_ext (fun g : type686 A => @lem3516793 _90715 _90724 A B g _37164 _37165 _37166 _37167 _37168 _37163 _37169 _37170 h1)). Qed.
Lemma lem3516795 {A : Type'} : (@all ((A -> Prop) -> Prop)) = (@all ((A -> Prop) -> Prop)).
Proof. exact (eq_refl (@all ((A -> Prop) -> Prop))). Qed.
Lemma lem3516796 {_90715 _90724 A B : Type'} (_37164 : type627 _90715 _90724) (_37165 : type627 _90715 A) (_37166 : type627 _90715 B) (_37167 : type616 _90715 A) (_37168 : type852 _90724 A) (_37163 : type627 A B) (_37169 : type852 _90724 B) (_37170 : type235 _90724 A) (h1 : _37170 = (term2612 _90724 A)) : (term2571 _90715 _90724 A B _37164 _37165 _37166 _37167 _37168 _37163 _37169) = (term2652 _90715 _90724 A B _37164 _37165 _37166 _37167 _37168 _37163 _37169 _37170).
Proof. exact (MK_COMB (@lem3516795 A) (@lem3516794 _90715 _90724 A B _37164 _37165 _37166 _37167 _37168 _37163 _37169 _37170 h1)). Qed.
Lemma lem3516821 {A B : Type'} (GEN_PVAR_85 : A) (u : A -> Prop) (f : A -> B) (t : A -> Prop) (x : A) : (term61 A B GEN_PVAR_85 u f t x) = (term61 A B GEN_PVAR_85 u f t x).
Proof. exact (eq_refl (term61 A B GEN_PVAR_85 u f t x)). Qed.
Lemma lem3516822 {A B : Type'} (GEN_PVAR_85 : A) (u : A -> Prop) (f : A -> B) (t : A -> Prop) : (term63 A B GEN_PVAR_85 u f t) = (term63 A B GEN_PVAR_85 u f t).
Proof. exact (fun_ext (fun x : A => @lem3516821 A B GEN_PVAR_85 u f t x)). Qed.
Lemma lem3516823 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem3516824 {A B : Type'} (GEN_PVAR_85 : A) (u : A -> Prop) (f : A -> B) (t : A -> Prop) : (term65 A B GEN_PVAR_85 u f t) = (term65 A B GEN_PVAR_85 u f t).
Proof. exact (MK_COMB (@lem3516823 A) (@lem3516822 A B GEN_PVAR_85 u f t)). Qed.
Lemma lem3516835 {A B : Type'} (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) (t : A -> Prop) (GEN_PVAR_85 : A) : (term2201 A B _37163 u f t GEN_PVAR_85) = (term2201 A B _37163 u f t GEN_PVAR_85).
Proof. exact (eq_refl (term2201 A B _37163 u f t GEN_PVAR_85)). Qed.
Lemma lem3516836 {A B : Type'} (_37163 : type627 A B) (GEN_PVAR_85 : A) (u : A -> Prop) (f : A -> B) (t : A -> Prop) : ((_37163 u f t GEN_PVAR_85) = (term65 A B GEN_PVAR_85 u f t)) = ((_37163 u f t GEN_PVAR_85) = (term65 A B GEN_PVAR_85 u f t)).
Proof. exact (MK_COMB (@lem3516835 A B _37163 u f t GEN_PVAR_85) (@lem3516824 A B GEN_PVAR_85 u f t)). Qed.
Lemma lem3516837 {A B : Type'} (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) (t : A -> Prop) : (term2203 A B _37163 u f t) = (term2203 A B _37163 u f t).
Proof. exact (fun_ext (fun GEN_PVAR_85 : A => @lem3516836 A B _37163 GEN_PVAR_85 u f t)). Qed.
Lemma lem3516838 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem3516839 {A B : Type'} (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) (t : A -> Prop) : (term2204 A B _37163 u f t) = (term2204 A B _37163 u f t).
Proof. exact (MK_COMB (@lem3516838 A) (@lem3516837 A B _37163 u f t)). Qed.
Lemma lem3516840 {A B : Type'} (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) : (term2205 A B _37163 u f) = (term2205 A B _37163 u f).
Proof. exact (fun_ext (fun t : A -> Prop => @lem3516839 A B _37163 u f t)). Qed.
Lemma lem3516841 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem3516842 {A B : Type'} (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) : (term2206 A B _37163 u f) = (term2206 A B _37163 u f).
Proof. exact (MK_COMB (@lem3516841 A) (@lem3516840 A B _37163 u f)). Qed.
Lemma lem3516843 {A B : Type'} (_37163 : type627 A B) (u : A -> Prop) : (term2207 A B _37163 u) = (term2207 A B _37163 u).
Proof. exact (fun_ext (fun f : A -> B => @lem3516842 A B _37163 u f)). Qed.
Lemma lem3516844 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem3516845 {A B : Type'} (_37163 : type627 A B) (u : A -> Prop) : (term2208 A B _37163 u) = (term2208 A B _37163 u).
Proof. exact (MK_COMB (@lem3516844 A B) (@lem3516843 A B _37163 u)). Qed.
Lemma lem3516846 {A B : Type'} (_37163 : type627 A B) : (term2209 A B _37163) = (term2209 A B _37163).
Proof. exact (fun_ext (fun u : A -> Prop => @lem3516845 A B _37163 u)). Qed.
Lemma lem3516847 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem3516848 {A B : Type'} (_37163 : type627 A B) : (term2210 A B _37163) = (term2210 A B _37163).
Proof. exact (MK_COMB (@lem3516847 A) (@lem3516846 A B _37163)). Qed.
Lemma lem3516849 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem3516850 {A B : Type'} (_37163 : type627 A B) : (term2211 A B _37163) = (term2211 A B _37163).
Proof. exact (MK_COMB (@lem3516849) (@lem3516848 A B _37163)). Qed.
Lemma lem3516851 {_90715 _90724 A B : Type'} (_37164 : type627 _90715 _90724) (_37165 : type627 _90715 A) (_37166 : type627 _90715 B) (_37167 : type616 _90715 A) (_37168 : type852 _90724 A) (_37163 : type627 A B) (_37169 : type852 _90724 B) (_37170 : type235 _90724 A) (h1 : _37170 = (term2612 _90724 A)) : (term2572 _90715 _90724 A B _37164 _37165 _37166 _37167 _37168 _37163 _37169) = (term2653 _90715 _90724 A B _37164 _37165 _37166 _37167 _37168 _37163 _37169 _37170).
Proof. exact (MK_COMB (@lem3516850 A B _37163) (@lem3516796 _90715 _90724 A B _37164 _37165 _37166 _37167 _37168 _37163 _37169 _37170 h1)). Qed.
Lemma lem3516852 {_90715 _90724 A B : Type'} (_37164 : type627 _90715 _90724) (_37165 : type627 _90715 A) (_37166 : type627 _90715 B) (_37167 : type616 _90715 A) (_37168 : type852 _90724 A) (_37169 : type852 _90724 B) (_37170 : type235 _90724 A) (h1 : _37170 = (term2612 _90724 A)) : (term2573 _90715 _90724 A B _37164 _37165 _37166 _37167 _37168 _37169) = (term2654 _90715 _90724 A B _37164 _37165 _37166 _37167 _37168 _37169 _37170).
Proof. exact (fun_ext (fun _37163 : type627 A B => @lem3516851 _90715 _90724 A B _37164 _37165 _37166 _37167 _37168 _37163 _37169 _37170 h1)). Qed.
Lemma lem3516853 {A B : Type'} : (@all ((A -> Prop) -> (A -> B) -> (A -> Prop) -> A -> Prop)) = (@all ((A -> Prop) -> (A -> B) -> (A -> Prop) -> A -> Prop)).
Proof. exact (eq_refl (@all ((A -> Prop) -> (A -> B) -> (A -> Prop) -> A -> Prop))). Qed.
Lemma lem3516854 {_90715 _90724 A B : Type'} (_37164 : type627 _90715 _90724) (_37165 : type627 _90715 A) (_37166 : type627 _90715 B) (_37167 : type616 _90715 A) (_37168 : type852 _90724 A) (_37169 : type852 _90724 B) (_37170 : type235 _90724 A) (h1 : _37170 = (term2612 _90724 A)) : (term2574 _90715 _90724 A B _37164 _37165 _37166 _37167 _37168 _37169) = (term2655 _90715 _90724 A B _37164 _37165 _37166 _37167 _37168 _37169 _37170).
Proof. exact (MK_COMB (@lem3516853 A B) (@lem3516852 _90715 _90724 A B _37164 _37165 _37166 _37167 _37168 _37169 _37170 h1)). Qed.
Lemma lem3516879 {_90715 _90724 : Type'} (GEN_PVAR_84 : _90715) (u : _90715 -> Prop) (f : _90715 -> _90724) (t : _90715 -> Prop) (x : _90715) : (term61 _90715 _90724 GEN_PVAR_84 u f t x) = (term61 _90715 _90724 GEN_PVAR_84 u f t x).
Proof. exact (eq_refl (term61 _90715 _90724 GEN_PVAR_84 u f t x)). Qed.
Lemma lem3516880 {_90715 _90724 : Type'} (GEN_PVAR_84 : _90715) (u : _90715 -> Prop) (f : _90715 -> _90724) (t : _90715 -> Prop) : (term63 _90715 _90724 GEN_PVAR_84 u f t) = (term63 _90715 _90724 GEN_PVAR_84 u f t).
Proof. exact (fun_ext (fun x : _90715 => @lem3516879 _90715 _90724 GEN_PVAR_84 u f t x)). Qed.
Lemma lem3516881 {_90715 : Type'} : (@ex _90715) = (@ex _90715).
Proof. exact (eq_refl (@ex _90715)). Qed.
Lemma lem3516882 {_90715 _90724 : Type'} (GEN_PVAR_84 : _90715) (u : _90715 -> Prop) (f : _90715 -> _90724) (t : _90715 -> Prop) : (term65 _90715 _90724 GEN_PVAR_84 u f t) = (term65 _90715 _90724 GEN_PVAR_84 u f t).
Proof. exact (MK_COMB (@lem3516881 _90715) (@lem3516880 _90715 _90724 GEN_PVAR_84 u f t)). Qed.
Lemma lem3516893 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) (u : _90715 -> Prop) (f : _90715 -> _90724) (t : _90715 -> Prop) (GEN_PVAR_84 : _90715) : (term2201 _90715 _90724 _37164 u f t GEN_PVAR_84) = (term2201 _90715 _90724 _37164 u f t GEN_PVAR_84).
Proof. exact (eq_refl (term2201 _90715 _90724 _37164 u f t GEN_PVAR_84)). Qed.
Lemma lem3516894 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) (GEN_PVAR_84 : _90715) (u : _90715 -> Prop) (f : _90715 -> _90724) (t : _90715 -> Prop) : ((_37164 u f t GEN_PVAR_84) = (term65 _90715 _90724 GEN_PVAR_84 u f t)) = ((_37164 u f t GEN_PVAR_84) = (term65 _90715 _90724 GEN_PVAR_84 u f t)).
Proof. exact (MK_COMB (@lem3516893 _90715 _90724 _37164 u f t GEN_PVAR_84) (@lem3516882 _90715 _90724 GEN_PVAR_84 u f t)). Qed.
Lemma lem3516895 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) (u : _90715 -> Prop) (f : _90715 -> _90724) (t : _90715 -> Prop) : (term2203 _90715 _90724 _37164 u f t) = (term2203 _90715 _90724 _37164 u f t).
Proof. exact (fun_ext (fun GEN_PVAR_84 : _90715 => @lem3516894 _90715 _90724 _37164 GEN_PVAR_84 u f t)). Qed.
Lemma lem3516896 {_90715 : Type'} : (@all _90715) = (@all _90715).
Proof. exact (eq_refl (@all _90715)). Qed.
Lemma lem3516897 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) (u : _90715 -> Prop) (f : _90715 -> _90724) (t : _90715 -> Prop) : (term2204 _90715 _90724 _37164 u f t) = (term2204 _90715 _90724 _37164 u f t).
Proof. exact (MK_COMB (@lem3516896 _90715) (@lem3516895 _90715 _90724 _37164 u f t)). Qed.
Lemma lem3516898 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) (u : _90715 -> Prop) (f : _90715 -> _90724) : (term2205 _90715 _90724 _37164 u f) = (term2205 _90715 _90724 _37164 u f).
Proof. exact (fun_ext (fun t : _90715 -> Prop => @lem3516897 _90715 _90724 _37164 u f t)). Qed.
Lemma lem3516899 {_90715 : Type'} : (@all (_90715 -> Prop)) = (@all (_90715 -> Prop)).
Proof. exact (eq_refl (@all (_90715 -> Prop))). Qed.
Lemma lem3516900 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) (u : _90715 -> Prop) (f : _90715 -> _90724) : (term2206 _90715 _90724 _37164 u f) = (term2206 _90715 _90724 _37164 u f).
Proof. exact (MK_COMB (@lem3516899 _90715) (@lem3516898 _90715 _90724 _37164 u f)). Qed.
Lemma lem3516901 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) (u : _90715 -> Prop) : (term2207 _90715 _90724 _37164 u) = (term2207 _90715 _90724 _37164 u).
Proof. exact (fun_ext (fun f : _90715 -> _90724 => @lem3516900 _90715 _90724 _37164 u f)). Qed.
Lemma lem3516902 {_90715 _90724 : Type'} : (@all (_90715 -> _90724)) = (@all (_90715 -> _90724)).
Proof. exact (eq_refl (@all (_90715 -> _90724))). Qed.
Lemma lem3516903 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) (u : _90715 -> Prop) : (term2208 _90715 _90724 _37164 u) = (term2208 _90715 _90724 _37164 u).
Proof. exact (MK_COMB (@lem3516902 _90715 _90724) (@lem3516901 _90715 _90724 _37164 u)). Qed.
Lemma lem3516904 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) : (term2209 _90715 _90724 _37164) = (term2209 _90715 _90724 _37164).
Proof. exact (fun_ext (fun u : _90715 -> Prop => @lem3516903 _90715 _90724 _37164 u)). Qed.
Lemma lem3516905 {_90715 : Type'} : (@all (_90715 -> Prop)) = (@all (_90715 -> Prop)).
Proof. exact (eq_refl (@all (_90715 -> Prop))). Qed.
Lemma lem3516906 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) : (term2210 _90715 _90724 _37164) = (term2210 _90715 _90724 _37164).
Proof. exact (MK_COMB (@lem3516905 _90715) (@lem3516904 _90715 _90724 _37164)). Qed.
Lemma lem3516907 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem3516908 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) : (term2211 _90715 _90724 _37164) = (term2211 _90715 _90724 _37164).
Proof. exact (MK_COMB (@lem3516907) (@lem3516906 _90715 _90724 _37164)). Qed.
Lemma lem3516909 {_90715 _90724 A B : Type'} (_37164 : type627 _90715 _90724) (_37165 : type627 _90715 A) (_37166 : type627 _90715 B) (_37167 : type616 _90715 A) (_37168 : type852 _90724 A) (_37169 : type852 _90724 B) (_37170 : type235 _90724 A) (h1 : _37170 = (term2612 _90724 A)) : (term2575 _90715 _90724 A B _37164 _37165 _37166 _37167 _37168 _37169) = (term2656 _90715 _90724 A B _37164 _37165 _37166 _37167 _37168 _37169 _37170).
Proof. exact (MK_COMB (@lem3516908 _90715 _90724 _37164) (@lem3516854 _90715 _90724 A B _37164 _37165 _37166 _37167 _37168 _37169 _37170 h1)). Qed.
Lemma lem3516910 {_90715 _90724 A B : Type'} (_37165 : type627 _90715 A) (_37166 : type627 _90715 B) (_37167 : type616 _90715 A) (_37168 : type852 _90724 A) (_37169 : type852 _90724 B) (_37170 : type235 _90724 A) (h1 : _37170 = (term2612 _90724 A)) : (term2576 _90715 _90724 A B _37165 _37166 _37167 _37168 _37169) = (term2657 _90715 _90724 A B _37165 _37166 _37167 _37168 _37169 _37170).
Proof. exact (fun_ext (fun _37164 : type627 _90715 _90724 => @lem3516909 _90715 _90724 A B _37164 _37165 _37166 _37167 _37168 _37169 _37170 h1)). Qed.
Lemma lem3516911 {_90715 _90724 : Type'} : (@all ((_90715 -> Prop) -> (_90715 -> _90724) -> (_90715 -> Prop) -> _90715 -> Prop)) = (@all ((_90715 -> Prop) -> (_90715 -> _90724) -> (_90715 -> Prop) -> _90715 -> Prop)).
Proof. exact (eq_refl (@all ((_90715 -> Prop) -> (_90715 -> _90724) -> (_90715 -> Prop) -> _90715 -> Prop))). Qed.
Lemma lem3516912 {_90715 _90724 A B : Type'} (_37165 : type627 _90715 A) (_37166 : type627 _90715 B) (_37167 : type616 _90715 A) (_37168 : type852 _90724 A) (_37169 : type852 _90724 B) (_37170 : type235 _90724 A) (h1 : _37170 = (term2612 _90724 A)) : (term2577 _90715 _90724 A B _37165 _37166 _37167 _37168 _37169) = (term2658 _90715 _90724 A B _37165 _37166 _37167 _37168 _37169 _37170).
Proof. exact (MK_COMB (@lem3516911 _90715 _90724) (@lem3516910 _90715 _90724 A B _37165 _37166 _37167 _37168 _37169 _37170 h1)). Qed.
Lemma lem3516937 {_90715 A : Type'} (GEN_PVAR_84 : _90715) (u : _90715 -> Prop) (f : _90715 -> A) (t : _90715 -> Prop) (x : _90715) : (term61 _90715 A GEN_PVAR_84 u f t x) = (term61 _90715 A GEN_PVAR_84 u f t x).
Proof. exact (eq_refl (term61 _90715 A GEN_PVAR_84 u f t x)). Qed.
Lemma lem3516938 {_90715 A : Type'} (GEN_PVAR_84 : _90715) (u : _90715 -> Prop) (f : _90715 -> A) (t : _90715 -> Prop) : (term63 _90715 A GEN_PVAR_84 u f t) = (term63 _90715 A GEN_PVAR_84 u f t).
Proof. exact (fun_ext (fun x : _90715 => @lem3516937 _90715 A GEN_PVAR_84 u f t x)). Qed.
Lemma lem3516939 {_90715 : Type'} : (@ex _90715) = (@ex _90715).
Proof. exact (eq_refl (@ex _90715)). Qed.
Lemma lem3516940 {_90715 A : Type'} (GEN_PVAR_84 : _90715) (u : _90715 -> Prop) (f : _90715 -> A) (t : _90715 -> Prop) : (term65 _90715 A GEN_PVAR_84 u f t) = (term65 _90715 A GEN_PVAR_84 u f t).
Proof. exact (MK_COMB (@lem3516939 _90715) (@lem3516938 _90715 A GEN_PVAR_84 u f t)). Qed.
Lemma lem3516951 {_90715 A : Type'} (_37165 : type627 _90715 A) (u : _90715 -> Prop) (f : _90715 -> A) (t : _90715 -> Prop) (GEN_PVAR_84 : _90715) : (term2201 _90715 A _37165 u f t GEN_PVAR_84) = (term2201 _90715 A _37165 u f t GEN_PVAR_84).
Proof. exact (eq_refl (term2201 _90715 A _37165 u f t GEN_PVAR_84)). Qed.
Lemma lem3516952 {_90715 A : Type'} (_37165 : type627 _90715 A) (GEN_PVAR_84 : _90715) (u : _90715 -> Prop) (f : _90715 -> A) (t : _90715 -> Prop) : ((_37165 u f t GEN_PVAR_84) = (term65 _90715 A GEN_PVAR_84 u f t)) = ((_37165 u f t GEN_PVAR_84) = (term65 _90715 A GEN_PVAR_84 u f t)).
Proof. exact (MK_COMB (@lem3516951 _90715 A _37165 u f t GEN_PVAR_84) (@lem3516940 _90715 A GEN_PVAR_84 u f t)). Qed.
Lemma lem3516953 {_90715 A : Type'} (_37165 : type627 _90715 A) (u : _90715 -> Prop) (f : _90715 -> A) (t : _90715 -> Prop) : (term2203 _90715 A _37165 u f t) = (term2203 _90715 A _37165 u f t).
Proof. exact (fun_ext (fun GEN_PVAR_84 : _90715 => @lem3516952 _90715 A _37165 GEN_PVAR_84 u f t)). Qed.
Lemma lem3516954 {_90715 : Type'} : (@all _90715) = (@all _90715).
Proof. exact (eq_refl (@all _90715)). Qed.
Lemma lem3516955 {_90715 A : Type'} (_37165 : type627 _90715 A) (u : _90715 -> Prop) (f : _90715 -> A) (t : _90715 -> Prop) : (term2204 _90715 A _37165 u f t) = (term2204 _90715 A _37165 u f t).
Proof. exact (MK_COMB (@lem3516954 _90715) (@lem3516953 _90715 A _37165 u f t)). Qed.
Lemma lem3516956 {_90715 A : Type'} (_37165 : type627 _90715 A) (u : _90715 -> Prop) (f : _90715 -> A) : (term2205 _90715 A _37165 u f) = (term2205 _90715 A _37165 u f).
Proof. exact (fun_ext (fun t : _90715 -> Prop => @lem3516955 _90715 A _37165 u f t)). Qed.
Lemma lem3516957 {_90715 : Type'} : (@all (_90715 -> Prop)) = (@all (_90715 -> Prop)).
Proof. exact (eq_refl (@all (_90715 -> Prop))). Qed.
Lemma lem3516958 {_90715 A : Type'} (_37165 : type627 _90715 A) (u : _90715 -> Prop) (f : _90715 -> A) : (term2206 _90715 A _37165 u f) = (term2206 _90715 A _37165 u f).
Proof. exact (MK_COMB (@lem3516957 _90715) (@lem3516956 _90715 A _37165 u f)). Qed.
Lemma lem3516959 {_90715 A : Type'} (_37165 : type627 _90715 A) (u : _90715 -> Prop) : (term2207 _90715 A _37165 u) = (term2207 _90715 A _37165 u).
Proof. exact (fun_ext (fun f : _90715 -> A => @lem3516958 _90715 A _37165 u f)). Qed.
Lemma lem3516960 {_90715 A : Type'} : (@all (_90715 -> A)) = (@all (_90715 -> A)).
Proof. exact (eq_refl (@all (_90715 -> A))). Qed.
Lemma lem3516961 {_90715 A : Type'} (_37165 : type627 _90715 A) (u : _90715 -> Prop) : (term2208 _90715 A _37165 u) = (term2208 _90715 A _37165 u).
Proof. exact (MK_COMB (@lem3516960 _90715 A) (@lem3516959 _90715 A _37165 u)). Qed.
Lemma lem3516962 {_90715 A : Type'} (_37165 : type627 _90715 A) : (term2209 _90715 A _37165) = (term2209 _90715 A _37165).
Proof. exact (fun_ext (fun u : _90715 -> Prop => @lem3516961 _90715 A _37165 u)). Qed.
Lemma lem3516963 {_90715 : Type'} : (@all (_90715 -> Prop)) = (@all (_90715 -> Prop)).
Proof. exact (eq_refl (@all (_90715 -> Prop))). Qed.
Lemma lem3516964 {_90715 A : Type'} (_37165 : type627 _90715 A) : (term2210 _90715 A _37165) = (term2210 _90715 A _37165).
Proof. exact (MK_COMB (@lem3516963 _90715) (@lem3516962 _90715 A _37165)). Qed.
Lemma lem3516965 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem3516966 {_90715 A : Type'} (_37165 : type627 _90715 A) : (term2211 _90715 A _37165) = (term2211 _90715 A _37165).
Proof. exact (MK_COMB (@lem3516965) (@lem3516964 _90715 A _37165)). Qed.
Lemma lem3516967 {_90715 _90724 A B : Type'} (_37165 : type627 _90715 A) (_37166 : type627 _90715 B) (_37167 : type616 _90715 A) (_37168 : type852 _90724 A) (_37169 : type852 _90724 B) (_37170 : type235 _90724 A) (h1 : _37170 = (term2612 _90724 A)) : (term2578 _90715 _90724 A B _37165 _37166 _37167 _37168 _37169) = (term2659 _90715 _90724 A B _37165 _37166 _37167 _37168 _37169 _37170).
Proof. exact (MK_COMB (@lem3516966 _90715 A _37165) (@lem3516912 _90715 _90724 A B _37165 _37166 _37167 _37168 _37169 _37170 h1)). Qed.
Lemma lem3516968 {_90715 _90724 A B : Type'} (_37166 : type627 _90715 B) (_37167 : type616 _90715 A) (_37168 : type852 _90724 A) (_37169 : type852 _90724 B) (_37170 : type235 _90724 A) (h1 : _37170 = (term2612 _90724 A)) : (term2579 _90715 _90724 A B _37166 _37167 _37168 _37169) = (term2660 _90715 _90724 A B _37166 _37167 _37168 _37169 _37170).
Proof. exact (fun_ext (fun _37165 : type627 _90715 A => @lem3516967 _90715 _90724 A B _37165 _37166 _37167 _37168 _37169 _37170 h1)). Qed.
Lemma lem3516969 {_90715 A : Type'} : (@all ((_90715 -> Prop) -> (_90715 -> A) -> (_90715 -> Prop) -> _90715 -> Prop)) = (@all ((_90715 -> Prop) -> (_90715 -> A) -> (_90715 -> Prop) -> _90715 -> Prop)).
Proof. exact (eq_refl (@all ((_90715 -> Prop) -> (_90715 -> A) -> (_90715 -> Prop) -> _90715 -> Prop))). Qed.
Lemma lem3516970 {_90715 _90724 A B : Type'} (_37166 : type627 _90715 B) (_37167 : type616 _90715 A) (_37168 : type852 _90724 A) (_37169 : type852 _90724 B) (_37170 : type235 _90724 A) (h1 : _37170 = (term2612 _90724 A)) : (term2580 _90715 _90724 A B _37166 _37167 _37168 _37169) = (term2661 _90715 _90724 A B _37166 _37167 _37168 _37169 _37170).
Proof. exact (MK_COMB (@lem3516969 _90715 A) (@lem3516968 _90715 _90724 A B _37166 _37167 _37168 _37169 _37170 h1)). Qed.
Lemma lem3516995 {_90715 B : Type'} (GEN_PVAR_84 : _90715) (u : _90715 -> Prop) (f : _90715 -> B) (t : _90715 -> Prop) (x : _90715) : (term61 _90715 B GEN_PVAR_84 u f t x) = (term61 _90715 B GEN_PVAR_84 u f t x).
Proof. exact (eq_refl (term61 _90715 B GEN_PVAR_84 u f t x)). Qed.
Lemma lem3516996 {_90715 B : Type'} (GEN_PVAR_84 : _90715) (u : _90715 -> Prop) (f : _90715 -> B) (t : _90715 -> Prop) : (term63 _90715 B GEN_PVAR_84 u f t) = (term63 _90715 B GEN_PVAR_84 u f t).
Proof. exact (fun_ext (fun x : _90715 => @lem3516995 _90715 B GEN_PVAR_84 u f t x)). Qed.
Lemma lem3516997 {_90715 : Type'} : (@ex _90715) = (@ex _90715).
Proof. exact (eq_refl (@ex _90715)). Qed.
Lemma lem3516998 {_90715 B : Type'} (GEN_PVAR_84 : _90715) (u : _90715 -> Prop) (f : _90715 -> B) (t : _90715 -> Prop) : (term65 _90715 B GEN_PVAR_84 u f t) = (term65 _90715 B GEN_PVAR_84 u f t).
Proof. exact (MK_COMB (@lem3516997 _90715) (@lem3516996 _90715 B GEN_PVAR_84 u f t)). Qed.
Lemma lem3517009 {_90715 B : Type'} (_37166 : type627 _90715 B) (u : _90715 -> Prop) (f : _90715 -> B) (t : _90715 -> Prop) (GEN_PVAR_84 : _90715) : (term2201 _90715 B _37166 u f t GEN_PVAR_84) = (term2201 _90715 B _37166 u f t GEN_PVAR_84).
Proof. exact (eq_refl (term2201 _90715 B _37166 u f t GEN_PVAR_84)). Qed.
Lemma lem3517010 {_90715 B : Type'} (_37166 : type627 _90715 B) (GEN_PVAR_84 : _90715) (u : _90715 -> Prop) (f : _90715 -> B) (t : _90715 -> Prop) : ((_37166 u f t GEN_PVAR_84) = (term65 _90715 B GEN_PVAR_84 u f t)) = ((_37166 u f t GEN_PVAR_84) = (term65 _90715 B GEN_PVAR_84 u f t)).
Proof. exact (MK_COMB (@lem3517009 _90715 B _37166 u f t GEN_PVAR_84) (@lem3516998 _90715 B GEN_PVAR_84 u f t)). Qed.
Lemma lem3517011 {_90715 B : Type'} (_37166 : type627 _90715 B) (u : _90715 -> Prop) (f : _90715 -> B) (t : _90715 -> Prop) : (term2203 _90715 B _37166 u f t) = (term2203 _90715 B _37166 u f t).
Proof. exact (fun_ext (fun GEN_PVAR_84 : _90715 => @lem3517010 _90715 B _37166 GEN_PVAR_84 u f t)). Qed.
Lemma lem3517012 {_90715 : Type'} : (@all _90715) = (@all _90715).
Proof. exact (eq_refl (@all _90715)). Qed.
Lemma lem3517013 {_90715 B : Type'} (_37166 : type627 _90715 B) (u : _90715 -> Prop) (f : _90715 -> B) (t : _90715 -> Prop) : (term2204 _90715 B _37166 u f t) = (term2204 _90715 B _37166 u f t).
Proof. exact (MK_COMB (@lem3517012 _90715) (@lem3517011 _90715 B _37166 u f t)). Qed.
Lemma lem3517014 {_90715 B : Type'} (_37166 : type627 _90715 B) (u : _90715 -> Prop) (f : _90715 -> B) : (term2205 _90715 B _37166 u f) = (term2205 _90715 B _37166 u f).
Proof. exact (fun_ext (fun t : _90715 -> Prop => @lem3517013 _90715 B _37166 u f t)). Qed.
Lemma lem3517015 {_90715 : Type'} : (@all (_90715 -> Prop)) = (@all (_90715 -> Prop)).
Proof. exact (eq_refl (@all (_90715 -> Prop))). Qed.
Lemma lem3517016 {_90715 B : Type'} (_37166 : type627 _90715 B) (u : _90715 -> Prop) (f : _90715 -> B) : (term2206 _90715 B _37166 u f) = (term2206 _90715 B _37166 u f).
Proof. exact (MK_COMB (@lem3517015 _90715) (@lem3517014 _90715 B _37166 u f)). Qed.
Lemma lem3517017 {_90715 B : Type'} (_37166 : type627 _90715 B) (u : _90715 -> Prop) : (term2207 _90715 B _37166 u) = (term2207 _90715 B _37166 u).
Proof. exact (fun_ext (fun f : _90715 -> B => @lem3517016 _90715 B _37166 u f)). Qed.
Lemma lem3517018 {_90715 B : Type'} : (@all (_90715 -> B)) = (@all (_90715 -> B)).
Proof. exact (eq_refl (@all (_90715 -> B))). Qed.
Lemma lem3517019 {_90715 B : Type'} (_37166 : type627 _90715 B) (u : _90715 -> Prop) : (term2208 _90715 B _37166 u) = (term2208 _90715 B _37166 u).
Proof. exact (MK_COMB (@lem3517018 _90715 B) (@lem3517017 _90715 B _37166 u)). Qed.
Lemma lem3517020 {_90715 B : Type'} (_37166 : type627 _90715 B) : (term2209 _90715 B _37166) = (term2209 _90715 B _37166).
Proof. exact (fun_ext (fun u : _90715 -> Prop => @lem3517019 _90715 B _37166 u)). Qed.
Lemma lem3517021 {_90715 : Type'} : (@all (_90715 -> Prop)) = (@all (_90715 -> Prop)).
Proof. exact (eq_refl (@all (_90715 -> Prop))). Qed.
Lemma lem3517022 {_90715 B : Type'} (_37166 : type627 _90715 B) : (term2210 _90715 B _37166) = (term2210 _90715 B _37166).
Proof. exact (MK_COMB (@lem3517021 _90715) (@lem3517020 _90715 B _37166)). Qed.
Lemma lem3517023 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem3517024 {_90715 B : Type'} (_37166 : type627 _90715 B) : (term2211 _90715 B _37166) = (term2211 _90715 B _37166).
Proof. exact (MK_COMB (@lem3517023) (@lem3517022 _90715 B _37166)). Qed.
Lemma lem3517025 {_90715 _90724 A B : Type'} (_37166 : type627 _90715 B) (_37167 : type616 _90715 A) (_37168 : type852 _90724 A) (_37169 : type852 _90724 B) (_37170 : type235 _90724 A) (h1 : _37170 = (term2612 _90724 A)) : (term2581 _90715 _90724 A B _37166 _37167 _37168 _37169) = (term2662 _90715 _90724 A B _37166 _37167 _37168 _37169 _37170).
Proof. exact (MK_COMB (@lem3517024 _90715 B _37166) (@lem3516970 _90715 _90724 A B _37166 _37167 _37168 _37169 _37170 h1)). Qed.
Lemma lem3517026 {_90715 _90724 A B : Type'} (_37167 : type616 _90715 A) (_37168 : type852 _90724 A) (_37169 : type852 _90724 B) (_37170 : type235 _90724 A) (h1 : _37170 = (term2612 _90724 A)) : (term2582 _90715 _90724 A B _37167 _37168 _37169) = (term2663 _90715 _90724 A B _37167 _37168 _37169 _37170).
Proof. exact (fun_ext (fun _37166 : type627 _90715 B => @lem3517025 _90715 _90724 A B _37166 _37167 _37168 _37169 _37170 h1)). Qed.
Lemma lem3517027 {_90715 B : Type'} : (@all ((_90715 -> Prop) -> (_90715 -> B) -> (_90715 -> Prop) -> _90715 -> Prop)) = (@all ((_90715 -> Prop) -> (_90715 -> B) -> (_90715 -> Prop) -> _90715 -> Prop)).
Proof. exact (eq_refl (@all ((_90715 -> Prop) -> (_90715 -> B) -> (_90715 -> Prop) -> _90715 -> Prop))). Qed.
Lemma lem3517028 {_90715 _90724 A B : Type'} (_37167 : type616 _90715 A) (_37168 : type852 _90724 A) (_37169 : type852 _90724 B) (_37170 : type235 _90724 A) (h1 : _37170 = (term2612 _90724 A)) : (term2583 _90715 _90724 A B _37167 _37168 _37169) = (term2664 _90715 _90724 A B _37167 _37168 _37169 _37170).
Proof. exact (MK_COMB (@lem3517027 _90715 B) (@lem3517026 _90715 _90724 A B _37167 _37168 _37169 _37170 h1)). Qed.
Lemma lem3517053 {_90715 A : Type'} (GEN_PVAR_84 : _90715) (u : _90715 -> Prop) (f : type1413 _90715 A) (t : _90715 -> Prop) (x : _90715) : (term2101 _90715 A GEN_PVAR_84 u f t x) = (term2101 _90715 A GEN_PVAR_84 u f t x).
Proof. exact (eq_refl (term2101 _90715 A GEN_PVAR_84 u f t x)). Qed.
Lemma lem3517054 {_90715 A : Type'} (GEN_PVAR_84 : _90715) (u : _90715 -> Prop) (f : type1413 _90715 A) (t : _90715 -> Prop) : (term2102 _90715 A GEN_PVAR_84 u f t) = (term2102 _90715 A GEN_PVAR_84 u f t).
Proof. exact (fun_ext (fun x : _90715 => @lem3517053 _90715 A GEN_PVAR_84 u f t x)). Qed.
Lemma lem3517055 {_90715 : Type'} : (@ex _90715) = (@ex _90715).
Proof. exact (eq_refl (@ex _90715)). Qed.
Lemma lem3517056 {_90715 A : Type'} (GEN_PVAR_84 : _90715) (u : _90715 -> Prop) (f : type1413 _90715 A) (t : _90715 -> Prop) : (term2103 _90715 A GEN_PVAR_84 u f t) = (term2103 _90715 A GEN_PVAR_84 u f t).
Proof. exact (MK_COMB (@lem3517055 _90715) (@lem3517054 _90715 A GEN_PVAR_84 u f t)). Qed.
Lemma lem3517067 {_90715 A : Type'} (_37167 : type616 _90715 A) (u : _90715 -> Prop) (f : type1413 _90715 A) (t : _90715 -> Prop) (GEN_PVAR_84 : _90715) : (term2426 _90715 A _37167 u f t GEN_PVAR_84) = (term2426 _90715 A _37167 u f t GEN_PVAR_84).
Proof. exact (eq_refl (term2426 _90715 A _37167 u f t GEN_PVAR_84)). Qed.
Lemma lem3517068 {_90715 A : Type'} (_37167 : type616 _90715 A) (GEN_PVAR_84 : _90715) (u : _90715 -> Prop) (f : type1413 _90715 A) (t : _90715 -> Prop) : ((_37167 u f t GEN_PVAR_84) = (term2103 _90715 A GEN_PVAR_84 u f t)) = ((_37167 u f t GEN_PVAR_84) = (term2103 _90715 A GEN_PVAR_84 u f t)).
Proof. exact (MK_COMB (@lem3517067 _90715 A _37167 u f t GEN_PVAR_84) (@lem3517056 _90715 A GEN_PVAR_84 u f t)). Qed.
Lemma lem3517069 {_90715 A : Type'} (_37167 : type616 _90715 A) (u : _90715 -> Prop) (f : type1413 _90715 A) (t : _90715 -> Prop) : (term2428 _90715 A _37167 u f t) = (term2428 _90715 A _37167 u f t).
Proof. exact (fun_ext (fun GEN_PVAR_84 : _90715 => @lem3517068 _90715 A _37167 GEN_PVAR_84 u f t)). Qed.
Lemma lem3517070 {_90715 : Type'} : (@all _90715) = (@all _90715).
Proof. exact (eq_refl (@all _90715)). Qed.
Lemma lem3517071 {_90715 A : Type'} (_37167 : type616 _90715 A) (u : _90715 -> Prop) (f : type1413 _90715 A) (t : _90715 -> Prop) : (term2429 _90715 A _37167 u f t) = (term2429 _90715 A _37167 u f t).
Proof. exact (MK_COMB (@lem3517070 _90715) (@lem3517069 _90715 A _37167 u f t)). Qed.
Lemma lem3517072 {_90715 A : Type'} (_37167 : type616 _90715 A) (u : _90715 -> Prop) (f : type1413 _90715 A) : (term2430 _90715 A _37167 u f) = (term2430 _90715 A _37167 u f).
Proof. exact (fun_ext (fun t : _90715 -> Prop => @lem3517071 _90715 A _37167 u f t)). Qed.
Lemma lem3517073 {_90715 : Type'} : (@all (_90715 -> Prop)) = (@all (_90715 -> Prop)).
Proof. exact (eq_refl (@all (_90715 -> Prop))). Qed.
Lemma lem3517074 {_90715 A : Type'} (_37167 : type616 _90715 A) (u : _90715 -> Prop) (f : type1413 _90715 A) : (term2431 _90715 A _37167 u f) = (term2431 _90715 A _37167 u f).
Proof. exact (MK_COMB (@lem3517073 _90715) (@lem3517072 _90715 A _37167 u f)). Qed.
Lemma lem3517075 {_90715 A : Type'} (_37167 : type616 _90715 A) (u : _90715 -> Prop) : (term2432 _90715 A _37167 u) = (term2432 _90715 A _37167 u).
Proof. exact (fun_ext (fun f : type1413 _90715 A => @lem3517074 _90715 A _37167 u f)). Qed.
Lemma lem3517076 {_90715 A : Type'} : (@all (_90715 -> A -> Prop)) = (@all (_90715 -> A -> Prop)).
Proof. exact (eq_refl (@all (_90715 -> A -> Prop))). Qed.
Lemma lem3517077 {_90715 A : Type'} (_37167 : type616 _90715 A) (u : _90715 -> Prop) : (term2433 _90715 A _37167 u) = (term2433 _90715 A _37167 u).
Proof. exact (MK_COMB (@lem3517076 _90715 A) (@lem3517075 _90715 A _37167 u)). Qed.
Lemma lem3517078 {_90715 A : Type'} (_37167 : type616 _90715 A) : (term2434 _90715 A _37167) = (term2434 _90715 A _37167).
Proof. exact (fun_ext (fun u : _90715 -> Prop => @lem3517077 _90715 A _37167 u)). Qed.
Lemma lem3517079 {_90715 : Type'} : (@all (_90715 -> Prop)) = (@all (_90715 -> Prop)).
Proof. exact (eq_refl (@all (_90715 -> Prop))). Qed.
Lemma lem3517080 {_90715 A : Type'} (_37167 : type616 _90715 A) : (term2435 _90715 A _37167) = (term2435 _90715 A _37167).
Proof. exact (MK_COMB (@lem3517079 _90715) (@lem3517078 _90715 A _37167)). Qed.
Lemma lem3517081 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem3517082 {_90715 A : Type'} (_37167 : type616 _90715 A) : (term2436 _90715 A _37167) = (term2436 _90715 A _37167).
Proof. exact (MK_COMB (@lem3517081) (@lem3517080 _90715 A _37167)). Qed.
Lemma lem3517083 {_90715 _90724 A B : Type'} (_37167 : type616 _90715 A) (_37168 : type852 _90724 A) (_37169 : type852 _90724 B) (_37170 : type235 _90724 A) (h1 : _37170 = (term2612 _90724 A)) : (term2584 _90715 _90724 A B _37167 _37168 _37169) = (term2665 _90715 _90724 A B _37167 _37168 _37169 _37170).
Proof. exact (MK_COMB (@lem3517082 _90715 A _37167) (@lem3517028 _90715 _90724 A B _37167 _37168 _37169 _37170 h1)). Qed.
Lemma lem3517084 {_90715 _90724 A B : Type'} (_37168 : type852 _90724 A) (_37169 : type852 _90724 B) (_37170 : type235 _90724 A) (h1 : _37170 = (term2612 _90724 A)) : (term2585 _90715 _90724 A B _37168 _37169) = (term2666 _90715 _90724 A B _37168 _37169 _37170).
Proof. exact (fun_ext (fun _37167 : type616 _90715 A => @lem3517083 _90715 _90724 A B _37167 _37168 _37169 _37170 h1)). Qed.
Lemma lem3517085 {_90715 A : Type'} : (@all ((_90715 -> Prop) -> (_90715 -> A -> Prop) -> (_90715 -> Prop) -> _90715 -> Prop)) = (@all ((_90715 -> Prop) -> (_90715 -> A -> Prop) -> (_90715 -> Prop) -> _90715 -> Prop)).
Proof. exact (eq_refl (@all ((_90715 -> Prop) -> (_90715 -> A -> Prop) -> (_90715 -> Prop) -> _90715 -> Prop))). Qed.
Lemma lem3517086 {_90715 _90724 A B : Type'} (_37168 : type852 _90724 A) (_37169 : type852 _90724 B) (_37170 : type235 _90724 A) (h1 : _37170 = (term2612 _90724 A)) : (term2586 _90715 _90724 A B _37168 _37169) = (term2667 _90715 _90724 A B _37168 _37169 _37170).
Proof. exact (MK_COMB (@lem3517085 _90715 A) (@lem3517084 _90715 _90724 A B _37168 _37169 _37170 h1)). Qed.
Lemma lem3517111 {_90724 A : Type'} (GEN_PVAR_84 : A) (u : A -> Prop) (f : A -> _90724) (t : A -> Prop) (x : A) : (term2058 _90724 A GEN_PVAR_84 u f t x) = (term2058 _90724 A GEN_PVAR_84 u f t x).
Proof. exact (eq_refl (term2058 _90724 A GEN_PVAR_84 u f t x)). Qed.
Lemma lem3517112 {_90724 A : Type'} (GEN_PVAR_84 : A) (u : A -> Prop) (f : A -> _90724) (t : A -> Prop) : (term2059 _90724 A GEN_PVAR_84 u f t) = (term2059 _90724 A GEN_PVAR_84 u f t).
Proof. exact (fun_ext (fun x : A => @lem3517111 _90724 A GEN_PVAR_84 u f t x)). Qed.
Lemma lem3517113 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem3517114 {_90724 A : Type'} (GEN_PVAR_84 : A) (u : A -> Prop) (f : A -> _90724) (t : A -> Prop) : (term2060 _90724 A GEN_PVAR_84 u f t) = (term2060 _90724 A GEN_PVAR_84 u f t).
Proof. exact (MK_COMB (@lem3517113 A) (@lem3517112 _90724 A GEN_PVAR_84 u f t)). Qed.
Lemma lem3517125 {_90724 A : Type'} (_37168 : type852 _90724 A) (u : A -> Prop) (f : A -> _90724) (t : A -> Prop) (GEN_PVAR_84 : A) : (term2544 _90724 A _37168 u f t GEN_PVAR_84) = (term2544 _90724 A _37168 u f t GEN_PVAR_84).
Proof. exact (eq_refl (term2544 _90724 A _37168 u f t GEN_PVAR_84)). Qed.
Lemma lem3517126 {_90724 A : Type'} (_37168 : type852 _90724 A) (GEN_PVAR_84 : A) (u : A -> Prop) (f : A -> _90724) (t : A -> Prop) : ((_37168 u f t GEN_PVAR_84) = (term2060 _90724 A GEN_PVAR_84 u f t)) = ((_37168 u f t GEN_PVAR_84) = (term2060 _90724 A GEN_PVAR_84 u f t)).
Proof. exact (MK_COMB (@lem3517125 _90724 A _37168 u f t GEN_PVAR_84) (@lem3517114 _90724 A GEN_PVAR_84 u f t)). Qed.
Lemma lem3517127 {_90724 A : Type'} (_37168 : type852 _90724 A) (u : A -> Prop) (f : A -> _90724) (t : A -> Prop) : (term2546 _90724 A _37168 u f t) = (term2546 _90724 A _37168 u f t).
Proof. exact (fun_ext (fun GEN_PVAR_84 : A => @lem3517126 _90724 A _37168 GEN_PVAR_84 u f t)). Qed.
Lemma lem3517128 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem3517129 {_90724 A : Type'} (_37168 : type852 _90724 A) (u : A -> Prop) (f : A -> _90724) (t : A -> Prop) : (term2547 _90724 A _37168 u f t) = (term2547 _90724 A _37168 u f t).
Proof. exact (MK_COMB (@lem3517128 A) (@lem3517127 _90724 A _37168 u f t)). Qed.
Lemma lem3517130 {_90724 A : Type'} (_37168 : type852 _90724 A) (u : A -> Prop) (f : A -> _90724) : (term2548 _90724 A _37168 u f) = (term2548 _90724 A _37168 u f).
Proof. exact (fun_ext (fun t : A -> Prop => @lem3517129 _90724 A _37168 u f t)). Qed.
Lemma lem3517131 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem3517132 {_90724 A : Type'} (_37168 : type852 _90724 A) (u : A -> Prop) (f : A -> _90724) : (term2549 _90724 A _37168 u f) = (term2549 _90724 A _37168 u f).
Proof. exact (MK_COMB (@lem3517131 A) (@lem3517130 _90724 A _37168 u f)). Qed.
Lemma lem3517133 {_90724 A : Type'} (_37168 : type852 _90724 A) (u : A -> Prop) : (term2550 _90724 A _37168 u) = (term2550 _90724 A _37168 u).
Proof. exact (fun_ext (fun f : A -> _90724 => @lem3517132 _90724 A _37168 u f)). Qed.
Lemma lem3517134 {_90724 A : Type'} : (@all (A -> _90724)) = (@all (A -> _90724)).
Proof. exact (eq_refl (@all (A -> _90724))). Qed.
Lemma lem3517135 {_90724 A : Type'} (_37168 : type852 _90724 A) (u : A -> Prop) : (term2551 _90724 A _37168 u) = (term2551 _90724 A _37168 u).
Proof. exact (MK_COMB (@lem3517134 _90724 A) (@lem3517133 _90724 A _37168 u)). Qed.
Lemma lem3517136 {_90724 A : Type'} (_37168 : type852 _90724 A) : (term2552 _90724 A _37168) = (term2552 _90724 A _37168).
Proof. exact (fun_ext (fun u : A -> Prop => @lem3517135 _90724 A _37168 u)). Qed.
Lemma lem3517137 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem3517138 {_90724 A : Type'} (_37168 : type852 _90724 A) : (term2553 _90724 A _37168) = (term2553 _90724 A _37168).
Proof. exact (MK_COMB (@lem3517137 A) (@lem3517136 _90724 A _37168)). Qed.
Lemma lem3517139 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem3517140 {_90724 A : Type'} (_37168 : type852 _90724 A) : (term2554 _90724 A _37168) = (term2554 _90724 A _37168).
Proof. exact (MK_COMB (@lem3517139) (@lem3517138 _90724 A _37168)). Qed.
Lemma lem3517141 {_90715 _90724 A B : Type'} (_37168 : type852 _90724 A) (_37169 : type852 _90724 B) (_37170 : type235 _90724 A) (h1 : _37170 = (term2612 _90724 A)) : (term2587 _90715 _90724 A B _37168 _37169) = (term2668 _90715 _90724 A B _37168 _37169 _37170).
Proof. exact (MK_COMB (@lem3517140 _90724 A _37168) (@lem3517086 _90715 _90724 A B _37168 _37169 _37170 h1)). Qed.
Lemma lem3517142 {_90715 _90724 A B : Type'} (_37169 : type852 _90724 B) (_37170 : type235 _90724 A) (h1 : _37170 = (term2612 _90724 A)) : (term2588 _90715 _90724 A B _37169) = (term2669 _90715 _90724 A B _37169 _37170).
Proof. exact (fun_ext (fun _37168 : type852 _90724 A => @lem3517141 _90715 _90724 A B _37168 _37169 _37170 h1)). Qed.
Lemma lem3517143 {_90724 A : Type'} : (@all ((A -> Prop) -> (A -> _90724) -> (A -> Prop) -> A -> Prop)) = (@all ((A -> Prop) -> (A -> _90724) -> (A -> Prop) -> A -> Prop)).
Proof. exact (eq_refl (@all ((A -> Prop) -> (A -> _90724) -> (A -> Prop) -> A -> Prop))). Qed.
Lemma lem3517144 {_90715 _90724 A B : Type'} (_37169 : type852 _90724 B) (_37170 : type235 _90724 A) (h1 : _37170 = (term2612 _90724 A)) : (term2589 _90715 _90724 A B _37169) = (term2670 _90715 _90724 A B _37169 _37170).
Proof. exact (MK_COMB (@lem3517143 _90724 A) (@lem3517142 _90715 _90724 A B _37169 _37170 h1)). Qed.
Lemma lem3517169 {_90724 B : Type'} (GEN_PVAR_84 : B) (u : B -> Prop) (f : B -> _90724) (t : B -> Prop) (x : B) : (term2058 _90724 B GEN_PVAR_84 u f t x) = (term2058 _90724 B GEN_PVAR_84 u f t x).
Proof. exact (eq_refl (term2058 _90724 B GEN_PVAR_84 u f t x)). Qed.
Lemma lem3517170 {_90724 B : Type'} (GEN_PVAR_84 : B) (u : B -> Prop) (f : B -> _90724) (t : B -> Prop) : (term2059 _90724 B GEN_PVAR_84 u f t) = (term2059 _90724 B GEN_PVAR_84 u f t).
Proof. exact (fun_ext (fun x : B => @lem3517169 _90724 B GEN_PVAR_84 u f t x)). Qed.
Lemma lem3517171 {B : Type'} : (@ex B) = (@ex B).
Proof. exact (eq_refl (@ex B)). Qed.
Lemma lem3517172 {_90724 B : Type'} (GEN_PVAR_84 : B) (u : B -> Prop) (f : B -> _90724) (t : B -> Prop) : (term2060 _90724 B GEN_PVAR_84 u f t) = (term2060 _90724 B GEN_PVAR_84 u f t).
Proof. exact (MK_COMB (@lem3517171 B) (@lem3517170 _90724 B GEN_PVAR_84 u f t)). Qed.
Lemma lem3517183 {_90724 B : Type'} (_37169 : type852 _90724 B) (u : B -> Prop) (f : B -> _90724) (t : B -> Prop) (GEN_PVAR_84 : B) : (term2544 _90724 B _37169 u f t GEN_PVAR_84) = (term2544 _90724 B _37169 u f t GEN_PVAR_84).
Proof. exact (eq_refl (term2544 _90724 B _37169 u f t GEN_PVAR_84)). Qed.
Lemma lem3517184 {_90724 B : Type'} (_37169 : type852 _90724 B) (GEN_PVAR_84 : B) (u : B -> Prop) (f : B -> _90724) (t : B -> Prop) : ((_37169 u f t GEN_PVAR_84) = (term2060 _90724 B GEN_PVAR_84 u f t)) = ((_37169 u f t GEN_PVAR_84) = (term2060 _90724 B GEN_PVAR_84 u f t)).
Proof. exact (MK_COMB (@lem3517183 _90724 B _37169 u f t GEN_PVAR_84) (@lem3517172 _90724 B GEN_PVAR_84 u f t)). Qed.
Lemma lem3517185 {_90724 B : Type'} (_37169 : type852 _90724 B) (u : B -> Prop) (f : B -> _90724) (t : B -> Prop) : (term2546 _90724 B _37169 u f t) = (term2546 _90724 B _37169 u f t).
Proof. exact (fun_ext (fun GEN_PVAR_84 : B => @lem3517184 _90724 B _37169 GEN_PVAR_84 u f t)). Qed.
Lemma lem3517186 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem3517187 {_90724 B : Type'} (_37169 : type852 _90724 B) (u : B -> Prop) (f : B -> _90724) (t : B -> Prop) : (term2547 _90724 B _37169 u f t) = (term2547 _90724 B _37169 u f t).
Proof. exact (MK_COMB (@lem3517186 B) (@lem3517185 _90724 B _37169 u f t)). Qed.
Lemma lem3517188 {_90724 B : Type'} (_37169 : type852 _90724 B) (u : B -> Prop) (f : B -> _90724) : (term2548 _90724 B _37169 u f) = (term2548 _90724 B _37169 u f).
Proof. exact (fun_ext (fun t : B -> Prop => @lem3517187 _90724 B _37169 u f t)). Qed.
Lemma lem3517189 {B : Type'} : (@all (B -> Prop)) = (@all (B -> Prop)).
Proof. exact (eq_refl (@all (B -> Prop))). Qed.
Lemma lem3517190 {_90724 B : Type'} (_37169 : type852 _90724 B) (u : B -> Prop) (f : B -> _90724) : (term2549 _90724 B _37169 u f) = (term2549 _90724 B _37169 u f).
Proof. exact (MK_COMB (@lem3517189 B) (@lem3517188 _90724 B _37169 u f)). Qed.
Lemma lem3517191 {_90724 B : Type'} (_37169 : type852 _90724 B) (u : B -> Prop) : (term2550 _90724 B _37169 u) = (term2550 _90724 B _37169 u).
Proof. exact (fun_ext (fun f : B -> _90724 => @lem3517190 _90724 B _37169 u f)). Qed.
Lemma lem3517192 {_90724 B : Type'} : (@all (B -> _90724)) = (@all (B -> _90724)).
Proof. exact (eq_refl (@all (B -> _90724))). Qed.
Lemma lem3517193 {_90724 B : Type'} (_37169 : type852 _90724 B) (u : B -> Prop) : (term2551 _90724 B _37169 u) = (term2551 _90724 B _37169 u).
Proof. exact (MK_COMB (@lem3517192 _90724 B) (@lem3517191 _90724 B _37169 u)). Qed.
Lemma lem3517194 {_90724 B : Type'} (_37169 : type852 _90724 B) : (term2552 _90724 B _37169) = (term2552 _90724 B _37169).
Proof. exact (fun_ext (fun u : B -> Prop => @lem3517193 _90724 B _37169 u)). Qed.
Lemma lem3517195 {B : Type'} : (@all (B -> Prop)) = (@all (B -> Prop)).
Proof. exact (eq_refl (@all (B -> Prop))). Qed.
Lemma lem3517196 {_90724 B : Type'} (_37169 : type852 _90724 B) : (term2553 _90724 B _37169) = (term2553 _90724 B _37169).
Proof. exact (MK_COMB (@lem3517195 B) (@lem3517194 _90724 B _37169)). Qed.
Lemma lem3517197 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem3517198 {_90724 B : Type'} (_37169 : type852 _90724 B) : (term2554 _90724 B _37169) = (term2554 _90724 B _37169).
Proof. exact (MK_COMB (@lem3517197) (@lem3517196 _90724 B _37169)). Qed.
Lemma lem3517199 {_90715 _90724 A B : Type'} (_37169 : type852 _90724 B) (_37170 : type235 _90724 A) (h1 : _37170 = (term2612 _90724 A)) : (term2609 _90715 _90724 A B _37169) = (term2671 _90715 _90724 A B _37169 _37170).
Proof. exact (MK_COMB (@lem3517198 _90724 B _37169) (@lem3517144 _90715 _90724 A B _37169 _37170 h1)). Qed.
Lemma lem3517200 {_90715 _90724 A B : Type'} (_37170 : type235 _90724 A) (h1 : _37170 = (term2612 _90724 A)) : (term2610 _90715 _90724 A B) = (term2672 _90715 _90724 A B _37170).
Proof. exact (fun_ext (fun _37169 : type852 _90724 B => @lem3517199 _90715 _90724 A B _37169 _37170 h1)). Qed.
Lemma lem3517201 {_90724 B : Type'} : (@all ((B -> Prop) -> (B -> _90724) -> (B -> Prop) -> B -> Prop)) = (@all ((B -> Prop) -> (B -> _90724) -> (B -> Prop) -> B -> Prop)).
Proof. exact (eq_refl (@all ((B -> Prop) -> (B -> _90724) -> (B -> Prop) -> B -> Prop))). Qed.
Lemma lem3517202 {_90715 _90724 A B : Type'} (_37170 : type235 _90724 A) (h1 : _37170 = (term2612 _90724 A)) : (term2611 _90715 _90724 A B) = (term2673 _90715 _90724 A B _37170).
Proof. exact (MK_COMB (@lem3517201 _90724 B) (@lem3517200 _90715 _90724 A B _37170 h1)). Qed.
Lemma lem3517203 {_90715 _90724 A B : Type'} (_37170 : type235 _90724 A) : term2674 _90715 _90724 A B _37170.
Proof. exact (fun h0 : _37170 = (term2612 _90724 A) => @lem3517202 _90715 _90724 A B _37170 h0). Qed.
Lemma lem3517204 {_90715 _90724 A B : Type'} : term2675 _90715 _90724 A B.
Proof. exact (fun _37170 : type235 _90724 A => @lem3517203 _90715 _90724 A B _37170). Qed.
Lemma lem3517206 {_3603 : Type'} (P : Prop) (c : _3603) (Q : _3603 -> Prop) : term2146 _3603 P c Q.
Proof. exact (EQ_MP (@lem20230 _3603 P c Q) (@lem0)). Qed.
Lemma lem3517207 {_90724 A : Type'} (P : Prop) (c : type235 _90724 A) (Q : type78 _90724 A) : term2676 _90724 A P c Q.
Proof. exact (@lem3517206 (type235 _90724 A) P c Q). Qed.
Lemma lem3517208 {_90715 _90724 A B : Type'} : term2677 _90715 _90724 A B.
Proof. exact (@lem3517207 _90724 A (term2611 _90715 _90724 A B) (term2612 _90724 A) (term2678 _90715 _90724 A B)). Qed.
Lemma lem3517209 {_90715 _90724 A B : Type'} (_37170 : type235 _90724 A) : (term2679 _90715 _90724 A B _37170) = (term2673 _90715 _90724 A B _37170).
Proof. exact (eq_refl (term2679 _90715 _90724 A B _37170)). Qed.
Lemma lem3517210 {_90715 _90724 A B : Type'} : (term2680 _90715 _90724 A B) = (term2680 _90715 _90724 A B).
Proof. exact (eq_refl (term2680 _90715 _90724 A B)). Qed.
Lemma lem3517211 {_90715 _90724 A B : Type'} (_37170 : type235 _90724 A) : ((term2611 _90715 _90724 A B) = (term2679 _90715 _90724 A B _37170)) = ((term2611 _90715 _90724 A B) = (term2673 _90715 _90724 A B _37170)).
Proof. exact (MK_COMB (@lem3517210 _90715 _90724 A B) (@lem3517209 _90715 _90724 A B _37170)). Qed.
Lemma lem3517212 {_90724 A : Type'} (_37170 : type235 _90724 A) : (term2681 _90724 A _37170) = (term2681 _90724 A _37170).
Proof. exact (eq_refl (term2681 _90724 A _37170)). Qed.
Lemma lem3517213 {_90715 _90724 A B : Type'} (_37170 : type235 _90724 A) : (term2682 _90715 _90724 A B _37170) = (term2674 _90715 _90724 A B _37170).
Proof. exact (MK_COMB (@lem3517212 _90724 A _37170) (@lem3517211 _90715 _90724 A B _37170)). Qed.
Lemma lem3517214 {_90715 _90724 A B : Type'} : (term2683 _90715 _90724 A B) = (term2684 _90715 _90724 A B).
Proof. exact (fun_ext (fun _37170 : type235 _90724 A => @lem3517213 _90715 _90724 A B _37170)). Qed.
Lemma lem3517215 {_90724 A : Type'} : (@all (((A -> Prop) -> Prop) -> ((A -> Prop) -> _90724) -> ((A -> Prop) -> Prop) -> (A -> Prop) -> Prop)) = (@all (((A -> Prop) -> Prop) -> ((A -> Prop) -> _90724) -> ((A -> Prop) -> Prop) -> (A -> Prop) -> Prop)).
Proof. exact (eq_refl (@all (((A -> Prop) -> Prop) -> ((A -> Prop) -> _90724) -> ((A -> Prop) -> Prop) -> (A -> Prop) -> Prop))). Qed.
Lemma lem3517216 {_90715 _90724 A B : Type'} : (term2685 _90715 _90724 A B) = (term2675 _90715 _90724 A B).
Proof. exact (MK_COMB (@lem3517215 _90724 A) (@lem3517214 _90715 _90724 A B)). Qed.
Lemma lem3517217 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem3517218 {_90715 _90724 A B : Type'} : (term2686 _90715 _90724 A B) = (term2687 _90715 _90724 A B).
Proof. exact (MK_COMB (@lem3517217) (@lem3517216 _90715 _90724 A B)). Qed.
Lemma lem3517219 {_90715 _90724 A B : Type'} (_37170 : type235 _90724 A) : (term2679 _90715 _90724 A B _37170) = (term2673 _90715 _90724 A B _37170).
Proof. exact (eq_refl (term2679 _90715 _90724 A B _37170)). Qed.
Lemma lem3517220 {_90724 A : Type'} (_37170 : type235 _90724 A) : (term2681 _90724 A _37170) = (term2681 _90724 A _37170).
Proof. exact (eq_refl (term2681 _90724 A _37170)). Qed.
Lemma lem3517221 {_90715 _90724 A B : Type'} (_37170 : type235 _90724 A) : (term2688 _90715 _90724 A B _37170) = (term2689 _90715 _90724 A B _37170).
Proof. exact (MK_COMB (@lem3517220 _90724 A _37170) (@lem3517219 _90715 _90724 A B _37170)). Qed.
Lemma lem3517222 {_90715 _90724 A B : Type'} : (term2690 _90715 _90724 A B) = (term2691 _90715 _90724 A B).
Proof. exact (fun_ext (fun _37170 : type235 _90724 A => @lem3517221 _90715 _90724 A B _37170)). Qed.
Lemma lem3517223 {_90724 A : Type'} : (@all (((A -> Prop) -> Prop) -> ((A -> Prop) -> _90724) -> ((A -> Prop) -> Prop) -> (A -> Prop) -> Prop)) = (@all (((A -> Prop) -> Prop) -> ((A -> Prop) -> _90724) -> ((A -> Prop) -> Prop) -> (A -> Prop) -> Prop)).
Proof. exact (eq_refl (@all (((A -> Prop) -> Prop) -> ((A -> Prop) -> _90724) -> ((A -> Prop) -> Prop) -> (A -> Prop) -> Prop))). Qed.
Lemma lem3517224 {_90715 _90724 A B : Type'} : (term2692 _90715 _90724 A B) = (term2693 _90715 _90724 A B).
Proof. exact (MK_COMB (@lem3517223 _90724 A) (@lem3517222 _90715 _90724 A B)). Qed.
Lemma lem3517225 {_90715 _90724 A B : Type'} : (term2680 _90715 _90724 A B) = (term2680 _90715 _90724 A B).
Proof. exact (eq_refl (term2680 _90715 _90724 A B)). Qed.
Lemma lem3517226 {_90715 _90724 A B : Type'} : ((term2611 _90715 _90724 A B) = (term2692 _90715 _90724 A B)) = ((term2611 _90715 _90724 A B) = (term2693 _90715 _90724 A B)).
Proof. exact (MK_COMB (@lem3517225 _90715 _90724 A B) (@lem3517224 _90715 _90724 A B)). Qed.
Lemma lem3517227 {_90715 _90724 A B : Type'} : (term2677 _90715 _90724 A B) = (term2694 _90715 _90724 A B).
Proof. exact (MK_COMB (@lem3517218 _90715 _90724 A B) (@lem3517226 _90715 _90724 A B)). Qed.
Lemma lem3517228 {_90715 _90724 A B : Type'} : term2694 _90715 _90724 A B.
Proof. exact (EQ_MP (@lem3517227 _90715 _90724 A B) (@lem3517208 _90715 _90724 A B)). Qed.
Lemma lem3517229 {_90715 _90724 A B : Type'} : (term2611 _90715 _90724 A B) = (term2693 _90715 _90724 A B).
Proof. exact (@lem3517228 _90715 _90724 A B (@lem3517204 _90715 _90724 A B)). Qed.
Lemma lem3517231 {_3571 _3575 : Type'} (s : _3575 -> _3571) (t : _3575 -> _3571) : (s = (term2166 _3571 _3575 t)) = (term2167 _3571 _3575 s t).
Proof. exact (EQ_MP (@lem19792 _3571 _3575 s t) (@lem0)). Qed.
Lemma lem3517232 {_90724 A : Type'} (s : type235 _90724 A) (t : type235 _90724 A) : (s = (term2695 _90724 A t)) = (term2696 _90724 A s t).
Proof. exact (@lem3517231 (type228 _90724 A) (type686 A) s t). Qed.
Lemma lem3517233 {_90724 A : Type'} (_37170 : type235 _90724 A) : (_37170 = (term2697 _90724 A)) = (term2698 _90724 A _37170).
Proof. exact (@lem3517232 _90724 A _37170 (term2612 _90724 A)). Qed.
Lemma lem3517234 {_90724 A : Type'} (u : type686 A) : (term2613 _90724 A u) = (term2614 _90724 A u).
Proof. exact (eq_refl (term2613 _90724 A u)). Qed.
Lemma lem3517235 {_90724 A : Type'} : (term2697 _90724 A) = (term2612 _90724 A).
Proof. exact (fun_ext (fun u : type686 A => @lem3517234 _90724 A u)). Qed.
Lemma lem3517236 {_90724 A : Type'} (_37170 : type235 _90724 A) : (@eq (((A -> Prop) -> Prop) -> ((A -> Prop) -> _90724) -> ((A -> Prop) -> Prop) -> (A -> Prop) -> Prop) _37170) = (@eq (((A -> Prop) -> Prop) -> ((A -> Prop) -> _90724) -> ((A -> Prop) -> Prop) -> (A -> Prop) -> Prop) _37170).
Proof. exact (eq_refl (@eq (((A -> Prop) -> Prop) -> ((A -> Prop) -> _90724) -> ((A -> Prop) -> Prop) -> (A -> Prop) -> Prop) _37170)). Qed.
Lemma lem3517237 {_90724 A : Type'} (_37170 : type235 _90724 A) : (_37170 = (term2697 _90724 A)) = (_37170 = (term2612 _90724 A)).
Proof. exact (MK_COMB (@lem3517236 _90724 A _37170) (@lem3517235 _90724 A)). Qed.
Lemma lem3517238 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem3517239 {_90724 A : Type'} (_37170 : type235 _90724 A) : (term2699 _90724 A _37170) = (term2700 _90724 A _37170).
Proof. exact (MK_COMB (@lem3517238) (@lem3517237 _90724 A _37170)). Qed.
Lemma lem3517240 {_90724 A : Type'} (u : type686 A) : (term2613 _90724 A u) = (term2614 _90724 A u).
Proof. exact (eq_refl (term2613 _90724 A u)). Qed.
Lemma lem3517241 {_90724 A : Type'} (_37170 : type235 _90724 A) (u : type686 A) : (term2615 _90724 A _37170 u) = (term2615 _90724 A _37170 u).
Proof. exact (eq_refl (term2615 _90724 A _37170 u)). Qed.
Lemma lem3517242 {_90724 A : Type'} (_37170 : type235 _90724 A) (u : type686 A) : ((_37170 u) = (term2613 _90724 A u)) = ((_37170 u) = (term2614 _90724 A u)).
Proof. exact (MK_COMB (@lem3517241 _90724 A _37170 u) (@lem3517240 _90724 A u)). Qed.
Lemma lem3517243 {_90724 A : Type'} (_37170 : type235 _90724 A) : (term2701 _90724 A _37170) = (term2702 _90724 A _37170).
Proof. exact (fun_ext (fun u : type686 A => @lem3517242 _90724 A _37170 u)). Qed.
Lemma lem3517244 {A : Type'} : (@all ((A -> Prop) -> Prop)) = (@all ((A -> Prop) -> Prop)).
Proof. exact (eq_refl (@all ((A -> Prop) -> Prop))). Qed.
Lemma lem3517245 {_90724 A : Type'} (_37170 : type235 _90724 A) : (term2698 _90724 A _37170) = (term2703 _90724 A _37170).
Proof. exact (MK_COMB (@lem3517244 A) (@lem3517243 _90724 A _37170)). Qed.
Lemma lem3517246 {_90724 A : Type'} (_37170 : type235 _90724 A) : ((_37170 = (term2697 _90724 A)) = (term2698 _90724 A _37170)) = ((_37170 = (term2612 _90724 A)) = (term2703 _90724 A _37170)).
Proof. exact (MK_COMB (@lem3517239 _90724 A _37170) (@lem3517245 _90724 A _37170)). Qed.
Lemma lem3517247 {_90724 A : Type'} (_37170 : type235 _90724 A) : (_37170 = (term2612 _90724 A)) = (term2703 _90724 A _37170).
Proof. exact (EQ_MP (@lem3517246 _90724 A _37170) (@lem3517233 _90724 A _37170)). Qed.
Lemma lem3517249 {_3571 _3575 : Type'} (s : _3575 -> _3571) (t : _3575 -> _3571) : (s = (term2166 _3571 _3575 t)) = (term2167 _3571 _3575 s t).
Proof. exact (EQ_MP (@lem19792 _3571 _3575 s t) (@lem0)). Qed.
Lemma lem3517250 {_90724 A : Type'} (s : type228 _90724 A) (t : type228 _90724 A) : (s = (term2704 _90724 A t)) = (term2705 _90724 A s t).
Proof. exact (@lem3517249 (type174 A) (type862 _90724 A) s t). Qed.
Lemma lem3517251 {_90724 A : Type'} (_37170 : type235 _90724 A) (u : type686 A) : ((_37170 u) = (term2706 _90724 A u)) = (term2707 _90724 A _37170 u).
Proof. exact (@lem3517250 _90724 A (_37170 u) (term2614 _90724 A u)). Qed.
Lemma lem3517252 {_90724 A : Type'} (u : type686 A) (f : type862 _90724 A) : (term2616 _90724 A u f) = (term2617 _90724 A u f).
Proof. exact (eq_refl (term2616 _90724 A u f)). Qed.
Lemma lem3517253 {_90724 A : Type'} (u : type686 A) : (term2706 _90724 A u) = (term2614 _90724 A u).
Proof. exact (fun_ext (fun f : type862 _90724 A => @lem3517252 _90724 A u f)). Qed.
Lemma lem3517254 {_90724 A : Type'} (_37170 : type235 _90724 A) (u : type686 A) : (term2615 _90724 A _37170 u) = (term2615 _90724 A _37170 u).
Proof. exact (eq_refl (term2615 _90724 A _37170 u)). Qed.
Lemma lem3517255 {_90724 A : Type'} (_37170 : type235 _90724 A) (u : type686 A) : ((_37170 u) = (term2706 _90724 A u)) = ((_37170 u) = (term2614 _90724 A u)).
Proof. exact (MK_COMB (@lem3517254 _90724 A _37170 u) (@lem3517253 _90724 A u)). Qed.
Lemma lem3517256 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem3517257 {_90724 A : Type'} (_37170 : type235 _90724 A) (u : type686 A) : (term2708 _90724 A _37170 u) = (term2709 _90724 A _37170 u).
Proof. exact (MK_COMB (@lem3517256) (@lem3517255 _90724 A _37170 u)). Qed.
Lemma lem3517258 {_90724 A : Type'} (u : type686 A) (f : type862 _90724 A) : (term2616 _90724 A u f) = (term2617 _90724 A u f).
Proof. exact (eq_refl (term2616 _90724 A u f)). Qed.
Lemma lem3517259 {_90724 A : Type'} (_37170 : type235 _90724 A) (u : type686 A) (f : type862 _90724 A) : (term2618 _90724 A _37170 u f) = (term2618 _90724 A _37170 u f).
Proof. exact (eq_refl (term2618 _90724 A _37170 u f)). Qed.
Lemma lem3517260 {_90724 A : Type'} (_37170 : type235 _90724 A) (u : type686 A) (f : type862 _90724 A) : ((_37170 u f) = (term2616 _90724 A u f)) = ((_37170 u f) = (term2617 _90724 A u f)).
Proof. exact (MK_COMB (@lem3517259 _90724 A _37170 u f) (@lem3517258 _90724 A u f)). Qed.
Lemma lem3517261 {_90724 A : Type'} (_37170 : type235 _90724 A) (u : type686 A) : (term2710 _90724 A _37170 u) = (term2711 _90724 A _37170 u).
Proof. exact (fun_ext (fun f : type862 _90724 A => @lem3517260 _90724 A _37170 u f)). Qed.
Lemma lem3517262 {_90724 A : Type'} : (@all ((A -> Prop) -> _90724)) = (@all ((A -> Prop) -> _90724)).
Proof. exact (eq_refl (@all ((A -> Prop) -> _90724))). Qed.
Lemma lem3517263 {_90724 A : Type'} (_37170 : type235 _90724 A) (u : type686 A) : (term2707 _90724 A _37170 u) = (term2712 _90724 A _37170 u).
Proof. exact (MK_COMB (@lem3517262 _90724 A) (@lem3517261 _90724 A _37170 u)). Qed.
Lemma lem3517264 {_90724 A : Type'} (_37170 : type235 _90724 A) (u : type686 A) : (((_37170 u) = (term2706 _90724 A u)) = (term2707 _90724 A _37170 u)) = (((_37170 u) = (term2614 _90724 A u)) = (term2712 _90724 A _37170 u)).
Proof. exact (MK_COMB (@lem3517257 _90724 A _37170 u) (@lem3517263 _90724 A _37170 u)). Qed.
Lemma lem3517265 {_90724 A : Type'} (_37170 : type235 _90724 A) (u : type686 A) : ((_37170 u) = (term2614 _90724 A u)) = (term2712 _90724 A _37170 u).
Proof. exact (EQ_MP (@lem3517264 _90724 A _37170 u) (@lem3517251 _90724 A _37170 u)). Qed.
Lemma lem3517267 {_3571 _3575 : Type'} (s : _3575 -> _3571) (t : _3575 -> _3571) : (s = (term2166 _3571 _3575 t)) = (term2167 _3571 _3575 s t).
Proof. exact (EQ_MP (@lem19792 _3571 _3575 s t) (@lem0)). Qed.
Lemma lem3517268 {A : Type'} (s : type174 A) (t : type174 A) : (s = (term2713 A t)) = (term2714 A s t).
Proof. exact (@lem3517267 (type686 A) (type686 A) s t). Qed.
Lemma lem3517269 {_90724 A : Type'} (_37170 : type235 _90724 A) (u : type686 A) (f : type862 _90724 A) : ((_37170 u f) = (term2715 _90724 A u f)) = (term2716 _90724 A _37170 u f).
Proof. exact (@lem3517268 A (_37170 u f) (term2617 _90724 A u f)). Qed.
Lemma lem3517270 {_90724 A : Type'} (u : type686 A) (f : type862 _90724 A) (t : type686 A) : (term2619 _90724 A u f t) = (term2040 _90724 A u f t).
Proof. exact (eq_refl (term2619 _90724 A u f t)). Qed.
Lemma lem3517271 {_90724 A : Type'} (u : type686 A) (f : type862 _90724 A) : (term2715 _90724 A u f) = (term2617 _90724 A u f).
Proof. exact (fun_ext (fun t : type686 A => @lem3517270 _90724 A u f t)). Qed.
Lemma lem3517272 {_90724 A : Type'} (_37170 : type235 _90724 A) (u : type686 A) (f : type862 _90724 A) : (term2618 _90724 A _37170 u f) = (term2618 _90724 A _37170 u f).
Proof. exact (eq_refl (term2618 _90724 A _37170 u f)). Qed.
Lemma lem3517273 {_90724 A : Type'} (_37170 : type235 _90724 A) (u : type686 A) (f : type862 _90724 A) : ((_37170 u f) = (term2715 _90724 A u f)) = ((_37170 u f) = (term2617 _90724 A u f)).
Proof. exact (MK_COMB (@lem3517272 _90724 A _37170 u f) (@lem3517271 _90724 A u f)). Qed.
Lemma lem3517274 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem3517275 {_90724 A : Type'} (_37170 : type235 _90724 A) (u : type686 A) (f : type862 _90724 A) : (term2717 _90724 A _37170 u f) = (term2718 _90724 A _37170 u f).
Proof. exact (MK_COMB (@lem3517274) (@lem3517273 _90724 A _37170 u f)). Qed.
Lemma lem3517276 {_90724 A : Type'} (u : type686 A) (f : type862 _90724 A) (t : type686 A) : (term2619 _90724 A u f t) = (term2040 _90724 A u f t).
Proof. exact (eq_refl (term2619 _90724 A u f t)). Qed.
Lemma lem3517277 {_90724 A : Type'} (_37170 : type235 _90724 A) (u : type686 A) (f : type862 _90724 A) (t : type686 A) : (term2620 _90724 A _37170 u f t) = (term2620 _90724 A _37170 u f t).
Proof. exact (eq_refl (term2620 _90724 A _37170 u f t)). Qed.
Lemma lem3517278 {_90724 A : Type'} (_37170 : type235 _90724 A) (u : type686 A) (f : type862 _90724 A) (t : type686 A) : ((_37170 u f t) = (term2619 _90724 A u f t)) = ((_37170 u f t) = (term2040 _90724 A u f t)).
Proof. exact (MK_COMB (@lem3517277 _90724 A _37170 u f t) (@lem3517276 _90724 A u f t)). Qed.
Lemma lem3517279 {_90724 A : Type'} (_37170 : type235 _90724 A) (u : type686 A) (f : type862 _90724 A) : (term2719 _90724 A _37170 u f) = (term2720 _90724 A _37170 u f).
Proof. exact (fun_ext (fun t : type686 A => @lem3517278 _90724 A _37170 u f t)). Qed.
Lemma lem3517280 {A : Type'} : (@all ((A -> Prop) -> Prop)) = (@all ((A -> Prop) -> Prop)).
Proof. exact (eq_refl (@all ((A -> Prop) -> Prop))). Qed.
Lemma lem3517281 {_90724 A : Type'} (_37170 : type235 _90724 A) (u : type686 A) (f : type862 _90724 A) : (term2716 _90724 A _37170 u f) = (term2721 _90724 A _37170 u f).
Proof. exact (MK_COMB (@lem3517280 A) (@lem3517279 _90724 A _37170 u f)). Qed.
Lemma lem3517282 {_90724 A : Type'} (_37170 : type235 _90724 A) (u : type686 A) (f : type862 _90724 A) : (((_37170 u f) = (term2715 _90724 A u f)) = (term2716 _90724 A _37170 u f)) = (((_37170 u f) = (term2617 _90724 A u f)) = (term2721 _90724 A _37170 u f)).
Proof. exact (MK_COMB (@lem3517275 _90724 A _37170 u f) (@lem3517281 _90724 A _37170 u f)). Qed.
Lemma lem3517283 {_90724 A : Type'} (_37170 : type235 _90724 A) (u : type686 A) (f : type862 _90724 A) : ((_37170 u f) = (term2617 _90724 A u f)) = (term2721 _90724 A _37170 u f).
Proof. exact (EQ_MP (@lem3517282 _90724 A _37170 u f) (@lem3517269 _90724 A _37170 u f)). Qed.
Lemma lem3517285 {_3571 _3575 : Type'} (s : _3575 -> _3571) (t : _3575 -> _3571) : (s = (term2166 _3571 _3575 t)) = (term2167 _3571 _3575 s t).
Proof. exact (EQ_MP (@lem19792 _3571 _3575 s t) (@lem0)). Qed.
Lemma lem3517286 {A : Type'} (s : type686 A) (t : type686 A) : (s = (term304 A t)) = (term2722 A s t).
Proof. exact (@lem3517285 Prop (A -> Prop) s t). Qed.
Lemma lem3517287 {_90724 A : Type'} (_37170 : type235 _90724 A) (u : type686 A) (f : type862 _90724 A) (t : type686 A) : ((_37170 u f t) = (term2723 _90724 A u f t)) = (term2724 _90724 A _37170 u f t).
Proof. exact (@lem3517286 A (_37170 u f t) (term2040 _90724 A u f t)). Qed.
Lemma lem3517288 {_90724 A : Type'} (GEN_PVAR_84 : A -> Prop) (u : type686 A) (f : type862 _90724 A) (t : type686 A) : (term2725 _90724 A u f t GEN_PVAR_84) = (term2039 _90724 A GEN_PVAR_84 u f t).
Proof. exact (eq_refl (term2725 _90724 A u f t GEN_PVAR_84)). Qed.
Lemma lem3517289 {_90724 A : Type'} (u : type686 A) (f : type862 _90724 A) (t : type686 A) : (term2723 _90724 A u f t) = (term2040 _90724 A u f t).
Proof. exact (fun_ext (fun GEN_PVAR_84 : A -> Prop => @lem3517288 _90724 A GEN_PVAR_84 u f t)). Qed.
Lemma lem3517290 {_90724 A : Type'} (_37170 : type235 _90724 A) (u : type686 A) (f : type862 _90724 A) (t : type686 A) : (term2620 _90724 A _37170 u f t) = (term2620 _90724 A _37170 u f t).
Proof. exact (eq_refl (term2620 _90724 A _37170 u f t)). Qed.
Lemma lem3517291 {_90724 A : Type'} (_37170 : type235 _90724 A) (u : type686 A) (f : type862 _90724 A) (t : type686 A) : ((_37170 u f t) = (term2723 _90724 A u f t)) = ((_37170 u f t) = (term2040 _90724 A u f t)).
Proof. exact (MK_COMB (@lem3517290 _90724 A _37170 u f t) (@lem3517289 _90724 A u f t)). Qed.
Lemma lem3517292 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem3517293 {_90724 A : Type'} (_37170 : type235 _90724 A) (u : type686 A) (f : type862 _90724 A) (t : type686 A) : (term2726 _90724 A _37170 u f t) = (term2727 _90724 A _37170 u f t).
Proof. exact (MK_COMB (@lem3517292) (@lem3517291 _90724 A _37170 u f t)). Qed.
Lemma lem3517294 {_90724 A : Type'} (GEN_PVAR_84 : A -> Prop) (u : type686 A) (f : type862 _90724 A) (t : type686 A) : (term2725 _90724 A u f t GEN_PVAR_84) = (term2039 _90724 A GEN_PVAR_84 u f t).
Proof. exact (eq_refl (term2725 _90724 A u f t GEN_PVAR_84)). Qed.
Lemma lem3517295 {_90724 A : Type'} (_37170 : type235 _90724 A) (u : type686 A) (f : type862 _90724 A) (t : type686 A) (GEN_PVAR_84 : A -> Prop) : (term2728 _90724 A _37170 u f t GEN_PVAR_84) = (term2728 _90724 A _37170 u f t GEN_PVAR_84).
Proof. exact (eq_refl (term2728 _90724 A _37170 u f t GEN_PVAR_84)). Qed.
Lemma lem3517296 {_90724 A : Type'} (_37170 : type235 _90724 A) (GEN_PVAR_84 : A -> Prop) (u : type686 A) (f : type862 _90724 A) (t : type686 A) : ((_37170 u f t GEN_PVAR_84) = (term2725 _90724 A u f t GEN_PVAR_84)) = ((_37170 u f t GEN_PVAR_84) = (term2039 _90724 A GEN_PVAR_84 u f t)).
Proof. exact (MK_COMB (@lem3517295 _90724 A _37170 u f t GEN_PVAR_84) (@lem3517294 _90724 A GEN_PVAR_84 u f t)). Qed.
Lemma lem3517297 {_90724 A : Type'} (_37170 : type235 _90724 A) (u : type686 A) (f : type862 _90724 A) (t : type686 A) : (term2729 _90724 A _37170 u f t) = (term2730 _90724 A _37170 u f t).
Proof. exact (fun_ext (fun GEN_PVAR_84 : A -> Prop => @lem3517296 _90724 A _37170 GEN_PVAR_84 u f t)). Qed.
Lemma lem3517298 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem3517299 {_90724 A : Type'} (_37170 : type235 _90724 A) (u : type686 A) (f : type862 _90724 A) (t : type686 A) : (term2724 _90724 A _37170 u f t) = (term2731 _90724 A _37170 u f t).
Proof. exact (MK_COMB (@lem3517298 A) (@lem3517297 _90724 A _37170 u f t)). Qed.
Lemma lem3517300 {_90724 A : Type'} (_37170 : type235 _90724 A) (u : type686 A) (f : type862 _90724 A) (t : type686 A) : (((_37170 u f t) = (term2723 _90724 A u f t)) = (term2724 _90724 A _37170 u f t)) = (((_37170 u f t) = (term2040 _90724 A u f t)) = (term2731 _90724 A _37170 u f t)).
Proof. exact (MK_COMB (@lem3517293 _90724 A _37170 u f t) (@lem3517299 _90724 A _37170 u f t)). Qed.
Lemma lem3517301 {_90724 A : Type'} (_37170 : type235 _90724 A) (u : type686 A) (f : type862 _90724 A) (t : type686 A) : ((_37170 u f t) = (term2040 _90724 A u f t)) = (term2731 _90724 A _37170 u f t).
Proof. exact (EQ_MP (@lem3517300 _90724 A _37170 u f t) (@lem3517287 _90724 A _37170 u f t)). Qed.
Lemma lem3517302 {_90724 A : Type'} (_37170 : type235 _90724 A) (GEN_PVAR_84 : A -> Prop) (u : type686 A) (f : type862 _90724 A) (t : type686 A) : ((_37170 u f t GEN_PVAR_84) = (term2039 _90724 A GEN_PVAR_84 u f t)) = ((_37170 u f t GEN_PVAR_84) = (term2039 _90724 A GEN_PVAR_84 u f t)).
Proof. exact (eq_refl ((_37170 u f t GEN_PVAR_84) = (term2039 _90724 A GEN_PVAR_84 u f t))). Qed.
Lemma lem3517303 {_90724 A : Type'} (_37170 : type235 _90724 A) (u : type686 A) (f : type862 _90724 A) (t : type686 A) : (term2730 _90724 A _37170 u f t) = (term2730 _90724 A _37170 u f t).
Proof. exact (fun_ext (fun GEN_PVAR_84 : A -> Prop => @lem3517302 _90724 A _37170 GEN_PVAR_84 u f t)). Qed.
Lemma lem3517304 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem3517305 {_90724 A : Type'} (_37170 : type235 _90724 A) (u : type686 A) (f : type862 _90724 A) (t : type686 A) : (term2731 _90724 A _37170 u f t) = (term2731 _90724 A _37170 u f t).
Proof. exact (MK_COMB (@lem3517304 A) (@lem3517303 _90724 A _37170 u f t)). Qed.
Lemma lem3517306 {_90724 A : Type'} (_37170 : type235 _90724 A) (u : type686 A) (f : type862 _90724 A) (t : type686 A) : ((_37170 u f t) = (term2040 _90724 A u f t)) = (term2731 _90724 A _37170 u f t).
Proof. exact (TRANS (@lem3517301 _90724 A _37170 u f t) (@lem3517305 _90724 A _37170 u f t)). Qed.
Lemma lem3517307 {_90724 A : Type'} (_37170 : type235 _90724 A) (u : type686 A) (f : type862 _90724 A) : (term2720 _90724 A _37170 u f) = (term2732 _90724 A _37170 u f).
Proof. exact (fun_ext (fun t : type686 A => @lem3517306 _90724 A _37170 u f t)). Qed.
Lemma lem3517308 {A : Type'} : (@all ((A -> Prop) -> Prop)) = (@all ((A -> Prop) -> Prop)).
Proof. exact (eq_refl (@all ((A -> Prop) -> Prop))). Qed.
Lemma lem3517309 {_90724 A : Type'} (_37170 : type235 _90724 A) (u : type686 A) (f : type862 _90724 A) : (term2721 _90724 A _37170 u f) = (term2733 _90724 A _37170 u f).
Proof. exact (MK_COMB (@lem3517308 A) (@lem3517307 _90724 A _37170 u f)). Qed.
Lemma lem3517310 {_90724 A : Type'} (_37170 : type235 _90724 A) (u : type686 A) (f : type862 _90724 A) : ((_37170 u f) = (term2617 _90724 A u f)) = (term2733 _90724 A _37170 u f).
Proof. exact (TRANS (@lem3517283 _90724 A _37170 u f) (@lem3517309 _90724 A _37170 u f)). Qed.
Lemma lem3517311 {_90724 A : Type'} (_37170 : type235 _90724 A) (u : type686 A) : (term2711 _90724 A _37170 u) = (term2734 _90724 A _37170 u).
Proof. exact (fun_ext (fun f : type862 _90724 A => @lem3517310 _90724 A _37170 u f)). Qed.
Lemma lem3517312 {_90724 A : Type'} : (@all ((A -> Prop) -> _90724)) = (@all ((A -> Prop) -> _90724)).
Proof. exact (eq_refl (@all ((A -> Prop) -> _90724))). Qed.
Lemma lem3517313 {_90724 A : Type'} (_37170 : type235 _90724 A) (u : type686 A) : (term2712 _90724 A _37170 u) = (term2735 _90724 A _37170 u).
Proof. exact (MK_COMB (@lem3517312 _90724 A) (@lem3517311 _90724 A _37170 u)). Qed.
Lemma lem3517314 {_90724 A : Type'} (_37170 : type235 _90724 A) (u : type686 A) : ((_37170 u) = (term2614 _90724 A u)) = (term2735 _90724 A _37170 u).
Proof. exact (TRANS (@lem3517265 _90724 A _37170 u) (@lem3517313 _90724 A _37170 u)). Qed.
Lemma lem3517315 {_90724 A : Type'} (_37170 : type235 _90724 A) : (term2702 _90724 A _37170) = (term2736 _90724 A _37170).
Proof. exact (fun_ext (fun u : type686 A => @lem3517314 _90724 A _37170 u)). Qed.
Lemma lem3517316 {A : Type'} : (@all ((A -> Prop) -> Prop)) = (@all ((A -> Prop) -> Prop)).
Proof. exact (eq_refl (@all ((A -> Prop) -> Prop))). Qed.
Lemma lem3517317 {_90724 A : Type'} (_37170 : type235 _90724 A) : (term2703 _90724 A _37170) = (term2737 _90724 A _37170).
Proof. exact (MK_COMB (@lem3517316 A) (@lem3517315 _90724 A _37170)). Qed.
Lemma lem3517318 {_90724 A : Type'} (_37170 : type235 _90724 A) : (_37170 = (term2612 _90724 A)) = (term2737 _90724 A _37170).
Proof. exact (TRANS (@lem3517247 _90724 A _37170) (@lem3517317 _90724 A _37170)). Qed.
Lemma lem3517319 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem3517320 {_90724 A : Type'} (_37170 : type235 _90724 A) : (term2681 _90724 A _37170) = (term2738 _90724 A _37170).
Proof. exact (MK_COMB (@lem3517319) (@lem3517318 _90724 A _37170)). Qed.
Lemma lem3517321 {_90715 _90724 A B : Type'} (_37170 : type235 _90724 A) : (term2673 _90715 _90724 A B _37170) = (term2673 _90715 _90724 A B _37170).
Proof. exact (eq_refl (term2673 _90715 _90724 A B _37170)). Qed.
Lemma lem3517322 {_90715 _90724 A B : Type'} (_37170 : type235 _90724 A) : (term2689 _90715 _90724 A B _37170) = (term2739 _90715 _90724 A B _37170).
Proof. exact (MK_COMB (@lem3517320 _90724 A _37170) (@lem3517321 _90715 _90724 A B _37170)). Qed.
Lemma lem3517323 {_90715 _90724 A B : Type'} : (term2691 _90715 _90724 A B) = (term2740 _90715 _90724 A B).
Proof. exact (fun_ext (fun _37170 : type235 _90724 A => @lem3517322 _90715 _90724 A B _37170)). Qed.
Lemma lem3517324 {_90724 A : Type'} : (@all (((A -> Prop) -> Prop) -> ((A -> Prop) -> _90724) -> ((A -> Prop) -> Prop) -> (A -> Prop) -> Prop)) = (@all (((A -> Prop) -> Prop) -> ((A -> Prop) -> _90724) -> ((A -> Prop) -> Prop) -> (A -> Prop) -> Prop)).
Proof. exact (eq_refl (@all (((A -> Prop) -> Prop) -> ((A -> Prop) -> _90724) -> ((A -> Prop) -> Prop) -> (A -> Prop) -> Prop))). Qed.
Lemma lem3517325 {_90715 _90724 A B : Type'} : (term2693 _90715 _90724 A B) = (term2741 _90715 _90724 A B).
Proof. exact (MK_COMB (@lem3517324 _90724 A) (@lem3517323 _90715 _90724 A B)). Qed.
Lemma lem3517326 {_90715 _90724 A B : Type'} : (term2680 _90715 _90724 A B) = (term2680 _90715 _90724 A B).
Proof. exact (eq_refl (term2680 _90715 _90724 A B)). Qed.
Lemma lem3517327 {_90715 _90724 A B : Type'} : ((term2611 _90715 _90724 A B) = (term2693 _90715 _90724 A B)) = ((term2611 _90715 _90724 A B) = (term2741 _90715 _90724 A B)).
Proof. exact (MK_COMB (@lem3517326 _90715 _90724 A B) (@lem3517325 _90715 _90724 A B)). Qed.
Lemma lem3517328 {_90715 _90724 A B : Type'} : (term2611 _90715 _90724 A B) = (term2741 _90715 _90724 A B).
Proof. exact (EQ_MP (@lem3517327 _90715 _90724 A B) (@lem3517229 _90715 _90724 A B)). Qed.
Lemma lem3517329 {A B : Type'} (_37171 : type171 A B) (h1 : _37171 = (term2742 A B)) : _37171 = (term2742 A B).
Proof. exact (h1). Qed.
Lemma lem3517330 {A : Type'} (u : type686 A) : u = u.
Proof. exact (eq_refl u). Qed.
Lemma lem3517331 {A B : Type'} (u : type686 A) (_37171 : type171 A B) (h1 : _37171 = (term2742 A B)) : (_37171 u) = (term2743 A B u).
Proof. exact (MK_COMB (@lem3517329 A B _37171 h1) (@lem3517330 A u)). Qed.
Lemma lem3517332 {A B : Type'} (u : type686 A) : (term2743 A B u) = (term2744 A B u).
Proof. exact (eq_refl (term2743 A B u)). Qed.
Lemma lem3517333 {A B : Type'} (_37171 : type171 A B) (u : type686 A) : (term2745 A B _37171 u) = (term2745 A B _37171 u).
Proof. exact (eq_refl (term2745 A B _37171 u)). Qed.
Lemma lem3517334 {A B : Type'} (_37171 : type171 A B) (u : type686 A) : ((_37171 u) = (term2743 A B u)) = ((_37171 u) = (term2744 A B u)).
Proof. exact (MK_COMB (@lem3517333 A B _37171 u) (@lem3517332 A B u)). Qed.
Lemma lem3517335 {A B : Type'} (u : type686 A) (_37171 : type171 A B) (h1 : _37171 = (term2742 A B)) : (_37171 u) = (term2744 A B u).
Proof. exact (EQ_MP (@lem3517334 A B _37171 u) (@lem3517331 A B u _37171 h1)). Qed.
Lemma lem3517336 {A B : Type'} (f : type678 A B) : f = f.
Proof. exact (eq_refl f). Qed.
Lemma lem3517337 {A B : Type'} (u : type686 A) (f : type678 A B) (_37171 : type171 A B) (h1 : _37171 = (term2742 A B)) : (_37171 u f) = (term2746 A B u f).
Proof. exact (MK_COMB (@lem3517335 A B u _37171 h1) (@lem3517336 A B f)). Qed.
Lemma lem3517338 {A B : Type'} (u : type686 A) (f : type678 A B) : (term2746 A B u f) = (term2747 A B u f).
Proof. exact (eq_refl (term2746 A B u f)). Qed.
Lemma lem3517339 {A B : Type'} (_37171 : type171 A B) (u : type686 A) (f : type678 A B) : (term2748 A B _37171 u f) = (term2748 A B _37171 u f).
Proof. exact (eq_refl (term2748 A B _37171 u f)). Qed.
Lemma lem3517340 {A B : Type'} (_37171 : type171 A B) (u : type686 A) (f : type678 A B) : ((_37171 u f) = (term2746 A B u f)) = ((_37171 u f) = (term2747 A B u f)).
Proof. exact (MK_COMB (@lem3517339 A B _37171 u f) (@lem3517338 A B u f)). Qed.
Lemma lem3517341 {A B : Type'} (u : type686 A) (f : type678 A B) (_37171 : type171 A B) (h1 : _37171 = (term2742 A B)) : (_37171 u f) = (term2747 A B u f).
Proof. exact (EQ_MP (@lem3517340 A B _37171 u f) (@lem3517337 A B u f _37171 h1)). Qed.
Lemma lem3517342 {A : Type'} (t : type686 A) : t = t.
Proof. exact (eq_refl t). Qed.
Lemma lem3517343 {A B : Type'} (u : type686 A) (f : type678 A B) (t : type686 A) (_37171 : type171 A B) (h1 : _37171 = (term2742 A B)) : (_37171 u f t) = (term2749 A B u f t).
Proof. exact (MK_COMB (@lem3517341 A B u f _37171 h1) (@lem3517342 A t)). Qed.
Lemma lem3517344 {A B : Type'} (u : type686 A) (f : type678 A B) (t : type686 A) : (term2749 A B u f t) = (term2016 A B u f t).
Proof. exact (eq_refl (term2749 A B u f t)). Qed.
Lemma lem3517345 {A B : Type'} (_37171 : type171 A B) (u : type686 A) (f : type678 A B) (t : type686 A) : (term2750 A B _37171 u f t) = (term2750 A B _37171 u f t).
Proof. exact (eq_refl (term2750 A B _37171 u f t)). Qed.
Lemma lem3517346 {A B : Type'} (_37171 : type171 A B) (u : type686 A) (f : type678 A B) (t : type686 A) : ((_37171 u f t) = (term2749 A B u f t)) = ((_37171 u f t) = (term2016 A B u f t)).
Proof. exact (MK_COMB (@lem3517345 A B _37171 u f t) (@lem3517344 A B u f t)). Qed.
Lemma lem3517347 {A B : Type'} (u : type686 A) (f : type678 A B) (t : type686 A) (_37171 : type171 A B) (h1 : _37171 = (term2742 A B)) : (_37171 u f t) = (term2016 A B u f t).
Proof. exact (EQ_MP (@lem3517346 A B _37171 u f t) (@lem3517343 A B u f t _37171 h1)). Qed.
Lemma lem3517367 {A B : Type'} (f : type678 A B) (g : type180 A) : ((term2011 A B f g) = (term2012 A B f g)) = ((term2011 A B f g) = (term2012 A B f g)).
Proof. exact (eq_refl ((term2011 A B f g) = (term2012 A B f g))). Qed.
Lemma lem3517368 {A : Type'} (t : type686 A) : t = t.
Proof. exact (eq_refl t). Qed.
Lemma lem3517370 {A B : Type'} (u : type686 A) (f : type678 A B) (t : type686 A) (_37171 : type171 A B) (h1 : _37171 = (term2742 A B)) : (term2016 A B u f t) = (_37171 u f t).
Proof. exact (SYM (@lem3517347 A B u f t _37171 h1)). Qed.
Lemma lem3517371 {A B : Type'} (u : type686 A) (f : type678 A B) (t : type686 A) (_37171 : type171 A B) (h1 : _37171 = (term2742 A B)) : (term2016 A B u f t) = (_37171 u f t).
Proof. exact (@lem3517370 A B u f t _37171 h1). Qed.
Lemma lem3517372 {A : Type'} : (@GSPEC (A -> Prop)) = (@GSPEC (A -> Prop)).
Proof. exact (eq_refl (@GSPEC (A -> Prop))). Qed.
Lemma lem3517373 {A B : Type'} (u : type686 A) (f : type678 A B) (t : type686 A) (_37171 : type171 A B) (h1 : _37171 = (term2742 A B)) : (term2017 A B u f t) = (term2751 A B _37171 u f t).
Proof. exact (MK_COMB (@lem3517372 A) (@lem3517371 A B u f t _37171 h1)). Qed.
Lemma lem3517374 {A : Type'} : (@SUBSET (A -> Prop)) = (@SUBSET (A -> Prop)).
Proof. exact (eq_refl (@SUBSET (A -> Prop))). Qed.
Lemma lem3517375 {A B : Type'} (u : type686 A) (f : type678 A B) (t : type686 A) (_37171 : type171 A B) (h1 : _37171 = (term2742 A B)) : (term2018 A B u f t) = (term2752 A B _37171 u f t).
Proof. exact (MK_COMB (@lem3517374 A) (@lem3517373 A B u f t _37171 h1)). Qed.
Lemma lem3517376 {A B : Type'} (u : type686 A) (f : type678 A B) (t : type686 A) (_37171 : type171 A B) (h1 : _37171 = (term2742 A B)) : (term2019 A B u f t) = (term2753 A B _37171 u f t).
Proof. exact (MK_COMB (@lem3517375 A B u f t _37171 h1) (@lem3517368 A t)). Qed.
Lemma lem3517383 {A : Type'} (t : type686 A) (u : type686 A) : (term2020 A t u) = (term2020 A t u).
Proof. exact (eq_refl (term2020 A t u)). Qed.
Lemma lem3517384 {A B : Type'} (u : type686 A) (f : type678 A B) (t : type686 A) (_37171 : type171 A B) (h1 : _37171 = (term2742 A B)) : (term2021 A B u f t) = (term2754 A B _37171 u f t).
Proof. exact (MK_COMB (@lem3517383 A t u) (@lem3517376 A B u f t _37171 h1)). Qed.
Lemma lem3517391 {A : Type'} (t : type686 A) (g : type180 A) : (term2022 A t g) = (term2022 A t g).
Proof. exact (eq_refl (term2022 A t g)). Qed.
Lemma lem3517392 {A B : Type'} (g : type180 A) (u : type686 A) (f : type678 A B) (t : type686 A) (_37171 : type171 A B) (h1 : _37171 = (term2742 A B)) : (term2023 A B g u f t) = (term2755 A B g _37171 u f t).
Proof. exact (MK_COMB (@lem3517391 A t g) (@lem3517384 A B u f t _37171 h1)). Qed.
Lemma lem3517393 {A B : Type'} (g : type180 A) (u : type686 A) (f : type678 A B) (_37171 : type171 A B) (h1 : _37171 = (term2742 A B)) : (term2024 A B g u f) = (term2756 A B g _37171 u f).
Proof. exact (fun_ext (fun t : type686 A => @lem3517392 A B g u f t _37171 h1)). Qed.
Lemma lem3517394 {A : Type'} : (@all ((A -> Prop) -> Prop)) = (@all ((A -> Prop) -> Prop)).
Proof. exact (eq_refl (@all ((A -> Prop) -> Prop))). Qed.
Lemma lem3517395 {A B : Type'} (g : type180 A) (u : type686 A) (f : type678 A B) (_37171 : type171 A B) (h1 : _37171 = (term2742 A B)) : (term2025 A B g u f) = (term2757 A B g _37171 u f).
Proof. exact (MK_COMB (@lem3517394 A) (@lem3517393 A B g u f _37171 h1)). Qed.
Lemma lem3517404 {A : Type'} (g : type180 A) : (term2026 A g) = (term2026 A g).
Proof. exact (eq_refl (term2026 A g)). Qed.
Lemma lem3517405 {A B : Type'} (g : type180 A) (u : type686 A) (f : type678 A B) (_37171 : type171 A B) (h1 : _37171 = (term2742 A B)) : (term2027 A B g u f) = (term2758 A B g _37171 u f).
Proof. exact (MK_COMB (@lem3517404 A g) (@lem3517395 A B g u f _37171 h1)). Qed.
Lemma lem3517406 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem3517407 {A B : Type'} (g : type180 A) (u : type686 A) (f : type678 A B) (_37171 : type171 A B) (h1 : _37171 = (term2742 A B)) : (term2028 A B g u f) = (term2759 A B g _37171 u f).
Proof. exact (MK_COMB (@lem3517406) (@lem3517405 A B g u f _37171 h1)). Qed.
Lemma lem3517408 {A B : Type'} (u : type686 A) (f : type678 A B) (g : type180 A) (_37171 : type171 A B) (h1 : _37171 = (term2742 A B)) : (term2029 A B u f g) = (term2760 A B _37171 u f g).
Proof. exact (MK_COMB (@lem3517407 A B g u f _37171 h1) (@lem3517367 A B f g)). Qed.
Lemma lem3517409 {A B : Type'} (u : type686 A) (f : type678 A B) (_37171 : type171 A B) (h1 : _37171 = (term2742 A B)) : (term2030 A B u f) = (term2761 A B _37171 u f).
Proof. exact (fun_ext (fun g : type180 A => @lem3517408 A B u f g _37171 h1)). Qed.
Lemma lem3517410 {A : Type'} : (@all (((A -> Prop) -> Prop) -> Prop)) = (@all (((A -> Prop) -> Prop) -> Prop)).
Proof. exact (eq_refl (@all (((A -> Prop) -> Prop) -> Prop))). Qed.
Lemma lem3517411 {A B : Type'} (u : type686 A) (f : type678 A B) (_37171 : type171 A B) (h1 : _37171 = (term2742 A B)) : (term2031 A B u f) = (term2762 A B _37171 u f).
Proof. exact (MK_COMB (@lem3517410 A) (@lem3517409 A B u f _37171 h1)). Qed.
Lemma lem3517412 {A B : Type'} (u : type686 A) (_37171 : type171 A B) (h1 : _37171 = (term2742 A B)) : (term2032 A B u) = (term2763 A B _37171 u).
Proof. exact (fun_ext (fun f : type678 A B => @lem3517411 A B u f _37171 h1)). Qed.
Lemma lem3517413 {A B : Type'} : (@all ((A -> Prop) -> B -> Prop)) = (@all ((A -> Prop) -> B -> Prop)).
Proof. exact (eq_refl (@all ((A -> Prop) -> B -> Prop))). Qed.
Lemma lem3517414 {A B : Type'} (u : type686 A) (_37171 : type171 A B) (h1 : _37171 = (term2742 A B)) : (term2033 A B u) = (term2764 A B _37171 u).
Proof. exact (MK_COMB (@lem3517413 A B) (@lem3517412 A B u _37171 h1)). Qed.
Lemma lem3517415 {A B : Type'} (_37171 : type171 A B) (h1 : _37171 = (term2742 A B)) : (term2034 A B) = (term2765 A B _37171).
Proof. exact (fun_ext (fun u : type686 A => @lem3517414 A B u _37171 h1)). Qed.
Lemma lem3517416 {A : Type'} : (@all ((A -> Prop) -> Prop)) = (@all ((A -> Prop) -> Prop)).
Proof. exact (eq_refl (@all ((A -> Prop) -> Prop))). Qed.
Lemma lem3517417 {A B : Type'} (_37171 : type171 A B) (h1 : _37171 = (term2742 A B)) : (term1961 A B) = (term2766 A B _37171).
Proof. exact (MK_COMB (@lem3517416 A) (@lem3517415 A B _37171 h1)). Qed.
Lemma lem3517418 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem3517419 {A B : Type'} (_37171 : type171 A B) (h1 : _37171 = (term2742 A B)) : (term1967 A B) = (term2767 A B _37171).
Proof. exact (MK_COMB (@lem3517418) (@lem3517417 A B _37171 h1)). Qed.
Lemma lem3517438 {_90724 A : Type'} (f : type862 _90724 A) (g : type180 A) : ((term2035 _90724 A f g) = (term2036 _90724 A f g)) = ((term2035 _90724 A f g) = (term2036 _90724 A f g)).
Proof. exact (eq_refl ((term2035 _90724 A f g) = (term2036 _90724 A f g))). Qed.
Lemma lem3517467 {_90724 A : Type'} (g : type180 A) (_37170 : type235 _90724 A) (u : type686 A) (f : type862 _90724 A) (t : type686 A) : (term2625 _90724 A g _37170 u f t) = (term2625 _90724 A g _37170 u f t).
Proof. exact (eq_refl (term2625 _90724 A g _37170 u f t)). Qed.
Lemma lem3517468 {_90724 A : Type'} (g : type180 A) (_37170 : type235 _90724 A) (u : type686 A) (f : type862 _90724 A) : (term2626 _90724 A g _37170 u f) = (term2626 _90724 A g _37170 u f).
Proof. exact (fun_ext (fun t : type686 A => @lem3517467 _90724 A g _37170 u f t)). Qed.
Lemma lem3517469 {A : Type'} : (@all ((A -> Prop) -> Prop)) = (@all ((A -> Prop) -> Prop)).
Proof. exact (eq_refl (@all ((A -> Prop) -> Prop))). Qed.
Lemma lem3517470 {_90724 A : Type'} (g : type180 A) (_37170 : type235 _90724 A) (u : type686 A) (f : type862 _90724 A) : (term2627 _90724 A g _37170 u f) = (term2627 _90724 A g _37170 u f).
Proof. exact (MK_COMB (@lem3517469 A) (@lem3517468 _90724 A g _37170 u f)). Qed.
Lemma lem3517479 {A : Type'} (g : type180 A) : (term2026 A g) = (term2026 A g).
Proof. exact (eq_refl (term2026 A g)). Qed.
Lemma lem3517480 {_90724 A : Type'} (g : type180 A) (_37170 : type235 _90724 A) (u : type686 A) (f : type862 _90724 A) : (term2628 _90724 A g _37170 u f) = (term2628 _90724 A g _37170 u f).
Proof. exact (MK_COMB (@lem3517479 A g) (@lem3517470 _90724 A g _37170 u f)). Qed.
Lemma lem3517481 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem3517482 {_90724 A : Type'} (g : type180 A) (_37170 : type235 _90724 A) (u : type686 A) (f : type862 _90724 A) : (term2629 _90724 A g _37170 u f) = (term2629 _90724 A g _37170 u f).
Proof. exact (MK_COMB (@lem3517481) (@lem3517480 _90724 A g _37170 u f)). Qed.
Lemma lem3517483 {_90724 A : Type'} (_37170 : type235 _90724 A) (u : type686 A) (f : type862 _90724 A) (g : type180 A) : (term2630 _90724 A _37170 u f g) = (term2630 _90724 A _37170 u f g).
Proof. exact (MK_COMB (@lem3517482 _90724 A g _37170 u f) (@lem3517438 _90724 A f g)). Qed.
Lemma lem3517484 {_90724 A : Type'} (_37170 : type235 _90724 A) (u : type686 A) (f : type862 _90724 A) : (term2631 _90724 A _37170 u f) = (term2631 _90724 A _37170 u f).
Proof. exact (fun_ext (fun g : type180 A => @lem3517483 _90724 A _37170 u f g)). Qed.
Lemma lem3517485 {A : Type'} : (@all (((A -> Prop) -> Prop) -> Prop)) = (@all (((A -> Prop) -> Prop) -> Prop)).
Proof. exact (eq_refl (@all (((A -> Prop) -> Prop) -> Prop))). Qed.
Lemma lem3517486 {_90724 A : Type'} (_37170 : type235 _90724 A) (u : type686 A) (f : type862 _90724 A) : (term2632 _90724 A _37170 u f) = (term2632 _90724 A _37170 u f).
Proof. exact (MK_COMB (@lem3517485 A) (@lem3517484 _90724 A _37170 u f)). Qed.
Lemma lem3517487 {_90724 A : Type'} (_37170 : type235 _90724 A) (u : type686 A) : (term2633 _90724 A _37170 u) = (term2633 _90724 A _37170 u).
Proof. exact (fun_ext (fun f : type862 _90724 A => @lem3517486 _90724 A _37170 u f)). Qed.
Lemma lem3517488 {_90724 A : Type'} : (@all ((A -> Prop) -> _90724)) = (@all ((A -> Prop) -> _90724)).
Proof. exact (eq_refl (@all ((A -> Prop) -> _90724))). Qed.
Lemma lem3517489 {_90724 A : Type'} (_37170 : type235 _90724 A) (u : type686 A) : (term2634 _90724 A _37170 u) = (term2634 _90724 A _37170 u).
Proof. exact (MK_COMB (@lem3517488 _90724 A) (@lem3517487 _90724 A _37170 u)). Qed.
Lemma lem3517490 {_90724 A : Type'} (_37170 : type235 _90724 A) : (term2635 _90724 A _37170) = (term2635 _90724 A _37170).
Proof. exact (fun_ext (fun u : type686 A => @lem3517489 _90724 A _37170 u)). Qed.
Lemma lem3517491 {A : Type'} : (@all ((A -> Prop) -> Prop)) = (@all ((A -> Prop) -> Prop)).
Proof. exact (eq_refl (@all ((A -> Prop) -> Prop))). Qed.
Lemma lem3517492 {_90724 A : Type'} (_37170 : type235 _90724 A) : (term2636 _90724 A _37170) = (term2636 _90724 A _37170).
Proof. exact (MK_COMB (@lem3517491 A) (@lem3517490 _90724 A _37170)). Qed.
Lemma lem3517493 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem3517494 {_90724 A : Type'} (_37170 : type235 _90724 A) : (term2637 _90724 A _37170) = (term2637 _90724 A _37170).
Proof. exact (MK_COMB (@lem3517493) (@lem3517492 _90724 A _37170)). Qed.
Lemma lem3517495 {_90724 A B : Type'} (_37170 : type235 _90724 A) (_37171 : type171 A B) (h1 : _37171 = (term2742 A B)) : (term2638 _90724 A B _37170) = (term2768 _90724 A B _37170 _37171).
Proof. exact (MK_COMB (@lem3517494 _90724 A _37170) (@lem3517419 A B _37171 h1)). Qed.
Lemma lem3517514 {_90724 B : Type'} (f : B -> _90724) (g : type686 B) : ((term2056 _90724 B f g) = (term2057 _90724 B f g)) = ((term2056 _90724 B f g) = (term2057 _90724 B f g)).
Proof. exact (eq_refl ((term2056 _90724 B f g) = (term2057 _90724 B f g))). Qed.
Lemma lem3517543 {_90724 B : Type'} (g : type686 B) (_37169 : type852 _90724 B) (u : B -> Prop) (f : B -> _90724) (t : B -> Prop) : (term2453 _90724 B g _37169 u f t) = (term2453 _90724 B g _37169 u f t).
Proof. exact (eq_refl (term2453 _90724 B g _37169 u f t)). Qed.
Lemma lem3517544 {_90724 B : Type'} (g : type686 B) (_37169 : type852 _90724 B) (u : B -> Prop) (f : B -> _90724) : (term2454 _90724 B g _37169 u f) = (term2454 _90724 B g _37169 u f).
Proof. exact (fun_ext (fun t : B -> Prop => @lem3517543 _90724 B g _37169 u f t)). Qed.
Lemma lem3517545 {B : Type'} : (@all (B -> Prop)) = (@all (B -> Prop)).
Proof. exact (eq_refl (@all (B -> Prop))). Qed.
Lemma lem3517546 {_90724 B : Type'} (g : type686 B) (_37169 : type852 _90724 B) (u : B -> Prop) (f : B -> _90724) : (term2455 _90724 B g _37169 u f) = (term2455 _90724 B g _37169 u f).
Proof. exact (MK_COMB (@lem3517545 B) (@lem3517544 _90724 B g _37169 u f)). Qed.
Lemma lem3517555 {B : Type'} (g : type686 B) : (term42 B g) = (term42 B g).
Proof. exact (eq_refl (term42 B g)). Qed.
Lemma lem3517556 {_90724 B : Type'} (g : type686 B) (_37169 : type852 _90724 B) (u : B -> Prop) (f : B -> _90724) : (term2456 _90724 B g _37169 u f) = (term2456 _90724 B g _37169 u f).
Proof. exact (MK_COMB (@lem3517555 B g) (@lem3517546 _90724 B g _37169 u f)). Qed.
Lemma lem3517557 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem3517558 {_90724 B : Type'} (g : type686 B) (_37169 : type852 _90724 B) (u : B -> Prop) (f : B -> _90724) : (term2457 _90724 B g _37169 u f) = (term2457 _90724 B g _37169 u f).
Proof. exact (MK_COMB (@lem3517557) (@lem3517556 _90724 B g _37169 u f)). Qed.
Lemma lem3517559 {_90724 B : Type'} (_37169 : type852 _90724 B) (u : B -> Prop) (f : B -> _90724) (g : type686 B) : (term2458 _90724 B _37169 u f g) = (term2458 _90724 B _37169 u f g).
Proof. exact (MK_COMB (@lem3517558 _90724 B g _37169 u f) (@lem3517514 _90724 B f g)). Qed.
Lemma lem3517560 {_90724 B : Type'} (_37169 : type852 _90724 B) (u : B -> Prop) (f : B -> _90724) : (term2459 _90724 B _37169 u f) = (term2459 _90724 B _37169 u f).
Proof. exact (fun_ext (fun g : type686 B => @lem3517559 _90724 B _37169 u f g)). Qed.
Lemma lem3517561 {B : Type'} : (@all ((B -> Prop) -> Prop)) = (@all ((B -> Prop) -> Prop)).
Proof. exact (eq_refl (@all ((B -> Prop) -> Prop))). Qed.
Lemma lem3517562 {_90724 B : Type'} (_37169 : type852 _90724 B) (u : B -> Prop) (f : B -> _90724) : (term2460 _90724 B _37169 u f) = (term2460 _90724 B _37169 u f).
Proof. exact (MK_COMB (@lem3517561 B) (@lem3517560 _90724 B _37169 u f)). Qed.
Lemma lem3517563 {_90724 B : Type'} (_37169 : type852 _90724 B) (u : B -> Prop) : (term2461 _90724 B _37169 u) = (term2461 _90724 B _37169 u).
Proof. exact (fun_ext (fun f : B -> _90724 => @lem3517562 _90724 B _37169 u f)). Qed.
Lemma lem3517564 {_90724 B : Type'} : (@all (B -> _90724)) = (@all (B -> _90724)).
Proof. exact (eq_refl (@all (B -> _90724))). Qed.
Lemma lem3517565 {_90724 B : Type'} (_37169 : type852 _90724 B) (u : B -> Prop) : (term2462 _90724 B _37169 u) = (term2462 _90724 B _37169 u).
Proof. exact (MK_COMB (@lem3517564 _90724 B) (@lem3517563 _90724 B _37169 u)). Qed.
Lemma lem3517566 {_90724 B : Type'} (_37169 : type852 _90724 B) : (term2463 _90724 B _37169) = (term2463 _90724 B _37169).
Proof. exact (fun_ext (fun u : B -> Prop => @lem3517565 _90724 B _37169 u)). Qed.
Lemma lem3517567 {B : Type'} : (@all (B -> Prop)) = (@all (B -> Prop)).
Proof. exact (eq_refl (@all (B -> Prop))). Qed.
Lemma lem3517568 {_90724 B : Type'} (_37169 : type852 _90724 B) : (term2464 _90724 B _37169) = (term2464 _90724 B _37169).
Proof. exact (MK_COMB (@lem3517567 B) (@lem3517566 _90724 B _37169)). Qed.
Lemma lem3517569 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem3517570 {_90724 B : Type'} (_37169 : type852 _90724 B) : (term2465 _90724 B _37169) = (term2465 _90724 B _37169).
Proof. exact (MK_COMB (@lem3517569) (@lem3517568 _90724 B _37169)). Qed.
Lemma lem3517571 {_90724 A B : Type'} (_37169 : type852 _90724 B) (_37170 : type235 _90724 A) (_37171 : type171 A B) (h1 : _37171 = (term2742 A B)) : (term2639 _90724 A B _37169 _37170) = (term2769 _90724 A B _37169 _37170 _37171).
Proof. exact (MK_COMB (@lem3517570 _90724 B _37169) (@lem3517495 _90724 A B _37170 _37171 h1)). Qed.
Lemma lem3517590 {A B : Type'} (f : A -> B) (g : type686 A) : ((term49 A B f g) = (term50 A B f g)) = ((term49 A B f g) = (term50 A B f g)).
Proof. exact (eq_refl ((term49 A B f g) = (term50 A B f g))). Qed.
Lemma lem3517619 {A B : Type'} (g : type686 A) (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) (t : A -> Prop) : (term2081 A B g _37163 u f t) = (term2081 A B g _37163 u f t).
Proof. exact (eq_refl (term2081 A B g _37163 u f t)). Qed.
Lemma lem3517620 {A B : Type'} (g : type686 A) (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) : (term2082 A B g _37163 u f) = (term2082 A B g _37163 u f).
Proof. exact (fun_ext (fun t : A -> Prop => @lem3517619 A B g _37163 u f t)). Qed.
Lemma lem3517621 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem3517622 {A B : Type'} (g : type686 A) (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) : (term2083 A B g _37163 u f) = (term2083 A B g _37163 u f).
Proof. exact (MK_COMB (@lem3517621 A) (@lem3517620 A B g _37163 u f)). Qed.
Lemma lem3517631 {A : Type'} (g : type686 A) : (term42 A g) = (term42 A g).
Proof. exact (eq_refl (term42 A g)). Qed.
Lemma lem3517632 {A B : Type'} (g : type686 A) (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) : (term2084 A B g _37163 u f) = (term2084 A B g _37163 u f).
Proof. exact (MK_COMB (@lem3517631 A g) (@lem3517622 A B g _37163 u f)). Qed.
Lemma lem3517633 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem3517634 {A B : Type'} (g : type686 A) (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) : (term2085 A B g _37163 u f) = (term2085 A B g _37163 u f).
Proof. exact (MK_COMB (@lem3517633) (@lem3517632 A B g _37163 u f)). Qed.
Lemma lem3517635 {A B : Type'} (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) (g : type686 A) : (term2086 A B _37163 u f g) = (term2086 A B _37163 u f g).
Proof. exact (MK_COMB (@lem3517634 A B g _37163 u f) (@lem3517590 A B f g)). Qed.
Lemma lem3517636 {A B : Type'} (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) : (term2088 A B _37163 u f) = (term2088 A B _37163 u f).
Proof. exact (fun_ext (fun g : type686 A => @lem3517635 A B _37163 u f g)). Qed.
Lemma lem3517637 {A : Type'} : (@all ((A -> Prop) -> Prop)) = (@all ((A -> Prop) -> Prop)).
Proof. exact (eq_refl (@all ((A -> Prop) -> Prop))). Qed.
Lemma lem3517638 {A B : Type'} (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) : (term2089 A B _37163 u f) = (term2089 A B _37163 u f).
Proof. exact (MK_COMB (@lem3517637 A) (@lem3517636 A B _37163 u f)). Qed.
Lemma lem3517639 {A B : Type'} (_37163 : type627 A B) (u : A -> Prop) : (term2091 A B _37163 u) = (term2091 A B _37163 u).
Proof. exact (fun_ext (fun f : A -> B => @lem3517638 A B _37163 u f)). Qed.
Lemma lem3517640 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem3517641 {A B : Type'} (_37163 : type627 A B) (u : A -> Prop) : (term2092 A B _37163 u) = (term2092 A B _37163 u).
Proof. exact (MK_COMB (@lem3517640 A B) (@lem3517639 A B _37163 u)). Qed.
Lemma lem3517642 {A B : Type'} (_37163 : type627 A B) : (term2094 A B _37163) = (term2094 A B _37163).
Proof. exact (fun_ext (fun u : A -> Prop => @lem3517641 A B _37163 u)). Qed.
Lemma lem3517643 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem3517644 {A B : Type'} (_37163 : type627 A B) : (term2095 A B _37163) = (term2095 A B _37163).
Proof. exact (MK_COMB (@lem3517643 A) (@lem3517642 A B _37163)). Qed.
Lemma lem3517645 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem3517646 {A B : Type'} (_37163 : type627 A B) : (term2096 A B _37163) = (term2096 A B _37163).
Proof. exact (MK_COMB (@lem3517645) (@lem3517644 A B _37163)). Qed.
Lemma lem3517647 {_90724 A B : Type'} (_37163 : type627 A B) (_37169 : type852 _90724 B) (_37170 : type235 _90724 A) (_37171 : type171 A B) (h1 : _37171 = (term2742 A B)) : (term2640 _90724 A B _37163 _37169 _37170) = (term2770 _90724 A B _37163 _37169 _37170 _37171).
Proof. exact (MK_COMB (@lem3517646 A B _37163) (@lem3517571 _90724 A B _37169 _37170 _37171 h1)). Qed.
Lemma lem3517666 {_90724 A : Type'} (f : A -> _90724) (g : type686 A) : ((term2056 _90724 A f g) = (term2057 _90724 A f g)) = ((term2056 _90724 A f g) = (term2057 _90724 A f g)).
Proof. exact (eq_refl ((term2056 _90724 A f g) = (term2057 _90724 A f g))). Qed.
Lemma lem3517695 {_90724 A : Type'} (g : type686 A) (_37168 : type852 _90724 A) (u : A -> Prop) (f : A -> _90724) (t : A -> Prop) : (term2453 _90724 A g _37168 u f t) = (term2453 _90724 A g _37168 u f t).
Proof. exact (eq_refl (term2453 _90724 A g _37168 u f t)). Qed.
Lemma lem3517696 {_90724 A : Type'} (g : type686 A) (_37168 : type852 _90724 A) (u : A -> Prop) (f : A -> _90724) : (term2454 _90724 A g _37168 u f) = (term2454 _90724 A g _37168 u f).
Proof. exact (fun_ext (fun t : A -> Prop => @lem3517695 _90724 A g _37168 u f t)). Qed.
Lemma lem3517697 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem3517698 {_90724 A : Type'} (g : type686 A) (_37168 : type852 _90724 A) (u : A -> Prop) (f : A -> _90724) : (term2455 _90724 A g _37168 u f) = (term2455 _90724 A g _37168 u f).
Proof. exact (MK_COMB (@lem3517697 A) (@lem3517696 _90724 A g _37168 u f)). Qed.
Lemma lem3517707 {A : Type'} (g : type686 A) : (term42 A g) = (term42 A g).
Proof. exact (eq_refl (term42 A g)). Qed.
Lemma lem3517708 {_90724 A : Type'} (g : type686 A) (_37168 : type852 _90724 A) (u : A -> Prop) (f : A -> _90724) : (term2456 _90724 A g _37168 u f) = (term2456 _90724 A g _37168 u f).
Proof. exact (MK_COMB (@lem3517707 A g) (@lem3517698 _90724 A g _37168 u f)). Qed.
Lemma lem3517709 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem3517710 {_90724 A : Type'} (g : type686 A) (_37168 : type852 _90724 A) (u : A -> Prop) (f : A -> _90724) : (term2457 _90724 A g _37168 u f) = (term2457 _90724 A g _37168 u f).
Proof. exact (MK_COMB (@lem3517709) (@lem3517708 _90724 A g _37168 u f)). Qed.
Lemma lem3517711 {_90724 A : Type'} (_37168 : type852 _90724 A) (u : A -> Prop) (f : A -> _90724) (g : type686 A) : (term2458 _90724 A _37168 u f g) = (term2458 _90724 A _37168 u f g).
Proof. exact (MK_COMB (@lem3517710 _90724 A g _37168 u f) (@lem3517666 _90724 A f g)). Qed.
Lemma lem3517712 {_90724 A : Type'} (_37168 : type852 _90724 A) (u : A -> Prop) (f : A -> _90724) : (term2459 _90724 A _37168 u f) = (term2459 _90724 A _37168 u f).
Proof. exact (fun_ext (fun g : type686 A => @lem3517711 _90724 A _37168 u f g)). Qed.
Lemma lem3517713 {A : Type'} : (@all ((A -> Prop) -> Prop)) = (@all ((A -> Prop) -> Prop)).
Proof. exact (eq_refl (@all ((A -> Prop) -> Prop))). Qed.
Lemma lem3517714 {_90724 A : Type'} (_37168 : type852 _90724 A) (u : A -> Prop) (f : A -> _90724) : (term2460 _90724 A _37168 u f) = (term2460 _90724 A _37168 u f).
Proof. exact (MK_COMB (@lem3517713 A) (@lem3517712 _90724 A _37168 u f)). Qed.
Lemma lem3517715 {_90724 A : Type'} (_37168 : type852 _90724 A) (u : A -> Prop) : (term2461 _90724 A _37168 u) = (term2461 _90724 A _37168 u).
Proof. exact (fun_ext (fun f : A -> _90724 => @lem3517714 _90724 A _37168 u f)). Qed.
Lemma lem3517716 {_90724 A : Type'} : (@all (A -> _90724)) = (@all (A -> _90724)).
Proof. exact (eq_refl (@all (A -> _90724))). Qed.
Lemma lem3517717 {_90724 A : Type'} (_37168 : type852 _90724 A) (u : A -> Prop) : (term2462 _90724 A _37168 u) = (term2462 _90724 A _37168 u).
Proof. exact (MK_COMB (@lem3517716 _90724 A) (@lem3517715 _90724 A _37168 u)). Qed.
Lemma lem3517718 {_90724 A : Type'} (_37168 : type852 _90724 A) : (term2463 _90724 A _37168) = (term2463 _90724 A _37168).
Proof. exact (fun_ext (fun u : A -> Prop => @lem3517717 _90724 A _37168 u)). Qed.
Lemma lem3517719 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem3517720 {_90724 A : Type'} (_37168 : type852 _90724 A) : (term2464 _90724 A _37168) = (term2464 _90724 A _37168).
Proof. exact (MK_COMB (@lem3517719 A) (@lem3517718 _90724 A _37168)). Qed.
Lemma lem3517721 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem3517722 {_90724 A : Type'} (_37168 : type852 _90724 A) : (term2465 _90724 A _37168) = (term2465 _90724 A _37168).
Proof. exact (MK_COMB (@lem3517721) (@lem3517720 _90724 A _37168)). Qed.
Lemma lem3517723 {_90724 A B : Type'} (_37168 : type852 _90724 A) (_37163 : type627 A B) (_37169 : type852 _90724 B) (_37170 : type235 _90724 A) (_37171 : type171 A B) (h1 : _37171 = (term2742 A B)) : (term2641 _90724 A B _37168 _37163 _37169 _37170) = (term2771 _90724 A B _37168 _37163 _37169 _37170 _37171).
Proof. exact (MK_COMB (@lem3517722 _90724 A _37168) (@lem3517647 _90724 A B _37163 _37169 _37170 _37171 h1)). Qed.
Lemma lem3517742 {_90715 A : Type'} (f : type1413 _90715 A) (g : type686 _90715) : ((term2099 _90715 A f g) = (term2100 _90715 A f g)) = ((term2099 _90715 A f g) = (term2100 _90715 A f g)).
Proof. exact (eq_refl ((term2099 _90715 A f g) = (term2100 _90715 A f g))). Qed.
Lemma lem3517771 {_90715 A : Type'} (g : type686 _90715) (_37167 : type616 _90715 A) (u : _90715 -> Prop) (f : type1413 _90715 A) (t : _90715 -> Prop) : (term2339 _90715 A g _37167 u f t) = (term2339 _90715 A g _37167 u f t).
Proof. exact (eq_refl (term2339 _90715 A g _37167 u f t)). Qed.
Lemma lem3517772 {_90715 A : Type'} (g : type686 _90715) (_37167 : type616 _90715 A) (u : _90715 -> Prop) (f : type1413 _90715 A) : (term2340 _90715 A g _37167 u f) = (term2340 _90715 A g _37167 u f).
Proof. exact (fun_ext (fun t : _90715 -> Prop => @lem3517771 _90715 A g _37167 u f t)). Qed.
Lemma lem3517773 {_90715 : Type'} : (@all (_90715 -> Prop)) = (@all (_90715 -> Prop)).
Proof. exact (eq_refl (@all (_90715 -> Prop))). Qed.
Lemma lem3517774 {_90715 A : Type'} (g : type686 _90715) (_37167 : type616 _90715 A) (u : _90715 -> Prop) (f : type1413 _90715 A) : (term2341 _90715 A g _37167 u f) = (term2341 _90715 A g _37167 u f).
Proof. exact (MK_COMB (@lem3517773 _90715) (@lem3517772 _90715 A g _37167 u f)). Qed.
Lemma lem3517783 {_90715 : Type'} (g : type686 _90715) : (term42 _90715 g) = (term42 _90715 g).
Proof. exact (eq_refl (term42 _90715 g)). Qed.
Lemma lem3517784 {_90715 A : Type'} (g : type686 _90715) (_37167 : type616 _90715 A) (u : _90715 -> Prop) (f : type1413 _90715 A) : (term2342 _90715 A g _37167 u f) = (term2342 _90715 A g _37167 u f).
Proof. exact (MK_COMB (@lem3517783 _90715 g) (@lem3517774 _90715 A g _37167 u f)). Qed.
Lemma lem3517785 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem3517786 {_90715 A : Type'} (g : type686 _90715) (_37167 : type616 _90715 A) (u : _90715 -> Prop) (f : type1413 _90715 A) : (term2343 _90715 A g _37167 u f) = (term2343 _90715 A g _37167 u f).
Proof. exact (MK_COMB (@lem3517785) (@lem3517784 _90715 A g _37167 u f)). Qed.
Lemma lem3517787 {_90715 A : Type'} (_37167 : type616 _90715 A) (u : _90715 -> Prop) (f : type1413 _90715 A) (g : type686 _90715) : (term2344 _90715 A _37167 u f g) = (term2344 _90715 A _37167 u f g).
Proof. exact (MK_COMB (@lem3517786 _90715 A g _37167 u f) (@lem3517742 _90715 A f g)). Qed.
Lemma lem3517788 {_90715 A : Type'} (_37167 : type616 _90715 A) (u : _90715 -> Prop) (f : type1413 _90715 A) : (term2345 _90715 A _37167 u f) = (term2345 _90715 A _37167 u f).
Proof. exact (fun_ext (fun g : type686 _90715 => @lem3517787 _90715 A _37167 u f g)). Qed.
Lemma lem3517789 {_90715 : Type'} : (@all ((_90715 -> Prop) -> Prop)) = (@all ((_90715 -> Prop) -> Prop)).
Proof. exact (eq_refl (@all ((_90715 -> Prop) -> Prop))). Qed.
Lemma lem3517790 {_90715 A : Type'} (_37167 : type616 _90715 A) (u : _90715 -> Prop) (f : type1413 _90715 A) : (term2346 _90715 A _37167 u f) = (term2346 _90715 A _37167 u f).
Proof. exact (MK_COMB (@lem3517789 _90715) (@lem3517788 _90715 A _37167 u f)). Qed.
Lemma lem3517791 {_90715 A : Type'} (_37167 : type616 _90715 A) (u : _90715 -> Prop) : (term2347 _90715 A _37167 u) = (term2347 _90715 A _37167 u).
Proof. exact (fun_ext (fun f : type1413 _90715 A => @lem3517790 _90715 A _37167 u f)). Qed.
Lemma lem3517792 {_90715 A : Type'} : (@all (_90715 -> A -> Prop)) = (@all (_90715 -> A -> Prop)).
Proof. exact (eq_refl (@all (_90715 -> A -> Prop))). Qed.
Lemma lem3517793 {_90715 A : Type'} (_37167 : type616 _90715 A) (u : _90715 -> Prop) : (term2348 _90715 A _37167 u) = (term2348 _90715 A _37167 u).
Proof. exact (MK_COMB (@lem3517792 _90715 A) (@lem3517791 _90715 A _37167 u)). Qed.
Lemma lem3517794 {_90715 A : Type'} (_37167 : type616 _90715 A) : (term2349 _90715 A _37167) = (term2349 _90715 A _37167).
Proof. exact (fun_ext (fun u : _90715 -> Prop => @lem3517793 _90715 A _37167 u)). Qed.
Lemma lem3517795 {_90715 : Type'} : (@all (_90715 -> Prop)) = (@all (_90715 -> Prop)).
Proof. exact (eq_refl (@all (_90715 -> Prop))). Qed.
Lemma lem3517796 {_90715 A : Type'} (_37167 : type616 _90715 A) : (term2350 _90715 A _37167) = (term2350 _90715 A _37167).
Proof. exact (MK_COMB (@lem3517795 _90715) (@lem3517794 _90715 A _37167)). Qed.
Lemma lem3517797 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem3517798 {_90715 A : Type'} (_37167 : type616 _90715 A) : (term2351 _90715 A _37167) = (term2351 _90715 A _37167).
Proof. exact (MK_COMB (@lem3517797) (@lem3517796 _90715 A _37167)). Qed.
Lemma lem3517799 {_90715 _90724 A B : Type'} (_37167 : type616 _90715 A) (_37168 : type852 _90724 A) (_37163 : type627 A B) (_37169 : type852 _90724 B) (_37170 : type235 _90724 A) (_37171 : type171 A B) (h1 : _37171 = (term2742 A B)) : (term2642 _90715 _90724 A B _37167 _37168 _37163 _37169 _37170) = (term2772 _90715 _90724 A B _37167 _37168 _37163 _37169 _37170 _37171).
Proof. exact (MK_COMB (@lem3517798 _90715 A _37167) (@lem3517723 _90724 A B _37168 _37163 _37169 _37170 _37171 h1)). Qed.
Lemma lem3517818 {_90715 B : Type'} (f : _90715 -> B) (g : type686 _90715) : ((term49 _90715 B f g) = (term50 _90715 B f g)) = ((term49 _90715 B f g) = (term50 _90715 B f g)).
Proof. exact (eq_refl ((term49 _90715 B f g) = (term50 _90715 B f g))). Qed.
Lemma lem3517847 {_90715 B : Type'} (g : type686 _90715) (_37166 : type627 _90715 B) (u : _90715 -> Prop) (f : _90715 -> B) (t : _90715 -> Prop) : (term2081 _90715 B g _37166 u f t) = (term2081 _90715 B g _37166 u f t).
Proof. exact (eq_refl (term2081 _90715 B g _37166 u f t)). Qed.
Lemma lem3517848 {_90715 B : Type'} (g : type686 _90715) (_37166 : type627 _90715 B) (u : _90715 -> Prop) (f : _90715 -> B) : (term2082 _90715 B g _37166 u f) = (term2082 _90715 B g _37166 u f).
Proof. exact (fun_ext (fun t : _90715 -> Prop => @lem3517847 _90715 B g _37166 u f t)). Qed.
Lemma lem3517849 {_90715 : Type'} : (@all (_90715 -> Prop)) = (@all (_90715 -> Prop)).
Proof. exact (eq_refl (@all (_90715 -> Prop))). Qed.
Lemma lem3517850 {_90715 B : Type'} (g : type686 _90715) (_37166 : type627 _90715 B) (u : _90715 -> Prop) (f : _90715 -> B) : (term2083 _90715 B g _37166 u f) = (term2083 _90715 B g _37166 u f).
Proof. exact (MK_COMB (@lem3517849 _90715) (@lem3517848 _90715 B g _37166 u f)). Qed.
Lemma lem3517859 {_90715 : Type'} (g : type686 _90715) : (term42 _90715 g) = (term42 _90715 g).
Proof. exact (eq_refl (term42 _90715 g)). Qed.
Lemma lem3517860 {_90715 B : Type'} (g : type686 _90715) (_37166 : type627 _90715 B) (u : _90715 -> Prop) (f : _90715 -> B) : (term2084 _90715 B g _37166 u f) = (term2084 _90715 B g _37166 u f).
Proof. exact (MK_COMB (@lem3517859 _90715 g) (@lem3517850 _90715 B g _37166 u f)). Qed.
Lemma lem3517861 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem3517862 {_90715 B : Type'} (g : type686 _90715) (_37166 : type627 _90715 B) (u : _90715 -> Prop) (f : _90715 -> B) : (term2085 _90715 B g _37166 u f) = (term2085 _90715 B g _37166 u f).
Proof. exact (MK_COMB (@lem3517861) (@lem3517860 _90715 B g _37166 u f)). Qed.
Lemma lem3517863 {_90715 B : Type'} (_37166 : type627 _90715 B) (u : _90715 -> Prop) (f : _90715 -> B) (g : type686 _90715) : (term2086 _90715 B _37166 u f g) = (term2086 _90715 B _37166 u f g).
Proof. exact (MK_COMB (@lem3517862 _90715 B g _37166 u f) (@lem3517818 _90715 B f g)). Qed.
Lemma lem3517864 {_90715 B : Type'} (_37166 : type627 _90715 B) (u : _90715 -> Prop) (f : _90715 -> B) : (term2088 _90715 B _37166 u f) = (term2088 _90715 B _37166 u f).
Proof. exact (fun_ext (fun g : type686 _90715 => @lem3517863 _90715 B _37166 u f g)). Qed.
Lemma lem3517865 {_90715 : Type'} : (@all ((_90715 -> Prop) -> Prop)) = (@all ((_90715 -> Prop) -> Prop)).
Proof. exact (eq_refl (@all ((_90715 -> Prop) -> Prop))). Qed.
Lemma lem3517866 {_90715 B : Type'} (_37166 : type627 _90715 B) (u : _90715 -> Prop) (f : _90715 -> B) : (term2089 _90715 B _37166 u f) = (term2089 _90715 B _37166 u f).
Proof. exact (MK_COMB (@lem3517865 _90715) (@lem3517864 _90715 B _37166 u f)). Qed.
Lemma lem3517867 {_90715 B : Type'} (_37166 : type627 _90715 B) (u : _90715 -> Prop) : (term2091 _90715 B _37166 u) = (term2091 _90715 B _37166 u).
Proof. exact (fun_ext (fun f : _90715 -> B => @lem3517866 _90715 B _37166 u f)). Qed.
Lemma lem3517868 {_90715 B : Type'} : (@all (_90715 -> B)) = (@all (_90715 -> B)).
Proof. exact (eq_refl (@all (_90715 -> B))). Qed.
Lemma lem3517869 {_90715 B : Type'} (_37166 : type627 _90715 B) (u : _90715 -> Prop) : (term2092 _90715 B _37166 u) = (term2092 _90715 B _37166 u).
Proof. exact (MK_COMB (@lem3517868 _90715 B) (@lem3517867 _90715 B _37166 u)). Qed.
Lemma lem3517870 {_90715 B : Type'} (_37166 : type627 _90715 B) : (term2094 _90715 B _37166) = (term2094 _90715 B _37166).
Proof. exact (fun_ext (fun u : _90715 -> Prop => @lem3517869 _90715 B _37166 u)). Qed.
Lemma lem3517871 {_90715 : Type'} : (@all (_90715 -> Prop)) = (@all (_90715 -> Prop)).
Proof. exact (eq_refl (@all (_90715 -> Prop))). Qed.
Lemma lem3517872 {_90715 B : Type'} (_37166 : type627 _90715 B) : (term2095 _90715 B _37166) = (term2095 _90715 B _37166).
Proof. exact (MK_COMB (@lem3517871 _90715) (@lem3517870 _90715 B _37166)). Qed.
Lemma lem3517873 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem3517874 {_90715 B : Type'} (_37166 : type627 _90715 B) : (term2096 _90715 B _37166) = (term2096 _90715 B _37166).
Proof. exact (MK_COMB (@lem3517873) (@lem3517872 _90715 B _37166)). Qed.
Lemma lem3517875 {_90715 _90724 A B : Type'} (_37166 : type627 _90715 B) (_37167 : type616 _90715 A) (_37168 : type852 _90724 A) (_37163 : type627 A B) (_37169 : type852 _90724 B) (_37170 : type235 _90724 A) (_37171 : type171 A B) (h1 : _37171 = (term2742 A B)) : (term2643 _90715 _90724 A B _37166 _37167 _37168 _37163 _37169 _37170) = (term2773 _90715 _90724 A B _37166 _37167 _37168 _37163 _37169 _37170 _37171).
Proof. exact (MK_COMB (@lem3517874 _90715 B _37166) (@lem3517799 _90715 _90724 A B _37167 _37168 _37163 _37169 _37170 _37171 h1)). Qed.
Lemma lem3517894 {_90715 A : Type'} (f : _90715 -> A) (g : type686 _90715) : ((term49 _90715 A f g) = (term50 _90715 A f g)) = ((term49 _90715 A f g) = (term50 _90715 A f g)).
Proof. exact (eq_refl ((term49 _90715 A f g) = (term50 _90715 A f g))). Qed.
Lemma lem3517923 {_90715 A : Type'} (g : type686 _90715) (_37165 : type627 _90715 A) (u : _90715 -> Prop) (f : _90715 -> A) (t : _90715 -> Prop) : (term2081 _90715 A g _37165 u f t) = (term2081 _90715 A g _37165 u f t).
Proof. exact (eq_refl (term2081 _90715 A g _37165 u f t)). Qed.
Lemma lem3517924 {_90715 A : Type'} (g : type686 _90715) (_37165 : type627 _90715 A) (u : _90715 -> Prop) (f : _90715 -> A) : (term2082 _90715 A g _37165 u f) = (term2082 _90715 A g _37165 u f).
Proof. exact (fun_ext (fun t : _90715 -> Prop => @lem3517923 _90715 A g _37165 u f t)). Qed.
Lemma lem3517925 {_90715 : Type'} : (@all (_90715 -> Prop)) = (@all (_90715 -> Prop)).
Proof. exact (eq_refl (@all (_90715 -> Prop))). Qed.
Lemma lem3517926 {_90715 A : Type'} (g : type686 _90715) (_37165 : type627 _90715 A) (u : _90715 -> Prop) (f : _90715 -> A) : (term2083 _90715 A g _37165 u f) = (term2083 _90715 A g _37165 u f).
Proof. exact (MK_COMB (@lem3517925 _90715) (@lem3517924 _90715 A g _37165 u f)). Qed.
Lemma lem3517935 {_90715 : Type'} (g : type686 _90715) : (term42 _90715 g) = (term42 _90715 g).
Proof. exact (eq_refl (term42 _90715 g)). Qed.
Lemma lem3517936 {_90715 A : Type'} (g : type686 _90715) (_37165 : type627 _90715 A) (u : _90715 -> Prop) (f : _90715 -> A) : (term2084 _90715 A g _37165 u f) = (term2084 _90715 A g _37165 u f).
Proof. exact (MK_COMB (@lem3517935 _90715 g) (@lem3517926 _90715 A g _37165 u f)). Qed.
Lemma lem3517937 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem3517938 {_90715 A : Type'} (g : type686 _90715) (_37165 : type627 _90715 A) (u : _90715 -> Prop) (f : _90715 -> A) : (term2085 _90715 A g _37165 u f) = (term2085 _90715 A g _37165 u f).
Proof. exact (MK_COMB (@lem3517937) (@lem3517936 _90715 A g _37165 u f)). Qed.
Lemma lem3517939 {_90715 A : Type'} (_37165 : type627 _90715 A) (u : _90715 -> Prop) (f : _90715 -> A) (g : type686 _90715) : (term2086 _90715 A _37165 u f g) = (term2086 _90715 A _37165 u f g).
Proof. exact (MK_COMB (@lem3517938 _90715 A g _37165 u f) (@lem3517894 _90715 A f g)). Qed.
Lemma lem3517940 {_90715 A : Type'} (_37165 : type627 _90715 A) (u : _90715 -> Prop) (f : _90715 -> A) : (term2088 _90715 A _37165 u f) = (term2088 _90715 A _37165 u f).
Proof. exact (fun_ext (fun g : type686 _90715 => @lem3517939 _90715 A _37165 u f g)). Qed.
Lemma lem3517941 {_90715 : Type'} : (@all ((_90715 -> Prop) -> Prop)) = (@all ((_90715 -> Prop) -> Prop)).
Proof. exact (eq_refl (@all ((_90715 -> Prop) -> Prop))). Qed.
Lemma lem3517942 {_90715 A : Type'} (_37165 : type627 _90715 A) (u : _90715 -> Prop) (f : _90715 -> A) : (term2089 _90715 A _37165 u f) = (term2089 _90715 A _37165 u f).
Proof. exact (MK_COMB (@lem3517941 _90715) (@lem3517940 _90715 A _37165 u f)). Qed.
Lemma lem3517943 {_90715 A : Type'} (_37165 : type627 _90715 A) (u : _90715 -> Prop) : (term2091 _90715 A _37165 u) = (term2091 _90715 A _37165 u).
Proof. exact (fun_ext (fun f : _90715 -> A => @lem3517942 _90715 A _37165 u f)). Qed.
Lemma lem3517944 {_90715 A : Type'} : (@all (_90715 -> A)) = (@all (_90715 -> A)).
Proof. exact (eq_refl (@all (_90715 -> A))). Qed.
Lemma lem3517945 {_90715 A : Type'} (_37165 : type627 _90715 A) (u : _90715 -> Prop) : (term2092 _90715 A _37165 u) = (term2092 _90715 A _37165 u).
Proof. exact (MK_COMB (@lem3517944 _90715 A) (@lem3517943 _90715 A _37165 u)). Qed.
Lemma lem3517946 {_90715 A : Type'} (_37165 : type627 _90715 A) : (term2094 _90715 A _37165) = (term2094 _90715 A _37165).
Proof. exact (fun_ext (fun u : _90715 -> Prop => @lem3517945 _90715 A _37165 u)). Qed.
Lemma lem3517947 {_90715 : Type'} : (@all (_90715 -> Prop)) = (@all (_90715 -> Prop)).
Proof. exact (eq_refl (@all (_90715 -> Prop))). Qed.
Lemma lem3517948 {_90715 A : Type'} (_37165 : type627 _90715 A) : (term2095 _90715 A _37165) = (term2095 _90715 A _37165).
Proof. exact (MK_COMB (@lem3517947 _90715) (@lem3517946 _90715 A _37165)). Qed.
Lemma lem3517949 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem3517950 {_90715 A : Type'} (_37165 : type627 _90715 A) : (term2096 _90715 A _37165) = (term2096 _90715 A _37165).
Proof. exact (MK_COMB (@lem3517949) (@lem3517948 _90715 A _37165)). Qed.
Lemma lem3517951 {_90715 _90724 A B : Type'} (_37165 : type627 _90715 A) (_37166 : type627 _90715 B) (_37167 : type616 _90715 A) (_37168 : type852 _90724 A) (_37163 : type627 A B) (_37169 : type852 _90724 B) (_37170 : type235 _90724 A) (_37171 : type171 A B) (h1 : _37171 = (term2742 A B)) : (term2644 _90715 _90724 A B _37165 _37166 _37167 _37168 _37163 _37169 _37170) = (term2774 _90715 _90724 A B _37165 _37166 _37167 _37168 _37163 _37169 _37170 _37171).
Proof. exact (MK_COMB (@lem3517950 _90715 A _37165) (@lem3517875 _90715 _90724 A B _37166 _37167 _37168 _37163 _37169 _37170 _37171 h1)). Qed.
Lemma lem3517970 {_90715 _90724 : Type'} (f : _90715 -> _90724) (g : type686 _90715) : ((term49 _90715 _90724 f g) = (term50 _90715 _90724 f g)) = ((term49 _90715 _90724 f g) = (term50 _90715 _90724 f g)).
Proof. exact (eq_refl ((term49 _90715 _90724 f g) = (term50 _90715 _90724 f g))). Qed.
Lemma lem3517999 {_90715 _90724 : Type'} (g : type686 _90715) (_37164 : type627 _90715 _90724) (u : _90715 -> Prop) (f : _90715 -> _90724) (t : _90715 -> Prop) : (term2081 _90715 _90724 g _37164 u f t) = (term2081 _90715 _90724 g _37164 u f t).
Proof. exact (eq_refl (term2081 _90715 _90724 g _37164 u f t)). Qed.
Lemma lem3518000 {_90715 _90724 : Type'} (g : type686 _90715) (_37164 : type627 _90715 _90724) (u : _90715 -> Prop) (f : _90715 -> _90724) : (term2082 _90715 _90724 g _37164 u f) = (term2082 _90715 _90724 g _37164 u f).
Proof. exact (fun_ext (fun t : _90715 -> Prop => @lem3517999 _90715 _90724 g _37164 u f t)). Qed.
Lemma lem3518001 {_90715 : Type'} : (@all (_90715 -> Prop)) = (@all (_90715 -> Prop)).
Proof. exact (eq_refl (@all (_90715 -> Prop))). Qed.
Lemma lem3518002 {_90715 _90724 : Type'} (g : type686 _90715) (_37164 : type627 _90715 _90724) (u : _90715 -> Prop) (f : _90715 -> _90724) : (term2083 _90715 _90724 g _37164 u f) = (term2083 _90715 _90724 g _37164 u f).
Proof. exact (MK_COMB (@lem3518001 _90715) (@lem3518000 _90715 _90724 g _37164 u f)). Qed.
Lemma lem3518011 {_90715 : Type'} (g : type686 _90715) : (term42 _90715 g) = (term42 _90715 g).
Proof. exact (eq_refl (term42 _90715 g)). Qed.
Lemma lem3518012 {_90715 _90724 : Type'} (g : type686 _90715) (_37164 : type627 _90715 _90724) (u : _90715 -> Prop) (f : _90715 -> _90724) : (term2084 _90715 _90724 g _37164 u f) = (term2084 _90715 _90724 g _37164 u f).
Proof. exact (MK_COMB (@lem3518011 _90715 g) (@lem3518002 _90715 _90724 g _37164 u f)). Qed.
Lemma lem3518013 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem3518014 {_90715 _90724 : Type'} (g : type686 _90715) (_37164 : type627 _90715 _90724) (u : _90715 -> Prop) (f : _90715 -> _90724) : (term2085 _90715 _90724 g _37164 u f) = (term2085 _90715 _90724 g _37164 u f).
Proof. exact (MK_COMB (@lem3518013) (@lem3518012 _90715 _90724 g _37164 u f)). Qed.
Lemma lem3518015 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) (u : _90715 -> Prop) (f : _90715 -> _90724) (g : type686 _90715) : (term2086 _90715 _90724 _37164 u f g) = (term2086 _90715 _90724 _37164 u f g).
Proof. exact (MK_COMB (@lem3518014 _90715 _90724 g _37164 u f) (@lem3517970 _90715 _90724 f g)). Qed.
Lemma lem3518016 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) (u : _90715 -> Prop) (f : _90715 -> _90724) : (term2088 _90715 _90724 _37164 u f) = (term2088 _90715 _90724 _37164 u f).
Proof. exact (fun_ext (fun g : type686 _90715 => @lem3518015 _90715 _90724 _37164 u f g)). Qed.
Lemma lem3518017 {_90715 : Type'} : (@all ((_90715 -> Prop) -> Prop)) = (@all ((_90715 -> Prop) -> Prop)).
Proof. exact (eq_refl (@all ((_90715 -> Prop) -> Prop))). Qed.
Lemma lem3518018 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) (u : _90715 -> Prop) (f : _90715 -> _90724) : (term2089 _90715 _90724 _37164 u f) = (term2089 _90715 _90724 _37164 u f).
Proof. exact (MK_COMB (@lem3518017 _90715) (@lem3518016 _90715 _90724 _37164 u f)). Qed.
Lemma lem3518019 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) (u : _90715 -> Prop) : (term2091 _90715 _90724 _37164 u) = (term2091 _90715 _90724 _37164 u).
Proof. exact (fun_ext (fun f : _90715 -> _90724 => @lem3518018 _90715 _90724 _37164 u f)). Qed.
Lemma lem3518020 {_90715 _90724 : Type'} : (@all (_90715 -> _90724)) = (@all (_90715 -> _90724)).
Proof. exact (eq_refl (@all (_90715 -> _90724))). Qed.
Lemma lem3518021 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) (u : _90715 -> Prop) : (term2092 _90715 _90724 _37164 u) = (term2092 _90715 _90724 _37164 u).
Proof. exact (MK_COMB (@lem3518020 _90715 _90724) (@lem3518019 _90715 _90724 _37164 u)). Qed.
Lemma lem3518022 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) : (term2094 _90715 _90724 _37164) = (term2094 _90715 _90724 _37164).
Proof. exact (fun_ext (fun u : _90715 -> Prop => @lem3518021 _90715 _90724 _37164 u)). Qed.
Lemma lem3518023 {_90715 : Type'} : (@all (_90715 -> Prop)) = (@all (_90715 -> Prop)).
Proof. exact (eq_refl (@all (_90715 -> Prop))). Qed.
Lemma lem3518024 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) : (term2095 _90715 _90724 _37164) = (term2095 _90715 _90724 _37164).
Proof. exact (MK_COMB (@lem3518023 _90715) (@lem3518022 _90715 _90724 _37164)). Qed.
Lemma lem3518025 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem3518026 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) : (term2096 _90715 _90724 _37164) = (term2096 _90715 _90724 _37164).
Proof. exact (MK_COMB (@lem3518025) (@lem3518024 _90715 _90724 _37164)). Qed.
Lemma lem3518027 {_90715 _90724 A B : Type'} (_37164 : type627 _90715 _90724) (_37165 : type627 _90715 A) (_37166 : type627 _90715 B) (_37167 : type616 _90715 A) (_37168 : type852 _90724 A) (_37163 : type627 A B) (_37169 : type852 _90724 B) (_37170 : type235 _90724 A) (_37171 : type171 A B) (h1 : _37171 = (term2742 A B)) : (term2645 _90715 _90724 A B _37164 _37165 _37166 _37167 _37168 _37163 _37169 _37170) = (term2775 _90715 _90724 A B _37164 _37165 _37166 _37167 _37168 _37163 _37169 _37170 _37171).
Proof. exact (MK_COMB (@lem3518026 _90715 _90724 _37164) (@lem3517951 _90715 _90724 A B _37165 _37166 _37167 _37168 _37163 _37169 _37170 _37171 h1)). Qed.
Lemma lem3518046 {A B : Type'} (f : A -> B) (g : type686 A) : ((term49 A B f g) = (term50 A B f g)) = ((term49 A B f g) = (term50 A B f g)).
Proof. exact (eq_refl ((term49 A B f g) = (term50 A B f g))). Qed.
Lemma lem3518067 {A B : Type'} (g : type686 A) (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) (t : A -> Prop) : (term2124 A B g _37163 u f t) = (term2124 A B g _37163 u f t).
Proof. exact (eq_refl (term2124 A B g _37163 u f t)). Qed.
Lemma lem3518068 {A B : Type'} (g : type686 A) (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) : (term2125 A B g _37163 u f) = (term2125 A B g _37163 u f).
Proof. exact (fun_ext (fun t : A -> Prop => @lem3518067 A B g _37163 u f t)). Qed.
Lemma lem3518069 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem3518070 {A B : Type'} (g : type686 A) (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) : (term2126 A B g _37163 u f) = (term2126 A B g _37163 u f).
Proof. exact (MK_COMB (@lem3518069 A) (@lem3518068 A B g _37163 u f)). Qed.
Lemma lem3518083 {A : Type'} (g : type686 A) (t : A -> Prop) (u : A -> Prop) : (term2127 A g t u) = (term2127 A g t u).
Proof. exact (eq_refl (term2127 A g t u)). Qed.
Lemma lem3518084 {A : Type'} (g : type686 A) (u : A -> Prop) : (term2128 A g u) = (term2128 A g u).
Proof. exact (fun_ext (fun t : A -> Prop => @lem3518083 A g t u)). Qed.
Lemma lem3518085 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem3518086 {A : Type'} (g : type686 A) (u : A -> Prop) : (term2129 A g u) = (term2129 A g u).
Proof. exact (MK_COMB (@lem3518085 A) (@lem3518084 A g u)). Qed.
Lemma lem3518087 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem3518088 {A : Type'} (g : type686 A) (u : A -> Prop) : (term1946 A g u) = (term1946 A g u).
Proof. exact (MK_COMB (@lem3518087) (@lem3518086 A g u)). Qed.
Lemma lem3518089 {A B : Type'} (g : type686 A) (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) : (term2130 A B g _37163 u f) = (term2130 A B g _37163 u f).
Proof. exact (MK_COMB (@lem3518088 A g u) (@lem3518070 A B g _37163 u f)). Qed.
Lemma lem3518098 {A : Type'} (g : type686 A) : (term42 A g) = (term42 A g).
Proof. exact (eq_refl (term42 A g)). Qed.
Lemma lem3518099 {A B : Type'} (g : type686 A) (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) : (term2131 A B g _37163 u f) = (term2131 A B g _37163 u f).
Proof. exact (MK_COMB (@lem3518098 A g) (@lem3518089 A B g _37163 u f)). Qed.
Lemma lem3518100 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem3518101 {A B : Type'} (g : type686 A) (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) : (term2133 A B g _37163 u f) = (term2133 A B g _37163 u f).
Proof. exact (MK_COMB (@lem3518100) (@lem3518099 A B g _37163 u f)). Qed.
Lemma lem3518102 {A B : Type'} (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) (g : type686 A) : (term2134 A B _37163 u f g) = (term2134 A B _37163 u f g).
Proof. exact (MK_COMB (@lem3518101 A B g _37163 u f) (@lem3518046 A B f g)). Qed.
Lemma lem3518103 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem3518104 {A B : Type'} (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) (g : type686 A) : (term2135 A B _37163 u f g) = (term2135 A B _37163 u f g).
Proof. exact (MK_COMB (@lem3518103) (@lem3518102 A B _37163 u f g)). Qed.
Lemma lem3518105 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem3518106 {A B : Type'} (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) (g : type686 A) : (term2136 A B _37163 u f g) = (term2136 A B _37163 u f g).
Proof. exact (MK_COMB (@lem3518105) (@lem3518104 A B _37163 u f g)). Qed.
Lemma lem3518107 {_90715 _90724 A B : Type'} (u : A -> Prop) (f : A -> B) (g : type686 A) (_37164 : type627 _90715 _90724) (_37165 : type627 _90715 A) (_37166 : type627 _90715 B) (_37167 : type616 _90715 A) (_37168 : type852 _90724 A) (_37163 : type627 A B) (_37169 : type852 _90724 B) (_37170 : type235 _90724 A) (_37171 : type171 A B) (h1 : _37171 = (term2742 A B)) : (term2646 _90715 _90724 A B u f g _37164 _37165 _37166 _37167 _37168 _37163 _37169 _37170) = (term2776 _90715 _90724 A B u f g _37164 _37165 _37166 _37167 _37168 _37163 _37169 _37170 _37171).
Proof. exact (MK_COMB (@lem3518106 A B _37163 u f g) (@lem3518027 _90715 _90724 A B _37164 _37165 _37166 _37167 _37168 _37163 _37169 _37170 _37171 h1)). Qed.
Lemma lem3518108 {_90715 _90724 A B : Type'} (f : A -> B) (g : type686 A) (_37164 : type627 _90715 _90724) (_37165 : type627 _90715 A) (_37166 : type627 _90715 B) (_37167 : type616 _90715 A) (_37168 : type852 _90724 A) (_37163 : type627 A B) (_37169 : type852 _90724 B) (_37170 : type235 _90724 A) (_37171 : type171 A B) (h1 : _37171 = (term2742 A B)) : (term2647 _90715 _90724 A B f g _37164 _37165 _37166 _37167 _37168 _37163 _37169 _37170) = (term2777 _90715 _90724 A B f g _37164 _37165 _37166 _37167 _37168 _37163 _37169 _37170 _37171).
Proof. exact (fun_ext (fun u : A -> Prop => @lem3518107 _90715 _90724 A B u f g _37164 _37165 _37166 _37167 _37168 _37163 _37169 _37170 _37171 h1)). Qed.
Lemma lem3518109 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem3518110 {_90715 _90724 A B : Type'} (f : A -> B) (g : type686 A) (_37164 : type627 _90715 _90724) (_37165 : type627 _90715 A) (_37166 : type627 _90715 B) (_37167 : type616 _90715 A) (_37168 : type852 _90724 A) (_37163 : type627 A B) (_37169 : type852 _90724 B) (_37170 : type235 _90724 A) (_37171 : type171 A B) (h1 : _37171 = (term2742 A B)) : (term2648 _90715 _90724 A B f g _37164 _37165 _37166 _37167 _37168 _37163 _37169 _37170) = (term2778 _90715 _90724 A B f g _37164 _37165 _37166 _37167 _37168 _37163 _37169 _37170 _37171).
Proof. exact (MK_COMB (@lem3518109 A) (@lem3518108 _90715 _90724 A B f g _37164 _37165 _37166 _37167 _37168 _37163 _37169 _37170 _37171 h1)). Qed.
Lemma lem3518111 {_90715 _90724 A B : Type'} (g : type686 A) (_37164 : type627 _90715 _90724) (_37165 : type627 _90715 A) (_37166 : type627 _90715 B) (_37167 : type616 _90715 A) (_37168 : type852 _90724 A) (_37163 : type627 A B) (_37169 : type852 _90724 B) (_37170 : type235 _90724 A) (_37171 : type171 A B) (h1 : _37171 = (term2742 A B)) : (term2649 _90715 _90724 A B g _37164 _37165 _37166 _37167 _37168 _37163 _37169 _37170) = (term2779 _90715 _90724 A B g _37164 _37165 _37166 _37167 _37168 _37163 _37169 _37170 _37171).
Proof. exact (fun_ext (fun f : A -> B => @lem3518110 _90715 _90724 A B f g _37164 _37165 _37166 _37167 _37168 _37163 _37169 _37170 _37171 h1)). Qed.
Lemma lem3518112 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem3518113 {_90715 _90724 A B : Type'} (g : type686 A) (_37164 : type627 _90715 _90724) (_37165 : type627 _90715 A) (_37166 : type627 _90715 B) (_37167 : type616 _90715 A) (_37168 : type852 _90724 A) (_37163 : type627 A B) (_37169 : type852 _90724 B) (_37170 : type235 _90724 A) (_37171 : type171 A B) (h1 : _37171 = (term2742 A B)) : (term2650 _90715 _90724 A B g _37164 _37165 _37166 _37167 _37168 _37163 _37169 _37170) = (term2780 _90715 _90724 A B g _37164 _37165 _37166 _37167 _37168 _37163 _37169 _37170 _37171).
Proof. exact (MK_COMB (@lem3518112 A B) (@lem3518111 _90715 _90724 A B g _37164 _37165 _37166 _37167 _37168 _37163 _37169 _37170 _37171 h1)). Qed.
Lemma lem3518114 {_90715 _90724 A B : Type'} (_37164 : type627 _90715 _90724) (_37165 : type627 _90715 A) (_37166 : type627 _90715 B) (_37167 : type616 _90715 A) (_37168 : type852 _90724 A) (_37163 : type627 A B) (_37169 : type852 _90724 B) (_37170 : type235 _90724 A) (_37171 : type171 A B) (h1 : _37171 = (term2742 A B)) : (term2651 _90715 _90724 A B _37164 _37165 _37166 _37167 _37168 _37163 _37169 _37170) = (term2781 _90715 _90724 A B _37164 _37165 _37166 _37167 _37168 _37163 _37169 _37170 _37171).
Proof. exact (fun_ext (fun g : type686 A => @lem3518113 _90715 _90724 A B g _37164 _37165 _37166 _37167 _37168 _37163 _37169 _37170 _37171 h1)). Qed.
Lemma lem3518115 {A : Type'} : (@all ((A -> Prop) -> Prop)) = (@all ((A -> Prop) -> Prop)).
Proof. exact (eq_refl (@all ((A -> Prop) -> Prop))). Qed.
Lemma lem3518116 {_90715 _90724 A B : Type'} (_37164 : type627 _90715 _90724) (_37165 : type627 _90715 A) (_37166 : type627 _90715 B) (_37167 : type616 _90715 A) (_37168 : type852 _90724 A) (_37163 : type627 A B) (_37169 : type852 _90724 B) (_37170 : type235 _90724 A) (_37171 : type171 A B) (h1 : _37171 = (term2742 A B)) : (term2652 _90715 _90724 A B _37164 _37165 _37166 _37167 _37168 _37163 _37169 _37170) = (term2782 _90715 _90724 A B _37164 _37165 _37166 _37167 _37168 _37163 _37169 _37170 _37171).
Proof. exact (MK_COMB (@lem3518115 A) (@lem3518114 _90715 _90724 A B _37164 _37165 _37166 _37167 _37168 _37163 _37169 _37170 _37171 h1)). Qed.
Lemma lem3518141 {A B : Type'} (GEN_PVAR_85 : A) (u : A -> Prop) (f : A -> B) (t : A -> Prop) (x : A) : (term61 A B GEN_PVAR_85 u f t x) = (term61 A B GEN_PVAR_85 u f t x).
Proof. exact (eq_refl (term61 A B GEN_PVAR_85 u f t x)). Qed.
Lemma lem3518142 {A B : Type'} (GEN_PVAR_85 : A) (u : A -> Prop) (f : A -> B) (t : A -> Prop) : (term63 A B GEN_PVAR_85 u f t) = (term63 A B GEN_PVAR_85 u f t).
Proof. exact (fun_ext (fun x : A => @lem3518141 A B GEN_PVAR_85 u f t x)). Qed.
Lemma lem3518143 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem3518144 {A B : Type'} (GEN_PVAR_85 : A) (u : A -> Prop) (f : A -> B) (t : A -> Prop) : (term65 A B GEN_PVAR_85 u f t) = (term65 A B GEN_PVAR_85 u f t).
Proof. exact (MK_COMB (@lem3518143 A) (@lem3518142 A B GEN_PVAR_85 u f t)). Qed.
Lemma lem3518155 {A B : Type'} (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) (t : A -> Prop) (GEN_PVAR_85 : A) : (term2201 A B _37163 u f t GEN_PVAR_85) = (term2201 A B _37163 u f t GEN_PVAR_85).
Proof. exact (eq_refl (term2201 A B _37163 u f t GEN_PVAR_85)). Qed.
Lemma lem3518156 {A B : Type'} (_37163 : type627 A B) (GEN_PVAR_85 : A) (u : A -> Prop) (f : A -> B) (t : A -> Prop) : ((_37163 u f t GEN_PVAR_85) = (term65 A B GEN_PVAR_85 u f t)) = ((_37163 u f t GEN_PVAR_85) = (term65 A B GEN_PVAR_85 u f t)).
Proof. exact (MK_COMB (@lem3518155 A B _37163 u f t GEN_PVAR_85) (@lem3518144 A B GEN_PVAR_85 u f t)). Qed.
Lemma lem3518157 {A B : Type'} (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) (t : A -> Prop) : (term2203 A B _37163 u f t) = (term2203 A B _37163 u f t).
Proof. exact (fun_ext (fun GEN_PVAR_85 : A => @lem3518156 A B _37163 GEN_PVAR_85 u f t)). Qed.
Lemma lem3518158 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem3518159 {A B : Type'} (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) (t : A -> Prop) : (term2204 A B _37163 u f t) = (term2204 A B _37163 u f t).
Proof. exact (MK_COMB (@lem3518158 A) (@lem3518157 A B _37163 u f t)). Qed.
Lemma lem3518160 {A B : Type'} (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) : (term2205 A B _37163 u f) = (term2205 A B _37163 u f).
Proof. exact (fun_ext (fun t : A -> Prop => @lem3518159 A B _37163 u f t)). Qed.
Lemma lem3518161 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem3518162 {A B : Type'} (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) : (term2206 A B _37163 u f) = (term2206 A B _37163 u f).
Proof. exact (MK_COMB (@lem3518161 A) (@lem3518160 A B _37163 u f)). Qed.
Lemma lem3518163 {A B : Type'} (_37163 : type627 A B) (u : A -> Prop) : (term2207 A B _37163 u) = (term2207 A B _37163 u).
Proof. exact (fun_ext (fun f : A -> B => @lem3518162 A B _37163 u f)). Qed.
Lemma lem3518164 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem3518165 {A B : Type'} (_37163 : type627 A B) (u : A -> Prop) : (term2208 A B _37163 u) = (term2208 A B _37163 u).
Proof. exact (MK_COMB (@lem3518164 A B) (@lem3518163 A B _37163 u)). Qed.
Lemma lem3518166 {A B : Type'} (_37163 : type627 A B) : (term2209 A B _37163) = (term2209 A B _37163).
Proof. exact (fun_ext (fun u : A -> Prop => @lem3518165 A B _37163 u)). Qed.
Lemma lem3518167 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem3518168 {A B : Type'} (_37163 : type627 A B) : (term2210 A B _37163) = (term2210 A B _37163).
Proof. exact (MK_COMB (@lem3518167 A) (@lem3518166 A B _37163)). Qed.
Lemma lem3518169 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem3518170 {A B : Type'} (_37163 : type627 A B) : (term2211 A B _37163) = (term2211 A B _37163).
Proof. exact (MK_COMB (@lem3518169) (@lem3518168 A B _37163)). Qed.
Lemma lem3518171 {_90715 _90724 A B : Type'} (_37164 : type627 _90715 _90724) (_37165 : type627 _90715 A) (_37166 : type627 _90715 B) (_37167 : type616 _90715 A) (_37168 : type852 _90724 A) (_37163 : type627 A B) (_37169 : type852 _90724 B) (_37170 : type235 _90724 A) (_37171 : type171 A B) (h1 : _37171 = (term2742 A B)) : (term2653 _90715 _90724 A B _37164 _37165 _37166 _37167 _37168 _37163 _37169 _37170) = (term2783 _90715 _90724 A B _37164 _37165 _37166 _37167 _37168 _37163 _37169 _37170 _37171).
Proof. exact (MK_COMB (@lem3518170 A B _37163) (@lem3518116 _90715 _90724 A B _37164 _37165 _37166 _37167 _37168 _37163 _37169 _37170 _37171 h1)). Qed.
Lemma lem3518172 {_90715 _90724 A B : Type'} (_37164 : type627 _90715 _90724) (_37165 : type627 _90715 A) (_37166 : type627 _90715 B) (_37167 : type616 _90715 A) (_37168 : type852 _90724 A) (_37169 : type852 _90724 B) (_37170 : type235 _90724 A) (_37171 : type171 A B) (h1 : _37171 = (term2742 A B)) : (term2654 _90715 _90724 A B _37164 _37165 _37166 _37167 _37168 _37169 _37170) = (term2784 _90715 _90724 A B _37164 _37165 _37166 _37167 _37168 _37169 _37170 _37171).
Proof. exact (fun_ext (fun _37163 : type627 A B => @lem3518171 _90715 _90724 A B _37164 _37165 _37166 _37167 _37168 _37163 _37169 _37170 _37171 h1)). Qed.
Lemma lem3518173 {A B : Type'} : (@all ((A -> Prop) -> (A -> B) -> (A -> Prop) -> A -> Prop)) = (@all ((A -> Prop) -> (A -> B) -> (A -> Prop) -> A -> Prop)).
Proof. exact (eq_refl (@all ((A -> Prop) -> (A -> B) -> (A -> Prop) -> A -> Prop))). Qed.
Lemma lem3518174 {_90715 _90724 A B : Type'} (_37164 : type627 _90715 _90724) (_37165 : type627 _90715 A) (_37166 : type627 _90715 B) (_37167 : type616 _90715 A) (_37168 : type852 _90724 A) (_37169 : type852 _90724 B) (_37170 : type235 _90724 A) (_37171 : type171 A B) (h1 : _37171 = (term2742 A B)) : (term2655 _90715 _90724 A B _37164 _37165 _37166 _37167 _37168 _37169 _37170) = (term2785 _90715 _90724 A B _37164 _37165 _37166 _37167 _37168 _37169 _37170 _37171).
Proof. exact (MK_COMB (@lem3518173 A B) (@lem3518172 _90715 _90724 A B _37164 _37165 _37166 _37167 _37168 _37169 _37170 _37171 h1)). Qed.
Lemma lem3518199 {_90715 _90724 : Type'} (GEN_PVAR_84 : _90715) (u : _90715 -> Prop) (f : _90715 -> _90724) (t : _90715 -> Prop) (x : _90715) : (term61 _90715 _90724 GEN_PVAR_84 u f t x) = (term61 _90715 _90724 GEN_PVAR_84 u f t x).
Proof. exact (eq_refl (term61 _90715 _90724 GEN_PVAR_84 u f t x)). Qed.
Lemma lem3518200 {_90715 _90724 : Type'} (GEN_PVAR_84 : _90715) (u : _90715 -> Prop) (f : _90715 -> _90724) (t : _90715 -> Prop) : (term63 _90715 _90724 GEN_PVAR_84 u f t) = (term63 _90715 _90724 GEN_PVAR_84 u f t).
Proof. exact (fun_ext (fun x : _90715 => @lem3518199 _90715 _90724 GEN_PVAR_84 u f t x)). Qed.
Lemma lem3518201 {_90715 : Type'} : (@ex _90715) = (@ex _90715).
Proof. exact (eq_refl (@ex _90715)). Qed.
Lemma lem3518202 {_90715 _90724 : Type'} (GEN_PVAR_84 : _90715) (u : _90715 -> Prop) (f : _90715 -> _90724) (t : _90715 -> Prop) : (term65 _90715 _90724 GEN_PVAR_84 u f t) = (term65 _90715 _90724 GEN_PVAR_84 u f t).
Proof. exact (MK_COMB (@lem3518201 _90715) (@lem3518200 _90715 _90724 GEN_PVAR_84 u f t)). Qed.
Lemma lem3518213 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) (u : _90715 -> Prop) (f : _90715 -> _90724) (t : _90715 -> Prop) (GEN_PVAR_84 : _90715) : (term2201 _90715 _90724 _37164 u f t GEN_PVAR_84) = (term2201 _90715 _90724 _37164 u f t GEN_PVAR_84).
Proof. exact (eq_refl (term2201 _90715 _90724 _37164 u f t GEN_PVAR_84)). Qed.
Lemma lem3518214 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) (GEN_PVAR_84 : _90715) (u : _90715 -> Prop) (f : _90715 -> _90724) (t : _90715 -> Prop) : ((_37164 u f t GEN_PVAR_84) = (term65 _90715 _90724 GEN_PVAR_84 u f t)) = ((_37164 u f t GEN_PVAR_84) = (term65 _90715 _90724 GEN_PVAR_84 u f t)).
Proof. exact (MK_COMB (@lem3518213 _90715 _90724 _37164 u f t GEN_PVAR_84) (@lem3518202 _90715 _90724 GEN_PVAR_84 u f t)). Qed.
Lemma lem3518215 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) (u : _90715 -> Prop) (f : _90715 -> _90724) (t : _90715 -> Prop) : (term2203 _90715 _90724 _37164 u f t) = (term2203 _90715 _90724 _37164 u f t).
Proof. exact (fun_ext (fun GEN_PVAR_84 : _90715 => @lem3518214 _90715 _90724 _37164 GEN_PVAR_84 u f t)). Qed.
Lemma lem3518216 {_90715 : Type'} : (@all _90715) = (@all _90715).
Proof. exact (eq_refl (@all _90715)). Qed.
Lemma lem3518217 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) (u : _90715 -> Prop) (f : _90715 -> _90724) (t : _90715 -> Prop) : (term2204 _90715 _90724 _37164 u f t) = (term2204 _90715 _90724 _37164 u f t).
Proof. exact (MK_COMB (@lem3518216 _90715) (@lem3518215 _90715 _90724 _37164 u f t)). Qed.
Lemma lem3518218 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) (u : _90715 -> Prop) (f : _90715 -> _90724) : (term2205 _90715 _90724 _37164 u f) = (term2205 _90715 _90724 _37164 u f).
Proof. exact (fun_ext (fun t : _90715 -> Prop => @lem3518217 _90715 _90724 _37164 u f t)). Qed.
Lemma lem3518219 {_90715 : Type'} : (@all (_90715 -> Prop)) = (@all (_90715 -> Prop)).
Proof. exact (eq_refl (@all (_90715 -> Prop))). Qed.
Lemma lem3518220 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) (u : _90715 -> Prop) (f : _90715 -> _90724) : (term2206 _90715 _90724 _37164 u f) = (term2206 _90715 _90724 _37164 u f).
Proof. exact (MK_COMB (@lem3518219 _90715) (@lem3518218 _90715 _90724 _37164 u f)). Qed.
Lemma lem3518221 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) (u : _90715 -> Prop) : (term2207 _90715 _90724 _37164 u) = (term2207 _90715 _90724 _37164 u).
Proof. exact (fun_ext (fun f : _90715 -> _90724 => @lem3518220 _90715 _90724 _37164 u f)). Qed.
Lemma lem3518222 {_90715 _90724 : Type'} : (@all (_90715 -> _90724)) = (@all (_90715 -> _90724)).
Proof. exact (eq_refl (@all (_90715 -> _90724))). Qed.
Lemma lem3518223 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) (u : _90715 -> Prop) : (term2208 _90715 _90724 _37164 u) = (term2208 _90715 _90724 _37164 u).
Proof. exact (MK_COMB (@lem3518222 _90715 _90724) (@lem3518221 _90715 _90724 _37164 u)). Qed.
Lemma lem3518224 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) : (term2209 _90715 _90724 _37164) = (term2209 _90715 _90724 _37164).
Proof. exact (fun_ext (fun u : _90715 -> Prop => @lem3518223 _90715 _90724 _37164 u)). Qed.
Lemma lem3518225 {_90715 : Type'} : (@all (_90715 -> Prop)) = (@all (_90715 -> Prop)).
Proof. exact (eq_refl (@all (_90715 -> Prop))). Qed.
Lemma lem3518226 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) : (term2210 _90715 _90724 _37164) = (term2210 _90715 _90724 _37164).
Proof. exact (MK_COMB (@lem3518225 _90715) (@lem3518224 _90715 _90724 _37164)). Qed.
Lemma lem3518227 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem3518228 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) : (term2211 _90715 _90724 _37164) = (term2211 _90715 _90724 _37164).
Proof. exact (MK_COMB (@lem3518227) (@lem3518226 _90715 _90724 _37164)). Qed.
Lemma lem3518229 {_90715 _90724 A B : Type'} (_37164 : type627 _90715 _90724) (_37165 : type627 _90715 A) (_37166 : type627 _90715 B) (_37167 : type616 _90715 A) (_37168 : type852 _90724 A) (_37169 : type852 _90724 B) (_37170 : type235 _90724 A) (_37171 : type171 A B) (h1 : _37171 = (term2742 A B)) : (term2656 _90715 _90724 A B _37164 _37165 _37166 _37167 _37168 _37169 _37170) = (term2786 _90715 _90724 A B _37164 _37165 _37166 _37167 _37168 _37169 _37170 _37171).
Proof. exact (MK_COMB (@lem3518228 _90715 _90724 _37164) (@lem3518174 _90715 _90724 A B _37164 _37165 _37166 _37167 _37168 _37169 _37170 _37171 h1)). Qed.
Lemma lem3518230 {_90715 _90724 A B : Type'} (_37165 : type627 _90715 A) (_37166 : type627 _90715 B) (_37167 : type616 _90715 A) (_37168 : type852 _90724 A) (_37169 : type852 _90724 B) (_37170 : type235 _90724 A) (_37171 : type171 A B) (h1 : _37171 = (term2742 A B)) : (term2657 _90715 _90724 A B _37165 _37166 _37167 _37168 _37169 _37170) = (term2787 _90715 _90724 A B _37165 _37166 _37167 _37168 _37169 _37170 _37171).
Proof. exact (fun_ext (fun _37164 : type627 _90715 _90724 => @lem3518229 _90715 _90724 A B _37164 _37165 _37166 _37167 _37168 _37169 _37170 _37171 h1)). Qed.
Lemma lem3518231 {_90715 _90724 : Type'} : (@all ((_90715 -> Prop) -> (_90715 -> _90724) -> (_90715 -> Prop) -> _90715 -> Prop)) = (@all ((_90715 -> Prop) -> (_90715 -> _90724) -> (_90715 -> Prop) -> _90715 -> Prop)).
Proof. exact (eq_refl (@all ((_90715 -> Prop) -> (_90715 -> _90724) -> (_90715 -> Prop) -> _90715 -> Prop))). Qed.
Lemma lem3518232 {_90715 _90724 A B : Type'} (_37165 : type627 _90715 A) (_37166 : type627 _90715 B) (_37167 : type616 _90715 A) (_37168 : type852 _90724 A) (_37169 : type852 _90724 B) (_37170 : type235 _90724 A) (_37171 : type171 A B) (h1 : _37171 = (term2742 A B)) : (term2658 _90715 _90724 A B _37165 _37166 _37167 _37168 _37169 _37170) = (term2788 _90715 _90724 A B _37165 _37166 _37167 _37168 _37169 _37170 _37171).
Proof. exact (MK_COMB (@lem3518231 _90715 _90724) (@lem3518230 _90715 _90724 A B _37165 _37166 _37167 _37168 _37169 _37170 _37171 h1)). Qed.
Lemma lem3518257 {_90715 A : Type'} (GEN_PVAR_84 : _90715) (u : _90715 -> Prop) (f : _90715 -> A) (t : _90715 -> Prop) (x : _90715) : (term61 _90715 A GEN_PVAR_84 u f t x) = (term61 _90715 A GEN_PVAR_84 u f t x).
Proof. exact (eq_refl (term61 _90715 A GEN_PVAR_84 u f t x)). Qed.
Lemma lem3518258 {_90715 A : Type'} (GEN_PVAR_84 : _90715) (u : _90715 -> Prop) (f : _90715 -> A) (t : _90715 -> Prop) : (term63 _90715 A GEN_PVAR_84 u f t) = (term63 _90715 A GEN_PVAR_84 u f t).
Proof. exact (fun_ext (fun x : _90715 => @lem3518257 _90715 A GEN_PVAR_84 u f t x)). Qed.
Lemma lem3518259 {_90715 : Type'} : (@ex _90715) = (@ex _90715).
Proof. exact (eq_refl (@ex _90715)). Qed.
Lemma lem3518260 {_90715 A : Type'} (GEN_PVAR_84 : _90715) (u : _90715 -> Prop) (f : _90715 -> A) (t : _90715 -> Prop) : (term65 _90715 A GEN_PVAR_84 u f t) = (term65 _90715 A GEN_PVAR_84 u f t).
Proof. exact (MK_COMB (@lem3518259 _90715) (@lem3518258 _90715 A GEN_PVAR_84 u f t)). Qed.
Lemma lem3518271 {_90715 A : Type'} (_37165 : type627 _90715 A) (u : _90715 -> Prop) (f : _90715 -> A) (t : _90715 -> Prop) (GEN_PVAR_84 : _90715) : (term2201 _90715 A _37165 u f t GEN_PVAR_84) = (term2201 _90715 A _37165 u f t GEN_PVAR_84).
Proof. exact (eq_refl (term2201 _90715 A _37165 u f t GEN_PVAR_84)). Qed.
Lemma lem3518272 {_90715 A : Type'} (_37165 : type627 _90715 A) (GEN_PVAR_84 : _90715) (u : _90715 -> Prop) (f : _90715 -> A) (t : _90715 -> Prop) : ((_37165 u f t GEN_PVAR_84) = (term65 _90715 A GEN_PVAR_84 u f t)) = ((_37165 u f t GEN_PVAR_84) = (term65 _90715 A GEN_PVAR_84 u f t)).
Proof. exact (MK_COMB (@lem3518271 _90715 A _37165 u f t GEN_PVAR_84) (@lem3518260 _90715 A GEN_PVAR_84 u f t)). Qed.
Lemma lem3518273 {_90715 A : Type'} (_37165 : type627 _90715 A) (u : _90715 -> Prop) (f : _90715 -> A) (t : _90715 -> Prop) : (term2203 _90715 A _37165 u f t) = (term2203 _90715 A _37165 u f t).
Proof. exact (fun_ext (fun GEN_PVAR_84 : _90715 => @lem3518272 _90715 A _37165 GEN_PVAR_84 u f t)). Qed.
Lemma lem3518274 {_90715 : Type'} : (@all _90715) = (@all _90715).
Proof. exact (eq_refl (@all _90715)). Qed.
Lemma lem3518275 {_90715 A : Type'} (_37165 : type627 _90715 A) (u : _90715 -> Prop) (f : _90715 -> A) (t : _90715 -> Prop) : (term2204 _90715 A _37165 u f t) = (term2204 _90715 A _37165 u f t).
Proof. exact (MK_COMB (@lem3518274 _90715) (@lem3518273 _90715 A _37165 u f t)). Qed.
Lemma lem3518276 {_90715 A : Type'} (_37165 : type627 _90715 A) (u : _90715 -> Prop) (f : _90715 -> A) : (term2205 _90715 A _37165 u f) = (term2205 _90715 A _37165 u f).
Proof. exact (fun_ext (fun t : _90715 -> Prop => @lem3518275 _90715 A _37165 u f t)). Qed.
Lemma lem3518277 {_90715 : Type'} : (@all (_90715 -> Prop)) = (@all (_90715 -> Prop)).
Proof. exact (eq_refl (@all (_90715 -> Prop))). Qed.
Lemma lem3518278 {_90715 A : Type'} (_37165 : type627 _90715 A) (u : _90715 -> Prop) (f : _90715 -> A) : (term2206 _90715 A _37165 u f) = (term2206 _90715 A _37165 u f).
Proof. exact (MK_COMB (@lem3518277 _90715) (@lem3518276 _90715 A _37165 u f)). Qed.
Lemma lem3518279 {_90715 A : Type'} (_37165 : type627 _90715 A) (u : _90715 -> Prop) : (term2207 _90715 A _37165 u) = (term2207 _90715 A _37165 u).
Proof. exact (fun_ext (fun f : _90715 -> A => @lem3518278 _90715 A _37165 u f)). Qed.
Lemma lem3518280 {_90715 A : Type'} : (@all (_90715 -> A)) = (@all (_90715 -> A)).
Proof. exact (eq_refl (@all (_90715 -> A))). Qed.
Lemma lem3518281 {_90715 A : Type'} (_37165 : type627 _90715 A) (u : _90715 -> Prop) : (term2208 _90715 A _37165 u) = (term2208 _90715 A _37165 u).
Proof. exact (MK_COMB (@lem3518280 _90715 A) (@lem3518279 _90715 A _37165 u)). Qed.
Lemma lem3518282 {_90715 A : Type'} (_37165 : type627 _90715 A) : (term2209 _90715 A _37165) = (term2209 _90715 A _37165).
Proof. exact (fun_ext (fun u : _90715 -> Prop => @lem3518281 _90715 A _37165 u)). Qed.
Lemma lem3518283 {_90715 : Type'} : (@all (_90715 -> Prop)) = (@all (_90715 -> Prop)).
Proof. exact (eq_refl (@all (_90715 -> Prop))). Qed.
Lemma lem3518284 {_90715 A : Type'} (_37165 : type627 _90715 A) : (term2210 _90715 A _37165) = (term2210 _90715 A _37165).
Proof. exact (MK_COMB (@lem3518283 _90715) (@lem3518282 _90715 A _37165)). Qed.
Lemma lem3518285 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem3518286 {_90715 A : Type'} (_37165 : type627 _90715 A) : (term2211 _90715 A _37165) = (term2211 _90715 A _37165).
Proof. exact (MK_COMB (@lem3518285) (@lem3518284 _90715 A _37165)). Qed.
Lemma lem3518287 {_90715 _90724 A B : Type'} (_37165 : type627 _90715 A) (_37166 : type627 _90715 B) (_37167 : type616 _90715 A) (_37168 : type852 _90724 A) (_37169 : type852 _90724 B) (_37170 : type235 _90724 A) (_37171 : type171 A B) (h1 : _37171 = (term2742 A B)) : (term2659 _90715 _90724 A B _37165 _37166 _37167 _37168 _37169 _37170) = (term2789 _90715 _90724 A B _37165 _37166 _37167 _37168 _37169 _37170 _37171).
Proof. exact (MK_COMB (@lem3518286 _90715 A _37165) (@lem3518232 _90715 _90724 A B _37165 _37166 _37167 _37168 _37169 _37170 _37171 h1)). Qed.
Lemma lem3518288 {_90715 _90724 A B : Type'} (_37166 : type627 _90715 B) (_37167 : type616 _90715 A) (_37168 : type852 _90724 A) (_37169 : type852 _90724 B) (_37170 : type235 _90724 A) (_37171 : type171 A B) (h1 : _37171 = (term2742 A B)) : (term2660 _90715 _90724 A B _37166 _37167 _37168 _37169 _37170) = (term2790 _90715 _90724 A B _37166 _37167 _37168 _37169 _37170 _37171).
Proof. exact (fun_ext (fun _37165 : type627 _90715 A => @lem3518287 _90715 _90724 A B _37165 _37166 _37167 _37168 _37169 _37170 _37171 h1)). Qed.
Lemma lem3518289 {_90715 A : Type'} : (@all ((_90715 -> Prop) -> (_90715 -> A) -> (_90715 -> Prop) -> _90715 -> Prop)) = (@all ((_90715 -> Prop) -> (_90715 -> A) -> (_90715 -> Prop) -> _90715 -> Prop)).
Proof. exact (eq_refl (@all ((_90715 -> Prop) -> (_90715 -> A) -> (_90715 -> Prop) -> _90715 -> Prop))). Qed.
Lemma lem3518290 {_90715 _90724 A B : Type'} (_37166 : type627 _90715 B) (_37167 : type616 _90715 A) (_37168 : type852 _90724 A) (_37169 : type852 _90724 B) (_37170 : type235 _90724 A) (_37171 : type171 A B) (h1 : _37171 = (term2742 A B)) : (term2661 _90715 _90724 A B _37166 _37167 _37168 _37169 _37170) = (term2791 _90715 _90724 A B _37166 _37167 _37168 _37169 _37170 _37171).
Proof. exact (MK_COMB (@lem3518289 _90715 A) (@lem3518288 _90715 _90724 A B _37166 _37167 _37168 _37169 _37170 _37171 h1)). Qed.
Lemma lem3518315 {_90715 B : Type'} (GEN_PVAR_84 : _90715) (u : _90715 -> Prop) (f : _90715 -> B) (t : _90715 -> Prop) (x : _90715) : (term61 _90715 B GEN_PVAR_84 u f t x) = (term61 _90715 B GEN_PVAR_84 u f t x).
Proof. exact (eq_refl (term61 _90715 B GEN_PVAR_84 u f t x)). Qed.
Lemma lem3518316 {_90715 B : Type'} (GEN_PVAR_84 : _90715) (u : _90715 -> Prop) (f : _90715 -> B) (t : _90715 -> Prop) : (term63 _90715 B GEN_PVAR_84 u f t) = (term63 _90715 B GEN_PVAR_84 u f t).
Proof. exact (fun_ext (fun x : _90715 => @lem3518315 _90715 B GEN_PVAR_84 u f t x)). Qed.
Lemma lem3518317 {_90715 : Type'} : (@ex _90715) = (@ex _90715).
Proof. exact (eq_refl (@ex _90715)). Qed.
Lemma lem3518318 {_90715 B : Type'} (GEN_PVAR_84 : _90715) (u : _90715 -> Prop) (f : _90715 -> B) (t : _90715 -> Prop) : (term65 _90715 B GEN_PVAR_84 u f t) = (term65 _90715 B GEN_PVAR_84 u f t).
Proof. exact (MK_COMB (@lem3518317 _90715) (@lem3518316 _90715 B GEN_PVAR_84 u f t)). Qed.
Lemma lem3518329 {_90715 B : Type'} (_37166 : type627 _90715 B) (u : _90715 -> Prop) (f : _90715 -> B) (t : _90715 -> Prop) (GEN_PVAR_84 : _90715) : (term2201 _90715 B _37166 u f t GEN_PVAR_84) = (term2201 _90715 B _37166 u f t GEN_PVAR_84).
Proof. exact (eq_refl (term2201 _90715 B _37166 u f t GEN_PVAR_84)). Qed.
Lemma lem3518330 {_90715 B : Type'} (_37166 : type627 _90715 B) (GEN_PVAR_84 : _90715) (u : _90715 -> Prop) (f : _90715 -> B) (t : _90715 -> Prop) : ((_37166 u f t GEN_PVAR_84) = (term65 _90715 B GEN_PVAR_84 u f t)) = ((_37166 u f t GEN_PVAR_84) = (term65 _90715 B GEN_PVAR_84 u f t)).
Proof. exact (MK_COMB (@lem3518329 _90715 B _37166 u f t GEN_PVAR_84) (@lem3518318 _90715 B GEN_PVAR_84 u f t)). Qed.
Lemma lem3518331 {_90715 B : Type'} (_37166 : type627 _90715 B) (u : _90715 -> Prop) (f : _90715 -> B) (t : _90715 -> Prop) : (term2203 _90715 B _37166 u f t) = (term2203 _90715 B _37166 u f t).
Proof. exact (fun_ext (fun GEN_PVAR_84 : _90715 => @lem3518330 _90715 B _37166 GEN_PVAR_84 u f t)). Qed.
Lemma lem3518332 {_90715 : Type'} : (@all _90715) = (@all _90715).
Proof. exact (eq_refl (@all _90715)). Qed.
Lemma lem3518333 {_90715 B : Type'} (_37166 : type627 _90715 B) (u : _90715 -> Prop) (f : _90715 -> B) (t : _90715 -> Prop) : (term2204 _90715 B _37166 u f t) = (term2204 _90715 B _37166 u f t).
Proof. exact (MK_COMB (@lem3518332 _90715) (@lem3518331 _90715 B _37166 u f t)). Qed.
Lemma lem3518334 {_90715 B : Type'} (_37166 : type627 _90715 B) (u : _90715 -> Prop) (f : _90715 -> B) : (term2205 _90715 B _37166 u f) = (term2205 _90715 B _37166 u f).
Proof. exact (fun_ext (fun t : _90715 -> Prop => @lem3518333 _90715 B _37166 u f t)). Qed.
Lemma lem3518335 {_90715 : Type'} : (@all (_90715 -> Prop)) = (@all (_90715 -> Prop)).
Proof. exact (eq_refl (@all (_90715 -> Prop))). Qed.
Lemma lem3518336 {_90715 B : Type'} (_37166 : type627 _90715 B) (u : _90715 -> Prop) (f : _90715 -> B) : (term2206 _90715 B _37166 u f) = (term2206 _90715 B _37166 u f).
Proof. exact (MK_COMB (@lem3518335 _90715) (@lem3518334 _90715 B _37166 u f)). Qed.
Lemma lem3518337 {_90715 B : Type'} (_37166 : type627 _90715 B) (u : _90715 -> Prop) : (term2207 _90715 B _37166 u) = (term2207 _90715 B _37166 u).
Proof. exact (fun_ext (fun f : _90715 -> B => @lem3518336 _90715 B _37166 u f)). Qed.
Lemma lem3518338 {_90715 B : Type'} : (@all (_90715 -> B)) = (@all (_90715 -> B)).
Proof. exact (eq_refl (@all (_90715 -> B))). Qed.
Lemma lem3518339 {_90715 B : Type'} (_37166 : type627 _90715 B) (u : _90715 -> Prop) : (term2208 _90715 B _37166 u) = (term2208 _90715 B _37166 u).
Proof. exact (MK_COMB (@lem3518338 _90715 B) (@lem3518337 _90715 B _37166 u)). Qed.
Lemma lem3518340 {_90715 B : Type'} (_37166 : type627 _90715 B) : (term2209 _90715 B _37166) = (term2209 _90715 B _37166).
Proof. exact (fun_ext (fun u : _90715 -> Prop => @lem3518339 _90715 B _37166 u)). Qed.
Lemma lem3518341 {_90715 : Type'} : (@all (_90715 -> Prop)) = (@all (_90715 -> Prop)).
Proof. exact (eq_refl (@all (_90715 -> Prop))). Qed.
Lemma lem3518342 {_90715 B : Type'} (_37166 : type627 _90715 B) : (term2210 _90715 B _37166) = (term2210 _90715 B _37166).
Proof. exact (MK_COMB (@lem3518341 _90715) (@lem3518340 _90715 B _37166)). Qed.
Lemma lem3518343 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem3518344 {_90715 B : Type'} (_37166 : type627 _90715 B) : (term2211 _90715 B _37166) = (term2211 _90715 B _37166).
Proof. exact (MK_COMB (@lem3518343) (@lem3518342 _90715 B _37166)). Qed.
Lemma lem3518345 {_90715 _90724 A B : Type'} (_37166 : type627 _90715 B) (_37167 : type616 _90715 A) (_37168 : type852 _90724 A) (_37169 : type852 _90724 B) (_37170 : type235 _90724 A) (_37171 : type171 A B) (h1 : _37171 = (term2742 A B)) : (term2662 _90715 _90724 A B _37166 _37167 _37168 _37169 _37170) = (term2792 _90715 _90724 A B _37166 _37167 _37168 _37169 _37170 _37171).
Proof. exact (MK_COMB (@lem3518344 _90715 B _37166) (@lem3518290 _90715 _90724 A B _37166 _37167 _37168 _37169 _37170 _37171 h1)). Qed.
Lemma lem3518346 {_90715 _90724 A B : Type'} (_37167 : type616 _90715 A) (_37168 : type852 _90724 A) (_37169 : type852 _90724 B) (_37170 : type235 _90724 A) (_37171 : type171 A B) (h1 : _37171 = (term2742 A B)) : (term2663 _90715 _90724 A B _37167 _37168 _37169 _37170) = (term2793 _90715 _90724 A B _37167 _37168 _37169 _37170 _37171).
Proof. exact (fun_ext (fun _37166 : type627 _90715 B => @lem3518345 _90715 _90724 A B _37166 _37167 _37168 _37169 _37170 _37171 h1)). Qed.
Lemma lem3518347 {_90715 B : Type'} : (@all ((_90715 -> Prop) -> (_90715 -> B) -> (_90715 -> Prop) -> _90715 -> Prop)) = (@all ((_90715 -> Prop) -> (_90715 -> B) -> (_90715 -> Prop) -> _90715 -> Prop)).
Proof. exact (eq_refl (@all ((_90715 -> Prop) -> (_90715 -> B) -> (_90715 -> Prop) -> _90715 -> Prop))). Qed.
Lemma lem3518348 {_90715 _90724 A B : Type'} (_37167 : type616 _90715 A) (_37168 : type852 _90724 A) (_37169 : type852 _90724 B) (_37170 : type235 _90724 A) (_37171 : type171 A B) (h1 : _37171 = (term2742 A B)) : (term2664 _90715 _90724 A B _37167 _37168 _37169 _37170) = (term2794 _90715 _90724 A B _37167 _37168 _37169 _37170 _37171).
Proof. exact (MK_COMB (@lem3518347 _90715 B) (@lem3518346 _90715 _90724 A B _37167 _37168 _37169 _37170 _37171 h1)). Qed.
Lemma lem3518373 {_90715 A : Type'} (GEN_PVAR_84 : _90715) (u : _90715 -> Prop) (f : type1413 _90715 A) (t : _90715 -> Prop) (x : _90715) : (term2101 _90715 A GEN_PVAR_84 u f t x) = (term2101 _90715 A GEN_PVAR_84 u f t x).
Proof. exact (eq_refl (term2101 _90715 A GEN_PVAR_84 u f t x)). Qed.
Lemma lem3518374 {_90715 A : Type'} (GEN_PVAR_84 : _90715) (u : _90715 -> Prop) (f : type1413 _90715 A) (t : _90715 -> Prop) : (term2102 _90715 A GEN_PVAR_84 u f t) = (term2102 _90715 A GEN_PVAR_84 u f t).
Proof. exact (fun_ext (fun x : _90715 => @lem3518373 _90715 A GEN_PVAR_84 u f t x)). Qed.
Lemma lem3518375 {_90715 : Type'} : (@ex _90715) = (@ex _90715).
Proof. exact (eq_refl (@ex _90715)). Qed.
Lemma lem3518376 {_90715 A : Type'} (GEN_PVAR_84 : _90715) (u : _90715 -> Prop) (f : type1413 _90715 A) (t : _90715 -> Prop) : (term2103 _90715 A GEN_PVAR_84 u f t) = (term2103 _90715 A GEN_PVAR_84 u f t).
Proof. exact (MK_COMB (@lem3518375 _90715) (@lem3518374 _90715 A GEN_PVAR_84 u f t)). Qed.
Lemma lem3518387 {_90715 A : Type'} (_37167 : type616 _90715 A) (u : _90715 -> Prop) (f : type1413 _90715 A) (t : _90715 -> Prop) (GEN_PVAR_84 : _90715) : (term2426 _90715 A _37167 u f t GEN_PVAR_84) = (term2426 _90715 A _37167 u f t GEN_PVAR_84).
Proof. exact (eq_refl (term2426 _90715 A _37167 u f t GEN_PVAR_84)). Qed.
Lemma lem3518388 {_90715 A : Type'} (_37167 : type616 _90715 A) (GEN_PVAR_84 : _90715) (u : _90715 -> Prop) (f : type1413 _90715 A) (t : _90715 -> Prop) : ((_37167 u f t GEN_PVAR_84) = (term2103 _90715 A GEN_PVAR_84 u f t)) = ((_37167 u f t GEN_PVAR_84) = (term2103 _90715 A GEN_PVAR_84 u f t)).
Proof. exact (MK_COMB (@lem3518387 _90715 A _37167 u f t GEN_PVAR_84) (@lem3518376 _90715 A GEN_PVAR_84 u f t)). Qed.
Lemma lem3518389 {_90715 A : Type'} (_37167 : type616 _90715 A) (u : _90715 -> Prop) (f : type1413 _90715 A) (t : _90715 -> Prop) : (term2428 _90715 A _37167 u f t) = (term2428 _90715 A _37167 u f t).
Proof. exact (fun_ext (fun GEN_PVAR_84 : _90715 => @lem3518388 _90715 A _37167 GEN_PVAR_84 u f t)). Qed.
Lemma lem3518390 {_90715 : Type'} : (@all _90715) = (@all _90715).
Proof. exact (eq_refl (@all _90715)). Qed.
Lemma lem3518391 {_90715 A : Type'} (_37167 : type616 _90715 A) (u : _90715 -> Prop) (f : type1413 _90715 A) (t : _90715 -> Prop) : (term2429 _90715 A _37167 u f t) = (term2429 _90715 A _37167 u f t).
Proof. exact (MK_COMB (@lem3518390 _90715) (@lem3518389 _90715 A _37167 u f t)). Qed.
Lemma lem3518392 {_90715 A : Type'} (_37167 : type616 _90715 A) (u : _90715 -> Prop) (f : type1413 _90715 A) : (term2430 _90715 A _37167 u f) = (term2430 _90715 A _37167 u f).
Proof. exact (fun_ext (fun t : _90715 -> Prop => @lem3518391 _90715 A _37167 u f t)). Qed.
Lemma lem3518393 {_90715 : Type'} : (@all (_90715 -> Prop)) = (@all (_90715 -> Prop)).
Proof. exact (eq_refl (@all (_90715 -> Prop))). Qed.
Lemma lem3518394 {_90715 A : Type'} (_37167 : type616 _90715 A) (u : _90715 -> Prop) (f : type1413 _90715 A) : (term2431 _90715 A _37167 u f) = (term2431 _90715 A _37167 u f).
Proof. exact (MK_COMB (@lem3518393 _90715) (@lem3518392 _90715 A _37167 u f)). Qed.
Lemma lem3518395 {_90715 A : Type'} (_37167 : type616 _90715 A) (u : _90715 -> Prop) : (term2432 _90715 A _37167 u) = (term2432 _90715 A _37167 u).
Proof. exact (fun_ext (fun f : type1413 _90715 A => @lem3518394 _90715 A _37167 u f)). Qed.
Lemma lem3518396 {_90715 A : Type'} : (@all (_90715 -> A -> Prop)) = (@all (_90715 -> A -> Prop)).
Proof. exact (eq_refl (@all (_90715 -> A -> Prop))). Qed.
Lemma lem3518397 {_90715 A : Type'} (_37167 : type616 _90715 A) (u : _90715 -> Prop) : (term2433 _90715 A _37167 u) = (term2433 _90715 A _37167 u).
Proof. exact (MK_COMB (@lem3518396 _90715 A) (@lem3518395 _90715 A _37167 u)). Qed.
Lemma lem3518398 {_90715 A : Type'} (_37167 : type616 _90715 A) : (term2434 _90715 A _37167) = (term2434 _90715 A _37167).
Proof. exact (fun_ext (fun u : _90715 -> Prop => @lem3518397 _90715 A _37167 u)). Qed.
Lemma lem3518399 {_90715 : Type'} : (@all (_90715 -> Prop)) = (@all (_90715 -> Prop)).
Proof. exact (eq_refl (@all (_90715 -> Prop))). Qed.
Lemma lem3518400 {_90715 A : Type'} (_37167 : type616 _90715 A) : (term2435 _90715 A _37167) = (term2435 _90715 A _37167).
Proof. exact (MK_COMB (@lem3518399 _90715) (@lem3518398 _90715 A _37167)). Qed.
Lemma lem3518401 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem3518402 {_90715 A : Type'} (_37167 : type616 _90715 A) : (term2436 _90715 A _37167) = (term2436 _90715 A _37167).
Proof. exact (MK_COMB (@lem3518401) (@lem3518400 _90715 A _37167)). Qed.
Lemma lem3518403 {_90715 _90724 A B : Type'} (_37167 : type616 _90715 A) (_37168 : type852 _90724 A) (_37169 : type852 _90724 B) (_37170 : type235 _90724 A) (_37171 : type171 A B) (h1 : _37171 = (term2742 A B)) : (term2665 _90715 _90724 A B _37167 _37168 _37169 _37170) = (term2795 _90715 _90724 A B _37167 _37168 _37169 _37170 _37171).
Proof. exact (MK_COMB (@lem3518402 _90715 A _37167) (@lem3518348 _90715 _90724 A B _37167 _37168 _37169 _37170 _37171 h1)). Qed.
Lemma lem3518404 {_90715 _90724 A B : Type'} (_37168 : type852 _90724 A) (_37169 : type852 _90724 B) (_37170 : type235 _90724 A) (_37171 : type171 A B) (h1 : _37171 = (term2742 A B)) : (term2666 _90715 _90724 A B _37168 _37169 _37170) = (term2796 _90715 _90724 A B _37168 _37169 _37170 _37171).
Proof. exact (fun_ext (fun _37167 : type616 _90715 A => @lem3518403 _90715 _90724 A B _37167 _37168 _37169 _37170 _37171 h1)). Qed.
Lemma lem3518405 {_90715 A : Type'} : (@all ((_90715 -> Prop) -> (_90715 -> A -> Prop) -> (_90715 -> Prop) -> _90715 -> Prop)) = (@all ((_90715 -> Prop) -> (_90715 -> A -> Prop) -> (_90715 -> Prop) -> _90715 -> Prop)).
Proof. exact (eq_refl (@all ((_90715 -> Prop) -> (_90715 -> A -> Prop) -> (_90715 -> Prop) -> _90715 -> Prop))). Qed.
Lemma lem3518406 {_90715 _90724 A B : Type'} (_37168 : type852 _90724 A) (_37169 : type852 _90724 B) (_37170 : type235 _90724 A) (_37171 : type171 A B) (h1 : _37171 = (term2742 A B)) : (term2667 _90715 _90724 A B _37168 _37169 _37170) = (term2797 _90715 _90724 A B _37168 _37169 _37170 _37171).
Proof. exact (MK_COMB (@lem3518405 _90715 A) (@lem3518404 _90715 _90724 A B _37168 _37169 _37170 _37171 h1)). Qed.
Lemma lem3518431 {_90724 A : Type'} (GEN_PVAR_84 : A) (u : A -> Prop) (f : A -> _90724) (t : A -> Prop) (x : A) : (term2058 _90724 A GEN_PVAR_84 u f t x) = (term2058 _90724 A GEN_PVAR_84 u f t x).
Proof. exact (eq_refl (term2058 _90724 A GEN_PVAR_84 u f t x)). Qed.
Lemma lem3518432 {_90724 A : Type'} (GEN_PVAR_84 : A) (u : A -> Prop) (f : A -> _90724) (t : A -> Prop) : (term2059 _90724 A GEN_PVAR_84 u f t) = (term2059 _90724 A GEN_PVAR_84 u f t).
Proof. exact (fun_ext (fun x : A => @lem3518431 _90724 A GEN_PVAR_84 u f t x)). Qed.
Lemma lem3518433 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem3518434 {_90724 A : Type'} (GEN_PVAR_84 : A) (u : A -> Prop) (f : A -> _90724) (t : A -> Prop) : (term2060 _90724 A GEN_PVAR_84 u f t) = (term2060 _90724 A GEN_PVAR_84 u f t).
Proof. exact (MK_COMB (@lem3518433 A) (@lem3518432 _90724 A GEN_PVAR_84 u f t)). Qed.
Lemma lem3518445 {_90724 A : Type'} (_37168 : type852 _90724 A) (u : A -> Prop) (f : A -> _90724) (t : A -> Prop) (GEN_PVAR_84 : A) : (term2544 _90724 A _37168 u f t GEN_PVAR_84) = (term2544 _90724 A _37168 u f t GEN_PVAR_84).
Proof. exact (eq_refl (term2544 _90724 A _37168 u f t GEN_PVAR_84)). Qed.
Lemma lem3518446 {_90724 A : Type'} (_37168 : type852 _90724 A) (GEN_PVAR_84 : A) (u : A -> Prop) (f : A -> _90724) (t : A -> Prop) : ((_37168 u f t GEN_PVAR_84) = (term2060 _90724 A GEN_PVAR_84 u f t)) = ((_37168 u f t GEN_PVAR_84) = (term2060 _90724 A GEN_PVAR_84 u f t)).
Proof. exact (MK_COMB (@lem3518445 _90724 A _37168 u f t GEN_PVAR_84) (@lem3518434 _90724 A GEN_PVAR_84 u f t)). Qed.
Lemma lem3518447 {_90724 A : Type'} (_37168 : type852 _90724 A) (u : A -> Prop) (f : A -> _90724) (t : A -> Prop) : (term2546 _90724 A _37168 u f t) = (term2546 _90724 A _37168 u f t).
Proof. exact (fun_ext (fun GEN_PVAR_84 : A => @lem3518446 _90724 A _37168 GEN_PVAR_84 u f t)). Qed.
Lemma lem3518448 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem3518449 {_90724 A : Type'} (_37168 : type852 _90724 A) (u : A -> Prop) (f : A -> _90724) (t : A -> Prop) : (term2547 _90724 A _37168 u f t) = (term2547 _90724 A _37168 u f t).
Proof. exact (MK_COMB (@lem3518448 A) (@lem3518447 _90724 A _37168 u f t)). Qed.
Lemma lem3518450 {_90724 A : Type'} (_37168 : type852 _90724 A) (u : A -> Prop) (f : A -> _90724) : (term2548 _90724 A _37168 u f) = (term2548 _90724 A _37168 u f).
Proof. exact (fun_ext (fun t : A -> Prop => @lem3518449 _90724 A _37168 u f t)). Qed.
Lemma lem3518451 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem3518452 {_90724 A : Type'} (_37168 : type852 _90724 A) (u : A -> Prop) (f : A -> _90724) : (term2549 _90724 A _37168 u f) = (term2549 _90724 A _37168 u f).
Proof. exact (MK_COMB (@lem3518451 A) (@lem3518450 _90724 A _37168 u f)). Qed.
Lemma lem3518453 {_90724 A : Type'} (_37168 : type852 _90724 A) (u : A -> Prop) : (term2550 _90724 A _37168 u) = (term2550 _90724 A _37168 u).
Proof. exact (fun_ext (fun f : A -> _90724 => @lem3518452 _90724 A _37168 u f)). Qed.
Lemma lem3518454 {_90724 A : Type'} : (@all (A -> _90724)) = (@all (A -> _90724)).
Proof. exact (eq_refl (@all (A -> _90724))). Qed.
Lemma lem3518455 {_90724 A : Type'} (_37168 : type852 _90724 A) (u : A -> Prop) : (term2551 _90724 A _37168 u) = (term2551 _90724 A _37168 u).
Proof. exact (MK_COMB (@lem3518454 _90724 A) (@lem3518453 _90724 A _37168 u)). Qed.
Lemma lem3518456 {_90724 A : Type'} (_37168 : type852 _90724 A) : (term2552 _90724 A _37168) = (term2552 _90724 A _37168).
Proof. exact (fun_ext (fun u : A -> Prop => @lem3518455 _90724 A _37168 u)). Qed.
Lemma lem3518457 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem3518458 {_90724 A : Type'} (_37168 : type852 _90724 A) : (term2553 _90724 A _37168) = (term2553 _90724 A _37168).
Proof. exact (MK_COMB (@lem3518457 A) (@lem3518456 _90724 A _37168)). Qed.
Lemma lem3518459 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem3518460 {_90724 A : Type'} (_37168 : type852 _90724 A) : (term2554 _90724 A _37168) = (term2554 _90724 A _37168).
Proof. exact (MK_COMB (@lem3518459) (@lem3518458 _90724 A _37168)). Qed.
Lemma lem3518461 {_90715 _90724 A B : Type'} (_37168 : type852 _90724 A) (_37169 : type852 _90724 B) (_37170 : type235 _90724 A) (_37171 : type171 A B) (h1 : _37171 = (term2742 A B)) : (term2668 _90715 _90724 A B _37168 _37169 _37170) = (term2798 _90715 _90724 A B _37168 _37169 _37170 _37171).
Proof. exact (MK_COMB (@lem3518460 _90724 A _37168) (@lem3518406 _90715 _90724 A B _37168 _37169 _37170 _37171 h1)). Qed.
Lemma lem3518462 {_90715 _90724 A B : Type'} (_37169 : type852 _90724 B) (_37170 : type235 _90724 A) (_37171 : type171 A B) (h1 : _37171 = (term2742 A B)) : (term2669 _90715 _90724 A B _37169 _37170) = (term2799 _90715 _90724 A B _37169 _37170 _37171).
Proof. exact (fun_ext (fun _37168 : type852 _90724 A => @lem3518461 _90715 _90724 A B _37168 _37169 _37170 _37171 h1)). Qed.
Lemma lem3518463 {_90724 A : Type'} : (@all ((A -> Prop) -> (A -> _90724) -> (A -> Prop) -> A -> Prop)) = (@all ((A -> Prop) -> (A -> _90724) -> (A -> Prop) -> A -> Prop)).
Proof. exact (eq_refl (@all ((A -> Prop) -> (A -> _90724) -> (A -> Prop) -> A -> Prop))). Qed.
Lemma lem3518464 {_90715 _90724 A B : Type'} (_37169 : type852 _90724 B) (_37170 : type235 _90724 A) (_37171 : type171 A B) (h1 : _37171 = (term2742 A B)) : (term2670 _90715 _90724 A B _37169 _37170) = (term2800 _90715 _90724 A B _37169 _37170 _37171).
Proof. exact (MK_COMB (@lem3518463 _90724 A) (@lem3518462 _90715 _90724 A B _37169 _37170 _37171 h1)). Qed.
Lemma lem3518489 {_90724 B : Type'} (GEN_PVAR_84 : B) (u : B -> Prop) (f : B -> _90724) (t : B -> Prop) (x : B) : (term2058 _90724 B GEN_PVAR_84 u f t x) = (term2058 _90724 B GEN_PVAR_84 u f t x).
Proof. exact (eq_refl (term2058 _90724 B GEN_PVAR_84 u f t x)). Qed.
Lemma lem3518490 {_90724 B : Type'} (GEN_PVAR_84 : B) (u : B -> Prop) (f : B -> _90724) (t : B -> Prop) : (term2059 _90724 B GEN_PVAR_84 u f t) = (term2059 _90724 B GEN_PVAR_84 u f t).
Proof. exact (fun_ext (fun x : B => @lem3518489 _90724 B GEN_PVAR_84 u f t x)). Qed.
Lemma lem3518491 {B : Type'} : (@ex B) = (@ex B).
Proof. exact (eq_refl (@ex B)). Qed.
Lemma lem3518492 {_90724 B : Type'} (GEN_PVAR_84 : B) (u : B -> Prop) (f : B -> _90724) (t : B -> Prop) : (term2060 _90724 B GEN_PVAR_84 u f t) = (term2060 _90724 B GEN_PVAR_84 u f t).
Proof. exact (MK_COMB (@lem3518491 B) (@lem3518490 _90724 B GEN_PVAR_84 u f t)). Qed.
Lemma lem3518503 {_90724 B : Type'} (_37169 : type852 _90724 B) (u : B -> Prop) (f : B -> _90724) (t : B -> Prop) (GEN_PVAR_84 : B) : (term2544 _90724 B _37169 u f t GEN_PVAR_84) = (term2544 _90724 B _37169 u f t GEN_PVAR_84).
Proof. exact (eq_refl (term2544 _90724 B _37169 u f t GEN_PVAR_84)). Qed.
Lemma lem3518504 {_90724 B : Type'} (_37169 : type852 _90724 B) (GEN_PVAR_84 : B) (u : B -> Prop) (f : B -> _90724) (t : B -> Prop) : ((_37169 u f t GEN_PVAR_84) = (term2060 _90724 B GEN_PVAR_84 u f t)) = ((_37169 u f t GEN_PVAR_84) = (term2060 _90724 B GEN_PVAR_84 u f t)).
Proof. exact (MK_COMB (@lem3518503 _90724 B _37169 u f t GEN_PVAR_84) (@lem3518492 _90724 B GEN_PVAR_84 u f t)). Qed.
Lemma lem3518505 {_90724 B : Type'} (_37169 : type852 _90724 B) (u : B -> Prop) (f : B -> _90724) (t : B -> Prop) : (term2546 _90724 B _37169 u f t) = (term2546 _90724 B _37169 u f t).
Proof. exact (fun_ext (fun GEN_PVAR_84 : B => @lem3518504 _90724 B _37169 GEN_PVAR_84 u f t)). Qed.
Lemma lem3518506 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem3518507 {_90724 B : Type'} (_37169 : type852 _90724 B) (u : B -> Prop) (f : B -> _90724) (t : B -> Prop) : (term2547 _90724 B _37169 u f t) = (term2547 _90724 B _37169 u f t).
Proof. exact (MK_COMB (@lem3518506 B) (@lem3518505 _90724 B _37169 u f t)). Qed.
Lemma lem3518508 {_90724 B : Type'} (_37169 : type852 _90724 B) (u : B -> Prop) (f : B -> _90724) : (term2548 _90724 B _37169 u f) = (term2548 _90724 B _37169 u f).
Proof. exact (fun_ext (fun t : B -> Prop => @lem3518507 _90724 B _37169 u f t)). Qed.
Lemma lem3518509 {B : Type'} : (@all (B -> Prop)) = (@all (B -> Prop)).
Proof. exact (eq_refl (@all (B -> Prop))). Qed.
Lemma lem3518510 {_90724 B : Type'} (_37169 : type852 _90724 B) (u : B -> Prop) (f : B -> _90724) : (term2549 _90724 B _37169 u f) = (term2549 _90724 B _37169 u f).
Proof. exact (MK_COMB (@lem3518509 B) (@lem3518508 _90724 B _37169 u f)). Qed.
Lemma lem3518511 {_90724 B : Type'} (_37169 : type852 _90724 B) (u : B -> Prop) : (term2550 _90724 B _37169 u) = (term2550 _90724 B _37169 u).
Proof. exact (fun_ext (fun f : B -> _90724 => @lem3518510 _90724 B _37169 u f)). Qed.
Lemma lem3518512 {_90724 B : Type'} : (@all (B -> _90724)) = (@all (B -> _90724)).
Proof. exact (eq_refl (@all (B -> _90724))). Qed.
Lemma lem3518513 {_90724 B : Type'} (_37169 : type852 _90724 B) (u : B -> Prop) : (term2551 _90724 B _37169 u) = (term2551 _90724 B _37169 u).
Proof. exact (MK_COMB (@lem3518512 _90724 B) (@lem3518511 _90724 B _37169 u)). Qed.
Lemma lem3518514 {_90724 B : Type'} (_37169 : type852 _90724 B) : (term2552 _90724 B _37169) = (term2552 _90724 B _37169).
Proof. exact (fun_ext (fun u : B -> Prop => @lem3518513 _90724 B _37169 u)). Qed.
Lemma lem3518515 {B : Type'} : (@all (B -> Prop)) = (@all (B -> Prop)).
Proof. exact (eq_refl (@all (B -> Prop))). Qed.
Lemma lem3518516 {_90724 B : Type'} (_37169 : type852 _90724 B) : (term2553 _90724 B _37169) = (term2553 _90724 B _37169).
Proof. exact (MK_COMB (@lem3518515 B) (@lem3518514 _90724 B _37169)). Qed.
Lemma lem3518517 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem3518518 {_90724 B : Type'} (_37169 : type852 _90724 B) : (term2554 _90724 B _37169) = (term2554 _90724 B _37169).
Proof. exact (MK_COMB (@lem3518517) (@lem3518516 _90724 B _37169)). Qed.
Lemma lem3518519 {_90715 _90724 A B : Type'} (_37169 : type852 _90724 B) (_37170 : type235 _90724 A) (_37171 : type171 A B) (h1 : _37171 = (term2742 A B)) : (term2671 _90715 _90724 A B _37169 _37170) = (term2801 _90715 _90724 A B _37169 _37170 _37171).
Proof. exact (MK_COMB (@lem3518518 _90724 B _37169) (@lem3518464 _90715 _90724 A B _37169 _37170 _37171 h1)). Qed.
Lemma lem3518520 {_90715 _90724 A B : Type'} (_37170 : type235 _90724 A) (_37171 : type171 A B) (h1 : _37171 = (term2742 A B)) : (term2672 _90715 _90724 A B _37170) = (term2802 _90715 _90724 A B _37170 _37171).
Proof. exact (fun_ext (fun _37169 : type852 _90724 B => @lem3518519 _90715 _90724 A B _37169 _37170 _37171 h1)). Qed.
Lemma lem3518521 {_90724 B : Type'} : (@all ((B -> Prop) -> (B -> _90724) -> (B -> Prop) -> B -> Prop)) = (@all ((B -> Prop) -> (B -> _90724) -> (B -> Prop) -> B -> Prop)).
Proof. exact (eq_refl (@all ((B -> Prop) -> (B -> _90724) -> (B -> Prop) -> B -> Prop))). Qed.
Lemma lem3518522 {_90715 _90724 A B : Type'} (_37170 : type235 _90724 A) (_37171 : type171 A B) (h1 : _37171 = (term2742 A B)) : (term2673 _90715 _90724 A B _37170) = (term2803 _90715 _90724 A B _37170 _37171).
Proof. exact (MK_COMB (@lem3518521 _90724 B) (@lem3518520 _90715 _90724 A B _37170 _37171 h1)). Qed.
Lemma lem3518547 {_90724 A : Type'} (GEN_PVAR_84 : A -> Prop) (u : type686 A) (f : type862 _90724 A) (t : type686 A) (x : A -> Prop) : (term2037 _90724 A GEN_PVAR_84 u f t x) = (term2037 _90724 A GEN_PVAR_84 u f t x).
Proof. exact (eq_refl (term2037 _90724 A GEN_PVAR_84 u f t x)). Qed.
Lemma lem3518548 {_90724 A : Type'} (GEN_PVAR_84 : A -> Prop) (u : type686 A) (f : type862 _90724 A) (t : type686 A) : (term2038 _90724 A GEN_PVAR_84 u f t) = (term2038 _90724 A GEN_PVAR_84 u f t).
Proof. exact (fun_ext (fun x : A -> Prop => @lem3518547 _90724 A GEN_PVAR_84 u f t x)). Qed.
Lemma lem3518549 {A : Type'} : (@ex (A -> Prop)) = (@ex (A -> Prop)).
Proof. exact (eq_refl (@ex (A -> Prop))). Qed.
Lemma lem3518550 {_90724 A : Type'} (GEN_PVAR_84 : A -> Prop) (u : type686 A) (f : type862 _90724 A) (t : type686 A) : (term2039 _90724 A GEN_PVAR_84 u f t) = (term2039 _90724 A GEN_PVAR_84 u f t).
Proof. exact (MK_COMB (@lem3518549 A) (@lem3518548 _90724 A GEN_PVAR_84 u f t)). Qed.
Lemma lem3518561 {_90724 A : Type'} (_37170 : type235 _90724 A) (u : type686 A) (f : type862 _90724 A) (t : type686 A) (GEN_PVAR_84 : A -> Prop) : (term2728 _90724 A _37170 u f t GEN_PVAR_84) = (term2728 _90724 A _37170 u f t GEN_PVAR_84).
Proof. exact (eq_refl (term2728 _90724 A _37170 u f t GEN_PVAR_84)). Qed.
Lemma lem3518562 {_90724 A : Type'} (_37170 : type235 _90724 A) (GEN_PVAR_84 : A -> Prop) (u : type686 A) (f : type862 _90724 A) (t : type686 A) : ((_37170 u f t GEN_PVAR_84) = (term2039 _90724 A GEN_PVAR_84 u f t)) = ((_37170 u f t GEN_PVAR_84) = (term2039 _90724 A GEN_PVAR_84 u f t)).
Proof. exact (MK_COMB (@lem3518561 _90724 A _37170 u f t GEN_PVAR_84) (@lem3518550 _90724 A GEN_PVAR_84 u f t)). Qed.
Lemma lem3518563 {_90724 A : Type'} (_37170 : type235 _90724 A) (u : type686 A) (f : type862 _90724 A) (t : type686 A) : (term2730 _90724 A _37170 u f t) = (term2730 _90724 A _37170 u f t).
Proof. exact (fun_ext (fun GEN_PVAR_84 : A -> Prop => @lem3518562 _90724 A _37170 GEN_PVAR_84 u f t)). Qed.
Lemma lem3518564 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem3518565 {_90724 A : Type'} (_37170 : type235 _90724 A) (u : type686 A) (f : type862 _90724 A) (t : type686 A) : (term2731 _90724 A _37170 u f t) = (term2731 _90724 A _37170 u f t).
Proof. exact (MK_COMB (@lem3518564 A) (@lem3518563 _90724 A _37170 u f t)). Qed.
Lemma lem3518566 {_90724 A : Type'} (_37170 : type235 _90724 A) (u : type686 A) (f : type862 _90724 A) : (term2732 _90724 A _37170 u f) = (term2732 _90724 A _37170 u f).
Proof. exact (fun_ext (fun t : type686 A => @lem3518565 _90724 A _37170 u f t)). Qed.
Lemma lem3518567 {A : Type'} : (@all ((A -> Prop) -> Prop)) = (@all ((A -> Prop) -> Prop)).
Proof. exact (eq_refl (@all ((A -> Prop) -> Prop))). Qed.
Lemma lem3518568 {_90724 A : Type'} (_37170 : type235 _90724 A) (u : type686 A) (f : type862 _90724 A) : (term2733 _90724 A _37170 u f) = (term2733 _90724 A _37170 u f).
Proof. exact (MK_COMB (@lem3518567 A) (@lem3518566 _90724 A _37170 u f)). Qed.
Lemma lem3518569 {_90724 A : Type'} (_37170 : type235 _90724 A) (u : type686 A) : (term2734 _90724 A _37170 u) = (term2734 _90724 A _37170 u).
Proof. exact (fun_ext (fun f : type862 _90724 A => @lem3518568 _90724 A _37170 u f)). Qed.
Lemma lem3518570 {_90724 A : Type'} : (@all ((A -> Prop) -> _90724)) = (@all ((A -> Prop) -> _90724)).
Proof. exact (eq_refl (@all ((A -> Prop) -> _90724))). Qed.
Lemma lem3518571 {_90724 A : Type'} (_37170 : type235 _90724 A) (u : type686 A) : (term2735 _90724 A _37170 u) = (term2735 _90724 A _37170 u).
Proof. exact (MK_COMB (@lem3518570 _90724 A) (@lem3518569 _90724 A _37170 u)). Qed.
Lemma lem3518572 {_90724 A : Type'} (_37170 : type235 _90724 A) : (term2736 _90724 A _37170) = (term2736 _90724 A _37170).
Proof. exact (fun_ext (fun u : type686 A => @lem3518571 _90724 A _37170 u)). Qed.
Lemma lem3518573 {A : Type'} : (@all ((A -> Prop) -> Prop)) = (@all ((A -> Prop) -> Prop)).
Proof. exact (eq_refl (@all ((A -> Prop) -> Prop))). Qed.
Lemma lem3518574 {_90724 A : Type'} (_37170 : type235 _90724 A) : (term2737 _90724 A _37170) = (term2737 _90724 A _37170).
Proof. exact (MK_COMB (@lem3518573 A) (@lem3518572 _90724 A _37170)). Qed.
Lemma lem3518575 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem3518576 {_90724 A : Type'} (_37170 : type235 _90724 A) : (term2738 _90724 A _37170) = (term2738 _90724 A _37170).
Proof. exact (MK_COMB (@lem3518575) (@lem3518574 _90724 A _37170)). Qed.
Lemma lem3518577 {_90715 _90724 A B : Type'} (_37170 : type235 _90724 A) (_37171 : type171 A B) (h1 : _37171 = (term2742 A B)) : (term2739 _90715 _90724 A B _37170) = (term2804 _90715 _90724 A B _37170 _37171).
Proof. exact (MK_COMB (@lem3518576 _90724 A _37170) (@lem3518522 _90715 _90724 A B _37170 _37171 h1)). Qed.
Lemma lem3518578 {_90715 _90724 A B : Type'} (_37171 : type171 A B) (h1 : _37171 = (term2742 A B)) : (term2740 _90715 _90724 A B) = (term2805 _90715 _90724 A B _37171).
Proof. exact (fun_ext (fun _37170 : type235 _90724 A => @lem3518577 _90715 _90724 A B _37170 _37171 h1)). Qed.
Lemma lem3518579 {_90724 A : Type'} : (@all (((A -> Prop) -> Prop) -> ((A -> Prop) -> _90724) -> ((A -> Prop) -> Prop) -> (A -> Prop) -> Prop)) = (@all (((A -> Prop) -> Prop) -> ((A -> Prop) -> _90724) -> ((A -> Prop) -> Prop) -> (A -> Prop) -> Prop)).
Proof. exact (eq_refl (@all (((A -> Prop) -> Prop) -> ((A -> Prop) -> _90724) -> ((A -> Prop) -> Prop) -> (A -> Prop) -> Prop))). Qed.
Lemma lem3518580 {_90715 _90724 A B : Type'} (_37171 : type171 A B) (h1 : _37171 = (term2742 A B)) : (term2741 _90715 _90724 A B) = (term2806 _90715 _90724 A B _37171).
Proof. exact (MK_COMB (@lem3518579 _90724 A) (@lem3518578 _90715 _90724 A B _37171 h1)). Qed.
Lemma lem3518581 {_90715 _90724 A B : Type'} (_37171 : type171 A B) : term2807 _90715 _90724 A B _37171.
Proof. exact (fun h0 : _37171 = (term2742 A B) => @lem3518580 _90715 _90724 A B _37171 h0). Qed.
Lemma lem3518582 {_90715 _90724 A B : Type'} : term2808 _90715 _90724 A B.
Proof. exact (fun _37171 : type171 A B => @lem3518581 _90715 _90724 A B _37171). Qed.
Lemma lem3518584 {_3603 : Type'} (P : Prop) (c : _3603) (Q : _3603 -> Prop) : term2146 _3603 P c Q.
Proof. exact (EQ_MP (@lem20230 _3603 P c Q) (@lem0)). Qed.
Lemma lem3518585 {A B : Type'} (P : Prop) (c : type171 A B) (Q : type70 A B) : term2809 A B P c Q.
Proof. exact (@lem3518584 (type171 A B) P c Q). Qed.
Lemma lem3518586 {_90715 _90724 A B : Type'} : term2810 _90715 _90724 A B.
Proof. exact (@lem3518585 A B (term2741 _90715 _90724 A B) (term2742 A B) (term2811 _90715 _90724 A B)). Qed.
Lemma lem3518587 {_90715 _90724 A B : Type'} (_37171 : type171 A B) : (term2812 _90715 _90724 A B _37171) = (term2806 _90715 _90724 A B _37171).
Proof. exact (eq_refl (term2812 _90715 _90724 A B _37171)). Qed.
Lemma lem3518588 {_90715 _90724 A B : Type'} : (term2813 _90715 _90724 A B) = (term2813 _90715 _90724 A B).
Proof. exact (eq_refl (term2813 _90715 _90724 A B)). Qed.
Lemma lem3518589 {_90715 _90724 A B : Type'} (_37171 : type171 A B) : ((term2741 _90715 _90724 A B) = (term2812 _90715 _90724 A B _37171)) = ((term2741 _90715 _90724 A B) = (term2806 _90715 _90724 A B _37171)).
Proof. exact (MK_COMB (@lem3518588 _90715 _90724 A B) (@lem3518587 _90715 _90724 A B _37171)). Qed.
Lemma lem3518590 {A B : Type'} (_37171 : type171 A B) : (term2814 A B _37171) = (term2814 A B _37171).
Proof. exact (eq_refl (term2814 A B _37171)). Qed.
Lemma lem3518591 {_90715 _90724 A B : Type'} (_37171 : type171 A B) : (term2815 _90715 _90724 A B _37171) = (term2807 _90715 _90724 A B _37171).
Proof. exact (MK_COMB (@lem3518590 A B _37171) (@lem3518589 _90715 _90724 A B _37171)). Qed.
Lemma lem3518592 {_90715 _90724 A B : Type'} : (term2816 _90715 _90724 A B) = (term2817 _90715 _90724 A B).
Proof. exact (fun_ext (fun _37171 : type171 A B => @lem3518591 _90715 _90724 A B _37171)). Qed.
Lemma lem3518593 {A B : Type'} : (@all (((A -> Prop) -> Prop) -> ((A -> Prop) -> B -> Prop) -> ((A -> Prop) -> Prop) -> (A -> Prop) -> Prop)) = (@all (((A -> Prop) -> Prop) -> ((A -> Prop) -> B -> Prop) -> ((A -> Prop) -> Prop) -> (A -> Prop) -> Prop)).
Proof. exact (eq_refl (@all (((A -> Prop) -> Prop) -> ((A -> Prop) -> B -> Prop) -> ((A -> Prop) -> Prop) -> (A -> Prop) -> Prop))). Qed.
Lemma lem3518594 {_90715 _90724 A B : Type'} : (term2818 _90715 _90724 A B) = (term2808 _90715 _90724 A B).
Proof. exact (MK_COMB (@lem3518593 A B) (@lem3518592 _90715 _90724 A B)). Qed.
Lemma lem3518595 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem3518596 {_90715 _90724 A B : Type'} : (term2819 _90715 _90724 A B) = (term2820 _90715 _90724 A B).
Proof. exact (MK_COMB (@lem3518595) (@lem3518594 _90715 _90724 A B)). Qed.
Lemma lem3518597 {_90715 _90724 A B : Type'} (_37171 : type171 A B) : (term2812 _90715 _90724 A B _37171) = (term2806 _90715 _90724 A B _37171).
Proof. exact (eq_refl (term2812 _90715 _90724 A B _37171)). Qed.
Lemma lem3518598 {A B : Type'} (_37171 : type171 A B) : (term2814 A B _37171) = (term2814 A B _37171).
Proof. exact (eq_refl (term2814 A B _37171)). Qed.
Lemma lem3518599 {_90715 _90724 A B : Type'} (_37171 : type171 A B) : (term2821 _90715 _90724 A B _37171) = (term2822 _90715 _90724 A B _37171).
Proof. exact (MK_COMB (@lem3518598 A B _37171) (@lem3518597 _90715 _90724 A B _37171)). Qed.
Lemma lem3518600 {_90715 _90724 A B : Type'} : (term2823 _90715 _90724 A B) = (term2824 _90715 _90724 A B).
Proof. exact (fun_ext (fun _37171 : type171 A B => @lem3518599 _90715 _90724 A B _37171)). Qed.
Lemma lem3518601 {A B : Type'} : (@all (((A -> Prop) -> Prop) -> ((A -> Prop) -> B -> Prop) -> ((A -> Prop) -> Prop) -> (A -> Prop) -> Prop)) = (@all (((A -> Prop) -> Prop) -> ((A -> Prop) -> B -> Prop) -> ((A -> Prop) -> Prop) -> (A -> Prop) -> Prop)).
Proof. exact (eq_refl (@all (((A -> Prop) -> Prop) -> ((A -> Prop) -> B -> Prop) -> ((A -> Prop) -> Prop) -> (A -> Prop) -> Prop))). Qed.
Lemma lem3518602 {_90715 _90724 A B : Type'} : (term2825 _90715 _90724 A B) = (term2826 _90715 _90724 A B).
Proof. exact (MK_COMB (@lem3518601 A B) (@lem3518600 _90715 _90724 A B)). Qed.
Lemma lem3518603 {_90715 _90724 A B : Type'} : (term2813 _90715 _90724 A B) = (term2813 _90715 _90724 A B).
Proof. exact (eq_refl (term2813 _90715 _90724 A B)). Qed.
Lemma lem3518604 {_90715 _90724 A B : Type'} : ((term2741 _90715 _90724 A B) = (term2825 _90715 _90724 A B)) = ((term2741 _90715 _90724 A B) = (term2826 _90715 _90724 A B)).
Proof. exact (MK_COMB (@lem3518603 _90715 _90724 A B) (@lem3518602 _90715 _90724 A B)). Qed.
Lemma lem3518605 {_90715 _90724 A B : Type'} : (term2810 _90715 _90724 A B) = (term2827 _90715 _90724 A B).
Proof. exact (MK_COMB (@lem3518596 _90715 _90724 A B) (@lem3518604 _90715 _90724 A B)). Qed.
Lemma lem3518606 {_90715 _90724 A B : Type'} : term2827 _90715 _90724 A B.
Proof. exact (EQ_MP (@lem3518605 _90715 _90724 A B) (@lem3518586 _90715 _90724 A B)). Qed.
Lemma lem3518607 {_90715 _90724 A B : Type'} : (term2741 _90715 _90724 A B) = (term2826 _90715 _90724 A B).
Proof. exact (@lem3518606 _90715 _90724 A B (@lem3518582 _90715 _90724 A B)). Qed.
Lemma lem3518609 {_3571 _3575 : Type'} (s : _3575 -> _3571) (t : _3575 -> _3571) : (s = (term2166 _3571 _3575 t)) = (term2167 _3571 _3575 s t).
Proof. exact (EQ_MP (@lem19792 _3571 _3575 s t) (@lem0)). Qed.
Lemma lem3518610 {A B : Type'} (s : type171 A B) (t : type171 A B) : (s = (term2828 A B t)) = (term2829 A B s t).
Proof. exact (@lem3518609 (type156 A B) (type686 A) s t). Qed.
Lemma lem3518611 {A B : Type'} (_37171 : type171 A B) : (_37171 = (term2830 A B)) = (term2831 A B _37171).
Proof. exact (@lem3518610 A B _37171 (term2742 A B)). Qed.
Lemma lem3518612 {A B : Type'} (u : type686 A) : (term2743 A B u) = (term2744 A B u).
Proof. exact (eq_refl (term2743 A B u)). Qed.
Lemma lem3518613 {A B : Type'} : (term2830 A B) = (term2742 A B).
Proof. exact (fun_ext (fun u : type686 A => @lem3518612 A B u)). Qed.
Lemma lem3518614 {A B : Type'} (_37171 : type171 A B) : (@eq (((A -> Prop) -> Prop) -> ((A -> Prop) -> B -> Prop) -> ((A -> Prop) -> Prop) -> (A -> Prop) -> Prop) _37171) = (@eq (((A -> Prop) -> Prop) -> ((A -> Prop) -> B -> Prop) -> ((A -> Prop) -> Prop) -> (A -> Prop) -> Prop) _37171).
Proof. exact (eq_refl (@eq (((A -> Prop) -> Prop) -> ((A -> Prop) -> B -> Prop) -> ((A -> Prop) -> Prop) -> (A -> Prop) -> Prop) _37171)). Qed.
Lemma lem3518615 {A B : Type'} (_37171 : type171 A B) : (_37171 = (term2830 A B)) = (_37171 = (term2742 A B)).
Proof. exact (MK_COMB (@lem3518614 A B _37171) (@lem3518613 A B)). Qed.
Lemma lem3518616 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem3518617 {A B : Type'} (_37171 : type171 A B) : (term2832 A B _37171) = (term2833 A B _37171).
Proof. exact (MK_COMB (@lem3518616) (@lem3518615 A B _37171)). Qed.
Lemma lem3518618 {A B : Type'} (u : type686 A) : (term2743 A B u) = (term2744 A B u).
Proof. exact (eq_refl (term2743 A B u)). Qed.
Lemma lem3518619 {A B : Type'} (_37171 : type171 A B) (u : type686 A) : (term2745 A B _37171 u) = (term2745 A B _37171 u).
Proof. exact (eq_refl (term2745 A B _37171 u)). Qed.
Lemma lem3518620 {A B : Type'} (_37171 : type171 A B) (u : type686 A) : ((_37171 u) = (term2743 A B u)) = ((_37171 u) = (term2744 A B u)).
Proof. exact (MK_COMB (@lem3518619 A B _37171 u) (@lem3518618 A B u)). Qed.
Lemma lem3518621 {A B : Type'} (_37171 : type171 A B) : (term2834 A B _37171) = (term2835 A B _37171).
Proof. exact (fun_ext (fun u : type686 A => @lem3518620 A B _37171 u)). Qed.
Lemma lem3518622 {A : Type'} : (@all ((A -> Prop) -> Prop)) = (@all ((A -> Prop) -> Prop)).
Proof. exact (eq_refl (@all ((A -> Prop) -> Prop))). Qed.
Lemma lem3518623 {A B : Type'} (_37171 : type171 A B) : (term2831 A B _37171) = (term2836 A B _37171).
Proof. exact (MK_COMB (@lem3518622 A) (@lem3518621 A B _37171)). Qed.
Lemma lem3518624 {A B : Type'} (_37171 : type171 A B) : ((_37171 = (term2830 A B)) = (term2831 A B _37171)) = ((_37171 = (term2742 A B)) = (term2836 A B _37171)).
Proof. exact (MK_COMB (@lem3518617 A B _37171) (@lem3518623 A B _37171)). Qed.
Lemma lem3518625 {A B : Type'} (_37171 : type171 A B) : (_37171 = (term2742 A B)) = (term2836 A B _37171).
Proof. exact (EQ_MP (@lem3518624 A B _37171) (@lem3518611 A B _37171)). Qed.
Lemma lem3518627 {_3571 _3575 : Type'} (s : _3575 -> _3571) (t : _3575 -> _3571) : (s = (term2166 _3571 _3575 t)) = (term2167 _3571 _3575 s t).
Proof. exact (EQ_MP (@lem19792 _3571 _3575 s t) (@lem0)). Qed.
Lemma lem3518628 {A B : Type'} (s : type156 A B) (t : type156 A B) : (s = (term2837 A B t)) = (term2838 A B s t).
Proof. exact (@lem3518627 (type174 A) (type678 A B) s t). Qed.
Lemma lem3518629 {A B : Type'} (_37171 : type171 A B) (u : type686 A) : ((_37171 u) = (term2839 A B u)) = (term2840 A B _37171 u).
Proof. exact (@lem3518628 A B (_37171 u) (term2744 A B u)). Qed.
Lemma lem3518630 {A B : Type'} (u : type686 A) (f : type678 A B) : (term2746 A B u f) = (term2747 A B u f).
Proof. exact (eq_refl (term2746 A B u f)). Qed.
Lemma lem3518631 {A B : Type'} (u : type686 A) : (term2839 A B u) = (term2744 A B u).
Proof. exact (fun_ext (fun f : type678 A B => @lem3518630 A B u f)). Qed.
Lemma lem3518632 {A B : Type'} (_37171 : type171 A B) (u : type686 A) : (term2745 A B _37171 u) = (term2745 A B _37171 u).
Proof. exact (eq_refl (term2745 A B _37171 u)). Qed.
Lemma lem3518633 {A B : Type'} (_37171 : type171 A B) (u : type686 A) : ((_37171 u) = (term2839 A B u)) = ((_37171 u) = (term2744 A B u)).
Proof. exact (MK_COMB (@lem3518632 A B _37171 u) (@lem3518631 A B u)). Qed.
Lemma lem3518634 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem3518635 {A B : Type'} (_37171 : type171 A B) (u : type686 A) : (term2841 A B _37171 u) = (term2842 A B _37171 u).
Proof. exact (MK_COMB (@lem3518634) (@lem3518633 A B _37171 u)). Qed.
Lemma lem3518636 {A B : Type'} (u : type686 A) (f : type678 A B) : (term2746 A B u f) = (term2747 A B u f).
Proof. exact (eq_refl (term2746 A B u f)). Qed.
Lemma lem3518637 {A B : Type'} (_37171 : type171 A B) (u : type686 A) (f : type678 A B) : (term2748 A B _37171 u f) = (term2748 A B _37171 u f).
Proof. exact (eq_refl (term2748 A B _37171 u f)). Qed.
Lemma lem3518638 {A B : Type'} (_37171 : type171 A B) (u : type686 A) (f : type678 A B) : ((_37171 u f) = (term2746 A B u f)) = ((_37171 u f) = (term2747 A B u f)).
Proof. exact (MK_COMB (@lem3518637 A B _37171 u f) (@lem3518636 A B u f)). Qed.
Lemma lem3518639 {A B : Type'} (_37171 : type171 A B) (u : type686 A) : (term2843 A B _37171 u) = (term2844 A B _37171 u).
Proof. exact (fun_ext (fun f : type678 A B => @lem3518638 A B _37171 u f)). Qed.
Lemma lem3518640 {A B : Type'} : (@all ((A -> Prop) -> B -> Prop)) = (@all ((A -> Prop) -> B -> Prop)).
Proof. exact (eq_refl (@all ((A -> Prop) -> B -> Prop))). Qed.
Lemma lem3518641 {A B : Type'} (_37171 : type171 A B) (u : type686 A) : (term2840 A B _37171 u) = (term2845 A B _37171 u).
Proof. exact (MK_COMB (@lem3518640 A B) (@lem3518639 A B _37171 u)). Qed.
Lemma lem3518642 {A B : Type'} (_37171 : type171 A B) (u : type686 A) : (((_37171 u) = (term2839 A B u)) = (term2840 A B _37171 u)) = (((_37171 u) = (term2744 A B u)) = (term2845 A B _37171 u)).
Proof. exact (MK_COMB (@lem3518635 A B _37171 u) (@lem3518641 A B _37171 u)). Qed.
Lemma lem3518643 {A B : Type'} (_37171 : type171 A B) (u : type686 A) : ((_37171 u) = (term2744 A B u)) = (term2845 A B _37171 u).
Proof. exact (EQ_MP (@lem3518642 A B _37171 u) (@lem3518629 A B _37171 u)). Qed.
Lemma lem3518645 {_3571 _3575 : Type'} (s : _3575 -> _3571) (t : _3575 -> _3571) : (s = (term2166 _3571 _3575 t)) = (term2167 _3571 _3575 s t).
Proof. exact (EQ_MP (@lem19792 _3571 _3575 s t) (@lem0)). Qed.
Lemma lem3518646 {A : Type'} (s : type174 A) (t : type174 A) : (s = (term2713 A t)) = (term2714 A s t).
Proof. exact (@lem3518645 (type686 A) (type686 A) s t). Qed.
Lemma lem3518647 {A B : Type'} (_37171 : type171 A B) (u : type686 A) (f : type678 A B) : ((_37171 u f) = (term2846 A B u f)) = (term2847 A B _37171 u f).
Proof. exact (@lem3518646 A (_37171 u f) (term2747 A B u f)). Qed.
Lemma lem3518648 {A B : Type'} (u : type686 A) (f : type678 A B) (t : type686 A) : (term2749 A B u f t) = (term2016 A B u f t).
Proof. exact (eq_refl (term2749 A B u f t)). Qed.
Lemma lem3518649 {A B : Type'} (u : type686 A) (f : type678 A B) : (term2846 A B u f) = (term2747 A B u f).
Proof. exact (fun_ext (fun t : type686 A => @lem3518648 A B u f t)). Qed.
Lemma lem3518650 {A B : Type'} (_37171 : type171 A B) (u : type686 A) (f : type678 A B) : (term2748 A B _37171 u f) = (term2748 A B _37171 u f).
Proof. exact (eq_refl (term2748 A B _37171 u f)). Qed.
Lemma lem3518651 {A B : Type'} (_37171 : type171 A B) (u : type686 A) (f : type678 A B) : ((_37171 u f) = (term2846 A B u f)) = ((_37171 u f) = (term2747 A B u f)).
Proof. exact (MK_COMB (@lem3518650 A B _37171 u f) (@lem3518649 A B u f)). Qed.
Lemma lem3518652 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem3518653 {A B : Type'} (_37171 : type171 A B) (u : type686 A) (f : type678 A B) : (term2848 A B _37171 u f) = (term2849 A B _37171 u f).
Proof. exact (MK_COMB (@lem3518652) (@lem3518651 A B _37171 u f)). Qed.
Lemma lem3518654 {A B : Type'} (u : type686 A) (f : type678 A B) (t : type686 A) : (term2749 A B u f t) = (term2016 A B u f t).
Proof. exact (eq_refl (term2749 A B u f t)). Qed.
Lemma lem3518655 {A B : Type'} (_37171 : type171 A B) (u : type686 A) (f : type678 A B) (t : type686 A) : (term2750 A B _37171 u f t) = (term2750 A B _37171 u f t).
Proof. exact (eq_refl (term2750 A B _37171 u f t)). Qed.
Lemma lem3518656 {A B : Type'} (_37171 : type171 A B) (u : type686 A) (f : type678 A B) (t : type686 A) : ((_37171 u f t) = (term2749 A B u f t)) = ((_37171 u f t) = (term2016 A B u f t)).
Proof. exact (MK_COMB (@lem3518655 A B _37171 u f t) (@lem3518654 A B u f t)). Qed.
Lemma lem3518657 {A B : Type'} (_37171 : type171 A B) (u : type686 A) (f : type678 A B) : (term2850 A B _37171 u f) = (term2851 A B _37171 u f).
Proof. exact (fun_ext (fun t : type686 A => @lem3518656 A B _37171 u f t)). Qed.
Lemma lem3518658 {A : Type'} : (@all ((A -> Prop) -> Prop)) = (@all ((A -> Prop) -> Prop)).
Proof. exact (eq_refl (@all ((A -> Prop) -> Prop))). Qed.
Lemma lem3518659 {A B : Type'} (_37171 : type171 A B) (u : type686 A) (f : type678 A B) : (term2847 A B _37171 u f) = (term2852 A B _37171 u f).
Proof. exact (MK_COMB (@lem3518658 A) (@lem3518657 A B _37171 u f)). Qed.
Lemma lem3518660 {A B : Type'} (_37171 : type171 A B) (u : type686 A) (f : type678 A B) : (((_37171 u f) = (term2846 A B u f)) = (term2847 A B _37171 u f)) = (((_37171 u f) = (term2747 A B u f)) = (term2852 A B _37171 u f)).
Proof. exact (MK_COMB (@lem3518653 A B _37171 u f) (@lem3518659 A B _37171 u f)). Qed.
Lemma lem3518661 {A B : Type'} (_37171 : type171 A B) (u : type686 A) (f : type678 A B) : ((_37171 u f) = (term2747 A B u f)) = (term2852 A B _37171 u f).
Proof. exact (EQ_MP (@lem3518660 A B _37171 u f) (@lem3518647 A B _37171 u f)). Qed.
Lemma lem3518663 {_3571 _3575 : Type'} (s : _3575 -> _3571) (t : _3575 -> _3571) : (s = (term2166 _3571 _3575 t)) = (term2167 _3571 _3575 s t).
Proof. exact (EQ_MP (@lem19792 _3571 _3575 s t) (@lem0)). Qed.
Lemma lem3518664 {A : Type'} (s : type686 A) (t : type686 A) : (s = (term304 A t)) = (term2722 A s t).
Proof. exact (@lem3518663 Prop (A -> Prop) s t). Qed.
Lemma lem3518665 {A B : Type'} (_37171 : type171 A B) (u : type686 A) (f : type678 A B) (t : type686 A) : ((_37171 u f t) = (term2853 A B u f t)) = (term2854 A B _37171 u f t).
Proof. exact (@lem3518664 A (_37171 u f t) (term2016 A B u f t)). Qed.
Lemma lem3518666 {A B : Type'} (GEN_PVAR_84 : A -> Prop) (u : type686 A) (f : type678 A B) (t : type686 A) : (term2855 A B u f t GEN_PVAR_84) = (term2015 A B GEN_PVAR_84 u f t).
Proof. exact (eq_refl (term2855 A B u f t GEN_PVAR_84)). Qed.
Lemma lem3518667 {A B : Type'} (u : type686 A) (f : type678 A B) (t : type686 A) : (term2853 A B u f t) = (term2016 A B u f t).
Proof. exact (fun_ext (fun GEN_PVAR_84 : A -> Prop => @lem3518666 A B GEN_PVAR_84 u f t)). Qed.
Lemma lem3518668 {A B : Type'} (_37171 : type171 A B) (u : type686 A) (f : type678 A B) (t : type686 A) : (term2750 A B _37171 u f t) = (term2750 A B _37171 u f t).
Proof. exact (eq_refl (term2750 A B _37171 u f t)). Qed.
Lemma lem3518669 {A B : Type'} (_37171 : type171 A B) (u : type686 A) (f : type678 A B) (t : type686 A) : ((_37171 u f t) = (term2853 A B u f t)) = ((_37171 u f t) = (term2016 A B u f t)).
Proof. exact (MK_COMB (@lem3518668 A B _37171 u f t) (@lem3518667 A B u f t)). Qed.
Lemma lem3518670 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem3518671 {A B : Type'} (_37171 : type171 A B) (u : type686 A) (f : type678 A B) (t : type686 A) : (term2856 A B _37171 u f t) = (term2857 A B _37171 u f t).
Proof. exact (MK_COMB (@lem3518670) (@lem3518669 A B _37171 u f t)). Qed.
Lemma lem3518672 {A B : Type'} (GEN_PVAR_84 : A -> Prop) (u : type686 A) (f : type678 A B) (t : type686 A) : (term2855 A B u f t GEN_PVAR_84) = (term2015 A B GEN_PVAR_84 u f t).
Proof. exact (eq_refl (term2855 A B u f t GEN_PVAR_84)). Qed.
Lemma lem3518673 {A B : Type'} (_37171 : type171 A B) (u : type686 A) (f : type678 A B) (t : type686 A) (GEN_PVAR_84 : A -> Prop) : (term2858 A B _37171 u f t GEN_PVAR_84) = (term2858 A B _37171 u f t GEN_PVAR_84).
Proof. exact (eq_refl (term2858 A B _37171 u f t GEN_PVAR_84)). Qed.
Lemma lem3518674 {A B : Type'} (_37171 : type171 A B) (GEN_PVAR_84 : A -> Prop) (u : type686 A) (f : type678 A B) (t : type686 A) : ((_37171 u f t GEN_PVAR_84) = (term2855 A B u f t GEN_PVAR_84)) = ((_37171 u f t GEN_PVAR_84) = (term2015 A B GEN_PVAR_84 u f t)).
Proof. exact (MK_COMB (@lem3518673 A B _37171 u f t GEN_PVAR_84) (@lem3518672 A B GEN_PVAR_84 u f t)). Qed.
Lemma lem3518675 {A B : Type'} (_37171 : type171 A B) (u : type686 A) (f : type678 A B) (t : type686 A) : (term2859 A B _37171 u f t) = (term2860 A B _37171 u f t).
Proof. exact (fun_ext (fun GEN_PVAR_84 : A -> Prop => @lem3518674 A B _37171 GEN_PVAR_84 u f t)). Qed.
Lemma lem3518676 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem3518677 {A B : Type'} (_37171 : type171 A B) (u : type686 A) (f : type678 A B) (t : type686 A) : (term2854 A B _37171 u f t) = (term2861 A B _37171 u f t).
Proof. exact (MK_COMB (@lem3518676 A) (@lem3518675 A B _37171 u f t)). Qed.
Lemma lem3518678 {A B : Type'} (_37171 : type171 A B) (u : type686 A) (f : type678 A B) (t : type686 A) : (((_37171 u f t) = (term2853 A B u f t)) = (term2854 A B _37171 u f t)) = (((_37171 u f t) = (term2016 A B u f t)) = (term2861 A B _37171 u f t)).
Proof. exact (MK_COMB (@lem3518671 A B _37171 u f t) (@lem3518677 A B _37171 u f t)). Qed.
Lemma lem3518679 {A B : Type'} (_37171 : type171 A B) (u : type686 A) (f : type678 A B) (t : type686 A) : ((_37171 u f t) = (term2016 A B u f t)) = (term2861 A B _37171 u f t).
Proof. exact (EQ_MP (@lem3518678 A B _37171 u f t) (@lem3518665 A B _37171 u f t)). Qed.
Lemma lem3518680 {A B : Type'} (_37171 : type171 A B) (GEN_PVAR_84 : A -> Prop) (u : type686 A) (f : type678 A B) (t : type686 A) : ((_37171 u f t GEN_PVAR_84) = (term2015 A B GEN_PVAR_84 u f t)) = ((_37171 u f t GEN_PVAR_84) = (term2015 A B GEN_PVAR_84 u f t)).
Proof. exact (eq_refl ((_37171 u f t GEN_PVAR_84) = (term2015 A B GEN_PVAR_84 u f t))). Qed.
Lemma lem3518681 {A B : Type'} (_37171 : type171 A B) (u : type686 A) (f : type678 A B) (t : type686 A) : (term2860 A B _37171 u f t) = (term2860 A B _37171 u f t).
Proof. exact (fun_ext (fun GEN_PVAR_84 : A -> Prop => @lem3518680 A B _37171 GEN_PVAR_84 u f t)). Qed.
Lemma lem3518682 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem3518683 {A B : Type'} (_37171 : type171 A B) (u : type686 A) (f : type678 A B) (t : type686 A) : (term2861 A B _37171 u f t) = (term2861 A B _37171 u f t).
Proof. exact (MK_COMB (@lem3518682 A) (@lem3518681 A B _37171 u f t)). Qed.
Lemma lem3518684 {A B : Type'} (_37171 : type171 A B) (u : type686 A) (f : type678 A B) (t : type686 A) : ((_37171 u f t) = (term2016 A B u f t)) = (term2861 A B _37171 u f t).
Proof. exact (TRANS (@lem3518679 A B _37171 u f t) (@lem3518683 A B _37171 u f t)). Qed.
Lemma lem3518685 {A B : Type'} (_37171 : type171 A B) (u : type686 A) (f : type678 A B) : (term2851 A B _37171 u f) = (term2862 A B _37171 u f).
Proof. exact (fun_ext (fun t : type686 A => @lem3518684 A B _37171 u f t)). Qed.
Lemma lem3518686 {A : Type'} : (@all ((A -> Prop) -> Prop)) = (@all ((A -> Prop) -> Prop)).
Proof. exact (eq_refl (@all ((A -> Prop) -> Prop))). Qed.
Lemma lem3518687 {A B : Type'} (_37171 : type171 A B) (u : type686 A) (f : type678 A B) : (term2852 A B _37171 u f) = (term2863 A B _37171 u f).
Proof. exact (MK_COMB (@lem3518686 A) (@lem3518685 A B _37171 u f)). Qed.
Lemma lem3518688 {A B : Type'} (_37171 : type171 A B) (u : type686 A) (f : type678 A B) : ((_37171 u f) = (term2747 A B u f)) = (term2863 A B _37171 u f).
Proof. exact (TRANS (@lem3518661 A B _37171 u f) (@lem3518687 A B _37171 u f)). Qed.
Lemma lem3518689 {A B : Type'} (_37171 : type171 A B) (u : type686 A) : (term2844 A B _37171 u) = (term2864 A B _37171 u).
Proof. exact (fun_ext (fun f : type678 A B => @lem3518688 A B _37171 u f)). Qed.
Lemma lem3518690 {A B : Type'} : (@all ((A -> Prop) -> B -> Prop)) = (@all ((A -> Prop) -> B -> Prop)).
Proof. exact (eq_refl (@all ((A -> Prop) -> B -> Prop))). Qed.
Lemma lem3518691 {A B : Type'} (_37171 : type171 A B) (u : type686 A) : (term2845 A B _37171 u) = (term2865 A B _37171 u).
Proof. exact (MK_COMB (@lem3518690 A B) (@lem3518689 A B _37171 u)). Qed.
Lemma lem3518692 {A B : Type'} (_37171 : type171 A B) (u : type686 A) : ((_37171 u) = (term2744 A B u)) = (term2865 A B _37171 u).
Proof. exact (TRANS (@lem3518643 A B _37171 u) (@lem3518691 A B _37171 u)). Qed.
Lemma lem3518693 {A B : Type'} (_37171 : type171 A B) : (term2835 A B _37171) = (term2866 A B _37171).
Proof. exact (fun_ext (fun u : type686 A => @lem3518692 A B _37171 u)). Qed.
Lemma lem3518694 {A : Type'} : (@all ((A -> Prop) -> Prop)) = (@all ((A -> Prop) -> Prop)).
Proof. exact (eq_refl (@all ((A -> Prop) -> Prop))). Qed.
Lemma lem3518695 {A B : Type'} (_37171 : type171 A B) : (term2836 A B _37171) = (term2867 A B _37171).
Proof. exact (MK_COMB (@lem3518694 A) (@lem3518693 A B _37171)). Qed.
Lemma lem3518696 {A B : Type'} (_37171 : type171 A B) : (_37171 = (term2742 A B)) = (term2867 A B _37171).
Proof. exact (TRANS (@lem3518625 A B _37171) (@lem3518695 A B _37171)). Qed.
Lemma lem3518697 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem3518698 {A B : Type'} (_37171 : type171 A B) : (term2814 A B _37171) = (term2868 A B _37171).
Proof. exact (MK_COMB (@lem3518697) (@lem3518696 A B _37171)). Qed.
Lemma lem3518699 {_90715 _90724 A B : Type'} (_37171 : type171 A B) : (term2806 _90715 _90724 A B _37171) = (term2806 _90715 _90724 A B _37171).
Proof. exact (eq_refl (term2806 _90715 _90724 A B _37171)). Qed.
Lemma lem3518700 {_90715 _90724 A B : Type'} (_37171 : type171 A B) : (term2822 _90715 _90724 A B _37171) = (term2869 _90715 _90724 A B _37171).
Proof. exact (MK_COMB (@lem3518698 A B _37171) (@lem3518699 _90715 _90724 A B _37171)). Qed.
Lemma lem3518701 {_90715 _90724 A B : Type'} : (term2824 _90715 _90724 A B) = (term2870 _90715 _90724 A B).
Proof. exact (fun_ext (fun _37171 : type171 A B => @lem3518700 _90715 _90724 A B _37171)). Qed.
Lemma lem3518702 {A B : Type'} : (@all (((A -> Prop) -> Prop) -> ((A -> Prop) -> B -> Prop) -> ((A -> Prop) -> Prop) -> (A -> Prop) -> Prop)) = (@all (((A -> Prop) -> Prop) -> ((A -> Prop) -> B -> Prop) -> ((A -> Prop) -> Prop) -> (A -> Prop) -> Prop)).
Proof. exact (eq_refl (@all (((A -> Prop) -> Prop) -> ((A -> Prop) -> B -> Prop) -> ((A -> Prop) -> Prop) -> (A -> Prop) -> Prop))). Qed.
Lemma lem3518703 {_90715 _90724 A B : Type'} : (term2826 _90715 _90724 A B) = (term2871 _90715 _90724 A B).
Proof. exact (MK_COMB (@lem3518702 A B) (@lem3518701 _90715 _90724 A B)). Qed.
Lemma lem3518704 {_90715 _90724 A B : Type'} : (term2813 _90715 _90724 A B) = (term2813 _90715 _90724 A B).
Proof. exact (eq_refl (term2813 _90715 _90724 A B)). Qed.
Lemma lem3518705 {_90715 _90724 A B : Type'} : ((term2741 _90715 _90724 A B) = (term2826 _90715 _90724 A B)) = ((term2741 _90715 _90724 A B) = (term2871 _90715 _90724 A B)).
Proof. exact (MK_COMB (@lem3518704 _90715 _90724 A B) (@lem3518703 _90715 _90724 A B)). Qed.
Lemma lem3518708 {_90715 _90724 A B : Type'} : (term2741 _90715 _90724 A B) = (term2871 _90715 _90724 A B).
Proof. exact (EQ_MP (@lem3518705 _90715 _90724 A B) (@lem3518607 _90715 _90724 A B)). Qed.
Lemma lem3518709 {_90715 _90724 A B : Type'} : (term2611 _90715 _90724 A B) = (term2871 _90715 _90724 A B).
Proof. exact (TRANS (@lem3517328 _90715 _90724 A B) (@lem3518708 _90715 _90724 A B)). Qed.
Lemma lem3518710 {_90715 _90724 A B : Type'} : (term2557 _90715 _90724 A B) = (term2871 _90715 _90724 A B).
Proof. exact (TRANS (@lem3515983 _90715 _90724 A B) (@lem3518709 _90715 _90724 A B)). Qed.
Lemma lem3518711 {_90715 _90724 A B : Type'} : (term2439 _90715 _90724 A B) = (term2871 _90715 _90724 A B).
Proof. exact (TRANS (@lem3514671 _90715 _90724 A B) (@lem3518710 _90715 _90724 A B)). Qed.
Lemma lem3518712 {_90715 _90724 A B : Type'} : (term2325 _90715 _90724 A B) = (term2871 _90715 _90724 A B).
Proof. exact (TRANS (@lem3513392 _90715 _90724 A B) (@lem3518711 _90715 _90724 A B)). Qed.
Lemma lem3518713 {_90715 _90724 A B : Type'} : (term2284 _90715 _90724 A B) = (term2871 _90715 _90724 A B).
Proof. exact (TRANS (@lem3512149 _90715 _90724 A B) (@lem3518712 _90715 _90724 A B)). Qed.
Lemma lem3518714 {_90715 _90724 A B : Type'} : (term2247 _90715 _90724 A B) = (term2871 _90715 _90724 A B).
Proof. exact (TRANS (@lem3510936 _90715 _90724 A B) (@lem3518713 _90715 _90724 A B)). Qed.
Lemma lem3518715 {_90715 _90724 A B : Type'} : (term2214 _90715 _90724 A B) = (term2871 _90715 _90724 A B).
Proof. exact (TRANS (@lem3509756 _90715 _90724 A B) (@lem3518714 _90715 _90724 A B)). Qed.
Lemma lem3518716 {_90715 _90724 A B : Type'} : (term2001 _90715 _90724 A B) = (term2871 _90715 _90724 A B).
Proof. exact (TRANS (@lem3508609 _90715 _90724 A B) (@lem3518715 _90715 _90724 A B)). Qed.
Lemma lem3518717 {_90715 _90724 A B : Type'} : (term2000 _90715 _90724 A B) = (term2871 _90715 _90724 A B).
Proof. exact (TRANS (@lem3507499 _90715 _90724 A B) (@lem3518716 _90715 _90724 A B)). Qed.
Lemma lem3518718 {A B : Type'} (f : type678 A B) (g : type180 A) : ((term2011 A B f g) = (term2012 A B f g)) = ((term2011 A B f g) = (term2012 A B f g)).
Proof. exact (eq_refl ((term2011 A B f g) = (term2012 A B f g))). Qed.
Lemma lem3518727 {A B : Type'} (g : type180 A) (_37171 : type171 A B) (u : type686 A) (f : type678 A B) (t : type686 A) : (term2755 A B g _37171 u f t) = (term2755 A B g _37171 u f t).
Proof. exact (eq_refl (term2755 A B g _37171 u f t)). Qed.
Lemma lem3518728 {A B : Type'} (g : type180 A) (_37171 : type171 A B) (u : type686 A) (f : type678 A B) : (term2756 A B g _37171 u f) = (term2756 A B g _37171 u f).
Proof. exact (fun_ext (fun t : type686 A => @lem3518727 A B g _37171 u f t)). Qed.
Lemma lem3518729 {A : Type'} : (@all ((A -> Prop) -> Prop)) = (@all ((A -> Prop) -> Prop)).
Proof. exact (eq_refl (@all ((A -> Prop) -> Prop))). Qed.
Lemma lem3518730 {A B : Type'} (g : type180 A) (_37171 : type171 A B) (u : type686 A) (f : type678 A B) : (term2757 A B g _37171 u f) = (term2757 A B g _37171 u f).
Proof. exact (MK_COMB (@lem3518729 A) (@lem3518728 A B g _37171 u f)). Qed.
Lemma lem3518735 {A : Type'} (g : type180 A) : (term2026 A g) = (term2026 A g).
Proof. exact (eq_refl (term2026 A g)). Qed.
Lemma lem3518736 {A B : Type'} (g : type180 A) (_37171 : type171 A B) (u : type686 A) (f : type678 A B) : (term2758 A B g _37171 u f) = (term2758 A B g _37171 u f).
Proof. exact (MK_COMB (@lem3518735 A g) (@lem3518730 A B g _37171 u f)). Qed.
Lemma lem3518737 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem3518738 {A B : Type'} (g : type180 A) (_37171 : type171 A B) (u : type686 A) (f : type678 A B) : (term2759 A B g _37171 u f) = (term2759 A B g _37171 u f).
Proof. exact (MK_COMB (@lem3518737) (@lem3518736 A B g _37171 u f)). Qed.
Lemma lem3518739 {A B : Type'} (_37171 : type171 A B) (u : type686 A) (f : type678 A B) (g : type180 A) : (term2760 A B _37171 u f g) = (term2760 A B _37171 u f g).
Proof. exact (MK_COMB (@lem3518738 A B g _37171 u f) (@lem3518718 A B f g)). Qed.
Lemma lem3518740 {A B : Type'} (_37171 : type171 A B) (u : type686 A) (f : type678 A B) : (term2761 A B _37171 u f) = (term2761 A B _37171 u f).
Proof. exact (fun_ext (fun g : type180 A => @lem3518739 A B _37171 u f g)). Qed.
Lemma lem3518741 {A : Type'} : (@all (((A -> Prop) -> Prop) -> Prop)) = (@all (((A -> Prop) -> Prop) -> Prop)).
Proof. exact (eq_refl (@all (((A -> Prop) -> Prop) -> Prop))). Qed.
Lemma lem3518742 {A B : Type'} (_37171 : type171 A B) (u : type686 A) (f : type678 A B) : (term2762 A B _37171 u f) = (term2762 A B _37171 u f).
Proof. exact (MK_COMB (@lem3518741 A) (@lem3518740 A B _37171 u f)). Qed.
Lemma lem3518743 {A B : Type'} (_37171 : type171 A B) (u : type686 A) : (term2763 A B _37171 u) = (term2763 A B _37171 u).
Proof. exact (fun_ext (fun f : type678 A B => @lem3518742 A B _37171 u f)). Qed.
Lemma lem3518744 {A B : Type'} : (@all ((A -> Prop) -> B -> Prop)) = (@all ((A -> Prop) -> B -> Prop)).
Proof. exact (eq_refl (@all ((A -> Prop) -> B -> Prop))). Qed.
Lemma lem3518745 {A B : Type'} (_37171 : type171 A B) (u : type686 A) : (term2764 A B _37171 u) = (term2764 A B _37171 u).
Proof. exact (MK_COMB (@lem3518744 A B) (@lem3518743 A B _37171 u)). Qed.
Lemma lem3518746 {A B : Type'} (_37171 : type171 A B) : (term2765 A B _37171) = (term2765 A B _37171).
Proof. exact (fun_ext (fun u : type686 A => @lem3518745 A B _37171 u)). Qed.
Lemma lem3518747 {A : Type'} : (@all ((A -> Prop) -> Prop)) = (@all ((A -> Prop) -> Prop)).
Proof. exact (eq_refl (@all ((A -> Prop) -> Prop))). Qed.
Lemma lem3518748 {A B : Type'} (_37171 : type171 A B) : (term2766 A B _37171) = (term2766 A B _37171).
Proof. exact (MK_COMB (@lem3518747 A) (@lem3518746 A B _37171)). Qed.
Lemma lem3518749 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem3518750 {A B : Type'} (_37171 : type171 A B) : (term2767 A B _37171) = (term2767 A B _37171).
Proof. exact (MK_COMB (@lem3518749) (@lem3518748 A B _37171)). Qed.
Lemma lem3518751 {_90724 A : Type'} (f : type862 _90724 A) (g : type180 A) : ((term2035 _90724 A f g) = (term2036 _90724 A f g)) = ((term2035 _90724 A f g) = (term2036 _90724 A f g)).
Proof. exact (eq_refl ((term2035 _90724 A f g) = (term2036 _90724 A f g))). Qed.
Lemma lem3518760 {_90724 A : Type'} (g : type180 A) (_37170 : type235 _90724 A) (u : type686 A) (f : type862 _90724 A) (t : type686 A) : (term2625 _90724 A g _37170 u f t) = (term2625 _90724 A g _37170 u f t).
Proof. exact (eq_refl (term2625 _90724 A g _37170 u f t)). Qed.
Lemma lem3518761 {_90724 A : Type'} (g : type180 A) (_37170 : type235 _90724 A) (u : type686 A) (f : type862 _90724 A) : (term2626 _90724 A g _37170 u f) = (term2626 _90724 A g _37170 u f).
Proof. exact (fun_ext (fun t : type686 A => @lem3518760 _90724 A g _37170 u f t)). Qed.
Lemma lem3518762 {A : Type'} : (@all ((A -> Prop) -> Prop)) = (@all ((A -> Prop) -> Prop)).
Proof. exact (eq_refl (@all ((A -> Prop) -> Prop))). Qed.
Lemma lem3518763 {_90724 A : Type'} (g : type180 A) (_37170 : type235 _90724 A) (u : type686 A) (f : type862 _90724 A) : (term2627 _90724 A g _37170 u f) = (term2627 _90724 A g _37170 u f).
Proof. exact (MK_COMB (@lem3518762 A) (@lem3518761 _90724 A g _37170 u f)). Qed.
Lemma lem3518768 {A : Type'} (g : type180 A) : (term2026 A g) = (term2026 A g).
Proof. exact (eq_refl (term2026 A g)). Qed.
Lemma lem3518769 {_90724 A : Type'} (g : type180 A) (_37170 : type235 _90724 A) (u : type686 A) (f : type862 _90724 A) : (term2628 _90724 A g _37170 u f) = (term2628 _90724 A g _37170 u f).
Proof. exact (MK_COMB (@lem3518768 A g) (@lem3518763 _90724 A g _37170 u f)). Qed.
Lemma lem3518770 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem3518771 {_90724 A : Type'} (g : type180 A) (_37170 : type235 _90724 A) (u : type686 A) (f : type862 _90724 A) : (term2629 _90724 A g _37170 u f) = (term2629 _90724 A g _37170 u f).
Proof. exact (MK_COMB (@lem3518770) (@lem3518769 _90724 A g _37170 u f)). Qed.
Lemma lem3518772 {_90724 A : Type'} (_37170 : type235 _90724 A) (u : type686 A) (f : type862 _90724 A) (g : type180 A) : (term2630 _90724 A _37170 u f g) = (term2630 _90724 A _37170 u f g).
Proof. exact (MK_COMB (@lem3518771 _90724 A g _37170 u f) (@lem3518751 _90724 A f g)). Qed.
Lemma lem3518773 {_90724 A : Type'} (_37170 : type235 _90724 A) (u : type686 A) (f : type862 _90724 A) : (term2631 _90724 A _37170 u f) = (term2631 _90724 A _37170 u f).
Proof. exact (fun_ext (fun g : type180 A => @lem3518772 _90724 A _37170 u f g)). Qed.
Lemma lem3518774 {A : Type'} : (@all (((A -> Prop) -> Prop) -> Prop)) = (@all (((A -> Prop) -> Prop) -> Prop)).
Proof. exact (eq_refl (@all (((A -> Prop) -> Prop) -> Prop))). Qed.
Lemma lem3518775 {_90724 A : Type'} (_37170 : type235 _90724 A) (u : type686 A) (f : type862 _90724 A) : (term2632 _90724 A _37170 u f) = (term2632 _90724 A _37170 u f).
Proof. exact (MK_COMB (@lem3518774 A) (@lem3518773 _90724 A _37170 u f)). Qed.
Lemma lem3518776 {_90724 A : Type'} (_37170 : type235 _90724 A) (u : type686 A) : (term2633 _90724 A _37170 u) = (term2633 _90724 A _37170 u).
Proof. exact (fun_ext (fun f : type862 _90724 A => @lem3518775 _90724 A _37170 u f)). Qed.
Lemma lem3518777 {_90724 A : Type'} : (@all ((A -> Prop) -> _90724)) = (@all ((A -> Prop) -> _90724)).
Proof. exact (eq_refl (@all ((A -> Prop) -> _90724))). Qed.
Lemma lem3518778 {_90724 A : Type'} (_37170 : type235 _90724 A) (u : type686 A) : (term2634 _90724 A _37170 u) = (term2634 _90724 A _37170 u).
Proof. exact (MK_COMB (@lem3518777 _90724 A) (@lem3518776 _90724 A _37170 u)). Qed.
Lemma lem3518779 {_90724 A : Type'} (_37170 : type235 _90724 A) : (term2635 _90724 A _37170) = (term2635 _90724 A _37170).
Proof. exact (fun_ext (fun u : type686 A => @lem3518778 _90724 A _37170 u)). Qed.
Lemma lem3518780 {A : Type'} : (@all ((A -> Prop) -> Prop)) = (@all ((A -> Prop) -> Prop)).
Proof. exact (eq_refl (@all ((A -> Prop) -> Prop))). Qed.
Lemma lem3518781 {_90724 A : Type'} (_37170 : type235 _90724 A) : (term2636 _90724 A _37170) = (term2636 _90724 A _37170).
Proof. exact (MK_COMB (@lem3518780 A) (@lem3518779 _90724 A _37170)). Qed.
Lemma lem3518782 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem3518783 {_90724 A : Type'} (_37170 : type235 _90724 A) : (term2637 _90724 A _37170) = (term2637 _90724 A _37170).
Proof. exact (MK_COMB (@lem3518782) (@lem3518781 _90724 A _37170)). Qed.
Lemma lem3518784 {_90724 A B : Type'} (_37170 : type235 _90724 A) (_37171 : type171 A B) : (term2768 _90724 A B _37170 _37171) = (term2768 _90724 A B _37170 _37171).
Proof. exact (MK_COMB (@lem3518783 _90724 A _37170) (@lem3518750 A B _37171)). Qed.
Lemma lem3518785 {_90724 B : Type'} (f : B -> _90724) (g : type686 B) : ((term2056 _90724 B f g) = (term2057 _90724 B f g)) = ((term2056 _90724 B f g) = (term2057 _90724 B f g)).
Proof. exact (eq_refl ((term2056 _90724 B f g) = (term2057 _90724 B f g))). Qed.
Lemma lem3518794 {_90724 B : Type'} (g : type686 B) (_37169 : type852 _90724 B) (u : B -> Prop) (f : B -> _90724) (t : B -> Prop) : (term2453 _90724 B g _37169 u f t) = (term2453 _90724 B g _37169 u f t).
Proof. exact (eq_refl (term2453 _90724 B g _37169 u f t)). Qed.
Lemma lem3518795 {_90724 B : Type'} (g : type686 B) (_37169 : type852 _90724 B) (u : B -> Prop) (f : B -> _90724) : (term2454 _90724 B g _37169 u f) = (term2454 _90724 B g _37169 u f).
Proof. exact (fun_ext (fun t : B -> Prop => @lem3518794 _90724 B g _37169 u f t)). Qed.
Lemma lem3518796 {B : Type'} : (@all (B -> Prop)) = (@all (B -> Prop)).
Proof. exact (eq_refl (@all (B -> Prop))). Qed.
Lemma lem3518797 {_90724 B : Type'} (g : type686 B) (_37169 : type852 _90724 B) (u : B -> Prop) (f : B -> _90724) : (term2455 _90724 B g _37169 u f) = (term2455 _90724 B g _37169 u f).
Proof. exact (MK_COMB (@lem3518796 B) (@lem3518795 _90724 B g _37169 u f)). Qed.
Lemma lem3518802 {B : Type'} (g : type686 B) : (term42 B g) = (term42 B g).
Proof. exact (eq_refl (term42 B g)). Qed.
Lemma lem3518803 {_90724 B : Type'} (g : type686 B) (_37169 : type852 _90724 B) (u : B -> Prop) (f : B -> _90724) : (term2456 _90724 B g _37169 u f) = (term2456 _90724 B g _37169 u f).
Proof. exact (MK_COMB (@lem3518802 B g) (@lem3518797 _90724 B g _37169 u f)). Qed.
Lemma lem3518804 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem3518805 {_90724 B : Type'} (g : type686 B) (_37169 : type852 _90724 B) (u : B -> Prop) (f : B -> _90724) : (term2457 _90724 B g _37169 u f) = (term2457 _90724 B g _37169 u f).
Proof. exact (MK_COMB (@lem3518804) (@lem3518803 _90724 B g _37169 u f)). Qed.
Lemma lem3518806 {_90724 B : Type'} (_37169 : type852 _90724 B) (u : B -> Prop) (f : B -> _90724) (g : type686 B) : (term2458 _90724 B _37169 u f g) = (term2458 _90724 B _37169 u f g).
Proof. exact (MK_COMB (@lem3518805 _90724 B g _37169 u f) (@lem3518785 _90724 B f g)). Qed.
Lemma lem3518807 {_90724 B : Type'} (_37169 : type852 _90724 B) (u : B -> Prop) (f : B -> _90724) : (term2459 _90724 B _37169 u f) = (term2459 _90724 B _37169 u f).
Proof. exact (fun_ext (fun g : type686 B => @lem3518806 _90724 B _37169 u f g)). Qed.
Lemma lem3518808 {B : Type'} : (@all ((B -> Prop) -> Prop)) = (@all ((B -> Prop) -> Prop)).
Proof. exact (eq_refl (@all ((B -> Prop) -> Prop))). Qed.
Lemma lem3518809 {_90724 B : Type'} (_37169 : type852 _90724 B) (u : B -> Prop) (f : B -> _90724) : (term2460 _90724 B _37169 u f) = (term2460 _90724 B _37169 u f).
Proof. exact (MK_COMB (@lem3518808 B) (@lem3518807 _90724 B _37169 u f)). Qed.
Lemma lem3518810 {_90724 B : Type'} (_37169 : type852 _90724 B) (u : B -> Prop) : (term2461 _90724 B _37169 u) = (term2461 _90724 B _37169 u).
Proof. exact (fun_ext (fun f : B -> _90724 => @lem3518809 _90724 B _37169 u f)). Qed.
Lemma lem3518811 {_90724 B : Type'} : (@all (B -> _90724)) = (@all (B -> _90724)).
Proof. exact (eq_refl (@all (B -> _90724))). Qed.
Lemma lem3518812 {_90724 B : Type'} (_37169 : type852 _90724 B) (u : B -> Prop) : (term2462 _90724 B _37169 u) = (term2462 _90724 B _37169 u).
Proof. exact (MK_COMB (@lem3518811 _90724 B) (@lem3518810 _90724 B _37169 u)). Qed.
Lemma lem3518813 {_90724 B : Type'} (_37169 : type852 _90724 B) : (term2463 _90724 B _37169) = (term2463 _90724 B _37169).
Proof. exact (fun_ext (fun u : B -> Prop => @lem3518812 _90724 B _37169 u)). Qed.
Lemma lem3518814 {B : Type'} : (@all (B -> Prop)) = (@all (B -> Prop)).
Proof. exact (eq_refl (@all (B -> Prop))). Qed.
Lemma lem3518815 {_90724 B : Type'} (_37169 : type852 _90724 B) : (term2464 _90724 B _37169) = (term2464 _90724 B _37169).
Proof. exact (MK_COMB (@lem3518814 B) (@lem3518813 _90724 B _37169)). Qed.
Lemma lem3518816 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem3518817 {_90724 B : Type'} (_37169 : type852 _90724 B) : (term2465 _90724 B _37169) = (term2465 _90724 B _37169).
Proof. exact (MK_COMB (@lem3518816) (@lem3518815 _90724 B _37169)). Qed.
Lemma lem3518818 {_90724 A B : Type'} (_37169 : type852 _90724 B) (_37170 : type235 _90724 A) (_37171 : type171 A B) : (term2769 _90724 A B _37169 _37170 _37171) = (term2769 _90724 A B _37169 _37170 _37171).
Proof. exact (MK_COMB (@lem3518817 _90724 B _37169) (@lem3518784 _90724 A B _37170 _37171)). Qed.
Lemma lem3518819 {A B : Type'} (f : A -> B) (g : type686 A) : ((term49 A B f g) = (term50 A B f g)) = ((term49 A B f g) = (term50 A B f g)).
Proof. exact (eq_refl ((term49 A B f g) = (term50 A B f g))). Qed.
Lemma lem3518828 {A B : Type'} (g : type686 A) (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) (t : A -> Prop) : (term2081 A B g _37163 u f t) = (term2081 A B g _37163 u f t).
Proof. exact (eq_refl (term2081 A B g _37163 u f t)). Qed.
Lemma lem3518829 {A B : Type'} (g : type686 A) (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) : (term2082 A B g _37163 u f) = (term2082 A B g _37163 u f).
Proof. exact (fun_ext (fun t : A -> Prop => @lem3518828 A B g _37163 u f t)). Qed.
Lemma lem3518830 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem3518831 {A B : Type'} (g : type686 A) (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) : (term2083 A B g _37163 u f) = (term2083 A B g _37163 u f).
Proof. exact (MK_COMB (@lem3518830 A) (@lem3518829 A B g _37163 u f)). Qed.
Lemma lem3518836 {A : Type'} (g : type686 A) : (term42 A g) = (term42 A g).
Proof. exact (eq_refl (term42 A g)). Qed.
Lemma lem3518837 {A B : Type'} (g : type686 A) (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) : (term2084 A B g _37163 u f) = (term2084 A B g _37163 u f).
Proof. exact (MK_COMB (@lem3518836 A g) (@lem3518831 A B g _37163 u f)). Qed.
Lemma lem3518838 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem3518839 {A B : Type'} (g : type686 A) (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) : (term2085 A B g _37163 u f) = (term2085 A B g _37163 u f).
Proof. exact (MK_COMB (@lem3518838) (@lem3518837 A B g _37163 u f)). Qed.
Lemma lem3518840 {A B : Type'} (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) (g : type686 A) : (term2086 A B _37163 u f g) = (term2086 A B _37163 u f g).
Proof. exact (MK_COMB (@lem3518839 A B g _37163 u f) (@lem3518819 A B f g)). Qed.
Lemma lem3518841 {A B : Type'} (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) : (term2088 A B _37163 u f) = (term2088 A B _37163 u f).
Proof. exact (fun_ext (fun g : type686 A => @lem3518840 A B _37163 u f g)). Qed.
Lemma lem3518842 {A : Type'} : (@all ((A -> Prop) -> Prop)) = (@all ((A -> Prop) -> Prop)).
Proof. exact (eq_refl (@all ((A -> Prop) -> Prop))). Qed.
Lemma lem3518843 {A B : Type'} (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) : (term2089 A B _37163 u f) = (term2089 A B _37163 u f).
Proof. exact (MK_COMB (@lem3518842 A) (@lem3518841 A B _37163 u f)). Qed.
Lemma lem3518844 {A B : Type'} (_37163 : type627 A B) (u : A -> Prop) : (term2091 A B _37163 u) = (term2091 A B _37163 u).
Proof. exact (fun_ext (fun f : A -> B => @lem3518843 A B _37163 u f)). Qed.
Lemma lem3518845 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem3518846 {A B : Type'} (_37163 : type627 A B) (u : A -> Prop) : (term2092 A B _37163 u) = (term2092 A B _37163 u).
Proof. exact (MK_COMB (@lem3518845 A B) (@lem3518844 A B _37163 u)). Qed.
Lemma lem3518847 {A B : Type'} (_37163 : type627 A B) : (term2094 A B _37163) = (term2094 A B _37163).
Proof. exact (fun_ext (fun u : A -> Prop => @lem3518846 A B _37163 u)). Qed.
Lemma lem3518848 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem3518849 {A B : Type'} (_37163 : type627 A B) : (term2095 A B _37163) = (term2095 A B _37163).
Proof. exact (MK_COMB (@lem3518848 A) (@lem3518847 A B _37163)). Qed.
Lemma lem3518850 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem3518851 {A B : Type'} (_37163 : type627 A B) : (term2096 A B _37163) = (term2096 A B _37163).
Proof. exact (MK_COMB (@lem3518850) (@lem3518849 A B _37163)). Qed.
Lemma lem3518852 {_90724 A B : Type'} (_37163 : type627 A B) (_37169 : type852 _90724 B) (_37170 : type235 _90724 A) (_37171 : type171 A B) : (term2770 _90724 A B _37163 _37169 _37170 _37171) = (term2770 _90724 A B _37163 _37169 _37170 _37171).
Proof. exact (MK_COMB (@lem3518851 A B _37163) (@lem3518818 _90724 A B _37169 _37170 _37171)). Qed.
Lemma lem3518853 {_90724 A : Type'} (f : A -> _90724) (g : type686 A) : ((term2056 _90724 A f g) = (term2057 _90724 A f g)) = ((term2056 _90724 A f g) = (term2057 _90724 A f g)).
Proof. exact (eq_refl ((term2056 _90724 A f g) = (term2057 _90724 A f g))). Qed.
Lemma lem3518862 {_90724 A : Type'} (g : type686 A) (_37168 : type852 _90724 A) (u : A -> Prop) (f : A -> _90724) (t : A -> Prop) : (term2453 _90724 A g _37168 u f t) = (term2453 _90724 A g _37168 u f t).
Proof. exact (eq_refl (term2453 _90724 A g _37168 u f t)). Qed.
Lemma lem3518863 {_90724 A : Type'} (g : type686 A) (_37168 : type852 _90724 A) (u : A -> Prop) (f : A -> _90724) : (term2454 _90724 A g _37168 u f) = (term2454 _90724 A g _37168 u f).
Proof. exact (fun_ext (fun t : A -> Prop => @lem3518862 _90724 A g _37168 u f t)). Qed.
Lemma lem3518864 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem3518865 {_90724 A : Type'} (g : type686 A) (_37168 : type852 _90724 A) (u : A -> Prop) (f : A -> _90724) : (term2455 _90724 A g _37168 u f) = (term2455 _90724 A g _37168 u f).
Proof. exact (MK_COMB (@lem3518864 A) (@lem3518863 _90724 A g _37168 u f)). Qed.
Lemma lem3518870 {A : Type'} (g : type686 A) : (term42 A g) = (term42 A g).
Proof. exact (eq_refl (term42 A g)). Qed.
Lemma lem3518871 {_90724 A : Type'} (g : type686 A) (_37168 : type852 _90724 A) (u : A -> Prop) (f : A -> _90724) : (term2456 _90724 A g _37168 u f) = (term2456 _90724 A g _37168 u f).
Proof. exact (MK_COMB (@lem3518870 A g) (@lem3518865 _90724 A g _37168 u f)). Qed.
Lemma lem3518872 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem3518873 {_90724 A : Type'} (g : type686 A) (_37168 : type852 _90724 A) (u : A -> Prop) (f : A -> _90724) : (term2457 _90724 A g _37168 u f) = (term2457 _90724 A g _37168 u f).
Proof. exact (MK_COMB (@lem3518872) (@lem3518871 _90724 A g _37168 u f)). Qed.
Lemma lem3518874 {_90724 A : Type'} (_37168 : type852 _90724 A) (u : A -> Prop) (f : A -> _90724) (g : type686 A) : (term2458 _90724 A _37168 u f g) = (term2458 _90724 A _37168 u f g).
Proof. exact (MK_COMB (@lem3518873 _90724 A g _37168 u f) (@lem3518853 _90724 A f g)). Qed.
Lemma lem3518875 {_90724 A : Type'} (_37168 : type852 _90724 A) (u : A -> Prop) (f : A -> _90724) : (term2459 _90724 A _37168 u f) = (term2459 _90724 A _37168 u f).
Proof. exact (fun_ext (fun g : type686 A => @lem3518874 _90724 A _37168 u f g)). Qed.
Lemma lem3518876 {A : Type'} : (@all ((A -> Prop) -> Prop)) = (@all ((A -> Prop) -> Prop)).
Proof. exact (eq_refl (@all ((A -> Prop) -> Prop))). Qed.
Lemma lem3518877 {_90724 A : Type'} (_37168 : type852 _90724 A) (u : A -> Prop) (f : A -> _90724) : (term2460 _90724 A _37168 u f) = (term2460 _90724 A _37168 u f).
Proof. exact (MK_COMB (@lem3518876 A) (@lem3518875 _90724 A _37168 u f)). Qed.
Lemma lem3518878 {_90724 A : Type'} (_37168 : type852 _90724 A) (u : A -> Prop) : (term2461 _90724 A _37168 u) = (term2461 _90724 A _37168 u).
Proof. exact (fun_ext (fun f : A -> _90724 => @lem3518877 _90724 A _37168 u f)). Qed.
Lemma lem3518879 {_90724 A : Type'} : (@all (A -> _90724)) = (@all (A -> _90724)).
Proof. exact (eq_refl (@all (A -> _90724))). Qed.
Lemma lem3518880 {_90724 A : Type'} (_37168 : type852 _90724 A) (u : A -> Prop) : (term2462 _90724 A _37168 u) = (term2462 _90724 A _37168 u).
Proof. exact (MK_COMB (@lem3518879 _90724 A) (@lem3518878 _90724 A _37168 u)). Qed.
Lemma lem3518881 {_90724 A : Type'} (_37168 : type852 _90724 A) : (term2463 _90724 A _37168) = (term2463 _90724 A _37168).
Proof. exact (fun_ext (fun u : A -> Prop => @lem3518880 _90724 A _37168 u)). Qed.
Lemma lem3518882 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem3518883 {_90724 A : Type'} (_37168 : type852 _90724 A) : (term2464 _90724 A _37168) = (term2464 _90724 A _37168).
Proof. exact (MK_COMB (@lem3518882 A) (@lem3518881 _90724 A _37168)). Qed.
Lemma lem3518884 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem3518885 {_90724 A : Type'} (_37168 : type852 _90724 A) : (term2465 _90724 A _37168) = (term2465 _90724 A _37168).
Proof. exact (MK_COMB (@lem3518884) (@lem3518883 _90724 A _37168)). Qed.
Lemma lem3518886 {_90724 A B : Type'} (_37168 : type852 _90724 A) (_37163 : type627 A B) (_37169 : type852 _90724 B) (_37170 : type235 _90724 A) (_37171 : type171 A B) : (term2771 _90724 A B _37168 _37163 _37169 _37170 _37171) = (term2771 _90724 A B _37168 _37163 _37169 _37170 _37171).
Proof. exact (MK_COMB (@lem3518885 _90724 A _37168) (@lem3518852 _90724 A B _37163 _37169 _37170 _37171)). Qed.
Lemma lem3518887 {_90715 A : Type'} (f : type1413 _90715 A) (g : type686 _90715) : ((term2099 _90715 A f g) = (term2100 _90715 A f g)) = ((term2099 _90715 A f g) = (term2100 _90715 A f g)).
Proof. exact (eq_refl ((term2099 _90715 A f g) = (term2100 _90715 A f g))). Qed.
Lemma lem3518896 {_90715 A : Type'} (g : type686 _90715) (_37167 : type616 _90715 A) (u : _90715 -> Prop) (f : type1413 _90715 A) (t : _90715 -> Prop) : (term2339 _90715 A g _37167 u f t) = (term2339 _90715 A g _37167 u f t).
Proof. exact (eq_refl (term2339 _90715 A g _37167 u f t)). Qed.
Lemma lem3518897 {_90715 A : Type'} (g : type686 _90715) (_37167 : type616 _90715 A) (u : _90715 -> Prop) (f : type1413 _90715 A) : (term2340 _90715 A g _37167 u f) = (term2340 _90715 A g _37167 u f).
Proof. exact (fun_ext (fun t : _90715 -> Prop => @lem3518896 _90715 A g _37167 u f t)). Qed.
Lemma lem3518898 {_90715 : Type'} : (@all (_90715 -> Prop)) = (@all (_90715 -> Prop)).
Proof. exact (eq_refl (@all (_90715 -> Prop))). Qed.
Lemma lem3518899 {_90715 A : Type'} (g : type686 _90715) (_37167 : type616 _90715 A) (u : _90715 -> Prop) (f : type1413 _90715 A) : (term2341 _90715 A g _37167 u f) = (term2341 _90715 A g _37167 u f).
Proof. exact (MK_COMB (@lem3518898 _90715) (@lem3518897 _90715 A g _37167 u f)). Qed.
Lemma lem3518904 {_90715 : Type'} (g : type686 _90715) : (term42 _90715 g) = (term42 _90715 g).
Proof. exact (eq_refl (term42 _90715 g)). Qed.
Lemma lem3518905 {_90715 A : Type'} (g : type686 _90715) (_37167 : type616 _90715 A) (u : _90715 -> Prop) (f : type1413 _90715 A) : (term2342 _90715 A g _37167 u f) = (term2342 _90715 A g _37167 u f).
Proof. exact (MK_COMB (@lem3518904 _90715 g) (@lem3518899 _90715 A g _37167 u f)). Qed.
Lemma lem3518906 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem3518907 {_90715 A : Type'} (g : type686 _90715) (_37167 : type616 _90715 A) (u : _90715 -> Prop) (f : type1413 _90715 A) : (term2343 _90715 A g _37167 u f) = (term2343 _90715 A g _37167 u f).
Proof. exact (MK_COMB (@lem3518906) (@lem3518905 _90715 A g _37167 u f)). Qed.
Lemma lem3518908 {_90715 A : Type'} (_37167 : type616 _90715 A) (u : _90715 -> Prop) (f : type1413 _90715 A) (g : type686 _90715) : (term2344 _90715 A _37167 u f g) = (term2344 _90715 A _37167 u f g).
Proof. exact (MK_COMB (@lem3518907 _90715 A g _37167 u f) (@lem3518887 _90715 A f g)). Qed.
Lemma lem3518909 {_90715 A : Type'} (_37167 : type616 _90715 A) (u : _90715 -> Prop) (f : type1413 _90715 A) : (term2345 _90715 A _37167 u f) = (term2345 _90715 A _37167 u f).
Proof. exact (fun_ext (fun g : type686 _90715 => @lem3518908 _90715 A _37167 u f g)). Qed.
Lemma lem3518910 {_90715 : Type'} : (@all ((_90715 -> Prop) -> Prop)) = (@all ((_90715 -> Prop) -> Prop)).
Proof. exact (eq_refl (@all ((_90715 -> Prop) -> Prop))). Qed.
Lemma lem3518911 {_90715 A : Type'} (_37167 : type616 _90715 A) (u : _90715 -> Prop) (f : type1413 _90715 A) : (term2346 _90715 A _37167 u f) = (term2346 _90715 A _37167 u f).
Proof. exact (MK_COMB (@lem3518910 _90715) (@lem3518909 _90715 A _37167 u f)). Qed.
Lemma lem3518912 {_90715 A : Type'} (_37167 : type616 _90715 A) (u : _90715 -> Prop) : (term2347 _90715 A _37167 u) = (term2347 _90715 A _37167 u).
Proof. exact (fun_ext (fun f : type1413 _90715 A => @lem3518911 _90715 A _37167 u f)). Qed.
Lemma lem3518913 {_90715 A : Type'} : (@all (_90715 -> A -> Prop)) = (@all (_90715 -> A -> Prop)).
Proof. exact (eq_refl (@all (_90715 -> A -> Prop))). Qed.
Lemma lem3518914 {_90715 A : Type'} (_37167 : type616 _90715 A) (u : _90715 -> Prop) : (term2348 _90715 A _37167 u) = (term2348 _90715 A _37167 u).
Proof. exact (MK_COMB (@lem3518913 _90715 A) (@lem3518912 _90715 A _37167 u)). Qed.
Lemma lem3518915 {_90715 A : Type'} (_37167 : type616 _90715 A) : (term2349 _90715 A _37167) = (term2349 _90715 A _37167).
Proof. exact (fun_ext (fun u : _90715 -> Prop => @lem3518914 _90715 A _37167 u)). Qed.
Lemma lem3518916 {_90715 : Type'} : (@all (_90715 -> Prop)) = (@all (_90715 -> Prop)).
Proof. exact (eq_refl (@all (_90715 -> Prop))). Qed.
Lemma lem3518917 {_90715 A : Type'} (_37167 : type616 _90715 A) : (term2350 _90715 A _37167) = (term2350 _90715 A _37167).
Proof. exact (MK_COMB (@lem3518916 _90715) (@lem3518915 _90715 A _37167)). Qed.
Lemma lem3518918 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem3518919 {_90715 A : Type'} (_37167 : type616 _90715 A) : (term2351 _90715 A _37167) = (term2351 _90715 A _37167).
Proof. exact (MK_COMB (@lem3518918) (@lem3518917 _90715 A _37167)). Qed.
Lemma lem3518920 {_90715 _90724 A B : Type'} (_37167 : type616 _90715 A) (_37168 : type852 _90724 A) (_37163 : type627 A B) (_37169 : type852 _90724 B) (_37170 : type235 _90724 A) (_37171 : type171 A B) : (term2772 _90715 _90724 A B _37167 _37168 _37163 _37169 _37170 _37171) = (term2772 _90715 _90724 A B _37167 _37168 _37163 _37169 _37170 _37171).
Proof. exact (MK_COMB (@lem3518919 _90715 A _37167) (@lem3518886 _90724 A B _37168 _37163 _37169 _37170 _37171)). Qed.
Lemma lem3518921 {_90715 B : Type'} (f : _90715 -> B) (g : type686 _90715) : ((term49 _90715 B f g) = (term50 _90715 B f g)) = ((term49 _90715 B f g) = (term50 _90715 B f g)).
Proof. exact (eq_refl ((term49 _90715 B f g) = (term50 _90715 B f g))). Qed.
Lemma lem3518930 {_90715 B : Type'} (g : type686 _90715) (_37166 : type627 _90715 B) (u : _90715 -> Prop) (f : _90715 -> B) (t : _90715 -> Prop) : (term2081 _90715 B g _37166 u f t) = (term2081 _90715 B g _37166 u f t).
Proof. exact (eq_refl (term2081 _90715 B g _37166 u f t)). Qed.
Lemma lem3518931 {_90715 B : Type'} (g : type686 _90715) (_37166 : type627 _90715 B) (u : _90715 -> Prop) (f : _90715 -> B) : (term2082 _90715 B g _37166 u f) = (term2082 _90715 B g _37166 u f).
Proof. exact (fun_ext (fun t : _90715 -> Prop => @lem3518930 _90715 B g _37166 u f t)). Qed.
Lemma lem3518932 {_90715 : Type'} : (@all (_90715 -> Prop)) = (@all (_90715 -> Prop)).
Proof. exact (eq_refl (@all (_90715 -> Prop))). Qed.
Lemma lem3518933 {_90715 B : Type'} (g : type686 _90715) (_37166 : type627 _90715 B) (u : _90715 -> Prop) (f : _90715 -> B) : (term2083 _90715 B g _37166 u f) = (term2083 _90715 B g _37166 u f).
Proof. exact (MK_COMB (@lem3518932 _90715) (@lem3518931 _90715 B g _37166 u f)). Qed.
Lemma lem3518938 {_90715 : Type'} (g : type686 _90715) : (term42 _90715 g) = (term42 _90715 g).
Proof. exact (eq_refl (term42 _90715 g)). Qed.
Lemma lem3518939 {_90715 B : Type'} (g : type686 _90715) (_37166 : type627 _90715 B) (u : _90715 -> Prop) (f : _90715 -> B) : (term2084 _90715 B g _37166 u f) = (term2084 _90715 B g _37166 u f).
Proof. exact (MK_COMB (@lem3518938 _90715 g) (@lem3518933 _90715 B g _37166 u f)). Qed.
Lemma lem3518940 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem3518941 {_90715 B : Type'} (g : type686 _90715) (_37166 : type627 _90715 B) (u : _90715 -> Prop) (f : _90715 -> B) : (term2085 _90715 B g _37166 u f) = (term2085 _90715 B g _37166 u f).
Proof. exact (MK_COMB (@lem3518940) (@lem3518939 _90715 B g _37166 u f)). Qed.
Lemma lem3518942 {_90715 B : Type'} (_37166 : type627 _90715 B) (u : _90715 -> Prop) (f : _90715 -> B) (g : type686 _90715) : (term2086 _90715 B _37166 u f g) = (term2086 _90715 B _37166 u f g).
Proof. exact (MK_COMB (@lem3518941 _90715 B g _37166 u f) (@lem3518921 _90715 B f g)). Qed.
Lemma lem3518943 {_90715 B : Type'} (_37166 : type627 _90715 B) (u : _90715 -> Prop) (f : _90715 -> B) : (term2088 _90715 B _37166 u f) = (term2088 _90715 B _37166 u f).
Proof. exact (fun_ext (fun g : type686 _90715 => @lem3518942 _90715 B _37166 u f g)). Qed.
Lemma lem3518944 {_90715 : Type'} : (@all ((_90715 -> Prop) -> Prop)) = (@all ((_90715 -> Prop) -> Prop)).
Proof. exact (eq_refl (@all ((_90715 -> Prop) -> Prop))). Qed.
Lemma lem3518945 {_90715 B : Type'} (_37166 : type627 _90715 B) (u : _90715 -> Prop) (f : _90715 -> B) : (term2089 _90715 B _37166 u f) = (term2089 _90715 B _37166 u f).
Proof. exact (MK_COMB (@lem3518944 _90715) (@lem3518943 _90715 B _37166 u f)). Qed.
Lemma lem3518946 {_90715 B : Type'} (_37166 : type627 _90715 B) (u : _90715 -> Prop) : (term2091 _90715 B _37166 u) = (term2091 _90715 B _37166 u).
Proof. exact (fun_ext (fun f : _90715 -> B => @lem3518945 _90715 B _37166 u f)). Qed.
Lemma lem3518947 {_90715 B : Type'} : (@all (_90715 -> B)) = (@all (_90715 -> B)).
Proof. exact (eq_refl (@all (_90715 -> B))). Qed.
Lemma lem3518948 {_90715 B : Type'} (_37166 : type627 _90715 B) (u : _90715 -> Prop) : (term2092 _90715 B _37166 u) = (term2092 _90715 B _37166 u).
Proof. exact (MK_COMB (@lem3518947 _90715 B) (@lem3518946 _90715 B _37166 u)). Qed.
Lemma lem3518949 {_90715 B : Type'} (_37166 : type627 _90715 B) : (term2094 _90715 B _37166) = (term2094 _90715 B _37166).
Proof. exact (fun_ext (fun u : _90715 -> Prop => @lem3518948 _90715 B _37166 u)). Qed.
Lemma lem3518950 {_90715 : Type'} : (@all (_90715 -> Prop)) = (@all (_90715 -> Prop)).
Proof. exact (eq_refl (@all (_90715 -> Prop))). Qed.
Lemma lem3518951 {_90715 B : Type'} (_37166 : type627 _90715 B) : (term2095 _90715 B _37166) = (term2095 _90715 B _37166).
Proof. exact (MK_COMB (@lem3518950 _90715) (@lem3518949 _90715 B _37166)). Qed.
Lemma lem3518952 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem3518953 {_90715 B : Type'} (_37166 : type627 _90715 B) : (term2096 _90715 B _37166) = (term2096 _90715 B _37166).
Proof. exact (MK_COMB (@lem3518952) (@lem3518951 _90715 B _37166)). Qed.
Lemma lem3518954 {_90715 _90724 A B : Type'} (_37166 : type627 _90715 B) (_37167 : type616 _90715 A) (_37168 : type852 _90724 A) (_37163 : type627 A B) (_37169 : type852 _90724 B) (_37170 : type235 _90724 A) (_37171 : type171 A B) : (term2773 _90715 _90724 A B _37166 _37167 _37168 _37163 _37169 _37170 _37171) = (term2773 _90715 _90724 A B _37166 _37167 _37168 _37163 _37169 _37170 _37171).
Proof. exact (MK_COMB (@lem3518953 _90715 B _37166) (@lem3518920 _90715 _90724 A B _37167 _37168 _37163 _37169 _37170 _37171)). Qed.
Lemma lem3518955 {_90715 A : Type'} (f : _90715 -> A) (g : type686 _90715) : ((term49 _90715 A f g) = (term50 _90715 A f g)) = ((term49 _90715 A f g) = (term50 _90715 A f g)).
Proof. exact (eq_refl ((term49 _90715 A f g) = (term50 _90715 A f g))). Qed.
Lemma lem3518964 {_90715 A : Type'} (g : type686 _90715) (_37165 : type627 _90715 A) (u : _90715 -> Prop) (f : _90715 -> A) (t : _90715 -> Prop) : (term2081 _90715 A g _37165 u f t) = (term2081 _90715 A g _37165 u f t).
Proof. exact (eq_refl (term2081 _90715 A g _37165 u f t)). Qed.
Lemma lem3518965 {_90715 A : Type'} (g : type686 _90715) (_37165 : type627 _90715 A) (u : _90715 -> Prop) (f : _90715 -> A) : (term2082 _90715 A g _37165 u f) = (term2082 _90715 A g _37165 u f).
Proof. exact (fun_ext (fun t : _90715 -> Prop => @lem3518964 _90715 A g _37165 u f t)). Qed.
Lemma lem3518966 {_90715 : Type'} : (@all (_90715 -> Prop)) = (@all (_90715 -> Prop)).
Proof. exact (eq_refl (@all (_90715 -> Prop))). Qed.
Lemma lem3518967 {_90715 A : Type'} (g : type686 _90715) (_37165 : type627 _90715 A) (u : _90715 -> Prop) (f : _90715 -> A) : (term2083 _90715 A g _37165 u f) = (term2083 _90715 A g _37165 u f).
Proof. exact (MK_COMB (@lem3518966 _90715) (@lem3518965 _90715 A g _37165 u f)). Qed.
Lemma lem3518972 {_90715 : Type'} (g : type686 _90715) : (term42 _90715 g) = (term42 _90715 g).
Proof. exact (eq_refl (term42 _90715 g)). Qed.
Lemma lem3518973 {_90715 A : Type'} (g : type686 _90715) (_37165 : type627 _90715 A) (u : _90715 -> Prop) (f : _90715 -> A) : (term2084 _90715 A g _37165 u f) = (term2084 _90715 A g _37165 u f).
Proof. exact (MK_COMB (@lem3518972 _90715 g) (@lem3518967 _90715 A g _37165 u f)). Qed.
Lemma lem3518974 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem3518975 {_90715 A : Type'} (g : type686 _90715) (_37165 : type627 _90715 A) (u : _90715 -> Prop) (f : _90715 -> A) : (term2085 _90715 A g _37165 u f) = (term2085 _90715 A g _37165 u f).
Proof. exact (MK_COMB (@lem3518974) (@lem3518973 _90715 A g _37165 u f)). Qed.
Lemma lem3518976 {_90715 A : Type'} (_37165 : type627 _90715 A) (u : _90715 -> Prop) (f : _90715 -> A) (g : type686 _90715) : (term2086 _90715 A _37165 u f g) = (term2086 _90715 A _37165 u f g).
Proof. exact (MK_COMB (@lem3518975 _90715 A g _37165 u f) (@lem3518955 _90715 A f g)). Qed.
Lemma lem3518977 {_90715 A : Type'} (_37165 : type627 _90715 A) (u : _90715 -> Prop) (f : _90715 -> A) : (term2088 _90715 A _37165 u f) = (term2088 _90715 A _37165 u f).
Proof. exact (fun_ext (fun g : type686 _90715 => @lem3518976 _90715 A _37165 u f g)). Qed.
Lemma lem3518978 {_90715 : Type'} : (@all ((_90715 -> Prop) -> Prop)) = (@all ((_90715 -> Prop) -> Prop)).
Proof. exact (eq_refl (@all ((_90715 -> Prop) -> Prop))). Qed.
Lemma lem3518979 {_90715 A : Type'} (_37165 : type627 _90715 A) (u : _90715 -> Prop) (f : _90715 -> A) : (term2089 _90715 A _37165 u f) = (term2089 _90715 A _37165 u f).
Proof. exact (MK_COMB (@lem3518978 _90715) (@lem3518977 _90715 A _37165 u f)). Qed.
Lemma lem3518980 {_90715 A : Type'} (_37165 : type627 _90715 A) (u : _90715 -> Prop) : (term2091 _90715 A _37165 u) = (term2091 _90715 A _37165 u).
Proof. exact (fun_ext (fun f : _90715 -> A => @lem3518979 _90715 A _37165 u f)). Qed.
Lemma lem3518981 {_90715 A : Type'} : (@all (_90715 -> A)) = (@all (_90715 -> A)).
Proof. exact (eq_refl (@all (_90715 -> A))). Qed.
Lemma lem3518982 {_90715 A : Type'} (_37165 : type627 _90715 A) (u : _90715 -> Prop) : (term2092 _90715 A _37165 u) = (term2092 _90715 A _37165 u).
Proof. exact (MK_COMB (@lem3518981 _90715 A) (@lem3518980 _90715 A _37165 u)). Qed.
Lemma lem3518983 {_90715 A : Type'} (_37165 : type627 _90715 A) : (term2094 _90715 A _37165) = (term2094 _90715 A _37165).
Proof. exact (fun_ext (fun u : _90715 -> Prop => @lem3518982 _90715 A _37165 u)). Qed.
Lemma lem3518984 {_90715 : Type'} : (@all (_90715 -> Prop)) = (@all (_90715 -> Prop)).
Proof. exact (eq_refl (@all (_90715 -> Prop))). Qed.
Lemma lem3518985 {_90715 A : Type'} (_37165 : type627 _90715 A) : (term2095 _90715 A _37165) = (term2095 _90715 A _37165).
Proof. exact (MK_COMB (@lem3518984 _90715) (@lem3518983 _90715 A _37165)). Qed.
Lemma lem3518986 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem3518987 {_90715 A : Type'} (_37165 : type627 _90715 A) : (term2096 _90715 A _37165) = (term2096 _90715 A _37165).
Proof. exact (MK_COMB (@lem3518986) (@lem3518985 _90715 A _37165)). Qed.
Lemma lem3518988 {_90715 _90724 A B : Type'} (_37165 : type627 _90715 A) (_37166 : type627 _90715 B) (_37167 : type616 _90715 A) (_37168 : type852 _90724 A) (_37163 : type627 A B) (_37169 : type852 _90724 B) (_37170 : type235 _90724 A) (_37171 : type171 A B) : (term2774 _90715 _90724 A B _37165 _37166 _37167 _37168 _37163 _37169 _37170 _37171) = (term2774 _90715 _90724 A B _37165 _37166 _37167 _37168 _37163 _37169 _37170 _37171).
Proof. exact (MK_COMB (@lem3518987 _90715 A _37165) (@lem3518954 _90715 _90724 A B _37166 _37167 _37168 _37163 _37169 _37170 _37171)). Qed.
Lemma lem3518989 {_90715 _90724 : Type'} (f : _90715 -> _90724) (g : type686 _90715) : ((term49 _90715 _90724 f g) = (term50 _90715 _90724 f g)) = ((term49 _90715 _90724 f g) = (term50 _90715 _90724 f g)).
Proof. exact (eq_refl ((term49 _90715 _90724 f g) = (term50 _90715 _90724 f g))). Qed.
Lemma lem3518998 {_90715 _90724 : Type'} (g : type686 _90715) (_37164 : type627 _90715 _90724) (u : _90715 -> Prop) (f : _90715 -> _90724) (t : _90715 -> Prop) : (term2081 _90715 _90724 g _37164 u f t) = (term2081 _90715 _90724 g _37164 u f t).
Proof. exact (eq_refl (term2081 _90715 _90724 g _37164 u f t)). Qed.
Lemma lem3518999 {_90715 _90724 : Type'} (g : type686 _90715) (_37164 : type627 _90715 _90724) (u : _90715 -> Prop) (f : _90715 -> _90724) : (term2082 _90715 _90724 g _37164 u f) = (term2082 _90715 _90724 g _37164 u f).
Proof. exact (fun_ext (fun t : _90715 -> Prop => @lem3518998 _90715 _90724 g _37164 u f t)). Qed.
Lemma lem3519000 {_90715 : Type'} : (@all (_90715 -> Prop)) = (@all (_90715 -> Prop)).
Proof. exact (eq_refl (@all (_90715 -> Prop))). Qed.
Lemma lem3519001 {_90715 _90724 : Type'} (g : type686 _90715) (_37164 : type627 _90715 _90724) (u : _90715 -> Prop) (f : _90715 -> _90724) : (term2083 _90715 _90724 g _37164 u f) = (term2083 _90715 _90724 g _37164 u f).
Proof. exact (MK_COMB (@lem3519000 _90715) (@lem3518999 _90715 _90724 g _37164 u f)). Qed.
Lemma lem3519006 {_90715 : Type'} (g : type686 _90715) : (term42 _90715 g) = (term42 _90715 g).
Proof. exact (eq_refl (term42 _90715 g)). Qed.
Lemma lem3519007 {_90715 _90724 : Type'} (g : type686 _90715) (_37164 : type627 _90715 _90724) (u : _90715 -> Prop) (f : _90715 -> _90724) : (term2084 _90715 _90724 g _37164 u f) = (term2084 _90715 _90724 g _37164 u f).
Proof. exact (MK_COMB (@lem3519006 _90715 g) (@lem3519001 _90715 _90724 g _37164 u f)). Qed.
Lemma lem3519008 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem3519009 {_90715 _90724 : Type'} (g : type686 _90715) (_37164 : type627 _90715 _90724) (u : _90715 -> Prop) (f : _90715 -> _90724) : (term2085 _90715 _90724 g _37164 u f) = (term2085 _90715 _90724 g _37164 u f).
Proof. exact (MK_COMB (@lem3519008) (@lem3519007 _90715 _90724 g _37164 u f)). Qed.
Lemma lem3519010 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) (u : _90715 -> Prop) (f : _90715 -> _90724) (g : type686 _90715) : (term2086 _90715 _90724 _37164 u f g) = (term2086 _90715 _90724 _37164 u f g).
Proof. exact (MK_COMB (@lem3519009 _90715 _90724 g _37164 u f) (@lem3518989 _90715 _90724 f g)). Qed.
Lemma lem3519011 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) (u : _90715 -> Prop) (f : _90715 -> _90724) : (term2088 _90715 _90724 _37164 u f) = (term2088 _90715 _90724 _37164 u f).
Proof. exact (fun_ext (fun g : type686 _90715 => @lem3519010 _90715 _90724 _37164 u f g)). Qed.
Lemma lem3519012 {_90715 : Type'} : (@all ((_90715 -> Prop) -> Prop)) = (@all ((_90715 -> Prop) -> Prop)).
Proof. exact (eq_refl (@all ((_90715 -> Prop) -> Prop))). Qed.
Lemma lem3519013 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) (u : _90715 -> Prop) (f : _90715 -> _90724) : (term2089 _90715 _90724 _37164 u f) = (term2089 _90715 _90724 _37164 u f).
Proof. exact (MK_COMB (@lem3519012 _90715) (@lem3519011 _90715 _90724 _37164 u f)). Qed.
Lemma lem3519014 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) (u : _90715 -> Prop) : (term2091 _90715 _90724 _37164 u) = (term2091 _90715 _90724 _37164 u).
Proof. exact (fun_ext (fun f : _90715 -> _90724 => @lem3519013 _90715 _90724 _37164 u f)). Qed.
Lemma lem3519015 {_90715 _90724 : Type'} : (@all (_90715 -> _90724)) = (@all (_90715 -> _90724)).
Proof. exact (eq_refl (@all (_90715 -> _90724))). Qed.
Lemma lem3519016 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) (u : _90715 -> Prop) : (term2092 _90715 _90724 _37164 u) = (term2092 _90715 _90724 _37164 u).
Proof. exact (MK_COMB (@lem3519015 _90715 _90724) (@lem3519014 _90715 _90724 _37164 u)). Qed.
Lemma lem3519017 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) : (term2094 _90715 _90724 _37164) = (term2094 _90715 _90724 _37164).
Proof. exact (fun_ext (fun u : _90715 -> Prop => @lem3519016 _90715 _90724 _37164 u)). Qed.
Lemma lem3519018 {_90715 : Type'} : (@all (_90715 -> Prop)) = (@all (_90715 -> Prop)).
Proof. exact (eq_refl (@all (_90715 -> Prop))). Qed.
Lemma lem3519019 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) : (term2095 _90715 _90724 _37164) = (term2095 _90715 _90724 _37164).
Proof. exact (MK_COMB (@lem3519018 _90715) (@lem3519017 _90715 _90724 _37164)). Qed.
Lemma lem3519020 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem3519021 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) : (term2096 _90715 _90724 _37164) = (term2096 _90715 _90724 _37164).
Proof. exact (MK_COMB (@lem3519020) (@lem3519019 _90715 _90724 _37164)). Qed.
Lemma lem3519022 {_90715 _90724 A B : Type'} (_37164 : type627 _90715 _90724) (_37165 : type627 _90715 A) (_37166 : type627 _90715 B) (_37167 : type616 _90715 A) (_37168 : type852 _90724 A) (_37163 : type627 A B) (_37169 : type852 _90724 B) (_37170 : type235 _90724 A) (_37171 : type171 A B) : (term2775 _90715 _90724 A B _37164 _37165 _37166 _37167 _37168 _37163 _37169 _37170 _37171) = (term2775 _90715 _90724 A B _37164 _37165 _37166 _37167 _37168 _37163 _37169 _37170 _37171).
Proof. exact (MK_COMB (@lem3519021 _90715 _90724 _37164) (@lem3518988 _90715 _90724 A B _37165 _37166 _37167 _37168 _37163 _37169 _37170 _37171)). Qed.
Lemma lem3519023 {A B : Type'} (f : A -> B) (g : type686 A) : ((term49 A B f g) = (term50 A B f g)) = ((term49 A B f g) = (term50 A B f g)).
Proof. exact (eq_refl ((term49 A B f g) = (term50 A B f g))). Qed.
Lemma lem3519028 {A B : Type'} (g : type686 A) (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) (t : A -> Prop) : (term2124 A B g _37163 u f t) = (term2124 A B g _37163 u f t).
Proof. exact (eq_refl (term2124 A B g _37163 u f t)). Qed.
Lemma lem3519029 {A B : Type'} (g : type686 A) (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) : (term2125 A B g _37163 u f) = (term2125 A B g _37163 u f).
Proof. exact (fun_ext (fun t : A -> Prop => @lem3519028 A B g _37163 u f t)). Qed.
Lemma lem3519030 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem3519031 {A B : Type'} (g : type686 A) (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) : (term2126 A B g _37163 u f) = (term2126 A B g _37163 u f).
Proof. exact (MK_COMB (@lem3519030 A) (@lem3519029 A B g _37163 u f)). Qed.
Lemma lem3519036 {A : Type'} (g : type686 A) (t : A -> Prop) (u : A -> Prop) : (term2127 A g t u) = (term2127 A g t u).
Proof. exact (eq_refl (term2127 A g t u)). Qed.
Lemma lem3519037 {A : Type'} (g : type686 A) (u : A -> Prop) : (term2128 A g u) = (term2128 A g u).
Proof. exact (fun_ext (fun t : A -> Prop => @lem3519036 A g t u)). Qed.
Lemma lem3519038 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem3519039 {A : Type'} (g : type686 A) (u : A -> Prop) : (term2129 A g u) = (term2129 A g u).
Proof. exact (MK_COMB (@lem3519038 A) (@lem3519037 A g u)). Qed.
Lemma lem3519040 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem3519041 {A : Type'} (g : type686 A) (u : A -> Prop) : (term1946 A g u) = (term1946 A g u).
Proof. exact (MK_COMB (@lem3519040) (@lem3519039 A g u)). Qed.
Lemma lem3519042 {A B : Type'} (g : type686 A) (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) : (term2130 A B g _37163 u f) = (term2130 A B g _37163 u f).
Proof. exact (MK_COMB (@lem3519041 A g u) (@lem3519031 A B g _37163 u f)). Qed.
Lemma lem3519047 {A : Type'} (g : type686 A) : (term42 A g) = (term42 A g).
Proof. exact (eq_refl (term42 A g)). Qed.
Lemma lem3519048 {A B : Type'} (g : type686 A) (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) : (term2131 A B g _37163 u f) = (term2131 A B g _37163 u f).
Proof. exact (MK_COMB (@lem3519047 A g) (@lem3519042 A B g _37163 u f)). Qed.
Lemma lem3519049 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem3519050 {A B : Type'} (g : type686 A) (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) : (term2133 A B g _37163 u f) = (term2133 A B g _37163 u f).
Proof. exact (MK_COMB (@lem3519049) (@lem3519048 A B g _37163 u f)). Qed.
Lemma lem3519051 {A B : Type'} (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) (g : type686 A) : (term2134 A B _37163 u f g) = (term2134 A B _37163 u f g).
Proof. exact (MK_COMB (@lem3519050 A B g _37163 u f) (@lem3519023 A B f g)). Qed.
Lemma lem3519052 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem3519053 {A B : Type'} (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) (g : type686 A) : (term2135 A B _37163 u f g) = (term2135 A B _37163 u f g).
Proof. exact (MK_COMB (@lem3519052) (@lem3519051 A B _37163 u f g)). Qed.
Lemma lem3519054 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem3519055 {A B : Type'} (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) (g : type686 A) : (term2136 A B _37163 u f g) = (term2136 A B _37163 u f g).
Proof. exact (MK_COMB (@lem3519054) (@lem3519053 A B _37163 u f g)). Qed.
Lemma lem3519056 {_90715 _90724 A B : Type'} (u : A -> Prop) (f : A -> B) (g : type686 A) (_37164 : type627 _90715 _90724) (_37165 : type627 _90715 A) (_37166 : type627 _90715 B) (_37167 : type616 _90715 A) (_37168 : type852 _90724 A) (_37163 : type627 A B) (_37169 : type852 _90724 B) (_37170 : type235 _90724 A) (_37171 : type171 A B) : (term2776 _90715 _90724 A B u f g _37164 _37165 _37166 _37167 _37168 _37163 _37169 _37170 _37171) = (term2776 _90715 _90724 A B u f g _37164 _37165 _37166 _37167 _37168 _37163 _37169 _37170 _37171).
Proof. exact (MK_COMB (@lem3519055 A B _37163 u f g) (@lem3519022 _90715 _90724 A B _37164 _37165 _37166 _37167 _37168 _37163 _37169 _37170 _37171)). Qed.
Lemma lem3519057 {_90715 _90724 A B : Type'} (f : A -> B) (g : type686 A) (_37164 : type627 _90715 _90724) (_37165 : type627 _90715 A) (_37166 : type627 _90715 B) (_37167 : type616 _90715 A) (_37168 : type852 _90724 A) (_37163 : type627 A B) (_37169 : type852 _90724 B) (_37170 : type235 _90724 A) (_37171 : type171 A B) : (term2777 _90715 _90724 A B f g _37164 _37165 _37166 _37167 _37168 _37163 _37169 _37170 _37171) = (term2777 _90715 _90724 A B f g _37164 _37165 _37166 _37167 _37168 _37163 _37169 _37170 _37171).
Proof. exact (fun_ext (fun u : A -> Prop => @lem3519056 _90715 _90724 A B u f g _37164 _37165 _37166 _37167 _37168 _37163 _37169 _37170 _37171)). Qed.
Lemma lem3519058 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem3519059 {_90715 _90724 A B : Type'} (f : A -> B) (g : type686 A) (_37164 : type627 _90715 _90724) (_37165 : type627 _90715 A) (_37166 : type627 _90715 B) (_37167 : type616 _90715 A) (_37168 : type852 _90724 A) (_37163 : type627 A B) (_37169 : type852 _90724 B) (_37170 : type235 _90724 A) (_37171 : type171 A B) : (term2778 _90715 _90724 A B f g _37164 _37165 _37166 _37167 _37168 _37163 _37169 _37170 _37171) = (term2778 _90715 _90724 A B f g _37164 _37165 _37166 _37167 _37168 _37163 _37169 _37170 _37171).
Proof. exact (MK_COMB (@lem3519058 A) (@lem3519057 _90715 _90724 A B f g _37164 _37165 _37166 _37167 _37168 _37163 _37169 _37170 _37171)). Qed.
Lemma lem3519060 {_90715 _90724 A B : Type'} (g : type686 A) (_37164 : type627 _90715 _90724) (_37165 : type627 _90715 A) (_37166 : type627 _90715 B) (_37167 : type616 _90715 A) (_37168 : type852 _90724 A) (_37163 : type627 A B) (_37169 : type852 _90724 B) (_37170 : type235 _90724 A) (_37171 : type171 A B) : (term2779 _90715 _90724 A B g _37164 _37165 _37166 _37167 _37168 _37163 _37169 _37170 _37171) = (term2779 _90715 _90724 A B g _37164 _37165 _37166 _37167 _37168 _37163 _37169 _37170 _37171).
Proof. exact (fun_ext (fun f : A -> B => @lem3519059 _90715 _90724 A B f g _37164 _37165 _37166 _37167 _37168 _37163 _37169 _37170 _37171)). Qed.
Lemma lem3519061 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem3519062 {_90715 _90724 A B : Type'} (g : type686 A) (_37164 : type627 _90715 _90724) (_37165 : type627 _90715 A) (_37166 : type627 _90715 B) (_37167 : type616 _90715 A) (_37168 : type852 _90724 A) (_37163 : type627 A B) (_37169 : type852 _90724 B) (_37170 : type235 _90724 A) (_37171 : type171 A B) : (term2780 _90715 _90724 A B g _37164 _37165 _37166 _37167 _37168 _37163 _37169 _37170 _37171) = (term2780 _90715 _90724 A B g _37164 _37165 _37166 _37167 _37168 _37163 _37169 _37170 _37171).
Proof. exact (MK_COMB (@lem3519061 A B) (@lem3519060 _90715 _90724 A B g _37164 _37165 _37166 _37167 _37168 _37163 _37169 _37170 _37171)). Qed.
Lemma lem3519063 {_90715 _90724 A B : Type'} (_37164 : type627 _90715 _90724) (_37165 : type627 _90715 A) (_37166 : type627 _90715 B) (_37167 : type616 _90715 A) (_37168 : type852 _90724 A) (_37163 : type627 A B) (_37169 : type852 _90724 B) (_37170 : type235 _90724 A) (_37171 : type171 A B) : (term2781 _90715 _90724 A B _37164 _37165 _37166 _37167 _37168 _37163 _37169 _37170 _37171) = (term2781 _90715 _90724 A B _37164 _37165 _37166 _37167 _37168 _37163 _37169 _37170 _37171).
Proof. exact (fun_ext (fun g : type686 A => @lem3519062 _90715 _90724 A B g _37164 _37165 _37166 _37167 _37168 _37163 _37169 _37170 _37171)). Qed.
Lemma lem3519064 {A : Type'} : (@all ((A -> Prop) -> Prop)) = (@all ((A -> Prop) -> Prop)).
Proof. exact (eq_refl (@all ((A -> Prop) -> Prop))). Qed.
Lemma lem3519065 {_90715 _90724 A B : Type'} (_37164 : type627 _90715 _90724) (_37165 : type627 _90715 A) (_37166 : type627 _90715 B) (_37167 : type616 _90715 A) (_37168 : type852 _90724 A) (_37163 : type627 A B) (_37169 : type852 _90724 B) (_37170 : type235 _90724 A) (_37171 : type171 A B) : (term2782 _90715 _90724 A B _37164 _37165 _37166 _37167 _37168 _37163 _37169 _37170 _37171) = (term2782 _90715 _90724 A B _37164 _37165 _37166 _37167 _37168 _37163 _37169 _37170 _37171).
Proof. exact (MK_COMB (@lem3519064 A) (@lem3519063 _90715 _90724 A B _37164 _37165 _37166 _37167 _37168 _37163 _37169 _37170 _37171)). Qed.
Lemma lem3519066 {A B : Type'} (GEN_PVAR_85 : A) (u : A -> Prop) (f : A -> B) (t : A -> Prop) (x : A) : (term61 A B GEN_PVAR_85 u f t x) = (term61 A B GEN_PVAR_85 u f t x).
Proof. exact (eq_refl (term61 A B GEN_PVAR_85 u f t x)). Qed.
Lemma lem3519067 {A B : Type'} (GEN_PVAR_85 : A) (u : A -> Prop) (f : A -> B) (t : A -> Prop) : (term63 A B GEN_PVAR_85 u f t) = (term63 A B GEN_PVAR_85 u f t).
Proof. exact (fun_ext (fun x : A => @lem3519066 A B GEN_PVAR_85 u f t x)). Qed.
Lemma lem3519068 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem3519069 {A B : Type'} (GEN_PVAR_85 : A) (u : A -> Prop) (f : A -> B) (t : A -> Prop) : (term65 A B GEN_PVAR_85 u f t) = (term65 A B GEN_PVAR_85 u f t).
Proof. exact (MK_COMB (@lem3519068 A) (@lem3519067 A B GEN_PVAR_85 u f t)). Qed.
Lemma lem3519072 {A B : Type'} (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) (t : A -> Prop) (GEN_PVAR_85 : A) : (term2201 A B _37163 u f t GEN_PVAR_85) = (term2201 A B _37163 u f t GEN_PVAR_85).
Proof. exact (eq_refl (term2201 A B _37163 u f t GEN_PVAR_85)). Qed.
Lemma lem3519073 {A B : Type'} (_37163 : type627 A B) (GEN_PVAR_85 : A) (u : A -> Prop) (f : A -> B) (t : A -> Prop) : ((_37163 u f t GEN_PVAR_85) = (term65 A B GEN_PVAR_85 u f t)) = ((_37163 u f t GEN_PVAR_85) = (term65 A B GEN_PVAR_85 u f t)).
Proof. exact (MK_COMB (@lem3519072 A B _37163 u f t GEN_PVAR_85) (@lem3519069 A B GEN_PVAR_85 u f t)). Qed.
Lemma lem3519074 {A B : Type'} (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) (t : A -> Prop) : (term2203 A B _37163 u f t) = (term2203 A B _37163 u f t).
Proof. exact (fun_ext (fun GEN_PVAR_85 : A => @lem3519073 A B _37163 GEN_PVAR_85 u f t)). Qed.
Lemma lem3519075 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem3519076 {A B : Type'} (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) (t : A -> Prop) : (term2204 A B _37163 u f t) = (term2204 A B _37163 u f t).
Proof. exact (MK_COMB (@lem3519075 A) (@lem3519074 A B _37163 u f t)). Qed.
Lemma lem3519077 {A B : Type'} (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) : (term2205 A B _37163 u f) = (term2205 A B _37163 u f).
Proof. exact (fun_ext (fun t : A -> Prop => @lem3519076 A B _37163 u f t)). Qed.
Lemma lem3519078 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem3519079 {A B : Type'} (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) : (term2206 A B _37163 u f) = (term2206 A B _37163 u f).
Proof. exact (MK_COMB (@lem3519078 A) (@lem3519077 A B _37163 u f)). Qed.
Lemma lem3519080 {A B : Type'} (_37163 : type627 A B) (u : A -> Prop) : (term2207 A B _37163 u) = (term2207 A B _37163 u).
Proof. exact (fun_ext (fun f : A -> B => @lem3519079 A B _37163 u f)). Qed.
Lemma lem3519081 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem3519082 {A B : Type'} (_37163 : type627 A B) (u : A -> Prop) : (term2208 A B _37163 u) = (term2208 A B _37163 u).
Proof. exact (MK_COMB (@lem3519081 A B) (@lem3519080 A B _37163 u)). Qed.
Lemma lem3519083 {A B : Type'} (_37163 : type627 A B) : (term2209 A B _37163) = (term2209 A B _37163).
Proof. exact (fun_ext (fun u : A -> Prop => @lem3519082 A B _37163 u)). Qed.
Lemma lem3519084 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem3519085 {A B : Type'} (_37163 : type627 A B) : (term2210 A B _37163) = (term2210 A B _37163).
Proof. exact (MK_COMB (@lem3519084 A) (@lem3519083 A B _37163)). Qed.
Lemma lem3519086 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem3519087 {A B : Type'} (_37163 : type627 A B) : (term2211 A B _37163) = (term2211 A B _37163).
Proof. exact (MK_COMB (@lem3519086) (@lem3519085 A B _37163)). Qed.
Lemma lem3519088 {_90715 _90724 A B : Type'} (_37164 : type627 _90715 _90724) (_37165 : type627 _90715 A) (_37166 : type627 _90715 B) (_37167 : type616 _90715 A) (_37168 : type852 _90724 A) (_37163 : type627 A B) (_37169 : type852 _90724 B) (_37170 : type235 _90724 A) (_37171 : type171 A B) : (term2783 _90715 _90724 A B _37164 _37165 _37166 _37167 _37168 _37163 _37169 _37170 _37171) = (term2783 _90715 _90724 A B _37164 _37165 _37166 _37167 _37168 _37163 _37169 _37170 _37171).
Proof. exact (MK_COMB (@lem3519087 A B _37163) (@lem3519065 _90715 _90724 A B _37164 _37165 _37166 _37167 _37168 _37163 _37169 _37170 _37171)). Qed.
Lemma lem3519089 {_90715 _90724 A B : Type'} (_37164 : type627 _90715 _90724) (_37165 : type627 _90715 A) (_37166 : type627 _90715 B) (_37167 : type616 _90715 A) (_37168 : type852 _90724 A) (_37169 : type852 _90724 B) (_37170 : type235 _90724 A) (_37171 : type171 A B) : (term2784 _90715 _90724 A B _37164 _37165 _37166 _37167 _37168 _37169 _37170 _37171) = (term2784 _90715 _90724 A B _37164 _37165 _37166 _37167 _37168 _37169 _37170 _37171).
Proof. exact (fun_ext (fun _37163 : type627 A B => @lem3519088 _90715 _90724 A B _37164 _37165 _37166 _37167 _37168 _37163 _37169 _37170 _37171)). Qed.
Lemma lem3519090 {A B : Type'} : (@all ((A -> Prop) -> (A -> B) -> (A -> Prop) -> A -> Prop)) = (@all ((A -> Prop) -> (A -> B) -> (A -> Prop) -> A -> Prop)).
Proof. exact (eq_refl (@all ((A -> Prop) -> (A -> B) -> (A -> Prop) -> A -> Prop))). Qed.
Lemma lem3519091 {_90715 _90724 A B : Type'} (_37164 : type627 _90715 _90724) (_37165 : type627 _90715 A) (_37166 : type627 _90715 B) (_37167 : type616 _90715 A) (_37168 : type852 _90724 A) (_37169 : type852 _90724 B) (_37170 : type235 _90724 A) (_37171 : type171 A B) : (term2785 _90715 _90724 A B _37164 _37165 _37166 _37167 _37168 _37169 _37170 _37171) = (term2785 _90715 _90724 A B _37164 _37165 _37166 _37167 _37168 _37169 _37170 _37171).
Proof. exact (MK_COMB (@lem3519090 A B) (@lem3519089 _90715 _90724 A B _37164 _37165 _37166 _37167 _37168 _37169 _37170 _37171)). Qed.
Lemma lem3519092 {_90715 _90724 : Type'} (GEN_PVAR_84 : _90715) (u : _90715 -> Prop) (f : _90715 -> _90724) (t : _90715 -> Prop) (x : _90715) : (term61 _90715 _90724 GEN_PVAR_84 u f t x) = (term61 _90715 _90724 GEN_PVAR_84 u f t x).
Proof. exact (eq_refl (term61 _90715 _90724 GEN_PVAR_84 u f t x)). Qed.
Lemma lem3519093 {_90715 _90724 : Type'} (GEN_PVAR_84 : _90715) (u : _90715 -> Prop) (f : _90715 -> _90724) (t : _90715 -> Prop) : (term63 _90715 _90724 GEN_PVAR_84 u f t) = (term63 _90715 _90724 GEN_PVAR_84 u f t).
Proof. exact (fun_ext (fun x : _90715 => @lem3519092 _90715 _90724 GEN_PVAR_84 u f t x)). Qed.
Lemma lem3519094 {_90715 : Type'} : (@ex _90715) = (@ex _90715).
Proof. exact (eq_refl (@ex _90715)). Qed.
Lemma lem3519095 {_90715 _90724 : Type'} (GEN_PVAR_84 : _90715) (u : _90715 -> Prop) (f : _90715 -> _90724) (t : _90715 -> Prop) : (term65 _90715 _90724 GEN_PVAR_84 u f t) = (term65 _90715 _90724 GEN_PVAR_84 u f t).
Proof. exact (MK_COMB (@lem3519094 _90715) (@lem3519093 _90715 _90724 GEN_PVAR_84 u f t)). Qed.
Lemma lem3519098 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) (u : _90715 -> Prop) (f : _90715 -> _90724) (t : _90715 -> Prop) (GEN_PVAR_84 : _90715) : (term2201 _90715 _90724 _37164 u f t GEN_PVAR_84) = (term2201 _90715 _90724 _37164 u f t GEN_PVAR_84).
Proof. exact (eq_refl (term2201 _90715 _90724 _37164 u f t GEN_PVAR_84)). Qed.
Lemma lem3519099 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) (GEN_PVAR_84 : _90715) (u : _90715 -> Prop) (f : _90715 -> _90724) (t : _90715 -> Prop) : ((_37164 u f t GEN_PVAR_84) = (term65 _90715 _90724 GEN_PVAR_84 u f t)) = ((_37164 u f t GEN_PVAR_84) = (term65 _90715 _90724 GEN_PVAR_84 u f t)).
Proof. exact (MK_COMB (@lem3519098 _90715 _90724 _37164 u f t GEN_PVAR_84) (@lem3519095 _90715 _90724 GEN_PVAR_84 u f t)). Qed.
Lemma lem3519100 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) (u : _90715 -> Prop) (f : _90715 -> _90724) (t : _90715 -> Prop) : (term2203 _90715 _90724 _37164 u f t) = (term2203 _90715 _90724 _37164 u f t).
Proof. exact (fun_ext (fun GEN_PVAR_84 : _90715 => @lem3519099 _90715 _90724 _37164 GEN_PVAR_84 u f t)). Qed.
Lemma lem3519101 {_90715 : Type'} : (@all _90715) = (@all _90715).
Proof. exact (eq_refl (@all _90715)). Qed.
Lemma lem3519102 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) (u : _90715 -> Prop) (f : _90715 -> _90724) (t : _90715 -> Prop) : (term2204 _90715 _90724 _37164 u f t) = (term2204 _90715 _90724 _37164 u f t).
Proof. exact (MK_COMB (@lem3519101 _90715) (@lem3519100 _90715 _90724 _37164 u f t)). Qed.
Lemma lem3519103 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) (u : _90715 -> Prop) (f : _90715 -> _90724) : (term2205 _90715 _90724 _37164 u f) = (term2205 _90715 _90724 _37164 u f).
Proof. exact (fun_ext (fun t : _90715 -> Prop => @lem3519102 _90715 _90724 _37164 u f t)). Qed.
Lemma lem3519104 {_90715 : Type'} : (@all (_90715 -> Prop)) = (@all (_90715 -> Prop)).
Proof. exact (eq_refl (@all (_90715 -> Prop))). Qed.
Lemma lem3519105 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) (u : _90715 -> Prop) (f : _90715 -> _90724) : (term2206 _90715 _90724 _37164 u f) = (term2206 _90715 _90724 _37164 u f).
Proof. exact (MK_COMB (@lem3519104 _90715) (@lem3519103 _90715 _90724 _37164 u f)). Qed.
Lemma lem3519106 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) (u : _90715 -> Prop) : (term2207 _90715 _90724 _37164 u) = (term2207 _90715 _90724 _37164 u).
Proof. exact (fun_ext (fun f : _90715 -> _90724 => @lem3519105 _90715 _90724 _37164 u f)). Qed.
Lemma lem3519107 {_90715 _90724 : Type'} : (@all (_90715 -> _90724)) = (@all (_90715 -> _90724)).
Proof. exact (eq_refl (@all (_90715 -> _90724))). Qed.
Lemma lem3519108 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) (u : _90715 -> Prop) : (term2208 _90715 _90724 _37164 u) = (term2208 _90715 _90724 _37164 u).
Proof. exact (MK_COMB (@lem3519107 _90715 _90724) (@lem3519106 _90715 _90724 _37164 u)). Qed.
Lemma lem3519109 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) : (term2209 _90715 _90724 _37164) = (term2209 _90715 _90724 _37164).
Proof. exact (fun_ext (fun u : _90715 -> Prop => @lem3519108 _90715 _90724 _37164 u)). Qed.
Lemma lem3519110 {_90715 : Type'} : (@all (_90715 -> Prop)) = (@all (_90715 -> Prop)).
Proof. exact (eq_refl (@all (_90715 -> Prop))). Qed.
Lemma lem3519111 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) : (term2210 _90715 _90724 _37164) = (term2210 _90715 _90724 _37164).
Proof. exact (MK_COMB (@lem3519110 _90715) (@lem3519109 _90715 _90724 _37164)). Qed.
Lemma lem3519112 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem3519113 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) : (term2211 _90715 _90724 _37164) = (term2211 _90715 _90724 _37164).
Proof. exact (MK_COMB (@lem3519112) (@lem3519111 _90715 _90724 _37164)). Qed.
Lemma lem3519114 {_90715 _90724 A B : Type'} (_37164 : type627 _90715 _90724) (_37165 : type627 _90715 A) (_37166 : type627 _90715 B) (_37167 : type616 _90715 A) (_37168 : type852 _90724 A) (_37169 : type852 _90724 B) (_37170 : type235 _90724 A) (_37171 : type171 A B) : (term2786 _90715 _90724 A B _37164 _37165 _37166 _37167 _37168 _37169 _37170 _37171) = (term2786 _90715 _90724 A B _37164 _37165 _37166 _37167 _37168 _37169 _37170 _37171).
Proof. exact (MK_COMB (@lem3519113 _90715 _90724 _37164) (@lem3519091 _90715 _90724 A B _37164 _37165 _37166 _37167 _37168 _37169 _37170 _37171)). Qed.
Lemma lem3519115 {_90715 _90724 A B : Type'} (_37165 : type627 _90715 A) (_37166 : type627 _90715 B) (_37167 : type616 _90715 A) (_37168 : type852 _90724 A) (_37169 : type852 _90724 B) (_37170 : type235 _90724 A) (_37171 : type171 A B) : (term2787 _90715 _90724 A B _37165 _37166 _37167 _37168 _37169 _37170 _37171) = (term2787 _90715 _90724 A B _37165 _37166 _37167 _37168 _37169 _37170 _37171).
Proof. exact (fun_ext (fun _37164 : type627 _90715 _90724 => @lem3519114 _90715 _90724 A B _37164 _37165 _37166 _37167 _37168 _37169 _37170 _37171)). Qed.
Lemma lem3519116 {_90715 _90724 : Type'} : (@all ((_90715 -> Prop) -> (_90715 -> _90724) -> (_90715 -> Prop) -> _90715 -> Prop)) = (@all ((_90715 -> Prop) -> (_90715 -> _90724) -> (_90715 -> Prop) -> _90715 -> Prop)).
Proof. exact (eq_refl (@all ((_90715 -> Prop) -> (_90715 -> _90724) -> (_90715 -> Prop) -> _90715 -> Prop))). Qed.
Lemma lem3519117 {_90715 _90724 A B : Type'} (_37165 : type627 _90715 A) (_37166 : type627 _90715 B) (_37167 : type616 _90715 A) (_37168 : type852 _90724 A) (_37169 : type852 _90724 B) (_37170 : type235 _90724 A) (_37171 : type171 A B) : (term2788 _90715 _90724 A B _37165 _37166 _37167 _37168 _37169 _37170 _37171) = (term2788 _90715 _90724 A B _37165 _37166 _37167 _37168 _37169 _37170 _37171).
Proof. exact (MK_COMB (@lem3519116 _90715 _90724) (@lem3519115 _90715 _90724 A B _37165 _37166 _37167 _37168 _37169 _37170 _37171)). Qed.
Lemma lem3519118 {_90715 A : Type'} (GEN_PVAR_84 : _90715) (u : _90715 -> Prop) (f : _90715 -> A) (t : _90715 -> Prop) (x : _90715) : (term61 _90715 A GEN_PVAR_84 u f t x) = (term61 _90715 A GEN_PVAR_84 u f t x).
Proof. exact (eq_refl (term61 _90715 A GEN_PVAR_84 u f t x)). Qed.
Lemma lem3519119 {_90715 A : Type'} (GEN_PVAR_84 : _90715) (u : _90715 -> Prop) (f : _90715 -> A) (t : _90715 -> Prop) : (term63 _90715 A GEN_PVAR_84 u f t) = (term63 _90715 A GEN_PVAR_84 u f t).
Proof. exact (fun_ext (fun x : _90715 => @lem3519118 _90715 A GEN_PVAR_84 u f t x)). Qed.
Lemma lem3519120 {_90715 : Type'} : (@ex _90715) = (@ex _90715).
Proof. exact (eq_refl (@ex _90715)). Qed.
Lemma lem3519121 {_90715 A : Type'} (GEN_PVAR_84 : _90715) (u : _90715 -> Prop) (f : _90715 -> A) (t : _90715 -> Prop) : (term65 _90715 A GEN_PVAR_84 u f t) = (term65 _90715 A GEN_PVAR_84 u f t).
Proof. exact (MK_COMB (@lem3519120 _90715) (@lem3519119 _90715 A GEN_PVAR_84 u f t)). Qed.
Lemma lem3519124 {_90715 A : Type'} (_37165 : type627 _90715 A) (u : _90715 -> Prop) (f : _90715 -> A) (t : _90715 -> Prop) (GEN_PVAR_84 : _90715) : (term2201 _90715 A _37165 u f t GEN_PVAR_84) = (term2201 _90715 A _37165 u f t GEN_PVAR_84).
Proof. exact (eq_refl (term2201 _90715 A _37165 u f t GEN_PVAR_84)). Qed.
Lemma lem3519125 {_90715 A : Type'} (_37165 : type627 _90715 A) (GEN_PVAR_84 : _90715) (u : _90715 -> Prop) (f : _90715 -> A) (t : _90715 -> Prop) : ((_37165 u f t GEN_PVAR_84) = (term65 _90715 A GEN_PVAR_84 u f t)) = ((_37165 u f t GEN_PVAR_84) = (term65 _90715 A GEN_PVAR_84 u f t)).
Proof. exact (MK_COMB (@lem3519124 _90715 A _37165 u f t GEN_PVAR_84) (@lem3519121 _90715 A GEN_PVAR_84 u f t)). Qed.
Lemma lem3519126 {_90715 A : Type'} (_37165 : type627 _90715 A) (u : _90715 -> Prop) (f : _90715 -> A) (t : _90715 -> Prop) : (term2203 _90715 A _37165 u f t) = (term2203 _90715 A _37165 u f t).
Proof. exact (fun_ext (fun GEN_PVAR_84 : _90715 => @lem3519125 _90715 A _37165 GEN_PVAR_84 u f t)). Qed.
Lemma lem3519127 {_90715 : Type'} : (@all _90715) = (@all _90715).
Proof. exact (eq_refl (@all _90715)). Qed.
Lemma lem3519128 {_90715 A : Type'} (_37165 : type627 _90715 A) (u : _90715 -> Prop) (f : _90715 -> A) (t : _90715 -> Prop) : (term2204 _90715 A _37165 u f t) = (term2204 _90715 A _37165 u f t).
Proof. exact (MK_COMB (@lem3519127 _90715) (@lem3519126 _90715 A _37165 u f t)). Qed.
Lemma lem3519129 {_90715 A : Type'} (_37165 : type627 _90715 A) (u : _90715 -> Prop) (f : _90715 -> A) : (term2205 _90715 A _37165 u f) = (term2205 _90715 A _37165 u f).
Proof. exact (fun_ext (fun t : _90715 -> Prop => @lem3519128 _90715 A _37165 u f t)). Qed.
Lemma lem3519130 {_90715 : Type'} : (@all (_90715 -> Prop)) = (@all (_90715 -> Prop)).
Proof. exact (eq_refl (@all (_90715 -> Prop))). Qed.
Lemma lem3519131 {_90715 A : Type'} (_37165 : type627 _90715 A) (u : _90715 -> Prop) (f : _90715 -> A) : (term2206 _90715 A _37165 u f) = (term2206 _90715 A _37165 u f).
Proof. exact (MK_COMB (@lem3519130 _90715) (@lem3519129 _90715 A _37165 u f)). Qed.
Lemma lem3519132 {_90715 A : Type'} (_37165 : type627 _90715 A) (u : _90715 -> Prop) : (term2207 _90715 A _37165 u) = (term2207 _90715 A _37165 u).
Proof. exact (fun_ext (fun f : _90715 -> A => @lem3519131 _90715 A _37165 u f)). Qed.
Lemma lem3519133 {_90715 A : Type'} : (@all (_90715 -> A)) = (@all (_90715 -> A)).
Proof. exact (eq_refl (@all (_90715 -> A))). Qed.
Lemma lem3519134 {_90715 A : Type'} (_37165 : type627 _90715 A) (u : _90715 -> Prop) : (term2208 _90715 A _37165 u) = (term2208 _90715 A _37165 u).
Proof. exact (MK_COMB (@lem3519133 _90715 A) (@lem3519132 _90715 A _37165 u)). Qed.
Lemma lem3519135 {_90715 A : Type'} (_37165 : type627 _90715 A) : (term2209 _90715 A _37165) = (term2209 _90715 A _37165).
Proof. exact (fun_ext (fun u : _90715 -> Prop => @lem3519134 _90715 A _37165 u)). Qed.
Lemma lem3519136 {_90715 : Type'} : (@all (_90715 -> Prop)) = (@all (_90715 -> Prop)).
Proof. exact (eq_refl (@all (_90715 -> Prop))). Qed.
Lemma lem3519137 {_90715 A : Type'} (_37165 : type627 _90715 A) : (term2210 _90715 A _37165) = (term2210 _90715 A _37165).
Proof. exact (MK_COMB (@lem3519136 _90715) (@lem3519135 _90715 A _37165)). Qed.
Lemma lem3519138 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem3519139 {_90715 A : Type'} (_37165 : type627 _90715 A) : (term2211 _90715 A _37165) = (term2211 _90715 A _37165).
Proof. exact (MK_COMB (@lem3519138) (@lem3519137 _90715 A _37165)). Qed.
Lemma lem3519140 {_90715 _90724 A B : Type'} (_37165 : type627 _90715 A) (_37166 : type627 _90715 B) (_37167 : type616 _90715 A) (_37168 : type852 _90724 A) (_37169 : type852 _90724 B) (_37170 : type235 _90724 A) (_37171 : type171 A B) : (term2789 _90715 _90724 A B _37165 _37166 _37167 _37168 _37169 _37170 _37171) = (term2789 _90715 _90724 A B _37165 _37166 _37167 _37168 _37169 _37170 _37171).
Proof. exact (MK_COMB (@lem3519139 _90715 A _37165) (@lem3519117 _90715 _90724 A B _37165 _37166 _37167 _37168 _37169 _37170 _37171)). Qed.
Lemma lem3519141 {_90715 _90724 A B : Type'} (_37166 : type627 _90715 B) (_37167 : type616 _90715 A) (_37168 : type852 _90724 A) (_37169 : type852 _90724 B) (_37170 : type235 _90724 A) (_37171 : type171 A B) : (term2790 _90715 _90724 A B _37166 _37167 _37168 _37169 _37170 _37171) = (term2790 _90715 _90724 A B _37166 _37167 _37168 _37169 _37170 _37171).
Proof. exact (fun_ext (fun _37165 : type627 _90715 A => @lem3519140 _90715 _90724 A B _37165 _37166 _37167 _37168 _37169 _37170 _37171)). Qed.
Lemma lem3519142 {_90715 A : Type'} : (@all ((_90715 -> Prop) -> (_90715 -> A) -> (_90715 -> Prop) -> _90715 -> Prop)) = (@all ((_90715 -> Prop) -> (_90715 -> A) -> (_90715 -> Prop) -> _90715 -> Prop)).
Proof. exact (eq_refl (@all ((_90715 -> Prop) -> (_90715 -> A) -> (_90715 -> Prop) -> _90715 -> Prop))). Qed.
Lemma lem3519143 {_90715 _90724 A B : Type'} (_37166 : type627 _90715 B) (_37167 : type616 _90715 A) (_37168 : type852 _90724 A) (_37169 : type852 _90724 B) (_37170 : type235 _90724 A) (_37171 : type171 A B) : (term2791 _90715 _90724 A B _37166 _37167 _37168 _37169 _37170 _37171) = (term2791 _90715 _90724 A B _37166 _37167 _37168 _37169 _37170 _37171).
Proof. exact (MK_COMB (@lem3519142 _90715 A) (@lem3519141 _90715 _90724 A B _37166 _37167 _37168 _37169 _37170 _37171)). Qed.
Lemma lem3519144 {_90715 B : Type'} (GEN_PVAR_84 : _90715) (u : _90715 -> Prop) (f : _90715 -> B) (t : _90715 -> Prop) (x : _90715) : (term61 _90715 B GEN_PVAR_84 u f t x) = (term61 _90715 B GEN_PVAR_84 u f t x).
Proof. exact (eq_refl (term61 _90715 B GEN_PVAR_84 u f t x)). Qed.
Lemma lem3519145 {_90715 B : Type'} (GEN_PVAR_84 : _90715) (u : _90715 -> Prop) (f : _90715 -> B) (t : _90715 -> Prop) : (term63 _90715 B GEN_PVAR_84 u f t) = (term63 _90715 B GEN_PVAR_84 u f t).
Proof. exact (fun_ext (fun x : _90715 => @lem3519144 _90715 B GEN_PVAR_84 u f t x)). Qed.
Lemma lem3519146 {_90715 : Type'} : (@ex _90715) = (@ex _90715).
Proof. exact (eq_refl (@ex _90715)). Qed.
Lemma lem3519147 {_90715 B : Type'} (GEN_PVAR_84 : _90715) (u : _90715 -> Prop) (f : _90715 -> B) (t : _90715 -> Prop) : (term65 _90715 B GEN_PVAR_84 u f t) = (term65 _90715 B GEN_PVAR_84 u f t).
Proof. exact (MK_COMB (@lem3519146 _90715) (@lem3519145 _90715 B GEN_PVAR_84 u f t)). Qed.
Lemma lem3519150 {_90715 B : Type'} (_37166 : type627 _90715 B) (u : _90715 -> Prop) (f : _90715 -> B) (t : _90715 -> Prop) (GEN_PVAR_84 : _90715) : (term2201 _90715 B _37166 u f t GEN_PVAR_84) = (term2201 _90715 B _37166 u f t GEN_PVAR_84).
Proof. exact (eq_refl (term2201 _90715 B _37166 u f t GEN_PVAR_84)). Qed.
Lemma lem3519151 {_90715 B : Type'} (_37166 : type627 _90715 B) (GEN_PVAR_84 : _90715) (u : _90715 -> Prop) (f : _90715 -> B) (t : _90715 -> Prop) : ((_37166 u f t GEN_PVAR_84) = (term65 _90715 B GEN_PVAR_84 u f t)) = ((_37166 u f t GEN_PVAR_84) = (term65 _90715 B GEN_PVAR_84 u f t)).
Proof. exact (MK_COMB (@lem3519150 _90715 B _37166 u f t GEN_PVAR_84) (@lem3519147 _90715 B GEN_PVAR_84 u f t)). Qed.
Lemma lem3519152 {_90715 B : Type'} (_37166 : type627 _90715 B) (u : _90715 -> Prop) (f : _90715 -> B) (t : _90715 -> Prop) : (term2203 _90715 B _37166 u f t) = (term2203 _90715 B _37166 u f t).
Proof. exact (fun_ext (fun GEN_PVAR_84 : _90715 => @lem3519151 _90715 B _37166 GEN_PVAR_84 u f t)). Qed.
Lemma lem3519153 {_90715 : Type'} : (@all _90715) = (@all _90715).
Proof. exact (eq_refl (@all _90715)). Qed.
Lemma lem3519154 {_90715 B : Type'} (_37166 : type627 _90715 B) (u : _90715 -> Prop) (f : _90715 -> B) (t : _90715 -> Prop) : (term2204 _90715 B _37166 u f t) = (term2204 _90715 B _37166 u f t).
Proof. exact (MK_COMB (@lem3519153 _90715) (@lem3519152 _90715 B _37166 u f t)). Qed.
Lemma lem3519155 {_90715 B : Type'} (_37166 : type627 _90715 B) (u : _90715 -> Prop) (f : _90715 -> B) : (term2205 _90715 B _37166 u f) = (term2205 _90715 B _37166 u f).
Proof. exact (fun_ext (fun t : _90715 -> Prop => @lem3519154 _90715 B _37166 u f t)). Qed.
Lemma lem3519156 {_90715 : Type'} : (@all (_90715 -> Prop)) = (@all (_90715 -> Prop)).
Proof. exact (eq_refl (@all (_90715 -> Prop))). Qed.
Lemma lem3519157 {_90715 B : Type'} (_37166 : type627 _90715 B) (u : _90715 -> Prop) (f : _90715 -> B) : (term2206 _90715 B _37166 u f) = (term2206 _90715 B _37166 u f).
Proof. exact (MK_COMB (@lem3519156 _90715) (@lem3519155 _90715 B _37166 u f)). Qed.
Lemma lem3519158 {_90715 B : Type'} (_37166 : type627 _90715 B) (u : _90715 -> Prop) : (term2207 _90715 B _37166 u) = (term2207 _90715 B _37166 u).
Proof. exact (fun_ext (fun f : _90715 -> B => @lem3519157 _90715 B _37166 u f)). Qed.
Lemma lem3519159 {_90715 B : Type'} : (@all (_90715 -> B)) = (@all (_90715 -> B)).
Proof. exact (eq_refl (@all (_90715 -> B))). Qed.
Lemma lem3519160 {_90715 B : Type'} (_37166 : type627 _90715 B) (u : _90715 -> Prop) : (term2208 _90715 B _37166 u) = (term2208 _90715 B _37166 u).
Proof. exact (MK_COMB (@lem3519159 _90715 B) (@lem3519158 _90715 B _37166 u)). Qed.
Lemma lem3519161 {_90715 B : Type'} (_37166 : type627 _90715 B) : (term2209 _90715 B _37166) = (term2209 _90715 B _37166).
Proof. exact (fun_ext (fun u : _90715 -> Prop => @lem3519160 _90715 B _37166 u)). Qed.
Lemma lem3519162 {_90715 : Type'} : (@all (_90715 -> Prop)) = (@all (_90715 -> Prop)).
Proof. exact (eq_refl (@all (_90715 -> Prop))). Qed.
Lemma lem3519163 {_90715 B : Type'} (_37166 : type627 _90715 B) : (term2210 _90715 B _37166) = (term2210 _90715 B _37166).
Proof. exact (MK_COMB (@lem3519162 _90715) (@lem3519161 _90715 B _37166)). Qed.
Lemma lem3519164 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem3519165 {_90715 B : Type'} (_37166 : type627 _90715 B) : (term2211 _90715 B _37166) = (term2211 _90715 B _37166).
Proof. exact (MK_COMB (@lem3519164) (@lem3519163 _90715 B _37166)). Qed.
Lemma lem3519166 {_90715 _90724 A B : Type'} (_37166 : type627 _90715 B) (_37167 : type616 _90715 A) (_37168 : type852 _90724 A) (_37169 : type852 _90724 B) (_37170 : type235 _90724 A) (_37171 : type171 A B) : (term2792 _90715 _90724 A B _37166 _37167 _37168 _37169 _37170 _37171) = (term2792 _90715 _90724 A B _37166 _37167 _37168 _37169 _37170 _37171).
Proof. exact (MK_COMB (@lem3519165 _90715 B _37166) (@lem3519143 _90715 _90724 A B _37166 _37167 _37168 _37169 _37170 _37171)). Qed.
Lemma lem3519167 {_90715 _90724 A B : Type'} (_37167 : type616 _90715 A) (_37168 : type852 _90724 A) (_37169 : type852 _90724 B) (_37170 : type235 _90724 A) (_37171 : type171 A B) : (term2793 _90715 _90724 A B _37167 _37168 _37169 _37170 _37171) = (term2793 _90715 _90724 A B _37167 _37168 _37169 _37170 _37171).
Proof. exact (fun_ext (fun _37166 : type627 _90715 B => @lem3519166 _90715 _90724 A B _37166 _37167 _37168 _37169 _37170 _37171)). Qed.
Lemma lem3519168 {_90715 B : Type'} : (@all ((_90715 -> Prop) -> (_90715 -> B) -> (_90715 -> Prop) -> _90715 -> Prop)) = (@all ((_90715 -> Prop) -> (_90715 -> B) -> (_90715 -> Prop) -> _90715 -> Prop)).
Proof. exact (eq_refl (@all ((_90715 -> Prop) -> (_90715 -> B) -> (_90715 -> Prop) -> _90715 -> Prop))). Qed.
Lemma lem3519169 {_90715 _90724 A B : Type'} (_37167 : type616 _90715 A) (_37168 : type852 _90724 A) (_37169 : type852 _90724 B) (_37170 : type235 _90724 A) (_37171 : type171 A B) : (term2794 _90715 _90724 A B _37167 _37168 _37169 _37170 _37171) = (term2794 _90715 _90724 A B _37167 _37168 _37169 _37170 _37171).
Proof. exact (MK_COMB (@lem3519168 _90715 B) (@lem3519167 _90715 _90724 A B _37167 _37168 _37169 _37170 _37171)). Qed.
Lemma lem3519170 {_90715 A : Type'} (GEN_PVAR_84 : _90715) (u : _90715 -> Prop) (f : type1413 _90715 A) (t : _90715 -> Prop) (x : _90715) : (term2101 _90715 A GEN_PVAR_84 u f t x) = (term2101 _90715 A GEN_PVAR_84 u f t x).
Proof. exact (eq_refl (term2101 _90715 A GEN_PVAR_84 u f t x)). Qed.
Lemma lem3519171 {_90715 A : Type'} (GEN_PVAR_84 : _90715) (u : _90715 -> Prop) (f : type1413 _90715 A) (t : _90715 -> Prop) : (term2102 _90715 A GEN_PVAR_84 u f t) = (term2102 _90715 A GEN_PVAR_84 u f t).
Proof. exact (fun_ext (fun x : _90715 => @lem3519170 _90715 A GEN_PVAR_84 u f t x)). Qed.
Lemma lem3519172 {_90715 : Type'} : (@ex _90715) = (@ex _90715).
Proof. exact (eq_refl (@ex _90715)). Qed.
Lemma lem3519173 {_90715 A : Type'} (GEN_PVAR_84 : _90715) (u : _90715 -> Prop) (f : type1413 _90715 A) (t : _90715 -> Prop) : (term2103 _90715 A GEN_PVAR_84 u f t) = (term2103 _90715 A GEN_PVAR_84 u f t).
Proof. exact (MK_COMB (@lem3519172 _90715) (@lem3519171 _90715 A GEN_PVAR_84 u f t)). Qed.
Lemma lem3519176 {_90715 A : Type'} (_37167 : type616 _90715 A) (u : _90715 -> Prop) (f : type1413 _90715 A) (t : _90715 -> Prop) (GEN_PVAR_84 : _90715) : (term2426 _90715 A _37167 u f t GEN_PVAR_84) = (term2426 _90715 A _37167 u f t GEN_PVAR_84).
Proof. exact (eq_refl (term2426 _90715 A _37167 u f t GEN_PVAR_84)). Qed.
Lemma lem3519177 {_90715 A : Type'} (_37167 : type616 _90715 A) (GEN_PVAR_84 : _90715) (u : _90715 -> Prop) (f : type1413 _90715 A) (t : _90715 -> Prop) : ((_37167 u f t GEN_PVAR_84) = (term2103 _90715 A GEN_PVAR_84 u f t)) = ((_37167 u f t GEN_PVAR_84) = (term2103 _90715 A GEN_PVAR_84 u f t)).
Proof. exact (MK_COMB (@lem3519176 _90715 A _37167 u f t GEN_PVAR_84) (@lem3519173 _90715 A GEN_PVAR_84 u f t)). Qed.
Lemma lem3519178 {_90715 A : Type'} (_37167 : type616 _90715 A) (u : _90715 -> Prop) (f : type1413 _90715 A) (t : _90715 -> Prop) : (term2428 _90715 A _37167 u f t) = (term2428 _90715 A _37167 u f t).
Proof. exact (fun_ext (fun GEN_PVAR_84 : _90715 => @lem3519177 _90715 A _37167 GEN_PVAR_84 u f t)). Qed.
Lemma lem3519179 {_90715 : Type'} : (@all _90715) = (@all _90715).
Proof. exact (eq_refl (@all _90715)). Qed.
Lemma lem3519180 {_90715 A : Type'} (_37167 : type616 _90715 A) (u : _90715 -> Prop) (f : type1413 _90715 A) (t : _90715 -> Prop) : (term2429 _90715 A _37167 u f t) = (term2429 _90715 A _37167 u f t).
Proof. exact (MK_COMB (@lem3519179 _90715) (@lem3519178 _90715 A _37167 u f t)). Qed.
Lemma lem3519181 {_90715 A : Type'} (_37167 : type616 _90715 A) (u : _90715 -> Prop) (f : type1413 _90715 A) : (term2430 _90715 A _37167 u f) = (term2430 _90715 A _37167 u f).
Proof. exact (fun_ext (fun t : _90715 -> Prop => @lem3519180 _90715 A _37167 u f t)). Qed.
Lemma lem3519182 {_90715 : Type'} : (@all (_90715 -> Prop)) = (@all (_90715 -> Prop)).
Proof. exact (eq_refl (@all (_90715 -> Prop))). Qed.
Lemma lem3519183 {_90715 A : Type'} (_37167 : type616 _90715 A) (u : _90715 -> Prop) (f : type1413 _90715 A) : (term2431 _90715 A _37167 u f) = (term2431 _90715 A _37167 u f).
Proof. exact (MK_COMB (@lem3519182 _90715) (@lem3519181 _90715 A _37167 u f)). Qed.
Lemma lem3519184 {_90715 A : Type'} (_37167 : type616 _90715 A) (u : _90715 -> Prop) : (term2432 _90715 A _37167 u) = (term2432 _90715 A _37167 u).
Proof. exact (fun_ext (fun f : type1413 _90715 A => @lem3519183 _90715 A _37167 u f)). Qed.
Lemma lem3519185 {_90715 A : Type'} : (@all (_90715 -> A -> Prop)) = (@all (_90715 -> A -> Prop)).
Proof. exact (eq_refl (@all (_90715 -> A -> Prop))). Qed.
Lemma lem3519186 {_90715 A : Type'} (_37167 : type616 _90715 A) (u : _90715 -> Prop) : (term2433 _90715 A _37167 u) = (term2433 _90715 A _37167 u).
Proof. exact (MK_COMB (@lem3519185 _90715 A) (@lem3519184 _90715 A _37167 u)). Qed.
Lemma lem3519187 {_90715 A : Type'} (_37167 : type616 _90715 A) : (term2434 _90715 A _37167) = (term2434 _90715 A _37167).
Proof. exact (fun_ext (fun u : _90715 -> Prop => @lem3519186 _90715 A _37167 u)). Qed.
Lemma lem3519188 {_90715 : Type'} : (@all (_90715 -> Prop)) = (@all (_90715 -> Prop)).
Proof. exact (eq_refl (@all (_90715 -> Prop))). Qed.
Lemma lem3519189 {_90715 A : Type'} (_37167 : type616 _90715 A) : (term2435 _90715 A _37167) = (term2435 _90715 A _37167).
Proof. exact (MK_COMB (@lem3519188 _90715) (@lem3519187 _90715 A _37167)). Qed.
Lemma lem3519190 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem3519191 {_90715 A : Type'} (_37167 : type616 _90715 A) : (term2436 _90715 A _37167) = (term2436 _90715 A _37167).
Proof. exact (MK_COMB (@lem3519190) (@lem3519189 _90715 A _37167)). Qed.
Lemma lem3519192 {_90715 _90724 A B : Type'} (_37167 : type616 _90715 A) (_37168 : type852 _90724 A) (_37169 : type852 _90724 B) (_37170 : type235 _90724 A) (_37171 : type171 A B) : (term2795 _90715 _90724 A B _37167 _37168 _37169 _37170 _37171) = (term2795 _90715 _90724 A B _37167 _37168 _37169 _37170 _37171).
Proof. exact (MK_COMB (@lem3519191 _90715 A _37167) (@lem3519169 _90715 _90724 A B _37167 _37168 _37169 _37170 _37171)). Qed.
Lemma lem3519193 {_90715 _90724 A B : Type'} (_37168 : type852 _90724 A) (_37169 : type852 _90724 B) (_37170 : type235 _90724 A) (_37171 : type171 A B) : (term2796 _90715 _90724 A B _37168 _37169 _37170 _37171) = (term2796 _90715 _90724 A B _37168 _37169 _37170 _37171).
Proof. exact (fun_ext (fun _37167 : type616 _90715 A => @lem3519192 _90715 _90724 A B _37167 _37168 _37169 _37170 _37171)). Qed.
Lemma lem3519194 {_90715 A : Type'} : (@all ((_90715 -> Prop) -> (_90715 -> A -> Prop) -> (_90715 -> Prop) -> _90715 -> Prop)) = (@all ((_90715 -> Prop) -> (_90715 -> A -> Prop) -> (_90715 -> Prop) -> _90715 -> Prop)).
Proof. exact (eq_refl (@all ((_90715 -> Prop) -> (_90715 -> A -> Prop) -> (_90715 -> Prop) -> _90715 -> Prop))). Qed.
Lemma lem3519195 {_90715 _90724 A B : Type'} (_37168 : type852 _90724 A) (_37169 : type852 _90724 B) (_37170 : type235 _90724 A) (_37171 : type171 A B) : (term2797 _90715 _90724 A B _37168 _37169 _37170 _37171) = (term2797 _90715 _90724 A B _37168 _37169 _37170 _37171).
Proof. exact (MK_COMB (@lem3519194 _90715 A) (@lem3519193 _90715 _90724 A B _37168 _37169 _37170 _37171)). Qed.
Lemma lem3519196 {_90724 A : Type'} (GEN_PVAR_84 : A) (u : A -> Prop) (f : A -> _90724) (t : A -> Prop) (x : A) : (term2058 _90724 A GEN_PVAR_84 u f t x) = (term2058 _90724 A GEN_PVAR_84 u f t x).
Proof. exact (eq_refl (term2058 _90724 A GEN_PVAR_84 u f t x)). Qed.
Lemma lem3519197 {_90724 A : Type'} (GEN_PVAR_84 : A) (u : A -> Prop) (f : A -> _90724) (t : A -> Prop) : (term2059 _90724 A GEN_PVAR_84 u f t) = (term2059 _90724 A GEN_PVAR_84 u f t).
Proof. exact (fun_ext (fun x : A => @lem3519196 _90724 A GEN_PVAR_84 u f t x)). Qed.
Lemma lem3519198 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem3519199 {_90724 A : Type'} (GEN_PVAR_84 : A) (u : A -> Prop) (f : A -> _90724) (t : A -> Prop) : (term2060 _90724 A GEN_PVAR_84 u f t) = (term2060 _90724 A GEN_PVAR_84 u f t).
Proof. exact (MK_COMB (@lem3519198 A) (@lem3519197 _90724 A GEN_PVAR_84 u f t)). Qed.
Lemma lem3519202 {_90724 A : Type'} (_37168 : type852 _90724 A) (u : A -> Prop) (f : A -> _90724) (t : A -> Prop) (GEN_PVAR_84 : A) : (term2544 _90724 A _37168 u f t GEN_PVAR_84) = (term2544 _90724 A _37168 u f t GEN_PVAR_84).
Proof. exact (eq_refl (term2544 _90724 A _37168 u f t GEN_PVAR_84)). Qed.
Lemma lem3519203 {_90724 A : Type'} (_37168 : type852 _90724 A) (GEN_PVAR_84 : A) (u : A -> Prop) (f : A -> _90724) (t : A -> Prop) : ((_37168 u f t GEN_PVAR_84) = (term2060 _90724 A GEN_PVAR_84 u f t)) = ((_37168 u f t GEN_PVAR_84) = (term2060 _90724 A GEN_PVAR_84 u f t)).
Proof. exact (MK_COMB (@lem3519202 _90724 A _37168 u f t GEN_PVAR_84) (@lem3519199 _90724 A GEN_PVAR_84 u f t)). Qed.
Lemma lem3519204 {_90724 A : Type'} (_37168 : type852 _90724 A) (u : A -> Prop) (f : A -> _90724) (t : A -> Prop) : (term2546 _90724 A _37168 u f t) = (term2546 _90724 A _37168 u f t).
Proof. exact (fun_ext (fun GEN_PVAR_84 : A => @lem3519203 _90724 A _37168 GEN_PVAR_84 u f t)). Qed.
Lemma lem3519205 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem3519206 {_90724 A : Type'} (_37168 : type852 _90724 A) (u : A -> Prop) (f : A -> _90724) (t : A -> Prop) : (term2547 _90724 A _37168 u f t) = (term2547 _90724 A _37168 u f t).
Proof. exact (MK_COMB (@lem3519205 A) (@lem3519204 _90724 A _37168 u f t)). Qed.
Lemma lem3519207 {_90724 A : Type'} (_37168 : type852 _90724 A) (u : A -> Prop) (f : A -> _90724) : (term2548 _90724 A _37168 u f) = (term2548 _90724 A _37168 u f).
Proof. exact (fun_ext (fun t : A -> Prop => @lem3519206 _90724 A _37168 u f t)). Qed.
Lemma lem3519208 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem3519209 {_90724 A : Type'} (_37168 : type852 _90724 A) (u : A -> Prop) (f : A -> _90724) : (term2549 _90724 A _37168 u f) = (term2549 _90724 A _37168 u f).
Proof. exact (MK_COMB (@lem3519208 A) (@lem3519207 _90724 A _37168 u f)). Qed.
Lemma lem3519210 {_90724 A : Type'} (_37168 : type852 _90724 A) (u : A -> Prop) : (term2550 _90724 A _37168 u) = (term2550 _90724 A _37168 u).
Proof. exact (fun_ext (fun f : A -> _90724 => @lem3519209 _90724 A _37168 u f)). Qed.
Lemma lem3519211 {_90724 A : Type'} : (@all (A -> _90724)) = (@all (A -> _90724)).
Proof. exact (eq_refl (@all (A -> _90724))). Qed.
Lemma lem3519212 {_90724 A : Type'} (_37168 : type852 _90724 A) (u : A -> Prop) : (term2551 _90724 A _37168 u) = (term2551 _90724 A _37168 u).
Proof. exact (MK_COMB (@lem3519211 _90724 A) (@lem3519210 _90724 A _37168 u)). Qed.
Lemma lem3519213 {_90724 A : Type'} (_37168 : type852 _90724 A) : (term2552 _90724 A _37168) = (term2552 _90724 A _37168).
Proof. exact (fun_ext (fun u : A -> Prop => @lem3519212 _90724 A _37168 u)). Qed.
Lemma lem3519214 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem3519215 {_90724 A : Type'} (_37168 : type852 _90724 A) : (term2553 _90724 A _37168) = (term2553 _90724 A _37168).
Proof. exact (MK_COMB (@lem3519214 A) (@lem3519213 _90724 A _37168)). Qed.
Lemma lem3519216 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem3519217 {_90724 A : Type'} (_37168 : type852 _90724 A) : (term2554 _90724 A _37168) = (term2554 _90724 A _37168).
Proof. exact (MK_COMB (@lem3519216) (@lem3519215 _90724 A _37168)). Qed.
Lemma lem3519218 {_90715 _90724 A B : Type'} (_37168 : type852 _90724 A) (_37169 : type852 _90724 B) (_37170 : type235 _90724 A) (_37171 : type171 A B) : (term2798 _90715 _90724 A B _37168 _37169 _37170 _37171) = (term2798 _90715 _90724 A B _37168 _37169 _37170 _37171).
Proof. exact (MK_COMB (@lem3519217 _90724 A _37168) (@lem3519195 _90715 _90724 A B _37168 _37169 _37170 _37171)). Qed.
Lemma lem3519219 {_90715 _90724 A B : Type'} (_37169 : type852 _90724 B) (_37170 : type235 _90724 A) (_37171 : type171 A B) : (term2799 _90715 _90724 A B _37169 _37170 _37171) = (term2799 _90715 _90724 A B _37169 _37170 _37171).
Proof. exact (fun_ext (fun _37168 : type852 _90724 A => @lem3519218 _90715 _90724 A B _37168 _37169 _37170 _37171)). Qed.
Lemma lem3519220 {_90724 A : Type'} : (@all ((A -> Prop) -> (A -> _90724) -> (A -> Prop) -> A -> Prop)) = (@all ((A -> Prop) -> (A -> _90724) -> (A -> Prop) -> A -> Prop)).
Proof. exact (eq_refl (@all ((A -> Prop) -> (A -> _90724) -> (A -> Prop) -> A -> Prop))). Qed.
Lemma lem3519221 {_90715 _90724 A B : Type'} (_37169 : type852 _90724 B) (_37170 : type235 _90724 A) (_37171 : type171 A B) : (term2800 _90715 _90724 A B _37169 _37170 _37171) = (term2800 _90715 _90724 A B _37169 _37170 _37171).
Proof. exact (MK_COMB (@lem3519220 _90724 A) (@lem3519219 _90715 _90724 A B _37169 _37170 _37171)). Qed.
Lemma lem3519222 {_90724 B : Type'} (GEN_PVAR_84 : B) (u : B -> Prop) (f : B -> _90724) (t : B -> Prop) (x : B) : (term2058 _90724 B GEN_PVAR_84 u f t x) = (term2058 _90724 B GEN_PVAR_84 u f t x).
Proof. exact (eq_refl (term2058 _90724 B GEN_PVAR_84 u f t x)). Qed.
Lemma lem3519223 {_90724 B : Type'} (GEN_PVAR_84 : B) (u : B -> Prop) (f : B -> _90724) (t : B -> Prop) : (term2059 _90724 B GEN_PVAR_84 u f t) = (term2059 _90724 B GEN_PVAR_84 u f t).
Proof. exact (fun_ext (fun x : B => @lem3519222 _90724 B GEN_PVAR_84 u f t x)). Qed.
Lemma lem3519224 {B : Type'} : (@ex B) = (@ex B).
Proof. exact (eq_refl (@ex B)). Qed.
Lemma lem3519225 {_90724 B : Type'} (GEN_PVAR_84 : B) (u : B -> Prop) (f : B -> _90724) (t : B -> Prop) : (term2060 _90724 B GEN_PVAR_84 u f t) = (term2060 _90724 B GEN_PVAR_84 u f t).
Proof. exact (MK_COMB (@lem3519224 B) (@lem3519223 _90724 B GEN_PVAR_84 u f t)). Qed.
Lemma lem3519228 {_90724 B : Type'} (_37169 : type852 _90724 B) (u : B -> Prop) (f : B -> _90724) (t : B -> Prop) (GEN_PVAR_84 : B) : (term2544 _90724 B _37169 u f t GEN_PVAR_84) = (term2544 _90724 B _37169 u f t GEN_PVAR_84).
Proof. exact (eq_refl (term2544 _90724 B _37169 u f t GEN_PVAR_84)). Qed.
Lemma lem3519229 {_90724 B : Type'} (_37169 : type852 _90724 B) (GEN_PVAR_84 : B) (u : B -> Prop) (f : B -> _90724) (t : B -> Prop) : ((_37169 u f t GEN_PVAR_84) = (term2060 _90724 B GEN_PVAR_84 u f t)) = ((_37169 u f t GEN_PVAR_84) = (term2060 _90724 B GEN_PVAR_84 u f t)).
Proof. exact (MK_COMB (@lem3519228 _90724 B _37169 u f t GEN_PVAR_84) (@lem3519225 _90724 B GEN_PVAR_84 u f t)). Qed.
Lemma lem3519230 {_90724 B : Type'} (_37169 : type852 _90724 B) (u : B -> Prop) (f : B -> _90724) (t : B -> Prop) : (term2546 _90724 B _37169 u f t) = (term2546 _90724 B _37169 u f t).
Proof. exact (fun_ext (fun GEN_PVAR_84 : B => @lem3519229 _90724 B _37169 GEN_PVAR_84 u f t)). Qed.
Lemma lem3519231 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem3519232 {_90724 B : Type'} (_37169 : type852 _90724 B) (u : B -> Prop) (f : B -> _90724) (t : B -> Prop) : (term2547 _90724 B _37169 u f t) = (term2547 _90724 B _37169 u f t).
Proof. exact (MK_COMB (@lem3519231 B) (@lem3519230 _90724 B _37169 u f t)). Qed.
Lemma lem3519233 {_90724 B : Type'} (_37169 : type852 _90724 B) (u : B -> Prop) (f : B -> _90724) : (term2548 _90724 B _37169 u f) = (term2548 _90724 B _37169 u f).
Proof. exact (fun_ext (fun t : B -> Prop => @lem3519232 _90724 B _37169 u f t)). Qed.
Lemma lem3519234 {B : Type'} : (@all (B -> Prop)) = (@all (B -> Prop)).
Proof. exact (eq_refl (@all (B -> Prop))). Qed.
Lemma lem3519235 {_90724 B : Type'} (_37169 : type852 _90724 B) (u : B -> Prop) (f : B -> _90724) : (term2549 _90724 B _37169 u f) = (term2549 _90724 B _37169 u f).
Proof. exact (MK_COMB (@lem3519234 B) (@lem3519233 _90724 B _37169 u f)). Qed.
Lemma lem3519236 {_90724 B : Type'} (_37169 : type852 _90724 B) (u : B -> Prop) : (term2550 _90724 B _37169 u) = (term2550 _90724 B _37169 u).
Proof. exact (fun_ext (fun f : B -> _90724 => @lem3519235 _90724 B _37169 u f)). Qed.
Lemma lem3519237 {_90724 B : Type'} : (@all (B -> _90724)) = (@all (B -> _90724)).
Proof. exact (eq_refl (@all (B -> _90724))). Qed.
Lemma lem3519238 {_90724 B : Type'} (_37169 : type852 _90724 B) (u : B -> Prop) : (term2551 _90724 B _37169 u) = (term2551 _90724 B _37169 u).
Proof. exact (MK_COMB (@lem3519237 _90724 B) (@lem3519236 _90724 B _37169 u)). Qed.
Lemma lem3519239 {_90724 B : Type'} (_37169 : type852 _90724 B) : (term2552 _90724 B _37169) = (term2552 _90724 B _37169).
Proof. exact (fun_ext (fun u : B -> Prop => @lem3519238 _90724 B _37169 u)). Qed.
Lemma lem3519240 {B : Type'} : (@all (B -> Prop)) = (@all (B -> Prop)).
Proof. exact (eq_refl (@all (B -> Prop))). Qed.
Lemma lem3519241 {_90724 B : Type'} (_37169 : type852 _90724 B) : (term2553 _90724 B _37169) = (term2553 _90724 B _37169).
Proof. exact (MK_COMB (@lem3519240 B) (@lem3519239 _90724 B _37169)). Qed.
Lemma lem3519242 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem3519243 {_90724 B : Type'} (_37169 : type852 _90724 B) : (term2554 _90724 B _37169) = (term2554 _90724 B _37169).
Proof. exact (MK_COMB (@lem3519242) (@lem3519241 _90724 B _37169)). Qed.
Lemma lem3519244 {_90715 _90724 A B : Type'} (_37169 : type852 _90724 B) (_37170 : type235 _90724 A) (_37171 : type171 A B) : (term2801 _90715 _90724 A B _37169 _37170 _37171) = (term2801 _90715 _90724 A B _37169 _37170 _37171).
Proof. exact (MK_COMB (@lem3519243 _90724 B _37169) (@lem3519221 _90715 _90724 A B _37169 _37170 _37171)). Qed.
Lemma lem3519245 {_90715 _90724 A B : Type'} (_37170 : type235 _90724 A) (_37171 : type171 A B) : (term2802 _90715 _90724 A B _37170 _37171) = (term2802 _90715 _90724 A B _37170 _37171).
Proof. exact (fun_ext (fun _37169 : type852 _90724 B => @lem3519244 _90715 _90724 A B _37169 _37170 _37171)). Qed.
Lemma lem3519246 {_90724 B : Type'} : (@all ((B -> Prop) -> (B -> _90724) -> (B -> Prop) -> B -> Prop)) = (@all ((B -> Prop) -> (B -> _90724) -> (B -> Prop) -> B -> Prop)).
Proof. exact (eq_refl (@all ((B -> Prop) -> (B -> _90724) -> (B -> Prop) -> B -> Prop))). Qed.
Lemma lem3519247 {_90715 _90724 A B : Type'} (_37170 : type235 _90724 A) (_37171 : type171 A B) : (term2803 _90715 _90724 A B _37170 _37171) = (term2803 _90715 _90724 A B _37170 _37171).
Proof. exact (MK_COMB (@lem3519246 _90724 B) (@lem3519245 _90715 _90724 A B _37170 _37171)). Qed.
Lemma lem3519248 {_90724 A : Type'} (GEN_PVAR_84 : A -> Prop) (u : type686 A) (f : type862 _90724 A) (t : type686 A) (x : A -> Prop) : (term2037 _90724 A GEN_PVAR_84 u f t x) = (term2037 _90724 A GEN_PVAR_84 u f t x).
Proof. exact (eq_refl (term2037 _90724 A GEN_PVAR_84 u f t x)). Qed.
Lemma lem3519249 {_90724 A : Type'} (GEN_PVAR_84 : A -> Prop) (u : type686 A) (f : type862 _90724 A) (t : type686 A) : (term2038 _90724 A GEN_PVAR_84 u f t) = (term2038 _90724 A GEN_PVAR_84 u f t).
Proof. exact (fun_ext (fun x : A -> Prop => @lem3519248 _90724 A GEN_PVAR_84 u f t x)). Qed.
Lemma lem3519250 {A : Type'} : (@ex (A -> Prop)) = (@ex (A -> Prop)).
Proof. exact (eq_refl (@ex (A -> Prop))). Qed.
Lemma lem3519251 {_90724 A : Type'} (GEN_PVAR_84 : A -> Prop) (u : type686 A) (f : type862 _90724 A) (t : type686 A) : (term2039 _90724 A GEN_PVAR_84 u f t) = (term2039 _90724 A GEN_PVAR_84 u f t).
Proof. exact (MK_COMB (@lem3519250 A) (@lem3519249 _90724 A GEN_PVAR_84 u f t)). Qed.
Lemma lem3519254 {_90724 A : Type'} (_37170 : type235 _90724 A) (u : type686 A) (f : type862 _90724 A) (t : type686 A) (GEN_PVAR_84 : A -> Prop) : (term2728 _90724 A _37170 u f t GEN_PVAR_84) = (term2728 _90724 A _37170 u f t GEN_PVAR_84).
Proof. exact (eq_refl (term2728 _90724 A _37170 u f t GEN_PVAR_84)). Qed.
Lemma lem3519255 {_90724 A : Type'} (_37170 : type235 _90724 A) (GEN_PVAR_84 : A -> Prop) (u : type686 A) (f : type862 _90724 A) (t : type686 A) : ((_37170 u f t GEN_PVAR_84) = (term2039 _90724 A GEN_PVAR_84 u f t)) = ((_37170 u f t GEN_PVAR_84) = (term2039 _90724 A GEN_PVAR_84 u f t)).
Proof. exact (MK_COMB (@lem3519254 _90724 A _37170 u f t GEN_PVAR_84) (@lem3519251 _90724 A GEN_PVAR_84 u f t)). Qed.
Lemma lem3519256 {_90724 A : Type'} (_37170 : type235 _90724 A) (u : type686 A) (f : type862 _90724 A) (t : type686 A) : (term2730 _90724 A _37170 u f t) = (term2730 _90724 A _37170 u f t).
Proof. exact (fun_ext (fun GEN_PVAR_84 : A -> Prop => @lem3519255 _90724 A _37170 GEN_PVAR_84 u f t)). Qed.
Lemma lem3519257 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem3519258 {_90724 A : Type'} (_37170 : type235 _90724 A) (u : type686 A) (f : type862 _90724 A) (t : type686 A) : (term2731 _90724 A _37170 u f t) = (term2731 _90724 A _37170 u f t).
Proof. exact (MK_COMB (@lem3519257 A) (@lem3519256 _90724 A _37170 u f t)). Qed.
Lemma lem3519259 {_90724 A : Type'} (_37170 : type235 _90724 A) (u : type686 A) (f : type862 _90724 A) : (term2732 _90724 A _37170 u f) = (term2732 _90724 A _37170 u f).
Proof. exact (fun_ext (fun t : type686 A => @lem3519258 _90724 A _37170 u f t)). Qed.
Lemma lem3519260 {A : Type'} : (@all ((A -> Prop) -> Prop)) = (@all ((A -> Prop) -> Prop)).
Proof. exact (eq_refl (@all ((A -> Prop) -> Prop))). Qed.
Lemma lem3519261 {_90724 A : Type'} (_37170 : type235 _90724 A) (u : type686 A) (f : type862 _90724 A) : (term2733 _90724 A _37170 u f) = (term2733 _90724 A _37170 u f).
Proof. exact (MK_COMB (@lem3519260 A) (@lem3519259 _90724 A _37170 u f)). Qed.
Lemma lem3519262 {_90724 A : Type'} (_37170 : type235 _90724 A) (u : type686 A) : (term2734 _90724 A _37170 u) = (term2734 _90724 A _37170 u).
Proof. exact (fun_ext (fun f : type862 _90724 A => @lem3519261 _90724 A _37170 u f)). Qed.
Lemma lem3519263 {_90724 A : Type'} : (@all ((A -> Prop) -> _90724)) = (@all ((A -> Prop) -> _90724)).
Proof. exact (eq_refl (@all ((A -> Prop) -> _90724))). Qed.
Lemma lem3519264 {_90724 A : Type'} (_37170 : type235 _90724 A) (u : type686 A) : (term2735 _90724 A _37170 u) = (term2735 _90724 A _37170 u).
Proof. exact (MK_COMB (@lem3519263 _90724 A) (@lem3519262 _90724 A _37170 u)). Qed.
Lemma lem3519265 {_90724 A : Type'} (_37170 : type235 _90724 A) : (term2736 _90724 A _37170) = (term2736 _90724 A _37170).
Proof. exact (fun_ext (fun u : type686 A => @lem3519264 _90724 A _37170 u)). Qed.
Lemma lem3519266 {A : Type'} : (@all ((A -> Prop) -> Prop)) = (@all ((A -> Prop) -> Prop)).
Proof. exact (eq_refl (@all ((A -> Prop) -> Prop))). Qed.
Lemma lem3519267 {_90724 A : Type'} (_37170 : type235 _90724 A) : (term2737 _90724 A _37170) = (term2737 _90724 A _37170).
Proof. exact (MK_COMB (@lem3519266 A) (@lem3519265 _90724 A _37170)). Qed.
Lemma lem3519268 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem3519269 {_90724 A : Type'} (_37170 : type235 _90724 A) : (term2738 _90724 A _37170) = (term2738 _90724 A _37170).
Proof. exact (MK_COMB (@lem3519268) (@lem3519267 _90724 A _37170)). Qed.
Lemma lem3519270 {_90715 _90724 A B : Type'} (_37170 : type235 _90724 A) (_37171 : type171 A B) : (term2804 _90715 _90724 A B _37170 _37171) = (term2804 _90715 _90724 A B _37170 _37171).
Proof. exact (MK_COMB (@lem3519269 _90724 A _37170) (@lem3519247 _90715 _90724 A B _37170 _37171)). Qed.
Lemma lem3519271 {_90715 _90724 A B : Type'} (_37171 : type171 A B) : (term2805 _90715 _90724 A B _37171) = (term2805 _90715 _90724 A B _37171).
Proof. exact (fun_ext (fun _37170 : type235 _90724 A => @lem3519270 _90715 _90724 A B _37170 _37171)). Qed.
Lemma lem3519272 {_90724 A : Type'} : (@all (((A -> Prop) -> Prop) -> ((A -> Prop) -> _90724) -> ((A -> Prop) -> Prop) -> (A -> Prop) -> Prop)) = (@all (((A -> Prop) -> Prop) -> ((A -> Prop) -> _90724) -> ((A -> Prop) -> Prop) -> (A -> Prop) -> Prop)).
Proof. exact (eq_refl (@all (((A -> Prop) -> Prop) -> ((A -> Prop) -> _90724) -> ((A -> Prop) -> Prop) -> (A -> Prop) -> Prop))). Qed.
Lemma lem3519273 {_90715 _90724 A B : Type'} (_37171 : type171 A B) : (term2806 _90715 _90724 A B _37171) = (term2806 _90715 _90724 A B _37171).
Proof. exact (MK_COMB (@lem3519272 _90724 A) (@lem3519271 _90715 _90724 A B _37171)). Qed.
Lemma lem3519274 {A B : Type'} (GEN_PVAR_84 : A -> Prop) (u : type686 A) (f : type678 A B) (t : type686 A) (x : A -> Prop) : (term2013 A B GEN_PVAR_84 u f t x) = (term2013 A B GEN_PVAR_84 u f t x).
Proof. exact (eq_refl (term2013 A B GEN_PVAR_84 u f t x)). Qed.
Lemma lem3519275 {A B : Type'} (GEN_PVAR_84 : A -> Prop) (u : type686 A) (f : type678 A B) (t : type686 A) : (term2014 A B GEN_PVAR_84 u f t) = (term2014 A B GEN_PVAR_84 u f t).
Proof. exact (fun_ext (fun x : A -> Prop => @lem3519274 A B GEN_PVAR_84 u f t x)). Qed.
Lemma lem3519276 {A : Type'} : (@ex (A -> Prop)) = (@ex (A -> Prop)).
Proof. exact (eq_refl (@ex (A -> Prop))). Qed.
Lemma lem3519277 {A B : Type'} (GEN_PVAR_84 : A -> Prop) (u : type686 A) (f : type678 A B) (t : type686 A) : (term2015 A B GEN_PVAR_84 u f t) = (term2015 A B GEN_PVAR_84 u f t).
Proof. exact (MK_COMB (@lem3519276 A) (@lem3519275 A B GEN_PVAR_84 u f t)). Qed.
Lemma lem3519280 {A B : Type'} (_37171 : type171 A B) (u : type686 A) (f : type678 A B) (t : type686 A) (GEN_PVAR_84 : A -> Prop) : (term2858 A B _37171 u f t GEN_PVAR_84) = (term2858 A B _37171 u f t GEN_PVAR_84).
Proof. exact (eq_refl (term2858 A B _37171 u f t GEN_PVAR_84)). Qed.
Lemma lem3519281 {A B : Type'} (_37171 : type171 A B) (GEN_PVAR_84 : A -> Prop) (u : type686 A) (f : type678 A B) (t : type686 A) : ((_37171 u f t GEN_PVAR_84) = (term2015 A B GEN_PVAR_84 u f t)) = ((_37171 u f t GEN_PVAR_84) = (term2015 A B GEN_PVAR_84 u f t)).
Proof. exact (MK_COMB (@lem3519280 A B _37171 u f t GEN_PVAR_84) (@lem3519277 A B GEN_PVAR_84 u f t)). Qed.
Lemma lem3519282 {A B : Type'} (_37171 : type171 A B) (u : type686 A) (f : type678 A B) (t : type686 A) : (term2860 A B _37171 u f t) = (term2860 A B _37171 u f t).
Proof. exact (fun_ext (fun GEN_PVAR_84 : A -> Prop => @lem3519281 A B _37171 GEN_PVAR_84 u f t)). Qed.
Lemma lem3519283 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem3519284 {A B : Type'} (_37171 : type171 A B) (u : type686 A) (f : type678 A B) (t : type686 A) : (term2861 A B _37171 u f t) = (term2861 A B _37171 u f t).
Proof. exact (MK_COMB (@lem3519283 A) (@lem3519282 A B _37171 u f t)). Qed.
Lemma lem3519285 {A B : Type'} (_37171 : type171 A B) (u : type686 A) (f : type678 A B) : (term2862 A B _37171 u f) = (term2862 A B _37171 u f).
Proof. exact (fun_ext (fun t : type686 A => @lem3519284 A B _37171 u f t)). Qed.
Lemma lem3519286 {A : Type'} : (@all ((A -> Prop) -> Prop)) = (@all ((A -> Prop) -> Prop)).
Proof. exact (eq_refl (@all ((A -> Prop) -> Prop))). Qed.
Lemma lem3519287 {A B : Type'} (_37171 : type171 A B) (u : type686 A) (f : type678 A B) : (term2863 A B _37171 u f) = (term2863 A B _37171 u f).
Proof. exact (MK_COMB (@lem3519286 A) (@lem3519285 A B _37171 u f)). Qed.
Lemma lem3519288 {A B : Type'} (_37171 : type171 A B) (u : type686 A) : (term2864 A B _37171 u) = (term2864 A B _37171 u).
Proof. exact (fun_ext (fun f : type678 A B => @lem3519287 A B _37171 u f)). Qed.
Lemma lem3519289 {A B : Type'} : (@all ((A -> Prop) -> B -> Prop)) = (@all ((A -> Prop) -> B -> Prop)).
Proof. exact (eq_refl (@all ((A -> Prop) -> B -> Prop))). Qed.
Lemma lem3519290 {A B : Type'} (_37171 : type171 A B) (u : type686 A) : (term2865 A B _37171 u) = (term2865 A B _37171 u).
Proof. exact (MK_COMB (@lem3519289 A B) (@lem3519288 A B _37171 u)). Qed.
Lemma lem3519291 {A B : Type'} (_37171 : type171 A B) : (term2866 A B _37171) = (term2866 A B _37171).
Proof. exact (fun_ext (fun u : type686 A => @lem3519290 A B _37171 u)). Qed.
Lemma lem3519292 {A : Type'} : (@all ((A -> Prop) -> Prop)) = (@all ((A -> Prop) -> Prop)).
Proof. exact (eq_refl (@all ((A -> Prop) -> Prop))). Qed.
Lemma lem3519293 {A B : Type'} (_37171 : type171 A B) : (term2867 A B _37171) = (term2867 A B _37171).
Proof. exact (MK_COMB (@lem3519292 A) (@lem3519291 A B _37171)). Qed.
Lemma lem3519294 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem3519295 {A B : Type'} (_37171 : type171 A B) : (term2868 A B _37171) = (term2868 A B _37171).
Proof. exact (MK_COMB (@lem3519294) (@lem3519293 A B _37171)). Qed.
Lemma lem3519296 {_90715 _90724 A B : Type'} (_37171 : type171 A B) : (term2869 _90715 _90724 A B _37171) = (term2869 _90715 _90724 A B _37171).
Proof. exact (MK_COMB (@lem3519295 A B _37171) (@lem3519273 _90715 _90724 A B _37171)). Qed.
Lemma lem3519297 {_90715 _90724 A B : Type'} : (term2870 _90715 _90724 A B) = (term2870 _90715 _90724 A B).
Proof. exact (fun_ext (fun _37171 : type171 A B => @lem3519296 _90715 _90724 A B _37171)). Qed.
Lemma lem3519298 {A B : Type'} : (@all (((A -> Prop) -> Prop) -> ((A -> Prop) -> B -> Prop) -> ((A -> Prop) -> Prop) -> (A -> Prop) -> Prop)) = (@all (((A -> Prop) -> Prop) -> ((A -> Prop) -> B -> Prop) -> ((A -> Prop) -> Prop) -> (A -> Prop) -> Prop)).
Proof. exact (eq_refl (@all (((A -> Prop) -> Prop) -> ((A -> Prop) -> B -> Prop) -> ((A -> Prop) -> Prop) -> (A -> Prop) -> Prop))). Qed.
Lemma lem3519299 {_90715 _90724 A B : Type'} : (term2871 _90715 _90724 A B) = (term2871 _90715 _90724 A B).
Proof. exact (MK_COMB (@lem3519298 A B) (@lem3519297 _90715 _90724 A B)). Qed.
Lemma lem3520008 {_90715 _90724 A B : Type'} : (term2000 _90715 _90724 A B) = (term2871 _90715 _90724 A B).
Proof. exact (TRANS (@lem3518717 _90715 _90724 A B) (@lem3519299 _90715 _90724 A B)). Qed.
Lemma lem3520009 {_90715 _90724 A B : Type'} : (term2871 _90715 _90724 A B) = (term2000 _90715 _90724 A B).
Proof. exact (SYM (@lem3520008 _90715 _90724 A B)). Qed.
Lemma lem3520010 {A B : Type'} (_37171 : type171 A B) (h1 : term2867 A B _37171) : term2867 A B _37171.
Proof. exact (h1). Qed.
Lemma lem3520011 {_90724 A : Type'} (_37170 : type235 _90724 A) (h1 : term2737 _90724 A _37170) : term2737 _90724 A _37170.
Proof. exact (h1). Qed.
Lemma lem3520012 {_90724 B : Type'} (_37169 : type852 _90724 B) (h1 : term2553 _90724 B _37169) : term2553 _90724 B _37169.
Proof. exact (h1). Qed.
Lemma lem3520013 {_90724 A : Type'} (_37168 : type852 _90724 A) (h1 : term2553 _90724 A _37168) : term2553 _90724 A _37168.
Proof. exact (h1). Qed.
Lemma lem3520014 {_90715 A : Type'} (_37167 : type616 _90715 A) (h1 : term2435 _90715 A _37167) : term2435 _90715 A _37167.
Proof. exact (h1). Qed.
Lemma lem3520015 {_90715 B : Type'} (_37166 : type627 _90715 B) (h1 : term2210 _90715 B _37166) : term2210 _90715 B _37166.
Proof. exact (h1). Qed.
Lemma lem3520016 {_90715 A : Type'} (_37165 : type627 _90715 A) (h1 : term2210 _90715 A _37165) : term2210 _90715 A _37165.
Proof. exact (h1). Qed.
Lemma lem3520017 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) (h1 : term2210 _90715 _90724 _37164) : term2210 _90715 _90724 _37164.
Proof. exact (h1). Qed.
Lemma lem3520018 {A B : Type'} (_37163 : type627 A B) (h1 : term2210 A B _37163) : term2210 A B _37163.
Proof. exact (h1). Qed.
Lemma lem3520019 {A B : Type'} (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) (g : type686 A) (h1 : term2135 A B _37163 u f g) : term2135 A B _37163 u f g.
Proof. exact (h1). Qed.
Lemma lem3520020 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) (h1 : term2095 _90715 _90724 _37164) : term2095 _90715 _90724 _37164.
Proof. exact (h1). Qed.
Lemma lem3520021 {_90715 A : Type'} (_37165 : type627 _90715 A) (h1 : term2095 _90715 A _37165) : term2095 _90715 A _37165.
Proof. exact (h1). Qed.
Lemma lem3520022 {_90715 B : Type'} (_37166 : type627 _90715 B) (h1 : term2095 _90715 B _37166) : term2095 _90715 B _37166.
Proof. exact (h1). Qed.
Lemma lem3520023 {_90715 A : Type'} (_37167 : type616 _90715 A) (h1 : term2350 _90715 A _37167) : term2350 _90715 A _37167.
Proof. exact (h1). Qed.
Lemma lem3520024 {_90724 A : Type'} (_37168 : type852 _90724 A) (h1 : term2464 _90724 A _37168) : term2464 _90724 A _37168.
Proof. exact (h1). Qed.
Lemma lem3520025 {A B : Type'} (_37163 : type627 A B) (h1 : term2095 A B _37163) : term2095 A B _37163.
Proof. exact (h1). Qed.
Lemma lem3520026 {_90724 B : Type'} (_37169 : type852 _90724 B) (h1 : term2464 _90724 B _37169) : term2464 _90724 B _37169.
Proof. exact (h1). Qed.
Lemma lem3520027 {_90724 A : Type'} (_37170 : type235 _90724 A) (h1 : term2636 _90724 A _37170) : term2636 _90724 A _37170.
Proof. exact (h1). Qed.
Lemma lem3520028 {A B : Type'} (_37171 : type171 A B) (h1 : term2766 A B _37171) : term2766 A B _37171.
Proof. exact (h1). Qed.
Lemma lem3520032 {A B : Type'} (GEN_PVAR_84 : A -> Prop) (u : type686 A) (f : type678 A B) (t : type686 A) (x : A -> Prop) : (term2013 A B GEN_PVAR_84 u f t x) = (term2013 A B GEN_PVAR_84 u f t x).
Proof. exact (eq_refl (term2013 A B GEN_PVAR_84 u f t x)). Qed.
Lemma lem3520033 {A : Type'} (P : type686 A) : (term2872 A P) = (term209 A P).
Proof. exact (@lem18394 (A -> Prop) P). Qed.
Lemma lem3520034 {A B : Type'} (GEN_PVAR_84 : A -> Prop) (u : type686 A) (f : type678 A B) (t : type686 A) : (term2873 A B GEN_PVAR_84 u f t) = (term2874 A B GEN_PVAR_84 u f t).
Proof. exact (@lem3520033 A (term2014 A B GEN_PVAR_84 u f t)). Qed.
Lemma lem3520035 {A B : Type'} (GEN_PVAR_84 : A -> Prop) (u : type686 A) (f : type678 A B) (t : type686 A) (x : A -> Prop) : (term2875 A B GEN_PVAR_84 u f t x) = (term2013 A B GEN_PVAR_84 u f t x).
Proof. exact (eq_refl (term2875 A B GEN_PVAR_84 u f t x)). Qed.
Lemma lem3520036 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem3520038 {A B : Type'} (GEN_PVAR_84 : A -> Prop) (u : type686 A) (f : type678 A B) (t : type686 A) (x : A -> Prop) : (term2876 A B GEN_PVAR_84 u f t x) = (term2877 A B GEN_PVAR_84 u f t x).
Proof. exact (MK_COMB (@lem3520036) (@lem3520035 A B GEN_PVAR_84 u f t x)). Qed.
Lemma lem3520039 {A B : Type'} (GEN_PVAR_84 : A -> Prop) (u : type686 A) (f : type678 A B) (t : type686 A) : (term2878 A B GEN_PVAR_84 u f t) = (term2879 A B GEN_PVAR_84 u f t).
Proof. exact (fun_ext (fun x : A -> Prop => @lem3520038 A B GEN_PVAR_84 u f t x)). Qed.
Lemma lem3520040 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem3520041 {A B : Type'} (GEN_PVAR_84 : A -> Prop) (u : type686 A) (f : type678 A B) (t : type686 A) : (term2874 A B GEN_PVAR_84 u f t) = (term2880 A B GEN_PVAR_84 u f t).
Proof. exact (MK_COMB (@lem3520040 A) (@lem3520039 A B GEN_PVAR_84 u f t)). Qed.
Lemma lem3520042 {A B : Type'} (GEN_PVAR_84 : A -> Prop) (u : type686 A) (f : type678 A B) (t : type686 A) : (term2873 A B GEN_PVAR_84 u f t) = (term2880 A B GEN_PVAR_84 u f t).
Proof. exact (TRANS (@lem3520034 A B GEN_PVAR_84 u f t) (@lem3520041 A B GEN_PVAR_84 u f t)). Qed.
Lemma lem3520043 {A B : Type'} (GEN_PVAR_84 : A -> Prop) (u : type686 A) (f : type678 A B) (t : type686 A) : (term2014 A B GEN_PVAR_84 u f t) = (term2014 A B GEN_PVAR_84 u f t).
Proof. exact (fun_ext (fun x : A -> Prop => @lem3520032 A B GEN_PVAR_84 u f t x)). Qed.
Lemma lem3520044 {A : Type'} : (@ex (A -> Prop)) = (@ex (A -> Prop)).
Proof. exact (eq_refl (@ex (A -> Prop))). Qed.
Lemma lem3520045 {A B : Type'} (GEN_PVAR_84 : A -> Prop) (u : type686 A) (f : type678 A B) (t : type686 A) : (term2015 A B GEN_PVAR_84 u f t) = (term2015 A B GEN_PVAR_84 u f t).
Proof. exact (MK_COMB (@lem3520044 A) (@lem3520043 A B GEN_PVAR_84 u f t)). Qed.
Lemma lem3520047 {A B : Type'} (_37171 : type171 A B) (u : type686 A) (f : type678 A B) (t : type686 A) (GEN_PVAR_84 : A -> Prop) : (term2881 A B _37171 u f t GEN_PVAR_84) = (term2881 A B _37171 u f t GEN_PVAR_84).
Proof. exact (eq_refl (term2881 A B _37171 u f t GEN_PVAR_84)). Qed.
Lemma lem3520048 {A B : Type'} (_37171 : type171 A B) (GEN_PVAR_84 : A -> Prop) (u : type686 A) (f : type678 A B) (t : type686 A) : (term2882 A B _37171 GEN_PVAR_84 u f t) = (term2882 A B _37171 GEN_PVAR_84 u f t).
Proof. exact (MK_COMB (@lem3520047 A B _37171 u f t GEN_PVAR_84) (@lem3520045 A B GEN_PVAR_84 u f t)). Qed.
Lemma lem3520050 {A B : Type'} (_37171 : type171 A B) (u : type686 A) (f : type678 A B) (t : type686 A) (GEN_PVAR_84 : A -> Prop) : (term2883 A B _37171 u f t GEN_PVAR_84) = (term2883 A B _37171 u f t GEN_PVAR_84).
Proof. exact (eq_refl (term2883 A B _37171 u f t GEN_PVAR_84)). Qed.
Lemma lem3520051 {A B : Type'} (_37171 : type171 A B) (GEN_PVAR_84 : A -> Prop) (u : type686 A) (f : type678 A B) (t : type686 A) : (term2884 A B _37171 GEN_PVAR_84 u f t) = (term2885 A B _37171 GEN_PVAR_84 u f t).
Proof. exact (MK_COMB (@lem3520050 A B _37171 u f t GEN_PVAR_84) (@lem3520042 A B GEN_PVAR_84 u f t)). Qed.
Lemma lem3520052 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem3520053 {A B : Type'} (_37171 : type171 A B) (GEN_PVAR_84 : A -> Prop) (u : type686 A) (f : type678 A B) (t : type686 A) : (term2886 A B _37171 GEN_PVAR_84 u f t) = (term2887 A B _37171 GEN_PVAR_84 u f t).
Proof. exact (MK_COMB (@lem3520052) (@lem3520051 A B _37171 GEN_PVAR_84 u f t)). Qed.
Lemma lem3520054 {A B : Type'} (_37171 : type171 A B) (GEN_PVAR_84 : A -> Prop) (u : type686 A) (f : type678 A B) (t : type686 A) : (term2888 A B _37171 GEN_PVAR_84 u f t) = (term2889 A B _37171 GEN_PVAR_84 u f t).
Proof. exact (MK_COMB (@lem3520053 A B _37171 GEN_PVAR_84 u f t) (@lem3520048 A B _37171 GEN_PVAR_84 u f t)). Qed.
Lemma lem3520055 {A B : Type'} (_37171 : type171 A B) (GEN_PVAR_84 : A -> Prop) (u : type686 A) (f : type678 A B) (t : type686 A) : ((_37171 u f t GEN_PVAR_84) = (term2015 A B GEN_PVAR_84 u f t)) = (term2888 A B _37171 GEN_PVAR_84 u f t).
Proof. exact (@lem17784 (_37171 u f t GEN_PVAR_84) (term2015 A B GEN_PVAR_84 u f t)). Qed.
Lemma lem3520056 {A B : Type'} (_37171 : type171 A B) (GEN_PVAR_84 : A -> Prop) (u : type686 A) (f : type678 A B) (t : type686 A) : ((_37171 u f t GEN_PVAR_84) = (term2015 A B GEN_PVAR_84 u f t)) = (term2889 A B _37171 GEN_PVAR_84 u f t).
Proof. exact (TRANS (@lem3520055 A B _37171 GEN_PVAR_84 u f t) (@lem3520054 A B _37171 GEN_PVAR_84 u f t)). Qed.
Lemma lem3520057 {A B : Type'} (_37171 : type171 A B) (u : type686 A) (f : type678 A B) (t : type686 A) : (term2860 A B _37171 u f t) = (term2890 A B _37171 u f t).
Proof. exact (fun_ext (fun GEN_PVAR_84 : A -> Prop => @lem3520056 A B _37171 GEN_PVAR_84 u f t)). Qed.
Lemma lem3520058 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem3520059 {A B : Type'} (_37171 : type171 A B) (u : type686 A) (f : type678 A B) (t : type686 A) : (term2861 A B _37171 u f t) = (term2891 A B _37171 u f t).
Proof. exact (MK_COMB (@lem3520058 A) (@lem3520057 A B _37171 u f t)). Qed.
Lemma lem3520060 {A B : Type'} (_37171 : type171 A B) (u : type686 A) (f : type678 A B) : (term2862 A B _37171 u f) = (term2892 A B _37171 u f).
Proof. exact (fun_ext (fun t : type686 A => @lem3520059 A B _37171 u f t)). Qed.
Lemma lem3520061 {A : Type'} : (@all ((A -> Prop) -> Prop)) = (@all ((A -> Prop) -> Prop)).
Proof. exact (eq_refl (@all ((A -> Prop) -> Prop))). Qed.
Lemma lem3520062 {A B : Type'} (_37171 : type171 A B) (u : type686 A) (f : type678 A B) : (term2863 A B _37171 u f) = (term2893 A B _37171 u f).
Proof. exact (MK_COMB (@lem3520061 A) (@lem3520060 A B _37171 u f)). Qed.
Lemma lem3520063 {A B : Type'} (_37171 : type171 A B) (u : type686 A) : (term2864 A B _37171 u) = (term2894 A B _37171 u).
Proof. exact (fun_ext (fun f : type678 A B => @lem3520062 A B _37171 u f)). Qed.
Lemma lem3520064 {A B : Type'} : (@all ((A -> Prop) -> B -> Prop)) = (@all ((A -> Prop) -> B -> Prop)).
Proof. exact (eq_refl (@all ((A -> Prop) -> B -> Prop))). Qed.
Lemma lem3520065 {A B : Type'} (_37171 : type171 A B) (u : type686 A) : (term2865 A B _37171 u) = (term2895 A B _37171 u).
Proof. exact (MK_COMB (@lem3520064 A B) (@lem3520063 A B _37171 u)). Qed.
Lemma lem3520066 {A B : Type'} (_37171 : type171 A B) : (term2866 A B _37171) = (term2896 A B _37171).
Proof. exact (fun_ext (fun u : type686 A => @lem3520065 A B _37171 u)). Qed.
Lemma lem3520067 {A : Type'} : (@all ((A -> Prop) -> Prop)) = (@all ((A -> Prop) -> Prop)).
Proof. exact (eq_refl (@all ((A -> Prop) -> Prop))). Qed.
Lemma lem3520068 {A B : Type'} (_37171 : type171 A B) : (term2867 A B _37171) = (term2897 A B _37171).
Proof. exact (MK_COMB (@lem3520067 A) (@lem3520066 A B _37171)). Qed.
Lemma lem3520082 {A : Type'} (P : A -> Prop) (Q : A -> Prop) : (term726 A P Q) = (term725 A P Q).
Proof. exact (EQ_MP (@lem18953 A P Q) (@lem18952 A P Q)). Qed.
Lemma lem3520083 {A : Type'} (P : type686 A) (Q : type686 A) : (term2898 A P Q) = (term2899 A P Q).
Proof. exact (@lem3520082 (A -> Prop) P Q). Qed.
Lemma lem3520084 {A B : Type'} (_37171 : type171 A B) (u : type686 A) (f : type678 A B) (t : type686 A) : (term2900 A B _37171 u f t) = (term2901 A B _37171 u f t).
Proof. exact (@lem3520083 A (term2902 A B _37171 u f t) (term2903 A B _37171 u f t)). Qed.
Lemma lem3520085 {A B : Type'} (_37171 : type171 A B) (GEN_PVAR_84 : A -> Prop) (u : type686 A) (f : type678 A B) (t : type686 A) : (term2904 A B _37171 u f t GEN_PVAR_84) = (term2885 A B _37171 GEN_PVAR_84 u f t).
Proof. exact (eq_refl (term2904 A B _37171 u f t GEN_PVAR_84)). Qed.
Lemma lem3520086 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem3520087 {A B : Type'} (_37171 : type171 A B) (GEN_PVAR_84 : A -> Prop) (u : type686 A) (f : type678 A B) (t : type686 A) : (term2905 A B _37171 u f t GEN_PVAR_84) = (term2887 A B _37171 GEN_PVAR_84 u f t).
Proof. exact (MK_COMB (@lem3520086) (@lem3520085 A B _37171 GEN_PVAR_84 u f t)). Qed.
Lemma lem3520088 {A B : Type'} (_37171 : type171 A B) (GEN_PVAR_84 : A -> Prop) (u : type686 A) (f : type678 A B) (t : type686 A) : (term2906 A B _37171 u f t GEN_PVAR_84) = (term2882 A B _37171 GEN_PVAR_84 u f t).
Proof. exact (eq_refl (term2906 A B _37171 u f t GEN_PVAR_84)). Qed.
Lemma lem3520089 {A B : Type'} (_37171 : type171 A B) (GEN_PVAR_84 : A -> Prop) (u : type686 A) (f : type678 A B) (t : type686 A) : (term2907 A B _37171 u f t GEN_PVAR_84) = (term2889 A B _37171 GEN_PVAR_84 u f t).
Proof. exact (MK_COMB (@lem3520087 A B _37171 GEN_PVAR_84 u f t) (@lem3520088 A B _37171 GEN_PVAR_84 u f t)). Qed.
Lemma lem3520090 {A B : Type'} (_37171 : type171 A B) (u : type686 A) (f : type678 A B) (t : type686 A) : (term2908 A B _37171 u f t) = (term2890 A B _37171 u f t).
Proof. exact (fun_ext (fun GEN_PVAR_84 : A -> Prop => @lem3520089 A B _37171 GEN_PVAR_84 u f t)). Qed.
Lemma lem3520091 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem3520092 {A B : Type'} (_37171 : type171 A B) (u : type686 A) (f : type678 A B) (t : type686 A) : (term2900 A B _37171 u f t) = (term2891 A B _37171 u f t).
Proof. exact (MK_COMB (@lem3520091 A) (@lem3520090 A B _37171 u f t)). Qed.
Lemma lem3520093 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem3520094 {A B : Type'} (_37171 : type171 A B) (u : type686 A) (f : type678 A B) (t : type686 A) : (term2909 A B _37171 u f t) = (term2910 A B _37171 u f t).
Proof. exact (MK_COMB (@lem3520093) (@lem3520092 A B _37171 u f t)). Qed.
Lemma lem3520095 {A B : Type'} (_37171 : type171 A B) (GEN_PVAR_84 : A -> Prop) (u : type686 A) (f : type678 A B) (t : type686 A) : (term2904 A B _37171 u f t GEN_PVAR_84) = (term2885 A B _37171 GEN_PVAR_84 u f t).
Proof. exact (eq_refl (term2904 A B _37171 u f t GEN_PVAR_84)). Qed.
Lemma lem3520096 {A B : Type'} (_37171 : type171 A B) (u : type686 A) (f : type678 A B) (t : type686 A) : (term2911 A B _37171 u f t) = (term2902 A B _37171 u f t).
Proof. exact (fun_ext (fun GEN_PVAR_84 : A -> Prop => @lem3520095 A B _37171 GEN_PVAR_84 u f t)). Qed.
Lemma lem3520097 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem3520098 {A B : Type'} (_37171 : type171 A B) (u : type686 A) (f : type678 A B) (t : type686 A) : (term2912 A B _37171 u f t) = (term2913 A B _37171 u f t).
Proof. exact (MK_COMB (@lem3520097 A) (@lem3520096 A B _37171 u f t)). Qed.
Lemma lem3520099 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem3520100 {A B : Type'} (_37171 : type171 A B) (u : type686 A) (f : type678 A B) (t : type686 A) : (term2914 A B _37171 u f t) = (term2915 A B _37171 u f t).
Proof. exact (MK_COMB (@lem3520099) (@lem3520098 A B _37171 u f t)). Qed.
Lemma lem3520101 {A B : Type'} (_37171 : type171 A B) (GEN_PVAR_84 : A -> Prop) (u : type686 A) (f : type678 A B) (t : type686 A) : (term2906 A B _37171 u f t GEN_PVAR_84) = (term2882 A B _37171 GEN_PVAR_84 u f t).
Proof. exact (eq_refl (term2906 A B _37171 u f t GEN_PVAR_84)). Qed.
Lemma lem3520102 {A B : Type'} (_37171 : type171 A B) (u : type686 A) (f : type678 A B) (t : type686 A) : (term2916 A B _37171 u f t) = (term2903 A B _37171 u f t).
Proof. exact (fun_ext (fun GEN_PVAR_84 : A -> Prop => @lem3520101 A B _37171 GEN_PVAR_84 u f t)). Qed.
Lemma lem3520103 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem3520104 {A B : Type'} (_37171 : type171 A B) (u : type686 A) (f : type678 A B) (t : type686 A) : (term2917 A B _37171 u f t) = (term2918 A B _37171 u f t).
Proof. exact (MK_COMB (@lem3520103 A) (@lem3520102 A B _37171 u f t)). Qed.
Lemma lem3520105 {A B : Type'} (_37171 : type171 A B) (u : type686 A) (f : type678 A B) (t : type686 A) : (term2901 A B _37171 u f t) = (term2919 A B _37171 u f t).
Proof. exact (MK_COMB (@lem3520100 A B _37171 u f t) (@lem3520104 A B _37171 u f t)). Qed.
Lemma lem3520106 {A B : Type'} (_37171 : type171 A B) (u : type686 A) (f : type678 A B) (t : type686 A) : ((term2900 A B _37171 u f t) = (term2901 A B _37171 u f t)) = ((term2891 A B _37171 u f t) = (term2919 A B _37171 u f t)).
Proof. exact (MK_COMB (@lem3520094 A B _37171 u f t) (@lem3520105 A B _37171 u f t)). Qed.
Lemma lem3520107 {A B : Type'} (_37171 : type171 A B) (u : type686 A) (f : type678 A B) (t : type686 A) : (term2891 A B _37171 u f t) = (term2919 A B _37171 u f t).
Proof. exact (EQ_MP (@lem3520106 A B _37171 u f t) (@lem3520084 A B _37171 u f t)). Qed.
Lemma lem3520212 {A B : Type'} (_37171 : type171 A B) (u : type686 A) (f : type678 A B) : (term2892 A B _37171 u f) = (term2920 A B _37171 u f).
Proof. exact (fun_ext (fun t : type686 A => @lem3520107 A B _37171 u f t)). Qed.
Lemma lem3520213 {A : Type'} : (@all ((A -> Prop) -> Prop)) = (@all ((A -> Prop) -> Prop)).
Proof. exact (eq_refl (@all ((A -> Prop) -> Prop))). Qed.
Lemma lem3520214 {A B : Type'} (_37171 : type171 A B) (u : type686 A) (f : type678 A B) : (term2893 A B _37171 u f) = (term2921 A B _37171 u f).
Proof. exact (MK_COMB (@lem3520213 A) (@lem3520212 A B _37171 u f)). Qed.
Lemma lem3520216 {A : Type'} (P : A -> Prop) (Q : A -> Prop) : (term726 A P Q) = (term725 A P Q).
Proof. exact (EQ_MP (@lem18953 A P Q) (@lem18952 A P Q)). Qed.
Lemma lem3520217 {A : Type'} (P : type180 A) (Q : type180 A) : (term2922 A P Q) = (term2923 A P Q).
Proof. exact (@lem3520216 (type686 A) P Q). Qed.
Lemma lem3520218 {A B : Type'} (_37171 : type171 A B) (u : type686 A) (f : type678 A B) : (term2924 A B _37171 u f) = (term2925 A B _37171 u f).
Proof. exact (@lem3520217 A (term2926 A B _37171 u f) (term2927 A B _37171 u f)). Qed.
Lemma lem3520219 {A B : Type'} (_37171 : type171 A B) (u : type686 A) (f : type678 A B) (t : type686 A) : (term2928 A B _37171 u f t) = (term2913 A B _37171 u f t).
Proof. exact (eq_refl (term2928 A B _37171 u f t)). Qed.
Lemma lem3520220 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem3520221 {A B : Type'} (_37171 : type171 A B) (u : type686 A) (f : type678 A B) (t : type686 A) : (term2929 A B _37171 u f t) = (term2915 A B _37171 u f t).
Proof. exact (MK_COMB (@lem3520220) (@lem3520219 A B _37171 u f t)). Qed.
Lemma lem3520222 {A B : Type'} (_37171 : type171 A B) (u : type686 A) (f : type678 A B) (t : type686 A) : (term2930 A B _37171 u f t) = (term2918 A B _37171 u f t).
Proof. exact (eq_refl (term2930 A B _37171 u f t)). Qed.
Lemma lem3520223 {A B : Type'} (_37171 : type171 A B) (u : type686 A) (f : type678 A B) (t : type686 A) : (term2931 A B _37171 u f t) = (term2919 A B _37171 u f t).
Proof. exact (MK_COMB (@lem3520221 A B _37171 u f t) (@lem3520222 A B _37171 u f t)). Qed.
Lemma lem3520224 {A B : Type'} (_37171 : type171 A B) (u : type686 A) (f : type678 A B) : (term2932 A B _37171 u f) = (term2920 A B _37171 u f).
Proof. exact (fun_ext (fun t : type686 A => @lem3520223 A B _37171 u f t)). Qed.
Lemma lem3520225 {A : Type'} : (@all ((A -> Prop) -> Prop)) = (@all ((A -> Prop) -> Prop)).
Proof. exact (eq_refl (@all ((A -> Prop) -> Prop))). Qed.
Lemma lem3520226 {A B : Type'} (_37171 : type171 A B) (u : type686 A) (f : type678 A B) : (term2924 A B _37171 u f) = (term2921 A B _37171 u f).
Proof. exact (MK_COMB (@lem3520225 A) (@lem3520224 A B _37171 u f)). Qed.
Lemma lem3520227 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem3520228 {A B : Type'} (_37171 : type171 A B) (u : type686 A) (f : type678 A B) : (term2933 A B _37171 u f) = (term2934 A B _37171 u f).
Proof. exact (MK_COMB (@lem3520227) (@lem3520226 A B _37171 u f)). Qed.
Lemma lem3520229 {A B : Type'} (_37171 : type171 A B) (u : type686 A) (f : type678 A B) (t : type686 A) : (term2928 A B _37171 u f t) = (term2913 A B _37171 u f t).
Proof. exact (eq_refl (term2928 A B _37171 u f t)). Qed.
Lemma lem3520230 {A B : Type'} (_37171 : type171 A B) (u : type686 A) (f : type678 A B) : (term2935 A B _37171 u f) = (term2926 A B _37171 u f).
Proof. exact (fun_ext (fun t : type686 A => @lem3520229 A B _37171 u f t)). Qed.
Lemma lem3520231 {A : Type'} : (@all ((A -> Prop) -> Prop)) = (@all ((A -> Prop) -> Prop)).
Proof. exact (eq_refl (@all ((A -> Prop) -> Prop))). Qed.
Lemma lem3520232 {A B : Type'} (_37171 : type171 A B) (u : type686 A) (f : type678 A B) : (term2936 A B _37171 u f) = (term2937 A B _37171 u f).
Proof. exact (MK_COMB (@lem3520231 A) (@lem3520230 A B _37171 u f)). Qed.
Lemma lem3520233 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem3520234 {A B : Type'} (_37171 : type171 A B) (u : type686 A) (f : type678 A B) : (term2938 A B _37171 u f) = (term2939 A B _37171 u f).
Proof. exact (MK_COMB (@lem3520233) (@lem3520232 A B _37171 u f)). Qed.
Lemma lem3520235 {A B : Type'} (_37171 : type171 A B) (u : type686 A) (f : type678 A B) (t : type686 A) : (term2930 A B _37171 u f t) = (term2918 A B _37171 u f t).
Proof. exact (eq_refl (term2930 A B _37171 u f t)). Qed.
Lemma lem3520236 {A B : Type'} (_37171 : type171 A B) (u : type686 A) (f : type678 A B) : (term2940 A B _37171 u f) = (term2927 A B _37171 u f).
Proof. exact (fun_ext (fun t : type686 A => @lem3520235 A B _37171 u f t)). Qed.
Lemma lem3520237 {A : Type'} : (@all ((A -> Prop) -> Prop)) = (@all ((A -> Prop) -> Prop)).
Proof. exact (eq_refl (@all ((A -> Prop) -> Prop))). Qed.
Lemma lem3520238 {A B : Type'} (_37171 : type171 A B) (u : type686 A) (f : type678 A B) : (term2941 A B _37171 u f) = (term2942 A B _37171 u f).
Proof. exact (MK_COMB (@lem3520237 A) (@lem3520236 A B _37171 u f)). Qed.
Lemma lem3520239 {A B : Type'} (_37171 : type171 A B) (u : type686 A) (f : type678 A B) : (term2925 A B _37171 u f) = (term2943 A B _37171 u f).
Proof. exact (MK_COMB (@lem3520234 A B _37171 u f) (@lem3520238 A B _37171 u f)). Qed.
Lemma lem3520240 {A B : Type'} (_37171 : type171 A B) (u : type686 A) (f : type678 A B) : ((term2924 A B _37171 u f) = (term2925 A B _37171 u f)) = ((term2921 A B _37171 u f) = (term2943 A B _37171 u f)).
Proof. exact (MK_COMB (@lem3520228 A B _37171 u f) (@lem3520239 A B _37171 u f)). Qed.
Lemma lem3520241 {A B : Type'} (_37171 : type171 A B) (u : type686 A) (f : type678 A B) : (term2921 A B _37171 u f) = (term2943 A B _37171 u f).
Proof. exact (EQ_MP (@lem3520240 A B _37171 u f) (@lem3520218 A B _37171 u f)). Qed.
Lemma lem3520354 {A B : Type'} (_37171 : type171 A B) (u : type686 A) (f : type678 A B) : (term2893 A B _37171 u f) = (term2943 A B _37171 u f).
Proof. exact (TRANS (@lem3520214 A B _37171 u f) (@lem3520241 A B _37171 u f)). Qed.
Lemma lem3520355 {A B : Type'} (_37171 : type171 A B) (u : type686 A) : (term2894 A B _37171 u) = (term2944 A B _37171 u).
Proof. exact (fun_ext (fun f : type678 A B => @lem3520354 A B _37171 u f)). Qed.
Lemma lem3520356 {A B : Type'} : (@all ((A -> Prop) -> B -> Prop)) = (@all ((A -> Prop) -> B -> Prop)).
Proof. exact (eq_refl (@all ((A -> Prop) -> B -> Prop))). Qed.
Lemma lem3520357 {A B : Type'} (_37171 : type171 A B) (u : type686 A) : (term2895 A B _37171 u) = (term2945 A B _37171 u).
Proof. exact (MK_COMB (@lem3520356 A B) (@lem3520355 A B _37171 u)). Qed.
Lemma lem3520359 {A : Type'} (P : A -> Prop) (Q : A -> Prop) : (term726 A P Q) = (term725 A P Q).
Proof. exact (EQ_MP (@lem18953 A P Q) (@lem18952 A P Q)). Qed.
Lemma lem3520360 {A B : Type'} (P : type158 A B) (Q : type158 A B) : (term2946 A B P Q) = (term2947 A B P Q).
Proof. exact (@lem3520359 (type678 A B) P Q). Qed.
Lemma lem3520361 {A B : Type'} (_37171 : type171 A B) (u : type686 A) : (term2948 A B _37171 u) = (term2949 A B _37171 u).
Proof. exact (@lem3520360 A B (term2950 A B _37171 u) (term2951 A B _37171 u)). Qed.
Lemma lem3520362 {A B : Type'} (_37171 : type171 A B) (u : type686 A) (f : type678 A B) : (term2952 A B _37171 u f) = (term2937 A B _37171 u f).
Proof. exact (eq_refl (term2952 A B _37171 u f)). Qed.
Lemma lem3520363 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem3520364 {A B : Type'} (_37171 : type171 A B) (u : type686 A) (f : type678 A B) : (term2953 A B _37171 u f) = (term2939 A B _37171 u f).
Proof. exact (MK_COMB (@lem3520363) (@lem3520362 A B _37171 u f)). Qed.
Lemma lem3520365 {A B : Type'} (_37171 : type171 A B) (u : type686 A) (f : type678 A B) : (term2954 A B _37171 u f) = (term2942 A B _37171 u f).
Proof. exact (eq_refl (term2954 A B _37171 u f)). Qed.
Lemma lem3520366 {A B : Type'} (_37171 : type171 A B) (u : type686 A) (f : type678 A B) : (term2955 A B _37171 u f) = (term2943 A B _37171 u f).
Proof. exact (MK_COMB (@lem3520364 A B _37171 u f) (@lem3520365 A B _37171 u f)). Qed.
Lemma lem3520367 {A B : Type'} (_37171 : type171 A B) (u : type686 A) : (term2956 A B _37171 u) = (term2944 A B _37171 u).
Proof. exact (fun_ext (fun f : type678 A B => @lem3520366 A B _37171 u f)). Qed.
Lemma lem3520368 {A B : Type'} : (@all ((A -> Prop) -> B -> Prop)) = (@all ((A -> Prop) -> B -> Prop)).
Proof. exact (eq_refl (@all ((A -> Prop) -> B -> Prop))). Qed.
Lemma lem3520369 {A B : Type'} (_37171 : type171 A B) (u : type686 A) : (term2948 A B _37171 u) = (term2945 A B _37171 u).
Proof. exact (MK_COMB (@lem3520368 A B) (@lem3520367 A B _37171 u)). Qed.
Lemma lem3520370 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem3520371 {A B : Type'} (_37171 : type171 A B) (u : type686 A) : (term2957 A B _37171 u) = (term2958 A B _37171 u).
Proof. exact (MK_COMB (@lem3520370) (@lem3520369 A B _37171 u)). Qed.
Lemma lem3520372 {A B : Type'} (_37171 : type171 A B) (u : type686 A) (f : type678 A B) : (term2952 A B _37171 u f) = (term2937 A B _37171 u f).
Proof. exact (eq_refl (term2952 A B _37171 u f)). Qed.
Lemma lem3520373 {A B : Type'} (_37171 : type171 A B) (u : type686 A) : (term2959 A B _37171 u) = (term2950 A B _37171 u).
Proof. exact (fun_ext (fun f : type678 A B => @lem3520372 A B _37171 u f)). Qed.
Lemma lem3520374 {A B : Type'} : (@all ((A -> Prop) -> B -> Prop)) = (@all ((A -> Prop) -> B -> Prop)).
Proof. exact (eq_refl (@all ((A -> Prop) -> B -> Prop))). Qed.
Lemma lem3520375 {A B : Type'} (_37171 : type171 A B) (u : type686 A) : (term2960 A B _37171 u) = (term2961 A B _37171 u).
Proof. exact (MK_COMB (@lem3520374 A B) (@lem3520373 A B _37171 u)). Qed.
Lemma lem3520376 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem3520377 {A B : Type'} (_37171 : type171 A B) (u : type686 A) : (term2962 A B _37171 u) = (term2963 A B _37171 u).
Proof. exact (MK_COMB (@lem3520376) (@lem3520375 A B _37171 u)). Qed.
Lemma lem3520378 {A B : Type'} (_37171 : type171 A B) (u : type686 A) (f : type678 A B) : (term2954 A B _37171 u f) = (term2942 A B _37171 u f).
Proof. exact (eq_refl (term2954 A B _37171 u f)). Qed.
Lemma lem3520379 {A B : Type'} (_37171 : type171 A B) (u : type686 A) : (term2964 A B _37171 u) = (term2951 A B _37171 u).
Proof. exact (fun_ext (fun f : type678 A B => @lem3520378 A B _37171 u f)). Qed.
Lemma lem3520380 {A B : Type'} : (@all ((A -> Prop) -> B -> Prop)) = (@all ((A -> Prop) -> B -> Prop)).
Proof. exact (eq_refl (@all ((A -> Prop) -> B -> Prop))). Qed.
Lemma lem3520381 {A B : Type'} (_37171 : type171 A B) (u : type686 A) : (term2965 A B _37171 u) = (term2966 A B _37171 u).
Proof. exact (MK_COMB (@lem3520380 A B) (@lem3520379 A B _37171 u)). Qed.
Lemma lem3520382 {A B : Type'} (_37171 : type171 A B) (u : type686 A) : (term2949 A B _37171 u) = (term2967 A B _37171 u).
Proof. exact (MK_COMB (@lem3520377 A B _37171 u) (@lem3520381 A B _37171 u)). Qed.
Lemma lem3520383 {A B : Type'} (_37171 : type171 A B) (u : type686 A) : ((term2948 A B _37171 u) = (term2949 A B _37171 u)) = ((term2945 A B _37171 u) = (term2967 A B _37171 u)).
Proof. exact (MK_COMB (@lem3520371 A B _37171 u) (@lem3520382 A B _37171 u)). Qed.
Lemma lem3520384 {A B : Type'} (_37171 : type171 A B) (u : type686 A) : (term2945 A B _37171 u) = (term2967 A B _37171 u).
Proof. exact (EQ_MP (@lem3520383 A B _37171 u) (@lem3520361 A B _37171 u)). Qed.
Lemma lem3520505 {A B : Type'} (_37171 : type171 A B) (u : type686 A) : (term2895 A B _37171 u) = (term2967 A B _37171 u).
Proof. exact (TRANS (@lem3520357 A B _37171 u) (@lem3520384 A B _37171 u)). Qed.
Lemma lem3520506 {A B : Type'} (_37171 : type171 A B) : (term2896 A B _37171) = (term2968 A B _37171).
Proof. exact (fun_ext (fun u : type686 A => @lem3520505 A B _37171 u)). Qed.
Lemma lem3520507 {A : Type'} : (@all ((A -> Prop) -> Prop)) = (@all ((A -> Prop) -> Prop)).
Proof. exact (eq_refl (@all ((A -> Prop) -> Prop))). Qed.
Lemma lem3520508 {A B : Type'} (_37171 : type171 A B) : (term2897 A B _37171) = (term2969 A B _37171).
Proof. exact (MK_COMB (@lem3520507 A) (@lem3520506 A B _37171)). Qed.
Lemma lem3520510 {A : Type'} (P : A -> Prop) (Q : A -> Prop) : (term726 A P Q) = (term725 A P Q).
Proof. exact (EQ_MP (@lem18953 A P Q) (@lem18952 A P Q)). Qed.
Lemma lem3520511 {A : Type'} (P : type180 A) (Q : type180 A) : (term2922 A P Q) = (term2923 A P Q).
Proof. exact (@lem3520510 (type686 A) P Q). Qed.
Lemma lem3520512 {A B : Type'} (_37171 : type171 A B) : (term2970 A B _37171) = (term2971 A B _37171).
Proof. exact (@lem3520511 A (term2972 A B _37171) (term2973 A B _37171)). Qed.
Lemma lem3520513 {A B : Type'} (_37171 : type171 A B) (u : type686 A) : (term2974 A B _37171 u) = (term2961 A B _37171 u).
Proof. exact (eq_refl (term2974 A B _37171 u)). Qed.
Lemma lem3520514 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem3520515 {A B : Type'} (_37171 : type171 A B) (u : type686 A) : (term2975 A B _37171 u) = (term2963 A B _37171 u).
Proof. exact (MK_COMB (@lem3520514) (@lem3520513 A B _37171 u)). Qed.
Lemma lem3520516 {A B : Type'} (_37171 : type171 A B) (u : type686 A) : (term2976 A B _37171 u) = (term2966 A B _37171 u).
Proof. exact (eq_refl (term2976 A B _37171 u)). Qed.
Lemma lem3520517 {A B : Type'} (_37171 : type171 A B) (u : type686 A) : (term2977 A B _37171 u) = (term2967 A B _37171 u).
Proof. exact (MK_COMB (@lem3520515 A B _37171 u) (@lem3520516 A B _37171 u)). Qed.
Lemma lem3520518 {A B : Type'} (_37171 : type171 A B) : (term2978 A B _37171) = (term2968 A B _37171).
Proof. exact (fun_ext (fun u : type686 A => @lem3520517 A B _37171 u)). Qed.
Lemma lem3520519 {A : Type'} : (@all ((A -> Prop) -> Prop)) = (@all ((A -> Prop) -> Prop)).
Proof. exact (eq_refl (@all ((A -> Prop) -> Prop))). Qed.
Lemma lem3520520 {A B : Type'} (_37171 : type171 A B) : (term2970 A B _37171) = (term2969 A B _37171).
Proof. exact (MK_COMB (@lem3520519 A) (@lem3520518 A B _37171)). Qed.
Lemma lem3520521 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem3520522 {A B : Type'} (_37171 : type171 A B) : (term2979 A B _37171) = (term2980 A B _37171).
Proof. exact (MK_COMB (@lem3520521) (@lem3520520 A B _37171)). Qed.
Lemma lem3520523 {A B : Type'} (_37171 : type171 A B) (u : type686 A) : (term2974 A B _37171 u) = (term2961 A B _37171 u).
Proof. exact (eq_refl (term2974 A B _37171 u)). Qed.
Lemma lem3520524 {A B : Type'} (_37171 : type171 A B) : (term2981 A B _37171) = (term2972 A B _37171).
Proof. exact (fun_ext (fun u : type686 A => @lem3520523 A B _37171 u)). Qed.
Lemma lem3520525 {A : Type'} : (@all ((A -> Prop) -> Prop)) = (@all ((A -> Prop) -> Prop)).
Proof. exact (eq_refl (@all ((A -> Prop) -> Prop))). Qed.
Lemma lem3520526 {A B : Type'} (_37171 : type171 A B) : (term2982 A B _37171) = (term2983 A B _37171).
Proof. exact (MK_COMB (@lem3520525 A) (@lem3520524 A B _37171)). Qed.
Lemma lem3520527 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem3520528 {A B : Type'} (_37171 : type171 A B) : (term2984 A B _37171) = (term2985 A B _37171).
Proof. exact (MK_COMB (@lem3520527) (@lem3520526 A B _37171)). Qed.
Lemma lem3520529 {A B : Type'} (_37171 : type171 A B) (u : type686 A) : (term2976 A B _37171 u) = (term2966 A B _37171 u).
Proof. exact (eq_refl (term2976 A B _37171 u)). Qed.
Lemma lem3520530 {A B : Type'} (_37171 : type171 A B) : (term2986 A B _37171) = (term2973 A B _37171).
Proof. exact (fun_ext (fun u : type686 A => @lem3520529 A B _37171 u)). Qed.
Lemma lem3520531 {A : Type'} : (@all ((A -> Prop) -> Prop)) = (@all ((A -> Prop) -> Prop)).
Proof. exact (eq_refl (@all ((A -> Prop) -> Prop))). Qed.
Lemma lem3520532 {A B : Type'} (_37171 : type171 A B) : (term2987 A B _37171) = (term2988 A B _37171).
Proof. exact (MK_COMB (@lem3520531 A) (@lem3520530 A B _37171)). Qed.
Lemma lem3520533 {A B : Type'} (_37171 : type171 A B) : (term2971 A B _37171) = (term2989 A B _37171).
Proof. exact (MK_COMB (@lem3520528 A B _37171) (@lem3520532 A B _37171)). Qed.
Lemma lem3520534 {A B : Type'} (_37171 : type171 A B) : ((term2970 A B _37171) = (term2971 A B _37171)) = ((term2969 A B _37171) = (term2989 A B _37171)).
Proof. exact (MK_COMB (@lem3520522 A B _37171) (@lem3520533 A B _37171)). Qed.
Lemma lem3520535 {A B : Type'} (_37171 : type171 A B) : (term2969 A B _37171) = (term2989 A B _37171).
Proof. exact (EQ_MP (@lem3520534 A B _37171) (@lem3520512 A B _37171)). Qed.
Lemma lem3520664 {A B : Type'} (_37171 : type171 A B) : (term2897 A B _37171) = (term2989 A B _37171).
Proof. exact (TRANS (@lem3520508 A B _37171) (@lem3520535 A B _37171)). Qed.
Lemma lem3520666 {A : Type'} (P : Prop) (Q : A -> Prop) : (term434 A P Q) = (term435 A P Q).
Proof. exact (EQ_MP (@lem18911 A P Q) (@lem18910 A P Q)). Qed.
Lemma lem3520667 {A : Type'} (P : Prop) (Q : type686 A) : (term436 A P Q) = (term437 A P Q).
Proof. exact (@lem3520666 (A -> Prop) P Q). Qed.
Lemma lem3520668 {A B : Type'} (_37171 : type171 A B) (GEN_PVAR_84 : A -> Prop) (u : type686 A) (f : type678 A B) (t : type686 A) : (term2990 A B _37171 GEN_PVAR_84 u f t) = (term2991 A B _37171 GEN_PVAR_84 u f t).
Proof. exact (@lem3520667 A (term2992 A B _37171 u f t GEN_PVAR_84) (term2014 A B GEN_PVAR_84 u f t)). Qed.
Lemma lem3520669 {A B : Type'} (GEN_PVAR_84 : A -> Prop) (u : type686 A) (f : type678 A B) (t : type686 A) (x : A -> Prop) : (term2875 A B GEN_PVAR_84 u f t x) = (term2013 A B GEN_PVAR_84 u f t x).
Proof. exact (eq_refl (term2875 A B GEN_PVAR_84 u f t x)). Qed.
Lemma lem3520670 {A B : Type'} (GEN_PVAR_84 : A -> Prop) (u : type686 A) (f : type678 A B) (t : type686 A) : (term2993 A B GEN_PVAR_84 u f t) = (term2014 A B GEN_PVAR_84 u f t).
Proof. exact (fun_ext (fun x : A -> Prop => @lem3520669 A B GEN_PVAR_84 u f t x)). Qed.
Lemma lem3520671 {A : Type'} : (@ex (A -> Prop)) = (@ex (A -> Prop)).
Proof. exact (eq_refl (@ex (A -> Prop))). Qed.
Lemma lem3520672 {A B : Type'} (GEN_PVAR_84 : A -> Prop) (u : type686 A) (f : type678 A B) (t : type686 A) : (term2994 A B GEN_PVAR_84 u f t) = (term2015 A B GEN_PVAR_84 u f t).
Proof. exact (MK_COMB (@lem3520671 A) (@lem3520670 A B GEN_PVAR_84 u f t)). Qed.
Lemma lem3520673 {A B : Type'} (_37171 : type171 A B) (u : type686 A) (f : type678 A B) (t : type686 A) (GEN_PVAR_84 : A -> Prop) : (term2881 A B _37171 u f t GEN_PVAR_84) = (term2881 A B _37171 u f t GEN_PVAR_84).
Proof. exact (eq_refl (term2881 A B _37171 u f t GEN_PVAR_84)). Qed.
Lemma lem3520674 {A B : Type'} (_37171 : type171 A B) (GEN_PVAR_84 : A -> Prop) (u : type686 A) (f : type678 A B) (t : type686 A) : (term2990 A B _37171 GEN_PVAR_84 u f t) = (term2882 A B _37171 GEN_PVAR_84 u f t).
Proof. exact (MK_COMB (@lem3520673 A B _37171 u f t GEN_PVAR_84) (@lem3520672 A B GEN_PVAR_84 u f t)). Qed.
Lemma lem3520675 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem3520676 {A B : Type'} (_37171 : type171 A B) (GEN_PVAR_84 : A -> Prop) (u : type686 A) (f : type678 A B) (t : type686 A) : (term2995 A B _37171 GEN_PVAR_84 u f t) = (term2996 A B _37171 GEN_PVAR_84 u f t).
Proof. exact (MK_COMB (@lem3520675) (@lem3520674 A B _37171 GEN_PVAR_84 u f t)). Qed.
Lemma lem3520677 {A B : Type'} (GEN_PVAR_84 : A -> Prop) (u : type686 A) (f : type678 A B) (t : type686 A) (x : A -> Prop) : (term2875 A B GEN_PVAR_84 u f t x) = (term2013 A B GEN_PVAR_84 u f t x).
Proof. exact (eq_refl (term2875 A B GEN_PVAR_84 u f t x)). Qed.
Lemma lem3520678 {A B : Type'} (_37171 : type171 A B) (u : type686 A) (f : type678 A B) (t : type686 A) (GEN_PVAR_84 : A -> Prop) : (term2881 A B _37171 u f t GEN_PVAR_84) = (term2881 A B _37171 u f t GEN_PVAR_84).
Proof. exact (eq_refl (term2881 A B _37171 u f t GEN_PVAR_84)). Qed.
Lemma lem3520679 {A B : Type'} (_37171 : type171 A B) (GEN_PVAR_84 : A -> Prop) (u : type686 A) (f : type678 A B) (t : type686 A) (x : A -> Prop) : (term2997 A B _37171 GEN_PVAR_84 u f t x) = (term2998 A B _37171 GEN_PVAR_84 u f t x).
Proof. exact (MK_COMB (@lem3520678 A B _37171 u f t GEN_PVAR_84) (@lem3520677 A B GEN_PVAR_84 u f t x)). Qed.
Lemma lem3520680 {A B : Type'} (_37171 : type171 A B) (GEN_PVAR_84 : A -> Prop) (u : type686 A) (f : type678 A B) (t : type686 A) : (term2999 A B _37171 GEN_PVAR_84 u f t) = (term3000 A B _37171 GEN_PVAR_84 u f t).
Proof. exact (fun_ext (fun x : A -> Prop => @lem3520679 A B _37171 GEN_PVAR_84 u f t x)). Qed.
Lemma lem3520681 {A : Type'} : (@ex (A -> Prop)) = (@ex (A -> Prop)).
Proof. exact (eq_refl (@ex (A -> Prop))). Qed.
Lemma lem3520682 {A B : Type'} (_37171 : type171 A B) (GEN_PVAR_84 : A -> Prop) (u : type686 A) (f : type678 A B) (t : type686 A) : (term2991 A B _37171 GEN_PVAR_84 u f t) = (term3001 A B _37171 GEN_PVAR_84 u f t).
Proof. exact (MK_COMB (@lem3520681 A) (@lem3520680 A B _37171 GEN_PVAR_84 u f t)). Qed.
Lemma lem3520683 {A B : Type'} (_37171 : type171 A B) (GEN_PVAR_84 : A -> Prop) (u : type686 A) (f : type678 A B) (t : type686 A) : ((term2990 A B _37171 GEN_PVAR_84 u f t) = (term2991 A B _37171 GEN_PVAR_84 u f t)) = ((term2882 A B _37171 GEN_PVAR_84 u f t) = (term3001 A B _37171 GEN_PVAR_84 u f t)).
Proof. exact (MK_COMB (@lem3520676 A B _37171 GEN_PVAR_84 u f t) (@lem3520682 A B _37171 GEN_PVAR_84 u f t)). Qed.
Lemma lem3520684 {A B : Type'} (_37171 : type171 A B) (GEN_PVAR_84 : A -> Prop) (u : type686 A) (f : type678 A B) (t : type686 A) : (term2882 A B _37171 GEN_PVAR_84 u f t) = (term3001 A B _37171 GEN_PVAR_84 u f t).
Proof. exact (EQ_MP (@lem3520683 A B _37171 GEN_PVAR_84 u f t) (@lem3520668 A B _37171 GEN_PVAR_84 u f t)). Qed.
Lemma lem3520685 {A B : Type'} (_37171 : type171 A B) (u : type686 A) (f : type678 A B) (t : type686 A) : (term2903 A B _37171 u f t) = (term3002 A B _37171 u f t).
Proof. exact (fun_ext (fun GEN_PVAR_84 : A -> Prop => @lem3520684 A B _37171 GEN_PVAR_84 u f t)). Qed.
Lemma lem3520686 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem3520687 {A B : Type'} (_37171 : type171 A B) (u : type686 A) (f : type678 A B) (t : type686 A) : (term2918 A B _37171 u f t) = (term3003 A B _37171 u f t).
Proof. exact (MK_COMB (@lem3520686 A) (@lem3520685 A B _37171 u f t)). Qed.
Lemma lem3520689 {A B : Type'} (P : type1413 A B) : (term453 A B P) = (term454 A B P).
Proof. exact (EQ_MP (@lem18899 A B P) (@lem18898 A B P)). Qed.
Lemma lem3520690 {A : Type'} (P : type639 A) : (term3004 A P) = (term3005 A P).
Proof. exact (@lem3520689 (A -> Prop) (A -> Prop) P). Qed.
Lemma lem3520691 {A B : Type'} (_37171 : type171 A B) (u : type686 A) (f : type678 A B) (t : type686 A) : (term3006 A B _37171 u f t) = (term3007 A B _37171 u f t).
Proof. exact (@lem3520690 A (term3008 A B _37171 u f t)). Qed.
Lemma lem3520692 {A B : Type'} (_37171 : type171 A B) (GEN_PVAR_84 : A -> Prop) (u : type686 A) (f : type678 A B) (t : type686 A) : (term3009 A B _37171 u f t GEN_PVAR_84) = (term3000 A B _37171 GEN_PVAR_84 u f t).
Proof. exact (eq_refl (term3009 A B _37171 u f t GEN_PVAR_84)). Qed.
Lemma lem3520693 {A : Type'} (x : A -> Prop) : x = x.
Proof. exact (eq_refl x). Qed.
Lemma lem3520694 {A B : Type'} (_37171 : type171 A B) (GEN_PVAR_84 : A -> Prop) (u : type686 A) (f : type678 A B) (t : type686 A) (x : A -> Prop) : (term3010 A B _37171 u f t GEN_PVAR_84 x) = (term3011 A B _37171 GEN_PVAR_84 u f t x).
Proof. exact (MK_COMB (@lem3520692 A B _37171 GEN_PVAR_84 u f t) (@lem3520693 A x)). Qed.
Lemma lem3520695 {A B : Type'} (_37171 : type171 A B) (GEN_PVAR_84 : A -> Prop) (u : type686 A) (f : type678 A B) (t : type686 A) (x : A -> Prop) : (term3011 A B _37171 GEN_PVAR_84 u f t x) = (term2998 A B _37171 GEN_PVAR_84 u f t x).
Proof. exact (eq_refl (term3011 A B _37171 GEN_PVAR_84 u f t x)). Qed.
Lemma lem3520696 {A B : Type'} (_37171 : type171 A B) (GEN_PVAR_84 : A -> Prop) (u : type686 A) (f : type678 A B) (t : type686 A) (x : A -> Prop) : (term3010 A B _37171 u f t GEN_PVAR_84 x) = (term2998 A B _37171 GEN_PVAR_84 u f t x).
Proof. exact (TRANS (@lem3520694 A B _37171 GEN_PVAR_84 u f t x) (@lem3520695 A B _37171 GEN_PVAR_84 u f t x)). Qed.
Lemma lem3520697 {A B : Type'} (_37171 : type171 A B) (GEN_PVAR_84 : A -> Prop) (u : type686 A) (f : type678 A B) (t : type686 A) : (term3012 A B _37171 u f t GEN_PVAR_84) = (term3000 A B _37171 GEN_PVAR_84 u f t).
Proof. exact (fun_ext (fun x : A -> Prop => @lem3520696 A B _37171 GEN_PVAR_84 u f t x)). Qed.
Lemma lem3520698 {A : Type'} : (@ex (A -> Prop)) = (@ex (A -> Prop)).
Proof. exact (eq_refl (@ex (A -> Prop))). Qed.
Lemma lem3520699 {A B : Type'} (_37171 : type171 A B) (GEN_PVAR_84 : A -> Prop) (u : type686 A) (f : type678 A B) (t : type686 A) : (term3013 A B _37171 u f t GEN_PVAR_84) = (term3001 A B _37171 GEN_PVAR_84 u f t).
Proof. exact (MK_COMB (@lem3520698 A) (@lem3520697 A B _37171 GEN_PVAR_84 u f t)). Qed.
Lemma lem3520700 {A B : Type'} (_37171 : type171 A B) (u : type686 A) (f : type678 A B) (t : type686 A) : (term3014 A B _37171 u f t) = (term3002 A B _37171 u f t).
Proof. exact (fun_ext (fun GEN_PVAR_84 : A -> Prop => @lem3520699 A B _37171 GEN_PVAR_84 u f t)). Qed.
Lemma lem3520701 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem3520702 {A B : Type'} (_37171 : type171 A B) (u : type686 A) (f : type678 A B) (t : type686 A) : (term3006 A B _37171 u f t) = (term3003 A B _37171 u f t).
Proof. exact (MK_COMB (@lem3520701 A) (@lem3520700 A B _37171 u f t)). Qed.
Lemma lem3520703 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem3520704 {A B : Type'} (_37171 : type171 A B) (u : type686 A) (f : type678 A B) (t : type686 A) : (term3015 A B _37171 u f t) = (term3016 A B _37171 u f t).
Proof. exact (MK_COMB (@lem3520703) (@lem3520702 A B _37171 u f t)). Qed.
Lemma lem3520705 {A B : Type'} (_37171 : type171 A B) (GEN_PVAR_84 : A -> Prop) (u : type686 A) (f : type678 A B) (t : type686 A) : (term3009 A B _37171 u f t GEN_PVAR_84) = (term3000 A B _37171 GEN_PVAR_84 u f t).
Proof. exact (eq_refl (term3009 A B _37171 u f t GEN_PVAR_84)). Qed.
Lemma lem3520706 {A : Type'} (x : type672 A) (GEN_PVAR_84 : A -> Prop) : (x GEN_PVAR_84) = (x GEN_PVAR_84).
Proof. exact (eq_refl (x GEN_PVAR_84)). Qed.
Lemma lem3520707 {A B : Type'} (_37171 : type171 A B) (u : type686 A) (f : type678 A B) (t : type686 A) (x : type672 A) (GEN_PVAR_84 : A -> Prop) : (term3017 A B _37171 u f t x GEN_PVAR_84) = (term3018 A B _37171 u f t x GEN_PVAR_84).
Proof. exact (MK_COMB (@lem3520705 A B _37171 GEN_PVAR_84 u f t) (@lem3520706 A x GEN_PVAR_84)). Qed.
Lemma lem3520708 {A B : Type'} (_37171 : type171 A B) (u : type686 A) (f : type678 A B) (t : type686 A) (x : type672 A) (GEN_PVAR_84 : A -> Prop) : (term3018 A B _37171 u f t x GEN_PVAR_84) = (term3019 A B _37171 u f t x GEN_PVAR_84).
Proof. exact (eq_refl (term3018 A B _37171 u f t x GEN_PVAR_84)). Qed.
Lemma lem3520709 {A B : Type'} (_37171 : type171 A B) (u : type686 A) (f : type678 A B) (t : type686 A) (x : type672 A) (GEN_PVAR_84 : A -> Prop) : (term3017 A B _37171 u f t x GEN_PVAR_84) = (term3019 A B _37171 u f t x GEN_PVAR_84).
Proof. exact (TRANS (@lem3520707 A B _37171 u f t x GEN_PVAR_84) (@lem3520708 A B _37171 u f t x GEN_PVAR_84)). Qed.
Lemma lem3520710 {A B : Type'} (_37171 : type171 A B) (u : type686 A) (f : type678 A B) (t : type686 A) (x : type672 A) : (term3020 A B _37171 u f t x) = (term3021 A B _37171 u f t x).
Proof. exact (fun_ext (fun GEN_PVAR_84 : A -> Prop => @lem3520709 A B _37171 u f t x GEN_PVAR_84)). Qed.
Lemma lem3520711 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem3520712 {A B : Type'} (_37171 : type171 A B) (u : type686 A) (f : type678 A B) (t : type686 A) (x : type672 A) : (term3022 A B _37171 u f t x) = (term3023 A B _37171 u f t x).
Proof. exact (MK_COMB (@lem3520711 A) (@lem3520710 A B _37171 u f t x)). Qed.
Lemma lem3520713 {A B : Type'} (_37171 : type171 A B) (u : type686 A) (f : type678 A B) (t : type686 A) : (term3024 A B _37171 u f t) = (term3025 A B _37171 u f t).
Proof. exact (fun_ext (fun x : type672 A => @lem3520712 A B _37171 u f t x)). Qed.
Lemma lem3520714 {A : Type'} : (@ex ((A -> Prop) -> A -> Prop)) = (@ex ((A -> Prop) -> A -> Prop)).
Proof. exact (eq_refl (@ex ((A -> Prop) -> A -> Prop))). Qed.
Lemma lem3520715 {A B : Type'} (_37171 : type171 A B) (u : type686 A) (f : type678 A B) (t : type686 A) : (term3007 A B _37171 u f t) = (term3026 A B _37171 u f t).
Proof. exact (MK_COMB (@lem3520714 A) (@lem3520713 A B _37171 u f t)). Qed.
Lemma lem3520716 {A B : Type'} (_37171 : type171 A B) (u : type686 A) (f : type678 A B) (t : type686 A) : ((term3006 A B _37171 u f t) = (term3007 A B _37171 u f t)) = ((term3003 A B _37171 u f t) = (term3026 A B _37171 u f t)).
Proof. exact (MK_COMB (@lem3520704 A B _37171 u f t) (@lem3520715 A B _37171 u f t)). Qed.
Lemma lem3520717 {A B : Type'} (_37171 : type171 A B) (u : type686 A) (f : type678 A B) (t : type686 A) : (term3003 A B _37171 u f t) = (term3026 A B _37171 u f t).
Proof. exact (EQ_MP (@lem3520716 A B _37171 u f t) (@lem3520691 A B _37171 u f t)). Qed.
Lemma lem3520718 {A B : Type'} (_37171 : type171 A B) (u : type686 A) (f : type678 A B) (t : type686 A) : (term2918 A B _37171 u f t) = (term3026 A B _37171 u f t).
Proof. exact (TRANS (@lem3520687 A B _37171 u f t) (@lem3520717 A B _37171 u f t)). Qed.
Lemma lem3520719 {A B : Type'} (_37171 : type171 A B) (u : type686 A) (f : type678 A B) : (term2927 A B _37171 u f) = (term3027 A B _37171 u f).
Proof. exact (fun_ext (fun t : type686 A => @lem3520718 A B _37171 u f t)). Qed.
Lemma lem3520720 {A : Type'} : (@all ((A -> Prop) -> Prop)) = (@all ((A -> Prop) -> Prop)).
Proof. exact (eq_refl (@all ((A -> Prop) -> Prop))). Qed.
Lemma lem3520721 {A B : Type'} (_37171 : type171 A B) (u : type686 A) (f : type678 A B) : (term2942 A B _37171 u f) = (term3028 A B _37171 u f).
Proof. exact (MK_COMB (@lem3520720 A) (@lem3520719 A B _37171 u f)). Qed.
Lemma lem3520723 {A B : Type'} (P : type1413 A B) : (term453 A B P) = (term454 A B P).
Proof. exact (EQ_MP (@lem18899 A B P) (@lem18898 A B P)). Qed.
Lemma lem3520724 {A : Type'} (P : type168 A) : (term3029 A P) = (term3030 A P).
Proof. exact (@lem3520723 (type686 A) (type672 A) P). Qed.
Lemma lem3520725 {A B : Type'} (_37171 : type171 A B) (u : type686 A) (f : type678 A B) : (term3031 A B _37171 u f) = (term3032 A B _37171 u f).
Proof. exact (@lem3520724 A (term3033 A B _37171 u f)). Qed.
Lemma lem3520726 {A B : Type'} (_37171 : type171 A B) (u : type686 A) (f : type678 A B) (t : type686 A) : (term3034 A B _37171 u f t) = (term3025 A B _37171 u f t).
Proof. exact (eq_refl (term3034 A B _37171 u f t)). Qed.
Lemma lem3520727 {A : Type'} (x : type672 A) : x = x.
Proof. exact (eq_refl x). Qed.
Lemma lem3520728 {A B : Type'} (_37171 : type171 A B) (u : type686 A) (f : type678 A B) (t : type686 A) (x : type672 A) : (term3035 A B _37171 u f t x) = (term3036 A B _37171 u f t x).
Proof. exact (MK_COMB (@lem3520726 A B _37171 u f t) (@lem3520727 A x)). Qed.
Lemma lem3520729 {A B : Type'} (_37171 : type171 A B) (u : type686 A) (f : type678 A B) (t : type686 A) (x : type672 A) : (term3036 A B _37171 u f t x) = (term3023 A B _37171 u f t x).
Proof. exact (eq_refl (term3036 A B _37171 u f t x)). Qed.
Lemma lem3520730 {A B : Type'} (_37171 : type171 A B) (u : type686 A) (f : type678 A B) (t : type686 A) (x : type672 A) : (term3035 A B _37171 u f t x) = (term3023 A B _37171 u f t x).
Proof. exact (TRANS (@lem3520728 A B _37171 u f t x) (@lem3520729 A B _37171 u f t x)). Qed.
Lemma lem3520731 {A B : Type'} (_37171 : type171 A B) (u : type686 A) (f : type678 A B) (t : type686 A) : (term3037 A B _37171 u f t) = (term3025 A B _37171 u f t).
Proof. exact (fun_ext (fun x : type672 A => @lem3520730 A B _37171 u f t x)). Qed.
Lemma lem3520732 {A : Type'} : (@ex ((A -> Prop) -> A -> Prop)) = (@ex ((A -> Prop) -> A -> Prop)).
Proof. exact (eq_refl (@ex ((A -> Prop) -> A -> Prop))). Qed.
Lemma lem3520733 {A B : Type'} (_37171 : type171 A B) (u : type686 A) (f : type678 A B) (t : type686 A) : (term3038 A B _37171 u f t) = (term3026 A B _37171 u f t).
Proof. exact (MK_COMB (@lem3520732 A) (@lem3520731 A B _37171 u f t)). Qed.
Lemma lem3520734 {A B : Type'} (_37171 : type171 A B) (u : type686 A) (f : type678 A B) : (term3039 A B _37171 u f) = (term3027 A B _37171 u f).
Proof. exact (fun_ext (fun t : type686 A => @lem3520733 A B _37171 u f t)). Qed.
Lemma lem3520735 {A : Type'} : (@all ((A -> Prop) -> Prop)) = (@all ((A -> Prop) -> Prop)).
Proof. exact (eq_refl (@all ((A -> Prop) -> Prop))). Qed.
Lemma lem3520736 {A B : Type'} (_37171 : type171 A B) (u : type686 A) (f : type678 A B) : (term3031 A B _37171 u f) = (term3028 A B _37171 u f).
Proof. exact (MK_COMB (@lem3520735 A) (@lem3520734 A B _37171 u f)). Qed.
Lemma lem3520737 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem3520738 {A B : Type'} (_37171 : type171 A B) (u : type686 A) (f : type678 A B) : (term3040 A B _37171 u f) = (term3041 A B _37171 u f).
Proof. exact (MK_COMB (@lem3520737) (@lem3520736 A B _37171 u f)). Qed.
Lemma lem3520739 {A B : Type'} (_37171 : type171 A B) (u : type686 A) (f : type678 A B) (t : type686 A) : (term3034 A B _37171 u f t) = (term3025 A B _37171 u f t).
Proof. exact (eq_refl (term3034 A B _37171 u f t)). Qed.
Lemma lem3520740 {A : Type'} (x : type173 A) (t : type686 A) : (x t) = (x t).
Proof. exact (eq_refl (x t)). Qed.
Lemma lem3520741 {A B : Type'} (_37171 : type171 A B) (u : type686 A) (f : type678 A B) (x : type173 A) (t : type686 A) : (term3042 A B _37171 u f x t) = (term3043 A B _37171 u f x t).
Proof. exact (MK_COMB (@lem3520739 A B _37171 u f t) (@lem3520740 A x t)). Qed.
Lemma lem3520742 {A B : Type'} (_37171 : type171 A B) (u : type686 A) (f : type678 A B) (x : type173 A) (t : type686 A) : (term3043 A B _37171 u f x t) = (term3044 A B _37171 u f x t).
Proof. exact (eq_refl (term3043 A B _37171 u f x t)). Qed.
Lemma lem3520743 {A B : Type'} (_37171 : type171 A B) (u : type686 A) (f : type678 A B) (x : type173 A) (t : type686 A) : (term3042 A B _37171 u f x t) = (term3044 A B _37171 u f x t).
Proof. exact (TRANS (@lem3520741 A B _37171 u f x t) (@lem3520742 A B _37171 u f x t)). Qed.
Lemma lem3520744 {A B : Type'} (_37171 : type171 A B) (u : type686 A) (f : type678 A B) (x : type173 A) : (term3045 A B _37171 u f x) = (term3046 A B _37171 u f x).
Proof. exact (fun_ext (fun t : type686 A => @lem3520743 A B _37171 u f x t)). Qed.
Lemma lem3520745 {A : Type'} : (@all ((A -> Prop) -> Prop)) = (@all ((A -> Prop) -> Prop)).
Proof. exact (eq_refl (@all ((A -> Prop) -> Prop))). Qed.
Lemma lem3520746 {A B : Type'} (_37171 : type171 A B) (u : type686 A) (f : type678 A B) (x : type173 A) : (term3047 A B _37171 u f x) = (term3048 A B _37171 u f x).
Proof. exact (MK_COMB (@lem3520745 A) (@lem3520744 A B _37171 u f x)). Qed.
Lemma lem3520747 {A B : Type'} (_37171 : type171 A B) (u : type686 A) (f : type678 A B) : (term3049 A B _37171 u f) = (term3050 A B _37171 u f).
Proof. exact (fun_ext (fun x : type173 A => @lem3520746 A B _37171 u f x)). Qed.
Lemma lem3520748 {A : Type'} : (@ex (((A -> Prop) -> Prop) -> (A -> Prop) -> A -> Prop)) = (@ex (((A -> Prop) -> Prop) -> (A -> Prop) -> A -> Prop)).
Proof. exact (eq_refl (@ex (((A -> Prop) -> Prop) -> (A -> Prop) -> A -> Prop))). Qed.
Lemma lem3520749 {A B : Type'} (_37171 : type171 A B) (u : type686 A) (f : type678 A B) : (term3032 A B _37171 u f) = (term3051 A B _37171 u f).
Proof. exact (MK_COMB (@lem3520748 A) (@lem3520747 A B _37171 u f)). Qed.
Lemma lem3520750 {A B : Type'} (_37171 : type171 A B) (u : type686 A) (f : type678 A B) : ((term3031 A B _37171 u f) = (term3032 A B _37171 u f)) = ((term3028 A B _37171 u f) = (term3051 A B _37171 u f)).
Proof. exact (MK_COMB (@lem3520738 A B _37171 u f) (@lem3520749 A B _37171 u f)). Qed.
Lemma lem3520751 {A B : Type'} (_37171 : type171 A B) (u : type686 A) (f : type678 A B) : (term3028 A B _37171 u f) = (term3051 A B _37171 u f).
Proof. exact (EQ_MP (@lem3520750 A B _37171 u f) (@lem3520725 A B _37171 u f)). Qed.
Lemma lem3520752 {A B : Type'} (_37171 : type171 A B) (u : type686 A) (f : type678 A B) : (term2942 A B _37171 u f) = (term3051 A B _37171 u f).
Proof. exact (TRANS (@lem3520721 A B _37171 u f) (@lem3520751 A B _37171 u f)). Qed.
Lemma lem3520753 {A B : Type'} (_37171 : type171 A B) (u : type686 A) : (term2951 A B _37171 u) = (term3052 A B _37171 u).
Proof. exact (fun_ext (fun f : type678 A B => @lem3520752 A B _37171 u f)). Qed.
Lemma lem3520754 {A B : Type'} : (@all ((A -> Prop) -> B -> Prop)) = (@all ((A -> Prop) -> B -> Prop)).
Proof. exact (eq_refl (@all ((A -> Prop) -> B -> Prop))). Qed.
Lemma lem3520755 {A B : Type'} (_37171 : type171 A B) (u : type686 A) : (term2966 A B _37171 u) = (term3053 A B _37171 u).
Proof. exact (MK_COMB (@lem3520754 A B) (@lem3520753 A B _37171 u)). Qed.
Lemma lem3520757 {A B : Type'} (P : type1413 A B) : (term453 A B P) = (term454 A B P).
Proof. exact (EQ_MP (@lem18899 A B P) (@lem18898 A B P)). Qed.
Lemma lem3520758 {A B : Type'} (P : type153 A B) : (term3054 A B P) = (term3055 A B P).
Proof. exact (@lem3520757 (type678 A B) (type173 A) P). Qed.
Lemma lem3520759 {A B : Type'} (_37171 : type171 A B) (u : type686 A) : (term3056 A B _37171 u) = (term3057 A B _37171 u).
Proof. exact (@lem3520758 A B (term3058 A B _37171 u)). Qed.
Lemma lem3520760 {A B : Type'} (_37171 : type171 A B) (u : type686 A) (f : type678 A B) : (term3059 A B _37171 u f) = (term3050 A B _37171 u f).
Proof. exact (eq_refl (term3059 A B _37171 u f)). Qed.
Lemma lem3520761 {A : Type'} (x : type173 A) : x = x.
Proof. exact (eq_refl x). Qed.
Lemma lem3520762 {A B : Type'} (_37171 : type171 A B) (u : type686 A) (f : type678 A B) (x : type173 A) : (term3060 A B _37171 u f x) = (term3061 A B _37171 u f x).
Proof. exact (MK_COMB (@lem3520760 A B _37171 u f) (@lem3520761 A x)). Qed.
Lemma lem3520763 {A B : Type'} (_37171 : type171 A B) (u : type686 A) (f : type678 A B) (x : type173 A) : (term3061 A B _37171 u f x) = (term3048 A B _37171 u f x).
Proof. exact (eq_refl (term3061 A B _37171 u f x)). Qed.
Lemma lem3520764 {A B : Type'} (_37171 : type171 A B) (u : type686 A) (f : type678 A B) (x : type173 A) : (term3060 A B _37171 u f x) = (term3048 A B _37171 u f x).
Proof. exact (TRANS (@lem3520762 A B _37171 u f x) (@lem3520763 A B _37171 u f x)). Qed.
Lemma lem3520765 {A B : Type'} (_37171 : type171 A B) (u : type686 A) (f : type678 A B) : (term3062 A B _37171 u f) = (term3050 A B _37171 u f).
Proof. exact (fun_ext (fun x : type173 A => @lem3520764 A B _37171 u f x)). Qed.
Lemma lem3520766 {A : Type'} : (@ex (((A -> Prop) -> Prop) -> (A -> Prop) -> A -> Prop)) = (@ex (((A -> Prop) -> Prop) -> (A -> Prop) -> A -> Prop)).
Proof. exact (eq_refl (@ex (((A -> Prop) -> Prop) -> (A -> Prop) -> A -> Prop))). Qed.
Lemma lem3520767 {A B : Type'} (_37171 : type171 A B) (u : type686 A) (f : type678 A B) : (term3063 A B _37171 u f) = (term3051 A B _37171 u f).
Proof. exact (MK_COMB (@lem3520766 A) (@lem3520765 A B _37171 u f)). Qed.
Lemma lem3520768 {A B : Type'} (_37171 : type171 A B) (u : type686 A) : (term3064 A B _37171 u) = (term3052 A B _37171 u).
Proof. exact (fun_ext (fun f : type678 A B => @lem3520767 A B _37171 u f)). Qed.
Lemma lem3520769 {A B : Type'} : (@all ((A -> Prop) -> B -> Prop)) = (@all ((A -> Prop) -> B -> Prop)).
Proof. exact (eq_refl (@all ((A -> Prop) -> B -> Prop))). Qed.
Lemma lem3520770 {A B : Type'} (_37171 : type171 A B) (u : type686 A) : (term3056 A B _37171 u) = (term3053 A B _37171 u).
Proof. exact (MK_COMB (@lem3520769 A B) (@lem3520768 A B _37171 u)). Qed.
Lemma lem3520771 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem3520772 {A B : Type'} (_37171 : type171 A B) (u : type686 A) : (term3065 A B _37171 u) = (term3066 A B _37171 u).
Proof. exact (MK_COMB (@lem3520771) (@lem3520770 A B _37171 u)). Qed.
Lemma lem3520773 {A B : Type'} (_37171 : type171 A B) (u : type686 A) (f : type678 A B) : (term3059 A B _37171 u f) = (term3050 A B _37171 u f).
Proof. exact (eq_refl (term3059 A B _37171 u f)). Qed.
Lemma lem3520774 {A B : Type'} (x : type155 A B) (f : type678 A B) : (x f) = (x f).
Proof. exact (eq_refl (x f)). Qed.
Lemma lem3520775 {A B : Type'} (_37171 : type171 A B) (u : type686 A) (x : type155 A B) (f : type678 A B) : (term3067 A B _37171 u x f) = (term3068 A B _37171 u x f).
Proof. exact (MK_COMB (@lem3520773 A B _37171 u f) (@lem3520774 A B x f)). Qed.
Lemma lem3520776 {A B : Type'} (_37171 : type171 A B) (u : type686 A) (x : type155 A B) (f : type678 A B) : (term3068 A B _37171 u x f) = (term3069 A B _37171 u x f).
Proof. exact (eq_refl (term3068 A B _37171 u x f)). Qed.
Lemma lem3520777 {A B : Type'} (_37171 : type171 A B) (u : type686 A) (x : type155 A B) (f : type678 A B) : (term3067 A B _37171 u x f) = (term3069 A B _37171 u x f).
Proof. exact (TRANS (@lem3520775 A B _37171 u x f) (@lem3520776 A B _37171 u x f)). Qed.
Lemma lem3520778 {A B : Type'} (_37171 : type171 A B) (u : type686 A) (x : type155 A B) : (term3070 A B _37171 u x) = (term3071 A B _37171 u x).
Proof. exact (fun_ext (fun f : type678 A B => @lem3520777 A B _37171 u x f)). Qed.
Lemma lem3520779 {A B : Type'} : (@all ((A -> Prop) -> B -> Prop)) = (@all ((A -> Prop) -> B -> Prop)).
Proof. exact (eq_refl (@all ((A -> Prop) -> B -> Prop))). Qed.
Lemma lem3520780 {A B : Type'} (_37171 : type171 A B) (u : type686 A) (x : type155 A B) : (term3072 A B _37171 u x) = (term3073 A B _37171 u x).
Proof. exact (MK_COMB (@lem3520779 A B) (@lem3520778 A B _37171 u x)). Qed.
Lemma lem3520781 {A B : Type'} (_37171 : type171 A B) (u : type686 A) : (term3074 A B _37171 u) = (term3075 A B _37171 u).
Proof. exact (fun_ext (fun x : type155 A B => @lem3520780 A B _37171 u x)). Qed.
Lemma lem3520782 {A B : Type'} : (@ex (((A -> Prop) -> B -> Prop) -> ((A -> Prop) -> Prop) -> (A -> Prop) -> A -> Prop)) = (@ex (((A -> Prop) -> B -> Prop) -> ((A -> Prop) -> Prop) -> (A -> Prop) -> A -> Prop)).
Proof. exact (eq_refl (@ex (((A -> Prop) -> B -> Prop) -> ((A -> Prop) -> Prop) -> (A -> Prop) -> A -> Prop))). Qed.
Lemma lem3520783 {A B : Type'} (_37171 : type171 A B) (u : type686 A) : (term3057 A B _37171 u) = (term3076 A B _37171 u).
Proof. exact (MK_COMB (@lem3520782 A B) (@lem3520781 A B _37171 u)). Qed.
Lemma lem3520784 {A B : Type'} (_37171 : type171 A B) (u : type686 A) : ((term3056 A B _37171 u) = (term3057 A B _37171 u)) = ((term3053 A B _37171 u) = (term3076 A B _37171 u)).
Proof. exact (MK_COMB (@lem3520772 A B _37171 u) (@lem3520783 A B _37171 u)). Qed.
Lemma lem3520785 {A B : Type'} (_37171 : type171 A B) (u : type686 A) : (term3053 A B _37171 u) = (term3076 A B _37171 u).
Proof. exact (EQ_MP (@lem3520784 A B _37171 u) (@lem3520759 A B _37171 u)). Qed.
Lemma lem3520786 {A B : Type'} (_37171 : type171 A B) (u : type686 A) : (term2966 A B _37171 u) = (term3076 A B _37171 u).
Proof. exact (TRANS (@lem3520755 A B _37171 u) (@lem3520785 A B _37171 u)). Qed.
Lemma lem3520787 {A B : Type'} (_37171 : type171 A B) : (term2973 A B _37171) = (term3077 A B _37171).
Proof. exact (fun_ext (fun u : type686 A => @lem3520786 A B _37171 u)). Qed.
Lemma lem3520788 {A : Type'} : (@all ((A -> Prop) -> Prop)) = (@all ((A -> Prop) -> Prop)).
Proof. exact (eq_refl (@all ((A -> Prop) -> Prop))). Qed.
Lemma lem3520789 {A B : Type'} (_37171 : type171 A B) : (term2988 A B _37171) = (term3078 A B _37171).
Proof. exact (MK_COMB (@lem3520788 A) (@lem3520787 A B _37171)). Qed.
Lemma lem3520791 {A B : Type'} (P : type1413 A B) : (term453 A B P) = (term454 A B P).
Proof. exact (EQ_MP (@lem18899 A B P) (@lem18898 A B P)). Qed.
Lemma lem3520792 {A B : Type'} (P : type167 A B) : (term3079 A B P) = (term3080 A B P).
Proof. exact (@lem3520791 (type686 A) (type155 A B) P). Qed.
Lemma lem3520793 {A B : Type'} (_37171 : type171 A B) : (term3081 A B _37171) = (term3082 A B _37171).
Proof. exact (@lem3520792 A B (term3083 A B _37171)). Qed.
Lemma lem3520794 {A B : Type'} (_37171 : type171 A B) (u : type686 A) : (term3084 A B _37171 u) = (term3075 A B _37171 u).
Proof. exact (eq_refl (term3084 A B _37171 u)). Qed.
Lemma lem3520795 {A B : Type'} (x : type155 A B) : x = x.
Proof. exact (eq_refl x). Qed.
Lemma lem3520796 {A B : Type'} (_37171 : type171 A B) (u : type686 A) (x : type155 A B) : (term3085 A B _37171 u x) = (term3086 A B _37171 u x).
Proof. exact (MK_COMB (@lem3520794 A B _37171 u) (@lem3520795 A B x)). Qed.
Lemma lem3520797 {A B : Type'} (_37171 : type171 A B) (u : type686 A) (x : type155 A B) : (term3086 A B _37171 u x) = (term3073 A B _37171 u x).
Proof. exact (eq_refl (term3086 A B _37171 u x)). Qed.
Lemma lem3520798 {A B : Type'} (_37171 : type171 A B) (u : type686 A) (x : type155 A B) : (term3085 A B _37171 u x) = (term3073 A B _37171 u x).
Proof. exact (TRANS (@lem3520796 A B _37171 u x) (@lem3520797 A B _37171 u x)). Qed.
Lemma lem3520799 {A B : Type'} (_37171 : type171 A B) (u : type686 A) : (term3087 A B _37171 u) = (term3075 A B _37171 u).
Proof. exact (fun_ext (fun x : type155 A B => @lem3520798 A B _37171 u x)). Qed.
Lemma lem3520800 {A B : Type'} : (@ex (((A -> Prop) -> B -> Prop) -> ((A -> Prop) -> Prop) -> (A -> Prop) -> A -> Prop)) = (@ex (((A -> Prop) -> B -> Prop) -> ((A -> Prop) -> Prop) -> (A -> Prop) -> A -> Prop)).
Proof. exact (eq_refl (@ex (((A -> Prop) -> B -> Prop) -> ((A -> Prop) -> Prop) -> (A -> Prop) -> A -> Prop))). Qed.
Lemma lem3520801 {A B : Type'} (_37171 : type171 A B) (u : type686 A) : (term3088 A B _37171 u) = (term3076 A B _37171 u).
Proof. exact (MK_COMB (@lem3520800 A B) (@lem3520799 A B _37171 u)). Qed.
Lemma lem3520802 {A B : Type'} (_37171 : type171 A B) : (term3089 A B _37171) = (term3077 A B _37171).
Proof. exact (fun_ext (fun u : type686 A => @lem3520801 A B _37171 u)). Qed.
Lemma lem3520803 {A : Type'} : (@all ((A -> Prop) -> Prop)) = (@all ((A -> Prop) -> Prop)).
Proof. exact (eq_refl (@all ((A -> Prop) -> Prop))). Qed.
Lemma lem3520804 {A B : Type'} (_37171 : type171 A B) : (term3081 A B _37171) = (term3078 A B _37171).
Proof. exact (MK_COMB (@lem3520803 A) (@lem3520802 A B _37171)). Qed.
Lemma lem3520805 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem3520806 {A B : Type'} (_37171 : type171 A B) : (term3090 A B _37171) = (term3091 A B _37171).
Proof. exact (MK_COMB (@lem3520805) (@lem3520804 A B _37171)). Qed.
Lemma lem3520807 {A B : Type'} (_37171 : type171 A B) (u : type686 A) : (term3084 A B _37171 u) = (term3075 A B _37171 u).
Proof. exact (eq_refl (term3084 A B _37171 u)). Qed.
Lemma lem3520808 {A B : Type'} (x : type170 A B) (u : type686 A) : (x u) = (x u).
Proof. exact (eq_refl (x u)). Qed.
Lemma lem3520809 {A B : Type'} (_37171 : type171 A B) (x : type170 A B) (u : type686 A) : (term3092 A B _37171 x u) = (term3093 A B _37171 x u).
Proof. exact (MK_COMB (@lem3520807 A B _37171 u) (@lem3520808 A B x u)). Qed.
Lemma lem3520810 {A B : Type'} (_37171 : type171 A B) (x : type170 A B) (u : type686 A) : (term3093 A B _37171 x u) = (term3094 A B _37171 x u).
Proof. exact (eq_refl (term3093 A B _37171 x u)). Qed.
Lemma lem3520811 {A B : Type'} (_37171 : type171 A B) (x : type170 A B) (u : type686 A) : (term3092 A B _37171 x u) = (term3094 A B _37171 x u).
Proof. exact (TRANS (@lem3520809 A B _37171 x u) (@lem3520810 A B _37171 x u)). Qed.
Lemma lem3520812 {A B : Type'} (_37171 : type171 A B) (x : type170 A B) : (term3095 A B _37171 x) = (term3096 A B _37171 x).
Proof. exact (fun_ext (fun u : type686 A => @lem3520811 A B _37171 x u)). Qed.
Lemma lem3520813 {A : Type'} : (@all ((A -> Prop) -> Prop)) = (@all ((A -> Prop) -> Prop)).
Proof. exact (eq_refl (@all ((A -> Prop) -> Prop))). Qed.
Lemma lem3520814 {A B : Type'} (_37171 : type171 A B) (x : type170 A B) : (term3097 A B _37171 x) = (term3098 A B _37171 x).
Proof. exact (MK_COMB (@lem3520813 A) (@lem3520812 A B _37171 x)). Qed.
Lemma lem3520815 {A B : Type'} (_37171 : type171 A B) : (term3099 A B _37171) = (term3100 A B _37171).
Proof. exact (fun_ext (fun x : type170 A B => @lem3520814 A B _37171 x)). Qed.
Lemma lem3520816 {A B : Type'} : (@ex (((A -> Prop) -> Prop) -> ((A -> Prop) -> B -> Prop) -> ((A -> Prop) -> Prop) -> (A -> Prop) -> A -> Prop)) = (@ex (((A -> Prop) -> Prop) -> ((A -> Prop) -> B -> Prop) -> ((A -> Prop) -> Prop) -> (A -> Prop) -> A -> Prop)).
Proof. exact (eq_refl (@ex (((A -> Prop) -> Prop) -> ((A -> Prop) -> B -> Prop) -> ((A -> Prop) -> Prop) -> (A -> Prop) -> A -> Prop))). Qed.
Lemma lem3520817 {A B : Type'} (_37171 : type171 A B) : (term3082 A B _37171) = (term3101 A B _37171).
Proof. exact (MK_COMB (@lem3520816 A B) (@lem3520815 A B _37171)). Qed.
Lemma lem3520818 {A B : Type'} (_37171 : type171 A B) : ((term3081 A B _37171) = (term3082 A B _37171)) = ((term3078 A B _37171) = (term3101 A B _37171)).
Proof. exact (MK_COMB (@lem3520806 A B _37171) (@lem3520817 A B _37171)). Qed.
Lemma lem3520819 {A B : Type'} (_37171 : type171 A B) : (term3078 A B _37171) = (term3101 A B _37171).
Proof. exact (EQ_MP (@lem3520818 A B _37171) (@lem3520793 A B _37171)). Qed.
Lemma lem3520820 {A B : Type'} (_37171 : type171 A B) : (term2988 A B _37171) = (term3101 A B _37171).
Proof. exact (TRANS (@lem3520789 A B _37171) (@lem3520819 A B _37171)). Qed.
Lemma lem3520821 {A B : Type'} (_37171 : type171 A B) : (term2985 A B _37171) = (term2985 A B _37171).
Proof. exact (eq_refl (term2985 A B _37171)). Qed.
Lemma lem3520822 {A B : Type'} (_37171 : type171 A B) : (term2989 A B _37171) = (term3102 A B _37171).
Proof. exact (MK_COMB (@lem3520821 A B _37171) (@lem3520820 A B _37171)). Qed.
Lemma lem3520824 {A : Type'} (P : Prop) (Q : A -> Prop) : (term415 A P Q) = (term416 A P Q).
Proof. exact (EQ_MP (@lem18929 A P Q) (@lem18928 A P Q)). Qed.
Lemma lem3520825 {A B : Type'} (P : Prop) (Q : type69 A B) : (term3103 A B P Q) = (term3104 A B P Q).
Proof. exact (@lem3520824 (type170 A B) P Q). Qed.
Lemma lem3520826 {A B : Type'} (_37171 : type171 A B) : (term3105 A B _37171) = (term3106 A B _37171).
Proof. exact (@lem3520825 A B (term2983 A B _37171) (term3100 A B _37171)). Qed.
Lemma lem3520827 {A B : Type'} (_37171 : type171 A B) (x : type170 A B) : (term3107 A B _37171 x) = (term3098 A B _37171 x).
Proof. exact (eq_refl (term3107 A B _37171 x)). Qed.
Lemma lem3520828 {A B : Type'} (_37171 : type171 A B) : (term3108 A B _37171) = (term3100 A B _37171).
Proof. exact (fun_ext (fun x : type170 A B => @lem3520827 A B _37171 x)). Qed.
Lemma lem3520829 {A B : Type'} : (@ex (((A -> Prop) -> Prop) -> ((A -> Prop) -> B -> Prop) -> ((A -> Prop) -> Prop) -> (A -> Prop) -> A -> Prop)) = (@ex (((A -> Prop) -> Prop) -> ((A -> Prop) -> B -> Prop) -> ((A -> Prop) -> Prop) -> (A -> Prop) -> A -> Prop)).
Proof. exact (eq_refl (@ex (((A -> Prop) -> Prop) -> ((A -> Prop) -> B -> Prop) -> ((A -> Prop) -> Prop) -> (A -> Prop) -> A -> Prop))). Qed.
Lemma lem3520830 {A B : Type'} (_37171 : type171 A B) : (term3109 A B _37171) = (term3101 A B _37171).
Proof. exact (MK_COMB (@lem3520829 A B) (@lem3520828 A B _37171)). Qed.
Lemma lem3520831 {A B : Type'} (_37171 : type171 A B) : (term2985 A B _37171) = (term2985 A B _37171).
Proof. exact (eq_refl (term2985 A B _37171)). Qed.
Lemma lem3520832 {A B : Type'} (_37171 : type171 A B) : (term3105 A B _37171) = (term3102 A B _37171).
Proof. exact (MK_COMB (@lem3520831 A B _37171) (@lem3520830 A B _37171)). Qed.
Lemma lem3520833 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem3520834 {A B : Type'} (_37171 : type171 A B) : (term3110 A B _37171) = (term3111 A B _37171).
Proof. exact (MK_COMB (@lem3520833) (@lem3520832 A B _37171)). Qed.
Lemma lem3520835 {A B : Type'} (_37171 : type171 A B) (x : type170 A B) : (term3107 A B _37171 x) = (term3098 A B _37171 x).
Proof. exact (eq_refl (term3107 A B _37171 x)). Qed.
Lemma lem3520836 {A B : Type'} (_37171 : type171 A B) : (term2985 A B _37171) = (term2985 A B _37171).
Proof. exact (eq_refl (term2985 A B _37171)). Qed.
Lemma lem3520837 {A B : Type'} (_37171 : type171 A B) (x : type170 A B) : (term3112 A B _37171 x) = (term3113 A B _37171 x).
Proof. exact (MK_COMB (@lem3520836 A B _37171) (@lem3520835 A B _37171 x)). Qed.
Lemma lem3520838 {A B : Type'} (_37171 : type171 A B) : (term3114 A B _37171) = (term3115 A B _37171).
Proof. exact (fun_ext (fun x : type170 A B => @lem3520837 A B _37171 x)). Qed.
Lemma lem3520839 {A B : Type'} : (@ex (((A -> Prop) -> Prop) -> ((A -> Prop) -> B -> Prop) -> ((A -> Prop) -> Prop) -> (A -> Prop) -> A -> Prop)) = (@ex (((A -> Prop) -> Prop) -> ((A -> Prop) -> B -> Prop) -> ((A -> Prop) -> Prop) -> (A -> Prop) -> A -> Prop)).
Proof. exact (eq_refl (@ex (((A -> Prop) -> Prop) -> ((A -> Prop) -> B -> Prop) -> ((A -> Prop) -> Prop) -> (A -> Prop) -> A -> Prop))). Qed.
Lemma lem3520840 {A B : Type'} (_37171 : type171 A B) : (term3106 A B _37171) = (term3116 A B _37171).
Proof. exact (MK_COMB (@lem3520839 A B) (@lem3520838 A B _37171)). Qed.
Lemma lem3520841 {A B : Type'} (_37171 : type171 A B) : ((term3105 A B _37171) = (term3106 A B _37171)) = ((term3102 A B _37171) = (term3116 A B _37171)).
Proof. exact (MK_COMB (@lem3520834 A B _37171) (@lem3520840 A B _37171)). Qed.
Lemma lem3520842 {A B : Type'} (_37171 : type171 A B) : (term3102 A B _37171) = (term3116 A B _37171).
Proof. exact (EQ_MP (@lem3520841 A B _37171) (@lem3520826 A B _37171)). Qed.
Lemma lem3520843 {A B : Type'} (_37171 : type171 A B) : (term2989 A B _37171) = (term3116 A B _37171).
Proof. exact (TRANS (@lem3520822 A B _37171) (@lem3520842 A B _37171)). Qed.
Lemma lem3520844 {A B : Type'} (_37171 : type171 A B) : (term2897 A B _37171) = (term3116 A B _37171).
Proof. exact (TRANS (@lem3520664 A B _37171) (@lem3520843 A B _37171)). Qed.
Lemma lem3520845 {A B : Type'} (_37171 : type171 A B) : (term2867 A B _37171) = (term3116 A B _37171).
Proof. exact (TRANS (@lem3520068 A B _37171) (@lem3520844 A B _37171)). Qed.
Lemma lem3520846 {A B : Type'} (_37171 : type171 A B) (h1 : term2867 A B _37171) : term3116 A B _37171.
Proof. exact (EQ_MP (@lem3520845 A B _37171) (@lem3520010 A B _37171 h1)). Qed.
Lemma lem3520850 {_90724 A : Type'} (GEN_PVAR_84 : A -> Prop) (u : type686 A) (f : type862 _90724 A) (t : type686 A) (x : A -> Prop) : (term2037 _90724 A GEN_PVAR_84 u f t x) = (term2037 _90724 A GEN_PVAR_84 u f t x).
Proof. exact (eq_refl (term2037 _90724 A GEN_PVAR_84 u f t x)). Qed.
Lemma lem3520851 {A : Type'} (P : type686 A) : (term2872 A P) = (term209 A P).
Proof. exact (@lem18394 (A -> Prop) P). Qed.
Lemma lem3520852 {_90724 A : Type'} (GEN_PVAR_84 : A -> Prop) (u : type686 A) (f : type862 _90724 A) (t : type686 A) : (term3117 _90724 A GEN_PVAR_84 u f t) = (term3118 _90724 A GEN_PVAR_84 u f t).
Proof. exact (@lem3520851 A (term2038 _90724 A GEN_PVAR_84 u f t)). Qed.
Lemma lem3520853 {_90724 A : Type'} (GEN_PVAR_84 : A -> Prop) (u : type686 A) (f : type862 _90724 A) (t : type686 A) (x : A -> Prop) : (term3119 _90724 A GEN_PVAR_84 u f t x) = (term2037 _90724 A GEN_PVAR_84 u f t x).
Proof. exact (eq_refl (term3119 _90724 A GEN_PVAR_84 u f t x)). Qed.
Lemma lem3520854 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem3520856 {_90724 A : Type'} (GEN_PVAR_84 : A -> Prop) (u : type686 A) (f : type862 _90724 A) (t : type686 A) (x : A -> Prop) : (term3120 _90724 A GEN_PVAR_84 u f t x) = (term3121 _90724 A GEN_PVAR_84 u f t x).
Proof. exact (MK_COMB (@lem3520854) (@lem3520853 _90724 A GEN_PVAR_84 u f t x)). Qed.
Lemma lem3520857 {_90724 A : Type'} (GEN_PVAR_84 : A -> Prop) (u : type686 A) (f : type862 _90724 A) (t : type686 A) : (term3122 _90724 A GEN_PVAR_84 u f t) = (term3123 _90724 A GEN_PVAR_84 u f t).
Proof. exact (fun_ext (fun x : A -> Prop => @lem3520856 _90724 A GEN_PVAR_84 u f t x)). Qed.
Lemma lem3520858 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem3520859 {_90724 A : Type'} (GEN_PVAR_84 : A -> Prop) (u : type686 A) (f : type862 _90724 A) (t : type686 A) : (term3118 _90724 A GEN_PVAR_84 u f t) = (term3124 _90724 A GEN_PVAR_84 u f t).
Proof. exact (MK_COMB (@lem3520858 A) (@lem3520857 _90724 A GEN_PVAR_84 u f t)). Qed.
Lemma lem3520860 {_90724 A : Type'} (GEN_PVAR_84 : A -> Prop) (u : type686 A) (f : type862 _90724 A) (t : type686 A) : (term3117 _90724 A GEN_PVAR_84 u f t) = (term3124 _90724 A GEN_PVAR_84 u f t).
Proof. exact (TRANS (@lem3520852 _90724 A GEN_PVAR_84 u f t) (@lem3520859 _90724 A GEN_PVAR_84 u f t)). Qed.
Lemma lem3520861 {_90724 A : Type'} (GEN_PVAR_84 : A -> Prop) (u : type686 A) (f : type862 _90724 A) (t : type686 A) : (term2038 _90724 A GEN_PVAR_84 u f t) = (term2038 _90724 A GEN_PVAR_84 u f t).
Proof. exact (fun_ext (fun x : A -> Prop => @lem3520850 _90724 A GEN_PVAR_84 u f t x)). Qed.
Lemma lem3520862 {A : Type'} : (@ex (A -> Prop)) = (@ex (A -> Prop)).
Proof. exact (eq_refl (@ex (A -> Prop))). Qed.
Lemma lem3520863 {_90724 A : Type'} (GEN_PVAR_84 : A -> Prop) (u : type686 A) (f : type862 _90724 A) (t : type686 A) : (term2039 _90724 A GEN_PVAR_84 u f t) = (term2039 _90724 A GEN_PVAR_84 u f t).
Proof. exact (MK_COMB (@lem3520862 A) (@lem3520861 _90724 A GEN_PVAR_84 u f t)). Qed.
Lemma lem3520865 {_90724 A : Type'} (_37170 : type235 _90724 A) (u : type686 A) (f : type862 _90724 A) (t : type686 A) (GEN_PVAR_84 : A -> Prop) : (term3125 _90724 A _37170 u f t GEN_PVAR_84) = (term3125 _90724 A _37170 u f t GEN_PVAR_84).
Proof. exact (eq_refl (term3125 _90724 A _37170 u f t GEN_PVAR_84)). Qed.
Lemma lem3520866 {_90724 A : Type'} (_37170 : type235 _90724 A) (GEN_PVAR_84 : A -> Prop) (u : type686 A) (f : type862 _90724 A) (t : type686 A) : (term3126 _90724 A _37170 GEN_PVAR_84 u f t) = (term3126 _90724 A _37170 GEN_PVAR_84 u f t).
Proof. exact (MK_COMB (@lem3520865 _90724 A _37170 u f t GEN_PVAR_84) (@lem3520863 _90724 A GEN_PVAR_84 u f t)). Qed.
Lemma lem3520868 {_90724 A : Type'} (_37170 : type235 _90724 A) (u : type686 A) (f : type862 _90724 A) (t : type686 A) (GEN_PVAR_84 : A -> Prop) : (term3127 _90724 A _37170 u f t GEN_PVAR_84) = (term3127 _90724 A _37170 u f t GEN_PVAR_84).
Proof. exact (eq_refl (term3127 _90724 A _37170 u f t GEN_PVAR_84)). Qed.
Lemma lem3520869 {_90724 A : Type'} (_37170 : type235 _90724 A) (GEN_PVAR_84 : A -> Prop) (u : type686 A) (f : type862 _90724 A) (t : type686 A) : (term3128 _90724 A _37170 GEN_PVAR_84 u f t) = (term3129 _90724 A _37170 GEN_PVAR_84 u f t).
Proof. exact (MK_COMB (@lem3520868 _90724 A _37170 u f t GEN_PVAR_84) (@lem3520860 _90724 A GEN_PVAR_84 u f t)). Qed.
Lemma lem3520870 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem3520871 {_90724 A : Type'} (_37170 : type235 _90724 A) (GEN_PVAR_84 : A -> Prop) (u : type686 A) (f : type862 _90724 A) (t : type686 A) : (term3130 _90724 A _37170 GEN_PVAR_84 u f t) = (term3131 _90724 A _37170 GEN_PVAR_84 u f t).
Proof. exact (MK_COMB (@lem3520870) (@lem3520869 _90724 A _37170 GEN_PVAR_84 u f t)). Qed.
Lemma lem3520872 {_90724 A : Type'} (_37170 : type235 _90724 A) (GEN_PVAR_84 : A -> Prop) (u : type686 A) (f : type862 _90724 A) (t : type686 A) : (term3132 _90724 A _37170 GEN_PVAR_84 u f t) = (term3133 _90724 A _37170 GEN_PVAR_84 u f t).
Proof. exact (MK_COMB (@lem3520871 _90724 A _37170 GEN_PVAR_84 u f t) (@lem3520866 _90724 A _37170 GEN_PVAR_84 u f t)). Qed.
Lemma lem3520873 {_90724 A : Type'} (_37170 : type235 _90724 A) (GEN_PVAR_84 : A -> Prop) (u : type686 A) (f : type862 _90724 A) (t : type686 A) : ((_37170 u f t GEN_PVAR_84) = (term2039 _90724 A GEN_PVAR_84 u f t)) = (term3132 _90724 A _37170 GEN_PVAR_84 u f t).
Proof. exact (@lem17784 (_37170 u f t GEN_PVAR_84) (term2039 _90724 A GEN_PVAR_84 u f t)). Qed.
Lemma lem3520874 {_90724 A : Type'} (_37170 : type235 _90724 A) (GEN_PVAR_84 : A -> Prop) (u : type686 A) (f : type862 _90724 A) (t : type686 A) : ((_37170 u f t GEN_PVAR_84) = (term2039 _90724 A GEN_PVAR_84 u f t)) = (term3133 _90724 A _37170 GEN_PVAR_84 u f t).
Proof. exact (TRANS (@lem3520873 _90724 A _37170 GEN_PVAR_84 u f t) (@lem3520872 _90724 A _37170 GEN_PVAR_84 u f t)). Qed.
Lemma lem3520875 {_90724 A : Type'} (_37170 : type235 _90724 A) (u : type686 A) (f : type862 _90724 A) (t : type686 A) : (term2730 _90724 A _37170 u f t) = (term3134 _90724 A _37170 u f t).
Proof. exact (fun_ext (fun GEN_PVAR_84 : A -> Prop => @lem3520874 _90724 A _37170 GEN_PVAR_84 u f t)). Qed.
Lemma lem3520876 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem3520877 {_90724 A : Type'} (_37170 : type235 _90724 A) (u : type686 A) (f : type862 _90724 A) (t : type686 A) : (term2731 _90724 A _37170 u f t) = (term3135 _90724 A _37170 u f t).
Proof. exact (MK_COMB (@lem3520876 A) (@lem3520875 _90724 A _37170 u f t)). Qed.
Lemma lem3520878 {_90724 A : Type'} (_37170 : type235 _90724 A) (u : type686 A) (f : type862 _90724 A) : (term2732 _90724 A _37170 u f) = (term3136 _90724 A _37170 u f).
Proof. exact (fun_ext (fun t : type686 A => @lem3520877 _90724 A _37170 u f t)). Qed.
Lemma lem3520879 {A : Type'} : (@all ((A -> Prop) -> Prop)) = (@all ((A -> Prop) -> Prop)).
Proof. exact (eq_refl (@all ((A -> Prop) -> Prop))). Qed.
Lemma lem3520880 {_90724 A : Type'} (_37170 : type235 _90724 A) (u : type686 A) (f : type862 _90724 A) : (term2733 _90724 A _37170 u f) = (term3137 _90724 A _37170 u f).
Proof. exact (MK_COMB (@lem3520879 A) (@lem3520878 _90724 A _37170 u f)). Qed.
Lemma lem3520881 {_90724 A : Type'} (_37170 : type235 _90724 A) (u : type686 A) : (term2734 _90724 A _37170 u) = (term3138 _90724 A _37170 u).
Proof. exact (fun_ext (fun f : type862 _90724 A => @lem3520880 _90724 A _37170 u f)). Qed.
Lemma lem3520882 {_90724 A : Type'} : (@all ((A -> Prop) -> _90724)) = (@all ((A -> Prop) -> _90724)).
Proof. exact (eq_refl (@all ((A -> Prop) -> _90724))). Qed.
Lemma lem3520883 {_90724 A : Type'} (_37170 : type235 _90724 A) (u : type686 A) : (term2735 _90724 A _37170 u) = (term3139 _90724 A _37170 u).
Proof. exact (MK_COMB (@lem3520882 _90724 A) (@lem3520881 _90724 A _37170 u)). Qed.
Lemma lem3520884 {_90724 A : Type'} (_37170 : type235 _90724 A) : (term2736 _90724 A _37170) = (term3140 _90724 A _37170).
Proof. exact (fun_ext (fun u : type686 A => @lem3520883 _90724 A _37170 u)). Qed.
Lemma lem3520885 {A : Type'} : (@all ((A -> Prop) -> Prop)) = (@all ((A -> Prop) -> Prop)).
Proof. exact (eq_refl (@all ((A -> Prop) -> Prop))). Qed.
Lemma lem3520886 {_90724 A : Type'} (_37170 : type235 _90724 A) : (term2737 _90724 A _37170) = (term3141 _90724 A _37170).
Proof. exact (MK_COMB (@lem3520885 A) (@lem3520884 _90724 A _37170)). Qed.
Lemma lem3520900 {A : Type'} (P : A -> Prop) (Q : A -> Prop) : (term726 A P Q) = (term725 A P Q).
Proof. exact (EQ_MP (@lem18953 A P Q) (@lem18952 A P Q)). Qed.
Lemma lem3520901 {A : Type'} (P : type686 A) (Q : type686 A) : (term2898 A P Q) = (term2899 A P Q).
Proof. exact (@lem3520900 (A -> Prop) P Q). Qed.
Lemma lem3520902 {_90724 A : Type'} (_37170 : type235 _90724 A) (u : type686 A) (f : type862 _90724 A) (t : type686 A) : (term3142 _90724 A _37170 u f t) = (term3143 _90724 A _37170 u f t).
Proof. exact (@lem3520901 A (term3144 _90724 A _37170 u f t) (term3145 _90724 A _37170 u f t)). Qed.
Lemma lem3520903 {_90724 A : Type'} (_37170 : type235 _90724 A) (GEN_PVAR_84 : A -> Prop) (u : type686 A) (f : type862 _90724 A) (t : type686 A) : (term3146 _90724 A _37170 u f t GEN_PVAR_84) = (term3129 _90724 A _37170 GEN_PVAR_84 u f t).
Proof. exact (eq_refl (term3146 _90724 A _37170 u f t GEN_PVAR_84)). Qed.
Lemma lem3520904 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem3520905 {_90724 A : Type'} (_37170 : type235 _90724 A) (GEN_PVAR_84 : A -> Prop) (u : type686 A) (f : type862 _90724 A) (t : type686 A) : (term3147 _90724 A _37170 u f t GEN_PVAR_84) = (term3131 _90724 A _37170 GEN_PVAR_84 u f t).
Proof. exact (MK_COMB (@lem3520904) (@lem3520903 _90724 A _37170 GEN_PVAR_84 u f t)). Qed.
Lemma lem3520906 {_90724 A : Type'} (_37170 : type235 _90724 A) (GEN_PVAR_84 : A -> Prop) (u : type686 A) (f : type862 _90724 A) (t : type686 A) : (term3148 _90724 A _37170 u f t GEN_PVAR_84) = (term3126 _90724 A _37170 GEN_PVAR_84 u f t).
Proof. exact (eq_refl (term3148 _90724 A _37170 u f t GEN_PVAR_84)). Qed.
Lemma lem3520907 {_90724 A : Type'} (_37170 : type235 _90724 A) (GEN_PVAR_84 : A -> Prop) (u : type686 A) (f : type862 _90724 A) (t : type686 A) : (term3149 _90724 A _37170 u f t GEN_PVAR_84) = (term3133 _90724 A _37170 GEN_PVAR_84 u f t).
Proof. exact (MK_COMB (@lem3520905 _90724 A _37170 GEN_PVAR_84 u f t) (@lem3520906 _90724 A _37170 GEN_PVAR_84 u f t)). Qed.
Lemma lem3520908 {_90724 A : Type'} (_37170 : type235 _90724 A) (u : type686 A) (f : type862 _90724 A) (t : type686 A) : (term3150 _90724 A _37170 u f t) = (term3134 _90724 A _37170 u f t).
Proof. exact (fun_ext (fun GEN_PVAR_84 : A -> Prop => @lem3520907 _90724 A _37170 GEN_PVAR_84 u f t)). Qed.
Lemma lem3520909 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem3520910 {_90724 A : Type'} (_37170 : type235 _90724 A) (u : type686 A) (f : type862 _90724 A) (t : type686 A) : (term3142 _90724 A _37170 u f t) = (term3135 _90724 A _37170 u f t).
Proof. exact (MK_COMB (@lem3520909 A) (@lem3520908 _90724 A _37170 u f t)). Qed.
Lemma lem3520911 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem3520912 {_90724 A : Type'} (_37170 : type235 _90724 A) (u : type686 A) (f : type862 _90724 A) (t : type686 A) : (term3151 _90724 A _37170 u f t) = (term3152 _90724 A _37170 u f t).
Proof. exact (MK_COMB (@lem3520911) (@lem3520910 _90724 A _37170 u f t)). Qed.
Lemma lem3520913 {_90724 A : Type'} (_37170 : type235 _90724 A) (GEN_PVAR_84 : A -> Prop) (u : type686 A) (f : type862 _90724 A) (t : type686 A) : (term3146 _90724 A _37170 u f t GEN_PVAR_84) = (term3129 _90724 A _37170 GEN_PVAR_84 u f t).
Proof. exact (eq_refl (term3146 _90724 A _37170 u f t GEN_PVAR_84)). Qed.
Lemma lem3520914 {_90724 A : Type'} (_37170 : type235 _90724 A) (u : type686 A) (f : type862 _90724 A) (t : type686 A) : (term3153 _90724 A _37170 u f t) = (term3144 _90724 A _37170 u f t).
Proof. exact (fun_ext (fun GEN_PVAR_84 : A -> Prop => @lem3520913 _90724 A _37170 GEN_PVAR_84 u f t)). Qed.
Lemma lem3520915 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem3520916 {_90724 A : Type'} (_37170 : type235 _90724 A) (u : type686 A) (f : type862 _90724 A) (t : type686 A) : (term3154 _90724 A _37170 u f t) = (term3155 _90724 A _37170 u f t).
Proof. exact (MK_COMB (@lem3520915 A) (@lem3520914 _90724 A _37170 u f t)). Qed.
Lemma lem3520917 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem3520918 {_90724 A : Type'} (_37170 : type235 _90724 A) (u : type686 A) (f : type862 _90724 A) (t : type686 A) : (term3156 _90724 A _37170 u f t) = (term3157 _90724 A _37170 u f t).
Proof. exact (MK_COMB (@lem3520917) (@lem3520916 _90724 A _37170 u f t)). Qed.
Lemma lem3520919 {_90724 A : Type'} (_37170 : type235 _90724 A) (GEN_PVAR_84 : A -> Prop) (u : type686 A) (f : type862 _90724 A) (t : type686 A) : (term3148 _90724 A _37170 u f t GEN_PVAR_84) = (term3126 _90724 A _37170 GEN_PVAR_84 u f t).
Proof. exact (eq_refl (term3148 _90724 A _37170 u f t GEN_PVAR_84)). Qed.
Lemma lem3520920 {_90724 A : Type'} (_37170 : type235 _90724 A) (u : type686 A) (f : type862 _90724 A) (t : type686 A) : (term3158 _90724 A _37170 u f t) = (term3145 _90724 A _37170 u f t).
Proof. exact (fun_ext (fun GEN_PVAR_84 : A -> Prop => @lem3520919 _90724 A _37170 GEN_PVAR_84 u f t)). Qed.
Lemma lem3520921 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem3520922 {_90724 A : Type'} (_37170 : type235 _90724 A) (u : type686 A) (f : type862 _90724 A) (t : type686 A) : (term3159 _90724 A _37170 u f t) = (term3160 _90724 A _37170 u f t).
Proof. exact (MK_COMB (@lem3520921 A) (@lem3520920 _90724 A _37170 u f t)). Qed.
Lemma lem3520923 {_90724 A : Type'} (_37170 : type235 _90724 A) (u : type686 A) (f : type862 _90724 A) (t : type686 A) : (term3143 _90724 A _37170 u f t) = (term3161 _90724 A _37170 u f t).
Proof. exact (MK_COMB (@lem3520918 _90724 A _37170 u f t) (@lem3520922 _90724 A _37170 u f t)). Qed.
Lemma lem3520924 {_90724 A : Type'} (_37170 : type235 _90724 A) (u : type686 A) (f : type862 _90724 A) (t : type686 A) : ((term3142 _90724 A _37170 u f t) = (term3143 _90724 A _37170 u f t)) = ((term3135 _90724 A _37170 u f t) = (term3161 _90724 A _37170 u f t)).
Proof. exact (MK_COMB (@lem3520912 _90724 A _37170 u f t) (@lem3520923 _90724 A _37170 u f t)). Qed.
Lemma lem3520925 {_90724 A : Type'} (_37170 : type235 _90724 A) (u : type686 A) (f : type862 _90724 A) (t : type686 A) : (term3135 _90724 A _37170 u f t) = (term3161 _90724 A _37170 u f t).
Proof. exact (EQ_MP (@lem3520924 _90724 A _37170 u f t) (@lem3520902 _90724 A _37170 u f t)). Qed.
Lemma lem3521030 {_90724 A : Type'} (_37170 : type235 _90724 A) (u : type686 A) (f : type862 _90724 A) : (term3136 _90724 A _37170 u f) = (term3162 _90724 A _37170 u f).
Proof. exact (fun_ext (fun t : type686 A => @lem3520925 _90724 A _37170 u f t)). Qed.
Lemma lem3521031 {A : Type'} : (@all ((A -> Prop) -> Prop)) = (@all ((A -> Prop) -> Prop)).
Proof. exact (eq_refl (@all ((A -> Prop) -> Prop))). Qed.
Lemma lem3521032 {_90724 A : Type'} (_37170 : type235 _90724 A) (u : type686 A) (f : type862 _90724 A) : (term3137 _90724 A _37170 u f) = (term3163 _90724 A _37170 u f).
Proof. exact (MK_COMB (@lem3521031 A) (@lem3521030 _90724 A _37170 u f)). Qed.
Lemma lem3521034 {A : Type'} (P : A -> Prop) (Q : A -> Prop) : (term726 A P Q) = (term725 A P Q).
Proof. exact (EQ_MP (@lem18953 A P Q) (@lem18952 A P Q)). Qed.
Lemma lem3521035 {A : Type'} (P : type180 A) (Q : type180 A) : (term2922 A P Q) = (term2923 A P Q).
Proof. exact (@lem3521034 (type686 A) P Q). Qed.
Lemma lem3521036 {_90724 A : Type'} (_37170 : type235 _90724 A) (u : type686 A) (f : type862 _90724 A) : (term3164 _90724 A _37170 u f) = (term3165 _90724 A _37170 u f).
Proof. exact (@lem3521035 A (term3166 _90724 A _37170 u f) (term3167 _90724 A _37170 u f)). Qed.
Lemma lem3521037 {_90724 A : Type'} (_37170 : type235 _90724 A) (u : type686 A) (f : type862 _90724 A) (t : type686 A) : (term3168 _90724 A _37170 u f t) = (term3155 _90724 A _37170 u f t).
Proof. exact (eq_refl (term3168 _90724 A _37170 u f t)). Qed.
Lemma lem3521038 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem3521039 {_90724 A : Type'} (_37170 : type235 _90724 A) (u : type686 A) (f : type862 _90724 A) (t : type686 A) : (term3169 _90724 A _37170 u f t) = (term3157 _90724 A _37170 u f t).
Proof. exact (MK_COMB (@lem3521038) (@lem3521037 _90724 A _37170 u f t)). Qed.
Lemma lem3521040 {_90724 A : Type'} (_37170 : type235 _90724 A) (u : type686 A) (f : type862 _90724 A) (t : type686 A) : (term3170 _90724 A _37170 u f t) = (term3160 _90724 A _37170 u f t).
Proof. exact (eq_refl (term3170 _90724 A _37170 u f t)). Qed.
Lemma lem3521041 {_90724 A : Type'} (_37170 : type235 _90724 A) (u : type686 A) (f : type862 _90724 A) (t : type686 A) : (term3171 _90724 A _37170 u f t) = (term3161 _90724 A _37170 u f t).
Proof. exact (MK_COMB (@lem3521039 _90724 A _37170 u f t) (@lem3521040 _90724 A _37170 u f t)). Qed.
Lemma lem3521042 {_90724 A : Type'} (_37170 : type235 _90724 A) (u : type686 A) (f : type862 _90724 A) : (term3172 _90724 A _37170 u f) = (term3162 _90724 A _37170 u f).
Proof. exact (fun_ext (fun t : type686 A => @lem3521041 _90724 A _37170 u f t)). Qed.
Lemma lem3521043 {A : Type'} : (@all ((A -> Prop) -> Prop)) = (@all ((A -> Prop) -> Prop)).
Proof. exact (eq_refl (@all ((A -> Prop) -> Prop))). Qed.
Lemma lem3521044 {_90724 A : Type'} (_37170 : type235 _90724 A) (u : type686 A) (f : type862 _90724 A) : (term3164 _90724 A _37170 u f) = (term3163 _90724 A _37170 u f).
Proof. exact (MK_COMB (@lem3521043 A) (@lem3521042 _90724 A _37170 u f)). Qed.
Lemma lem3521045 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem3521046 {_90724 A : Type'} (_37170 : type235 _90724 A) (u : type686 A) (f : type862 _90724 A) : (term3173 _90724 A _37170 u f) = (term3174 _90724 A _37170 u f).
Proof. exact (MK_COMB (@lem3521045) (@lem3521044 _90724 A _37170 u f)). Qed.
Lemma lem3521047 {_90724 A : Type'} (_37170 : type235 _90724 A) (u : type686 A) (f : type862 _90724 A) (t : type686 A) : (term3168 _90724 A _37170 u f t) = (term3155 _90724 A _37170 u f t).
Proof. exact (eq_refl (term3168 _90724 A _37170 u f t)). Qed.
Lemma lem3521048 {_90724 A : Type'} (_37170 : type235 _90724 A) (u : type686 A) (f : type862 _90724 A) : (term3175 _90724 A _37170 u f) = (term3166 _90724 A _37170 u f).
Proof. exact (fun_ext (fun t : type686 A => @lem3521047 _90724 A _37170 u f t)). Qed.
Lemma lem3521049 {A : Type'} : (@all ((A -> Prop) -> Prop)) = (@all ((A -> Prop) -> Prop)).
Proof. exact (eq_refl (@all ((A -> Prop) -> Prop))). Qed.
Lemma lem3521050 {_90724 A : Type'} (_37170 : type235 _90724 A) (u : type686 A) (f : type862 _90724 A) : (term3176 _90724 A _37170 u f) = (term3177 _90724 A _37170 u f).
Proof. exact (MK_COMB (@lem3521049 A) (@lem3521048 _90724 A _37170 u f)). Qed.
Lemma lem3521051 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem3521052 {_90724 A : Type'} (_37170 : type235 _90724 A) (u : type686 A) (f : type862 _90724 A) : (term3178 _90724 A _37170 u f) = (term3179 _90724 A _37170 u f).
Proof. exact (MK_COMB (@lem3521051) (@lem3521050 _90724 A _37170 u f)). Qed.
Lemma lem3521053 {_90724 A : Type'} (_37170 : type235 _90724 A) (u : type686 A) (f : type862 _90724 A) (t : type686 A) : (term3170 _90724 A _37170 u f t) = (term3160 _90724 A _37170 u f t).
Proof. exact (eq_refl (term3170 _90724 A _37170 u f t)). Qed.
Lemma lem3521054 {_90724 A : Type'} (_37170 : type235 _90724 A) (u : type686 A) (f : type862 _90724 A) : (term3180 _90724 A _37170 u f) = (term3167 _90724 A _37170 u f).
Proof. exact (fun_ext (fun t : type686 A => @lem3521053 _90724 A _37170 u f t)). Qed.
Lemma lem3521055 {A : Type'} : (@all ((A -> Prop) -> Prop)) = (@all ((A -> Prop) -> Prop)).
Proof. exact (eq_refl (@all ((A -> Prop) -> Prop))). Qed.
Lemma lem3521056 {_90724 A : Type'} (_37170 : type235 _90724 A) (u : type686 A) (f : type862 _90724 A) : (term3181 _90724 A _37170 u f) = (term3182 _90724 A _37170 u f).
Proof. exact (MK_COMB (@lem3521055 A) (@lem3521054 _90724 A _37170 u f)). Qed.
Lemma lem3521057 {_90724 A : Type'} (_37170 : type235 _90724 A) (u : type686 A) (f : type862 _90724 A) : (term3165 _90724 A _37170 u f) = (term3183 _90724 A _37170 u f).
Proof. exact (MK_COMB (@lem3521052 _90724 A _37170 u f) (@lem3521056 _90724 A _37170 u f)). Qed.
Lemma lem3521058 {_90724 A : Type'} (_37170 : type235 _90724 A) (u : type686 A) (f : type862 _90724 A) : ((term3164 _90724 A _37170 u f) = (term3165 _90724 A _37170 u f)) = ((term3163 _90724 A _37170 u f) = (term3183 _90724 A _37170 u f)).
Proof. exact (MK_COMB (@lem3521046 _90724 A _37170 u f) (@lem3521057 _90724 A _37170 u f)). Qed.
Lemma lem3521059 {_90724 A : Type'} (_37170 : type235 _90724 A) (u : type686 A) (f : type862 _90724 A) : (term3163 _90724 A _37170 u f) = (term3183 _90724 A _37170 u f).
Proof. exact (EQ_MP (@lem3521058 _90724 A _37170 u f) (@lem3521036 _90724 A _37170 u f)). Qed.
Lemma lem3521172 {_90724 A : Type'} (_37170 : type235 _90724 A) (u : type686 A) (f : type862 _90724 A) : (term3137 _90724 A _37170 u f) = (term3183 _90724 A _37170 u f).
Proof. exact (TRANS (@lem3521032 _90724 A _37170 u f) (@lem3521059 _90724 A _37170 u f)). Qed.
Lemma lem3521173 {_90724 A : Type'} (_37170 : type235 _90724 A) (u : type686 A) : (term3138 _90724 A _37170 u) = (term3184 _90724 A _37170 u).
Proof. exact (fun_ext (fun f : type862 _90724 A => @lem3521172 _90724 A _37170 u f)). Qed.
Lemma lem3521174 {_90724 A : Type'} : (@all ((A -> Prop) -> _90724)) = (@all ((A -> Prop) -> _90724)).
Proof. exact (eq_refl (@all ((A -> Prop) -> _90724))). Qed.
Lemma lem3521175 {_90724 A : Type'} (_37170 : type235 _90724 A) (u : type686 A) : (term3139 _90724 A _37170 u) = (term3185 _90724 A _37170 u).
Proof. exact (MK_COMB (@lem3521174 _90724 A) (@lem3521173 _90724 A _37170 u)). Qed.
Lemma lem3521177 {A : Type'} (P : A -> Prop) (Q : A -> Prop) : (term726 A P Q) = (term725 A P Q).
Proof. exact (EQ_MP (@lem18953 A P Q) (@lem18952 A P Q)). Qed.
Lemma lem3521178 {_90724 A : Type'} (P : type230 _90724 A) (Q : type230 _90724 A) : (term3186 _90724 A P Q) = (term3187 _90724 A P Q).
Proof. exact (@lem3521177 (type862 _90724 A) P Q). Qed.
Lemma lem3521179 {_90724 A : Type'} (_37170 : type235 _90724 A) (u : type686 A) : (term3188 _90724 A _37170 u) = (term3189 _90724 A _37170 u).
Proof. exact (@lem3521178 _90724 A (term3190 _90724 A _37170 u) (term3191 _90724 A _37170 u)). Qed.
Lemma lem3521180 {_90724 A : Type'} (_37170 : type235 _90724 A) (u : type686 A) (f : type862 _90724 A) : (term3192 _90724 A _37170 u f) = (term3177 _90724 A _37170 u f).
Proof. exact (eq_refl (term3192 _90724 A _37170 u f)). Qed.
Lemma lem3521181 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem3521182 {_90724 A : Type'} (_37170 : type235 _90724 A) (u : type686 A) (f : type862 _90724 A) : (term3193 _90724 A _37170 u f) = (term3179 _90724 A _37170 u f).
Proof. exact (MK_COMB (@lem3521181) (@lem3521180 _90724 A _37170 u f)). Qed.
Lemma lem3521183 {_90724 A : Type'} (_37170 : type235 _90724 A) (u : type686 A) (f : type862 _90724 A) : (term3194 _90724 A _37170 u f) = (term3182 _90724 A _37170 u f).
Proof. exact (eq_refl (term3194 _90724 A _37170 u f)). Qed.
Lemma lem3521184 {_90724 A : Type'} (_37170 : type235 _90724 A) (u : type686 A) (f : type862 _90724 A) : (term3195 _90724 A _37170 u f) = (term3183 _90724 A _37170 u f).
Proof. exact (MK_COMB (@lem3521182 _90724 A _37170 u f) (@lem3521183 _90724 A _37170 u f)). Qed.
Lemma lem3521185 {_90724 A : Type'} (_37170 : type235 _90724 A) (u : type686 A) : (term3196 _90724 A _37170 u) = (term3184 _90724 A _37170 u).
Proof. exact (fun_ext (fun f : type862 _90724 A => @lem3521184 _90724 A _37170 u f)). Qed.
Lemma lem3521186 {_90724 A : Type'} : (@all ((A -> Prop) -> _90724)) = (@all ((A -> Prop) -> _90724)).
Proof. exact (eq_refl (@all ((A -> Prop) -> _90724))). Qed.
Lemma lem3521187 {_90724 A : Type'} (_37170 : type235 _90724 A) (u : type686 A) : (term3188 _90724 A _37170 u) = (term3185 _90724 A _37170 u).
Proof. exact (MK_COMB (@lem3521186 _90724 A) (@lem3521185 _90724 A _37170 u)). Qed.
Lemma lem3521188 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem3521189 {_90724 A : Type'} (_37170 : type235 _90724 A) (u : type686 A) : (term3197 _90724 A _37170 u) = (term3198 _90724 A _37170 u).
Proof. exact (MK_COMB (@lem3521188) (@lem3521187 _90724 A _37170 u)). Qed.
Lemma lem3521190 {_90724 A : Type'} (_37170 : type235 _90724 A) (u : type686 A) (f : type862 _90724 A) : (term3192 _90724 A _37170 u f) = (term3177 _90724 A _37170 u f).
Proof. exact (eq_refl (term3192 _90724 A _37170 u f)). Qed.
Lemma lem3521191 {_90724 A : Type'} (_37170 : type235 _90724 A) (u : type686 A) : (term3199 _90724 A _37170 u) = (term3190 _90724 A _37170 u).
Proof. exact (fun_ext (fun f : type862 _90724 A => @lem3521190 _90724 A _37170 u f)). Qed.
Lemma lem3521192 {_90724 A : Type'} : (@all ((A -> Prop) -> _90724)) = (@all ((A -> Prop) -> _90724)).
Proof. exact (eq_refl (@all ((A -> Prop) -> _90724))). Qed.
Lemma lem3521193 {_90724 A : Type'} (_37170 : type235 _90724 A) (u : type686 A) : (term3200 _90724 A _37170 u) = (term3201 _90724 A _37170 u).
Proof. exact (MK_COMB (@lem3521192 _90724 A) (@lem3521191 _90724 A _37170 u)). Qed.
Lemma lem3521194 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem3521195 {_90724 A : Type'} (_37170 : type235 _90724 A) (u : type686 A) : (term3202 _90724 A _37170 u) = (term3203 _90724 A _37170 u).
Proof. exact (MK_COMB (@lem3521194) (@lem3521193 _90724 A _37170 u)). Qed.
Lemma lem3521196 {_90724 A : Type'} (_37170 : type235 _90724 A) (u : type686 A) (f : type862 _90724 A) : (term3194 _90724 A _37170 u f) = (term3182 _90724 A _37170 u f).
Proof. exact (eq_refl (term3194 _90724 A _37170 u f)). Qed.
Lemma lem3521197 {_90724 A : Type'} (_37170 : type235 _90724 A) (u : type686 A) : (term3204 _90724 A _37170 u) = (term3191 _90724 A _37170 u).
Proof. exact (fun_ext (fun f : type862 _90724 A => @lem3521196 _90724 A _37170 u f)). Qed.
Lemma lem3521198 {_90724 A : Type'} : (@all ((A -> Prop) -> _90724)) = (@all ((A -> Prop) -> _90724)).
Proof. exact (eq_refl (@all ((A -> Prop) -> _90724))). Qed.
Lemma lem3521199 {_90724 A : Type'} (_37170 : type235 _90724 A) (u : type686 A) : (term3205 _90724 A _37170 u) = (term3206 _90724 A _37170 u).
Proof. exact (MK_COMB (@lem3521198 _90724 A) (@lem3521197 _90724 A _37170 u)). Qed.
Lemma lem3521200 {_90724 A : Type'} (_37170 : type235 _90724 A) (u : type686 A) : (term3189 _90724 A _37170 u) = (term3207 _90724 A _37170 u).
Proof. exact (MK_COMB (@lem3521195 _90724 A _37170 u) (@lem3521199 _90724 A _37170 u)). Qed.
Lemma lem3521201 {_90724 A : Type'} (_37170 : type235 _90724 A) (u : type686 A) : ((term3188 _90724 A _37170 u) = (term3189 _90724 A _37170 u)) = ((term3185 _90724 A _37170 u) = (term3207 _90724 A _37170 u)).
Proof. exact (MK_COMB (@lem3521189 _90724 A _37170 u) (@lem3521200 _90724 A _37170 u)). Qed.
Lemma lem3521202 {_90724 A : Type'} (_37170 : type235 _90724 A) (u : type686 A) : (term3185 _90724 A _37170 u) = (term3207 _90724 A _37170 u).
Proof. exact (EQ_MP (@lem3521201 _90724 A _37170 u) (@lem3521179 _90724 A _37170 u)). Qed.
Lemma lem3521323 {_90724 A : Type'} (_37170 : type235 _90724 A) (u : type686 A) : (term3139 _90724 A _37170 u) = (term3207 _90724 A _37170 u).
Proof. exact (TRANS (@lem3521175 _90724 A _37170 u) (@lem3521202 _90724 A _37170 u)). Qed.
Lemma lem3521324 {_90724 A : Type'} (_37170 : type235 _90724 A) : (term3140 _90724 A _37170) = (term3208 _90724 A _37170).
Proof. exact (fun_ext (fun u : type686 A => @lem3521323 _90724 A _37170 u)). Qed.
Lemma lem3521325 {A : Type'} : (@all ((A -> Prop) -> Prop)) = (@all ((A -> Prop) -> Prop)).
Proof. exact (eq_refl (@all ((A -> Prop) -> Prop))). Qed.
Lemma lem3521326 {_90724 A : Type'} (_37170 : type235 _90724 A) : (term3141 _90724 A _37170) = (term3209 _90724 A _37170).
Proof. exact (MK_COMB (@lem3521325 A) (@lem3521324 _90724 A _37170)). Qed.
Lemma lem3521328 {A : Type'} (P : A -> Prop) (Q : A -> Prop) : (term726 A P Q) = (term725 A P Q).
Proof. exact (EQ_MP (@lem18953 A P Q) (@lem18952 A P Q)). Qed.
Lemma lem3521329 {A : Type'} (P : type180 A) (Q : type180 A) : (term2922 A P Q) = (term2923 A P Q).
Proof. exact (@lem3521328 (type686 A) P Q). Qed.
Lemma lem3521330 {_90724 A : Type'} (_37170 : type235 _90724 A) : (term3210 _90724 A _37170) = (term3211 _90724 A _37170).
Proof. exact (@lem3521329 A (term3212 _90724 A _37170) (term3213 _90724 A _37170)). Qed.
Lemma lem3521331 {_90724 A : Type'} (_37170 : type235 _90724 A) (u : type686 A) : (term3214 _90724 A _37170 u) = (term3201 _90724 A _37170 u).
Proof. exact (eq_refl (term3214 _90724 A _37170 u)). Qed.
Lemma lem3521332 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem3521333 {_90724 A : Type'} (_37170 : type235 _90724 A) (u : type686 A) : (term3215 _90724 A _37170 u) = (term3203 _90724 A _37170 u).
Proof. exact (MK_COMB (@lem3521332) (@lem3521331 _90724 A _37170 u)). Qed.
Lemma lem3521334 {_90724 A : Type'} (_37170 : type235 _90724 A) (u : type686 A) : (term3216 _90724 A _37170 u) = (term3206 _90724 A _37170 u).
Proof. exact (eq_refl (term3216 _90724 A _37170 u)). Qed.
Lemma lem3521335 {_90724 A : Type'} (_37170 : type235 _90724 A) (u : type686 A) : (term3217 _90724 A _37170 u) = (term3207 _90724 A _37170 u).
Proof. exact (MK_COMB (@lem3521333 _90724 A _37170 u) (@lem3521334 _90724 A _37170 u)). Qed.
Lemma lem3521336 {_90724 A : Type'} (_37170 : type235 _90724 A) : (term3218 _90724 A _37170) = (term3208 _90724 A _37170).
Proof. exact (fun_ext (fun u : type686 A => @lem3521335 _90724 A _37170 u)). Qed.
Lemma lem3521337 {A : Type'} : (@all ((A -> Prop) -> Prop)) = (@all ((A -> Prop) -> Prop)).
Proof. exact (eq_refl (@all ((A -> Prop) -> Prop))). Qed.
Lemma lem3521338 {_90724 A : Type'} (_37170 : type235 _90724 A) : (term3210 _90724 A _37170) = (term3209 _90724 A _37170).
Proof. exact (MK_COMB (@lem3521337 A) (@lem3521336 _90724 A _37170)). Qed.
Lemma lem3521339 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem3521340 {_90724 A : Type'} (_37170 : type235 _90724 A) : (term3219 _90724 A _37170) = (term3220 _90724 A _37170).
Proof. exact (MK_COMB (@lem3521339) (@lem3521338 _90724 A _37170)). Qed.
Lemma lem3521341 {_90724 A : Type'} (_37170 : type235 _90724 A) (u : type686 A) : (term3214 _90724 A _37170 u) = (term3201 _90724 A _37170 u).
Proof. exact (eq_refl (term3214 _90724 A _37170 u)). Qed.
Lemma lem3521342 {_90724 A : Type'} (_37170 : type235 _90724 A) : (term3221 _90724 A _37170) = (term3212 _90724 A _37170).
Proof. exact (fun_ext (fun u : type686 A => @lem3521341 _90724 A _37170 u)). Qed.
Lemma lem3521343 {A : Type'} : (@all ((A -> Prop) -> Prop)) = (@all ((A -> Prop) -> Prop)).
Proof. exact (eq_refl (@all ((A -> Prop) -> Prop))). Qed.
Lemma lem3521344 {_90724 A : Type'} (_37170 : type235 _90724 A) : (term3222 _90724 A _37170) = (term3223 _90724 A _37170).
Proof. exact (MK_COMB (@lem3521343 A) (@lem3521342 _90724 A _37170)). Qed.
Lemma lem3521345 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem3521346 {_90724 A : Type'} (_37170 : type235 _90724 A) : (term3224 _90724 A _37170) = (term3225 _90724 A _37170).
Proof. exact (MK_COMB (@lem3521345) (@lem3521344 _90724 A _37170)). Qed.
Lemma lem3521347 {_90724 A : Type'} (_37170 : type235 _90724 A) (u : type686 A) : (term3216 _90724 A _37170 u) = (term3206 _90724 A _37170 u).
Proof. exact (eq_refl (term3216 _90724 A _37170 u)). Qed.
Lemma lem3521348 {_90724 A : Type'} (_37170 : type235 _90724 A) : (term3226 _90724 A _37170) = (term3213 _90724 A _37170).
Proof. exact (fun_ext (fun u : type686 A => @lem3521347 _90724 A _37170 u)). Qed.
Lemma lem3521349 {A : Type'} : (@all ((A -> Prop) -> Prop)) = (@all ((A -> Prop) -> Prop)).
Proof. exact (eq_refl (@all ((A -> Prop) -> Prop))). Qed.
Lemma lem3521350 {_90724 A : Type'} (_37170 : type235 _90724 A) : (term3227 _90724 A _37170) = (term3228 _90724 A _37170).
Proof. exact (MK_COMB (@lem3521349 A) (@lem3521348 _90724 A _37170)). Qed.
Lemma lem3521351 {_90724 A : Type'} (_37170 : type235 _90724 A) : (term3211 _90724 A _37170) = (term3229 _90724 A _37170).
Proof. exact (MK_COMB (@lem3521346 _90724 A _37170) (@lem3521350 _90724 A _37170)). Qed.
Lemma lem3521352 {_90724 A : Type'} (_37170 : type235 _90724 A) : ((term3210 _90724 A _37170) = (term3211 _90724 A _37170)) = ((term3209 _90724 A _37170) = (term3229 _90724 A _37170)).
Proof. exact (MK_COMB (@lem3521340 _90724 A _37170) (@lem3521351 _90724 A _37170)). Qed.
Lemma lem3521353 {_90724 A : Type'} (_37170 : type235 _90724 A) : (term3209 _90724 A _37170) = (term3229 _90724 A _37170).
Proof. exact (EQ_MP (@lem3521352 _90724 A _37170) (@lem3521330 _90724 A _37170)). Qed.
Lemma lem3521482 {_90724 A : Type'} (_37170 : type235 _90724 A) : (term3141 _90724 A _37170) = (term3229 _90724 A _37170).
Proof. exact (TRANS (@lem3521326 _90724 A _37170) (@lem3521353 _90724 A _37170)). Qed.
Lemma lem3521484 {A : Type'} (P : Prop) (Q : A -> Prop) : (term434 A P Q) = (term435 A P Q).
Proof. exact (EQ_MP (@lem18911 A P Q) (@lem18910 A P Q)). Qed.
Lemma lem3521485 {A : Type'} (P : Prop) (Q : type686 A) : (term436 A P Q) = (term437 A P Q).
Proof. exact (@lem3521484 (A -> Prop) P Q). Qed.
Lemma lem3521486 {_90724 A : Type'} (_37170 : type235 _90724 A) (GEN_PVAR_84 : A -> Prop) (u : type686 A) (f : type862 _90724 A) (t : type686 A) : (term3230 _90724 A _37170 GEN_PVAR_84 u f t) = (term3231 _90724 A _37170 GEN_PVAR_84 u f t).
Proof. exact (@lem3521485 A (term3232 _90724 A _37170 u f t GEN_PVAR_84) (term2038 _90724 A GEN_PVAR_84 u f t)). Qed.
Lemma lem3521487 {_90724 A : Type'} (GEN_PVAR_84 : A -> Prop) (u : type686 A) (f : type862 _90724 A) (t : type686 A) (x : A -> Prop) : (term3119 _90724 A GEN_PVAR_84 u f t x) = (term2037 _90724 A GEN_PVAR_84 u f t x).
Proof. exact (eq_refl (term3119 _90724 A GEN_PVAR_84 u f t x)). Qed.
Lemma lem3521488 {_90724 A : Type'} (GEN_PVAR_84 : A -> Prop) (u : type686 A) (f : type862 _90724 A) (t : type686 A) : (term3233 _90724 A GEN_PVAR_84 u f t) = (term2038 _90724 A GEN_PVAR_84 u f t).
Proof. exact (fun_ext (fun x : A -> Prop => @lem3521487 _90724 A GEN_PVAR_84 u f t x)). Qed.
Lemma lem3521489 {A : Type'} : (@ex (A -> Prop)) = (@ex (A -> Prop)).
Proof. exact (eq_refl (@ex (A -> Prop))). Qed.
Lemma lem3521490 {_90724 A : Type'} (GEN_PVAR_84 : A -> Prop) (u : type686 A) (f : type862 _90724 A) (t : type686 A) : (term3234 _90724 A GEN_PVAR_84 u f t) = (term2039 _90724 A GEN_PVAR_84 u f t).
Proof. exact (MK_COMB (@lem3521489 A) (@lem3521488 _90724 A GEN_PVAR_84 u f t)). Qed.
Lemma lem3521491 {_90724 A : Type'} (_37170 : type235 _90724 A) (u : type686 A) (f : type862 _90724 A) (t : type686 A) (GEN_PVAR_84 : A -> Prop) : (term3125 _90724 A _37170 u f t GEN_PVAR_84) = (term3125 _90724 A _37170 u f t GEN_PVAR_84).
Proof. exact (eq_refl (term3125 _90724 A _37170 u f t GEN_PVAR_84)). Qed.
Lemma lem3521492 {_90724 A : Type'} (_37170 : type235 _90724 A) (GEN_PVAR_84 : A -> Prop) (u : type686 A) (f : type862 _90724 A) (t : type686 A) : (term3230 _90724 A _37170 GEN_PVAR_84 u f t) = (term3126 _90724 A _37170 GEN_PVAR_84 u f t).
Proof. exact (MK_COMB (@lem3521491 _90724 A _37170 u f t GEN_PVAR_84) (@lem3521490 _90724 A GEN_PVAR_84 u f t)). Qed.
Lemma lem3521493 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem3521494 {_90724 A : Type'} (_37170 : type235 _90724 A) (GEN_PVAR_84 : A -> Prop) (u : type686 A) (f : type862 _90724 A) (t : type686 A) : (term3235 _90724 A _37170 GEN_PVAR_84 u f t) = (term3236 _90724 A _37170 GEN_PVAR_84 u f t).
Proof. exact (MK_COMB (@lem3521493) (@lem3521492 _90724 A _37170 GEN_PVAR_84 u f t)). Qed.
Lemma lem3521495 {_90724 A : Type'} (GEN_PVAR_84 : A -> Prop) (u : type686 A) (f : type862 _90724 A) (t : type686 A) (x : A -> Prop) : (term3119 _90724 A GEN_PVAR_84 u f t x) = (term2037 _90724 A GEN_PVAR_84 u f t x).
Proof. exact (eq_refl (term3119 _90724 A GEN_PVAR_84 u f t x)). Qed.
Lemma lem3521496 {_90724 A : Type'} (_37170 : type235 _90724 A) (u : type686 A) (f : type862 _90724 A) (t : type686 A) (GEN_PVAR_84 : A -> Prop) : (term3125 _90724 A _37170 u f t GEN_PVAR_84) = (term3125 _90724 A _37170 u f t GEN_PVAR_84).
Proof. exact (eq_refl (term3125 _90724 A _37170 u f t GEN_PVAR_84)). Qed.
Lemma lem3521497 {_90724 A : Type'} (_37170 : type235 _90724 A) (GEN_PVAR_84 : A -> Prop) (u : type686 A) (f : type862 _90724 A) (t : type686 A) (x : A -> Prop) : (term3237 _90724 A _37170 GEN_PVAR_84 u f t x) = (term3238 _90724 A _37170 GEN_PVAR_84 u f t x).
Proof. exact (MK_COMB (@lem3521496 _90724 A _37170 u f t GEN_PVAR_84) (@lem3521495 _90724 A GEN_PVAR_84 u f t x)). Qed.
Lemma lem3521498 {_90724 A : Type'} (_37170 : type235 _90724 A) (GEN_PVAR_84 : A -> Prop) (u : type686 A) (f : type862 _90724 A) (t : type686 A) : (term3239 _90724 A _37170 GEN_PVAR_84 u f t) = (term3240 _90724 A _37170 GEN_PVAR_84 u f t).
Proof. exact (fun_ext (fun x : A -> Prop => @lem3521497 _90724 A _37170 GEN_PVAR_84 u f t x)). Qed.
Lemma lem3521499 {A : Type'} : (@ex (A -> Prop)) = (@ex (A -> Prop)).
Proof. exact (eq_refl (@ex (A -> Prop))). Qed.
Lemma lem3521500 {_90724 A : Type'} (_37170 : type235 _90724 A) (GEN_PVAR_84 : A -> Prop) (u : type686 A) (f : type862 _90724 A) (t : type686 A) : (term3231 _90724 A _37170 GEN_PVAR_84 u f t) = (term3241 _90724 A _37170 GEN_PVAR_84 u f t).
Proof. exact (MK_COMB (@lem3521499 A) (@lem3521498 _90724 A _37170 GEN_PVAR_84 u f t)). Qed.
Lemma lem3521501 {_90724 A : Type'} (_37170 : type235 _90724 A) (GEN_PVAR_84 : A -> Prop) (u : type686 A) (f : type862 _90724 A) (t : type686 A) : ((term3230 _90724 A _37170 GEN_PVAR_84 u f t) = (term3231 _90724 A _37170 GEN_PVAR_84 u f t)) = ((term3126 _90724 A _37170 GEN_PVAR_84 u f t) = (term3241 _90724 A _37170 GEN_PVAR_84 u f t)).
Proof. exact (MK_COMB (@lem3521494 _90724 A _37170 GEN_PVAR_84 u f t) (@lem3521500 _90724 A _37170 GEN_PVAR_84 u f t)). Qed.
Lemma lem3521502 {_90724 A : Type'} (_37170 : type235 _90724 A) (GEN_PVAR_84 : A -> Prop) (u : type686 A) (f : type862 _90724 A) (t : type686 A) : (term3126 _90724 A _37170 GEN_PVAR_84 u f t) = (term3241 _90724 A _37170 GEN_PVAR_84 u f t).
Proof. exact (EQ_MP (@lem3521501 _90724 A _37170 GEN_PVAR_84 u f t) (@lem3521486 _90724 A _37170 GEN_PVAR_84 u f t)). Qed.
Lemma lem3521503 {_90724 A : Type'} (_37170 : type235 _90724 A) (u : type686 A) (f : type862 _90724 A) (t : type686 A) : (term3145 _90724 A _37170 u f t) = (term3242 _90724 A _37170 u f t).
Proof. exact (fun_ext (fun GEN_PVAR_84 : A -> Prop => @lem3521502 _90724 A _37170 GEN_PVAR_84 u f t)). Qed.
Lemma lem3521504 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem3521505 {_90724 A : Type'} (_37170 : type235 _90724 A) (u : type686 A) (f : type862 _90724 A) (t : type686 A) : (term3160 _90724 A _37170 u f t) = (term3243 _90724 A _37170 u f t).
Proof. exact (MK_COMB (@lem3521504 A) (@lem3521503 _90724 A _37170 u f t)). Qed.
Lemma lem3521507 {A B : Type'} (P : type1413 A B) : (term453 A B P) = (term454 A B P).
Proof. exact (EQ_MP (@lem18899 A B P) (@lem18898 A B P)). Qed.
Lemma lem3521508 {A : Type'} (P : type639 A) : (term3004 A P) = (term3005 A P).
Proof. exact (@lem3521507 (A -> Prop) (A -> Prop) P). Qed.
Lemma lem3521509 {_90724 A : Type'} (_37170 : type235 _90724 A) (u : type686 A) (f : type862 _90724 A) (t : type686 A) : (term3244 _90724 A _37170 u f t) = (term3245 _90724 A _37170 u f t).
Proof. exact (@lem3521508 A (term3246 _90724 A _37170 u f t)). Qed.
Lemma lem3521510 {_90724 A : Type'} (_37170 : type235 _90724 A) (GEN_PVAR_84 : A -> Prop) (u : type686 A) (f : type862 _90724 A) (t : type686 A) : (term3247 _90724 A _37170 u f t GEN_PVAR_84) = (term3240 _90724 A _37170 GEN_PVAR_84 u f t).
Proof. exact (eq_refl (term3247 _90724 A _37170 u f t GEN_PVAR_84)). Qed.
Lemma lem3521511 {A : Type'} (x : A -> Prop) : x = x.
Proof. exact (eq_refl x). Qed.
Lemma lem3521512 {_90724 A : Type'} (_37170 : type235 _90724 A) (GEN_PVAR_84 : A -> Prop) (u : type686 A) (f : type862 _90724 A) (t : type686 A) (x : A -> Prop) : (term3248 _90724 A _37170 u f t GEN_PVAR_84 x) = (term3249 _90724 A _37170 GEN_PVAR_84 u f t x).
Proof. exact (MK_COMB (@lem3521510 _90724 A _37170 GEN_PVAR_84 u f t) (@lem3521511 A x)). Qed.
Lemma lem3521513 {_90724 A : Type'} (_37170 : type235 _90724 A) (GEN_PVAR_84 : A -> Prop) (u : type686 A) (f : type862 _90724 A) (t : type686 A) (x : A -> Prop) : (term3249 _90724 A _37170 GEN_PVAR_84 u f t x) = (term3238 _90724 A _37170 GEN_PVAR_84 u f t x).
Proof. exact (eq_refl (term3249 _90724 A _37170 GEN_PVAR_84 u f t x)). Qed.
Lemma lem3521514 {_90724 A : Type'} (_37170 : type235 _90724 A) (GEN_PVAR_84 : A -> Prop) (u : type686 A) (f : type862 _90724 A) (t : type686 A) (x : A -> Prop) : (term3248 _90724 A _37170 u f t GEN_PVAR_84 x) = (term3238 _90724 A _37170 GEN_PVAR_84 u f t x).
Proof. exact (TRANS (@lem3521512 _90724 A _37170 GEN_PVAR_84 u f t x) (@lem3521513 _90724 A _37170 GEN_PVAR_84 u f t x)). Qed.
Lemma lem3521515 {_90724 A : Type'} (_37170 : type235 _90724 A) (GEN_PVAR_84 : A -> Prop) (u : type686 A) (f : type862 _90724 A) (t : type686 A) : (term3250 _90724 A _37170 u f t GEN_PVAR_84) = (term3240 _90724 A _37170 GEN_PVAR_84 u f t).
Proof. exact (fun_ext (fun x : A -> Prop => @lem3521514 _90724 A _37170 GEN_PVAR_84 u f t x)). Qed.
Lemma lem3521516 {A : Type'} : (@ex (A -> Prop)) = (@ex (A -> Prop)).
Proof. exact (eq_refl (@ex (A -> Prop))). Qed.
Lemma lem3521517 {_90724 A : Type'} (_37170 : type235 _90724 A) (GEN_PVAR_84 : A -> Prop) (u : type686 A) (f : type862 _90724 A) (t : type686 A) : (term3251 _90724 A _37170 u f t GEN_PVAR_84) = (term3241 _90724 A _37170 GEN_PVAR_84 u f t).
Proof. exact (MK_COMB (@lem3521516 A) (@lem3521515 _90724 A _37170 GEN_PVAR_84 u f t)). Qed.
Lemma lem3521518 {_90724 A : Type'} (_37170 : type235 _90724 A) (u : type686 A) (f : type862 _90724 A) (t : type686 A) : (term3252 _90724 A _37170 u f t) = (term3242 _90724 A _37170 u f t).
Proof. exact (fun_ext (fun GEN_PVAR_84 : A -> Prop => @lem3521517 _90724 A _37170 GEN_PVAR_84 u f t)). Qed.
Lemma lem3521519 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem3521520 {_90724 A : Type'} (_37170 : type235 _90724 A) (u : type686 A) (f : type862 _90724 A) (t : type686 A) : (term3244 _90724 A _37170 u f t) = (term3243 _90724 A _37170 u f t).
Proof. exact (MK_COMB (@lem3521519 A) (@lem3521518 _90724 A _37170 u f t)). Qed.
Lemma lem3521521 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem3521522 {_90724 A : Type'} (_37170 : type235 _90724 A) (u : type686 A) (f : type862 _90724 A) (t : type686 A) : (term3253 _90724 A _37170 u f t) = (term3254 _90724 A _37170 u f t).
Proof. exact (MK_COMB (@lem3521521) (@lem3521520 _90724 A _37170 u f t)). Qed.
Lemma lem3521523 {_90724 A : Type'} (_37170 : type235 _90724 A) (GEN_PVAR_84 : A -> Prop) (u : type686 A) (f : type862 _90724 A) (t : type686 A) : (term3247 _90724 A _37170 u f t GEN_PVAR_84) = (term3240 _90724 A _37170 GEN_PVAR_84 u f t).
Proof. exact (eq_refl (term3247 _90724 A _37170 u f t GEN_PVAR_84)). Qed.
Lemma lem3521524 {A : Type'} (x : type672 A) (GEN_PVAR_84 : A -> Prop) : (x GEN_PVAR_84) = (x GEN_PVAR_84).
Proof. exact (eq_refl (x GEN_PVAR_84)). Qed.
Lemma lem3521525 {_90724 A : Type'} (_37170 : type235 _90724 A) (u : type686 A) (f : type862 _90724 A) (t : type686 A) (x : type672 A) (GEN_PVAR_84 : A -> Prop) : (term3255 _90724 A _37170 u f t x GEN_PVAR_84) = (term3256 _90724 A _37170 u f t x GEN_PVAR_84).
Proof. exact (MK_COMB (@lem3521523 _90724 A _37170 GEN_PVAR_84 u f t) (@lem3521524 A x GEN_PVAR_84)). Qed.
Lemma lem3521526 {_90724 A : Type'} (_37170 : type235 _90724 A) (u : type686 A) (f : type862 _90724 A) (t : type686 A) (x : type672 A) (GEN_PVAR_84 : A -> Prop) : (term3256 _90724 A _37170 u f t x GEN_PVAR_84) = (term3257 _90724 A _37170 u f t x GEN_PVAR_84).
Proof. exact (eq_refl (term3256 _90724 A _37170 u f t x GEN_PVAR_84)). Qed.
Lemma lem3521527 {_90724 A : Type'} (_37170 : type235 _90724 A) (u : type686 A) (f : type862 _90724 A) (t : type686 A) (x : type672 A) (GEN_PVAR_84 : A -> Prop) : (term3255 _90724 A _37170 u f t x GEN_PVAR_84) = (term3257 _90724 A _37170 u f t x GEN_PVAR_84).
Proof. exact (TRANS (@lem3521525 _90724 A _37170 u f t x GEN_PVAR_84) (@lem3521526 _90724 A _37170 u f t x GEN_PVAR_84)). Qed.
Lemma lem3521528 {_90724 A : Type'} (_37170 : type235 _90724 A) (u : type686 A) (f : type862 _90724 A) (t : type686 A) (x : type672 A) : (term3258 _90724 A _37170 u f t x) = (term3259 _90724 A _37170 u f t x).
Proof. exact (fun_ext (fun GEN_PVAR_84 : A -> Prop => @lem3521527 _90724 A _37170 u f t x GEN_PVAR_84)). Qed.
Lemma lem3521529 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem3521530 {_90724 A : Type'} (_37170 : type235 _90724 A) (u : type686 A) (f : type862 _90724 A) (t : type686 A) (x : type672 A) : (term3260 _90724 A _37170 u f t x) = (term3261 _90724 A _37170 u f t x).
Proof. exact (MK_COMB (@lem3521529 A) (@lem3521528 _90724 A _37170 u f t x)). Qed.
Lemma lem3521531 {_90724 A : Type'} (_37170 : type235 _90724 A) (u : type686 A) (f : type862 _90724 A) (t : type686 A) : (term3262 _90724 A _37170 u f t) = (term3263 _90724 A _37170 u f t).
Proof. exact (fun_ext (fun x : type672 A => @lem3521530 _90724 A _37170 u f t x)). Qed.
Lemma lem3521532 {A : Type'} : (@ex ((A -> Prop) -> A -> Prop)) = (@ex ((A -> Prop) -> A -> Prop)).
Proof. exact (eq_refl (@ex ((A -> Prop) -> A -> Prop))). Qed.
Lemma lem3521533 {_90724 A : Type'} (_37170 : type235 _90724 A) (u : type686 A) (f : type862 _90724 A) (t : type686 A) : (term3245 _90724 A _37170 u f t) = (term3264 _90724 A _37170 u f t).
Proof. exact (MK_COMB (@lem3521532 A) (@lem3521531 _90724 A _37170 u f t)). Qed.
Lemma lem3521534 {_90724 A : Type'} (_37170 : type235 _90724 A) (u : type686 A) (f : type862 _90724 A) (t : type686 A) : ((term3244 _90724 A _37170 u f t) = (term3245 _90724 A _37170 u f t)) = ((term3243 _90724 A _37170 u f t) = (term3264 _90724 A _37170 u f t)).
Proof. exact (MK_COMB (@lem3521522 _90724 A _37170 u f t) (@lem3521533 _90724 A _37170 u f t)). Qed.
Lemma lem3521535 {_90724 A : Type'} (_37170 : type235 _90724 A) (u : type686 A) (f : type862 _90724 A) (t : type686 A) : (term3243 _90724 A _37170 u f t) = (term3264 _90724 A _37170 u f t).
Proof. exact (EQ_MP (@lem3521534 _90724 A _37170 u f t) (@lem3521509 _90724 A _37170 u f t)). Qed.
Lemma lem3521536 {_90724 A : Type'} (_37170 : type235 _90724 A) (u : type686 A) (f : type862 _90724 A) (t : type686 A) : (term3160 _90724 A _37170 u f t) = (term3264 _90724 A _37170 u f t).
Proof. exact (TRANS (@lem3521505 _90724 A _37170 u f t) (@lem3521535 _90724 A _37170 u f t)). Qed.
Lemma lem3521537 {_90724 A : Type'} (_37170 : type235 _90724 A) (u : type686 A) (f : type862 _90724 A) : (term3167 _90724 A _37170 u f) = (term3265 _90724 A _37170 u f).
Proof. exact (fun_ext (fun t : type686 A => @lem3521536 _90724 A _37170 u f t)). Qed.
Lemma lem3521538 {A : Type'} : (@all ((A -> Prop) -> Prop)) = (@all ((A -> Prop) -> Prop)).
Proof. exact (eq_refl (@all ((A -> Prop) -> Prop))). Qed.
Lemma lem3521539 {_90724 A : Type'} (_37170 : type235 _90724 A) (u : type686 A) (f : type862 _90724 A) : (term3182 _90724 A _37170 u f) = (term3266 _90724 A _37170 u f).
Proof. exact (MK_COMB (@lem3521538 A) (@lem3521537 _90724 A _37170 u f)). Qed.
Lemma lem3521541 {A B : Type'} (P : type1413 A B) : (term453 A B P) = (term454 A B P).
Proof. exact (EQ_MP (@lem18899 A B P) (@lem18898 A B P)). Qed.
Lemma lem3521542 {A : Type'} (P : type168 A) : (term3029 A P) = (term3030 A P).
Proof. exact (@lem3521541 (type686 A) (type672 A) P). Qed.
Lemma lem3521543 {_90724 A : Type'} (_37170 : type235 _90724 A) (u : type686 A) (f : type862 _90724 A) : (term3267 _90724 A _37170 u f) = (term3268 _90724 A _37170 u f).
Proof. exact (@lem3521542 A (term3269 _90724 A _37170 u f)). Qed.
Lemma lem3521544 {_90724 A : Type'} (_37170 : type235 _90724 A) (u : type686 A) (f : type862 _90724 A) (t : type686 A) : (term3270 _90724 A _37170 u f t) = (term3263 _90724 A _37170 u f t).
Proof. exact (eq_refl (term3270 _90724 A _37170 u f t)). Qed.
Lemma lem3521545 {A : Type'} (x : type672 A) : x = x.
Proof. exact (eq_refl x). Qed.
Lemma lem3521546 {_90724 A : Type'} (_37170 : type235 _90724 A) (u : type686 A) (f : type862 _90724 A) (t : type686 A) (x : type672 A) : (term3271 _90724 A _37170 u f t x) = (term3272 _90724 A _37170 u f t x).
Proof. exact (MK_COMB (@lem3521544 _90724 A _37170 u f t) (@lem3521545 A x)). Qed.
Lemma lem3521547 {_90724 A : Type'} (_37170 : type235 _90724 A) (u : type686 A) (f : type862 _90724 A) (t : type686 A) (x : type672 A) : (term3272 _90724 A _37170 u f t x) = (term3261 _90724 A _37170 u f t x).
Proof. exact (eq_refl (term3272 _90724 A _37170 u f t x)). Qed.
Lemma lem3521548 {_90724 A : Type'} (_37170 : type235 _90724 A) (u : type686 A) (f : type862 _90724 A) (t : type686 A) (x : type672 A) : (term3271 _90724 A _37170 u f t x) = (term3261 _90724 A _37170 u f t x).
Proof. exact (TRANS (@lem3521546 _90724 A _37170 u f t x) (@lem3521547 _90724 A _37170 u f t x)). Qed.
Lemma lem3521549 {_90724 A : Type'} (_37170 : type235 _90724 A) (u : type686 A) (f : type862 _90724 A) (t : type686 A) : (term3273 _90724 A _37170 u f t) = (term3263 _90724 A _37170 u f t).
Proof. exact (fun_ext (fun x : type672 A => @lem3521548 _90724 A _37170 u f t x)). Qed.
Lemma lem3521550 {A : Type'} : (@ex ((A -> Prop) -> A -> Prop)) = (@ex ((A -> Prop) -> A -> Prop)).
Proof. exact (eq_refl (@ex ((A -> Prop) -> A -> Prop))). Qed.
Lemma lem3521551 {_90724 A : Type'} (_37170 : type235 _90724 A) (u : type686 A) (f : type862 _90724 A) (t : type686 A) : (term3274 _90724 A _37170 u f t) = (term3264 _90724 A _37170 u f t).
Proof. exact (MK_COMB (@lem3521550 A) (@lem3521549 _90724 A _37170 u f t)). Qed.
Lemma lem3521552 {_90724 A : Type'} (_37170 : type235 _90724 A) (u : type686 A) (f : type862 _90724 A) : (term3275 _90724 A _37170 u f) = (term3265 _90724 A _37170 u f).
Proof. exact (fun_ext (fun t : type686 A => @lem3521551 _90724 A _37170 u f t)). Qed.
Lemma lem3521553 {A : Type'} : (@all ((A -> Prop) -> Prop)) = (@all ((A -> Prop) -> Prop)).
Proof. exact (eq_refl (@all ((A -> Prop) -> Prop))). Qed.
Lemma lem3521554 {_90724 A : Type'} (_37170 : type235 _90724 A) (u : type686 A) (f : type862 _90724 A) : (term3267 _90724 A _37170 u f) = (term3266 _90724 A _37170 u f).
Proof. exact (MK_COMB (@lem3521553 A) (@lem3521552 _90724 A _37170 u f)). Qed.
Lemma lem3521555 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem3521556 {_90724 A : Type'} (_37170 : type235 _90724 A) (u : type686 A) (f : type862 _90724 A) : (term3276 _90724 A _37170 u f) = (term3277 _90724 A _37170 u f).
Proof. exact (MK_COMB (@lem3521555) (@lem3521554 _90724 A _37170 u f)). Qed.
Lemma lem3521557 {_90724 A : Type'} (_37170 : type235 _90724 A) (u : type686 A) (f : type862 _90724 A) (t : type686 A) : (term3270 _90724 A _37170 u f t) = (term3263 _90724 A _37170 u f t).
Proof. exact (eq_refl (term3270 _90724 A _37170 u f t)). Qed.
Lemma lem3521558 {A : Type'} (x : type173 A) (t : type686 A) : (x t) = (x t).
Proof. exact (eq_refl (x t)). Qed.
Lemma lem3521559 {_90724 A : Type'} (_37170 : type235 _90724 A) (u : type686 A) (f : type862 _90724 A) (x : type173 A) (t : type686 A) : (term3278 _90724 A _37170 u f x t) = (term3279 _90724 A _37170 u f x t).
Proof. exact (MK_COMB (@lem3521557 _90724 A _37170 u f t) (@lem3521558 A x t)). Qed.
Lemma lem3521560 {_90724 A : Type'} (_37170 : type235 _90724 A) (u : type686 A) (f : type862 _90724 A) (x : type173 A) (t : type686 A) : (term3279 _90724 A _37170 u f x t) = (term3280 _90724 A _37170 u f x t).
Proof. exact (eq_refl (term3279 _90724 A _37170 u f x t)). Qed.
Lemma lem3521561 {_90724 A : Type'} (_37170 : type235 _90724 A) (u : type686 A) (f : type862 _90724 A) (x : type173 A) (t : type686 A) : (term3278 _90724 A _37170 u f x t) = (term3280 _90724 A _37170 u f x t).
Proof. exact (TRANS (@lem3521559 _90724 A _37170 u f x t) (@lem3521560 _90724 A _37170 u f x t)). Qed.
Lemma lem3521562 {_90724 A : Type'} (_37170 : type235 _90724 A) (u : type686 A) (f : type862 _90724 A) (x : type173 A) : (term3281 _90724 A _37170 u f x) = (term3282 _90724 A _37170 u f x).
Proof. exact (fun_ext (fun t : type686 A => @lem3521561 _90724 A _37170 u f x t)). Qed.
Lemma lem3521563 {A : Type'} : (@all ((A -> Prop) -> Prop)) = (@all ((A -> Prop) -> Prop)).
Proof. exact (eq_refl (@all ((A -> Prop) -> Prop))). Qed.
Lemma lem3521564 {_90724 A : Type'} (_37170 : type235 _90724 A) (u : type686 A) (f : type862 _90724 A) (x : type173 A) : (term3283 _90724 A _37170 u f x) = (term3284 _90724 A _37170 u f x).
Proof. exact (MK_COMB (@lem3521563 A) (@lem3521562 _90724 A _37170 u f x)). Qed.
Lemma lem3521565 {_90724 A : Type'} (_37170 : type235 _90724 A) (u : type686 A) (f : type862 _90724 A) : (term3285 _90724 A _37170 u f) = (term3286 _90724 A _37170 u f).
Proof. exact (fun_ext (fun x : type173 A => @lem3521564 _90724 A _37170 u f x)). Qed.
Lemma lem3521566 {A : Type'} : (@ex (((A -> Prop) -> Prop) -> (A -> Prop) -> A -> Prop)) = (@ex (((A -> Prop) -> Prop) -> (A -> Prop) -> A -> Prop)).
Proof. exact (eq_refl (@ex (((A -> Prop) -> Prop) -> (A -> Prop) -> A -> Prop))). Qed.
Lemma lem3521567 {_90724 A : Type'} (_37170 : type235 _90724 A) (u : type686 A) (f : type862 _90724 A) : (term3268 _90724 A _37170 u f) = (term3287 _90724 A _37170 u f).
Proof. exact (MK_COMB (@lem3521566 A) (@lem3521565 _90724 A _37170 u f)). Qed.
Lemma lem3521568 {_90724 A : Type'} (_37170 : type235 _90724 A) (u : type686 A) (f : type862 _90724 A) : ((term3267 _90724 A _37170 u f) = (term3268 _90724 A _37170 u f)) = ((term3266 _90724 A _37170 u f) = (term3287 _90724 A _37170 u f)).
Proof. exact (MK_COMB (@lem3521556 _90724 A _37170 u f) (@lem3521567 _90724 A _37170 u f)). Qed.
Lemma lem3521569 {_90724 A : Type'} (_37170 : type235 _90724 A) (u : type686 A) (f : type862 _90724 A) : (term3266 _90724 A _37170 u f) = (term3287 _90724 A _37170 u f).
Proof. exact (EQ_MP (@lem3521568 _90724 A _37170 u f) (@lem3521543 _90724 A _37170 u f)). Qed.
Lemma lem3521570 {_90724 A : Type'} (_37170 : type235 _90724 A) (u : type686 A) (f : type862 _90724 A) : (term3182 _90724 A _37170 u f) = (term3287 _90724 A _37170 u f).
Proof. exact (TRANS (@lem3521539 _90724 A _37170 u f) (@lem3521569 _90724 A _37170 u f)). Qed.
Lemma lem3521571 {_90724 A : Type'} (_37170 : type235 _90724 A) (u : type686 A) : (term3191 _90724 A _37170 u) = (term3288 _90724 A _37170 u).
Proof. exact (fun_ext (fun f : type862 _90724 A => @lem3521570 _90724 A _37170 u f)). Qed.
Lemma lem3521572 {_90724 A : Type'} : (@all ((A -> Prop) -> _90724)) = (@all ((A -> Prop) -> _90724)).
Proof. exact (eq_refl (@all ((A -> Prop) -> _90724))). Qed.
Lemma lem3521573 {_90724 A : Type'} (_37170 : type235 _90724 A) (u : type686 A) : (term3206 _90724 A _37170 u) = (term3289 _90724 A _37170 u).
Proof. exact (MK_COMB (@lem3521572 _90724 A) (@lem3521571 _90724 A _37170 u)). Qed.
Lemma lem3521575 {A B : Type'} (P : type1413 A B) : (term453 A B P) = (term454 A B P).
Proof. exact (EQ_MP (@lem18899 A B P) (@lem18898 A B P)). Qed.
Lemma lem3521576 {_90724 A : Type'} (P : type225 _90724 A) : (term3290 _90724 A P) = (term3291 _90724 A P).
Proof. exact (@lem3521575 (type862 _90724 A) (type173 A) P). Qed.
Lemma lem3521577 {_90724 A : Type'} (_37170 : type235 _90724 A) (u : type686 A) : (term3292 _90724 A _37170 u) = (term3293 _90724 A _37170 u).
Proof. exact (@lem3521576 _90724 A (term3294 _90724 A _37170 u)). Qed.
Lemma lem3521578 {_90724 A : Type'} (_37170 : type235 _90724 A) (u : type686 A) (f : type862 _90724 A) : (term3295 _90724 A _37170 u f) = (term3286 _90724 A _37170 u f).
Proof. exact (eq_refl (term3295 _90724 A _37170 u f)). Qed.
Lemma lem3521579 {A : Type'} (x : type173 A) : x = x.
Proof. exact (eq_refl x). Qed.
Lemma lem3521580 {_90724 A : Type'} (_37170 : type235 _90724 A) (u : type686 A) (f : type862 _90724 A) (x : type173 A) : (term3296 _90724 A _37170 u f x) = (term3297 _90724 A _37170 u f x).
Proof. exact (MK_COMB (@lem3521578 _90724 A _37170 u f) (@lem3521579 A x)). Qed.
Lemma lem3521581 {_90724 A : Type'} (_37170 : type235 _90724 A) (u : type686 A) (f : type862 _90724 A) (x : type173 A) : (term3297 _90724 A _37170 u f x) = (term3284 _90724 A _37170 u f x).
Proof. exact (eq_refl (term3297 _90724 A _37170 u f x)). Qed.
Lemma lem3521582 {_90724 A : Type'} (_37170 : type235 _90724 A) (u : type686 A) (f : type862 _90724 A) (x : type173 A) : (term3296 _90724 A _37170 u f x) = (term3284 _90724 A _37170 u f x).
Proof. exact (TRANS (@lem3521580 _90724 A _37170 u f x) (@lem3521581 _90724 A _37170 u f x)). Qed.
Lemma lem3521583 {_90724 A : Type'} (_37170 : type235 _90724 A) (u : type686 A) (f : type862 _90724 A) : (term3298 _90724 A _37170 u f) = (term3286 _90724 A _37170 u f).
Proof. exact (fun_ext (fun x : type173 A => @lem3521582 _90724 A _37170 u f x)). Qed.
Lemma lem3521584 {A : Type'} : (@ex (((A -> Prop) -> Prop) -> (A -> Prop) -> A -> Prop)) = (@ex (((A -> Prop) -> Prop) -> (A -> Prop) -> A -> Prop)).
Proof. exact (eq_refl (@ex (((A -> Prop) -> Prop) -> (A -> Prop) -> A -> Prop))). Qed.
Lemma lem3521585 {_90724 A : Type'} (_37170 : type235 _90724 A) (u : type686 A) (f : type862 _90724 A) : (term3299 _90724 A _37170 u f) = (term3287 _90724 A _37170 u f).
Proof. exact (MK_COMB (@lem3521584 A) (@lem3521583 _90724 A _37170 u f)). Qed.
Lemma lem3521586 {_90724 A : Type'} (_37170 : type235 _90724 A) (u : type686 A) : (term3300 _90724 A _37170 u) = (term3288 _90724 A _37170 u).
Proof. exact (fun_ext (fun f : type862 _90724 A => @lem3521585 _90724 A _37170 u f)). Qed.
Lemma lem3521587 {_90724 A : Type'} : (@all ((A -> Prop) -> _90724)) = (@all ((A -> Prop) -> _90724)).
Proof. exact (eq_refl (@all ((A -> Prop) -> _90724))). Qed.
Lemma lem3521588 {_90724 A : Type'} (_37170 : type235 _90724 A) (u : type686 A) : (term3292 _90724 A _37170 u) = (term3289 _90724 A _37170 u).
Proof. exact (MK_COMB (@lem3521587 _90724 A) (@lem3521586 _90724 A _37170 u)). Qed.
Lemma lem3521589 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem3521590 {_90724 A : Type'} (_37170 : type235 _90724 A) (u : type686 A) : (term3301 _90724 A _37170 u) = (term3302 _90724 A _37170 u).
Proof. exact (MK_COMB (@lem3521589) (@lem3521588 _90724 A _37170 u)). Qed.
Lemma lem3521591 {_90724 A : Type'} (_37170 : type235 _90724 A) (u : type686 A) (f : type862 _90724 A) : (term3295 _90724 A _37170 u f) = (term3286 _90724 A _37170 u f).
Proof. exact (eq_refl (term3295 _90724 A _37170 u f)). Qed.
Lemma lem3521592 {_90724 A : Type'} (x : type227 _90724 A) (f : type862 _90724 A) : (x f) = (x f).
Proof. exact (eq_refl (x f)). Qed.
Lemma lem3521593 {_90724 A : Type'} (_37170 : type235 _90724 A) (u : type686 A) (x : type227 _90724 A) (f : type862 _90724 A) : (term3303 _90724 A _37170 u x f) = (term3304 _90724 A _37170 u x f).
Proof. exact (MK_COMB (@lem3521591 _90724 A _37170 u f) (@lem3521592 _90724 A x f)). Qed.
Lemma lem3521594 {_90724 A : Type'} (_37170 : type235 _90724 A) (u : type686 A) (x : type227 _90724 A) (f : type862 _90724 A) : (term3304 _90724 A _37170 u x f) = (term3305 _90724 A _37170 u x f).
Proof. exact (eq_refl (term3304 _90724 A _37170 u x f)). Qed.
Lemma lem3521595 {_90724 A : Type'} (_37170 : type235 _90724 A) (u : type686 A) (x : type227 _90724 A) (f : type862 _90724 A) : (term3303 _90724 A _37170 u x f) = (term3305 _90724 A _37170 u x f).
Proof. exact (TRANS (@lem3521593 _90724 A _37170 u x f) (@lem3521594 _90724 A _37170 u x f)). Qed.
Lemma lem3521596 {_90724 A : Type'} (_37170 : type235 _90724 A) (u : type686 A) (x : type227 _90724 A) : (term3306 _90724 A _37170 u x) = (term3307 _90724 A _37170 u x).
Proof. exact (fun_ext (fun f : type862 _90724 A => @lem3521595 _90724 A _37170 u x f)). Qed.
Lemma lem3521597 {_90724 A : Type'} : (@all ((A -> Prop) -> _90724)) = (@all ((A -> Prop) -> _90724)).
Proof. exact (eq_refl (@all ((A -> Prop) -> _90724))). Qed.
Lemma lem3521598 {_90724 A : Type'} (_37170 : type235 _90724 A) (u : type686 A) (x : type227 _90724 A) : (term3308 _90724 A _37170 u x) = (term3309 _90724 A _37170 u x).
Proof. exact (MK_COMB (@lem3521597 _90724 A) (@lem3521596 _90724 A _37170 u x)). Qed.
Lemma lem3521599 {_90724 A : Type'} (_37170 : type235 _90724 A) (u : type686 A) : (term3310 _90724 A _37170 u) = (term3311 _90724 A _37170 u).
Proof. exact (fun_ext (fun x : type227 _90724 A => @lem3521598 _90724 A _37170 u x)). Qed.
Lemma lem3521600 {_90724 A : Type'} : (@ex (((A -> Prop) -> _90724) -> ((A -> Prop) -> Prop) -> (A -> Prop) -> A -> Prop)) = (@ex (((A -> Prop) -> _90724) -> ((A -> Prop) -> Prop) -> (A -> Prop) -> A -> Prop)).
Proof. exact (eq_refl (@ex (((A -> Prop) -> _90724) -> ((A -> Prop) -> Prop) -> (A -> Prop) -> A -> Prop))). Qed.
Lemma lem3521601 {_90724 A : Type'} (_37170 : type235 _90724 A) (u : type686 A) : (term3293 _90724 A _37170 u) = (term3312 _90724 A _37170 u).
Proof. exact (MK_COMB (@lem3521600 _90724 A) (@lem3521599 _90724 A _37170 u)). Qed.
Lemma lem3521602 {_90724 A : Type'} (_37170 : type235 _90724 A) (u : type686 A) : ((term3292 _90724 A _37170 u) = (term3293 _90724 A _37170 u)) = ((term3289 _90724 A _37170 u) = (term3312 _90724 A _37170 u)).
Proof. exact (MK_COMB (@lem3521590 _90724 A _37170 u) (@lem3521601 _90724 A _37170 u)). Qed.
Lemma lem3521603 {_90724 A : Type'} (_37170 : type235 _90724 A) (u : type686 A) : (term3289 _90724 A _37170 u) = (term3312 _90724 A _37170 u).
Proof. exact (EQ_MP (@lem3521602 _90724 A _37170 u) (@lem3521577 _90724 A _37170 u)). Qed.
Lemma lem3521604 {_90724 A : Type'} (_37170 : type235 _90724 A) (u : type686 A) : (term3206 _90724 A _37170 u) = (term3312 _90724 A _37170 u).
Proof. exact (TRANS (@lem3521573 _90724 A _37170 u) (@lem3521603 _90724 A _37170 u)). Qed.
Lemma lem3521605 {_90724 A : Type'} (_37170 : type235 _90724 A) : (term3213 _90724 A _37170) = (term3313 _90724 A _37170).
Proof. exact (fun_ext (fun u : type686 A => @lem3521604 _90724 A _37170 u)). Qed.
Lemma lem3521606 {A : Type'} : (@all ((A -> Prop) -> Prop)) = (@all ((A -> Prop) -> Prop)).
Proof. exact (eq_refl (@all ((A -> Prop) -> Prop))). Qed.
Lemma lem3521607 {_90724 A : Type'} (_37170 : type235 _90724 A) : (term3228 _90724 A _37170) = (term3314 _90724 A _37170).
Proof. exact (MK_COMB (@lem3521606 A) (@lem3521605 _90724 A _37170)). Qed.
Lemma lem3521609 {A B : Type'} (P : type1413 A B) : (term453 A B P) = (term454 A B P).
Proof. exact (EQ_MP (@lem18899 A B P) (@lem18898 A B P)). Qed.
Lemma lem3521610 {_90724 A : Type'} (P : type232 _90724 A) : (term3315 _90724 A P) = (term3316 _90724 A P).
Proof. exact (@lem3521609 (type686 A) (type227 _90724 A) P). Qed.
Lemma lem3521611 {_90724 A : Type'} (_37170 : type235 _90724 A) : (term3317 _90724 A _37170) = (term3318 _90724 A _37170).
Proof. exact (@lem3521610 _90724 A (term3319 _90724 A _37170)). Qed.
Lemma lem3521612 {_90724 A : Type'} (_37170 : type235 _90724 A) (u : type686 A) : (term3320 _90724 A _37170 u) = (term3311 _90724 A _37170 u).
Proof. exact (eq_refl (term3320 _90724 A _37170 u)). Qed.
Lemma lem3521613 {_90724 A : Type'} (x : type227 _90724 A) : x = x.
Proof. exact (eq_refl x). Qed.
Lemma lem3521614 {_90724 A : Type'} (_37170 : type235 _90724 A) (u : type686 A) (x : type227 _90724 A) : (term3321 _90724 A _37170 u x) = (term3322 _90724 A _37170 u x).
Proof. exact (MK_COMB (@lem3521612 _90724 A _37170 u) (@lem3521613 _90724 A x)). Qed.
Lemma lem3521615 {_90724 A : Type'} (_37170 : type235 _90724 A) (u : type686 A) (x : type227 _90724 A) : (term3322 _90724 A _37170 u x) = (term3309 _90724 A _37170 u x).
Proof. exact (eq_refl (term3322 _90724 A _37170 u x)). Qed.
Lemma lem3521616 {_90724 A : Type'} (_37170 : type235 _90724 A) (u : type686 A) (x : type227 _90724 A) : (term3321 _90724 A _37170 u x) = (term3309 _90724 A _37170 u x).
Proof. exact (TRANS (@lem3521614 _90724 A _37170 u x) (@lem3521615 _90724 A _37170 u x)). Qed.
Lemma lem3521617 {_90724 A : Type'} (_37170 : type235 _90724 A) (u : type686 A) : (term3323 _90724 A _37170 u) = (term3311 _90724 A _37170 u).
Proof. exact (fun_ext (fun x : type227 _90724 A => @lem3521616 _90724 A _37170 u x)). Qed.
Lemma lem3521618 {_90724 A : Type'} : (@ex (((A -> Prop) -> _90724) -> ((A -> Prop) -> Prop) -> (A -> Prop) -> A -> Prop)) = (@ex (((A -> Prop) -> _90724) -> ((A -> Prop) -> Prop) -> (A -> Prop) -> A -> Prop)).
Proof. exact (eq_refl (@ex (((A -> Prop) -> _90724) -> ((A -> Prop) -> Prop) -> (A -> Prop) -> A -> Prop))). Qed.
Lemma lem3521619 {_90724 A : Type'} (_37170 : type235 _90724 A) (u : type686 A) : (term3324 _90724 A _37170 u) = (term3312 _90724 A _37170 u).
Proof. exact (MK_COMB (@lem3521618 _90724 A) (@lem3521617 _90724 A _37170 u)). Qed.
Lemma lem3521620 {_90724 A : Type'} (_37170 : type235 _90724 A) : (term3325 _90724 A _37170) = (term3313 _90724 A _37170).
Proof. exact (fun_ext (fun u : type686 A => @lem3521619 _90724 A _37170 u)). Qed.
Lemma lem3521621 {A : Type'} : (@all ((A -> Prop) -> Prop)) = (@all ((A -> Prop) -> Prop)).
Proof. exact (eq_refl (@all ((A -> Prop) -> Prop))). Qed.
Lemma lem3521622 {_90724 A : Type'} (_37170 : type235 _90724 A) : (term3317 _90724 A _37170) = (term3314 _90724 A _37170).
Proof. exact (MK_COMB (@lem3521621 A) (@lem3521620 _90724 A _37170)). Qed.
Lemma lem3521623 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem3521624 {_90724 A : Type'} (_37170 : type235 _90724 A) : (term3326 _90724 A _37170) = (term3327 _90724 A _37170).
Proof. exact (MK_COMB (@lem3521623) (@lem3521622 _90724 A _37170)). Qed.
Lemma lem3521625 {_90724 A : Type'} (_37170 : type235 _90724 A) (u : type686 A) : (term3320 _90724 A _37170 u) = (term3311 _90724 A _37170 u).
Proof. exact (eq_refl (term3320 _90724 A _37170 u)). Qed.
Lemma lem3521626 {_90724 A : Type'} (x : type234 _90724 A) (u : type686 A) : (x u) = (x u).
Proof. exact (eq_refl (x u)). Qed.
Lemma lem3521627 {_90724 A : Type'} (_37170 : type235 _90724 A) (x : type234 _90724 A) (u : type686 A) : (term3328 _90724 A _37170 x u) = (term3329 _90724 A _37170 x u).
Proof. exact (MK_COMB (@lem3521625 _90724 A _37170 u) (@lem3521626 _90724 A x u)). Qed.
Lemma lem3521628 {_90724 A : Type'} (_37170 : type235 _90724 A) (x : type234 _90724 A) (u : type686 A) : (term3329 _90724 A _37170 x u) = (term3330 _90724 A _37170 x u).
Proof. exact (eq_refl (term3329 _90724 A _37170 x u)). Qed.
Lemma lem3521629 {_90724 A : Type'} (_37170 : type235 _90724 A) (x : type234 _90724 A) (u : type686 A) : (term3328 _90724 A _37170 x u) = (term3330 _90724 A _37170 x u).
Proof. exact (TRANS (@lem3521627 _90724 A _37170 x u) (@lem3521628 _90724 A _37170 x u)). Qed.
Lemma lem3521630 {_90724 A : Type'} (_37170 : type235 _90724 A) (x : type234 _90724 A) : (term3331 _90724 A _37170 x) = (term3332 _90724 A _37170 x).
Proof. exact (fun_ext (fun u : type686 A => @lem3521629 _90724 A _37170 x u)). Qed.
Lemma lem3521631 {A : Type'} : (@all ((A -> Prop) -> Prop)) = (@all ((A -> Prop) -> Prop)).
Proof. exact (eq_refl (@all ((A -> Prop) -> Prop))). Qed.
Lemma lem3521632 {_90724 A : Type'} (_37170 : type235 _90724 A) (x : type234 _90724 A) : (term3333 _90724 A _37170 x) = (term3334 _90724 A _37170 x).
Proof. exact (MK_COMB (@lem3521631 A) (@lem3521630 _90724 A _37170 x)). Qed.
Lemma lem3521633 {_90724 A : Type'} (_37170 : type235 _90724 A) : (term3335 _90724 A _37170) = (term3336 _90724 A _37170).
Proof. exact (fun_ext (fun x : type234 _90724 A => @lem3521632 _90724 A _37170 x)). Qed.
Lemma lem3521634 {_90724 A : Type'} : (@ex (((A -> Prop) -> Prop) -> ((A -> Prop) -> _90724) -> ((A -> Prop) -> Prop) -> (A -> Prop) -> A -> Prop)) = (@ex (((A -> Prop) -> Prop) -> ((A -> Prop) -> _90724) -> ((A -> Prop) -> Prop) -> (A -> Prop) -> A -> Prop)).
Proof. exact (eq_refl (@ex (((A -> Prop) -> Prop) -> ((A -> Prop) -> _90724) -> ((A -> Prop) -> Prop) -> (A -> Prop) -> A -> Prop))). Qed.
Lemma lem3521635 {_90724 A : Type'} (_37170 : type235 _90724 A) : (term3318 _90724 A _37170) = (term3337 _90724 A _37170).
Proof. exact (MK_COMB (@lem3521634 _90724 A) (@lem3521633 _90724 A _37170)). Qed.
Lemma lem3521636 {_90724 A : Type'} (_37170 : type235 _90724 A) : ((term3317 _90724 A _37170) = (term3318 _90724 A _37170)) = ((term3314 _90724 A _37170) = (term3337 _90724 A _37170)).
Proof. exact (MK_COMB (@lem3521624 _90724 A _37170) (@lem3521635 _90724 A _37170)). Qed.
Lemma lem3521637 {_90724 A : Type'} (_37170 : type235 _90724 A) : (term3314 _90724 A _37170) = (term3337 _90724 A _37170).
Proof. exact (EQ_MP (@lem3521636 _90724 A _37170) (@lem3521611 _90724 A _37170)). Qed.
Lemma lem3521638 {_90724 A : Type'} (_37170 : type235 _90724 A) : (term3228 _90724 A _37170) = (term3337 _90724 A _37170).
Proof. exact (TRANS (@lem3521607 _90724 A _37170) (@lem3521637 _90724 A _37170)). Qed.
Lemma lem3521639 {_90724 A : Type'} (_37170 : type235 _90724 A) : (term3225 _90724 A _37170) = (term3225 _90724 A _37170).
Proof. exact (eq_refl (term3225 _90724 A _37170)). Qed.
Lemma lem3521640 {_90724 A : Type'} (_37170 : type235 _90724 A) : (term3229 _90724 A _37170) = (term3338 _90724 A _37170).
Proof. exact (MK_COMB (@lem3521639 _90724 A _37170) (@lem3521638 _90724 A _37170)). Qed.
Lemma lem3521642 {A : Type'} (P : Prop) (Q : A -> Prop) : (term415 A P Q) = (term416 A P Q).
Proof. exact (EQ_MP (@lem18929 A P Q) (@lem18928 A P Q)). Qed.
Lemma lem3521643 {_90724 A : Type'} (P : Prop) (Q : type77 _90724 A) : (term3339 _90724 A P Q) = (term3340 _90724 A P Q).
Proof. exact (@lem3521642 (type234 _90724 A) P Q). Qed.
Lemma lem3521644 {_90724 A : Type'} (_37170 : type235 _90724 A) : (term3341 _90724 A _37170) = (term3342 _90724 A _37170).
Proof. exact (@lem3521643 _90724 A (term3223 _90724 A _37170) (term3336 _90724 A _37170)). Qed.
Lemma lem3521645 {_90724 A : Type'} (_37170 : type235 _90724 A) (x : type234 _90724 A) : (term3343 _90724 A _37170 x) = (term3334 _90724 A _37170 x).
Proof. exact (eq_refl (term3343 _90724 A _37170 x)). Qed.
Lemma lem3521646 {_90724 A : Type'} (_37170 : type235 _90724 A) : (term3344 _90724 A _37170) = (term3336 _90724 A _37170).
Proof. exact (fun_ext (fun x : type234 _90724 A => @lem3521645 _90724 A _37170 x)). Qed.
Lemma lem3521647 {_90724 A : Type'} : (@ex (((A -> Prop) -> Prop) -> ((A -> Prop) -> _90724) -> ((A -> Prop) -> Prop) -> (A -> Prop) -> A -> Prop)) = (@ex (((A -> Prop) -> Prop) -> ((A -> Prop) -> _90724) -> ((A -> Prop) -> Prop) -> (A -> Prop) -> A -> Prop)).
Proof. exact (eq_refl (@ex (((A -> Prop) -> Prop) -> ((A -> Prop) -> _90724) -> ((A -> Prop) -> Prop) -> (A -> Prop) -> A -> Prop))). Qed.
Lemma lem3521648 {_90724 A : Type'} (_37170 : type235 _90724 A) : (term3345 _90724 A _37170) = (term3337 _90724 A _37170).
Proof. exact (MK_COMB (@lem3521647 _90724 A) (@lem3521646 _90724 A _37170)). Qed.
Lemma lem3521649 {_90724 A : Type'} (_37170 : type235 _90724 A) : (term3225 _90724 A _37170) = (term3225 _90724 A _37170).
Proof. exact (eq_refl (term3225 _90724 A _37170)). Qed.
Lemma lem3521650 {_90724 A : Type'} (_37170 : type235 _90724 A) : (term3341 _90724 A _37170) = (term3338 _90724 A _37170).
Proof. exact (MK_COMB (@lem3521649 _90724 A _37170) (@lem3521648 _90724 A _37170)). Qed.
Lemma lem3521651 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem3521652 {_90724 A : Type'} (_37170 : type235 _90724 A) : (term3346 _90724 A _37170) = (term3347 _90724 A _37170).
Proof. exact (MK_COMB (@lem3521651) (@lem3521650 _90724 A _37170)). Qed.
Lemma lem3521653 {_90724 A : Type'} (_37170 : type235 _90724 A) (x : type234 _90724 A) : (term3343 _90724 A _37170 x) = (term3334 _90724 A _37170 x).
Proof. exact (eq_refl (term3343 _90724 A _37170 x)). Qed.
Lemma lem3521654 {_90724 A : Type'} (_37170 : type235 _90724 A) : (term3225 _90724 A _37170) = (term3225 _90724 A _37170).
Proof. exact (eq_refl (term3225 _90724 A _37170)). Qed.
Lemma lem3521655 {_90724 A : Type'} (_37170 : type235 _90724 A) (x : type234 _90724 A) : (term3348 _90724 A _37170 x) = (term3349 _90724 A _37170 x).
Proof. exact (MK_COMB (@lem3521654 _90724 A _37170) (@lem3521653 _90724 A _37170 x)). Qed.
Lemma lem3521656 {_90724 A : Type'} (_37170 : type235 _90724 A) : (term3350 _90724 A _37170) = (term3351 _90724 A _37170).
Proof. exact (fun_ext (fun x : type234 _90724 A => @lem3521655 _90724 A _37170 x)). Qed.
Lemma lem3521657 {_90724 A : Type'} : (@ex (((A -> Prop) -> Prop) -> ((A -> Prop) -> _90724) -> ((A -> Prop) -> Prop) -> (A -> Prop) -> A -> Prop)) = (@ex (((A -> Prop) -> Prop) -> ((A -> Prop) -> _90724) -> ((A -> Prop) -> Prop) -> (A -> Prop) -> A -> Prop)).
Proof. exact (eq_refl (@ex (((A -> Prop) -> Prop) -> ((A -> Prop) -> _90724) -> ((A -> Prop) -> Prop) -> (A -> Prop) -> A -> Prop))). Qed.
Lemma lem3521658 {_90724 A : Type'} (_37170 : type235 _90724 A) : (term3342 _90724 A _37170) = (term3352 _90724 A _37170).
Proof. exact (MK_COMB (@lem3521657 _90724 A) (@lem3521656 _90724 A _37170)). Qed.
Lemma lem3521659 {_90724 A : Type'} (_37170 : type235 _90724 A) : ((term3341 _90724 A _37170) = (term3342 _90724 A _37170)) = ((term3338 _90724 A _37170) = (term3352 _90724 A _37170)).
Proof. exact (MK_COMB (@lem3521652 _90724 A _37170) (@lem3521658 _90724 A _37170)). Qed.
Lemma lem3521660 {_90724 A : Type'} (_37170 : type235 _90724 A) : (term3338 _90724 A _37170) = (term3352 _90724 A _37170).
Proof. exact (EQ_MP (@lem3521659 _90724 A _37170) (@lem3521644 _90724 A _37170)). Qed.
Lemma lem3521661 {_90724 A : Type'} (_37170 : type235 _90724 A) : (term3229 _90724 A _37170) = (term3352 _90724 A _37170).
Proof. exact (TRANS (@lem3521640 _90724 A _37170) (@lem3521660 _90724 A _37170)). Qed.
Lemma lem3521662 {_90724 A : Type'} (_37170 : type235 _90724 A) : (term3141 _90724 A _37170) = (term3352 _90724 A _37170).
Proof. exact (TRANS (@lem3521482 _90724 A _37170) (@lem3521661 _90724 A _37170)). Qed.
Lemma lem3521663 {_90724 A : Type'} (_37170 : type235 _90724 A) : (term2737 _90724 A _37170) = (term3352 _90724 A _37170).
Proof. exact (TRANS (@lem3520886 _90724 A _37170) (@lem3521662 _90724 A _37170)). Qed.
Lemma lem3521664 {_90724 A : Type'} (_37170 : type235 _90724 A) (h1 : term2737 _90724 A _37170) : term3352 _90724 A _37170.
Proof. exact (EQ_MP (@lem3521663 _90724 A _37170) (@lem3520011 _90724 A _37170 h1)). Qed.
Lemma lem3521668 {_90724 B : Type'} (GEN_PVAR_84 : B) (u : B -> Prop) (f : B -> _90724) (t : B -> Prop) (x : B) : (term2058 _90724 B GEN_PVAR_84 u f t x) = (term2058 _90724 B GEN_PVAR_84 u f t x).
Proof. exact (eq_refl (term2058 _90724 B GEN_PVAR_84 u f t x)). Qed.
Lemma lem3521669 {B : Type'} (P : B -> Prop) : (term311 B P) = (term312 B P).
Proof. exact (@lem18394 B P). Qed.
Lemma lem3521670 {_90724 B : Type'} (GEN_PVAR_84 : B) (u : B -> Prop) (f : B -> _90724) (t : B -> Prop) : (term3353 _90724 B GEN_PVAR_84 u f t) = (term3354 _90724 B GEN_PVAR_84 u f t).
Proof. exact (@lem3521669 B (term2059 _90724 B GEN_PVAR_84 u f t)). Qed.
Lemma lem3521671 {_90724 B : Type'} (GEN_PVAR_84 : B) (u : B -> Prop) (f : B -> _90724) (t : B -> Prop) (x : B) : (term3355 _90724 B GEN_PVAR_84 u f t x) = (term2058 _90724 B GEN_PVAR_84 u f t x).
Proof. exact (eq_refl (term3355 _90724 B GEN_PVAR_84 u f t x)). Qed.
Lemma lem3521672 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem3521674 {_90724 B : Type'} (GEN_PVAR_84 : B) (u : B -> Prop) (f : B -> _90724) (t : B -> Prop) (x : B) : (term3356 _90724 B GEN_PVAR_84 u f t x) = (term3357 _90724 B GEN_PVAR_84 u f t x).
Proof. exact (MK_COMB (@lem3521672) (@lem3521671 _90724 B GEN_PVAR_84 u f t x)). Qed.
Lemma lem3521675 {_90724 B : Type'} (GEN_PVAR_84 : B) (u : B -> Prop) (f : B -> _90724) (t : B -> Prop) : (term3358 _90724 B GEN_PVAR_84 u f t) = (term3359 _90724 B GEN_PVAR_84 u f t).
Proof. exact (fun_ext (fun x : B => @lem3521674 _90724 B GEN_PVAR_84 u f t x)). Qed.
Lemma lem3521676 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem3521677 {_90724 B : Type'} (GEN_PVAR_84 : B) (u : B -> Prop) (f : B -> _90724) (t : B -> Prop) : (term3354 _90724 B GEN_PVAR_84 u f t) = (term3360 _90724 B GEN_PVAR_84 u f t).
Proof. exact (MK_COMB (@lem3521676 B) (@lem3521675 _90724 B GEN_PVAR_84 u f t)). Qed.
Lemma lem3521678 {_90724 B : Type'} (GEN_PVAR_84 : B) (u : B -> Prop) (f : B -> _90724) (t : B -> Prop) : (term3353 _90724 B GEN_PVAR_84 u f t) = (term3360 _90724 B GEN_PVAR_84 u f t).
Proof. exact (TRANS (@lem3521670 _90724 B GEN_PVAR_84 u f t) (@lem3521677 _90724 B GEN_PVAR_84 u f t)). Qed.
Lemma lem3521679 {_90724 B : Type'} (GEN_PVAR_84 : B) (u : B -> Prop) (f : B -> _90724) (t : B -> Prop) : (term2059 _90724 B GEN_PVAR_84 u f t) = (term2059 _90724 B GEN_PVAR_84 u f t).
Proof. exact (fun_ext (fun x : B => @lem3521668 _90724 B GEN_PVAR_84 u f t x)). Qed.
Lemma lem3521680 {B : Type'} : (@ex B) = (@ex B).
Proof. exact (eq_refl (@ex B)). Qed.
Lemma lem3521681 {_90724 B : Type'} (GEN_PVAR_84 : B) (u : B -> Prop) (f : B -> _90724) (t : B -> Prop) : (term2060 _90724 B GEN_PVAR_84 u f t) = (term2060 _90724 B GEN_PVAR_84 u f t).
Proof. exact (MK_COMB (@lem3521680 B) (@lem3521679 _90724 B GEN_PVAR_84 u f t)). Qed.
Lemma lem3521683 {_90724 B : Type'} (_37169 : type852 _90724 B) (u : B -> Prop) (f : B -> _90724) (t : B -> Prop) (GEN_PVAR_84 : B) : (term3361 _90724 B _37169 u f t GEN_PVAR_84) = (term3361 _90724 B _37169 u f t GEN_PVAR_84).
Proof. exact (eq_refl (term3361 _90724 B _37169 u f t GEN_PVAR_84)). Qed.
Lemma lem3521684 {_90724 B : Type'} (_37169 : type852 _90724 B) (GEN_PVAR_84 : B) (u : B -> Prop) (f : B -> _90724) (t : B -> Prop) : (term3362 _90724 B _37169 GEN_PVAR_84 u f t) = (term3362 _90724 B _37169 GEN_PVAR_84 u f t).
Proof. exact (MK_COMB (@lem3521683 _90724 B _37169 u f t GEN_PVAR_84) (@lem3521681 _90724 B GEN_PVAR_84 u f t)). Qed.
Lemma lem3521686 {_90724 B : Type'} (_37169 : type852 _90724 B) (u : B -> Prop) (f : B -> _90724) (t : B -> Prop) (GEN_PVAR_84 : B) : (term3363 _90724 B _37169 u f t GEN_PVAR_84) = (term3363 _90724 B _37169 u f t GEN_PVAR_84).
Proof. exact (eq_refl (term3363 _90724 B _37169 u f t GEN_PVAR_84)). Qed.
Lemma lem3521687 {_90724 B : Type'} (_37169 : type852 _90724 B) (GEN_PVAR_84 : B) (u : B -> Prop) (f : B -> _90724) (t : B -> Prop) : (term3364 _90724 B _37169 GEN_PVAR_84 u f t) = (term3365 _90724 B _37169 GEN_PVAR_84 u f t).
Proof. exact (MK_COMB (@lem3521686 _90724 B _37169 u f t GEN_PVAR_84) (@lem3521678 _90724 B GEN_PVAR_84 u f t)). Qed.
Lemma lem3521688 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem3521689 {_90724 B : Type'} (_37169 : type852 _90724 B) (GEN_PVAR_84 : B) (u : B -> Prop) (f : B -> _90724) (t : B -> Prop) : (term3366 _90724 B _37169 GEN_PVAR_84 u f t) = (term3367 _90724 B _37169 GEN_PVAR_84 u f t).
Proof. exact (MK_COMB (@lem3521688) (@lem3521687 _90724 B _37169 GEN_PVAR_84 u f t)). Qed.
Lemma lem3521690 {_90724 B : Type'} (_37169 : type852 _90724 B) (GEN_PVAR_84 : B) (u : B -> Prop) (f : B -> _90724) (t : B -> Prop) : (term3368 _90724 B _37169 GEN_PVAR_84 u f t) = (term3369 _90724 B _37169 GEN_PVAR_84 u f t).
Proof. exact (MK_COMB (@lem3521689 _90724 B _37169 GEN_PVAR_84 u f t) (@lem3521684 _90724 B _37169 GEN_PVAR_84 u f t)). Qed.
Lemma lem3521691 {_90724 B : Type'} (_37169 : type852 _90724 B) (GEN_PVAR_84 : B) (u : B -> Prop) (f : B -> _90724) (t : B -> Prop) : ((_37169 u f t GEN_PVAR_84) = (term2060 _90724 B GEN_PVAR_84 u f t)) = (term3368 _90724 B _37169 GEN_PVAR_84 u f t).
Proof. exact (@lem17784 (_37169 u f t GEN_PVAR_84) (term2060 _90724 B GEN_PVAR_84 u f t)). Qed.
Lemma lem3521692 {_90724 B : Type'} (_37169 : type852 _90724 B) (GEN_PVAR_84 : B) (u : B -> Prop) (f : B -> _90724) (t : B -> Prop) : ((_37169 u f t GEN_PVAR_84) = (term2060 _90724 B GEN_PVAR_84 u f t)) = (term3369 _90724 B _37169 GEN_PVAR_84 u f t).
Proof. exact (TRANS (@lem3521691 _90724 B _37169 GEN_PVAR_84 u f t) (@lem3521690 _90724 B _37169 GEN_PVAR_84 u f t)). Qed.
Lemma lem3521693 {_90724 B : Type'} (_37169 : type852 _90724 B) (u : B -> Prop) (f : B -> _90724) (t : B -> Prop) : (term2546 _90724 B _37169 u f t) = (term3370 _90724 B _37169 u f t).
Proof. exact (fun_ext (fun GEN_PVAR_84 : B => @lem3521692 _90724 B _37169 GEN_PVAR_84 u f t)). Qed.
Lemma lem3521694 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem3521695 {_90724 B : Type'} (_37169 : type852 _90724 B) (u : B -> Prop) (f : B -> _90724) (t : B -> Prop) : (term2547 _90724 B _37169 u f t) = (term3371 _90724 B _37169 u f t).
Proof. exact (MK_COMB (@lem3521694 B) (@lem3521693 _90724 B _37169 u f t)). Qed.
Lemma lem3521696 {_90724 B : Type'} (_37169 : type852 _90724 B) (u : B -> Prop) (f : B -> _90724) : (term2548 _90724 B _37169 u f) = (term3372 _90724 B _37169 u f).
Proof. exact (fun_ext (fun t : B -> Prop => @lem3521695 _90724 B _37169 u f t)). Qed.
Lemma lem3521697 {B : Type'} : (@all (B -> Prop)) = (@all (B -> Prop)).
Proof. exact (eq_refl (@all (B -> Prop))). Qed.
Lemma lem3521698 {_90724 B : Type'} (_37169 : type852 _90724 B) (u : B -> Prop) (f : B -> _90724) : (term2549 _90724 B _37169 u f) = (term3373 _90724 B _37169 u f).
Proof. exact (MK_COMB (@lem3521697 B) (@lem3521696 _90724 B _37169 u f)). Qed.
Lemma lem3521699 {_90724 B : Type'} (_37169 : type852 _90724 B) (u : B -> Prop) : (term2550 _90724 B _37169 u) = (term3374 _90724 B _37169 u).
Proof. exact (fun_ext (fun f : B -> _90724 => @lem3521698 _90724 B _37169 u f)). Qed.
Lemma lem3521700 {_90724 B : Type'} : (@all (B -> _90724)) = (@all (B -> _90724)).
Proof. exact (eq_refl (@all (B -> _90724))). Qed.
Lemma lem3521701 {_90724 B : Type'} (_37169 : type852 _90724 B) (u : B -> Prop) : (term2551 _90724 B _37169 u) = (term3375 _90724 B _37169 u).
Proof. exact (MK_COMB (@lem3521700 _90724 B) (@lem3521699 _90724 B _37169 u)). Qed.
Lemma lem3521702 {_90724 B : Type'} (_37169 : type852 _90724 B) : (term2552 _90724 B _37169) = (term3376 _90724 B _37169).
Proof. exact (fun_ext (fun u : B -> Prop => @lem3521701 _90724 B _37169 u)). Qed.
Lemma lem3521703 {B : Type'} : (@all (B -> Prop)) = (@all (B -> Prop)).
Proof. exact (eq_refl (@all (B -> Prop))). Qed.
Lemma lem3521704 {_90724 B : Type'} (_37169 : type852 _90724 B) : (term2553 _90724 B _37169) = (term3377 _90724 B _37169).
Proof. exact (MK_COMB (@lem3521703 B) (@lem3521702 _90724 B _37169)). Qed.
Lemma lem3521718 {A : Type'} (P : A -> Prop) (Q : A -> Prop) : (term726 A P Q) = (term725 A P Q).
Proof. exact (EQ_MP (@lem18953 A P Q) (@lem18952 A P Q)). Qed.
Lemma lem3521719 {B : Type'} (P : B -> Prop) (Q : B -> Prop) : (term726 B P Q) = (term725 B P Q).
Proof. exact (@lem3521718 B P Q). Qed.
Lemma lem3521720 {_90724 B : Type'} (_37169 : type852 _90724 B) (u : B -> Prop) (f : B -> _90724) (t : B -> Prop) : (term3378 _90724 B _37169 u f t) = (term3379 _90724 B _37169 u f t).
Proof. exact (@lem3521719 B (term3380 _90724 B _37169 u f t) (term3381 _90724 B _37169 u f t)). Qed.
Lemma lem3521721 {_90724 B : Type'} (_37169 : type852 _90724 B) (GEN_PVAR_84 : B) (u : B -> Prop) (f : B -> _90724) (t : B -> Prop) : (term3382 _90724 B _37169 u f t GEN_PVAR_84) = (term3365 _90724 B _37169 GEN_PVAR_84 u f t).
Proof. exact (eq_refl (term3382 _90724 B _37169 u f t GEN_PVAR_84)). Qed.
Lemma lem3521722 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem3521723 {_90724 B : Type'} (_37169 : type852 _90724 B) (GEN_PVAR_84 : B) (u : B -> Prop) (f : B -> _90724) (t : B -> Prop) : (term3383 _90724 B _37169 u f t GEN_PVAR_84) = (term3367 _90724 B _37169 GEN_PVAR_84 u f t).
Proof. exact (MK_COMB (@lem3521722) (@lem3521721 _90724 B _37169 GEN_PVAR_84 u f t)). Qed.
Lemma lem3521724 {_90724 B : Type'} (_37169 : type852 _90724 B) (GEN_PVAR_84 : B) (u : B -> Prop) (f : B -> _90724) (t : B -> Prop) : (term3384 _90724 B _37169 u f t GEN_PVAR_84) = (term3362 _90724 B _37169 GEN_PVAR_84 u f t).
Proof. exact (eq_refl (term3384 _90724 B _37169 u f t GEN_PVAR_84)). Qed.
Lemma lem3521725 {_90724 B : Type'} (_37169 : type852 _90724 B) (GEN_PVAR_84 : B) (u : B -> Prop) (f : B -> _90724) (t : B -> Prop) : (term3385 _90724 B _37169 u f t GEN_PVAR_84) = (term3369 _90724 B _37169 GEN_PVAR_84 u f t).
Proof. exact (MK_COMB (@lem3521723 _90724 B _37169 GEN_PVAR_84 u f t) (@lem3521724 _90724 B _37169 GEN_PVAR_84 u f t)). Qed.
Lemma lem3521726 {_90724 B : Type'} (_37169 : type852 _90724 B) (u : B -> Prop) (f : B -> _90724) (t : B -> Prop) : (term3386 _90724 B _37169 u f t) = (term3370 _90724 B _37169 u f t).
Proof. exact (fun_ext (fun GEN_PVAR_84 : B => @lem3521725 _90724 B _37169 GEN_PVAR_84 u f t)). Qed.
Lemma lem3521727 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem3521728 {_90724 B : Type'} (_37169 : type852 _90724 B) (u : B -> Prop) (f : B -> _90724) (t : B -> Prop) : (term3378 _90724 B _37169 u f t) = (term3371 _90724 B _37169 u f t).
Proof. exact (MK_COMB (@lem3521727 B) (@lem3521726 _90724 B _37169 u f t)). Qed.
Lemma lem3521729 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem3521730 {_90724 B : Type'} (_37169 : type852 _90724 B) (u : B -> Prop) (f : B -> _90724) (t : B -> Prop) : (term3387 _90724 B _37169 u f t) = (term3388 _90724 B _37169 u f t).
Proof. exact (MK_COMB (@lem3521729) (@lem3521728 _90724 B _37169 u f t)). Qed.
Lemma lem3521731 {_90724 B : Type'} (_37169 : type852 _90724 B) (GEN_PVAR_84 : B) (u : B -> Prop) (f : B -> _90724) (t : B -> Prop) : (term3382 _90724 B _37169 u f t GEN_PVAR_84) = (term3365 _90724 B _37169 GEN_PVAR_84 u f t).
Proof. exact (eq_refl (term3382 _90724 B _37169 u f t GEN_PVAR_84)). Qed.
Lemma lem3521732 {_90724 B : Type'} (_37169 : type852 _90724 B) (u : B -> Prop) (f : B -> _90724) (t : B -> Prop) : (term3389 _90724 B _37169 u f t) = (term3380 _90724 B _37169 u f t).
Proof. exact (fun_ext (fun GEN_PVAR_84 : B => @lem3521731 _90724 B _37169 GEN_PVAR_84 u f t)). Qed.
Lemma lem3521733 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem3521734 {_90724 B : Type'} (_37169 : type852 _90724 B) (u : B -> Prop) (f : B -> _90724) (t : B -> Prop) : (term3390 _90724 B _37169 u f t) = (term3391 _90724 B _37169 u f t).
Proof. exact (MK_COMB (@lem3521733 B) (@lem3521732 _90724 B _37169 u f t)). Qed.
Lemma lem3521735 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem3521736 {_90724 B : Type'} (_37169 : type852 _90724 B) (u : B -> Prop) (f : B -> _90724) (t : B -> Prop) : (term3392 _90724 B _37169 u f t) = (term3393 _90724 B _37169 u f t).
Proof. exact (MK_COMB (@lem3521735) (@lem3521734 _90724 B _37169 u f t)). Qed.
Lemma lem3521737 {_90724 B : Type'} (_37169 : type852 _90724 B) (GEN_PVAR_84 : B) (u : B -> Prop) (f : B -> _90724) (t : B -> Prop) : (term3384 _90724 B _37169 u f t GEN_PVAR_84) = (term3362 _90724 B _37169 GEN_PVAR_84 u f t).
Proof. exact (eq_refl (term3384 _90724 B _37169 u f t GEN_PVAR_84)). Qed.
Lemma lem3521738 {_90724 B : Type'} (_37169 : type852 _90724 B) (u : B -> Prop) (f : B -> _90724) (t : B -> Prop) : (term3394 _90724 B _37169 u f t) = (term3381 _90724 B _37169 u f t).
Proof. exact (fun_ext (fun GEN_PVAR_84 : B => @lem3521737 _90724 B _37169 GEN_PVAR_84 u f t)). Qed.
Lemma lem3521739 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem3521740 {_90724 B : Type'} (_37169 : type852 _90724 B) (u : B -> Prop) (f : B -> _90724) (t : B -> Prop) : (term3395 _90724 B _37169 u f t) = (term3396 _90724 B _37169 u f t).
Proof. exact (MK_COMB (@lem3521739 B) (@lem3521738 _90724 B _37169 u f t)). Qed.
Lemma lem3521741 {_90724 B : Type'} (_37169 : type852 _90724 B) (u : B -> Prop) (f : B -> _90724) (t : B -> Prop) : (term3379 _90724 B _37169 u f t) = (term3397 _90724 B _37169 u f t).
Proof. exact (MK_COMB (@lem3521736 _90724 B _37169 u f t) (@lem3521740 _90724 B _37169 u f t)). Qed.
Lemma lem3521742 {_90724 B : Type'} (_37169 : type852 _90724 B) (u : B -> Prop) (f : B -> _90724) (t : B -> Prop) : ((term3378 _90724 B _37169 u f t) = (term3379 _90724 B _37169 u f t)) = ((term3371 _90724 B _37169 u f t) = (term3397 _90724 B _37169 u f t)).
Proof. exact (MK_COMB (@lem3521730 _90724 B _37169 u f t) (@lem3521741 _90724 B _37169 u f t)). Qed.
Lemma lem3521743 {_90724 B : Type'} (_37169 : type852 _90724 B) (u : B -> Prop) (f : B -> _90724) (t : B -> Prop) : (term3371 _90724 B _37169 u f t) = (term3397 _90724 B _37169 u f t).
Proof. exact (EQ_MP (@lem3521742 _90724 B _37169 u f t) (@lem3521720 _90724 B _37169 u f t)). Qed.
Lemma lem3521848 {_90724 B : Type'} (_37169 : type852 _90724 B) (u : B -> Prop) (f : B -> _90724) : (term3372 _90724 B _37169 u f) = (term3398 _90724 B _37169 u f).
Proof. exact (fun_ext (fun t : B -> Prop => @lem3521743 _90724 B _37169 u f t)). Qed.
Lemma lem3521849 {B : Type'} : (@all (B -> Prop)) = (@all (B -> Prop)).
Proof. exact (eq_refl (@all (B -> Prop))). Qed.
Lemma lem3521850 {_90724 B : Type'} (_37169 : type852 _90724 B) (u : B -> Prop) (f : B -> _90724) : (term3373 _90724 B _37169 u f) = (term3399 _90724 B _37169 u f).
Proof. exact (MK_COMB (@lem3521849 B) (@lem3521848 _90724 B _37169 u f)). Qed.
Lemma lem3521852 {A : Type'} (P : A -> Prop) (Q : A -> Prop) : (term726 A P Q) = (term725 A P Q).
Proof. exact (EQ_MP (@lem18953 A P Q) (@lem18952 A P Q)). Qed.
Lemma lem3521853 {B : Type'} (P : type686 B) (Q : type686 B) : (term2898 B P Q) = (term2899 B P Q).
Proof. exact (@lem3521852 (B -> Prop) P Q). Qed.
Lemma lem3521854 {_90724 B : Type'} (_37169 : type852 _90724 B) (u : B -> Prop) (f : B -> _90724) : (term3400 _90724 B _37169 u f) = (term3401 _90724 B _37169 u f).
Proof. exact (@lem3521853 B (term3402 _90724 B _37169 u f) (term3403 _90724 B _37169 u f)). Qed.
Lemma lem3521855 {_90724 B : Type'} (_37169 : type852 _90724 B) (u : B -> Prop) (f : B -> _90724) (t : B -> Prop) : (term3404 _90724 B _37169 u f t) = (term3391 _90724 B _37169 u f t).
Proof. exact (eq_refl (term3404 _90724 B _37169 u f t)). Qed.
Lemma lem3521856 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem3521857 {_90724 B : Type'} (_37169 : type852 _90724 B) (u : B -> Prop) (f : B -> _90724) (t : B -> Prop) : (term3405 _90724 B _37169 u f t) = (term3393 _90724 B _37169 u f t).
Proof. exact (MK_COMB (@lem3521856) (@lem3521855 _90724 B _37169 u f t)). Qed.
Lemma lem3521858 {_90724 B : Type'} (_37169 : type852 _90724 B) (u : B -> Prop) (f : B -> _90724) (t : B -> Prop) : (term3406 _90724 B _37169 u f t) = (term3396 _90724 B _37169 u f t).
Proof. exact (eq_refl (term3406 _90724 B _37169 u f t)). Qed.
Lemma lem3521859 {_90724 B : Type'} (_37169 : type852 _90724 B) (u : B -> Prop) (f : B -> _90724) (t : B -> Prop) : (term3407 _90724 B _37169 u f t) = (term3397 _90724 B _37169 u f t).
Proof. exact (MK_COMB (@lem3521857 _90724 B _37169 u f t) (@lem3521858 _90724 B _37169 u f t)). Qed.
Lemma lem3521860 {_90724 B : Type'} (_37169 : type852 _90724 B) (u : B -> Prop) (f : B -> _90724) : (term3408 _90724 B _37169 u f) = (term3398 _90724 B _37169 u f).
Proof. exact (fun_ext (fun t : B -> Prop => @lem3521859 _90724 B _37169 u f t)). Qed.
Lemma lem3521861 {B : Type'} : (@all (B -> Prop)) = (@all (B -> Prop)).
Proof. exact (eq_refl (@all (B -> Prop))). Qed.
Lemma lem3521862 {_90724 B : Type'} (_37169 : type852 _90724 B) (u : B -> Prop) (f : B -> _90724) : (term3400 _90724 B _37169 u f) = (term3399 _90724 B _37169 u f).
Proof. exact (MK_COMB (@lem3521861 B) (@lem3521860 _90724 B _37169 u f)). Qed.
Lemma lem3521863 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem3521864 {_90724 B : Type'} (_37169 : type852 _90724 B) (u : B -> Prop) (f : B -> _90724) : (term3409 _90724 B _37169 u f) = (term3410 _90724 B _37169 u f).
Proof. exact (MK_COMB (@lem3521863) (@lem3521862 _90724 B _37169 u f)). Qed.
Lemma lem3521865 {_90724 B : Type'} (_37169 : type852 _90724 B) (u : B -> Prop) (f : B -> _90724) (t : B -> Prop) : (term3404 _90724 B _37169 u f t) = (term3391 _90724 B _37169 u f t).
Proof. exact (eq_refl (term3404 _90724 B _37169 u f t)). Qed.
Lemma lem3521866 {_90724 B : Type'} (_37169 : type852 _90724 B) (u : B -> Prop) (f : B -> _90724) : (term3411 _90724 B _37169 u f) = (term3402 _90724 B _37169 u f).
Proof. exact (fun_ext (fun t : B -> Prop => @lem3521865 _90724 B _37169 u f t)). Qed.
Lemma lem3521867 {B : Type'} : (@all (B -> Prop)) = (@all (B -> Prop)).
Proof. exact (eq_refl (@all (B -> Prop))). Qed.
Lemma lem3521868 {_90724 B : Type'} (_37169 : type852 _90724 B) (u : B -> Prop) (f : B -> _90724) : (term3412 _90724 B _37169 u f) = (term3413 _90724 B _37169 u f).
Proof. exact (MK_COMB (@lem3521867 B) (@lem3521866 _90724 B _37169 u f)). Qed.
Lemma lem3521869 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem3521870 {_90724 B : Type'} (_37169 : type852 _90724 B) (u : B -> Prop) (f : B -> _90724) : (term3414 _90724 B _37169 u f) = (term3415 _90724 B _37169 u f).
Proof. exact (MK_COMB (@lem3521869) (@lem3521868 _90724 B _37169 u f)). Qed.
Lemma lem3521871 {_90724 B : Type'} (_37169 : type852 _90724 B) (u : B -> Prop) (f : B -> _90724) (t : B -> Prop) : (term3406 _90724 B _37169 u f t) = (term3396 _90724 B _37169 u f t).
Proof. exact (eq_refl (term3406 _90724 B _37169 u f t)). Qed.
Lemma lem3521872 {_90724 B : Type'} (_37169 : type852 _90724 B) (u : B -> Prop) (f : B -> _90724) : (term3416 _90724 B _37169 u f) = (term3403 _90724 B _37169 u f).
Proof. exact (fun_ext (fun t : B -> Prop => @lem3521871 _90724 B _37169 u f t)). Qed.
Lemma lem3521873 {B : Type'} : (@all (B -> Prop)) = (@all (B -> Prop)).
Proof. exact (eq_refl (@all (B -> Prop))). Qed.
Lemma lem3521874 {_90724 B : Type'} (_37169 : type852 _90724 B) (u : B -> Prop) (f : B -> _90724) : (term3417 _90724 B _37169 u f) = (term3418 _90724 B _37169 u f).
Proof. exact (MK_COMB (@lem3521873 B) (@lem3521872 _90724 B _37169 u f)). Qed.
Lemma lem3521875 {_90724 B : Type'} (_37169 : type852 _90724 B) (u : B -> Prop) (f : B -> _90724) : (term3401 _90724 B _37169 u f) = (term3419 _90724 B _37169 u f).
Proof. exact (MK_COMB (@lem3521870 _90724 B _37169 u f) (@lem3521874 _90724 B _37169 u f)). Qed.
Lemma lem3521876 {_90724 B : Type'} (_37169 : type852 _90724 B) (u : B -> Prop) (f : B -> _90724) : ((term3400 _90724 B _37169 u f) = (term3401 _90724 B _37169 u f)) = ((term3399 _90724 B _37169 u f) = (term3419 _90724 B _37169 u f)).
Proof. exact (MK_COMB (@lem3521864 _90724 B _37169 u f) (@lem3521875 _90724 B _37169 u f)). Qed.
Lemma lem3521877 {_90724 B : Type'} (_37169 : type852 _90724 B) (u : B -> Prop) (f : B -> _90724) : (term3399 _90724 B _37169 u f) = (term3419 _90724 B _37169 u f).
Proof. exact (EQ_MP (@lem3521876 _90724 B _37169 u f) (@lem3521854 _90724 B _37169 u f)). Qed.
Lemma lem3521990 {_90724 B : Type'} (_37169 : type852 _90724 B) (u : B -> Prop) (f : B -> _90724) : (term3373 _90724 B _37169 u f) = (term3419 _90724 B _37169 u f).
Proof. exact (TRANS (@lem3521850 _90724 B _37169 u f) (@lem3521877 _90724 B _37169 u f)). Qed.
Lemma lem3521991 {_90724 B : Type'} (_37169 : type852 _90724 B) (u : B -> Prop) : (term3374 _90724 B _37169 u) = (term3420 _90724 B _37169 u).
Proof. exact (fun_ext (fun f : B -> _90724 => @lem3521990 _90724 B _37169 u f)). Qed.
Lemma lem3521992 {_90724 B : Type'} : (@all (B -> _90724)) = (@all (B -> _90724)).
Proof. exact (eq_refl (@all (B -> _90724))). Qed.
Lemma lem3521993 {_90724 B : Type'} (_37169 : type852 _90724 B) (u : B -> Prop) : (term3375 _90724 B _37169 u) = (term3421 _90724 B _37169 u).
Proof. exact (MK_COMB (@lem3521992 _90724 B) (@lem3521991 _90724 B _37169 u)). Qed.
Lemma lem3521995 {A : Type'} (P : A -> Prop) (Q : A -> Prop) : (term726 A P Q) = (term725 A P Q).
Proof. exact (EQ_MP (@lem18953 A P Q) (@lem18952 A P Q)). Qed.
Lemma lem3521996 {_90724 B : Type'} (P : type805 _90724 B) (Q : type805 _90724 B) : (term3422 _90724 B P Q) = (term3423 _90724 B P Q).
Proof. exact (@lem3521995 (B -> _90724) P Q). Qed.
Lemma lem3521997 {_90724 B : Type'} (_37169 : type852 _90724 B) (u : B -> Prop) : (term3424 _90724 B _37169 u) = (term3425 _90724 B _37169 u).
Proof. exact (@lem3521996 _90724 B (term3426 _90724 B _37169 u) (term3427 _90724 B _37169 u)). Qed.
Lemma lem3521998 {_90724 B : Type'} (_37169 : type852 _90724 B) (u : B -> Prop) (f : B -> _90724) : (term3428 _90724 B _37169 u f) = (term3413 _90724 B _37169 u f).
Proof. exact (eq_refl (term3428 _90724 B _37169 u f)). Qed.
Lemma lem3521999 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem3522000 {_90724 B : Type'} (_37169 : type852 _90724 B) (u : B -> Prop) (f : B -> _90724) : (term3429 _90724 B _37169 u f) = (term3415 _90724 B _37169 u f).
Proof. exact (MK_COMB (@lem3521999) (@lem3521998 _90724 B _37169 u f)). Qed.
Lemma lem3522001 {_90724 B : Type'} (_37169 : type852 _90724 B) (u : B -> Prop) (f : B -> _90724) : (term3430 _90724 B _37169 u f) = (term3418 _90724 B _37169 u f).
Proof. exact (eq_refl (term3430 _90724 B _37169 u f)). Qed.
Lemma lem3522002 {_90724 B : Type'} (_37169 : type852 _90724 B) (u : B -> Prop) (f : B -> _90724) : (term3431 _90724 B _37169 u f) = (term3419 _90724 B _37169 u f).
Proof. exact (MK_COMB (@lem3522000 _90724 B _37169 u f) (@lem3522001 _90724 B _37169 u f)). Qed.
Lemma lem3522003 {_90724 B : Type'} (_37169 : type852 _90724 B) (u : B -> Prop) : (term3432 _90724 B _37169 u) = (term3420 _90724 B _37169 u).
Proof. exact (fun_ext (fun f : B -> _90724 => @lem3522002 _90724 B _37169 u f)). Qed.
Lemma lem3522004 {_90724 B : Type'} : (@all (B -> _90724)) = (@all (B -> _90724)).
Proof. exact (eq_refl (@all (B -> _90724))). Qed.
Lemma lem3522005 {_90724 B : Type'} (_37169 : type852 _90724 B) (u : B -> Prop) : (term3424 _90724 B _37169 u) = (term3421 _90724 B _37169 u).
Proof. exact (MK_COMB (@lem3522004 _90724 B) (@lem3522003 _90724 B _37169 u)). Qed.
Lemma lem3522006 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem3522007 {_90724 B : Type'} (_37169 : type852 _90724 B) (u : B -> Prop) : (term3433 _90724 B _37169 u) = (term3434 _90724 B _37169 u).
Proof. exact (MK_COMB (@lem3522006) (@lem3522005 _90724 B _37169 u)). Qed.
Lemma lem3522008 {_90724 B : Type'} (_37169 : type852 _90724 B) (u : B -> Prop) (f : B -> _90724) : (term3428 _90724 B _37169 u f) = (term3413 _90724 B _37169 u f).
Proof. exact (eq_refl (term3428 _90724 B _37169 u f)). Qed.
Lemma lem3522009 {_90724 B : Type'} (_37169 : type852 _90724 B) (u : B -> Prop) : (term3435 _90724 B _37169 u) = (term3426 _90724 B _37169 u).
Proof. exact (fun_ext (fun f : B -> _90724 => @lem3522008 _90724 B _37169 u f)). Qed.
Lemma lem3522010 {_90724 B : Type'} : (@all (B -> _90724)) = (@all (B -> _90724)).
Proof. exact (eq_refl (@all (B -> _90724))). Qed.
Lemma lem3522011 {_90724 B : Type'} (_37169 : type852 _90724 B) (u : B -> Prop) : (term3436 _90724 B _37169 u) = (term3437 _90724 B _37169 u).
Proof. exact (MK_COMB (@lem3522010 _90724 B) (@lem3522009 _90724 B _37169 u)). Qed.
Lemma lem3522012 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem3522013 {_90724 B : Type'} (_37169 : type852 _90724 B) (u : B -> Prop) : (term3438 _90724 B _37169 u) = (term3439 _90724 B _37169 u).
Proof. exact (MK_COMB (@lem3522012) (@lem3522011 _90724 B _37169 u)). Qed.
Lemma lem3522014 {_90724 B : Type'} (_37169 : type852 _90724 B) (u : B -> Prop) (f : B -> _90724) : (term3430 _90724 B _37169 u f) = (term3418 _90724 B _37169 u f).
Proof. exact (eq_refl (term3430 _90724 B _37169 u f)). Qed.
Lemma lem3522015 {_90724 B : Type'} (_37169 : type852 _90724 B) (u : B -> Prop) : (term3440 _90724 B _37169 u) = (term3427 _90724 B _37169 u).
Proof. exact (fun_ext (fun f : B -> _90724 => @lem3522014 _90724 B _37169 u f)). Qed.
Lemma lem3522016 {_90724 B : Type'} : (@all (B -> _90724)) = (@all (B -> _90724)).
Proof. exact (eq_refl (@all (B -> _90724))). Qed.
Lemma lem3522017 {_90724 B : Type'} (_37169 : type852 _90724 B) (u : B -> Prop) : (term3441 _90724 B _37169 u) = (term3442 _90724 B _37169 u).
Proof. exact (MK_COMB (@lem3522016 _90724 B) (@lem3522015 _90724 B _37169 u)). Qed.
Lemma lem3522018 {_90724 B : Type'} (_37169 : type852 _90724 B) (u : B -> Prop) : (term3425 _90724 B _37169 u) = (term3443 _90724 B _37169 u).
Proof. exact (MK_COMB (@lem3522013 _90724 B _37169 u) (@lem3522017 _90724 B _37169 u)). Qed.
Lemma lem3522019 {_90724 B : Type'} (_37169 : type852 _90724 B) (u : B -> Prop) : ((term3424 _90724 B _37169 u) = (term3425 _90724 B _37169 u)) = ((term3421 _90724 B _37169 u) = (term3443 _90724 B _37169 u)).
Proof. exact (MK_COMB (@lem3522007 _90724 B _37169 u) (@lem3522018 _90724 B _37169 u)). Qed.
Lemma lem3522020 {_90724 B : Type'} (_37169 : type852 _90724 B) (u : B -> Prop) : (term3421 _90724 B _37169 u) = (term3443 _90724 B _37169 u).
Proof. exact (EQ_MP (@lem3522019 _90724 B _37169 u) (@lem3521997 _90724 B _37169 u)). Qed.
Lemma lem3522141 {_90724 B : Type'} (_37169 : type852 _90724 B) (u : B -> Prop) : (term3375 _90724 B _37169 u) = (term3443 _90724 B _37169 u).
Proof. exact (TRANS (@lem3521993 _90724 B _37169 u) (@lem3522020 _90724 B _37169 u)). Qed.
Lemma lem3522142 {_90724 B : Type'} (_37169 : type852 _90724 B) : (term3376 _90724 B _37169) = (term3444 _90724 B _37169).
Proof. exact (fun_ext (fun u : B -> Prop => @lem3522141 _90724 B _37169 u)). Qed.
Lemma lem3522143 {B : Type'} : (@all (B -> Prop)) = (@all (B -> Prop)).
Proof. exact (eq_refl (@all (B -> Prop))). Qed.
Lemma lem3522144 {_90724 B : Type'} (_37169 : type852 _90724 B) : (term3377 _90724 B _37169) = (term3445 _90724 B _37169).
Proof. exact (MK_COMB (@lem3522143 B) (@lem3522142 _90724 B _37169)). Qed.
Lemma lem3522146 {A : Type'} (P : A -> Prop) (Q : A -> Prop) : (term726 A P Q) = (term725 A P Q).
Proof. exact (EQ_MP (@lem18953 A P Q) (@lem18952 A P Q)). Qed.
Lemma lem3522147 {B : Type'} (P : type686 B) (Q : type686 B) : (term2898 B P Q) = (term2899 B P Q).
Proof. exact (@lem3522146 (B -> Prop) P Q). Qed.
Lemma lem3522148 {_90724 B : Type'} (_37169 : type852 _90724 B) : (term3446 _90724 B _37169) = (term3447 _90724 B _37169).
Proof. exact (@lem3522147 B (term3448 _90724 B _37169) (term3449 _90724 B _37169)). Qed.
Lemma lem3522149 {_90724 B : Type'} (_37169 : type852 _90724 B) (u : B -> Prop) : (term3450 _90724 B _37169 u) = (term3437 _90724 B _37169 u).
Proof. exact (eq_refl (term3450 _90724 B _37169 u)). Qed.
Lemma lem3522150 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem3522151 {_90724 B : Type'} (_37169 : type852 _90724 B) (u : B -> Prop) : (term3451 _90724 B _37169 u) = (term3439 _90724 B _37169 u).
Proof. exact (MK_COMB (@lem3522150) (@lem3522149 _90724 B _37169 u)). Qed.
Lemma lem3522152 {_90724 B : Type'} (_37169 : type852 _90724 B) (u : B -> Prop) : (term3452 _90724 B _37169 u) = (term3442 _90724 B _37169 u).
Proof. exact (eq_refl (term3452 _90724 B _37169 u)). Qed.
Lemma lem3522153 {_90724 B : Type'} (_37169 : type852 _90724 B) (u : B -> Prop) : (term3453 _90724 B _37169 u) = (term3443 _90724 B _37169 u).
Proof. exact (MK_COMB (@lem3522151 _90724 B _37169 u) (@lem3522152 _90724 B _37169 u)). Qed.
Lemma lem3522154 {_90724 B : Type'} (_37169 : type852 _90724 B) : (term3454 _90724 B _37169) = (term3444 _90724 B _37169).
Proof. exact (fun_ext (fun u : B -> Prop => @lem3522153 _90724 B _37169 u)). Qed.
Lemma lem3522155 {B : Type'} : (@all (B -> Prop)) = (@all (B -> Prop)).
Proof. exact (eq_refl (@all (B -> Prop))). Qed.
Lemma lem3522156 {_90724 B : Type'} (_37169 : type852 _90724 B) : (term3446 _90724 B _37169) = (term3445 _90724 B _37169).
Proof. exact (MK_COMB (@lem3522155 B) (@lem3522154 _90724 B _37169)). Qed.
Lemma lem3522157 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem3522158 {_90724 B : Type'} (_37169 : type852 _90724 B) : (term3455 _90724 B _37169) = (term3456 _90724 B _37169).
Proof. exact (MK_COMB (@lem3522157) (@lem3522156 _90724 B _37169)). Qed.
Lemma lem3522159 {_90724 B : Type'} (_37169 : type852 _90724 B) (u : B -> Prop) : (term3450 _90724 B _37169 u) = (term3437 _90724 B _37169 u).
Proof. exact (eq_refl (term3450 _90724 B _37169 u)). Qed.
Lemma lem3522160 {_90724 B : Type'} (_37169 : type852 _90724 B) : (term3457 _90724 B _37169) = (term3448 _90724 B _37169).
Proof. exact (fun_ext (fun u : B -> Prop => @lem3522159 _90724 B _37169 u)). Qed.
Lemma lem3522161 {B : Type'} : (@all (B -> Prop)) = (@all (B -> Prop)).
Proof. exact (eq_refl (@all (B -> Prop))). Qed.
Lemma lem3522162 {_90724 B : Type'} (_37169 : type852 _90724 B) : (term3458 _90724 B _37169) = (term3459 _90724 B _37169).
Proof. exact (MK_COMB (@lem3522161 B) (@lem3522160 _90724 B _37169)). Qed.
Lemma lem3522163 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem3522164 {_90724 B : Type'} (_37169 : type852 _90724 B) : (term3460 _90724 B _37169) = (term3461 _90724 B _37169).
Proof. exact (MK_COMB (@lem3522163) (@lem3522162 _90724 B _37169)). Qed.
Lemma lem3522165 {_90724 B : Type'} (_37169 : type852 _90724 B) (u : B -> Prop) : (term3452 _90724 B _37169 u) = (term3442 _90724 B _37169 u).
Proof. exact (eq_refl (term3452 _90724 B _37169 u)). Qed.
Lemma lem3522166 {_90724 B : Type'} (_37169 : type852 _90724 B) : (term3462 _90724 B _37169) = (term3449 _90724 B _37169).
Proof. exact (fun_ext (fun u : B -> Prop => @lem3522165 _90724 B _37169 u)). Qed.
Lemma lem3522167 {B : Type'} : (@all (B -> Prop)) = (@all (B -> Prop)).
Proof. exact (eq_refl (@all (B -> Prop))). Qed.
Lemma lem3522168 {_90724 B : Type'} (_37169 : type852 _90724 B) : (term3463 _90724 B _37169) = (term3464 _90724 B _37169).
Proof. exact (MK_COMB (@lem3522167 B) (@lem3522166 _90724 B _37169)). Qed.
Lemma lem3522169 {_90724 B : Type'} (_37169 : type852 _90724 B) : (term3447 _90724 B _37169) = (term3465 _90724 B _37169).
Proof. exact (MK_COMB (@lem3522164 _90724 B _37169) (@lem3522168 _90724 B _37169)). Qed.
Lemma lem3522170 {_90724 B : Type'} (_37169 : type852 _90724 B) : ((term3446 _90724 B _37169) = (term3447 _90724 B _37169)) = ((term3445 _90724 B _37169) = (term3465 _90724 B _37169)).
Proof. exact (MK_COMB (@lem3522158 _90724 B _37169) (@lem3522169 _90724 B _37169)). Qed.
Lemma lem3522171 {_90724 B : Type'} (_37169 : type852 _90724 B) : (term3445 _90724 B _37169) = (term3465 _90724 B _37169).
Proof. exact (EQ_MP (@lem3522170 _90724 B _37169) (@lem3522148 _90724 B _37169)). Qed.
Lemma lem3522300 {_90724 B : Type'} (_37169 : type852 _90724 B) : (term3377 _90724 B _37169) = (term3465 _90724 B _37169).
Proof. exact (TRANS (@lem3522144 _90724 B _37169) (@lem3522171 _90724 B _37169)). Qed.
Lemma lem3522302 {A : Type'} (P : Prop) (Q : A -> Prop) : (term434 A P Q) = (term435 A P Q).
Proof. exact (EQ_MP (@lem18911 A P Q) (@lem18910 A P Q)). Qed.
Lemma lem3522303 {B : Type'} (P : Prop) (Q : B -> Prop) : (term434 B P Q) = (term435 B P Q).
Proof. exact (@lem3522302 B P Q). Qed.
Lemma lem3522304 {_90724 B : Type'} (_37169 : type852 _90724 B) (GEN_PVAR_84 : B) (u : B -> Prop) (f : B -> _90724) (t : B -> Prop) : (term3466 _90724 B _37169 GEN_PVAR_84 u f t) = (term3467 _90724 B _37169 GEN_PVAR_84 u f t).
Proof. exact (@lem3522303 B (term3468 _90724 B _37169 u f t GEN_PVAR_84) (term2059 _90724 B GEN_PVAR_84 u f t)). Qed.
Lemma lem3522305 {_90724 B : Type'} (GEN_PVAR_84 : B) (u : B -> Prop) (f : B -> _90724) (t : B -> Prop) (x : B) : (term3355 _90724 B GEN_PVAR_84 u f t x) = (term2058 _90724 B GEN_PVAR_84 u f t x).
Proof. exact (eq_refl (term3355 _90724 B GEN_PVAR_84 u f t x)). Qed.
Lemma lem3522306 {_90724 B : Type'} (GEN_PVAR_84 : B) (u : B -> Prop) (f : B -> _90724) (t : B -> Prop) : (term3469 _90724 B GEN_PVAR_84 u f t) = (term2059 _90724 B GEN_PVAR_84 u f t).
Proof. exact (fun_ext (fun x : B => @lem3522305 _90724 B GEN_PVAR_84 u f t x)). Qed.
Lemma lem3522307 {B : Type'} : (@ex B) = (@ex B).
Proof. exact (eq_refl (@ex B)). Qed.
Lemma lem3522308 {_90724 B : Type'} (GEN_PVAR_84 : B) (u : B -> Prop) (f : B -> _90724) (t : B -> Prop) : (term3470 _90724 B GEN_PVAR_84 u f t) = (term2060 _90724 B GEN_PVAR_84 u f t).
Proof. exact (MK_COMB (@lem3522307 B) (@lem3522306 _90724 B GEN_PVAR_84 u f t)). Qed.
Lemma lem3522309 {_90724 B : Type'} (_37169 : type852 _90724 B) (u : B -> Prop) (f : B -> _90724) (t : B -> Prop) (GEN_PVAR_84 : B) : (term3361 _90724 B _37169 u f t GEN_PVAR_84) = (term3361 _90724 B _37169 u f t GEN_PVAR_84).
Proof. exact (eq_refl (term3361 _90724 B _37169 u f t GEN_PVAR_84)). Qed.
Lemma lem3522310 {_90724 B : Type'} (_37169 : type852 _90724 B) (GEN_PVAR_84 : B) (u : B -> Prop) (f : B -> _90724) (t : B -> Prop) : (term3466 _90724 B _37169 GEN_PVAR_84 u f t) = (term3362 _90724 B _37169 GEN_PVAR_84 u f t).
Proof. exact (MK_COMB (@lem3522309 _90724 B _37169 u f t GEN_PVAR_84) (@lem3522308 _90724 B GEN_PVAR_84 u f t)). Qed.
Lemma lem3522311 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem3522312 {_90724 B : Type'} (_37169 : type852 _90724 B) (GEN_PVAR_84 : B) (u : B -> Prop) (f : B -> _90724) (t : B -> Prop) : (term3471 _90724 B _37169 GEN_PVAR_84 u f t) = (term3472 _90724 B _37169 GEN_PVAR_84 u f t).
Proof. exact (MK_COMB (@lem3522311) (@lem3522310 _90724 B _37169 GEN_PVAR_84 u f t)). Qed.
Lemma lem3522313 {_90724 B : Type'} (GEN_PVAR_84 : B) (u : B -> Prop) (f : B -> _90724) (t : B -> Prop) (x : B) : (term3355 _90724 B GEN_PVAR_84 u f t x) = (term2058 _90724 B GEN_PVAR_84 u f t x).
Proof. exact (eq_refl (term3355 _90724 B GEN_PVAR_84 u f t x)). Qed.
Lemma lem3522314 {_90724 B : Type'} (_37169 : type852 _90724 B) (u : B -> Prop) (f : B -> _90724) (t : B -> Prop) (GEN_PVAR_84 : B) : (term3361 _90724 B _37169 u f t GEN_PVAR_84) = (term3361 _90724 B _37169 u f t GEN_PVAR_84).
Proof. exact (eq_refl (term3361 _90724 B _37169 u f t GEN_PVAR_84)). Qed.
Lemma lem3522315 {_90724 B : Type'} (_37169 : type852 _90724 B) (GEN_PVAR_84 : B) (u : B -> Prop) (f : B -> _90724) (t : B -> Prop) (x : B) : (term3473 _90724 B _37169 GEN_PVAR_84 u f t x) = (term3474 _90724 B _37169 GEN_PVAR_84 u f t x).
Proof. exact (MK_COMB (@lem3522314 _90724 B _37169 u f t GEN_PVAR_84) (@lem3522313 _90724 B GEN_PVAR_84 u f t x)). Qed.
Lemma lem3522316 {_90724 B : Type'} (_37169 : type852 _90724 B) (GEN_PVAR_84 : B) (u : B -> Prop) (f : B -> _90724) (t : B -> Prop) : (term3475 _90724 B _37169 GEN_PVAR_84 u f t) = (term3476 _90724 B _37169 GEN_PVAR_84 u f t).
Proof. exact (fun_ext (fun x : B => @lem3522315 _90724 B _37169 GEN_PVAR_84 u f t x)). Qed.
Lemma lem3522317 {B : Type'} : (@ex B) = (@ex B).
Proof. exact (eq_refl (@ex B)). Qed.
Lemma lem3522318 {_90724 B : Type'} (_37169 : type852 _90724 B) (GEN_PVAR_84 : B) (u : B -> Prop) (f : B -> _90724) (t : B -> Prop) : (term3467 _90724 B _37169 GEN_PVAR_84 u f t) = (term3477 _90724 B _37169 GEN_PVAR_84 u f t).
Proof. exact (MK_COMB (@lem3522317 B) (@lem3522316 _90724 B _37169 GEN_PVAR_84 u f t)). Qed.
Lemma lem3522319 {_90724 B : Type'} (_37169 : type852 _90724 B) (GEN_PVAR_84 : B) (u : B -> Prop) (f : B -> _90724) (t : B -> Prop) : ((term3466 _90724 B _37169 GEN_PVAR_84 u f t) = (term3467 _90724 B _37169 GEN_PVAR_84 u f t)) = ((term3362 _90724 B _37169 GEN_PVAR_84 u f t) = (term3477 _90724 B _37169 GEN_PVAR_84 u f t)).
Proof. exact (MK_COMB (@lem3522312 _90724 B _37169 GEN_PVAR_84 u f t) (@lem3522318 _90724 B _37169 GEN_PVAR_84 u f t)). Qed.
Lemma lem3522320 {_90724 B : Type'} (_37169 : type852 _90724 B) (GEN_PVAR_84 : B) (u : B -> Prop) (f : B -> _90724) (t : B -> Prop) : (term3362 _90724 B _37169 GEN_PVAR_84 u f t) = (term3477 _90724 B _37169 GEN_PVAR_84 u f t).
Proof. exact (EQ_MP (@lem3522319 _90724 B _37169 GEN_PVAR_84 u f t) (@lem3522304 _90724 B _37169 GEN_PVAR_84 u f t)). Qed.
Lemma lem3522321 {_90724 B : Type'} (_37169 : type852 _90724 B) (u : B -> Prop) (f : B -> _90724) (t : B -> Prop) : (term3381 _90724 B _37169 u f t) = (term3478 _90724 B _37169 u f t).
Proof. exact (fun_ext (fun GEN_PVAR_84 : B => @lem3522320 _90724 B _37169 GEN_PVAR_84 u f t)). Qed.
Lemma lem3522322 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem3522323 {_90724 B : Type'} (_37169 : type852 _90724 B) (u : B -> Prop) (f : B -> _90724) (t : B -> Prop) : (term3396 _90724 B _37169 u f t) = (term3479 _90724 B _37169 u f t).
Proof. exact (MK_COMB (@lem3522322 B) (@lem3522321 _90724 B _37169 u f t)). Qed.
Lemma lem3522325 {A B : Type'} (P : type1413 A B) : (term453 A B P) = (term454 A B P).
Proof. exact (EQ_MP (@lem18899 A B P) (@lem18898 A B P)). Qed.
Lemma lem3522326 {B : Type'} (P : type1402 B) : (term3480 B P) = (term3481 B P).
Proof. exact (@lem3522325 B B P). Qed.
Lemma lem3522327 {_90724 B : Type'} (_37169 : type852 _90724 B) (u : B -> Prop) (f : B -> _90724) (t : B -> Prop) : (term3482 _90724 B _37169 u f t) = (term3483 _90724 B _37169 u f t).
Proof. exact (@lem3522326 B (term3484 _90724 B _37169 u f t)). Qed.
Lemma lem3522328 {_90724 B : Type'} (_37169 : type852 _90724 B) (GEN_PVAR_84 : B) (u : B -> Prop) (f : B -> _90724) (t : B -> Prop) : (term3485 _90724 B _37169 u f t GEN_PVAR_84) = (term3476 _90724 B _37169 GEN_PVAR_84 u f t).
Proof. exact (eq_refl (term3485 _90724 B _37169 u f t GEN_PVAR_84)). Qed.
Lemma lem3522329 {B : Type'} (x : B) : x = x.
Proof. exact (eq_refl x). Qed.
Lemma lem3522330 {_90724 B : Type'} (_37169 : type852 _90724 B) (GEN_PVAR_84 : B) (u : B -> Prop) (f : B -> _90724) (t : B -> Prop) (x : B) : (term3486 _90724 B _37169 u f t GEN_PVAR_84 x) = (term3487 _90724 B _37169 GEN_PVAR_84 u f t x).
Proof. exact (MK_COMB (@lem3522328 _90724 B _37169 GEN_PVAR_84 u f t) (@lem3522329 B x)). Qed.
Lemma lem3522331 {_90724 B : Type'} (_37169 : type852 _90724 B) (GEN_PVAR_84 : B) (u : B -> Prop) (f : B -> _90724) (t : B -> Prop) (x : B) : (term3487 _90724 B _37169 GEN_PVAR_84 u f t x) = (term3474 _90724 B _37169 GEN_PVAR_84 u f t x).
Proof. exact (eq_refl (term3487 _90724 B _37169 GEN_PVAR_84 u f t x)). Qed.
Lemma lem3522332 {_90724 B : Type'} (_37169 : type852 _90724 B) (GEN_PVAR_84 : B) (u : B -> Prop) (f : B -> _90724) (t : B -> Prop) (x : B) : (term3486 _90724 B _37169 u f t GEN_PVAR_84 x) = (term3474 _90724 B _37169 GEN_PVAR_84 u f t x).
Proof. exact (TRANS (@lem3522330 _90724 B _37169 GEN_PVAR_84 u f t x) (@lem3522331 _90724 B _37169 GEN_PVAR_84 u f t x)). Qed.
Lemma lem3522333 {_90724 B : Type'} (_37169 : type852 _90724 B) (GEN_PVAR_84 : B) (u : B -> Prop) (f : B -> _90724) (t : B -> Prop) : (term3488 _90724 B _37169 u f t GEN_PVAR_84) = (term3476 _90724 B _37169 GEN_PVAR_84 u f t).
Proof. exact (fun_ext (fun x : B => @lem3522332 _90724 B _37169 GEN_PVAR_84 u f t x)). Qed.
Lemma lem3522334 {B : Type'} : (@ex B) = (@ex B).
Proof. exact (eq_refl (@ex B)). Qed.
Lemma lem3522335 {_90724 B : Type'} (_37169 : type852 _90724 B) (GEN_PVAR_84 : B) (u : B -> Prop) (f : B -> _90724) (t : B -> Prop) : (term3489 _90724 B _37169 u f t GEN_PVAR_84) = (term3477 _90724 B _37169 GEN_PVAR_84 u f t).
Proof. exact (MK_COMB (@lem3522334 B) (@lem3522333 _90724 B _37169 GEN_PVAR_84 u f t)). Qed.
Lemma lem3522336 {_90724 B : Type'} (_37169 : type852 _90724 B) (u : B -> Prop) (f : B -> _90724) (t : B -> Prop) : (term3490 _90724 B _37169 u f t) = (term3478 _90724 B _37169 u f t).
Proof. exact (fun_ext (fun GEN_PVAR_84 : B => @lem3522335 _90724 B _37169 GEN_PVAR_84 u f t)). Qed.
Lemma lem3522337 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem3522338 {_90724 B : Type'} (_37169 : type852 _90724 B) (u : B -> Prop) (f : B -> _90724) (t : B -> Prop) : (term3482 _90724 B _37169 u f t) = (term3479 _90724 B _37169 u f t).
Proof. exact (MK_COMB (@lem3522337 B) (@lem3522336 _90724 B _37169 u f t)). Qed.
Lemma lem3522339 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem3522340 {_90724 B : Type'} (_37169 : type852 _90724 B) (u : B -> Prop) (f : B -> _90724) (t : B -> Prop) : (term3491 _90724 B _37169 u f t) = (term3492 _90724 B _37169 u f t).
Proof. exact (MK_COMB (@lem3522339) (@lem3522338 _90724 B _37169 u f t)). Qed.
Lemma lem3522341 {_90724 B : Type'} (_37169 : type852 _90724 B) (GEN_PVAR_84 : B) (u : B -> Prop) (f : B -> _90724) (t : B -> Prop) : (term3485 _90724 B _37169 u f t GEN_PVAR_84) = (term3476 _90724 B _37169 GEN_PVAR_84 u f t).
Proof. exact (eq_refl (term3485 _90724 B _37169 u f t GEN_PVAR_84)). Qed.
Lemma lem3522342 {B : Type'} (x : B -> B) (GEN_PVAR_84 : B) : (x GEN_PVAR_84) = (x GEN_PVAR_84).
Proof. exact (eq_refl (x GEN_PVAR_84)). Qed.
Lemma lem3522343 {_90724 B : Type'} (_37169 : type852 _90724 B) (u : B -> Prop) (f : B -> _90724) (t : B -> Prop) (x : B -> B) (GEN_PVAR_84 : B) : (term3493 _90724 B _37169 u f t x GEN_PVAR_84) = (term3494 _90724 B _37169 u f t x GEN_PVAR_84).
Proof. exact (MK_COMB (@lem3522341 _90724 B _37169 GEN_PVAR_84 u f t) (@lem3522342 B x GEN_PVAR_84)). Qed.
Lemma lem3522344 {_90724 B : Type'} (_37169 : type852 _90724 B) (u : B -> Prop) (f : B -> _90724) (t : B -> Prop) (x : B -> B) (GEN_PVAR_84 : B) : (term3494 _90724 B _37169 u f t x GEN_PVAR_84) = (term3495 _90724 B _37169 u f t x GEN_PVAR_84).
Proof. exact (eq_refl (term3494 _90724 B _37169 u f t x GEN_PVAR_84)). Qed.
Lemma lem3522345 {_90724 B : Type'} (_37169 : type852 _90724 B) (u : B -> Prop) (f : B -> _90724) (t : B -> Prop) (x : B -> B) (GEN_PVAR_84 : B) : (term3493 _90724 B _37169 u f t x GEN_PVAR_84) = (term3495 _90724 B _37169 u f t x GEN_PVAR_84).
Proof. exact (TRANS (@lem3522343 _90724 B _37169 u f t x GEN_PVAR_84) (@lem3522344 _90724 B _37169 u f t x GEN_PVAR_84)). Qed.
Lemma lem3522346 {_90724 B : Type'} (_37169 : type852 _90724 B) (u : B -> Prop) (f : B -> _90724) (t : B -> Prop) (x : B -> B) : (term3496 _90724 B _37169 u f t x) = (term3497 _90724 B _37169 u f t x).
Proof. exact (fun_ext (fun GEN_PVAR_84 : B => @lem3522345 _90724 B _37169 u f t x GEN_PVAR_84)). Qed.
Lemma lem3522347 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem3522348 {_90724 B : Type'} (_37169 : type852 _90724 B) (u : B -> Prop) (f : B -> _90724) (t : B -> Prop) (x : B -> B) : (term3498 _90724 B _37169 u f t x) = (term3499 _90724 B _37169 u f t x).
Proof. exact (MK_COMB (@lem3522347 B) (@lem3522346 _90724 B _37169 u f t x)). Qed.
Lemma lem3522349 {_90724 B : Type'} (_37169 : type852 _90724 B) (u : B -> Prop) (f : B -> _90724) (t : B -> Prop) : (term3500 _90724 B _37169 u f t) = (term3501 _90724 B _37169 u f t).
Proof. exact (fun_ext (fun x : B -> B => @lem3522348 _90724 B _37169 u f t x)). Qed.
Lemma lem3522350 {B : Type'} : (@ex (B -> B)) = (@ex (B -> B)).
Proof. exact (eq_refl (@ex (B -> B))). Qed.
Lemma lem3522351 {_90724 B : Type'} (_37169 : type852 _90724 B) (u : B -> Prop) (f : B -> _90724) (t : B -> Prop) : (term3483 _90724 B _37169 u f t) = (term3502 _90724 B _37169 u f t).
Proof. exact (MK_COMB (@lem3522350 B) (@lem3522349 _90724 B _37169 u f t)). Qed.
Lemma lem3522352 {_90724 B : Type'} (_37169 : type852 _90724 B) (u : B -> Prop) (f : B -> _90724) (t : B -> Prop) : ((term3482 _90724 B _37169 u f t) = (term3483 _90724 B _37169 u f t)) = ((term3479 _90724 B _37169 u f t) = (term3502 _90724 B _37169 u f t)).
Proof. exact (MK_COMB (@lem3522340 _90724 B _37169 u f t) (@lem3522351 _90724 B _37169 u f t)). Qed.
Lemma lem3522353 {_90724 B : Type'} (_37169 : type852 _90724 B) (u : B -> Prop) (f : B -> _90724) (t : B -> Prop) : (term3479 _90724 B _37169 u f t) = (term3502 _90724 B _37169 u f t).
Proof. exact (EQ_MP (@lem3522352 _90724 B _37169 u f t) (@lem3522327 _90724 B _37169 u f t)). Qed.
Lemma lem3522354 {_90724 B : Type'} (_37169 : type852 _90724 B) (u : B -> Prop) (f : B -> _90724) (t : B -> Prop) : (term3396 _90724 B _37169 u f t) = (term3502 _90724 B _37169 u f t).
Proof. exact (TRANS (@lem3522323 _90724 B _37169 u f t) (@lem3522353 _90724 B _37169 u f t)). Qed.
Lemma lem3522355 {_90724 B : Type'} (_37169 : type852 _90724 B) (u : B -> Prop) (f : B -> _90724) : (term3403 _90724 B _37169 u f) = (term3503 _90724 B _37169 u f).
Proof. exact (fun_ext (fun t : B -> Prop => @lem3522354 _90724 B _37169 u f t)). Qed.
Lemma lem3522356 {B : Type'} : (@all (B -> Prop)) = (@all (B -> Prop)).
Proof. exact (eq_refl (@all (B -> Prop))). Qed.
Lemma lem3522357 {_90724 B : Type'} (_37169 : type852 _90724 B) (u : B -> Prop) (f : B -> _90724) : (term3418 _90724 B _37169 u f) = (term3504 _90724 B _37169 u f).
Proof. exact (MK_COMB (@lem3522356 B) (@lem3522355 _90724 B _37169 u f)). Qed.
Lemma lem3522359 {A B : Type'} (P : type1413 A B) : (term453 A B P) = (term454 A B P).
Proof. exact (EQ_MP (@lem18899 A B P) (@lem18898 A B P)). Qed.
Lemma lem3522360 {B : Type'} (P : type624 B) : (term3505 B P) = (term3506 B P).
Proof. exact (@lem3522359 (B -> Prop) (B -> B) P). Qed.
Lemma lem3522361 {_90724 B : Type'} (_37169 : type852 _90724 B) (u : B -> Prop) (f : B -> _90724) : (term3507 _90724 B _37169 u f) = (term3508 _90724 B _37169 u f).
Proof. exact (@lem3522360 B (term3509 _90724 B _37169 u f)). Qed.
Lemma lem3522362 {_90724 B : Type'} (_37169 : type852 _90724 B) (u : B -> Prop) (f : B -> _90724) (t : B -> Prop) : (term3510 _90724 B _37169 u f t) = (term3501 _90724 B _37169 u f t).
Proof. exact (eq_refl (term3510 _90724 B _37169 u f t)). Qed.
Lemma lem3522363 {B : Type'} (x : B -> B) : x = x.
Proof. exact (eq_refl x). Qed.
Lemma lem3522364 {_90724 B : Type'} (_37169 : type852 _90724 B) (u : B -> Prop) (f : B -> _90724) (t : B -> Prop) (x : B -> B) : (term3511 _90724 B _37169 u f t x) = (term3512 _90724 B _37169 u f t x).
Proof. exact (MK_COMB (@lem3522362 _90724 B _37169 u f t) (@lem3522363 B x)). Qed.
Lemma lem3522365 {_90724 B : Type'} (_37169 : type852 _90724 B) (u : B -> Prop) (f : B -> _90724) (t : B -> Prop) (x : B -> B) : (term3512 _90724 B _37169 u f t x) = (term3499 _90724 B _37169 u f t x).
Proof. exact (eq_refl (term3512 _90724 B _37169 u f t x)). Qed.
Lemma lem3522366 {_90724 B : Type'} (_37169 : type852 _90724 B) (u : B -> Prop) (f : B -> _90724) (t : B -> Prop) (x : B -> B) : (term3511 _90724 B _37169 u f t x) = (term3499 _90724 B _37169 u f t x).
Proof. exact (TRANS (@lem3522364 _90724 B _37169 u f t x) (@lem3522365 _90724 B _37169 u f t x)). Qed.
Lemma lem3522367 {_90724 B : Type'} (_37169 : type852 _90724 B) (u : B -> Prop) (f : B -> _90724) (t : B -> Prop) : (term3513 _90724 B _37169 u f t) = (term3501 _90724 B _37169 u f t).
Proof. exact (fun_ext (fun x : B -> B => @lem3522366 _90724 B _37169 u f t x)). Qed.
Lemma lem3522368 {B : Type'} : (@ex (B -> B)) = (@ex (B -> B)).
Proof. exact (eq_refl (@ex (B -> B))). Qed.
Lemma lem3522369 {_90724 B : Type'} (_37169 : type852 _90724 B) (u : B -> Prop) (f : B -> _90724) (t : B -> Prop) : (term3514 _90724 B _37169 u f t) = (term3502 _90724 B _37169 u f t).
Proof. exact (MK_COMB (@lem3522368 B) (@lem3522367 _90724 B _37169 u f t)). Qed.
Lemma lem3522370 {_90724 B : Type'} (_37169 : type852 _90724 B) (u : B -> Prop) (f : B -> _90724) : (term3515 _90724 B _37169 u f) = (term3503 _90724 B _37169 u f).
Proof. exact (fun_ext (fun t : B -> Prop => @lem3522369 _90724 B _37169 u f t)). Qed.
Lemma lem3522371 {B : Type'} : (@all (B -> Prop)) = (@all (B -> Prop)).
Proof. exact (eq_refl (@all (B -> Prop))). Qed.
Lemma lem3522372 {_90724 B : Type'} (_37169 : type852 _90724 B) (u : B -> Prop) (f : B -> _90724) : (term3507 _90724 B _37169 u f) = (term3504 _90724 B _37169 u f).
Proof. exact (MK_COMB (@lem3522371 B) (@lem3522370 _90724 B _37169 u f)). Qed.
Lemma lem3522373 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem3522374 {_90724 B : Type'} (_37169 : type852 _90724 B) (u : B -> Prop) (f : B -> _90724) : (term3516 _90724 B _37169 u f) = (term3517 _90724 B _37169 u f).
Proof. exact (MK_COMB (@lem3522373) (@lem3522372 _90724 B _37169 u f)). Qed.
Lemma lem3522375 {_90724 B : Type'} (_37169 : type852 _90724 B) (u : B -> Prop) (f : B -> _90724) (t : B -> Prop) : (term3510 _90724 B _37169 u f t) = (term3501 _90724 B _37169 u f t).
Proof. exact (eq_refl (term3510 _90724 B _37169 u f t)). Qed.
Lemma lem3522376 {B : Type'} (x : type670 B) (t : B -> Prop) : (x t) = (x t).
Proof. exact (eq_refl (x t)). Qed.
Lemma lem3522377 {_90724 B : Type'} (_37169 : type852 _90724 B) (u : B -> Prop) (f : B -> _90724) (x : type670 B) (t : B -> Prop) : (term3518 _90724 B _37169 u f x t) = (term3519 _90724 B _37169 u f x t).
Proof. exact (MK_COMB (@lem3522375 _90724 B _37169 u f t) (@lem3522376 B x t)). Qed.
Lemma lem3522378 {_90724 B : Type'} (_37169 : type852 _90724 B) (u : B -> Prop) (f : B -> _90724) (x : type670 B) (t : B -> Prop) : (term3519 _90724 B _37169 u f x t) = (term3520 _90724 B _37169 u f x t).
Proof. exact (eq_refl (term3519 _90724 B _37169 u f x t)). Qed.
Lemma lem3522379 {_90724 B : Type'} (_37169 : type852 _90724 B) (u : B -> Prop) (f : B -> _90724) (x : type670 B) (t : B -> Prop) : (term3518 _90724 B _37169 u f x t) = (term3520 _90724 B _37169 u f x t).
Proof. exact (TRANS (@lem3522377 _90724 B _37169 u f x t) (@lem3522378 _90724 B _37169 u f x t)). Qed.
Lemma lem3522380 {_90724 B : Type'} (_37169 : type852 _90724 B) (u : B -> Prop) (f : B -> _90724) (x : type670 B) : (term3521 _90724 B _37169 u f x) = (term3522 _90724 B _37169 u f x).
Proof. exact (fun_ext (fun t : B -> Prop => @lem3522379 _90724 B _37169 u f x t)). Qed.
Lemma lem3522381 {B : Type'} : (@all (B -> Prop)) = (@all (B -> Prop)).
Proof. exact (eq_refl (@all (B -> Prop))). Qed.
Lemma lem3522382 {_90724 B : Type'} (_37169 : type852 _90724 B) (u : B -> Prop) (f : B -> _90724) (x : type670 B) : (term3523 _90724 B _37169 u f x) = (term3524 _90724 B _37169 u f x).
Proof. exact (MK_COMB (@lem3522381 B) (@lem3522380 _90724 B _37169 u f x)). Qed.
Lemma lem3522383 {_90724 B : Type'} (_37169 : type852 _90724 B) (u : B -> Prop) (f : B -> _90724) : (term3525 _90724 B _37169 u f) = (term3526 _90724 B _37169 u f).
Proof. exact (fun_ext (fun x : type670 B => @lem3522382 _90724 B _37169 u f x)). Qed.
Lemma lem3522384 {B : Type'} : (@ex ((B -> Prop) -> B -> B)) = (@ex ((B -> Prop) -> B -> B)).
Proof. exact (eq_refl (@ex ((B -> Prop) -> B -> B))). Qed.
Lemma lem3522385 {_90724 B : Type'} (_37169 : type852 _90724 B) (u : B -> Prop) (f : B -> _90724) : (term3508 _90724 B _37169 u f) = (term3527 _90724 B _37169 u f).
Proof. exact (MK_COMB (@lem3522384 B) (@lem3522383 _90724 B _37169 u f)). Qed.
Lemma lem3522386 {_90724 B : Type'} (_37169 : type852 _90724 B) (u : B -> Prop) (f : B -> _90724) : ((term3507 _90724 B _37169 u f) = (term3508 _90724 B _37169 u f)) = ((term3504 _90724 B _37169 u f) = (term3527 _90724 B _37169 u f)).
Proof. exact (MK_COMB (@lem3522374 _90724 B _37169 u f) (@lem3522385 _90724 B _37169 u f)). Qed.
Lemma lem3522387 {_90724 B : Type'} (_37169 : type852 _90724 B) (u : B -> Prop) (f : B -> _90724) : (term3504 _90724 B _37169 u f) = (term3527 _90724 B _37169 u f).
Proof. exact (EQ_MP (@lem3522386 _90724 B _37169 u f) (@lem3522361 _90724 B _37169 u f)). Qed.
Lemma lem3522388 {_90724 B : Type'} (_37169 : type852 _90724 B) (u : B -> Prop) (f : B -> _90724) : (term3418 _90724 B _37169 u f) = (term3527 _90724 B _37169 u f).
Proof. exact (TRANS (@lem3522357 _90724 B _37169 u f) (@lem3522387 _90724 B _37169 u f)). Qed.
Lemma lem3522389 {_90724 B : Type'} (_37169 : type852 _90724 B) (u : B -> Prop) : (term3427 _90724 B _37169 u) = (term3528 _90724 B _37169 u).
Proof. exact (fun_ext (fun f : B -> _90724 => @lem3522388 _90724 B _37169 u f)). Qed.
Lemma lem3522390 {_90724 B : Type'} : (@all (B -> _90724)) = (@all (B -> _90724)).
Proof. exact (eq_refl (@all (B -> _90724))). Qed.
Lemma lem3522391 {_90724 B : Type'} (_37169 : type852 _90724 B) (u : B -> Prop) : (term3442 _90724 B _37169 u) = (term3529 _90724 B _37169 u).
Proof. exact (MK_COMB (@lem3522390 _90724 B) (@lem3522389 _90724 B _37169 u)). Qed.
Lemma lem3522393 {A B : Type'} (P : type1413 A B) : (term453 A B P) = (term454 A B P).
Proof. exact (EQ_MP (@lem18899 A B P) (@lem18898 A B P)). Qed.
Lemma lem3522394 {_90724 B : Type'} (P : type774 _90724 B) : (term3530 _90724 B P) = (term3531 _90724 B P).
Proof. exact (@lem3522393 (B -> _90724) (type670 B) P). Qed.
Lemma lem3522395 {_90724 B : Type'} (_37169 : type852 _90724 B) (u : B -> Prop) : (term3532 _90724 B _37169 u) = (term3533 _90724 B _37169 u).
Proof. exact (@lem3522394 _90724 B (term3534 _90724 B _37169 u)). Qed.
Lemma lem3522396 {_90724 B : Type'} (_37169 : type852 _90724 B) (u : B -> Prop) (f : B -> _90724) : (term3535 _90724 B _37169 u f) = (term3526 _90724 B _37169 u f).
Proof. exact (eq_refl (term3535 _90724 B _37169 u f)). Qed.
Lemma lem3522397 {B : Type'} (x : type670 B) : x = x.
Proof. exact (eq_refl x). Qed.
Lemma lem3522398 {_90724 B : Type'} (_37169 : type852 _90724 B) (u : B -> Prop) (f : B -> _90724) (x : type670 B) : (term3536 _90724 B _37169 u f x) = (term3537 _90724 B _37169 u f x).
Proof. exact (MK_COMB (@lem3522396 _90724 B _37169 u f) (@lem3522397 B x)). Qed.
Lemma lem3522399 {_90724 B : Type'} (_37169 : type852 _90724 B) (u : B -> Prop) (f : B -> _90724) (x : type670 B) : (term3537 _90724 B _37169 u f x) = (term3524 _90724 B _37169 u f x).
Proof. exact (eq_refl (term3537 _90724 B _37169 u f x)). Qed.
Lemma lem3522400 {_90724 B : Type'} (_37169 : type852 _90724 B) (u : B -> Prop) (f : B -> _90724) (x : type670 B) : (term3536 _90724 B _37169 u f x) = (term3524 _90724 B _37169 u f x).
Proof. exact (TRANS (@lem3522398 _90724 B _37169 u f x) (@lem3522399 _90724 B _37169 u f x)). Qed.
Lemma lem3522401 {_90724 B : Type'} (_37169 : type852 _90724 B) (u : B -> Prop) (f : B -> _90724) : (term3538 _90724 B _37169 u f) = (term3526 _90724 B _37169 u f).
Proof. exact (fun_ext (fun x : type670 B => @lem3522400 _90724 B _37169 u f x)). Qed.
Lemma lem3522402 {B : Type'} : (@ex ((B -> Prop) -> B -> B)) = (@ex ((B -> Prop) -> B -> B)).
Proof. exact (eq_refl (@ex ((B -> Prop) -> B -> B))). Qed.
Lemma lem3522403 {_90724 B : Type'} (_37169 : type852 _90724 B) (u : B -> Prop) (f : B -> _90724) : (term3539 _90724 B _37169 u f) = (term3527 _90724 B _37169 u f).
Proof. exact (MK_COMB (@lem3522402 B) (@lem3522401 _90724 B _37169 u f)). Qed.
Lemma lem3522404 {_90724 B : Type'} (_37169 : type852 _90724 B) (u : B -> Prop) : (term3540 _90724 B _37169 u) = (term3528 _90724 B _37169 u).
Proof. exact (fun_ext (fun f : B -> _90724 => @lem3522403 _90724 B _37169 u f)). Qed.
Lemma lem3522405 {_90724 B : Type'} : (@all (B -> _90724)) = (@all (B -> _90724)).
Proof. exact (eq_refl (@all (B -> _90724))). Qed.
Lemma lem3522406 {_90724 B : Type'} (_37169 : type852 _90724 B) (u : B -> Prop) : (term3532 _90724 B _37169 u) = (term3529 _90724 B _37169 u).
Proof. exact (MK_COMB (@lem3522405 _90724 B) (@lem3522404 _90724 B _37169 u)). Qed.
Lemma lem3522407 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem3522408 {_90724 B : Type'} (_37169 : type852 _90724 B) (u : B -> Prop) : (term3541 _90724 B _37169 u) = (term3542 _90724 B _37169 u).
Proof. exact (MK_COMB (@lem3522407) (@lem3522406 _90724 B _37169 u)). Qed.
Lemma lem3522409 {_90724 B : Type'} (_37169 : type852 _90724 B) (u : B -> Prop) (f : B -> _90724) : (term3535 _90724 B _37169 u f) = (term3526 _90724 B _37169 u f).
Proof. exact (eq_refl (term3535 _90724 B _37169 u f)). Qed.
Lemma lem3522410 {_90724 B : Type'} (x : type788 _90724 B) (f : B -> _90724) : (x f) = (x f).
Proof. exact (eq_refl (x f)). Qed.
Lemma lem3522411 {_90724 B : Type'} (_37169 : type852 _90724 B) (u : B -> Prop) (x : type788 _90724 B) (f : B -> _90724) : (term3543 _90724 B _37169 u x f) = (term3544 _90724 B _37169 u x f).
Proof. exact (MK_COMB (@lem3522409 _90724 B _37169 u f) (@lem3522410 _90724 B x f)). Qed.
Lemma lem3522412 {_90724 B : Type'} (_37169 : type852 _90724 B) (u : B -> Prop) (x : type788 _90724 B) (f : B -> _90724) : (term3544 _90724 B _37169 u x f) = (term3545 _90724 B _37169 u x f).
Proof. exact (eq_refl (term3544 _90724 B _37169 u x f)). Qed.
Lemma lem3522413 {_90724 B : Type'} (_37169 : type852 _90724 B) (u : B -> Prop) (x : type788 _90724 B) (f : B -> _90724) : (term3543 _90724 B _37169 u x f) = (term3545 _90724 B _37169 u x f).
Proof. exact (TRANS (@lem3522411 _90724 B _37169 u x f) (@lem3522412 _90724 B _37169 u x f)). Qed.
Lemma lem3522414 {_90724 B : Type'} (_37169 : type852 _90724 B) (u : B -> Prop) (x : type788 _90724 B) : (term3546 _90724 B _37169 u x) = (term3547 _90724 B _37169 u x).
Proof. exact (fun_ext (fun f : B -> _90724 => @lem3522413 _90724 B _37169 u x f)). Qed.
Lemma lem3522415 {_90724 B : Type'} : (@all (B -> _90724)) = (@all (B -> _90724)).
Proof. exact (eq_refl (@all (B -> _90724))). Qed.
Lemma lem3522416 {_90724 B : Type'} (_37169 : type852 _90724 B) (u : B -> Prop) (x : type788 _90724 B) : (term3548 _90724 B _37169 u x) = (term3549 _90724 B _37169 u x).
Proof. exact (MK_COMB (@lem3522415 _90724 B) (@lem3522414 _90724 B _37169 u x)). Qed.
Lemma lem3522417 {_90724 B : Type'} (_37169 : type852 _90724 B) (u : B -> Prop) : (term3550 _90724 B _37169 u) = (term3551 _90724 B _37169 u).
Proof. exact (fun_ext (fun x : type788 _90724 B => @lem3522416 _90724 B _37169 u x)). Qed.
Lemma lem3522418 {_90724 B : Type'} : (@ex ((B -> _90724) -> (B -> Prop) -> B -> B)) = (@ex ((B -> _90724) -> (B -> Prop) -> B -> B)).
Proof. exact (eq_refl (@ex ((B -> _90724) -> (B -> Prop) -> B -> B))). Qed.
Lemma lem3522419 {_90724 B : Type'} (_37169 : type852 _90724 B) (u : B -> Prop) : (term3533 _90724 B _37169 u) = (term3552 _90724 B _37169 u).
Proof. exact (MK_COMB (@lem3522418 _90724 B) (@lem3522417 _90724 B _37169 u)). Qed.
Lemma lem3522420 {_90724 B : Type'} (_37169 : type852 _90724 B) (u : B -> Prop) : ((term3532 _90724 B _37169 u) = (term3533 _90724 B _37169 u)) = ((term3529 _90724 B _37169 u) = (term3552 _90724 B _37169 u)).
Proof. exact (MK_COMB (@lem3522408 _90724 B _37169 u) (@lem3522419 _90724 B _37169 u)). Qed.
Lemma lem3522421 {_90724 B : Type'} (_37169 : type852 _90724 B) (u : B -> Prop) : (term3529 _90724 B _37169 u) = (term3552 _90724 B _37169 u).
Proof. exact (EQ_MP (@lem3522420 _90724 B _37169 u) (@lem3522395 _90724 B _37169 u)). Qed.
Lemma lem3522422 {_90724 B : Type'} (_37169 : type852 _90724 B) (u : B -> Prop) : (term3442 _90724 B _37169 u) = (term3552 _90724 B _37169 u).
Proof. exact (TRANS (@lem3522391 _90724 B _37169 u) (@lem3522421 _90724 B _37169 u)). Qed.
Lemma lem3522423 {_90724 B : Type'} (_37169 : type852 _90724 B) : (term3449 _90724 B _37169) = (term3553 _90724 B _37169).
Proof. exact (fun_ext (fun u : B -> Prop => @lem3522422 _90724 B _37169 u)). Qed.
Lemma lem3522424 {B : Type'} : (@all (B -> Prop)) = (@all (B -> Prop)).
Proof. exact (eq_refl (@all (B -> Prop))). Qed.
Lemma lem3522425 {_90724 B : Type'} (_37169 : type852 _90724 B) : (term3464 _90724 B _37169) = (term3554 _90724 B _37169).
Proof. exact (MK_COMB (@lem3522424 B) (@lem3522423 _90724 B _37169)). Qed.
Lemma lem3522427 {A B : Type'} (P : type1413 A B) : (term453 A B P) = (term454 A B P).
Proof. exact (EQ_MP (@lem18899 A B P) (@lem18898 A B P)). Qed.
Lemma lem3522428 {_90724 B : Type'} (P : type827 _90724 B) : (term3555 _90724 B P) = (term3556 _90724 B P).
Proof. exact (@lem3522427 (B -> Prop) (type788 _90724 B) P). Qed.
Lemma lem3522429 {_90724 B : Type'} (_37169 : type852 _90724 B) : (term3557 _90724 B _37169) = (term3558 _90724 B _37169).
Proof. exact (@lem3522428 _90724 B (term3559 _90724 B _37169)). Qed.
Lemma lem3522430 {_90724 B : Type'} (_37169 : type852 _90724 B) (u : B -> Prop) : (term3560 _90724 B _37169 u) = (term3551 _90724 B _37169 u).
Proof. exact (eq_refl (term3560 _90724 B _37169 u)). Qed.
Lemma lem3522431 {_90724 B : Type'} (x : type788 _90724 B) : x = x.
Proof. exact (eq_refl x). Qed.
Lemma lem3522432 {_90724 B : Type'} (_37169 : type852 _90724 B) (u : B -> Prop) (x : type788 _90724 B) : (term3561 _90724 B _37169 u x) = (term3562 _90724 B _37169 u x).
Proof. exact (MK_COMB (@lem3522430 _90724 B _37169 u) (@lem3522431 _90724 B x)). Qed.
Lemma lem3522433 {_90724 B : Type'} (_37169 : type852 _90724 B) (u : B -> Prop) (x : type788 _90724 B) : (term3562 _90724 B _37169 u x) = (term3549 _90724 B _37169 u x).
Proof. exact (eq_refl (term3562 _90724 B _37169 u x)). Qed.
Lemma lem3522434 {_90724 B : Type'} (_37169 : type852 _90724 B) (u : B -> Prop) (x : type788 _90724 B) : (term3561 _90724 B _37169 u x) = (term3549 _90724 B _37169 u x).
Proof. exact (TRANS (@lem3522432 _90724 B _37169 u x) (@lem3522433 _90724 B _37169 u x)). Qed.
Lemma lem3522435 {_90724 B : Type'} (_37169 : type852 _90724 B) (u : B -> Prop) : (term3563 _90724 B _37169 u) = (term3551 _90724 B _37169 u).
Proof. exact (fun_ext (fun x : type788 _90724 B => @lem3522434 _90724 B _37169 u x)). Qed.
Lemma lem3522436 {_90724 B : Type'} : (@ex ((B -> _90724) -> (B -> Prop) -> B -> B)) = (@ex ((B -> _90724) -> (B -> Prop) -> B -> B)).
Proof. exact (eq_refl (@ex ((B -> _90724) -> (B -> Prop) -> B -> B))). Qed.
Lemma lem3522437 {_90724 B : Type'} (_37169 : type852 _90724 B) (u : B -> Prop) : (term3564 _90724 B _37169 u) = (term3552 _90724 B _37169 u).
Proof. exact (MK_COMB (@lem3522436 _90724 B) (@lem3522435 _90724 B _37169 u)). Qed.
Lemma lem3522438 {_90724 B : Type'} (_37169 : type852 _90724 B) : (term3565 _90724 B _37169) = (term3553 _90724 B _37169).
Proof. exact (fun_ext (fun u : B -> Prop => @lem3522437 _90724 B _37169 u)). Qed.
Lemma lem3522439 {B : Type'} : (@all (B -> Prop)) = (@all (B -> Prop)).
Proof. exact (eq_refl (@all (B -> Prop))). Qed.
Lemma lem3522440 {_90724 B : Type'} (_37169 : type852 _90724 B) : (term3557 _90724 B _37169) = (term3554 _90724 B _37169).
Proof. exact (MK_COMB (@lem3522439 B) (@lem3522438 _90724 B _37169)). Qed.
Lemma lem3522441 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem3522442 {_90724 B : Type'} (_37169 : type852 _90724 B) : (term3566 _90724 B _37169) = (term3567 _90724 B _37169).
Proof. exact (MK_COMB (@lem3522441) (@lem3522440 _90724 B _37169)). Qed.
Lemma lem3522443 {_90724 B : Type'} (_37169 : type852 _90724 B) (u : B -> Prop) : (term3560 _90724 B _37169 u) = (term3551 _90724 B _37169 u).
Proof. exact (eq_refl (term3560 _90724 B _37169 u)). Qed.
Lemma lem3522444 {_90724 B : Type'} (x : type851 _90724 B) (u : B -> Prop) : (x u) = (x u).
Proof. exact (eq_refl (x u)). Qed.
Lemma lem3522445 {_90724 B : Type'} (_37169 : type852 _90724 B) (x : type851 _90724 B) (u : B -> Prop) : (term3568 _90724 B _37169 x u) = (term3569 _90724 B _37169 x u).
Proof. exact (MK_COMB (@lem3522443 _90724 B _37169 u) (@lem3522444 _90724 B x u)). Qed.
Lemma lem3522446 {_90724 B : Type'} (_37169 : type852 _90724 B) (x : type851 _90724 B) (u : B -> Prop) : (term3569 _90724 B _37169 x u) = (term3570 _90724 B _37169 x u).
Proof. exact (eq_refl (term3569 _90724 B _37169 x u)). Qed.
Lemma lem3522447 {_90724 B : Type'} (_37169 : type852 _90724 B) (x : type851 _90724 B) (u : B -> Prop) : (term3568 _90724 B _37169 x u) = (term3570 _90724 B _37169 x u).
Proof. exact (TRANS (@lem3522445 _90724 B _37169 x u) (@lem3522446 _90724 B _37169 x u)). Qed.
Lemma lem3522448 {_90724 B : Type'} (_37169 : type852 _90724 B) (x : type851 _90724 B) : (term3571 _90724 B _37169 x) = (term3572 _90724 B _37169 x).
Proof. exact (fun_ext (fun u : B -> Prop => @lem3522447 _90724 B _37169 x u)). Qed.
Lemma lem3522449 {B : Type'} : (@all (B -> Prop)) = (@all (B -> Prop)).
Proof. exact (eq_refl (@all (B -> Prop))). Qed.
Lemma lem3522450 {_90724 B : Type'} (_37169 : type852 _90724 B) (x : type851 _90724 B) : (term3573 _90724 B _37169 x) = (term3574 _90724 B _37169 x).
Proof. exact (MK_COMB (@lem3522449 B) (@lem3522448 _90724 B _37169 x)). Qed.
Lemma lem3522451 {_90724 B : Type'} (_37169 : type852 _90724 B) : (term3575 _90724 B _37169) = (term3576 _90724 B _37169).
Proof. exact (fun_ext (fun x : type851 _90724 B => @lem3522450 _90724 B _37169 x)). Qed.
Lemma lem3522452 {_90724 B : Type'} : (@ex ((B -> Prop) -> (B -> _90724) -> (B -> Prop) -> B -> B)) = (@ex ((B -> Prop) -> (B -> _90724) -> (B -> Prop) -> B -> B)).
Proof. exact (eq_refl (@ex ((B -> Prop) -> (B -> _90724) -> (B -> Prop) -> B -> B))). Qed.
Lemma lem3522453 {_90724 B : Type'} (_37169 : type852 _90724 B) : (term3558 _90724 B _37169) = (term3577 _90724 B _37169).
Proof. exact (MK_COMB (@lem3522452 _90724 B) (@lem3522451 _90724 B _37169)). Qed.
Lemma lem3522454 {_90724 B : Type'} (_37169 : type852 _90724 B) : ((term3557 _90724 B _37169) = (term3558 _90724 B _37169)) = ((term3554 _90724 B _37169) = (term3577 _90724 B _37169)).
Proof. exact (MK_COMB (@lem3522442 _90724 B _37169) (@lem3522453 _90724 B _37169)). Qed.
Lemma lem3522455 {_90724 B : Type'} (_37169 : type852 _90724 B) : (term3554 _90724 B _37169) = (term3577 _90724 B _37169).
Proof. exact (EQ_MP (@lem3522454 _90724 B _37169) (@lem3522429 _90724 B _37169)). Qed.
Lemma lem3522456 {_90724 B : Type'} (_37169 : type852 _90724 B) : (term3464 _90724 B _37169) = (term3577 _90724 B _37169).
Proof. exact (TRANS (@lem3522425 _90724 B _37169) (@lem3522455 _90724 B _37169)). Qed.
Lemma lem3522457 {_90724 B : Type'} (_37169 : type852 _90724 B) : (term3461 _90724 B _37169) = (term3461 _90724 B _37169).
Proof. exact (eq_refl (term3461 _90724 B _37169)). Qed.
Lemma lem3522458 {_90724 B : Type'} (_37169 : type852 _90724 B) : (term3465 _90724 B _37169) = (term3578 _90724 B _37169).
Proof. exact (MK_COMB (@lem3522457 _90724 B _37169) (@lem3522456 _90724 B _37169)). Qed.
Lemma lem3522460 {A : Type'} (P : Prop) (Q : A -> Prop) : (term415 A P Q) = (term416 A P Q).
Proof. exact (EQ_MP (@lem18929 A P Q) (@lem18928 A P Q)). Qed.
Lemma lem3522461 {_90724 B : Type'} (P : Prop) (Q : type221 _90724 B) : (term3579 _90724 B P Q) = (term3580 _90724 B P Q).
Proof. exact (@lem3522460 (type851 _90724 B) P Q). Qed.
Lemma lem3522462 {_90724 B : Type'} (_37169 : type852 _90724 B) : (term3581 _90724 B _37169) = (term3582 _90724 B _37169).
Proof. exact (@lem3522461 _90724 B (term3459 _90724 B _37169) (term3576 _90724 B _37169)). Qed.
Lemma lem3522463 {_90724 B : Type'} (_37169 : type852 _90724 B) (x : type851 _90724 B) : (term3583 _90724 B _37169 x) = (term3574 _90724 B _37169 x).
Proof. exact (eq_refl (term3583 _90724 B _37169 x)). Qed.
Lemma lem3522464 {_90724 B : Type'} (_37169 : type852 _90724 B) : (term3584 _90724 B _37169) = (term3576 _90724 B _37169).
Proof. exact (fun_ext (fun x : type851 _90724 B => @lem3522463 _90724 B _37169 x)). Qed.
Lemma lem3522465 {_90724 B : Type'} : (@ex ((B -> Prop) -> (B -> _90724) -> (B -> Prop) -> B -> B)) = (@ex ((B -> Prop) -> (B -> _90724) -> (B -> Prop) -> B -> B)).
Proof. exact (eq_refl (@ex ((B -> Prop) -> (B -> _90724) -> (B -> Prop) -> B -> B))). Qed.
Lemma lem3522466 {_90724 B : Type'} (_37169 : type852 _90724 B) : (term3585 _90724 B _37169) = (term3577 _90724 B _37169).
Proof. exact (MK_COMB (@lem3522465 _90724 B) (@lem3522464 _90724 B _37169)). Qed.
Lemma lem3522467 {_90724 B : Type'} (_37169 : type852 _90724 B) : (term3461 _90724 B _37169) = (term3461 _90724 B _37169).
Proof. exact (eq_refl (term3461 _90724 B _37169)). Qed.
Lemma lem3522468 {_90724 B : Type'} (_37169 : type852 _90724 B) : (term3581 _90724 B _37169) = (term3578 _90724 B _37169).
Proof. exact (MK_COMB (@lem3522467 _90724 B _37169) (@lem3522466 _90724 B _37169)). Qed.
Lemma lem3522469 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem3522470 {_90724 B : Type'} (_37169 : type852 _90724 B) : (term3586 _90724 B _37169) = (term3587 _90724 B _37169).
Proof. exact (MK_COMB (@lem3522469) (@lem3522468 _90724 B _37169)). Qed.
Lemma lem3522471 {_90724 B : Type'} (_37169 : type852 _90724 B) (x : type851 _90724 B) : (term3583 _90724 B _37169 x) = (term3574 _90724 B _37169 x).
Proof. exact (eq_refl (term3583 _90724 B _37169 x)). Qed.
Lemma lem3522472 {_90724 B : Type'} (_37169 : type852 _90724 B) : (term3461 _90724 B _37169) = (term3461 _90724 B _37169).
Proof. exact (eq_refl (term3461 _90724 B _37169)). Qed.
Lemma lem3522473 {_90724 B : Type'} (_37169 : type852 _90724 B) (x : type851 _90724 B) : (term3588 _90724 B _37169 x) = (term3589 _90724 B _37169 x).
Proof. exact (MK_COMB (@lem3522472 _90724 B _37169) (@lem3522471 _90724 B _37169 x)). Qed.
Lemma lem3522474 {_90724 B : Type'} (_37169 : type852 _90724 B) : (term3590 _90724 B _37169) = (term3591 _90724 B _37169).
Proof. exact (fun_ext (fun x : type851 _90724 B => @lem3522473 _90724 B _37169 x)). Qed.
Lemma lem3522475 {_90724 B : Type'} : (@ex ((B -> Prop) -> (B -> _90724) -> (B -> Prop) -> B -> B)) = (@ex ((B -> Prop) -> (B -> _90724) -> (B -> Prop) -> B -> B)).
Proof. exact (eq_refl (@ex ((B -> Prop) -> (B -> _90724) -> (B -> Prop) -> B -> B))). Qed.
Lemma lem3522476 {_90724 B : Type'} (_37169 : type852 _90724 B) : (term3582 _90724 B _37169) = (term3592 _90724 B _37169).
Proof. exact (MK_COMB (@lem3522475 _90724 B) (@lem3522474 _90724 B _37169)). Qed.
Lemma lem3522477 {_90724 B : Type'} (_37169 : type852 _90724 B) : ((term3581 _90724 B _37169) = (term3582 _90724 B _37169)) = ((term3578 _90724 B _37169) = (term3592 _90724 B _37169)).
Proof. exact (MK_COMB (@lem3522470 _90724 B _37169) (@lem3522476 _90724 B _37169)). Qed.
Lemma lem3522478 {_90724 B : Type'} (_37169 : type852 _90724 B) : (term3578 _90724 B _37169) = (term3592 _90724 B _37169).
Proof. exact (EQ_MP (@lem3522477 _90724 B _37169) (@lem3522462 _90724 B _37169)). Qed.
Lemma lem3522479 {_90724 B : Type'} (_37169 : type852 _90724 B) : (term3465 _90724 B _37169) = (term3592 _90724 B _37169).
Proof. exact (TRANS (@lem3522458 _90724 B _37169) (@lem3522478 _90724 B _37169)). Qed.
Lemma lem3522480 {_90724 B : Type'} (_37169 : type852 _90724 B) : (term3377 _90724 B _37169) = (term3592 _90724 B _37169).
Proof. exact (TRANS (@lem3522300 _90724 B _37169) (@lem3522479 _90724 B _37169)). Qed.
Lemma lem3522481 {_90724 B : Type'} (_37169 : type852 _90724 B) : (term2553 _90724 B _37169) = (term3592 _90724 B _37169).
Proof. exact (TRANS (@lem3521704 _90724 B _37169) (@lem3522480 _90724 B _37169)). Qed.
Lemma lem3522482 {_90724 B : Type'} (_37169 : type852 _90724 B) (h1 : term2553 _90724 B _37169) : term3592 _90724 B _37169.
Proof. exact (EQ_MP (@lem3522481 _90724 B _37169) (@lem3520012 _90724 B _37169 h1)). Qed.
Lemma lem3522486 {_90724 A : Type'} (GEN_PVAR_84 : A) (u : A -> Prop) (f : A -> _90724) (t : A -> Prop) (x : A) : (term2058 _90724 A GEN_PVAR_84 u f t x) = (term2058 _90724 A GEN_PVAR_84 u f t x).
Proof. exact (eq_refl (term2058 _90724 A GEN_PVAR_84 u f t x)). Qed.
Lemma lem3522487 {A : Type'} (P : A -> Prop) : (term311 A P) = (term312 A P).
Proof. exact (@lem18394 A P). Qed.
Lemma lem3522488 {_90724 A : Type'} (GEN_PVAR_84 : A) (u : A -> Prop) (f : A -> _90724) (t : A -> Prop) : (term3353 _90724 A GEN_PVAR_84 u f t) = (term3354 _90724 A GEN_PVAR_84 u f t).
Proof. exact (@lem3522487 A (term2059 _90724 A GEN_PVAR_84 u f t)). Qed.
Lemma lem3522489 {_90724 A : Type'} (GEN_PVAR_84 : A) (u : A -> Prop) (f : A -> _90724) (t : A -> Prop) (x : A) : (term3355 _90724 A GEN_PVAR_84 u f t x) = (term2058 _90724 A GEN_PVAR_84 u f t x).
Proof. exact (eq_refl (term3355 _90724 A GEN_PVAR_84 u f t x)). Qed.
Lemma lem3522490 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem3522492 {_90724 A : Type'} (GEN_PVAR_84 : A) (u : A -> Prop) (f : A -> _90724) (t : A -> Prop) (x : A) : (term3356 _90724 A GEN_PVAR_84 u f t x) = (term3357 _90724 A GEN_PVAR_84 u f t x).
Proof. exact (MK_COMB (@lem3522490) (@lem3522489 _90724 A GEN_PVAR_84 u f t x)). Qed.
Lemma lem3522493 {_90724 A : Type'} (GEN_PVAR_84 : A) (u : A -> Prop) (f : A -> _90724) (t : A -> Prop) : (term3358 _90724 A GEN_PVAR_84 u f t) = (term3359 _90724 A GEN_PVAR_84 u f t).
Proof. exact (fun_ext (fun x : A => @lem3522492 _90724 A GEN_PVAR_84 u f t x)). Qed.
Lemma lem3522494 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem3522495 {_90724 A : Type'} (GEN_PVAR_84 : A) (u : A -> Prop) (f : A -> _90724) (t : A -> Prop) : (term3354 _90724 A GEN_PVAR_84 u f t) = (term3360 _90724 A GEN_PVAR_84 u f t).
Proof. exact (MK_COMB (@lem3522494 A) (@lem3522493 _90724 A GEN_PVAR_84 u f t)). Qed.
Lemma lem3522496 {_90724 A : Type'} (GEN_PVAR_84 : A) (u : A -> Prop) (f : A -> _90724) (t : A -> Prop) : (term3353 _90724 A GEN_PVAR_84 u f t) = (term3360 _90724 A GEN_PVAR_84 u f t).
Proof. exact (TRANS (@lem3522488 _90724 A GEN_PVAR_84 u f t) (@lem3522495 _90724 A GEN_PVAR_84 u f t)). Qed.
Lemma lem3522497 {_90724 A : Type'} (GEN_PVAR_84 : A) (u : A -> Prop) (f : A -> _90724) (t : A -> Prop) : (term2059 _90724 A GEN_PVAR_84 u f t) = (term2059 _90724 A GEN_PVAR_84 u f t).
Proof. exact (fun_ext (fun x : A => @lem3522486 _90724 A GEN_PVAR_84 u f t x)). Qed.
Lemma lem3522498 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem3522499 {_90724 A : Type'} (GEN_PVAR_84 : A) (u : A -> Prop) (f : A -> _90724) (t : A -> Prop) : (term2060 _90724 A GEN_PVAR_84 u f t) = (term2060 _90724 A GEN_PVAR_84 u f t).
Proof. exact (MK_COMB (@lem3522498 A) (@lem3522497 _90724 A GEN_PVAR_84 u f t)). Qed.
Lemma lem3522501 {_90724 A : Type'} (_37168 : type852 _90724 A) (u : A -> Prop) (f : A -> _90724) (t : A -> Prop) (GEN_PVAR_84 : A) : (term3361 _90724 A _37168 u f t GEN_PVAR_84) = (term3361 _90724 A _37168 u f t GEN_PVAR_84).
Proof. exact (eq_refl (term3361 _90724 A _37168 u f t GEN_PVAR_84)). Qed.
Lemma lem3522502 {_90724 A : Type'} (_37168 : type852 _90724 A) (GEN_PVAR_84 : A) (u : A -> Prop) (f : A -> _90724) (t : A -> Prop) : (term3362 _90724 A _37168 GEN_PVAR_84 u f t) = (term3362 _90724 A _37168 GEN_PVAR_84 u f t).
Proof. exact (MK_COMB (@lem3522501 _90724 A _37168 u f t GEN_PVAR_84) (@lem3522499 _90724 A GEN_PVAR_84 u f t)). Qed.
Lemma lem3522504 {_90724 A : Type'} (_37168 : type852 _90724 A) (u : A -> Prop) (f : A -> _90724) (t : A -> Prop) (GEN_PVAR_84 : A) : (term3363 _90724 A _37168 u f t GEN_PVAR_84) = (term3363 _90724 A _37168 u f t GEN_PVAR_84).
Proof. exact (eq_refl (term3363 _90724 A _37168 u f t GEN_PVAR_84)). Qed.
Lemma lem3522505 {_90724 A : Type'} (_37168 : type852 _90724 A) (GEN_PVAR_84 : A) (u : A -> Prop) (f : A -> _90724) (t : A -> Prop) : (term3364 _90724 A _37168 GEN_PVAR_84 u f t) = (term3365 _90724 A _37168 GEN_PVAR_84 u f t).
Proof. exact (MK_COMB (@lem3522504 _90724 A _37168 u f t GEN_PVAR_84) (@lem3522496 _90724 A GEN_PVAR_84 u f t)). Qed.
Lemma lem3522506 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem3522507 {_90724 A : Type'} (_37168 : type852 _90724 A) (GEN_PVAR_84 : A) (u : A -> Prop) (f : A -> _90724) (t : A -> Prop) : (term3366 _90724 A _37168 GEN_PVAR_84 u f t) = (term3367 _90724 A _37168 GEN_PVAR_84 u f t).
Proof. exact (MK_COMB (@lem3522506) (@lem3522505 _90724 A _37168 GEN_PVAR_84 u f t)). Qed.
Lemma lem3522508 {_90724 A : Type'} (_37168 : type852 _90724 A) (GEN_PVAR_84 : A) (u : A -> Prop) (f : A -> _90724) (t : A -> Prop) : (term3368 _90724 A _37168 GEN_PVAR_84 u f t) = (term3369 _90724 A _37168 GEN_PVAR_84 u f t).
Proof. exact (MK_COMB (@lem3522507 _90724 A _37168 GEN_PVAR_84 u f t) (@lem3522502 _90724 A _37168 GEN_PVAR_84 u f t)). Qed.
Lemma lem3522509 {_90724 A : Type'} (_37168 : type852 _90724 A) (GEN_PVAR_84 : A) (u : A -> Prop) (f : A -> _90724) (t : A -> Prop) : ((_37168 u f t GEN_PVAR_84) = (term2060 _90724 A GEN_PVAR_84 u f t)) = (term3368 _90724 A _37168 GEN_PVAR_84 u f t).
Proof. exact (@lem17784 (_37168 u f t GEN_PVAR_84) (term2060 _90724 A GEN_PVAR_84 u f t)). Qed.
Lemma lem3522510 {_90724 A : Type'} (_37168 : type852 _90724 A) (GEN_PVAR_84 : A) (u : A -> Prop) (f : A -> _90724) (t : A -> Prop) : ((_37168 u f t GEN_PVAR_84) = (term2060 _90724 A GEN_PVAR_84 u f t)) = (term3369 _90724 A _37168 GEN_PVAR_84 u f t).
Proof. exact (TRANS (@lem3522509 _90724 A _37168 GEN_PVAR_84 u f t) (@lem3522508 _90724 A _37168 GEN_PVAR_84 u f t)). Qed.
Lemma lem3522511 {_90724 A : Type'} (_37168 : type852 _90724 A) (u : A -> Prop) (f : A -> _90724) (t : A -> Prop) : (term2546 _90724 A _37168 u f t) = (term3370 _90724 A _37168 u f t).
Proof. exact (fun_ext (fun GEN_PVAR_84 : A => @lem3522510 _90724 A _37168 GEN_PVAR_84 u f t)). Qed.
Lemma lem3522512 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem3522513 {_90724 A : Type'} (_37168 : type852 _90724 A) (u : A -> Prop) (f : A -> _90724) (t : A -> Prop) : (term2547 _90724 A _37168 u f t) = (term3371 _90724 A _37168 u f t).
Proof. exact (MK_COMB (@lem3522512 A) (@lem3522511 _90724 A _37168 u f t)). Qed.
Lemma lem3522514 {_90724 A : Type'} (_37168 : type852 _90724 A) (u : A -> Prop) (f : A -> _90724) : (term2548 _90724 A _37168 u f) = (term3372 _90724 A _37168 u f).
Proof. exact (fun_ext (fun t : A -> Prop => @lem3522513 _90724 A _37168 u f t)). Qed.
Lemma lem3522515 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem3522516 {_90724 A : Type'} (_37168 : type852 _90724 A) (u : A -> Prop) (f : A -> _90724) : (term2549 _90724 A _37168 u f) = (term3373 _90724 A _37168 u f).
Proof. exact (MK_COMB (@lem3522515 A) (@lem3522514 _90724 A _37168 u f)). Qed.
Lemma lem3522517 {_90724 A : Type'} (_37168 : type852 _90724 A) (u : A -> Prop) : (term2550 _90724 A _37168 u) = (term3374 _90724 A _37168 u).
Proof. exact (fun_ext (fun f : A -> _90724 => @lem3522516 _90724 A _37168 u f)). Qed.
Lemma lem3522518 {_90724 A : Type'} : (@all (A -> _90724)) = (@all (A -> _90724)).
Proof. exact (eq_refl (@all (A -> _90724))). Qed.
Lemma lem3522519 {_90724 A : Type'} (_37168 : type852 _90724 A) (u : A -> Prop) : (term2551 _90724 A _37168 u) = (term3375 _90724 A _37168 u).
Proof. exact (MK_COMB (@lem3522518 _90724 A) (@lem3522517 _90724 A _37168 u)). Qed.
Lemma lem3522520 {_90724 A : Type'} (_37168 : type852 _90724 A) : (term2552 _90724 A _37168) = (term3376 _90724 A _37168).
Proof. exact (fun_ext (fun u : A -> Prop => @lem3522519 _90724 A _37168 u)). Qed.
Lemma lem3522521 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem3522522 {_90724 A : Type'} (_37168 : type852 _90724 A) : (term2553 _90724 A _37168) = (term3377 _90724 A _37168).
Proof. exact (MK_COMB (@lem3522521 A) (@lem3522520 _90724 A _37168)). Qed.
Lemma lem3522536 {A : Type'} (P : A -> Prop) (Q : A -> Prop) : (term726 A P Q) = (term725 A P Q).
Proof. exact (EQ_MP (@lem18953 A P Q) (@lem18952 A P Q)). Qed.
Lemma lem3522537 {A : Type'} (P : A -> Prop) (Q : A -> Prop) : (term726 A P Q) = (term725 A P Q).
Proof. exact (@lem3522536 A P Q). Qed.
Lemma lem3522538 {_90724 A : Type'} (_37168 : type852 _90724 A) (u : A -> Prop) (f : A -> _90724) (t : A -> Prop) : (term3378 _90724 A _37168 u f t) = (term3379 _90724 A _37168 u f t).
Proof. exact (@lem3522537 A (term3380 _90724 A _37168 u f t) (term3381 _90724 A _37168 u f t)). Qed.
Lemma lem3522539 {_90724 A : Type'} (_37168 : type852 _90724 A) (GEN_PVAR_84 : A) (u : A -> Prop) (f : A -> _90724) (t : A -> Prop) : (term3382 _90724 A _37168 u f t GEN_PVAR_84) = (term3365 _90724 A _37168 GEN_PVAR_84 u f t).
Proof. exact (eq_refl (term3382 _90724 A _37168 u f t GEN_PVAR_84)). Qed.
Lemma lem3522540 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem3522541 {_90724 A : Type'} (_37168 : type852 _90724 A) (GEN_PVAR_84 : A) (u : A -> Prop) (f : A -> _90724) (t : A -> Prop) : (term3383 _90724 A _37168 u f t GEN_PVAR_84) = (term3367 _90724 A _37168 GEN_PVAR_84 u f t).
Proof. exact (MK_COMB (@lem3522540) (@lem3522539 _90724 A _37168 GEN_PVAR_84 u f t)). Qed.
Lemma lem3522542 {_90724 A : Type'} (_37168 : type852 _90724 A) (GEN_PVAR_84 : A) (u : A -> Prop) (f : A -> _90724) (t : A -> Prop) : (term3384 _90724 A _37168 u f t GEN_PVAR_84) = (term3362 _90724 A _37168 GEN_PVAR_84 u f t).
Proof. exact (eq_refl (term3384 _90724 A _37168 u f t GEN_PVAR_84)). Qed.
Lemma lem3522543 {_90724 A : Type'} (_37168 : type852 _90724 A) (GEN_PVAR_84 : A) (u : A -> Prop) (f : A -> _90724) (t : A -> Prop) : (term3385 _90724 A _37168 u f t GEN_PVAR_84) = (term3369 _90724 A _37168 GEN_PVAR_84 u f t).
Proof. exact (MK_COMB (@lem3522541 _90724 A _37168 GEN_PVAR_84 u f t) (@lem3522542 _90724 A _37168 GEN_PVAR_84 u f t)). Qed.
Lemma lem3522544 {_90724 A : Type'} (_37168 : type852 _90724 A) (u : A -> Prop) (f : A -> _90724) (t : A -> Prop) : (term3386 _90724 A _37168 u f t) = (term3370 _90724 A _37168 u f t).
Proof. exact (fun_ext (fun GEN_PVAR_84 : A => @lem3522543 _90724 A _37168 GEN_PVAR_84 u f t)). Qed.
Lemma lem3522545 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem3522546 {_90724 A : Type'} (_37168 : type852 _90724 A) (u : A -> Prop) (f : A -> _90724) (t : A -> Prop) : (term3378 _90724 A _37168 u f t) = (term3371 _90724 A _37168 u f t).
Proof. exact (MK_COMB (@lem3522545 A) (@lem3522544 _90724 A _37168 u f t)). Qed.
Lemma lem3522547 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem3522548 {_90724 A : Type'} (_37168 : type852 _90724 A) (u : A -> Prop) (f : A -> _90724) (t : A -> Prop) : (term3387 _90724 A _37168 u f t) = (term3388 _90724 A _37168 u f t).
Proof. exact (MK_COMB (@lem3522547) (@lem3522546 _90724 A _37168 u f t)). Qed.
Lemma lem3522549 {_90724 A : Type'} (_37168 : type852 _90724 A) (GEN_PVAR_84 : A) (u : A -> Prop) (f : A -> _90724) (t : A -> Prop) : (term3382 _90724 A _37168 u f t GEN_PVAR_84) = (term3365 _90724 A _37168 GEN_PVAR_84 u f t).
Proof. exact (eq_refl (term3382 _90724 A _37168 u f t GEN_PVAR_84)). Qed.
Lemma lem3522550 {_90724 A : Type'} (_37168 : type852 _90724 A) (u : A -> Prop) (f : A -> _90724) (t : A -> Prop) : (term3389 _90724 A _37168 u f t) = (term3380 _90724 A _37168 u f t).
Proof. exact (fun_ext (fun GEN_PVAR_84 : A => @lem3522549 _90724 A _37168 GEN_PVAR_84 u f t)). Qed.
Lemma lem3522551 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem3522552 {_90724 A : Type'} (_37168 : type852 _90724 A) (u : A -> Prop) (f : A -> _90724) (t : A -> Prop) : (term3390 _90724 A _37168 u f t) = (term3391 _90724 A _37168 u f t).
Proof. exact (MK_COMB (@lem3522551 A) (@lem3522550 _90724 A _37168 u f t)). Qed.
Lemma lem3522553 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem3522554 {_90724 A : Type'} (_37168 : type852 _90724 A) (u : A -> Prop) (f : A -> _90724) (t : A -> Prop) : (term3392 _90724 A _37168 u f t) = (term3393 _90724 A _37168 u f t).
Proof. exact (MK_COMB (@lem3522553) (@lem3522552 _90724 A _37168 u f t)). Qed.
Lemma lem3522555 {_90724 A : Type'} (_37168 : type852 _90724 A) (GEN_PVAR_84 : A) (u : A -> Prop) (f : A -> _90724) (t : A -> Prop) : (term3384 _90724 A _37168 u f t GEN_PVAR_84) = (term3362 _90724 A _37168 GEN_PVAR_84 u f t).
Proof. exact (eq_refl (term3384 _90724 A _37168 u f t GEN_PVAR_84)). Qed.
Lemma lem3522556 {_90724 A : Type'} (_37168 : type852 _90724 A) (u : A -> Prop) (f : A -> _90724) (t : A -> Prop) : (term3394 _90724 A _37168 u f t) = (term3381 _90724 A _37168 u f t).
Proof. exact (fun_ext (fun GEN_PVAR_84 : A => @lem3522555 _90724 A _37168 GEN_PVAR_84 u f t)). Qed.
Lemma lem3522557 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem3522558 {_90724 A : Type'} (_37168 : type852 _90724 A) (u : A -> Prop) (f : A -> _90724) (t : A -> Prop) : (term3395 _90724 A _37168 u f t) = (term3396 _90724 A _37168 u f t).
Proof. exact (MK_COMB (@lem3522557 A) (@lem3522556 _90724 A _37168 u f t)). Qed.
Lemma lem3522559 {_90724 A : Type'} (_37168 : type852 _90724 A) (u : A -> Prop) (f : A -> _90724) (t : A -> Prop) : (term3379 _90724 A _37168 u f t) = (term3397 _90724 A _37168 u f t).
Proof. exact (MK_COMB (@lem3522554 _90724 A _37168 u f t) (@lem3522558 _90724 A _37168 u f t)). Qed.
Lemma lem3522560 {_90724 A : Type'} (_37168 : type852 _90724 A) (u : A -> Prop) (f : A -> _90724) (t : A -> Prop) : ((term3378 _90724 A _37168 u f t) = (term3379 _90724 A _37168 u f t)) = ((term3371 _90724 A _37168 u f t) = (term3397 _90724 A _37168 u f t)).
Proof. exact (MK_COMB (@lem3522548 _90724 A _37168 u f t) (@lem3522559 _90724 A _37168 u f t)). Qed.
Lemma lem3522561 {_90724 A : Type'} (_37168 : type852 _90724 A) (u : A -> Prop) (f : A -> _90724) (t : A -> Prop) : (term3371 _90724 A _37168 u f t) = (term3397 _90724 A _37168 u f t).
Proof. exact (EQ_MP (@lem3522560 _90724 A _37168 u f t) (@lem3522538 _90724 A _37168 u f t)). Qed.
Lemma lem3522666 {_90724 A : Type'} (_37168 : type852 _90724 A) (u : A -> Prop) (f : A -> _90724) : (term3372 _90724 A _37168 u f) = (term3398 _90724 A _37168 u f).
Proof. exact (fun_ext (fun t : A -> Prop => @lem3522561 _90724 A _37168 u f t)). Qed.
Lemma lem3522667 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem3522668 {_90724 A : Type'} (_37168 : type852 _90724 A) (u : A -> Prop) (f : A -> _90724) : (term3373 _90724 A _37168 u f) = (term3399 _90724 A _37168 u f).
Proof. exact (MK_COMB (@lem3522667 A) (@lem3522666 _90724 A _37168 u f)). Qed.
Lemma lem3522670 {A : Type'} (P : A -> Prop) (Q : A -> Prop) : (term726 A P Q) = (term725 A P Q).
Proof. exact (EQ_MP (@lem18953 A P Q) (@lem18952 A P Q)). Qed.
Lemma lem3522671 {A : Type'} (P : type686 A) (Q : type686 A) : (term2898 A P Q) = (term2899 A P Q).
Proof. exact (@lem3522670 (A -> Prop) P Q). Qed.
Lemma lem3522672 {_90724 A : Type'} (_37168 : type852 _90724 A) (u : A -> Prop) (f : A -> _90724) : (term3400 _90724 A _37168 u f) = (term3401 _90724 A _37168 u f).
Proof. exact (@lem3522671 A (term3402 _90724 A _37168 u f) (term3403 _90724 A _37168 u f)). Qed.
Lemma lem3522673 {_90724 A : Type'} (_37168 : type852 _90724 A) (u : A -> Prop) (f : A -> _90724) (t : A -> Prop) : (term3404 _90724 A _37168 u f t) = (term3391 _90724 A _37168 u f t).
Proof. exact (eq_refl (term3404 _90724 A _37168 u f t)). Qed.
Lemma lem3522674 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem3522675 {_90724 A : Type'} (_37168 : type852 _90724 A) (u : A -> Prop) (f : A -> _90724) (t : A -> Prop) : (term3405 _90724 A _37168 u f t) = (term3393 _90724 A _37168 u f t).
Proof. exact (MK_COMB (@lem3522674) (@lem3522673 _90724 A _37168 u f t)). Qed.
Lemma lem3522676 {_90724 A : Type'} (_37168 : type852 _90724 A) (u : A -> Prop) (f : A -> _90724) (t : A -> Prop) : (term3406 _90724 A _37168 u f t) = (term3396 _90724 A _37168 u f t).
Proof. exact (eq_refl (term3406 _90724 A _37168 u f t)). Qed.
Lemma lem3522677 {_90724 A : Type'} (_37168 : type852 _90724 A) (u : A -> Prop) (f : A -> _90724) (t : A -> Prop) : (term3407 _90724 A _37168 u f t) = (term3397 _90724 A _37168 u f t).
Proof. exact (MK_COMB (@lem3522675 _90724 A _37168 u f t) (@lem3522676 _90724 A _37168 u f t)). Qed.
Lemma lem3522678 {_90724 A : Type'} (_37168 : type852 _90724 A) (u : A -> Prop) (f : A -> _90724) : (term3408 _90724 A _37168 u f) = (term3398 _90724 A _37168 u f).
Proof. exact (fun_ext (fun t : A -> Prop => @lem3522677 _90724 A _37168 u f t)). Qed.
Lemma lem3522679 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem3522680 {_90724 A : Type'} (_37168 : type852 _90724 A) (u : A -> Prop) (f : A -> _90724) : (term3400 _90724 A _37168 u f) = (term3399 _90724 A _37168 u f).
Proof. exact (MK_COMB (@lem3522679 A) (@lem3522678 _90724 A _37168 u f)). Qed.
Lemma lem3522681 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem3522682 {_90724 A : Type'} (_37168 : type852 _90724 A) (u : A -> Prop) (f : A -> _90724) : (term3409 _90724 A _37168 u f) = (term3410 _90724 A _37168 u f).
Proof. exact (MK_COMB (@lem3522681) (@lem3522680 _90724 A _37168 u f)). Qed.
Lemma lem3522683 {_90724 A : Type'} (_37168 : type852 _90724 A) (u : A -> Prop) (f : A -> _90724) (t : A -> Prop) : (term3404 _90724 A _37168 u f t) = (term3391 _90724 A _37168 u f t).
Proof. exact (eq_refl (term3404 _90724 A _37168 u f t)). Qed.
Lemma lem3522684 {_90724 A : Type'} (_37168 : type852 _90724 A) (u : A -> Prop) (f : A -> _90724) : (term3411 _90724 A _37168 u f) = (term3402 _90724 A _37168 u f).
Proof. exact (fun_ext (fun t : A -> Prop => @lem3522683 _90724 A _37168 u f t)). Qed.
Lemma lem3522685 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem3522686 {_90724 A : Type'} (_37168 : type852 _90724 A) (u : A -> Prop) (f : A -> _90724) : (term3412 _90724 A _37168 u f) = (term3413 _90724 A _37168 u f).
Proof. exact (MK_COMB (@lem3522685 A) (@lem3522684 _90724 A _37168 u f)). Qed.
Lemma lem3522687 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem3522688 {_90724 A : Type'} (_37168 : type852 _90724 A) (u : A -> Prop) (f : A -> _90724) : (term3414 _90724 A _37168 u f) = (term3415 _90724 A _37168 u f).
Proof. exact (MK_COMB (@lem3522687) (@lem3522686 _90724 A _37168 u f)). Qed.
Lemma lem3522689 {_90724 A : Type'} (_37168 : type852 _90724 A) (u : A -> Prop) (f : A -> _90724) (t : A -> Prop) : (term3406 _90724 A _37168 u f t) = (term3396 _90724 A _37168 u f t).
Proof. exact (eq_refl (term3406 _90724 A _37168 u f t)). Qed.
Lemma lem3522690 {_90724 A : Type'} (_37168 : type852 _90724 A) (u : A -> Prop) (f : A -> _90724) : (term3416 _90724 A _37168 u f) = (term3403 _90724 A _37168 u f).
Proof. exact (fun_ext (fun t : A -> Prop => @lem3522689 _90724 A _37168 u f t)). Qed.
Lemma lem3522691 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem3522692 {_90724 A : Type'} (_37168 : type852 _90724 A) (u : A -> Prop) (f : A -> _90724) : (term3417 _90724 A _37168 u f) = (term3418 _90724 A _37168 u f).
Proof. exact (MK_COMB (@lem3522691 A) (@lem3522690 _90724 A _37168 u f)). Qed.
Lemma lem3522693 {_90724 A : Type'} (_37168 : type852 _90724 A) (u : A -> Prop) (f : A -> _90724) : (term3401 _90724 A _37168 u f) = (term3419 _90724 A _37168 u f).
Proof. exact (MK_COMB (@lem3522688 _90724 A _37168 u f) (@lem3522692 _90724 A _37168 u f)). Qed.
Lemma lem3522694 {_90724 A : Type'} (_37168 : type852 _90724 A) (u : A -> Prop) (f : A -> _90724) : ((term3400 _90724 A _37168 u f) = (term3401 _90724 A _37168 u f)) = ((term3399 _90724 A _37168 u f) = (term3419 _90724 A _37168 u f)).
Proof. exact (MK_COMB (@lem3522682 _90724 A _37168 u f) (@lem3522693 _90724 A _37168 u f)). Qed.
Lemma lem3522695 {_90724 A : Type'} (_37168 : type852 _90724 A) (u : A -> Prop) (f : A -> _90724) : (term3399 _90724 A _37168 u f) = (term3419 _90724 A _37168 u f).
Proof. exact (EQ_MP (@lem3522694 _90724 A _37168 u f) (@lem3522672 _90724 A _37168 u f)). Qed.
Lemma lem3522808 {_90724 A : Type'} (_37168 : type852 _90724 A) (u : A -> Prop) (f : A -> _90724) : (term3373 _90724 A _37168 u f) = (term3419 _90724 A _37168 u f).
Proof. exact (TRANS (@lem3522668 _90724 A _37168 u f) (@lem3522695 _90724 A _37168 u f)). Qed.
Lemma lem3522809 {_90724 A : Type'} (_37168 : type852 _90724 A) (u : A -> Prop) : (term3374 _90724 A _37168 u) = (term3420 _90724 A _37168 u).
Proof. exact (fun_ext (fun f : A -> _90724 => @lem3522808 _90724 A _37168 u f)). Qed.
Lemma lem3522810 {_90724 A : Type'} : (@all (A -> _90724)) = (@all (A -> _90724)).
Proof. exact (eq_refl (@all (A -> _90724))). Qed.
Lemma lem3522811 {_90724 A : Type'} (_37168 : type852 _90724 A) (u : A -> Prop) : (term3375 _90724 A _37168 u) = (term3421 _90724 A _37168 u).
Proof. exact (MK_COMB (@lem3522810 _90724 A) (@lem3522809 _90724 A _37168 u)). Qed.
Lemma lem3522813 {A : Type'} (P : A -> Prop) (Q : A -> Prop) : (term726 A P Q) = (term725 A P Q).
Proof. exact (EQ_MP (@lem18953 A P Q) (@lem18952 A P Q)). Qed.
Lemma lem3522814 {_90724 A : Type'} (P : type805 _90724 A) (Q : type805 _90724 A) : (term3422 _90724 A P Q) = (term3423 _90724 A P Q).
Proof. exact (@lem3522813 (A -> _90724) P Q). Qed.
Lemma lem3522815 {_90724 A : Type'} (_37168 : type852 _90724 A) (u : A -> Prop) : (term3424 _90724 A _37168 u) = (term3425 _90724 A _37168 u).
Proof. exact (@lem3522814 _90724 A (term3426 _90724 A _37168 u) (term3427 _90724 A _37168 u)). Qed.
Lemma lem3522816 {_90724 A : Type'} (_37168 : type852 _90724 A) (u : A -> Prop) (f : A -> _90724) : (term3428 _90724 A _37168 u f) = (term3413 _90724 A _37168 u f).
Proof. exact (eq_refl (term3428 _90724 A _37168 u f)). Qed.
Lemma lem3522817 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem3522818 {_90724 A : Type'} (_37168 : type852 _90724 A) (u : A -> Prop) (f : A -> _90724) : (term3429 _90724 A _37168 u f) = (term3415 _90724 A _37168 u f).
Proof. exact (MK_COMB (@lem3522817) (@lem3522816 _90724 A _37168 u f)). Qed.
Lemma lem3522819 {_90724 A : Type'} (_37168 : type852 _90724 A) (u : A -> Prop) (f : A -> _90724) : (term3430 _90724 A _37168 u f) = (term3418 _90724 A _37168 u f).
Proof. exact (eq_refl (term3430 _90724 A _37168 u f)). Qed.
Lemma lem3522820 {_90724 A : Type'} (_37168 : type852 _90724 A) (u : A -> Prop) (f : A -> _90724) : (term3431 _90724 A _37168 u f) = (term3419 _90724 A _37168 u f).
Proof. exact (MK_COMB (@lem3522818 _90724 A _37168 u f) (@lem3522819 _90724 A _37168 u f)). Qed.
Lemma lem3522821 {_90724 A : Type'} (_37168 : type852 _90724 A) (u : A -> Prop) : (term3432 _90724 A _37168 u) = (term3420 _90724 A _37168 u).
Proof. exact (fun_ext (fun f : A -> _90724 => @lem3522820 _90724 A _37168 u f)). Qed.
Lemma lem3522822 {_90724 A : Type'} : (@all (A -> _90724)) = (@all (A -> _90724)).
Proof. exact (eq_refl (@all (A -> _90724))). Qed.
Lemma lem3522823 {_90724 A : Type'} (_37168 : type852 _90724 A) (u : A -> Prop) : (term3424 _90724 A _37168 u) = (term3421 _90724 A _37168 u).
Proof. exact (MK_COMB (@lem3522822 _90724 A) (@lem3522821 _90724 A _37168 u)). Qed.
Lemma lem3522824 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem3522825 {_90724 A : Type'} (_37168 : type852 _90724 A) (u : A -> Prop) : (term3433 _90724 A _37168 u) = (term3434 _90724 A _37168 u).
Proof. exact (MK_COMB (@lem3522824) (@lem3522823 _90724 A _37168 u)). Qed.
Lemma lem3522826 {_90724 A : Type'} (_37168 : type852 _90724 A) (u : A -> Prop) (f : A -> _90724) : (term3428 _90724 A _37168 u f) = (term3413 _90724 A _37168 u f).
Proof. exact (eq_refl (term3428 _90724 A _37168 u f)). Qed.
Lemma lem3522827 {_90724 A : Type'} (_37168 : type852 _90724 A) (u : A -> Prop) : (term3435 _90724 A _37168 u) = (term3426 _90724 A _37168 u).
Proof. exact (fun_ext (fun f : A -> _90724 => @lem3522826 _90724 A _37168 u f)). Qed.
Lemma lem3522828 {_90724 A : Type'} : (@all (A -> _90724)) = (@all (A -> _90724)).
Proof. exact (eq_refl (@all (A -> _90724))). Qed.
Lemma lem3522829 {_90724 A : Type'} (_37168 : type852 _90724 A) (u : A -> Prop) : (term3436 _90724 A _37168 u) = (term3437 _90724 A _37168 u).
Proof. exact (MK_COMB (@lem3522828 _90724 A) (@lem3522827 _90724 A _37168 u)). Qed.
Lemma lem3522830 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem3522831 {_90724 A : Type'} (_37168 : type852 _90724 A) (u : A -> Prop) : (term3438 _90724 A _37168 u) = (term3439 _90724 A _37168 u).
Proof. exact (MK_COMB (@lem3522830) (@lem3522829 _90724 A _37168 u)). Qed.
Lemma lem3522832 {_90724 A : Type'} (_37168 : type852 _90724 A) (u : A -> Prop) (f : A -> _90724) : (term3430 _90724 A _37168 u f) = (term3418 _90724 A _37168 u f).
Proof. exact (eq_refl (term3430 _90724 A _37168 u f)). Qed.
Lemma lem3522833 {_90724 A : Type'} (_37168 : type852 _90724 A) (u : A -> Prop) : (term3440 _90724 A _37168 u) = (term3427 _90724 A _37168 u).
Proof. exact (fun_ext (fun f : A -> _90724 => @lem3522832 _90724 A _37168 u f)). Qed.
Lemma lem3522834 {_90724 A : Type'} : (@all (A -> _90724)) = (@all (A -> _90724)).
Proof. exact (eq_refl (@all (A -> _90724))). Qed.
Lemma lem3522835 {_90724 A : Type'} (_37168 : type852 _90724 A) (u : A -> Prop) : (term3441 _90724 A _37168 u) = (term3442 _90724 A _37168 u).
Proof. exact (MK_COMB (@lem3522834 _90724 A) (@lem3522833 _90724 A _37168 u)). Qed.
Lemma lem3522836 {_90724 A : Type'} (_37168 : type852 _90724 A) (u : A -> Prop) : (term3425 _90724 A _37168 u) = (term3443 _90724 A _37168 u).
Proof. exact (MK_COMB (@lem3522831 _90724 A _37168 u) (@lem3522835 _90724 A _37168 u)). Qed.
Lemma lem3522837 {_90724 A : Type'} (_37168 : type852 _90724 A) (u : A -> Prop) : ((term3424 _90724 A _37168 u) = (term3425 _90724 A _37168 u)) = ((term3421 _90724 A _37168 u) = (term3443 _90724 A _37168 u)).
Proof. exact (MK_COMB (@lem3522825 _90724 A _37168 u) (@lem3522836 _90724 A _37168 u)). Qed.
Lemma lem3522838 {_90724 A : Type'} (_37168 : type852 _90724 A) (u : A -> Prop) : (term3421 _90724 A _37168 u) = (term3443 _90724 A _37168 u).
Proof. exact (EQ_MP (@lem3522837 _90724 A _37168 u) (@lem3522815 _90724 A _37168 u)). Qed.
Lemma lem3522959 {_90724 A : Type'} (_37168 : type852 _90724 A) (u : A -> Prop) : (term3375 _90724 A _37168 u) = (term3443 _90724 A _37168 u).
Proof. exact (TRANS (@lem3522811 _90724 A _37168 u) (@lem3522838 _90724 A _37168 u)). Qed.
Lemma lem3522960 {_90724 A : Type'} (_37168 : type852 _90724 A) : (term3376 _90724 A _37168) = (term3444 _90724 A _37168).
Proof. exact (fun_ext (fun u : A -> Prop => @lem3522959 _90724 A _37168 u)). Qed.
Lemma lem3522961 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem3522962 {_90724 A : Type'} (_37168 : type852 _90724 A) : (term3377 _90724 A _37168) = (term3445 _90724 A _37168).
Proof. exact (MK_COMB (@lem3522961 A) (@lem3522960 _90724 A _37168)). Qed.
Lemma lem3522964 {A : Type'} (P : A -> Prop) (Q : A -> Prop) : (term726 A P Q) = (term725 A P Q).
Proof. exact (EQ_MP (@lem18953 A P Q) (@lem18952 A P Q)). Qed.
Lemma lem3522965 {A : Type'} (P : type686 A) (Q : type686 A) : (term2898 A P Q) = (term2899 A P Q).
Proof. exact (@lem3522964 (A -> Prop) P Q). Qed.
Lemma lem3522966 {_90724 A : Type'} (_37168 : type852 _90724 A) : (term3446 _90724 A _37168) = (term3447 _90724 A _37168).
Proof. exact (@lem3522965 A (term3448 _90724 A _37168) (term3449 _90724 A _37168)). Qed.
Lemma lem3522967 {_90724 A : Type'} (_37168 : type852 _90724 A) (u : A -> Prop) : (term3450 _90724 A _37168 u) = (term3437 _90724 A _37168 u).
Proof. exact (eq_refl (term3450 _90724 A _37168 u)). Qed.
Lemma lem3522968 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem3522969 {_90724 A : Type'} (_37168 : type852 _90724 A) (u : A -> Prop) : (term3451 _90724 A _37168 u) = (term3439 _90724 A _37168 u).
Proof. exact (MK_COMB (@lem3522968) (@lem3522967 _90724 A _37168 u)). Qed.
Lemma lem3522970 {_90724 A : Type'} (_37168 : type852 _90724 A) (u : A -> Prop) : (term3452 _90724 A _37168 u) = (term3442 _90724 A _37168 u).
Proof. exact (eq_refl (term3452 _90724 A _37168 u)). Qed.
Lemma lem3522971 {_90724 A : Type'} (_37168 : type852 _90724 A) (u : A -> Prop) : (term3453 _90724 A _37168 u) = (term3443 _90724 A _37168 u).
Proof. exact (MK_COMB (@lem3522969 _90724 A _37168 u) (@lem3522970 _90724 A _37168 u)). Qed.
Lemma lem3522972 {_90724 A : Type'} (_37168 : type852 _90724 A) : (term3454 _90724 A _37168) = (term3444 _90724 A _37168).
Proof. exact (fun_ext (fun u : A -> Prop => @lem3522971 _90724 A _37168 u)). Qed.
Lemma lem3522973 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem3522974 {_90724 A : Type'} (_37168 : type852 _90724 A) : (term3446 _90724 A _37168) = (term3445 _90724 A _37168).
Proof. exact (MK_COMB (@lem3522973 A) (@lem3522972 _90724 A _37168)). Qed.
Lemma lem3522975 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem3522976 {_90724 A : Type'} (_37168 : type852 _90724 A) : (term3455 _90724 A _37168) = (term3456 _90724 A _37168).
Proof. exact (MK_COMB (@lem3522975) (@lem3522974 _90724 A _37168)). Qed.
Lemma lem3522977 {_90724 A : Type'} (_37168 : type852 _90724 A) (u : A -> Prop) : (term3450 _90724 A _37168 u) = (term3437 _90724 A _37168 u).
Proof. exact (eq_refl (term3450 _90724 A _37168 u)). Qed.
Lemma lem3522978 {_90724 A : Type'} (_37168 : type852 _90724 A) : (term3457 _90724 A _37168) = (term3448 _90724 A _37168).
Proof. exact (fun_ext (fun u : A -> Prop => @lem3522977 _90724 A _37168 u)). Qed.
Lemma lem3522979 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem3522980 {_90724 A : Type'} (_37168 : type852 _90724 A) : (term3458 _90724 A _37168) = (term3459 _90724 A _37168).
Proof. exact (MK_COMB (@lem3522979 A) (@lem3522978 _90724 A _37168)). Qed.
Lemma lem3522981 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem3522982 {_90724 A : Type'} (_37168 : type852 _90724 A) : (term3460 _90724 A _37168) = (term3461 _90724 A _37168).
Proof. exact (MK_COMB (@lem3522981) (@lem3522980 _90724 A _37168)). Qed.
Lemma lem3522983 {_90724 A : Type'} (_37168 : type852 _90724 A) (u : A -> Prop) : (term3452 _90724 A _37168 u) = (term3442 _90724 A _37168 u).
Proof. exact (eq_refl (term3452 _90724 A _37168 u)). Qed.
Lemma lem3522984 {_90724 A : Type'} (_37168 : type852 _90724 A) : (term3462 _90724 A _37168) = (term3449 _90724 A _37168).
Proof. exact (fun_ext (fun u : A -> Prop => @lem3522983 _90724 A _37168 u)). Qed.
Lemma lem3522985 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem3522986 {_90724 A : Type'} (_37168 : type852 _90724 A) : (term3463 _90724 A _37168) = (term3464 _90724 A _37168).
Proof. exact (MK_COMB (@lem3522985 A) (@lem3522984 _90724 A _37168)). Qed.
Lemma lem3522987 {_90724 A : Type'} (_37168 : type852 _90724 A) : (term3447 _90724 A _37168) = (term3465 _90724 A _37168).
Proof. exact (MK_COMB (@lem3522982 _90724 A _37168) (@lem3522986 _90724 A _37168)). Qed.
Lemma lem3522988 {_90724 A : Type'} (_37168 : type852 _90724 A) : ((term3446 _90724 A _37168) = (term3447 _90724 A _37168)) = ((term3445 _90724 A _37168) = (term3465 _90724 A _37168)).
Proof. exact (MK_COMB (@lem3522976 _90724 A _37168) (@lem3522987 _90724 A _37168)). Qed.
Lemma lem3522989 {_90724 A : Type'} (_37168 : type852 _90724 A) : (term3445 _90724 A _37168) = (term3465 _90724 A _37168).
Proof. exact (EQ_MP (@lem3522988 _90724 A _37168) (@lem3522966 _90724 A _37168)). Qed.
Lemma lem3523118 {_90724 A : Type'} (_37168 : type852 _90724 A) : (term3377 _90724 A _37168) = (term3465 _90724 A _37168).
Proof. exact (TRANS (@lem3522962 _90724 A _37168) (@lem3522989 _90724 A _37168)). Qed.
Lemma lem3523120 {A : Type'} (P : Prop) (Q : A -> Prop) : (term434 A P Q) = (term435 A P Q).
Proof. exact (EQ_MP (@lem18911 A P Q) (@lem18910 A P Q)). Qed.
Lemma lem3523121 {A : Type'} (P : Prop) (Q : A -> Prop) : (term434 A P Q) = (term435 A P Q).
Proof. exact (@lem3523120 A P Q). Qed.
Lemma lem3523122 {_90724 A : Type'} (_37168 : type852 _90724 A) (GEN_PVAR_84 : A) (u : A -> Prop) (f : A -> _90724) (t : A -> Prop) : (term3466 _90724 A _37168 GEN_PVAR_84 u f t) = (term3467 _90724 A _37168 GEN_PVAR_84 u f t).
Proof. exact (@lem3523121 A (term3468 _90724 A _37168 u f t GEN_PVAR_84) (term2059 _90724 A GEN_PVAR_84 u f t)). Qed.
Lemma lem3523123 {_90724 A : Type'} (GEN_PVAR_84 : A) (u : A -> Prop) (f : A -> _90724) (t : A -> Prop) (x : A) : (term3355 _90724 A GEN_PVAR_84 u f t x) = (term2058 _90724 A GEN_PVAR_84 u f t x).
Proof. exact (eq_refl (term3355 _90724 A GEN_PVAR_84 u f t x)). Qed.
Lemma lem3523124 {_90724 A : Type'} (GEN_PVAR_84 : A) (u : A -> Prop) (f : A -> _90724) (t : A -> Prop) : (term3469 _90724 A GEN_PVAR_84 u f t) = (term2059 _90724 A GEN_PVAR_84 u f t).
Proof. exact (fun_ext (fun x : A => @lem3523123 _90724 A GEN_PVAR_84 u f t x)). Qed.
Lemma lem3523125 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem3523126 {_90724 A : Type'} (GEN_PVAR_84 : A) (u : A -> Prop) (f : A -> _90724) (t : A -> Prop) : (term3470 _90724 A GEN_PVAR_84 u f t) = (term2060 _90724 A GEN_PVAR_84 u f t).
Proof. exact (MK_COMB (@lem3523125 A) (@lem3523124 _90724 A GEN_PVAR_84 u f t)). Qed.
Lemma lem3523127 {_90724 A : Type'} (_37168 : type852 _90724 A) (u : A -> Prop) (f : A -> _90724) (t : A -> Prop) (GEN_PVAR_84 : A) : (term3361 _90724 A _37168 u f t GEN_PVAR_84) = (term3361 _90724 A _37168 u f t GEN_PVAR_84).
Proof. exact (eq_refl (term3361 _90724 A _37168 u f t GEN_PVAR_84)). Qed.
Lemma lem3523128 {_90724 A : Type'} (_37168 : type852 _90724 A) (GEN_PVAR_84 : A) (u : A -> Prop) (f : A -> _90724) (t : A -> Prop) : (term3466 _90724 A _37168 GEN_PVAR_84 u f t) = (term3362 _90724 A _37168 GEN_PVAR_84 u f t).
Proof. exact (MK_COMB (@lem3523127 _90724 A _37168 u f t GEN_PVAR_84) (@lem3523126 _90724 A GEN_PVAR_84 u f t)). Qed.
Lemma lem3523129 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem3523130 {_90724 A : Type'} (_37168 : type852 _90724 A) (GEN_PVAR_84 : A) (u : A -> Prop) (f : A -> _90724) (t : A -> Prop) : (term3471 _90724 A _37168 GEN_PVAR_84 u f t) = (term3472 _90724 A _37168 GEN_PVAR_84 u f t).
Proof. exact (MK_COMB (@lem3523129) (@lem3523128 _90724 A _37168 GEN_PVAR_84 u f t)). Qed.
Lemma lem3523131 {_90724 A : Type'} (GEN_PVAR_84 : A) (u : A -> Prop) (f : A -> _90724) (t : A -> Prop) (x : A) : (term3355 _90724 A GEN_PVAR_84 u f t x) = (term2058 _90724 A GEN_PVAR_84 u f t x).
Proof. exact (eq_refl (term3355 _90724 A GEN_PVAR_84 u f t x)). Qed.
Lemma lem3523132 {_90724 A : Type'} (_37168 : type852 _90724 A) (u : A -> Prop) (f : A -> _90724) (t : A -> Prop) (GEN_PVAR_84 : A) : (term3361 _90724 A _37168 u f t GEN_PVAR_84) = (term3361 _90724 A _37168 u f t GEN_PVAR_84).
Proof. exact (eq_refl (term3361 _90724 A _37168 u f t GEN_PVAR_84)). Qed.
Lemma lem3523133 {_90724 A : Type'} (_37168 : type852 _90724 A) (GEN_PVAR_84 : A) (u : A -> Prop) (f : A -> _90724) (t : A -> Prop) (x : A) : (term3473 _90724 A _37168 GEN_PVAR_84 u f t x) = (term3474 _90724 A _37168 GEN_PVAR_84 u f t x).
Proof. exact (MK_COMB (@lem3523132 _90724 A _37168 u f t GEN_PVAR_84) (@lem3523131 _90724 A GEN_PVAR_84 u f t x)). Qed.
Lemma lem3523134 {_90724 A : Type'} (_37168 : type852 _90724 A) (GEN_PVAR_84 : A) (u : A -> Prop) (f : A -> _90724) (t : A -> Prop) : (term3475 _90724 A _37168 GEN_PVAR_84 u f t) = (term3476 _90724 A _37168 GEN_PVAR_84 u f t).
Proof. exact (fun_ext (fun x : A => @lem3523133 _90724 A _37168 GEN_PVAR_84 u f t x)). Qed.
Lemma lem3523135 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem3523136 {_90724 A : Type'} (_37168 : type852 _90724 A) (GEN_PVAR_84 : A) (u : A -> Prop) (f : A -> _90724) (t : A -> Prop) : (term3467 _90724 A _37168 GEN_PVAR_84 u f t) = (term3477 _90724 A _37168 GEN_PVAR_84 u f t).
Proof. exact (MK_COMB (@lem3523135 A) (@lem3523134 _90724 A _37168 GEN_PVAR_84 u f t)). Qed.
Lemma lem3523137 {_90724 A : Type'} (_37168 : type852 _90724 A) (GEN_PVAR_84 : A) (u : A -> Prop) (f : A -> _90724) (t : A -> Prop) : ((term3466 _90724 A _37168 GEN_PVAR_84 u f t) = (term3467 _90724 A _37168 GEN_PVAR_84 u f t)) = ((term3362 _90724 A _37168 GEN_PVAR_84 u f t) = (term3477 _90724 A _37168 GEN_PVAR_84 u f t)).
Proof. exact (MK_COMB (@lem3523130 _90724 A _37168 GEN_PVAR_84 u f t) (@lem3523136 _90724 A _37168 GEN_PVAR_84 u f t)). Qed.
Lemma lem3523138 {_90724 A : Type'} (_37168 : type852 _90724 A) (GEN_PVAR_84 : A) (u : A -> Prop) (f : A -> _90724) (t : A -> Prop) : (term3362 _90724 A _37168 GEN_PVAR_84 u f t) = (term3477 _90724 A _37168 GEN_PVAR_84 u f t).
Proof. exact (EQ_MP (@lem3523137 _90724 A _37168 GEN_PVAR_84 u f t) (@lem3523122 _90724 A _37168 GEN_PVAR_84 u f t)). Qed.
Lemma lem3523139 {_90724 A : Type'} (_37168 : type852 _90724 A) (u : A -> Prop) (f : A -> _90724) (t : A -> Prop) : (term3381 _90724 A _37168 u f t) = (term3478 _90724 A _37168 u f t).
Proof. exact (fun_ext (fun GEN_PVAR_84 : A => @lem3523138 _90724 A _37168 GEN_PVAR_84 u f t)). Qed.
Lemma lem3523140 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem3523141 {_90724 A : Type'} (_37168 : type852 _90724 A) (u : A -> Prop) (f : A -> _90724) (t : A -> Prop) : (term3396 _90724 A _37168 u f t) = (term3479 _90724 A _37168 u f t).
Proof. exact (MK_COMB (@lem3523140 A) (@lem3523139 _90724 A _37168 u f t)). Qed.
Lemma lem3523143 {A B : Type'} (P : type1413 A B) : (term453 A B P) = (term454 A B P).
Proof. exact (EQ_MP (@lem18899 A B P) (@lem18898 A B P)). Qed.
Lemma lem3523144 {A : Type'} (P : type1402 A) : (term3480 A P) = (term3481 A P).
Proof. exact (@lem3523143 A A P). Qed.
Lemma lem3523145 {_90724 A : Type'} (_37168 : type852 _90724 A) (u : A -> Prop) (f : A -> _90724) (t : A -> Prop) : (term3482 _90724 A _37168 u f t) = (term3483 _90724 A _37168 u f t).
Proof. exact (@lem3523144 A (term3484 _90724 A _37168 u f t)). Qed.
Lemma lem3523146 {_90724 A : Type'} (_37168 : type852 _90724 A) (GEN_PVAR_84 : A) (u : A -> Prop) (f : A -> _90724) (t : A -> Prop) : (term3485 _90724 A _37168 u f t GEN_PVAR_84) = (term3476 _90724 A _37168 GEN_PVAR_84 u f t).
Proof. exact (eq_refl (term3485 _90724 A _37168 u f t GEN_PVAR_84)). Qed.
Lemma lem3523147 {A : Type'} (x : A) : x = x.
Proof. exact (eq_refl x). Qed.
Lemma lem3523148 {_90724 A : Type'} (_37168 : type852 _90724 A) (GEN_PVAR_84 : A) (u : A -> Prop) (f : A -> _90724) (t : A -> Prop) (x : A) : (term3486 _90724 A _37168 u f t GEN_PVAR_84 x) = (term3487 _90724 A _37168 GEN_PVAR_84 u f t x).
Proof. exact (MK_COMB (@lem3523146 _90724 A _37168 GEN_PVAR_84 u f t) (@lem3523147 A x)). Qed.
Lemma lem3523149 {_90724 A : Type'} (_37168 : type852 _90724 A) (GEN_PVAR_84 : A) (u : A -> Prop) (f : A -> _90724) (t : A -> Prop) (x : A) : (term3487 _90724 A _37168 GEN_PVAR_84 u f t x) = (term3474 _90724 A _37168 GEN_PVAR_84 u f t x).
Proof. exact (eq_refl (term3487 _90724 A _37168 GEN_PVAR_84 u f t x)). Qed.
Lemma lem3523150 {_90724 A : Type'} (_37168 : type852 _90724 A) (GEN_PVAR_84 : A) (u : A -> Prop) (f : A -> _90724) (t : A -> Prop) (x : A) : (term3486 _90724 A _37168 u f t GEN_PVAR_84 x) = (term3474 _90724 A _37168 GEN_PVAR_84 u f t x).
Proof. exact (TRANS (@lem3523148 _90724 A _37168 GEN_PVAR_84 u f t x) (@lem3523149 _90724 A _37168 GEN_PVAR_84 u f t x)). Qed.
Lemma lem3523151 {_90724 A : Type'} (_37168 : type852 _90724 A) (GEN_PVAR_84 : A) (u : A -> Prop) (f : A -> _90724) (t : A -> Prop) : (term3488 _90724 A _37168 u f t GEN_PVAR_84) = (term3476 _90724 A _37168 GEN_PVAR_84 u f t).
Proof. exact (fun_ext (fun x : A => @lem3523150 _90724 A _37168 GEN_PVAR_84 u f t x)). Qed.
Lemma lem3523152 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem3523153 {_90724 A : Type'} (_37168 : type852 _90724 A) (GEN_PVAR_84 : A) (u : A -> Prop) (f : A -> _90724) (t : A -> Prop) : (term3489 _90724 A _37168 u f t GEN_PVAR_84) = (term3477 _90724 A _37168 GEN_PVAR_84 u f t).
Proof. exact (MK_COMB (@lem3523152 A) (@lem3523151 _90724 A _37168 GEN_PVAR_84 u f t)). Qed.
Lemma lem3523154 {_90724 A : Type'} (_37168 : type852 _90724 A) (u : A -> Prop) (f : A -> _90724) (t : A -> Prop) : (term3490 _90724 A _37168 u f t) = (term3478 _90724 A _37168 u f t).
Proof. exact (fun_ext (fun GEN_PVAR_84 : A => @lem3523153 _90724 A _37168 GEN_PVAR_84 u f t)). Qed.
Lemma lem3523155 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem3523156 {_90724 A : Type'} (_37168 : type852 _90724 A) (u : A -> Prop) (f : A -> _90724) (t : A -> Prop) : (term3482 _90724 A _37168 u f t) = (term3479 _90724 A _37168 u f t).
Proof. exact (MK_COMB (@lem3523155 A) (@lem3523154 _90724 A _37168 u f t)). Qed.
Lemma lem3523157 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem3523158 {_90724 A : Type'} (_37168 : type852 _90724 A) (u : A -> Prop) (f : A -> _90724) (t : A -> Prop) : (term3491 _90724 A _37168 u f t) = (term3492 _90724 A _37168 u f t).
Proof. exact (MK_COMB (@lem3523157) (@lem3523156 _90724 A _37168 u f t)). Qed.
Lemma lem3523159 {_90724 A : Type'} (_37168 : type852 _90724 A) (GEN_PVAR_84 : A) (u : A -> Prop) (f : A -> _90724) (t : A -> Prop) : (term3485 _90724 A _37168 u f t GEN_PVAR_84) = (term3476 _90724 A _37168 GEN_PVAR_84 u f t).
Proof. exact (eq_refl (term3485 _90724 A _37168 u f t GEN_PVAR_84)). Qed.
Lemma lem3523160 {A : Type'} (x : A -> A) (GEN_PVAR_84 : A) : (x GEN_PVAR_84) = (x GEN_PVAR_84).
Proof. exact (eq_refl (x GEN_PVAR_84)). Qed.
Lemma lem3523161 {_90724 A : Type'} (_37168 : type852 _90724 A) (u : A -> Prop) (f : A -> _90724) (t : A -> Prop) (x : A -> A) (GEN_PVAR_84 : A) : (term3493 _90724 A _37168 u f t x GEN_PVAR_84) = (term3494 _90724 A _37168 u f t x GEN_PVAR_84).
Proof. exact (MK_COMB (@lem3523159 _90724 A _37168 GEN_PVAR_84 u f t) (@lem3523160 A x GEN_PVAR_84)). Qed.
Lemma lem3523162 {_90724 A : Type'} (_37168 : type852 _90724 A) (u : A -> Prop) (f : A -> _90724) (t : A -> Prop) (x : A -> A) (GEN_PVAR_84 : A) : (term3494 _90724 A _37168 u f t x GEN_PVAR_84) = (term3495 _90724 A _37168 u f t x GEN_PVAR_84).
Proof. exact (eq_refl (term3494 _90724 A _37168 u f t x GEN_PVAR_84)). Qed.
Lemma lem3523163 {_90724 A : Type'} (_37168 : type852 _90724 A) (u : A -> Prop) (f : A -> _90724) (t : A -> Prop) (x : A -> A) (GEN_PVAR_84 : A) : (term3493 _90724 A _37168 u f t x GEN_PVAR_84) = (term3495 _90724 A _37168 u f t x GEN_PVAR_84).
Proof. exact (TRANS (@lem3523161 _90724 A _37168 u f t x GEN_PVAR_84) (@lem3523162 _90724 A _37168 u f t x GEN_PVAR_84)). Qed.
Lemma lem3523164 {_90724 A : Type'} (_37168 : type852 _90724 A) (u : A -> Prop) (f : A -> _90724) (t : A -> Prop) (x : A -> A) : (term3496 _90724 A _37168 u f t x) = (term3497 _90724 A _37168 u f t x).
Proof. exact (fun_ext (fun GEN_PVAR_84 : A => @lem3523163 _90724 A _37168 u f t x GEN_PVAR_84)). Qed.
Lemma lem3523165 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem3523166 {_90724 A : Type'} (_37168 : type852 _90724 A) (u : A -> Prop) (f : A -> _90724) (t : A -> Prop) (x : A -> A) : (term3498 _90724 A _37168 u f t x) = (term3499 _90724 A _37168 u f t x).
Proof. exact (MK_COMB (@lem3523165 A) (@lem3523164 _90724 A _37168 u f t x)). Qed.
Lemma lem3523167 {_90724 A : Type'} (_37168 : type852 _90724 A) (u : A -> Prop) (f : A -> _90724) (t : A -> Prop) : (term3500 _90724 A _37168 u f t) = (term3501 _90724 A _37168 u f t).
Proof. exact (fun_ext (fun x : A -> A => @lem3523166 _90724 A _37168 u f t x)). Qed.
Lemma lem3523168 {A : Type'} : (@ex (A -> A)) = (@ex (A -> A)).
Proof. exact (eq_refl (@ex (A -> A))). Qed.
Lemma lem3523169 {_90724 A : Type'} (_37168 : type852 _90724 A) (u : A -> Prop) (f : A -> _90724) (t : A -> Prop) : (term3483 _90724 A _37168 u f t) = (term3502 _90724 A _37168 u f t).
Proof. exact (MK_COMB (@lem3523168 A) (@lem3523167 _90724 A _37168 u f t)). Qed.
Lemma lem3523170 {_90724 A : Type'} (_37168 : type852 _90724 A) (u : A -> Prop) (f : A -> _90724) (t : A -> Prop) : ((term3482 _90724 A _37168 u f t) = (term3483 _90724 A _37168 u f t)) = ((term3479 _90724 A _37168 u f t) = (term3502 _90724 A _37168 u f t)).
Proof. exact (MK_COMB (@lem3523158 _90724 A _37168 u f t) (@lem3523169 _90724 A _37168 u f t)). Qed.
Lemma lem3523171 {_90724 A : Type'} (_37168 : type852 _90724 A) (u : A -> Prop) (f : A -> _90724) (t : A -> Prop) : (term3479 _90724 A _37168 u f t) = (term3502 _90724 A _37168 u f t).
Proof. exact (EQ_MP (@lem3523170 _90724 A _37168 u f t) (@lem3523145 _90724 A _37168 u f t)). Qed.
Lemma lem3523172 {_90724 A : Type'} (_37168 : type852 _90724 A) (u : A -> Prop) (f : A -> _90724) (t : A -> Prop) : (term3396 _90724 A _37168 u f t) = (term3502 _90724 A _37168 u f t).
Proof. exact (TRANS (@lem3523141 _90724 A _37168 u f t) (@lem3523171 _90724 A _37168 u f t)). Qed.
Lemma lem3523173 {_90724 A : Type'} (_37168 : type852 _90724 A) (u : A -> Prop) (f : A -> _90724) : (term3403 _90724 A _37168 u f) = (term3503 _90724 A _37168 u f).
Proof. exact (fun_ext (fun t : A -> Prop => @lem3523172 _90724 A _37168 u f t)). Qed.
Lemma lem3523174 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem3523175 {_90724 A : Type'} (_37168 : type852 _90724 A) (u : A -> Prop) (f : A -> _90724) : (term3418 _90724 A _37168 u f) = (term3504 _90724 A _37168 u f).
Proof. exact (MK_COMB (@lem3523174 A) (@lem3523173 _90724 A _37168 u f)). Qed.
Lemma lem3523177 {A B : Type'} (P : type1413 A B) : (term453 A B P) = (term454 A B P).
Proof. exact (EQ_MP (@lem18899 A B P) (@lem18898 A B P)). Qed.
Lemma lem3523178 {A : Type'} (P : type624 A) : (term3505 A P) = (term3506 A P).
Proof. exact (@lem3523177 (A -> Prop) (A -> A) P). Qed.
Lemma lem3523179 {_90724 A : Type'} (_37168 : type852 _90724 A) (u : A -> Prop) (f : A -> _90724) : (term3507 _90724 A _37168 u f) = (term3508 _90724 A _37168 u f).
Proof. exact (@lem3523178 A (term3509 _90724 A _37168 u f)). Qed.
Lemma lem3523180 {_90724 A : Type'} (_37168 : type852 _90724 A) (u : A -> Prop) (f : A -> _90724) (t : A -> Prop) : (term3510 _90724 A _37168 u f t) = (term3501 _90724 A _37168 u f t).
Proof. exact (eq_refl (term3510 _90724 A _37168 u f t)). Qed.
Lemma lem3523181 {A : Type'} (x : A -> A) : x = x.
Proof. exact (eq_refl x). Qed.
Lemma lem3523182 {_90724 A : Type'} (_37168 : type852 _90724 A) (u : A -> Prop) (f : A -> _90724) (t : A -> Prop) (x : A -> A) : (term3511 _90724 A _37168 u f t x) = (term3512 _90724 A _37168 u f t x).
Proof. exact (MK_COMB (@lem3523180 _90724 A _37168 u f t) (@lem3523181 A x)). Qed.
Lemma lem3523183 {_90724 A : Type'} (_37168 : type852 _90724 A) (u : A -> Prop) (f : A -> _90724) (t : A -> Prop) (x : A -> A) : (term3512 _90724 A _37168 u f t x) = (term3499 _90724 A _37168 u f t x).
Proof. exact (eq_refl (term3512 _90724 A _37168 u f t x)). Qed.
Lemma lem3523184 {_90724 A : Type'} (_37168 : type852 _90724 A) (u : A -> Prop) (f : A -> _90724) (t : A -> Prop) (x : A -> A) : (term3511 _90724 A _37168 u f t x) = (term3499 _90724 A _37168 u f t x).
Proof. exact (TRANS (@lem3523182 _90724 A _37168 u f t x) (@lem3523183 _90724 A _37168 u f t x)). Qed.
Lemma lem3523185 {_90724 A : Type'} (_37168 : type852 _90724 A) (u : A -> Prop) (f : A -> _90724) (t : A -> Prop) : (term3513 _90724 A _37168 u f t) = (term3501 _90724 A _37168 u f t).
Proof. exact (fun_ext (fun x : A -> A => @lem3523184 _90724 A _37168 u f t x)). Qed.
Lemma lem3523186 {A : Type'} : (@ex (A -> A)) = (@ex (A -> A)).
Proof. exact (eq_refl (@ex (A -> A))). Qed.
Lemma lem3523187 {_90724 A : Type'} (_37168 : type852 _90724 A) (u : A -> Prop) (f : A -> _90724) (t : A -> Prop) : (term3514 _90724 A _37168 u f t) = (term3502 _90724 A _37168 u f t).
Proof. exact (MK_COMB (@lem3523186 A) (@lem3523185 _90724 A _37168 u f t)). Qed.
Lemma lem3523188 {_90724 A : Type'} (_37168 : type852 _90724 A) (u : A -> Prop) (f : A -> _90724) : (term3515 _90724 A _37168 u f) = (term3503 _90724 A _37168 u f).
Proof. exact (fun_ext (fun t : A -> Prop => @lem3523187 _90724 A _37168 u f t)). Qed.
Lemma lem3523189 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem3523190 {_90724 A : Type'} (_37168 : type852 _90724 A) (u : A -> Prop) (f : A -> _90724) : (term3507 _90724 A _37168 u f) = (term3504 _90724 A _37168 u f).
Proof. exact (MK_COMB (@lem3523189 A) (@lem3523188 _90724 A _37168 u f)). Qed.
Lemma lem3523191 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem3523192 {_90724 A : Type'} (_37168 : type852 _90724 A) (u : A -> Prop) (f : A -> _90724) : (term3516 _90724 A _37168 u f) = (term3517 _90724 A _37168 u f).
Proof. exact (MK_COMB (@lem3523191) (@lem3523190 _90724 A _37168 u f)). Qed.
Lemma lem3523193 {_90724 A : Type'} (_37168 : type852 _90724 A) (u : A -> Prop) (f : A -> _90724) (t : A -> Prop) : (term3510 _90724 A _37168 u f t) = (term3501 _90724 A _37168 u f t).
Proof. exact (eq_refl (term3510 _90724 A _37168 u f t)). Qed.
Lemma lem3523194 {A : Type'} (x : type670 A) (t : A -> Prop) : (x t) = (x t).
Proof. exact (eq_refl (x t)). Qed.
Lemma lem3523195 {_90724 A : Type'} (_37168 : type852 _90724 A) (u : A -> Prop) (f : A -> _90724) (x : type670 A) (t : A -> Prop) : (term3518 _90724 A _37168 u f x t) = (term3519 _90724 A _37168 u f x t).
Proof. exact (MK_COMB (@lem3523193 _90724 A _37168 u f t) (@lem3523194 A x t)). Qed.
Lemma lem3523196 {_90724 A : Type'} (_37168 : type852 _90724 A) (u : A -> Prop) (f : A -> _90724) (x : type670 A) (t : A -> Prop) : (term3519 _90724 A _37168 u f x t) = (term3520 _90724 A _37168 u f x t).
Proof. exact (eq_refl (term3519 _90724 A _37168 u f x t)). Qed.
Lemma lem3523197 {_90724 A : Type'} (_37168 : type852 _90724 A) (u : A -> Prop) (f : A -> _90724) (x : type670 A) (t : A -> Prop) : (term3518 _90724 A _37168 u f x t) = (term3520 _90724 A _37168 u f x t).
Proof. exact (TRANS (@lem3523195 _90724 A _37168 u f x t) (@lem3523196 _90724 A _37168 u f x t)). Qed.
Lemma lem3523198 {_90724 A : Type'} (_37168 : type852 _90724 A) (u : A -> Prop) (f : A -> _90724) (x : type670 A) : (term3521 _90724 A _37168 u f x) = (term3522 _90724 A _37168 u f x).
Proof. exact (fun_ext (fun t : A -> Prop => @lem3523197 _90724 A _37168 u f x t)). Qed.
Lemma lem3523199 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem3523200 {_90724 A : Type'} (_37168 : type852 _90724 A) (u : A -> Prop) (f : A -> _90724) (x : type670 A) : (term3523 _90724 A _37168 u f x) = (term3524 _90724 A _37168 u f x).
Proof. exact (MK_COMB (@lem3523199 A) (@lem3523198 _90724 A _37168 u f x)). Qed.
Lemma lem3523201 {_90724 A : Type'} (_37168 : type852 _90724 A) (u : A -> Prop) (f : A -> _90724) : (term3525 _90724 A _37168 u f) = (term3526 _90724 A _37168 u f).
Proof. exact (fun_ext (fun x : type670 A => @lem3523200 _90724 A _37168 u f x)). Qed.
Lemma lem3523202 {A : Type'} : (@ex ((A -> Prop) -> A -> A)) = (@ex ((A -> Prop) -> A -> A)).
Proof. exact (eq_refl (@ex ((A -> Prop) -> A -> A))). Qed.
Lemma lem3523203 {_90724 A : Type'} (_37168 : type852 _90724 A) (u : A -> Prop) (f : A -> _90724) : (term3508 _90724 A _37168 u f) = (term3527 _90724 A _37168 u f).
Proof. exact (MK_COMB (@lem3523202 A) (@lem3523201 _90724 A _37168 u f)). Qed.
Lemma lem3523204 {_90724 A : Type'} (_37168 : type852 _90724 A) (u : A -> Prop) (f : A -> _90724) : ((term3507 _90724 A _37168 u f) = (term3508 _90724 A _37168 u f)) = ((term3504 _90724 A _37168 u f) = (term3527 _90724 A _37168 u f)).
Proof. exact (MK_COMB (@lem3523192 _90724 A _37168 u f) (@lem3523203 _90724 A _37168 u f)). Qed.
Lemma lem3523205 {_90724 A : Type'} (_37168 : type852 _90724 A) (u : A -> Prop) (f : A -> _90724) : (term3504 _90724 A _37168 u f) = (term3527 _90724 A _37168 u f).
Proof. exact (EQ_MP (@lem3523204 _90724 A _37168 u f) (@lem3523179 _90724 A _37168 u f)). Qed.
Lemma lem3523206 {_90724 A : Type'} (_37168 : type852 _90724 A) (u : A -> Prop) (f : A -> _90724) : (term3418 _90724 A _37168 u f) = (term3527 _90724 A _37168 u f).
Proof. exact (TRANS (@lem3523175 _90724 A _37168 u f) (@lem3523205 _90724 A _37168 u f)). Qed.
Lemma lem3523207 {_90724 A : Type'} (_37168 : type852 _90724 A) (u : A -> Prop) : (term3427 _90724 A _37168 u) = (term3528 _90724 A _37168 u).
Proof. exact (fun_ext (fun f : A -> _90724 => @lem3523206 _90724 A _37168 u f)). Qed.
Lemma lem3523208 {_90724 A : Type'} : (@all (A -> _90724)) = (@all (A -> _90724)).
Proof. exact (eq_refl (@all (A -> _90724))). Qed.
Lemma lem3523209 {_90724 A : Type'} (_37168 : type852 _90724 A) (u : A -> Prop) : (term3442 _90724 A _37168 u) = (term3529 _90724 A _37168 u).
Proof. exact (MK_COMB (@lem3523208 _90724 A) (@lem3523207 _90724 A _37168 u)). Qed.
Lemma lem3523211 {A B : Type'} (P : type1413 A B) : (term453 A B P) = (term454 A B P).
Proof. exact (EQ_MP (@lem18899 A B P) (@lem18898 A B P)). Qed.
Lemma lem3523212 {_90724 A : Type'} (P : type774 _90724 A) : (term3530 _90724 A P) = (term3531 _90724 A P).
Proof. exact (@lem3523211 (A -> _90724) (type670 A) P). Qed.
Lemma lem3523213 {_90724 A : Type'} (_37168 : type852 _90724 A) (u : A -> Prop) : (term3532 _90724 A _37168 u) = (term3533 _90724 A _37168 u).
Proof. exact (@lem3523212 _90724 A (term3534 _90724 A _37168 u)). Qed.
Lemma lem3523214 {_90724 A : Type'} (_37168 : type852 _90724 A) (u : A -> Prop) (f : A -> _90724) : (term3535 _90724 A _37168 u f) = (term3526 _90724 A _37168 u f).
Proof. exact (eq_refl (term3535 _90724 A _37168 u f)). Qed.
Lemma lem3523215 {A : Type'} (x : type670 A) : x = x.
Proof. exact (eq_refl x). Qed.
Lemma lem3523216 {_90724 A : Type'} (_37168 : type852 _90724 A) (u : A -> Prop) (f : A -> _90724) (x : type670 A) : (term3536 _90724 A _37168 u f x) = (term3537 _90724 A _37168 u f x).
Proof. exact (MK_COMB (@lem3523214 _90724 A _37168 u f) (@lem3523215 A x)). Qed.
Lemma lem3523217 {_90724 A : Type'} (_37168 : type852 _90724 A) (u : A -> Prop) (f : A -> _90724) (x : type670 A) : (term3537 _90724 A _37168 u f x) = (term3524 _90724 A _37168 u f x).
Proof. exact (eq_refl (term3537 _90724 A _37168 u f x)). Qed.
Lemma lem3523218 {_90724 A : Type'} (_37168 : type852 _90724 A) (u : A -> Prop) (f : A -> _90724) (x : type670 A) : (term3536 _90724 A _37168 u f x) = (term3524 _90724 A _37168 u f x).
Proof. exact (TRANS (@lem3523216 _90724 A _37168 u f x) (@lem3523217 _90724 A _37168 u f x)). Qed.
Lemma lem3523219 {_90724 A : Type'} (_37168 : type852 _90724 A) (u : A -> Prop) (f : A -> _90724) : (term3538 _90724 A _37168 u f) = (term3526 _90724 A _37168 u f).
Proof. exact (fun_ext (fun x : type670 A => @lem3523218 _90724 A _37168 u f x)). Qed.
Lemma lem3523220 {A : Type'} : (@ex ((A -> Prop) -> A -> A)) = (@ex ((A -> Prop) -> A -> A)).
Proof. exact (eq_refl (@ex ((A -> Prop) -> A -> A))). Qed.
Lemma lem3523221 {_90724 A : Type'} (_37168 : type852 _90724 A) (u : A -> Prop) (f : A -> _90724) : (term3539 _90724 A _37168 u f) = (term3527 _90724 A _37168 u f).
Proof. exact (MK_COMB (@lem3523220 A) (@lem3523219 _90724 A _37168 u f)). Qed.
Lemma lem3523222 {_90724 A : Type'} (_37168 : type852 _90724 A) (u : A -> Prop) : (term3540 _90724 A _37168 u) = (term3528 _90724 A _37168 u).
Proof. exact (fun_ext (fun f : A -> _90724 => @lem3523221 _90724 A _37168 u f)). Qed.
Lemma lem3523223 {_90724 A : Type'} : (@all (A -> _90724)) = (@all (A -> _90724)).
Proof. exact (eq_refl (@all (A -> _90724))). Qed.
Lemma lem3523224 {_90724 A : Type'} (_37168 : type852 _90724 A) (u : A -> Prop) : (term3532 _90724 A _37168 u) = (term3529 _90724 A _37168 u).
Proof. exact (MK_COMB (@lem3523223 _90724 A) (@lem3523222 _90724 A _37168 u)). Qed.
Lemma lem3523225 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem3523226 {_90724 A : Type'} (_37168 : type852 _90724 A) (u : A -> Prop) : (term3541 _90724 A _37168 u) = (term3542 _90724 A _37168 u).
Proof. exact (MK_COMB (@lem3523225) (@lem3523224 _90724 A _37168 u)). Qed.
Lemma lem3523227 {_90724 A : Type'} (_37168 : type852 _90724 A) (u : A -> Prop) (f : A -> _90724) : (term3535 _90724 A _37168 u f) = (term3526 _90724 A _37168 u f).
Proof. exact (eq_refl (term3535 _90724 A _37168 u f)). Qed.
Lemma lem3523228 {_90724 A : Type'} (x : type788 _90724 A) (f : A -> _90724) : (x f) = (x f).
Proof. exact (eq_refl (x f)). Qed.
Lemma lem3523229 {_90724 A : Type'} (_37168 : type852 _90724 A) (u : A -> Prop) (x : type788 _90724 A) (f : A -> _90724) : (term3543 _90724 A _37168 u x f) = (term3544 _90724 A _37168 u x f).
Proof. exact (MK_COMB (@lem3523227 _90724 A _37168 u f) (@lem3523228 _90724 A x f)). Qed.
Lemma lem3523230 {_90724 A : Type'} (_37168 : type852 _90724 A) (u : A -> Prop) (x : type788 _90724 A) (f : A -> _90724) : (term3544 _90724 A _37168 u x f) = (term3545 _90724 A _37168 u x f).
Proof. exact (eq_refl (term3544 _90724 A _37168 u x f)). Qed.
Lemma lem3523231 {_90724 A : Type'} (_37168 : type852 _90724 A) (u : A -> Prop) (x : type788 _90724 A) (f : A -> _90724) : (term3543 _90724 A _37168 u x f) = (term3545 _90724 A _37168 u x f).
Proof. exact (TRANS (@lem3523229 _90724 A _37168 u x f) (@lem3523230 _90724 A _37168 u x f)). Qed.
Lemma lem3523232 {_90724 A : Type'} (_37168 : type852 _90724 A) (u : A -> Prop) (x : type788 _90724 A) : (term3546 _90724 A _37168 u x) = (term3547 _90724 A _37168 u x).
Proof. exact (fun_ext (fun f : A -> _90724 => @lem3523231 _90724 A _37168 u x f)). Qed.
Lemma lem3523233 {_90724 A : Type'} : (@all (A -> _90724)) = (@all (A -> _90724)).
Proof. exact (eq_refl (@all (A -> _90724))). Qed.
Lemma lem3523234 {_90724 A : Type'} (_37168 : type852 _90724 A) (u : A -> Prop) (x : type788 _90724 A) : (term3548 _90724 A _37168 u x) = (term3549 _90724 A _37168 u x).
Proof. exact (MK_COMB (@lem3523233 _90724 A) (@lem3523232 _90724 A _37168 u x)). Qed.
Lemma lem3523235 {_90724 A : Type'} (_37168 : type852 _90724 A) (u : A -> Prop) : (term3550 _90724 A _37168 u) = (term3551 _90724 A _37168 u).
Proof. exact (fun_ext (fun x : type788 _90724 A => @lem3523234 _90724 A _37168 u x)). Qed.
Lemma lem3523236 {_90724 A : Type'} : (@ex ((A -> _90724) -> (A -> Prop) -> A -> A)) = (@ex ((A -> _90724) -> (A -> Prop) -> A -> A)).
Proof. exact (eq_refl (@ex ((A -> _90724) -> (A -> Prop) -> A -> A))). Qed.
Lemma lem3523237 {_90724 A : Type'} (_37168 : type852 _90724 A) (u : A -> Prop) : (term3533 _90724 A _37168 u) = (term3552 _90724 A _37168 u).
Proof. exact (MK_COMB (@lem3523236 _90724 A) (@lem3523235 _90724 A _37168 u)). Qed.
Lemma lem3523238 {_90724 A : Type'} (_37168 : type852 _90724 A) (u : A -> Prop) : ((term3532 _90724 A _37168 u) = (term3533 _90724 A _37168 u)) = ((term3529 _90724 A _37168 u) = (term3552 _90724 A _37168 u)).
Proof. exact (MK_COMB (@lem3523226 _90724 A _37168 u) (@lem3523237 _90724 A _37168 u)). Qed.
Lemma lem3523239 {_90724 A : Type'} (_37168 : type852 _90724 A) (u : A -> Prop) : (term3529 _90724 A _37168 u) = (term3552 _90724 A _37168 u).
Proof. exact (EQ_MP (@lem3523238 _90724 A _37168 u) (@lem3523213 _90724 A _37168 u)). Qed.
Lemma lem3523240 {_90724 A : Type'} (_37168 : type852 _90724 A) (u : A -> Prop) : (term3442 _90724 A _37168 u) = (term3552 _90724 A _37168 u).
Proof. exact (TRANS (@lem3523209 _90724 A _37168 u) (@lem3523239 _90724 A _37168 u)). Qed.
Lemma lem3523241 {_90724 A : Type'} (_37168 : type852 _90724 A) : (term3449 _90724 A _37168) = (term3553 _90724 A _37168).
Proof. exact (fun_ext (fun u : A -> Prop => @lem3523240 _90724 A _37168 u)). Qed.
Lemma lem3523242 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem3523243 {_90724 A : Type'} (_37168 : type852 _90724 A) : (term3464 _90724 A _37168) = (term3554 _90724 A _37168).
Proof. exact (MK_COMB (@lem3523242 A) (@lem3523241 _90724 A _37168)). Qed.
Lemma lem3523245 {A B : Type'} (P : type1413 A B) : (term453 A B P) = (term454 A B P).
Proof. exact (EQ_MP (@lem18899 A B P) (@lem18898 A B P)). Qed.
Lemma lem3523246 {_90724 A : Type'} (P : type827 _90724 A) : (term3555 _90724 A P) = (term3556 _90724 A P).
Proof. exact (@lem3523245 (A -> Prop) (type788 _90724 A) P). Qed.
Lemma lem3523247 {_90724 A : Type'} (_37168 : type852 _90724 A) : (term3557 _90724 A _37168) = (term3558 _90724 A _37168).
Proof. exact (@lem3523246 _90724 A (term3559 _90724 A _37168)). Qed.
Lemma lem3523248 {_90724 A : Type'} (_37168 : type852 _90724 A) (u : A -> Prop) : (term3560 _90724 A _37168 u) = (term3551 _90724 A _37168 u).
Proof. exact (eq_refl (term3560 _90724 A _37168 u)). Qed.
Lemma lem3523249 {_90724 A : Type'} (x : type788 _90724 A) : x = x.
Proof. exact (eq_refl x). Qed.
Lemma lem3523250 {_90724 A : Type'} (_37168 : type852 _90724 A) (u : A -> Prop) (x : type788 _90724 A) : (term3561 _90724 A _37168 u x) = (term3562 _90724 A _37168 u x).
Proof. exact (MK_COMB (@lem3523248 _90724 A _37168 u) (@lem3523249 _90724 A x)). Qed.
Lemma lem3523251 {_90724 A : Type'} (_37168 : type852 _90724 A) (u : A -> Prop) (x : type788 _90724 A) : (term3562 _90724 A _37168 u x) = (term3549 _90724 A _37168 u x).
Proof. exact (eq_refl (term3562 _90724 A _37168 u x)). Qed.
Lemma lem3523252 {_90724 A : Type'} (_37168 : type852 _90724 A) (u : A -> Prop) (x : type788 _90724 A) : (term3561 _90724 A _37168 u x) = (term3549 _90724 A _37168 u x).
Proof. exact (TRANS (@lem3523250 _90724 A _37168 u x) (@lem3523251 _90724 A _37168 u x)). Qed.
Lemma lem3523253 {_90724 A : Type'} (_37168 : type852 _90724 A) (u : A -> Prop) : (term3563 _90724 A _37168 u) = (term3551 _90724 A _37168 u).
Proof. exact (fun_ext (fun x : type788 _90724 A => @lem3523252 _90724 A _37168 u x)). Qed.
Lemma lem3523254 {_90724 A : Type'} : (@ex ((A -> _90724) -> (A -> Prop) -> A -> A)) = (@ex ((A -> _90724) -> (A -> Prop) -> A -> A)).
Proof. exact (eq_refl (@ex ((A -> _90724) -> (A -> Prop) -> A -> A))). Qed.
Lemma lem3523255 {_90724 A : Type'} (_37168 : type852 _90724 A) (u : A -> Prop) : (term3564 _90724 A _37168 u) = (term3552 _90724 A _37168 u).
Proof. exact (MK_COMB (@lem3523254 _90724 A) (@lem3523253 _90724 A _37168 u)). Qed.
Lemma lem3523256 {_90724 A : Type'} (_37168 : type852 _90724 A) : (term3565 _90724 A _37168) = (term3553 _90724 A _37168).
Proof. exact (fun_ext (fun u : A -> Prop => @lem3523255 _90724 A _37168 u)). Qed.
Lemma lem3523257 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem3523258 {_90724 A : Type'} (_37168 : type852 _90724 A) : (term3557 _90724 A _37168) = (term3554 _90724 A _37168).
Proof. exact (MK_COMB (@lem3523257 A) (@lem3523256 _90724 A _37168)). Qed.
Lemma lem3523259 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem3523260 {_90724 A : Type'} (_37168 : type852 _90724 A) : (term3566 _90724 A _37168) = (term3567 _90724 A _37168).
Proof. exact (MK_COMB (@lem3523259) (@lem3523258 _90724 A _37168)). Qed.
Lemma lem3523261 {_90724 A : Type'} (_37168 : type852 _90724 A) (u : A -> Prop) : (term3560 _90724 A _37168 u) = (term3551 _90724 A _37168 u).
Proof. exact (eq_refl (term3560 _90724 A _37168 u)). Qed.
Lemma lem3523262 {_90724 A : Type'} (x : type851 _90724 A) (u : A -> Prop) : (x u) = (x u).
Proof. exact (eq_refl (x u)). Qed.
Lemma lem3523263 {_90724 A : Type'} (_37168 : type852 _90724 A) (x : type851 _90724 A) (u : A -> Prop) : (term3568 _90724 A _37168 x u) = (term3569 _90724 A _37168 x u).
Proof. exact (MK_COMB (@lem3523261 _90724 A _37168 u) (@lem3523262 _90724 A x u)). Qed.
Lemma lem3523264 {_90724 A : Type'} (_37168 : type852 _90724 A) (x : type851 _90724 A) (u : A -> Prop) : (term3569 _90724 A _37168 x u) = (term3570 _90724 A _37168 x u).
Proof. exact (eq_refl (term3569 _90724 A _37168 x u)). Qed.
Lemma lem3523265 {_90724 A : Type'} (_37168 : type852 _90724 A) (x : type851 _90724 A) (u : A -> Prop) : (term3568 _90724 A _37168 x u) = (term3570 _90724 A _37168 x u).
Proof. exact (TRANS (@lem3523263 _90724 A _37168 x u) (@lem3523264 _90724 A _37168 x u)). Qed.
Lemma lem3523266 {_90724 A : Type'} (_37168 : type852 _90724 A) (x : type851 _90724 A) : (term3571 _90724 A _37168 x) = (term3572 _90724 A _37168 x).
Proof. exact (fun_ext (fun u : A -> Prop => @lem3523265 _90724 A _37168 x u)). Qed.
Lemma lem3523267 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem3523268 {_90724 A : Type'} (_37168 : type852 _90724 A) (x : type851 _90724 A) : (term3573 _90724 A _37168 x) = (term3574 _90724 A _37168 x).
Proof. exact (MK_COMB (@lem3523267 A) (@lem3523266 _90724 A _37168 x)). Qed.
Lemma lem3523269 {_90724 A : Type'} (_37168 : type852 _90724 A) : (term3575 _90724 A _37168) = (term3576 _90724 A _37168).
Proof. exact (fun_ext (fun x : type851 _90724 A => @lem3523268 _90724 A _37168 x)). Qed.
Lemma lem3523270 {_90724 A : Type'} : (@ex ((A -> Prop) -> (A -> _90724) -> (A -> Prop) -> A -> A)) = (@ex ((A -> Prop) -> (A -> _90724) -> (A -> Prop) -> A -> A)).
Proof. exact (eq_refl (@ex ((A -> Prop) -> (A -> _90724) -> (A -> Prop) -> A -> A))). Qed.
Lemma lem3523271 {_90724 A : Type'} (_37168 : type852 _90724 A) : (term3558 _90724 A _37168) = (term3577 _90724 A _37168).
Proof. exact (MK_COMB (@lem3523270 _90724 A) (@lem3523269 _90724 A _37168)). Qed.
Lemma lem3523272 {_90724 A : Type'} (_37168 : type852 _90724 A) : ((term3557 _90724 A _37168) = (term3558 _90724 A _37168)) = ((term3554 _90724 A _37168) = (term3577 _90724 A _37168)).
Proof. exact (MK_COMB (@lem3523260 _90724 A _37168) (@lem3523271 _90724 A _37168)). Qed.
Lemma lem3523273 {_90724 A : Type'} (_37168 : type852 _90724 A) : (term3554 _90724 A _37168) = (term3577 _90724 A _37168).
Proof. exact (EQ_MP (@lem3523272 _90724 A _37168) (@lem3523247 _90724 A _37168)). Qed.
Lemma lem3523274 {_90724 A : Type'} (_37168 : type852 _90724 A) : (term3464 _90724 A _37168) = (term3577 _90724 A _37168).
Proof. exact (TRANS (@lem3523243 _90724 A _37168) (@lem3523273 _90724 A _37168)). Qed.
Lemma lem3523275 {_90724 A : Type'} (_37168 : type852 _90724 A) : (term3461 _90724 A _37168) = (term3461 _90724 A _37168).
Proof. exact (eq_refl (term3461 _90724 A _37168)). Qed.
Lemma lem3523276 {_90724 A : Type'} (_37168 : type852 _90724 A) : (term3465 _90724 A _37168) = (term3578 _90724 A _37168).
Proof. exact (MK_COMB (@lem3523275 _90724 A _37168) (@lem3523274 _90724 A _37168)). Qed.
Lemma lem3523278 {A : Type'} (P : Prop) (Q : A -> Prop) : (term415 A P Q) = (term416 A P Q).
Proof. exact (EQ_MP (@lem18929 A P Q) (@lem18928 A P Q)). Qed.
Lemma lem3523279 {_90724 A : Type'} (P : Prop) (Q : type221 _90724 A) : (term3579 _90724 A P Q) = (term3580 _90724 A P Q).
Proof. exact (@lem3523278 (type851 _90724 A) P Q). Qed.
Lemma lem3523280 {_90724 A : Type'} (_37168 : type852 _90724 A) : (term3581 _90724 A _37168) = (term3582 _90724 A _37168).
Proof. exact (@lem3523279 _90724 A (term3459 _90724 A _37168) (term3576 _90724 A _37168)). Qed.
Lemma lem3523281 {_90724 A : Type'} (_37168 : type852 _90724 A) (x : type851 _90724 A) : (term3583 _90724 A _37168 x) = (term3574 _90724 A _37168 x).
Proof. exact (eq_refl (term3583 _90724 A _37168 x)). Qed.
Lemma lem3523282 {_90724 A : Type'} (_37168 : type852 _90724 A) : (term3584 _90724 A _37168) = (term3576 _90724 A _37168).
Proof. exact (fun_ext (fun x : type851 _90724 A => @lem3523281 _90724 A _37168 x)). Qed.
Lemma lem3523283 {_90724 A : Type'} : (@ex ((A -> Prop) -> (A -> _90724) -> (A -> Prop) -> A -> A)) = (@ex ((A -> Prop) -> (A -> _90724) -> (A -> Prop) -> A -> A)).
Proof. exact (eq_refl (@ex ((A -> Prop) -> (A -> _90724) -> (A -> Prop) -> A -> A))). Qed.
Lemma lem3523284 {_90724 A : Type'} (_37168 : type852 _90724 A) : (term3585 _90724 A _37168) = (term3577 _90724 A _37168).
Proof. exact (MK_COMB (@lem3523283 _90724 A) (@lem3523282 _90724 A _37168)). Qed.
Lemma lem3523285 {_90724 A : Type'} (_37168 : type852 _90724 A) : (term3461 _90724 A _37168) = (term3461 _90724 A _37168).
Proof. exact (eq_refl (term3461 _90724 A _37168)). Qed.
Lemma lem3523286 {_90724 A : Type'} (_37168 : type852 _90724 A) : (term3581 _90724 A _37168) = (term3578 _90724 A _37168).
Proof. exact (MK_COMB (@lem3523285 _90724 A _37168) (@lem3523284 _90724 A _37168)). Qed.
Lemma lem3523287 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem3523288 {_90724 A : Type'} (_37168 : type852 _90724 A) : (term3586 _90724 A _37168) = (term3587 _90724 A _37168).
Proof. exact (MK_COMB (@lem3523287) (@lem3523286 _90724 A _37168)). Qed.
Lemma lem3523289 {_90724 A : Type'} (_37168 : type852 _90724 A) (x : type851 _90724 A) : (term3583 _90724 A _37168 x) = (term3574 _90724 A _37168 x).
Proof. exact (eq_refl (term3583 _90724 A _37168 x)). Qed.
Lemma lem3523290 {_90724 A : Type'} (_37168 : type852 _90724 A) : (term3461 _90724 A _37168) = (term3461 _90724 A _37168).
Proof. exact (eq_refl (term3461 _90724 A _37168)). Qed.
Lemma lem3523291 {_90724 A : Type'} (_37168 : type852 _90724 A) (x : type851 _90724 A) : (term3588 _90724 A _37168 x) = (term3589 _90724 A _37168 x).
Proof. exact (MK_COMB (@lem3523290 _90724 A _37168) (@lem3523289 _90724 A _37168 x)). Qed.
Lemma lem3523292 {_90724 A : Type'} (_37168 : type852 _90724 A) : (term3590 _90724 A _37168) = (term3591 _90724 A _37168).
Proof. exact (fun_ext (fun x : type851 _90724 A => @lem3523291 _90724 A _37168 x)). Qed.
Lemma lem3523293 {_90724 A : Type'} : (@ex ((A -> Prop) -> (A -> _90724) -> (A -> Prop) -> A -> A)) = (@ex ((A -> Prop) -> (A -> _90724) -> (A -> Prop) -> A -> A)).
Proof. exact (eq_refl (@ex ((A -> Prop) -> (A -> _90724) -> (A -> Prop) -> A -> A))). Qed.
Lemma lem3523294 {_90724 A : Type'} (_37168 : type852 _90724 A) : (term3582 _90724 A _37168) = (term3592 _90724 A _37168).
Proof. exact (MK_COMB (@lem3523293 _90724 A) (@lem3523292 _90724 A _37168)). Qed.
Lemma lem3523295 {_90724 A : Type'} (_37168 : type852 _90724 A) : ((term3581 _90724 A _37168) = (term3582 _90724 A _37168)) = ((term3578 _90724 A _37168) = (term3592 _90724 A _37168)).
Proof. exact (MK_COMB (@lem3523288 _90724 A _37168) (@lem3523294 _90724 A _37168)). Qed.
Lemma lem3523296 {_90724 A : Type'} (_37168 : type852 _90724 A) : (term3578 _90724 A _37168) = (term3592 _90724 A _37168).
Proof. exact (EQ_MP (@lem3523295 _90724 A _37168) (@lem3523280 _90724 A _37168)). Qed.
Lemma lem3523297 {_90724 A : Type'} (_37168 : type852 _90724 A) : (term3465 _90724 A _37168) = (term3592 _90724 A _37168).
Proof. exact (TRANS (@lem3523276 _90724 A _37168) (@lem3523296 _90724 A _37168)). Qed.
Lemma lem3523298 {_90724 A : Type'} (_37168 : type852 _90724 A) : (term3377 _90724 A _37168) = (term3592 _90724 A _37168).
Proof. exact (TRANS (@lem3523118 _90724 A _37168) (@lem3523297 _90724 A _37168)). Qed.
Lemma lem3523299 {_90724 A : Type'} (_37168 : type852 _90724 A) : (term2553 _90724 A _37168) = (term3592 _90724 A _37168).
Proof. exact (TRANS (@lem3522522 _90724 A _37168) (@lem3523298 _90724 A _37168)). Qed.
Lemma lem3523300 {_90724 A : Type'} (_37168 : type852 _90724 A) (h1 : term2553 _90724 A _37168) : term3592 _90724 A _37168.
Proof. exact (EQ_MP (@lem3523299 _90724 A _37168) (@lem3520013 _90724 A _37168 h1)). Qed.
Lemma lem3523304 {_90715 A : Type'} (GEN_PVAR_84 : _90715) (u : _90715 -> Prop) (f : type1413 _90715 A) (t : _90715 -> Prop) (x : _90715) : (term2101 _90715 A GEN_PVAR_84 u f t x) = (term2101 _90715 A GEN_PVAR_84 u f t x).
Proof. exact (eq_refl (term2101 _90715 A GEN_PVAR_84 u f t x)). Qed.
Lemma lem3523305 {_90715 : Type'} (P : _90715 -> Prop) : (term311 _90715 P) = (term312 _90715 P).
Proof. exact (@lem18394 _90715 P). Qed.
Lemma lem3523306 {_90715 A : Type'} (GEN_PVAR_84 : _90715) (u : _90715 -> Prop) (f : type1413 _90715 A) (t : _90715 -> Prop) : (term3593 _90715 A GEN_PVAR_84 u f t) = (term3594 _90715 A GEN_PVAR_84 u f t).
Proof. exact (@lem3523305 _90715 (term2102 _90715 A GEN_PVAR_84 u f t)). Qed.
Lemma lem3523307 {_90715 A : Type'} (GEN_PVAR_84 : _90715) (u : _90715 -> Prop) (f : type1413 _90715 A) (t : _90715 -> Prop) (x : _90715) : (term3595 _90715 A GEN_PVAR_84 u f t x) = (term2101 _90715 A GEN_PVAR_84 u f t x).
Proof. exact (eq_refl (term3595 _90715 A GEN_PVAR_84 u f t x)). Qed.
Lemma lem3523308 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem3523310 {_90715 A : Type'} (GEN_PVAR_84 : _90715) (u : _90715 -> Prop) (f : type1413 _90715 A) (t : _90715 -> Prop) (x : _90715) : (term3596 _90715 A GEN_PVAR_84 u f t x) = (term3597 _90715 A GEN_PVAR_84 u f t x).
Proof. exact (MK_COMB (@lem3523308) (@lem3523307 _90715 A GEN_PVAR_84 u f t x)). Qed.
Lemma lem3523311 {_90715 A : Type'} (GEN_PVAR_84 : _90715) (u : _90715 -> Prop) (f : type1413 _90715 A) (t : _90715 -> Prop) : (term3598 _90715 A GEN_PVAR_84 u f t) = (term3599 _90715 A GEN_PVAR_84 u f t).
Proof. exact (fun_ext (fun x : _90715 => @lem3523310 _90715 A GEN_PVAR_84 u f t x)). Qed.
Lemma lem3523312 {_90715 : Type'} : (@all _90715) = (@all _90715).
Proof. exact (eq_refl (@all _90715)). Qed.
Lemma lem3523313 {_90715 A : Type'} (GEN_PVAR_84 : _90715) (u : _90715 -> Prop) (f : type1413 _90715 A) (t : _90715 -> Prop) : (term3594 _90715 A GEN_PVAR_84 u f t) = (term3600 _90715 A GEN_PVAR_84 u f t).
Proof. exact (MK_COMB (@lem3523312 _90715) (@lem3523311 _90715 A GEN_PVAR_84 u f t)). Qed.
Lemma lem3523314 {_90715 A : Type'} (GEN_PVAR_84 : _90715) (u : _90715 -> Prop) (f : type1413 _90715 A) (t : _90715 -> Prop) : (term3593 _90715 A GEN_PVAR_84 u f t) = (term3600 _90715 A GEN_PVAR_84 u f t).
Proof. exact (TRANS (@lem3523306 _90715 A GEN_PVAR_84 u f t) (@lem3523313 _90715 A GEN_PVAR_84 u f t)). Qed.
Lemma lem3523315 {_90715 A : Type'} (GEN_PVAR_84 : _90715) (u : _90715 -> Prop) (f : type1413 _90715 A) (t : _90715 -> Prop) : (term2102 _90715 A GEN_PVAR_84 u f t) = (term2102 _90715 A GEN_PVAR_84 u f t).
Proof. exact (fun_ext (fun x : _90715 => @lem3523304 _90715 A GEN_PVAR_84 u f t x)). Qed.
Lemma lem3523316 {_90715 : Type'} : (@ex _90715) = (@ex _90715).
Proof. exact (eq_refl (@ex _90715)). Qed.
Lemma lem3523317 {_90715 A : Type'} (GEN_PVAR_84 : _90715) (u : _90715 -> Prop) (f : type1413 _90715 A) (t : _90715 -> Prop) : (term2103 _90715 A GEN_PVAR_84 u f t) = (term2103 _90715 A GEN_PVAR_84 u f t).
Proof. exact (MK_COMB (@lem3523316 _90715) (@lem3523315 _90715 A GEN_PVAR_84 u f t)). Qed.
Lemma lem3523319 {_90715 A : Type'} (_37167 : type616 _90715 A) (u : _90715 -> Prop) (f : type1413 _90715 A) (t : _90715 -> Prop) (GEN_PVAR_84 : _90715) : (term3601 _90715 A _37167 u f t GEN_PVAR_84) = (term3601 _90715 A _37167 u f t GEN_PVAR_84).
Proof. exact (eq_refl (term3601 _90715 A _37167 u f t GEN_PVAR_84)). Qed.
Lemma lem3523320 {_90715 A : Type'} (_37167 : type616 _90715 A) (GEN_PVAR_84 : _90715) (u : _90715 -> Prop) (f : type1413 _90715 A) (t : _90715 -> Prop) : (term3602 _90715 A _37167 GEN_PVAR_84 u f t) = (term3602 _90715 A _37167 GEN_PVAR_84 u f t).
Proof. exact (MK_COMB (@lem3523319 _90715 A _37167 u f t GEN_PVAR_84) (@lem3523317 _90715 A GEN_PVAR_84 u f t)). Qed.
Lemma lem3523322 {_90715 A : Type'} (_37167 : type616 _90715 A) (u : _90715 -> Prop) (f : type1413 _90715 A) (t : _90715 -> Prop) (GEN_PVAR_84 : _90715) : (term3603 _90715 A _37167 u f t GEN_PVAR_84) = (term3603 _90715 A _37167 u f t GEN_PVAR_84).
Proof. exact (eq_refl (term3603 _90715 A _37167 u f t GEN_PVAR_84)). Qed.
Lemma lem3523323 {_90715 A : Type'} (_37167 : type616 _90715 A) (GEN_PVAR_84 : _90715) (u : _90715 -> Prop) (f : type1413 _90715 A) (t : _90715 -> Prop) : (term3604 _90715 A _37167 GEN_PVAR_84 u f t) = (term3605 _90715 A _37167 GEN_PVAR_84 u f t).
Proof. exact (MK_COMB (@lem3523322 _90715 A _37167 u f t GEN_PVAR_84) (@lem3523314 _90715 A GEN_PVAR_84 u f t)). Qed.
Lemma lem3523324 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem3523325 {_90715 A : Type'} (_37167 : type616 _90715 A) (GEN_PVAR_84 : _90715) (u : _90715 -> Prop) (f : type1413 _90715 A) (t : _90715 -> Prop) : (term3606 _90715 A _37167 GEN_PVAR_84 u f t) = (term3607 _90715 A _37167 GEN_PVAR_84 u f t).
Proof. exact (MK_COMB (@lem3523324) (@lem3523323 _90715 A _37167 GEN_PVAR_84 u f t)). Qed.
Lemma lem3523326 {_90715 A : Type'} (_37167 : type616 _90715 A) (GEN_PVAR_84 : _90715) (u : _90715 -> Prop) (f : type1413 _90715 A) (t : _90715 -> Prop) : (term3608 _90715 A _37167 GEN_PVAR_84 u f t) = (term3609 _90715 A _37167 GEN_PVAR_84 u f t).
Proof. exact (MK_COMB (@lem3523325 _90715 A _37167 GEN_PVAR_84 u f t) (@lem3523320 _90715 A _37167 GEN_PVAR_84 u f t)). Qed.
Lemma lem3523327 {_90715 A : Type'} (_37167 : type616 _90715 A) (GEN_PVAR_84 : _90715) (u : _90715 -> Prop) (f : type1413 _90715 A) (t : _90715 -> Prop) : ((_37167 u f t GEN_PVAR_84) = (term2103 _90715 A GEN_PVAR_84 u f t)) = (term3608 _90715 A _37167 GEN_PVAR_84 u f t).
Proof. exact (@lem17784 (_37167 u f t GEN_PVAR_84) (term2103 _90715 A GEN_PVAR_84 u f t)). Qed.
Lemma lem3523328 {_90715 A : Type'} (_37167 : type616 _90715 A) (GEN_PVAR_84 : _90715) (u : _90715 -> Prop) (f : type1413 _90715 A) (t : _90715 -> Prop) : ((_37167 u f t GEN_PVAR_84) = (term2103 _90715 A GEN_PVAR_84 u f t)) = (term3609 _90715 A _37167 GEN_PVAR_84 u f t).
Proof. exact (TRANS (@lem3523327 _90715 A _37167 GEN_PVAR_84 u f t) (@lem3523326 _90715 A _37167 GEN_PVAR_84 u f t)). Qed.
Lemma lem3523329 {_90715 A : Type'} (_37167 : type616 _90715 A) (u : _90715 -> Prop) (f : type1413 _90715 A) (t : _90715 -> Prop) : (term2428 _90715 A _37167 u f t) = (term3610 _90715 A _37167 u f t).
Proof. exact (fun_ext (fun GEN_PVAR_84 : _90715 => @lem3523328 _90715 A _37167 GEN_PVAR_84 u f t)). Qed.
Lemma lem3523330 {_90715 : Type'} : (@all _90715) = (@all _90715).
Proof. exact (eq_refl (@all _90715)). Qed.
Lemma lem3523331 {_90715 A : Type'} (_37167 : type616 _90715 A) (u : _90715 -> Prop) (f : type1413 _90715 A) (t : _90715 -> Prop) : (term2429 _90715 A _37167 u f t) = (term3611 _90715 A _37167 u f t).
Proof. exact (MK_COMB (@lem3523330 _90715) (@lem3523329 _90715 A _37167 u f t)). Qed.
Lemma lem3523332 {_90715 A : Type'} (_37167 : type616 _90715 A) (u : _90715 -> Prop) (f : type1413 _90715 A) : (term2430 _90715 A _37167 u f) = (term3612 _90715 A _37167 u f).
Proof. exact (fun_ext (fun t : _90715 -> Prop => @lem3523331 _90715 A _37167 u f t)). Qed.
Lemma lem3523333 {_90715 : Type'} : (@all (_90715 -> Prop)) = (@all (_90715 -> Prop)).
Proof. exact (eq_refl (@all (_90715 -> Prop))). Qed.
Lemma lem3523334 {_90715 A : Type'} (_37167 : type616 _90715 A) (u : _90715 -> Prop) (f : type1413 _90715 A) : (term2431 _90715 A _37167 u f) = (term3613 _90715 A _37167 u f).
Proof. exact (MK_COMB (@lem3523333 _90715) (@lem3523332 _90715 A _37167 u f)). Qed.
Lemma lem3523335 {_90715 A : Type'} (_37167 : type616 _90715 A) (u : _90715 -> Prop) : (term2432 _90715 A _37167 u) = (term3614 _90715 A _37167 u).
Proof. exact (fun_ext (fun f : type1413 _90715 A => @lem3523334 _90715 A _37167 u f)). Qed.
Lemma lem3523336 {_90715 A : Type'} : (@all (_90715 -> A -> Prop)) = (@all (_90715 -> A -> Prop)).
Proof. exact (eq_refl (@all (_90715 -> A -> Prop))). Qed.
Lemma lem3523337 {_90715 A : Type'} (_37167 : type616 _90715 A) (u : _90715 -> Prop) : (term2433 _90715 A _37167 u) = (term3615 _90715 A _37167 u).
Proof. exact (MK_COMB (@lem3523336 _90715 A) (@lem3523335 _90715 A _37167 u)). Qed.
Lemma lem3523338 {_90715 A : Type'} (_37167 : type616 _90715 A) : (term2434 _90715 A _37167) = (term3616 _90715 A _37167).
Proof. exact (fun_ext (fun u : _90715 -> Prop => @lem3523337 _90715 A _37167 u)). Qed.
Lemma lem3523339 {_90715 : Type'} : (@all (_90715 -> Prop)) = (@all (_90715 -> Prop)).
Proof. exact (eq_refl (@all (_90715 -> Prop))). Qed.
Lemma lem3523340 {_90715 A : Type'} (_37167 : type616 _90715 A) : (term2435 _90715 A _37167) = (term3617 _90715 A _37167).
Proof. exact (MK_COMB (@lem3523339 _90715) (@lem3523338 _90715 A _37167)). Qed.
Lemma lem3523354 {A : Type'} (P : A -> Prop) (Q : A -> Prop) : (term726 A P Q) = (term725 A P Q).
Proof. exact (EQ_MP (@lem18953 A P Q) (@lem18952 A P Q)). Qed.
Lemma lem3523355 {_90715 : Type'} (P : _90715 -> Prop) (Q : _90715 -> Prop) : (term726 _90715 P Q) = (term725 _90715 P Q).
Proof. exact (@lem3523354 _90715 P Q). Qed.
Lemma lem3523356 {_90715 A : Type'} (_37167 : type616 _90715 A) (u : _90715 -> Prop) (f : type1413 _90715 A) (t : _90715 -> Prop) : (term3618 _90715 A _37167 u f t) = (term3619 _90715 A _37167 u f t).
Proof. exact (@lem3523355 _90715 (term3620 _90715 A _37167 u f t) (term3621 _90715 A _37167 u f t)). Qed.
Lemma lem3523357 {_90715 A : Type'} (_37167 : type616 _90715 A) (GEN_PVAR_84 : _90715) (u : _90715 -> Prop) (f : type1413 _90715 A) (t : _90715 -> Prop) : (term3622 _90715 A _37167 u f t GEN_PVAR_84) = (term3605 _90715 A _37167 GEN_PVAR_84 u f t).
Proof. exact (eq_refl (term3622 _90715 A _37167 u f t GEN_PVAR_84)). Qed.
Lemma lem3523358 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem3523359 {_90715 A : Type'} (_37167 : type616 _90715 A) (GEN_PVAR_84 : _90715) (u : _90715 -> Prop) (f : type1413 _90715 A) (t : _90715 -> Prop) : (term3623 _90715 A _37167 u f t GEN_PVAR_84) = (term3607 _90715 A _37167 GEN_PVAR_84 u f t).
Proof. exact (MK_COMB (@lem3523358) (@lem3523357 _90715 A _37167 GEN_PVAR_84 u f t)). Qed.
Lemma lem3523360 {_90715 A : Type'} (_37167 : type616 _90715 A) (GEN_PVAR_84 : _90715) (u : _90715 -> Prop) (f : type1413 _90715 A) (t : _90715 -> Prop) : (term3624 _90715 A _37167 u f t GEN_PVAR_84) = (term3602 _90715 A _37167 GEN_PVAR_84 u f t).
Proof. exact (eq_refl (term3624 _90715 A _37167 u f t GEN_PVAR_84)). Qed.
Lemma lem3523361 {_90715 A : Type'} (_37167 : type616 _90715 A) (GEN_PVAR_84 : _90715) (u : _90715 -> Prop) (f : type1413 _90715 A) (t : _90715 -> Prop) : (term3625 _90715 A _37167 u f t GEN_PVAR_84) = (term3609 _90715 A _37167 GEN_PVAR_84 u f t).
Proof. exact (MK_COMB (@lem3523359 _90715 A _37167 GEN_PVAR_84 u f t) (@lem3523360 _90715 A _37167 GEN_PVAR_84 u f t)). Qed.
Lemma lem3523362 {_90715 A : Type'} (_37167 : type616 _90715 A) (u : _90715 -> Prop) (f : type1413 _90715 A) (t : _90715 -> Prop) : (term3626 _90715 A _37167 u f t) = (term3610 _90715 A _37167 u f t).
Proof. exact (fun_ext (fun GEN_PVAR_84 : _90715 => @lem3523361 _90715 A _37167 GEN_PVAR_84 u f t)). Qed.
Lemma lem3523363 {_90715 : Type'} : (@all _90715) = (@all _90715).
Proof. exact (eq_refl (@all _90715)). Qed.
Lemma lem3523364 {_90715 A : Type'} (_37167 : type616 _90715 A) (u : _90715 -> Prop) (f : type1413 _90715 A) (t : _90715 -> Prop) : (term3618 _90715 A _37167 u f t) = (term3611 _90715 A _37167 u f t).
Proof. exact (MK_COMB (@lem3523363 _90715) (@lem3523362 _90715 A _37167 u f t)). Qed.
Lemma lem3523365 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem3523366 {_90715 A : Type'} (_37167 : type616 _90715 A) (u : _90715 -> Prop) (f : type1413 _90715 A) (t : _90715 -> Prop) : (term3627 _90715 A _37167 u f t) = (term3628 _90715 A _37167 u f t).
Proof. exact (MK_COMB (@lem3523365) (@lem3523364 _90715 A _37167 u f t)). Qed.
Lemma lem3523367 {_90715 A : Type'} (_37167 : type616 _90715 A) (GEN_PVAR_84 : _90715) (u : _90715 -> Prop) (f : type1413 _90715 A) (t : _90715 -> Prop) : (term3622 _90715 A _37167 u f t GEN_PVAR_84) = (term3605 _90715 A _37167 GEN_PVAR_84 u f t).
Proof. exact (eq_refl (term3622 _90715 A _37167 u f t GEN_PVAR_84)). Qed.
Lemma lem3523368 {_90715 A : Type'} (_37167 : type616 _90715 A) (u : _90715 -> Prop) (f : type1413 _90715 A) (t : _90715 -> Prop) : (term3629 _90715 A _37167 u f t) = (term3620 _90715 A _37167 u f t).
Proof. exact (fun_ext (fun GEN_PVAR_84 : _90715 => @lem3523367 _90715 A _37167 GEN_PVAR_84 u f t)). Qed.
Lemma lem3523369 {_90715 : Type'} : (@all _90715) = (@all _90715).
Proof. exact (eq_refl (@all _90715)). Qed.
Lemma lem3523370 {_90715 A : Type'} (_37167 : type616 _90715 A) (u : _90715 -> Prop) (f : type1413 _90715 A) (t : _90715 -> Prop) : (term3630 _90715 A _37167 u f t) = (term3631 _90715 A _37167 u f t).
Proof. exact (MK_COMB (@lem3523369 _90715) (@lem3523368 _90715 A _37167 u f t)). Qed.
Lemma lem3523371 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem3523372 {_90715 A : Type'} (_37167 : type616 _90715 A) (u : _90715 -> Prop) (f : type1413 _90715 A) (t : _90715 -> Prop) : (term3632 _90715 A _37167 u f t) = (term3633 _90715 A _37167 u f t).
Proof. exact (MK_COMB (@lem3523371) (@lem3523370 _90715 A _37167 u f t)). Qed.
Lemma lem3523373 {_90715 A : Type'} (_37167 : type616 _90715 A) (GEN_PVAR_84 : _90715) (u : _90715 -> Prop) (f : type1413 _90715 A) (t : _90715 -> Prop) : (term3624 _90715 A _37167 u f t GEN_PVAR_84) = (term3602 _90715 A _37167 GEN_PVAR_84 u f t).
Proof. exact (eq_refl (term3624 _90715 A _37167 u f t GEN_PVAR_84)). Qed.
Lemma lem3523374 {_90715 A : Type'} (_37167 : type616 _90715 A) (u : _90715 -> Prop) (f : type1413 _90715 A) (t : _90715 -> Prop) : (term3634 _90715 A _37167 u f t) = (term3621 _90715 A _37167 u f t).
Proof. exact (fun_ext (fun GEN_PVAR_84 : _90715 => @lem3523373 _90715 A _37167 GEN_PVAR_84 u f t)). Qed.
Lemma lem3523375 {_90715 : Type'} : (@all _90715) = (@all _90715).
Proof. exact (eq_refl (@all _90715)). Qed.
Lemma lem3523376 {_90715 A : Type'} (_37167 : type616 _90715 A) (u : _90715 -> Prop) (f : type1413 _90715 A) (t : _90715 -> Prop) : (term3635 _90715 A _37167 u f t) = (term3636 _90715 A _37167 u f t).
Proof. exact (MK_COMB (@lem3523375 _90715) (@lem3523374 _90715 A _37167 u f t)). Qed.
Lemma lem3523377 {_90715 A : Type'} (_37167 : type616 _90715 A) (u : _90715 -> Prop) (f : type1413 _90715 A) (t : _90715 -> Prop) : (term3619 _90715 A _37167 u f t) = (term3637 _90715 A _37167 u f t).
Proof. exact (MK_COMB (@lem3523372 _90715 A _37167 u f t) (@lem3523376 _90715 A _37167 u f t)). Qed.
Lemma lem3523378 {_90715 A : Type'} (_37167 : type616 _90715 A) (u : _90715 -> Prop) (f : type1413 _90715 A) (t : _90715 -> Prop) : ((term3618 _90715 A _37167 u f t) = (term3619 _90715 A _37167 u f t)) = ((term3611 _90715 A _37167 u f t) = (term3637 _90715 A _37167 u f t)).
Proof. exact (MK_COMB (@lem3523366 _90715 A _37167 u f t) (@lem3523377 _90715 A _37167 u f t)). Qed.
Lemma lem3523379 {_90715 A : Type'} (_37167 : type616 _90715 A) (u : _90715 -> Prop) (f : type1413 _90715 A) (t : _90715 -> Prop) : (term3611 _90715 A _37167 u f t) = (term3637 _90715 A _37167 u f t).
Proof. exact (EQ_MP (@lem3523378 _90715 A _37167 u f t) (@lem3523356 _90715 A _37167 u f t)). Qed.
Lemma lem3523484 {_90715 A : Type'} (_37167 : type616 _90715 A) (u : _90715 -> Prop) (f : type1413 _90715 A) : (term3612 _90715 A _37167 u f) = (term3638 _90715 A _37167 u f).
Proof. exact (fun_ext (fun t : _90715 -> Prop => @lem3523379 _90715 A _37167 u f t)). Qed.
Lemma lem3523485 {_90715 : Type'} : (@all (_90715 -> Prop)) = (@all (_90715 -> Prop)).
Proof. exact (eq_refl (@all (_90715 -> Prop))). Qed.
Lemma lem3523486 {_90715 A : Type'} (_37167 : type616 _90715 A) (u : _90715 -> Prop) (f : type1413 _90715 A) : (term3613 _90715 A _37167 u f) = (term3639 _90715 A _37167 u f).
Proof. exact (MK_COMB (@lem3523485 _90715) (@lem3523484 _90715 A _37167 u f)). Qed.
Lemma lem3523488 {A : Type'} (P : A -> Prop) (Q : A -> Prop) : (term726 A P Q) = (term725 A P Q).
Proof. exact (EQ_MP (@lem18953 A P Q) (@lem18952 A P Q)). Qed.
Lemma lem3523489 {_90715 : Type'} (P : type686 _90715) (Q : type686 _90715) : (term2898 _90715 P Q) = (term2899 _90715 P Q).
Proof. exact (@lem3523488 (_90715 -> Prop) P Q). Qed.
Lemma lem3523490 {_90715 A : Type'} (_37167 : type616 _90715 A) (u : _90715 -> Prop) (f : type1413 _90715 A) : (term3640 _90715 A _37167 u f) = (term3641 _90715 A _37167 u f).
Proof. exact (@lem3523489 _90715 (term3642 _90715 A _37167 u f) (term3643 _90715 A _37167 u f)). Qed.
Lemma lem3523491 {_90715 A : Type'} (_37167 : type616 _90715 A) (u : _90715 -> Prop) (f : type1413 _90715 A) (t : _90715 -> Prop) : (term3644 _90715 A _37167 u f t) = (term3631 _90715 A _37167 u f t).
Proof. exact (eq_refl (term3644 _90715 A _37167 u f t)). Qed.
Lemma lem3523492 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem3523493 {_90715 A : Type'} (_37167 : type616 _90715 A) (u : _90715 -> Prop) (f : type1413 _90715 A) (t : _90715 -> Prop) : (term3645 _90715 A _37167 u f t) = (term3633 _90715 A _37167 u f t).
Proof. exact (MK_COMB (@lem3523492) (@lem3523491 _90715 A _37167 u f t)). Qed.
Lemma lem3523494 {_90715 A : Type'} (_37167 : type616 _90715 A) (u : _90715 -> Prop) (f : type1413 _90715 A) (t : _90715 -> Prop) : (term3646 _90715 A _37167 u f t) = (term3636 _90715 A _37167 u f t).
Proof. exact (eq_refl (term3646 _90715 A _37167 u f t)). Qed.
Lemma lem3523495 {_90715 A : Type'} (_37167 : type616 _90715 A) (u : _90715 -> Prop) (f : type1413 _90715 A) (t : _90715 -> Prop) : (term3647 _90715 A _37167 u f t) = (term3637 _90715 A _37167 u f t).
Proof. exact (MK_COMB (@lem3523493 _90715 A _37167 u f t) (@lem3523494 _90715 A _37167 u f t)). Qed.
Lemma lem3523496 {_90715 A : Type'} (_37167 : type616 _90715 A) (u : _90715 -> Prop) (f : type1413 _90715 A) : (term3648 _90715 A _37167 u f) = (term3638 _90715 A _37167 u f).
Proof. exact (fun_ext (fun t : _90715 -> Prop => @lem3523495 _90715 A _37167 u f t)). Qed.
Lemma lem3523497 {_90715 : Type'} : (@all (_90715 -> Prop)) = (@all (_90715 -> Prop)).
Proof. exact (eq_refl (@all (_90715 -> Prop))). Qed.
Lemma lem3523498 {_90715 A : Type'} (_37167 : type616 _90715 A) (u : _90715 -> Prop) (f : type1413 _90715 A) : (term3640 _90715 A _37167 u f) = (term3639 _90715 A _37167 u f).
Proof. exact (MK_COMB (@lem3523497 _90715) (@lem3523496 _90715 A _37167 u f)). Qed.
Lemma lem3523499 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem3523500 {_90715 A : Type'} (_37167 : type616 _90715 A) (u : _90715 -> Prop) (f : type1413 _90715 A) : (term3649 _90715 A _37167 u f) = (term3650 _90715 A _37167 u f).
Proof. exact (MK_COMB (@lem3523499) (@lem3523498 _90715 A _37167 u f)). Qed.
Lemma lem3523501 {_90715 A : Type'} (_37167 : type616 _90715 A) (u : _90715 -> Prop) (f : type1413 _90715 A) (t : _90715 -> Prop) : (term3644 _90715 A _37167 u f t) = (term3631 _90715 A _37167 u f t).
Proof. exact (eq_refl (term3644 _90715 A _37167 u f t)). Qed.
Lemma lem3523502 {_90715 A : Type'} (_37167 : type616 _90715 A) (u : _90715 -> Prop) (f : type1413 _90715 A) : (term3651 _90715 A _37167 u f) = (term3642 _90715 A _37167 u f).
Proof. exact (fun_ext (fun t : _90715 -> Prop => @lem3523501 _90715 A _37167 u f t)). Qed.
Lemma lem3523503 {_90715 : Type'} : (@all (_90715 -> Prop)) = (@all (_90715 -> Prop)).
Proof. exact (eq_refl (@all (_90715 -> Prop))). Qed.
Lemma lem3523504 {_90715 A : Type'} (_37167 : type616 _90715 A) (u : _90715 -> Prop) (f : type1413 _90715 A) : (term3652 _90715 A _37167 u f) = (term3653 _90715 A _37167 u f).
Proof. exact (MK_COMB (@lem3523503 _90715) (@lem3523502 _90715 A _37167 u f)). Qed.
Lemma lem3523505 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem3523506 {_90715 A : Type'} (_37167 : type616 _90715 A) (u : _90715 -> Prop) (f : type1413 _90715 A) : (term3654 _90715 A _37167 u f) = (term3655 _90715 A _37167 u f).
Proof. exact (MK_COMB (@lem3523505) (@lem3523504 _90715 A _37167 u f)). Qed.
Lemma lem3523507 {_90715 A : Type'} (_37167 : type616 _90715 A) (u : _90715 -> Prop) (f : type1413 _90715 A) (t : _90715 -> Prop) : (term3646 _90715 A _37167 u f t) = (term3636 _90715 A _37167 u f t).
Proof. exact (eq_refl (term3646 _90715 A _37167 u f t)). Qed.
Lemma lem3523508 {_90715 A : Type'} (_37167 : type616 _90715 A) (u : _90715 -> Prop) (f : type1413 _90715 A) : (term3656 _90715 A _37167 u f) = (term3643 _90715 A _37167 u f).
Proof. exact (fun_ext (fun t : _90715 -> Prop => @lem3523507 _90715 A _37167 u f t)). Qed.
Lemma lem3523509 {_90715 : Type'} : (@all (_90715 -> Prop)) = (@all (_90715 -> Prop)).
Proof. exact (eq_refl (@all (_90715 -> Prop))). Qed.
Lemma lem3523510 {_90715 A : Type'} (_37167 : type616 _90715 A) (u : _90715 -> Prop) (f : type1413 _90715 A) : (term3657 _90715 A _37167 u f) = (term3658 _90715 A _37167 u f).
Proof. exact (MK_COMB (@lem3523509 _90715) (@lem3523508 _90715 A _37167 u f)). Qed.
Lemma lem3523511 {_90715 A : Type'} (_37167 : type616 _90715 A) (u : _90715 -> Prop) (f : type1413 _90715 A) : (term3641 _90715 A _37167 u f) = (term3659 _90715 A _37167 u f).
Proof. exact (MK_COMB (@lem3523506 _90715 A _37167 u f) (@lem3523510 _90715 A _37167 u f)). Qed.
Lemma lem3523512 {_90715 A : Type'} (_37167 : type616 _90715 A) (u : _90715 -> Prop) (f : type1413 _90715 A) : ((term3640 _90715 A _37167 u f) = (term3641 _90715 A _37167 u f)) = ((term3639 _90715 A _37167 u f) = (term3659 _90715 A _37167 u f)).
Proof. exact (MK_COMB (@lem3523500 _90715 A _37167 u f) (@lem3523511 _90715 A _37167 u f)). Qed.
Lemma lem3523513 {_90715 A : Type'} (_37167 : type616 _90715 A) (u : _90715 -> Prop) (f : type1413 _90715 A) : (term3639 _90715 A _37167 u f) = (term3659 _90715 A _37167 u f).
Proof. exact (EQ_MP (@lem3523512 _90715 A _37167 u f) (@lem3523490 _90715 A _37167 u f)). Qed.
Lemma lem3523626 {_90715 A : Type'} (_37167 : type616 _90715 A) (u : _90715 -> Prop) (f : type1413 _90715 A) : (term3613 _90715 A _37167 u f) = (term3659 _90715 A _37167 u f).
Proof. exact (TRANS (@lem3523486 _90715 A _37167 u f) (@lem3523513 _90715 A _37167 u f)). Qed.
Lemma lem3523627 {_90715 A : Type'} (_37167 : type616 _90715 A) (u : _90715 -> Prop) : (term3614 _90715 A _37167 u) = (term3660 _90715 A _37167 u).
Proof. exact (fun_ext (fun f : type1413 _90715 A => @lem3523626 _90715 A _37167 u f)). Qed.
Lemma lem3523628 {_90715 A : Type'} : (@all (_90715 -> A -> Prop)) = (@all (_90715 -> A -> Prop)).
Proof. exact (eq_refl (@all (_90715 -> A -> Prop))). Qed.
Lemma lem3523629 {_90715 A : Type'} (_37167 : type616 _90715 A) (u : _90715 -> Prop) : (term3615 _90715 A _37167 u) = (term3661 _90715 A _37167 u).
Proof. exact (MK_COMB (@lem3523628 _90715 A) (@lem3523627 _90715 A _37167 u)). Qed.
Lemma lem3523631 {A : Type'} (P : A -> Prop) (Q : A -> Prop) : (term726 A P Q) = (term725 A P Q).
Proof. exact (EQ_MP (@lem18953 A P Q) (@lem18952 A P Q)). Qed.
Lemma lem3523632 {_90715 A : Type'} (P : type475 _90715 A) (Q : type475 _90715 A) : (term3662 _90715 A P Q) = (term3663 _90715 A P Q).
Proof. exact (@lem3523631 (type1413 _90715 A) P Q). Qed.
Lemma lem3523633 {_90715 A : Type'} (_37167 : type616 _90715 A) (u : _90715 -> Prop) : (term3664 _90715 A _37167 u) = (term3665 _90715 A _37167 u).
Proof. exact (@lem3523632 _90715 A (term3666 _90715 A _37167 u) (term3667 _90715 A _37167 u)). Qed.
Lemma lem3523634 {_90715 A : Type'} (_37167 : type616 _90715 A) (u : _90715 -> Prop) (f : type1413 _90715 A) : (term3668 _90715 A _37167 u f) = (term3653 _90715 A _37167 u f).
Proof. exact (eq_refl (term3668 _90715 A _37167 u f)). Qed.
Lemma lem3523635 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem3523636 {_90715 A : Type'} (_37167 : type616 _90715 A) (u : _90715 -> Prop) (f : type1413 _90715 A) : (term3669 _90715 A _37167 u f) = (term3655 _90715 A _37167 u f).
Proof. exact (MK_COMB (@lem3523635) (@lem3523634 _90715 A _37167 u f)). Qed.
Lemma lem3523637 {_90715 A : Type'} (_37167 : type616 _90715 A) (u : _90715 -> Prop) (f : type1413 _90715 A) : (term3670 _90715 A _37167 u f) = (term3658 _90715 A _37167 u f).
Proof. exact (eq_refl (term3670 _90715 A _37167 u f)). Qed.
Lemma lem3523638 {_90715 A : Type'} (_37167 : type616 _90715 A) (u : _90715 -> Prop) (f : type1413 _90715 A) : (term3671 _90715 A _37167 u f) = (term3659 _90715 A _37167 u f).
Proof. exact (MK_COMB (@lem3523636 _90715 A _37167 u f) (@lem3523637 _90715 A _37167 u f)). Qed.
Lemma lem3523639 {_90715 A : Type'} (_37167 : type616 _90715 A) (u : _90715 -> Prop) : (term3672 _90715 A _37167 u) = (term3660 _90715 A _37167 u).
Proof. exact (fun_ext (fun f : type1413 _90715 A => @lem3523638 _90715 A _37167 u f)). Qed.
Lemma lem3523640 {_90715 A : Type'} : (@all (_90715 -> A -> Prop)) = (@all (_90715 -> A -> Prop)).
Proof. exact (eq_refl (@all (_90715 -> A -> Prop))). Qed.
Lemma lem3523641 {_90715 A : Type'} (_37167 : type616 _90715 A) (u : _90715 -> Prop) : (term3664 _90715 A _37167 u) = (term3661 _90715 A _37167 u).
Proof. exact (MK_COMB (@lem3523640 _90715 A) (@lem3523639 _90715 A _37167 u)). Qed.
Lemma lem3523642 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem3523643 {_90715 A : Type'} (_37167 : type616 _90715 A) (u : _90715 -> Prop) : (term3673 _90715 A _37167 u) = (term3674 _90715 A _37167 u).
Proof. exact (MK_COMB (@lem3523642) (@lem3523641 _90715 A _37167 u)). Qed.
Lemma lem3523644 {_90715 A : Type'} (_37167 : type616 _90715 A) (u : _90715 -> Prop) (f : type1413 _90715 A) : (term3668 _90715 A _37167 u f) = (term3653 _90715 A _37167 u f).
Proof. exact (eq_refl (term3668 _90715 A _37167 u f)). Qed.
Lemma lem3523645 {_90715 A : Type'} (_37167 : type616 _90715 A) (u : _90715 -> Prop) : (term3675 _90715 A _37167 u) = (term3666 _90715 A _37167 u).
Proof. exact (fun_ext (fun f : type1413 _90715 A => @lem3523644 _90715 A _37167 u f)). Qed.
Lemma lem3523646 {_90715 A : Type'} : (@all (_90715 -> A -> Prop)) = (@all (_90715 -> A -> Prop)).
Proof. exact (eq_refl (@all (_90715 -> A -> Prop))). Qed.
Lemma lem3523647 {_90715 A : Type'} (_37167 : type616 _90715 A) (u : _90715 -> Prop) : (term3676 _90715 A _37167 u) = (term3677 _90715 A _37167 u).
Proof. exact (MK_COMB (@lem3523646 _90715 A) (@lem3523645 _90715 A _37167 u)). Qed.
Lemma lem3523648 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem3523649 {_90715 A : Type'} (_37167 : type616 _90715 A) (u : _90715 -> Prop) : (term3678 _90715 A _37167 u) = (term3679 _90715 A _37167 u).
Proof. exact (MK_COMB (@lem3523648) (@lem3523647 _90715 A _37167 u)). Qed.
Lemma lem3523650 {_90715 A : Type'} (_37167 : type616 _90715 A) (u : _90715 -> Prop) (f : type1413 _90715 A) : (term3670 _90715 A _37167 u f) = (term3658 _90715 A _37167 u f).
Proof. exact (eq_refl (term3670 _90715 A _37167 u f)). Qed.
Lemma lem3523651 {_90715 A : Type'} (_37167 : type616 _90715 A) (u : _90715 -> Prop) : (term3680 _90715 A _37167 u) = (term3667 _90715 A _37167 u).
Proof. exact (fun_ext (fun f : type1413 _90715 A => @lem3523650 _90715 A _37167 u f)). Qed.
Lemma lem3523652 {_90715 A : Type'} : (@all (_90715 -> A -> Prop)) = (@all (_90715 -> A -> Prop)).
Proof. exact (eq_refl (@all (_90715 -> A -> Prop))). Qed.
Lemma lem3523653 {_90715 A : Type'} (_37167 : type616 _90715 A) (u : _90715 -> Prop) : (term3681 _90715 A _37167 u) = (term3682 _90715 A _37167 u).
Proof. exact (MK_COMB (@lem3523652 _90715 A) (@lem3523651 _90715 A _37167 u)). Qed.
Lemma lem3523654 {_90715 A : Type'} (_37167 : type616 _90715 A) (u : _90715 -> Prop) : (term3665 _90715 A _37167 u) = (term3683 _90715 A _37167 u).
Proof. exact (MK_COMB (@lem3523649 _90715 A _37167 u) (@lem3523653 _90715 A _37167 u)). Qed.
Lemma lem3523655 {_90715 A : Type'} (_37167 : type616 _90715 A) (u : _90715 -> Prop) : ((term3664 _90715 A _37167 u) = (term3665 _90715 A _37167 u)) = ((term3661 _90715 A _37167 u) = (term3683 _90715 A _37167 u)).
Proof. exact (MK_COMB (@lem3523643 _90715 A _37167 u) (@lem3523654 _90715 A _37167 u)). Qed.
Lemma lem3523656 {_90715 A : Type'} (_37167 : type616 _90715 A) (u : _90715 -> Prop) : (term3661 _90715 A _37167 u) = (term3683 _90715 A _37167 u).
Proof. exact (EQ_MP (@lem3523655 _90715 A _37167 u) (@lem3523633 _90715 A _37167 u)). Qed.
Lemma lem3523777 {_90715 A : Type'} (_37167 : type616 _90715 A) (u : _90715 -> Prop) : (term3615 _90715 A _37167 u) = (term3683 _90715 A _37167 u).
Proof. exact (TRANS (@lem3523629 _90715 A _37167 u) (@lem3523656 _90715 A _37167 u)). Qed.
Lemma lem3523778 {_90715 A : Type'} (_37167 : type616 _90715 A) : (term3616 _90715 A _37167) = (term3684 _90715 A _37167).
Proof. exact (fun_ext (fun u : _90715 -> Prop => @lem3523777 _90715 A _37167 u)). Qed.
Lemma lem3523779 {_90715 : Type'} : (@all (_90715 -> Prop)) = (@all (_90715 -> Prop)).
Proof. exact (eq_refl (@all (_90715 -> Prop))). Qed.
Lemma lem3523780 {_90715 A : Type'} (_37167 : type616 _90715 A) : (term3617 _90715 A _37167) = (term3685 _90715 A _37167).
Proof. exact (MK_COMB (@lem3523779 _90715) (@lem3523778 _90715 A _37167)). Qed.
Lemma lem3523782 {A : Type'} (P : A -> Prop) (Q : A -> Prop) : (term726 A P Q) = (term725 A P Q).
Proof. exact (EQ_MP (@lem18953 A P Q) (@lem18952 A P Q)). Qed.
Lemma lem3523783 {_90715 : Type'} (P : type686 _90715) (Q : type686 _90715) : (term2898 _90715 P Q) = (term2899 _90715 P Q).
Proof. exact (@lem3523782 (_90715 -> Prop) P Q). Qed.
Lemma lem3523784 {_90715 A : Type'} (_37167 : type616 _90715 A) : (term3686 _90715 A _37167) = (term3687 _90715 A _37167).
Proof. exact (@lem3523783 _90715 (term3688 _90715 A _37167) (term3689 _90715 A _37167)). Qed.
Lemma lem3523785 {_90715 A : Type'} (_37167 : type616 _90715 A) (u : _90715 -> Prop) : (term3690 _90715 A _37167 u) = (term3677 _90715 A _37167 u).
Proof. exact (eq_refl (term3690 _90715 A _37167 u)). Qed.
Lemma lem3523786 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem3523787 {_90715 A : Type'} (_37167 : type616 _90715 A) (u : _90715 -> Prop) : (term3691 _90715 A _37167 u) = (term3679 _90715 A _37167 u).
Proof. exact (MK_COMB (@lem3523786) (@lem3523785 _90715 A _37167 u)). Qed.
Lemma lem3523788 {_90715 A : Type'} (_37167 : type616 _90715 A) (u : _90715 -> Prop) : (term3692 _90715 A _37167 u) = (term3682 _90715 A _37167 u).
Proof. exact (eq_refl (term3692 _90715 A _37167 u)). Qed.
Lemma lem3523789 {_90715 A : Type'} (_37167 : type616 _90715 A) (u : _90715 -> Prop) : (term3693 _90715 A _37167 u) = (term3683 _90715 A _37167 u).
Proof. exact (MK_COMB (@lem3523787 _90715 A _37167 u) (@lem3523788 _90715 A _37167 u)). Qed.
Lemma lem3523790 {_90715 A : Type'} (_37167 : type616 _90715 A) : (term3694 _90715 A _37167) = (term3684 _90715 A _37167).
Proof. exact (fun_ext (fun u : _90715 -> Prop => @lem3523789 _90715 A _37167 u)). Qed.
Lemma lem3523791 {_90715 : Type'} : (@all (_90715 -> Prop)) = (@all (_90715 -> Prop)).
Proof. exact (eq_refl (@all (_90715 -> Prop))). Qed.
Lemma lem3523792 {_90715 A : Type'} (_37167 : type616 _90715 A) : (term3686 _90715 A _37167) = (term3685 _90715 A _37167).
Proof. exact (MK_COMB (@lem3523791 _90715) (@lem3523790 _90715 A _37167)). Qed.
Lemma lem3523793 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem3523794 {_90715 A : Type'} (_37167 : type616 _90715 A) : (term3695 _90715 A _37167) = (term3696 _90715 A _37167).
Proof. exact (MK_COMB (@lem3523793) (@lem3523792 _90715 A _37167)). Qed.
Lemma lem3523795 {_90715 A : Type'} (_37167 : type616 _90715 A) (u : _90715 -> Prop) : (term3690 _90715 A _37167 u) = (term3677 _90715 A _37167 u).
Proof. exact (eq_refl (term3690 _90715 A _37167 u)). Qed.
Lemma lem3523796 {_90715 A : Type'} (_37167 : type616 _90715 A) : (term3697 _90715 A _37167) = (term3688 _90715 A _37167).
Proof. exact (fun_ext (fun u : _90715 -> Prop => @lem3523795 _90715 A _37167 u)). Qed.
Lemma lem3523797 {_90715 : Type'} : (@all (_90715 -> Prop)) = (@all (_90715 -> Prop)).
Proof. exact (eq_refl (@all (_90715 -> Prop))). Qed.
Lemma lem3523798 {_90715 A : Type'} (_37167 : type616 _90715 A) : (term3698 _90715 A _37167) = (term3699 _90715 A _37167).
Proof. exact (MK_COMB (@lem3523797 _90715) (@lem3523796 _90715 A _37167)). Qed.
Lemma lem3523799 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem3523800 {_90715 A : Type'} (_37167 : type616 _90715 A) : (term3700 _90715 A _37167) = (term3701 _90715 A _37167).
Proof. exact (MK_COMB (@lem3523799) (@lem3523798 _90715 A _37167)). Qed.
Lemma lem3523801 {_90715 A : Type'} (_37167 : type616 _90715 A) (u : _90715 -> Prop) : (term3692 _90715 A _37167 u) = (term3682 _90715 A _37167 u).
Proof. exact (eq_refl (term3692 _90715 A _37167 u)). Qed.
Lemma lem3523802 {_90715 A : Type'} (_37167 : type616 _90715 A) : (term3702 _90715 A _37167) = (term3689 _90715 A _37167).
Proof. exact (fun_ext (fun u : _90715 -> Prop => @lem3523801 _90715 A _37167 u)). Qed.
Lemma lem3523803 {_90715 : Type'} : (@all (_90715 -> Prop)) = (@all (_90715 -> Prop)).
Proof. exact (eq_refl (@all (_90715 -> Prop))). Qed.
Lemma lem3523804 {_90715 A : Type'} (_37167 : type616 _90715 A) : (term3703 _90715 A _37167) = (term3704 _90715 A _37167).
Proof. exact (MK_COMB (@lem3523803 _90715) (@lem3523802 _90715 A _37167)). Qed.
Lemma lem3523805 {_90715 A : Type'} (_37167 : type616 _90715 A) : (term3687 _90715 A _37167) = (term3705 _90715 A _37167).
Proof. exact (MK_COMB (@lem3523800 _90715 A _37167) (@lem3523804 _90715 A _37167)). Qed.
Lemma lem3523806 {_90715 A : Type'} (_37167 : type616 _90715 A) : ((term3686 _90715 A _37167) = (term3687 _90715 A _37167)) = ((term3685 _90715 A _37167) = (term3705 _90715 A _37167)).
Proof. exact (MK_COMB (@lem3523794 _90715 A _37167) (@lem3523805 _90715 A _37167)). Qed.
Lemma lem3523807 {_90715 A : Type'} (_37167 : type616 _90715 A) : (term3685 _90715 A _37167) = (term3705 _90715 A _37167).
Proof. exact (EQ_MP (@lem3523806 _90715 A _37167) (@lem3523784 _90715 A _37167)). Qed.
Lemma lem3523936 {_90715 A : Type'} (_37167 : type616 _90715 A) : (term3617 _90715 A _37167) = (term3705 _90715 A _37167).
Proof. exact (TRANS (@lem3523780 _90715 A _37167) (@lem3523807 _90715 A _37167)). Qed.
Lemma lem3523938 {A : Type'} (P : Prop) (Q : A -> Prop) : (term434 A P Q) = (term435 A P Q).
Proof. exact (EQ_MP (@lem18911 A P Q) (@lem18910 A P Q)). Qed.
Lemma lem3523939 {_90715 : Type'} (P : Prop) (Q : _90715 -> Prop) : (term434 _90715 P Q) = (term435 _90715 P Q).
Proof. exact (@lem3523938 _90715 P Q). Qed.
Lemma lem3523940 {_90715 A : Type'} (_37167 : type616 _90715 A) (GEN_PVAR_84 : _90715) (u : _90715 -> Prop) (f : type1413 _90715 A) (t : _90715 -> Prop) : (term3706 _90715 A _37167 GEN_PVAR_84 u f t) = (term3707 _90715 A _37167 GEN_PVAR_84 u f t).
Proof. exact (@lem3523939 _90715 (term3708 _90715 A _37167 u f t GEN_PVAR_84) (term2102 _90715 A GEN_PVAR_84 u f t)). Qed.
Lemma lem3523941 {_90715 A : Type'} (GEN_PVAR_84 : _90715) (u : _90715 -> Prop) (f : type1413 _90715 A) (t : _90715 -> Prop) (x : _90715) : (term3595 _90715 A GEN_PVAR_84 u f t x) = (term2101 _90715 A GEN_PVAR_84 u f t x).
Proof. exact (eq_refl (term3595 _90715 A GEN_PVAR_84 u f t x)). Qed.
Lemma lem3523942 {_90715 A : Type'} (GEN_PVAR_84 : _90715) (u : _90715 -> Prop) (f : type1413 _90715 A) (t : _90715 -> Prop) : (term3709 _90715 A GEN_PVAR_84 u f t) = (term2102 _90715 A GEN_PVAR_84 u f t).
Proof. exact (fun_ext (fun x : _90715 => @lem3523941 _90715 A GEN_PVAR_84 u f t x)). Qed.
Lemma lem3523943 {_90715 : Type'} : (@ex _90715) = (@ex _90715).
Proof. exact (eq_refl (@ex _90715)). Qed.
Lemma lem3523944 {_90715 A : Type'} (GEN_PVAR_84 : _90715) (u : _90715 -> Prop) (f : type1413 _90715 A) (t : _90715 -> Prop) : (term3710 _90715 A GEN_PVAR_84 u f t) = (term2103 _90715 A GEN_PVAR_84 u f t).
Proof. exact (MK_COMB (@lem3523943 _90715) (@lem3523942 _90715 A GEN_PVAR_84 u f t)). Qed.
Lemma lem3523945 {_90715 A : Type'} (_37167 : type616 _90715 A) (u : _90715 -> Prop) (f : type1413 _90715 A) (t : _90715 -> Prop) (GEN_PVAR_84 : _90715) : (term3601 _90715 A _37167 u f t GEN_PVAR_84) = (term3601 _90715 A _37167 u f t GEN_PVAR_84).
Proof. exact (eq_refl (term3601 _90715 A _37167 u f t GEN_PVAR_84)). Qed.
Lemma lem3523946 {_90715 A : Type'} (_37167 : type616 _90715 A) (GEN_PVAR_84 : _90715) (u : _90715 -> Prop) (f : type1413 _90715 A) (t : _90715 -> Prop) : (term3706 _90715 A _37167 GEN_PVAR_84 u f t) = (term3602 _90715 A _37167 GEN_PVAR_84 u f t).
Proof. exact (MK_COMB (@lem3523945 _90715 A _37167 u f t GEN_PVAR_84) (@lem3523944 _90715 A GEN_PVAR_84 u f t)). Qed.
Lemma lem3523947 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem3523948 {_90715 A : Type'} (_37167 : type616 _90715 A) (GEN_PVAR_84 : _90715) (u : _90715 -> Prop) (f : type1413 _90715 A) (t : _90715 -> Prop) : (term3711 _90715 A _37167 GEN_PVAR_84 u f t) = (term3712 _90715 A _37167 GEN_PVAR_84 u f t).
Proof. exact (MK_COMB (@lem3523947) (@lem3523946 _90715 A _37167 GEN_PVAR_84 u f t)). Qed.
Lemma lem3523949 {_90715 A : Type'} (GEN_PVAR_84 : _90715) (u : _90715 -> Prop) (f : type1413 _90715 A) (t : _90715 -> Prop) (x : _90715) : (term3595 _90715 A GEN_PVAR_84 u f t x) = (term2101 _90715 A GEN_PVAR_84 u f t x).
Proof. exact (eq_refl (term3595 _90715 A GEN_PVAR_84 u f t x)). Qed.
Lemma lem3523950 {_90715 A : Type'} (_37167 : type616 _90715 A) (u : _90715 -> Prop) (f : type1413 _90715 A) (t : _90715 -> Prop) (GEN_PVAR_84 : _90715) : (term3601 _90715 A _37167 u f t GEN_PVAR_84) = (term3601 _90715 A _37167 u f t GEN_PVAR_84).
Proof. exact (eq_refl (term3601 _90715 A _37167 u f t GEN_PVAR_84)). Qed.
Lemma lem3523951 {_90715 A : Type'} (_37167 : type616 _90715 A) (GEN_PVAR_84 : _90715) (u : _90715 -> Prop) (f : type1413 _90715 A) (t : _90715 -> Prop) (x : _90715) : (term3713 _90715 A _37167 GEN_PVAR_84 u f t x) = (term3714 _90715 A _37167 GEN_PVAR_84 u f t x).
Proof. exact (MK_COMB (@lem3523950 _90715 A _37167 u f t GEN_PVAR_84) (@lem3523949 _90715 A GEN_PVAR_84 u f t x)). Qed.
Lemma lem3523952 {_90715 A : Type'} (_37167 : type616 _90715 A) (GEN_PVAR_84 : _90715) (u : _90715 -> Prop) (f : type1413 _90715 A) (t : _90715 -> Prop) : (term3715 _90715 A _37167 GEN_PVAR_84 u f t) = (term3716 _90715 A _37167 GEN_PVAR_84 u f t).
Proof. exact (fun_ext (fun x : _90715 => @lem3523951 _90715 A _37167 GEN_PVAR_84 u f t x)). Qed.
Lemma lem3523953 {_90715 : Type'} : (@ex _90715) = (@ex _90715).
Proof. exact (eq_refl (@ex _90715)). Qed.
Lemma lem3523954 {_90715 A : Type'} (_37167 : type616 _90715 A) (GEN_PVAR_84 : _90715) (u : _90715 -> Prop) (f : type1413 _90715 A) (t : _90715 -> Prop) : (term3707 _90715 A _37167 GEN_PVAR_84 u f t) = (term3717 _90715 A _37167 GEN_PVAR_84 u f t).
Proof. exact (MK_COMB (@lem3523953 _90715) (@lem3523952 _90715 A _37167 GEN_PVAR_84 u f t)). Qed.
Lemma lem3523955 {_90715 A : Type'} (_37167 : type616 _90715 A) (GEN_PVAR_84 : _90715) (u : _90715 -> Prop) (f : type1413 _90715 A) (t : _90715 -> Prop) : ((term3706 _90715 A _37167 GEN_PVAR_84 u f t) = (term3707 _90715 A _37167 GEN_PVAR_84 u f t)) = ((term3602 _90715 A _37167 GEN_PVAR_84 u f t) = (term3717 _90715 A _37167 GEN_PVAR_84 u f t)).
Proof. exact (MK_COMB (@lem3523948 _90715 A _37167 GEN_PVAR_84 u f t) (@lem3523954 _90715 A _37167 GEN_PVAR_84 u f t)). Qed.
Lemma lem3523956 {_90715 A : Type'} (_37167 : type616 _90715 A) (GEN_PVAR_84 : _90715) (u : _90715 -> Prop) (f : type1413 _90715 A) (t : _90715 -> Prop) : (term3602 _90715 A _37167 GEN_PVAR_84 u f t) = (term3717 _90715 A _37167 GEN_PVAR_84 u f t).
Proof. exact (EQ_MP (@lem3523955 _90715 A _37167 GEN_PVAR_84 u f t) (@lem3523940 _90715 A _37167 GEN_PVAR_84 u f t)). Qed.
Lemma lem3523957 {_90715 A : Type'} (_37167 : type616 _90715 A) (u : _90715 -> Prop) (f : type1413 _90715 A) (t : _90715 -> Prop) : (term3621 _90715 A _37167 u f t) = (term3718 _90715 A _37167 u f t).
Proof. exact (fun_ext (fun GEN_PVAR_84 : _90715 => @lem3523956 _90715 A _37167 GEN_PVAR_84 u f t)). Qed.
Lemma lem3523958 {_90715 : Type'} : (@all _90715) = (@all _90715).
Proof. exact (eq_refl (@all _90715)). Qed.
Lemma lem3523959 {_90715 A : Type'} (_37167 : type616 _90715 A) (u : _90715 -> Prop) (f : type1413 _90715 A) (t : _90715 -> Prop) : (term3636 _90715 A _37167 u f t) = (term3719 _90715 A _37167 u f t).
Proof. exact (MK_COMB (@lem3523958 _90715) (@lem3523957 _90715 A _37167 u f t)). Qed.
Lemma lem3523961 {A B : Type'} (P : type1413 A B) : (term453 A B P) = (term454 A B P).
Proof. exact (EQ_MP (@lem18899 A B P) (@lem18898 A B P)). Qed.
Lemma lem3523962 {_90715 : Type'} (P : type1402 _90715) : (term3480 _90715 P) = (term3481 _90715 P).
Proof. exact (@lem3523961 _90715 _90715 P). Qed.
Lemma lem3523963 {_90715 A : Type'} (_37167 : type616 _90715 A) (u : _90715 -> Prop) (f : type1413 _90715 A) (t : _90715 -> Prop) : (term3720 _90715 A _37167 u f t) = (term3721 _90715 A _37167 u f t).
Proof. exact (@lem3523962 _90715 (term3722 _90715 A _37167 u f t)). Qed.
Lemma lem3523964 {_90715 A : Type'} (_37167 : type616 _90715 A) (GEN_PVAR_84 : _90715) (u : _90715 -> Prop) (f : type1413 _90715 A) (t : _90715 -> Prop) : (term3723 _90715 A _37167 u f t GEN_PVAR_84) = (term3716 _90715 A _37167 GEN_PVAR_84 u f t).
Proof. exact (eq_refl (term3723 _90715 A _37167 u f t GEN_PVAR_84)). Qed.
Lemma lem3523965 {_90715 : Type'} (x : _90715) : x = x.
Proof. exact (eq_refl x). Qed.
Lemma lem3523966 {_90715 A : Type'} (_37167 : type616 _90715 A) (GEN_PVAR_84 : _90715) (u : _90715 -> Prop) (f : type1413 _90715 A) (t : _90715 -> Prop) (x : _90715) : (term3724 _90715 A _37167 u f t GEN_PVAR_84 x) = (term3725 _90715 A _37167 GEN_PVAR_84 u f t x).
Proof. exact (MK_COMB (@lem3523964 _90715 A _37167 GEN_PVAR_84 u f t) (@lem3523965 _90715 x)). Qed.
Lemma lem3523967 {_90715 A : Type'} (_37167 : type616 _90715 A) (GEN_PVAR_84 : _90715) (u : _90715 -> Prop) (f : type1413 _90715 A) (t : _90715 -> Prop) (x : _90715) : (term3725 _90715 A _37167 GEN_PVAR_84 u f t x) = (term3714 _90715 A _37167 GEN_PVAR_84 u f t x).
Proof. exact (eq_refl (term3725 _90715 A _37167 GEN_PVAR_84 u f t x)). Qed.
Lemma lem3523968 {_90715 A : Type'} (_37167 : type616 _90715 A) (GEN_PVAR_84 : _90715) (u : _90715 -> Prop) (f : type1413 _90715 A) (t : _90715 -> Prop) (x : _90715) : (term3724 _90715 A _37167 u f t GEN_PVAR_84 x) = (term3714 _90715 A _37167 GEN_PVAR_84 u f t x).
Proof. exact (TRANS (@lem3523966 _90715 A _37167 GEN_PVAR_84 u f t x) (@lem3523967 _90715 A _37167 GEN_PVAR_84 u f t x)). Qed.
Lemma lem3523969 {_90715 A : Type'} (_37167 : type616 _90715 A) (GEN_PVAR_84 : _90715) (u : _90715 -> Prop) (f : type1413 _90715 A) (t : _90715 -> Prop) : (term3726 _90715 A _37167 u f t GEN_PVAR_84) = (term3716 _90715 A _37167 GEN_PVAR_84 u f t).
Proof. exact (fun_ext (fun x : _90715 => @lem3523968 _90715 A _37167 GEN_PVAR_84 u f t x)). Qed.
Lemma lem3523970 {_90715 : Type'} : (@ex _90715) = (@ex _90715).
Proof. exact (eq_refl (@ex _90715)). Qed.
Lemma lem3523971 {_90715 A : Type'} (_37167 : type616 _90715 A) (GEN_PVAR_84 : _90715) (u : _90715 -> Prop) (f : type1413 _90715 A) (t : _90715 -> Prop) : (term3727 _90715 A _37167 u f t GEN_PVAR_84) = (term3717 _90715 A _37167 GEN_PVAR_84 u f t).
Proof. exact (MK_COMB (@lem3523970 _90715) (@lem3523969 _90715 A _37167 GEN_PVAR_84 u f t)). Qed.
Lemma lem3523972 {_90715 A : Type'} (_37167 : type616 _90715 A) (u : _90715 -> Prop) (f : type1413 _90715 A) (t : _90715 -> Prop) : (term3728 _90715 A _37167 u f t) = (term3718 _90715 A _37167 u f t).
Proof. exact (fun_ext (fun GEN_PVAR_84 : _90715 => @lem3523971 _90715 A _37167 GEN_PVAR_84 u f t)). Qed.
Lemma lem3523973 {_90715 : Type'} : (@all _90715) = (@all _90715).
Proof. exact (eq_refl (@all _90715)). Qed.
Lemma lem3523974 {_90715 A : Type'} (_37167 : type616 _90715 A) (u : _90715 -> Prop) (f : type1413 _90715 A) (t : _90715 -> Prop) : (term3720 _90715 A _37167 u f t) = (term3719 _90715 A _37167 u f t).
Proof. exact (MK_COMB (@lem3523973 _90715) (@lem3523972 _90715 A _37167 u f t)). Qed.
Lemma lem3523975 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem3523976 {_90715 A : Type'} (_37167 : type616 _90715 A) (u : _90715 -> Prop) (f : type1413 _90715 A) (t : _90715 -> Prop) : (term3729 _90715 A _37167 u f t) = (term3730 _90715 A _37167 u f t).
Proof. exact (MK_COMB (@lem3523975) (@lem3523974 _90715 A _37167 u f t)). Qed.
Lemma lem3523977 {_90715 A : Type'} (_37167 : type616 _90715 A) (GEN_PVAR_84 : _90715) (u : _90715 -> Prop) (f : type1413 _90715 A) (t : _90715 -> Prop) : (term3723 _90715 A _37167 u f t GEN_PVAR_84) = (term3716 _90715 A _37167 GEN_PVAR_84 u f t).
Proof. exact (eq_refl (term3723 _90715 A _37167 u f t GEN_PVAR_84)). Qed.
Lemma lem3523978 {_90715 : Type'} (x : _90715 -> _90715) (GEN_PVAR_84 : _90715) : (x GEN_PVAR_84) = (x GEN_PVAR_84).
Proof. exact (eq_refl (x GEN_PVAR_84)). Qed.
Lemma lem3523979 {_90715 A : Type'} (_37167 : type616 _90715 A) (u : _90715 -> Prop) (f : type1413 _90715 A) (t : _90715 -> Prop) (x : _90715 -> _90715) (GEN_PVAR_84 : _90715) : (term3731 _90715 A _37167 u f t x GEN_PVAR_84) = (term3732 _90715 A _37167 u f t x GEN_PVAR_84).
Proof. exact (MK_COMB (@lem3523977 _90715 A _37167 GEN_PVAR_84 u f t) (@lem3523978 _90715 x GEN_PVAR_84)). Qed.
Lemma lem3523980 {_90715 A : Type'} (_37167 : type616 _90715 A) (u : _90715 -> Prop) (f : type1413 _90715 A) (t : _90715 -> Prop) (x : _90715 -> _90715) (GEN_PVAR_84 : _90715) : (term3732 _90715 A _37167 u f t x GEN_PVAR_84) = (term3733 _90715 A _37167 u f t x GEN_PVAR_84).
Proof. exact (eq_refl (term3732 _90715 A _37167 u f t x GEN_PVAR_84)). Qed.
Lemma lem3523981 {_90715 A : Type'} (_37167 : type616 _90715 A) (u : _90715 -> Prop) (f : type1413 _90715 A) (t : _90715 -> Prop) (x : _90715 -> _90715) (GEN_PVAR_84 : _90715) : (term3731 _90715 A _37167 u f t x GEN_PVAR_84) = (term3733 _90715 A _37167 u f t x GEN_PVAR_84).
Proof. exact (TRANS (@lem3523979 _90715 A _37167 u f t x GEN_PVAR_84) (@lem3523980 _90715 A _37167 u f t x GEN_PVAR_84)). Qed.
Lemma lem3523982 {_90715 A : Type'} (_37167 : type616 _90715 A) (u : _90715 -> Prop) (f : type1413 _90715 A) (t : _90715 -> Prop) (x : _90715 -> _90715) : (term3734 _90715 A _37167 u f t x) = (term3735 _90715 A _37167 u f t x).
Proof. exact (fun_ext (fun GEN_PVAR_84 : _90715 => @lem3523981 _90715 A _37167 u f t x GEN_PVAR_84)). Qed.
Lemma lem3523983 {_90715 : Type'} : (@all _90715) = (@all _90715).
Proof. exact (eq_refl (@all _90715)). Qed.
Lemma lem3523984 {_90715 A : Type'} (_37167 : type616 _90715 A) (u : _90715 -> Prop) (f : type1413 _90715 A) (t : _90715 -> Prop) (x : _90715 -> _90715) : (term3736 _90715 A _37167 u f t x) = (term3737 _90715 A _37167 u f t x).
Proof. exact (MK_COMB (@lem3523983 _90715) (@lem3523982 _90715 A _37167 u f t x)). Qed.
Lemma lem3523985 {_90715 A : Type'} (_37167 : type616 _90715 A) (u : _90715 -> Prop) (f : type1413 _90715 A) (t : _90715 -> Prop) : (term3738 _90715 A _37167 u f t) = (term3739 _90715 A _37167 u f t).
Proof. exact (fun_ext (fun x : _90715 -> _90715 => @lem3523984 _90715 A _37167 u f t x)). Qed.
Lemma lem3523986 {_90715 : Type'} : (@ex (_90715 -> _90715)) = (@ex (_90715 -> _90715)).
Proof. exact (eq_refl (@ex (_90715 -> _90715))). Qed.
Lemma lem3523987 {_90715 A : Type'} (_37167 : type616 _90715 A) (u : _90715 -> Prop) (f : type1413 _90715 A) (t : _90715 -> Prop) : (term3721 _90715 A _37167 u f t) = (term3740 _90715 A _37167 u f t).
Proof. exact (MK_COMB (@lem3523986 _90715) (@lem3523985 _90715 A _37167 u f t)). Qed.
Lemma lem3523988 {_90715 A : Type'} (_37167 : type616 _90715 A) (u : _90715 -> Prop) (f : type1413 _90715 A) (t : _90715 -> Prop) : ((term3720 _90715 A _37167 u f t) = (term3721 _90715 A _37167 u f t)) = ((term3719 _90715 A _37167 u f t) = (term3740 _90715 A _37167 u f t)).
Proof. exact (MK_COMB (@lem3523976 _90715 A _37167 u f t) (@lem3523987 _90715 A _37167 u f t)). Qed.
Lemma lem3523989 {_90715 A : Type'} (_37167 : type616 _90715 A) (u : _90715 -> Prop) (f : type1413 _90715 A) (t : _90715 -> Prop) : (term3719 _90715 A _37167 u f t) = (term3740 _90715 A _37167 u f t).
Proof. exact (EQ_MP (@lem3523988 _90715 A _37167 u f t) (@lem3523963 _90715 A _37167 u f t)). Qed.
Lemma lem3523990 {_90715 A : Type'} (_37167 : type616 _90715 A) (u : _90715 -> Prop) (f : type1413 _90715 A) (t : _90715 -> Prop) : (term3636 _90715 A _37167 u f t) = (term3740 _90715 A _37167 u f t).
Proof. exact (TRANS (@lem3523959 _90715 A _37167 u f t) (@lem3523989 _90715 A _37167 u f t)). Qed.
Lemma lem3523991 {_90715 A : Type'} (_37167 : type616 _90715 A) (u : _90715 -> Prop) (f : type1413 _90715 A) : (term3643 _90715 A _37167 u f) = (term3741 _90715 A _37167 u f).
Proof. exact (fun_ext (fun t : _90715 -> Prop => @lem3523990 _90715 A _37167 u f t)). Qed.
Lemma lem3523992 {_90715 : Type'} : (@all (_90715 -> Prop)) = (@all (_90715 -> Prop)).
Proof. exact (eq_refl (@all (_90715 -> Prop))). Qed.
Lemma lem3523993 {_90715 A : Type'} (_37167 : type616 _90715 A) (u : _90715 -> Prop) (f : type1413 _90715 A) : (term3658 _90715 A _37167 u f) = (term3742 _90715 A _37167 u f).
Proof. exact (MK_COMB (@lem3523992 _90715) (@lem3523991 _90715 A _37167 u f)). Qed.
Lemma lem3523995 {A B : Type'} (P : type1413 A B) : (term453 A B P) = (term454 A B P).
Proof. exact (EQ_MP (@lem18899 A B P) (@lem18898 A B P)). Qed.
Lemma lem3523996 {_90715 : Type'} (P : type624 _90715) : (term3505 _90715 P) = (term3506 _90715 P).
Proof. exact (@lem3523995 (_90715 -> Prop) (_90715 -> _90715) P). Qed.
Lemma lem3523997 {_90715 A : Type'} (_37167 : type616 _90715 A) (u : _90715 -> Prop) (f : type1413 _90715 A) : (term3743 _90715 A _37167 u f) = (term3744 _90715 A _37167 u f).
Proof. exact (@lem3523996 _90715 (term3745 _90715 A _37167 u f)). Qed.
Lemma lem3523998 {_90715 A : Type'} (_37167 : type616 _90715 A) (u : _90715 -> Prop) (f : type1413 _90715 A) (t : _90715 -> Prop) : (term3746 _90715 A _37167 u f t) = (term3739 _90715 A _37167 u f t).
Proof. exact (eq_refl (term3746 _90715 A _37167 u f t)). Qed.
Lemma lem3523999 {_90715 : Type'} (x : _90715 -> _90715) : x = x.
Proof. exact (eq_refl x). Qed.
Lemma lem3524000 {_90715 A : Type'} (_37167 : type616 _90715 A) (u : _90715 -> Prop) (f : type1413 _90715 A) (t : _90715 -> Prop) (x : _90715 -> _90715) : (term3747 _90715 A _37167 u f t x) = (term3748 _90715 A _37167 u f t x).
Proof. exact (MK_COMB (@lem3523998 _90715 A _37167 u f t) (@lem3523999 _90715 x)). Qed.
Lemma lem3524001 {_90715 A : Type'} (_37167 : type616 _90715 A) (u : _90715 -> Prop) (f : type1413 _90715 A) (t : _90715 -> Prop) (x : _90715 -> _90715) : (term3748 _90715 A _37167 u f t x) = (term3737 _90715 A _37167 u f t x).
Proof. exact (eq_refl (term3748 _90715 A _37167 u f t x)). Qed.
Lemma lem3524002 {_90715 A : Type'} (_37167 : type616 _90715 A) (u : _90715 -> Prop) (f : type1413 _90715 A) (t : _90715 -> Prop) (x : _90715 -> _90715) : (term3747 _90715 A _37167 u f t x) = (term3737 _90715 A _37167 u f t x).
Proof. exact (TRANS (@lem3524000 _90715 A _37167 u f t x) (@lem3524001 _90715 A _37167 u f t x)). Qed.
Lemma lem3524003 {_90715 A : Type'} (_37167 : type616 _90715 A) (u : _90715 -> Prop) (f : type1413 _90715 A) (t : _90715 -> Prop) : (term3749 _90715 A _37167 u f t) = (term3739 _90715 A _37167 u f t).
Proof. exact (fun_ext (fun x : _90715 -> _90715 => @lem3524002 _90715 A _37167 u f t x)). Qed.
Lemma lem3524004 {_90715 : Type'} : (@ex (_90715 -> _90715)) = (@ex (_90715 -> _90715)).
Proof. exact (eq_refl (@ex (_90715 -> _90715))). Qed.
Lemma lem3524005 {_90715 A : Type'} (_37167 : type616 _90715 A) (u : _90715 -> Prop) (f : type1413 _90715 A) (t : _90715 -> Prop) : (term3750 _90715 A _37167 u f t) = (term3740 _90715 A _37167 u f t).
Proof. exact (MK_COMB (@lem3524004 _90715) (@lem3524003 _90715 A _37167 u f t)). Qed.
Lemma lem3524006 {_90715 A : Type'} (_37167 : type616 _90715 A) (u : _90715 -> Prop) (f : type1413 _90715 A) : (term3751 _90715 A _37167 u f) = (term3741 _90715 A _37167 u f).
Proof. exact (fun_ext (fun t : _90715 -> Prop => @lem3524005 _90715 A _37167 u f t)). Qed.
Lemma lem3524007 {_90715 : Type'} : (@all (_90715 -> Prop)) = (@all (_90715 -> Prop)).
Proof. exact (eq_refl (@all (_90715 -> Prop))). Qed.
Lemma lem3524008 {_90715 A : Type'} (_37167 : type616 _90715 A) (u : _90715 -> Prop) (f : type1413 _90715 A) : (term3743 _90715 A _37167 u f) = (term3742 _90715 A _37167 u f).
Proof. exact (MK_COMB (@lem3524007 _90715) (@lem3524006 _90715 A _37167 u f)). Qed.
Lemma lem3524009 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem3524010 {_90715 A : Type'} (_37167 : type616 _90715 A) (u : _90715 -> Prop) (f : type1413 _90715 A) : (term3752 _90715 A _37167 u f) = (term3753 _90715 A _37167 u f).
Proof. exact (MK_COMB (@lem3524009) (@lem3524008 _90715 A _37167 u f)). Qed.
Lemma lem3524011 {_90715 A : Type'} (_37167 : type616 _90715 A) (u : _90715 -> Prop) (f : type1413 _90715 A) (t : _90715 -> Prop) : (term3746 _90715 A _37167 u f t) = (term3739 _90715 A _37167 u f t).
Proof. exact (eq_refl (term3746 _90715 A _37167 u f t)). Qed.
Lemma lem3524012 {_90715 : Type'} (x : type670 _90715) (t : _90715 -> Prop) : (x t) = (x t).
Proof. exact (eq_refl (x t)). Qed.
Lemma lem3524013 {_90715 A : Type'} (_37167 : type616 _90715 A) (u : _90715 -> Prop) (f : type1413 _90715 A) (x : type670 _90715) (t : _90715 -> Prop) : (term3754 _90715 A _37167 u f x t) = (term3755 _90715 A _37167 u f x t).
Proof. exact (MK_COMB (@lem3524011 _90715 A _37167 u f t) (@lem3524012 _90715 x t)). Qed.
Lemma lem3524014 {_90715 A : Type'} (_37167 : type616 _90715 A) (u : _90715 -> Prop) (f : type1413 _90715 A) (x : type670 _90715) (t : _90715 -> Prop) : (term3755 _90715 A _37167 u f x t) = (term3756 _90715 A _37167 u f x t).
Proof. exact (eq_refl (term3755 _90715 A _37167 u f x t)). Qed.
Lemma lem3524015 {_90715 A : Type'} (_37167 : type616 _90715 A) (u : _90715 -> Prop) (f : type1413 _90715 A) (x : type670 _90715) (t : _90715 -> Prop) : (term3754 _90715 A _37167 u f x t) = (term3756 _90715 A _37167 u f x t).
Proof. exact (TRANS (@lem3524013 _90715 A _37167 u f x t) (@lem3524014 _90715 A _37167 u f x t)). Qed.
Lemma lem3524016 {_90715 A : Type'} (_37167 : type616 _90715 A) (u : _90715 -> Prop) (f : type1413 _90715 A) (x : type670 _90715) : (term3757 _90715 A _37167 u f x) = (term3758 _90715 A _37167 u f x).
Proof. exact (fun_ext (fun t : _90715 -> Prop => @lem3524015 _90715 A _37167 u f x t)). Qed.
Lemma lem3524017 {_90715 : Type'} : (@all (_90715 -> Prop)) = (@all (_90715 -> Prop)).
Proof. exact (eq_refl (@all (_90715 -> Prop))). Qed.
Lemma lem3524018 {_90715 A : Type'} (_37167 : type616 _90715 A) (u : _90715 -> Prop) (f : type1413 _90715 A) (x : type670 _90715) : (term3759 _90715 A _37167 u f x) = (term3760 _90715 A _37167 u f x).
Proof. exact (MK_COMB (@lem3524017 _90715) (@lem3524016 _90715 A _37167 u f x)). Qed.
Lemma lem3524019 {_90715 A : Type'} (_37167 : type616 _90715 A) (u : _90715 -> Prop) (f : type1413 _90715 A) : (term3761 _90715 A _37167 u f) = (term3762 _90715 A _37167 u f).
Proof. exact (fun_ext (fun x : type670 _90715 => @lem3524018 _90715 A _37167 u f x)). Qed.
Lemma lem3524020 {_90715 : Type'} : (@ex ((_90715 -> Prop) -> _90715 -> _90715)) = (@ex ((_90715 -> Prop) -> _90715 -> _90715)).
Proof. exact (eq_refl (@ex ((_90715 -> Prop) -> _90715 -> _90715))). Qed.
Lemma lem3524021 {_90715 A : Type'} (_37167 : type616 _90715 A) (u : _90715 -> Prop) (f : type1413 _90715 A) : (term3744 _90715 A _37167 u f) = (term3763 _90715 A _37167 u f).
Proof. exact (MK_COMB (@lem3524020 _90715) (@lem3524019 _90715 A _37167 u f)). Qed.
Lemma lem3524022 {_90715 A : Type'} (_37167 : type616 _90715 A) (u : _90715 -> Prop) (f : type1413 _90715 A) : ((term3743 _90715 A _37167 u f) = (term3744 _90715 A _37167 u f)) = ((term3742 _90715 A _37167 u f) = (term3763 _90715 A _37167 u f)).
Proof. exact (MK_COMB (@lem3524010 _90715 A _37167 u f) (@lem3524021 _90715 A _37167 u f)). Qed.
Lemma lem3524023 {_90715 A : Type'} (_37167 : type616 _90715 A) (u : _90715 -> Prop) (f : type1413 _90715 A) : (term3742 _90715 A _37167 u f) = (term3763 _90715 A _37167 u f).
Proof. exact (EQ_MP (@lem3524022 _90715 A _37167 u f) (@lem3523997 _90715 A _37167 u f)). Qed.
Lemma lem3524024 {_90715 A : Type'} (_37167 : type616 _90715 A) (u : _90715 -> Prop) (f : type1413 _90715 A) : (term3658 _90715 A _37167 u f) = (term3763 _90715 A _37167 u f).
Proof. exact (TRANS (@lem3523993 _90715 A _37167 u f) (@lem3524023 _90715 A _37167 u f)). Qed.
Lemma lem3524025 {_90715 A : Type'} (_37167 : type616 _90715 A) (u : _90715 -> Prop) : (term3667 _90715 A _37167 u) = (term3764 _90715 A _37167 u).
Proof. exact (fun_ext (fun f : type1413 _90715 A => @lem3524024 _90715 A _37167 u f)). Qed.
Lemma lem3524026 {_90715 A : Type'} : (@all (_90715 -> A -> Prop)) = (@all (_90715 -> A -> Prop)).
Proof. exact (eq_refl (@all (_90715 -> A -> Prop))). Qed.
Lemma lem3524027 {_90715 A : Type'} (_37167 : type616 _90715 A) (u : _90715 -> Prop) : (term3682 _90715 A _37167 u) = (term3765 _90715 A _37167 u).
Proof. exact (MK_COMB (@lem3524026 _90715 A) (@lem3524025 _90715 A _37167 u)). Qed.
Lemma lem3524029 {A B : Type'} (P : type1413 A B) : (term453 A B P) = (term454 A B P).
Proof. exact (EQ_MP (@lem18899 A B P) (@lem18898 A B P)). Qed.
Lemma lem3524030 {_90715 A : Type'} (P : type446 _90715 A) : (term3766 _90715 A P) = (term3767 _90715 A P).
Proof. exact (@lem3524029 (type1413 _90715 A) (type670 _90715) P). Qed.
Lemma lem3524031 {_90715 A : Type'} (_37167 : type616 _90715 A) (u : _90715 -> Prop) : (term3768 _90715 A _37167 u) = (term3769 _90715 A _37167 u).
Proof. exact (@lem3524030 _90715 A (term3770 _90715 A _37167 u)). Qed.
Lemma lem3524032 {_90715 A : Type'} (_37167 : type616 _90715 A) (u : _90715 -> Prop) (f : type1413 _90715 A) : (term3771 _90715 A _37167 u f) = (term3762 _90715 A _37167 u f).
Proof. exact (eq_refl (term3771 _90715 A _37167 u f)). Qed.
Lemma lem3524033 {_90715 : Type'} (x : type670 _90715) : x = x.
Proof. exact (eq_refl x). Qed.
Lemma lem3524034 {_90715 A : Type'} (_37167 : type616 _90715 A) (u : _90715 -> Prop) (f : type1413 _90715 A) (x : type670 _90715) : (term3772 _90715 A _37167 u f x) = (term3773 _90715 A _37167 u f x).
Proof. exact (MK_COMB (@lem3524032 _90715 A _37167 u f) (@lem3524033 _90715 x)). Qed.
Lemma lem3524035 {_90715 A : Type'} (_37167 : type616 _90715 A) (u : _90715 -> Prop) (f : type1413 _90715 A) (x : type670 _90715) : (term3773 _90715 A _37167 u f x) = (term3760 _90715 A _37167 u f x).
Proof. exact (eq_refl (term3773 _90715 A _37167 u f x)). Qed.
Lemma lem3524036 {_90715 A : Type'} (_37167 : type616 _90715 A) (u : _90715 -> Prop) (f : type1413 _90715 A) (x : type670 _90715) : (term3772 _90715 A _37167 u f x) = (term3760 _90715 A _37167 u f x).
Proof. exact (TRANS (@lem3524034 _90715 A _37167 u f x) (@lem3524035 _90715 A _37167 u f x)). Qed.
Lemma lem3524037 {_90715 A : Type'} (_37167 : type616 _90715 A) (u : _90715 -> Prop) (f : type1413 _90715 A) : (term3774 _90715 A _37167 u f) = (term3762 _90715 A _37167 u f).
Proof. exact (fun_ext (fun x : type670 _90715 => @lem3524036 _90715 A _37167 u f x)). Qed.
Lemma lem3524038 {_90715 : Type'} : (@ex ((_90715 -> Prop) -> _90715 -> _90715)) = (@ex ((_90715 -> Prop) -> _90715 -> _90715)).
Proof. exact (eq_refl (@ex ((_90715 -> Prop) -> _90715 -> _90715))). Qed.
Lemma lem3524039 {_90715 A : Type'} (_37167 : type616 _90715 A) (u : _90715 -> Prop) (f : type1413 _90715 A) : (term3775 _90715 A _37167 u f) = (term3763 _90715 A _37167 u f).
Proof. exact (MK_COMB (@lem3524038 _90715) (@lem3524037 _90715 A _37167 u f)). Qed.
Lemma lem3524040 {_90715 A : Type'} (_37167 : type616 _90715 A) (u : _90715 -> Prop) : (term3776 _90715 A _37167 u) = (term3764 _90715 A _37167 u).
Proof. exact (fun_ext (fun f : type1413 _90715 A => @lem3524039 _90715 A _37167 u f)). Qed.
Lemma lem3524041 {_90715 A : Type'} : (@all (_90715 -> A -> Prop)) = (@all (_90715 -> A -> Prop)).
Proof. exact (eq_refl (@all (_90715 -> A -> Prop))). Qed.
Lemma lem3524042 {_90715 A : Type'} (_37167 : type616 _90715 A) (u : _90715 -> Prop) : (term3768 _90715 A _37167 u) = (term3765 _90715 A _37167 u).
Proof. exact (MK_COMB (@lem3524041 _90715 A) (@lem3524040 _90715 A _37167 u)). Qed.
Lemma lem3524043 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem3524044 {_90715 A : Type'} (_37167 : type616 _90715 A) (u : _90715 -> Prop) : (term3777 _90715 A _37167 u) = (term3778 _90715 A _37167 u).
Proof. exact (MK_COMB (@lem3524043) (@lem3524042 _90715 A _37167 u)). Qed.
Lemma lem3524045 {_90715 A : Type'} (_37167 : type616 _90715 A) (u : _90715 -> Prop) (f : type1413 _90715 A) : (term3771 _90715 A _37167 u f) = (term3762 _90715 A _37167 u f).
Proof. exact (eq_refl (term3771 _90715 A _37167 u f)). Qed.
Lemma lem3524046 {_90715 A : Type'} (x : type455 _90715 A) (f : type1413 _90715 A) : (x f) = (x f).
Proof. exact (eq_refl (x f)). Qed.
Lemma lem3524047 {_90715 A : Type'} (_37167 : type616 _90715 A) (u : _90715 -> Prop) (x : type455 _90715 A) (f : type1413 _90715 A) : (term3779 _90715 A _37167 u x f) = (term3780 _90715 A _37167 u x f).
Proof. exact (MK_COMB (@lem3524045 _90715 A _37167 u f) (@lem3524046 _90715 A x f)). Qed.
Lemma lem3524048 {_90715 A : Type'} (_37167 : type616 _90715 A) (u : _90715 -> Prop) (x : type455 _90715 A) (f : type1413 _90715 A) : (term3780 _90715 A _37167 u x f) = (term3781 _90715 A _37167 u x f).
Proof. exact (eq_refl (term3780 _90715 A _37167 u x f)). Qed.
Lemma lem3524049 {_90715 A : Type'} (_37167 : type616 _90715 A) (u : _90715 -> Prop) (x : type455 _90715 A) (f : type1413 _90715 A) : (term3779 _90715 A _37167 u x f) = (term3781 _90715 A _37167 u x f).
Proof. exact (TRANS (@lem3524047 _90715 A _37167 u x f) (@lem3524048 _90715 A _37167 u x f)). Qed.
Lemma lem3524050 {_90715 A : Type'} (_37167 : type616 _90715 A) (u : _90715 -> Prop) (x : type455 _90715 A) : (term3782 _90715 A _37167 u x) = (term3783 _90715 A _37167 u x).
Proof. exact (fun_ext (fun f : type1413 _90715 A => @lem3524049 _90715 A _37167 u x f)). Qed.
Lemma lem3524051 {_90715 A : Type'} : (@all (_90715 -> A -> Prop)) = (@all (_90715 -> A -> Prop)).
Proof. exact (eq_refl (@all (_90715 -> A -> Prop))). Qed.
Lemma lem3524052 {_90715 A : Type'} (_37167 : type616 _90715 A) (u : _90715 -> Prop) (x : type455 _90715 A) : (term3784 _90715 A _37167 u x) = (term3785 _90715 A _37167 u x).
Proof. exact (MK_COMB (@lem3524051 _90715 A) (@lem3524050 _90715 A _37167 u x)). Qed.
Lemma lem3524053 {_90715 A : Type'} (_37167 : type616 _90715 A) (u : _90715 -> Prop) : (term3786 _90715 A _37167 u) = (term3787 _90715 A _37167 u).
Proof. exact (fun_ext (fun x : type455 _90715 A => @lem3524052 _90715 A _37167 u x)). Qed.
Lemma lem3524054 {_90715 A : Type'} : (@ex ((_90715 -> A -> Prop) -> (_90715 -> Prop) -> _90715 -> _90715)) = (@ex ((_90715 -> A -> Prop) -> (_90715 -> Prop) -> _90715 -> _90715)).
Proof. exact (eq_refl (@ex ((_90715 -> A -> Prop) -> (_90715 -> Prop) -> _90715 -> _90715))). Qed.
Lemma lem3524055 {_90715 A : Type'} (_37167 : type616 _90715 A) (u : _90715 -> Prop) : (term3769 _90715 A _37167 u) = (term3788 _90715 A _37167 u).
Proof. exact (MK_COMB (@lem3524054 _90715 A) (@lem3524053 _90715 A _37167 u)). Qed.
Lemma lem3524056 {_90715 A : Type'} (_37167 : type616 _90715 A) (u : _90715 -> Prop) : ((term3768 _90715 A _37167 u) = (term3769 _90715 A _37167 u)) = ((term3765 _90715 A _37167 u) = (term3788 _90715 A _37167 u)).
Proof. exact (MK_COMB (@lem3524044 _90715 A _37167 u) (@lem3524055 _90715 A _37167 u)). Qed.
Lemma lem3524057 {_90715 A : Type'} (_37167 : type616 _90715 A) (u : _90715 -> Prop) : (term3765 _90715 A _37167 u) = (term3788 _90715 A _37167 u).
Proof. exact (EQ_MP (@lem3524056 _90715 A _37167 u) (@lem3524031 _90715 A _37167 u)). Qed.
Lemma lem3524058 {_90715 A : Type'} (_37167 : type616 _90715 A) (u : _90715 -> Prop) : (term3682 _90715 A _37167 u) = (term3788 _90715 A _37167 u).
Proof. exact (TRANS (@lem3524027 _90715 A _37167 u) (@lem3524057 _90715 A _37167 u)). Qed.
Lemma lem3524059 {_90715 A : Type'} (_37167 : type616 _90715 A) : (term3689 _90715 A _37167) = (term3789 _90715 A _37167).
Proof. exact (fun_ext (fun u : _90715 -> Prop => @lem3524058 _90715 A _37167 u)). Qed.
Lemma lem3524060 {_90715 : Type'} : (@all (_90715 -> Prop)) = (@all (_90715 -> Prop)).
Proof. exact (eq_refl (@all (_90715 -> Prop))). Qed.
Lemma lem3524061 {_90715 A : Type'} (_37167 : type616 _90715 A) : (term3704 _90715 A _37167) = (term3790 _90715 A _37167).
Proof. exact (MK_COMB (@lem3524060 _90715) (@lem3524059 _90715 A _37167)). Qed.
Lemma lem3524063 {A B : Type'} (P : type1413 A B) : (term453 A B P) = (term454 A B P).
Proof. exact (EQ_MP (@lem18899 A B P) (@lem18898 A B P)). Qed.
Lemma lem3524064 {_90715 A : Type'} (P : type582 _90715 A) : (term3791 _90715 A P) = (term3792 _90715 A P).
Proof. exact (@lem3524063 (_90715 -> Prop) (type455 _90715 A) P). Qed.
Lemma lem3524065 {_90715 A : Type'} (_37167 : type616 _90715 A) : (term3793 _90715 A _37167) = (term3794 _90715 A _37167).
Proof. exact (@lem3524064 _90715 A (term3795 _90715 A _37167)). Qed.
Lemma lem3524066 {_90715 A : Type'} (_37167 : type616 _90715 A) (u : _90715 -> Prop) : (term3796 _90715 A _37167 u) = (term3787 _90715 A _37167 u).
Proof. exact (eq_refl (term3796 _90715 A _37167 u)). Qed.
Lemma lem3524067 {_90715 A : Type'} (x : type455 _90715 A) : x = x.
Proof. exact (eq_refl x). Qed.
Lemma lem3524068 {_90715 A : Type'} (_37167 : type616 _90715 A) (u : _90715 -> Prop) (x : type455 _90715 A) : (term3797 _90715 A _37167 u x) = (term3798 _90715 A _37167 u x).
Proof. exact (MK_COMB (@lem3524066 _90715 A _37167 u) (@lem3524067 _90715 A x)). Qed.
Lemma lem3524069 {_90715 A : Type'} (_37167 : type616 _90715 A) (u : _90715 -> Prop) (x : type455 _90715 A) : (term3798 _90715 A _37167 u x) = (term3785 _90715 A _37167 u x).
Proof. exact (eq_refl (term3798 _90715 A _37167 u x)). Qed.
Lemma lem3524070 {_90715 A : Type'} (_37167 : type616 _90715 A) (u : _90715 -> Prop) (x : type455 _90715 A) : (term3797 _90715 A _37167 u x) = (term3785 _90715 A _37167 u x).
Proof. exact (TRANS (@lem3524068 _90715 A _37167 u x) (@lem3524069 _90715 A _37167 u x)). Qed.
Lemma lem3524071 {_90715 A : Type'} (_37167 : type616 _90715 A) (u : _90715 -> Prop) : (term3799 _90715 A _37167 u) = (term3787 _90715 A _37167 u).
Proof. exact (fun_ext (fun x : type455 _90715 A => @lem3524070 _90715 A _37167 u x)). Qed.
Lemma lem3524072 {_90715 A : Type'} : (@ex ((_90715 -> A -> Prop) -> (_90715 -> Prop) -> _90715 -> _90715)) = (@ex ((_90715 -> A -> Prop) -> (_90715 -> Prop) -> _90715 -> _90715)).
Proof. exact (eq_refl (@ex ((_90715 -> A -> Prop) -> (_90715 -> Prop) -> _90715 -> _90715))). Qed.
Lemma lem3524073 {_90715 A : Type'} (_37167 : type616 _90715 A) (u : _90715 -> Prop) : (term3800 _90715 A _37167 u) = (term3788 _90715 A _37167 u).
Proof. exact (MK_COMB (@lem3524072 _90715 A) (@lem3524071 _90715 A _37167 u)). Qed.
Lemma lem3524074 {_90715 A : Type'} (_37167 : type616 _90715 A) : (term3801 _90715 A _37167) = (term3789 _90715 A _37167).
Proof. exact (fun_ext (fun u : _90715 -> Prop => @lem3524073 _90715 A _37167 u)). Qed.
Lemma lem3524075 {_90715 : Type'} : (@all (_90715 -> Prop)) = (@all (_90715 -> Prop)).
Proof. exact (eq_refl (@all (_90715 -> Prop))). Qed.
Lemma lem3524076 {_90715 A : Type'} (_37167 : type616 _90715 A) : (term3793 _90715 A _37167) = (term3790 _90715 A _37167).
Proof. exact (MK_COMB (@lem3524075 _90715) (@lem3524074 _90715 A _37167)). Qed.
Lemma lem3524077 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem3524078 {_90715 A : Type'} (_37167 : type616 _90715 A) : (term3802 _90715 A _37167) = (term3803 _90715 A _37167).
Proof. exact (MK_COMB (@lem3524077) (@lem3524076 _90715 A _37167)). Qed.
Lemma lem3524079 {_90715 A : Type'} (_37167 : type616 _90715 A) (u : _90715 -> Prop) : (term3796 _90715 A _37167 u) = (term3787 _90715 A _37167 u).
Proof. exact (eq_refl (term3796 _90715 A _37167 u)). Qed.
Lemma lem3524080 {_90715 A : Type'} (x : type615 _90715 A) (u : _90715 -> Prop) : (x u) = (x u).
Proof. exact (eq_refl (x u)). Qed.
Lemma lem3524081 {_90715 A : Type'} (_37167 : type616 _90715 A) (x : type615 _90715 A) (u : _90715 -> Prop) : (term3804 _90715 A _37167 x u) = (term3805 _90715 A _37167 x u).
Proof. exact (MK_COMB (@lem3524079 _90715 A _37167 u) (@lem3524080 _90715 A x u)). Qed.
Lemma lem3524082 {_90715 A : Type'} (_37167 : type616 _90715 A) (x : type615 _90715 A) (u : _90715 -> Prop) : (term3805 _90715 A _37167 x u) = (term3806 _90715 A _37167 x u).
Proof. exact (eq_refl (term3805 _90715 A _37167 x u)). Qed.
Lemma lem3524083 {_90715 A : Type'} (_37167 : type616 _90715 A) (x : type615 _90715 A) (u : _90715 -> Prop) : (term3804 _90715 A _37167 x u) = (term3806 _90715 A _37167 x u).
Proof. exact (TRANS (@lem3524081 _90715 A _37167 x u) (@lem3524082 _90715 A _37167 x u)). Qed.
Lemma lem3524084 {_90715 A : Type'} (_37167 : type616 _90715 A) (x : type615 _90715 A) : (term3807 _90715 A _37167 x) = (term3808 _90715 A _37167 x).
Proof. exact (fun_ext (fun u : _90715 -> Prop => @lem3524083 _90715 A _37167 x u)). Qed.
Lemma lem3524085 {_90715 : Type'} : (@all (_90715 -> Prop)) = (@all (_90715 -> Prop)).
Proof. exact (eq_refl (@all (_90715 -> Prop))). Qed.
Lemma lem3524086 {_90715 A : Type'} (_37167 : type616 _90715 A) (x : type615 _90715 A) : (term3809 _90715 A _37167 x) = (term3810 _90715 A _37167 x).
Proof. exact (MK_COMB (@lem3524085 _90715) (@lem3524084 _90715 A _37167 x)). Qed.
Lemma lem3524087 {_90715 A : Type'} (_37167 : type616 _90715 A) : (term3811 _90715 A _37167) = (term3812 _90715 A _37167).
Proof. exact (fun_ext (fun x : type615 _90715 A => @lem3524086 _90715 A _37167 x)). Qed.
Lemma lem3524088 {_90715 A : Type'} : (@ex ((_90715 -> Prop) -> (_90715 -> A -> Prop) -> (_90715 -> Prop) -> _90715 -> _90715)) = (@ex ((_90715 -> Prop) -> (_90715 -> A -> Prop) -> (_90715 -> Prop) -> _90715 -> _90715)).
Proof. exact (eq_refl (@ex ((_90715 -> Prop) -> (_90715 -> A -> Prop) -> (_90715 -> Prop) -> _90715 -> _90715))). Qed.
Lemma lem3524089 {_90715 A : Type'} (_37167 : type616 _90715 A) : (term3794 _90715 A _37167) = (term3813 _90715 A _37167).
Proof. exact (MK_COMB (@lem3524088 _90715 A) (@lem3524087 _90715 A _37167)). Qed.
Lemma lem3524090 {_90715 A : Type'} (_37167 : type616 _90715 A) : ((term3793 _90715 A _37167) = (term3794 _90715 A _37167)) = ((term3790 _90715 A _37167) = (term3813 _90715 A _37167)).
Proof. exact (MK_COMB (@lem3524078 _90715 A _37167) (@lem3524089 _90715 A _37167)). Qed.
Lemma lem3524091 {_90715 A : Type'} (_37167 : type616 _90715 A) : (term3790 _90715 A _37167) = (term3813 _90715 A _37167).
Proof. exact (EQ_MP (@lem3524090 _90715 A _37167) (@lem3524065 _90715 A _37167)). Qed.
Lemma lem3524092 {_90715 A : Type'} (_37167 : type616 _90715 A) : (term3704 _90715 A _37167) = (term3813 _90715 A _37167).
Proof. exact (TRANS (@lem3524061 _90715 A _37167) (@lem3524091 _90715 A _37167)). Qed.
Lemma lem3524093 {_90715 A : Type'} (_37167 : type616 _90715 A) : (term3701 _90715 A _37167) = (term3701 _90715 A _37167).
Proof. exact (eq_refl (term3701 _90715 A _37167)). Qed.
Lemma lem3524094 {_90715 A : Type'} (_37167 : type616 _90715 A) : (term3705 _90715 A _37167) = (term3814 _90715 A _37167).
Proof. exact (MK_COMB (@lem3524093 _90715 A _37167) (@lem3524092 _90715 A _37167)). Qed.
Lemma lem3524096 {A : Type'} (P : Prop) (Q : A -> Prop) : (term415 A P Q) = (term416 A P Q).
Proof. exact (EQ_MP (@lem18929 A P Q) (@lem18928 A P Q)). Qed.
Lemma lem3524097 {_90715 A : Type'} (P : Prop) (Q : type124 _90715 A) : (term3815 _90715 A P Q) = (term3816 _90715 A P Q).
Proof. exact (@lem3524096 (type615 _90715 A) P Q). Qed.
Lemma lem3524098 {_90715 A : Type'} (_37167 : type616 _90715 A) : (term3817 _90715 A _37167) = (term3818 _90715 A _37167).
Proof. exact (@lem3524097 _90715 A (term3699 _90715 A _37167) (term3812 _90715 A _37167)). Qed.
Lemma lem3524099 {_90715 A : Type'} (_37167 : type616 _90715 A) (x : type615 _90715 A) : (term3819 _90715 A _37167 x) = (term3810 _90715 A _37167 x).
Proof. exact (eq_refl (term3819 _90715 A _37167 x)). Qed.
Lemma lem3524100 {_90715 A : Type'} (_37167 : type616 _90715 A) : (term3820 _90715 A _37167) = (term3812 _90715 A _37167).
Proof. exact (fun_ext (fun x : type615 _90715 A => @lem3524099 _90715 A _37167 x)). Qed.
Lemma lem3524101 {_90715 A : Type'} : (@ex ((_90715 -> Prop) -> (_90715 -> A -> Prop) -> (_90715 -> Prop) -> _90715 -> _90715)) = (@ex ((_90715 -> Prop) -> (_90715 -> A -> Prop) -> (_90715 -> Prop) -> _90715 -> _90715)).
Proof. exact (eq_refl (@ex ((_90715 -> Prop) -> (_90715 -> A -> Prop) -> (_90715 -> Prop) -> _90715 -> _90715))). Qed.
Lemma lem3524102 {_90715 A : Type'} (_37167 : type616 _90715 A) : (term3821 _90715 A _37167) = (term3813 _90715 A _37167).
Proof. exact (MK_COMB (@lem3524101 _90715 A) (@lem3524100 _90715 A _37167)). Qed.
Lemma lem3524103 {_90715 A : Type'} (_37167 : type616 _90715 A) : (term3701 _90715 A _37167) = (term3701 _90715 A _37167).
Proof. exact (eq_refl (term3701 _90715 A _37167)). Qed.
Lemma lem3524104 {_90715 A : Type'} (_37167 : type616 _90715 A) : (term3817 _90715 A _37167) = (term3814 _90715 A _37167).
Proof. exact (MK_COMB (@lem3524103 _90715 A _37167) (@lem3524102 _90715 A _37167)). Qed.
Lemma lem3524105 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem3524106 {_90715 A : Type'} (_37167 : type616 _90715 A) : (term3822 _90715 A _37167) = (term3823 _90715 A _37167).
Proof. exact (MK_COMB (@lem3524105) (@lem3524104 _90715 A _37167)). Qed.
Lemma lem3524107 {_90715 A : Type'} (_37167 : type616 _90715 A) (x : type615 _90715 A) : (term3819 _90715 A _37167 x) = (term3810 _90715 A _37167 x).
Proof. exact (eq_refl (term3819 _90715 A _37167 x)). Qed.
Lemma lem3524108 {_90715 A : Type'} (_37167 : type616 _90715 A) : (term3701 _90715 A _37167) = (term3701 _90715 A _37167).
Proof. exact (eq_refl (term3701 _90715 A _37167)). Qed.
Lemma lem3524109 {_90715 A : Type'} (_37167 : type616 _90715 A) (x : type615 _90715 A) : (term3824 _90715 A _37167 x) = (term3825 _90715 A _37167 x).
Proof. exact (MK_COMB (@lem3524108 _90715 A _37167) (@lem3524107 _90715 A _37167 x)). Qed.
Lemma lem3524110 {_90715 A : Type'} (_37167 : type616 _90715 A) : (term3826 _90715 A _37167) = (term3827 _90715 A _37167).
Proof. exact (fun_ext (fun x : type615 _90715 A => @lem3524109 _90715 A _37167 x)). Qed.
Lemma lem3524111 {_90715 A : Type'} : (@ex ((_90715 -> Prop) -> (_90715 -> A -> Prop) -> (_90715 -> Prop) -> _90715 -> _90715)) = (@ex ((_90715 -> Prop) -> (_90715 -> A -> Prop) -> (_90715 -> Prop) -> _90715 -> _90715)).
Proof. exact (eq_refl (@ex ((_90715 -> Prop) -> (_90715 -> A -> Prop) -> (_90715 -> Prop) -> _90715 -> _90715))). Qed.
Lemma lem3524112 {_90715 A : Type'} (_37167 : type616 _90715 A) : (term3818 _90715 A _37167) = (term3828 _90715 A _37167).
Proof. exact (MK_COMB (@lem3524111 _90715 A) (@lem3524110 _90715 A _37167)). Qed.
Lemma lem3524113 {_90715 A : Type'} (_37167 : type616 _90715 A) : ((term3817 _90715 A _37167) = (term3818 _90715 A _37167)) = ((term3814 _90715 A _37167) = (term3828 _90715 A _37167)).
Proof. exact (MK_COMB (@lem3524106 _90715 A _37167) (@lem3524112 _90715 A _37167)). Qed.
Lemma lem3524114 {_90715 A : Type'} (_37167 : type616 _90715 A) : (term3814 _90715 A _37167) = (term3828 _90715 A _37167).
Proof. exact (EQ_MP (@lem3524113 _90715 A _37167) (@lem3524098 _90715 A _37167)). Qed.
Lemma lem3524115 {_90715 A : Type'} (_37167 : type616 _90715 A) : (term3705 _90715 A _37167) = (term3828 _90715 A _37167).
Proof. exact (TRANS (@lem3524094 _90715 A _37167) (@lem3524114 _90715 A _37167)). Qed.
Lemma lem3524116 {_90715 A : Type'} (_37167 : type616 _90715 A) : (term3617 _90715 A _37167) = (term3828 _90715 A _37167).
Proof. exact (TRANS (@lem3523936 _90715 A _37167) (@lem3524115 _90715 A _37167)). Qed.
Lemma lem3524117 {_90715 A : Type'} (_37167 : type616 _90715 A) : (term2435 _90715 A _37167) = (term3828 _90715 A _37167).
Proof. exact (TRANS (@lem3523340 _90715 A _37167) (@lem3524116 _90715 A _37167)). Qed.
Lemma lem3524118 {_90715 A : Type'} (_37167 : type616 _90715 A) (h1 : term2435 _90715 A _37167) : term3828 _90715 A _37167.
Proof. exact (EQ_MP (@lem3524117 _90715 A _37167) (@lem3520014 _90715 A _37167 h1)). Qed.
Lemma lem3524122 {_90715 B : Type'} (GEN_PVAR_84 : _90715) (u : _90715 -> Prop) (f : _90715 -> B) (t : _90715 -> Prop) (x : _90715) : (term61 _90715 B GEN_PVAR_84 u f t x) = (term61 _90715 B GEN_PVAR_84 u f t x).
Proof. exact (eq_refl (term61 _90715 B GEN_PVAR_84 u f t x)). Qed.
Lemma lem3524123 {_90715 : Type'} (P : _90715 -> Prop) : (term311 _90715 P) = (term312 _90715 P).
Proof. exact (@lem18394 _90715 P). Qed.
Lemma lem3524124 {_90715 B : Type'} (GEN_PVAR_84 : _90715) (u : _90715 -> Prop) (f : _90715 -> B) (t : _90715 -> Prop) : (term3829 _90715 B GEN_PVAR_84 u f t) = (term3830 _90715 B GEN_PVAR_84 u f t).
Proof. exact (@lem3524123 _90715 (term63 _90715 B GEN_PVAR_84 u f t)). Qed.
Lemma lem3524125 {_90715 B : Type'} (GEN_PVAR_84 : _90715) (u : _90715 -> Prop) (f : _90715 -> B) (t : _90715 -> Prop) (x : _90715) : (term3831 _90715 B GEN_PVAR_84 u f t x) = (term61 _90715 B GEN_PVAR_84 u f t x).
Proof. exact (eq_refl (term3831 _90715 B GEN_PVAR_84 u f t x)). Qed.
Lemma lem3524126 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem3524128 {_90715 B : Type'} (GEN_PVAR_84 : _90715) (u : _90715 -> Prop) (f : _90715 -> B) (t : _90715 -> Prop) (x : _90715) : (term3832 _90715 B GEN_PVAR_84 u f t x) = (term3833 _90715 B GEN_PVAR_84 u f t x).
Proof. exact (MK_COMB (@lem3524126) (@lem3524125 _90715 B GEN_PVAR_84 u f t x)). Qed.
Lemma lem3524129 {_90715 B : Type'} (GEN_PVAR_84 : _90715) (u : _90715 -> Prop) (f : _90715 -> B) (t : _90715 -> Prop) : (term3834 _90715 B GEN_PVAR_84 u f t) = (term3835 _90715 B GEN_PVAR_84 u f t).
Proof. exact (fun_ext (fun x : _90715 => @lem3524128 _90715 B GEN_PVAR_84 u f t x)). Qed.
Lemma lem3524130 {_90715 : Type'} : (@all _90715) = (@all _90715).
Proof. exact (eq_refl (@all _90715)). Qed.
Lemma lem3524131 {_90715 B : Type'} (GEN_PVAR_84 : _90715) (u : _90715 -> Prop) (f : _90715 -> B) (t : _90715 -> Prop) : (term3830 _90715 B GEN_PVAR_84 u f t) = (term3836 _90715 B GEN_PVAR_84 u f t).
Proof. exact (MK_COMB (@lem3524130 _90715) (@lem3524129 _90715 B GEN_PVAR_84 u f t)). Qed.
Lemma lem3524132 {_90715 B : Type'} (GEN_PVAR_84 : _90715) (u : _90715 -> Prop) (f : _90715 -> B) (t : _90715 -> Prop) : (term3829 _90715 B GEN_PVAR_84 u f t) = (term3836 _90715 B GEN_PVAR_84 u f t).
Proof. exact (TRANS (@lem3524124 _90715 B GEN_PVAR_84 u f t) (@lem3524131 _90715 B GEN_PVAR_84 u f t)). Qed.
Lemma lem3524133 {_90715 B : Type'} (GEN_PVAR_84 : _90715) (u : _90715 -> Prop) (f : _90715 -> B) (t : _90715 -> Prop) : (term63 _90715 B GEN_PVAR_84 u f t) = (term63 _90715 B GEN_PVAR_84 u f t).
Proof. exact (fun_ext (fun x : _90715 => @lem3524122 _90715 B GEN_PVAR_84 u f t x)). Qed.
Lemma lem3524134 {_90715 : Type'} : (@ex _90715) = (@ex _90715).
Proof. exact (eq_refl (@ex _90715)). Qed.
Lemma lem3524135 {_90715 B : Type'} (GEN_PVAR_84 : _90715) (u : _90715 -> Prop) (f : _90715 -> B) (t : _90715 -> Prop) : (term65 _90715 B GEN_PVAR_84 u f t) = (term65 _90715 B GEN_PVAR_84 u f t).
Proof. exact (MK_COMB (@lem3524134 _90715) (@lem3524133 _90715 B GEN_PVAR_84 u f t)). Qed.
Lemma lem3524137 {_90715 B : Type'} (_37166 : type627 _90715 B) (u : _90715 -> Prop) (f : _90715 -> B) (t : _90715 -> Prop) (GEN_PVAR_84 : _90715) : (term3837 _90715 B _37166 u f t GEN_PVAR_84) = (term3837 _90715 B _37166 u f t GEN_PVAR_84).
Proof. exact (eq_refl (term3837 _90715 B _37166 u f t GEN_PVAR_84)). Qed.
Lemma lem3524138 {_90715 B : Type'} (_37166 : type627 _90715 B) (GEN_PVAR_84 : _90715) (u : _90715 -> Prop) (f : _90715 -> B) (t : _90715 -> Prop) : (term3838 _90715 B _37166 GEN_PVAR_84 u f t) = (term3838 _90715 B _37166 GEN_PVAR_84 u f t).
Proof. exact (MK_COMB (@lem3524137 _90715 B _37166 u f t GEN_PVAR_84) (@lem3524135 _90715 B GEN_PVAR_84 u f t)). Qed.
Lemma lem3524140 {_90715 B : Type'} (_37166 : type627 _90715 B) (u : _90715 -> Prop) (f : _90715 -> B) (t : _90715 -> Prop) (GEN_PVAR_84 : _90715) : (term3839 _90715 B _37166 u f t GEN_PVAR_84) = (term3839 _90715 B _37166 u f t GEN_PVAR_84).
Proof. exact (eq_refl (term3839 _90715 B _37166 u f t GEN_PVAR_84)). Qed.
Lemma lem3524141 {_90715 B : Type'} (_37166 : type627 _90715 B) (GEN_PVAR_84 : _90715) (u : _90715 -> Prop) (f : _90715 -> B) (t : _90715 -> Prop) : (term3840 _90715 B _37166 GEN_PVAR_84 u f t) = (term3841 _90715 B _37166 GEN_PVAR_84 u f t).
Proof. exact (MK_COMB (@lem3524140 _90715 B _37166 u f t GEN_PVAR_84) (@lem3524132 _90715 B GEN_PVAR_84 u f t)). Qed.
Lemma lem3524142 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem3524143 {_90715 B : Type'} (_37166 : type627 _90715 B) (GEN_PVAR_84 : _90715) (u : _90715 -> Prop) (f : _90715 -> B) (t : _90715 -> Prop) : (term3842 _90715 B _37166 GEN_PVAR_84 u f t) = (term3843 _90715 B _37166 GEN_PVAR_84 u f t).
Proof. exact (MK_COMB (@lem3524142) (@lem3524141 _90715 B _37166 GEN_PVAR_84 u f t)). Qed.
Lemma lem3524144 {_90715 B : Type'} (_37166 : type627 _90715 B) (GEN_PVAR_84 : _90715) (u : _90715 -> Prop) (f : _90715 -> B) (t : _90715 -> Prop) : (term3844 _90715 B _37166 GEN_PVAR_84 u f t) = (term3845 _90715 B _37166 GEN_PVAR_84 u f t).
Proof. exact (MK_COMB (@lem3524143 _90715 B _37166 GEN_PVAR_84 u f t) (@lem3524138 _90715 B _37166 GEN_PVAR_84 u f t)). Qed.
Lemma lem3524145 {_90715 B : Type'} (_37166 : type627 _90715 B) (GEN_PVAR_84 : _90715) (u : _90715 -> Prop) (f : _90715 -> B) (t : _90715 -> Prop) : ((_37166 u f t GEN_PVAR_84) = (term65 _90715 B GEN_PVAR_84 u f t)) = (term3844 _90715 B _37166 GEN_PVAR_84 u f t).
Proof. exact (@lem17784 (_37166 u f t GEN_PVAR_84) (term65 _90715 B GEN_PVAR_84 u f t)). Qed.
Lemma lem3524146 {_90715 B : Type'} (_37166 : type627 _90715 B) (GEN_PVAR_84 : _90715) (u : _90715 -> Prop) (f : _90715 -> B) (t : _90715 -> Prop) : ((_37166 u f t GEN_PVAR_84) = (term65 _90715 B GEN_PVAR_84 u f t)) = (term3845 _90715 B _37166 GEN_PVAR_84 u f t).
Proof. exact (TRANS (@lem3524145 _90715 B _37166 GEN_PVAR_84 u f t) (@lem3524144 _90715 B _37166 GEN_PVAR_84 u f t)). Qed.
Lemma lem3524147 {_90715 B : Type'} (_37166 : type627 _90715 B) (u : _90715 -> Prop) (f : _90715 -> B) (t : _90715 -> Prop) : (term2203 _90715 B _37166 u f t) = (term3846 _90715 B _37166 u f t).
Proof. exact (fun_ext (fun GEN_PVAR_84 : _90715 => @lem3524146 _90715 B _37166 GEN_PVAR_84 u f t)). Qed.
Lemma lem3524148 {_90715 : Type'} : (@all _90715) = (@all _90715).
Proof. exact (eq_refl (@all _90715)). Qed.
Lemma lem3524149 {_90715 B : Type'} (_37166 : type627 _90715 B) (u : _90715 -> Prop) (f : _90715 -> B) (t : _90715 -> Prop) : (term2204 _90715 B _37166 u f t) = (term3847 _90715 B _37166 u f t).
Proof. exact (MK_COMB (@lem3524148 _90715) (@lem3524147 _90715 B _37166 u f t)). Qed.
Lemma lem3524150 {_90715 B : Type'} (_37166 : type627 _90715 B) (u : _90715 -> Prop) (f : _90715 -> B) : (term2205 _90715 B _37166 u f) = (term3848 _90715 B _37166 u f).
Proof. exact (fun_ext (fun t : _90715 -> Prop => @lem3524149 _90715 B _37166 u f t)). Qed.
Lemma lem3524151 {_90715 : Type'} : (@all (_90715 -> Prop)) = (@all (_90715 -> Prop)).
Proof. exact (eq_refl (@all (_90715 -> Prop))). Qed.
Lemma lem3524152 {_90715 B : Type'} (_37166 : type627 _90715 B) (u : _90715 -> Prop) (f : _90715 -> B) : (term2206 _90715 B _37166 u f) = (term3849 _90715 B _37166 u f).
Proof. exact (MK_COMB (@lem3524151 _90715) (@lem3524150 _90715 B _37166 u f)). Qed.
Lemma lem3524153 {_90715 B : Type'} (_37166 : type627 _90715 B) (u : _90715 -> Prop) : (term2207 _90715 B _37166 u) = (term3850 _90715 B _37166 u).
Proof. exact (fun_ext (fun f : _90715 -> B => @lem3524152 _90715 B _37166 u f)). Qed.
Lemma lem3524154 {_90715 B : Type'} : (@all (_90715 -> B)) = (@all (_90715 -> B)).
Proof. exact (eq_refl (@all (_90715 -> B))). Qed.
Lemma lem3524155 {_90715 B : Type'} (_37166 : type627 _90715 B) (u : _90715 -> Prop) : (term2208 _90715 B _37166 u) = (term3851 _90715 B _37166 u).
Proof. exact (MK_COMB (@lem3524154 _90715 B) (@lem3524153 _90715 B _37166 u)). Qed.
Lemma lem3524156 {_90715 B : Type'} (_37166 : type627 _90715 B) : (term2209 _90715 B _37166) = (term3852 _90715 B _37166).
Proof. exact (fun_ext (fun u : _90715 -> Prop => @lem3524155 _90715 B _37166 u)). Qed.
Lemma lem3524157 {_90715 : Type'} : (@all (_90715 -> Prop)) = (@all (_90715 -> Prop)).
Proof. exact (eq_refl (@all (_90715 -> Prop))). Qed.
Lemma lem3524158 {_90715 B : Type'} (_37166 : type627 _90715 B) : (term2210 _90715 B _37166) = (term3853 _90715 B _37166).
Proof. exact (MK_COMB (@lem3524157 _90715) (@lem3524156 _90715 B _37166)). Qed.
Lemma lem3524172 {A : Type'} (P : A -> Prop) (Q : A -> Prop) : (term726 A P Q) = (term725 A P Q).
Proof. exact (EQ_MP (@lem18953 A P Q) (@lem18952 A P Q)). Qed.
Lemma lem3524173 {_90715 : Type'} (P : _90715 -> Prop) (Q : _90715 -> Prop) : (term726 _90715 P Q) = (term725 _90715 P Q).
Proof. exact (@lem3524172 _90715 P Q). Qed.
Lemma lem3524174 {_90715 B : Type'} (_37166 : type627 _90715 B) (u : _90715 -> Prop) (f : _90715 -> B) (t : _90715 -> Prop) : (term3854 _90715 B _37166 u f t) = (term3855 _90715 B _37166 u f t).
Proof. exact (@lem3524173 _90715 (term3856 _90715 B _37166 u f t) (term3857 _90715 B _37166 u f t)). Qed.
Lemma lem3524175 {_90715 B : Type'} (_37166 : type627 _90715 B) (GEN_PVAR_84 : _90715) (u : _90715 -> Prop) (f : _90715 -> B) (t : _90715 -> Prop) : (term3858 _90715 B _37166 u f t GEN_PVAR_84) = (term3841 _90715 B _37166 GEN_PVAR_84 u f t).
Proof. exact (eq_refl (term3858 _90715 B _37166 u f t GEN_PVAR_84)). Qed.
Lemma lem3524176 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem3524177 {_90715 B : Type'} (_37166 : type627 _90715 B) (GEN_PVAR_84 : _90715) (u : _90715 -> Prop) (f : _90715 -> B) (t : _90715 -> Prop) : (term3859 _90715 B _37166 u f t GEN_PVAR_84) = (term3843 _90715 B _37166 GEN_PVAR_84 u f t).
Proof. exact (MK_COMB (@lem3524176) (@lem3524175 _90715 B _37166 GEN_PVAR_84 u f t)). Qed.
Lemma lem3524178 {_90715 B : Type'} (_37166 : type627 _90715 B) (GEN_PVAR_84 : _90715) (u : _90715 -> Prop) (f : _90715 -> B) (t : _90715 -> Prop) : (term3860 _90715 B _37166 u f t GEN_PVAR_84) = (term3838 _90715 B _37166 GEN_PVAR_84 u f t).
Proof. exact (eq_refl (term3860 _90715 B _37166 u f t GEN_PVAR_84)). Qed.
Lemma lem3524179 {_90715 B : Type'} (_37166 : type627 _90715 B) (GEN_PVAR_84 : _90715) (u : _90715 -> Prop) (f : _90715 -> B) (t : _90715 -> Prop) : (term3861 _90715 B _37166 u f t GEN_PVAR_84) = (term3845 _90715 B _37166 GEN_PVAR_84 u f t).
Proof. exact (MK_COMB (@lem3524177 _90715 B _37166 GEN_PVAR_84 u f t) (@lem3524178 _90715 B _37166 GEN_PVAR_84 u f t)). Qed.
Lemma lem3524180 {_90715 B : Type'} (_37166 : type627 _90715 B) (u : _90715 -> Prop) (f : _90715 -> B) (t : _90715 -> Prop) : (term3862 _90715 B _37166 u f t) = (term3846 _90715 B _37166 u f t).
Proof. exact (fun_ext (fun GEN_PVAR_84 : _90715 => @lem3524179 _90715 B _37166 GEN_PVAR_84 u f t)). Qed.
Lemma lem3524181 {_90715 : Type'} : (@all _90715) = (@all _90715).
Proof. exact (eq_refl (@all _90715)). Qed.
Lemma lem3524182 {_90715 B : Type'} (_37166 : type627 _90715 B) (u : _90715 -> Prop) (f : _90715 -> B) (t : _90715 -> Prop) : (term3854 _90715 B _37166 u f t) = (term3847 _90715 B _37166 u f t).
Proof. exact (MK_COMB (@lem3524181 _90715) (@lem3524180 _90715 B _37166 u f t)). Qed.
Lemma lem3524183 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem3524184 {_90715 B : Type'} (_37166 : type627 _90715 B) (u : _90715 -> Prop) (f : _90715 -> B) (t : _90715 -> Prop) : (term3863 _90715 B _37166 u f t) = (term3864 _90715 B _37166 u f t).
Proof. exact (MK_COMB (@lem3524183) (@lem3524182 _90715 B _37166 u f t)). Qed.
Lemma lem3524185 {_90715 B : Type'} (_37166 : type627 _90715 B) (GEN_PVAR_84 : _90715) (u : _90715 -> Prop) (f : _90715 -> B) (t : _90715 -> Prop) : (term3858 _90715 B _37166 u f t GEN_PVAR_84) = (term3841 _90715 B _37166 GEN_PVAR_84 u f t).
Proof. exact (eq_refl (term3858 _90715 B _37166 u f t GEN_PVAR_84)). Qed.
Lemma lem3524186 {_90715 B : Type'} (_37166 : type627 _90715 B) (u : _90715 -> Prop) (f : _90715 -> B) (t : _90715 -> Prop) : (term3865 _90715 B _37166 u f t) = (term3856 _90715 B _37166 u f t).
Proof. exact (fun_ext (fun GEN_PVAR_84 : _90715 => @lem3524185 _90715 B _37166 GEN_PVAR_84 u f t)). Qed.
Lemma lem3524187 {_90715 : Type'} : (@all _90715) = (@all _90715).
Proof. exact (eq_refl (@all _90715)). Qed.
Lemma lem3524188 {_90715 B : Type'} (_37166 : type627 _90715 B) (u : _90715 -> Prop) (f : _90715 -> B) (t : _90715 -> Prop) : (term3866 _90715 B _37166 u f t) = (term3867 _90715 B _37166 u f t).
Proof. exact (MK_COMB (@lem3524187 _90715) (@lem3524186 _90715 B _37166 u f t)). Qed.
Lemma lem3524189 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem3524190 {_90715 B : Type'} (_37166 : type627 _90715 B) (u : _90715 -> Prop) (f : _90715 -> B) (t : _90715 -> Prop) : (term3868 _90715 B _37166 u f t) = (term3869 _90715 B _37166 u f t).
Proof. exact (MK_COMB (@lem3524189) (@lem3524188 _90715 B _37166 u f t)). Qed.
Lemma lem3524191 {_90715 B : Type'} (_37166 : type627 _90715 B) (GEN_PVAR_84 : _90715) (u : _90715 -> Prop) (f : _90715 -> B) (t : _90715 -> Prop) : (term3860 _90715 B _37166 u f t GEN_PVAR_84) = (term3838 _90715 B _37166 GEN_PVAR_84 u f t).
Proof. exact (eq_refl (term3860 _90715 B _37166 u f t GEN_PVAR_84)). Qed.
Lemma lem3524192 {_90715 B : Type'} (_37166 : type627 _90715 B) (u : _90715 -> Prop) (f : _90715 -> B) (t : _90715 -> Prop) : (term3870 _90715 B _37166 u f t) = (term3857 _90715 B _37166 u f t).
Proof. exact (fun_ext (fun GEN_PVAR_84 : _90715 => @lem3524191 _90715 B _37166 GEN_PVAR_84 u f t)). Qed.
Lemma lem3524193 {_90715 : Type'} : (@all _90715) = (@all _90715).
Proof. exact (eq_refl (@all _90715)). Qed.
Lemma lem3524194 {_90715 B : Type'} (_37166 : type627 _90715 B) (u : _90715 -> Prop) (f : _90715 -> B) (t : _90715 -> Prop) : (term3871 _90715 B _37166 u f t) = (term3872 _90715 B _37166 u f t).
Proof. exact (MK_COMB (@lem3524193 _90715) (@lem3524192 _90715 B _37166 u f t)). Qed.
Lemma lem3524195 {_90715 B : Type'} (_37166 : type627 _90715 B) (u : _90715 -> Prop) (f : _90715 -> B) (t : _90715 -> Prop) : (term3855 _90715 B _37166 u f t) = (term3873 _90715 B _37166 u f t).
Proof. exact (MK_COMB (@lem3524190 _90715 B _37166 u f t) (@lem3524194 _90715 B _37166 u f t)). Qed.
Lemma lem3524196 {_90715 B : Type'} (_37166 : type627 _90715 B) (u : _90715 -> Prop) (f : _90715 -> B) (t : _90715 -> Prop) : ((term3854 _90715 B _37166 u f t) = (term3855 _90715 B _37166 u f t)) = ((term3847 _90715 B _37166 u f t) = (term3873 _90715 B _37166 u f t)).
Proof. exact (MK_COMB (@lem3524184 _90715 B _37166 u f t) (@lem3524195 _90715 B _37166 u f t)). Qed.
Lemma lem3524197 {_90715 B : Type'} (_37166 : type627 _90715 B) (u : _90715 -> Prop) (f : _90715 -> B) (t : _90715 -> Prop) : (term3847 _90715 B _37166 u f t) = (term3873 _90715 B _37166 u f t).
Proof. exact (EQ_MP (@lem3524196 _90715 B _37166 u f t) (@lem3524174 _90715 B _37166 u f t)). Qed.
Lemma lem3524302 {_90715 B : Type'} (_37166 : type627 _90715 B) (u : _90715 -> Prop) (f : _90715 -> B) : (term3848 _90715 B _37166 u f) = (term3874 _90715 B _37166 u f).
Proof. exact (fun_ext (fun t : _90715 -> Prop => @lem3524197 _90715 B _37166 u f t)). Qed.
Lemma lem3524303 {_90715 : Type'} : (@all (_90715 -> Prop)) = (@all (_90715 -> Prop)).
Proof. exact (eq_refl (@all (_90715 -> Prop))). Qed.
Lemma lem3524304 {_90715 B : Type'} (_37166 : type627 _90715 B) (u : _90715 -> Prop) (f : _90715 -> B) : (term3849 _90715 B _37166 u f) = (term3875 _90715 B _37166 u f).
Proof. exact (MK_COMB (@lem3524303 _90715) (@lem3524302 _90715 B _37166 u f)). Qed.
Lemma lem3524306 {A : Type'} (P : A -> Prop) (Q : A -> Prop) : (term726 A P Q) = (term725 A P Q).
Proof. exact (EQ_MP (@lem18953 A P Q) (@lem18952 A P Q)). Qed.
Lemma lem3524307 {_90715 : Type'} (P : type686 _90715) (Q : type686 _90715) : (term2898 _90715 P Q) = (term2899 _90715 P Q).
Proof. exact (@lem3524306 (_90715 -> Prop) P Q). Qed.
Lemma lem3524308 {_90715 B : Type'} (_37166 : type627 _90715 B) (u : _90715 -> Prop) (f : _90715 -> B) : (term3876 _90715 B _37166 u f) = (term3877 _90715 B _37166 u f).
Proof. exact (@lem3524307 _90715 (term3878 _90715 B _37166 u f) (term3879 _90715 B _37166 u f)). Qed.
Lemma lem3524309 {_90715 B : Type'} (_37166 : type627 _90715 B) (u : _90715 -> Prop) (f : _90715 -> B) (t : _90715 -> Prop) : (term3880 _90715 B _37166 u f t) = (term3867 _90715 B _37166 u f t).
Proof. exact (eq_refl (term3880 _90715 B _37166 u f t)). Qed.
Lemma lem3524310 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem3524311 {_90715 B : Type'} (_37166 : type627 _90715 B) (u : _90715 -> Prop) (f : _90715 -> B) (t : _90715 -> Prop) : (term3881 _90715 B _37166 u f t) = (term3869 _90715 B _37166 u f t).
Proof. exact (MK_COMB (@lem3524310) (@lem3524309 _90715 B _37166 u f t)). Qed.
Lemma lem3524312 {_90715 B : Type'} (_37166 : type627 _90715 B) (u : _90715 -> Prop) (f : _90715 -> B) (t : _90715 -> Prop) : (term3882 _90715 B _37166 u f t) = (term3872 _90715 B _37166 u f t).
Proof. exact (eq_refl (term3882 _90715 B _37166 u f t)). Qed.
Lemma lem3524313 {_90715 B : Type'} (_37166 : type627 _90715 B) (u : _90715 -> Prop) (f : _90715 -> B) (t : _90715 -> Prop) : (term3883 _90715 B _37166 u f t) = (term3873 _90715 B _37166 u f t).
Proof. exact (MK_COMB (@lem3524311 _90715 B _37166 u f t) (@lem3524312 _90715 B _37166 u f t)). Qed.
Lemma lem3524314 {_90715 B : Type'} (_37166 : type627 _90715 B) (u : _90715 -> Prop) (f : _90715 -> B) : (term3884 _90715 B _37166 u f) = (term3874 _90715 B _37166 u f).
Proof. exact (fun_ext (fun t : _90715 -> Prop => @lem3524313 _90715 B _37166 u f t)). Qed.
Lemma lem3524315 {_90715 : Type'} : (@all (_90715 -> Prop)) = (@all (_90715 -> Prop)).
Proof. exact (eq_refl (@all (_90715 -> Prop))). Qed.
Lemma lem3524316 {_90715 B : Type'} (_37166 : type627 _90715 B) (u : _90715 -> Prop) (f : _90715 -> B) : (term3876 _90715 B _37166 u f) = (term3875 _90715 B _37166 u f).
Proof. exact (MK_COMB (@lem3524315 _90715) (@lem3524314 _90715 B _37166 u f)). Qed.
Lemma lem3524317 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem3524318 {_90715 B : Type'} (_37166 : type627 _90715 B) (u : _90715 -> Prop) (f : _90715 -> B) : (term3885 _90715 B _37166 u f) = (term3886 _90715 B _37166 u f).
Proof. exact (MK_COMB (@lem3524317) (@lem3524316 _90715 B _37166 u f)). Qed.
Lemma lem3524319 {_90715 B : Type'} (_37166 : type627 _90715 B) (u : _90715 -> Prop) (f : _90715 -> B) (t : _90715 -> Prop) : (term3880 _90715 B _37166 u f t) = (term3867 _90715 B _37166 u f t).
Proof. exact (eq_refl (term3880 _90715 B _37166 u f t)). Qed.
Lemma lem3524320 {_90715 B : Type'} (_37166 : type627 _90715 B) (u : _90715 -> Prop) (f : _90715 -> B) : (term3887 _90715 B _37166 u f) = (term3878 _90715 B _37166 u f).
Proof. exact (fun_ext (fun t : _90715 -> Prop => @lem3524319 _90715 B _37166 u f t)). Qed.
Lemma lem3524321 {_90715 : Type'} : (@all (_90715 -> Prop)) = (@all (_90715 -> Prop)).
Proof. exact (eq_refl (@all (_90715 -> Prop))). Qed.
Lemma lem3524322 {_90715 B : Type'} (_37166 : type627 _90715 B) (u : _90715 -> Prop) (f : _90715 -> B) : (term3888 _90715 B _37166 u f) = (term3889 _90715 B _37166 u f).
Proof. exact (MK_COMB (@lem3524321 _90715) (@lem3524320 _90715 B _37166 u f)). Qed.
Lemma lem3524323 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem3524324 {_90715 B : Type'} (_37166 : type627 _90715 B) (u : _90715 -> Prop) (f : _90715 -> B) : (term3890 _90715 B _37166 u f) = (term3891 _90715 B _37166 u f).
Proof. exact (MK_COMB (@lem3524323) (@lem3524322 _90715 B _37166 u f)). Qed.
Lemma lem3524325 {_90715 B : Type'} (_37166 : type627 _90715 B) (u : _90715 -> Prop) (f : _90715 -> B) (t : _90715 -> Prop) : (term3882 _90715 B _37166 u f t) = (term3872 _90715 B _37166 u f t).
Proof. exact (eq_refl (term3882 _90715 B _37166 u f t)). Qed.
Lemma lem3524326 {_90715 B : Type'} (_37166 : type627 _90715 B) (u : _90715 -> Prop) (f : _90715 -> B) : (term3892 _90715 B _37166 u f) = (term3879 _90715 B _37166 u f).
Proof. exact (fun_ext (fun t : _90715 -> Prop => @lem3524325 _90715 B _37166 u f t)). Qed.
Lemma lem3524327 {_90715 : Type'} : (@all (_90715 -> Prop)) = (@all (_90715 -> Prop)).
Proof. exact (eq_refl (@all (_90715 -> Prop))). Qed.
Lemma lem3524328 {_90715 B : Type'} (_37166 : type627 _90715 B) (u : _90715 -> Prop) (f : _90715 -> B) : (term3893 _90715 B _37166 u f) = (term3894 _90715 B _37166 u f).
Proof. exact (MK_COMB (@lem3524327 _90715) (@lem3524326 _90715 B _37166 u f)). Qed.
Lemma lem3524329 {_90715 B : Type'} (_37166 : type627 _90715 B) (u : _90715 -> Prop) (f : _90715 -> B) : (term3877 _90715 B _37166 u f) = (term3895 _90715 B _37166 u f).
Proof. exact (MK_COMB (@lem3524324 _90715 B _37166 u f) (@lem3524328 _90715 B _37166 u f)). Qed.
Lemma lem3524330 {_90715 B : Type'} (_37166 : type627 _90715 B) (u : _90715 -> Prop) (f : _90715 -> B) : ((term3876 _90715 B _37166 u f) = (term3877 _90715 B _37166 u f)) = ((term3875 _90715 B _37166 u f) = (term3895 _90715 B _37166 u f)).
Proof. exact (MK_COMB (@lem3524318 _90715 B _37166 u f) (@lem3524329 _90715 B _37166 u f)). Qed.
Lemma lem3524331 {_90715 B : Type'} (_37166 : type627 _90715 B) (u : _90715 -> Prop) (f : _90715 -> B) : (term3875 _90715 B _37166 u f) = (term3895 _90715 B _37166 u f).
Proof. exact (EQ_MP (@lem3524330 _90715 B _37166 u f) (@lem3524308 _90715 B _37166 u f)). Qed.
Lemma lem3524444 {_90715 B : Type'} (_37166 : type627 _90715 B) (u : _90715 -> Prop) (f : _90715 -> B) : (term3849 _90715 B _37166 u f) = (term3895 _90715 B _37166 u f).
Proof. exact (TRANS (@lem3524304 _90715 B _37166 u f) (@lem3524331 _90715 B _37166 u f)). Qed.
Lemma lem3524445 {_90715 B : Type'} (_37166 : type627 _90715 B) (u : _90715 -> Prop) : (term3850 _90715 B _37166 u) = (term3896 _90715 B _37166 u).
Proof. exact (fun_ext (fun f : _90715 -> B => @lem3524444 _90715 B _37166 u f)). Qed.
Lemma lem3524446 {_90715 B : Type'} : (@all (_90715 -> B)) = (@all (_90715 -> B)).
Proof. exact (eq_refl (@all (_90715 -> B))). Qed.
Lemma lem3524447 {_90715 B : Type'} (_37166 : type627 _90715 B) (u : _90715 -> Prop) : (term3851 _90715 B _37166 u) = (term3897 _90715 B _37166 u).
Proof. exact (MK_COMB (@lem3524446 _90715 B) (@lem3524445 _90715 B _37166 u)). Qed.
Lemma lem3524449 {A : Type'} (P : A -> Prop) (Q : A -> Prop) : (term726 A P Q) = (term725 A P Q).
Proof. exact (EQ_MP (@lem18953 A P Q) (@lem18952 A P Q)). Qed.
Lemma lem3524450 {_90715 B : Type'} (P : type572 _90715 B) (Q : type572 _90715 B) : (term3898 _90715 B P Q) = (term3899 _90715 B P Q).
Proof. exact (@lem3524449 (_90715 -> B) P Q). Qed.
Lemma lem3524451 {_90715 B : Type'} (_37166 : type627 _90715 B) (u : _90715 -> Prop) : (term3900 _90715 B _37166 u) = (term3901 _90715 B _37166 u).
Proof. exact (@lem3524450 _90715 B (term3902 _90715 B _37166 u) (term3903 _90715 B _37166 u)). Qed.
Lemma lem3524452 {_90715 B : Type'} (_37166 : type627 _90715 B) (u : _90715 -> Prop) (f : _90715 -> B) : (term3904 _90715 B _37166 u f) = (term3889 _90715 B _37166 u f).
Proof. exact (eq_refl (term3904 _90715 B _37166 u f)). Qed.
Lemma lem3524453 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem3524454 {_90715 B : Type'} (_37166 : type627 _90715 B) (u : _90715 -> Prop) (f : _90715 -> B) : (term3905 _90715 B _37166 u f) = (term3891 _90715 B _37166 u f).
Proof. exact (MK_COMB (@lem3524453) (@lem3524452 _90715 B _37166 u f)). Qed.
Lemma lem3524455 {_90715 B : Type'} (_37166 : type627 _90715 B) (u : _90715 -> Prop) (f : _90715 -> B) : (term3906 _90715 B _37166 u f) = (term3894 _90715 B _37166 u f).
Proof. exact (eq_refl (term3906 _90715 B _37166 u f)). Qed.
Lemma lem3524456 {_90715 B : Type'} (_37166 : type627 _90715 B) (u : _90715 -> Prop) (f : _90715 -> B) : (term3907 _90715 B _37166 u f) = (term3895 _90715 B _37166 u f).
Proof. exact (MK_COMB (@lem3524454 _90715 B _37166 u f) (@lem3524455 _90715 B _37166 u f)). Qed.
Lemma lem3524457 {_90715 B : Type'} (_37166 : type627 _90715 B) (u : _90715 -> Prop) : (term3908 _90715 B _37166 u) = (term3896 _90715 B _37166 u).
Proof. exact (fun_ext (fun f : _90715 -> B => @lem3524456 _90715 B _37166 u f)). Qed.
Lemma lem3524458 {_90715 B : Type'} : (@all (_90715 -> B)) = (@all (_90715 -> B)).
Proof. exact (eq_refl (@all (_90715 -> B))). Qed.
Lemma lem3524459 {_90715 B : Type'} (_37166 : type627 _90715 B) (u : _90715 -> Prop) : (term3900 _90715 B _37166 u) = (term3897 _90715 B _37166 u).
Proof. exact (MK_COMB (@lem3524458 _90715 B) (@lem3524457 _90715 B _37166 u)). Qed.
Lemma lem3524460 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem3524461 {_90715 B : Type'} (_37166 : type627 _90715 B) (u : _90715 -> Prop) : (term3909 _90715 B _37166 u) = (term3910 _90715 B _37166 u).
Proof. exact (MK_COMB (@lem3524460) (@lem3524459 _90715 B _37166 u)). Qed.
Lemma lem3524462 {_90715 B : Type'} (_37166 : type627 _90715 B) (u : _90715 -> Prop) (f : _90715 -> B) : (term3904 _90715 B _37166 u f) = (term3889 _90715 B _37166 u f).
Proof. exact (eq_refl (term3904 _90715 B _37166 u f)). Qed.
Lemma lem3524463 {_90715 B : Type'} (_37166 : type627 _90715 B) (u : _90715 -> Prop) : (term3911 _90715 B _37166 u) = (term3902 _90715 B _37166 u).
Proof. exact (fun_ext (fun f : _90715 -> B => @lem3524462 _90715 B _37166 u f)). Qed.
Lemma lem3524464 {_90715 B : Type'} : (@all (_90715 -> B)) = (@all (_90715 -> B)).
Proof. exact (eq_refl (@all (_90715 -> B))). Qed.
Lemma lem3524465 {_90715 B : Type'} (_37166 : type627 _90715 B) (u : _90715 -> Prop) : (term3912 _90715 B _37166 u) = (term3913 _90715 B _37166 u).
Proof. exact (MK_COMB (@lem3524464 _90715 B) (@lem3524463 _90715 B _37166 u)). Qed.
Lemma lem3524466 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem3524467 {_90715 B : Type'} (_37166 : type627 _90715 B) (u : _90715 -> Prop) : (term3914 _90715 B _37166 u) = (term3915 _90715 B _37166 u).
Proof. exact (MK_COMB (@lem3524466) (@lem3524465 _90715 B _37166 u)). Qed.
Lemma lem3524468 {_90715 B : Type'} (_37166 : type627 _90715 B) (u : _90715 -> Prop) (f : _90715 -> B) : (term3906 _90715 B _37166 u f) = (term3894 _90715 B _37166 u f).
Proof. exact (eq_refl (term3906 _90715 B _37166 u f)). Qed.
Lemma lem3524469 {_90715 B : Type'} (_37166 : type627 _90715 B) (u : _90715 -> Prop) : (term3916 _90715 B _37166 u) = (term3903 _90715 B _37166 u).
Proof. exact (fun_ext (fun f : _90715 -> B => @lem3524468 _90715 B _37166 u f)). Qed.
Lemma lem3524470 {_90715 B : Type'} : (@all (_90715 -> B)) = (@all (_90715 -> B)).
Proof. exact (eq_refl (@all (_90715 -> B))). Qed.
Lemma lem3524471 {_90715 B : Type'} (_37166 : type627 _90715 B) (u : _90715 -> Prop) : (term3917 _90715 B _37166 u) = (term3918 _90715 B _37166 u).
Proof. exact (MK_COMB (@lem3524470 _90715 B) (@lem3524469 _90715 B _37166 u)). Qed.
Lemma lem3524472 {_90715 B : Type'} (_37166 : type627 _90715 B) (u : _90715 -> Prop) : (term3901 _90715 B _37166 u) = (term3919 _90715 B _37166 u).
Proof. exact (MK_COMB (@lem3524467 _90715 B _37166 u) (@lem3524471 _90715 B _37166 u)). Qed.
Lemma lem3524473 {_90715 B : Type'} (_37166 : type627 _90715 B) (u : _90715 -> Prop) : ((term3900 _90715 B _37166 u) = (term3901 _90715 B _37166 u)) = ((term3897 _90715 B _37166 u) = (term3919 _90715 B _37166 u)).
Proof. exact (MK_COMB (@lem3524461 _90715 B _37166 u) (@lem3524472 _90715 B _37166 u)). Qed.
Lemma lem3524474 {_90715 B : Type'} (_37166 : type627 _90715 B) (u : _90715 -> Prop) : (term3897 _90715 B _37166 u) = (term3919 _90715 B _37166 u).
Proof. exact (EQ_MP (@lem3524473 _90715 B _37166 u) (@lem3524451 _90715 B _37166 u)). Qed.
Lemma lem3524595 {_90715 B : Type'} (_37166 : type627 _90715 B) (u : _90715 -> Prop) : (term3851 _90715 B _37166 u) = (term3919 _90715 B _37166 u).
Proof. exact (TRANS (@lem3524447 _90715 B _37166 u) (@lem3524474 _90715 B _37166 u)). Qed.
Lemma lem3524596 {_90715 B : Type'} (_37166 : type627 _90715 B) : (term3852 _90715 B _37166) = (term3920 _90715 B _37166).
Proof. exact (fun_ext (fun u : _90715 -> Prop => @lem3524595 _90715 B _37166 u)). Qed.
Lemma lem3524597 {_90715 : Type'} : (@all (_90715 -> Prop)) = (@all (_90715 -> Prop)).
Proof. exact (eq_refl (@all (_90715 -> Prop))). Qed.
Lemma lem3524598 {_90715 B : Type'} (_37166 : type627 _90715 B) : (term3853 _90715 B _37166) = (term3921 _90715 B _37166).
Proof. exact (MK_COMB (@lem3524597 _90715) (@lem3524596 _90715 B _37166)). Qed.
Lemma lem3524600 {A : Type'} (P : A -> Prop) (Q : A -> Prop) : (term726 A P Q) = (term725 A P Q).
Proof. exact (EQ_MP (@lem18953 A P Q) (@lem18952 A P Q)). Qed.
Lemma lem3524601 {_90715 : Type'} (P : type686 _90715) (Q : type686 _90715) : (term2898 _90715 P Q) = (term2899 _90715 P Q).
Proof. exact (@lem3524600 (_90715 -> Prop) P Q). Qed.
Lemma lem3524602 {_90715 B : Type'} (_37166 : type627 _90715 B) : (term3922 _90715 B _37166) = (term3923 _90715 B _37166).
Proof. exact (@lem3524601 _90715 (term3924 _90715 B _37166) (term3925 _90715 B _37166)). Qed.
Lemma lem3524603 {_90715 B : Type'} (_37166 : type627 _90715 B) (u : _90715 -> Prop) : (term3926 _90715 B _37166 u) = (term3913 _90715 B _37166 u).
Proof. exact (eq_refl (term3926 _90715 B _37166 u)). Qed.
Lemma lem3524604 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem3524605 {_90715 B : Type'} (_37166 : type627 _90715 B) (u : _90715 -> Prop) : (term3927 _90715 B _37166 u) = (term3915 _90715 B _37166 u).
Proof. exact (MK_COMB (@lem3524604) (@lem3524603 _90715 B _37166 u)). Qed.
Lemma lem3524606 {_90715 B : Type'} (_37166 : type627 _90715 B) (u : _90715 -> Prop) : (term3928 _90715 B _37166 u) = (term3918 _90715 B _37166 u).
Proof. exact (eq_refl (term3928 _90715 B _37166 u)). Qed.
Lemma lem3524607 {_90715 B : Type'} (_37166 : type627 _90715 B) (u : _90715 -> Prop) : (term3929 _90715 B _37166 u) = (term3919 _90715 B _37166 u).
Proof. exact (MK_COMB (@lem3524605 _90715 B _37166 u) (@lem3524606 _90715 B _37166 u)). Qed.
Lemma lem3524608 {_90715 B : Type'} (_37166 : type627 _90715 B) : (term3930 _90715 B _37166) = (term3920 _90715 B _37166).
Proof. exact (fun_ext (fun u : _90715 -> Prop => @lem3524607 _90715 B _37166 u)). Qed.
Lemma lem3524609 {_90715 : Type'} : (@all (_90715 -> Prop)) = (@all (_90715 -> Prop)).
Proof. exact (eq_refl (@all (_90715 -> Prop))). Qed.
Lemma lem3524610 {_90715 B : Type'} (_37166 : type627 _90715 B) : (term3922 _90715 B _37166) = (term3921 _90715 B _37166).
Proof. exact (MK_COMB (@lem3524609 _90715) (@lem3524608 _90715 B _37166)). Qed.
Lemma lem3524611 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem3524612 {_90715 B : Type'} (_37166 : type627 _90715 B) : (term3931 _90715 B _37166) = (term3932 _90715 B _37166).
Proof. exact (MK_COMB (@lem3524611) (@lem3524610 _90715 B _37166)). Qed.
Lemma lem3524613 {_90715 B : Type'} (_37166 : type627 _90715 B) (u : _90715 -> Prop) : (term3926 _90715 B _37166 u) = (term3913 _90715 B _37166 u).
Proof. exact (eq_refl (term3926 _90715 B _37166 u)). Qed.
Lemma lem3524614 {_90715 B : Type'} (_37166 : type627 _90715 B) : (term3933 _90715 B _37166) = (term3924 _90715 B _37166).
Proof. exact (fun_ext (fun u : _90715 -> Prop => @lem3524613 _90715 B _37166 u)). Qed.
Lemma lem3524615 {_90715 : Type'} : (@all (_90715 -> Prop)) = (@all (_90715 -> Prop)).
Proof. exact (eq_refl (@all (_90715 -> Prop))). Qed.
Lemma lem3524616 {_90715 B : Type'} (_37166 : type627 _90715 B) : (term3934 _90715 B _37166) = (term3935 _90715 B _37166).
Proof. exact (MK_COMB (@lem3524615 _90715) (@lem3524614 _90715 B _37166)). Qed.
Lemma lem3524617 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem3524618 {_90715 B : Type'} (_37166 : type627 _90715 B) : (term3936 _90715 B _37166) = (term3937 _90715 B _37166).
Proof. exact (MK_COMB (@lem3524617) (@lem3524616 _90715 B _37166)). Qed.
Lemma lem3524619 {_90715 B : Type'} (_37166 : type627 _90715 B) (u : _90715 -> Prop) : (term3928 _90715 B _37166 u) = (term3918 _90715 B _37166 u).
Proof. exact (eq_refl (term3928 _90715 B _37166 u)). Qed.
Lemma lem3524620 {_90715 B : Type'} (_37166 : type627 _90715 B) : (term3938 _90715 B _37166) = (term3925 _90715 B _37166).
Proof. exact (fun_ext (fun u : _90715 -> Prop => @lem3524619 _90715 B _37166 u)). Qed.
Lemma lem3524621 {_90715 : Type'} : (@all (_90715 -> Prop)) = (@all (_90715 -> Prop)).
Proof. exact (eq_refl (@all (_90715 -> Prop))). Qed.
Lemma lem3524622 {_90715 B : Type'} (_37166 : type627 _90715 B) : (term3939 _90715 B _37166) = (term3940 _90715 B _37166).
Proof. exact (MK_COMB (@lem3524621 _90715) (@lem3524620 _90715 B _37166)). Qed.
Lemma lem3524623 {_90715 B : Type'} (_37166 : type627 _90715 B) : (term3923 _90715 B _37166) = (term3941 _90715 B _37166).
Proof. exact (MK_COMB (@lem3524618 _90715 B _37166) (@lem3524622 _90715 B _37166)). Qed.
Lemma lem3524624 {_90715 B : Type'} (_37166 : type627 _90715 B) : ((term3922 _90715 B _37166) = (term3923 _90715 B _37166)) = ((term3921 _90715 B _37166) = (term3941 _90715 B _37166)).
Proof. exact (MK_COMB (@lem3524612 _90715 B _37166) (@lem3524623 _90715 B _37166)). Qed.
Lemma lem3524625 {_90715 B : Type'} (_37166 : type627 _90715 B) : (term3921 _90715 B _37166) = (term3941 _90715 B _37166).
Proof. exact (EQ_MP (@lem3524624 _90715 B _37166) (@lem3524602 _90715 B _37166)). Qed.
Lemma lem3524754 {_90715 B : Type'} (_37166 : type627 _90715 B) : (term3853 _90715 B _37166) = (term3941 _90715 B _37166).
Proof. exact (TRANS (@lem3524598 _90715 B _37166) (@lem3524625 _90715 B _37166)). Qed.
Lemma lem3524756 {A : Type'} (P : Prop) (Q : A -> Prop) : (term434 A P Q) = (term435 A P Q).
Proof. exact (EQ_MP (@lem18911 A P Q) (@lem18910 A P Q)). Qed.
Lemma lem3524757 {_90715 : Type'} (P : Prop) (Q : _90715 -> Prop) : (term434 _90715 P Q) = (term435 _90715 P Q).
Proof. exact (@lem3524756 _90715 P Q). Qed.
Lemma lem3524758 {_90715 B : Type'} (_37166 : type627 _90715 B) (GEN_PVAR_84 : _90715) (u : _90715 -> Prop) (f : _90715 -> B) (t : _90715 -> Prop) : (term3942 _90715 B _37166 GEN_PVAR_84 u f t) = (term3943 _90715 B _37166 GEN_PVAR_84 u f t).
Proof. exact (@lem3524757 _90715 (term3944 _90715 B _37166 u f t GEN_PVAR_84) (term63 _90715 B GEN_PVAR_84 u f t)). Qed.
Lemma lem3524759 {_90715 B : Type'} (GEN_PVAR_84 : _90715) (u : _90715 -> Prop) (f : _90715 -> B) (t : _90715 -> Prop) (x : _90715) : (term3831 _90715 B GEN_PVAR_84 u f t x) = (term61 _90715 B GEN_PVAR_84 u f t x).
Proof. exact (eq_refl (term3831 _90715 B GEN_PVAR_84 u f t x)). Qed.
Lemma lem3524760 {_90715 B : Type'} (GEN_PVAR_84 : _90715) (u : _90715 -> Prop) (f : _90715 -> B) (t : _90715 -> Prop) : (term3945 _90715 B GEN_PVAR_84 u f t) = (term63 _90715 B GEN_PVAR_84 u f t).
Proof. exact (fun_ext (fun x : _90715 => @lem3524759 _90715 B GEN_PVAR_84 u f t x)). Qed.
Lemma lem3524761 {_90715 : Type'} : (@ex _90715) = (@ex _90715).
Proof. exact (eq_refl (@ex _90715)). Qed.
Lemma lem3524762 {_90715 B : Type'} (GEN_PVAR_84 : _90715) (u : _90715 -> Prop) (f : _90715 -> B) (t : _90715 -> Prop) : (term3946 _90715 B GEN_PVAR_84 u f t) = (term65 _90715 B GEN_PVAR_84 u f t).
Proof. exact (MK_COMB (@lem3524761 _90715) (@lem3524760 _90715 B GEN_PVAR_84 u f t)). Qed.
Lemma lem3524763 {_90715 B : Type'} (_37166 : type627 _90715 B) (u : _90715 -> Prop) (f : _90715 -> B) (t : _90715 -> Prop) (GEN_PVAR_84 : _90715) : (term3837 _90715 B _37166 u f t GEN_PVAR_84) = (term3837 _90715 B _37166 u f t GEN_PVAR_84).
Proof. exact (eq_refl (term3837 _90715 B _37166 u f t GEN_PVAR_84)). Qed.
Lemma lem3524764 {_90715 B : Type'} (_37166 : type627 _90715 B) (GEN_PVAR_84 : _90715) (u : _90715 -> Prop) (f : _90715 -> B) (t : _90715 -> Prop) : (term3942 _90715 B _37166 GEN_PVAR_84 u f t) = (term3838 _90715 B _37166 GEN_PVAR_84 u f t).
Proof. exact (MK_COMB (@lem3524763 _90715 B _37166 u f t GEN_PVAR_84) (@lem3524762 _90715 B GEN_PVAR_84 u f t)). Qed.
Lemma lem3524765 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem3524766 {_90715 B : Type'} (_37166 : type627 _90715 B) (GEN_PVAR_84 : _90715) (u : _90715 -> Prop) (f : _90715 -> B) (t : _90715 -> Prop) : (term3947 _90715 B _37166 GEN_PVAR_84 u f t) = (term3948 _90715 B _37166 GEN_PVAR_84 u f t).
Proof. exact (MK_COMB (@lem3524765) (@lem3524764 _90715 B _37166 GEN_PVAR_84 u f t)). Qed.
Lemma lem3524767 {_90715 B : Type'} (GEN_PVAR_84 : _90715) (u : _90715 -> Prop) (f : _90715 -> B) (t : _90715 -> Prop) (x : _90715) : (term3831 _90715 B GEN_PVAR_84 u f t x) = (term61 _90715 B GEN_PVAR_84 u f t x).
Proof. exact (eq_refl (term3831 _90715 B GEN_PVAR_84 u f t x)). Qed.
Lemma lem3524768 {_90715 B : Type'} (_37166 : type627 _90715 B) (u : _90715 -> Prop) (f : _90715 -> B) (t : _90715 -> Prop) (GEN_PVAR_84 : _90715) : (term3837 _90715 B _37166 u f t GEN_PVAR_84) = (term3837 _90715 B _37166 u f t GEN_PVAR_84).
Proof. exact (eq_refl (term3837 _90715 B _37166 u f t GEN_PVAR_84)). Qed.
Lemma lem3524769 {_90715 B : Type'} (_37166 : type627 _90715 B) (GEN_PVAR_84 : _90715) (u : _90715 -> Prop) (f : _90715 -> B) (t : _90715 -> Prop) (x : _90715) : (term3949 _90715 B _37166 GEN_PVAR_84 u f t x) = (term3950 _90715 B _37166 GEN_PVAR_84 u f t x).
Proof. exact (MK_COMB (@lem3524768 _90715 B _37166 u f t GEN_PVAR_84) (@lem3524767 _90715 B GEN_PVAR_84 u f t x)). Qed.
Lemma lem3524770 {_90715 B : Type'} (_37166 : type627 _90715 B) (GEN_PVAR_84 : _90715) (u : _90715 -> Prop) (f : _90715 -> B) (t : _90715 -> Prop) : (term3951 _90715 B _37166 GEN_PVAR_84 u f t) = (term3952 _90715 B _37166 GEN_PVAR_84 u f t).
Proof. exact (fun_ext (fun x : _90715 => @lem3524769 _90715 B _37166 GEN_PVAR_84 u f t x)). Qed.
Lemma lem3524771 {_90715 : Type'} : (@ex _90715) = (@ex _90715).
Proof. exact (eq_refl (@ex _90715)). Qed.
Lemma lem3524772 {_90715 B : Type'} (_37166 : type627 _90715 B) (GEN_PVAR_84 : _90715) (u : _90715 -> Prop) (f : _90715 -> B) (t : _90715 -> Prop) : (term3943 _90715 B _37166 GEN_PVAR_84 u f t) = (term3953 _90715 B _37166 GEN_PVAR_84 u f t).
Proof. exact (MK_COMB (@lem3524771 _90715) (@lem3524770 _90715 B _37166 GEN_PVAR_84 u f t)). Qed.
Lemma lem3524773 {_90715 B : Type'} (_37166 : type627 _90715 B) (GEN_PVAR_84 : _90715) (u : _90715 -> Prop) (f : _90715 -> B) (t : _90715 -> Prop) : ((term3942 _90715 B _37166 GEN_PVAR_84 u f t) = (term3943 _90715 B _37166 GEN_PVAR_84 u f t)) = ((term3838 _90715 B _37166 GEN_PVAR_84 u f t) = (term3953 _90715 B _37166 GEN_PVAR_84 u f t)).
Proof. exact (MK_COMB (@lem3524766 _90715 B _37166 GEN_PVAR_84 u f t) (@lem3524772 _90715 B _37166 GEN_PVAR_84 u f t)). Qed.
Lemma lem3524774 {_90715 B : Type'} (_37166 : type627 _90715 B) (GEN_PVAR_84 : _90715) (u : _90715 -> Prop) (f : _90715 -> B) (t : _90715 -> Prop) : (term3838 _90715 B _37166 GEN_PVAR_84 u f t) = (term3953 _90715 B _37166 GEN_PVAR_84 u f t).
Proof. exact (EQ_MP (@lem3524773 _90715 B _37166 GEN_PVAR_84 u f t) (@lem3524758 _90715 B _37166 GEN_PVAR_84 u f t)). Qed.
Lemma lem3524775 {_90715 B : Type'} (_37166 : type627 _90715 B) (u : _90715 -> Prop) (f : _90715 -> B) (t : _90715 -> Prop) : (term3857 _90715 B _37166 u f t) = (term3954 _90715 B _37166 u f t).
Proof. exact (fun_ext (fun GEN_PVAR_84 : _90715 => @lem3524774 _90715 B _37166 GEN_PVAR_84 u f t)). Qed.
Lemma lem3524776 {_90715 : Type'} : (@all _90715) = (@all _90715).
Proof. exact (eq_refl (@all _90715)). Qed.
Lemma lem3524777 {_90715 B : Type'} (_37166 : type627 _90715 B) (u : _90715 -> Prop) (f : _90715 -> B) (t : _90715 -> Prop) : (term3872 _90715 B _37166 u f t) = (term3955 _90715 B _37166 u f t).
Proof. exact (MK_COMB (@lem3524776 _90715) (@lem3524775 _90715 B _37166 u f t)). Qed.
Lemma lem3524779 {A B : Type'} (P : type1413 A B) : (term453 A B P) = (term454 A B P).
Proof. exact (EQ_MP (@lem18899 A B P) (@lem18898 A B P)). Qed.
Lemma lem3524780 {_90715 : Type'} (P : type1402 _90715) : (term3480 _90715 P) = (term3481 _90715 P).
Proof. exact (@lem3524779 _90715 _90715 P). Qed.
Lemma lem3524781 {_90715 B : Type'} (_37166 : type627 _90715 B) (u : _90715 -> Prop) (f : _90715 -> B) (t : _90715 -> Prop) : (term3956 _90715 B _37166 u f t) = (term3957 _90715 B _37166 u f t).
Proof. exact (@lem3524780 _90715 (term3958 _90715 B _37166 u f t)). Qed.
Lemma lem3524782 {_90715 B : Type'} (_37166 : type627 _90715 B) (GEN_PVAR_84 : _90715) (u : _90715 -> Prop) (f : _90715 -> B) (t : _90715 -> Prop) : (term3959 _90715 B _37166 u f t GEN_PVAR_84) = (term3952 _90715 B _37166 GEN_PVAR_84 u f t).
Proof. exact (eq_refl (term3959 _90715 B _37166 u f t GEN_PVAR_84)). Qed.
Lemma lem3524783 {_90715 : Type'} (x : _90715) : x = x.
Proof. exact (eq_refl x). Qed.
Lemma lem3524784 {_90715 B : Type'} (_37166 : type627 _90715 B) (GEN_PVAR_84 : _90715) (u : _90715 -> Prop) (f : _90715 -> B) (t : _90715 -> Prop) (x : _90715) : (term3960 _90715 B _37166 u f t GEN_PVAR_84 x) = (term3961 _90715 B _37166 GEN_PVAR_84 u f t x).
Proof. exact (MK_COMB (@lem3524782 _90715 B _37166 GEN_PVAR_84 u f t) (@lem3524783 _90715 x)). Qed.
Lemma lem3524785 {_90715 B : Type'} (_37166 : type627 _90715 B) (GEN_PVAR_84 : _90715) (u : _90715 -> Prop) (f : _90715 -> B) (t : _90715 -> Prop) (x : _90715) : (term3961 _90715 B _37166 GEN_PVAR_84 u f t x) = (term3950 _90715 B _37166 GEN_PVAR_84 u f t x).
Proof. exact (eq_refl (term3961 _90715 B _37166 GEN_PVAR_84 u f t x)). Qed.
Lemma lem3524786 {_90715 B : Type'} (_37166 : type627 _90715 B) (GEN_PVAR_84 : _90715) (u : _90715 -> Prop) (f : _90715 -> B) (t : _90715 -> Prop) (x : _90715) : (term3960 _90715 B _37166 u f t GEN_PVAR_84 x) = (term3950 _90715 B _37166 GEN_PVAR_84 u f t x).
Proof. exact (TRANS (@lem3524784 _90715 B _37166 GEN_PVAR_84 u f t x) (@lem3524785 _90715 B _37166 GEN_PVAR_84 u f t x)). Qed.
Lemma lem3524787 {_90715 B : Type'} (_37166 : type627 _90715 B) (GEN_PVAR_84 : _90715) (u : _90715 -> Prop) (f : _90715 -> B) (t : _90715 -> Prop) : (term3962 _90715 B _37166 u f t GEN_PVAR_84) = (term3952 _90715 B _37166 GEN_PVAR_84 u f t).
Proof. exact (fun_ext (fun x : _90715 => @lem3524786 _90715 B _37166 GEN_PVAR_84 u f t x)). Qed.
Lemma lem3524788 {_90715 : Type'} : (@ex _90715) = (@ex _90715).
Proof. exact (eq_refl (@ex _90715)). Qed.
Lemma lem3524789 {_90715 B : Type'} (_37166 : type627 _90715 B) (GEN_PVAR_84 : _90715) (u : _90715 -> Prop) (f : _90715 -> B) (t : _90715 -> Prop) : (term3963 _90715 B _37166 u f t GEN_PVAR_84) = (term3953 _90715 B _37166 GEN_PVAR_84 u f t).
Proof. exact (MK_COMB (@lem3524788 _90715) (@lem3524787 _90715 B _37166 GEN_PVAR_84 u f t)). Qed.
Lemma lem3524790 {_90715 B : Type'} (_37166 : type627 _90715 B) (u : _90715 -> Prop) (f : _90715 -> B) (t : _90715 -> Prop) : (term3964 _90715 B _37166 u f t) = (term3954 _90715 B _37166 u f t).
Proof. exact (fun_ext (fun GEN_PVAR_84 : _90715 => @lem3524789 _90715 B _37166 GEN_PVAR_84 u f t)). Qed.
Lemma lem3524791 {_90715 : Type'} : (@all _90715) = (@all _90715).
Proof. exact (eq_refl (@all _90715)). Qed.
Lemma lem3524792 {_90715 B : Type'} (_37166 : type627 _90715 B) (u : _90715 -> Prop) (f : _90715 -> B) (t : _90715 -> Prop) : (term3956 _90715 B _37166 u f t) = (term3955 _90715 B _37166 u f t).
Proof. exact (MK_COMB (@lem3524791 _90715) (@lem3524790 _90715 B _37166 u f t)). Qed.
Lemma lem3524793 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem3524794 {_90715 B : Type'} (_37166 : type627 _90715 B) (u : _90715 -> Prop) (f : _90715 -> B) (t : _90715 -> Prop) : (term3965 _90715 B _37166 u f t) = (term3966 _90715 B _37166 u f t).
Proof. exact (MK_COMB (@lem3524793) (@lem3524792 _90715 B _37166 u f t)). Qed.
Lemma lem3524795 {_90715 B : Type'} (_37166 : type627 _90715 B) (GEN_PVAR_84 : _90715) (u : _90715 -> Prop) (f : _90715 -> B) (t : _90715 -> Prop) : (term3959 _90715 B _37166 u f t GEN_PVAR_84) = (term3952 _90715 B _37166 GEN_PVAR_84 u f t).
Proof. exact (eq_refl (term3959 _90715 B _37166 u f t GEN_PVAR_84)). Qed.
Lemma lem3524796 {_90715 : Type'} (x : _90715 -> _90715) (GEN_PVAR_84 : _90715) : (x GEN_PVAR_84) = (x GEN_PVAR_84).
Proof. exact (eq_refl (x GEN_PVAR_84)). Qed.
Lemma lem3524797 {_90715 B : Type'} (_37166 : type627 _90715 B) (u : _90715 -> Prop) (f : _90715 -> B) (t : _90715 -> Prop) (x : _90715 -> _90715) (GEN_PVAR_84 : _90715) : (term3967 _90715 B _37166 u f t x GEN_PVAR_84) = (term3968 _90715 B _37166 u f t x GEN_PVAR_84).
Proof. exact (MK_COMB (@lem3524795 _90715 B _37166 GEN_PVAR_84 u f t) (@lem3524796 _90715 x GEN_PVAR_84)). Qed.
Lemma lem3524798 {_90715 B : Type'} (_37166 : type627 _90715 B) (u : _90715 -> Prop) (f : _90715 -> B) (t : _90715 -> Prop) (x : _90715 -> _90715) (GEN_PVAR_84 : _90715) : (term3968 _90715 B _37166 u f t x GEN_PVAR_84) = (term3969 _90715 B _37166 u f t x GEN_PVAR_84).
Proof. exact (eq_refl (term3968 _90715 B _37166 u f t x GEN_PVAR_84)). Qed.
Lemma lem3524799 {_90715 B : Type'} (_37166 : type627 _90715 B) (u : _90715 -> Prop) (f : _90715 -> B) (t : _90715 -> Prop) (x : _90715 -> _90715) (GEN_PVAR_84 : _90715) : (term3967 _90715 B _37166 u f t x GEN_PVAR_84) = (term3969 _90715 B _37166 u f t x GEN_PVAR_84).
Proof. exact (TRANS (@lem3524797 _90715 B _37166 u f t x GEN_PVAR_84) (@lem3524798 _90715 B _37166 u f t x GEN_PVAR_84)). Qed.
Lemma lem3524800 {_90715 B : Type'} (_37166 : type627 _90715 B) (u : _90715 -> Prop) (f : _90715 -> B) (t : _90715 -> Prop) (x : _90715 -> _90715) : (term3970 _90715 B _37166 u f t x) = (term3971 _90715 B _37166 u f t x).
Proof. exact (fun_ext (fun GEN_PVAR_84 : _90715 => @lem3524799 _90715 B _37166 u f t x GEN_PVAR_84)). Qed.
Lemma lem3524801 {_90715 : Type'} : (@all _90715) = (@all _90715).
Proof. exact (eq_refl (@all _90715)). Qed.
Lemma lem3524802 {_90715 B : Type'} (_37166 : type627 _90715 B) (u : _90715 -> Prop) (f : _90715 -> B) (t : _90715 -> Prop) (x : _90715 -> _90715) : (term3972 _90715 B _37166 u f t x) = (term3973 _90715 B _37166 u f t x).
Proof. exact (MK_COMB (@lem3524801 _90715) (@lem3524800 _90715 B _37166 u f t x)). Qed.
Lemma lem3524803 {_90715 B : Type'} (_37166 : type627 _90715 B) (u : _90715 -> Prop) (f : _90715 -> B) (t : _90715 -> Prop) : (term3974 _90715 B _37166 u f t) = (term3975 _90715 B _37166 u f t).
Proof. exact (fun_ext (fun x : _90715 -> _90715 => @lem3524802 _90715 B _37166 u f t x)). Qed.
Lemma lem3524804 {_90715 : Type'} : (@ex (_90715 -> _90715)) = (@ex (_90715 -> _90715)).
Proof. exact (eq_refl (@ex (_90715 -> _90715))). Qed.
Lemma lem3524805 {_90715 B : Type'} (_37166 : type627 _90715 B) (u : _90715 -> Prop) (f : _90715 -> B) (t : _90715 -> Prop) : (term3957 _90715 B _37166 u f t) = (term3976 _90715 B _37166 u f t).
Proof. exact (MK_COMB (@lem3524804 _90715) (@lem3524803 _90715 B _37166 u f t)). Qed.
Lemma lem3524806 {_90715 B : Type'} (_37166 : type627 _90715 B) (u : _90715 -> Prop) (f : _90715 -> B) (t : _90715 -> Prop) : ((term3956 _90715 B _37166 u f t) = (term3957 _90715 B _37166 u f t)) = ((term3955 _90715 B _37166 u f t) = (term3976 _90715 B _37166 u f t)).
Proof. exact (MK_COMB (@lem3524794 _90715 B _37166 u f t) (@lem3524805 _90715 B _37166 u f t)). Qed.
Lemma lem3524807 {_90715 B : Type'} (_37166 : type627 _90715 B) (u : _90715 -> Prop) (f : _90715 -> B) (t : _90715 -> Prop) : (term3955 _90715 B _37166 u f t) = (term3976 _90715 B _37166 u f t).
Proof. exact (EQ_MP (@lem3524806 _90715 B _37166 u f t) (@lem3524781 _90715 B _37166 u f t)). Qed.
Lemma lem3524808 {_90715 B : Type'} (_37166 : type627 _90715 B) (u : _90715 -> Prop) (f : _90715 -> B) (t : _90715 -> Prop) : (term3872 _90715 B _37166 u f t) = (term3976 _90715 B _37166 u f t).
Proof. exact (TRANS (@lem3524777 _90715 B _37166 u f t) (@lem3524807 _90715 B _37166 u f t)). Qed.
Lemma lem3524809 {_90715 B : Type'} (_37166 : type627 _90715 B) (u : _90715 -> Prop) (f : _90715 -> B) : (term3879 _90715 B _37166 u f) = (term3977 _90715 B _37166 u f).
Proof. exact (fun_ext (fun t : _90715 -> Prop => @lem3524808 _90715 B _37166 u f t)). Qed.
Lemma lem3524810 {_90715 : Type'} : (@all (_90715 -> Prop)) = (@all (_90715 -> Prop)).
Proof. exact (eq_refl (@all (_90715 -> Prop))). Qed.
Lemma lem3524811 {_90715 B : Type'} (_37166 : type627 _90715 B) (u : _90715 -> Prop) (f : _90715 -> B) : (term3894 _90715 B _37166 u f) = (term3978 _90715 B _37166 u f).
Proof. exact (MK_COMB (@lem3524810 _90715) (@lem3524809 _90715 B _37166 u f)). Qed.
Lemma lem3524813 {A B : Type'} (P : type1413 A B) : (term453 A B P) = (term454 A B P).
Proof. exact (EQ_MP (@lem18899 A B P) (@lem18898 A B P)). Qed.
Lemma lem3524814 {_90715 : Type'} (P : type624 _90715) : (term3505 _90715 P) = (term3506 _90715 P).
Proof. exact (@lem3524813 (_90715 -> Prop) (_90715 -> _90715) P). Qed.
Lemma lem3524815 {_90715 B : Type'} (_37166 : type627 _90715 B) (u : _90715 -> Prop) (f : _90715 -> B) : (term3979 _90715 B _37166 u f) = (term3980 _90715 B _37166 u f).
Proof. exact (@lem3524814 _90715 (term3981 _90715 B _37166 u f)). Qed.
Lemma lem3524816 {_90715 B : Type'} (_37166 : type627 _90715 B) (u : _90715 -> Prop) (f : _90715 -> B) (t : _90715 -> Prop) : (term3982 _90715 B _37166 u f t) = (term3975 _90715 B _37166 u f t).
Proof. exact (eq_refl (term3982 _90715 B _37166 u f t)). Qed.
Lemma lem3524817 {_90715 : Type'} (x : _90715 -> _90715) : x = x.
Proof. exact (eq_refl x). Qed.
Lemma lem3524818 {_90715 B : Type'} (_37166 : type627 _90715 B) (u : _90715 -> Prop) (f : _90715 -> B) (t : _90715 -> Prop) (x : _90715 -> _90715) : (term3983 _90715 B _37166 u f t x) = (term3984 _90715 B _37166 u f t x).
Proof. exact (MK_COMB (@lem3524816 _90715 B _37166 u f t) (@lem3524817 _90715 x)). Qed.
Lemma lem3524819 {_90715 B : Type'} (_37166 : type627 _90715 B) (u : _90715 -> Prop) (f : _90715 -> B) (t : _90715 -> Prop) (x : _90715 -> _90715) : (term3984 _90715 B _37166 u f t x) = (term3973 _90715 B _37166 u f t x).
Proof. exact (eq_refl (term3984 _90715 B _37166 u f t x)). Qed.
Lemma lem3524820 {_90715 B : Type'} (_37166 : type627 _90715 B) (u : _90715 -> Prop) (f : _90715 -> B) (t : _90715 -> Prop) (x : _90715 -> _90715) : (term3983 _90715 B _37166 u f t x) = (term3973 _90715 B _37166 u f t x).
Proof. exact (TRANS (@lem3524818 _90715 B _37166 u f t x) (@lem3524819 _90715 B _37166 u f t x)). Qed.
Lemma lem3524821 {_90715 B : Type'} (_37166 : type627 _90715 B) (u : _90715 -> Prop) (f : _90715 -> B) (t : _90715 -> Prop) : (term3985 _90715 B _37166 u f t) = (term3975 _90715 B _37166 u f t).
Proof. exact (fun_ext (fun x : _90715 -> _90715 => @lem3524820 _90715 B _37166 u f t x)). Qed.
Lemma lem3524822 {_90715 : Type'} : (@ex (_90715 -> _90715)) = (@ex (_90715 -> _90715)).
Proof. exact (eq_refl (@ex (_90715 -> _90715))). Qed.
Lemma lem3524823 {_90715 B : Type'} (_37166 : type627 _90715 B) (u : _90715 -> Prop) (f : _90715 -> B) (t : _90715 -> Prop) : (term3986 _90715 B _37166 u f t) = (term3976 _90715 B _37166 u f t).
Proof. exact (MK_COMB (@lem3524822 _90715) (@lem3524821 _90715 B _37166 u f t)). Qed.
Lemma lem3524824 {_90715 B : Type'} (_37166 : type627 _90715 B) (u : _90715 -> Prop) (f : _90715 -> B) : (term3987 _90715 B _37166 u f) = (term3977 _90715 B _37166 u f).
Proof. exact (fun_ext (fun t : _90715 -> Prop => @lem3524823 _90715 B _37166 u f t)). Qed.
Lemma lem3524825 {_90715 : Type'} : (@all (_90715 -> Prop)) = (@all (_90715 -> Prop)).
Proof. exact (eq_refl (@all (_90715 -> Prop))). Qed.
Lemma lem3524826 {_90715 B : Type'} (_37166 : type627 _90715 B) (u : _90715 -> Prop) (f : _90715 -> B) : (term3979 _90715 B _37166 u f) = (term3978 _90715 B _37166 u f).
Proof. exact (MK_COMB (@lem3524825 _90715) (@lem3524824 _90715 B _37166 u f)). Qed.
Lemma lem3524827 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem3524828 {_90715 B : Type'} (_37166 : type627 _90715 B) (u : _90715 -> Prop) (f : _90715 -> B) : (term3988 _90715 B _37166 u f) = (term3989 _90715 B _37166 u f).
Proof. exact (MK_COMB (@lem3524827) (@lem3524826 _90715 B _37166 u f)). Qed.
Lemma lem3524829 {_90715 B : Type'} (_37166 : type627 _90715 B) (u : _90715 -> Prop) (f : _90715 -> B) (t : _90715 -> Prop) : (term3982 _90715 B _37166 u f t) = (term3975 _90715 B _37166 u f t).
Proof. exact (eq_refl (term3982 _90715 B _37166 u f t)). Qed.
Lemma lem3524830 {_90715 : Type'} (x : type670 _90715) (t : _90715 -> Prop) : (x t) = (x t).
Proof. exact (eq_refl (x t)). Qed.
Lemma lem3524831 {_90715 B : Type'} (_37166 : type627 _90715 B) (u : _90715 -> Prop) (f : _90715 -> B) (x : type670 _90715) (t : _90715 -> Prop) : (term3990 _90715 B _37166 u f x t) = (term3991 _90715 B _37166 u f x t).
Proof. exact (MK_COMB (@lem3524829 _90715 B _37166 u f t) (@lem3524830 _90715 x t)). Qed.
Lemma lem3524832 {_90715 B : Type'} (_37166 : type627 _90715 B) (u : _90715 -> Prop) (f : _90715 -> B) (x : type670 _90715) (t : _90715 -> Prop) : (term3991 _90715 B _37166 u f x t) = (term3992 _90715 B _37166 u f x t).
Proof. exact (eq_refl (term3991 _90715 B _37166 u f x t)). Qed.
Lemma lem3524833 {_90715 B : Type'} (_37166 : type627 _90715 B) (u : _90715 -> Prop) (f : _90715 -> B) (x : type670 _90715) (t : _90715 -> Prop) : (term3990 _90715 B _37166 u f x t) = (term3992 _90715 B _37166 u f x t).
Proof. exact (TRANS (@lem3524831 _90715 B _37166 u f x t) (@lem3524832 _90715 B _37166 u f x t)). Qed.
Lemma lem3524834 {_90715 B : Type'} (_37166 : type627 _90715 B) (u : _90715 -> Prop) (f : _90715 -> B) (x : type670 _90715) : (term3993 _90715 B _37166 u f x) = (term3994 _90715 B _37166 u f x).
Proof. exact (fun_ext (fun t : _90715 -> Prop => @lem3524833 _90715 B _37166 u f x t)). Qed.
Lemma lem3524835 {_90715 : Type'} : (@all (_90715 -> Prop)) = (@all (_90715 -> Prop)).
Proof. exact (eq_refl (@all (_90715 -> Prop))). Qed.
Lemma lem3524836 {_90715 B : Type'} (_37166 : type627 _90715 B) (u : _90715 -> Prop) (f : _90715 -> B) (x : type670 _90715) : (term3995 _90715 B _37166 u f x) = (term3996 _90715 B _37166 u f x).
Proof. exact (MK_COMB (@lem3524835 _90715) (@lem3524834 _90715 B _37166 u f x)). Qed.
Lemma lem3524837 {_90715 B : Type'} (_37166 : type627 _90715 B) (u : _90715 -> Prop) (f : _90715 -> B) : (term3997 _90715 B _37166 u f) = (term3998 _90715 B _37166 u f).
Proof. exact (fun_ext (fun x : type670 _90715 => @lem3524836 _90715 B _37166 u f x)). Qed.
Lemma lem3524838 {_90715 : Type'} : (@ex ((_90715 -> Prop) -> _90715 -> _90715)) = (@ex ((_90715 -> Prop) -> _90715 -> _90715)).
Proof. exact (eq_refl (@ex ((_90715 -> Prop) -> _90715 -> _90715))). Qed.
Lemma lem3524839 {_90715 B : Type'} (_37166 : type627 _90715 B) (u : _90715 -> Prop) (f : _90715 -> B) : (term3980 _90715 B _37166 u f) = (term3999 _90715 B _37166 u f).
Proof. exact (MK_COMB (@lem3524838 _90715) (@lem3524837 _90715 B _37166 u f)). Qed.
Lemma lem3524840 {_90715 B : Type'} (_37166 : type627 _90715 B) (u : _90715 -> Prop) (f : _90715 -> B) : ((term3979 _90715 B _37166 u f) = (term3980 _90715 B _37166 u f)) = ((term3978 _90715 B _37166 u f) = (term3999 _90715 B _37166 u f)).
Proof. exact (MK_COMB (@lem3524828 _90715 B _37166 u f) (@lem3524839 _90715 B _37166 u f)). Qed.
Lemma lem3524841 {_90715 B : Type'} (_37166 : type627 _90715 B) (u : _90715 -> Prop) (f : _90715 -> B) : (term3978 _90715 B _37166 u f) = (term3999 _90715 B _37166 u f).
Proof. exact (EQ_MP (@lem3524840 _90715 B _37166 u f) (@lem3524815 _90715 B _37166 u f)). Qed.
Lemma lem3524842 {_90715 B : Type'} (_37166 : type627 _90715 B) (u : _90715 -> Prop) (f : _90715 -> B) : (term3894 _90715 B _37166 u f) = (term3999 _90715 B _37166 u f).
Proof. exact (TRANS (@lem3524811 _90715 B _37166 u f) (@lem3524841 _90715 B _37166 u f)). Qed.
Lemma lem3524843 {_90715 B : Type'} (_37166 : type627 _90715 B) (u : _90715 -> Prop) : (term3903 _90715 B _37166 u) = (term4000 _90715 B _37166 u).
Proof. exact (fun_ext (fun f : _90715 -> B => @lem3524842 _90715 B _37166 u f)). Qed.
Lemma lem3524844 {_90715 B : Type'} : (@all (_90715 -> B)) = (@all (_90715 -> B)).
Proof. exact (eq_refl (@all (_90715 -> B))). Qed.
Lemma lem3524845 {_90715 B : Type'} (_37166 : type627 _90715 B) (u : _90715 -> Prop) : (term3918 _90715 B _37166 u) = (term4001 _90715 B _37166 u).
Proof. exact (MK_COMB (@lem3524844 _90715 B) (@lem3524843 _90715 B _37166 u)). Qed.
Lemma lem3524847 {A B : Type'} (P : type1413 A B) : (term453 A B P) = (term454 A B P).
Proof. exact (EQ_MP (@lem18899 A B P) (@lem18898 A B P)). Qed.
Lemma lem3524848 {_90715 B : Type'} (P : type502 _90715 B) : (term4002 _90715 B P) = (term4003 _90715 B P).
Proof. exact (@lem3524847 (_90715 -> B) (type670 _90715) P). Qed.
Lemma lem3524849 {_90715 B : Type'} (_37166 : type627 _90715 B) (u : _90715 -> Prop) : (term4004 _90715 B _37166 u) = (term4005 _90715 B _37166 u).
Proof. exact (@lem3524848 _90715 B (term4006 _90715 B _37166 u)). Qed.
Lemma lem3524850 {_90715 B : Type'} (_37166 : type627 _90715 B) (u : _90715 -> Prop) (f : _90715 -> B) : (term4007 _90715 B _37166 u f) = (term3998 _90715 B _37166 u f).
Proof. exact (eq_refl (term4007 _90715 B _37166 u f)). Qed.
Lemma lem3524851 {_90715 : Type'} (x : type670 _90715) : x = x.
Proof. exact (eq_refl x). Qed.
Lemma lem3524852 {_90715 B : Type'} (_37166 : type627 _90715 B) (u : _90715 -> Prop) (f : _90715 -> B) (x : type670 _90715) : (term4008 _90715 B _37166 u f x) = (term4009 _90715 B _37166 u f x).
Proof. exact (MK_COMB (@lem3524850 _90715 B _37166 u f) (@lem3524851 _90715 x)). Qed.
Lemma lem3524853 {_90715 B : Type'} (_37166 : type627 _90715 B) (u : _90715 -> Prop) (f : _90715 -> B) (x : type670 _90715) : (term4009 _90715 B _37166 u f x) = (term3996 _90715 B _37166 u f x).
Proof. exact (eq_refl (term4009 _90715 B _37166 u f x)). Qed.
Lemma lem3524854 {_90715 B : Type'} (_37166 : type627 _90715 B) (u : _90715 -> Prop) (f : _90715 -> B) (x : type670 _90715) : (term4008 _90715 B _37166 u f x) = (term3996 _90715 B _37166 u f x).
Proof. exact (TRANS (@lem3524852 _90715 B _37166 u f x) (@lem3524853 _90715 B _37166 u f x)). Qed.
Lemma lem3524855 {_90715 B : Type'} (_37166 : type627 _90715 B) (u : _90715 -> Prop) (f : _90715 -> B) : (term4010 _90715 B _37166 u f) = (term3998 _90715 B _37166 u f).
Proof. exact (fun_ext (fun x : type670 _90715 => @lem3524854 _90715 B _37166 u f x)). Qed.
Lemma lem3524856 {_90715 : Type'} : (@ex ((_90715 -> Prop) -> _90715 -> _90715)) = (@ex ((_90715 -> Prop) -> _90715 -> _90715)).
Proof. exact (eq_refl (@ex ((_90715 -> Prop) -> _90715 -> _90715))). Qed.
Lemma lem3524857 {_90715 B : Type'} (_37166 : type627 _90715 B) (u : _90715 -> Prop) (f : _90715 -> B) : (term4011 _90715 B _37166 u f) = (term3999 _90715 B _37166 u f).
Proof. exact (MK_COMB (@lem3524856 _90715) (@lem3524855 _90715 B _37166 u f)). Qed.
Lemma lem3524858 {_90715 B : Type'} (_37166 : type627 _90715 B) (u : _90715 -> Prop) : (term4012 _90715 B _37166 u) = (term4000 _90715 B _37166 u).
Proof. exact (fun_ext (fun f : _90715 -> B => @lem3524857 _90715 B _37166 u f)). Qed.
Lemma lem3524859 {_90715 B : Type'} : (@all (_90715 -> B)) = (@all (_90715 -> B)).
Proof. exact (eq_refl (@all (_90715 -> B))). Qed.
Lemma lem3524860 {_90715 B : Type'} (_37166 : type627 _90715 B) (u : _90715 -> Prop) : (term4004 _90715 B _37166 u) = (term4001 _90715 B _37166 u).
Proof. exact (MK_COMB (@lem3524859 _90715 B) (@lem3524858 _90715 B _37166 u)). Qed.
Lemma lem3524861 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem3524862 {_90715 B : Type'} (_37166 : type627 _90715 B) (u : _90715 -> Prop) : (term4013 _90715 B _37166 u) = (term4014 _90715 B _37166 u).
Proof. exact (MK_COMB (@lem3524861) (@lem3524860 _90715 B _37166 u)). Qed.
Lemma lem3524863 {_90715 B : Type'} (_37166 : type627 _90715 B) (u : _90715 -> Prop) (f : _90715 -> B) : (term4007 _90715 B _37166 u f) = (term3998 _90715 B _37166 u f).
Proof. exact (eq_refl (term4007 _90715 B _37166 u f)). Qed.
Lemma lem3524864 {_90715 B : Type'} (x : type526 _90715 B) (f : _90715 -> B) : (x f) = (x f).
Proof. exact (eq_refl (x f)). Qed.
Lemma lem3524865 {_90715 B : Type'} (_37166 : type627 _90715 B) (u : _90715 -> Prop) (x : type526 _90715 B) (f : _90715 -> B) : (term4015 _90715 B _37166 u x f) = (term4016 _90715 B _37166 u x f).
Proof. exact (MK_COMB (@lem3524863 _90715 B _37166 u f) (@lem3524864 _90715 B x f)). Qed.
Lemma lem3524866 {_90715 B : Type'} (_37166 : type627 _90715 B) (u : _90715 -> Prop) (x : type526 _90715 B) (f : _90715 -> B) : (term4016 _90715 B _37166 u x f) = (term4017 _90715 B _37166 u x f).
Proof. exact (eq_refl (term4016 _90715 B _37166 u x f)). Qed.
Lemma lem3524867 {_90715 B : Type'} (_37166 : type627 _90715 B) (u : _90715 -> Prop) (x : type526 _90715 B) (f : _90715 -> B) : (term4015 _90715 B _37166 u x f) = (term4017 _90715 B _37166 u x f).
Proof. exact (TRANS (@lem3524865 _90715 B _37166 u x f) (@lem3524866 _90715 B _37166 u x f)). Qed.
Lemma lem3524868 {_90715 B : Type'} (_37166 : type627 _90715 B) (u : _90715 -> Prop) (x : type526 _90715 B) : (term4018 _90715 B _37166 u x) = (term4019 _90715 B _37166 u x).
Proof. exact (fun_ext (fun f : _90715 -> B => @lem3524867 _90715 B _37166 u x f)). Qed.
Lemma lem3524869 {_90715 B : Type'} : (@all (_90715 -> B)) = (@all (_90715 -> B)).
Proof. exact (eq_refl (@all (_90715 -> B))). Qed.
Lemma lem3524870 {_90715 B : Type'} (_37166 : type627 _90715 B) (u : _90715 -> Prop) (x : type526 _90715 B) : (term4020 _90715 B _37166 u x) = (term4021 _90715 B _37166 u x).
Proof. exact (MK_COMB (@lem3524869 _90715 B) (@lem3524868 _90715 B _37166 u x)). Qed.
Lemma lem3524871 {_90715 B : Type'} (_37166 : type627 _90715 B) (u : _90715 -> Prop) : (term4022 _90715 B _37166 u) = (term4023 _90715 B _37166 u).
Proof. exact (fun_ext (fun x : type526 _90715 B => @lem3524870 _90715 B _37166 u x)). Qed.
Lemma lem3524872 {_90715 B : Type'} : (@ex ((_90715 -> B) -> (_90715 -> Prop) -> _90715 -> _90715)) = (@ex ((_90715 -> B) -> (_90715 -> Prop) -> _90715 -> _90715)).
Proof. exact (eq_refl (@ex ((_90715 -> B) -> (_90715 -> Prop) -> _90715 -> _90715))). Qed.
Lemma lem3524873 {_90715 B : Type'} (_37166 : type627 _90715 B) (u : _90715 -> Prop) : (term4005 _90715 B _37166 u) = (term4024 _90715 B _37166 u).
Proof. exact (MK_COMB (@lem3524872 _90715 B) (@lem3524871 _90715 B _37166 u)). Qed.
Lemma lem3524874 {_90715 B : Type'} (_37166 : type627 _90715 B) (u : _90715 -> Prop) : ((term4004 _90715 B _37166 u) = (term4005 _90715 B _37166 u)) = ((term4001 _90715 B _37166 u) = (term4024 _90715 B _37166 u)).
Proof. exact (MK_COMB (@lem3524862 _90715 B _37166 u) (@lem3524873 _90715 B _37166 u)). Qed.
Lemma lem3524875 {_90715 B : Type'} (_37166 : type627 _90715 B) (u : _90715 -> Prop) : (term4001 _90715 B _37166 u) = (term4024 _90715 B _37166 u).
Proof. exact (EQ_MP (@lem3524874 _90715 B _37166 u) (@lem3524849 _90715 B _37166 u)). Qed.
Lemma lem3524876 {_90715 B : Type'} (_37166 : type627 _90715 B) (u : _90715 -> Prop) : (term3918 _90715 B _37166 u) = (term4024 _90715 B _37166 u).
Proof. exact (TRANS (@lem3524845 _90715 B _37166 u) (@lem3524875 _90715 B _37166 u)). Qed.
Lemma lem3524877 {_90715 B : Type'} (_37166 : type627 _90715 B) : (term3925 _90715 B _37166) = (term4025 _90715 B _37166).
Proof. exact (fun_ext (fun u : _90715 -> Prop => @lem3524876 _90715 B _37166 u)). Qed.
Lemma lem3524878 {_90715 : Type'} : (@all (_90715 -> Prop)) = (@all (_90715 -> Prop)).
Proof. exact (eq_refl (@all (_90715 -> Prop))). Qed.
Lemma lem3524879 {_90715 B : Type'} (_37166 : type627 _90715 B) : (term3940 _90715 B _37166) = (term4026 _90715 B _37166).
Proof. exact (MK_COMB (@lem3524878 _90715) (@lem3524877 _90715 B _37166)). Qed.
Lemma lem3524881 {A B : Type'} (P : type1413 A B) : (term453 A B P) = (term454 A B P).
Proof. exact (EQ_MP (@lem18899 A B P) (@lem18898 A B P)). Qed.
Lemma lem3524882 {_90715 B : Type'} (P : type589 _90715 B) : (term4027 _90715 B P) = (term4028 _90715 B P).
Proof. exact (@lem3524881 (_90715 -> Prop) (type526 _90715 B) P). Qed.
Lemma lem3524883 {_90715 B : Type'} (_37166 : type627 _90715 B) : (term4029 _90715 B _37166) = (term4030 _90715 B _37166).
Proof. exact (@lem3524882 _90715 B (term4031 _90715 B _37166)). Qed.
Lemma lem3524884 {_90715 B : Type'} (_37166 : type627 _90715 B) (u : _90715 -> Prop) : (term4032 _90715 B _37166 u) = (term4023 _90715 B _37166 u).
Proof. exact (eq_refl (term4032 _90715 B _37166 u)). Qed.
Lemma lem3524885 {_90715 B : Type'} (x : type526 _90715 B) : x = x.
Proof. exact (eq_refl x). Qed.
Lemma lem3524886 {_90715 B : Type'} (_37166 : type627 _90715 B) (u : _90715 -> Prop) (x : type526 _90715 B) : (term4033 _90715 B _37166 u x) = (term4034 _90715 B _37166 u x).
Proof. exact (MK_COMB (@lem3524884 _90715 B _37166 u) (@lem3524885 _90715 B x)). Qed.
Lemma lem3524887 {_90715 B : Type'} (_37166 : type627 _90715 B) (u : _90715 -> Prop) (x : type526 _90715 B) : (term4034 _90715 B _37166 u x) = (term4021 _90715 B _37166 u x).
Proof. exact (eq_refl (term4034 _90715 B _37166 u x)). Qed.
Lemma lem3524888 {_90715 B : Type'} (_37166 : type627 _90715 B) (u : _90715 -> Prop) (x : type526 _90715 B) : (term4033 _90715 B _37166 u x) = (term4021 _90715 B _37166 u x).
Proof. exact (TRANS (@lem3524886 _90715 B _37166 u x) (@lem3524887 _90715 B _37166 u x)). Qed.
Lemma lem3524889 {_90715 B : Type'} (_37166 : type627 _90715 B) (u : _90715 -> Prop) : (term4035 _90715 B _37166 u) = (term4023 _90715 B _37166 u).
Proof. exact (fun_ext (fun x : type526 _90715 B => @lem3524888 _90715 B _37166 u x)). Qed.
Lemma lem3524890 {_90715 B : Type'} : (@ex ((_90715 -> B) -> (_90715 -> Prop) -> _90715 -> _90715)) = (@ex ((_90715 -> B) -> (_90715 -> Prop) -> _90715 -> _90715)).
Proof. exact (eq_refl (@ex ((_90715 -> B) -> (_90715 -> Prop) -> _90715 -> _90715))). Qed.
Lemma lem3524891 {_90715 B : Type'} (_37166 : type627 _90715 B) (u : _90715 -> Prop) : (term4036 _90715 B _37166 u) = (term4024 _90715 B _37166 u).
Proof. exact (MK_COMB (@lem3524890 _90715 B) (@lem3524889 _90715 B _37166 u)). Qed.
Lemma lem3524892 {_90715 B : Type'} (_37166 : type627 _90715 B) : (term4037 _90715 B _37166) = (term4025 _90715 B _37166).
Proof. exact (fun_ext (fun u : _90715 -> Prop => @lem3524891 _90715 B _37166 u)). Qed.
Lemma lem3524893 {_90715 : Type'} : (@all (_90715 -> Prop)) = (@all (_90715 -> Prop)).
Proof. exact (eq_refl (@all (_90715 -> Prop))). Qed.
Lemma lem3524894 {_90715 B : Type'} (_37166 : type627 _90715 B) : (term4029 _90715 B _37166) = (term4026 _90715 B _37166).
Proof. exact (MK_COMB (@lem3524893 _90715) (@lem3524892 _90715 B _37166)). Qed.
Lemma lem3524895 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem3524896 {_90715 B : Type'} (_37166 : type627 _90715 B) : (term4038 _90715 B _37166) = (term4039 _90715 B _37166).
Proof. exact (MK_COMB (@lem3524895) (@lem3524894 _90715 B _37166)). Qed.
Lemma lem3524897 {_90715 B : Type'} (_37166 : type627 _90715 B) (u : _90715 -> Prop) : (term4032 _90715 B _37166 u) = (term4023 _90715 B _37166 u).
Proof. exact (eq_refl (term4032 _90715 B _37166 u)). Qed.
Lemma lem3524898 {_90715 B : Type'} (x : type626 _90715 B) (u : _90715 -> Prop) : (x u) = (x u).
Proof. exact (eq_refl (x u)). Qed.
Lemma lem3524899 {_90715 B : Type'} (_37166 : type627 _90715 B) (x : type626 _90715 B) (u : _90715 -> Prop) : (term4040 _90715 B _37166 x u) = (term4041 _90715 B _37166 x u).
Proof. exact (MK_COMB (@lem3524897 _90715 B _37166 u) (@lem3524898 _90715 B x u)). Qed.
Lemma lem3524900 {_90715 B : Type'} (_37166 : type627 _90715 B) (x : type626 _90715 B) (u : _90715 -> Prop) : (term4041 _90715 B _37166 x u) = (term4042 _90715 B _37166 x u).
Proof. exact (eq_refl (term4041 _90715 B _37166 x u)). Qed.
Lemma lem3524901 {_90715 B : Type'} (_37166 : type627 _90715 B) (x : type626 _90715 B) (u : _90715 -> Prop) : (term4040 _90715 B _37166 x u) = (term4042 _90715 B _37166 x u).
Proof. exact (TRANS (@lem3524899 _90715 B _37166 x u) (@lem3524900 _90715 B _37166 x u)). Qed.
Lemma lem3524902 {_90715 B : Type'} (_37166 : type627 _90715 B) (x : type626 _90715 B) : (term4043 _90715 B _37166 x) = (term4044 _90715 B _37166 x).
Proof. exact (fun_ext (fun u : _90715 -> Prop => @lem3524901 _90715 B _37166 x u)). Qed.
Lemma lem3524903 {_90715 : Type'} : (@all (_90715 -> Prop)) = (@all (_90715 -> Prop)).
Proof. exact (eq_refl (@all (_90715 -> Prop))). Qed.
Lemma lem3524904 {_90715 B : Type'} (_37166 : type627 _90715 B) (x : type626 _90715 B) : (term4045 _90715 B _37166 x) = (term4046 _90715 B _37166 x).
Proof. exact (MK_COMB (@lem3524903 _90715) (@lem3524902 _90715 B _37166 x)). Qed.
Lemma lem3524905 {_90715 B : Type'} (_37166 : type627 _90715 B) : (term4047 _90715 B _37166) = (term4048 _90715 B _37166).
Proof. exact (fun_ext (fun x : type626 _90715 B => @lem3524904 _90715 B _37166 x)). Qed.
Lemma lem3524906 {_90715 B : Type'} : (@ex ((_90715 -> Prop) -> (_90715 -> B) -> (_90715 -> Prop) -> _90715 -> _90715)) = (@ex ((_90715 -> Prop) -> (_90715 -> B) -> (_90715 -> Prop) -> _90715 -> _90715)).
Proof. exact (eq_refl (@ex ((_90715 -> Prop) -> (_90715 -> B) -> (_90715 -> Prop) -> _90715 -> _90715))). Qed.
Lemma lem3524907 {_90715 B : Type'} (_37166 : type627 _90715 B) : (term4030 _90715 B _37166) = (term4049 _90715 B _37166).
Proof. exact (MK_COMB (@lem3524906 _90715 B) (@lem3524905 _90715 B _37166)). Qed.
Lemma lem3524908 {_90715 B : Type'} (_37166 : type627 _90715 B) : ((term4029 _90715 B _37166) = (term4030 _90715 B _37166)) = ((term4026 _90715 B _37166) = (term4049 _90715 B _37166)).
Proof. exact (MK_COMB (@lem3524896 _90715 B _37166) (@lem3524907 _90715 B _37166)). Qed.
Lemma lem3524909 {_90715 B : Type'} (_37166 : type627 _90715 B) : (term4026 _90715 B _37166) = (term4049 _90715 B _37166).
Proof. exact (EQ_MP (@lem3524908 _90715 B _37166) (@lem3524883 _90715 B _37166)). Qed.
Lemma lem3524910 {_90715 B : Type'} (_37166 : type627 _90715 B) : (term3940 _90715 B _37166) = (term4049 _90715 B _37166).
Proof. exact (TRANS (@lem3524879 _90715 B _37166) (@lem3524909 _90715 B _37166)). Qed.
Lemma lem3524911 {_90715 B : Type'} (_37166 : type627 _90715 B) : (term3937 _90715 B _37166) = (term3937 _90715 B _37166).
Proof. exact (eq_refl (term3937 _90715 B _37166)). Qed.
Lemma lem3524912 {_90715 B : Type'} (_37166 : type627 _90715 B) : (term3941 _90715 B _37166) = (term4050 _90715 B _37166).
Proof. exact (MK_COMB (@lem3524911 _90715 B _37166) (@lem3524910 _90715 B _37166)). Qed.
Lemma lem3524914 {A : Type'} (P : Prop) (Q : A -> Prop) : (term415 A P Q) = (term416 A P Q).
Proof. exact (EQ_MP (@lem18929 A P Q) (@lem18928 A P Q)). Qed.
Lemma lem3524915 {_90715 B : Type'} (P : Prop) (Q : type131 _90715 B) : (term4051 _90715 B P Q) = (term4052 _90715 B P Q).
Proof. exact (@lem3524914 (type626 _90715 B) P Q). Qed.
Lemma lem3524916 {_90715 B : Type'} (_37166 : type627 _90715 B) : (term4053 _90715 B _37166) = (term4054 _90715 B _37166).
Proof. exact (@lem3524915 _90715 B (term3935 _90715 B _37166) (term4048 _90715 B _37166)). Qed.
Lemma lem3524917 {_90715 B : Type'} (_37166 : type627 _90715 B) (x : type626 _90715 B) : (term4055 _90715 B _37166 x) = (term4046 _90715 B _37166 x).
Proof. exact (eq_refl (term4055 _90715 B _37166 x)). Qed.
Lemma lem3524918 {_90715 B : Type'} (_37166 : type627 _90715 B) : (term4056 _90715 B _37166) = (term4048 _90715 B _37166).
Proof. exact (fun_ext (fun x : type626 _90715 B => @lem3524917 _90715 B _37166 x)). Qed.
Lemma lem3524919 {_90715 B : Type'} : (@ex ((_90715 -> Prop) -> (_90715 -> B) -> (_90715 -> Prop) -> _90715 -> _90715)) = (@ex ((_90715 -> Prop) -> (_90715 -> B) -> (_90715 -> Prop) -> _90715 -> _90715)).
Proof. exact (eq_refl (@ex ((_90715 -> Prop) -> (_90715 -> B) -> (_90715 -> Prop) -> _90715 -> _90715))). Qed.
Lemma lem3524920 {_90715 B : Type'} (_37166 : type627 _90715 B) : (term4057 _90715 B _37166) = (term4049 _90715 B _37166).
Proof. exact (MK_COMB (@lem3524919 _90715 B) (@lem3524918 _90715 B _37166)). Qed.
Lemma lem3524921 {_90715 B : Type'} (_37166 : type627 _90715 B) : (term3937 _90715 B _37166) = (term3937 _90715 B _37166).
Proof. exact (eq_refl (term3937 _90715 B _37166)). Qed.
Lemma lem3524922 {_90715 B : Type'} (_37166 : type627 _90715 B) : (term4053 _90715 B _37166) = (term4050 _90715 B _37166).
Proof. exact (MK_COMB (@lem3524921 _90715 B _37166) (@lem3524920 _90715 B _37166)). Qed.
Lemma lem3524923 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem3524924 {_90715 B : Type'} (_37166 : type627 _90715 B) : (term4058 _90715 B _37166) = (term4059 _90715 B _37166).
Proof. exact (MK_COMB (@lem3524923) (@lem3524922 _90715 B _37166)). Qed.
Lemma lem3524925 {_90715 B : Type'} (_37166 : type627 _90715 B) (x : type626 _90715 B) : (term4055 _90715 B _37166 x) = (term4046 _90715 B _37166 x).
Proof. exact (eq_refl (term4055 _90715 B _37166 x)). Qed.
Lemma lem3524926 {_90715 B : Type'} (_37166 : type627 _90715 B) : (term3937 _90715 B _37166) = (term3937 _90715 B _37166).
Proof. exact (eq_refl (term3937 _90715 B _37166)). Qed.
Lemma lem3524927 {_90715 B : Type'} (_37166 : type627 _90715 B) (x : type626 _90715 B) : (term4060 _90715 B _37166 x) = (term4061 _90715 B _37166 x).
Proof. exact (MK_COMB (@lem3524926 _90715 B _37166) (@lem3524925 _90715 B _37166 x)). Qed.
Lemma lem3524928 {_90715 B : Type'} (_37166 : type627 _90715 B) : (term4062 _90715 B _37166) = (term4063 _90715 B _37166).
Proof. exact (fun_ext (fun x : type626 _90715 B => @lem3524927 _90715 B _37166 x)). Qed.
Lemma lem3524929 {_90715 B : Type'} : (@ex ((_90715 -> Prop) -> (_90715 -> B) -> (_90715 -> Prop) -> _90715 -> _90715)) = (@ex ((_90715 -> Prop) -> (_90715 -> B) -> (_90715 -> Prop) -> _90715 -> _90715)).
Proof. exact (eq_refl (@ex ((_90715 -> Prop) -> (_90715 -> B) -> (_90715 -> Prop) -> _90715 -> _90715))). Qed.
Lemma lem3524930 {_90715 B : Type'} (_37166 : type627 _90715 B) : (term4054 _90715 B _37166) = (term4064 _90715 B _37166).
Proof. exact (MK_COMB (@lem3524929 _90715 B) (@lem3524928 _90715 B _37166)). Qed.
Lemma lem3524931 {_90715 B : Type'} (_37166 : type627 _90715 B) : ((term4053 _90715 B _37166) = (term4054 _90715 B _37166)) = ((term4050 _90715 B _37166) = (term4064 _90715 B _37166)).
Proof. exact (MK_COMB (@lem3524924 _90715 B _37166) (@lem3524930 _90715 B _37166)). Qed.
Lemma lem3524932 {_90715 B : Type'} (_37166 : type627 _90715 B) : (term4050 _90715 B _37166) = (term4064 _90715 B _37166).
Proof. exact (EQ_MP (@lem3524931 _90715 B _37166) (@lem3524916 _90715 B _37166)). Qed.
Lemma lem3524933 {_90715 B : Type'} (_37166 : type627 _90715 B) : (term3941 _90715 B _37166) = (term4064 _90715 B _37166).
Proof. exact (TRANS (@lem3524912 _90715 B _37166) (@lem3524932 _90715 B _37166)). Qed.
Lemma lem3524934 {_90715 B : Type'} (_37166 : type627 _90715 B) : (term3853 _90715 B _37166) = (term4064 _90715 B _37166).
Proof. exact (TRANS (@lem3524754 _90715 B _37166) (@lem3524933 _90715 B _37166)). Qed.
Lemma lem3524935 {_90715 B : Type'} (_37166 : type627 _90715 B) : (term2210 _90715 B _37166) = (term4064 _90715 B _37166).
Proof. exact (TRANS (@lem3524158 _90715 B _37166) (@lem3524934 _90715 B _37166)). Qed.
Lemma lem3524936 {_90715 B : Type'} (_37166 : type627 _90715 B) (h1 : term2210 _90715 B _37166) : term4064 _90715 B _37166.
Proof. exact (EQ_MP (@lem3524935 _90715 B _37166) (@lem3520015 _90715 B _37166 h1)). Qed.
Lemma lem3524940 {_90715 A : Type'} (GEN_PVAR_84 : _90715) (u : _90715 -> Prop) (f : _90715 -> A) (t : _90715 -> Prop) (x : _90715) : (term61 _90715 A GEN_PVAR_84 u f t x) = (term61 _90715 A GEN_PVAR_84 u f t x).
Proof. exact (eq_refl (term61 _90715 A GEN_PVAR_84 u f t x)). Qed.
Lemma lem3524941 {_90715 : Type'} (P : _90715 -> Prop) : (term311 _90715 P) = (term312 _90715 P).
Proof. exact (@lem18394 _90715 P). Qed.
Lemma lem3524942 {_90715 A : Type'} (GEN_PVAR_84 : _90715) (u : _90715 -> Prop) (f : _90715 -> A) (t : _90715 -> Prop) : (term3829 _90715 A GEN_PVAR_84 u f t) = (term3830 _90715 A GEN_PVAR_84 u f t).
Proof. exact (@lem3524941 _90715 (term63 _90715 A GEN_PVAR_84 u f t)). Qed.
Lemma lem3524943 {_90715 A : Type'} (GEN_PVAR_84 : _90715) (u : _90715 -> Prop) (f : _90715 -> A) (t : _90715 -> Prop) (x : _90715) : (term3831 _90715 A GEN_PVAR_84 u f t x) = (term61 _90715 A GEN_PVAR_84 u f t x).
Proof. exact (eq_refl (term3831 _90715 A GEN_PVAR_84 u f t x)). Qed.
Lemma lem3524944 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem3524946 {_90715 A : Type'} (GEN_PVAR_84 : _90715) (u : _90715 -> Prop) (f : _90715 -> A) (t : _90715 -> Prop) (x : _90715) : (term3832 _90715 A GEN_PVAR_84 u f t x) = (term3833 _90715 A GEN_PVAR_84 u f t x).
Proof. exact (MK_COMB (@lem3524944) (@lem3524943 _90715 A GEN_PVAR_84 u f t x)). Qed.
Lemma lem3524947 {_90715 A : Type'} (GEN_PVAR_84 : _90715) (u : _90715 -> Prop) (f : _90715 -> A) (t : _90715 -> Prop) : (term3834 _90715 A GEN_PVAR_84 u f t) = (term3835 _90715 A GEN_PVAR_84 u f t).
Proof. exact (fun_ext (fun x : _90715 => @lem3524946 _90715 A GEN_PVAR_84 u f t x)). Qed.
Lemma lem3524948 {_90715 : Type'} : (@all _90715) = (@all _90715).
Proof. exact (eq_refl (@all _90715)). Qed.
Lemma lem3524949 {_90715 A : Type'} (GEN_PVAR_84 : _90715) (u : _90715 -> Prop) (f : _90715 -> A) (t : _90715 -> Prop) : (term3830 _90715 A GEN_PVAR_84 u f t) = (term3836 _90715 A GEN_PVAR_84 u f t).
Proof. exact (MK_COMB (@lem3524948 _90715) (@lem3524947 _90715 A GEN_PVAR_84 u f t)). Qed.
Lemma lem3524950 {_90715 A : Type'} (GEN_PVAR_84 : _90715) (u : _90715 -> Prop) (f : _90715 -> A) (t : _90715 -> Prop) : (term3829 _90715 A GEN_PVAR_84 u f t) = (term3836 _90715 A GEN_PVAR_84 u f t).
Proof. exact (TRANS (@lem3524942 _90715 A GEN_PVAR_84 u f t) (@lem3524949 _90715 A GEN_PVAR_84 u f t)). Qed.
Lemma lem3524951 {_90715 A : Type'} (GEN_PVAR_84 : _90715) (u : _90715 -> Prop) (f : _90715 -> A) (t : _90715 -> Prop) : (term63 _90715 A GEN_PVAR_84 u f t) = (term63 _90715 A GEN_PVAR_84 u f t).
Proof. exact (fun_ext (fun x : _90715 => @lem3524940 _90715 A GEN_PVAR_84 u f t x)). Qed.
Lemma lem3524952 {_90715 : Type'} : (@ex _90715) = (@ex _90715).
Proof. exact (eq_refl (@ex _90715)). Qed.
Lemma lem3524953 {_90715 A : Type'} (GEN_PVAR_84 : _90715) (u : _90715 -> Prop) (f : _90715 -> A) (t : _90715 -> Prop) : (term65 _90715 A GEN_PVAR_84 u f t) = (term65 _90715 A GEN_PVAR_84 u f t).
Proof. exact (MK_COMB (@lem3524952 _90715) (@lem3524951 _90715 A GEN_PVAR_84 u f t)). Qed.
Lemma lem3524955 {_90715 A : Type'} (_37165 : type627 _90715 A) (u : _90715 -> Prop) (f : _90715 -> A) (t : _90715 -> Prop) (GEN_PVAR_84 : _90715) : (term3837 _90715 A _37165 u f t GEN_PVAR_84) = (term3837 _90715 A _37165 u f t GEN_PVAR_84).
Proof. exact (eq_refl (term3837 _90715 A _37165 u f t GEN_PVAR_84)). Qed.
Lemma lem3524956 {_90715 A : Type'} (_37165 : type627 _90715 A) (GEN_PVAR_84 : _90715) (u : _90715 -> Prop) (f : _90715 -> A) (t : _90715 -> Prop) : (term3838 _90715 A _37165 GEN_PVAR_84 u f t) = (term3838 _90715 A _37165 GEN_PVAR_84 u f t).
Proof. exact (MK_COMB (@lem3524955 _90715 A _37165 u f t GEN_PVAR_84) (@lem3524953 _90715 A GEN_PVAR_84 u f t)). Qed.
Lemma lem3524958 {_90715 A : Type'} (_37165 : type627 _90715 A) (u : _90715 -> Prop) (f : _90715 -> A) (t : _90715 -> Prop) (GEN_PVAR_84 : _90715) : (term3839 _90715 A _37165 u f t GEN_PVAR_84) = (term3839 _90715 A _37165 u f t GEN_PVAR_84).
Proof. exact (eq_refl (term3839 _90715 A _37165 u f t GEN_PVAR_84)). Qed.
Lemma lem3524959 {_90715 A : Type'} (_37165 : type627 _90715 A) (GEN_PVAR_84 : _90715) (u : _90715 -> Prop) (f : _90715 -> A) (t : _90715 -> Prop) : (term3840 _90715 A _37165 GEN_PVAR_84 u f t) = (term3841 _90715 A _37165 GEN_PVAR_84 u f t).
Proof. exact (MK_COMB (@lem3524958 _90715 A _37165 u f t GEN_PVAR_84) (@lem3524950 _90715 A GEN_PVAR_84 u f t)). Qed.
Lemma lem3524960 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem3524961 {_90715 A : Type'} (_37165 : type627 _90715 A) (GEN_PVAR_84 : _90715) (u : _90715 -> Prop) (f : _90715 -> A) (t : _90715 -> Prop) : (term3842 _90715 A _37165 GEN_PVAR_84 u f t) = (term3843 _90715 A _37165 GEN_PVAR_84 u f t).
Proof. exact (MK_COMB (@lem3524960) (@lem3524959 _90715 A _37165 GEN_PVAR_84 u f t)). Qed.
Lemma lem3524962 {_90715 A : Type'} (_37165 : type627 _90715 A) (GEN_PVAR_84 : _90715) (u : _90715 -> Prop) (f : _90715 -> A) (t : _90715 -> Prop) : (term3844 _90715 A _37165 GEN_PVAR_84 u f t) = (term3845 _90715 A _37165 GEN_PVAR_84 u f t).
Proof. exact (MK_COMB (@lem3524961 _90715 A _37165 GEN_PVAR_84 u f t) (@lem3524956 _90715 A _37165 GEN_PVAR_84 u f t)). Qed.
Lemma lem3524963 {_90715 A : Type'} (_37165 : type627 _90715 A) (GEN_PVAR_84 : _90715) (u : _90715 -> Prop) (f : _90715 -> A) (t : _90715 -> Prop) : ((_37165 u f t GEN_PVAR_84) = (term65 _90715 A GEN_PVAR_84 u f t)) = (term3844 _90715 A _37165 GEN_PVAR_84 u f t).
Proof. exact (@lem17784 (_37165 u f t GEN_PVAR_84) (term65 _90715 A GEN_PVAR_84 u f t)). Qed.
Lemma lem3524964 {_90715 A : Type'} (_37165 : type627 _90715 A) (GEN_PVAR_84 : _90715) (u : _90715 -> Prop) (f : _90715 -> A) (t : _90715 -> Prop) : ((_37165 u f t GEN_PVAR_84) = (term65 _90715 A GEN_PVAR_84 u f t)) = (term3845 _90715 A _37165 GEN_PVAR_84 u f t).
Proof. exact (TRANS (@lem3524963 _90715 A _37165 GEN_PVAR_84 u f t) (@lem3524962 _90715 A _37165 GEN_PVAR_84 u f t)). Qed.
Lemma lem3524965 {_90715 A : Type'} (_37165 : type627 _90715 A) (u : _90715 -> Prop) (f : _90715 -> A) (t : _90715 -> Prop) : (term2203 _90715 A _37165 u f t) = (term3846 _90715 A _37165 u f t).
Proof. exact (fun_ext (fun GEN_PVAR_84 : _90715 => @lem3524964 _90715 A _37165 GEN_PVAR_84 u f t)). Qed.
Lemma lem3524966 {_90715 : Type'} : (@all _90715) = (@all _90715).
Proof. exact (eq_refl (@all _90715)). Qed.
Lemma lem3524967 {_90715 A : Type'} (_37165 : type627 _90715 A) (u : _90715 -> Prop) (f : _90715 -> A) (t : _90715 -> Prop) : (term2204 _90715 A _37165 u f t) = (term3847 _90715 A _37165 u f t).
Proof. exact (MK_COMB (@lem3524966 _90715) (@lem3524965 _90715 A _37165 u f t)). Qed.
Lemma lem3524968 {_90715 A : Type'} (_37165 : type627 _90715 A) (u : _90715 -> Prop) (f : _90715 -> A) : (term2205 _90715 A _37165 u f) = (term3848 _90715 A _37165 u f).
Proof. exact (fun_ext (fun t : _90715 -> Prop => @lem3524967 _90715 A _37165 u f t)). Qed.
Lemma lem3524969 {_90715 : Type'} : (@all (_90715 -> Prop)) = (@all (_90715 -> Prop)).
Proof. exact (eq_refl (@all (_90715 -> Prop))). Qed.
Lemma lem3524970 {_90715 A : Type'} (_37165 : type627 _90715 A) (u : _90715 -> Prop) (f : _90715 -> A) : (term2206 _90715 A _37165 u f) = (term3849 _90715 A _37165 u f).
Proof. exact (MK_COMB (@lem3524969 _90715) (@lem3524968 _90715 A _37165 u f)). Qed.
Lemma lem3524971 {_90715 A : Type'} (_37165 : type627 _90715 A) (u : _90715 -> Prop) : (term2207 _90715 A _37165 u) = (term3850 _90715 A _37165 u).
Proof. exact (fun_ext (fun f : _90715 -> A => @lem3524970 _90715 A _37165 u f)). Qed.
Lemma lem3524972 {_90715 A : Type'} : (@all (_90715 -> A)) = (@all (_90715 -> A)).
Proof. exact (eq_refl (@all (_90715 -> A))). Qed.
Lemma lem3524973 {_90715 A : Type'} (_37165 : type627 _90715 A) (u : _90715 -> Prop) : (term2208 _90715 A _37165 u) = (term3851 _90715 A _37165 u).
Proof. exact (MK_COMB (@lem3524972 _90715 A) (@lem3524971 _90715 A _37165 u)). Qed.
Lemma lem3524974 {_90715 A : Type'} (_37165 : type627 _90715 A) : (term2209 _90715 A _37165) = (term3852 _90715 A _37165).
Proof. exact (fun_ext (fun u : _90715 -> Prop => @lem3524973 _90715 A _37165 u)). Qed.
Lemma lem3524975 {_90715 : Type'} : (@all (_90715 -> Prop)) = (@all (_90715 -> Prop)).
Proof. exact (eq_refl (@all (_90715 -> Prop))). Qed.
Lemma lem3524976 {_90715 A : Type'} (_37165 : type627 _90715 A) : (term2210 _90715 A _37165) = (term3853 _90715 A _37165).
Proof. exact (MK_COMB (@lem3524975 _90715) (@lem3524974 _90715 A _37165)). Qed.
Lemma lem3524990 {A : Type'} (P : A -> Prop) (Q : A -> Prop) : (term726 A P Q) = (term725 A P Q).
Proof. exact (EQ_MP (@lem18953 A P Q) (@lem18952 A P Q)). Qed.
Lemma lem3524991 {_90715 : Type'} (P : _90715 -> Prop) (Q : _90715 -> Prop) : (term726 _90715 P Q) = (term725 _90715 P Q).
Proof. exact (@lem3524990 _90715 P Q). Qed.
Lemma lem3524992 {_90715 A : Type'} (_37165 : type627 _90715 A) (u : _90715 -> Prop) (f : _90715 -> A) (t : _90715 -> Prop) : (term3854 _90715 A _37165 u f t) = (term3855 _90715 A _37165 u f t).
Proof. exact (@lem3524991 _90715 (term3856 _90715 A _37165 u f t) (term3857 _90715 A _37165 u f t)). Qed.
Lemma lem3524993 {_90715 A : Type'} (_37165 : type627 _90715 A) (GEN_PVAR_84 : _90715) (u : _90715 -> Prop) (f : _90715 -> A) (t : _90715 -> Prop) : (term3858 _90715 A _37165 u f t GEN_PVAR_84) = (term3841 _90715 A _37165 GEN_PVAR_84 u f t).
Proof. exact (eq_refl (term3858 _90715 A _37165 u f t GEN_PVAR_84)). Qed.
Lemma lem3524994 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem3524995 {_90715 A : Type'} (_37165 : type627 _90715 A) (GEN_PVAR_84 : _90715) (u : _90715 -> Prop) (f : _90715 -> A) (t : _90715 -> Prop) : (term3859 _90715 A _37165 u f t GEN_PVAR_84) = (term3843 _90715 A _37165 GEN_PVAR_84 u f t).
Proof. exact (MK_COMB (@lem3524994) (@lem3524993 _90715 A _37165 GEN_PVAR_84 u f t)). Qed.
Lemma lem3524996 {_90715 A : Type'} (_37165 : type627 _90715 A) (GEN_PVAR_84 : _90715) (u : _90715 -> Prop) (f : _90715 -> A) (t : _90715 -> Prop) : (term3860 _90715 A _37165 u f t GEN_PVAR_84) = (term3838 _90715 A _37165 GEN_PVAR_84 u f t).
Proof. exact (eq_refl (term3860 _90715 A _37165 u f t GEN_PVAR_84)). Qed.
Lemma lem3524997 {_90715 A : Type'} (_37165 : type627 _90715 A) (GEN_PVAR_84 : _90715) (u : _90715 -> Prop) (f : _90715 -> A) (t : _90715 -> Prop) : (term3861 _90715 A _37165 u f t GEN_PVAR_84) = (term3845 _90715 A _37165 GEN_PVAR_84 u f t).
Proof. exact (MK_COMB (@lem3524995 _90715 A _37165 GEN_PVAR_84 u f t) (@lem3524996 _90715 A _37165 GEN_PVAR_84 u f t)). Qed.
Lemma lem3524998 {_90715 A : Type'} (_37165 : type627 _90715 A) (u : _90715 -> Prop) (f : _90715 -> A) (t : _90715 -> Prop) : (term3862 _90715 A _37165 u f t) = (term3846 _90715 A _37165 u f t).
Proof. exact (fun_ext (fun GEN_PVAR_84 : _90715 => @lem3524997 _90715 A _37165 GEN_PVAR_84 u f t)). Qed.
Lemma lem3524999 {_90715 : Type'} : (@all _90715) = (@all _90715).
Proof. exact (eq_refl (@all _90715)). Qed.
Lemma lem3525000 {_90715 A : Type'} (_37165 : type627 _90715 A) (u : _90715 -> Prop) (f : _90715 -> A) (t : _90715 -> Prop) : (term3854 _90715 A _37165 u f t) = (term3847 _90715 A _37165 u f t).
Proof. exact (MK_COMB (@lem3524999 _90715) (@lem3524998 _90715 A _37165 u f t)). Qed.
Lemma lem3525001 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem3525002 {_90715 A : Type'} (_37165 : type627 _90715 A) (u : _90715 -> Prop) (f : _90715 -> A) (t : _90715 -> Prop) : (term3863 _90715 A _37165 u f t) = (term3864 _90715 A _37165 u f t).
Proof. exact (MK_COMB (@lem3525001) (@lem3525000 _90715 A _37165 u f t)). Qed.
Lemma lem3525003 {_90715 A : Type'} (_37165 : type627 _90715 A) (GEN_PVAR_84 : _90715) (u : _90715 -> Prop) (f : _90715 -> A) (t : _90715 -> Prop) : (term3858 _90715 A _37165 u f t GEN_PVAR_84) = (term3841 _90715 A _37165 GEN_PVAR_84 u f t).
Proof. exact (eq_refl (term3858 _90715 A _37165 u f t GEN_PVAR_84)). Qed.
Lemma lem3525004 {_90715 A : Type'} (_37165 : type627 _90715 A) (u : _90715 -> Prop) (f : _90715 -> A) (t : _90715 -> Prop) : (term3865 _90715 A _37165 u f t) = (term3856 _90715 A _37165 u f t).
Proof. exact (fun_ext (fun GEN_PVAR_84 : _90715 => @lem3525003 _90715 A _37165 GEN_PVAR_84 u f t)). Qed.
Lemma lem3525005 {_90715 : Type'} : (@all _90715) = (@all _90715).
Proof. exact (eq_refl (@all _90715)). Qed.
Lemma lem3525006 {_90715 A : Type'} (_37165 : type627 _90715 A) (u : _90715 -> Prop) (f : _90715 -> A) (t : _90715 -> Prop) : (term3866 _90715 A _37165 u f t) = (term3867 _90715 A _37165 u f t).
Proof. exact (MK_COMB (@lem3525005 _90715) (@lem3525004 _90715 A _37165 u f t)). Qed.
Lemma lem3525007 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem3525008 {_90715 A : Type'} (_37165 : type627 _90715 A) (u : _90715 -> Prop) (f : _90715 -> A) (t : _90715 -> Prop) : (term3868 _90715 A _37165 u f t) = (term3869 _90715 A _37165 u f t).
Proof. exact (MK_COMB (@lem3525007) (@lem3525006 _90715 A _37165 u f t)). Qed.
Lemma lem3525009 {_90715 A : Type'} (_37165 : type627 _90715 A) (GEN_PVAR_84 : _90715) (u : _90715 -> Prop) (f : _90715 -> A) (t : _90715 -> Prop) : (term3860 _90715 A _37165 u f t GEN_PVAR_84) = (term3838 _90715 A _37165 GEN_PVAR_84 u f t).
Proof. exact (eq_refl (term3860 _90715 A _37165 u f t GEN_PVAR_84)). Qed.
Lemma lem3525010 {_90715 A : Type'} (_37165 : type627 _90715 A) (u : _90715 -> Prop) (f : _90715 -> A) (t : _90715 -> Prop) : (term3870 _90715 A _37165 u f t) = (term3857 _90715 A _37165 u f t).
Proof. exact (fun_ext (fun GEN_PVAR_84 : _90715 => @lem3525009 _90715 A _37165 GEN_PVAR_84 u f t)). Qed.
Lemma lem3525011 {_90715 : Type'} : (@all _90715) = (@all _90715).
Proof. exact (eq_refl (@all _90715)). Qed.
Lemma lem3525012 {_90715 A : Type'} (_37165 : type627 _90715 A) (u : _90715 -> Prop) (f : _90715 -> A) (t : _90715 -> Prop) : (term3871 _90715 A _37165 u f t) = (term3872 _90715 A _37165 u f t).
Proof. exact (MK_COMB (@lem3525011 _90715) (@lem3525010 _90715 A _37165 u f t)). Qed.
Lemma lem3525013 {_90715 A : Type'} (_37165 : type627 _90715 A) (u : _90715 -> Prop) (f : _90715 -> A) (t : _90715 -> Prop) : (term3855 _90715 A _37165 u f t) = (term3873 _90715 A _37165 u f t).
Proof. exact (MK_COMB (@lem3525008 _90715 A _37165 u f t) (@lem3525012 _90715 A _37165 u f t)). Qed.
Lemma lem3525014 {_90715 A : Type'} (_37165 : type627 _90715 A) (u : _90715 -> Prop) (f : _90715 -> A) (t : _90715 -> Prop) : ((term3854 _90715 A _37165 u f t) = (term3855 _90715 A _37165 u f t)) = ((term3847 _90715 A _37165 u f t) = (term3873 _90715 A _37165 u f t)).
Proof. exact (MK_COMB (@lem3525002 _90715 A _37165 u f t) (@lem3525013 _90715 A _37165 u f t)). Qed.
Lemma lem3525015 {_90715 A : Type'} (_37165 : type627 _90715 A) (u : _90715 -> Prop) (f : _90715 -> A) (t : _90715 -> Prop) : (term3847 _90715 A _37165 u f t) = (term3873 _90715 A _37165 u f t).
Proof. exact (EQ_MP (@lem3525014 _90715 A _37165 u f t) (@lem3524992 _90715 A _37165 u f t)). Qed.
Lemma lem3525120 {_90715 A : Type'} (_37165 : type627 _90715 A) (u : _90715 -> Prop) (f : _90715 -> A) : (term3848 _90715 A _37165 u f) = (term3874 _90715 A _37165 u f).
Proof. exact (fun_ext (fun t : _90715 -> Prop => @lem3525015 _90715 A _37165 u f t)). Qed.
Lemma lem3525121 {_90715 : Type'} : (@all (_90715 -> Prop)) = (@all (_90715 -> Prop)).
Proof. exact (eq_refl (@all (_90715 -> Prop))). Qed.
Lemma lem3525122 {_90715 A : Type'} (_37165 : type627 _90715 A) (u : _90715 -> Prop) (f : _90715 -> A) : (term3849 _90715 A _37165 u f) = (term3875 _90715 A _37165 u f).
Proof. exact (MK_COMB (@lem3525121 _90715) (@lem3525120 _90715 A _37165 u f)). Qed.
Lemma lem3525124 {A : Type'} (P : A -> Prop) (Q : A -> Prop) : (term726 A P Q) = (term725 A P Q).
Proof. exact (EQ_MP (@lem18953 A P Q) (@lem18952 A P Q)). Qed.
Lemma lem3525125 {_90715 : Type'} (P : type686 _90715) (Q : type686 _90715) : (term2898 _90715 P Q) = (term2899 _90715 P Q).
Proof. exact (@lem3525124 (_90715 -> Prop) P Q). Qed.
Lemma lem3525126 {_90715 A : Type'} (_37165 : type627 _90715 A) (u : _90715 -> Prop) (f : _90715 -> A) : (term3876 _90715 A _37165 u f) = (term3877 _90715 A _37165 u f).
Proof. exact (@lem3525125 _90715 (term3878 _90715 A _37165 u f) (term3879 _90715 A _37165 u f)). Qed.
Lemma lem3525127 {_90715 A : Type'} (_37165 : type627 _90715 A) (u : _90715 -> Prop) (f : _90715 -> A) (t : _90715 -> Prop) : (term3880 _90715 A _37165 u f t) = (term3867 _90715 A _37165 u f t).
Proof. exact (eq_refl (term3880 _90715 A _37165 u f t)). Qed.
Lemma lem3525128 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem3525129 {_90715 A : Type'} (_37165 : type627 _90715 A) (u : _90715 -> Prop) (f : _90715 -> A) (t : _90715 -> Prop) : (term3881 _90715 A _37165 u f t) = (term3869 _90715 A _37165 u f t).
Proof. exact (MK_COMB (@lem3525128) (@lem3525127 _90715 A _37165 u f t)). Qed.
Lemma lem3525130 {_90715 A : Type'} (_37165 : type627 _90715 A) (u : _90715 -> Prop) (f : _90715 -> A) (t : _90715 -> Prop) : (term3882 _90715 A _37165 u f t) = (term3872 _90715 A _37165 u f t).
Proof. exact (eq_refl (term3882 _90715 A _37165 u f t)). Qed.
Lemma lem3525131 {_90715 A : Type'} (_37165 : type627 _90715 A) (u : _90715 -> Prop) (f : _90715 -> A) (t : _90715 -> Prop) : (term3883 _90715 A _37165 u f t) = (term3873 _90715 A _37165 u f t).
Proof. exact (MK_COMB (@lem3525129 _90715 A _37165 u f t) (@lem3525130 _90715 A _37165 u f t)). Qed.
Lemma lem3525132 {_90715 A : Type'} (_37165 : type627 _90715 A) (u : _90715 -> Prop) (f : _90715 -> A) : (term3884 _90715 A _37165 u f) = (term3874 _90715 A _37165 u f).
Proof. exact (fun_ext (fun t : _90715 -> Prop => @lem3525131 _90715 A _37165 u f t)). Qed.
Lemma lem3525133 {_90715 : Type'} : (@all (_90715 -> Prop)) = (@all (_90715 -> Prop)).
Proof. exact (eq_refl (@all (_90715 -> Prop))). Qed.
Lemma lem3525134 {_90715 A : Type'} (_37165 : type627 _90715 A) (u : _90715 -> Prop) (f : _90715 -> A) : (term3876 _90715 A _37165 u f) = (term3875 _90715 A _37165 u f).
Proof. exact (MK_COMB (@lem3525133 _90715) (@lem3525132 _90715 A _37165 u f)). Qed.
Lemma lem3525135 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem3525136 {_90715 A : Type'} (_37165 : type627 _90715 A) (u : _90715 -> Prop) (f : _90715 -> A) : (term3885 _90715 A _37165 u f) = (term3886 _90715 A _37165 u f).
Proof. exact (MK_COMB (@lem3525135) (@lem3525134 _90715 A _37165 u f)). Qed.
Lemma lem3525137 {_90715 A : Type'} (_37165 : type627 _90715 A) (u : _90715 -> Prop) (f : _90715 -> A) (t : _90715 -> Prop) : (term3880 _90715 A _37165 u f t) = (term3867 _90715 A _37165 u f t).
Proof. exact (eq_refl (term3880 _90715 A _37165 u f t)). Qed.
Lemma lem3525138 {_90715 A : Type'} (_37165 : type627 _90715 A) (u : _90715 -> Prop) (f : _90715 -> A) : (term3887 _90715 A _37165 u f) = (term3878 _90715 A _37165 u f).
Proof. exact (fun_ext (fun t : _90715 -> Prop => @lem3525137 _90715 A _37165 u f t)). Qed.
Lemma lem3525139 {_90715 : Type'} : (@all (_90715 -> Prop)) = (@all (_90715 -> Prop)).
Proof. exact (eq_refl (@all (_90715 -> Prop))). Qed.
Lemma lem3525140 {_90715 A : Type'} (_37165 : type627 _90715 A) (u : _90715 -> Prop) (f : _90715 -> A) : (term3888 _90715 A _37165 u f) = (term3889 _90715 A _37165 u f).
Proof. exact (MK_COMB (@lem3525139 _90715) (@lem3525138 _90715 A _37165 u f)). Qed.
Lemma lem3525141 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem3525142 {_90715 A : Type'} (_37165 : type627 _90715 A) (u : _90715 -> Prop) (f : _90715 -> A) : (term3890 _90715 A _37165 u f) = (term3891 _90715 A _37165 u f).
Proof. exact (MK_COMB (@lem3525141) (@lem3525140 _90715 A _37165 u f)). Qed.
Lemma lem3525143 {_90715 A : Type'} (_37165 : type627 _90715 A) (u : _90715 -> Prop) (f : _90715 -> A) (t : _90715 -> Prop) : (term3882 _90715 A _37165 u f t) = (term3872 _90715 A _37165 u f t).
Proof. exact (eq_refl (term3882 _90715 A _37165 u f t)). Qed.
Lemma lem3525144 {_90715 A : Type'} (_37165 : type627 _90715 A) (u : _90715 -> Prop) (f : _90715 -> A) : (term3892 _90715 A _37165 u f) = (term3879 _90715 A _37165 u f).
Proof. exact (fun_ext (fun t : _90715 -> Prop => @lem3525143 _90715 A _37165 u f t)). Qed.
Lemma lem3525145 {_90715 : Type'} : (@all (_90715 -> Prop)) = (@all (_90715 -> Prop)).
Proof. exact (eq_refl (@all (_90715 -> Prop))). Qed.
Lemma lem3525146 {_90715 A : Type'} (_37165 : type627 _90715 A) (u : _90715 -> Prop) (f : _90715 -> A) : (term3893 _90715 A _37165 u f) = (term3894 _90715 A _37165 u f).
Proof. exact (MK_COMB (@lem3525145 _90715) (@lem3525144 _90715 A _37165 u f)). Qed.
Lemma lem3525147 {_90715 A : Type'} (_37165 : type627 _90715 A) (u : _90715 -> Prop) (f : _90715 -> A) : (term3877 _90715 A _37165 u f) = (term3895 _90715 A _37165 u f).
Proof. exact (MK_COMB (@lem3525142 _90715 A _37165 u f) (@lem3525146 _90715 A _37165 u f)). Qed.
Lemma lem3525148 {_90715 A : Type'} (_37165 : type627 _90715 A) (u : _90715 -> Prop) (f : _90715 -> A) : ((term3876 _90715 A _37165 u f) = (term3877 _90715 A _37165 u f)) = ((term3875 _90715 A _37165 u f) = (term3895 _90715 A _37165 u f)).
Proof. exact (MK_COMB (@lem3525136 _90715 A _37165 u f) (@lem3525147 _90715 A _37165 u f)). Qed.
Lemma lem3525149 {_90715 A : Type'} (_37165 : type627 _90715 A) (u : _90715 -> Prop) (f : _90715 -> A) : (term3875 _90715 A _37165 u f) = (term3895 _90715 A _37165 u f).
Proof. exact (EQ_MP (@lem3525148 _90715 A _37165 u f) (@lem3525126 _90715 A _37165 u f)). Qed.
Lemma lem3525262 {_90715 A : Type'} (_37165 : type627 _90715 A) (u : _90715 -> Prop) (f : _90715 -> A) : (term3849 _90715 A _37165 u f) = (term3895 _90715 A _37165 u f).
Proof. exact (TRANS (@lem3525122 _90715 A _37165 u f) (@lem3525149 _90715 A _37165 u f)). Qed.
Lemma lem3525263 {_90715 A : Type'} (_37165 : type627 _90715 A) (u : _90715 -> Prop) : (term3850 _90715 A _37165 u) = (term3896 _90715 A _37165 u).
Proof. exact (fun_ext (fun f : _90715 -> A => @lem3525262 _90715 A _37165 u f)). Qed.
Lemma lem3525264 {_90715 A : Type'} : (@all (_90715 -> A)) = (@all (_90715 -> A)).
Proof. exact (eq_refl (@all (_90715 -> A))). Qed.
Lemma lem3525265 {_90715 A : Type'} (_37165 : type627 _90715 A) (u : _90715 -> Prop) : (term3851 _90715 A _37165 u) = (term3897 _90715 A _37165 u).
Proof. exact (MK_COMB (@lem3525264 _90715 A) (@lem3525263 _90715 A _37165 u)). Qed.
Lemma lem3525267 {A : Type'} (P : A -> Prop) (Q : A -> Prop) : (term726 A P Q) = (term725 A P Q).
Proof. exact (EQ_MP (@lem18953 A P Q) (@lem18952 A P Q)). Qed.
Lemma lem3525268 {_90715 A : Type'} (P : type572 _90715 A) (Q : type572 _90715 A) : (term3898 _90715 A P Q) = (term3899 _90715 A P Q).
Proof. exact (@lem3525267 (_90715 -> A) P Q). Qed.
Lemma lem3525269 {_90715 A : Type'} (_37165 : type627 _90715 A) (u : _90715 -> Prop) : (term3900 _90715 A _37165 u) = (term3901 _90715 A _37165 u).
Proof. exact (@lem3525268 _90715 A (term3902 _90715 A _37165 u) (term3903 _90715 A _37165 u)). Qed.
Lemma lem3525270 {_90715 A : Type'} (_37165 : type627 _90715 A) (u : _90715 -> Prop) (f : _90715 -> A) : (term3904 _90715 A _37165 u f) = (term3889 _90715 A _37165 u f).
Proof. exact (eq_refl (term3904 _90715 A _37165 u f)). Qed.
Lemma lem3525271 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem3525272 {_90715 A : Type'} (_37165 : type627 _90715 A) (u : _90715 -> Prop) (f : _90715 -> A) : (term3905 _90715 A _37165 u f) = (term3891 _90715 A _37165 u f).
Proof. exact (MK_COMB (@lem3525271) (@lem3525270 _90715 A _37165 u f)). Qed.
Lemma lem3525273 {_90715 A : Type'} (_37165 : type627 _90715 A) (u : _90715 -> Prop) (f : _90715 -> A) : (term3906 _90715 A _37165 u f) = (term3894 _90715 A _37165 u f).
Proof. exact (eq_refl (term3906 _90715 A _37165 u f)). Qed.
Lemma lem3525274 {_90715 A : Type'} (_37165 : type627 _90715 A) (u : _90715 -> Prop) (f : _90715 -> A) : (term3907 _90715 A _37165 u f) = (term3895 _90715 A _37165 u f).
Proof. exact (MK_COMB (@lem3525272 _90715 A _37165 u f) (@lem3525273 _90715 A _37165 u f)). Qed.
Lemma lem3525275 {_90715 A : Type'} (_37165 : type627 _90715 A) (u : _90715 -> Prop) : (term3908 _90715 A _37165 u) = (term3896 _90715 A _37165 u).
Proof. exact (fun_ext (fun f : _90715 -> A => @lem3525274 _90715 A _37165 u f)). Qed.
Lemma lem3525276 {_90715 A : Type'} : (@all (_90715 -> A)) = (@all (_90715 -> A)).
Proof. exact (eq_refl (@all (_90715 -> A))). Qed.
Lemma lem3525277 {_90715 A : Type'} (_37165 : type627 _90715 A) (u : _90715 -> Prop) : (term3900 _90715 A _37165 u) = (term3897 _90715 A _37165 u).
Proof. exact (MK_COMB (@lem3525276 _90715 A) (@lem3525275 _90715 A _37165 u)). Qed.
Lemma lem3525278 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem3525279 {_90715 A : Type'} (_37165 : type627 _90715 A) (u : _90715 -> Prop) : (term3909 _90715 A _37165 u) = (term3910 _90715 A _37165 u).
Proof. exact (MK_COMB (@lem3525278) (@lem3525277 _90715 A _37165 u)). Qed.
Lemma lem3525280 {_90715 A : Type'} (_37165 : type627 _90715 A) (u : _90715 -> Prop) (f : _90715 -> A) : (term3904 _90715 A _37165 u f) = (term3889 _90715 A _37165 u f).
Proof. exact (eq_refl (term3904 _90715 A _37165 u f)). Qed.
Lemma lem3525281 {_90715 A : Type'} (_37165 : type627 _90715 A) (u : _90715 -> Prop) : (term3911 _90715 A _37165 u) = (term3902 _90715 A _37165 u).
Proof. exact (fun_ext (fun f : _90715 -> A => @lem3525280 _90715 A _37165 u f)). Qed.
Lemma lem3525282 {_90715 A : Type'} : (@all (_90715 -> A)) = (@all (_90715 -> A)).
Proof. exact (eq_refl (@all (_90715 -> A))). Qed.
Lemma lem3525283 {_90715 A : Type'} (_37165 : type627 _90715 A) (u : _90715 -> Prop) : (term3912 _90715 A _37165 u) = (term3913 _90715 A _37165 u).
Proof. exact (MK_COMB (@lem3525282 _90715 A) (@lem3525281 _90715 A _37165 u)). Qed.
Lemma lem3525284 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem3525285 {_90715 A : Type'} (_37165 : type627 _90715 A) (u : _90715 -> Prop) : (term3914 _90715 A _37165 u) = (term3915 _90715 A _37165 u).
Proof. exact (MK_COMB (@lem3525284) (@lem3525283 _90715 A _37165 u)). Qed.
Lemma lem3525286 {_90715 A : Type'} (_37165 : type627 _90715 A) (u : _90715 -> Prop) (f : _90715 -> A) : (term3906 _90715 A _37165 u f) = (term3894 _90715 A _37165 u f).
Proof. exact (eq_refl (term3906 _90715 A _37165 u f)). Qed.
Lemma lem3525287 {_90715 A : Type'} (_37165 : type627 _90715 A) (u : _90715 -> Prop) : (term3916 _90715 A _37165 u) = (term3903 _90715 A _37165 u).
Proof. exact (fun_ext (fun f : _90715 -> A => @lem3525286 _90715 A _37165 u f)). Qed.
Lemma lem3525288 {_90715 A : Type'} : (@all (_90715 -> A)) = (@all (_90715 -> A)).
Proof. exact (eq_refl (@all (_90715 -> A))). Qed.
Lemma lem3525289 {_90715 A : Type'} (_37165 : type627 _90715 A) (u : _90715 -> Prop) : (term3917 _90715 A _37165 u) = (term3918 _90715 A _37165 u).
Proof. exact (MK_COMB (@lem3525288 _90715 A) (@lem3525287 _90715 A _37165 u)). Qed.
Lemma lem3525290 {_90715 A : Type'} (_37165 : type627 _90715 A) (u : _90715 -> Prop) : (term3901 _90715 A _37165 u) = (term3919 _90715 A _37165 u).
Proof. exact (MK_COMB (@lem3525285 _90715 A _37165 u) (@lem3525289 _90715 A _37165 u)). Qed.
Lemma lem3525291 {_90715 A : Type'} (_37165 : type627 _90715 A) (u : _90715 -> Prop) : ((term3900 _90715 A _37165 u) = (term3901 _90715 A _37165 u)) = ((term3897 _90715 A _37165 u) = (term3919 _90715 A _37165 u)).
Proof. exact (MK_COMB (@lem3525279 _90715 A _37165 u) (@lem3525290 _90715 A _37165 u)). Qed.
Lemma lem3525292 {_90715 A : Type'} (_37165 : type627 _90715 A) (u : _90715 -> Prop) : (term3897 _90715 A _37165 u) = (term3919 _90715 A _37165 u).
Proof. exact (EQ_MP (@lem3525291 _90715 A _37165 u) (@lem3525269 _90715 A _37165 u)). Qed.
Lemma lem3525413 {_90715 A : Type'} (_37165 : type627 _90715 A) (u : _90715 -> Prop) : (term3851 _90715 A _37165 u) = (term3919 _90715 A _37165 u).
Proof. exact (TRANS (@lem3525265 _90715 A _37165 u) (@lem3525292 _90715 A _37165 u)). Qed.
Lemma lem3525414 {_90715 A : Type'} (_37165 : type627 _90715 A) : (term3852 _90715 A _37165) = (term3920 _90715 A _37165).
Proof. exact (fun_ext (fun u : _90715 -> Prop => @lem3525413 _90715 A _37165 u)). Qed.
Lemma lem3525415 {_90715 : Type'} : (@all (_90715 -> Prop)) = (@all (_90715 -> Prop)).
Proof. exact (eq_refl (@all (_90715 -> Prop))). Qed.
Lemma lem3525416 {_90715 A : Type'} (_37165 : type627 _90715 A) : (term3853 _90715 A _37165) = (term3921 _90715 A _37165).
Proof. exact (MK_COMB (@lem3525415 _90715) (@lem3525414 _90715 A _37165)). Qed.
Lemma lem3525418 {A : Type'} (P : A -> Prop) (Q : A -> Prop) : (term726 A P Q) = (term725 A P Q).
Proof. exact (EQ_MP (@lem18953 A P Q) (@lem18952 A P Q)). Qed.
Lemma lem3525419 {_90715 : Type'} (P : type686 _90715) (Q : type686 _90715) : (term2898 _90715 P Q) = (term2899 _90715 P Q).
Proof. exact (@lem3525418 (_90715 -> Prop) P Q). Qed.
Lemma lem3525420 {_90715 A : Type'} (_37165 : type627 _90715 A) : (term3922 _90715 A _37165) = (term3923 _90715 A _37165).
Proof. exact (@lem3525419 _90715 (term3924 _90715 A _37165) (term3925 _90715 A _37165)). Qed.
Lemma lem3525421 {_90715 A : Type'} (_37165 : type627 _90715 A) (u : _90715 -> Prop) : (term3926 _90715 A _37165 u) = (term3913 _90715 A _37165 u).
Proof. exact (eq_refl (term3926 _90715 A _37165 u)). Qed.
Lemma lem3525422 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem3525423 {_90715 A : Type'} (_37165 : type627 _90715 A) (u : _90715 -> Prop) : (term3927 _90715 A _37165 u) = (term3915 _90715 A _37165 u).
Proof. exact (MK_COMB (@lem3525422) (@lem3525421 _90715 A _37165 u)). Qed.
Lemma lem3525424 {_90715 A : Type'} (_37165 : type627 _90715 A) (u : _90715 -> Prop) : (term3928 _90715 A _37165 u) = (term3918 _90715 A _37165 u).
Proof. exact (eq_refl (term3928 _90715 A _37165 u)). Qed.
Lemma lem3525425 {_90715 A : Type'} (_37165 : type627 _90715 A) (u : _90715 -> Prop) : (term3929 _90715 A _37165 u) = (term3919 _90715 A _37165 u).
Proof. exact (MK_COMB (@lem3525423 _90715 A _37165 u) (@lem3525424 _90715 A _37165 u)). Qed.
Lemma lem3525426 {_90715 A : Type'} (_37165 : type627 _90715 A) : (term3930 _90715 A _37165) = (term3920 _90715 A _37165).
Proof. exact (fun_ext (fun u : _90715 -> Prop => @lem3525425 _90715 A _37165 u)). Qed.
Lemma lem3525427 {_90715 : Type'} : (@all (_90715 -> Prop)) = (@all (_90715 -> Prop)).
Proof. exact (eq_refl (@all (_90715 -> Prop))). Qed.
Lemma lem3525428 {_90715 A : Type'} (_37165 : type627 _90715 A) : (term3922 _90715 A _37165) = (term3921 _90715 A _37165).
Proof. exact (MK_COMB (@lem3525427 _90715) (@lem3525426 _90715 A _37165)). Qed.
Lemma lem3525429 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem3525430 {_90715 A : Type'} (_37165 : type627 _90715 A) : (term3931 _90715 A _37165) = (term3932 _90715 A _37165).
Proof. exact (MK_COMB (@lem3525429) (@lem3525428 _90715 A _37165)). Qed.
Lemma lem3525431 {_90715 A : Type'} (_37165 : type627 _90715 A) (u : _90715 -> Prop) : (term3926 _90715 A _37165 u) = (term3913 _90715 A _37165 u).
Proof. exact (eq_refl (term3926 _90715 A _37165 u)). Qed.
Lemma lem3525432 {_90715 A : Type'} (_37165 : type627 _90715 A) : (term3933 _90715 A _37165) = (term3924 _90715 A _37165).
Proof. exact (fun_ext (fun u : _90715 -> Prop => @lem3525431 _90715 A _37165 u)). Qed.
Lemma lem3525433 {_90715 : Type'} : (@all (_90715 -> Prop)) = (@all (_90715 -> Prop)).
Proof. exact (eq_refl (@all (_90715 -> Prop))). Qed.
Lemma lem3525434 {_90715 A : Type'} (_37165 : type627 _90715 A) : (term3934 _90715 A _37165) = (term3935 _90715 A _37165).
Proof. exact (MK_COMB (@lem3525433 _90715) (@lem3525432 _90715 A _37165)). Qed.
Lemma lem3525435 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem3525436 {_90715 A : Type'} (_37165 : type627 _90715 A) : (term3936 _90715 A _37165) = (term3937 _90715 A _37165).
Proof. exact (MK_COMB (@lem3525435) (@lem3525434 _90715 A _37165)). Qed.
Lemma lem3525437 {_90715 A : Type'} (_37165 : type627 _90715 A) (u : _90715 -> Prop) : (term3928 _90715 A _37165 u) = (term3918 _90715 A _37165 u).
Proof. exact (eq_refl (term3928 _90715 A _37165 u)). Qed.
Lemma lem3525438 {_90715 A : Type'} (_37165 : type627 _90715 A) : (term3938 _90715 A _37165) = (term3925 _90715 A _37165).
Proof. exact (fun_ext (fun u : _90715 -> Prop => @lem3525437 _90715 A _37165 u)). Qed.
Lemma lem3525439 {_90715 : Type'} : (@all (_90715 -> Prop)) = (@all (_90715 -> Prop)).
Proof. exact (eq_refl (@all (_90715 -> Prop))). Qed.
Lemma lem3525440 {_90715 A : Type'} (_37165 : type627 _90715 A) : (term3939 _90715 A _37165) = (term3940 _90715 A _37165).
Proof. exact (MK_COMB (@lem3525439 _90715) (@lem3525438 _90715 A _37165)). Qed.
Lemma lem3525441 {_90715 A : Type'} (_37165 : type627 _90715 A) : (term3923 _90715 A _37165) = (term3941 _90715 A _37165).
Proof. exact (MK_COMB (@lem3525436 _90715 A _37165) (@lem3525440 _90715 A _37165)). Qed.
Lemma lem3525442 {_90715 A : Type'} (_37165 : type627 _90715 A) : ((term3922 _90715 A _37165) = (term3923 _90715 A _37165)) = ((term3921 _90715 A _37165) = (term3941 _90715 A _37165)).
Proof. exact (MK_COMB (@lem3525430 _90715 A _37165) (@lem3525441 _90715 A _37165)). Qed.
Lemma lem3525443 {_90715 A : Type'} (_37165 : type627 _90715 A) : (term3921 _90715 A _37165) = (term3941 _90715 A _37165).
Proof. exact (EQ_MP (@lem3525442 _90715 A _37165) (@lem3525420 _90715 A _37165)). Qed.
Lemma lem3525572 {_90715 A : Type'} (_37165 : type627 _90715 A) : (term3853 _90715 A _37165) = (term3941 _90715 A _37165).
Proof. exact (TRANS (@lem3525416 _90715 A _37165) (@lem3525443 _90715 A _37165)). Qed.
Lemma lem3525574 {A : Type'} (P : Prop) (Q : A -> Prop) : (term434 A P Q) = (term435 A P Q).
Proof. exact (EQ_MP (@lem18911 A P Q) (@lem18910 A P Q)). Qed.
Lemma lem3525575 {_90715 : Type'} (P : Prop) (Q : _90715 -> Prop) : (term434 _90715 P Q) = (term435 _90715 P Q).
Proof. exact (@lem3525574 _90715 P Q). Qed.
Lemma lem3525576 {_90715 A : Type'} (_37165 : type627 _90715 A) (GEN_PVAR_84 : _90715) (u : _90715 -> Prop) (f : _90715 -> A) (t : _90715 -> Prop) : (term3942 _90715 A _37165 GEN_PVAR_84 u f t) = (term3943 _90715 A _37165 GEN_PVAR_84 u f t).
Proof. exact (@lem3525575 _90715 (term3944 _90715 A _37165 u f t GEN_PVAR_84) (term63 _90715 A GEN_PVAR_84 u f t)). Qed.
Lemma lem3525577 {_90715 A : Type'} (GEN_PVAR_84 : _90715) (u : _90715 -> Prop) (f : _90715 -> A) (t : _90715 -> Prop) (x : _90715) : (term3831 _90715 A GEN_PVAR_84 u f t x) = (term61 _90715 A GEN_PVAR_84 u f t x).
Proof. exact (eq_refl (term3831 _90715 A GEN_PVAR_84 u f t x)). Qed.
Lemma lem3525578 {_90715 A : Type'} (GEN_PVAR_84 : _90715) (u : _90715 -> Prop) (f : _90715 -> A) (t : _90715 -> Prop) : (term3945 _90715 A GEN_PVAR_84 u f t) = (term63 _90715 A GEN_PVAR_84 u f t).
Proof. exact (fun_ext (fun x : _90715 => @lem3525577 _90715 A GEN_PVAR_84 u f t x)). Qed.
Lemma lem3525579 {_90715 : Type'} : (@ex _90715) = (@ex _90715).
Proof. exact (eq_refl (@ex _90715)). Qed.
Lemma lem3525580 {_90715 A : Type'} (GEN_PVAR_84 : _90715) (u : _90715 -> Prop) (f : _90715 -> A) (t : _90715 -> Prop) : (term3946 _90715 A GEN_PVAR_84 u f t) = (term65 _90715 A GEN_PVAR_84 u f t).
Proof. exact (MK_COMB (@lem3525579 _90715) (@lem3525578 _90715 A GEN_PVAR_84 u f t)). Qed.
Lemma lem3525581 {_90715 A : Type'} (_37165 : type627 _90715 A) (u : _90715 -> Prop) (f : _90715 -> A) (t : _90715 -> Prop) (GEN_PVAR_84 : _90715) : (term3837 _90715 A _37165 u f t GEN_PVAR_84) = (term3837 _90715 A _37165 u f t GEN_PVAR_84).
Proof. exact (eq_refl (term3837 _90715 A _37165 u f t GEN_PVAR_84)). Qed.
Lemma lem3525582 {_90715 A : Type'} (_37165 : type627 _90715 A) (GEN_PVAR_84 : _90715) (u : _90715 -> Prop) (f : _90715 -> A) (t : _90715 -> Prop) : (term3942 _90715 A _37165 GEN_PVAR_84 u f t) = (term3838 _90715 A _37165 GEN_PVAR_84 u f t).
Proof. exact (MK_COMB (@lem3525581 _90715 A _37165 u f t GEN_PVAR_84) (@lem3525580 _90715 A GEN_PVAR_84 u f t)). Qed.
Lemma lem3525583 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem3525584 {_90715 A : Type'} (_37165 : type627 _90715 A) (GEN_PVAR_84 : _90715) (u : _90715 -> Prop) (f : _90715 -> A) (t : _90715 -> Prop) : (term3947 _90715 A _37165 GEN_PVAR_84 u f t) = (term3948 _90715 A _37165 GEN_PVAR_84 u f t).
Proof. exact (MK_COMB (@lem3525583) (@lem3525582 _90715 A _37165 GEN_PVAR_84 u f t)). Qed.
Lemma lem3525585 {_90715 A : Type'} (GEN_PVAR_84 : _90715) (u : _90715 -> Prop) (f : _90715 -> A) (t : _90715 -> Prop) (x : _90715) : (term3831 _90715 A GEN_PVAR_84 u f t x) = (term61 _90715 A GEN_PVAR_84 u f t x).
Proof. exact (eq_refl (term3831 _90715 A GEN_PVAR_84 u f t x)). Qed.
Lemma lem3525586 {_90715 A : Type'} (_37165 : type627 _90715 A) (u : _90715 -> Prop) (f : _90715 -> A) (t : _90715 -> Prop) (GEN_PVAR_84 : _90715) : (term3837 _90715 A _37165 u f t GEN_PVAR_84) = (term3837 _90715 A _37165 u f t GEN_PVAR_84).
Proof. exact (eq_refl (term3837 _90715 A _37165 u f t GEN_PVAR_84)). Qed.
Lemma lem3525587 {_90715 A : Type'} (_37165 : type627 _90715 A) (GEN_PVAR_84 : _90715) (u : _90715 -> Prop) (f : _90715 -> A) (t : _90715 -> Prop) (x : _90715) : (term3949 _90715 A _37165 GEN_PVAR_84 u f t x) = (term3950 _90715 A _37165 GEN_PVAR_84 u f t x).
Proof. exact (MK_COMB (@lem3525586 _90715 A _37165 u f t GEN_PVAR_84) (@lem3525585 _90715 A GEN_PVAR_84 u f t x)). Qed.
Lemma lem3525588 {_90715 A : Type'} (_37165 : type627 _90715 A) (GEN_PVAR_84 : _90715) (u : _90715 -> Prop) (f : _90715 -> A) (t : _90715 -> Prop) : (term3951 _90715 A _37165 GEN_PVAR_84 u f t) = (term3952 _90715 A _37165 GEN_PVAR_84 u f t).
Proof. exact (fun_ext (fun x : _90715 => @lem3525587 _90715 A _37165 GEN_PVAR_84 u f t x)). Qed.
Lemma lem3525589 {_90715 : Type'} : (@ex _90715) = (@ex _90715).
Proof. exact (eq_refl (@ex _90715)). Qed.
Lemma lem3525590 {_90715 A : Type'} (_37165 : type627 _90715 A) (GEN_PVAR_84 : _90715) (u : _90715 -> Prop) (f : _90715 -> A) (t : _90715 -> Prop) : (term3943 _90715 A _37165 GEN_PVAR_84 u f t) = (term3953 _90715 A _37165 GEN_PVAR_84 u f t).
Proof. exact (MK_COMB (@lem3525589 _90715) (@lem3525588 _90715 A _37165 GEN_PVAR_84 u f t)). Qed.
Lemma lem3525591 {_90715 A : Type'} (_37165 : type627 _90715 A) (GEN_PVAR_84 : _90715) (u : _90715 -> Prop) (f : _90715 -> A) (t : _90715 -> Prop) : ((term3942 _90715 A _37165 GEN_PVAR_84 u f t) = (term3943 _90715 A _37165 GEN_PVAR_84 u f t)) = ((term3838 _90715 A _37165 GEN_PVAR_84 u f t) = (term3953 _90715 A _37165 GEN_PVAR_84 u f t)).
Proof. exact (MK_COMB (@lem3525584 _90715 A _37165 GEN_PVAR_84 u f t) (@lem3525590 _90715 A _37165 GEN_PVAR_84 u f t)). Qed.
Lemma lem3525592 {_90715 A : Type'} (_37165 : type627 _90715 A) (GEN_PVAR_84 : _90715) (u : _90715 -> Prop) (f : _90715 -> A) (t : _90715 -> Prop) : (term3838 _90715 A _37165 GEN_PVAR_84 u f t) = (term3953 _90715 A _37165 GEN_PVAR_84 u f t).
Proof. exact (EQ_MP (@lem3525591 _90715 A _37165 GEN_PVAR_84 u f t) (@lem3525576 _90715 A _37165 GEN_PVAR_84 u f t)). Qed.
Lemma lem3525593 {_90715 A : Type'} (_37165 : type627 _90715 A) (u : _90715 -> Prop) (f : _90715 -> A) (t : _90715 -> Prop) : (term3857 _90715 A _37165 u f t) = (term3954 _90715 A _37165 u f t).
Proof. exact (fun_ext (fun GEN_PVAR_84 : _90715 => @lem3525592 _90715 A _37165 GEN_PVAR_84 u f t)). Qed.
Lemma lem3525594 {_90715 : Type'} : (@all _90715) = (@all _90715).
Proof. exact (eq_refl (@all _90715)). Qed.
Lemma lem3525595 {_90715 A : Type'} (_37165 : type627 _90715 A) (u : _90715 -> Prop) (f : _90715 -> A) (t : _90715 -> Prop) : (term3872 _90715 A _37165 u f t) = (term3955 _90715 A _37165 u f t).
Proof. exact (MK_COMB (@lem3525594 _90715) (@lem3525593 _90715 A _37165 u f t)). Qed.
Lemma lem3525597 {A B : Type'} (P : type1413 A B) : (term453 A B P) = (term454 A B P).
Proof. exact (EQ_MP (@lem18899 A B P) (@lem18898 A B P)). Qed.
Lemma lem3525598 {_90715 : Type'} (P : type1402 _90715) : (term3480 _90715 P) = (term3481 _90715 P).
Proof. exact (@lem3525597 _90715 _90715 P). Qed.
Lemma lem3525599 {_90715 A : Type'} (_37165 : type627 _90715 A) (u : _90715 -> Prop) (f : _90715 -> A) (t : _90715 -> Prop) : (term3956 _90715 A _37165 u f t) = (term3957 _90715 A _37165 u f t).
Proof. exact (@lem3525598 _90715 (term3958 _90715 A _37165 u f t)). Qed.
Lemma lem3525600 {_90715 A : Type'} (_37165 : type627 _90715 A) (GEN_PVAR_84 : _90715) (u : _90715 -> Prop) (f : _90715 -> A) (t : _90715 -> Prop) : (term3959 _90715 A _37165 u f t GEN_PVAR_84) = (term3952 _90715 A _37165 GEN_PVAR_84 u f t).
Proof. exact (eq_refl (term3959 _90715 A _37165 u f t GEN_PVAR_84)). Qed.
Lemma lem3525601 {_90715 : Type'} (x : _90715) : x = x.
Proof. exact (eq_refl x). Qed.
Lemma lem3525602 {_90715 A : Type'} (_37165 : type627 _90715 A) (GEN_PVAR_84 : _90715) (u : _90715 -> Prop) (f : _90715 -> A) (t : _90715 -> Prop) (x : _90715) : (term3960 _90715 A _37165 u f t GEN_PVAR_84 x) = (term3961 _90715 A _37165 GEN_PVAR_84 u f t x).
Proof. exact (MK_COMB (@lem3525600 _90715 A _37165 GEN_PVAR_84 u f t) (@lem3525601 _90715 x)). Qed.
Lemma lem3525603 {_90715 A : Type'} (_37165 : type627 _90715 A) (GEN_PVAR_84 : _90715) (u : _90715 -> Prop) (f : _90715 -> A) (t : _90715 -> Prop) (x : _90715) : (term3961 _90715 A _37165 GEN_PVAR_84 u f t x) = (term3950 _90715 A _37165 GEN_PVAR_84 u f t x).
Proof. exact (eq_refl (term3961 _90715 A _37165 GEN_PVAR_84 u f t x)). Qed.
Lemma lem3525604 {_90715 A : Type'} (_37165 : type627 _90715 A) (GEN_PVAR_84 : _90715) (u : _90715 -> Prop) (f : _90715 -> A) (t : _90715 -> Prop) (x : _90715) : (term3960 _90715 A _37165 u f t GEN_PVAR_84 x) = (term3950 _90715 A _37165 GEN_PVAR_84 u f t x).
Proof. exact (TRANS (@lem3525602 _90715 A _37165 GEN_PVAR_84 u f t x) (@lem3525603 _90715 A _37165 GEN_PVAR_84 u f t x)). Qed.
Lemma lem3525605 {_90715 A : Type'} (_37165 : type627 _90715 A) (GEN_PVAR_84 : _90715) (u : _90715 -> Prop) (f : _90715 -> A) (t : _90715 -> Prop) : (term3962 _90715 A _37165 u f t GEN_PVAR_84) = (term3952 _90715 A _37165 GEN_PVAR_84 u f t).
Proof. exact (fun_ext (fun x : _90715 => @lem3525604 _90715 A _37165 GEN_PVAR_84 u f t x)). Qed.
Lemma lem3525606 {_90715 : Type'} : (@ex _90715) = (@ex _90715).
Proof. exact (eq_refl (@ex _90715)). Qed.
Lemma lem3525607 {_90715 A : Type'} (_37165 : type627 _90715 A) (GEN_PVAR_84 : _90715) (u : _90715 -> Prop) (f : _90715 -> A) (t : _90715 -> Prop) : (term3963 _90715 A _37165 u f t GEN_PVAR_84) = (term3953 _90715 A _37165 GEN_PVAR_84 u f t).
Proof. exact (MK_COMB (@lem3525606 _90715) (@lem3525605 _90715 A _37165 GEN_PVAR_84 u f t)). Qed.
Lemma lem3525608 {_90715 A : Type'} (_37165 : type627 _90715 A) (u : _90715 -> Prop) (f : _90715 -> A) (t : _90715 -> Prop) : (term3964 _90715 A _37165 u f t) = (term3954 _90715 A _37165 u f t).
Proof. exact (fun_ext (fun GEN_PVAR_84 : _90715 => @lem3525607 _90715 A _37165 GEN_PVAR_84 u f t)). Qed.
Lemma lem3525609 {_90715 : Type'} : (@all _90715) = (@all _90715).
Proof. exact (eq_refl (@all _90715)). Qed.
Lemma lem3525610 {_90715 A : Type'} (_37165 : type627 _90715 A) (u : _90715 -> Prop) (f : _90715 -> A) (t : _90715 -> Prop) : (term3956 _90715 A _37165 u f t) = (term3955 _90715 A _37165 u f t).
Proof. exact (MK_COMB (@lem3525609 _90715) (@lem3525608 _90715 A _37165 u f t)). Qed.
Lemma lem3525611 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem3525612 {_90715 A : Type'} (_37165 : type627 _90715 A) (u : _90715 -> Prop) (f : _90715 -> A) (t : _90715 -> Prop) : (term3965 _90715 A _37165 u f t) = (term3966 _90715 A _37165 u f t).
Proof. exact (MK_COMB (@lem3525611) (@lem3525610 _90715 A _37165 u f t)). Qed.
Lemma lem3525613 {_90715 A : Type'} (_37165 : type627 _90715 A) (GEN_PVAR_84 : _90715) (u : _90715 -> Prop) (f : _90715 -> A) (t : _90715 -> Prop) : (term3959 _90715 A _37165 u f t GEN_PVAR_84) = (term3952 _90715 A _37165 GEN_PVAR_84 u f t).
Proof. exact (eq_refl (term3959 _90715 A _37165 u f t GEN_PVAR_84)). Qed.
Lemma lem3525614 {_90715 : Type'} (x : _90715 -> _90715) (GEN_PVAR_84 : _90715) : (x GEN_PVAR_84) = (x GEN_PVAR_84).
Proof. exact (eq_refl (x GEN_PVAR_84)). Qed.
Lemma lem3525615 {_90715 A : Type'} (_37165 : type627 _90715 A) (u : _90715 -> Prop) (f : _90715 -> A) (t : _90715 -> Prop) (x : _90715 -> _90715) (GEN_PVAR_84 : _90715) : (term3967 _90715 A _37165 u f t x GEN_PVAR_84) = (term3968 _90715 A _37165 u f t x GEN_PVAR_84).
Proof. exact (MK_COMB (@lem3525613 _90715 A _37165 GEN_PVAR_84 u f t) (@lem3525614 _90715 x GEN_PVAR_84)). Qed.
Lemma lem3525616 {_90715 A : Type'} (_37165 : type627 _90715 A) (u : _90715 -> Prop) (f : _90715 -> A) (t : _90715 -> Prop) (x : _90715 -> _90715) (GEN_PVAR_84 : _90715) : (term3968 _90715 A _37165 u f t x GEN_PVAR_84) = (term3969 _90715 A _37165 u f t x GEN_PVAR_84).
Proof. exact (eq_refl (term3968 _90715 A _37165 u f t x GEN_PVAR_84)). Qed.
Lemma lem3525617 {_90715 A : Type'} (_37165 : type627 _90715 A) (u : _90715 -> Prop) (f : _90715 -> A) (t : _90715 -> Prop) (x : _90715 -> _90715) (GEN_PVAR_84 : _90715) : (term3967 _90715 A _37165 u f t x GEN_PVAR_84) = (term3969 _90715 A _37165 u f t x GEN_PVAR_84).
Proof. exact (TRANS (@lem3525615 _90715 A _37165 u f t x GEN_PVAR_84) (@lem3525616 _90715 A _37165 u f t x GEN_PVAR_84)). Qed.
Lemma lem3525618 {_90715 A : Type'} (_37165 : type627 _90715 A) (u : _90715 -> Prop) (f : _90715 -> A) (t : _90715 -> Prop) (x : _90715 -> _90715) : (term3970 _90715 A _37165 u f t x) = (term3971 _90715 A _37165 u f t x).
Proof. exact (fun_ext (fun GEN_PVAR_84 : _90715 => @lem3525617 _90715 A _37165 u f t x GEN_PVAR_84)). Qed.
Lemma lem3525619 {_90715 : Type'} : (@all _90715) = (@all _90715).
Proof. exact (eq_refl (@all _90715)). Qed.
Lemma lem3525620 {_90715 A : Type'} (_37165 : type627 _90715 A) (u : _90715 -> Prop) (f : _90715 -> A) (t : _90715 -> Prop) (x : _90715 -> _90715) : (term3972 _90715 A _37165 u f t x) = (term3973 _90715 A _37165 u f t x).
Proof. exact (MK_COMB (@lem3525619 _90715) (@lem3525618 _90715 A _37165 u f t x)). Qed.
Lemma lem3525621 {_90715 A : Type'} (_37165 : type627 _90715 A) (u : _90715 -> Prop) (f : _90715 -> A) (t : _90715 -> Prop) : (term3974 _90715 A _37165 u f t) = (term3975 _90715 A _37165 u f t).
Proof. exact (fun_ext (fun x : _90715 -> _90715 => @lem3525620 _90715 A _37165 u f t x)). Qed.
Lemma lem3525622 {_90715 : Type'} : (@ex (_90715 -> _90715)) = (@ex (_90715 -> _90715)).
Proof. exact (eq_refl (@ex (_90715 -> _90715))). Qed.
Lemma lem3525623 {_90715 A : Type'} (_37165 : type627 _90715 A) (u : _90715 -> Prop) (f : _90715 -> A) (t : _90715 -> Prop) : (term3957 _90715 A _37165 u f t) = (term3976 _90715 A _37165 u f t).
Proof. exact (MK_COMB (@lem3525622 _90715) (@lem3525621 _90715 A _37165 u f t)). Qed.
Lemma lem3525624 {_90715 A : Type'} (_37165 : type627 _90715 A) (u : _90715 -> Prop) (f : _90715 -> A) (t : _90715 -> Prop) : ((term3956 _90715 A _37165 u f t) = (term3957 _90715 A _37165 u f t)) = ((term3955 _90715 A _37165 u f t) = (term3976 _90715 A _37165 u f t)).
Proof. exact (MK_COMB (@lem3525612 _90715 A _37165 u f t) (@lem3525623 _90715 A _37165 u f t)). Qed.
Lemma lem3525625 {_90715 A : Type'} (_37165 : type627 _90715 A) (u : _90715 -> Prop) (f : _90715 -> A) (t : _90715 -> Prop) : (term3955 _90715 A _37165 u f t) = (term3976 _90715 A _37165 u f t).
Proof. exact (EQ_MP (@lem3525624 _90715 A _37165 u f t) (@lem3525599 _90715 A _37165 u f t)). Qed.
Lemma lem3525626 {_90715 A : Type'} (_37165 : type627 _90715 A) (u : _90715 -> Prop) (f : _90715 -> A) (t : _90715 -> Prop) : (term3872 _90715 A _37165 u f t) = (term3976 _90715 A _37165 u f t).
Proof. exact (TRANS (@lem3525595 _90715 A _37165 u f t) (@lem3525625 _90715 A _37165 u f t)). Qed.
Lemma lem3525627 {_90715 A : Type'} (_37165 : type627 _90715 A) (u : _90715 -> Prop) (f : _90715 -> A) : (term3879 _90715 A _37165 u f) = (term3977 _90715 A _37165 u f).
Proof. exact (fun_ext (fun t : _90715 -> Prop => @lem3525626 _90715 A _37165 u f t)). Qed.
Lemma lem3525628 {_90715 : Type'} : (@all (_90715 -> Prop)) = (@all (_90715 -> Prop)).
Proof. exact (eq_refl (@all (_90715 -> Prop))). Qed.
Lemma lem3525629 {_90715 A : Type'} (_37165 : type627 _90715 A) (u : _90715 -> Prop) (f : _90715 -> A) : (term3894 _90715 A _37165 u f) = (term3978 _90715 A _37165 u f).
Proof. exact (MK_COMB (@lem3525628 _90715) (@lem3525627 _90715 A _37165 u f)). Qed.
Lemma lem3525631 {A B : Type'} (P : type1413 A B) : (term453 A B P) = (term454 A B P).
Proof. exact (EQ_MP (@lem18899 A B P) (@lem18898 A B P)). Qed.
Lemma lem3525632 {_90715 : Type'} (P : type624 _90715) : (term3505 _90715 P) = (term3506 _90715 P).
Proof. exact (@lem3525631 (_90715 -> Prop) (_90715 -> _90715) P). Qed.
Lemma lem3525633 {_90715 A : Type'} (_37165 : type627 _90715 A) (u : _90715 -> Prop) (f : _90715 -> A) : (term3979 _90715 A _37165 u f) = (term3980 _90715 A _37165 u f).
Proof. exact (@lem3525632 _90715 (term3981 _90715 A _37165 u f)). Qed.
Lemma lem3525634 {_90715 A : Type'} (_37165 : type627 _90715 A) (u : _90715 -> Prop) (f : _90715 -> A) (t : _90715 -> Prop) : (term3982 _90715 A _37165 u f t) = (term3975 _90715 A _37165 u f t).
Proof. exact (eq_refl (term3982 _90715 A _37165 u f t)). Qed.
Lemma lem3525635 {_90715 : Type'} (x : _90715 -> _90715) : x = x.
Proof. exact (eq_refl x). Qed.
Lemma lem3525636 {_90715 A : Type'} (_37165 : type627 _90715 A) (u : _90715 -> Prop) (f : _90715 -> A) (t : _90715 -> Prop) (x : _90715 -> _90715) : (term3983 _90715 A _37165 u f t x) = (term3984 _90715 A _37165 u f t x).
Proof. exact (MK_COMB (@lem3525634 _90715 A _37165 u f t) (@lem3525635 _90715 x)). Qed.
Lemma lem3525637 {_90715 A : Type'} (_37165 : type627 _90715 A) (u : _90715 -> Prop) (f : _90715 -> A) (t : _90715 -> Prop) (x : _90715 -> _90715) : (term3984 _90715 A _37165 u f t x) = (term3973 _90715 A _37165 u f t x).
Proof. exact (eq_refl (term3984 _90715 A _37165 u f t x)). Qed.
Lemma lem3525638 {_90715 A : Type'} (_37165 : type627 _90715 A) (u : _90715 -> Prop) (f : _90715 -> A) (t : _90715 -> Prop) (x : _90715 -> _90715) : (term3983 _90715 A _37165 u f t x) = (term3973 _90715 A _37165 u f t x).
Proof. exact (TRANS (@lem3525636 _90715 A _37165 u f t x) (@lem3525637 _90715 A _37165 u f t x)). Qed.
Lemma lem3525639 {_90715 A : Type'} (_37165 : type627 _90715 A) (u : _90715 -> Prop) (f : _90715 -> A) (t : _90715 -> Prop) : (term3985 _90715 A _37165 u f t) = (term3975 _90715 A _37165 u f t).
Proof. exact (fun_ext (fun x : _90715 -> _90715 => @lem3525638 _90715 A _37165 u f t x)). Qed.
Lemma lem3525640 {_90715 : Type'} : (@ex (_90715 -> _90715)) = (@ex (_90715 -> _90715)).
Proof. exact (eq_refl (@ex (_90715 -> _90715))). Qed.
Lemma lem3525641 {_90715 A : Type'} (_37165 : type627 _90715 A) (u : _90715 -> Prop) (f : _90715 -> A) (t : _90715 -> Prop) : (term3986 _90715 A _37165 u f t) = (term3976 _90715 A _37165 u f t).
Proof. exact (MK_COMB (@lem3525640 _90715) (@lem3525639 _90715 A _37165 u f t)). Qed.
Lemma lem3525642 {_90715 A : Type'} (_37165 : type627 _90715 A) (u : _90715 -> Prop) (f : _90715 -> A) : (term3987 _90715 A _37165 u f) = (term3977 _90715 A _37165 u f).
Proof. exact (fun_ext (fun t : _90715 -> Prop => @lem3525641 _90715 A _37165 u f t)). Qed.
Lemma lem3525643 {_90715 : Type'} : (@all (_90715 -> Prop)) = (@all (_90715 -> Prop)).
Proof. exact (eq_refl (@all (_90715 -> Prop))). Qed.
Lemma lem3525644 {_90715 A : Type'} (_37165 : type627 _90715 A) (u : _90715 -> Prop) (f : _90715 -> A) : (term3979 _90715 A _37165 u f) = (term3978 _90715 A _37165 u f).
Proof. exact (MK_COMB (@lem3525643 _90715) (@lem3525642 _90715 A _37165 u f)). Qed.
Lemma lem3525645 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem3525646 {_90715 A : Type'} (_37165 : type627 _90715 A) (u : _90715 -> Prop) (f : _90715 -> A) : (term3988 _90715 A _37165 u f) = (term3989 _90715 A _37165 u f).
Proof. exact (MK_COMB (@lem3525645) (@lem3525644 _90715 A _37165 u f)). Qed.
Lemma lem3525647 {_90715 A : Type'} (_37165 : type627 _90715 A) (u : _90715 -> Prop) (f : _90715 -> A) (t : _90715 -> Prop) : (term3982 _90715 A _37165 u f t) = (term3975 _90715 A _37165 u f t).
Proof. exact (eq_refl (term3982 _90715 A _37165 u f t)). Qed.
Lemma lem3525648 {_90715 : Type'} (x : type670 _90715) (t : _90715 -> Prop) : (x t) = (x t).
Proof. exact (eq_refl (x t)). Qed.
Lemma lem3525649 {_90715 A : Type'} (_37165 : type627 _90715 A) (u : _90715 -> Prop) (f : _90715 -> A) (x : type670 _90715) (t : _90715 -> Prop) : (term3990 _90715 A _37165 u f x t) = (term3991 _90715 A _37165 u f x t).
Proof. exact (MK_COMB (@lem3525647 _90715 A _37165 u f t) (@lem3525648 _90715 x t)). Qed.
Lemma lem3525650 {_90715 A : Type'} (_37165 : type627 _90715 A) (u : _90715 -> Prop) (f : _90715 -> A) (x : type670 _90715) (t : _90715 -> Prop) : (term3991 _90715 A _37165 u f x t) = (term3992 _90715 A _37165 u f x t).
Proof. exact (eq_refl (term3991 _90715 A _37165 u f x t)). Qed.
Lemma lem3525651 {_90715 A : Type'} (_37165 : type627 _90715 A) (u : _90715 -> Prop) (f : _90715 -> A) (x : type670 _90715) (t : _90715 -> Prop) : (term3990 _90715 A _37165 u f x t) = (term3992 _90715 A _37165 u f x t).
Proof. exact (TRANS (@lem3525649 _90715 A _37165 u f x t) (@lem3525650 _90715 A _37165 u f x t)). Qed.
Lemma lem3525652 {_90715 A : Type'} (_37165 : type627 _90715 A) (u : _90715 -> Prop) (f : _90715 -> A) (x : type670 _90715) : (term3993 _90715 A _37165 u f x) = (term3994 _90715 A _37165 u f x).
Proof. exact (fun_ext (fun t : _90715 -> Prop => @lem3525651 _90715 A _37165 u f x t)). Qed.
Lemma lem3525653 {_90715 : Type'} : (@all (_90715 -> Prop)) = (@all (_90715 -> Prop)).
Proof. exact (eq_refl (@all (_90715 -> Prop))). Qed.
Lemma lem3525654 {_90715 A : Type'} (_37165 : type627 _90715 A) (u : _90715 -> Prop) (f : _90715 -> A) (x : type670 _90715) : (term3995 _90715 A _37165 u f x) = (term3996 _90715 A _37165 u f x).
Proof. exact (MK_COMB (@lem3525653 _90715) (@lem3525652 _90715 A _37165 u f x)). Qed.
Lemma lem3525655 {_90715 A : Type'} (_37165 : type627 _90715 A) (u : _90715 -> Prop) (f : _90715 -> A) : (term3997 _90715 A _37165 u f) = (term3998 _90715 A _37165 u f).
Proof. exact (fun_ext (fun x : type670 _90715 => @lem3525654 _90715 A _37165 u f x)). Qed.
Lemma lem3525656 {_90715 : Type'} : (@ex ((_90715 -> Prop) -> _90715 -> _90715)) = (@ex ((_90715 -> Prop) -> _90715 -> _90715)).
Proof. exact (eq_refl (@ex ((_90715 -> Prop) -> _90715 -> _90715))). Qed.
Lemma lem3525657 {_90715 A : Type'} (_37165 : type627 _90715 A) (u : _90715 -> Prop) (f : _90715 -> A) : (term3980 _90715 A _37165 u f) = (term3999 _90715 A _37165 u f).
Proof. exact (MK_COMB (@lem3525656 _90715) (@lem3525655 _90715 A _37165 u f)). Qed.
Lemma lem3525658 {_90715 A : Type'} (_37165 : type627 _90715 A) (u : _90715 -> Prop) (f : _90715 -> A) : ((term3979 _90715 A _37165 u f) = (term3980 _90715 A _37165 u f)) = ((term3978 _90715 A _37165 u f) = (term3999 _90715 A _37165 u f)).
Proof. exact (MK_COMB (@lem3525646 _90715 A _37165 u f) (@lem3525657 _90715 A _37165 u f)). Qed.
Lemma lem3525659 {_90715 A : Type'} (_37165 : type627 _90715 A) (u : _90715 -> Prop) (f : _90715 -> A) : (term3978 _90715 A _37165 u f) = (term3999 _90715 A _37165 u f).
Proof. exact (EQ_MP (@lem3525658 _90715 A _37165 u f) (@lem3525633 _90715 A _37165 u f)). Qed.
Lemma lem3525660 {_90715 A : Type'} (_37165 : type627 _90715 A) (u : _90715 -> Prop) (f : _90715 -> A) : (term3894 _90715 A _37165 u f) = (term3999 _90715 A _37165 u f).
Proof. exact (TRANS (@lem3525629 _90715 A _37165 u f) (@lem3525659 _90715 A _37165 u f)). Qed.
Lemma lem3525661 {_90715 A : Type'} (_37165 : type627 _90715 A) (u : _90715 -> Prop) : (term3903 _90715 A _37165 u) = (term4000 _90715 A _37165 u).
Proof. exact (fun_ext (fun f : _90715 -> A => @lem3525660 _90715 A _37165 u f)). Qed.
Lemma lem3525662 {_90715 A : Type'} : (@all (_90715 -> A)) = (@all (_90715 -> A)).
Proof. exact (eq_refl (@all (_90715 -> A))). Qed.
Lemma lem3525663 {_90715 A : Type'} (_37165 : type627 _90715 A) (u : _90715 -> Prop) : (term3918 _90715 A _37165 u) = (term4001 _90715 A _37165 u).
Proof. exact (MK_COMB (@lem3525662 _90715 A) (@lem3525661 _90715 A _37165 u)). Qed.
Lemma lem3525665 {A B : Type'} (P : type1413 A B) : (term453 A B P) = (term454 A B P).
Proof. exact (EQ_MP (@lem18899 A B P) (@lem18898 A B P)). Qed.
Lemma lem3525666 {_90715 A : Type'} (P : type502 _90715 A) : (term4002 _90715 A P) = (term4003 _90715 A P).
Proof. exact (@lem3525665 (_90715 -> A) (type670 _90715) P). Qed.
Lemma lem3525667 {_90715 A : Type'} (_37165 : type627 _90715 A) (u : _90715 -> Prop) : (term4004 _90715 A _37165 u) = (term4005 _90715 A _37165 u).
Proof. exact (@lem3525666 _90715 A (term4006 _90715 A _37165 u)). Qed.
Lemma lem3525668 {_90715 A : Type'} (_37165 : type627 _90715 A) (u : _90715 -> Prop) (f : _90715 -> A) : (term4007 _90715 A _37165 u f) = (term3998 _90715 A _37165 u f).
Proof. exact (eq_refl (term4007 _90715 A _37165 u f)). Qed.
Lemma lem3525669 {_90715 : Type'} (x : type670 _90715) : x = x.
Proof. exact (eq_refl x). Qed.
Lemma lem3525670 {_90715 A : Type'} (_37165 : type627 _90715 A) (u : _90715 -> Prop) (f : _90715 -> A) (x : type670 _90715) : (term4008 _90715 A _37165 u f x) = (term4009 _90715 A _37165 u f x).
Proof. exact (MK_COMB (@lem3525668 _90715 A _37165 u f) (@lem3525669 _90715 x)). Qed.
Lemma lem3525671 {_90715 A : Type'} (_37165 : type627 _90715 A) (u : _90715 -> Prop) (f : _90715 -> A) (x : type670 _90715) : (term4009 _90715 A _37165 u f x) = (term3996 _90715 A _37165 u f x).
Proof. exact (eq_refl (term4009 _90715 A _37165 u f x)). Qed.
Lemma lem3525672 {_90715 A : Type'} (_37165 : type627 _90715 A) (u : _90715 -> Prop) (f : _90715 -> A) (x : type670 _90715) : (term4008 _90715 A _37165 u f x) = (term3996 _90715 A _37165 u f x).
Proof. exact (TRANS (@lem3525670 _90715 A _37165 u f x) (@lem3525671 _90715 A _37165 u f x)). Qed.
Lemma lem3525673 {_90715 A : Type'} (_37165 : type627 _90715 A) (u : _90715 -> Prop) (f : _90715 -> A) : (term4010 _90715 A _37165 u f) = (term3998 _90715 A _37165 u f).
Proof. exact (fun_ext (fun x : type670 _90715 => @lem3525672 _90715 A _37165 u f x)). Qed.
Lemma lem3525674 {_90715 : Type'} : (@ex ((_90715 -> Prop) -> _90715 -> _90715)) = (@ex ((_90715 -> Prop) -> _90715 -> _90715)).
Proof. exact (eq_refl (@ex ((_90715 -> Prop) -> _90715 -> _90715))). Qed.
Lemma lem3525675 {_90715 A : Type'} (_37165 : type627 _90715 A) (u : _90715 -> Prop) (f : _90715 -> A) : (term4011 _90715 A _37165 u f) = (term3999 _90715 A _37165 u f).
Proof. exact (MK_COMB (@lem3525674 _90715) (@lem3525673 _90715 A _37165 u f)). Qed.
Lemma lem3525676 {_90715 A : Type'} (_37165 : type627 _90715 A) (u : _90715 -> Prop) : (term4012 _90715 A _37165 u) = (term4000 _90715 A _37165 u).
Proof. exact (fun_ext (fun f : _90715 -> A => @lem3525675 _90715 A _37165 u f)). Qed.
Lemma lem3525677 {_90715 A : Type'} : (@all (_90715 -> A)) = (@all (_90715 -> A)).
Proof. exact (eq_refl (@all (_90715 -> A))). Qed.
Lemma lem3525678 {_90715 A : Type'} (_37165 : type627 _90715 A) (u : _90715 -> Prop) : (term4004 _90715 A _37165 u) = (term4001 _90715 A _37165 u).
Proof. exact (MK_COMB (@lem3525677 _90715 A) (@lem3525676 _90715 A _37165 u)). Qed.
Lemma lem3525679 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem3525680 {_90715 A : Type'} (_37165 : type627 _90715 A) (u : _90715 -> Prop) : (term4013 _90715 A _37165 u) = (term4014 _90715 A _37165 u).
Proof. exact (MK_COMB (@lem3525679) (@lem3525678 _90715 A _37165 u)). Qed.
Lemma lem3525681 {_90715 A : Type'} (_37165 : type627 _90715 A) (u : _90715 -> Prop) (f : _90715 -> A) : (term4007 _90715 A _37165 u f) = (term3998 _90715 A _37165 u f).
Proof. exact (eq_refl (term4007 _90715 A _37165 u f)). Qed.
Lemma lem3525682 {_90715 A : Type'} (x : type526 _90715 A) (f : _90715 -> A) : (x f) = (x f).
Proof. exact (eq_refl (x f)). Qed.
Lemma lem3525683 {_90715 A : Type'} (_37165 : type627 _90715 A) (u : _90715 -> Prop) (x : type526 _90715 A) (f : _90715 -> A) : (term4015 _90715 A _37165 u x f) = (term4016 _90715 A _37165 u x f).
Proof. exact (MK_COMB (@lem3525681 _90715 A _37165 u f) (@lem3525682 _90715 A x f)). Qed.
Lemma lem3525684 {_90715 A : Type'} (_37165 : type627 _90715 A) (u : _90715 -> Prop) (x : type526 _90715 A) (f : _90715 -> A) : (term4016 _90715 A _37165 u x f) = (term4017 _90715 A _37165 u x f).
Proof. exact (eq_refl (term4016 _90715 A _37165 u x f)). Qed.
Lemma lem3525685 {_90715 A : Type'} (_37165 : type627 _90715 A) (u : _90715 -> Prop) (x : type526 _90715 A) (f : _90715 -> A) : (term4015 _90715 A _37165 u x f) = (term4017 _90715 A _37165 u x f).
Proof. exact (TRANS (@lem3525683 _90715 A _37165 u x f) (@lem3525684 _90715 A _37165 u x f)). Qed.
Lemma lem3525686 {_90715 A : Type'} (_37165 : type627 _90715 A) (u : _90715 -> Prop) (x : type526 _90715 A) : (term4018 _90715 A _37165 u x) = (term4019 _90715 A _37165 u x).
Proof. exact (fun_ext (fun f : _90715 -> A => @lem3525685 _90715 A _37165 u x f)). Qed.
Lemma lem3525687 {_90715 A : Type'} : (@all (_90715 -> A)) = (@all (_90715 -> A)).
Proof. exact (eq_refl (@all (_90715 -> A))). Qed.
Lemma lem3525688 {_90715 A : Type'} (_37165 : type627 _90715 A) (u : _90715 -> Prop) (x : type526 _90715 A) : (term4020 _90715 A _37165 u x) = (term4021 _90715 A _37165 u x).
Proof. exact (MK_COMB (@lem3525687 _90715 A) (@lem3525686 _90715 A _37165 u x)). Qed.
Lemma lem3525689 {_90715 A : Type'} (_37165 : type627 _90715 A) (u : _90715 -> Prop) : (term4022 _90715 A _37165 u) = (term4023 _90715 A _37165 u).
Proof. exact (fun_ext (fun x : type526 _90715 A => @lem3525688 _90715 A _37165 u x)). Qed.
Lemma lem3525690 {_90715 A : Type'} : (@ex ((_90715 -> A) -> (_90715 -> Prop) -> _90715 -> _90715)) = (@ex ((_90715 -> A) -> (_90715 -> Prop) -> _90715 -> _90715)).
Proof. exact (eq_refl (@ex ((_90715 -> A) -> (_90715 -> Prop) -> _90715 -> _90715))). Qed.
Lemma lem3525691 {_90715 A : Type'} (_37165 : type627 _90715 A) (u : _90715 -> Prop) : (term4005 _90715 A _37165 u) = (term4024 _90715 A _37165 u).
Proof. exact (MK_COMB (@lem3525690 _90715 A) (@lem3525689 _90715 A _37165 u)). Qed.
Lemma lem3525692 {_90715 A : Type'} (_37165 : type627 _90715 A) (u : _90715 -> Prop) : ((term4004 _90715 A _37165 u) = (term4005 _90715 A _37165 u)) = ((term4001 _90715 A _37165 u) = (term4024 _90715 A _37165 u)).
Proof. exact (MK_COMB (@lem3525680 _90715 A _37165 u) (@lem3525691 _90715 A _37165 u)). Qed.
Lemma lem3525693 {_90715 A : Type'} (_37165 : type627 _90715 A) (u : _90715 -> Prop) : (term4001 _90715 A _37165 u) = (term4024 _90715 A _37165 u).
Proof. exact (EQ_MP (@lem3525692 _90715 A _37165 u) (@lem3525667 _90715 A _37165 u)). Qed.
Lemma lem3525694 {_90715 A : Type'} (_37165 : type627 _90715 A) (u : _90715 -> Prop) : (term3918 _90715 A _37165 u) = (term4024 _90715 A _37165 u).
Proof. exact (TRANS (@lem3525663 _90715 A _37165 u) (@lem3525693 _90715 A _37165 u)). Qed.
Lemma lem3525695 {_90715 A : Type'} (_37165 : type627 _90715 A) : (term3925 _90715 A _37165) = (term4025 _90715 A _37165).
Proof. exact (fun_ext (fun u : _90715 -> Prop => @lem3525694 _90715 A _37165 u)). Qed.
Lemma lem3525696 {_90715 : Type'} : (@all (_90715 -> Prop)) = (@all (_90715 -> Prop)).
Proof. exact (eq_refl (@all (_90715 -> Prop))). Qed.
Lemma lem3525697 {_90715 A : Type'} (_37165 : type627 _90715 A) : (term3940 _90715 A _37165) = (term4026 _90715 A _37165).
Proof. exact (MK_COMB (@lem3525696 _90715) (@lem3525695 _90715 A _37165)). Qed.
Lemma lem3525699 {A B : Type'} (P : type1413 A B) : (term453 A B P) = (term454 A B P).
Proof. exact (EQ_MP (@lem18899 A B P) (@lem18898 A B P)). Qed.
Lemma lem3525700 {_90715 A : Type'} (P : type589 _90715 A) : (term4027 _90715 A P) = (term4028 _90715 A P).
Proof. exact (@lem3525699 (_90715 -> Prop) (type526 _90715 A) P). Qed.
Lemma lem3525701 {_90715 A : Type'} (_37165 : type627 _90715 A) : (term4029 _90715 A _37165) = (term4030 _90715 A _37165).
Proof. exact (@lem3525700 _90715 A (term4031 _90715 A _37165)). Qed.
Lemma lem3525702 {_90715 A : Type'} (_37165 : type627 _90715 A) (u : _90715 -> Prop) : (term4032 _90715 A _37165 u) = (term4023 _90715 A _37165 u).
Proof. exact (eq_refl (term4032 _90715 A _37165 u)). Qed.
Lemma lem3525703 {_90715 A : Type'} (x : type526 _90715 A) : x = x.
Proof. exact (eq_refl x). Qed.
Lemma lem3525704 {_90715 A : Type'} (_37165 : type627 _90715 A) (u : _90715 -> Prop) (x : type526 _90715 A) : (term4033 _90715 A _37165 u x) = (term4034 _90715 A _37165 u x).
Proof. exact (MK_COMB (@lem3525702 _90715 A _37165 u) (@lem3525703 _90715 A x)). Qed.
Lemma lem3525705 {_90715 A : Type'} (_37165 : type627 _90715 A) (u : _90715 -> Prop) (x : type526 _90715 A) : (term4034 _90715 A _37165 u x) = (term4021 _90715 A _37165 u x).
Proof. exact (eq_refl (term4034 _90715 A _37165 u x)). Qed.
Lemma lem3525706 {_90715 A : Type'} (_37165 : type627 _90715 A) (u : _90715 -> Prop) (x : type526 _90715 A) : (term4033 _90715 A _37165 u x) = (term4021 _90715 A _37165 u x).
Proof. exact (TRANS (@lem3525704 _90715 A _37165 u x) (@lem3525705 _90715 A _37165 u x)). Qed.
Lemma lem3525707 {_90715 A : Type'} (_37165 : type627 _90715 A) (u : _90715 -> Prop) : (term4035 _90715 A _37165 u) = (term4023 _90715 A _37165 u).
Proof. exact (fun_ext (fun x : type526 _90715 A => @lem3525706 _90715 A _37165 u x)). Qed.
Lemma lem3525708 {_90715 A : Type'} : (@ex ((_90715 -> A) -> (_90715 -> Prop) -> _90715 -> _90715)) = (@ex ((_90715 -> A) -> (_90715 -> Prop) -> _90715 -> _90715)).
Proof. exact (eq_refl (@ex ((_90715 -> A) -> (_90715 -> Prop) -> _90715 -> _90715))). Qed.
Lemma lem3525709 {_90715 A : Type'} (_37165 : type627 _90715 A) (u : _90715 -> Prop) : (term4036 _90715 A _37165 u) = (term4024 _90715 A _37165 u).
Proof. exact (MK_COMB (@lem3525708 _90715 A) (@lem3525707 _90715 A _37165 u)). Qed.
Lemma lem3525710 {_90715 A : Type'} (_37165 : type627 _90715 A) : (term4037 _90715 A _37165) = (term4025 _90715 A _37165).
Proof. exact (fun_ext (fun u : _90715 -> Prop => @lem3525709 _90715 A _37165 u)). Qed.
Lemma lem3525711 {_90715 : Type'} : (@all (_90715 -> Prop)) = (@all (_90715 -> Prop)).
Proof. exact (eq_refl (@all (_90715 -> Prop))). Qed.
Lemma lem3525712 {_90715 A : Type'} (_37165 : type627 _90715 A) : (term4029 _90715 A _37165) = (term4026 _90715 A _37165).
Proof. exact (MK_COMB (@lem3525711 _90715) (@lem3525710 _90715 A _37165)). Qed.
Lemma lem3525713 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem3525714 {_90715 A : Type'} (_37165 : type627 _90715 A) : (term4038 _90715 A _37165) = (term4039 _90715 A _37165).
Proof. exact (MK_COMB (@lem3525713) (@lem3525712 _90715 A _37165)). Qed.
Lemma lem3525715 {_90715 A : Type'} (_37165 : type627 _90715 A) (u : _90715 -> Prop) : (term4032 _90715 A _37165 u) = (term4023 _90715 A _37165 u).
Proof. exact (eq_refl (term4032 _90715 A _37165 u)). Qed.
Lemma lem3525716 {_90715 A : Type'} (x : type626 _90715 A) (u : _90715 -> Prop) : (x u) = (x u).
Proof. exact (eq_refl (x u)). Qed.
Lemma lem3525717 {_90715 A : Type'} (_37165 : type627 _90715 A) (x : type626 _90715 A) (u : _90715 -> Prop) : (term4040 _90715 A _37165 x u) = (term4041 _90715 A _37165 x u).
Proof. exact (MK_COMB (@lem3525715 _90715 A _37165 u) (@lem3525716 _90715 A x u)). Qed.
Lemma lem3525718 {_90715 A : Type'} (_37165 : type627 _90715 A) (x : type626 _90715 A) (u : _90715 -> Prop) : (term4041 _90715 A _37165 x u) = (term4042 _90715 A _37165 x u).
Proof. exact (eq_refl (term4041 _90715 A _37165 x u)). Qed.
Lemma lem3525719 {_90715 A : Type'} (_37165 : type627 _90715 A) (x : type626 _90715 A) (u : _90715 -> Prop) : (term4040 _90715 A _37165 x u) = (term4042 _90715 A _37165 x u).
Proof. exact (TRANS (@lem3525717 _90715 A _37165 x u) (@lem3525718 _90715 A _37165 x u)). Qed.
Lemma lem3525720 {_90715 A : Type'} (_37165 : type627 _90715 A) (x : type626 _90715 A) : (term4043 _90715 A _37165 x) = (term4044 _90715 A _37165 x).
Proof. exact (fun_ext (fun u : _90715 -> Prop => @lem3525719 _90715 A _37165 x u)). Qed.
Lemma lem3525721 {_90715 : Type'} : (@all (_90715 -> Prop)) = (@all (_90715 -> Prop)).
Proof. exact (eq_refl (@all (_90715 -> Prop))). Qed.
Lemma lem3525722 {_90715 A : Type'} (_37165 : type627 _90715 A) (x : type626 _90715 A) : (term4045 _90715 A _37165 x) = (term4046 _90715 A _37165 x).
Proof. exact (MK_COMB (@lem3525721 _90715) (@lem3525720 _90715 A _37165 x)). Qed.
Lemma lem3525723 {_90715 A : Type'} (_37165 : type627 _90715 A) : (term4047 _90715 A _37165) = (term4048 _90715 A _37165).
Proof. exact (fun_ext (fun x : type626 _90715 A => @lem3525722 _90715 A _37165 x)). Qed.
Lemma lem3525724 {_90715 A : Type'} : (@ex ((_90715 -> Prop) -> (_90715 -> A) -> (_90715 -> Prop) -> _90715 -> _90715)) = (@ex ((_90715 -> Prop) -> (_90715 -> A) -> (_90715 -> Prop) -> _90715 -> _90715)).
Proof. exact (eq_refl (@ex ((_90715 -> Prop) -> (_90715 -> A) -> (_90715 -> Prop) -> _90715 -> _90715))). Qed.
Lemma lem3525725 {_90715 A : Type'} (_37165 : type627 _90715 A) : (term4030 _90715 A _37165) = (term4049 _90715 A _37165).
Proof. exact (MK_COMB (@lem3525724 _90715 A) (@lem3525723 _90715 A _37165)). Qed.
Lemma lem3525726 {_90715 A : Type'} (_37165 : type627 _90715 A) : ((term4029 _90715 A _37165) = (term4030 _90715 A _37165)) = ((term4026 _90715 A _37165) = (term4049 _90715 A _37165)).
Proof. exact (MK_COMB (@lem3525714 _90715 A _37165) (@lem3525725 _90715 A _37165)). Qed.
Lemma lem3525727 {_90715 A : Type'} (_37165 : type627 _90715 A) : (term4026 _90715 A _37165) = (term4049 _90715 A _37165).
Proof. exact (EQ_MP (@lem3525726 _90715 A _37165) (@lem3525701 _90715 A _37165)). Qed.
Lemma lem3525728 {_90715 A : Type'} (_37165 : type627 _90715 A) : (term3940 _90715 A _37165) = (term4049 _90715 A _37165).
Proof. exact (TRANS (@lem3525697 _90715 A _37165) (@lem3525727 _90715 A _37165)). Qed.
Lemma lem3525729 {_90715 A : Type'} (_37165 : type627 _90715 A) : (term3937 _90715 A _37165) = (term3937 _90715 A _37165).
Proof. exact (eq_refl (term3937 _90715 A _37165)). Qed.
Lemma lem3525730 {_90715 A : Type'} (_37165 : type627 _90715 A) : (term3941 _90715 A _37165) = (term4050 _90715 A _37165).
Proof. exact (MK_COMB (@lem3525729 _90715 A _37165) (@lem3525728 _90715 A _37165)). Qed.
Lemma lem3525732 {A : Type'} (P : Prop) (Q : A -> Prop) : (term415 A P Q) = (term416 A P Q).
Proof. exact (EQ_MP (@lem18929 A P Q) (@lem18928 A P Q)). Qed.
Lemma lem3525733 {_90715 A : Type'} (P : Prop) (Q : type131 _90715 A) : (term4051 _90715 A P Q) = (term4052 _90715 A P Q).
Proof. exact (@lem3525732 (type626 _90715 A) P Q). Qed.
Lemma lem3525734 {_90715 A : Type'} (_37165 : type627 _90715 A) : (term4053 _90715 A _37165) = (term4054 _90715 A _37165).
Proof. exact (@lem3525733 _90715 A (term3935 _90715 A _37165) (term4048 _90715 A _37165)). Qed.
Lemma lem3525735 {_90715 A : Type'} (_37165 : type627 _90715 A) (x : type626 _90715 A) : (term4055 _90715 A _37165 x) = (term4046 _90715 A _37165 x).
Proof. exact (eq_refl (term4055 _90715 A _37165 x)). Qed.
Lemma lem3525736 {_90715 A : Type'} (_37165 : type627 _90715 A) : (term4056 _90715 A _37165) = (term4048 _90715 A _37165).
Proof. exact (fun_ext (fun x : type626 _90715 A => @lem3525735 _90715 A _37165 x)). Qed.
Lemma lem3525737 {_90715 A : Type'} : (@ex ((_90715 -> Prop) -> (_90715 -> A) -> (_90715 -> Prop) -> _90715 -> _90715)) = (@ex ((_90715 -> Prop) -> (_90715 -> A) -> (_90715 -> Prop) -> _90715 -> _90715)).
Proof. exact (eq_refl (@ex ((_90715 -> Prop) -> (_90715 -> A) -> (_90715 -> Prop) -> _90715 -> _90715))). Qed.
Lemma lem3525738 {_90715 A : Type'} (_37165 : type627 _90715 A) : (term4057 _90715 A _37165) = (term4049 _90715 A _37165).
Proof. exact (MK_COMB (@lem3525737 _90715 A) (@lem3525736 _90715 A _37165)). Qed.
Lemma lem3525739 {_90715 A : Type'} (_37165 : type627 _90715 A) : (term3937 _90715 A _37165) = (term3937 _90715 A _37165).
Proof. exact (eq_refl (term3937 _90715 A _37165)). Qed.
Lemma lem3525740 {_90715 A : Type'} (_37165 : type627 _90715 A) : (term4053 _90715 A _37165) = (term4050 _90715 A _37165).
Proof. exact (MK_COMB (@lem3525739 _90715 A _37165) (@lem3525738 _90715 A _37165)). Qed.
Lemma lem3525741 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem3525742 {_90715 A : Type'} (_37165 : type627 _90715 A) : (term4058 _90715 A _37165) = (term4059 _90715 A _37165).
Proof. exact (MK_COMB (@lem3525741) (@lem3525740 _90715 A _37165)). Qed.
Lemma lem3525743 {_90715 A : Type'} (_37165 : type627 _90715 A) (x : type626 _90715 A) : (term4055 _90715 A _37165 x) = (term4046 _90715 A _37165 x).
Proof. exact (eq_refl (term4055 _90715 A _37165 x)). Qed.
Lemma lem3525744 {_90715 A : Type'} (_37165 : type627 _90715 A) : (term3937 _90715 A _37165) = (term3937 _90715 A _37165).
Proof. exact (eq_refl (term3937 _90715 A _37165)). Qed.
Lemma lem3525745 {_90715 A : Type'} (_37165 : type627 _90715 A) (x : type626 _90715 A) : (term4060 _90715 A _37165 x) = (term4061 _90715 A _37165 x).
Proof. exact (MK_COMB (@lem3525744 _90715 A _37165) (@lem3525743 _90715 A _37165 x)). Qed.
Lemma lem3525746 {_90715 A : Type'} (_37165 : type627 _90715 A) : (term4062 _90715 A _37165) = (term4063 _90715 A _37165).
Proof. exact (fun_ext (fun x : type626 _90715 A => @lem3525745 _90715 A _37165 x)). Qed.
Lemma lem3525747 {_90715 A : Type'} : (@ex ((_90715 -> Prop) -> (_90715 -> A) -> (_90715 -> Prop) -> _90715 -> _90715)) = (@ex ((_90715 -> Prop) -> (_90715 -> A) -> (_90715 -> Prop) -> _90715 -> _90715)).
Proof. exact (eq_refl (@ex ((_90715 -> Prop) -> (_90715 -> A) -> (_90715 -> Prop) -> _90715 -> _90715))). Qed.
Lemma lem3525748 {_90715 A : Type'} (_37165 : type627 _90715 A) : (term4054 _90715 A _37165) = (term4064 _90715 A _37165).
Proof. exact (MK_COMB (@lem3525747 _90715 A) (@lem3525746 _90715 A _37165)). Qed.
Lemma lem3525749 {_90715 A : Type'} (_37165 : type627 _90715 A) : ((term4053 _90715 A _37165) = (term4054 _90715 A _37165)) = ((term4050 _90715 A _37165) = (term4064 _90715 A _37165)).
Proof. exact (MK_COMB (@lem3525742 _90715 A _37165) (@lem3525748 _90715 A _37165)). Qed.
Lemma lem3525750 {_90715 A : Type'} (_37165 : type627 _90715 A) : (term4050 _90715 A _37165) = (term4064 _90715 A _37165).
Proof. exact (EQ_MP (@lem3525749 _90715 A _37165) (@lem3525734 _90715 A _37165)). Qed.
Lemma lem3525751 {_90715 A : Type'} (_37165 : type627 _90715 A) : (term3941 _90715 A _37165) = (term4064 _90715 A _37165).
Proof. exact (TRANS (@lem3525730 _90715 A _37165) (@lem3525750 _90715 A _37165)). Qed.
Lemma lem3525752 {_90715 A : Type'} (_37165 : type627 _90715 A) : (term3853 _90715 A _37165) = (term4064 _90715 A _37165).
Proof. exact (TRANS (@lem3525572 _90715 A _37165) (@lem3525751 _90715 A _37165)). Qed.
Lemma lem3525753 {_90715 A : Type'} (_37165 : type627 _90715 A) : (term2210 _90715 A _37165) = (term4064 _90715 A _37165).
Proof. exact (TRANS (@lem3524976 _90715 A _37165) (@lem3525752 _90715 A _37165)). Qed.
Lemma lem3525754 {_90715 A : Type'} (_37165 : type627 _90715 A) (h1 : term2210 _90715 A _37165) : term4064 _90715 A _37165.
Proof. exact (EQ_MP (@lem3525753 _90715 A _37165) (@lem3520016 _90715 A _37165 h1)). Qed.
Lemma lem3525758 {_90715 _90724 : Type'} (GEN_PVAR_84 : _90715) (u : _90715 -> Prop) (f : _90715 -> _90724) (t : _90715 -> Prop) (x : _90715) : (term61 _90715 _90724 GEN_PVAR_84 u f t x) = (term61 _90715 _90724 GEN_PVAR_84 u f t x).
Proof. exact (eq_refl (term61 _90715 _90724 GEN_PVAR_84 u f t x)). Qed.
Lemma lem3525759 {_90715 : Type'} (P : _90715 -> Prop) : (term311 _90715 P) = (term312 _90715 P).
Proof. exact (@lem18394 _90715 P). Qed.
Lemma lem3525760 {_90715 _90724 : Type'} (GEN_PVAR_84 : _90715) (u : _90715 -> Prop) (f : _90715 -> _90724) (t : _90715 -> Prop) : (term3829 _90715 _90724 GEN_PVAR_84 u f t) = (term3830 _90715 _90724 GEN_PVAR_84 u f t).
Proof. exact (@lem3525759 _90715 (term63 _90715 _90724 GEN_PVAR_84 u f t)). Qed.
Lemma lem3525761 {_90715 _90724 : Type'} (GEN_PVAR_84 : _90715) (u : _90715 -> Prop) (f : _90715 -> _90724) (t : _90715 -> Prop) (x : _90715) : (term3831 _90715 _90724 GEN_PVAR_84 u f t x) = (term61 _90715 _90724 GEN_PVAR_84 u f t x).
Proof. exact (eq_refl (term3831 _90715 _90724 GEN_PVAR_84 u f t x)). Qed.
Lemma lem3525762 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem3525764 {_90715 _90724 : Type'} (GEN_PVAR_84 : _90715) (u : _90715 -> Prop) (f : _90715 -> _90724) (t : _90715 -> Prop) (x : _90715) : (term3832 _90715 _90724 GEN_PVAR_84 u f t x) = (term3833 _90715 _90724 GEN_PVAR_84 u f t x).
Proof. exact (MK_COMB (@lem3525762) (@lem3525761 _90715 _90724 GEN_PVAR_84 u f t x)). Qed.
Lemma lem3525765 {_90715 _90724 : Type'} (GEN_PVAR_84 : _90715) (u : _90715 -> Prop) (f : _90715 -> _90724) (t : _90715 -> Prop) : (term3834 _90715 _90724 GEN_PVAR_84 u f t) = (term3835 _90715 _90724 GEN_PVAR_84 u f t).
Proof. exact (fun_ext (fun x : _90715 => @lem3525764 _90715 _90724 GEN_PVAR_84 u f t x)). Qed.
Lemma lem3525766 {_90715 : Type'} : (@all _90715) = (@all _90715).
Proof. exact (eq_refl (@all _90715)). Qed.
Lemma lem3525767 {_90715 _90724 : Type'} (GEN_PVAR_84 : _90715) (u : _90715 -> Prop) (f : _90715 -> _90724) (t : _90715 -> Prop) : (term3830 _90715 _90724 GEN_PVAR_84 u f t) = (term3836 _90715 _90724 GEN_PVAR_84 u f t).
Proof. exact (MK_COMB (@lem3525766 _90715) (@lem3525765 _90715 _90724 GEN_PVAR_84 u f t)). Qed.
Lemma lem3525768 {_90715 _90724 : Type'} (GEN_PVAR_84 : _90715) (u : _90715 -> Prop) (f : _90715 -> _90724) (t : _90715 -> Prop) : (term3829 _90715 _90724 GEN_PVAR_84 u f t) = (term3836 _90715 _90724 GEN_PVAR_84 u f t).
Proof. exact (TRANS (@lem3525760 _90715 _90724 GEN_PVAR_84 u f t) (@lem3525767 _90715 _90724 GEN_PVAR_84 u f t)). Qed.
Lemma lem3525769 {_90715 _90724 : Type'} (GEN_PVAR_84 : _90715) (u : _90715 -> Prop) (f : _90715 -> _90724) (t : _90715 -> Prop) : (term63 _90715 _90724 GEN_PVAR_84 u f t) = (term63 _90715 _90724 GEN_PVAR_84 u f t).
Proof. exact (fun_ext (fun x : _90715 => @lem3525758 _90715 _90724 GEN_PVAR_84 u f t x)). Qed.
Lemma lem3525770 {_90715 : Type'} : (@ex _90715) = (@ex _90715).
Proof. exact (eq_refl (@ex _90715)). Qed.
Lemma lem3525771 {_90715 _90724 : Type'} (GEN_PVAR_84 : _90715) (u : _90715 -> Prop) (f : _90715 -> _90724) (t : _90715 -> Prop) : (term65 _90715 _90724 GEN_PVAR_84 u f t) = (term65 _90715 _90724 GEN_PVAR_84 u f t).
Proof. exact (MK_COMB (@lem3525770 _90715) (@lem3525769 _90715 _90724 GEN_PVAR_84 u f t)). Qed.
Lemma lem3525773 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) (u : _90715 -> Prop) (f : _90715 -> _90724) (t : _90715 -> Prop) (GEN_PVAR_84 : _90715) : (term3837 _90715 _90724 _37164 u f t GEN_PVAR_84) = (term3837 _90715 _90724 _37164 u f t GEN_PVAR_84).
Proof. exact (eq_refl (term3837 _90715 _90724 _37164 u f t GEN_PVAR_84)). Qed.
Lemma lem3525774 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) (GEN_PVAR_84 : _90715) (u : _90715 -> Prop) (f : _90715 -> _90724) (t : _90715 -> Prop) : (term3838 _90715 _90724 _37164 GEN_PVAR_84 u f t) = (term3838 _90715 _90724 _37164 GEN_PVAR_84 u f t).
Proof. exact (MK_COMB (@lem3525773 _90715 _90724 _37164 u f t GEN_PVAR_84) (@lem3525771 _90715 _90724 GEN_PVAR_84 u f t)). Qed.
Lemma lem3525776 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) (u : _90715 -> Prop) (f : _90715 -> _90724) (t : _90715 -> Prop) (GEN_PVAR_84 : _90715) : (term3839 _90715 _90724 _37164 u f t GEN_PVAR_84) = (term3839 _90715 _90724 _37164 u f t GEN_PVAR_84).
Proof. exact (eq_refl (term3839 _90715 _90724 _37164 u f t GEN_PVAR_84)). Qed.
Lemma lem3525777 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) (GEN_PVAR_84 : _90715) (u : _90715 -> Prop) (f : _90715 -> _90724) (t : _90715 -> Prop) : (term3840 _90715 _90724 _37164 GEN_PVAR_84 u f t) = (term3841 _90715 _90724 _37164 GEN_PVAR_84 u f t).
Proof. exact (MK_COMB (@lem3525776 _90715 _90724 _37164 u f t GEN_PVAR_84) (@lem3525768 _90715 _90724 GEN_PVAR_84 u f t)). Qed.
Lemma lem3525778 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem3525779 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) (GEN_PVAR_84 : _90715) (u : _90715 -> Prop) (f : _90715 -> _90724) (t : _90715 -> Prop) : (term3842 _90715 _90724 _37164 GEN_PVAR_84 u f t) = (term3843 _90715 _90724 _37164 GEN_PVAR_84 u f t).
Proof. exact (MK_COMB (@lem3525778) (@lem3525777 _90715 _90724 _37164 GEN_PVAR_84 u f t)). Qed.
Lemma lem3525780 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) (GEN_PVAR_84 : _90715) (u : _90715 -> Prop) (f : _90715 -> _90724) (t : _90715 -> Prop) : (term3844 _90715 _90724 _37164 GEN_PVAR_84 u f t) = (term3845 _90715 _90724 _37164 GEN_PVAR_84 u f t).
Proof. exact (MK_COMB (@lem3525779 _90715 _90724 _37164 GEN_PVAR_84 u f t) (@lem3525774 _90715 _90724 _37164 GEN_PVAR_84 u f t)). Qed.
Lemma lem3525781 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) (GEN_PVAR_84 : _90715) (u : _90715 -> Prop) (f : _90715 -> _90724) (t : _90715 -> Prop) : ((_37164 u f t GEN_PVAR_84) = (term65 _90715 _90724 GEN_PVAR_84 u f t)) = (term3844 _90715 _90724 _37164 GEN_PVAR_84 u f t).
Proof. exact (@lem17784 (_37164 u f t GEN_PVAR_84) (term65 _90715 _90724 GEN_PVAR_84 u f t)). Qed.
Lemma lem3525782 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) (GEN_PVAR_84 : _90715) (u : _90715 -> Prop) (f : _90715 -> _90724) (t : _90715 -> Prop) : ((_37164 u f t GEN_PVAR_84) = (term65 _90715 _90724 GEN_PVAR_84 u f t)) = (term3845 _90715 _90724 _37164 GEN_PVAR_84 u f t).
Proof. exact (TRANS (@lem3525781 _90715 _90724 _37164 GEN_PVAR_84 u f t) (@lem3525780 _90715 _90724 _37164 GEN_PVAR_84 u f t)). Qed.
Lemma lem3525783 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) (u : _90715 -> Prop) (f : _90715 -> _90724) (t : _90715 -> Prop) : (term2203 _90715 _90724 _37164 u f t) = (term3846 _90715 _90724 _37164 u f t).
Proof. exact (fun_ext (fun GEN_PVAR_84 : _90715 => @lem3525782 _90715 _90724 _37164 GEN_PVAR_84 u f t)). Qed.
Lemma lem3525784 {_90715 : Type'} : (@all _90715) = (@all _90715).
Proof. exact (eq_refl (@all _90715)). Qed.
Lemma lem3525785 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) (u : _90715 -> Prop) (f : _90715 -> _90724) (t : _90715 -> Prop) : (term2204 _90715 _90724 _37164 u f t) = (term3847 _90715 _90724 _37164 u f t).
Proof. exact (MK_COMB (@lem3525784 _90715) (@lem3525783 _90715 _90724 _37164 u f t)). Qed.
Lemma lem3525786 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) (u : _90715 -> Prop) (f : _90715 -> _90724) : (term2205 _90715 _90724 _37164 u f) = (term3848 _90715 _90724 _37164 u f).
Proof. exact (fun_ext (fun t : _90715 -> Prop => @lem3525785 _90715 _90724 _37164 u f t)). Qed.
Lemma lem3525787 {_90715 : Type'} : (@all (_90715 -> Prop)) = (@all (_90715 -> Prop)).
Proof. exact (eq_refl (@all (_90715 -> Prop))). Qed.
Lemma lem3525788 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) (u : _90715 -> Prop) (f : _90715 -> _90724) : (term2206 _90715 _90724 _37164 u f) = (term3849 _90715 _90724 _37164 u f).
Proof. exact (MK_COMB (@lem3525787 _90715) (@lem3525786 _90715 _90724 _37164 u f)). Qed.
Lemma lem3525789 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) (u : _90715 -> Prop) : (term2207 _90715 _90724 _37164 u) = (term3850 _90715 _90724 _37164 u).
Proof. exact (fun_ext (fun f : _90715 -> _90724 => @lem3525788 _90715 _90724 _37164 u f)). Qed.
Lemma lem3525790 {_90715 _90724 : Type'} : (@all (_90715 -> _90724)) = (@all (_90715 -> _90724)).
Proof. exact (eq_refl (@all (_90715 -> _90724))). Qed.
Lemma lem3525791 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) (u : _90715 -> Prop) : (term2208 _90715 _90724 _37164 u) = (term3851 _90715 _90724 _37164 u).
Proof. exact (MK_COMB (@lem3525790 _90715 _90724) (@lem3525789 _90715 _90724 _37164 u)). Qed.
Lemma lem3525792 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) : (term2209 _90715 _90724 _37164) = (term3852 _90715 _90724 _37164).
Proof. exact (fun_ext (fun u : _90715 -> Prop => @lem3525791 _90715 _90724 _37164 u)). Qed.
Lemma lem3525793 {_90715 : Type'} : (@all (_90715 -> Prop)) = (@all (_90715 -> Prop)).
Proof. exact (eq_refl (@all (_90715 -> Prop))). Qed.
Lemma lem3525794 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) : (term2210 _90715 _90724 _37164) = (term3853 _90715 _90724 _37164).
Proof. exact (MK_COMB (@lem3525793 _90715) (@lem3525792 _90715 _90724 _37164)). Qed.
Lemma lem3525808 {A : Type'} (P : A -> Prop) (Q : A -> Prop) : (term726 A P Q) = (term725 A P Q).
Proof. exact (EQ_MP (@lem18953 A P Q) (@lem18952 A P Q)). Qed.
Lemma lem3525809 {_90715 : Type'} (P : _90715 -> Prop) (Q : _90715 -> Prop) : (term726 _90715 P Q) = (term725 _90715 P Q).
Proof. exact (@lem3525808 _90715 P Q). Qed.
Lemma lem3525810 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) (u : _90715 -> Prop) (f : _90715 -> _90724) (t : _90715 -> Prop) : (term3854 _90715 _90724 _37164 u f t) = (term3855 _90715 _90724 _37164 u f t).
Proof. exact (@lem3525809 _90715 (term3856 _90715 _90724 _37164 u f t) (term3857 _90715 _90724 _37164 u f t)). Qed.
Lemma lem3525811 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) (GEN_PVAR_84 : _90715) (u : _90715 -> Prop) (f : _90715 -> _90724) (t : _90715 -> Prop) : (term3858 _90715 _90724 _37164 u f t GEN_PVAR_84) = (term3841 _90715 _90724 _37164 GEN_PVAR_84 u f t).
Proof. exact (eq_refl (term3858 _90715 _90724 _37164 u f t GEN_PVAR_84)). Qed.
Lemma lem3525812 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem3525813 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) (GEN_PVAR_84 : _90715) (u : _90715 -> Prop) (f : _90715 -> _90724) (t : _90715 -> Prop) : (term3859 _90715 _90724 _37164 u f t GEN_PVAR_84) = (term3843 _90715 _90724 _37164 GEN_PVAR_84 u f t).
Proof. exact (MK_COMB (@lem3525812) (@lem3525811 _90715 _90724 _37164 GEN_PVAR_84 u f t)). Qed.
Lemma lem3525814 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) (GEN_PVAR_84 : _90715) (u : _90715 -> Prop) (f : _90715 -> _90724) (t : _90715 -> Prop) : (term3860 _90715 _90724 _37164 u f t GEN_PVAR_84) = (term3838 _90715 _90724 _37164 GEN_PVAR_84 u f t).
Proof. exact (eq_refl (term3860 _90715 _90724 _37164 u f t GEN_PVAR_84)). Qed.
Lemma lem3525815 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) (GEN_PVAR_84 : _90715) (u : _90715 -> Prop) (f : _90715 -> _90724) (t : _90715 -> Prop) : (term3861 _90715 _90724 _37164 u f t GEN_PVAR_84) = (term3845 _90715 _90724 _37164 GEN_PVAR_84 u f t).
Proof. exact (MK_COMB (@lem3525813 _90715 _90724 _37164 GEN_PVAR_84 u f t) (@lem3525814 _90715 _90724 _37164 GEN_PVAR_84 u f t)). Qed.
Lemma lem3525816 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) (u : _90715 -> Prop) (f : _90715 -> _90724) (t : _90715 -> Prop) : (term3862 _90715 _90724 _37164 u f t) = (term3846 _90715 _90724 _37164 u f t).
Proof. exact (fun_ext (fun GEN_PVAR_84 : _90715 => @lem3525815 _90715 _90724 _37164 GEN_PVAR_84 u f t)). Qed.
Lemma lem3525817 {_90715 : Type'} : (@all _90715) = (@all _90715).
Proof. exact (eq_refl (@all _90715)). Qed.
Lemma lem3525818 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) (u : _90715 -> Prop) (f : _90715 -> _90724) (t : _90715 -> Prop) : (term3854 _90715 _90724 _37164 u f t) = (term3847 _90715 _90724 _37164 u f t).
Proof. exact (MK_COMB (@lem3525817 _90715) (@lem3525816 _90715 _90724 _37164 u f t)). Qed.
Lemma lem3525819 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem3525820 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) (u : _90715 -> Prop) (f : _90715 -> _90724) (t : _90715 -> Prop) : (term3863 _90715 _90724 _37164 u f t) = (term3864 _90715 _90724 _37164 u f t).
Proof. exact (MK_COMB (@lem3525819) (@lem3525818 _90715 _90724 _37164 u f t)). Qed.
Lemma lem3525821 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) (GEN_PVAR_84 : _90715) (u : _90715 -> Prop) (f : _90715 -> _90724) (t : _90715 -> Prop) : (term3858 _90715 _90724 _37164 u f t GEN_PVAR_84) = (term3841 _90715 _90724 _37164 GEN_PVAR_84 u f t).
Proof. exact (eq_refl (term3858 _90715 _90724 _37164 u f t GEN_PVAR_84)). Qed.
Lemma lem3525822 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) (u : _90715 -> Prop) (f : _90715 -> _90724) (t : _90715 -> Prop) : (term3865 _90715 _90724 _37164 u f t) = (term3856 _90715 _90724 _37164 u f t).
Proof. exact (fun_ext (fun GEN_PVAR_84 : _90715 => @lem3525821 _90715 _90724 _37164 GEN_PVAR_84 u f t)). Qed.
Lemma lem3525823 {_90715 : Type'} : (@all _90715) = (@all _90715).
Proof. exact (eq_refl (@all _90715)). Qed.
Lemma lem3525824 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) (u : _90715 -> Prop) (f : _90715 -> _90724) (t : _90715 -> Prop) : (term3866 _90715 _90724 _37164 u f t) = (term3867 _90715 _90724 _37164 u f t).
Proof. exact (MK_COMB (@lem3525823 _90715) (@lem3525822 _90715 _90724 _37164 u f t)). Qed.
Lemma lem3525825 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem3525826 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) (u : _90715 -> Prop) (f : _90715 -> _90724) (t : _90715 -> Prop) : (term3868 _90715 _90724 _37164 u f t) = (term3869 _90715 _90724 _37164 u f t).
Proof. exact (MK_COMB (@lem3525825) (@lem3525824 _90715 _90724 _37164 u f t)). Qed.
Lemma lem3525827 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) (GEN_PVAR_84 : _90715) (u : _90715 -> Prop) (f : _90715 -> _90724) (t : _90715 -> Prop) : (term3860 _90715 _90724 _37164 u f t GEN_PVAR_84) = (term3838 _90715 _90724 _37164 GEN_PVAR_84 u f t).
Proof. exact (eq_refl (term3860 _90715 _90724 _37164 u f t GEN_PVAR_84)). Qed.
Lemma lem3525828 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) (u : _90715 -> Prop) (f : _90715 -> _90724) (t : _90715 -> Prop) : (term3870 _90715 _90724 _37164 u f t) = (term3857 _90715 _90724 _37164 u f t).
Proof. exact (fun_ext (fun GEN_PVAR_84 : _90715 => @lem3525827 _90715 _90724 _37164 GEN_PVAR_84 u f t)). Qed.
Lemma lem3525829 {_90715 : Type'} : (@all _90715) = (@all _90715).
Proof. exact (eq_refl (@all _90715)). Qed.
Lemma lem3525830 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) (u : _90715 -> Prop) (f : _90715 -> _90724) (t : _90715 -> Prop) : (term3871 _90715 _90724 _37164 u f t) = (term3872 _90715 _90724 _37164 u f t).
Proof. exact (MK_COMB (@lem3525829 _90715) (@lem3525828 _90715 _90724 _37164 u f t)). Qed.
Lemma lem3525831 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) (u : _90715 -> Prop) (f : _90715 -> _90724) (t : _90715 -> Prop) : (term3855 _90715 _90724 _37164 u f t) = (term3873 _90715 _90724 _37164 u f t).
Proof. exact (MK_COMB (@lem3525826 _90715 _90724 _37164 u f t) (@lem3525830 _90715 _90724 _37164 u f t)). Qed.
Lemma lem3525832 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) (u : _90715 -> Prop) (f : _90715 -> _90724) (t : _90715 -> Prop) : ((term3854 _90715 _90724 _37164 u f t) = (term3855 _90715 _90724 _37164 u f t)) = ((term3847 _90715 _90724 _37164 u f t) = (term3873 _90715 _90724 _37164 u f t)).
Proof. exact (MK_COMB (@lem3525820 _90715 _90724 _37164 u f t) (@lem3525831 _90715 _90724 _37164 u f t)). Qed.
Lemma lem3525833 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) (u : _90715 -> Prop) (f : _90715 -> _90724) (t : _90715 -> Prop) : (term3847 _90715 _90724 _37164 u f t) = (term3873 _90715 _90724 _37164 u f t).
Proof. exact (EQ_MP (@lem3525832 _90715 _90724 _37164 u f t) (@lem3525810 _90715 _90724 _37164 u f t)). Qed.
Lemma lem3525938 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) (u : _90715 -> Prop) (f : _90715 -> _90724) : (term3848 _90715 _90724 _37164 u f) = (term3874 _90715 _90724 _37164 u f).
Proof. exact (fun_ext (fun t : _90715 -> Prop => @lem3525833 _90715 _90724 _37164 u f t)). Qed.
Lemma lem3525939 {_90715 : Type'} : (@all (_90715 -> Prop)) = (@all (_90715 -> Prop)).
Proof. exact (eq_refl (@all (_90715 -> Prop))). Qed.
Lemma lem3525940 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) (u : _90715 -> Prop) (f : _90715 -> _90724) : (term3849 _90715 _90724 _37164 u f) = (term3875 _90715 _90724 _37164 u f).
Proof. exact (MK_COMB (@lem3525939 _90715) (@lem3525938 _90715 _90724 _37164 u f)). Qed.
Lemma lem3525942 {A : Type'} (P : A -> Prop) (Q : A -> Prop) : (term726 A P Q) = (term725 A P Q).
Proof. exact (EQ_MP (@lem18953 A P Q) (@lem18952 A P Q)). Qed.
Lemma lem3525943 {_90715 : Type'} (P : type686 _90715) (Q : type686 _90715) : (term2898 _90715 P Q) = (term2899 _90715 P Q).
Proof. exact (@lem3525942 (_90715 -> Prop) P Q). Qed.
Lemma lem3525944 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) (u : _90715 -> Prop) (f : _90715 -> _90724) : (term3876 _90715 _90724 _37164 u f) = (term3877 _90715 _90724 _37164 u f).
Proof. exact (@lem3525943 _90715 (term3878 _90715 _90724 _37164 u f) (term3879 _90715 _90724 _37164 u f)). Qed.
Lemma lem3525945 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) (u : _90715 -> Prop) (f : _90715 -> _90724) (t : _90715 -> Prop) : (term3880 _90715 _90724 _37164 u f t) = (term3867 _90715 _90724 _37164 u f t).
Proof. exact (eq_refl (term3880 _90715 _90724 _37164 u f t)). Qed.
Lemma lem3525946 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem3525947 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) (u : _90715 -> Prop) (f : _90715 -> _90724) (t : _90715 -> Prop) : (term3881 _90715 _90724 _37164 u f t) = (term3869 _90715 _90724 _37164 u f t).
Proof. exact (MK_COMB (@lem3525946) (@lem3525945 _90715 _90724 _37164 u f t)). Qed.
Lemma lem3525948 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) (u : _90715 -> Prop) (f : _90715 -> _90724) (t : _90715 -> Prop) : (term3882 _90715 _90724 _37164 u f t) = (term3872 _90715 _90724 _37164 u f t).
Proof. exact (eq_refl (term3882 _90715 _90724 _37164 u f t)). Qed.
Lemma lem3525949 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) (u : _90715 -> Prop) (f : _90715 -> _90724) (t : _90715 -> Prop) : (term3883 _90715 _90724 _37164 u f t) = (term3873 _90715 _90724 _37164 u f t).
Proof. exact (MK_COMB (@lem3525947 _90715 _90724 _37164 u f t) (@lem3525948 _90715 _90724 _37164 u f t)). Qed.
Lemma lem3525950 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) (u : _90715 -> Prop) (f : _90715 -> _90724) : (term3884 _90715 _90724 _37164 u f) = (term3874 _90715 _90724 _37164 u f).
Proof. exact (fun_ext (fun t : _90715 -> Prop => @lem3525949 _90715 _90724 _37164 u f t)). Qed.
Lemma lem3525951 {_90715 : Type'} : (@all (_90715 -> Prop)) = (@all (_90715 -> Prop)).
Proof. exact (eq_refl (@all (_90715 -> Prop))). Qed.
Lemma lem3525952 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) (u : _90715 -> Prop) (f : _90715 -> _90724) : (term3876 _90715 _90724 _37164 u f) = (term3875 _90715 _90724 _37164 u f).
Proof. exact (MK_COMB (@lem3525951 _90715) (@lem3525950 _90715 _90724 _37164 u f)). Qed.
Lemma lem3525953 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem3525954 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) (u : _90715 -> Prop) (f : _90715 -> _90724) : (term3885 _90715 _90724 _37164 u f) = (term3886 _90715 _90724 _37164 u f).
Proof. exact (MK_COMB (@lem3525953) (@lem3525952 _90715 _90724 _37164 u f)). Qed.
Lemma lem3525955 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) (u : _90715 -> Prop) (f : _90715 -> _90724) (t : _90715 -> Prop) : (term3880 _90715 _90724 _37164 u f t) = (term3867 _90715 _90724 _37164 u f t).
Proof. exact (eq_refl (term3880 _90715 _90724 _37164 u f t)). Qed.
Lemma lem3525956 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) (u : _90715 -> Prop) (f : _90715 -> _90724) : (term3887 _90715 _90724 _37164 u f) = (term3878 _90715 _90724 _37164 u f).
Proof. exact (fun_ext (fun t : _90715 -> Prop => @lem3525955 _90715 _90724 _37164 u f t)). Qed.
Lemma lem3525957 {_90715 : Type'} : (@all (_90715 -> Prop)) = (@all (_90715 -> Prop)).
Proof. exact (eq_refl (@all (_90715 -> Prop))). Qed.
Lemma lem3525958 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) (u : _90715 -> Prop) (f : _90715 -> _90724) : (term3888 _90715 _90724 _37164 u f) = (term3889 _90715 _90724 _37164 u f).
Proof. exact (MK_COMB (@lem3525957 _90715) (@lem3525956 _90715 _90724 _37164 u f)). Qed.
Lemma lem3525959 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem3525960 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) (u : _90715 -> Prop) (f : _90715 -> _90724) : (term3890 _90715 _90724 _37164 u f) = (term3891 _90715 _90724 _37164 u f).
Proof. exact (MK_COMB (@lem3525959) (@lem3525958 _90715 _90724 _37164 u f)). Qed.
Lemma lem3525961 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) (u : _90715 -> Prop) (f : _90715 -> _90724) (t : _90715 -> Prop) : (term3882 _90715 _90724 _37164 u f t) = (term3872 _90715 _90724 _37164 u f t).
Proof. exact (eq_refl (term3882 _90715 _90724 _37164 u f t)). Qed.
Lemma lem3525962 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) (u : _90715 -> Prop) (f : _90715 -> _90724) : (term3892 _90715 _90724 _37164 u f) = (term3879 _90715 _90724 _37164 u f).
Proof. exact (fun_ext (fun t : _90715 -> Prop => @lem3525961 _90715 _90724 _37164 u f t)). Qed.
Lemma lem3525963 {_90715 : Type'} : (@all (_90715 -> Prop)) = (@all (_90715 -> Prop)).
Proof. exact (eq_refl (@all (_90715 -> Prop))). Qed.
Lemma lem3525964 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) (u : _90715 -> Prop) (f : _90715 -> _90724) : (term3893 _90715 _90724 _37164 u f) = (term3894 _90715 _90724 _37164 u f).
Proof. exact (MK_COMB (@lem3525963 _90715) (@lem3525962 _90715 _90724 _37164 u f)). Qed.
Lemma lem3525965 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) (u : _90715 -> Prop) (f : _90715 -> _90724) : (term3877 _90715 _90724 _37164 u f) = (term3895 _90715 _90724 _37164 u f).
Proof. exact (MK_COMB (@lem3525960 _90715 _90724 _37164 u f) (@lem3525964 _90715 _90724 _37164 u f)). Qed.
Lemma lem3525966 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) (u : _90715 -> Prop) (f : _90715 -> _90724) : ((term3876 _90715 _90724 _37164 u f) = (term3877 _90715 _90724 _37164 u f)) = ((term3875 _90715 _90724 _37164 u f) = (term3895 _90715 _90724 _37164 u f)).
Proof. exact (MK_COMB (@lem3525954 _90715 _90724 _37164 u f) (@lem3525965 _90715 _90724 _37164 u f)). Qed.
Lemma lem3525967 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) (u : _90715 -> Prop) (f : _90715 -> _90724) : (term3875 _90715 _90724 _37164 u f) = (term3895 _90715 _90724 _37164 u f).
Proof. exact (EQ_MP (@lem3525966 _90715 _90724 _37164 u f) (@lem3525944 _90715 _90724 _37164 u f)). Qed.
Lemma lem3526080 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) (u : _90715 -> Prop) (f : _90715 -> _90724) : (term3849 _90715 _90724 _37164 u f) = (term3895 _90715 _90724 _37164 u f).
Proof. exact (TRANS (@lem3525940 _90715 _90724 _37164 u f) (@lem3525967 _90715 _90724 _37164 u f)). Qed.
Lemma lem3526081 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) (u : _90715 -> Prop) : (term3850 _90715 _90724 _37164 u) = (term3896 _90715 _90724 _37164 u).
Proof. exact (fun_ext (fun f : _90715 -> _90724 => @lem3526080 _90715 _90724 _37164 u f)). Qed.
Lemma lem3526082 {_90715 _90724 : Type'} : (@all (_90715 -> _90724)) = (@all (_90715 -> _90724)).
Proof. exact (eq_refl (@all (_90715 -> _90724))). Qed.
Lemma lem3526083 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) (u : _90715 -> Prop) : (term3851 _90715 _90724 _37164 u) = (term3897 _90715 _90724 _37164 u).
Proof. exact (MK_COMB (@lem3526082 _90715 _90724) (@lem3526081 _90715 _90724 _37164 u)). Qed.
Lemma lem3526085 {A : Type'} (P : A -> Prop) (Q : A -> Prop) : (term726 A P Q) = (term725 A P Q).
Proof. exact (EQ_MP (@lem18953 A P Q) (@lem18952 A P Q)). Qed.
Lemma lem3526086 {_90715 _90724 : Type'} (P : type572 _90715 _90724) (Q : type572 _90715 _90724) : (term3898 _90715 _90724 P Q) = (term3899 _90715 _90724 P Q).
Proof. exact (@lem3526085 (_90715 -> _90724) P Q). Qed.
Lemma lem3526087 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) (u : _90715 -> Prop) : (term3900 _90715 _90724 _37164 u) = (term3901 _90715 _90724 _37164 u).
Proof. exact (@lem3526086 _90715 _90724 (term3902 _90715 _90724 _37164 u) (term3903 _90715 _90724 _37164 u)). Qed.
Lemma lem3526088 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) (u : _90715 -> Prop) (f : _90715 -> _90724) : (term3904 _90715 _90724 _37164 u f) = (term3889 _90715 _90724 _37164 u f).
Proof. exact (eq_refl (term3904 _90715 _90724 _37164 u f)). Qed.
Lemma lem3526089 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem3526090 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) (u : _90715 -> Prop) (f : _90715 -> _90724) : (term3905 _90715 _90724 _37164 u f) = (term3891 _90715 _90724 _37164 u f).
Proof. exact (MK_COMB (@lem3526089) (@lem3526088 _90715 _90724 _37164 u f)). Qed.
Lemma lem3526091 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) (u : _90715 -> Prop) (f : _90715 -> _90724) : (term3906 _90715 _90724 _37164 u f) = (term3894 _90715 _90724 _37164 u f).
Proof. exact (eq_refl (term3906 _90715 _90724 _37164 u f)). Qed.
Lemma lem3526092 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) (u : _90715 -> Prop) (f : _90715 -> _90724) : (term3907 _90715 _90724 _37164 u f) = (term3895 _90715 _90724 _37164 u f).
Proof. exact (MK_COMB (@lem3526090 _90715 _90724 _37164 u f) (@lem3526091 _90715 _90724 _37164 u f)). Qed.
Lemma lem3526093 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) (u : _90715 -> Prop) : (term3908 _90715 _90724 _37164 u) = (term3896 _90715 _90724 _37164 u).
Proof. exact (fun_ext (fun f : _90715 -> _90724 => @lem3526092 _90715 _90724 _37164 u f)). Qed.
Lemma lem3526094 {_90715 _90724 : Type'} : (@all (_90715 -> _90724)) = (@all (_90715 -> _90724)).
Proof. exact (eq_refl (@all (_90715 -> _90724))). Qed.
Lemma lem3526095 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) (u : _90715 -> Prop) : (term3900 _90715 _90724 _37164 u) = (term3897 _90715 _90724 _37164 u).
Proof. exact (MK_COMB (@lem3526094 _90715 _90724) (@lem3526093 _90715 _90724 _37164 u)). Qed.
Lemma lem3526096 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem3526097 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) (u : _90715 -> Prop) : (term3909 _90715 _90724 _37164 u) = (term3910 _90715 _90724 _37164 u).
Proof. exact (MK_COMB (@lem3526096) (@lem3526095 _90715 _90724 _37164 u)). Qed.
Lemma lem3526098 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) (u : _90715 -> Prop) (f : _90715 -> _90724) : (term3904 _90715 _90724 _37164 u f) = (term3889 _90715 _90724 _37164 u f).
Proof. exact (eq_refl (term3904 _90715 _90724 _37164 u f)). Qed.
Lemma lem3526099 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) (u : _90715 -> Prop) : (term3911 _90715 _90724 _37164 u) = (term3902 _90715 _90724 _37164 u).
Proof. exact (fun_ext (fun f : _90715 -> _90724 => @lem3526098 _90715 _90724 _37164 u f)). Qed.
Lemma lem3526100 {_90715 _90724 : Type'} : (@all (_90715 -> _90724)) = (@all (_90715 -> _90724)).
Proof. exact (eq_refl (@all (_90715 -> _90724))). Qed.
Lemma lem3526101 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) (u : _90715 -> Prop) : (term3912 _90715 _90724 _37164 u) = (term3913 _90715 _90724 _37164 u).
Proof. exact (MK_COMB (@lem3526100 _90715 _90724) (@lem3526099 _90715 _90724 _37164 u)). Qed.
Lemma lem3526102 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem3526103 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) (u : _90715 -> Prop) : (term3914 _90715 _90724 _37164 u) = (term3915 _90715 _90724 _37164 u).
Proof. exact (MK_COMB (@lem3526102) (@lem3526101 _90715 _90724 _37164 u)). Qed.
Lemma lem3526104 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) (u : _90715 -> Prop) (f : _90715 -> _90724) : (term3906 _90715 _90724 _37164 u f) = (term3894 _90715 _90724 _37164 u f).
Proof. exact (eq_refl (term3906 _90715 _90724 _37164 u f)). Qed.
Lemma lem3526105 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) (u : _90715 -> Prop) : (term3916 _90715 _90724 _37164 u) = (term3903 _90715 _90724 _37164 u).
Proof. exact (fun_ext (fun f : _90715 -> _90724 => @lem3526104 _90715 _90724 _37164 u f)). Qed.
Lemma lem3526106 {_90715 _90724 : Type'} : (@all (_90715 -> _90724)) = (@all (_90715 -> _90724)).
Proof. exact (eq_refl (@all (_90715 -> _90724))). Qed.
Lemma lem3526107 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) (u : _90715 -> Prop) : (term3917 _90715 _90724 _37164 u) = (term3918 _90715 _90724 _37164 u).
Proof. exact (MK_COMB (@lem3526106 _90715 _90724) (@lem3526105 _90715 _90724 _37164 u)). Qed.
Lemma lem3526108 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) (u : _90715 -> Prop) : (term3901 _90715 _90724 _37164 u) = (term3919 _90715 _90724 _37164 u).
Proof. exact (MK_COMB (@lem3526103 _90715 _90724 _37164 u) (@lem3526107 _90715 _90724 _37164 u)). Qed.
Lemma lem3526109 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) (u : _90715 -> Prop) : ((term3900 _90715 _90724 _37164 u) = (term3901 _90715 _90724 _37164 u)) = ((term3897 _90715 _90724 _37164 u) = (term3919 _90715 _90724 _37164 u)).
Proof. exact (MK_COMB (@lem3526097 _90715 _90724 _37164 u) (@lem3526108 _90715 _90724 _37164 u)). Qed.
Lemma lem3526110 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) (u : _90715 -> Prop) : (term3897 _90715 _90724 _37164 u) = (term3919 _90715 _90724 _37164 u).
Proof. exact (EQ_MP (@lem3526109 _90715 _90724 _37164 u) (@lem3526087 _90715 _90724 _37164 u)). Qed.
Lemma lem3526231 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) (u : _90715 -> Prop) : (term3851 _90715 _90724 _37164 u) = (term3919 _90715 _90724 _37164 u).
Proof. exact (TRANS (@lem3526083 _90715 _90724 _37164 u) (@lem3526110 _90715 _90724 _37164 u)). Qed.
Lemma lem3526232 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) : (term3852 _90715 _90724 _37164) = (term3920 _90715 _90724 _37164).
Proof. exact (fun_ext (fun u : _90715 -> Prop => @lem3526231 _90715 _90724 _37164 u)). Qed.
Lemma lem3526233 {_90715 : Type'} : (@all (_90715 -> Prop)) = (@all (_90715 -> Prop)).
Proof. exact (eq_refl (@all (_90715 -> Prop))). Qed.
Lemma lem3526234 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) : (term3853 _90715 _90724 _37164) = (term3921 _90715 _90724 _37164).
Proof. exact (MK_COMB (@lem3526233 _90715) (@lem3526232 _90715 _90724 _37164)). Qed.
Lemma lem3526236 {A : Type'} (P : A -> Prop) (Q : A -> Prop) : (term726 A P Q) = (term725 A P Q).
Proof. exact (EQ_MP (@lem18953 A P Q) (@lem18952 A P Q)). Qed.
Lemma lem3526237 {_90715 : Type'} (P : type686 _90715) (Q : type686 _90715) : (term2898 _90715 P Q) = (term2899 _90715 P Q).
Proof. exact (@lem3526236 (_90715 -> Prop) P Q). Qed.
Lemma lem3526238 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) : (term3922 _90715 _90724 _37164) = (term3923 _90715 _90724 _37164).
Proof. exact (@lem3526237 _90715 (term3924 _90715 _90724 _37164) (term3925 _90715 _90724 _37164)). Qed.
Lemma lem3526239 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) (u : _90715 -> Prop) : (term3926 _90715 _90724 _37164 u) = (term3913 _90715 _90724 _37164 u).
Proof. exact (eq_refl (term3926 _90715 _90724 _37164 u)). Qed.
Lemma lem3526240 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem3526241 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) (u : _90715 -> Prop) : (term3927 _90715 _90724 _37164 u) = (term3915 _90715 _90724 _37164 u).
Proof. exact (MK_COMB (@lem3526240) (@lem3526239 _90715 _90724 _37164 u)). Qed.
Lemma lem3526242 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) (u : _90715 -> Prop) : (term3928 _90715 _90724 _37164 u) = (term3918 _90715 _90724 _37164 u).
Proof. exact (eq_refl (term3928 _90715 _90724 _37164 u)). Qed.
Lemma lem3526243 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) (u : _90715 -> Prop) : (term3929 _90715 _90724 _37164 u) = (term3919 _90715 _90724 _37164 u).
Proof. exact (MK_COMB (@lem3526241 _90715 _90724 _37164 u) (@lem3526242 _90715 _90724 _37164 u)). Qed.
Lemma lem3526244 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) : (term3930 _90715 _90724 _37164) = (term3920 _90715 _90724 _37164).
Proof. exact (fun_ext (fun u : _90715 -> Prop => @lem3526243 _90715 _90724 _37164 u)). Qed.
Lemma lem3526245 {_90715 : Type'} : (@all (_90715 -> Prop)) = (@all (_90715 -> Prop)).
Proof. exact (eq_refl (@all (_90715 -> Prop))). Qed.
Lemma lem3526246 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) : (term3922 _90715 _90724 _37164) = (term3921 _90715 _90724 _37164).
Proof. exact (MK_COMB (@lem3526245 _90715) (@lem3526244 _90715 _90724 _37164)). Qed.
Lemma lem3526247 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem3526248 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) : (term3931 _90715 _90724 _37164) = (term3932 _90715 _90724 _37164).
Proof. exact (MK_COMB (@lem3526247) (@lem3526246 _90715 _90724 _37164)). Qed.
Lemma lem3526249 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) (u : _90715 -> Prop) : (term3926 _90715 _90724 _37164 u) = (term3913 _90715 _90724 _37164 u).
Proof. exact (eq_refl (term3926 _90715 _90724 _37164 u)). Qed.
Lemma lem3526250 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) : (term3933 _90715 _90724 _37164) = (term3924 _90715 _90724 _37164).
Proof. exact (fun_ext (fun u : _90715 -> Prop => @lem3526249 _90715 _90724 _37164 u)). Qed.
Lemma lem3526251 {_90715 : Type'} : (@all (_90715 -> Prop)) = (@all (_90715 -> Prop)).
Proof. exact (eq_refl (@all (_90715 -> Prop))). Qed.
Lemma lem3526252 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) : (term3934 _90715 _90724 _37164) = (term3935 _90715 _90724 _37164).
Proof. exact (MK_COMB (@lem3526251 _90715) (@lem3526250 _90715 _90724 _37164)). Qed.
Lemma lem3526253 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem3526254 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) : (term3936 _90715 _90724 _37164) = (term3937 _90715 _90724 _37164).
Proof. exact (MK_COMB (@lem3526253) (@lem3526252 _90715 _90724 _37164)). Qed.
Lemma lem3526255 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) (u : _90715 -> Prop) : (term3928 _90715 _90724 _37164 u) = (term3918 _90715 _90724 _37164 u).
Proof. exact (eq_refl (term3928 _90715 _90724 _37164 u)). Qed.
Lemma lem3526256 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) : (term3938 _90715 _90724 _37164) = (term3925 _90715 _90724 _37164).
Proof. exact (fun_ext (fun u : _90715 -> Prop => @lem3526255 _90715 _90724 _37164 u)). Qed.
Lemma lem3526257 {_90715 : Type'} : (@all (_90715 -> Prop)) = (@all (_90715 -> Prop)).
Proof. exact (eq_refl (@all (_90715 -> Prop))). Qed.
Lemma lem3526258 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) : (term3939 _90715 _90724 _37164) = (term3940 _90715 _90724 _37164).
Proof. exact (MK_COMB (@lem3526257 _90715) (@lem3526256 _90715 _90724 _37164)). Qed.
Lemma lem3526259 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) : (term3923 _90715 _90724 _37164) = (term3941 _90715 _90724 _37164).
Proof. exact (MK_COMB (@lem3526254 _90715 _90724 _37164) (@lem3526258 _90715 _90724 _37164)). Qed.
Lemma lem3526260 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) : ((term3922 _90715 _90724 _37164) = (term3923 _90715 _90724 _37164)) = ((term3921 _90715 _90724 _37164) = (term3941 _90715 _90724 _37164)).
Proof. exact (MK_COMB (@lem3526248 _90715 _90724 _37164) (@lem3526259 _90715 _90724 _37164)). Qed.
Lemma lem3526261 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) : (term3921 _90715 _90724 _37164) = (term3941 _90715 _90724 _37164).
Proof. exact (EQ_MP (@lem3526260 _90715 _90724 _37164) (@lem3526238 _90715 _90724 _37164)). Qed.
Lemma lem3526390 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) : (term3853 _90715 _90724 _37164) = (term3941 _90715 _90724 _37164).
Proof. exact (TRANS (@lem3526234 _90715 _90724 _37164) (@lem3526261 _90715 _90724 _37164)). Qed.
Lemma lem3526392 {A : Type'} (P : Prop) (Q : A -> Prop) : (term434 A P Q) = (term435 A P Q).
Proof. exact (EQ_MP (@lem18911 A P Q) (@lem18910 A P Q)). Qed.
Lemma lem3526393 {_90715 : Type'} (P : Prop) (Q : _90715 -> Prop) : (term434 _90715 P Q) = (term435 _90715 P Q).
Proof. exact (@lem3526392 _90715 P Q). Qed.
Lemma lem3526394 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) (GEN_PVAR_84 : _90715) (u : _90715 -> Prop) (f : _90715 -> _90724) (t : _90715 -> Prop) : (term3942 _90715 _90724 _37164 GEN_PVAR_84 u f t) = (term3943 _90715 _90724 _37164 GEN_PVAR_84 u f t).
Proof. exact (@lem3526393 _90715 (term3944 _90715 _90724 _37164 u f t GEN_PVAR_84) (term63 _90715 _90724 GEN_PVAR_84 u f t)). Qed.
Lemma lem3526395 {_90715 _90724 : Type'} (GEN_PVAR_84 : _90715) (u : _90715 -> Prop) (f : _90715 -> _90724) (t : _90715 -> Prop) (x : _90715) : (term3831 _90715 _90724 GEN_PVAR_84 u f t x) = (term61 _90715 _90724 GEN_PVAR_84 u f t x).
Proof. exact (eq_refl (term3831 _90715 _90724 GEN_PVAR_84 u f t x)). Qed.
Lemma lem3526396 {_90715 _90724 : Type'} (GEN_PVAR_84 : _90715) (u : _90715 -> Prop) (f : _90715 -> _90724) (t : _90715 -> Prop) : (term3945 _90715 _90724 GEN_PVAR_84 u f t) = (term63 _90715 _90724 GEN_PVAR_84 u f t).
Proof. exact (fun_ext (fun x : _90715 => @lem3526395 _90715 _90724 GEN_PVAR_84 u f t x)). Qed.
Lemma lem3526397 {_90715 : Type'} : (@ex _90715) = (@ex _90715).
Proof. exact (eq_refl (@ex _90715)). Qed.
Lemma lem3526398 {_90715 _90724 : Type'} (GEN_PVAR_84 : _90715) (u : _90715 -> Prop) (f : _90715 -> _90724) (t : _90715 -> Prop) : (term3946 _90715 _90724 GEN_PVAR_84 u f t) = (term65 _90715 _90724 GEN_PVAR_84 u f t).
Proof. exact (MK_COMB (@lem3526397 _90715) (@lem3526396 _90715 _90724 GEN_PVAR_84 u f t)). Qed.
Lemma lem3526399 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) (u : _90715 -> Prop) (f : _90715 -> _90724) (t : _90715 -> Prop) (GEN_PVAR_84 : _90715) : (term3837 _90715 _90724 _37164 u f t GEN_PVAR_84) = (term3837 _90715 _90724 _37164 u f t GEN_PVAR_84).
Proof. exact (eq_refl (term3837 _90715 _90724 _37164 u f t GEN_PVAR_84)). Qed.
Lemma lem3526400 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) (GEN_PVAR_84 : _90715) (u : _90715 -> Prop) (f : _90715 -> _90724) (t : _90715 -> Prop) : (term3942 _90715 _90724 _37164 GEN_PVAR_84 u f t) = (term3838 _90715 _90724 _37164 GEN_PVAR_84 u f t).
Proof. exact (MK_COMB (@lem3526399 _90715 _90724 _37164 u f t GEN_PVAR_84) (@lem3526398 _90715 _90724 GEN_PVAR_84 u f t)). Qed.
Lemma lem3526401 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem3526402 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) (GEN_PVAR_84 : _90715) (u : _90715 -> Prop) (f : _90715 -> _90724) (t : _90715 -> Prop) : (term3947 _90715 _90724 _37164 GEN_PVAR_84 u f t) = (term3948 _90715 _90724 _37164 GEN_PVAR_84 u f t).
Proof. exact (MK_COMB (@lem3526401) (@lem3526400 _90715 _90724 _37164 GEN_PVAR_84 u f t)). Qed.
Lemma lem3526403 {_90715 _90724 : Type'} (GEN_PVAR_84 : _90715) (u : _90715 -> Prop) (f : _90715 -> _90724) (t : _90715 -> Prop) (x : _90715) : (term3831 _90715 _90724 GEN_PVAR_84 u f t x) = (term61 _90715 _90724 GEN_PVAR_84 u f t x).
Proof. exact (eq_refl (term3831 _90715 _90724 GEN_PVAR_84 u f t x)). Qed.
Lemma lem3526404 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) (u : _90715 -> Prop) (f : _90715 -> _90724) (t : _90715 -> Prop) (GEN_PVAR_84 : _90715) : (term3837 _90715 _90724 _37164 u f t GEN_PVAR_84) = (term3837 _90715 _90724 _37164 u f t GEN_PVAR_84).
Proof. exact (eq_refl (term3837 _90715 _90724 _37164 u f t GEN_PVAR_84)). Qed.
Lemma lem3526405 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) (GEN_PVAR_84 : _90715) (u : _90715 -> Prop) (f : _90715 -> _90724) (t : _90715 -> Prop) (x : _90715) : (term3949 _90715 _90724 _37164 GEN_PVAR_84 u f t x) = (term3950 _90715 _90724 _37164 GEN_PVAR_84 u f t x).
Proof. exact (MK_COMB (@lem3526404 _90715 _90724 _37164 u f t GEN_PVAR_84) (@lem3526403 _90715 _90724 GEN_PVAR_84 u f t x)). Qed.
Lemma lem3526406 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) (GEN_PVAR_84 : _90715) (u : _90715 -> Prop) (f : _90715 -> _90724) (t : _90715 -> Prop) : (term3951 _90715 _90724 _37164 GEN_PVAR_84 u f t) = (term3952 _90715 _90724 _37164 GEN_PVAR_84 u f t).
Proof. exact (fun_ext (fun x : _90715 => @lem3526405 _90715 _90724 _37164 GEN_PVAR_84 u f t x)). Qed.
Lemma lem3526407 {_90715 : Type'} : (@ex _90715) = (@ex _90715).
Proof. exact (eq_refl (@ex _90715)). Qed.
Lemma lem3526408 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) (GEN_PVAR_84 : _90715) (u : _90715 -> Prop) (f : _90715 -> _90724) (t : _90715 -> Prop) : (term3943 _90715 _90724 _37164 GEN_PVAR_84 u f t) = (term3953 _90715 _90724 _37164 GEN_PVAR_84 u f t).
Proof. exact (MK_COMB (@lem3526407 _90715) (@lem3526406 _90715 _90724 _37164 GEN_PVAR_84 u f t)). Qed.
Lemma lem3526409 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) (GEN_PVAR_84 : _90715) (u : _90715 -> Prop) (f : _90715 -> _90724) (t : _90715 -> Prop) : ((term3942 _90715 _90724 _37164 GEN_PVAR_84 u f t) = (term3943 _90715 _90724 _37164 GEN_PVAR_84 u f t)) = ((term3838 _90715 _90724 _37164 GEN_PVAR_84 u f t) = (term3953 _90715 _90724 _37164 GEN_PVAR_84 u f t)).
Proof. exact (MK_COMB (@lem3526402 _90715 _90724 _37164 GEN_PVAR_84 u f t) (@lem3526408 _90715 _90724 _37164 GEN_PVAR_84 u f t)). Qed.
Lemma lem3526410 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) (GEN_PVAR_84 : _90715) (u : _90715 -> Prop) (f : _90715 -> _90724) (t : _90715 -> Prop) : (term3838 _90715 _90724 _37164 GEN_PVAR_84 u f t) = (term3953 _90715 _90724 _37164 GEN_PVAR_84 u f t).
Proof. exact (EQ_MP (@lem3526409 _90715 _90724 _37164 GEN_PVAR_84 u f t) (@lem3526394 _90715 _90724 _37164 GEN_PVAR_84 u f t)). Qed.
Lemma lem3526411 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) (u : _90715 -> Prop) (f : _90715 -> _90724) (t : _90715 -> Prop) : (term3857 _90715 _90724 _37164 u f t) = (term3954 _90715 _90724 _37164 u f t).
Proof. exact (fun_ext (fun GEN_PVAR_84 : _90715 => @lem3526410 _90715 _90724 _37164 GEN_PVAR_84 u f t)). Qed.
Lemma lem3526412 {_90715 : Type'} : (@all _90715) = (@all _90715).
Proof. exact (eq_refl (@all _90715)). Qed.
Lemma lem3526413 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) (u : _90715 -> Prop) (f : _90715 -> _90724) (t : _90715 -> Prop) : (term3872 _90715 _90724 _37164 u f t) = (term3955 _90715 _90724 _37164 u f t).
Proof. exact (MK_COMB (@lem3526412 _90715) (@lem3526411 _90715 _90724 _37164 u f t)). Qed.
Lemma lem3526415 {A B : Type'} (P : type1413 A B) : (term453 A B P) = (term454 A B P).
Proof. exact (EQ_MP (@lem18899 A B P) (@lem18898 A B P)). Qed.
Lemma lem3526416 {_90715 : Type'} (P : type1402 _90715) : (term3480 _90715 P) = (term3481 _90715 P).
Proof. exact (@lem3526415 _90715 _90715 P). Qed.
Lemma lem3526417 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) (u : _90715 -> Prop) (f : _90715 -> _90724) (t : _90715 -> Prop) : (term3956 _90715 _90724 _37164 u f t) = (term3957 _90715 _90724 _37164 u f t).
Proof. exact (@lem3526416 _90715 (term3958 _90715 _90724 _37164 u f t)). Qed.
Lemma lem3526418 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) (GEN_PVAR_84 : _90715) (u : _90715 -> Prop) (f : _90715 -> _90724) (t : _90715 -> Prop) : (term3959 _90715 _90724 _37164 u f t GEN_PVAR_84) = (term3952 _90715 _90724 _37164 GEN_PVAR_84 u f t).
Proof. exact (eq_refl (term3959 _90715 _90724 _37164 u f t GEN_PVAR_84)). Qed.
Lemma lem3526419 {_90715 : Type'} (x : _90715) : x = x.
Proof. exact (eq_refl x). Qed.
Lemma lem3526420 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) (GEN_PVAR_84 : _90715) (u : _90715 -> Prop) (f : _90715 -> _90724) (t : _90715 -> Prop) (x : _90715) : (term3960 _90715 _90724 _37164 u f t GEN_PVAR_84 x) = (term3961 _90715 _90724 _37164 GEN_PVAR_84 u f t x).
Proof. exact (MK_COMB (@lem3526418 _90715 _90724 _37164 GEN_PVAR_84 u f t) (@lem3526419 _90715 x)). Qed.
Lemma lem3526421 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) (GEN_PVAR_84 : _90715) (u : _90715 -> Prop) (f : _90715 -> _90724) (t : _90715 -> Prop) (x : _90715) : (term3961 _90715 _90724 _37164 GEN_PVAR_84 u f t x) = (term3950 _90715 _90724 _37164 GEN_PVAR_84 u f t x).
Proof. exact (eq_refl (term3961 _90715 _90724 _37164 GEN_PVAR_84 u f t x)). Qed.
Lemma lem3526422 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) (GEN_PVAR_84 : _90715) (u : _90715 -> Prop) (f : _90715 -> _90724) (t : _90715 -> Prop) (x : _90715) : (term3960 _90715 _90724 _37164 u f t GEN_PVAR_84 x) = (term3950 _90715 _90724 _37164 GEN_PVAR_84 u f t x).
Proof. exact (TRANS (@lem3526420 _90715 _90724 _37164 GEN_PVAR_84 u f t x) (@lem3526421 _90715 _90724 _37164 GEN_PVAR_84 u f t x)). Qed.
Lemma lem3526423 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) (GEN_PVAR_84 : _90715) (u : _90715 -> Prop) (f : _90715 -> _90724) (t : _90715 -> Prop) : (term3962 _90715 _90724 _37164 u f t GEN_PVAR_84) = (term3952 _90715 _90724 _37164 GEN_PVAR_84 u f t).
Proof. exact (fun_ext (fun x : _90715 => @lem3526422 _90715 _90724 _37164 GEN_PVAR_84 u f t x)). Qed.
Lemma lem3526424 {_90715 : Type'} : (@ex _90715) = (@ex _90715).
Proof. exact (eq_refl (@ex _90715)). Qed.
Lemma lem3526425 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) (GEN_PVAR_84 : _90715) (u : _90715 -> Prop) (f : _90715 -> _90724) (t : _90715 -> Prop) : (term3963 _90715 _90724 _37164 u f t GEN_PVAR_84) = (term3953 _90715 _90724 _37164 GEN_PVAR_84 u f t).
Proof. exact (MK_COMB (@lem3526424 _90715) (@lem3526423 _90715 _90724 _37164 GEN_PVAR_84 u f t)). Qed.
Lemma lem3526426 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) (u : _90715 -> Prop) (f : _90715 -> _90724) (t : _90715 -> Prop) : (term3964 _90715 _90724 _37164 u f t) = (term3954 _90715 _90724 _37164 u f t).
Proof. exact (fun_ext (fun GEN_PVAR_84 : _90715 => @lem3526425 _90715 _90724 _37164 GEN_PVAR_84 u f t)). Qed.
Lemma lem3526427 {_90715 : Type'} : (@all _90715) = (@all _90715).
Proof. exact (eq_refl (@all _90715)). Qed.
Lemma lem3526428 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) (u : _90715 -> Prop) (f : _90715 -> _90724) (t : _90715 -> Prop) : (term3956 _90715 _90724 _37164 u f t) = (term3955 _90715 _90724 _37164 u f t).
Proof. exact (MK_COMB (@lem3526427 _90715) (@lem3526426 _90715 _90724 _37164 u f t)). Qed.
Lemma lem3526429 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem3526430 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) (u : _90715 -> Prop) (f : _90715 -> _90724) (t : _90715 -> Prop) : (term3965 _90715 _90724 _37164 u f t) = (term3966 _90715 _90724 _37164 u f t).
Proof. exact (MK_COMB (@lem3526429) (@lem3526428 _90715 _90724 _37164 u f t)). Qed.
Lemma lem3526431 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) (GEN_PVAR_84 : _90715) (u : _90715 -> Prop) (f : _90715 -> _90724) (t : _90715 -> Prop) : (term3959 _90715 _90724 _37164 u f t GEN_PVAR_84) = (term3952 _90715 _90724 _37164 GEN_PVAR_84 u f t).
Proof. exact (eq_refl (term3959 _90715 _90724 _37164 u f t GEN_PVAR_84)). Qed.
Lemma lem3526432 {_90715 : Type'} (x : _90715 -> _90715) (GEN_PVAR_84 : _90715) : (x GEN_PVAR_84) = (x GEN_PVAR_84).
Proof. exact (eq_refl (x GEN_PVAR_84)). Qed.
Lemma lem3526433 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) (u : _90715 -> Prop) (f : _90715 -> _90724) (t : _90715 -> Prop) (x : _90715 -> _90715) (GEN_PVAR_84 : _90715) : (term3967 _90715 _90724 _37164 u f t x GEN_PVAR_84) = (term3968 _90715 _90724 _37164 u f t x GEN_PVAR_84).
Proof. exact (MK_COMB (@lem3526431 _90715 _90724 _37164 GEN_PVAR_84 u f t) (@lem3526432 _90715 x GEN_PVAR_84)). Qed.
Lemma lem3526434 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) (u : _90715 -> Prop) (f : _90715 -> _90724) (t : _90715 -> Prop) (x : _90715 -> _90715) (GEN_PVAR_84 : _90715) : (term3968 _90715 _90724 _37164 u f t x GEN_PVAR_84) = (term3969 _90715 _90724 _37164 u f t x GEN_PVAR_84).
Proof. exact (eq_refl (term3968 _90715 _90724 _37164 u f t x GEN_PVAR_84)). Qed.
Lemma lem3526435 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) (u : _90715 -> Prop) (f : _90715 -> _90724) (t : _90715 -> Prop) (x : _90715 -> _90715) (GEN_PVAR_84 : _90715) : (term3967 _90715 _90724 _37164 u f t x GEN_PVAR_84) = (term3969 _90715 _90724 _37164 u f t x GEN_PVAR_84).
Proof. exact (TRANS (@lem3526433 _90715 _90724 _37164 u f t x GEN_PVAR_84) (@lem3526434 _90715 _90724 _37164 u f t x GEN_PVAR_84)). Qed.
Lemma lem3526436 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) (u : _90715 -> Prop) (f : _90715 -> _90724) (t : _90715 -> Prop) (x : _90715 -> _90715) : (term3970 _90715 _90724 _37164 u f t x) = (term3971 _90715 _90724 _37164 u f t x).
Proof. exact (fun_ext (fun GEN_PVAR_84 : _90715 => @lem3526435 _90715 _90724 _37164 u f t x GEN_PVAR_84)). Qed.
Lemma lem3526437 {_90715 : Type'} : (@all _90715) = (@all _90715).
Proof. exact (eq_refl (@all _90715)). Qed.
Lemma lem3526438 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) (u : _90715 -> Prop) (f : _90715 -> _90724) (t : _90715 -> Prop) (x : _90715 -> _90715) : (term3972 _90715 _90724 _37164 u f t x) = (term3973 _90715 _90724 _37164 u f t x).
Proof. exact (MK_COMB (@lem3526437 _90715) (@lem3526436 _90715 _90724 _37164 u f t x)). Qed.
Lemma lem3526439 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) (u : _90715 -> Prop) (f : _90715 -> _90724) (t : _90715 -> Prop) : (term3974 _90715 _90724 _37164 u f t) = (term3975 _90715 _90724 _37164 u f t).
Proof. exact (fun_ext (fun x : _90715 -> _90715 => @lem3526438 _90715 _90724 _37164 u f t x)). Qed.
Lemma lem3526440 {_90715 : Type'} : (@ex (_90715 -> _90715)) = (@ex (_90715 -> _90715)).
Proof. exact (eq_refl (@ex (_90715 -> _90715))). Qed.
Lemma lem3526441 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) (u : _90715 -> Prop) (f : _90715 -> _90724) (t : _90715 -> Prop) : (term3957 _90715 _90724 _37164 u f t) = (term3976 _90715 _90724 _37164 u f t).
Proof. exact (MK_COMB (@lem3526440 _90715) (@lem3526439 _90715 _90724 _37164 u f t)). Qed.
Lemma lem3526442 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) (u : _90715 -> Prop) (f : _90715 -> _90724) (t : _90715 -> Prop) : ((term3956 _90715 _90724 _37164 u f t) = (term3957 _90715 _90724 _37164 u f t)) = ((term3955 _90715 _90724 _37164 u f t) = (term3976 _90715 _90724 _37164 u f t)).
Proof. exact (MK_COMB (@lem3526430 _90715 _90724 _37164 u f t) (@lem3526441 _90715 _90724 _37164 u f t)). Qed.
Lemma lem3526443 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) (u : _90715 -> Prop) (f : _90715 -> _90724) (t : _90715 -> Prop) : (term3955 _90715 _90724 _37164 u f t) = (term3976 _90715 _90724 _37164 u f t).
Proof. exact (EQ_MP (@lem3526442 _90715 _90724 _37164 u f t) (@lem3526417 _90715 _90724 _37164 u f t)). Qed.
Lemma lem3526444 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) (u : _90715 -> Prop) (f : _90715 -> _90724) (t : _90715 -> Prop) : (term3872 _90715 _90724 _37164 u f t) = (term3976 _90715 _90724 _37164 u f t).
Proof. exact (TRANS (@lem3526413 _90715 _90724 _37164 u f t) (@lem3526443 _90715 _90724 _37164 u f t)). Qed.
Lemma lem3526445 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) (u : _90715 -> Prop) (f : _90715 -> _90724) : (term3879 _90715 _90724 _37164 u f) = (term3977 _90715 _90724 _37164 u f).
Proof. exact (fun_ext (fun t : _90715 -> Prop => @lem3526444 _90715 _90724 _37164 u f t)). Qed.
Lemma lem3526446 {_90715 : Type'} : (@all (_90715 -> Prop)) = (@all (_90715 -> Prop)).
Proof. exact (eq_refl (@all (_90715 -> Prop))). Qed.
Lemma lem3526447 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) (u : _90715 -> Prop) (f : _90715 -> _90724) : (term3894 _90715 _90724 _37164 u f) = (term3978 _90715 _90724 _37164 u f).
Proof. exact (MK_COMB (@lem3526446 _90715) (@lem3526445 _90715 _90724 _37164 u f)). Qed.
Lemma lem3526449 {A B : Type'} (P : type1413 A B) : (term453 A B P) = (term454 A B P).
Proof. exact (EQ_MP (@lem18899 A B P) (@lem18898 A B P)). Qed.
Lemma lem3526450 {_90715 : Type'} (P : type624 _90715) : (term3505 _90715 P) = (term3506 _90715 P).
Proof. exact (@lem3526449 (_90715 -> Prop) (_90715 -> _90715) P). Qed.
Lemma lem3526451 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) (u : _90715 -> Prop) (f : _90715 -> _90724) : (term3979 _90715 _90724 _37164 u f) = (term3980 _90715 _90724 _37164 u f).
Proof. exact (@lem3526450 _90715 (term3981 _90715 _90724 _37164 u f)). Qed.
Lemma lem3526452 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) (u : _90715 -> Prop) (f : _90715 -> _90724) (t : _90715 -> Prop) : (term3982 _90715 _90724 _37164 u f t) = (term3975 _90715 _90724 _37164 u f t).
Proof. exact (eq_refl (term3982 _90715 _90724 _37164 u f t)). Qed.
Lemma lem3526453 {_90715 : Type'} (x : _90715 -> _90715) : x = x.
Proof. exact (eq_refl x). Qed.
Lemma lem3526454 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) (u : _90715 -> Prop) (f : _90715 -> _90724) (t : _90715 -> Prop) (x : _90715 -> _90715) : (term3983 _90715 _90724 _37164 u f t x) = (term3984 _90715 _90724 _37164 u f t x).
Proof. exact (MK_COMB (@lem3526452 _90715 _90724 _37164 u f t) (@lem3526453 _90715 x)). Qed.
Lemma lem3526455 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) (u : _90715 -> Prop) (f : _90715 -> _90724) (t : _90715 -> Prop) (x : _90715 -> _90715) : (term3984 _90715 _90724 _37164 u f t x) = (term3973 _90715 _90724 _37164 u f t x).
Proof. exact (eq_refl (term3984 _90715 _90724 _37164 u f t x)). Qed.
Lemma lem3526456 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) (u : _90715 -> Prop) (f : _90715 -> _90724) (t : _90715 -> Prop) (x : _90715 -> _90715) : (term3983 _90715 _90724 _37164 u f t x) = (term3973 _90715 _90724 _37164 u f t x).
Proof. exact (TRANS (@lem3526454 _90715 _90724 _37164 u f t x) (@lem3526455 _90715 _90724 _37164 u f t x)). Qed.
Lemma lem3526457 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) (u : _90715 -> Prop) (f : _90715 -> _90724) (t : _90715 -> Prop) : (term3985 _90715 _90724 _37164 u f t) = (term3975 _90715 _90724 _37164 u f t).
Proof. exact (fun_ext (fun x : _90715 -> _90715 => @lem3526456 _90715 _90724 _37164 u f t x)). Qed.
Lemma lem3526458 {_90715 : Type'} : (@ex (_90715 -> _90715)) = (@ex (_90715 -> _90715)).
Proof. exact (eq_refl (@ex (_90715 -> _90715))). Qed.
Lemma lem3526459 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) (u : _90715 -> Prop) (f : _90715 -> _90724) (t : _90715 -> Prop) : (term3986 _90715 _90724 _37164 u f t) = (term3976 _90715 _90724 _37164 u f t).
Proof. exact (MK_COMB (@lem3526458 _90715) (@lem3526457 _90715 _90724 _37164 u f t)). Qed.
Lemma lem3526460 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) (u : _90715 -> Prop) (f : _90715 -> _90724) : (term3987 _90715 _90724 _37164 u f) = (term3977 _90715 _90724 _37164 u f).
Proof. exact (fun_ext (fun t : _90715 -> Prop => @lem3526459 _90715 _90724 _37164 u f t)). Qed.
Lemma lem3526461 {_90715 : Type'} : (@all (_90715 -> Prop)) = (@all (_90715 -> Prop)).
Proof. exact (eq_refl (@all (_90715 -> Prop))). Qed.
Lemma lem3526462 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) (u : _90715 -> Prop) (f : _90715 -> _90724) : (term3979 _90715 _90724 _37164 u f) = (term3978 _90715 _90724 _37164 u f).
Proof. exact (MK_COMB (@lem3526461 _90715) (@lem3526460 _90715 _90724 _37164 u f)). Qed.
Lemma lem3526463 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem3526464 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) (u : _90715 -> Prop) (f : _90715 -> _90724) : (term3988 _90715 _90724 _37164 u f) = (term3989 _90715 _90724 _37164 u f).
Proof. exact (MK_COMB (@lem3526463) (@lem3526462 _90715 _90724 _37164 u f)). Qed.
Lemma lem3526465 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) (u : _90715 -> Prop) (f : _90715 -> _90724) (t : _90715 -> Prop) : (term3982 _90715 _90724 _37164 u f t) = (term3975 _90715 _90724 _37164 u f t).
Proof. exact (eq_refl (term3982 _90715 _90724 _37164 u f t)). Qed.
Lemma lem3526466 {_90715 : Type'} (x : type670 _90715) (t : _90715 -> Prop) : (x t) = (x t).
Proof. exact (eq_refl (x t)). Qed.
Lemma lem3526467 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) (u : _90715 -> Prop) (f : _90715 -> _90724) (x : type670 _90715) (t : _90715 -> Prop) : (term3990 _90715 _90724 _37164 u f x t) = (term3991 _90715 _90724 _37164 u f x t).
Proof. exact (MK_COMB (@lem3526465 _90715 _90724 _37164 u f t) (@lem3526466 _90715 x t)). Qed.
Lemma lem3526468 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) (u : _90715 -> Prop) (f : _90715 -> _90724) (x : type670 _90715) (t : _90715 -> Prop) : (term3991 _90715 _90724 _37164 u f x t) = (term3992 _90715 _90724 _37164 u f x t).
Proof. exact (eq_refl (term3991 _90715 _90724 _37164 u f x t)). Qed.
Lemma lem3526469 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) (u : _90715 -> Prop) (f : _90715 -> _90724) (x : type670 _90715) (t : _90715 -> Prop) : (term3990 _90715 _90724 _37164 u f x t) = (term3992 _90715 _90724 _37164 u f x t).
Proof. exact (TRANS (@lem3526467 _90715 _90724 _37164 u f x t) (@lem3526468 _90715 _90724 _37164 u f x t)). Qed.
Lemma lem3526470 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) (u : _90715 -> Prop) (f : _90715 -> _90724) (x : type670 _90715) : (term3993 _90715 _90724 _37164 u f x) = (term3994 _90715 _90724 _37164 u f x).
Proof. exact (fun_ext (fun t : _90715 -> Prop => @lem3526469 _90715 _90724 _37164 u f x t)). Qed.
Lemma lem3526471 {_90715 : Type'} : (@all (_90715 -> Prop)) = (@all (_90715 -> Prop)).
Proof. exact (eq_refl (@all (_90715 -> Prop))). Qed.
Lemma lem3526472 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) (u : _90715 -> Prop) (f : _90715 -> _90724) (x : type670 _90715) : (term3995 _90715 _90724 _37164 u f x) = (term3996 _90715 _90724 _37164 u f x).
Proof. exact (MK_COMB (@lem3526471 _90715) (@lem3526470 _90715 _90724 _37164 u f x)). Qed.
Lemma lem3526473 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) (u : _90715 -> Prop) (f : _90715 -> _90724) : (term3997 _90715 _90724 _37164 u f) = (term3998 _90715 _90724 _37164 u f).
Proof. exact (fun_ext (fun x : type670 _90715 => @lem3526472 _90715 _90724 _37164 u f x)). Qed.
Lemma lem3526474 {_90715 : Type'} : (@ex ((_90715 -> Prop) -> _90715 -> _90715)) = (@ex ((_90715 -> Prop) -> _90715 -> _90715)).
Proof. exact (eq_refl (@ex ((_90715 -> Prop) -> _90715 -> _90715))). Qed.
Lemma lem3526475 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) (u : _90715 -> Prop) (f : _90715 -> _90724) : (term3980 _90715 _90724 _37164 u f) = (term3999 _90715 _90724 _37164 u f).
Proof. exact (MK_COMB (@lem3526474 _90715) (@lem3526473 _90715 _90724 _37164 u f)). Qed.
Lemma lem3526476 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) (u : _90715 -> Prop) (f : _90715 -> _90724) : ((term3979 _90715 _90724 _37164 u f) = (term3980 _90715 _90724 _37164 u f)) = ((term3978 _90715 _90724 _37164 u f) = (term3999 _90715 _90724 _37164 u f)).
Proof. exact (MK_COMB (@lem3526464 _90715 _90724 _37164 u f) (@lem3526475 _90715 _90724 _37164 u f)). Qed.
Lemma lem3526477 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) (u : _90715 -> Prop) (f : _90715 -> _90724) : (term3978 _90715 _90724 _37164 u f) = (term3999 _90715 _90724 _37164 u f).
Proof. exact (EQ_MP (@lem3526476 _90715 _90724 _37164 u f) (@lem3526451 _90715 _90724 _37164 u f)). Qed.
Lemma lem3526478 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) (u : _90715 -> Prop) (f : _90715 -> _90724) : (term3894 _90715 _90724 _37164 u f) = (term3999 _90715 _90724 _37164 u f).
Proof. exact (TRANS (@lem3526447 _90715 _90724 _37164 u f) (@lem3526477 _90715 _90724 _37164 u f)). Qed.
Lemma lem3526479 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) (u : _90715 -> Prop) : (term3903 _90715 _90724 _37164 u) = (term4000 _90715 _90724 _37164 u).
Proof. exact (fun_ext (fun f : _90715 -> _90724 => @lem3526478 _90715 _90724 _37164 u f)). Qed.
Lemma lem3526480 {_90715 _90724 : Type'} : (@all (_90715 -> _90724)) = (@all (_90715 -> _90724)).
Proof. exact (eq_refl (@all (_90715 -> _90724))). Qed.
Lemma lem3526481 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) (u : _90715 -> Prop) : (term3918 _90715 _90724 _37164 u) = (term4001 _90715 _90724 _37164 u).
Proof. exact (MK_COMB (@lem3526480 _90715 _90724) (@lem3526479 _90715 _90724 _37164 u)). Qed.
Lemma lem3526483 {A B : Type'} (P : type1413 A B) : (term453 A B P) = (term454 A B P).
Proof. exact (EQ_MP (@lem18899 A B P) (@lem18898 A B P)). Qed.
Lemma lem3526484 {_90715 _90724 : Type'} (P : type502 _90715 _90724) : (term4002 _90715 _90724 P) = (term4003 _90715 _90724 P).
Proof. exact (@lem3526483 (_90715 -> _90724) (type670 _90715) P). Qed.
Lemma lem3526485 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) (u : _90715 -> Prop) : (term4004 _90715 _90724 _37164 u) = (term4005 _90715 _90724 _37164 u).
Proof. exact (@lem3526484 _90715 _90724 (term4006 _90715 _90724 _37164 u)). Qed.
Lemma lem3526486 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) (u : _90715 -> Prop) (f : _90715 -> _90724) : (term4007 _90715 _90724 _37164 u f) = (term3998 _90715 _90724 _37164 u f).
Proof. exact (eq_refl (term4007 _90715 _90724 _37164 u f)). Qed.
Lemma lem3526487 {_90715 : Type'} (x : type670 _90715) : x = x.
Proof. exact (eq_refl x). Qed.
Lemma lem3526488 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) (u : _90715 -> Prop) (f : _90715 -> _90724) (x : type670 _90715) : (term4008 _90715 _90724 _37164 u f x) = (term4009 _90715 _90724 _37164 u f x).
Proof. exact (MK_COMB (@lem3526486 _90715 _90724 _37164 u f) (@lem3526487 _90715 x)). Qed.
Lemma lem3526489 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) (u : _90715 -> Prop) (f : _90715 -> _90724) (x : type670 _90715) : (term4009 _90715 _90724 _37164 u f x) = (term3996 _90715 _90724 _37164 u f x).
Proof. exact (eq_refl (term4009 _90715 _90724 _37164 u f x)). Qed.
Lemma lem3526490 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) (u : _90715 -> Prop) (f : _90715 -> _90724) (x : type670 _90715) : (term4008 _90715 _90724 _37164 u f x) = (term3996 _90715 _90724 _37164 u f x).
Proof. exact (TRANS (@lem3526488 _90715 _90724 _37164 u f x) (@lem3526489 _90715 _90724 _37164 u f x)). Qed.
Lemma lem3526491 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) (u : _90715 -> Prop) (f : _90715 -> _90724) : (term4010 _90715 _90724 _37164 u f) = (term3998 _90715 _90724 _37164 u f).
Proof. exact (fun_ext (fun x : type670 _90715 => @lem3526490 _90715 _90724 _37164 u f x)). Qed.
Lemma lem3526492 {_90715 : Type'} : (@ex ((_90715 -> Prop) -> _90715 -> _90715)) = (@ex ((_90715 -> Prop) -> _90715 -> _90715)).
Proof. exact (eq_refl (@ex ((_90715 -> Prop) -> _90715 -> _90715))). Qed.
Lemma lem3526493 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) (u : _90715 -> Prop) (f : _90715 -> _90724) : (term4011 _90715 _90724 _37164 u f) = (term3999 _90715 _90724 _37164 u f).
Proof. exact (MK_COMB (@lem3526492 _90715) (@lem3526491 _90715 _90724 _37164 u f)). Qed.
Lemma lem3526494 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) (u : _90715 -> Prop) : (term4012 _90715 _90724 _37164 u) = (term4000 _90715 _90724 _37164 u).
Proof. exact (fun_ext (fun f : _90715 -> _90724 => @lem3526493 _90715 _90724 _37164 u f)). Qed.
Lemma lem3526495 {_90715 _90724 : Type'} : (@all (_90715 -> _90724)) = (@all (_90715 -> _90724)).
Proof. exact (eq_refl (@all (_90715 -> _90724))). Qed.
Lemma lem3526496 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) (u : _90715 -> Prop) : (term4004 _90715 _90724 _37164 u) = (term4001 _90715 _90724 _37164 u).
Proof. exact (MK_COMB (@lem3526495 _90715 _90724) (@lem3526494 _90715 _90724 _37164 u)). Qed.
Lemma lem3526497 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem3526498 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) (u : _90715 -> Prop) : (term4013 _90715 _90724 _37164 u) = (term4014 _90715 _90724 _37164 u).
Proof. exact (MK_COMB (@lem3526497) (@lem3526496 _90715 _90724 _37164 u)). Qed.
Lemma lem3526499 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) (u : _90715 -> Prop) (f : _90715 -> _90724) : (term4007 _90715 _90724 _37164 u f) = (term3998 _90715 _90724 _37164 u f).
Proof. exact (eq_refl (term4007 _90715 _90724 _37164 u f)). Qed.
Lemma lem3526500 {_90715 _90724 : Type'} (x : type526 _90715 _90724) (f : _90715 -> _90724) : (x f) = (x f).
Proof. exact (eq_refl (x f)). Qed.
Lemma lem3526501 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) (u : _90715 -> Prop) (x : type526 _90715 _90724) (f : _90715 -> _90724) : (term4015 _90715 _90724 _37164 u x f) = (term4016 _90715 _90724 _37164 u x f).
Proof. exact (MK_COMB (@lem3526499 _90715 _90724 _37164 u f) (@lem3526500 _90715 _90724 x f)). Qed.
Lemma lem3526502 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) (u : _90715 -> Prop) (x : type526 _90715 _90724) (f : _90715 -> _90724) : (term4016 _90715 _90724 _37164 u x f) = (term4017 _90715 _90724 _37164 u x f).
Proof. exact (eq_refl (term4016 _90715 _90724 _37164 u x f)). Qed.
Lemma lem3526503 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) (u : _90715 -> Prop) (x : type526 _90715 _90724) (f : _90715 -> _90724) : (term4015 _90715 _90724 _37164 u x f) = (term4017 _90715 _90724 _37164 u x f).
Proof. exact (TRANS (@lem3526501 _90715 _90724 _37164 u x f) (@lem3526502 _90715 _90724 _37164 u x f)). Qed.
Lemma lem3526504 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) (u : _90715 -> Prop) (x : type526 _90715 _90724) : (term4018 _90715 _90724 _37164 u x) = (term4019 _90715 _90724 _37164 u x).
Proof. exact (fun_ext (fun f : _90715 -> _90724 => @lem3526503 _90715 _90724 _37164 u x f)). Qed.
Lemma lem3526505 {_90715 _90724 : Type'} : (@all (_90715 -> _90724)) = (@all (_90715 -> _90724)).
Proof. exact (eq_refl (@all (_90715 -> _90724))). Qed.
Lemma lem3526506 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) (u : _90715 -> Prop) (x : type526 _90715 _90724) : (term4020 _90715 _90724 _37164 u x) = (term4021 _90715 _90724 _37164 u x).
Proof. exact (MK_COMB (@lem3526505 _90715 _90724) (@lem3526504 _90715 _90724 _37164 u x)). Qed.
Lemma lem3526507 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) (u : _90715 -> Prop) : (term4022 _90715 _90724 _37164 u) = (term4023 _90715 _90724 _37164 u).
Proof. exact (fun_ext (fun x : type526 _90715 _90724 => @lem3526506 _90715 _90724 _37164 u x)). Qed.
Lemma lem3526508 {_90715 _90724 : Type'} : (@ex ((_90715 -> _90724) -> (_90715 -> Prop) -> _90715 -> _90715)) = (@ex ((_90715 -> _90724) -> (_90715 -> Prop) -> _90715 -> _90715)).
Proof. exact (eq_refl (@ex ((_90715 -> _90724) -> (_90715 -> Prop) -> _90715 -> _90715))). Qed.
Lemma lem3526509 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) (u : _90715 -> Prop) : (term4005 _90715 _90724 _37164 u) = (term4024 _90715 _90724 _37164 u).
Proof. exact (MK_COMB (@lem3526508 _90715 _90724) (@lem3526507 _90715 _90724 _37164 u)). Qed.
Lemma lem3526510 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) (u : _90715 -> Prop) : ((term4004 _90715 _90724 _37164 u) = (term4005 _90715 _90724 _37164 u)) = ((term4001 _90715 _90724 _37164 u) = (term4024 _90715 _90724 _37164 u)).
Proof. exact (MK_COMB (@lem3526498 _90715 _90724 _37164 u) (@lem3526509 _90715 _90724 _37164 u)). Qed.
Lemma lem3526511 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) (u : _90715 -> Prop) : (term4001 _90715 _90724 _37164 u) = (term4024 _90715 _90724 _37164 u).
Proof. exact (EQ_MP (@lem3526510 _90715 _90724 _37164 u) (@lem3526485 _90715 _90724 _37164 u)). Qed.
Lemma lem3526512 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) (u : _90715 -> Prop) : (term3918 _90715 _90724 _37164 u) = (term4024 _90715 _90724 _37164 u).
Proof. exact (TRANS (@lem3526481 _90715 _90724 _37164 u) (@lem3526511 _90715 _90724 _37164 u)). Qed.
Lemma lem3526513 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) : (term3925 _90715 _90724 _37164) = (term4025 _90715 _90724 _37164).
Proof. exact (fun_ext (fun u : _90715 -> Prop => @lem3526512 _90715 _90724 _37164 u)). Qed.
Lemma lem3526514 {_90715 : Type'} : (@all (_90715 -> Prop)) = (@all (_90715 -> Prop)).
Proof. exact (eq_refl (@all (_90715 -> Prop))). Qed.
Lemma lem3526515 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) : (term3940 _90715 _90724 _37164) = (term4026 _90715 _90724 _37164).
Proof. exact (MK_COMB (@lem3526514 _90715) (@lem3526513 _90715 _90724 _37164)). Qed.
Lemma lem3526517 {A B : Type'} (P : type1413 A B) : (term453 A B P) = (term454 A B P).
Proof. exact (EQ_MP (@lem18899 A B P) (@lem18898 A B P)). Qed.
Lemma lem3526518 {_90715 _90724 : Type'} (P : type589 _90715 _90724) : (term4027 _90715 _90724 P) = (term4028 _90715 _90724 P).
Proof. exact (@lem3526517 (_90715 -> Prop) (type526 _90715 _90724) P). Qed.
Lemma lem3526519 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) : (term4029 _90715 _90724 _37164) = (term4030 _90715 _90724 _37164).
Proof. exact (@lem3526518 _90715 _90724 (term4031 _90715 _90724 _37164)). Qed.
Lemma lem3526520 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) (u : _90715 -> Prop) : (term4032 _90715 _90724 _37164 u) = (term4023 _90715 _90724 _37164 u).
Proof. exact (eq_refl (term4032 _90715 _90724 _37164 u)). Qed.
Lemma lem3526521 {_90715 _90724 : Type'} (x : type526 _90715 _90724) : x = x.
Proof. exact (eq_refl x). Qed.
Lemma lem3526522 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) (u : _90715 -> Prop) (x : type526 _90715 _90724) : (term4033 _90715 _90724 _37164 u x) = (term4034 _90715 _90724 _37164 u x).
Proof. exact (MK_COMB (@lem3526520 _90715 _90724 _37164 u) (@lem3526521 _90715 _90724 x)). Qed.
Lemma lem3526523 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) (u : _90715 -> Prop) (x : type526 _90715 _90724) : (term4034 _90715 _90724 _37164 u x) = (term4021 _90715 _90724 _37164 u x).
Proof. exact (eq_refl (term4034 _90715 _90724 _37164 u x)). Qed.
Lemma lem3526524 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) (u : _90715 -> Prop) (x : type526 _90715 _90724) : (term4033 _90715 _90724 _37164 u x) = (term4021 _90715 _90724 _37164 u x).
Proof. exact (TRANS (@lem3526522 _90715 _90724 _37164 u x) (@lem3526523 _90715 _90724 _37164 u x)). Qed.
Lemma lem3526525 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) (u : _90715 -> Prop) : (term4035 _90715 _90724 _37164 u) = (term4023 _90715 _90724 _37164 u).
Proof. exact (fun_ext (fun x : type526 _90715 _90724 => @lem3526524 _90715 _90724 _37164 u x)). Qed.
Lemma lem3526526 {_90715 _90724 : Type'} : (@ex ((_90715 -> _90724) -> (_90715 -> Prop) -> _90715 -> _90715)) = (@ex ((_90715 -> _90724) -> (_90715 -> Prop) -> _90715 -> _90715)).
Proof. exact (eq_refl (@ex ((_90715 -> _90724) -> (_90715 -> Prop) -> _90715 -> _90715))). Qed.
Lemma lem3526527 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) (u : _90715 -> Prop) : (term4036 _90715 _90724 _37164 u) = (term4024 _90715 _90724 _37164 u).
Proof. exact (MK_COMB (@lem3526526 _90715 _90724) (@lem3526525 _90715 _90724 _37164 u)). Qed.
Lemma lem3526528 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) : (term4037 _90715 _90724 _37164) = (term4025 _90715 _90724 _37164).
Proof. exact (fun_ext (fun u : _90715 -> Prop => @lem3526527 _90715 _90724 _37164 u)). Qed.
Lemma lem3526529 {_90715 : Type'} : (@all (_90715 -> Prop)) = (@all (_90715 -> Prop)).
Proof. exact (eq_refl (@all (_90715 -> Prop))). Qed.
Lemma lem3526530 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) : (term4029 _90715 _90724 _37164) = (term4026 _90715 _90724 _37164).
Proof. exact (MK_COMB (@lem3526529 _90715) (@lem3526528 _90715 _90724 _37164)). Qed.
Lemma lem3526531 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem3526532 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) : (term4038 _90715 _90724 _37164) = (term4039 _90715 _90724 _37164).
Proof. exact (MK_COMB (@lem3526531) (@lem3526530 _90715 _90724 _37164)). Qed.
Lemma lem3526533 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) (u : _90715 -> Prop) : (term4032 _90715 _90724 _37164 u) = (term4023 _90715 _90724 _37164 u).
Proof. exact (eq_refl (term4032 _90715 _90724 _37164 u)). Qed.
Lemma lem3526534 {_90715 _90724 : Type'} (x : type626 _90715 _90724) (u : _90715 -> Prop) : (x u) = (x u).
Proof. exact (eq_refl (x u)). Qed.
Lemma lem3526535 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) (x : type626 _90715 _90724) (u : _90715 -> Prop) : (term4040 _90715 _90724 _37164 x u) = (term4041 _90715 _90724 _37164 x u).
Proof. exact (MK_COMB (@lem3526533 _90715 _90724 _37164 u) (@lem3526534 _90715 _90724 x u)). Qed.
Lemma lem3526536 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) (x : type626 _90715 _90724) (u : _90715 -> Prop) : (term4041 _90715 _90724 _37164 x u) = (term4042 _90715 _90724 _37164 x u).
Proof. exact (eq_refl (term4041 _90715 _90724 _37164 x u)). Qed.
Lemma lem3526537 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) (x : type626 _90715 _90724) (u : _90715 -> Prop) : (term4040 _90715 _90724 _37164 x u) = (term4042 _90715 _90724 _37164 x u).
Proof. exact (TRANS (@lem3526535 _90715 _90724 _37164 x u) (@lem3526536 _90715 _90724 _37164 x u)). Qed.
Lemma lem3526538 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) (x : type626 _90715 _90724) : (term4043 _90715 _90724 _37164 x) = (term4044 _90715 _90724 _37164 x).
Proof. exact (fun_ext (fun u : _90715 -> Prop => @lem3526537 _90715 _90724 _37164 x u)). Qed.
Lemma lem3526539 {_90715 : Type'} : (@all (_90715 -> Prop)) = (@all (_90715 -> Prop)).
Proof. exact (eq_refl (@all (_90715 -> Prop))). Qed.
Lemma lem3526540 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) (x : type626 _90715 _90724) : (term4045 _90715 _90724 _37164 x) = (term4046 _90715 _90724 _37164 x).
Proof. exact (MK_COMB (@lem3526539 _90715) (@lem3526538 _90715 _90724 _37164 x)). Qed.
Lemma lem3526541 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) : (term4047 _90715 _90724 _37164) = (term4048 _90715 _90724 _37164).
Proof. exact (fun_ext (fun x : type626 _90715 _90724 => @lem3526540 _90715 _90724 _37164 x)). Qed.
Lemma lem3526542 {_90715 _90724 : Type'} : (@ex ((_90715 -> Prop) -> (_90715 -> _90724) -> (_90715 -> Prop) -> _90715 -> _90715)) = (@ex ((_90715 -> Prop) -> (_90715 -> _90724) -> (_90715 -> Prop) -> _90715 -> _90715)).
Proof. exact (eq_refl (@ex ((_90715 -> Prop) -> (_90715 -> _90724) -> (_90715 -> Prop) -> _90715 -> _90715))). Qed.
Lemma lem3526543 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) : (term4030 _90715 _90724 _37164) = (term4049 _90715 _90724 _37164).
Proof. exact (MK_COMB (@lem3526542 _90715 _90724) (@lem3526541 _90715 _90724 _37164)). Qed.
Lemma lem3526544 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) : ((term4029 _90715 _90724 _37164) = (term4030 _90715 _90724 _37164)) = ((term4026 _90715 _90724 _37164) = (term4049 _90715 _90724 _37164)).
Proof. exact (MK_COMB (@lem3526532 _90715 _90724 _37164) (@lem3526543 _90715 _90724 _37164)). Qed.
Lemma lem3526545 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) : (term4026 _90715 _90724 _37164) = (term4049 _90715 _90724 _37164).
Proof. exact (EQ_MP (@lem3526544 _90715 _90724 _37164) (@lem3526519 _90715 _90724 _37164)). Qed.
Lemma lem3526546 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) : (term3940 _90715 _90724 _37164) = (term4049 _90715 _90724 _37164).
Proof. exact (TRANS (@lem3526515 _90715 _90724 _37164) (@lem3526545 _90715 _90724 _37164)). Qed.
Lemma lem3526547 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) : (term3937 _90715 _90724 _37164) = (term3937 _90715 _90724 _37164).
Proof. exact (eq_refl (term3937 _90715 _90724 _37164)). Qed.
Lemma lem3526548 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) : (term3941 _90715 _90724 _37164) = (term4050 _90715 _90724 _37164).
Proof. exact (MK_COMB (@lem3526547 _90715 _90724 _37164) (@lem3526546 _90715 _90724 _37164)). Qed.
Lemma lem3526550 {A : Type'} (P : Prop) (Q : A -> Prop) : (term415 A P Q) = (term416 A P Q).
Proof. exact (EQ_MP (@lem18929 A P Q) (@lem18928 A P Q)). Qed.
Lemma lem3526551 {_90715 _90724 : Type'} (P : Prop) (Q : type131 _90715 _90724) : (term4051 _90715 _90724 P Q) = (term4052 _90715 _90724 P Q).
Proof. exact (@lem3526550 (type626 _90715 _90724) P Q). Qed.
Lemma lem3526552 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) : (term4053 _90715 _90724 _37164) = (term4054 _90715 _90724 _37164).
Proof. exact (@lem3526551 _90715 _90724 (term3935 _90715 _90724 _37164) (term4048 _90715 _90724 _37164)). Qed.
Lemma lem3526553 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) (x : type626 _90715 _90724) : (term4055 _90715 _90724 _37164 x) = (term4046 _90715 _90724 _37164 x).
Proof. exact (eq_refl (term4055 _90715 _90724 _37164 x)). Qed.
Lemma lem3526554 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) : (term4056 _90715 _90724 _37164) = (term4048 _90715 _90724 _37164).
Proof. exact (fun_ext (fun x : type626 _90715 _90724 => @lem3526553 _90715 _90724 _37164 x)). Qed.
Lemma lem3526555 {_90715 _90724 : Type'} : (@ex ((_90715 -> Prop) -> (_90715 -> _90724) -> (_90715 -> Prop) -> _90715 -> _90715)) = (@ex ((_90715 -> Prop) -> (_90715 -> _90724) -> (_90715 -> Prop) -> _90715 -> _90715)).
Proof. exact (eq_refl (@ex ((_90715 -> Prop) -> (_90715 -> _90724) -> (_90715 -> Prop) -> _90715 -> _90715))). Qed.
Lemma lem3526556 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) : (term4057 _90715 _90724 _37164) = (term4049 _90715 _90724 _37164).
Proof. exact (MK_COMB (@lem3526555 _90715 _90724) (@lem3526554 _90715 _90724 _37164)). Qed.
Lemma lem3526557 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) : (term3937 _90715 _90724 _37164) = (term3937 _90715 _90724 _37164).
Proof. exact (eq_refl (term3937 _90715 _90724 _37164)). Qed.
Lemma lem3526558 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) : (term4053 _90715 _90724 _37164) = (term4050 _90715 _90724 _37164).
Proof. exact (MK_COMB (@lem3526557 _90715 _90724 _37164) (@lem3526556 _90715 _90724 _37164)). Qed.
Lemma lem3526559 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem3526560 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) : (term4058 _90715 _90724 _37164) = (term4059 _90715 _90724 _37164).
Proof. exact (MK_COMB (@lem3526559) (@lem3526558 _90715 _90724 _37164)). Qed.
Lemma lem3526561 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) (x : type626 _90715 _90724) : (term4055 _90715 _90724 _37164 x) = (term4046 _90715 _90724 _37164 x).
Proof. exact (eq_refl (term4055 _90715 _90724 _37164 x)). Qed.
Lemma lem3526562 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) : (term3937 _90715 _90724 _37164) = (term3937 _90715 _90724 _37164).
Proof. exact (eq_refl (term3937 _90715 _90724 _37164)). Qed.
Lemma lem3526563 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) (x : type626 _90715 _90724) : (term4060 _90715 _90724 _37164 x) = (term4061 _90715 _90724 _37164 x).
Proof. exact (MK_COMB (@lem3526562 _90715 _90724 _37164) (@lem3526561 _90715 _90724 _37164 x)). Qed.
Lemma lem3526564 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) : (term4062 _90715 _90724 _37164) = (term4063 _90715 _90724 _37164).
Proof. exact (fun_ext (fun x : type626 _90715 _90724 => @lem3526563 _90715 _90724 _37164 x)). Qed.
Lemma lem3526565 {_90715 _90724 : Type'} : (@ex ((_90715 -> Prop) -> (_90715 -> _90724) -> (_90715 -> Prop) -> _90715 -> _90715)) = (@ex ((_90715 -> Prop) -> (_90715 -> _90724) -> (_90715 -> Prop) -> _90715 -> _90715)).
Proof. exact (eq_refl (@ex ((_90715 -> Prop) -> (_90715 -> _90724) -> (_90715 -> Prop) -> _90715 -> _90715))). Qed.
Lemma lem3526566 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) : (term4054 _90715 _90724 _37164) = (term4064 _90715 _90724 _37164).
Proof. exact (MK_COMB (@lem3526565 _90715 _90724) (@lem3526564 _90715 _90724 _37164)). Qed.
Lemma lem3526567 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) : ((term4053 _90715 _90724 _37164) = (term4054 _90715 _90724 _37164)) = ((term4050 _90715 _90724 _37164) = (term4064 _90715 _90724 _37164)).
Proof. exact (MK_COMB (@lem3526560 _90715 _90724 _37164) (@lem3526566 _90715 _90724 _37164)). Qed.
Lemma lem3526568 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) : (term4050 _90715 _90724 _37164) = (term4064 _90715 _90724 _37164).
Proof. exact (EQ_MP (@lem3526567 _90715 _90724 _37164) (@lem3526552 _90715 _90724 _37164)). Qed.
Lemma lem3526569 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) : (term3941 _90715 _90724 _37164) = (term4064 _90715 _90724 _37164).
Proof. exact (TRANS (@lem3526548 _90715 _90724 _37164) (@lem3526568 _90715 _90724 _37164)). Qed.
Lemma lem3526570 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) : (term3853 _90715 _90724 _37164) = (term4064 _90715 _90724 _37164).
Proof. exact (TRANS (@lem3526390 _90715 _90724 _37164) (@lem3526569 _90715 _90724 _37164)). Qed.
Lemma lem3526571 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) : (term2210 _90715 _90724 _37164) = (term4064 _90715 _90724 _37164).
Proof. exact (TRANS (@lem3525794 _90715 _90724 _37164) (@lem3526570 _90715 _90724 _37164)). Qed.
Lemma lem3526572 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) (h1 : term2210 _90715 _90724 _37164) : term4064 _90715 _90724 _37164.
Proof. exact (EQ_MP (@lem3526571 _90715 _90724 _37164) (@lem3520017 _90715 _90724 _37164 h1)). Qed.
Lemma lem3526576 {A B : Type'} (GEN_PVAR_85 : A) (u : A -> Prop) (f : A -> B) (t : A -> Prop) (x : A) : (term61 A B GEN_PVAR_85 u f t x) = (term61 A B GEN_PVAR_85 u f t x).
Proof. exact (eq_refl (term61 A B GEN_PVAR_85 u f t x)). Qed.
Lemma lem3526577 {A : Type'} (P : A -> Prop) : (term311 A P) = (term312 A P).
Proof. exact (@lem18394 A P). Qed.
Lemma lem3526578 {A B : Type'} (GEN_PVAR_85 : A) (u : A -> Prop) (f : A -> B) (t : A -> Prop) : (term3829 A B GEN_PVAR_85 u f t) = (term3830 A B GEN_PVAR_85 u f t).
Proof. exact (@lem3526577 A (term63 A B GEN_PVAR_85 u f t)). Qed.
Lemma lem3526579 {A B : Type'} (GEN_PVAR_85 : A) (u : A -> Prop) (f : A -> B) (t : A -> Prop) (x : A) : (term3831 A B GEN_PVAR_85 u f t x) = (term61 A B GEN_PVAR_85 u f t x).
Proof. exact (eq_refl (term3831 A B GEN_PVAR_85 u f t x)). Qed.
Lemma lem3526580 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem3526582 {A B : Type'} (GEN_PVAR_85 : A) (u : A -> Prop) (f : A -> B) (t : A -> Prop) (x : A) : (term3832 A B GEN_PVAR_85 u f t x) = (term3833 A B GEN_PVAR_85 u f t x).
Proof. exact (MK_COMB (@lem3526580) (@lem3526579 A B GEN_PVAR_85 u f t x)). Qed.
Lemma lem3526583 {A B : Type'} (GEN_PVAR_85 : A) (u : A -> Prop) (f : A -> B) (t : A -> Prop) : (term3834 A B GEN_PVAR_85 u f t) = (term3835 A B GEN_PVAR_85 u f t).
Proof. exact (fun_ext (fun x : A => @lem3526582 A B GEN_PVAR_85 u f t x)). Qed.
Lemma lem3526584 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem3526585 {A B : Type'} (GEN_PVAR_85 : A) (u : A -> Prop) (f : A -> B) (t : A -> Prop) : (term3830 A B GEN_PVAR_85 u f t) = (term3836 A B GEN_PVAR_85 u f t).
Proof. exact (MK_COMB (@lem3526584 A) (@lem3526583 A B GEN_PVAR_85 u f t)). Qed.
Lemma lem3526586 {A B : Type'} (GEN_PVAR_85 : A) (u : A -> Prop) (f : A -> B) (t : A -> Prop) : (term3829 A B GEN_PVAR_85 u f t) = (term3836 A B GEN_PVAR_85 u f t).
Proof. exact (TRANS (@lem3526578 A B GEN_PVAR_85 u f t) (@lem3526585 A B GEN_PVAR_85 u f t)). Qed.
Lemma lem3526587 {A B : Type'} (GEN_PVAR_85 : A) (u : A -> Prop) (f : A -> B) (t : A -> Prop) : (term63 A B GEN_PVAR_85 u f t) = (term63 A B GEN_PVAR_85 u f t).
Proof. exact (fun_ext (fun x : A => @lem3526576 A B GEN_PVAR_85 u f t x)). Qed.
Lemma lem3526588 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem3526589 {A B : Type'} (GEN_PVAR_85 : A) (u : A -> Prop) (f : A -> B) (t : A -> Prop) : (term65 A B GEN_PVAR_85 u f t) = (term65 A B GEN_PVAR_85 u f t).
Proof. exact (MK_COMB (@lem3526588 A) (@lem3526587 A B GEN_PVAR_85 u f t)). Qed.
Lemma lem3526591 {A B : Type'} (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) (t : A -> Prop) (GEN_PVAR_85 : A) : (term3837 A B _37163 u f t GEN_PVAR_85) = (term3837 A B _37163 u f t GEN_PVAR_85).
Proof. exact (eq_refl (term3837 A B _37163 u f t GEN_PVAR_85)). Qed.
Lemma lem3526592 {A B : Type'} (_37163 : type627 A B) (GEN_PVAR_85 : A) (u : A -> Prop) (f : A -> B) (t : A -> Prop) : (term3838 A B _37163 GEN_PVAR_85 u f t) = (term3838 A B _37163 GEN_PVAR_85 u f t).
Proof. exact (MK_COMB (@lem3526591 A B _37163 u f t GEN_PVAR_85) (@lem3526589 A B GEN_PVAR_85 u f t)). Qed.
Lemma lem3526594 {A B : Type'} (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) (t : A -> Prop) (GEN_PVAR_85 : A) : (term3839 A B _37163 u f t GEN_PVAR_85) = (term3839 A B _37163 u f t GEN_PVAR_85).
Proof. exact (eq_refl (term3839 A B _37163 u f t GEN_PVAR_85)). Qed.
Lemma lem3526595 {A B : Type'} (_37163 : type627 A B) (GEN_PVAR_85 : A) (u : A -> Prop) (f : A -> B) (t : A -> Prop) : (term3840 A B _37163 GEN_PVAR_85 u f t) = (term3841 A B _37163 GEN_PVAR_85 u f t).
Proof. exact (MK_COMB (@lem3526594 A B _37163 u f t GEN_PVAR_85) (@lem3526586 A B GEN_PVAR_85 u f t)). Qed.
Lemma lem3526596 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem3526597 {A B : Type'} (_37163 : type627 A B) (GEN_PVAR_85 : A) (u : A -> Prop) (f : A -> B) (t : A -> Prop) : (term3842 A B _37163 GEN_PVAR_85 u f t) = (term3843 A B _37163 GEN_PVAR_85 u f t).
Proof. exact (MK_COMB (@lem3526596) (@lem3526595 A B _37163 GEN_PVAR_85 u f t)). Qed.
Lemma lem3526598 {A B : Type'} (_37163 : type627 A B) (GEN_PVAR_85 : A) (u : A -> Prop) (f : A -> B) (t : A -> Prop) : (term3844 A B _37163 GEN_PVAR_85 u f t) = (term3845 A B _37163 GEN_PVAR_85 u f t).
Proof. exact (MK_COMB (@lem3526597 A B _37163 GEN_PVAR_85 u f t) (@lem3526592 A B _37163 GEN_PVAR_85 u f t)). Qed.
Lemma lem3526599 {A B : Type'} (_37163 : type627 A B) (GEN_PVAR_85 : A) (u : A -> Prop) (f : A -> B) (t : A -> Prop) : ((_37163 u f t GEN_PVAR_85) = (term65 A B GEN_PVAR_85 u f t)) = (term3844 A B _37163 GEN_PVAR_85 u f t).
Proof. exact (@lem17784 (_37163 u f t GEN_PVAR_85) (term65 A B GEN_PVAR_85 u f t)). Qed.
Lemma lem3526600 {A B : Type'} (_37163 : type627 A B) (GEN_PVAR_85 : A) (u : A -> Prop) (f : A -> B) (t : A -> Prop) : ((_37163 u f t GEN_PVAR_85) = (term65 A B GEN_PVAR_85 u f t)) = (term3845 A B _37163 GEN_PVAR_85 u f t).
Proof. exact (TRANS (@lem3526599 A B _37163 GEN_PVAR_85 u f t) (@lem3526598 A B _37163 GEN_PVAR_85 u f t)). Qed.
Lemma lem3526601 {A B : Type'} (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) (t : A -> Prop) : (term2203 A B _37163 u f t) = (term3846 A B _37163 u f t).
Proof. exact (fun_ext (fun GEN_PVAR_85 : A => @lem3526600 A B _37163 GEN_PVAR_85 u f t)). Qed.
Lemma lem3526602 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem3526603 {A B : Type'} (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) (t : A -> Prop) : (term2204 A B _37163 u f t) = (term3847 A B _37163 u f t).
Proof. exact (MK_COMB (@lem3526602 A) (@lem3526601 A B _37163 u f t)). Qed.
Lemma lem3526604 {A B : Type'} (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) : (term2205 A B _37163 u f) = (term3848 A B _37163 u f).
Proof. exact (fun_ext (fun t : A -> Prop => @lem3526603 A B _37163 u f t)). Qed.
Lemma lem3526605 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem3526606 {A B : Type'} (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) : (term2206 A B _37163 u f) = (term3849 A B _37163 u f).
Proof. exact (MK_COMB (@lem3526605 A) (@lem3526604 A B _37163 u f)). Qed.
Lemma lem3526607 {A B : Type'} (_37163 : type627 A B) (u : A -> Prop) : (term2207 A B _37163 u) = (term3850 A B _37163 u).
Proof. exact (fun_ext (fun f : A -> B => @lem3526606 A B _37163 u f)). Qed.
Lemma lem3526608 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem3526609 {A B : Type'} (_37163 : type627 A B) (u : A -> Prop) : (term2208 A B _37163 u) = (term3851 A B _37163 u).
Proof. exact (MK_COMB (@lem3526608 A B) (@lem3526607 A B _37163 u)). Qed.
Lemma lem3526610 {A B : Type'} (_37163 : type627 A B) : (term2209 A B _37163) = (term3852 A B _37163).
Proof. exact (fun_ext (fun u : A -> Prop => @lem3526609 A B _37163 u)). Qed.
Lemma lem3526611 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem3526612 {A B : Type'} (_37163 : type627 A B) : (term2210 A B _37163) = (term3853 A B _37163).
Proof. exact (MK_COMB (@lem3526611 A) (@lem3526610 A B _37163)). Qed.
Lemma lem3526626 {A : Type'} (P : A -> Prop) (Q : A -> Prop) : (term726 A P Q) = (term725 A P Q).
Proof. exact (EQ_MP (@lem18953 A P Q) (@lem18952 A P Q)). Qed.
Lemma lem3526627 {A : Type'} (P : A -> Prop) (Q : A -> Prop) : (term726 A P Q) = (term725 A P Q).
Proof. exact (@lem3526626 A P Q). Qed.
Lemma lem3526628 {A B : Type'} (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) (t : A -> Prop) : (term3854 A B _37163 u f t) = (term3855 A B _37163 u f t).
Proof. exact (@lem3526627 A (term3856 A B _37163 u f t) (term3857 A B _37163 u f t)). Qed.
Lemma lem3526629 {A B : Type'} (_37163 : type627 A B) (GEN_PVAR_85 : A) (u : A -> Prop) (f : A -> B) (t : A -> Prop) : (term3858 A B _37163 u f t GEN_PVAR_85) = (term3841 A B _37163 GEN_PVAR_85 u f t).
Proof. exact (eq_refl (term3858 A B _37163 u f t GEN_PVAR_85)). Qed.
Lemma lem3526630 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem3526631 {A B : Type'} (_37163 : type627 A B) (GEN_PVAR_85 : A) (u : A -> Prop) (f : A -> B) (t : A -> Prop) : (term3859 A B _37163 u f t GEN_PVAR_85) = (term3843 A B _37163 GEN_PVAR_85 u f t).
Proof. exact (MK_COMB (@lem3526630) (@lem3526629 A B _37163 GEN_PVAR_85 u f t)). Qed.
Lemma lem3526632 {A B : Type'} (_37163 : type627 A B) (GEN_PVAR_85 : A) (u : A -> Prop) (f : A -> B) (t : A -> Prop) : (term3860 A B _37163 u f t GEN_PVAR_85) = (term3838 A B _37163 GEN_PVAR_85 u f t).
Proof. exact (eq_refl (term3860 A B _37163 u f t GEN_PVAR_85)). Qed.
Lemma lem3526633 {A B : Type'} (_37163 : type627 A B) (GEN_PVAR_85 : A) (u : A -> Prop) (f : A -> B) (t : A -> Prop) : (term3861 A B _37163 u f t GEN_PVAR_85) = (term3845 A B _37163 GEN_PVAR_85 u f t).
Proof. exact (MK_COMB (@lem3526631 A B _37163 GEN_PVAR_85 u f t) (@lem3526632 A B _37163 GEN_PVAR_85 u f t)). Qed.
Lemma lem3526634 {A B : Type'} (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) (t : A -> Prop) : (term3862 A B _37163 u f t) = (term3846 A B _37163 u f t).
Proof. exact (fun_ext (fun GEN_PVAR_85 : A => @lem3526633 A B _37163 GEN_PVAR_85 u f t)). Qed.
Lemma lem3526635 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem3526636 {A B : Type'} (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) (t : A -> Prop) : (term3854 A B _37163 u f t) = (term3847 A B _37163 u f t).
Proof. exact (MK_COMB (@lem3526635 A) (@lem3526634 A B _37163 u f t)). Qed.
Lemma lem3526637 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem3526638 {A B : Type'} (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) (t : A -> Prop) : (term3863 A B _37163 u f t) = (term3864 A B _37163 u f t).
Proof. exact (MK_COMB (@lem3526637) (@lem3526636 A B _37163 u f t)). Qed.
Lemma lem3526639 {A B : Type'} (_37163 : type627 A B) (GEN_PVAR_85 : A) (u : A -> Prop) (f : A -> B) (t : A -> Prop) : (term3858 A B _37163 u f t GEN_PVAR_85) = (term3841 A B _37163 GEN_PVAR_85 u f t).
Proof. exact (eq_refl (term3858 A B _37163 u f t GEN_PVAR_85)). Qed.
Lemma lem3526640 {A B : Type'} (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) (t : A -> Prop) : (term3865 A B _37163 u f t) = (term3856 A B _37163 u f t).
Proof. exact (fun_ext (fun GEN_PVAR_85 : A => @lem3526639 A B _37163 GEN_PVAR_85 u f t)). Qed.
Lemma lem3526641 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem3526642 {A B : Type'} (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) (t : A -> Prop) : (term3866 A B _37163 u f t) = (term3867 A B _37163 u f t).
Proof. exact (MK_COMB (@lem3526641 A) (@lem3526640 A B _37163 u f t)). Qed.
Lemma lem3526643 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem3526644 {A B : Type'} (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) (t : A -> Prop) : (term3868 A B _37163 u f t) = (term3869 A B _37163 u f t).
Proof. exact (MK_COMB (@lem3526643) (@lem3526642 A B _37163 u f t)). Qed.
Lemma lem3526645 {A B : Type'} (_37163 : type627 A B) (GEN_PVAR_85 : A) (u : A -> Prop) (f : A -> B) (t : A -> Prop) : (term3860 A B _37163 u f t GEN_PVAR_85) = (term3838 A B _37163 GEN_PVAR_85 u f t).
Proof. exact (eq_refl (term3860 A B _37163 u f t GEN_PVAR_85)). Qed.
Lemma lem3526646 {A B : Type'} (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) (t : A -> Prop) : (term3870 A B _37163 u f t) = (term3857 A B _37163 u f t).
Proof. exact (fun_ext (fun GEN_PVAR_85 : A => @lem3526645 A B _37163 GEN_PVAR_85 u f t)). Qed.
Lemma lem3526647 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem3526648 {A B : Type'} (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) (t : A -> Prop) : (term3871 A B _37163 u f t) = (term3872 A B _37163 u f t).
Proof. exact (MK_COMB (@lem3526647 A) (@lem3526646 A B _37163 u f t)). Qed.
Lemma lem3526649 {A B : Type'} (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) (t : A -> Prop) : (term3855 A B _37163 u f t) = (term3873 A B _37163 u f t).
Proof. exact (MK_COMB (@lem3526644 A B _37163 u f t) (@lem3526648 A B _37163 u f t)). Qed.
Lemma lem3526650 {A B : Type'} (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) (t : A -> Prop) : ((term3854 A B _37163 u f t) = (term3855 A B _37163 u f t)) = ((term3847 A B _37163 u f t) = (term3873 A B _37163 u f t)).
Proof. exact (MK_COMB (@lem3526638 A B _37163 u f t) (@lem3526649 A B _37163 u f t)). Qed.
Lemma lem3526651 {A B : Type'} (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) (t : A -> Prop) : (term3847 A B _37163 u f t) = (term3873 A B _37163 u f t).
Proof. exact (EQ_MP (@lem3526650 A B _37163 u f t) (@lem3526628 A B _37163 u f t)). Qed.
Lemma lem3526756 {A B : Type'} (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) : (term3848 A B _37163 u f) = (term3874 A B _37163 u f).
Proof. exact (fun_ext (fun t : A -> Prop => @lem3526651 A B _37163 u f t)). Qed.
Lemma lem3526757 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem3526758 {A B : Type'} (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) : (term3849 A B _37163 u f) = (term3875 A B _37163 u f).
Proof. exact (MK_COMB (@lem3526757 A) (@lem3526756 A B _37163 u f)). Qed.
Lemma lem3526760 {A : Type'} (P : A -> Prop) (Q : A -> Prop) : (term726 A P Q) = (term725 A P Q).
Proof. exact (EQ_MP (@lem18953 A P Q) (@lem18952 A P Q)). Qed.
Lemma lem3526761 {A : Type'} (P : type686 A) (Q : type686 A) : (term2898 A P Q) = (term2899 A P Q).
Proof. exact (@lem3526760 (A -> Prop) P Q). Qed.
Lemma lem3526762 {A B : Type'} (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) : (term3876 A B _37163 u f) = (term3877 A B _37163 u f).
Proof. exact (@lem3526761 A (term3878 A B _37163 u f) (term3879 A B _37163 u f)). Qed.
Lemma lem3526763 {A B : Type'} (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) (t : A -> Prop) : (term3880 A B _37163 u f t) = (term3867 A B _37163 u f t).
Proof. exact (eq_refl (term3880 A B _37163 u f t)). Qed.
Lemma lem3526764 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem3526765 {A B : Type'} (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) (t : A -> Prop) : (term3881 A B _37163 u f t) = (term3869 A B _37163 u f t).
Proof. exact (MK_COMB (@lem3526764) (@lem3526763 A B _37163 u f t)). Qed.
Lemma lem3526766 {A B : Type'} (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) (t : A -> Prop) : (term3882 A B _37163 u f t) = (term3872 A B _37163 u f t).
Proof. exact (eq_refl (term3882 A B _37163 u f t)). Qed.
Lemma lem3526767 {A B : Type'} (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) (t : A -> Prop) : (term3883 A B _37163 u f t) = (term3873 A B _37163 u f t).
Proof. exact (MK_COMB (@lem3526765 A B _37163 u f t) (@lem3526766 A B _37163 u f t)). Qed.
Lemma lem3526768 {A B : Type'} (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) : (term3884 A B _37163 u f) = (term3874 A B _37163 u f).
Proof. exact (fun_ext (fun t : A -> Prop => @lem3526767 A B _37163 u f t)). Qed.
Lemma lem3526769 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem3526770 {A B : Type'} (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) : (term3876 A B _37163 u f) = (term3875 A B _37163 u f).
Proof. exact (MK_COMB (@lem3526769 A) (@lem3526768 A B _37163 u f)). Qed.
Lemma lem3526771 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem3526772 {A B : Type'} (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) : (term3885 A B _37163 u f) = (term3886 A B _37163 u f).
Proof. exact (MK_COMB (@lem3526771) (@lem3526770 A B _37163 u f)). Qed.
Lemma lem3526773 {A B : Type'} (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) (t : A -> Prop) : (term3880 A B _37163 u f t) = (term3867 A B _37163 u f t).
Proof. exact (eq_refl (term3880 A B _37163 u f t)). Qed.
Lemma lem3526774 {A B : Type'} (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) : (term3887 A B _37163 u f) = (term3878 A B _37163 u f).
Proof. exact (fun_ext (fun t : A -> Prop => @lem3526773 A B _37163 u f t)). Qed.
Lemma lem3526775 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem3526776 {A B : Type'} (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) : (term3888 A B _37163 u f) = (term3889 A B _37163 u f).
Proof. exact (MK_COMB (@lem3526775 A) (@lem3526774 A B _37163 u f)). Qed.
Lemma lem3526777 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem3526778 {A B : Type'} (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) : (term3890 A B _37163 u f) = (term3891 A B _37163 u f).
Proof. exact (MK_COMB (@lem3526777) (@lem3526776 A B _37163 u f)). Qed.
Lemma lem3526779 {A B : Type'} (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) (t : A -> Prop) : (term3882 A B _37163 u f t) = (term3872 A B _37163 u f t).
Proof. exact (eq_refl (term3882 A B _37163 u f t)). Qed.
Lemma lem3526780 {A B : Type'} (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) : (term3892 A B _37163 u f) = (term3879 A B _37163 u f).
Proof. exact (fun_ext (fun t : A -> Prop => @lem3526779 A B _37163 u f t)). Qed.
Lemma lem3526781 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem3526782 {A B : Type'} (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) : (term3893 A B _37163 u f) = (term3894 A B _37163 u f).
Proof. exact (MK_COMB (@lem3526781 A) (@lem3526780 A B _37163 u f)). Qed.
Lemma lem3526783 {A B : Type'} (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) : (term3877 A B _37163 u f) = (term3895 A B _37163 u f).
Proof. exact (MK_COMB (@lem3526778 A B _37163 u f) (@lem3526782 A B _37163 u f)). Qed.
Lemma lem3526784 {A B : Type'} (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) : ((term3876 A B _37163 u f) = (term3877 A B _37163 u f)) = ((term3875 A B _37163 u f) = (term3895 A B _37163 u f)).
Proof. exact (MK_COMB (@lem3526772 A B _37163 u f) (@lem3526783 A B _37163 u f)). Qed.
Lemma lem3526785 {A B : Type'} (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) : (term3875 A B _37163 u f) = (term3895 A B _37163 u f).
Proof. exact (EQ_MP (@lem3526784 A B _37163 u f) (@lem3526762 A B _37163 u f)). Qed.
Lemma lem3526898 {A B : Type'} (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) : (term3849 A B _37163 u f) = (term3895 A B _37163 u f).
Proof. exact (TRANS (@lem3526758 A B _37163 u f) (@lem3526785 A B _37163 u f)). Qed.
Lemma lem3526899 {A B : Type'} (_37163 : type627 A B) (u : A -> Prop) : (term3850 A B _37163 u) = (term3896 A B _37163 u).
Proof. exact (fun_ext (fun f : A -> B => @lem3526898 A B _37163 u f)). Qed.
Lemma lem3526900 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem3526901 {A B : Type'} (_37163 : type627 A B) (u : A -> Prop) : (term3851 A B _37163 u) = (term3897 A B _37163 u).
Proof. exact (MK_COMB (@lem3526900 A B) (@lem3526899 A B _37163 u)). Qed.
Lemma lem3526903 {A : Type'} (P : A -> Prop) (Q : A -> Prop) : (term726 A P Q) = (term725 A P Q).
Proof. exact (EQ_MP (@lem18953 A P Q) (@lem18952 A P Q)). Qed.
Lemma lem3526904 {A B : Type'} (P : type572 A B) (Q : type572 A B) : (term3898 A B P Q) = (term3899 A B P Q).
Proof. exact (@lem3526903 (A -> B) P Q). Qed.
Lemma lem3526905 {A B : Type'} (_37163 : type627 A B) (u : A -> Prop) : (term3900 A B _37163 u) = (term3901 A B _37163 u).
Proof. exact (@lem3526904 A B (term3902 A B _37163 u) (term3903 A B _37163 u)). Qed.
Lemma lem3526906 {A B : Type'} (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) : (term3904 A B _37163 u f) = (term3889 A B _37163 u f).
Proof. exact (eq_refl (term3904 A B _37163 u f)). Qed.
Lemma lem3526907 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem3526908 {A B : Type'} (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) : (term3905 A B _37163 u f) = (term3891 A B _37163 u f).
Proof. exact (MK_COMB (@lem3526907) (@lem3526906 A B _37163 u f)). Qed.
Lemma lem3526909 {A B : Type'} (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) : (term3906 A B _37163 u f) = (term3894 A B _37163 u f).
Proof. exact (eq_refl (term3906 A B _37163 u f)). Qed.
Lemma lem3526910 {A B : Type'} (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) : (term3907 A B _37163 u f) = (term3895 A B _37163 u f).
Proof. exact (MK_COMB (@lem3526908 A B _37163 u f) (@lem3526909 A B _37163 u f)). Qed.
Lemma lem3526911 {A B : Type'} (_37163 : type627 A B) (u : A -> Prop) : (term3908 A B _37163 u) = (term3896 A B _37163 u).
Proof. exact (fun_ext (fun f : A -> B => @lem3526910 A B _37163 u f)). Qed.
Lemma lem3526912 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem3526913 {A B : Type'} (_37163 : type627 A B) (u : A -> Prop) : (term3900 A B _37163 u) = (term3897 A B _37163 u).
Proof. exact (MK_COMB (@lem3526912 A B) (@lem3526911 A B _37163 u)). Qed.
Lemma lem3526914 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem3526915 {A B : Type'} (_37163 : type627 A B) (u : A -> Prop) : (term3909 A B _37163 u) = (term3910 A B _37163 u).
Proof. exact (MK_COMB (@lem3526914) (@lem3526913 A B _37163 u)). Qed.
Lemma lem3526916 {A B : Type'} (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) : (term3904 A B _37163 u f) = (term3889 A B _37163 u f).
Proof. exact (eq_refl (term3904 A B _37163 u f)). Qed.
Lemma lem3526917 {A B : Type'} (_37163 : type627 A B) (u : A -> Prop) : (term3911 A B _37163 u) = (term3902 A B _37163 u).
Proof. exact (fun_ext (fun f : A -> B => @lem3526916 A B _37163 u f)). Qed.
Lemma lem3526918 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem3526919 {A B : Type'} (_37163 : type627 A B) (u : A -> Prop) : (term3912 A B _37163 u) = (term3913 A B _37163 u).
Proof. exact (MK_COMB (@lem3526918 A B) (@lem3526917 A B _37163 u)). Qed.
Lemma lem3526920 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem3526921 {A B : Type'} (_37163 : type627 A B) (u : A -> Prop) : (term3914 A B _37163 u) = (term3915 A B _37163 u).
Proof. exact (MK_COMB (@lem3526920) (@lem3526919 A B _37163 u)). Qed.
Lemma lem3526922 {A B : Type'} (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) : (term3906 A B _37163 u f) = (term3894 A B _37163 u f).
Proof. exact (eq_refl (term3906 A B _37163 u f)). Qed.
Lemma lem3526923 {A B : Type'} (_37163 : type627 A B) (u : A -> Prop) : (term3916 A B _37163 u) = (term3903 A B _37163 u).
Proof. exact (fun_ext (fun f : A -> B => @lem3526922 A B _37163 u f)). Qed.
Lemma lem3526924 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem3526925 {A B : Type'} (_37163 : type627 A B) (u : A -> Prop) : (term3917 A B _37163 u) = (term3918 A B _37163 u).
Proof. exact (MK_COMB (@lem3526924 A B) (@lem3526923 A B _37163 u)). Qed.
Lemma lem3526926 {A B : Type'} (_37163 : type627 A B) (u : A -> Prop) : (term3901 A B _37163 u) = (term3919 A B _37163 u).
Proof. exact (MK_COMB (@lem3526921 A B _37163 u) (@lem3526925 A B _37163 u)). Qed.
Lemma lem3526927 {A B : Type'} (_37163 : type627 A B) (u : A -> Prop) : ((term3900 A B _37163 u) = (term3901 A B _37163 u)) = ((term3897 A B _37163 u) = (term3919 A B _37163 u)).
Proof. exact (MK_COMB (@lem3526915 A B _37163 u) (@lem3526926 A B _37163 u)). Qed.
Lemma lem3526928 {A B : Type'} (_37163 : type627 A B) (u : A -> Prop) : (term3897 A B _37163 u) = (term3919 A B _37163 u).
Proof. exact (EQ_MP (@lem3526927 A B _37163 u) (@lem3526905 A B _37163 u)). Qed.
Lemma lem3527049 {A B : Type'} (_37163 : type627 A B) (u : A -> Prop) : (term3851 A B _37163 u) = (term3919 A B _37163 u).
Proof. exact (TRANS (@lem3526901 A B _37163 u) (@lem3526928 A B _37163 u)). Qed.
Lemma lem3527050 {A B : Type'} (_37163 : type627 A B) : (term3852 A B _37163) = (term3920 A B _37163).
Proof. exact (fun_ext (fun u : A -> Prop => @lem3527049 A B _37163 u)). Qed.
Lemma lem3527051 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem3527052 {A B : Type'} (_37163 : type627 A B) : (term3853 A B _37163) = (term3921 A B _37163).
Proof. exact (MK_COMB (@lem3527051 A) (@lem3527050 A B _37163)). Qed.
Lemma lem3527054 {A : Type'} (P : A -> Prop) (Q : A -> Prop) : (term726 A P Q) = (term725 A P Q).
Proof. exact (EQ_MP (@lem18953 A P Q) (@lem18952 A P Q)). Qed.
Lemma lem3527055 {A : Type'} (P : type686 A) (Q : type686 A) : (term2898 A P Q) = (term2899 A P Q).
Proof. exact (@lem3527054 (A -> Prop) P Q). Qed.
Lemma lem3527056 {A B : Type'} (_37163 : type627 A B) : (term3922 A B _37163) = (term3923 A B _37163).
Proof. exact (@lem3527055 A (term3924 A B _37163) (term3925 A B _37163)). Qed.
Lemma lem3527057 {A B : Type'} (_37163 : type627 A B) (u : A -> Prop) : (term3926 A B _37163 u) = (term3913 A B _37163 u).
Proof. exact (eq_refl (term3926 A B _37163 u)). Qed.
Lemma lem3527058 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem3527059 {A B : Type'} (_37163 : type627 A B) (u : A -> Prop) : (term3927 A B _37163 u) = (term3915 A B _37163 u).
Proof. exact (MK_COMB (@lem3527058) (@lem3527057 A B _37163 u)). Qed.
Lemma lem3527060 {A B : Type'} (_37163 : type627 A B) (u : A -> Prop) : (term3928 A B _37163 u) = (term3918 A B _37163 u).
Proof. exact (eq_refl (term3928 A B _37163 u)). Qed.
Lemma lem3527061 {A B : Type'} (_37163 : type627 A B) (u : A -> Prop) : (term3929 A B _37163 u) = (term3919 A B _37163 u).
Proof. exact (MK_COMB (@lem3527059 A B _37163 u) (@lem3527060 A B _37163 u)). Qed.
Lemma lem3527062 {A B : Type'} (_37163 : type627 A B) : (term3930 A B _37163) = (term3920 A B _37163).
Proof. exact (fun_ext (fun u : A -> Prop => @lem3527061 A B _37163 u)). Qed.
Lemma lem3527063 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem3527064 {A B : Type'} (_37163 : type627 A B) : (term3922 A B _37163) = (term3921 A B _37163).
Proof. exact (MK_COMB (@lem3527063 A) (@lem3527062 A B _37163)). Qed.
Lemma lem3527065 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem3527066 {A B : Type'} (_37163 : type627 A B) : (term3931 A B _37163) = (term3932 A B _37163).
Proof. exact (MK_COMB (@lem3527065) (@lem3527064 A B _37163)). Qed.
Lemma lem3527067 {A B : Type'} (_37163 : type627 A B) (u : A -> Prop) : (term3926 A B _37163 u) = (term3913 A B _37163 u).
Proof. exact (eq_refl (term3926 A B _37163 u)). Qed.
Lemma lem3527068 {A B : Type'} (_37163 : type627 A B) : (term3933 A B _37163) = (term3924 A B _37163).
Proof. exact (fun_ext (fun u : A -> Prop => @lem3527067 A B _37163 u)). Qed.
Lemma lem3527069 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem3527070 {A B : Type'} (_37163 : type627 A B) : (term3934 A B _37163) = (term3935 A B _37163).
Proof. exact (MK_COMB (@lem3527069 A) (@lem3527068 A B _37163)). Qed.
Lemma lem3527071 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem3527072 {A B : Type'} (_37163 : type627 A B) : (term3936 A B _37163) = (term3937 A B _37163).
Proof. exact (MK_COMB (@lem3527071) (@lem3527070 A B _37163)). Qed.
Lemma lem3527073 {A B : Type'} (_37163 : type627 A B) (u : A -> Prop) : (term3928 A B _37163 u) = (term3918 A B _37163 u).
Proof. exact (eq_refl (term3928 A B _37163 u)). Qed.
Lemma lem3527074 {A B : Type'} (_37163 : type627 A B) : (term3938 A B _37163) = (term3925 A B _37163).
Proof. exact (fun_ext (fun u : A -> Prop => @lem3527073 A B _37163 u)). Qed.
Lemma lem3527075 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem3527076 {A B : Type'} (_37163 : type627 A B) : (term3939 A B _37163) = (term3940 A B _37163).
Proof. exact (MK_COMB (@lem3527075 A) (@lem3527074 A B _37163)). Qed.
Lemma lem3527077 {A B : Type'} (_37163 : type627 A B) : (term3923 A B _37163) = (term3941 A B _37163).
Proof. exact (MK_COMB (@lem3527072 A B _37163) (@lem3527076 A B _37163)). Qed.
Lemma lem3527078 {A B : Type'} (_37163 : type627 A B) : ((term3922 A B _37163) = (term3923 A B _37163)) = ((term3921 A B _37163) = (term3941 A B _37163)).
Proof. exact (MK_COMB (@lem3527066 A B _37163) (@lem3527077 A B _37163)). Qed.
Lemma lem3527079 {A B : Type'} (_37163 : type627 A B) : (term3921 A B _37163) = (term3941 A B _37163).
Proof. exact (EQ_MP (@lem3527078 A B _37163) (@lem3527056 A B _37163)). Qed.
Lemma lem3527208 {A B : Type'} (_37163 : type627 A B) : (term3853 A B _37163) = (term3941 A B _37163).
Proof. exact (TRANS (@lem3527052 A B _37163) (@lem3527079 A B _37163)). Qed.
Lemma lem3527210 {A : Type'} (P : Prop) (Q : A -> Prop) : (term434 A P Q) = (term435 A P Q).
Proof. exact (EQ_MP (@lem18911 A P Q) (@lem18910 A P Q)). Qed.
Lemma lem3527211 {A : Type'} (P : Prop) (Q : A -> Prop) : (term434 A P Q) = (term435 A P Q).
Proof. exact (@lem3527210 A P Q). Qed.
Lemma lem3527212 {A B : Type'} (_37163 : type627 A B) (GEN_PVAR_85 : A) (u : A -> Prop) (f : A -> B) (t : A -> Prop) : (term3942 A B _37163 GEN_PVAR_85 u f t) = (term3943 A B _37163 GEN_PVAR_85 u f t).
Proof. exact (@lem3527211 A (term3944 A B _37163 u f t GEN_PVAR_85) (term63 A B GEN_PVAR_85 u f t)). Qed.
Lemma lem3527213 {A B : Type'} (GEN_PVAR_85 : A) (u : A -> Prop) (f : A -> B) (t : A -> Prop) (x : A) : (term3831 A B GEN_PVAR_85 u f t x) = (term61 A B GEN_PVAR_85 u f t x).
Proof. exact (eq_refl (term3831 A B GEN_PVAR_85 u f t x)). Qed.
Lemma lem3527214 {A B : Type'} (GEN_PVAR_85 : A) (u : A -> Prop) (f : A -> B) (t : A -> Prop) : (term3945 A B GEN_PVAR_85 u f t) = (term63 A B GEN_PVAR_85 u f t).
Proof. exact (fun_ext (fun x : A => @lem3527213 A B GEN_PVAR_85 u f t x)). Qed.
Lemma lem3527215 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem3527216 {A B : Type'} (GEN_PVAR_85 : A) (u : A -> Prop) (f : A -> B) (t : A -> Prop) : (term3946 A B GEN_PVAR_85 u f t) = (term65 A B GEN_PVAR_85 u f t).
Proof. exact (MK_COMB (@lem3527215 A) (@lem3527214 A B GEN_PVAR_85 u f t)). Qed.
Lemma lem3527217 {A B : Type'} (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) (t : A -> Prop) (GEN_PVAR_85 : A) : (term3837 A B _37163 u f t GEN_PVAR_85) = (term3837 A B _37163 u f t GEN_PVAR_85).
Proof. exact (eq_refl (term3837 A B _37163 u f t GEN_PVAR_85)). Qed.
Lemma lem3527218 {A B : Type'} (_37163 : type627 A B) (GEN_PVAR_85 : A) (u : A -> Prop) (f : A -> B) (t : A -> Prop) : (term3942 A B _37163 GEN_PVAR_85 u f t) = (term3838 A B _37163 GEN_PVAR_85 u f t).
Proof. exact (MK_COMB (@lem3527217 A B _37163 u f t GEN_PVAR_85) (@lem3527216 A B GEN_PVAR_85 u f t)). Qed.
Lemma lem3527219 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem3527220 {A B : Type'} (_37163 : type627 A B) (GEN_PVAR_85 : A) (u : A -> Prop) (f : A -> B) (t : A -> Prop) : (term3947 A B _37163 GEN_PVAR_85 u f t) = (term3948 A B _37163 GEN_PVAR_85 u f t).
Proof. exact (MK_COMB (@lem3527219) (@lem3527218 A B _37163 GEN_PVAR_85 u f t)). Qed.
Lemma lem3527221 {A B : Type'} (GEN_PVAR_85 : A) (u : A -> Prop) (f : A -> B) (t : A -> Prop) (x : A) : (term3831 A B GEN_PVAR_85 u f t x) = (term61 A B GEN_PVAR_85 u f t x).
Proof. exact (eq_refl (term3831 A B GEN_PVAR_85 u f t x)). Qed.
Lemma lem3527222 {A B : Type'} (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) (t : A -> Prop) (GEN_PVAR_85 : A) : (term3837 A B _37163 u f t GEN_PVAR_85) = (term3837 A B _37163 u f t GEN_PVAR_85).
Proof. exact (eq_refl (term3837 A B _37163 u f t GEN_PVAR_85)). Qed.
Lemma lem3527223 {A B : Type'} (_37163 : type627 A B) (GEN_PVAR_85 : A) (u : A -> Prop) (f : A -> B) (t : A -> Prop) (x : A) : (term3949 A B _37163 GEN_PVAR_85 u f t x) = (term3950 A B _37163 GEN_PVAR_85 u f t x).
Proof. exact (MK_COMB (@lem3527222 A B _37163 u f t GEN_PVAR_85) (@lem3527221 A B GEN_PVAR_85 u f t x)). Qed.
Lemma lem3527224 {A B : Type'} (_37163 : type627 A B) (GEN_PVAR_85 : A) (u : A -> Prop) (f : A -> B) (t : A -> Prop) : (term3951 A B _37163 GEN_PVAR_85 u f t) = (term3952 A B _37163 GEN_PVAR_85 u f t).
Proof. exact (fun_ext (fun x : A => @lem3527223 A B _37163 GEN_PVAR_85 u f t x)). Qed.
Lemma lem3527225 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem3527226 {A B : Type'} (_37163 : type627 A B) (GEN_PVAR_85 : A) (u : A -> Prop) (f : A -> B) (t : A -> Prop) : (term3943 A B _37163 GEN_PVAR_85 u f t) = (term3953 A B _37163 GEN_PVAR_85 u f t).
Proof. exact (MK_COMB (@lem3527225 A) (@lem3527224 A B _37163 GEN_PVAR_85 u f t)). Qed.
Lemma lem3527227 {A B : Type'} (_37163 : type627 A B) (GEN_PVAR_85 : A) (u : A -> Prop) (f : A -> B) (t : A -> Prop) : ((term3942 A B _37163 GEN_PVAR_85 u f t) = (term3943 A B _37163 GEN_PVAR_85 u f t)) = ((term3838 A B _37163 GEN_PVAR_85 u f t) = (term3953 A B _37163 GEN_PVAR_85 u f t)).
Proof. exact (MK_COMB (@lem3527220 A B _37163 GEN_PVAR_85 u f t) (@lem3527226 A B _37163 GEN_PVAR_85 u f t)). Qed.
Lemma lem3527228 {A B : Type'} (_37163 : type627 A B) (GEN_PVAR_85 : A) (u : A -> Prop) (f : A -> B) (t : A -> Prop) : (term3838 A B _37163 GEN_PVAR_85 u f t) = (term3953 A B _37163 GEN_PVAR_85 u f t).
Proof. exact (EQ_MP (@lem3527227 A B _37163 GEN_PVAR_85 u f t) (@lem3527212 A B _37163 GEN_PVAR_85 u f t)). Qed.
Lemma lem3527229 {A B : Type'} (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) (t : A -> Prop) : (term3857 A B _37163 u f t) = (term3954 A B _37163 u f t).
Proof. exact (fun_ext (fun GEN_PVAR_85 : A => @lem3527228 A B _37163 GEN_PVAR_85 u f t)). Qed.
Lemma lem3527230 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem3527231 {A B : Type'} (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) (t : A -> Prop) : (term3872 A B _37163 u f t) = (term3955 A B _37163 u f t).
Proof. exact (MK_COMB (@lem3527230 A) (@lem3527229 A B _37163 u f t)). Qed.
Lemma lem3527233 {A B : Type'} (P : type1413 A B) : (term453 A B P) = (term454 A B P).
Proof. exact (EQ_MP (@lem18899 A B P) (@lem18898 A B P)). Qed.
Lemma lem3527234 {A : Type'} (P : type1402 A) : (term3480 A P) = (term3481 A P).
Proof. exact (@lem3527233 A A P). Qed.
Lemma lem3527235 {A B : Type'} (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) (t : A -> Prop) : (term3956 A B _37163 u f t) = (term3957 A B _37163 u f t).
Proof. exact (@lem3527234 A (term3958 A B _37163 u f t)). Qed.
Lemma lem3527236 {A B : Type'} (_37163 : type627 A B) (GEN_PVAR_85 : A) (u : A -> Prop) (f : A -> B) (t : A -> Prop) : (term3959 A B _37163 u f t GEN_PVAR_85) = (term3952 A B _37163 GEN_PVAR_85 u f t).
Proof. exact (eq_refl (term3959 A B _37163 u f t GEN_PVAR_85)). Qed.
Lemma lem3527237 {A : Type'} (x : A) : x = x.
Proof. exact (eq_refl x). Qed.
Lemma lem3527238 {A B : Type'} (_37163 : type627 A B) (GEN_PVAR_85 : A) (u : A -> Prop) (f : A -> B) (t : A -> Prop) (x : A) : (term3960 A B _37163 u f t GEN_PVAR_85 x) = (term3961 A B _37163 GEN_PVAR_85 u f t x).
Proof. exact (MK_COMB (@lem3527236 A B _37163 GEN_PVAR_85 u f t) (@lem3527237 A x)). Qed.
Lemma lem3527239 {A B : Type'} (_37163 : type627 A B) (GEN_PVAR_85 : A) (u : A -> Prop) (f : A -> B) (t : A -> Prop) (x : A) : (term3961 A B _37163 GEN_PVAR_85 u f t x) = (term3950 A B _37163 GEN_PVAR_85 u f t x).
Proof. exact (eq_refl (term3961 A B _37163 GEN_PVAR_85 u f t x)). Qed.
Lemma lem3527240 {A B : Type'} (_37163 : type627 A B) (GEN_PVAR_85 : A) (u : A -> Prop) (f : A -> B) (t : A -> Prop) (x : A) : (term3960 A B _37163 u f t GEN_PVAR_85 x) = (term3950 A B _37163 GEN_PVAR_85 u f t x).
Proof. exact (TRANS (@lem3527238 A B _37163 GEN_PVAR_85 u f t x) (@lem3527239 A B _37163 GEN_PVAR_85 u f t x)). Qed.
Lemma lem3527241 {A B : Type'} (_37163 : type627 A B) (GEN_PVAR_85 : A) (u : A -> Prop) (f : A -> B) (t : A -> Prop) : (term3962 A B _37163 u f t GEN_PVAR_85) = (term3952 A B _37163 GEN_PVAR_85 u f t).
Proof. exact (fun_ext (fun x : A => @lem3527240 A B _37163 GEN_PVAR_85 u f t x)). Qed.
Lemma lem3527242 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem3527243 {A B : Type'} (_37163 : type627 A B) (GEN_PVAR_85 : A) (u : A -> Prop) (f : A -> B) (t : A -> Prop) : (term3963 A B _37163 u f t GEN_PVAR_85) = (term3953 A B _37163 GEN_PVAR_85 u f t).
Proof. exact (MK_COMB (@lem3527242 A) (@lem3527241 A B _37163 GEN_PVAR_85 u f t)). Qed.
Lemma lem3527244 {A B : Type'} (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) (t : A -> Prop) : (term3964 A B _37163 u f t) = (term3954 A B _37163 u f t).
Proof. exact (fun_ext (fun GEN_PVAR_85 : A => @lem3527243 A B _37163 GEN_PVAR_85 u f t)). Qed.
Lemma lem3527245 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem3527246 {A B : Type'} (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) (t : A -> Prop) : (term3956 A B _37163 u f t) = (term3955 A B _37163 u f t).
Proof. exact (MK_COMB (@lem3527245 A) (@lem3527244 A B _37163 u f t)). Qed.
Lemma lem3527247 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem3527248 {A B : Type'} (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) (t : A -> Prop) : (term3965 A B _37163 u f t) = (term3966 A B _37163 u f t).
Proof. exact (MK_COMB (@lem3527247) (@lem3527246 A B _37163 u f t)). Qed.
Lemma lem3527249 {A B : Type'} (_37163 : type627 A B) (GEN_PVAR_85 : A) (u : A -> Prop) (f : A -> B) (t : A -> Prop) : (term3959 A B _37163 u f t GEN_PVAR_85) = (term3952 A B _37163 GEN_PVAR_85 u f t).
Proof. exact (eq_refl (term3959 A B _37163 u f t GEN_PVAR_85)). Qed.
Lemma lem3527250 {A : Type'} (x : A -> A) (GEN_PVAR_85 : A) : (x GEN_PVAR_85) = (x GEN_PVAR_85).
Proof. exact (eq_refl (x GEN_PVAR_85)). Qed.
Lemma lem3527251 {A B : Type'} (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) (t : A -> Prop) (x : A -> A) (GEN_PVAR_85 : A) : (term3967 A B _37163 u f t x GEN_PVAR_85) = (term3968 A B _37163 u f t x GEN_PVAR_85).
Proof. exact (MK_COMB (@lem3527249 A B _37163 GEN_PVAR_85 u f t) (@lem3527250 A x GEN_PVAR_85)). Qed.
Lemma lem3527252 {A B : Type'} (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) (t : A -> Prop) (x : A -> A) (GEN_PVAR_85 : A) : (term3968 A B _37163 u f t x GEN_PVAR_85) = (term3969 A B _37163 u f t x GEN_PVAR_85).
Proof. exact (eq_refl (term3968 A B _37163 u f t x GEN_PVAR_85)). Qed.
Lemma lem3527253 {A B : Type'} (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) (t : A -> Prop) (x : A -> A) (GEN_PVAR_85 : A) : (term3967 A B _37163 u f t x GEN_PVAR_85) = (term3969 A B _37163 u f t x GEN_PVAR_85).
Proof. exact (TRANS (@lem3527251 A B _37163 u f t x GEN_PVAR_85) (@lem3527252 A B _37163 u f t x GEN_PVAR_85)). Qed.
Lemma lem3527254 {A B : Type'} (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) (t : A -> Prop) (x : A -> A) : (term3970 A B _37163 u f t x) = (term3971 A B _37163 u f t x).
Proof. exact (fun_ext (fun GEN_PVAR_85 : A => @lem3527253 A B _37163 u f t x GEN_PVAR_85)). Qed.
Lemma lem3527255 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem3527256 {A B : Type'} (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) (t : A -> Prop) (x : A -> A) : (term3972 A B _37163 u f t x) = (term3973 A B _37163 u f t x).
Proof. exact (MK_COMB (@lem3527255 A) (@lem3527254 A B _37163 u f t x)). Qed.
Lemma lem3527257 {A B : Type'} (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) (t : A -> Prop) : (term3974 A B _37163 u f t) = (term3975 A B _37163 u f t).
Proof. exact (fun_ext (fun x : A -> A => @lem3527256 A B _37163 u f t x)). Qed.
Lemma lem3527258 {A : Type'} : (@ex (A -> A)) = (@ex (A -> A)).
Proof. exact (eq_refl (@ex (A -> A))). Qed.
Lemma lem3527259 {A B : Type'} (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) (t : A -> Prop) : (term3957 A B _37163 u f t) = (term3976 A B _37163 u f t).
Proof. exact (MK_COMB (@lem3527258 A) (@lem3527257 A B _37163 u f t)). Qed.
Lemma lem3527260 {A B : Type'} (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) (t : A -> Prop) : ((term3956 A B _37163 u f t) = (term3957 A B _37163 u f t)) = ((term3955 A B _37163 u f t) = (term3976 A B _37163 u f t)).
Proof. exact (MK_COMB (@lem3527248 A B _37163 u f t) (@lem3527259 A B _37163 u f t)). Qed.
Lemma lem3527261 {A B : Type'} (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) (t : A -> Prop) : (term3955 A B _37163 u f t) = (term3976 A B _37163 u f t).
Proof. exact (EQ_MP (@lem3527260 A B _37163 u f t) (@lem3527235 A B _37163 u f t)). Qed.
Lemma lem3527262 {A B : Type'} (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) (t : A -> Prop) : (term3872 A B _37163 u f t) = (term3976 A B _37163 u f t).
Proof. exact (TRANS (@lem3527231 A B _37163 u f t) (@lem3527261 A B _37163 u f t)). Qed.
Lemma lem3527263 {A B : Type'} (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) : (term3879 A B _37163 u f) = (term3977 A B _37163 u f).
Proof. exact (fun_ext (fun t : A -> Prop => @lem3527262 A B _37163 u f t)). Qed.
Lemma lem3527264 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem3527265 {A B : Type'} (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) : (term3894 A B _37163 u f) = (term3978 A B _37163 u f).
Proof. exact (MK_COMB (@lem3527264 A) (@lem3527263 A B _37163 u f)). Qed.
Lemma lem3527267 {A B : Type'} (P : type1413 A B) : (term453 A B P) = (term454 A B P).
Proof. exact (EQ_MP (@lem18899 A B P) (@lem18898 A B P)). Qed.
Lemma lem3527268 {A : Type'} (P : type624 A) : (term3505 A P) = (term3506 A P).
Proof. exact (@lem3527267 (A -> Prop) (A -> A) P). Qed.
Lemma lem3527269 {A B : Type'} (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) : (term3979 A B _37163 u f) = (term3980 A B _37163 u f).
Proof. exact (@lem3527268 A (term3981 A B _37163 u f)). Qed.
Lemma lem3527270 {A B : Type'} (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) (t : A -> Prop) : (term3982 A B _37163 u f t) = (term3975 A B _37163 u f t).
Proof. exact (eq_refl (term3982 A B _37163 u f t)). Qed.
Lemma lem3527271 {A : Type'} (x : A -> A) : x = x.
Proof. exact (eq_refl x). Qed.
Lemma lem3527272 {A B : Type'} (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) (t : A -> Prop) (x : A -> A) : (term3983 A B _37163 u f t x) = (term3984 A B _37163 u f t x).
Proof. exact (MK_COMB (@lem3527270 A B _37163 u f t) (@lem3527271 A x)). Qed.
Lemma lem3527273 {A B : Type'} (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) (t : A -> Prop) (x : A -> A) : (term3984 A B _37163 u f t x) = (term3973 A B _37163 u f t x).
Proof. exact (eq_refl (term3984 A B _37163 u f t x)). Qed.
Lemma lem3527274 {A B : Type'} (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) (t : A -> Prop) (x : A -> A) : (term3983 A B _37163 u f t x) = (term3973 A B _37163 u f t x).
Proof. exact (TRANS (@lem3527272 A B _37163 u f t x) (@lem3527273 A B _37163 u f t x)). Qed.
Lemma lem3527275 {A B : Type'} (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) (t : A -> Prop) : (term3985 A B _37163 u f t) = (term3975 A B _37163 u f t).
Proof. exact (fun_ext (fun x : A -> A => @lem3527274 A B _37163 u f t x)). Qed.
Lemma lem3527276 {A : Type'} : (@ex (A -> A)) = (@ex (A -> A)).
Proof. exact (eq_refl (@ex (A -> A))). Qed.
Lemma lem3527277 {A B : Type'} (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) (t : A -> Prop) : (term3986 A B _37163 u f t) = (term3976 A B _37163 u f t).
Proof. exact (MK_COMB (@lem3527276 A) (@lem3527275 A B _37163 u f t)). Qed.
Lemma lem3527278 {A B : Type'} (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) : (term3987 A B _37163 u f) = (term3977 A B _37163 u f).
Proof. exact (fun_ext (fun t : A -> Prop => @lem3527277 A B _37163 u f t)). Qed.
Lemma lem3527279 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem3527280 {A B : Type'} (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) : (term3979 A B _37163 u f) = (term3978 A B _37163 u f).
Proof. exact (MK_COMB (@lem3527279 A) (@lem3527278 A B _37163 u f)). Qed.
Lemma lem3527281 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem3527282 {A B : Type'} (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) : (term3988 A B _37163 u f) = (term3989 A B _37163 u f).
Proof. exact (MK_COMB (@lem3527281) (@lem3527280 A B _37163 u f)). Qed.
Lemma lem3527283 {A B : Type'} (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) (t : A -> Prop) : (term3982 A B _37163 u f t) = (term3975 A B _37163 u f t).
Proof. exact (eq_refl (term3982 A B _37163 u f t)). Qed.
Lemma lem3527284 {A : Type'} (x : type670 A) (t : A -> Prop) : (x t) = (x t).
Proof. exact (eq_refl (x t)). Qed.
Lemma lem3527285 {A B : Type'} (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) (x : type670 A) (t : A -> Prop) : (term3990 A B _37163 u f x t) = (term3991 A B _37163 u f x t).
Proof. exact (MK_COMB (@lem3527283 A B _37163 u f t) (@lem3527284 A x t)). Qed.
Lemma lem3527286 {A B : Type'} (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) (x : type670 A) (t : A -> Prop) : (term3991 A B _37163 u f x t) = (term3992 A B _37163 u f x t).
Proof. exact (eq_refl (term3991 A B _37163 u f x t)). Qed.
Lemma lem3527287 {A B : Type'} (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) (x : type670 A) (t : A -> Prop) : (term3990 A B _37163 u f x t) = (term3992 A B _37163 u f x t).
Proof. exact (TRANS (@lem3527285 A B _37163 u f x t) (@lem3527286 A B _37163 u f x t)). Qed.
Lemma lem3527288 {A B : Type'} (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) (x : type670 A) : (term3993 A B _37163 u f x) = (term3994 A B _37163 u f x).
Proof. exact (fun_ext (fun t : A -> Prop => @lem3527287 A B _37163 u f x t)). Qed.
Lemma lem3527289 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem3527290 {A B : Type'} (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) (x : type670 A) : (term3995 A B _37163 u f x) = (term3996 A B _37163 u f x).
Proof. exact (MK_COMB (@lem3527289 A) (@lem3527288 A B _37163 u f x)). Qed.
Lemma lem3527291 {A B : Type'} (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) : (term3997 A B _37163 u f) = (term3998 A B _37163 u f).
Proof. exact (fun_ext (fun x : type670 A => @lem3527290 A B _37163 u f x)). Qed.
Lemma lem3527292 {A : Type'} : (@ex ((A -> Prop) -> A -> A)) = (@ex ((A -> Prop) -> A -> A)).
Proof. exact (eq_refl (@ex ((A -> Prop) -> A -> A))). Qed.
Lemma lem3527293 {A B : Type'} (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) : (term3980 A B _37163 u f) = (term3999 A B _37163 u f).
Proof. exact (MK_COMB (@lem3527292 A) (@lem3527291 A B _37163 u f)). Qed.
Lemma lem3527294 {A B : Type'} (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) : ((term3979 A B _37163 u f) = (term3980 A B _37163 u f)) = ((term3978 A B _37163 u f) = (term3999 A B _37163 u f)).
Proof. exact (MK_COMB (@lem3527282 A B _37163 u f) (@lem3527293 A B _37163 u f)). Qed.
Lemma lem3527295 {A B : Type'} (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) : (term3978 A B _37163 u f) = (term3999 A B _37163 u f).
Proof. exact (EQ_MP (@lem3527294 A B _37163 u f) (@lem3527269 A B _37163 u f)). Qed.
Lemma lem3527296 {A B : Type'} (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) : (term3894 A B _37163 u f) = (term3999 A B _37163 u f).
Proof. exact (TRANS (@lem3527265 A B _37163 u f) (@lem3527295 A B _37163 u f)). Qed.
Lemma lem3527297 {A B : Type'} (_37163 : type627 A B) (u : A -> Prop) : (term3903 A B _37163 u) = (term4000 A B _37163 u).
Proof. exact (fun_ext (fun f : A -> B => @lem3527296 A B _37163 u f)). Qed.
Lemma lem3527298 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem3527299 {A B : Type'} (_37163 : type627 A B) (u : A -> Prop) : (term3918 A B _37163 u) = (term4001 A B _37163 u).
Proof. exact (MK_COMB (@lem3527298 A B) (@lem3527297 A B _37163 u)). Qed.
Lemma lem3527301 {A B : Type'} (P : type1413 A B) : (term453 A B P) = (term454 A B P).
Proof. exact (EQ_MP (@lem18899 A B P) (@lem18898 A B P)). Qed.
Lemma lem3527302 {A B : Type'} (P : type502 A B) : (term4002 A B P) = (term4003 A B P).
Proof. exact (@lem3527301 (A -> B) (type670 A) P). Qed.
Lemma lem3527303 {A B : Type'} (_37163 : type627 A B) (u : A -> Prop) : (term4004 A B _37163 u) = (term4005 A B _37163 u).
Proof. exact (@lem3527302 A B (term4006 A B _37163 u)). Qed.
Lemma lem3527304 {A B : Type'} (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) : (term4007 A B _37163 u f) = (term3998 A B _37163 u f).
Proof. exact (eq_refl (term4007 A B _37163 u f)). Qed.
Lemma lem3527305 {A : Type'} (x : type670 A) : x = x.
Proof. exact (eq_refl x). Qed.
Lemma lem3527306 {A B : Type'} (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) (x : type670 A) : (term4008 A B _37163 u f x) = (term4009 A B _37163 u f x).
Proof. exact (MK_COMB (@lem3527304 A B _37163 u f) (@lem3527305 A x)). Qed.
Lemma lem3527307 {A B : Type'} (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) (x : type670 A) : (term4009 A B _37163 u f x) = (term3996 A B _37163 u f x).
Proof. exact (eq_refl (term4009 A B _37163 u f x)). Qed.
Lemma lem3527308 {A B : Type'} (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) (x : type670 A) : (term4008 A B _37163 u f x) = (term3996 A B _37163 u f x).
Proof. exact (TRANS (@lem3527306 A B _37163 u f x) (@lem3527307 A B _37163 u f x)). Qed.
Lemma lem3527309 {A B : Type'} (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) : (term4010 A B _37163 u f) = (term3998 A B _37163 u f).
Proof. exact (fun_ext (fun x : type670 A => @lem3527308 A B _37163 u f x)). Qed.
Lemma lem3527310 {A : Type'} : (@ex ((A -> Prop) -> A -> A)) = (@ex ((A -> Prop) -> A -> A)).
Proof. exact (eq_refl (@ex ((A -> Prop) -> A -> A))). Qed.
Lemma lem3527311 {A B : Type'} (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) : (term4011 A B _37163 u f) = (term3999 A B _37163 u f).
Proof. exact (MK_COMB (@lem3527310 A) (@lem3527309 A B _37163 u f)). Qed.
Lemma lem3527312 {A B : Type'} (_37163 : type627 A B) (u : A -> Prop) : (term4012 A B _37163 u) = (term4000 A B _37163 u).
Proof. exact (fun_ext (fun f : A -> B => @lem3527311 A B _37163 u f)). Qed.
Lemma lem3527313 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem3527314 {A B : Type'} (_37163 : type627 A B) (u : A -> Prop) : (term4004 A B _37163 u) = (term4001 A B _37163 u).
Proof. exact (MK_COMB (@lem3527313 A B) (@lem3527312 A B _37163 u)). Qed.
Lemma lem3527315 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem3527316 {A B : Type'} (_37163 : type627 A B) (u : A -> Prop) : (term4013 A B _37163 u) = (term4014 A B _37163 u).
Proof. exact (MK_COMB (@lem3527315) (@lem3527314 A B _37163 u)). Qed.
Lemma lem3527317 {A B : Type'} (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) : (term4007 A B _37163 u f) = (term3998 A B _37163 u f).
Proof. exact (eq_refl (term4007 A B _37163 u f)). Qed.
Lemma lem3527318 {A B : Type'} (x : type526 A B) (f : A -> B) : (x f) = (x f).
Proof. exact (eq_refl (x f)). Qed.
Lemma lem3527319 {A B : Type'} (_37163 : type627 A B) (u : A -> Prop) (x : type526 A B) (f : A -> B) : (term4015 A B _37163 u x f) = (term4016 A B _37163 u x f).
Proof. exact (MK_COMB (@lem3527317 A B _37163 u f) (@lem3527318 A B x f)). Qed.
Lemma lem3527320 {A B : Type'} (_37163 : type627 A B) (u : A -> Prop) (x : type526 A B) (f : A -> B) : (term4016 A B _37163 u x f) = (term4017 A B _37163 u x f).
Proof. exact (eq_refl (term4016 A B _37163 u x f)). Qed.
Lemma lem3527321 {A B : Type'} (_37163 : type627 A B) (u : A -> Prop) (x : type526 A B) (f : A -> B) : (term4015 A B _37163 u x f) = (term4017 A B _37163 u x f).
Proof. exact (TRANS (@lem3527319 A B _37163 u x f) (@lem3527320 A B _37163 u x f)). Qed.
Lemma lem3527322 {A B : Type'} (_37163 : type627 A B) (u : A -> Prop) (x : type526 A B) : (term4018 A B _37163 u x) = (term4019 A B _37163 u x).
Proof. exact (fun_ext (fun f : A -> B => @lem3527321 A B _37163 u x f)). Qed.
Lemma lem3527323 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem3527324 {A B : Type'} (_37163 : type627 A B) (u : A -> Prop) (x : type526 A B) : (term4020 A B _37163 u x) = (term4021 A B _37163 u x).
Proof. exact (MK_COMB (@lem3527323 A B) (@lem3527322 A B _37163 u x)). Qed.
Lemma lem3527325 {A B : Type'} (_37163 : type627 A B) (u : A -> Prop) : (term4022 A B _37163 u) = (term4023 A B _37163 u).
Proof. exact (fun_ext (fun x : type526 A B => @lem3527324 A B _37163 u x)). Qed.
Lemma lem3527326 {A B : Type'} : (@ex ((A -> B) -> (A -> Prop) -> A -> A)) = (@ex ((A -> B) -> (A -> Prop) -> A -> A)).
Proof. exact (eq_refl (@ex ((A -> B) -> (A -> Prop) -> A -> A))). Qed.
Lemma lem3527327 {A B : Type'} (_37163 : type627 A B) (u : A -> Prop) : (term4005 A B _37163 u) = (term4024 A B _37163 u).
Proof. exact (MK_COMB (@lem3527326 A B) (@lem3527325 A B _37163 u)). Qed.
Lemma lem3527328 {A B : Type'} (_37163 : type627 A B) (u : A -> Prop) : ((term4004 A B _37163 u) = (term4005 A B _37163 u)) = ((term4001 A B _37163 u) = (term4024 A B _37163 u)).
Proof. exact (MK_COMB (@lem3527316 A B _37163 u) (@lem3527327 A B _37163 u)). Qed.
Lemma lem3527329 {A B : Type'} (_37163 : type627 A B) (u : A -> Prop) : (term4001 A B _37163 u) = (term4024 A B _37163 u).
Proof. exact (EQ_MP (@lem3527328 A B _37163 u) (@lem3527303 A B _37163 u)). Qed.
Lemma lem3527330 {A B : Type'} (_37163 : type627 A B) (u : A -> Prop) : (term3918 A B _37163 u) = (term4024 A B _37163 u).
Proof. exact (TRANS (@lem3527299 A B _37163 u) (@lem3527329 A B _37163 u)). Qed.
Lemma lem3527331 {A B : Type'} (_37163 : type627 A B) : (term3925 A B _37163) = (term4025 A B _37163).
Proof. exact (fun_ext (fun u : A -> Prop => @lem3527330 A B _37163 u)). Qed.
Lemma lem3527332 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem3527333 {A B : Type'} (_37163 : type627 A B) : (term3940 A B _37163) = (term4026 A B _37163).
Proof. exact (MK_COMB (@lem3527332 A) (@lem3527331 A B _37163)). Qed.
Lemma lem3527335 {A B : Type'} (P : type1413 A B) : (term453 A B P) = (term454 A B P).
Proof. exact (EQ_MP (@lem18899 A B P) (@lem18898 A B P)). Qed.
Lemma lem3527336 {A B : Type'} (P : type589 A B) : (term4027 A B P) = (term4028 A B P).
Proof. exact (@lem3527335 (A -> Prop) (type526 A B) P). Qed.
Lemma lem3527337 {A B : Type'} (_37163 : type627 A B) : (term4029 A B _37163) = (term4030 A B _37163).
Proof. exact (@lem3527336 A B (term4031 A B _37163)). Qed.
Lemma lem3527338 {A B : Type'} (_37163 : type627 A B) (u : A -> Prop) : (term4032 A B _37163 u) = (term4023 A B _37163 u).
Proof. exact (eq_refl (term4032 A B _37163 u)). Qed.
Lemma lem3527339 {A B : Type'} (x : type526 A B) : x = x.
Proof. exact (eq_refl x). Qed.
Lemma lem3527340 {A B : Type'} (_37163 : type627 A B) (u : A -> Prop) (x : type526 A B) : (term4033 A B _37163 u x) = (term4034 A B _37163 u x).
Proof. exact (MK_COMB (@lem3527338 A B _37163 u) (@lem3527339 A B x)). Qed.
Lemma lem3527341 {A B : Type'} (_37163 : type627 A B) (u : A -> Prop) (x : type526 A B) : (term4034 A B _37163 u x) = (term4021 A B _37163 u x).
Proof. exact (eq_refl (term4034 A B _37163 u x)). Qed.
Lemma lem3527342 {A B : Type'} (_37163 : type627 A B) (u : A -> Prop) (x : type526 A B) : (term4033 A B _37163 u x) = (term4021 A B _37163 u x).
Proof. exact (TRANS (@lem3527340 A B _37163 u x) (@lem3527341 A B _37163 u x)). Qed.
Lemma lem3527343 {A B : Type'} (_37163 : type627 A B) (u : A -> Prop) : (term4035 A B _37163 u) = (term4023 A B _37163 u).
Proof. exact (fun_ext (fun x : type526 A B => @lem3527342 A B _37163 u x)). Qed.
Lemma lem3527344 {A B : Type'} : (@ex ((A -> B) -> (A -> Prop) -> A -> A)) = (@ex ((A -> B) -> (A -> Prop) -> A -> A)).
Proof. exact (eq_refl (@ex ((A -> B) -> (A -> Prop) -> A -> A))). Qed.
Lemma lem3527345 {A B : Type'} (_37163 : type627 A B) (u : A -> Prop) : (term4036 A B _37163 u) = (term4024 A B _37163 u).
Proof. exact (MK_COMB (@lem3527344 A B) (@lem3527343 A B _37163 u)). Qed.
Lemma lem3527346 {A B : Type'} (_37163 : type627 A B) : (term4037 A B _37163) = (term4025 A B _37163).
Proof. exact (fun_ext (fun u : A -> Prop => @lem3527345 A B _37163 u)). Qed.
Lemma lem3527347 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem3527348 {A B : Type'} (_37163 : type627 A B) : (term4029 A B _37163) = (term4026 A B _37163).
Proof. exact (MK_COMB (@lem3527347 A) (@lem3527346 A B _37163)). Qed.
Lemma lem3527349 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem3527350 {A B : Type'} (_37163 : type627 A B) : (term4038 A B _37163) = (term4039 A B _37163).
Proof. exact (MK_COMB (@lem3527349) (@lem3527348 A B _37163)). Qed.
Lemma lem3527351 {A B : Type'} (_37163 : type627 A B) (u : A -> Prop) : (term4032 A B _37163 u) = (term4023 A B _37163 u).
Proof. exact (eq_refl (term4032 A B _37163 u)). Qed.
Lemma lem3527352 {A B : Type'} (x : type626 A B) (u : A -> Prop) : (x u) = (x u).
Proof. exact (eq_refl (x u)). Qed.
Lemma lem3527353 {A B : Type'} (_37163 : type627 A B) (x : type626 A B) (u : A -> Prop) : (term4040 A B _37163 x u) = (term4041 A B _37163 x u).
Proof. exact (MK_COMB (@lem3527351 A B _37163 u) (@lem3527352 A B x u)). Qed.
Lemma lem3527354 {A B : Type'} (_37163 : type627 A B) (x : type626 A B) (u : A -> Prop) : (term4041 A B _37163 x u) = (term4042 A B _37163 x u).
Proof. exact (eq_refl (term4041 A B _37163 x u)). Qed.
Lemma lem3527355 {A B : Type'} (_37163 : type627 A B) (x : type626 A B) (u : A -> Prop) : (term4040 A B _37163 x u) = (term4042 A B _37163 x u).
Proof. exact (TRANS (@lem3527353 A B _37163 x u) (@lem3527354 A B _37163 x u)). Qed.
Lemma lem3527356 {A B : Type'} (_37163 : type627 A B) (x : type626 A B) : (term4043 A B _37163 x) = (term4044 A B _37163 x).
Proof. exact (fun_ext (fun u : A -> Prop => @lem3527355 A B _37163 x u)). Qed.
Lemma lem3527357 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem3527358 {A B : Type'} (_37163 : type627 A B) (x : type626 A B) : (term4045 A B _37163 x) = (term4046 A B _37163 x).
Proof. exact (MK_COMB (@lem3527357 A) (@lem3527356 A B _37163 x)). Qed.
Lemma lem3527359 {A B : Type'} (_37163 : type627 A B) : (term4047 A B _37163) = (term4048 A B _37163).
Proof. exact (fun_ext (fun x : type626 A B => @lem3527358 A B _37163 x)). Qed.
Lemma lem3527360 {A B : Type'} : (@ex ((A -> Prop) -> (A -> B) -> (A -> Prop) -> A -> A)) = (@ex ((A -> Prop) -> (A -> B) -> (A -> Prop) -> A -> A)).
Proof. exact (eq_refl (@ex ((A -> Prop) -> (A -> B) -> (A -> Prop) -> A -> A))). Qed.
Lemma lem3527361 {A B : Type'} (_37163 : type627 A B) : (term4030 A B _37163) = (term4049 A B _37163).
Proof. exact (MK_COMB (@lem3527360 A B) (@lem3527359 A B _37163)). Qed.
Lemma lem3527362 {A B : Type'} (_37163 : type627 A B) : ((term4029 A B _37163) = (term4030 A B _37163)) = ((term4026 A B _37163) = (term4049 A B _37163)).
Proof. exact (MK_COMB (@lem3527350 A B _37163) (@lem3527361 A B _37163)). Qed.
Lemma lem3527363 {A B : Type'} (_37163 : type627 A B) : (term4026 A B _37163) = (term4049 A B _37163).
Proof. exact (EQ_MP (@lem3527362 A B _37163) (@lem3527337 A B _37163)). Qed.
Lemma lem3527364 {A B : Type'} (_37163 : type627 A B) : (term3940 A B _37163) = (term4049 A B _37163).
Proof. exact (TRANS (@lem3527333 A B _37163) (@lem3527363 A B _37163)). Qed.
Lemma lem3527365 {A B : Type'} (_37163 : type627 A B) : (term3937 A B _37163) = (term3937 A B _37163).
Proof. exact (eq_refl (term3937 A B _37163)). Qed.
Lemma lem3527366 {A B : Type'} (_37163 : type627 A B) : (term3941 A B _37163) = (term4050 A B _37163).
Proof. exact (MK_COMB (@lem3527365 A B _37163) (@lem3527364 A B _37163)). Qed.
Lemma lem3527368 {A : Type'} (P : Prop) (Q : A -> Prop) : (term415 A P Q) = (term416 A P Q).
Proof. exact (EQ_MP (@lem18929 A P Q) (@lem18928 A P Q)). Qed.
Lemma lem3527369 {A B : Type'} (P : Prop) (Q : type131 A B) : (term4051 A B P Q) = (term4052 A B P Q).
Proof. exact (@lem3527368 (type626 A B) P Q). Qed.
Lemma lem3527370 {A B : Type'} (_37163 : type627 A B) : (term4053 A B _37163) = (term4054 A B _37163).
Proof. exact (@lem3527369 A B (term3935 A B _37163) (term4048 A B _37163)). Qed.
Lemma lem3527371 {A B : Type'} (_37163 : type627 A B) (x : type626 A B) : (term4055 A B _37163 x) = (term4046 A B _37163 x).
Proof. exact (eq_refl (term4055 A B _37163 x)). Qed.
Lemma lem3527372 {A B : Type'} (_37163 : type627 A B) : (term4056 A B _37163) = (term4048 A B _37163).
Proof. exact (fun_ext (fun x : type626 A B => @lem3527371 A B _37163 x)). Qed.
Lemma lem3527373 {A B : Type'} : (@ex ((A -> Prop) -> (A -> B) -> (A -> Prop) -> A -> A)) = (@ex ((A -> Prop) -> (A -> B) -> (A -> Prop) -> A -> A)).
Proof. exact (eq_refl (@ex ((A -> Prop) -> (A -> B) -> (A -> Prop) -> A -> A))). Qed.
Lemma lem3527374 {A B : Type'} (_37163 : type627 A B) : (term4057 A B _37163) = (term4049 A B _37163).
Proof. exact (MK_COMB (@lem3527373 A B) (@lem3527372 A B _37163)). Qed.
Lemma lem3527375 {A B : Type'} (_37163 : type627 A B) : (term3937 A B _37163) = (term3937 A B _37163).
Proof. exact (eq_refl (term3937 A B _37163)). Qed.
Lemma lem3527376 {A B : Type'} (_37163 : type627 A B) : (term4053 A B _37163) = (term4050 A B _37163).
Proof. exact (MK_COMB (@lem3527375 A B _37163) (@lem3527374 A B _37163)). Qed.
Lemma lem3527377 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem3527378 {A B : Type'} (_37163 : type627 A B) : (term4058 A B _37163) = (term4059 A B _37163).
Proof. exact (MK_COMB (@lem3527377) (@lem3527376 A B _37163)). Qed.
Lemma lem3527379 {A B : Type'} (_37163 : type627 A B) (x : type626 A B) : (term4055 A B _37163 x) = (term4046 A B _37163 x).
Proof. exact (eq_refl (term4055 A B _37163 x)). Qed.
Lemma lem3527380 {A B : Type'} (_37163 : type627 A B) : (term3937 A B _37163) = (term3937 A B _37163).
Proof. exact (eq_refl (term3937 A B _37163)). Qed.
Lemma lem3527381 {A B : Type'} (_37163 : type627 A B) (x : type626 A B) : (term4060 A B _37163 x) = (term4061 A B _37163 x).
Proof. exact (MK_COMB (@lem3527380 A B _37163) (@lem3527379 A B _37163 x)). Qed.
Lemma lem3527382 {A B : Type'} (_37163 : type627 A B) : (term4062 A B _37163) = (term4063 A B _37163).
Proof. exact (fun_ext (fun x : type626 A B => @lem3527381 A B _37163 x)). Qed.
Lemma lem3527383 {A B : Type'} : (@ex ((A -> Prop) -> (A -> B) -> (A -> Prop) -> A -> A)) = (@ex ((A -> Prop) -> (A -> B) -> (A -> Prop) -> A -> A)).
Proof. exact (eq_refl (@ex ((A -> Prop) -> (A -> B) -> (A -> Prop) -> A -> A))). Qed.
Lemma lem3527384 {A B : Type'} (_37163 : type627 A B) : (term4054 A B _37163) = (term4064 A B _37163).
Proof. exact (MK_COMB (@lem3527383 A B) (@lem3527382 A B _37163)). Qed.
Lemma lem3527385 {A B : Type'} (_37163 : type627 A B) : ((term4053 A B _37163) = (term4054 A B _37163)) = ((term4050 A B _37163) = (term4064 A B _37163)).
Proof. exact (MK_COMB (@lem3527378 A B _37163) (@lem3527384 A B _37163)). Qed.
Lemma lem3527386 {A B : Type'} (_37163 : type627 A B) : (term4050 A B _37163) = (term4064 A B _37163).
Proof. exact (EQ_MP (@lem3527385 A B _37163) (@lem3527370 A B _37163)). Qed.
Lemma lem3527387 {A B : Type'} (_37163 : type627 A B) : (term3941 A B _37163) = (term4064 A B _37163).
Proof. exact (TRANS (@lem3527366 A B _37163) (@lem3527386 A B _37163)). Qed.
Lemma lem3527388 {A B : Type'} (_37163 : type627 A B) : (term3853 A B _37163) = (term4064 A B _37163).
Proof. exact (TRANS (@lem3527208 A B _37163) (@lem3527387 A B _37163)). Qed.
Lemma lem3527389 {A B : Type'} (_37163 : type627 A B) : (term2210 A B _37163) = (term4064 A B _37163).
Proof. exact (TRANS (@lem3526612 A B _37163) (@lem3527388 A B _37163)). Qed.
Lemma lem3527390 {A B : Type'} (_37163 : type627 A B) (h1 : term2210 A B _37163) : term4064 A B _37163.
Proof. exact (EQ_MP (@lem3527389 A B _37163) (@lem3520018 A B _37163 h1)). Qed.
Lemma lem3527398 {A : Type'} (g : type686 A) (t : A -> Prop) (u : A -> Prop) : (term2127 A g t u) = (term4065 A g t u).
Proof. exact (@lem17265 (@IN (A -> Prop) t g) (@SUBSET A t u)). Qed.
Lemma lem3527399 {A : Type'} (g : type686 A) (u : A -> Prop) : (term2128 A g u) = (term4066 A g u).
Proof. exact (fun_ext (fun t : A -> Prop => @lem3527398 A g t u)). Qed.
Lemma lem3527400 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem3527401 {A : Type'} (g : type686 A) (u : A -> Prop) : (term2129 A g u) = (term4067 A g u).
Proof. exact (MK_COMB (@lem3527400 A) (@lem3527399 A g u)). Qed.
Lemma lem3527408 {A B : Type'} (g : type686 A) (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) (t : A -> Prop) : (term2124 A B g _37163 u f t) = (term4068 A B g _37163 u f t).
Proof. exact (@lem17265 (@IN (A -> Prop) t g) (term2079 A B _37163 u f t)). Qed.
Lemma lem3527409 {A B : Type'} (g : type686 A) (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) : (term2125 A B g _37163 u f) = (term4069 A B g _37163 u f).
Proof. exact (fun_ext (fun t : A -> Prop => @lem3527408 A B g _37163 u f t)). Qed.
Lemma lem3527410 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem3527411 {A B : Type'} (g : type686 A) (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) : (term2126 A B g _37163 u f) = (term4070 A B g _37163 u f).
Proof. exact (MK_COMB (@lem3527410 A) (@lem3527409 A B g _37163 u f)). Qed.
Lemma lem3527412 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem3527413 {A : Type'} (g : type686 A) (u : A -> Prop) : (term1946 A g u) = (term4071 A g u).
Proof. exact (MK_COMB (@lem3527412) (@lem3527401 A g u)). Qed.
Lemma lem3527414 {A B : Type'} (g : type686 A) (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) : (term2130 A B g _37163 u f) = (term4072 A B g _37163 u f).
Proof. exact (MK_COMB (@lem3527413 A g u) (@lem3527411 A B g _37163 u f)). Qed.
Lemma lem3527416 {A : Type'} (g : type686 A) : (term42 A g) = (term42 A g).
Proof. exact (eq_refl (term42 A g)). Qed.
Lemma lem3527417 {A B : Type'} (g : type686 A) (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) : (term2131 A B g _37163 u f) = (term4073 A B g _37163 u f).
Proof. exact (MK_COMB (@lem3527416 A g) (@lem3527414 A B g _37163 u f)). Qed.
Lemma lem3527418 {A B : Type'} (f : A -> B) (g : type686 A) : (term4074 A B f g) = (term4074 A B f g).
Proof. exact (eq_refl (term4074 A B f g)). Qed.
Lemma lem3527419 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem3527420 {A B : Type'} (g : type686 A) (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) : (term4075 A B g _37163 u f) = (term4076 A B g _37163 u f).
Proof. exact (MK_COMB (@lem3527419) (@lem3527417 A B g _37163 u f)). Qed.
Lemma lem3527421 {A B : Type'} (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) (g : type686 A) : (term4077 A B _37163 u f g) = (term4078 A B _37163 u f g).
Proof. exact (MK_COMB (@lem3527420 A B g _37163 u f) (@lem3527418 A B f g)). Qed.
Lemma lem3527422 {A B : Type'} (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) (g : type686 A) : (term2135 A B _37163 u f g) = (term4077 A B _37163 u f g).
Proof. exact (@lem17362 (term2131 A B g _37163 u f) ((term49 A B f g) = (term50 A B f g))). Qed.
Lemma lem3527523 {A B : Type'} (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) (g : type686 A) : (term2135 A B _37163 u f g) = (term4078 A B _37163 u f g).
Proof. exact (TRANS (@lem3527422 A B _37163 u f g) (@lem3527421 A B _37163 u f g)). Qed.
Lemma lem3527524 {A B : Type'} (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) (g : type686 A) (h1 : term2135 A B _37163 u f g) : term4078 A B _37163 u f g.
Proof. exact (EQ_MP (@lem3527523 A B _37163 u f g) (@lem3520019 A B _37163 u f g h1)). Qed.
Lemma lem3527527 {_90715 : Type'} (g : type686 _90715) : (term4079 _90715 g) = (g = (@EMPTY (_90715 -> Prop))).
Proof. exact (@lem16933 (g = (@EMPTY (_90715 -> Prop)))). Qed.
Lemma lem3527535 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) (u : _90715 -> Prop) (f : _90715 -> _90724) (t : _90715 -> Prop) : (term4080 _90715 _90724 _37164 u f t) = (term4081 _90715 _90724 _37164 u f t).
Proof. exact (@lem17045 (@SUBSET _90715 t u) (term2079 _90715 _90724 _37164 u f t)). Qed.
Lemma lem3527537 {_90715 : Type'} (t : _90715 -> Prop) (g : type686 _90715) : (term4082 _90715 t g) = (term4082 _90715 t g).
Proof. exact (eq_refl (term4082 _90715 t g)). Qed.
Lemma lem3527538 {_90715 _90724 : Type'} (g : type686 _90715) (_37164 : type627 _90715 _90724) (u : _90715 -> Prop) (f : _90715 -> _90724) (t : _90715 -> Prop) : (term4083 _90715 _90724 g _37164 u f t) = (term4084 _90715 _90724 g _37164 u f t).
Proof. exact (MK_COMB (@lem3527537 _90715 t g) (@lem3527535 _90715 _90724 _37164 u f t)). Qed.
Lemma lem3527539 {_90715 _90724 : Type'} (g : type686 _90715) (_37164 : type627 _90715 _90724) (u : _90715 -> Prop) (f : _90715 -> _90724) (t : _90715 -> Prop) : (term4085 _90715 _90724 g _37164 u f t) = (term4083 _90715 _90724 g _37164 u f t).
Proof. exact (@lem17362 (@IN (_90715 -> Prop) t g) (term2080 _90715 _90724 _37164 u f t)). Qed.
Lemma lem3527540 {_90715 _90724 : Type'} (g : type686 _90715) (_37164 : type627 _90715 _90724) (u : _90715 -> Prop) (f : _90715 -> _90724) (t : _90715 -> Prop) : (term4085 _90715 _90724 g _37164 u f t) = (term4084 _90715 _90724 g _37164 u f t).
Proof. exact (TRANS (@lem3527539 _90715 _90724 g _37164 u f t) (@lem3527538 _90715 _90724 g _37164 u f t)). Qed.
Lemma lem3527541 {_90715 : Type'} (P : type686 _90715) : (term298 _90715 P) = (term299 _90715 P).
Proof. exact (@lem18392 (_90715 -> Prop) P). Qed.
Lemma lem3527542 {_90715 _90724 : Type'} (g : type686 _90715) (_37164 : type627 _90715 _90724) (u : _90715 -> Prop) (f : _90715 -> _90724) : (term4086 _90715 _90724 g _37164 u f) = (term4087 _90715 _90724 g _37164 u f).
Proof. exact (@lem3527541 _90715 (term2082 _90715 _90724 g _37164 u f)). Qed.
Lemma lem3527543 {_90715 _90724 : Type'} (g : type686 _90715) (_37164 : type627 _90715 _90724) (u : _90715 -> Prop) (f : _90715 -> _90724) (t : _90715 -> Prop) : (term4088 _90715 _90724 g _37164 u f t) = (term2081 _90715 _90724 g _37164 u f t).
Proof. exact (eq_refl (term4088 _90715 _90724 g _37164 u f t)). Qed.
Lemma lem3527544 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem3527545 {_90715 _90724 : Type'} (g : type686 _90715) (_37164 : type627 _90715 _90724) (u : _90715 -> Prop) (f : _90715 -> _90724) (t : _90715 -> Prop) : (term4089 _90715 _90724 g _37164 u f t) = (term4085 _90715 _90724 g _37164 u f t).
Proof. exact (MK_COMB (@lem3527544) (@lem3527543 _90715 _90724 g _37164 u f t)). Qed.
Lemma lem3527546 {_90715 _90724 : Type'} (g : type686 _90715) (_37164 : type627 _90715 _90724) (u : _90715 -> Prop) (f : _90715 -> _90724) (t : _90715 -> Prop) : (term4089 _90715 _90724 g _37164 u f t) = (term4084 _90715 _90724 g _37164 u f t).
Proof. exact (TRANS (@lem3527545 _90715 _90724 g _37164 u f t) (@lem3527540 _90715 _90724 g _37164 u f t)). Qed.
Lemma lem3527547 {_90715 _90724 : Type'} (g : type686 _90715) (_37164 : type627 _90715 _90724) (u : _90715 -> Prop) (f : _90715 -> _90724) : (term4090 _90715 _90724 g _37164 u f) = (term4091 _90715 _90724 g _37164 u f).
Proof. exact (fun_ext (fun t : _90715 -> Prop => @lem3527546 _90715 _90724 g _37164 u f t)). Qed.
Lemma lem3527548 {_90715 : Type'} : (@ex (_90715 -> Prop)) = (@ex (_90715 -> Prop)).
Proof. exact (eq_refl (@ex (_90715 -> Prop))). Qed.
Lemma lem3527549 {_90715 _90724 : Type'} (g : type686 _90715) (_37164 : type627 _90715 _90724) (u : _90715 -> Prop) (f : _90715 -> _90724) : (term4087 _90715 _90724 g _37164 u f) = (term4092 _90715 _90724 g _37164 u f).
Proof. exact (MK_COMB (@lem3527548 _90715) (@lem3527547 _90715 _90724 g _37164 u f)). Qed.
Lemma lem3527550 {_90715 _90724 : Type'} (g : type686 _90715) (_37164 : type627 _90715 _90724) (u : _90715 -> Prop) (f : _90715 -> _90724) : (term4086 _90715 _90724 g _37164 u f) = (term4092 _90715 _90724 g _37164 u f).
Proof. exact (TRANS (@lem3527542 _90715 _90724 g _37164 u f) (@lem3527549 _90715 _90724 g _37164 u f)). Qed.
Lemma lem3527551 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem3527552 {_90715 : Type'} (g : type686 _90715) : (term4093 _90715 g) = (term4094 _90715 g).
Proof. exact (MK_COMB (@lem3527551) (@lem3527527 _90715 g)). Qed.
Lemma lem3527553 {_90715 _90724 : Type'} (g : type686 _90715) (_37164 : type627 _90715 _90724) (u : _90715 -> Prop) (f : _90715 -> _90724) : (term4095 _90715 _90724 g _37164 u f) = (term4096 _90715 _90724 g _37164 u f).
Proof. exact (MK_COMB (@lem3527552 _90715 g) (@lem3527550 _90715 _90724 g _37164 u f)). Qed.
Lemma lem3527554 {_90715 _90724 : Type'} (g : type686 _90715) (_37164 : type627 _90715 _90724) (u : _90715 -> Prop) (f : _90715 -> _90724) : (term4097 _90715 _90724 g _37164 u f) = (term4095 _90715 _90724 g _37164 u f).
Proof. exact (@lem17045 (term40 _90715 g) (term2083 _90715 _90724 g _37164 u f)). Qed.
Lemma lem3527555 {_90715 _90724 : Type'} (g : type686 _90715) (_37164 : type627 _90715 _90724) (u : _90715 -> Prop) (f : _90715 -> _90724) : (term4097 _90715 _90724 g _37164 u f) = (term4096 _90715 _90724 g _37164 u f).
Proof. exact (TRANS (@lem3527554 _90715 _90724 g _37164 u f) (@lem3527553 _90715 _90724 g _37164 u f)). Qed.
Lemma lem3527556 {_90715 _90724 : Type'} (f : _90715 -> _90724) (g : type686 _90715) : ((term49 _90715 _90724 f g) = (term50 _90715 _90724 f g)) = ((term49 _90715 _90724 f g) = (term50 _90715 _90724 f g)).
Proof. exact (eq_refl ((term49 _90715 _90724 f g) = (term50 _90715 _90724 f g))). Qed.
Lemma lem3527557 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem3527558 {_90715 _90724 : Type'} (g : type686 _90715) (_37164 : type627 _90715 _90724) (u : _90715 -> Prop) (f : _90715 -> _90724) : (term4098 _90715 _90724 g _37164 u f) = (term4099 _90715 _90724 g _37164 u f).
Proof. exact (MK_COMB (@lem3527557) (@lem3527555 _90715 _90724 g _37164 u f)). Qed.
Lemma lem3527559 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) (u : _90715 -> Prop) (f : _90715 -> _90724) (g : type686 _90715) : (term4100 _90715 _90724 _37164 u f g) = (term4101 _90715 _90724 _37164 u f g).
Proof. exact (MK_COMB (@lem3527558 _90715 _90724 g _37164 u f) (@lem3527556 _90715 _90724 f g)). Qed.
Lemma lem3527560 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) (u : _90715 -> Prop) (f : _90715 -> _90724) (g : type686 _90715) : (term2086 _90715 _90724 _37164 u f g) = (term4100 _90715 _90724 _37164 u f g).
Proof. exact (@lem17265 (term2084 _90715 _90724 g _37164 u f) ((term49 _90715 _90724 f g) = (term50 _90715 _90724 f g))). Qed.
Lemma lem3527561 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) (u : _90715 -> Prop) (f : _90715 -> _90724) (g : type686 _90715) : (term2086 _90715 _90724 _37164 u f g) = (term4101 _90715 _90724 _37164 u f g).
Proof. exact (TRANS (@lem3527560 _90715 _90724 _37164 u f g) (@lem3527559 _90715 _90724 _37164 u f g)). Qed.
Lemma lem3527562 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) (u : _90715 -> Prop) (f : _90715 -> _90724) : (term2088 _90715 _90724 _37164 u f) = (term4102 _90715 _90724 _37164 u f).
Proof. exact (fun_ext (fun g : type686 _90715 => @lem3527561 _90715 _90724 _37164 u f g)). Qed.
Lemma lem3527563 {_90715 : Type'} : (@all ((_90715 -> Prop) -> Prop)) = (@all ((_90715 -> Prop) -> Prop)).
Proof. exact (eq_refl (@all ((_90715 -> Prop) -> Prop))). Qed.
Lemma lem3527564 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) (u : _90715 -> Prop) (f : _90715 -> _90724) : (term2089 _90715 _90724 _37164 u f) = (term4103 _90715 _90724 _37164 u f).
Proof. exact (MK_COMB (@lem3527563 _90715) (@lem3527562 _90715 _90724 _37164 u f)). Qed.
Lemma lem3527565 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) (u : _90715 -> Prop) : (term2091 _90715 _90724 _37164 u) = (term4104 _90715 _90724 _37164 u).
Proof. exact (fun_ext (fun f : _90715 -> _90724 => @lem3527564 _90715 _90724 _37164 u f)). Qed.
Lemma lem3527566 {_90715 _90724 : Type'} : (@all (_90715 -> _90724)) = (@all (_90715 -> _90724)).
Proof. exact (eq_refl (@all (_90715 -> _90724))). Qed.
Lemma lem3527567 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) (u : _90715 -> Prop) : (term2092 _90715 _90724 _37164 u) = (term4105 _90715 _90724 _37164 u).
Proof. exact (MK_COMB (@lem3527566 _90715 _90724) (@lem3527565 _90715 _90724 _37164 u)). Qed.
Lemma lem3527568 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) : (term2094 _90715 _90724 _37164) = (term4106 _90715 _90724 _37164).
Proof. exact (fun_ext (fun u : _90715 -> Prop => @lem3527567 _90715 _90724 _37164 u)). Qed.
Lemma lem3527569 {_90715 : Type'} : (@all (_90715 -> Prop)) = (@all (_90715 -> Prop)).
Proof. exact (eq_refl (@all (_90715 -> Prop))). Qed.
Lemma lem3527570 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) : (term2095 _90715 _90724 _37164) = (term4107 _90715 _90724 _37164).
Proof. exact (MK_COMB (@lem3527569 _90715) (@lem3527568 _90715 _90724 _37164)). Qed.
Lemma lem3527677 {A : Type'} (P : Prop) (Q : A -> Prop) : (term434 A P Q) = (term435 A P Q).
Proof. exact (EQ_MP (@lem18911 A P Q) (@lem18910 A P Q)). Qed.
Lemma lem3527678 {_90715 : Type'} (P : Prop) (Q : type686 _90715) : (term436 _90715 P Q) = (term437 _90715 P Q).
Proof. exact (@lem3527677 (_90715 -> Prop) P Q). Qed.
Lemma lem3527679 {_90715 _90724 : Type'} (g : type686 _90715) (_37164 : type627 _90715 _90724) (u : _90715 -> Prop) (f : _90715 -> _90724) : (term4108 _90715 _90724 g _37164 u f) = (term4109 _90715 _90724 g _37164 u f).
Proof. exact (@lem3527678 _90715 (g = (@EMPTY (_90715 -> Prop))) (term4091 _90715 _90724 g _37164 u f)). Qed.
Lemma lem3527680 {_90715 _90724 : Type'} (g : type686 _90715) (_37164 : type627 _90715 _90724) (u : _90715 -> Prop) (f : _90715 -> _90724) (t : _90715 -> Prop) : (term4110 _90715 _90724 g _37164 u f t) = (term4084 _90715 _90724 g _37164 u f t).
Proof. exact (eq_refl (term4110 _90715 _90724 g _37164 u f t)). Qed.
Lemma lem3527681 {_90715 _90724 : Type'} (g : type686 _90715) (_37164 : type627 _90715 _90724) (u : _90715 -> Prop) (f : _90715 -> _90724) : (term4111 _90715 _90724 g _37164 u f) = (term4091 _90715 _90724 g _37164 u f).
Proof. exact (fun_ext (fun t : _90715 -> Prop => @lem3527680 _90715 _90724 g _37164 u f t)). Qed.
Lemma lem3527682 {_90715 : Type'} : (@ex (_90715 -> Prop)) = (@ex (_90715 -> Prop)).
Proof. exact (eq_refl (@ex (_90715 -> Prop))). Qed.
Lemma lem3527683 {_90715 _90724 : Type'} (g : type686 _90715) (_37164 : type627 _90715 _90724) (u : _90715 -> Prop) (f : _90715 -> _90724) : (term4112 _90715 _90724 g _37164 u f) = (term4092 _90715 _90724 g _37164 u f).
Proof. exact (MK_COMB (@lem3527682 _90715) (@lem3527681 _90715 _90724 g _37164 u f)). Qed.
Lemma lem3527684 {_90715 : Type'} (g : type686 _90715) : (term4094 _90715 g) = (term4094 _90715 g).
Proof. exact (eq_refl (term4094 _90715 g)). Qed.
Lemma lem3527685 {_90715 _90724 : Type'} (g : type686 _90715) (_37164 : type627 _90715 _90724) (u : _90715 -> Prop) (f : _90715 -> _90724) : (term4108 _90715 _90724 g _37164 u f) = (term4096 _90715 _90724 g _37164 u f).
Proof. exact (MK_COMB (@lem3527684 _90715 g) (@lem3527683 _90715 _90724 g _37164 u f)). Qed.
Lemma lem3527686 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem3527687 {_90715 _90724 : Type'} (g : type686 _90715) (_37164 : type627 _90715 _90724) (u : _90715 -> Prop) (f : _90715 -> _90724) : (term4113 _90715 _90724 g _37164 u f) = (term4114 _90715 _90724 g _37164 u f).
Proof. exact (MK_COMB (@lem3527686) (@lem3527685 _90715 _90724 g _37164 u f)). Qed.
Lemma lem3527688 {_90715 _90724 : Type'} (g : type686 _90715) (_37164 : type627 _90715 _90724) (u : _90715 -> Prop) (f : _90715 -> _90724) (t : _90715 -> Prop) : (term4110 _90715 _90724 g _37164 u f t) = (term4084 _90715 _90724 g _37164 u f t).
Proof. exact (eq_refl (term4110 _90715 _90724 g _37164 u f t)). Qed.
Lemma lem3527689 {_90715 : Type'} (g : type686 _90715) : (term4094 _90715 g) = (term4094 _90715 g).
Proof. exact (eq_refl (term4094 _90715 g)). Qed.
Lemma lem3527690 {_90715 _90724 : Type'} (g : type686 _90715) (_37164 : type627 _90715 _90724) (u : _90715 -> Prop) (f : _90715 -> _90724) (t : _90715 -> Prop) : (term4115 _90715 _90724 g _37164 u f t) = (term4116 _90715 _90724 g _37164 u f t).
Proof. exact (MK_COMB (@lem3527689 _90715 g) (@lem3527688 _90715 _90724 g _37164 u f t)). Qed.
Lemma lem3527691 {_90715 _90724 : Type'} (g : type686 _90715) (_37164 : type627 _90715 _90724) (u : _90715 -> Prop) (f : _90715 -> _90724) : (term4117 _90715 _90724 g _37164 u f) = (term4118 _90715 _90724 g _37164 u f).
Proof. exact (fun_ext (fun t : _90715 -> Prop => @lem3527690 _90715 _90724 g _37164 u f t)). Qed.
Lemma lem3527692 {_90715 : Type'} : (@ex (_90715 -> Prop)) = (@ex (_90715 -> Prop)).
Proof. exact (eq_refl (@ex (_90715 -> Prop))). Qed.
Lemma lem3527693 {_90715 _90724 : Type'} (g : type686 _90715) (_37164 : type627 _90715 _90724) (u : _90715 -> Prop) (f : _90715 -> _90724) : (term4109 _90715 _90724 g _37164 u f) = (term4119 _90715 _90724 g _37164 u f).
Proof. exact (MK_COMB (@lem3527692 _90715) (@lem3527691 _90715 _90724 g _37164 u f)). Qed.
Lemma lem3527694 {_90715 _90724 : Type'} (g : type686 _90715) (_37164 : type627 _90715 _90724) (u : _90715 -> Prop) (f : _90715 -> _90724) : ((term4108 _90715 _90724 g _37164 u f) = (term4109 _90715 _90724 g _37164 u f)) = ((term4096 _90715 _90724 g _37164 u f) = (term4119 _90715 _90724 g _37164 u f)).
Proof. exact (MK_COMB (@lem3527687 _90715 _90724 g _37164 u f) (@lem3527693 _90715 _90724 g _37164 u f)). Qed.
Lemma lem3527695 {_90715 _90724 : Type'} (g : type686 _90715) (_37164 : type627 _90715 _90724) (u : _90715 -> Prop) (f : _90715 -> _90724) : (term4096 _90715 _90724 g _37164 u f) = (term4119 _90715 _90724 g _37164 u f).
Proof. exact (EQ_MP (@lem3527694 _90715 _90724 g _37164 u f) (@lem3527679 _90715 _90724 g _37164 u f)). Qed.
Lemma lem3527696 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem3527697 {_90715 _90724 : Type'} (g : type686 _90715) (_37164 : type627 _90715 _90724) (u : _90715 -> Prop) (f : _90715 -> _90724) : (term4099 _90715 _90724 g _37164 u f) = (term4120 _90715 _90724 g _37164 u f).
Proof. exact (MK_COMB (@lem3527696) (@lem3527695 _90715 _90724 g _37164 u f)). Qed.
Lemma lem3527698 {_90715 _90724 : Type'} (f : _90715 -> _90724) (g : type686 _90715) : ((term49 _90715 _90724 f g) = (term50 _90715 _90724 f g)) = ((term49 _90715 _90724 f g) = (term50 _90715 _90724 f g)).
Proof. exact (eq_refl ((term49 _90715 _90724 f g) = (term50 _90715 _90724 f g))). Qed.
Lemma lem3527699 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) (u : _90715 -> Prop) (f : _90715 -> _90724) (g : type686 _90715) : (term4101 _90715 _90724 _37164 u f g) = (term4121 _90715 _90724 _37164 u f g).
Proof. exact (MK_COMB (@lem3527697 _90715 _90724 g _37164 u f) (@lem3527698 _90715 _90724 f g)). Qed.
Lemma lem3527701 {A : Type'} (P : A -> Prop) (Q : Prop) : (term550 A P Q) = (term551 A P Q).
Proof. exact (EQ_MP (@lem18905 A P Q) (@lem18904 A P Q)). Qed.
Lemma lem3527702 {_90715 : Type'} (P : type686 _90715) (Q : Prop) : (term567 _90715 P Q) = (term568 _90715 P Q).
Proof. exact (@lem3527701 (_90715 -> Prop) P Q). Qed.
Lemma lem3527703 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) (u : _90715 -> Prop) (f : _90715 -> _90724) (g : type686 _90715) : (term4122 _90715 _90724 _37164 u f g) = (term4123 _90715 _90724 _37164 u f g).
Proof. exact (@lem3527702 _90715 (term4118 _90715 _90724 g _37164 u f) ((term49 _90715 _90724 f g) = (term50 _90715 _90724 f g))). Qed.
Lemma lem3527704 {_90715 _90724 : Type'} (g : type686 _90715) (_37164 : type627 _90715 _90724) (u : _90715 -> Prop) (f : _90715 -> _90724) (t : _90715 -> Prop) : (term4124 _90715 _90724 g _37164 u f t) = (term4116 _90715 _90724 g _37164 u f t).
Proof. exact (eq_refl (term4124 _90715 _90724 g _37164 u f t)). Qed.
Lemma lem3527705 {_90715 _90724 : Type'} (g : type686 _90715) (_37164 : type627 _90715 _90724) (u : _90715 -> Prop) (f : _90715 -> _90724) : (term4125 _90715 _90724 g _37164 u f) = (term4118 _90715 _90724 g _37164 u f).
Proof. exact (fun_ext (fun t : _90715 -> Prop => @lem3527704 _90715 _90724 g _37164 u f t)). Qed.
Lemma lem3527706 {_90715 : Type'} : (@ex (_90715 -> Prop)) = (@ex (_90715 -> Prop)).
Proof. exact (eq_refl (@ex (_90715 -> Prop))). Qed.
Lemma lem3527707 {_90715 _90724 : Type'} (g : type686 _90715) (_37164 : type627 _90715 _90724) (u : _90715 -> Prop) (f : _90715 -> _90724) : (term4126 _90715 _90724 g _37164 u f) = (term4119 _90715 _90724 g _37164 u f).
Proof. exact (MK_COMB (@lem3527706 _90715) (@lem3527705 _90715 _90724 g _37164 u f)). Qed.
Lemma lem3527708 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem3527709 {_90715 _90724 : Type'} (g : type686 _90715) (_37164 : type627 _90715 _90724) (u : _90715 -> Prop) (f : _90715 -> _90724) : (term4127 _90715 _90724 g _37164 u f) = (term4120 _90715 _90724 g _37164 u f).
Proof. exact (MK_COMB (@lem3527708) (@lem3527707 _90715 _90724 g _37164 u f)). Qed.
Lemma lem3527710 {_90715 _90724 : Type'} (f : _90715 -> _90724) (g : type686 _90715) : ((term49 _90715 _90724 f g) = (term50 _90715 _90724 f g)) = ((term49 _90715 _90724 f g) = (term50 _90715 _90724 f g)).
Proof. exact (eq_refl ((term49 _90715 _90724 f g) = (term50 _90715 _90724 f g))). Qed.
Lemma lem3527711 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) (u : _90715 -> Prop) (f : _90715 -> _90724) (g : type686 _90715) : (term4122 _90715 _90724 _37164 u f g) = (term4121 _90715 _90724 _37164 u f g).
Proof. exact (MK_COMB (@lem3527709 _90715 _90724 g _37164 u f) (@lem3527710 _90715 _90724 f g)). Qed.
Lemma lem3527712 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem3527713 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) (u : _90715 -> Prop) (f : _90715 -> _90724) (g : type686 _90715) : (term4128 _90715 _90724 _37164 u f g) = (term4129 _90715 _90724 _37164 u f g).
Proof. exact (MK_COMB (@lem3527712) (@lem3527711 _90715 _90724 _37164 u f g)). Qed.
Lemma lem3527714 {_90715 _90724 : Type'} (g : type686 _90715) (_37164 : type627 _90715 _90724) (u : _90715 -> Prop) (f : _90715 -> _90724) (t : _90715 -> Prop) : (term4124 _90715 _90724 g _37164 u f t) = (term4116 _90715 _90724 g _37164 u f t).
Proof. exact (eq_refl (term4124 _90715 _90724 g _37164 u f t)). Qed.
Lemma lem3527715 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem3527716 {_90715 _90724 : Type'} (g : type686 _90715) (_37164 : type627 _90715 _90724) (u : _90715 -> Prop) (f : _90715 -> _90724) (t : _90715 -> Prop) : (term4130 _90715 _90724 g _37164 u f t) = (term4131 _90715 _90724 g _37164 u f t).
Proof. exact (MK_COMB (@lem3527715) (@lem3527714 _90715 _90724 g _37164 u f t)). Qed.
Lemma lem3527717 {_90715 _90724 : Type'} (f : _90715 -> _90724) (g : type686 _90715) : ((term49 _90715 _90724 f g) = (term50 _90715 _90724 f g)) = ((term49 _90715 _90724 f g) = (term50 _90715 _90724 f g)).
Proof. exact (eq_refl ((term49 _90715 _90724 f g) = (term50 _90715 _90724 f g))). Qed.
Lemma lem3527718 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) (u : _90715 -> Prop) (t : _90715 -> Prop) (f : _90715 -> _90724) (g : type686 _90715) : (term4132 _90715 _90724 _37164 u t f g) = (term4133 _90715 _90724 _37164 u t f g).
Proof. exact (MK_COMB (@lem3527716 _90715 _90724 g _37164 u f t) (@lem3527717 _90715 _90724 f g)). Qed.
Lemma lem3527719 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) (u : _90715 -> Prop) (f : _90715 -> _90724) (g : type686 _90715) : (term4134 _90715 _90724 _37164 u f g) = (term4135 _90715 _90724 _37164 u f g).
Proof. exact (fun_ext (fun t : _90715 -> Prop => @lem3527718 _90715 _90724 _37164 u t f g)). Qed.
Lemma lem3527720 {_90715 : Type'} : (@ex (_90715 -> Prop)) = (@ex (_90715 -> Prop)).
Proof. exact (eq_refl (@ex (_90715 -> Prop))). Qed.
Lemma lem3527721 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) (u : _90715 -> Prop) (f : _90715 -> _90724) (g : type686 _90715) : (term4123 _90715 _90724 _37164 u f g) = (term4136 _90715 _90724 _37164 u f g).
Proof. exact (MK_COMB (@lem3527720 _90715) (@lem3527719 _90715 _90724 _37164 u f g)). Qed.
Lemma lem3527722 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) (u : _90715 -> Prop) (f : _90715 -> _90724) (g : type686 _90715) : ((term4122 _90715 _90724 _37164 u f g) = (term4123 _90715 _90724 _37164 u f g)) = ((term4121 _90715 _90724 _37164 u f g) = (term4136 _90715 _90724 _37164 u f g)).
Proof. exact (MK_COMB (@lem3527713 _90715 _90724 _37164 u f g) (@lem3527721 _90715 _90724 _37164 u f g)). Qed.
Lemma lem3527723 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) (u : _90715 -> Prop) (f : _90715 -> _90724) (g : type686 _90715) : (term4121 _90715 _90724 _37164 u f g) = (term4136 _90715 _90724 _37164 u f g).
Proof. exact (EQ_MP (@lem3527722 _90715 _90724 _37164 u f g) (@lem3527703 _90715 _90724 _37164 u f g)). Qed.
Lemma lem3527724 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) (u : _90715 -> Prop) (f : _90715 -> _90724) (g : type686 _90715) : (term4101 _90715 _90724 _37164 u f g) = (term4136 _90715 _90724 _37164 u f g).
Proof. exact (TRANS (@lem3527699 _90715 _90724 _37164 u f g) (@lem3527723 _90715 _90724 _37164 u f g)). Qed.
Lemma lem3527725 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) (u : _90715 -> Prop) (f : _90715 -> _90724) : (term4102 _90715 _90724 _37164 u f) = (term4137 _90715 _90724 _37164 u f).
Proof. exact (fun_ext (fun g : type686 _90715 => @lem3527724 _90715 _90724 _37164 u f g)). Qed.
Lemma lem3527726 {_90715 : Type'} : (@all ((_90715 -> Prop) -> Prop)) = (@all ((_90715 -> Prop) -> Prop)).
Proof. exact (eq_refl (@all ((_90715 -> Prop) -> Prop))). Qed.
Lemma lem3527727 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) (u : _90715 -> Prop) (f : _90715 -> _90724) : (term4103 _90715 _90724 _37164 u f) = (term4138 _90715 _90724 _37164 u f).
Proof. exact (MK_COMB (@lem3527726 _90715) (@lem3527725 _90715 _90724 _37164 u f)). Qed.
Lemma lem3527729 {A B : Type'} (P : type1413 A B) : (term453 A B P) = (term454 A B P).
Proof. exact (EQ_MP (@lem18899 A B P) (@lem18898 A B P)). Qed.
Lemma lem3527730 {_90715 : Type'} (P : type174 _90715) : (term4139 _90715 P) = (term4140 _90715 P).
Proof. exact (@lem3527729 (type686 _90715) (_90715 -> Prop) P). Qed.
Lemma lem3527731 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) (u : _90715 -> Prop) (f : _90715 -> _90724) : (term4141 _90715 _90724 _37164 u f) = (term4142 _90715 _90724 _37164 u f).
Proof. exact (@lem3527730 _90715 (term4143 _90715 _90724 _37164 u f)). Qed.
Lemma lem3527732 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) (u : _90715 -> Prop) (f : _90715 -> _90724) (g : type686 _90715) : (term4144 _90715 _90724 _37164 u f g) = (term4135 _90715 _90724 _37164 u f g).
Proof. exact (eq_refl (term4144 _90715 _90724 _37164 u f g)). Qed.
Lemma lem3527733 {_90715 : Type'} (t : _90715 -> Prop) : t = t.
Proof. exact (eq_refl t). Qed.
Lemma lem3527734 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) (u : _90715 -> Prop) (f : _90715 -> _90724) (g : type686 _90715) (t : _90715 -> Prop) : (term4145 _90715 _90724 _37164 u f g t) = (term4146 _90715 _90724 _37164 u f g t).
Proof. exact (MK_COMB (@lem3527732 _90715 _90724 _37164 u f g) (@lem3527733 _90715 t)). Qed.
Lemma lem3527735 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) (u : _90715 -> Prop) (t : _90715 -> Prop) (f : _90715 -> _90724) (g : type686 _90715) : (term4146 _90715 _90724 _37164 u f g t) = (term4133 _90715 _90724 _37164 u t f g).
Proof. exact (eq_refl (term4146 _90715 _90724 _37164 u f g t)). Qed.
Lemma lem3527736 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) (u : _90715 -> Prop) (t : _90715 -> Prop) (f : _90715 -> _90724) (g : type686 _90715) : (term4145 _90715 _90724 _37164 u f g t) = (term4133 _90715 _90724 _37164 u t f g).
Proof. exact (TRANS (@lem3527734 _90715 _90724 _37164 u f g t) (@lem3527735 _90715 _90724 _37164 u t f g)). Qed.
Lemma lem3527737 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) (u : _90715 -> Prop) (f : _90715 -> _90724) (g : type686 _90715) : (term4147 _90715 _90724 _37164 u f g) = (term4135 _90715 _90724 _37164 u f g).
Proof. exact (fun_ext (fun t : _90715 -> Prop => @lem3527736 _90715 _90724 _37164 u t f g)). Qed.
Lemma lem3527738 {_90715 : Type'} : (@ex (_90715 -> Prop)) = (@ex (_90715 -> Prop)).
Proof. exact (eq_refl (@ex (_90715 -> Prop))). Qed.
Lemma lem3527739 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) (u : _90715 -> Prop) (f : _90715 -> _90724) (g : type686 _90715) : (term4148 _90715 _90724 _37164 u f g) = (term4136 _90715 _90724 _37164 u f g).
Proof. exact (MK_COMB (@lem3527738 _90715) (@lem3527737 _90715 _90724 _37164 u f g)). Qed.
Lemma lem3527740 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) (u : _90715 -> Prop) (f : _90715 -> _90724) : (term4149 _90715 _90724 _37164 u f) = (term4137 _90715 _90724 _37164 u f).
Proof. exact (fun_ext (fun g : type686 _90715 => @lem3527739 _90715 _90724 _37164 u f g)). Qed.
Lemma lem3527741 {_90715 : Type'} : (@all ((_90715 -> Prop) -> Prop)) = (@all ((_90715 -> Prop) -> Prop)).
Proof. exact (eq_refl (@all ((_90715 -> Prop) -> Prop))). Qed.
Lemma lem3527742 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) (u : _90715 -> Prop) (f : _90715 -> _90724) : (term4141 _90715 _90724 _37164 u f) = (term4138 _90715 _90724 _37164 u f).
Proof. exact (MK_COMB (@lem3527741 _90715) (@lem3527740 _90715 _90724 _37164 u f)). Qed.
Lemma lem3527743 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem3527744 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) (u : _90715 -> Prop) (f : _90715 -> _90724) : (term4150 _90715 _90724 _37164 u f) = (term4151 _90715 _90724 _37164 u f).
Proof. exact (MK_COMB (@lem3527743) (@lem3527742 _90715 _90724 _37164 u f)). Qed.
Lemma lem3527745 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) (u : _90715 -> Prop) (f : _90715 -> _90724) (g : type686 _90715) : (term4144 _90715 _90724 _37164 u f g) = (term4135 _90715 _90724 _37164 u f g).
Proof. exact (eq_refl (term4144 _90715 _90724 _37164 u f g)). Qed.
Lemma lem3527746 {_90715 : Type'} (t : type178 _90715) (g : type686 _90715) : (t g) = (t g).
Proof. exact (eq_refl (t g)). Qed.
Lemma lem3527747 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) (u : _90715 -> Prop) (f : _90715 -> _90724) (t : type178 _90715) (g : type686 _90715) : (term4152 _90715 _90724 _37164 u f t g) = (term4153 _90715 _90724 _37164 u f t g).
Proof. exact (MK_COMB (@lem3527745 _90715 _90724 _37164 u f g) (@lem3527746 _90715 t g)). Qed.
Lemma lem3527748 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) (u : _90715 -> Prop) (t : type178 _90715) (f : _90715 -> _90724) (g : type686 _90715) : (term4153 _90715 _90724 _37164 u f t g) = (term4154 _90715 _90724 _37164 u t f g).
Proof. exact (eq_refl (term4153 _90715 _90724 _37164 u f t g)). Qed.
Lemma lem3527749 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) (u : _90715 -> Prop) (t : type178 _90715) (f : _90715 -> _90724) (g : type686 _90715) : (term4152 _90715 _90724 _37164 u f t g) = (term4154 _90715 _90724 _37164 u t f g).
Proof. exact (TRANS (@lem3527747 _90715 _90724 _37164 u f t g) (@lem3527748 _90715 _90724 _37164 u t f g)). Qed.
Lemma lem3527750 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) (u : _90715 -> Prop) (t : type178 _90715) (f : _90715 -> _90724) : (term4155 _90715 _90724 _37164 u f t) = (term4156 _90715 _90724 _37164 u t f).
Proof. exact (fun_ext (fun g : type686 _90715 => @lem3527749 _90715 _90724 _37164 u t f g)). Qed.
Lemma lem3527751 {_90715 : Type'} : (@all ((_90715 -> Prop) -> Prop)) = (@all ((_90715 -> Prop) -> Prop)).
Proof. exact (eq_refl (@all ((_90715 -> Prop) -> Prop))). Qed.
Lemma lem3527752 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) (u : _90715 -> Prop) (t : type178 _90715) (f : _90715 -> _90724) : (term4157 _90715 _90724 _37164 u f t) = (term4158 _90715 _90724 _37164 u t f).
Proof. exact (MK_COMB (@lem3527751 _90715) (@lem3527750 _90715 _90724 _37164 u t f)). Qed.
Lemma lem3527753 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) (u : _90715 -> Prop) (f : _90715 -> _90724) : (term4159 _90715 _90724 _37164 u f) = (term4160 _90715 _90724 _37164 u f).
Proof. exact (fun_ext (fun t : type178 _90715 => @lem3527752 _90715 _90724 _37164 u t f)). Qed.
Lemma lem3527754 {_90715 : Type'} : (@ex (((_90715 -> Prop) -> Prop) -> _90715 -> Prop)) = (@ex (((_90715 -> Prop) -> Prop) -> _90715 -> Prop)).
Proof. exact (eq_refl (@ex (((_90715 -> Prop) -> Prop) -> _90715 -> Prop))). Qed.
Lemma lem3527755 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) (u : _90715 -> Prop) (f : _90715 -> _90724) : (term4142 _90715 _90724 _37164 u f) = (term4161 _90715 _90724 _37164 u f).
Proof. exact (MK_COMB (@lem3527754 _90715) (@lem3527753 _90715 _90724 _37164 u f)). Qed.
Lemma lem3527756 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) (u : _90715 -> Prop) (f : _90715 -> _90724) : ((term4141 _90715 _90724 _37164 u f) = (term4142 _90715 _90724 _37164 u f)) = ((term4138 _90715 _90724 _37164 u f) = (term4161 _90715 _90724 _37164 u f)).
Proof. exact (MK_COMB (@lem3527744 _90715 _90724 _37164 u f) (@lem3527755 _90715 _90724 _37164 u f)). Qed.
Lemma lem3527757 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) (u : _90715 -> Prop) (f : _90715 -> _90724) : (term4138 _90715 _90724 _37164 u f) = (term4161 _90715 _90724 _37164 u f).
Proof. exact (EQ_MP (@lem3527756 _90715 _90724 _37164 u f) (@lem3527731 _90715 _90724 _37164 u f)). Qed.
Lemma lem3527758 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) (u : _90715 -> Prop) (f : _90715 -> _90724) : (term4103 _90715 _90724 _37164 u f) = (term4161 _90715 _90724 _37164 u f).
Proof. exact (TRANS (@lem3527727 _90715 _90724 _37164 u f) (@lem3527757 _90715 _90724 _37164 u f)). Qed.
Lemma lem3527759 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) (u : _90715 -> Prop) : (term4104 _90715 _90724 _37164 u) = (term4162 _90715 _90724 _37164 u).
Proof. exact (fun_ext (fun f : _90715 -> _90724 => @lem3527758 _90715 _90724 _37164 u f)). Qed.
Lemma lem3527760 {_90715 _90724 : Type'} : (@all (_90715 -> _90724)) = (@all (_90715 -> _90724)).
Proof. exact (eq_refl (@all (_90715 -> _90724))). Qed.
Lemma lem3527761 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) (u : _90715 -> Prop) : (term4105 _90715 _90724 _37164 u) = (term4163 _90715 _90724 _37164 u).
Proof. exact (MK_COMB (@lem3527760 _90715 _90724) (@lem3527759 _90715 _90724 _37164 u)). Qed.
Lemma lem3527763 {A B : Type'} (P : type1413 A B) : (term453 A B P) = (term454 A B P).
Proof. exact (EQ_MP (@lem18899 A B P) (@lem18898 A B P)). Qed.
Lemma lem3527764 {_90715 _90724 : Type'} (P : type489 _90715 _90724) : (term4164 _90715 _90724 P) = (term4165 _90715 _90724 P).
Proof. exact (@lem3527763 (_90715 -> _90724) (type178 _90715) P). Qed.
Lemma lem3527765 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) (u : _90715 -> Prop) : (term4166 _90715 _90724 _37164 u) = (term4167 _90715 _90724 _37164 u).
Proof. exact (@lem3527764 _90715 _90724 (term4168 _90715 _90724 _37164 u)). Qed.
Lemma lem3527766 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) (u : _90715 -> Prop) (f : _90715 -> _90724) : (term4169 _90715 _90724 _37164 u f) = (term4160 _90715 _90724 _37164 u f).
Proof. exact (eq_refl (term4169 _90715 _90724 _37164 u f)). Qed.
Lemma lem3527767 {_90715 : Type'} (t : type178 _90715) : t = t.
Proof. exact (eq_refl t). Qed.
Lemma lem3527768 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) (u : _90715 -> Prop) (f : _90715 -> _90724) (t : type178 _90715) : (term4170 _90715 _90724 _37164 u f t) = (term4171 _90715 _90724 _37164 u f t).
Proof. exact (MK_COMB (@lem3527766 _90715 _90724 _37164 u f) (@lem3527767 _90715 t)). Qed.
Lemma lem3527769 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) (u : _90715 -> Prop) (t : type178 _90715) (f : _90715 -> _90724) : (term4171 _90715 _90724 _37164 u f t) = (term4158 _90715 _90724 _37164 u t f).
Proof. exact (eq_refl (term4171 _90715 _90724 _37164 u f t)). Qed.
Lemma lem3527770 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) (u : _90715 -> Prop) (t : type178 _90715) (f : _90715 -> _90724) : (term4170 _90715 _90724 _37164 u f t) = (term4158 _90715 _90724 _37164 u t f).
Proof. exact (TRANS (@lem3527768 _90715 _90724 _37164 u f t) (@lem3527769 _90715 _90724 _37164 u t f)). Qed.
Lemma lem3527771 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) (u : _90715 -> Prop) (f : _90715 -> _90724) : (term4172 _90715 _90724 _37164 u f) = (term4160 _90715 _90724 _37164 u f).
Proof. exact (fun_ext (fun t : type178 _90715 => @lem3527770 _90715 _90724 _37164 u t f)). Qed.
Lemma lem3527772 {_90715 : Type'} : (@ex (((_90715 -> Prop) -> Prop) -> _90715 -> Prop)) = (@ex (((_90715 -> Prop) -> Prop) -> _90715 -> Prop)).
Proof. exact (eq_refl (@ex (((_90715 -> Prop) -> Prop) -> _90715 -> Prop))). Qed.
Lemma lem3527773 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) (u : _90715 -> Prop) (f : _90715 -> _90724) : (term4173 _90715 _90724 _37164 u f) = (term4161 _90715 _90724 _37164 u f).
Proof. exact (MK_COMB (@lem3527772 _90715) (@lem3527771 _90715 _90724 _37164 u f)). Qed.
Lemma lem3527774 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) (u : _90715 -> Prop) : (term4174 _90715 _90724 _37164 u) = (term4162 _90715 _90724 _37164 u).
Proof. exact (fun_ext (fun f : _90715 -> _90724 => @lem3527773 _90715 _90724 _37164 u f)). Qed.
Lemma lem3527775 {_90715 _90724 : Type'} : (@all (_90715 -> _90724)) = (@all (_90715 -> _90724)).
Proof. exact (eq_refl (@all (_90715 -> _90724))). Qed.
Lemma lem3527776 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) (u : _90715 -> Prop) : (term4166 _90715 _90724 _37164 u) = (term4163 _90715 _90724 _37164 u).
Proof. exact (MK_COMB (@lem3527775 _90715 _90724) (@lem3527774 _90715 _90724 _37164 u)). Qed.
Lemma lem3527777 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem3527778 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) (u : _90715 -> Prop) : (term4175 _90715 _90724 _37164 u) = (term4176 _90715 _90724 _37164 u).
Proof. exact (MK_COMB (@lem3527777) (@lem3527776 _90715 _90724 _37164 u)). Qed.
Lemma lem3527779 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) (u : _90715 -> Prop) (f : _90715 -> _90724) : (term4169 _90715 _90724 _37164 u f) = (term4160 _90715 _90724 _37164 u f).
Proof. exact (eq_refl (term4169 _90715 _90724 _37164 u f)). Qed.
Lemma lem3527780 {_90715 _90724 : Type'} (t : type504 _90715 _90724) (f : _90715 -> _90724) : (t f) = (t f).
Proof. exact (eq_refl (t f)). Qed.
Lemma lem3527781 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) (u : _90715 -> Prop) (t : type504 _90715 _90724) (f : _90715 -> _90724) : (term4177 _90715 _90724 _37164 u t f) = (term4178 _90715 _90724 _37164 u t f).
Proof. exact (MK_COMB (@lem3527779 _90715 _90724 _37164 u f) (@lem3527780 _90715 _90724 t f)). Qed.
Lemma lem3527782 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) (u : _90715 -> Prop) (t : type504 _90715 _90724) (f : _90715 -> _90724) : (term4178 _90715 _90724 _37164 u t f) = (term4179 _90715 _90724 _37164 u t f).
Proof. exact (eq_refl (term4178 _90715 _90724 _37164 u t f)). Qed.
Lemma lem3527783 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) (u : _90715 -> Prop) (t : type504 _90715 _90724) (f : _90715 -> _90724) : (term4177 _90715 _90724 _37164 u t f) = (term4179 _90715 _90724 _37164 u t f).
Proof. exact (TRANS (@lem3527781 _90715 _90724 _37164 u t f) (@lem3527782 _90715 _90724 _37164 u t f)). Qed.
Lemma lem3527784 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) (u : _90715 -> Prop) (t : type504 _90715 _90724) : (term4180 _90715 _90724 _37164 u t) = (term4181 _90715 _90724 _37164 u t).
Proof. exact (fun_ext (fun f : _90715 -> _90724 => @lem3527783 _90715 _90724 _37164 u t f)). Qed.
Lemma lem3527785 {_90715 _90724 : Type'} : (@all (_90715 -> _90724)) = (@all (_90715 -> _90724)).
Proof. exact (eq_refl (@all (_90715 -> _90724))). Qed.
Lemma lem3527786 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) (u : _90715 -> Prop) (t : type504 _90715 _90724) : (term4182 _90715 _90724 _37164 u t) = (term4183 _90715 _90724 _37164 u t).
Proof. exact (MK_COMB (@lem3527785 _90715 _90724) (@lem3527784 _90715 _90724 _37164 u t)). Qed.
Lemma lem3527787 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) (u : _90715 -> Prop) : (term4184 _90715 _90724 _37164 u) = (term4185 _90715 _90724 _37164 u).
Proof. exact (fun_ext (fun t : type504 _90715 _90724 => @lem3527786 _90715 _90724 _37164 u t)). Qed.
Lemma lem3527788 {_90715 _90724 : Type'} : (@ex ((_90715 -> _90724) -> ((_90715 -> Prop) -> Prop) -> _90715 -> Prop)) = (@ex ((_90715 -> _90724) -> ((_90715 -> Prop) -> Prop) -> _90715 -> Prop)).
Proof. exact (eq_refl (@ex ((_90715 -> _90724) -> ((_90715 -> Prop) -> Prop) -> _90715 -> Prop))). Qed.
Lemma lem3527789 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) (u : _90715 -> Prop) : (term4167 _90715 _90724 _37164 u) = (term4186 _90715 _90724 _37164 u).
Proof. exact (MK_COMB (@lem3527788 _90715 _90724) (@lem3527787 _90715 _90724 _37164 u)). Qed.
Lemma lem3527790 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) (u : _90715 -> Prop) : ((term4166 _90715 _90724 _37164 u) = (term4167 _90715 _90724 _37164 u)) = ((term4163 _90715 _90724 _37164 u) = (term4186 _90715 _90724 _37164 u)).
Proof. exact (MK_COMB (@lem3527778 _90715 _90724 _37164 u) (@lem3527789 _90715 _90724 _37164 u)). Qed.
Lemma lem3527791 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) (u : _90715 -> Prop) : (term4163 _90715 _90724 _37164 u) = (term4186 _90715 _90724 _37164 u).
Proof. exact (EQ_MP (@lem3527790 _90715 _90724 _37164 u) (@lem3527765 _90715 _90724 _37164 u)). Qed.
Lemma lem3527792 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) (u : _90715 -> Prop) : (term4105 _90715 _90724 _37164 u) = (term4186 _90715 _90724 _37164 u).
Proof. exact (TRANS (@lem3527761 _90715 _90724 _37164 u) (@lem3527791 _90715 _90724 _37164 u)). Qed.
Lemma lem3527793 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) : (term4106 _90715 _90724 _37164) = (term4187 _90715 _90724 _37164).
Proof. exact (fun_ext (fun u : _90715 -> Prop => @lem3527792 _90715 _90724 _37164 u)). Qed.
Lemma lem3527794 {_90715 : Type'} : (@all (_90715 -> Prop)) = (@all (_90715 -> Prop)).
Proof. exact (eq_refl (@all (_90715 -> Prop))). Qed.
Lemma lem3527795 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) : (term4107 _90715 _90724 _37164) = (term4188 _90715 _90724 _37164).
Proof. exact (MK_COMB (@lem3527794 _90715) (@lem3527793 _90715 _90724 _37164)). Qed.
Lemma lem3527797 {A B : Type'} (P : type1413 A B) : (term453 A B P) = (term454 A B P).
Proof. exact (EQ_MP (@lem18899 A B P) (@lem18898 A B P)). Qed.
Lemma lem3527798 {_90715 _90724 : Type'} (P : type588 _90715 _90724) : (term4189 _90715 _90724 P) = (term4190 _90715 _90724 P).
Proof. exact (@lem3527797 (_90715 -> Prop) (type504 _90715 _90724) P). Qed.
Lemma lem3527799 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) : (term4191 _90715 _90724 _37164) = (term4192 _90715 _90724 _37164).
Proof. exact (@lem3527798 _90715 _90724 (term4193 _90715 _90724 _37164)). Qed.
Lemma lem3527800 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) (u : _90715 -> Prop) : (term4194 _90715 _90724 _37164 u) = (term4185 _90715 _90724 _37164 u).
Proof. exact (eq_refl (term4194 _90715 _90724 _37164 u)). Qed.
Lemma lem3527801 {_90715 _90724 : Type'} (t : type504 _90715 _90724) : t = t.
Proof. exact (eq_refl t). Qed.
Lemma lem3527802 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) (u : _90715 -> Prop) (t : type504 _90715 _90724) : (term4195 _90715 _90724 _37164 u t) = (term4196 _90715 _90724 _37164 u t).
Proof. exact (MK_COMB (@lem3527800 _90715 _90724 _37164 u) (@lem3527801 _90715 _90724 t)). Qed.
Lemma lem3527803 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) (u : _90715 -> Prop) (t : type504 _90715 _90724) : (term4196 _90715 _90724 _37164 u t) = (term4183 _90715 _90724 _37164 u t).
Proof. exact (eq_refl (term4196 _90715 _90724 _37164 u t)). Qed.
Lemma lem3527804 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) (u : _90715 -> Prop) (t : type504 _90715 _90724) : (term4195 _90715 _90724 _37164 u t) = (term4183 _90715 _90724 _37164 u t).
Proof. exact (TRANS (@lem3527802 _90715 _90724 _37164 u t) (@lem3527803 _90715 _90724 _37164 u t)). Qed.
Lemma lem3527805 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) (u : _90715 -> Prop) : (term4197 _90715 _90724 _37164 u) = (term4185 _90715 _90724 _37164 u).
Proof. exact (fun_ext (fun t : type504 _90715 _90724 => @lem3527804 _90715 _90724 _37164 u t)). Qed.
Lemma lem3527806 {_90715 _90724 : Type'} : (@ex ((_90715 -> _90724) -> ((_90715 -> Prop) -> Prop) -> _90715 -> Prop)) = (@ex ((_90715 -> _90724) -> ((_90715 -> Prop) -> Prop) -> _90715 -> Prop)).
Proof. exact (eq_refl (@ex ((_90715 -> _90724) -> ((_90715 -> Prop) -> Prop) -> _90715 -> Prop))). Qed.
Lemma lem3527807 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) (u : _90715 -> Prop) : (term4198 _90715 _90724 _37164 u) = (term4186 _90715 _90724 _37164 u).
Proof. exact (MK_COMB (@lem3527806 _90715 _90724) (@lem3527805 _90715 _90724 _37164 u)). Qed.
Lemma lem3527808 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) : (term4199 _90715 _90724 _37164) = (term4187 _90715 _90724 _37164).
Proof. exact (fun_ext (fun u : _90715 -> Prop => @lem3527807 _90715 _90724 _37164 u)). Qed.
Lemma lem3527809 {_90715 : Type'} : (@all (_90715 -> Prop)) = (@all (_90715 -> Prop)).
Proof. exact (eq_refl (@all (_90715 -> Prop))). Qed.
Lemma lem3527810 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) : (term4191 _90715 _90724 _37164) = (term4188 _90715 _90724 _37164).
Proof. exact (MK_COMB (@lem3527809 _90715) (@lem3527808 _90715 _90724 _37164)). Qed.
Lemma lem3527811 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem3527812 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) : (term4200 _90715 _90724 _37164) = (term4201 _90715 _90724 _37164).
Proof. exact (MK_COMB (@lem3527811) (@lem3527810 _90715 _90724 _37164)). Qed.
Lemma lem3527813 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) (u : _90715 -> Prop) : (term4194 _90715 _90724 _37164 u) = (term4185 _90715 _90724 _37164 u).
Proof. exact (eq_refl (term4194 _90715 _90724 _37164 u)). Qed.
Lemma lem3527814 {_90715 _90724 : Type'} (t : type625 _90715 _90724) (u : _90715 -> Prop) : (t u) = (t u).
Proof. exact (eq_refl (t u)). Qed.
Lemma lem3527815 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) (t : type625 _90715 _90724) (u : _90715 -> Prop) : (term4202 _90715 _90724 _37164 t u) = (term4203 _90715 _90724 _37164 t u).
Proof. exact (MK_COMB (@lem3527813 _90715 _90724 _37164 u) (@lem3527814 _90715 _90724 t u)). Qed.
Lemma lem3527816 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) (t : type625 _90715 _90724) (u : _90715 -> Prop) : (term4203 _90715 _90724 _37164 t u) = (term4204 _90715 _90724 _37164 t u).
Proof. exact (eq_refl (term4203 _90715 _90724 _37164 t u)). Qed.
Lemma lem3527817 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) (t : type625 _90715 _90724) (u : _90715 -> Prop) : (term4202 _90715 _90724 _37164 t u) = (term4204 _90715 _90724 _37164 t u).
Proof. exact (TRANS (@lem3527815 _90715 _90724 _37164 t u) (@lem3527816 _90715 _90724 _37164 t u)). Qed.
Lemma lem3527818 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) (t : type625 _90715 _90724) : (term4205 _90715 _90724 _37164 t) = (term4206 _90715 _90724 _37164 t).
Proof. exact (fun_ext (fun u : _90715 -> Prop => @lem3527817 _90715 _90724 _37164 t u)). Qed.
Lemma lem3527819 {_90715 : Type'} : (@all (_90715 -> Prop)) = (@all (_90715 -> Prop)).
Proof. exact (eq_refl (@all (_90715 -> Prop))). Qed.
Lemma lem3527820 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) (t : type625 _90715 _90724) : (term4207 _90715 _90724 _37164 t) = (term4208 _90715 _90724 _37164 t).
Proof. exact (MK_COMB (@lem3527819 _90715) (@lem3527818 _90715 _90724 _37164 t)). Qed.
Lemma lem3527821 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) : (term4209 _90715 _90724 _37164) = (term4210 _90715 _90724 _37164).
Proof. exact (fun_ext (fun t : type625 _90715 _90724 => @lem3527820 _90715 _90724 _37164 t)). Qed.
Lemma lem3527822 {_90715 _90724 : Type'} : (@ex ((_90715 -> Prop) -> (_90715 -> _90724) -> ((_90715 -> Prop) -> Prop) -> _90715 -> Prop)) = (@ex ((_90715 -> Prop) -> (_90715 -> _90724) -> ((_90715 -> Prop) -> Prop) -> _90715 -> Prop)).
Proof. exact (eq_refl (@ex ((_90715 -> Prop) -> (_90715 -> _90724) -> ((_90715 -> Prop) -> Prop) -> _90715 -> Prop))). Qed.
Lemma lem3527823 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) : (term4192 _90715 _90724 _37164) = (term4211 _90715 _90724 _37164).
Proof. exact (MK_COMB (@lem3527822 _90715 _90724) (@lem3527821 _90715 _90724 _37164)). Qed.
Lemma lem3527824 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) : ((term4191 _90715 _90724 _37164) = (term4192 _90715 _90724 _37164)) = ((term4188 _90715 _90724 _37164) = (term4211 _90715 _90724 _37164)).
Proof. exact (MK_COMB (@lem3527812 _90715 _90724 _37164) (@lem3527823 _90715 _90724 _37164)). Qed.
Lemma lem3527825 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) : (term4188 _90715 _90724 _37164) = (term4211 _90715 _90724 _37164).
Proof. exact (EQ_MP (@lem3527824 _90715 _90724 _37164) (@lem3527799 _90715 _90724 _37164)). Qed.
Lemma lem3527827 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) : (term4107 _90715 _90724 _37164) = (term4211 _90715 _90724 _37164).
Proof. exact (TRANS (@lem3527795 _90715 _90724 _37164) (@lem3527825 _90715 _90724 _37164)). Qed.
Lemma lem3527828 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) : (term2095 _90715 _90724 _37164) = (term4211 _90715 _90724 _37164).
Proof. exact (TRANS (@lem3527570 _90715 _90724 _37164) (@lem3527827 _90715 _90724 _37164)). Qed.
Lemma lem3527829 {_90715 _90724 : Type'} (_37164 : type627 _90715 _90724) (h1 : term2095 _90715 _90724 _37164) : term4211 _90715 _90724 _37164.
Proof. exact (EQ_MP (@lem3527828 _90715 _90724 _37164) (@lem3520020 _90715 _90724 _37164 h1)). Qed.
Lemma lem3527832 {_90715 : Type'} (g : type686 _90715) : (term4079 _90715 g) = (g = (@EMPTY (_90715 -> Prop))).
Proof. exact (@lem16933 (g = (@EMPTY (_90715 -> Prop)))). Qed.
Lemma lem3527840 {_90715 A : Type'} (_37165 : type627 _90715 A) (u : _90715 -> Prop) (f : _90715 -> A) (t : _90715 -> Prop) : (term4080 _90715 A _37165 u f t) = (term4081 _90715 A _37165 u f t).
Proof. exact (@lem17045 (@SUBSET _90715 t u) (term2079 _90715 A _37165 u f t)). Qed.
Lemma lem3527842 {_90715 : Type'} (t : _90715 -> Prop) (g : type686 _90715) : (term4082 _90715 t g) = (term4082 _90715 t g).
Proof. exact (eq_refl (term4082 _90715 t g)). Qed.
Lemma lem3527843 {_90715 A : Type'} (g : type686 _90715) (_37165 : type627 _90715 A) (u : _90715 -> Prop) (f : _90715 -> A) (t : _90715 -> Prop) : (term4083 _90715 A g _37165 u f t) = (term4084 _90715 A g _37165 u f t).
Proof. exact (MK_COMB (@lem3527842 _90715 t g) (@lem3527840 _90715 A _37165 u f t)). Qed.
Lemma lem3527844 {_90715 A : Type'} (g : type686 _90715) (_37165 : type627 _90715 A) (u : _90715 -> Prop) (f : _90715 -> A) (t : _90715 -> Prop) : (term4085 _90715 A g _37165 u f t) = (term4083 _90715 A g _37165 u f t).
Proof. exact (@lem17362 (@IN (_90715 -> Prop) t g) (term2080 _90715 A _37165 u f t)). Qed.
Lemma lem3527845 {_90715 A : Type'} (g : type686 _90715) (_37165 : type627 _90715 A) (u : _90715 -> Prop) (f : _90715 -> A) (t : _90715 -> Prop) : (term4085 _90715 A g _37165 u f t) = (term4084 _90715 A g _37165 u f t).
Proof. exact (TRANS (@lem3527844 _90715 A g _37165 u f t) (@lem3527843 _90715 A g _37165 u f t)). Qed.
Lemma lem3527846 {_90715 : Type'} (P : type686 _90715) : (term298 _90715 P) = (term299 _90715 P).
Proof. exact (@lem18392 (_90715 -> Prop) P). Qed.
Lemma lem3527847 {_90715 A : Type'} (g : type686 _90715) (_37165 : type627 _90715 A) (u : _90715 -> Prop) (f : _90715 -> A) : (term4086 _90715 A g _37165 u f) = (term4087 _90715 A g _37165 u f).
Proof. exact (@lem3527846 _90715 (term2082 _90715 A g _37165 u f)). Qed.
Lemma lem3527848 {_90715 A : Type'} (g : type686 _90715) (_37165 : type627 _90715 A) (u : _90715 -> Prop) (f : _90715 -> A) (t : _90715 -> Prop) : (term4088 _90715 A g _37165 u f t) = (term2081 _90715 A g _37165 u f t).
Proof. exact (eq_refl (term4088 _90715 A g _37165 u f t)). Qed.
Lemma lem3527849 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem3527850 {_90715 A : Type'} (g : type686 _90715) (_37165 : type627 _90715 A) (u : _90715 -> Prop) (f : _90715 -> A) (t : _90715 -> Prop) : (term4089 _90715 A g _37165 u f t) = (term4085 _90715 A g _37165 u f t).
Proof. exact (MK_COMB (@lem3527849) (@lem3527848 _90715 A g _37165 u f t)). Qed.
Lemma lem3527851 {_90715 A : Type'} (g : type686 _90715) (_37165 : type627 _90715 A) (u : _90715 -> Prop) (f : _90715 -> A) (t : _90715 -> Prop) : (term4089 _90715 A g _37165 u f t) = (term4084 _90715 A g _37165 u f t).
Proof. exact (TRANS (@lem3527850 _90715 A g _37165 u f t) (@lem3527845 _90715 A g _37165 u f t)). Qed.
Lemma lem3527852 {_90715 A : Type'} (g : type686 _90715) (_37165 : type627 _90715 A) (u : _90715 -> Prop) (f : _90715 -> A) : (term4090 _90715 A g _37165 u f) = (term4091 _90715 A g _37165 u f).
Proof. exact (fun_ext (fun t : _90715 -> Prop => @lem3527851 _90715 A g _37165 u f t)). Qed.
Lemma lem3527853 {_90715 : Type'} : (@ex (_90715 -> Prop)) = (@ex (_90715 -> Prop)).
Proof. exact (eq_refl (@ex (_90715 -> Prop))). Qed.
Lemma lem3527854 {_90715 A : Type'} (g : type686 _90715) (_37165 : type627 _90715 A) (u : _90715 -> Prop) (f : _90715 -> A) : (term4087 _90715 A g _37165 u f) = (term4092 _90715 A g _37165 u f).
Proof. exact (MK_COMB (@lem3527853 _90715) (@lem3527852 _90715 A g _37165 u f)). Qed.
Lemma lem3527855 {_90715 A : Type'} (g : type686 _90715) (_37165 : type627 _90715 A) (u : _90715 -> Prop) (f : _90715 -> A) : (term4086 _90715 A g _37165 u f) = (term4092 _90715 A g _37165 u f).
Proof. exact (TRANS (@lem3527847 _90715 A g _37165 u f) (@lem3527854 _90715 A g _37165 u f)). Qed.
Lemma lem3527856 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem3527857 {_90715 : Type'} (g : type686 _90715) : (term4093 _90715 g) = (term4094 _90715 g).
Proof. exact (MK_COMB (@lem3527856) (@lem3527832 _90715 g)). Qed.
Lemma lem3527858 {_90715 A : Type'} (g : type686 _90715) (_37165 : type627 _90715 A) (u : _90715 -> Prop) (f : _90715 -> A) : (term4095 _90715 A g _37165 u f) = (term4096 _90715 A g _37165 u f).
Proof. exact (MK_COMB (@lem3527857 _90715 g) (@lem3527855 _90715 A g _37165 u f)). Qed.
Lemma lem3527859 {_90715 A : Type'} (g : type686 _90715) (_37165 : type627 _90715 A) (u : _90715 -> Prop) (f : _90715 -> A) : (term4097 _90715 A g _37165 u f) = (term4095 _90715 A g _37165 u f).
Proof. exact (@lem17045 (term40 _90715 g) (term2083 _90715 A g _37165 u f)). Qed.
Lemma lem3527860 {_90715 A : Type'} (g : type686 _90715) (_37165 : type627 _90715 A) (u : _90715 -> Prop) (f : _90715 -> A) : (term4097 _90715 A g _37165 u f) = (term4096 _90715 A g _37165 u f).
Proof. exact (TRANS (@lem3527859 _90715 A g _37165 u f) (@lem3527858 _90715 A g _37165 u f)). Qed.
Lemma lem3527861 {_90715 A : Type'} (f : _90715 -> A) (g : type686 _90715) : ((term49 _90715 A f g) = (term50 _90715 A f g)) = ((term49 _90715 A f g) = (term50 _90715 A f g)).
Proof. exact (eq_refl ((term49 _90715 A f g) = (term50 _90715 A f g))). Qed.
Lemma lem3527862 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem3527863 {_90715 A : Type'} (g : type686 _90715) (_37165 : type627 _90715 A) (u : _90715 -> Prop) (f : _90715 -> A) : (term4098 _90715 A g _37165 u f) = (term4099 _90715 A g _37165 u f).
Proof. exact (MK_COMB (@lem3527862) (@lem3527860 _90715 A g _37165 u f)). Qed.
Lemma lem3527864 {_90715 A : Type'} (_37165 : type627 _90715 A) (u : _90715 -> Prop) (f : _90715 -> A) (g : type686 _90715) : (term4100 _90715 A _37165 u f g) = (term4101 _90715 A _37165 u f g).
Proof. exact (MK_COMB (@lem3527863 _90715 A g _37165 u f) (@lem3527861 _90715 A f g)). Qed.
Lemma lem3527865 {_90715 A : Type'} (_37165 : type627 _90715 A) (u : _90715 -> Prop) (f : _90715 -> A) (g : type686 _90715) : (term2086 _90715 A _37165 u f g) = (term4100 _90715 A _37165 u f g).
Proof. exact (@lem17265 (term2084 _90715 A g _37165 u f) ((term49 _90715 A f g) = (term50 _90715 A f g))). Qed.
Lemma lem3527866 {_90715 A : Type'} (_37165 : type627 _90715 A) (u : _90715 -> Prop) (f : _90715 -> A) (g : type686 _90715) : (term2086 _90715 A _37165 u f g) = (term4101 _90715 A _37165 u f g).
Proof. exact (TRANS (@lem3527865 _90715 A _37165 u f g) (@lem3527864 _90715 A _37165 u f g)). Qed.
Lemma lem3527867 {_90715 A : Type'} (_37165 : type627 _90715 A) (u : _90715 -> Prop) (f : _90715 -> A) : (term2088 _90715 A _37165 u f) = (term4102 _90715 A _37165 u f).
Proof. exact (fun_ext (fun g : type686 _90715 => @lem3527866 _90715 A _37165 u f g)). Qed.
Lemma lem3527868 {_90715 : Type'} : (@all ((_90715 -> Prop) -> Prop)) = (@all ((_90715 -> Prop) -> Prop)).
Proof. exact (eq_refl (@all ((_90715 -> Prop) -> Prop))). Qed.
Lemma lem3527869 {_90715 A : Type'} (_37165 : type627 _90715 A) (u : _90715 -> Prop) (f : _90715 -> A) : (term2089 _90715 A _37165 u f) = (term4103 _90715 A _37165 u f).
Proof. exact (MK_COMB (@lem3527868 _90715) (@lem3527867 _90715 A _37165 u f)). Qed.
Lemma lem3527870 {_90715 A : Type'} (_37165 : type627 _90715 A) (u : _90715 -> Prop) : (term2091 _90715 A _37165 u) = (term4104 _90715 A _37165 u).
Proof. exact (fun_ext (fun f : _90715 -> A => @lem3527869 _90715 A _37165 u f)). Qed.
Lemma lem3527871 {_90715 A : Type'} : (@all (_90715 -> A)) = (@all (_90715 -> A)).
Proof. exact (eq_refl (@all (_90715 -> A))). Qed.
Lemma lem3527872 {_90715 A : Type'} (_37165 : type627 _90715 A) (u : _90715 -> Prop) : (term2092 _90715 A _37165 u) = (term4105 _90715 A _37165 u).
Proof. exact (MK_COMB (@lem3527871 _90715 A) (@lem3527870 _90715 A _37165 u)). Qed.
Lemma lem3527873 {_90715 A : Type'} (_37165 : type627 _90715 A) : (term2094 _90715 A _37165) = (term4106 _90715 A _37165).
Proof. exact (fun_ext (fun u : _90715 -> Prop => @lem3527872 _90715 A _37165 u)). Qed.
Lemma lem3527874 {_90715 : Type'} : (@all (_90715 -> Prop)) = (@all (_90715 -> Prop)).
Proof. exact (eq_refl (@all (_90715 -> Prop))). Qed.
Lemma lem3527875 {_90715 A : Type'} (_37165 : type627 _90715 A) : (term2095 _90715 A _37165) = (term4107 _90715 A _37165).
Proof. exact (MK_COMB (@lem3527874 _90715) (@lem3527873 _90715 A _37165)). Qed.
Lemma lem3527982 {A : Type'} (P : Prop) (Q : A -> Prop) : (term434 A P Q) = (term435 A P Q).
Proof. exact (EQ_MP (@lem18911 A P Q) (@lem18910 A P Q)). Qed.
Lemma lem3527983 {_90715 : Type'} (P : Prop) (Q : type686 _90715) : (term436 _90715 P Q) = (term437 _90715 P Q).
Proof. exact (@lem3527982 (_90715 -> Prop) P Q). Qed.
Lemma lem3527984 {_90715 A : Type'} (g : type686 _90715) (_37165 : type627 _90715 A) (u : _90715 -> Prop) (f : _90715 -> A) : (term4108 _90715 A g _37165 u f) = (term4109 _90715 A g _37165 u f).
Proof. exact (@lem3527983 _90715 (g = (@EMPTY (_90715 -> Prop))) (term4091 _90715 A g _37165 u f)). Qed.
Lemma lem3527985 {_90715 A : Type'} (g : type686 _90715) (_37165 : type627 _90715 A) (u : _90715 -> Prop) (f : _90715 -> A) (t : _90715 -> Prop) : (term4110 _90715 A g _37165 u f t) = (term4084 _90715 A g _37165 u f t).
Proof. exact (eq_refl (term4110 _90715 A g _37165 u f t)). Qed.
Lemma lem3527986 {_90715 A : Type'} (g : type686 _90715) (_37165 : type627 _90715 A) (u : _90715 -> Prop) (f : _90715 -> A) : (term4111 _90715 A g _37165 u f) = (term4091 _90715 A g _37165 u f).
Proof. exact (fun_ext (fun t : _90715 -> Prop => @lem3527985 _90715 A g _37165 u f t)). Qed.
Lemma lem3527987 {_90715 : Type'} : (@ex (_90715 -> Prop)) = (@ex (_90715 -> Prop)).
Proof. exact (eq_refl (@ex (_90715 -> Prop))). Qed.
Lemma lem3527988 {_90715 A : Type'} (g : type686 _90715) (_37165 : type627 _90715 A) (u : _90715 -> Prop) (f : _90715 -> A) : (term4112 _90715 A g _37165 u f) = (term4092 _90715 A g _37165 u f).
Proof. exact (MK_COMB (@lem3527987 _90715) (@lem3527986 _90715 A g _37165 u f)). Qed.
Lemma lem3527989 {_90715 : Type'} (g : type686 _90715) : (term4094 _90715 g) = (term4094 _90715 g).
Proof. exact (eq_refl (term4094 _90715 g)). Qed.
Lemma lem3527990 {_90715 A : Type'} (g : type686 _90715) (_37165 : type627 _90715 A) (u : _90715 -> Prop) (f : _90715 -> A) : (term4108 _90715 A g _37165 u f) = (term4096 _90715 A g _37165 u f).
Proof. exact (MK_COMB (@lem3527989 _90715 g) (@lem3527988 _90715 A g _37165 u f)). Qed.
Lemma lem3527991 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem3527992 {_90715 A : Type'} (g : type686 _90715) (_37165 : type627 _90715 A) (u : _90715 -> Prop) (f : _90715 -> A) : (term4113 _90715 A g _37165 u f) = (term4114 _90715 A g _37165 u f).
Proof. exact (MK_COMB (@lem3527991) (@lem3527990 _90715 A g _37165 u f)). Qed.
Lemma lem3527993 {_90715 A : Type'} (g : type686 _90715) (_37165 : type627 _90715 A) (u : _90715 -> Prop) (f : _90715 -> A) (t : _90715 -> Prop) : (term4110 _90715 A g _37165 u f t) = (term4084 _90715 A g _37165 u f t).
Proof. exact (eq_refl (term4110 _90715 A g _37165 u f t)). Qed.
Lemma lem3527994 {_90715 : Type'} (g : type686 _90715) : (term4094 _90715 g) = (term4094 _90715 g).
Proof. exact (eq_refl (term4094 _90715 g)). Qed.
Lemma lem3527995 {_90715 A : Type'} (g : type686 _90715) (_37165 : type627 _90715 A) (u : _90715 -> Prop) (f : _90715 -> A) (t : _90715 -> Prop) : (term4115 _90715 A g _37165 u f t) = (term4116 _90715 A g _37165 u f t).
Proof. exact (MK_COMB (@lem3527994 _90715 g) (@lem3527993 _90715 A g _37165 u f t)). Qed.
Lemma lem3527996 {_90715 A : Type'} (g : type686 _90715) (_37165 : type627 _90715 A) (u : _90715 -> Prop) (f : _90715 -> A) : (term4117 _90715 A g _37165 u f) = (term4118 _90715 A g _37165 u f).
Proof. exact (fun_ext (fun t : _90715 -> Prop => @lem3527995 _90715 A g _37165 u f t)). Qed.
Lemma lem3527997 {_90715 : Type'} : (@ex (_90715 -> Prop)) = (@ex (_90715 -> Prop)).
Proof. exact (eq_refl (@ex (_90715 -> Prop))). Qed.
Lemma lem3527998 {_90715 A : Type'} (g : type686 _90715) (_37165 : type627 _90715 A) (u : _90715 -> Prop) (f : _90715 -> A) : (term4109 _90715 A g _37165 u f) = (term4119 _90715 A g _37165 u f).
Proof. exact (MK_COMB (@lem3527997 _90715) (@lem3527996 _90715 A g _37165 u f)). Qed.
Lemma lem3527999 {_90715 A : Type'} (g : type686 _90715) (_37165 : type627 _90715 A) (u : _90715 -> Prop) (f : _90715 -> A) : ((term4108 _90715 A g _37165 u f) = (term4109 _90715 A g _37165 u f)) = ((term4096 _90715 A g _37165 u f) = (term4119 _90715 A g _37165 u f)).
Proof. exact (MK_COMB (@lem3527992 _90715 A g _37165 u f) (@lem3527998 _90715 A g _37165 u f)). Qed.
Lemma lem3528000 {_90715 A : Type'} (g : type686 _90715) (_37165 : type627 _90715 A) (u : _90715 -> Prop) (f : _90715 -> A) : (term4096 _90715 A g _37165 u f) = (term4119 _90715 A g _37165 u f).
Proof. exact (EQ_MP (@lem3527999 _90715 A g _37165 u f) (@lem3527984 _90715 A g _37165 u f)). Qed.
Lemma lem3528001 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem3528002 {_90715 A : Type'} (g : type686 _90715) (_37165 : type627 _90715 A) (u : _90715 -> Prop) (f : _90715 -> A) : (term4099 _90715 A g _37165 u f) = (term4120 _90715 A g _37165 u f).
Proof. exact (MK_COMB (@lem3528001) (@lem3528000 _90715 A g _37165 u f)). Qed.
Lemma lem3528003 {_90715 A : Type'} (f : _90715 -> A) (g : type686 _90715) : ((term49 _90715 A f g) = (term50 _90715 A f g)) = ((term49 _90715 A f g) = (term50 _90715 A f g)).
Proof. exact (eq_refl ((term49 _90715 A f g) = (term50 _90715 A f g))). Qed.
Lemma lem3528004 {_90715 A : Type'} (_37165 : type627 _90715 A) (u : _90715 -> Prop) (f : _90715 -> A) (g : type686 _90715) : (term4101 _90715 A _37165 u f g) = (term4121 _90715 A _37165 u f g).
Proof. exact (MK_COMB (@lem3528002 _90715 A g _37165 u f) (@lem3528003 _90715 A f g)). Qed.
Lemma lem3528006 {A : Type'} (P : A -> Prop) (Q : Prop) : (term550 A P Q) = (term551 A P Q).
Proof. exact (EQ_MP (@lem18905 A P Q) (@lem18904 A P Q)). Qed.
Lemma lem3528007 {_90715 : Type'} (P : type686 _90715) (Q : Prop) : (term567 _90715 P Q) = (term568 _90715 P Q).
Proof. exact (@lem3528006 (_90715 -> Prop) P Q). Qed.
Lemma lem3528008 {_90715 A : Type'} (_37165 : type627 _90715 A) (u : _90715 -> Prop) (f : _90715 -> A) (g : type686 _90715) : (term4122 _90715 A _37165 u f g) = (term4123 _90715 A _37165 u f g).
Proof. exact (@lem3528007 _90715 (term4118 _90715 A g _37165 u f) ((term49 _90715 A f g) = (term50 _90715 A f g))). Qed.
Lemma lem3528009 {_90715 A : Type'} (g : type686 _90715) (_37165 : type627 _90715 A) (u : _90715 -> Prop) (f : _90715 -> A) (t : _90715 -> Prop) : (term4124 _90715 A g _37165 u f t) = (term4116 _90715 A g _37165 u f t).
Proof. exact (eq_refl (term4124 _90715 A g _37165 u f t)). Qed.
Lemma lem3528010 {_90715 A : Type'} (g : type686 _90715) (_37165 : type627 _90715 A) (u : _90715 -> Prop) (f : _90715 -> A) : (term4125 _90715 A g _37165 u f) = (term4118 _90715 A g _37165 u f).
Proof. exact (fun_ext (fun t : _90715 -> Prop => @lem3528009 _90715 A g _37165 u f t)). Qed.
Lemma lem3528011 {_90715 : Type'} : (@ex (_90715 -> Prop)) = (@ex (_90715 -> Prop)).
Proof. exact (eq_refl (@ex (_90715 -> Prop))). Qed.
Lemma lem3528012 {_90715 A : Type'} (g : type686 _90715) (_37165 : type627 _90715 A) (u : _90715 -> Prop) (f : _90715 -> A) : (term4126 _90715 A g _37165 u f) = (term4119 _90715 A g _37165 u f).
Proof. exact (MK_COMB (@lem3528011 _90715) (@lem3528010 _90715 A g _37165 u f)). Qed.
Lemma lem3528013 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem3528014 {_90715 A : Type'} (g : type686 _90715) (_37165 : type627 _90715 A) (u : _90715 -> Prop) (f : _90715 -> A) : (term4127 _90715 A g _37165 u f) = (term4120 _90715 A g _37165 u f).
Proof. exact (MK_COMB (@lem3528013) (@lem3528012 _90715 A g _37165 u f)). Qed.
Lemma lem3528015 {_90715 A : Type'} (f : _90715 -> A) (g : type686 _90715) : ((term49 _90715 A f g) = (term50 _90715 A f g)) = ((term49 _90715 A f g) = (term50 _90715 A f g)).
Proof. exact (eq_refl ((term49 _90715 A f g) = (term50 _90715 A f g))). Qed.
Lemma lem3528016 {_90715 A : Type'} (_37165 : type627 _90715 A) (u : _90715 -> Prop) (f : _90715 -> A) (g : type686 _90715) : (term4122 _90715 A _37165 u f g) = (term4121 _90715 A _37165 u f g).
Proof. exact (MK_COMB (@lem3528014 _90715 A g _37165 u f) (@lem3528015 _90715 A f g)). Qed.
Lemma lem3528017 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem3528018 {_90715 A : Type'} (_37165 : type627 _90715 A) (u : _90715 -> Prop) (f : _90715 -> A) (g : type686 _90715) : (term4128 _90715 A _37165 u f g) = (term4129 _90715 A _37165 u f g).
Proof. exact (MK_COMB (@lem3528017) (@lem3528016 _90715 A _37165 u f g)). Qed.
Lemma lem3528019 {_90715 A : Type'} (g : type686 _90715) (_37165 : type627 _90715 A) (u : _90715 -> Prop) (f : _90715 -> A) (t : _90715 -> Prop) : (term4124 _90715 A g _37165 u f t) = (term4116 _90715 A g _37165 u f t).
Proof. exact (eq_refl (term4124 _90715 A g _37165 u f t)). Qed.
Lemma lem3528020 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem3528021 {_90715 A : Type'} (g : type686 _90715) (_37165 : type627 _90715 A) (u : _90715 -> Prop) (f : _90715 -> A) (t : _90715 -> Prop) : (term4130 _90715 A g _37165 u f t) = (term4131 _90715 A g _37165 u f t).
Proof. exact (MK_COMB (@lem3528020) (@lem3528019 _90715 A g _37165 u f t)). Qed.
Lemma lem3528022 {_90715 A : Type'} (f : _90715 -> A) (g : type686 _90715) : ((term49 _90715 A f g) = (term50 _90715 A f g)) = ((term49 _90715 A f g) = (term50 _90715 A f g)).
Proof. exact (eq_refl ((term49 _90715 A f g) = (term50 _90715 A f g))). Qed.
Lemma lem3528023 {_90715 A : Type'} (_37165 : type627 _90715 A) (u : _90715 -> Prop) (t : _90715 -> Prop) (f : _90715 -> A) (g : type686 _90715) : (term4132 _90715 A _37165 u t f g) = (term4133 _90715 A _37165 u t f g).
Proof. exact (MK_COMB (@lem3528021 _90715 A g _37165 u f t) (@lem3528022 _90715 A f g)). Qed.
Lemma lem3528024 {_90715 A : Type'} (_37165 : type627 _90715 A) (u : _90715 -> Prop) (f : _90715 -> A) (g : type686 _90715) : (term4134 _90715 A _37165 u f g) = (term4135 _90715 A _37165 u f g).
Proof. exact (fun_ext (fun t : _90715 -> Prop => @lem3528023 _90715 A _37165 u t f g)). Qed.
Lemma lem3528025 {_90715 : Type'} : (@ex (_90715 -> Prop)) = (@ex (_90715 -> Prop)).
Proof. exact (eq_refl (@ex (_90715 -> Prop))). Qed.
Lemma lem3528026 {_90715 A : Type'} (_37165 : type627 _90715 A) (u : _90715 -> Prop) (f : _90715 -> A) (g : type686 _90715) : (term4123 _90715 A _37165 u f g) = (term4136 _90715 A _37165 u f g).
Proof. exact (MK_COMB (@lem3528025 _90715) (@lem3528024 _90715 A _37165 u f g)). Qed.
Lemma lem3528027 {_90715 A : Type'} (_37165 : type627 _90715 A) (u : _90715 -> Prop) (f : _90715 -> A) (g : type686 _90715) : ((term4122 _90715 A _37165 u f g) = (term4123 _90715 A _37165 u f g)) = ((term4121 _90715 A _37165 u f g) = (term4136 _90715 A _37165 u f g)).
Proof. exact (MK_COMB (@lem3528018 _90715 A _37165 u f g) (@lem3528026 _90715 A _37165 u f g)). Qed.
Lemma lem3528028 {_90715 A : Type'} (_37165 : type627 _90715 A) (u : _90715 -> Prop) (f : _90715 -> A) (g : type686 _90715) : (term4121 _90715 A _37165 u f g) = (term4136 _90715 A _37165 u f g).
Proof. exact (EQ_MP (@lem3528027 _90715 A _37165 u f g) (@lem3528008 _90715 A _37165 u f g)). Qed.
Lemma lem3528029 {_90715 A : Type'} (_37165 : type627 _90715 A) (u : _90715 -> Prop) (f : _90715 -> A) (g : type686 _90715) : (term4101 _90715 A _37165 u f g) = (term4136 _90715 A _37165 u f g).
Proof. exact (TRANS (@lem3528004 _90715 A _37165 u f g) (@lem3528028 _90715 A _37165 u f g)). Qed.
Lemma lem3528030 {_90715 A : Type'} (_37165 : type627 _90715 A) (u : _90715 -> Prop) (f : _90715 -> A) : (term4102 _90715 A _37165 u f) = (term4137 _90715 A _37165 u f).
Proof. exact (fun_ext (fun g : type686 _90715 => @lem3528029 _90715 A _37165 u f g)). Qed.
Lemma lem3528031 {_90715 : Type'} : (@all ((_90715 -> Prop) -> Prop)) = (@all ((_90715 -> Prop) -> Prop)).
Proof. exact (eq_refl (@all ((_90715 -> Prop) -> Prop))). Qed.
Lemma lem3528032 {_90715 A : Type'} (_37165 : type627 _90715 A) (u : _90715 -> Prop) (f : _90715 -> A) : (term4103 _90715 A _37165 u f) = (term4138 _90715 A _37165 u f).
Proof. exact (MK_COMB (@lem3528031 _90715) (@lem3528030 _90715 A _37165 u f)). Qed.
Lemma lem3528034 {A B : Type'} (P : type1413 A B) : (term453 A B P) = (term454 A B P).
Proof. exact (EQ_MP (@lem18899 A B P) (@lem18898 A B P)). Qed.
Lemma lem3528035 {_90715 : Type'} (P : type174 _90715) : (term4139 _90715 P) = (term4140 _90715 P).
Proof. exact (@lem3528034 (type686 _90715) (_90715 -> Prop) P). Qed.
Lemma lem3528036 {_90715 A : Type'} (_37165 : type627 _90715 A) (u : _90715 -> Prop) (f : _90715 -> A) : (term4141 _90715 A _37165 u f) = (term4142 _90715 A _37165 u f).
Proof. exact (@lem3528035 _90715 (term4143 _90715 A _37165 u f)). Qed.
Lemma lem3528037 {_90715 A : Type'} (_37165 : type627 _90715 A) (u : _90715 -> Prop) (f : _90715 -> A) (g : type686 _90715) : (term4144 _90715 A _37165 u f g) = (term4135 _90715 A _37165 u f g).
Proof. exact (eq_refl (term4144 _90715 A _37165 u f g)). Qed.
Lemma lem3528038 {_90715 : Type'} (t : _90715 -> Prop) : t = t.
Proof. exact (eq_refl t). Qed.
Lemma lem3528039 {_90715 A : Type'} (_37165 : type627 _90715 A) (u : _90715 -> Prop) (f : _90715 -> A) (g : type686 _90715) (t : _90715 -> Prop) : (term4145 _90715 A _37165 u f g t) = (term4146 _90715 A _37165 u f g t).
Proof. exact (MK_COMB (@lem3528037 _90715 A _37165 u f g) (@lem3528038 _90715 t)). Qed.
Lemma lem3528040 {_90715 A : Type'} (_37165 : type627 _90715 A) (u : _90715 -> Prop) (t : _90715 -> Prop) (f : _90715 -> A) (g : type686 _90715) : (term4146 _90715 A _37165 u f g t) = (term4133 _90715 A _37165 u t f g).
Proof. exact (eq_refl (term4146 _90715 A _37165 u f g t)). Qed.
Lemma lem3528041 {_90715 A : Type'} (_37165 : type627 _90715 A) (u : _90715 -> Prop) (t : _90715 -> Prop) (f : _90715 -> A) (g : type686 _90715) : (term4145 _90715 A _37165 u f g t) = (term4133 _90715 A _37165 u t f g).
Proof. exact (TRANS (@lem3528039 _90715 A _37165 u f g t) (@lem3528040 _90715 A _37165 u t f g)). Qed.
Lemma lem3528042 {_90715 A : Type'} (_37165 : type627 _90715 A) (u : _90715 -> Prop) (f : _90715 -> A) (g : type686 _90715) : (term4147 _90715 A _37165 u f g) = (term4135 _90715 A _37165 u f g).
Proof. exact (fun_ext (fun t : _90715 -> Prop => @lem3528041 _90715 A _37165 u t f g)). Qed.
Lemma lem3528043 {_90715 : Type'} : (@ex (_90715 -> Prop)) = (@ex (_90715 -> Prop)).
Proof. exact (eq_refl (@ex (_90715 -> Prop))). Qed.
Lemma lem3528044 {_90715 A : Type'} (_37165 : type627 _90715 A) (u : _90715 -> Prop) (f : _90715 -> A) (g : type686 _90715) : (term4148 _90715 A _37165 u f g) = (term4136 _90715 A _37165 u f g).
Proof. exact (MK_COMB (@lem3528043 _90715) (@lem3528042 _90715 A _37165 u f g)). Qed.
Lemma lem3528045 {_90715 A : Type'} (_37165 : type627 _90715 A) (u : _90715 -> Prop) (f : _90715 -> A) : (term4149 _90715 A _37165 u f) = (term4137 _90715 A _37165 u f).
Proof. exact (fun_ext (fun g : type686 _90715 => @lem3528044 _90715 A _37165 u f g)). Qed.
Lemma lem3528046 {_90715 : Type'} : (@all ((_90715 -> Prop) -> Prop)) = (@all ((_90715 -> Prop) -> Prop)).
Proof. exact (eq_refl (@all ((_90715 -> Prop) -> Prop))). Qed.
Lemma lem3528047 {_90715 A : Type'} (_37165 : type627 _90715 A) (u : _90715 -> Prop) (f : _90715 -> A) : (term4141 _90715 A _37165 u f) = (term4138 _90715 A _37165 u f).
Proof. exact (MK_COMB (@lem3528046 _90715) (@lem3528045 _90715 A _37165 u f)). Qed.
Lemma lem3528048 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem3528049 {_90715 A : Type'} (_37165 : type627 _90715 A) (u : _90715 -> Prop) (f : _90715 -> A) : (term4150 _90715 A _37165 u f) = (term4151 _90715 A _37165 u f).
Proof. exact (MK_COMB (@lem3528048) (@lem3528047 _90715 A _37165 u f)). Qed.
Lemma lem3528050 {_90715 A : Type'} (_37165 : type627 _90715 A) (u : _90715 -> Prop) (f : _90715 -> A) (g : type686 _90715) : (term4144 _90715 A _37165 u f g) = (term4135 _90715 A _37165 u f g).
Proof. exact (eq_refl (term4144 _90715 A _37165 u f g)). Qed.
Lemma lem3528051 {_90715 : Type'} (t : type178 _90715) (g : type686 _90715) : (t g) = (t g).
Proof. exact (eq_refl (t g)). Qed.
Lemma lem3528052 {_90715 A : Type'} (_37165 : type627 _90715 A) (u : _90715 -> Prop) (f : _90715 -> A) (t : type178 _90715) (g : type686 _90715) : (term4152 _90715 A _37165 u f t g) = (term4153 _90715 A _37165 u f t g).
Proof. exact (MK_COMB (@lem3528050 _90715 A _37165 u f g) (@lem3528051 _90715 t g)). Qed.
Lemma lem3528053 {_90715 A : Type'} (_37165 : type627 _90715 A) (u : _90715 -> Prop) (t : type178 _90715) (f : _90715 -> A) (g : type686 _90715) : (term4153 _90715 A _37165 u f t g) = (term4154 _90715 A _37165 u t f g).
Proof. exact (eq_refl (term4153 _90715 A _37165 u f t g)). Qed.
Lemma lem3528054 {_90715 A : Type'} (_37165 : type627 _90715 A) (u : _90715 -> Prop) (t : type178 _90715) (f : _90715 -> A) (g : type686 _90715) : (term4152 _90715 A _37165 u f t g) = (term4154 _90715 A _37165 u t f g).
Proof. exact (TRANS (@lem3528052 _90715 A _37165 u f t g) (@lem3528053 _90715 A _37165 u t f g)). Qed.
Lemma lem3528055 {_90715 A : Type'} (_37165 : type627 _90715 A) (u : _90715 -> Prop) (t : type178 _90715) (f : _90715 -> A) : (term4155 _90715 A _37165 u f t) = (term4156 _90715 A _37165 u t f).
Proof. exact (fun_ext (fun g : type686 _90715 => @lem3528054 _90715 A _37165 u t f g)). Qed.
Lemma lem3528056 {_90715 : Type'} : (@all ((_90715 -> Prop) -> Prop)) = (@all ((_90715 -> Prop) -> Prop)).
Proof. exact (eq_refl (@all ((_90715 -> Prop) -> Prop))). Qed.
Lemma lem3528057 {_90715 A : Type'} (_37165 : type627 _90715 A) (u : _90715 -> Prop) (t : type178 _90715) (f : _90715 -> A) : (term4157 _90715 A _37165 u f t) = (term4158 _90715 A _37165 u t f).
Proof. exact (MK_COMB (@lem3528056 _90715) (@lem3528055 _90715 A _37165 u t f)). Qed.
Lemma lem3528058 {_90715 A : Type'} (_37165 : type627 _90715 A) (u : _90715 -> Prop) (f : _90715 -> A) : (term4159 _90715 A _37165 u f) = (term4160 _90715 A _37165 u f).
Proof. exact (fun_ext (fun t : type178 _90715 => @lem3528057 _90715 A _37165 u t f)). Qed.
Lemma lem3528059 {_90715 : Type'} : (@ex (((_90715 -> Prop) -> Prop) -> _90715 -> Prop)) = (@ex (((_90715 -> Prop) -> Prop) -> _90715 -> Prop)).
Proof. exact (eq_refl (@ex (((_90715 -> Prop) -> Prop) -> _90715 -> Prop))). Qed.
Lemma lem3528060 {_90715 A : Type'} (_37165 : type627 _90715 A) (u : _90715 -> Prop) (f : _90715 -> A) : (term4142 _90715 A _37165 u f) = (term4161 _90715 A _37165 u f).
Proof. exact (MK_COMB (@lem3528059 _90715) (@lem3528058 _90715 A _37165 u f)). Qed.
Lemma lem3528061 {_90715 A : Type'} (_37165 : type627 _90715 A) (u : _90715 -> Prop) (f : _90715 -> A) : ((term4141 _90715 A _37165 u f) = (term4142 _90715 A _37165 u f)) = ((term4138 _90715 A _37165 u f) = (term4161 _90715 A _37165 u f)).
Proof. exact (MK_COMB (@lem3528049 _90715 A _37165 u f) (@lem3528060 _90715 A _37165 u f)). Qed.
Lemma lem3528062 {_90715 A : Type'} (_37165 : type627 _90715 A) (u : _90715 -> Prop) (f : _90715 -> A) : (term4138 _90715 A _37165 u f) = (term4161 _90715 A _37165 u f).
Proof. exact (EQ_MP (@lem3528061 _90715 A _37165 u f) (@lem3528036 _90715 A _37165 u f)). Qed.
Lemma lem3528063 {_90715 A : Type'} (_37165 : type627 _90715 A) (u : _90715 -> Prop) (f : _90715 -> A) : (term4103 _90715 A _37165 u f) = (term4161 _90715 A _37165 u f).
Proof. exact (TRANS (@lem3528032 _90715 A _37165 u f) (@lem3528062 _90715 A _37165 u f)). Qed.
Lemma lem3528064 {_90715 A : Type'} (_37165 : type627 _90715 A) (u : _90715 -> Prop) : (term4104 _90715 A _37165 u) = (term4162 _90715 A _37165 u).
Proof. exact (fun_ext (fun f : _90715 -> A => @lem3528063 _90715 A _37165 u f)). Qed.
Lemma lem3528065 {_90715 A : Type'} : (@all (_90715 -> A)) = (@all (_90715 -> A)).
Proof. exact (eq_refl (@all (_90715 -> A))). Qed.
Lemma lem3528066 {_90715 A : Type'} (_37165 : type627 _90715 A) (u : _90715 -> Prop) : (term4105 _90715 A _37165 u) = (term4163 _90715 A _37165 u).
Proof. exact (MK_COMB (@lem3528065 _90715 A) (@lem3528064 _90715 A _37165 u)). Qed.
Lemma lem3528068 {A B : Type'} (P : type1413 A B) : (term453 A B P) = (term454 A B P).
Proof. exact (EQ_MP (@lem18899 A B P) (@lem18898 A B P)). Qed.
Lemma lem3528069 {_90715 A : Type'} (P : type489 _90715 A) : (term4164 _90715 A P) = (term4165 _90715 A P).
Proof. exact (@lem3528068 (_90715 -> A) (type178 _90715) P). Qed.
Lemma lem3528070 {_90715 A : Type'} (_37165 : type627 _90715 A) (u : _90715 -> Prop) : (term4166 _90715 A _37165 u) = (term4167 _90715 A _37165 u).
Proof. exact (@lem3528069 _90715 A (term4168 _90715 A _37165 u)). Qed.
Lemma lem3528071 {_90715 A : Type'} (_37165 : type627 _90715 A) (u : _90715 -> Prop) (f : _90715 -> A) : (term4169 _90715 A _37165 u f) = (term4160 _90715 A _37165 u f).
Proof. exact (eq_refl (term4169 _90715 A _37165 u f)). Qed.
Lemma lem3528072 {_90715 : Type'} (t : type178 _90715) : t = t.
Proof. exact (eq_refl t). Qed.
Lemma lem3528073 {_90715 A : Type'} (_37165 : type627 _90715 A) (u : _90715 -> Prop) (f : _90715 -> A) (t : type178 _90715) : (term4170 _90715 A _37165 u f t) = (term4171 _90715 A _37165 u f t).
Proof. exact (MK_COMB (@lem3528071 _90715 A _37165 u f) (@lem3528072 _90715 t)). Qed.
Lemma lem3528074 {_90715 A : Type'} (_37165 : type627 _90715 A) (u : _90715 -> Prop) (t : type178 _90715) (f : _90715 -> A) : (term4171 _90715 A _37165 u f t) = (term4158 _90715 A _37165 u t f).
Proof. exact (eq_refl (term4171 _90715 A _37165 u f t)). Qed.
Lemma lem3528075 {_90715 A : Type'} (_37165 : type627 _90715 A) (u : _90715 -> Prop) (t : type178 _90715) (f : _90715 -> A) : (term4170 _90715 A _37165 u f t) = (term4158 _90715 A _37165 u t f).
Proof. exact (TRANS (@lem3528073 _90715 A _37165 u f t) (@lem3528074 _90715 A _37165 u t f)). Qed.
Lemma lem3528076 {_90715 A : Type'} (_37165 : type627 _90715 A) (u : _90715 -> Prop) (f : _90715 -> A) : (term4172 _90715 A _37165 u f) = (term4160 _90715 A _37165 u f).
Proof. exact (fun_ext (fun t : type178 _90715 => @lem3528075 _90715 A _37165 u t f)). Qed.
Lemma lem3528077 {_90715 : Type'} : (@ex (((_90715 -> Prop) -> Prop) -> _90715 -> Prop)) = (@ex (((_90715 -> Prop) -> Prop) -> _90715 -> Prop)).
Proof. exact (eq_refl (@ex (((_90715 -> Prop) -> Prop) -> _90715 -> Prop))). Qed.
Lemma lem3528078 {_90715 A : Type'} (_37165 : type627 _90715 A) (u : _90715 -> Prop) (f : _90715 -> A) : (term4173 _90715 A _37165 u f) = (term4161 _90715 A _37165 u f).
Proof. exact (MK_COMB (@lem3528077 _90715) (@lem3528076 _90715 A _37165 u f)). Qed.
Lemma lem3528079 {_90715 A : Type'} (_37165 : type627 _90715 A) (u : _90715 -> Prop) : (term4174 _90715 A _37165 u) = (term4162 _90715 A _37165 u).
Proof. exact (fun_ext (fun f : _90715 -> A => @lem3528078 _90715 A _37165 u f)). Qed.
Lemma lem3528080 {_90715 A : Type'} : (@all (_90715 -> A)) = (@all (_90715 -> A)).
Proof. exact (eq_refl (@all (_90715 -> A))). Qed.
Lemma lem3528081 {_90715 A : Type'} (_37165 : type627 _90715 A) (u : _90715 -> Prop) : (term4166 _90715 A _37165 u) = (term4163 _90715 A _37165 u).
Proof. exact (MK_COMB (@lem3528080 _90715 A) (@lem3528079 _90715 A _37165 u)). Qed.
Lemma lem3528082 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem3528083 {_90715 A : Type'} (_37165 : type627 _90715 A) (u : _90715 -> Prop) : (term4175 _90715 A _37165 u) = (term4176 _90715 A _37165 u).
Proof. exact (MK_COMB (@lem3528082) (@lem3528081 _90715 A _37165 u)). Qed.
Lemma lem3528084 {_90715 A : Type'} (_37165 : type627 _90715 A) (u : _90715 -> Prop) (f : _90715 -> A) : (term4169 _90715 A _37165 u f) = (term4160 _90715 A _37165 u f).
Proof. exact (eq_refl (term4169 _90715 A _37165 u f)). Qed.
Lemma lem3528085 {_90715 A : Type'} (t : type504 _90715 A) (f : _90715 -> A) : (t f) = (t f).
Proof. exact (eq_refl (t f)). Qed.
Lemma lem3528086 {_90715 A : Type'} (_37165 : type627 _90715 A) (u : _90715 -> Prop) (t : type504 _90715 A) (f : _90715 -> A) : (term4177 _90715 A _37165 u t f) = (term4178 _90715 A _37165 u t f).
Proof. exact (MK_COMB (@lem3528084 _90715 A _37165 u f) (@lem3528085 _90715 A t f)). Qed.
Lemma lem3528087 {_90715 A : Type'} (_37165 : type627 _90715 A) (u : _90715 -> Prop) (t : type504 _90715 A) (f : _90715 -> A) : (term4178 _90715 A _37165 u t f) = (term4179 _90715 A _37165 u t f).
Proof. exact (eq_refl (term4178 _90715 A _37165 u t f)). Qed.
Lemma lem3528088 {_90715 A : Type'} (_37165 : type627 _90715 A) (u : _90715 -> Prop) (t : type504 _90715 A) (f : _90715 -> A) : (term4177 _90715 A _37165 u t f) = (term4179 _90715 A _37165 u t f).
Proof. exact (TRANS (@lem3528086 _90715 A _37165 u t f) (@lem3528087 _90715 A _37165 u t f)). Qed.
Lemma lem3528089 {_90715 A : Type'} (_37165 : type627 _90715 A) (u : _90715 -> Prop) (t : type504 _90715 A) : (term4180 _90715 A _37165 u t) = (term4181 _90715 A _37165 u t).
Proof. exact (fun_ext (fun f : _90715 -> A => @lem3528088 _90715 A _37165 u t f)). Qed.
Lemma lem3528090 {_90715 A : Type'} : (@all (_90715 -> A)) = (@all (_90715 -> A)).
Proof. exact (eq_refl (@all (_90715 -> A))). Qed.
Lemma lem3528091 {_90715 A : Type'} (_37165 : type627 _90715 A) (u : _90715 -> Prop) (t : type504 _90715 A) : (term4182 _90715 A _37165 u t) = (term4183 _90715 A _37165 u t).
Proof. exact (MK_COMB (@lem3528090 _90715 A) (@lem3528089 _90715 A _37165 u t)). Qed.
Lemma lem3528092 {_90715 A : Type'} (_37165 : type627 _90715 A) (u : _90715 -> Prop) : (term4184 _90715 A _37165 u) = (term4185 _90715 A _37165 u).
Proof. exact (fun_ext (fun t : type504 _90715 A => @lem3528091 _90715 A _37165 u t)). Qed.
Lemma lem3528093 {_90715 A : Type'} : (@ex ((_90715 -> A) -> ((_90715 -> Prop) -> Prop) -> _90715 -> Prop)) = (@ex ((_90715 -> A) -> ((_90715 -> Prop) -> Prop) -> _90715 -> Prop)).
Proof. exact (eq_refl (@ex ((_90715 -> A) -> ((_90715 -> Prop) -> Prop) -> _90715 -> Prop))). Qed.
Lemma lem3528094 {_90715 A : Type'} (_37165 : type627 _90715 A) (u : _90715 -> Prop) : (term4167 _90715 A _37165 u) = (term4186 _90715 A _37165 u).
Proof. exact (MK_COMB (@lem3528093 _90715 A) (@lem3528092 _90715 A _37165 u)). Qed.
Lemma lem3528095 {_90715 A : Type'} (_37165 : type627 _90715 A) (u : _90715 -> Prop) : ((term4166 _90715 A _37165 u) = (term4167 _90715 A _37165 u)) = ((term4163 _90715 A _37165 u) = (term4186 _90715 A _37165 u)).
Proof. exact (MK_COMB (@lem3528083 _90715 A _37165 u) (@lem3528094 _90715 A _37165 u)). Qed.
Lemma lem3528096 {_90715 A : Type'} (_37165 : type627 _90715 A) (u : _90715 -> Prop) : (term4163 _90715 A _37165 u) = (term4186 _90715 A _37165 u).
Proof. exact (EQ_MP (@lem3528095 _90715 A _37165 u) (@lem3528070 _90715 A _37165 u)). Qed.
Lemma lem3528097 {_90715 A : Type'} (_37165 : type627 _90715 A) (u : _90715 -> Prop) : (term4105 _90715 A _37165 u) = (term4186 _90715 A _37165 u).
Proof. exact (TRANS (@lem3528066 _90715 A _37165 u) (@lem3528096 _90715 A _37165 u)). Qed.
Lemma lem3528098 {_90715 A : Type'} (_37165 : type627 _90715 A) : (term4106 _90715 A _37165) = (term4187 _90715 A _37165).
Proof. exact (fun_ext (fun u : _90715 -> Prop => @lem3528097 _90715 A _37165 u)). Qed.
Lemma lem3528099 {_90715 : Type'} : (@all (_90715 -> Prop)) = (@all (_90715 -> Prop)).
Proof. exact (eq_refl (@all (_90715 -> Prop))). Qed.
Lemma lem3528100 {_90715 A : Type'} (_37165 : type627 _90715 A) : (term4107 _90715 A _37165) = (term4188 _90715 A _37165).
Proof. exact (MK_COMB (@lem3528099 _90715) (@lem3528098 _90715 A _37165)). Qed.
Lemma lem3528102 {A B : Type'} (P : type1413 A B) : (term453 A B P) = (term454 A B P).
Proof. exact (EQ_MP (@lem18899 A B P) (@lem18898 A B P)). Qed.
Lemma lem3528103 {_90715 A : Type'} (P : type588 _90715 A) : (term4189 _90715 A P) = (term4190 _90715 A P).
Proof. exact (@lem3528102 (_90715 -> Prop) (type504 _90715 A) P). Qed.
Lemma lem3528104 {_90715 A : Type'} (_37165 : type627 _90715 A) : (term4191 _90715 A _37165) = (term4192 _90715 A _37165).
Proof. exact (@lem3528103 _90715 A (term4193 _90715 A _37165)). Qed.
Lemma lem3528105 {_90715 A : Type'} (_37165 : type627 _90715 A) (u : _90715 -> Prop) : (term4194 _90715 A _37165 u) = (term4185 _90715 A _37165 u).
Proof. exact (eq_refl (term4194 _90715 A _37165 u)). Qed.
Lemma lem3528106 {_90715 A : Type'} (t : type504 _90715 A) : t = t.
Proof. exact (eq_refl t). Qed.
Lemma lem3528107 {_90715 A : Type'} (_37165 : type627 _90715 A) (u : _90715 -> Prop) (t : type504 _90715 A) : (term4195 _90715 A _37165 u t) = (term4196 _90715 A _37165 u t).
Proof. exact (MK_COMB (@lem3528105 _90715 A _37165 u) (@lem3528106 _90715 A t)). Qed.
Lemma lem3528108 {_90715 A : Type'} (_37165 : type627 _90715 A) (u : _90715 -> Prop) (t : type504 _90715 A) : (term4196 _90715 A _37165 u t) = (term4183 _90715 A _37165 u t).
Proof. exact (eq_refl (term4196 _90715 A _37165 u t)). Qed.
Lemma lem3528109 {_90715 A : Type'} (_37165 : type627 _90715 A) (u : _90715 -> Prop) (t : type504 _90715 A) : (term4195 _90715 A _37165 u t) = (term4183 _90715 A _37165 u t).
Proof. exact (TRANS (@lem3528107 _90715 A _37165 u t) (@lem3528108 _90715 A _37165 u t)). Qed.
Lemma lem3528110 {_90715 A : Type'} (_37165 : type627 _90715 A) (u : _90715 -> Prop) : (term4197 _90715 A _37165 u) = (term4185 _90715 A _37165 u).
Proof. exact (fun_ext (fun t : type504 _90715 A => @lem3528109 _90715 A _37165 u t)). Qed.
Lemma lem3528111 {_90715 A : Type'} : (@ex ((_90715 -> A) -> ((_90715 -> Prop) -> Prop) -> _90715 -> Prop)) = (@ex ((_90715 -> A) -> ((_90715 -> Prop) -> Prop) -> _90715 -> Prop)).
Proof. exact (eq_refl (@ex ((_90715 -> A) -> ((_90715 -> Prop) -> Prop) -> _90715 -> Prop))). Qed.
Lemma lem3528112 {_90715 A : Type'} (_37165 : type627 _90715 A) (u : _90715 -> Prop) : (term4198 _90715 A _37165 u) = (term4186 _90715 A _37165 u).
Proof. exact (MK_COMB (@lem3528111 _90715 A) (@lem3528110 _90715 A _37165 u)). Qed.
Lemma lem3528113 {_90715 A : Type'} (_37165 : type627 _90715 A) : (term4199 _90715 A _37165) = (term4187 _90715 A _37165).
Proof. exact (fun_ext (fun u : _90715 -> Prop => @lem3528112 _90715 A _37165 u)). Qed.
Lemma lem3528114 {_90715 : Type'} : (@all (_90715 -> Prop)) = (@all (_90715 -> Prop)).
Proof. exact (eq_refl (@all (_90715 -> Prop))). Qed.
Lemma lem3528115 {_90715 A : Type'} (_37165 : type627 _90715 A) : (term4191 _90715 A _37165) = (term4188 _90715 A _37165).
Proof. exact (MK_COMB (@lem3528114 _90715) (@lem3528113 _90715 A _37165)). Qed.
Lemma lem3528116 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem3528117 {_90715 A : Type'} (_37165 : type627 _90715 A) : (term4200 _90715 A _37165) = (term4201 _90715 A _37165).
Proof. exact (MK_COMB (@lem3528116) (@lem3528115 _90715 A _37165)). Qed.
Lemma lem3528118 {_90715 A : Type'} (_37165 : type627 _90715 A) (u : _90715 -> Prop) : (term4194 _90715 A _37165 u) = (term4185 _90715 A _37165 u).
Proof. exact (eq_refl (term4194 _90715 A _37165 u)). Qed.
Lemma lem3528119 {_90715 A : Type'} (t : type625 _90715 A) (u : _90715 -> Prop) : (t u) = (t u).
Proof. exact (eq_refl (t u)). Qed.
Lemma lem3528120 {_90715 A : Type'} (_37165 : type627 _90715 A) (t : type625 _90715 A) (u : _90715 -> Prop) : (term4202 _90715 A _37165 t u) = (term4203 _90715 A _37165 t u).
Proof. exact (MK_COMB (@lem3528118 _90715 A _37165 u) (@lem3528119 _90715 A t u)). Qed.
Lemma lem3528121 {_90715 A : Type'} (_37165 : type627 _90715 A) (t : type625 _90715 A) (u : _90715 -> Prop) : (term4203 _90715 A _37165 t u) = (term4204 _90715 A _37165 t u).
Proof. exact (eq_refl (term4203 _90715 A _37165 t u)). Qed.
Lemma lem3528122 {_90715 A : Type'} (_37165 : type627 _90715 A) (t : type625 _90715 A) (u : _90715 -> Prop) : (term4202 _90715 A _37165 t u) = (term4204 _90715 A _37165 t u).
Proof. exact (TRANS (@lem3528120 _90715 A _37165 t u) (@lem3528121 _90715 A _37165 t u)). Qed.
Lemma lem3528123 {_90715 A : Type'} (_37165 : type627 _90715 A) (t : type625 _90715 A) : (term4205 _90715 A _37165 t) = (term4206 _90715 A _37165 t).
Proof. exact (fun_ext (fun u : _90715 -> Prop => @lem3528122 _90715 A _37165 t u)). Qed.
Lemma lem3528124 {_90715 : Type'} : (@all (_90715 -> Prop)) = (@all (_90715 -> Prop)).
Proof. exact (eq_refl (@all (_90715 -> Prop))). Qed.
Lemma lem3528125 {_90715 A : Type'} (_37165 : type627 _90715 A) (t : type625 _90715 A) : (term4207 _90715 A _37165 t) = (term4208 _90715 A _37165 t).
Proof. exact (MK_COMB (@lem3528124 _90715) (@lem3528123 _90715 A _37165 t)). Qed.
Lemma lem3528126 {_90715 A : Type'} (_37165 : type627 _90715 A) : (term4209 _90715 A _37165) = (term4210 _90715 A _37165).
Proof. exact (fun_ext (fun t : type625 _90715 A => @lem3528125 _90715 A _37165 t)). Qed.
Lemma lem3528127 {_90715 A : Type'} : (@ex ((_90715 -> Prop) -> (_90715 -> A) -> ((_90715 -> Prop) -> Prop) -> _90715 -> Prop)) = (@ex ((_90715 -> Prop) -> (_90715 -> A) -> ((_90715 -> Prop) -> Prop) -> _90715 -> Prop)).
Proof. exact (eq_refl (@ex ((_90715 -> Prop) -> (_90715 -> A) -> ((_90715 -> Prop) -> Prop) -> _90715 -> Prop))). Qed.
Lemma lem3528128 {_90715 A : Type'} (_37165 : type627 _90715 A) : (term4192 _90715 A _37165) = (term4211 _90715 A _37165).
Proof. exact (MK_COMB (@lem3528127 _90715 A) (@lem3528126 _90715 A _37165)). Qed.
Lemma lem3528129 {_90715 A : Type'} (_37165 : type627 _90715 A) : ((term4191 _90715 A _37165) = (term4192 _90715 A _37165)) = ((term4188 _90715 A _37165) = (term4211 _90715 A _37165)).
Proof. exact (MK_COMB (@lem3528117 _90715 A _37165) (@lem3528128 _90715 A _37165)). Qed.
Lemma lem3528130 {_90715 A : Type'} (_37165 : type627 _90715 A) : (term4188 _90715 A _37165) = (term4211 _90715 A _37165).
Proof. exact (EQ_MP (@lem3528129 _90715 A _37165) (@lem3528104 _90715 A _37165)). Qed.
Lemma lem3528132 {_90715 A : Type'} (_37165 : type627 _90715 A) : (term4107 _90715 A _37165) = (term4211 _90715 A _37165).
Proof. exact (TRANS (@lem3528100 _90715 A _37165) (@lem3528130 _90715 A _37165)). Qed.
Lemma lem3528133 {_90715 A : Type'} (_37165 : type627 _90715 A) : (term2095 _90715 A _37165) = (term4211 _90715 A _37165).
Proof. exact (TRANS (@lem3527875 _90715 A _37165) (@lem3528132 _90715 A _37165)). Qed.
Lemma lem3528134 {_90715 A : Type'} (_37165 : type627 _90715 A) (h1 : term2095 _90715 A _37165) : term4211 _90715 A _37165.
Proof. exact (EQ_MP (@lem3528133 _90715 A _37165) (@lem3520021 _90715 A _37165 h1)). Qed.
Lemma lem3528137 {_90715 : Type'} (g : type686 _90715) : (term4079 _90715 g) = (g = (@EMPTY (_90715 -> Prop))).
Proof. exact (@lem16933 (g = (@EMPTY (_90715 -> Prop)))). Qed.
Lemma lem3528145 {_90715 B : Type'} (_37166 : type627 _90715 B) (u : _90715 -> Prop) (f : _90715 -> B) (t : _90715 -> Prop) : (term4080 _90715 B _37166 u f t) = (term4081 _90715 B _37166 u f t).
Proof. exact (@lem17045 (@SUBSET _90715 t u) (term2079 _90715 B _37166 u f t)). Qed.
Lemma lem3528147 {_90715 : Type'} (t : _90715 -> Prop) (g : type686 _90715) : (term4082 _90715 t g) = (term4082 _90715 t g).
Proof. exact (eq_refl (term4082 _90715 t g)). Qed.
Lemma lem3528148 {_90715 B : Type'} (g : type686 _90715) (_37166 : type627 _90715 B) (u : _90715 -> Prop) (f : _90715 -> B) (t : _90715 -> Prop) : (term4083 _90715 B g _37166 u f t) = (term4084 _90715 B g _37166 u f t).
Proof. exact (MK_COMB (@lem3528147 _90715 t g) (@lem3528145 _90715 B _37166 u f t)). Qed.
Lemma lem3528149 {_90715 B : Type'} (g : type686 _90715) (_37166 : type627 _90715 B) (u : _90715 -> Prop) (f : _90715 -> B) (t : _90715 -> Prop) : (term4085 _90715 B g _37166 u f t) = (term4083 _90715 B g _37166 u f t).
Proof. exact (@lem17362 (@IN (_90715 -> Prop) t g) (term2080 _90715 B _37166 u f t)). Qed.
Lemma lem3528150 {_90715 B : Type'} (g : type686 _90715) (_37166 : type627 _90715 B) (u : _90715 -> Prop) (f : _90715 -> B) (t : _90715 -> Prop) : (term4085 _90715 B g _37166 u f t) = (term4084 _90715 B g _37166 u f t).
Proof. exact (TRANS (@lem3528149 _90715 B g _37166 u f t) (@lem3528148 _90715 B g _37166 u f t)). Qed.
Lemma lem3528151 {_90715 : Type'} (P : type686 _90715) : (term298 _90715 P) = (term299 _90715 P).
Proof. exact (@lem18392 (_90715 -> Prop) P). Qed.
Lemma lem3528152 {_90715 B : Type'} (g : type686 _90715) (_37166 : type627 _90715 B) (u : _90715 -> Prop) (f : _90715 -> B) : (term4086 _90715 B g _37166 u f) = (term4087 _90715 B g _37166 u f).
Proof. exact (@lem3528151 _90715 (term2082 _90715 B g _37166 u f)). Qed.
Lemma lem3528153 {_90715 B : Type'} (g : type686 _90715) (_37166 : type627 _90715 B) (u : _90715 -> Prop) (f : _90715 -> B) (t : _90715 -> Prop) : (term4088 _90715 B g _37166 u f t) = (term2081 _90715 B g _37166 u f t).
Proof. exact (eq_refl (term4088 _90715 B g _37166 u f t)). Qed.
Lemma lem3528154 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem3528155 {_90715 B : Type'} (g : type686 _90715) (_37166 : type627 _90715 B) (u : _90715 -> Prop) (f : _90715 -> B) (t : _90715 -> Prop) : (term4089 _90715 B g _37166 u f t) = (term4085 _90715 B g _37166 u f t).
Proof. exact (MK_COMB (@lem3528154) (@lem3528153 _90715 B g _37166 u f t)). Qed.
Lemma lem3528156 {_90715 B : Type'} (g : type686 _90715) (_37166 : type627 _90715 B) (u : _90715 -> Prop) (f : _90715 -> B) (t : _90715 -> Prop) : (term4089 _90715 B g _37166 u f t) = (term4084 _90715 B g _37166 u f t).
Proof. exact (TRANS (@lem3528155 _90715 B g _37166 u f t) (@lem3528150 _90715 B g _37166 u f t)). Qed.
Lemma lem3528157 {_90715 B : Type'} (g : type686 _90715) (_37166 : type627 _90715 B) (u : _90715 -> Prop) (f : _90715 -> B) : (term4090 _90715 B g _37166 u f) = (term4091 _90715 B g _37166 u f).
Proof. exact (fun_ext (fun t : _90715 -> Prop => @lem3528156 _90715 B g _37166 u f t)). Qed.
Lemma lem3528158 {_90715 : Type'} : (@ex (_90715 -> Prop)) = (@ex (_90715 -> Prop)).
Proof. exact (eq_refl (@ex (_90715 -> Prop))). Qed.
Lemma lem3528159 {_90715 B : Type'} (g : type686 _90715) (_37166 : type627 _90715 B) (u : _90715 -> Prop) (f : _90715 -> B) : (term4087 _90715 B g _37166 u f) = (term4092 _90715 B g _37166 u f).
Proof. exact (MK_COMB (@lem3528158 _90715) (@lem3528157 _90715 B g _37166 u f)). Qed.
Lemma lem3528160 {_90715 B : Type'} (g : type686 _90715) (_37166 : type627 _90715 B) (u : _90715 -> Prop) (f : _90715 -> B) : (term4086 _90715 B g _37166 u f) = (term4092 _90715 B g _37166 u f).
Proof. exact (TRANS (@lem3528152 _90715 B g _37166 u f) (@lem3528159 _90715 B g _37166 u f)). Qed.
Lemma lem3528161 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem3528162 {_90715 : Type'} (g : type686 _90715) : (term4093 _90715 g) = (term4094 _90715 g).
Proof. exact (MK_COMB (@lem3528161) (@lem3528137 _90715 g)). Qed.
Lemma lem3528163 {_90715 B : Type'} (g : type686 _90715) (_37166 : type627 _90715 B) (u : _90715 -> Prop) (f : _90715 -> B) : (term4095 _90715 B g _37166 u f) = (term4096 _90715 B g _37166 u f).
Proof. exact (MK_COMB (@lem3528162 _90715 g) (@lem3528160 _90715 B g _37166 u f)). Qed.
Lemma lem3528164 {_90715 B : Type'} (g : type686 _90715) (_37166 : type627 _90715 B) (u : _90715 -> Prop) (f : _90715 -> B) : (term4097 _90715 B g _37166 u f) = (term4095 _90715 B g _37166 u f).
Proof. exact (@lem17045 (term40 _90715 g) (term2083 _90715 B g _37166 u f)). Qed.
Lemma lem3528165 {_90715 B : Type'} (g : type686 _90715) (_37166 : type627 _90715 B) (u : _90715 -> Prop) (f : _90715 -> B) : (term4097 _90715 B g _37166 u f) = (term4096 _90715 B g _37166 u f).
Proof. exact (TRANS (@lem3528164 _90715 B g _37166 u f) (@lem3528163 _90715 B g _37166 u f)). Qed.
Lemma lem3528166 {_90715 B : Type'} (f : _90715 -> B) (g : type686 _90715) : ((term49 _90715 B f g) = (term50 _90715 B f g)) = ((term49 _90715 B f g) = (term50 _90715 B f g)).
Proof. exact (eq_refl ((term49 _90715 B f g) = (term50 _90715 B f g))). Qed.
Lemma lem3528167 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem3528168 {_90715 B : Type'} (g : type686 _90715) (_37166 : type627 _90715 B) (u : _90715 -> Prop) (f : _90715 -> B) : (term4098 _90715 B g _37166 u f) = (term4099 _90715 B g _37166 u f).
Proof. exact (MK_COMB (@lem3528167) (@lem3528165 _90715 B g _37166 u f)). Qed.
Lemma lem3528169 {_90715 B : Type'} (_37166 : type627 _90715 B) (u : _90715 -> Prop) (f : _90715 -> B) (g : type686 _90715) : (term4100 _90715 B _37166 u f g) = (term4101 _90715 B _37166 u f g).
Proof. exact (MK_COMB (@lem3528168 _90715 B g _37166 u f) (@lem3528166 _90715 B f g)). Qed.
Lemma lem3528170 {_90715 B : Type'} (_37166 : type627 _90715 B) (u : _90715 -> Prop) (f : _90715 -> B) (g : type686 _90715) : (term2086 _90715 B _37166 u f g) = (term4100 _90715 B _37166 u f g).
Proof. exact (@lem17265 (term2084 _90715 B g _37166 u f) ((term49 _90715 B f g) = (term50 _90715 B f g))). Qed.
Lemma lem3528171 {_90715 B : Type'} (_37166 : type627 _90715 B) (u : _90715 -> Prop) (f : _90715 -> B) (g : type686 _90715) : (term2086 _90715 B _37166 u f g) = (term4101 _90715 B _37166 u f g).
Proof. exact (TRANS (@lem3528170 _90715 B _37166 u f g) (@lem3528169 _90715 B _37166 u f g)). Qed.
Lemma lem3528172 {_90715 B : Type'} (_37166 : type627 _90715 B) (u : _90715 -> Prop) (f : _90715 -> B) : (term2088 _90715 B _37166 u f) = (term4102 _90715 B _37166 u f).
Proof. exact (fun_ext (fun g : type686 _90715 => @lem3528171 _90715 B _37166 u f g)). Qed.
Lemma lem3528173 {_90715 : Type'} : (@all ((_90715 -> Prop) -> Prop)) = (@all ((_90715 -> Prop) -> Prop)).
Proof. exact (eq_refl (@all ((_90715 -> Prop) -> Prop))). Qed.
Lemma lem3528174 {_90715 B : Type'} (_37166 : type627 _90715 B) (u : _90715 -> Prop) (f : _90715 -> B) : (term2089 _90715 B _37166 u f) = (term4103 _90715 B _37166 u f).
Proof. exact (MK_COMB (@lem3528173 _90715) (@lem3528172 _90715 B _37166 u f)). Qed.
Lemma lem3528175 {_90715 B : Type'} (_37166 : type627 _90715 B) (u : _90715 -> Prop) : (term2091 _90715 B _37166 u) = (term4104 _90715 B _37166 u).
Proof. exact (fun_ext (fun f : _90715 -> B => @lem3528174 _90715 B _37166 u f)). Qed.
Lemma lem3528176 {_90715 B : Type'} : (@all (_90715 -> B)) = (@all (_90715 -> B)).
Proof. exact (eq_refl (@all (_90715 -> B))). Qed.
Lemma lem3528177 {_90715 B : Type'} (_37166 : type627 _90715 B) (u : _90715 -> Prop) : (term2092 _90715 B _37166 u) = (term4105 _90715 B _37166 u).
Proof. exact (MK_COMB (@lem3528176 _90715 B) (@lem3528175 _90715 B _37166 u)). Qed.
Lemma lem3528178 {_90715 B : Type'} (_37166 : type627 _90715 B) : (term2094 _90715 B _37166) = (term4106 _90715 B _37166).
Proof. exact (fun_ext (fun u : _90715 -> Prop => @lem3528177 _90715 B _37166 u)). Qed.
Lemma lem3528179 {_90715 : Type'} : (@all (_90715 -> Prop)) = (@all (_90715 -> Prop)).
Proof. exact (eq_refl (@all (_90715 -> Prop))). Qed.
Lemma lem3528180 {_90715 B : Type'} (_37166 : type627 _90715 B) : (term2095 _90715 B _37166) = (term4107 _90715 B _37166).
Proof. exact (MK_COMB (@lem3528179 _90715) (@lem3528178 _90715 B _37166)). Qed.
Lemma lem3528287 {A : Type'} (P : Prop) (Q : A -> Prop) : (term434 A P Q) = (term435 A P Q).
Proof. exact (EQ_MP (@lem18911 A P Q) (@lem18910 A P Q)). Qed.
Lemma lem3528288 {_90715 : Type'} (P : Prop) (Q : type686 _90715) : (term436 _90715 P Q) = (term437 _90715 P Q).
Proof. exact (@lem3528287 (_90715 -> Prop) P Q). Qed.
Lemma lem3528289 {_90715 B : Type'} (g : type686 _90715) (_37166 : type627 _90715 B) (u : _90715 -> Prop) (f : _90715 -> B) : (term4108 _90715 B g _37166 u f) = (term4109 _90715 B g _37166 u f).
Proof. exact (@lem3528288 _90715 (g = (@EMPTY (_90715 -> Prop))) (term4091 _90715 B g _37166 u f)). Qed.
Lemma lem3528290 {_90715 B : Type'} (g : type686 _90715) (_37166 : type627 _90715 B) (u : _90715 -> Prop) (f : _90715 -> B) (t : _90715 -> Prop) : (term4110 _90715 B g _37166 u f t) = (term4084 _90715 B g _37166 u f t).
Proof. exact (eq_refl (term4110 _90715 B g _37166 u f t)). Qed.
Lemma lem3528291 {_90715 B : Type'} (g : type686 _90715) (_37166 : type627 _90715 B) (u : _90715 -> Prop) (f : _90715 -> B) : (term4111 _90715 B g _37166 u f) = (term4091 _90715 B g _37166 u f).
Proof. exact (fun_ext (fun t : _90715 -> Prop => @lem3528290 _90715 B g _37166 u f t)). Qed.
Lemma lem3528292 {_90715 : Type'} : (@ex (_90715 -> Prop)) = (@ex (_90715 -> Prop)).
Proof. exact (eq_refl (@ex (_90715 -> Prop))). Qed.
Lemma lem3528293 {_90715 B : Type'} (g : type686 _90715) (_37166 : type627 _90715 B) (u : _90715 -> Prop) (f : _90715 -> B) : (term4112 _90715 B g _37166 u f) = (term4092 _90715 B g _37166 u f).
Proof. exact (MK_COMB (@lem3528292 _90715) (@lem3528291 _90715 B g _37166 u f)). Qed.
Lemma lem3528294 {_90715 : Type'} (g : type686 _90715) : (term4094 _90715 g) = (term4094 _90715 g).
Proof. exact (eq_refl (term4094 _90715 g)). Qed.
Lemma lem3528295 {_90715 B : Type'} (g : type686 _90715) (_37166 : type627 _90715 B) (u : _90715 -> Prop) (f : _90715 -> B) : (term4108 _90715 B g _37166 u f) = (term4096 _90715 B g _37166 u f).
Proof. exact (MK_COMB (@lem3528294 _90715 g) (@lem3528293 _90715 B g _37166 u f)). Qed.
Lemma lem3528296 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem3528297 {_90715 B : Type'} (g : type686 _90715) (_37166 : type627 _90715 B) (u : _90715 -> Prop) (f : _90715 -> B) : (term4113 _90715 B g _37166 u f) = (term4114 _90715 B g _37166 u f).
Proof. exact (MK_COMB (@lem3528296) (@lem3528295 _90715 B g _37166 u f)). Qed.
Lemma lem3528298 {_90715 B : Type'} (g : type686 _90715) (_37166 : type627 _90715 B) (u : _90715 -> Prop) (f : _90715 -> B) (t : _90715 -> Prop) : (term4110 _90715 B g _37166 u f t) = (term4084 _90715 B g _37166 u f t).
Proof. exact (eq_refl (term4110 _90715 B g _37166 u f t)). Qed.
Lemma lem3528299 {_90715 : Type'} (g : type686 _90715) : (term4094 _90715 g) = (term4094 _90715 g).
Proof. exact (eq_refl (term4094 _90715 g)). Qed.
Lemma lem3528300 {_90715 B : Type'} (g : type686 _90715) (_37166 : type627 _90715 B) (u : _90715 -> Prop) (f : _90715 -> B) (t : _90715 -> Prop) : (term4115 _90715 B g _37166 u f t) = (term4116 _90715 B g _37166 u f t).
Proof. exact (MK_COMB (@lem3528299 _90715 g) (@lem3528298 _90715 B g _37166 u f t)). Qed.
Lemma lem3528301 {_90715 B : Type'} (g : type686 _90715) (_37166 : type627 _90715 B) (u : _90715 -> Prop) (f : _90715 -> B) : (term4117 _90715 B g _37166 u f) = (term4118 _90715 B g _37166 u f).
Proof. exact (fun_ext (fun t : _90715 -> Prop => @lem3528300 _90715 B g _37166 u f t)). Qed.
Lemma lem3528302 {_90715 : Type'} : (@ex (_90715 -> Prop)) = (@ex (_90715 -> Prop)).
Proof. exact (eq_refl (@ex (_90715 -> Prop))). Qed.
Lemma lem3528303 {_90715 B : Type'} (g : type686 _90715) (_37166 : type627 _90715 B) (u : _90715 -> Prop) (f : _90715 -> B) : (term4109 _90715 B g _37166 u f) = (term4119 _90715 B g _37166 u f).
Proof. exact (MK_COMB (@lem3528302 _90715) (@lem3528301 _90715 B g _37166 u f)). Qed.
Lemma lem3528304 {_90715 B : Type'} (g : type686 _90715) (_37166 : type627 _90715 B) (u : _90715 -> Prop) (f : _90715 -> B) : ((term4108 _90715 B g _37166 u f) = (term4109 _90715 B g _37166 u f)) = ((term4096 _90715 B g _37166 u f) = (term4119 _90715 B g _37166 u f)).
Proof. exact (MK_COMB (@lem3528297 _90715 B g _37166 u f) (@lem3528303 _90715 B g _37166 u f)). Qed.
Lemma lem3528305 {_90715 B : Type'} (g : type686 _90715) (_37166 : type627 _90715 B) (u : _90715 -> Prop) (f : _90715 -> B) : (term4096 _90715 B g _37166 u f) = (term4119 _90715 B g _37166 u f).
Proof. exact (EQ_MP (@lem3528304 _90715 B g _37166 u f) (@lem3528289 _90715 B g _37166 u f)). Qed.
Lemma lem3528306 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem3528307 {_90715 B : Type'} (g : type686 _90715) (_37166 : type627 _90715 B) (u : _90715 -> Prop) (f : _90715 -> B) : (term4099 _90715 B g _37166 u f) = (term4120 _90715 B g _37166 u f).
Proof. exact (MK_COMB (@lem3528306) (@lem3528305 _90715 B g _37166 u f)). Qed.
Lemma lem3528308 {_90715 B : Type'} (f : _90715 -> B) (g : type686 _90715) : ((term49 _90715 B f g) = (term50 _90715 B f g)) = ((term49 _90715 B f g) = (term50 _90715 B f g)).
Proof. exact (eq_refl ((term49 _90715 B f g) = (term50 _90715 B f g))). Qed.
Lemma lem3528309 {_90715 B : Type'} (_37166 : type627 _90715 B) (u : _90715 -> Prop) (f : _90715 -> B) (g : type686 _90715) : (term4101 _90715 B _37166 u f g) = (term4121 _90715 B _37166 u f g).
Proof. exact (MK_COMB (@lem3528307 _90715 B g _37166 u f) (@lem3528308 _90715 B f g)). Qed.
Lemma lem3528311 {A : Type'} (P : A -> Prop) (Q : Prop) : (term550 A P Q) = (term551 A P Q).
Proof. exact (EQ_MP (@lem18905 A P Q) (@lem18904 A P Q)). Qed.
Lemma lem3528312 {_90715 : Type'} (P : type686 _90715) (Q : Prop) : (term567 _90715 P Q) = (term568 _90715 P Q).
Proof. exact (@lem3528311 (_90715 -> Prop) P Q). Qed.
Lemma lem3528313 {_90715 B : Type'} (_37166 : type627 _90715 B) (u : _90715 -> Prop) (f : _90715 -> B) (g : type686 _90715) : (term4122 _90715 B _37166 u f g) = (term4123 _90715 B _37166 u f g).
Proof. exact (@lem3528312 _90715 (term4118 _90715 B g _37166 u f) ((term49 _90715 B f g) = (term50 _90715 B f g))). Qed.
Lemma lem3528314 {_90715 B : Type'} (g : type686 _90715) (_37166 : type627 _90715 B) (u : _90715 -> Prop) (f : _90715 -> B) (t : _90715 -> Prop) : (term4124 _90715 B g _37166 u f t) = (term4116 _90715 B g _37166 u f t).
Proof. exact (eq_refl (term4124 _90715 B g _37166 u f t)). Qed.
Lemma lem3528315 {_90715 B : Type'} (g : type686 _90715) (_37166 : type627 _90715 B) (u : _90715 -> Prop) (f : _90715 -> B) : (term4125 _90715 B g _37166 u f) = (term4118 _90715 B g _37166 u f).
Proof. exact (fun_ext (fun t : _90715 -> Prop => @lem3528314 _90715 B g _37166 u f t)). Qed.
Lemma lem3528316 {_90715 : Type'} : (@ex (_90715 -> Prop)) = (@ex (_90715 -> Prop)).
Proof. exact (eq_refl (@ex (_90715 -> Prop))). Qed.
Lemma lem3528317 {_90715 B : Type'} (g : type686 _90715) (_37166 : type627 _90715 B) (u : _90715 -> Prop) (f : _90715 -> B) : (term4126 _90715 B g _37166 u f) = (term4119 _90715 B g _37166 u f).
Proof. exact (MK_COMB (@lem3528316 _90715) (@lem3528315 _90715 B g _37166 u f)). Qed.
Lemma lem3528318 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem3528319 {_90715 B : Type'} (g : type686 _90715) (_37166 : type627 _90715 B) (u : _90715 -> Prop) (f : _90715 -> B) : (term4127 _90715 B g _37166 u f) = (term4120 _90715 B g _37166 u f).
Proof. exact (MK_COMB (@lem3528318) (@lem3528317 _90715 B g _37166 u f)). Qed.
Lemma lem3528320 {_90715 B : Type'} (f : _90715 -> B) (g : type686 _90715) : ((term49 _90715 B f g) = (term50 _90715 B f g)) = ((term49 _90715 B f g) = (term50 _90715 B f g)).
Proof. exact (eq_refl ((term49 _90715 B f g) = (term50 _90715 B f g))). Qed.
Lemma lem3528321 {_90715 B : Type'} (_37166 : type627 _90715 B) (u : _90715 -> Prop) (f : _90715 -> B) (g : type686 _90715) : (term4122 _90715 B _37166 u f g) = (term4121 _90715 B _37166 u f g).
Proof. exact (MK_COMB (@lem3528319 _90715 B g _37166 u f) (@lem3528320 _90715 B f g)). Qed.
Lemma lem3528322 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem3528323 {_90715 B : Type'} (_37166 : type627 _90715 B) (u : _90715 -> Prop) (f : _90715 -> B) (g : type686 _90715) : (term4128 _90715 B _37166 u f g) = (term4129 _90715 B _37166 u f g).
Proof. exact (MK_COMB (@lem3528322) (@lem3528321 _90715 B _37166 u f g)). Qed.
Lemma lem3528324 {_90715 B : Type'} (g : type686 _90715) (_37166 : type627 _90715 B) (u : _90715 -> Prop) (f : _90715 -> B) (t : _90715 -> Prop) : (term4124 _90715 B g _37166 u f t) = (term4116 _90715 B g _37166 u f t).
Proof. exact (eq_refl (term4124 _90715 B g _37166 u f t)). Qed.
Lemma lem3528325 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem3528326 {_90715 B : Type'} (g : type686 _90715) (_37166 : type627 _90715 B) (u : _90715 -> Prop) (f : _90715 -> B) (t : _90715 -> Prop) : (term4130 _90715 B g _37166 u f t) = (term4131 _90715 B g _37166 u f t).
Proof. exact (MK_COMB (@lem3528325) (@lem3528324 _90715 B g _37166 u f t)). Qed.
Lemma lem3528327 {_90715 B : Type'} (f : _90715 -> B) (g : type686 _90715) : ((term49 _90715 B f g) = (term50 _90715 B f g)) = ((term49 _90715 B f g) = (term50 _90715 B f g)).
Proof. exact (eq_refl ((term49 _90715 B f g) = (term50 _90715 B f g))). Qed.
Lemma lem3528328 {_90715 B : Type'} (_37166 : type627 _90715 B) (u : _90715 -> Prop) (t : _90715 -> Prop) (f : _90715 -> B) (g : type686 _90715) : (term4132 _90715 B _37166 u t f g) = (term4133 _90715 B _37166 u t f g).
Proof. exact (MK_COMB (@lem3528326 _90715 B g _37166 u f t) (@lem3528327 _90715 B f g)). Qed.
Lemma lem3528329 {_90715 B : Type'} (_37166 : type627 _90715 B) (u : _90715 -> Prop) (f : _90715 -> B) (g : type686 _90715) : (term4134 _90715 B _37166 u f g) = (term4135 _90715 B _37166 u f g).
Proof. exact (fun_ext (fun t : _90715 -> Prop => @lem3528328 _90715 B _37166 u t f g)). Qed.
Lemma lem3528330 {_90715 : Type'} : (@ex (_90715 -> Prop)) = (@ex (_90715 -> Prop)).
Proof. exact (eq_refl (@ex (_90715 -> Prop))). Qed.
Lemma lem3528331 {_90715 B : Type'} (_37166 : type627 _90715 B) (u : _90715 -> Prop) (f : _90715 -> B) (g : type686 _90715) : (term4123 _90715 B _37166 u f g) = (term4136 _90715 B _37166 u f g).
Proof. exact (MK_COMB (@lem3528330 _90715) (@lem3528329 _90715 B _37166 u f g)). Qed.
Lemma lem3528332 {_90715 B : Type'} (_37166 : type627 _90715 B) (u : _90715 -> Prop) (f : _90715 -> B) (g : type686 _90715) : ((term4122 _90715 B _37166 u f g) = (term4123 _90715 B _37166 u f g)) = ((term4121 _90715 B _37166 u f g) = (term4136 _90715 B _37166 u f g)).
Proof. exact (MK_COMB (@lem3528323 _90715 B _37166 u f g) (@lem3528331 _90715 B _37166 u f g)). Qed.
Lemma lem3528333 {_90715 B : Type'} (_37166 : type627 _90715 B) (u : _90715 -> Prop) (f : _90715 -> B) (g : type686 _90715) : (term4121 _90715 B _37166 u f g) = (term4136 _90715 B _37166 u f g).
Proof. exact (EQ_MP (@lem3528332 _90715 B _37166 u f g) (@lem3528313 _90715 B _37166 u f g)). Qed.
Lemma lem3528334 {_90715 B : Type'} (_37166 : type627 _90715 B) (u : _90715 -> Prop) (f : _90715 -> B) (g : type686 _90715) : (term4101 _90715 B _37166 u f g) = (term4136 _90715 B _37166 u f g).
Proof. exact (TRANS (@lem3528309 _90715 B _37166 u f g) (@lem3528333 _90715 B _37166 u f g)). Qed.
Lemma lem3528335 {_90715 B : Type'} (_37166 : type627 _90715 B) (u : _90715 -> Prop) (f : _90715 -> B) : (term4102 _90715 B _37166 u f) = (term4137 _90715 B _37166 u f).
Proof. exact (fun_ext (fun g : type686 _90715 => @lem3528334 _90715 B _37166 u f g)). Qed.
Lemma lem3528336 {_90715 : Type'} : (@all ((_90715 -> Prop) -> Prop)) = (@all ((_90715 -> Prop) -> Prop)).
Proof. exact (eq_refl (@all ((_90715 -> Prop) -> Prop))). Qed.
Lemma lem3528337 {_90715 B : Type'} (_37166 : type627 _90715 B) (u : _90715 -> Prop) (f : _90715 -> B) : (term4103 _90715 B _37166 u f) = (term4138 _90715 B _37166 u f).
Proof. exact (MK_COMB (@lem3528336 _90715) (@lem3528335 _90715 B _37166 u f)). Qed.
Lemma lem3528339 {A B : Type'} (P : type1413 A B) : (term453 A B P) = (term454 A B P).
Proof. exact (EQ_MP (@lem18899 A B P) (@lem18898 A B P)). Qed.
Lemma lem3528340 {_90715 : Type'} (P : type174 _90715) : (term4139 _90715 P) = (term4140 _90715 P).
Proof. exact (@lem3528339 (type686 _90715) (_90715 -> Prop) P). Qed.
Lemma lem3528341 {_90715 B : Type'} (_37166 : type627 _90715 B) (u : _90715 -> Prop) (f : _90715 -> B) : (term4141 _90715 B _37166 u f) = (term4142 _90715 B _37166 u f).
Proof. exact (@lem3528340 _90715 (term4143 _90715 B _37166 u f)). Qed.
Lemma lem3528342 {_90715 B : Type'} (_37166 : type627 _90715 B) (u : _90715 -> Prop) (f : _90715 -> B) (g : type686 _90715) : (term4144 _90715 B _37166 u f g) = (term4135 _90715 B _37166 u f g).
Proof. exact (eq_refl (term4144 _90715 B _37166 u f g)). Qed.
Lemma lem3528343 {_90715 : Type'} (t : _90715 -> Prop) : t = t.
Proof. exact (eq_refl t). Qed.
Lemma lem3528344 {_90715 B : Type'} (_37166 : type627 _90715 B) (u : _90715 -> Prop) (f : _90715 -> B) (g : type686 _90715) (t : _90715 -> Prop) : (term4145 _90715 B _37166 u f g t) = (term4146 _90715 B _37166 u f g t).
Proof. exact (MK_COMB (@lem3528342 _90715 B _37166 u f g) (@lem3528343 _90715 t)). Qed.
Lemma lem3528345 {_90715 B : Type'} (_37166 : type627 _90715 B) (u : _90715 -> Prop) (t : _90715 -> Prop) (f : _90715 -> B) (g : type686 _90715) : (term4146 _90715 B _37166 u f g t) = (term4133 _90715 B _37166 u t f g).
Proof. exact (eq_refl (term4146 _90715 B _37166 u f g t)). Qed.
Lemma lem3528346 {_90715 B : Type'} (_37166 : type627 _90715 B) (u : _90715 -> Prop) (t : _90715 -> Prop) (f : _90715 -> B) (g : type686 _90715) : (term4145 _90715 B _37166 u f g t) = (term4133 _90715 B _37166 u t f g).
Proof. exact (TRANS (@lem3528344 _90715 B _37166 u f g t) (@lem3528345 _90715 B _37166 u t f g)). Qed.
Lemma lem3528347 {_90715 B : Type'} (_37166 : type627 _90715 B) (u : _90715 -> Prop) (f : _90715 -> B) (g : type686 _90715) : (term4147 _90715 B _37166 u f g) = (term4135 _90715 B _37166 u f g).
Proof. exact (fun_ext (fun t : _90715 -> Prop => @lem3528346 _90715 B _37166 u t f g)). Qed.
Lemma lem3528348 {_90715 : Type'} : (@ex (_90715 -> Prop)) = (@ex (_90715 -> Prop)).
Proof. exact (eq_refl (@ex (_90715 -> Prop))). Qed.
Lemma lem3528349 {_90715 B : Type'} (_37166 : type627 _90715 B) (u : _90715 -> Prop) (f : _90715 -> B) (g : type686 _90715) : (term4148 _90715 B _37166 u f g) = (term4136 _90715 B _37166 u f g).
Proof. exact (MK_COMB (@lem3528348 _90715) (@lem3528347 _90715 B _37166 u f g)). Qed.
Lemma lem3528350 {_90715 B : Type'} (_37166 : type627 _90715 B) (u : _90715 -> Prop) (f : _90715 -> B) : (term4149 _90715 B _37166 u f) = (term4137 _90715 B _37166 u f).
Proof. exact (fun_ext (fun g : type686 _90715 => @lem3528349 _90715 B _37166 u f g)). Qed.
Lemma lem3528351 {_90715 : Type'} : (@all ((_90715 -> Prop) -> Prop)) = (@all ((_90715 -> Prop) -> Prop)).
Proof. exact (eq_refl (@all ((_90715 -> Prop) -> Prop))). Qed.
Lemma lem3528352 {_90715 B : Type'} (_37166 : type627 _90715 B) (u : _90715 -> Prop) (f : _90715 -> B) : (term4141 _90715 B _37166 u f) = (term4138 _90715 B _37166 u f).
Proof. exact (MK_COMB (@lem3528351 _90715) (@lem3528350 _90715 B _37166 u f)). Qed.
Lemma lem3528353 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem3528354 {_90715 B : Type'} (_37166 : type627 _90715 B) (u : _90715 -> Prop) (f : _90715 -> B) : (term4150 _90715 B _37166 u f) = (term4151 _90715 B _37166 u f).
Proof. exact (MK_COMB (@lem3528353) (@lem3528352 _90715 B _37166 u f)). Qed.
Lemma lem3528355 {_90715 B : Type'} (_37166 : type627 _90715 B) (u : _90715 -> Prop) (f : _90715 -> B) (g : type686 _90715) : (term4144 _90715 B _37166 u f g) = (term4135 _90715 B _37166 u f g).
Proof. exact (eq_refl (term4144 _90715 B _37166 u f g)). Qed.
Lemma lem3528356 {_90715 : Type'} (t : type178 _90715) (g : type686 _90715) : (t g) = (t g).
Proof. exact (eq_refl (t g)). Qed.
Lemma lem3528357 {_90715 B : Type'} (_37166 : type627 _90715 B) (u : _90715 -> Prop) (f : _90715 -> B) (t : type178 _90715) (g : type686 _90715) : (term4152 _90715 B _37166 u f t g) = (term4153 _90715 B _37166 u f t g).
Proof. exact (MK_COMB (@lem3528355 _90715 B _37166 u f g) (@lem3528356 _90715 t g)). Qed.
Lemma lem3528358 {_90715 B : Type'} (_37166 : type627 _90715 B) (u : _90715 -> Prop) (t : type178 _90715) (f : _90715 -> B) (g : type686 _90715) : (term4153 _90715 B _37166 u f t g) = (term4154 _90715 B _37166 u t f g).
Proof. exact (eq_refl (term4153 _90715 B _37166 u f t g)). Qed.
Lemma lem3528359 {_90715 B : Type'} (_37166 : type627 _90715 B) (u : _90715 -> Prop) (t : type178 _90715) (f : _90715 -> B) (g : type686 _90715) : (term4152 _90715 B _37166 u f t g) = (term4154 _90715 B _37166 u t f g).
Proof. exact (TRANS (@lem3528357 _90715 B _37166 u f t g) (@lem3528358 _90715 B _37166 u t f g)). Qed.
Lemma lem3528360 {_90715 B : Type'} (_37166 : type627 _90715 B) (u : _90715 -> Prop) (t : type178 _90715) (f : _90715 -> B) : (term4155 _90715 B _37166 u f t) = (term4156 _90715 B _37166 u t f).
Proof. exact (fun_ext (fun g : type686 _90715 => @lem3528359 _90715 B _37166 u t f g)). Qed.
Lemma lem3528361 {_90715 : Type'} : (@all ((_90715 -> Prop) -> Prop)) = (@all ((_90715 -> Prop) -> Prop)).
Proof. exact (eq_refl (@all ((_90715 -> Prop) -> Prop))). Qed.
Lemma lem3528362 {_90715 B : Type'} (_37166 : type627 _90715 B) (u : _90715 -> Prop) (t : type178 _90715) (f : _90715 -> B) : (term4157 _90715 B _37166 u f t) = (term4158 _90715 B _37166 u t f).
Proof. exact (MK_COMB (@lem3528361 _90715) (@lem3528360 _90715 B _37166 u t f)). Qed.
Lemma lem3528363 {_90715 B : Type'} (_37166 : type627 _90715 B) (u : _90715 -> Prop) (f : _90715 -> B) : (term4159 _90715 B _37166 u f) = (term4160 _90715 B _37166 u f).
Proof. exact (fun_ext (fun t : type178 _90715 => @lem3528362 _90715 B _37166 u t f)). Qed.
Lemma lem3528364 {_90715 : Type'} : (@ex (((_90715 -> Prop) -> Prop) -> _90715 -> Prop)) = (@ex (((_90715 -> Prop) -> Prop) -> _90715 -> Prop)).
Proof. exact (eq_refl (@ex (((_90715 -> Prop) -> Prop) -> _90715 -> Prop))). Qed.
Lemma lem3528365 {_90715 B : Type'} (_37166 : type627 _90715 B) (u : _90715 -> Prop) (f : _90715 -> B) : (term4142 _90715 B _37166 u f) = (term4161 _90715 B _37166 u f).
Proof. exact (MK_COMB (@lem3528364 _90715) (@lem3528363 _90715 B _37166 u f)). Qed.
Lemma lem3528366 {_90715 B : Type'} (_37166 : type627 _90715 B) (u : _90715 -> Prop) (f : _90715 -> B) : ((term4141 _90715 B _37166 u f) = (term4142 _90715 B _37166 u f)) = ((term4138 _90715 B _37166 u f) = (term4161 _90715 B _37166 u f)).
Proof. exact (MK_COMB (@lem3528354 _90715 B _37166 u f) (@lem3528365 _90715 B _37166 u f)). Qed.
Lemma lem3528367 {_90715 B : Type'} (_37166 : type627 _90715 B) (u : _90715 -> Prop) (f : _90715 -> B) : (term4138 _90715 B _37166 u f) = (term4161 _90715 B _37166 u f).
Proof. exact (EQ_MP (@lem3528366 _90715 B _37166 u f) (@lem3528341 _90715 B _37166 u f)). Qed.
Lemma lem3528368 {_90715 B : Type'} (_37166 : type627 _90715 B) (u : _90715 -> Prop) (f : _90715 -> B) : (term4103 _90715 B _37166 u f) = (term4161 _90715 B _37166 u f).
Proof. exact (TRANS (@lem3528337 _90715 B _37166 u f) (@lem3528367 _90715 B _37166 u f)). Qed.
Lemma lem3528369 {_90715 B : Type'} (_37166 : type627 _90715 B) (u : _90715 -> Prop) : (term4104 _90715 B _37166 u) = (term4162 _90715 B _37166 u).
Proof. exact (fun_ext (fun f : _90715 -> B => @lem3528368 _90715 B _37166 u f)). Qed.
Lemma lem3528370 {_90715 B : Type'} : (@all (_90715 -> B)) = (@all (_90715 -> B)).
Proof. exact (eq_refl (@all (_90715 -> B))). Qed.
Lemma lem3528371 {_90715 B : Type'} (_37166 : type627 _90715 B) (u : _90715 -> Prop) : (term4105 _90715 B _37166 u) = (term4163 _90715 B _37166 u).
Proof. exact (MK_COMB (@lem3528370 _90715 B) (@lem3528369 _90715 B _37166 u)). Qed.
Lemma lem3528373 {A B : Type'} (P : type1413 A B) : (term453 A B P) = (term454 A B P).
Proof. exact (EQ_MP (@lem18899 A B P) (@lem18898 A B P)). Qed.
Lemma lem3528374 {_90715 B : Type'} (P : type489 _90715 B) : (term4164 _90715 B P) = (term4165 _90715 B P).
Proof. exact (@lem3528373 (_90715 -> B) (type178 _90715) P). Qed.
Lemma lem3528375 {_90715 B : Type'} (_37166 : type627 _90715 B) (u : _90715 -> Prop) : (term4166 _90715 B _37166 u) = (term4167 _90715 B _37166 u).
Proof. exact (@lem3528374 _90715 B (term4168 _90715 B _37166 u)). Qed.
Lemma lem3528376 {_90715 B : Type'} (_37166 : type627 _90715 B) (u : _90715 -> Prop) (f : _90715 -> B) : (term4169 _90715 B _37166 u f) = (term4160 _90715 B _37166 u f).
Proof. exact (eq_refl (term4169 _90715 B _37166 u f)). Qed.
Lemma lem3528377 {_90715 : Type'} (t : type178 _90715) : t = t.
Proof. exact (eq_refl t). Qed.
Lemma lem3528378 {_90715 B : Type'} (_37166 : type627 _90715 B) (u : _90715 -> Prop) (f : _90715 -> B) (t : type178 _90715) : (term4170 _90715 B _37166 u f t) = (term4171 _90715 B _37166 u f t).
Proof. exact (MK_COMB (@lem3528376 _90715 B _37166 u f) (@lem3528377 _90715 t)). Qed.
Lemma lem3528379 {_90715 B : Type'} (_37166 : type627 _90715 B) (u : _90715 -> Prop) (t : type178 _90715) (f : _90715 -> B) : (term4171 _90715 B _37166 u f t) = (term4158 _90715 B _37166 u t f).
Proof. exact (eq_refl (term4171 _90715 B _37166 u f t)). Qed.
Lemma lem3528380 {_90715 B : Type'} (_37166 : type627 _90715 B) (u : _90715 -> Prop) (t : type178 _90715) (f : _90715 -> B) : (term4170 _90715 B _37166 u f t) = (term4158 _90715 B _37166 u t f).
Proof. exact (TRANS (@lem3528378 _90715 B _37166 u f t) (@lem3528379 _90715 B _37166 u t f)). Qed.
Lemma lem3528381 {_90715 B : Type'} (_37166 : type627 _90715 B) (u : _90715 -> Prop) (f : _90715 -> B) : (term4172 _90715 B _37166 u f) = (term4160 _90715 B _37166 u f).
Proof. exact (fun_ext (fun t : type178 _90715 => @lem3528380 _90715 B _37166 u t f)). Qed.
Lemma lem3528382 {_90715 : Type'} : (@ex (((_90715 -> Prop) -> Prop) -> _90715 -> Prop)) = (@ex (((_90715 -> Prop) -> Prop) -> _90715 -> Prop)).
Proof. exact (eq_refl (@ex (((_90715 -> Prop) -> Prop) -> _90715 -> Prop))). Qed.
Lemma lem3528383 {_90715 B : Type'} (_37166 : type627 _90715 B) (u : _90715 -> Prop) (f : _90715 -> B) : (term4173 _90715 B _37166 u f) = (term4161 _90715 B _37166 u f).
Proof. exact (MK_COMB (@lem3528382 _90715) (@lem3528381 _90715 B _37166 u f)). Qed.
Lemma lem3528384 {_90715 B : Type'} (_37166 : type627 _90715 B) (u : _90715 -> Prop) : (term4174 _90715 B _37166 u) = (term4162 _90715 B _37166 u).
Proof. exact (fun_ext (fun f : _90715 -> B => @lem3528383 _90715 B _37166 u f)). Qed.
Lemma lem3528385 {_90715 B : Type'} : (@all (_90715 -> B)) = (@all (_90715 -> B)).
Proof. exact (eq_refl (@all (_90715 -> B))). Qed.
Lemma lem3528386 {_90715 B : Type'} (_37166 : type627 _90715 B) (u : _90715 -> Prop) : (term4166 _90715 B _37166 u) = (term4163 _90715 B _37166 u).
Proof. exact (MK_COMB (@lem3528385 _90715 B) (@lem3528384 _90715 B _37166 u)). Qed.
Lemma lem3528387 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem3528388 {_90715 B : Type'} (_37166 : type627 _90715 B) (u : _90715 -> Prop) : (term4175 _90715 B _37166 u) = (term4176 _90715 B _37166 u).
Proof. exact (MK_COMB (@lem3528387) (@lem3528386 _90715 B _37166 u)). Qed.
Lemma lem3528389 {_90715 B : Type'} (_37166 : type627 _90715 B) (u : _90715 -> Prop) (f : _90715 -> B) : (term4169 _90715 B _37166 u f) = (term4160 _90715 B _37166 u f).
Proof. exact (eq_refl (term4169 _90715 B _37166 u f)). Qed.
Lemma lem3528390 {_90715 B : Type'} (t : type504 _90715 B) (f : _90715 -> B) : (t f) = (t f).
Proof. exact (eq_refl (t f)). Qed.
Lemma lem3528391 {_90715 B : Type'} (_37166 : type627 _90715 B) (u : _90715 -> Prop) (t : type504 _90715 B) (f : _90715 -> B) : (term4177 _90715 B _37166 u t f) = (term4178 _90715 B _37166 u t f).
Proof. exact (MK_COMB (@lem3528389 _90715 B _37166 u f) (@lem3528390 _90715 B t f)). Qed.
Lemma lem3528392 {_90715 B : Type'} (_37166 : type627 _90715 B) (u : _90715 -> Prop) (t : type504 _90715 B) (f : _90715 -> B) : (term4178 _90715 B _37166 u t f) = (term4179 _90715 B _37166 u t f).
Proof. exact (eq_refl (term4178 _90715 B _37166 u t f)). Qed.
Lemma lem3528393 {_90715 B : Type'} (_37166 : type627 _90715 B) (u : _90715 -> Prop) (t : type504 _90715 B) (f : _90715 -> B) : (term4177 _90715 B _37166 u t f) = (term4179 _90715 B _37166 u t f).
Proof. exact (TRANS (@lem3528391 _90715 B _37166 u t f) (@lem3528392 _90715 B _37166 u t f)). Qed.
Lemma lem3528394 {_90715 B : Type'} (_37166 : type627 _90715 B) (u : _90715 -> Prop) (t : type504 _90715 B) : (term4180 _90715 B _37166 u t) = (term4181 _90715 B _37166 u t).
Proof. exact (fun_ext (fun f : _90715 -> B => @lem3528393 _90715 B _37166 u t f)). Qed.
Lemma lem3528395 {_90715 B : Type'} : (@all (_90715 -> B)) = (@all (_90715 -> B)).
Proof. exact (eq_refl (@all (_90715 -> B))). Qed.
Lemma lem3528396 {_90715 B : Type'} (_37166 : type627 _90715 B) (u : _90715 -> Prop) (t : type504 _90715 B) : (term4182 _90715 B _37166 u t) = (term4183 _90715 B _37166 u t).
Proof. exact (MK_COMB (@lem3528395 _90715 B) (@lem3528394 _90715 B _37166 u t)). Qed.
Lemma lem3528397 {_90715 B : Type'} (_37166 : type627 _90715 B) (u : _90715 -> Prop) : (term4184 _90715 B _37166 u) = (term4185 _90715 B _37166 u).
Proof. exact (fun_ext (fun t : type504 _90715 B => @lem3528396 _90715 B _37166 u t)). Qed.
Lemma lem3528398 {_90715 B : Type'} : (@ex ((_90715 -> B) -> ((_90715 -> Prop) -> Prop) -> _90715 -> Prop)) = (@ex ((_90715 -> B) -> ((_90715 -> Prop) -> Prop) -> _90715 -> Prop)).
Proof. exact (eq_refl (@ex ((_90715 -> B) -> ((_90715 -> Prop) -> Prop) -> _90715 -> Prop))). Qed.
Lemma lem3528399 {_90715 B : Type'} (_37166 : type627 _90715 B) (u : _90715 -> Prop) : (term4167 _90715 B _37166 u) = (term4186 _90715 B _37166 u).
Proof. exact (MK_COMB (@lem3528398 _90715 B) (@lem3528397 _90715 B _37166 u)). Qed.
Lemma lem3528400 {_90715 B : Type'} (_37166 : type627 _90715 B) (u : _90715 -> Prop) : ((term4166 _90715 B _37166 u) = (term4167 _90715 B _37166 u)) = ((term4163 _90715 B _37166 u) = (term4186 _90715 B _37166 u)).
Proof. exact (MK_COMB (@lem3528388 _90715 B _37166 u) (@lem3528399 _90715 B _37166 u)). Qed.
Lemma lem3528401 {_90715 B : Type'} (_37166 : type627 _90715 B) (u : _90715 -> Prop) : (term4163 _90715 B _37166 u) = (term4186 _90715 B _37166 u).
Proof. exact (EQ_MP (@lem3528400 _90715 B _37166 u) (@lem3528375 _90715 B _37166 u)). Qed.
Lemma lem3528402 {_90715 B : Type'} (_37166 : type627 _90715 B) (u : _90715 -> Prop) : (term4105 _90715 B _37166 u) = (term4186 _90715 B _37166 u).
Proof. exact (TRANS (@lem3528371 _90715 B _37166 u) (@lem3528401 _90715 B _37166 u)). Qed.
Lemma lem3528403 {_90715 B : Type'} (_37166 : type627 _90715 B) : (term4106 _90715 B _37166) = (term4187 _90715 B _37166).
Proof. exact (fun_ext (fun u : _90715 -> Prop => @lem3528402 _90715 B _37166 u)). Qed.
Lemma lem3528404 {_90715 : Type'} : (@all (_90715 -> Prop)) = (@all (_90715 -> Prop)).
Proof. exact (eq_refl (@all (_90715 -> Prop))). Qed.
Lemma lem3528405 {_90715 B : Type'} (_37166 : type627 _90715 B) : (term4107 _90715 B _37166) = (term4188 _90715 B _37166).
Proof. exact (MK_COMB (@lem3528404 _90715) (@lem3528403 _90715 B _37166)). Qed.
Lemma lem3528407 {A B : Type'} (P : type1413 A B) : (term453 A B P) = (term454 A B P).
Proof. exact (EQ_MP (@lem18899 A B P) (@lem18898 A B P)). Qed.
Lemma lem3528408 {_90715 B : Type'} (P : type588 _90715 B) : (term4189 _90715 B P) = (term4190 _90715 B P).
Proof. exact (@lem3528407 (_90715 -> Prop) (type504 _90715 B) P). Qed.
Lemma lem3528409 {_90715 B : Type'} (_37166 : type627 _90715 B) : (term4191 _90715 B _37166) = (term4192 _90715 B _37166).
Proof. exact (@lem3528408 _90715 B (term4193 _90715 B _37166)). Qed.
Lemma lem3528410 {_90715 B : Type'} (_37166 : type627 _90715 B) (u : _90715 -> Prop) : (term4194 _90715 B _37166 u) = (term4185 _90715 B _37166 u).
Proof. exact (eq_refl (term4194 _90715 B _37166 u)). Qed.
Lemma lem3528411 {_90715 B : Type'} (t : type504 _90715 B) : t = t.
Proof. exact (eq_refl t). Qed.
Lemma lem3528412 {_90715 B : Type'} (_37166 : type627 _90715 B) (u : _90715 -> Prop) (t : type504 _90715 B) : (term4195 _90715 B _37166 u t) = (term4196 _90715 B _37166 u t).
Proof. exact (MK_COMB (@lem3528410 _90715 B _37166 u) (@lem3528411 _90715 B t)). Qed.
Lemma lem3528413 {_90715 B : Type'} (_37166 : type627 _90715 B) (u : _90715 -> Prop) (t : type504 _90715 B) : (term4196 _90715 B _37166 u t) = (term4183 _90715 B _37166 u t).
Proof. exact (eq_refl (term4196 _90715 B _37166 u t)). Qed.
Lemma lem3528414 {_90715 B : Type'} (_37166 : type627 _90715 B) (u : _90715 -> Prop) (t : type504 _90715 B) : (term4195 _90715 B _37166 u t) = (term4183 _90715 B _37166 u t).
Proof. exact (TRANS (@lem3528412 _90715 B _37166 u t) (@lem3528413 _90715 B _37166 u t)). Qed.
Lemma lem3528415 {_90715 B : Type'} (_37166 : type627 _90715 B) (u : _90715 -> Prop) : (term4197 _90715 B _37166 u) = (term4185 _90715 B _37166 u).
Proof. exact (fun_ext (fun t : type504 _90715 B => @lem3528414 _90715 B _37166 u t)). Qed.
Lemma lem3528416 {_90715 B : Type'} : (@ex ((_90715 -> B) -> ((_90715 -> Prop) -> Prop) -> _90715 -> Prop)) = (@ex ((_90715 -> B) -> ((_90715 -> Prop) -> Prop) -> _90715 -> Prop)).
Proof. exact (eq_refl (@ex ((_90715 -> B) -> ((_90715 -> Prop) -> Prop) -> _90715 -> Prop))). Qed.
Lemma lem3528417 {_90715 B : Type'} (_37166 : type627 _90715 B) (u : _90715 -> Prop) : (term4198 _90715 B _37166 u) = (term4186 _90715 B _37166 u).
Proof. exact (MK_COMB (@lem3528416 _90715 B) (@lem3528415 _90715 B _37166 u)). Qed.
Lemma lem3528418 {_90715 B : Type'} (_37166 : type627 _90715 B) : (term4199 _90715 B _37166) = (term4187 _90715 B _37166).
Proof. exact (fun_ext (fun u : _90715 -> Prop => @lem3528417 _90715 B _37166 u)). Qed.
Lemma lem3528419 {_90715 : Type'} : (@all (_90715 -> Prop)) = (@all (_90715 -> Prop)).
Proof. exact (eq_refl (@all (_90715 -> Prop))). Qed.
Lemma lem3528420 {_90715 B : Type'} (_37166 : type627 _90715 B) : (term4191 _90715 B _37166) = (term4188 _90715 B _37166).
Proof. exact (MK_COMB (@lem3528419 _90715) (@lem3528418 _90715 B _37166)). Qed.
Lemma lem3528421 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem3528422 {_90715 B : Type'} (_37166 : type627 _90715 B) : (term4200 _90715 B _37166) = (term4201 _90715 B _37166).
Proof. exact (MK_COMB (@lem3528421) (@lem3528420 _90715 B _37166)). Qed.
Lemma lem3528423 {_90715 B : Type'} (_37166 : type627 _90715 B) (u : _90715 -> Prop) : (term4194 _90715 B _37166 u) = (term4185 _90715 B _37166 u).
Proof. exact (eq_refl (term4194 _90715 B _37166 u)). Qed.
Lemma lem3528424 {_90715 B : Type'} (t : type625 _90715 B) (u : _90715 -> Prop) : (t u) = (t u).
Proof. exact (eq_refl (t u)). Qed.
Lemma lem3528425 {_90715 B : Type'} (_37166 : type627 _90715 B) (t : type625 _90715 B) (u : _90715 -> Prop) : (term4202 _90715 B _37166 t u) = (term4203 _90715 B _37166 t u).
Proof. exact (MK_COMB (@lem3528423 _90715 B _37166 u) (@lem3528424 _90715 B t u)). Qed.
Lemma lem3528426 {_90715 B : Type'} (_37166 : type627 _90715 B) (t : type625 _90715 B) (u : _90715 -> Prop) : (term4203 _90715 B _37166 t u) = (term4204 _90715 B _37166 t u).
Proof. exact (eq_refl (term4203 _90715 B _37166 t u)). Qed.
Lemma lem3528427 {_90715 B : Type'} (_37166 : type627 _90715 B) (t : type625 _90715 B) (u : _90715 -> Prop) : (term4202 _90715 B _37166 t u) = (term4204 _90715 B _37166 t u).
Proof. exact (TRANS (@lem3528425 _90715 B _37166 t u) (@lem3528426 _90715 B _37166 t u)). Qed.
Lemma lem3528428 {_90715 B : Type'} (_37166 : type627 _90715 B) (t : type625 _90715 B) : (term4205 _90715 B _37166 t) = (term4206 _90715 B _37166 t).
Proof. exact (fun_ext (fun u : _90715 -> Prop => @lem3528427 _90715 B _37166 t u)). Qed.
Lemma lem3528429 {_90715 : Type'} : (@all (_90715 -> Prop)) = (@all (_90715 -> Prop)).
Proof. exact (eq_refl (@all (_90715 -> Prop))). Qed.
Lemma lem3528430 {_90715 B : Type'} (_37166 : type627 _90715 B) (t : type625 _90715 B) : (term4207 _90715 B _37166 t) = (term4208 _90715 B _37166 t).
Proof. exact (MK_COMB (@lem3528429 _90715) (@lem3528428 _90715 B _37166 t)). Qed.
Lemma lem3528431 {_90715 B : Type'} (_37166 : type627 _90715 B) : (term4209 _90715 B _37166) = (term4210 _90715 B _37166).
Proof. exact (fun_ext (fun t : type625 _90715 B => @lem3528430 _90715 B _37166 t)). Qed.
Lemma lem3528432 {_90715 B : Type'} : (@ex ((_90715 -> Prop) -> (_90715 -> B) -> ((_90715 -> Prop) -> Prop) -> _90715 -> Prop)) = (@ex ((_90715 -> Prop) -> (_90715 -> B) -> ((_90715 -> Prop) -> Prop) -> _90715 -> Prop)).
Proof. exact (eq_refl (@ex ((_90715 -> Prop) -> (_90715 -> B) -> ((_90715 -> Prop) -> Prop) -> _90715 -> Prop))). Qed.
Lemma lem3528433 {_90715 B : Type'} (_37166 : type627 _90715 B) : (term4192 _90715 B _37166) = (term4211 _90715 B _37166).
Proof. exact (MK_COMB (@lem3528432 _90715 B) (@lem3528431 _90715 B _37166)). Qed.
Lemma lem3528434 {_90715 B : Type'} (_37166 : type627 _90715 B) : ((term4191 _90715 B _37166) = (term4192 _90715 B _37166)) = ((term4188 _90715 B _37166) = (term4211 _90715 B _37166)).
Proof. exact (MK_COMB (@lem3528422 _90715 B _37166) (@lem3528433 _90715 B _37166)). Qed.
Lemma lem3528435 {_90715 B : Type'} (_37166 : type627 _90715 B) : (term4188 _90715 B _37166) = (term4211 _90715 B _37166).
Proof. exact (EQ_MP (@lem3528434 _90715 B _37166) (@lem3528409 _90715 B _37166)). Qed.
Lemma lem3528437 {_90715 B : Type'} (_37166 : type627 _90715 B) : (term4107 _90715 B _37166) = (term4211 _90715 B _37166).
Proof. exact (TRANS (@lem3528405 _90715 B _37166) (@lem3528435 _90715 B _37166)). Qed.
Lemma lem3528438 {_90715 B : Type'} (_37166 : type627 _90715 B) : (term2095 _90715 B _37166) = (term4211 _90715 B _37166).
Proof. exact (TRANS (@lem3528180 _90715 B _37166) (@lem3528437 _90715 B _37166)). Qed.
Lemma lem3528439 {_90715 B : Type'} (_37166 : type627 _90715 B) (h1 : term2095 _90715 B _37166) : term4211 _90715 B _37166.
Proof. exact (EQ_MP (@lem3528438 _90715 B _37166) (@lem3520022 _90715 B _37166 h1)). Qed.
Lemma lem3528442 {_90715 : Type'} (g : type686 _90715) : (term4079 _90715 g) = (g = (@EMPTY (_90715 -> Prop))).
Proof. exact (@lem16933 (g = (@EMPTY (_90715 -> Prop)))). Qed.
Lemma lem3528450 {_90715 A : Type'} (_37167 : type616 _90715 A) (u : _90715 -> Prop) (f : type1413 _90715 A) (t : _90715 -> Prop) : (term4212 _90715 A _37167 u f t) = (term4213 _90715 A _37167 u f t).
Proof. exact (@lem17045 (@SUBSET _90715 t u) (term2337 _90715 A _37167 u f t)). Qed.
Lemma lem3528452 {_90715 : Type'} (t : _90715 -> Prop) (g : type686 _90715) : (term4082 _90715 t g) = (term4082 _90715 t g).
Proof. exact (eq_refl (term4082 _90715 t g)). Qed.
Lemma lem3528453 {_90715 A : Type'} (g : type686 _90715) (_37167 : type616 _90715 A) (u : _90715 -> Prop) (f : type1413 _90715 A) (t : _90715 -> Prop) : (term4214 _90715 A g _37167 u f t) = (term4215 _90715 A g _37167 u f t).
Proof. exact (MK_COMB (@lem3528452 _90715 t g) (@lem3528450 _90715 A _37167 u f t)). Qed.
Lemma lem3528454 {_90715 A : Type'} (g : type686 _90715) (_37167 : type616 _90715 A) (u : _90715 -> Prop) (f : type1413 _90715 A) (t : _90715 -> Prop) : (term4216 _90715 A g _37167 u f t) = (term4214 _90715 A g _37167 u f t).
Proof. exact (@lem17362 (@IN (_90715 -> Prop) t g) (term2338 _90715 A _37167 u f t)). Qed.
Lemma lem3528455 {_90715 A : Type'} (g : type686 _90715) (_37167 : type616 _90715 A) (u : _90715 -> Prop) (f : type1413 _90715 A) (t : _90715 -> Prop) : (term4216 _90715 A g _37167 u f t) = (term4215 _90715 A g _37167 u f t).
Proof. exact (TRANS (@lem3528454 _90715 A g _37167 u f t) (@lem3528453 _90715 A g _37167 u f t)). Qed.
Lemma lem3528456 {_90715 : Type'} (P : type686 _90715) : (term298 _90715 P) = (term299 _90715 P).
Proof. exact (@lem18392 (_90715 -> Prop) P). Qed.
Lemma lem3528457 {_90715 A : Type'} (g : type686 _90715) (_37167 : type616 _90715 A) (u : _90715 -> Prop) (f : type1413 _90715 A) : (term4217 _90715 A g _37167 u f) = (term4218 _90715 A g _37167 u f).
Proof. exact (@lem3528456 _90715 (term2340 _90715 A g _37167 u f)). Qed.
Lemma lem3528458 {_90715 A : Type'} (g : type686 _90715) (_37167 : type616 _90715 A) (u : _90715 -> Prop) (f : type1413 _90715 A) (t : _90715 -> Prop) : (term4219 _90715 A g _37167 u f t) = (term2339 _90715 A g _37167 u f t).
Proof. exact (eq_refl (term4219 _90715 A g _37167 u f t)). Qed.
Lemma lem3528459 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem3528460 {_90715 A : Type'} (g : type686 _90715) (_37167 : type616 _90715 A) (u : _90715 -> Prop) (f : type1413 _90715 A) (t : _90715 -> Prop) : (term4220 _90715 A g _37167 u f t) = (term4216 _90715 A g _37167 u f t).
Proof. exact (MK_COMB (@lem3528459) (@lem3528458 _90715 A g _37167 u f t)). Qed.
Lemma lem3528461 {_90715 A : Type'} (g : type686 _90715) (_37167 : type616 _90715 A) (u : _90715 -> Prop) (f : type1413 _90715 A) (t : _90715 -> Prop) : (term4220 _90715 A g _37167 u f t) = (term4215 _90715 A g _37167 u f t).
Proof. exact (TRANS (@lem3528460 _90715 A g _37167 u f t) (@lem3528455 _90715 A g _37167 u f t)). Qed.
Lemma lem3528462 {_90715 A : Type'} (g : type686 _90715) (_37167 : type616 _90715 A) (u : _90715 -> Prop) (f : type1413 _90715 A) : (term4221 _90715 A g _37167 u f) = (term4222 _90715 A g _37167 u f).
Proof. exact (fun_ext (fun t : _90715 -> Prop => @lem3528461 _90715 A g _37167 u f t)). Qed.
Lemma lem3528463 {_90715 : Type'} : (@ex (_90715 -> Prop)) = (@ex (_90715 -> Prop)).
Proof. exact (eq_refl (@ex (_90715 -> Prop))). Qed.
Lemma lem3528464 {_90715 A : Type'} (g : type686 _90715) (_37167 : type616 _90715 A) (u : _90715 -> Prop) (f : type1413 _90715 A) : (term4218 _90715 A g _37167 u f) = (term4223 _90715 A g _37167 u f).
Proof. exact (MK_COMB (@lem3528463 _90715) (@lem3528462 _90715 A g _37167 u f)). Qed.
Lemma lem3528465 {_90715 A : Type'} (g : type686 _90715) (_37167 : type616 _90715 A) (u : _90715 -> Prop) (f : type1413 _90715 A) : (term4217 _90715 A g _37167 u f) = (term4223 _90715 A g _37167 u f).
Proof. exact (TRANS (@lem3528457 _90715 A g _37167 u f) (@lem3528464 _90715 A g _37167 u f)). Qed.
Lemma lem3528466 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem3528467 {_90715 : Type'} (g : type686 _90715) : (term4093 _90715 g) = (term4094 _90715 g).
Proof. exact (MK_COMB (@lem3528466) (@lem3528442 _90715 g)). Qed.
Lemma lem3528468 {_90715 A : Type'} (g : type686 _90715) (_37167 : type616 _90715 A) (u : _90715 -> Prop) (f : type1413 _90715 A) : (term4224 _90715 A g _37167 u f) = (term4225 _90715 A g _37167 u f).
Proof. exact (MK_COMB (@lem3528467 _90715 g) (@lem3528465 _90715 A g _37167 u f)). Qed.
Lemma lem3528469 {_90715 A : Type'} (g : type686 _90715) (_37167 : type616 _90715 A) (u : _90715 -> Prop) (f : type1413 _90715 A) : (term4226 _90715 A g _37167 u f) = (term4224 _90715 A g _37167 u f).
Proof. exact (@lem17045 (term40 _90715 g) (term2341 _90715 A g _37167 u f)). Qed.
Lemma lem3528470 {_90715 A : Type'} (g : type686 _90715) (_37167 : type616 _90715 A) (u : _90715 -> Prop) (f : type1413 _90715 A) : (term4226 _90715 A g _37167 u f) = (term4225 _90715 A g _37167 u f).
Proof. exact (TRANS (@lem3528469 _90715 A g _37167 u f) (@lem3528468 _90715 A g _37167 u f)). Qed.
Lemma lem3528471 {_90715 A : Type'} (f : type1413 _90715 A) (g : type686 _90715) : ((term2099 _90715 A f g) = (term2100 _90715 A f g)) = ((term2099 _90715 A f g) = (term2100 _90715 A f g)).
Proof. exact (eq_refl ((term2099 _90715 A f g) = (term2100 _90715 A f g))). Qed.
Lemma lem3528472 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem3528473 {_90715 A : Type'} (g : type686 _90715) (_37167 : type616 _90715 A) (u : _90715 -> Prop) (f : type1413 _90715 A) : (term4227 _90715 A g _37167 u f) = (term4228 _90715 A g _37167 u f).
Proof. exact (MK_COMB (@lem3528472) (@lem3528470 _90715 A g _37167 u f)). Qed.
Lemma lem3528474 {_90715 A : Type'} (_37167 : type616 _90715 A) (u : _90715 -> Prop) (f : type1413 _90715 A) (g : type686 _90715) : (term4229 _90715 A _37167 u f g) = (term4230 _90715 A _37167 u f g).
Proof. exact (MK_COMB (@lem3528473 _90715 A g _37167 u f) (@lem3528471 _90715 A f g)). Qed.
Lemma lem3528475 {_90715 A : Type'} (_37167 : type616 _90715 A) (u : _90715 -> Prop) (f : type1413 _90715 A) (g : type686 _90715) : (term2344 _90715 A _37167 u f g) = (term4229 _90715 A _37167 u f g).
Proof. exact (@lem17265 (term2342 _90715 A g _37167 u f) ((term2099 _90715 A f g) = (term2100 _90715 A f g))). Qed.
Lemma lem3528476 {_90715 A : Type'} (_37167 : type616 _90715 A) (u : _90715 -> Prop) (f : type1413 _90715 A) (g : type686 _90715) : (term2344 _90715 A _37167 u f g) = (term4230 _90715 A _37167 u f g).
Proof. exact (TRANS (@lem3528475 _90715 A _37167 u f g) (@lem3528474 _90715 A _37167 u f g)). Qed.
Lemma lem3528477 {_90715 A : Type'} (_37167 : type616 _90715 A) (u : _90715 -> Prop) (f : type1413 _90715 A) : (term2345 _90715 A _37167 u f) = (term4231 _90715 A _37167 u f).
Proof. exact (fun_ext (fun g : type686 _90715 => @lem3528476 _90715 A _37167 u f g)). Qed.
Lemma lem3528478 {_90715 : Type'} : (@all ((_90715 -> Prop) -> Prop)) = (@all ((_90715 -> Prop) -> Prop)).
Proof. exact (eq_refl (@all ((_90715 -> Prop) -> Prop))). Qed.
Lemma lem3528479 {_90715 A : Type'} (_37167 : type616 _90715 A) (u : _90715 -> Prop) (f : type1413 _90715 A) : (term2346 _90715 A _37167 u f) = (term4232 _90715 A _37167 u f).
Proof. exact (MK_COMB (@lem3528478 _90715) (@lem3528477 _90715 A _37167 u f)). Qed.
Lemma lem3528480 {_90715 A : Type'} (_37167 : type616 _90715 A) (u : _90715 -> Prop) : (term2347 _90715 A _37167 u) = (term4233 _90715 A _37167 u).
Proof. exact (fun_ext (fun f : type1413 _90715 A => @lem3528479 _90715 A _37167 u f)). Qed.
Lemma lem3528481 {_90715 A : Type'} : (@all (_90715 -> A -> Prop)) = (@all (_90715 -> A -> Prop)).
Proof. exact (eq_refl (@all (_90715 -> A -> Prop))). Qed.
Lemma lem3528482 {_90715 A : Type'} (_37167 : type616 _90715 A) (u : _90715 -> Prop) : (term2348 _90715 A _37167 u) = (term4234 _90715 A _37167 u).
Proof. exact (MK_COMB (@lem3528481 _90715 A) (@lem3528480 _90715 A _37167 u)). Qed.
Lemma lem3528483 {_90715 A : Type'} (_37167 : type616 _90715 A) : (term2349 _90715 A _37167) = (term4235 _90715 A _37167).
Proof. exact (fun_ext (fun u : _90715 -> Prop => @lem3528482 _90715 A _37167 u)). Qed.
Lemma lem3528484 {_90715 : Type'} : (@all (_90715 -> Prop)) = (@all (_90715 -> Prop)).
Proof. exact (eq_refl (@all (_90715 -> Prop))). Qed.
Lemma lem3528485 {_90715 A : Type'} (_37167 : type616 _90715 A) : (term2350 _90715 A _37167) = (term4236 _90715 A _37167).
Proof. exact (MK_COMB (@lem3528484 _90715) (@lem3528483 _90715 A _37167)). Qed.
Lemma lem3528592 {A : Type'} (P : Prop) (Q : A -> Prop) : (term434 A P Q) = (term435 A P Q).
Proof. exact (EQ_MP (@lem18911 A P Q) (@lem18910 A P Q)). Qed.
Lemma lem3528593 {_90715 : Type'} (P : Prop) (Q : type686 _90715) : (term436 _90715 P Q) = (term437 _90715 P Q).
Proof. exact (@lem3528592 (_90715 -> Prop) P Q). Qed.
Lemma lem3528594 {_90715 A : Type'} (g : type686 _90715) (_37167 : type616 _90715 A) (u : _90715 -> Prop) (f : type1413 _90715 A) : (term4237 _90715 A g _37167 u f) = (term4238 _90715 A g _37167 u f).
Proof. exact (@lem3528593 _90715 (g = (@EMPTY (_90715 -> Prop))) (term4222 _90715 A g _37167 u f)). Qed.
Lemma lem3528595 {_90715 A : Type'} (g : type686 _90715) (_37167 : type616 _90715 A) (u : _90715 -> Prop) (f : type1413 _90715 A) (t : _90715 -> Prop) : (term4239 _90715 A g _37167 u f t) = (term4215 _90715 A g _37167 u f t).
Proof. exact (eq_refl (term4239 _90715 A g _37167 u f t)). Qed.
Lemma lem3528596 {_90715 A : Type'} (g : type686 _90715) (_37167 : type616 _90715 A) (u : _90715 -> Prop) (f : type1413 _90715 A) : (term4240 _90715 A g _37167 u f) = (term4222 _90715 A g _37167 u f).
Proof. exact (fun_ext (fun t : _90715 -> Prop => @lem3528595 _90715 A g _37167 u f t)). Qed.
Lemma lem3528597 {_90715 : Type'} : (@ex (_90715 -> Prop)) = (@ex (_90715 -> Prop)).
Proof. exact (eq_refl (@ex (_90715 -> Prop))). Qed.
Lemma lem3528598 {_90715 A : Type'} (g : type686 _90715) (_37167 : type616 _90715 A) (u : _90715 -> Prop) (f : type1413 _90715 A) : (term4241 _90715 A g _37167 u f) = (term4223 _90715 A g _37167 u f).
Proof. exact (MK_COMB (@lem3528597 _90715) (@lem3528596 _90715 A g _37167 u f)). Qed.
Lemma lem3528599 {_90715 : Type'} (g : type686 _90715) : (term4094 _90715 g) = (term4094 _90715 g).
Proof. exact (eq_refl (term4094 _90715 g)). Qed.
Lemma lem3528600 {_90715 A : Type'} (g : type686 _90715) (_37167 : type616 _90715 A) (u : _90715 -> Prop) (f : type1413 _90715 A) : (term4237 _90715 A g _37167 u f) = (term4225 _90715 A g _37167 u f).
Proof. exact (MK_COMB (@lem3528599 _90715 g) (@lem3528598 _90715 A g _37167 u f)). Qed.
Lemma lem3528601 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem3528602 {_90715 A : Type'} (g : type686 _90715) (_37167 : type616 _90715 A) (u : _90715 -> Prop) (f : type1413 _90715 A) : (term4242 _90715 A g _37167 u f) = (term4243 _90715 A g _37167 u f).
Proof. exact (MK_COMB (@lem3528601) (@lem3528600 _90715 A g _37167 u f)). Qed.
Lemma lem3528603 {_90715 A : Type'} (g : type686 _90715) (_37167 : type616 _90715 A) (u : _90715 -> Prop) (f : type1413 _90715 A) (t : _90715 -> Prop) : (term4239 _90715 A g _37167 u f t) = (term4215 _90715 A g _37167 u f t).
Proof. exact (eq_refl (term4239 _90715 A g _37167 u f t)). Qed.
Lemma lem3528604 {_90715 : Type'} (g : type686 _90715) : (term4094 _90715 g) = (term4094 _90715 g).
Proof. exact (eq_refl (term4094 _90715 g)). Qed.
Lemma lem3528605 {_90715 A : Type'} (g : type686 _90715) (_37167 : type616 _90715 A) (u : _90715 -> Prop) (f : type1413 _90715 A) (t : _90715 -> Prop) : (term4244 _90715 A g _37167 u f t) = (term4245 _90715 A g _37167 u f t).
Proof. exact (MK_COMB (@lem3528604 _90715 g) (@lem3528603 _90715 A g _37167 u f t)). Qed.
Lemma lem3528606 {_90715 A : Type'} (g : type686 _90715) (_37167 : type616 _90715 A) (u : _90715 -> Prop) (f : type1413 _90715 A) : (term4246 _90715 A g _37167 u f) = (term4247 _90715 A g _37167 u f).
Proof. exact (fun_ext (fun t : _90715 -> Prop => @lem3528605 _90715 A g _37167 u f t)). Qed.
Lemma lem3528607 {_90715 : Type'} : (@ex (_90715 -> Prop)) = (@ex (_90715 -> Prop)).
Proof. exact (eq_refl (@ex (_90715 -> Prop))). Qed.
Lemma lem3528608 {_90715 A : Type'} (g : type686 _90715) (_37167 : type616 _90715 A) (u : _90715 -> Prop) (f : type1413 _90715 A) : (term4238 _90715 A g _37167 u f) = (term4248 _90715 A g _37167 u f).
Proof. exact (MK_COMB (@lem3528607 _90715) (@lem3528606 _90715 A g _37167 u f)). Qed.
Lemma lem3528609 {_90715 A : Type'} (g : type686 _90715) (_37167 : type616 _90715 A) (u : _90715 -> Prop) (f : type1413 _90715 A) : ((term4237 _90715 A g _37167 u f) = (term4238 _90715 A g _37167 u f)) = ((term4225 _90715 A g _37167 u f) = (term4248 _90715 A g _37167 u f)).
Proof. exact (MK_COMB (@lem3528602 _90715 A g _37167 u f) (@lem3528608 _90715 A g _37167 u f)). Qed.
Lemma lem3528610 {_90715 A : Type'} (g : type686 _90715) (_37167 : type616 _90715 A) (u : _90715 -> Prop) (f : type1413 _90715 A) : (term4225 _90715 A g _37167 u f) = (term4248 _90715 A g _37167 u f).
Proof. exact (EQ_MP (@lem3528609 _90715 A g _37167 u f) (@lem3528594 _90715 A g _37167 u f)). Qed.
Lemma lem3528611 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem3528612 {_90715 A : Type'} (g : type686 _90715) (_37167 : type616 _90715 A) (u : _90715 -> Prop) (f : type1413 _90715 A) : (term4228 _90715 A g _37167 u f) = (term4249 _90715 A g _37167 u f).
Proof. exact (MK_COMB (@lem3528611) (@lem3528610 _90715 A g _37167 u f)). Qed.
Lemma lem3528613 {_90715 A : Type'} (f : type1413 _90715 A) (g : type686 _90715) : ((term2099 _90715 A f g) = (term2100 _90715 A f g)) = ((term2099 _90715 A f g) = (term2100 _90715 A f g)).
Proof. exact (eq_refl ((term2099 _90715 A f g) = (term2100 _90715 A f g))). Qed.
Lemma lem3528614 {_90715 A : Type'} (_37167 : type616 _90715 A) (u : _90715 -> Prop) (f : type1413 _90715 A) (g : type686 _90715) : (term4230 _90715 A _37167 u f g) = (term4250 _90715 A _37167 u f g).
Proof. exact (MK_COMB (@lem3528612 _90715 A g _37167 u f) (@lem3528613 _90715 A f g)). Qed.
Lemma lem3528616 {A : Type'} (P : A -> Prop) (Q : Prop) : (term550 A P Q) = (term551 A P Q).
Proof. exact (EQ_MP (@lem18905 A P Q) (@lem18904 A P Q)). Qed.
Lemma lem3528617 {_90715 : Type'} (P : type686 _90715) (Q : Prop) : (term567 _90715 P Q) = (term568 _90715 P Q).
Proof. exact (@lem3528616 (_90715 -> Prop) P Q). Qed.
Lemma lem3528618 {_90715 A : Type'} (_37167 : type616 _90715 A) (u : _90715 -> Prop) (f : type1413 _90715 A) (g : type686 _90715) : (term4251 _90715 A _37167 u f g) = (term4252 _90715 A _37167 u f g).
Proof. exact (@lem3528617 _90715 (term4247 _90715 A g _37167 u f) ((term2099 _90715 A f g) = (term2100 _90715 A f g))). Qed.
Lemma lem3528619 {_90715 A : Type'} (g : type686 _90715) (_37167 : type616 _90715 A) (u : _90715 -> Prop) (f : type1413 _90715 A) (t : _90715 -> Prop) : (term4253 _90715 A g _37167 u f t) = (term4245 _90715 A g _37167 u f t).
Proof. exact (eq_refl (term4253 _90715 A g _37167 u f t)). Qed.
Lemma lem3528620 {_90715 A : Type'} (g : type686 _90715) (_37167 : type616 _90715 A) (u : _90715 -> Prop) (f : type1413 _90715 A) : (term4254 _90715 A g _37167 u f) = (term4247 _90715 A g _37167 u f).
Proof. exact (fun_ext (fun t : _90715 -> Prop => @lem3528619 _90715 A g _37167 u f t)). Qed.
Lemma lem3528621 {_90715 : Type'} : (@ex (_90715 -> Prop)) = (@ex (_90715 -> Prop)).
Proof. exact (eq_refl (@ex (_90715 -> Prop))). Qed.
Lemma lem3528622 {_90715 A : Type'} (g : type686 _90715) (_37167 : type616 _90715 A) (u : _90715 -> Prop) (f : type1413 _90715 A) : (term4255 _90715 A g _37167 u f) = (term4248 _90715 A g _37167 u f).
Proof. exact (MK_COMB (@lem3528621 _90715) (@lem3528620 _90715 A g _37167 u f)). Qed.
Lemma lem3528623 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem3528624 {_90715 A : Type'} (g : type686 _90715) (_37167 : type616 _90715 A) (u : _90715 -> Prop) (f : type1413 _90715 A) : (term4256 _90715 A g _37167 u f) = (term4249 _90715 A g _37167 u f).
Proof. exact (MK_COMB (@lem3528623) (@lem3528622 _90715 A g _37167 u f)). Qed.
Lemma lem3528625 {_90715 A : Type'} (f : type1413 _90715 A) (g : type686 _90715) : ((term2099 _90715 A f g) = (term2100 _90715 A f g)) = ((term2099 _90715 A f g) = (term2100 _90715 A f g)).
Proof. exact (eq_refl ((term2099 _90715 A f g) = (term2100 _90715 A f g))). Qed.
Lemma lem3528626 {_90715 A : Type'} (_37167 : type616 _90715 A) (u : _90715 -> Prop) (f : type1413 _90715 A) (g : type686 _90715) : (term4251 _90715 A _37167 u f g) = (term4250 _90715 A _37167 u f g).
Proof. exact (MK_COMB (@lem3528624 _90715 A g _37167 u f) (@lem3528625 _90715 A f g)). Qed.
Lemma lem3528627 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem3528628 {_90715 A : Type'} (_37167 : type616 _90715 A) (u : _90715 -> Prop) (f : type1413 _90715 A) (g : type686 _90715) : (term4257 _90715 A _37167 u f g) = (term4258 _90715 A _37167 u f g).
Proof. exact (MK_COMB (@lem3528627) (@lem3528626 _90715 A _37167 u f g)). Qed.
Lemma lem3528629 {_90715 A : Type'} (g : type686 _90715) (_37167 : type616 _90715 A) (u : _90715 -> Prop) (f : type1413 _90715 A) (t : _90715 -> Prop) : (term4253 _90715 A g _37167 u f t) = (term4245 _90715 A g _37167 u f t).
Proof. exact (eq_refl (term4253 _90715 A g _37167 u f t)). Qed.
Lemma lem3528630 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem3528631 {_90715 A : Type'} (g : type686 _90715) (_37167 : type616 _90715 A) (u : _90715 -> Prop) (f : type1413 _90715 A) (t : _90715 -> Prop) : (term4259 _90715 A g _37167 u f t) = (term4260 _90715 A g _37167 u f t).
Proof. exact (MK_COMB (@lem3528630) (@lem3528629 _90715 A g _37167 u f t)). Qed.
Lemma lem3528632 {_90715 A : Type'} (f : type1413 _90715 A) (g : type686 _90715) : ((term2099 _90715 A f g) = (term2100 _90715 A f g)) = ((term2099 _90715 A f g) = (term2100 _90715 A f g)).
Proof. exact (eq_refl ((term2099 _90715 A f g) = (term2100 _90715 A f g))). Qed.
Lemma lem3528633 {_90715 A : Type'} (_37167 : type616 _90715 A) (u : _90715 -> Prop) (t : _90715 -> Prop) (f : type1413 _90715 A) (g : type686 _90715) : (term4261 _90715 A _37167 u t f g) = (term4262 _90715 A _37167 u t f g).
Proof. exact (MK_COMB (@lem3528631 _90715 A g _37167 u f t) (@lem3528632 _90715 A f g)). Qed.
Lemma lem3528634 {_90715 A : Type'} (_37167 : type616 _90715 A) (u : _90715 -> Prop) (f : type1413 _90715 A) (g : type686 _90715) : (term4263 _90715 A _37167 u f g) = (term4264 _90715 A _37167 u f g).
Proof. exact (fun_ext (fun t : _90715 -> Prop => @lem3528633 _90715 A _37167 u t f g)). Qed.
Lemma lem3528635 {_90715 : Type'} : (@ex (_90715 -> Prop)) = (@ex (_90715 -> Prop)).
Proof. exact (eq_refl (@ex (_90715 -> Prop))). Qed.
Lemma lem3528636 {_90715 A : Type'} (_37167 : type616 _90715 A) (u : _90715 -> Prop) (f : type1413 _90715 A) (g : type686 _90715) : (term4252 _90715 A _37167 u f g) = (term4265 _90715 A _37167 u f g).
Proof. exact (MK_COMB (@lem3528635 _90715) (@lem3528634 _90715 A _37167 u f g)). Qed.
Lemma lem3528637 {_90715 A : Type'} (_37167 : type616 _90715 A) (u : _90715 -> Prop) (f : type1413 _90715 A) (g : type686 _90715) : ((term4251 _90715 A _37167 u f g) = (term4252 _90715 A _37167 u f g)) = ((term4250 _90715 A _37167 u f g) = (term4265 _90715 A _37167 u f g)).
Proof. exact (MK_COMB (@lem3528628 _90715 A _37167 u f g) (@lem3528636 _90715 A _37167 u f g)). Qed.
Lemma lem3528638 {_90715 A : Type'} (_37167 : type616 _90715 A) (u : _90715 -> Prop) (f : type1413 _90715 A) (g : type686 _90715) : (term4250 _90715 A _37167 u f g) = (term4265 _90715 A _37167 u f g).
Proof. exact (EQ_MP (@lem3528637 _90715 A _37167 u f g) (@lem3528618 _90715 A _37167 u f g)). Qed.
Lemma lem3528639 {_90715 A : Type'} (_37167 : type616 _90715 A) (u : _90715 -> Prop) (f : type1413 _90715 A) (g : type686 _90715) : (term4230 _90715 A _37167 u f g) = (term4265 _90715 A _37167 u f g).
Proof. exact (TRANS (@lem3528614 _90715 A _37167 u f g) (@lem3528638 _90715 A _37167 u f g)). Qed.
Lemma lem3528640 {_90715 A : Type'} (_37167 : type616 _90715 A) (u : _90715 -> Prop) (f : type1413 _90715 A) : (term4231 _90715 A _37167 u f) = (term4266 _90715 A _37167 u f).
Proof. exact (fun_ext (fun g : type686 _90715 => @lem3528639 _90715 A _37167 u f g)). Qed.
Lemma lem3528641 {_90715 : Type'} : (@all ((_90715 -> Prop) -> Prop)) = (@all ((_90715 -> Prop) -> Prop)).
Proof. exact (eq_refl (@all ((_90715 -> Prop) -> Prop))). Qed.
Lemma lem3528642 {_90715 A : Type'} (_37167 : type616 _90715 A) (u : _90715 -> Prop) (f : type1413 _90715 A) : (term4232 _90715 A _37167 u f) = (term4267 _90715 A _37167 u f).
Proof. exact (MK_COMB (@lem3528641 _90715) (@lem3528640 _90715 A _37167 u f)). Qed.
Lemma lem3528644 {A B : Type'} (P : type1413 A B) : (term453 A B P) = (term454 A B P).
Proof. exact (EQ_MP (@lem18899 A B P) (@lem18898 A B P)). Qed.
Lemma lem3528645 {_90715 : Type'} (P : type174 _90715) : (term4139 _90715 P) = (term4140 _90715 P).
Proof. exact (@lem3528644 (type686 _90715) (_90715 -> Prop) P). Qed.
Lemma lem3528646 {_90715 A : Type'} (_37167 : type616 _90715 A) (u : _90715 -> Prop) (f : type1413 _90715 A) : (term4268 _90715 A _37167 u f) = (term4269 _90715 A _37167 u f).
Proof. exact (@lem3528645 _90715 (term4270 _90715 A _37167 u f)). Qed.
Lemma lem3528647 {_90715 A : Type'} (_37167 : type616 _90715 A) (u : _90715 -> Prop) (f : type1413 _90715 A) (g : type686 _90715) : (term4271 _90715 A _37167 u f g) = (term4264 _90715 A _37167 u f g).
Proof. exact (eq_refl (term4271 _90715 A _37167 u f g)). Qed.
Lemma lem3528648 {_90715 : Type'} (t : _90715 -> Prop) : t = t.
Proof. exact (eq_refl t). Qed.
Lemma lem3528649 {_90715 A : Type'} (_37167 : type616 _90715 A) (u : _90715 -> Prop) (f : type1413 _90715 A) (g : type686 _90715) (t : _90715 -> Prop) : (term4272 _90715 A _37167 u f g t) = (term4273 _90715 A _37167 u f g t).
Proof. exact (MK_COMB (@lem3528647 _90715 A _37167 u f g) (@lem3528648 _90715 t)). Qed.
Lemma lem3528650 {_90715 A : Type'} (_37167 : type616 _90715 A) (u : _90715 -> Prop) (t : _90715 -> Prop) (f : type1413 _90715 A) (g : type686 _90715) : (term4273 _90715 A _37167 u f g t) = (term4262 _90715 A _37167 u t f g).
Proof. exact (eq_refl (term4273 _90715 A _37167 u f g t)). Qed.
Lemma lem3528651 {_90715 A : Type'} (_37167 : type616 _90715 A) (u : _90715 -> Prop) (t : _90715 -> Prop) (f : type1413 _90715 A) (g : type686 _90715) : (term4272 _90715 A _37167 u f g t) = (term4262 _90715 A _37167 u t f g).
Proof. exact (TRANS (@lem3528649 _90715 A _37167 u f g t) (@lem3528650 _90715 A _37167 u t f g)). Qed.
Lemma lem3528652 {_90715 A : Type'} (_37167 : type616 _90715 A) (u : _90715 -> Prop) (f : type1413 _90715 A) (g : type686 _90715) : (term4274 _90715 A _37167 u f g) = (term4264 _90715 A _37167 u f g).
Proof. exact (fun_ext (fun t : _90715 -> Prop => @lem3528651 _90715 A _37167 u t f g)). Qed.
Lemma lem3528653 {_90715 : Type'} : (@ex (_90715 -> Prop)) = (@ex (_90715 -> Prop)).
Proof. exact (eq_refl (@ex (_90715 -> Prop))). Qed.
Lemma lem3528654 {_90715 A : Type'} (_37167 : type616 _90715 A) (u : _90715 -> Prop) (f : type1413 _90715 A) (g : type686 _90715) : (term4275 _90715 A _37167 u f g) = (term4265 _90715 A _37167 u f g).
Proof. exact (MK_COMB (@lem3528653 _90715) (@lem3528652 _90715 A _37167 u f g)). Qed.
Lemma lem3528655 {_90715 A : Type'} (_37167 : type616 _90715 A) (u : _90715 -> Prop) (f : type1413 _90715 A) : (term4276 _90715 A _37167 u f) = (term4266 _90715 A _37167 u f).
Proof. exact (fun_ext (fun g : type686 _90715 => @lem3528654 _90715 A _37167 u f g)). Qed.
Lemma lem3528656 {_90715 : Type'} : (@all ((_90715 -> Prop) -> Prop)) = (@all ((_90715 -> Prop) -> Prop)).
Proof. exact (eq_refl (@all ((_90715 -> Prop) -> Prop))). Qed.
Lemma lem3528657 {_90715 A : Type'} (_37167 : type616 _90715 A) (u : _90715 -> Prop) (f : type1413 _90715 A) : (term4268 _90715 A _37167 u f) = (term4267 _90715 A _37167 u f).
Proof. exact (MK_COMB (@lem3528656 _90715) (@lem3528655 _90715 A _37167 u f)). Qed.
Lemma lem3528658 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem3528659 {_90715 A : Type'} (_37167 : type616 _90715 A) (u : _90715 -> Prop) (f : type1413 _90715 A) : (term4277 _90715 A _37167 u f) = (term4278 _90715 A _37167 u f).
Proof. exact (MK_COMB (@lem3528658) (@lem3528657 _90715 A _37167 u f)). Qed.
Lemma lem3528660 {_90715 A : Type'} (_37167 : type616 _90715 A) (u : _90715 -> Prop) (f : type1413 _90715 A) (g : type686 _90715) : (term4271 _90715 A _37167 u f g) = (term4264 _90715 A _37167 u f g).
Proof. exact (eq_refl (term4271 _90715 A _37167 u f g)). Qed.
Lemma lem3528661 {_90715 : Type'} (t : type178 _90715) (g : type686 _90715) : (t g) = (t g).
Proof. exact (eq_refl (t g)). Qed.
Lemma lem3528662 {_90715 A : Type'} (_37167 : type616 _90715 A) (u : _90715 -> Prop) (f : type1413 _90715 A) (t : type178 _90715) (g : type686 _90715) : (term4279 _90715 A _37167 u f t g) = (term4280 _90715 A _37167 u f t g).
Proof. exact (MK_COMB (@lem3528660 _90715 A _37167 u f g) (@lem3528661 _90715 t g)). Qed.
Lemma lem3528663 {_90715 A : Type'} (_37167 : type616 _90715 A) (u : _90715 -> Prop) (t : type178 _90715) (f : type1413 _90715 A) (g : type686 _90715) : (term4280 _90715 A _37167 u f t g) = (term4281 _90715 A _37167 u t f g).
Proof. exact (eq_refl (term4280 _90715 A _37167 u f t g)). Qed.
Lemma lem3528664 {_90715 A : Type'} (_37167 : type616 _90715 A) (u : _90715 -> Prop) (t : type178 _90715) (f : type1413 _90715 A) (g : type686 _90715) : (term4279 _90715 A _37167 u f t g) = (term4281 _90715 A _37167 u t f g).
Proof. exact (TRANS (@lem3528662 _90715 A _37167 u f t g) (@lem3528663 _90715 A _37167 u t f g)). Qed.
Lemma lem3528665 {_90715 A : Type'} (_37167 : type616 _90715 A) (u : _90715 -> Prop) (t : type178 _90715) (f : type1413 _90715 A) : (term4282 _90715 A _37167 u f t) = (term4283 _90715 A _37167 u t f).
Proof. exact (fun_ext (fun g : type686 _90715 => @lem3528664 _90715 A _37167 u t f g)). Qed.
Lemma lem3528666 {_90715 : Type'} : (@all ((_90715 -> Prop) -> Prop)) = (@all ((_90715 -> Prop) -> Prop)).
Proof. exact (eq_refl (@all ((_90715 -> Prop) -> Prop))). Qed.
Lemma lem3528667 {_90715 A : Type'} (_37167 : type616 _90715 A) (u : _90715 -> Prop) (t : type178 _90715) (f : type1413 _90715 A) : (term4284 _90715 A _37167 u f t) = (term4285 _90715 A _37167 u t f).
Proof. exact (MK_COMB (@lem3528666 _90715) (@lem3528665 _90715 A _37167 u t f)). Qed.
Lemma lem3528668 {_90715 A : Type'} (_37167 : type616 _90715 A) (u : _90715 -> Prop) (f : type1413 _90715 A) : (term4286 _90715 A _37167 u f) = (term4287 _90715 A _37167 u f).
Proof. exact (fun_ext (fun t : type178 _90715 => @lem3528667 _90715 A _37167 u t f)). Qed.
Lemma lem3528669 {_90715 : Type'} : (@ex (((_90715 -> Prop) -> Prop) -> _90715 -> Prop)) = (@ex (((_90715 -> Prop) -> Prop) -> _90715 -> Prop)).
Proof. exact (eq_refl (@ex (((_90715 -> Prop) -> Prop) -> _90715 -> Prop))). Qed.
Lemma lem3528670 {_90715 A : Type'} (_37167 : type616 _90715 A) (u : _90715 -> Prop) (f : type1413 _90715 A) : (term4269 _90715 A _37167 u f) = (term4288 _90715 A _37167 u f).
Proof. exact (MK_COMB (@lem3528669 _90715) (@lem3528668 _90715 A _37167 u f)). Qed.
Lemma lem3528671 {_90715 A : Type'} (_37167 : type616 _90715 A) (u : _90715 -> Prop) (f : type1413 _90715 A) : ((term4268 _90715 A _37167 u f) = (term4269 _90715 A _37167 u f)) = ((term4267 _90715 A _37167 u f) = (term4288 _90715 A _37167 u f)).
Proof. exact (MK_COMB (@lem3528659 _90715 A _37167 u f) (@lem3528670 _90715 A _37167 u f)). Qed.
Lemma lem3528672 {_90715 A : Type'} (_37167 : type616 _90715 A) (u : _90715 -> Prop) (f : type1413 _90715 A) : (term4267 _90715 A _37167 u f) = (term4288 _90715 A _37167 u f).
Proof. exact (EQ_MP (@lem3528671 _90715 A _37167 u f) (@lem3528646 _90715 A _37167 u f)). Qed.
Lemma lem3528673 {_90715 A : Type'} (_37167 : type616 _90715 A) (u : _90715 -> Prop) (f : type1413 _90715 A) : (term4232 _90715 A _37167 u f) = (term4288 _90715 A _37167 u f).
Proof. exact (TRANS (@lem3528642 _90715 A _37167 u f) (@lem3528672 _90715 A _37167 u f)). Qed.
Lemma lem3528674 {_90715 A : Type'} (_37167 : type616 _90715 A) (u : _90715 -> Prop) : (term4233 _90715 A _37167 u) = (term4289 _90715 A _37167 u).
Proof. exact (fun_ext (fun f : type1413 _90715 A => @lem3528673 _90715 A _37167 u f)). Qed.
Lemma lem3528675 {_90715 A : Type'} : (@all (_90715 -> A -> Prop)) = (@all (_90715 -> A -> Prop)).
Proof. exact (eq_refl (@all (_90715 -> A -> Prop))). Qed.
Lemma lem3528676 {_90715 A : Type'} (_37167 : type616 _90715 A) (u : _90715 -> Prop) : (term4234 _90715 A _37167 u) = (term4290 _90715 A _37167 u).
Proof. exact (MK_COMB (@lem3528675 _90715 A) (@lem3528674 _90715 A _37167 u)). Qed.
Lemma lem3528678 {A B : Type'} (P : type1413 A B) : (term453 A B P) = (term454 A B P).
Proof. exact (EQ_MP (@lem18899 A B P) (@lem18898 A B P)). Qed.
Lemma lem3528679 {_90715 A : Type'} (P : type444 _90715 A) : (term4291 _90715 A P) = (term4292 _90715 A P).
Proof. exact (@lem3528678 (type1413 _90715 A) (type178 _90715) P). Qed.
Lemma lem3528680 {_90715 A : Type'} (_37167 : type616 _90715 A) (u : _90715 -> Prop) : (term4293 _90715 A _37167 u) = (term4294 _90715 A _37167 u).
Proof. exact (@lem3528679 _90715 A (term4295 _90715 A _37167 u)). Qed.
Lemma lem3528681 {_90715 A : Type'} (_37167 : type616 _90715 A) (u : _90715 -> Prop) (f : type1413 _90715 A) : (term4296 _90715 A _37167 u f) = (term4287 _90715 A _37167 u f).
Proof. exact (eq_refl (term4296 _90715 A _37167 u f)). Qed.
Lemma lem3528682 {_90715 : Type'} (t : type178 _90715) : t = t.
Proof. exact (eq_refl t). Qed.
Lemma lem3528683 {_90715 A : Type'} (_37167 : type616 _90715 A) (u : _90715 -> Prop) (f : type1413 _90715 A) (t : type178 _90715) : (term4297 _90715 A _37167 u f t) = (term4298 _90715 A _37167 u f t).
Proof. exact (MK_COMB (@lem3528681 _90715 A _37167 u f) (@lem3528682 _90715 t)). Qed.
Lemma lem3528684 {_90715 A : Type'} (_37167 : type616 _90715 A) (u : _90715 -> Prop) (t : type178 _90715) (f : type1413 _90715 A) : (term4298 _90715 A _37167 u f t) = (term4285 _90715 A _37167 u t f).
Proof. exact (eq_refl (term4298 _90715 A _37167 u f t)). Qed.
Lemma lem3528685 {_90715 A : Type'} (_37167 : type616 _90715 A) (u : _90715 -> Prop) (t : type178 _90715) (f : type1413 _90715 A) : (term4297 _90715 A _37167 u f t) = (term4285 _90715 A _37167 u t f).
Proof. exact (TRANS (@lem3528683 _90715 A _37167 u f t) (@lem3528684 _90715 A _37167 u t f)). Qed.
Lemma lem3528686 {_90715 A : Type'} (_37167 : type616 _90715 A) (u : _90715 -> Prop) (f : type1413 _90715 A) : (term4299 _90715 A _37167 u f) = (term4287 _90715 A _37167 u f).
Proof. exact (fun_ext (fun t : type178 _90715 => @lem3528685 _90715 A _37167 u t f)). Qed.
Lemma lem3528687 {_90715 : Type'} : (@ex (((_90715 -> Prop) -> Prop) -> _90715 -> Prop)) = (@ex (((_90715 -> Prop) -> Prop) -> _90715 -> Prop)).
Proof. exact (eq_refl (@ex (((_90715 -> Prop) -> Prop) -> _90715 -> Prop))). Qed.
Lemma lem3528688 {_90715 A : Type'} (_37167 : type616 _90715 A) (u : _90715 -> Prop) (f : type1413 _90715 A) : (term4300 _90715 A _37167 u f) = (term4288 _90715 A _37167 u f).
Proof. exact (MK_COMB (@lem3528687 _90715) (@lem3528686 _90715 A _37167 u f)). Qed.
Lemma lem3528689 {_90715 A : Type'} (_37167 : type616 _90715 A) (u : _90715 -> Prop) : (term4301 _90715 A _37167 u) = (term4289 _90715 A _37167 u).
Proof. exact (fun_ext (fun f : type1413 _90715 A => @lem3528688 _90715 A _37167 u f)). Qed.
Lemma lem3528690 {_90715 A : Type'} : (@all (_90715 -> A -> Prop)) = (@all (_90715 -> A -> Prop)).
Proof. exact (eq_refl (@all (_90715 -> A -> Prop))). Qed.
Lemma lem3528691 {_90715 A : Type'} (_37167 : type616 _90715 A) (u : _90715 -> Prop) : (term4293 _90715 A _37167 u) = (term4290 _90715 A _37167 u).
Proof. exact (MK_COMB (@lem3528690 _90715 A) (@lem3528689 _90715 A _37167 u)). Qed.
Lemma lem3528692 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem3528693 {_90715 A : Type'} (_37167 : type616 _90715 A) (u : _90715 -> Prop) : (term4302 _90715 A _37167 u) = (term4303 _90715 A _37167 u).
Proof. exact (MK_COMB (@lem3528692) (@lem3528691 _90715 A _37167 u)). Qed.
Lemma lem3528694 {_90715 A : Type'} (_37167 : type616 _90715 A) (u : _90715 -> Prop) (f : type1413 _90715 A) : (term4296 _90715 A _37167 u f) = (term4287 _90715 A _37167 u f).
Proof. exact (eq_refl (term4296 _90715 A _37167 u f)). Qed.
Lemma lem3528695 {_90715 A : Type'} (t : type448 _90715 A) (f : type1413 _90715 A) : (t f) = (t f).
Proof. exact (eq_refl (t f)). Qed.
Lemma lem3528696 {_90715 A : Type'} (_37167 : type616 _90715 A) (u : _90715 -> Prop) (t : type448 _90715 A) (f : type1413 _90715 A) : (term4304 _90715 A _37167 u t f) = (term4305 _90715 A _37167 u t f).
Proof. exact (MK_COMB (@lem3528694 _90715 A _37167 u f) (@lem3528695 _90715 A t f)). Qed.
Lemma lem3528697 {_90715 A : Type'} (_37167 : type616 _90715 A) (u : _90715 -> Prop) (t : type448 _90715 A) (f : type1413 _90715 A) : (term4305 _90715 A _37167 u t f) = (term4306 _90715 A _37167 u t f).
Proof. exact (eq_refl (term4305 _90715 A _37167 u t f)). Qed.
Lemma lem3528698 {_90715 A : Type'} (_37167 : type616 _90715 A) (u : _90715 -> Prop) (t : type448 _90715 A) (f : type1413 _90715 A) : (term4304 _90715 A _37167 u t f) = (term4306 _90715 A _37167 u t f).
Proof. exact (TRANS (@lem3528696 _90715 A _37167 u t f) (@lem3528697 _90715 A _37167 u t f)). Qed.
Lemma lem3528699 {_90715 A : Type'} (_37167 : type616 _90715 A) (u : _90715 -> Prop) (t : type448 _90715 A) : (term4307 _90715 A _37167 u t) = (term4308 _90715 A _37167 u t).
Proof. exact (fun_ext (fun f : type1413 _90715 A => @lem3528698 _90715 A _37167 u t f)). Qed.
Lemma lem3528700 {_90715 A : Type'} : (@all (_90715 -> A -> Prop)) = (@all (_90715 -> A -> Prop)).
Proof. exact (eq_refl (@all (_90715 -> A -> Prop))). Qed.
Lemma lem3528701 {_90715 A : Type'} (_37167 : type616 _90715 A) (u : _90715 -> Prop) (t : type448 _90715 A) : (term4309 _90715 A _37167 u t) = (term4310 _90715 A _37167 u t).
Proof. exact (MK_COMB (@lem3528700 _90715 A) (@lem3528699 _90715 A _37167 u t)). Qed.
Lemma lem3528702 {_90715 A : Type'} (_37167 : type616 _90715 A) (u : _90715 -> Prop) : (term4311 _90715 A _37167 u) = (term4312 _90715 A _37167 u).
Proof. exact (fun_ext (fun t : type448 _90715 A => @lem3528701 _90715 A _37167 u t)). Qed.
Lemma lem3528703 {_90715 A : Type'} : (@ex ((_90715 -> A -> Prop) -> ((_90715 -> Prop) -> Prop) -> _90715 -> Prop)) = (@ex ((_90715 -> A -> Prop) -> ((_90715 -> Prop) -> Prop) -> _90715 -> Prop)).
Proof. exact (eq_refl (@ex ((_90715 -> A -> Prop) -> ((_90715 -> Prop) -> Prop) -> _90715 -> Prop))). Qed.
Lemma lem3528704 {_90715 A : Type'} (_37167 : type616 _90715 A) (u : _90715 -> Prop) : (term4294 _90715 A _37167 u) = (term4313 _90715 A _37167 u).
Proof. exact (MK_COMB (@lem3528703 _90715 A) (@lem3528702 _90715 A _37167 u)). Qed.
Lemma lem3528705 {_90715 A : Type'} (_37167 : type616 _90715 A) (u : _90715 -> Prop) : ((term4293 _90715 A _37167 u) = (term4294 _90715 A _37167 u)) = ((term4290 _90715 A _37167 u) = (term4313 _90715 A _37167 u)).
Proof. exact (MK_COMB (@lem3528693 _90715 A _37167 u) (@lem3528704 _90715 A _37167 u)). Qed.
Lemma lem3528706 {_90715 A : Type'} (_37167 : type616 _90715 A) (u : _90715 -> Prop) : (term4290 _90715 A _37167 u) = (term4313 _90715 A _37167 u).
Proof. exact (EQ_MP (@lem3528705 _90715 A _37167 u) (@lem3528680 _90715 A _37167 u)). Qed.
Lemma lem3528707 {_90715 A : Type'} (_37167 : type616 _90715 A) (u : _90715 -> Prop) : (term4234 _90715 A _37167 u) = (term4313 _90715 A _37167 u).
Proof. exact (TRANS (@lem3528676 _90715 A _37167 u) (@lem3528706 _90715 A _37167 u)). Qed.
Lemma lem3528708 {_90715 A : Type'} (_37167 : type616 _90715 A) : (term4235 _90715 A _37167) = (term4314 _90715 A _37167).
Proof. exact (fun_ext (fun u : _90715 -> Prop => @lem3528707 _90715 A _37167 u)). Qed.
Lemma lem3528709 {_90715 : Type'} : (@all (_90715 -> Prop)) = (@all (_90715 -> Prop)).
Proof. exact (eq_refl (@all (_90715 -> Prop))). Qed.
Lemma lem3528710 {_90715 A : Type'} (_37167 : type616 _90715 A) : (term4236 _90715 A _37167) = (term4315 _90715 A _37167).
Proof. exact (MK_COMB (@lem3528709 _90715) (@lem3528708 _90715 A _37167)). Qed.
Lemma lem3528712 {A B : Type'} (P : type1413 A B) : (term453 A B P) = (term454 A B P).
Proof. exact (EQ_MP (@lem18899 A B P) (@lem18898 A B P)). Qed.
Lemma lem3528713 {_90715 A : Type'} (P : type580 _90715 A) : (term4316 _90715 A P) = (term4317 _90715 A P).
Proof. exact (@lem3528712 (_90715 -> Prop) (type448 _90715 A) P). Qed.
Lemma lem3528714 {_90715 A : Type'} (_37167 : type616 _90715 A) : (term4318 _90715 A _37167) = (term4319 _90715 A _37167).
Proof. exact (@lem3528713 _90715 A (term4320 _90715 A _37167)). Qed.
Lemma lem3528715 {_90715 A : Type'} (_37167 : type616 _90715 A) (u : _90715 -> Prop) : (term4321 _90715 A _37167 u) = (term4312 _90715 A _37167 u).
Proof. exact (eq_refl (term4321 _90715 A _37167 u)). Qed.
Lemma lem3528716 {_90715 A : Type'} (t : type448 _90715 A) : t = t.
Proof. exact (eq_refl t). Qed.
Lemma lem3528717 {_90715 A : Type'} (_37167 : type616 _90715 A) (u : _90715 -> Prop) (t : type448 _90715 A) : (term4322 _90715 A _37167 u t) = (term4323 _90715 A _37167 u t).
Proof. exact (MK_COMB (@lem3528715 _90715 A _37167 u) (@lem3528716 _90715 A t)). Qed.
Lemma lem3528718 {_90715 A : Type'} (_37167 : type616 _90715 A) (u : _90715 -> Prop) (t : type448 _90715 A) : (term4323 _90715 A _37167 u t) = (term4310 _90715 A _37167 u t).
Proof. exact (eq_refl (term4323 _90715 A _37167 u t)). Qed.
Lemma lem3528719 {_90715 A : Type'} (_37167 : type616 _90715 A) (u : _90715 -> Prop) (t : type448 _90715 A) : (term4322 _90715 A _37167 u t) = (term4310 _90715 A _37167 u t).
Proof. exact (TRANS (@lem3528717 _90715 A _37167 u t) (@lem3528718 _90715 A _37167 u t)). Qed.
Lemma lem3528720 {_90715 A : Type'} (_37167 : type616 _90715 A) (u : _90715 -> Prop) : (term4324 _90715 A _37167 u) = (term4312 _90715 A _37167 u).
Proof. exact (fun_ext (fun t : type448 _90715 A => @lem3528719 _90715 A _37167 u t)). Qed.
Lemma lem3528721 {_90715 A : Type'} : (@ex ((_90715 -> A -> Prop) -> ((_90715 -> Prop) -> Prop) -> _90715 -> Prop)) = (@ex ((_90715 -> A -> Prop) -> ((_90715 -> Prop) -> Prop) -> _90715 -> Prop)).
Proof. exact (eq_refl (@ex ((_90715 -> A -> Prop) -> ((_90715 -> Prop) -> Prop) -> _90715 -> Prop))). Qed.
Lemma lem3528722 {_90715 A : Type'} (_37167 : type616 _90715 A) (u : _90715 -> Prop) : (term4325 _90715 A _37167 u) = (term4313 _90715 A _37167 u).
Proof. exact (MK_COMB (@lem3528721 _90715 A) (@lem3528720 _90715 A _37167 u)). Qed.
Lemma lem3528723 {_90715 A : Type'} (_37167 : type616 _90715 A) : (term4326 _90715 A _37167) = (term4314 _90715 A _37167).
Proof. exact (fun_ext (fun u : _90715 -> Prop => @lem3528722 _90715 A _37167 u)). Qed.
Lemma lem3528724 {_90715 : Type'} : (@all (_90715 -> Prop)) = (@all (_90715 -> Prop)).
Proof. exact (eq_refl (@all (_90715 -> Prop))). Qed.
Lemma lem3528725 {_90715 A : Type'} (_37167 : type616 _90715 A) : (term4318 _90715 A _37167) = (term4315 _90715 A _37167).
Proof. exact (MK_COMB (@lem3528724 _90715) (@lem3528723 _90715 A _37167)). Qed.
Lemma lem3528726 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem3528727 {_90715 A : Type'} (_37167 : type616 _90715 A) : (term4327 _90715 A _37167) = (term4328 _90715 A _37167).
Proof. exact (MK_COMB (@lem3528726) (@lem3528725 _90715 A _37167)). Qed.
Lemma lem3528728 {_90715 A : Type'} (_37167 : type616 _90715 A) (u : _90715 -> Prop) : (term4321 _90715 A _37167 u) = (term4312 _90715 A _37167 u).
Proof. exact (eq_refl (term4321 _90715 A _37167 u)). Qed.
Lemma lem3528729 {_90715 A : Type'} (t : type613 _90715 A) (u : _90715 -> Prop) : (t u) = (t u).
Proof. exact (eq_refl (t u)). Qed.
Lemma lem3528730 {_90715 A : Type'} (_37167 : type616 _90715 A) (t : type613 _90715 A) (u : _90715 -> Prop) : (term4329 _90715 A _37167 t u) = (term4330 _90715 A _37167 t u).
Proof. exact (MK_COMB (@lem3528728 _90715 A _37167 u) (@lem3528729 _90715 A t u)). Qed.
Lemma lem3528731 {_90715 A : Type'} (_37167 : type616 _90715 A) (t : type613 _90715 A) (u : _90715 -> Prop) : (term4330 _90715 A _37167 t u) = (term4331 _90715 A _37167 t u).
Proof. exact (eq_refl (term4330 _90715 A _37167 t u)). Qed.
Lemma lem3528732 {_90715 A : Type'} (_37167 : type616 _90715 A) (t : type613 _90715 A) (u : _90715 -> Prop) : (term4329 _90715 A _37167 t u) = (term4331 _90715 A _37167 t u).
Proof. exact (TRANS (@lem3528730 _90715 A _37167 t u) (@lem3528731 _90715 A _37167 t u)). Qed.
Lemma lem3528733 {_90715 A : Type'} (_37167 : type616 _90715 A) (t : type613 _90715 A) : (term4332 _90715 A _37167 t) = (term4333 _90715 A _37167 t).
Proof. exact (fun_ext (fun u : _90715 -> Prop => @lem3528732 _90715 A _37167 t u)). Qed.
Lemma lem3528734 {_90715 : Type'} : (@all (_90715 -> Prop)) = (@all (_90715 -> Prop)).
Proof. exact (eq_refl (@all (_90715 -> Prop))). Qed.
Lemma lem3528735 {_90715 A : Type'} (_37167 : type616 _90715 A) (t : type613 _90715 A) : (term4334 _90715 A _37167 t) = (term4335 _90715 A _37167 t).
Proof. exact (MK_COMB (@lem3528734 _90715) (@lem3528733 _90715 A _37167 t)). Qed.
Lemma lem3528736 {_90715 A : Type'} (_37167 : type616 _90715 A) : (term4336 _90715 A _37167) = (term4337 _90715 A _37167).
Proof. exact (fun_ext (fun t : type613 _90715 A => @lem3528735 _90715 A _37167 t)). Qed.
Lemma lem3528737 {_90715 A : Type'} : (@ex ((_90715 -> Prop) -> (_90715 -> A -> Prop) -> ((_90715 -> Prop) -> Prop) -> _90715 -> Prop)) = (@ex ((_90715 -> Prop) -> (_90715 -> A -> Prop) -> ((_90715 -> Prop) -> Prop) -> _90715 -> Prop)).
Proof. exact (eq_refl (@ex ((_90715 -> Prop) -> (_90715 -> A -> Prop) -> ((_90715 -> Prop) -> Prop) -> _90715 -> Prop))). Qed.
Lemma lem3528738 {_90715 A : Type'} (_37167 : type616 _90715 A) : (term4319 _90715 A _37167) = (term4338 _90715 A _37167).
Proof. exact (MK_COMB (@lem3528737 _90715 A) (@lem3528736 _90715 A _37167)). Qed.
Lemma lem3528739 {_90715 A : Type'} (_37167 : type616 _90715 A) : ((term4318 _90715 A _37167) = (term4319 _90715 A _37167)) = ((term4315 _90715 A _37167) = (term4338 _90715 A _37167)).
Proof. exact (MK_COMB (@lem3528727 _90715 A _37167) (@lem3528738 _90715 A _37167)). Qed.
Lemma lem3528740 {_90715 A : Type'} (_37167 : type616 _90715 A) : (term4315 _90715 A _37167) = (term4338 _90715 A _37167).
Proof. exact (EQ_MP (@lem3528739 _90715 A _37167) (@lem3528714 _90715 A _37167)). Qed.
Lemma lem3528742 {_90715 A : Type'} (_37167 : type616 _90715 A) : (term4236 _90715 A _37167) = (term4338 _90715 A _37167).
Proof. exact (TRANS (@lem3528710 _90715 A _37167) (@lem3528740 _90715 A _37167)). Qed.
Lemma lem3528743 {_90715 A : Type'} (_37167 : type616 _90715 A) : (term2350 _90715 A _37167) = (term4338 _90715 A _37167).
Proof. exact (TRANS (@lem3528485 _90715 A _37167) (@lem3528742 _90715 A _37167)). Qed.
Lemma lem3528744 {_90715 A : Type'} (_37167 : type616 _90715 A) (h1 : term2350 _90715 A _37167) : term4338 _90715 A _37167.
Proof. exact (EQ_MP (@lem3528743 _90715 A _37167) (@lem3520023 _90715 A _37167 h1)). Qed.
Lemma lem3528747 {A : Type'} (g : type686 A) : (term4079 A g) = (g = (@EMPTY (A -> Prop))).
Proof. exact (@lem16933 (g = (@EMPTY (A -> Prop)))). Qed.
Lemma lem3528755 {_90724 A : Type'} (_37168 : type852 _90724 A) (u : A -> Prop) (f : A -> _90724) (t : A -> Prop) : (term4339 _90724 A _37168 u f t) = (term4340 _90724 A _37168 u f t).
Proof. exact (@lem17045 (@SUBSET A t u) (term2451 _90724 A _37168 u f t)). Qed.
Lemma lem3528757 {A : Type'} (t : A -> Prop) (g : type686 A) : (term4082 A t g) = (term4082 A t g).
Proof. exact (eq_refl (term4082 A t g)). Qed.
Lemma lem3528758 {_90724 A : Type'} (g : type686 A) (_37168 : type852 _90724 A) (u : A -> Prop) (f : A -> _90724) (t : A -> Prop) : (term4341 _90724 A g _37168 u f t) = (term4342 _90724 A g _37168 u f t).
Proof. exact (MK_COMB (@lem3528757 A t g) (@lem3528755 _90724 A _37168 u f t)). Qed.
Lemma lem3528759 {_90724 A : Type'} (g : type686 A) (_37168 : type852 _90724 A) (u : A -> Prop) (f : A -> _90724) (t : A -> Prop) : (term4343 _90724 A g _37168 u f t) = (term4341 _90724 A g _37168 u f t).
Proof. exact (@lem17362 (@IN (A -> Prop) t g) (term2452 _90724 A _37168 u f t)). Qed.
Lemma lem3528760 {_90724 A : Type'} (g : type686 A) (_37168 : type852 _90724 A) (u : A -> Prop) (f : A -> _90724) (t : A -> Prop) : (term4343 _90724 A g _37168 u f t) = (term4342 _90724 A g _37168 u f t).
Proof. exact (TRANS (@lem3528759 _90724 A g _37168 u f t) (@lem3528758 _90724 A g _37168 u f t)). Qed.
Lemma lem3528761 {A : Type'} (P : type686 A) : (term298 A P) = (term299 A P).
Proof. exact (@lem18392 (A -> Prop) P). Qed.
Lemma lem3528762 {_90724 A : Type'} (g : type686 A) (_37168 : type852 _90724 A) (u : A -> Prop) (f : A -> _90724) : (term4344 _90724 A g _37168 u f) = (term4345 _90724 A g _37168 u f).
Proof. exact (@lem3528761 A (term2454 _90724 A g _37168 u f)). Qed.
Lemma lem3528763 {_90724 A : Type'} (g : type686 A) (_37168 : type852 _90724 A) (u : A -> Prop) (f : A -> _90724) (t : A -> Prop) : (term4346 _90724 A g _37168 u f t) = (term2453 _90724 A g _37168 u f t).
Proof. exact (eq_refl (term4346 _90724 A g _37168 u f t)). Qed.
Lemma lem3528764 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem3528765 {_90724 A : Type'} (g : type686 A) (_37168 : type852 _90724 A) (u : A -> Prop) (f : A -> _90724) (t : A -> Prop) : (term4347 _90724 A g _37168 u f t) = (term4343 _90724 A g _37168 u f t).
Proof. exact (MK_COMB (@lem3528764) (@lem3528763 _90724 A g _37168 u f t)). Qed.
Lemma lem3528766 {_90724 A : Type'} (g : type686 A) (_37168 : type852 _90724 A) (u : A -> Prop) (f : A -> _90724) (t : A -> Prop) : (term4347 _90724 A g _37168 u f t) = (term4342 _90724 A g _37168 u f t).
Proof. exact (TRANS (@lem3528765 _90724 A g _37168 u f t) (@lem3528760 _90724 A g _37168 u f t)). Qed.
Lemma lem3528767 {_90724 A : Type'} (g : type686 A) (_37168 : type852 _90724 A) (u : A -> Prop) (f : A -> _90724) : (term4348 _90724 A g _37168 u f) = (term4349 _90724 A g _37168 u f).
Proof. exact (fun_ext (fun t : A -> Prop => @lem3528766 _90724 A g _37168 u f t)). Qed.
Lemma lem3528768 {A : Type'} : (@ex (A -> Prop)) = (@ex (A -> Prop)).
Proof. exact (eq_refl (@ex (A -> Prop))). Qed.
Lemma lem3528769 {_90724 A : Type'} (g : type686 A) (_37168 : type852 _90724 A) (u : A -> Prop) (f : A -> _90724) : (term4345 _90724 A g _37168 u f) = (term4350 _90724 A g _37168 u f).
Proof. exact (MK_COMB (@lem3528768 A) (@lem3528767 _90724 A g _37168 u f)). Qed.
Lemma lem3528770 {_90724 A : Type'} (g : type686 A) (_37168 : type852 _90724 A) (u : A -> Prop) (f : A -> _90724) : (term4344 _90724 A g _37168 u f) = (term4350 _90724 A g _37168 u f).
Proof. exact (TRANS (@lem3528762 _90724 A g _37168 u f) (@lem3528769 _90724 A g _37168 u f)). Qed.
Lemma lem3528771 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem3528772 {A : Type'} (g : type686 A) : (term4093 A g) = (term4094 A g).
Proof. exact (MK_COMB (@lem3528771) (@lem3528747 A g)). Qed.
Lemma lem3528773 {_90724 A : Type'} (g : type686 A) (_37168 : type852 _90724 A) (u : A -> Prop) (f : A -> _90724) : (term4351 _90724 A g _37168 u f) = (term4352 _90724 A g _37168 u f).
Proof. exact (MK_COMB (@lem3528772 A g) (@lem3528770 _90724 A g _37168 u f)). Qed.
Lemma lem3528774 {_90724 A : Type'} (g : type686 A) (_37168 : type852 _90724 A) (u : A -> Prop) (f : A -> _90724) : (term4353 _90724 A g _37168 u f) = (term4351 _90724 A g _37168 u f).
Proof. exact (@lem17045 (term40 A g) (term2455 _90724 A g _37168 u f)). Qed.
Lemma lem3528775 {_90724 A : Type'} (g : type686 A) (_37168 : type852 _90724 A) (u : A -> Prop) (f : A -> _90724) : (term4353 _90724 A g _37168 u f) = (term4352 _90724 A g _37168 u f).
Proof. exact (TRANS (@lem3528774 _90724 A g _37168 u f) (@lem3528773 _90724 A g _37168 u f)). Qed.
Lemma lem3528776 {_90724 A : Type'} (f : A -> _90724) (g : type686 A) : ((term2056 _90724 A f g) = (term2057 _90724 A f g)) = ((term2056 _90724 A f g) = (term2057 _90724 A f g)).
Proof. exact (eq_refl ((term2056 _90724 A f g) = (term2057 _90724 A f g))). Qed.
Lemma lem3528777 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem3528778 {_90724 A : Type'} (g : type686 A) (_37168 : type852 _90724 A) (u : A -> Prop) (f : A -> _90724) : (term4354 _90724 A g _37168 u f) = (term4355 _90724 A g _37168 u f).
Proof. exact (MK_COMB (@lem3528777) (@lem3528775 _90724 A g _37168 u f)). Qed.
Lemma lem3528779 {_90724 A : Type'} (_37168 : type852 _90724 A) (u : A -> Prop) (f : A -> _90724) (g : type686 A) : (term4356 _90724 A _37168 u f g) = (term4357 _90724 A _37168 u f g).
Proof. exact (MK_COMB (@lem3528778 _90724 A g _37168 u f) (@lem3528776 _90724 A f g)). Qed.
Lemma lem3528780 {_90724 A : Type'} (_37168 : type852 _90724 A) (u : A -> Prop) (f : A -> _90724) (g : type686 A) : (term2458 _90724 A _37168 u f g) = (term4356 _90724 A _37168 u f g).
Proof. exact (@lem17265 (term2456 _90724 A g _37168 u f) ((term2056 _90724 A f g) = (term2057 _90724 A f g))). Qed.
Lemma lem3528781 {_90724 A : Type'} (_37168 : type852 _90724 A) (u : A -> Prop) (f : A -> _90724) (g : type686 A) : (term2458 _90724 A _37168 u f g) = (term4357 _90724 A _37168 u f g).
Proof. exact (TRANS (@lem3528780 _90724 A _37168 u f g) (@lem3528779 _90724 A _37168 u f g)). Qed.
Lemma lem3528782 {_90724 A : Type'} (_37168 : type852 _90724 A) (u : A -> Prop) (f : A -> _90724) : (term2459 _90724 A _37168 u f) = (term4358 _90724 A _37168 u f).
Proof. exact (fun_ext (fun g : type686 A => @lem3528781 _90724 A _37168 u f g)). Qed.
Lemma lem3528783 {A : Type'} : (@all ((A -> Prop) -> Prop)) = (@all ((A -> Prop) -> Prop)).
Proof. exact (eq_refl (@all ((A -> Prop) -> Prop))). Qed.
Lemma lem3528784 {_90724 A : Type'} (_37168 : type852 _90724 A) (u : A -> Prop) (f : A -> _90724) : (term2460 _90724 A _37168 u f) = (term4359 _90724 A _37168 u f).
Proof. exact (MK_COMB (@lem3528783 A) (@lem3528782 _90724 A _37168 u f)). Qed.
Lemma lem3528785 {_90724 A : Type'} (_37168 : type852 _90724 A) (u : A -> Prop) : (term2461 _90724 A _37168 u) = (term4360 _90724 A _37168 u).
Proof. exact (fun_ext (fun f : A -> _90724 => @lem3528784 _90724 A _37168 u f)). Qed.
Lemma lem3528786 {_90724 A : Type'} : (@all (A -> _90724)) = (@all (A -> _90724)).
Proof. exact (eq_refl (@all (A -> _90724))). Qed.
Lemma lem3528787 {_90724 A : Type'} (_37168 : type852 _90724 A) (u : A -> Prop) : (term2462 _90724 A _37168 u) = (term4361 _90724 A _37168 u).
Proof. exact (MK_COMB (@lem3528786 _90724 A) (@lem3528785 _90724 A _37168 u)). Qed.
Lemma lem3528788 {_90724 A : Type'} (_37168 : type852 _90724 A) : (term2463 _90724 A _37168) = (term4362 _90724 A _37168).
Proof. exact (fun_ext (fun u : A -> Prop => @lem3528787 _90724 A _37168 u)). Qed.
Lemma lem3528789 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem3528790 {_90724 A : Type'} (_37168 : type852 _90724 A) : (term2464 _90724 A _37168) = (term4363 _90724 A _37168).
Proof. exact (MK_COMB (@lem3528789 A) (@lem3528788 _90724 A _37168)). Qed.
Lemma lem3528897 {A : Type'} (P : Prop) (Q : A -> Prop) : (term434 A P Q) = (term435 A P Q).
Proof. exact (EQ_MP (@lem18911 A P Q) (@lem18910 A P Q)). Qed.
Lemma lem3528898 {A : Type'} (P : Prop) (Q : type686 A) : (term436 A P Q) = (term437 A P Q).
Proof. exact (@lem3528897 (A -> Prop) P Q). Qed.
Lemma lem3528899 {_90724 A : Type'} (g : type686 A) (_37168 : type852 _90724 A) (u : A -> Prop) (f : A -> _90724) : (term4364 _90724 A g _37168 u f) = (term4365 _90724 A g _37168 u f).
Proof. exact (@lem3528898 A (g = (@EMPTY (A -> Prop))) (term4349 _90724 A g _37168 u f)). Qed.
Lemma lem3528900 {_90724 A : Type'} (g : type686 A) (_37168 : type852 _90724 A) (u : A -> Prop) (f : A -> _90724) (t : A -> Prop) : (term4366 _90724 A g _37168 u f t) = (term4342 _90724 A g _37168 u f t).
Proof. exact (eq_refl (term4366 _90724 A g _37168 u f t)). Qed.
Lemma lem3528901 {_90724 A : Type'} (g : type686 A) (_37168 : type852 _90724 A) (u : A -> Prop) (f : A -> _90724) : (term4367 _90724 A g _37168 u f) = (term4349 _90724 A g _37168 u f).
Proof. exact (fun_ext (fun t : A -> Prop => @lem3528900 _90724 A g _37168 u f t)). Qed.
Lemma lem3528902 {A : Type'} : (@ex (A -> Prop)) = (@ex (A -> Prop)).
Proof. exact (eq_refl (@ex (A -> Prop))). Qed.
Lemma lem3528903 {_90724 A : Type'} (g : type686 A) (_37168 : type852 _90724 A) (u : A -> Prop) (f : A -> _90724) : (term4368 _90724 A g _37168 u f) = (term4350 _90724 A g _37168 u f).
Proof. exact (MK_COMB (@lem3528902 A) (@lem3528901 _90724 A g _37168 u f)). Qed.
Lemma lem3528904 {A : Type'} (g : type686 A) : (term4094 A g) = (term4094 A g).
Proof. exact (eq_refl (term4094 A g)). Qed.
Lemma lem3528905 {_90724 A : Type'} (g : type686 A) (_37168 : type852 _90724 A) (u : A -> Prop) (f : A -> _90724) : (term4364 _90724 A g _37168 u f) = (term4352 _90724 A g _37168 u f).
Proof. exact (MK_COMB (@lem3528904 A g) (@lem3528903 _90724 A g _37168 u f)). Qed.
Lemma lem3528906 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem3528907 {_90724 A : Type'} (g : type686 A) (_37168 : type852 _90724 A) (u : A -> Prop) (f : A -> _90724) : (term4369 _90724 A g _37168 u f) = (term4370 _90724 A g _37168 u f).
Proof. exact (MK_COMB (@lem3528906) (@lem3528905 _90724 A g _37168 u f)). Qed.
Lemma lem3528908 {_90724 A : Type'} (g : type686 A) (_37168 : type852 _90724 A) (u : A -> Prop) (f : A -> _90724) (t : A -> Prop) : (term4366 _90724 A g _37168 u f t) = (term4342 _90724 A g _37168 u f t).
Proof. exact (eq_refl (term4366 _90724 A g _37168 u f t)). Qed.
Lemma lem3528909 {A : Type'} (g : type686 A) : (term4094 A g) = (term4094 A g).
Proof. exact (eq_refl (term4094 A g)). Qed.
Lemma lem3528910 {_90724 A : Type'} (g : type686 A) (_37168 : type852 _90724 A) (u : A -> Prop) (f : A -> _90724) (t : A -> Prop) : (term4371 _90724 A g _37168 u f t) = (term4372 _90724 A g _37168 u f t).
Proof. exact (MK_COMB (@lem3528909 A g) (@lem3528908 _90724 A g _37168 u f t)). Qed.
Lemma lem3528911 {_90724 A : Type'} (g : type686 A) (_37168 : type852 _90724 A) (u : A -> Prop) (f : A -> _90724) : (term4373 _90724 A g _37168 u f) = (term4374 _90724 A g _37168 u f).
Proof. exact (fun_ext (fun t : A -> Prop => @lem3528910 _90724 A g _37168 u f t)). Qed.
Lemma lem3528912 {A : Type'} : (@ex (A -> Prop)) = (@ex (A -> Prop)).
Proof. exact (eq_refl (@ex (A -> Prop))). Qed.
Lemma lem3528913 {_90724 A : Type'} (g : type686 A) (_37168 : type852 _90724 A) (u : A -> Prop) (f : A -> _90724) : (term4365 _90724 A g _37168 u f) = (term4375 _90724 A g _37168 u f).
Proof. exact (MK_COMB (@lem3528912 A) (@lem3528911 _90724 A g _37168 u f)). Qed.
Lemma lem3528914 {_90724 A : Type'} (g : type686 A) (_37168 : type852 _90724 A) (u : A -> Prop) (f : A -> _90724) : ((term4364 _90724 A g _37168 u f) = (term4365 _90724 A g _37168 u f)) = ((term4352 _90724 A g _37168 u f) = (term4375 _90724 A g _37168 u f)).
Proof. exact (MK_COMB (@lem3528907 _90724 A g _37168 u f) (@lem3528913 _90724 A g _37168 u f)). Qed.
Lemma lem3528915 {_90724 A : Type'} (g : type686 A) (_37168 : type852 _90724 A) (u : A -> Prop) (f : A -> _90724) : (term4352 _90724 A g _37168 u f) = (term4375 _90724 A g _37168 u f).
Proof. exact (EQ_MP (@lem3528914 _90724 A g _37168 u f) (@lem3528899 _90724 A g _37168 u f)). Qed.
Lemma lem3528916 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem3528917 {_90724 A : Type'} (g : type686 A) (_37168 : type852 _90724 A) (u : A -> Prop) (f : A -> _90724) : (term4355 _90724 A g _37168 u f) = (term4376 _90724 A g _37168 u f).
Proof. exact (MK_COMB (@lem3528916) (@lem3528915 _90724 A g _37168 u f)). Qed.
Lemma lem3528918 {_90724 A : Type'} (f : A -> _90724) (g : type686 A) : ((term2056 _90724 A f g) = (term2057 _90724 A f g)) = ((term2056 _90724 A f g) = (term2057 _90724 A f g)).
Proof. exact (eq_refl ((term2056 _90724 A f g) = (term2057 _90724 A f g))). Qed.
Lemma lem3528919 {_90724 A : Type'} (_37168 : type852 _90724 A) (u : A -> Prop) (f : A -> _90724) (g : type686 A) : (term4357 _90724 A _37168 u f g) = (term4377 _90724 A _37168 u f g).
Proof. exact (MK_COMB (@lem3528917 _90724 A g _37168 u f) (@lem3528918 _90724 A f g)). Qed.
Lemma lem3528921 {A : Type'} (P : A -> Prop) (Q : Prop) : (term550 A P Q) = (term551 A P Q).
Proof. exact (EQ_MP (@lem18905 A P Q) (@lem18904 A P Q)). Qed.
Lemma lem3528922 {A : Type'} (P : type686 A) (Q : Prop) : (term567 A P Q) = (term568 A P Q).
Proof. exact (@lem3528921 (A -> Prop) P Q). Qed.
Lemma lem3528923 {_90724 A : Type'} (_37168 : type852 _90724 A) (u : A -> Prop) (f : A -> _90724) (g : type686 A) : (term4378 _90724 A _37168 u f g) = (term4379 _90724 A _37168 u f g).
Proof. exact (@lem3528922 A (term4374 _90724 A g _37168 u f) ((term2056 _90724 A f g) = (term2057 _90724 A f g))). Qed.
Lemma lem3528924 {_90724 A : Type'} (g : type686 A) (_37168 : type852 _90724 A) (u : A -> Prop) (f : A -> _90724) (t : A -> Prop) : (term4380 _90724 A g _37168 u f t) = (term4372 _90724 A g _37168 u f t).
Proof. exact (eq_refl (term4380 _90724 A g _37168 u f t)). Qed.
Lemma lem3528925 {_90724 A : Type'} (g : type686 A) (_37168 : type852 _90724 A) (u : A -> Prop) (f : A -> _90724) : (term4381 _90724 A g _37168 u f) = (term4374 _90724 A g _37168 u f).
Proof. exact (fun_ext (fun t : A -> Prop => @lem3528924 _90724 A g _37168 u f t)). Qed.
Lemma lem3528926 {A : Type'} : (@ex (A -> Prop)) = (@ex (A -> Prop)).
Proof. exact (eq_refl (@ex (A -> Prop))). Qed.
Lemma lem3528927 {_90724 A : Type'} (g : type686 A) (_37168 : type852 _90724 A) (u : A -> Prop) (f : A -> _90724) : (term4382 _90724 A g _37168 u f) = (term4375 _90724 A g _37168 u f).
Proof. exact (MK_COMB (@lem3528926 A) (@lem3528925 _90724 A g _37168 u f)). Qed.
Lemma lem3528928 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem3528929 {_90724 A : Type'} (g : type686 A) (_37168 : type852 _90724 A) (u : A -> Prop) (f : A -> _90724) : (term4383 _90724 A g _37168 u f) = (term4376 _90724 A g _37168 u f).
Proof. exact (MK_COMB (@lem3528928) (@lem3528927 _90724 A g _37168 u f)). Qed.
Lemma lem3528930 {_90724 A : Type'} (f : A -> _90724) (g : type686 A) : ((term2056 _90724 A f g) = (term2057 _90724 A f g)) = ((term2056 _90724 A f g) = (term2057 _90724 A f g)).
Proof. exact (eq_refl ((term2056 _90724 A f g) = (term2057 _90724 A f g))). Qed.
Lemma lem3528931 {_90724 A : Type'} (_37168 : type852 _90724 A) (u : A -> Prop) (f : A -> _90724) (g : type686 A) : (term4378 _90724 A _37168 u f g) = (term4377 _90724 A _37168 u f g).
Proof. exact (MK_COMB (@lem3528929 _90724 A g _37168 u f) (@lem3528930 _90724 A f g)). Qed.
Lemma lem3528932 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem3528933 {_90724 A : Type'} (_37168 : type852 _90724 A) (u : A -> Prop) (f : A -> _90724) (g : type686 A) : (term4384 _90724 A _37168 u f g) = (term4385 _90724 A _37168 u f g).
Proof. exact (MK_COMB (@lem3528932) (@lem3528931 _90724 A _37168 u f g)). Qed.
Lemma lem3528934 {_90724 A : Type'} (g : type686 A) (_37168 : type852 _90724 A) (u : A -> Prop) (f : A -> _90724) (t : A -> Prop) : (term4380 _90724 A g _37168 u f t) = (term4372 _90724 A g _37168 u f t).
Proof. exact (eq_refl (term4380 _90724 A g _37168 u f t)). Qed.
Lemma lem3528935 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem3528936 {_90724 A : Type'} (g : type686 A) (_37168 : type852 _90724 A) (u : A -> Prop) (f : A -> _90724) (t : A -> Prop) : (term4386 _90724 A g _37168 u f t) = (term4387 _90724 A g _37168 u f t).
Proof. exact (MK_COMB (@lem3528935) (@lem3528934 _90724 A g _37168 u f t)). Qed.
Lemma lem3528937 {_90724 A : Type'} (f : A -> _90724) (g : type686 A) : ((term2056 _90724 A f g) = (term2057 _90724 A f g)) = ((term2056 _90724 A f g) = (term2057 _90724 A f g)).
Proof. exact (eq_refl ((term2056 _90724 A f g) = (term2057 _90724 A f g))). Qed.
Lemma lem3528938 {_90724 A : Type'} (_37168 : type852 _90724 A) (u : A -> Prop) (t : A -> Prop) (f : A -> _90724) (g : type686 A) : (term4388 _90724 A _37168 u t f g) = (term4389 _90724 A _37168 u t f g).
Proof. exact (MK_COMB (@lem3528936 _90724 A g _37168 u f t) (@lem3528937 _90724 A f g)). Qed.
Lemma lem3528939 {_90724 A : Type'} (_37168 : type852 _90724 A) (u : A -> Prop) (f : A -> _90724) (g : type686 A) : (term4390 _90724 A _37168 u f g) = (term4391 _90724 A _37168 u f g).
Proof. exact (fun_ext (fun t : A -> Prop => @lem3528938 _90724 A _37168 u t f g)). Qed.
Lemma lem3528940 {A : Type'} : (@ex (A -> Prop)) = (@ex (A -> Prop)).
Proof. exact (eq_refl (@ex (A -> Prop))). Qed.
Lemma lem3528941 {_90724 A : Type'} (_37168 : type852 _90724 A) (u : A -> Prop) (f : A -> _90724) (g : type686 A) : (term4379 _90724 A _37168 u f g) = (term4392 _90724 A _37168 u f g).
Proof. exact (MK_COMB (@lem3528940 A) (@lem3528939 _90724 A _37168 u f g)). Qed.
Lemma lem3528942 {_90724 A : Type'} (_37168 : type852 _90724 A) (u : A -> Prop) (f : A -> _90724) (g : type686 A) : ((term4378 _90724 A _37168 u f g) = (term4379 _90724 A _37168 u f g)) = ((term4377 _90724 A _37168 u f g) = (term4392 _90724 A _37168 u f g)).
Proof. exact (MK_COMB (@lem3528933 _90724 A _37168 u f g) (@lem3528941 _90724 A _37168 u f g)). Qed.
Lemma lem3528943 {_90724 A : Type'} (_37168 : type852 _90724 A) (u : A -> Prop) (f : A -> _90724) (g : type686 A) : (term4377 _90724 A _37168 u f g) = (term4392 _90724 A _37168 u f g).
Proof. exact (EQ_MP (@lem3528942 _90724 A _37168 u f g) (@lem3528923 _90724 A _37168 u f g)). Qed.
Lemma lem3528944 {_90724 A : Type'} (_37168 : type852 _90724 A) (u : A -> Prop) (f : A -> _90724) (g : type686 A) : (term4357 _90724 A _37168 u f g) = (term4392 _90724 A _37168 u f g).
Proof. exact (TRANS (@lem3528919 _90724 A _37168 u f g) (@lem3528943 _90724 A _37168 u f g)). Qed.
Lemma lem3528945 {_90724 A : Type'} (_37168 : type852 _90724 A) (u : A -> Prop) (f : A -> _90724) : (term4358 _90724 A _37168 u f) = (term4393 _90724 A _37168 u f).
Proof. exact (fun_ext (fun g : type686 A => @lem3528944 _90724 A _37168 u f g)). Qed.
Lemma lem3528946 {A : Type'} : (@all ((A -> Prop) -> Prop)) = (@all ((A -> Prop) -> Prop)).
Proof. exact (eq_refl (@all ((A -> Prop) -> Prop))). Qed.
Lemma lem3528947 {_90724 A : Type'} (_37168 : type852 _90724 A) (u : A -> Prop) (f : A -> _90724) : (term4359 _90724 A _37168 u f) = (term4394 _90724 A _37168 u f).
Proof. exact (MK_COMB (@lem3528946 A) (@lem3528945 _90724 A _37168 u f)). Qed.
Lemma lem3528949 {A B : Type'} (P : type1413 A B) : (term453 A B P) = (term454 A B P).
Proof. exact (EQ_MP (@lem18899 A B P) (@lem18898 A B P)). Qed.
Lemma lem3528950 {A : Type'} (P : type174 A) : (term4139 A P) = (term4140 A P).
Proof. exact (@lem3528949 (type686 A) (A -> Prop) P). Qed.
Lemma lem3528951 {_90724 A : Type'} (_37168 : type852 _90724 A) (u : A -> Prop) (f : A -> _90724) : (term4395 _90724 A _37168 u f) = (term4396 _90724 A _37168 u f).
Proof. exact (@lem3528950 A (term4397 _90724 A _37168 u f)). Qed.
Lemma lem3528952 {_90724 A : Type'} (_37168 : type852 _90724 A) (u : A -> Prop) (f : A -> _90724) (g : type686 A) : (term4398 _90724 A _37168 u f g) = (term4391 _90724 A _37168 u f g).
Proof. exact (eq_refl (term4398 _90724 A _37168 u f g)). Qed.
Lemma lem3528953 {A : Type'} (t : A -> Prop) : t = t.
Proof. exact (eq_refl t). Qed.
Lemma lem3528954 {_90724 A : Type'} (_37168 : type852 _90724 A) (u : A -> Prop) (f : A -> _90724) (g : type686 A) (t : A -> Prop) : (term4399 _90724 A _37168 u f g t) = (term4400 _90724 A _37168 u f g t).
Proof. exact (MK_COMB (@lem3528952 _90724 A _37168 u f g) (@lem3528953 A t)). Qed.
Lemma lem3528955 {_90724 A : Type'} (_37168 : type852 _90724 A) (u : A -> Prop) (t : A -> Prop) (f : A -> _90724) (g : type686 A) : (term4400 _90724 A _37168 u f g t) = (term4389 _90724 A _37168 u t f g).
Proof. exact (eq_refl (term4400 _90724 A _37168 u f g t)). Qed.
Lemma lem3528956 {_90724 A : Type'} (_37168 : type852 _90724 A) (u : A -> Prop) (t : A -> Prop) (f : A -> _90724) (g : type686 A) : (term4399 _90724 A _37168 u f g t) = (term4389 _90724 A _37168 u t f g).
Proof. exact (TRANS (@lem3528954 _90724 A _37168 u f g t) (@lem3528955 _90724 A _37168 u t f g)). Qed.
Lemma lem3528957 {_90724 A : Type'} (_37168 : type852 _90724 A) (u : A -> Prop) (f : A -> _90724) (g : type686 A) : (term4401 _90724 A _37168 u f g) = (term4391 _90724 A _37168 u f g).
Proof. exact (fun_ext (fun t : A -> Prop => @lem3528956 _90724 A _37168 u t f g)). Qed.
Lemma lem3528958 {A : Type'} : (@ex (A -> Prop)) = (@ex (A -> Prop)).
Proof. exact (eq_refl (@ex (A -> Prop))). Qed.
Lemma lem3528959 {_90724 A : Type'} (_37168 : type852 _90724 A) (u : A -> Prop) (f : A -> _90724) (g : type686 A) : (term4402 _90724 A _37168 u f g) = (term4392 _90724 A _37168 u f g).
Proof. exact (MK_COMB (@lem3528958 A) (@lem3528957 _90724 A _37168 u f g)). Qed.
Lemma lem3528960 {_90724 A : Type'} (_37168 : type852 _90724 A) (u : A -> Prop) (f : A -> _90724) : (term4403 _90724 A _37168 u f) = (term4393 _90724 A _37168 u f).
Proof. exact (fun_ext (fun g : type686 A => @lem3528959 _90724 A _37168 u f g)). Qed.
Lemma lem3528961 {A : Type'} : (@all ((A -> Prop) -> Prop)) = (@all ((A -> Prop) -> Prop)).
Proof. exact (eq_refl (@all ((A -> Prop) -> Prop))). Qed.
Lemma lem3528962 {_90724 A : Type'} (_37168 : type852 _90724 A) (u : A -> Prop) (f : A -> _90724) : (term4395 _90724 A _37168 u f) = (term4394 _90724 A _37168 u f).
Proof. exact (MK_COMB (@lem3528961 A) (@lem3528960 _90724 A _37168 u f)). Qed.
Lemma lem3528963 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem3528964 {_90724 A : Type'} (_37168 : type852 _90724 A) (u : A -> Prop) (f : A -> _90724) : (term4404 _90724 A _37168 u f) = (term4405 _90724 A _37168 u f).
Proof. exact (MK_COMB (@lem3528963) (@lem3528962 _90724 A _37168 u f)). Qed.
Lemma lem3528965 {_90724 A : Type'} (_37168 : type852 _90724 A) (u : A -> Prop) (f : A -> _90724) (g : type686 A) : (term4398 _90724 A _37168 u f g) = (term4391 _90724 A _37168 u f g).
Proof. exact (eq_refl (term4398 _90724 A _37168 u f g)). Qed.
Lemma lem3528966 {A : Type'} (t : type178 A) (g : type686 A) : (t g) = (t g).
Proof. exact (eq_refl (t g)). Qed.
Lemma lem3528967 {_90724 A : Type'} (_37168 : type852 _90724 A) (u : A -> Prop) (f : A -> _90724) (t : type178 A) (g : type686 A) : (term4406 _90724 A _37168 u f t g) = (term4407 _90724 A _37168 u f t g).
Proof. exact (MK_COMB (@lem3528965 _90724 A _37168 u f g) (@lem3528966 A t g)). Qed.
Lemma lem3528968 {_90724 A : Type'} (_37168 : type852 _90724 A) (u : A -> Prop) (t : type178 A) (f : A -> _90724) (g : type686 A) : (term4407 _90724 A _37168 u f t g) = (term4408 _90724 A _37168 u t f g).
Proof. exact (eq_refl (term4407 _90724 A _37168 u f t g)). Qed.
Lemma lem3528969 {_90724 A : Type'} (_37168 : type852 _90724 A) (u : A -> Prop) (t : type178 A) (f : A -> _90724) (g : type686 A) : (term4406 _90724 A _37168 u f t g) = (term4408 _90724 A _37168 u t f g).
Proof. exact (TRANS (@lem3528967 _90724 A _37168 u f t g) (@lem3528968 _90724 A _37168 u t f g)). Qed.
Lemma lem3528970 {_90724 A : Type'} (_37168 : type852 _90724 A) (u : A -> Prop) (t : type178 A) (f : A -> _90724) : (term4409 _90724 A _37168 u f t) = (term4410 _90724 A _37168 u t f).
Proof. exact (fun_ext (fun g : type686 A => @lem3528969 _90724 A _37168 u t f g)). Qed.
Lemma lem3528971 {A : Type'} : (@all ((A -> Prop) -> Prop)) = (@all ((A -> Prop) -> Prop)).
Proof. exact (eq_refl (@all ((A -> Prop) -> Prop))). Qed.
Lemma lem3528972 {_90724 A : Type'} (_37168 : type852 _90724 A) (u : A -> Prop) (t : type178 A) (f : A -> _90724) : (term4411 _90724 A _37168 u f t) = (term4412 _90724 A _37168 u t f).
Proof. exact (MK_COMB (@lem3528971 A) (@lem3528970 _90724 A _37168 u t f)). Qed.
Lemma lem3528973 {_90724 A : Type'} (_37168 : type852 _90724 A) (u : A -> Prop) (f : A -> _90724) : (term4413 _90724 A _37168 u f) = (term4414 _90724 A _37168 u f).
Proof. exact (fun_ext (fun t : type178 A => @lem3528972 _90724 A _37168 u t f)). Qed.
Lemma lem3528974 {A : Type'} : (@ex (((A -> Prop) -> Prop) -> A -> Prop)) = (@ex (((A -> Prop) -> Prop) -> A -> Prop)).
Proof. exact (eq_refl (@ex (((A -> Prop) -> Prop) -> A -> Prop))). Qed.
Lemma lem3528975 {_90724 A : Type'} (_37168 : type852 _90724 A) (u : A -> Prop) (f : A -> _90724) : (term4396 _90724 A _37168 u f) = (term4415 _90724 A _37168 u f).
Proof. exact (MK_COMB (@lem3528974 A) (@lem3528973 _90724 A _37168 u f)). Qed.
Lemma lem3528976 {_90724 A : Type'} (_37168 : type852 _90724 A) (u : A -> Prop) (f : A -> _90724) : ((term4395 _90724 A _37168 u f) = (term4396 _90724 A _37168 u f)) = ((term4394 _90724 A _37168 u f) = (term4415 _90724 A _37168 u f)).
Proof. exact (MK_COMB (@lem3528964 _90724 A _37168 u f) (@lem3528975 _90724 A _37168 u f)). Qed.
Lemma lem3528977 {_90724 A : Type'} (_37168 : type852 _90724 A) (u : A -> Prop) (f : A -> _90724) : (term4394 _90724 A _37168 u f) = (term4415 _90724 A _37168 u f).
Proof. exact (EQ_MP (@lem3528976 _90724 A _37168 u f) (@lem3528951 _90724 A _37168 u f)). Qed.
Lemma lem3528978 {_90724 A : Type'} (_37168 : type852 _90724 A) (u : A -> Prop) (f : A -> _90724) : (term4359 _90724 A _37168 u f) = (term4415 _90724 A _37168 u f).
Proof. exact (TRANS (@lem3528947 _90724 A _37168 u f) (@lem3528977 _90724 A _37168 u f)). Qed.
Lemma lem3528979 {_90724 A : Type'} (_37168 : type852 _90724 A) (u : A -> Prop) : (term4360 _90724 A _37168 u) = (term4416 _90724 A _37168 u).
Proof. exact (fun_ext (fun f : A -> _90724 => @lem3528978 _90724 A _37168 u f)). Qed.
Lemma lem3528980 {_90724 A : Type'} : (@all (A -> _90724)) = (@all (A -> _90724)).
Proof. exact (eq_refl (@all (A -> _90724))). Qed.
Lemma lem3528981 {_90724 A : Type'} (_37168 : type852 _90724 A) (u : A -> Prop) : (term4361 _90724 A _37168 u) = (term4417 _90724 A _37168 u).
Proof. exact (MK_COMB (@lem3528980 _90724 A) (@lem3528979 _90724 A _37168 u)). Qed.
Lemma lem3528983 {A B : Type'} (P : type1413 A B) : (term453 A B P) = (term454 A B P).
Proof. exact (EQ_MP (@lem18899 A B P) (@lem18898 A B P)). Qed.
Lemma lem3528984 {_90724 A : Type'} (P : type768 _90724 A) : (term4418 _90724 A P) = (term4419 _90724 A P).
Proof. exact (@lem3528983 (A -> _90724) (type178 A) P). Qed.
Lemma lem3528985 {_90724 A : Type'} (_37168 : type852 _90724 A) (u : A -> Prop) : (term4420 _90724 A _37168 u) = (term4421 _90724 A _37168 u).
Proof. exact (@lem3528984 _90724 A (term4422 _90724 A _37168 u)). Qed.
Lemma lem3528986 {_90724 A : Type'} (_37168 : type852 _90724 A) (u : A -> Prop) (f : A -> _90724) : (term4423 _90724 A _37168 u f) = (term4414 _90724 A _37168 u f).
Proof. exact (eq_refl (term4423 _90724 A _37168 u f)). Qed.
Lemma lem3528987 {A : Type'} (t : type178 A) : t = t.
Proof. exact (eq_refl t). Qed.
Lemma lem3528988 {_90724 A : Type'} (_37168 : type852 _90724 A) (u : A -> Prop) (f : A -> _90724) (t : type178 A) : (term4424 _90724 A _37168 u f t) = (term4425 _90724 A _37168 u f t).
Proof. exact (MK_COMB (@lem3528986 _90724 A _37168 u f) (@lem3528987 A t)). Qed.
Lemma lem3528989 {_90724 A : Type'} (_37168 : type852 _90724 A) (u : A -> Prop) (t : type178 A) (f : A -> _90724) : (term4425 _90724 A _37168 u f t) = (term4412 _90724 A _37168 u t f).
Proof. exact (eq_refl (term4425 _90724 A _37168 u f t)). Qed.
Lemma lem3528990 {_90724 A : Type'} (_37168 : type852 _90724 A) (u : A -> Prop) (t : type178 A) (f : A -> _90724) : (term4424 _90724 A _37168 u f t) = (term4412 _90724 A _37168 u t f).
Proof. exact (TRANS (@lem3528988 _90724 A _37168 u f t) (@lem3528989 _90724 A _37168 u t f)). Qed.
Lemma lem3528991 {_90724 A : Type'} (_37168 : type852 _90724 A) (u : A -> Prop) (f : A -> _90724) : (term4426 _90724 A _37168 u f) = (term4414 _90724 A _37168 u f).
Proof. exact (fun_ext (fun t : type178 A => @lem3528990 _90724 A _37168 u t f)). Qed.
Lemma lem3528992 {A : Type'} : (@ex (((A -> Prop) -> Prop) -> A -> Prop)) = (@ex (((A -> Prop) -> Prop) -> A -> Prop)).
Proof. exact (eq_refl (@ex (((A -> Prop) -> Prop) -> A -> Prop))). Qed.
Lemma lem3528993 {_90724 A : Type'} (_37168 : type852 _90724 A) (u : A -> Prop) (f : A -> _90724) : (term4427 _90724 A _37168 u f) = (term4415 _90724 A _37168 u f).
Proof. exact (MK_COMB (@lem3528992 A) (@lem3528991 _90724 A _37168 u f)). Qed.
Lemma lem3528994 {_90724 A : Type'} (_37168 : type852 _90724 A) (u : A -> Prop) : (term4428 _90724 A _37168 u) = (term4416 _90724 A _37168 u).
Proof. exact (fun_ext (fun f : A -> _90724 => @lem3528993 _90724 A _37168 u f)). Qed.
Lemma lem3528995 {_90724 A : Type'} : (@all (A -> _90724)) = (@all (A -> _90724)).
Proof. exact (eq_refl (@all (A -> _90724))). Qed.
Lemma lem3528996 {_90724 A : Type'} (_37168 : type852 _90724 A) (u : A -> Prop) : (term4420 _90724 A _37168 u) = (term4417 _90724 A _37168 u).
Proof. exact (MK_COMB (@lem3528995 _90724 A) (@lem3528994 _90724 A _37168 u)). Qed.
Lemma lem3528997 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem3528998 {_90724 A : Type'} (_37168 : type852 _90724 A) (u : A -> Prop) : (term4429 _90724 A _37168 u) = (term4430 _90724 A _37168 u).
Proof. exact (MK_COMB (@lem3528997) (@lem3528996 _90724 A _37168 u)). Qed.
Lemma lem3528999 {_90724 A : Type'} (_37168 : type852 _90724 A) (u : A -> Prop) (f : A -> _90724) : (term4423 _90724 A _37168 u f) = (term4414 _90724 A _37168 u f).
Proof. exact (eq_refl (term4423 _90724 A _37168 u f)). Qed.
Lemma lem3529000 {_90724 A : Type'} (t : type777 _90724 A) (f : A -> _90724) : (t f) = (t f).
Proof. exact (eq_refl (t f)). Qed.
Lemma lem3529001 {_90724 A : Type'} (_37168 : type852 _90724 A) (u : A -> Prop) (t : type777 _90724 A) (f : A -> _90724) : (term4431 _90724 A _37168 u t f) = (term4432 _90724 A _37168 u t f).
Proof. exact (MK_COMB (@lem3528999 _90724 A _37168 u f) (@lem3529000 _90724 A t f)). Qed.
Lemma lem3529002 {_90724 A : Type'} (_37168 : type852 _90724 A) (u : A -> Prop) (t : type777 _90724 A) (f : A -> _90724) : (term4432 _90724 A _37168 u t f) = (term4433 _90724 A _37168 u t f).
Proof. exact (eq_refl (term4432 _90724 A _37168 u t f)). Qed.
Lemma lem3529003 {_90724 A : Type'} (_37168 : type852 _90724 A) (u : A -> Prop) (t : type777 _90724 A) (f : A -> _90724) : (term4431 _90724 A _37168 u t f) = (term4433 _90724 A _37168 u t f).
Proof. exact (TRANS (@lem3529001 _90724 A _37168 u t f) (@lem3529002 _90724 A _37168 u t f)). Qed.
Lemma lem3529004 {_90724 A : Type'} (_37168 : type852 _90724 A) (u : A -> Prop) (t : type777 _90724 A) : (term4434 _90724 A _37168 u t) = (term4435 _90724 A _37168 u t).
Proof. exact (fun_ext (fun f : A -> _90724 => @lem3529003 _90724 A _37168 u t f)). Qed.
Lemma lem3529005 {_90724 A : Type'} : (@all (A -> _90724)) = (@all (A -> _90724)).
Proof. exact (eq_refl (@all (A -> _90724))). Qed.
Lemma lem3529006 {_90724 A : Type'} (_37168 : type852 _90724 A) (u : A -> Prop) (t : type777 _90724 A) : (term4436 _90724 A _37168 u t) = (term4437 _90724 A _37168 u t).
Proof. exact (MK_COMB (@lem3529005 _90724 A) (@lem3529004 _90724 A _37168 u t)). Qed.
Lemma lem3529007 {_90724 A : Type'} (_37168 : type852 _90724 A) (u : A -> Prop) : (term4438 _90724 A _37168 u) = (term4439 _90724 A _37168 u).
Proof. exact (fun_ext (fun t : type777 _90724 A => @lem3529006 _90724 A _37168 u t)). Qed.
Lemma lem3529008 {_90724 A : Type'} : (@ex ((A -> _90724) -> ((A -> Prop) -> Prop) -> A -> Prop)) = (@ex ((A -> _90724) -> ((A -> Prop) -> Prop) -> A -> Prop)).
Proof. exact (eq_refl (@ex ((A -> _90724) -> ((A -> Prop) -> Prop) -> A -> Prop))). Qed.
Lemma lem3529009 {_90724 A : Type'} (_37168 : type852 _90724 A) (u : A -> Prop) : (term4421 _90724 A _37168 u) = (term4440 _90724 A _37168 u).
Proof. exact (MK_COMB (@lem3529008 _90724 A) (@lem3529007 _90724 A _37168 u)). Qed.
Lemma lem3529010 {_90724 A : Type'} (_37168 : type852 _90724 A) (u : A -> Prop) : ((term4420 _90724 A _37168 u) = (term4421 _90724 A _37168 u)) = ((term4417 _90724 A _37168 u) = (term4440 _90724 A _37168 u)).
Proof. exact (MK_COMB (@lem3528998 _90724 A _37168 u) (@lem3529009 _90724 A _37168 u)). Qed.
Lemma lem3529011 {_90724 A : Type'} (_37168 : type852 _90724 A) (u : A -> Prop) : (term4417 _90724 A _37168 u) = (term4440 _90724 A _37168 u).
Proof. exact (EQ_MP (@lem3529010 _90724 A _37168 u) (@lem3528985 _90724 A _37168 u)). Qed.
Lemma lem3529012 {_90724 A : Type'} (_37168 : type852 _90724 A) (u : A -> Prop) : (term4361 _90724 A _37168 u) = (term4440 _90724 A _37168 u).
Proof. exact (TRANS (@lem3528981 _90724 A _37168 u) (@lem3529011 _90724 A _37168 u)). Qed.
Lemma lem3529013 {_90724 A : Type'} (_37168 : type852 _90724 A) : (term4362 _90724 A _37168) = (term4441 _90724 A _37168).
Proof. exact (fun_ext (fun u : A -> Prop => @lem3529012 _90724 A _37168 u)). Qed.
Lemma lem3529014 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem3529015 {_90724 A : Type'} (_37168 : type852 _90724 A) : (term4363 _90724 A _37168) = (term4442 _90724 A _37168).
Proof. exact (MK_COMB (@lem3529014 A) (@lem3529013 _90724 A _37168)). Qed.
Lemma lem3529017 {A B : Type'} (P : type1413 A B) : (term453 A B P) = (term454 A B P).
Proof. exact (EQ_MP (@lem18899 A B P) (@lem18898 A B P)). Qed.
Lemma lem3529018 {_90724 A : Type'} (P : type825 _90724 A) : (term4443 _90724 A P) = (term4444 _90724 A P).
Proof. exact (@lem3529017 (A -> Prop) (type777 _90724 A) P). Qed.
Lemma lem3529019 {_90724 A : Type'} (_37168 : type852 _90724 A) : (term4445 _90724 A _37168) = (term4446 _90724 A _37168).
Proof. exact (@lem3529018 _90724 A (term4447 _90724 A _37168)). Qed.
Lemma lem3529020 {_90724 A : Type'} (_37168 : type852 _90724 A) (u : A -> Prop) : (term4448 _90724 A _37168 u) = (term4439 _90724 A _37168 u).
Proof. exact (eq_refl (term4448 _90724 A _37168 u)). Qed.
Lemma lem3529021 {_90724 A : Type'} (t : type777 _90724 A) : t = t.
Proof. exact (eq_refl t). Qed.
Lemma lem3529022 {_90724 A : Type'} (_37168 : type852 _90724 A) (u : A -> Prop) (t : type777 _90724 A) : (term4449 _90724 A _37168 u t) = (term4450 _90724 A _37168 u t).
Proof. exact (MK_COMB (@lem3529020 _90724 A _37168 u) (@lem3529021 _90724 A t)). Qed.
Lemma lem3529023 {_90724 A : Type'} (_37168 : type852 _90724 A) (u : A -> Prop) (t : type777 _90724 A) : (term4450 _90724 A _37168 u t) = (term4437 _90724 A _37168 u t).
Proof. exact (eq_refl (term4450 _90724 A _37168 u t)). Qed.
Lemma lem3529024 {_90724 A : Type'} (_37168 : type852 _90724 A) (u : A -> Prop) (t : type777 _90724 A) : (term4449 _90724 A _37168 u t) = (term4437 _90724 A _37168 u t).
Proof. exact (TRANS (@lem3529022 _90724 A _37168 u t) (@lem3529023 _90724 A _37168 u t)). Qed.
Lemma lem3529025 {_90724 A : Type'} (_37168 : type852 _90724 A) (u : A -> Prop) : (term4451 _90724 A _37168 u) = (term4439 _90724 A _37168 u).
Proof. exact (fun_ext (fun t : type777 _90724 A => @lem3529024 _90724 A _37168 u t)). Qed.
Lemma lem3529026 {_90724 A : Type'} : (@ex ((A -> _90724) -> ((A -> Prop) -> Prop) -> A -> Prop)) = (@ex ((A -> _90724) -> ((A -> Prop) -> Prop) -> A -> Prop)).
Proof. exact (eq_refl (@ex ((A -> _90724) -> ((A -> Prop) -> Prop) -> A -> Prop))). Qed.
Lemma lem3529027 {_90724 A : Type'} (_37168 : type852 _90724 A) (u : A -> Prop) : (term4452 _90724 A _37168 u) = (term4440 _90724 A _37168 u).
Proof. exact (MK_COMB (@lem3529026 _90724 A) (@lem3529025 _90724 A _37168 u)). Qed.
Lemma lem3529028 {_90724 A : Type'} (_37168 : type852 _90724 A) : (term4453 _90724 A _37168) = (term4441 _90724 A _37168).
Proof. exact (fun_ext (fun u : A -> Prop => @lem3529027 _90724 A _37168 u)). Qed.
Lemma lem3529029 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem3529030 {_90724 A : Type'} (_37168 : type852 _90724 A) : (term4445 _90724 A _37168) = (term4442 _90724 A _37168).
Proof. exact (MK_COMB (@lem3529029 A) (@lem3529028 _90724 A _37168)). Qed.
Lemma lem3529031 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem3529032 {_90724 A : Type'} (_37168 : type852 _90724 A) : (term4454 _90724 A _37168) = (term4455 _90724 A _37168).
Proof. exact (MK_COMB (@lem3529031) (@lem3529030 _90724 A _37168)). Qed.
Lemma lem3529033 {_90724 A : Type'} (_37168 : type852 _90724 A) (u : A -> Prop) : (term4448 _90724 A _37168 u) = (term4439 _90724 A _37168 u).
Proof. exact (eq_refl (term4448 _90724 A _37168 u)). Qed.
Lemma lem3529034 {_90724 A : Type'} (t : type847 _90724 A) (u : A -> Prop) : (t u) = (t u).
Proof. exact (eq_refl (t u)). Qed.
Lemma lem3529035 {_90724 A : Type'} (_37168 : type852 _90724 A) (t : type847 _90724 A) (u : A -> Prop) : (term4456 _90724 A _37168 t u) = (term4457 _90724 A _37168 t u).
Proof. exact (MK_COMB (@lem3529033 _90724 A _37168 u) (@lem3529034 _90724 A t u)). Qed.
Lemma lem3529036 {_90724 A : Type'} (_37168 : type852 _90724 A) (t : type847 _90724 A) (u : A -> Prop) : (term4457 _90724 A _37168 t u) = (term4458 _90724 A _37168 t u).
Proof. exact (eq_refl (term4457 _90724 A _37168 t u)). Qed.
Lemma lem3529037 {_90724 A : Type'} (_37168 : type852 _90724 A) (t : type847 _90724 A) (u : A -> Prop) : (term4456 _90724 A _37168 t u) = (term4458 _90724 A _37168 t u).
Proof. exact (TRANS (@lem3529035 _90724 A _37168 t u) (@lem3529036 _90724 A _37168 t u)). Qed.
Lemma lem3529038 {_90724 A : Type'} (_37168 : type852 _90724 A) (t : type847 _90724 A) : (term4459 _90724 A _37168 t) = (term4460 _90724 A _37168 t).
Proof. exact (fun_ext (fun u : A -> Prop => @lem3529037 _90724 A _37168 t u)). Qed.
Lemma lem3529039 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem3529040 {_90724 A : Type'} (_37168 : type852 _90724 A) (t : type847 _90724 A) : (term4461 _90724 A _37168 t) = (term4462 _90724 A _37168 t).
Proof. exact (MK_COMB (@lem3529039 A) (@lem3529038 _90724 A _37168 t)). Qed.
Lemma lem3529041 {_90724 A : Type'} (_37168 : type852 _90724 A) : (term4463 _90724 A _37168) = (term4464 _90724 A _37168).
Proof. exact (fun_ext (fun t : type847 _90724 A => @lem3529040 _90724 A _37168 t)). Qed.
Lemma lem3529042 {_90724 A : Type'} : (@ex ((A -> Prop) -> (A -> _90724) -> ((A -> Prop) -> Prop) -> A -> Prop)) = (@ex ((A -> Prop) -> (A -> _90724) -> ((A -> Prop) -> Prop) -> A -> Prop)).
Proof. exact (eq_refl (@ex ((A -> Prop) -> (A -> _90724) -> ((A -> Prop) -> Prop) -> A -> Prop))). Qed.
Lemma lem3529043 {_90724 A : Type'} (_37168 : type852 _90724 A) : (term4446 _90724 A _37168) = (term4465 _90724 A _37168).
Proof. exact (MK_COMB (@lem3529042 _90724 A) (@lem3529041 _90724 A _37168)). Qed.
Lemma lem3529044 {_90724 A : Type'} (_37168 : type852 _90724 A) : ((term4445 _90724 A _37168) = (term4446 _90724 A _37168)) = ((term4442 _90724 A _37168) = (term4465 _90724 A _37168)).
Proof. exact (MK_COMB (@lem3529032 _90724 A _37168) (@lem3529043 _90724 A _37168)). Qed.
Lemma lem3529045 {_90724 A : Type'} (_37168 : type852 _90724 A) : (term4442 _90724 A _37168) = (term4465 _90724 A _37168).
Proof. exact (EQ_MP (@lem3529044 _90724 A _37168) (@lem3529019 _90724 A _37168)). Qed.
Lemma lem3529047 {_90724 A : Type'} (_37168 : type852 _90724 A) : (term4363 _90724 A _37168) = (term4465 _90724 A _37168).
Proof. exact (TRANS (@lem3529015 _90724 A _37168) (@lem3529045 _90724 A _37168)). Qed.
Lemma lem3529048 {_90724 A : Type'} (_37168 : type852 _90724 A) : (term2464 _90724 A _37168) = (term4465 _90724 A _37168).
Proof. exact (TRANS (@lem3528790 _90724 A _37168) (@lem3529047 _90724 A _37168)). Qed.
Lemma lem3529049 {_90724 A : Type'} (_37168 : type852 _90724 A) (h1 : term2464 _90724 A _37168) : term4465 _90724 A _37168.
Proof. exact (EQ_MP (@lem3529048 _90724 A _37168) (@lem3520024 _90724 A _37168 h1)). Qed.
Lemma lem3529052 {A : Type'} (g : type686 A) : (term4079 A g) = (g = (@EMPTY (A -> Prop))).
Proof. exact (@lem16933 (g = (@EMPTY (A -> Prop)))). Qed.
Lemma lem3529060 {A B : Type'} (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) (t : A -> Prop) : (term4080 A B _37163 u f t) = (term4081 A B _37163 u f t).
Proof. exact (@lem17045 (@SUBSET A t u) (term2079 A B _37163 u f t)). Qed.
Lemma lem3529062 {A : Type'} (t : A -> Prop) (g : type686 A) : (term4082 A t g) = (term4082 A t g).
Proof. exact (eq_refl (term4082 A t g)). Qed.
Lemma lem3529063 {A B : Type'} (g : type686 A) (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) (t : A -> Prop) : (term4083 A B g _37163 u f t) = (term4084 A B g _37163 u f t).
Proof. exact (MK_COMB (@lem3529062 A t g) (@lem3529060 A B _37163 u f t)). Qed.
Lemma lem3529064 {A B : Type'} (g : type686 A) (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) (t : A -> Prop) : (term4085 A B g _37163 u f t) = (term4083 A B g _37163 u f t).
Proof. exact (@lem17362 (@IN (A -> Prop) t g) (term2080 A B _37163 u f t)). Qed.
Lemma lem3529065 {A B : Type'} (g : type686 A) (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) (t : A -> Prop) : (term4085 A B g _37163 u f t) = (term4084 A B g _37163 u f t).
Proof. exact (TRANS (@lem3529064 A B g _37163 u f t) (@lem3529063 A B g _37163 u f t)). Qed.
Lemma lem3529066 {A : Type'} (P : type686 A) : (term298 A P) = (term299 A P).
Proof. exact (@lem18392 (A -> Prop) P). Qed.
Lemma lem3529067 {A B : Type'} (g : type686 A) (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) : (term4086 A B g _37163 u f) = (term4087 A B g _37163 u f).
Proof. exact (@lem3529066 A (term2082 A B g _37163 u f)). Qed.
Lemma lem3529068 {A B : Type'} (g : type686 A) (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) (t : A -> Prop) : (term4088 A B g _37163 u f t) = (term2081 A B g _37163 u f t).
Proof. exact (eq_refl (term4088 A B g _37163 u f t)). Qed.
Lemma lem3529069 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem3529070 {A B : Type'} (g : type686 A) (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) (t : A -> Prop) : (term4089 A B g _37163 u f t) = (term4085 A B g _37163 u f t).
Proof. exact (MK_COMB (@lem3529069) (@lem3529068 A B g _37163 u f t)). Qed.
Lemma lem3529071 {A B : Type'} (g : type686 A) (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) (t : A -> Prop) : (term4089 A B g _37163 u f t) = (term4084 A B g _37163 u f t).
Proof. exact (TRANS (@lem3529070 A B g _37163 u f t) (@lem3529065 A B g _37163 u f t)). Qed.
Lemma lem3529072 {A B : Type'} (g : type686 A) (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) : (term4090 A B g _37163 u f) = (term4091 A B g _37163 u f).
Proof. exact (fun_ext (fun t : A -> Prop => @lem3529071 A B g _37163 u f t)). Qed.
Lemma lem3529073 {A : Type'} : (@ex (A -> Prop)) = (@ex (A -> Prop)).
Proof. exact (eq_refl (@ex (A -> Prop))). Qed.
Lemma lem3529074 {A B : Type'} (g : type686 A) (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) : (term4087 A B g _37163 u f) = (term4092 A B g _37163 u f).
Proof. exact (MK_COMB (@lem3529073 A) (@lem3529072 A B g _37163 u f)). Qed.
Lemma lem3529075 {A B : Type'} (g : type686 A) (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) : (term4086 A B g _37163 u f) = (term4092 A B g _37163 u f).
Proof. exact (TRANS (@lem3529067 A B g _37163 u f) (@lem3529074 A B g _37163 u f)). Qed.
Lemma lem3529076 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem3529077 {A : Type'} (g : type686 A) : (term4093 A g) = (term4094 A g).
Proof. exact (MK_COMB (@lem3529076) (@lem3529052 A g)). Qed.
Lemma lem3529078 {A B : Type'} (g : type686 A) (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) : (term4095 A B g _37163 u f) = (term4096 A B g _37163 u f).
Proof. exact (MK_COMB (@lem3529077 A g) (@lem3529075 A B g _37163 u f)). Qed.
Lemma lem3529079 {A B : Type'} (g : type686 A) (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) : (term4097 A B g _37163 u f) = (term4095 A B g _37163 u f).
Proof. exact (@lem17045 (term40 A g) (term2083 A B g _37163 u f)). Qed.
Lemma lem3529080 {A B : Type'} (g : type686 A) (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) : (term4097 A B g _37163 u f) = (term4096 A B g _37163 u f).
Proof. exact (TRANS (@lem3529079 A B g _37163 u f) (@lem3529078 A B g _37163 u f)). Qed.
Lemma lem3529081 {A B : Type'} (f : A -> B) (g : type686 A) : ((term49 A B f g) = (term50 A B f g)) = ((term49 A B f g) = (term50 A B f g)).
Proof. exact (eq_refl ((term49 A B f g) = (term50 A B f g))). Qed.
Lemma lem3529082 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem3529083 {A B : Type'} (g : type686 A) (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) : (term4098 A B g _37163 u f) = (term4099 A B g _37163 u f).
Proof. exact (MK_COMB (@lem3529082) (@lem3529080 A B g _37163 u f)). Qed.
Lemma lem3529084 {A B : Type'} (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) (g : type686 A) : (term4100 A B _37163 u f g) = (term4101 A B _37163 u f g).
Proof. exact (MK_COMB (@lem3529083 A B g _37163 u f) (@lem3529081 A B f g)). Qed.
Lemma lem3529085 {A B : Type'} (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) (g : type686 A) : (term2086 A B _37163 u f g) = (term4100 A B _37163 u f g).
Proof. exact (@lem17265 (term2084 A B g _37163 u f) ((term49 A B f g) = (term50 A B f g))). Qed.
Lemma lem3529086 {A B : Type'} (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) (g : type686 A) : (term2086 A B _37163 u f g) = (term4101 A B _37163 u f g).
Proof. exact (TRANS (@lem3529085 A B _37163 u f g) (@lem3529084 A B _37163 u f g)). Qed.
Lemma lem3529087 {A B : Type'} (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) : (term2088 A B _37163 u f) = (term4102 A B _37163 u f).
Proof. exact (fun_ext (fun g : type686 A => @lem3529086 A B _37163 u f g)). Qed.
Lemma lem3529088 {A : Type'} : (@all ((A -> Prop) -> Prop)) = (@all ((A -> Prop) -> Prop)).
Proof. exact (eq_refl (@all ((A -> Prop) -> Prop))). Qed.
Lemma lem3529089 {A B : Type'} (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) : (term2089 A B _37163 u f) = (term4103 A B _37163 u f).
Proof. exact (MK_COMB (@lem3529088 A) (@lem3529087 A B _37163 u f)). Qed.
Lemma lem3529090 {A B : Type'} (_37163 : type627 A B) (u : A -> Prop) : (term2091 A B _37163 u) = (term4104 A B _37163 u).
Proof. exact (fun_ext (fun f : A -> B => @lem3529089 A B _37163 u f)). Qed.
Lemma lem3529091 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem3529092 {A B : Type'} (_37163 : type627 A B) (u : A -> Prop) : (term2092 A B _37163 u) = (term4105 A B _37163 u).
Proof. exact (MK_COMB (@lem3529091 A B) (@lem3529090 A B _37163 u)). Qed.
Lemma lem3529093 {A B : Type'} (_37163 : type627 A B) : (term2094 A B _37163) = (term4106 A B _37163).
Proof. exact (fun_ext (fun u : A -> Prop => @lem3529092 A B _37163 u)). Qed.
Lemma lem3529094 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem3529095 {A B : Type'} (_37163 : type627 A B) : (term2095 A B _37163) = (term4107 A B _37163).
Proof. exact (MK_COMB (@lem3529094 A) (@lem3529093 A B _37163)). Qed.
Lemma lem3529202 {A : Type'} (P : Prop) (Q : A -> Prop) : (term434 A P Q) = (term435 A P Q).
Proof. exact (EQ_MP (@lem18911 A P Q) (@lem18910 A P Q)). Qed.
Lemma lem3529203 {A : Type'} (P : Prop) (Q : type686 A) : (term436 A P Q) = (term437 A P Q).
Proof. exact (@lem3529202 (A -> Prop) P Q). Qed.
Lemma lem3529204 {A B : Type'} (g : type686 A) (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) : (term4108 A B g _37163 u f) = (term4109 A B g _37163 u f).
Proof. exact (@lem3529203 A (g = (@EMPTY (A -> Prop))) (term4091 A B g _37163 u f)). Qed.
Lemma lem3529205 {A B : Type'} (g : type686 A) (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) (t : A -> Prop) : (term4110 A B g _37163 u f t) = (term4084 A B g _37163 u f t).
Proof. exact (eq_refl (term4110 A B g _37163 u f t)). Qed.
Lemma lem3529206 {A B : Type'} (g : type686 A) (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) : (term4111 A B g _37163 u f) = (term4091 A B g _37163 u f).
Proof. exact (fun_ext (fun t : A -> Prop => @lem3529205 A B g _37163 u f t)). Qed.
Lemma lem3529207 {A : Type'} : (@ex (A -> Prop)) = (@ex (A -> Prop)).
Proof. exact (eq_refl (@ex (A -> Prop))). Qed.
Lemma lem3529208 {A B : Type'} (g : type686 A) (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) : (term4112 A B g _37163 u f) = (term4092 A B g _37163 u f).
Proof. exact (MK_COMB (@lem3529207 A) (@lem3529206 A B g _37163 u f)). Qed.
Lemma lem3529209 {A : Type'} (g : type686 A) : (term4094 A g) = (term4094 A g).
Proof. exact (eq_refl (term4094 A g)). Qed.
Lemma lem3529210 {A B : Type'} (g : type686 A) (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) : (term4108 A B g _37163 u f) = (term4096 A B g _37163 u f).
Proof. exact (MK_COMB (@lem3529209 A g) (@lem3529208 A B g _37163 u f)). Qed.
Lemma lem3529211 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem3529212 {A B : Type'} (g : type686 A) (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) : (term4113 A B g _37163 u f) = (term4114 A B g _37163 u f).
Proof. exact (MK_COMB (@lem3529211) (@lem3529210 A B g _37163 u f)). Qed.
Lemma lem3529213 {A B : Type'} (g : type686 A) (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) (t : A -> Prop) : (term4110 A B g _37163 u f t) = (term4084 A B g _37163 u f t).
Proof. exact (eq_refl (term4110 A B g _37163 u f t)). Qed.
Lemma lem3529214 {A : Type'} (g : type686 A) : (term4094 A g) = (term4094 A g).
Proof. exact (eq_refl (term4094 A g)). Qed.
Lemma lem3529215 {A B : Type'} (g : type686 A) (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) (t : A -> Prop) : (term4115 A B g _37163 u f t) = (term4116 A B g _37163 u f t).
Proof. exact (MK_COMB (@lem3529214 A g) (@lem3529213 A B g _37163 u f t)). Qed.
Lemma lem3529216 {A B : Type'} (g : type686 A) (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) : (term4117 A B g _37163 u f) = (term4118 A B g _37163 u f).
Proof. exact (fun_ext (fun t : A -> Prop => @lem3529215 A B g _37163 u f t)). Qed.
Lemma lem3529217 {A : Type'} : (@ex (A -> Prop)) = (@ex (A -> Prop)).
Proof. exact (eq_refl (@ex (A -> Prop))). Qed.
Lemma lem3529218 {A B : Type'} (g : type686 A) (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) : (term4109 A B g _37163 u f) = (term4119 A B g _37163 u f).
Proof. exact (MK_COMB (@lem3529217 A) (@lem3529216 A B g _37163 u f)). Qed.
Lemma lem3529219 {A B : Type'} (g : type686 A) (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) : ((term4108 A B g _37163 u f) = (term4109 A B g _37163 u f)) = ((term4096 A B g _37163 u f) = (term4119 A B g _37163 u f)).
Proof. exact (MK_COMB (@lem3529212 A B g _37163 u f) (@lem3529218 A B g _37163 u f)). Qed.
Lemma lem3529220 {A B : Type'} (g : type686 A) (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) : (term4096 A B g _37163 u f) = (term4119 A B g _37163 u f).
Proof. exact (EQ_MP (@lem3529219 A B g _37163 u f) (@lem3529204 A B g _37163 u f)). Qed.
Lemma lem3529221 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem3529222 {A B : Type'} (g : type686 A) (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) : (term4099 A B g _37163 u f) = (term4120 A B g _37163 u f).
Proof. exact (MK_COMB (@lem3529221) (@lem3529220 A B g _37163 u f)). Qed.
Lemma lem3529223 {A B : Type'} (f : A -> B) (g : type686 A) : ((term49 A B f g) = (term50 A B f g)) = ((term49 A B f g) = (term50 A B f g)).
Proof. exact (eq_refl ((term49 A B f g) = (term50 A B f g))). Qed.
Lemma lem3529224 {A B : Type'} (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) (g : type686 A) : (term4101 A B _37163 u f g) = (term4121 A B _37163 u f g).
Proof. exact (MK_COMB (@lem3529222 A B g _37163 u f) (@lem3529223 A B f g)). Qed.
Lemma lem3529226 {A : Type'} (P : A -> Prop) (Q : Prop) : (term550 A P Q) = (term551 A P Q).
Proof. exact (EQ_MP (@lem18905 A P Q) (@lem18904 A P Q)). Qed.
Lemma lem3529227 {A : Type'} (P : type686 A) (Q : Prop) : (term567 A P Q) = (term568 A P Q).
Proof. exact (@lem3529226 (A -> Prop) P Q). Qed.
Lemma lem3529228 {A B : Type'} (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) (g : type686 A) : (term4122 A B _37163 u f g) = (term4123 A B _37163 u f g).
Proof. exact (@lem3529227 A (term4118 A B g _37163 u f) ((term49 A B f g) = (term50 A B f g))). Qed.
Lemma lem3529229 {A B : Type'} (g : type686 A) (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) (t : A -> Prop) : (term4124 A B g _37163 u f t) = (term4116 A B g _37163 u f t).
Proof. exact (eq_refl (term4124 A B g _37163 u f t)). Qed.
Lemma lem3529230 {A B : Type'} (g : type686 A) (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) : (term4125 A B g _37163 u f) = (term4118 A B g _37163 u f).
Proof. exact (fun_ext (fun t : A -> Prop => @lem3529229 A B g _37163 u f t)). Qed.
Lemma lem3529231 {A : Type'} : (@ex (A -> Prop)) = (@ex (A -> Prop)).
Proof. exact (eq_refl (@ex (A -> Prop))). Qed.
Lemma lem3529232 {A B : Type'} (g : type686 A) (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) : (term4126 A B g _37163 u f) = (term4119 A B g _37163 u f).
Proof. exact (MK_COMB (@lem3529231 A) (@lem3529230 A B g _37163 u f)). Qed.
Lemma lem3529233 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem3529234 {A B : Type'} (g : type686 A) (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) : (term4127 A B g _37163 u f) = (term4120 A B g _37163 u f).
Proof. exact (MK_COMB (@lem3529233) (@lem3529232 A B g _37163 u f)). Qed.
Lemma lem3529235 {A B : Type'} (f : A -> B) (g : type686 A) : ((term49 A B f g) = (term50 A B f g)) = ((term49 A B f g) = (term50 A B f g)).
Proof. exact (eq_refl ((term49 A B f g) = (term50 A B f g))). Qed.
Lemma lem3529236 {A B : Type'} (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) (g : type686 A) : (term4122 A B _37163 u f g) = (term4121 A B _37163 u f g).
Proof. exact (MK_COMB (@lem3529234 A B g _37163 u f) (@lem3529235 A B f g)). Qed.
Lemma lem3529237 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem3529238 {A B : Type'} (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) (g : type686 A) : (term4128 A B _37163 u f g) = (term4129 A B _37163 u f g).
Proof. exact (MK_COMB (@lem3529237) (@lem3529236 A B _37163 u f g)). Qed.
Lemma lem3529239 {A B : Type'} (g : type686 A) (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) (t : A -> Prop) : (term4124 A B g _37163 u f t) = (term4116 A B g _37163 u f t).
Proof. exact (eq_refl (term4124 A B g _37163 u f t)). Qed.
Lemma lem3529240 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem3529241 {A B : Type'} (g : type686 A) (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) (t : A -> Prop) : (term4130 A B g _37163 u f t) = (term4131 A B g _37163 u f t).
Proof. exact (MK_COMB (@lem3529240) (@lem3529239 A B g _37163 u f t)). Qed.
Lemma lem3529242 {A B : Type'} (f : A -> B) (g : type686 A) : ((term49 A B f g) = (term50 A B f g)) = ((term49 A B f g) = (term50 A B f g)).
Proof. exact (eq_refl ((term49 A B f g) = (term50 A B f g))). Qed.
Lemma lem3529243 {A B : Type'} (_37163 : type627 A B) (u : A -> Prop) (t : A -> Prop) (f : A -> B) (g : type686 A) : (term4132 A B _37163 u t f g) = (term4133 A B _37163 u t f g).
Proof. exact (MK_COMB (@lem3529241 A B g _37163 u f t) (@lem3529242 A B f g)). Qed.
Lemma lem3529244 {A B : Type'} (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) (g : type686 A) : (term4134 A B _37163 u f g) = (term4135 A B _37163 u f g).
Proof. exact (fun_ext (fun t : A -> Prop => @lem3529243 A B _37163 u t f g)). Qed.
Lemma lem3529245 {A : Type'} : (@ex (A -> Prop)) = (@ex (A -> Prop)).
Proof. exact (eq_refl (@ex (A -> Prop))). Qed.
Lemma lem3529246 {A B : Type'} (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) (g : type686 A) : (term4123 A B _37163 u f g) = (term4136 A B _37163 u f g).
Proof. exact (MK_COMB (@lem3529245 A) (@lem3529244 A B _37163 u f g)). Qed.
Lemma lem3529247 {A B : Type'} (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) (g : type686 A) : ((term4122 A B _37163 u f g) = (term4123 A B _37163 u f g)) = ((term4121 A B _37163 u f g) = (term4136 A B _37163 u f g)).
Proof. exact (MK_COMB (@lem3529238 A B _37163 u f g) (@lem3529246 A B _37163 u f g)). Qed.
Lemma lem3529248 {A B : Type'} (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) (g : type686 A) : (term4121 A B _37163 u f g) = (term4136 A B _37163 u f g).
Proof. exact (EQ_MP (@lem3529247 A B _37163 u f g) (@lem3529228 A B _37163 u f g)). Qed.
Lemma lem3529249 {A B : Type'} (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) (g : type686 A) : (term4101 A B _37163 u f g) = (term4136 A B _37163 u f g).
Proof. exact (TRANS (@lem3529224 A B _37163 u f g) (@lem3529248 A B _37163 u f g)). Qed.
Lemma lem3529250 {A B : Type'} (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) : (term4102 A B _37163 u f) = (term4137 A B _37163 u f).
Proof. exact (fun_ext (fun g : type686 A => @lem3529249 A B _37163 u f g)). Qed.
Lemma lem3529251 {A : Type'} : (@all ((A -> Prop) -> Prop)) = (@all ((A -> Prop) -> Prop)).
Proof. exact (eq_refl (@all ((A -> Prop) -> Prop))). Qed.
Lemma lem3529252 {A B : Type'} (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) : (term4103 A B _37163 u f) = (term4138 A B _37163 u f).
Proof. exact (MK_COMB (@lem3529251 A) (@lem3529250 A B _37163 u f)). Qed.
Lemma lem3529254 {A B : Type'} (P : type1413 A B) : (term453 A B P) = (term454 A B P).
Proof. exact (EQ_MP (@lem18899 A B P) (@lem18898 A B P)). Qed.
Lemma lem3529255 {A : Type'} (P : type174 A) : (term4139 A P) = (term4140 A P).
Proof. exact (@lem3529254 (type686 A) (A -> Prop) P). Qed.
Lemma lem3529256 {A B : Type'} (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) : (term4141 A B _37163 u f) = (term4142 A B _37163 u f).
Proof. exact (@lem3529255 A (term4143 A B _37163 u f)). Qed.
Lemma lem3529257 {A B : Type'} (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) (g : type686 A) : (term4144 A B _37163 u f g) = (term4135 A B _37163 u f g).
Proof. exact (eq_refl (term4144 A B _37163 u f g)). Qed.
Lemma lem3529258 {A : Type'} (t : A -> Prop) : t = t.
Proof. exact (eq_refl t). Qed.
Lemma lem3529259 {A B : Type'} (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) (g : type686 A) (t : A -> Prop) : (term4145 A B _37163 u f g t) = (term4146 A B _37163 u f g t).
Proof. exact (MK_COMB (@lem3529257 A B _37163 u f g) (@lem3529258 A t)). Qed.
Lemma lem3529260 {A B : Type'} (_37163 : type627 A B) (u : A -> Prop) (t : A -> Prop) (f : A -> B) (g : type686 A) : (term4146 A B _37163 u f g t) = (term4133 A B _37163 u t f g).
Proof. exact (eq_refl (term4146 A B _37163 u f g t)). Qed.
Lemma lem3529261 {A B : Type'} (_37163 : type627 A B) (u : A -> Prop) (t : A -> Prop) (f : A -> B) (g : type686 A) : (term4145 A B _37163 u f g t) = (term4133 A B _37163 u t f g).
Proof. exact (TRANS (@lem3529259 A B _37163 u f g t) (@lem3529260 A B _37163 u t f g)). Qed.
Lemma lem3529262 {A B : Type'} (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) (g : type686 A) : (term4147 A B _37163 u f g) = (term4135 A B _37163 u f g).
Proof. exact (fun_ext (fun t : A -> Prop => @lem3529261 A B _37163 u t f g)). Qed.
Lemma lem3529263 {A : Type'} : (@ex (A -> Prop)) = (@ex (A -> Prop)).
Proof. exact (eq_refl (@ex (A -> Prop))). Qed.
Lemma lem3529264 {A B : Type'} (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) (g : type686 A) : (term4148 A B _37163 u f g) = (term4136 A B _37163 u f g).
Proof. exact (MK_COMB (@lem3529263 A) (@lem3529262 A B _37163 u f g)). Qed.
Lemma lem3529265 {A B : Type'} (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) : (term4149 A B _37163 u f) = (term4137 A B _37163 u f).
Proof. exact (fun_ext (fun g : type686 A => @lem3529264 A B _37163 u f g)). Qed.
Lemma lem3529266 {A : Type'} : (@all ((A -> Prop) -> Prop)) = (@all ((A -> Prop) -> Prop)).
Proof. exact (eq_refl (@all ((A -> Prop) -> Prop))). Qed.
Lemma lem3529267 {A B : Type'} (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) : (term4141 A B _37163 u f) = (term4138 A B _37163 u f).
Proof. exact (MK_COMB (@lem3529266 A) (@lem3529265 A B _37163 u f)). Qed.
Lemma lem3529268 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem3529269 {A B : Type'} (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) : (term4150 A B _37163 u f) = (term4151 A B _37163 u f).
Proof. exact (MK_COMB (@lem3529268) (@lem3529267 A B _37163 u f)). Qed.
Lemma lem3529270 {A B : Type'} (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) (g : type686 A) : (term4144 A B _37163 u f g) = (term4135 A B _37163 u f g).
Proof. exact (eq_refl (term4144 A B _37163 u f g)). Qed.
Lemma lem3529271 {A : Type'} (t : type178 A) (g : type686 A) : (t g) = (t g).
Proof. exact (eq_refl (t g)). Qed.
Lemma lem3529272 {A B : Type'} (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) (t : type178 A) (g : type686 A) : (term4152 A B _37163 u f t g) = (term4153 A B _37163 u f t g).
Proof. exact (MK_COMB (@lem3529270 A B _37163 u f g) (@lem3529271 A t g)). Qed.
Lemma lem3529273 {A B : Type'} (_37163 : type627 A B) (u : A -> Prop) (t : type178 A) (f : A -> B) (g : type686 A) : (term4153 A B _37163 u f t g) = (term4154 A B _37163 u t f g).
Proof. exact (eq_refl (term4153 A B _37163 u f t g)). Qed.
Lemma lem3529274 {A B : Type'} (_37163 : type627 A B) (u : A -> Prop) (t : type178 A) (f : A -> B) (g : type686 A) : (term4152 A B _37163 u f t g) = (term4154 A B _37163 u t f g).
Proof. exact (TRANS (@lem3529272 A B _37163 u f t g) (@lem3529273 A B _37163 u t f g)). Qed.
Lemma lem3529275 {A B : Type'} (_37163 : type627 A B) (u : A -> Prop) (t : type178 A) (f : A -> B) : (term4155 A B _37163 u f t) = (term4156 A B _37163 u t f).
Proof. exact (fun_ext (fun g : type686 A => @lem3529274 A B _37163 u t f g)). Qed.
Lemma lem3529276 {A : Type'} : (@all ((A -> Prop) -> Prop)) = (@all ((A -> Prop) -> Prop)).
Proof. exact (eq_refl (@all ((A -> Prop) -> Prop))). Qed.
Lemma lem3529277 {A B : Type'} (_37163 : type627 A B) (u : A -> Prop) (t : type178 A) (f : A -> B) : (term4157 A B _37163 u f t) = (term4158 A B _37163 u t f).
Proof. exact (MK_COMB (@lem3529276 A) (@lem3529275 A B _37163 u t f)). Qed.
Lemma lem3529278 {A B : Type'} (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) : (term4159 A B _37163 u f) = (term4160 A B _37163 u f).
Proof. exact (fun_ext (fun t : type178 A => @lem3529277 A B _37163 u t f)). Qed.
Lemma lem3529279 {A : Type'} : (@ex (((A -> Prop) -> Prop) -> A -> Prop)) = (@ex (((A -> Prop) -> Prop) -> A -> Prop)).
Proof. exact (eq_refl (@ex (((A -> Prop) -> Prop) -> A -> Prop))). Qed.
Lemma lem3529280 {A B : Type'} (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) : (term4142 A B _37163 u f) = (term4161 A B _37163 u f).
Proof. exact (MK_COMB (@lem3529279 A) (@lem3529278 A B _37163 u f)). Qed.
Lemma lem3529281 {A B : Type'} (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) : ((term4141 A B _37163 u f) = (term4142 A B _37163 u f)) = ((term4138 A B _37163 u f) = (term4161 A B _37163 u f)).
Proof. exact (MK_COMB (@lem3529269 A B _37163 u f) (@lem3529280 A B _37163 u f)). Qed.
Lemma lem3529282 {A B : Type'} (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) : (term4138 A B _37163 u f) = (term4161 A B _37163 u f).
Proof. exact (EQ_MP (@lem3529281 A B _37163 u f) (@lem3529256 A B _37163 u f)). Qed.
Lemma lem3529283 {A B : Type'} (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) : (term4103 A B _37163 u f) = (term4161 A B _37163 u f).
Proof. exact (TRANS (@lem3529252 A B _37163 u f) (@lem3529282 A B _37163 u f)). Qed.
Lemma lem3529284 {A B : Type'} (_37163 : type627 A B) (u : A -> Prop) : (term4104 A B _37163 u) = (term4162 A B _37163 u).
Proof. exact (fun_ext (fun f : A -> B => @lem3529283 A B _37163 u f)). Qed.
Lemma lem3529285 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem3529286 {A B : Type'} (_37163 : type627 A B) (u : A -> Prop) : (term4105 A B _37163 u) = (term4163 A B _37163 u).
Proof. exact (MK_COMB (@lem3529285 A B) (@lem3529284 A B _37163 u)). Qed.
Lemma lem3529288 {A B : Type'} (P : type1413 A B) : (term453 A B P) = (term454 A B P).
Proof. exact (EQ_MP (@lem18899 A B P) (@lem18898 A B P)). Qed.
Lemma lem3529289 {A B : Type'} (P : type489 A B) : (term4164 A B P) = (term4165 A B P).
Proof. exact (@lem3529288 (A -> B) (type178 A) P). Qed.
Lemma lem3529290 {A B : Type'} (_37163 : type627 A B) (u : A -> Prop) : (term4166 A B _37163 u) = (term4167 A B _37163 u).
Proof. exact (@lem3529289 A B (term4168 A B _37163 u)). Qed.
Lemma lem3529291 {A B : Type'} (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) : (term4169 A B _37163 u f) = (term4160 A B _37163 u f).
Proof. exact (eq_refl (term4169 A B _37163 u f)). Qed.
Lemma lem3529292 {A : Type'} (t : type178 A) : t = t.
Proof. exact (eq_refl t). Qed.
Lemma lem3529293 {A B : Type'} (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) (t : type178 A) : (term4170 A B _37163 u f t) = (term4171 A B _37163 u f t).
Proof. exact (MK_COMB (@lem3529291 A B _37163 u f) (@lem3529292 A t)). Qed.
Lemma lem3529294 {A B : Type'} (_37163 : type627 A B) (u : A -> Prop) (t : type178 A) (f : A -> B) : (term4171 A B _37163 u f t) = (term4158 A B _37163 u t f).
Proof. exact (eq_refl (term4171 A B _37163 u f t)). Qed.
Lemma lem3529295 {A B : Type'} (_37163 : type627 A B) (u : A -> Prop) (t : type178 A) (f : A -> B) : (term4170 A B _37163 u f t) = (term4158 A B _37163 u t f).
Proof. exact (TRANS (@lem3529293 A B _37163 u f t) (@lem3529294 A B _37163 u t f)). Qed.
Lemma lem3529296 {A B : Type'} (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) : (term4172 A B _37163 u f) = (term4160 A B _37163 u f).
Proof. exact (fun_ext (fun t : type178 A => @lem3529295 A B _37163 u t f)). Qed.
Lemma lem3529297 {A : Type'} : (@ex (((A -> Prop) -> Prop) -> A -> Prop)) = (@ex (((A -> Prop) -> Prop) -> A -> Prop)).
Proof. exact (eq_refl (@ex (((A -> Prop) -> Prop) -> A -> Prop))). Qed.
Lemma lem3529298 {A B : Type'} (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) : (term4173 A B _37163 u f) = (term4161 A B _37163 u f).
Proof. exact (MK_COMB (@lem3529297 A) (@lem3529296 A B _37163 u f)). Qed.
Lemma lem3529299 {A B : Type'} (_37163 : type627 A B) (u : A -> Prop) : (term4174 A B _37163 u) = (term4162 A B _37163 u).
Proof. exact (fun_ext (fun f : A -> B => @lem3529298 A B _37163 u f)). Qed.
Lemma lem3529300 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem3529301 {A B : Type'} (_37163 : type627 A B) (u : A -> Prop) : (term4166 A B _37163 u) = (term4163 A B _37163 u).
Proof. exact (MK_COMB (@lem3529300 A B) (@lem3529299 A B _37163 u)). Qed.
Lemma lem3529302 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem3529303 {A B : Type'} (_37163 : type627 A B) (u : A -> Prop) : (term4175 A B _37163 u) = (term4176 A B _37163 u).
Proof. exact (MK_COMB (@lem3529302) (@lem3529301 A B _37163 u)). Qed.
Lemma lem3529304 {A B : Type'} (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) : (term4169 A B _37163 u f) = (term4160 A B _37163 u f).
Proof. exact (eq_refl (term4169 A B _37163 u f)). Qed.
Lemma lem3529305 {A B : Type'} (t : type504 A B) (f : A -> B) : (t f) = (t f).
Proof. exact (eq_refl (t f)). Qed.
Lemma lem3529306 {A B : Type'} (_37163 : type627 A B) (u : A -> Prop) (t : type504 A B) (f : A -> B) : (term4177 A B _37163 u t f) = (term4178 A B _37163 u t f).
Proof. exact (MK_COMB (@lem3529304 A B _37163 u f) (@lem3529305 A B t f)). Qed.
Lemma lem3529307 {A B : Type'} (_37163 : type627 A B) (u : A -> Prop) (t : type504 A B) (f : A -> B) : (term4178 A B _37163 u t f) = (term4179 A B _37163 u t f).
Proof. exact (eq_refl (term4178 A B _37163 u t f)). Qed.
Lemma lem3529308 {A B : Type'} (_37163 : type627 A B) (u : A -> Prop) (t : type504 A B) (f : A -> B) : (term4177 A B _37163 u t f) = (term4179 A B _37163 u t f).
Proof. exact (TRANS (@lem3529306 A B _37163 u t f) (@lem3529307 A B _37163 u t f)). Qed.
Lemma lem3529309 {A B : Type'} (_37163 : type627 A B) (u : A -> Prop) (t : type504 A B) : (term4180 A B _37163 u t) = (term4181 A B _37163 u t).
Proof. exact (fun_ext (fun f : A -> B => @lem3529308 A B _37163 u t f)). Qed.
Lemma lem3529310 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem3529311 {A B : Type'} (_37163 : type627 A B) (u : A -> Prop) (t : type504 A B) : (term4182 A B _37163 u t) = (term4183 A B _37163 u t).
Proof. exact (MK_COMB (@lem3529310 A B) (@lem3529309 A B _37163 u t)). Qed.
Lemma lem3529312 {A B : Type'} (_37163 : type627 A B) (u : A -> Prop) : (term4184 A B _37163 u) = (term4185 A B _37163 u).
Proof. exact (fun_ext (fun t : type504 A B => @lem3529311 A B _37163 u t)). Qed.
Lemma lem3529313 {A B : Type'} : (@ex ((A -> B) -> ((A -> Prop) -> Prop) -> A -> Prop)) = (@ex ((A -> B) -> ((A -> Prop) -> Prop) -> A -> Prop)).
Proof. exact (eq_refl (@ex ((A -> B) -> ((A -> Prop) -> Prop) -> A -> Prop))). Qed.
Lemma lem3529314 {A B : Type'} (_37163 : type627 A B) (u : A -> Prop) : (term4167 A B _37163 u) = (term4186 A B _37163 u).
Proof. exact (MK_COMB (@lem3529313 A B) (@lem3529312 A B _37163 u)). Qed.
Lemma lem3529315 {A B : Type'} (_37163 : type627 A B) (u : A -> Prop) : ((term4166 A B _37163 u) = (term4167 A B _37163 u)) = ((term4163 A B _37163 u) = (term4186 A B _37163 u)).
Proof. exact (MK_COMB (@lem3529303 A B _37163 u) (@lem3529314 A B _37163 u)). Qed.
Lemma lem3529316 {A B : Type'} (_37163 : type627 A B) (u : A -> Prop) : (term4163 A B _37163 u) = (term4186 A B _37163 u).
Proof. exact (EQ_MP (@lem3529315 A B _37163 u) (@lem3529290 A B _37163 u)). Qed.
Lemma lem3529317 {A B : Type'} (_37163 : type627 A B) (u : A -> Prop) : (term4105 A B _37163 u) = (term4186 A B _37163 u).
Proof. exact (TRANS (@lem3529286 A B _37163 u) (@lem3529316 A B _37163 u)). Qed.
Lemma lem3529318 {A B : Type'} (_37163 : type627 A B) : (term4106 A B _37163) = (term4187 A B _37163).
Proof. exact (fun_ext (fun u : A -> Prop => @lem3529317 A B _37163 u)). Qed.
Lemma lem3529319 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem3529320 {A B : Type'} (_37163 : type627 A B) : (term4107 A B _37163) = (term4188 A B _37163).
Proof. exact (MK_COMB (@lem3529319 A) (@lem3529318 A B _37163)). Qed.
Lemma lem3529322 {A B : Type'} (P : type1413 A B) : (term453 A B P) = (term454 A B P).
Proof. exact (EQ_MP (@lem18899 A B P) (@lem18898 A B P)). Qed.
Lemma lem3529323 {A B : Type'} (P : type588 A B) : (term4189 A B P) = (term4190 A B P).
Proof. exact (@lem3529322 (A -> Prop) (type504 A B) P). Qed.
Lemma lem3529324 {A B : Type'} (_37163 : type627 A B) : (term4191 A B _37163) = (term4192 A B _37163).
Proof. exact (@lem3529323 A B (term4193 A B _37163)). Qed.
Lemma lem3529325 {A B : Type'} (_37163 : type627 A B) (u : A -> Prop) : (term4194 A B _37163 u) = (term4185 A B _37163 u).
Proof. exact (eq_refl (term4194 A B _37163 u)). Qed.
Lemma lem3529326 {A B : Type'} (t : type504 A B) : t = t.
Proof. exact (eq_refl t). Qed.
Lemma lem3529327 {A B : Type'} (_37163 : type627 A B) (u : A -> Prop) (t : type504 A B) : (term4195 A B _37163 u t) = (term4196 A B _37163 u t).
Proof. exact (MK_COMB (@lem3529325 A B _37163 u) (@lem3529326 A B t)). Qed.
Lemma lem3529328 {A B : Type'} (_37163 : type627 A B) (u : A -> Prop) (t : type504 A B) : (term4196 A B _37163 u t) = (term4183 A B _37163 u t).
Proof. exact (eq_refl (term4196 A B _37163 u t)). Qed.
Lemma lem3529329 {A B : Type'} (_37163 : type627 A B) (u : A -> Prop) (t : type504 A B) : (term4195 A B _37163 u t) = (term4183 A B _37163 u t).
Proof. exact (TRANS (@lem3529327 A B _37163 u t) (@lem3529328 A B _37163 u t)). Qed.
Lemma lem3529330 {A B : Type'} (_37163 : type627 A B) (u : A -> Prop) : (term4197 A B _37163 u) = (term4185 A B _37163 u).
Proof. exact (fun_ext (fun t : type504 A B => @lem3529329 A B _37163 u t)). Qed.
Lemma lem3529331 {A B : Type'} : (@ex ((A -> B) -> ((A -> Prop) -> Prop) -> A -> Prop)) = (@ex ((A -> B) -> ((A -> Prop) -> Prop) -> A -> Prop)).
Proof. exact (eq_refl (@ex ((A -> B) -> ((A -> Prop) -> Prop) -> A -> Prop))). Qed.
Lemma lem3529332 {A B : Type'} (_37163 : type627 A B) (u : A -> Prop) : (term4198 A B _37163 u) = (term4186 A B _37163 u).
Proof. exact (MK_COMB (@lem3529331 A B) (@lem3529330 A B _37163 u)). Qed.
Lemma lem3529333 {A B : Type'} (_37163 : type627 A B) : (term4199 A B _37163) = (term4187 A B _37163).
Proof. exact (fun_ext (fun u : A -> Prop => @lem3529332 A B _37163 u)). Qed.
Lemma lem3529334 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem3529335 {A B : Type'} (_37163 : type627 A B) : (term4191 A B _37163) = (term4188 A B _37163).
Proof. exact (MK_COMB (@lem3529334 A) (@lem3529333 A B _37163)). Qed.
Lemma lem3529336 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem3529337 {A B : Type'} (_37163 : type627 A B) : (term4200 A B _37163) = (term4201 A B _37163).
Proof. exact (MK_COMB (@lem3529336) (@lem3529335 A B _37163)). Qed.
Lemma lem3529338 {A B : Type'} (_37163 : type627 A B) (u : A -> Prop) : (term4194 A B _37163 u) = (term4185 A B _37163 u).
Proof. exact (eq_refl (term4194 A B _37163 u)). Qed.
Lemma lem3529339 {A B : Type'} (t : type625 A B) (u : A -> Prop) : (t u) = (t u).
Proof. exact (eq_refl (t u)). Qed.
Lemma lem3529340 {A B : Type'} (_37163 : type627 A B) (t : type625 A B) (u : A -> Prop) : (term4202 A B _37163 t u) = (term4203 A B _37163 t u).
Proof. exact (MK_COMB (@lem3529338 A B _37163 u) (@lem3529339 A B t u)). Qed.
Lemma lem3529341 {A B : Type'} (_37163 : type627 A B) (t : type625 A B) (u : A -> Prop) : (term4203 A B _37163 t u) = (term4204 A B _37163 t u).
Proof. exact (eq_refl (term4203 A B _37163 t u)). Qed.
Lemma lem3529342 {A B : Type'} (_37163 : type627 A B) (t : type625 A B) (u : A -> Prop) : (term4202 A B _37163 t u) = (term4204 A B _37163 t u).
Proof. exact (TRANS (@lem3529340 A B _37163 t u) (@lem3529341 A B _37163 t u)). Qed.
Lemma lem3529343 {A B : Type'} (_37163 : type627 A B) (t : type625 A B) : (term4205 A B _37163 t) = (term4206 A B _37163 t).
Proof. exact (fun_ext (fun u : A -> Prop => @lem3529342 A B _37163 t u)). Qed.
Lemma lem3529344 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem3529345 {A B : Type'} (_37163 : type627 A B) (t : type625 A B) : (term4207 A B _37163 t) = (term4208 A B _37163 t).
Proof. exact (MK_COMB (@lem3529344 A) (@lem3529343 A B _37163 t)). Qed.
Lemma lem3529346 {A B : Type'} (_37163 : type627 A B) : (term4209 A B _37163) = (term4210 A B _37163).
Proof. exact (fun_ext (fun t : type625 A B => @lem3529345 A B _37163 t)). Qed.
Lemma lem3529347 {A B : Type'} : (@ex ((A -> Prop) -> (A -> B) -> ((A -> Prop) -> Prop) -> A -> Prop)) = (@ex ((A -> Prop) -> (A -> B) -> ((A -> Prop) -> Prop) -> A -> Prop)).
Proof. exact (eq_refl (@ex ((A -> Prop) -> (A -> B) -> ((A -> Prop) -> Prop) -> A -> Prop))). Qed.
Lemma lem3529348 {A B : Type'} (_37163 : type627 A B) : (term4192 A B _37163) = (term4211 A B _37163).
Proof. exact (MK_COMB (@lem3529347 A B) (@lem3529346 A B _37163)). Qed.
Lemma lem3529349 {A B : Type'} (_37163 : type627 A B) : ((term4191 A B _37163) = (term4192 A B _37163)) = ((term4188 A B _37163) = (term4211 A B _37163)).
Proof. exact (MK_COMB (@lem3529337 A B _37163) (@lem3529348 A B _37163)). Qed.
Lemma lem3529350 {A B : Type'} (_37163 : type627 A B) : (term4188 A B _37163) = (term4211 A B _37163).
Proof. exact (EQ_MP (@lem3529349 A B _37163) (@lem3529324 A B _37163)). Qed.
Lemma lem3529352 {A B : Type'} (_37163 : type627 A B) : (term4107 A B _37163) = (term4211 A B _37163).
Proof. exact (TRANS (@lem3529320 A B _37163) (@lem3529350 A B _37163)). Qed.
Lemma lem3529353 {A B : Type'} (_37163 : type627 A B) : (term2095 A B _37163) = (term4211 A B _37163).
Proof. exact (TRANS (@lem3529095 A B _37163) (@lem3529352 A B _37163)). Qed.
Lemma lem3529354 {A B : Type'} (_37163 : type627 A B) (h1 : term2095 A B _37163) : term4211 A B _37163.
Proof. exact (EQ_MP (@lem3529353 A B _37163) (@lem3520025 A B _37163 h1)). Qed.
Lemma lem3529357 {B : Type'} (g : type686 B) : (term4079 B g) = (g = (@EMPTY (B -> Prop))).
Proof. exact (@lem16933 (g = (@EMPTY (B -> Prop)))). Qed.
Lemma lem3529365 {_90724 B : Type'} (_37169 : type852 _90724 B) (u : B -> Prop) (f : B -> _90724) (t : B -> Prop) : (term4339 _90724 B _37169 u f t) = (term4340 _90724 B _37169 u f t).
Proof. exact (@lem17045 (@SUBSET B t u) (term2451 _90724 B _37169 u f t)). Qed.
Lemma lem3529367 {B : Type'} (t : B -> Prop) (g : type686 B) : (term4082 B t g) = (term4082 B t g).
Proof. exact (eq_refl (term4082 B t g)). Qed.
Lemma lem3529368 {_90724 B : Type'} (g : type686 B) (_37169 : type852 _90724 B) (u : B -> Prop) (f : B -> _90724) (t : B -> Prop) : (term4341 _90724 B g _37169 u f t) = (term4342 _90724 B g _37169 u f t).
Proof. exact (MK_COMB (@lem3529367 B t g) (@lem3529365 _90724 B _37169 u f t)). Qed.
Lemma lem3529369 {_90724 B : Type'} (g : type686 B) (_37169 : type852 _90724 B) (u : B -> Prop) (f : B -> _90724) (t : B -> Prop) : (term4343 _90724 B g _37169 u f t) = (term4341 _90724 B g _37169 u f t).
Proof. exact (@lem17362 (@IN (B -> Prop) t g) (term2452 _90724 B _37169 u f t)). Qed.
Lemma lem3529370 {_90724 B : Type'} (g : type686 B) (_37169 : type852 _90724 B) (u : B -> Prop) (f : B -> _90724) (t : B -> Prop) : (term4343 _90724 B g _37169 u f t) = (term4342 _90724 B g _37169 u f t).
Proof. exact (TRANS (@lem3529369 _90724 B g _37169 u f t) (@lem3529368 _90724 B g _37169 u f t)). Qed.
Lemma lem3529371 {B : Type'} (P : type686 B) : (term298 B P) = (term299 B P).
Proof. exact (@lem18392 (B -> Prop) P). Qed.
Lemma lem3529372 {_90724 B : Type'} (g : type686 B) (_37169 : type852 _90724 B) (u : B -> Prop) (f : B -> _90724) : (term4344 _90724 B g _37169 u f) = (term4345 _90724 B g _37169 u f).
Proof. exact (@lem3529371 B (term2454 _90724 B g _37169 u f)). Qed.
Lemma lem3529373 {_90724 B : Type'} (g : type686 B) (_37169 : type852 _90724 B) (u : B -> Prop) (f : B -> _90724) (t : B -> Prop) : (term4346 _90724 B g _37169 u f t) = (term2453 _90724 B g _37169 u f t).
Proof. exact (eq_refl (term4346 _90724 B g _37169 u f t)). Qed.
Lemma lem3529374 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem3529375 {_90724 B : Type'} (g : type686 B) (_37169 : type852 _90724 B) (u : B -> Prop) (f : B -> _90724) (t : B -> Prop) : (term4347 _90724 B g _37169 u f t) = (term4343 _90724 B g _37169 u f t).
Proof. exact (MK_COMB (@lem3529374) (@lem3529373 _90724 B g _37169 u f t)). Qed.
Lemma lem3529376 {_90724 B : Type'} (g : type686 B) (_37169 : type852 _90724 B) (u : B -> Prop) (f : B -> _90724) (t : B -> Prop) : (term4347 _90724 B g _37169 u f t) = (term4342 _90724 B g _37169 u f t).
Proof. exact (TRANS (@lem3529375 _90724 B g _37169 u f t) (@lem3529370 _90724 B g _37169 u f t)). Qed.
Lemma lem3529377 {_90724 B : Type'} (g : type686 B) (_37169 : type852 _90724 B) (u : B -> Prop) (f : B -> _90724) : (term4348 _90724 B g _37169 u f) = (term4349 _90724 B g _37169 u f).
Proof. exact (fun_ext (fun t : B -> Prop => @lem3529376 _90724 B g _37169 u f t)). Qed.
Lemma lem3529378 {B : Type'} : (@ex (B -> Prop)) = (@ex (B -> Prop)).
Proof. exact (eq_refl (@ex (B -> Prop))). Qed.
Lemma lem3529379 {_90724 B : Type'} (g : type686 B) (_37169 : type852 _90724 B) (u : B -> Prop) (f : B -> _90724) : (term4345 _90724 B g _37169 u f) = (term4350 _90724 B g _37169 u f).
Proof. exact (MK_COMB (@lem3529378 B) (@lem3529377 _90724 B g _37169 u f)). Qed.
Lemma lem3529380 {_90724 B : Type'} (g : type686 B) (_37169 : type852 _90724 B) (u : B -> Prop) (f : B -> _90724) : (term4344 _90724 B g _37169 u f) = (term4350 _90724 B g _37169 u f).
Proof. exact (TRANS (@lem3529372 _90724 B g _37169 u f) (@lem3529379 _90724 B g _37169 u f)). Qed.
Lemma lem3529381 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem3529382 {B : Type'} (g : type686 B) : (term4093 B g) = (term4094 B g).
Proof. exact (MK_COMB (@lem3529381) (@lem3529357 B g)). Qed.
Lemma lem3529383 {_90724 B : Type'} (g : type686 B) (_37169 : type852 _90724 B) (u : B -> Prop) (f : B -> _90724) : (term4351 _90724 B g _37169 u f) = (term4352 _90724 B g _37169 u f).
Proof. exact (MK_COMB (@lem3529382 B g) (@lem3529380 _90724 B g _37169 u f)). Qed.
Lemma lem3529384 {_90724 B : Type'} (g : type686 B) (_37169 : type852 _90724 B) (u : B -> Prop) (f : B -> _90724) : (term4353 _90724 B g _37169 u f) = (term4351 _90724 B g _37169 u f).
Proof. exact (@lem17045 (term40 B g) (term2455 _90724 B g _37169 u f)). Qed.
Lemma lem3529385 {_90724 B : Type'} (g : type686 B) (_37169 : type852 _90724 B) (u : B -> Prop) (f : B -> _90724) : (term4353 _90724 B g _37169 u f) = (term4352 _90724 B g _37169 u f).
Proof. exact (TRANS (@lem3529384 _90724 B g _37169 u f) (@lem3529383 _90724 B g _37169 u f)). Qed.
Lemma lem3529386 {_90724 B : Type'} (f : B -> _90724) (g : type686 B) : ((term2056 _90724 B f g) = (term2057 _90724 B f g)) = ((term2056 _90724 B f g) = (term2057 _90724 B f g)).
Proof. exact (eq_refl ((term2056 _90724 B f g) = (term2057 _90724 B f g))). Qed.
Lemma lem3529387 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem3529388 {_90724 B : Type'} (g : type686 B) (_37169 : type852 _90724 B) (u : B -> Prop) (f : B -> _90724) : (term4354 _90724 B g _37169 u f) = (term4355 _90724 B g _37169 u f).
Proof. exact (MK_COMB (@lem3529387) (@lem3529385 _90724 B g _37169 u f)). Qed.
Lemma lem3529389 {_90724 B : Type'} (_37169 : type852 _90724 B) (u : B -> Prop) (f : B -> _90724) (g : type686 B) : (term4356 _90724 B _37169 u f g) = (term4357 _90724 B _37169 u f g).
Proof. exact (MK_COMB (@lem3529388 _90724 B g _37169 u f) (@lem3529386 _90724 B f g)). Qed.
Lemma lem3529390 {_90724 B : Type'} (_37169 : type852 _90724 B) (u : B -> Prop) (f : B -> _90724) (g : type686 B) : (term2458 _90724 B _37169 u f g) = (term4356 _90724 B _37169 u f g).
Proof. exact (@lem17265 (term2456 _90724 B g _37169 u f) ((term2056 _90724 B f g) = (term2057 _90724 B f g))). Qed.
Lemma lem3529391 {_90724 B : Type'} (_37169 : type852 _90724 B) (u : B -> Prop) (f : B -> _90724) (g : type686 B) : (term2458 _90724 B _37169 u f g) = (term4357 _90724 B _37169 u f g).
Proof. exact (TRANS (@lem3529390 _90724 B _37169 u f g) (@lem3529389 _90724 B _37169 u f g)). Qed.
Lemma lem3529392 {_90724 B : Type'} (_37169 : type852 _90724 B) (u : B -> Prop) (f : B -> _90724) : (term2459 _90724 B _37169 u f) = (term4358 _90724 B _37169 u f).
Proof. exact (fun_ext (fun g : type686 B => @lem3529391 _90724 B _37169 u f g)). Qed.
Lemma lem3529393 {B : Type'} : (@all ((B -> Prop) -> Prop)) = (@all ((B -> Prop) -> Prop)).
Proof. exact (eq_refl (@all ((B -> Prop) -> Prop))). Qed.
Lemma lem3529394 {_90724 B : Type'} (_37169 : type852 _90724 B) (u : B -> Prop) (f : B -> _90724) : (term2460 _90724 B _37169 u f) = (term4359 _90724 B _37169 u f).
Proof. exact (MK_COMB (@lem3529393 B) (@lem3529392 _90724 B _37169 u f)). Qed.
Lemma lem3529395 {_90724 B : Type'} (_37169 : type852 _90724 B) (u : B -> Prop) : (term2461 _90724 B _37169 u) = (term4360 _90724 B _37169 u).
Proof. exact (fun_ext (fun f : B -> _90724 => @lem3529394 _90724 B _37169 u f)). Qed.
Lemma lem3529396 {_90724 B : Type'} : (@all (B -> _90724)) = (@all (B -> _90724)).
Proof. exact (eq_refl (@all (B -> _90724))). Qed.
Lemma lem3529397 {_90724 B : Type'} (_37169 : type852 _90724 B) (u : B -> Prop) : (term2462 _90724 B _37169 u) = (term4361 _90724 B _37169 u).
Proof. exact (MK_COMB (@lem3529396 _90724 B) (@lem3529395 _90724 B _37169 u)). Qed.
Lemma lem3529398 {_90724 B : Type'} (_37169 : type852 _90724 B) : (term2463 _90724 B _37169) = (term4362 _90724 B _37169).
Proof. exact (fun_ext (fun u : B -> Prop => @lem3529397 _90724 B _37169 u)). Qed.
Lemma lem3529399 {B : Type'} : (@all (B -> Prop)) = (@all (B -> Prop)).
Proof. exact (eq_refl (@all (B -> Prop))). Qed.
Lemma lem3529400 {_90724 B : Type'} (_37169 : type852 _90724 B) : (term2464 _90724 B _37169) = (term4363 _90724 B _37169).
Proof. exact (MK_COMB (@lem3529399 B) (@lem3529398 _90724 B _37169)). Qed.
Lemma lem3529507 {A : Type'} (P : Prop) (Q : A -> Prop) : (term434 A P Q) = (term435 A P Q).
Proof. exact (EQ_MP (@lem18911 A P Q) (@lem18910 A P Q)). Qed.
Lemma lem3529508 {B : Type'} (P : Prop) (Q : type686 B) : (term436 B P Q) = (term437 B P Q).
Proof. exact (@lem3529507 (B -> Prop) P Q). Qed.
Lemma lem3529509 {_90724 B : Type'} (g : type686 B) (_37169 : type852 _90724 B) (u : B -> Prop) (f : B -> _90724) : (term4364 _90724 B g _37169 u f) = (term4365 _90724 B g _37169 u f).
Proof. exact (@lem3529508 B (g = (@EMPTY (B -> Prop))) (term4349 _90724 B g _37169 u f)). Qed.
Lemma lem3529510 {_90724 B : Type'} (g : type686 B) (_37169 : type852 _90724 B) (u : B -> Prop) (f : B -> _90724) (t : B -> Prop) : (term4366 _90724 B g _37169 u f t) = (term4342 _90724 B g _37169 u f t).
Proof. exact (eq_refl (term4366 _90724 B g _37169 u f t)). Qed.
Lemma lem3529511 {_90724 B : Type'} (g : type686 B) (_37169 : type852 _90724 B) (u : B -> Prop) (f : B -> _90724) : (term4367 _90724 B g _37169 u f) = (term4349 _90724 B g _37169 u f).
Proof. exact (fun_ext (fun t : B -> Prop => @lem3529510 _90724 B g _37169 u f t)). Qed.
Lemma lem3529512 {B : Type'} : (@ex (B -> Prop)) = (@ex (B -> Prop)).
Proof. exact (eq_refl (@ex (B -> Prop))). Qed.
Lemma lem3529513 {_90724 B : Type'} (g : type686 B) (_37169 : type852 _90724 B) (u : B -> Prop) (f : B -> _90724) : (term4368 _90724 B g _37169 u f) = (term4350 _90724 B g _37169 u f).
Proof. exact (MK_COMB (@lem3529512 B) (@lem3529511 _90724 B g _37169 u f)). Qed.
Lemma lem3529514 {B : Type'} (g : type686 B) : (term4094 B g) = (term4094 B g).
Proof. exact (eq_refl (term4094 B g)). Qed.
Lemma lem3529515 {_90724 B : Type'} (g : type686 B) (_37169 : type852 _90724 B) (u : B -> Prop) (f : B -> _90724) : (term4364 _90724 B g _37169 u f) = (term4352 _90724 B g _37169 u f).
Proof. exact (MK_COMB (@lem3529514 B g) (@lem3529513 _90724 B g _37169 u f)). Qed.
Lemma lem3529516 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem3529517 {_90724 B : Type'} (g : type686 B) (_37169 : type852 _90724 B) (u : B -> Prop) (f : B -> _90724) : (term4369 _90724 B g _37169 u f) = (term4370 _90724 B g _37169 u f).
Proof. exact (MK_COMB (@lem3529516) (@lem3529515 _90724 B g _37169 u f)). Qed.
Lemma lem3529518 {_90724 B : Type'} (g : type686 B) (_37169 : type852 _90724 B) (u : B -> Prop) (f : B -> _90724) (t : B -> Prop) : (term4366 _90724 B g _37169 u f t) = (term4342 _90724 B g _37169 u f t).
Proof. exact (eq_refl (term4366 _90724 B g _37169 u f t)). Qed.
Lemma lem3529519 {B : Type'} (g : type686 B) : (term4094 B g) = (term4094 B g).
Proof. exact (eq_refl (term4094 B g)). Qed.
Lemma lem3529520 {_90724 B : Type'} (g : type686 B) (_37169 : type852 _90724 B) (u : B -> Prop) (f : B -> _90724) (t : B -> Prop) : (term4371 _90724 B g _37169 u f t) = (term4372 _90724 B g _37169 u f t).
Proof. exact (MK_COMB (@lem3529519 B g) (@lem3529518 _90724 B g _37169 u f t)). Qed.
Lemma lem3529521 {_90724 B : Type'} (g : type686 B) (_37169 : type852 _90724 B) (u : B -> Prop) (f : B -> _90724) : (term4373 _90724 B g _37169 u f) = (term4374 _90724 B g _37169 u f).
Proof. exact (fun_ext (fun t : B -> Prop => @lem3529520 _90724 B g _37169 u f t)). Qed.
Lemma lem3529522 {B : Type'} : (@ex (B -> Prop)) = (@ex (B -> Prop)).
Proof. exact (eq_refl (@ex (B -> Prop))). Qed.
Lemma lem3529523 {_90724 B : Type'} (g : type686 B) (_37169 : type852 _90724 B) (u : B -> Prop) (f : B -> _90724) : (term4365 _90724 B g _37169 u f) = (term4375 _90724 B g _37169 u f).
Proof. exact (MK_COMB (@lem3529522 B) (@lem3529521 _90724 B g _37169 u f)). Qed.
Lemma lem3529524 {_90724 B : Type'} (g : type686 B) (_37169 : type852 _90724 B) (u : B -> Prop) (f : B -> _90724) : ((term4364 _90724 B g _37169 u f) = (term4365 _90724 B g _37169 u f)) = ((term4352 _90724 B g _37169 u f) = (term4375 _90724 B g _37169 u f)).
Proof. exact (MK_COMB (@lem3529517 _90724 B g _37169 u f) (@lem3529523 _90724 B g _37169 u f)). Qed.
Lemma lem3529525 {_90724 B : Type'} (g : type686 B) (_37169 : type852 _90724 B) (u : B -> Prop) (f : B -> _90724) : (term4352 _90724 B g _37169 u f) = (term4375 _90724 B g _37169 u f).
Proof. exact (EQ_MP (@lem3529524 _90724 B g _37169 u f) (@lem3529509 _90724 B g _37169 u f)). Qed.
Lemma lem3529526 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem3529527 {_90724 B : Type'} (g : type686 B) (_37169 : type852 _90724 B) (u : B -> Prop) (f : B -> _90724) : (term4355 _90724 B g _37169 u f) = (term4376 _90724 B g _37169 u f).
Proof. exact (MK_COMB (@lem3529526) (@lem3529525 _90724 B g _37169 u f)). Qed.
Lemma lem3529528 {_90724 B : Type'} (f : B -> _90724) (g : type686 B) : ((term2056 _90724 B f g) = (term2057 _90724 B f g)) = ((term2056 _90724 B f g) = (term2057 _90724 B f g)).
Proof. exact (eq_refl ((term2056 _90724 B f g) = (term2057 _90724 B f g))). Qed.
Lemma lem3529529 {_90724 B : Type'} (_37169 : type852 _90724 B) (u : B -> Prop) (f : B -> _90724) (g : type686 B) : (term4357 _90724 B _37169 u f g) = (term4377 _90724 B _37169 u f g).
Proof. exact (MK_COMB (@lem3529527 _90724 B g _37169 u f) (@lem3529528 _90724 B f g)). Qed.
Lemma lem3529531 {A : Type'} (P : A -> Prop) (Q : Prop) : (term550 A P Q) = (term551 A P Q).
Proof. exact (EQ_MP (@lem18905 A P Q) (@lem18904 A P Q)). Qed.
Lemma lem3529532 {B : Type'} (P : type686 B) (Q : Prop) : (term567 B P Q) = (term568 B P Q).
Proof. exact (@lem3529531 (B -> Prop) P Q). Qed.
Lemma lem3529533 {_90724 B : Type'} (_37169 : type852 _90724 B) (u : B -> Prop) (f : B -> _90724) (g : type686 B) : (term4378 _90724 B _37169 u f g) = (term4379 _90724 B _37169 u f g).
Proof. exact (@lem3529532 B (term4374 _90724 B g _37169 u f) ((term2056 _90724 B f g) = (term2057 _90724 B f g))). Qed.
Lemma lem3529534 {_90724 B : Type'} (g : type686 B) (_37169 : type852 _90724 B) (u : B -> Prop) (f : B -> _90724) (t : B -> Prop) : (term4380 _90724 B g _37169 u f t) = (term4372 _90724 B g _37169 u f t).
Proof. exact (eq_refl (term4380 _90724 B g _37169 u f t)). Qed.
Lemma lem3529535 {_90724 B : Type'} (g : type686 B) (_37169 : type852 _90724 B) (u : B -> Prop) (f : B -> _90724) : (term4381 _90724 B g _37169 u f) = (term4374 _90724 B g _37169 u f).
Proof. exact (fun_ext (fun t : B -> Prop => @lem3529534 _90724 B g _37169 u f t)). Qed.
Lemma lem3529536 {B : Type'} : (@ex (B -> Prop)) = (@ex (B -> Prop)).
Proof. exact (eq_refl (@ex (B -> Prop))). Qed.
Lemma lem3529537 {_90724 B : Type'} (g : type686 B) (_37169 : type852 _90724 B) (u : B -> Prop) (f : B -> _90724) : (term4382 _90724 B g _37169 u f) = (term4375 _90724 B g _37169 u f).
Proof. exact (MK_COMB (@lem3529536 B) (@lem3529535 _90724 B g _37169 u f)). Qed.
Lemma lem3529538 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem3529539 {_90724 B : Type'} (g : type686 B) (_37169 : type852 _90724 B) (u : B -> Prop) (f : B -> _90724) : (term4383 _90724 B g _37169 u f) = (term4376 _90724 B g _37169 u f).
Proof. exact (MK_COMB (@lem3529538) (@lem3529537 _90724 B g _37169 u f)). Qed.
Lemma lem3529540 {_90724 B : Type'} (f : B -> _90724) (g : type686 B) : ((term2056 _90724 B f g) = (term2057 _90724 B f g)) = ((term2056 _90724 B f g) = (term2057 _90724 B f g)).
Proof. exact (eq_refl ((term2056 _90724 B f g) = (term2057 _90724 B f g))). Qed.
Lemma lem3529541 {_90724 B : Type'} (_37169 : type852 _90724 B) (u : B -> Prop) (f : B -> _90724) (g : type686 B) : (term4378 _90724 B _37169 u f g) = (term4377 _90724 B _37169 u f g).
Proof. exact (MK_COMB (@lem3529539 _90724 B g _37169 u f) (@lem3529540 _90724 B f g)). Qed.
Lemma lem3529542 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem3529543 {_90724 B : Type'} (_37169 : type852 _90724 B) (u : B -> Prop) (f : B -> _90724) (g : type686 B) : (term4384 _90724 B _37169 u f g) = (term4385 _90724 B _37169 u f g).
Proof. exact (MK_COMB (@lem3529542) (@lem3529541 _90724 B _37169 u f g)). Qed.
Lemma lem3529544 {_90724 B : Type'} (g : type686 B) (_37169 : type852 _90724 B) (u : B -> Prop) (f : B -> _90724) (t : B -> Prop) : (term4380 _90724 B g _37169 u f t) = (term4372 _90724 B g _37169 u f t).
Proof. exact (eq_refl (term4380 _90724 B g _37169 u f t)). Qed.
Lemma lem3529545 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem3529546 {_90724 B : Type'} (g : type686 B) (_37169 : type852 _90724 B) (u : B -> Prop) (f : B -> _90724) (t : B -> Prop) : (term4386 _90724 B g _37169 u f t) = (term4387 _90724 B g _37169 u f t).
Proof. exact (MK_COMB (@lem3529545) (@lem3529544 _90724 B g _37169 u f t)). Qed.
Lemma lem3529547 {_90724 B : Type'} (f : B -> _90724) (g : type686 B) : ((term2056 _90724 B f g) = (term2057 _90724 B f g)) = ((term2056 _90724 B f g) = (term2057 _90724 B f g)).
Proof. exact (eq_refl ((term2056 _90724 B f g) = (term2057 _90724 B f g))). Qed.
Lemma lem3529548 {_90724 B : Type'} (_37169 : type852 _90724 B) (u : B -> Prop) (t : B -> Prop) (f : B -> _90724) (g : type686 B) : (term4388 _90724 B _37169 u t f g) = (term4389 _90724 B _37169 u t f g).
Proof. exact (MK_COMB (@lem3529546 _90724 B g _37169 u f t) (@lem3529547 _90724 B f g)). Qed.
Lemma lem3529549 {_90724 B : Type'} (_37169 : type852 _90724 B) (u : B -> Prop) (f : B -> _90724) (g : type686 B) : (term4390 _90724 B _37169 u f g) = (term4391 _90724 B _37169 u f g).
Proof. exact (fun_ext (fun t : B -> Prop => @lem3529548 _90724 B _37169 u t f g)). Qed.
Lemma lem3529550 {B : Type'} : (@ex (B -> Prop)) = (@ex (B -> Prop)).
Proof. exact (eq_refl (@ex (B -> Prop))). Qed.
Lemma lem3529551 {_90724 B : Type'} (_37169 : type852 _90724 B) (u : B -> Prop) (f : B -> _90724) (g : type686 B) : (term4379 _90724 B _37169 u f g) = (term4392 _90724 B _37169 u f g).
Proof. exact (MK_COMB (@lem3529550 B) (@lem3529549 _90724 B _37169 u f g)). Qed.
Lemma lem3529552 {_90724 B : Type'} (_37169 : type852 _90724 B) (u : B -> Prop) (f : B -> _90724) (g : type686 B) : ((term4378 _90724 B _37169 u f g) = (term4379 _90724 B _37169 u f g)) = ((term4377 _90724 B _37169 u f g) = (term4392 _90724 B _37169 u f g)).
Proof. exact (MK_COMB (@lem3529543 _90724 B _37169 u f g) (@lem3529551 _90724 B _37169 u f g)). Qed.
Lemma lem3529553 {_90724 B : Type'} (_37169 : type852 _90724 B) (u : B -> Prop) (f : B -> _90724) (g : type686 B) : (term4377 _90724 B _37169 u f g) = (term4392 _90724 B _37169 u f g).
Proof. exact (EQ_MP (@lem3529552 _90724 B _37169 u f g) (@lem3529533 _90724 B _37169 u f g)). Qed.
Lemma lem3529554 {_90724 B : Type'} (_37169 : type852 _90724 B) (u : B -> Prop) (f : B -> _90724) (g : type686 B) : (term4357 _90724 B _37169 u f g) = (term4392 _90724 B _37169 u f g).
Proof. exact (TRANS (@lem3529529 _90724 B _37169 u f g) (@lem3529553 _90724 B _37169 u f g)). Qed.
Lemma lem3529555 {_90724 B : Type'} (_37169 : type852 _90724 B) (u : B -> Prop) (f : B -> _90724) : (term4358 _90724 B _37169 u f) = (term4393 _90724 B _37169 u f).
Proof. exact (fun_ext (fun g : type686 B => @lem3529554 _90724 B _37169 u f g)). Qed.
Lemma lem3529556 {B : Type'} : (@all ((B -> Prop) -> Prop)) = (@all ((B -> Prop) -> Prop)).
Proof. exact (eq_refl (@all ((B -> Prop) -> Prop))). Qed.
Lemma lem3529557 {_90724 B : Type'} (_37169 : type852 _90724 B) (u : B -> Prop) (f : B -> _90724) : (term4359 _90724 B _37169 u f) = (term4394 _90724 B _37169 u f).
Proof. exact (MK_COMB (@lem3529556 B) (@lem3529555 _90724 B _37169 u f)). Qed.
Lemma lem3529559 {A B : Type'} (P : type1413 A B) : (term453 A B P) = (term454 A B P).
Proof. exact (EQ_MP (@lem18899 A B P) (@lem18898 A B P)). Qed.
Lemma lem3529560 {B : Type'} (P : type174 B) : (term4139 B P) = (term4140 B P).
Proof. exact (@lem3529559 (type686 B) (B -> Prop) P). Qed.
Lemma lem3529561 {_90724 B : Type'} (_37169 : type852 _90724 B) (u : B -> Prop) (f : B -> _90724) : (term4395 _90724 B _37169 u f) = (term4396 _90724 B _37169 u f).
Proof. exact (@lem3529560 B (term4397 _90724 B _37169 u f)). Qed.
Lemma lem3529562 {_90724 B : Type'} (_37169 : type852 _90724 B) (u : B -> Prop) (f : B -> _90724) (g : type686 B) : (term4398 _90724 B _37169 u f g) = (term4391 _90724 B _37169 u f g).
Proof. exact (eq_refl (term4398 _90724 B _37169 u f g)). Qed.
Lemma lem3529563 {B : Type'} (t : B -> Prop) : t = t.
Proof. exact (eq_refl t). Qed.
Lemma lem3529564 {_90724 B : Type'} (_37169 : type852 _90724 B) (u : B -> Prop) (f : B -> _90724) (g : type686 B) (t : B -> Prop) : (term4399 _90724 B _37169 u f g t) = (term4400 _90724 B _37169 u f g t).
Proof. exact (MK_COMB (@lem3529562 _90724 B _37169 u f g) (@lem3529563 B t)). Qed.
Lemma lem3529565 {_90724 B : Type'} (_37169 : type852 _90724 B) (u : B -> Prop) (t : B -> Prop) (f : B -> _90724) (g : type686 B) : (term4400 _90724 B _37169 u f g t) = (term4389 _90724 B _37169 u t f g).
Proof. exact (eq_refl (term4400 _90724 B _37169 u f g t)). Qed.
Lemma lem3529566 {_90724 B : Type'} (_37169 : type852 _90724 B) (u : B -> Prop) (t : B -> Prop) (f : B -> _90724) (g : type686 B) : (term4399 _90724 B _37169 u f g t) = (term4389 _90724 B _37169 u t f g).
Proof. exact (TRANS (@lem3529564 _90724 B _37169 u f g t) (@lem3529565 _90724 B _37169 u t f g)). Qed.
Lemma lem3529567 {_90724 B : Type'} (_37169 : type852 _90724 B) (u : B -> Prop) (f : B -> _90724) (g : type686 B) : (term4401 _90724 B _37169 u f g) = (term4391 _90724 B _37169 u f g).
Proof. exact (fun_ext (fun t : B -> Prop => @lem3529566 _90724 B _37169 u t f g)). Qed.
Lemma lem3529568 {B : Type'} : (@ex (B -> Prop)) = (@ex (B -> Prop)).
Proof. exact (eq_refl (@ex (B -> Prop))). Qed.
Lemma lem3529569 {_90724 B : Type'} (_37169 : type852 _90724 B) (u : B -> Prop) (f : B -> _90724) (g : type686 B) : (term4402 _90724 B _37169 u f g) = (term4392 _90724 B _37169 u f g).
Proof. exact (MK_COMB (@lem3529568 B) (@lem3529567 _90724 B _37169 u f g)). Qed.
Lemma lem3529570 {_90724 B : Type'} (_37169 : type852 _90724 B) (u : B -> Prop) (f : B -> _90724) : (term4403 _90724 B _37169 u f) = (term4393 _90724 B _37169 u f).
Proof. exact (fun_ext (fun g : type686 B => @lem3529569 _90724 B _37169 u f g)). Qed.
Lemma lem3529571 {B : Type'} : (@all ((B -> Prop) -> Prop)) = (@all ((B -> Prop) -> Prop)).
Proof. exact (eq_refl (@all ((B -> Prop) -> Prop))). Qed.
Lemma lem3529572 {_90724 B : Type'} (_37169 : type852 _90724 B) (u : B -> Prop) (f : B -> _90724) : (term4395 _90724 B _37169 u f) = (term4394 _90724 B _37169 u f).
Proof. exact (MK_COMB (@lem3529571 B) (@lem3529570 _90724 B _37169 u f)). Qed.
Lemma lem3529573 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem3529574 {_90724 B : Type'} (_37169 : type852 _90724 B) (u : B -> Prop) (f : B -> _90724) : (term4404 _90724 B _37169 u f) = (term4405 _90724 B _37169 u f).
Proof. exact (MK_COMB (@lem3529573) (@lem3529572 _90724 B _37169 u f)). Qed.
Lemma lem3529575 {_90724 B : Type'} (_37169 : type852 _90724 B) (u : B -> Prop) (f : B -> _90724) (g : type686 B) : (term4398 _90724 B _37169 u f g) = (term4391 _90724 B _37169 u f g).
Proof. exact (eq_refl (term4398 _90724 B _37169 u f g)). Qed.
Lemma lem3529576 {B : Type'} (t : type178 B) (g : type686 B) : (t g) = (t g).
Proof. exact (eq_refl (t g)). Qed.
Lemma lem3529577 {_90724 B : Type'} (_37169 : type852 _90724 B) (u : B -> Prop) (f : B -> _90724) (t : type178 B) (g : type686 B) : (term4406 _90724 B _37169 u f t g) = (term4407 _90724 B _37169 u f t g).
Proof. exact (MK_COMB (@lem3529575 _90724 B _37169 u f g) (@lem3529576 B t g)). Qed.
Lemma lem3529578 {_90724 B : Type'} (_37169 : type852 _90724 B) (u : B -> Prop) (t : type178 B) (f : B -> _90724) (g : type686 B) : (term4407 _90724 B _37169 u f t g) = (term4408 _90724 B _37169 u t f g).
Proof. exact (eq_refl (term4407 _90724 B _37169 u f t g)). Qed.
Lemma lem3529579 {_90724 B : Type'} (_37169 : type852 _90724 B) (u : B -> Prop) (t : type178 B) (f : B -> _90724) (g : type686 B) : (term4406 _90724 B _37169 u f t g) = (term4408 _90724 B _37169 u t f g).
Proof. exact (TRANS (@lem3529577 _90724 B _37169 u f t g) (@lem3529578 _90724 B _37169 u t f g)). Qed.
Lemma lem3529580 {_90724 B : Type'} (_37169 : type852 _90724 B) (u : B -> Prop) (t : type178 B) (f : B -> _90724) : (term4409 _90724 B _37169 u f t) = (term4410 _90724 B _37169 u t f).
Proof. exact (fun_ext (fun g : type686 B => @lem3529579 _90724 B _37169 u t f g)). Qed.
Lemma lem3529581 {B : Type'} : (@all ((B -> Prop) -> Prop)) = (@all ((B -> Prop) -> Prop)).
Proof. exact (eq_refl (@all ((B -> Prop) -> Prop))). Qed.
Lemma lem3529582 {_90724 B : Type'} (_37169 : type852 _90724 B) (u : B -> Prop) (t : type178 B) (f : B -> _90724) : (term4411 _90724 B _37169 u f t) = (term4412 _90724 B _37169 u t f).
Proof. exact (MK_COMB (@lem3529581 B) (@lem3529580 _90724 B _37169 u t f)). Qed.
Lemma lem3529583 {_90724 B : Type'} (_37169 : type852 _90724 B) (u : B -> Prop) (f : B -> _90724) : (term4413 _90724 B _37169 u f) = (term4414 _90724 B _37169 u f).
Proof. exact (fun_ext (fun t : type178 B => @lem3529582 _90724 B _37169 u t f)). Qed.
Lemma lem3529584 {B : Type'} : (@ex (((B -> Prop) -> Prop) -> B -> Prop)) = (@ex (((B -> Prop) -> Prop) -> B -> Prop)).
Proof. exact (eq_refl (@ex (((B -> Prop) -> Prop) -> B -> Prop))). Qed.
Lemma lem3529585 {_90724 B : Type'} (_37169 : type852 _90724 B) (u : B -> Prop) (f : B -> _90724) : (term4396 _90724 B _37169 u f) = (term4415 _90724 B _37169 u f).
Proof. exact (MK_COMB (@lem3529584 B) (@lem3529583 _90724 B _37169 u f)). Qed.
Lemma lem3529586 {_90724 B : Type'} (_37169 : type852 _90724 B) (u : B -> Prop) (f : B -> _90724) : ((term4395 _90724 B _37169 u f) = (term4396 _90724 B _37169 u f)) = ((term4394 _90724 B _37169 u f) = (term4415 _90724 B _37169 u f)).
Proof. exact (MK_COMB (@lem3529574 _90724 B _37169 u f) (@lem3529585 _90724 B _37169 u f)). Qed.
Lemma lem3529587 {_90724 B : Type'} (_37169 : type852 _90724 B) (u : B -> Prop) (f : B -> _90724) : (term4394 _90724 B _37169 u f) = (term4415 _90724 B _37169 u f).
Proof. exact (EQ_MP (@lem3529586 _90724 B _37169 u f) (@lem3529561 _90724 B _37169 u f)). Qed.
Lemma lem3529588 {_90724 B : Type'} (_37169 : type852 _90724 B) (u : B -> Prop) (f : B -> _90724) : (term4359 _90724 B _37169 u f) = (term4415 _90724 B _37169 u f).
Proof. exact (TRANS (@lem3529557 _90724 B _37169 u f) (@lem3529587 _90724 B _37169 u f)). Qed.
Lemma lem3529589 {_90724 B : Type'} (_37169 : type852 _90724 B) (u : B -> Prop) : (term4360 _90724 B _37169 u) = (term4416 _90724 B _37169 u).
Proof. exact (fun_ext (fun f : B -> _90724 => @lem3529588 _90724 B _37169 u f)). Qed.
Lemma lem3529590 {_90724 B : Type'} : (@all (B -> _90724)) = (@all (B -> _90724)).
Proof. exact (eq_refl (@all (B -> _90724))). Qed.
Lemma lem3529591 {_90724 B : Type'} (_37169 : type852 _90724 B) (u : B -> Prop) : (term4361 _90724 B _37169 u) = (term4417 _90724 B _37169 u).
Proof. exact (MK_COMB (@lem3529590 _90724 B) (@lem3529589 _90724 B _37169 u)). Qed.
Lemma lem3529593 {A B : Type'} (P : type1413 A B) : (term453 A B P) = (term454 A B P).
Proof. exact (EQ_MP (@lem18899 A B P) (@lem18898 A B P)). Qed.
Lemma lem3529594 {_90724 B : Type'} (P : type768 _90724 B) : (term4418 _90724 B P) = (term4419 _90724 B P).
Proof. exact (@lem3529593 (B -> _90724) (type178 B) P). Qed.
Lemma lem3529595 {_90724 B : Type'} (_37169 : type852 _90724 B) (u : B -> Prop) : (term4420 _90724 B _37169 u) = (term4421 _90724 B _37169 u).
Proof. exact (@lem3529594 _90724 B (term4422 _90724 B _37169 u)). Qed.
Lemma lem3529596 {_90724 B : Type'} (_37169 : type852 _90724 B) (u : B -> Prop) (f : B -> _90724) : (term4423 _90724 B _37169 u f) = (term4414 _90724 B _37169 u f).
Proof. exact (eq_refl (term4423 _90724 B _37169 u f)). Qed.
Lemma lem3529597 {B : Type'} (t : type178 B) : t = t.
Proof. exact (eq_refl t). Qed.
Lemma lem3529598 {_90724 B : Type'} (_37169 : type852 _90724 B) (u : B -> Prop) (f : B -> _90724) (t : type178 B) : (term4424 _90724 B _37169 u f t) = (term4425 _90724 B _37169 u f t).
Proof. exact (MK_COMB (@lem3529596 _90724 B _37169 u f) (@lem3529597 B t)). Qed.
Lemma lem3529599 {_90724 B : Type'} (_37169 : type852 _90724 B) (u : B -> Prop) (t : type178 B) (f : B -> _90724) : (term4425 _90724 B _37169 u f t) = (term4412 _90724 B _37169 u t f).
Proof. exact (eq_refl (term4425 _90724 B _37169 u f t)). Qed.
Lemma lem3529600 {_90724 B : Type'} (_37169 : type852 _90724 B) (u : B -> Prop) (t : type178 B) (f : B -> _90724) : (term4424 _90724 B _37169 u f t) = (term4412 _90724 B _37169 u t f).
Proof. exact (TRANS (@lem3529598 _90724 B _37169 u f t) (@lem3529599 _90724 B _37169 u t f)). Qed.
Lemma lem3529601 {_90724 B : Type'} (_37169 : type852 _90724 B) (u : B -> Prop) (f : B -> _90724) : (term4426 _90724 B _37169 u f) = (term4414 _90724 B _37169 u f).
Proof. exact (fun_ext (fun t : type178 B => @lem3529600 _90724 B _37169 u t f)). Qed.
Lemma lem3529602 {B : Type'} : (@ex (((B -> Prop) -> Prop) -> B -> Prop)) = (@ex (((B -> Prop) -> Prop) -> B -> Prop)).
Proof. exact (eq_refl (@ex (((B -> Prop) -> Prop) -> B -> Prop))). Qed.
Lemma lem3529603 {_90724 B : Type'} (_37169 : type852 _90724 B) (u : B -> Prop) (f : B -> _90724) : (term4427 _90724 B _37169 u f) = (term4415 _90724 B _37169 u f).
Proof. exact (MK_COMB (@lem3529602 B) (@lem3529601 _90724 B _37169 u f)). Qed.
Lemma lem3529604 {_90724 B : Type'} (_37169 : type852 _90724 B) (u : B -> Prop) : (term4428 _90724 B _37169 u) = (term4416 _90724 B _37169 u).
Proof. exact (fun_ext (fun f : B -> _90724 => @lem3529603 _90724 B _37169 u f)). Qed.
Lemma lem3529605 {_90724 B : Type'} : (@all (B -> _90724)) = (@all (B -> _90724)).
Proof. exact (eq_refl (@all (B -> _90724))). Qed.
Lemma lem3529606 {_90724 B : Type'} (_37169 : type852 _90724 B) (u : B -> Prop) : (term4420 _90724 B _37169 u) = (term4417 _90724 B _37169 u).
Proof. exact (MK_COMB (@lem3529605 _90724 B) (@lem3529604 _90724 B _37169 u)). Qed.
Lemma lem3529607 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem3529608 {_90724 B : Type'} (_37169 : type852 _90724 B) (u : B -> Prop) : (term4429 _90724 B _37169 u) = (term4430 _90724 B _37169 u).
Proof. exact (MK_COMB (@lem3529607) (@lem3529606 _90724 B _37169 u)). Qed.
Lemma lem3529609 {_90724 B : Type'} (_37169 : type852 _90724 B) (u : B -> Prop) (f : B -> _90724) : (term4423 _90724 B _37169 u f) = (term4414 _90724 B _37169 u f).
Proof. exact (eq_refl (term4423 _90724 B _37169 u f)). Qed.
Lemma lem3529610 {_90724 B : Type'} (t : type777 _90724 B) (f : B -> _90724) : (t f) = (t f).
Proof. exact (eq_refl (t f)). Qed.
Lemma lem3529611 {_90724 B : Type'} (_37169 : type852 _90724 B) (u : B -> Prop) (t : type777 _90724 B) (f : B -> _90724) : (term4431 _90724 B _37169 u t f) = (term4432 _90724 B _37169 u t f).
Proof. exact (MK_COMB (@lem3529609 _90724 B _37169 u f) (@lem3529610 _90724 B t f)). Qed.
Lemma lem3529612 {_90724 B : Type'} (_37169 : type852 _90724 B) (u : B -> Prop) (t : type777 _90724 B) (f : B -> _90724) : (term4432 _90724 B _37169 u t f) = (term4433 _90724 B _37169 u t f).
Proof. exact (eq_refl (term4432 _90724 B _37169 u t f)). Qed.
Lemma lem3529613 {_90724 B : Type'} (_37169 : type852 _90724 B) (u : B -> Prop) (t : type777 _90724 B) (f : B -> _90724) : (term4431 _90724 B _37169 u t f) = (term4433 _90724 B _37169 u t f).
Proof. exact (TRANS (@lem3529611 _90724 B _37169 u t f) (@lem3529612 _90724 B _37169 u t f)). Qed.
Lemma lem3529614 {_90724 B : Type'} (_37169 : type852 _90724 B) (u : B -> Prop) (t : type777 _90724 B) : (term4434 _90724 B _37169 u t) = (term4435 _90724 B _37169 u t).
Proof. exact (fun_ext (fun f : B -> _90724 => @lem3529613 _90724 B _37169 u t f)). Qed.
Lemma lem3529615 {_90724 B : Type'} : (@all (B -> _90724)) = (@all (B -> _90724)).
Proof. exact (eq_refl (@all (B -> _90724))). Qed.
Lemma lem3529616 {_90724 B : Type'} (_37169 : type852 _90724 B) (u : B -> Prop) (t : type777 _90724 B) : (term4436 _90724 B _37169 u t) = (term4437 _90724 B _37169 u t).
Proof. exact (MK_COMB (@lem3529615 _90724 B) (@lem3529614 _90724 B _37169 u t)). Qed.
Lemma lem3529617 {_90724 B : Type'} (_37169 : type852 _90724 B) (u : B -> Prop) : (term4438 _90724 B _37169 u) = (term4439 _90724 B _37169 u).
Proof. exact (fun_ext (fun t : type777 _90724 B => @lem3529616 _90724 B _37169 u t)). Qed.
Lemma lem3529618 {_90724 B : Type'} : (@ex ((B -> _90724) -> ((B -> Prop) -> Prop) -> B -> Prop)) = (@ex ((B -> _90724) -> ((B -> Prop) -> Prop) -> B -> Prop)).
Proof. exact (eq_refl (@ex ((B -> _90724) -> ((B -> Prop) -> Prop) -> B -> Prop))). Qed.
Lemma lem3529619 {_90724 B : Type'} (_37169 : type852 _90724 B) (u : B -> Prop) : (term4421 _90724 B _37169 u) = (term4440 _90724 B _37169 u).
Proof. exact (MK_COMB (@lem3529618 _90724 B) (@lem3529617 _90724 B _37169 u)). Qed.
Lemma lem3529620 {_90724 B : Type'} (_37169 : type852 _90724 B) (u : B -> Prop) : ((term4420 _90724 B _37169 u) = (term4421 _90724 B _37169 u)) = ((term4417 _90724 B _37169 u) = (term4440 _90724 B _37169 u)).
Proof. exact (MK_COMB (@lem3529608 _90724 B _37169 u) (@lem3529619 _90724 B _37169 u)). Qed.
Lemma lem3529621 {_90724 B : Type'} (_37169 : type852 _90724 B) (u : B -> Prop) : (term4417 _90724 B _37169 u) = (term4440 _90724 B _37169 u).
Proof. exact (EQ_MP (@lem3529620 _90724 B _37169 u) (@lem3529595 _90724 B _37169 u)). Qed.
Lemma lem3529622 {_90724 B : Type'} (_37169 : type852 _90724 B) (u : B -> Prop) : (term4361 _90724 B _37169 u) = (term4440 _90724 B _37169 u).
Proof. exact (TRANS (@lem3529591 _90724 B _37169 u) (@lem3529621 _90724 B _37169 u)). Qed.
Lemma lem3529623 {_90724 B : Type'} (_37169 : type852 _90724 B) : (term4362 _90724 B _37169) = (term4441 _90724 B _37169).
Proof. exact (fun_ext (fun u : B -> Prop => @lem3529622 _90724 B _37169 u)). Qed.
Lemma lem3529624 {B : Type'} : (@all (B -> Prop)) = (@all (B -> Prop)).
Proof. exact (eq_refl (@all (B -> Prop))). Qed.
Lemma lem3529625 {_90724 B : Type'} (_37169 : type852 _90724 B) : (term4363 _90724 B _37169) = (term4442 _90724 B _37169).
Proof. exact (MK_COMB (@lem3529624 B) (@lem3529623 _90724 B _37169)). Qed.
Lemma lem3529627 {A B : Type'} (P : type1413 A B) : (term453 A B P) = (term454 A B P).
Proof. exact (EQ_MP (@lem18899 A B P) (@lem18898 A B P)). Qed.
Lemma lem3529628 {_90724 B : Type'} (P : type825 _90724 B) : (term4443 _90724 B P) = (term4444 _90724 B P).
Proof. exact (@lem3529627 (B -> Prop) (type777 _90724 B) P). Qed.
Lemma lem3529629 {_90724 B : Type'} (_37169 : type852 _90724 B) : (term4445 _90724 B _37169) = (term4446 _90724 B _37169).
Proof. exact (@lem3529628 _90724 B (term4447 _90724 B _37169)). Qed.
Lemma lem3529630 {_90724 B : Type'} (_37169 : type852 _90724 B) (u : B -> Prop) : (term4448 _90724 B _37169 u) = (term4439 _90724 B _37169 u).
Proof. exact (eq_refl (term4448 _90724 B _37169 u)). Qed.
Lemma lem3529631 {_90724 B : Type'} (t : type777 _90724 B) : t = t.
Proof. exact (eq_refl t). Qed.
Lemma lem3529632 {_90724 B : Type'} (_37169 : type852 _90724 B) (u : B -> Prop) (t : type777 _90724 B) : (term4449 _90724 B _37169 u t) = (term4450 _90724 B _37169 u t).
Proof. exact (MK_COMB (@lem3529630 _90724 B _37169 u) (@lem3529631 _90724 B t)). Qed.
Lemma lem3529633 {_90724 B : Type'} (_37169 : type852 _90724 B) (u : B -> Prop) (t : type777 _90724 B) : (term4450 _90724 B _37169 u t) = (term4437 _90724 B _37169 u t).
Proof. exact (eq_refl (term4450 _90724 B _37169 u t)). Qed.
Lemma lem3529634 {_90724 B : Type'} (_37169 : type852 _90724 B) (u : B -> Prop) (t : type777 _90724 B) : (term4449 _90724 B _37169 u t) = (term4437 _90724 B _37169 u t).
Proof. exact (TRANS (@lem3529632 _90724 B _37169 u t) (@lem3529633 _90724 B _37169 u t)). Qed.
Lemma lem3529635 {_90724 B : Type'} (_37169 : type852 _90724 B) (u : B -> Prop) : (term4451 _90724 B _37169 u) = (term4439 _90724 B _37169 u).
Proof. exact (fun_ext (fun t : type777 _90724 B => @lem3529634 _90724 B _37169 u t)). Qed.
Lemma lem3529636 {_90724 B : Type'} : (@ex ((B -> _90724) -> ((B -> Prop) -> Prop) -> B -> Prop)) = (@ex ((B -> _90724) -> ((B -> Prop) -> Prop) -> B -> Prop)).
Proof. exact (eq_refl (@ex ((B -> _90724) -> ((B -> Prop) -> Prop) -> B -> Prop))). Qed.
Lemma lem3529637 {_90724 B : Type'} (_37169 : type852 _90724 B) (u : B -> Prop) : (term4452 _90724 B _37169 u) = (term4440 _90724 B _37169 u).
Proof. exact (MK_COMB (@lem3529636 _90724 B) (@lem3529635 _90724 B _37169 u)). Qed.
Lemma lem3529638 {_90724 B : Type'} (_37169 : type852 _90724 B) : (term4453 _90724 B _37169) = (term4441 _90724 B _37169).
Proof. exact (fun_ext (fun u : B -> Prop => @lem3529637 _90724 B _37169 u)). Qed.
Lemma lem3529639 {B : Type'} : (@all (B -> Prop)) = (@all (B -> Prop)).
Proof. exact (eq_refl (@all (B -> Prop))). Qed.
Lemma lem3529640 {_90724 B : Type'} (_37169 : type852 _90724 B) : (term4445 _90724 B _37169) = (term4442 _90724 B _37169).
Proof. exact (MK_COMB (@lem3529639 B) (@lem3529638 _90724 B _37169)). Qed.
Lemma lem3529641 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem3529642 {_90724 B : Type'} (_37169 : type852 _90724 B) : (term4454 _90724 B _37169) = (term4455 _90724 B _37169).
Proof. exact (MK_COMB (@lem3529641) (@lem3529640 _90724 B _37169)). Qed.
Lemma lem3529643 {_90724 B : Type'} (_37169 : type852 _90724 B) (u : B -> Prop) : (term4448 _90724 B _37169 u) = (term4439 _90724 B _37169 u).
Proof. exact (eq_refl (term4448 _90724 B _37169 u)). Qed.
Lemma lem3529644 {_90724 B : Type'} (t : type847 _90724 B) (u : B -> Prop) : (t u) = (t u).
Proof. exact (eq_refl (t u)). Qed.
Lemma lem3529645 {_90724 B : Type'} (_37169 : type852 _90724 B) (t : type847 _90724 B) (u : B -> Prop) : (term4456 _90724 B _37169 t u) = (term4457 _90724 B _37169 t u).
Proof. exact (MK_COMB (@lem3529643 _90724 B _37169 u) (@lem3529644 _90724 B t u)). Qed.
Lemma lem3529646 {_90724 B : Type'} (_37169 : type852 _90724 B) (t : type847 _90724 B) (u : B -> Prop) : (term4457 _90724 B _37169 t u) = (term4458 _90724 B _37169 t u).
Proof. exact (eq_refl (term4457 _90724 B _37169 t u)). Qed.
Lemma lem3529647 {_90724 B : Type'} (_37169 : type852 _90724 B) (t : type847 _90724 B) (u : B -> Prop) : (term4456 _90724 B _37169 t u) = (term4458 _90724 B _37169 t u).
Proof. exact (TRANS (@lem3529645 _90724 B _37169 t u) (@lem3529646 _90724 B _37169 t u)). Qed.
Lemma lem3529648 {_90724 B : Type'} (_37169 : type852 _90724 B) (t : type847 _90724 B) : (term4459 _90724 B _37169 t) = (term4460 _90724 B _37169 t).
Proof. exact (fun_ext (fun u : B -> Prop => @lem3529647 _90724 B _37169 t u)). Qed.
Lemma lem3529649 {B : Type'} : (@all (B -> Prop)) = (@all (B -> Prop)).
Proof. exact (eq_refl (@all (B -> Prop))). Qed.
Lemma lem3529650 {_90724 B : Type'} (_37169 : type852 _90724 B) (t : type847 _90724 B) : (term4461 _90724 B _37169 t) = (term4462 _90724 B _37169 t).
Proof. exact (MK_COMB (@lem3529649 B) (@lem3529648 _90724 B _37169 t)). Qed.
Lemma lem3529651 {_90724 B : Type'} (_37169 : type852 _90724 B) : (term4463 _90724 B _37169) = (term4464 _90724 B _37169).
Proof. exact (fun_ext (fun t : type847 _90724 B => @lem3529650 _90724 B _37169 t)). Qed.
Lemma lem3529652 {_90724 B : Type'} : (@ex ((B -> Prop) -> (B -> _90724) -> ((B -> Prop) -> Prop) -> B -> Prop)) = (@ex ((B -> Prop) -> (B -> _90724) -> ((B -> Prop) -> Prop) -> B -> Prop)).
Proof. exact (eq_refl (@ex ((B -> Prop) -> (B -> _90724) -> ((B -> Prop) -> Prop) -> B -> Prop))). Qed.
Lemma lem3529653 {_90724 B : Type'} (_37169 : type852 _90724 B) : (term4446 _90724 B _37169) = (term4465 _90724 B _37169).
Proof. exact (MK_COMB (@lem3529652 _90724 B) (@lem3529651 _90724 B _37169)). Qed.
Lemma lem3529654 {_90724 B : Type'} (_37169 : type852 _90724 B) : ((term4445 _90724 B _37169) = (term4446 _90724 B _37169)) = ((term4442 _90724 B _37169) = (term4465 _90724 B _37169)).
Proof. exact (MK_COMB (@lem3529642 _90724 B _37169) (@lem3529653 _90724 B _37169)). Qed.
Lemma lem3529655 {_90724 B : Type'} (_37169 : type852 _90724 B) : (term4442 _90724 B _37169) = (term4465 _90724 B _37169).
Proof. exact (EQ_MP (@lem3529654 _90724 B _37169) (@lem3529629 _90724 B _37169)). Qed.
Lemma lem3529657 {_90724 B : Type'} (_37169 : type852 _90724 B) : (term4363 _90724 B _37169) = (term4465 _90724 B _37169).
Proof. exact (TRANS (@lem3529625 _90724 B _37169) (@lem3529655 _90724 B _37169)). Qed.
Lemma lem3529658 {_90724 B : Type'} (_37169 : type852 _90724 B) : (term2464 _90724 B _37169) = (term4465 _90724 B _37169).
Proof. exact (TRANS (@lem3529400 _90724 B _37169) (@lem3529657 _90724 B _37169)). Qed.
Lemma lem3529659 {_90724 B : Type'} (_37169 : type852 _90724 B) (h1 : term2464 _90724 B _37169) : term4465 _90724 B _37169.
Proof. exact (EQ_MP (@lem3529658 _90724 B _37169) (@lem3520026 _90724 B _37169 h1)). Qed.
Lemma lem3529662 {A : Type'} (g : type180 A) : (term4466 A g) = (g = (@EMPTY ((A -> Prop) -> Prop))).
Proof. exact (@lem16933 (g = (@EMPTY ((A -> Prop) -> Prop)))). Qed.
Lemma lem3529670 {_90724 A : Type'} (_37170 : type235 _90724 A) (u : type686 A) (f : type862 _90724 A) (t : type686 A) : (term4467 _90724 A _37170 u f t) = (term4468 _90724 A _37170 u f t).
Proof. exact (@lem17045 (@SUBSET (A -> Prop) t u) (term2623 _90724 A _37170 u f t)). Qed.
Lemma lem3529672 {A : Type'} (t : type686 A) (g : type180 A) : (term4469 A t g) = (term4469 A t g).
Proof. exact (eq_refl (term4469 A t g)). Qed.
Lemma lem3529673 {_90724 A : Type'} (g : type180 A) (_37170 : type235 _90724 A) (u : type686 A) (f : type862 _90724 A) (t : type686 A) : (term4470 _90724 A g _37170 u f t) = (term4471 _90724 A g _37170 u f t).
Proof. exact (MK_COMB (@lem3529672 A t g) (@lem3529670 _90724 A _37170 u f t)). Qed.
Lemma lem3529674 {_90724 A : Type'} (g : type180 A) (_37170 : type235 _90724 A) (u : type686 A) (f : type862 _90724 A) (t : type686 A) : (term4472 _90724 A g _37170 u f t) = (term4470 _90724 A g _37170 u f t).
Proof. exact (@lem17362 (@IN ((A -> Prop) -> Prop) t g) (term2624 _90724 A _37170 u f t)). Qed.
Lemma lem3529675 {_90724 A : Type'} (g : type180 A) (_37170 : type235 _90724 A) (u : type686 A) (f : type862 _90724 A) (t : type686 A) : (term4472 _90724 A g _37170 u f t) = (term4471 _90724 A g _37170 u f t).
Proof. exact (TRANS (@lem3529674 _90724 A g _37170 u f t) (@lem3529673 _90724 A g _37170 u f t)). Qed.
Lemma lem3529676 {A : Type'} (P : type180 A) : (term4473 A P) = (term4474 A P).
Proof. exact (@lem18392 (type686 A) P). Qed.
Lemma lem3529677 {_90724 A : Type'} (g : type180 A) (_37170 : type235 _90724 A) (u : type686 A) (f : type862 _90724 A) : (term4475 _90724 A g _37170 u f) = (term4476 _90724 A g _37170 u f).
Proof. exact (@lem3529676 A (term2626 _90724 A g _37170 u f)). Qed.
Lemma lem3529678 {_90724 A : Type'} (g : type180 A) (_37170 : type235 _90724 A) (u : type686 A) (f : type862 _90724 A) (t : type686 A) : (term4477 _90724 A g _37170 u f t) = (term2625 _90724 A g _37170 u f t).
Proof. exact (eq_refl (term4477 _90724 A g _37170 u f t)). Qed.
Lemma lem3529679 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem3529680 {_90724 A : Type'} (g : type180 A) (_37170 : type235 _90724 A) (u : type686 A) (f : type862 _90724 A) (t : type686 A) : (term4478 _90724 A g _37170 u f t) = (term4472 _90724 A g _37170 u f t).
Proof. exact (MK_COMB (@lem3529679) (@lem3529678 _90724 A g _37170 u f t)). Qed.
Lemma lem3529681 {_90724 A : Type'} (g : type180 A) (_37170 : type235 _90724 A) (u : type686 A) (f : type862 _90724 A) (t : type686 A) : (term4478 _90724 A g _37170 u f t) = (term4471 _90724 A g _37170 u f t).
Proof. exact (TRANS (@lem3529680 _90724 A g _37170 u f t) (@lem3529675 _90724 A g _37170 u f t)). Qed.
Lemma lem3529682 {_90724 A : Type'} (g : type180 A) (_37170 : type235 _90724 A) (u : type686 A) (f : type862 _90724 A) : (term4479 _90724 A g _37170 u f) = (term4480 _90724 A g _37170 u f).
Proof. exact (fun_ext (fun t : type686 A => @lem3529681 _90724 A g _37170 u f t)). Qed.
Lemma lem3529683 {A : Type'} : (@ex ((A -> Prop) -> Prop)) = (@ex ((A -> Prop) -> Prop)).
Proof. exact (eq_refl (@ex ((A -> Prop) -> Prop))). Qed.
Lemma lem3529684 {_90724 A : Type'} (g : type180 A) (_37170 : type235 _90724 A) (u : type686 A) (f : type862 _90724 A) : (term4476 _90724 A g _37170 u f) = (term4481 _90724 A g _37170 u f).
Proof. exact (MK_COMB (@lem3529683 A) (@lem3529682 _90724 A g _37170 u f)). Qed.
Lemma lem3529685 {_90724 A : Type'} (g : type180 A) (_37170 : type235 _90724 A) (u : type686 A) (f : type862 _90724 A) : (term4475 _90724 A g _37170 u f) = (term4481 _90724 A g _37170 u f).
Proof. exact (TRANS (@lem3529677 _90724 A g _37170 u f) (@lem3529684 _90724 A g _37170 u f)). Qed.
Lemma lem3529686 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem3529687 {A : Type'} (g : type180 A) : (term4482 A g) = (term4483 A g).
Proof. exact (MK_COMB (@lem3529686) (@lem3529662 A g)). Qed.
Lemma lem3529688 {_90724 A : Type'} (g : type180 A) (_37170 : type235 _90724 A) (u : type686 A) (f : type862 _90724 A) : (term4484 _90724 A g _37170 u f) = (term4485 _90724 A g _37170 u f).
Proof. exact (MK_COMB (@lem3529687 A g) (@lem3529685 _90724 A g _37170 u f)). Qed.
Lemma lem3529689 {_90724 A : Type'} (g : type180 A) (_37170 : type235 _90724 A) (u : type686 A) (f : type862 _90724 A) : (term4486 _90724 A g _37170 u f) = (term4484 _90724 A g _37170 u f).
Proof. exact (@lem17045 (term4487 A g) (term2627 _90724 A g _37170 u f)). Qed.
Lemma lem3529690 {_90724 A : Type'} (g : type180 A) (_37170 : type235 _90724 A) (u : type686 A) (f : type862 _90724 A) : (term4486 _90724 A g _37170 u f) = (term4485 _90724 A g _37170 u f).
Proof. exact (TRANS (@lem3529689 _90724 A g _37170 u f) (@lem3529688 _90724 A g _37170 u f)). Qed.
Lemma lem3529691 {_90724 A : Type'} (f : type862 _90724 A) (g : type180 A) : ((term2035 _90724 A f g) = (term2036 _90724 A f g)) = ((term2035 _90724 A f g) = (term2036 _90724 A f g)).
Proof. exact (eq_refl ((term2035 _90724 A f g) = (term2036 _90724 A f g))). Qed.
Lemma lem3529692 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem3529693 {_90724 A : Type'} (g : type180 A) (_37170 : type235 _90724 A) (u : type686 A) (f : type862 _90724 A) : (term4488 _90724 A g _37170 u f) = (term4489 _90724 A g _37170 u f).
Proof. exact (MK_COMB (@lem3529692) (@lem3529690 _90724 A g _37170 u f)). Qed.
Lemma lem3529694 {_90724 A : Type'} (_37170 : type235 _90724 A) (u : type686 A) (f : type862 _90724 A) (g : type180 A) : (term4490 _90724 A _37170 u f g) = (term4491 _90724 A _37170 u f g).
Proof. exact (MK_COMB (@lem3529693 _90724 A g _37170 u f) (@lem3529691 _90724 A f g)). Qed.
Lemma lem3529695 {_90724 A : Type'} (_37170 : type235 _90724 A) (u : type686 A) (f : type862 _90724 A) (g : type180 A) : (term2630 _90724 A _37170 u f g) = (term4490 _90724 A _37170 u f g).
Proof. exact (@lem17265 (term2628 _90724 A g _37170 u f) ((term2035 _90724 A f g) = (term2036 _90724 A f g))). Qed.
Lemma lem3529696 {_90724 A : Type'} (_37170 : type235 _90724 A) (u : type686 A) (f : type862 _90724 A) (g : type180 A) : (term2630 _90724 A _37170 u f g) = (term4491 _90724 A _37170 u f g).
Proof. exact (TRANS (@lem3529695 _90724 A _37170 u f g) (@lem3529694 _90724 A _37170 u f g)). Qed.
Lemma lem3529697 {_90724 A : Type'} (_37170 : type235 _90724 A) (u : type686 A) (f : type862 _90724 A) : (term2631 _90724 A _37170 u f) = (term4492 _90724 A _37170 u f).
Proof. exact (fun_ext (fun g : type180 A => @lem3529696 _90724 A _37170 u f g)). Qed.
Lemma lem3529698 {A : Type'} : (@all (((A -> Prop) -> Prop) -> Prop)) = (@all (((A -> Prop) -> Prop) -> Prop)).
Proof. exact (eq_refl (@all (((A -> Prop) -> Prop) -> Prop))). Qed.
Lemma lem3529699 {_90724 A : Type'} (_37170 : type235 _90724 A) (u : type686 A) (f : type862 _90724 A) : (term2632 _90724 A _37170 u f) = (term4493 _90724 A _37170 u f).
Proof. exact (MK_COMB (@lem3529698 A) (@lem3529697 _90724 A _37170 u f)). Qed.
Lemma lem3529700 {_90724 A : Type'} (_37170 : type235 _90724 A) (u : type686 A) : (term2633 _90724 A _37170 u) = (term4494 _90724 A _37170 u).
Proof. exact (fun_ext (fun f : type862 _90724 A => @lem3529699 _90724 A _37170 u f)). Qed.
Lemma lem3529701 {_90724 A : Type'} : (@all ((A -> Prop) -> _90724)) = (@all ((A -> Prop) -> _90724)).
Proof. exact (eq_refl (@all ((A -> Prop) -> _90724))). Qed.
Lemma lem3529702 {_90724 A : Type'} (_37170 : type235 _90724 A) (u : type686 A) : (term2634 _90724 A _37170 u) = (term4495 _90724 A _37170 u).
Proof. exact (MK_COMB (@lem3529701 _90724 A) (@lem3529700 _90724 A _37170 u)). Qed.
Lemma lem3529703 {_90724 A : Type'} (_37170 : type235 _90724 A) : (term2635 _90724 A _37170) = (term4496 _90724 A _37170).
Proof. exact (fun_ext (fun u : type686 A => @lem3529702 _90724 A _37170 u)). Qed.
Lemma lem3529704 {A : Type'} : (@all ((A -> Prop) -> Prop)) = (@all ((A -> Prop) -> Prop)).
Proof. exact (eq_refl (@all ((A -> Prop) -> Prop))). Qed.
Lemma lem3529705 {_90724 A : Type'} (_37170 : type235 _90724 A) : (term2636 _90724 A _37170) = (term4497 _90724 A _37170).
Proof. exact (MK_COMB (@lem3529704 A) (@lem3529703 _90724 A _37170)). Qed.
Lemma lem3529812 {A : Type'} (P : Prop) (Q : A -> Prop) : (term434 A P Q) = (term435 A P Q).
Proof. exact (EQ_MP (@lem18911 A P Q) (@lem18910 A P Q)). Qed.
Lemma lem3529813 {A : Type'} (P : Prop) (Q : type180 A) : (term4498 A P Q) = (term4499 A P Q).
Proof. exact (@lem3529812 (type686 A) P Q). Qed.
Lemma lem3529814 {_90724 A : Type'} (g : type180 A) (_37170 : type235 _90724 A) (u : type686 A) (f : type862 _90724 A) : (term4500 _90724 A g _37170 u f) = (term4501 _90724 A g _37170 u f).
Proof. exact (@lem3529813 A (g = (@EMPTY ((A -> Prop) -> Prop))) (term4480 _90724 A g _37170 u f)). Qed.
Lemma lem3529815 {_90724 A : Type'} (g : type180 A) (_37170 : type235 _90724 A) (u : type686 A) (f : type862 _90724 A) (t : type686 A) : (term4502 _90724 A g _37170 u f t) = (term4471 _90724 A g _37170 u f t).
Proof. exact (eq_refl (term4502 _90724 A g _37170 u f t)). Qed.
Lemma lem3529816 {_90724 A : Type'} (g : type180 A) (_37170 : type235 _90724 A) (u : type686 A) (f : type862 _90724 A) : (term4503 _90724 A g _37170 u f) = (term4480 _90724 A g _37170 u f).
Proof. exact (fun_ext (fun t : type686 A => @lem3529815 _90724 A g _37170 u f t)). Qed.
Lemma lem3529817 {A : Type'} : (@ex ((A -> Prop) -> Prop)) = (@ex ((A -> Prop) -> Prop)).
Proof. exact (eq_refl (@ex ((A -> Prop) -> Prop))). Qed.
Lemma lem3529818 {_90724 A : Type'} (g : type180 A) (_37170 : type235 _90724 A) (u : type686 A) (f : type862 _90724 A) : (term4504 _90724 A g _37170 u f) = (term4481 _90724 A g _37170 u f).
Proof. exact (MK_COMB (@lem3529817 A) (@lem3529816 _90724 A g _37170 u f)). Qed.
Lemma lem3529819 {A : Type'} (g : type180 A) : (term4483 A g) = (term4483 A g).
Proof. exact (eq_refl (term4483 A g)). Qed.
Lemma lem3529820 {_90724 A : Type'} (g : type180 A) (_37170 : type235 _90724 A) (u : type686 A) (f : type862 _90724 A) : (term4500 _90724 A g _37170 u f) = (term4485 _90724 A g _37170 u f).
Proof. exact (MK_COMB (@lem3529819 A g) (@lem3529818 _90724 A g _37170 u f)). Qed.
Lemma lem3529821 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem3529822 {_90724 A : Type'} (g : type180 A) (_37170 : type235 _90724 A) (u : type686 A) (f : type862 _90724 A) : (term4505 _90724 A g _37170 u f) = (term4506 _90724 A g _37170 u f).
Proof. exact (MK_COMB (@lem3529821) (@lem3529820 _90724 A g _37170 u f)). Qed.
Lemma lem3529823 {_90724 A : Type'} (g : type180 A) (_37170 : type235 _90724 A) (u : type686 A) (f : type862 _90724 A) (t : type686 A) : (term4502 _90724 A g _37170 u f t) = (term4471 _90724 A g _37170 u f t).
Proof. exact (eq_refl (term4502 _90724 A g _37170 u f t)). Qed.
Lemma lem3529824 {A : Type'} (g : type180 A) : (term4483 A g) = (term4483 A g).
Proof. exact (eq_refl (term4483 A g)). Qed.
Lemma lem3529825 {_90724 A : Type'} (g : type180 A) (_37170 : type235 _90724 A) (u : type686 A) (f : type862 _90724 A) (t : type686 A) : (term4507 _90724 A g _37170 u f t) = (term4508 _90724 A g _37170 u f t).
Proof. exact (MK_COMB (@lem3529824 A g) (@lem3529823 _90724 A g _37170 u f t)). Qed.
Lemma lem3529826 {_90724 A : Type'} (g : type180 A) (_37170 : type235 _90724 A) (u : type686 A) (f : type862 _90724 A) : (term4509 _90724 A g _37170 u f) = (term4510 _90724 A g _37170 u f).
Proof. exact (fun_ext (fun t : type686 A => @lem3529825 _90724 A g _37170 u f t)). Qed.
Lemma lem3529827 {A : Type'} : (@ex ((A -> Prop) -> Prop)) = (@ex ((A -> Prop) -> Prop)).
Proof. exact (eq_refl (@ex ((A -> Prop) -> Prop))). Qed.
Lemma lem3529828 {_90724 A : Type'} (g : type180 A) (_37170 : type235 _90724 A) (u : type686 A) (f : type862 _90724 A) : (term4501 _90724 A g _37170 u f) = (term4511 _90724 A g _37170 u f).
Proof. exact (MK_COMB (@lem3529827 A) (@lem3529826 _90724 A g _37170 u f)). Qed.
Lemma lem3529829 {_90724 A : Type'} (g : type180 A) (_37170 : type235 _90724 A) (u : type686 A) (f : type862 _90724 A) : ((term4500 _90724 A g _37170 u f) = (term4501 _90724 A g _37170 u f)) = ((term4485 _90724 A g _37170 u f) = (term4511 _90724 A g _37170 u f)).
Proof. exact (MK_COMB (@lem3529822 _90724 A g _37170 u f) (@lem3529828 _90724 A g _37170 u f)). Qed.
Lemma lem3529830 {_90724 A : Type'} (g : type180 A) (_37170 : type235 _90724 A) (u : type686 A) (f : type862 _90724 A) : (term4485 _90724 A g _37170 u f) = (term4511 _90724 A g _37170 u f).
Proof. exact (EQ_MP (@lem3529829 _90724 A g _37170 u f) (@lem3529814 _90724 A g _37170 u f)). Qed.
Lemma lem3529831 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem3529832 {_90724 A : Type'} (g : type180 A) (_37170 : type235 _90724 A) (u : type686 A) (f : type862 _90724 A) : (term4489 _90724 A g _37170 u f) = (term4512 _90724 A g _37170 u f).
Proof. exact (MK_COMB (@lem3529831) (@lem3529830 _90724 A g _37170 u f)). Qed.
Lemma lem3529833 {_90724 A : Type'} (f : type862 _90724 A) (g : type180 A) : ((term2035 _90724 A f g) = (term2036 _90724 A f g)) = ((term2035 _90724 A f g) = (term2036 _90724 A f g)).
Proof. exact (eq_refl ((term2035 _90724 A f g) = (term2036 _90724 A f g))). Qed.
Lemma lem3529834 {_90724 A : Type'} (_37170 : type235 _90724 A) (u : type686 A) (f : type862 _90724 A) (g : type180 A) : (term4491 _90724 A _37170 u f g) = (term4513 _90724 A _37170 u f g).
Proof. exact (MK_COMB (@lem3529832 _90724 A g _37170 u f) (@lem3529833 _90724 A f g)). Qed.
Lemma lem3529836 {A : Type'} (P : A -> Prop) (Q : Prop) : (term550 A P Q) = (term551 A P Q).
Proof. exact (EQ_MP (@lem18905 A P Q) (@lem18904 A P Q)). Qed.
Lemma lem3529837 {A : Type'} (P : type180 A) (Q : Prop) : (term4514 A P Q) = (term4515 A P Q).
Proof. exact (@lem3529836 (type686 A) P Q). Qed.
Lemma lem3529838 {_90724 A : Type'} (_37170 : type235 _90724 A) (u : type686 A) (f : type862 _90724 A) (g : type180 A) : (term4516 _90724 A _37170 u f g) = (term4517 _90724 A _37170 u f g).
Proof. exact (@lem3529837 A (term4510 _90724 A g _37170 u f) ((term2035 _90724 A f g) = (term2036 _90724 A f g))). Qed.
Lemma lem3529839 {_90724 A : Type'} (g : type180 A) (_37170 : type235 _90724 A) (u : type686 A) (f : type862 _90724 A) (t : type686 A) : (term4518 _90724 A g _37170 u f t) = (term4508 _90724 A g _37170 u f t).
Proof. exact (eq_refl (term4518 _90724 A g _37170 u f t)). Qed.
Lemma lem3529840 {_90724 A : Type'} (g : type180 A) (_37170 : type235 _90724 A) (u : type686 A) (f : type862 _90724 A) : (term4519 _90724 A g _37170 u f) = (term4510 _90724 A g _37170 u f).
Proof. exact (fun_ext (fun t : type686 A => @lem3529839 _90724 A g _37170 u f t)). Qed.
Lemma lem3529841 {A : Type'} : (@ex ((A -> Prop) -> Prop)) = (@ex ((A -> Prop) -> Prop)).
Proof. exact (eq_refl (@ex ((A -> Prop) -> Prop))). Qed.
Lemma lem3529842 {_90724 A : Type'} (g : type180 A) (_37170 : type235 _90724 A) (u : type686 A) (f : type862 _90724 A) : (term4520 _90724 A g _37170 u f) = (term4511 _90724 A g _37170 u f).
Proof. exact (MK_COMB (@lem3529841 A) (@lem3529840 _90724 A g _37170 u f)). Qed.
Lemma lem3529843 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem3529844 {_90724 A : Type'} (g : type180 A) (_37170 : type235 _90724 A) (u : type686 A) (f : type862 _90724 A) : (term4521 _90724 A g _37170 u f) = (term4512 _90724 A g _37170 u f).
Proof. exact (MK_COMB (@lem3529843) (@lem3529842 _90724 A g _37170 u f)). Qed.
Lemma lem3529845 {_90724 A : Type'} (f : type862 _90724 A) (g : type180 A) : ((term2035 _90724 A f g) = (term2036 _90724 A f g)) = ((term2035 _90724 A f g) = (term2036 _90724 A f g)).
Proof. exact (eq_refl ((term2035 _90724 A f g) = (term2036 _90724 A f g))). Qed.
Lemma lem3529846 {_90724 A : Type'} (_37170 : type235 _90724 A) (u : type686 A) (f : type862 _90724 A) (g : type180 A) : (term4516 _90724 A _37170 u f g) = (term4513 _90724 A _37170 u f g).
Proof. exact (MK_COMB (@lem3529844 _90724 A g _37170 u f) (@lem3529845 _90724 A f g)). Qed.
Lemma lem3529847 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem3529848 {_90724 A : Type'} (_37170 : type235 _90724 A) (u : type686 A) (f : type862 _90724 A) (g : type180 A) : (term4522 _90724 A _37170 u f g) = (term4523 _90724 A _37170 u f g).
Proof. exact (MK_COMB (@lem3529847) (@lem3529846 _90724 A _37170 u f g)). Qed.
Lemma lem3529849 {_90724 A : Type'} (g : type180 A) (_37170 : type235 _90724 A) (u : type686 A) (f : type862 _90724 A) (t : type686 A) : (term4518 _90724 A g _37170 u f t) = (term4508 _90724 A g _37170 u f t).
Proof. exact (eq_refl (term4518 _90724 A g _37170 u f t)). Qed.
Lemma lem3529850 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem3529851 {_90724 A : Type'} (g : type180 A) (_37170 : type235 _90724 A) (u : type686 A) (f : type862 _90724 A) (t : type686 A) : (term4524 _90724 A g _37170 u f t) = (term4525 _90724 A g _37170 u f t).
Proof. exact (MK_COMB (@lem3529850) (@lem3529849 _90724 A g _37170 u f t)). Qed.
Lemma lem3529852 {_90724 A : Type'} (f : type862 _90724 A) (g : type180 A) : ((term2035 _90724 A f g) = (term2036 _90724 A f g)) = ((term2035 _90724 A f g) = (term2036 _90724 A f g)).
Proof. exact (eq_refl ((term2035 _90724 A f g) = (term2036 _90724 A f g))). Qed.
Lemma lem3529853 {_90724 A : Type'} (_37170 : type235 _90724 A) (u : type686 A) (t : type686 A) (f : type862 _90724 A) (g : type180 A) : (term4526 _90724 A _37170 u t f g) = (term4527 _90724 A _37170 u t f g).
Proof. exact (MK_COMB (@lem3529851 _90724 A g _37170 u f t) (@lem3529852 _90724 A f g)). Qed.
Lemma lem3529854 {_90724 A : Type'} (_37170 : type235 _90724 A) (u : type686 A) (f : type862 _90724 A) (g : type180 A) : (term4528 _90724 A _37170 u f g) = (term4529 _90724 A _37170 u f g).
Proof. exact (fun_ext (fun t : type686 A => @lem3529853 _90724 A _37170 u t f g)). Qed.
Lemma lem3529855 {A : Type'} : (@ex ((A -> Prop) -> Prop)) = (@ex ((A -> Prop) -> Prop)).
Proof. exact (eq_refl (@ex ((A -> Prop) -> Prop))). Qed.
Lemma lem3529856 {_90724 A : Type'} (_37170 : type235 _90724 A) (u : type686 A) (f : type862 _90724 A) (g : type180 A) : (term4517 _90724 A _37170 u f g) = (term4530 _90724 A _37170 u f g).
Proof. exact (MK_COMB (@lem3529855 A) (@lem3529854 _90724 A _37170 u f g)). Qed.
Lemma lem3529857 {_90724 A : Type'} (_37170 : type235 _90724 A) (u : type686 A) (f : type862 _90724 A) (g : type180 A) : ((term4516 _90724 A _37170 u f g) = (term4517 _90724 A _37170 u f g)) = ((term4513 _90724 A _37170 u f g) = (term4530 _90724 A _37170 u f g)).
Proof. exact (MK_COMB (@lem3529848 _90724 A _37170 u f g) (@lem3529856 _90724 A _37170 u f g)). Qed.
Lemma lem3529858 {_90724 A : Type'} (_37170 : type235 _90724 A) (u : type686 A) (f : type862 _90724 A) (g : type180 A) : (term4513 _90724 A _37170 u f g) = (term4530 _90724 A _37170 u f g).
Proof. exact (EQ_MP (@lem3529857 _90724 A _37170 u f g) (@lem3529838 _90724 A _37170 u f g)). Qed.
Lemma lem3529859 {_90724 A : Type'} (_37170 : type235 _90724 A) (u : type686 A) (f : type862 _90724 A) (g : type180 A) : (term4491 _90724 A _37170 u f g) = (term4530 _90724 A _37170 u f g).
Proof. exact (TRANS (@lem3529834 _90724 A _37170 u f g) (@lem3529858 _90724 A _37170 u f g)). Qed.
Lemma lem3529860 {_90724 A : Type'} (_37170 : type235 _90724 A) (u : type686 A) (f : type862 _90724 A) : (term4492 _90724 A _37170 u f) = (term4531 _90724 A _37170 u f).
Proof. exact (fun_ext (fun g : type180 A => @lem3529859 _90724 A _37170 u f g)). Qed.
Lemma lem3529861 {A : Type'} : (@all (((A -> Prop) -> Prop) -> Prop)) = (@all (((A -> Prop) -> Prop) -> Prop)).
Proof. exact (eq_refl (@all (((A -> Prop) -> Prop) -> Prop))). Qed.
Lemma lem3529862 {_90724 A : Type'} (_37170 : type235 _90724 A) (u : type686 A) (f : type862 _90724 A) : (term4493 _90724 A _37170 u f) = (term4532 _90724 A _37170 u f).
Proof. exact (MK_COMB (@lem3529861 A) (@lem3529860 _90724 A _37170 u f)). Qed.
Lemma lem3529864 {A B : Type'} (P : type1413 A B) : (term453 A B P) = (term454 A B P).
Proof. exact (EQ_MP (@lem18899 A B P) (@lem18898 A B P)). Qed.
Lemma lem3529865 {A : Type'} (P : type75 A) : (term4533 A P) = (term4534 A P).
Proof. exact (@lem3529864 (type180 A) (type686 A) P). Qed.
Lemma lem3529866 {_90724 A : Type'} (_37170 : type235 _90724 A) (u : type686 A) (f : type862 _90724 A) : (term4535 _90724 A _37170 u f) = (term4536 _90724 A _37170 u f).
Proof. exact (@lem3529865 A (term4537 _90724 A _37170 u f)). Qed.
Lemma lem3529867 {_90724 A : Type'} (_37170 : type235 _90724 A) (u : type686 A) (f : type862 _90724 A) (g : type180 A) : (term4538 _90724 A _37170 u f g) = (term4529 _90724 A _37170 u f g).
Proof. exact (eq_refl (term4538 _90724 A _37170 u f g)). Qed.
Lemma lem3529868 {A : Type'} (t : type686 A) : t = t.
Proof. exact (eq_refl t). Qed.
Lemma lem3529869 {_90724 A : Type'} (_37170 : type235 _90724 A) (u : type686 A) (f : type862 _90724 A) (g : type180 A) (t : type686 A) : (term4539 _90724 A _37170 u f g t) = (term4540 _90724 A _37170 u f g t).
Proof. exact (MK_COMB (@lem3529867 _90724 A _37170 u f g) (@lem3529868 A t)). Qed.
Lemma lem3529870 {_90724 A : Type'} (_37170 : type235 _90724 A) (u : type686 A) (t : type686 A) (f : type862 _90724 A) (g : type180 A) : (term4540 _90724 A _37170 u f g t) = (term4527 _90724 A _37170 u t f g).
Proof. exact (eq_refl (term4540 _90724 A _37170 u f g t)). Qed.
Lemma lem3529871 {_90724 A : Type'} (_37170 : type235 _90724 A) (u : type686 A) (t : type686 A) (f : type862 _90724 A) (g : type180 A) : (term4539 _90724 A _37170 u f g t) = (term4527 _90724 A _37170 u t f g).
Proof. exact (TRANS (@lem3529869 _90724 A _37170 u f g t) (@lem3529870 _90724 A _37170 u t f g)). Qed.
Lemma lem3529872 {_90724 A : Type'} (_37170 : type235 _90724 A) (u : type686 A) (f : type862 _90724 A) (g : type180 A) : (term4541 _90724 A _37170 u f g) = (term4529 _90724 A _37170 u f g).
Proof. exact (fun_ext (fun t : type686 A => @lem3529871 _90724 A _37170 u t f g)). Qed.
Lemma lem3529873 {A : Type'} : (@ex ((A -> Prop) -> Prop)) = (@ex ((A -> Prop) -> Prop)).
Proof. exact (eq_refl (@ex ((A -> Prop) -> Prop))). Qed.
Lemma lem3529874 {_90724 A : Type'} (_37170 : type235 _90724 A) (u : type686 A) (f : type862 _90724 A) (g : type180 A) : (term4542 _90724 A _37170 u f g) = (term4530 _90724 A _37170 u f g).
Proof. exact (MK_COMB (@lem3529873 A) (@lem3529872 _90724 A _37170 u f g)). Qed.
Lemma lem3529875 {_90724 A : Type'} (_37170 : type235 _90724 A) (u : type686 A) (f : type862 _90724 A) : (term4543 _90724 A _37170 u f) = (term4531 _90724 A _37170 u f).
Proof. exact (fun_ext (fun g : type180 A => @lem3529874 _90724 A _37170 u f g)). Qed.
Lemma lem3529876 {A : Type'} : (@all (((A -> Prop) -> Prop) -> Prop)) = (@all (((A -> Prop) -> Prop) -> Prop)).
Proof. exact (eq_refl (@all (((A -> Prop) -> Prop) -> Prop))). Qed.
Lemma lem3529877 {_90724 A : Type'} (_37170 : type235 _90724 A) (u : type686 A) (f : type862 _90724 A) : (term4535 _90724 A _37170 u f) = (term4532 _90724 A _37170 u f).
Proof. exact (MK_COMB (@lem3529876 A) (@lem3529875 _90724 A _37170 u f)). Qed.
Lemma lem3529878 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem3529879 {_90724 A : Type'} (_37170 : type235 _90724 A) (u : type686 A) (f : type862 _90724 A) : (term4544 _90724 A _37170 u f) = (term4545 _90724 A _37170 u f).
Proof. exact (MK_COMB (@lem3529878) (@lem3529877 _90724 A _37170 u f)). Qed.
Lemma lem3529880 {_90724 A : Type'} (_37170 : type235 _90724 A) (u : type686 A) (f : type862 _90724 A) (g : type180 A) : (term4538 _90724 A _37170 u f g) = (term4529 _90724 A _37170 u f g).
Proof. exact (eq_refl (term4538 _90724 A _37170 u f g)). Qed.
Lemma lem3529881 {A : Type'} (t : type76 A) (g : type180 A) : (t g) = (t g).
Proof. exact (eq_refl (t g)). Qed.
Lemma lem3529882 {_90724 A : Type'} (_37170 : type235 _90724 A) (u : type686 A) (f : type862 _90724 A) (t : type76 A) (g : type180 A) : (term4546 _90724 A _37170 u f t g) = (term4547 _90724 A _37170 u f t g).
Proof. exact (MK_COMB (@lem3529880 _90724 A _37170 u f g) (@lem3529881 A t g)). Qed.
Lemma lem3529883 {_90724 A : Type'} (_37170 : type235 _90724 A) (u : type686 A) (t : type76 A) (f : type862 _90724 A) (g : type180 A) : (term4547 _90724 A _37170 u f t g) = (term4548 _90724 A _37170 u t f g).
Proof. exact (eq_refl (term4547 _90724 A _37170 u f t g)). Qed.
Lemma lem3529884 {_90724 A : Type'} (_37170 : type235 _90724 A) (u : type686 A) (t : type76 A) (f : type862 _90724 A) (g : type180 A) : (term4546 _90724 A _37170 u f t g) = (term4548 _90724 A _37170 u t f g).
Proof. exact (TRANS (@lem3529882 _90724 A _37170 u f t g) (@lem3529883 _90724 A _37170 u t f g)). Qed.
Lemma lem3529885 {_90724 A : Type'} (_37170 : type235 _90724 A) (u : type686 A) (t : type76 A) (f : type862 _90724 A) : (term4549 _90724 A _37170 u f t) = (term4550 _90724 A _37170 u t f).
Proof. exact (fun_ext (fun g : type180 A => @lem3529884 _90724 A _37170 u t f g)). Qed.
Lemma lem3529886 {A : Type'} : (@all (((A -> Prop) -> Prop) -> Prop)) = (@all (((A -> Prop) -> Prop) -> Prop)).
Proof. exact (eq_refl (@all (((A -> Prop) -> Prop) -> Prop))). Qed.
Lemma lem3529887 {_90724 A : Type'} (_37170 : type235 _90724 A) (u : type686 A) (t : type76 A) (f : type862 _90724 A) : (term4551 _90724 A _37170 u f t) = (term4552 _90724 A _37170 u t f).
Proof. exact (MK_COMB (@lem3529886 A) (@lem3529885 _90724 A _37170 u t f)). Qed.
Lemma lem3529888 {_90724 A : Type'} (_37170 : type235 _90724 A) (u : type686 A) (f : type862 _90724 A) : (term4553 _90724 A _37170 u f) = (term4554 _90724 A _37170 u f).
Proof. exact (fun_ext (fun t : type76 A => @lem3529887 _90724 A _37170 u t f)). Qed.
Lemma lem3529889 {A : Type'} : (@ex ((((A -> Prop) -> Prop) -> Prop) -> (A -> Prop) -> Prop)) = (@ex ((((A -> Prop) -> Prop) -> Prop) -> (A -> Prop) -> Prop)).
Proof. exact (eq_refl (@ex ((((A -> Prop) -> Prop) -> Prop) -> (A -> Prop) -> Prop))). Qed.
Lemma lem3529890 {_90724 A : Type'} (_37170 : type235 _90724 A) (u : type686 A) (f : type862 _90724 A) : (term4536 _90724 A _37170 u f) = (term4555 _90724 A _37170 u f).
Proof. exact (MK_COMB (@lem3529889 A) (@lem3529888 _90724 A _37170 u f)). Qed.
Lemma lem3529891 {_90724 A : Type'} (_37170 : type235 _90724 A) (u : type686 A) (f : type862 _90724 A) : ((term4535 _90724 A _37170 u f) = (term4536 _90724 A _37170 u f)) = ((term4532 _90724 A _37170 u f) = (term4555 _90724 A _37170 u f)).
Proof. exact (MK_COMB (@lem3529879 _90724 A _37170 u f) (@lem3529890 _90724 A _37170 u f)). Qed.
Lemma lem3529892 {_90724 A : Type'} (_37170 : type235 _90724 A) (u : type686 A) (f : type862 _90724 A) : (term4532 _90724 A _37170 u f) = (term4555 _90724 A _37170 u f).
Proof. exact (EQ_MP (@lem3529891 _90724 A _37170 u f) (@lem3529866 _90724 A _37170 u f)). Qed.
Lemma lem3529893 {_90724 A : Type'} (_37170 : type235 _90724 A) (u : type686 A) (f : type862 _90724 A) : (term4493 _90724 A _37170 u f) = (term4555 _90724 A _37170 u f).
Proof. exact (TRANS (@lem3529862 _90724 A _37170 u f) (@lem3529892 _90724 A _37170 u f)). Qed.
Lemma lem3529894 {_90724 A : Type'} (_37170 : type235 _90724 A) (u : type686 A) : (term4494 _90724 A _37170 u) = (term4556 _90724 A _37170 u).
Proof. exact (fun_ext (fun f : type862 _90724 A => @lem3529893 _90724 A _37170 u f)). Qed.
Lemma lem3529895 {_90724 A : Type'} : (@all ((A -> Prop) -> _90724)) = (@all ((A -> Prop) -> _90724)).
Proof. exact (eq_refl (@all ((A -> Prop) -> _90724))). Qed.
Lemma lem3529896 {_90724 A : Type'} (_37170 : type235 _90724 A) (u : type686 A) : (term4495 _90724 A _37170 u) = (term4557 _90724 A _37170 u).
Proof. exact (MK_COMB (@lem3529895 _90724 A) (@lem3529894 _90724 A _37170 u)). Qed.
Lemma lem3529898 {A B : Type'} (P : type1413 A B) : (term453 A B P) = (term454 A B P).
Proof. exact (EQ_MP (@lem18899 A B P) (@lem18898 A B P)). Qed.
Lemma lem3529899 {_90724 A : Type'} (P : type224 _90724 A) : (term4558 _90724 A P) = (term4559 _90724 A P).
Proof. exact (@lem3529898 (type862 _90724 A) (type76 A) P). Qed.
Lemma lem3529900 {_90724 A : Type'} (_37170 : type235 _90724 A) (u : type686 A) : (term4560 _90724 A _37170 u) = (term4561 _90724 A _37170 u).
Proof. exact (@lem3529899 _90724 A (term4562 _90724 A _37170 u)). Qed.
Lemma lem3529901 {_90724 A : Type'} (_37170 : type235 _90724 A) (u : type686 A) (f : type862 _90724 A) : (term4563 _90724 A _37170 u f) = (term4554 _90724 A _37170 u f).
Proof. exact (eq_refl (term4563 _90724 A _37170 u f)). Qed.
Lemma lem3529902 {A : Type'} (t : type76 A) : t = t.
Proof. exact (eq_refl t). Qed.
Lemma lem3529903 {_90724 A : Type'} (_37170 : type235 _90724 A) (u : type686 A) (f : type862 _90724 A) (t : type76 A) : (term4564 _90724 A _37170 u f t) = (term4565 _90724 A _37170 u f t).
Proof. exact (MK_COMB (@lem3529901 _90724 A _37170 u f) (@lem3529902 A t)). Qed.
Lemma lem3529904 {_90724 A : Type'} (_37170 : type235 _90724 A) (u : type686 A) (t : type76 A) (f : type862 _90724 A) : (term4565 _90724 A _37170 u f t) = (term4552 _90724 A _37170 u t f).
Proof. exact (eq_refl (term4565 _90724 A _37170 u f t)). Qed.
Lemma lem3529905 {_90724 A : Type'} (_37170 : type235 _90724 A) (u : type686 A) (t : type76 A) (f : type862 _90724 A) : (term4564 _90724 A _37170 u f t) = (term4552 _90724 A _37170 u t f).
Proof. exact (TRANS (@lem3529903 _90724 A _37170 u f t) (@lem3529904 _90724 A _37170 u t f)). Qed.
Lemma lem3529906 {_90724 A : Type'} (_37170 : type235 _90724 A) (u : type686 A) (f : type862 _90724 A) : (term4566 _90724 A _37170 u f) = (term4554 _90724 A _37170 u f).
Proof. exact (fun_ext (fun t : type76 A => @lem3529905 _90724 A _37170 u t f)). Qed.
Lemma lem3529907 {A : Type'} : (@ex ((((A -> Prop) -> Prop) -> Prop) -> (A -> Prop) -> Prop)) = (@ex ((((A -> Prop) -> Prop) -> Prop) -> (A -> Prop) -> Prop)).
Proof. exact (eq_refl (@ex ((((A -> Prop) -> Prop) -> Prop) -> (A -> Prop) -> Prop))). Qed.
Lemma lem3529908 {_90724 A : Type'} (_37170 : type235 _90724 A) (u : type686 A) (f : type862 _90724 A) : (term4567 _90724 A _37170 u f) = (term4555 _90724 A _37170 u f).
Proof. exact (MK_COMB (@lem3529907 A) (@lem3529906 _90724 A _37170 u f)). Qed.
Lemma lem3529909 {_90724 A : Type'} (_37170 : type235 _90724 A) (u : type686 A) : (term4568 _90724 A _37170 u) = (term4556 _90724 A _37170 u).
Proof. exact (fun_ext (fun f : type862 _90724 A => @lem3529908 _90724 A _37170 u f)). Qed.
Lemma lem3529910 {_90724 A : Type'} : (@all ((A -> Prop) -> _90724)) = (@all ((A -> Prop) -> _90724)).
Proof. exact (eq_refl (@all ((A -> Prop) -> _90724))). Qed.
Lemma lem3529911 {_90724 A : Type'} (_37170 : type235 _90724 A) (u : type686 A) : (term4560 _90724 A _37170 u) = (term4557 _90724 A _37170 u).
Proof. exact (MK_COMB (@lem3529910 _90724 A) (@lem3529909 _90724 A _37170 u)). Qed.
Lemma lem3529912 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem3529913 {_90724 A : Type'} (_37170 : type235 _90724 A) (u : type686 A) : (term4569 _90724 A _37170 u) = (term4570 _90724 A _37170 u).
Proof. exact (MK_COMB (@lem3529912) (@lem3529911 _90724 A _37170 u)). Qed.
Lemma lem3529914 {_90724 A : Type'} (_37170 : type235 _90724 A) (u : type686 A) (f : type862 _90724 A) : (term4563 _90724 A _37170 u f) = (term4554 _90724 A _37170 u f).
Proof. exact (eq_refl (term4563 _90724 A _37170 u f)). Qed.
Lemma lem3529915 {_90724 A : Type'} (t : type226 _90724 A) (f : type862 _90724 A) : (t f) = (t f).
Proof. exact (eq_refl (t f)). Qed.
Lemma lem3529916 {_90724 A : Type'} (_37170 : type235 _90724 A) (u : type686 A) (t : type226 _90724 A) (f : type862 _90724 A) : (term4571 _90724 A _37170 u t f) = (term4572 _90724 A _37170 u t f).
Proof. exact (MK_COMB (@lem3529914 _90724 A _37170 u f) (@lem3529915 _90724 A t f)). Qed.
Lemma lem3529917 {_90724 A : Type'} (_37170 : type235 _90724 A) (u : type686 A) (t : type226 _90724 A) (f : type862 _90724 A) : (term4572 _90724 A _37170 u t f) = (term4573 _90724 A _37170 u t f).
Proof. exact (eq_refl (term4572 _90724 A _37170 u t f)). Qed.
Lemma lem3529918 {_90724 A : Type'} (_37170 : type235 _90724 A) (u : type686 A) (t : type226 _90724 A) (f : type862 _90724 A) : (term4571 _90724 A _37170 u t f) = (term4573 _90724 A _37170 u t f).
Proof. exact (TRANS (@lem3529916 _90724 A _37170 u t f) (@lem3529917 _90724 A _37170 u t f)). Qed.
Lemma lem3529919 {_90724 A : Type'} (_37170 : type235 _90724 A) (u : type686 A) (t : type226 _90724 A) : (term4574 _90724 A _37170 u t) = (term4575 _90724 A _37170 u t).
Proof. exact (fun_ext (fun f : type862 _90724 A => @lem3529918 _90724 A _37170 u t f)). Qed.
Lemma lem3529920 {_90724 A : Type'} : (@all ((A -> Prop) -> _90724)) = (@all ((A -> Prop) -> _90724)).
Proof. exact (eq_refl (@all ((A -> Prop) -> _90724))). Qed.
Lemma lem3529921 {_90724 A : Type'} (_37170 : type235 _90724 A) (u : type686 A) (t : type226 _90724 A) : (term4576 _90724 A _37170 u t) = (term4577 _90724 A _37170 u t).
Proof. exact (MK_COMB (@lem3529920 _90724 A) (@lem3529919 _90724 A _37170 u t)). Qed.
Lemma lem3529922 {_90724 A : Type'} (_37170 : type235 _90724 A) (u : type686 A) : (term4578 _90724 A _37170 u) = (term4579 _90724 A _37170 u).
Proof. exact (fun_ext (fun t : type226 _90724 A => @lem3529921 _90724 A _37170 u t)). Qed.
Lemma lem3529923 {_90724 A : Type'} : (@ex (((A -> Prop) -> _90724) -> (((A -> Prop) -> Prop) -> Prop) -> (A -> Prop) -> Prop)) = (@ex (((A -> Prop) -> _90724) -> (((A -> Prop) -> Prop) -> Prop) -> (A -> Prop) -> Prop)).
Proof. exact (eq_refl (@ex (((A -> Prop) -> _90724) -> (((A -> Prop) -> Prop) -> Prop) -> (A -> Prop) -> Prop))). Qed.
Lemma lem3529924 {_90724 A : Type'} (_37170 : type235 _90724 A) (u : type686 A) : (term4561 _90724 A _37170 u) = (term4580 _90724 A _37170 u).
Proof. exact (MK_COMB (@lem3529923 _90724 A) (@lem3529922 _90724 A _37170 u)). Qed.
Lemma lem3529925 {_90724 A : Type'} (_37170 : type235 _90724 A) (u : type686 A) : ((term4560 _90724 A _37170 u) = (term4561 _90724 A _37170 u)) = ((term4557 _90724 A _37170 u) = (term4580 _90724 A _37170 u)).
Proof. exact (MK_COMB (@lem3529913 _90724 A _37170 u) (@lem3529924 _90724 A _37170 u)). Qed.
Lemma lem3529926 {_90724 A : Type'} (_37170 : type235 _90724 A) (u : type686 A) : (term4557 _90724 A _37170 u) = (term4580 _90724 A _37170 u).
Proof. exact (EQ_MP (@lem3529925 _90724 A _37170 u) (@lem3529900 _90724 A _37170 u)). Qed.
Lemma lem3529927 {_90724 A : Type'} (_37170 : type235 _90724 A) (u : type686 A) : (term4495 _90724 A _37170 u) = (term4580 _90724 A _37170 u).
Proof. exact (TRANS (@lem3529896 _90724 A _37170 u) (@lem3529926 _90724 A _37170 u)). Qed.
Lemma lem3529928 {_90724 A : Type'} (_37170 : type235 _90724 A) : (term4496 _90724 A _37170) = (term4581 _90724 A _37170).
Proof. exact (fun_ext (fun u : type686 A => @lem3529927 _90724 A _37170 u)). Qed.
Lemma lem3529929 {A : Type'} : (@all ((A -> Prop) -> Prop)) = (@all ((A -> Prop) -> Prop)).
Proof. exact (eq_refl (@all ((A -> Prop) -> Prop))). Qed.
Lemma lem3529930 {_90724 A : Type'} (_37170 : type235 _90724 A) : (term4497 _90724 A _37170) = (term4582 _90724 A _37170).
Proof. exact (MK_COMB (@lem3529929 A) (@lem3529928 _90724 A _37170)). Qed.
Lemma lem3529932 {A B : Type'} (P : type1413 A B) : (term453 A B P) = (term454 A B P).
Proof. exact (EQ_MP (@lem18899 A B P) (@lem18898 A B P)). Qed.
Lemma lem3529933 {_90724 A : Type'} (P : type231 _90724 A) : (term4583 _90724 A P) = (term4584 _90724 A P).
Proof. exact (@lem3529932 (type686 A) (type226 _90724 A) P). Qed.
Lemma lem3529934 {_90724 A : Type'} (_37170 : type235 _90724 A) : (term4585 _90724 A _37170) = (term4586 _90724 A _37170).
Proof. exact (@lem3529933 _90724 A (term4587 _90724 A _37170)). Qed.
Lemma lem3529935 {_90724 A : Type'} (_37170 : type235 _90724 A) (u : type686 A) : (term4588 _90724 A _37170 u) = (term4579 _90724 A _37170 u).
Proof. exact (eq_refl (term4588 _90724 A _37170 u)). Qed.
Lemma lem3529936 {_90724 A : Type'} (t : type226 _90724 A) : t = t.
Proof. exact (eq_refl t). Qed.
Lemma lem3529937 {_90724 A : Type'} (_37170 : type235 _90724 A) (u : type686 A) (t : type226 _90724 A) : (term4589 _90724 A _37170 u t) = (term4590 _90724 A _37170 u t).
Proof. exact (MK_COMB (@lem3529935 _90724 A _37170 u) (@lem3529936 _90724 A t)). Qed.
Lemma lem3529938 {_90724 A : Type'} (_37170 : type235 _90724 A) (u : type686 A) (t : type226 _90724 A) : (term4590 _90724 A _37170 u t) = (term4577 _90724 A _37170 u t).
Proof. exact (eq_refl (term4590 _90724 A _37170 u t)). Qed.
Lemma lem3529939 {_90724 A : Type'} (_37170 : type235 _90724 A) (u : type686 A) (t : type226 _90724 A) : (term4589 _90724 A _37170 u t) = (term4577 _90724 A _37170 u t).
Proof. exact (TRANS (@lem3529937 _90724 A _37170 u t) (@lem3529938 _90724 A _37170 u t)). Qed.
Lemma lem3529940 {_90724 A : Type'} (_37170 : type235 _90724 A) (u : type686 A) : (term4591 _90724 A _37170 u) = (term4579 _90724 A _37170 u).
Proof. exact (fun_ext (fun t : type226 _90724 A => @lem3529939 _90724 A _37170 u t)). Qed.
Lemma lem3529941 {_90724 A : Type'} : (@ex (((A -> Prop) -> _90724) -> (((A -> Prop) -> Prop) -> Prop) -> (A -> Prop) -> Prop)) = (@ex (((A -> Prop) -> _90724) -> (((A -> Prop) -> Prop) -> Prop) -> (A -> Prop) -> Prop)).
Proof. exact (eq_refl (@ex (((A -> Prop) -> _90724) -> (((A -> Prop) -> Prop) -> Prop) -> (A -> Prop) -> Prop))). Qed.
Lemma lem3529942 {_90724 A : Type'} (_37170 : type235 _90724 A) (u : type686 A) : (term4592 _90724 A _37170 u) = (term4580 _90724 A _37170 u).
Proof. exact (MK_COMB (@lem3529941 _90724 A) (@lem3529940 _90724 A _37170 u)). Qed.
Lemma lem3529943 {_90724 A : Type'} (_37170 : type235 _90724 A) : (term4593 _90724 A _37170) = (term4581 _90724 A _37170).
Proof. exact (fun_ext (fun u : type686 A => @lem3529942 _90724 A _37170 u)). Qed.
Lemma lem3529944 {A : Type'} : (@all ((A -> Prop) -> Prop)) = (@all ((A -> Prop) -> Prop)).
Proof. exact (eq_refl (@all ((A -> Prop) -> Prop))). Qed.
Lemma lem3529945 {_90724 A : Type'} (_37170 : type235 _90724 A) : (term4585 _90724 A _37170) = (term4582 _90724 A _37170).
Proof. exact (MK_COMB (@lem3529944 A) (@lem3529943 _90724 A _37170)). Qed.
Lemma lem3529946 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem3529947 {_90724 A : Type'} (_37170 : type235 _90724 A) : (term4594 _90724 A _37170) = (term4595 _90724 A _37170).
Proof. exact (MK_COMB (@lem3529946) (@lem3529945 _90724 A _37170)). Qed.
Lemma lem3529948 {_90724 A : Type'} (_37170 : type235 _90724 A) (u : type686 A) : (term4588 _90724 A _37170 u) = (term4579 _90724 A _37170 u).
Proof. exact (eq_refl (term4588 _90724 A _37170 u)). Qed.
Lemma lem3529949 {_90724 A : Type'} (t : type233 _90724 A) (u : type686 A) : (t u) = (t u).
Proof. exact (eq_refl (t u)). Qed.
Lemma lem3529950 {_90724 A : Type'} (_37170 : type235 _90724 A) (t : type233 _90724 A) (u : type686 A) : (term4596 _90724 A _37170 t u) = (term4597 _90724 A _37170 t u).
Proof. exact (MK_COMB (@lem3529948 _90724 A _37170 u) (@lem3529949 _90724 A t u)). Qed.
Lemma lem3529951 {_90724 A : Type'} (_37170 : type235 _90724 A) (t : type233 _90724 A) (u : type686 A) : (term4597 _90724 A _37170 t u) = (term4598 _90724 A _37170 t u).
Proof. exact (eq_refl (term4597 _90724 A _37170 t u)). Qed.
Lemma lem3529952 {_90724 A : Type'} (_37170 : type235 _90724 A) (t : type233 _90724 A) (u : type686 A) : (term4596 _90724 A _37170 t u) = (term4598 _90724 A _37170 t u).
Proof. exact (TRANS (@lem3529950 _90724 A _37170 t u) (@lem3529951 _90724 A _37170 t u)). Qed.
Lemma lem3529953 {_90724 A : Type'} (_37170 : type235 _90724 A) (t : type233 _90724 A) : (term4599 _90724 A _37170 t) = (term4600 _90724 A _37170 t).
Proof. exact (fun_ext (fun u : type686 A => @lem3529952 _90724 A _37170 t u)). Qed.
Lemma lem3529954 {A : Type'} : (@all ((A -> Prop) -> Prop)) = (@all ((A -> Prop) -> Prop)).
Proof. exact (eq_refl (@all ((A -> Prop) -> Prop))). Qed.
Lemma lem3529955 {_90724 A : Type'} (_37170 : type235 _90724 A) (t : type233 _90724 A) : (term4601 _90724 A _37170 t) = (term4602 _90724 A _37170 t).
Proof. exact (MK_COMB (@lem3529954 A) (@lem3529953 _90724 A _37170 t)). Qed.
Lemma lem3529956 {_90724 A : Type'} (_37170 : type235 _90724 A) : (term4603 _90724 A _37170) = (term4604 _90724 A _37170).
Proof. exact (fun_ext (fun t : type233 _90724 A => @lem3529955 _90724 A _37170 t)). Qed.
Lemma lem3529957 {_90724 A : Type'} : (@ex (((A -> Prop) -> Prop) -> ((A -> Prop) -> _90724) -> (((A -> Prop) -> Prop) -> Prop) -> (A -> Prop) -> Prop)) = (@ex (((A -> Prop) -> Prop) -> ((A -> Prop) -> _90724) -> (((A -> Prop) -> Prop) -> Prop) -> (A -> Prop) -> Prop)).
Proof. exact (eq_refl (@ex (((A -> Prop) -> Prop) -> ((A -> Prop) -> _90724) -> (((A -> Prop) -> Prop) -> Prop) -> (A -> Prop) -> Prop))). Qed.
Lemma lem3529958 {_90724 A : Type'} (_37170 : type235 _90724 A) : (term4586 _90724 A _37170) = (term4605 _90724 A _37170).
Proof. exact (MK_COMB (@lem3529957 _90724 A) (@lem3529956 _90724 A _37170)). Qed.
Lemma lem3529959 {_90724 A : Type'} (_37170 : type235 _90724 A) : ((term4585 _90724 A _37170) = (term4586 _90724 A _37170)) = ((term4582 _90724 A _37170) = (term4605 _90724 A _37170)).
Proof. exact (MK_COMB (@lem3529947 _90724 A _37170) (@lem3529958 _90724 A _37170)). Qed.
Lemma lem3529960 {_90724 A : Type'} (_37170 : type235 _90724 A) : (term4582 _90724 A _37170) = (term4605 _90724 A _37170).
Proof. exact (EQ_MP (@lem3529959 _90724 A _37170) (@lem3529934 _90724 A _37170)). Qed.
Lemma lem3529962 {_90724 A : Type'} (_37170 : type235 _90724 A) : (term4497 _90724 A _37170) = (term4605 _90724 A _37170).
Proof. exact (TRANS (@lem3529930 _90724 A _37170) (@lem3529960 _90724 A _37170)). Qed.
Lemma lem3529963 {_90724 A : Type'} (_37170 : type235 _90724 A) : (term2636 _90724 A _37170) = (term4605 _90724 A _37170).
Proof. exact (TRANS (@lem3529705 _90724 A _37170) (@lem3529962 _90724 A _37170)). Qed.
Lemma lem3529964 {_90724 A : Type'} (_37170 : type235 _90724 A) (h1 : term2636 _90724 A _37170) : term4605 _90724 A _37170.
Proof. exact (EQ_MP (@lem3529963 _90724 A _37170) (@lem3520027 _90724 A _37170 h1)). Qed.
Lemma lem3529967 {A : Type'} (g : type180 A) : (term4466 A g) = (g = (@EMPTY ((A -> Prop) -> Prop))).
Proof. exact (@lem16933 (g = (@EMPTY ((A -> Prop) -> Prop)))). Qed.
Lemma lem3529975 {A B : Type'} (_37171 : type171 A B) (u : type686 A) (f : type678 A B) (t : type686 A) : (term4606 A B _37171 u f t) = (term4607 A B _37171 u f t).
Proof. exact (@lem17045 (@SUBSET (A -> Prop) t u) (term2753 A B _37171 u f t)). Qed.
Lemma lem3529977 {A : Type'} (t : type686 A) (g : type180 A) : (term4469 A t g) = (term4469 A t g).
Proof. exact (eq_refl (term4469 A t g)). Qed.
Lemma lem3529978 {A B : Type'} (g : type180 A) (_37171 : type171 A B) (u : type686 A) (f : type678 A B) (t : type686 A) : (term4608 A B g _37171 u f t) = (term4609 A B g _37171 u f t).
Proof. exact (MK_COMB (@lem3529977 A t g) (@lem3529975 A B _37171 u f t)). Qed.
Lemma lem3529979 {A B : Type'} (g : type180 A) (_37171 : type171 A B) (u : type686 A) (f : type678 A B) (t : type686 A) : (term4610 A B g _37171 u f t) = (term4608 A B g _37171 u f t).
Proof. exact (@lem17362 (@IN ((A -> Prop) -> Prop) t g) (term2754 A B _37171 u f t)). Qed.
Lemma lem3529980 {A B : Type'} (g : type180 A) (_37171 : type171 A B) (u : type686 A) (f : type678 A B) (t : type686 A) : (term4610 A B g _37171 u f t) = (term4609 A B g _37171 u f t).
Proof. exact (TRANS (@lem3529979 A B g _37171 u f t) (@lem3529978 A B g _37171 u f t)). Qed.
Lemma lem3529981 {A : Type'} (P : type180 A) : (term4473 A P) = (term4474 A P).
Proof. exact (@lem18392 (type686 A) P). Qed.
Lemma lem3529982 {A B : Type'} (g : type180 A) (_37171 : type171 A B) (u : type686 A) (f : type678 A B) : (term4611 A B g _37171 u f) = (term4612 A B g _37171 u f).
Proof. exact (@lem3529981 A (term2756 A B g _37171 u f)). Qed.
Lemma lem3529983 {A B : Type'} (g : type180 A) (_37171 : type171 A B) (u : type686 A) (f : type678 A B) (t : type686 A) : (term4613 A B g _37171 u f t) = (term2755 A B g _37171 u f t).
Proof. exact (eq_refl (term4613 A B g _37171 u f t)). Qed.
Lemma lem3529984 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem3529985 {A B : Type'} (g : type180 A) (_37171 : type171 A B) (u : type686 A) (f : type678 A B) (t : type686 A) : (term4614 A B g _37171 u f t) = (term4610 A B g _37171 u f t).
Proof. exact (MK_COMB (@lem3529984) (@lem3529983 A B g _37171 u f t)). Qed.
Lemma lem3529986 {A B : Type'} (g : type180 A) (_37171 : type171 A B) (u : type686 A) (f : type678 A B) (t : type686 A) : (term4614 A B g _37171 u f t) = (term4609 A B g _37171 u f t).
Proof. exact (TRANS (@lem3529985 A B g _37171 u f t) (@lem3529980 A B g _37171 u f t)). Qed.
Lemma lem3529987 {A B : Type'} (g : type180 A) (_37171 : type171 A B) (u : type686 A) (f : type678 A B) : (term4615 A B g _37171 u f) = (term4616 A B g _37171 u f).
Proof. exact (fun_ext (fun t : type686 A => @lem3529986 A B g _37171 u f t)). Qed.
Lemma lem3529988 {A : Type'} : (@ex ((A -> Prop) -> Prop)) = (@ex ((A -> Prop) -> Prop)).
Proof. exact (eq_refl (@ex ((A -> Prop) -> Prop))). Qed.
Lemma lem3529989 {A B : Type'} (g : type180 A) (_37171 : type171 A B) (u : type686 A) (f : type678 A B) : (term4612 A B g _37171 u f) = (term4617 A B g _37171 u f).
Proof. exact (MK_COMB (@lem3529988 A) (@lem3529987 A B g _37171 u f)). Qed.
Lemma lem3529990 {A B : Type'} (g : type180 A) (_37171 : type171 A B) (u : type686 A) (f : type678 A B) : (term4611 A B g _37171 u f) = (term4617 A B g _37171 u f).
Proof. exact (TRANS (@lem3529982 A B g _37171 u f) (@lem3529989 A B g _37171 u f)). Qed.
Lemma lem3529991 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem3529992 {A : Type'} (g : type180 A) : (term4482 A g) = (term4483 A g).
Proof. exact (MK_COMB (@lem3529991) (@lem3529967 A g)). Qed.
Lemma lem3529993 {A B : Type'} (g : type180 A) (_37171 : type171 A B) (u : type686 A) (f : type678 A B) : (term4618 A B g _37171 u f) = (term4619 A B g _37171 u f).
Proof. exact (MK_COMB (@lem3529992 A g) (@lem3529990 A B g _37171 u f)). Qed.
Lemma lem3529994 {A B : Type'} (g : type180 A) (_37171 : type171 A B) (u : type686 A) (f : type678 A B) : (term4620 A B g _37171 u f) = (term4618 A B g _37171 u f).
Proof. exact (@lem17045 (term4487 A g) (term2757 A B g _37171 u f)). Qed.
Lemma lem3529995 {A B : Type'} (g : type180 A) (_37171 : type171 A B) (u : type686 A) (f : type678 A B) : (term4620 A B g _37171 u f) = (term4619 A B g _37171 u f).
Proof. exact (TRANS (@lem3529994 A B g _37171 u f) (@lem3529993 A B g _37171 u f)). Qed.
Lemma lem3529996 {A B : Type'} (f : type678 A B) (g : type180 A) : ((term2011 A B f g) = (term2012 A B f g)) = ((term2011 A B f g) = (term2012 A B f g)).
Proof. exact (eq_refl ((term2011 A B f g) = (term2012 A B f g))). Qed.
Lemma lem3529997 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem3529998 {A B : Type'} (g : type180 A) (_37171 : type171 A B) (u : type686 A) (f : type678 A B) : (term4621 A B g _37171 u f) = (term4622 A B g _37171 u f).
Proof. exact (MK_COMB (@lem3529997) (@lem3529995 A B g _37171 u f)). Qed.
Lemma lem3529999 {A B : Type'} (_37171 : type171 A B) (u : type686 A) (f : type678 A B) (g : type180 A) : (term4623 A B _37171 u f g) = (term4624 A B _37171 u f g).
Proof. exact (MK_COMB (@lem3529998 A B g _37171 u f) (@lem3529996 A B f g)). Qed.
Lemma lem3530000 {A B : Type'} (_37171 : type171 A B) (u : type686 A) (f : type678 A B) (g : type180 A) : (term2760 A B _37171 u f g) = (term4623 A B _37171 u f g).
Proof. exact (@lem17265 (term2758 A B g _37171 u f) ((term2011 A B f g) = (term2012 A B f g))). Qed.
Lemma lem3530001 {A B : Type'} (_37171 : type171 A B) (u : type686 A) (f : type678 A B) (g : type180 A) : (term2760 A B _37171 u f g) = (term4624 A B _37171 u f g).
Proof. exact (TRANS (@lem3530000 A B _37171 u f g) (@lem3529999 A B _37171 u f g)). Qed.
Lemma lem3530002 {A B : Type'} (_37171 : type171 A B) (u : type686 A) (f : type678 A B) : (term2761 A B _37171 u f) = (term4625 A B _37171 u f).
Proof. exact (fun_ext (fun g : type180 A => @lem3530001 A B _37171 u f g)). Qed.
Lemma lem3530003 {A : Type'} : (@all (((A -> Prop) -> Prop) -> Prop)) = (@all (((A -> Prop) -> Prop) -> Prop)).
Proof. exact (eq_refl (@all (((A -> Prop) -> Prop) -> Prop))). Qed.
Lemma lem3530004 {A B : Type'} (_37171 : type171 A B) (u : type686 A) (f : type678 A B) : (term2762 A B _37171 u f) = (term4626 A B _37171 u f).
Proof. exact (MK_COMB (@lem3530003 A) (@lem3530002 A B _37171 u f)). Qed.
Lemma lem3530005 {A B : Type'} (_37171 : type171 A B) (u : type686 A) : (term2763 A B _37171 u) = (term4627 A B _37171 u).
Proof. exact (fun_ext (fun f : type678 A B => @lem3530004 A B _37171 u f)). Qed.
Lemma lem3530006 {A B : Type'} : (@all ((A -> Prop) -> B -> Prop)) = (@all ((A -> Prop) -> B -> Prop)).
Proof. exact (eq_refl (@all ((A -> Prop) -> B -> Prop))). Qed.
Lemma lem3530007 {A B : Type'} (_37171 : type171 A B) (u : type686 A) : (term2764 A B _37171 u) = (term4628 A B _37171 u).
Proof. exact (MK_COMB (@lem3530006 A B) (@lem3530005 A B _37171 u)). Qed.
Lemma lem3530008 {A B : Type'} (_37171 : type171 A B) : (term2765 A B _37171) = (term4629 A B _37171).
Proof. exact (fun_ext (fun u : type686 A => @lem3530007 A B _37171 u)). Qed.
Lemma lem3530009 {A : Type'} : (@all ((A -> Prop) -> Prop)) = (@all ((A -> Prop) -> Prop)).
Proof. exact (eq_refl (@all ((A -> Prop) -> Prop))). Qed.
Lemma lem3530010 {A B : Type'} (_37171 : type171 A B) : (term2766 A B _37171) = (term4630 A B _37171).
Proof. exact (MK_COMB (@lem3530009 A) (@lem3530008 A B _37171)). Qed.
Lemma lem3530117 {A : Type'} (P : Prop) (Q : A -> Prop) : (term434 A P Q) = (term435 A P Q).
Proof. exact (EQ_MP (@lem18911 A P Q) (@lem18910 A P Q)). Qed.
Lemma lem3530118 {A : Type'} (P : Prop) (Q : type180 A) : (term4498 A P Q) = (term4499 A P Q).
Proof. exact (@lem3530117 (type686 A) P Q). Qed.
Lemma lem3530119 {A B : Type'} (g : type180 A) (_37171 : type171 A B) (u : type686 A) (f : type678 A B) : (term4631 A B g _37171 u f) = (term4632 A B g _37171 u f).
Proof. exact (@lem3530118 A (g = (@EMPTY ((A -> Prop) -> Prop))) (term4616 A B g _37171 u f)). Qed.
Lemma lem3530120 {A B : Type'} (g : type180 A) (_37171 : type171 A B) (u : type686 A) (f : type678 A B) (t : type686 A) : (term4633 A B g _37171 u f t) = (term4609 A B g _37171 u f t).
Proof. exact (eq_refl (term4633 A B g _37171 u f t)). Qed.
Lemma lem3530121 {A B : Type'} (g : type180 A) (_37171 : type171 A B) (u : type686 A) (f : type678 A B) : (term4634 A B g _37171 u f) = (term4616 A B g _37171 u f).
Proof. exact (fun_ext (fun t : type686 A => @lem3530120 A B g _37171 u f t)). Qed.
Lemma lem3530122 {A : Type'} : (@ex ((A -> Prop) -> Prop)) = (@ex ((A -> Prop) -> Prop)).
Proof. exact (eq_refl (@ex ((A -> Prop) -> Prop))). Qed.
Lemma lem3530123 {A B : Type'} (g : type180 A) (_37171 : type171 A B) (u : type686 A) (f : type678 A B) : (term4635 A B g _37171 u f) = (term4617 A B g _37171 u f).
Proof. exact (MK_COMB (@lem3530122 A) (@lem3530121 A B g _37171 u f)). Qed.
Lemma lem3530124 {A : Type'} (g : type180 A) : (term4483 A g) = (term4483 A g).
Proof. exact (eq_refl (term4483 A g)). Qed.
Lemma lem3530125 {A B : Type'} (g : type180 A) (_37171 : type171 A B) (u : type686 A) (f : type678 A B) : (term4631 A B g _37171 u f) = (term4619 A B g _37171 u f).
Proof. exact (MK_COMB (@lem3530124 A g) (@lem3530123 A B g _37171 u f)). Qed.
Lemma lem3530126 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem3530127 {A B : Type'} (g : type180 A) (_37171 : type171 A B) (u : type686 A) (f : type678 A B) : (term4636 A B g _37171 u f) = (term4637 A B g _37171 u f).
Proof. exact (MK_COMB (@lem3530126) (@lem3530125 A B g _37171 u f)). Qed.
Lemma lem3530128 {A B : Type'} (g : type180 A) (_37171 : type171 A B) (u : type686 A) (f : type678 A B) (t : type686 A) : (term4633 A B g _37171 u f t) = (term4609 A B g _37171 u f t).
Proof. exact (eq_refl (term4633 A B g _37171 u f t)). Qed.
Lemma lem3530129 {A : Type'} (g : type180 A) : (term4483 A g) = (term4483 A g).
Proof. exact (eq_refl (term4483 A g)). Qed.
Lemma lem3530130 {A B : Type'} (g : type180 A) (_37171 : type171 A B) (u : type686 A) (f : type678 A B) (t : type686 A) : (term4638 A B g _37171 u f t) = (term4639 A B g _37171 u f t).
Proof. exact (MK_COMB (@lem3530129 A g) (@lem3530128 A B g _37171 u f t)). Qed.
Lemma lem3530131 {A B : Type'} (g : type180 A) (_37171 : type171 A B) (u : type686 A) (f : type678 A B) : (term4640 A B g _37171 u f) = (term4641 A B g _37171 u f).
Proof. exact (fun_ext (fun t : type686 A => @lem3530130 A B g _37171 u f t)). Qed.
Lemma lem3530132 {A : Type'} : (@ex ((A -> Prop) -> Prop)) = (@ex ((A -> Prop) -> Prop)).
Proof. exact (eq_refl (@ex ((A -> Prop) -> Prop))). Qed.
Lemma lem3530133 {A B : Type'} (g : type180 A) (_37171 : type171 A B) (u : type686 A) (f : type678 A B) : (term4632 A B g _37171 u f) = (term4642 A B g _37171 u f).
Proof. exact (MK_COMB (@lem3530132 A) (@lem3530131 A B g _37171 u f)). Qed.
Lemma lem3530134 {A B : Type'} (g : type180 A) (_37171 : type171 A B) (u : type686 A) (f : type678 A B) : ((term4631 A B g _37171 u f) = (term4632 A B g _37171 u f)) = ((term4619 A B g _37171 u f) = (term4642 A B g _37171 u f)).
Proof. exact (MK_COMB (@lem3530127 A B g _37171 u f) (@lem3530133 A B g _37171 u f)). Qed.
Lemma lem3530135 {A B : Type'} (g : type180 A) (_37171 : type171 A B) (u : type686 A) (f : type678 A B) : (term4619 A B g _37171 u f) = (term4642 A B g _37171 u f).
Proof. exact (EQ_MP (@lem3530134 A B g _37171 u f) (@lem3530119 A B g _37171 u f)). Qed.
Lemma lem3530136 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem3530137 {A B : Type'} (g : type180 A) (_37171 : type171 A B) (u : type686 A) (f : type678 A B) : (term4622 A B g _37171 u f) = (term4643 A B g _37171 u f).
Proof. exact (MK_COMB (@lem3530136) (@lem3530135 A B g _37171 u f)). Qed.
Lemma lem3530138 {A B : Type'} (f : type678 A B) (g : type180 A) : ((term2011 A B f g) = (term2012 A B f g)) = ((term2011 A B f g) = (term2012 A B f g)).
Proof. exact (eq_refl ((term2011 A B f g) = (term2012 A B f g))). Qed.
Lemma lem3530139 {A B : Type'} (_37171 : type171 A B) (u : type686 A) (f : type678 A B) (g : type180 A) : (term4624 A B _37171 u f g) = (term4644 A B _37171 u f g).
Proof. exact (MK_COMB (@lem3530137 A B g _37171 u f) (@lem3530138 A B f g)). Qed.
Lemma lem3530141 {A : Type'} (P : A -> Prop) (Q : Prop) : (term550 A P Q) = (term551 A P Q).
Proof. exact (EQ_MP (@lem18905 A P Q) (@lem18904 A P Q)). Qed.
Lemma lem3530142 {A : Type'} (P : type180 A) (Q : Prop) : (term4514 A P Q) = (term4515 A P Q).
Proof. exact (@lem3530141 (type686 A) P Q). Qed.
Lemma lem3530143 {A B : Type'} (_37171 : type171 A B) (u : type686 A) (f : type678 A B) (g : type180 A) : (term4645 A B _37171 u f g) = (term4646 A B _37171 u f g).
Proof. exact (@lem3530142 A (term4641 A B g _37171 u f) ((term2011 A B f g) = (term2012 A B f g))). Qed.
Lemma lem3530144 {A B : Type'} (g : type180 A) (_37171 : type171 A B) (u : type686 A) (f : type678 A B) (t : type686 A) : (term4647 A B g _37171 u f t) = (term4639 A B g _37171 u f t).
Proof. exact (eq_refl (term4647 A B g _37171 u f t)). Qed.
Lemma lem3530145 {A B : Type'} (g : type180 A) (_37171 : type171 A B) (u : type686 A) (f : type678 A B) : (term4648 A B g _37171 u f) = (term4641 A B g _37171 u f).
Proof. exact (fun_ext (fun t : type686 A => @lem3530144 A B g _37171 u f t)). Qed.
Lemma lem3530146 {A : Type'} : (@ex ((A -> Prop) -> Prop)) = (@ex ((A -> Prop) -> Prop)).
Proof. exact (eq_refl (@ex ((A -> Prop) -> Prop))). Qed.
Lemma lem3530147 {A B : Type'} (g : type180 A) (_37171 : type171 A B) (u : type686 A) (f : type678 A B) : (term4649 A B g _37171 u f) = (term4642 A B g _37171 u f).
Proof. exact (MK_COMB (@lem3530146 A) (@lem3530145 A B g _37171 u f)). Qed.
Lemma lem3530148 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem3530149 {A B : Type'} (g : type180 A) (_37171 : type171 A B) (u : type686 A) (f : type678 A B) : (term4650 A B g _37171 u f) = (term4643 A B g _37171 u f).
Proof. exact (MK_COMB (@lem3530148) (@lem3530147 A B g _37171 u f)). Qed.
Lemma lem3530150 {A B : Type'} (f : type678 A B) (g : type180 A) : ((term2011 A B f g) = (term2012 A B f g)) = ((term2011 A B f g) = (term2012 A B f g)).
Proof. exact (eq_refl ((term2011 A B f g) = (term2012 A B f g))). Qed.
Lemma lem3530151 {A B : Type'} (_37171 : type171 A B) (u : type686 A) (f : type678 A B) (g : type180 A) : (term4645 A B _37171 u f g) = (term4644 A B _37171 u f g).
Proof. exact (MK_COMB (@lem3530149 A B g _37171 u f) (@lem3530150 A B f g)). Qed.
Lemma lem3530152 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem3530153 {A B : Type'} (_37171 : type171 A B) (u : type686 A) (f : type678 A B) (g : type180 A) : (term4651 A B _37171 u f g) = (term4652 A B _37171 u f g).
Proof. exact (MK_COMB (@lem3530152) (@lem3530151 A B _37171 u f g)). Qed.
Lemma lem3530154 {A B : Type'} (g : type180 A) (_37171 : type171 A B) (u : type686 A) (f : type678 A B) (t : type686 A) : (term4647 A B g _37171 u f t) = (term4639 A B g _37171 u f t).
Proof. exact (eq_refl (term4647 A B g _37171 u f t)). Qed.
Lemma lem3530155 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem3530156 {A B : Type'} (g : type180 A) (_37171 : type171 A B) (u : type686 A) (f : type678 A B) (t : type686 A) : (term4653 A B g _37171 u f t) = (term4654 A B g _37171 u f t).
Proof. exact (MK_COMB (@lem3530155) (@lem3530154 A B g _37171 u f t)). Qed.
Lemma lem3530157 {A B : Type'} (f : type678 A B) (g : type180 A) : ((term2011 A B f g) = (term2012 A B f g)) = ((term2011 A B f g) = (term2012 A B f g)).
Proof. exact (eq_refl ((term2011 A B f g) = (term2012 A B f g))). Qed.
Lemma lem3530158 {A B : Type'} (_37171 : type171 A B) (u : type686 A) (t : type686 A) (f : type678 A B) (g : type180 A) : (term4655 A B _37171 u t f g) = (term4656 A B _37171 u t f g).
Proof. exact (MK_COMB (@lem3530156 A B g _37171 u f t) (@lem3530157 A B f g)). Qed.
Lemma lem3530159 {A B : Type'} (_37171 : type171 A B) (u : type686 A) (f : type678 A B) (g : type180 A) : (term4657 A B _37171 u f g) = (term4658 A B _37171 u f g).
Proof. exact (fun_ext (fun t : type686 A => @lem3530158 A B _37171 u t f g)). Qed.
Lemma lem3530160 {A : Type'} : (@ex ((A -> Prop) -> Prop)) = (@ex ((A -> Prop) -> Prop)).
Proof. exact (eq_refl (@ex ((A -> Prop) -> Prop))). Qed.
Lemma lem3530161 {A B : Type'} (_37171 : type171 A B) (u : type686 A) (f : type678 A B) (g : type180 A) : (term4646 A B _37171 u f g) = (term4659 A B _37171 u f g).
Proof. exact (MK_COMB (@lem3530160 A) (@lem3530159 A B _37171 u f g)). Qed.
Lemma lem3530162 {A B : Type'} (_37171 : type171 A B) (u : type686 A) (f : type678 A B) (g : type180 A) : ((term4645 A B _37171 u f g) = (term4646 A B _37171 u f g)) = ((term4644 A B _37171 u f g) = (term4659 A B _37171 u f g)).
Proof. exact (MK_COMB (@lem3530153 A B _37171 u f g) (@lem3530161 A B _37171 u f g)). Qed.
Lemma lem3530163 {A B : Type'} (_37171 : type171 A B) (u : type686 A) (f : type678 A B) (g : type180 A) : (term4644 A B _37171 u f g) = (term4659 A B _37171 u f g).
Proof. exact (EQ_MP (@lem3530162 A B _37171 u f g) (@lem3530143 A B _37171 u f g)). Qed.
Lemma lem3530164 {A B : Type'} (_37171 : type171 A B) (u : type686 A) (f : type678 A B) (g : type180 A) : (term4624 A B _37171 u f g) = (term4659 A B _37171 u f g).
Proof. exact (TRANS (@lem3530139 A B _37171 u f g) (@lem3530163 A B _37171 u f g)). Qed.
Lemma lem3530165 {A B : Type'} (_37171 : type171 A B) (u : type686 A) (f : type678 A B) : (term4625 A B _37171 u f) = (term4660 A B _37171 u f).
Proof. exact (fun_ext (fun g : type180 A => @lem3530164 A B _37171 u f g)). Qed.
Lemma lem3530166 {A : Type'} : (@all (((A -> Prop) -> Prop) -> Prop)) = (@all (((A -> Prop) -> Prop) -> Prop)).
Proof. exact (eq_refl (@all (((A -> Prop) -> Prop) -> Prop))). Qed.
Lemma lem3530167 {A B : Type'} (_37171 : type171 A B) (u : type686 A) (f : type678 A B) : (term4626 A B _37171 u f) = (term4661 A B _37171 u f).
Proof. exact (MK_COMB (@lem3530166 A) (@lem3530165 A B _37171 u f)). Qed.
Lemma lem3530169 {A B : Type'} (P : type1413 A B) : (term453 A B P) = (term454 A B P).
Proof. exact (EQ_MP (@lem18899 A B P) (@lem18898 A B P)). Qed.
Lemma lem3530170 {A : Type'} (P : type75 A) : (term4533 A P) = (term4534 A P).
Proof. exact (@lem3530169 (type180 A) (type686 A) P). Qed.
Lemma lem3530171 {A B : Type'} (_37171 : type171 A B) (u : type686 A) (f : type678 A B) : (term4662 A B _37171 u f) = (term4663 A B _37171 u f).
Proof. exact (@lem3530170 A (term4664 A B _37171 u f)). Qed.
Lemma lem3530172 {A B : Type'} (_37171 : type171 A B) (u : type686 A) (f : type678 A B) (g : type180 A) : (term4665 A B _37171 u f g) = (term4658 A B _37171 u f g).
Proof. exact (eq_refl (term4665 A B _37171 u f g)). Qed.
Lemma lem3530173 {A : Type'} (t : type686 A) : t = t.
Proof. exact (eq_refl t). Qed.
Lemma lem3530174 {A B : Type'} (_37171 : type171 A B) (u : type686 A) (f : type678 A B) (g : type180 A) (t : type686 A) : (term4666 A B _37171 u f g t) = (term4667 A B _37171 u f g t).
Proof. exact (MK_COMB (@lem3530172 A B _37171 u f g) (@lem3530173 A t)). Qed.
Lemma lem3530175 {A B : Type'} (_37171 : type171 A B) (u : type686 A) (t : type686 A) (f : type678 A B) (g : type180 A) : (term4667 A B _37171 u f g t) = (term4656 A B _37171 u t f g).
Proof. exact (eq_refl (term4667 A B _37171 u f g t)). Qed.
Lemma lem3530176 {A B : Type'} (_37171 : type171 A B) (u : type686 A) (t : type686 A) (f : type678 A B) (g : type180 A) : (term4666 A B _37171 u f g t) = (term4656 A B _37171 u t f g).
Proof. exact (TRANS (@lem3530174 A B _37171 u f g t) (@lem3530175 A B _37171 u t f g)). Qed.
Lemma lem3530177 {A B : Type'} (_37171 : type171 A B) (u : type686 A) (f : type678 A B) (g : type180 A) : (term4668 A B _37171 u f g) = (term4658 A B _37171 u f g).
Proof. exact (fun_ext (fun t : type686 A => @lem3530176 A B _37171 u t f g)). Qed.
Lemma lem3530178 {A : Type'} : (@ex ((A -> Prop) -> Prop)) = (@ex ((A -> Prop) -> Prop)).
Proof. exact (eq_refl (@ex ((A -> Prop) -> Prop))). Qed.
Lemma lem3530179 {A B : Type'} (_37171 : type171 A B) (u : type686 A) (f : type678 A B) (g : type180 A) : (term4669 A B _37171 u f g) = (term4659 A B _37171 u f g).
Proof. exact (MK_COMB (@lem3530178 A) (@lem3530177 A B _37171 u f g)). Qed.
Lemma lem3530180 {A B : Type'} (_37171 : type171 A B) (u : type686 A) (f : type678 A B) : (term4670 A B _37171 u f) = (term4660 A B _37171 u f).
Proof. exact (fun_ext (fun g : type180 A => @lem3530179 A B _37171 u f g)). Qed.
Lemma lem3530181 {A : Type'} : (@all (((A -> Prop) -> Prop) -> Prop)) = (@all (((A -> Prop) -> Prop) -> Prop)).
Proof. exact (eq_refl (@all (((A -> Prop) -> Prop) -> Prop))). Qed.
Lemma lem3530182 {A B : Type'} (_37171 : type171 A B) (u : type686 A) (f : type678 A B) : (term4662 A B _37171 u f) = (term4661 A B _37171 u f).
Proof. exact (MK_COMB (@lem3530181 A) (@lem3530180 A B _37171 u f)). Qed.
Lemma lem3530183 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem3530184 {A B : Type'} (_37171 : type171 A B) (u : type686 A) (f : type678 A B) : (term4671 A B _37171 u f) = (term4672 A B _37171 u f).
Proof. exact (MK_COMB (@lem3530183) (@lem3530182 A B _37171 u f)). Qed.
Lemma lem3530185 {A B : Type'} (_37171 : type171 A B) (u : type686 A) (f : type678 A B) (g : type180 A) : (term4665 A B _37171 u f g) = (term4658 A B _37171 u f g).
Proof. exact (eq_refl (term4665 A B _37171 u f g)). Qed.
Lemma lem3530186 {A : Type'} (t : type76 A) (g : type180 A) : (t g) = (t g).
Proof. exact (eq_refl (t g)). Qed.
Lemma lem3530187 {A B : Type'} (_37171 : type171 A B) (u : type686 A) (f : type678 A B) (t : type76 A) (g : type180 A) : (term4673 A B _37171 u f t g) = (term4674 A B _37171 u f t g).
Proof. exact (MK_COMB (@lem3530185 A B _37171 u f g) (@lem3530186 A t g)). Qed.
Lemma lem3530188 {A B : Type'} (_37171 : type171 A B) (u : type686 A) (t : type76 A) (f : type678 A B) (g : type180 A) : (term4674 A B _37171 u f t g) = (term4675 A B _37171 u t f g).
Proof. exact (eq_refl (term4674 A B _37171 u f t g)). Qed.
Lemma lem3530189 {A B : Type'} (_37171 : type171 A B) (u : type686 A) (t : type76 A) (f : type678 A B) (g : type180 A) : (term4673 A B _37171 u f t g) = (term4675 A B _37171 u t f g).
Proof. exact (TRANS (@lem3530187 A B _37171 u f t g) (@lem3530188 A B _37171 u t f g)). Qed.
Lemma lem3530190 {A B : Type'} (_37171 : type171 A B) (u : type686 A) (t : type76 A) (f : type678 A B) : (term4676 A B _37171 u f t) = (term4677 A B _37171 u t f).
Proof. exact (fun_ext (fun g : type180 A => @lem3530189 A B _37171 u t f g)). Qed.
Lemma lem3530191 {A : Type'} : (@all (((A -> Prop) -> Prop) -> Prop)) = (@all (((A -> Prop) -> Prop) -> Prop)).
Proof. exact (eq_refl (@all (((A -> Prop) -> Prop) -> Prop))). Qed.
Lemma lem3530192 {A B : Type'} (_37171 : type171 A B) (u : type686 A) (t : type76 A) (f : type678 A B) : (term4678 A B _37171 u f t) = (term4679 A B _37171 u t f).
Proof. exact (MK_COMB (@lem3530191 A) (@lem3530190 A B _37171 u t f)). Qed.
Lemma lem3530193 {A B : Type'} (_37171 : type171 A B) (u : type686 A) (f : type678 A B) : (term4680 A B _37171 u f) = (term4681 A B _37171 u f).
Proof. exact (fun_ext (fun t : type76 A => @lem3530192 A B _37171 u t f)). Qed.
Lemma lem3530194 {A : Type'} : (@ex ((((A -> Prop) -> Prop) -> Prop) -> (A -> Prop) -> Prop)) = (@ex ((((A -> Prop) -> Prop) -> Prop) -> (A -> Prop) -> Prop)).
Proof. exact (eq_refl (@ex ((((A -> Prop) -> Prop) -> Prop) -> (A -> Prop) -> Prop))). Qed.
Lemma lem3530195 {A B : Type'} (_37171 : type171 A B) (u : type686 A) (f : type678 A B) : (term4663 A B _37171 u f) = (term4682 A B _37171 u f).
Proof. exact (MK_COMB (@lem3530194 A) (@lem3530193 A B _37171 u f)). Qed.
Lemma lem3530196 {A B : Type'} (_37171 : type171 A B) (u : type686 A) (f : type678 A B) : ((term4662 A B _37171 u f) = (term4663 A B _37171 u f)) = ((term4661 A B _37171 u f) = (term4682 A B _37171 u f)).
Proof. exact (MK_COMB (@lem3530184 A B _37171 u f) (@lem3530195 A B _37171 u f)). Qed.
Lemma lem3530197 {A B : Type'} (_37171 : type171 A B) (u : type686 A) (f : type678 A B) : (term4661 A B _37171 u f) = (term4682 A B _37171 u f).
Proof. exact (EQ_MP (@lem3530196 A B _37171 u f) (@lem3530171 A B _37171 u f)). Qed.
Lemma lem3530198 {A B : Type'} (_37171 : type171 A B) (u : type686 A) (f : type678 A B) : (term4626 A B _37171 u f) = (term4682 A B _37171 u f).
Proof. exact (TRANS (@lem3530167 A B _37171 u f) (@lem3530197 A B _37171 u f)). Qed.
Lemma lem3530199 {A B : Type'} (_37171 : type171 A B) (u : type686 A) : (term4627 A B _37171 u) = (term4683 A B _37171 u).
Proof. exact (fun_ext (fun f : type678 A B => @lem3530198 A B _37171 u f)). Qed.
Lemma lem3530200 {A B : Type'} : (@all ((A -> Prop) -> B -> Prop)) = (@all ((A -> Prop) -> B -> Prop)).
Proof. exact (eq_refl (@all ((A -> Prop) -> B -> Prop))). Qed.
Lemma lem3530201 {A B : Type'} (_37171 : type171 A B) (u : type686 A) : (term4628 A B _37171 u) = (term4684 A B _37171 u).
Proof. exact (MK_COMB (@lem3530200 A B) (@lem3530199 A B _37171 u)). Qed.
Lemma lem3530203 {A B : Type'} (P : type1413 A B) : (term453 A B P) = (term454 A B P).
Proof. exact (EQ_MP (@lem18899 A B P) (@lem18898 A B P)). Qed.
Lemma lem3530204 {A B : Type'} (P : type152 A B) : (term4685 A B P) = (term4686 A B P).
Proof. exact (@lem3530203 (type678 A B) (type76 A) P). Qed.
Lemma lem3530205 {A B : Type'} (_37171 : type171 A B) (u : type686 A) : (term4687 A B _37171 u) = (term4688 A B _37171 u).
Proof. exact (@lem3530204 A B (term4689 A B _37171 u)). Qed.
Lemma lem3530206 {A B : Type'} (_37171 : type171 A B) (u : type686 A) (f : type678 A B) : (term4690 A B _37171 u f) = (term4681 A B _37171 u f).
Proof. exact (eq_refl (term4690 A B _37171 u f)). Qed.
Lemma lem3530207 {A : Type'} (t : type76 A) : t = t.
Proof. exact (eq_refl t). Qed.
Lemma lem3530208 {A B : Type'} (_37171 : type171 A B) (u : type686 A) (f : type678 A B) (t : type76 A) : (term4691 A B _37171 u f t) = (term4692 A B _37171 u f t).
Proof. exact (MK_COMB (@lem3530206 A B _37171 u f) (@lem3530207 A t)). Qed.
Lemma lem3530209 {A B : Type'} (_37171 : type171 A B) (u : type686 A) (t : type76 A) (f : type678 A B) : (term4692 A B _37171 u f t) = (term4679 A B _37171 u t f).
Proof. exact (eq_refl (term4692 A B _37171 u f t)). Qed.
Lemma lem3530210 {A B : Type'} (_37171 : type171 A B) (u : type686 A) (t : type76 A) (f : type678 A B) : (term4691 A B _37171 u f t) = (term4679 A B _37171 u t f).
Proof. exact (TRANS (@lem3530208 A B _37171 u f t) (@lem3530209 A B _37171 u t f)). Qed.
Lemma lem3530211 {A B : Type'} (_37171 : type171 A B) (u : type686 A) (f : type678 A B) : (term4693 A B _37171 u f) = (term4681 A B _37171 u f).
Proof. exact (fun_ext (fun t : type76 A => @lem3530210 A B _37171 u t f)). Qed.
Lemma lem3530212 {A : Type'} : (@ex ((((A -> Prop) -> Prop) -> Prop) -> (A -> Prop) -> Prop)) = (@ex ((((A -> Prop) -> Prop) -> Prop) -> (A -> Prop) -> Prop)).
Proof. exact (eq_refl (@ex ((((A -> Prop) -> Prop) -> Prop) -> (A -> Prop) -> Prop))). Qed.
Lemma lem3530213 {A B : Type'} (_37171 : type171 A B) (u : type686 A) (f : type678 A B) : (term4694 A B _37171 u f) = (term4682 A B _37171 u f).
Proof. exact (MK_COMB (@lem3530212 A) (@lem3530211 A B _37171 u f)). Qed.
Lemma lem3530214 {A B : Type'} (_37171 : type171 A B) (u : type686 A) : (term4695 A B _37171 u) = (term4683 A B _37171 u).
Proof. exact (fun_ext (fun f : type678 A B => @lem3530213 A B _37171 u f)). Qed.
Lemma lem3530215 {A B : Type'} : (@all ((A -> Prop) -> B -> Prop)) = (@all ((A -> Prop) -> B -> Prop)).
Proof. exact (eq_refl (@all ((A -> Prop) -> B -> Prop))). Qed.
Lemma lem3530216 {A B : Type'} (_37171 : type171 A B) (u : type686 A) : (term4687 A B _37171 u) = (term4684 A B _37171 u).
Proof. exact (MK_COMB (@lem3530215 A B) (@lem3530214 A B _37171 u)). Qed.
Lemma lem3530217 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem3530218 {A B : Type'} (_37171 : type171 A B) (u : type686 A) : (term4696 A B _37171 u) = (term4697 A B _37171 u).
Proof. exact (MK_COMB (@lem3530217) (@lem3530216 A B _37171 u)). Qed.
Lemma lem3530219 {A B : Type'} (_37171 : type171 A B) (u : type686 A) (f : type678 A B) : (term4690 A B _37171 u f) = (term4681 A B _37171 u f).
Proof. exact (eq_refl (term4690 A B _37171 u f)). Qed.
Lemma lem3530220 {A B : Type'} (t : type154 A B) (f : type678 A B) : (t f) = (t f).
Proof. exact (eq_refl (t f)). Qed.
Lemma lem3530221 {A B : Type'} (_37171 : type171 A B) (u : type686 A) (t : type154 A B) (f : type678 A B) : (term4698 A B _37171 u t f) = (term4699 A B _37171 u t f).
Proof. exact (MK_COMB (@lem3530219 A B _37171 u f) (@lem3530220 A B t f)). Qed.
Lemma lem3530222 {A B : Type'} (_37171 : type171 A B) (u : type686 A) (t : type154 A B) (f : type678 A B) : (term4699 A B _37171 u t f) = (term4700 A B _37171 u t f).
Proof. exact (eq_refl (term4699 A B _37171 u t f)). Qed.
Lemma lem3530223 {A B : Type'} (_37171 : type171 A B) (u : type686 A) (t : type154 A B) (f : type678 A B) : (term4698 A B _37171 u t f) = (term4700 A B _37171 u t f).
Proof. exact (TRANS (@lem3530221 A B _37171 u t f) (@lem3530222 A B _37171 u t f)). Qed.
Lemma lem3530224 {A B : Type'} (_37171 : type171 A B) (u : type686 A) (t : type154 A B) : (term4701 A B _37171 u t) = (term4702 A B _37171 u t).
Proof. exact (fun_ext (fun f : type678 A B => @lem3530223 A B _37171 u t f)). Qed.
Lemma lem3530225 {A B : Type'} : (@all ((A -> Prop) -> B -> Prop)) = (@all ((A -> Prop) -> B -> Prop)).
Proof. exact (eq_refl (@all ((A -> Prop) -> B -> Prop))). Qed.
Lemma lem3530226 {A B : Type'} (_37171 : type171 A B) (u : type686 A) (t : type154 A B) : (term4703 A B _37171 u t) = (term4704 A B _37171 u t).
Proof. exact (MK_COMB (@lem3530225 A B) (@lem3530224 A B _37171 u t)). Qed.
Lemma lem3530227 {A B : Type'} (_37171 : type171 A B) (u : type686 A) : (term4705 A B _37171 u) = (term4706 A B _37171 u).
Proof. exact (fun_ext (fun t : type154 A B => @lem3530226 A B _37171 u t)). Qed.
Lemma lem3530228 {A B : Type'} : (@ex (((A -> Prop) -> B -> Prop) -> (((A -> Prop) -> Prop) -> Prop) -> (A -> Prop) -> Prop)) = (@ex (((A -> Prop) -> B -> Prop) -> (((A -> Prop) -> Prop) -> Prop) -> (A -> Prop) -> Prop)).
Proof. exact (eq_refl (@ex (((A -> Prop) -> B -> Prop) -> (((A -> Prop) -> Prop) -> Prop) -> (A -> Prop) -> Prop))). Qed.
Lemma lem3530229 {A B : Type'} (_37171 : type171 A B) (u : type686 A) : (term4688 A B _37171 u) = (term4707 A B _37171 u).
Proof. exact (MK_COMB (@lem3530228 A B) (@lem3530227 A B _37171 u)). Qed.
Lemma lem3530230 {A B : Type'} (_37171 : type171 A B) (u : type686 A) : ((term4687 A B _37171 u) = (term4688 A B _37171 u)) = ((term4684 A B _37171 u) = (term4707 A B _37171 u)).
Proof. exact (MK_COMB (@lem3530218 A B _37171 u) (@lem3530229 A B _37171 u)). Qed.
Lemma lem3530231 {A B : Type'} (_37171 : type171 A B) (u : type686 A) : (term4684 A B _37171 u) = (term4707 A B _37171 u).
Proof. exact (EQ_MP (@lem3530230 A B _37171 u) (@lem3530205 A B _37171 u)). Qed.
Lemma lem3530232 {A B : Type'} (_37171 : type171 A B) (u : type686 A) : (term4628 A B _37171 u) = (term4707 A B _37171 u).
Proof. exact (TRANS (@lem3530201 A B _37171 u) (@lem3530231 A B _37171 u)). Qed.
Lemma lem3530233 {A B : Type'} (_37171 : type171 A B) : (term4629 A B _37171) = (term4708 A B _37171).
Proof. exact (fun_ext (fun u : type686 A => @lem3530232 A B _37171 u)). Qed.
Lemma lem3530234 {A : Type'} : (@all ((A -> Prop) -> Prop)) = (@all ((A -> Prop) -> Prop)).
Proof. exact (eq_refl (@all ((A -> Prop) -> Prop))). Qed.
Lemma lem3530235 {A B : Type'} (_37171 : type171 A B) : (term4630 A B _37171) = (term4709 A B _37171).
Proof. exact (MK_COMB (@lem3530234 A) (@lem3530233 A B _37171)). Qed.
Lemma lem3530237 {A B : Type'} (P : type1413 A B) : (term453 A B P) = (term454 A B P).
Proof. exact (EQ_MP (@lem18899 A B P) (@lem18898 A B P)). Qed.
Lemma lem3530238 {A B : Type'} (P : type166 A B) : (term4710 A B P) = (term4711 A B P).
Proof. exact (@lem3530237 (type686 A) (type154 A B) P). Qed.
Lemma lem3530239 {A B : Type'} (_37171 : type171 A B) : (term4712 A B _37171) = (term4713 A B _37171).
Proof. exact (@lem3530238 A B (term4714 A B _37171)). Qed.
Lemma lem3530240 {A B : Type'} (_37171 : type171 A B) (u : type686 A) : (term4715 A B _37171 u) = (term4706 A B _37171 u).
Proof. exact (eq_refl (term4715 A B _37171 u)). Qed.
Lemma lem3530241 {A B : Type'} (t : type154 A B) : t = t.
Proof. exact (eq_refl t). Qed.
Lemma lem3530242 {A B : Type'} (_37171 : type171 A B) (u : type686 A) (t : type154 A B) : (term4716 A B _37171 u t) = (term4717 A B _37171 u t).
Proof. exact (MK_COMB (@lem3530240 A B _37171 u) (@lem3530241 A B t)). Qed.
Lemma lem3530243 {A B : Type'} (_37171 : type171 A B) (u : type686 A) (t : type154 A B) : (term4717 A B _37171 u t) = (term4704 A B _37171 u t).
Proof. exact (eq_refl (term4717 A B _37171 u t)). Qed.
Lemma lem3530244 {A B : Type'} (_37171 : type171 A B) (u : type686 A) (t : type154 A B) : (term4716 A B _37171 u t) = (term4704 A B _37171 u t).
Proof. exact (TRANS (@lem3530242 A B _37171 u t) (@lem3530243 A B _37171 u t)). Qed.
Lemma lem3530245 {A B : Type'} (_37171 : type171 A B) (u : type686 A) : (term4718 A B _37171 u) = (term4706 A B _37171 u).
Proof. exact (fun_ext (fun t : type154 A B => @lem3530244 A B _37171 u t)). Qed.
Lemma lem3530246 {A B : Type'} : (@ex (((A -> Prop) -> B -> Prop) -> (((A -> Prop) -> Prop) -> Prop) -> (A -> Prop) -> Prop)) = (@ex (((A -> Prop) -> B -> Prop) -> (((A -> Prop) -> Prop) -> Prop) -> (A -> Prop) -> Prop)).
Proof. exact (eq_refl (@ex (((A -> Prop) -> B -> Prop) -> (((A -> Prop) -> Prop) -> Prop) -> (A -> Prop) -> Prop))). Qed.
Lemma lem3530247 {A B : Type'} (_37171 : type171 A B) (u : type686 A) : (term4719 A B _37171 u) = (term4707 A B _37171 u).
Proof. exact (MK_COMB (@lem3530246 A B) (@lem3530245 A B _37171 u)). Qed.
Lemma lem3530248 {A B : Type'} (_37171 : type171 A B) : (term4720 A B _37171) = (term4708 A B _37171).
Proof. exact (fun_ext (fun u : type686 A => @lem3530247 A B _37171 u)). Qed.
Lemma lem3530249 {A : Type'} : (@all ((A -> Prop) -> Prop)) = (@all ((A -> Prop) -> Prop)).
Proof. exact (eq_refl (@all ((A -> Prop) -> Prop))). Qed.
Lemma lem3530250 {A B : Type'} (_37171 : type171 A B) : (term4712 A B _37171) = (term4709 A B _37171).
Proof. exact (MK_COMB (@lem3530249 A) (@lem3530248 A B _37171)). Qed.
Lemma lem3530251 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem3530252 {A B : Type'} (_37171 : type171 A B) : (term4721 A B _37171) = (term4722 A B _37171).
Proof. exact (MK_COMB (@lem3530251) (@lem3530250 A B _37171)). Qed.
Lemma lem3530253 {A B : Type'} (_37171 : type171 A B) (u : type686 A) : (term4715 A B _37171 u) = (term4706 A B _37171 u).
Proof. exact (eq_refl (term4715 A B _37171 u)). Qed.
Lemma lem3530254 {A B : Type'} (t : type169 A B) (u : type686 A) : (t u) = (t u).
Proof. exact (eq_refl (t u)). Qed.
Lemma lem3530255 {A B : Type'} (_37171 : type171 A B) (t : type169 A B) (u : type686 A) : (term4723 A B _37171 t u) = (term4724 A B _37171 t u).
Proof. exact (MK_COMB (@lem3530253 A B _37171 u) (@lem3530254 A B t u)). Qed.
Lemma lem3530256 {A B : Type'} (_37171 : type171 A B) (t : type169 A B) (u : type686 A) : (term4724 A B _37171 t u) = (term4725 A B _37171 t u).
Proof. exact (eq_refl (term4724 A B _37171 t u)). Qed.
Lemma lem3530257 {A B : Type'} (_37171 : type171 A B) (t : type169 A B) (u : type686 A) : (term4723 A B _37171 t u) = (term4725 A B _37171 t u).
Proof. exact (TRANS (@lem3530255 A B _37171 t u) (@lem3530256 A B _37171 t u)). Qed.
Lemma lem3530258 {A B : Type'} (_37171 : type171 A B) (t : type169 A B) : (term4726 A B _37171 t) = (term4727 A B _37171 t).
Proof. exact (fun_ext (fun u : type686 A => @lem3530257 A B _37171 t u)). Qed.
Lemma lem3530259 {A : Type'} : (@all ((A -> Prop) -> Prop)) = (@all ((A -> Prop) -> Prop)).
Proof. exact (eq_refl (@all ((A -> Prop) -> Prop))). Qed.
Lemma lem3530260 {A B : Type'} (_37171 : type171 A B) (t : type169 A B) : (term4728 A B _37171 t) = (term4729 A B _37171 t).
Proof. exact (MK_COMB (@lem3530259 A) (@lem3530258 A B _37171 t)). Qed.
Lemma lem3530261 {A B : Type'} (_37171 : type171 A B) : (term4730 A B _37171) = (term4731 A B _37171).
Proof. exact (fun_ext (fun t : type169 A B => @lem3530260 A B _37171 t)). Qed.
Lemma lem3530262 {A B : Type'} : (@ex (((A -> Prop) -> Prop) -> ((A -> Prop) -> B -> Prop) -> (((A -> Prop) -> Prop) -> Prop) -> (A -> Prop) -> Prop)) = (@ex (((A -> Prop) -> Prop) -> ((A -> Prop) -> B -> Prop) -> (((A -> Prop) -> Prop) -> Prop) -> (A -> Prop) -> Prop)).
Proof. exact (eq_refl (@ex (((A -> Prop) -> Prop) -> ((A -> Prop) -> B -> Prop) -> (((A -> Prop) -> Prop) -> Prop) -> (A -> Prop) -> Prop))). Qed.
Lemma lem3530263 {A B : Type'} (_37171 : type171 A B) : (term4713 A B _37171) = (term4732 A B _37171).
Proof. exact (MK_COMB (@lem3530262 A B) (@lem3530261 A B _37171)). Qed.
Lemma lem3530264 {A B : Type'} (_37171 : type171 A B) : ((term4712 A B _37171) = (term4713 A B _37171)) = ((term4709 A B _37171) = (term4732 A B _37171)).
Proof. exact (MK_COMB (@lem3530252 A B _37171) (@lem3530263 A B _37171)). Qed.
Lemma lem3530265 {A B : Type'} (_37171 : type171 A B) : (term4709 A B _37171) = (term4732 A B _37171).
Proof. exact (EQ_MP (@lem3530264 A B _37171) (@lem3530239 A B _37171)). Qed.
Lemma lem3530267 {A B : Type'} (_37171 : type171 A B) : (term4630 A B _37171) = (term4732 A B _37171).
Proof. exact (TRANS (@lem3530235 A B _37171) (@lem3530265 A B _37171)). Qed.
Lemma lem3530268 {A B : Type'} (_37171 : type171 A B) : (term2766 A B _37171) = (term4732 A B _37171).
Proof. exact (TRANS (@lem3530010 A B _37171) (@lem3530267 A B _37171)). Qed.
Lemma lem3530269 {A B : Type'} (_37171 : type171 A B) (h1 : term2766 A B _37171) : term4732 A B _37171.
Proof. exact (EQ_MP (@lem3530268 A B _37171) (@lem3520028 A B _37171 h1)). Qed.
Lemma lem3530273 {A B : Type'} (_37163 : type627 A B) (t''' : type625 A B) (h1 : term4208 A B _37163 t''') : term4208 A B _37163 t'''.
Proof. exact (h1). Qed.
Lemma lem3530288 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem3530289 {B : Type'} : (@eq (B -> Prop)) = (@eq (B -> Prop)).
Proof. exact (eq_refl (@eq (B -> Prop))). Qed.
Lemma lem3530296 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem3530297 {A : Type'} (f : type178 A) (x : type686 A) : (f x) = (@I (((A -> Prop) -> Prop) -> A -> Prop) f x).
Proof. exact (@lem3530296 (type686 A) (A -> Prop) f x). Qed.
Lemma lem3530299 {A : Type'} (g : type686 A) : (@INTERS A g) = (@I (((A -> Prop) -> Prop) -> A -> Prop) (@INTERS A) g).
Proof. exact (@lem3530297 A (@INTERS A) g). Qed.
Lemma lem3530300 {A B : Type'} (f : A -> B) : (@IMAGE A B f) = (@IMAGE A B f).
Proof. exact (eq_refl (@IMAGE A B f)). Qed.
Lemma lem3530301 {A B : Type'} (f : A -> B) (g : type686 A) : (term49 A B f g) = (term4733 A B f g).
Proof. exact (MK_COMB (@lem3530300 A B f) (@lem3530299 A g)). Qed.
Lemma lem3530303 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem3530304 {A B : Type'} (f : type528 A B) (x : A -> B) : (f x) = (@I ((A -> B) -> (A -> Prop) -> B -> Prop) f x).
Proof. exact (@lem3530303 (A -> B) (type678 A B) f x). Qed.
Lemma lem3530305 {A B : Type'} (f : A -> B) : (@IMAGE A B f) = (@I ((A -> B) -> (A -> Prop) -> B -> Prop) (@IMAGE A B) f).
Proof. exact (@lem3530304 A B (@IMAGE A B) f). Qed.
Lemma lem3530306 {A : Type'} (g : type686 A) : (@I (((A -> Prop) -> Prop) -> A -> Prop) (@INTERS A) g) = (@I (((A -> Prop) -> Prop) -> A -> Prop) (@INTERS A) g).
Proof. exact (eq_refl (@I (((A -> Prop) -> Prop) -> A -> Prop) (@INTERS A) g)). Qed.
Lemma lem3530307 {A B : Type'} (f : A -> B) (g : type686 A) : (term4733 A B f g) = (term4734 A B f g).
Proof. exact (MK_COMB (@lem3530305 A B f) (@lem3530306 A g)). Qed.
Lemma lem3530309 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem3530310 {A B : Type'} (f : type678 A B) (x : A -> Prop) : (f x) = (@I ((A -> Prop) -> B -> Prop) f x).
Proof. exact (@lem3530309 (A -> Prop) (B -> Prop) f x). Qed.
Lemma lem3530311 {A B : Type'} (f : A -> B) (g : type686 A) : (term4734 A B f g) = (term4735 A B f g).
Proof. exact (@lem3530310 A B (@I ((A -> B) -> (A -> Prop) -> B -> Prop) (@IMAGE A B) f) (@I (((A -> Prop) -> Prop) -> A -> Prop) (@INTERS A) g)). Qed.
Lemma lem3530312 {A B : Type'} (f : A -> B) (g : type686 A) : (term4733 A B f g) = (term4735 A B f g).
Proof. exact (TRANS (@lem3530307 A B f g) (@lem3530311 A B f g)). Qed.
Lemma lem3530313 {A B : Type'} (f : A -> B) (g : type686 A) : (term49 A B f g) = (term4735 A B f g).
Proof. exact (TRANS (@lem3530301 A B f g) (@lem3530312 A B f g)). Qed.
Lemma lem3530314 {B : Type'} : (@INTERS B) = (@INTERS B).
Proof. exact (eq_refl (@INTERS B)). Qed.
Lemma lem3530315 {A B : Type'} : (@IMAGE (A -> Prop) (B -> Prop)) = (@IMAGE (A -> Prop) (B -> Prop)).
Proof. exact (eq_refl (@IMAGE (A -> Prop) (B -> Prop))). Qed.
Lemma lem3530320 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem3530321 {A B : Type'} (f : type528 A B) (x : A -> B) : (f x) = (@I ((A -> B) -> (A -> Prop) -> B -> Prop) f x).
Proof. exact (@lem3530320 (A -> B) (type678 A B) f x). Qed.
Lemma lem3530323 {A B : Type'} (f : A -> B) : (@IMAGE A B f) = (@I ((A -> B) -> (A -> Prop) -> B -> Prop) (@IMAGE A B) f).
Proof. exact (@lem3530321 A B (@IMAGE A B) f). Qed.
Lemma lem3530324 {A : Type'} (g : type686 A) : g = g.
Proof. exact (eq_refl g). Qed.
Lemma lem3530325 {A B : Type'} (f : A -> B) : (term4736 A B f) = (term4737 A B f).
Proof. exact (MK_COMB (@lem3530315 A B) (@lem3530323 A B f)). Qed.
Lemma lem3530326 {A B : Type'} (f : A -> B) (g : type686 A) : (term98 A B f g) = (term4738 A B f g).
Proof. exact (MK_COMB (@lem3530325 A B f) (@lem3530324 A g)). Qed.
Lemma lem3530328 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem3530329 {A B : Type'} (f : type157 A B) (x : type678 A B) : (f x) = (@I (((A -> Prop) -> B -> Prop) -> ((A -> Prop) -> Prop) -> (B -> Prop) -> Prop) f x).
Proof. exact (@lem3530328 (type678 A B) (type175 A B) f x). Qed.
Lemma lem3530330 {A B : Type'} (f : A -> B) : (term4737 A B f) = (term4739 A B f).
Proof. exact (@lem3530329 A B (@IMAGE (A -> Prop) (B -> Prop)) (@I ((A -> B) -> (A -> Prop) -> B -> Prop) (@IMAGE A B) f)). Qed.
Lemma lem3530331 {A : Type'} (g : type686 A) : g = g.
Proof. exact (eq_refl g). Qed.
Lemma lem3530332 {A B : Type'} (f : A -> B) (g : type686 A) : (term4738 A B f g) = (term4740 A B f g).
Proof. exact (MK_COMB (@lem3530330 A B f) (@lem3530331 A g)). Qed.
Lemma lem3530334 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem3530335 {A B : Type'} (f : type175 A B) (x : type686 A) : (f x) = (@I (((A -> Prop) -> Prop) -> (B -> Prop) -> Prop) f x).
Proof. exact (@lem3530334 (type686 A) (type686 B) f x). Qed.
Lemma lem3530336 {A B : Type'} (f : A -> B) (g : type686 A) : (term4740 A B f g) = (term4741 A B f g).
Proof. exact (@lem3530335 A B (term4739 A B f) g). Qed.
Lemma lem3530337 {A B : Type'} (f : A -> B) (g : type686 A) : (term4738 A B f g) = (term4741 A B f g).
Proof. exact (TRANS (@lem3530332 A B f g) (@lem3530336 A B f g)). Qed.
Lemma lem3530338 {A B : Type'} (f : A -> B) (g : type686 A) : (term98 A B f g) = (term4741 A B f g).
Proof. exact (TRANS (@lem3530326 A B f g) (@lem3530337 A B f g)). Qed.
Lemma lem3530339 {A B : Type'} (f : A -> B) (g : type686 A) : (term50 A B f g) = (term4742 A B f g).
Proof. exact (MK_COMB (@lem3530314 B) (@lem3530338 A B f g)). Qed.
Lemma lem3530341 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem3530342 {B : Type'} (f : type178 B) (x : type686 B) : (f x) = (@I (((B -> Prop) -> Prop) -> B -> Prop) f x).
Proof. exact (@lem3530341 (type686 B) (B -> Prop) f x). Qed.
Lemma lem3530343 {A B : Type'} (f : A -> B) (g : type686 A) : (term4742 A B f g) = (term4743 A B f g).
Proof. exact (@lem3530342 B (@INTERS B) (term4741 A B f g)). Qed.
Lemma lem3530344 {A B : Type'} (f : A -> B) (g : type686 A) : (term50 A B f g) = (term4743 A B f g).
Proof. exact (TRANS (@lem3530339 A B f g) (@lem3530343 A B f g)). Qed.
Lemma lem3530345 {A B : Type'} (f : A -> B) (g : type686 A) : (term4744 A B f g) = (term4745 A B f g).
Proof. exact (MK_COMB (@lem3530289 B) (@lem3530313 A B f g)). Qed.
Lemma lem3530346 {A B : Type'} (f : A -> B) (g : type686 A) : ((term49 A B f g) = (term50 A B f g)) = ((term4735 A B f g) = (term4743 A B f g)).
Proof. exact (MK_COMB (@lem3530345 A B f g) (@lem3530344 A B f g)). Qed.
Lemma lem3530347 {A B : Type'} (f : A -> B) (g : type686 A) : (term4074 A B f g) = (term4746 A B f g).
Proof. exact (MK_COMB (@lem3530288) (@lem3530346 A B f g)). Qed.
Lemma lem3530348 {A : Type'} : (@SUBSET A) = (@SUBSET A).
Proof. exact (eq_refl (@SUBSET A)). Qed.
Lemma lem3530349 {A : Type'} : (@GSPEC A) = (@GSPEC A).
Proof. exact (eq_refl (@GSPEC A)). Qed.
Lemma lem3530358 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem3530359 {A B : Type'} (f : type627 A B) (x : A -> Prop) : (f x) = (@I ((A -> Prop) -> (A -> B) -> (A -> Prop) -> A -> Prop) f x).
Proof. exact (@lem3530358 (A -> Prop) (type527 A B) f x). Qed.
Lemma lem3530360 {A B : Type'} (_37163 : type627 A B) (u : A -> Prop) : (_37163 u) = (@I ((A -> Prop) -> (A -> B) -> (A -> Prop) -> A -> Prop) _37163 u).
Proof. exact (@lem3530359 A B _37163 u). Qed.
Lemma lem3530361 {A B : Type'} (f : A -> B) : f = f.
Proof. exact (eq_refl f). Qed.
Lemma lem3530362 {A B : Type'} (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) : (_37163 u f) = (@I ((A -> Prop) -> (A -> B) -> (A -> Prop) -> A -> Prop) _37163 u f).
Proof. exact (MK_COMB (@lem3530360 A B _37163 u) (@lem3530361 A B f)). Qed.
Lemma lem3530364 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem3530365 {A B : Type'} (f : type527 A B) (x : A -> B) : (f x) = (@I ((A -> B) -> (A -> Prop) -> A -> Prop) f x).
Proof. exact (@lem3530364 (A -> B) (type672 A) f x). Qed.
Lemma lem3530366 {A B : Type'} (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) : (@I ((A -> Prop) -> (A -> B) -> (A -> Prop) -> A -> Prop) _37163 u f) = (term4747 A B _37163 u f).
Proof. exact (@lem3530365 A B (@I ((A -> Prop) -> (A -> B) -> (A -> Prop) -> A -> Prop) _37163 u) f). Qed.
Lemma lem3530367 {A B : Type'} (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) : (_37163 u f) = (term4747 A B _37163 u f).
Proof. exact (TRANS (@lem3530362 A B _37163 u f) (@lem3530366 A B _37163 u f)). Qed.
Lemma lem3530368 {A : Type'} (t : A -> Prop) : t = t.
Proof. exact (eq_refl t). Qed.
Lemma lem3530369 {A B : Type'} (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) (t : A -> Prop) : (_37163 u f t) = (term4748 A B _37163 u f t).
Proof. exact (MK_COMB (@lem3530367 A B _37163 u f) (@lem3530368 A t)). Qed.
Lemma lem3530371 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem3530372 {A : Type'} (f : type672 A) (x : A -> Prop) : (f x) = (@I ((A -> Prop) -> A -> Prop) f x).
Proof. exact (@lem3530371 (A -> Prop) (A -> Prop) f x). Qed.
Lemma lem3530373 {A B : Type'} (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) (t : A -> Prop) : (term4748 A B _37163 u f t) = (term4749 A B _37163 u f t).
Proof. exact (@lem3530372 A (term4747 A B _37163 u f) t). Qed.
Lemma lem3530375 {A B : Type'} (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) (t : A -> Prop) : (_37163 u f t) = (term4749 A B _37163 u f t).
Proof. exact (TRANS (@lem3530369 A B _37163 u f t) (@lem3530373 A B _37163 u f t)). Qed.
Lemma lem3530376 {A B : Type'} (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) (t : A -> Prop) : (term2077 A B _37163 u f t) = (term4750 A B _37163 u f t).
Proof. exact (MK_COMB (@lem3530349 A) (@lem3530375 A B _37163 u f t)). Qed.
Lemma lem3530378 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem3530379 {A : Type'} (f : type672 A) (x : A -> Prop) : (f x) = (@I ((A -> Prop) -> A -> Prop) f x).
Proof. exact (@lem3530378 (A -> Prop) (A -> Prop) f x). Qed.
Lemma lem3530380 {A B : Type'} (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) (t : A -> Prop) : (term4750 A B _37163 u f t) = (term4751 A B _37163 u f t).
Proof. exact (@lem3530379 A (@GSPEC A) (term4749 A B _37163 u f t)). Qed.
Lemma lem3530381 {A B : Type'} (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) (t : A -> Prop) : (term2077 A B _37163 u f t) = (term4751 A B _37163 u f t).
Proof. exact (TRANS (@lem3530376 A B _37163 u f t) (@lem3530380 A B _37163 u f t)). Qed.
Lemma lem3530382 {A : Type'} (t : A -> Prop) : t = t.
Proof. exact (eq_refl t). Qed.
Lemma lem3530383 {A B : Type'} (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) (t : A -> Prop) : (term2078 A B _37163 u f t) = (term4752 A B _37163 u f t).
Proof. exact (MK_COMB (@lem3530348 A) (@lem3530381 A B _37163 u f t)). Qed.
Lemma lem3530384 {A B : Type'} (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) (t : A -> Prop) : (term2079 A B _37163 u f t) = (term4753 A B _37163 u f t).
Proof. exact (MK_COMB (@lem3530383 A B _37163 u f t) (@lem3530382 A t)). Qed.
Lemma lem3530386 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem3530387 {A : Type'} (f : type639 A) (x : A -> Prop) : (f x) = (@I ((A -> Prop) -> (A -> Prop) -> Prop) f x).
Proof. exact (@lem3530386 (A -> Prop) (type686 A) f x). Qed.
Lemma lem3530388 {A B : Type'} (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) (t : A -> Prop) : (term4752 A B _37163 u f t) = (term4754 A B _37163 u f t).
Proof. exact (@lem3530387 A (@SUBSET A) (term4751 A B _37163 u f t)). Qed.
Lemma lem3530389 {A : Type'} (t : A -> Prop) : t = t.
Proof. exact (eq_refl t). Qed.
Lemma lem3530390 {A B : Type'} (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) (t : A -> Prop) : (term4753 A B _37163 u f t) = (term4755 A B _37163 u f t).
Proof. exact (MK_COMB (@lem3530388 A B _37163 u f t) (@lem3530389 A t)). Qed.
Lemma lem3530392 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem3530393 {A : Type'} (f : type686 A) (x : A -> Prop) : (f x) = (@I ((A -> Prop) -> Prop) f x).
Proof. exact (@lem3530392 (A -> Prop) Prop f x). Qed.
Lemma lem3530394 {A B : Type'} (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) (t : A -> Prop) : (term4755 A B _37163 u f t) = (term4756 A B _37163 u f t).
Proof. exact (@lem3530393 A (term4754 A B _37163 u f t) t). Qed.
Lemma lem3530395 {A B : Type'} (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) (t : A -> Prop) : (term4753 A B _37163 u f t) = (term4756 A B _37163 u f t).
Proof. exact (TRANS (@lem3530390 A B _37163 u f t) (@lem3530394 A B _37163 u f t)). Qed.
Lemma lem3530396 {A B : Type'} (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) (t : A -> Prop) : (term2079 A B _37163 u f t) = (term4756 A B _37163 u f t).
Proof. exact (TRANS (@lem3530384 A B _37163 u f t) (@lem3530395 A B _37163 u f t)). Qed.
Lemma lem3530397 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem3530404 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem3530405 {A : Type'} (f : type599 A) (x : A -> Prop) : (f x) = (@I ((A -> Prop) -> ((A -> Prop) -> Prop) -> Prop) f x).
Proof. exact (@lem3530404 (A -> Prop) (type180 A) f x). Qed.
Lemma lem3530406 {A : Type'} (t : A -> Prop) : (@IN (A -> Prop) t) = (@I ((A -> Prop) -> ((A -> Prop) -> Prop) -> Prop) (@IN (A -> Prop)) t).
Proof. exact (@lem3530405 A (@IN (A -> Prop)) t). Qed.
Lemma lem3530407 {A : Type'} (g : type686 A) : g = g.
Proof. exact (eq_refl g). Qed.
Lemma lem3530408 {A : Type'} (t : A -> Prop) (g : type686 A) : (@IN (A -> Prop) t g) = (@I ((A -> Prop) -> ((A -> Prop) -> Prop) -> Prop) (@IN (A -> Prop)) t g).
Proof. exact (MK_COMB (@lem3530406 A t) (@lem3530407 A g)). Qed.
Lemma lem3530410 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem3530411 {A : Type'} (f : type180 A) (x : type686 A) : (f x) = (@I (((A -> Prop) -> Prop) -> Prop) f x).
Proof. exact (@lem3530410 (type686 A) Prop f x). Qed.
Lemma lem3530412 {A : Type'} (t : A -> Prop) (g : type686 A) : (@I ((A -> Prop) -> ((A -> Prop) -> Prop) -> Prop) (@IN (A -> Prop)) t g) = (term4757 A t g).
Proof. exact (@lem3530411 A (@I ((A -> Prop) -> ((A -> Prop) -> Prop) -> Prop) (@IN (A -> Prop)) t) g). Qed.
Lemma lem3530414 {A : Type'} (t : A -> Prop) (g : type686 A) : (@IN (A -> Prop) t g) = (term4757 A t g).
Proof. exact (TRANS (@lem3530408 A t g) (@lem3530412 A t g)). Qed.
Lemma lem3530415 {A : Type'} (t : A -> Prop) (g : type686 A) : (term115 A t g) = (term4758 A t g).
Proof. exact (MK_COMB (@lem3530397) (@lem3530414 A t g)). Qed.
Lemma lem3530416 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem3530417 {A : Type'} (t : A -> Prop) (g : type686 A) : (term4759 A t g) = (term4760 A t g).
Proof. exact (MK_COMB (@lem3530416) (@lem3530415 A t g)). Qed.
Lemma lem3530418 {A B : Type'} (g : type686 A) (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) (t : A -> Prop) : (term4068 A B g _37163 u f t) = (term4761 A B g _37163 u f t).
Proof. exact (MK_COMB (@lem3530417 A t g) (@lem3530396 A B _37163 u f t)). Qed.
Lemma lem3530419 {A B : Type'} (g : type686 A) (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) : (term4069 A B g _37163 u f) = (term4762 A B g _37163 u f).
Proof. exact (fun_ext (fun t : A -> Prop => @lem3530418 A B g _37163 u f t)). Qed.
Lemma lem3530420 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem3530421 {A B : Type'} (g : type686 A) (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) : (term4070 A B g _37163 u f) = (term4763 A B g _37163 u f).
Proof. exact (MK_COMB (@lem3530420 A) (@lem3530419 A B g _37163 u f)). Qed.
Lemma lem3530428 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem3530429 {A : Type'} (f : type639 A) (x : A -> Prop) : (f x) = (@I ((A -> Prop) -> (A -> Prop) -> Prop) f x).
Proof. exact (@lem3530428 (A -> Prop) (type686 A) f x). Qed.
Lemma lem3530430 {A : Type'} (t : A -> Prop) : (@SUBSET A t) = (@I ((A -> Prop) -> (A -> Prop) -> Prop) (@SUBSET A) t).
Proof. exact (@lem3530429 A (@SUBSET A) t). Qed.
Lemma lem3530431 {A : Type'} (u : A -> Prop) : u = u.
Proof. exact (eq_refl u). Qed.
Lemma lem3530432 {A : Type'} (t : A -> Prop) (u : A -> Prop) : (@SUBSET A t u) = (@I ((A -> Prop) -> (A -> Prop) -> Prop) (@SUBSET A) t u).
Proof. exact (MK_COMB (@lem3530430 A t) (@lem3530431 A u)). Qed.
Lemma lem3530434 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem3530435 {A : Type'} (f : type686 A) (x : A -> Prop) : (f x) = (@I ((A -> Prop) -> Prop) f x).
Proof. exact (@lem3530434 (A -> Prop) Prop f x). Qed.
Lemma lem3530436 {A : Type'} (t : A -> Prop) (u : A -> Prop) : (@I ((A -> Prop) -> (A -> Prop) -> Prop) (@SUBSET A) t u) = (term4764 A t u).
Proof. exact (@lem3530435 A (@I ((A -> Prop) -> (A -> Prop) -> Prop) (@SUBSET A) t) u). Qed.
Lemma lem3530438 {A : Type'} (t : A -> Prop) (u : A -> Prop) : (@SUBSET A t u) = (term4764 A t u).
Proof. exact (TRANS (@lem3530432 A t u) (@lem3530436 A t u)). Qed.
Lemma lem3530439 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem3530446 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem3530447 {A : Type'} (f : type599 A) (x : A -> Prop) : (f x) = (@I ((A -> Prop) -> ((A -> Prop) -> Prop) -> Prop) f x).
Proof. exact (@lem3530446 (A -> Prop) (type180 A) f x). Qed.
Lemma lem3530448 {A : Type'} (t : A -> Prop) : (@IN (A -> Prop) t) = (@I ((A -> Prop) -> ((A -> Prop) -> Prop) -> Prop) (@IN (A -> Prop)) t).
Proof. exact (@lem3530447 A (@IN (A -> Prop)) t). Qed.
Lemma lem3530449 {A : Type'} (g : type686 A) : g = g.
Proof. exact (eq_refl g). Qed.
Lemma lem3530450 {A : Type'} (t : A -> Prop) (g : type686 A) : (@IN (A -> Prop) t g) = (@I ((A -> Prop) -> ((A -> Prop) -> Prop) -> Prop) (@IN (A -> Prop)) t g).
Proof. exact (MK_COMB (@lem3530448 A t) (@lem3530449 A g)). Qed.
Lemma lem3530452 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem3530453 {A : Type'} (f : type180 A) (x : type686 A) : (f x) = (@I (((A -> Prop) -> Prop) -> Prop) f x).
Proof. exact (@lem3530452 (type686 A) Prop f x). Qed.
Lemma lem3530454 {A : Type'} (t : A -> Prop) (g : type686 A) : (@I ((A -> Prop) -> ((A -> Prop) -> Prop) -> Prop) (@IN (A -> Prop)) t g) = (term4757 A t g).
Proof. exact (@lem3530453 A (@I ((A -> Prop) -> ((A -> Prop) -> Prop) -> Prop) (@IN (A -> Prop)) t) g). Qed.
Lemma lem3530456 {A : Type'} (t : A -> Prop) (g : type686 A) : (@IN (A -> Prop) t g) = (term4757 A t g).
Proof. exact (TRANS (@lem3530450 A t g) (@lem3530454 A t g)). Qed.
Lemma lem3530457 {A : Type'} (t : A -> Prop) (g : type686 A) : (term115 A t g) = (term4758 A t g).
Proof. exact (MK_COMB (@lem3530439) (@lem3530456 A t g)). Qed.
Lemma lem3530458 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem3530459 {A : Type'} (t : A -> Prop) (g : type686 A) : (term4759 A t g) = (term4760 A t g).
Proof. exact (MK_COMB (@lem3530458) (@lem3530457 A t g)). Qed.
Lemma lem3530460 {A : Type'} (g : type686 A) (t : A -> Prop) (u : A -> Prop) : (term4065 A g t u) = (term4765 A g t u).
Proof. exact (MK_COMB (@lem3530459 A t g) (@lem3530438 A t u)). Qed.
Lemma lem3530461 {A : Type'} (g : type686 A) (u : A -> Prop) : (term4066 A g u) = (term4766 A g u).
Proof. exact (fun_ext (fun t : A -> Prop => @lem3530460 A g t u)). Qed.
Lemma lem3530462 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem3530463 {A : Type'} (g : type686 A) (u : A -> Prop) : (term4067 A g u) = (term4767 A g u).
Proof. exact (MK_COMB (@lem3530462 A) (@lem3530461 A g u)). Qed.
Lemma lem3530464 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem3530465 {A : Type'} (g : type686 A) (u : A -> Prop) : (term4071 A g u) = (term4768 A g u).
Proof. exact (MK_COMB (@lem3530464) (@lem3530463 A g u)). Qed.
Lemma lem3530466 {A B : Type'} (g : type686 A) (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) : (term4072 A B g _37163 u f) = (term4769 A B g _37163 u f).
Proof. exact (MK_COMB (@lem3530465 A g u) (@lem3530421 A B g _37163 u f)). Qed.
Lemma lem3530475 {A : Type'} (g : type686 A) : (term42 A g) = (term42 A g).
Proof. exact (eq_refl (term42 A g)). Qed.
Lemma lem3530476 {A B : Type'} (g : type686 A) (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) : (term4073 A B g _37163 u f) = (term4770 A B g _37163 u f).
Proof. exact (MK_COMB (@lem3530475 A g) (@lem3530466 A B g _37163 u f)). Qed.
Lemma lem3530477 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem3530478 {A B : Type'} (g : type686 A) (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) : (term4076 A B g _37163 u f) = (term4771 A B g _37163 u f).
Proof. exact (MK_COMB (@lem3530477) (@lem3530476 A B g _37163 u f)). Qed.
Lemma lem3530479 {A B : Type'} (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) (g : type686 A) : (term4078 A B _37163 u f g) = (term4772 A B _37163 u f g).
Proof. exact (MK_COMB (@lem3530478 A B g _37163 u f) (@lem3530347 A B f g)). Qed.
Lemma lem3530480 {A B : Type'} (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) (g : type686 A) (h1 : term2135 A B _37163 u f g) : term4772 A B _37163 u f g.
Proof. exact (EQ_MP (@lem3530479 A B _37163 u f g) (@lem3527524 A B _37163 u f g h1)). Qed.
Lemma lem3531297 {B : Type'} : (@eq (B -> Prop)) = (@eq (B -> Prop)).
Proof. exact (eq_refl (@eq (B -> Prop))). Qed.
Lemma lem3531304 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem3531305 {A : Type'} (f : type178 A) (x : type686 A) : (f x) = (@I (((A -> Prop) -> Prop) -> A -> Prop) f x).
Proof. exact (@lem3531304 (type686 A) (A -> Prop) f x). Qed.
Lemma lem3531307 {A : Type'} (g : type686 A) : (@INTERS A g) = (@I (((A -> Prop) -> Prop) -> A -> Prop) (@INTERS A) g).
Proof. exact (@lem3531305 A (@INTERS A) g). Qed.
Lemma lem3531308 {A B : Type'} (f : A -> B) : (@IMAGE A B f) = (@IMAGE A B f).
Proof. exact (eq_refl (@IMAGE A B f)). Qed.
Lemma lem3531309 {A B : Type'} (f : A -> B) (g : type686 A) : (term49 A B f g) = (term4733 A B f g).
Proof. exact (MK_COMB (@lem3531308 A B f) (@lem3531307 A g)). Qed.
Lemma lem3531311 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem3531312 {A B : Type'} (f : type528 A B) (x : A -> B) : (f x) = (@I ((A -> B) -> (A -> Prop) -> B -> Prop) f x).
Proof. exact (@lem3531311 (A -> B) (type678 A B) f x). Qed.
Lemma lem3531313 {A B : Type'} (f : A -> B) : (@IMAGE A B f) = (@I ((A -> B) -> (A -> Prop) -> B -> Prop) (@IMAGE A B) f).
Proof. exact (@lem3531312 A B (@IMAGE A B) f). Qed.
Lemma lem3531314 {A : Type'} (g : type686 A) : (@I (((A -> Prop) -> Prop) -> A -> Prop) (@INTERS A) g) = (@I (((A -> Prop) -> Prop) -> A -> Prop) (@INTERS A) g).
Proof. exact (eq_refl (@I (((A -> Prop) -> Prop) -> A -> Prop) (@INTERS A) g)). Qed.
Lemma lem3531315 {A B : Type'} (f : A -> B) (g : type686 A) : (term4733 A B f g) = (term4734 A B f g).
Proof. exact (MK_COMB (@lem3531313 A B f) (@lem3531314 A g)). Qed.
Lemma lem3531317 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem3531318 {A B : Type'} (f : type678 A B) (x : A -> Prop) : (f x) = (@I ((A -> Prop) -> B -> Prop) f x).
Proof. exact (@lem3531317 (A -> Prop) (B -> Prop) f x). Qed.
Lemma lem3531319 {A B : Type'} (f : A -> B) (g : type686 A) : (term4734 A B f g) = (term4735 A B f g).
Proof. exact (@lem3531318 A B (@I ((A -> B) -> (A -> Prop) -> B -> Prop) (@IMAGE A B) f) (@I (((A -> Prop) -> Prop) -> A -> Prop) (@INTERS A) g)). Qed.
Lemma lem3531320 {A B : Type'} (f : A -> B) (g : type686 A) : (term4733 A B f g) = (term4735 A B f g).
Proof. exact (TRANS (@lem3531315 A B f g) (@lem3531319 A B f g)). Qed.
Lemma lem3531321 {A B : Type'} (f : A -> B) (g : type686 A) : (term49 A B f g) = (term4735 A B f g).
Proof. exact (TRANS (@lem3531309 A B f g) (@lem3531320 A B f g)). Qed.
Lemma lem3531322 {B : Type'} : (@INTERS B) = (@INTERS B).
Proof. exact (eq_refl (@INTERS B)). Qed.
Lemma lem3531323 {A B : Type'} : (@IMAGE (A -> Prop) (B -> Prop)) = (@IMAGE (A -> Prop) (B -> Prop)).
Proof. exact (eq_refl (@IMAGE (A -> Prop) (B -> Prop))). Qed.
Lemma lem3531328 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem3531329 {A B : Type'} (f : type528 A B) (x : A -> B) : (f x) = (@I ((A -> B) -> (A -> Prop) -> B -> Prop) f x).
Proof. exact (@lem3531328 (A -> B) (type678 A B) f x). Qed.
Lemma lem3531331 {A B : Type'} (f : A -> B) : (@IMAGE A B f) = (@I ((A -> B) -> (A -> Prop) -> B -> Prop) (@IMAGE A B) f).
Proof. exact (@lem3531329 A B (@IMAGE A B) f). Qed.
Lemma lem3531332 {A : Type'} (g : type686 A) : g = g.
Proof. exact (eq_refl g). Qed.
Lemma lem3531333 {A B : Type'} (f : A -> B) : (term4736 A B f) = (term4737 A B f).
Proof. exact (MK_COMB (@lem3531323 A B) (@lem3531331 A B f)). Qed.
Lemma lem3531334 {A B : Type'} (f : A -> B) (g : type686 A) : (term98 A B f g) = (term4738 A B f g).
Proof. exact (MK_COMB (@lem3531333 A B f) (@lem3531332 A g)). Qed.
Lemma lem3531336 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem3531337 {A B : Type'} (f : type157 A B) (x : type678 A B) : (f x) = (@I (((A -> Prop) -> B -> Prop) -> ((A -> Prop) -> Prop) -> (B -> Prop) -> Prop) f x).
Proof. exact (@lem3531336 (type678 A B) (type175 A B) f x). Qed.
Lemma lem3531338 {A B : Type'} (f : A -> B) : (term4737 A B f) = (term4739 A B f).
Proof. exact (@lem3531337 A B (@IMAGE (A -> Prop) (B -> Prop)) (@I ((A -> B) -> (A -> Prop) -> B -> Prop) (@IMAGE A B) f)). Qed.
Lemma lem3531339 {A : Type'} (g : type686 A) : g = g.
Proof. exact (eq_refl g). Qed.
Lemma lem3531340 {A B : Type'} (f : A -> B) (g : type686 A) : (term4738 A B f g) = (term4740 A B f g).
Proof. exact (MK_COMB (@lem3531338 A B f) (@lem3531339 A g)). Qed.
Lemma lem3531342 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem3531343 {A B : Type'} (f : type175 A B) (x : type686 A) : (f x) = (@I (((A -> Prop) -> Prop) -> (B -> Prop) -> Prop) f x).
Proof. exact (@lem3531342 (type686 A) (type686 B) f x). Qed.
Lemma lem3531344 {A B : Type'} (f : A -> B) (g : type686 A) : (term4740 A B f g) = (term4741 A B f g).
Proof. exact (@lem3531343 A B (term4739 A B f) g). Qed.
Lemma lem3531345 {A B : Type'} (f : A -> B) (g : type686 A) : (term4738 A B f g) = (term4741 A B f g).
Proof. exact (TRANS (@lem3531340 A B f g) (@lem3531344 A B f g)). Qed.
Lemma lem3531346 {A B : Type'} (f : A -> B) (g : type686 A) : (term98 A B f g) = (term4741 A B f g).
Proof. exact (TRANS (@lem3531334 A B f g) (@lem3531345 A B f g)). Qed.
Lemma lem3531347 {A B : Type'} (f : A -> B) (g : type686 A) : (term50 A B f g) = (term4742 A B f g).
Proof. exact (MK_COMB (@lem3531322 B) (@lem3531346 A B f g)). Qed.
Lemma lem3531349 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem3531350 {B : Type'} (f : type178 B) (x : type686 B) : (f x) = (@I (((B -> Prop) -> Prop) -> B -> Prop) f x).
Proof. exact (@lem3531349 (type686 B) (B -> Prop) f x). Qed.
Lemma lem3531351 {A B : Type'} (f : A -> B) (g : type686 A) : (term4742 A B f g) = (term4743 A B f g).
Proof. exact (@lem3531350 B (@INTERS B) (term4741 A B f g)). Qed.
Lemma lem3531352 {A B : Type'} (f : A -> B) (g : type686 A) : (term50 A B f g) = (term4743 A B f g).
Proof. exact (TRANS (@lem3531347 A B f g) (@lem3531351 A B f g)). Qed.
Lemma lem3531353 {A B : Type'} (f : A -> B) (g : type686 A) : (term4744 A B f g) = (term4745 A B f g).
Proof. exact (MK_COMB (@lem3531297 B) (@lem3531321 A B f g)). Qed.
Lemma lem3531354 {A B : Type'} (f : A -> B) (g : type686 A) : ((term49 A B f g) = (term50 A B f g)) = ((term4735 A B f g) = (term4743 A B f g)).
Proof. exact (MK_COMB (@lem3531353 A B f g) (@lem3531352 A B f g)). Qed.
Lemma lem3531355 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem3531356 {A : Type'} : (@SUBSET A) = (@SUBSET A).
Proof. exact (eq_refl (@SUBSET A)). Qed.
Lemma lem3531357 {A : Type'} : (@GSPEC A) = (@GSPEC A).
Proof. exact (eq_refl (@GSPEC A)). Qed.
Lemma lem3531369 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem3531370 {A B : Type'} (f : type625 A B) (x : A -> Prop) : (f x) = (@I ((A -> Prop) -> (A -> B) -> ((A -> Prop) -> Prop) -> A -> Prop) f x).
Proof. exact (@lem3531369 (A -> Prop) (type504 A B) f x). Qed.
Lemma lem3531371 {A B : Type'} (t''' : type625 A B) (u : A -> Prop) : (t''' u) = (@I ((A -> Prop) -> (A -> B) -> ((A -> Prop) -> Prop) -> A -> Prop) t''' u).
Proof. exact (@lem3531370 A B t''' u). Qed.
Lemma lem3531372 {A B : Type'} (f : A -> B) : f = f.
Proof. exact (eq_refl f). Qed.
Lemma lem3531373 {A B : Type'} (t''' : type625 A B) (u : A -> Prop) (f : A -> B) : (t''' u f) = (@I ((A -> Prop) -> (A -> B) -> ((A -> Prop) -> Prop) -> A -> Prop) t''' u f).
Proof. exact (MK_COMB (@lem3531371 A B t''' u) (@lem3531372 A B f)). Qed.
Lemma lem3531375 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem3531376 {A B : Type'} (f : type504 A B) (x : A -> B) : (f x) = (@I ((A -> B) -> ((A -> Prop) -> Prop) -> A -> Prop) f x).
Proof. exact (@lem3531375 (A -> B) (type178 A) f x). Qed.
Lemma lem3531377 {A B : Type'} (t''' : type625 A B) (u : A -> Prop) (f : A -> B) : (@I ((A -> Prop) -> (A -> B) -> ((A -> Prop) -> Prop) -> A -> Prop) t''' u f) = (term4773 A B t''' u f).
Proof. exact (@lem3531376 A B (@I ((A -> Prop) -> (A -> B) -> ((A -> Prop) -> Prop) -> A -> Prop) t''' u) f). Qed.
Lemma lem3531378 {A B : Type'} (t''' : type625 A B) (u : A -> Prop) (f : A -> B) : (t''' u f) = (term4773 A B t''' u f).
Proof. exact (TRANS (@lem3531373 A B t''' u f) (@lem3531377 A B t''' u f)). Qed.
Lemma lem3531379 {A : Type'} (g : type686 A) : g = g.
Proof. exact (eq_refl g). Qed.
Lemma lem3531380 {A B : Type'} (t''' : type625 A B) (u : A -> Prop) (f : A -> B) (g : type686 A) : (t''' u f g) = (term4774 A B t''' u f g).
Proof. exact (MK_COMB (@lem3531378 A B t''' u f) (@lem3531379 A g)). Qed.
Lemma lem3531382 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem3531383 {A : Type'} (f : type178 A) (x : type686 A) : (f x) = (@I (((A -> Prop) -> Prop) -> A -> Prop) f x).
Proof. exact (@lem3531382 (type686 A) (A -> Prop) f x). Qed.
Lemma lem3531384 {A B : Type'} (t''' : type625 A B) (u : A -> Prop) (f : A -> B) (g : type686 A) : (term4774 A B t''' u f g) = (term4775 A B t''' u f g).
Proof. exact (@lem3531383 A (term4773 A B t''' u f) g). Qed.
Lemma lem3531386 {A B : Type'} (t''' : type625 A B) (u : A -> Prop) (f : A -> B) (g : type686 A) : (t''' u f g) = (term4775 A B t''' u f g).
Proof. exact (TRANS (@lem3531380 A B t''' u f g) (@lem3531384 A B t''' u f g)). Qed.
Lemma lem3531388 {A B : Type'} (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) : (_37163 u f) = (_37163 u f).
Proof. exact (eq_refl (_37163 u f)). Qed.
Lemma lem3531389 {A B : Type'} (_37163 : type627 A B) (t''' : type625 A B) (u : A -> Prop) (f : A -> B) (g : type686 A) : (term4776 A B _37163 t''' u f g) = (term4777 A B _37163 t''' u f g).
Proof. exact (MK_COMB (@lem3531388 A B _37163 u f) (@lem3531386 A B t''' u f g)). Qed.
Lemma lem3531391 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem3531392 {A B : Type'} (f : type627 A B) (x : A -> Prop) : (f x) = (@I ((A -> Prop) -> (A -> B) -> (A -> Prop) -> A -> Prop) f x).
Proof. exact (@lem3531391 (A -> Prop) (type527 A B) f x). Qed.
Lemma lem3531393 {A B : Type'} (_37163 : type627 A B) (u : A -> Prop) : (_37163 u) = (@I ((A -> Prop) -> (A -> B) -> (A -> Prop) -> A -> Prop) _37163 u).
Proof. exact (@lem3531392 A B _37163 u). Qed.
Lemma lem3531394 {A B : Type'} (f : A -> B) : f = f.
Proof. exact (eq_refl f). Qed.
Lemma lem3531395 {A B : Type'} (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) : (_37163 u f) = (@I ((A -> Prop) -> (A -> B) -> (A -> Prop) -> A -> Prop) _37163 u f).
Proof. exact (MK_COMB (@lem3531393 A B _37163 u) (@lem3531394 A B f)). Qed.
Lemma lem3531397 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem3531398 {A B : Type'} (f : type527 A B) (x : A -> B) : (f x) = (@I ((A -> B) -> (A -> Prop) -> A -> Prop) f x).
Proof. exact (@lem3531397 (A -> B) (type672 A) f x). Qed.
Lemma lem3531399 {A B : Type'} (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) : (@I ((A -> Prop) -> (A -> B) -> (A -> Prop) -> A -> Prop) _37163 u f) = (term4747 A B _37163 u f).
Proof. exact (@lem3531398 A B (@I ((A -> Prop) -> (A -> B) -> (A -> Prop) -> A -> Prop) _37163 u) f). Qed.
Lemma lem3531400 {A B : Type'} (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) : (_37163 u f) = (term4747 A B _37163 u f).
Proof. exact (TRANS (@lem3531395 A B _37163 u f) (@lem3531399 A B _37163 u f)). Qed.
Lemma lem3531401 {A B : Type'} (t''' : type625 A B) (u : A -> Prop) (f : A -> B) (g : type686 A) : (term4775 A B t''' u f g) = (term4775 A B t''' u f g).
Proof. exact (eq_refl (term4775 A B t''' u f g)). Qed.
Lemma lem3531402 {A B : Type'} (_37163 : type627 A B) (t''' : type625 A B) (u : A -> Prop) (f : A -> B) (g : type686 A) : (term4777 A B _37163 t''' u f g) = (term4778 A B _37163 t''' u f g).
Proof. exact (MK_COMB (@lem3531400 A B _37163 u f) (@lem3531401 A B t''' u f g)). Qed.
Lemma lem3531404 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem3531405 {A : Type'} (f : type672 A) (x : A -> Prop) : (f x) = (@I ((A -> Prop) -> A -> Prop) f x).
Proof. exact (@lem3531404 (A -> Prop) (A -> Prop) f x). Qed.
Lemma lem3531406 {A B : Type'} (_37163 : type627 A B) (t''' : type625 A B) (u : A -> Prop) (f : A -> B) (g : type686 A) : (term4778 A B _37163 t''' u f g) = (term4779 A B _37163 t''' u f g).
Proof. exact (@lem3531405 A (term4747 A B _37163 u f) (term4775 A B t''' u f g)). Qed.
Lemma lem3531407 {A B : Type'} (_37163 : type627 A B) (t''' : type625 A B) (u : A -> Prop) (f : A -> B) (g : type686 A) : (term4777 A B _37163 t''' u f g) = (term4779 A B _37163 t''' u f g).
Proof. exact (TRANS (@lem3531402 A B _37163 t''' u f g) (@lem3531406 A B _37163 t''' u f g)). Qed.
Lemma lem3531408 {A B : Type'} (_37163 : type627 A B) (t''' : type625 A B) (u : A -> Prop) (f : A -> B) (g : type686 A) : (term4776 A B _37163 t''' u f g) = (term4779 A B _37163 t''' u f g).
Proof. exact (TRANS (@lem3531389 A B _37163 t''' u f g) (@lem3531407 A B _37163 t''' u f g)). Qed.
Lemma lem3531409 {A B : Type'} (_37163 : type627 A B) (t''' : type625 A B) (u : A -> Prop) (f : A -> B) (g : type686 A) : (term4780 A B _37163 t''' u f g) = (term4781 A B _37163 t''' u f g).
Proof. exact (MK_COMB (@lem3531357 A) (@lem3531408 A B _37163 t''' u f g)). Qed.
Lemma lem3531411 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem3531412 {A : Type'} (f : type672 A) (x : A -> Prop) : (f x) = (@I ((A -> Prop) -> A -> Prop) f x).
Proof. exact (@lem3531411 (A -> Prop) (A -> Prop) f x). Qed.
Lemma lem3531413 {A B : Type'} (_37163 : type627 A B) (t''' : type625 A B) (u : A -> Prop) (f : A -> B) (g : type686 A) : (term4781 A B _37163 t''' u f g) = (term4782 A B _37163 t''' u f g).
Proof. exact (@lem3531412 A (@GSPEC A) (term4779 A B _37163 t''' u f g)). Qed.
Lemma lem3531414 {A B : Type'} (_37163 : type627 A B) (t''' : type625 A B) (u : A -> Prop) (f : A -> B) (g : type686 A) : (term4780 A B _37163 t''' u f g) = (term4782 A B _37163 t''' u f g).
Proof. exact (TRANS (@lem3531409 A B _37163 t''' u f g) (@lem3531413 A B _37163 t''' u f g)). Qed.
Lemma lem3531423 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem3531424 {A B : Type'} (f : type625 A B) (x : A -> Prop) : (f x) = (@I ((A -> Prop) -> (A -> B) -> ((A -> Prop) -> Prop) -> A -> Prop) f x).
Proof. exact (@lem3531423 (A -> Prop) (type504 A B) f x). Qed.
Lemma lem3531425 {A B : Type'} (t''' : type625 A B) (u : A -> Prop) : (t''' u) = (@I ((A -> Prop) -> (A -> B) -> ((A -> Prop) -> Prop) -> A -> Prop) t''' u).
Proof. exact (@lem3531424 A B t''' u). Qed.
Lemma lem3531426 {A B : Type'} (f : A -> B) : f = f.
Proof. exact (eq_refl f). Qed.
Lemma lem3531427 {A B : Type'} (t''' : type625 A B) (u : A -> Prop) (f : A -> B) : (t''' u f) = (@I ((A -> Prop) -> (A -> B) -> ((A -> Prop) -> Prop) -> A -> Prop) t''' u f).
Proof. exact (MK_COMB (@lem3531425 A B t''' u) (@lem3531426 A B f)). Qed.
Lemma lem3531429 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem3531430 {A B : Type'} (f : type504 A B) (x : A -> B) : (f x) = (@I ((A -> B) -> ((A -> Prop) -> Prop) -> A -> Prop) f x).
Proof. exact (@lem3531429 (A -> B) (type178 A) f x). Qed.
Lemma lem3531431 {A B : Type'} (t''' : type625 A B) (u : A -> Prop) (f : A -> B) : (@I ((A -> Prop) -> (A -> B) -> ((A -> Prop) -> Prop) -> A -> Prop) t''' u f) = (term4773 A B t''' u f).
Proof. exact (@lem3531430 A B (@I ((A -> Prop) -> (A -> B) -> ((A -> Prop) -> Prop) -> A -> Prop) t''' u) f). Qed.
Lemma lem3531432 {A B : Type'} (t''' : type625 A B) (u : A -> Prop) (f : A -> B) : (t''' u f) = (term4773 A B t''' u f).
Proof. exact (TRANS (@lem3531427 A B t''' u f) (@lem3531431 A B t''' u f)). Qed.
Lemma lem3531433 {A : Type'} (g : type686 A) : g = g.
Proof. exact (eq_refl g). Qed.
Lemma lem3531434 {A B : Type'} (t''' : type625 A B) (u : A -> Prop) (f : A -> B) (g : type686 A) : (t''' u f g) = (term4774 A B t''' u f g).
Proof. exact (MK_COMB (@lem3531432 A B t''' u f) (@lem3531433 A g)). Qed.
Lemma lem3531436 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem3531437 {A : Type'} (f : type178 A) (x : type686 A) : (f x) = (@I (((A -> Prop) -> Prop) -> A -> Prop) f x).
Proof. exact (@lem3531436 (type686 A) (A -> Prop) f x). Qed.
Lemma lem3531438 {A B : Type'} (t''' : type625 A B) (u : A -> Prop) (f : A -> B) (g : type686 A) : (term4774 A B t''' u f g) = (term4775 A B t''' u f g).
Proof. exact (@lem3531437 A (term4773 A B t''' u f) g). Qed.
Lemma lem3531440 {A B : Type'} (t''' : type625 A B) (u : A -> Prop) (f : A -> B) (g : type686 A) : (t''' u f g) = (term4775 A B t''' u f g).
Proof. exact (TRANS (@lem3531434 A B t''' u f g) (@lem3531438 A B t''' u f g)). Qed.
Lemma lem3531441 {A B : Type'} (_37163 : type627 A B) (t''' : type625 A B) (u : A -> Prop) (f : A -> B) (g : type686 A) : (term4783 A B _37163 t''' u f g) = (term4784 A B _37163 t''' u f g).
Proof. exact (MK_COMB (@lem3531356 A) (@lem3531414 A B _37163 t''' u f g)). Qed.
Lemma lem3531442 {A B : Type'} (_37163 : type627 A B) (t''' : type625 A B) (u : A -> Prop) (f : A -> B) (g : type686 A) : (term4785 A B _37163 t''' u f g) = (term4786 A B _37163 t''' u f g).
Proof. exact (MK_COMB (@lem3531441 A B _37163 t''' u f g) (@lem3531440 A B t''' u f g)). Qed.
Lemma lem3531444 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem3531445 {A : Type'} (f : type639 A) (x : A -> Prop) : (f x) = (@I ((A -> Prop) -> (A -> Prop) -> Prop) f x).
Proof. exact (@lem3531444 (A -> Prop) (type686 A) f x). Qed.
Lemma lem3531446 {A B : Type'} (_37163 : type627 A B) (t''' : type625 A B) (u : A -> Prop) (f : A -> B) (g : type686 A) : (term4784 A B _37163 t''' u f g) = (term4787 A B _37163 t''' u f g).
Proof. exact (@lem3531445 A (@SUBSET A) (term4782 A B _37163 t''' u f g)). Qed.
Lemma lem3531447 {A B : Type'} (t''' : type625 A B) (u : A -> Prop) (f : A -> B) (g : type686 A) : (term4775 A B t''' u f g) = (term4775 A B t''' u f g).
Proof. exact (eq_refl (term4775 A B t''' u f g)). Qed.
Lemma lem3531448 {A B : Type'} (_37163 : type627 A B) (t''' : type625 A B) (u : A -> Prop) (f : A -> B) (g : type686 A) : (term4786 A B _37163 t''' u f g) = (term4788 A B _37163 t''' u f g).
Proof. exact (MK_COMB (@lem3531446 A B _37163 t''' u f g) (@lem3531447 A B t''' u f g)). Qed.
Lemma lem3531450 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem3531451 {A : Type'} (f : type686 A) (x : A -> Prop) : (f x) = (@I ((A -> Prop) -> Prop) f x).
Proof. exact (@lem3531450 (A -> Prop) Prop f x). Qed.
Lemma lem3531452 {A B : Type'} (_37163 : type627 A B) (t''' : type625 A B) (u : A -> Prop) (f : A -> B) (g : type686 A) : (term4788 A B _37163 t''' u f g) = (term4789 A B _37163 t''' u f g).
Proof. exact (@lem3531451 A (term4787 A B _37163 t''' u f g) (term4775 A B t''' u f g)). Qed.
Lemma lem3531453 {A B : Type'} (_37163 : type627 A B) (t''' : type625 A B) (u : A -> Prop) (f : A -> B) (g : type686 A) : (term4786 A B _37163 t''' u f g) = (term4789 A B _37163 t''' u f g).
Proof. exact (TRANS (@lem3531448 A B _37163 t''' u f g) (@lem3531452 A B _37163 t''' u f g)). Qed.
Lemma lem3531454 {A B : Type'} (_37163 : type627 A B) (t''' : type625 A B) (u : A -> Prop) (f : A -> B) (g : type686 A) : (term4785 A B _37163 t''' u f g) = (term4789 A B _37163 t''' u f g).
Proof. exact (TRANS (@lem3531442 A B _37163 t''' u f g) (@lem3531453 A B _37163 t''' u f g)). Qed.
Lemma lem3531455 {A B : Type'} (_37163 : type627 A B) (t''' : type625 A B) (u : A -> Prop) (f : A -> B) (g : type686 A) : (term4790 A B _37163 t''' u f g) = (term4791 A B _37163 t''' u f g).
Proof. exact (MK_COMB (@lem3531355) (@lem3531454 A B _37163 t''' u f g)). Qed.
Lemma lem3531456 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem3531457 {A : Type'} : (@SUBSET A) = (@SUBSET A).
Proof. exact (eq_refl (@SUBSET A)). Qed.
Lemma lem3531466 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem3531467 {A B : Type'} (f : type625 A B) (x : A -> Prop) : (f x) = (@I ((A -> Prop) -> (A -> B) -> ((A -> Prop) -> Prop) -> A -> Prop) f x).
Proof. exact (@lem3531466 (A -> Prop) (type504 A B) f x). Qed.
Lemma lem3531468 {A B : Type'} (t''' : type625 A B) (u : A -> Prop) : (t''' u) = (@I ((A -> Prop) -> (A -> B) -> ((A -> Prop) -> Prop) -> A -> Prop) t''' u).
Proof. exact (@lem3531467 A B t''' u). Qed.
Lemma lem3531469 {A B : Type'} (f : A -> B) : f = f.
Proof. exact (eq_refl f). Qed.
Lemma lem3531470 {A B : Type'} (t''' : type625 A B) (u : A -> Prop) (f : A -> B) : (t''' u f) = (@I ((A -> Prop) -> (A -> B) -> ((A -> Prop) -> Prop) -> A -> Prop) t''' u f).
Proof. exact (MK_COMB (@lem3531468 A B t''' u) (@lem3531469 A B f)). Qed.
Lemma lem3531472 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem3531473 {A B : Type'} (f : type504 A B) (x : A -> B) : (f x) = (@I ((A -> B) -> ((A -> Prop) -> Prop) -> A -> Prop) f x).
Proof. exact (@lem3531472 (A -> B) (type178 A) f x). Qed.
Lemma lem3531474 {A B : Type'} (t''' : type625 A B) (u : A -> Prop) (f : A -> B) : (@I ((A -> Prop) -> (A -> B) -> ((A -> Prop) -> Prop) -> A -> Prop) t''' u f) = (term4773 A B t''' u f).
Proof. exact (@lem3531473 A B (@I ((A -> Prop) -> (A -> B) -> ((A -> Prop) -> Prop) -> A -> Prop) t''' u) f). Qed.
Lemma lem3531475 {A B : Type'} (t''' : type625 A B) (u : A -> Prop) (f : A -> B) : (t''' u f) = (term4773 A B t''' u f).
Proof. exact (TRANS (@lem3531470 A B t''' u f) (@lem3531474 A B t''' u f)). Qed.
Lemma lem3531476 {A : Type'} (g : type686 A) : g = g.
Proof. exact (eq_refl g). Qed.
Lemma lem3531477 {A B : Type'} (t''' : type625 A B) (u : A -> Prop) (f : A -> B) (g : type686 A) : (t''' u f g) = (term4774 A B t''' u f g).
Proof. exact (MK_COMB (@lem3531475 A B t''' u f) (@lem3531476 A g)). Qed.
Lemma lem3531479 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem3531480 {A : Type'} (f : type178 A) (x : type686 A) : (f x) = (@I (((A -> Prop) -> Prop) -> A -> Prop) f x).
Proof. exact (@lem3531479 (type686 A) (A -> Prop) f x). Qed.
Lemma lem3531481 {A B : Type'} (t''' : type625 A B) (u : A -> Prop) (f : A -> B) (g : type686 A) : (term4774 A B t''' u f g) = (term4775 A B t''' u f g).
Proof. exact (@lem3531480 A (term4773 A B t''' u f) g). Qed.
Lemma lem3531483 {A B : Type'} (t''' : type625 A B) (u : A -> Prop) (f : A -> B) (g : type686 A) : (t''' u f g) = (term4775 A B t''' u f g).
Proof. exact (TRANS (@lem3531477 A B t''' u f g) (@lem3531481 A B t''' u f g)). Qed.
Lemma lem3531484 {A : Type'} (u : A -> Prop) : u = u.
Proof. exact (eq_refl u). Qed.
Lemma lem3531485 {A B : Type'} (t''' : type625 A B) (u : A -> Prop) (f : A -> B) (g : type686 A) : (term4792 A B t''' u f g) = (term4793 A B t''' u f g).
Proof. exact (MK_COMB (@lem3531457 A) (@lem3531483 A B t''' u f g)). Qed.
Lemma lem3531486 {A B : Type'} (t''' : type625 A B) (f : A -> B) (g : type686 A) (u : A -> Prop) : (term4794 A B t''' f g u) = (term4795 A B t''' f g u).
Proof. exact (MK_COMB (@lem3531485 A B t''' u f g) (@lem3531484 A u)). Qed.
Lemma lem3531488 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem3531489 {A : Type'} (f : type639 A) (x : A -> Prop) : (f x) = (@I ((A -> Prop) -> (A -> Prop) -> Prop) f x).
Proof. exact (@lem3531488 (A -> Prop) (type686 A) f x). Qed.
Lemma lem3531490 {A B : Type'} (t''' : type625 A B) (u : A -> Prop) (f : A -> B) (g : type686 A) : (term4793 A B t''' u f g) = (term4796 A B t''' u f g).
Proof. exact (@lem3531489 A (@SUBSET A) (term4775 A B t''' u f g)). Qed.
Lemma lem3531491 {A : Type'} (u : A -> Prop) : u = u.
Proof. exact (eq_refl u). Qed.
Lemma lem3531492 {A B : Type'} (t''' : type625 A B) (f : A -> B) (g : type686 A) (u : A -> Prop) : (term4795 A B t''' f g u) = (term4797 A B t''' f g u).
Proof. exact (MK_COMB (@lem3531490 A B t''' u f g) (@lem3531491 A u)). Qed.
Lemma lem3531494 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem3531495 {A : Type'} (f : type686 A) (x : A -> Prop) : (f x) = (@I ((A -> Prop) -> Prop) f x).
Proof. exact (@lem3531494 (A -> Prop) Prop f x). Qed.
Lemma lem3531496 {A B : Type'} (t''' : type625 A B) (f : A -> B) (g : type686 A) (u : A -> Prop) : (term4797 A B t''' f g u) = (term4798 A B t''' f g u).
Proof. exact (@lem3531495 A (term4796 A B t''' u f g) u). Qed.
Lemma lem3531497 {A B : Type'} (t''' : type625 A B) (f : A -> B) (g : type686 A) (u : A -> Prop) : (term4795 A B t''' f g u) = (term4798 A B t''' f g u).
Proof. exact (TRANS (@lem3531492 A B t''' f g u) (@lem3531496 A B t''' f g u)). Qed.
Lemma lem3531498 {A B : Type'} (t''' : type625 A B) (f : A -> B) (g : type686 A) (u : A -> Prop) : (term4794 A B t''' f g u) = (term4798 A B t''' f g u).
Proof. exact (TRANS (@lem3531486 A B t''' f g u) (@lem3531497 A B t''' f g u)). Qed.
Lemma lem3531499 {A B : Type'} (t''' : type625 A B) (f : A -> B) (g : type686 A) (u : A -> Prop) : (term4799 A B t''' f g u) = (term4800 A B t''' f g u).
Proof. exact (MK_COMB (@lem3531456) (@lem3531498 A B t''' f g u)). Qed.
Lemma lem3531500 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem3531501 {A B : Type'} (t''' : type625 A B) (f : A -> B) (g : type686 A) (u : A -> Prop) : (term4801 A B t''' f g u) = (term4802 A B t''' f g u).
Proof. exact (MK_COMB (@lem3531500) (@lem3531499 A B t''' f g u)). Qed.
Lemma lem3531502 {A B : Type'} (_37163 : type627 A B) (t''' : type625 A B) (u : A -> Prop) (f : A -> B) (g : type686 A) : (term4803 A B _37163 t''' u f g) = (term4804 A B _37163 t''' u f g).
Proof. exact (MK_COMB (@lem3531501 A B t''' f g u) (@lem3531455 A B _37163 t''' u f g)). Qed.
Lemma lem3531503 {A : Type'} : (@IN (A -> Prop)) = (@IN (A -> Prop)).
Proof. exact (eq_refl (@IN (A -> Prop))). Qed.
Lemma lem3531512 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem3531513 {A B : Type'} (f : type625 A B) (x : A -> Prop) : (f x) = (@I ((A -> Prop) -> (A -> B) -> ((A -> Prop) -> Prop) -> A -> Prop) f x).
Proof. exact (@lem3531512 (A -> Prop) (type504 A B) f x). Qed.
Lemma lem3531514 {A B : Type'} (t''' : type625 A B) (u : A -> Prop) : (t''' u) = (@I ((A -> Prop) -> (A -> B) -> ((A -> Prop) -> Prop) -> A -> Prop) t''' u).
Proof. exact (@lem3531513 A B t''' u). Qed.
Lemma lem3531515 {A B : Type'} (f : A -> B) : f = f.
Proof. exact (eq_refl f). Qed.
Lemma lem3531516 {A B : Type'} (t''' : type625 A B) (u : A -> Prop) (f : A -> B) : (t''' u f) = (@I ((A -> Prop) -> (A -> B) -> ((A -> Prop) -> Prop) -> A -> Prop) t''' u f).
Proof. exact (MK_COMB (@lem3531514 A B t''' u) (@lem3531515 A B f)). Qed.
Lemma lem3531518 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem3531519 {A B : Type'} (f : type504 A B) (x : A -> B) : (f x) = (@I ((A -> B) -> ((A -> Prop) -> Prop) -> A -> Prop) f x).
Proof. exact (@lem3531518 (A -> B) (type178 A) f x). Qed.
Lemma lem3531520 {A B : Type'} (t''' : type625 A B) (u : A -> Prop) (f : A -> B) : (@I ((A -> Prop) -> (A -> B) -> ((A -> Prop) -> Prop) -> A -> Prop) t''' u f) = (term4773 A B t''' u f).
Proof. exact (@lem3531519 A B (@I ((A -> Prop) -> (A -> B) -> ((A -> Prop) -> Prop) -> A -> Prop) t''' u) f). Qed.
Lemma lem3531521 {A B : Type'} (t''' : type625 A B) (u : A -> Prop) (f : A -> B) : (t''' u f) = (term4773 A B t''' u f).
Proof. exact (TRANS (@lem3531516 A B t''' u f) (@lem3531520 A B t''' u f)). Qed.
Lemma lem3531522 {A : Type'} (g : type686 A) : g = g.
Proof. exact (eq_refl g). Qed.
Lemma lem3531523 {A B : Type'} (t''' : type625 A B) (u : A -> Prop) (f : A -> B) (g : type686 A) : (t''' u f g) = (term4774 A B t''' u f g).
Proof. exact (MK_COMB (@lem3531521 A B t''' u f) (@lem3531522 A g)). Qed.
Lemma lem3531525 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem3531526 {A : Type'} (f : type178 A) (x : type686 A) : (f x) = (@I (((A -> Prop) -> Prop) -> A -> Prop) f x).
Proof. exact (@lem3531525 (type686 A) (A -> Prop) f x). Qed.
Lemma lem3531527 {A B : Type'} (t''' : type625 A B) (u : A -> Prop) (f : A -> B) (g : type686 A) : (term4774 A B t''' u f g) = (term4775 A B t''' u f g).
Proof. exact (@lem3531526 A (term4773 A B t''' u f) g). Qed.
Lemma lem3531529 {A B : Type'} (t''' : type625 A B) (u : A -> Prop) (f : A -> B) (g : type686 A) : (t''' u f g) = (term4775 A B t''' u f g).
Proof. exact (TRANS (@lem3531523 A B t''' u f g) (@lem3531527 A B t''' u f g)). Qed.
Lemma lem3531530 {A : Type'} (g : type686 A) : g = g.
Proof. exact (eq_refl g). Qed.
Lemma lem3531531 {A B : Type'} (t''' : type625 A B) (u : A -> Prop) (f : A -> B) (g : type686 A) : (term4805 A B t''' u f g) = (term4806 A B t''' u f g).
Proof. exact (MK_COMB (@lem3531503 A) (@lem3531529 A B t''' u f g)). Qed.
Lemma lem3531532 {A B : Type'} (t''' : type625 A B) (u : A -> Prop) (f : A -> B) (g : type686 A) : (term4807 A B t''' u f g) = (term4808 A B t''' u f g).
Proof. exact (MK_COMB (@lem3531531 A B t''' u f g) (@lem3531530 A g)). Qed.
Lemma lem3531534 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem3531535 {A : Type'} (f : type599 A) (x : A -> Prop) : (f x) = (@I ((A -> Prop) -> ((A -> Prop) -> Prop) -> Prop) f x).
Proof. exact (@lem3531534 (A -> Prop) (type180 A) f x). Qed.
Lemma lem3531536 {A B : Type'} (t''' : type625 A B) (u : A -> Prop) (f : A -> B) (g : type686 A) : (term4806 A B t''' u f g) = (term4809 A B t''' u f g).
Proof. exact (@lem3531535 A (@IN (A -> Prop)) (term4775 A B t''' u f g)). Qed.
Lemma lem3531537 {A : Type'} (g : type686 A) : g = g.
Proof. exact (eq_refl g). Qed.
Lemma lem3531538 {A B : Type'} (t''' : type625 A B) (u : A -> Prop) (f : A -> B) (g : type686 A) : (term4808 A B t''' u f g) = (term4810 A B t''' u f g).
Proof. exact (MK_COMB (@lem3531536 A B t''' u f g) (@lem3531537 A g)). Qed.
Lemma lem3531540 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem3531541 {A : Type'} (f : type180 A) (x : type686 A) : (f x) = (@I (((A -> Prop) -> Prop) -> Prop) f x).
Proof. exact (@lem3531540 (type686 A) Prop f x). Qed.
Lemma lem3531542 {A B : Type'} (t''' : type625 A B) (u : A -> Prop) (f : A -> B) (g : type686 A) : (term4810 A B t''' u f g) = (term4811 A B t''' u f g).
Proof. exact (@lem3531541 A (term4809 A B t''' u f g) g). Qed.
Lemma lem3531543 {A B : Type'} (t''' : type625 A B) (u : A -> Prop) (f : A -> B) (g : type686 A) : (term4808 A B t''' u f g) = (term4811 A B t''' u f g).
Proof. exact (TRANS (@lem3531538 A B t''' u f g) (@lem3531542 A B t''' u f g)). Qed.
Lemma lem3531544 {A B : Type'} (t''' : type625 A B) (u : A -> Prop) (f : A -> B) (g : type686 A) : (term4807 A B t''' u f g) = (term4811 A B t''' u f g).
Proof. exact (TRANS (@lem3531532 A B t''' u f g) (@lem3531543 A B t''' u f g)). Qed.
Lemma lem3531545 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem3531546 {A B : Type'} (t''' : type625 A B) (u : A -> Prop) (f : A -> B) (g : type686 A) : (term4812 A B t''' u f g) = (term4813 A B t''' u f g).
Proof. exact (MK_COMB (@lem3531545) (@lem3531544 A B t''' u f g)). Qed.
Lemma lem3531547 {A B : Type'} (_37163 : type627 A B) (t''' : type625 A B) (u : A -> Prop) (f : A -> B) (g : type686 A) : (term4814 A B _37163 t''' u f g) = (term4815 A B _37163 t''' u f g).
Proof. exact (MK_COMB (@lem3531546 A B t''' u f g) (@lem3531502 A B _37163 t''' u f g)). Qed.
Lemma lem3531554 {A : Type'} (g : type686 A) : (term4094 A g) = (term4094 A g).
Proof. exact (eq_refl (term4094 A g)). Qed.
Lemma lem3531555 {A B : Type'} (_37163 : type627 A B) (t''' : type625 A B) (u : A -> Prop) (f : A -> B) (g : type686 A) : (term4816 A B _37163 t''' u f g) = (term4817 A B _37163 t''' u f g).
Proof. exact (MK_COMB (@lem3531554 A g) (@lem3531547 A B _37163 t''' u f g)). Qed.
Lemma lem3531556 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem3531557 {A B : Type'} (_37163 : type627 A B) (t''' : type625 A B) (u : A -> Prop) (f : A -> B) (g : type686 A) : (term4818 A B _37163 t''' u f g) = (term4819 A B _37163 t''' u f g).
Proof. exact (MK_COMB (@lem3531556) (@lem3531555 A B _37163 t''' u f g)). Qed.
Lemma lem3531558 {A B : Type'} (_37163 : type627 A B) (t''' : type625 A B) (u : A -> Prop) (f : A -> B) (g : type686 A) : (term4820 A B _37163 t''' u f g) = (term4821 A B _37163 t''' u f g).
Proof. exact (MK_COMB (@lem3531557 A B _37163 t''' u f g) (@lem3531354 A B f g)). Qed.
Lemma lem3531559 {A B : Type'} (_37163 : type627 A B) (t''' : type625 A B) (u : A -> Prop) (f : A -> B) : (term4822 A B _37163 t''' u f) = (term4823 A B _37163 t''' u f).
Proof. exact (fun_ext (fun g : type686 A => @lem3531558 A B _37163 t''' u f g)). Qed.
Lemma lem3531560 {A : Type'} : (@all ((A -> Prop) -> Prop)) = (@all ((A -> Prop) -> Prop)).
Proof. exact (eq_refl (@all ((A -> Prop) -> Prop))). Qed.
Lemma lem3531561 {A B : Type'} (_37163 : type627 A B) (t''' : type625 A B) (u : A -> Prop) (f : A -> B) : (term4824 A B _37163 t''' u f) = (term4825 A B _37163 t''' u f).
Proof. exact (MK_COMB (@lem3531560 A) (@lem3531559 A B _37163 t''' u f)). Qed.
Lemma lem3531562 {A B : Type'} (_37163 : type627 A B) (t''' : type625 A B) (u : A -> Prop) : (term4826 A B _37163 t''' u) = (term4827 A B _37163 t''' u).
Proof. exact (fun_ext (fun f : A -> B => @lem3531561 A B _37163 t''' u f)). Qed.
Lemma lem3531563 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem3531564 {A B : Type'} (_37163 : type627 A B) (t''' : type625 A B) (u : A -> Prop) : (term4204 A B _37163 t''' u) = (term4828 A B _37163 t''' u).
Proof. exact (MK_COMB (@lem3531563 A B) (@lem3531562 A B _37163 t''' u)). Qed.
Lemma lem3531565 {A B : Type'} (_37163 : type627 A B) (t''' : type625 A B) : (term4206 A B _37163 t''') = (term4829 A B _37163 t''').
Proof. exact (fun_ext (fun u : A -> Prop => @lem3531564 A B _37163 t''' u)). Qed.
Lemma lem3531566 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem3531567 {A B : Type'} (_37163 : type627 A B) (t''' : type625 A B) : (term4208 A B _37163 t''') = (term4830 A B _37163 t''').
Proof. exact (MK_COMB (@lem3531566 A) (@lem3531565 A B _37163 t''')). Qed.
Lemma lem3531568 {A B : Type'} (_37163 : type627 A B) (t''' : type625 A B) (h1 : term4208 A B _37163 t''') : term4830 A B _37163 t'''.
Proof. exact (EQ_MP (@lem3531567 A B _37163 t''') (@lem3530273 A B _37163 t''' h1)). Qed.
Lemma lem3536386 {A B : Type'} (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) (g : type686 A) (h1 : term2135 A B _37163 u f g) : term4770 A B g _37163 u f.
Proof. exact (proj1 (@lem3530480 A B _37163 u f g h1)). Qed.
Lemma lem3536387 {A B : Type'} (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) (g : type686 A) (h1 : term2135 A B _37163 u f g) : term4769 A B g _37163 u f.
Proof. exact (proj2 (@lem3536386 A B _37163 u f g h1)). Qed.
Lemma lem3536389 {A B : Type'} (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) (g : type686 A) (h1 : term2135 A B _37163 u f g) : term4763 A B g _37163 u f.
Proof. exact (proj2 (@lem3536387 A B _37163 u f g h1)). Qed.
Lemma lem3536390 {A B : Type'} (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) (g : type686 A) (h1 : term2135 A B _37163 u f g) : term4767 A g u.
Proof. exact (proj1 (@lem3536387 A B _37163 u f g h1)). Qed.
Lemma lem3536533 {A B : Type'} (f : A -> B) (g : type686 A) : ((term4735 A B f g) = (term4743 A B f g)) = ((term4735 A B f g) = (term4743 A B f g)).
Proof. exact (eq_refl ((term4735 A B f g) = (term4743 A B f g))). Qed.
Lemma lem3536556 {A B : Type'} (_37163 : type627 A B) (t''' : type625 A B) (u : A -> Prop) (f : A -> B) (g : type686 A) : (term4817 A B _37163 t''' u f g) = (term4831 A B _37163 t''' u f g).
Proof. exact (@lem19490 (term4811 A B t''' u f g) (g = (@EMPTY (A -> Prop))) (term4804 A B _37163 t''' u f g)). Qed.
Lemma lem3536557 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem3536558 {A B : Type'} (_37163 : type627 A B) (t''' : type625 A B) (u : A -> Prop) (f : A -> B) (g : type686 A) : (term4819 A B _37163 t''' u f g) = (term4832 A B _37163 t''' u f g).
Proof. exact (MK_COMB (@lem3536557) (@lem3536556 A B _37163 t''' u f g)). Qed.
Lemma lem3536559 {A B : Type'} (_37163 : type627 A B) (t''' : type625 A B) (u : A -> Prop) (f : A -> B) (g : type686 A) : (term4821 A B _37163 t''' u f g) = (term4833 A B _37163 t''' u f g).
Proof. exact (MK_COMB (@lem3536558 A B _37163 t''' u f g) (@lem3536533 A B f g)). Qed.
Lemma lem3536566 {A B : Type'} (_37163 : type627 A B) (t''' : type625 A B) (u : A -> Prop) (f : A -> B) (g : type686 A) : (term4833 A B _37163 t''' u f g) = (term4834 A B _37163 t''' u f g).
Proof. exact (@lem19699 (term4835 A B t''' u f g) (term4836 A B _37163 t''' u f g) ((term4735 A B f g) = (term4743 A B f g))). Qed.
Lemma lem3536567 {A B : Type'} (_37163 : type627 A B) (t''' : type625 A B) (u : A -> Prop) (f : A -> B) (g : type686 A) : (term4821 A B _37163 t''' u f g) = (term4834 A B _37163 t''' u f g).
Proof. exact (TRANS (@lem3536559 A B _37163 t''' u f g) (@lem3536566 A B _37163 t''' u f g)). Qed.
Lemma lem3536568 {A B : Type'} (_37163 : type627 A B) (t''' : type625 A B) (u : A -> Prop) (f : A -> B) : (term4823 A B _37163 t''' u f) = (term4837 A B _37163 t''' u f).
Proof. exact (fun_ext (fun g : type686 A => @lem3536567 A B _37163 t''' u f g)). Qed.
Lemma lem3536569 {A : Type'} : (@all ((A -> Prop) -> Prop)) = (@all ((A -> Prop) -> Prop)).
Proof. exact (eq_refl (@all ((A -> Prop) -> Prop))). Qed.
Lemma lem3536570 {A B : Type'} (_37163 : type627 A B) (t''' : type625 A B) (u : A -> Prop) (f : A -> B) : (term4825 A B _37163 t''' u f) = (term4838 A B _37163 t''' u f).
Proof. exact (MK_COMB (@lem3536569 A) (@lem3536568 A B _37163 t''' u f)). Qed.
Lemma lem3536571 {A B : Type'} (_37163 : type627 A B) (t''' : type625 A B) (u : A -> Prop) : (term4827 A B _37163 t''' u) = (term4839 A B _37163 t''' u).
Proof. exact (fun_ext (fun f : A -> B => @lem3536570 A B _37163 t''' u f)). Qed.
Lemma lem3536572 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem3536573 {A B : Type'} (_37163 : type627 A B) (t''' : type625 A B) (u : A -> Prop) : (term4828 A B _37163 t''' u) = (term4840 A B _37163 t''' u).
Proof. exact (MK_COMB (@lem3536572 A B) (@lem3536571 A B _37163 t''' u)). Qed.
Lemma lem3536574 {A B : Type'} (_37163 : type627 A B) (t''' : type625 A B) : (term4829 A B _37163 t''') = (term4841 A B _37163 t''').
Proof. exact (fun_ext (fun u : A -> Prop => @lem3536573 A B _37163 t''' u)). Qed.
Lemma lem3536575 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem3536577 {A B : Type'} (_37163 : type627 A B) (t''' : type625 A B) : (term4830 A B _37163 t''') = (term4842 A B _37163 t''').
Proof. exact (MK_COMB (@lem3536575 A) (@lem3536574 A B _37163 t''')). Qed.
Lemma lem3536578 {A B : Type'} (_37163 : type627 A B) (t''' : type625 A B) (h1 : term4208 A B _37163 t''') : term4842 A B _37163 t'''.
Proof. exact (EQ_MP (@lem3536577 A B _37163 t''') (@lem3531568 A B _37163 t''' h1)). Qed.
Lemma lem3537531 {A : Type'} (g : type686 A) (t : A -> Prop) (u : A -> Prop) : (term4765 A g t u) = (term4765 A g t u).
Proof. exact (eq_refl (term4765 A g t u)). Qed.
Lemma lem3537532 {A : Type'} (g : type686 A) (u : A -> Prop) : (term4766 A g u) = (term4766 A g u).
Proof. exact (fun_ext (fun t : A -> Prop => @lem3537531 A g t u)). Qed.
Lemma lem3537533 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem3537535 {A : Type'} (g : type686 A) (u : A -> Prop) : (term4767 A g u) = (term4767 A g u).
Proof. exact (MK_COMB (@lem3537533 A) (@lem3537532 A g u)). Qed.
Lemma lem3537536 {A B : Type'} (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) (g : type686 A) (h1 : term2135 A B _37163 u f g) : term4767 A g u.
Proof. exact (EQ_MP (@lem3537535 A g u) (@lem3536390 A B _37163 u f g h1)). Qed.
Lemma lem3537544 {A B : Type'} (g : type686 A) (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) (t : A -> Prop) : (term4761 A B g _37163 u f t) = (term4761 A B g _37163 u f t).
Proof. exact (eq_refl (term4761 A B g _37163 u f t)). Qed.
Lemma lem3537545 {A B : Type'} (g : type686 A) (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) : (term4762 A B g _37163 u f) = (term4762 A B g _37163 u f).
Proof. exact (fun_ext (fun t : A -> Prop => @lem3537544 A B g _37163 u f t)). Qed.
Lemma lem3537546 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem3537548 {A B : Type'} (g : type686 A) (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) : (term4763 A B g _37163 u f) = (term4763 A B g _37163 u f).
Proof. exact (MK_COMB (@lem3537546 A) (@lem3537545 A B g _37163 u f)). Qed.
Lemma lem3537549 {A B : Type'} (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) (g : type686 A) (h1 : term2135 A B _37163 u f g) : term4763 A B g _37163 u f.
Proof. exact (EQ_MP (@lem3537548 A B g _37163 u f) (@lem3536389 A B _37163 u f g h1)). Qed.
Lemma lem3537577 {A B : Type'} (_37181 : A -> Prop) (_37163 : type627 A B) (t''' : type625 A B) (h1 : term4208 A B _37163 t''') : term4843 A B _37163 t''' _37181.
Proof. exact (@lem3536578 A B _37163 t''' h1 _37181). Qed.
Lemma lem3537578 {A B : Type'} (_37163 : type627 A B) (t''' : type625 A B) (_37181 : A -> Prop) : (term4843 A B _37163 t''' _37181) = (term4840 A B _37163 t''' _37181).
Proof. exact (eq_refl (term4843 A B _37163 t''' _37181)). Qed.
Lemma lem3537579 {A B : Type'} (_37181 : A -> Prop) (_37163 : type627 A B) (t''' : type625 A B) (h1 : term4208 A B _37163 t''') : term4840 A B _37163 t''' _37181.
Proof. exact (EQ_MP (@lem3537578 A B _37163 t''' _37181) (@lem3537577 A B _37181 _37163 t''' h1)). Qed.
Lemma lem3537580 {A B : Type'} (_37181 : A -> Prop) (_37182 : A -> B) (_37163 : type627 A B) (t''' : type625 A B) (h1 : term4208 A B _37163 t''') : term4844 A B _37163 t''' _37181 _37182.
Proof. exact (@lem3537579 A B _37181 _37163 t''' h1 _37182). Qed.
Lemma lem3537581 {A B : Type'} (_37163 : type627 A B) (t''' : type625 A B) (_37181 : A -> Prop) (_37182 : A -> B) : (term4844 A B _37163 t''' _37181 _37182) = (term4838 A B _37163 t''' _37181 _37182).
Proof. exact (eq_refl (term4844 A B _37163 t''' _37181 _37182)). Qed.
Lemma lem3537582 {A B : Type'} (_37181 : A -> Prop) (_37182 : A -> B) (_37163 : type627 A B) (t''' : type625 A B) (h1 : term4208 A B _37163 t''') : term4838 A B _37163 t''' _37181 _37182.
Proof. exact (EQ_MP (@lem3537581 A B _37163 t''' _37181 _37182) (@lem3537580 A B _37181 _37182 _37163 t''' h1)). Qed.
Lemma lem3537583 {A B : Type'} (_37181 : A -> Prop) (_37182 : A -> B) (_37183 : type686 A) (_37163 : type627 A B) (t''' : type625 A B) (h1 : term4208 A B _37163 t''') : term4845 A B _37163 t''' _37181 _37182 _37183.
Proof. exact (@lem3537582 A B _37181 _37182 _37163 t''' h1 _37183). Qed.
Lemma lem3537584 {A B : Type'} (_37163 : type627 A B) (t''' : type625 A B) (_37181 : A -> Prop) (_37182 : A -> B) (_37183 : type686 A) : (term4845 A B _37163 t''' _37181 _37182 _37183) = (term4834 A B _37163 t''' _37181 _37182 _37183).
Proof. exact (eq_refl (term4845 A B _37163 t''' _37181 _37182 _37183)). Qed.
Lemma lem3537585 {A B : Type'} (_37181 : A -> Prop) (_37182 : A -> B) (_37183 : type686 A) (_37163 : type627 A B) (t''' : type625 A B) (h1 : term4208 A B _37163 t''') : term4834 A B _37163 t''' _37181 _37182 _37183.
Proof. exact (EQ_MP (@lem3537584 A B _37163 t''' _37181 _37182 _37183) (@lem3537583 A B _37181 _37182 _37183 _37163 t''' h1)). Qed.
Lemma lem3537874 {A B : Type'} (_37280 : A -> Prop) (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) (g : type686 A) (h1 : term2135 A B _37163 u f g) : term4846 A g u _37280.
Proof. exact (@lem3537536 A B _37163 u f g h1 _37280). Qed.
Lemma lem3537875 {A : Type'} (g : type686 A) (_37280 : A -> Prop) (u : A -> Prop) : (term4846 A g u _37280) = (term4765 A g _37280 u).
Proof. exact (eq_refl (term4846 A g u _37280)). Qed.
Lemma lem3537877 {A B : Type'} (_37281 : A -> Prop) (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) (g : type686 A) (h1 : term2135 A B _37163 u f g) : term4847 A B g _37163 u f _37281.
Proof. exact (@lem3537549 A B _37163 u f g h1 _37281). Qed.
Lemma lem3537878 {A B : Type'} (g : type686 A) (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) (_37281 : A -> Prop) : (term4847 A B g _37163 u f _37281) = (term4761 A B g _37163 u f _37281).
Proof. exact (eq_refl (term4847 A B g _37163 u f _37281)). Qed.
Lemma lem3537890 {A B : Type'} (_37181 : A -> Prop) (_37182 : A -> B) (_37183 : type686 A) (_37163 : type627 A B) (t''' : type625 A B) (h1 : term4208 A B _37163 t''') : term4848 A B _37163 t''' _37181 _37182 _37183.
Proof. exact (proj2 (@lem3537585 A B _37181 _37182 _37183 _37163 t''' h1)). Qed.
Lemma lem3537891 {A B : Type'} (_37181 : A -> Prop) (_37182 : A -> B) (_37183 : type686 A) (_37163 : type627 A B) (t''' : type625 A B) (h1 : term4208 A B _37163 t''') : term4849 A B t''' _37181 _37182 _37183.
Proof. exact (proj1 (@lem3537585 A B _37181 _37182 _37183 _37163 t''' h1)). Qed.
Lemma lem3538009 {A B : Type'} (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) (g : type686 A) (h1 : term2135 A B _37163 u f g) : term40 A g.
Proof. exact (proj1 (@lem3536386 A B _37163 u f g h1)). Qed.
Lemma lem3538015 {A B : Type'} (_37280 : A -> Prop) (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) (g : type686 A) (h1 : term2135 A B _37163 u f g) : term4765 A g _37280 u.
Proof. exact (EQ_MP (@lem3537875 A g _37280 u) (@lem3537874 A B _37280 _37163 u f g h1)). Qed.
Lemma lem3538021 {A B : Type'} (_37281 : A -> Prop) (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) (g : type686 A) (h1 : term2135 A B _37163 u f g) : term4761 A B g _37163 u f _37281.
Proof. exact (EQ_MP (@lem3537878 A B g _37163 u f _37281) (@lem3537877 A B _37281 _37163 u f g h1)). Qed.
Lemma lem3538182 {A B : Type'} (t''' : type625 A B) (_37181 : A -> Prop) (_37182 : A -> B) (_37183 : type686 A) : (term4849 A B t''' _37181 _37182 _37183) = (term4850 A B t''' _37181 _37182 _37183).
Proof. exact (@lem3505627 (_37183 = (@EMPTY (A -> Prop))) (term4811 A B t''' _37181 _37182 _37183) ((term4735 A B _37182 _37183) = (term4743 A B _37182 _37183))). Qed.
Lemma lem3538183 {A B : Type'} (_37181 : A -> Prop) (_37182 : A -> B) (_37183 : type686 A) (_37163 : type627 A B) (t''' : type625 A B) (h1 : term4208 A B _37163 t''') : term4850 A B t''' _37181 _37182 _37183.
Proof. exact (EQ_MP (@lem3538182 A B t''' _37181 _37182 _37183) (@lem3537891 A B _37181 _37182 _37183 _37163 t''' h1)). Qed.
Lemma lem3538187 {A B : Type'} (_37163 : type627 A B) (t''' : type625 A B) (_37181 : A -> Prop) (_37182 : A -> B) (_37183 : type686 A) : (term4848 A B _37163 t''' _37181 _37182 _37183) = (term4851 A B _37163 t''' _37181 _37182 _37183).
Proof. exact (@lem3505627 (_37183 = (@EMPTY (A -> Prop))) (term4804 A B _37163 t''' _37181 _37182 _37183) ((term4735 A B _37182 _37183) = (term4743 A B _37182 _37183))). Qed.
Lemma lem3538194 {A B : Type'} (_37163 : type627 A B) (t''' : type625 A B) (_37181 : A -> Prop) (_37182 : A -> B) (_37183 : type686 A) : (term4852 A B _37163 t''' _37181 _37182 _37183) = (term4853 A B _37163 t''' _37181 _37182 _37183).
Proof. exact (@lem3505627 (term4800 A B t''' _37182 _37183 _37181) (term4791 A B _37163 t''' _37181 _37182 _37183) ((term4735 A B _37182 _37183) = (term4743 A B _37182 _37183))). Qed.
Lemma lem3538195 {A : Type'} (_37183 : type686 A) : (term4094 A _37183) = (term4094 A _37183).
Proof. exact (eq_refl (term4094 A _37183)). Qed.
Lemma lem3538198 {A B : Type'} (_37163 : type627 A B) (t''' : type625 A B) (_37181 : A -> Prop) (_37182 : A -> B) (_37183 : type686 A) : (term4851 A B _37163 t''' _37181 _37182 _37183) = (term4854 A B _37163 t''' _37181 _37182 _37183).
Proof. exact (MK_COMB (@lem3538195 A _37183) (@lem3538194 A B _37163 t''' _37181 _37182 _37183)). Qed.
Lemma lem3538200 {A B : Type'} (_37163 : type627 A B) (t''' : type625 A B) (_37181 : A -> Prop) (_37182 : A -> B) (_37183 : type686 A) : (term4848 A B _37163 t''' _37181 _37182 _37183) = (term4854 A B _37163 t''' _37181 _37182 _37183).
Proof. exact (TRANS (@lem3538187 A B _37163 t''' _37181 _37182 _37183) (@lem3538198 A B _37163 t''' _37181 _37182 _37183)). Qed.
Lemma lem3538201 {A B : Type'} (_37181 : A -> Prop) (_37182 : A -> B) (_37183 : type686 A) (_37163 : type627 A B) (t''' : type625 A B) (h1 : term4208 A B _37163 t''') : term4854 A B _37163 t''' _37181 _37182 _37183.
Proof. exact (EQ_MP (@lem3538200 A B _37163 t''' _37181 _37182 _37183) (@lem3537890 A B _37181 _37182 _37183 _37163 t''' h1)). Qed.
Lemma lem3540882 {A : Type'} (g : type686 A) (h1 : term40 A g) : term40 A g.
Proof. exact (h1). Qed.
Lemma lem3540883 {A : Type'} (g : type686 A) (h1 : term40 A g) : term4855 A g.
Proof. exact (fun h0 : g = (@EMPTY (A -> Prop)) => @lem3540882 A g h1). Qed.
Lemma lem3540885 (p : Prop) : (term4856 p) = (~ p).
Proof. exact (EQ_MP (@lem21028 p) (@lem21107 p)). Qed.
Lemma lem3540886 {A : Type'} (g : type686 A) : (term4855 A g) = (term40 A g).
Proof. exact (@lem3540885 (g = (@EMPTY (A -> Prop)))). Qed.
Lemma lem3540887 {A : Type'} (g : type686 A) (h1 : term40 A g) : term40 A g.
Proof. exact (EQ_MP (@lem3540886 A g) (@lem3540883 A g h1)). Qed.
Lemma lem3540890 {A : Type'} (g : type686 A) (h1 : term40 A g) : term40 A g.
Proof. exact (h1). Qed.
Lemma lem3540891 {A : Type'} (g : type686 A) (h1 : term40 A g) : term4855 A g.
Proof. exact (fun h0 : g = (@EMPTY (A -> Prop)) => @lem3540890 A g h1). Qed.
Lemma lem3540893 (p : Prop) : (term4856 p) = (~ p).
Proof. exact (EQ_MP (@lem21028 p) (@lem21107 p)). Qed.
Lemma lem3540894 {A : Type'} (g : type686 A) : (term4855 A g) = (term40 A g).
Proof. exact (@lem3540893 (g = (@EMPTY (A -> Prop)))). Qed.
Lemma lem3540895 {A : Type'} (g : type686 A) (h1 : term40 A g) : term40 A g.
Proof. exact (EQ_MP (@lem3540894 A g) (@lem3540891 A g h1)). Qed.
Lemma lem3540897 {A B : Type'} (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) (g : type686 A) (h1 : term2135 A B _37163 u f g) : term4746 A B f g.
Proof. exact (proj2 (@lem3530480 A B _37163 u f g h1)). Qed.
Lemma lem3540898 {A B : Type'} (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) (g : type686 A) (h1 : term2135 A B _37163 u f g) : term4857 A B f g.
Proof. exact (fun h0 : (term4735 A B f g) = (term4743 A B f g) => @lem3540897 A B _37163 u f g h1). Qed.
Lemma lem3540900 (p : Prop) : (term4856 p) = (~ p).
Proof. exact (EQ_MP (@lem21028 p) (@lem21107 p)). Qed.
Lemma lem3540901 {A B : Type'} (f : A -> B) (g : type686 A) : (term4857 A B f g) = (term4746 A B f g).
Proof. exact (@lem3540900 ((term4735 A B f g) = (term4743 A B f g))). Qed.
Lemma lem3540902 {A B : Type'} (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) (g : type686 A) (h1 : term2135 A B _37163 u f g) : term4746 A B f g.
Proof. exact (EQ_MP (@lem3540901 A B f g) (@lem3540898 A B _37163 u f g h1)). Qed.
Lemma lem3540920 (q : Prop) (p : Prop) : (p \/ q) = (q \/ p).
Proof. exact (proj1 (@lem827 (@el Prop) p q)). Qed.
Lemma lem3540921 {A B : Type'} (t''' : type625 A B) (_37181 : A -> Prop) (_37182 : A -> B) (_37183 : type686 A) : (term4858 A B t''' _37181 _37182 _37183) = (term4859 A B t''' _37181 _37182 _37183).
Proof. exact (@lem3540920 ((term4735 A B _37182 _37183) = (term4743 A B _37182 _37183)) (term4811 A B t''' _37181 _37182 _37183)). Qed.
Lemma lem3540929 {A : Type'} (_37183 : type686 A) : (term4094 A _37183) = (term4094 A _37183).
Proof. exact (eq_refl (term4094 A _37183)). Qed.
Lemma lem3540930 {A B : Type'} (t''' : type625 A B) (_37181 : A -> Prop) (_37182 : A -> B) (_37183 : type686 A) : (term4850 A B t''' _37181 _37182 _37183) = (term4860 A B t''' _37181 _37182 _37183).
Proof. exact (MK_COMB (@lem3540929 A _37183) (@lem3540921 A B t''' _37181 _37182 _37183)). Qed.
Lemma lem3540934 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem3540935 {A B : Type'} (t''' : type625 A B) (_37181 : A -> Prop) (_37182 : A -> B) (_37183 : type686 A) : (term4860 A B t''' _37181 _37182 _37183) = (term4861 A B t''' _37181 _37182 _37183).
Proof. exact (@lem3540934 ((term4735 A B _37182 _37183) = (term4743 A B _37182 _37183)) (_37183 = (@EMPTY (A -> Prop))) (term4811 A B t''' _37181 _37182 _37183)). Qed.
Lemma lem3540955 {A B : Type'} (t''' : type625 A B) (_37181 : A -> Prop) (_37182 : A -> B) (_37183 : type686 A) : (term4850 A B t''' _37181 _37182 _37183) = (term4861 A B t''' _37181 _37182 _37183).
Proof. exact (TRANS (@lem3540930 A B t''' _37181 _37182 _37183) (@lem3540935 A B t''' _37181 _37182 _37183)). Qed.
Lemma lem3540956 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem3540957 {A B : Type'} (t''' : type625 A B) (_37181 : A -> Prop) (_37182 : A -> B) (_37183 : type686 A) : (term4862 A B t''' _37181 _37182 _37183) = (term4863 A B t''' _37181 _37182 _37183).
Proof. exact (MK_COMB (@lem3540956) (@lem3540955 A B t''' _37181 _37182 _37183)). Qed.
Lemma lem3540961 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem3540962 {A B : Type'} (t''' : type625 A B) (_37181 : A -> Prop) (_37182 : A -> B) (_37183 : type686 A) : (term4864 A B t''' _37181 _37182 _37183) = (term4850 A B t''' _37181 _37182 _37183).
Proof. exact (@lem3540961 (_37183 = (@EMPTY (A -> Prop))) (term4811 A B t''' _37181 _37182 _37183) ((term4735 A B _37182 _37183) = (term4743 A B _37182 _37183))). Qed.
Lemma lem3540978 (q : Prop) (p : Prop) : (p \/ q) = (q \/ p).
Proof. exact (proj1 (@lem827 (@el Prop) p q)). Qed.
Lemma lem3540979 {A B : Type'} (t''' : type625 A B) (_37181 : A -> Prop) (_37182 : A -> B) (_37183 : type686 A) : (term4858 A B t''' _37181 _37182 _37183) = (term4859 A B t''' _37181 _37182 _37183).
Proof. exact (@lem3540978 ((term4735 A B _37182 _37183) = (term4743 A B _37182 _37183)) (term4811 A B t''' _37181 _37182 _37183)). Qed.
Lemma lem3540987 {A : Type'} (_37183 : type686 A) : (term4094 A _37183) = (term4094 A _37183).
Proof. exact (eq_refl (term4094 A _37183)). Qed.
Lemma lem3540988 {A B : Type'} (t''' : type625 A B) (_37181 : A -> Prop) (_37182 : A -> B) (_37183 : type686 A) : (term4850 A B t''' _37181 _37182 _37183) = (term4860 A B t''' _37181 _37182 _37183).
Proof. exact (MK_COMB (@lem3540987 A _37183) (@lem3540979 A B t''' _37181 _37182 _37183)). Qed.
Lemma lem3540992 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem3540993 {A B : Type'} (t''' : type625 A B) (_37181 : A -> Prop) (_37182 : A -> B) (_37183 : type686 A) : (term4860 A B t''' _37181 _37182 _37183) = (term4861 A B t''' _37181 _37182 _37183).
Proof. exact (@lem3540992 ((term4735 A B _37182 _37183) = (term4743 A B _37182 _37183)) (_37183 = (@EMPTY (A -> Prop))) (term4811 A B t''' _37181 _37182 _37183)). Qed.
Lemma lem3541013 {A B : Type'} (t''' : type625 A B) (_37181 : A -> Prop) (_37182 : A -> B) (_37183 : type686 A) : (term4850 A B t''' _37181 _37182 _37183) = (term4861 A B t''' _37181 _37182 _37183).
Proof. exact (TRANS (@lem3540988 A B t''' _37181 _37182 _37183) (@lem3540993 A B t''' _37181 _37182 _37183)). Qed.
Lemma lem3541014 {A B : Type'} (t''' : type625 A B) (_37181 : A -> Prop) (_37182 : A -> B) (_37183 : type686 A) : (term4864 A B t''' _37181 _37182 _37183) = (term4861 A B t''' _37181 _37182 _37183).
Proof. exact (TRANS (@lem3540962 A B t''' _37181 _37182 _37183) (@lem3541013 A B t''' _37181 _37182 _37183)). Qed.
Lemma lem3541015 {A B : Type'} (t''' : type625 A B) (_37181 : A -> Prop) (_37182 : A -> B) (_37183 : type686 A) : ((term4850 A B t''' _37181 _37182 _37183) = (term4864 A B t''' _37181 _37182 _37183)) = ((term4861 A B t''' _37181 _37182 _37183) = (term4861 A B t''' _37181 _37182 _37183)).
Proof. exact (MK_COMB (@lem3540957 A B t''' _37181 _37182 _37183) (@lem3541014 A B t''' _37181 _37182 _37183)). Qed.
Lemma lem3541017 {A : Type'} (x : A) : (x = x) = True.
Proof. exact (EQ_MP (@lem20665 A x) (@lem20664 A x)). Qed.
Lemma lem3541018 (x : Prop) : (x = x) = True.
Proof. exact (@lem3541017 Prop x). Qed.
Lemma lem3541019 {A B : Type'} (t''' : type625 A B) (_37181 : A -> Prop) (_37182 : A -> B) (_37183 : type686 A) : ((term4861 A B t''' _37181 _37182 _37183) = (term4861 A B t''' _37181 _37182 _37183)) = True.
Proof. exact (@lem3541018 (term4861 A B t''' _37181 _37182 _37183)). Qed.
Lemma lem3541020 {A B : Type'} (t''' : type625 A B) (_37181 : A -> Prop) (_37182 : A -> B) (_37183 : type686 A) : ((term4850 A B t''' _37181 _37182 _37183) = (term4864 A B t''' _37181 _37182 _37183)) = True.
Proof. exact (TRANS (@lem3541015 A B t''' _37181 _37182 _37183) (@lem3541019 A B t''' _37181 _37182 _37183)). Qed.
Lemma lem3541021 {A B : Type'} (t''' : type625 A B) (_37181 : A -> Prop) (_37182 : A -> B) (_37183 : type686 A) : True = ((term4850 A B t''' _37181 _37182 _37183) = (term4864 A B t''' _37181 _37182 _37183)).
Proof. exact (SYM (@lem3541020 A B t''' _37181 _37182 _37183)). Qed.
Lemma lem3541022 {A B : Type'} (t''' : type625 A B) (_37181 : A -> Prop) (_37182 : A -> B) (_37183 : type686 A) : (term4850 A B t''' _37181 _37182 _37183) = (term4864 A B t''' _37181 _37182 _37183).
Proof. exact (EQ_MP (@lem3541021 A B t''' _37181 _37182 _37183) (@lem0)). Qed.
Lemma lem3541023 {A B : Type'} (_37181 : A -> Prop) (_37182 : A -> B) (_37183 : type686 A) (_37163 : type627 A B) (t''' : type625 A B) (h1 : term4208 A B _37163 t''') : term4864 A B t''' _37181 _37182 _37183.
Proof. exact (EQ_MP (@lem3541022 A B t''' _37181 _37182 _37183) (@lem3538183 A B _37181 _37182 _37183 _37163 t''' h1)). Qed.
Lemma lem3541025 (b : Prop) (a : Prop) : (a \/ b) = (term833 b a).
Proof. exact (EQ_MP (@lem20682 b a) (@lem20764 b a)). Qed.
Lemma lem3541026 {A B : Type'} (t''' : type625 A B) (_37181 : A -> Prop) (_37182 : A -> B) (_37183 : type686 A) : (term4864 A B t''' _37181 _37182 _37183) = (term4865 A B t''' _37181 _37182 _37183).
Proof. exact (@lem3541025 (term4866 A B _37182 _37183) (term4811 A B t''' _37181 _37182 _37183)). Qed.
Lemma lem3541028 (a : Prop) (b : Prop) : (term887 a b) = (term888 a b).
Proof. exact (EQ_MP (@lem20789 a b) (@lem20895 a b)). Qed.
Lemma lem3541029 {A B : Type'} (_37182 : A -> B) (_37183 : type686 A) : (term4867 A B _37182 _37183) = (term4868 A B _37182 _37183).
Proof. exact (@lem3541028 (_37183 = (@EMPTY (A -> Prop))) ((term4735 A B _37182 _37183) = (term4743 A B _37182 _37183))). Qed.
Lemma lem3541030 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem3541031 {A B : Type'} (_37182 : A -> B) (_37183 : type686 A) : (term4869 A B _37182 _37183) = (term4870 A B _37182 _37183).
Proof. exact (MK_COMB (@lem3541030) (@lem3541029 A B _37182 _37183)). Qed.
Lemma lem3541032 {A B : Type'} (t''' : type625 A B) (_37181 : A -> Prop) (_37182 : A -> B) (_37183 : type686 A) : (term4811 A B t''' _37181 _37182 _37183) = (term4811 A B t''' _37181 _37182 _37183).
Proof. exact (eq_refl (term4811 A B t''' _37181 _37182 _37183)). Qed.
Lemma lem3541033 {A B : Type'} (t''' : type625 A B) (_37181 : A -> Prop) (_37182 : A -> B) (_37183 : type686 A) : (term4865 A B t''' _37181 _37182 _37183) = (term4871 A B t''' _37181 _37182 _37183).
Proof. exact (MK_COMB (@lem3541031 A B _37182 _37183) (@lem3541032 A B t''' _37181 _37182 _37183)). Qed.
Lemma lem3541034 {A B : Type'} (t''' : type625 A B) (_37181 : A -> Prop) (_37182 : A -> B) (_37183 : type686 A) : (term4864 A B t''' _37181 _37182 _37183) = (term4871 A B t''' _37181 _37182 _37183).
Proof. exact (TRANS (@lem3541026 A B t''' _37181 _37182 _37183) (@lem3541033 A B t''' _37181 _37182 _37183)). Qed.
Lemma lem3541036 {A B : Type'} (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) (g : type686 A) (h1 : term40 A g) (h2 : term2135 A B _37163 u f g) : term4868 A B f g.
Proof. exact (conj (@lem3540895 A g h1) (@lem3540902 A B _37163 u f g h2)). Qed.
Lemma lem3541038 {A B : Type'} (_37181 : A -> Prop) (_37182 : A -> B) (_37183 : type686 A) (_37163 : type627 A B) (t''' : type625 A B) (h1 : term4208 A B _37163 t''') : term4871 A B t''' _37181 _37182 _37183.
Proof. exact (EQ_MP (@lem3541034 A B t''' _37181 _37182 _37183) (@lem3541023 A B _37181 _37182 _37183 _37163 t''' h1)). Qed.
Lemma lem3541039 {A B : Type'} (_37181 : A -> Prop) (_37182 : A -> B) (_37183 : type686 A) (_37163 : type627 A B) (t''' : type625 A B) (h1 : term4208 A B _37163 t''') : term4871 A B t''' _37181 _37182 _37183.
Proof. exact (@lem3541038 A B _37181 _37182 _37183 _37163 t''' h1). Qed.
Lemma lem3541040 {A B : Type'} (_37181 : A -> Prop) (f : A -> B) (g : type686 A) (_37163 : type627 A B) (t''' : type625 A B) (h1 : term4208 A B _37163 t''') : term4871 A B t''' _37181 f g.
Proof. exact (@lem3541039 A B _37181 f g _37163 t''' h1). Qed.
Lemma lem3541043 {A B : Type'} (_37181 : A -> Prop) (t''' : type625 A B) (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) (g : type686 A) (h1 : term4208 A B _37163 t''') (h2 : term40 A g) (h3 : term2135 A B _37163 u f g) : term4811 A B t''' _37181 f g.
Proof. exact (@lem3541040 A B _37181 f g _37163 t''' h1 (@lem3541036 A B _37163 u f g h2 h3)). Qed.
Lemma lem3541044 {A B : Type'} (_37181 : A -> Prop) (t''' : type625 A B) (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) (g : type686 A) (h1 : term4208 A B _37163 t''') (h2 : term40 A g) (h3 : term2135 A B _37163 u f g) : term4811 A B t''' _37181 f g.
Proof. exact (@lem3541043 A B _37181 t''' _37163 u f g h1 h2 h3). Qed.
Lemma lem3541045 {A B : Type'} (t''' : type625 A B) (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) (g : type686 A) (h1 : term4208 A B _37163 t''') (h2 : term40 A g) (h3 : term2135 A B _37163 u f g) : term4811 A B t''' u f g.
Proof. exact (@lem3541044 A B u t''' _37163 u f g h1 h2 h3). Qed.
Lemma lem3541046 {A B : Type'} (t''' : type625 A B) (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) (g : type686 A) (h1 : term4208 A B _37163 t''') (h2 : term40 A g) (h3 : term2135 A B _37163 u f g) : term4872 A B t''' u f g.
Proof. exact (fun h0 : term4873 A B t''' u f g => @lem3541045 A B t''' _37163 u f g h1 h2 h3). Qed.
Lemma lem3541048 (p : Prop) : (term828 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem3541049 {A B : Type'} (t''' : type625 A B) (u : A -> Prop) (f : A -> B) (g : type686 A) : (term4872 A B t''' u f g) = (term4811 A B t''' u f g).
Proof. exact (@lem3541048 (term4811 A B t''' u f g)). Qed.
Lemma lem3541050 {A B : Type'} (t''' : type625 A B) (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) (g : type686 A) (h1 : term4208 A B _37163 t''') (h2 : term40 A g) (h3 : term2135 A B _37163 u f g) : term4811 A B t''' u f g.
Proof. exact (EQ_MP (@lem3541049 A B t''' u f g) (@lem3541046 A B t''' _37163 u f g h1 h2 h3)). Qed.
Lemma lem3541056 (q : Prop) (p : Prop) : (p \/ q) = (q \/ p).
Proof. exact (proj1 (@lem827 (@el Prop) p q)). Qed.
Lemma lem3541057 {A : Type'} (u : A -> Prop) (_37280 : A -> Prop) (g : type686 A) : (term4765 A g _37280 u) = (term4874 A u _37280 g).
Proof. exact (@lem3541056 (term4764 A _37280 u) (term4758 A _37280 g)). Qed.
Lemma lem3541063 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem3541064 {A : Type'} (u : A -> Prop) (_37280 : A -> Prop) (g : type686 A) : (term4875 A g _37280 u) = (term4876 A u _37280 g).
Proof. exact (MK_COMB (@lem3541063) (@lem3541057 A u _37280 g)). Qed.
Lemma lem3541070 {A : Type'} (u : A -> Prop) (_37280 : A -> Prop) (g : type686 A) : (term4874 A u _37280 g) = (term4874 A u _37280 g).
Proof. exact (eq_refl (term4874 A u _37280 g)). Qed.
Lemma lem3541071 {A : Type'} (u : A -> Prop) (_37280 : A -> Prop) (g : type686 A) : ((term4765 A g _37280 u) = (term4874 A u _37280 g)) = ((term4874 A u _37280 g) = (term4874 A u _37280 g)).
Proof. exact (MK_COMB (@lem3541064 A u _37280 g) (@lem3541070 A u _37280 g)). Qed.
Lemma lem3541073 {A : Type'} (x : A) : (x = x) = True.
Proof. exact (EQ_MP (@lem20665 A x) (@lem20664 A x)). Qed.
Lemma lem3541074 (x : Prop) : (x = x) = True.
Proof. exact (@lem3541073 Prop x). Qed.
Lemma lem3541075 {A : Type'} (u : A -> Prop) (_37280 : A -> Prop) (g : type686 A) : ((term4874 A u _37280 g) = (term4874 A u _37280 g)) = True.
Proof. exact (@lem3541074 (term4874 A u _37280 g)). Qed.
Lemma lem3541076 {A : Type'} (u : A -> Prop) (_37280 : A -> Prop) (g : type686 A) : ((term4765 A g _37280 u) = (term4874 A u _37280 g)) = True.
Proof. exact (TRANS (@lem3541071 A u _37280 g) (@lem3541075 A u _37280 g)). Qed.
Lemma lem3541077 {A : Type'} (u : A -> Prop) (_37280 : A -> Prop) (g : type686 A) : True = ((term4765 A g _37280 u) = (term4874 A u _37280 g)).
Proof. exact (SYM (@lem3541076 A u _37280 g)). Qed.
Lemma lem3541078 {A : Type'} (u : A -> Prop) (_37280 : A -> Prop) (g : type686 A) : (term4765 A g _37280 u) = (term4874 A u _37280 g).
Proof. exact (EQ_MP (@lem3541077 A u _37280 g) (@lem0)). Qed.
Lemma lem3541079 {A B : Type'} (_37280 : A -> Prop) (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) (g : type686 A) (h1 : term2135 A B _37163 u f g) : term4874 A u _37280 g.
Proof. exact (EQ_MP (@lem3541078 A u _37280 g) (@lem3538015 A B _37280 _37163 u f g h1)). Qed.
Lemma lem3541081 (b : Prop) (a : Prop) : (a \/ b) = (term833 b a).
Proof. exact (EQ_MP (@lem20682 b a) (@lem20764 b a)). Qed.
Lemma lem3541082 {A : Type'} (g : type686 A) (_37280 : A -> Prop) (u : A -> Prop) : (term4874 A u _37280 g) = (term4877 A g _37280 u).
Proof. exact (@lem3541081 (term4758 A _37280 g) (term4764 A _37280 u)). Qed.
Lemma lem3541084 (a : Prop) : (term282 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem3541085 {A : Type'} (_37280 : A -> Prop) (g : type686 A) : (term4878 A _37280 g) = (term4757 A _37280 g).
Proof. exact (@lem3541084 (term4757 A _37280 g)). Qed.
Lemma lem3541086 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem3541087 {A : Type'} (_37280 : A -> Prop) (g : type686 A) : (term4879 A _37280 g) = (term4880 A _37280 g).
Proof. exact (MK_COMB (@lem3541086) (@lem3541085 A _37280 g)). Qed.
Lemma lem3541088 {A : Type'} (_37280 : A -> Prop) (u : A -> Prop) : (term4764 A _37280 u) = (term4764 A _37280 u).
Proof. exact (eq_refl (term4764 A _37280 u)). Qed.
Lemma lem3541089 {A : Type'} (g : type686 A) (_37280 : A -> Prop) (u : A -> Prop) : (term4877 A g _37280 u) = (term4881 A g _37280 u).
Proof. exact (MK_COMB (@lem3541087 A _37280 g) (@lem3541088 A _37280 u)). Qed.
Lemma lem3541090 {A : Type'} (g : type686 A) (_37280 : A -> Prop) (u : A -> Prop) : (term4874 A u _37280 g) = (term4881 A g _37280 u).
Proof. exact (TRANS (@lem3541082 A g _37280 u) (@lem3541089 A g _37280 u)). Qed.
Lemma lem3541093 {A B : Type'} (_37280 : A -> Prop) (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) (g : type686 A) (h1 : term2135 A B _37163 u f g) : term4881 A g _37280 u.
Proof. exact (EQ_MP (@lem3541090 A g _37280 u) (@lem3541079 A B _37280 _37163 u f g h1)). Qed.
Lemma lem3541094 {A B : Type'} (_37280 : A -> Prop) (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) (g : type686 A) (h1 : term2135 A B _37163 u f g) : term4881 A g _37280 u.
Proof. exact (@lem3541093 A B _37280 _37163 u f g h1). Qed.
Lemma lem3541095 {A B : Type'} (t''' : type625 A B) (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) (g : type686 A) (h1 : term2135 A B _37163 u f g) : term4882 A B t''' f g u.
Proof. exact (@lem3541094 A B (term4775 A B t''' u f g) _37163 u f g h1). Qed.
Lemma lem3541098 {A B : Type'} (t''' : type625 A B) (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) (g : type686 A) (h1 : term4208 A B _37163 t''') (h2 : term40 A g) (h3 : term2135 A B _37163 u f g) : term4798 A B t''' f g u.
Proof. exact (@lem3541095 A B t''' _37163 u f g h3 (@lem3541050 A B t''' _37163 u f g h1 h2 h3)). Qed.
Lemma lem3541099 {A B : Type'} (t''' : type625 A B) (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) (g : type686 A) (h1 : term4208 A B _37163 t''') (h2 : term40 A g) (h3 : term2135 A B _37163 u f g) : term4883 A B t''' f g u.
Proof. exact (fun h0 : term4800 A B t''' f g u => @lem3541098 A B t''' _37163 u f g h1 h2 h3). Qed.
Lemma lem3541101 (p : Prop) : (term828 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem3541102 {A B : Type'} (t''' : type625 A B) (f : A -> B) (g : type686 A) (u : A -> Prop) : (term4883 A B t''' f g u) = (term4798 A B t''' f g u).
Proof. exact (@lem3541101 (term4798 A B t''' f g u)). Qed.
Lemma lem3541103 {A B : Type'} (t''' : type625 A B) (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) (g : type686 A) (h1 : term4208 A B _37163 t''') (h2 : term40 A g) (h3 : term2135 A B _37163 u f g) : term4798 A B t''' f g u.
Proof. exact (EQ_MP (@lem3541102 A B t''' f g u) (@lem3541099 A B t''' _37163 u f g h1 h2 h3)). Qed.
Lemma lem3541105 {A B : Type'} (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) (g : type686 A) (h1 : term2135 A B _37163 u f g) : term4746 A B f g.
Proof. exact (proj2 (@lem3530480 A B _37163 u f g h1)). Qed.
Lemma lem3541106 {A B : Type'} (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) (g : type686 A) (h1 : term2135 A B _37163 u f g) : term4857 A B f g.
Proof. exact (fun h0 : (term4735 A B f g) = (term4743 A B f g) => @lem3541105 A B _37163 u f g h1). Qed.
Lemma lem3541108 (p : Prop) : (term4856 p) = (~ p).
Proof. exact (EQ_MP (@lem21028 p) (@lem21107 p)). Qed.
Lemma lem3541109 {A B : Type'} (f : A -> B) (g : type686 A) : (term4857 A B f g) = (term4746 A B f g).
Proof. exact (@lem3541108 ((term4735 A B f g) = (term4743 A B f g))). Qed.
Lemma lem3541110 {A B : Type'} (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) (g : type686 A) (h1 : term2135 A B _37163 u f g) : term4746 A B f g.
Proof. exact (EQ_MP (@lem3541109 A B f g) (@lem3541106 A B _37163 u f g h1)). Qed.
Lemma lem3541128 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem3541129 {A B : Type'} (_37163 : type627 A B) (t''' : type625 A B) (_37181 : A -> Prop) (_37182 : A -> B) (_37183 : type686 A) : (term4853 A B _37163 t''' _37181 _37182 _37183) = (term4884 A B _37163 t''' _37181 _37182 _37183).
Proof. exact (@lem3541128 (term4791 A B _37163 t''' _37181 _37182 _37183) (term4800 A B t''' _37182 _37183 _37181) ((term4735 A B _37182 _37183) = (term4743 A B _37182 _37183))). Qed.
Lemma lem3541143 (q : Prop) (p : Prop) : (p \/ q) = (q \/ p).
Proof. exact (proj1 (@lem827 (@el Prop) p q)). Qed.
Lemma lem3541144 {A B : Type'} (t''' : type625 A B) (_37182 : A -> B) (_37183 : type686 A) (_37181 : A -> Prop) : (term4885 A B t''' _37181 _37182 _37183) = (term4886 A B t''' _37182 _37183 _37181).
Proof. exact (@lem3541143 ((term4735 A B _37182 _37183) = (term4743 A B _37182 _37183)) (term4800 A B t''' _37182 _37183 _37181)). Qed.
Lemma lem3541152 {A B : Type'} (_37163 : type627 A B) (t''' : type625 A B) (_37181 : A -> Prop) (_37182 : A -> B) (_37183 : type686 A) : (term4887 A B _37163 t''' _37181 _37182 _37183) = (term4887 A B _37163 t''' _37181 _37182 _37183).
Proof. exact (eq_refl (term4887 A B _37163 t''' _37181 _37182 _37183)). Qed.
Lemma lem3541153 {A B : Type'} (_37163 : type627 A B) (t''' : type625 A B) (_37182 : A -> B) (_37183 : type686 A) (_37181 : A -> Prop) : (term4884 A B _37163 t''' _37181 _37182 _37183) = (term4888 A B _37163 t''' _37182 _37183 _37181).
Proof. exact (MK_COMB (@lem3541152 A B _37163 t''' _37181 _37182 _37183) (@lem3541144 A B t''' _37182 _37183 _37181)). Qed.
Lemma lem3541157 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem3541158 {A B : Type'} (_37163 : type627 A B) (t''' : type625 A B) (_37182 : A -> B) (_37183 : type686 A) (_37181 : A -> Prop) : (term4888 A B _37163 t''' _37182 _37183 _37181) = (term4889 A B _37163 t''' _37182 _37183 _37181).
Proof. exact (@lem3541157 ((term4735 A B _37182 _37183) = (term4743 A B _37182 _37183)) (term4791 A B _37163 t''' _37181 _37182 _37183) (term4800 A B t''' _37182 _37183 _37181)). Qed.
Lemma lem3541176 {A B : Type'} (_37163 : type627 A B) (t''' : type625 A B) (_37182 : A -> B) (_37183 : type686 A) (_37181 : A -> Prop) : (term4884 A B _37163 t''' _37181 _37182 _37183) = (term4889 A B _37163 t''' _37182 _37183 _37181).
Proof. exact (TRANS (@lem3541153 A B _37163 t''' _37182 _37183 _37181) (@lem3541158 A B _37163 t''' _37182 _37183 _37181)). Qed.
Lemma lem3541177 {A B : Type'} (_37163 : type627 A B) (t''' : type625 A B) (_37182 : A -> B) (_37183 : type686 A) (_37181 : A -> Prop) : (term4853 A B _37163 t''' _37181 _37182 _37183) = (term4889 A B _37163 t''' _37182 _37183 _37181).
Proof. exact (TRANS (@lem3541129 A B _37163 t''' _37181 _37182 _37183) (@lem3541176 A B _37163 t''' _37182 _37183 _37181)). Qed.
Lemma lem3541178 {A : Type'} (_37183 : type686 A) : (term4094 A _37183) = (term4094 A _37183).
Proof. exact (eq_refl (term4094 A _37183)). Qed.
Lemma lem3541179 {A B : Type'} (_37163 : type627 A B) (t''' : type625 A B) (_37182 : A -> B) (_37183 : type686 A) (_37181 : A -> Prop) : (term4854 A B _37163 t''' _37181 _37182 _37183) = (term4890 A B _37163 t''' _37182 _37183 _37181).
Proof. exact (MK_COMB (@lem3541178 A _37183) (@lem3541177 A B _37163 t''' _37182 _37183 _37181)). Qed.
Lemma lem3541183 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem3541184 {A B : Type'} (_37163 : type627 A B) (t''' : type625 A B) (_37182 : A -> B) (_37183 : type686 A) (_37181 : A -> Prop) : (term4890 A B _37163 t''' _37182 _37183 _37181) = (term4891 A B _37163 t''' _37182 _37183 _37181).
Proof. exact (@lem3541183 ((term4735 A B _37182 _37183) = (term4743 A B _37182 _37183)) (_37183 = (@EMPTY (A -> Prop))) (term4892 A B _37163 t''' _37182 _37183 _37181)). Qed.
Lemma lem3541214 {A B : Type'} (_37163 : type627 A B) (t''' : type625 A B) (_37182 : A -> B) (_37183 : type686 A) (_37181 : A -> Prop) : (term4854 A B _37163 t''' _37181 _37182 _37183) = (term4891 A B _37163 t''' _37182 _37183 _37181).
Proof. exact (TRANS (@lem3541179 A B _37163 t''' _37182 _37183 _37181) (@lem3541184 A B _37163 t''' _37182 _37183 _37181)). Qed.
Lemma lem3541215 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem3541216 {A B : Type'} (_37163 : type627 A B) (t''' : type625 A B) (_37182 : A -> B) (_37183 : type686 A) (_37181 : A -> Prop) : (term4893 A B _37163 t''' _37181 _37182 _37183) = (term4894 A B _37163 t''' _37182 _37183 _37181).
Proof. exact (MK_COMB (@lem3541215) (@lem3541214 A B _37163 t''' _37182 _37183 _37181)). Qed.
Lemma lem3541220 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem3541221 {A B : Type'} (_37163 : type627 A B) (t''' : type625 A B) (_37181 : A -> Prop) (_37182 : A -> B) (_37183 : type686 A) : (term4895 A B _37163 t''' _37181 _37182 _37183) = (term4896 A B _37163 t''' _37181 _37182 _37183).
Proof. exact (@lem3541220 (_37183 = (@EMPTY (A -> Prop))) (term4791 A B _37163 t''' _37181 _37182 _37183) (term4885 A B t''' _37181 _37182 _37183)). Qed.
Lemma lem3541247 (q : Prop) (p : Prop) : (p \/ q) = (q \/ p).
Proof. exact (proj1 (@lem827 (@el Prop) p q)). Qed.
Lemma lem3541248 {A B : Type'} (t''' : type625 A B) (_37182 : A -> B) (_37183 : type686 A) (_37181 : A -> Prop) : (term4885 A B t''' _37181 _37182 _37183) = (term4886 A B t''' _37182 _37183 _37181).
Proof. exact (@lem3541247 ((term4735 A B _37182 _37183) = (term4743 A B _37182 _37183)) (term4800 A B t''' _37182 _37183 _37181)). Qed.
Lemma lem3541256 {A B : Type'} (_37163 : type627 A B) (t''' : type625 A B) (_37181 : A -> Prop) (_37182 : A -> B) (_37183 : type686 A) : (term4887 A B _37163 t''' _37181 _37182 _37183) = (term4887 A B _37163 t''' _37181 _37182 _37183).
Proof. exact (eq_refl (term4887 A B _37163 t''' _37181 _37182 _37183)). Qed.
Lemma lem3541257 {A B : Type'} (_37163 : type627 A B) (t''' : type625 A B) (_37182 : A -> B) (_37183 : type686 A) (_37181 : A -> Prop) : (term4884 A B _37163 t''' _37181 _37182 _37183) = (term4888 A B _37163 t''' _37182 _37183 _37181).
Proof. exact (MK_COMB (@lem3541256 A B _37163 t''' _37181 _37182 _37183) (@lem3541248 A B t''' _37182 _37183 _37181)). Qed.
Lemma lem3541261 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem3541262 {A B : Type'} (_37163 : type627 A B) (t''' : type625 A B) (_37182 : A -> B) (_37183 : type686 A) (_37181 : A -> Prop) : (term4888 A B _37163 t''' _37182 _37183 _37181) = (term4889 A B _37163 t''' _37182 _37183 _37181).
Proof. exact (@lem3541261 ((term4735 A B _37182 _37183) = (term4743 A B _37182 _37183)) (term4791 A B _37163 t''' _37181 _37182 _37183) (term4800 A B t''' _37182 _37183 _37181)). Qed.
Lemma lem3541280 {A B : Type'} (_37163 : type627 A B) (t''' : type625 A B) (_37182 : A -> B) (_37183 : type686 A) (_37181 : A -> Prop) : (term4884 A B _37163 t''' _37181 _37182 _37183) = (term4889 A B _37163 t''' _37182 _37183 _37181).
Proof. exact (TRANS (@lem3541257 A B _37163 t''' _37182 _37183 _37181) (@lem3541262 A B _37163 t''' _37182 _37183 _37181)). Qed.
Lemma lem3541281 {A : Type'} (_37183 : type686 A) : (term4094 A _37183) = (term4094 A _37183).
Proof. exact (eq_refl (term4094 A _37183)). Qed.
Lemma lem3541282 {A B : Type'} (_37163 : type627 A B) (t''' : type625 A B) (_37182 : A -> B) (_37183 : type686 A) (_37181 : A -> Prop) : (term4896 A B _37163 t''' _37181 _37182 _37183) = (term4890 A B _37163 t''' _37182 _37183 _37181).
Proof. exact (MK_COMB (@lem3541281 A _37183) (@lem3541280 A B _37163 t''' _37182 _37183 _37181)). Qed.
Lemma lem3541286 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem3541287 {A B : Type'} (_37163 : type627 A B) (t''' : type625 A B) (_37182 : A -> B) (_37183 : type686 A) (_37181 : A -> Prop) : (term4890 A B _37163 t''' _37182 _37183 _37181) = (term4891 A B _37163 t''' _37182 _37183 _37181).
Proof. exact (@lem3541286 ((term4735 A B _37182 _37183) = (term4743 A B _37182 _37183)) (_37183 = (@EMPTY (A -> Prop))) (term4892 A B _37163 t''' _37182 _37183 _37181)). Qed.
Lemma lem3541317 {A B : Type'} (_37163 : type627 A B) (t''' : type625 A B) (_37182 : A -> B) (_37183 : type686 A) (_37181 : A -> Prop) : (term4896 A B _37163 t''' _37181 _37182 _37183) = (term4891 A B _37163 t''' _37182 _37183 _37181).
Proof. exact (TRANS (@lem3541282 A B _37163 t''' _37182 _37183 _37181) (@lem3541287 A B _37163 t''' _37182 _37183 _37181)). Qed.
Lemma lem3541318 {A B : Type'} (_37163 : type627 A B) (t''' : type625 A B) (_37182 : A -> B) (_37183 : type686 A) (_37181 : A -> Prop) : (term4895 A B _37163 t''' _37181 _37182 _37183) = (term4891 A B _37163 t''' _37182 _37183 _37181).
Proof. exact (TRANS (@lem3541221 A B _37163 t''' _37181 _37182 _37183) (@lem3541317 A B _37163 t''' _37182 _37183 _37181)). Qed.
Lemma lem3541319 {A B : Type'} (_37163 : type627 A B) (t''' : type625 A B) (_37182 : A -> B) (_37183 : type686 A) (_37181 : A -> Prop) : ((term4854 A B _37163 t''' _37181 _37182 _37183) = (term4895 A B _37163 t''' _37181 _37182 _37183)) = ((term4891 A B _37163 t''' _37182 _37183 _37181) = (term4891 A B _37163 t''' _37182 _37183 _37181)).
Proof. exact (MK_COMB (@lem3541216 A B _37163 t''' _37182 _37183 _37181) (@lem3541318 A B _37163 t''' _37182 _37183 _37181)). Qed.
Lemma lem3541321 {A : Type'} (x : A) : (x = x) = True.
Proof. exact (EQ_MP (@lem20665 A x) (@lem20664 A x)). Qed.
Lemma lem3541322 (x : Prop) : (x = x) = True.
Proof. exact (@lem3541321 Prop x). Qed.
Lemma lem3541323 {A B : Type'} (_37163 : type627 A B) (t''' : type625 A B) (_37182 : A -> B) (_37183 : type686 A) (_37181 : A -> Prop) : ((term4891 A B _37163 t''' _37182 _37183 _37181) = (term4891 A B _37163 t''' _37182 _37183 _37181)) = True.
Proof. exact (@lem3541322 (term4891 A B _37163 t''' _37182 _37183 _37181)). Qed.
Lemma lem3541324 {A B : Type'} (_37163 : type627 A B) (t''' : type625 A B) (_37181 : A -> Prop) (_37182 : A -> B) (_37183 : type686 A) : ((term4854 A B _37163 t''' _37181 _37182 _37183) = (term4895 A B _37163 t''' _37181 _37182 _37183)) = True.
Proof. exact (TRANS (@lem3541319 A B _37163 t''' _37182 _37183 _37181) (@lem3541323 A B _37163 t''' _37182 _37183 _37181)). Qed.
Lemma lem3541325 {A B : Type'} (_37163 : type627 A B) (t''' : type625 A B) (_37181 : A -> Prop) (_37182 : A -> B) (_37183 : type686 A) : True = ((term4854 A B _37163 t''' _37181 _37182 _37183) = (term4895 A B _37163 t''' _37181 _37182 _37183)).
Proof. exact (SYM (@lem3541324 A B _37163 t''' _37181 _37182 _37183)). Qed.
Lemma lem3541326 {A B : Type'} (_37163 : type627 A B) (t''' : type625 A B) (_37181 : A -> Prop) (_37182 : A -> B) (_37183 : type686 A) : (term4854 A B _37163 t''' _37181 _37182 _37183) = (term4895 A B _37163 t''' _37181 _37182 _37183).
Proof. exact (EQ_MP (@lem3541325 A B _37163 t''' _37181 _37182 _37183) (@lem0)). Qed.
Lemma lem3541327 {A B : Type'} (_37181 : A -> Prop) (_37182 : A -> B) (_37183 : type686 A) (_37163 : type627 A B) (t''' : type625 A B) (h1 : term4208 A B _37163 t''') : term4895 A B _37163 t''' _37181 _37182 _37183.
Proof. exact (EQ_MP (@lem3541326 A B _37163 t''' _37181 _37182 _37183) (@lem3538201 A B _37181 _37182 _37183 _37163 t''' h1)). Qed.
Lemma lem3541329 (b : Prop) (a : Prop) : (a \/ b) = (term833 b a).
Proof. exact (EQ_MP (@lem20682 b a) (@lem20764 b a)). Qed.
Lemma lem3541330 {A B : Type'} (_37163 : type627 A B) (t''' : type625 A B) (_37181 : A -> Prop) (_37182 : A -> B) (_37183 : type686 A) : (term4895 A B _37163 t''' _37181 _37182 _37183) = (term4897 A B _37163 t''' _37181 _37182 _37183).
Proof. exact (@lem3541329 (term4898 A B t''' _37181 _37182 _37183) (term4791 A B _37163 t''' _37181 _37182 _37183)). Qed.
Lemma lem3541332 (a : Prop) (b : Prop) : (term887 a b) = (term888 a b).
Proof. exact (EQ_MP (@lem20789 a b) (@lem20895 a b)). Qed.
Lemma lem3541333 {A B : Type'} (t''' : type625 A B) (_37181 : A -> Prop) (_37182 : A -> B) (_37183 : type686 A) : (term4899 A B t''' _37181 _37182 _37183) = (term4900 A B t''' _37181 _37182 _37183).
Proof. exact (@lem3541332 (_37183 = (@EMPTY (A -> Prop))) (term4885 A B t''' _37181 _37182 _37183)). Qed.
Lemma lem3541335 (a : Prop) (b : Prop) : (term887 a b) = (term888 a b).
Proof. exact (EQ_MP (@lem20789 a b) (@lem20895 a b)). Qed.
Lemma lem3541336 {A B : Type'} (t''' : type625 A B) (_37181 : A -> Prop) (_37182 : A -> B) (_37183 : type686 A) : (term4901 A B t''' _37181 _37182 _37183) = (term4902 A B t''' _37181 _37182 _37183).
Proof. exact (@lem3541335 (term4800 A B t''' _37182 _37183 _37181) ((term4735 A B _37182 _37183) = (term4743 A B _37182 _37183))). Qed.
Lemma lem3541338 (a : Prop) : (term282 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem3541339 {A B : Type'} (t''' : type625 A B) (_37182 : A -> B) (_37183 : type686 A) (_37181 : A -> Prop) : (term4903 A B t''' _37182 _37183 _37181) = (term4798 A B t''' _37182 _37183 _37181).
Proof. exact (@lem3541338 (term4798 A B t''' _37182 _37183 _37181)). Qed.
Lemma lem3541340 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem3541341 {A B : Type'} (t''' : type625 A B) (_37182 : A -> B) (_37183 : type686 A) (_37181 : A -> Prop) : (term4904 A B t''' _37182 _37183 _37181) = (term4905 A B t''' _37182 _37183 _37181).
Proof. exact (MK_COMB (@lem3541340) (@lem3541339 A B t''' _37182 _37183 _37181)). Qed.
Lemma lem3541342 {A B : Type'} (_37182 : A -> B) (_37183 : type686 A) : (term4746 A B _37182 _37183) = (term4746 A B _37182 _37183).
Proof. exact (eq_refl (term4746 A B _37182 _37183)). Qed.
Lemma lem3541343 {A B : Type'} (t''' : type625 A B) (_37181 : A -> Prop) (_37182 : A -> B) (_37183 : type686 A) : (term4902 A B t''' _37181 _37182 _37183) = (term4906 A B t''' _37181 _37182 _37183).
Proof. exact (MK_COMB (@lem3541341 A B t''' _37182 _37183 _37181) (@lem3541342 A B _37182 _37183)). Qed.
Lemma lem3541344 {A B : Type'} (t''' : type625 A B) (_37181 : A -> Prop) (_37182 : A -> B) (_37183 : type686 A) : (term4901 A B t''' _37181 _37182 _37183) = (term4906 A B t''' _37181 _37182 _37183).
Proof. exact (TRANS (@lem3541336 A B t''' _37181 _37182 _37183) (@lem3541343 A B t''' _37181 _37182 _37183)). Qed.
Lemma lem3541345 {A : Type'} (_37183 : type686 A) : (term42 A _37183) = (term42 A _37183).
Proof. exact (eq_refl (term42 A _37183)). Qed.
Lemma lem3541346 {A B : Type'} (t''' : type625 A B) (_37181 : A -> Prop) (_37182 : A -> B) (_37183 : type686 A) : (term4900 A B t''' _37181 _37182 _37183) = (term4907 A B t''' _37181 _37182 _37183).
Proof. exact (MK_COMB (@lem3541345 A _37183) (@lem3541344 A B t''' _37181 _37182 _37183)). Qed.
Lemma lem3541347 {A B : Type'} (t''' : type625 A B) (_37181 : A -> Prop) (_37182 : A -> B) (_37183 : type686 A) : (term4899 A B t''' _37181 _37182 _37183) = (term4907 A B t''' _37181 _37182 _37183).
Proof. exact (TRANS (@lem3541333 A B t''' _37181 _37182 _37183) (@lem3541346 A B t''' _37181 _37182 _37183)). Qed.
Lemma lem3541348 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem3541349 {A B : Type'} (t''' : type625 A B) (_37181 : A -> Prop) (_37182 : A -> B) (_37183 : type686 A) : (term4908 A B t''' _37181 _37182 _37183) = (term4909 A B t''' _37181 _37182 _37183).
Proof. exact (MK_COMB (@lem3541348) (@lem3541347 A B t''' _37181 _37182 _37183)). Qed.
Lemma lem3541350 {A B : Type'} (_37163 : type627 A B) (t''' : type625 A B) (_37181 : A -> Prop) (_37182 : A -> B) (_37183 : type686 A) : (term4791 A B _37163 t''' _37181 _37182 _37183) = (term4791 A B _37163 t''' _37181 _37182 _37183).
Proof. exact (eq_refl (term4791 A B _37163 t''' _37181 _37182 _37183)). Qed.
Lemma lem3541351 {A B : Type'} (_37163 : type627 A B) (t''' : type625 A B) (_37181 : A -> Prop) (_37182 : A -> B) (_37183 : type686 A) : (term4897 A B _37163 t''' _37181 _37182 _37183) = (term4910 A B _37163 t''' _37181 _37182 _37183).
Proof. exact (MK_COMB (@lem3541349 A B t''' _37181 _37182 _37183) (@lem3541350 A B _37163 t''' _37181 _37182 _37183)). Qed.
Lemma lem3541352 {A B : Type'} (_37163 : type627 A B) (t''' : type625 A B) (_37181 : A -> Prop) (_37182 : A -> B) (_37183 : type686 A) : (term4895 A B _37163 t''' _37181 _37182 _37183) = (term4910 A B _37163 t''' _37181 _37182 _37183).
Proof. exact (TRANS (@lem3541330 A B _37163 t''' _37181 _37182 _37183) (@lem3541351 A B _37163 t''' _37181 _37182 _37183)). Qed.
Lemma lem3541354 {A B : Type'} (t''' : type625 A B) (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) (g : type686 A) (h1 : term4208 A B _37163 t''') (h2 : term40 A g) (h3 : term2135 A B _37163 u f g) : term4906 A B t''' u f g.
Proof. exact (conj (@lem3541103 A B t''' _37163 u f g h1 h2 h3) (@lem3541110 A B _37163 u f g h3)). Qed.
Lemma lem3541355 {A B : Type'} (t''' : type625 A B) (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) (g : type686 A) (h1 : term4208 A B _37163 t''') (h2 : term40 A g) (h3 : term2135 A B _37163 u f g) : term4907 A B t''' u f g.
Proof. exact (conj (@lem3540887 A g h2) (@lem3541354 A B t''' _37163 u f g h1 h2 h3)). Qed.
Lemma lem3541357 {A B : Type'} (_37181 : A -> Prop) (_37182 : A -> B) (_37183 : type686 A) (_37163 : type627 A B) (t''' : type625 A B) (h1 : term4208 A B _37163 t''') : term4910 A B _37163 t''' _37181 _37182 _37183.
Proof. exact (EQ_MP (@lem3541352 A B _37163 t''' _37181 _37182 _37183) (@lem3541327 A B _37181 _37182 _37183 _37163 t''' h1)). Qed.
Lemma lem3541358 {A B : Type'} (_37181 : A -> Prop) (_37182 : A -> B) (_37183 : type686 A) (_37163 : type627 A B) (t''' : type625 A B) (h1 : term4208 A B _37163 t''') : term4910 A B _37163 t''' _37181 _37182 _37183.
Proof. exact (@lem3541357 A B _37181 _37182 _37183 _37163 t''' h1). Qed.
Lemma lem3541359 {A B : Type'} (u : A -> Prop) (f : A -> B) (g : type686 A) (_37163 : type627 A B) (t''' : type625 A B) (h1 : term4208 A B _37163 t''') : term4910 A B _37163 t''' u f g.
Proof. exact (@lem3541358 A B u f g _37163 t''' h1). Qed.
Lemma lem3541362 {A B : Type'} (t''' : type625 A B) (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) (g : type686 A) (h1 : term4208 A B _37163 t''') (h2 : term40 A g) (h3 : term2135 A B _37163 u f g) : term4791 A B _37163 t''' u f g.
Proof. exact (@lem3541359 A B u f g _37163 t''' h1 (@lem3541355 A B t''' _37163 u f g h1 h2 h3)). Qed.
Lemma lem3541363 {A B : Type'} (t''' : type625 A B) (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) (g : type686 A) (h1 : term4208 A B _37163 t''') (h2 : term40 A g) (h3 : term2135 A B _37163 u f g) : term4911 A B _37163 t''' u f g.
Proof. exact (fun h0 : term4789 A B _37163 t''' u f g => @lem3541362 A B t''' _37163 u f g h1 h2 h3). Qed.
Lemma lem3541365 (p : Prop) : (term4856 p) = (~ p).
Proof. exact (EQ_MP (@lem21028 p) (@lem21107 p)). Qed.
Lemma lem3541366 {A B : Type'} (_37163 : type627 A B) (t''' : type625 A B) (u : A -> Prop) (f : A -> B) (g : type686 A) : (term4911 A B _37163 t''' u f g) = (term4791 A B _37163 t''' u f g).
Proof. exact (@lem3541365 (term4789 A B _37163 t''' u f g)). Qed.
Lemma lem3541367 {A B : Type'} (t''' : type625 A B) (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) (g : type686 A) (h1 : term4208 A B _37163 t''') (h2 : term40 A g) (h3 : term2135 A B _37163 u f g) : term4791 A B _37163 t''' u f g.
Proof. exact (EQ_MP (@lem3541366 A B _37163 t''' u f g) (@lem3541363 A B t''' _37163 u f g h1 h2 h3)). Qed.
Lemma lem3541369 (b : Prop) (a : Prop) : (a \/ b) = (term833 b a).
Proof. exact (EQ_MP (@lem20682 b a) (@lem20764 b a)). Qed.
Lemma lem3541372 {A B : Type'} (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) (_37281 : A -> Prop) (g : type686 A) : (term4761 A B g _37163 u f _37281) = (term4912 A B _37163 u f _37281 g).
Proof. exact (@lem3541369 (term4756 A B _37163 u f _37281) (term4758 A _37281 g)). Qed.
Lemma lem3541375 {A B : Type'} (_37281 : A -> Prop) (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) (g : type686 A) (h1 : term2135 A B _37163 u f g) : term4912 A B _37163 u f _37281 g.
Proof. exact (EQ_MP (@lem3541372 A B _37163 u f _37281 g) (@lem3538021 A B _37281 _37163 u f g h1)). Qed.
Lemma lem3541376 {A B : Type'} (_37281 : A -> Prop) (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) (g : type686 A) (h1 : term2135 A B _37163 u f g) : term4912 A B _37163 u f _37281 g.
Proof. exact (@lem3541375 A B _37281 _37163 u f g h1). Qed.
Lemma lem3541377 {A B : Type'} (t''' : type625 A B) (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) (g : type686 A) (h1 : term2135 A B _37163 u f g) : term4913 A B _37163 t''' u f g.
Proof. exact (@lem3541376 A B (term4775 A B t''' u f g) _37163 u f g h1). Qed.
Lemma lem3541380 {A B : Type'} (t''' : type625 A B) (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) (g : type686 A) (h1 : term4208 A B _37163 t''') (h2 : term40 A g) (h3 : term2135 A B _37163 u f g) : term4873 A B t''' u f g.
Proof. exact (@lem3541377 A B t''' _37163 u f g h3 (@lem3541367 A B t''' _37163 u f g h1 h2 h3)). Qed.
Lemma lem3541381 {A B : Type'} (t''' : type625 A B) (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) (g : type686 A) (h1 : term4208 A B _37163 t''') (h2 : term40 A g) (h3 : term2135 A B _37163 u f g) : term4914 A B t''' u f g.
Proof. exact (fun h0 : term4811 A B t''' u f g => @lem3541380 A B t''' _37163 u f g h1 h2 h3). Qed.
Lemma lem3541383 (p : Prop) : (term4856 p) = (~ p).
Proof. exact (EQ_MP (@lem21028 p) (@lem21107 p)). Qed.
Lemma lem3541384 {A B : Type'} (t''' : type625 A B) (u : A -> Prop) (f : A -> B) (g : type686 A) : (term4914 A B t''' u f g) = (term4873 A B t''' u f g).
Proof. exact (@lem3541383 (term4811 A B t''' u f g)). Qed.
Lemma lem3541385 {A B : Type'} (t''' : type625 A B) (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) (g : type686 A) (h1 : term4208 A B _37163 t''') (h2 : term40 A g) (h3 : term2135 A B _37163 u f g) : term4873 A B t''' u f g.
Proof. exact (EQ_MP (@lem3541384 A B t''' u f g) (@lem3541381 A B t''' _37163 u f g h1 h2 h3)). Qed.
Lemma lem3541387 {A B : Type'} (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) (g : type686 A) (h1 : term2135 A B _37163 u f g) : term4746 A B f g.
Proof. exact (proj2 (@lem3530480 A B _37163 u f g h1)). Qed.
Lemma lem3541388 {A B : Type'} (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) (g : type686 A) (h1 : term2135 A B _37163 u f g) : term4857 A B f g.
Proof. exact (fun h0 : (term4735 A B f g) = (term4743 A B f g) => @lem3541387 A B _37163 u f g h1). Qed.
Lemma lem3541390 (p : Prop) : (term4856 p) = (~ p).
Proof. exact (EQ_MP (@lem21028 p) (@lem21107 p)). Qed.
Lemma lem3541391 {A B : Type'} (f : A -> B) (g : type686 A) : (term4857 A B f g) = (term4746 A B f g).
Proof. exact (@lem3541390 ((term4735 A B f g) = (term4743 A B f g))). Qed.
Lemma lem3541392 {A B : Type'} (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) (g : type686 A) (h1 : term2135 A B _37163 u f g) : term4746 A B f g.
Proof. exact (EQ_MP (@lem3541391 A B f g) (@lem3541388 A B _37163 u f g h1)). Qed.
Lemma lem3541394 (b : Prop) (a : Prop) : (a \/ b) = (term833 b a).
Proof. exact (EQ_MP (@lem20682 b a) (@lem20764 b a)). Qed.
Lemma lem3541395 {A B : Type'} (t''' : type625 A B) (_37181 : A -> Prop) (_37182 : A -> B) (_37183 : type686 A) : (term4850 A B t''' _37181 _37182 _37183) = (term4915 A B t''' _37181 _37182 _37183).
Proof. exact (@lem3541394 (term4858 A B t''' _37181 _37182 _37183) (_37183 = (@EMPTY (A -> Prop)))). Qed.
Lemma lem3541397 (a : Prop) (b : Prop) : (term887 a b) = (term888 a b).
Proof. exact (EQ_MP (@lem20789 a b) (@lem20895 a b)). Qed.
Lemma lem3541398 {A B : Type'} (t''' : type625 A B) (_37181 : A -> Prop) (_37182 : A -> B) (_37183 : type686 A) : (term4916 A B t''' _37181 _37182 _37183) = (term4917 A B t''' _37181 _37182 _37183).
Proof. exact (@lem3541397 (term4811 A B t''' _37181 _37182 _37183) ((term4735 A B _37182 _37183) = (term4743 A B _37182 _37183))). Qed.
Lemma lem3541399 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem3541400 {A B : Type'} (t''' : type625 A B) (_37181 : A -> Prop) (_37182 : A -> B) (_37183 : type686 A) : (term4918 A B t''' _37181 _37182 _37183) = (term4919 A B t''' _37181 _37182 _37183).
Proof. exact (MK_COMB (@lem3541399) (@lem3541398 A B t''' _37181 _37182 _37183)). Qed.
Lemma lem3541401 {A : Type'} (_37183 : type686 A) : (_37183 = (@EMPTY (A -> Prop))) = (_37183 = (@EMPTY (A -> Prop))).
Proof. exact (eq_refl (_37183 = (@EMPTY (A -> Prop)))). Qed.
Lemma lem3541402 {A B : Type'} (t''' : type625 A B) (_37181 : A -> Prop) (_37182 : A -> B) (_37183 : type686 A) : (term4915 A B t''' _37181 _37182 _37183) = (term4920 A B t''' _37181 _37182 _37183).
Proof. exact (MK_COMB (@lem3541400 A B t''' _37181 _37182 _37183) (@lem3541401 A _37183)). Qed.
Lemma lem3541403 {A B : Type'} (t''' : type625 A B) (_37181 : A -> Prop) (_37182 : A -> B) (_37183 : type686 A) : (term4850 A B t''' _37181 _37182 _37183) = (term4920 A B t''' _37181 _37182 _37183).
Proof. exact (TRANS (@lem3541395 A B t''' _37181 _37182 _37183) (@lem3541402 A B t''' _37181 _37182 _37183)). Qed.
Lemma lem3541405 {A B : Type'} (t''' : type625 A B) (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) (g : type686 A) (h1 : term4208 A B _37163 t''') (h2 : term40 A g) (h3 : term2135 A B _37163 u f g) : term4917 A B t''' u f g.
Proof. exact (conj (@lem3541385 A B t''' _37163 u f g h1 h2 h3) (@lem3541392 A B _37163 u f g h3)). Qed.
Lemma lem3541407 {A B : Type'} (_37181 : A -> Prop) (_37182 : A -> B) (_37183 : type686 A) (_37163 : type627 A B) (t''' : type625 A B) (h1 : term4208 A B _37163 t''') : term4920 A B t''' _37181 _37182 _37183.
Proof. exact (EQ_MP (@lem3541403 A B t''' _37181 _37182 _37183) (@lem3538183 A B _37181 _37182 _37183 _37163 t''' h1)). Qed.
Lemma lem3541408 {A B : Type'} (_37181 : A -> Prop) (_37182 : A -> B) (_37183 : type686 A) (_37163 : type627 A B) (t''' : type625 A B) (h1 : term4208 A B _37163 t''') : term4920 A B t''' _37181 _37182 _37183.
Proof. exact (@lem3541407 A B _37181 _37182 _37183 _37163 t''' h1). Qed.
Lemma lem3541409 {A B : Type'} (u : A -> Prop) (f : A -> B) (g : type686 A) (_37163 : type627 A B) (t''' : type625 A B) (h1 : term4208 A B _37163 t''') : term4920 A B t''' u f g.
Proof. exact (@lem3541408 A B u f g _37163 t''' h1). Qed.
Lemma lem3541412 {A B : Type'} (t''' : type625 A B) (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) (g : type686 A) (h1 : term4208 A B _37163 t''') (h2 : term40 A g) (h3 : term2135 A B _37163 u f g) : g = (@EMPTY (A -> Prop)).
Proof. exact (@lem3541409 A B u f g _37163 t''' h1 (@lem3541405 A B t''' _37163 u f g h1 h2 h3)). Qed.
Lemma lem3541413 {A B : Type'} (t''' : type625 A B) (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) (g : type686 A) (h1 : term4208 A B _37163 t''') (h2 : term2135 A B _37163 u f g) : term4921 A g.
Proof. exact (fun h0 : term40 A g => @lem3541412 A B t''' _37163 u f g h1 h0 h2). Qed.
Lemma lem3541415 (p : Prop) : (term828 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem3541416 {A : Type'} (g : type686 A) : (term4921 A g) = (g = (@EMPTY (A -> Prop))).
Proof. exact (@lem3541415 (g = (@EMPTY (A -> Prop)))). Qed.
Lemma lem3541417 {A B : Type'} (t''' : type625 A B) (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) (g : type686 A) (h1 : term4208 A B _37163 t''') (h2 : term2135 A B _37163 u f g) : g = (@EMPTY (A -> Prop)).
Proof. exact (EQ_MP (@lem3541416 A g) (@lem3541413 A B t''' _37163 u f g h1 h2)). Qed.
Lemma lem3541420 (p : Prop) : (~ p) = (p -> False).
Proof. exact (EQ_MP (@lem21021 p) (@lem0)). Qed.
Lemma lem3541422 {A : Type'} (g : type686 A) : (term40 A g) = (term4922 A g).
Proof. exact (@lem3541420 (g = (@EMPTY (A -> Prop)))). Qed.
Lemma lem3541425 {A B : Type'} (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) (g : type686 A) (h1 : term2135 A B _37163 u f g) : term4922 A g.
Proof. exact (EQ_MP (@lem3541422 A g) (@lem3538009 A B _37163 u f g h1)). Qed.
Lemma lem3541428 {A B : Type'} (t''' : type625 A B) (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) (g : type686 A) (h1 : term4208 A B _37163 t''') (h2 : term2135 A B _37163 u f g) : False.
Proof. exact (@lem3541425 A B _37163 u f g h2 (@lem3541417 A B t''' _37163 u f g h1 h2)). Qed.
Lemma lem3541429 {A B : Type'} (t''' : type625 A B) (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) (g : type686 A) (h1 : term4208 A B _37163 t''') (h2 : term2135 A B _37163 u f g) : term847.
Proof. exact (fun h0 : ~ False => @lem3541428 A B t''' _37163 u f g h1 h2). Qed.
Lemma lem3541431 (p : Prop) : (term828 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem3541432 : term847 = False.
Proof. exact (@lem3541431 False). Qed.
Lemma lem3541433 {A B : Type'} (t''' : type625 A B) (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) (g : type686 A) (h1 : term4208 A B _37163 t''') (h2 : term2135 A B _37163 u f g) : False.
Proof. exact (EQ_MP (@lem3541432) (@lem3541429 A B t''' _37163 u f g h1 h2)). Qed.
Lemma lem3541434 {A B : Type'} (t''' : type625 A B) (_37171 : type171 A B) (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) (g : type686 A) (h1 : term4208 A B _37163 t''') (h2 : term2867 A B _37171) (h3 : term2135 A B _37163 u f g) : False.
Proof. exact (ex_elim (@lem3520846 A B _37171 h2) (fun x'''''''' : type170 A B => fun h0 : term3115 A B _37171 x'''''''' => @lem3541433 A B t''' _37163 u f g h1 h3)). Qed.
Lemma lem3541435 {_90724 A B : Type'} (t''' : type625 A B) (_37170 : type235 _90724 A) (_37171 : type171 A B) (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) (g : type686 A) (h1 : term4208 A B _37163 t''') (h2 : term2737 _90724 A _37170) (h3 : term2867 A B _37171) (h4 : term2135 A B _37163 u f g) : False.
Proof. exact (ex_elim (@lem3521664 _90724 A _37170 h2) (fun x''''''' : type234 _90724 A => fun h0 : term3351 _90724 A _37170 x''''''' => @lem3541434 A B t''' _37171 _37163 u f g h1 h3 h4)). Qed.
Lemma lem3541436 {_90724 A B : Type'} (t''' : type625 A B) (_37169 : type852 _90724 B) (_37170 : type235 _90724 A) (_37171 : type171 A B) (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) (g : type686 A) (h1 : term4208 A B _37163 t''') (h2 : term2553 _90724 B _37169) (h3 : term2737 _90724 A _37170) (h4 : term2867 A B _37171) (h5 : term2135 A B _37163 u f g) : False.
Proof. exact (ex_elim (@lem3522482 _90724 B _37169 h2) (fun x'''''' : type851 _90724 B => fun h0 : term3591 _90724 B _37169 x'''''' => @lem3541435 _90724 A B t''' _37170 _37171 _37163 u f g h1 h3 h4 h5)). Qed.
Lemma lem3541437 {_90724 A B : Type'} (_37168 : type852 _90724 A) (t''' : type625 A B) (_37169 : type852 _90724 B) (_37170 : type235 _90724 A) (_37171 : type171 A B) (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) (g : type686 A) (h1 : term2553 _90724 A _37168) (h2 : term4208 A B _37163 t''') (h3 : term2553 _90724 B _37169) (h4 : term2737 _90724 A _37170) (h5 : term2867 A B _37171) (h6 : term2135 A B _37163 u f g) : False.
Proof. exact (ex_elim (@lem3523300 _90724 A _37168 h1) (fun x''''' : type851 _90724 A => fun h0 : term3591 _90724 A _37168 x''''' => @lem3541436 _90724 A B t''' _37169 _37170 _37171 _37163 u f g h2 h3 h4 h5 h6)). Qed.
Lemma lem3541438 {_90715 _90724 A B : Type'} (_37167 : type616 _90715 A) (_37168 : type852 _90724 A) (t''' : type625 A B) (_37169 : type852 _90724 B) (_37170 : type235 _90724 A) (_37171 : type171 A B) (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) (g : type686 A) (h1 : term2435 _90715 A _37167) (h2 : term2553 _90724 A _37168) (h3 : term4208 A B _37163 t''') (h4 : term2553 _90724 B _37169) (h5 : term2737 _90724 A _37170) (h6 : term2867 A B _37171) (h7 : term2135 A B _37163 u f g) : False.
Proof. exact (ex_elim (@lem3524118 _90715 A _37167 h1) (fun x'''' : type615 _90715 A => fun h0 : term3827 _90715 A _37167 x'''' => @lem3541437 _90724 A B _37168 t''' _37169 _37170 _37171 _37163 u f g h2 h3 h4 h5 h6 h7)). Qed.
Lemma lem3541439 {_90715 _90724 A B : Type'} (_37166 : type627 _90715 B) (_37167 : type616 _90715 A) (_37168 : type852 _90724 A) (t''' : type625 A B) (_37169 : type852 _90724 B) (_37170 : type235 _90724 A) (_37171 : type171 A B) (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) (g : type686 A) (h1 : term2210 _90715 B _37166) (h2 : term2435 _90715 A _37167) (h3 : term2553 _90724 A _37168) (h4 : term4208 A B _37163 t''') (h5 : term2553 _90724 B _37169) (h6 : term2737 _90724 A _37170) (h7 : term2867 A B _37171) (h8 : term2135 A B _37163 u f g) : False.
Proof. exact (ex_elim (@lem3524936 _90715 B _37166 h1) (fun x''' : type626 _90715 B => fun h0 : term4063 _90715 B _37166 x''' => @lem3541438 _90715 _90724 A B _37167 _37168 t''' _37169 _37170 _37171 _37163 u f g h2 h3 h4 h5 h6 h7 h8)). Qed.
Lemma lem3541440 {_90715 _90724 A B : Type'} (_37165 : type627 _90715 A) (_37166 : type627 _90715 B) (_37167 : type616 _90715 A) (_37168 : type852 _90724 A) (t''' : type625 A B) (_37169 : type852 _90724 B) (_37170 : type235 _90724 A) (_37171 : type171 A B) (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) (g : type686 A) (h1 : term2210 _90715 A _37165) (h2 : term2210 _90715 B _37166) (h3 : term2435 _90715 A _37167) (h4 : term2553 _90724 A _37168) (h5 : term4208 A B _37163 t''') (h6 : term2553 _90724 B _37169) (h7 : term2737 _90724 A _37170) (h8 : term2867 A B _37171) (h9 : term2135 A B _37163 u f g) : False.
Proof. exact (ex_elim (@lem3525754 _90715 A _37165 h1) (fun x'' : type626 _90715 A => fun h0 : term4063 _90715 A _37165 x'' => @lem3541439 _90715 _90724 A B _37166 _37167 _37168 t''' _37169 _37170 _37171 _37163 u f g h2 h3 h4 h5 h6 h7 h8 h9)). Qed.
Lemma lem3541441 {_90715 _90724 A B : Type'} (_37164 : type627 _90715 _90724) (_37165 : type627 _90715 A) (_37166 : type627 _90715 B) (_37167 : type616 _90715 A) (_37168 : type852 _90724 A) (t''' : type625 A B) (_37169 : type852 _90724 B) (_37170 : type235 _90724 A) (_37171 : type171 A B) (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) (g : type686 A) (h1 : term2210 _90715 _90724 _37164) (h2 : term2210 _90715 A _37165) (h3 : term2210 _90715 B _37166) (h4 : term2435 _90715 A _37167) (h5 : term2553 _90724 A _37168) (h6 : term4208 A B _37163 t''') (h7 : term2553 _90724 B _37169) (h8 : term2737 _90724 A _37170) (h9 : term2867 A B _37171) (h10 : term2135 A B _37163 u f g) : False.
Proof. exact (ex_elim (@lem3526572 _90715 _90724 _37164 h1) (fun x' : type626 _90715 _90724 => fun h0 : term4063 _90715 _90724 _37164 x' => @lem3541440 _90715 _90724 A B _37165 _37166 _37167 _37168 t''' _37169 _37170 _37171 _37163 u f g h2 h3 h4 h5 h6 h7 h8 h9 h10)). Qed.
Lemma lem3541442 {_90715 _90724 A B : Type'} (_37164 : type627 _90715 _90724) (_37165 : type627 _90715 A) (_37166 : type627 _90715 B) (_37167 : type616 _90715 A) (_37168 : type852 _90724 A) (t''' : type625 A B) (_37169 : type852 _90724 B) (_37170 : type235 _90724 A) (_37171 : type171 A B) (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) (g : type686 A) (h1 : term2210 _90715 _90724 _37164) (h2 : term2210 _90715 A _37165) (h3 : term2210 _90715 B _37166) (h4 : term2435 _90715 A _37167) (h5 : term2553 _90724 A _37168) (h6 : term2210 A B _37163) (h7 : term4208 A B _37163 t''') (h8 : term2553 _90724 B _37169) (h9 : term2737 _90724 A _37170) (h10 : term2867 A B _37171) (h11 : term2135 A B _37163 u f g) : False.
Proof. exact (ex_elim (@lem3527390 A B _37163 h6) (fun x : type626 A B => fun h0 : term4063 A B _37163 x => @lem3541441 _90715 _90724 A B _37164 _37165 _37166 _37167 _37168 t''' _37169 _37170 _37171 _37163 u f g h1 h2 h3 h4 h5 h7 h8 h9 h10 h11)). Qed.
Lemma lem3541443 {_90715 _90724 A B : Type'} (_37164 : type627 _90715 _90724) (_37165 : type627 _90715 A) (_37166 : type627 _90715 B) (_37167 : type616 _90715 A) (_37168 : type852 _90724 A) (t''' : type625 A B) (_37169 : type852 _90724 B) (_37170 : type235 _90724 A) (_37171 : type171 A B) (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) (g : type686 A) (h1 : term2210 _90715 _90724 _37164) (h2 : term2095 _90715 _90724 _37164) (h3 : term2210 _90715 A _37165) (h4 : term2210 _90715 B _37166) (h5 : term2435 _90715 A _37167) (h6 : term2553 _90724 A _37168) (h7 : term2210 A B _37163) (h8 : term4208 A B _37163 t''') (h9 : term2553 _90724 B _37169) (h10 : term2737 _90724 A _37170) (h11 : term2867 A B _37171) (h12 : term2135 A B _37163 u f g) : False.
Proof. exact (ex_elim (@lem3527829 _90715 _90724 _37164 h2) (fun t'''''''' : type625 _90715 _90724 => fun h0 : term4210 _90715 _90724 _37164 t'''''''' => @lem3541442 _90715 _90724 A B _37164 _37165 _37166 _37167 _37168 t''' _37169 _37170 _37171 _37163 u f g h1 h3 h4 h5 h6 h7 h8 h9 h10 h11 h12)). Qed.
Lemma lem3541444 {_90715 _90724 A B : Type'} (_37164 : type627 _90715 _90724) (_37165 : type627 _90715 A) (_37166 : type627 _90715 B) (_37167 : type616 _90715 A) (_37168 : type852 _90724 A) (t''' : type625 A B) (_37169 : type852 _90724 B) (_37170 : type235 _90724 A) (_37171 : type171 A B) (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) (g : type686 A) (h1 : term2210 _90715 _90724 _37164) (h2 : term2095 _90715 _90724 _37164) (h3 : term2210 _90715 A _37165) (h4 : term2095 _90715 A _37165) (h5 : term2210 _90715 B _37166) (h6 : term2435 _90715 A _37167) (h7 : term2553 _90724 A _37168) (h8 : term2210 A B _37163) (h9 : term4208 A B _37163 t''') (h10 : term2553 _90724 B _37169) (h11 : term2737 _90724 A _37170) (h12 : term2867 A B _37171) (h13 : term2135 A B _37163 u f g) : False.
Proof. exact (ex_elim (@lem3528134 _90715 A _37165 h4) (fun t''''''' : type625 _90715 A => fun h0 : term4210 _90715 A _37165 t''''''' => @lem3541443 _90715 _90724 A B _37164 _37165 _37166 _37167 _37168 t''' _37169 _37170 _37171 _37163 u f g h1 h2 h3 h5 h6 h7 h8 h9 h10 h11 h12 h13)). Qed.
Lemma lem3541445 {_90715 _90724 A B : Type'} (_37164 : type627 _90715 _90724) (_37165 : type627 _90715 A) (_37166 : type627 _90715 B) (_37167 : type616 _90715 A) (_37168 : type852 _90724 A) (t''' : type625 A B) (_37169 : type852 _90724 B) (_37170 : type235 _90724 A) (_37171 : type171 A B) (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) (g : type686 A) (h1 : term2210 _90715 _90724 _37164) (h2 : term2095 _90715 _90724 _37164) (h3 : term2210 _90715 A _37165) (h4 : term2095 _90715 A _37165) (h5 : term2210 _90715 B _37166) (h6 : term2095 _90715 B _37166) (h7 : term2435 _90715 A _37167) (h8 : term2553 _90724 A _37168) (h9 : term2210 A B _37163) (h10 : term4208 A B _37163 t''') (h11 : term2553 _90724 B _37169) (h12 : term2737 _90724 A _37170) (h13 : term2867 A B _37171) (h14 : term2135 A B _37163 u f g) : False.
Proof. exact (ex_elim (@lem3528439 _90715 B _37166 h6) (fun t'''''' : type625 _90715 B => fun h0 : term4210 _90715 B _37166 t'''''' => @lem3541444 _90715 _90724 A B _37164 _37165 _37166 _37167 _37168 t''' _37169 _37170 _37171 _37163 u f g h1 h2 h3 h4 h5 h7 h8 h9 h10 h11 h12 h13 h14)). Qed.
Lemma lem3541446 {_90715 _90724 A B : Type'} (_37164 : type627 _90715 _90724) (_37165 : type627 _90715 A) (_37166 : type627 _90715 B) (_37167 : type616 _90715 A) (_37168 : type852 _90724 A) (t''' : type625 A B) (_37169 : type852 _90724 B) (_37170 : type235 _90724 A) (_37171 : type171 A B) (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) (g : type686 A) (h1 : term2210 _90715 _90724 _37164) (h2 : term2095 _90715 _90724 _37164) (h3 : term2210 _90715 A _37165) (h4 : term2095 _90715 A _37165) (h5 : term2210 _90715 B _37166) (h6 : term2095 _90715 B _37166) (h7 : term2435 _90715 A _37167) (h8 : term2350 _90715 A _37167) (h9 : term2553 _90724 A _37168) (h10 : term2210 A B _37163) (h11 : term4208 A B _37163 t''') (h12 : term2553 _90724 B _37169) (h13 : term2737 _90724 A _37170) (h14 : term2867 A B _37171) (h15 : term2135 A B _37163 u f g) : False.
Proof. exact (ex_elim (@lem3528744 _90715 A _37167 h8) (fun t''''' : type613 _90715 A => fun h0 : term4337 _90715 A _37167 t''''' => @lem3541445 _90715 _90724 A B _37164 _37165 _37166 _37167 _37168 t''' _37169 _37170 _37171 _37163 u f g h1 h2 h3 h4 h5 h6 h7 h9 h10 h11 h12 h13 h14 h15)). Qed.
Lemma lem3541447 {_90715 _90724 A B : Type'} (_37164 : type627 _90715 _90724) (_37165 : type627 _90715 A) (_37166 : type627 _90715 B) (_37167 : type616 _90715 A) (_37168 : type852 _90724 A) (t''' : type625 A B) (_37169 : type852 _90724 B) (_37170 : type235 _90724 A) (_37171 : type171 A B) (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) (g : type686 A) (h1 : term2210 _90715 _90724 _37164) (h2 : term2095 _90715 _90724 _37164) (h3 : term2210 _90715 A _37165) (h4 : term2095 _90715 A _37165) (h5 : term2210 _90715 B _37166) (h6 : term2095 _90715 B _37166) (h7 : term2435 _90715 A _37167) (h8 : term2350 _90715 A _37167) (h9 : term2553 _90724 A _37168) (h10 : term2464 _90724 A _37168) (h11 : term2210 A B _37163) (h12 : term4208 A B _37163 t''') (h13 : term2553 _90724 B _37169) (h14 : term2737 _90724 A _37170) (h15 : term2867 A B _37171) (h16 : term2135 A B _37163 u f g) : False.
Proof. exact (ex_elim (@lem3529049 _90724 A _37168 h10) (fun t'''' : type847 _90724 A => fun h0 : term4464 _90724 A _37168 t'''' => @lem3541446 _90715 _90724 A B _37164 _37165 _37166 _37167 _37168 t''' _37169 _37170 _37171 _37163 u f g h1 h2 h3 h4 h5 h6 h7 h8 h9 h11 h12 h13 h14 h15 h16)). Qed.
Lemma lem3541448 {_90715 _90724 A B : Type'} (_37164 : type627 _90715 _90724) (_37165 : type627 _90715 A) (_37166 : type627 _90715 B) (_37167 : type616 _90715 A) (_37168 : type852 _90724 A) (_37169 : type852 _90724 B) (_37170 : type235 _90724 A) (_37171 : type171 A B) (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) (g : type686 A) (h1 : term2210 _90715 _90724 _37164) (h2 : term2095 _90715 _90724 _37164) (h3 : term2210 _90715 A _37165) (h4 : term2095 _90715 A _37165) (h5 : term2210 _90715 B _37166) (h6 : term2095 _90715 B _37166) (h7 : term2435 _90715 A _37167) (h8 : term2350 _90715 A _37167) (h9 : term2553 _90724 A _37168) (h10 : term2464 _90724 A _37168) (h11 : term2210 A B _37163) (h12 : term2095 A B _37163) (h13 : term2553 _90724 B _37169) (h14 : term2737 _90724 A _37170) (h15 : term2867 A B _37171) (h16 : term2135 A B _37163 u f g) : False.
Proof. exact (ex_elim (@lem3529354 A B _37163 h12) (fun t''' : type625 A B => fun h0 : term4210 A B _37163 t''' => @lem3541447 _90715 _90724 A B _37164 _37165 _37166 _37167 _37168 t''' _37169 _37170 _37171 _37163 u f g h1 h2 h3 h4 h5 h6 h7 h8 h9 h10 h11 h0 h13 h14 h15 h16)). Qed.
Lemma lem3541449 {_90715 _90724 A B : Type'} (_37164 : type627 _90715 _90724) (_37165 : type627 _90715 A) (_37166 : type627 _90715 B) (_37167 : type616 _90715 A) (_37168 : type852 _90724 A) (_37169 : type852 _90724 B) (_37170 : type235 _90724 A) (_37171 : type171 A B) (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) (g : type686 A) (h1 : term2210 _90715 _90724 _37164) (h2 : term2095 _90715 _90724 _37164) (h3 : term2210 _90715 A _37165) (h4 : term2095 _90715 A _37165) (h5 : term2210 _90715 B _37166) (h6 : term2095 _90715 B _37166) (h7 : term2435 _90715 A _37167) (h8 : term2350 _90715 A _37167) (h9 : term2553 _90724 A _37168) (h10 : term2464 _90724 A _37168) (h11 : term2210 A B _37163) (h12 : term2095 A B _37163) (h13 : term2553 _90724 B _37169) (h14 : term2464 _90724 B _37169) (h15 : term2737 _90724 A _37170) (h16 : term2867 A B _37171) (h17 : term2135 A B _37163 u f g) : False.
Proof. exact (ex_elim (@lem3529659 _90724 B _37169 h14) (fun t'' : type847 _90724 B => fun h0 : term4464 _90724 B _37169 t'' => @lem3541448 _90715 _90724 A B _37164 _37165 _37166 _37167 _37168 _37169 _37170 _37171 _37163 u f g h1 h2 h3 h4 h5 h6 h7 h8 h9 h10 h11 h12 h13 h15 h16 h17)). Qed.
Lemma lem3541450 {_90715 _90724 A B : Type'} (_37164 : type627 _90715 _90724) (_37165 : type627 _90715 A) (_37166 : type627 _90715 B) (_37167 : type616 _90715 A) (_37168 : type852 _90724 A) (_37169 : type852 _90724 B) (_37170 : type235 _90724 A) (_37171 : type171 A B) (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) (g : type686 A) (h1 : term2210 _90715 _90724 _37164) (h2 : term2095 _90715 _90724 _37164) (h3 : term2210 _90715 A _37165) (h4 : term2095 _90715 A _37165) (h5 : term2210 _90715 B _37166) (h6 : term2095 _90715 B _37166) (h7 : term2435 _90715 A _37167) (h8 : term2350 _90715 A _37167) (h9 : term2553 _90724 A _37168) (h10 : term2464 _90724 A _37168) (h11 : term2210 A B _37163) (h12 : term2095 A B _37163) (h13 : term2553 _90724 B _37169) (h14 : term2464 _90724 B _37169) (h15 : term2737 _90724 A _37170) (h16 : term2636 _90724 A _37170) (h17 : term2867 A B _37171) (h18 : term2135 A B _37163 u f g) : False.
Proof. exact (ex_elim (@lem3529964 _90724 A _37170 h16) (fun t' : type233 _90724 A => fun h0 : term4604 _90724 A _37170 t' => @lem3541449 _90715 _90724 A B _37164 _37165 _37166 _37167 _37168 _37169 _37170 _37171 _37163 u f g h1 h2 h3 h4 h5 h6 h7 h8 h9 h10 h11 h12 h13 h14 h15 h17 h18)). Qed.
Lemma lem3541451 {_90715 _90724 A B : Type'} (_37164 : type627 _90715 _90724) (_37165 : type627 _90715 A) (_37166 : type627 _90715 B) (_37167 : type616 _90715 A) (_37168 : type852 _90724 A) (_37169 : type852 _90724 B) (_37170 : type235 _90724 A) (_37171 : type171 A B) (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) (g : type686 A) (h1 : term2210 _90715 _90724 _37164) (h2 : term2095 _90715 _90724 _37164) (h3 : term2210 _90715 A _37165) (h4 : term2095 _90715 A _37165) (h5 : term2210 _90715 B _37166) (h6 : term2095 _90715 B _37166) (h7 : term2435 _90715 A _37167) (h8 : term2350 _90715 A _37167) (h9 : term2553 _90724 A _37168) (h10 : term2464 _90724 A _37168) (h11 : term2210 A B _37163) (h12 : term2095 A B _37163) (h13 : term2553 _90724 B _37169) (h14 : term2464 _90724 B _37169) (h15 : term2737 _90724 A _37170) (h16 : term2636 _90724 A _37170) (h17 : term2867 A B _37171) (h18 : term2766 A B _37171) (h19 : term2135 A B _37163 u f g) : False.
Proof. exact (ex_elim (@lem3530269 A B _37171 h18) (fun t : type169 A B => fun h0 : term4731 A B _37171 t => @lem3541450 _90715 _90724 A B _37164 _37165 _37166 _37167 _37168 _37169 _37170 _37171 _37163 u f g h1 h2 h3 h4 h5 h6 h7 h8 h9 h10 h11 h12 h13 h14 h15 h16 h17 h19)). Qed.
Lemma lem3541452 {_90715 _90724 A B : Type'} (_37164 : type627 _90715 _90724) (_37165 : type627 _90715 A) (_37166 : type627 _90715 B) (_37167 : type616 _90715 A) (_37168 : type852 _90724 A) (_37169 : type852 _90724 B) (_37170 : type235 _90724 A) (_37171 : type171 A B) (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) (g : type686 A) (h1 : term2210 _90715 _90724 _37164) (h2 : term2095 _90715 _90724 _37164) (h3 : term2210 _90715 A _37165) (h4 : term2095 _90715 A _37165) (h5 : term2210 _90715 B _37166) (h6 : term2095 _90715 B _37166) (h7 : term2435 _90715 A _37167) (h8 : term2350 _90715 A _37167) (h9 : term2553 _90724 A _37168) (h10 : term2464 _90724 A _37168) (h11 : term2210 A B _37163) (h12 : term2095 A B _37163) (h13 : term2553 _90724 B _37169) (h14 : term2464 _90724 B _37169) (h15 : term2737 _90724 A _37170) (h16 : term2636 _90724 A _37170) (h17 : term2867 A B _37171) (h18 : term2135 A B _37163 u f g) : term4923 A B _37171.
Proof. exact (fun h0 : term2766 A B _37171 => @lem3541451 _90715 _90724 A B _37164 _37165 _37166 _37167 _37168 _37169 _37170 _37171 _37163 u f g h1 h2 h3 h4 h5 h6 h7 h8 h9 h10 h11 h12 h13 h14 h15 h16 h17 h0 h18). Qed.
Lemma lem3541453 {A B : Type'} (_37171 : type171 A B) : (term4923 A B _37171) = (term2767 A B _37171).
Proof. exact (@lem69 (term2766 A B _37171)). Qed.
Lemma lem3541454 {_90715 _90724 A B : Type'} (_37164 : type627 _90715 _90724) (_37165 : type627 _90715 A) (_37166 : type627 _90715 B) (_37167 : type616 _90715 A) (_37168 : type852 _90724 A) (_37169 : type852 _90724 B) (_37170 : type235 _90724 A) (_37171 : type171 A B) (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) (g : type686 A) (h1 : term2210 _90715 _90724 _37164) (h2 : term2095 _90715 _90724 _37164) (h3 : term2210 _90715 A _37165) (h4 : term2095 _90715 A _37165) (h5 : term2210 _90715 B _37166) (h6 : term2095 _90715 B _37166) (h7 : term2435 _90715 A _37167) (h8 : term2350 _90715 A _37167) (h9 : term2553 _90724 A _37168) (h10 : term2464 _90724 A _37168) (h11 : term2210 A B _37163) (h12 : term2095 A B _37163) (h13 : term2553 _90724 B _37169) (h14 : term2464 _90724 B _37169) (h15 : term2737 _90724 A _37170) (h16 : term2636 _90724 A _37170) (h17 : term2867 A B _37171) (h18 : term2135 A B _37163 u f g) : term2767 A B _37171.
Proof. exact (EQ_MP (@lem3541453 A B _37171) (@lem3541452 _90715 _90724 A B _37164 _37165 _37166 _37167 _37168 _37169 _37170 _37171 _37163 u f g h1 h2 h3 h4 h5 h6 h7 h8 h9 h10 h11 h12 h13 h14 h15 h16 h17 h18)). Qed.
Lemma lem3541455 {_90715 _90724 A B : Type'} (_37164 : type627 _90715 _90724) (_37165 : type627 _90715 A) (_37166 : type627 _90715 B) (_37167 : type616 _90715 A) (_37168 : type852 _90724 A) (_37169 : type852 _90724 B) (_37170 : type235 _90724 A) (_37171 : type171 A B) (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) (g : type686 A) (h1 : term2210 _90715 _90724 _37164) (h2 : term2095 _90715 _90724 _37164) (h3 : term2210 _90715 A _37165) (h4 : term2095 _90715 A _37165) (h5 : term2210 _90715 B _37166) (h6 : term2095 _90715 B _37166) (h7 : term2435 _90715 A _37167) (h8 : term2350 _90715 A _37167) (h9 : term2553 _90724 A _37168) (h10 : term2464 _90724 A _37168) (h11 : term2210 A B _37163) (h12 : term2095 A B _37163) (h13 : term2553 _90724 B _37169) (h14 : term2464 _90724 B _37169) (h15 : term2737 _90724 A _37170) (h16 : term2867 A B _37171) (h17 : term2135 A B _37163 u f g) : term2768 _90724 A B _37170 _37171.
Proof. exact (fun h0 : term2636 _90724 A _37170 => @lem3541454 _90715 _90724 A B _37164 _37165 _37166 _37167 _37168 _37169 _37170 _37171 _37163 u f g h1 h2 h3 h4 h5 h6 h7 h8 h9 h10 h11 h12 h13 h14 h15 h0 h16 h17). Qed.
Lemma lem3541456 {_90715 _90724 A B : Type'} (_37164 : type627 _90715 _90724) (_37165 : type627 _90715 A) (_37166 : type627 _90715 B) (_37167 : type616 _90715 A) (_37168 : type852 _90724 A) (_37169 : type852 _90724 B) (_37170 : type235 _90724 A) (_37171 : type171 A B) (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) (g : type686 A) (h1 : term2210 _90715 _90724 _37164) (h2 : term2095 _90715 _90724 _37164) (h3 : term2210 _90715 A _37165) (h4 : term2095 _90715 A _37165) (h5 : term2210 _90715 B _37166) (h6 : term2095 _90715 B _37166) (h7 : term2435 _90715 A _37167) (h8 : term2350 _90715 A _37167) (h9 : term2553 _90724 A _37168) (h10 : term2464 _90724 A _37168) (h11 : term2210 A B _37163) (h12 : term2095 A B _37163) (h13 : term2553 _90724 B _37169) (h14 : term2737 _90724 A _37170) (h15 : term2867 A B _37171) (h16 : term2135 A B _37163 u f g) : term2769 _90724 A B _37169 _37170 _37171.
Proof. exact (fun h0 : term2464 _90724 B _37169 => @lem3541455 _90715 _90724 A B _37164 _37165 _37166 _37167 _37168 _37169 _37170 _37171 _37163 u f g h1 h2 h3 h4 h5 h6 h7 h8 h9 h10 h11 h12 h13 h0 h14 h15 h16). Qed.
Lemma lem3541457 {_90715 _90724 A B : Type'} (_37164 : type627 _90715 _90724) (_37165 : type627 _90715 A) (_37166 : type627 _90715 B) (_37167 : type616 _90715 A) (_37168 : type852 _90724 A) (_37169 : type852 _90724 B) (_37170 : type235 _90724 A) (_37171 : type171 A B) (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) (g : type686 A) (h1 : term2210 _90715 _90724 _37164) (h2 : term2095 _90715 _90724 _37164) (h3 : term2210 _90715 A _37165) (h4 : term2095 _90715 A _37165) (h5 : term2210 _90715 B _37166) (h6 : term2095 _90715 B _37166) (h7 : term2435 _90715 A _37167) (h8 : term2350 _90715 A _37167) (h9 : term2553 _90724 A _37168) (h10 : term2464 _90724 A _37168) (h11 : term2210 A B _37163) (h12 : term2553 _90724 B _37169) (h13 : term2737 _90724 A _37170) (h14 : term2867 A B _37171) (h15 : term2135 A B _37163 u f g) : term2770 _90724 A B _37163 _37169 _37170 _37171.
Proof. exact (fun h0 : term2095 A B _37163 => @lem3541456 _90715 _90724 A B _37164 _37165 _37166 _37167 _37168 _37169 _37170 _37171 _37163 u f g h1 h2 h3 h4 h5 h6 h7 h8 h9 h10 h11 h0 h12 h13 h14 h15). Qed.
Lemma lem3541458 {_90715 _90724 A B : Type'} (_37164 : type627 _90715 _90724) (_37165 : type627 _90715 A) (_37166 : type627 _90715 B) (_37167 : type616 _90715 A) (_37168 : type852 _90724 A) (_37169 : type852 _90724 B) (_37170 : type235 _90724 A) (_37171 : type171 A B) (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) (g : type686 A) (h1 : term2210 _90715 _90724 _37164) (h2 : term2095 _90715 _90724 _37164) (h3 : term2210 _90715 A _37165) (h4 : term2095 _90715 A _37165) (h5 : term2210 _90715 B _37166) (h6 : term2095 _90715 B _37166) (h7 : term2435 _90715 A _37167) (h8 : term2350 _90715 A _37167) (h9 : term2553 _90724 A _37168) (h10 : term2210 A B _37163) (h11 : term2553 _90724 B _37169) (h12 : term2737 _90724 A _37170) (h13 : term2867 A B _37171) (h14 : term2135 A B _37163 u f g) : term2771 _90724 A B _37168 _37163 _37169 _37170 _37171.
Proof. exact (fun h0 : term2464 _90724 A _37168 => @lem3541457 _90715 _90724 A B _37164 _37165 _37166 _37167 _37168 _37169 _37170 _37171 _37163 u f g h1 h2 h3 h4 h5 h6 h7 h8 h9 h0 h10 h11 h12 h13 h14). Qed.
Lemma lem3541459 {_90715 _90724 A B : Type'} (_37164 : type627 _90715 _90724) (_37165 : type627 _90715 A) (_37166 : type627 _90715 B) (_37167 : type616 _90715 A) (_37168 : type852 _90724 A) (_37169 : type852 _90724 B) (_37170 : type235 _90724 A) (_37171 : type171 A B) (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) (g : type686 A) (h1 : term2210 _90715 _90724 _37164) (h2 : term2095 _90715 _90724 _37164) (h3 : term2210 _90715 A _37165) (h4 : term2095 _90715 A _37165) (h5 : term2210 _90715 B _37166) (h6 : term2095 _90715 B _37166) (h7 : term2435 _90715 A _37167) (h8 : term2553 _90724 A _37168) (h9 : term2210 A B _37163) (h10 : term2553 _90724 B _37169) (h11 : term2737 _90724 A _37170) (h12 : term2867 A B _37171) (h13 : term2135 A B _37163 u f g) : term2772 _90715 _90724 A B _37167 _37168 _37163 _37169 _37170 _37171.
Proof. exact (fun h0 : term2350 _90715 A _37167 => @lem3541458 _90715 _90724 A B _37164 _37165 _37166 _37167 _37168 _37169 _37170 _37171 _37163 u f g h1 h2 h3 h4 h5 h6 h7 h0 h8 h9 h10 h11 h12 h13). Qed.
Lemma lem3541460 {_90715 _90724 A B : Type'} (_37164 : type627 _90715 _90724) (_37165 : type627 _90715 A) (_37166 : type627 _90715 B) (_37167 : type616 _90715 A) (_37168 : type852 _90724 A) (_37169 : type852 _90724 B) (_37170 : type235 _90724 A) (_37171 : type171 A B) (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) (g : type686 A) (h1 : term2210 _90715 _90724 _37164) (h2 : term2095 _90715 _90724 _37164) (h3 : term2210 _90715 A _37165) (h4 : term2095 _90715 A _37165) (h5 : term2210 _90715 B _37166) (h6 : term2435 _90715 A _37167) (h7 : term2553 _90724 A _37168) (h8 : term2210 A B _37163) (h9 : term2553 _90724 B _37169) (h10 : term2737 _90724 A _37170) (h11 : term2867 A B _37171) (h12 : term2135 A B _37163 u f g) : term2773 _90715 _90724 A B _37166 _37167 _37168 _37163 _37169 _37170 _37171.
Proof. exact (fun h0 : term2095 _90715 B _37166 => @lem3541459 _90715 _90724 A B _37164 _37165 _37166 _37167 _37168 _37169 _37170 _37171 _37163 u f g h1 h2 h3 h4 h5 h0 h6 h7 h8 h9 h10 h11 h12). Qed.
Lemma lem3541461 {_90715 _90724 A B : Type'} (_37164 : type627 _90715 _90724) (_37165 : type627 _90715 A) (_37166 : type627 _90715 B) (_37167 : type616 _90715 A) (_37168 : type852 _90724 A) (_37169 : type852 _90724 B) (_37170 : type235 _90724 A) (_37171 : type171 A B) (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) (g : type686 A) (h1 : term2210 _90715 _90724 _37164) (h2 : term2095 _90715 _90724 _37164) (h3 : term2210 _90715 A _37165) (h4 : term2210 _90715 B _37166) (h5 : term2435 _90715 A _37167) (h6 : term2553 _90724 A _37168) (h7 : term2210 A B _37163) (h8 : term2553 _90724 B _37169) (h9 : term2737 _90724 A _37170) (h10 : term2867 A B _37171) (h11 : term2135 A B _37163 u f g) : term2774 _90715 _90724 A B _37165 _37166 _37167 _37168 _37163 _37169 _37170 _37171.
Proof. exact (fun h0 : term2095 _90715 A _37165 => @lem3541460 _90715 _90724 A B _37164 _37165 _37166 _37167 _37168 _37169 _37170 _37171 _37163 u f g h1 h2 h3 h0 h4 h5 h6 h7 h8 h9 h10 h11). Qed.
Lemma lem3541462 {_90715 _90724 A B : Type'} (_37164 : type627 _90715 _90724) (_37165 : type627 _90715 A) (_37166 : type627 _90715 B) (_37167 : type616 _90715 A) (_37168 : type852 _90724 A) (_37169 : type852 _90724 B) (_37170 : type235 _90724 A) (_37171 : type171 A B) (_37163 : type627 A B) (u : A -> Prop) (f : A -> B) (g : type686 A) (h1 : term2210 _90715 _90724 _37164) (h2 : term2210 _90715 A _37165) (h3 : term2210 _90715 B _37166) (h4 : term2435 _90715 A _37167) (h5 : term2553 _90724 A _37168) (h6 : term2210 A B _37163) (h7 : term2553 _90724 B _37169) (h8 : term2737 _90724 A _37170) (h9 : term2867 A B _37171) (h10 : term2135 A B _37163 u f g) : term2775 _90715 _90724 A B _37164 _37165 _37166 _37167 _37168 _37163 _37169 _37170 _37171.
Proof. exact (fun h0 : term2095 _90715 _90724 _37164 => @lem3541461 _90715 _90724 A B _37164 _37165 _37166 _37167 _37168 _37169 _37170 _37171 _37163 u f g h1 h0 h2 h3 h4 h5 h6 h7 h8 h9 h10). Qed.
Lemma lem3541463 {_90715 _90724 A B : Type'} (u : A -> Prop) (f : A -> B) (g : type686 A) (_37164 : type627 _90715 _90724) (_37165 : type627 _90715 A) (_37166 : type627 _90715 B) (_37167 : type616 _90715 A) (_37168 : type852 _90724 A) (_37163 : type627 A B) (_37169 : type852 _90724 B) (_37170 : type235 _90724 A) (_37171 : type171 A B) (h1 : term2210 _90715 _90724 _37164) (h2 : term2210 _90715 A _37165) (h3 : term2210 _90715 B _37166) (h4 : term2435 _90715 A _37167) (h5 : term2553 _90724 A _37168) (h6 : term2210 A B _37163) (h7 : term2553 _90724 B _37169) (h8 : term2737 _90724 A _37170) (h9 : term2867 A B _37171) : term2776 _90715 _90724 A B u f g _37164 _37165 _37166 _37167 _37168 _37163 _37169 _37170 _37171.
Proof. exact (fun h0 : term2135 A B _37163 u f g => @lem3541462 _90715 _90724 A B _37164 _37165 _37166 _37167 _37168 _37169 _37170 _37171 _37163 u f g h1 h2 h3 h4 h5 h6 h7 h8 h9 h0). Qed.
Lemma lem3541468 {_90715 _90724 A B : Type'} (f : A -> B) (g : type686 A) (_37164 : type627 _90715 _90724) (_37165 : type627 _90715 A) (_37166 : type627 _90715 B) (_37167 : type616 _90715 A) (_37168 : type852 _90724 A) (_37163 : type627 A B) (_37169 : type852 _90724 B) (_37170 : type235 _90724 A) (_37171 : type171 A B) (h1 : term2210 _90715 _90724 _37164) (h2 : term2210 _90715 A _37165) (h3 : term2210 _90715 B _37166) (h4 : term2435 _90715 A _37167) (h5 : term2553 _90724 A _37168) (h6 : term2210 A B _37163) (h7 : term2553 _90724 B _37169) (h8 : term2737 _90724 A _37170) (h9 : term2867 A B _37171) : term2778 _90715 _90724 A B f g _37164 _37165 _37166 _37167 _37168 _37163 _37169 _37170 _37171.
Proof. exact (fun u : A -> Prop => @lem3541463 _90715 _90724 A B u f g _37164 _37165 _37166 _37167 _37168 _37163 _37169 _37170 _37171 h1 h2 h3 h4 h5 h6 h7 h8 h9). Qed.
Lemma lem3541473 {_90715 _90724 A B : Type'} (g : type686 A) (_37164 : type627 _90715 _90724) (_37165 : type627 _90715 A) (_37166 : type627 _90715 B) (_37167 : type616 _90715 A) (_37168 : type852 _90724 A) (_37163 : type627 A B) (_37169 : type852 _90724 B) (_37170 : type235 _90724 A) (_37171 : type171 A B) (h1 : term2210 _90715 _90724 _37164) (h2 : term2210 _90715 A _37165) (h3 : term2210 _90715 B _37166) (h4 : term2435 _90715 A _37167) (h5 : term2553 _90724 A _37168) (h6 : term2210 A B _37163) (h7 : term2553 _90724 B _37169) (h8 : term2737 _90724 A _37170) (h9 : term2867 A B _37171) : term2780 _90715 _90724 A B g _37164 _37165 _37166 _37167 _37168 _37163 _37169 _37170 _37171.
Proof. exact (fun f : A -> B => @lem3541468 _90715 _90724 A B f g _37164 _37165 _37166 _37167 _37168 _37163 _37169 _37170 _37171 h1 h2 h3 h4 h5 h6 h7 h8 h9). Qed.
Lemma lem3541478 {_90715 _90724 A B : Type'} (_37164 : type627 _90715 _90724) (_37165 : type627 _90715 A) (_37166 : type627 _90715 B) (_37167 : type616 _90715 A) (_37168 : type852 _90724 A) (_37163 : type627 A B) (_37169 : type852 _90724 B) (_37170 : type235 _90724 A) (_37171 : type171 A B) (h1 : term2210 _90715 _90724 _37164) (h2 : term2210 _90715 A _37165) (h3 : term2210 _90715 B _37166) (h4 : term2435 _90715 A _37167) (h5 : term2553 _90724 A _37168) (h6 : term2210 A B _37163) (h7 : term2553 _90724 B _37169) (h8 : term2737 _90724 A _37170) (h9 : term2867 A B _37171) : term2782 _90715 _90724 A B _37164 _37165 _37166 _37167 _37168 _37163 _37169 _37170 _37171.
Proof. exact (fun g : type686 A => @lem3541473 _90715 _90724 A B g _37164 _37165 _37166 _37167 _37168 _37163 _37169 _37170 _37171 h1 h2 h3 h4 h5 h6 h7 h8 h9). Qed.
Lemma lem3541479 {_90715 _90724 A B : Type'} (_37163 : type627 A B) (_37164 : type627 _90715 _90724) (_37165 : type627 _90715 A) (_37166 : type627 _90715 B) (_37167 : type616 _90715 A) (_37168 : type852 _90724 A) (_37169 : type852 _90724 B) (_37170 : type235 _90724 A) (_37171 : type171 A B) (h1 : term2210 _90715 _90724 _37164) (h2 : term2210 _90715 A _37165) (h3 : term2210 _90715 B _37166) (h4 : term2435 _90715 A _37167) (h5 : term2553 _90724 A _37168) (h6 : term2553 _90724 B _37169) (h7 : term2737 _90724 A _37170) (h8 : term2867 A B _37171) : term2783 _90715 _90724 A B _37164 _37165 _37166 _37167 _37168 _37163 _37169 _37170 _37171.
Proof. exact (fun h0 : term2210 A B _37163 => @lem3541478 _90715 _90724 A B _37164 _37165 _37166 _37167 _37168 _37163 _37169 _37170 _37171 h1 h2 h3 h4 h5 h0 h6 h7 h8). Qed.
Lemma lem3541484 {_90715 _90724 A B : Type'} (_37164 : type627 _90715 _90724) (_37165 : type627 _90715 A) (_37166 : type627 _90715 B) (_37167 : type616 _90715 A) (_37168 : type852 _90724 A) (_37169 : type852 _90724 B) (_37170 : type235 _90724 A) (_37171 : type171 A B) (h1 : term2210 _90715 _90724 _37164) (h2 : term2210 _90715 A _37165) (h3 : term2210 _90715 B _37166) (h4 : term2435 _90715 A _37167) (h5 : term2553 _90724 A _37168) (h6 : term2553 _90724 B _37169) (h7 : term2737 _90724 A _37170) (h8 : term2867 A B _37171) : term2785 _90715 _90724 A B _37164 _37165 _37166 _37167 _37168 _37169 _37170 _37171.
Proof. exact (fun _37163 : type627 A B => @lem3541479 _90715 _90724 A B _37163 _37164 _37165 _37166 _37167 _37168 _37169 _37170 _37171 h1 h2 h3 h4 h5 h6 h7 h8). Qed.
Lemma lem3541485 {_90715 _90724 A B : Type'} (_37164 : type627 _90715 _90724) (_37165 : type627 _90715 A) (_37166 : type627 _90715 B) (_37167 : type616 _90715 A) (_37168 : type852 _90724 A) (_37169 : type852 _90724 B) (_37170 : type235 _90724 A) (_37171 : type171 A B) (h1 : term2210 _90715 A _37165) (h2 : term2210 _90715 B _37166) (h3 : term2435 _90715 A _37167) (h4 : term2553 _90724 A _37168) (h5 : term2553 _90724 B _37169) (h6 : term2737 _90724 A _37170) (h7 : term2867 A B _37171) : term2786 _90715 _90724 A B _37164 _37165 _37166 _37167 _37168 _37169 _37170 _37171.
Proof. exact (fun h0 : term2210 _90715 _90724 _37164 => @lem3541484 _90715 _90724 A B _37164 _37165 _37166 _37167 _37168 _37169 _37170 _37171 h0 h1 h2 h3 h4 h5 h6 h7). Qed.
Lemma lem3541490 {_90715 _90724 A B : Type'} (_37165 : type627 _90715 A) (_37166 : type627 _90715 B) (_37167 : type616 _90715 A) (_37168 : type852 _90724 A) (_37169 : type852 _90724 B) (_37170 : type235 _90724 A) (_37171 : type171 A B) (h1 : term2210 _90715 A _37165) (h2 : term2210 _90715 B _37166) (h3 : term2435 _90715 A _37167) (h4 : term2553 _90724 A _37168) (h5 : term2553 _90724 B _37169) (h6 : term2737 _90724 A _37170) (h7 : term2867 A B _37171) : term2788 _90715 _90724 A B _37165 _37166 _37167 _37168 _37169 _37170 _37171.
Proof. exact (fun _37164 : type627 _90715 _90724 => @lem3541485 _90715 _90724 A B _37164 _37165 _37166 _37167 _37168 _37169 _37170 _37171 h1 h2 h3 h4 h5 h6 h7). Qed.
Lemma lem3541491 {_90715 _90724 A B : Type'} (_37165 : type627 _90715 A) (_37166 : type627 _90715 B) (_37167 : type616 _90715 A) (_37168 : type852 _90724 A) (_37169 : type852 _90724 B) (_37170 : type235 _90724 A) (_37171 : type171 A B) (h1 : term2210 _90715 B _37166) (h2 : term2435 _90715 A _37167) (h3 : term2553 _90724 A _37168) (h4 : term2553 _90724 B _37169) (h5 : term2737 _90724 A _37170) (h6 : term2867 A B _37171) : term2789 _90715 _90724 A B _37165 _37166 _37167 _37168 _37169 _37170 _37171.
Proof. exact (fun h0 : term2210 _90715 A _37165 => @lem3541490 _90715 _90724 A B _37165 _37166 _37167 _37168 _37169 _37170 _37171 h0 h1 h2 h3 h4 h5 h6). Qed.
Lemma lem3541496 {_90715 _90724 A B : Type'} (_37166 : type627 _90715 B) (_37167 : type616 _90715 A) (_37168 : type852 _90724 A) (_37169 : type852 _90724 B) (_37170 : type235 _90724 A) (_37171 : type171 A B) (h1 : term2210 _90715 B _37166) (h2 : term2435 _90715 A _37167) (h3 : term2553 _90724 A _37168) (h4 : term2553 _90724 B _37169) (h5 : term2737 _90724 A _37170) (h6 : term2867 A B _37171) : term2791 _90715 _90724 A B _37166 _37167 _37168 _37169 _37170 _37171.
Proof. exact (fun _37165 : type627 _90715 A => @lem3541491 _90715 _90724 A B _37165 _37166 _37167 _37168 _37169 _37170 _37171 h1 h2 h3 h4 h5 h6). Qed.
Lemma lem3541497 {_90715 _90724 A B : Type'} (_37166 : type627 _90715 B) (_37167 : type616 _90715 A) (_37168 : type852 _90724 A) (_37169 : type852 _90724 B) (_37170 : type235 _90724 A) (_37171 : type171 A B) (h1 : term2435 _90715 A _37167) (h2 : term2553 _90724 A _37168) (h3 : term2553 _90724 B _37169) (h4 : term2737 _90724 A _37170) (h5 : term2867 A B _37171) : term2792 _90715 _90724 A B _37166 _37167 _37168 _37169 _37170 _37171.
Proof. exact (fun h0 : term2210 _90715 B _37166 => @lem3541496 _90715 _90724 A B _37166 _37167 _37168 _37169 _37170 _37171 h0 h1 h2 h3 h4 h5). Qed.
Lemma lem3541502 {_90715 _90724 A B : Type'} (_37167 : type616 _90715 A) (_37168 : type852 _90724 A) (_37169 : type852 _90724 B) (_37170 : type235 _90724 A) (_37171 : type171 A B) (h1 : term2435 _90715 A _37167) (h2 : term2553 _90724 A _37168) (h3 : term2553 _90724 B _37169) (h4 : term2737 _90724 A _37170) (h5 : term2867 A B _37171) : term2794 _90715 _90724 A B _37167 _37168 _37169 _37170 _37171.
Proof. exact (fun _37166 : type627 _90715 B => @lem3541497 _90715 _90724 A B _37166 _37167 _37168 _37169 _37170 _37171 h1 h2 h3 h4 h5). Qed.
Lemma lem3541503 {_90715 _90724 A B : Type'} (_37167 : type616 _90715 A) (_37168 : type852 _90724 A) (_37169 : type852 _90724 B) (_37170 : type235 _90724 A) (_37171 : type171 A B) (h1 : term2553 _90724 A _37168) (h2 : term2553 _90724 B _37169) (h3 : term2737 _90724 A _37170) (h4 : term2867 A B _37171) : term2795 _90715 _90724 A B _37167 _37168 _37169 _37170 _37171.
Proof. exact (fun h0 : term2435 _90715 A _37167 => @lem3541502 _90715 _90724 A B _37167 _37168 _37169 _37170 _37171 h0 h1 h2 h3 h4). Qed.
Lemma lem3541508 {_90715 _90724 A B : Type'} (_37168 : type852 _90724 A) (_37169 : type852 _90724 B) (_37170 : type235 _90724 A) (_37171 : type171 A B) (h1 : term2553 _90724 A _37168) (h2 : term2553 _90724 B _37169) (h3 : term2737 _90724 A _37170) (h4 : term2867 A B _37171) : term2797 _90715 _90724 A B _37168 _37169 _37170 _37171.
Proof. exact (fun _37167 : type616 _90715 A => @lem3541503 _90715 _90724 A B _37167 _37168 _37169 _37170 _37171 h1 h2 h3 h4). Qed.
Lemma lem3541509 {_90715 _90724 A B : Type'} (_37168 : type852 _90724 A) (_37169 : type852 _90724 B) (_37170 : type235 _90724 A) (_37171 : type171 A B) (h1 : term2553 _90724 B _37169) (h2 : term2737 _90724 A _37170) (h3 : term2867 A B _37171) : term2798 _90715 _90724 A B _37168 _37169 _37170 _37171.
Proof. exact (fun h0 : term2553 _90724 A _37168 => @lem3541508 _90715 _90724 A B _37168 _37169 _37170 _37171 h0 h1 h2 h3). Qed.
Lemma lem3541514 {_90715 _90724 A B : Type'} (_37169 : type852 _90724 B) (_37170 : type235 _90724 A) (_37171 : type171 A B) (h1 : term2553 _90724 B _37169) (h2 : term2737 _90724 A _37170) (h3 : term2867 A B _37171) : term2800 _90715 _90724 A B _37169 _37170 _37171.
Proof. exact (fun _37168 : type852 _90724 A => @lem3541509 _90715 _90724 A B _37168 _37169 _37170 _37171 h1 h2 h3). Qed.
Lemma lem3541515 {_90715 _90724 A B : Type'} (_37169 : type852 _90724 B) (_37170 : type235 _90724 A) (_37171 : type171 A B) (h1 : term2737 _90724 A _37170) (h2 : term2867 A B _37171) : term2801 _90715 _90724 A B _37169 _37170 _37171.
Proof. exact (fun h0 : term2553 _90724 B _37169 => @lem3541514 _90715 _90724 A B _37169 _37170 _37171 h0 h1 h2). Qed.
Lemma lem3541520 {_90715 _90724 A B : Type'} (_37170 : type235 _90724 A) (_37171 : type171 A B) (h1 : term2737 _90724 A _37170) (h2 : term2867 A B _37171) : term2803 _90715 _90724 A B _37170 _37171.
Proof. exact (fun _37169 : type852 _90724 B => @lem3541515 _90715 _90724 A B _37169 _37170 _37171 h1 h2). Qed.
Lemma lem3541521 {_90715 _90724 A B : Type'} (_37170 : type235 _90724 A) (_37171 : type171 A B) (h1 : term2867 A B _37171) : term2804 _90715 _90724 A B _37170 _37171.
Proof. exact (fun h0 : term2737 _90724 A _37170 => @lem3541520 _90715 _90724 A B _37170 _37171 h0 h1). Qed.
Lemma lem3541526 {_90715 _90724 A B : Type'} (_37171 : type171 A B) (h1 : term2867 A B _37171) : term2806 _90715 _90724 A B _37171.
Proof. exact (fun _37170 : type235 _90724 A => @lem3541521 _90715 _90724 A B _37170 _37171 h1). Qed.
Lemma lem3541527 {_90715 _90724 A B : Type'} (_37171 : type171 A B) : term2869 _90715 _90724 A B _37171.
Proof. exact (fun h0 : term2867 A B _37171 => @lem3541526 _90715 _90724 A B _37171 h0). Qed.
Lemma lem3541532 {_90715 _90724 A B : Type'} : term2871 _90715 _90724 A B.
Proof. exact (fun _37171 : type171 A B => @lem3541527 _90715 _90724 A B _37171). Qed.
Lemma lem3541533 {_90715 _90724 A B : Type'} : term2000 _90715 _90724 A B.
Proof. exact (EQ_MP (@lem3520009 _90715 _90724 A B) (@lem3541532 _90715 _90724 A B)). Qed.
Lemma lem3541534 {_90715 _90724 A B : Type'} (g : type686 A) : term4924 _90715 _90724 A B g.
Proof. exact (@lem3541533 _90715 _90724 A B g). Qed.
Lemma lem3541535 {_90715 _90724 A B : Type'} (g : type686 A) : (term4924 _90715 _90724 A B g) = (term1996 _90715 _90724 A B g).
Proof. exact (eq_refl (term4924 _90715 _90724 A B g)). Qed.
Lemma lem3541536 {_90715 _90724 A B : Type'} (g : type686 A) : term1996 _90715 _90724 A B g.
Proof. exact (EQ_MP (@lem3541535 _90715 _90724 A B g) (@lem3541534 _90715 _90724 A B g)). Qed.
Lemma lem3541537 {_90715 _90724 A B : Type'} (g : type686 A) (f : A -> B) : term4925 _90715 _90724 A B g f.
Proof. exact (@lem3541536 _90715 _90724 A B g f). Qed.
Lemma lem3541538 {_90715 _90724 A B : Type'} (f : A -> B) (g : type686 A) : (term4925 _90715 _90724 A B g f) = (term1992 _90715 _90724 A B f g).
Proof. exact (eq_refl (term4925 _90715 _90724 A B g f)). Qed.
Lemma lem3541539 {_90715 _90724 A B : Type'} (f : A -> B) (g : type686 A) : term1992 _90715 _90724 A B f g.
Proof. exact (EQ_MP (@lem3541538 _90715 _90724 A B f g) (@lem3541537 _90715 _90724 A B g f)). Qed.
Lemma lem3541540 {_90715 _90724 A B : Type'} (f : A -> B) (g : type686 A) (u : A -> Prop) : term4926 _90715 _90724 A B f g u.
Proof. exact (@lem3541539 _90715 _90724 A B f g u). Qed.
Lemma lem3541541 {_90715 _90724 A B : Type'} (u : A -> Prop) (f : A -> B) (g : type686 A) : (term4926 _90715 _90724 A B f g u) = (term1962 _90715 _90724 A B u f g).
Proof. exact (eq_refl (term4926 _90715 _90724 A B f g u)). Qed.
Lemma lem3541542 {_90715 _90724 A B : Type'} (u : A -> Prop) (f : A -> B) (g : type686 A) : term1962 _90715 _90724 A B u f g.
Proof. exact (EQ_MP (@lem3541541 _90715 _90724 A B u f g) (@lem3541540 _90715 _90724 A B f g u)). Qed.
Lemma lem3541544 {_90715 _90724 A B : Type'} (u : A -> Prop) (f : A -> B) (g : type686 A) : term1962 _90715 _90724 A B u f g.
Proof. exact (@lem3507113 _90715 _90724 A B u f g (@lem3541542 _90715 _90724 A B u f g)). Qed.
Lemma lem3541545 {_90715 _90724 A B : Type'} (u : A -> Prop) (f : A -> B) (g : type686 A) (h1 : term1957 A B u f g) : term1986 _90715 _90724 A B.
Proof. exact (@lem3541544 _90715 _90724 A B u f g (@lem3507075 A B u f g h1)). Qed.
Lemma lem3541546 {_90715 _90724 A B : Type'} (u : A -> Prop) (f : A -> B) (g : type686 A) (h1 : term1957 A B u f g) : term1984 _90715 _90724 A B.
Proof. exact (@lem3541545 _90715 _90724 A B u f g h1 (@lem3505630 _90715 _90724)). Qed.
Lemma lem3541547 {_90715 _90724 A B : Type'} (u : A -> Prop) (f : A -> B) (g : type686 A) (h1 : term1957 A B u f g) : term1982 _90715 _90724 A B.
Proof. exact (@lem3541546 _90715 _90724 A B u f g h1 (@lem3507087 _90715 A)). Qed.
Lemma lem3541548 {_90715 _90724 A B : Type'} (u : A -> Prop) (f : A -> B) (g : type686 A) (h1 : term1957 A B u f g) : term1980 _90715 _90724 A B.
Proof. exact (@lem3541547 _90715 _90724 A B u f g h1 (@lem3507088 _90715 B)). Qed.
Lemma lem3541549 {_90724 A B : Type'} (u : A -> Prop) (f : A -> B) (g : type686 A) (h1 : term1957 A B u f g) : term1977 _90724 A B.
Proof. exact (@lem3541548 Prop _90724 A B u f g h1 (@lem3507086 Prop A)). Qed.
Lemma lem3541550 {_90724 A B : Type'} (u : A -> Prop) (f : A -> B) (g : type686 A) (h1 : term1957 A B u f g) : term1975 _90724 A B.
Proof. exact (@lem3541549 _90724 A B u f g h1 (@lem3507076 _90724 A)). Qed.
Lemma lem3541551 {_90724 A B : Type'} (u : A -> Prop) (f : A -> B) (g : type686 A) (h1 : term1957 A B u f g) : term1972 _90724 A B.
Proof. exact (@lem3541550 _90724 A B u f g h1 (@lem3507089 A B)). Qed.
Lemma lem3541552 {_90724 A B : Type'} (u : A -> Prop) (f : A -> B) (g : type686 A) (h1 : term1957 A B u f g) : term1969 _90724 A B.
Proof. exact (@lem3541551 _90724 A B u f g h1 (@lem3507085 _90724 B)). Qed.
Lemma lem3541553 {A B : Type'} (u : A -> Prop) (f : A -> B) (g : type686 A) (h1 : term1957 A B u f g) : term1966 A B.
Proof. exact (@lem3541552 Prop A B u f g h1 (@lem3507083 Prop A)). Qed.
Lemma lem3541554 {A B : Type'} (u : A -> Prop) (f : A -> B) (g : type686 A) (h1 : term1957 A B u f g) : False.
Proof. exact (@lem3541553 A B u f g h1 (@lem3507090 A B)). Qed.
Lemma lem3541555 {A B : Type'} (u : A -> Prop) (f : A -> B) (g : type686 A) (h1 : term1957 A B u f g) : (term1957 A B u f g) = False.
Proof. exact (prop_ext (fun h2 : term1957 A B u f g => @lem3541554 A B u f g h1) (fun h2 : False => @lem3507075 A B u f g h1)). Qed.
Lemma lem3541556 {A B : Type'} (u : A -> Prop) (f : A -> B) (g : type686 A) (h1 : term1957 A B u f g) : False.
Proof. exact (EQ_MP (@lem3541555 A B u f g h1) (@lem3507075 A B u f g h1)). Qed.
Lemma lem3541557 {A B : Type'} (u : A -> Prop) (f : A -> B) (g : type686 A) : term1956 A B u f g.
Proof. exact (fun h0 : term1957 A B u f g => @lem3541556 A B u f g h0). Qed.
Lemma lem3541558 {A B : Type'} (u : A -> Prop) (f : A -> B) (g : type686 A) : term1955 A B u f g.
Proof. exact (EQ_MP (@lem3507074 A B u f g) (@lem3541557 A B u f g)). Qed.
Lemma lem3541562 (t1 : Prop) (t2 : Prop) (t3 : Prop) : (term1874 t1 t2 t3) = (term1875 t1 t2 t3).
Proof. exact (EQ_MP (@lem3505616 t1 t2 t3) (@lem3505615 t1 t2 t3)). Qed.
Lemma lem3541563 {A B : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) : (term1924 A B g s u f) = (term4927 A B g s u f).
Proof. exact (@lem3541562 (term40 A g) (term2129 A g u) (term1944 A B g s u f)). Qed.
Lemma lem3541588 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem3541589 {A B : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) : (term4928 A B g s u f) = (term4929 A B g s u f).
Proof. exact (MK_COMB (@lem3541588) (@lem3541563 A B g s u f)). Qed.
Lemma lem3541592 {A B : Type'} (f : A -> B) (g : type686 A) : ((term49 A B f g) = (term50 A B f g)) = ((term49 A B f g) = (term50 A B f g)).
Proof. exact (eq_refl ((term49 A B f g) = (term50 A B f g))). Qed.
Lemma lem3541593 {A B : Type'} (s : A -> Prop) (u : A -> Prop) (f : A -> B) (g : type686 A) : (term1954 A B s u f g) = (term4930 A B s u f g).
Proof. exact (MK_COMB (@lem3541589 A B g s u f) (@lem3541592 A B f g)). Qed.
Lemma lem3541596 {A B : Type'} (s : A -> Prop) (u : A -> Prop) (f : A -> B) (g : type686 A) : (term4930 A B s u f g) = (term1954 A B s u f g).
Proof. exact (SYM (@lem3541593 A B s u f g)). Qed.
Lemma lem3541597 {A B : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) (h1 : term4927 A B g s u f) : term4927 A B g s u f.
Proof. exact (h1). Qed.
Lemma lem3541598 {A B : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) (h1 : term1944 A B g s u f) : term1944 A B g s u f.
Proof. exact (h1). Qed.
Lemma lem3541599 {A : Type'} (g : type686 A) (u : A -> Prop) (h1 : term4931 A g u) : term4931 A g u.
Proof. exact (h1). Qed.
Lemma lem3541603 {_90796 : Type'} (s : _90796 -> Prop) (x : _90796) : term1812 _90796 s x.
Proof. exact (EQ_MP (@lem3504897 _90796 s x) (@lem3505607 _90796 s x)). Qed.
Lemma lem3541604 {A : Type'} (s : type686 A) (x : A -> Prop) : term4932 A s x.
Proof. exact (@lem3541603 (A -> Prop) s x). Qed.
Lemma lem3541605 {A : Type'} (g : type686 A) (s : A -> Prop) : term4932 A g s.
Proof. exact (@lem3541604 A g s). Qed.
Lemma lem3541606 {A : Type'} (s : A -> Prop) (g : type686 A) (h1 : @IN (A -> Prop) s g) : g = (term4933 A g s).
Proof. exact (@lem3541605 A g s (@lem3506185 A s g h1)). Qed.
Lemma lem3541607 {A B : Type'} (u : A -> Prop) (f : A -> B) : (term4934 A B u f) = (term4934 A B u f).
Proof. exact (eq_refl (term4934 A B u f)). Qed.
Lemma lem3541608 {A B : Type'} (u : A -> Prop) (f : A -> B) (s : A -> Prop) (g : type686 A) (h1 : @IN (A -> Prop) s g) : (term4935 A B u f g) = (term4936 A B u f g s).
Proof. exact (MK_COMB (@lem3541607 A B u f) (@lem3541606 A s g h1)). Qed.
Lemma lem3541609 {A B : Type'} (u : A -> Prop) (f : A -> B) (g : type686 A) (s : A -> Prop) : (term4936 A B u f g s) = (term4937 A B u f g s).
Proof. exact (eq_refl (term4936 A B u f g s)). Qed.
Lemma lem3541610 {A B : Type'} (u : A -> Prop) (f : A -> B) (g : type686 A) : (term4938 A B u f g) = (term4938 A B u f g).
Proof. exact (eq_refl (term4938 A B u f g)). Qed.
Lemma lem3541611 {A B : Type'} (u : A -> Prop) (f : A -> B) (g : type686 A) (s : A -> Prop) : ((term4935 A B u f g) = (term4936 A B u f g s)) = ((term4935 A B u f g) = (term4937 A B u f g s)).
Proof. exact (MK_COMB (@lem3541610 A B u f g) (@lem3541609 A B u f g s)). Qed.
Lemma lem3541612 {A B : Type'} (u : A -> Prop) (f : A -> B) (g : type686 A) : (term4935 A B u f g) = (term4939 A B u f g).
Proof. exact (eq_refl (term4935 A B u f g)). Qed.
Lemma lem3541613 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem3541614 {A B : Type'} (u : A -> Prop) (f : A -> B) (g : type686 A) : (term4938 A B u f g) = (term4940 A B u f g).
Proof. exact (MK_COMB (@lem3541613) (@lem3541612 A B u f g)). Qed.
Lemma lem3541615 {A B : Type'} (u : A -> Prop) (f : A -> B) (g : type686 A) (s : A -> Prop) : (term4937 A B u f g s) = (term4937 A B u f g s).
Proof. exact (eq_refl (term4937 A B u f g s)). Qed.
Lemma lem3541616 {A B : Type'} (u : A -> Prop) (f : A -> B) (g : type686 A) (s : A -> Prop) : ((term4935 A B u f g) = (term4937 A B u f g s)) = ((term4939 A B u f g) = (term4937 A B u f g s)).
Proof. exact (MK_COMB (@lem3541614 A B u f g) (@lem3541615 A B u f g s)). Qed.
Lemma lem3541617 {A B : Type'} (u : A -> Prop) (f : A -> B) (g : type686 A) (s : A -> Prop) : ((term4935 A B u f g) = (term4936 A B u f g s)) = ((term4939 A B u f g) = (term4937 A B u f g s)).
Proof. exact (TRANS (@lem3541611 A B u f g s) (@lem3541616 A B u f g s)). Qed.
Lemma lem3541618 {A B : Type'} (u : A -> Prop) (f : A -> B) (s : A -> Prop) (g : type686 A) (h1 : @IN (A -> Prop) s g) : (term4939 A B u f g) = (term4937 A B u f g s).
Proof. exact (EQ_MP (@lem3541617 A B u f g s) (@lem3541608 A B u f s g h1)). Qed.
Lemma lem3541619 {A B : Type'} (u : A -> Prop) (f : A -> B) (s : A -> Prop) (g : type686 A) (h1 : @IN (A -> Prop) s g) : (term4937 A B u f g s) = (term4939 A B u f g).
Proof. exact (SYM (@lem3541618 A B u f s g h1)). Qed.
Lemma lem3541625 {A : Type'} (x : A) (s : A -> Prop) : ((@INSERT A x s) = (@EMPTY A)) = False.
Proof. exact (@lem3504845 A x s (@lem3504844 A x s)). Qed.
Lemma lem3541626 {A : Type'} (x : A -> Prop) (s : type686 A) : ((@INSERT (A -> Prop) x s) = (@EMPTY (A -> Prop))) = False.
Proof. exact (@lem3541625 (A -> Prop) x s). Qed.
Lemma lem3541627 {A : Type'} (g : type686 A) (s : A -> Prop) : ((term4933 A g s) = (@EMPTY (A -> Prop))) = False.
Proof. exact (@lem3541626 A s (@DELETE (A -> Prop) g s)). Qed.
Lemma lem3541628 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem3541629 {A : Type'} (g : type686 A) (s : A -> Prop) : (term4941 A g s) = (~ False).
Proof. exact (MK_COMB (@lem3541628) (@lem3541627 A g s)). Qed.
Lemma lem3541631 : (~ False) = True.
Proof. exact (proj2 (@lem1504)). Qed.
Lemma lem3541632 {A : Type'} (g : type686 A) (s : A -> Prop) : (term4941 A g s) = True.
Proof. exact (TRANS (@lem3541629 A g s) (@lem3541631)). Qed.
Lemma lem3541633 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem3541634 {A : Type'} (g : type686 A) (s : A -> Prop) : (term4942 A g s) = (and True).
Proof. exact (MK_COMB (@lem3541633) (@lem3541632 A g s)). Qed.
Lemma lem3541636 {_83983 : Type'} (a : _83983) (s : _83983 -> Prop) (P : _83983 -> Prop) : (term1808 _83983 a s P) = (term1809 _83983 a s P).
Proof. exact (EQ_MP (@lem3504865 _83983 a s P) (@lem3504864 _83983 a P s)). Qed.
Lemma lem3541637 {A : Type'} (a : A -> Prop) (s : type686 A) (P : type686 A) : (term4943 A a s P) = (term4944 A a s P).
Proof. exact (@lem3541636 (A -> Prop) a s P). Qed.
Lemma lem3541638 {A : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) : (term4945 A g s u) = (term4946 A g s u).
Proof. exact (@lem3541637 A s (@DELETE (A -> Prop) g s) (term4947 A u)). Qed.
Lemma lem3541639 {A : Type'} (t : A -> Prop) (u : A -> Prop) : (term4948 A u t) = (@SUBSET A t u).
Proof. exact (eq_refl (term4948 A u t)). Qed.
Lemma lem3541640 {A : Type'} (t : A -> Prop) (g : type686 A) (s : A -> Prop) : (term4949 A t g s) = (term4949 A t g s).
Proof. exact (eq_refl (term4949 A t g s)). Qed.
Lemma lem3541641 {A : Type'} (g : type686 A) (s : A -> Prop) (t : A -> Prop) (u : A -> Prop) : (term4950 A g s u t) = (term4951 A g s t u).
Proof. exact (MK_COMB (@lem3541640 A t g s) (@lem3541639 A t u)). Qed.
Lemma lem3541642 {A : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) : (term4952 A g s u) = (term4953 A g s u).
Proof. exact (fun_ext (fun t : A -> Prop => @lem3541641 A g s t u)). Qed.
Lemma lem3541643 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem3541644 {A : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) : (term4945 A g s u) = (term4954 A g s u).
Proof. exact (MK_COMB (@lem3541643 A) (@lem3541642 A g s u)). Qed.
Lemma lem3541645 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem3541646 {A : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) : (term4955 A g s u) = (term4956 A g s u).
Proof. exact (MK_COMB (@lem3541645) (@lem3541644 A g s u)). Qed.
Lemma lem3541647 {A : Type'} (s : A -> Prop) (u : A -> Prop) : (term4948 A u s) = (@SUBSET A s u).
Proof. exact (eq_refl (term4948 A u s)). Qed.
Lemma lem3541648 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem3541649 {A : Type'} (s : A -> Prop) (u : A -> Prop) : (term4957 A u s) = (term75 A s u).
Proof. exact (MK_COMB (@lem3541648) (@lem3541647 A s u)). Qed.
Lemma lem3541650 {A : Type'} (t : A -> Prop) (u : A -> Prop) : (term4948 A u t) = (@SUBSET A t u).
Proof. exact (eq_refl (term4948 A u t)). Qed.
Lemma lem3541651 {A : Type'} (t : A -> Prop) (g : type686 A) (s : A -> Prop) : (term4958 A t g s) = (term4958 A t g s).
Proof. exact (eq_refl (term4958 A t g s)). Qed.
Lemma lem3541652 {A : Type'} (g : type686 A) (s : A -> Prop) (t : A -> Prop) (u : A -> Prop) : (term4959 A g s u t) = (term4960 A g s t u).
Proof. exact (MK_COMB (@lem3541651 A t g s) (@lem3541650 A t u)). Qed.
Lemma lem3541653 {A : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) : (term4961 A g s u) = (term4962 A g s u).
Proof. exact (fun_ext (fun t : A -> Prop => @lem3541652 A g s t u)). Qed.
Lemma lem3541654 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem3541655 {A : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) : (term4963 A g s u) = (term4964 A g s u).
Proof. exact (MK_COMB (@lem3541654 A) (@lem3541653 A g s u)). Qed.
Lemma lem3541656 {A : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) : (term4946 A g s u) = (term4965 A g s u).
Proof. exact (MK_COMB (@lem3541649 A s u) (@lem3541655 A g s u)). Qed.
Lemma lem3541657 {A : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) : ((term4945 A g s u) = (term4946 A g s u)) = ((term4954 A g s u) = (term4965 A g s u)).
Proof. exact (MK_COMB (@lem3541646 A g s u) (@lem3541656 A g s u)). Qed.
Lemma lem3541658 {A : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) : (term4954 A g s u) = (term4965 A g s u).
Proof. exact (EQ_MP (@lem3541657 A g s u) (@lem3541638 A g s u)). Qed.
Lemma lem3541667 {A : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) : (term4966 A g s u) = (term4967 A g s u).
Proof. exact (MK_COMB (@lem3541634 A g s) (@lem3541658 A g s u)). Qed.
Lemma lem3541669 (t : Prop) : (True /\ t) = t.
Proof. exact (proj1 (@lem1842 t)). Qed.
Lemma lem3541670 {A : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) : (term4967 A g s u) = (term4965 A g s u).
Proof. exact (@lem3541669 (term4965 A g s u)). Qed.
Lemma lem3541679 {A : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) : (term4966 A g s u) = (term4965 A g s u).
Proof. exact (TRANS (@lem3541667 A g s u) (@lem3541670 A g s u)). Qed.
Lemma lem3541680 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem3541681 {A : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) : (term4968 A g s u) = (term4969 A g s u).
Proof. exact (MK_COMB (@lem3541680) (@lem3541679 A g s u)). Qed.
Lemma lem3541684 {A B : Type'} (f : A -> B) (g : type686 A) (s : A -> Prop) : ((term4970 A B f g s) = (term4971 A B f g s)) = ((term4970 A B f g s) = (term4971 A B f g s)).
Proof. exact (eq_refl ((term4970 A B f g s) = (term4971 A B f g s))). Qed.
Lemma lem3541685 {A B : Type'} (u : A -> Prop) (f : A -> B) (g : type686 A) (s : A -> Prop) : (term4937 A B u f g s) = (term4972 A B u f g s).
Proof. exact (MK_COMB (@lem3541681 A g s u) (@lem3541684 A B f g s)). Qed.
Lemma lem3541688 {A B : Type'} (u : A -> Prop) (f : A -> B) (g : type686 A) (s : A -> Prop) : (term4972 A B u f g s) = (term4937 A B u f g s).
Proof. exact (SYM (@lem3541685 A B u f g s)). Qed.
Lemma lem3541689 {A : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) (h1 : term4965 A g s u) : term4965 A g s u.
Proof. exact (h1). Qed.
Lemma lem3541690 {A : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) (h1 : term4964 A g s u) : term4964 A g s u.
Proof. exact (h1). Qed.
Lemma lem3541691 {A : Type'} (s : A -> Prop) (u : A -> Prop) (h1 : @SUBSET A s u) : @SUBSET A s u.
Proof. exact (h1). Qed.
Lemma lem3541709 {A : Type'} (g : type686 A) (s : A -> Prop) (h1 : (@DELETE (A -> Prop) g s) = (@EMPTY (A -> Prop))) : (@DELETE (A -> Prop) g s) = (@EMPTY (A -> Prop)).
Proof. exact (h1). Qed.
Lemma lem3541710 {A : Type'} (s : A -> Prop) : (@INSERT (A -> Prop) s) = (@INSERT (A -> Prop) s).
Proof. exact (eq_refl (@INSERT (A -> Prop) s)). Qed.
Lemma lem3541711 {A : Type'} (g : type686 A) (s : A -> Prop) (h1 : (@DELETE (A -> Prop) g s) = (@EMPTY (A -> Prop))) : (term4933 A g s) = (@INSERT (A -> Prop) s (@EMPTY (A -> Prop))).
Proof. exact (MK_COMB (@lem3541710 A s) (@lem3541709 A g s h1)). Qed.
Lemma lem3541712 {A : Type'} : (@INTERS A) = (@INTERS A).
Proof. exact (eq_refl (@INTERS A)). Qed.
Lemma lem3541713 {A : Type'} (g : type686 A) (s : A -> Prop) (h1 : (@DELETE (A -> Prop) g s) = (@EMPTY (A -> Prop))) : (term4973 A g s) = (term4974 A s).
Proof. exact (MK_COMB (@lem3541712 A) (@lem3541711 A g s h1)). Qed.
Lemma lem3541715 {_87240 : Type'} (s : _87240 -> Prop) : (term4974 _87240 s) = s.
Proof. exact (EQ_MP (@lem3354723 _87240 s) (@lem3355403 _87240 s)). Qed.
Lemma lem3541716 {A : Type'} (s : A -> Prop) : (term4974 A s) = s.
Proof. exact (@lem3541715 A s). Qed.
Lemma lem3541717 {A : Type'} (g : type686 A) (s : A -> Prop) (h1 : (@DELETE (A -> Prop) g s) = (@EMPTY (A -> Prop))) : (term4973 A g s) = s.
Proof. exact (TRANS (@lem3541713 A g s h1) (@lem3541716 A s)). Qed.
Lemma lem3541718 {A B : Type'} (f : A -> B) : (@IMAGE A B f) = (@IMAGE A B f).
Proof. exact (eq_refl (@IMAGE A B f)). Qed.
Lemma lem3541719 {A B : Type'} (f : A -> B) (g : type686 A) (s : A -> Prop) (h1 : (@DELETE (A -> Prop) g s) = (@EMPTY (A -> Prop))) : (term4970 A B f g s) = (@IMAGE A B f s).
Proof. exact (MK_COMB (@lem3541718 A B f) (@lem3541717 A g s h1)). Qed.
Lemma lem3541720 {B : Type'} : (@eq (B -> Prop)) = (@eq (B -> Prop)).
Proof. exact (eq_refl (@eq (B -> Prop))). Qed.
Lemma lem3541721 {A B : Type'} (f : A -> B) (g : type686 A) (s : A -> Prop) (h1 : (@DELETE (A -> Prop) g s) = (@EMPTY (A -> Prop))) : (term4975 A B f g s) = (term4976 A B f s).
Proof. exact (MK_COMB (@lem3541720 B) (@lem3541719 A B f g s h1)). Qed.
Lemma lem3541723 {_87477 _87481 : Type'} (x : _87477) (f : _87477 -> _87481) (s : _87477 -> Prop) : (term4977 _87477 _87481 f x s) = (term4978 _87477 _87481 x f s).
Proof. exact (proj2 (@lem3366870 _87477 _87481 x f s)). Qed.
Lemma lem3541724 {A B : Type'} (x : A -> Prop) (f : type678 A B) (s : type686 A) : (term4979 A B f x s) = (term4980 A B x f s).
Proof. exact (@lem3541723 (A -> Prop) (B -> Prop) x f s). Qed.
Lemma lem3541725 {A B : Type'} (f : A -> B) (g : type686 A) (s : A -> Prop) : (term4981 A B f g s) = (term4982 A B f g s).
Proof. exact (@lem3541724 A B s (@IMAGE A B f) (@DELETE (A -> Prop) g s)). Qed.
Lemma lem3541727 {A : Type'} (g : type686 A) (s : A -> Prop) (h1 : (@DELETE (A -> Prop) g s) = (@EMPTY (A -> Prop))) : (@DELETE (A -> Prop) g s) = (@EMPTY (A -> Prop)).
Proof. exact (h1). Qed.
Lemma lem3541728 {A B : Type'} (f : A -> B) : (term4736 A B f) = (term4736 A B f).
Proof. exact (eq_refl (term4736 A B f)). Qed.
Lemma lem3541729 {A B : Type'} (f : A -> B) (g : type686 A) (s : A -> Prop) (h1 : (@DELETE (A -> Prop) g s) = (@EMPTY (A -> Prop))) : (term4983 A B f g s) = (term4984 A B f).
Proof. exact (MK_COMB (@lem3541728 A B f) (@lem3541727 A g s h1)). Qed.
Lemma lem3541731 {_87477 _87481 : Type'} (f : _87477 -> _87481) : (@IMAGE _87477 _87481 f (@EMPTY _87477)) = (@EMPTY _87481).
Proof. exact (proj1 (@lem3366870 _87477 _87481 (@el _87477) f (@el (_87477 -> Prop)))). Qed.
Lemma lem3541732 {A B : Type'} (f : type678 A B) : (@IMAGE (A -> Prop) (B -> Prop) f (@EMPTY (A -> Prop))) = (@EMPTY (B -> Prop)).
Proof. exact (@lem3541731 (A -> Prop) (B -> Prop) f). Qed.
Lemma lem3541733 {A B : Type'} (f : A -> B) : (term4984 A B f) = (@EMPTY (B -> Prop)).
Proof. exact (@lem3541732 A B (@IMAGE A B f)). Qed.
Lemma lem3541734 {A B : Type'} (f : A -> B) (g : type686 A) (s : A -> Prop) (h1 : (@DELETE (A -> Prop) g s) = (@EMPTY (A -> Prop))) : (term4983 A B f g s) = (@EMPTY (B -> Prop)).
Proof. exact (TRANS (@lem3541729 A B f g s h1) (@lem3541733 A B f)). Qed.
Lemma lem3541735 {A B : Type'} (f : A -> B) (s : A -> Prop) : (term4985 A B f s) = (term4985 A B f s).
Proof. exact (eq_refl (term4985 A B f s)). Qed.
Lemma lem3541736 {A B : Type'} (f : A -> B) (g : type686 A) (s : A -> Prop) (h1 : (@DELETE (A -> Prop) g s) = (@EMPTY (A -> Prop))) : (term4982 A B f g s) = (term4986 A B f s).
Proof. exact (MK_COMB (@lem3541735 A B f s) (@lem3541734 A B f g s h1)). Qed.
Lemma lem3541737 {A B : Type'} (f : A -> B) (g : type686 A) (s : A -> Prop) (h1 : (@DELETE (A -> Prop) g s) = (@EMPTY (A -> Prop))) : (term4981 A B f g s) = (term4986 A B f s).
Proof. exact (TRANS (@lem3541725 A B f g s) (@lem3541736 A B f g s h1)). Qed.
Lemma lem3541738 {B : Type'} : (@INTERS B) = (@INTERS B).
Proof. exact (eq_refl (@INTERS B)). Qed.
Lemma lem3541739 {A B : Type'} (f : A -> B) (g : type686 A) (s : A -> Prop) (h1 : (@DELETE (A -> Prop) g s) = (@EMPTY (A -> Prop))) : (term4971 A B f g s) = (term4987 A B f s).
Proof. exact (MK_COMB (@lem3541738 B) (@lem3541737 A B f g s h1)). Qed.
Lemma lem3541741 {_87240 : Type'} (s : _87240 -> Prop) : (term4974 _87240 s) = s.
Proof. exact (EQ_MP (@lem3354723 _87240 s) (@lem3355403 _87240 s)). Qed.
Lemma lem3541742 {B : Type'} (s : B -> Prop) : (term4974 B s) = s.
Proof. exact (@lem3541741 B s). Qed.
Lemma lem3541743 {A B : Type'} (f : A -> B) (s : A -> Prop) : (term4987 A B f s) = (@IMAGE A B f s).
Proof. exact (@lem3541742 B (@IMAGE A B f s)). Qed.
Lemma lem3541744 {A B : Type'} (f : A -> B) (g : type686 A) (s : A -> Prop) (h1 : (@DELETE (A -> Prop) g s) = (@EMPTY (A -> Prop))) : (term4971 A B f g s) = (@IMAGE A B f s).
Proof. exact (TRANS (@lem3541739 A B f g s h1) (@lem3541743 A B f s)). Qed.
Lemma lem3541745 {A B : Type'} (f : A -> B) (g : type686 A) (s : A -> Prop) (h1 : (@DELETE (A -> Prop) g s) = (@EMPTY (A -> Prop))) : ((term4970 A B f g s) = (term4971 A B f g s)) = ((@IMAGE A B f s) = (@IMAGE A B f s)).
Proof. exact (MK_COMB (@lem3541721 A B f g s h1) (@lem3541744 A B f g s h1)). Qed.
Lemma lem3541747 {A : Type'} (x : A) : (x = x) = True.
Proof. exact (EQ_MP (@lem1863 A x) (@lem1862 A x)). Qed.
Lemma lem3541748 {B : Type'} (x : B -> Prop) : (x = x) = True.
Proof. exact (@lem3541747 (B -> Prop) x). Qed.
Lemma lem3541749 {A B : Type'} (f : A -> B) (s : A -> Prop) : ((@IMAGE A B f s) = (@IMAGE A B f s)) = True.
Proof. exact (@lem3541748 B (@IMAGE A B f s)). Qed.
Lemma lem3541750 {A B : Type'} (f : A -> B) (g : type686 A) (s : A -> Prop) (h1 : (@DELETE (A -> Prop) g s) = (@EMPTY (A -> Prop))) : ((term4970 A B f g s) = (term4971 A B f g s)) = True.
Proof. exact (TRANS (@lem3541745 A B f g s h1) (@lem3541749 A B f s)). Qed.
Lemma lem3541751 {A B : Type'} (f : A -> B) (g : type686 A) (s : A -> Prop) (h1 : (@DELETE (A -> Prop) g s) = (@EMPTY (A -> Prop))) : True = ((term4970 A B f g s) = (term4971 A B f g s)).
Proof. exact (SYM (@lem3541750 A B f g s h1)). Qed.
Lemma lem3541752 {A B : Type'} (f : A -> B) (g : type686 A) (s : A -> Prop) (h1 : (@DELETE (A -> Prop) g s) = (@EMPTY (A -> Prop))) : (term4970 A B f g s) = (term4971 A B f g s).
Proof. exact (EQ_MP (@lem3541751 A B f g s h1) (@lem0)). Qed.
Lemma lem3541783 {_87477 _87481 : Type'} (x : _87477) (f : _87477 -> _87481) (s : _87477 -> Prop) : (term4977 _87477 _87481 f x s) = (term4978 _87477 _87481 x f s).
Proof. exact (proj2 (@lem3366870 _87477 _87481 x f s)). Qed.
Lemma lem3541784 {A B : Type'} (x : A -> Prop) (f : type678 A B) (s : type686 A) : (term4979 A B f x s) = (term4980 A B x f s).
Proof. exact (@lem3541783 (A -> Prop) (B -> Prop) x f s). Qed.
Lemma lem3541785 {A B : Type'} (f : A -> B) (g : type686 A) (s : A -> Prop) : (term4981 A B f g s) = (term4982 A B f g s).
Proof. exact (@lem3541784 A B s (@IMAGE A B f) (@DELETE (A -> Prop) g s)). Qed.
Lemma lem3541786 {B : Type'} : (@INTERS B) = (@INTERS B).
Proof. exact (eq_refl (@INTERS B)). Qed.
Lemma lem3541787 {A B : Type'} (f : A -> B) (g : type686 A) (s : A -> Prop) : (term4971 A B f g s) = (term4988 A B f g s).
Proof. exact (MK_COMB (@lem3541786 B) (@lem3541785 A B f g s)). Qed.
Lemma lem3541788 {A B : Type'} (f : A -> B) (g : type686 A) (s : A -> Prop) : (term4975 A B f g s) = (term4975 A B f g s).
Proof. exact (eq_refl (term4975 A B f g s)). Qed.
Lemma lem3541789 {A B : Type'} (f : A -> B) (g : type686 A) (s : A -> Prop) : ((term4970 A B f g s) = (term4971 A B f g s)) = ((term4970 A B f g s) = (term4988 A B f g s)).
Proof. exact (MK_COMB (@lem3541788 A B f g s) (@lem3541787 A B f g s)). Qed.
Lemma lem3541792 {A B : Type'} (f : A -> B) (g : type686 A) (s : A -> Prop) : ((term4970 A B f g s) = (term4988 A B f g s)) = ((term4970 A B f g s) = (term4971 A B f g s)).
Proof. exact (SYM (@lem3541789 A B f g s)). Qed.
Lemma lem3541796 {_87274 : Type'} (s : _87274 -> Prop) (u : type686 _87274) : (term4989 _87274 s u) = (term4990 _87274 s u).
Proof. exact (EQ_MP (@lem3356591 _87274 s u) (@lem3358011 _87274 s u)). Qed.
Lemma lem3541797 {A : Type'} (s : A -> Prop) (u : type686 A) : (term4989 A s u) = (term4990 A s u).
Proof. exact (@lem3541796 A s u). Qed.
Lemma lem3541798 {A : Type'} (g : type686 A) (s : A -> Prop) : (term4973 A g s) = (term4991 A g s).
Proof. exact (@lem3541797 A s (@DELETE (A -> Prop) g s)). Qed.
Lemma lem3541799 {A B : Type'} (f : A -> B) : (@IMAGE A B f) = (@IMAGE A B f).
Proof. exact (eq_refl (@IMAGE A B f)). Qed.
Lemma lem3541800 {A B : Type'} (f : A -> B) (g : type686 A) (s : A -> Prop) : (term4970 A B f g s) = (term4992 A B f g s).
Proof. exact (MK_COMB (@lem3541799 A B f) (@lem3541798 A g s)). Qed.
Lemma lem3541801 {B : Type'} : (@eq (B -> Prop)) = (@eq (B -> Prop)).
Proof. exact (eq_refl (@eq (B -> Prop))). Qed.
Lemma lem3541802 {A B : Type'} (f : A -> B) (g : type686 A) (s : A -> Prop) : (term4975 A B f g s) = (term4993 A B f g s).
Proof. exact (MK_COMB (@lem3541801 B) (@lem3541800 A B f g s)). Qed.
Lemma lem3541804 {_87274 : Type'} (s : _87274 -> Prop) (u : type686 _87274) : (term4989 _87274 s u) = (term4990 _87274 s u).
Proof. exact (EQ_MP (@lem3356591 _87274 s u) (@lem3358011 _87274 s u)). Qed.
Lemma lem3541805 {B : Type'} (s : B -> Prop) (u : type686 B) : (term4989 B s u) = (term4990 B s u).
Proof. exact (@lem3541804 B s u). Qed.
Lemma lem3541806 {A B : Type'} (f : A -> B) (g : type686 A) (s : A -> Prop) : (term4988 A B f g s) = (term4994 A B f g s).
Proof. exact (@lem3541805 B (@IMAGE A B f s) (term4983 A B f g s)). Qed.
Lemma lem3541807 {A B : Type'} (f : A -> B) (g : type686 A) (s : A -> Prop) : ((term4970 A B f g s) = (term4988 A B f g s)) = ((term4992 A B f g s) = (term4994 A B f g s)).
Proof. exact (MK_COMB (@lem3541802 A B f g s) (@lem3541806 A B f g s)). Qed.
Lemma lem3541810 {A B : Type'} (f : A -> B) (g : type686 A) (s : A -> Prop) : ((term4992 A B f g s) = (term4994 A B f g s)) = ((term4970 A B f g s) = (term4988 A B f g s)).
Proof. exact (SYM (@lem3541807 A B f g s)). Qed.
Lemma lem3541812 {_90768 _90775 : Type'} (t : _90768 -> Prop) (f : _90768 -> _90775) (s : _90768 -> Prop) (u : _90775 -> Prop) : term1028 _90768 _90775 t f s u.
Proof. exact (@lem3504830 _90768 _90775 t f s u (@lem3504822 _90768 _90775 t f s u)). Qed.
Lemma lem3541813 {A B : Type'} (t : A -> Prop) (f : A -> B) (s : A -> Prop) (u : B -> Prop) : term1028 A B t f s u.
Proof. exact (@lem3541812 A B t f s u). Qed.
Lemma lem3541814 {A B : Type'} (f : A -> B) (g : type686 A) (s : A -> Prop) : term4995 A B f g s.
Proof. exact (@lem3541813 A B (term4996 A g s) f s (term4997 A B f g s)). Qed.
Lemma lem3541816 {A B : Type'} (s : A -> Prop) (f : A -> B) (t : A -> Prop) : term1010 A B s f t.
Proof. exact (EQ_MP (@lem3498524 A B s f t) (@lem3498523 A B s f t)). Qed.
Lemma lem3541817 {A B : Type'} (s : A -> Prop) (f : A -> B) (t : A -> Prop) : term1010 A B s f t.
Proof. exact (@lem3541816 A B s f t). Qed.
Lemma lem3541818 {A B : Type'} (f : A -> B) (g : type686 A) (s : A -> Prop) : term4998 A B f g s.
Proof. exact (@lem3541817 A B s f (term4996 A g s)). Qed.
Lemma lem3541819 (t1 : Prop) : term0 t1.
Proof. exact (@lem693 t1). Qed.
Lemma lem3541820 (t1 : Prop) : (term0 t1) = (term1 t1).
Proof. exact (eq_refl (term0 t1)). Qed.
Lemma lem3541821 (t1 : Prop) : term1 t1.
Proof. exact (EQ_MP (@lem3541820 t1) (@lem3541819 t1)). Qed.
Lemma lem3541822 (t1 : Prop) (t2 : Prop) : term2 t1 t2.
Proof. exact (@lem3541821 t1 t2). Qed.
Lemma lem3541823 (t1 : Prop) (t2 : Prop) : (term2 t1 t2) = (term3 t1 t2).
Proof. exact (eq_refl (term2 t1 t2)). Qed.
Lemma lem3541824 (t1 : Prop) (t2 : Prop) : term3 t1 t2.
Proof. exact (EQ_MP (@lem3541823 t1 t2) (@lem3541822 t1 t2)). Qed.
Lemma lem3541825 (t1 : Prop) (t2 : Prop) (t3 : Prop) : term4 t1 t2 t3.
Proof. exact (@lem3541824 t1 t2 t3). Qed.
Lemma lem3541826 (t1 : Prop) (t2 : Prop) (t3 : Prop) : (term4 t1 t2 t3) = ((term5 t1 t2 t3) = (term6 t1 t2 t3)).
Proof. exact (eq_refl (term4 t1 t2 t3)). Qed.
Lemma lem3541827 (t1 : Prop) (t2 : Prop) (t3 : Prop) : (term5 t1 t2 t3) = (term6 t1 t2 t3).
Proof. exact (EQ_MP (@lem3541826 t1 t2 t3) (@lem3541825 t1 t2 t3)). Qed.
Lemma lem3541828 (t1 : Prop) (t2 : Prop) (t3 : Prop) : (term6 t1 t2 t3) = (term5 t1 t2 t3).
Proof. exact (SYM (@lem3541827 t1 t2 t3)). Qed.
Lemma lem3541829 {A B : Type'} (g : type686 A) (f : A -> B) (s : A -> Prop) (u : A -> Prop) (h1 : term1944 A B g s u f) (h2 : @SUBSET A s u) : term4999 A B g s u f.
Proof. exact (conj (@lem3541691 A s u h2) (@lem3541598 A B g s u f h1)). Qed.
Lemma lem3541830 {A B : Type'} (g : type686 A) (f : A -> B) (s : A -> Prop) (u : A -> Prop) (h1 : term4964 A g s u) (h2 : term1944 A B g s u f) (h3 : @SUBSET A s u) : term5000 A B g s u f.
Proof. exact (conj (@lem3541690 A g s u h1) (@lem3541829 A B g f s u h2 h3)). Qed.
Lemma lem3541831 {A B : Type'} (f : A -> B) (g : type686 A) (s : A -> Prop) (u : A -> Prop) (h1 : term4964 A g s u) (h2 : term1944 A B g s u f) (h3 : term1797 A g s) (h4 : @SUBSET A s u) : term5001 A B g s u f.
Proof. exact (conj (@lem3504838 A g s h3) (@lem3541830 A B g f s u h1 h2 h4)). Qed.
Lemma lem3541839 {A : Type'} (s : A -> Prop) (t : A -> Prop) : (s = t) = (term37 A s t).
Proof. exact (EQ_MP (@lem3211757 A s t) (@lem3211756 A s t)). Qed.
Lemma lem3541840 {A : Type'} (s : type686 A) (t : type686 A) : (s = t) = (term38 A s t).
Proof. exact (@lem3541839 (A -> Prop) s t). Qed.
Lemma lem3541841 {A : Type'} (g : type686 A) (s : A -> Prop) : ((@DELETE (A -> Prop) g s) = (@EMPTY (A -> Prop))) = (term5002 A g s).
Proof. exact (@lem3541840 A (@DELETE (A -> Prop) g s) (@EMPTY (A -> Prop))). Qed.
Lemma lem3541850 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem3541851 {A : Type'} (g : type686 A) (s : A -> Prop) : (term1797 A g s) = (term5003 A g s).
Proof. exact (MK_COMB (@lem3541850) (@lem3541841 A g s)). Qed.
Lemma lem3541852 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem3541853 {A : Type'} (g : type686 A) (s : A -> Prop) : (term5004 A g s) = (term5005 A g s).
Proof. exact (MK_COMB (@lem3541852) (@lem3541851 A g s)). Qed.
Lemma lem3541863 {A : Type'} (s : A -> Prop) (t : A -> Prop) : (@SUBSET A s t) = (term197 A s t).
Proof. exact (EQ_MP (@lem3211751 A s t) (@lem3211750 A s t)). Qed.
Lemma lem3541864 {A : Type'} (s : A -> Prop) (t : A -> Prop) : (@SUBSET A s t) = (term197 A s t).
Proof. exact (@lem3541863 A s t). Qed.
Lemma lem3541865 {A : Type'} (t : A -> Prop) (u : A -> Prop) : (@SUBSET A t u) = (term197 A t u).
Proof. exact (@lem3541864 A t u). Qed.
Lemma lem3541872 {A : Type'} (t : A -> Prop) (g : type686 A) (s : A -> Prop) : (term4958 A t g s) = (term4958 A t g s).
Proof. exact (eq_refl (term4958 A t g s)). Qed.
Lemma lem3541873 {A : Type'} (g : type686 A) (s : A -> Prop) (t : A -> Prop) (u : A -> Prop) : (term4960 A g s t u) = (term5006 A g s t u).
Proof. exact (MK_COMB (@lem3541872 A t g s) (@lem3541865 A t u)). Qed.
Lemma lem3541876 {A : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) : (term4962 A g s u) = (term5007 A g s u).
Proof. exact (fun_ext (fun t : A -> Prop => @lem3541873 A g s t u)). Qed.
Lemma lem3541877 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem3541878 {A : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) : (term4964 A g s u) = (term5008 A g s u).
Proof. exact (MK_COMB (@lem3541877 A) (@lem3541876 A g s u)). Qed.
Lemma lem3541883 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem3541884 {A : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) : (term5009 A g s u) = (term5010 A g s u).
Proof. exact (MK_COMB (@lem3541883) (@lem3541878 A g s u)). Qed.
Lemma lem3541888 {A : Type'} (s : A -> Prop) (t : A -> Prop) : (@SUBSET A s t) = (term197 A s t).
Proof. exact (EQ_MP (@lem3211751 A s t) (@lem3211750 A s t)). Qed.
Lemma lem3541889 {A : Type'} (s : A -> Prop) (t : A -> Prop) : (@SUBSET A s t) = (term197 A s t).
Proof. exact (@lem3541888 A s t). Qed.
Lemma lem3541890 {A : Type'} (s : A -> Prop) (u : A -> Prop) : (@SUBSET A s u) = (term197 A s u).
Proof. exact (@lem3541889 A s u). Qed.
Lemma lem3541897 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem3541898 {A : Type'} (s : A -> Prop) (u : A -> Prop) : (term75 A s u) = (term198 A s u).
Proof. exact (MK_COMB (@lem3541897) (@lem3541890 A s u)). Qed.
Lemma lem3541906 {A : Type'} (s : A -> Prop) (t : A -> Prop) : (@SUBSET A s t) = (term197 A s t).
Proof. exact (EQ_MP (@lem3211751 A s t) (@lem3211750 A s t)). Qed.
Lemma lem3541907 {A : Type'} (s : A -> Prop) (t : A -> Prop) : (@SUBSET A s t) = (term197 A s t).
Proof. exact (@lem3541906 A s t). Qed.
Lemma lem3541908 {A B : Type'} (u : A -> Prop) (f : A -> B) (t : A -> Prop) : (term73 A B u f t) = (term5011 A B u f t).
Proof. exact (@lem3541907 A (term69 A B u f t) t). Qed.
Lemma lem3541921 {A : Type'} (t : A -> Prop) (g : type686 A) (s : A -> Prop) : (term4958 A t g s) = (term4958 A t g s).
Proof. exact (eq_refl (term4958 A t g s)). Qed.
Lemma lem3541922 {A B : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) (t : A -> Prop) : (term1940 A B g s u f t) = (term5012 A B g s u f t).
Proof. exact (MK_COMB (@lem3541921 A t g s) (@lem3541908 A B u f t)). Qed.
Lemma lem3541925 {A B : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) : (term1942 A B g s u f) = (term5013 A B g s u f).
Proof. exact (fun_ext (fun t : A -> Prop => @lem3541922 A B g s u f t)). Qed.
Lemma lem3541926 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem3541927 {A B : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) : (term1944 A B g s u f) = (term5014 A B g s u f).
Proof. exact (MK_COMB (@lem3541926 A) (@lem3541925 A B g s u f)). Qed.
Lemma lem3541932 {A B : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) : (term4999 A B g s u f) = (term5015 A B g s u f).
Proof. exact (MK_COMB (@lem3541898 A s u) (@lem3541927 A B g s u f)). Qed.
Lemma lem3541935 {A B : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) : (term5000 A B g s u f) = (term5016 A B g s u f).
Proof. exact (MK_COMB (@lem3541884 A g s u) (@lem3541932 A B g s u f)). Qed.
Lemma lem3541938 {A B : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) : (term5001 A B g s u f) = (term5017 A B g s u f).
Proof. exact (MK_COMB (@lem3541853 A g s) (@lem3541935 A B g s u f)). Qed.
Lemma lem3541941 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem3541942 {A B : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) : (term5018 A B g s u f) = (term5019 A B g s u f).
Proof. exact (MK_COMB (@lem3541941) (@lem3541938 A B g s u f)). Qed.
Lemma lem3541948 {A : Type'} (s : A -> Prop) (t : A -> Prop) : (@SUBSET A s t) = (term197 A s t).
Proof. exact (EQ_MP (@lem3211751 A s t) (@lem3211750 A s t)). Qed.
Lemma lem3541949 {A : Type'} (s : A -> Prop) (t : A -> Prop) : (@SUBSET A s t) = (term197 A s t).
Proof. exact (@lem3541948 A s t). Qed.
Lemma lem3541950 {A B : Type'} (u : A -> Prop) (f : A -> B) (s : A -> Prop) : (term73 A B u f s) = (term5011 A B u f s).
Proof. exact (@lem3541949 A (term69 A B u f s) s). Qed.
Lemma lem3541963 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem3541964 {A B : Type'} (u : A -> Prop) (f : A -> B) (s : A -> Prop) : (term5020 A B u f s) = (term5021 A B u f s).
Proof. exact (MK_COMB (@lem3541963) (@lem3541950 A B u f s)). Qed.
Lemma lem3541966 {A : Type'} (s : A -> Prop) (t : A -> Prop) : (@SUBSET A s t) = (term197 A s t).
Proof. exact (EQ_MP (@lem3211751 A s t) (@lem3211750 A s t)). Qed.
Lemma lem3541967 {A : Type'} (s : A -> Prop) (t : A -> Prop) : (@SUBSET A s t) = (term197 A s t).
Proof. exact (@lem3541966 A s t). Qed.
Lemma lem3541968 {A : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) : (term5022 A g s u) = (term5023 A g s u).
Proof. exact (@lem3541967 A (term4996 A g s) u). Qed.
Lemma lem3541975 {A B : Type'} (f : A -> B) (g : type686 A) (s : A -> Prop) (u : A -> Prop) : (term5024 A B f g s u) = (term5025 A B f g s u).
Proof. exact (MK_COMB (@lem3541964 A B u f s) (@lem3541968 A g s u)). Qed.
Lemma lem3541978 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem3541979 {A B : Type'} (f : A -> B) (g : type686 A) (s : A -> Prop) (u : A -> Prop) : (term5026 A B f g s u) = (term5027 A B f g s u).
Proof. exact (MK_COMB (@lem3541978) (@lem3541975 A B f g s u)). Qed.
Lemma lem3541983 {A : Type'} (s : A -> Prop) (t : A -> Prop) : (@SUBSET A s t) = (term197 A s t).
Proof. exact (EQ_MP (@lem3211751 A s t) (@lem3211750 A s t)). Qed.
Lemma lem3541984 {A : Type'} (s : A -> Prop) (t : A -> Prop) : (@SUBSET A s t) = (term197 A s t).
Proof. exact (@lem3541983 A s t). Qed.
Lemma lem3541985 {A B : Type'} (u : A -> Prop) (f : A -> B) (g : type686 A) (s : A -> Prop) : (term5028 A B u f g s) = (term5029 A B u f g s).
Proof. exact (@lem3541984 A (term5030 A B u f g s) (term4996 A g s)). Qed.
Lemma lem3541998 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem3541999 {A B : Type'} (u : A -> Prop) (f : A -> B) (g : type686 A) (s : A -> Prop) : (term5031 A B u f g s) = (term5032 A B u f g s).
Proof. exact (MK_COMB (@lem3541998) (@lem3541985 A B u f g s)). Qed.
Lemma lem3542001 {A : Type'} (s : A -> Prop) (t : A -> Prop) : (@SUBSET A s t) = (term197 A s t).
Proof. exact (EQ_MP (@lem3211751 A s t) (@lem3211750 A s t)). Qed.
Lemma lem3542002 {A : Type'} (s : A -> Prop) (t : A -> Prop) : (@SUBSET A s t) = (term197 A s t).
Proof. exact (@lem3542001 A s t). Qed.
Lemma lem3542003 {A : Type'} (s : A -> Prop) (u : A -> Prop) : (@SUBSET A s u) = (term197 A s u).
Proof. exact (@lem3542002 A s u). Qed.
Lemma lem3542010 {A B : Type'} (f : A -> B) (g : type686 A) (s : A -> Prop) (u : A -> Prop) : (term5033 A B f g s u) = (term5034 A B f g s u).
Proof. exact (MK_COMB (@lem3541999 A B u f g s) (@lem3542003 A s u)). Qed.
Lemma lem3542013 {A B : Type'} (f : A -> B) (g : type686 A) (s : A -> Prop) (u : A -> Prop) : (term5035 A B f g s u) = (term5036 A B f g s u).
Proof. exact (MK_COMB (@lem3541979 A B f g s u) (@lem3542010 A B f g s u)). Qed.
Lemma lem3542016 {A B : Type'} (f : A -> B) (g : type686 A) (s : A -> Prop) (u : A -> Prop) : (term5037 A B f g s u) = (term5038 A B f g s u).
Proof. exact (MK_COMB (@lem3541942 A B g s u f) (@lem3542013 A B f g s u)). Qed.
Lemma lem3542019 {A B : Type'} (f : A -> B) (g : type686 A) (s : A -> Prop) (u : A -> Prop) : (term5038 A B f g s u) = (term5037 A B f g s u).
Proof. exact (SYM (@lem3542016 A B f g s u)). Qed.
Lemma lem3542031 {A : Type'} (s : A -> Prop) (x : A) (y : A) : (term1819 A x s y) = (term1820 A s x y).
Proof. exact (EQ_MP (@lem3211684 A s x y) (@lem3211683 A s x y)). Qed.
Lemma lem3542032 {A : Type'} (s : type686 A) (x : A -> Prop) (y : A -> Prop) : (term1930 A x s y) = (term5039 A s x y).
Proof. exact (@lem3542031 (A -> Prop) s x y). Qed.
Lemma lem3542033 {A : Type'} (g : type686 A) (x : A -> Prop) (s : A -> Prop) : (term1930 A x g s) = (term5039 A g x s).
Proof. exact (@lem3542032 A g x s). Qed.
Lemma lem3542037 {A : Type'} (P : A -> Prop) (x : A) : (@IN A x P) = (P x).
Proof. exact (EQ_MP (@lem3211610 A P x) (@lem3211609 A P x)). Qed.
Lemma lem3542038 {A : Type'} (P : type686 A) (x : A -> Prop) : (@IN (A -> Prop) x P) = (P x).
Proof. exact (@lem3542037 (A -> Prop) P x). Qed.
Lemma lem3542039 {A : Type'} (g : type686 A) (x : A -> Prop) : (@IN (A -> Prop) x g) = (g x).
Proof. exact (@lem3542038 A g x). Qed.
Lemma lem3542040 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem3542041 {A : Type'} (g : type686 A) (x : A -> Prop) : (term4082 A x g) = (term372 A g x).
Proof. exact (MK_COMB (@lem3542040) (@lem3542039 A g x)). Qed.
Lemma lem3542044 {A : Type'} (x : A -> Prop) (s : A -> Prop) : (term5040 A x s) = (term5040 A x s).
Proof. exact (eq_refl (term5040 A x s)). Qed.
Lemma lem3542045 {A : Type'} (g : type686 A) (x : A -> Prop) (s : A -> Prop) : (term5039 A g x s) = (term5041 A g x s).
Proof. exact (MK_COMB (@lem3542041 A g x) (@lem3542044 A x s)). Qed.
Lemma lem3542048 {A : Type'} (g : type686 A) (x : A -> Prop) (s : A -> Prop) : (term1930 A x g s) = (term5041 A g x s).
Proof. exact (TRANS (@lem3542033 A g x s) (@lem3542045 A g x s)). Qed.
Lemma lem3542049 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem3542050 {A : Type'} (g : type686 A) (x : A -> Prop) (s : A -> Prop) : (term5042 A x g s) = (term5043 A g x s).
Proof. exact (MK_COMB (@lem3542049) (@lem3542048 A g x s)). Qed.
Lemma lem3542052 {A : Type'} (x : A) : (@IN A x (@EMPTY A)) = False.
Proof. exact (@lem3211730 A x (@lem3211729 A x)). Qed.
Lemma lem3542053 {A : Type'} (x : A -> Prop) : (@IN (A -> Prop) x (@EMPTY (A -> Prop))) = False.
Proof. exact (@lem3542052 (A -> Prop) x). Qed.
Lemma lem3542054 {A : Type'} (g : type686 A) (x : A -> Prop) (s : A -> Prop) : ((term1930 A x g s) = (@IN (A -> Prop) x (@EMPTY (A -> Prop)))) = ((term5041 A g x s) = False).
Proof. exact (MK_COMB (@lem3542050 A g x s) (@lem3542053 A x)). Qed.
Lemma lem3542056 (t : Prop) : (t = False) = (~ t).
Proof. exact (proj2 (@lem1857 t)). Qed.
Lemma lem3542057 {A : Type'} (g : type686 A) (x : A -> Prop) (s : A -> Prop) : ((term5041 A g x s) = False) = (term5044 A g x s).
Proof. exact (@lem3542056 (term5041 A g x s)). Qed.
Lemma lem3542062 {A : Type'} (g : type686 A) (x : A -> Prop) (s : A -> Prop) : ((term1930 A x g s) = (@IN (A -> Prop) x (@EMPTY (A -> Prop)))) = (term5044 A g x s).
Proof. exact (TRANS (@lem3542054 A g x s) (@lem3542057 A g x s)). Qed.
Lemma lem3542063 {A : Type'} (g : type686 A) (s : A -> Prop) : (term5045 A g s) = (term5046 A g s).
Proof. exact (fun_ext (fun x : A -> Prop => @lem3542062 A g x s)). Qed.
Lemma lem3542064 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem3542065 {A : Type'} (g : type686 A) (s : A -> Prop) : (term5002 A g s) = (term5047 A g s).
Proof. exact (MK_COMB (@lem3542064 A) (@lem3542063 A g s)). Qed.
Lemma lem3542070 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem3542071 {A : Type'} (g : type686 A) (s : A -> Prop) : (term5003 A g s) = (term5048 A g s).
Proof. exact (MK_COMB (@lem3542070) (@lem3542065 A g s)). Qed.
Lemma lem3542072 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem3542073 {A : Type'} (g : type686 A) (s : A -> Prop) : (term5005 A g s) = (term5049 A g s).
Proof. exact (MK_COMB (@lem3542072) (@lem3542071 A g s)). Qed.
Lemma lem3542083 {A : Type'} (s : A -> Prop) (x : A) (y : A) : (term1819 A x s y) = (term1820 A s x y).
Proof. exact (EQ_MP (@lem3211684 A s x y) (@lem3211683 A s x y)). Qed.
Lemma lem3542084 {A : Type'} (s : type686 A) (x : A -> Prop) (y : A -> Prop) : (term1930 A x s y) = (term5039 A s x y).
Proof. exact (@lem3542083 (A -> Prop) s x y). Qed.
Lemma lem3542085 {A : Type'} (g : type686 A) (t : A -> Prop) (s : A -> Prop) : (term1930 A t g s) = (term5039 A g t s).
Proof. exact (@lem3542084 A g t s). Qed.
Lemma lem3542089 {A : Type'} (P : A -> Prop) (x : A) : (@IN A x P) = (P x).
Proof. exact (EQ_MP (@lem3211610 A P x) (@lem3211609 A P x)). Qed.
Lemma lem3542090 {A : Type'} (P : type686 A) (x : A -> Prop) : (@IN (A -> Prop) x P) = (P x).
Proof. exact (@lem3542089 (A -> Prop) P x). Qed.
Lemma lem3542091 {A : Type'} (g : type686 A) (t : A -> Prop) : (@IN (A -> Prop) t g) = (g t).
Proof. exact (@lem3542090 A g t). Qed.
Lemma lem3542092 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem3542093 {A : Type'} (g : type686 A) (t : A -> Prop) : (term4082 A t g) = (term372 A g t).
Proof. exact (MK_COMB (@lem3542092) (@lem3542091 A g t)). Qed.
Lemma lem3542096 {A : Type'} (t : A -> Prop) (s : A -> Prop) : (term5040 A t s) = (term5040 A t s).
Proof. exact (eq_refl (term5040 A t s)). Qed.
Lemma lem3542097 {A : Type'} (g : type686 A) (t : A -> Prop) (s : A -> Prop) : (term5039 A g t s) = (term5041 A g t s).
Proof. exact (MK_COMB (@lem3542093 A g t) (@lem3542096 A t s)). Qed.
Lemma lem3542100 {A : Type'} (g : type686 A) (t : A -> Prop) (s : A -> Prop) : (term1930 A t g s) = (term5041 A g t s).
Proof. exact (TRANS (@lem3542085 A g t s) (@lem3542097 A g t s)). Qed.
Lemma lem3542101 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem3542102 {A : Type'} (g : type686 A) (t : A -> Prop) (s : A -> Prop) : (term4958 A t g s) = (term5050 A g t s).
Proof. exact (MK_COMB (@lem3542101) (@lem3542100 A g t s)). Qed.
Lemma lem3542110 {A : Type'} (P : A -> Prop) (x : A) : (@IN A x P) = (P x).
Proof. exact (EQ_MP (@lem3211610 A P x) (@lem3211609 A P x)). Qed.
Lemma lem3542111 {A : Type'} (P : A -> Prop) (x : A) : (@IN A x P) = (P x).
Proof. exact (@lem3542110 A P x). Qed.
Lemma lem3542112 {A : Type'} (t : A -> Prop) (x : A) : (@IN A x t) = (t x).
Proof. exact (@lem3542111 A t x). Qed.
Lemma lem3542113 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem3542114 {A : Type'} (t : A -> Prop) (x : A) : (term213 A x t) = (term214 A t x).
Proof. exact (MK_COMB (@lem3542113) (@lem3542112 A t x)). Qed.
Lemma lem3542116 {A : Type'} (P : A -> Prop) (x : A) : (@IN A x P) = (P x).
Proof. exact (EQ_MP (@lem3211610 A P x) (@lem3211609 A P x)). Qed.
Lemma lem3542117 {A : Type'} (P : A -> Prop) (x : A) : (@IN A x P) = (P x).
Proof. exact (@lem3542116 A P x). Qed.
Lemma lem3542118 {A : Type'} (u : A -> Prop) (x : A) : (@IN A x u) = (u x).
Proof. exact (@lem3542117 A u x). Qed.
Lemma lem3542119 {A : Type'} (t : A -> Prop) (u : A -> Prop) (x : A) : (term215 A t x u) = (term216 A t u x).
Proof. exact (MK_COMB (@lem3542114 A t x) (@lem3542118 A u x)). Qed.
Lemma lem3542122 {A : Type'} (t : A -> Prop) (u : A -> Prop) : (term217 A t u) = (term218 A t u).
Proof. exact (fun_ext (fun x : A => @lem3542119 A t u x)). Qed.
Lemma lem3542123 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem3542124 {A : Type'} (t : A -> Prop) (u : A -> Prop) : (term197 A t u) = (term219 A t u).
Proof. exact (MK_COMB (@lem3542123 A) (@lem3542122 A t u)). Qed.
Lemma lem3542129 {A : Type'} (g : type686 A) (s : A -> Prop) (t : A -> Prop) (u : A -> Prop) : (term5006 A g s t u) = (term5051 A g s t u).
Proof. exact (MK_COMB (@lem3542102 A g t s) (@lem3542124 A t u)). Qed.
Lemma lem3542132 {A : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) : (term5007 A g s u) = (term5052 A g s u).
Proof. exact (fun_ext (fun t : A -> Prop => @lem3542129 A g s t u)). Qed.
Lemma lem3542133 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem3542134 {A : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) : (term5008 A g s u) = (term5053 A g s u).
Proof. exact (MK_COMB (@lem3542133 A) (@lem3542132 A g s u)). Qed.
Lemma lem3542139 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem3542140 {A : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) : (term5010 A g s u) = (term5054 A g s u).
Proof. exact (MK_COMB (@lem3542139) (@lem3542134 A g s u)). Qed.
Lemma lem3542150 {A : Type'} (P : A -> Prop) (x : A) : (@IN A x P) = (P x).
Proof. exact (EQ_MP (@lem3211610 A P x) (@lem3211609 A P x)). Qed.
Lemma lem3542151 {A : Type'} (P : A -> Prop) (x : A) : (@IN A x P) = (P x).
Proof. exact (@lem3542150 A P x). Qed.
Lemma lem3542152 {A : Type'} (s : A -> Prop) (x : A) : (@IN A x s) = (s x).
Proof. exact (@lem3542151 A s x). Qed.
Lemma lem3542153 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem3542154 {A : Type'} (s : A -> Prop) (x : A) : (term213 A x s) = (term214 A s x).
Proof. exact (MK_COMB (@lem3542153) (@lem3542152 A s x)). Qed.
Lemma lem3542156 {A : Type'} (P : A -> Prop) (x : A) : (@IN A x P) = (P x).
Proof. exact (EQ_MP (@lem3211610 A P x) (@lem3211609 A P x)). Qed.
Lemma lem3542157 {A : Type'} (P : A -> Prop) (x : A) : (@IN A x P) = (P x).
Proof. exact (@lem3542156 A P x). Qed.
Lemma lem3542158 {A : Type'} (u : A -> Prop) (x : A) : (@IN A x u) = (u x).
Proof. exact (@lem3542157 A u x). Qed.
Lemma lem3542159 {A : Type'} (s : A -> Prop) (u : A -> Prop) (x : A) : (term215 A s x u) = (term216 A s u x).
Proof. exact (MK_COMB (@lem3542154 A s x) (@lem3542158 A u x)). Qed.
Lemma lem3542162 {A : Type'} (s : A -> Prop) (u : A -> Prop) : (term217 A s u) = (term218 A s u).
Proof. exact (fun_ext (fun x : A => @lem3542159 A s u x)). Qed.
Lemma lem3542163 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem3542164 {A : Type'} (s : A -> Prop) (u : A -> Prop) : (term197 A s u) = (term219 A s u).
Proof. exact (MK_COMB (@lem3542163 A) (@lem3542162 A s u)). Qed.
Lemma lem3542169 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem3542170 {A : Type'} (s : A -> Prop) (u : A -> Prop) : (term198 A s u) = (term220 A s u).
Proof. exact (MK_COMB (@lem3542169) (@lem3542164 A s u)). Qed.
Lemma lem3542178 {A : Type'} (s : A -> Prop) (x : A) (y : A) : (term1819 A x s y) = (term1820 A s x y).
Proof. exact (EQ_MP (@lem3211684 A s x y) (@lem3211683 A s x y)). Qed.
Lemma lem3542179 {A : Type'} (s : type686 A) (x : A -> Prop) (y : A -> Prop) : (term1930 A x s y) = (term5039 A s x y).
Proof. exact (@lem3542178 (A -> Prop) s x y). Qed.
Lemma lem3542180 {A : Type'} (g : type686 A) (t : A -> Prop) (s : A -> Prop) : (term1930 A t g s) = (term5039 A g t s).
Proof. exact (@lem3542179 A g t s). Qed.
Lemma lem3542184 {A : Type'} (P : A -> Prop) (x : A) : (@IN A x P) = (P x).
Proof. exact (EQ_MP (@lem3211610 A P x) (@lem3211609 A P x)). Qed.
Lemma lem3542185 {A : Type'} (P : type686 A) (x : A -> Prop) : (@IN (A -> Prop) x P) = (P x).
Proof. exact (@lem3542184 (A -> Prop) P x). Qed.
Lemma lem3542186 {A : Type'} (g : type686 A) (t : A -> Prop) : (@IN (A -> Prop) t g) = (g t).
Proof. exact (@lem3542185 A g t). Qed.
Lemma lem3542187 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem3542188 {A : Type'} (g : type686 A) (t : A -> Prop) : (term4082 A t g) = (term372 A g t).
Proof. exact (MK_COMB (@lem3542187) (@lem3542186 A g t)). Qed.
Lemma lem3542191 {A : Type'} (t : A -> Prop) (s : A -> Prop) : (term5040 A t s) = (term5040 A t s).
Proof. exact (eq_refl (term5040 A t s)). Qed.
Lemma lem3542192 {A : Type'} (g : type686 A) (t : A -> Prop) (s : A -> Prop) : (term5039 A g t s) = (term5041 A g t s).
Proof. exact (MK_COMB (@lem3542188 A g t) (@lem3542191 A t s)). Qed.
Lemma lem3542195 {A : Type'} (g : type686 A) (t : A -> Prop) (s : A -> Prop) : (term1930 A t g s) = (term5041 A g t s).
Proof. exact (TRANS (@lem3542180 A g t s) (@lem3542192 A g t s)). Qed.
Lemma lem3542196 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem3542197 {A : Type'} (g : type686 A) (t : A -> Prop) (s : A -> Prop) : (term4958 A t g s) = (term5050 A g t s).
Proof. exact (MK_COMB (@lem3542196) (@lem3542195 A g t s)). Qed.
Lemma lem3542205 {_83095 : Type'} (p : _83095 -> Prop) (x : _83095) : (term221 _83095 x p) = (p x).
Proof. exact (EQ_MP (@lem3211641 _83095 p x) (@lem3211640 _83095 p x)). Qed.
Lemma lem3542206 {A : Type'} (p : A -> Prop) (x : A) : (term221 A x p) = (p x).
Proof. exact (@lem3542205 A p x). Qed.
Lemma lem3542207 {A B : Type'} (u : A -> Prop) (f : A -> B) (t : A -> Prop) (x : A) : (term5055 A B x u f t) = (term5056 A B u f t x).
Proof. exact (@lem3542206 A (term5057 A B u f t) x). Qed.
Lemma lem3542208 {A B : Type'} (u : A -> Prop) (x : A) (f : A -> B) (t : A -> Prop) : (term5056 A B u f t x) = (term57 A B u x f t).
Proof. exact (eq_refl (term5056 A B u f t x)). Qed.
Lemma lem3542209 {A : Type'} (GEN_PVAR_85 : A) : (@SETSPEC A GEN_PVAR_85) = (@SETSPEC A GEN_PVAR_85).
Proof. exact (eq_refl (@SETSPEC A GEN_PVAR_85)). Qed.
Lemma lem3542210 {A B : Type'} (GEN_PVAR_85 : A) (u : A -> Prop) (x : A) (f : A -> B) (t : A -> Prop) : (term5058 A B GEN_PVAR_85 u f t x) = (term59 A B GEN_PVAR_85 u x f t).
Proof. exact (MK_COMB (@lem3542209 A GEN_PVAR_85) (@lem3542208 A B u x f t)). Qed.
Lemma lem3542211 {A : Type'} (x : A) : x = x.
Proof. exact (eq_refl x). Qed.
Lemma lem3542212 {A B : Type'} (GEN_PVAR_85 : A) (u : A -> Prop) (f : A -> B) (t : A -> Prop) (x : A) : (term5059 A B GEN_PVAR_85 u f t x) = (term61 A B GEN_PVAR_85 u f t x).
Proof. exact (MK_COMB (@lem3542210 A B GEN_PVAR_85 u x f t) (@lem3542211 A x)). Qed.
Lemma lem3542213 {A B : Type'} (GEN_PVAR_85 : A) (u : A -> Prop) (f : A -> B) (t : A -> Prop) : (term5060 A B GEN_PVAR_85 u f t) = (term63 A B GEN_PVAR_85 u f t).
Proof. exact (fun_ext (fun x : A => @lem3542212 A B GEN_PVAR_85 u f t x)). Qed.
Lemma lem3542214 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem3542215 {A B : Type'} (GEN_PVAR_85 : A) (u : A -> Prop) (f : A -> B) (t : A -> Prop) : (term5061 A B GEN_PVAR_85 u f t) = (term65 A B GEN_PVAR_85 u f t).
Proof. exact (MK_COMB (@lem3542214 A) (@lem3542213 A B GEN_PVAR_85 u f t)). Qed.
Lemma lem3542216 {A B : Type'} (u : A -> Prop) (f : A -> B) (t : A -> Prop) : (term5062 A B u f t) = (term67 A B u f t).
Proof. exact (fun_ext (fun GEN_PVAR_85 : A => @lem3542215 A B GEN_PVAR_85 u f t)). Qed.
Lemma lem3542217 {A : Type'} : (@GSPEC A) = (@GSPEC A).
Proof. exact (eq_refl (@GSPEC A)). Qed.
Lemma lem3542218 {A B : Type'} (u : A -> Prop) (f : A -> B) (t : A -> Prop) : (term5063 A B u f t) = (term69 A B u f t).
Proof. exact (MK_COMB (@lem3542217 A) (@lem3542216 A B u f t)). Qed.
Lemma lem3542219 {A : Type'} (x : A) : (@IN A x) = (@IN A x).
Proof. exact (eq_refl (@IN A x)). Qed.
Lemma lem3542220 {A B : Type'} (x : A) (u : A -> Prop) (f : A -> B) (t : A -> Prop) : (term5055 A B x u f t) = (term5064 A B x u f t).
Proof. exact (MK_COMB (@lem3542219 A x) (@lem3542218 A B u f t)). Qed.
Lemma lem3542221 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem3542222 {A B : Type'} (x : A) (u : A -> Prop) (f : A -> B) (t : A -> Prop) : (term5065 A B x u f t) = (term5066 A B x u f t).
Proof. exact (MK_COMB (@lem3542221) (@lem3542220 A B x u f t)). Qed.
Lemma lem3542223 {A B : Type'} (u : A -> Prop) (x : A) (f : A -> B) (t : A -> Prop) : (term5056 A B u f t x) = (term57 A B u x f t).
Proof. exact (eq_refl (term5056 A B u f t x)). Qed.
Lemma lem3542224 {A B : Type'} (u : A -> Prop) (x : A) (f : A -> B) (t : A -> Prop) : ((term5055 A B x u f t) = (term5056 A B u f t x)) = ((term5064 A B x u f t) = (term57 A B u x f t)).
Proof. exact (MK_COMB (@lem3542222 A B x u f t) (@lem3542223 A B u x f t)). Qed.
Lemma lem3542225 {A B : Type'} (u : A -> Prop) (x : A) (f : A -> B) (t : A -> Prop) : (term5064 A B x u f t) = (term57 A B u x f t).
Proof. exact (EQ_MP (@lem3542224 A B u x f t) (@lem3542207 A B u f t x)). Qed.
Lemma lem3542229 {A : Type'} (P : A -> Prop) (x : A) : (@IN A x P) = (P x).
Proof. exact (EQ_MP (@lem3211610 A P x) (@lem3211609 A P x)). Qed.
Lemma lem3542230 {A : Type'} (P : A -> Prop) (x : A) : (@IN A x P) = (P x).
Proof. exact (@lem3542229 A P x). Qed.
Lemma lem3542231 {A : Type'} (u : A -> Prop) (x : A) : (@IN A x u) = (u x).
Proof. exact (@lem3542230 A u x). Qed.
Lemma lem3542232 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem3542233 {A : Type'} (u : A -> Prop) (x : A) : (term56 A x u) = (term234 A u x).
Proof. exact (MK_COMB (@lem3542232) (@lem3542231 A u x)). Qed.
Lemma lem3542235 {A B : Type'} (y : B) (f : A -> B) (s : A -> Prop) : (term27 A B y f s) = (term28 A B y f s).
Proof. exact (EQ_MP (@lem3211657 A B y f s) (@lem3211656 A B y s f)). Qed.
Lemma lem3542236 {A B : Type'} (y : B) (f : A -> B) (s : A -> Prop) : (term27 A B y f s) = (term28 A B y f s).
Proof. exact (@lem3542235 A B y f s). Qed.
Lemma lem3542237 {A B : Type'} (x : A) (f : A -> B) (t : A -> Prop) : (term54 A B x f t) = (term55 A B x f t).
Proof. exact (@lem3542236 A B (f x) f t). Qed.
Lemma lem3542247 {A : Type'} (P : A -> Prop) (x : A) : (@IN A x P) = (P x).
Proof. exact (EQ_MP (@lem3211610 A P x) (@lem3211609 A P x)). Qed.
Lemma lem3542248 {A : Type'} (P : A -> Prop) (x : A) : (@IN A x P) = (P x).
Proof. exact (@lem3542247 A P x). Qed.
Lemma lem3542249 {A : Type'} (t : A -> Prop) (x' : A) : (@IN A x' t) = (t x').
Proof. exact (@lem3542248 A t x'). Qed.
Lemma lem3542250 {A B : Type'} (x : A) (f : A -> B) (x' : A) : (term235 A B x f x') = (term235 A B x f x').
Proof. exact (eq_refl (term235 A B x f x')). Qed.
Lemma lem3542251 {A B : Type'} (x : A) (f : A -> B) (t : A -> Prop) (x' : A) : (term236 A B x f x' t) = (term237 A B x f t x').
Proof. exact (MK_COMB (@lem3542250 A B x f x') (@lem3542249 A t x')). Qed.
Lemma lem3542254 {A B : Type'} (x : A) (f : A -> B) (t : A -> Prop) : (term238 A B x f t) = (term239 A B x f t).
Proof. exact (fun_ext (fun x' : A => @lem3542251 A B x f t x')). Qed.
Lemma lem3542255 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem3542256 {A B : Type'} (x : A) (f : A -> B) (t : A -> Prop) : (term55 A B x f t) = (term240 A B x f t).
Proof. exact (MK_COMB (@lem3542255 A) (@lem3542254 A B x f t)). Qed.
Lemma lem3542261 {A B : Type'} (x : A) (f : A -> B) (t : A -> Prop) : (term54 A B x f t) = (term240 A B x f t).
Proof. exact (TRANS (@lem3542237 A B x f t) (@lem3542256 A B x f t)). Qed.
Lemma lem3542262 {A B : Type'} (u : A -> Prop) (x : A) (f : A -> B) (t : A -> Prop) : (term57 A B u x f t) = (term241 A B u x f t).
Proof. exact (MK_COMB (@lem3542233 A u x) (@lem3542261 A B x f t)). Qed.
Lemma lem3542265 {A B : Type'} (u : A -> Prop) (x : A) (f : A -> B) (t : A -> Prop) : (term5064 A B x u f t) = (term241 A B u x f t).
Proof. exact (TRANS (@lem3542225 A B u x f t) (@lem3542262 A B u x f t)). Qed.
Lemma lem3542266 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem3542267 {A B : Type'} (u : A -> Prop) (x : A) (f : A -> B) (t : A -> Prop) : (term5067 A B x u f t) = (term243 A B u x f t).
Proof. exact (MK_COMB (@lem3542266) (@lem3542265 A B u x f t)). Qed.
Lemma lem3542269 {A : Type'} (P : A -> Prop) (x : A) : (@IN A x P) = (P x).
Proof. exact (EQ_MP (@lem3211610 A P x) (@lem3211609 A P x)). Qed.
Lemma lem3542270 {A : Type'} (P : A -> Prop) (x : A) : (@IN A x P) = (P x).
Proof. exact (@lem3542269 A P x). Qed.
Lemma lem3542271 {A : Type'} (t : A -> Prop) (x : A) : (@IN A x t) = (t x).
Proof. exact (@lem3542270 A t x). Qed.
Lemma lem3542272 {A B : Type'} (u : A -> Prop) (f : A -> B) (t : A -> Prop) (x : A) : (term5068 A B u f x t) = (term245 A B u f t x).
Proof. exact (MK_COMB (@lem3542267 A B u x f t) (@lem3542271 A t x)). Qed.
Lemma lem3542275 {A B : Type'} (u : A -> Prop) (f : A -> B) (t : A -> Prop) : (term5069 A B u f t) = (term247 A B u f t).
Proof. exact (fun_ext (fun x : A => @lem3542272 A B u f t x)). Qed.
Lemma lem3542276 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem3542277 {A B : Type'} (u : A -> Prop) (f : A -> B) (t : A -> Prop) : (term5011 A B u f t) = (term248 A B u f t).
Proof. exact (MK_COMB (@lem3542276 A) (@lem3542275 A B u f t)). Qed.
Lemma lem3542282 {A B : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) (t : A -> Prop) : (term5012 A B g s u f t) = (term5070 A B g s u f t).
Proof. exact (MK_COMB (@lem3542197 A g t s) (@lem3542277 A B u f t)). Qed.
Lemma lem3542285 {A B : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) : (term5013 A B g s u f) = (term5071 A B g s u f).
Proof. exact (fun_ext (fun t : A -> Prop => @lem3542282 A B g s u f t)). Qed.
Lemma lem3542286 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem3542287 {A B : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) : (term5014 A B g s u f) = (term5072 A B g s u f).
Proof. exact (MK_COMB (@lem3542286 A) (@lem3542285 A B g s u f)). Qed.
Lemma lem3542292 {A B : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) : (term5015 A B g s u f) = (term5073 A B g s u f).
Proof. exact (MK_COMB (@lem3542170 A s u) (@lem3542287 A B g s u f)). Qed.
Lemma lem3542295 {A B : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) : (term5016 A B g s u f) = (term5074 A B g s u f).
Proof. exact (MK_COMB (@lem3542140 A g s u) (@lem3542292 A B g s u f)). Qed.
Lemma lem3542298 {A B : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) : (term5017 A B g s u f) = (term5075 A B g s u f).
Proof. exact (MK_COMB (@lem3542073 A g s) (@lem3542295 A B g s u f)). Qed.
Lemma lem3542301 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem3542302 {A B : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) : (term5019 A B g s u f) = (term5076 A B g s u f).
Proof. exact (MK_COMB (@lem3542301) (@lem3542298 A B g s u f)). Qed.
Lemma lem3542314 {_83095 : Type'} (p : _83095 -> Prop) (x : _83095) : (term221 _83095 x p) = (p x).
Proof. exact (EQ_MP (@lem3211641 _83095 p x) (@lem3211640 _83095 p x)). Qed.
Lemma lem3542315 {A : Type'} (p : A -> Prop) (x : A) : (term221 A x p) = (p x).
Proof. exact (@lem3542314 A p x). Qed.
Lemma lem3542316 {A B : Type'} (u : A -> Prop) (f : A -> B) (s : A -> Prop) (x : A) : (term5055 A B x u f s) = (term5056 A B u f s x).
Proof. exact (@lem3542315 A (term5057 A B u f s) x). Qed.
Lemma lem3542317 {A B : Type'} (u : A -> Prop) (x : A) (f : A -> B) (s : A -> Prop) : (term5056 A B u f s x) = (term57 A B u x f s).
Proof. exact (eq_refl (term5056 A B u f s x)). Qed.
Lemma lem3542318 {A : Type'} (GEN_PVAR_82 : A) : (@SETSPEC A GEN_PVAR_82) = (@SETSPEC A GEN_PVAR_82).
Proof. exact (eq_refl (@SETSPEC A GEN_PVAR_82)). Qed.
Lemma lem3542319 {A B : Type'} (GEN_PVAR_82 : A) (u : A -> Prop) (x : A) (f : A -> B) (s : A -> Prop) : (term5058 A B GEN_PVAR_82 u f s x) = (term59 A B GEN_PVAR_82 u x f s).
Proof. exact (MK_COMB (@lem3542318 A GEN_PVAR_82) (@lem3542317 A B u x f s)). Qed.
Lemma lem3542320 {A : Type'} (x : A) : x = x.
Proof. exact (eq_refl x). Qed.
Lemma lem3542321 {A B : Type'} (GEN_PVAR_82 : A) (u : A -> Prop) (f : A -> B) (s : A -> Prop) (x : A) : (term5059 A B GEN_PVAR_82 u f s x) = (term61 A B GEN_PVAR_82 u f s x).
Proof. exact (MK_COMB (@lem3542319 A B GEN_PVAR_82 u x f s) (@lem3542320 A x)). Qed.
Lemma lem3542322 {A B : Type'} (GEN_PVAR_82 : A) (u : A -> Prop) (f : A -> B) (s : A -> Prop) : (term5060 A B GEN_PVAR_82 u f s) = (term63 A B GEN_PVAR_82 u f s).
Proof. exact (fun_ext (fun x : A => @lem3542321 A B GEN_PVAR_82 u f s x)). Qed.
Lemma lem3542323 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem3542324 {A B : Type'} (GEN_PVAR_82 : A) (u : A -> Prop) (f : A -> B) (s : A -> Prop) : (term5061 A B GEN_PVAR_82 u f s) = (term65 A B GEN_PVAR_82 u f s).
Proof. exact (MK_COMB (@lem3542323 A) (@lem3542322 A B GEN_PVAR_82 u f s)). Qed.
Lemma lem3542325 {A B : Type'} (u : A -> Prop) (f : A -> B) (s : A -> Prop) : (term5062 A B u f s) = (term67 A B u f s).
Proof. exact (fun_ext (fun GEN_PVAR_82 : A => @lem3542324 A B GEN_PVAR_82 u f s)). Qed.
Lemma lem3542326 {A : Type'} : (@GSPEC A) = (@GSPEC A).
Proof. exact (eq_refl (@GSPEC A)). Qed.
Lemma lem3542327 {A B : Type'} (u : A -> Prop) (f : A -> B) (s : A -> Prop) : (term5063 A B u f s) = (term69 A B u f s).
Proof. exact (MK_COMB (@lem3542326 A) (@lem3542325 A B u f s)). Qed.
Lemma lem3542328 {A : Type'} (x : A) : (@IN A x) = (@IN A x).
Proof. exact (eq_refl (@IN A x)). Qed.
Lemma lem3542329 {A B : Type'} (x : A) (u : A -> Prop) (f : A -> B) (s : A -> Prop) : (term5055 A B x u f s) = (term5064 A B x u f s).
Proof. exact (MK_COMB (@lem3542328 A x) (@lem3542327 A B u f s)). Qed.
Lemma lem3542330 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem3542331 {A B : Type'} (x : A) (u : A -> Prop) (f : A -> B) (s : A -> Prop) : (term5065 A B x u f s) = (term5066 A B x u f s).
Proof. exact (MK_COMB (@lem3542330) (@lem3542329 A B x u f s)). Qed.
Lemma lem3542332 {A B : Type'} (u : A -> Prop) (x : A) (f : A -> B) (s : A -> Prop) : (term5056 A B u f s x) = (term57 A B u x f s).
Proof. exact (eq_refl (term5056 A B u f s x)). Qed.
Lemma lem3542333 {A B : Type'} (u : A -> Prop) (x : A) (f : A -> B) (s : A -> Prop) : ((term5055 A B x u f s) = (term5056 A B u f s x)) = ((term5064 A B x u f s) = (term57 A B u x f s)).
Proof. exact (MK_COMB (@lem3542331 A B x u f s) (@lem3542332 A B u x f s)). Qed.
Lemma lem3542334 {A B : Type'} (u : A -> Prop) (x : A) (f : A -> B) (s : A -> Prop) : (term5064 A B x u f s) = (term57 A B u x f s).
Proof. exact (EQ_MP (@lem3542333 A B u x f s) (@lem3542316 A B u f s x)). Qed.
Lemma lem3542338 {A : Type'} (P : A -> Prop) (x : A) : (@IN A x P) = (P x).
Proof. exact (EQ_MP (@lem3211610 A P x) (@lem3211609 A P x)). Qed.
Lemma lem3542339 {A : Type'} (P : A -> Prop) (x : A) : (@IN A x P) = (P x).
Proof. exact (@lem3542338 A P x). Qed.
Lemma lem3542340 {A : Type'} (u : A -> Prop) (x : A) : (@IN A x u) = (u x).
Proof. exact (@lem3542339 A u x). Qed.
Lemma lem3542341 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem3542342 {A : Type'} (u : A -> Prop) (x : A) : (term56 A x u) = (term234 A u x).
Proof. exact (MK_COMB (@lem3542341) (@lem3542340 A u x)). Qed.
Lemma lem3542344 {A B : Type'} (y : B) (f : A -> B) (s : A -> Prop) : (term27 A B y f s) = (term28 A B y f s).
Proof. exact (EQ_MP (@lem3211657 A B y f s) (@lem3211656 A B y s f)). Qed.
Lemma lem3542345 {A B : Type'} (y : B) (f : A -> B) (s : A -> Prop) : (term27 A B y f s) = (term28 A B y f s).
Proof. exact (@lem3542344 A B y f s). Qed.
Lemma lem3542346 {A B : Type'} (x : A) (f : A -> B) (s : A -> Prop) : (term54 A B x f s) = (term55 A B x f s).
Proof. exact (@lem3542345 A B (f x) f s). Qed.
Lemma lem3542356 {A : Type'} (P : A -> Prop) (x : A) : (@IN A x P) = (P x).
Proof. exact (EQ_MP (@lem3211610 A P x) (@lem3211609 A P x)). Qed.
Lemma lem3542357 {A : Type'} (P : A -> Prop) (x : A) : (@IN A x P) = (P x).
Proof. exact (@lem3542356 A P x). Qed.
Lemma lem3542358 {A : Type'} (s : A -> Prop) (x' : A) : (@IN A x' s) = (s x').
Proof. exact (@lem3542357 A s x'). Qed.
Lemma lem3542359 {A B : Type'} (x : A) (f : A -> B) (x' : A) : (term235 A B x f x') = (term235 A B x f x').
Proof. exact (eq_refl (term235 A B x f x')). Qed.
Lemma lem3542360 {A B : Type'} (x : A) (f : A -> B) (s : A -> Prop) (x' : A) : (term236 A B x f x' s) = (term237 A B x f s x').
Proof. exact (MK_COMB (@lem3542359 A B x f x') (@lem3542358 A s x')). Qed.
Lemma lem3542363 {A B : Type'} (x : A) (f : A -> B) (s : A -> Prop) : (term238 A B x f s) = (term239 A B x f s).
Proof. exact (fun_ext (fun x' : A => @lem3542360 A B x f s x')). Qed.
Lemma lem3542364 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem3542365 {A B : Type'} (x : A) (f : A -> B) (s : A -> Prop) : (term55 A B x f s) = (term240 A B x f s).
Proof. exact (MK_COMB (@lem3542364 A) (@lem3542363 A B x f s)). Qed.
Lemma lem3542370 {A B : Type'} (x : A) (f : A -> B) (s : A -> Prop) : (term54 A B x f s) = (term240 A B x f s).
Proof. exact (TRANS (@lem3542346 A B x f s) (@lem3542365 A B x f s)). Qed.
Lemma lem3542371 {A B : Type'} (u : A -> Prop) (x : A) (f : A -> B) (s : A -> Prop) : (term57 A B u x f s) = (term241 A B u x f s).
Proof. exact (MK_COMB (@lem3542342 A u x) (@lem3542370 A B x f s)). Qed.
Lemma lem3542374 {A B : Type'} (u : A -> Prop) (x : A) (f : A -> B) (s : A -> Prop) : (term5064 A B x u f s) = (term241 A B u x f s).
Proof. exact (TRANS (@lem3542334 A B u x f s) (@lem3542371 A B u x f s)). Qed.
Lemma lem3542375 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem3542376 {A B : Type'} (u : A -> Prop) (x : A) (f : A -> B) (s : A -> Prop) : (term5067 A B x u f s) = (term243 A B u x f s).
Proof. exact (MK_COMB (@lem3542375) (@lem3542374 A B u x f s)). Qed.
Lemma lem3542378 {A : Type'} (P : A -> Prop) (x : A) : (@IN A x P) = (P x).
Proof. exact (EQ_MP (@lem3211610 A P x) (@lem3211609 A P x)). Qed.
Lemma lem3542379 {A : Type'} (P : A -> Prop) (x : A) : (@IN A x P) = (P x).
Proof. exact (@lem3542378 A P x). Qed.
Lemma lem3542380 {A : Type'} (s : A -> Prop) (x : A) : (@IN A x s) = (s x).
Proof. exact (@lem3542379 A s x). Qed.
Lemma lem3542381 {A B : Type'} (u : A -> Prop) (f : A -> B) (s : A -> Prop) (x : A) : (term5068 A B u f x s) = (term245 A B u f s x).
Proof. exact (MK_COMB (@lem3542376 A B u x f s) (@lem3542380 A s x)). Qed.
Lemma lem3542384 {A B : Type'} (u : A -> Prop) (f : A -> B) (s : A -> Prop) : (term5069 A B u f s) = (term247 A B u f s).
Proof. exact (fun_ext (fun x : A => @lem3542381 A B u f s x)). Qed.
Lemma lem3542385 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem3542386 {A B : Type'} (u : A -> Prop) (f : A -> B) (s : A -> Prop) : (term5011 A B u f s) = (term248 A B u f s).
Proof. exact (MK_COMB (@lem3542385 A) (@lem3542384 A B u f s)). Qed.
Lemma lem3542391 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem3542392 {A B : Type'} (u : A -> Prop) (f : A -> B) (s : A -> Prop) : (term5021 A B u f s) = (term5077 A B u f s).
Proof. exact (MK_COMB (@lem3542391) (@lem3542386 A B u f s)). Qed.
Lemma lem3542400 {A : Type'} (s : type686 A) (x : A) : (term32 A x s) = (term33 A s x).
Proof. exact (EQ_MP (@lem3211669 A s x) (@lem3211668 A s x)). Qed.
Lemma lem3542401 {A : Type'} (s : type686 A) (x : A) : (term32 A x s) = (term33 A s x).
Proof. exact (@lem3542400 A s x). Qed.
Lemma lem3542402 {A : Type'} (g : type686 A) (s : A -> Prop) (x : A) : (term5078 A x g s) = (term5079 A g s x).
Proof. exact (@lem3542401 A (@DELETE (A -> Prop) g s) x). Qed.
Lemma lem3542410 {A : Type'} (s : A -> Prop) (x : A) (y : A) : (term1819 A x s y) = (term1820 A s x y).
Proof. exact (EQ_MP (@lem3211684 A s x y) (@lem3211683 A s x y)). Qed.
Lemma lem3542411 {A : Type'} (s : type686 A) (x : A -> Prop) (y : A -> Prop) : (term1930 A x s y) = (term5039 A s x y).
Proof. exact (@lem3542410 (A -> Prop) s x y). Qed.
Lemma lem3542412 {A : Type'} (g : type686 A) (t : A -> Prop) (s : A -> Prop) : (term1930 A t g s) = (term5039 A g t s).
Proof. exact (@lem3542411 A g t s). Qed.
Lemma lem3542416 {A : Type'} (P : A -> Prop) (x : A) : (@IN A x P) = (P x).
Proof. exact (EQ_MP (@lem3211610 A P x) (@lem3211609 A P x)). Qed.
Lemma lem3542417 {A : Type'} (P : type686 A) (x : A -> Prop) : (@IN (A -> Prop) x P) = (P x).
Proof. exact (@lem3542416 (A -> Prop) P x). Qed.
Lemma lem3542418 {A : Type'} (g : type686 A) (t : A -> Prop) : (@IN (A -> Prop) t g) = (g t).
Proof. exact (@lem3542417 A g t). Qed.
Lemma lem3542419 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem3542420 {A : Type'} (g : type686 A) (t : A -> Prop) : (term4082 A t g) = (term372 A g t).
Proof. exact (MK_COMB (@lem3542419) (@lem3542418 A g t)). Qed.
Lemma lem3542423 {A : Type'} (t : A -> Prop) (s : A -> Prop) : (term5040 A t s) = (term5040 A t s).
Proof. exact (eq_refl (term5040 A t s)). Qed.
Lemma lem3542424 {A : Type'} (g : type686 A) (t : A -> Prop) (s : A -> Prop) : (term5039 A g t s) = (term5041 A g t s).
Proof. exact (MK_COMB (@lem3542420 A g t) (@lem3542423 A t s)). Qed.
Lemma lem3542427 {A : Type'} (g : type686 A) (t : A -> Prop) (s : A -> Prop) : (term1930 A t g s) = (term5041 A g t s).
Proof. exact (TRANS (@lem3542412 A g t s) (@lem3542424 A g t s)). Qed.
Lemma lem3542428 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem3542429 {A : Type'} (g : type686 A) (t : A -> Prop) (s : A -> Prop) : (term4958 A t g s) = (term5050 A g t s).
Proof. exact (MK_COMB (@lem3542428) (@lem3542427 A g t s)). Qed.
Lemma lem3542431 {A : Type'} (P : A -> Prop) (x : A) : (@IN A x P) = (P x).
Proof. exact (EQ_MP (@lem3211610 A P x) (@lem3211609 A P x)). Qed.
Lemma lem3542432 {A : Type'} (P : A -> Prop) (x : A) : (@IN A x P) = (P x).
Proof. exact (@lem3542431 A P x). Qed.
Lemma lem3542433 {A : Type'} (t : A -> Prop) (x : A) : (@IN A x t) = (t x).
Proof. exact (@lem3542432 A t x). Qed.
Lemma lem3542434 {A : Type'} (g : type686 A) (s : A -> Prop) (t : A -> Prop) (x : A) : (term5080 A g s x t) = (term5081 A g s t x).
Proof. exact (MK_COMB (@lem3542429 A g t s) (@lem3542433 A t x)). Qed.
Lemma lem3542437 {A : Type'} (g : type686 A) (s : A -> Prop) (x : A) : (term5082 A g s x) = (term5083 A g s x).
Proof. exact (fun_ext (fun t : A -> Prop => @lem3542434 A g s t x)). Qed.
Lemma lem3542438 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem3542439 {A : Type'} (g : type686 A) (s : A -> Prop) (x : A) : (term5079 A g s x) = (term5084 A g s x).
Proof. exact (MK_COMB (@lem3542438 A) (@lem3542437 A g s x)). Qed.
Lemma lem3542444 {A : Type'} (g : type686 A) (s : A -> Prop) (x : A) : (term5078 A x g s) = (term5084 A g s x).
Proof. exact (TRANS (@lem3542402 A g s x) (@lem3542439 A g s x)). Qed.
Lemma lem3542445 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem3542446 {A : Type'} (g : type686 A) (s : A -> Prop) (x : A) : (term5085 A x g s) = (term5086 A g s x).
Proof. exact (MK_COMB (@lem3542445) (@lem3542444 A g s x)). Qed.
Lemma lem3542448 {A : Type'} (P : A -> Prop) (x : A) : (@IN A x P) = (P x).
Proof. exact (EQ_MP (@lem3211610 A P x) (@lem3211609 A P x)). Qed.
Lemma lem3542449 {A : Type'} (P : A -> Prop) (x : A) : (@IN A x P) = (P x).
Proof. exact (@lem3542448 A P x). Qed.
Lemma lem3542450 {A : Type'} (u : A -> Prop) (x : A) : (@IN A x u) = (u x).
Proof. exact (@lem3542449 A u x). Qed.
Lemma lem3542451 {A : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) (x : A) : (term5087 A g s x u) = (term5088 A g s u x).
Proof. exact (MK_COMB (@lem3542446 A g s x) (@lem3542450 A u x)). Qed.
Lemma lem3542454 {A : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) : (term5089 A g s u) = (term5090 A g s u).
Proof. exact (fun_ext (fun x : A => @lem3542451 A g s u x)). Qed.
Lemma lem3542455 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem3542456 {A : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) : (term5023 A g s u) = (term5091 A g s u).
Proof. exact (MK_COMB (@lem3542455 A) (@lem3542454 A g s u)). Qed.
Lemma lem3542461 {A B : Type'} (f : A -> B) (g : type686 A) (s : A -> Prop) (u : A -> Prop) : (term5025 A B f g s u) = (term5092 A B f g s u).
Proof. exact (MK_COMB (@lem3542392 A B u f s) (@lem3542456 A g s u)). Qed.
Lemma lem3542464 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem3542465 {A B : Type'} (f : A -> B) (g : type686 A) (s : A -> Prop) (u : A -> Prop) : (term5027 A B f g s u) = (term5093 A B f g s u).
Proof. exact (MK_COMB (@lem3542464) (@lem3542461 A B f g s u)). Qed.
Lemma lem3542475 {_83095 : Type'} (p : _83095 -> Prop) (x : _83095) : (term221 _83095 x p) = (p x).
Proof. exact (EQ_MP (@lem3211641 _83095 p x) (@lem3211640 _83095 p x)). Qed.
Lemma lem3542476 {A : Type'} (p : A -> Prop) (x : A) : (term221 A x p) = (p x).
Proof. exact (@lem3542475 A p x). Qed.
Lemma lem3542477 {A B : Type'} (u : A -> Prop) (f : A -> B) (g : type686 A) (s : A -> Prop) (x : A) : (term5094 A B x u f g s) = (term5095 A B u f g s x).
Proof. exact (@lem3542476 A (term5096 A B u f g s) x). Qed.
Lemma lem3542478 {A B : Type'} (u : A -> Prop) (x : A) (f : A -> B) (g : type686 A) (s : A -> Prop) : (term5095 A B u f g s x) = (term5097 A B u x f g s).
Proof. exact (eq_refl (term5095 A B u f g s x)). Qed.
Lemma lem3542479 {A : Type'} (GEN_PVAR_83 : A) : (@SETSPEC A GEN_PVAR_83) = (@SETSPEC A GEN_PVAR_83).
Proof. exact (eq_refl (@SETSPEC A GEN_PVAR_83)). Qed.
Lemma lem3542480 {A B : Type'} (GEN_PVAR_83 : A) (u : A -> Prop) (x : A) (f : A -> B) (g : type686 A) (s : A -> Prop) : (term5098 A B GEN_PVAR_83 u f g s x) = (term5099 A B GEN_PVAR_83 u x f g s).
Proof. exact (MK_COMB (@lem3542479 A GEN_PVAR_83) (@lem3542478 A B u x f g s)). Qed.
Lemma lem3542481 {A : Type'} (x : A) : x = x.
Proof. exact (eq_refl x). Qed.
Lemma lem3542482 {A B : Type'} (GEN_PVAR_83 : A) (u : A -> Prop) (f : A -> B) (g : type686 A) (s : A -> Prop) (x : A) : (term5100 A B GEN_PVAR_83 u f g s x) = (term5101 A B GEN_PVAR_83 u f g s x).
Proof. exact (MK_COMB (@lem3542480 A B GEN_PVAR_83 u x f g s) (@lem3542481 A x)). Qed.
Lemma lem3542483 {A B : Type'} (GEN_PVAR_83 : A) (u : A -> Prop) (f : A -> B) (g : type686 A) (s : A -> Prop) : (term5102 A B GEN_PVAR_83 u f g s) = (term5103 A B GEN_PVAR_83 u f g s).
Proof. exact (fun_ext (fun x : A => @lem3542482 A B GEN_PVAR_83 u f g s x)). Qed.
Lemma lem3542484 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem3542485 {A B : Type'} (GEN_PVAR_83 : A) (u : A -> Prop) (f : A -> B) (g : type686 A) (s : A -> Prop) : (term5104 A B GEN_PVAR_83 u f g s) = (term5105 A B GEN_PVAR_83 u f g s).
Proof. exact (MK_COMB (@lem3542484 A) (@lem3542483 A B GEN_PVAR_83 u f g s)). Qed.
Lemma lem3542486 {A B : Type'} (u : A -> Prop) (f : A -> B) (g : type686 A) (s : A -> Prop) : (term5106 A B u f g s) = (term5107 A B u f g s).
Proof. exact (fun_ext (fun GEN_PVAR_83 : A => @lem3542485 A B GEN_PVAR_83 u f g s)). Qed.
Lemma lem3542487 {A : Type'} : (@GSPEC A) = (@GSPEC A).
Proof. exact (eq_refl (@GSPEC A)). Qed.
Lemma lem3542488 {A B : Type'} (u : A -> Prop) (f : A -> B) (g : type686 A) (s : A -> Prop) : (term5108 A B u f g s) = (term5030 A B u f g s).
Proof. exact (MK_COMB (@lem3542487 A) (@lem3542486 A B u f g s)). Qed.
Lemma lem3542489 {A : Type'} (x : A) : (@IN A x) = (@IN A x).
Proof. exact (eq_refl (@IN A x)). Qed.
Lemma lem3542490 {A B : Type'} (x : A) (u : A -> Prop) (f : A -> B) (g : type686 A) (s : A -> Prop) : (term5094 A B x u f g s) = (term5109 A B x u f g s).
Proof. exact (MK_COMB (@lem3542489 A x) (@lem3542488 A B u f g s)). Qed.
Lemma lem3542491 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem3542492 {A B : Type'} (x : A) (u : A -> Prop) (f : A -> B) (g : type686 A) (s : A -> Prop) : (term5110 A B x u f g s) = (term5111 A B x u f g s).
Proof. exact (MK_COMB (@lem3542491) (@lem3542490 A B x u f g s)). Qed.
Lemma lem3542493 {A B : Type'} (u : A -> Prop) (x : A) (f : A -> B) (g : type686 A) (s : A -> Prop) : (term5095 A B u f g s x) = (term5097 A B u x f g s).
Proof. exact (eq_refl (term5095 A B u f g s x)). Qed.
Lemma lem3542494 {A B : Type'} (u : A -> Prop) (x : A) (f : A -> B) (g : type686 A) (s : A -> Prop) : ((term5094 A B x u f g s) = (term5095 A B u f g s x)) = ((term5109 A B x u f g s) = (term5097 A B u x f g s)).
Proof. exact (MK_COMB (@lem3542492 A B x u f g s) (@lem3542493 A B u x f g s)). Qed.
Lemma lem3542495 {A B : Type'} (u : A -> Prop) (x : A) (f : A -> B) (g : type686 A) (s : A -> Prop) : (term5109 A B x u f g s) = (term5097 A B u x f g s).
Proof. exact (EQ_MP (@lem3542494 A B u x f g s) (@lem3542477 A B u f g s x)). Qed.
Lemma lem3542499 {A : Type'} (P : A -> Prop) (x : A) : (@IN A x P) = (P x).
Proof. exact (EQ_MP (@lem3211610 A P x) (@lem3211609 A P x)). Qed.
Lemma lem3542500 {A : Type'} (P : A -> Prop) (x : A) : (@IN A x P) = (P x).
Proof. exact (@lem3542499 A P x). Qed.
Lemma lem3542501 {A : Type'} (u : A -> Prop) (x : A) : (@IN A x u) = (u x).
Proof. exact (@lem3542500 A u x). Qed.
Lemma lem3542502 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem3542503 {A : Type'} (u : A -> Prop) (x : A) : (term56 A x u) = (term234 A u x).
Proof. exact (MK_COMB (@lem3542502) (@lem3542501 A u x)). Qed.
Lemma lem3542505 {A B : Type'} (y : B) (f : A -> B) (s : A -> Prop) : (term27 A B y f s) = (term28 A B y f s).
Proof. exact (EQ_MP (@lem3211657 A B y f s) (@lem3211656 A B y s f)). Qed.
Lemma lem3542506 {A B : Type'} (y : B) (f : A -> B) (s : A -> Prop) : (term27 A B y f s) = (term28 A B y f s).
Proof. exact (@lem3542505 A B y f s). Qed.
Lemma lem3542507 {A B : Type'} (x : A) (f : A -> B) (g : type686 A) (s : A -> Prop) : (term5112 A B x f g s) = (term5113 A B x f g s).
Proof. exact (@lem3542506 A B (f x) f (term4996 A g s)). Qed.
Lemma lem3542517 {A : Type'} (s : type686 A) (x : A) : (term32 A x s) = (term33 A s x).
Proof. exact (EQ_MP (@lem3211669 A s x) (@lem3211668 A s x)). Qed.
Lemma lem3542518 {A : Type'} (s : type686 A) (x : A) : (term32 A x s) = (term33 A s x).
Proof. exact (@lem3542517 A s x). Qed.
Lemma lem3542519 {A : Type'} (g : type686 A) (s : A -> Prop) (x' : A) : (term5078 A x' g s) = (term5079 A g s x').
Proof. exact (@lem3542518 A (@DELETE (A -> Prop) g s) x'). Qed.
Lemma lem3542527 {A : Type'} (s : A -> Prop) (x : A) (y : A) : (term1819 A x s y) = (term1820 A s x y).
Proof. exact (EQ_MP (@lem3211684 A s x y) (@lem3211683 A s x y)). Qed.
Lemma lem3542528 {A : Type'} (s : type686 A) (x : A -> Prop) (y : A -> Prop) : (term1930 A x s y) = (term5039 A s x y).
Proof. exact (@lem3542527 (A -> Prop) s x y). Qed.
Lemma lem3542529 {A : Type'} (g : type686 A) (t : A -> Prop) (s : A -> Prop) : (term1930 A t g s) = (term5039 A g t s).
Proof. exact (@lem3542528 A g t s). Qed.
Lemma lem3542533 {A : Type'} (P : A -> Prop) (x : A) : (@IN A x P) = (P x).
Proof. exact (EQ_MP (@lem3211610 A P x) (@lem3211609 A P x)). Qed.
Lemma lem3542534 {A : Type'} (P : type686 A) (x : A -> Prop) : (@IN (A -> Prop) x P) = (P x).
Proof. exact (@lem3542533 (A -> Prop) P x). Qed.
Lemma lem3542535 {A : Type'} (g : type686 A) (t : A -> Prop) : (@IN (A -> Prop) t g) = (g t).
Proof. exact (@lem3542534 A g t). Qed.
Lemma lem3542536 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem3542537 {A : Type'} (g : type686 A) (t : A -> Prop) : (term4082 A t g) = (term372 A g t).
Proof. exact (MK_COMB (@lem3542536) (@lem3542535 A g t)). Qed.
Lemma lem3542540 {A : Type'} (t : A -> Prop) (s : A -> Prop) : (term5040 A t s) = (term5040 A t s).
Proof. exact (eq_refl (term5040 A t s)). Qed.
Lemma lem3542541 {A : Type'} (g : type686 A) (t : A -> Prop) (s : A -> Prop) : (term5039 A g t s) = (term5041 A g t s).
Proof. exact (MK_COMB (@lem3542537 A g t) (@lem3542540 A t s)). Qed.
Lemma lem3542544 {A : Type'} (g : type686 A) (t : A -> Prop) (s : A -> Prop) : (term1930 A t g s) = (term5041 A g t s).
Proof. exact (TRANS (@lem3542529 A g t s) (@lem3542541 A g t s)). Qed.
Lemma lem3542545 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem3542546 {A : Type'} (g : type686 A) (t : A -> Prop) (s : A -> Prop) : (term4958 A t g s) = (term5050 A g t s).
Proof. exact (MK_COMB (@lem3542545) (@lem3542544 A g t s)). Qed.
Lemma lem3542548 {A : Type'} (P : A -> Prop) (x : A) : (@IN A x P) = (P x).
Proof. exact (EQ_MP (@lem3211610 A P x) (@lem3211609 A P x)). Qed.
Lemma lem3542549 {A : Type'} (P : A -> Prop) (x : A) : (@IN A x P) = (P x).
Proof. exact (@lem3542548 A P x). Qed.
Lemma lem3542550 {A : Type'} (t : A -> Prop) (x' : A) : (@IN A x' t) = (t x').
Proof. exact (@lem3542549 A t x'). Qed.
Lemma lem3542551 {A : Type'} (g : type686 A) (s : A -> Prop) (t : A -> Prop) (x' : A) : (term5080 A g s x' t) = (term5081 A g s t x').
Proof. exact (MK_COMB (@lem3542546 A g t s) (@lem3542550 A t x')). Qed.
Lemma lem3542554 {A : Type'} (g : type686 A) (s : A -> Prop) (x' : A) : (term5082 A g s x') = (term5083 A g s x').
Proof. exact (fun_ext (fun t : A -> Prop => @lem3542551 A g s t x')). Qed.
Lemma lem3542555 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem3542556 {A : Type'} (g : type686 A) (s : A -> Prop) (x' : A) : (term5079 A g s x') = (term5084 A g s x').
Proof. exact (MK_COMB (@lem3542555 A) (@lem3542554 A g s x')). Qed.
Lemma lem3542561 {A : Type'} (g : type686 A) (s : A -> Prop) (x' : A) : (term5078 A x' g s) = (term5084 A g s x').
Proof. exact (TRANS (@lem3542519 A g s x') (@lem3542556 A g s x')). Qed.
Lemma lem3542562 {A B : Type'} (x : A) (f : A -> B) (x' : A) : (term235 A B x f x') = (term235 A B x f x').
Proof. exact (eq_refl (term235 A B x f x')). Qed.
Lemma lem3542563 {A B : Type'} (x : A) (f : A -> B) (g : type686 A) (s : A -> Prop) (x' : A) : (term5114 A B x f x' g s) = (term5115 A B x f g s x').
Proof. exact (MK_COMB (@lem3542562 A B x f x') (@lem3542561 A g s x')). Qed.
Lemma lem3542566 {A B : Type'} (x : A) (f : A -> B) (g : type686 A) (s : A -> Prop) : (term5116 A B x f g s) = (term5117 A B x f g s).
Proof. exact (fun_ext (fun x' : A => @lem3542563 A B x f g s x')). Qed.
Lemma lem3542567 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem3542568 {A B : Type'} (x : A) (f : A -> B) (g : type686 A) (s : A -> Prop) : (term5113 A B x f g s) = (term5118 A B x f g s).
Proof. exact (MK_COMB (@lem3542567 A) (@lem3542566 A B x f g s)). Qed.
Lemma lem3542573 {A B : Type'} (x : A) (f : A -> B) (g : type686 A) (s : A -> Prop) : (term5112 A B x f g s) = (term5118 A B x f g s).
Proof. exact (TRANS (@lem3542507 A B x f g s) (@lem3542568 A B x f g s)). Qed.
Lemma lem3542574 {A B : Type'} (u : A -> Prop) (x : A) (f : A -> B) (g : type686 A) (s : A -> Prop) : (term5097 A B u x f g s) = (term5119 A B u x f g s).
Proof. exact (MK_COMB (@lem3542503 A u x) (@lem3542573 A B x f g s)). Qed.
Lemma lem3542577 {A B : Type'} (u : A -> Prop) (x : A) (f : A -> B) (g : type686 A) (s : A -> Prop) : (term5109 A B x u f g s) = (term5119 A B u x f g s).
Proof. exact (TRANS (@lem3542495 A B u x f g s) (@lem3542574 A B u x f g s)). Qed.
Lemma lem3542578 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem3542579 {A B : Type'} (u : A -> Prop) (x : A) (f : A -> B) (g : type686 A) (s : A -> Prop) : (term5120 A B x u f g s) = (term5121 A B u x f g s).
Proof. exact (MK_COMB (@lem3542578) (@lem3542577 A B u x f g s)). Qed.
Lemma lem3542581 {A : Type'} (s : type686 A) (x : A) : (term32 A x s) = (term33 A s x).
Proof. exact (EQ_MP (@lem3211669 A s x) (@lem3211668 A s x)). Qed.
Lemma lem3542582 {A : Type'} (s : type686 A) (x : A) : (term32 A x s) = (term33 A s x).
Proof. exact (@lem3542581 A s x). Qed.
Lemma lem3542583 {A : Type'} (g : type686 A) (s : A -> Prop) (x : A) : (term5078 A x g s) = (term5079 A g s x).
Proof. exact (@lem3542582 A (@DELETE (A -> Prop) g s) x). Qed.
Lemma lem3542591 {A : Type'} (s : A -> Prop) (x : A) (y : A) : (term1819 A x s y) = (term1820 A s x y).
Proof. exact (EQ_MP (@lem3211684 A s x y) (@lem3211683 A s x y)). Qed.
Lemma lem3542592 {A : Type'} (s : type686 A) (x : A -> Prop) (y : A -> Prop) : (term1930 A x s y) = (term5039 A s x y).
Proof. exact (@lem3542591 (A -> Prop) s x y). Qed.
Lemma lem3542593 {A : Type'} (g : type686 A) (t : A -> Prop) (s : A -> Prop) : (term1930 A t g s) = (term5039 A g t s).
Proof. exact (@lem3542592 A g t s). Qed.
Lemma lem3542597 {A : Type'} (P : A -> Prop) (x : A) : (@IN A x P) = (P x).
Proof. exact (EQ_MP (@lem3211610 A P x) (@lem3211609 A P x)). Qed.
Lemma lem3542598 {A : Type'} (P : type686 A) (x : A -> Prop) : (@IN (A -> Prop) x P) = (P x).
Proof. exact (@lem3542597 (A -> Prop) P x). Qed.
Lemma lem3542599 {A : Type'} (g : type686 A) (t : A -> Prop) : (@IN (A -> Prop) t g) = (g t).
Proof. exact (@lem3542598 A g t). Qed.
Lemma lem3542600 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem3542601 {A : Type'} (g : type686 A) (t : A -> Prop) : (term4082 A t g) = (term372 A g t).
Proof. exact (MK_COMB (@lem3542600) (@lem3542599 A g t)). Qed.
Lemma lem3542604 {A : Type'} (t : A -> Prop) (s : A -> Prop) : (term5040 A t s) = (term5040 A t s).
Proof. exact (eq_refl (term5040 A t s)). Qed.
Lemma lem3542605 {A : Type'} (g : type686 A) (t : A -> Prop) (s : A -> Prop) : (term5039 A g t s) = (term5041 A g t s).
Proof. exact (MK_COMB (@lem3542601 A g t) (@lem3542604 A t s)). Qed.
Lemma lem3542608 {A : Type'} (g : type686 A) (t : A -> Prop) (s : A -> Prop) : (term1930 A t g s) = (term5041 A g t s).
Proof. exact (TRANS (@lem3542593 A g t s) (@lem3542605 A g t s)). Qed.
Lemma lem3542609 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem3542610 {A : Type'} (g : type686 A) (t : A -> Prop) (s : A -> Prop) : (term4958 A t g s) = (term5050 A g t s).
Proof. exact (MK_COMB (@lem3542609) (@lem3542608 A g t s)). Qed.
Lemma lem3542612 {A : Type'} (P : A -> Prop) (x : A) : (@IN A x P) = (P x).
Proof. exact (EQ_MP (@lem3211610 A P x) (@lem3211609 A P x)). Qed.
Lemma lem3542613 {A : Type'} (P : A -> Prop) (x : A) : (@IN A x P) = (P x).
Proof. exact (@lem3542612 A P x). Qed.
Lemma lem3542614 {A : Type'} (t : A -> Prop) (x : A) : (@IN A x t) = (t x).
Proof. exact (@lem3542613 A t x). Qed.
Lemma lem3542615 {A : Type'} (g : type686 A) (s : A -> Prop) (t : A -> Prop) (x : A) : (term5080 A g s x t) = (term5081 A g s t x).
Proof. exact (MK_COMB (@lem3542610 A g t s) (@lem3542614 A t x)). Qed.
Lemma lem3542618 {A : Type'} (g : type686 A) (s : A -> Prop) (x : A) : (term5082 A g s x) = (term5083 A g s x).
Proof. exact (fun_ext (fun t : A -> Prop => @lem3542615 A g s t x)). Qed.
Lemma lem3542619 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem3542620 {A : Type'} (g : type686 A) (s : A -> Prop) (x : A) : (term5079 A g s x) = (term5084 A g s x).
Proof. exact (MK_COMB (@lem3542619 A) (@lem3542618 A g s x)). Qed.
Lemma lem3542625 {A : Type'} (g : type686 A) (s : A -> Prop) (x : A) : (term5078 A x g s) = (term5084 A g s x).
Proof. exact (TRANS (@lem3542583 A g s x) (@lem3542620 A g s x)). Qed.
Lemma lem3542626 {A B : Type'} (u : A -> Prop) (f : A -> B) (g : type686 A) (s : A -> Prop) (x : A) : (term5122 A B u f x g s) = (term5123 A B u f g s x).
Proof. exact (MK_COMB (@lem3542579 A B u x f g s) (@lem3542625 A g s x)). Qed.
Lemma lem3542629 {A B : Type'} (u : A -> Prop) (f : A -> B) (g : type686 A) (s : A -> Prop) : (term5124 A B u f g s) = (term5125 A B u f g s).
Proof. exact (fun_ext (fun x : A => @lem3542626 A B u f g s x)). Qed.
Lemma lem3542630 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem3542631 {A B : Type'} (u : A -> Prop) (f : A -> B) (g : type686 A) (s : A -> Prop) : (term5029 A B u f g s) = (term5126 A B u f g s).
Proof. exact (MK_COMB (@lem3542630 A) (@lem3542629 A B u f g s)). Qed.
Lemma lem3542636 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem3542637 {A B : Type'} (u : A -> Prop) (f : A -> B) (g : type686 A) (s : A -> Prop) : (term5032 A B u f g s) = (term5127 A B u f g s).
Proof. exact (MK_COMB (@lem3542636) (@lem3542631 A B u f g s)). Qed.
Lemma lem3542645 {A : Type'} (P : A -> Prop) (x : A) : (@IN A x P) = (P x).
Proof. exact (EQ_MP (@lem3211610 A P x) (@lem3211609 A P x)). Qed.
Lemma lem3542646 {A : Type'} (P : A -> Prop) (x : A) : (@IN A x P) = (P x).
Proof. exact (@lem3542645 A P x). Qed.
Lemma lem3542647 {A : Type'} (s : A -> Prop) (x : A) : (@IN A x s) = (s x).
Proof. exact (@lem3542646 A s x). Qed.
Lemma lem3542648 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem3542649 {A : Type'} (s : A -> Prop) (x : A) : (term213 A x s) = (term214 A s x).
Proof. exact (MK_COMB (@lem3542648) (@lem3542647 A s x)). Qed.
Lemma lem3542651 {A : Type'} (P : A -> Prop) (x : A) : (@IN A x P) = (P x).
Proof. exact (EQ_MP (@lem3211610 A P x) (@lem3211609 A P x)). Qed.
Lemma lem3542652 {A : Type'} (P : A -> Prop) (x : A) : (@IN A x P) = (P x).
Proof. exact (@lem3542651 A P x). Qed.
Lemma lem3542653 {A : Type'} (u : A -> Prop) (x : A) : (@IN A x u) = (u x).
Proof. exact (@lem3542652 A u x). Qed.
Lemma lem3542654 {A : Type'} (s : A -> Prop) (u : A -> Prop) (x : A) : (term215 A s x u) = (term216 A s u x).
Proof. exact (MK_COMB (@lem3542649 A s x) (@lem3542653 A u x)). Qed.
Lemma lem3542657 {A : Type'} (s : A -> Prop) (u : A -> Prop) : (term217 A s u) = (term218 A s u).
Proof. exact (fun_ext (fun x : A => @lem3542654 A s u x)). Qed.
Lemma lem3542658 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem3542659 {A : Type'} (s : A -> Prop) (u : A -> Prop) : (term197 A s u) = (term219 A s u).
Proof. exact (MK_COMB (@lem3542658 A) (@lem3542657 A s u)). Qed.
Lemma lem3542664 {A B : Type'} (f : A -> B) (g : type686 A) (s : A -> Prop) (u : A -> Prop) : (term5034 A B f g s u) = (term5128 A B f g s u).
Proof. exact (MK_COMB (@lem3542637 A B u f g s) (@lem3542659 A s u)). Qed.
Lemma lem3542667 {A B : Type'} (f : A -> B) (g : type686 A) (s : A -> Prop) (u : A -> Prop) : (term5036 A B f g s u) = (term5129 A B f g s u).
Proof. exact (MK_COMB (@lem3542465 A B f g s u) (@lem3542664 A B f g s u)). Qed.
Lemma lem3542670 {A B : Type'} (f : A -> B) (g : type686 A) (s : A -> Prop) (u : A -> Prop) : (term5038 A B f g s u) = (term5130 A B f g s u).
Proof. exact (MK_COMB (@lem3542302 A B g s u f) (@lem3542667 A B f g s u)). Qed.
Lemma lem3542673 {A B : Type'} (f : A -> B) (g : type686 A) (s : A -> Prop) (u : A -> Prop) : (term5130 A B f g s u) = (term5038 A B f g s u).
Proof. exact (SYM (@lem3542670 A B f g s u)). Qed.
Lemma lem3542675 (p : Prop) : p = (term275 p).
Proof. exact (EQ_MP (@lem10578 p) (@lem10597 p)). Qed.
Lemma lem3542676 {A B : Type'} (f : A -> B) (g : type686 A) (s : A -> Prop) (u : A -> Prop) : (term5130 A B f g s u) = (term5131 A B f g s u).
Proof. exact (@lem3542675 (term5130 A B f g s u)). Qed.
Lemma lem3542677 {A B : Type'} (f : A -> B) (g : type686 A) (s : A -> Prop) (u : A -> Prop) : (term5131 A B f g s u) = (term5130 A B f g s u).
Proof. exact (SYM (@lem3542676 A B f g s u)). Qed.
Lemma lem3542678 {A B : Type'} (f : A -> B) (g : type686 A) (s : A -> Prop) (u : A -> Prop) (h1 : term5132 A B f g s u) : term5132 A B f g s u.
Proof. exact (h1). Qed.
Lemma lem3542681 {A B : Type'} (f : A -> B) (g : type686 A) (s : A -> Prop) (u : A -> Prop) (h1 : term5131 A B f g s u) : term5131 A B f g s u.
Proof. exact (h1). Qed.
Lemma lem3542682 {A B : Type'} (f : A -> B) (g : type686 A) (s : A -> Prop) (u : A -> Prop) : term5133 A B f g s u.
Proof. exact (fun h0 : term5131 A B f g s u => @lem3542681 A B f g s u h0). Qed.
Lemma lem3542683 {A B : Type'} (f : A -> B) (g : type686 A) (s : A -> Prop) (u : A -> Prop) (h1 : term5133 A B f g s u) : term5133 A B f g s u.
Proof. exact (h1). Qed.
Lemma lem3542684 {A B : Type'} (f : A -> B) (g : type686 A) (s : A -> Prop) (u : A -> Prop) (h1 : term5131 A B f g s u) : term5131 A B f g s u.
Proof. exact (h1). Qed.
Lemma lem3542685 {A B : Type'} (f : A -> B) (g : type686 A) (s : A -> Prop) (u : A -> Prop) (h1 : term5131 A B f g s u) (h2 : term5133 A B f g s u) : term5131 A B f g s u.
Proof. exact (@lem3542683 A B f g s u h2 (@lem3542684 A B f g s u h1)). Qed.
Lemma lem3542686 {A B : Type'} (f : A -> B) (g : type686 A) (s : A -> Prop) (u : A -> Prop) (h1 : term5131 A B f g s u) : term5134 A B f g s u.
Proof. exact (fun h0 : term5133 A B f g s u => @lem3542685 A B f g s u h1 h0). Qed.
Lemma lem3542687 {A B : Type'} (f : A -> B) (g : type686 A) (s : A -> Prop) (u : A -> Prop) (h1 : term5133 A B f g s u) : term5133 A B f g s u.
Proof. exact (h1). Qed.
Lemma lem3542688 {A B : Type'} (f : A -> B) (g : type686 A) (s : A -> Prop) (u : A -> Prop) (h1 : term5131 A B f g s u) (h2 : term5133 A B f g s u) : term5131 A B f g s u.
Proof. exact (@lem3542686 A B f g s u h1 (@lem3542687 A B f g s u h2)). Qed.
Lemma lem3542689 {A B : Type'} (f : A -> B) (g : type686 A) (s : A -> Prop) (u : A -> Prop) (h1 : term5133 A B f g s u) : term5133 A B f g s u.
Proof. exact (fun h0 : term5131 A B f g s u => @lem3542688 A B f g s u h0 h1). Qed.
Lemma lem3542690 {A B : Type'} (f : A -> B) (g : type686 A) (s : A -> Prop) (u : A -> Prop) : term5135 A B f g s u.
Proof. exact (fun h0 : term5133 A B f g s u => @lem3542689 A B f g s u h0). Qed.
Lemma lem3542693 {A B : Type'} (f : A -> B) (g : type686 A) (s : A -> Prop) (u : A -> Prop) : term5133 A B f g s u.
Proof. exact (@lem3542690 A B f g s u (@lem3542682 A B f g s u)). Qed.
Lemma lem3542694 {A B : Type'} (f : A -> B) (g : type686 A) (s : A -> Prop) (u : A -> Prop) : term5133 A B f g s u.
Proof. exact (@lem3542693 A B f g s u). Qed.
Lemma lem3542712 (t : Prop) : (t -> False) = (~ t).
Proof. exact (proj2 (@lem16474 t)). Qed.
Lemma lem3542713 {A B : Type'} (f : A -> B) (g : type686 A) (s : A -> Prop) (u : A -> Prop) : (term5131 A B f g s u) = (term5136 A B f g s u).
Proof. exact (@lem3542712 (term5132 A B f g s u)). Qed.
Lemma lem3542715 (t : Prop) : (term282 t) = t.
Proof. exact (EQ_MP (@lem16507 t) (@lem16506 t)). Qed.
Lemma lem3542716 {A B : Type'} (f : A -> B) (g : type686 A) (s : A -> Prop) (u : A -> Prop) : (term5136 A B f g s u) = (term5130 A B f g s u).
Proof. exact (@lem3542715 (term5130 A B f g s u)). Qed.
Lemma lem3542719 {A B : Type'} (f : A -> B) (g : type686 A) (s : A -> Prop) (u : A -> Prop) : (term5131 A B f g s u) = (term5130 A B f g s u).
Proof. exact (TRANS (@lem3542713 A B f g s u) (@lem3542716 A B f g s u)). Qed.
Lemma lem3542944 {A B : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) : (term5137 A B g s u) = (term5138 A B g s u).
Proof. exact (fun_ext (fun f : A -> B => @lem3542719 A B f g s u)). Qed.
Lemma lem3542945 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem3542946 {A B : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) : (term5139 A B g s u) = (term5140 A B g s u).
Proof. exact (MK_COMB (@lem3542945 A B) (@lem3542944 A B g s u)). Qed.
Lemma lem3542951 {A B : Type'} (s : A -> Prop) (u : A -> Prop) : (term5141 A B s u) = (term5142 A B s u).
Proof. exact (fun_ext (fun g : type686 A => @lem3542946 A B g s u)). Qed.
Lemma lem3542952 {A : Type'} : (@all ((A -> Prop) -> Prop)) = (@all ((A -> Prop) -> Prop)).
Proof. exact (eq_refl (@all ((A -> Prop) -> Prop))). Qed.
Lemma lem3542953 {A B : Type'} (s : A -> Prop) (u : A -> Prop) : (term5143 A B s u) = (term5144 A B s u).
Proof. exact (MK_COMB (@lem3542952 A) (@lem3542951 A B s u)). Qed.
Lemma lem3542958 {A B : Type'} (u : A -> Prop) : (term5145 A B u) = (term5146 A B u).
Proof. exact (fun_ext (fun s : A -> Prop => @lem3542953 A B s u)). Qed.
Lemma lem3542959 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem3542960 {A B : Type'} (u : A -> Prop) : (term5147 A B u) = (term5148 A B u).
Proof. exact (MK_COMB (@lem3542959 A) (@lem3542958 A B u)). Qed.
Lemma lem3542965 {A B : Type'} : (term5149 A B) = (term5150 A B).
Proof. exact (fun_ext (fun u : A -> Prop => @lem3542960 A B u)). Qed.
Lemma lem3542966 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem3542975 {A B : Type'} : (term5151 A B) = (term5152 A B).
Proof. exact (MK_COMB (@lem3542966 A) (@lem3542965 A B)). Qed.
Lemma lem3542980 {A : Type'} (s : A -> Prop) (u : A -> Prop) (x : A) : (term216 A s u x) = (term216 A s u x).
Proof. exact (eq_refl (term216 A s u x)). Qed.
Lemma lem3542981 {A : Type'} (s : A -> Prop) (u : A -> Prop) : (term218 A s u) = (term218 A s u).
Proof. exact (fun_ext (fun x : A => @lem3542980 A s u x)). Qed.
Lemma lem3542982 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem3542983 {A : Type'} (s : A -> Prop) (u : A -> Prop) : (term219 A s u) = (term219 A s u).
Proof. exact (MK_COMB (@lem3542982 A) (@lem3542981 A s u)). Qed.
Lemma lem3542994 {A : Type'} (g : type686 A) (s : A -> Prop) (t : A -> Prop) (x : A) : (term5081 A g s t x) = (term5081 A g s t x).
Proof. exact (eq_refl (term5081 A g s t x)). Qed.
Lemma lem3542995 {A : Type'} (g : type686 A) (s : A -> Prop) (x : A) : (term5083 A g s x) = (term5083 A g s x).
Proof. exact (fun_ext (fun t : A -> Prop => @lem3542994 A g s t x)). Qed.
Lemma lem3542996 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem3542997 {A : Type'} (g : type686 A) (s : A -> Prop) (x : A) : (term5084 A g s x) = (term5084 A g s x).
Proof. exact (MK_COMB (@lem3542996 A) (@lem3542995 A g s x)). Qed.
Lemma lem3543008 {A : Type'} (g : type686 A) (s : A -> Prop) (t : A -> Prop) (x' : A) : (term5081 A g s t x') = (term5081 A g s t x').
Proof. exact (eq_refl (term5081 A g s t x')). Qed.
Lemma lem3543009 {A : Type'} (g : type686 A) (s : A -> Prop) (x' : A) : (term5083 A g s x') = (term5083 A g s x').
Proof. exact (fun_ext (fun t : A -> Prop => @lem3543008 A g s t x')). Qed.
Lemma lem3543010 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem3543011 {A : Type'} (g : type686 A) (s : A -> Prop) (x' : A) : (term5084 A g s x') = (term5084 A g s x').
Proof. exact (MK_COMB (@lem3543010 A) (@lem3543009 A g s x')). Qed.
Lemma lem3543014 {A B : Type'} (x : A) (f : A -> B) (x' : A) : (term235 A B x f x') = (term235 A B x f x').
Proof. exact (eq_refl (term235 A B x f x')). Qed.
Lemma lem3543015 {A B : Type'} (x : A) (f : A -> B) (g : type686 A) (s : A -> Prop) (x' : A) : (term5115 A B x f g s x') = (term5115 A B x f g s x').
Proof. exact (MK_COMB (@lem3543014 A B x f x') (@lem3543011 A g s x')). Qed.
Lemma lem3543016 {A B : Type'} (x : A) (f : A -> B) (g : type686 A) (s : A -> Prop) : (term5117 A B x f g s) = (term5117 A B x f g s).
Proof. exact (fun_ext (fun x' : A => @lem3543015 A B x f g s x')). Qed.
Lemma lem3543017 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem3543018 {A B : Type'} (x : A) (f : A -> B) (g : type686 A) (s : A -> Prop) : (term5118 A B x f g s) = (term5118 A B x f g s).
Proof. exact (MK_COMB (@lem3543017 A) (@lem3543016 A B x f g s)). Qed.
Lemma lem3543021 {A : Type'} (u : A -> Prop) (x : A) : (term234 A u x) = (term234 A u x).
Proof. exact (eq_refl (term234 A u x)). Qed.
Lemma lem3543022 {A B : Type'} (u : A -> Prop) (x : A) (f : A -> B) (g : type686 A) (s : A -> Prop) : (term5119 A B u x f g s) = (term5119 A B u x f g s).
Proof. exact (MK_COMB (@lem3543021 A u x) (@lem3543018 A B x f g s)). Qed.
Lemma lem3543023 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem3543024 {A B : Type'} (u : A -> Prop) (x : A) (f : A -> B) (g : type686 A) (s : A -> Prop) : (term5121 A B u x f g s) = (term5121 A B u x f g s).
Proof. exact (MK_COMB (@lem3543023) (@lem3543022 A B u x f g s)). Qed.
Lemma lem3543025 {A B : Type'} (u : A -> Prop) (f : A -> B) (g : type686 A) (s : A -> Prop) (x : A) : (term5123 A B u f g s x) = (term5123 A B u f g s x).
Proof. exact (MK_COMB (@lem3543024 A B u x f g s) (@lem3542997 A g s x)). Qed.
Lemma lem3543026 {A B : Type'} (u : A -> Prop) (f : A -> B) (g : type686 A) (s : A -> Prop) : (term5125 A B u f g s) = (term5125 A B u f g s).
Proof. exact (fun_ext (fun x : A => @lem3543025 A B u f g s x)). Qed.
Lemma lem3543027 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem3543028 {A B : Type'} (u : A -> Prop) (f : A -> B) (g : type686 A) (s : A -> Prop) : (term5126 A B u f g s) = (term5126 A B u f g s).
Proof. exact (MK_COMB (@lem3543027 A) (@lem3543026 A B u f g s)). Qed.
Lemma lem3543029 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem3543030 {A B : Type'} (u : A -> Prop) (f : A -> B) (g : type686 A) (s : A -> Prop) : (term5127 A B u f g s) = (term5127 A B u f g s).
Proof. exact (MK_COMB (@lem3543029) (@lem3543028 A B u f g s)). Qed.
Lemma lem3543031 {A B : Type'} (f : A -> B) (g : type686 A) (s : A -> Prop) (u : A -> Prop) : (term5128 A B f g s u) = (term5128 A B f g s u).
Proof. exact (MK_COMB (@lem3543030 A B u f g s) (@lem3542983 A s u)). Qed.
Lemma lem3543032 {A : Type'} (u : A -> Prop) (x : A) : (u x) = (u x).
Proof. exact (eq_refl (u x)). Qed.
Lemma lem3543043 {A : Type'} (g : type686 A) (s : A -> Prop) (t : A -> Prop) (x : A) : (term5081 A g s t x) = (term5081 A g s t x).
Proof. exact (eq_refl (term5081 A g s t x)). Qed.
Lemma lem3543044 {A : Type'} (g : type686 A) (s : A -> Prop) (x : A) : (term5083 A g s x) = (term5083 A g s x).
Proof. exact (fun_ext (fun t : A -> Prop => @lem3543043 A g s t x)). Qed.
Lemma lem3543045 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem3543046 {A : Type'} (g : type686 A) (s : A -> Prop) (x : A) : (term5084 A g s x) = (term5084 A g s x).
Proof. exact (MK_COMB (@lem3543045 A) (@lem3543044 A g s x)). Qed.
Lemma lem3543047 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem3543048 {A : Type'} (g : type686 A) (s : A -> Prop) (x : A) : (term5086 A g s x) = (term5086 A g s x).
Proof. exact (MK_COMB (@lem3543047) (@lem3543046 A g s x)). Qed.
Lemma lem3543049 {A : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) (x : A) : (term5088 A g s u x) = (term5088 A g s u x).
Proof. exact (MK_COMB (@lem3543048 A g s x) (@lem3543032 A u x)). Qed.
Lemma lem3543050 {A : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) : (term5090 A g s u) = (term5090 A g s u).
Proof. exact (fun_ext (fun x : A => @lem3543049 A g s u x)). Qed.
Lemma lem3543051 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem3543052 {A : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) : (term5091 A g s u) = (term5091 A g s u).
Proof. exact (MK_COMB (@lem3543051 A) (@lem3543050 A g s u)). Qed.
Lemma lem3543053 {A : Type'} (s : A -> Prop) (x : A) : (s x) = (s x).
Proof. exact (eq_refl (s x)). Qed.
Lemma lem3543058 {A B : Type'} (x : A) (f : A -> B) (s : A -> Prop) (x' : A) : (term237 A B x f s x') = (term237 A B x f s x').
Proof. exact (eq_refl (term237 A B x f s x')). Qed.
Lemma lem3543059 {A B : Type'} (x : A) (f : A -> B) (s : A -> Prop) : (term239 A B x f s) = (term239 A B x f s).
Proof. exact (fun_ext (fun x' : A => @lem3543058 A B x f s x')). Qed.
Lemma lem3543060 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem3543061 {A B : Type'} (x : A) (f : A -> B) (s : A -> Prop) : (term240 A B x f s) = (term240 A B x f s).
Proof. exact (MK_COMB (@lem3543060 A) (@lem3543059 A B x f s)). Qed.
Lemma lem3543064 {A : Type'} (u : A -> Prop) (x : A) : (term234 A u x) = (term234 A u x).
Proof. exact (eq_refl (term234 A u x)). Qed.
Lemma lem3543065 {A B : Type'} (u : A -> Prop) (x : A) (f : A -> B) (s : A -> Prop) : (term241 A B u x f s) = (term241 A B u x f s).
Proof. exact (MK_COMB (@lem3543064 A u x) (@lem3543061 A B x f s)). Qed.
Lemma lem3543066 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem3543067 {A B : Type'} (u : A -> Prop) (x : A) (f : A -> B) (s : A -> Prop) : (term243 A B u x f s) = (term243 A B u x f s).
Proof. exact (MK_COMB (@lem3543066) (@lem3543065 A B u x f s)). Qed.
Lemma lem3543068 {A B : Type'} (u : A -> Prop) (f : A -> B) (s : A -> Prop) (x : A) : (term245 A B u f s x) = (term245 A B u f s x).
Proof. exact (MK_COMB (@lem3543067 A B u x f s) (@lem3543053 A s x)). Qed.
Lemma lem3543069 {A B : Type'} (u : A -> Prop) (f : A -> B) (s : A -> Prop) : (term247 A B u f s) = (term247 A B u f s).
Proof. exact (fun_ext (fun x : A => @lem3543068 A B u f s x)). Qed.
Lemma lem3543070 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem3543071 {A B : Type'} (u : A -> Prop) (f : A -> B) (s : A -> Prop) : (term248 A B u f s) = (term248 A B u f s).
Proof. exact (MK_COMB (@lem3543070 A) (@lem3543069 A B u f s)). Qed.
Lemma lem3543072 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem3543073 {A B : Type'} (u : A -> Prop) (f : A -> B) (s : A -> Prop) : (term5077 A B u f s) = (term5077 A B u f s).
Proof. exact (MK_COMB (@lem3543072) (@lem3543071 A B u f s)). Qed.
Lemma lem3543074 {A B : Type'} (f : A -> B) (g : type686 A) (s : A -> Prop) (u : A -> Prop) : (term5092 A B f g s u) = (term5092 A B f g s u).
Proof. exact (MK_COMB (@lem3543073 A B u f s) (@lem3543052 A g s u)). Qed.
Lemma lem3543075 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem3543076 {A B : Type'} (f : A -> B) (g : type686 A) (s : A -> Prop) (u : A -> Prop) : (term5093 A B f g s u) = (term5093 A B f g s u).
Proof. exact (MK_COMB (@lem3543075) (@lem3543074 A B f g s u)). Qed.
Lemma lem3543077 {A B : Type'} (f : A -> B) (g : type686 A) (s : A -> Prop) (u : A -> Prop) : (term5129 A B f g s u) = (term5129 A B f g s u).
Proof. exact (MK_COMB (@lem3543076 A B f g s u) (@lem3543031 A B f g s u)). Qed.
Lemma lem3543078 {A : Type'} (t : A -> Prop) (x : A) : (t x) = (t x).
Proof. exact (eq_refl (t x)). Qed.
Lemma lem3543083 {A B : Type'} (x : A) (f : A -> B) (t : A -> Prop) (x' : A) : (term237 A B x f t x') = (term237 A B x f t x').
Proof. exact (eq_refl (term237 A B x f t x')). Qed.
Lemma lem3543084 {A B : Type'} (x : A) (f : A -> B) (t : A -> Prop) : (term239 A B x f t) = (term239 A B x f t).
Proof. exact (fun_ext (fun x' : A => @lem3543083 A B x f t x')). Qed.
Lemma lem3543085 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem3543086 {A B : Type'} (x : A) (f : A -> B) (t : A -> Prop) : (term240 A B x f t) = (term240 A B x f t).
Proof. exact (MK_COMB (@lem3543085 A) (@lem3543084 A B x f t)). Qed.
Lemma lem3543089 {A : Type'} (u : A -> Prop) (x : A) : (term234 A u x) = (term234 A u x).
Proof. exact (eq_refl (term234 A u x)). Qed.
Lemma lem3543090 {A B : Type'} (u : A -> Prop) (x : A) (f : A -> B) (t : A -> Prop) : (term241 A B u x f t) = (term241 A B u x f t).
Proof. exact (MK_COMB (@lem3543089 A u x) (@lem3543086 A B x f t)). Qed.
Lemma lem3543091 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem3543092 {A B : Type'} (u : A -> Prop) (x : A) (f : A -> B) (t : A -> Prop) : (term243 A B u x f t) = (term243 A B u x f t).
Proof. exact (MK_COMB (@lem3543091) (@lem3543090 A B u x f t)). Qed.
Lemma lem3543093 {A B : Type'} (u : A -> Prop) (f : A -> B) (t : A -> Prop) (x : A) : (term245 A B u f t x) = (term245 A B u f t x).
Proof. exact (MK_COMB (@lem3543092 A B u x f t) (@lem3543078 A t x)). Qed.
Lemma lem3543094 {A B : Type'} (u : A -> Prop) (f : A -> B) (t : A -> Prop) : (term247 A B u f t) = (term247 A B u f t).
Proof. exact (fun_ext (fun x : A => @lem3543093 A B u f t x)). Qed.
Lemma lem3543095 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem3543096 {A B : Type'} (u : A -> Prop) (f : A -> B) (t : A -> Prop) : (term248 A B u f t) = (term248 A B u f t).
Proof. exact (MK_COMB (@lem3543095 A) (@lem3543094 A B u f t)). Qed.
Lemma lem3543105 {A : Type'} (g : type686 A) (t : A -> Prop) (s : A -> Prop) : (term5050 A g t s) = (term5050 A g t s).
Proof. exact (eq_refl (term5050 A g t s)). Qed.
Lemma lem3543106 {A B : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) (t : A -> Prop) : (term5070 A B g s u f t) = (term5070 A B g s u f t).
Proof. exact (MK_COMB (@lem3543105 A g t s) (@lem3543096 A B u f t)). Qed.
Lemma lem3543107 {A B : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) : (term5071 A B g s u f) = (term5071 A B g s u f).
Proof. exact (fun_ext (fun t : A -> Prop => @lem3543106 A B g s u f t)). Qed.
Lemma lem3543108 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem3543109 {A B : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) : (term5072 A B g s u f) = (term5072 A B g s u f).
Proof. exact (MK_COMB (@lem3543108 A) (@lem3543107 A B g s u f)). Qed.
Lemma lem3543114 {A : Type'} (s : A -> Prop) (u : A -> Prop) (x : A) : (term216 A s u x) = (term216 A s u x).
Proof. exact (eq_refl (term216 A s u x)). Qed.
Lemma lem3543115 {A : Type'} (s : A -> Prop) (u : A -> Prop) : (term218 A s u) = (term218 A s u).
Proof. exact (fun_ext (fun x : A => @lem3543114 A s u x)). Qed.
Lemma lem3543116 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem3543117 {A : Type'} (s : A -> Prop) (u : A -> Prop) : (term219 A s u) = (term219 A s u).
Proof. exact (MK_COMB (@lem3543116 A) (@lem3543115 A s u)). Qed.
Lemma lem3543118 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem3543119 {A : Type'} (s : A -> Prop) (u : A -> Prop) : (term220 A s u) = (term220 A s u).
Proof. exact (MK_COMB (@lem3543118) (@lem3543117 A s u)). Qed.
Lemma lem3543120 {A B : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) : (term5073 A B g s u f) = (term5073 A B g s u f).
Proof. exact (MK_COMB (@lem3543119 A s u) (@lem3543109 A B g s u f)). Qed.
Lemma lem3543125 {A : Type'} (t : A -> Prop) (u : A -> Prop) (x : A) : (term216 A t u x) = (term216 A t u x).
Proof. exact (eq_refl (term216 A t u x)). Qed.
Lemma lem3543126 {A : Type'} (t : A -> Prop) (u : A -> Prop) : (term218 A t u) = (term218 A t u).
Proof. exact (fun_ext (fun x : A => @lem3543125 A t u x)). Qed.
Lemma lem3543127 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem3543128 {A : Type'} (t : A -> Prop) (u : A -> Prop) : (term219 A t u) = (term219 A t u).
Proof. exact (MK_COMB (@lem3543127 A) (@lem3543126 A t u)). Qed.
Lemma lem3543137 {A : Type'} (g : type686 A) (t : A -> Prop) (s : A -> Prop) : (term5050 A g t s) = (term5050 A g t s).
Proof. exact (eq_refl (term5050 A g t s)). Qed.
Lemma lem3543138 {A : Type'} (g : type686 A) (s : A -> Prop) (t : A -> Prop) (u : A -> Prop) : (term5051 A g s t u) = (term5051 A g s t u).
Proof. exact (MK_COMB (@lem3543137 A g t s) (@lem3543128 A t u)). Qed.
Lemma lem3543139 {A : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) : (term5052 A g s u) = (term5052 A g s u).
Proof. exact (fun_ext (fun t : A -> Prop => @lem3543138 A g s t u)). Qed.
Lemma lem3543140 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem3543141 {A : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) : (term5053 A g s u) = (term5053 A g s u).
Proof. exact (MK_COMB (@lem3543140 A) (@lem3543139 A g s u)). Qed.
Lemma lem3543142 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem3543143 {A : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) : (term5054 A g s u) = (term5054 A g s u).
Proof. exact (MK_COMB (@lem3543142) (@lem3543141 A g s u)). Qed.
Lemma lem3543144 {A B : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) : (term5074 A B g s u f) = (term5074 A B g s u f).
Proof. exact (MK_COMB (@lem3543143 A g s u) (@lem3543120 A B g s u f)). Qed.
Lemma lem3543153 {A : Type'} (g : type686 A) (x : A -> Prop) (s : A -> Prop) : (term5044 A g x s) = (term5044 A g x s).
Proof. exact (eq_refl (term5044 A g x s)). Qed.
Lemma lem3543154 {A : Type'} (g : type686 A) (s : A -> Prop) : (term5046 A g s) = (term5046 A g s).
Proof. exact (fun_ext (fun x : A -> Prop => @lem3543153 A g x s)). Qed.
Lemma lem3543155 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem3543156 {A : Type'} (g : type686 A) (s : A -> Prop) : (term5047 A g s) = (term5047 A g s).
Proof. exact (MK_COMB (@lem3543155 A) (@lem3543154 A g s)). Qed.
Lemma lem3543157 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem3543158 {A : Type'} (g : type686 A) (s : A -> Prop) : (term5048 A g s) = (term5048 A g s).
Proof. exact (MK_COMB (@lem3543157) (@lem3543156 A g s)). Qed.
Lemma lem3543159 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem3543160 {A : Type'} (g : type686 A) (s : A -> Prop) : (term5049 A g s) = (term5049 A g s).
Proof. exact (MK_COMB (@lem3543159) (@lem3543158 A g s)). Qed.
Lemma lem3543161 {A B : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) : (term5075 A B g s u f) = (term5075 A B g s u f).
Proof. exact (MK_COMB (@lem3543160 A g s) (@lem3543144 A B g s u f)). Qed.
Lemma lem3543162 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem3543163 {A B : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) : (term5076 A B g s u f) = (term5076 A B g s u f).
Proof. exact (MK_COMB (@lem3543162) (@lem3543161 A B g s u f)). Qed.
Lemma lem3543164 {A B : Type'} (f : A -> B) (g : type686 A) (s : A -> Prop) (u : A -> Prop) : (term5130 A B f g s u) = (term5130 A B f g s u).
Proof. exact (MK_COMB (@lem3543163 A B g s u f) (@lem3543077 A B f g s u)). Qed.
Lemma lem3543165 {A B : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) : (term5138 A B g s u) = (term5138 A B g s u).
Proof. exact (fun_ext (fun f : A -> B => @lem3543164 A B f g s u)). Qed.
Lemma lem3543166 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem3543167 {A B : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) : (term5140 A B g s u) = (term5140 A B g s u).
Proof. exact (MK_COMB (@lem3543166 A B) (@lem3543165 A B g s u)). Qed.
Lemma lem3543168 {A B : Type'} (s : A -> Prop) (u : A -> Prop) : (term5142 A B s u) = (term5142 A B s u).
Proof. exact (fun_ext (fun g : type686 A => @lem3543167 A B g s u)). Qed.
Lemma lem3543169 {A : Type'} : (@all ((A -> Prop) -> Prop)) = (@all ((A -> Prop) -> Prop)).
Proof. exact (eq_refl (@all ((A -> Prop) -> Prop))). Qed.
Lemma lem3543170 {A B : Type'} (s : A -> Prop) (u : A -> Prop) : (term5144 A B s u) = (term5144 A B s u).
Proof. exact (MK_COMB (@lem3543169 A) (@lem3543168 A B s u)). Qed.
Lemma lem3543171 {A B : Type'} (u : A -> Prop) : (term5146 A B u) = (term5146 A B u).
Proof. exact (fun_ext (fun s : A -> Prop => @lem3543170 A B s u)). Qed.
Lemma lem3543172 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem3543173 {A B : Type'} (u : A -> Prop) : (term5148 A B u) = (term5148 A B u).
Proof. exact (MK_COMB (@lem3543172 A) (@lem3543171 A B u)). Qed.
Lemma lem3543174 {A B : Type'} : (term5150 A B) = (term5150 A B).
Proof. exact (fun_ext (fun u : A -> Prop => @lem3543173 A B u)). Qed.
Lemma lem3543175 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem3543176 {A B : Type'} : (term5152 A B) = (term5152 A B).
Proof. exact (MK_COMB (@lem3543175 A) (@lem3543174 A B)). Qed.
Lemma lem3543361 {A B : Type'} : (term5151 A B) = (term5152 A B).
Proof. exact (TRANS (@lem3542975 A B) (@lem3543176 A B)). Qed.
Lemma lem3543362 {A B : Type'} : (term5152 A B) = (term5151 A B).
Proof. exact (SYM (@lem3543361 A B)). Qed.
Lemma lem3543363 {A B : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) (h1 : term5075 A B g s u f) : term5075 A B g s u f.
Proof. exact (h1). Qed.
Lemma lem3543365 (p : Prop) : p = (term275 p).
Proof. exact (EQ_MP (@lem10578 p) (@lem10597 p)). Qed.
Lemma lem3543366 {A B : Type'} (f : A -> B) (g : type686 A) (s : A -> Prop) (u : A -> Prop) : (term5129 A B f g s u) = (term5153 A B f g s u).
Proof. exact (@lem3543365 (term5129 A B f g s u)). Qed.
Lemma lem3543367 {A B : Type'} (f : A -> B) (g : type686 A) (s : A -> Prop) (u : A -> Prop) : (term5153 A B f g s u) = (term5129 A B f g s u).
Proof. exact (SYM (@lem3543366 A B f g s u)). Qed.
Lemma lem3543368 {A B : Type'} (f : A -> B) (g : type686 A) (s : A -> Prop) (u : A -> Prop) (h1 : term5154 A B f g s u) : term5154 A B f g s u.
Proof. exact (h1). Qed.
Lemma lem3543375 {A : Type'} (g : type686 A) (x : A -> Prop) (s : A -> Prop) : (term5155 A g x s) = (term5041 A g x s).
Proof. exact (@lem16933 (term5041 A g x s)). Qed.
Lemma lem3543376 {A : Type'} (P : type686 A) : (term298 A P) = (term299 A P).
Proof. exact (@lem18392 (A -> Prop) P). Qed.
Lemma lem3543377 {A : Type'} (g : type686 A) (s : A -> Prop) : (term5048 A g s) = (term5156 A g s).
Proof. exact (@lem3543376 A (term5046 A g s)). Qed.
Lemma lem3543378 {A : Type'} (g : type686 A) (x : A -> Prop) (s : A -> Prop) : (term5157 A g s x) = (term5044 A g x s).
Proof. exact (eq_refl (term5157 A g s x)). Qed.
Lemma lem3543379 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem3543380 {A : Type'} (g : type686 A) (x : A -> Prop) (s : A -> Prop) : (term5158 A g s x) = (term5155 A g x s).
Proof. exact (MK_COMB (@lem3543379) (@lem3543378 A g x s)). Qed.
Lemma lem3543381 {A : Type'} (g : type686 A) (x : A -> Prop) (s : A -> Prop) : (term5158 A g s x) = (term5041 A g x s).
Proof. exact (TRANS (@lem3543380 A g x s) (@lem3543375 A g x s)). Qed.
Lemma lem3543382 {A : Type'} (g : type686 A) (s : A -> Prop) : (term5159 A g s) = (term5160 A g s).
Proof. exact (fun_ext (fun x : A -> Prop => @lem3543381 A g x s)). Qed.
Lemma lem3543383 {A : Type'} : (@ex (A -> Prop)) = (@ex (A -> Prop)).
Proof. exact (eq_refl (@ex (A -> Prop))). Qed.
Lemma lem3543384 {A : Type'} (g : type686 A) (s : A -> Prop) : (term5156 A g s) = (term5161 A g s).
Proof. exact (MK_COMB (@lem3543383 A) (@lem3543382 A g s)). Qed.
Lemma lem3543385 {A : Type'} (g : type686 A) (s : A -> Prop) : (term5048 A g s) = (term5161 A g s).
Proof. exact (TRANS (@lem3543377 A g s) (@lem3543384 A g s)). Qed.
Lemma lem3543389 {A : Type'} (t : A -> Prop) (s : A -> Prop) : (term5162 A t s) = (t = s).
Proof. exact (@lem16933 (t = s)). Qed.
Lemma lem3543391 {A : Type'} (g : type686 A) (t : A -> Prop) : (term332 A g t) = (term332 A g t).
Proof. exact (eq_refl (term332 A g t)). Qed.
Lemma lem3543392 {A : Type'} (g : type686 A) (t : A -> Prop) (s : A -> Prop) : (term5163 A g t s) = (term5164 A g t s).
Proof. exact (MK_COMB (@lem3543391 A g t) (@lem3543389 A t s)). Qed.
Lemma lem3543393 {A : Type'} (g : type686 A) (t : A -> Prop) (s : A -> Prop) : (term5044 A g t s) = (term5163 A g t s).
Proof. exact (@lem17045 (g t) (term5040 A t s)). Qed.
Lemma lem3543394 {A : Type'} (g : type686 A) (t : A -> Prop) (s : A -> Prop) : (term5044 A g t s) = (term5164 A g t s).
Proof. exact (TRANS (@lem3543393 A g t s) (@lem3543392 A g t s)). Qed.
Lemma lem3543401 {A : Type'} (t : A -> Prop) (u : A -> Prop) (x : A) : (term216 A t u x) = (term306 A t u x).
Proof. exact (@lem17265 (t x) (u x)). Qed.
Lemma lem3543402 {A : Type'} (t : A -> Prop) (u : A -> Prop) : (term218 A t u) = (term307 A t u).
Proof. exact (fun_ext (fun x : A => @lem3543401 A t u x)). Qed.
Lemma lem3543403 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem3543404 {A : Type'} (t : A -> Prop) (u : A -> Prop) : (term219 A t u) = (term308 A t u).
Proof. exact (MK_COMB (@lem3543403 A) (@lem3543402 A t u)). Qed.
Lemma lem3543405 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem3543406 {A : Type'} (g : type686 A) (t : A -> Prop) (s : A -> Prop) : (term5165 A g t s) = (term5166 A g t s).
Proof. exact (MK_COMB (@lem3543405) (@lem3543394 A g t s)). Qed.
Lemma lem3543407 {A : Type'} (g : type686 A) (s : A -> Prop) (t : A -> Prop) (u : A -> Prop) : (term5167 A g s t u) = (term5168 A g s t u).
Proof. exact (MK_COMB (@lem3543406 A g t s) (@lem3543404 A t u)). Qed.
Lemma lem3543408 {A : Type'} (g : type686 A) (s : A -> Prop) (t : A -> Prop) (u : A -> Prop) : (term5051 A g s t u) = (term5167 A g s t u).
Proof. exact (@lem17265 (term5041 A g t s) (term219 A t u)). Qed.
Lemma lem3543409 {A : Type'} (g : type686 A) (s : A -> Prop) (t : A -> Prop) (u : A -> Prop) : (term5051 A g s t u) = (term5168 A g s t u).
Proof. exact (TRANS (@lem3543408 A g s t u) (@lem3543407 A g s t u)). Qed.
Lemma lem3543410 {A : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) : (term5052 A g s u) = (term5169 A g s u).
Proof. exact (fun_ext (fun t : A -> Prop => @lem3543409 A g s t u)). Qed.
Lemma lem3543411 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem3543412 {A : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) : (term5053 A g s u) = (term5170 A g s u).
Proof. exact (MK_COMB (@lem3543411 A) (@lem3543410 A g s u)). Qed.
Lemma lem3543419 {A : Type'} (s : A -> Prop) (u : A -> Prop) (x : A) : (term216 A s u x) = (term306 A s u x).
Proof. exact (@lem17265 (s x) (u x)). Qed.
Lemma lem3543420 {A : Type'} (s : A -> Prop) (u : A -> Prop) : (term218 A s u) = (term307 A s u).
Proof. exact (fun_ext (fun x : A => @lem3543419 A s u x)). Qed.
Lemma lem3543421 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem3543422 {A : Type'} (s : A -> Prop) (u : A -> Prop) : (term219 A s u) = (term308 A s u).
Proof. exact (MK_COMB (@lem3543421 A) (@lem3543420 A s u)). Qed.
Lemma lem3543426 {A : Type'} (t : A -> Prop) (s : A -> Prop) : (term5162 A t s) = (t = s).
Proof. exact (@lem16933 (t = s)). Qed.
Lemma lem3543428 {A : Type'} (g : type686 A) (t : A -> Prop) : (term332 A g t) = (term332 A g t).
Proof. exact (eq_refl (term332 A g t)). Qed.
Lemma lem3543429 {A : Type'} (g : type686 A) (t : A -> Prop) (s : A -> Prop) : (term5163 A g t s) = (term5164 A g t s).
Proof. exact (MK_COMB (@lem3543428 A g t) (@lem3543426 A t s)). Qed.
Lemma lem3543430 {A : Type'} (g : type686 A) (t : A -> Prop) (s : A -> Prop) : (term5044 A g t s) = (term5163 A g t s).
Proof. exact (@lem17045 (g t) (term5040 A t s)). Qed.
Lemma lem3543431 {A : Type'} (g : type686 A) (t : A -> Prop) (s : A -> Prop) : (term5044 A g t s) = (term5164 A g t s).
Proof. exact (TRANS (@lem3543430 A g t s) (@lem3543429 A g t s)). Qed.
Lemma lem3543439 {A B : Type'} (x : A) (f : A -> B) (t : A -> Prop) (x' : A) : (term309 A B x f t x') = (term310 A B x f t x').
Proof. exact (@lem17045 ((f x) = (f x')) (t x')). Qed.
Lemma lem3543440 {A : Type'} (P : A -> Prop) : (term311 A P) = (term312 A P).
Proof. exact (@lem18394 A P). Qed.
Lemma lem3543441 {A B : Type'} (x : A) (f : A -> B) (t : A -> Prop) : (term313 A B x f t) = (term314 A B x f t).
Proof. exact (@lem3543440 A (term239 A B x f t)). Qed.
Lemma lem3543442 {A B : Type'} (x : A) (f : A -> B) (t : A -> Prop) (x' : A) : (term315 A B x f t x') = (term237 A B x f t x').
Proof. exact (eq_refl (term315 A B x f t x')). Qed.
Lemma lem3543443 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem3543444 {A B : Type'} (x : A) (f : A -> B) (t : A -> Prop) (x' : A) : (term316 A B x f t x') = (term309 A B x f t x').
Proof. exact (MK_COMB (@lem3543443) (@lem3543442 A B x f t x')). Qed.
Lemma lem3543445 {A B : Type'} (x : A) (f : A -> B) (t : A -> Prop) (x' : A) : (term316 A B x f t x') = (term310 A B x f t x').
Proof. exact (TRANS (@lem3543444 A B x f t x') (@lem3543439 A B x f t x')). Qed.
Lemma lem3543446 {A B : Type'} (x : A) (f : A -> B) (t : A -> Prop) : (term317 A B x f t) = (term318 A B x f t).
Proof. exact (fun_ext (fun x' : A => @lem3543445 A B x f t x')). Qed.
Lemma lem3543447 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem3543448 {A B : Type'} (x : A) (f : A -> B) (t : A -> Prop) : (term314 A B x f t) = (term319 A B x f t).
Proof. exact (MK_COMB (@lem3543447 A) (@lem3543446 A B x f t)). Qed.
Lemma lem3543449 {A B : Type'} (x : A) (f : A -> B) (t : A -> Prop) : (term313 A B x f t) = (term319 A B x f t).
Proof. exact (TRANS (@lem3543441 A B x f t) (@lem3543448 A B x f t)). Qed.
Lemma lem3543451 {A : Type'} (u : A -> Prop) (x : A) : (term320 A u x) = (term320 A u x).
Proof. exact (eq_refl (term320 A u x)). Qed.
Lemma lem3543452 {A B : Type'} (u : A -> Prop) (x : A) (f : A -> B) (t : A -> Prop) : (term321 A B u x f t) = (term322 A B u x f t).
Proof. exact (MK_COMB (@lem3543451 A u x) (@lem3543449 A B x f t)). Qed.
Lemma lem3543453 {A B : Type'} (u : A -> Prop) (x : A) (f : A -> B) (t : A -> Prop) : (term323 A B u x f t) = (term321 A B u x f t).
Proof. exact (@lem17045 (u x) (term240 A B x f t)). Qed.
Lemma lem3543454 {A B : Type'} (u : A -> Prop) (x : A) (f : A -> B) (t : A -> Prop) : (term323 A B u x f t) = (term322 A B u x f t).
Proof. exact (TRANS (@lem3543453 A B u x f t) (@lem3543452 A B u x f t)). Qed.
Lemma lem3543455 {A : Type'} (t : A -> Prop) (x : A) : (t x) = (t x).
Proof. exact (eq_refl (t x)). Qed.
Lemma lem3543456 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem3543457 {A B : Type'} (u : A -> Prop) (x : A) (f : A -> B) (t : A -> Prop) : (term324 A B u x f t) = (term325 A B u x f t).
Proof. exact (MK_COMB (@lem3543456) (@lem3543454 A B u x f t)). Qed.
Lemma lem3543458 {A B : Type'} (u : A -> Prop) (f : A -> B) (t : A -> Prop) (x : A) : (term326 A B u f t x) = (term327 A B u f t x).
Proof. exact (MK_COMB (@lem3543457 A B u x f t) (@lem3543455 A t x)). Qed.
Lemma lem3543459 {A B : Type'} (u : A -> Prop) (f : A -> B) (t : A -> Prop) (x : A) : (term245 A B u f t x) = (term326 A B u f t x).
Proof. exact (@lem17265 (term241 A B u x f t) (t x)). Qed.
Lemma lem3543460 {A B : Type'} (u : A -> Prop) (f : A -> B) (t : A -> Prop) (x : A) : (term245 A B u f t x) = (term327 A B u f t x).
Proof. exact (TRANS (@lem3543459 A B u f t x) (@lem3543458 A B u f t x)). Qed.
Lemma lem3543461 {A B : Type'} (u : A -> Prop) (f : A -> B) (t : A -> Prop) : (term247 A B u f t) = (term328 A B u f t).
Proof. exact (fun_ext (fun x : A => @lem3543460 A B u f t x)). Qed.
Lemma lem3543462 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem3543463 {A B : Type'} (u : A -> Prop) (f : A -> B) (t : A -> Prop) : (term248 A B u f t) = (term329 A B u f t).
Proof. exact (MK_COMB (@lem3543462 A) (@lem3543461 A B u f t)). Qed.
Lemma lem3543464 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem3543465 {A : Type'} (g : type686 A) (t : A -> Prop) (s : A -> Prop) : (term5165 A g t s) = (term5166 A g t s).
Proof. exact (MK_COMB (@lem3543464) (@lem3543431 A g t s)). Qed.
Lemma lem3543466 {A B : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) (t : A -> Prop) : (term5171 A B g s u f t) = (term5172 A B g s u f t).
Proof. exact (MK_COMB (@lem3543465 A g t s) (@lem3543463 A B u f t)). Qed.
Lemma lem3543467 {A B : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) (t : A -> Prop) : (term5070 A B g s u f t) = (term5171 A B g s u f t).
Proof. exact (@lem17265 (term5041 A g t s) (term248 A B u f t)). Qed.
Lemma lem3543468 {A B : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) (t : A -> Prop) : (term5070 A B g s u f t) = (term5172 A B g s u f t).
Proof. exact (TRANS (@lem3543467 A B g s u f t) (@lem3543466 A B g s u f t)). Qed.
Lemma lem3543469 {A B : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) : (term5071 A B g s u f) = (term5173 A B g s u f).
Proof. exact (fun_ext (fun t : A -> Prop => @lem3543468 A B g s u f t)). Qed.
Lemma lem3543470 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem3543471 {A B : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) : (term5072 A B g s u f) = (term5174 A B g s u f).
Proof. exact (MK_COMB (@lem3543470 A) (@lem3543469 A B g s u f)). Qed.
Lemma lem3543472 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem3543473 {A : Type'} (s : A -> Prop) (u : A -> Prop) : (term220 A s u) = (term330 A s u).
Proof. exact (MK_COMB (@lem3543472) (@lem3543422 A s u)). Qed.
Lemma lem3543474 {A B : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) : (term5073 A B g s u f) = (term5175 A B g s u f).
Proof. exact (MK_COMB (@lem3543473 A s u) (@lem3543471 A B g s u f)). Qed.
Lemma lem3543475 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem3543476 {A : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) : (term5054 A g s u) = (term5176 A g s u).
Proof. exact (MK_COMB (@lem3543475) (@lem3543412 A g s u)). Qed.
Lemma lem3543477 {A B : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) : (term5074 A B g s u f) = (term5177 A B g s u f).
Proof. exact (MK_COMB (@lem3543476 A g s u) (@lem3543474 A B g s u f)). Qed.
Lemma lem3543478 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem3543479 {A : Type'} (g : type686 A) (s : A -> Prop) : (term5049 A g s) = (term5178 A g s).
Proof. exact (MK_COMB (@lem3543478) (@lem3543385 A g s)). Qed.
Lemma lem3543480 {A B : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) : (term5075 A B g s u f) = (term5179 A B g s u f).
Proof. exact (MK_COMB (@lem3543479 A g s) (@lem3543477 A B g s u f)). Qed.
Lemma lem3543751 {A : Type'} (P : A -> Prop) (Q : Prop) : (term398 A P Q) = (term399 A P Q).
Proof. exact (EQ_MP (@lem18923 A P Q) (@lem18922 A P Q)). Qed.
Lemma lem3543752 {A : Type'} (P : type686 A) (Q : Prop) : (term5180 A P Q) = (term5181 A P Q).
Proof. exact (@lem3543751 (A -> Prop) P Q). Qed.
Lemma lem3543753 {A B : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) : (term5182 A B g s u f) = (term5183 A B g s u f).
Proof. exact (@lem3543752 A (term5160 A g s) (term5177 A B g s u f)). Qed.
Lemma lem3543754 {A : Type'} (g : type686 A) (x : A -> Prop) (s : A -> Prop) : (term5184 A g s x) = (term5041 A g x s).
Proof. exact (eq_refl (term5184 A g s x)). Qed.
Lemma lem3543755 {A : Type'} (g : type686 A) (s : A -> Prop) : (term5185 A g s) = (term5160 A g s).
Proof. exact (fun_ext (fun x : A -> Prop => @lem3543754 A g x s)). Qed.
Lemma lem3543756 {A : Type'} : (@ex (A -> Prop)) = (@ex (A -> Prop)).
Proof. exact (eq_refl (@ex (A -> Prop))). Qed.
Lemma lem3543757 {A : Type'} (g : type686 A) (s : A -> Prop) : (term5186 A g s) = (term5161 A g s).
Proof. exact (MK_COMB (@lem3543756 A) (@lem3543755 A g s)). Qed.
Lemma lem3543758 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem3543759 {A : Type'} (g : type686 A) (s : A -> Prop) : (term5187 A g s) = (term5178 A g s).
Proof. exact (MK_COMB (@lem3543758) (@lem3543757 A g s)). Qed.
Lemma lem3543760 {A B : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) : (term5177 A B g s u f) = (term5177 A B g s u f).
Proof. exact (eq_refl (term5177 A B g s u f)). Qed.
Lemma lem3543761 {A B : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) : (term5182 A B g s u f) = (term5179 A B g s u f).
Proof. exact (MK_COMB (@lem3543759 A g s) (@lem3543760 A B g s u f)). Qed.
Lemma lem3543762 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem3543763 {A B : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) : (term5188 A B g s u f) = (term5189 A B g s u f).
Proof. exact (MK_COMB (@lem3543762) (@lem3543761 A B g s u f)). Qed.
Lemma lem3543764 {A : Type'} (g : type686 A) (x : A -> Prop) (s : A -> Prop) : (term5184 A g s x) = (term5041 A g x s).
Proof. exact (eq_refl (term5184 A g s x)). Qed.
Lemma lem3543765 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem3543766 {A : Type'} (g : type686 A) (x : A -> Prop) (s : A -> Prop) : (term5190 A g s x) = (term5191 A g x s).
Proof. exact (MK_COMB (@lem3543765) (@lem3543764 A g x s)). Qed.
Lemma lem3543767 {A B : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) : (term5177 A B g s u f) = (term5177 A B g s u f).
Proof. exact (eq_refl (term5177 A B g s u f)). Qed.
Lemma lem3543768 {A B : Type'} (x : A -> Prop) (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) : (term5192 A B x g s u f) = (term5193 A B x g s u f).
Proof. exact (MK_COMB (@lem3543766 A g x s) (@lem3543767 A B g s u f)). Qed.
Lemma lem3543769 {A B : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) : (term5194 A B g s u f) = (term5195 A B g s u f).
Proof. exact (fun_ext (fun x : A -> Prop => @lem3543768 A B x g s u f)). Qed.
Lemma lem3543770 {A : Type'} : (@ex (A -> Prop)) = (@ex (A -> Prop)).
Proof. exact (eq_refl (@ex (A -> Prop))). Qed.
Lemma lem3543771 {A B : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) : (term5183 A B g s u f) = (term5196 A B g s u f).
Proof. exact (MK_COMB (@lem3543770 A) (@lem3543769 A B g s u f)). Qed.
Lemma lem3543772 {A B : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) : ((term5182 A B g s u f) = (term5183 A B g s u f)) = ((term5179 A B g s u f) = (term5196 A B g s u f)).
Proof. exact (MK_COMB (@lem3543763 A B g s u f) (@lem3543771 A B g s u f)). Qed.
Lemma lem3543774 {A B : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) : (term5179 A B g s u f) = (term5196 A B g s u f).
Proof. exact (EQ_MP (@lem3543772 A B g s u f) (@lem3543753 A B g s u f)). Qed.
Lemma lem3543775 {A B : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) : (term5075 A B g s u f) = (term5196 A B g s u f).
Proof. exact (TRANS (@lem3543480 A B g s u f) (@lem3543774 A B g s u f)). Qed.
Lemma lem3543776 {A B : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) (h1 : term5075 A B g s u f) : term5196 A B g s u f.
Proof. exact (EQ_MP (@lem3543775 A B g s u f) (@lem3543363 A B g s u f h1)). Qed.
Lemma lem3543782 {A B : Type'} (x : A) (f : A -> B) (s : A -> Prop) (x' : A) : (term237 A B x f s x') = (term237 A B x f s x').
Proof. exact (eq_refl (term237 A B x f s x')). Qed.
Lemma lem3543783 {A B : Type'} (x : A) (f : A -> B) (s : A -> Prop) : (term239 A B x f s) = (term239 A B x f s).
Proof. exact (fun_ext (fun x' : A => @lem3543782 A B x f s x')). Qed.
Lemma lem3543784 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem3543785 {A B : Type'} (x : A) (f : A -> B) (s : A -> Prop) : (term240 A B x f s) = (term240 A B x f s).
Proof. exact (MK_COMB (@lem3543784 A) (@lem3543783 A B x f s)). Qed.
Lemma lem3543787 {A : Type'} (u : A -> Prop) (x : A) : (term234 A u x) = (term234 A u x).
Proof. exact (eq_refl (term234 A u x)). Qed.
Lemma lem3543788 {A B : Type'} (u : A -> Prop) (x : A) (f : A -> B) (s : A -> Prop) : (term241 A B u x f s) = (term241 A B u x f s).
Proof. exact (MK_COMB (@lem3543787 A u x) (@lem3543785 A B x f s)). Qed.
Lemma lem3543789 {A : Type'} (s : A -> Prop) (x : A) : (term618 A s x) = (term618 A s x).
Proof. exact (eq_refl (term618 A s x)). Qed.
Lemma lem3543790 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem3543791 {A B : Type'} (u : A -> Prop) (x : A) (f : A -> B) (s : A -> Prop) : (term5197 A B u x f s) = (term5197 A B u x f s).
Proof. exact (MK_COMB (@lem3543790) (@lem3543788 A B u x f s)). Qed.
Lemma lem3543792 {A B : Type'} (u : A -> Prop) (f : A -> B) (s : A -> Prop) (x : A) : (term5198 A B u f s x) = (term5198 A B u f s x).
Proof. exact (MK_COMB (@lem3543791 A B u x f s) (@lem3543789 A s x)). Qed.
Lemma lem3543793 {A B : Type'} (u : A -> Prop) (f : A -> B) (s : A -> Prop) (x : A) : (term5199 A B u f s x) = (term5198 A B u f s x).
Proof. exact (@lem17362 (term241 A B u x f s) (s x)). Qed.
Lemma lem3543794 {A B : Type'} (u : A -> Prop) (f : A -> B) (s : A -> Prop) (x : A) : (term5199 A B u f s x) = (term5198 A B u f s x).
Proof. exact (TRANS (@lem3543793 A B u f s x) (@lem3543792 A B u f s x)). Qed.
Lemma lem3543795 {A : Type'} (P : A -> Prop) : (term5200 A P) = (term5201 A P).
Proof. exact (@lem18392 A P). Qed.
Lemma lem3543796 {A B : Type'} (u : A -> Prop) (f : A -> B) (s : A -> Prop) : (term5202 A B u f s) = (term5203 A B u f s).
Proof. exact (@lem3543795 A (term247 A B u f s)). Qed.
Lemma lem3543797 {A B : Type'} (u : A -> Prop) (f : A -> B) (s : A -> Prop) (x : A) : (term5204 A B u f s x) = (term245 A B u f s x).
Proof. exact (eq_refl (term5204 A B u f s x)). Qed.
Lemma lem3543798 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem3543799 {A B : Type'} (u : A -> Prop) (f : A -> B) (s : A -> Prop) (x : A) : (term5205 A B u f s x) = (term5199 A B u f s x).
Proof. exact (MK_COMB (@lem3543798) (@lem3543797 A B u f s x)). Qed.
Lemma lem3543800 {A B : Type'} (u : A -> Prop) (f : A -> B) (s : A -> Prop) (x : A) : (term5205 A B u f s x) = (term5198 A B u f s x).
Proof. exact (TRANS (@lem3543799 A B u f s x) (@lem3543794 A B u f s x)). Qed.
Lemma lem3543801 {A B : Type'} (u : A -> Prop) (f : A -> B) (s : A -> Prop) : (term5206 A B u f s) = (term5207 A B u f s).
Proof. exact (fun_ext (fun x : A => @lem3543800 A B u f s x)). Qed.
Lemma lem3543802 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem3543803 {A B : Type'} (u : A -> Prop) (f : A -> B) (s : A -> Prop) : (term5203 A B u f s) = (term5208 A B u f s).
Proof. exact (MK_COMB (@lem3543802 A) (@lem3543801 A B u f s)). Qed.
Lemma lem3543804 {A B : Type'} (u : A -> Prop) (f : A -> B) (s : A -> Prop) : (term5202 A B u f s) = (term5208 A B u f s).
Proof. exact (TRANS (@lem3543796 A B u f s) (@lem3543803 A B u f s)). Qed.
Lemma lem3543808 {A : Type'} (t : A -> Prop) (s : A -> Prop) : (term5162 A t s) = (t = s).
Proof. exact (@lem16933 (t = s)). Qed.
Lemma lem3543810 {A : Type'} (g : type686 A) (t : A -> Prop) : (term332 A g t) = (term332 A g t).
Proof. exact (eq_refl (term332 A g t)). Qed.
Lemma lem3543811 {A : Type'} (g : type686 A) (t : A -> Prop) (s : A -> Prop) : (term5163 A g t s) = (term5164 A g t s).
Proof. exact (MK_COMB (@lem3543810 A g t) (@lem3543808 A t s)). Qed.
Lemma lem3543812 {A : Type'} (g : type686 A) (t : A -> Prop) (s : A -> Prop) : (term5044 A g t s) = (term5163 A g t s).
Proof. exact (@lem17045 (g t) (term5040 A t s)). Qed.
Lemma lem3543813 {A : Type'} (g : type686 A) (t : A -> Prop) (s : A -> Prop) : (term5044 A g t s) = (term5164 A g t s).
Proof. exact (TRANS (@lem3543812 A g t s) (@lem3543811 A g t s)). Qed.
Lemma lem3543814 {A : Type'} (t : A -> Prop) (x : A) : (t x) = (t x).
Proof. exact (eq_refl (t x)). Qed.
Lemma lem3543815 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem3543816 {A : Type'} (g : type686 A) (t : A -> Prop) (s : A -> Prop) : (term5165 A g t s) = (term5166 A g t s).
Proof. exact (MK_COMB (@lem3543815) (@lem3543813 A g t s)). Qed.
Lemma lem3543817 {A : Type'} (g : type686 A) (s : A -> Prop) (t : A -> Prop) (x : A) : (term5209 A g s t x) = (term5210 A g s t x).
Proof. exact (MK_COMB (@lem3543816 A g t s) (@lem3543814 A t x)). Qed.
Lemma lem3543818 {A : Type'} (g : type686 A) (s : A -> Prop) (t : A -> Prop) (x : A) : (term5081 A g s t x) = (term5209 A g s t x).
Proof. exact (@lem17265 (term5041 A g t s) (t x)). Qed.
Lemma lem3543819 {A : Type'} (g : type686 A) (s : A -> Prop) (t : A -> Prop) (x : A) : (term5081 A g s t x) = (term5210 A g s t x).
Proof. exact (TRANS (@lem3543818 A g s t x) (@lem3543817 A g s t x)). Qed.
Lemma lem3543820 {A : Type'} (g : type686 A) (s : A -> Prop) (x : A) : (term5083 A g s x) = (term5211 A g s x).
Proof. exact (fun_ext (fun t : A -> Prop => @lem3543819 A g s t x)). Qed.
Lemma lem3543821 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem3543822 {A : Type'} (g : type686 A) (s : A -> Prop) (x : A) : (term5084 A g s x) = (term5212 A g s x).
Proof. exact (MK_COMB (@lem3543821 A) (@lem3543820 A g s x)). Qed.
Lemma lem3543823 {A : Type'} (u : A -> Prop) (x : A) : (term618 A u x) = (term618 A u x).
Proof. exact (eq_refl (term618 A u x)). Qed.
Lemma lem3543824 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem3543825 {A : Type'} (g : type686 A) (s : A -> Prop) (x : A) : (term5213 A g s x) = (term5214 A g s x).
Proof. exact (MK_COMB (@lem3543824) (@lem3543822 A g s x)). Qed.
Lemma lem3543826 {A : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) (x : A) : (term5215 A g s u x) = (term5216 A g s u x).
Proof. exact (MK_COMB (@lem3543825 A g s x) (@lem3543823 A u x)). Qed.
Lemma lem3543827 {A : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) (x : A) : (term5217 A g s u x) = (term5215 A g s u x).
Proof. exact (@lem17362 (term5084 A g s x) (u x)). Qed.
Lemma lem3543828 {A : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) (x : A) : (term5217 A g s u x) = (term5216 A g s u x).
Proof. exact (TRANS (@lem3543827 A g s u x) (@lem3543826 A g s u x)). Qed.
Lemma lem3543829 {A : Type'} (P : A -> Prop) : (term5200 A P) = (term5201 A P).
Proof. exact (@lem18392 A P). Qed.
Lemma lem3543830 {A : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) : (term5218 A g s u) = (term5219 A g s u).
Proof. exact (@lem3543829 A (term5090 A g s u)). Qed.
Lemma lem3543831 {A : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) (x : A) : (term5220 A g s u x) = (term5088 A g s u x).
Proof. exact (eq_refl (term5220 A g s u x)). Qed.
Lemma lem3543832 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem3543833 {A : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) (x : A) : (term5221 A g s u x) = (term5217 A g s u x).
Proof. exact (MK_COMB (@lem3543832) (@lem3543831 A g s u x)). Qed.
Lemma lem3543834 {A : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) (x : A) : (term5221 A g s u x) = (term5216 A g s u x).
Proof. exact (TRANS (@lem3543833 A g s u x) (@lem3543828 A g s u x)). Qed.
Lemma lem3543835 {A : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) : (term5222 A g s u) = (term5223 A g s u).
Proof. exact (fun_ext (fun x : A => @lem3543834 A g s u x)). Qed.
Lemma lem3543836 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem3543837 {A : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) : (term5219 A g s u) = (term5224 A g s u).
Proof. exact (MK_COMB (@lem3543836 A) (@lem3543835 A g s u)). Qed.
Lemma lem3543838 {A : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) : (term5218 A g s u) = (term5224 A g s u).
Proof. exact (TRANS (@lem3543830 A g s u) (@lem3543837 A g s u)). Qed.
Lemma lem3543839 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem3543840 {A B : Type'} (u : A -> Prop) (f : A -> B) (s : A -> Prop) : (term5225 A B u f s) = (term5226 A B u f s).
Proof. exact (MK_COMB (@lem3543839) (@lem3543804 A B u f s)). Qed.
Lemma lem3543841 {A B : Type'} (f : A -> B) (g : type686 A) (s : A -> Prop) (u : A -> Prop) : (term5227 A B f g s u) = (term5228 A B f g s u).
Proof. exact (MK_COMB (@lem3543840 A B u f s) (@lem3543838 A g s u)). Qed.
Lemma lem3543842 {A B : Type'} (f : A -> B) (g : type686 A) (s : A -> Prop) (u : A -> Prop) : (term5229 A B f g s u) = (term5227 A B f g s u).
Proof. exact (@lem17045 (term248 A B u f s) (term5091 A g s u)). Qed.
Lemma lem3543843 {A B : Type'} (f : A -> B) (g : type686 A) (s : A -> Prop) (u : A -> Prop) : (term5229 A B f g s u) = (term5228 A B f g s u).
Proof. exact (TRANS (@lem3543842 A B f g s u) (@lem3543841 A B f g s u)). Qed.
Lemma lem3543849 {A : Type'} (t : A -> Prop) (s : A -> Prop) : (term5162 A t s) = (t = s).
Proof. exact (@lem16933 (t = s)). Qed.
Lemma lem3543851 {A : Type'} (g : type686 A) (t : A -> Prop) : (term332 A g t) = (term332 A g t).
Proof. exact (eq_refl (term332 A g t)). Qed.
Lemma lem3543852 {A : Type'} (g : type686 A) (t : A -> Prop) (s : A -> Prop) : (term5163 A g t s) = (term5164 A g t s).
Proof. exact (MK_COMB (@lem3543851 A g t) (@lem3543849 A t s)). Qed.
Lemma lem3543853 {A : Type'} (g : type686 A) (t : A -> Prop) (s : A -> Prop) : (term5044 A g t s) = (term5163 A g t s).
Proof. exact (@lem17045 (g t) (term5040 A t s)). Qed.
Lemma lem3543854 {A : Type'} (g : type686 A) (t : A -> Prop) (s : A -> Prop) : (term5044 A g t s) = (term5164 A g t s).
Proof. exact (TRANS (@lem3543853 A g t s) (@lem3543852 A g t s)). Qed.
Lemma lem3543855 {A : Type'} (t : A -> Prop) (x' : A) : (t x') = (t x').
Proof. exact (eq_refl (t x')). Qed.
Lemma lem3543856 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem3543857 {A : Type'} (g : type686 A) (t : A -> Prop) (s : A -> Prop) : (term5165 A g t s) = (term5166 A g t s).
Proof. exact (MK_COMB (@lem3543856) (@lem3543854 A g t s)). Qed.
Lemma lem3543858 {A : Type'} (g : type686 A) (s : A -> Prop) (t : A -> Prop) (x' : A) : (term5209 A g s t x') = (term5210 A g s t x').
Proof. exact (MK_COMB (@lem3543857 A g t s) (@lem3543855 A t x')). Qed.
Lemma lem3543859 {A : Type'} (g : type686 A) (s : A -> Prop) (t : A -> Prop) (x' : A) : (term5081 A g s t x') = (term5209 A g s t x').
Proof. exact (@lem17265 (term5041 A g t s) (t x')). Qed.
Lemma lem3543860 {A : Type'} (g : type686 A) (s : A -> Prop) (t : A -> Prop) (x' : A) : (term5081 A g s t x') = (term5210 A g s t x').
Proof. exact (TRANS (@lem3543859 A g s t x') (@lem3543858 A g s t x')). Qed.
Lemma lem3543861 {A : Type'} (g : type686 A) (s : A -> Prop) (x' : A) : (term5083 A g s x') = (term5211 A g s x').
Proof. exact (fun_ext (fun t : A -> Prop => @lem3543860 A g s t x')). Qed.
Lemma lem3543862 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem3543863 {A : Type'} (g : type686 A) (s : A -> Prop) (x' : A) : (term5084 A g s x') = (term5212 A g s x').
Proof. exact (MK_COMB (@lem3543862 A) (@lem3543861 A g s x')). Qed.
Lemma lem3543865 {A B : Type'} (x : A) (f : A -> B) (x' : A) : (term235 A B x f x') = (term235 A B x f x').
Proof. exact (eq_refl (term235 A B x f x')). Qed.
Lemma lem3543866 {A B : Type'} (x : A) (f : A -> B) (g : type686 A) (s : A -> Prop) (x' : A) : (term5115 A B x f g s x') = (term5230 A B x f g s x').
Proof. exact (MK_COMB (@lem3543865 A B x f x') (@lem3543863 A g s x')). Qed.
Lemma lem3543867 {A B : Type'} (x : A) (f : A -> B) (g : type686 A) (s : A -> Prop) : (term5117 A B x f g s) = (term5231 A B x f g s).
Proof. exact (fun_ext (fun x' : A => @lem3543866 A B x f g s x')). Qed.
Lemma lem3543868 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem3543869 {A B : Type'} (x : A) (f : A -> B) (g : type686 A) (s : A -> Prop) : (term5118 A B x f g s) = (term5232 A B x f g s).
Proof. exact (MK_COMB (@lem3543868 A) (@lem3543867 A B x f g s)). Qed.
Lemma lem3543871 {A : Type'} (u : A -> Prop) (x : A) : (term234 A u x) = (term234 A u x).
Proof. exact (eq_refl (term234 A u x)). Qed.
Lemma lem3543872 {A B : Type'} (u : A -> Prop) (x : A) (f : A -> B) (g : type686 A) (s : A -> Prop) : (term5119 A B u x f g s) = (term5233 A B u x f g s).
Proof. exact (MK_COMB (@lem3543871 A u x) (@lem3543869 A B x f g s)). Qed.
Lemma lem3543883 {A : Type'} (g : type686 A) (s : A -> Prop) (t : A -> Prop) (x : A) : (term5234 A g s t x) = (term5235 A g s t x).
Proof. exact (@lem17362 (term5041 A g t s) (t x)). Qed.
Lemma lem3543884 {A : Type'} (P : type686 A) : (term298 A P) = (term299 A P).
Proof. exact (@lem18392 (A -> Prop) P). Qed.
Lemma lem3543885 {A : Type'} (g : type686 A) (s : A -> Prop) (x : A) : (term5236 A g s x) = (term5237 A g s x).
Proof. exact (@lem3543884 A (term5083 A g s x)). Qed.
Lemma lem3543886 {A : Type'} (g : type686 A) (s : A -> Prop) (t : A -> Prop) (x : A) : (term5238 A g s x t) = (term5081 A g s t x).
Proof. exact (eq_refl (term5238 A g s x t)). Qed.
Lemma lem3543887 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem3543888 {A : Type'} (g : type686 A) (s : A -> Prop) (t : A -> Prop) (x : A) : (term5239 A g s x t) = (term5234 A g s t x).
Proof. exact (MK_COMB (@lem3543887) (@lem3543886 A g s t x)). Qed.
Lemma lem3543889 {A : Type'} (g : type686 A) (s : A -> Prop) (t : A -> Prop) (x : A) : (term5239 A g s x t) = (term5235 A g s t x).
Proof. exact (TRANS (@lem3543888 A g s t x) (@lem3543883 A g s t x)). Qed.
Lemma lem3543890 {A : Type'} (g : type686 A) (s : A -> Prop) (x : A) : (term5240 A g s x) = (term5241 A g s x).
Proof. exact (fun_ext (fun t : A -> Prop => @lem3543889 A g s t x)). Qed.
Lemma lem3543891 {A : Type'} : (@ex (A -> Prop)) = (@ex (A -> Prop)).
Proof. exact (eq_refl (@ex (A -> Prop))). Qed.
Lemma lem3543892 {A : Type'} (g : type686 A) (s : A -> Prop) (x : A) : (term5237 A g s x) = (term5242 A g s x).
Proof. exact (MK_COMB (@lem3543891 A) (@lem3543890 A g s x)). Qed.
Lemma lem3543893 {A : Type'} (g : type686 A) (s : A -> Prop) (x : A) : (term5236 A g s x) = (term5242 A g s x).
Proof. exact (TRANS (@lem3543885 A g s x) (@lem3543892 A g s x)). Qed.
Lemma lem3543894 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem3543895 {A B : Type'} (u : A -> Prop) (x : A) (f : A -> B) (g : type686 A) (s : A -> Prop) : (term5243 A B u x f g s) = (term5244 A B u x f g s).
Proof. exact (MK_COMB (@lem3543894) (@lem3543872 A B u x f g s)). Qed.
Lemma lem3543896 {A B : Type'} (u : A -> Prop) (f : A -> B) (g : type686 A) (s : A -> Prop) (x : A) : (term5245 A B u f g s x) = (term5246 A B u f g s x).
Proof. exact (MK_COMB (@lem3543895 A B u x f g s) (@lem3543893 A g s x)). Qed.
Lemma lem3543897 {A B : Type'} (u : A -> Prop) (f : A -> B) (g : type686 A) (s : A -> Prop) (x : A) : (term5247 A B u f g s x) = (term5245 A B u f g s x).
Proof. exact (@lem17362 (term5119 A B u x f g s) (term5084 A g s x)). Qed.
Lemma lem3543898 {A B : Type'} (u : A -> Prop) (f : A -> B) (g : type686 A) (s : A -> Prop) (x : A) : (term5247 A B u f g s x) = (term5246 A B u f g s x).
Proof. exact (TRANS (@lem3543897 A B u f g s x) (@lem3543896 A B u f g s x)). Qed.
Lemma lem3543899 {A : Type'} (P : A -> Prop) : (term5200 A P) = (term5201 A P).
Proof. exact (@lem18392 A P). Qed.
Lemma lem3543900 {A B : Type'} (u : A -> Prop) (f : A -> B) (g : type686 A) (s : A -> Prop) : (term5248 A B u f g s) = (term5249 A B u f g s).
Proof. exact (@lem3543899 A (term5125 A B u f g s)). Qed.
Lemma lem3543901 {A B : Type'} (u : A -> Prop) (f : A -> B) (g : type686 A) (s : A -> Prop) (x : A) : (term5250 A B u f g s x) = (term5123 A B u f g s x).
Proof. exact (eq_refl (term5250 A B u f g s x)). Qed.
Lemma lem3543902 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem3543903 {A B : Type'} (u : A -> Prop) (f : A -> B) (g : type686 A) (s : A -> Prop) (x : A) : (term5251 A B u f g s x) = (term5247 A B u f g s x).
Proof. exact (MK_COMB (@lem3543902) (@lem3543901 A B u f g s x)). Qed.
Lemma lem3543904 {A B : Type'} (u : A -> Prop) (f : A -> B) (g : type686 A) (s : A -> Prop) (x : A) : (term5251 A B u f g s x) = (term5246 A B u f g s x).
Proof. exact (TRANS (@lem3543903 A B u f g s x) (@lem3543898 A B u f g s x)). Qed.
Lemma lem3543905 {A B : Type'} (u : A -> Prop) (f : A -> B) (g : type686 A) (s : A -> Prop) : (term5252 A B u f g s) = (term5253 A B u f g s).
Proof. exact (fun_ext (fun x : A => @lem3543904 A B u f g s x)). Qed.
Lemma lem3543906 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem3543907 {A B : Type'} (u : A -> Prop) (f : A -> B) (g : type686 A) (s : A -> Prop) : (term5249 A B u f g s) = (term5254 A B u f g s).
Proof. exact (MK_COMB (@lem3543906 A) (@lem3543905 A B u f g s)). Qed.
Lemma lem3543908 {A B : Type'} (u : A -> Prop) (f : A -> B) (g : type686 A) (s : A -> Prop) : (term5248 A B u f g s) = (term5254 A B u f g s).
Proof. exact (TRANS (@lem3543900 A B u f g s) (@lem3543907 A B u f g s)). Qed.
Lemma lem3543915 {A : Type'} (s : A -> Prop) (u : A -> Prop) (x : A) : (term5255 A s u x) = (term5256 A s u x).
Proof. exact (@lem17362 (s x) (u x)). Qed.
Lemma lem3543916 {A : Type'} (P : A -> Prop) : (term5200 A P) = (term5201 A P).
Proof. exact (@lem18392 A P). Qed.
Lemma lem3543917 {A : Type'} (s : A -> Prop) (u : A -> Prop) : (term5257 A s u) = (term5258 A s u).
Proof. exact (@lem3543916 A (term218 A s u)). Qed.
Lemma lem3543918 {A : Type'} (s : A -> Prop) (u : A -> Prop) (x : A) : (term5259 A s u x) = (term216 A s u x).
Proof. exact (eq_refl (term5259 A s u x)). Qed.
Lemma lem3543919 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem3543920 {A : Type'} (s : A -> Prop) (u : A -> Prop) (x : A) : (term5260 A s u x) = (term5255 A s u x).
Proof. exact (MK_COMB (@lem3543919) (@lem3543918 A s u x)). Qed.
Lemma lem3543921 {A : Type'} (s : A -> Prop) (u : A -> Prop) (x : A) : (term5260 A s u x) = (term5256 A s u x).
Proof. exact (TRANS (@lem3543920 A s u x) (@lem3543915 A s u x)). Qed.
Lemma lem3543922 {A : Type'} (s : A -> Prop) (u : A -> Prop) : (term5261 A s u) = (term5262 A s u).
Proof. exact (fun_ext (fun x : A => @lem3543921 A s u x)). Qed.
Lemma lem3543923 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem3543924 {A : Type'} (s : A -> Prop) (u : A -> Prop) : (term5258 A s u) = (term5263 A s u).
Proof. exact (MK_COMB (@lem3543923 A) (@lem3543922 A s u)). Qed.
Lemma lem3543925 {A : Type'} (s : A -> Prop) (u : A -> Prop) : (term5257 A s u) = (term5263 A s u).
Proof. exact (TRANS (@lem3543917 A s u) (@lem3543924 A s u)). Qed.
Lemma lem3543926 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem3543927 {A B : Type'} (u : A -> Prop) (f : A -> B) (g : type686 A) (s : A -> Prop) : (term5264 A B u f g s) = (term5265 A B u f g s).
Proof. exact (MK_COMB (@lem3543926) (@lem3543908 A B u f g s)). Qed.
Lemma lem3543928 {A B : Type'} (f : A -> B) (g : type686 A) (s : A -> Prop) (u : A -> Prop) : (term5266 A B f g s u) = (term5267 A B f g s u).
Proof. exact (MK_COMB (@lem3543927 A B u f g s) (@lem3543925 A s u)). Qed.
Lemma lem3543929 {A B : Type'} (f : A -> B) (g : type686 A) (s : A -> Prop) (u : A -> Prop) : (term5268 A B f g s u) = (term5266 A B f g s u).
Proof. exact (@lem17045 (term5126 A B u f g s) (term219 A s u)). Qed.
Lemma lem3543930 {A B : Type'} (f : A -> B) (g : type686 A) (s : A -> Prop) (u : A -> Prop) : (term5268 A B f g s u) = (term5267 A B f g s u).
Proof. exact (TRANS (@lem3543929 A B f g s u) (@lem3543928 A B f g s u)). Qed.
Lemma lem3543931 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem3543932 {A B : Type'} (f : A -> B) (g : type686 A) (s : A -> Prop) (u : A -> Prop) : (term5269 A B f g s u) = (term5270 A B f g s u).
Proof. exact (MK_COMB (@lem3543931) (@lem3543843 A B f g s u)). Qed.
Lemma lem3543933 {A B : Type'} (f : A -> B) (g : type686 A) (s : A -> Prop) (u : A -> Prop) : (term5271 A B f g s u) = (term5272 A B f g s u).
Proof. exact (MK_COMB (@lem3543932 A B f g s u) (@lem3543930 A B f g s u)). Qed.
Lemma lem3543934 {A B : Type'} (f : A -> B) (g : type686 A) (s : A -> Prop) (u : A -> Prop) : (term5154 A B f g s u) = (term5271 A B f g s u).
Proof. exact (@lem17160 (term5092 A B f g s u) (term5128 A B f g s u)). Qed.
Lemma lem3543935 {A B : Type'} (f : A -> B) (g : type686 A) (s : A -> Prop) (u : A -> Prop) : (term5154 A B f g s u) = (term5272 A B f g s u).
Proof. exact (TRANS (@lem3543934 A B f g s u) (@lem3543933 A B f g s u)). Qed.
Lemma lem3544334 {A : Type'} (P : Prop) (Q : A -> Prop) : (term415 A P Q) = (term416 A P Q).
Proof. exact (EQ_MP (@lem18929 A P Q) (@lem18928 A P Q)). Qed.
Lemma lem3544335 {A : Type'} (P : Prop) (Q : A -> Prop) : (term415 A P Q) = (term416 A P Q).
Proof. exact (@lem3544334 A P Q). Qed.
Lemma lem3544336 {A B : Type'} (u : A -> Prop) (x : A) (f : A -> B) (s : A -> Prop) : (term5273 A B u x f s) = (term5274 A B u x f s).
Proof. exact (@lem3544335 A (u x) (term239 A B x f s)). Qed.
Lemma lem3544337 {A B : Type'} (x : A) (f : A -> B) (s : A -> Prop) (x' : A) : (term315 A B x f s x') = (term237 A B x f s x').
Proof. exact (eq_refl (term315 A B x f s x')). Qed.
Lemma lem3544338 {A B : Type'} (x : A) (f : A -> B) (s : A -> Prop) : (term5275 A B x f s) = (term239 A B x f s).
Proof. exact (fun_ext (fun x' : A => @lem3544337 A B x f s x')). Qed.
Lemma lem3544339 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem3544340 {A B : Type'} (x : A) (f : A -> B) (s : A -> Prop) : (term5276 A B x f s) = (term240 A B x f s).
Proof. exact (MK_COMB (@lem3544339 A) (@lem3544338 A B x f s)). Qed.
Lemma lem3544341 {A : Type'} (u : A -> Prop) (x : A) : (term234 A u x) = (term234 A u x).
Proof. exact (eq_refl (term234 A u x)). Qed.
Lemma lem3544342 {A B : Type'} (u : A -> Prop) (x : A) (f : A -> B) (s : A -> Prop) : (term5273 A B u x f s) = (term241 A B u x f s).
Proof. exact (MK_COMB (@lem3544341 A u x) (@lem3544340 A B x f s)). Qed.
Lemma lem3544343 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem3544344 {A B : Type'} (u : A -> Prop) (x : A) (f : A -> B) (s : A -> Prop) : (term5277 A B u x f s) = (term5278 A B u x f s).
Proof. exact (MK_COMB (@lem3544343) (@lem3544342 A B u x f s)). Qed.
Lemma lem3544345 {A B : Type'} (x : A) (f : A -> B) (s : A -> Prop) (x' : A) : (term315 A B x f s x') = (term237 A B x f s x').
Proof. exact (eq_refl (term315 A B x f s x')). Qed.
Lemma lem3544346 {A : Type'} (u : A -> Prop) (x : A) : (term234 A u x) = (term234 A u x).
Proof. exact (eq_refl (term234 A u x)). Qed.
Lemma lem3544347 {A B : Type'} (u : A -> Prop) (x : A) (f : A -> B) (s : A -> Prop) (x' : A) : (term5279 A B u x f s x') = (term5280 A B u x f s x').
Proof. exact (MK_COMB (@lem3544346 A u x) (@lem3544345 A B x f s x')). Qed.
Lemma lem3544348 {A B : Type'} (u : A -> Prop) (x : A) (f : A -> B) (s : A -> Prop) : (term5281 A B u x f s) = (term5282 A B u x f s).
Proof. exact (fun_ext (fun x' : A => @lem3544347 A B u x f s x')). Qed.
Lemma lem3544349 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem3544350 {A B : Type'} (u : A -> Prop) (x : A) (f : A -> B) (s : A -> Prop) : (term5274 A B u x f s) = (term5283 A B u x f s).
Proof. exact (MK_COMB (@lem3544349 A) (@lem3544348 A B u x f s)). Qed.
Lemma lem3544351 {A B : Type'} (u : A -> Prop) (x : A) (f : A -> B) (s : A -> Prop) : ((term5273 A B u x f s) = (term5274 A B u x f s)) = ((term241 A B u x f s) = (term5283 A B u x f s)).
Proof. exact (MK_COMB (@lem3544344 A B u x f s) (@lem3544350 A B u x f s)). Qed.
Lemma lem3544352 {A B : Type'} (u : A -> Prop) (x : A) (f : A -> B) (s : A -> Prop) : (term241 A B u x f s) = (term5283 A B u x f s).
Proof. exact (EQ_MP (@lem3544351 A B u x f s) (@lem3544336 A B u x f s)). Qed.
Lemma lem3544353 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem3544354 {A B : Type'} (u : A -> Prop) (x : A) (f : A -> B) (s : A -> Prop) : (term5197 A B u x f s) = (term5284 A B u x f s).
Proof. exact (MK_COMB (@lem3544353) (@lem3544352 A B u x f s)). Qed.
Lemma lem3544355 {A : Type'} (s : A -> Prop) (x : A) : (term618 A s x) = (term618 A s x).
Proof. exact (eq_refl (term618 A s x)). Qed.
Lemma lem3544356 {A B : Type'} (u : A -> Prop) (f : A -> B) (s : A -> Prop) (x : A) : (term5198 A B u f s x) = (term5285 A B u f s x).
Proof. exact (MK_COMB (@lem3544354 A B u x f s) (@lem3544355 A s x)). Qed.
Lemma lem3544358 {A : Type'} (P : A -> Prop) (Q : Prop) : (term398 A P Q) = (term399 A P Q).
Proof. exact (EQ_MP (@lem18923 A P Q) (@lem18922 A P Q)). Qed.
Lemma lem3544359 {A : Type'} (P : A -> Prop) (Q : Prop) : (term398 A P Q) = (term399 A P Q).
Proof. exact (@lem3544358 A P Q). Qed.
Lemma lem3544360 {A B : Type'} (u : A -> Prop) (f : A -> B) (s : A -> Prop) (x : A) : (term5286 A B u f s x) = (term5287 A B u f s x).
Proof. exact (@lem3544359 A (term5282 A B u x f s) (term618 A s x)). Qed.
Lemma lem3544361 {A B : Type'} (u : A -> Prop) (x : A) (f : A -> B) (s : A -> Prop) (x' : A) : (term5288 A B u x f s x') = (term5280 A B u x f s x').
Proof. exact (eq_refl (term5288 A B u x f s x')). Qed.
Lemma lem3544362 {A B : Type'} (u : A -> Prop) (x : A) (f : A -> B) (s : A -> Prop) : (term5289 A B u x f s) = (term5282 A B u x f s).
Proof. exact (fun_ext (fun x' : A => @lem3544361 A B u x f s x')). Qed.
Lemma lem3544363 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem3544364 {A B : Type'} (u : A -> Prop) (x : A) (f : A -> B) (s : A -> Prop) : (term5290 A B u x f s) = (term5283 A B u x f s).
Proof. exact (MK_COMB (@lem3544363 A) (@lem3544362 A B u x f s)). Qed.
Lemma lem3544365 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem3544366 {A B : Type'} (u : A -> Prop) (x : A) (f : A -> B) (s : A -> Prop) : (term5291 A B u x f s) = (term5284 A B u x f s).
Proof. exact (MK_COMB (@lem3544365) (@lem3544364 A B u x f s)). Qed.
Lemma lem3544367 {A : Type'} (s : A -> Prop) (x : A) : (term618 A s x) = (term618 A s x).
Proof. exact (eq_refl (term618 A s x)). Qed.
Lemma lem3544368 {A B : Type'} (u : A -> Prop) (f : A -> B) (s : A -> Prop) (x : A) : (term5286 A B u f s x) = (term5285 A B u f s x).
Proof. exact (MK_COMB (@lem3544366 A B u x f s) (@lem3544367 A s x)). Qed.
Lemma lem3544369 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem3544370 {A B : Type'} (u : A -> Prop) (f : A -> B) (s : A -> Prop) (x : A) : (term5292 A B u f s x) = (term5293 A B u f s x).
Proof. exact (MK_COMB (@lem3544369) (@lem3544368 A B u f s x)). Qed.
Lemma lem3544371 {A B : Type'} (u : A -> Prop) (x : A) (f : A -> B) (s : A -> Prop) (x' : A) : (term5288 A B u x f s x') = (term5280 A B u x f s x').
Proof. exact (eq_refl (term5288 A B u x f s x')). Qed.
Lemma lem3544372 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem3544373 {A B : Type'} (u : A -> Prop) (x : A) (f : A -> B) (s : A -> Prop) (x' : A) : (term5294 A B u x f s x') = (term5295 A B u x f s x').
Proof. exact (MK_COMB (@lem3544372) (@lem3544371 A B u x f s x')). Qed.
Lemma lem3544374 {A : Type'} (s : A -> Prop) (x : A) : (term618 A s x) = (term618 A s x).
Proof. exact (eq_refl (term618 A s x)). Qed.
Lemma lem3544375 {A B : Type'} (u : A -> Prop) (f : A -> B) (x' : A) (s : A -> Prop) (x : A) : (term5296 A B u f x' s x) = (term5297 A B u f x' s x).
Proof. exact (MK_COMB (@lem3544373 A B u x f s x') (@lem3544374 A s x)). Qed.
Lemma lem3544376 {A B : Type'} (u : A -> Prop) (f : A -> B) (s : A -> Prop) (x : A) : (term5298 A B u f s x) = (term5299 A B u f s x).
Proof. exact (fun_ext (fun x' : A => @lem3544375 A B u f x' s x)). Qed.
Lemma lem3544377 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem3544378 {A B : Type'} (u : A -> Prop) (f : A -> B) (s : A -> Prop) (x : A) : (term5287 A B u f s x) = (term5300 A B u f s x).
Proof. exact (MK_COMB (@lem3544377 A) (@lem3544376 A B u f s x)). Qed.
Lemma lem3544379 {A B : Type'} (u : A -> Prop) (f : A -> B) (s : A -> Prop) (x : A) : ((term5286 A B u f s x) = (term5287 A B u f s x)) = ((term5285 A B u f s x) = (term5300 A B u f s x)).
Proof. exact (MK_COMB (@lem3544370 A B u f s x) (@lem3544378 A B u f s x)). Qed.
Lemma lem3544380 {A B : Type'} (u : A -> Prop) (f : A -> B) (s : A -> Prop) (x : A) : (term5285 A B u f s x) = (term5300 A B u f s x).
Proof. exact (EQ_MP (@lem3544379 A B u f s x) (@lem3544360 A B u f s x)). Qed.
Lemma lem3544381 {A B : Type'} (u : A -> Prop) (f : A -> B) (s : A -> Prop) (x : A) : (term5198 A B u f s x) = (term5300 A B u f s x).
Proof. exact (TRANS (@lem3544356 A B u f s x) (@lem3544380 A B u f s x)). Qed.
Lemma lem3544382 {A B : Type'} (u : A -> Prop) (f : A -> B) (s : A -> Prop) : (term5207 A B u f s) = (term5301 A B u f s).
Proof. exact (fun_ext (fun x : A => @lem3544381 A B u f s x)). Qed.
Lemma lem3544383 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem3544384 {A B : Type'} (u : A -> Prop) (f : A -> B) (s : A -> Prop) : (term5208 A B u f s) = (term5302 A B u f s).
Proof. exact (MK_COMB (@lem3544383 A) (@lem3544382 A B u f s)). Qed.
Lemma lem3544385 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem3544386 {A B : Type'} (u : A -> Prop) (f : A -> B) (s : A -> Prop) : (term5226 A B u f s) = (term5303 A B u f s).
Proof. exact (MK_COMB (@lem3544385) (@lem3544384 A B u f s)). Qed.
Lemma lem3544387 {A : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) : (term5224 A g s u) = (term5224 A g s u).
Proof. exact (eq_refl (term5224 A g s u)). Qed.
Lemma lem3544388 {A B : Type'} (f : A -> B) (g : type686 A) (s : A -> Prop) (u : A -> Prop) : (term5228 A B f g s u) = (term5304 A B f g s u).
Proof. exact (MK_COMB (@lem3544386 A B u f s) (@lem3544387 A g s u)). Qed.
Lemma lem3544390 {A : Type'} (P : A -> Prop) (Q : A -> Prop) : (term1525 A P Q) = (term1526 A P Q).
Proof. exact (EQ_MP (@lem18917 A P Q) (@lem18916 A P Q)). Qed.
Lemma lem3544391 {A : Type'} (P : A -> Prop) (Q : A -> Prop) : (term1525 A P Q) = (term1526 A P Q).
Proof. exact (@lem3544390 A P Q). Qed.
Lemma lem3544392 {A B : Type'} (f : A -> B) (g : type686 A) (s : A -> Prop) (u : A -> Prop) : (term5305 A B f g s u) = (term5306 A B f g s u).
Proof. exact (@lem3544391 A (term5301 A B u f s) (term5223 A g s u)). Qed.
Lemma lem3544393 {A B : Type'} (u : A -> Prop) (f : A -> B) (s : A -> Prop) (x : A) : (term5307 A B u f s x) = (term5300 A B u f s x).
Proof. exact (eq_refl (term5307 A B u f s x)). Qed.
Lemma lem3544394 {A B : Type'} (u : A -> Prop) (f : A -> B) (s : A -> Prop) : (term5308 A B u f s) = (term5301 A B u f s).
Proof. exact (fun_ext (fun x : A => @lem3544393 A B u f s x)). Qed.
Lemma lem3544395 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem3544396 {A B : Type'} (u : A -> Prop) (f : A -> B) (s : A -> Prop) : (term5309 A B u f s) = (term5302 A B u f s).
Proof. exact (MK_COMB (@lem3544395 A) (@lem3544394 A B u f s)). Qed.
Lemma lem3544397 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem3544398 {A B : Type'} (u : A -> Prop) (f : A -> B) (s : A -> Prop) : (term5310 A B u f s) = (term5303 A B u f s).
Proof. exact (MK_COMB (@lem3544397) (@lem3544396 A B u f s)). Qed.
Lemma lem3544399 {A : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) (x : A) : (term5311 A g s u x) = (term5216 A g s u x).
Proof. exact (eq_refl (term5311 A g s u x)). Qed.
Lemma lem3544400 {A : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) : (term5312 A g s u) = (term5223 A g s u).
Proof. exact (fun_ext (fun x : A => @lem3544399 A g s u x)). Qed.
Lemma lem3544401 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem3544402 {A : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) : (term5313 A g s u) = (term5224 A g s u).
Proof. exact (MK_COMB (@lem3544401 A) (@lem3544400 A g s u)). Qed.
Lemma lem3544403 {A B : Type'} (f : A -> B) (g : type686 A) (s : A -> Prop) (u : A -> Prop) : (term5305 A B f g s u) = (term5304 A B f g s u).
Proof. exact (MK_COMB (@lem3544398 A B u f s) (@lem3544402 A g s u)). Qed.
Lemma lem3544404 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem3544405 {A B : Type'} (f : A -> B) (g : type686 A) (s : A -> Prop) (u : A -> Prop) : (term5314 A B f g s u) = (term5315 A B f g s u).
Proof. exact (MK_COMB (@lem3544404) (@lem3544403 A B f g s u)). Qed.
Lemma lem3544406 {A B : Type'} (u : A -> Prop) (f : A -> B) (s : A -> Prop) (x : A) : (term5307 A B u f s x) = (term5300 A B u f s x).
Proof. exact (eq_refl (term5307 A B u f s x)). Qed.
Lemma lem3544407 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem3544408 {A B : Type'} (u : A -> Prop) (f : A -> B) (s : A -> Prop) (x : A) : (term5316 A B u f s x) = (term5317 A B u f s x).
Proof. exact (MK_COMB (@lem3544407) (@lem3544406 A B u f s x)). Qed.
Lemma lem3544409 {A : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) (x : A) : (term5311 A g s u x) = (term5216 A g s u x).
Proof. exact (eq_refl (term5311 A g s u x)). Qed.
Lemma lem3544410 {A B : Type'} (f : A -> B) (g : type686 A) (s : A -> Prop) (u : A -> Prop) (x : A) : (term5318 A B f g s u x) = (term5319 A B f g s u x).
Proof. exact (MK_COMB (@lem3544408 A B u f s x) (@lem3544409 A g s u x)). Qed.
Lemma lem3544411 {A B : Type'} (f : A -> B) (g : type686 A) (s : A -> Prop) (u : A -> Prop) : (term5320 A B f g s u) = (term5321 A B f g s u).
Proof. exact (fun_ext (fun x : A => @lem3544410 A B f g s u x)). Qed.
Lemma lem3544412 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem3544413 {A B : Type'} (f : A -> B) (g : type686 A) (s : A -> Prop) (u : A -> Prop) : (term5306 A B f g s u) = (term5322 A B f g s u).
Proof. exact (MK_COMB (@lem3544412 A) (@lem3544411 A B f g s u)). Qed.
Lemma lem3544414 {A B : Type'} (f : A -> B) (g : type686 A) (s : A -> Prop) (u : A -> Prop) : ((term5305 A B f g s u) = (term5306 A B f g s u)) = ((term5304 A B f g s u) = (term5322 A B f g s u)).
Proof. exact (MK_COMB (@lem3544405 A B f g s u) (@lem3544413 A B f g s u)). Qed.
Lemma lem3544415 {A B : Type'} (f : A -> B) (g : type686 A) (s : A -> Prop) (u : A -> Prop) : (term5304 A B f g s u) = (term5322 A B f g s u).
Proof. exact (EQ_MP (@lem3544414 A B f g s u) (@lem3544392 A B f g s u)). Qed.
Lemma lem3544417 {A : Type'} (P : A -> Prop) (Q : Prop) : (term550 A P Q) = (term551 A P Q).
Proof. exact (EQ_MP (@lem18905 A P Q) (@lem18904 A P Q)). Qed.
Lemma lem3544418 {A : Type'} (P : A -> Prop) (Q : Prop) : (term550 A P Q) = (term551 A P Q).
Proof. exact (@lem3544417 A P Q). Qed.
Lemma lem3544419 {A B : Type'} (f : A -> B) (g : type686 A) (s : A -> Prop) (u : A -> Prop) (x : A) : (term5323 A B f g s u x) = (term5324 A B f g s u x).
Proof. exact (@lem3544418 A (term5299 A B u f s x) (term5216 A g s u x)). Qed.
Lemma lem3544420 {A B : Type'} (u : A -> Prop) (f : A -> B) (x' : A) (s : A -> Prop) (x : A) : (term5325 A B u f s x x') = (term5297 A B u f x' s x).
Proof. exact (eq_refl (term5325 A B u f s x x')). Qed.
Lemma lem3544421 {A B : Type'} (u : A -> Prop) (f : A -> B) (s : A -> Prop) (x : A) : (term5326 A B u f s x) = (term5299 A B u f s x).
Proof. exact (fun_ext (fun x' : A => @lem3544420 A B u f x' s x)). Qed.
Lemma lem3544422 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem3544423 {A B : Type'} (u : A -> Prop) (f : A -> B) (s : A -> Prop) (x : A) : (term5327 A B u f s x) = (term5300 A B u f s x).
Proof. exact (MK_COMB (@lem3544422 A) (@lem3544421 A B u f s x)). Qed.
Lemma lem3544424 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem3544425 {A B : Type'} (u : A -> Prop) (f : A -> B) (s : A -> Prop) (x : A) : (term5328 A B u f s x) = (term5317 A B u f s x).
Proof. exact (MK_COMB (@lem3544424) (@lem3544423 A B u f s x)). Qed.
Lemma lem3544426 {A : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) (x : A) : (term5216 A g s u x) = (term5216 A g s u x).
Proof. exact (eq_refl (term5216 A g s u x)). Qed.
Lemma lem3544427 {A B : Type'} (f : A -> B) (g : type686 A) (s : A -> Prop) (u : A -> Prop) (x : A) : (term5323 A B f g s u x) = (term5319 A B f g s u x).
Proof. exact (MK_COMB (@lem3544425 A B u f s x) (@lem3544426 A g s u x)). Qed.
Lemma lem3544428 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem3544429 {A B : Type'} (f : A -> B) (g : type686 A) (s : A -> Prop) (u : A -> Prop) (x : A) : (term5329 A B f g s u x) = (term5330 A B f g s u x).
Proof. exact (MK_COMB (@lem3544428) (@lem3544427 A B f g s u x)). Qed.
Lemma lem3544430 {A B : Type'} (u : A -> Prop) (f : A -> B) (x' : A) (s : A -> Prop) (x : A) : (term5325 A B u f s x x') = (term5297 A B u f x' s x).
Proof. exact (eq_refl (term5325 A B u f s x x')). Qed.
Lemma lem3544431 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem3544432 {A B : Type'} (u : A -> Prop) (f : A -> B) (x' : A) (s : A -> Prop) (x : A) : (term5331 A B u f s x x') = (term5332 A B u f x' s x).
Proof. exact (MK_COMB (@lem3544431) (@lem3544430 A B u f x' s x)). Qed.
Lemma lem3544433 {A : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) (x : A) : (term5216 A g s u x) = (term5216 A g s u x).
Proof. exact (eq_refl (term5216 A g s u x)). Qed.
Lemma lem3544434 {A B : Type'} (f : A -> B) (x' : A) (g : type686 A) (s : A -> Prop) (u : A -> Prop) (x : A) : (term5333 A B f x' g s u x) = (term5334 A B f x' g s u x).
Proof. exact (MK_COMB (@lem3544432 A B u f x' s x) (@lem3544433 A g s u x)). Qed.
Lemma lem3544435 {A B : Type'} (f : A -> B) (g : type686 A) (s : A -> Prop) (u : A -> Prop) (x : A) : (term5335 A B f g s u x) = (term5336 A B f g s u x).
Proof. exact (fun_ext (fun x' : A => @lem3544434 A B f x' g s u x)). Qed.
Lemma lem3544436 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem3544437 {A B : Type'} (f : A -> B) (g : type686 A) (s : A -> Prop) (u : A -> Prop) (x : A) : (term5324 A B f g s u x) = (term5337 A B f g s u x).
Proof. exact (MK_COMB (@lem3544436 A) (@lem3544435 A B f g s u x)). Qed.
Lemma lem3544438 {A B : Type'} (f : A -> B) (g : type686 A) (s : A -> Prop) (u : A -> Prop) (x : A) : ((term5323 A B f g s u x) = (term5324 A B f g s u x)) = ((term5319 A B f g s u x) = (term5337 A B f g s u x)).
Proof. exact (MK_COMB (@lem3544429 A B f g s u x) (@lem3544437 A B f g s u x)). Qed.
Lemma lem3544439 {A B : Type'} (f : A -> B) (g : type686 A) (s : A -> Prop) (u : A -> Prop) (x : A) : (term5319 A B f g s u x) = (term5337 A B f g s u x).
Proof. exact (EQ_MP (@lem3544438 A B f g s u x) (@lem3544419 A B f g s u x)). Qed.
Lemma lem3544440 {A B : Type'} (f : A -> B) (g : type686 A) (s : A -> Prop) (u : A -> Prop) : (term5321 A B f g s u) = (term5338 A B f g s u).
Proof. exact (fun_ext (fun x : A => @lem3544439 A B f g s u x)). Qed.
Lemma lem3544441 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem3544442 {A B : Type'} (f : A -> B) (g : type686 A) (s : A -> Prop) (u : A -> Prop) : (term5322 A B f g s u) = (term5339 A B f g s u).
Proof. exact (MK_COMB (@lem3544441 A) (@lem3544440 A B f g s u)). Qed.
Lemma lem3544443 {A B : Type'} (f : A -> B) (g : type686 A) (s : A -> Prop) (u : A -> Prop) : (term5304 A B f g s u) = (term5339 A B f g s u).
Proof. exact (TRANS (@lem3544415 A B f g s u) (@lem3544442 A B f g s u)). Qed.
Lemma lem3544444 {A B : Type'} (f : A -> B) (g : type686 A) (s : A -> Prop) (u : A -> Prop) : (term5228 A B f g s u) = (term5339 A B f g s u).
Proof. exact (TRANS (@lem3544388 A B f g s u) (@lem3544443 A B f g s u)). Qed.
Lemma lem3544445 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem3544446 {A B : Type'} (f : A -> B) (g : type686 A) (s : A -> Prop) (u : A -> Prop) : (term5270 A B f g s u) = (term5340 A B f g s u).
Proof. exact (MK_COMB (@lem3544445) (@lem3544444 A B f g s u)). Qed.
Lemma lem3544448 {A : Type'} (P : Prop) (Q : A -> Prop) : (term415 A P Q) = (term416 A P Q).
Proof. exact (EQ_MP (@lem18929 A P Q) (@lem18928 A P Q)). Qed.
Lemma lem3544449 {A : Type'} (P : Prop) (Q : A -> Prop) : (term415 A P Q) = (term416 A P Q).
Proof. exact (@lem3544448 A P Q). Qed.
Lemma lem3544450 {A B : Type'} (u : A -> Prop) (x : A) (f : A -> B) (g : type686 A) (s : A -> Prop) : (term5341 A B u x f g s) = (term5342 A B u x f g s).
Proof. exact (@lem3544449 A (u x) (term5231 A B x f g s)). Qed.
Lemma lem3544451 {A B : Type'} (x : A) (f : A -> B) (g : type686 A) (s : A -> Prop) (x' : A) : (term5343 A B x f g s x') = (term5230 A B x f g s x').
Proof. exact (eq_refl (term5343 A B x f g s x')). Qed.
Lemma lem3544452 {A B : Type'} (x : A) (f : A -> B) (g : type686 A) (s : A -> Prop) : (term5344 A B x f g s) = (term5231 A B x f g s).
Proof. exact (fun_ext (fun x' : A => @lem3544451 A B x f g s x')). Qed.
Lemma lem3544453 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem3544454 {A B : Type'} (x : A) (f : A -> B) (g : type686 A) (s : A -> Prop) : (term5345 A B x f g s) = (term5232 A B x f g s).
Proof. exact (MK_COMB (@lem3544453 A) (@lem3544452 A B x f g s)). Qed.
Lemma lem3544455 {A : Type'} (u : A -> Prop) (x : A) : (term234 A u x) = (term234 A u x).
Proof. exact (eq_refl (term234 A u x)). Qed.
Lemma lem3544456 {A B : Type'} (u : A -> Prop) (x : A) (f : A -> B) (g : type686 A) (s : A -> Prop) : (term5341 A B u x f g s) = (term5233 A B u x f g s).
Proof. exact (MK_COMB (@lem3544455 A u x) (@lem3544454 A B x f g s)). Qed.
Lemma lem3544457 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem3544458 {A B : Type'} (u : A -> Prop) (x : A) (f : A -> B) (g : type686 A) (s : A -> Prop) : (term5346 A B u x f g s) = (term5347 A B u x f g s).
Proof. exact (MK_COMB (@lem3544457) (@lem3544456 A B u x f g s)). Qed.
Lemma lem3544459 {A B : Type'} (x : A) (f : A -> B) (g : type686 A) (s : A -> Prop) (x' : A) : (term5343 A B x f g s x') = (term5230 A B x f g s x').
Proof. exact (eq_refl (term5343 A B x f g s x')). Qed.
Lemma lem3544460 {A : Type'} (u : A -> Prop) (x : A) : (term234 A u x) = (term234 A u x).
Proof. exact (eq_refl (term234 A u x)). Qed.
Lemma lem3544461 {A B : Type'} (u : A -> Prop) (x : A) (f : A -> B) (g : type686 A) (s : A -> Prop) (x' : A) : (term5348 A B u x f g s x') = (term5349 A B u x f g s x').
Proof. exact (MK_COMB (@lem3544460 A u x) (@lem3544459 A B x f g s x')). Qed.
Lemma lem3544462 {A B : Type'} (u : A -> Prop) (x : A) (f : A -> B) (g : type686 A) (s : A -> Prop) : (term5350 A B u x f g s) = (term5351 A B u x f g s).
Proof. exact (fun_ext (fun x' : A => @lem3544461 A B u x f g s x')). Qed.
Lemma lem3544463 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem3544464 {A B : Type'} (u : A -> Prop) (x : A) (f : A -> B) (g : type686 A) (s : A -> Prop) : (term5342 A B u x f g s) = (term5352 A B u x f g s).
Proof. exact (MK_COMB (@lem3544463 A) (@lem3544462 A B u x f g s)). Qed.
Lemma lem3544465 {A B : Type'} (u : A -> Prop) (x : A) (f : A -> B) (g : type686 A) (s : A -> Prop) : ((term5341 A B u x f g s) = (term5342 A B u x f g s)) = ((term5233 A B u x f g s) = (term5352 A B u x f g s)).
Proof. exact (MK_COMB (@lem3544458 A B u x f g s) (@lem3544464 A B u x f g s)). Qed.
Lemma lem3544466 {A B : Type'} (u : A -> Prop) (x : A) (f : A -> B) (g : type686 A) (s : A -> Prop) : (term5233 A B u x f g s) = (term5352 A B u x f g s).
Proof. exact (EQ_MP (@lem3544465 A B u x f g s) (@lem3544450 A B u x f g s)). Qed.
Lemma lem3544467 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem3544468 {A B : Type'} (u : A -> Prop) (x : A) (f : A -> B) (g : type686 A) (s : A -> Prop) : (term5244 A B u x f g s) = (term5353 A B u x f g s).
Proof. exact (MK_COMB (@lem3544467) (@lem3544466 A B u x f g s)). Qed.
Lemma lem3544469 {A : Type'} (g : type686 A) (s : A -> Prop) (x : A) : (term5242 A g s x) = (term5242 A g s x).
Proof. exact (eq_refl (term5242 A g s x)). Qed.
Lemma lem3544470 {A B : Type'} (u : A -> Prop) (f : A -> B) (g : type686 A) (s : A -> Prop) (x : A) : (term5246 A B u f g s x) = (term5354 A B u f g s x).
Proof. exact (MK_COMB (@lem3544468 A B u x f g s) (@lem3544469 A g s x)). Qed.
Lemma lem3544472 {A : Type'} (P : A -> Prop) (Q : Prop) : (term398 A P Q) = (term399 A P Q).
Proof. exact (EQ_MP (@lem18923 A P Q) (@lem18922 A P Q)). Qed.
Lemma lem3544473 {A : Type'} (P : A -> Prop) (Q : Prop) : (term398 A P Q) = (term399 A P Q).
Proof. exact (@lem3544472 A P Q). Qed.
Lemma lem3544474 {A B : Type'} (u : A -> Prop) (f : A -> B) (g : type686 A) (s : A -> Prop) (x : A) : (term5355 A B u f g s x) = (term5356 A B u f g s x).
Proof. exact (@lem3544473 A (term5351 A B u x f g s) (term5242 A g s x)). Qed.
Lemma lem3544475 {A B : Type'} (u : A -> Prop) (x : A) (f : A -> B) (g : type686 A) (s : A -> Prop) (x' : A) : (term5357 A B u x f g s x') = (term5349 A B u x f g s x').
Proof. exact (eq_refl (term5357 A B u x f g s x')). Qed.
Lemma lem3544476 {A B : Type'} (u : A -> Prop) (x : A) (f : A -> B) (g : type686 A) (s : A -> Prop) : (term5358 A B u x f g s) = (term5351 A B u x f g s).
Proof. exact (fun_ext (fun x' : A => @lem3544475 A B u x f g s x')). Qed.
Lemma lem3544477 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem3544478 {A B : Type'} (u : A -> Prop) (x : A) (f : A -> B) (g : type686 A) (s : A -> Prop) : (term5359 A B u x f g s) = (term5352 A B u x f g s).
Proof. exact (MK_COMB (@lem3544477 A) (@lem3544476 A B u x f g s)). Qed.
Lemma lem3544479 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem3544480 {A B : Type'} (u : A -> Prop) (x : A) (f : A -> B) (g : type686 A) (s : A -> Prop) : (term5360 A B u x f g s) = (term5353 A B u x f g s).
Proof. exact (MK_COMB (@lem3544479) (@lem3544478 A B u x f g s)). Qed.
Lemma lem3544481 {A : Type'} (g : type686 A) (s : A -> Prop) (x : A) : (term5242 A g s x) = (term5242 A g s x).
Proof. exact (eq_refl (term5242 A g s x)). Qed.
Lemma lem3544482 {A B : Type'} (u : A -> Prop) (f : A -> B) (g : type686 A) (s : A -> Prop) (x : A) : (term5355 A B u f g s x) = (term5354 A B u f g s x).
Proof. exact (MK_COMB (@lem3544480 A B u x f g s) (@lem3544481 A g s x)). Qed.
Lemma lem3544483 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem3544484 {A B : Type'} (u : A -> Prop) (f : A -> B) (g : type686 A) (s : A -> Prop) (x : A) : (term5361 A B u f g s x) = (term5362 A B u f g s x).
Proof. exact (MK_COMB (@lem3544483) (@lem3544482 A B u f g s x)). Qed.
Lemma lem3544485 {A B : Type'} (u : A -> Prop) (x : A) (f : A -> B) (g : type686 A) (s : A -> Prop) (x' : A) : (term5357 A B u x f g s x') = (term5349 A B u x f g s x').
Proof. exact (eq_refl (term5357 A B u x f g s x')). Qed.
Lemma lem3544486 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem3544487 {A B : Type'} (u : A -> Prop) (x : A) (f : A -> B) (g : type686 A) (s : A -> Prop) (x' : A) : (term5363 A B u x f g s x') = (term5364 A B u x f g s x').
Proof. exact (MK_COMB (@lem3544486) (@lem3544485 A B u x f g s x')). Qed.
Lemma lem3544488 {A : Type'} (g : type686 A) (s : A -> Prop) (x : A) : (term5242 A g s x) = (term5242 A g s x).
Proof. exact (eq_refl (term5242 A g s x)). Qed.
Lemma lem3544489 {A B : Type'} (u : A -> Prop) (f : A -> B) (x' : A) (g : type686 A) (s : A -> Prop) (x : A) : (term5365 A B u f x' g s x) = (term5366 A B u f x' g s x).
Proof. exact (MK_COMB (@lem3544487 A B u x f g s x') (@lem3544488 A g s x)). Qed.
Lemma lem3544490 {A B : Type'} (u : A -> Prop) (f : A -> B) (g : type686 A) (s : A -> Prop) (x : A) : (term5367 A B u f g s x) = (term5368 A B u f g s x).
Proof. exact (fun_ext (fun x' : A => @lem3544489 A B u f x' g s x)). Qed.
Lemma lem3544491 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem3544492 {A B : Type'} (u : A -> Prop) (f : A -> B) (g : type686 A) (s : A -> Prop) (x : A) : (term5356 A B u f g s x) = (term5369 A B u f g s x).
Proof. exact (MK_COMB (@lem3544491 A) (@lem3544490 A B u f g s x)). Qed.
Lemma lem3544493 {A B : Type'} (u : A -> Prop) (f : A -> B) (g : type686 A) (s : A -> Prop) (x : A) : ((term5355 A B u f g s x) = (term5356 A B u f g s x)) = ((term5354 A B u f g s x) = (term5369 A B u f g s x)).
Proof. exact (MK_COMB (@lem3544484 A B u f g s x) (@lem3544492 A B u f g s x)). Qed.
Lemma lem3544494 {A B : Type'} (u : A -> Prop) (f : A -> B) (g : type686 A) (s : A -> Prop) (x : A) : (term5354 A B u f g s x) = (term5369 A B u f g s x).
Proof. exact (EQ_MP (@lem3544493 A B u f g s x) (@lem3544474 A B u f g s x)). Qed.
Lemma lem3544496 {A : Type'} (P : Prop) (Q : A -> Prop) : (term415 A P Q) = (term416 A P Q).
Proof. exact (EQ_MP (@lem18929 A P Q) (@lem18928 A P Q)). Qed.
Lemma lem3544497 {A : Type'} (P : Prop) (Q : type686 A) : (term417 A P Q) = (term418 A P Q).
Proof. exact (@lem3544496 (A -> Prop) P Q). Qed.
Lemma lem3544498 {A B : Type'} (u : A -> Prop) (f : A -> B) (x' : A) (g : type686 A) (s : A -> Prop) (x : A) : (term5370 A B u f x' g s x) = (term5371 A B u f x' g s x).
Proof. exact (@lem3544497 A (term5349 A B u x f g s x') (term5241 A g s x)). Qed.
Lemma lem3544499 {A : Type'} (g : type686 A) (s : A -> Prop) (t : A -> Prop) (x : A) : (term5372 A g s x t) = (term5235 A g s t x).
Proof. exact (eq_refl (term5372 A g s x t)). Qed.
Lemma lem3544500 {A : Type'} (g : type686 A) (s : A -> Prop) (x : A) : (term5373 A g s x) = (term5241 A g s x).
Proof. exact (fun_ext (fun t : A -> Prop => @lem3544499 A g s t x)). Qed.
Lemma lem3544501 {A : Type'} : (@ex (A -> Prop)) = (@ex (A -> Prop)).
Proof. exact (eq_refl (@ex (A -> Prop))). Qed.
Lemma lem3544502 {A : Type'} (g : type686 A) (s : A -> Prop) (x : A) : (term5374 A g s x) = (term5242 A g s x).
Proof. exact (MK_COMB (@lem3544501 A) (@lem3544500 A g s x)). Qed.
Lemma lem3544503 {A B : Type'} (u : A -> Prop) (x : A) (f : A -> B) (g : type686 A) (s : A -> Prop) (x' : A) : (term5364 A B u x f g s x') = (term5364 A B u x f g s x').
Proof. exact (eq_refl (term5364 A B u x f g s x')). Qed.
Lemma lem3544504 {A B : Type'} (u : A -> Prop) (f : A -> B) (x' : A) (g : type686 A) (s : A -> Prop) (x : A) : (term5370 A B u f x' g s x) = (term5366 A B u f x' g s x).
Proof. exact (MK_COMB (@lem3544503 A B u x f g s x') (@lem3544502 A g s x)). Qed.
Lemma lem3544505 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem3544506 {A B : Type'} (u : A -> Prop) (f : A -> B) (x' : A) (g : type686 A) (s : A -> Prop) (x : A) : (term5375 A B u f x' g s x) = (term5376 A B u f x' g s x).
Proof. exact (MK_COMB (@lem3544505) (@lem3544504 A B u f x' g s x)). Qed.
Lemma lem3544507 {A : Type'} (g : type686 A) (s : A -> Prop) (t : A -> Prop) (x : A) : (term5372 A g s x t) = (term5235 A g s t x).
Proof. exact (eq_refl (term5372 A g s x t)). Qed.
Lemma lem3544508 {A B : Type'} (u : A -> Prop) (x : A) (f : A -> B) (g : type686 A) (s : A -> Prop) (x' : A) : (term5364 A B u x f g s x') = (term5364 A B u x f g s x').
Proof. exact (eq_refl (term5364 A B u x f g s x')). Qed.
Lemma lem3544509 {A B : Type'} (u : A -> Prop) (f : A -> B) (x' : A) (g : type686 A) (s : A -> Prop) (t : A -> Prop) (x : A) : (term5377 A B u f x' g s x t) = (term5378 A B u f x' g s t x).
Proof. exact (MK_COMB (@lem3544508 A B u x f g s x') (@lem3544507 A g s t x)). Qed.
Lemma lem3544510 {A B : Type'} (u : A -> Prop) (f : A -> B) (x' : A) (g : type686 A) (s : A -> Prop) (x : A) : (term5379 A B u f x' g s x) = (term5380 A B u f x' g s x).
Proof. exact (fun_ext (fun t : A -> Prop => @lem3544509 A B u f x' g s t x)). Qed.
Lemma lem3544511 {A : Type'} : (@ex (A -> Prop)) = (@ex (A -> Prop)).
Proof. exact (eq_refl (@ex (A -> Prop))). Qed.
Lemma lem3544512 {A B : Type'} (u : A -> Prop) (f : A -> B) (x' : A) (g : type686 A) (s : A -> Prop) (x : A) : (term5371 A B u f x' g s x) = (term5381 A B u f x' g s x).
Proof. exact (MK_COMB (@lem3544511 A) (@lem3544510 A B u f x' g s x)). Qed.
Lemma lem3544513 {A B : Type'} (u : A -> Prop) (f : A -> B) (x' : A) (g : type686 A) (s : A -> Prop) (x : A) : ((term5370 A B u f x' g s x) = (term5371 A B u f x' g s x)) = ((term5366 A B u f x' g s x) = (term5381 A B u f x' g s x)).
Proof. exact (MK_COMB (@lem3544506 A B u f x' g s x) (@lem3544512 A B u f x' g s x)). Qed.
Lemma lem3544514 {A B : Type'} (u : A -> Prop) (f : A -> B) (x' : A) (g : type686 A) (s : A -> Prop) (x : A) : (term5366 A B u f x' g s x) = (term5381 A B u f x' g s x).
Proof. exact (EQ_MP (@lem3544513 A B u f x' g s x) (@lem3544498 A B u f x' g s x)). Qed.
Lemma lem3544515 {A B : Type'} (u : A -> Prop) (f : A -> B) (g : type686 A) (s : A -> Prop) (x : A) : (term5368 A B u f g s x) = (term5382 A B u f g s x).
Proof. exact (fun_ext (fun x' : A => @lem3544514 A B u f x' g s x)). Qed.
Lemma lem3544516 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem3544517 {A B : Type'} (u : A -> Prop) (f : A -> B) (g : type686 A) (s : A -> Prop) (x : A) : (term5369 A B u f g s x) = (term5383 A B u f g s x).
Proof. exact (MK_COMB (@lem3544516 A) (@lem3544515 A B u f g s x)). Qed.
Lemma lem3544518 {A B : Type'} (u : A -> Prop) (f : A -> B) (g : type686 A) (s : A -> Prop) (x : A) : (term5354 A B u f g s x) = (term5383 A B u f g s x).
Proof. exact (TRANS (@lem3544494 A B u f g s x) (@lem3544517 A B u f g s x)). Qed.
Lemma lem3544519 {A B : Type'} (u : A -> Prop) (f : A -> B) (g : type686 A) (s : A -> Prop) (x : A) : (term5246 A B u f g s x) = (term5383 A B u f g s x).
Proof. exact (TRANS (@lem3544470 A B u f g s x) (@lem3544518 A B u f g s x)). Qed.
Lemma lem3544520 {A B : Type'} (u : A -> Prop) (f : A -> B) (g : type686 A) (s : A -> Prop) : (term5253 A B u f g s) = (term5384 A B u f g s).
Proof. exact (fun_ext (fun x : A => @lem3544519 A B u f g s x)). Qed.
Lemma lem3544521 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem3544522 {A B : Type'} (u : A -> Prop) (f : A -> B) (g : type686 A) (s : A -> Prop) : (term5254 A B u f g s) = (term5385 A B u f g s).
Proof. exact (MK_COMB (@lem3544521 A) (@lem3544520 A B u f g s)). Qed.
Lemma lem3544523 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem3544524 {A B : Type'} (u : A -> Prop) (f : A -> B) (g : type686 A) (s : A -> Prop) : (term5265 A B u f g s) = (term5386 A B u f g s).
Proof. exact (MK_COMB (@lem3544523) (@lem3544522 A B u f g s)). Qed.
Lemma lem3544525 {A : Type'} (s : A -> Prop) (u : A -> Prop) : (term5263 A s u) = (term5263 A s u).
Proof. exact (eq_refl (term5263 A s u)). Qed.
Lemma lem3544526 {A B : Type'} (f : A -> B) (g : type686 A) (s : A -> Prop) (u : A -> Prop) : (term5267 A B f g s u) = (term5387 A B f g s u).
Proof. exact (MK_COMB (@lem3544524 A B u f g s) (@lem3544525 A s u)). Qed.
Lemma lem3544528 {A : Type'} (P : A -> Prop) (Q : A -> Prop) : (term1525 A P Q) = (term1526 A P Q).
Proof. exact (EQ_MP (@lem18917 A P Q) (@lem18916 A P Q)). Qed.
Lemma lem3544529 {A : Type'} (P : A -> Prop) (Q : A -> Prop) : (term1525 A P Q) = (term1526 A P Q).
Proof. exact (@lem3544528 A P Q). Qed.
Lemma lem3544530 {A B : Type'} (f : A -> B) (g : type686 A) (s : A -> Prop) (u : A -> Prop) : (term5388 A B f g s u) = (term5389 A B f g s u).
Proof. exact (@lem3544529 A (term5384 A B u f g s) (term5262 A s u)). Qed.
Lemma lem3544531 {A B : Type'} (u : A -> Prop) (f : A -> B) (g : type686 A) (s : A -> Prop) (x : A) : (term5390 A B u f g s x) = (term5383 A B u f g s x).
Proof. exact (eq_refl (term5390 A B u f g s x)). Qed.
Lemma lem3544532 {A B : Type'} (u : A -> Prop) (f : A -> B) (g : type686 A) (s : A -> Prop) : (term5391 A B u f g s) = (term5384 A B u f g s).
Proof. exact (fun_ext (fun x : A => @lem3544531 A B u f g s x)). Qed.
Lemma lem3544533 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem3544534 {A B : Type'} (u : A -> Prop) (f : A -> B) (g : type686 A) (s : A -> Prop) : (term5392 A B u f g s) = (term5385 A B u f g s).
Proof. exact (MK_COMB (@lem3544533 A) (@lem3544532 A B u f g s)). Qed.
Lemma lem3544535 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem3544536 {A B : Type'} (u : A -> Prop) (f : A -> B) (g : type686 A) (s : A -> Prop) : (term5393 A B u f g s) = (term5386 A B u f g s).
Proof. exact (MK_COMB (@lem3544535) (@lem3544534 A B u f g s)). Qed.
Lemma lem3544537 {A : Type'} (s : A -> Prop) (u : A -> Prop) (x : A) : (term5394 A s u x) = (term5256 A s u x).
Proof. exact (eq_refl (term5394 A s u x)). Qed.
Lemma lem3544538 {A : Type'} (s : A -> Prop) (u : A -> Prop) : (term5395 A s u) = (term5262 A s u).
Proof. exact (fun_ext (fun x : A => @lem3544537 A s u x)). Qed.
Lemma lem3544539 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem3544540 {A : Type'} (s : A -> Prop) (u : A -> Prop) : (term5396 A s u) = (term5263 A s u).
Proof. exact (MK_COMB (@lem3544539 A) (@lem3544538 A s u)). Qed.
Lemma lem3544541 {A B : Type'} (f : A -> B) (g : type686 A) (s : A -> Prop) (u : A -> Prop) : (term5388 A B f g s u) = (term5387 A B f g s u).
Proof. exact (MK_COMB (@lem3544536 A B u f g s) (@lem3544540 A s u)). Qed.
Lemma lem3544542 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem3544543 {A B : Type'} (f : A -> B) (g : type686 A) (s : A -> Prop) (u : A -> Prop) : (term5397 A B f g s u) = (term5398 A B f g s u).
Proof. exact (MK_COMB (@lem3544542) (@lem3544541 A B f g s u)). Qed.
Lemma lem3544544 {A B : Type'} (u : A -> Prop) (f : A -> B) (g : type686 A) (s : A -> Prop) (x : A) : (term5390 A B u f g s x) = (term5383 A B u f g s x).
Proof. exact (eq_refl (term5390 A B u f g s x)). Qed.
Lemma lem3544545 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem3544546 {A B : Type'} (u : A -> Prop) (f : A -> B) (g : type686 A) (s : A -> Prop) (x : A) : (term5399 A B u f g s x) = (term5400 A B u f g s x).
Proof. exact (MK_COMB (@lem3544545) (@lem3544544 A B u f g s x)). Qed.
Lemma lem3544547 {A : Type'} (s : A -> Prop) (u : A -> Prop) (x : A) : (term5394 A s u x) = (term5256 A s u x).
Proof. exact (eq_refl (term5394 A s u x)). Qed.
Lemma lem3544548 {A B : Type'} (f : A -> B) (g : type686 A) (s : A -> Prop) (u : A -> Prop) (x : A) : (term5401 A B f g s u x) = (term5402 A B f g s u x).
Proof. exact (MK_COMB (@lem3544546 A B u f g s x) (@lem3544547 A s u x)). Qed.
Lemma lem3544549 {A B : Type'} (f : A -> B) (g : type686 A) (s : A -> Prop) (u : A -> Prop) : (term5403 A B f g s u) = (term5404 A B f g s u).
Proof. exact (fun_ext (fun x : A => @lem3544548 A B f g s u x)). Qed.
Lemma lem3544550 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem3544551 {A B : Type'} (f : A -> B) (g : type686 A) (s : A -> Prop) (u : A -> Prop) : (term5389 A B f g s u) = (term5405 A B f g s u).
Proof. exact (MK_COMB (@lem3544550 A) (@lem3544549 A B f g s u)). Qed.
Lemma lem3544552 {A B : Type'} (f : A -> B) (g : type686 A) (s : A -> Prop) (u : A -> Prop) : ((term5388 A B f g s u) = (term5389 A B f g s u)) = ((term5387 A B f g s u) = (term5405 A B f g s u)).
Proof. exact (MK_COMB (@lem3544543 A B f g s u) (@lem3544551 A B f g s u)). Qed.
Lemma lem3544553 {A B : Type'} (f : A -> B) (g : type686 A) (s : A -> Prop) (u : A -> Prop) : (term5387 A B f g s u) = (term5405 A B f g s u).
Proof. exact (EQ_MP (@lem3544552 A B f g s u) (@lem3544530 A B f g s u)). Qed.
Lemma lem3544555 {A : Type'} (P : A -> Prop) (Q : Prop) : (term550 A P Q) = (term551 A P Q).
Proof. exact (EQ_MP (@lem18905 A P Q) (@lem18904 A P Q)). Qed.
Lemma lem3544556 {A : Type'} (P : A -> Prop) (Q : Prop) : (term550 A P Q) = (term551 A P Q).
Proof. exact (@lem3544555 A P Q). Qed.
Lemma lem3544557 {A B : Type'} (f : A -> B) (g : type686 A) (s : A -> Prop) (u : A -> Prop) (x : A) : (term5406 A B f g s u x) = (term5407 A B f g s u x).
Proof. exact (@lem3544556 A (term5382 A B u f g s x) (term5256 A s u x)). Qed.
Lemma lem3544558 {A B : Type'} (u : A -> Prop) (f : A -> B) (x' : A) (g : type686 A) (s : A -> Prop) (x : A) : (term5408 A B u f g s x x') = (term5381 A B u f x' g s x).
Proof. exact (eq_refl (term5408 A B u f g s x x')). Qed.
Lemma lem3544559 {A B : Type'} (u : A -> Prop) (f : A -> B) (g : type686 A) (s : A -> Prop) (x : A) : (term5409 A B u f g s x) = (term5382 A B u f g s x).
Proof. exact (fun_ext (fun x' : A => @lem3544558 A B u f x' g s x)). Qed.
Lemma lem3544560 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem3544561 {A B : Type'} (u : A -> Prop) (f : A -> B) (g : type686 A) (s : A -> Prop) (x : A) : (term5410 A B u f g s x) = (term5383 A B u f g s x).
Proof. exact (MK_COMB (@lem3544560 A) (@lem3544559 A B u f g s x)). Qed.
Lemma lem3544562 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem3544563 {A B : Type'} (u : A -> Prop) (f : A -> B) (g : type686 A) (s : A -> Prop) (x : A) : (term5411 A B u f g s x) = (term5400 A B u f g s x).
Proof. exact (MK_COMB (@lem3544562) (@lem3544561 A B u f g s x)). Qed.
Lemma lem3544564 {A : Type'} (s : A -> Prop) (u : A -> Prop) (x : A) : (term5256 A s u x) = (term5256 A s u x).
Proof. exact (eq_refl (term5256 A s u x)). Qed.
Lemma lem3544565 {A B : Type'} (f : A -> B) (g : type686 A) (s : A -> Prop) (u : A -> Prop) (x : A) : (term5406 A B f g s u x) = (term5402 A B f g s u x).
Proof. exact (MK_COMB (@lem3544563 A B u f g s x) (@lem3544564 A s u x)). Qed.
Lemma lem3544566 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem3544567 {A B : Type'} (f : A -> B) (g : type686 A) (s : A -> Prop) (u : A -> Prop) (x : A) : (term5412 A B f g s u x) = (term5413 A B f g s u x).
Proof. exact (MK_COMB (@lem3544566) (@lem3544565 A B f g s u x)). Qed.
Lemma lem3544568 {A B : Type'} (u : A -> Prop) (f : A -> B) (x' : A) (g : type686 A) (s : A -> Prop) (x : A) : (term5408 A B u f g s x x') = (term5381 A B u f x' g s x).
Proof. exact (eq_refl (term5408 A B u f g s x x')). Qed.
Lemma lem3544569 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem3544570 {A B : Type'} (u : A -> Prop) (f : A -> B) (x' : A) (g : type686 A) (s : A -> Prop) (x : A) : (term5414 A B u f g s x x') = (term5415 A B u f x' g s x).
Proof. exact (MK_COMB (@lem3544569) (@lem3544568 A B u f x' g s x)). Qed.
Lemma lem3544571 {A : Type'} (s : A -> Prop) (u : A -> Prop) (x : A) : (term5256 A s u x) = (term5256 A s u x).
Proof. exact (eq_refl (term5256 A s u x)). Qed.
Lemma lem3544572 {A B : Type'} (f : A -> B) (x' : A) (g : type686 A) (s : A -> Prop) (u : A -> Prop) (x : A) : (term5416 A B f g x' s u x) = (term5417 A B f x' g s u x).
Proof. exact (MK_COMB (@lem3544570 A B u f x' g s x) (@lem3544571 A s u x)). Qed.
Lemma lem3544573 {A B : Type'} (f : A -> B) (g : type686 A) (s : A -> Prop) (u : A -> Prop) (x : A) : (term5418 A B f g s u x) = (term5419 A B f g s u x).
Proof. exact (fun_ext (fun x' : A => @lem3544572 A B f x' g s u x)). Qed.
Lemma lem3544574 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem3544575 {A B : Type'} (f : A -> B) (g : type686 A) (s : A -> Prop) (u : A -> Prop) (x : A) : (term5407 A B f g s u x) = (term5420 A B f g s u x).
Proof. exact (MK_COMB (@lem3544574 A) (@lem3544573 A B f g s u x)). Qed.
Lemma lem3544576 {A B : Type'} (f : A -> B) (g : type686 A) (s : A -> Prop) (u : A -> Prop) (x : A) : ((term5406 A B f g s u x) = (term5407 A B f g s u x)) = ((term5402 A B f g s u x) = (term5420 A B f g s u x)).
Proof. exact (MK_COMB (@lem3544567 A B f g s u x) (@lem3544575 A B f g s u x)). Qed.
Lemma lem3544577 {A B : Type'} (f : A -> B) (g : type686 A) (s : A -> Prop) (u : A -> Prop) (x : A) : (term5402 A B f g s u x) = (term5420 A B f g s u x).
Proof. exact (EQ_MP (@lem3544576 A B f g s u x) (@lem3544557 A B f g s u x)). Qed.
Lemma lem3544579 {A : Type'} (P : A -> Prop) (Q : Prop) : (term550 A P Q) = (term551 A P Q).
Proof. exact (EQ_MP (@lem18905 A P Q) (@lem18904 A P Q)). Qed.
Lemma lem3544580 {A : Type'} (P : type686 A) (Q : Prop) : (term567 A P Q) = (term568 A P Q).
Proof. exact (@lem3544579 (A -> Prop) P Q). Qed.
Lemma lem3544581 {A B : Type'} (f : A -> B) (x' : A) (g : type686 A) (s : A -> Prop) (u : A -> Prop) (x : A) : (term5421 A B f x' g s u x) = (term5422 A B f x' g s u x).
Proof. exact (@lem3544580 A (term5380 A B u f x' g s x) (term5256 A s u x)). Qed.
Lemma lem3544582 {A B : Type'} (u : A -> Prop) (f : A -> B) (x' : A) (g : type686 A) (s : A -> Prop) (t : A -> Prop) (x : A) : (term5423 A B u f x' g s x t) = (term5378 A B u f x' g s t x).
Proof. exact (eq_refl (term5423 A B u f x' g s x t)). Qed.
Lemma lem3544583 {A B : Type'} (u : A -> Prop) (f : A -> B) (x' : A) (g : type686 A) (s : A -> Prop) (x : A) : (term5424 A B u f x' g s x) = (term5380 A B u f x' g s x).
Proof. exact (fun_ext (fun t : A -> Prop => @lem3544582 A B u f x' g s t x)). Qed.
Lemma lem3544584 {A : Type'} : (@ex (A -> Prop)) = (@ex (A -> Prop)).
Proof. exact (eq_refl (@ex (A -> Prop))). Qed.
Lemma lem3544585 {A B : Type'} (u : A -> Prop) (f : A -> B) (x' : A) (g : type686 A) (s : A -> Prop) (x : A) : (term5425 A B u f x' g s x) = (term5381 A B u f x' g s x).
Proof. exact (MK_COMB (@lem3544584 A) (@lem3544583 A B u f x' g s x)). Qed.
Lemma lem3544586 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem3544587 {A B : Type'} (u : A -> Prop) (f : A -> B) (x' : A) (g : type686 A) (s : A -> Prop) (x : A) : (term5426 A B u f x' g s x) = (term5415 A B u f x' g s x).
Proof. exact (MK_COMB (@lem3544586) (@lem3544585 A B u f x' g s x)). Qed.
Lemma lem3544588 {A : Type'} (s : A -> Prop) (u : A -> Prop) (x : A) : (term5256 A s u x) = (term5256 A s u x).
Proof. exact (eq_refl (term5256 A s u x)). Qed.
Lemma lem3544589 {A B : Type'} (f : A -> B) (x' : A) (g : type686 A) (s : A -> Prop) (u : A -> Prop) (x : A) : (term5421 A B f x' g s u x) = (term5417 A B f x' g s u x).
Proof. exact (MK_COMB (@lem3544587 A B u f x' g s x) (@lem3544588 A s u x)). Qed.
Lemma lem3544590 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem3544591 {A B : Type'} (f : A -> B) (x' : A) (g : type686 A) (s : A -> Prop) (u : A -> Prop) (x : A) : (term5427 A B f x' g s u x) = (term5428 A B f x' g s u x).
Proof. exact (MK_COMB (@lem3544590) (@lem3544589 A B f x' g s u x)). Qed.
Lemma lem3544592 {A B : Type'} (u : A -> Prop) (f : A -> B) (x' : A) (g : type686 A) (s : A -> Prop) (t : A -> Prop) (x : A) : (term5423 A B u f x' g s x t) = (term5378 A B u f x' g s t x).
Proof. exact (eq_refl (term5423 A B u f x' g s x t)). Qed.
Lemma lem3544593 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem3544594 {A B : Type'} (u : A -> Prop) (f : A -> B) (x' : A) (g : type686 A) (s : A -> Prop) (t : A -> Prop) (x : A) : (term5429 A B u f x' g s x t) = (term5430 A B u f x' g s t x).
Proof. exact (MK_COMB (@lem3544593) (@lem3544592 A B u f x' g s t x)). Qed.
Lemma lem3544595 {A : Type'} (s : A -> Prop) (u : A -> Prop) (x : A) : (term5256 A s u x) = (term5256 A s u x).
Proof. exact (eq_refl (term5256 A s u x)). Qed.
Lemma lem3544596 {A B : Type'} (f : A -> B) (x' : A) (g : type686 A) (t : A -> Prop) (s : A -> Prop) (u : A -> Prop) (x : A) : (term5431 A B f x' g t s u x) = (term5432 A B f x' g t s u x).
Proof. exact (MK_COMB (@lem3544594 A B u f x' g s t x) (@lem3544595 A s u x)). Qed.
Lemma lem3544597 {A B : Type'} (f : A -> B) (x' : A) (g : type686 A) (s : A -> Prop) (u : A -> Prop) (x : A) : (term5433 A B f x' g s u x) = (term5434 A B f x' g s u x).
Proof. exact (fun_ext (fun t : A -> Prop => @lem3544596 A B f x' g t s u x)). Qed.
Lemma lem3544598 {A : Type'} : (@ex (A -> Prop)) = (@ex (A -> Prop)).
Proof. exact (eq_refl (@ex (A -> Prop))). Qed.
Lemma lem3544599 {A B : Type'} (f : A -> B) (x' : A) (g : type686 A) (s : A -> Prop) (u : A -> Prop) (x : A) : (term5422 A B f x' g s u x) = (term5435 A B f x' g s u x).
Proof. exact (MK_COMB (@lem3544598 A) (@lem3544597 A B f x' g s u x)). Qed.
Lemma lem3544600 {A B : Type'} (f : A -> B) (x' : A) (g : type686 A) (s : A -> Prop) (u : A -> Prop) (x : A) : ((term5421 A B f x' g s u x) = (term5422 A B f x' g s u x)) = ((term5417 A B f x' g s u x) = (term5435 A B f x' g s u x)).
Proof. exact (MK_COMB (@lem3544591 A B f x' g s u x) (@lem3544599 A B f x' g s u x)). Qed.
Lemma lem3544601 {A B : Type'} (f : A -> B) (x' : A) (g : type686 A) (s : A -> Prop) (u : A -> Prop) (x : A) : (term5417 A B f x' g s u x) = (term5435 A B f x' g s u x).
Proof. exact (EQ_MP (@lem3544600 A B f x' g s u x) (@lem3544581 A B f x' g s u x)). Qed.
Lemma lem3544602 {A B : Type'} (f : A -> B) (g : type686 A) (s : A -> Prop) (u : A -> Prop) (x : A) : (term5419 A B f g s u x) = (term5436 A B f g s u x).
Proof. exact (fun_ext (fun x' : A => @lem3544601 A B f x' g s u x)). Qed.
Lemma lem3544603 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem3544604 {A B : Type'} (f : A -> B) (g : type686 A) (s : A -> Prop) (u : A -> Prop) (x : A) : (term5420 A B f g s u x) = (term5437 A B f g s u x).
Proof. exact (MK_COMB (@lem3544603 A) (@lem3544602 A B f g s u x)). Qed.
Lemma lem3544605 {A B : Type'} (f : A -> B) (g : type686 A) (s : A -> Prop) (u : A -> Prop) (x : A) : (term5402 A B f g s u x) = (term5437 A B f g s u x).
Proof. exact (TRANS (@lem3544577 A B f g s u x) (@lem3544604 A B f g s u x)). Qed.
Lemma lem3544606 {A B : Type'} (f : A -> B) (g : type686 A) (s : A -> Prop) (u : A -> Prop) : (term5404 A B f g s u) = (term5438 A B f g s u).
Proof. exact (fun_ext (fun x : A => @lem3544605 A B f g s u x)). Qed.
Lemma lem3544607 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem3544608 {A B : Type'} (f : A -> B) (g : type686 A) (s : A -> Prop) (u : A -> Prop) : (term5405 A B f g s u) = (term5439 A B f g s u).
Proof. exact (MK_COMB (@lem3544607 A) (@lem3544606 A B f g s u)). Qed.
Lemma lem3544609 {A B : Type'} (f : A -> B) (g : type686 A) (s : A -> Prop) (u : A -> Prop) : (term5387 A B f g s u) = (term5439 A B f g s u).
Proof. exact (TRANS (@lem3544553 A B f g s u) (@lem3544608 A B f g s u)). Qed.
Lemma lem3544610 {A B : Type'} (f : A -> B) (g : type686 A) (s : A -> Prop) (u : A -> Prop) : (term5267 A B f g s u) = (term5439 A B f g s u).
Proof. exact (TRANS (@lem3544526 A B f g s u) (@lem3544609 A B f g s u)). Qed.
Lemma lem3544611 {A B : Type'} (f : A -> B) (g : type686 A) (s : A -> Prop) (u : A -> Prop) : (term5272 A B f g s u) = (term5440 A B f g s u).
Proof. exact (MK_COMB (@lem3544446 A B f g s u) (@lem3544610 A B f g s u)). Qed.
Lemma lem3544613 {A : Type'} (P : A -> Prop) (Q : Prop) : (term398 A P Q) = (term399 A P Q).
Proof. exact (EQ_MP (@lem18923 A P Q) (@lem18922 A P Q)). Qed.
Lemma lem3544614 {A : Type'} (P : A -> Prop) (Q : Prop) : (term398 A P Q) = (term399 A P Q).
Proof. exact (@lem3544613 A P Q). Qed.
Lemma lem3544615 {A B : Type'} (f : A -> B) (g : type686 A) (s : A -> Prop) (u : A -> Prop) : (term5441 A B f g s u) = (term5442 A B f g s u).
Proof. exact (@lem3544614 A (term5338 A B f g s u) (term5439 A B f g s u)). Qed.
Lemma lem3544616 {A B : Type'} (f : A -> B) (g : type686 A) (s : A -> Prop) (u : A -> Prop) (x : A) : (term5443 A B f g s u x) = (term5337 A B f g s u x).
Proof. exact (eq_refl (term5443 A B f g s u x)). Qed.
Lemma lem3544617 {A B : Type'} (f : A -> B) (g : type686 A) (s : A -> Prop) (u : A -> Prop) : (term5444 A B f g s u) = (term5338 A B f g s u).
Proof. exact (fun_ext (fun x : A => @lem3544616 A B f g s u x)). Qed.
Lemma lem3544618 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem3544619 {A B : Type'} (f : A -> B) (g : type686 A) (s : A -> Prop) (u : A -> Prop) : (term5445 A B f g s u) = (term5339 A B f g s u).
Proof. exact (MK_COMB (@lem3544618 A) (@lem3544617 A B f g s u)). Qed.
Lemma lem3544620 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem3544621 {A B : Type'} (f : A -> B) (g : type686 A) (s : A -> Prop) (u : A -> Prop) : (term5446 A B f g s u) = (term5340 A B f g s u).
Proof. exact (MK_COMB (@lem3544620) (@lem3544619 A B f g s u)). Qed.
Lemma lem3544622 {A B : Type'} (f : A -> B) (g : type686 A) (s : A -> Prop) (u : A -> Prop) : (term5439 A B f g s u) = (term5439 A B f g s u).
Proof. exact (eq_refl (term5439 A B f g s u)). Qed.
Lemma lem3544623 {A B : Type'} (f : A -> B) (g : type686 A) (s : A -> Prop) (u : A -> Prop) : (term5441 A B f g s u) = (term5440 A B f g s u).
Proof. exact (MK_COMB (@lem3544621 A B f g s u) (@lem3544622 A B f g s u)). Qed.
Lemma lem3544624 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem3544625 {A B : Type'} (f : A -> B) (g : type686 A) (s : A -> Prop) (u : A -> Prop) : (term5447 A B f g s u) = (term5448 A B f g s u).
Proof. exact (MK_COMB (@lem3544624) (@lem3544623 A B f g s u)). Qed.
Lemma lem3544626 {A B : Type'} (f : A -> B) (g : type686 A) (s : A -> Prop) (u : A -> Prop) (x : A) : (term5443 A B f g s u x) = (term5337 A B f g s u x).
Proof. exact (eq_refl (term5443 A B f g s u x)). Qed.
Lemma lem3544627 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem3544628 {A B : Type'} (f : A -> B) (g : type686 A) (s : A -> Prop) (u : A -> Prop) (x : A) : (term5449 A B f g s u x) = (term5450 A B f g s u x).
Proof. exact (MK_COMB (@lem3544627) (@lem3544626 A B f g s u x)). Qed.
Lemma lem3544629 {A B : Type'} (f : A -> B) (g : type686 A) (s : A -> Prop) (u : A -> Prop) : (term5439 A B f g s u) = (term5439 A B f g s u).
Proof. exact (eq_refl (term5439 A B f g s u)). Qed.
Lemma lem3544630 {A B : Type'} (x : A) (f : A -> B) (g : type686 A) (s : A -> Prop) (u : A -> Prop) : (term5451 A B x f g s u) = (term5452 A B x f g s u).
Proof. exact (MK_COMB (@lem3544628 A B f g s u x) (@lem3544629 A B f g s u)). Qed.
Lemma lem3544631 {A B : Type'} (f : A -> B) (g : type686 A) (s : A -> Prop) (u : A -> Prop) : (term5453 A B f g s u) = (term5454 A B f g s u).
Proof. exact (fun_ext (fun x : A => @lem3544630 A B x f g s u)). Qed.
Lemma lem3544632 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem3544633 {A B : Type'} (f : A -> B) (g : type686 A) (s : A -> Prop) (u : A -> Prop) : (term5442 A B f g s u) = (term5455 A B f g s u).
Proof. exact (MK_COMB (@lem3544632 A) (@lem3544631 A B f g s u)). Qed.
Lemma lem3544634 {A B : Type'} (f : A -> B) (g : type686 A) (s : A -> Prop) (u : A -> Prop) : ((term5441 A B f g s u) = (term5442 A B f g s u)) = ((term5440 A B f g s u) = (term5455 A B f g s u)).
Proof. exact (MK_COMB (@lem3544625 A B f g s u) (@lem3544633 A B f g s u)). Qed.
Lemma lem3544635 {A B : Type'} (f : A -> B) (g : type686 A) (s : A -> Prop) (u : A -> Prop) : (term5440 A B f g s u) = (term5455 A B f g s u).
Proof. exact (EQ_MP (@lem3544634 A B f g s u) (@lem3544615 A B f g s u)). Qed.
Lemma lem3544637 {A : Type'} (P : A -> Prop) (Q : Prop) : (term398 A P Q) = (term399 A P Q).
Proof. exact (EQ_MP (@lem18923 A P Q) (@lem18922 A P Q)). Qed.
Lemma lem3544638 {A : Type'} (P : A -> Prop) (Q : Prop) : (term398 A P Q) = (term399 A P Q).
Proof. exact (@lem3544637 A P Q). Qed.
Lemma lem3544639 {A B : Type'} (x : A) (f : A -> B) (g : type686 A) (s : A -> Prop) (u : A -> Prop) : (term5456 A B x f g s u) = (term5457 A B x f g s u).
Proof. exact (@lem3544638 A (term5336 A B f g s u x) (term5439 A B f g s u)). Qed.
Lemma lem3544640 {A B : Type'} (f : A -> B) (x' : A) (g : type686 A) (s : A -> Prop) (u : A -> Prop) (x : A) : (term5458 A B f g s u x x') = (term5334 A B f x' g s u x).
Proof. exact (eq_refl (term5458 A B f g s u x x')). Qed.
Lemma lem3544641 {A B : Type'} (f : A -> B) (g : type686 A) (s : A -> Prop) (u : A -> Prop) (x : A) : (term5459 A B f g s u x) = (term5336 A B f g s u x).
Proof. exact (fun_ext (fun x' : A => @lem3544640 A B f x' g s u x)). Qed.
Lemma lem3544642 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem3544643 {A B : Type'} (f : A -> B) (g : type686 A) (s : A -> Prop) (u : A -> Prop) (x : A) : (term5460 A B f g s u x) = (term5337 A B f g s u x).
Proof. exact (MK_COMB (@lem3544642 A) (@lem3544641 A B f g s u x)). Qed.
Lemma lem3544644 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem3544645 {A B : Type'} (f : A -> B) (g : type686 A) (s : A -> Prop) (u : A -> Prop) (x : A) : (term5461 A B f g s u x) = (term5450 A B f g s u x).
Proof. exact (MK_COMB (@lem3544644) (@lem3544643 A B f g s u x)). Qed.
Lemma lem3544646 {A B : Type'} (f : A -> B) (g : type686 A) (s : A -> Prop) (u : A -> Prop) : (term5439 A B f g s u) = (term5439 A B f g s u).
Proof. exact (eq_refl (term5439 A B f g s u)). Qed.
Lemma lem3544647 {A B : Type'} (x : A) (f : A -> B) (g : type686 A) (s : A -> Prop) (u : A -> Prop) : (term5456 A B x f g s u) = (term5452 A B x f g s u).
Proof. exact (MK_COMB (@lem3544645 A B f g s u x) (@lem3544646 A B f g s u)). Qed.
Lemma lem3544648 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem3544649 {A B : Type'} (x : A) (f : A -> B) (g : type686 A) (s : A -> Prop) (u : A -> Prop) : (term5462 A B x f g s u) = (term5463 A B x f g s u).
Proof. exact (MK_COMB (@lem3544648) (@lem3544647 A B x f g s u)). Qed.
Lemma lem3544650 {A B : Type'} (f : A -> B) (x' : A) (g : type686 A) (s : A -> Prop) (u : A -> Prop) (x : A) : (term5458 A B f g s u x x') = (term5334 A B f x' g s u x).
Proof. exact (eq_refl (term5458 A B f g s u x x')). Qed.
Lemma lem3544651 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem3544652 {A B : Type'} (f : A -> B) (x' : A) (g : type686 A) (s : A -> Prop) (u : A -> Prop) (x : A) : (term5464 A B f g s u x x') = (term5465 A B f x' g s u x).
Proof. exact (MK_COMB (@lem3544651) (@lem3544650 A B f x' g s u x)). Qed.
Lemma lem3544653 {A B : Type'} (f : A -> B) (g : type686 A) (s : A -> Prop) (u : A -> Prop) : (term5439 A B f g s u) = (term5439 A B f g s u).
Proof. exact (eq_refl (term5439 A B f g s u)). Qed.
Lemma lem3544654 {A B : Type'} (x' : A) (x : A) (f : A -> B) (g : type686 A) (s : A -> Prop) (u : A -> Prop) : (term5466 A B x x' f g s u) = (term5467 A B x' x f g s u).
Proof. exact (MK_COMB (@lem3544652 A B f x' g s u x) (@lem3544653 A B f g s u)). Qed.
Lemma lem3544655 {A B : Type'} (x : A) (f : A -> B) (g : type686 A) (s : A -> Prop) (u : A -> Prop) : (term5468 A B x f g s u) = (term5469 A B x f g s u).
Proof. exact (fun_ext (fun x' : A => @lem3544654 A B x' x f g s u)). Qed.
Lemma lem3544656 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem3544657 {A B : Type'} (x : A) (f : A -> B) (g : type686 A) (s : A -> Prop) (u : A -> Prop) : (term5457 A B x f g s u) = (term5470 A B x f g s u).
Proof. exact (MK_COMB (@lem3544656 A) (@lem3544655 A B x f g s u)). Qed.
Lemma lem3544658 {A B : Type'} (x : A) (f : A -> B) (g : type686 A) (s : A -> Prop) (u : A -> Prop) : ((term5456 A B x f g s u) = (term5457 A B x f g s u)) = ((term5452 A B x f g s u) = (term5470 A B x f g s u)).
Proof. exact (MK_COMB (@lem3544649 A B x f g s u) (@lem3544657 A B x f g s u)). Qed.
Lemma lem3544659 {A B : Type'} (x : A) (f : A -> B) (g : type686 A) (s : A -> Prop) (u : A -> Prop) : (term5452 A B x f g s u) = (term5470 A B x f g s u).
Proof. exact (EQ_MP (@lem3544658 A B x f g s u) (@lem3544639 A B x f g s u)). Qed.
Lemma lem3544661 {A : Type'} (P : Prop) (Q : A -> Prop) : (term415 A P Q) = (term416 A P Q).
Proof. exact (EQ_MP (@lem18929 A P Q) (@lem18928 A P Q)). Qed.
Lemma lem3544662 {A : Type'} (P : Prop) (Q : A -> Prop) : (term415 A P Q) = (term416 A P Q).
Proof. exact (@lem3544661 A P Q). Qed.
Lemma lem3544663 {A B : Type'} (x' : A) (x : A) (f : A -> B) (g : type686 A) (s : A -> Prop) (u : A -> Prop) : (term5471 A B x' x f g s u) = (term5472 A B x' x f g s u).
Proof. exact (@lem3544662 A (term5334 A B f x' g s u x) (term5438 A B f g s u)). Qed.
Lemma lem3544664 {A B : Type'} (f : A -> B) (g : type686 A) (s : A -> Prop) (u : A -> Prop) (x : A) : (term5473 A B f g s u x) = (term5437 A B f g s u x).
Proof. exact (eq_refl (term5473 A B f g s u x)). Qed.
Lemma lem3544665 {A B : Type'} (f : A -> B) (g : type686 A) (s : A -> Prop) (u : A -> Prop) : (term5474 A B f g s u) = (term5438 A B f g s u).
Proof. exact (fun_ext (fun x : A => @lem3544664 A B f g s u x)). Qed.
Lemma lem3544666 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem3544667 {A B : Type'} (f : A -> B) (g : type686 A) (s : A -> Prop) (u : A -> Prop) : (term5475 A B f g s u) = (term5439 A B f g s u).
Proof. exact (MK_COMB (@lem3544666 A) (@lem3544665 A B f g s u)). Qed.
Lemma lem3544668 {A B : Type'} (f : A -> B) (x' : A) (g : type686 A) (s : A -> Prop) (u : A -> Prop) (x : A) : (term5465 A B f x' g s u x) = (term5465 A B f x' g s u x).
Proof. exact (eq_refl (term5465 A B f x' g s u x)). Qed.
Lemma lem3544669 {A B : Type'} (x' : A) (x : A) (f : A -> B) (g : type686 A) (s : A -> Prop) (u : A -> Prop) : (term5471 A B x' x f g s u) = (term5467 A B x' x f g s u).
Proof. exact (MK_COMB (@lem3544668 A B f x' g s u x) (@lem3544667 A B f g s u)). Qed.
Lemma lem3544670 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem3544671 {A B : Type'} (x' : A) (x : A) (f : A -> B) (g : type686 A) (s : A -> Prop) (u : A -> Prop) : (term5476 A B x' x f g s u) = (term5477 A B x' x f g s u).
Proof. exact (MK_COMB (@lem3544670) (@lem3544669 A B x' x f g s u)). Qed.
Lemma lem3544672 {A B : Type'} (f : A -> B) (g : type686 A) (s : A -> Prop) (u : A -> Prop) (x'' : A) : (term5473 A B f g s u x'') = (term5437 A B f g s u x'').
Proof. exact (eq_refl (term5473 A B f g s u x'')). Qed.
Lemma lem3544673 {A B : Type'} (f : A -> B) (x' : A) (g : type686 A) (s : A -> Prop) (u : A -> Prop) (x : A) : (term5465 A B f x' g s u x) = (term5465 A B f x' g s u x).
Proof. exact (eq_refl (term5465 A B f x' g s u x)). Qed.
Lemma lem3544674 {A B : Type'} (x' : A) (x : A) (f : A -> B) (g : type686 A) (s : A -> Prop) (u : A -> Prop) (x'' : A) : (term5478 A B x' x f g s u x'') = (term5479 A B x' x f g s u x'').
Proof. exact (MK_COMB (@lem3544673 A B f x' g s u x) (@lem3544672 A B f g s u x'')). Qed.
Lemma lem3544675 {A B : Type'} (x' : A) (x : A) (f : A -> B) (g : type686 A) (s : A -> Prop) (u : A -> Prop) : (term5480 A B x' x f g s u) = (term5481 A B x' x f g s u).
Proof. exact (fun_ext (fun x'' : A => @lem3544674 A B x' x f g s u x'')). Qed.
Lemma lem3544676 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem3544677 {A B : Type'} (x' : A) (x : A) (f : A -> B) (g : type686 A) (s : A -> Prop) (u : A -> Prop) : (term5472 A B x' x f g s u) = (term5482 A B x' x f g s u).
Proof. exact (MK_COMB (@lem3544676 A) (@lem3544675 A B x' x f g s u)). Qed.
Lemma lem3544678 {A B : Type'} (x' : A) (x : A) (f : A -> B) (g : type686 A) (s : A -> Prop) (u : A -> Prop) : ((term5471 A B x' x f g s u) = (term5472 A B x' x f g s u)) = ((term5467 A B x' x f g s u) = (term5482 A B x' x f g s u)).
Proof. exact (MK_COMB (@lem3544671 A B x' x f g s u) (@lem3544677 A B x' x f g s u)). Qed.
Lemma lem3544679 {A B : Type'} (x' : A) (x : A) (f : A -> B) (g : type686 A) (s : A -> Prop) (u : A -> Prop) : (term5467 A B x' x f g s u) = (term5482 A B x' x f g s u).
Proof. exact (EQ_MP (@lem3544678 A B x' x f g s u) (@lem3544663 A B x' x f g s u)). Qed.
Lemma lem3544681 {A : Type'} (P : Prop) (Q : A -> Prop) : (term415 A P Q) = (term416 A P Q).
Proof. exact (EQ_MP (@lem18929 A P Q) (@lem18928 A P Q)). Qed.
Lemma lem3544682 {A : Type'} (P : Prop) (Q : A -> Prop) : (term415 A P Q) = (term416 A P Q).
Proof. exact (@lem3544681 A P Q). Qed.
Lemma lem3544683 {A B : Type'} (x' : A) (x : A) (f : A -> B) (g : type686 A) (s : A -> Prop) (u : A -> Prop) (x'' : A) : (term5483 A B x' x f g s u x'') = (term5484 A B x' x f g s u x'').
Proof. exact (@lem3544682 A (term5334 A B f x' g s u x) (term5436 A B f g s u x'')). Qed.
Lemma lem3544684 {A B : Type'} (f : A -> B) (x' : A) (g : type686 A) (s : A -> Prop) (u : A -> Prop) (x'' : A) : (term5485 A B f g s u x'' x') = (term5435 A B f x' g s u x'').
Proof. exact (eq_refl (term5485 A B f g s u x'' x')). Qed.
Lemma lem3544685 {A B : Type'} (f : A -> B) (g : type686 A) (s : A -> Prop) (u : A -> Prop) (x'' : A) : (term5486 A B f g s u x'') = (term5436 A B f g s u x'').
Proof. exact (fun_ext (fun x' : A => @lem3544684 A B f x' g s u x'')). Qed.
Lemma lem3544686 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem3544687 {A B : Type'} (f : A -> B) (g : type686 A) (s : A -> Prop) (u : A -> Prop) (x'' : A) : (term5487 A B f g s u x'') = (term5437 A B f g s u x'').
Proof. exact (MK_COMB (@lem3544686 A) (@lem3544685 A B f g s u x'')). Qed.
Lemma lem3544688 {A B : Type'} (f : A -> B) (x' : A) (g : type686 A) (s : A -> Prop) (u : A -> Prop) (x : A) : (term5465 A B f x' g s u x) = (term5465 A B f x' g s u x).
Proof. exact (eq_refl (term5465 A B f x' g s u x)). Qed.
Lemma lem3544689 {A B : Type'} (x' : A) (x : A) (f : A -> B) (g : type686 A) (s : A -> Prop) (u : A -> Prop) (x'' : A) : (term5483 A B x' x f g s u x'') = (term5479 A B x' x f g s u x'').
Proof. exact (MK_COMB (@lem3544688 A B f x' g s u x) (@lem3544687 A B f g s u x'')). Qed.
Lemma lem3544690 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem3544691 {A B : Type'} (x' : A) (x : A) (f : A -> B) (g : type686 A) (s : A -> Prop) (u : A -> Prop) (x'' : A) : (term5488 A B x' x f g s u x'') = (term5489 A B x' x f g s u x'').
Proof. exact (MK_COMB (@lem3544690) (@lem3544689 A B x' x f g s u x'')). Qed.
Lemma lem3544692 {A B : Type'} (f : A -> B) (x''' : A) (g : type686 A) (s : A -> Prop) (u : A -> Prop) (x'' : A) : (term5485 A B f g s u x'' x''') = (term5435 A B f x''' g s u x'').
Proof. exact (eq_refl (term5485 A B f g s u x'' x''')). Qed.
Lemma lem3544693 {A B : Type'} (f : A -> B) (x' : A) (g : type686 A) (s : A -> Prop) (u : A -> Prop) (x : A) : (term5465 A B f x' g s u x) = (term5465 A B f x' g s u x).
Proof. exact (eq_refl (term5465 A B f x' g s u x)). Qed.
Lemma lem3544694 {A B : Type'} (x' : A) (x : A) (f : A -> B) (x''' : A) (g : type686 A) (s : A -> Prop) (u : A -> Prop) (x'' : A) : (term5490 A B x' x f g s u x'' x''') = (term5491 A B x' x f x''' g s u x'').
Proof. exact (MK_COMB (@lem3544693 A B f x' g s u x) (@lem3544692 A B f x''' g s u x'')). Qed.
Lemma lem3544695 {A B : Type'} (x' : A) (x : A) (f : A -> B) (g : type686 A) (s : A -> Prop) (u : A -> Prop) (x'' : A) : (term5492 A B x' x f g s u x'') = (term5493 A B x' x f g s u x'').
Proof. exact (fun_ext (fun x''' : A => @lem3544694 A B x' x f x''' g s u x'')). Qed.
Lemma lem3544696 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem3544697 {A B : Type'} (x' : A) (x : A) (f : A -> B) (g : type686 A) (s : A -> Prop) (u : A -> Prop) (x'' : A) : (term5484 A B x' x f g s u x'') = (term5494 A B x' x f g s u x'').
Proof. exact (MK_COMB (@lem3544696 A) (@lem3544695 A B x' x f g s u x'')). Qed.
Lemma lem3544698 {A B : Type'} (x' : A) (x : A) (f : A -> B) (g : type686 A) (s : A -> Prop) (u : A -> Prop) (x'' : A) : ((term5483 A B x' x f g s u x'') = (term5484 A B x' x f g s u x'')) = ((term5479 A B x' x f g s u x'') = (term5494 A B x' x f g s u x'')).
Proof. exact (MK_COMB (@lem3544691 A B x' x f g s u x'') (@lem3544697 A B x' x f g s u x'')). Qed.
Lemma lem3544699 {A B : Type'} (x' : A) (x : A) (f : A -> B) (g : type686 A) (s : A -> Prop) (u : A -> Prop) (x'' : A) : (term5479 A B x' x f g s u x'') = (term5494 A B x' x f g s u x'').
Proof. exact (EQ_MP (@lem3544698 A B x' x f g s u x'') (@lem3544683 A B x' x f g s u x'')). Qed.
Lemma lem3544701 {A : Type'} (P : Prop) (Q : A -> Prop) : (term415 A P Q) = (term416 A P Q).
Proof. exact (EQ_MP (@lem18929 A P Q) (@lem18928 A P Q)). Qed.
Lemma lem3544702 {A : Type'} (P : Prop) (Q : type686 A) : (term417 A P Q) = (term418 A P Q).
Proof. exact (@lem3544701 (A -> Prop) P Q). Qed.
Lemma lem3544703 {A B : Type'} (x' : A) (x : A) (f : A -> B) (x''' : A) (g : type686 A) (s : A -> Prop) (u : A -> Prop) (x'' : A) : (term5495 A B x' x f x''' g s u x'') = (term5496 A B x' x f x''' g s u x'').
Proof. exact (@lem3544702 A (term5334 A B f x' g s u x) (term5434 A B f x''' g s u x'')). Qed.
Lemma lem3544704 {A B : Type'} (f : A -> B) (x''' : A) (g : type686 A) (t : A -> Prop) (s : A -> Prop) (u : A -> Prop) (x'' : A) : (term5497 A B f x''' g s u x'' t) = (term5432 A B f x''' g t s u x'').
Proof. exact (eq_refl (term5497 A B f x''' g s u x'' t)). Qed.
Lemma lem3544705 {A B : Type'} (f : A -> B) (x''' : A) (g : type686 A) (s : A -> Prop) (u : A -> Prop) (x'' : A) : (term5498 A B f x''' g s u x'') = (term5434 A B f x''' g s u x'').
Proof. exact (fun_ext (fun t : A -> Prop => @lem3544704 A B f x''' g t s u x'')). Qed.
Lemma lem3544706 {A : Type'} : (@ex (A -> Prop)) = (@ex (A -> Prop)).
Proof. exact (eq_refl (@ex (A -> Prop))). Qed.
Lemma lem3544707 {A B : Type'} (f : A -> B) (x''' : A) (g : type686 A) (s : A -> Prop) (u : A -> Prop) (x'' : A) : (term5499 A B f x''' g s u x'') = (term5435 A B f x''' g s u x'').
Proof. exact (MK_COMB (@lem3544706 A) (@lem3544705 A B f x''' g s u x'')). Qed.
Lemma lem3544708 {A B : Type'} (f : A -> B) (x' : A) (g : type686 A) (s : A -> Prop) (u : A -> Prop) (x : A) : (term5465 A B f x' g s u x) = (term5465 A B f x' g s u x).
Proof. exact (eq_refl (term5465 A B f x' g s u x)). Qed.
Lemma lem3544709 {A B : Type'} (x' : A) (x : A) (f : A -> B) (x''' : A) (g : type686 A) (s : A -> Prop) (u : A -> Prop) (x'' : A) : (term5495 A B x' x f x''' g s u x'') = (term5491 A B x' x f x''' g s u x'').
Proof. exact (MK_COMB (@lem3544708 A B f x' g s u x) (@lem3544707 A B f x''' g s u x'')). Qed.
Lemma lem3544710 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem3544711 {A B : Type'} (x' : A) (x : A) (f : A -> B) (x''' : A) (g : type686 A) (s : A -> Prop) (u : A -> Prop) (x'' : A) : (term5500 A B x' x f x''' g s u x'') = (term5501 A B x' x f x''' g s u x'').
Proof. exact (MK_COMB (@lem3544710) (@lem3544709 A B x' x f x''' g s u x'')). Qed.
Lemma lem3544712 {A B : Type'} (f : A -> B) (x''' : A) (g : type686 A) (t : A -> Prop) (s : A -> Prop) (u : A -> Prop) (x'' : A) : (term5497 A B f x''' g s u x'' t) = (term5432 A B f x''' g t s u x'').
Proof. exact (eq_refl (term5497 A B f x''' g s u x'' t)). Qed.
Lemma lem3544713 {A B : Type'} (f : A -> B) (x' : A) (g : type686 A) (s : A -> Prop) (u : A -> Prop) (x : A) : (term5465 A B f x' g s u x) = (term5465 A B f x' g s u x).
Proof. exact (eq_refl (term5465 A B f x' g s u x)). Qed.
Lemma lem3544714 {A B : Type'} (x' : A) (x : A) (f : A -> B) (x''' : A) (g : type686 A) (t : A -> Prop) (s : A -> Prop) (u : A -> Prop) (x'' : A) : (term5502 A B x' x f x''' g s u x'' t) = (term5503 A B x' x f x''' g t s u x'').
Proof. exact (MK_COMB (@lem3544713 A B f x' g s u x) (@lem3544712 A B f x''' g t s u x'')). Qed.
Lemma lem3544715 {A B : Type'} (x' : A) (x : A) (f : A -> B) (x''' : A) (g : type686 A) (s : A -> Prop) (u : A -> Prop) (x'' : A) : (term5504 A B x' x f x''' g s u x'') = (term5505 A B x' x f x''' g s u x'').
Proof. exact (fun_ext (fun t : A -> Prop => @lem3544714 A B x' x f x''' g t s u x'')). Qed.
Lemma lem3544716 {A : Type'} : (@ex (A -> Prop)) = (@ex (A -> Prop)).
Proof. exact (eq_refl (@ex (A -> Prop))). Qed.
Lemma lem3544717 {A B : Type'} (x' : A) (x : A) (f : A -> B) (x''' : A) (g : type686 A) (s : A -> Prop) (u : A -> Prop) (x'' : A) : (term5496 A B x' x f x''' g s u x'') = (term5506 A B x' x f x''' g s u x'').
Proof. exact (MK_COMB (@lem3544716 A) (@lem3544715 A B x' x f x''' g s u x'')). Qed.
Lemma lem3544718 {A B : Type'} (x' : A) (x : A) (f : A -> B) (x''' : A) (g : type686 A) (s : A -> Prop) (u : A -> Prop) (x'' : A) : ((term5495 A B x' x f x''' g s u x'') = (term5496 A B x' x f x''' g s u x'')) = ((term5491 A B x' x f x''' g s u x'') = (term5506 A B x' x f x''' g s u x'')).
Proof. exact (MK_COMB (@lem3544711 A B x' x f x''' g s u x'') (@lem3544717 A B x' x f x''' g s u x'')). Qed.
Lemma lem3544719 {A B : Type'} (x' : A) (x : A) (f : A -> B) (x''' : A) (g : type686 A) (s : A -> Prop) (u : A -> Prop) (x'' : A) : (term5491 A B x' x f x''' g s u x'') = (term5506 A B x' x f x''' g s u x'').
Proof. exact (EQ_MP (@lem3544718 A B x' x f x''' g s u x'') (@lem3544703 A B x' x f x''' g s u x'')). Qed.
Lemma lem3544720 {A B : Type'} (x' : A) (x : A) (f : A -> B) (g : type686 A) (s : A -> Prop) (u : A -> Prop) (x'' : A) : (term5493 A B x' x f g s u x'') = (term5507 A B x' x f g s u x'').
Proof. exact (fun_ext (fun x''' : A => @lem3544719 A B x' x f x''' g s u x'')). Qed.
Lemma lem3544721 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem3544722 {A B : Type'} (x' : A) (x : A) (f : A -> B) (g : type686 A) (s : A -> Prop) (u : A -> Prop) (x'' : A) : (term5494 A B x' x f g s u x'') = (term5508 A B x' x f g s u x'').
Proof. exact (MK_COMB (@lem3544721 A) (@lem3544720 A B x' x f g s u x'')). Qed.
Lemma lem3544723 {A B : Type'} (x' : A) (x : A) (f : A -> B) (g : type686 A) (s : A -> Prop) (u : A -> Prop) (x'' : A) : (term5479 A B x' x f g s u x'') = (term5508 A B x' x f g s u x'').
Proof. exact (TRANS (@lem3544699 A B x' x f g s u x'') (@lem3544722 A B x' x f g s u x'')). Qed.
Lemma lem3544724 {A B : Type'} (x' : A) (x : A) (f : A -> B) (g : type686 A) (s : A -> Prop) (u : A -> Prop) : (term5481 A B x' x f g s u) = (term5509 A B x' x f g s u).
Proof. exact (fun_ext (fun x'' : A => @lem3544723 A B x' x f g s u x'')). Qed.
Lemma lem3544725 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem3544726 {A B : Type'} (x' : A) (x : A) (f : A -> B) (g : type686 A) (s : A -> Prop) (u : A -> Prop) : (term5482 A B x' x f g s u) = (term5510 A B x' x f g s u).
Proof. exact (MK_COMB (@lem3544725 A) (@lem3544724 A B x' x f g s u)). Qed.
Lemma lem3544727 {A B : Type'} (x' : A) (x : A) (f : A -> B) (g : type686 A) (s : A -> Prop) (u : A -> Prop) : (term5467 A B x' x f g s u) = (term5510 A B x' x f g s u).
Proof. exact (TRANS (@lem3544679 A B x' x f g s u) (@lem3544726 A B x' x f g s u)). Qed.
Lemma lem3544728 {A B : Type'} (x : A) (f : A -> B) (g : type686 A) (s : A -> Prop) (u : A -> Prop) : (term5469 A B x f g s u) = (term5511 A B x f g s u).
Proof. exact (fun_ext (fun x' : A => @lem3544727 A B x' x f g s u)). Qed.
Lemma lem3544729 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem3544730 {A B : Type'} (x : A) (f : A -> B) (g : type686 A) (s : A -> Prop) (u : A -> Prop) : (term5470 A B x f g s u) = (term5512 A B x f g s u).
Proof. exact (MK_COMB (@lem3544729 A) (@lem3544728 A B x f g s u)). Qed.
Lemma lem3544731 {A B : Type'} (x : A) (f : A -> B) (g : type686 A) (s : A -> Prop) (u : A -> Prop) : (term5452 A B x f g s u) = (term5512 A B x f g s u).
Proof. exact (TRANS (@lem3544659 A B x f g s u) (@lem3544730 A B x f g s u)). Qed.
Lemma lem3544732 {A B : Type'} (f : A -> B) (g : type686 A) (s : A -> Prop) (u : A -> Prop) : (term5454 A B f g s u) = (term5513 A B f g s u).
Proof. exact (fun_ext (fun x : A => @lem3544731 A B x f g s u)). Qed.
Lemma lem3544733 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem3544734 {A B : Type'} (f : A -> B) (g : type686 A) (s : A -> Prop) (u : A -> Prop) : (term5455 A B f g s u) = (term5514 A B f g s u).
Proof. exact (MK_COMB (@lem3544733 A) (@lem3544732 A B f g s u)). Qed.
Lemma lem3544735 {A B : Type'} (f : A -> B) (g : type686 A) (s : A -> Prop) (u : A -> Prop) : (term5440 A B f g s u) = (term5514 A B f g s u).
Proof. exact (TRANS (@lem3544635 A B f g s u) (@lem3544734 A B f g s u)). Qed.
Lemma lem3544737 {A B : Type'} (f : A -> B) (g : type686 A) (s : A -> Prop) (u : A -> Prop) : (term5272 A B f g s u) = (term5514 A B f g s u).
Proof. exact (TRANS (@lem3544611 A B f g s u) (@lem3544735 A B f g s u)). Qed.
Lemma lem3544738 {A B : Type'} (f : A -> B) (g : type686 A) (s : A -> Prop) (u : A -> Prop) : (term5154 A B f g s u) = (term5514 A B f g s u).
Proof. exact (TRANS (@lem3543935 A B f g s u) (@lem3544737 A B f g s u)). Qed.
Lemma lem3544739 {A B : Type'} (f : A -> B) (g : type686 A) (s : A -> Prop) (u : A -> Prop) (h1 : term5154 A B f g s u) : term5514 A B f g s u.
Proof. exact (EQ_MP (@lem3544738 A B f g s u) (@lem3543368 A B f g s u h1)). Qed.
Lemma lem3544740 {A B : Type'} (x : A) (f : A -> B) (g : type686 A) (s : A -> Prop) (u : A -> Prop) (h1 : term5512 A B x f g s u) : term5512 A B x f g s u.
Proof. exact (h1). Qed.
Lemma lem3544741 {A B : Type'} (x' : A) (x : A) (f : A -> B) (g : type686 A) (s : A -> Prop) (u : A -> Prop) (h1 : term5510 A B x' x f g s u) : term5510 A B x' x f g s u.
Proof. exact (h1). Qed.
Lemma lem3544742 {A B : Type'} (x' : A) (x : A) (f : A -> B) (g : type686 A) (s : A -> Prop) (u : A -> Prop) (x'' : A) (h1 : term5508 A B x' x f g s u x'') : term5508 A B x' x f g s u x''.
Proof. exact (h1). Qed.
Lemma lem3544743 {A B : Type'} (x' : A) (x : A) (f : A -> B) (x''' : A) (g : type686 A) (s : A -> Prop) (u : A -> Prop) (x'' : A) (h1 : term5506 A B x' x f x''' g s u x'') : term5506 A B x' x f x''' g s u x''.
Proof. exact (h1). Qed.
Lemma lem3544744 {A B : Type'} (x' : A) (x : A) (f : A -> B) (x''' : A) (g : type686 A) (t : A -> Prop) (s : A -> Prop) (u : A -> Prop) (x'' : A) (h1 : term5503 A B x' x f x''' g t s u x'') : term5503 A B x' x f x''' g t s u x''.
Proof. exact (h1). Qed.
Lemma lem3544745 {A B : Type'} (x'''' : A -> Prop) (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) (h1 : term5193 A B x'''' g s u f) : term5193 A B x'''' g s u f.
Proof. exact (h1). Qed.
Lemma lem3544746 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem3544751 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem3544752 {A : Type'} (f : A -> Prop) (x : A) : (f x) = (@I (A -> Prop) f x).
Proof. exact (@lem3544751 A Prop f x). Qed.
Lemma lem3544754 {A : Type'} (u : A -> Prop) (x'' : A) : (u x'') = (@I (A -> Prop) u x'').
Proof. exact (@lem3544752 A u x''). Qed.
Lemma lem3544755 {A : Type'} (u : A -> Prop) (x'' : A) : (term618 A u x'') = (term619 A u x'').
Proof. exact (MK_COMB (@lem3544746) (@lem3544754 A u x'')). Qed.
Lemma lem3544760 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem3544761 {A : Type'} (f : A -> Prop) (x : A) : (f x) = (@I (A -> Prop) f x).
Proof. exact (@lem3544760 A Prop f x). Qed.
Lemma lem3544763 {A : Type'} (s : A -> Prop) (x'' : A) : (s x'') = (@I (A -> Prop) s x'').
Proof. exact (@lem3544761 A s x''). Qed.
Lemma lem3544764 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem3544765 {A : Type'} (s : A -> Prop) (x'' : A) : (term234 A s x'') = (term966 A s x'').
Proof. exact (MK_COMB (@lem3544764) (@lem3544763 A s x'')). Qed.
Lemma lem3544766 {A : Type'} (s : A -> Prop) (u : A -> Prop) (x'' : A) : (term5256 A s u x'') = (term5515 A s u x'').
Proof. exact (MK_COMB (@lem3544765 A s x'') (@lem3544755 A u x'')). Qed.
Lemma lem3544767 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem3544772 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem3544773 {A : Type'} (f : A -> Prop) (x : A) : (f x) = (@I (A -> Prop) f x).
Proof. exact (@lem3544772 A Prop f x). Qed.
Lemma lem3544775 {A : Type'} (t : A -> Prop) (x'' : A) : (t x'') = (@I (A -> Prop) t x'').
Proof. exact (@lem3544773 A t x''). Qed.
Lemma lem3544776 {A : Type'} (t : A -> Prop) (x'' : A) : (term618 A t x'') = (term619 A t x'').
Proof. exact (MK_COMB (@lem3544767) (@lem3544775 A t x'')). Qed.
Lemma lem3544783 {A : Type'} (t : A -> Prop) (s : A -> Prop) : (term5040 A t s) = (term5040 A t s).
Proof. exact (eq_refl (term5040 A t s)). Qed.
Lemma lem3544788 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem3544789 {A : Type'} (f : type686 A) (x : A -> Prop) : (f x) = (@I ((A -> Prop) -> Prop) f x).
Proof. exact (@lem3544788 (A -> Prop) Prop f x). Qed.
Lemma lem3544791 {A : Type'} (g : type686 A) (t : A -> Prop) : (g t) = (@I ((A -> Prop) -> Prop) g t).
Proof. exact (@lem3544789 A g t). Qed.
Lemma lem3544792 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem3544793 {A : Type'} (g : type686 A) (t : A -> Prop) : (term372 A g t) = (term678 A g t).
Proof. exact (MK_COMB (@lem3544792) (@lem3544791 A g t)). Qed.
Lemma lem3544794 {A : Type'} (g : type686 A) (t : A -> Prop) (s : A -> Prop) : (term5041 A g t s) = (term5516 A g t s).
Proof. exact (MK_COMB (@lem3544793 A g t) (@lem3544783 A t s)). Qed.
Lemma lem3544795 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem3544796 {A : Type'} (g : type686 A) (t : A -> Prop) (s : A -> Prop) : (term5191 A g t s) = (term5517 A g t s).
Proof. exact (MK_COMB (@lem3544795) (@lem3544794 A g t s)). Qed.
Lemma lem3544797 {A : Type'} (g : type686 A) (s : A -> Prop) (t : A -> Prop) (x'' : A) : (term5235 A g s t x'') = (term5518 A g s t x'').
Proof. exact (MK_COMB (@lem3544796 A g t s) (@lem3544776 A t x'')). Qed.
Lemma lem3544802 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem3544803 {A : Type'} (f : A -> Prop) (x : A) : (f x) = (@I (A -> Prop) f x).
Proof. exact (@lem3544802 A Prop f x). Qed.
Lemma lem3544805 {A : Type'} (t : A -> Prop) (x''' : A) : (t x''') = (@I (A -> Prop) t x''').
Proof. exact (@lem3544803 A t x'''). Qed.
Lemma lem3544810 {A : Type'} (t : A -> Prop) (s : A -> Prop) : (t = s) = (t = s).
Proof. exact (eq_refl (t = s)). Qed.
Lemma lem3544811 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem3544816 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem3544817 {A : Type'} (f : type686 A) (x : A -> Prop) : (f x) = (@I ((A -> Prop) -> Prop) f x).
Proof. exact (@lem3544816 (A -> Prop) Prop f x). Qed.
Lemma lem3544819 {A : Type'} (g : type686 A) (t : A -> Prop) : (g t) = (@I ((A -> Prop) -> Prop) g t).
Proof. exact (@lem3544817 A g t). Qed.
Lemma lem3544820 {A : Type'} (g : type686 A) (t : A -> Prop) : (term207 A g t) = (term640 A g t).
Proof. exact (MK_COMB (@lem3544811) (@lem3544819 A g t)). Qed.
Lemma lem3544821 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem3544822 {A : Type'} (g : type686 A) (t : A -> Prop) : (term332 A g t) = (term641 A g t).
Proof. exact (MK_COMB (@lem3544821) (@lem3544820 A g t)). Qed.
Lemma lem3544823 {A : Type'} (g : type686 A) (t : A -> Prop) (s : A -> Prop) : (term5164 A g t s) = (term5519 A g t s).
Proof. exact (MK_COMB (@lem3544822 A g t) (@lem3544810 A t s)). Qed.
Lemma lem3544824 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem3544825 {A : Type'} (g : type686 A) (t : A -> Prop) (s : A -> Prop) : (term5166 A g t s) = (term5520 A g t s).
Proof. exact (MK_COMB (@lem3544824) (@lem3544823 A g t s)). Qed.
Lemma lem3544826 {A : Type'} (g : type686 A) (s : A -> Prop) (t : A -> Prop) (x''' : A) : (term5210 A g s t x''') = (term5521 A g s t x''').
Proof. exact (MK_COMB (@lem3544825 A g t s) (@lem3544805 A t x''')). Qed.
Lemma lem3544827 {A : Type'} (g : type686 A) (s : A -> Prop) (x''' : A) : (term5211 A g s x''') = (term5522 A g s x''').
Proof. exact (fun_ext (fun t : A -> Prop => @lem3544826 A g s t x''')). Qed.
Lemma lem3544828 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem3544829 {A : Type'} (g : type686 A) (s : A -> Prop) (x''' : A) : (term5212 A g s x''') = (term5523 A g s x''').
Proof. exact (MK_COMB (@lem3544828 A) (@lem3544827 A g s x''')). Qed.
Lemma lem3544830 {B : Type'} : (@eq B) = (@eq B).
Proof. exact (eq_refl (@eq B)). Qed.
Lemma lem3544835 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem3544836 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (@lem3544835 A B f x). Qed.
Lemma lem3544838 {A B : Type'} (f : A -> B) (x'' : A) : (f x'') = (@I (A -> B) f x'').
Proof. exact (@lem3544836 A B f x''). Qed.
Lemma lem3544843 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem3544844 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (@lem3544843 A B f x). Qed.
Lemma lem3544846 {A B : Type'} (f : A -> B) (x''' : A) : (f x''') = (@I (A -> B) f x''').
Proof. exact (@lem3544844 A B f x'''). Qed.
Lemma lem3544847 {A B : Type'} (f : A -> B) (x'' : A) : (term620 A B f x'') = (term621 A B f x'').
Proof. exact (MK_COMB (@lem3544830 B) (@lem3544838 A B f x'')). Qed.
Lemma lem3544848 {A B : Type'} (x'' : A) (f : A -> B) (x''' : A) : ((f x'') = (f x''')) = ((@I (A -> B) f x'') = (@I (A -> B) f x''')).
Proof. exact (MK_COMB (@lem3544847 A B f x'') (@lem3544846 A B f x''')). Qed.
Lemma lem3544849 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem3544850 {A B : Type'} (x'' : A) (f : A -> B) (x''' : A) : (term235 A B x'' f x''') = (term971 A B x'' f x''').
Proof. exact (MK_COMB (@lem3544849) (@lem3544848 A B x'' f x''')). Qed.
Lemma lem3544851 {A B : Type'} (x'' : A) (f : A -> B) (g : type686 A) (s : A -> Prop) (x''' : A) : (term5230 A B x'' f g s x''') = (term5524 A B x'' f g s x''').
Proof. exact (MK_COMB (@lem3544850 A B x'' f x''') (@lem3544829 A g s x''')). Qed.
Lemma lem3544856 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem3544857 {A : Type'} (f : A -> Prop) (x : A) : (f x) = (@I (A -> Prop) f x).
Proof. exact (@lem3544856 A Prop f x). Qed.
Lemma lem3544859 {A : Type'} (u : A -> Prop) (x'' : A) : (u x'') = (@I (A -> Prop) u x'').
Proof. exact (@lem3544857 A u x''). Qed.
Lemma lem3544860 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem3544861 {A : Type'} (u : A -> Prop) (x'' : A) : (term234 A u x'') = (term966 A u x'').
Proof. exact (MK_COMB (@lem3544860) (@lem3544859 A u x'')). Qed.
Lemma lem3544862 {A B : Type'} (u : A -> Prop) (x'' : A) (f : A -> B) (g : type686 A) (s : A -> Prop) (x''' : A) : (term5349 A B u x'' f g s x''') = (term5525 A B u x'' f g s x''').
Proof. exact (MK_COMB (@lem3544861 A u x'') (@lem3544851 A B x'' f g s x''')). Qed.
Lemma lem3544863 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem3544864 {A B : Type'} (u : A -> Prop) (x'' : A) (f : A -> B) (g : type686 A) (s : A -> Prop) (x''' : A) : (term5364 A B u x'' f g s x''') = (term5526 A B u x'' f g s x''').
Proof. exact (MK_COMB (@lem3544863) (@lem3544862 A B u x'' f g s x''')). Qed.
Lemma lem3544865 {A B : Type'} (u : A -> Prop) (f : A -> B) (x''' : A) (g : type686 A) (s : A -> Prop) (t : A -> Prop) (x'' : A) : (term5378 A B u f x''' g s t x'') = (term5527 A B u f x''' g s t x'').
Proof. exact (MK_COMB (@lem3544864 A B u x'' f g s x''') (@lem3544797 A g s t x'')). Qed.
Lemma lem3544866 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem3544867 {A B : Type'} (u : A -> Prop) (f : A -> B) (x''' : A) (g : type686 A) (s : A -> Prop) (t : A -> Prop) (x'' : A) : (term5430 A B u f x''' g s t x'') = (term5528 A B u f x''' g s t x'').
Proof. exact (MK_COMB (@lem3544866) (@lem3544865 A B u f x''' g s t x'')). Qed.
Lemma lem3544868 {A B : Type'} (f : A -> B) (x''' : A) (g : type686 A) (t : A -> Prop) (s : A -> Prop) (u : A -> Prop) (x'' : A) : (term5432 A B f x''' g t s u x'') = (term5529 A B f x''' g t s u x'').
Proof. exact (MK_COMB (@lem3544867 A B u f x''' g s t x'') (@lem3544766 A s u x'')). Qed.
Lemma lem3544869 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem3544874 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem3544875 {A : Type'} (f : A -> Prop) (x : A) : (f x) = (@I (A -> Prop) f x).
Proof. exact (@lem3544874 A Prop f x). Qed.
Lemma lem3544877 {A : Type'} (u : A -> Prop) (x : A) : (u x) = (@I (A -> Prop) u x).
Proof. exact (@lem3544875 A u x). Qed.
Lemma lem3544878 {A : Type'} (u : A -> Prop) (x : A) : (term618 A u x) = (term619 A u x).
Proof. exact (MK_COMB (@lem3544869) (@lem3544877 A u x)). Qed.
Lemma lem3544883 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem3544884 {A : Type'} (f : A -> Prop) (x : A) : (f x) = (@I (A -> Prop) f x).
Proof. exact (@lem3544883 A Prop f x). Qed.
Lemma lem3544886 {A : Type'} (t : A -> Prop) (x : A) : (t x) = (@I (A -> Prop) t x).
Proof. exact (@lem3544884 A t x). Qed.
Lemma lem3544891 {A : Type'} (t : A -> Prop) (s : A -> Prop) : (t = s) = (t = s).
Proof. exact (eq_refl (t = s)). Qed.
Lemma lem3544892 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem3544897 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem3544898 {A : Type'} (f : type686 A) (x : A -> Prop) : (f x) = (@I ((A -> Prop) -> Prop) f x).
Proof. exact (@lem3544897 (A -> Prop) Prop f x). Qed.
Lemma lem3544900 {A : Type'} (g : type686 A) (t : A -> Prop) : (g t) = (@I ((A -> Prop) -> Prop) g t).
Proof. exact (@lem3544898 A g t). Qed.
Lemma lem3544901 {A : Type'} (g : type686 A) (t : A -> Prop) : (term207 A g t) = (term640 A g t).
Proof. exact (MK_COMB (@lem3544892) (@lem3544900 A g t)). Qed.
Lemma lem3544902 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem3544903 {A : Type'} (g : type686 A) (t : A -> Prop) : (term332 A g t) = (term641 A g t).
Proof. exact (MK_COMB (@lem3544902) (@lem3544901 A g t)). Qed.
Lemma lem3544904 {A : Type'} (g : type686 A) (t : A -> Prop) (s : A -> Prop) : (term5164 A g t s) = (term5519 A g t s).
Proof. exact (MK_COMB (@lem3544903 A g t) (@lem3544891 A t s)). Qed.
Lemma lem3544905 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem3544906 {A : Type'} (g : type686 A) (t : A -> Prop) (s : A -> Prop) : (term5166 A g t s) = (term5520 A g t s).
Proof. exact (MK_COMB (@lem3544905) (@lem3544904 A g t s)). Qed.
Lemma lem3544907 {A : Type'} (g : type686 A) (s : A -> Prop) (t : A -> Prop) (x : A) : (term5210 A g s t x) = (term5521 A g s t x).
Proof. exact (MK_COMB (@lem3544906 A g t s) (@lem3544886 A t x)). Qed.
Lemma lem3544908 {A : Type'} (g : type686 A) (s : A -> Prop) (x : A) : (term5211 A g s x) = (term5522 A g s x).
Proof. exact (fun_ext (fun t : A -> Prop => @lem3544907 A g s t x)). Qed.
Lemma lem3544909 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem3544910 {A : Type'} (g : type686 A) (s : A -> Prop) (x : A) : (term5212 A g s x) = (term5523 A g s x).
Proof. exact (MK_COMB (@lem3544909 A) (@lem3544908 A g s x)). Qed.
Lemma lem3544911 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem3544912 {A : Type'} (g : type686 A) (s : A -> Prop) (x : A) : (term5214 A g s x) = (term5530 A g s x).
Proof. exact (MK_COMB (@lem3544911) (@lem3544910 A g s x)). Qed.
Lemma lem3544913 {A : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) (x : A) : (term5216 A g s u x) = (term5531 A g s u x).
Proof. exact (MK_COMB (@lem3544912 A g s x) (@lem3544878 A u x)). Qed.
Lemma lem3544914 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem3544919 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem3544920 {A : Type'} (f : A -> Prop) (x : A) : (f x) = (@I (A -> Prop) f x).
Proof. exact (@lem3544919 A Prop f x). Qed.
Lemma lem3544922 {A : Type'} (s : A -> Prop) (x : A) : (s x) = (@I (A -> Prop) s x).
Proof. exact (@lem3544920 A s x). Qed.
Lemma lem3544923 {A : Type'} (s : A -> Prop) (x : A) : (term618 A s x) = (term619 A s x).
Proof. exact (MK_COMB (@lem3544914) (@lem3544922 A s x)). Qed.
Lemma lem3544928 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem3544929 {A : Type'} (f : A -> Prop) (x : A) : (f x) = (@I (A -> Prop) f x).
Proof. exact (@lem3544928 A Prop f x). Qed.
Lemma lem3544931 {A : Type'} (s : A -> Prop) (x' : A) : (s x') = (@I (A -> Prop) s x').
Proof. exact (@lem3544929 A s x'). Qed.
Lemma lem3544932 {B : Type'} : (@eq B) = (@eq B).
Proof. exact (eq_refl (@eq B)). Qed.
Lemma lem3544937 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem3544939 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (@lem3544937 A B f x). Qed.
Lemma lem3544944 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem3544945 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (@lem3544944 A B f x). Qed.
Lemma lem3544947 {A B : Type'} (f : A -> B) (x' : A) : (f x') = (@I (A -> B) f x').
Proof. exact (@lem3544945 A B f x'). Qed.
Lemma lem3544948 {A B : Type'} (f : A -> B) (x : A) : (term620 A B f x) = (term621 A B f x).
Proof. exact (MK_COMB (@lem3544932 B) (@lem3544939 A B f x)). Qed.
Lemma lem3544949 {A B : Type'} (x : A) (f : A -> B) (x' : A) : ((f x) = (f x')) = ((@I (A -> B) f x) = (@I (A -> B) f x')).
Proof. exact (MK_COMB (@lem3544948 A B f x) (@lem3544947 A B f x')). Qed.
Lemma lem3544950 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem3544951 {A B : Type'} (x : A) (f : A -> B) (x' : A) : (term235 A B x f x') = (term971 A B x f x').
Proof. exact (MK_COMB (@lem3544950) (@lem3544949 A B x f x')). Qed.
Lemma lem3544952 {A B : Type'} (x : A) (f : A -> B) (s : A -> Prop) (x' : A) : (term237 A B x f s x') = (term844 A B x f s x').
Proof. exact (MK_COMB (@lem3544951 A B x f x') (@lem3544931 A s x')). Qed.
Lemma lem3544957 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem3544958 {A : Type'} (f : A -> Prop) (x : A) : (f x) = (@I (A -> Prop) f x).
Proof. exact (@lem3544957 A Prop f x). Qed.
Lemma lem3544960 {A : Type'} (u : A -> Prop) (x : A) : (u x) = (@I (A -> Prop) u x).
Proof. exact (@lem3544958 A u x). Qed.
Lemma lem3544961 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem3544962 {A : Type'} (u : A -> Prop) (x : A) : (term234 A u x) = (term966 A u x).
Proof. exact (MK_COMB (@lem3544961) (@lem3544960 A u x)). Qed.
Lemma lem3544963 {A B : Type'} (u : A -> Prop) (x : A) (f : A -> B) (s : A -> Prop) (x' : A) : (term5280 A B u x f s x') = (term972 A B u x f s x').
Proof. exact (MK_COMB (@lem3544962 A u x) (@lem3544952 A B x f s x')). Qed.
Lemma lem3544964 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem3544965 {A B : Type'} (u : A -> Prop) (x : A) (f : A -> B) (s : A -> Prop) (x' : A) : (term5295 A B u x f s x') = (term5532 A B u x f s x').
Proof. exact (MK_COMB (@lem3544964) (@lem3544963 A B u x f s x')). Qed.
Lemma lem3544966 {A B : Type'} (u : A -> Prop) (f : A -> B) (x' : A) (s : A -> Prop) (x : A) : (term5297 A B u f x' s x) = (term5533 A B u f x' s x).
Proof. exact (MK_COMB (@lem3544965 A B u x f s x') (@lem3544923 A s x)). Qed.
Lemma lem3544967 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem3544968 {A B : Type'} (u : A -> Prop) (f : A -> B) (x' : A) (s : A -> Prop) (x : A) : (term5332 A B u f x' s x) = (term5534 A B u f x' s x).
Proof. exact (MK_COMB (@lem3544967) (@lem3544966 A B u f x' s x)). Qed.
Lemma lem3544969 {A B : Type'} (f : A -> B) (x' : A) (g : type686 A) (s : A -> Prop) (u : A -> Prop) (x : A) : (term5334 A B f x' g s u x) = (term5535 A B f x' g s u x).
Proof. exact (MK_COMB (@lem3544968 A B u f x' s x) (@lem3544913 A g s u x)). Qed.
Lemma lem3544970 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem3544971 {A B : Type'} (f : A -> B) (x' : A) (g : type686 A) (s : A -> Prop) (u : A -> Prop) (x : A) : (term5465 A B f x' g s u x) = (term5536 A B f x' g s u x).
Proof. exact (MK_COMB (@lem3544970) (@lem3544969 A B f x' g s u x)). Qed.
Lemma lem3544972 {A B : Type'} (x' : A) (x : A) (f : A -> B) (x''' : A) (g : type686 A) (t : A -> Prop) (s : A -> Prop) (u : A -> Prop) (x'' : A) : (term5503 A B x' x f x''' g t s u x'') = (term5537 A B x' x f x''' g t s u x'').
Proof. exact (MK_COMB (@lem3544971 A B f x' g s u x) (@lem3544868 A B f x''' g t s u x'')). Qed.
Lemma lem3544973 {A B : Type'} (x' : A) (x : A) (f : A -> B) (x''' : A) (g : type686 A) (t : A -> Prop) (s : A -> Prop) (u : A -> Prop) (x'' : A) (h1 : term5503 A B x' x f x''' g t s u x'') : term5537 A B x' x f x''' g t s u x''.
Proof. exact (EQ_MP (@lem3544972 A B x' x f x''' g t s u x'') (@lem3544744 A B x' x f x''' g t s u x'' h1)). Qed.
Lemma lem3544978 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem3544979 {A : Type'} (f : A -> Prop) (x : A) : (f x) = (@I (A -> Prop) f x).
Proof. exact (@lem3544978 A Prop f x). Qed.
Lemma lem3544981 {A : Type'} (t : A -> Prop) (x : A) : (t x) = (@I (A -> Prop) t x).
Proof. exact (@lem3544979 A t x). Qed.
Lemma lem3544982 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem3544987 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem3544988 {A : Type'} (f : A -> Prop) (x : A) : (f x) = (@I (A -> Prop) f x).
Proof. exact (@lem3544987 A Prop f x). Qed.
Lemma lem3544990 {A : Type'} (t : A -> Prop) (x' : A) : (t x') = (@I (A -> Prop) t x').
Proof. exact (@lem3544988 A t x'). Qed.
Lemma lem3544991 {A : Type'} (t : A -> Prop) (x' : A) : (term618 A t x') = (term619 A t x').
Proof. exact (MK_COMB (@lem3544982) (@lem3544990 A t x')). Qed.
Lemma lem3544992 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem3544993 {B : Type'} : (@eq B) = (@eq B).
Proof. exact (eq_refl (@eq B)). Qed.
Lemma lem3544998 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem3545000 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (@lem3544998 A B f x). Qed.
Lemma lem3545005 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem3545006 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (@lem3545005 A B f x). Qed.
Lemma lem3545008 {A B : Type'} (f : A -> B) (x' : A) : (f x') = (@I (A -> B) f x').
Proof. exact (@lem3545006 A B f x'). Qed.
Lemma lem3545009 {A B : Type'} (f : A -> B) (x : A) : (term620 A B f x) = (term621 A B f x).
Proof. exact (MK_COMB (@lem3544993 B) (@lem3545000 A B f x)). Qed.
Lemma lem3545010 {A B : Type'} (x : A) (f : A -> B) (x' : A) : ((f x) = (f x')) = ((@I (A -> B) f x) = (@I (A -> B) f x')).
Proof. exact (MK_COMB (@lem3545009 A B f x) (@lem3545008 A B f x')). Qed.
Lemma lem3545011 {A B : Type'} (x : A) (f : A -> B) (x' : A) : (term622 A B x f x') = (term623 A B x f x').
Proof. exact (MK_COMB (@lem3544992) (@lem3545010 A B x f x')). Qed.
Lemma lem3545012 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem3545013 {A B : Type'} (x : A) (f : A -> B) (x' : A) : (term624 A B x f x') = (term625 A B x f x').
Proof. exact (MK_COMB (@lem3545012) (@lem3545011 A B x f x')). Qed.
Lemma lem3545014 {A B : Type'} (x : A) (f : A -> B) (t : A -> Prop) (x' : A) : (term310 A B x f t x') = (term626 A B x f t x').
Proof. exact (MK_COMB (@lem3545013 A B x f x') (@lem3544991 A t x')). Qed.
Lemma lem3545015 {A B : Type'} (x : A) (f : A -> B) (t : A -> Prop) : (term318 A B x f t) = (term627 A B x f t).
Proof. exact (fun_ext (fun x' : A => @lem3545014 A B x f t x')). Qed.
Lemma lem3545016 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem3545017 {A B : Type'} (x : A) (f : A -> B) (t : A -> Prop) : (term319 A B x f t) = (term628 A B x f t).
Proof. exact (MK_COMB (@lem3545016 A) (@lem3545015 A B x f t)). Qed.
Lemma lem3545018 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem3545023 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem3545024 {A : Type'} (f : A -> Prop) (x : A) : (f x) = (@I (A -> Prop) f x).
Proof. exact (@lem3545023 A Prop f x). Qed.
Lemma lem3545026 {A : Type'} (u : A -> Prop) (x : A) : (u x) = (@I (A -> Prop) u x).
Proof. exact (@lem3545024 A u x). Qed.
Lemma lem3545027 {A : Type'} (u : A -> Prop) (x : A) : (term618 A u x) = (term619 A u x).
Proof. exact (MK_COMB (@lem3545018) (@lem3545026 A u x)). Qed.
Lemma lem3545028 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem3545029 {A : Type'} (u : A -> Prop) (x : A) : (term320 A u x) = (term629 A u x).
Proof. exact (MK_COMB (@lem3545028) (@lem3545027 A u x)). Qed.
Lemma lem3545030 {A B : Type'} (u : A -> Prop) (x : A) (f : A -> B) (t : A -> Prop) : (term322 A B u x f t) = (term630 A B u x f t).
Proof. exact (MK_COMB (@lem3545029 A u x) (@lem3545017 A B x f t)). Qed.
Lemma lem3545031 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem3545032 {A B : Type'} (u : A -> Prop) (x : A) (f : A -> B) (t : A -> Prop) : (term325 A B u x f t) = (term631 A B u x f t).
Proof. exact (MK_COMB (@lem3545031) (@lem3545030 A B u x f t)). Qed.
Lemma lem3545033 {A B : Type'} (u : A -> Prop) (f : A -> B) (t : A -> Prop) (x : A) : (term327 A B u f t x) = (term632 A B u f t x).
Proof. exact (MK_COMB (@lem3545032 A B u x f t) (@lem3544981 A t x)). Qed.
Lemma lem3545034 {A B : Type'} (u : A -> Prop) (f : A -> B) (t : A -> Prop) : (term328 A B u f t) = (term633 A B u f t).
Proof. exact (fun_ext (fun x : A => @lem3545033 A B u f t x)). Qed.
Lemma lem3545035 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem3545036 {A B : Type'} (u : A -> Prop) (f : A -> B) (t : A -> Prop) : (term329 A B u f t) = (term634 A B u f t).
Proof. exact (MK_COMB (@lem3545035 A) (@lem3545034 A B u f t)). Qed.
Lemma lem3545041 {A : Type'} (t : A -> Prop) (s : A -> Prop) : (t = s) = (t = s).
Proof. exact (eq_refl (t = s)). Qed.
Lemma lem3545042 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem3545047 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem3545048 {A : Type'} (f : type686 A) (x : A -> Prop) : (f x) = (@I ((A -> Prop) -> Prop) f x).
Proof. exact (@lem3545047 (A -> Prop) Prop f x). Qed.
Lemma lem3545050 {A : Type'} (g : type686 A) (t : A -> Prop) : (g t) = (@I ((A -> Prop) -> Prop) g t).
Proof. exact (@lem3545048 A g t). Qed.
Lemma lem3545051 {A : Type'} (g : type686 A) (t : A -> Prop) : (term207 A g t) = (term640 A g t).
Proof. exact (MK_COMB (@lem3545042) (@lem3545050 A g t)). Qed.
Lemma lem3545052 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem3545053 {A : Type'} (g : type686 A) (t : A -> Prop) : (term332 A g t) = (term641 A g t).
Proof. exact (MK_COMB (@lem3545052) (@lem3545051 A g t)). Qed.
Lemma lem3545054 {A : Type'} (g : type686 A) (t : A -> Prop) (s : A -> Prop) : (term5164 A g t s) = (term5519 A g t s).
Proof. exact (MK_COMB (@lem3545053 A g t) (@lem3545041 A t s)). Qed.
Lemma lem3545055 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem3545056 {A : Type'} (g : type686 A) (t : A -> Prop) (s : A -> Prop) : (term5166 A g t s) = (term5520 A g t s).
Proof. exact (MK_COMB (@lem3545055) (@lem3545054 A g t s)). Qed.
Lemma lem3545057 {A B : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) (t : A -> Prop) : (term5172 A B g s u f t) = (term5538 A B g s u f t).
Proof. exact (MK_COMB (@lem3545056 A g t s) (@lem3545036 A B u f t)). Qed.
Lemma lem3545058 {A B : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) : (term5173 A B g s u f) = (term5539 A B g s u f).
Proof. exact (fun_ext (fun t : A -> Prop => @lem3545057 A B g s u f t)). Qed.
Lemma lem3545059 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem3545060 {A B : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) : (term5174 A B g s u f) = (term5540 A B g s u f).
Proof. exact (MK_COMB (@lem3545059 A) (@lem3545058 A B g s u f)). Qed.
Lemma lem3545065 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem3545066 {A : Type'} (f : A -> Prop) (x : A) : (f x) = (@I (A -> Prop) f x).
Proof. exact (@lem3545065 A Prop f x). Qed.
Lemma lem3545068 {A : Type'} (u : A -> Prop) (x : A) : (u x) = (@I (A -> Prop) u x).
Proof. exact (@lem3545066 A u x). Qed.
Lemma lem3545069 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem3545074 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem3545075 {A : Type'} (f : A -> Prop) (x : A) : (f x) = (@I (A -> Prop) f x).
Proof. exact (@lem3545074 A Prop f x). Qed.
Lemma lem3545077 {A : Type'} (s : A -> Prop) (x : A) : (s x) = (@I (A -> Prop) s x).
Proof. exact (@lem3545075 A s x). Qed.
Lemma lem3545078 {A : Type'} (s : A -> Prop) (x : A) : (term618 A s x) = (term619 A s x).
Proof. exact (MK_COMB (@lem3545069) (@lem3545077 A s x)). Qed.
Lemma lem3545079 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem3545080 {A : Type'} (s : A -> Prop) (x : A) : (term320 A s x) = (term629 A s x).
Proof. exact (MK_COMB (@lem3545079) (@lem3545078 A s x)). Qed.
Lemma lem3545081 {A : Type'} (s : A -> Prop) (u : A -> Prop) (x : A) : (term306 A s u x) = (term635 A s u x).
Proof. exact (MK_COMB (@lem3545080 A s x) (@lem3545068 A u x)). Qed.
Lemma lem3545082 {A : Type'} (s : A -> Prop) (u : A -> Prop) : (term307 A s u) = (term636 A s u).
Proof. exact (fun_ext (fun x : A => @lem3545081 A s u x)). Qed.
Lemma lem3545083 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem3545084 {A : Type'} (s : A -> Prop) (u : A -> Prop) : (term308 A s u) = (term637 A s u).
Proof. exact (MK_COMB (@lem3545083 A) (@lem3545082 A s u)). Qed.
Lemma lem3545085 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem3545086 {A : Type'} (s : A -> Prop) (u : A -> Prop) : (term330 A s u) = (term638 A s u).
Proof. exact (MK_COMB (@lem3545085) (@lem3545084 A s u)). Qed.
Lemma lem3545087 {A B : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) : (term5175 A B g s u f) = (term5541 A B g s u f).
Proof. exact (MK_COMB (@lem3545086 A s u) (@lem3545060 A B g s u f)). Qed.
Lemma lem3545092 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem3545093 {A : Type'} (f : A -> Prop) (x : A) : (f x) = (@I (A -> Prop) f x).
Proof. exact (@lem3545092 A Prop f x). Qed.
Lemma lem3545095 {A : Type'} (u : A -> Prop) (x : A) : (u x) = (@I (A -> Prop) u x).
Proof. exact (@lem3545093 A u x). Qed.
Lemma lem3545096 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem3545101 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem3545102 {A : Type'} (f : A -> Prop) (x : A) : (f x) = (@I (A -> Prop) f x).
Proof. exact (@lem3545101 A Prop f x). Qed.
Lemma lem3545104 {A : Type'} (t : A -> Prop) (x : A) : (t x) = (@I (A -> Prop) t x).
Proof. exact (@lem3545102 A t x). Qed.
Lemma lem3545105 {A : Type'} (t : A -> Prop) (x : A) : (term618 A t x) = (term619 A t x).
Proof. exact (MK_COMB (@lem3545096) (@lem3545104 A t x)). Qed.
Lemma lem3545106 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem3545107 {A : Type'} (t : A -> Prop) (x : A) : (term320 A t x) = (term629 A t x).
Proof. exact (MK_COMB (@lem3545106) (@lem3545105 A t x)). Qed.
Lemma lem3545108 {A : Type'} (t : A -> Prop) (u : A -> Prop) (x : A) : (term306 A t u x) = (term635 A t u x).
Proof. exact (MK_COMB (@lem3545107 A t x) (@lem3545095 A u x)). Qed.
Lemma lem3545109 {A : Type'} (t : A -> Prop) (u : A -> Prop) : (term307 A t u) = (term636 A t u).
Proof. exact (fun_ext (fun x : A => @lem3545108 A t u x)). Qed.
Lemma lem3545110 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem3545111 {A : Type'} (t : A -> Prop) (u : A -> Prop) : (term308 A t u) = (term637 A t u).
Proof. exact (MK_COMB (@lem3545110 A) (@lem3545109 A t u)). Qed.
Lemma lem3545116 {A : Type'} (t : A -> Prop) (s : A -> Prop) : (t = s) = (t = s).
Proof. exact (eq_refl (t = s)). Qed.
Lemma lem3545117 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem3545122 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem3545123 {A : Type'} (f : type686 A) (x : A -> Prop) : (f x) = (@I ((A -> Prop) -> Prop) f x).
Proof. exact (@lem3545122 (A -> Prop) Prop f x). Qed.
Lemma lem3545125 {A : Type'} (g : type686 A) (t : A -> Prop) : (g t) = (@I ((A -> Prop) -> Prop) g t).
Proof. exact (@lem3545123 A g t). Qed.
Lemma lem3545126 {A : Type'} (g : type686 A) (t : A -> Prop) : (term207 A g t) = (term640 A g t).
Proof. exact (MK_COMB (@lem3545117) (@lem3545125 A g t)). Qed.
Lemma lem3545127 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem3545128 {A : Type'} (g : type686 A) (t : A -> Prop) : (term332 A g t) = (term641 A g t).
Proof. exact (MK_COMB (@lem3545127) (@lem3545126 A g t)). Qed.
Lemma lem3545129 {A : Type'} (g : type686 A) (t : A -> Prop) (s : A -> Prop) : (term5164 A g t s) = (term5519 A g t s).
Proof. exact (MK_COMB (@lem3545128 A g t) (@lem3545116 A t s)). Qed.
Lemma lem3545130 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem3545131 {A : Type'} (g : type686 A) (t : A -> Prop) (s : A -> Prop) : (term5166 A g t s) = (term5520 A g t s).
Proof. exact (MK_COMB (@lem3545130) (@lem3545129 A g t s)). Qed.
Lemma lem3545132 {A : Type'} (g : type686 A) (s : A -> Prop) (t : A -> Prop) (u : A -> Prop) : (term5168 A g s t u) = (term5542 A g s t u).
Proof. exact (MK_COMB (@lem3545131 A g t s) (@lem3545111 A t u)). Qed.
Lemma lem3545133 {A : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) : (term5169 A g s u) = (term5543 A g s u).
Proof. exact (fun_ext (fun t : A -> Prop => @lem3545132 A g s t u)). Qed.
Lemma lem3545134 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem3545135 {A : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) : (term5170 A g s u) = (term5544 A g s u).
Proof. exact (MK_COMB (@lem3545134 A) (@lem3545133 A g s u)). Qed.
Lemma lem3545136 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem3545137 {A : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) : (term5176 A g s u) = (term5545 A g s u).
Proof. exact (MK_COMB (@lem3545136) (@lem3545135 A g s u)). Qed.
Lemma lem3545138 {A B : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) : (term5177 A B g s u f) = (term5546 A B g s u f).
Proof. exact (MK_COMB (@lem3545137 A g s u) (@lem3545087 A B g s u f)). Qed.
Lemma lem3545145 {A : Type'} (x'''' : A -> Prop) (s : A -> Prop) : (term5040 A x'''' s) = (term5040 A x'''' s).
Proof. exact (eq_refl (term5040 A x'''' s)). Qed.
Lemma lem3545150 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem3545151 {A : Type'} (f : type686 A) (x : A -> Prop) : (f x) = (@I ((A -> Prop) -> Prop) f x).
Proof. exact (@lem3545150 (A -> Prop) Prop f x). Qed.
Lemma lem3545153 {A : Type'} (g : type686 A) (x'''' : A -> Prop) : (g x'''') = (@I ((A -> Prop) -> Prop) g x'''').
Proof. exact (@lem3545151 A g x''''). Qed.
Lemma lem3545154 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem3545155 {A : Type'} (g : type686 A) (x'''' : A -> Prop) : (term372 A g x'''') = (term678 A g x'''').
Proof. exact (MK_COMB (@lem3545154) (@lem3545153 A g x'''')). Qed.
Lemma lem3545156 {A : Type'} (g : type686 A) (x'''' : A -> Prop) (s : A -> Prop) : (term5041 A g x'''' s) = (term5516 A g x'''' s).
Proof. exact (MK_COMB (@lem3545155 A g x'''') (@lem3545145 A x'''' s)). Qed.
Lemma lem3545157 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem3545158 {A : Type'} (g : type686 A) (x'''' : A -> Prop) (s : A -> Prop) : (term5191 A g x'''' s) = (term5517 A g x'''' s).
Proof. exact (MK_COMB (@lem3545157) (@lem3545156 A g x'''' s)). Qed.
Lemma lem3545159 {A B : Type'} (x'''' : A -> Prop) (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) : (term5193 A B x'''' g s u f) = (term5547 A B x'''' g s u f).
Proof. exact (MK_COMB (@lem3545158 A g x'''' s) (@lem3545138 A B g s u f)). Qed.
Lemma lem3545160 {A B : Type'} (x'''' : A -> Prop) (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) (h1 : term5193 A B x'''' g s u f) : term5547 A B x'''' g s u f.
Proof. exact (EQ_MP (@lem3545159 A B x'''' g s u f) (@lem3544745 A B x'''' g s u f h1)). Qed.
Lemma lem3545161 {A B : Type'} (x'''' : A -> Prop) (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) (h1 : term5193 A B x'''' g s u f) : term5546 A B g s u f.
Proof. exact (proj2 (@lem3545160 A B x'''' g s u f h1)). Qed.
Lemma lem3545163 {A B : Type'} (x'''' : A -> Prop) (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) (h1 : term5193 A B x'''' g s u f) : term5541 A B g s u f.
Proof. exact (proj2 (@lem3545161 A B x'''' g s u f h1)). Qed.
Lemma lem3545164 {A B : Type'} (x'''' : A -> Prop) (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) (h1 : term5193 A B x'''' g s u f) : term5544 A g s u.
Proof. exact (proj1 (@lem3545161 A B x'''' g s u f h1)). Qed.
Lemma lem3545165 {A B : Type'} (x'''' : A -> Prop) (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) (h1 : term5193 A B x'''' g s u f) : term5540 A B g s u f.
Proof. exact (proj2 (@lem3545163 A B x'''' g s u f h1)). Qed.
Lemma lem3545166 {A B : Type'} (x'''' : A -> Prop) (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) (h1 : term5193 A B x'''' g s u f) : term637 A s u.
Proof. exact (proj1 (@lem3545163 A B x'''' g s u f h1)). Qed.
Lemma lem3545169 {A B : Type'} (x' : A) (x : A) (f : A -> B) (x''' : A) (g : type686 A) (t : A -> Prop) (s : A -> Prop) (u : A -> Prop) (x'' : A) (h1 : term5503 A B x' x f x''' g t s u x'') : term5529 A B f x''' g t s u x''.
Proof. exact (proj2 (@lem3544973 A B x' x f x''' g t s u x'' h1)). Qed.
Lemma lem3545170 {A B : Type'} (x' : A) (x : A) (f : A -> B) (x''' : A) (g : type686 A) (t : A -> Prop) (s : A -> Prop) (u : A -> Prop) (x'' : A) (h1 : term5503 A B x' x f x''' g t s u x'') : term5535 A B f x' g s u x.
Proof. exact (proj1 (@lem3544973 A B x' x f x''' g t s u x'' h1)). Qed.
Lemma lem3545171 {A B : Type'} (u : A -> Prop) (f : A -> B) (x''' : A) (g : type686 A) (s : A -> Prop) (t : A -> Prop) (x'' : A) (h1 : term5527 A B u f x''' g s t x'') : term5527 A B u f x''' g s t x''.
Proof. exact (h1). Qed.
Lemma lem3545172 {A : Type'} (s : A -> Prop) (u : A -> Prop) (x'' : A) (h1 : term5515 A s u x'') : term5515 A s u x''.
Proof. exact (h1). Qed.
Lemma lem3545173 {A B : Type'} (u : A -> Prop) (f : A -> B) (x''' : A) (g : type686 A) (s : A -> Prop) (t : A -> Prop) (x'' : A) (h1 : term5527 A B u f x''' g s t x'') : term5518 A g s t x''.
Proof. exact (proj2 (@lem3545171 A B u f x''' g s t x'' h1)). Qed.
Lemma lem3545174 {A B : Type'} (u : A -> Prop) (f : A -> B) (x''' : A) (g : type686 A) (s : A -> Prop) (t : A -> Prop) (x'' : A) (h1 : term5527 A B u f x''' g s t x'') : term5525 A B u x'' f g s x'''.
Proof. exact (proj1 (@lem3545171 A B u f x''' g s t x'' h1)). Qed.
Lemma lem3545176 {A B : Type'} (u : A -> Prop) (f : A -> B) (x''' : A) (g : type686 A) (s : A -> Prop) (t : A -> Prop) (x'' : A) (h1 : term5527 A B u f x''' g s t x'') : term5516 A g t s.
Proof. exact (proj1 (@lem3545173 A B u f x''' g s t x'' h1)). Qed.
Lemma lem3545179 {A B : Type'} (u : A -> Prop) (f : A -> B) (x''' : A) (g : type686 A) (s : A -> Prop) (t : A -> Prop) (x'' : A) (h1 : term5527 A B u f x''' g s t x'') : term5524 A B x'' f g s x'''.
Proof. exact (proj2 (@lem3545174 A B u f x''' g s t x'' h1)). Qed.
Lemma lem3545181 {A B : Type'} (u : A -> Prop) (f : A -> B) (x''' : A) (g : type686 A) (s : A -> Prop) (t : A -> Prop) (x'' : A) (h1 : term5527 A B u f x''' g s t x'') : term5523 A g s x'''.
Proof. exact (proj2 (@lem3545179 A B u f x''' g s t x'' h1)). Qed.
Lemma lem3545184 {A : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) (x : A) (h1 : term5531 A g s u x) : term5531 A g s u x.
Proof. exact (h1). Qed.
Lemma lem3545192 {A : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) (x : A) (h1 : term5531 A g s u x) : term5523 A g s x.
Proof. exact (proj1 (@lem3545184 A g s u x h1)). Qed.
Lemma lem3545269 {A : Type'} (P : Prop) (Q : A -> Prop) : (term689 A P Q) = (term690 A P Q).
Proof. exact (EQ_MP (@lem19007 A P Q) (@lem19006 A P Q)). Qed.
Lemma lem3545270 {A : Type'} (P : Prop) (Q : A -> Prop) : (term689 A P Q) = (term690 A P Q).
Proof. exact (@lem3545269 A P Q). Qed.
Lemma lem3545271 {A B : Type'} (u : A -> Prop) (x : A) (f : A -> B) (t : A -> Prop) : (term691 A B u x f t) = (term692 A B u x f t).
Proof. exact (@lem3545270 A (term619 A u x) (term627 A B x f t)). Qed.
Lemma lem3545272 {A B : Type'} (x : A) (f : A -> B) (t : A -> Prop) (x' : A) : (term693 A B x f t x') = (term626 A B x f t x').
Proof. exact (eq_refl (term693 A B x f t x')). Qed.
Lemma lem3545273 {A B : Type'} (x : A) (f : A -> B) (t : A -> Prop) : (term694 A B x f t) = (term627 A B x f t).
Proof. exact (fun_ext (fun x' : A => @lem3545272 A B x f t x')). Qed.
Lemma lem3545274 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem3545275 {A B : Type'} (x : A) (f : A -> B) (t : A -> Prop) : (term695 A B x f t) = (term628 A B x f t).
Proof. exact (MK_COMB (@lem3545274 A) (@lem3545273 A B x f t)). Qed.
Lemma lem3545276 {A : Type'} (u : A -> Prop) (x : A) : (term629 A u x) = (term629 A u x).
Proof. exact (eq_refl (term629 A u x)). Qed.
Lemma lem3545277 {A B : Type'} (u : A -> Prop) (x : A) (f : A -> B) (t : A -> Prop) : (term691 A B u x f t) = (term630 A B u x f t).
Proof. exact (MK_COMB (@lem3545276 A u x) (@lem3545275 A B x f t)). Qed.
Lemma lem3545278 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem3545279 {A B : Type'} (u : A -> Prop) (x : A) (f : A -> B) (t : A -> Prop) : (term696 A B u x f t) = (term697 A B u x f t).
Proof. exact (MK_COMB (@lem3545278) (@lem3545277 A B u x f t)). Qed.
Lemma lem3545280 {A B : Type'} (x : A) (f : A -> B) (t : A -> Prop) (x' : A) : (term693 A B x f t x') = (term626 A B x f t x').
Proof. exact (eq_refl (term693 A B x f t x')). Qed.
Lemma lem3545281 {A : Type'} (u : A -> Prop) (x : A) : (term629 A u x) = (term629 A u x).
Proof. exact (eq_refl (term629 A u x)). Qed.
Lemma lem3545282 {A B : Type'} (u : A -> Prop) (x : A) (f : A -> B) (t : A -> Prop) (x' : A) : (term698 A B u x f t x') = (term699 A B u x f t x').
Proof. exact (MK_COMB (@lem3545281 A u x) (@lem3545280 A B x f t x')). Qed.
Lemma lem3545283 {A B : Type'} (u : A -> Prop) (x : A) (f : A -> B) (t : A -> Prop) : (term700 A B u x f t) = (term701 A B u x f t).
Proof. exact (fun_ext (fun x' : A => @lem3545282 A B u x f t x')). Qed.
Lemma lem3545284 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem3545285 {A B : Type'} (u : A -> Prop) (x : A) (f : A -> B) (t : A -> Prop) : (term692 A B u x f t) = (term702 A B u x f t).
Proof. exact (MK_COMB (@lem3545284 A) (@lem3545283 A B u x f t)). Qed.
Lemma lem3545286 {A B : Type'} (u : A -> Prop) (x : A) (f : A -> B) (t : A -> Prop) : ((term691 A B u x f t) = (term692 A B u x f t)) = ((term630 A B u x f t) = (term702 A B u x f t)).
Proof. exact (MK_COMB (@lem3545279 A B u x f t) (@lem3545285 A B u x f t)). Qed.
Lemma lem3545287 {A B : Type'} (u : A -> Prop) (x : A) (f : A -> B) (t : A -> Prop) : (term630 A B u x f t) = (term702 A B u x f t).
Proof. exact (EQ_MP (@lem3545286 A B u x f t) (@lem3545271 A B u x f t)). Qed.
Lemma lem3545288 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem3545289 {A B : Type'} (u : A -> Prop) (x : A) (f : A -> B) (t : A -> Prop) : (term631 A B u x f t) = (term703 A B u x f t).
Proof. exact (MK_COMB (@lem3545288) (@lem3545287 A B u x f t)). Qed.
Lemma lem3545290 {A : Type'} (t : A -> Prop) (x : A) : (@I (A -> Prop) t x) = (@I (A -> Prop) t x).
Proof. exact (eq_refl (@I (A -> Prop) t x)). Qed.
Lemma lem3545291 {A B : Type'} (u : A -> Prop) (f : A -> B) (t : A -> Prop) (x : A) : (term632 A B u f t x) = (term704 A B u f t x).
Proof. exact (MK_COMB (@lem3545289 A B u x f t) (@lem3545290 A t x)). Qed.
Lemma lem3545293 {A : Type'} (P : A -> Prop) (Q : Prop) : (term705 A P Q) = (term706 A P Q).
Proof. exact (EQ_MP (@lem19013 A P Q) (@lem19012 A P Q)). Qed.
Lemma lem3545294 {A : Type'} (P : A -> Prop) (Q : Prop) : (term705 A P Q) = (term706 A P Q).
Proof. exact (@lem3545293 A P Q). Qed.
Lemma lem3545295 {A B : Type'} (u : A -> Prop) (f : A -> B) (t : A -> Prop) (x : A) : (term707 A B u f t x) = (term708 A B u f t x).
Proof. exact (@lem3545294 A (term701 A B u x f t) (@I (A -> Prop) t x)). Qed.
Lemma lem3545296 {A B : Type'} (u : A -> Prop) (x : A) (f : A -> B) (t : A -> Prop) (x' : A) : (term709 A B u x f t x') = (term699 A B u x f t x').
Proof. exact (eq_refl (term709 A B u x f t x')). Qed.
Lemma lem3545297 {A B : Type'} (u : A -> Prop) (x : A) (f : A -> B) (t : A -> Prop) : (term710 A B u x f t) = (term701 A B u x f t).
Proof. exact (fun_ext (fun x' : A => @lem3545296 A B u x f t x')). Qed.
Lemma lem3545298 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem3545299 {A B : Type'} (u : A -> Prop) (x : A) (f : A -> B) (t : A -> Prop) : (term711 A B u x f t) = (term702 A B u x f t).
Proof. exact (MK_COMB (@lem3545298 A) (@lem3545297 A B u x f t)). Qed.
Lemma lem3545300 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem3545301 {A B : Type'} (u : A -> Prop) (x : A) (f : A -> B) (t : A -> Prop) : (term712 A B u x f t) = (term703 A B u x f t).
Proof. exact (MK_COMB (@lem3545300) (@lem3545299 A B u x f t)). Qed.
Lemma lem3545302 {A : Type'} (t : A -> Prop) (x : A) : (@I (A -> Prop) t x) = (@I (A -> Prop) t x).
Proof. exact (eq_refl (@I (A -> Prop) t x)). Qed.
Lemma lem3545303 {A B : Type'} (u : A -> Prop) (f : A -> B) (t : A -> Prop) (x : A) : (term707 A B u f t x) = (term704 A B u f t x).
Proof. exact (MK_COMB (@lem3545301 A B u x f t) (@lem3545302 A t x)). Qed.
Lemma lem3545304 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem3545305 {A B : Type'} (u : A -> Prop) (f : A -> B) (t : A -> Prop) (x : A) : (term713 A B u f t x) = (term714 A B u f t x).
Proof. exact (MK_COMB (@lem3545304) (@lem3545303 A B u f t x)). Qed.
Lemma lem3545306 {A B : Type'} (u : A -> Prop) (x : A) (f : A -> B) (t : A -> Prop) (x' : A) : (term709 A B u x f t x') = (term699 A B u x f t x').
Proof. exact (eq_refl (term709 A B u x f t x')). Qed.
Lemma lem3545307 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem3545308 {A B : Type'} (u : A -> Prop) (x : A) (f : A -> B) (t : A -> Prop) (x' : A) : (term715 A B u x f t x') = (term716 A B u x f t x').
Proof. exact (MK_COMB (@lem3545307) (@lem3545306 A B u x f t x')). Qed.
Lemma lem3545309 {A : Type'} (t : A -> Prop) (x : A) : (@I (A -> Prop) t x) = (@I (A -> Prop) t x).
Proof. exact (eq_refl (@I (A -> Prop) t x)). Qed.
Lemma lem3545310 {A B : Type'} (u : A -> Prop) (f : A -> B) (x' : A) (t : A -> Prop) (x : A) : (term717 A B u f x' t x) = (term718 A B u f x' t x).
Proof. exact (MK_COMB (@lem3545308 A B u x f t x') (@lem3545309 A t x)). Qed.
Lemma lem3545311 {A B : Type'} (u : A -> Prop) (f : A -> B) (t : A -> Prop) (x : A) : (term719 A B u f t x) = (term720 A B u f t x).
Proof. exact (fun_ext (fun x' : A => @lem3545310 A B u f x' t x)). Qed.
Lemma lem3545312 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem3545313 {A B : Type'} (u : A -> Prop) (f : A -> B) (t : A -> Prop) (x : A) : (term708 A B u f t x) = (term721 A B u f t x).
Proof. exact (MK_COMB (@lem3545312 A) (@lem3545311 A B u f t x)). Qed.
Lemma lem3545314 {A B : Type'} (u : A -> Prop) (f : A -> B) (t : A -> Prop) (x : A) : ((term707 A B u f t x) = (term708 A B u f t x)) = ((term704 A B u f t x) = (term721 A B u f t x)).
Proof. exact (MK_COMB (@lem3545305 A B u f t x) (@lem3545313 A B u f t x)). Qed.
Lemma lem3545315 {A B : Type'} (u : A -> Prop) (f : A -> B) (t : A -> Prop) (x : A) : (term704 A B u f t x) = (term721 A B u f t x).
Proof. exact (EQ_MP (@lem3545314 A B u f t x) (@lem3545295 A B u f t x)). Qed.
Lemma lem3545316 {A B : Type'} (u : A -> Prop) (f : A -> B) (t : A -> Prop) (x : A) : (term632 A B u f t x) = (term721 A B u f t x).
Proof. exact (TRANS (@lem3545291 A B u f t x) (@lem3545315 A B u f t x)). Qed.
Lemma lem3545317 {A B : Type'} (u : A -> Prop) (f : A -> B) (t : A -> Prop) : (term633 A B u f t) = (term722 A B u f t).
Proof. exact (fun_ext (fun x : A => @lem3545316 A B u f t x)). Qed.
Lemma lem3545318 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem3545319 {A B : Type'} (u : A -> Prop) (f : A -> B) (t : A -> Prop) : (term634 A B u f t) = (term723 A B u f t).
Proof. exact (MK_COMB (@lem3545318 A) (@lem3545317 A B u f t)). Qed.
Lemma lem3545320 {A : Type'} (g : type686 A) (t : A -> Prop) (s : A -> Prop) : (term5520 A g t s) = (term5520 A g t s).
Proof. exact (eq_refl (term5520 A g t s)). Qed.
Lemma lem3545321 {A B : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) (t : A -> Prop) : (term5538 A B g s u f t) = (term5548 A B g s u f t).
Proof. exact (MK_COMB (@lem3545320 A g t s) (@lem3545319 A B u f t)). Qed.
Lemma lem3545323 {A : Type'} (P : Prop) (Q : A -> Prop) : (term689 A P Q) = (term690 A P Q).
Proof. exact (EQ_MP (@lem19007 A P Q) (@lem19006 A P Q)). Qed.
Lemma lem3545324 {A : Type'} (P : Prop) (Q : A -> Prop) : (term689 A P Q) = (term690 A P Q).
Proof. exact (@lem3545323 A P Q). Qed.
Lemma lem3545325 {A B : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) (t : A -> Prop) : (term5549 A B g s u f t) = (term5550 A B g s u f t).
Proof. exact (@lem3545324 A (term5519 A g t s) (term722 A B u f t)). Qed.
Lemma lem3545326 {A B : Type'} (u : A -> Prop) (f : A -> B) (t : A -> Prop) (x : A) : (term733 A B u f t x) = (term721 A B u f t x).
Proof. exact (eq_refl (term733 A B u f t x)). Qed.
Lemma lem3545327 {A B : Type'} (u : A -> Prop) (f : A -> B) (t : A -> Prop) : (term734 A B u f t) = (term722 A B u f t).
Proof. exact (fun_ext (fun x : A => @lem3545326 A B u f t x)). Qed.
Lemma lem3545328 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem3545329 {A B : Type'} (u : A -> Prop) (f : A -> B) (t : A -> Prop) : (term735 A B u f t) = (term723 A B u f t).
Proof. exact (MK_COMB (@lem3545328 A) (@lem3545327 A B u f t)). Qed.
Lemma lem3545330 {A : Type'} (g : type686 A) (t : A -> Prop) (s : A -> Prop) : (term5520 A g t s) = (term5520 A g t s).
Proof. exact (eq_refl (term5520 A g t s)). Qed.
Lemma lem3545331 {A B : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) (t : A -> Prop) : (term5549 A B g s u f t) = (term5548 A B g s u f t).
Proof. exact (MK_COMB (@lem3545330 A g t s) (@lem3545329 A B u f t)). Qed.
Lemma lem3545332 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem3545333 {A B : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) (t : A -> Prop) : (term5551 A B g s u f t) = (term5552 A B g s u f t).
Proof. exact (MK_COMB (@lem3545332) (@lem3545331 A B g s u f t)). Qed.
Lemma lem3545334 {A B : Type'} (u : A -> Prop) (f : A -> B) (t : A -> Prop) (x : A) : (term733 A B u f t x) = (term721 A B u f t x).
Proof. exact (eq_refl (term733 A B u f t x)). Qed.
Lemma lem3545335 {A : Type'} (g : type686 A) (t : A -> Prop) (s : A -> Prop) : (term5520 A g t s) = (term5520 A g t s).
Proof. exact (eq_refl (term5520 A g t s)). Qed.
Lemma lem3545336 {A B : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) (t : A -> Prop) (x : A) : (term5553 A B g s u f t x) = (term5554 A B g s u f t x).
Proof. exact (MK_COMB (@lem3545335 A g t s) (@lem3545334 A B u f t x)). Qed.
Lemma lem3545337 {A B : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) (t : A -> Prop) : (term5555 A B g s u f t) = (term5556 A B g s u f t).
Proof. exact (fun_ext (fun x : A => @lem3545336 A B g s u f t x)). Qed.
Lemma lem3545338 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem3545339 {A B : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) (t : A -> Prop) : (term5550 A B g s u f t) = (term5557 A B g s u f t).
Proof. exact (MK_COMB (@lem3545338 A) (@lem3545337 A B g s u f t)). Qed.
Lemma lem3545340 {A B : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) (t : A -> Prop) : ((term5549 A B g s u f t) = (term5550 A B g s u f t)) = ((term5548 A B g s u f t) = (term5557 A B g s u f t)).
Proof. exact (MK_COMB (@lem3545333 A B g s u f t) (@lem3545339 A B g s u f t)). Qed.
Lemma lem3545341 {A B : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) (t : A -> Prop) : (term5548 A B g s u f t) = (term5557 A B g s u f t).
Proof. exact (EQ_MP (@lem3545340 A B g s u f t) (@lem3545325 A B g s u f t)). Qed.
Lemma lem3545343 {A : Type'} (P : Prop) (Q : A -> Prop) : (term689 A P Q) = (term690 A P Q).
Proof. exact (EQ_MP (@lem19007 A P Q) (@lem19006 A P Q)). Qed.
Lemma lem3545344 {A : Type'} (P : Prop) (Q : A -> Prop) : (term689 A P Q) = (term690 A P Q).
Proof. exact (@lem3545343 A P Q). Qed.
Lemma lem3545345 {A B : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) (t : A -> Prop) (x : A) : (term5558 A B g s u f t x) = (term5559 A B g s u f t x).
Proof. exact (@lem3545344 A (term5519 A g t s) (term720 A B u f t x)). Qed.
Lemma lem3545346 {A B : Type'} (u : A -> Prop) (f : A -> B) (x' : A) (t : A -> Prop) (x : A) : (term749 A B u f t x x') = (term718 A B u f x' t x).
Proof. exact (eq_refl (term749 A B u f t x x')). Qed.
Lemma lem3545347 {A B : Type'} (u : A -> Prop) (f : A -> B) (t : A -> Prop) (x : A) : (term750 A B u f t x) = (term720 A B u f t x).
Proof. exact (fun_ext (fun x' : A => @lem3545346 A B u f x' t x)). Qed.
Lemma lem3545348 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem3545349 {A B : Type'} (u : A -> Prop) (f : A -> B) (t : A -> Prop) (x : A) : (term751 A B u f t x) = (term721 A B u f t x).
Proof. exact (MK_COMB (@lem3545348 A) (@lem3545347 A B u f t x)). Qed.
Lemma lem3545350 {A : Type'} (g : type686 A) (t : A -> Prop) (s : A -> Prop) : (term5520 A g t s) = (term5520 A g t s).
Proof. exact (eq_refl (term5520 A g t s)). Qed.
Lemma lem3545351 {A B : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) (t : A -> Prop) (x : A) : (term5558 A B g s u f t x) = (term5554 A B g s u f t x).
Proof. exact (MK_COMB (@lem3545350 A g t s) (@lem3545349 A B u f t x)). Qed.
Lemma lem3545352 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem3545353 {A B : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) (t : A -> Prop) (x : A) : (term5560 A B g s u f t x) = (term5561 A B g s u f t x).
Proof. exact (MK_COMB (@lem3545352) (@lem3545351 A B g s u f t x)). Qed.
Lemma lem3545354 {A B : Type'} (u : A -> Prop) (f : A -> B) (x' : A) (t : A -> Prop) (x : A) : (term749 A B u f t x x') = (term718 A B u f x' t x).
Proof. exact (eq_refl (term749 A B u f t x x')). Qed.
Lemma lem3545355 {A : Type'} (g : type686 A) (t : A -> Prop) (s : A -> Prop) : (term5520 A g t s) = (term5520 A g t s).
Proof. exact (eq_refl (term5520 A g t s)). Qed.
Lemma lem3545356 {A B : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) (x' : A) (t : A -> Prop) (x : A) : (term5562 A B g s u f t x x') = (term5563 A B g s u f x' t x).
Proof. exact (MK_COMB (@lem3545355 A g t s) (@lem3545354 A B u f x' t x)). Qed.
Lemma lem3545357 {A B : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) (t : A -> Prop) (x : A) : (term5564 A B g s u f t x) = (term5565 A B g s u f t x).
Proof. exact (fun_ext (fun x' : A => @lem3545356 A B g s u f x' t x)). Qed.
Lemma lem3545358 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem3545359 {A B : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) (t : A -> Prop) (x : A) : (term5559 A B g s u f t x) = (term5566 A B g s u f t x).
Proof. exact (MK_COMB (@lem3545358 A) (@lem3545357 A B g s u f t x)). Qed.
Lemma lem3545360 {A B : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) (t : A -> Prop) (x : A) : ((term5558 A B g s u f t x) = (term5559 A B g s u f t x)) = ((term5554 A B g s u f t x) = (term5566 A B g s u f t x)).
Proof. exact (MK_COMB (@lem3545353 A B g s u f t x) (@lem3545359 A B g s u f t x)). Qed.
Lemma lem3545361 {A B : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) (t : A -> Prop) (x : A) : (term5554 A B g s u f t x) = (term5566 A B g s u f t x).
Proof. exact (EQ_MP (@lem3545360 A B g s u f t x) (@lem3545345 A B g s u f t x)). Qed.
Lemma lem3545362 {A B : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) (t : A -> Prop) : (term5556 A B g s u f t) = (term5567 A B g s u f t).
Proof. exact (fun_ext (fun x : A => @lem3545361 A B g s u f t x)). Qed.
Lemma lem3545363 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem3545364 {A B : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) (t : A -> Prop) : (term5557 A B g s u f t) = (term5568 A B g s u f t).
Proof. exact (MK_COMB (@lem3545363 A) (@lem3545362 A B g s u f t)). Qed.
Lemma lem3545365 {A B : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) (t : A -> Prop) : (term5548 A B g s u f t) = (term5568 A B g s u f t).
Proof. exact (TRANS (@lem3545341 A B g s u f t) (@lem3545364 A B g s u f t)). Qed.
Lemma lem3545366 {A B : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) (t : A -> Prop) : (term5538 A B g s u f t) = (term5568 A B g s u f t).
Proof. exact (TRANS (@lem3545321 A B g s u f t) (@lem3545365 A B g s u f t)). Qed.
Lemma lem3545367 {A B : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) : (term5539 A B g s u f) = (term5569 A B g s u f).
Proof. exact (fun_ext (fun t : A -> Prop => @lem3545366 A B g s u f t)). Qed.
Lemma lem3545368 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem3545369 {A B : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) : (term5540 A B g s u f) = (term5570 A B g s u f).
Proof. exact (MK_COMB (@lem3545368 A) (@lem3545367 A B g s u f)). Qed.
Lemma lem3545400 {A B : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) (x' : A) (t : A -> Prop) (x : A) : (term5563 A B g s u f x' t x) = (term5563 A B g s u f x' t x).
Proof. exact (eq_refl (term5563 A B g s u f x' t x)). Qed.
Lemma lem3545401 {A B : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) (t : A -> Prop) (x : A) : (term5565 A B g s u f t x) = (term5565 A B g s u f t x).
Proof. exact (fun_ext (fun x' : A => @lem3545400 A B g s u f x' t x)). Qed.
Lemma lem3545402 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem3545403 {A B : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) (t : A -> Prop) (x : A) : (term5566 A B g s u f t x) = (term5566 A B g s u f t x).
Proof. exact (MK_COMB (@lem3545402 A) (@lem3545401 A B g s u f t x)). Qed.
Lemma lem3545404 {A B : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) (t : A -> Prop) : (term5567 A B g s u f t) = (term5567 A B g s u f t).
Proof. exact (fun_ext (fun x : A => @lem3545403 A B g s u f t x)). Qed.
Lemma lem3545405 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem3545406 {A B : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) (t : A -> Prop) : (term5568 A B g s u f t) = (term5568 A B g s u f t).
Proof. exact (MK_COMB (@lem3545405 A) (@lem3545404 A B g s u f t)). Qed.
Lemma lem3545407 {A B : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) : (term5569 A B g s u f) = (term5569 A B g s u f).
Proof. exact (fun_ext (fun t : A -> Prop => @lem3545406 A B g s u f t)). Qed.
Lemma lem3545408 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem3545409 {A B : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) : (term5570 A B g s u f) = (term5570 A B g s u f).
Proof. exact (MK_COMB (@lem3545408 A) (@lem3545407 A B g s u f)). Qed.
Lemma lem3545410 {A B : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) : (term5540 A B g s u f) = (term5570 A B g s u f).
Proof. exact (TRANS (@lem3545369 A B g s u f) (@lem3545409 A B g s u f)). Qed.
Lemma lem3545411 {A B : Type'} (x'''' : A -> Prop) (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) (h1 : term5193 A B x'''' g s u f) : term5570 A B g s u f.
Proof. exact (EQ_MP (@lem3545410 A B g s u f) (@lem3545165 A B x'''' g s u f h1)). Qed.
Lemma lem3545453 {A : Type'} (g : type686 A) (s : A -> Prop) (t : A -> Prop) (x''' : A) : (term5521 A g s t x''') = (term5521 A g s t x''').
Proof. exact (eq_refl (term5521 A g s t x''')). Qed.
Lemma lem3545454 {A : Type'} (g : type686 A) (s : A -> Prop) (x''' : A) : (term5522 A g s x''') = (term5522 A g s x''').
Proof. exact (fun_ext (fun t : A -> Prop => @lem3545453 A g s t x''')). Qed.
Lemma lem3545455 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem3545457 {A : Type'} (g : type686 A) (s : A -> Prop) (x''' : A) : (term5523 A g s x''') = (term5523 A g s x''').
Proof. exact (MK_COMB (@lem3545455 A) (@lem3545454 A g s x''')). Qed.
Lemma lem3545458 {A B : Type'} (u : A -> Prop) (f : A -> B) (x''' : A) (g : type686 A) (s : A -> Prop) (t : A -> Prop) (x'' : A) (h1 : term5527 A B u f x''' g s t x'') : term5523 A g s x'''.
Proof. exact (EQ_MP (@lem3545457 A g s x''') (@lem3545181 A B u f x''' g s t x'' h1)). Qed.
Lemma lem3545476 {A : Type'} (P : Prop) (Q : A -> Prop) : (term689 A P Q) = (term690 A P Q).
Proof. exact (EQ_MP (@lem19007 A P Q) (@lem19006 A P Q)). Qed.
Lemma lem3545477 {A : Type'} (P : Prop) (Q : A -> Prop) : (term689 A P Q) = (term690 A P Q).
Proof. exact (@lem3545476 A P Q). Qed.
Lemma lem3545478 {A : Type'} (g : type686 A) (s : A -> Prop) (t : A -> Prop) (u : A -> Prop) : (term5571 A g s t u) = (term5572 A g s t u).
Proof. exact (@lem3545477 A (term5519 A g t s) (term636 A t u)). Qed.
Lemma lem3545479 {A : Type'} (t : A -> Prop) (u : A -> Prop) (x : A) : (term729 A t u x) = (term635 A t u x).
Proof. exact (eq_refl (term729 A t u x)). Qed.
Lemma lem3545480 {A : Type'} (t : A -> Prop) (u : A -> Prop) : (term730 A t u) = (term636 A t u).
Proof. exact (fun_ext (fun x : A => @lem3545479 A t u x)). Qed.
Lemma lem3545481 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem3545482 {A : Type'} (t : A -> Prop) (u : A -> Prop) : (term731 A t u) = (term637 A t u).
Proof. exact (MK_COMB (@lem3545481 A) (@lem3545480 A t u)). Qed.
Lemma lem3545483 {A : Type'} (g : type686 A) (t : A -> Prop) (s : A -> Prop) : (term5520 A g t s) = (term5520 A g t s).
Proof. exact (eq_refl (term5520 A g t s)). Qed.
Lemma lem3545484 {A : Type'} (g : type686 A) (s : A -> Prop) (t : A -> Prop) (u : A -> Prop) : (term5571 A g s t u) = (term5542 A g s t u).
Proof. exact (MK_COMB (@lem3545483 A g t s) (@lem3545482 A t u)). Qed.
Lemma lem3545485 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem3545486 {A : Type'} (g : type686 A) (s : A -> Prop) (t : A -> Prop) (u : A -> Prop) : (term5573 A g s t u) = (term5574 A g s t u).
Proof. exact (MK_COMB (@lem3545485) (@lem3545484 A g s t u)). Qed.
Lemma lem3545487 {A : Type'} (t : A -> Prop) (u : A -> Prop) (x : A) : (term729 A t u x) = (term635 A t u x).
Proof. exact (eq_refl (term729 A t u x)). Qed.
Lemma lem3545488 {A : Type'} (g : type686 A) (t : A -> Prop) (s : A -> Prop) : (term5520 A g t s) = (term5520 A g t s).
Proof. exact (eq_refl (term5520 A g t s)). Qed.
Lemma lem3545489 {A : Type'} (g : type686 A) (s : A -> Prop) (t : A -> Prop) (u : A -> Prop) (x : A) : (term5575 A g s t u x) = (term5576 A g s t u x).
Proof. exact (MK_COMB (@lem3545488 A g t s) (@lem3545487 A t u x)). Qed.
Lemma lem3545490 {A : Type'} (g : type686 A) (s : A -> Prop) (t : A -> Prop) (u : A -> Prop) : (term5577 A g s t u) = (term5578 A g s t u).
Proof. exact (fun_ext (fun x : A => @lem3545489 A g s t u x)). Qed.
Lemma lem3545491 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem3545492 {A : Type'} (g : type686 A) (s : A -> Prop) (t : A -> Prop) (u : A -> Prop) : (term5572 A g s t u) = (term5579 A g s t u).
Proof. exact (MK_COMB (@lem3545491 A) (@lem3545490 A g s t u)). Qed.
Lemma lem3545493 {A : Type'} (g : type686 A) (s : A -> Prop) (t : A -> Prop) (u : A -> Prop) : ((term5571 A g s t u) = (term5572 A g s t u)) = ((term5542 A g s t u) = (term5579 A g s t u)).
Proof. exact (MK_COMB (@lem3545486 A g s t u) (@lem3545492 A g s t u)). Qed.
Lemma lem3545494 {A : Type'} (g : type686 A) (s : A -> Prop) (t : A -> Prop) (u : A -> Prop) : (term5542 A g s t u) = (term5579 A g s t u).
Proof. exact (EQ_MP (@lem3545493 A g s t u) (@lem3545478 A g s t u)). Qed.
Lemma lem3545495 {A : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) : (term5543 A g s u) = (term5580 A g s u).
Proof. exact (fun_ext (fun t : A -> Prop => @lem3545494 A g s t u)). Qed.
Lemma lem3545496 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem3545497 {A : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) : (term5544 A g s u) = (term5581 A g s u).
Proof. exact (MK_COMB (@lem3545496 A) (@lem3545495 A g s u)). Qed.
Lemma lem3545516 {A : Type'} (g : type686 A) (s : A -> Prop) (t : A -> Prop) (u : A -> Prop) (x : A) : (term5576 A g s t u x) = (term5576 A g s t u x).
Proof. exact (eq_refl (term5576 A g s t u x)). Qed.
Lemma lem3545517 {A : Type'} (g : type686 A) (s : A -> Prop) (t : A -> Prop) (u : A -> Prop) : (term5578 A g s t u) = (term5578 A g s t u).
Proof. exact (fun_ext (fun x : A => @lem3545516 A g s t u x)). Qed.
Lemma lem3545518 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem3545519 {A : Type'} (g : type686 A) (s : A -> Prop) (t : A -> Prop) (u : A -> Prop) : (term5579 A g s t u) = (term5579 A g s t u).
Proof. exact (MK_COMB (@lem3545518 A) (@lem3545517 A g s t u)). Qed.
Lemma lem3545520 {A : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) : (term5580 A g s u) = (term5580 A g s u).
Proof. exact (fun_ext (fun t : A -> Prop => @lem3545519 A g s t u)). Qed.
Lemma lem3545521 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem3545522 {A : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) : (term5581 A g s u) = (term5581 A g s u).
Proof. exact (MK_COMB (@lem3545521 A) (@lem3545520 A g s u)). Qed.
Lemma lem3545523 {A : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) : (term5544 A g s u) = (term5581 A g s u).
Proof. exact (TRANS (@lem3545497 A g s u) (@lem3545522 A g s u)). Qed.
Lemma lem3545524 {A B : Type'} (x'''' : A -> Prop) (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) (h1 : term5193 A B x'''' g s u f) : term5581 A g s u.
Proof. exact (EQ_MP (@lem3545523 A g s u) (@lem3545164 A B x'''' g s u f h1)). Qed.
Lemma lem3545742 {A : Type'} (g : type686 A) (s : A -> Prop) (t : A -> Prop) (x : A) : (term5521 A g s t x) = (term5521 A g s t x).
Proof. exact (eq_refl (term5521 A g s t x)). Qed.
Lemma lem3545743 {A : Type'} (g : type686 A) (s : A -> Prop) (x : A) : (term5522 A g s x) = (term5522 A g s x).
Proof. exact (fun_ext (fun t : A -> Prop => @lem3545742 A g s t x)). Qed.
Lemma lem3545744 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem3545746 {A : Type'} (g : type686 A) (s : A -> Prop) (x : A) : (term5523 A g s x) = (term5523 A g s x).
Proof. exact (MK_COMB (@lem3545744 A) (@lem3545743 A g s x)). Qed.
Lemma lem3545747 {A : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) (x : A) (h1 : term5531 A g s u x) : term5523 A g s x.
Proof. exact (EQ_MP (@lem3545746 A g s x) (@lem3545192 A g s u x h1)). Qed.
Lemma lem3545809 {A : Type'} (s : A -> Prop) (u : A -> Prop) (x : A) : (term635 A s u x) = (term635 A s u x).
Proof. exact (eq_refl (term635 A s u x)). Qed.
Lemma lem3545810 {A : Type'} (s : A -> Prop) (u : A -> Prop) : (term636 A s u) = (term636 A s u).
Proof. exact (fun_ext (fun x : A => @lem3545809 A s u x)). Qed.
Lemma lem3545811 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem3545813 {A : Type'} (s : A -> Prop) (u : A -> Prop) : (term637 A s u) = (term637 A s u).
Proof. exact (MK_COMB (@lem3545811 A) (@lem3545810 A s u)). Qed.
Lemma lem3545814 {A B : Type'} (x'''' : A -> Prop) (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) (h1 : term5193 A B x'''' g s u f) : term637 A s u.
Proof. exact (EQ_MP (@lem3545813 A s u) (@lem3545166 A B x'''' g s u f h1)). Qed.
Lemma lem3546048 {A : Type'} (s : A -> Prop) (u : A -> Prop) (x : A) : (term635 A s u x) = (term635 A s u x).
Proof. exact (eq_refl (term635 A s u x)). Qed.
Lemma lem3546049 {A : Type'} (s : A -> Prop) (u : A -> Prop) : (term636 A s u) = (term636 A s u).
Proof. exact (fun_ext (fun x : A => @lem3546048 A s u x)). Qed.
Lemma lem3546050 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem3546052 {A : Type'} (s : A -> Prop) (u : A -> Prop) : (term637 A s u) = (term637 A s u).
Proof. exact (MK_COMB (@lem3546050 A) (@lem3546049 A s u)). Qed.
Lemma lem3546053 {A B : Type'} (x'''' : A -> Prop) (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) (h1 : term5193 A B x'''' g s u f) : term637 A s u.
Proof. exact (EQ_MP (@lem3546052 A s u) (@lem3545166 A B x'''' g s u f h1)). Qed.
Lemma lem3546246 {A B : Type'} (_37887 : A -> Prop) (x'''' : A -> Prop) (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) (h1 : term5193 A B x'''' g s u f) : term5582 A B g s u f _37887.
Proof. exact (@lem3545411 A B x'''' g s u f h1 _37887). Qed.
Lemma lem3546247 {A B : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) (_37887 : A -> Prop) : (term5582 A B g s u f _37887) = (term5568 A B g s u f _37887).
Proof. exact (eq_refl (term5582 A B g s u f _37887)). Qed.
Lemma lem3546248 {A B : Type'} (_37887 : A -> Prop) (x'''' : A -> Prop) (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) (h1 : term5193 A B x'''' g s u f) : term5568 A B g s u f _37887.
Proof. exact (EQ_MP (@lem3546247 A B g s u f _37887) (@lem3546246 A B _37887 x'''' g s u f h1)). Qed.
Lemma lem3546249 {A B : Type'} (_37887 : A -> Prop) (_37888 : A) (x'''' : A -> Prop) (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) (h1 : term5193 A B x'''' g s u f) : term5583 A B g s u f _37887 _37888.
Proof. exact (@lem3546248 A B _37887 x'''' g s u f h1 _37888). Qed.
Lemma lem3546250 {A B : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) (_37887 : A -> Prop) (_37888 : A) : (term5583 A B g s u f _37887 _37888) = (term5566 A B g s u f _37887 _37888).
Proof. exact (eq_refl (term5583 A B g s u f _37887 _37888)). Qed.
Lemma lem3546251 {A B : Type'} (_37887 : A -> Prop) (_37888 : A) (x'''' : A -> Prop) (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) (h1 : term5193 A B x'''' g s u f) : term5566 A B g s u f _37887 _37888.
Proof. exact (EQ_MP (@lem3546250 A B g s u f _37887 _37888) (@lem3546249 A B _37887 _37888 x'''' g s u f h1)). Qed.
Lemma lem3546252 {A B : Type'} (_37887 : A -> Prop) (_37888 : A) (_37889 : A) (x'''' : A -> Prop) (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) (h1 : term5193 A B x'''' g s u f) : term5584 A B g s u f _37887 _37888 _37889.
Proof. exact (@lem3546251 A B _37887 _37888 x'''' g s u f h1 _37889). Qed.
Lemma lem3546253 {A B : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) (_37889 : A) (_37887 : A -> Prop) (_37888 : A) : (term5584 A B g s u f _37887 _37888 _37889) = (term5563 A B g s u f _37889 _37887 _37888).
Proof. exact (eq_refl (term5584 A B g s u f _37887 _37888 _37889)). Qed.
Lemma lem3546254 {A B : Type'} (_37889 : A) (_37887 : A -> Prop) (_37888 : A) (x'''' : A -> Prop) (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) (h1 : term5193 A B x'''' g s u f) : term5563 A B g s u f _37889 _37887 _37888.
Proof. exact (EQ_MP (@lem3546253 A B g s u f _37889 _37887 _37888) (@lem3546252 A B _37887 _37888 _37889 x'''' g s u f h1)). Qed.
Lemma lem3546255 {A B : Type'} (_37890 : A -> Prop) (u : A -> Prop) (f : A -> B) (x''' : A) (g : type686 A) (s : A -> Prop) (t : A -> Prop) (x'' : A) (h1 : term5527 A B u f x''' g s t x'') : term5585 A g s x''' _37890.
Proof. exact (@lem3545458 A B u f x''' g s t x'' h1 _37890). Qed.
Lemma lem3546256 {A : Type'} (g : type686 A) (s : A -> Prop) (_37890 : A -> Prop) (x''' : A) : (term5585 A g s x''' _37890) = (term5521 A g s _37890 x''').
Proof. exact (eq_refl (term5585 A g s x''' _37890)). Qed.
Lemma lem3546257 {A B : Type'} (_37890 : A -> Prop) (u : A -> Prop) (f : A -> B) (x''' : A) (g : type686 A) (s : A -> Prop) (t : A -> Prop) (x'' : A) (h1 : term5527 A B u f x''' g s t x'') : term5521 A g s _37890 x'''.
Proof. exact (EQ_MP (@lem3546256 A g s _37890 x''') (@lem3546255 A B _37890 u f x''' g s t x'' h1)). Qed.
Lemma lem3546258 {A B : Type'} (_37891 : A -> Prop) (x'''' : A -> Prop) (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) (h1 : term5193 A B x'''' g s u f) : term5586 A g s u _37891.
Proof. exact (@lem3545524 A B x'''' g s u f h1 _37891). Qed.
Lemma lem3546259 {A : Type'} (g : type686 A) (s : A -> Prop) (_37891 : A -> Prop) (u : A -> Prop) : (term5586 A g s u _37891) = (term5579 A g s _37891 u).
Proof. exact (eq_refl (term5586 A g s u _37891)). Qed.
Lemma lem3546260 {A B : Type'} (_37891 : A -> Prop) (x'''' : A -> Prop) (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) (h1 : term5193 A B x'''' g s u f) : term5579 A g s _37891 u.
Proof. exact (EQ_MP (@lem3546259 A g s _37891 u) (@lem3546258 A B _37891 x'''' g s u f h1)). Qed.
Lemma lem3546261 {A B : Type'} (_37891 : A -> Prop) (_37892 : A) (x'''' : A -> Prop) (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) (h1 : term5193 A B x'''' g s u f) : term5587 A g s _37891 u _37892.
Proof. exact (@lem3546260 A B _37891 x'''' g s u f h1 _37892). Qed.
Lemma lem3546262 {A : Type'} (g : type686 A) (s : A -> Prop) (_37891 : A -> Prop) (u : A -> Prop) (_37892 : A) : (term5587 A g s _37891 u _37892) = (term5576 A g s _37891 u _37892).
Proof. exact (eq_refl (term5587 A g s _37891 u _37892)). Qed.
Lemma lem3546263 {A B : Type'} (_37891 : A -> Prop) (_37892 : A) (x'''' : A -> Prop) (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) (h1 : term5193 A B x'''' g s u f) : term5576 A g s _37891 u _37892.
Proof. exact (EQ_MP (@lem3546262 A g s _37891 u _37892) (@lem3546261 A B _37891 _37892 x'''' g s u f h1)). Qed.
Lemma lem3546279 {A : Type'} (_37898 : A -> Prop) (g : type686 A) (s : A -> Prop) (u : A -> Prop) (x : A) (h1 : term5531 A g s u x) : term5585 A g s x _37898.
Proof. exact (@lem3545747 A g s u x h1 _37898). Qed.
Lemma lem3546280 {A : Type'} (g : type686 A) (s : A -> Prop) (_37898 : A -> Prop) (x : A) : (term5585 A g s x _37898) = (term5521 A g s _37898 x).
Proof. exact (eq_refl (term5585 A g s x _37898)). Qed.
Lemma lem3546281 {A : Type'} (_37898 : A -> Prop) (g : type686 A) (s : A -> Prop) (u : A -> Prop) (x : A) (h1 : term5531 A g s u x) : term5521 A g s _37898 x.
Proof. exact (EQ_MP (@lem3546280 A g s _37898 x) (@lem3546279 A _37898 g s u x h1)). Qed.
Lemma lem3546288 {A B : Type'} (_37901 : A) (x'''' : A -> Prop) (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) (h1 : term5193 A B x'''' g s u f) : term729 A s u _37901.
Proof. exact (@lem3545814 A B x'''' g s u f h1 _37901). Qed.
Lemma lem3546289 {A : Type'} (s : A -> Prop) (u : A -> Prop) (_37901 : A) : (term729 A s u _37901) = (term635 A s u _37901).
Proof. exact (eq_refl (term729 A s u _37901)). Qed.
Lemma lem3546306 {A B : Type'} (_37907 : A) (x'''' : A -> Prop) (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) (h1 : term5193 A B x'''' g s u f) : term729 A s u _37907.
Proof. exact (@lem3546053 A B x'''' g s u f h1 _37907). Qed.
Lemma lem3546307 {A : Type'} (s : A -> Prop) (u : A -> Prop) (_37907 : A) : (term729 A s u _37907) = (term635 A s u _37907).
Proof. exact (eq_refl (term729 A s u _37907)). Qed.
Lemma lem3546346 {A B : Type'} (u : A -> Prop) (f : A -> B) (_37889 : A) (_37887 : A -> Prop) (_37888 : A) : (term718 A B u f _37889 _37887 _37888) = (term816 A B u f _37889 _37887 _37888).
Proof. exact (@lem3541828 (term619 A u _37888) (term626 A B _37888 f _37887 _37889) (@I (A -> Prop) _37887 _37888)). Qed.
Lemma lem3546353 {A B : Type'} (f : A -> B) (_37889 : A) (_37887 : A -> Prop) (_37888 : A) : (term817 A B f _37889 _37887 _37888) = (term818 A B f _37889 _37887 _37888).
Proof. exact (@lem3541828 (term623 A B _37888 f _37889) (term619 A _37887 _37889) (@I (A -> Prop) _37887 _37888)). Qed.
Lemma lem3546354 {A : Type'} (u : A -> Prop) (_37888 : A) : (term629 A u _37888) = (term629 A u _37888).
Proof. exact (eq_refl (term629 A u _37888)). Qed.
Lemma lem3546357 {A B : Type'} (u : A -> Prop) (f : A -> B) (_37889 : A) (_37887 : A -> Prop) (_37888 : A) : (term816 A B u f _37889 _37887 _37888) = (term819 A B u f _37889 _37887 _37888).
Proof. exact (MK_COMB (@lem3546354 A u _37888) (@lem3546353 A B f _37889 _37887 _37888)). Qed.
Lemma lem3546359 {A B : Type'} (u : A -> Prop) (f : A -> B) (_37889 : A) (_37887 : A -> Prop) (_37888 : A) : (term718 A B u f _37889 _37887 _37888) = (term819 A B u f _37889 _37887 _37888).
Proof. exact (TRANS (@lem3546346 A B u f _37889 _37887 _37888) (@lem3546357 A B u f _37889 _37887 _37888)). Qed.
Lemma lem3546360 {A : Type'} (g : type686 A) (_37887 : A -> Prop) (s : A -> Prop) : (term5520 A g _37887 s) = (term5520 A g _37887 s).
Proof. exact (eq_refl (term5520 A g _37887 s)). Qed.
Lemma lem3546361 {A B : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) (_37889 : A) (_37887 : A -> Prop) (_37888 : A) : (term5563 A B g s u f _37889 _37887 _37888) = (term5588 A B g s u f _37889 _37887 _37888).
Proof. exact (MK_COMB (@lem3546360 A g _37887 s) (@lem3546359 A B u f _37889 _37887 _37888)). Qed.
Lemma lem3546368 {A B : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) (_37889 : A) (_37887 : A -> Prop) (_37888 : A) : (term5588 A B g s u f _37889 _37887 _37888) = (term5589 A B g s u f _37889 _37887 _37888).
Proof. exact (@lem3541828 (term640 A g _37887) (_37887 = s) (term819 A B u f _37889 _37887 _37888)). Qed.
Lemma lem3546369 {A B : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) (_37889 : A) (_37887 : A -> Prop) (_37888 : A) : (term5563 A B g s u f _37889 _37887 _37888) = (term5589 A B g s u f _37889 _37887 _37888).
Proof. exact (TRANS (@lem3546361 A B g s u f _37889 _37887 _37888) (@lem3546368 A B g s u f _37889 _37887 _37888)). Qed.
Lemma lem3546370 {A B : Type'} (_37889 : A) (_37887 : A -> Prop) (_37888 : A) (x'''' : A -> Prop) (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) (h1 : term5193 A B x'''' g s u f) : term5589 A B g s u f _37889 _37887 _37888.
Proof. exact (EQ_MP (@lem3546369 A B g s u f _37889 _37887 _37888) (@lem3546254 A B _37889 _37887 _37888 x'''' g s u f h1)). Qed.
Lemma lem3546380 {A B : Type'} (u : A -> Prop) (f : A -> B) (x''' : A) (g : type686 A) (s : A -> Prop) (t : A -> Prop) (x'' : A) (h1 : term5527 A B u f x''' g s t x'') : term5040 A t s.
Proof. exact (proj2 (@lem3545176 A B u f x''' g s t x'' h1)). Qed.
Lemma lem3546395 {A : Type'} (g : type686 A) (s : A -> Prop) (_37890 : A -> Prop) (x''' : A) : (term5521 A g s _37890 x''') = (term5590 A g s _37890 x''').
Proof. exact (@lem3541828 (term640 A g _37890) (_37890 = s) (@I (A -> Prop) _37890 x''')). Qed.
Lemma lem3546396 {A B : Type'} (_37890 : A -> Prop) (u : A -> Prop) (f : A -> B) (x''' : A) (g : type686 A) (s : A -> Prop) (t : A -> Prop) (x'' : A) (h1 : term5527 A B u f x''' g s t x'') : term5590 A g s _37890 x'''.
Proof. exact (EQ_MP (@lem3546395 A g s _37890 x''') (@lem3546257 A B _37890 u f x''' g s t x'' h1)). Qed.
Lemma lem3546419 {A : Type'} (g : type686 A) (s : A -> Prop) (_37891 : A -> Prop) (u : A -> Prop) (_37892 : A) : (term5576 A g s _37891 u _37892) = (term5591 A g s _37891 u _37892).
Proof. exact (@lem3541828 (term640 A g _37891) (_37891 = s) (term635 A _37891 u _37892)). Qed.
Lemma lem3546420 {A B : Type'} (_37891 : A -> Prop) (_37892 : A) (x'''' : A -> Prop) (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) (h1 : term5193 A B x'''' g s u f) : term5591 A g s _37891 u _37892.
Proof. exact (EQ_MP (@lem3546419 A g s _37891 u _37892) (@lem3546263 A B _37891 _37892 x'''' g s u f h1)). Qed.
Lemma lem3546491 {A : Type'} (g : type686 A) (s : A -> Prop) (_37898 : A -> Prop) (x : A) : (term5521 A g s _37898 x) = (term5590 A g s _37898 x).
Proof. exact (@lem3541828 (term640 A g _37898) (_37898 = s) (@I (A -> Prop) _37898 x)). Qed.
Lemma lem3546492 {A : Type'} (_37898 : A -> Prop) (g : type686 A) (s : A -> Prop) (u : A -> Prop) (x : A) (h1 : term5531 A g s u x) : term5590 A g s _37898 x.
Proof. exact (EQ_MP (@lem3546491 A g s _37898 x) (@lem3546281 A _37898 g s u x h1)). Qed.
Lemma lem3546494 {A : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) (x : A) (h1 : term5531 A g s u x) : term619 A u x.
Proof. exact (proj2 (@lem3545184 A g s u x h1)). Qed.
Lemma lem3546516 {A B : Type'} (_37901 : A) (x'''' : A -> Prop) (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) (h1 : term5193 A B x'''' g s u f) : term635 A s u _37901.
Proof. exact (EQ_MP (@lem3546289 A s u _37901) (@lem3546288 A B _37901 x'''' g s u f h1)). Qed.
Lemma lem3546552 {A : Type'} (s : A -> Prop) (u : A -> Prop) (x'' : A) (h1 : term5515 A s u x'') : term619 A u x''.
Proof. exact (proj2 (@lem3545172 A s u x'' h1)). Qed.
Lemma lem3546582 {A B : Type'} (_37907 : A) (x'''' : A -> Prop) (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) (h1 : term5193 A B x'''' g s u f) : term635 A s u _37907.
Proof. exact (EQ_MP (@lem3546307 A s u _37907) (@lem3546306 A B _37907 x'''' g s u f h1)). Qed.
Lemma lem3546618 {A : Type'} (s : A -> Prop) (u : A -> Prop) (x'' : A) (h1 : term5515 A s u x'') : term619 A u x''.
Proof. exact (proj2 (@lem3545172 A s u x'' h1)). Qed.
Lemma lem3546697 {A B : Type'} (u : A -> Prop) (f : A -> B) (x''' : A) (g : type686 A) (s : A -> Prop) (t : A -> Prop) (x'' : A) (h1 : term5527 A B u f x''' g s t x'') : @I ((A -> Prop) -> Prop) g t.
Proof. exact (proj1 (@lem3545176 A B u f x''' g s t x'' h1)). Qed.
Lemma lem3546698 {A B : Type'} (u : A -> Prop) (f : A -> B) (x''' : A) (g : type686 A) (s : A -> Prop) (t : A -> Prop) (x'' : A) (h1 : term5527 A B u f x''' g s t x'') : term829 A g t.
Proof. exact (fun h0 : term640 A g t => @lem3546697 A B u f x''' g s t x'' h1). Qed.
Lemma lem3546700 (p : Prop) : (term828 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem3546701 {A : Type'} (g : type686 A) (t : A -> Prop) : (term829 A g t) = (@I ((A -> Prop) -> Prop) g t).
Proof. exact (@lem3546700 (@I ((A -> Prop) -> Prop) g t)). Qed.
Lemma lem3546702 {A B : Type'} (u : A -> Prop) (f : A -> B) (x''' : A) (g : type686 A) (s : A -> Prop) (t : A -> Prop) (x'' : A) (h1 : term5527 A B u f x''' g s t x'') : @I ((A -> Prop) -> Prop) g t.
Proof. exact (EQ_MP (@lem3546701 A g t) (@lem3546698 A B u f x''' g s t x'' h1)). Qed.
Lemma lem3546704 {A B : Type'} (u : A -> Prop) (f : A -> B) (x''' : A) (g : type686 A) (s : A -> Prop) (t : A -> Prop) (x'' : A) (h1 : term5527 A B u f x''' g s t x'') : @I ((A -> Prop) -> Prop) g t.
Proof. exact (proj1 (@lem3545176 A B u f x''' g s t x'' h1)). Qed.
Lemma lem3546705 {A B : Type'} (u : A -> Prop) (f : A -> B) (x''' : A) (g : type686 A) (s : A -> Prop) (t : A -> Prop) (x'' : A) (h1 : term5527 A B u f x''' g s t x'') : term829 A g t.
Proof. exact (fun h0 : term640 A g t => @lem3546704 A B u f x''' g s t x'' h1). Qed.
Lemma lem3546707 (p : Prop) : (term828 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem3546708 {A : Type'} (g : type686 A) (t : A -> Prop) : (term829 A g t) = (@I ((A -> Prop) -> Prop) g t).
Proof. exact (@lem3546707 (@I ((A -> Prop) -> Prop) g t)). Qed.
Lemma lem3546709 {A B : Type'} (u : A -> Prop) (f : A -> B) (x''' : A) (g : type686 A) (s : A -> Prop) (t : A -> Prop) (x'' : A) (h1 : term5527 A B u f x''' g s t x'') : @I ((A -> Prop) -> Prop) g t.
Proof. exact (EQ_MP (@lem3546708 A g t) (@lem3546705 A B u f x''' g s t x'' h1)). Qed.
Lemma lem3546712 {A : Type'} (t : A -> Prop) (s : A -> Prop) (h1 : term5040 A t s) : term5040 A t s.
Proof. exact (h1). Qed.
Lemma lem3546713 {A : Type'} (t : A -> Prop) (s : A -> Prop) (h1 : term5040 A t s) : term5592 A t s.
Proof. exact (fun h0 : t = s => @lem3546712 A t s h1). Qed.
Lemma lem3546715 (p : Prop) : (term4856 p) = (~ p).
Proof. exact (EQ_MP (@lem21028 p) (@lem21107 p)). Qed.
Lemma lem3546716 {A : Type'} (t : A -> Prop) (s : A -> Prop) : (term5592 A t s) = (term5040 A t s).
Proof. exact (@lem3546715 (t = s)). Qed.
Lemma lem3546717 {A : Type'} (t : A -> Prop) (s : A -> Prop) (h1 : term5040 A t s) : term5040 A t s.
Proof. exact (EQ_MP (@lem3546716 A t s) (@lem3546713 A t s h1)). Qed.
Lemma lem3546719 {A B : Type'} (u : A -> Prop) (f : A -> B) (x''' : A) (g : type686 A) (s : A -> Prop) (t : A -> Prop) (x'' : A) (h1 : term5527 A B u f x''' g s t x'') : @I (A -> Prop) u x''.
Proof. exact (proj1 (@lem3545174 A B u f x''' g s t x'' h1)). Qed.
Lemma lem3546720 {A B : Type'} (u : A -> Prop) (f : A -> B) (x''' : A) (g : type686 A) (s : A -> Prop) (t : A -> Prop) (x'' : A) (h1 : term5527 A B u f x''' g s t x'') : term839 A u x''.
Proof. exact (fun h0 : term619 A u x'' => @lem3546719 A B u f x''' g s t x'' h1). Qed.
Lemma lem3546722 (p : Prop) : (term828 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem3546723 {A : Type'} (u : A -> Prop) (x'' : A) : (term839 A u x'') = (@I (A -> Prop) u x'').
Proof. exact (@lem3546722 (@I (A -> Prop) u x'')). Qed.
Lemma lem3546724 {A B : Type'} (u : A -> Prop) (f : A -> B) (x''' : A) (g : type686 A) (s : A -> Prop) (t : A -> Prop) (x'' : A) (h1 : term5527 A B u f x''' g s t x'') : @I (A -> Prop) u x''.
Proof. exact (EQ_MP (@lem3546723 A u x'') (@lem3546720 A B u f x''' g s t x'' h1)). Qed.
Lemma lem3546726 {A B : Type'} (u : A -> Prop) (f : A -> B) (x''' : A) (g : type686 A) (s : A -> Prop) (t : A -> Prop) (x'' : A) (h1 : term5527 A B u f x''' g s t x'') : (@I (A -> B) f x'') = (@I (A -> B) f x''').
Proof. exact (proj1 (@lem3545179 A B u f x''' g s t x'' h1)). Qed.
Lemma lem3546727 {A B : Type'} (u : A -> Prop) (f : A -> B) (x''' : A) (g : type686 A) (s : A -> Prop) (t : A -> Prop) (x'' : A) (h1 : term5527 A B u f x''' g s t x'') : term5593 A B x'' f x'''.
Proof. exact (fun h0 : term623 A B x'' f x''' => @lem3546726 A B u f x''' g s t x'' h1). Qed.
Lemma lem3546729 (p : Prop) : (term828 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem3546730 {A B : Type'} (x'' : A) (f : A -> B) (x''' : A) : (term5593 A B x'' f x''') = ((@I (A -> B) f x'') = (@I (A -> B) f x''')).
Proof. exact (@lem3546729 ((@I (A -> B) f x'') = (@I (A -> B) f x'''))). Qed.
Lemma lem3546731 {A B : Type'} (u : A -> Prop) (f : A -> B) (x''' : A) (g : type686 A) (s : A -> Prop) (t : A -> Prop) (x'' : A) (h1 : term5527 A B u f x''' g s t x'') : (@I (A -> B) f x'') = (@I (A -> B) f x''').
Proof. exact (EQ_MP (@lem3546730 A B x'' f x''') (@lem3546727 A B u f x''' g s t x'' h1)). Qed.
Lemma lem3546733 {A B : Type'} (u : A -> Prop) (f : A -> B) (x''' : A) (g : type686 A) (s : A -> Prop) (t : A -> Prop) (x'' : A) (h1 : term5527 A B u f x''' g s t x'') : term619 A t x''.
Proof. exact (proj2 (@lem3545173 A B u f x''' g s t x'' h1)). Qed.
Lemma lem3546734 {A B : Type'} (u : A -> Prop) (f : A -> B) (x''' : A) (g : type686 A) (s : A -> Prop) (t : A -> Prop) (x'' : A) (h1 : term5527 A B u f x''' g s t x'') : term5594 A t x''.
Proof. exact (fun h0 : @I (A -> Prop) t x'' => @lem3546733 A B u f x''' g s t x'' h1). Qed.
Lemma lem3546736 (p : Prop) : (term4856 p) = (~ p).
Proof. exact (EQ_MP (@lem21028 p) (@lem21107 p)). Qed.
Lemma lem3546737 {A : Type'} (t : A -> Prop) (x'' : A) : (term5594 A t x'') = (term619 A t x'').
Proof. exact (@lem3546736 (@I (A -> Prop) t x'')). Qed.
Lemma lem3546738 {A B : Type'} (u : A -> Prop) (f : A -> B) (x''' : A) (g : type686 A) (s : A -> Prop) (t : A -> Prop) (x'' : A) (h1 : term5527 A B u f x''' g s t x'') : term619 A t x''.
Proof. exact (EQ_MP (@lem3546737 A t x'') (@lem3546734 A B u f x''' g s t x'' h1)). Qed.
Lemma lem3546744 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem3546745 {A B : Type'} (s : A -> Prop) (g : type686 A) (u : A -> Prop) (f : A -> B) (_37889 : A) (_37887 : A -> Prop) (_37888 : A) : (term5589 A B g s u f _37889 _37887 _37888) = (term5595 A B s g u f _37889 _37887 _37888).
Proof. exact (@lem3546744 (_37887 = s) (term640 A g _37887) (term819 A B u f _37889 _37887 _37888)). Qed.
Lemma lem3546761 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem3546762 {A B : Type'} (u : A -> Prop) (g : type686 A) (f : A -> B) (_37889 : A) (_37887 : A -> Prop) (_37888 : A) : (term820 A B g u f _37889 _37887 _37888) = (term934 A B u g f _37889 _37887 _37888).
Proof. exact (@lem3546761 (term619 A u _37888) (term640 A g _37887) (term818 A B f _37889 _37887 _37888)). Qed.
Lemma lem3546776 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem3546777 {A B : Type'} (f : A -> B) (g : type686 A) (_37889 : A) (_37887 : A -> Prop) (_37888 : A) : (term935 A B g f _37889 _37887 _37888) = (term936 A B f g _37889 _37887 _37888).
Proof. exact (@lem3546776 (term623 A B _37888 f _37889) (term640 A g _37887) (term937 A _37889 _37887 _37888)). Qed.
Lemma lem3546793 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem3546794 {A : Type'} (_37889 : A) (g : type686 A) (_37887 : A -> Prop) (_37888 : A) : (term938 A g _37889 _37887 _37888) = (term939 A _37889 g _37887 _37888).
Proof. exact (@lem3546793 (term619 A _37887 _37889) (term640 A g _37887) (@I (A -> Prop) _37887 _37888)). Qed.
Lemma lem3546808 (q : Prop) (p : Prop) : (p \/ q) = (q \/ p).
Proof. exact (proj1 (@lem827 (@el Prop) p q)). Qed.
Lemma lem3546809 {A : Type'} (_37888 : A) (g : type686 A) (_37887 : A -> Prop) : (term680 A g _37887 _37888) = (term830 A _37888 g _37887).
Proof. exact (@lem3546808 (@I (A -> Prop) _37887 _37888) (term640 A g _37887)). Qed.
Lemma lem3546815 {A : Type'} (_37887 : A -> Prop) (_37889 : A) : (term629 A _37887 _37889) = (term629 A _37887 _37889).
Proof. exact (eq_refl (term629 A _37887 _37889)). Qed.
Lemma lem3546816 {A : Type'} (_37889 : A) (_37888 : A) (g : type686 A) (_37887 : A -> Prop) : (term939 A _37889 g _37887 _37888) = (term940 A _37889 _37888 g _37887).
Proof. exact (MK_COMB (@lem3546815 A _37887 _37889) (@lem3546809 A _37888 g _37887)). Qed.
Lemma lem3546820 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem3546821 {A : Type'} (_37888 : A) (_37889 : A) (g : type686 A) (_37887 : A -> Prop) : (term940 A _37889 _37888 g _37887) = (term941 A _37888 _37889 g _37887).
Proof. exact (@lem3546820 (@I (A -> Prop) _37887 _37888) (term619 A _37887 _37889) (term640 A g _37887)). Qed.
Lemma lem3546837 {A : Type'} (_37888 : A) (_37889 : A) (g : type686 A) (_37887 : A -> Prop) : (term939 A _37889 g _37887 _37888) = (term941 A _37888 _37889 g _37887).
Proof. exact (TRANS (@lem3546816 A _37889 _37888 g _37887) (@lem3546821 A _37888 _37889 g _37887)). Qed.
Lemma lem3546838 {A : Type'} (_37888 : A) (_37889 : A) (g : type686 A) (_37887 : A -> Prop) : (term938 A g _37889 _37887 _37888) = (term941 A _37888 _37889 g _37887).
Proof. exact (TRANS (@lem3546794 A _37889 g _37887 _37888) (@lem3546837 A _37888 _37889 g _37887)). Qed.
Lemma lem3546839 {A B : Type'} (_37888 : A) (f : A -> B) (_37889 : A) : (term625 A B _37888 f _37889) = (term625 A B _37888 f _37889).
Proof. exact (eq_refl (term625 A B _37888 f _37889)). Qed.
Lemma lem3546840 {A B : Type'} (f : A -> B) (_37888 : A) (_37889 : A) (g : type686 A) (_37887 : A -> Prop) : (term936 A B f g _37889 _37887 _37888) = (term942 A B f _37888 _37889 g _37887).
Proof. exact (MK_COMB (@lem3546839 A B _37888 f _37889) (@lem3546838 A _37888 _37889 g _37887)). Qed.
Lemma lem3546844 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem3546845 {A B : Type'} (_37888 : A) (f : A -> B) (_37889 : A) (g : type686 A) (_37887 : A -> Prop) : (term942 A B f _37888 _37889 g _37887) = (term943 A B _37888 f _37889 g _37887).
Proof. exact (@lem3546844 (@I (A -> Prop) _37887 _37888) (term623 A B _37888 f _37889) (term883 A _37889 g _37887)). Qed.
Lemma lem3546873 {A B : Type'} (_37888 : A) (f : A -> B) (_37889 : A) (g : type686 A) (_37887 : A -> Prop) : (term936 A B f g _37889 _37887 _37888) = (term943 A B _37888 f _37889 g _37887).
Proof. exact (TRANS (@lem3546840 A B f _37888 _37889 g _37887) (@lem3546845 A B _37888 f _37889 g _37887)). Qed.
Lemma lem3546874 {A B : Type'} (_37888 : A) (f : A -> B) (_37889 : A) (g : type686 A) (_37887 : A -> Prop) : (term935 A B g f _37889 _37887 _37888) = (term943 A B _37888 f _37889 g _37887).
Proof. exact (TRANS (@lem3546777 A B f g _37889 _37887 _37888) (@lem3546873 A B _37888 f _37889 g _37887)). Qed.
Lemma lem3546875 {A : Type'} (u : A -> Prop) (_37888 : A) : (term629 A u _37888) = (term629 A u _37888).
Proof. exact (eq_refl (term629 A u _37888)). Qed.
Lemma lem3546876 {A B : Type'} (u : A -> Prop) (_37888 : A) (f : A -> B) (_37889 : A) (g : type686 A) (_37887 : A -> Prop) : (term934 A B u g f _37889 _37887 _37888) = (term944 A B u _37888 f _37889 g _37887).
Proof. exact (MK_COMB (@lem3546875 A u _37888) (@lem3546874 A B _37888 f _37889 g _37887)). Qed.
Lemma lem3546880 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem3546881 {A B : Type'} (u : A -> Prop) (_37888 : A) (f : A -> B) (_37889 : A) (g : type686 A) (_37887 : A -> Prop) : (term944 A B u _37888 f _37889 g _37887) = (term945 A B u _37888 f _37889 g _37887).
Proof. exact (@lem3546880 (@I (A -> Prop) _37887 _37888) (term619 A u _37888) (term946 A B _37888 f _37889 g _37887)). Qed.
Lemma lem3546895 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem3546896 {A B : Type'} (f : A -> B) (u : A -> Prop) (_37888 : A) (_37889 : A) (g : type686 A) (_37887 : A -> Prop) : (term947 A B u _37888 f _37889 g _37887) = (term948 A B f u _37888 _37889 g _37887).
Proof. exact (@lem3546895 (term623 A B _37888 f _37889) (term619 A u _37888) (term883 A _37889 g _37887)). Qed.
Lemma lem3546912 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem3546913 {A : Type'} (_37889 : A) (u : A -> Prop) (_37888 : A) (g : type686 A) (_37887 : A -> Prop) : (term949 A u _37888 _37889 g _37887) = (term950 A _37889 u _37888 g _37887).
Proof. exact (@lem3546912 (term619 A _37887 _37889) (term619 A u _37888) (term640 A g _37887)). Qed.
Lemma lem3546929 {A B : Type'} (_37888 : A) (f : A -> B) (_37889 : A) : (term625 A B _37888 f _37889) = (term625 A B _37888 f _37889).
Proof. exact (eq_refl (term625 A B _37888 f _37889)). Qed.
Lemma lem3546930 {A B : Type'} (f : A -> B) (_37889 : A) (u : A -> Prop) (_37888 : A) (g : type686 A) (_37887 : A -> Prop) : (term948 A B f u _37888 _37889 g _37887) = (term951 A B f _37889 u _37888 g _37887).
Proof. exact (MK_COMB (@lem3546929 A B _37888 f _37889) (@lem3546913 A _37889 u _37888 g _37887)). Qed.
Lemma lem3546941 {A B : Type'} (f : A -> B) (_37889 : A) (u : A -> Prop) (_37888 : A) (g : type686 A) (_37887 : A -> Prop) : (term947 A B u _37888 f _37889 g _37887) = (term951 A B f _37889 u _37888 g _37887).
Proof. exact (TRANS (@lem3546896 A B f u _37888 _37889 g _37887) (@lem3546930 A B f _37889 u _37888 g _37887)). Qed.
Lemma lem3546942 {A : Type'} (_37887 : A -> Prop) (_37888 : A) : (term884 A _37887 _37888) = (term884 A _37887 _37888).
Proof. exact (eq_refl (term884 A _37887 _37888)). Qed.
Lemma lem3546943 {A B : Type'} (f : A -> B) (_37889 : A) (u : A -> Prop) (_37888 : A) (g : type686 A) (_37887 : A -> Prop) : (term945 A B u _37888 f _37889 g _37887) = (term952 A B f _37889 u _37888 g _37887).
Proof. exact (MK_COMB (@lem3546942 A _37887 _37888) (@lem3546941 A B f _37889 u _37888 g _37887)). Qed.
Lemma lem3546954 {A B : Type'} (f : A -> B) (_37889 : A) (u : A -> Prop) (_37888 : A) (g : type686 A) (_37887 : A -> Prop) : (term944 A B u _37888 f _37889 g _37887) = (term952 A B f _37889 u _37888 g _37887).
Proof. exact (TRANS (@lem3546881 A B u _37888 f _37889 g _37887) (@lem3546943 A B f _37889 u _37888 g _37887)). Qed.
Lemma lem3546955 {A B : Type'} (f : A -> B) (_37889 : A) (u : A -> Prop) (_37888 : A) (g : type686 A) (_37887 : A -> Prop) : (term934 A B u g f _37889 _37887 _37888) = (term952 A B f _37889 u _37888 g _37887).
Proof. exact (TRANS (@lem3546876 A B u _37888 f _37889 g _37887) (@lem3546954 A B f _37889 u _37888 g _37887)). Qed.
Lemma lem3546956 {A B : Type'} (f : A -> B) (_37889 : A) (u : A -> Prop) (_37888 : A) (g : type686 A) (_37887 : A -> Prop) : (term820 A B g u f _37889 _37887 _37888) = (term952 A B f _37889 u _37888 g _37887).
Proof. exact (TRANS (@lem3546762 A B u g f _37889 _37887 _37888) (@lem3546955 A B f _37889 u _37888 g _37887)). Qed.
Lemma lem3546957 {A : Type'} (_37887 : A -> Prop) (s : A -> Prop) : (term5596 A _37887 s) = (term5596 A _37887 s).
Proof. exact (eq_refl (term5596 A _37887 s)). Qed.
Lemma lem3546958 {A B : Type'} (s : A -> Prop) (f : A -> B) (_37889 : A) (u : A -> Prop) (_37888 : A) (g : type686 A) (_37887 : A -> Prop) : (term5595 A B s g u f _37889 _37887 _37888) = (term5597 A B s f _37889 u _37888 g _37887).
Proof. exact (MK_COMB (@lem3546957 A _37887 s) (@lem3546956 A B f _37889 u _37888 g _37887)). Qed.
Lemma lem3546969 {A B : Type'} (s : A -> Prop) (f : A -> B) (_37889 : A) (u : A -> Prop) (_37888 : A) (g : type686 A) (_37887 : A -> Prop) : (term5589 A B g s u f _37889 _37887 _37888) = (term5597 A B s f _37889 u _37888 g _37887).
Proof. exact (TRANS (@lem3546745 A B s g u f _37889 _37887 _37888) (@lem3546958 A B s f _37889 u _37888 g _37887)). Qed.
Lemma lem3546970 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem3546971 {A B : Type'} (s : A -> Prop) (f : A -> B) (_37889 : A) (u : A -> Prop) (_37888 : A) (g : type686 A) (_37887 : A -> Prop) : (term5598 A B g s u f _37889 _37887 _37888) = (term5599 A B s f _37889 u _37888 g _37887).
Proof. exact (MK_COMB (@lem3546970) (@lem3546969 A B s f _37889 u _37888 g _37887)). Qed.
Lemma lem3546985 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem3546986 {A B : Type'} (s : A -> Prop) (g : type686 A) (u : A -> Prop) (f : A -> B) (_37889 : A) (_37887 : A -> Prop) (_37888 : A) : (term5600 A B g s u f _37889 _37887 _37888) = (term5601 A B s g u f _37889 _37887 _37888).
Proof. exact (@lem3546985 (_37887 = s) (term640 A g _37887) (term5602 A B u f _37889 _37887 _37888)). Qed.
Lemma lem3547002 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem3547003 {A B : Type'} (u : A -> Prop) (g : type686 A) (f : A -> B) (_37889 : A) (_37887 : A -> Prop) (_37888 : A) : (term5603 A B g u f _37889 _37887 _37888) = (term5604 A B u g f _37889 _37887 _37888).
Proof. exact (@lem3547002 (term619 A u _37888) (term640 A g _37887) (term5605 A B f _37889 _37887 _37888)). Qed.
Lemma lem3547017 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem3547018 {A B : Type'} (f : A -> B) (_37889 : A) (g : type686 A) (_37887 : A -> Prop) (_37888 : A) : (term5606 A B g f _37889 _37887 _37888) = (term5607 A B f _37889 g _37887 _37888).
Proof. exact (@lem3547017 (term623 A B _37888 f _37889) (term640 A g _37887) (@I (A -> Prop) _37887 _37888)). Qed.
Lemma lem3547034 (q : Prop) (p : Prop) : (p \/ q) = (q \/ p).
Proof. exact (proj1 (@lem827 (@el Prop) p q)). Qed.
Lemma lem3547035 {A : Type'} (_37888 : A) (g : type686 A) (_37887 : A -> Prop) : (term680 A g _37887 _37888) = (term830 A _37888 g _37887).
Proof. exact (@lem3547034 (@I (A -> Prop) _37887 _37888) (term640 A g _37887)). Qed.
Lemma lem3547041 {A B : Type'} (_37888 : A) (f : A -> B) (_37889 : A) : (term625 A B _37888 f _37889) = (term625 A B _37888 f _37889).
Proof. exact (eq_refl (term625 A B _37888 f _37889)). Qed.
Lemma lem3547042 {A B : Type'} (f : A -> B) (_37889 : A) (_37888 : A) (g : type686 A) (_37887 : A -> Prop) : (term5607 A B f _37889 g _37887 _37888) = (term5608 A B f _37889 _37888 g _37887).
Proof. exact (MK_COMB (@lem3547041 A B _37888 f _37889) (@lem3547035 A _37888 g _37887)). Qed.
Lemma lem3547046 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem3547047 {A B : Type'} (_37888 : A) (f : A -> B) (_37889 : A) (g : type686 A) (_37887 : A -> Prop) : (term5608 A B f _37889 _37888 g _37887) = (term5609 A B _37888 f _37889 g _37887).
Proof. exact (@lem3547046 (@I (A -> Prop) _37887 _37888) (term623 A B _37888 f _37889) (term640 A g _37887)). Qed.
Lemma lem3547065 {A B : Type'} (_37888 : A) (f : A -> B) (_37889 : A) (g : type686 A) (_37887 : A -> Prop) : (term5607 A B f _37889 g _37887 _37888) = (term5609 A B _37888 f _37889 g _37887).
Proof. exact (TRANS (@lem3547042 A B f _37889 _37888 g _37887) (@lem3547047 A B _37888 f _37889 g _37887)). Qed.
Lemma lem3547066 {A B : Type'} (_37888 : A) (f : A -> B) (_37889 : A) (g : type686 A) (_37887 : A -> Prop) : (term5606 A B g f _37889 _37887 _37888) = (term5609 A B _37888 f _37889 g _37887).
Proof. exact (TRANS (@lem3547018 A B f _37889 g _37887 _37888) (@lem3547065 A B _37888 f _37889 g _37887)). Qed.
Lemma lem3547067 {A : Type'} (u : A -> Prop) (_37888 : A) : (term629 A u _37888) = (term629 A u _37888).
Proof. exact (eq_refl (term629 A u _37888)). Qed.
Lemma lem3547068 {A B : Type'} (u : A -> Prop) (_37888 : A) (f : A -> B) (_37889 : A) (g : type686 A) (_37887 : A -> Prop) : (term5604 A B u g f _37889 _37887 _37888) = (term5610 A B u _37888 f _37889 g _37887).
Proof. exact (MK_COMB (@lem3547067 A u _37888) (@lem3547066 A B _37888 f _37889 g _37887)). Qed.
Lemma lem3547072 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem3547073 {A B : Type'} (u : A -> Prop) (_37888 : A) (f : A -> B) (_37889 : A) (g : type686 A) (_37887 : A -> Prop) : (term5610 A B u _37888 f _37889 g _37887) = (term5611 A B u _37888 f _37889 g _37887).
Proof. exact (@lem3547072 (@I (A -> Prop) _37887 _37888) (term619 A u _37888) (term5612 A B _37888 f _37889 g _37887)). Qed.
Lemma lem3547087 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem3547088 {A B : Type'} (f : A -> B) (_37889 : A) (u : A -> Prop) (_37888 : A) (g : type686 A) (_37887 : A -> Prop) : (term5613 A B u _37888 f _37889 g _37887) = (term5614 A B f _37889 u _37888 g _37887).
Proof. exact (@lem3547087 (term623 A B _37888 f _37889) (term619 A u _37888) (term640 A g _37887)). Qed.
Lemma lem3547106 {A : Type'} (_37887 : A -> Prop) (_37888 : A) : (term884 A _37887 _37888) = (term884 A _37887 _37888).
Proof. exact (eq_refl (term884 A _37887 _37888)). Qed.
Lemma lem3547107 {A B : Type'} (f : A -> B) (_37889 : A) (u : A -> Prop) (_37888 : A) (g : type686 A) (_37887 : A -> Prop) : (term5611 A B u _37888 f _37889 g _37887) = (term5615 A B f _37889 u _37888 g _37887).
Proof. exact (MK_COMB (@lem3547106 A _37887 _37888) (@lem3547088 A B f _37889 u _37888 g _37887)). Qed.
Lemma lem3547118 {A B : Type'} (f : A -> B) (_37889 : A) (u : A -> Prop) (_37888 : A) (g : type686 A) (_37887 : A -> Prop) : (term5610 A B u _37888 f _37889 g _37887) = (term5615 A B f _37889 u _37888 g _37887).
Proof. exact (TRANS (@lem3547073 A B u _37888 f _37889 g _37887) (@lem3547107 A B f _37889 u _37888 g _37887)). Qed.
Lemma lem3547119 {A B : Type'} (f : A -> B) (_37889 : A) (u : A -> Prop) (_37888 : A) (g : type686 A) (_37887 : A -> Prop) : (term5604 A B u g f _37889 _37887 _37888) = (term5615 A B f _37889 u _37888 g _37887).
Proof. exact (TRANS (@lem3547068 A B u _37888 f _37889 g _37887) (@lem3547118 A B f _37889 u _37888 g _37887)). Qed.
Lemma lem3547120 {A B : Type'} (f : A -> B) (_37889 : A) (u : A -> Prop) (_37888 : A) (g : type686 A) (_37887 : A -> Prop) : (term5603 A B g u f _37889 _37887 _37888) = (term5615 A B f _37889 u _37888 g _37887).
Proof. exact (TRANS (@lem3547003 A B u g f _37889 _37887 _37888) (@lem3547119 A B f _37889 u _37888 g _37887)). Qed.
Lemma lem3547121 {A : Type'} (_37887 : A -> Prop) (s : A -> Prop) : (term5596 A _37887 s) = (term5596 A _37887 s).
Proof. exact (eq_refl (term5596 A _37887 s)). Qed.
Lemma lem3547122 {A B : Type'} (s : A -> Prop) (f : A -> B) (_37889 : A) (u : A -> Prop) (_37888 : A) (g : type686 A) (_37887 : A -> Prop) : (term5601 A B s g u f _37889 _37887 _37888) = (term5616 A B s f _37889 u _37888 g _37887).
Proof. exact (MK_COMB (@lem3547121 A _37887 s) (@lem3547120 A B f _37889 u _37888 g _37887)). Qed.
Lemma lem3547133 {A B : Type'} (s : A -> Prop) (f : A -> B) (_37889 : A) (u : A -> Prop) (_37888 : A) (g : type686 A) (_37887 : A -> Prop) : (term5600 A B g s u f _37889 _37887 _37888) = (term5616 A B s f _37889 u _37888 g _37887).
Proof. exact (TRANS (@lem3546986 A B s g u f _37889 _37887 _37888) (@lem3547122 A B s f _37889 u _37888 g _37887)). Qed.
Lemma lem3547134 {A : Type'} (_37887 : A -> Prop) (_37889 : A) : (term629 A _37887 _37889) = (term629 A _37887 _37889).
Proof. exact (eq_refl (term629 A _37887 _37889)). Qed.
Lemma lem3547135 {A B : Type'} (s : A -> Prop) (f : A -> B) (_37889 : A) (u : A -> Prop) (_37888 : A) (g : type686 A) (_37887 : A -> Prop) : (term5617 A B g s u f _37889 _37887 _37888) = (term5618 A B s f _37889 u _37888 g _37887).
Proof. exact (MK_COMB (@lem3547134 A _37887 _37889) (@lem3547133 A B s f _37889 u _37888 g _37887)). Qed.
Lemma lem3547139 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem3547140 {A B : Type'} (s : A -> Prop) (f : A -> B) (_37889 : A) (u : A -> Prop) (_37888 : A) (g : type686 A) (_37887 : A -> Prop) : (term5618 A B s f _37889 u _37888 g _37887) = (term5619 A B s f _37889 u _37888 g _37887).
Proof. exact (@lem3547139 (_37887 = s) (term619 A _37887 _37889) (term5615 A B f _37889 u _37888 g _37887)). Qed.
Lemma lem3547156 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem3547157 {A B : Type'} (f : A -> B) (_37889 : A) (u : A -> Prop) (_37888 : A) (g : type686 A) (_37887 : A -> Prop) : (term5620 A B f _37889 u _37888 g _37887) = (term5621 A B f _37889 u _37888 g _37887).
Proof. exact (@lem3547156 (@I (A -> Prop) _37887 _37888) (term619 A _37887 _37889) (term5614 A B f _37889 u _37888 g _37887)). Qed.
Lemma lem3547171 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem3547172 {A B : Type'} (f : A -> B) (_37889 : A) (u : A -> Prop) (_37888 : A) (g : type686 A) (_37887 : A -> Prop) : (term5622 A B f _37889 u _37888 g _37887) = (term951 A B f _37889 u _37888 g _37887).
Proof. exact (@lem3547171 (term623 A B _37888 f _37889) (term619 A _37887 _37889) (term5623 A u _37888 g _37887)). Qed.
Lemma lem3547200 {A : Type'} (_37887 : A -> Prop) (_37888 : A) : (term884 A _37887 _37888) = (term884 A _37887 _37888).
Proof. exact (eq_refl (term884 A _37887 _37888)). Qed.
Lemma lem3547201 {A B : Type'} (f : A -> B) (_37889 : A) (u : A -> Prop) (_37888 : A) (g : type686 A) (_37887 : A -> Prop) : (term5621 A B f _37889 u _37888 g _37887) = (term952 A B f _37889 u _37888 g _37887).
Proof. exact (MK_COMB (@lem3547200 A _37887 _37888) (@lem3547172 A B f _37889 u _37888 g _37887)). Qed.
Lemma lem3547212 {A B : Type'} (f : A -> B) (_37889 : A) (u : A -> Prop) (_37888 : A) (g : type686 A) (_37887 : A -> Prop) : (term5620 A B f _37889 u _37888 g _37887) = (term952 A B f _37889 u _37888 g _37887).
Proof. exact (TRANS (@lem3547157 A B f _37889 u _37888 g _37887) (@lem3547201 A B f _37889 u _37888 g _37887)). Qed.
Lemma lem3547213 {A : Type'} (_37887 : A -> Prop) (s : A -> Prop) : (term5596 A _37887 s) = (term5596 A _37887 s).
Proof. exact (eq_refl (term5596 A _37887 s)). Qed.
Lemma lem3547214 {A B : Type'} (s : A -> Prop) (f : A -> B) (_37889 : A) (u : A -> Prop) (_37888 : A) (g : type686 A) (_37887 : A -> Prop) : (term5619 A B s f _37889 u _37888 g _37887) = (term5597 A B s f _37889 u _37888 g _37887).
Proof. exact (MK_COMB (@lem3547213 A _37887 s) (@lem3547212 A B f _37889 u _37888 g _37887)). Qed.
Lemma lem3547225 {A B : Type'} (s : A -> Prop) (f : A -> B) (_37889 : A) (u : A -> Prop) (_37888 : A) (g : type686 A) (_37887 : A -> Prop) : (term5618 A B s f _37889 u _37888 g _37887) = (term5597 A B s f _37889 u _37888 g _37887).
Proof. exact (TRANS (@lem3547140 A B s f _37889 u _37888 g _37887) (@lem3547214 A B s f _37889 u _37888 g _37887)). Qed.
Lemma lem3547226 {A B : Type'} (s : A -> Prop) (f : A -> B) (_37889 : A) (u : A -> Prop) (_37888 : A) (g : type686 A) (_37887 : A -> Prop) : (term5617 A B g s u f _37889 _37887 _37888) = (term5597 A B s f _37889 u _37888 g _37887).
Proof. exact (TRANS (@lem3547135 A B s f _37889 u _37888 g _37887) (@lem3547225 A B s f _37889 u _37888 g _37887)). Qed.
Lemma lem3547227 {A B : Type'} (s : A -> Prop) (f : A -> B) (_37889 : A) (u : A -> Prop) (_37888 : A) (g : type686 A) (_37887 : A -> Prop) : ((term5589 A B g s u f _37889 _37887 _37888) = (term5617 A B g s u f _37889 _37887 _37888)) = ((term5597 A B s f _37889 u _37888 g _37887) = (term5597 A B s f _37889 u _37888 g _37887)).
Proof. exact (MK_COMB (@lem3546971 A B s f _37889 u _37888 g _37887) (@lem3547226 A B s f _37889 u _37888 g _37887)). Qed.
Lemma lem3547229 {A : Type'} (x : A) : (x = x) = True.
Proof. exact (EQ_MP (@lem20665 A x) (@lem20664 A x)). Qed.
Lemma lem3547230 (x : Prop) : (x = x) = True.
Proof. exact (@lem3547229 Prop x). Qed.
Lemma lem3547231 {A B : Type'} (s : A -> Prop) (f : A -> B) (_37889 : A) (u : A -> Prop) (_37888 : A) (g : type686 A) (_37887 : A -> Prop) : ((term5597 A B s f _37889 u _37888 g _37887) = (term5597 A B s f _37889 u _37888 g _37887)) = True.
Proof. exact (@lem3547230 (term5597 A B s f _37889 u _37888 g _37887)). Qed.
Lemma lem3547232 {A B : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) (_37889 : A) (_37887 : A -> Prop) (_37888 : A) : ((term5589 A B g s u f _37889 _37887 _37888) = (term5617 A B g s u f _37889 _37887 _37888)) = True.
Proof. exact (TRANS (@lem3547227 A B s f _37889 u _37888 g _37887) (@lem3547231 A B s f _37889 u _37888 g _37887)). Qed.
Lemma lem3547233 {A B : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) (_37889 : A) (_37887 : A -> Prop) (_37888 : A) : True = ((term5589 A B g s u f _37889 _37887 _37888) = (term5617 A B g s u f _37889 _37887 _37888)).
Proof. exact (SYM (@lem3547232 A B g s u f _37889 _37887 _37888)). Qed.
Lemma lem3547234 {A B : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) (_37889 : A) (_37887 : A -> Prop) (_37888 : A) : (term5589 A B g s u f _37889 _37887 _37888) = (term5617 A B g s u f _37889 _37887 _37888).
Proof. exact (EQ_MP (@lem3547233 A B g s u f _37889 _37887 _37888) (@lem0)). Qed.
Lemma lem3547235 {A B : Type'} (_37889 : A) (_37887 : A -> Prop) (_37888 : A) (x'''' : A -> Prop) (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) (h1 : term5193 A B x'''' g s u f) : term5617 A B g s u f _37889 _37887 _37888.
Proof. exact (EQ_MP (@lem3547234 A B g s u f _37889 _37887 _37888) (@lem3546370 A B _37889 _37887 _37888 x'''' g s u f h1)). Qed.
Lemma lem3547237 (b : Prop) (a : Prop) : (a \/ b) = (term833 b a).
Proof. exact (EQ_MP (@lem20682 b a) (@lem20764 b a)). Qed.
Lemma lem3547238 {A B : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) (_37888 : A) (_37887 : A -> Prop) (_37889 : A) : (term5617 A B g s u f _37889 _37887 _37888) = (term5624 A B g s u f _37888 _37887 _37889).
Proof. exact (@lem3547237 (term5600 A B g s u f _37889 _37887 _37888) (term619 A _37887 _37889)). Qed.
Lemma lem3547240 (a : Prop) (b : Prop) : (term887 a b) = (term888 a b).
Proof. exact (EQ_MP (@lem20789 a b) (@lem20895 a b)). Qed.
Lemma lem3547241 {A B : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) (_37889 : A) (_37887 : A -> Prop) (_37888 : A) : (term5625 A B g s u f _37889 _37887 _37888) = (term5626 A B g s u f _37889 _37887 _37888).
Proof. exact (@lem3547240 (term640 A g _37887) (term5627 A B s u f _37889 _37887 _37888)). Qed.
Lemma lem3547243 (a : Prop) : (term282 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem3547244 {A : Type'} (g : type686 A) (_37887 : A -> Prop) : (term835 A g _37887) = (@I ((A -> Prop) -> Prop) g _37887).
Proof. exact (@lem3547243 (@I ((A -> Prop) -> Prop) g _37887)). Qed.
Lemma lem3547245 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem3547246 {A : Type'} (g : type686 A) (_37887 : A -> Prop) : (term891 A g _37887) = (term678 A g _37887).
Proof. exact (MK_COMB (@lem3547245) (@lem3547244 A g _37887)). Qed.
Lemma lem3547248 (a : Prop) (b : Prop) : (term887 a b) = (term888 a b).
Proof. exact (EQ_MP (@lem20789 a b) (@lem20895 a b)). Qed.
Lemma lem3547249 {A B : Type'} (s : A -> Prop) (u : A -> Prop) (f : A -> B) (_37889 : A) (_37887 : A -> Prop) (_37888 : A) : (term5628 A B s u f _37889 _37887 _37888) = (term5629 A B s u f _37889 _37887 _37888).
Proof. exact (@lem3547248 (_37887 = s) (term5602 A B u f _37889 _37887 _37888)). Qed.
Lemma lem3547251 (a : Prop) (b : Prop) : (term887 a b) = (term888 a b).
Proof. exact (EQ_MP (@lem20789 a b) (@lem20895 a b)). Qed.
Lemma lem3547252 {A B : Type'} (u : A -> Prop) (f : A -> B) (_37889 : A) (_37887 : A -> Prop) (_37888 : A) : (term5630 A B u f _37889 _37887 _37888) = (term5631 A B u f _37889 _37887 _37888).
Proof. exact (@lem3547251 (term619 A u _37888) (term5605 A B f _37889 _37887 _37888)). Qed.
Lemma lem3547254 (a : Prop) : (term282 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem3547255 {A : Type'} (u : A -> Prop) (_37888 : A) : (term892 A u _37888) = (@I (A -> Prop) u _37888).
Proof. exact (@lem3547254 (@I (A -> Prop) u _37888)). Qed.
Lemma lem3547256 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem3547257 {A : Type'} (u : A -> Prop) (_37888 : A) : (term965 A u _37888) = (term966 A u _37888).
Proof. exact (MK_COMB (@lem3547256) (@lem3547255 A u _37888)). Qed.
Lemma lem3547259 (a : Prop) (b : Prop) : (term887 a b) = (term888 a b).
Proof. exact (EQ_MP (@lem20789 a b) (@lem20895 a b)). Qed.
Lemma lem3547260 {A B : Type'} (f : A -> B) (_37889 : A) (_37887 : A -> Prop) (_37888 : A) : (term5632 A B f _37889 _37887 _37888) = (term5633 A B f _37889 _37887 _37888).
Proof. exact (@lem3547259 (term623 A B _37888 f _37889) (@I (A -> Prop) _37887 _37888)). Qed.
Lemma lem3547262 (a : Prop) : (term282 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem3547263 {A B : Type'} (_37888 : A) (f : A -> B) (_37889 : A) : (term969 A B _37888 f _37889) = ((@I (A -> B) f _37888) = (@I (A -> B) f _37889)).
Proof. exact (@lem3547262 ((@I (A -> B) f _37888) = (@I (A -> B) f _37889))). Qed.
Lemma lem3547264 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem3547265 {A B : Type'} (_37888 : A) (f : A -> B) (_37889 : A) : (term970 A B _37888 f _37889) = (term971 A B _37888 f _37889).
Proof. exact (MK_COMB (@lem3547264) (@lem3547263 A B _37888 f _37889)). Qed.
Lemma lem3547266 {A : Type'} (_37887 : A -> Prop) (_37888 : A) : (term619 A _37887 _37888) = (term619 A _37887 _37888).
Proof. exact (eq_refl (term619 A _37887 _37888)). Qed.
Lemma lem3547267 {A B : Type'} (f : A -> B) (_37889 : A) (_37887 : A -> Prop) (_37888 : A) : (term5633 A B f _37889 _37887 _37888) = (term5634 A B f _37889 _37887 _37888).
Proof. exact (MK_COMB (@lem3547265 A B _37888 f _37889) (@lem3547266 A _37887 _37888)). Qed.
Lemma lem3547268 {A B : Type'} (f : A -> B) (_37889 : A) (_37887 : A -> Prop) (_37888 : A) : (term5632 A B f _37889 _37887 _37888) = (term5634 A B f _37889 _37887 _37888).
Proof. exact (TRANS (@lem3547260 A B f _37889 _37887 _37888) (@lem3547267 A B f _37889 _37887 _37888)). Qed.
Lemma lem3547269 {A B : Type'} (u : A -> Prop) (f : A -> B) (_37889 : A) (_37887 : A -> Prop) (_37888 : A) : (term5631 A B u f _37889 _37887 _37888) = (term5635 A B u f _37889 _37887 _37888).
Proof. exact (MK_COMB (@lem3547257 A u _37888) (@lem3547268 A B f _37889 _37887 _37888)). Qed.
Lemma lem3547270 {A B : Type'} (u : A -> Prop) (f : A -> B) (_37889 : A) (_37887 : A -> Prop) (_37888 : A) : (term5630 A B u f _37889 _37887 _37888) = (term5635 A B u f _37889 _37887 _37888).
Proof. exact (TRANS (@lem3547252 A B u f _37889 _37887 _37888) (@lem3547269 A B u f _37889 _37887 _37888)). Qed.
Lemma lem3547271 {A : Type'} (_37887 : A -> Prop) (s : A -> Prop) : (term5636 A _37887 s) = (term5636 A _37887 s).
Proof. exact (eq_refl (term5636 A _37887 s)). Qed.
Lemma lem3547272 {A B : Type'} (s : A -> Prop) (u : A -> Prop) (f : A -> B) (_37889 : A) (_37887 : A -> Prop) (_37888 : A) : (term5629 A B s u f _37889 _37887 _37888) = (term5637 A B s u f _37889 _37887 _37888).
Proof. exact (MK_COMB (@lem3547271 A _37887 s) (@lem3547270 A B u f _37889 _37887 _37888)). Qed.
Lemma lem3547273 {A B : Type'} (s : A -> Prop) (u : A -> Prop) (f : A -> B) (_37889 : A) (_37887 : A -> Prop) (_37888 : A) : (term5628 A B s u f _37889 _37887 _37888) = (term5637 A B s u f _37889 _37887 _37888).
Proof. exact (TRANS (@lem3547249 A B s u f _37889 _37887 _37888) (@lem3547272 A B s u f _37889 _37887 _37888)). Qed.
Lemma lem3547274 {A B : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) (_37889 : A) (_37887 : A -> Prop) (_37888 : A) : (term5626 A B g s u f _37889 _37887 _37888) = (term5638 A B g s u f _37889 _37887 _37888).
Proof. exact (MK_COMB (@lem3547246 A g _37887) (@lem3547273 A B s u f _37889 _37887 _37888)). Qed.
Lemma lem3547275 {A B : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) (_37889 : A) (_37887 : A -> Prop) (_37888 : A) : (term5625 A B g s u f _37889 _37887 _37888) = (term5638 A B g s u f _37889 _37887 _37888).
Proof. exact (TRANS (@lem3547241 A B g s u f _37889 _37887 _37888) (@lem3547274 A B g s u f _37889 _37887 _37888)). Qed.
Lemma lem3547276 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem3547277 {A B : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) (_37889 : A) (_37887 : A -> Prop) (_37888 : A) : (term5639 A B g s u f _37889 _37887 _37888) = (term5640 A B g s u f _37889 _37887 _37888).
Proof. exact (MK_COMB (@lem3547276) (@lem3547275 A B g s u f _37889 _37887 _37888)). Qed.
Lemma lem3547278 {A : Type'} (_37887 : A -> Prop) (_37889 : A) : (term619 A _37887 _37889) = (term619 A _37887 _37889).
Proof. exact (eq_refl (term619 A _37887 _37889)). Qed.
Lemma lem3547279 {A B : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) (_37888 : A) (_37887 : A -> Prop) (_37889 : A) : (term5624 A B g s u f _37888 _37887 _37889) = (term5641 A B g s u f _37888 _37887 _37889).
Proof. exact (MK_COMB (@lem3547277 A B g s u f _37889 _37887 _37888) (@lem3547278 A _37887 _37889)). Qed.
Lemma lem3547280 {A B : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) (_37888 : A) (_37887 : A -> Prop) (_37889 : A) : (term5617 A B g s u f _37889 _37887 _37888) = (term5641 A B g s u f _37888 _37887 _37889).
Proof. exact (TRANS (@lem3547238 A B g s u f _37888 _37887 _37889) (@lem3547279 A B g s u f _37888 _37887 _37889)). Qed.
Lemma lem3547282 {A B : Type'} (u : A -> Prop) (f : A -> B) (x''' : A) (g : type686 A) (s : A -> Prop) (t : A -> Prop) (x'' : A) (h1 : term5527 A B u f x''' g s t x'') : term5634 A B f x''' t x''.
Proof. exact (conj (@lem3546731 A B u f x''' g s t x'' h1) (@lem3546738 A B u f x''' g s t x'' h1)). Qed.
Lemma lem3547283 {A B : Type'} (u : A -> Prop) (f : A -> B) (x''' : A) (g : type686 A) (s : A -> Prop) (t : A -> Prop) (x'' : A) (h1 : term5527 A B u f x''' g s t x'') : term5635 A B u f x''' t x''.
Proof. exact (conj (@lem3546724 A B u f x''' g s t x'' h1) (@lem3547282 A B u f x''' g s t x'' h1)). Qed.
Lemma lem3547284 {A B : Type'} (u : A -> Prop) (f : A -> B) (x''' : A) (g : type686 A) (s : A -> Prop) (t : A -> Prop) (x'' : A) (h1 : term5040 A t s) (h2 : term5527 A B u f x''' g s t x'') : term5637 A B s u f x''' t x''.
Proof. exact (conj (@lem3546717 A t s h1) (@lem3547283 A B u f x''' g s t x'' h2)). Qed.
Lemma lem3547285 {A B : Type'} (u : A -> Prop) (f : A -> B) (x''' : A) (g : type686 A) (s : A -> Prop) (t : A -> Prop) (x'' : A) (h1 : term5040 A t s) (h2 : term5527 A B u f x''' g s t x'') : term5638 A B g s u f x''' t x''.
Proof. exact (conj (@lem3546709 A B u f x''' g s t x'' h2) (@lem3547284 A B u f x''' g s t x'' h1 h2)). Qed.
Lemma lem3547287 {A B : Type'} (_37888 : A) (_37887 : A -> Prop) (_37889 : A) (x'''' : A -> Prop) (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) (h1 : term5193 A B x'''' g s u f) : term5641 A B g s u f _37888 _37887 _37889.
Proof. exact (EQ_MP (@lem3547280 A B g s u f _37888 _37887 _37889) (@lem3547235 A B _37889 _37887 _37888 x'''' g s u f h1)). Qed.
Lemma lem3547288 {A B : Type'} (_37888 : A) (_37887 : A -> Prop) (_37889 : A) (x'''' : A -> Prop) (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) (h1 : term5193 A B x'''' g s u f) : term5641 A B g s u f _37888 _37887 _37889.
Proof. exact (@lem3547287 A B _37888 _37887 _37889 x'''' g s u f h1). Qed.
Lemma lem3547289 {A B : Type'} (x'' : A) (t : A -> Prop) (x''' : A) (x'''' : A -> Prop) (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) (h1 : term5193 A B x'''' g s u f) : term5641 A B g s u f x'' t x'''.
Proof. exact (@lem3547288 A B x'' t x''' x'''' g s u f h1). Qed.
Lemma lem3547292 {A B : Type'} (x'''' : A -> Prop) (u : A -> Prop) (f : A -> B) (x''' : A) (g : type686 A) (s : A -> Prop) (t : A -> Prop) (x'' : A) (h1 : term5040 A t s) (h2 : term5193 A B x'''' g s u f) (h3 : term5527 A B u f x''' g s t x'') : term619 A t x'''.
Proof. exact (@lem3547289 A B x'' t x''' x'''' g s u f h2 (@lem3547285 A B u f x''' g s t x'' h1 h3)). Qed.
Lemma lem3547293 {A B : Type'} (x'''' : A -> Prop) (u : A -> Prop) (f : A -> B) (x''' : A) (g : type686 A) (s : A -> Prop) (t : A -> Prop) (x'' : A) (h1 : term5040 A t s) (h2 : term5193 A B x'''' g s u f) (h3 : term5527 A B u f x''' g s t x'') : term5594 A t x'''.
Proof. exact (fun h0 : @I (A -> Prop) t x''' => @lem3547292 A B x'''' u f x''' g s t x'' h1 h2 h3). Qed.
Lemma lem3547295 (p : Prop) : (term4856 p) = (~ p).
Proof. exact (EQ_MP (@lem21028 p) (@lem21107 p)). Qed.
Lemma lem3547296 {A : Type'} (t : A -> Prop) (x''' : A) : (term5594 A t x''') = (term619 A t x''').
Proof. exact (@lem3547295 (@I (A -> Prop) t x''')). Qed.
Lemma lem3547297 {A B : Type'} (x'''' : A -> Prop) (u : A -> Prop) (f : A -> B) (x''' : A) (g : type686 A) (s : A -> Prop) (t : A -> Prop) (x'' : A) (h1 : term5040 A t s) (h2 : term5193 A B x'''' g s u f) (h3 : term5527 A B u f x''' g s t x'') : term619 A t x'''.
Proof. exact (EQ_MP (@lem3547296 A t x''') (@lem3547293 A B x'''' u f x''' g s t x'' h1 h2 h3)). Qed.
Lemma lem3547303 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem3547304 {A : Type'} (s : A -> Prop) (g : type686 A) (_37890 : A -> Prop) (x''' : A) : (term5590 A g s _37890 x''') = (term5642 A s g _37890 x''').
Proof. exact (@lem3547303 (_37890 = s) (term640 A g _37890) (@I (A -> Prop) _37890 x''')). Qed.
Lemma lem3547320 (q : Prop) (p : Prop) : (p \/ q) = (q \/ p).
Proof. exact (proj1 (@lem827 (@el Prop) p q)). Qed.
Lemma lem3547321 {A : Type'} (x''' : A) (g : type686 A) (_37890 : A -> Prop) : (term680 A g _37890 x''') = (term830 A x''' g _37890).
Proof. exact (@lem3547320 (@I (A -> Prop) _37890 x''') (term640 A g _37890)). Qed.
Lemma lem3547327 {A : Type'} (_37890 : A -> Prop) (s : A -> Prop) : (term5596 A _37890 s) = (term5596 A _37890 s).
Proof. exact (eq_refl (term5596 A _37890 s)). Qed.
Lemma lem3547328 {A : Type'} (s : A -> Prop) (x''' : A) (g : type686 A) (_37890 : A -> Prop) : (term5642 A s g _37890 x''') = (term5643 A s x''' g _37890).
Proof. exact (MK_COMB (@lem3547327 A _37890 s) (@lem3547321 A x''' g _37890)). Qed.
Lemma lem3547339 {A : Type'} (s : A -> Prop) (x''' : A) (g : type686 A) (_37890 : A -> Prop) : (term5590 A g s _37890 x''') = (term5643 A s x''' g _37890).
Proof. exact (TRANS (@lem3547304 A s g _37890 x''') (@lem3547328 A s x''' g _37890)). Qed.
Lemma lem3547340 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem3547341 {A : Type'} (s : A -> Prop) (x''' : A) (g : type686 A) (_37890 : A -> Prop) : (term5644 A g s _37890 x''') = (term5645 A s x''' g _37890).
Proof. exact (MK_COMB (@lem3547340) (@lem3547339 A s x''' g _37890)). Qed.
Lemma lem3547357 (q : Prop) (p : Prop) : (p \/ q) = (q \/ p).
Proof. exact (proj1 (@lem827 (@el Prop) p q)). Qed.
Lemma lem3547358 {A : Type'} (x''' : A) (g : type686 A) (_37890 : A -> Prop) : (term680 A g _37890 x''') = (term830 A x''' g _37890).
Proof. exact (@lem3547357 (@I (A -> Prop) _37890 x''') (term640 A g _37890)). Qed.
Lemma lem3547364 {A : Type'} (_37890 : A -> Prop) (s : A -> Prop) : (term5596 A _37890 s) = (term5596 A _37890 s).
Proof. exact (eq_refl (term5596 A _37890 s)). Qed.
Lemma lem3547365 {A : Type'} (s : A -> Prop) (x''' : A) (g : type686 A) (_37890 : A -> Prop) : (term5642 A s g _37890 x''') = (term5643 A s x''' g _37890).
Proof. exact (MK_COMB (@lem3547364 A _37890 s) (@lem3547358 A x''' g _37890)). Qed.
Lemma lem3547376 {A : Type'} (s : A -> Prop) (x''' : A) (g : type686 A) (_37890 : A -> Prop) : ((term5590 A g s _37890 x''') = (term5642 A s g _37890 x''')) = ((term5643 A s x''' g _37890) = (term5643 A s x''' g _37890)).
Proof. exact (MK_COMB (@lem3547341 A s x''' g _37890) (@lem3547365 A s x''' g _37890)). Qed.
Lemma lem3547378 {A : Type'} (x : A) : (x = x) = True.
Proof. exact (EQ_MP (@lem20665 A x) (@lem20664 A x)). Qed.
Lemma lem3547379 (x : Prop) : (x = x) = True.
Proof. exact (@lem3547378 Prop x). Qed.
Lemma lem3547380 {A : Type'} (s : A -> Prop) (x''' : A) (g : type686 A) (_37890 : A -> Prop) : ((term5643 A s x''' g _37890) = (term5643 A s x''' g _37890)) = True.
Proof. exact (@lem3547379 (term5643 A s x''' g _37890)). Qed.
Lemma lem3547381 {A : Type'} (s : A -> Prop) (g : type686 A) (_37890 : A -> Prop) (x''' : A) : ((term5590 A g s _37890 x''') = (term5642 A s g _37890 x''')) = True.
Proof. exact (TRANS (@lem3547376 A s x''' g _37890) (@lem3547380 A s x''' g _37890)). Qed.
Lemma lem3547382 {A : Type'} (s : A -> Prop) (g : type686 A) (_37890 : A -> Prop) (x''' : A) : True = ((term5590 A g s _37890 x''') = (term5642 A s g _37890 x''')).
Proof. exact (SYM (@lem3547381 A s g _37890 x''')). Qed.
Lemma lem3547383 {A : Type'} (s : A -> Prop) (g : type686 A) (_37890 : A -> Prop) (x''' : A) : (term5590 A g s _37890 x''') = (term5642 A s g _37890 x''').
Proof. exact (EQ_MP (@lem3547382 A s g _37890 x''') (@lem0)). Qed.
Lemma lem3547384 {A B : Type'} (_37890 : A -> Prop) (u : A -> Prop) (f : A -> B) (x''' : A) (g : type686 A) (s : A -> Prop) (t : A -> Prop) (x'' : A) (h1 : term5527 A B u f x''' g s t x'') : term5642 A s g _37890 x'''.
Proof. exact (EQ_MP (@lem3547383 A s g _37890 x''') (@lem3546396 A B _37890 u f x''' g s t x'' h1)). Qed.
Lemma lem3547386 (b : Prop) (a : Prop) : (a \/ b) = (term833 b a).
Proof. exact (EQ_MP (@lem20682 b a) (@lem20764 b a)). Qed.
Lemma lem3547387 {A : Type'} (g : type686 A) (x''' : A) (_37890 : A -> Prop) (s : A -> Prop) : (term5642 A s g _37890 x''') = (term5646 A g x''' _37890 s).
Proof. exact (@lem3547386 (term680 A g _37890 x''') (_37890 = s)). Qed.
Lemma lem3547389 (a : Prop) (b : Prop) : (term887 a b) = (term888 a b).
Proof. exact (EQ_MP (@lem20789 a b) (@lem20895 a b)). Qed.
Lemma lem3547390 {A : Type'} (g : type686 A) (_37890 : A -> Prop) (x''' : A) : (term5647 A g _37890 x''') = (term5648 A g _37890 x''').
Proof. exact (@lem3547389 (term640 A g _37890) (@I (A -> Prop) _37890 x''')). Qed.
Lemma lem3547392 (a : Prop) : (term282 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem3547393 {A : Type'} (g : type686 A) (_37890 : A -> Prop) : (term835 A g _37890) = (@I ((A -> Prop) -> Prop) g _37890).
Proof. exact (@lem3547392 (@I ((A -> Prop) -> Prop) g _37890)). Qed.
Lemma lem3547394 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem3547395 {A : Type'} (g : type686 A) (_37890 : A -> Prop) : (term891 A g _37890) = (term678 A g _37890).
Proof. exact (MK_COMB (@lem3547394) (@lem3547393 A g _37890)). Qed.
Lemma lem3547396 {A : Type'} (_37890 : A -> Prop) (x''' : A) : (term619 A _37890 x''') = (term619 A _37890 x''').
Proof. exact (eq_refl (term619 A _37890 x''')). Qed.
Lemma lem3547397 {A : Type'} (g : type686 A) (_37890 : A -> Prop) (x''' : A) : (term5648 A g _37890 x''') = (term5649 A g _37890 x''').
Proof. exact (MK_COMB (@lem3547395 A g _37890) (@lem3547396 A _37890 x''')). Qed.
Lemma lem3547398 {A : Type'} (g : type686 A) (_37890 : A -> Prop) (x''' : A) : (term5647 A g _37890 x''') = (term5649 A g _37890 x''').
Proof. exact (TRANS (@lem3547390 A g _37890 x''') (@lem3547397 A g _37890 x''')). Qed.
Lemma lem3547399 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem3547400 {A : Type'} (g : type686 A) (_37890 : A -> Prop) (x''' : A) : (term5650 A g _37890 x''') = (term5651 A g _37890 x''').
Proof. exact (MK_COMB (@lem3547399) (@lem3547398 A g _37890 x''')). Qed.
Lemma lem3547401 {A : Type'} (_37890 : A -> Prop) (s : A -> Prop) : (_37890 = s) = (_37890 = s).
Proof. exact (eq_refl (_37890 = s)). Qed.
Lemma lem3547402 {A : Type'} (g : type686 A) (x''' : A) (_37890 : A -> Prop) (s : A -> Prop) : (term5646 A g x''' _37890 s) = (term5652 A g x''' _37890 s).
Proof. exact (MK_COMB (@lem3547400 A g _37890 x''') (@lem3547401 A _37890 s)). Qed.
Lemma lem3547403 {A : Type'} (g : type686 A) (x''' : A) (_37890 : A -> Prop) (s : A -> Prop) : (term5642 A s g _37890 x''') = (term5652 A g x''' _37890 s).
Proof. exact (TRANS (@lem3547387 A g x''' _37890 s) (@lem3547402 A g x''' _37890 s)). Qed.
Lemma lem3547405 {A B : Type'} (x'''' : A -> Prop) (u : A -> Prop) (f : A -> B) (x''' : A) (g : type686 A) (s : A -> Prop) (t : A -> Prop) (x'' : A) (h1 : term5040 A t s) (h2 : term5193 A B x'''' g s u f) (h3 : term5527 A B u f x''' g s t x'') : term5649 A g t x'''.
Proof. exact (conj (@lem3546702 A B u f x''' g s t x'' h3) (@lem3547297 A B x'''' u f x''' g s t x'' h1 h2 h3)). Qed.
Lemma lem3547407 {A B : Type'} (_37890 : A -> Prop) (u : A -> Prop) (f : A -> B) (x''' : A) (g : type686 A) (s : A -> Prop) (t : A -> Prop) (x'' : A) (h1 : term5527 A B u f x''' g s t x'') : term5652 A g x''' _37890 s.
Proof. exact (EQ_MP (@lem3547403 A g x''' _37890 s) (@lem3547384 A B _37890 u f x''' g s t x'' h1)). Qed.
Lemma lem3547408 {A B : Type'} (_37890 : A -> Prop) (u : A -> Prop) (f : A -> B) (x''' : A) (g : type686 A) (s : A -> Prop) (t : A -> Prop) (x'' : A) (h1 : term5527 A B u f x''' g s t x'') : term5652 A g x''' _37890 s.
Proof. exact (@lem3547407 A B _37890 u f x''' g s t x'' h1). Qed.
Lemma lem3547409 {A B : Type'} (u : A -> Prop) (f : A -> B) (x''' : A) (g : type686 A) (s : A -> Prop) (t : A -> Prop) (x'' : A) (h1 : term5527 A B u f x''' g s t x'') : term5652 A g x''' t s.
Proof. exact (@lem3547408 A B t u f x''' g s t x'' h1). Qed.
Lemma lem3547412 {A B : Type'} (x'''' : A -> Prop) (u : A -> Prop) (f : A -> B) (x''' : A) (g : type686 A) (s : A -> Prop) (t : A -> Prop) (x'' : A) (h1 : term5040 A t s) (h2 : term5193 A B x'''' g s u f) (h3 : term5527 A B u f x''' g s t x'') : t = s.
Proof. exact (@lem3547409 A B u f x''' g s t x'' h3 (@lem3547405 A B x'''' u f x''' g s t x'' h1 h2 h3)). Qed.
Lemma lem3547413 {A B : Type'} (x'''' : A -> Prop) (u : A -> Prop) (f : A -> B) (x''' : A) (g : type686 A) (s : A -> Prop) (t : A -> Prop) (x'' : A) (h1 : term5193 A B x'''' g s u f) (h2 : term5527 A B u f x''' g s t x'') : term5653 A t s.
Proof. exact (fun h0 : term5040 A t s => @lem3547412 A B x'''' u f x''' g s t x'' h0 h1 h2). Qed.
Lemma lem3547415 (p : Prop) : (term828 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem3547416 {A : Type'} (t : A -> Prop) (s : A -> Prop) : (term5653 A t s) = (t = s).
Proof. exact (@lem3547415 (t = s)). Qed.
Lemma lem3547417 {A B : Type'} (x'''' : A -> Prop) (u : A -> Prop) (f : A -> B) (x''' : A) (g : type686 A) (s : A -> Prop) (t : A -> Prop) (x'' : A) (h1 : term5193 A B x'''' g s u f) (h2 : term5527 A B u f x''' g s t x'') : t = s.
Proof. exact (EQ_MP (@lem3547416 A t s) (@lem3547413 A B x'''' u f x''' g s t x'' h1 h2)). Qed.
Lemma lem3547420 (p : Prop) : (~ p) = (p -> False).
Proof. exact (EQ_MP (@lem21021 p) (@lem0)). Qed.
Lemma lem3547422 {A : Type'} (t : A -> Prop) (s : A -> Prop) : (term5040 A t s) = (term5654 A t s).
Proof. exact (@lem3547420 (t = s)). Qed.
Lemma lem3547425 {A B : Type'} (u : A -> Prop) (f : A -> B) (x''' : A) (g : type686 A) (s : A -> Prop) (t : A -> Prop) (x'' : A) (h1 : term5527 A B u f x''' g s t x'') : term5654 A t s.
Proof. exact (EQ_MP (@lem3547422 A t s) (@lem3546380 A B u f x''' g s t x'' h1)). Qed.
Lemma lem3547428 {A B : Type'} (x'''' : A -> Prop) (u : A -> Prop) (f : A -> B) (x''' : A) (g : type686 A) (s : A -> Prop) (t : A -> Prop) (x'' : A) (h1 : term5193 A B x'''' g s u f) (h2 : term5527 A B u f x''' g s t x'') : False.
Proof. exact (@lem3547425 A B u f x''' g s t x'' h2 (@lem3547417 A B x'''' u f x''' g s t x'' h1 h2)). Qed.
Lemma lem3547429 {A B : Type'} (x'''' : A -> Prop) (u : A -> Prop) (f : A -> B) (x''' : A) (g : type686 A) (s : A -> Prop) (t : A -> Prop) (x'' : A) (h1 : term5193 A B x'''' g s u f) (h2 : term5527 A B u f x''' g s t x'') : term847.
Proof. exact (fun h0 : ~ False => @lem3547428 A B x'''' u f x''' g s t x'' h1 h2). Qed.
Lemma lem3547431 (p : Prop) : (term828 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem3547432 : term847 = False.
Proof. exact (@lem3547431 False). Qed.
Lemma lem3547433 {A B : Type'} (x'''' : A -> Prop) (u : A -> Prop) (f : A -> B) (x''' : A) (g : type686 A) (s : A -> Prop) (t : A -> Prop) (x'' : A) (h1 : term5193 A B x'''' g s u f) (h2 : term5527 A B u f x''' g s t x'') : False.
Proof. exact (EQ_MP (@lem3547432) (@lem3547429 A B x'''' u f x''' g s t x'' h1 h2)). Qed.
Lemma lem3547498 {A B : Type'} (u : A -> Prop) (f : A -> B) (x''' : A) (g : type686 A) (s : A -> Prop) (t : A -> Prop) (x'' : A) (h1 : term5527 A B u f x''' g s t x'') : @I ((A -> Prop) -> Prop) g t.
Proof. exact (proj1 (@lem3545176 A B u f x''' g s t x'' h1)). Qed.
Lemma lem3547499 {A B : Type'} (u : A -> Prop) (f : A -> B) (x''' : A) (g : type686 A) (s : A -> Prop) (t : A -> Prop) (x'' : A) (h1 : term5527 A B u f x''' g s t x'') : term829 A g t.
Proof. exact (fun h0 : term640 A g t => @lem3547498 A B u f x''' g s t x'' h1). Qed.
Lemma lem3547501 (p : Prop) : (term828 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem3547502 {A : Type'} (g : type686 A) (t : A -> Prop) : (term829 A g t) = (@I ((A -> Prop) -> Prop) g t).
Proof. exact (@lem3547501 (@I ((A -> Prop) -> Prop) g t)). Qed.
Lemma lem3547503 {A B : Type'} (u : A -> Prop) (f : A -> B) (x''' : A) (g : type686 A) (s : A -> Prop) (t : A -> Prop) (x'' : A) (h1 : term5527 A B u f x''' g s t x'') : @I ((A -> Prop) -> Prop) g t.
Proof. exact (EQ_MP (@lem3547502 A g t) (@lem3547499 A B u f x''' g s t x'' h1)). Qed.
Lemma lem3547505 {A B : Type'} (u : A -> Prop) (f : A -> B) (x''' : A) (g : type686 A) (s : A -> Prop) (t : A -> Prop) (x'' : A) (h1 : term5527 A B u f x''' g s t x'') : term5040 A t s.
Proof. exact (proj2 (@lem3545176 A B u f x''' g s t x'' h1)). Qed.
Lemma lem3547506 {A B : Type'} (u : A -> Prop) (f : A -> B) (x''' : A) (g : type686 A) (s : A -> Prop) (t : A -> Prop) (x'' : A) (h1 : term5527 A B u f x''' g s t x'') : term5592 A t s.
Proof. exact (fun h0 : t = s => @lem3547505 A B u f x''' g s t x'' h1). Qed.
Lemma lem3547508 (p : Prop) : (term4856 p) = (~ p).
Proof. exact (EQ_MP (@lem21028 p) (@lem21107 p)). Qed.
Lemma lem3547509 {A : Type'} (t : A -> Prop) (s : A -> Prop) : (term5592 A t s) = (term5040 A t s).
Proof. exact (@lem3547508 (t = s)). Qed.
Lemma lem3547510 {A B : Type'} (u : A -> Prop) (f : A -> B) (x''' : A) (g : type686 A) (s : A -> Prop) (t : A -> Prop) (x'' : A) (h1 : term5527 A B u f x''' g s t x'') : term5040 A t s.
Proof. exact (EQ_MP (@lem3547509 A t s) (@lem3547506 A B u f x''' g s t x'' h1)). Qed.
Lemma lem3547512 {A B : Type'} (u : A -> Prop) (f : A -> B) (x''' : A) (g : type686 A) (s : A -> Prop) (t : A -> Prop) (x'' : A) (h1 : term5527 A B u f x''' g s t x'') : @I ((A -> Prop) -> Prop) g t.
Proof. exact (proj1 (@lem3545176 A B u f x''' g s t x'' h1)). Qed.
Lemma lem3547513 {A B : Type'} (u : A -> Prop) (f : A -> B) (x''' : A) (g : type686 A) (s : A -> Prop) (t : A -> Prop) (x'' : A) (h1 : term5527 A B u f x''' g s t x'') : term829 A g t.
Proof. exact (fun h0 : term640 A g t => @lem3547512 A B u f x''' g s t x'' h1). Qed.
Lemma lem3547515 (p : Prop) : (term828 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem3547516 {A : Type'} (g : type686 A) (t : A -> Prop) : (term829 A g t) = (@I ((A -> Prop) -> Prop) g t).
Proof. exact (@lem3547515 (@I ((A -> Prop) -> Prop) g t)). Qed.
Lemma lem3547517 {A B : Type'} (u : A -> Prop) (f : A -> B) (x''' : A) (g : type686 A) (s : A -> Prop) (t : A -> Prop) (x'' : A) (h1 : term5527 A B u f x''' g s t x'') : @I ((A -> Prop) -> Prop) g t.
Proof. exact (EQ_MP (@lem3547516 A g t) (@lem3547513 A B u f x''' g s t x'' h1)). Qed.
Lemma lem3547519 {A B : Type'} (u : A -> Prop) (f : A -> B) (x''' : A) (g : type686 A) (s : A -> Prop) (t : A -> Prop) (x'' : A) (h1 : term5527 A B u f x''' g s t x'') : term5040 A t s.
Proof. exact (proj2 (@lem3545176 A B u f x''' g s t x'' h1)). Qed.
Lemma lem3547520 {A B : Type'} (u : A -> Prop) (f : A -> B) (x''' : A) (g : type686 A) (s : A -> Prop) (t : A -> Prop) (x'' : A) (h1 : term5527 A B u f x''' g s t x'') : term5592 A t s.
Proof. exact (fun h0 : t = s => @lem3547519 A B u f x''' g s t x'' h1). Qed.
Lemma lem3547522 (p : Prop) : (term4856 p) = (~ p).
Proof. exact (EQ_MP (@lem21028 p) (@lem21107 p)). Qed.
Lemma lem3547523 {A : Type'} (t : A -> Prop) (s : A -> Prop) : (term5592 A t s) = (term5040 A t s).
Proof. exact (@lem3547522 (t = s)). Qed.
Lemma lem3547524 {A B : Type'} (u : A -> Prop) (f : A -> B) (x''' : A) (g : type686 A) (s : A -> Prop) (t : A -> Prop) (x'' : A) (h1 : term5527 A B u f x''' g s t x'') : term5040 A t s.
Proof. exact (EQ_MP (@lem3547523 A t s) (@lem3547520 A B u f x''' g s t x'' h1)). Qed.
Lemma lem3547530 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem3547531 {A : Type'} (s : A -> Prop) (g : type686 A) (_37898 : A -> Prop) (x : A) : (term5590 A g s _37898 x) = (term5642 A s g _37898 x).
Proof. exact (@lem3547530 (_37898 = s) (term640 A g _37898) (@I (A -> Prop) _37898 x)). Qed.
Lemma lem3547547 (q : Prop) (p : Prop) : (p \/ q) = (q \/ p).
Proof. exact (proj1 (@lem827 (@el Prop) p q)). Qed.
Lemma lem3547548 {A : Type'} (x : A) (g : type686 A) (_37898 : A -> Prop) : (term680 A g _37898 x) = (term830 A x g _37898).
Proof. exact (@lem3547547 (@I (A -> Prop) _37898 x) (term640 A g _37898)). Qed.
Lemma lem3547554 {A : Type'} (_37898 : A -> Prop) (s : A -> Prop) : (term5596 A _37898 s) = (term5596 A _37898 s).
Proof. exact (eq_refl (term5596 A _37898 s)). Qed.
Lemma lem3547555 {A : Type'} (s : A -> Prop) (x : A) (g : type686 A) (_37898 : A -> Prop) : (term5642 A s g _37898 x) = (term5643 A s x g _37898).
Proof. exact (MK_COMB (@lem3547554 A _37898 s) (@lem3547548 A x g _37898)). Qed.
Lemma lem3547566 {A : Type'} (s : A -> Prop) (x : A) (g : type686 A) (_37898 : A -> Prop) : (term5590 A g s _37898 x) = (term5643 A s x g _37898).
Proof. exact (TRANS (@lem3547531 A s g _37898 x) (@lem3547555 A s x g _37898)). Qed.
Lemma lem3547567 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem3547568 {A : Type'} (s : A -> Prop) (x : A) (g : type686 A) (_37898 : A -> Prop) : (term5644 A g s _37898 x) = (term5645 A s x g _37898).
Proof. exact (MK_COMB (@lem3547567) (@lem3547566 A s x g _37898)). Qed.
Lemma lem3547582 (q : Prop) (p : Prop) : (p \/ q) = (q \/ p).
Proof. exact (proj1 (@lem827 (@el Prop) p q)). Qed.
Lemma lem3547583 {A : Type'} (s : A -> Prop) (g : type686 A) (_37898 : A -> Prop) : (term5519 A g _37898 s) = (term5655 A s g _37898).
Proof. exact (@lem3547582 (_37898 = s) (term640 A g _37898)). Qed.
Lemma lem3547591 {A : Type'} (_37898 : A -> Prop) (x : A) : (term884 A _37898 x) = (term884 A _37898 x).
Proof. exact (eq_refl (term884 A _37898 x)). Qed.
Lemma lem3547592 {A : Type'} (x : A) (s : A -> Prop) (g : type686 A) (_37898 : A -> Prop) : (term5656 A x g _37898 s) = (term5657 A x s g _37898).
Proof. exact (MK_COMB (@lem3547591 A _37898 x) (@lem3547583 A s g _37898)). Qed.
Lemma lem3547596 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem3547597 {A : Type'} (s : A -> Prop) (x : A) (g : type686 A) (_37898 : A -> Prop) : (term5657 A x s g _37898) = (term5643 A s x g _37898).
Proof. exact (@lem3547596 (_37898 = s) (@I (A -> Prop) _37898 x) (term640 A g _37898)). Qed.
Lemma lem3547615 {A : Type'} (s : A -> Prop) (x : A) (g : type686 A) (_37898 : A -> Prop) : (term5656 A x g _37898 s) = (term5643 A s x g _37898).
Proof. exact (TRANS (@lem3547592 A x s g _37898) (@lem3547597 A s x g _37898)). Qed.
Lemma lem3547616 {A : Type'} (s : A -> Prop) (x : A) (g : type686 A) (_37898 : A -> Prop) : ((term5590 A g s _37898 x) = (term5656 A x g _37898 s)) = ((term5643 A s x g _37898) = (term5643 A s x g _37898)).
Proof. exact (MK_COMB (@lem3547568 A s x g _37898) (@lem3547615 A s x g _37898)). Qed.
Lemma lem3547618 {A : Type'} (x : A) : (x = x) = True.
Proof. exact (EQ_MP (@lem20665 A x) (@lem20664 A x)). Qed.
Lemma lem3547619 (x : Prop) : (x = x) = True.
Proof. exact (@lem3547618 Prop x). Qed.
Lemma lem3547620 {A : Type'} (s : A -> Prop) (x : A) (g : type686 A) (_37898 : A -> Prop) : ((term5643 A s x g _37898) = (term5643 A s x g _37898)) = True.
Proof. exact (@lem3547619 (term5643 A s x g _37898)). Qed.
Lemma lem3547621 {A : Type'} (x : A) (g : type686 A) (_37898 : A -> Prop) (s : A -> Prop) : ((term5590 A g s _37898 x) = (term5656 A x g _37898 s)) = True.
Proof. exact (TRANS (@lem3547616 A s x g _37898) (@lem3547620 A s x g _37898)). Qed.
Lemma lem3547622 {A : Type'} (x : A) (g : type686 A) (_37898 : A -> Prop) (s : A -> Prop) : True = ((term5590 A g s _37898 x) = (term5656 A x g _37898 s)).
Proof. exact (SYM (@lem3547621 A x g _37898 s)). Qed.
Lemma lem3547623 {A : Type'} (x : A) (g : type686 A) (_37898 : A -> Prop) (s : A -> Prop) : (term5590 A g s _37898 x) = (term5656 A x g _37898 s).
Proof. exact (EQ_MP (@lem3547622 A x g _37898 s) (@lem0)). Qed.
Lemma lem3547624 {A : Type'} (_37898 : A -> Prop) (g : type686 A) (s : A -> Prop) (u : A -> Prop) (x : A) (h1 : term5531 A g s u x) : term5656 A x g _37898 s.
Proof. exact (EQ_MP (@lem3547623 A x g _37898 s) (@lem3546492 A _37898 g s u x h1)). Qed.
Lemma lem3547626 (b : Prop) (a : Prop) : (a \/ b) = (term833 b a).
Proof. exact (EQ_MP (@lem20682 b a) (@lem20764 b a)). Qed.
Lemma lem3547627 {A : Type'} (g : type686 A) (s : A -> Prop) (_37898 : A -> Prop) (x : A) : (term5656 A x g _37898 s) = (term5658 A g s _37898 x).
Proof. exact (@lem3547626 (term5519 A g _37898 s) (@I (A -> Prop) _37898 x)). Qed.
Lemma lem3547629 (a : Prop) (b : Prop) : (term887 a b) = (term888 a b).
Proof. exact (EQ_MP (@lem20789 a b) (@lem20895 a b)). Qed.
Lemma lem3547630 {A : Type'} (g : type686 A) (_37898 : A -> Prop) (s : A -> Prop) : (term5659 A g _37898 s) = (term5660 A g _37898 s).
Proof. exact (@lem3547629 (term640 A g _37898) (_37898 = s)). Qed.
Lemma lem3547632 (a : Prop) : (term282 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem3547633 {A : Type'} (g : type686 A) (_37898 : A -> Prop) : (term835 A g _37898) = (@I ((A -> Prop) -> Prop) g _37898).
Proof. exact (@lem3547632 (@I ((A -> Prop) -> Prop) g _37898)). Qed.
Lemma lem3547634 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem3547635 {A : Type'} (g : type686 A) (_37898 : A -> Prop) : (term891 A g _37898) = (term678 A g _37898).
Proof. exact (MK_COMB (@lem3547634) (@lem3547633 A g _37898)). Qed.
Lemma lem3547636 {A : Type'} (_37898 : A -> Prop) (s : A -> Prop) : (term5040 A _37898 s) = (term5040 A _37898 s).
Proof. exact (eq_refl (term5040 A _37898 s)). Qed.
Lemma lem3547637 {A : Type'} (g : type686 A) (_37898 : A -> Prop) (s : A -> Prop) : (term5660 A g _37898 s) = (term5516 A g _37898 s).
Proof. exact (MK_COMB (@lem3547635 A g _37898) (@lem3547636 A _37898 s)). Qed.
Lemma lem3547638 {A : Type'} (g : type686 A) (_37898 : A -> Prop) (s : A -> Prop) : (term5659 A g _37898 s) = (term5516 A g _37898 s).
Proof. exact (TRANS (@lem3547630 A g _37898 s) (@lem3547637 A g _37898 s)). Qed.
Lemma lem3547639 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem3547640 {A : Type'} (g : type686 A) (_37898 : A -> Prop) (s : A -> Prop) : (term5661 A g _37898 s) = (term5662 A g _37898 s).
Proof. exact (MK_COMB (@lem3547639) (@lem3547638 A g _37898 s)). Qed.
Lemma lem3547641 {A : Type'} (_37898 : A -> Prop) (x : A) : (@I (A -> Prop) _37898 x) = (@I (A -> Prop) _37898 x).
Proof. exact (eq_refl (@I (A -> Prop) _37898 x)). Qed.
Lemma lem3547642 {A : Type'} (g : type686 A) (s : A -> Prop) (_37898 : A -> Prop) (x : A) : (term5658 A g s _37898 x) = (term5663 A g s _37898 x).
Proof. exact (MK_COMB (@lem3547640 A g _37898 s) (@lem3547641 A _37898 x)). Qed.
Lemma lem3547643 {A : Type'} (g : type686 A) (s : A -> Prop) (_37898 : A -> Prop) (x : A) : (term5656 A x g _37898 s) = (term5663 A g s _37898 x).
Proof. exact (TRANS (@lem3547627 A g s _37898 x) (@lem3547642 A g s _37898 x)). Qed.
Lemma lem3547645 {A B : Type'} (u : A -> Prop) (f : A -> B) (x''' : A) (g : type686 A) (s : A -> Prop) (t : A -> Prop) (x'' : A) (h1 : term5527 A B u f x''' g s t x'') : term5516 A g t s.
Proof. exact (conj (@lem3547517 A B u f x''' g s t x'' h1) (@lem3547524 A B u f x''' g s t x'' h1)). Qed.
Lemma lem3547647 {A : Type'} (_37898 : A -> Prop) (g : type686 A) (s : A -> Prop) (u : A -> Prop) (x : A) (h1 : term5531 A g s u x) : term5663 A g s _37898 x.
Proof. exact (EQ_MP (@lem3547643 A g s _37898 x) (@lem3547624 A _37898 g s u x h1)). Qed.
Lemma lem3547648 {A : Type'} (_37898 : A -> Prop) (g : type686 A) (s : A -> Prop) (u : A -> Prop) (x : A) (h1 : term5531 A g s u x) : term5663 A g s _37898 x.
Proof. exact (@lem3547647 A _37898 g s u x h1). Qed.
Lemma lem3547649 {A : Type'} (t : A -> Prop) (g : type686 A) (s : A -> Prop) (u : A -> Prop) (x : A) (h1 : term5531 A g s u x) : term5663 A g s t x.
Proof. exact (@lem3547648 A t g s u x h1). Qed.
Lemma lem3547652 {A B : Type'} (x : A) (u : A -> Prop) (f : A -> B) (x''' : A) (g : type686 A) (s : A -> Prop) (t : A -> Prop) (x'' : A) (h1 : term5531 A g s u x) (h2 : term5527 A B u f x''' g s t x'') : @I (A -> Prop) t x.
Proof. exact (@lem3547649 A t g s u x h1 (@lem3547645 A B u f x''' g s t x'' h2)). Qed.
Lemma lem3547653 {A B : Type'} (x : A) (u : A -> Prop) (f : A -> B) (x''' : A) (g : type686 A) (s : A -> Prop) (t : A -> Prop) (x'' : A) (h1 : term5531 A g s u x) (h2 : term5527 A B u f x''' g s t x'') : term839 A t x.
Proof. exact (fun h0 : term619 A t x => @lem3547652 A B x u f x''' g s t x'' h1 h2). Qed.
Lemma lem3547655 (p : Prop) : (term828 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem3547656 {A : Type'} (t : A -> Prop) (x : A) : (term839 A t x) = (@I (A -> Prop) t x).
Proof. exact (@lem3547655 (@I (A -> Prop) t x)). Qed.
Lemma lem3547657 {A B : Type'} (x : A) (u : A -> Prop) (f : A -> B) (x''' : A) (g : type686 A) (s : A -> Prop) (t : A -> Prop) (x'' : A) (h1 : term5531 A g s u x) (h2 : term5527 A B u f x''' g s t x'') : @I (A -> Prop) t x.
Proof. exact (EQ_MP (@lem3547656 A t x) (@lem3547653 A B x u f x''' g s t x'' h1 h2)). Qed.
Lemma lem3547663 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem3547664 {A : Type'} (s : A -> Prop) (g : type686 A) (_37891 : A -> Prop) (u : A -> Prop) (_37892 : A) : (term5591 A g s _37891 u _37892) = (term5664 A s g _37891 u _37892).
Proof. exact (@lem3547663 (_37891 = s) (term640 A g _37891) (term635 A _37891 u _37892)). Qed.
Lemma lem3547680 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem3547681 {A : Type'} (g : type686 A) (_37891 : A -> Prop) (u : A -> Prop) (_37892 : A) : (term815 A g _37891 u _37892) = (term875 A g _37891 u _37892).
Proof. exact (@lem3547680 (term619 A _37891 _37892) (term640 A g _37891) (@I (A -> Prop) u _37892)). Qed.
Lemma lem3547695 (q : Prop) (p : Prop) : (p \/ q) = (q \/ p).
Proof. exact (proj1 (@lem827 (@el Prop) p q)). Qed.
Lemma lem3547696 {A : Type'} (u : A -> Prop) (_37892 : A) (g : type686 A) (_37891 : A -> Prop) : (term876 A g _37891 u _37892) = (term877 A u _37892 g _37891).
Proof. exact (@lem3547695 (@I (A -> Prop) u _37892) (term640 A g _37891)). Qed.
Lemma lem3547702 {A : Type'} (_37891 : A -> Prop) (_37892 : A) : (term629 A _37891 _37892) = (term629 A _37891 _37892).
Proof. exact (eq_refl (term629 A _37891 _37892)). Qed.
Lemma lem3547703 {A : Type'} (u : A -> Prop) (_37892 : A) (g : type686 A) (_37891 : A -> Prop) : (term875 A g _37891 u _37892) = (term878 A u _37892 g _37891).
Proof. exact (MK_COMB (@lem3547702 A _37891 _37892) (@lem3547696 A u _37892 g _37891)). Qed.
Lemma lem3547707 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem3547708 {A : Type'} (u : A -> Prop) (_37892 : A) (g : type686 A) (_37891 : A -> Prop) : (term878 A u _37892 g _37891) = (term879 A u _37892 g _37891).
Proof. exact (@lem3547707 (@I (A -> Prop) u _37892) (term619 A _37891 _37892) (term640 A g _37891)). Qed.
Lemma lem3547724 {A : Type'} (u : A -> Prop) (_37892 : A) (g : type686 A) (_37891 : A -> Prop) : (term875 A g _37891 u _37892) = (term879 A u _37892 g _37891).
Proof. exact (TRANS (@lem3547703 A u _37892 g _37891) (@lem3547708 A u _37892 g _37891)). Qed.
Lemma lem3547725 {A : Type'} (u : A -> Prop) (_37892 : A) (g : type686 A) (_37891 : A -> Prop) : (term815 A g _37891 u _37892) = (term879 A u _37892 g _37891).
Proof. exact (TRANS (@lem3547681 A g _37891 u _37892) (@lem3547724 A u _37892 g _37891)). Qed.
Lemma lem3547726 {A : Type'} (_37891 : A -> Prop) (s : A -> Prop) : (term5596 A _37891 s) = (term5596 A _37891 s).
Proof. exact (eq_refl (term5596 A _37891 s)). Qed.
Lemma lem3547727 {A : Type'} (s : A -> Prop) (u : A -> Prop) (_37892 : A) (g : type686 A) (_37891 : A -> Prop) : (term5664 A s g _37891 u _37892) = (term5665 A s u _37892 g _37891).
Proof. exact (MK_COMB (@lem3547726 A _37891 s) (@lem3547725 A u _37892 g _37891)). Qed.
Lemma lem3547738 {A : Type'} (s : A -> Prop) (u : A -> Prop) (_37892 : A) (g : type686 A) (_37891 : A -> Prop) : (term5591 A g s _37891 u _37892) = (term5665 A s u _37892 g _37891).
Proof. exact (TRANS (@lem3547664 A s g _37891 u _37892) (@lem3547727 A s u _37892 g _37891)). Qed.
Lemma lem3547739 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem3547740 {A : Type'} (s : A -> Prop) (u : A -> Prop) (_37892 : A) (g : type686 A) (_37891 : A -> Prop) : (term5666 A g s _37891 u _37892) = (term5667 A s u _37892 g _37891).
Proof. exact (MK_COMB (@lem3547739) (@lem3547738 A s u _37892 g _37891)). Qed.
Lemma lem3547754 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem3547755 {A : Type'} (s : A -> Prop) (g : type686 A) (_37891 : A -> Prop) (_37892 : A) : (term5668 A g s _37891 _37892) = (term5669 A s g _37891 _37892).
Proof. exact (@lem3547754 (_37891 = s) (term640 A g _37891) (term619 A _37891 _37892)). Qed.
Lemma lem3547771 (q : Prop) (p : Prop) : (p \/ q) = (q \/ p).
Proof. exact (proj1 (@lem827 (@el Prop) p q)). Qed.
Lemma lem3547772 {A : Type'} (_37892 : A) (g : type686 A) (_37891 : A -> Prop) : (term882 A g _37891 _37892) = (term883 A _37892 g _37891).
Proof. exact (@lem3547771 (term619 A _37891 _37892) (term640 A g _37891)). Qed.
Lemma lem3547778 {A : Type'} (_37891 : A -> Prop) (s : A -> Prop) : (term5596 A _37891 s) = (term5596 A _37891 s).
Proof. exact (eq_refl (term5596 A _37891 s)). Qed.
Lemma lem3547779 {A : Type'} (s : A -> Prop) (_37892 : A) (g : type686 A) (_37891 : A -> Prop) : (term5669 A s g _37891 _37892) = (term5670 A s _37892 g _37891).
Proof. exact (MK_COMB (@lem3547778 A _37891 s) (@lem3547772 A _37892 g _37891)). Qed.
Lemma lem3547790 {A : Type'} (s : A -> Prop) (_37892 : A) (g : type686 A) (_37891 : A -> Prop) : (term5668 A g s _37891 _37892) = (term5670 A s _37892 g _37891).
Proof. exact (TRANS (@lem3547755 A s g _37891 _37892) (@lem3547779 A s _37892 g _37891)). Qed.
Lemma lem3547791 {A : Type'} (u : A -> Prop) (_37892 : A) : (term884 A u _37892) = (term884 A u _37892).
Proof. exact (eq_refl (term884 A u _37892)). Qed.
Lemma lem3547792 {A : Type'} (u : A -> Prop) (s : A -> Prop) (_37892 : A) (g : type686 A) (_37891 : A -> Prop) : (term5671 A u g s _37891 _37892) = (term5672 A u s _37892 g _37891).
Proof. exact (MK_COMB (@lem3547791 A u _37892) (@lem3547790 A s _37892 g _37891)). Qed.
Lemma lem3547796 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem3547797 {A : Type'} (s : A -> Prop) (u : A -> Prop) (_37892 : A) (g : type686 A) (_37891 : A -> Prop) : (term5672 A u s _37892 g _37891) = (term5665 A s u _37892 g _37891).
Proof. exact (@lem3547796 (_37891 = s) (@I (A -> Prop) u _37892) (term883 A _37892 g _37891)). Qed.
Lemma lem3547825 {A : Type'} (s : A -> Prop) (u : A -> Prop) (_37892 : A) (g : type686 A) (_37891 : A -> Prop) : (term5671 A u g s _37891 _37892) = (term5665 A s u _37892 g _37891).
Proof. exact (TRANS (@lem3547792 A u s _37892 g _37891) (@lem3547797 A s u _37892 g _37891)). Qed.
Lemma lem3547826 {A : Type'} (s : A -> Prop) (u : A -> Prop) (_37892 : A) (g : type686 A) (_37891 : A -> Prop) : ((term5591 A g s _37891 u _37892) = (term5671 A u g s _37891 _37892)) = ((term5665 A s u _37892 g _37891) = (term5665 A s u _37892 g _37891)).
Proof. exact (MK_COMB (@lem3547740 A s u _37892 g _37891) (@lem3547825 A s u _37892 g _37891)). Qed.
Lemma lem3547828 {A : Type'} (x : A) : (x = x) = True.
Proof. exact (EQ_MP (@lem20665 A x) (@lem20664 A x)). Qed.
Lemma lem3547829 (x : Prop) : (x = x) = True.
Proof. exact (@lem3547828 Prop x). Qed.
Lemma lem3547830 {A : Type'} (s : A -> Prop) (u : A -> Prop) (_37892 : A) (g : type686 A) (_37891 : A -> Prop) : ((term5665 A s u _37892 g _37891) = (term5665 A s u _37892 g _37891)) = True.
Proof. exact (@lem3547829 (term5665 A s u _37892 g _37891)). Qed.
Lemma lem3547831 {A : Type'} (u : A -> Prop) (g : type686 A) (s : A -> Prop) (_37891 : A -> Prop) (_37892 : A) : ((term5591 A g s _37891 u _37892) = (term5671 A u g s _37891 _37892)) = True.
Proof. exact (TRANS (@lem3547826 A s u _37892 g _37891) (@lem3547830 A s u _37892 g _37891)). Qed.
Lemma lem3547832 {A : Type'} (u : A -> Prop) (g : type686 A) (s : A -> Prop) (_37891 : A -> Prop) (_37892 : A) : True = ((term5591 A g s _37891 u _37892) = (term5671 A u g s _37891 _37892)).
Proof. exact (SYM (@lem3547831 A u g s _37891 _37892)). Qed.
Lemma lem3547833 {A : Type'} (u : A -> Prop) (g : type686 A) (s : A -> Prop) (_37891 : A -> Prop) (_37892 : A) : (term5591 A g s _37891 u _37892) = (term5671 A u g s _37891 _37892).
Proof. exact (EQ_MP (@lem3547832 A u g s _37891 _37892) (@lem0)). Qed.
Lemma lem3547834 {A B : Type'} (_37891 : A -> Prop) (_37892 : A) (x'''' : A -> Prop) (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) (h1 : term5193 A B x'''' g s u f) : term5671 A u g s _37891 _37892.
Proof. exact (EQ_MP (@lem3547833 A u g s _37891 _37892) (@lem3546420 A B _37891 _37892 x'''' g s u f h1)). Qed.
Lemma lem3547836 (b : Prop) (a : Prop) : (a \/ b) = (term833 b a).
Proof. exact (EQ_MP (@lem20682 b a) (@lem20764 b a)). Qed.
Lemma lem3547837 {A : Type'} (g : type686 A) (s : A -> Prop) (_37891 : A -> Prop) (u : A -> Prop) (_37892 : A) : (term5671 A u g s _37891 _37892) = (term5673 A g s _37891 u _37892).
Proof. exact (@lem3547836 (term5668 A g s _37891 _37892) (@I (A -> Prop) u _37892)). Qed.
Lemma lem3547839 (a : Prop) (b : Prop) : (term887 a b) = (term888 a b).
Proof. exact (EQ_MP (@lem20789 a b) (@lem20895 a b)). Qed.
Lemma lem3547840 {A : Type'} (g : type686 A) (s : A -> Prop) (_37891 : A -> Prop) (_37892 : A) : (term5674 A g s _37891 _37892) = (term5675 A g s _37891 _37892).
Proof. exact (@lem3547839 (term640 A g _37891) (term5676 A s _37891 _37892)). Qed.
Lemma lem3547842 (a : Prop) : (term282 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem3547843 {A : Type'} (g : type686 A) (_37891 : A -> Prop) : (term835 A g _37891) = (@I ((A -> Prop) -> Prop) g _37891).
Proof. exact (@lem3547842 (@I ((A -> Prop) -> Prop) g _37891)). Qed.
Lemma lem3547844 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem3547845 {A : Type'} (g : type686 A) (_37891 : A -> Prop) : (term891 A g _37891) = (term678 A g _37891).
Proof. exact (MK_COMB (@lem3547844) (@lem3547843 A g _37891)). Qed.
Lemma lem3547847 (a : Prop) (b : Prop) : (term887 a b) = (term888 a b).
Proof. exact (EQ_MP (@lem20789 a b) (@lem20895 a b)). Qed.
Lemma lem3547848 {A : Type'} (s : A -> Prop) (_37891 : A -> Prop) (_37892 : A) : (term5677 A s _37891 _37892) = (term5678 A s _37891 _37892).
Proof. exact (@lem3547847 (_37891 = s) (term619 A _37891 _37892)). Qed.
Lemma lem3547850 (a : Prop) : (term282 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem3547851 {A : Type'} (_37891 : A -> Prop) (_37892 : A) : (term892 A _37891 _37892) = (@I (A -> Prop) _37891 _37892).
Proof. exact (@lem3547850 (@I (A -> Prop) _37891 _37892)). Qed.
Lemma lem3547852 {A : Type'} (_37891 : A -> Prop) (s : A -> Prop) : (term5636 A _37891 s) = (term5636 A _37891 s).
Proof. exact (eq_refl (term5636 A _37891 s)). Qed.
Lemma lem3547853 {A : Type'} (s : A -> Prop) (_37891 : A -> Prop) (_37892 : A) : (term5678 A s _37891 _37892) = (term5679 A s _37891 _37892).
Proof. exact (MK_COMB (@lem3547852 A _37891 s) (@lem3547851 A _37891 _37892)). Qed.
Lemma lem3547854 {A : Type'} (s : A -> Prop) (_37891 : A -> Prop) (_37892 : A) : (term5677 A s _37891 _37892) = (term5679 A s _37891 _37892).
Proof. exact (TRANS (@lem3547848 A s _37891 _37892) (@lem3547853 A s _37891 _37892)). Qed.
Lemma lem3547855 {A : Type'} (g : type686 A) (s : A -> Prop) (_37891 : A -> Prop) (_37892 : A) : (term5675 A g s _37891 _37892) = (term5680 A g s _37891 _37892).
Proof. exact (MK_COMB (@lem3547845 A g _37891) (@lem3547854 A s _37891 _37892)). Qed.
Lemma lem3547856 {A : Type'} (g : type686 A) (s : A -> Prop) (_37891 : A -> Prop) (_37892 : A) : (term5674 A g s _37891 _37892) = (term5680 A g s _37891 _37892).
Proof. exact (TRANS (@lem3547840 A g s _37891 _37892) (@lem3547855 A g s _37891 _37892)). Qed.
Lemma lem3547857 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem3547858 {A : Type'} (g : type686 A) (s : A -> Prop) (_37891 : A -> Prop) (_37892 : A) : (term5681 A g s _37891 _37892) = (term5682 A g s _37891 _37892).
Proof. exact (MK_COMB (@lem3547857) (@lem3547856 A g s _37891 _37892)). Qed.
Lemma lem3547859 {A : Type'} (u : A -> Prop) (_37892 : A) : (@I (A -> Prop) u _37892) = (@I (A -> Prop) u _37892).
Proof. exact (eq_refl (@I (A -> Prop) u _37892)). Qed.
Lemma lem3547860 {A : Type'} (g : type686 A) (s : A -> Prop) (_37891 : A -> Prop) (u : A -> Prop) (_37892 : A) : (term5673 A g s _37891 u _37892) = (term5683 A g s _37891 u _37892).
Proof. exact (MK_COMB (@lem3547858 A g s _37891 _37892) (@lem3547859 A u _37892)). Qed.
Lemma lem3547861 {A : Type'} (g : type686 A) (s : A -> Prop) (_37891 : A -> Prop) (u : A -> Prop) (_37892 : A) : (term5671 A u g s _37891 _37892) = (term5683 A g s _37891 u _37892).
Proof. exact (TRANS (@lem3547837 A g s _37891 u _37892) (@lem3547860 A g s _37891 u _37892)). Qed.
Lemma lem3547863 {A B : Type'} (x : A) (u : A -> Prop) (f : A -> B) (x''' : A) (g : type686 A) (s : A -> Prop) (t : A -> Prop) (x'' : A) (h1 : term5531 A g s u x) (h2 : term5527 A B u f x''' g s t x'') : term5679 A s t x.
Proof. exact (conj (@lem3547510 A B u f x''' g s t x'' h2) (@lem3547657 A B x u f x''' g s t x'' h1 h2)). Qed.
Lemma lem3547864 {A B : Type'} (x : A) (u : A -> Prop) (f : A -> B) (x''' : A) (g : type686 A) (s : A -> Prop) (t : A -> Prop) (x'' : A) (h1 : term5531 A g s u x) (h2 : term5527 A B u f x''' g s t x'') : term5680 A g s t x.
Proof. exact (conj (@lem3547503 A B u f x''' g s t x'' h2) (@lem3547863 A B x u f x''' g s t x'' h1 h2)). Qed.
Lemma lem3547866 {A B : Type'} (_37891 : A -> Prop) (_37892 : A) (x'''' : A -> Prop) (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) (h1 : term5193 A B x'''' g s u f) : term5683 A g s _37891 u _37892.
Proof. exact (EQ_MP (@lem3547861 A g s _37891 u _37892) (@lem3547834 A B _37891 _37892 x'''' g s u f h1)). Qed.
Lemma lem3547867 {A B : Type'} (_37891 : A -> Prop) (_37892 : A) (x'''' : A -> Prop) (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) (h1 : term5193 A B x'''' g s u f) : term5683 A g s _37891 u _37892.
Proof. exact (@lem3547866 A B _37891 _37892 x'''' g s u f h1). Qed.
Lemma lem3547868 {A B : Type'} (t : A -> Prop) (x : A) (x'''' : A -> Prop) (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) (h1 : term5193 A B x'''' g s u f) : term5683 A g s t u x.
Proof. exact (@lem3547867 A B t x x'''' g s u f h1). Qed.
Lemma lem3547871 {A B : Type'} (x : A) (x'''' : A -> Prop) (u : A -> Prop) (f : A -> B) (x''' : A) (g : type686 A) (s : A -> Prop) (t : A -> Prop) (x'' : A) (h1 : term5531 A g s u x) (h2 : term5193 A B x'''' g s u f) (h3 : term5527 A B u f x''' g s t x'') : @I (A -> Prop) u x.
Proof. exact (@lem3547868 A B t x x'''' g s u f h2 (@lem3547864 A B x u f x''' g s t x'' h1 h3)). Qed.
Lemma lem3547872 {A B : Type'} (x : A) (x'''' : A -> Prop) (u : A -> Prop) (f : A -> B) (x''' : A) (g : type686 A) (s : A -> Prop) (t : A -> Prop) (x'' : A) (h1 : term5531 A g s u x) (h2 : term5193 A B x'''' g s u f) (h3 : term5527 A B u f x''' g s t x'') : term839 A u x.
Proof. exact (fun h0 : term619 A u x => @lem3547871 A B x x'''' u f x''' g s t x'' h1 h2 h3). Qed.
Lemma lem3547874 (p : Prop) : (term828 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem3547875 {A : Type'} (u : A -> Prop) (x : A) : (term839 A u x) = (@I (A -> Prop) u x).
Proof. exact (@lem3547874 (@I (A -> Prop) u x)). Qed.
Lemma lem3547876 {A B : Type'} (x : A) (x'''' : A -> Prop) (u : A -> Prop) (f : A -> B) (x''' : A) (g : type686 A) (s : A -> Prop) (t : A -> Prop) (x'' : A) (h1 : term5531 A g s u x) (h2 : term5193 A B x'''' g s u f) (h3 : term5527 A B u f x''' g s t x'') : @I (A -> Prop) u x.
Proof. exact (EQ_MP (@lem3547875 A u x) (@lem3547872 A B x x'''' u f x''' g s t x'' h1 h2 h3)). Qed.
Lemma lem3547879 (p : Prop) : (~ p) = (p -> False).
Proof. exact (EQ_MP (@lem21021 p) (@lem0)). Qed.
Lemma lem3547881 {A : Type'} (u : A -> Prop) (x : A) : (term619 A u x) = (term5684 A u x).
Proof. exact (@lem3547879 (@I (A -> Prop) u x)). Qed.
Lemma lem3547884 {A : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) (x : A) (h1 : term5531 A g s u x) : term5684 A u x.
Proof. exact (EQ_MP (@lem3547881 A u x) (@lem3546494 A g s u x h1)). Qed.
Lemma lem3547887 {A B : Type'} (x : A) (x'''' : A -> Prop) (u : A -> Prop) (f : A -> B) (x''' : A) (g : type686 A) (s : A -> Prop) (t : A -> Prop) (x'' : A) (h1 : term5531 A g s u x) (h2 : term5193 A B x'''' g s u f) (h3 : term5527 A B u f x''' g s t x'') : False.
Proof. exact (@lem3547884 A g s u x h1 (@lem3547876 A B x x'''' u f x''' g s t x'' h1 h2 h3)). Qed.
Lemma lem3547888 {A B : Type'} (x : A) (x'''' : A -> Prop) (u : A -> Prop) (f : A -> B) (x''' : A) (g : type686 A) (s : A -> Prop) (t : A -> Prop) (x'' : A) (h1 : term5531 A g s u x) (h2 : term5193 A B x'''' g s u f) (h3 : term5527 A B u f x''' g s t x'') : term847.
Proof. exact (fun h0 : ~ False => @lem3547887 A B x x'''' u f x''' g s t x'' h1 h2 h3). Qed.
Lemma lem3547890 (p : Prop) : (term828 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem3547891 : term847 = False.
Proof. exact (@lem3547890 False). Qed.
Lemma lem3547892 {A B : Type'} (x : A) (x'''' : A -> Prop) (u : A -> Prop) (f : A -> B) (x''' : A) (g : type686 A) (s : A -> Prop) (t : A -> Prop) (x'' : A) (h1 : term5531 A g s u x) (h2 : term5193 A B x'''' g s u f) (h3 : term5527 A B u f x''' g s t x'') : False.
Proof. exact (EQ_MP (@lem3547891) (@lem3547888 A B x x'''' u f x''' g s t x'' h1 h2 h3)). Qed.
Lemma lem3547957 {A : Type'} (s : A -> Prop) (u : A -> Prop) (x'' : A) (h1 : term5515 A s u x'') : @I (A -> Prop) s x''.
Proof. exact (proj1 (@lem3545172 A s u x'' h1)). Qed.
Lemma lem3547958 {A : Type'} (s : A -> Prop) (u : A -> Prop) (x'' : A) (h1 : term5515 A s u x'') : term839 A s x''.
Proof. exact (fun h0 : term619 A s x'' => @lem3547957 A s u x'' h1). Qed.
Lemma lem3547960 (p : Prop) : (term828 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem3547961 {A : Type'} (s : A -> Prop) (x'' : A) : (term839 A s x'') = (@I (A -> Prop) s x'').
Proof. exact (@lem3547960 (@I (A -> Prop) s x'')). Qed.
Lemma lem3547962 {A : Type'} (s : A -> Prop) (u : A -> Prop) (x'' : A) (h1 : term5515 A s u x'') : @I (A -> Prop) s x''.
Proof. exact (EQ_MP (@lem3547961 A s x'') (@lem3547958 A s u x'' h1)). Qed.
Lemma lem3547968 (q : Prop) (p : Prop) : (p \/ q) = (q \/ p).
Proof. exact (proj1 (@lem827 (@el Prop) p q)). Qed.
Lemma lem3547969 {A : Type'} (u : A -> Prop) (s : A -> Prop) (_37901 : A) : (term635 A s u _37901) = (term5685 A u s _37901).
Proof. exact (@lem3547968 (@I (A -> Prop) u _37901) (term619 A s _37901)). Qed.
Lemma lem3547975 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem3547976 {A : Type'} (u : A -> Prop) (s : A -> Prop) (_37901 : A) : (term5686 A s u _37901) = (term5687 A u s _37901).
Proof. exact (MK_COMB (@lem3547975) (@lem3547969 A u s _37901)). Qed.
Lemma lem3547982 {A : Type'} (u : A -> Prop) (s : A -> Prop) (_37901 : A) : (term5685 A u s _37901) = (term5685 A u s _37901).
Proof. exact (eq_refl (term5685 A u s _37901)). Qed.
Lemma lem3547983 {A : Type'} (u : A -> Prop) (s : A -> Prop) (_37901 : A) : ((term635 A s u _37901) = (term5685 A u s _37901)) = ((term5685 A u s _37901) = (term5685 A u s _37901)).
Proof. exact (MK_COMB (@lem3547976 A u s _37901) (@lem3547982 A u s _37901)). Qed.
Lemma lem3547985 {A : Type'} (x : A) : (x = x) = True.
Proof. exact (EQ_MP (@lem20665 A x) (@lem20664 A x)). Qed.
Lemma lem3547986 (x : Prop) : (x = x) = True.
Proof. exact (@lem3547985 Prop x). Qed.
Lemma lem3547987 {A : Type'} (u : A -> Prop) (s : A -> Prop) (_37901 : A) : ((term5685 A u s _37901) = (term5685 A u s _37901)) = True.
Proof. exact (@lem3547986 (term5685 A u s _37901)). Qed.
Lemma lem3547988 {A : Type'} (u : A -> Prop) (s : A -> Prop) (_37901 : A) : ((term635 A s u _37901) = (term5685 A u s _37901)) = True.
Proof. exact (TRANS (@lem3547983 A u s _37901) (@lem3547987 A u s _37901)). Qed.
Lemma lem3547989 {A : Type'} (u : A -> Prop) (s : A -> Prop) (_37901 : A) : True = ((term635 A s u _37901) = (term5685 A u s _37901)).
Proof. exact (SYM (@lem3547988 A u s _37901)). Qed.
Lemma lem3547990 {A : Type'} (u : A -> Prop) (s : A -> Prop) (_37901 : A) : (term635 A s u _37901) = (term5685 A u s _37901).
Proof. exact (EQ_MP (@lem3547989 A u s _37901) (@lem0)). Qed.
Lemma lem3547991 {A B : Type'} (_37901 : A) (x'''' : A -> Prop) (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) (h1 : term5193 A B x'''' g s u f) : term5685 A u s _37901.
Proof. exact (EQ_MP (@lem3547990 A u s _37901) (@lem3546516 A B _37901 x'''' g s u f h1)). Qed.
Lemma lem3547993 (b : Prop) (a : Prop) : (a \/ b) = (term833 b a).
Proof. exact (EQ_MP (@lem20682 b a) (@lem20764 b a)). Qed.
Lemma lem3547994 {A : Type'} (s : A -> Prop) (u : A -> Prop) (_37901 : A) : (term5685 A u s _37901) = (term5688 A s u _37901).
Proof. exact (@lem3547993 (term619 A s _37901) (@I (A -> Prop) u _37901)). Qed.
Lemma lem3547996 (a : Prop) : (term282 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem3547997 {A : Type'} (s : A -> Prop) (_37901 : A) : (term892 A s _37901) = (@I (A -> Prop) s _37901).
Proof. exact (@lem3547996 (@I (A -> Prop) s _37901)). Qed.
Lemma lem3547998 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem3547999 {A : Type'} (s : A -> Prop) (_37901 : A) : (term5689 A s _37901) = (term5690 A s _37901).
Proof. exact (MK_COMB (@lem3547998) (@lem3547997 A s _37901)). Qed.
Lemma lem3548000 {A : Type'} (u : A -> Prop) (_37901 : A) : (@I (A -> Prop) u _37901) = (@I (A -> Prop) u _37901).
Proof. exact (eq_refl (@I (A -> Prop) u _37901)). Qed.
Lemma lem3548001 {A : Type'} (s : A -> Prop) (u : A -> Prop) (_37901 : A) : (term5688 A s u _37901) = (term5691 A s u _37901).
Proof. exact (MK_COMB (@lem3547999 A s _37901) (@lem3548000 A u _37901)). Qed.
Lemma lem3548002 {A : Type'} (s : A -> Prop) (u : A -> Prop) (_37901 : A) : (term5685 A u s _37901) = (term5691 A s u _37901).
Proof. exact (TRANS (@lem3547994 A s u _37901) (@lem3548001 A s u _37901)). Qed.
Lemma lem3548005 {A B : Type'} (_37901 : A) (x'''' : A -> Prop) (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) (h1 : term5193 A B x'''' g s u f) : term5691 A s u _37901.
Proof. exact (EQ_MP (@lem3548002 A s u _37901) (@lem3547991 A B _37901 x'''' g s u f h1)). Qed.
Lemma lem3548006 {A B : Type'} (_37901 : A) (x'''' : A -> Prop) (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) (h1 : term5193 A B x'''' g s u f) : term5691 A s u _37901.
Proof. exact (@lem3548005 A B _37901 x'''' g s u f h1). Qed.
Lemma lem3548007 {A B : Type'} (x'' : A) (x'''' : A -> Prop) (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) (h1 : term5193 A B x'''' g s u f) : term5691 A s u x''.
Proof. exact (@lem3548006 A B x'' x'''' g s u f h1). Qed.
Lemma lem3548010 {A B : Type'} (x'''' : A -> Prop) (g : type686 A) (f : A -> B) (s : A -> Prop) (u : A -> Prop) (x'' : A) (h1 : term5193 A B x'''' g s u f) (h2 : term5515 A s u x'') : @I (A -> Prop) u x''.
Proof. exact (@lem3548007 A B x'' x'''' g s u f h1 (@lem3547962 A s u x'' h2)). Qed.
Lemma lem3548011 {A B : Type'} (x'''' : A -> Prop) (g : type686 A) (f : A -> B) (s : A -> Prop) (u : A -> Prop) (x'' : A) (h1 : term5193 A B x'''' g s u f) (h2 : term5515 A s u x'') : term839 A u x''.
Proof. exact (fun h0 : term619 A u x'' => @lem3548010 A B x'''' g f s u x'' h1 h2). Qed.
Lemma lem3548013 (p : Prop) : (term828 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem3548014 {A : Type'} (u : A -> Prop) (x'' : A) : (term839 A u x'') = (@I (A -> Prop) u x'').
Proof. exact (@lem3548013 (@I (A -> Prop) u x'')). Qed.
Lemma lem3548015 {A B : Type'} (x'''' : A -> Prop) (g : type686 A) (f : A -> B) (s : A -> Prop) (u : A -> Prop) (x'' : A) (h1 : term5193 A B x'''' g s u f) (h2 : term5515 A s u x'') : @I (A -> Prop) u x''.
Proof. exact (EQ_MP (@lem3548014 A u x'') (@lem3548011 A B x'''' g f s u x'' h1 h2)). Qed.
Lemma lem3548018 (p : Prop) : (~ p) = (p -> False).
Proof. exact (EQ_MP (@lem21021 p) (@lem0)). Qed.
Lemma lem3548020 {A : Type'} (u : A -> Prop) (x'' : A) : (term619 A u x'') = (term5684 A u x'').
Proof. exact (@lem3548018 (@I (A -> Prop) u x'')). Qed.
Lemma lem3548023 {A : Type'} (s : A -> Prop) (u : A -> Prop) (x'' : A) (h1 : term5515 A s u x'') : term5684 A u x''.
Proof. exact (EQ_MP (@lem3548020 A u x'') (@lem3546552 A s u x'' h1)). Qed.
Lemma lem3548026 {A B : Type'} (x'''' : A -> Prop) (g : type686 A) (f : A -> B) (s : A -> Prop) (u : A -> Prop) (x'' : A) (h1 : term5193 A B x'''' g s u f) (h2 : term5515 A s u x'') : False.
Proof. exact (@lem3548023 A s u x'' h2 (@lem3548015 A B x'''' g f s u x'' h1 h2)). Qed.
Lemma lem3548027 {A B : Type'} (x'''' : A -> Prop) (g : type686 A) (f : A -> B) (s : A -> Prop) (u : A -> Prop) (x'' : A) (h1 : term5193 A B x'''' g s u f) (h2 : term5515 A s u x'') : term847.
Proof. exact (fun h0 : ~ False => @lem3548026 A B x'''' g f s u x'' h1 h2). Qed.
Lemma lem3548029 (p : Prop) : (term828 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem3548030 : term847 = False.
Proof. exact (@lem3548029 False). Qed.
Lemma lem3548031 {A B : Type'} (x'''' : A -> Prop) (g : type686 A) (f : A -> B) (s : A -> Prop) (u : A -> Prop) (x'' : A) (h1 : term5193 A B x'''' g s u f) (h2 : term5515 A s u x'') : False.
Proof. exact (EQ_MP (@lem3548030) (@lem3548027 A B x'''' g f s u x'' h1 h2)). Qed.
Lemma lem3548096 {A : Type'} (s : A -> Prop) (u : A -> Prop) (x'' : A) (h1 : term5515 A s u x'') : @I (A -> Prop) s x''.
Proof. exact (proj1 (@lem3545172 A s u x'' h1)). Qed.
Lemma lem3548097 {A : Type'} (s : A -> Prop) (u : A -> Prop) (x'' : A) (h1 : term5515 A s u x'') : term839 A s x''.
Proof. exact (fun h0 : term619 A s x'' => @lem3548096 A s u x'' h1). Qed.
Lemma lem3548099 (p : Prop) : (term828 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem3548100 {A : Type'} (s : A -> Prop) (x'' : A) : (term839 A s x'') = (@I (A -> Prop) s x'').
Proof. exact (@lem3548099 (@I (A -> Prop) s x'')). Qed.
Lemma lem3548101 {A : Type'} (s : A -> Prop) (u : A -> Prop) (x'' : A) (h1 : term5515 A s u x'') : @I (A -> Prop) s x''.
Proof. exact (EQ_MP (@lem3548100 A s x'') (@lem3548097 A s u x'' h1)). Qed.
Lemma lem3548107 (q : Prop) (p : Prop) : (p \/ q) = (q \/ p).
Proof. exact (proj1 (@lem827 (@el Prop) p q)). Qed.
Lemma lem3548108 {A : Type'} (u : A -> Prop) (s : A -> Prop) (_37907 : A) : (term635 A s u _37907) = (term5685 A u s _37907).
Proof. exact (@lem3548107 (@I (A -> Prop) u _37907) (term619 A s _37907)). Qed.
Lemma lem3548114 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem3548115 {A : Type'} (u : A -> Prop) (s : A -> Prop) (_37907 : A) : (term5686 A s u _37907) = (term5687 A u s _37907).
Proof. exact (MK_COMB (@lem3548114) (@lem3548108 A u s _37907)). Qed.
Lemma lem3548121 {A : Type'} (u : A -> Prop) (s : A -> Prop) (_37907 : A) : (term5685 A u s _37907) = (term5685 A u s _37907).
Proof. exact (eq_refl (term5685 A u s _37907)). Qed.
Lemma lem3548122 {A : Type'} (u : A -> Prop) (s : A -> Prop) (_37907 : A) : ((term635 A s u _37907) = (term5685 A u s _37907)) = ((term5685 A u s _37907) = (term5685 A u s _37907)).
Proof. exact (MK_COMB (@lem3548115 A u s _37907) (@lem3548121 A u s _37907)). Qed.
Lemma lem3548124 {A : Type'} (x : A) : (x = x) = True.
Proof. exact (EQ_MP (@lem20665 A x) (@lem20664 A x)). Qed.
Lemma lem3548125 (x : Prop) : (x = x) = True.
Proof. exact (@lem3548124 Prop x). Qed.
Lemma lem3548126 {A : Type'} (u : A -> Prop) (s : A -> Prop) (_37907 : A) : ((term5685 A u s _37907) = (term5685 A u s _37907)) = True.
Proof. exact (@lem3548125 (term5685 A u s _37907)). Qed.
Lemma lem3548127 {A : Type'} (u : A -> Prop) (s : A -> Prop) (_37907 : A) : ((term635 A s u _37907) = (term5685 A u s _37907)) = True.
Proof. exact (TRANS (@lem3548122 A u s _37907) (@lem3548126 A u s _37907)). Qed.
Lemma lem3548128 {A : Type'} (u : A -> Prop) (s : A -> Prop) (_37907 : A) : True = ((term635 A s u _37907) = (term5685 A u s _37907)).
Proof. exact (SYM (@lem3548127 A u s _37907)). Qed.
Lemma lem3548129 {A : Type'} (u : A -> Prop) (s : A -> Prop) (_37907 : A) : (term635 A s u _37907) = (term5685 A u s _37907).
Proof. exact (EQ_MP (@lem3548128 A u s _37907) (@lem0)). Qed.
Lemma lem3548130 {A B : Type'} (_37907 : A) (x'''' : A -> Prop) (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) (h1 : term5193 A B x'''' g s u f) : term5685 A u s _37907.
Proof. exact (EQ_MP (@lem3548129 A u s _37907) (@lem3546582 A B _37907 x'''' g s u f h1)). Qed.
Lemma lem3548132 (b : Prop) (a : Prop) : (a \/ b) = (term833 b a).
Proof. exact (EQ_MP (@lem20682 b a) (@lem20764 b a)). Qed.
Lemma lem3548133 {A : Type'} (s : A -> Prop) (u : A -> Prop) (_37907 : A) : (term5685 A u s _37907) = (term5688 A s u _37907).
Proof. exact (@lem3548132 (term619 A s _37907) (@I (A -> Prop) u _37907)). Qed.
Lemma lem3548135 (a : Prop) : (term282 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem3548136 {A : Type'} (s : A -> Prop) (_37907 : A) : (term892 A s _37907) = (@I (A -> Prop) s _37907).
Proof. exact (@lem3548135 (@I (A -> Prop) s _37907)). Qed.
Lemma lem3548137 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem3548138 {A : Type'} (s : A -> Prop) (_37907 : A) : (term5689 A s _37907) = (term5690 A s _37907).
Proof. exact (MK_COMB (@lem3548137) (@lem3548136 A s _37907)). Qed.
Lemma lem3548139 {A : Type'} (u : A -> Prop) (_37907 : A) : (@I (A -> Prop) u _37907) = (@I (A -> Prop) u _37907).
Proof. exact (eq_refl (@I (A -> Prop) u _37907)). Qed.
Lemma lem3548140 {A : Type'} (s : A -> Prop) (u : A -> Prop) (_37907 : A) : (term5688 A s u _37907) = (term5691 A s u _37907).
Proof. exact (MK_COMB (@lem3548138 A s _37907) (@lem3548139 A u _37907)). Qed.
Lemma lem3548141 {A : Type'} (s : A -> Prop) (u : A -> Prop) (_37907 : A) : (term5685 A u s _37907) = (term5691 A s u _37907).
Proof. exact (TRANS (@lem3548133 A s u _37907) (@lem3548140 A s u _37907)). Qed.
Lemma lem3548144 {A B : Type'} (_37907 : A) (x'''' : A -> Prop) (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) (h1 : term5193 A B x'''' g s u f) : term5691 A s u _37907.
Proof. exact (EQ_MP (@lem3548141 A s u _37907) (@lem3548130 A B _37907 x'''' g s u f h1)). Qed.
Lemma lem3548145 {A B : Type'} (_37907 : A) (x'''' : A -> Prop) (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) (h1 : term5193 A B x'''' g s u f) : term5691 A s u _37907.
Proof. exact (@lem3548144 A B _37907 x'''' g s u f h1). Qed.
Lemma lem3548146 {A B : Type'} (x'' : A) (x'''' : A -> Prop) (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) (h1 : term5193 A B x'''' g s u f) : term5691 A s u x''.
Proof. exact (@lem3548145 A B x'' x'''' g s u f h1). Qed.
Lemma lem3548149 {A B : Type'} (x'''' : A -> Prop) (g : type686 A) (f : A -> B) (s : A -> Prop) (u : A -> Prop) (x'' : A) (h1 : term5193 A B x'''' g s u f) (h2 : term5515 A s u x'') : @I (A -> Prop) u x''.
Proof. exact (@lem3548146 A B x'' x'''' g s u f h1 (@lem3548101 A s u x'' h2)). Qed.
Lemma lem3548150 {A B : Type'} (x'''' : A -> Prop) (g : type686 A) (f : A -> B) (s : A -> Prop) (u : A -> Prop) (x'' : A) (h1 : term5193 A B x'''' g s u f) (h2 : term5515 A s u x'') : term839 A u x''.
Proof. exact (fun h0 : term619 A u x'' => @lem3548149 A B x'''' g f s u x'' h1 h2). Qed.
Lemma lem3548152 (p : Prop) : (term828 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem3548153 {A : Type'} (u : A -> Prop) (x'' : A) : (term839 A u x'') = (@I (A -> Prop) u x'').
Proof. exact (@lem3548152 (@I (A -> Prop) u x'')). Qed.
Lemma lem3548154 {A B : Type'} (x'''' : A -> Prop) (g : type686 A) (f : A -> B) (s : A -> Prop) (u : A -> Prop) (x'' : A) (h1 : term5193 A B x'''' g s u f) (h2 : term5515 A s u x'') : @I (A -> Prop) u x''.
Proof. exact (EQ_MP (@lem3548153 A u x'') (@lem3548150 A B x'''' g f s u x'' h1 h2)). Qed.
Lemma lem3548157 (p : Prop) : (~ p) = (p -> False).
Proof. exact (EQ_MP (@lem21021 p) (@lem0)). Qed.
Lemma lem3548159 {A : Type'} (u : A -> Prop) (x'' : A) : (term619 A u x'') = (term5684 A u x'').
Proof. exact (@lem3548157 (@I (A -> Prop) u x'')). Qed.
Lemma lem3548162 {A : Type'} (s : A -> Prop) (u : A -> Prop) (x'' : A) (h1 : term5515 A s u x'') : term5684 A u x''.
Proof. exact (EQ_MP (@lem3548159 A u x'') (@lem3546618 A s u x'' h1)). Qed.
Lemma lem3548165 {A B : Type'} (x'''' : A -> Prop) (g : type686 A) (f : A -> B) (s : A -> Prop) (u : A -> Prop) (x'' : A) (h1 : term5193 A B x'''' g s u f) (h2 : term5515 A s u x'') : False.
Proof. exact (@lem3548162 A s u x'' h2 (@lem3548154 A B x'''' g f s u x'' h1 h2)). Qed.
Lemma lem3548166 {A B : Type'} (x'''' : A -> Prop) (g : type686 A) (f : A -> B) (s : A -> Prop) (u : A -> Prop) (x'' : A) (h1 : term5193 A B x'''' g s u f) (h2 : term5515 A s u x'') : term847.
Proof. exact (fun h0 : ~ False => @lem3548165 A B x'''' g f s u x'' h1 h2). Qed.
Lemma lem3548168 (p : Prop) : (term828 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem3548169 : term847 = False.
Proof. exact (@lem3548168 False). Qed.
Lemma lem3548170 {A B : Type'} (x'''' : A -> Prop) (g : type686 A) (f : A -> B) (s : A -> Prop) (u : A -> Prop) (x'' : A) (h1 : term5193 A B x'''' g s u f) (h2 : term5515 A s u x'') : False.
Proof. exact (EQ_MP (@lem3548169) (@lem3548166 A B x'''' g f s u x'' h1 h2)). Qed.
Lemma lem3548171 {A B : Type'} (x'''' : A -> Prop) (x' : A) (x : A) (f : A -> B) (x''' : A) (g : type686 A) (t : A -> Prop) (s : A -> Prop) (u : A -> Prop) (x'' : A) (h1 : term5193 A B x'''' g s u f) (h2 : term5515 A s u x'') (h3 : term5503 A B x' x f x''' g t s u x'') : False.
Proof. exact (or_elim (@lem3545170 A B x' x f x''' g t s u x'' h3) (fun h0 : term5533 A B u f x' s x => @lem3548031 A B x'''' g f s u x'' h1 h2) (fun h0 : term5531 A g s u x => @lem3548170 A B x'''' g f s u x'' h1 h2)). Qed.
Lemma lem3548172 {A B : Type'} (x'''' : A -> Prop) (x' : A) (x : A) (f : A -> B) (x''' : A) (g : type686 A) (t : A -> Prop) (s : A -> Prop) (u : A -> Prop) (x'' : A) (h1 : term5193 A B x'''' g s u f) (h2 : term5527 A B u f x''' g s t x'') (h3 : term5503 A B x' x f x''' g t s u x'') : False.
Proof. exact (or_elim (@lem3545170 A B x' x f x''' g t s u x'' h3) (fun h0 : term5533 A B u f x' s x => @lem3547433 A B x'''' u f x''' g s t x'' h1 h2) (fun h0 : term5531 A g s u x => @lem3547892 A B x x'''' u f x''' g s t x'' h0 h1 h2)). Qed.
Lemma lem3548173 {A B : Type'} (x'''' : A -> Prop) (x' : A) (x : A) (f : A -> B) (x''' : A) (g : type686 A) (t : A -> Prop) (s : A -> Prop) (u : A -> Prop) (x'' : A) (h1 : term5193 A B x'''' g s u f) (h2 : term5503 A B x' x f x''' g t s u x'') : False.
Proof. exact (or_elim (@lem3545169 A B x' x f x''' g t s u x'' h2) (fun h0 : term5527 A B u f x''' g s t x'' => @lem3548172 A B x'''' x' x f x''' g t s u x'' h1 h0 h2) (fun h0 : term5515 A s u x'' => @lem3548171 A B x'''' x' x f x''' g t s u x'' h1 h0 h2)). Qed.
Lemma lem3548174 {A B : Type'} (x' : A) (x : A) (f : A -> B) (x''' : A) (g : type686 A) (t : A -> Prop) (s : A -> Prop) (u : A -> Prop) (x'' : A) (h1 : term5075 A B g s u f) (h2 : term5503 A B x' x f x''' g t s u x'') : False.
Proof. exact (ex_elim (@lem3543776 A B g s u f h1) (fun x'''' : A -> Prop => fun h0 : term5195 A B g s u f x'''' => @lem3548173 A B x'''' x' x f x''' g t s u x'' h0 h2)). Qed.
Lemma lem3548175 {A B : Type'} (x' : A) (x : A) (x''' : A) (x'' : A) (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) (h1 : term5506 A B x' x f x''' g s u x'') (h2 : term5075 A B g s u f) : False.
Proof. exact (ex_elim (@lem3544743 A B x' x f x''' g s u x'' h1) (fun t : A -> Prop => fun h0 : term5505 A B x' x f x''' g s u x'' t => @lem3548174 A B x' x f x''' g t s u x'' h2 h0)). Qed.
Lemma lem3548176 {A B : Type'} (x' : A) (x : A) (x'' : A) (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) (h1 : term5508 A B x' x f g s u x'') (h2 : term5075 A B g s u f) : False.
Proof. exact (ex_elim (@lem3544742 A B x' x f g s u x'' h1) (fun x''' : A => fun h0 : term5507 A B x' x f g s u x'' x''' => @lem3548175 A B x' x x''' x'' g s u f h0 h2)). Qed.
Lemma lem3548177 {A B : Type'} (x' : A) (x : A) (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) (h1 : term5510 A B x' x f g s u) (h2 : term5075 A B g s u f) : False.
Proof. exact (ex_elim (@lem3544741 A B x' x f g s u h1) (fun x'' : A => fun h0 : term5509 A B x' x f g s u x'' => @lem3548176 A B x' x x'' g s u f h0 h2)). Qed.
Lemma lem3548178 {A B : Type'} (x : A) (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) (h1 : term5512 A B x f g s u) (h2 : term5075 A B g s u f) : False.
Proof. exact (ex_elim (@lem3544740 A B x f g s u h1) (fun x' : A => fun h0 : term5511 A B x f g s u x' => @lem3548177 A B x' x g s u f h0 h2)). Qed.
Lemma lem3548179 {A B : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) (h1 : term5154 A B f g s u) (h2 : term5075 A B g s u f) : False.
Proof. exact (ex_elim (@lem3544739 A B f g s u h1) (fun x : A => fun h0 : term5513 A B f g s u x => @lem3548178 A B x g s u f h0 h2)). Qed.
Lemma lem3548180 {A B : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) (h1 : term5154 A B f g s u) (h2 : term5075 A B g s u f) : (term5154 A B f g s u) = False.
Proof. exact (prop_ext (fun h3 : term5154 A B f g s u => @lem3548179 A B g s u f h1 h2) (fun h3 : False => @lem3543368 A B f g s u h1)). Qed.
Lemma lem3548181 {A B : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) (h1 : term5154 A B f g s u) (h2 : term5075 A B g s u f) : False.
Proof. exact (EQ_MP (@lem3548180 A B g s u f h1 h2) (@lem3543368 A B f g s u h1)). Qed.
Lemma lem3548182 {A B : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) (h1 : term5075 A B g s u f) : term5153 A B f g s u.
Proof. exact (fun h0 : term5154 A B f g s u => @lem3548181 A B g s u f h0 h1). Qed.
Lemma lem3548183 {A B : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) (h1 : term5075 A B g s u f) : term5129 A B f g s u.
Proof. exact (EQ_MP (@lem3543367 A B f g s u) (@lem3548182 A B g s u f h1)). Qed.
Lemma lem3548184 {A B : Type'} (f : A -> B) (g : type686 A) (s : A -> Prop) (u : A -> Prop) : term5130 A B f g s u.
Proof. exact (fun h0 : term5075 A B g s u f => @lem3548183 A B g s u f h0). Qed.
Lemma lem3548189 {A B : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) : term5140 A B g s u.
Proof. exact (fun f : A -> B => @lem3548184 A B f g s u). Qed.
Lemma lem3548194 {A B : Type'} (s : A -> Prop) (u : A -> Prop) : term5144 A B s u.
Proof. exact (fun g : type686 A => @lem3548189 A B g s u). Qed.
Lemma lem3548199 {A B : Type'} (u : A -> Prop) : term5148 A B u.
Proof. exact (fun s : A -> Prop => @lem3548194 A B s u). Qed.
Lemma lem3548204 {A B : Type'} : term5152 A B.
Proof. exact (fun u : A -> Prop => @lem3548199 A B u). Qed.
Lemma lem3548205 {A B : Type'} : term5151 A B.
Proof. exact (EQ_MP (@lem3543362 A B) (@lem3548204 A B)). Qed.
Lemma lem3548206 {A B : Type'} (u : A -> Prop) : term5692 A B u.
Proof. exact (@lem3548205 A B u). Qed.
Lemma lem3548207 {A B : Type'} (u : A -> Prop) : (term5692 A B u) = (term5147 A B u).
Proof. exact (eq_refl (term5692 A B u)). Qed.
Lemma lem3548208 {A B : Type'} (u : A -> Prop) : term5147 A B u.
Proof. exact (EQ_MP (@lem3548207 A B u) (@lem3548206 A B u)). Qed.
Lemma lem3548209 {A B : Type'} (u : A -> Prop) (s : A -> Prop) : term5693 A B u s.
Proof. exact (@lem3548208 A B u s). Qed.
Lemma lem3548210 {A B : Type'} (s : A -> Prop) (u : A -> Prop) : (term5693 A B u s) = (term5143 A B s u).
Proof. exact (eq_refl (term5693 A B u s)). Qed.
Lemma lem3548211 {A B : Type'} (s : A -> Prop) (u : A -> Prop) : term5143 A B s u.
Proof. exact (EQ_MP (@lem3548210 A B s u) (@lem3548209 A B u s)). Qed.
Lemma lem3548212 {A B : Type'} (s : A -> Prop) (u : A -> Prop) (g : type686 A) : term5694 A B s u g.
Proof. exact (@lem3548211 A B s u g). Qed.
Lemma lem3548213 {A B : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) : (term5694 A B s u g) = (term5139 A B g s u).
Proof. exact (eq_refl (term5694 A B s u g)). Qed.
Lemma lem3548214 {A B : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) : term5139 A B g s u.
Proof. exact (EQ_MP (@lem3548213 A B g s u) (@lem3548212 A B s u g)). Qed.
Lemma lem3548215 {A B : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) : term5695 A B g s u f.
Proof. exact (@lem3548214 A B g s u f). Qed.
Lemma lem3548216 {A B : Type'} (f : A -> B) (g : type686 A) (s : A -> Prop) (u : A -> Prop) : (term5695 A B g s u f) = (term5131 A B f g s u).
Proof. exact (eq_refl (term5695 A B g s u f)). Qed.
Lemma lem3548217 {A B : Type'} (f : A -> B) (g : type686 A) (s : A -> Prop) (u : A -> Prop) : term5131 A B f g s u.
Proof. exact (EQ_MP (@lem3548216 A B f g s u) (@lem3548215 A B g s u f)). Qed.
Lemma lem3548219 {A B : Type'} (f : A -> B) (g : type686 A) (s : A -> Prop) (u : A -> Prop) : term5131 A B f g s u.
Proof. exact (@lem3542694 A B f g s u (@lem3548217 A B f g s u)). Qed.
Lemma lem3548220 {A B : Type'} (f : A -> B) (g : type686 A) (s : A -> Prop) (u : A -> Prop) (h1 : term5132 A B f g s u) : False.
Proof. exact (@lem3548219 A B f g s u (@lem3542678 A B f g s u h1)). Qed.
Lemma lem3548221 {A B : Type'} (f : A -> B) (g : type686 A) (s : A -> Prop) (u : A -> Prop) (h1 : term5132 A B f g s u) : (term5132 A B f g s u) = False.
Proof. exact (prop_ext (fun h2 : term5132 A B f g s u => @lem3548220 A B f g s u h1) (fun h2 : False => @lem3542678 A B f g s u h1)). Qed.
Lemma lem3548222 {A B : Type'} (f : A -> B) (g : type686 A) (s : A -> Prop) (u : A -> Prop) (h1 : term5132 A B f g s u) : False.
Proof. exact (EQ_MP (@lem3548221 A B f g s u h1) (@lem3542678 A B f g s u h1)). Qed.
Lemma lem3548223 {A B : Type'} (f : A -> B) (g : type686 A) (s : A -> Prop) (u : A -> Prop) : term5131 A B f g s u.
Proof. exact (fun h0 : term5132 A B f g s u => @lem3548222 A B f g s u h0). Qed.
Lemma lem3548224 {A B : Type'} (f : A -> B) (g : type686 A) (s : A -> Prop) (u : A -> Prop) : term5130 A B f g s u.
Proof. exact (EQ_MP (@lem3542677 A B f g s u) (@lem3548223 A B f g s u)). Qed.
Lemma lem3548225 {A B : Type'} (f : A -> B) (g : type686 A) (s : A -> Prop) (u : A -> Prop) : term5038 A B f g s u.
Proof. exact (EQ_MP (@lem3542673 A B f g s u) (@lem3548224 A B f g s u)). Qed.
Lemma lem3548226 {A B : Type'} (f : A -> B) (g : type686 A) (s : A -> Prop) (u : A -> Prop) : term5037 A B f g s u.
Proof. exact (EQ_MP (@lem3542019 A B f g s u) (@lem3548225 A B f g s u)). Qed.
Lemma lem3548227 {A B : Type'} (f : A -> B) (g : type686 A) (s : A -> Prop) (u : A -> Prop) (h1 : term4964 A g s u) (h2 : term1944 A B g s u f) (h3 : term1797 A g s) (h4 : @SUBSET A s u) : term5035 A B f g s u.
Proof. exact (@lem3548226 A B f g s u (@lem3541831 A B f g s u h1 h2 h3 h4)). Qed.
Lemma lem3548228 {A B : Type'} (f : A -> B) (g : type686 A) (s : A -> Prop) (u : A -> Prop) (h1 : term4964 A g s u) (h2 : term1944 A B g s u f) (h3 : term1797 A g s) (h4 : @SUBSET A s u) : term5696 A B f g s.
Proof. exact (ex_intro (term5697 A B f g s) u (@lem3548227 A B f g s u h1 h2 h3 h4)). Qed.
Lemma lem3548229 {A B : Type'} (f : A -> B) (g : type686 A) (s : A -> Prop) (u : A -> Prop) (h1 : term4964 A g s u) (h2 : term1944 A B g s u f) (h3 : term1797 A g s) (h4 : @SUBSET A s u) : (term4992 A B f g s) = (term5698 A B f g s).
Proof. exact (@lem3541818 A B f g s (@lem3548228 A B f g s u h1 h2 h3 h4)). Qed.
Lemma lem3548231 {_90715 _90724 : Type'} (u : _90715 -> Prop) (f : _90715 -> _90724) (g : type686 _90715) : term52 _90715 _90724 u f g.
Proof. exact (@lem3498489 _90715 _90724 u f g (@lem3498481 _90715 _90724 u f g)). Qed.
Lemma lem3548232 {A B : Type'} (u : A -> Prop) (f : A -> B) (g : type686 A) : term52 A B u f g.
Proof. exact (@lem3548231 A B u f g). Qed.
Lemma lem3548233 {A B : Type'} (u : A -> Prop) (f : A -> B) (g : type686 A) (s : A -> Prop) : term5699 A B u f g s.
Proof. exact (@lem3548232 A B u f (@DELETE (A -> Prop) g s)). Qed.
Lemma lem3548234 (t1 : Prop) : term0 t1.
Proof. exact (@lem693 t1). Qed.
Lemma lem3548235 (t1 : Prop) : (term0 t1) = (term1 t1).
Proof. exact (eq_refl (term0 t1)). Qed.
Lemma lem3548236 (t1 : Prop) : term1 t1.
Proof. exact (EQ_MP (@lem3548235 t1) (@lem3548234 t1)). Qed.
Lemma lem3548237 (t1 : Prop) (t2 : Prop) : term2 t1 t2.
Proof. exact (@lem3548236 t1 t2). Qed.
Lemma lem3548238 (t1 : Prop) (t2 : Prop) : (term2 t1 t2) = (term3 t1 t2).
Proof. exact (eq_refl (term2 t1 t2)). Qed.
Lemma lem3548239 (t1 : Prop) (t2 : Prop) : term3 t1 t2.
Proof. exact (EQ_MP (@lem3548238 t1 t2) (@lem3548237 t1 t2)). Qed.
Lemma lem3548240 (t1 : Prop) (t2 : Prop) (t3 : Prop) : term4 t1 t2 t3.
Proof. exact (@lem3548239 t1 t2 t3). Qed.
Lemma lem3548241 (t1 : Prop) (t2 : Prop) (t3 : Prop) : (term4 t1 t2 t3) = ((term5 t1 t2 t3) = (term6 t1 t2 t3)).
Proof. exact (eq_refl (term4 t1 t2 t3)). Qed.
Lemma lem3548242 (t1 : Prop) (t2 : Prop) (t3 : Prop) : (term5 t1 t2 t3) = (term6 t1 t2 t3).
Proof. exact (EQ_MP (@lem3548241 t1 t2 t3) (@lem3548240 t1 t2 t3)). Qed.
Lemma lem3548243 (t1 : Prop) (t2 : Prop) (t3 : Prop) : (term6 t1 t2 t3) = (term5 t1 t2 t3).
Proof. exact (SYM (@lem3548242 t1 t2 t3)). Qed.
Lemma lem3548244 {A B : Type'} (g : type686 A) (f : A -> B) (s : A -> Prop) (u : A -> Prop) (h1 : term1944 A B g s u f) (h2 : @SUBSET A s u) : term4999 A B g s u f.
Proof. exact (conj (@lem3541691 A s u h2) (@lem3541598 A B g s u f h1)). Qed.
Lemma lem3548245 {A B : Type'} (g : type686 A) (f : A -> B) (s : A -> Prop) (u : A -> Prop) (h1 : term4964 A g s u) (h2 : term1944 A B g s u f) (h3 : @SUBSET A s u) : term5000 A B g s u f.
Proof. exact (conj (@lem3541690 A g s u h1) (@lem3548244 A B g f s u h2 h3)). Qed.
Lemma lem3548246 {A B : Type'} (f : A -> B) (g : type686 A) (s : A -> Prop) (u : A -> Prop) (h1 : term4964 A g s u) (h2 : term1944 A B g s u f) (h3 : term1797 A g s) (h4 : @SUBSET A s u) : term5001 A B g s u f.
Proof. exact (conj (@lem3504838 A g s h3) (@lem3548245 A B g f s u h1 h2 h4)). Qed.
Lemma lem3548254 {A : Type'} (s : A -> Prop) (t : A -> Prop) : (s = t) = (term37 A s t).
Proof. exact (EQ_MP (@lem3211757 A s t) (@lem3211756 A s t)). Qed.
Lemma lem3548255 {A : Type'} (s : type686 A) (t : type686 A) : (s = t) = (term38 A s t).
Proof. exact (@lem3548254 (A -> Prop) s t). Qed.
Lemma lem3548256 {A : Type'} (g : type686 A) (s : A -> Prop) : ((@DELETE (A -> Prop) g s) = (@EMPTY (A -> Prop))) = (term5002 A g s).
Proof. exact (@lem3548255 A (@DELETE (A -> Prop) g s) (@EMPTY (A -> Prop))). Qed.
Lemma lem3548265 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem3548266 {A : Type'} (g : type686 A) (s : A -> Prop) : (term1797 A g s) = (term5003 A g s).
Proof. exact (MK_COMB (@lem3548265) (@lem3548256 A g s)). Qed.
Lemma lem3548267 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem3548268 {A : Type'} (g : type686 A) (s : A -> Prop) : (term5004 A g s) = (term5005 A g s).
Proof. exact (MK_COMB (@lem3548267) (@lem3548266 A g s)). Qed.
Lemma lem3548278 {A : Type'} (s : A -> Prop) (t : A -> Prop) : (@SUBSET A s t) = (term197 A s t).
Proof. exact (EQ_MP (@lem3211751 A s t) (@lem3211750 A s t)). Qed.
Lemma lem3548279 {A : Type'} (s : A -> Prop) (t : A -> Prop) : (@SUBSET A s t) = (term197 A s t).
Proof. exact (@lem3548278 A s t). Qed.
Lemma lem3548280 {A : Type'} (t : A -> Prop) (u : A -> Prop) : (@SUBSET A t u) = (term197 A t u).
Proof. exact (@lem3548279 A t u). Qed.
Lemma lem3548287 {A : Type'} (t : A -> Prop) (g : type686 A) (s : A -> Prop) : (term4958 A t g s) = (term4958 A t g s).
Proof. exact (eq_refl (term4958 A t g s)). Qed.
Lemma lem3548288 {A : Type'} (g : type686 A) (s : A -> Prop) (t : A -> Prop) (u : A -> Prop) : (term4960 A g s t u) = (term5006 A g s t u).
Proof. exact (MK_COMB (@lem3548287 A t g s) (@lem3548280 A t u)). Qed.
Lemma lem3548291 {A : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) : (term4962 A g s u) = (term5007 A g s u).
Proof. exact (fun_ext (fun t : A -> Prop => @lem3548288 A g s t u)). Qed.
Lemma lem3548292 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem3548293 {A : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) : (term4964 A g s u) = (term5008 A g s u).
Proof. exact (MK_COMB (@lem3548292 A) (@lem3548291 A g s u)). Qed.
Lemma lem3548298 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem3548299 {A : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) : (term5009 A g s u) = (term5010 A g s u).
Proof. exact (MK_COMB (@lem3548298) (@lem3548293 A g s u)). Qed.
Lemma lem3548303 {A : Type'} (s : A -> Prop) (t : A -> Prop) : (@SUBSET A s t) = (term197 A s t).
Proof. exact (EQ_MP (@lem3211751 A s t) (@lem3211750 A s t)). Qed.
Lemma lem3548304 {A : Type'} (s : A -> Prop) (t : A -> Prop) : (@SUBSET A s t) = (term197 A s t).
Proof. exact (@lem3548303 A s t). Qed.
Lemma lem3548305 {A : Type'} (s : A -> Prop) (u : A -> Prop) : (@SUBSET A s u) = (term197 A s u).
Proof. exact (@lem3548304 A s u). Qed.
Lemma lem3548312 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem3548313 {A : Type'} (s : A -> Prop) (u : A -> Prop) : (term75 A s u) = (term198 A s u).
Proof. exact (MK_COMB (@lem3548312) (@lem3548305 A s u)). Qed.
Lemma lem3548321 {A : Type'} (s : A -> Prop) (t : A -> Prop) : (@SUBSET A s t) = (term197 A s t).
Proof. exact (EQ_MP (@lem3211751 A s t) (@lem3211750 A s t)). Qed.
Lemma lem3548322 {A : Type'} (s : A -> Prop) (t : A -> Prop) : (@SUBSET A s t) = (term197 A s t).
Proof. exact (@lem3548321 A s t). Qed.
Lemma lem3548323 {A B : Type'} (u : A -> Prop) (f : A -> B) (t : A -> Prop) : (term73 A B u f t) = (term5011 A B u f t).
Proof. exact (@lem3548322 A (term69 A B u f t) t). Qed.
Lemma lem3548336 {A : Type'} (t : A -> Prop) (g : type686 A) (s : A -> Prop) : (term4958 A t g s) = (term4958 A t g s).
Proof. exact (eq_refl (term4958 A t g s)). Qed.
Lemma lem3548337 {A B : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) (t : A -> Prop) : (term1940 A B g s u f t) = (term5012 A B g s u f t).
Proof. exact (MK_COMB (@lem3548336 A t g s) (@lem3548323 A B u f t)). Qed.
Lemma lem3548340 {A B : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) : (term1942 A B g s u f) = (term5013 A B g s u f).
Proof. exact (fun_ext (fun t : A -> Prop => @lem3548337 A B g s u f t)). Qed.
Lemma lem3548341 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem3548342 {A B : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) : (term1944 A B g s u f) = (term5014 A B g s u f).
Proof. exact (MK_COMB (@lem3548341 A) (@lem3548340 A B g s u f)). Qed.
Lemma lem3548347 {A B : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) : (term4999 A B g s u f) = (term5015 A B g s u f).
Proof. exact (MK_COMB (@lem3548313 A s u) (@lem3548342 A B g s u f)). Qed.
Lemma lem3548350 {A B : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) : (term5000 A B g s u f) = (term5016 A B g s u f).
Proof. exact (MK_COMB (@lem3548299 A g s u) (@lem3548347 A B g s u f)). Qed.
Lemma lem3548353 {A B : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) : (term5001 A B g s u f) = (term5017 A B g s u f).
Proof. exact (MK_COMB (@lem3548268 A g s) (@lem3548350 A B g s u f)). Qed.
Lemma lem3548356 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem3548357 {A B : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) : (term5018 A B g s u f) = (term5019 A B g s u f).
Proof. exact (MK_COMB (@lem3548356) (@lem3548353 A B g s u f)). Qed.
Lemma lem3548363 {A : Type'} (s : A -> Prop) (t : A -> Prop) : (s = t) = (term37 A s t).
Proof. exact (EQ_MP (@lem3211757 A s t) (@lem3211756 A s t)). Qed.
Lemma lem3548364 {A : Type'} (s : type686 A) (t : type686 A) : (s = t) = (term38 A s t).
Proof. exact (@lem3548363 (A -> Prop) s t). Qed.
Lemma lem3548365 {A : Type'} (g : type686 A) (s : A -> Prop) : ((@DELETE (A -> Prop) g s) = (@EMPTY (A -> Prop))) = (term5002 A g s).
Proof. exact (@lem3548364 A (@DELETE (A -> Prop) g s) (@EMPTY (A -> Prop))). Qed.
Lemma lem3548374 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem3548375 {A : Type'} (g : type686 A) (s : A -> Prop) : (term1797 A g s) = (term5003 A g s).
Proof. exact (MK_COMB (@lem3548374) (@lem3548365 A g s)). Qed.
Lemma lem3548376 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem3548377 {A : Type'} (g : type686 A) (s : A -> Prop) : (term5004 A g s) = (term5005 A g s).
Proof. exact (MK_COMB (@lem3548376) (@lem3548375 A g s)). Qed.
Lemma lem3548387 {A : Type'} (s : A -> Prop) (t : A -> Prop) : (@SUBSET A s t) = (term197 A s t).
Proof. exact (EQ_MP (@lem3211751 A s t) (@lem3211750 A s t)). Qed.
Lemma lem3548388 {A : Type'} (s : A -> Prop) (t : A -> Prop) : (@SUBSET A s t) = (term197 A s t).
Proof. exact (@lem3548387 A s t). Qed.
Lemma lem3548389 {A : Type'} (t : A -> Prop) (u : A -> Prop) : (@SUBSET A t u) = (term197 A t u).
Proof. exact (@lem3548388 A t u). Qed.
Lemma lem3548396 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem3548397 {A : Type'} (t : A -> Prop) (u : A -> Prop) : (term75 A t u) = (term198 A t u).
Proof. exact (MK_COMB (@lem3548396) (@lem3548389 A t u)). Qed.
Lemma lem3548399 {A : Type'} (s : A -> Prop) (t : A -> Prop) : (@SUBSET A s t) = (term197 A s t).
Proof. exact (EQ_MP (@lem3211751 A s t) (@lem3211750 A s t)). Qed.
Lemma lem3548400 {A : Type'} (s : A -> Prop) (t : A -> Prop) : (@SUBSET A s t) = (term197 A s t).
Proof. exact (@lem3548399 A s t). Qed.
Lemma lem3548401 {A B : Type'} (u : A -> Prop) (f : A -> B) (t : A -> Prop) : (term73 A B u f t) = (term5011 A B u f t).
Proof. exact (@lem3548400 A (term69 A B u f t) t). Qed.
Lemma lem3548414 {A B : Type'} (u : A -> Prop) (f : A -> B) (t : A -> Prop) : (term76 A B u f t) = (term5700 A B u f t).
Proof. exact (MK_COMB (@lem3548397 A t u) (@lem3548401 A B u f t)). Qed.
Lemma lem3548417 {A : Type'} (t : A -> Prop) (g : type686 A) (s : A -> Prop) : (term4958 A t g s) = (term4958 A t g s).
Proof. exact (eq_refl (term4958 A t g s)). Qed.
Lemma lem3548418 {A B : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) (t : A -> Prop) : (term5701 A B g s u f t) = (term5702 A B g s u f t).
Proof. exact (MK_COMB (@lem3548417 A t g s) (@lem3548414 A B u f t)). Qed.
Lemma lem3548421 {A B : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) : (term5703 A B g s u f) = (term5704 A B g s u f).
Proof. exact (fun_ext (fun t : A -> Prop => @lem3548418 A B g s u f t)). Qed.
Lemma lem3548422 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem3548423 {A B : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) : (term5705 A B g s u f) = (term5706 A B g s u f).
Proof. exact (MK_COMB (@lem3548422 A) (@lem3548421 A B g s u f)). Qed.
Lemma lem3548428 {A B : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) : (term5707 A B g s u f) = (term5708 A B g s u f).
Proof. exact (MK_COMB (@lem3548377 A g s) (@lem3548423 A B g s u f)). Qed.
Lemma lem3548431 {A B : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) : (term5709 A B g s u f) = (term5710 A B g s u f).
Proof. exact (MK_COMB (@lem3548357 A B g s u f) (@lem3548428 A B g s u f)). Qed.
Lemma lem3548434 {A B : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) : (term5710 A B g s u f) = (term5709 A B g s u f).
Proof. exact (SYM (@lem3548431 A B g s u f)). Qed.
Lemma lem3548446 {A : Type'} (s : A -> Prop) (x : A) (y : A) : (term1819 A x s y) = (term1820 A s x y).
Proof. exact (EQ_MP (@lem3211684 A s x y) (@lem3211683 A s x y)). Qed.
Lemma lem3548447 {A : Type'} (s : type686 A) (x : A -> Prop) (y : A -> Prop) : (term1930 A x s y) = (term5039 A s x y).
Proof. exact (@lem3548446 (A -> Prop) s x y). Qed.
Lemma lem3548448 {A : Type'} (g : type686 A) (x : A -> Prop) (s : A -> Prop) : (term1930 A x g s) = (term5039 A g x s).
Proof. exact (@lem3548447 A g x s). Qed.
Lemma lem3548452 {A : Type'} (P : A -> Prop) (x : A) : (@IN A x P) = (P x).
Proof. exact (EQ_MP (@lem3211610 A P x) (@lem3211609 A P x)). Qed.
Lemma lem3548453 {A : Type'} (P : type686 A) (x : A -> Prop) : (@IN (A -> Prop) x P) = (P x).
Proof. exact (@lem3548452 (A -> Prop) P x). Qed.
Lemma lem3548454 {A : Type'} (g : type686 A) (x : A -> Prop) : (@IN (A -> Prop) x g) = (g x).
Proof. exact (@lem3548453 A g x). Qed.
Lemma lem3548455 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem3548456 {A : Type'} (g : type686 A) (x : A -> Prop) : (term4082 A x g) = (term372 A g x).
Proof. exact (MK_COMB (@lem3548455) (@lem3548454 A g x)). Qed.
Lemma lem3548459 {A : Type'} (x : A -> Prop) (s : A -> Prop) : (term5040 A x s) = (term5040 A x s).
Proof. exact (eq_refl (term5040 A x s)). Qed.
Lemma lem3548460 {A : Type'} (g : type686 A) (x : A -> Prop) (s : A -> Prop) : (term5039 A g x s) = (term5041 A g x s).
Proof. exact (MK_COMB (@lem3548456 A g x) (@lem3548459 A x s)). Qed.
Lemma lem3548463 {A : Type'} (g : type686 A) (x : A -> Prop) (s : A -> Prop) : (term1930 A x g s) = (term5041 A g x s).
Proof. exact (TRANS (@lem3548448 A g x s) (@lem3548460 A g x s)). Qed.
Lemma lem3548464 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem3548465 {A : Type'} (g : type686 A) (x : A -> Prop) (s : A -> Prop) : (term5042 A x g s) = (term5043 A g x s).
Proof. exact (MK_COMB (@lem3548464) (@lem3548463 A g x s)). Qed.
Lemma lem3548467 {A : Type'} (x : A) : (@IN A x (@EMPTY A)) = False.
Proof. exact (@lem3211730 A x (@lem3211729 A x)). Qed.
Lemma lem3548468 {A : Type'} (x : A -> Prop) : (@IN (A -> Prop) x (@EMPTY (A -> Prop))) = False.
Proof. exact (@lem3548467 (A -> Prop) x). Qed.
Lemma lem3548469 {A : Type'} (g : type686 A) (x : A -> Prop) (s : A -> Prop) : ((term1930 A x g s) = (@IN (A -> Prop) x (@EMPTY (A -> Prop)))) = ((term5041 A g x s) = False).
Proof. exact (MK_COMB (@lem3548465 A g x s) (@lem3548468 A x)). Qed.
Lemma lem3548471 (t : Prop) : (t = False) = (~ t).
Proof. exact (proj2 (@lem1857 t)). Qed.
Lemma lem3548472 {A : Type'} (g : type686 A) (x : A -> Prop) (s : A -> Prop) : ((term5041 A g x s) = False) = (term5044 A g x s).
Proof. exact (@lem3548471 (term5041 A g x s)). Qed.
Lemma lem3548477 {A : Type'} (g : type686 A) (x : A -> Prop) (s : A -> Prop) : ((term1930 A x g s) = (@IN (A -> Prop) x (@EMPTY (A -> Prop)))) = (term5044 A g x s).
Proof. exact (TRANS (@lem3548469 A g x s) (@lem3548472 A g x s)). Qed.
Lemma lem3548478 {A : Type'} (g : type686 A) (s : A -> Prop) : (term5045 A g s) = (term5046 A g s).
Proof. exact (fun_ext (fun x : A -> Prop => @lem3548477 A g x s)). Qed.
Lemma lem3548479 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem3548480 {A : Type'} (g : type686 A) (s : A -> Prop) : (term5002 A g s) = (term5047 A g s).
Proof. exact (MK_COMB (@lem3548479 A) (@lem3548478 A g s)). Qed.
Lemma lem3548485 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem3548486 {A : Type'} (g : type686 A) (s : A -> Prop) : (term5003 A g s) = (term5048 A g s).
Proof. exact (MK_COMB (@lem3548485) (@lem3548480 A g s)). Qed.
Lemma lem3548487 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem3548488 {A : Type'} (g : type686 A) (s : A -> Prop) : (term5005 A g s) = (term5049 A g s).
Proof. exact (MK_COMB (@lem3548487) (@lem3548486 A g s)). Qed.
Lemma lem3548498 {A : Type'} (s : A -> Prop) (x : A) (y : A) : (term1819 A x s y) = (term1820 A s x y).
Proof. exact (EQ_MP (@lem3211684 A s x y) (@lem3211683 A s x y)). Qed.
Lemma lem3548499 {A : Type'} (s : type686 A) (x : A -> Prop) (y : A -> Prop) : (term1930 A x s y) = (term5039 A s x y).
Proof. exact (@lem3548498 (A -> Prop) s x y). Qed.
Lemma lem3548500 {A : Type'} (g : type686 A) (t : A -> Prop) (s : A -> Prop) : (term1930 A t g s) = (term5039 A g t s).
Proof. exact (@lem3548499 A g t s). Qed.
Lemma lem3548504 {A : Type'} (P : A -> Prop) (x : A) : (@IN A x P) = (P x).
Proof. exact (EQ_MP (@lem3211610 A P x) (@lem3211609 A P x)). Qed.
Lemma lem3548505 {A : Type'} (P : type686 A) (x : A -> Prop) : (@IN (A -> Prop) x P) = (P x).
Proof. exact (@lem3548504 (A -> Prop) P x). Qed.
Lemma lem3548506 {A : Type'} (g : type686 A) (t : A -> Prop) : (@IN (A -> Prop) t g) = (g t).
Proof. exact (@lem3548505 A g t). Qed.
Lemma lem3548507 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem3548508 {A : Type'} (g : type686 A) (t : A -> Prop) : (term4082 A t g) = (term372 A g t).
Proof. exact (MK_COMB (@lem3548507) (@lem3548506 A g t)). Qed.
Lemma lem3548511 {A : Type'} (t : A -> Prop) (s : A -> Prop) : (term5040 A t s) = (term5040 A t s).
Proof. exact (eq_refl (term5040 A t s)). Qed.
Lemma lem3548512 {A : Type'} (g : type686 A) (t : A -> Prop) (s : A -> Prop) : (term5039 A g t s) = (term5041 A g t s).
Proof. exact (MK_COMB (@lem3548508 A g t) (@lem3548511 A t s)). Qed.
Lemma lem3548515 {A : Type'} (g : type686 A) (t : A -> Prop) (s : A -> Prop) : (term1930 A t g s) = (term5041 A g t s).
Proof. exact (TRANS (@lem3548500 A g t s) (@lem3548512 A g t s)). Qed.
Lemma lem3548516 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem3548517 {A : Type'} (g : type686 A) (t : A -> Prop) (s : A -> Prop) : (term4958 A t g s) = (term5050 A g t s).
Proof. exact (MK_COMB (@lem3548516) (@lem3548515 A g t s)). Qed.
Lemma lem3548525 {A : Type'} (P : A -> Prop) (x : A) : (@IN A x P) = (P x).
Proof. exact (EQ_MP (@lem3211610 A P x) (@lem3211609 A P x)). Qed.
Lemma lem3548526 {A : Type'} (P : A -> Prop) (x : A) : (@IN A x P) = (P x).
Proof. exact (@lem3548525 A P x). Qed.
Lemma lem3548527 {A : Type'} (t : A -> Prop) (x : A) : (@IN A x t) = (t x).
Proof. exact (@lem3548526 A t x). Qed.
Lemma lem3548528 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem3548529 {A : Type'} (t : A -> Prop) (x : A) : (term213 A x t) = (term214 A t x).
Proof. exact (MK_COMB (@lem3548528) (@lem3548527 A t x)). Qed.
Lemma lem3548531 {A : Type'} (P : A -> Prop) (x : A) : (@IN A x P) = (P x).
Proof. exact (EQ_MP (@lem3211610 A P x) (@lem3211609 A P x)). Qed.
Lemma lem3548532 {A : Type'} (P : A -> Prop) (x : A) : (@IN A x P) = (P x).
Proof. exact (@lem3548531 A P x). Qed.
Lemma lem3548533 {A : Type'} (u : A -> Prop) (x : A) : (@IN A x u) = (u x).
Proof. exact (@lem3548532 A u x). Qed.
Lemma lem3548534 {A : Type'} (t : A -> Prop) (u : A -> Prop) (x : A) : (term215 A t x u) = (term216 A t u x).
Proof. exact (MK_COMB (@lem3548529 A t x) (@lem3548533 A u x)). Qed.
Lemma lem3548537 {A : Type'} (t : A -> Prop) (u : A -> Prop) : (term217 A t u) = (term218 A t u).
Proof. exact (fun_ext (fun x : A => @lem3548534 A t u x)). Qed.
Lemma lem3548538 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem3548539 {A : Type'} (t : A -> Prop) (u : A -> Prop) : (term197 A t u) = (term219 A t u).
Proof. exact (MK_COMB (@lem3548538 A) (@lem3548537 A t u)). Qed.
Lemma lem3548544 {A : Type'} (g : type686 A) (s : A -> Prop) (t : A -> Prop) (u : A -> Prop) : (term5006 A g s t u) = (term5051 A g s t u).
Proof. exact (MK_COMB (@lem3548517 A g t s) (@lem3548539 A t u)). Qed.
Lemma lem3548547 {A : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) : (term5007 A g s u) = (term5052 A g s u).
Proof. exact (fun_ext (fun t : A -> Prop => @lem3548544 A g s t u)). Qed.
Lemma lem3548548 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem3548549 {A : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) : (term5008 A g s u) = (term5053 A g s u).
Proof. exact (MK_COMB (@lem3548548 A) (@lem3548547 A g s u)). Qed.
Lemma lem3548554 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem3548555 {A : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) : (term5010 A g s u) = (term5054 A g s u).
Proof. exact (MK_COMB (@lem3548554) (@lem3548549 A g s u)). Qed.
Lemma lem3548565 {A : Type'} (P : A -> Prop) (x : A) : (@IN A x P) = (P x).
Proof. exact (EQ_MP (@lem3211610 A P x) (@lem3211609 A P x)). Qed.
Lemma lem3548566 {A : Type'} (P : A -> Prop) (x : A) : (@IN A x P) = (P x).
Proof. exact (@lem3548565 A P x). Qed.
Lemma lem3548567 {A : Type'} (s : A -> Prop) (x : A) : (@IN A x s) = (s x).
Proof. exact (@lem3548566 A s x). Qed.
Lemma lem3548568 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem3548569 {A : Type'} (s : A -> Prop) (x : A) : (term213 A x s) = (term214 A s x).
Proof. exact (MK_COMB (@lem3548568) (@lem3548567 A s x)). Qed.
Lemma lem3548571 {A : Type'} (P : A -> Prop) (x : A) : (@IN A x P) = (P x).
Proof. exact (EQ_MP (@lem3211610 A P x) (@lem3211609 A P x)). Qed.
Lemma lem3548572 {A : Type'} (P : A -> Prop) (x : A) : (@IN A x P) = (P x).
Proof. exact (@lem3548571 A P x). Qed.
Lemma lem3548573 {A : Type'} (u : A -> Prop) (x : A) : (@IN A x u) = (u x).
Proof. exact (@lem3548572 A u x). Qed.
Lemma lem3548574 {A : Type'} (s : A -> Prop) (u : A -> Prop) (x : A) : (term215 A s x u) = (term216 A s u x).
Proof. exact (MK_COMB (@lem3548569 A s x) (@lem3548573 A u x)). Qed.
Lemma lem3548577 {A : Type'} (s : A -> Prop) (u : A -> Prop) : (term217 A s u) = (term218 A s u).
Proof. exact (fun_ext (fun x : A => @lem3548574 A s u x)). Qed.
Lemma lem3548578 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem3548579 {A : Type'} (s : A -> Prop) (u : A -> Prop) : (term197 A s u) = (term219 A s u).
Proof. exact (MK_COMB (@lem3548578 A) (@lem3548577 A s u)). Qed.
Lemma lem3548584 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem3548585 {A : Type'} (s : A -> Prop) (u : A -> Prop) : (term198 A s u) = (term220 A s u).
Proof. exact (MK_COMB (@lem3548584) (@lem3548579 A s u)). Qed.
Lemma lem3548593 {A : Type'} (s : A -> Prop) (x : A) (y : A) : (term1819 A x s y) = (term1820 A s x y).
Proof. exact (EQ_MP (@lem3211684 A s x y) (@lem3211683 A s x y)). Qed.
Lemma lem3548594 {A : Type'} (s : type686 A) (x : A -> Prop) (y : A -> Prop) : (term1930 A x s y) = (term5039 A s x y).
Proof. exact (@lem3548593 (A -> Prop) s x y). Qed.
Lemma lem3548595 {A : Type'} (g : type686 A) (t : A -> Prop) (s : A -> Prop) : (term1930 A t g s) = (term5039 A g t s).
Proof. exact (@lem3548594 A g t s). Qed.
Lemma lem3548599 {A : Type'} (P : A -> Prop) (x : A) : (@IN A x P) = (P x).
Proof. exact (EQ_MP (@lem3211610 A P x) (@lem3211609 A P x)). Qed.
Lemma lem3548600 {A : Type'} (P : type686 A) (x : A -> Prop) : (@IN (A -> Prop) x P) = (P x).
Proof. exact (@lem3548599 (A -> Prop) P x). Qed.
Lemma lem3548601 {A : Type'} (g : type686 A) (t : A -> Prop) : (@IN (A -> Prop) t g) = (g t).
Proof. exact (@lem3548600 A g t). Qed.
Lemma lem3548602 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem3548603 {A : Type'} (g : type686 A) (t : A -> Prop) : (term4082 A t g) = (term372 A g t).
Proof. exact (MK_COMB (@lem3548602) (@lem3548601 A g t)). Qed.
Lemma lem3548606 {A : Type'} (t : A -> Prop) (s : A -> Prop) : (term5040 A t s) = (term5040 A t s).
Proof. exact (eq_refl (term5040 A t s)). Qed.
Lemma lem3548607 {A : Type'} (g : type686 A) (t : A -> Prop) (s : A -> Prop) : (term5039 A g t s) = (term5041 A g t s).
Proof. exact (MK_COMB (@lem3548603 A g t) (@lem3548606 A t s)). Qed.
Lemma lem3548610 {A : Type'} (g : type686 A) (t : A -> Prop) (s : A -> Prop) : (term1930 A t g s) = (term5041 A g t s).
Proof. exact (TRANS (@lem3548595 A g t s) (@lem3548607 A g t s)). Qed.
Lemma lem3548611 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem3548612 {A : Type'} (g : type686 A) (t : A -> Prop) (s : A -> Prop) : (term4958 A t g s) = (term5050 A g t s).
Proof. exact (MK_COMB (@lem3548611) (@lem3548610 A g t s)). Qed.
Lemma lem3548620 {_83095 : Type'} (p : _83095 -> Prop) (x : _83095) : (term221 _83095 x p) = (p x).
Proof. exact (EQ_MP (@lem3211641 _83095 p x) (@lem3211640 _83095 p x)). Qed.
Lemma lem3548621 {A : Type'} (p : A -> Prop) (x : A) : (term221 A x p) = (p x).
Proof. exact (@lem3548620 A p x). Qed.
Lemma lem3548622 {A B : Type'} (u : A -> Prop) (f : A -> B) (t : A -> Prop) (x : A) : (term5055 A B x u f t) = (term5056 A B u f t x).
Proof. exact (@lem3548621 A (term5057 A B u f t) x). Qed.
Lemma lem3548623 {A B : Type'} (u : A -> Prop) (x : A) (f : A -> B) (t : A -> Prop) : (term5056 A B u f t x) = (term57 A B u x f t).
Proof. exact (eq_refl (term5056 A B u f t x)). Qed.
Lemma lem3548624 {A : Type'} (GEN_PVAR_85 : A) : (@SETSPEC A GEN_PVAR_85) = (@SETSPEC A GEN_PVAR_85).
Proof. exact (eq_refl (@SETSPEC A GEN_PVAR_85)). Qed.
Lemma lem3548625 {A B : Type'} (GEN_PVAR_85 : A) (u : A -> Prop) (x : A) (f : A -> B) (t : A -> Prop) : (term5058 A B GEN_PVAR_85 u f t x) = (term59 A B GEN_PVAR_85 u x f t).
Proof. exact (MK_COMB (@lem3548624 A GEN_PVAR_85) (@lem3548623 A B u x f t)). Qed.
Lemma lem3548626 {A : Type'} (x : A) : x = x.
Proof. exact (eq_refl x). Qed.
Lemma lem3548627 {A B : Type'} (GEN_PVAR_85 : A) (u : A -> Prop) (f : A -> B) (t : A -> Prop) (x : A) : (term5059 A B GEN_PVAR_85 u f t x) = (term61 A B GEN_PVAR_85 u f t x).
Proof. exact (MK_COMB (@lem3548625 A B GEN_PVAR_85 u x f t) (@lem3548626 A x)). Qed.
Lemma lem3548628 {A B : Type'} (GEN_PVAR_85 : A) (u : A -> Prop) (f : A -> B) (t : A -> Prop) : (term5060 A B GEN_PVAR_85 u f t) = (term63 A B GEN_PVAR_85 u f t).
Proof. exact (fun_ext (fun x : A => @lem3548627 A B GEN_PVAR_85 u f t x)). Qed.
Lemma lem3548629 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem3548630 {A B : Type'} (GEN_PVAR_85 : A) (u : A -> Prop) (f : A -> B) (t : A -> Prop) : (term5061 A B GEN_PVAR_85 u f t) = (term65 A B GEN_PVAR_85 u f t).
Proof. exact (MK_COMB (@lem3548629 A) (@lem3548628 A B GEN_PVAR_85 u f t)). Qed.
Lemma lem3548631 {A B : Type'} (u : A -> Prop) (f : A -> B) (t : A -> Prop) : (term5062 A B u f t) = (term67 A B u f t).
Proof. exact (fun_ext (fun GEN_PVAR_85 : A => @lem3548630 A B GEN_PVAR_85 u f t)). Qed.
Lemma lem3548632 {A : Type'} : (@GSPEC A) = (@GSPEC A).
Proof. exact (eq_refl (@GSPEC A)). Qed.
Lemma lem3548633 {A B : Type'} (u : A -> Prop) (f : A -> B) (t : A -> Prop) : (term5063 A B u f t) = (term69 A B u f t).
Proof. exact (MK_COMB (@lem3548632 A) (@lem3548631 A B u f t)). Qed.
Lemma lem3548634 {A : Type'} (x : A) : (@IN A x) = (@IN A x).
Proof. exact (eq_refl (@IN A x)). Qed.
Lemma lem3548635 {A B : Type'} (x : A) (u : A -> Prop) (f : A -> B) (t : A -> Prop) : (term5055 A B x u f t) = (term5064 A B x u f t).
Proof. exact (MK_COMB (@lem3548634 A x) (@lem3548633 A B u f t)). Qed.
Lemma lem3548636 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem3548637 {A B : Type'} (x : A) (u : A -> Prop) (f : A -> B) (t : A -> Prop) : (term5065 A B x u f t) = (term5066 A B x u f t).
Proof. exact (MK_COMB (@lem3548636) (@lem3548635 A B x u f t)). Qed.
Lemma lem3548638 {A B : Type'} (u : A -> Prop) (x : A) (f : A -> B) (t : A -> Prop) : (term5056 A B u f t x) = (term57 A B u x f t).
Proof. exact (eq_refl (term5056 A B u f t x)). Qed.
Lemma lem3548639 {A B : Type'} (u : A -> Prop) (x : A) (f : A -> B) (t : A -> Prop) : ((term5055 A B x u f t) = (term5056 A B u f t x)) = ((term5064 A B x u f t) = (term57 A B u x f t)).
Proof. exact (MK_COMB (@lem3548637 A B x u f t) (@lem3548638 A B u x f t)). Qed.
Lemma lem3548640 {A B : Type'} (u : A -> Prop) (x : A) (f : A -> B) (t : A -> Prop) : (term5064 A B x u f t) = (term57 A B u x f t).
Proof. exact (EQ_MP (@lem3548639 A B u x f t) (@lem3548622 A B u f t x)). Qed.
Lemma lem3548644 {A : Type'} (P : A -> Prop) (x : A) : (@IN A x P) = (P x).
Proof. exact (EQ_MP (@lem3211610 A P x) (@lem3211609 A P x)). Qed.
Lemma lem3548645 {A : Type'} (P : A -> Prop) (x : A) : (@IN A x P) = (P x).
Proof. exact (@lem3548644 A P x). Qed.
Lemma lem3548646 {A : Type'} (u : A -> Prop) (x : A) : (@IN A x u) = (u x).
Proof. exact (@lem3548645 A u x). Qed.
Lemma lem3548647 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem3548648 {A : Type'} (u : A -> Prop) (x : A) : (term56 A x u) = (term234 A u x).
Proof. exact (MK_COMB (@lem3548647) (@lem3548646 A u x)). Qed.
Lemma lem3548650 {A B : Type'} (y : B) (f : A -> B) (s : A -> Prop) : (term27 A B y f s) = (term28 A B y f s).
Proof. exact (EQ_MP (@lem3211657 A B y f s) (@lem3211656 A B y s f)). Qed.
Lemma lem3548651 {A B : Type'} (y : B) (f : A -> B) (s : A -> Prop) : (term27 A B y f s) = (term28 A B y f s).
Proof. exact (@lem3548650 A B y f s). Qed.
Lemma lem3548652 {A B : Type'} (x : A) (f : A -> B) (t : A -> Prop) : (term54 A B x f t) = (term55 A B x f t).
Proof. exact (@lem3548651 A B (f x) f t). Qed.
Lemma lem3548662 {A : Type'} (P : A -> Prop) (x : A) : (@IN A x P) = (P x).
Proof. exact (EQ_MP (@lem3211610 A P x) (@lem3211609 A P x)). Qed.
Lemma lem3548663 {A : Type'} (P : A -> Prop) (x : A) : (@IN A x P) = (P x).
Proof. exact (@lem3548662 A P x). Qed.
Lemma lem3548664 {A : Type'} (t : A -> Prop) (x' : A) : (@IN A x' t) = (t x').
Proof. exact (@lem3548663 A t x'). Qed.
Lemma lem3548665 {A B : Type'} (x : A) (f : A -> B) (x' : A) : (term235 A B x f x') = (term235 A B x f x').
Proof. exact (eq_refl (term235 A B x f x')). Qed.
Lemma lem3548666 {A B : Type'} (x : A) (f : A -> B) (t : A -> Prop) (x' : A) : (term236 A B x f x' t) = (term237 A B x f t x').
Proof. exact (MK_COMB (@lem3548665 A B x f x') (@lem3548664 A t x')). Qed.
Lemma lem3548669 {A B : Type'} (x : A) (f : A -> B) (t : A -> Prop) : (term238 A B x f t) = (term239 A B x f t).
Proof. exact (fun_ext (fun x' : A => @lem3548666 A B x f t x')). Qed.
Lemma lem3548670 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem3548671 {A B : Type'} (x : A) (f : A -> B) (t : A -> Prop) : (term55 A B x f t) = (term240 A B x f t).
Proof. exact (MK_COMB (@lem3548670 A) (@lem3548669 A B x f t)). Qed.
Lemma lem3548676 {A B : Type'} (x : A) (f : A -> B) (t : A -> Prop) : (term54 A B x f t) = (term240 A B x f t).
Proof. exact (TRANS (@lem3548652 A B x f t) (@lem3548671 A B x f t)). Qed.
Lemma lem3548677 {A B : Type'} (u : A -> Prop) (x : A) (f : A -> B) (t : A -> Prop) : (term57 A B u x f t) = (term241 A B u x f t).
Proof. exact (MK_COMB (@lem3548648 A u x) (@lem3548676 A B x f t)). Qed.
Lemma lem3548680 {A B : Type'} (u : A -> Prop) (x : A) (f : A -> B) (t : A -> Prop) : (term5064 A B x u f t) = (term241 A B u x f t).
Proof. exact (TRANS (@lem3548640 A B u x f t) (@lem3548677 A B u x f t)). Qed.
Lemma lem3548681 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem3548682 {A B : Type'} (u : A -> Prop) (x : A) (f : A -> B) (t : A -> Prop) : (term5067 A B x u f t) = (term243 A B u x f t).
Proof. exact (MK_COMB (@lem3548681) (@lem3548680 A B u x f t)). Qed.
Lemma lem3548684 {A : Type'} (P : A -> Prop) (x : A) : (@IN A x P) = (P x).
Proof. exact (EQ_MP (@lem3211610 A P x) (@lem3211609 A P x)). Qed.
Lemma lem3548685 {A : Type'} (P : A -> Prop) (x : A) : (@IN A x P) = (P x).
Proof. exact (@lem3548684 A P x). Qed.
Lemma lem3548686 {A : Type'} (t : A -> Prop) (x : A) : (@IN A x t) = (t x).
Proof. exact (@lem3548685 A t x). Qed.
Lemma lem3548687 {A B : Type'} (u : A -> Prop) (f : A -> B) (t : A -> Prop) (x : A) : (term5068 A B u f x t) = (term245 A B u f t x).
Proof. exact (MK_COMB (@lem3548682 A B u x f t) (@lem3548686 A t x)). Qed.
Lemma lem3548690 {A B : Type'} (u : A -> Prop) (f : A -> B) (t : A -> Prop) : (term5069 A B u f t) = (term247 A B u f t).
Proof. exact (fun_ext (fun x : A => @lem3548687 A B u f t x)). Qed.
Lemma lem3548691 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem3548692 {A B : Type'} (u : A -> Prop) (f : A -> B) (t : A -> Prop) : (term5011 A B u f t) = (term248 A B u f t).
Proof. exact (MK_COMB (@lem3548691 A) (@lem3548690 A B u f t)). Qed.
Lemma lem3548697 {A B : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) (t : A -> Prop) : (term5012 A B g s u f t) = (term5070 A B g s u f t).
Proof. exact (MK_COMB (@lem3548612 A g t s) (@lem3548692 A B u f t)). Qed.
Lemma lem3548700 {A B : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) : (term5013 A B g s u f) = (term5071 A B g s u f).
Proof. exact (fun_ext (fun t : A -> Prop => @lem3548697 A B g s u f t)). Qed.
Lemma lem3548701 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem3548702 {A B : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) : (term5014 A B g s u f) = (term5072 A B g s u f).
Proof. exact (MK_COMB (@lem3548701 A) (@lem3548700 A B g s u f)). Qed.
Lemma lem3548707 {A B : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) : (term5015 A B g s u f) = (term5073 A B g s u f).
Proof. exact (MK_COMB (@lem3548585 A s u) (@lem3548702 A B g s u f)). Qed.
Lemma lem3548710 {A B : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) : (term5016 A B g s u f) = (term5074 A B g s u f).
Proof. exact (MK_COMB (@lem3548555 A g s u) (@lem3548707 A B g s u f)). Qed.
Lemma lem3548713 {A B : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) : (term5017 A B g s u f) = (term5075 A B g s u f).
Proof. exact (MK_COMB (@lem3548488 A g s) (@lem3548710 A B g s u f)). Qed.
Lemma lem3548716 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem3548717 {A B : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) : (term5019 A B g s u f) = (term5076 A B g s u f).
Proof. exact (MK_COMB (@lem3548716) (@lem3548713 A B g s u f)). Qed.
Lemma lem3548727 {A : Type'} (s : A -> Prop) (x : A) (y : A) : (term1819 A x s y) = (term1820 A s x y).
Proof. exact (EQ_MP (@lem3211684 A s x y) (@lem3211683 A s x y)). Qed.
Lemma lem3548728 {A : Type'} (s : type686 A) (x : A -> Prop) (y : A -> Prop) : (term1930 A x s y) = (term5039 A s x y).
Proof. exact (@lem3548727 (A -> Prop) s x y). Qed.
Lemma lem3548729 {A : Type'} (g : type686 A) (x : A -> Prop) (s : A -> Prop) : (term1930 A x g s) = (term5039 A g x s).
Proof. exact (@lem3548728 A g x s). Qed.
Lemma lem3548733 {A : Type'} (P : A -> Prop) (x : A) : (@IN A x P) = (P x).
Proof. exact (EQ_MP (@lem3211610 A P x) (@lem3211609 A P x)). Qed.
Lemma lem3548734 {A : Type'} (P : type686 A) (x : A -> Prop) : (@IN (A -> Prop) x P) = (P x).
Proof. exact (@lem3548733 (A -> Prop) P x). Qed.
Lemma lem3548735 {A : Type'} (g : type686 A) (x : A -> Prop) : (@IN (A -> Prop) x g) = (g x).
Proof. exact (@lem3548734 A g x). Qed.
Lemma lem3548736 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem3548737 {A : Type'} (g : type686 A) (x : A -> Prop) : (term4082 A x g) = (term372 A g x).
Proof. exact (MK_COMB (@lem3548736) (@lem3548735 A g x)). Qed.
Lemma lem3548740 {A : Type'} (x : A -> Prop) (s : A -> Prop) : (term5040 A x s) = (term5040 A x s).
Proof. exact (eq_refl (term5040 A x s)). Qed.
Lemma lem3548741 {A : Type'} (g : type686 A) (x : A -> Prop) (s : A -> Prop) : (term5039 A g x s) = (term5041 A g x s).
Proof. exact (MK_COMB (@lem3548737 A g x) (@lem3548740 A x s)). Qed.
Lemma lem3548744 {A : Type'} (g : type686 A) (x : A -> Prop) (s : A -> Prop) : (term1930 A x g s) = (term5041 A g x s).
Proof. exact (TRANS (@lem3548729 A g x s) (@lem3548741 A g x s)). Qed.
Lemma lem3548745 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem3548746 {A : Type'} (g : type686 A) (x : A -> Prop) (s : A -> Prop) : (term5042 A x g s) = (term5043 A g x s).
Proof. exact (MK_COMB (@lem3548745) (@lem3548744 A g x s)). Qed.
Lemma lem3548748 {A : Type'} (x : A) : (@IN A x (@EMPTY A)) = False.
Proof. exact (@lem3211730 A x (@lem3211729 A x)). Qed.
Lemma lem3548749 {A : Type'} (x : A -> Prop) : (@IN (A -> Prop) x (@EMPTY (A -> Prop))) = False.
Proof. exact (@lem3548748 (A -> Prop) x). Qed.
Lemma lem3548750 {A : Type'} (g : type686 A) (x : A -> Prop) (s : A -> Prop) : ((term1930 A x g s) = (@IN (A -> Prop) x (@EMPTY (A -> Prop)))) = ((term5041 A g x s) = False).
Proof. exact (MK_COMB (@lem3548746 A g x s) (@lem3548749 A x)). Qed.
Lemma lem3548752 (t : Prop) : (t = False) = (~ t).
Proof. exact (proj2 (@lem1857 t)). Qed.
Lemma lem3548753 {A : Type'} (g : type686 A) (x : A -> Prop) (s : A -> Prop) : ((term5041 A g x s) = False) = (term5044 A g x s).
Proof. exact (@lem3548752 (term5041 A g x s)). Qed.
Lemma lem3548758 {A : Type'} (g : type686 A) (x : A -> Prop) (s : A -> Prop) : ((term1930 A x g s) = (@IN (A -> Prop) x (@EMPTY (A -> Prop)))) = (term5044 A g x s).
Proof. exact (TRANS (@lem3548750 A g x s) (@lem3548753 A g x s)). Qed.
Lemma lem3548759 {A : Type'} (g : type686 A) (s : A -> Prop) : (term5045 A g s) = (term5046 A g s).
Proof. exact (fun_ext (fun x : A -> Prop => @lem3548758 A g x s)). Qed.
Lemma lem3548760 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem3548761 {A : Type'} (g : type686 A) (s : A -> Prop) : (term5002 A g s) = (term5047 A g s).
Proof. exact (MK_COMB (@lem3548760 A) (@lem3548759 A g s)). Qed.
Lemma lem3548766 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem3548767 {A : Type'} (g : type686 A) (s : A -> Prop) : (term5003 A g s) = (term5048 A g s).
Proof. exact (MK_COMB (@lem3548766) (@lem3548761 A g s)). Qed.
Lemma lem3548768 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem3548769 {A : Type'} (g : type686 A) (s : A -> Prop) : (term5005 A g s) = (term5049 A g s).
Proof. exact (MK_COMB (@lem3548768) (@lem3548767 A g s)). Qed.
Lemma lem3548777 {A : Type'} (s : A -> Prop) (x : A) (y : A) : (term1819 A x s y) = (term1820 A s x y).
Proof. exact (EQ_MP (@lem3211684 A s x y) (@lem3211683 A s x y)). Qed.
Lemma lem3548778 {A : Type'} (s : type686 A) (x : A -> Prop) (y : A -> Prop) : (term1930 A x s y) = (term5039 A s x y).
Proof. exact (@lem3548777 (A -> Prop) s x y). Qed.
Lemma lem3548779 {A : Type'} (g : type686 A) (t : A -> Prop) (s : A -> Prop) : (term1930 A t g s) = (term5039 A g t s).
Proof. exact (@lem3548778 A g t s). Qed.
Lemma lem3548783 {A : Type'} (P : A -> Prop) (x : A) : (@IN A x P) = (P x).
Proof. exact (EQ_MP (@lem3211610 A P x) (@lem3211609 A P x)). Qed.
Lemma lem3548784 {A : Type'} (P : type686 A) (x : A -> Prop) : (@IN (A -> Prop) x P) = (P x).
Proof. exact (@lem3548783 (A -> Prop) P x). Qed.
Lemma lem3548785 {A : Type'} (g : type686 A) (t : A -> Prop) : (@IN (A -> Prop) t g) = (g t).
Proof. exact (@lem3548784 A g t). Qed.
Lemma lem3548786 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem3548787 {A : Type'} (g : type686 A) (t : A -> Prop) : (term4082 A t g) = (term372 A g t).
Proof. exact (MK_COMB (@lem3548786) (@lem3548785 A g t)). Qed.
Lemma lem3548790 {A : Type'} (t : A -> Prop) (s : A -> Prop) : (term5040 A t s) = (term5040 A t s).
Proof. exact (eq_refl (term5040 A t s)). Qed.
Lemma lem3548791 {A : Type'} (g : type686 A) (t : A -> Prop) (s : A -> Prop) : (term5039 A g t s) = (term5041 A g t s).
Proof. exact (MK_COMB (@lem3548787 A g t) (@lem3548790 A t s)). Qed.
Lemma lem3548794 {A : Type'} (g : type686 A) (t : A -> Prop) (s : A -> Prop) : (term1930 A t g s) = (term5041 A g t s).
Proof. exact (TRANS (@lem3548779 A g t s) (@lem3548791 A g t s)). Qed.
Lemma lem3548795 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem3548796 {A : Type'} (g : type686 A) (t : A -> Prop) (s : A -> Prop) : (term4958 A t g s) = (term5050 A g t s).
Proof. exact (MK_COMB (@lem3548795) (@lem3548794 A g t s)). Qed.
Lemma lem3548806 {A : Type'} (P : A -> Prop) (x : A) : (@IN A x P) = (P x).
Proof. exact (EQ_MP (@lem3211610 A P x) (@lem3211609 A P x)). Qed.
Lemma lem3548807 {A : Type'} (P : A -> Prop) (x : A) : (@IN A x P) = (P x).
Proof. exact (@lem3548806 A P x). Qed.
Lemma lem3548808 {A : Type'} (t : A -> Prop) (x : A) : (@IN A x t) = (t x).
Proof. exact (@lem3548807 A t x). Qed.
Lemma lem3548809 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem3548810 {A : Type'} (t : A -> Prop) (x : A) : (term213 A x t) = (term214 A t x).
Proof. exact (MK_COMB (@lem3548809) (@lem3548808 A t x)). Qed.
Lemma lem3548812 {A : Type'} (P : A -> Prop) (x : A) : (@IN A x P) = (P x).
Proof. exact (EQ_MP (@lem3211610 A P x) (@lem3211609 A P x)). Qed.
Lemma lem3548813 {A : Type'} (P : A -> Prop) (x : A) : (@IN A x P) = (P x).
Proof. exact (@lem3548812 A P x). Qed.
Lemma lem3548814 {A : Type'} (u : A -> Prop) (x : A) : (@IN A x u) = (u x).
Proof. exact (@lem3548813 A u x). Qed.
Lemma lem3548815 {A : Type'} (t : A -> Prop) (u : A -> Prop) (x : A) : (term215 A t x u) = (term216 A t u x).
Proof. exact (MK_COMB (@lem3548810 A t x) (@lem3548814 A u x)). Qed.
Lemma lem3548818 {A : Type'} (t : A -> Prop) (u : A -> Prop) : (term217 A t u) = (term218 A t u).
Proof. exact (fun_ext (fun x : A => @lem3548815 A t u x)). Qed.
Lemma lem3548819 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem3548820 {A : Type'} (t : A -> Prop) (u : A -> Prop) : (term197 A t u) = (term219 A t u).
Proof. exact (MK_COMB (@lem3548819 A) (@lem3548818 A t u)). Qed.
Lemma lem3548825 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem3548826 {A : Type'} (t : A -> Prop) (u : A -> Prop) : (term198 A t u) = (term220 A t u).
Proof. exact (MK_COMB (@lem3548825) (@lem3548820 A t u)). Qed.
Lemma lem3548834 {_83095 : Type'} (p : _83095 -> Prop) (x : _83095) : (term221 _83095 x p) = (p x).
Proof. exact (EQ_MP (@lem3211641 _83095 p x) (@lem3211640 _83095 p x)). Qed.
Lemma lem3548835 {A : Type'} (p : A -> Prop) (x : A) : (term221 A x p) = (p x).
Proof. exact (@lem3548834 A p x). Qed.
Lemma lem3548836 {A B : Type'} (u : A -> Prop) (f : A -> B) (t : A -> Prop) (x : A) : (term5055 A B x u f t) = (term5056 A B u f t x).
Proof. exact (@lem3548835 A (term5057 A B u f t) x). Qed.
Lemma lem3548837 {A B : Type'} (u : A -> Prop) (x : A) (f : A -> B) (t : A -> Prop) : (term5056 A B u f t x) = (term57 A B u x f t).
Proof. exact (eq_refl (term5056 A B u f t x)). Qed.
Lemma lem3548838 {A : Type'} (GEN_PVAR_84 : A) : (@SETSPEC A GEN_PVAR_84) = (@SETSPEC A GEN_PVAR_84).
Proof. exact (eq_refl (@SETSPEC A GEN_PVAR_84)). Qed.
Lemma lem3548839 {A B : Type'} (GEN_PVAR_84 : A) (u : A -> Prop) (x : A) (f : A -> B) (t : A -> Prop) : (term5058 A B GEN_PVAR_84 u f t x) = (term59 A B GEN_PVAR_84 u x f t).
Proof. exact (MK_COMB (@lem3548838 A GEN_PVAR_84) (@lem3548837 A B u x f t)). Qed.
Lemma lem3548840 {A : Type'} (x : A) : x = x.
Proof. exact (eq_refl x). Qed.
Lemma lem3548841 {A B : Type'} (GEN_PVAR_84 : A) (u : A -> Prop) (f : A -> B) (t : A -> Prop) (x : A) : (term5059 A B GEN_PVAR_84 u f t x) = (term61 A B GEN_PVAR_84 u f t x).
Proof. exact (MK_COMB (@lem3548839 A B GEN_PVAR_84 u x f t) (@lem3548840 A x)). Qed.
Lemma lem3548842 {A B : Type'} (GEN_PVAR_84 : A) (u : A -> Prop) (f : A -> B) (t : A -> Prop) : (term5060 A B GEN_PVAR_84 u f t) = (term63 A B GEN_PVAR_84 u f t).
Proof. exact (fun_ext (fun x : A => @lem3548841 A B GEN_PVAR_84 u f t x)). Qed.
Lemma lem3548843 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem3548844 {A B : Type'} (GEN_PVAR_84 : A) (u : A -> Prop) (f : A -> B) (t : A -> Prop) : (term5061 A B GEN_PVAR_84 u f t) = (term65 A B GEN_PVAR_84 u f t).
Proof. exact (MK_COMB (@lem3548843 A) (@lem3548842 A B GEN_PVAR_84 u f t)). Qed.
Lemma lem3548845 {A B : Type'} (u : A -> Prop) (f : A -> B) (t : A -> Prop) : (term5062 A B u f t) = (term67 A B u f t).
Proof. exact (fun_ext (fun GEN_PVAR_84 : A => @lem3548844 A B GEN_PVAR_84 u f t)). Qed.
Lemma lem3548846 {A : Type'} : (@GSPEC A) = (@GSPEC A).
Proof. exact (eq_refl (@GSPEC A)). Qed.
Lemma lem3548847 {A B : Type'} (u : A -> Prop) (f : A -> B) (t : A -> Prop) : (term5063 A B u f t) = (term69 A B u f t).
Proof. exact (MK_COMB (@lem3548846 A) (@lem3548845 A B u f t)). Qed.
Lemma lem3548848 {A : Type'} (x : A) : (@IN A x) = (@IN A x).
Proof. exact (eq_refl (@IN A x)). Qed.
Lemma lem3548849 {A B : Type'} (x : A) (u : A -> Prop) (f : A -> B) (t : A -> Prop) : (term5055 A B x u f t) = (term5064 A B x u f t).
Proof. exact (MK_COMB (@lem3548848 A x) (@lem3548847 A B u f t)). Qed.
Lemma lem3548850 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem3548851 {A B : Type'} (x : A) (u : A -> Prop) (f : A -> B) (t : A -> Prop) : (term5065 A B x u f t) = (term5066 A B x u f t).
Proof. exact (MK_COMB (@lem3548850) (@lem3548849 A B x u f t)). Qed.
Lemma lem3548852 {A B : Type'} (u : A -> Prop) (x : A) (f : A -> B) (t : A -> Prop) : (term5056 A B u f t x) = (term57 A B u x f t).
Proof. exact (eq_refl (term5056 A B u f t x)). Qed.
Lemma lem3548853 {A B : Type'} (u : A -> Prop) (x : A) (f : A -> B) (t : A -> Prop) : ((term5055 A B x u f t) = (term5056 A B u f t x)) = ((term5064 A B x u f t) = (term57 A B u x f t)).
Proof. exact (MK_COMB (@lem3548851 A B x u f t) (@lem3548852 A B u x f t)). Qed.
Lemma lem3548854 {A B : Type'} (u : A -> Prop) (x : A) (f : A -> B) (t : A -> Prop) : (term5064 A B x u f t) = (term57 A B u x f t).
Proof. exact (EQ_MP (@lem3548853 A B u x f t) (@lem3548836 A B u f t x)). Qed.
Lemma lem3548858 {A : Type'} (P : A -> Prop) (x : A) : (@IN A x P) = (P x).
Proof. exact (EQ_MP (@lem3211610 A P x) (@lem3211609 A P x)). Qed.
Lemma lem3548859 {A : Type'} (P : A -> Prop) (x : A) : (@IN A x P) = (P x).
Proof. exact (@lem3548858 A P x). Qed.
Lemma lem3548860 {A : Type'} (u : A -> Prop) (x : A) : (@IN A x u) = (u x).
Proof. exact (@lem3548859 A u x). Qed.
Lemma lem3548861 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem3548862 {A : Type'} (u : A -> Prop) (x : A) : (term56 A x u) = (term234 A u x).
Proof. exact (MK_COMB (@lem3548861) (@lem3548860 A u x)). Qed.
Lemma lem3548864 {A B : Type'} (y : B) (f : A -> B) (s : A -> Prop) : (term27 A B y f s) = (term28 A B y f s).
Proof. exact (EQ_MP (@lem3211657 A B y f s) (@lem3211656 A B y s f)). Qed.
Lemma lem3548865 {A B : Type'} (y : B) (f : A -> B) (s : A -> Prop) : (term27 A B y f s) = (term28 A B y f s).
Proof. exact (@lem3548864 A B y f s). Qed.
Lemma lem3548866 {A B : Type'} (x : A) (f : A -> B) (t : A -> Prop) : (term54 A B x f t) = (term55 A B x f t).
Proof. exact (@lem3548865 A B (f x) f t). Qed.
Lemma lem3548876 {A : Type'} (P : A -> Prop) (x : A) : (@IN A x P) = (P x).
Proof. exact (EQ_MP (@lem3211610 A P x) (@lem3211609 A P x)). Qed.
Lemma lem3548877 {A : Type'} (P : A -> Prop) (x : A) : (@IN A x P) = (P x).
Proof. exact (@lem3548876 A P x). Qed.
Lemma lem3548878 {A : Type'} (t : A -> Prop) (x' : A) : (@IN A x' t) = (t x').
Proof. exact (@lem3548877 A t x'). Qed.
Lemma lem3548879 {A B : Type'} (x : A) (f : A -> B) (x' : A) : (term235 A B x f x') = (term235 A B x f x').
Proof. exact (eq_refl (term235 A B x f x')). Qed.
Lemma lem3548880 {A B : Type'} (x : A) (f : A -> B) (t : A -> Prop) (x' : A) : (term236 A B x f x' t) = (term237 A B x f t x').
Proof. exact (MK_COMB (@lem3548879 A B x f x') (@lem3548878 A t x')). Qed.
Lemma lem3548883 {A B : Type'} (x : A) (f : A -> B) (t : A -> Prop) : (term238 A B x f t) = (term239 A B x f t).
Proof. exact (fun_ext (fun x' : A => @lem3548880 A B x f t x')). Qed.
Lemma lem3548884 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem3548885 {A B : Type'} (x : A) (f : A -> B) (t : A -> Prop) : (term55 A B x f t) = (term240 A B x f t).
Proof. exact (MK_COMB (@lem3548884 A) (@lem3548883 A B x f t)). Qed.
Lemma lem3548890 {A B : Type'} (x : A) (f : A -> B) (t : A -> Prop) : (term54 A B x f t) = (term240 A B x f t).
Proof. exact (TRANS (@lem3548866 A B x f t) (@lem3548885 A B x f t)). Qed.
Lemma lem3548891 {A B : Type'} (u : A -> Prop) (x : A) (f : A -> B) (t : A -> Prop) : (term57 A B u x f t) = (term241 A B u x f t).
Proof. exact (MK_COMB (@lem3548862 A u x) (@lem3548890 A B x f t)). Qed.
Lemma lem3548894 {A B : Type'} (u : A -> Prop) (x : A) (f : A -> B) (t : A -> Prop) : (term5064 A B x u f t) = (term241 A B u x f t).
Proof. exact (TRANS (@lem3548854 A B u x f t) (@lem3548891 A B u x f t)). Qed.
Lemma lem3548895 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem3548896 {A B : Type'} (u : A -> Prop) (x : A) (f : A -> B) (t : A -> Prop) : (term5067 A B x u f t) = (term243 A B u x f t).
Proof. exact (MK_COMB (@lem3548895) (@lem3548894 A B u x f t)). Qed.
Lemma lem3548898 {A : Type'} (P : A -> Prop) (x : A) : (@IN A x P) = (P x).
Proof. exact (EQ_MP (@lem3211610 A P x) (@lem3211609 A P x)). Qed.
Lemma lem3548899 {A : Type'} (P : A -> Prop) (x : A) : (@IN A x P) = (P x).
Proof. exact (@lem3548898 A P x). Qed.
Lemma lem3548900 {A : Type'} (t : A -> Prop) (x : A) : (@IN A x t) = (t x).
Proof. exact (@lem3548899 A t x). Qed.
Lemma lem3548901 {A B : Type'} (u : A -> Prop) (f : A -> B) (t : A -> Prop) (x : A) : (term5068 A B u f x t) = (term245 A B u f t x).
Proof. exact (MK_COMB (@lem3548896 A B u x f t) (@lem3548900 A t x)). Qed.
Lemma lem3548904 {A B : Type'} (u : A -> Prop) (f : A -> B) (t : A -> Prop) : (term5069 A B u f t) = (term247 A B u f t).
Proof. exact (fun_ext (fun x : A => @lem3548901 A B u f t x)). Qed.
Lemma lem3548905 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem3548906 {A B : Type'} (u : A -> Prop) (f : A -> B) (t : A -> Prop) : (term5011 A B u f t) = (term248 A B u f t).
Proof. exact (MK_COMB (@lem3548905 A) (@lem3548904 A B u f t)). Qed.
Lemma lem3548911 {A B : Type'} (u : A -> Prop) (f : A -> B) (t : A -> Prop) : (term5700 A B u f t) = (term249 A B u f t).
Proof. exact (MK_COMB (@lem3548826 A t u) (@lem3548906 A B u f t)). Qed.
Lemma lem3548914 {A B : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) (t : A -> Prop) : (term5702 A B g s u f t) = (term5711 A B g s u f t).
Proof. exact (MK_COMB (@lem3548796 A g t s) (@lem3548911 A B u f t)). Qed.
Lemma lem3548917 {A B : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) : (term5704 A B g s u f) = (term5712 A B g s u f).
Proof. exact (fun_ext (fun t : A -> Prop => @lem3548914 A B g s u f t)). Qed.
Lemma lem3548918 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem3548919 {A B : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) : (term5706 A B g s u f) = (term5713 A B g s u f).
Proof. exact (MK_COMB (@lem3548918 A) (@lem3548917 A B g s u f)). Qed.
Lemma lem3548924 {A B : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) : (term5708 A B g s u f) = (term5714 A B g s u f).
Proof. exact (MK_COMB (@lem3548769 A g s) (@lem3548919 A B g s u f)). Qed.
Lemma lem3548927 {A B : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) : (term5710 A B g s u f) = (term5715 A B g s u f).
Proof. exact (MK_COMB (@lem3548717 A B g s u f) (@lem3548924 A B g s u f)). Qed.
Lemma lem3548930 {A B : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) : (term5715 A B g s u f) = (term5710 A B g s u f).
Proof. exact (SYM (@lem3548927 A B g s u f)). Qed.
Lemma lem3548932 (p : Prop) : p = (term275 p).
Proof. exact (EQ_MP (@lem10578 p) (@lem10597 p)). Qed.
Lemma lem3548933 {A B : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) : (term5715 A B g s u f) = (term5716 A B g s u f).
Proof. exact (@lem3548932 (term5715 A B g s u f)). Qed.
Lemma lem3548934 {A B : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) : (term5716 A B g s u f) = (term5715 A B g s u f).
Proof. exact (SYM (@lem3548933 A B g s u f)). Qed.
Lemma lem3548935 {A B : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) (h1 : term5717 A B g s u f) : term5717 A B g s u f.
Proof. exact (h1). Qed.
Lemma lem3548938 {A B : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) (h1 : term5716 A B g s u f) : term5716 A B g s u f.
Proof. exact (h1). Qed.
Lemma lem3548939 {A B : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) : term5718 A B g s u f.
Proof. exact (fun h0 : term5716 A B g s u f => @lem3548938 A B g s u f h0). Qed.
Lemma lem3548940 {A B : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) (h1 : term5718 A B g s u f) : term5718 A B g s u f.
Proof. exact (h1). Qed.
Lemma lem3548941 {A B : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) (h1 : term5716 A B g s u f) : term5716 A B g s u f.
Proof. exact (h1). Qed.
Lemma lem3548942 {A B : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) (h1 : term5716 A B g s u f) (h2 : term5718 A B g s u f) : term5716 A B g s u f.
Proof. exact (@lem3548940 A B g s u f h2 (@lem3548941 A B g s u f h1)). Qed.
Lemma lem3548943 {A B : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) (h1 : term5716 A B g s u f) : term5719 A B g s u f.
Proof. exact (fun h0 : term5718 A B g s u f => @lem3548942 A B g s u f h1 h0). Qed.
Lemma lem3548944 {A B : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) (h1 : term5718 A B g s u f) : term5718 A B g s u f.
Proof. exact (h1). Qed.
Lemma lem3548945 {A B : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) (h1 : term5716 A B g s u f) (h2 : term5718 A B g s u f) : term5716 A B g s u f.
Proof. exact (@lem3548943 A B g s u f h1 (@lem3548944 A B g s u f h2)). Qed.
Lemma lem3548946 {A B : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) (h1 : term5718 A B g s u f) : term5718 A B g s u f.
Proof. exact (fun h0 : term5716 A B g s u f => @lem3548945 A B g s u f h0 h1). Qed.
Lemma lem3548947 {A B : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) : term5720 A B g s u f.
Proof. exact (fun h0 : term5718 A B g s u f => @lem3548946 A B g s u f h0). Qed.
Lemma lem3548950 {A B : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) : term5718 A B g s u f.
Proof. exact (@lem3548947 A B g s u f (@lem3548939 A B g s u f)). Qed.
Lemma lem3548951 {A B : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) : term5718 A B g s u f.
Proof. exact (@lem3548950 A B g s u f). Qed.
Lemma lem3548969 (t : Prop) : (t -> False) = (~ t).
Proof. exact (proj2 (@lem16474 t)). Qed.
Lemma lem3548970 {A B : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) : (term5716 A B g s u f) = (term5721 A B g s u f).
Proof. exact (@lem3548969 (term5717 A B g s u f)). Qed.
Lemma lem3548972 (t : Prop) : (term282 t) = t.
Proof. exact (EQ_MP (@lem16507 t) (@lem16506 t)). Qed.
Lemma lem3548973 {A B : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) : (term5721 A B g s u f) = (term5715 A B g s u f).
Proof. exact (@lem3548972 (term5715 A B g s u f)). Qed.
Lemma lem3548976 {A B : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) : (term5716 A B g s u f) = (term5715 A B g s u f).
Proof. exact (TRANS (@lem3548970 A B g s u f) (@lem3548973 A B g s u f)). Qed.
Lemma lem3549125 {A B : Type'} (s : A -> Prop) (u : A -> Prop) (f : A -> B) : (term5722 A B s u f) = (term5723 A B s u f).
Proof. exact (fun_ext (fun g : type686 A => @lem3548976 A B g s u f)). Qed.
Lemma lem3549126 {A : Type'} : (@all ((A -> Prop) -> Prop)) = (@all ((A -> Prop) -> Prop)).
Proof. exact (eq_refl (@all ((A -> Prop) -> Prop))). Qed.
Lemma lem3549127 {A B : Type'} (s : A -> Prop) (u : A -> Prop) (f : A -> B) : (term5724 A B s u f) = (term5725 A B s u f).
Proof. exact (MK_COMB (@lem3549126 A) (@lem3549125 A B s u f)). Qed.
Lemma lem3549132 {A B : Type'} (u : A -> Prop) (f : A -> B) : (term5726 A B u f) = (term5727 A B u f).
Proof. exact (fun_ext (fun s : A -> Prop => @lem3549127 A B s u f)). Qed.
Lemma lem3549133 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem3549134 {A B : Type'} (u : A -> Prop) (f : A -> B) : (term5728 A B u f) = (term5729 A B u f).
Proof. exact (MK_COMB (@lem3549133 A) (@lem3549132 A B u f)). Qed.
Lemma lem3549139 {A B : Type'} (f : A -> B) : (term5730 A B f) = (term5731 A B f).
Proof. exact (fun_ext (fun u : A -> Prop => @lem3549134 A B u f)). Qed.
Lemma lem3549140 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem3549141 {A B : Type'} (f : A -> B) : (term5732 A B f) = (term5733 A B f).
Proof. exact (MK_COMB (@lem3549140 A) (@lem3549139 A B f)). Qed.
Lemma lem3549146 {A B : Type'} : (term5734 A B) = (term5735 A B).
Proof. exact (fun_ext (fun f : A -> B => @lem3549141 A B f)). Qed.
Lemma lem3549147 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem3549156 {A B : Type'} : (term5736 A B) = (term5737 A B).
Proof. exact (MK_COMB (@lem3549147 A B) (@lem3549146 A B)). Qed.
Lemma lem3549157 {A : Type'} (t : A -> Prop) (x : A) : (t x) = (t x).
Proof. exact (eq_refl (t x)). Qed.
Lemma lem3549162 {A B : Type'} (x : A) (f : A -> B) (t : A -> Prop) (x' : A) : (term237 A B x f t x') = (term237 A B x f t x').
Proof. exact (eq_refl (term237 A B x f t x')). Qed.
Lemma lem3549163 {A B : Type'} (x : A) (f : A -> B) (t : A -> Prop) : (term239 A B x f t) = (term239 A B x f t).
Proof. exact (fun_ext (fun x' : A => @lem3549162 A B x f t x')). Qed.
Lemma lem3549164 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem3549165 {A B : Type'} (x : A) (f : A -> B) (t : A -> Prop) : (term240 A B x f t) = (term240 A B x f t).
Proof. exact (MK_COMB (@lem3549164 A) (@lem3549163 A B x f t)). Qed.
Lemma lem3549168 {A : Type'} (u : A -> Prop) (x : A) : (term234 A u x) = (term234 A u x).
Proof. exact (eq_refl (term234 A u x)). Qed.
Lemma lem3549169 {A B : Type'} (u : A -> Prop) (x : A) (f : A -> B) (t : A -> Prop) : (term241 A B u x f t) = (term241 A B u x f t).
Proof. exact (MK_COMB (@lem3549168 A u x) (@lem3549165 A B x f t)). Qed.
Lemma lem3549170 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem3549171 {A B : Type'} (u : A -> Prop) (x : A) (f : A -> B) (t : A -> Prop) : (term243 A B u x f t) = (term243 A B u x f t).
Proof. exact (MK_COMB (@lem3549170) (@lem3549169 A B u x f t)). Qed.
Lemma lem3549172 {A B : Type'} (u : A -> Prop) (f : A -> B) (t : A -> Prop) (x : A) : (term245 A B u f t x) = (term245 A B u f t x).
Proof. exact (MK_COMB (@lem3549171 A B u x f t) (@lem3549157 A t x)). Qed.
Lemma lem3549173 {A B : Type'} (u : A -> Prop) (f : A -> B) (t : A -> Prop) : (term247 A B u f t) = (term247 A B u f t).
Proof. exact (fun_ext (fun x : A => @lem3549172 A B u f t x)). Qed.
Lemma lem3549174 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem3549175 {A B : Type'} (u : A -> Prop) (f : A -> B) (t : A -> Prop) : (term248 A B u f t) = (term248 A B u f t).
Proof. exact (MK_COMB (@lem3549174 A) (@lem3549173 A B u f t)). Qed.
Lemma lem3549180 {A : Type'} (t : A -> Prop) (u : A -> Prop) (x : A) : (term216 A t u x) = (term216 A t u x).
Proof. exact (eq_refl (term216 A t u x)). Qed.
Lemma lem3549181 {A : Type'} (t : A -> Prop) (u : A -> Prop) : (term218 A t u) = (term218 A t u).
Proof. exact (fun_ext (fun x : A => @lem3549180 A t u x)). Qed.
Lemma lem3549182 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem3549183 {A : Type'} (t : A -> Prop) (u : A -> Prop) : (term219 A t u) = (term219 A t u).
Proof. exact (MK_COMB (@lem3549182 A) (@lem3549181 A t u)). Qed.
Lemma lem3549184 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem3549185 {A : Type'} (t : A -> Prop) (u : A -> Prop) : (term220 A t u) = (term220 A t u).
Proof. exact (MK_COMB (@lem3549184) (@lem3549183 A t u)). Qed.
Lemma lem3549186 {A B : Type'} (u : A -> Prop) (f : A -> B) (t : A -> Prop) : (term249 A B u f t) = (term249 A B u f t).
Proof. exact (MK_COMB (@lem3549185 A t u) (@lem3549175 A B u f t)). Qed.
Lemma lem3549195 {A : Type'} (g : type686 A) (t : A -> Prop) (s : A -> Prop) : (term5050 A g t s) = (term5050 A g t s).
Proof. exact (eq_refl (term5050 A g t s)). Qed.
Lemma lem3549196 {A B : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) (t : A -> Prop) : (term5711 A B g s u f t) = (term5711 A B g s u f t).
Proof. exact (MK_COMB (@lem3549195 A g t s) (@lem3549186 A B u f t)). Qed.
Lemma lem3549197 {A B : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) : (term5712 A B g s u f) = (term5712 A B g s u f).
Proof. exact (fun_ext (fun t : A -> Prop => @lem3549196 A B g s u f t)). Qed.
Lemma lem3549198 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem3549199 {A B : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) : (term5713 A B g s u f) = (term5713 A B g s u f).
Proof. exact (MK_COMB (@lem3549198 A) (@lem3549197 A B g s u f)). Qed.
Lemma lem3549208 {A : Type'} (g : type686 A) (x : A -> Prop) (s : A -> Prop) : (term5044 A g x s) = (term5044 A g x s).
Proof. exact (eq_refl (term5044 A g x s)). Qed.
Lemma lem3549209 {A : Type'} (g : type686 A) (s : A -> Prop) : (term5046 A g s) = (term5046 A g s).
Proof. exact (fun_ext (fun x : A -> Prop => @lem3549208 A g x s)). Qed.
Lemma lem3549210 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem3549211 {A : Type'} (g : type686 A) (s : A -> Prop) : (term5047 A g s) = (term5047 A g s).
Proof. exact (MK_COMB (@lem3549210 A) (@lem3549209 A g s)). Qed.
Lemma lem3549212 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem3549213 {A : Type'} (g : type686 A) (s : A -> Prop) : (term5048 A g s) = (term5048 A g s).
Proof. exact (MK_COMB (@lem3549212) (@lem3549211 A g s)). Qed.
Lemma lem3549214 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem3549215 {A : Type'} (g : type686 A) (s : A -> Prop) : (term5049 A g s) = (term5049 A g s).
Proof. exact (MK_COMB (@lem3549214) (@lem3549213 A g s)). Qed.
Lemma lem3549216 {A B : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) : (term5714 A B g s u f) = (term5714 A B g s u f).
Proof. exact (MK_COMB (@lem3549215 A g s) (@lem3549199 A B g s u f)). Qed.
Lemma lem3549217 {A : Type'} (t : A -> Prop) (x : A) : (t x) = (t x).
Proof. exact (eq_refl (t x)). Qed.
Lemma lem3549222 {A B : Type'} (x : A) (f : A -> B) (t : A -> Prop) (x' : A) : (term237 A B x f t x') = (term237 A B x f t x').
Proof. exact (eq_refl (term237 A B x f t x')). Qed.
Lemma lem3549223 {A B : Type'} (x : A) (f : A -> B) (t : A -> Prop) : (term239 A B x f t) = (term239 A B x f t).
Proof. exact (fun_ext (fun x' : A => @lem3549222 A B x f t x')). Qed.
Lemma lem3549224 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem3549225 {A B : Type'} (x : A) (f : A -> B) (t : A -> Prop) : (term240 A B x f t) = (term240 A B x f t).
Proof. exact (MK_COMB (@lem3549224 A) (@lem3549223 A B x f t)). Qed.
Lemma lem3549228 {A : Type'} (u : A -> Prop) (x : A) : (term234 A u x) = (term234 A u x).
Proof. exact (eq_refl (term234 A u x)). Qed.
Lemma lem3549229 {A B : Type'} (u : A -> Prop) (x : A) (f : A -> B) (t : A -> Prop) : (term241 A B u x f t) = (term241 A B u x f t).
Proof. exact (MK_COMB (@lem3549228 A u x) (@lem3549225 A B x f t)). Qed.
Lemma lem3549230 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem3549231 {A B : Type'} (u : A -> Prop) (x : A) (f : A -> B) (t : A -> Prop) : (term243 A B u x f t) = (term243 A B u x f t).
Proof. exact (MK_COMB (@lem3549230) (@lem3549229 A B u x f t)). Qed.
Lemma lem3549232 {A B : Type'} (u : A -> Prop) (f : A -> B) (t : A -> Prop) (x : A) : (term245 A B u f t x) = (term245 A B u f t x).
Proof. exact (MK_COMB (@lem3549231 A B u x f t) (@lem3549217 A t x)). Qed.
Lemma lem3549233 {A B : Type'} (u : A -> Prop) (f : A -> B) (t : A -> Prop) : (term247 A B u f t) = (term247 A B u f t).
Proof. exact (fun_ext (fun x : A => @lem3549232 A B u f t x)). Qed.
Lemma lem3549234 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem3549235 {A B : Type'} (u : A -> Prop) (f : A -> B) (t : A -> Prop) : (term248 A B u f t) = (term248 A B u f t).
Proof. exact (MK_COMB (@lem3549234 A) (@lem3549233 A B u f t)). Qed.
Lemma lem3549244 {A : Type'} (g : type686 A) (t : A -> Prop) (s : A -> Prop) : (term5050 A g t s) = (term5050 A g t s).
Proof. exact (eq_refl (term5050 A g t s)). Qed.
Lemma lem3549245 {A B : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) (t : A -> Prop) : (term5070 A B g s u f t) = (term5070 A B g s u f t).
Proof. exact (MK_COMB (@lem3549244 A g t s) (@lem3549235 A B u f t)). Qed.
Lemma lem3549246 {A B : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) : (term5071 A B g s u f) = (term5071 A B g s u f).
Proof. exact (fun_ext (fun t : A -> Prop => @lem3549245 A B g s u f t)). Qed.
Lemma lem3549247 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem3549248 {A B : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) : (term5072 A B g s u f) = (term5072 A B g s u f).
Proof. exact (MK_COMB (@lem3549247 A) (@lem3549246 A B g s u f)). Qed.
Lemma lem3549253 {A : Type'} (s : A -> Prop) (u : A -> Prop) (x : A) : (term216 A s u x) = (term216 A s u x).
Proof. exact (eq_refl (term216 A s u x)). Qed.
Lemma lem3549254 {A : Type'} (s : A -> Prop) (u : A -> Prop) : (term218 A s u) = (term218 A s u).
Proof. exact (fun_ext (fun x : A => @lem3549253 A s u x)). Qed.
Lemma lem3549255 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem3549256 {A : Type'} (s : A -> Prop) (u : A -> Prop) : (term219 A s u) = (term219 A s u).
Proof. exact (MK_COMB (@lem3549255 A) (@lem3549254 A s u)). Qed.
Lemma lem3549257 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem3549258 {A : Type'} (s : A -> Prop) (u : A -> Prop) : (term220 A s u) = (term220 A s u).
Proof. exact (MK_COMB (@lem3549257) (@lem3549256 A s u)). Qed.
Lemma lem3549259 {A B : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) : (term5073 A B g s u f) = (term5073 A B g s u f).
Proof. exact (MK_COMB (@lem3549258 A s u) (@lem3549248 A B g s u f)). Qed.
Lemma lem3549264 {A : Type'} (t : A -> Prop) (u : A -> Prop) (x : A) : (term216 A t u x) = (term216 A t u x).
Proof. exact (eq_refl (term216 A t u x)). Qed.
Lemma lem3549265 {A : Type'} (t : A -> Prop) (u : A -> Prop) : (term218 A t u) = (term218 A t u).
Proof. exact (fun_ext (fun x : A => @lem3549264 A t u x)). Qed.
Lemma lem3549266 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem3549267 {A : Type'} (t : A -> Prop) (u : A -> Prop) : (term219 A t u) = (term219 A t u).
Proof. exact (MK_COMB (@lem3549266 A) (@lem3549265 A t u)). Qed.
Lemma lem3549276 {A : Type'} (g : type686 A) (t : A -> Prop) (s : A -> Prop) : (term5050 A g t s) = (term5050 A g t s).
Proof. exact (eq_refl (term5050 A g t s)). Qed.
Lemma lem3549277 {A : Type'} (g : type686 A) (s : A -> Prop) (t : A -> Prop) (u : A -> Prop) : (term5051 A g s t u) = (term5051 A g s t u).
Proof. exact (MK_COMB (@lem3549276 A g t s) (@lem3549267 A t u)). Qed.
Lemma lem3549278 {A : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) : (term5052 A g s u) = (term5052 A g s u).
Proof. exact (fun_ext (fun t : A -> Prop => @lem3549277 A g s t u)). Qed.
Lemma lem3549279 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem3549280 {A : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) : (term5053 A g s u) = (term5053 A g s u).
Proof. exact (MK_COMB (@lem3549279 A) (@lem3549278 A g s u)). Qed.
Lemma lem3549281 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem3549282 {A : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) : (term5054 A g s u) = (term5054 A g s u).
Proof. exact (MK_COMB (@lem3549281) (@lem3549280 A g s u)). Qed.
Lemma lem3549283 {A B : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) : (term5074 A B g s u f) = (term5074 A B g s u f).
Proof. exact (MK_COMB (@lem3549282 A g s u) (@lem3549259 A B g s u f)). Qed.
Lemma lem3549292 {A : Type'} (g : type686 A) (x : A -> Prop) (s : A -> Prop) : (term5044 A g x s) = (term5044 A g x s).
Proof. exact (eq_refl (term5044 A g x s)). Qed.
Lemma lem3549293 {A : Type'} (g : type686 A) (s : A -> Prop) : (term5046 A g s) = (term5046 A g s).
Proof. exact (fun_ext (fun x : A -> Prop => @lem3549292 A g x s)). Qed.
Lemma lem3549294 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem3549295 {A : Type'} (g : type686 A) (s : A -> Prop) : (term5047 A g s) = (term5047 A g s).
Proof. exact (MK_COMB (@lem3549294 A) (@lem3549293 A g s)). Qed.
Lemma lem3549296 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem3549297 {A : Type'} (g : type686 A) (s : A -> Prop) : (term5048 A g s) = (term5048 A g s).
Proof. exact (MK_COMB (@lem3549296) (@lem3549295 A g s)). Qed.
Lemma lem3549298 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem3549299 {A : Type'} (g : type686 A) (s : A -> Prop) : (term5049 A g s) = (term5049 A g s).
Proof. exact (MK_COMB (@lem3549298) (@lem3549297 A g s)). Qed.
Lemma lem3549300 {A B : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) : (term5075 A B g s u f) = (term5075 A B g s u f).
Proof. exact (MK_COMB (@lem3549299 A g s) (@lem3549283 A B g s u f)). Qed.
Lemma lem3549301 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem3549302 {A B : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) : (term5076 A B g s u f) = (term5076 A B g s u f).
Proof. exact (MK_COMB (@lem3549301) (@lem3549300 A B g s u f)). Qed.
Lemma lem3549303 {A B : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) : (term5715 A B g s u f) = (term5715 A B g s u f).
Proof. exact (MK_COMB (@lem3549302 A B g s u f) (@lem3549216 A B g s u f)). Qed.
Lemma lem3549304 {A B : Type'} (s : A -> Prop) (u : A -> Prop) (f : A -> B) : (term5723 A B s u f) = (term5723 A B s u f).
Proof. exact (fun_ext (fun g : type686 A => @lem3549303 A B g s u f)). Qed.
Lemma lem3549305 {A : Type'} : (@all ((A -> Prop) -> Prop)) = (@all ((A -> Prop) -> Prop)).
Proof. exact (eq_refl (@all ((A -> Prop) -> Prop))). Qed.
Lemma lem3549306 {A B : Type'} (s : A -> Prop) (u : A -> Prop) (f : A -> B) : (term5725 A B s u f) = (term5725 A B s u f).
Proof. exact (MK_COMB (@lem3549305 A) (@lem3549304 A B s u f)). Qed.
Lemma lem3549307 {A B : Type'} (u : A -> Prop) (f : A -> B) : (term5727 A B u f) = (term5727 A B u f).
Proof. exact (fun_ext (fun s : A -> Prop => @lem3549306 A B s u f)). Qed.
Lemma lem3549308 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem3549309 {A B : Type'} (u : A -> Prop) (f : A -> B) : (term5729 A B u f) = (term5729 A B u f).
Proof. exact (MK_COMB (@lem3549308 A) (@lem3549307 A B u f)). Qed.
Lemma lem3549310 {A B : Type'} (f : A -> B) : (term5731 A B f) = (term5731 A B f).
Proof. exact (fun_ext (fun u : A -> Prop => @lem3549309 A B u f)). Qed.
Lemma lem3549311 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem3549312 {A B : Type'} (f : A -> B) : (term5733 A B f) = (term5733 A B f).
Proof. exact (MK_COMB (@lem3549311 A) (@lem3549310 A B f)). Qed.
Lemma lem3549313 {A B : Type'} : (term5735 A B) = (term5735 A B).
Proof. exact (fun_ext (fun f : A -> B => @lem3549312 A B f)). Qed.
Lemma lem3549314 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem3549315 {A B : Type'} : (term5737 A B) = (term5737 A B).
Proof. exact (MK_COMB (@lem3549314 A B) (@lem3549313 A B)). Qed.
Lemma lem3549460 {A B : Type'} : (term5736 A B) = (term5737 A B).
Proof. exact (TRANS (@lem3549156 A B) (@lem3549315 A B)). Qed.
Lemma lem3549461 {A B : Type'} : (term5737 A B) = (term5736 A B).
Proof. exact (SYM (@lem3549460 A B)). Qed.
Lemma lem3549462 {A B : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) (h1 : term5075 A B g s u f) : term5075 A B g s u f.
Proof. exact (h1). Qed.
Lemma lem3549464 (p : Prop) : p = (term275 p).
Proof. exact (EQ_MP (@lem10578 p) (@lem10597 p)). Qed.
Lemma lem3549465 {A B : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) : (term5714 A B g s u f) = (term5738 A B g s u f).
Proof. exact (@lem3549464 (term5714 A B g s u f)). Qed.
Lemma lem3549466 {A B : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) : (term5738 A B g s u f) = (term5714 A B g s u f).
Proof. exact (SYM (@lem3549465 A B g s u f)). Qed.
Lemma lem3549467 {A B : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) (h1 : term5739 A B g s u f) : term5739 A B g s u f.
Proof. exact (h1). Qed.
Lemma lem3549474 {A : Type'} (g : type686 A) (x : A -> Prop) (s : A -> Prop) : (term5155 A g x s) = (term5041 A g x s).
Proof. exact (@lem16933 (term5041 A g x s)). Qed.
Lemma lem3549475 {A : Type'} (P : type686 A) : (term298 A P) = (term299 A P).
Proof. exact (@lem18392 (A -> Prop) P). Qed.
Lemma lem3549476 {A : Type'} (g : type686 A) (s : A -> Prop) : (term5048 A g s) = (term5156 A g s).
Proof. exact (@lem3549475 A (term5046 A g s)). Qed.
Lemma lem3549477 {A : Type'} (g : type686 A) (x : A -> Prop) (s : A -> Prop) : (term5157 A g s x) = (term5044 A g x s).
Proof. exact (eq_refl (term5157 A g s x)). Qed.
Lemma lem3549478 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem3549479 {A : Type'} (g : type686 A) (x : A -> Prop) (s : A -> Prop) : (term5158 A g s x) = (term5155 A g x s).
Proof. exact (MK_COMB (@lem3549478) (@lem3549477 A g x s)). Qed.
Lemma lem3549480 {A : Type'} (g : type686 A) (x : A -> Prop) (s : A -> Prop) : (term5158 A g s x) = (term5041 A g x s).
Proof. exact (TRANS (@lem3549479 A g x s) (@lem3549474 A g x s)). Qed.
Lemma lem3549481 {A : Type'} (g : type686 A) (s : A -> Prop) : (term5159 A g s) = (term5160 A g s).
Proof. exact (fun_ext (fun x : A -> Prop => @lem3549480 A g x s)). Qed.
Lemma lem3549482 {A : Type'} : (@ex (A -> Prop)) = (@ex (A -> Prop)).
Proof. exact (eq_refl (@ex (A -> Prop))). Qed.
Lemma lem3549483 {A : Type'} (g : type686 A) (s : A -> Prop) : (term5156 A g s) = (term5161 A g s).
Proof. exact (MK_COMB (@lem3549482 A) (@lem3549481 A g s)). Qed.
Lemma lem3549484 {A : Type'} (g : type686 A) (s : A -> Prop) : (term5048 A g s) = (term5161 A g s).
Proof. exact (TRANS (@lem3549476 A g s) (@lem3549483 A g s)). Qed.
Lemma lem3549488 {A : Type'} (t : A -> Prop) (s : A -> Prop) : (term5162 A t s) = (t = s).
Proof. exact (@lem16933 (t = s)). Qed.
Lemma lem3549490 {A : Type'} (g : type686 A) (t : A -> Prop) : (term332 A g t) = (term332 A g t).
Proof. exact (eq_refl (term332 A g t)). Qed.
Lemma lem3549491 {A : Type'} (g : type686 A) (t : A -> Prop) (s : A -> Prop) : (term5163 A g t s) = (term5164 A g t s).
Proof. exact (MK_COMB (@lem3549490 A g t) (@lem3549488 A t s)). Qed.
Lemma lem3549492 {A : Type'} (g : type686 A) (t : A -> Prop) (s : A -> Prop) : (term5044 A g t s) = (term5163 A g t s).
Proof. exact (@lem17045 (g t) (term5040 A t s)). Qed.
Lemma lem3549493 {A : Type'} (g : type686 A) (t : A -> Prop) (s : A -> Prop) : (term5044 A g t s) = (term5164 A g t s).
Proof. exact (TRANS (@lem3549492 A g t s) (@lem3549491 A g t s)). Qed.
Lemma lem3549500 {A : Type'} (t : A -> Prop) (u : A -> Prop) (x : A) : (term216 A t u x) = (term306 A t u x).
Proof. exact (@lem17265 (t x) (u x)). Qed.
Lemma lem3549501 {A : Type'} (t : A -> Prop) (u : A -> Prop) : (term218 A t u) = (term307 A t u).
Proof. exact (fun_ext (fun x : A => @lem3549500 A t u x)). Qed.
Lemma lem3549502 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem3549503 {A : Type'} (t : A -> Prop) (u : A -> Prop) : (term219 A t u) = (term308 A t u).
Proof. exact (MK_COMB (@lem3549502 A) (@lem3549501 A t u)). Qed.
Lemma lem3549504 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem3549505 {A : Type'} (g : type686 A) (t : A -> Prop) (s : A -> Prop) : (term5165 A g t s) = (term5166 A g t s).
Proof. exact (MK_COMB (@lem3549504) (@lem3549493 A g t s)). Qed.
Lemma lem3549506 {A : Type'} (g : type686 A) (s : A -> Prop) (t : A -> Prop) (u : A -> Prop) : (term5167 A g s t u) = (term5168 A g s t u).
Proof. exact (MK_COMB (@lem3549505 A g t s) (@lem3549503 A t u)). Qed.
Lemma lem3549507 {A : Type'} (g : type686 A) (s : A -> Prop) (t : A -> Prop) (u : A -> Prop) : (term5051 A g s t u) = (term5167 A g s t u).
Proof. exact (@lem17265 (term5041 A g t s) (term219 A t u)). Qed.
Lemma lem3549508 {A : Type'} (g : type686 A) (s : A -> Prop) (t : A -> Prop) (u : A -> Prop) : (term5051 A g s t u) = (term5168 A g s t u).
Proof. exact (TRANS (@lem3549507 A g s t u) (@lem3549506 A g s t u)). Qed.
Lemma lem3549509 {A : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) : (term5052 A g s u) = (term5169 A g s u).
Proof. exact (fun_ext (fun t : A -> Prop => @lem3549508 A g s t u)). Qed.
Lemma lem3549510 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem3549511 {A : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) : (term5053 A g s u) = (term5170 A g s u).
Proof. exact (MK_COMB (@lem3549510 A) (@lem3549509 A g s u)). Qed.
Lemma lem3549518 {A : Type'} (s : A -> Prop) (u : A -> Prop) (x : A) : (term216 A s u x) = (term306 A s u x).
Proof. exact (@lem17265 (s x) (u x)). Qed.
Lemma lem3549519 {A : Type'} (s : A -> Prop) (u : A -> Prop) : (term218 A s u) = (term307 A s u).
Proof. exact (fun_ext (fun x : A => @lem3549518 A s u x)). Qed.
Lemma lem3549520 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem3549521 {A : Type'} (s : A -> Prop) (u : A -> Prop) : (term219 A s u) = (term308 A s u).
Proof. exact (MK_COMB (@lem3549520 A) (@lem3549519 A s u)). Qed.
Lemma lem3549525 {A : Type'} (t : A -> Prop) (s : A -> Prop) : (term5162 A t s) = (t = s).
Proof. exact (@lem16933 (t = s)). Qed.
Lemma lem3549527 {A : Type'} (g : type686 A) (t : A -> Prop) : (term332 A g t) = (term332 A g t).
Proof. exact (eq_refl (term332 A g t)). Qed.
Lemma lem3549528 {A : Type'} (g : type686 A) (t : A -> Prop) (s : A -> Prop) : (term5163 A g t s) = (term5164 A g t s).
Proof. exact (MK_COMB (@lem3549527 A g t) (@lem3549525 A t s)). Qed.
Lemma lem3549529 {A : Type'} (g : type686 A) (t : A -> Prop) (s : A -> Prop) : (term5044 A g t s) = (term5163 A g t s).
Proof. exact (@lem17045 (g t) (term5040 A t s)). Qed.
Lemma lem3549530 {A : Type'} (g : type686 A) (t : A -> Prop) (s : A -> Prop) : (term5044 A g t s) = (term5164 A g t s).
Proof. exact (TRANS (@lem3549529 A g t s) (@lem3549528 A g t s)). Qed.
Lemma lem3549538 {A B : Type'} (x : A) (f : A -> B) (t : A -> Prop) (x' : A) : (term309 A B x f t x') = (term310 A B x f t x').
Proof. exact (@lem17045 ((f x) = (f x')) (t x')). Qed.
Lemma lem3549539 {A : Type'} (P : A -> Prop) : (term311 A P) = (term312 A P).
Proof. exact (@lem18394 A P). Qed.
Lemma lem3549540 {A B : Type'} (x : A) (f : A -> B) (t : A -> Prop) : (term313 A B x f t) = (term314 A B x f t).
Proof. exact (@lem3549539 A (term239 A B x f t)). Qed.
Lemma lem3549541 {A B : Type'} (x : A) (f : A -> B) (t : A -> Prop) (x' : A) : (term315 A B x f t x') = (term237 A B x f t x').
Proof. exact (eq_refl (term315 A B x f t x')). Qed.
Lemma lem3549542 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem3549543 {A B : Type'} (x : A) (f : A -> B) (t : A -> Prop) (x' : A) : (term316 A B x f t x') = (term309 A B x f t x').
Proof. exact (MK_COMB (@lem3549542) (@lem3549541 A B x f t x')). Qed.
Lemma lem3549544 {A B : Type'} (x : A) (f : A -> B) (t : A -> Prop) (x' : A) : (term316 A B x f t x') = (term310 A B x f t x').
Proof. exact (TRANS (@lem3549543 A B x f t x') (@lem3549538 A B x f t x')). Qed.
Lemma lem3549545 {A B : Type'} (x : A) (f : A -> B) (t : A -> Prop) : (term317 A B x f t) = (term318 A B x f t).
Proof. exact (fun_ext (fun x' : A => @lem3549544 A B x f t x')). Qed.
Lemma lem3549546 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem3549547 {A B : Type'} (x : A) (f : A -> B) (t : A -> Prop) : (term314 A B x f t) = (term319 A B x f t).
Proof. exact (MK_COMB (@lem3549546 A) (@lem3549545 A B x f t)). Qed.
Lemma lem3549548 {A B : Type'} (x : A) (f : A -> B) (t : A -> Prop) : (term313 A B x f t) = (term319 A B x f t).
Proof. exact (TRANS (@lem3549540 A B x f t) (@lem3549547 A B x f t)). Qed.
Lemma lem3549550 {A : Type'} (u : A -> Prop) (x : A) : (term320 A u x) = (term320 A u x).
Proof. exact (eq_refl (term320 A u x)). Qed.
Lemma lem3549551 {A B : Type'} (u : A -> Prop) (x : A) (f : A -> B) (t : A -> Prop) : (term321 A B u x f t) = (term322 A B u x f t).
Proof. exact (MK_COMB (@lem3549550 A u x) (@lem3549548 A B x f t)). Qed.
Lemma lem3549552 {A B : Type'} (u : A -> Prop) (x : A) (f : A -> B) (t : A -> Prop) : (term323 A B u x f t) = (term321 A B u x f t).
Proof. exact (@lem17045 (u x) (term240 A B x f t)). Qed.
Lemma lem3549553 {A B : Type'} (u : A -> Prop) (x : A) (f : A -> B) (t : A -> Prop) : (term323 A B u x f t) = (term322 A B u x f t).
Proof. exact (TRANS (@lem3549552 A B u x f t) (@lem3549551 A B u x f t)). Qed.
Lemma lem3549554 {A : Type'} (t : A -> Prop) (x : A) : (t x) = (t x).
Proof. exact (eq_refl (t x)). Qed.
Lemma lem3549555 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem3549556 {A B : Type'} (u : A -> Prop) (x : A) (f : A -> B) (t : A -> Prop) : (term324 A B u x f t) = (term325 A B u x f t).
Proof. exact (MK_COMB (@lem3549555) (@lem3549553 A B u x f t)). Qed.
Lemma lem3549557 {A B : Type'} (u : A -> Prop) (f : A -> B) (t : A -> Prop) (x : A) : (term326 A B u f t x) = (term327 A B u f t x).
Proof. exact (MK_COMB (@lem3549556 A B u x f t) (@lem3549554 A t x)). Qed.
Lemma lem3549558 {A B : Type'} (u : A -> Prop) (f : A -> B) (t : A -> Prop) (x : A) : (term245 A B u f t x) = (term326 A B u f t x).
Proof. exact (@lem17265 (term241 A B u x f t) (t x)). Qed.
Lemma lem3549559 {A B : Type'} (u : A -> Prop) (f : A -> B) (t : A -> Prop) (x : A) : (term245 A B u f t x) = (term327 A B u f t x).
Proof. exact (TRANS (@lem3549558 A B u f t x) (@lem3549557 A B u f t x)). Qed.
Lemma lem3549560 {A B : Type'} (u : A -> Prop) (f : A -> B) (t : A -> Prop) : (term247 A B u f t) = (term328 A B u f t).
Proof. exact (fun_ext (fun x : A => @lem3549559 A B u f t x)). Qed.
Lemma lem3549561 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem3549562 {A B : Type'} (u : A -> Prop) (f : A -> B) (t : A -> Prop) : (term248 A B u f t) = (term329 A B u f t).
Proof. exact (MK_COMB (@lem3549561 A) (@lem3549560 A B u f t)). Qed.
Lemma lem3549563 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem3549564 {A : Type'} (g : type686 A) (t : A -> Prop) (s : A -> Prop) : (term5165 A g t s) = (term5166 A g t s).
Proof. exact (MK_COMB (@lem3549563) (@lem3549530 A g t s)). Qed.
Lemma lem3549565 {A B : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) (t : A -> Prop) : (term5171 A B g s u f t) = (term5172 A B g s u f t).
Proof. exact (MK_COMB (@lem3549564 A g t s) (@lem3549562 A B u f t)). Qed.
Lemma lem3549566 {A B : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) (t : A -> Prop) : (term5070 A B g s u f t) = (term5171 A B g s u f t).
Proof. exact (@lem17265 (term5041 A g t s) (term248 A B u f t)). Qed.
Lemma lem3549567 {A B : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) (t : A -> Prop) : (term5070 A B g s u f t) = (term5172 A B g s u f t).
Proof. exact (TRANS (@lem3549566 A B g s u f t) (@lem3549565 A B g s u f t)). Qed.
Lemma lem3549568 {A B : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) : (term5071 A B g s u f) = (term5173 A B g s u f).
Proof. exact (fun_ext (fun t : A -> Prop => @lem3549567 A B g s u f t)). Qed.
Lemma lem3549569 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem3549570 {A B : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) : (term5072 A B g s u f) = (term5174 A B g s u f).
Proof. exact (MK_COMB (@lem3549569 A) (@lem3549568 A B g s u f)). Qed.
Lemma lem3549571 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem3549572 {A : Type'} (s : A -> Prop) (u : A -> Prop) : (term220 A s u) = (term330 A s u).
Proof. exact (MK_COMB (@lem3549571) (@lem3549521 A s u)). Qed.
Lemma lem3549573 {A B : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) : (term5073 A B g s u f) = (term5175 A B g s u f).
Proof. exact (MK_COMB (@lem3549572 A s u) (@lem3549570 A B g s u f)). Qed.
Lemma lem3549574 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem3549575 {A : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) : (term5054 A g s u) = (term5176 A g s u).
Proof. exact (MK_COMB (@lem3549574) (@lem3549511 A g s u)). Qed.
Lemma lem3549576 {A B : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) : (term5074 A B g s u f) = (term5177 A B g s u f).
Proof. exact (MK_COMB (@lem3549575 A g s u) (@lem3549573 A B g s u f)). Qed.
Lemma lem3549577 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem3549578 {A : Type'} (g : type686 A) (s : A -> Prop) : (term5049 A g s) = (term5178 A g s).
Proof. exact (MK_COMB (@lem3549577) (@lem3549484 A g s)). Qed.
Lemma lem3549579 {A B : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) : (term5075 A B g s u f) = (term5179 A B g s u f).
Proof. exact (MK_COMB (@lem3549578 A g s) (@lem3549576 A B g s u f)). Qed.
Lemma lem3549850 {A : Type'} (P : A -> Prop) (Q : Prop) : (term398 A P Q) = (term399 A P Q).
Proof. exact (EQ_MP (@lem18923 A P Q) (@lem18922 A P Q)). Qed.
Lemma lem3549851 {A : Type'} (P : type686 A) (Q : Prop) : (term5180 A P Q) = (term5181 A P Q).
Proof. exact (@lem3549850 (A -> Prop) P Q). Qed.
Lemma lem3549852 {A B : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) : (term5182 A B g s u f) = (term5183 A B g s u f).
Proof. exact (@lem3549851 A (term5160 A g s) (term5177 A B g s u f)). Qed.
Lemma lem3549853 {A : Type'} (g : type686 A) (x : A -> Prop) (s : A -> Prop) : (term5184 A g s x) = (term5041 A g x s).
Proof. exact (eq_refl (term5184 A g s x)). Qed.
Lemma lem3549854 {A : Type'} (g : type686 A) (s : A -> Prop) : (term5185 A g s) = (term5160 A g s).
Proof. exact (fun_ext (fun x : A -> Prop => @lem3549853 A g x s)). Qed.
Lemma lem3549855 {A : Type'} : (@ex (A -> Prop)) = (@ex (A -> Prop)).
Proof. exact (eq_refl (@ex (A -> Prop))). Qed.
Lemma lem3549856 {A : Type'} (g : type686 A) (s : A -> Prop) : (term5186 A g s) = (term5161 A g s).
Proof. exact (MK_COMB (@lem3549855 A) (@lem3549854 A g s)). Qed.
Lemma lem3549857 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem3549858 {A : Type'} (g : type686 A) (s : A -> Prop) : (term5187 A g s) = (term5178 A g s).
Proof. exact (MK_COMB (@lem3549857) (@lem3549856 A g s)). Qed.
Lemma lem3549859 {A B : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) : (term5177 A B g s u f) = (term5177 A B g s u f).
Proof. exact (eq_refl (term5177 A B g s u f)). Qed.
Lemma lem3549860 {A B : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) : (term5182 A B g s u f) = (term5179 A B g s u f).
Proof. exact (MK_COMB (@lem3549858 A g s) (@lem3549859 A B g s u f)). Qed.
Lemma lem3549861 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem3549862 {A B : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) : (term5188 A B g s u f) = (term5189 A B g s u f).
Proof. exact (MK_COMB (@lem3549861) (@lem3549860 A B g s u f)). Qed.
Lemma lem3549863 {A : Type'} (g : type686 A) (x : A -> Prop) (s : A -> Prop) : (term5184 A g s x) = (term5041 A g x s).
Proof. exact (eq_refl (term5184 A g s x)). Qed.
Lemma lem3549864 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem3549865 {A : Type'} (g : type686 A) (x : A -> Prop) (s : A -> Prop) : (term5190 A g s x) = (term5191 A g x s).
Proof. exact (MK_COMB (@lem3549864) (@lem3549863 A g x s)). Qed.
Lemma lem3549866 {A B : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) : (term5177 A B g s u f) = (term5177 A B g s u f).
Proof. exact (eq_refl (term5177 A B g s u f)). Qed.
Lemma lem3549867 {A B : Type'} (x : A -> Prop) (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) : (term5192 A B x g s u f) = (term5193 A B x g s u f).
Proof. exact (MK_COMB (@lem3549865 A g x s) (@lem3549866 A B g s u f)). Qed.
Lemma lem3549868 {A B : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) : (term5194 A B g s u f) = (term5195 A B g s u f).
Proof. exact (fun_ext (fun x : A -> Prop => @lem3549867 A B x g s u f)). Qed.
Lemma lem3549869 {A : Type'} : (@ex (A -> Prop)) = (@ex (A -> Prop)).
Proof. exact (eq_refl (@ex (A -> Prop))). Qed.
Lemma lem3549870 {A B : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) : (term5183 A B g s u f) = (term5196 A B g s u f).
Proof. exact (MK_COMB (@lem3549869 A) (@lem3549868 A B g s u f)). Qed.
Lemma lem3549871 {A B : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) : ((term5182 A B g s u f) = (term5183 A B g s u f)) = ((term5179 A B g s u f) = (term5196 A B g s u f)).
Proof. exact (MK_COMB (@lem3549862 A B g s u f) (@lem3549870 A B g s u f)). Qed.
Lemma lem3549873 {A B : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) : (term5179 A B g s u f) = (term5196 A B g s u f).
Proof. exact (EQ_MP (@lem3549871 A B g s u f) (@lem3549852 A B g s u f)). Qed.
Lemma lem3549874 {A B : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) : (term5075 A B g s u f) = (term5196 A B g s u f).
Proof. exact (TRANS (@lem3549579 A B g s u f) (@lem3549873 A B g s u f)). Qed.
Lemma lem3549875 {A B : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) (h1 : term5075 A B g s u f) : term5196 A B g s u f.
Proof. exact (EQ_MP (@lem3549874 A B g s u f) (@lem3549462 A B g s u f h1)). Qed.
Lemma lem3549879 {A : Type'} (x : A -> Prop) (s : A -> Prop) : (term5162 A x s) = (x = s).
Proof. exact (@lem16933 (x = s)). Qed.
Lemma lem3549881 {A : Type'} (g : type686 A) (x : A -> Prop) : (term332 A g x) = (term332 A g x).
Proof. exact (eq_refl (term332 A g x)). Qed.
Lemma lem3549882 {A : Type'} (g : type686 A) (x : A -> Prop) (s : A -> Prop) : (term5163 A g x s) = (term5164 A g x s).
Proof. exact (MK_COMB (@lem3549881 A g x) (@lem3549879 A x s)). Qed.
Lemma lem3549883 {A : Type'} (g : type686 A) (x : A -> Prop) (s : A -> Prop) : (term5044 A g x s) = (term5163 A g x s).
Proof. exact (@lem17045 (g x) (term5040 A x s)). Qed.
Lemma lem3549884 {A : Type'} (g : type686 A) (x : A -> Prop) (s : A -> Prop) : (term5044 A g x s) = (term5164 A g x s).
Proof. exact (TRANS (@lem3549883 A g x s) (@lem3549882 A g x s)). Qed.
Lemma lem3549885 {A : Type'} (g : type686 A) (s : A -> Prop) : (term5046 A g s) = (term5740 A g s).
Proof. exact (fun_ext (fun x : A -> Prop => @lem3549884 A g x s)). Qed.
Lemma lem3549886 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem3549887 {A : Type'} (g : type686 A) (s : A -> Prop) : (term5047 A g s) = (term5741 A g s).
Proof. exact (MK_COMB (@lem3549886 A) (@lem3549885 A g s)). Qed.
Lemma lem3549888 {A : Type'} (g : type686 A) (s : A -> Prop) : (term5742 A g s) = (term5047 A g s).
Proof. exact (@lem16933 (term5047 A g s)). Qed.
Lemma lem3549889 {A : Type'} (g : type686 A) (s : A -> Prop) : (term5742 A g s) = (term5741 A g s).
Proof. exact (TRANS (@lem3549888 A g s) (@lem3549887 A g s)). Qed.
Lemma lem3549901 {A : Type'} (t : A -> Prop) (u : A -> Prop) (x : A) : (term5255 A t u x) = (term5256 A t u x).
Proof. exact (@lem17362 (t x) (u x)). Qed.
Lemma lem3549902 {A : Type'} (P : A -> Prop) : (term5200 A P) = (term5201 A P).
Proof. exact (@lem18392 A P). Qed.
Lemma lem3549903 {A : Type'} (t : A -> Prop) (u : A -> Prop) : (term5257 A t u) = (term5258 A t u).
Proof. exact (@lem3549902 A (term218 A t u)). Qed.
Lemma lem3549904 {A : Type'} (t : A -> Prop) (u : A -> Prop) (x : A) : (term5259 A t u x) = (term216 A t u x).
Proof. exact (eq_refl (term5259 A t u x)). Qed.
Lemma lem3549905 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem3549906 {A : Type'} (t : A -> Prop) (u : A -> Prop) (x : A) : (term5260 A t u x) = (term5255 A t u x).
Proof. exact (MK_COMB (@lem3549905) (@lem3549904 A t u x)). Qed.
Lemma lem3549907 {A : Type'} (t : A -> Prop) (u : A -> Prop) (x : A) : (term5260 A t u x) = (term5256 A t u x).
Proof. exact (TRANS (@lem3549906 A t u x) (@lem3549901 A t u x)). Qed.
Lemma lem3549908 {A : Type'} (t : A -> Prop) (u : A -> Prop) : (term5261 A t u) = (term5262 A t u).
Proof. exact (fun_ext (fun x : A => @lem3549907 A t u x)). Qed.
Lemma lem3549909 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem3549910 {A : Type'} (t : A -> Prop) (u : A -> Prop) : (term5258 A t u) = (term5263 A t u).
Proof. exact (MK_COMB (@lem3549909 A) (@lem3549908 A t u)). Qed.
Lemma lem3549911 {A : Type'} (t : A -> Prop) (u : A -> Prop) : (term5257 A t u) = (term5263 A t u).
Proof. exact (TRANS (@lem3549903 A t u) (@lem3549910 A t u)). Qed.
Lemma lem3549917 {A B : Type'} (x : A) (f : A -> B) (t : A -> Prop) (x' : A) : (term237 A B x f t x') = (term237 A B x f t x').
Proof. exact (eq_refl (term237 A B x f t x')). Qed.
Lemma lem3549918 {A B : Type'} (x : A) (f : A -> B) (t : A -> Prop) : (term239 A B x f t) = (term239 A B x f t).
Proof. exact (fun_ext (fun x' : A => @lem3549917 A B x f t x')). Qed.
Lemma lem3549919 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem3549920 {A B : Type'} (x : A) (f : A -> B) (t : A -> Prop) : (term240 A B x f t) = (term240 A B x f t).
Proof. exact (MK_COMB (@lem3549919 A) (@lem3549918 A B x f t)). Qed.
Lemma lem3549922 {A : Type'} (u : A -> Prop) (x : A) : (term234 A u x) = (term234 A u x).
Proof. exact (eq_refl (term234 A u x)). Qed.
Lemma lem3549923 {A B : Type'} (u : A -> Prop) (x : A) (f : A -> B) (t : A -> Prop) : (term241 A B u x f t) = (term241 A B u x f t).
Proof. exact (MK_COMB (@lem3549922 A u x) (@lem3549920 A B x f t)). Qed.
Lemma lem3549924 {A : Type'} (t : A -> Prop) (x : A) : (term618 A t x) = (term618 A t x).
Proof. exact (eq_refl (term618 A t x)). Qed.
Lemma lem3549925 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem3549926 {A B : Type'} (u : A -> Prop) (x : A) (f : A -> B) (t : A -> Prop) : (term5197 A B u x f t) = (term5197 A B u x f t).
Proof. exact (MK_COMB (@lem3549925) (@lem3549923 A B u x f t)). Qed.
Lemma lem3549927 {A B : Type'} (u : A -> Prop) (f : A -> B) (t : A -> Prop) (x : A) : (term5198 A B u f t x) = (term5198 A B u f t x).
Proof. exact (MK_COMB (@lem3549926 A B u x f t) (@lem3549924 A t x)). Qed.
Lemma lem3549928 {A B : Type'} (u : A -> Prop) (f : A -> B) (t : A -> Prop) (x : A) : (term5199 A B u f t x) = (term5198 A B u f t x).
Proof. exact (@lem17362 (term241 A B u x f t) (t x)). Qed.
Lemma lem3549929 {A B : Type'} (u : A -> Prop) (f : A -> B) (t : A -> Prop) (x : A) : (term5199 A B u f t x) = (term5198 A B u f t x).
Proof. exact (TRANS (@lem3549928 A B u f t x) (@lem3549927 A B u f t x)). Qed.
Lemma lem3549930 {A : Type'} (P : A -> Prop) : (term5200 A P) = (term5201 A P).
Proof. exact (@lem18392 A P). Qed.
Lemma lem3549931 {A B : Type'} (u : A -> Prop) (f : A -> B) (t : A -> Prop) : (term5202 A B u f t) = (term5203 A B u f t).
Proof. exact (@lem3549930 A (term247 A B u f t)). Qed.
Lemma lem3549932 {A B : Type'} (u : A -> Prop) (f : A -> B) (t : A -> Prop) (x : A) : (term5204 A B u f t x) = (term245 A B u f t x).
Proof. exact (eq_refl (term5204 A B u f t x)). Qed.
Lemma lem3549933 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem3549934 {A B : Type'} (u : A -> Prop) (f : A -> B) (t : A -> Prop) (x : A) : (term5205 A B u f t x) = (term5199 A B u f t x).
Proof. exact (MK_COMB (@lem3549933) (@lem3549932 A B u f t x)). Qed.
Lemma lem3549935 {A B : Type'} (u : A -> Prop) (f : A -> B) (t : A -> Prop) (x : A) : (term5205 A B u f t x) = (term5198 A B u f t x).
Proof. exact (TRANS (@lem3549934 A B u f t x) (@lem3549929 A B u f t x)). Qed.
Lemma lem3549936 {A B : Type'} (u : A -> Prop) (f : A -> B) (t : A -> Prop) : (term5206 A B u f t) = (term5207 A B u f t).
Proof. exact (fun_ext (fun x : A => @lem3549935 A B u f t x)). Qed.
Lemma lem3549937 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem3549938 {A B : Type'} (u : A -> Prop) (f : A -> B) (t : A -> Prop) : (term5203 A B u f t) = (term5208 A B u f t).
Proof. exact (MK_COMB (@lem3549937 A) (@lem3549936 A B u f t)). Qed.
Lemma lem3549939 {A B : Type'} (u : A -> Prop) (f : A -> B) (t : A -> Prop) : (term5202 A B u f t) = (term5208 A B u f t).
Proof. exact (TRANS (@lem3549931 A B u f t) (@lem3549938 A B u f t)). Qed.
Lemma lem3549940 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem3549941 {A : Type'} (t : A -> Prop) (u : A -> Prop) : (term5743 A t u) = (term5744 A t u).
Proof. exact (MK_COMB (@lem3549940) (@lem3549911 A t u)). Qed.
Lemma lem3549942 {A B : Type'} (u : A -> Prop) (f : A -> B) (t : A -> Prop) : (term5745 A B u f t) = (term5746 A B u f t).
Proof. exact (MK_COMB (@lem3549941 A t u) (@lem3549939 A B u f t)). Qed.
Lemma lem3549943 {A B : Type'} (u : A -> Prop) (f : A -> B) (t : A -> Prop) : (term5747 A B u f t) = (term5745 A B u f t).
Proof. exact (@lem17045 (term219 A t u) (term248 A B u f t)). Qed.
Lemma lem3549944 {A B : Type'} (u : A -> Prop) (f : A -> B) (t : A -> Prop) : (term5747 A B u f t) = (term5746 A B u f t).
Proof. exact (TRANS (@lem3549943 A B u f t) (@lem3549942 A B u f t)). Qed.
Lemma lem3549946 {A : Type'} (g : type686 A) (t : A -> Prop) (s : A -> Prop) : (term5191 A g t s) = (term5191 A g t s).
Proof. exact (eq_refl (term5191 A g t s)). Qed.
Lemma lem3549947 {A B : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) (t : A -> Prop) : (term5748 A B g s u f t) = (term5749 A B g s u f t).
Proof. exact (MK_COMB (@lem3549946 A g t s) (@lem3549944 A B u f t)). Qed.
Lemma lem3549948 {A B : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) (t : A -> Prop) : (term5750 A B g s u f t) = (term5748 A B g s u f t).
Proof. exact (@lem17362 (term5041 A g t s) (term249 A B u f t)). Qed.
Lemma lem3549949 {A B : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) (t : A -> Prop) : (term5750 A B g s u f t) = (term5749 A B g s u f t).
Proof. exact (TRANS (@lem3549948 A B g s u f t) (@lem3549947 A B g s u f t)). Qed.
Lemma lem3549950 {A : Type'} (P : type686 A) : (term298 A P) = (term299 A P).
Proof. exact (@lem18392 (A -> Prop) P). Qed.
Lemma lem3549951 {A B : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) : (term5751 A B g s u f) = (term5752 A B g s u f).
Proof. exact (@lem3549950 A (term5712 A B g s u f)). Qed.
Lemma lem3549952 {A B : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) (t : A -> Prop) : (term5753 A B g s u f t) = (term5711 A B g s u f t).
Proof. exact (eq_refl (term5753 A B g s u f t)). Qed.
Lemma lem3549953 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem3549954 {A B : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) (t : A -> Prop) : (term5754 A B g s u f t) = (term5750 A B g s u f t).
Proof. exact (MK_COMB (@lem3549953) (@lem3549952 A B g s u f t)). Qed.
Lemma lem3549955 {A B : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) (t : A -> Prop) : (term5754 A B g s u f t) = (term5749 A B g s u f t).
Proof. exact (TRANS (@lem3549954 A B g s u f t) (@lem3549949 A B g s u f t)). Qed.
Lemma lem3549956 {A B : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) : (term5755 A B g s u f) = (term5756 A B g s u f).
Proof. exact (fun_ext (fun t : A -> Prop => @lem3549955 A B g s u f t)). Qed.
Lemma lem3549957 {A : Type'} : (@ex (A -> Prop)) = (@ex (A -> Prop)).
Proof. exact (eq_refl (@ex (A -> Prop))). Qed.
Lemma lem3549958 {A B : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) : (term5752 A B g s u f) = (term5757 A B g s u f).
Proof. exact (MK_COMB (@lem3549957 A) (@lem3549956 A B g s u f)). Qed.
Lemma lem3549959 {A B : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) : (term5751 A B g s u f) = (term5757 A B g s u f).
Proof. exact (TRANS (@lem3549951 A B g s u f) (@lem3549958 A B g s u f)). Qed.
Lemma lem3549960 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem3549961 {A : Type'} (g : type686 A) (s : A -> Prop) : (term5758 A g s) = (term5759 A g s).
Proof. exact (MK_COMB (@lem3549960) (@lem3549889 A g s)). Qed.
Lemma lem3549962 {A B : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) : (term5760 A B g s u f) = (term5761 A B g s u f).
Proof. exact (MK_COMB (@lem3549961 A g s) (@lem3549959 A B g s u f)). Qed.
Lemma lem3549963 {A B : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) : (term5739 A B g s u f) = (term5760 A B g s u f).
Proof. exact (@lem17045 (term5048 A g s) (term5713 A B g s u f)). Qed.
Lemma lem3549964 {A B : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) : (term5739 A B g s u f) = (term5761 A B g s u f).
Proof. exact (TRANS (@lem3549963 A B g s u f) (@lem3549962 A B g s u f)). Qed.
Lemma lem3550171 {A : Type'} (P : Prop) (Q : A -> Prop) : (term415 A P Q) = (term416 A P Q).
Proof. exact (EQ_MP (@lem18929 A P Q) (@lem18928 A P Q)). Qed.
Lemma lem3550172 {A : Type'} (P : Prop) (Q : A -> Prop) : (term415 A P Q) = (term416 A P Q).
Proof. exact (@lem3550171 A P Q). Qed.
Lemma lem3550173 {A B : Type'} (u : A -> Prop) (x : A) (f : A -> B) (t : A -> Prop) : (term5273 A B u x f t) = (term5274 A B u x f t).
Proof. exact (@lem3550172 A (u x) (term239 A B x f t)). Qed.
Lemma lem3550174 {A B : Type'} (x : A) (f : A -> B) (t : A -> Prop) (x' : A) : (term315 A B x f t x') = (term237 A B x f t x').
Proof. exact (eq_refl (term315 A B x f t x')). Qed.
Lemma lem3550175 {A B : Type'} (x : A) (f : A -> B) (t : A -> Prop) : (term5275 A B x f t) = (term239 A B x f t).
Proof. exact (fun_ext (fun x' : A => @lem3550174 A B x f t x')). Qed.
Lemma lem3550176 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem3550177 {A B : Type'} (x : A) (f : A -> B) (t : A -> Prop) : (term5276 A B x f t) = (term240 A B x f t).
Proof. exact (MK_COMB (@lem3550176 A) (@lem3550175 A B x f t)). Qed.
Lemma lem3550178 {A : Type'} (u : A -> Prop) (x : A) : (term234 A u x) = (term234 A u x).
Proof. exact (eq_refl (term234 A u x)). Qed.
Lemma lem3550179 {A B : Type'} (u : A -> Prop) (x : A) (f : A -> B) (t : A -> Prop) : (term5273 A B u x f t) = (term241 A B u x f t).
Proof. exact (MK_COMB (@lem3550178 A u x) (@lem3550177 A B x f t)). Qed.
Lemma lem3550180 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem3550181 {A B : Type'} (u : A -> Prop) (x : A) (f : A -> B) (t : A -> Prop) : (term5277 A B u x f t) = (term5278 A B u x f t).
Proof. exact (MK_COMB (@lem3550180) (@lem3550179 A B u x f t)). Qed.
Lemma lem3550182 {A B : Type'} (x : A) (f : A -> B) (t : A -> Prop) (x' : A) : (term315 A B x f t x') = (term237 A B x f t x').
Proof. exact (eq_refl (term315 A B x f t x')). Qed.
Lemma lem3550183 {A : Type'} (u : A -> Prop) (x : A) : (term234 A u x) = (term234 A u x).
Proof. exact (eq_refl (term234 A u x)). Qed.
Lemma lem3550184 {A B : Type'} (u : A -> Prop) (x : A) (f : A -> B) (t : A -> Prop) (x' : A) : (term5279 A B u x f t x') = (term5280 A B u x f t x').
Proof. exact (MK_COMB (@lem3550183 A u x) (@lem3550182 A B x f t x')). Qed.
Lemma lem3550185 {A B : Type'} (u : A -> Prop) (x : A) (f : A -> B) (t : A -> Prop) : (term5281 A B u x f t) = (term5282 A B u x f t).
Proof. exact (fun_ext (fun x' : A => @lem3550184 A B u x f t x')). Qed.
Lemma lem3550186 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem3550187 {A B : Type'} (u : A -> Prop) (x : A) (f : A -> B) (t : A -> Prop) : (term5274 A B u x f t) = (term5283 A B u x f t).
Proof. exact (MK_COMB (@lem3550186 A) (@lem3550185 A B u x f t)). Qed.
Lemma lem3550188 {A B : Type'} (u : A -> Prop) (x : A) (f : A -> B) (t : A -> Prop) : ((term5273 A B u x f t) = (term5274 A B u x f t)) = ((term241 A B u x f t) = (term5283 A B u x f t)).
Proof. exact (MK_COMB (@lem3550181 A B u x f t) (@lem3550187 A B u x f t)). Qed.
Lemma lem3550189 {A B : Type'} (u : A -> Prop) (x : A) (f : A -> B) (t : A -> Prop) : (term241 A B u x f t) = (term5283 A B u x f t).
Proof. exact (EQ_MP (@lem3550188 A B u x f t) (@lem3550173 A B u x f t)). Qed.
Lemma lem3550190 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem3550191 {A B : Type'} (u : A -> Prop) (x : A) (f : A -> B) (t : A -> Prop) : (term5197 A B u x f t) = (term5284 A B u x f t).
Proof. exact (MK_COMB (@lem3550190) (@lem3550189 A B u x f t)). Qed.
Lemma lem3550192 {A : Type'} (t : A -> Prop) (x : A) : (term618 A t x) = (term618 A t x).
Proof. exact (eq_refl (term618 A t x)). Qed.
Lemma lem3550193 {A B : Type'} (u : A -> Prop) (f : A -> B) (t : A -> Prop) (x : A) : (term5198 A B u f t x) = (term5285 A B u f t x).
Proof. exact (MK_COMB (@lem3550191 A B u x f t) (@lem3550192 A t x)). Qed.
Lemma lem3550195 {A : Type'} (P : A -> Prop) (Q : Prop) : (term398 A P Q) = (term399 A P Q).
Proof. exact (EQ_MP (@lem18923 A P Q) (@lem18922 A P Q)). Qed.
Lemma lem3550196 {A : Type'} (P : A -> Prop) (Q : Prop) : (term398 A P Q) = (term399 A P Q).
Proof. exact (@lem3550195 A P Q). Qed.
Lemma lem3550197 {A B : Type'} (u : A -> Prop) (f : A -> B) (t : A -> Prop) (x : A) : (term5286 A B u f t x) = (term5287 A B u f t x).
Proof. exact (@lem3550196 A (term5282 A B u x f t) (term618 A t x)). Qed.
Lemma lem3550198 {A B : Type'} (u : A -> Prop) (x : A) (f : A -> B) (t : A -> Prop) (x' : A) : (term5288 A B u x f t x') = (term5280 A B u x f t x').
Proof. exact (eq_refl (term5288 A B u x f t x')). Qed.
Lemma lem3550199 {A B : Type'} (u : A -> Prop) (x : A) (f : A -> B) (t : A -> Prop) : (term5289 A B u x f t) = (term5282 A B u x f t).
Proof. exact (fun_ext (fun x' : A => @lem3550198 A B u x f t x')). Qed.
Lemma lem3550200 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem3550201 {A B : Type'} (u : A -> Prop) (x : A) (f : A -> B) (t : A -> Prop) : (term5290 A B u x f t) = (term5283 A B u x f t).
Proof. exact (MK_COMB (@lem3550200 A) (@lem3550199 A B u x f t)). Qed.
Lemma lem3550202 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem3550203 {A B : Type'} (u : A -> Prop) (x : A) (f : A -> B) (t : A -> Prop) : (term5291 A B u x f t) = (term5284 A B u x f t).
Proof. exact (MK_COMB (@lem3550202) (@lem3550201 A B u x f t)). Qed.
Lemma lem3550204 {A : Type'} (t : A -> Prop) (x : A) : (term618 A t x) = (term618 A t x).
Proof. exact (eq_refl (term618 A t x)). Qed.
Lemma lem3550205 {A B : Type'} (u : A -> Prop) (f : A -> B) (t : A -> Prop) (x : A) : (term5286 A B u f t x) = (term5285 A B u f t x).
Proof. exact (MK_COMB (@lem3550203 A B u x f t) (@lem3550204 A t x)). Qed.
Lemma lem3550206 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem3550207 {A B : Type'} (u : A -> Prop) (f : A -> B) (t : A -> Prop) (x : A) : (term5292 A B u f t x) = (term5293 A B u f t x).
Proof. exact (MK_COMB (@lem3550206) (@lem3550205 A B u f t x)). Qed.
Lemma lem3550208 {A B : Type'} (u : A -> Prop) (x : A) (f : A -> B) (t : A -> Prop) (x' : A) : (term5288 A B u x f t x') = (term5280 A B u x f t x').
Proof. exact (eq_refl (term5288 A B u x f t x')). Qed.
Lemma lem3550209 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem3550210 {A B : Type'} (u : A -> Prop) (x : A) (f : A -> B) (t : A -> Prop) (x' : A) : (term5294 A B u x f t x') = (term5295 A B u x f t x').
Proof. exact (MK_COMB (@lem3550209) (@lem3550208 A B u x f t x')). Qed.
Lemma lem3550211 {A : Type'} (t : A -> Prop) (x : A) : (term618 A t x) = (term618 A t x).
Proof. exact (eq_refl (term618 A t x)). Qed.
Lemma lem3550212 {A B : Type'} (u : A -> Prop) (f : A -> B) (x' : A) (t : A -> Prop) (x : A) : (term5296 A B u f x' t x) = (term5297 A B u f x' t x).
Proof. exact (MK_COMB (@lem3550210 A B u x f t x') (@lem3550211 A t x)). Qed.
Lemma lem3550213 {A B : Type'} (u : A -> Prop) (f : A -> B) (t : A -> Prop) (x : A) : (term5298 A B u f t x) = (term5299 A B u f t x).
Proof. exact (fun_ext (fun x' : A => @lem3550212 A B u f x' t x)). Qed.
Lemma lem3550214 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem3550215 {A B : Type'} (u : A -> Prop) (f : A -> B) (t : A -> Prop) (x : A) : (term5287 A B u f t x) = (term5300 A B u f t x).
Proof. exact (MK_COMB (@lem3550214 A) (@lem3550213 A B u f t x)). Qed.
Lemma lem3550216 {A B : Type'} (u : A -> Prop) (f : A -> B) (t : A -> Prop) (x : A) : ((term5286 A B u f t x) = (term5287 A B u f t x)) = ((term5285 A B u f t x) = (term5300 A B u f t x)).
Proof. exact (MK_COMB (@lem3550207 A B u f t x) (@lem3550215 A B u f t x)). Qed.
Lemma lem3550217 {A B : Type'} (u : A -> Prop) (f : A -> B) (t : A -> Prop) (x : A) : (term5285 A B u f t x) = (term5300 A B u f t x).
Proof. exact (EQ_MP (@lem3550216 A B u f t x) (@lem3550197 A B u f t x)). Qed.
Lemma lem3550218 {A B : Type'} (u : A -> Prop) (f : A -> B) (t : A -> Prop) (x : A) : (term5198 A B u f t x) = (term5300 A B u f t x).
Proof. exact (TRANS (@lem3550193 A B u f t x) (@lem3550217 A B u f t x)). Qed.
Lemma lem3550219 {A B : Type'} (u : A -> Prop) (f : A -> B) (t : A -> Prop) : (term5207 A B u f t) = (term5301 A B u f t).
Proof. exact (fun_ext (fun x : A => @lem3550218 A B u f t x)). Qed.
Lemma lem3550220 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem3550221 {A B : Type'} (u : A -> Prop) (f : A -> B) (t : A -> Prop) : (term5208 A B u f t) = (term5302 A B u f t).
Proof. exact (MK_COMB (@lem3550220 A) (@lem3550219 A B u f t)). Qed.
Lemma lem3550222 {A : Type'} (t : A -> Prop) (u : A -> Prop) : (term5744 A t u) = (term5744 A t u).
Proof. exact (eq_refl (term5744 A t u)). Qed.
Lemma lem3550223 {A B : Type'} (u : A -> Prop) (f : A -> B) (t : A -> Prop) : (term5746 A B u f t) = (term5762 A B u f t).
Proof. exact (MK_COMB (@lem3550222 A t u) (@lem3550221 A B u f t)). Qed.
Lemma lem3550225 {A : Type'} (P : A -> Prop) (Q : A -> Prop) : (term1525 A P Q) = (term1526 A P Q).
Proof. exact (EQ_MP (@lem18917 A P Q) (@lem18916 A P Q)). Qed.
Lemma lem3550226 {A : Type'} (P : A -> Prop) (Q : A -> Prop) : (term1525 A P Q) = (term1526 A P Q).
Proof. exact (@lem3550225 A P Q). Qed.
Lemma lem3550227 {A B : Type'} (u : A -> Prop) (f : A -> B) (t : A -> Prop) : (term5763 A B u f t) = (term5764 A B u f t).
Proof. exact (@lem3550226 A (term5262 A t u) (term5301 A B u f t)). Qed.
Lemma lem3550228 {A : Type'} (t : A -> Prop) (u : A -> Prop) (x : A) : (term5394 A t u x) = (term5256 A t u x).
Proof. exact (eq_refl (term5394 A t u x)). Qed.
Lemma lem3550229 {A : Type'} (t : A -> Prop) (u : A -> Prop) : (term5395 A t u) = (term5262 A t u).
Proof. exact (fun_ext (fun x : A => @lem3550228 A t u x)). Qed.
Lemma lem3550230 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem3550231 {A : Type'} (t : A -> Prop) (u : A -> Prop) : (term5396 A t u) = (term5263 A t u).
Proof. exact (MK_COMB (@lem3550230 A) (@lem3550229 A t u)). Qed.
Lemma lem3550232 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem3550233 {A : Type'} (t : A -> Prop) (u : A -> Prop) : (term5765 A t u) = (term5744 A t u).
Proof. exact (MK_COMB (@lem3550232) (@lem3550231 A t u)). Qed.
Lemma lem3550234 {A B : Type'} (u : A -> Prop) (f : A -> B) (t : A -> Prop) (x : A) : (term5307 A B u f t x) = (term5300 A B u f t x).
Proof. exact (eq_refl (term5307 A B u f t x)). Qed.
Lemma lem3550235 {A B : Type'} (u : A -> Prop) (f : A -> B) (t : A -> Prop) : (term5308 A B u f t) = (term5301 A B u f t).
Proof. exact (fun_ext (fun x : A => @lem3550234 A B u f t x)). Qed.
Lemma lem3550236 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem3550237 {A B : Type'} (u : A -> Prop) (f : A -> B) (t : A -> Prop) : (term5309 A B u f t) = (term5302 A B u f t).
Proof. exact (MK_COMB (@lem3550236 A) (@lem3550235 A B u f t)). Qed.
Lemma lem3550238 {A B : Type'} (u : A -> Prop) (f : A -> B) (t : A -> Prop) : (term5763 A B u f t) = (term5762 A B u f t).
Proof. exact (MK_COMB (@lem3550233 A t u) (@lem3550237 A B u f t)). Qed.
Lemma lem3550239 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem3550240 {A B : Type'} (u : A -> Prop) (f : A -> B) (t : A -> Prop) : (term5766 A B u f t) = (term5767 A B u f t).
Proof. exact (MK_COMB (@lem3550239) (@lem3550238 A B u f t)). Qed.
Lemma lem3550241 {A : Type'} (t : A -> Prop) (u : A -> Prop) (x : A) : (term5394 A t u x) = (term5256 A t u x).
Proof. exact (eq_refl (term5394 A t u x)). Qed.
Lemma lem3550242 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem3550243 {A : Type'} (t : A -> Prop) (u : A -> Prop) (x : A) : (term5768 A t u x) = (term5769 A t u x).
Proof. exact (MK_COMB (@lem3550242) (@lem3550241 A t u x)). Qed.
Lemma lem3550244 {A B : Type'} (u : A -> Prop) (f : A -> B) (t : A -> Prop) (x : A) : (term5307 A B u f t x) = (term5300 A B u f t x).
Proof. exact (eq_refl (term5307 A B u f t x)). Qed.
Lemma lem3550245 {A B : Type'} (u : A -> Prop) (f : A -> B) (t : A -> Prop) (x : A) : (term5770 A B u f t x) = (term5771 A B u f t x).
Proof. exact (MK_COMB (@lem3550243 A t u x) (@lem3550244 A B u f t x)). Qed.
Lemma lem3550246 {A B : Type'} (u : A -> Prop) (f : A -> B) (t : A -> Prop) : (term5772 A B u f t) = (term5773 A B u f t).
Proof. exact (fun_ext (fun x : A => @lem3550245 A B u f t x)). Qed.
Lemma lem3550247 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem3550248 {A B : Type'} (u : A -> Prop) (f : A -> B) (t : A -> Prop) : (term5764 A B u f t) = (term5774 A B u f t).
Proof. exact (MK_COMB (@lem3550247 A) (@lem3550246 A B u f t)). Qed.
Lemma lem3550249 {A B : Type'} (u : A -> Prop) (f : A -> B) (t : A -> Prop) : ((term5763 A B u f t) = (term5764 A B u f t)) = ((term5762 A B u f t) = (term5774 A B u f t)).
Proof. exact (MK_COMB (@lem3550240 A B u f t) (@lem3550248 A B u f t)). Qed.
Lemma lem3550250 {A B : Type'} (u : A -> Prop) (f : A -> B) (t : A -> Prop) : (term5762 A B u f t) = (term5774 A B u f t).
Proof. exact (EQ_MP (@lem3550249 A B u f t) (@lem3550227 A B u f t)). Qed.
Lemma lem3550252 {A : Type'} (P : Prop) (Q : A -> Prop) : (term434 A P Q) = (term435 A P Q).
Proof. exact (EQ_MP (@lem18911 A P Q) (@lem18910 A P Q)). Qed.
Lemma lem3550253 {A : Type'} (P : Prop) (Q : A -> Prop) : (term434 A P Q) = (term435 A P Q).
Proof. exact (@lem3550252 A P Q). Qed.
Lemma lem3550254 {A B : Type'} (u : A -> Prop) (f : A -> B) (t : A -> Prop) (x : A) : (term5775 A B u f t x) = (term5776 A B u f t x).
Proof. exact (@lem3550253 A (term5256 A t u x) (term5299 A B u f t x)). Qed.
Lemma lem3550255 {A B : Type'} (u : A -> Prop) (f : A -> B) (x' : A) (t : A -> Prop) (x : A) : (term5325 A B u f t x x') = (term5297 A B u f x' t x).
Proof. exact (eq_refl (term5325 A B u f t x x')). Qed.
Lemma lem3550256 {A B : Type'} (u : A -> Prop) (f : A -> B) (t : A -> Prop) (x : A) : (term5326 A B u f t x) = (term5299 A B u f t x).
Proof. exact (fun_ext (fun x' : A => @lem3550255 A B u f x' t x)). Qed.
Lemma lem3550257 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem3550258 {A B : Type'} (u : A -> Prop) (f : A -> B) (t : A -> Prop) (x : A) : (term5327 A B u f t x) = (term5300 A B u f t x).
Proof. exact (MK_COMB (@lem3550257 A) (@lem3550256 A B u f t x)). Qed.
Lemma lem3550259 {A : Type'} (t : A -> Prop) (u : A -> Prop) (x : A) : (term5769 A t u x) = (term5769 A t u x).
Proof. exact (eq_refl (term5769 A t u x)). Qed.
Lemma lem3550260 {A B : Type'} (u : A -> Prop) (f : A -> B) (t : A -> Prop) (x : A) : (term5775 A B u f t x) = (term5771 A B u f t x).
Proof. exact (MK_COMB (@lem3550259 A t u x) (@lem3550258 A B u f t x)). Qed.
Lemma lem3550261 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem3550262 {A B : Type'} (u : A -> Prop) (f : A -> B) (t : A -> Prop) (x : A) : (term5777 A B u f t x) = (term5778 A B u f t x).
Proof. exact (MK_COMB (@lem3550261) (@lem3550260 A B u f t x)). Qed.
Lemma lem3550263 {A B : Type'} (u : A -> Prop) (f : A -> B) (x' : A) (t : A -> Prop) (x : A) : (term5325 A B u f t x x') = (term5297 A B u f x' t x).
Proof. exact (eq_refl (term5325 A B u f t x x')). Qed.
Lemma lem3550264 {A : Type'} (t : A -> Prop) (u : A -> Prop) (x : A) : (term5769 A t u x) = (term5769 A t u x).
Proof. exact (eq_refl (term5769 A t u x)). Qed.
Lemma lem3550265 {A B : Type'} (u : A -> Prop) (f : A -> B) (x' : A) (t : A -> Prop) (x : A) : (term5779 A B u f t x x') = (term5780 A B u f x' t x).
Proof. exact (MK_COMB (@lem3550264 A t u x) (@lem3550263 A B u f x' t x)). Qed.
Lemma lem3550266 {A B : Type'} (u : A -> Prop) (f : A -> B) (t : A -> Prop) (x : A) : (term5781 A B u f t x) = (term5782 A B u f t x).
Proof. exact (fun_ext (fun x' : A => @lem3550265 A B u f x' t x)). Qed.
Lemma lem3550267 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem3550268 {A B : Type'} (u : A -> Prop) (f : A -> B) (t : A -> Prop) (x : A) : (term5776 A B u f t x) = (term5783 A B u f t x).
Proof. exact (MK_COMB (@lem3550267 A) (@lem3550266 A B u f t x)). Qed.
Lemma lem3550269 {A B : Type'} (u : A -> Prop) (f : A -> B) (t : A -> Prop) (x : A) : ((term5775 A B u f t x) = (term5776 A B u f t x)) = ((term5771 A B u f t x) = (term5783 A B u f t x)).
Proof. exact (MK_COMB (@lem3550262 A B u f t x) (@lem3550268 A B u f t x)). Qed.
Lemma lem3550270 {A B : Type'} (u : A -> Prop) (f : A -> B) (t : A -> Prop) (x : A) : (term5771 A B u f t x) = (term5783 A B u f t x).
Proof. exact (EQ_MP (@lem3550269 A B u f t x) (@lem3550254 A B u f t x)). Qed.
Lemma lem3550271 {A B : Type'} (u : A -> Prop) (f : A -> B) (t : A -> Prop) : (term5773 A B u f t) = (term5784 A B u f t).
Proof. exact (fun_ext (fun x : A => @lem3550270 A B u f t x)). Qed.
Lemma lem3550272 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem3550273 {A B : Type'} (u : A -> Prop) (f : A -> B) (t : A -> Prop) : (term5774 A B u f t) = (term5785 A B u f t).
Proof. exact (MK_COMB (@lem3550272 A) (@lem3550271 A B u f t)). Qed.
Lemma lem3550274 {A B : Type'} (u : A -> Prop) (f : A -> B) (t : A -> Prop) : (term5762 A B u f t) = (term5785 A B u f t).
Proof. exact (TRANS (@lem3550250 A B u f t) (@lem3550273 A B u f t)). Qed.
Lemma lem3550275 {A B : Type'} (u : A -> Prop) (f : A -> B) (t : A -> Prop) : (term5746 A B u f t) = (term5785 A B u f t).
Proof. exact (TRANS (@lem3550223 A B u f t) (@lem3550274 A B u f t)). Qed.
Lemma lem3550276 {A : Type'} (g : type686 A) (t : A -> Prop) (s : A -> Prop) : (term5191 A g t s) = (term5191 A g t s).
Proof. exact (eq_refl (term5191 A g t s)). Qed.
Lemma lem3550277 {A B : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) (t : A -> Prop) : (term5749 A B g s u f t) = (term5786 A B g s u f t).
Proof. exact (MK_COMB (@lem3550276 A g t s) (@lem3550275 A B u f t)). Qed.
Lemma lem3550279 {A : Type'} (P : Prop) (Q : A -> Prop) : (term415 A P Q) = (term416 A P Q).
Proof. exact (EQ_MP (@lem18929 A P Q) (@lem18928 A P Q)). Qed.
Lemma lem3550280 {A : Type'} (P : Prop) (Q : A -> Prop) : (term415 A P Q) = (term416 A P Q).
Proof. exact (@lem3550279 A P Q). Qed.
Lemma lem3550281 {A B : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) (t : A -> Prop) : (term5787 A B g s u f t) = (term5788 A B g s u f t).
Proof. exact (@lem3550280 A (term5041 A g t s) (term5784 A B u f t)). Qed.
Lemma lem3550282 {A B : Type'} (u : A -> Prop) (f : A -> B) (t : A -> Prop) (x : A) : (term5789 A B u f t x) = (term5783 A B u f t x).
Proof. exact (eq_refl (term5789 A B u f t x)). Qed.
Lemma lem3550283 {A B : Type'} (u : A -> Prop) (f : A -> B) (t : A -> Prop) : (term5790 A B u f t) = (term5784 A B u f t).
Proof. exact (fun_ext (fun x : A => @lem3550282 A B u f t x)). Qed.
Lemma lem3550284 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem3550285 {A B : Type'} (u : A -> Prop) (f : A -> B) (t : A -> Prop) : (term5791 A B u f t) = (term5785 A B u f t).
Proof. exact (MK_COMB (@lem3550284 A) (@lem3550283 A B u f t)). Qed.
Lemma lem3550286 {A : Type'} (g : type686 A) (t : A -> Prop) (s : A -> Prop) : (term5191 A g t s) = (term5191 A g t s).
Proof. exact (eq_refl (term5191 A g t s)). Qed.
Lemma lem3550287 {A B : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) (t : A -> Prop) : (term5787 A B g s u f t) = (term5786 A B g s u f t).
Proof. exact (MK_COMB (@lem3550286 A g t s) (@lem3550285 A B u f t)). Qed.
Lemma lem3550288 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem3550289 {A B : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) (t : A -> Prop) : (term5792 A B g s u f t) = (term5793 A B g s u f t).
Proof. exact (MK_COMB (@lem3550288) (@lem3550287 A B g s u f t)). Qed.
Lemma lem3550290 {A B : Type'} (u : A -> Prop) (f : A -> B) (t : A -> Prop) (x : A) : (term5789 A B u f t x) = (term5783 A B u f t x).
Proof. exact (eq_refl (term5789 A B u f t x)). Qed.
Lemma lem3550291 {A : Type'} (g : type686 A) (t : A -> Prop) (s : A -> Prop) : (term5191 A g t s) = (term5191 A g t s).
Proof. exact (eq_refl (term5191 A g t s)). Qed.
Lemma lem3550292 {A B : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) (t : A -> Prop) (x : A) : (term5794 A B g s u f t x) = (term5795 A B g s u f t x).
Proof. exact (MK_COMB (@lem3550291 A g t s) (@lem3550290 A B u f t x)). Qed.
Lemma lem3550293 {A B : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) (t : A -> Prop) : (term5796 A B g s u f t) = (term5797 A B g s u f t).
Proof. exact (fun_ext (fun x : A => @lem3550292 A B g s u f t x)). Qed.
Lemma lem3550294 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem3550295 {A B : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) (t : A -> Prop) : (term5788 A B g s u f t) = (term5798 A B g s u f t).
Proof. exact (MK_COMB (@lem3550294 A) (@lem3550293 A B g s u f t)). Qed.
Lemma lem3550296 {A B : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) (t : A -> Prop) : ((term5787 A B g s u f t) = (term5788 A B g s u f t)) = ((term5786 A B g s u f t) = (term5798 A B g s u f t)).
Proof. exact (MK_COMB (@lem3550289 A B g s u f t) (@lem3550295 A B g s u f t)). Qed.
Lemma lem3550297 {A B : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) (t : A -> Prop) : (term5786 A B g s u f t) = (term5798 A B g s u f t).
Proof. exact (EQ_MP (@lem3550296 A B g s u f t) (@lem3550281 A B g s u f t)). Qed.
Lemma lem3550299 {A : Type'} (P : Prop) (Q : A -> Prop) : (term415 A P Q) = (term416 A P Q).
Proof. exact (EQ_MP (@lem18929 A P Q) (@lem18928 A P Q)). Qed.
Lemma lem3550300 {A : Type'} (P : Prop) (Q : A -> Prop) : (term415 A P Q) = (term416 A P Q).
Proof. exact (@lem3550299 A P Q). Qed.
Lemma lem3550301 {A B : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) (t : A -> Prop) (x : A) : (term5799 A B g s u f t x) = (term5800 A B g s u f t x).
Proof. exact (@lem3550300 A (term5041 A g t s) (term5782 A B u f t x)). Qed.
Lemma lem3550302 {A B : Type'} (u : A -> Prop) (f : A -> B) (x' : A) (t : A -> Prop) (x : A) : (term5801 A B u f t x x') = (term5780 A B u f x' t x).
Proof. exact (eq_refl (term5801 A B u f t x x')). Qed.
Lemma lem3550303 {A B : Type'} (u : A -> Prop) (f : A -> B) (t : A -> Prop) (x : A) : (term5802 A B u f t x) = (term5782 A B u f t x).
Proof. exact (fun_ext (fun x' : A => @lem3550302 A B u f x' t x)). Qed.
Lemma lem3550304 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem3550305 {A B : Type'} (u : A -> Prop) (f : A -> B) (t : A -> Prop) (x : A) : (term5803 A B u f t x) = (term5783 A B u f t x).
Proof. exact (MK_COMB (@lem3550304 A) (@lem3550303 A B u f t x)). Qed.
Lemma lem3550306 {A : Type'} (g : type686 A) (t : A -> Prop) (s : A -> Prop) : (term5191 A g t s) = (term5191 A g t s).
Proof. exact (eq_refl (term5191 A g t s)). Qed.
Lemma lem3550307 {A B : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) (t : A -> Prop) (x : A) : (term5799 A B g s u f t x) = (term5795 A B g s u f t x).
Proof. exact (MK_COMB (@lem3550306 A g t s) (@lem3550305 A B u f t x)). Qed.
Lemma lem3550308 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem3550309 {A B : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) (t : A -> Prop) (x : A) : (term5804 A B g s u f t x) = (term5805 A B g s u f t x).
Proof. exact (MK_COMB (@lem3550308) (@lem3550307 A B g s u f t x)). Qed.
Lemma lem3550310 {A B : Type'} (u : A -> Prop) (f : A -> B) (x' : A) (t : A -> Prop) (x : A) : (term5801 A B u f t x x') = (term5780 A B u f x' t x).
Proof. exact (eq_refl (term5801 A B u f t x x')). Qed.
Lemma lem3550311 {A : Type'} (g : type686 A) (t : A -> Prop) (s : A -> Prop) : (term5191 A g t s) = (term5191 A g t s).
Proof. exact (eq_refl (term5191 A g t s)). Qed.
Lemma lem3550312 {A B : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) (x' : A) (t : A -> Prop) (x : A) : (term5806 A B g s u f t x x') = (term5807 A B g s u f x' t x).
Proof. exact (MK_COMB (@lem3550311 A g t s) (@lem3550310 A B u f x' t x)). Qed.
Lemma lem3550313 {A B : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) (t : A -> Prop) (x : A) : (term5808 A B g s u f t x) = (term5809 A B g s u f t x).
Proof. exact (fun_ext (fun x' : A => @lem3550312 A B g s u f x' t x)). Qed.
Lemma lem3550314 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem3550315 {A B : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) (t : A -> Prop) (x : A) : (term5800 A B g s u f t x) = (term5810 A B g s u f t x).
Proof. exact (MK_COMB (@lem3550314 A) (@lem3550313 A B g s u f t x)). Qed.
Lemma lem3550316 {A B : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) (t : A -> Prop) (x : A) : ((term5799 A B g s u f t x) = (term5800 A B g s u f t x)) = ((term5795 A B g s u f t x) = (term5810 A B g s u f t x)).
Proof. exact (MK_COMB (@lem3550309 A B g s u f t x) (@lem3550315 A B g s u f t x)). Qed.
Lemma lem3550317 {A B : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) (t : A -> Prop) (x : A) : (term5795 A B g s u f t x) = (term5810 A B g s u f t x).
Proof. exact (EQ_MP (@lem3550316 A B g s u f t x) (@lem3550301 A B g s u f t x)). Qed.
Lemma lem3550318 {A B : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) (t : A -> Prop) : (term5797 A B g s u f t) = (term5811 A B g s u f t).
Proof. exact (fun_ext (fun x : A => @lem3550317 A B g s u f t x)). Qed.
Lemma lem3550319 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem3550320 {A B : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) (t : A -> Prop) : (term5798 A B g s u f t) = (term5812 A B g s u f t).
Proof. exact (MK_COMB (@lem3550319 A) (@lem3550318 A B g s u f t)). Qed.
Lemma lem3550321 {A B : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) (t : A -> Prop) : (term5786 A B g s u f t) = (term5812 A B g s u f t).
Proof. exact (TRANS (@lem3550297 A B g s u f t) (@lem3550320 A B g s u f t)). Qed.
Lemma lem3550322 {A B : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) (t : A -> Prop) : (term5749 A B g s u f t) = (term5812 A B g s u f t).
Proof. exact (TRANS (@lem3550277 A B g s u f t) (@lem3550321 A B g s u f t)). Qed.
Lemma lem3550323 {A B : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) : (term5756 A B g s u f) = (term5813 A B g s u f).
Proof. exact (fun_ext (fun t : A -> Prop => @lem3550322 A B g s u f t)). Qed.
Lemma lem3550324 {A : Type'} : (@ex (A -> Prop)) = (@ex (A -> Prop)).
Proof. exact (eq_refl (@ex (A -> Prop))). Qed.
Lemma lem3550325 {A B : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) : (term5757 A B g s u f) = (term5814 A B g s u f).
Proof. exact (MK_COMB (@lem3550324 A) (@lem3550323 A B g s u f)). Qed.
Lemma lem3550326 {A : Type'} (g : type686 A) (s : A -> Prop) : (term5759 A g s) = (term5759 A g s).
Proof. exact (eq_refl (term5759 A g s)). Qed.
Lemma lem3550327 {A B : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) : (term5761 A B g s u f) = (term5815 A B g s u f).
Proof. exact (MK_COMB (@lem3550326 A g s) (@lem3550325 A B g s u f)). Qed.
Lemma lem3550329 {A : Type'} (P : Prop) (Q : A -> Prop) : (term434 A P Q) = (term435 A P Q).
Proof. exact (EQ_MP (@lem18911 A P Q) (@lem18910 A P Q)). Qed.
Lemma lem3550330 {A : Type'} (P : Prop) (Q : type686 A) : (term436 A P Q) = (term437 A P Q).
Proof. exact (@lem3550329 (A -> Prop) P Q). Qed.
Lemma lem3550331 {A B : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) : (term5816 A B g s u f) = (term5817 A B g s u f).
Proof. exact (@lem3550330 A (term5741 A g s) (term5813 A B g s u f)). Qed.
Lemma lem3550332 {A B : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) (t : A -> Prop) : (term5818 A B g s u f t) = (term5812 A B g s u f t).
Proof. exact (eq_refl (term5818 A B g s u f t)). Qed.
Lemma lem3550333 {A B : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) : (term5819 A B g s u f) = (term5813 A B g s u f).
Proof. exact (fun_ext (fun t : A -> Prop => @lem3550332 A B g s u f t)). Qed.
Lemma lem3550334 {A : Type'} : (@ex (A -> Prop)) = (@ex (A -> Prop)).
Proof. exact (eq_refl (@ex (A -> Prop))). Qed.
Lemma lem3550335 {A B : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) : (term5820 A B g s u f) = (term5814 A B g s u f).
Proof. exact (MK_COMB (@lem3550334 A) (@lem3550333 A B g s u f)). Qed.
Lemma lem3550336 {A : Type'} (g : type686 A) (s : A -> Prop) : (term5759 A g s) = (term5759 A g s).
Proof. exact (eq_refl (term5759 A g s)). Qed.
Lemma lem3550337 {A B : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) : (term5816 A B g s u f) = (term5815 A B g s u f).
Proof. exact (MK_COMB (@lem3550336 A g s) (@lem3550335 A B g s u f)). Qed.
Lemma lem3550338 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem3550339 {A B : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) : (term5821 A B g s u f) = (term5822 A B g s u f).
Proof. exact (MK_COMB (@lem3550338) (@lem3550337 A B g s u f)). Qed.
Lemma lem3550340 {A B : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) (t : A -> Prop) : (term5818 A B g s u f t) = (term5812 A B g s u f t).
Proof. exact (eq_refl (term5818 A B g s u f t)). Qed.
Lemma lem3550341 {A : Type'} (g : type686 A) (s : A -> Prop) : (term5759 A g s) = (term5759 A g s).
Proof. exact (eq_refl (term5759 A g s)). Qed.
Lemma lem3550342 {A B : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) (t : A -> Prop) : (term5823 A B g s u f t) = (term5824 A B g s u f t).
Proof. exact (MK_COMB (@lem3550341 A g s) (@lem3550340 A B g s u f t)). Qed.
Lemma lem3550343 {A B : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) : (term5825 A B g s u f) = (term5826 A B g s u f).
Proof. exact (fun_ext (fun t : A -> Prop => @lem3550342 A B g s u f t)). Qed.
Lemma lem3550344 {A : Type'} : (@ex (A -> Prop)) = (@ex (A -> Prop)).
Proof. exact (eq_refl (@ex (A -> Prop))). Qed.
Lemma lem3550345 {A B : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) : (term5817 A B g s u f) = (term5827 A B g s u f).
Proof. exact (MK_COMB (@lem3550344 A) (@lem3550343 A B g s u f)). Qed.
Lemma lem3550346 {A B : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) : ((term5816 A B g s u f) = (term5817 A B g s u f)) = ((term5815 A B g s u f) = (term5827 A B g s u f)).
Proof. exact (MK_COMB (@lem3550339 A B g s u f) (@lem3550345 A B g s u f)). Qed.
Lemma lem3550347 {A B : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) : (term5815 A B g s u f) = (term5827 A B g s u f).
Proof. exact (EQ_MP (@lem3550346 A B g s u f) (@lem3550331 A B g s u f)). Qed.
Lemma lem3550349 {A : Type'} (P : Prop) (Q : A -> Prop) : (term434 A P Q) = (term435 A P Q).
Proof. exact (EQ_MP (@lem18911 A P Q) (@lem18910 A P Q)). Qed.
Lemma lem3550350 {A : Type'} (P : Prop) (Q : A -> Prop) : (term434 A P Q) = (term435 A P Q).
Proof. exact (@lem3550349 A P Q). Qed.
Lemma lem3550351 {A B : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) (t : A -> Prop) : (term5828 A B g s u f t) = (term5829 A B g s u f t).
Proof. exact (@lem3550350 A (term5741 A g s) (term5811 A B g s u f t)). Qed.
Lemma lem3550352 {A B : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) (t : A -> Prop) (x : A) : (term5830 A B g s u f t x) = (term5810 A B g s u f t x).
Proof. exact (eq_refl (term5830 A B g s u f t x)). Qed.
Lemma lem3550353 {A B : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) (t : A -> Prop) : (term5831 A B g s u f t) = (term5811 A B g s u f t).
Proof. exact (fun_ext (fun x : A => @lem3550352 A B g s u f t x)). Qed.
Lemma lem3550354 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem3550355 {A B : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) (t : A -> Prop) : (term5832 A B g s u f t) = (term5812 A B g s u f t).
Proof. exact (MK_COMB (@lem3550354 A) (@lem3550353 A B g s u f t)). Qed.
Lemma lem3550356 {A : Type'} (g : type686 A) (s : A -> Prop) : (term5759 A g s) = (term5759 A g s).
Proof. exact (eq_refl (term5759 A g s)). Qed.
Lemma lem3550357 {A B : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) (t : A -> Prop) : (term5828 A B g s u f t) = (term5824 A B g s u f t).
Proof. exact (MK_COMB (@lem3550356 A g s) (@lem3550355 A B g s u f t)). Qed.
Lemma lem3550358 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem3550359 {A B : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) (t : A -> Prop) : (term5833 A B g s u f t) = (term5834 A B g s u f t).
Proof. exact (MK_COMB (@lem3550358) (@lem3550357 A B g s u f t)). Qed.
Lemma lem3550360 {A B : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) (t : A -> Prop) (x : A) : (term5830 A B g s u f t x) = (term5810 A B g s u f t x).
Proof. exact (eq_refl (term5830 A B g s u f t x)). Qed.
Lemma lem3550361 {A : Type'} (g : type686 A) (s : A -> Prop) : (term5759 A g s) = (term5759 A g s).
Proof. exact (eq_refl (term5759 A g s)). Qed.
Lemma lem3550362 {A B : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) (t : A -> Prop) (x : A) : (term5835 A B g s u f t x) = (term5836 A B g s u f t x).
Proof. exact (MK_COMB (@lem3550361 A g s) (@lem3550360 A B g s u f t x)). Qed.
Lemma lem3550363 {A B : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) (t : A -> Prop) : (term5837 A B g s u f t) = (term5838 A B g s u f t).
Proof. exact (fun_ext (fun x : A => @lem3550362 A B g s u f t x)). Qed.
Lemma lem3550364 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem3550365 {A B : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) (t : A -> Prop) : (term5829 A B g s u f t) = (term5839 A B g s u f t).
Proof. exact (MK_COMB (@lem3550364 A) (@lem3550363 A B g s u f t)). Qed.
Lemma lem3550366 {A B : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) (t : A -> Prop) : ((term5828 A B g s u f t) = (term5829 A B g s u f t)) = ((term5824 A B g s u f t) = (term5839 A B g s u f t)).
Proof. exact (MK_COMB (@lem3550359 A B g s u f t) (@lem3550365 A B g s u f t)). Qed.
Lemma lem3550367 {A B : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) (t : A -> Prop) : (term5824 A B g s u f t) = (term5839 A B g s u f t).
Proof. exact (EQ_MP (@lem3550366 A B g s u f t) (@lem3550351 A B g s u f t)). Qed.
Lemma lem3550369 {A : Type'} (P : Prop) (Q : A -> Prop) : (term434 A P Q) = (term435 A P Q).
Proof. exact (EQ_MP (@lem18911 A P Q) (@lem18910 A P Q)). Qed.
Lemma lem3550370 {A : Type'} (P : Prop) (Q : A -> Prop) : (term434 A P Q) = (term435 A P Q).
Proof. exact (@lem3550369 A P Q). Qed.
Lemma lem3550371 {A B : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) (t : A -> Prop) (x : A) : (term5840 A B g s u f t x) = (term5841 A B g s u f t x).
Proof. exact (@lem3550370 A (term5741 A g s) (term5809 A B g s u f t x)). Qed.
Lemma lem3550372 {A B : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) (x' : A) (t : A -> Prop) (x : A) : (term5842 A B g s u f t x x') = (term5807 A B g s u f x' t x).
Proof. exact (eq_refl (term5842 A B g s u f t x x')). Qed.
Lemma lem3550373 {A B : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) (t : A -> Prop) (x : A) : (term5843 A B g s u f t x) = (term5809 A B g s u f t x).
Proof. exact (fun_ext (fun x' : A => @lem3550372 A B g s u f x' t x)). Qed.
Lemma lem3550374 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem3550375 {A B : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) (t : A -> Prop) (x : A) : (term5844 A B g s u f t x) = (term5810 A B g s u f t x).
Proof. exact (MK_COMB (@lem3550374 A) (@lem3550373 A B g s u f t x)). Qed.
Lemma lem3550376 {A : Type'} (g : type686 A) (s : A -> Prop) : (term5759 A g s) = (term5759 A g s).
Proof. exact (eq_refl (term5759 A g s)). Qed.
Lemma lem3550377 {A B : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) (t : A -> Prop) (x : A) : (term5840 A B g s u f t x) = (term5836 A B g s u f t x).
Proof. exact (MK_COMB (@lem3550376 A g s) (@lem3550375 A B g s u f t x)). Qed.
Lemma lem3550378 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem3550379 {A B : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) (t : A -> Prop) (x : A) : (term5845 A B g s u f t x) = (term5846 A B g s u f t x).
Proof. exact (MK_COMB (@lem3550378) (@lem3550377 A B g s u f t x)). Qed.
Lemma lem3550380 {A B : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) (x' : A) (t : A -> Prop) (x : A) : (term5842 A B g s u f t x x') = (term5807 A B g s u f x' t x).
Proof. exact (eq_refl (term5842 A B g s u f t x x')). Qed.
Lemma lem3550381 {A : Type'} (g : type686 A) (s : A -> Prop) : (term5759 A g s) = (term5759 A g s).
Proof. exact (eq_refl (term5759 A g s)). Qed.
Lemma lem3550382 {A B : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) (x' : A) (t : A -> Prop) (x : A) : (term5847 A B g s u f t x x') = (term5848 A B g s u f x' t x).
Proof. exact (MK_COMB (@lem3550381 A g s) (@lem3550380 A B g s u f x' t x)). Qed.
Lemma lem3550383 {A B : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) (t : A -> Prop) (x : A) : (term5849 A B g s u f t x) = (term5850 A B g s u f t x).
Proof. exact (fun_ext (fun x' : A => @lem3550382 A B g s u f x' t x)). Qed.
Lemma lem3550384 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem3550385 {A B : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) (t : A -> Prop) (x : A) : (term5841 A B g s u f t x) = (term5851 A B g s u f t x).
Proof. exact (MK_COMB (@lem3550384 A) (@lem3550383 A B g s u f t x)). Qed.
Lemma lem3550386 {A B : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) (t : A -> Prop) (x : A) : ((term5840 A B g s u f t x) = (term5841 A B g s u f t x)) = ((term5836 A B g s u f t x) = (term5851 A B g s u f t x)).
Proof. exact (MK_COMB (@lem3550379 A B g s u f t x) (@lem3550385 A B g s u f t x)). Qed.
Lemma lem3550387 {A B : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) (t : A -> Prop) (x : A) : (term5836 A B g s u f t x) = (term5851 A B g s u f t x).
Proof. exact (EQ_MP (@lem3550386 A B g s u f t x) (@lem3550371 A B g s u f t x)). Qed.
Lemma lem3550388 {A B : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) (t : A -> Prop) : (term5838 A B g s u f t) = (term5852 A B g s u f t).
Proof. exact (fun_ext (fun x : A => @lem3550387 A B g s u f t x)). Qed.
Lemma lem3550389 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem3550390 {A B : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) (t : A -> Prop) : (term5839 A B g s u f t) = (term5853 A B g s u f t).
Proof. exact (MK_COMB (@lem3550389 A) (@lem3550388 A B g s u f t)). Qed.
Lemma lem3550391 {A B : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) (t : A -> Prop) : (term5824 A B g s u f t) = (term5853 A B g s u f t).
Proof. exact (TRANS (@lem3550367 A B g s u f t) (@lem3550390 A B g s u f t)). Qed.
Lemma lem3550392 {A B : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) : (term5826 A B g s u f) = (term5854 A B g s u f).
Proof. exact (fun_ext (fun t : A -> Prop => @lem3550391 A B g s u f t)). Qed.
Lemma lem3550393 {A : Type'} : (@ex (A -> Prop)) = (@ex (A -> Prop)).
Proof. exact (eq_refl (@ex (A -> Prop))). Qed.
Lemma lem3550394 {A B : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) : (term5827 A B g s u f) = (term5855 A B g s u f).
Proof. exact (MK_COMB (@lem3550393 A) (@lem3550392 A B g s u f)). Qed.
Lemma lem3550395 {A B : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) : (term5815 A B g s u f) = (term5855 A B g s u f).
Proof. exact (TRANS (@lem3550347 A B g s u f) (@lem3550394 A B g s u f)). Qed.
Lemma lem3550397 {A B : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) : (term5761 A B g s u f) = (term5855 A B g s u f).
Proof. exact (TRANS (@lem3550327 A B g s u f) (@lem3550395 A B g s u f)). Qed.
Lemma lem3550398 {A B : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) : (term5739 A B g s u f) = (term5855 A B g s u f).
Proof. exact (TRANS (@lem3549964 A B g s u f) (@lem3550397 A B g s u f)). Qed.
Lemma lem3550399 {A B : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) (h1 : term5739 A B g s u f) : term5855 A B g s u f.
Proof. exact (EQ_MP (@lem3550398 A B g s u f) (@lem3549467 A B g s u f h1)). Qed.
Lemma lem3550400 {A B : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) (t : A -> Prop) (h1 : term5853 A B g s u f t) : term5853 A B g s u f t.
Proof. exact (h1). Qed.
Lemma lem3550401 {A B : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) (t : A -> Prop) (x : A) (h1 : term5851 A B g s u f t x) : term5851 A B g s u f t x.
Proof. exact (h1). Qed.
Lemma lem3550402 {A B : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) (x' : A) (t : A -> Prop) (x : A) (h1 : term5848 A B g s u f x' t x) : term5848 A B g s u f x' t x.
Proof. exact (h1). Qed.
Lemma lem3550403 {A B : Type'} (x'' : A -> Prop) (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) (h1 : term5193 A B x'' g s u f) : term5193 A B x'' g s u f.
Proof. exact (h1). Qed.
Lemma lem3550404 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem3550409 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem3550410 {A : Type'} (f : A -> Prop) (x : A) : (f x) = (@I (A -> Prop) f x).
Proof. exact (@lem3550409 A Prop f x). Qed.
Lemma lem3550412 {A : Type'} (t : A -> Prop) (x : A) : (t x) = (@I (A -> Prop) t x).
Proof. exact (@lem3550410 A t x). Qed.
Lemma lem3550413 {A : Type'} (t : A -> Prop) (x : A) : (term618 A t x) = (term619 A t x).
Proof. exact (MK_COMB (@lem3550404) (@lem3550412 A t x)). Qed.
Lemma lem3550418 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem3550419 {A : Type'} (f : A -> Prop) (x : A) : (f x) = (@I (A -> Prop) f x).
Proof. exact (@lem3550418 A Prop f x). Qed.
Lemma lem3550421 {A : Type'} (t : A -> Prop) (x' : A) : (t x') = (@I (A -> Prop) t x').
Proof. exact (@lem3550419 A t x'). Qed.
Lemma lem3550422 {B : Type'} : (@eq B) = (@eq B).
Proof. exact (eq_refl (@eq B)). Qed.
Lemma lem3550427 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem3550429 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (@lem3550427 A B f x). Qed.
Lemma lem3550434 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem3550435 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (@lem3550434 A B f x). Qed.
Lemma lem3550437 {A B : Type'} (f : A -> B) (x' : A) : (f x') = (@I (A -> B) f x').
Proof. exact (@lem3550435 A B f x'). Qed.
Lemma lem3550438 {A B : Type'} (f : A -> B) (x : A) : (term620 A B f x) = (term621 A B f x).
Proof. exact (MK_COMB (@lem3550422 B) (@lem3550429 A B f x)). Qed.
Lemma lem3550439 {A B : Type'} (x : A) (f : A -> B) (x' : A) : ((f x) = (f x')) = ((@I (A -> B) f x) = (@I (A -> B) f x')).
Proof. exact (MK_COMB (@lem3550438 A B f x) (@lem3550437 A B f x')). Qed.
Lemma lem3550440 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem3550441 {A B : Type'} (x : A) (f : A -> B) (x' : A) : (term235 A B x f x') = (term971 A B x f x').
Proof. exact (MK_COMB (@lem3550440) (@lem3550439 A B x f x')). Qed.
Lemma lem3550442 {A B : Type'} (x : A) (f : A -> B) (t : A -> Prop) (x' : A) : (term237 A B x f t x') = (term844 A B x f t x').
Proof. exact (MK_COMB (@lem3550441 A B x f x') (@lem3550421 A t x')). Qed.
Lemma lem3550447 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem3550448 {A : Type'} (f : A -> Prop) (x : A) : (f x) = (@I (A -> Prop) f x).
Proof. exact (@lem3550447 A Prop f x). Qed.
Lemma lem3550450 {A : Type'} (u : A -> Prop) (x : A) : (u x) = (@I (A -> Prop) u x).
Proof. exact (@lem3550448 A u x). Qed.
Lemma lem3550451 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem3550452 {A : Type'} (u : A -> Prop) (x : A) : (term234 A u x) = (term966 A u x).
Proof. exact (MK_COMB (@lem3550451) (@lem3550450 A u x)). Qed.
Lemma lem3550453 {A B : Type'} (u : A -> Prop) (x : A) (f : A -> B) (t : A -> Prop) (x' : A) : (term5280 A B u x f t x') = (term972 A B u x f t x').
Proof. exact (MK_COMB (@lem3550452 A u x) (@lem3550442 A B x f t x')). Qed.
Lemma lem3550454 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem3550455 {A B : Type'} (u : A -> Prop) (x : A) (f : A -> B) (t : A -> Prop) (x' : A) : (term5295 A B u x f t x') = (term5532 A B u x f t x').
Proof. exact (MK_COMB (@lem3550454) (@lem3550453 A B u x f t x')). Qed.
Lemma lem3550456 {A B : Type'} (u : A -> Prop) (f : A -> B) (x' : A) (t : A -> Prop) (x : A) : (term5297 A B u f x' t x) = (term5533 A B u f x' t x).
Proof. exact (MK_COMB (@lem3550455 A B u x f t x') (@lem3550413 A t x)). Qed.
Lemma lem3550457 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem3550462 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem3550463 {A : Type'} (f : A -> Prop) (x : A) : (f x) = (@I (A -> Prop) f x).
Proof. exact (@lem3550462 A Prop f x). Qed.
Lemma lem3550465 {A : Type'} (u : A -> Prop) (x : A) : (u x) = (@I (A -> Prop) u x).
Proof. exact (@lem3550463 A u x). Qed.
Lemma lem3550466 {A : Type'} (u : A -> Prop) (x : A) : (term618 A u x) = (term619 A u x).
Proof. exact (MK_COMB (@lem3550457) (@lem3550465 A u x)). Qed.
Lemma lem3550471 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem3550472 {A : Type'} (f : A -> Prop) (x : A) : (f x) = (@I (A -> Prop) f x).
Proof. exact (@lem3550471 A Prop f x). Qed.
Lemma lem3550474 {A : Type'} (t : A -> Prop) (x : A) : (t x) = (@I (A -> Prop) t x).
Proof. exact (@lem3550472 A t x). Qed.
Lemma lem3550475 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem3550476 {A : Type'} (t : A -> Prop) (x : A) : (term234 A t x) = (term966 A t x).
Proof. exact (MK_COMB (@lem3550475) (@lem3550474 A t x)). Qed.
Lemma lem3550477 {A : Type'} (t : A -> Prop) (u : A -> Prop) (x : A) : (term5256 A t u x) = (term5515 A t u x).
Proof. exact (MK_COMB (@lem3550476 A t x) (@lem3550466 A u x)). Qed.
Lemma lem3550478 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem3550479 {A : Type'} (t : A -> Prop) (u : A -> Prop) (x : A) : (term5769 A t u x) = (term5856 A t u x).
Proof. exact (MK_COMB (@lem3550478) (@lem3550477 A t u x)). Qed.
Lemma lem3550480 {A B : Type'} (u : A -> Prop) (f : A -> B) (x' : A) (t : A -> Prop) (x : A) : (term5780 A B u f x' t x) = (term5857 A B u f x' t x).
Proof. exact (MK_COMB (@lem3550479 A t u x) (@lem3550456 A B u f x' t x)). Qed.
Lemma lem3550487 {A : Type'} (t : A -> Prop) (s : A -> Prop) : (term5040 A t s) = (term5040 A t s).
Proof. exact (eq_refl (term5040 A t s)). Qed.
Lemma lem3550492 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem3550493 {A : Type'} (f : type686 A) (x : A -> Prop) : (f x) = (@I ((A -> Prop) -> Prop) f x).
Proof. exact (@lem3550492 (A -> Prop) Prop f x). Qed.
Lemma lem3550495 {A : Type'} (g : type686 A) (t : A -> Prop) : (g t) = (@I ((A -> Prop) -> Prop) g t).
Proof. exact (@lem3550493 A g t). Qed.
Lemma lem3550496 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem3550497 {A : Type'} (g : type686 A) (t : A -> Prop) : (term372 A g t) = (term678 A g t).
Proof. exact (MK_COMB (@lem3550496) (@lem3550495 A g t)). Qed.
Lemma lem3550498 {A : Type'} (g : type686 A) (t : A -> Prop) (s : A -> Prop) : (term5041 A g t s) = (term5516 A g t s).
Proof. exact (MK_COMB (@lem3550497 A g t) (@lem3550487 A t s)). Qed.
Lemma lem3550499 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem3550500 {A : Type'} (g : type686 A) (t : A -> Prop) (s : A -> Prop) : (term5191 A g t s) = (term5517 A g t s).
Proof. exact (MK_COMB (@lem3550499) (@lem3550498 A g t s)). Qed.
Lemma lem3550501 {A B : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) (x' : A) (t : A -> Prop) (x : A) : (term5807 A B g s u f x' t x) = (term5858 A B g s u f x' t x).
Proof. exact (MK_COMB (@lem3550500 A g t s) (@lem3550480 A B u f x' t x)). Qed.
Lemma lem3550506 {A : Type'} (x : A -> Prop) (s : A -> Prop) : (x = s) = (x = s).
Proof. exact (eq_refl (x = s)). Qed.
Lemma lem3550507 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem3550512 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem3550513 {A : Type'} (f : type686 A) (x : A -> Prop) : (f x) = (@I ((A -> Prop) -> Prop) f x).
Proof. exact (@lem3550512 (A -> Prop) Prop f x). Qed.
Lemma lem3550515 {A : Type'} (g : type686 A) (x : A -> Prop) : (g x) = (@I ((A -> Prop) -> Prop) g x).
Proof. exact (@lem3550513 A g x). Qed.
Lemma lem3550516 {A : Type'} (g : type686 A) (x : A -> Prop) : (term207 A g x) = (term640 A g x).
Proof. exact (MK_COMB (@lem3550507) (@lem3550515 A g x)). Qed.
Lemma lem3550517 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem3550518 {A : Type'} (g : type686 A) (x : A -> Prop) : (term332 A g x) = (term641 A g x).
Proof. exact (MK_COMB (@lem3550517) (@lem3550516 A g x)). Qed.
Lemma lem3550519 {A : Type'} (g : type686 A) (x : A -> Prop) (s : A -> Prop) : (term5164 A g x s) = (term5519 A g x s).
Proof. exact (MK_COMB (@lem3550518 A g x) (@lem3550506 A x s)). Qed.
Lemma lem3550520 {A : Type'} (g : type686 A) (s : A -> Prop) : (term5740 A g s) = (term5859 A g s).
Proof. exact (fun_ext (fun x : A -> Prop => @lem3550519 A g x s)). Qed.
Lemma lem3550521 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem3550522 {A : Type'} (g : type686 A) (s : A -> Prop) : (term5741 A g s) = (term5860 A g s).
Proof. exact (MK_COMB (@lem3550521 A) (@lem3550520 A g s)). Qed.
Lemma lem3550523 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem3550524 {A : Type'} (g : type686 A) (s : A -> Prop) : (term5759 A g s) = (term5861 A g s).
Proof. exact (MK_COMB (@lem3550523) (@lem3550522 A g s)). Qed.
Lemma lem3550525 {A B : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) (x' : A) (t : A -> Prop) (x : A) : (term5848 A B g s u f x' t x) = (term5862 A B g s u f x' t x).
Proof. exact (MK_COMB (@lem3550524 A g s) (@lem3550501 A B g s u f x' t x)). Qed.
Lemma lem3550526 {A B : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) (x' : A) (t : A -> Prop) (x : A) (h1 : term5848 A B g s u f x' t x) : term5862 A B g s u f x' t x.
Proof. exact (EQ_MP (@lem3550525 A B g s u f x' t x) (@lem3550402 A B g s u f x' t x h1)). Qed.
Lemma lem3550531 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem3550532 {A : Type'} (f : A -> Prop) (x : A) : (f x) = (@I (A -> Prop) f x).
Proof. exact (@lem3550531 A Prop f x). Qed.
Lemma lem3550534 {A : Type'} (t : A -> Prop) (x : A) : (t x) = (@I (A -> Prop) t x).
Proof. exact (@lem3550532 A t x). Qed.
Lemma lem3550535 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem3550540 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem3550541 {A : Type'} (f : A -> Prop) (x : A) : (f x) = (@I (A -> Prop) f x).
Proof. exact (@lem3550540 A Prop f x). Qed.
Lemma lem3550543 {A : Type'} (t : A -> Prop) (x' : A) : (t x') = (@I (A -> Prop) t x').
Proof. exact (@lem3550541 A t x'). Qed.
Lemma lem3550544 {A : Type'} (t : A -> Prop) (x' : A) : (term618 A t x') = (term619 A t x').
Proof. exact (MK_COMB (@lem3550535) (@lem3550543 A t x')). Qed.
Lemma lem3550545 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem3550546 {B : Type'} : (@eq B) = (@eq B).
Proof. exact (eq_refl (@eq B)). Qed.
Lemma lem3550551 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem3550553 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (@lem3550551 A B f x). Qed.
Lemma lem3550558 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem3550559 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (@lem3550558 A B f x). Qed.
Lemma lem3550561 {A B : Type'} (f : A -> B) (x' : A) : (f x') = (@I (A -> B) f x').
Proof. exact (@lem3550559 A B f x'). Qed.
Lemma lem3550562 {A B : Type'} (f : A -> B) (x : A) : (term620 A B f x) = (term621 A B f x).
Proof. exact (MK_COMB (@lem3550546 B) (@lem3550553 A B f x)). Qed.
Lemma lem3550563 {A B : Type'} (x : A) (f : A -> B) (x' : A) : ((f x) = (f x')) = ((@I (A -> B) f x) = (@I (A -> B) f x')).
Proof. exact (MK_COMB (@lem3550562 A B f x) (@lem3550561 A B f x')). Qed.
Lemma lem3550564 {A B : Type'} (x : A) (f : A -> B) (x' : A) : (term622 A B x f x') = (term623 A B x f x').
Proof. exact (MK_COMB (@lem3550545) (@lem3550563 A B x f x')). Qed.
Lemma lem3550565 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem3550566 {A B : Type'} (x : A) (f : A -> B) (x' : A) : (term624 A B x f x') = (term625 A B x f x').
Proof. exact (MK_COMB (@lem3550565) (@lem3550564 A B x f x')). Qed.
Lemma lem3550567 {A B : Type'} (x : A) (f : A -> B) (t : A -> Prop) (x' : A) : (term310 A B x f t x') = (term626 A B x f t x').
Proof. exact (MK_COMB (@lem3550566 A B x f x') (@lem3550544 A t x')). Qed.
Lemma lem3550568 {A B : Type'} (x : A) (f : A -> B) (t : A -> Prop) : (term318 A B x f t) = (term627 A B x f t).
Proof. exact (fun_ext (fun x' : A => @lem3550567 A B x f t x')). Qed.
Lemma lem3550569 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem3550570 {A B : Type'} (x : A) (f : A -> B) (t : A -> Prop) : (term319 A B x f t) = (term628 A B x f t).
Proof. exact (MK_COMB (@lem3550569 A) (@lem3550568 A B x f t)). Qed.
Lemma lem3550571 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem3550576 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem3550577 {A : Type'} (f : A -> Prop) (x : A) : (f x) = (@I (A -> Prop) f x).
Proof. exact (@lem3550576 A Prop f x). Qed.
Lemma lem3550579 {A : Type'} (u : A -> Prop) (x : A) : (u x) = (@I (A -> Prop) u x).
Proof. exact (@lem3550577 A u x). Qed.
Lemma lem3550580 {A : Type'} (u : A -> Prop) (x : A) : (term618 A u x) = (term619 A u x).
Proof. exact (MK_COMB (@lem3550571) (@lem3550579 A u x)). Qed.
Lemma lem3550581 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem3550582 {A : Type'} (u : A -> Prop) (x : A) : (term320 A u x) = (term629 A u x).
Proof. exact (MK_COMB (@lem3550581) (@lem3550580 A u x)). Qed.
Lemma lem3550583 {A B : Type'} (u : A -> Prop) (x : A) (f : A -> B) (t : A -> Prop) : (term322 A B u x f t) = (term630 A B u x f t).
Proof. exact (MK_COMB (@lem3550582 A u x) (@lem3550570 A B x f t)). Qed.
Lemma lem3550584 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem3550585 {A B : Type'} (u : A -> Prop) (x : A) (f : A -> B) (t : A -> Prop) : (term325 A B u x f t) = (term631 A B u x f t).
Proof. exact (MK_COMB (@lem3550584) (@lem3550583 A B u x f t)). Qed.
Lemma lem3550586 {A B : Type'} (u : A -> Prop) (f : A -> B) (t : A -> Prop) (x : A) : (term327 A B u f t x) = (term632 A B u f t x).
Proof. exact (MK_COMB (@lem3550585 A B u x f t) (@lem3550534 A t x)). Qed.
Lemma lem3550587 {A B : Type'} (u : A -> Prop) (f : A -> B) (t : A -> Prop) : (term328 A B u f t) = (term633 A B u f t).
Proof. exact (fun_ext (fun x : A => @lem3550586 A B u f t x)). Qed.
Lemma lem3550588 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem3550589 {A B : Type'} (u : A -> Prop) (f : A -> B) (t : A -> Prop) : (term329 A B u f t) = (term634 A B u f t).
Proof. exact (MK_COMB (@lem3550588 A) (@lem3550587 A B u f t)). Qed.
Lemma lem3550594 {A : Type'} (t : A -> Prop) (s : A -> Prop) : (t = s) = (t = s).
Proof. exact (eq_refl (t = s)). Qed.
Lemma lem3550595 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem3550600 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem3550601 {A : Type'} (f : type686 A) (x : A -> Prop) : (f x) = (@I ((A -> Prop) -> Prop) f x).
Proof. exact (@lem3550600 (A -> Prop) Prop f x). Qed.
Lemma lem3550603 {A : Type'} (g : type686 A) (t : A -> Prop) : (g t) = (@I ((A -> Prop) -> Prop) g t).
Proof. exact (@lem3550601 A g t). Qed.
Lemma lem3550604 {A : Type'} (g : type686 A) (t : A -> Prop) : (term207 A g t) = (term640 A g t).
Proof. exact (MK_COMB (@lem3550595) (@lem3550603 A g t)). Qed.
Lemma lem3550605 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem3550606 {A : Type'} (g : type686 A) (t : A -> Prop) : (term332 A g t) = (term641 A g t).
Proof. exact (MK_COMB (@lem3550605) (@lem3550604 A g t)). Qed.
Lemma lem3550607 {A : Type'} (g : type686 A) (t : A -> Prop) (s : A -> Prop) : (term5164 A g t s) = (term5519 A g t s).
Proof. exact (MK_COMB (@lem3550606 A g t) (@lem3550594 A t s)). Qed.
Lemma lem3550608 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem3550609 {A : Type'} (g : type686 A) (t : A -> Prop) (s : A -> Prop) : (term5166 A g t s) = (term5520 A g t s).
Proof. exact (MK_COMB (@lem3550608) (@lem3550607 A g t s)). Qed.
Lemma lem3550610 {A B : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) (t : A -> Prop) : (term5172 A B g s u f t) = (term5538 A B g s u f t).
Proof. exact (MK_COMB (@lem3550609 A g t s) (@lem3550589 A B u f t)). Qed.
Lemma lem3550611 {A B : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) : (term5173 A B g s u f) = (term5539 A B g s u f).
Proof. exact (fun_ext (fun t : A -> Prop => @lem3550610 A B g s u f t)). Qed.
Lemma lem3550612 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem3550613 {A B : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) : (term5174 A B g s u f) = (term5540 A B g s u f).
Proof. exact (MK_COMB (@lem3550612 A) (@lem3550611 A B g s u f)). Qed.
Lemma lem3550618 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem3550619 {A : Type'} (f : A -> Prop) (x : A) : (f x) = (@I (A -> Prop) f x).
Proof. exact (@lem3550618 A Prop f x). Qed.
Lemma lem3550621 {A : Type'} (u : A -> Prop) (x : A) : (u x) = (@I (A -> Prop) u x).
Proof. exact (@lem3550619 A u x). Qed.
Lemma lem3550622 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem3550627 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem3550628 {A : Type'} (f : A -> Prop) (x : A) : (f x) = (@I (A -> Prop) f x).
Proof. exact (@lem3550627 A Prop f x). Qed.
Lemma lem3550630 {A : Type'} (s : A -> Prop) (x : A) : (s x) = (@I (A -> Prop) s x).
Proof. exact (@lem3550628 A s x). Qed.
Lemma lem3550631 {A : Type'} (s : A -> Prop) (x : A) : (term618 A s x) = (term619 A s x).
Proof. exact (MK_COMB (@lem3550622) (@lem3550630 A s x)). Qed.
Lemma lem3550632 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem3550633 {A : Type'} (s : A -> Prop) (x : A) : (term320 A s x) = (term629 A s x).
Proof. exact (MK_COMB (@lem3550632) (@lem3550631 A s x)). Qed.
Lemma lem3550634 {A : Type'} (s : A -> Prop) (u : A -> Prop) (x : A) : (term306 A s u x) = (term635 A s u x).
Proof. exact (MK_COMB (@lem3550633 A s x) (@lem3550621 A u x)). Qed.
Lemma lem3550635 {A : Type'} (s : A -> Prop) (u : A -> Prop) : (term307 A s u) = (term636 A s u).
Proof. exact (fun_ext (fun x : A => @lem3550634 A s u x)). Qed.
Lemma lem3550636 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem3550637 {A : Type'} (s : A -> Prop) (u : A -> Prop) : (term308 A s u) = (term637 A s u).
Proof. exact (MK_COMB (@lem3550636 A) (@lem3550635 A s u)). Qed.
Lemma lem3550638 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem3550639 {A : Type'} (s : A -> Prop) (u : A -> Prop) : (term330 A s u) = (term638 A s u).
Proof. exact (MK_COMB (@lem3550638) (@lem3550637 A s u)). Qed.
Lemma lem3550640 {A B : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) : (term5175 A B g s u f) = (term5541 A B g s u f).
Proof. exact (MK_COMB (@lem3550639 A s u) (@lem3550613 A B g s u f)). Qed.
Lemma lem3550645 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem3550646 {A : Type'} (f : A -> Prop) (x : A) : (f x) = (@I (A -> Prop) f x).
Proof. exact (@lem3550645 A Prop f x). Qed.
Lemma lem3550648 {A : Type'} (u : A -> Prop) (x : A) : (u x) = (@I (A -> Prop) u x).
Proof. exact (@lem3550646 A u x). Qed.
Lemma lem3550649 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem3550654 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem3550655 {A : Type'} (f : A -> Prop) (x : A) : (f x) = (@I (A -> Prop) f x).
Proof. exact (@lem3550654 A Prop f x). Qed.
Lemma lem3550657 {A : Type'} (t : A -> Prop) (x : A) : (t x) = (@I (A -> Prop) t x).
Proof. exact (@lem3550655 A t x). Qed.
Lemma lem3550658 {A : Type'} (t : A -> Prop) (x : A) : (term618 A t x) = (term619 A t x).
Proof. exact (MK_COMB (@lem3550649) (@lem3550657 A t x)). Qed.
Lemma lem3550659 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem3550660 {A : Type'} (t : A -> Prop) (x : A) : (term320 A t x) = (term629 A t x).
Proof. exact (MK_COMB (@lem3550659) (@lem3550658 A t x)). Qed.
Lemma lem3550661 {A : Type'} (t : A -> Prop) (u : A -> Prop) (x : A) : (term306 A t u x) = (term635 A t u x).
Proof. exact (MK_COMB (@lem3550660 A t x) (@lem3550648 A u x)). Qed.
Lemma lem3550662 {A : Type'} (t : A -> Prop) (u : A -> Prop) : (term307 A t u) = (term636 A t u).
Proof. exact (fun_ext (fun x : A => @lem3550661 A t u x)). Qed.
Lemma lem3550663 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem3550664 {A : Type'} (t : A -> Prop) (u : A -> Prop) : (term308 A t u) = (term637 A t u).
Proof. exact (MK_COMB (@lem3550663 A) (@lem3550662 A t u)). Qed.
Lemma lem3550669 {A : Type'} (t : A -> Prop) (s : A -> Prop) : (t = s) = (t = s).
Proof. exact (eq_refl (t = s)). Qed.
Lemma lem3550670 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem3550675 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem3550676 {A : Type'} (f : type686 A) (x : A -> Prop) : (f x) = (@I ((A -> Prop) -> Prop) f x).
Proof. exact (@lem3550675 (A -> Prop) Prop f x). Qed.
Lemma lem3550678 {A : Type'} (g : type686 A) (t : A -> Prop) : (g t) = (@I ((A -> Prop) -> Prop) g t).
Proof. exact (@lem3550676 A g t). Qed.
Lemma lem3550679 {A : Type'} (g : type686 A) (t : A -> Prop) : (term207 A g t) = (term640 A g t).
Proof. exact (MK_COMB (@lem3550670) (@lem3550678 A g t)). Qed.
Lemma lem3550680 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem3550681 {A : Type'} (g : type686 A) (t : A -> Prop) : (term332 A g t) = (term641 A g t).
Proof. exact (MK_COMB (@lem3550680) (@lem3550679 A g t)). Qed.
Lemma lem3550682 {A : Type'} (g : type686 A) (t : A -> Prop) (s : A -> Prop) : (term5164 A g t s) = (term5519 A g t s).
Proof. exact (MK_COMB (@lem3550681 A g t) (@lem3550669 A t s)). Qed.
Lemma lem3550683 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem3550684 {A : Type'} (g : type686 A) (t : A -> Prop) (s : A -> Prop) : (term5166 A g t s) = (term5520 A g t s).
Proof. exact (MK_COMB (@lem3550683) (@lem3550682 A g t s)). Qed.
Lemma lem3550685 {A : Type'} (g : type686 A) (s : A -> Prop) (t : A -> Prop) (u : A -> Prop) : (term5168 A g s t u) = (term5542 A g s t u).
Proof. exact (MK_COMB (@lem3550684 A g t s) (@lem3550664 A t u)). Qed.
Lemma lem3550686 {A : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) : (term5169 A g s u) = (term5543 A g s u).
Proof. exact (fun_ext (fun t : A -> Prop => @lem3550685 A g s t u)). Qed.
Lemma lem3550687 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem3550688 {A : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) : (term5170 A g s u) = (term5544 A g s u).
Proof. exact (MK_COMB (@lem3550687 A) (@lem3550686 A g s u)). Qed.
Lemma lem3550689 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem3550690 {A : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) : (term5176 A g s u) = (term5545 A g s u).
Proof. exact (MK_COMB (@lem3550689) (@lem3550688 A g s u)). Qed.
Lemma lem3550691 {A B : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) : (term5177 A B g s u f) = (term5546 A B g s u f).
Proof. exact (MK_COMB (@lem3550690 A g s u) (@lem3550640 A B g s u f)). Qed.
Lemma lem3550698 {A : Type'} (x'' : A -> Prop) (s : A -> Prop) : (term5040 A x'' s) = (term5040 A x'' s).
Proof. exact (eq_refl (term5040 A x'' s)). Qed.
Lemma lem3550703 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem3550704 {A : Type'} (f : type686 A) (x : A -> Prop) : (f x) = (@I ((A -> Prop) -> Prop) f x).
Proof. exact (@lem3550703 (A -> Prop) Prop f x). Qed.
Lemma lem3550706 {A : Type'} (g : type686 A) (x'' : A -> Prop) : (g x'') = (@I ((A -> Prop) -> Prop) g x'').
Proof. exact (@lem3550704 A g x''). Qed.
Lemma lem3550707 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem3550708 {A : Type'} (g : type686 A) (x'' : A -> Prop) : (term372 A g x'') = (term678 A g x'').
Proof. exact (MK_COMB (@lem3550707) (@lem3550706 A g x'')). Qed.
Lemma lem3550709 {A : Type'} (g : type686 A) (x'' : A -> Prop) (s : A -> Prop) : (term5041 A g x'' s) = (term5516 A g x'' s).
Proof. exact (MK_COMB (@lem3550708 A g x'') (@lem3550698 A x'' s)). Qed.
Lemma lem3550710 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem3550711 {A : Type'} (g : type686 A) (x'' : A -> Prop) (s : A -> Prop) : (term5191 A g x'' s) = (term5517 A g x'' s).
Proof. exact (MK_COMB (@lem3550710) (@lem3550709 A g x'' s)). Qed.
Lemma lem3550712 {A B : Type'} (x'' : A -> Prop) (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) : (term5193 A B x'' g s u f) = (term5547 A B x'' g s u f).
Proof. exact (MK_COMB (@lem3550711 A g x'' s) (@lem3550691 A B g s u f)). Qed.
Lemma lem3550713 {A B : Type'} (x'' : A -> Prop) (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) (h1 : term5193 A B x'' g s u f) : term5547 A B x'' g s u f.
Proof. exact (EQ_MP (@lem3550712 A B x'' g s u f) (@lem3550403 A B x'' g s u f h1)). Qed.
Lemma lem3550714 {A B : Type'} (x'' : A -> Prop) (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) (h1 : term5193 A B x'' g s u f) : term5546 A B g s u f.
Proof. exact (proj2 (@lem3550713 A B x'' g s u f h1)). Qed.
Lemma lem3550715 {A B : Type'} (x'' : A -> Prop) (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) (h1 : term5193 A B x'' g s u f) : term5516 A g x'' s.
Proof. exact (proj1 (@lem3550713 A B x'' g s u f h1)). Qed.
Lemma lem3550716 {A B : Type'} (x'' : A -> Prop) (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) (h1 : term5193 A B x'' g s u f) : term5541 A B g s u f.
Proof. exact (proj2 (@lem3550714 A B x'' g s u f h1)). Qed.
Lemma lem3550717 {A B : Type'} (x'' : A -> Prop) (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) (h1 : term5193 A B x'' g s u f) : term5544 A g s u.
Proof. exact (proj1 (@lem3550714 A B x'' g s u f h1)). Qed.
Lemma lem3550718 {A B : Type'} (x'' : A -> Prop) (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) (h1 : term5193 A B x'' g s u f) : term5540 A B g s u f.
Proof. exact (proj2 (@lem3550716 A B x'' g s u f h1)). Qed.
Lemma lem3550722 {A : Type'} (g : type686 A) (s : A -> Prop) (h1 : term5860 A g s) : term5860 A g s.
Proof. exact (h1). Qed.
Lemma lem3550723 {A B : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) (x' : A) (t : A -> Prop) (x : A) (h1 : term5858 A B g s u f x' t x) : term5858 A B g s u f x' t x.
Proof. exact (h1). Qed.
Lemma lem3550724 {A B : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) (x' : A) (t : A -> Prop) (x : A) (h1 : term5858 A B g s u f x' t x) : term5857 A B u f x' t x.
Proof. exact (proj2 (@lem3550723 A B g s u f x' t x h1)). Qed.
Lemma lem3550725 {A B : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) (x' : A) (t : A -> Prop) (x : A) (h1 : term5858 A B g s u f x' t x) : term5516 A g t s.
Proof. exact (proj1 (@lem3550723 A B g s u f x' t x h1)). Qed.
Lemma lem3550728 {A : Type'} (t : A -> Prop) (u : A -> Prop) (x : A) (h1 : term5515 A t u x) : term5515 A t u x.
Proof. exact (h1). Qed.
Lemma lem3550729 {A B : Type'} (u : A -> Prop) (f : A -> B) (x' : A) (t : A -> Prop) (x : A) (h1 : term5533 A B u f x' t x) : term5533 A B u f x' t x.
Proof. exact (h1). Qed.
Lemma lem3550733 {A B : Type'} (u : A -> Prop) (f : A -> B) (x' : A) (t : A -> Prop) (x : A) (h1 : term5533 A B u f x' t x) : term972 A B u x f t x'.
Proof. exact (proj1 (@lem3550729 A B u f x' t x h1)). Qed.
Lemma lem3550734 {A B : Type'} (u : A -> Prop) (f : A -> B) (x' : A) (t : A -> Prop) (x : A) (h1 : term5533 A B u f x' t x) : term844 A B x f t x'.
Proof. exact (proj2 (@lem3550733 A B u f x' t x h1)). Qed.
Lemma lem3550960 {A : Type'} (g : type686 A) (x : A -> Prop) (s : A -> Prop) : (term5519 A g x s) = (term5519 A g x s).
Proof. exact (eq_refl (term5519 A g x s)). Qed.
Lemma lem3550961 {A : Type'} (g : type686 A) (s : A -> Prop) : (term5859 A g s) = (term5859 A g s).
Proof. exact (fun_ext (fun x : A -> Prop => @lem3550960 A g x s)). Qed.
Lemma lem3550962 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem3550964 {A : Type'} (g : type686 A) (s : A -> Prop) : (term5860 A g s) = (term5860 A g s).
Proof. exact (MK_COMB (@lem3550962 A) (@lem3550961 A g s)). Qed.
Lemma lem3550965 {A : Type'} (g : type686 A) (s : A -> Prop) (h1 : term5860 A g s) : term5860 A g s.
Proof. exact (EQ_MP (@lem3550964 A g s) (@lem3550722 A g s h1)). Qed.
Lemma lem3550967 {A : Type'} (P : Prop) (Q : A -> Prop) : (term689 A P Q) = (term690 A P Q).
Proof. exact (EQ_MP (@lem19007 A P Q) (@lem19006 A P Q)). Qed.
Lemma lem3550968 {A : Type'} (P : Prop) (Q : A -> Prop) : (term689 A P Q) = (term690 A P Q).
Proof. exact (@lem3550967 A P Q). Qed.
Lemma lem3550969 {A : Type'} (g : type686 A) (s : A -> Prop) (t : A -> Prop) (u : A -> Prop) : (term5571 A g s t u) = (term5572 A g s t u).
Proof. exact (@lem3550968 A (term5519 A g t s) (term636 A t u)). Qed.
Lemma lem3550970 {A : Type'} (t : A -> Prop) (u : A -> Prop) (x : A) : (term729 A t u x) = (term635 A t u x).
Proof. exact (eq_refl (term729 A t u x)). Qed.
Lemma lem3550971 {A : Type'} (t : A -> Prop) (u : A -> Prop) : (term730 A t u) = (term636 A t u).
Proof. exact (fun_ext (fun x : A => @lem3550970 A t u x)). Qed.
Lemma lem3550972 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem3550973 {A : Type'} (t : A -> Prop) (u : A -> Prop) : (term731 A t u) = (term637 A t u).
Proof. exact (MK_COMB (@lem3550972 A) (@lem3550971 A t u)). Qed.
Lemma lem3550974 {A : Type'} (g : type686 A) (t : A -> Prop) (s : A -> Prop) : (term5520 A g t s) = (term5520 A g t s).
Proof. exact (eq_refl (term5520 A g t s)). Qed.
Lemma lem3550975 {A : Type'} (g : type686 A) (s : A -> Prop) (t : A -> Prop) (u : A -> Prop) : (term5571 A g s t u) = (term5542 A g s t u).
Proof. exact (MK_COMB (@lem3550974 A g t s) (@lem3550973 A t u)). Qed.
Lemma lem3550976 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem3550977 {A : Type'} (g : type686 A) (s : A -> Prop) (t : A -> Prop) (u : A -> Prop) : (term5573 A g s t u) = (term5574 A g s t u).
Proof. exact (MK_COMB (@lem3550976) (@lem3550975 A g s t u)). Qed.
Lemma lem3550978 {A : Type'} (t : A -> Prop) (u : A -> Prop) (x : A) : (term729 A t u x) = (term635 A t u x).
Proof. exact (eq_refl (term729 A t u x)). Qed.
Lemma lem3550979 {A : Type'} (g : type686 A) (t : A -> Prop) (s : A -> Prop) : (term5520 A g t s) = (term5520 A g t s).
Proof. exact (eq_refl (term5520 A g t s)). Qed.
Lemma lem3550980 {A : Type'} (g : type686 A) (s : A -> Prop) (t : A -> Prop) (u : A -> Prop) (x : A) : (term5575 A g s t u x) = (term5576 A g s t u x).
Proof. exact (MK_COMB (@lem3550979 A g t s) (@lem3550978 A t u x)). Qed.
Lemma lem3550981 {A : Type'} (g : type686 A) (s : A -> Prop) (t : A -> Prop) (u : A -> Prop) : (term5577 A g s t u) = (term5578 A g s t u).
Proof. exact (fun_ext (fun x : A => @lem3550980 A g s t u x)). Qed.
Lemma lem3550982 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem3550983 {A : Type'} (g : type686 A) (s : A -> Prop) (t : A -> Prop) (u : A -> Prop) : (term5572 A g s t u) = (term5579 A g s t u).
Proof. exact (MK_COMB (@lem3550982 A) (@lem3550981 A g s t u)). Qed.
Lemma lem3550984 {A : Type'} (g : type686 A) (s : A -> Prop) (t : A -> Prop) (u : A -> Prop) : ((term5571 A g s t u) = (term5572 A g s t u)) = ((term5542 A g s t u) = (term5579 A g s t u)).
Proof. exact (MK_COMB (@lem3550977 A g s t u) (@lem3550983 A g s t u)). Qed.
Lemma lem3550985 {A : Type'} (g : type686 A) (s : A -> Prop) (t : A -> Prop) (u : A -> Prop) : (term5542 A g s t u) = (term5579 A g s t u).
Proof. exact (EQ_MP (@lem3550984 A g s t u) (@lem3550969 A g s t u)). Qed.
Lemma lem3550986 {A : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) : (term5543 A g s u) = (term5580 A g s u).
Proof. exact (fun_ext (fun t : A -> Prop => @lem3550985 A g s t u)). Qed.
Lemma lem3550987 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem3550988 {A : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) : (term5544 A g s u) = (term5581 A g s u).
Proof. exact (MK_COMB (@lem3550987 A) (@lem3550986 A g s u)). Qed.
Lemma lem3551007 {A : Type'} (g : type686 A) (s : A -> Prop) (t : A -> Prop) (u : A -> Prop) (x : A) : (term5576 A g s t u x) = (term5576 A g s t u x).
Proof. exact (eq_refl (term5576 A g s t u x)). Qed.
Lemma lem3551008 {A : Type'} (g : type686 A) (s : A -> Prop) (t : A -> Prop) (u : A -> Prop) : (term5578 A g s t u) = (term5578 A g s t u).
Proof. exact (fun_ext (fun x : A => @lem3551007 A g s t u x)). Qed.
Lemma lem3551009 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem3551010 {A : Type'} (g : type686 A) (s : A -> Prop) (t : A -> Prop) (u : A -> Prop) : (term5579 A g s t u) = (term5579 A g s t u).
Proof. exact (MK_COMB (@lem3551009 A) (@lem3551008 A g s t u)). Qed.
Lemma lem3551011 {A : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) : (term5580 A g s u) = (term5580 A g s u).
Proof. exact (fun_ext (fun t : A -> Prop => @lem3551010 A g s t u)). Qed.
Lemma lem3551012 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem3551013 {A : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) : (term5581 A g s u) = (term5581 A g s u).
Proof. exact (MK_COMB (@lem3551012 A) (@lem3551011 A g s u)). Qed.
Lemma lem3551014 {A : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) : (term5544 A g s u) = (term5581 A g s u).
Proof. exact (TRANS (@lem3550988 A g s u) (@lem3551013 A g s u)). Qed.
Lemma lem3551015 {A B : Type'} (x'' : A -> Prop) (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) (h1 : term5193 A B x'' g s u f) : term5581 A g s u.
Proof. exact (EQ_MP (@lem3551014 A g s u) (@lem3550717 A B x'' g s u f h1)). Qed.
Lemma lem3551261 {A : Type'} (P : Prop) (Q : A -> Prop) : (term689 A P Q) = (term690 A P Q).
Proof. exact (EQ_MP (@lem19007 A P Q) (@lem19006 A P Q)). Qed.
Lemma lem3551262 {A : Type'} (P : Prop) (Q : A -> Prop) : (term689 A P Q) = (term690 A P Q).
Proof. exact (@lem3551261 A P Q). Qed.
Lemma lem3551263 {A B : Type'} (u : A -> Prop) (x : A) (f : A -> B) (t : A -> Prop) : (term691 A B u x f t) = (term692 A B u x f t).
Proof. exact (@lem3551262 A (term619 A u x) (term627 A B x f t)). Qed.
Lemma lem3551264 {A B : Type'} (x : A) (f : A -> B) (t : A -> Prop) (x' : A) : (term693 A B x f t x') = (term626 A B x f t x').
Proof. exact (eq_refl (term693 A B x f t x')). Qed.
Lemma lem3551265 {A B : Type'} (x : A) (f : A -> B) (t : A -> Prop) : (term694 A B x f t) = (term627 A B x f t).
Proof. exact (fun_ext (fun x' : A => @lem3551264 A B x f t x')). Qed.
Lemma lem3551266 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem3551267 {A B : Type'} (x : A) (f : A -> B) (t : A -> Prop) : (term695 A B x f t) = (term628 A B x f t).
Proof. exact (MK_COMB (@lem3551266 A) (@lem3551265 A B x f t)). Qed.
Lemma lem3551268 {A : Type'} (u : A -> Prop) (x : A) : (term629 A u x) = (term629 A u x).
Proof. exact (eq_refl (term629 A u x)). Qed.
Lemma lem3551269 {A B : Type'} (u : A -> Prop) (x : A) (f : A -> B) (t : A -> Prop) : (term691 A B u x f t) = (term630 A B u x f t).
Proof. exact (MK_COMB (@lem3551268 A u x) (@lem3551267 A B x f t)). Qed.
Lemma lem3551270 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem3551271 {A B : Type'} (u : A -> Prop) (x : A) (f : A -> B) (t : A -> Prop) : (term696 A B u x f t) = (term697 A B u x f t).
Proof. exact (MK_COMB (@lem3551270) (@lem3551269 A B u x f t)). Qed.
Lemma lem3551272 {A B : Type'} (x : A) (f : A -> B) (t : A -> Prop) (x' : A) : (term693 A B x f t x') = (term626 A B x f t x').
Proof. exact (eq_refl (term693 A B x f t x')). Qed.
Lemma lem3551273 {A : Type'} (u : A -> Prop) (x : A) : (term629 A u x) = (term629 A u x).
Proof. exact (eq_refl (term629 A u x)). Qed.
Lemma lem3551274 {A B : Type'} (u : A -> Prop) (x : A) (f : A -> B) (t : A -> Prop) (x' : A) : (term698 A B u x f t x') = (term699 A B u x f t x').
Proof. exact (MK_COMB (@lem3551273 A u x) (@lem3551272 A B x f t x')). Qed.
Lemma lem3551275 {A B : Type'} (u : A -> Prop) (x : A) (f : A -> B) (t : A -> Prop) : (term700 A B u x f t) = (term701 A B u x f t).
Proof. exact (fun_ext (fun x' : A => @lem3551274 A B u x f t x')). Qed.
Lemma lem3551276 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem3551277 {A B : Type'} (u : A -> Prop) (x : A) (f : A -> B) (t : A -> Prop) : (term692 A B u x f t) = (term702 A B u x f t).
Proof. exact (MK_COMB (@lem3551276 A) (@lem3551275 A B u x f t)). Qed.
Lemma lem3551278 {A B : Type'} (u : A -> Prop) (x : A) (f : A -> B) (t : A -> Prop) : ((term691 A B u x f t) = (term692 A B u x f t)) = ((term630 A B u x f t) = (term702 A B u x f t)).
Proof. exact (MK_COMB (@lem3551271 A B u x f t) (@lem3551277 A B u x f t)). Qed.
Lemma lem3551279 {A B : Type'} (u : A -> Prop) (x : A) (f : A -> B) (t : A -> Prop) : (term630 A B u x f t) = (term702 A B u x f t).
Proof. exact (EQ_MP (@lem3551278 A B u x f t) (@lem3551263 A B u x f t)). Qed.
Lemma lem3551280 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem3551281 {A B : Type'} (u : A -> Prop) (x : A) (f : A -> B) (t : A -> Prop) : (term631 A B u x f t) = (term703 A B u x f t).
Proof. exact (MK_COMB (@lem3551280) (@lem3551279 A B u x f t)). Qed.
Lemma lem3551282 {A : Type'} (t : A -> Prop) (x : A) : (@I (A -> Prop) t x) = (@I (A -> Prop) t x).
Proof. exact (eq_refl (@I (A -> Prop) t x)). Qed.
Lemma lem3551283 {A B : Type'} (u : A -> Prop) (f : A -> B) (t : A -> Prop) (x : A) : (term632 A B u f t x) = (term704 A B u f t x).
Proof. exact (MK_COMB (@lem3551281 A B u x f t) (@lem3551282 A t x)). Qed.
Lemma lem3551285 {A : Type'} (P : A -> Prop) (Q : Prop) : (term705 A P Q) = (term706 A P Q).
Proof. exact (EQ_MP (@lem19013 A P Q) (@lem19012 A P Q)). Qed.
Lemma lem3551286 {A : Type'} (P : A -> Prop) (Q : Prop) : (term705 A P Q) = (term706 A P Q).
Proof. exact (@lem3551285 A P Q). Qed.
Lemma lem3551287 {A B : Type'} (u : A -> Prop) (f : A -> B) (t : A -> Prop) (x : A) : (term707 A B u f t x) = (term708 A B u f t x).
Proof. exact (@lem3551286 A (term701 A B u x f t) (@I (A -> Prop) t x)). Qed.
Lemma lem3551288 {A B : Type'} (u : A -> Prop) (x : A) (f : A -> B) (t : A -> Prop) (x' : A) : (term709 A B u x f t x') = (term699 A B u x f t x').
Proof. exact (eq_refl (term709 A B u x f t x')). Qed.
Lemma lem3551289 {A B : Type'} (u : A -> Prop) (x : A) (f : A -> B) (t : A -> Prop) : (term710 A B u x f t) = (term701 A B u x f t).
Proof. exact (fun_ext (fun x' : A => @lem3551288 A B u x f t x')). Qed.
Lemma lem3551290 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem3551291 {A B : Type'} (u : A -> Prop) (x : A) (f : A -> B) (t : A -> Prop) : (term711 A B u x f t) = (term702 A B u x f t).
Proof. exact (MK_COMB (@lem3551290 A) (@lem3551289 A B u x f t)). Qed.
Lemma lem3551292 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem3551293 {A B : Type'} (u : A -> Prop) (x : A) (f : A -> B) (t : A -> Prop) : (term712 A B u x f t) = (term703 A B u x f t).
Proof. exact (MK_COMB (@lem3551292) (@lem3551291 A B u x f t)). Qed.
Lemma lem3551294 {A : Type'} (t : A -> Prop) (x : A) : (@I (A -> Prop) t x) = (@I (A -> Prop) t x).
Proof. exact (eq_refl (@I (A -> Prop) t x)). Qed.
Lemma lem3551295 {A B : Type'} (u : A -> Prop) (f : A -> B) (t : A -> Prop) (x : A) : (term707 A B u f t x) = (term704 A B u f t x).
Proof. exact (MK_COMB (@lem3551293 A B u x f t) (@lem3551294 A t x)). Qed.
Lemma lem3551296 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem3551297 {A B : Type'} (u : A -> Prop) (f : A -> B) (t : A -> Prop) (x : A) : (term713 A B u f t x) = (term714 A B u f t x).
Proof. exact (MK_COMB (@lem3551296) (@lem3551295 A B u f t x)). Qed.
Lemma lem3551298 {A B : Type'} (u : A -> Prop) (x : A) (f : A -> B) (t : A -> Prop) (x' : A) : (term709 A B u x f t x') = (term699 A B u x f t x').
Proof. exact (eq_refl (term709 A B u x f t x')). Qed.
Lemma lem3551299 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem3551300 {A B : Type'} (u : A -> Prop) (x : A) (f : A -> B) (t : A -> Prop) (x' : A) : (term715 A B u x f t x') = (term716 A B u x f t x').
Proof. exact (MK_COMB (@lem3551299) (@lem3551298 A B u x f t x')). Qed.
Lemma lem3551301 {A : Type'} (t : A -> Prop) (x : A) : (@I (A -> Prop) t x) = (@I (A -> Prop) t x).
Proof. exact (eq_refl (@I (A -> Prop) t x)). Qed.
Lemma lem3551302 {A B : Type'} (u : A -> Prop) (f : A -> B) (x' : A) (t : A -> Prop) (x : A) : (term717 A B u f x' t x) = (term718 A B u f x' t x).
Proof. exact (MK_COMB (@lem3551300 A B u x f t x') (@lem3551301 A t x)). Qed.
Lemma lem3551303 {A B : Type'} (u : A -> Prop) (f : A -> B) (t : A -> Prop) (x : A) : (term719 A B u f t x) = (term720 A B u f t x).
Proof. exact (fun_ext (fun x' : A => @lem3551302 A B u f x' t x)). Qed.
Lemma lem3551304 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem3551305 {A B : Type'} (u : A -> Prop) (f : A -> B) (t : A -> Prop) (x : A) : (term708 A B u f t x) = (term721 A B u f t x).
Proof. exact (MK_COMB (@lem3551304 A) (@lem3551303 A B u f t x)). Qed.
Lemma lem3551306 {A B : Type'} (u : A -> Prop) (f : A -> B) (t : A -> Prop) (x : A) : ((term707 A B u f t x) = (term708 A B u f t x)) = ((term704 A B u f t x) = (term721 A B u f t x)).
Proof. exact (MK_COMB (@lem3551297 A B u f t x) (@lem3551305 A B u f t x)). Qed.
Lemma lem3551307 {A B : Type'} (u : A -> Prop) (f : A -> B) (t : A -> Prop) (x : A) : (term704 A B u f t x) = (term721 A B u f t x).
Proof. exact (EQ_MP (@lem3551306 A B u f t x) (@lem3551287 A B u f t x)). Qed.
Lemma lem3551308 {A B : Type'} (u : A -> Prop) (f : A -> B) (t : A -> Prop) (x : A) : (term632 A B u f t x) = (term721 A B u f t x).
Proof. exact (TRANS (@lem3551283 A B u f t x) (@lem3551307 A B u f t x)). Qed.
Lemma lem3551309 {A B : Type'} (u : A -> Prop) (f : A -> B) (t : A -> Prop) : (term633 A B u f t) = (term722 A B u f t).
Proof. exact (fun_ext (fun x : A => @lem3551308 A B u f t x)). Qed.
Lemma lem3551310 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem3551311 {A B : Type'} (u : A -> Prop) (f : A -> B) (t : A -> Prop) : (term634 A B u f t) = (term723 A B u f t).
Proof. exact (MK_COMB (@lem3551310 A) (@lem3551309 A B u f t)). Qed.
Lemma lem3551312 {A : Type'} (g : type686 A) (t : A -> Prop) (s : A -> Prop) : (term5520 A g t s) = (term5520 A g t s).
Proof. exact (eq_refl (term5520 A g t s)). Qed.
Lemma lem3551313 {A B : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) (t : A -> Prop) : (term5538 A B g s u f t) = (term5548 A B g s u f t).
Proof. exact (MK_COMB (@lem3551312 A g t s) (@lem3551311 A B u f t)). Qed.
Lemma lem3551315 {A : Type'} (P : Prop) (Q : A -> Prop) : (term689 A P Q) = (term690 A P Q).
Proof. exact (EQ_MP (@lem19007 A P Q) (@lem19006 A P Q)). Qed.
Lemma lem3551316 {A : Type'} (P : Prop) (Q : A -> Prop) : (term689 A P Q) = (term690 A P Q).
Proof. exact (@lem3551315 A P Q). Qed.
Lemma lem3551317 {A B : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) (t : A -> Prop) : (term5549 A B g s u f t) = (term5550 A B g s u f t).
Proof. exact (@lem3551316 A (term5519 A g t s) (term722 A B u f t)). Qed.
Lemma lem3551318 {A B : Type'} (u : A -> Prop) (f : A -> B) (t : A -> Prop) (x : A) : (term733 A B u f t x) = (term721 A B u f t x).
Proof. exact (eq_refl (term733 A B u f t x)). Qed.
Lemma lem3551319 {A B : Type'} (u : A -> Prop) (f : A -> B) (t : A -> Prop) : (term734 A B u f t) = (term722 A B u f t).
Proof. exact (fun_ext (fun x : A => @lem3551318 A B u f t x)). Qed.
Lemma lem3551320 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem3551321 {A B : Type'} (u : A -> Prop) (f : A -> B) (t : A -> Prop) : (term735 A B u f t) = (term723 A B u f t).
Proof. exact (MK_COMB (@lem3551320 A) (@lem3551319 A B u f t)). Qed.
Lemma lem3551322 {A : Type'} (g : type686 A) (t : A -> Prop) (s : A -> Prop) : (term5520 A g t s) = (term5520 A g t s).
Proof. exact (eq_refl (term5520 A g t s)). Qed.
Lemma lem3551323 {A B : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) (t : A -> Prop) : (term5549 A B g s u f t) = (term5548 A B g s u f t).
Proof. exact (MK_COMB (@lem3551322 A g t s) (@lem3551321 A B u f t)). Qed.
Lemma lem3551324 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem3551325 {A B : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) (t : A -> Prop) : (term5551 A B g s u f t) = (term5552 A B g s u f t).
Proof. exact (MK_COMB (@lem3551324) (@lem3551323 A B g s u f t)). Qed.
Lemma lem3551326 {A B : Type'} (u : A -> Prop) (f : A -> B) (t : A -> Prop) (x : A) : (term733 A B u f t x) = (term721 A B u f t x).
Proof. exact (eq_refl (term733 A B u f t x)). Qed.
Lemma lem3551327 {A : Type'} (g : type686 A) (t : A -> Prop) (s : A -> Prop) : (term5520 A g t s) = (term5520 A g t s).
Proof. exact (eq_refl (term5520 A g t s)). Qed.
Lemma lem3551328 {A B : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) (t : A -> Prop) (x : A) : (term5553 A B g s u f t x) = (term5554 A B g s u f t x).
Proof. exact (MK_COMB (@lem3551327 A g t s) (@lem3551326 A B u f t x)). Qed.
Lemma lem3551329 {A B : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) (t : A -> Prop) : (term5555 A B g s u f t) = (term5556 A B g s u f t).
Proof. exact (fun_ext (fun x : A => @lem3551328 A B g s u f t x)). Qed.
Lemma lem3551330 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem3551331 {A B : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) (t : A -> Prop) : (term5550 A B g s u f t) = (term5557 A B g s u f t).
Proof. exact (MK_COMB (@lem3551330 A) (@lem3551329 A B g s u f t)). Qed.
Lemma lem3551332 {A B : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) (t : A -> Prop) : ((term5549 A B g s u f t) = (term5550 A B g s u f t)) = ((term5548 A B g s u f t) = (term5557 A B g s u f t)).
Proof. exact (MK_COMB (@lem3551325 A B g s u f t) (@lem3551331 A B g s u f t)). Qed.
Lemma lem3551333 {A B : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) (t : A -> Prop) : (term5548 A B g s u f t) = (term5557 A B g s u f t).
Proof. exact (EQ_MP (@lem3551332 A B g s u f t) (@lem3551317 A B g s u f t)). Qed.
Lemma lem3551335 {A : Type'} (P : Prop) (Q : A -> Prop) : (term689 A P Q) = (term690 A P Q).
Proof. exact (EQ_MP (@lem19007 A P Q) (@lem19006 A P Q)). Qed.
Lemma lem3551336 {A : Type'} (P : Prop) (Q : A -> Prop) : (term689 A P Q) = (term690 A P Q).
Proof. exact (@lem3551335 A P Q). Qed.
Lemma lem3551337 {A B : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) (t : A -> Prop) (x : A) : (term5558 A B g s u f t x) = (term5559 A B g s u f t x).
Proof. exact (@lem3551336 A (term5519 A g t s) (term720 A B u f t x)). Qed.
Lemma lem3551338 {A B : Type'} (u : A -> Prop) (f : A -> B) (x' : A) (t : A -> Prop) (x : A) : (term749 A B u f t x x') = (term718 A B u f x' t x).
Proof. exact (eq_refl (term749 A B u f t x x')). Qed.
Lemma lem3551339 {A B : Type'} (u : A -> Prop) (f : A -> B) (t : A -> Prop) (x : A) : (term750 A B u f t x) = (term720 A B u f t x).
Proof. exact (fun_ext (fun x' : A => @lem3551338 A B u f x' t x)). Qed.
Lemma lem3551340 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem3551341 {A B : Type'} (u : A -> Prop) (f : A -> B) (t : A -> Prop) (x : A) : (term751 A B u f t x) = (term721 A B u f t x).
Proof. exact (MK_COMB (@lem3551340 A) (@lem3551339 A B u f t x)). Qed.
Lemma lem3551342 {A : Type'} (g : type686 A) (t : A -> Prop) (s : A -> Prop) : (term5520 A g t s) = (term5520 A g t s).
Proof. exact (eq_refl (term5520 A g t s)). Qed.
Lemma lem3551343 {A B : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) (t : A -> Prop) (x : A) : (term5558 A B g s u f t x) = (term5554 A B g s u f t x).
Proof. exact (MK_COMB (@lem3551342 A g t s) (@lem3551341 A B u f t x)). Qed.
Lemma lem3551344 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem3551345 {A B : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) (t : A -> Prop) (x : A) : (term5560 A B g s u f t x) = (term5561 A B g s u f t x).
Proof. exact (MK_COMB (@lem3551344) (@lem3551343 A B g s u f t x)). Qed.
Lemma lem3551346 {A B : Type'} (u : A -> Prop) (f : A -> B) (x' : A) (t : A -> Prop) (x : A) : (term749 A B u f t x x') = (term718 A B u f x' t x).
Proof. exact (eq_refl (term749 A B u f t x x')). Qed.
Lemma lem3551347 {A : Type'} (g : type686 A) (t : A -> Prop) (s : A -> Prop) : (term5520 A g t s) = (term5520 A g t s).
Proof. exact (eq_refl (term5520 A g t s)). Qed.
Lemma lem3551348 {A B : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) (x' : A) (t : A -> Prop) (x : A) : (term5562 A B g s u f t x x') = (term5563 A B g s u f x' t x).
Proof. exact (MK_COMB (@lem3551347 A g t s) (@lem3551346 A B u f x' t x)). Qed.
Lemma lem3551349 {A B : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) (t : A -> Prop) (x : A) : (term5564 A B g s u f t x) = (term5565 A B g s u f t x).
Proof. exact (fun_ext (fun x' : A => @lem3551348 A B g s u f x' t x)). Qed.
Lemma lem3551350 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem3551351 {A B : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) (t : A -> Prop) (x : A) : (term5559 A B g s u f t x) = (term5566 A B g s u f t x).
Proof. exact (MK_COMB (@lem3551350 A) (@lem3551349 A B g s u f t x)). Qed.
Lemma lem3551352 {A B : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) (t : A -> Prop) (x : A) : ((term5558 A B g s u f t x) = (term5559 A B g s u f t x)) = ((term5554 A B g s u f t x) = (term5566 A B g s u f t x)).
Proof. exact (MK_COMB (@lem3551345 A B g s u f t x) (@lem3551351 A B g s u f t x)). Qed.
Lemma lem3551353 {A B : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) (t : A -> Prop) (x : A) : (term5554 A B g s u f t x) = (term5566 A B g s u f t x).
Proof. exact (EQ_MP (@lem3551352 A B g s u f t x) (@lem3551337 A B g s u f t x)). Qed.
Lemma lem3551354 {A B : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) (t : A -> Prop) : (term5556 A B g s u f t) = (term5567 A B g s u f t).
Proof. exact (fun_ext (fun x : A => @lem3551353 A B g s u f t x)). Qed.
Lemma lem3551355 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem3551356 {A B : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) (t : A -> Prop) : (term5557 A B g s u f t) = (term5568 A B g s u f t).
Proof. exact (MK_COMB (@lem3551355 A) (@lem3551354 A B g s u f t)). Qed.
Lemma lem3551357 {A B : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) (t : A -> Prop) : (term5548 A B g s u f t) = (term5568 A B g s u f t).
Proof. exact (TRANS (@lem3551333 A B g s u f t) (@lem3551356 A B g s u f t)). Qed.
Lemma lem3551358 {A B : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) (t : A -> Prop) : (term5538 A B g s u f t) = (term5568 A B g s u f t).
Proof. exact (TRANS (@lem3551313 A B g s u f t) (@lem3551357 A B g s u f t)). Qed.
Lemma lem3551359 {A B : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) : (term5539 A B g s u f) = (term5569 A B g s u f).
Proof. exact (fun_ext (fun t : A -> Prop => @lem3551358 A B g s u f t)). Qed.
Lemma lem3551360 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem3551361 {A B : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) : (term5540 A B g s u f) = (term5570 A B g s u f).
Proof. exact (MK_COMB (@lem3551360 A) (@lem3551359 A B g s u f)). Qed.
Lemma lem3551392 {A B : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) (x' : A) (t : A -> Prop) (x : A) : (term5563 A B g s u f x' t x) = (term5563 A B g s u f x' t x).
Proof. exact (eq_refl (term5563 A B g s u f x' t x)). Qed.
Lemma lem3551393 {A B : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) (t : A -> Prop) (x : A) : (term5565 A B g s u f t x) = (term5565 A B g s u f t x).
Proof. exact (fun_ext (fun x' : A => @lem3551392 A B g s u f x' t x)). Qed.
Lemma lem3551394 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem3551395 {A B : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) (t : A -> Prop) (x : A) : (term5566 A B g s u f t x) = (term5566 A B g s u f t x).
Proof. exact (MK_COMB (@lem3551394 A) (@lem3551393 A B g s u f t x)). Qed.
Lemma lem3551396 {A B : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) (t : A -> Prop) : (term5567 A B g s u f t) = (term5567 A B g s u f t).
Proof. exact (fun_ext (fun x : A => @lem3551395 A B g s u f t x)). Qed.
Lemma lem3551397 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem3551398 {A B : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) (t : A -> Prop) : (term5568 A B g s u f t) = (term5568 A B g s u f t).
Proof. exact (MK_COMB (@lem3551397 A) (@lem3551396 A B g s u f t)). Qed.
Lemma lem3551399 {A B : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) : (term5569 A B g s u f) = (term5569 A B g s u f).
Proof. exact (fun_ext (fun t : A -> Prop => @lem3551398 A B g s u f t)). Qed.
Lemma lem3551400 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem3551401 {A B : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) : (term5570 A B g s u f) = (term5570 A B g s u f).
Proof. exact (MK_COMB (@lem3551400 A) (@lem3551399 A B g s u f)). Qed.
Lemma lem3551402 {A B : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) : (term5540 A B g s u f) = (term5570 A B g s u f).
Proof. exact (TRANS (@lem3551361 A B g s u f) (@lem3551401 A B g s u f)). Qed.
Lemma lem3551403 {A B : Type'} (x'' : A -> Prop) (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) (h1 : term5193 A B x'' g s u f) : term5570 A B g s u f.
Proof. exact (EQ_MP (@lem3551402 A B g s u f) (@lem3550718 A B x'' g s u f h1)). Qed.
Lemma lem3551454 {A : Type'} (_37966 : A -> Prop) (g : type686 A) (s : A -> Prop) (h1 : term5860 A g s) : term5863 A g s _37966.
Proof. exact (@lem3550965 A g s h1 _37966). Qed.
Lemma lem3551455 {A : Type'} (g : type686 A) (_37966 : A -> Prop) (s : A -> Prop) : (term5863 A g s _37966) = (term5519 A g _37966 s).
Proof. exact (eq_refl (term5863 A g s _37966)). Qed.
Lemma lem3551457 {A B : Type'} (_37967 : A -> Prop) (x'' : A -> Prop) (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) (h1 : term5193 A B x'' g s u f) : term5586 A g s u _37967.
Proof. exact (@lem3551015 A B x'' g s u f h1 _37967). Qed.
Lemma lem3551458 {A : Type'} (g : type686 A) (s : A -> Prop) (_37967 : A -> Prop) (u : A -> Prop) : (term5586 A g s u _37967) = (term5579 A g s _37967 u).
Proof. exact (eq_refl (term5586 A g s u _37967)). Qed.
Lemma lem3551459 {A B : Type'} (_37967 : A -> Prop) (x'' : A -> Prop) (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) (h1 : term5193 A B x'' g s u f) : term5579 A g s _37967 u.
Proof. exact (EQ_MP (@lem3551458 A g s _37967 u) (@lem3551457 A B _37967 x'' g s u f h1)). Qed.
Lemma lem3551460 {A B : Type'} (_37967 : A -> Prop) (_37968 : A) (x'' : A -> Prop) (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) (h1 : term5193 A B x'' g s u f) : term5587 A g s _37967 u _37968.
Proof. exact (@lem3551459 A B _37967 x'' g s u f h1 _37968). Qed.
Lemma lem3551461 {A : Type'} (g : type686 A) (s : A -> Prop) (_37967 : A -> Prop) (u : A -> Prop) (_37968 : A) : (term5587 A g s _37967 u _37968) = (term5576 A g s _37967 u _37968).
Proof. exact (eq_refl (term5587 A g s _37967 u _37968)). Qed.
Lemma lem3551462 {A B : Type'} (_37967 : A -> Prop) (_37968 : A) (x'' : A -> Prop) (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) (h1 : term5193 A B x'' g s u f) : term5576 A g s _37967 u _37968.
Proof. exact (EQ_MP (@lem3551461 A g s _37967 u _37968) (@lem3551460 A B _37967 _37968 x'' g s u f h1)). Qed.
Lemma lem3551484 {A B : Type'} (_37976 : A -> Prop) (x'' : A -> Prop) (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) (h1 : term5193 A B x'' g s u f) : term5582 A B g s u f _37976.
Proof. exact (@lem3551403 A B x'' g s u f h1 _37976). Qed.
Lemma lem3551485 {A B : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) (_37976 : A -> Prop) : (term5582 A B g s u f _37976) = (term5568 A B g s u f _37976).
Proof. exact (eq_refl (term5582 A B g s u f _37976)). Qed.
Lemma lem3551486 {A B : Type'} (_37976 : A -> Prop) (x'' : A -> Prop) (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) (h1 : term5193 A B x'' g s u f) : term5568 A B g s u f _37976.
Proof. exact (EQ_MP (@lem3551485 A B g s u f _37976) (@lem3551484 A B _37976 x'' g s u f h1)). Qed.
Lemma lem3551487 {A B : Type'} (_37976 : A -> Prop) (_37977 : A) (x'' : A -> Prop) (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) (h1 : term5193 A B x'' g s u f) : term5583 A B g s u f _37976 _37977.
Proof. exact (@lem3551486 A B _37976 x'' g s u f h1 _37977). Qed.
Lemma lem3551488 {A B : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) (_37976 : A -> Prop) (_37977 : A) : (term5583 A B g s u f _37976 _37977) = (term5566 A B g s u f _37976 _37977).
Proof. exact (eq_refl (term5583 A B g s u f _37976 _37977)). Qed.
Lemma lem3551489 {A B : Type'} (_37976 : A -> Prop) (_37977 : A) (x'' : A -> Prop) (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) (h1 : term5193 A B x'' g s u f) : term5566 A B g s u f _37976 _37977.
Proof. exact (EQ_MP (@lem3551488 A B g s u f _37976 _37977) (@lem3551487 A B _37976 _37977 x'' g s u f h1)). Qed.
Lemma lem3551490 {A B : Type'} (_37976 : A -> Prop) (_37977 : A) (_37978 : A) (x'' : A -> Prop) (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) (h1 : term5193 A B x'' g s u f) : term5584 A B g s u f _37976 _37977 _37978.
Proof. exact (@lem3551489 A B _37976 _37977 x'' g s u f h1 _37978). Qed.
Lemma lem3551491 {A B : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) (_37978 : A) (_37976 : A -> Prop) (_37977 : A) : (term5584 A B g s u f _37976 _37977 _37978) = (term5563 A B g s u f _37978 _37976 _37977).
Proof. exact (eq_refl (term5584 A B g s u f _37976 _37977 _37978)). Qed.
Lemma lem3551492 {A B : Type'} (_37978 : A) (_37976 : A -> Prop) (_37977 : A) (x'' : A -> Prop) (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) (h1 : term5193 A B x'' g s u f) : term5563 A B g s u f _37978 _37976 _37977.
Proof. exact (EQ_MP (@lem3551491 A B g s u f _37978 _37976 _37977) (@lem3551490 A B _37976 _37977 _37978 x'' g s u f h1)). Qed.
Lemma lem3551546 {A B : Type'} (x'' : A -> Prop) (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) (h1 : term5193 A B x'' g s u f) : term5040 A x'' s.
Proof. exact (proj2 (@lem3550715 A B x'' g s u f h1)). Qed.
Lemma lem3551552 {A : Type'} (_37966 : A -> Prop) (g : type686 A) (s : A -> Prop) (h1 : term5860 A g s) : term5519 A g _37966 s.
Proof. exact (EQ_MP (@lem3551455 A g _37966 s) (@lem3551454 A _37966 g s h1)). Qed.
Lemma lem3551567 {A : Type'} (g : type686 A) (s : A -> Prop) (_37967 : A -> Prop) (u : A -> Prop) (_37968 : A) : (term5576 A g s _37967 u _37968) = (term5591 A g s _37967 u _37968).
Proof. exact (@lem3548243 (term640 A g _37967) (_37967 = s) (term635 A _37967 u _37968)). Qed.
Lemma lem3551568 {A B : Type'} (_37967 : A -> Prop) (_37968 : A) (x'' : A -> Prop) (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) (h1 : term5193 A B x'' g s u f) : term5591 A g s _37967 u _37968.
Proof. exact (EQ_MP (@lem3551567 A g s _37967 u _37968) (@lem3551462 A B _37967 _37968 x'' g s u f h1)). Qed.
Lemma lem3551614 {A : Type'} (t : A -> Prop) (u : A -> Prop) (x : A) (h1 : term5515 A t u x) : term619 A u x.
Proof. exact (proj2 (@lem3550728 A t u x h1)). Qed.
Lemma lem3551640 {A B : Type'} (u : A -> Prop) (f : A -> B) (_37978 : A) (_37976 : A -> Prop) (_37977 : A) : (term718 A B u f _37978 _37976 _37977) = (term816 A B u f _37978 _37976 _37977).
Proof. exact (@lem3548243 (term619 A u _37977) (term626 A B _37977 f _37976 _37978) (@I (A -> Prop) _37976 _37977)). Qed.
Lemma lem3551647 {A B : Type'} (f : A -> B) (_37978 : A) (_37976 : A -> Prop) (_37977 : A) : (term817 A B f _37978 _37976 _37977) = (term818 A B f _37978 _37976 _37977).
Proof. exact (@lem3548243 (term623 A B _37977 f _37978) (term619 A _37976 _37978) (@I (A -> Prop) _37976 _37977)). Qed.
Lemma lem3551648 {A : Type'} (u : A -> Prop) (_37977 : A) : (term629 A u _37977) = (term629 A u _37977).
Proof. exact (eq_refl (term629 A u _37977)). Qed.
Lemma lem3551651 {A B : Type'} (u : A -> Prop) (f : A -> B) (_37978 : A) (_37976 : A -> Prop) (_37977 : A) : (term816 A B u f _37978 _37976 _37977) = (term819 A B u f _37978 _37976 _37977).
Proof. exact (MK_COMB (@lem3551648 A u _37977) (@lem3551647 A B f _37978 _37976 _37977)). Qed.
Lemma lem3551653 {A B : Type'} (u : A -> Prop) (f : A -> B) (_37978 : A) (_37976 : A -> Prop) (_37977 : A) : (term718 A B u f _37978 _37976 _37977) = (term819 A B u f _37978 _37976 _37977).
Proof. exact (TRANS (@lem3551640 A B u f _37978 _37976 _37977) (@lem3551651 A B u f _37978 _37976 _37977)). Qed.
Lemma lem3551654 {A : Type'} (g : type686 A) (_37976 : A -> Prop) (s : A -> Prop) : (term5520 A g _37976 s) = (term5520 A g _37976 s).
Proof. exact (eq_refl (term5520 A g _37976 s)). Qed.
Lemma lem3551655 {A B : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) (_37978 : A) (_37976 : A -> Prop) (_37977 : A) : (term5563 A B g s u f _37978 _37976 _37977) = (term5588 A B g s u f _37978 _37976 _37977).
Proof. exact (MK_COMB (@lem3551654 A g _37976 s) (@lem3551653 A B u f _37978 _37976 _37977)). Qed.
Lemma lem3551662 {A B : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) (_37978 : A) (_37976 : A -> Prop) (_37977 : A) : (term5588 A B g s u f _37978 _37976 _37977) = (term5589 A B g s u f _37978 _37976 _37977).
Proof. exact (@lem3548243 (term640 A g _37976) (_37976 = s) (term819 A B u f _37978 _37976 _37977)). Qed.
Lemma lem3551663 {A B : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) (_37978 : A) (_37976 : A -> Prop) (_37977 : A) : (term5563 A B g s u f _37978 _37976 _37977) = (term5589 A B g s u f _37978 _37976 _37977).
Proof. exact (TRANS (@lem3551655 A B g s u f _37978 _37976 _37977) (@lem3551662 A B g s u f _37978 _37976 _37977)). Qed.
Lemma lem3551664 {A B : Type'} (_37978 : A) (_37976 : A -> Prop) (_37977 : A) (x'' : A -> Prop) (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) (h1 : term5193 A B x'' g s u f) : term5589 A B g s u f _37978 _37976 _37977.
Proof. exact (EQ_MP (@lem3551663 A B g s u f _37978 _37976 _37977) (@lem3551492 A B _37978 _37976 _37977 x'' g s u f h1)). Qed.
Lemma lem3551674 {A B : Type'} (u : A -> Prop) (f : A -> B) (x' : A) (t : A -> Prop) (x : A) (h1 : term5533 A B u f x' t x) : term619 A t x.
Proof. exact (proj2 (@lem3550729 A B u f x' t x h1)). Qed.
Lemma lem3551745 {A B : Type'} (x'' : A -> Prop) (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) (h1 : term5193 A B x'' g s u f) : @I ((A -> Prop) -> Prop) g x''.
Proof. exact (proj1 (@lem3550715 A B x'' g s u f h1)). Qed.
Lemma lem3551746 {A B : Type'} (x'' : A -> Prop) (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) (h1 : term5193 A B x'' g s u f) : term829 A g x''.
Proof. exact (fun h0 : term640 A g x'' => @lem3551745 A B x'' g s u f h1). Qed.
Lemma lem3551748 (p : Prop) : (term828 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem3551749 {A : Type'} (g : type686 A) (x'' : A -> Prop) : (term829 A g x'') = (@I ((A -> Prop) -> Prop) g x'').
Proof. exact (@lem3551748 (@I ((A -> Prop) -> Prop) g x'')). Qed.
Lemma lem3551750 {A B : Type'} (x'' : A -> Prop) (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) (h1 : term5193 A B x'' g s u f) : @I ((A -> Prop) -> Prop) g x''.
Proof. exact (EQ_MP (@lem3551749 A g x'') (@lem3551746 A B x'' g s u f h1)). Qed.
Lemma lem3551756 (q : Prop) (p : Prop) : (p \/ q) = (q \/ p).
Proof. exact (proj1 (@lem827 (@el Prop) p q)). Qed.
Lemma lem3551757 {A : Type'} (s : A -> Prop) (g : type686 A) (_37966 : A -> Prop) : (term5519 A g _37966 s) = (term5655 A s g _37966).
Proof. exact (@lem3551756 (_37966 = s) (term640 A g _37966)). Qed.
Lemma lem3551765 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem3551766 {A : Type'} (s : A -> Prop) (g : type686 A) (_37966 : A -> Prop) : (term5864 A g _37966 s) = (term5865 A s g _37966).
Proof. exact (MK_COMB (@lem3551765) (@lem3551757 A s g _37966)). Qed.
Lemma lem3551774 {A : Type'} (s : A -> Prop) (g : type686 A) (_37966 : A -> Prop) : (term5655 A s g _37966) = (term5655 A s g _37966).
Proof. exact (eq_refl (term5655 A s g _37966)). Qed.
Lemma lem3551775 {A : Type'} (s : A -> Prop) (g : type686 A) (_37966 : A -> Prop) : ((term5519 A g _37966 s) = (term5655 A s g _37966)) = ((term5655 A s g _37966) = (term5655 A s g _37966)).
Proof. exact (MK_COMB (@lem3551766 A s g _37966) (@lem3551774 A s g _37966)). Qed.
Lemma lem3551777 {A : Type'} (x : A) : (x = x) = True.
Proof. exact (EQ_MP (@lem20665 A x) (@lem20664 A x)). Qed.
Lemma lem3551778 (x : Prop) : (x = x) = True.
Proof. exact (@lem3551777 Prop x). Qed.
Lemma lem3551779 {A : Type'} (s : A -> Prop) (g : type686 A) (_37966 : A -> Prop) : ((term5655 A s g _37966) = (term5655 A s g _37966)) = True.
Proof. exact (@lem3551778 (term5655 A s g _37966)). Qed.
Lemma lem3551780 {A : Type'} (s : A -> Prop) (g : type686 A) (_37966 : A -> Prop) : ((term5519 A g _37966 s) = (term5655 A s g _37966)) = True.
Proof. exact (TRANS (@lem3551775 A s g _37966) (@lem3551779 A s g _37966)). Qed.
Lemma lem3551781 {A : Type'} (s : A -> Prop) (g : type686 A) (_37966 : A -> Prop) : True = ((term5519 A g _37966 s) = (term5655 A s g _37966)).
Proof. exact (SYM (@lem3551780 A s g _37966)). Qed.
Lemma lem3551782 {A : Type'} (s : A -> Prop) (g : type686 A) (_37966 : A -> Prop) : (term5519 A g _37966 s) = (term5655 A s g _37966).
Proof. exact (EQ_MP (@lem3551781 A s g _37966) (@lem0)). Qed.
Lemma lem3551783 {A : Type'} (_37966 : A -> Prop) (g : type686 A) (s : A -> Prop) (h1 : term5860 A g s) : term5655 A s g _37966.
Proof. exact (EQ_MP (@lem3551782 A s g _37966) (@lem3551552 A _37966 g s h1)). Qed.
Lemma lem3551785 (b : Prop) (a : Prop) : (a \/ b) = (term833 b a).
Proof. exact (EQ_MP (@lem20682 b a) (@lem20764 b a)). Qed.
Lemma lem3551786 {A : Type'} (g : type686 A) (_37966 : A -> Prop) (s : A -> Prop) : (term5655 A s g _37966) = (term5866 A g _37966 s).
Proof. exact (@lem3551785 (term640 A g _37966) (_37966 = s)). Qed.
Lemma lem3551788 (a : Prop) : (term282 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem3551789 {A : Type'} (g : type686 A) (_37966 : A -> Prop) : (term835 A g _37966) = (@I ((A -> Prop) -> Prop) g _37966).
Proof. exact (@lem3551788 (@I ((A -> Prop) -> Prop) g _37966)). Qed.
Lemma lem3551790 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem3551791 {A : Type'} (g : type686 A) (_37966 : A -> Prop) : (term836 A g _37966) = (term837 A g _37966).
Proof. exact (MK_COMB (@lem3551790) (@lem3551789 A g _37966)). Qed.
Lemma lem3551792 {A : Type'} (_37966 : A -> Prop) (s : A -> Prop) : (_37966 = s) = (_37966 = s).
Proof. exact (eq_refl (_37966 = s)). Qed.
Lemma lem3551793 {A : Type'} (g : type686 A) (_37966 : A -> Prop) (s : A -> Prop) : (term5866 A g _37966 s) = (term5867 A g _37966 s).
Proof. exact (MK_COMB (@lem3551791 A g _37966) (@lem3551792 A _37966 s)). Qed.
Lemma lem3551794 {A : Type'} (g : type686 A) (_37966 : A -> Prop) (s : A -> Prop) : (term5655 A s g _37966) = (term5867 A g _37966 s).
Proof. exact (TRANS (@lem3551786 A g _37966 s) (@lem3551793 A g _37966 s)). Qed.
Lemma lem3551797 {A : Type'} (_37966 : A -> Prop) (g : type686 A) (s : A -> Prop) (h1 : term5860 A g s) : term5867 A g _37966 s.
Proof. exact (EQ_MP (@lem3551794 A g _37966 s) (@lem3551783 A _37966 g s h1)). Qed.
Lemma lem3551798 {A : Type'} (_37966 : A -> Prop) (g : type686 A) (s : A -> Prop) (h1 : term5860 A g s) : term5867 A g _37966 s.
Proof. exact (@lem3551797 A _37966 g s h1). Qed.
Lemma lem3551799 {A : Type'} (x'' : A -> Prop) (g : type686 A) (s : A -> Prop) (h1 : term5860 A g s) : term5867 A g x'' s.
Proof. exact (@lem3551798 A x'' g s h1). Qed.
Lemma lem3551802 {A B : Type'} (x'' : A -> Prop) (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) (h1 : term5860 A g s) (h2 : term5193 A B x'' g s u f) : x'' = s.
Proof. exact (@lem3551799 A x'' g s h1 (@lem3551750 A B x'' g s u f h2)). Qed.
Lemma lem3551803 {A B : Type'} (x'' : A -> Prop) (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) (h1 : term5860 A g s) (h2 : term5193 A B x'' g s u f) : term5653 A x'' s.
Proof. exact (fun h0 : term5040 A x'' s => @lem3551802 A B x'' g s u f h1 h2). Qed.
Lemma lem3551805 (p : Prop) : (term828 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem3551806 {A : Type'} (x'' : A -> Prop) (s : A -> Prop) : (term5653 A x'' s) = (x'' = s).
Proof. exact (@lem3551805 (x'' = s)). Qed.
Lemma lem3551807 {A B : Type'} (x'' : A -> Prop) (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) (h1 : term5860 A g s) (h2 : term5193 A B x'' g s u f) : x'' = s.
Proof. exact (EQ_MP (@lem3551806 A x'' s) (@lem3551803 A B x'' g s u f h1 h2)). Qed.
Lemma lem3551810 (p : Prop) : (~ p) = (p -> False).
Proof. exact (EQ_MP (@lem21021 p) (@lem0)). Qed.
Lemma lem3551812 {A : Type'} (x'' : A -> Prop) (s : A -> Prop) : (term5040 A x'' s) = (term5654 A x'' s).
Proof. exact (@lem3551810 (x'' = s)). Qed.
Lemma lem3551815 {A B : Type'} (x'' : A -> Prop) (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) (h1 : term5193 A B x'' g s u f) : term5654 A x'' s.
Proof. exact (EQ_MP (@lem3551812 A x'' s) (@lem3551546 A B x'' g s u f h1)). Qed.
Lemma lem3551818 {A B : Type'} (x'' : A -> Prop) (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) (h1 : term5860 A g s) (h2 : term5193 A B x'' g s u f) : False.
Proof. exact (@lem3551815 A B x'' g s u f h2 (@lem3551807 A B x'' g s u f h1 h2)). Qed.
Lemma lem3551819 {A B : Type'} (x'' : A -> Prop) (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) (h1 : term5860 A g s) (h2 : term5193 A B x'' g s u f) : term847.
Proof. exact (fun h0 : ~ False => @lem3551818 A B x'' g s u f h1 h2). Qed.
Lemma lem3551821 (p : Prop) : (term828 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem3551822 : term847 = False.
Proof. exact (@lem3551821 False). Qed.
Lemma lem3551823 {A B : Type'} (x'' : A -> Prop) (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) (h1 : term5860 A g s) (h2 : term5193 A B x'' g s u f) : False.
Proof. exact (EQ_MP (@lem3551822) (@lem3551819 A B x'' g s u f h1 h2)). Qed.
Lemma lem3551888 {A B : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) (x' : A) (t : A -> Prop) (x : A) (h1 : term5858 A B g s u f x' t x) : @I ((A -> Prop) -> Prop) g t.
Proof. exact (proj1 (@lem3550725 A B g s u f x' t x h1)). Qed.
Lemma lem3551889 {A B : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) (x' : A) (t : A -> Prop) (x : A) (h1 : term5858 A B g s u f x' t x) : term829 A g t.
Proof. exact (fun h0 : term640 A g t => @lem3551888 A B g s u f x' t x h1). Qed.
Lemma lem3551891 (p : Prop) : (term828 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem3551892 {A : Type'} (g : type686 A) (t : A -> Prop) : (term829 A g t) = (@I ((A -> Prop) -> Prop) g t).
Proof. exact (@lem3551891 (@I ((A -> Prop) -> Prop) g t)). Qed.
Lemma lem3551893 {A B : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) (x' : A) (t : A -> Prop) (x : A) (h1 : term5858 A B g s u f x' t x) : @I ((A -> Prop) -> Prop) g t.
Proof. exact (EQ_MP (@lem3551892 A g t) (@lem3551889 A B g s u f x' t x h1)). Qed.
Lemma lem3551895 {A B : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) (x' : A) (t : A -> Prop) (x : A) (h1 : term5858 A B g s u f x' t x) : term5040 A t s.
Proof. exact (proj2 (@lem3550725 A B g s u f x' t x h1)). Qed.
Lemma lem3551896 {A B : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) (x' : A) (t : A -> Prop) (x : A) (h1 : term5858 A B g s u f x' t x) : term5592 A t s.
Proof. exact (fun h0 : t = s => @lem3551895 A B g s u f x' t x h1). Qed.
Lemma lem3551898 (p : Prop) : (term4856 p) = (~ p).
Proof. exact (EQ_MP (@lem21028 p) (@lem21107 p)). Qed.
Lemma lem3551899 {A : Type'} (t : A -> Prop) (s : A -> Prop) : (term5592 A t s) = (term5040 A t s).
Proof. exact (@lem3551898 (t = s)). Qed.
Lemma lem3551900 {A B : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) (x' : A) (t : A -> Prop) (x : A) (h1 : term5858 A B g s u f x' t x) : term5040 A t s.
Proof. exact (EQ_MP (@lem3551899 A t s) (@lem3551896 A B g s u f x' t x h1)). Qed.
Lemma lem3551902 {A : Type'} (t : A -> Prop) (u : A -> Prop) (x : A) (h1 : term5515 A t u x) : @I (A -> Prop) t x.
Proof. exact (proj1 (@lem3550728 A t u x h1)). Qed.
Lemma lem3551903 {A : Type'} (t : A -> Prop) (u : A -> Prop) (x : A) (h1 : term5515 A t u x) : term839 A t x.
Proof. exact (fun h0 : term619 A t x => @lem3551902 A t u x h1). Qed.
Lemma lem3551905 (p : Prop) : (term828 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem3551906 {A : Type'} (t : A -> Prop) (x : A) : (term839 A t x) = (@I (A -> Prop) t x).
Proof. exact (@lem3551905 (@I (A -> Prop) t x)). Qed.
Lemma lem3551907 {A : Type'} (t : A -> Prop) (u : A -> Prop) (x : A) (h1 : term5515 A t u x) : @I (A -> Prop) t x.
Proof. exact (EQ_MP (@lem3551906 A t x) (@lem3551903 A t u x h1)). Qed.
Lemma lem3551913 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem3551914 {A : Type'} (s : A -> Prop) (g : type686 A) (_37967 : A -> Prop) (u : A -> Prop) (_37968 : A) : (term5591 A g s _37967 u _37968) = (term5664 A s g _37967 u _37968).
Proof. exact (@lem3551913 (_37967 = s) (term640 A g _37967) (term635 A _37967 u _37968)). Qed.
Lemma lem3551930 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem3551931 {A : Type'} (g : type686 A) (_37967 : A -> Prop) (u : A -> Prop) (_37968 : A) : (term815 A g _37967 u _37968) = (term875 A g _37967 u _37968).
Proof. exact (@lem3551930 (term619 A _37967 _37968) (term640 A g _37967) (@I (A -> Prop) u _37968)). Qed.
Lemma lem3551945 (q : Prop) (p : Prop) : (p \/ q) = (q \/ p).
Proof. exact (proj1 (@lem827 (@el Prop) p q)). Qed.
Lemma lem3551946 {A : Type'} (u : A -> Prop) (_37968 : A) (g : type686 A) (_37967 : A -> Prop) : (term876 A g _37967 u _37968) = (term877 A u _37968 g _37967).
Proof. exact (@lem3551945 (@I (A -> Prop) u _37968) (term640 A g _37967)). Qed.
Lemma lem3551952 {A : Type'} (_37967 : A -> Prop) (_37968 : A) : (term629 A _37967 _37968) = (term629 A _37967 _37968).
Proof. exact (eq_refl (term629 A _37967 _37968)). Qed.
Lemma lem3551953 {A : Type'} (u : A -> Prop) (_37968 : A) (g : type686 A) (_37967 : A -> Prop) : (term875 A g _37967 u _37968) = (term878 A u _37968 g _37967).
Proof. exact (MK_COMB (@lem3551952 A _37967 _37968) (@lem3551946 A u _37968 g _37967)). Qed.
Lemma lem3551957 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem3551958 {A : Type'} (u : A -> Prop) (_37968 : A) (g : type686 A) (_37967 : A -> Prop) : (term878 A u _37968 g _37967) = (term879 A u _37968 g _37967).
Proof. exact (@lem3551957 (@I (A -> Prop) u _37968) (term619 A _37967 _37968) (term640 A g _37967)). Qed.
Lemma lem3551974 {A : Type'} (u : A -> Prop) (_37968 : A) (g : type686 A) (_37967 : A -> Prop) : (term875 A g _37967 u _37968) = (term879 A u _37968 g _37967).
Proof. exact (TRANS (@lem3551953 A u _37968 g _37967) (@lem3551958 A u _37968 g _37967)). Qed.
Lemma lem3551975 {A : Type'} (u : A -> Prop) (_37968 : A) (g : type686 A) (_37967 : A -> Prop) : (term815 A g _37967 u _37968) = (term879 A u _37968 g _37967).
Proof. exact (TRANS (@lem3551931 A g _37967 u _37968) (@lem3551974 A u _37968 g _37967)). Qed.
Lemma lem3551976 {A : Type'} (_37967 : A -> Prop) (s : A -> Prop) : (term5596 A _37967 s) = (term5596 A _37967 s).
Proof. exact (eq_refl (term5596 A _37967 s)). Qed.
Lemma lem3551977 {A : Type'} (s : A -> Prop) (u : A -> Prop) (_37968 : A) (g : type686 A) (_37967 : A -> Prop) : (term5664 A s g _37967 u _37968) = (term5665 A s u _37968 g _37967).
Proof. exact (MK_COMB (@lem3551976 A _37967 s) (@lem3551975 A u _37968 g _37967)). Qed.
Lemma lem3551988 {A : Type'} (s : A -> Prop) (u : A -> Prop) (_37968 : A) (g : type686 A) (_37967 : A -> Prop) : (term5591 A g s _37967 u _37968) = (term5665 A s u _37968 g _37967).
Proof. exact (TRANS (@lem3551914 A s g _37967 u _37968) (@lem3551977 A s u _37968 g _37967)). Qed.
Lemma lem3551989 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem3551990 {A : Type'} (s : A -> Prop) (u : A -> Prop) (_37968 : A) (g : type686 A) (_37967 : A -> Prop) : (term5666 A g s _37967 u _37968) = (term5667 A s u _37968 g _37967).
Proof. exact (MK_COMB (@lem3551989) (@lem3551988 A s u _37968 g _37967)). Qed.
Lemma lem3552004 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem3552005 {A : Type'} (s : A -> Prop) (g : type686 A) (_37967 : A -> Prop) (_37968 : A) : (term5668 A g s _37967 _37968) = (term5669 A s g _37967 _37968).
Proof. exact (@lem3552004 (_37967 = s) (term640 A g _37967) (term619 A _37967 _37968)). Qed.
Lemma lem3552021 (q : Prop) (p : Prop) : (p \/ q) = (q \/ p).
Proof. exact (proj1 (@lem827 (@el Prop) p q)). Qed.
Lemma lem3552022 {A : Type'} (_37968 : A) (g : type686 A) (_37967 : A -> Prop) : (term882 A g _37967 _37968) = (term883 A _37968 g _37967).
Proof. exact (@lem3552021 (term619 A _37967 _37968) (term640 A g _37967)). Qed.
Lemma lem3552028 {A : Type'} (_37967 : A -> Prop) (s : A -> Prop) : (term5596 A _37967 s) = (term5596 A _37967 s).
Proof. exact (eq_refl (term5596 A _37967 s)). Qed.
Lemma lem3552029 {A : Type'} (s : A -> Prop) (_37968 : A) (g : type686 A) (_37967 : A -> Prop) : (term5669 A s g _37967 _37968) = (term5670 A s _37968 g _37967).
Proof. exact (MK_COMB (@lem3552028 A _37967 s) (@lem3552022 A _37968 g _37967)). Qed.
Lemma lem3552040 {A : Type'} (s : A -> Prop) (_37968 : A) (g : type686 A) (_37967 : A -> Prop) : (term5668 A g s _37967 _37968) = (term5670 A s _37968 g _37967).
Proof. exact (TRANS (@lem3552005 A s g _37967 _37968) (@lem3552029 A s _37968 g _37967)). Qed.
Lemma lem3552041 {A : Type'} (u : A -> Prop) (_37968 : A) : (term884 A u _37968) = (term884 A u _37968).
Proof. exact (eq_refl (term884 A u _37968)). Qed.
Lemma lem3552042 {A : Type'} (u : A -> Prop) (s : A -> Prop) (_37968 : A) (g : type686 A) (_37967 : A -> Prop) : (term5671 A u g s _37967 _37968) = (term5672 A u s _37968 g _37967).
Proof. exact (MK_COMB (@lem3552041 A u _37968) (@lem3552040 A s _37968 g _37967)). Qed.
Lemma lem3552046 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem3552047 {A : Type'} (s : A -> Prop) (u : A -> Prop) (_37968 : A) (g : type686 A) (_37967 : A -> Prop) : (term5672 A u s _37968 g _37967) = (term5665 A s u _37968 g _37967).
Proof. exact (@lem3552046 (_37967 = s) (@I (A -> Prop) u _37968) (term883 A _37968 g _37967)). Qed.
Lemma lem3552075 {A : Type'} (s : A -> Prop) (u : A -> Prop) (_37968 : A) (g : type686 A) (_37967 : A -> Prop) : (term5671 A u g s _37967 _37968) = (term5665 A s u _37968 g _37967).
Proof. exact (TRANS (@lem3552042 A u s _37968 g _37967) (@lem3552047 A s u _37968 g _37967)). Qed.
Lemma lem3552076 {A : Type'} (s : A -> Prop) (u : A -> Prop) (_37968 : A) (g : type686 A) (_37967 : A -> Prop) : ((term5591 A g s _37967 u _37968) = (term5671 A u g s _37967 _37968)) = ((term5665 A s u _37968 g _37967) = (term5665 A s u _37968 g _37967)).
Proof. exact (MK_COMB (@lem3551990 A s u _37968 g _37967) (@lem3552075 A s u _37968 g _37967)). Qed.
Lemma lem3552078 {A : Type'} (x : A) : (x = x) = True.
Proof. exact (EQ_MP (@lem20665 A x) (@lem20664 A x)). Qed.
Lemma lem3552079 (x : Prop) : (x = x) = True.
Proof. exact (@lem3552078 Prop x). Qed.
Lemma lem3552080 {A : Type'} (s : A -> Prop) (u : A -> Prop) (_37968 : A) (g : type686 A) (_37967 : A -> Prop) : ((term5665 A s u _37968 g _37967) = (term5665 A s u _37968 g _37967)) = True.
Proof. exact (@lem3552079 (term5665 A s u _37968 g _37967)). Qed.
Lemma lem3552081 {A : Type'} (u : A -> Prop) (g : type686 A) (s : A -> Prop) (_37967 : A -> Prop) (_37968 : A) : ((term5591 A g s _37967 u _37968) = (term5671 A u g s _37967 _37968)) = True.
Proof. exact (TRANS (@lem3552076 A s u _37968 g _37967) (@lem3552080 A s u _37968 g _37967)). Qed.
Lemma lem3552082 {A : Type'} (u : A -> Prop) (g : type686 A) (s : A -> Prop) (_37967 : A -> Prop) (_37968 : A) : True = ((term5591 A g s _37967 u _37968) = (term5671 A u g s _37967 _37968)).
Proof. exact (SYM (@lem3552081 A u g s _37967 _37968)). Qed.
Lemma lem3552083 {A : Type'} (u : A -> Prop) (g : type686 A) (s : A -> Prop) (_37967 : A -> Prop) (_37968 : A) : (term5591 A g s _37967 u _37968) = (term5671 A u g s _37967 _37968).
Proof. exact (EQ_MP (@lem3552082 A u g s _37967 _37968) (@lem0)). Qed.
Lemma lem3552084 {A B : Type'} (_37967 : A -> Prop) (_37968 : A) (x'' : A -> Prop) (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) (h1 : term5193 A B x'' g s u f) : term5671 A u g s _37967 _37968.
Proof. exact (EQ_MP (@lem3552083 A u g s _37967 _37968) (@lem3551568 A B _37967 _37968 x'' g s u f h1)). Qed.
Lemma lem3552086 (b : Prop) (a : Prop) : (a \/ b) = (term833 b a).
Proof. exact (EQ_MP (@lem20682 b a) (@lem20764 b a)). Qed.
Lemma lem3552087 {A : Type'} (g : type686 A) (s : A -> Prop) (_37967 : A -> Prop) (u : A -> Prop) (_37968 : A) : (term5671 A u g s _37967 _37968) = (term5673 A g s _37967 u _37968).
Proof. exact (@lem3552086 (term5668 A g s _37967 _37968) (@I (A -> Prop) u _37968)). Qed.
Lemma lem3552089 (a : Prop) (b : Prop) : (term887 a b) = (term888 a b).
Proof. exact (EQ_MP (@lem20789 a b) (@lem20895 a b)). Qed.
Lemma lem3552090 {A : Type'} (g : type686 A) (s : A -> Prop) (_37967 : A -> Prop) (_37968 : A) : (term5674 A g s _37967 _37968) = (term5675 A g s _37967 _37968).
Proof. exact (@lem3552089 (term640 A g _37967) (term5676 A s _37967 _37968)). Qed.
Lemma lem3552092 (a : Prop) : (term282 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem3552093 {A : Type'} (g : type686 A) (_37967 : A -> Prop) : (term835 A g _37967) = (@I ((A -> Prop) -> Prop) g _37967).
Proof. exact (@lem3552092 (@I ((A -> Prop) -> Prop) g _37967)). Qed.
Lemma lem3552094 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem3552095 {A : Type'} (g : type686 A) (_37967 : A -> Prop) : (term891 A g _37967) = (term678 A g _37967).
Proof. exact (MK_COMB (@lem3552094) (@lem3552093 A g _37967)). Qed.
Lemma lem3552097 (a : Prop) (b : Prop) : (term887 a b) = (term888 a b).
Proof. exact (EQ_MP (@lem20789 a b) (@lem20895 a b)). Qed.
Lemma lem3552098 {A : Type'} (s : A -> Prop) (_37967 : A -> Prop) (_37968 : A) : (term5677 A s _37967 _37968) = (term5678 A s _37967 _37968).
Proof. exact (@lem3552097 (_37967 = s) (term619 A _37967 _37968)). Qed.
Lemma lem3552100 (a : Prop) : (term282 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem3552101 {A : Type'} (_37967 : A -> Prop) (_37968 : A) : (term892 A _37967 _37968) = (@I (A -> Prop) _37967 _37968).
Proof. exact (@lem3552100 (@I (A -> Prop) _37967 _37968)). Qed.
Lemma lem3552102 {A : Type'} (_37967 : A -> Prop) (s : A -> Prop) : (term5636 A _37967 s) = (term5636 A _37967 s).
Proof. exact (eq_refl (term5636 A _37967 s)). Qed.
Lemma lem3552103 {A : Type'} (s : A -> Prop) (_37967 : A -> Prop) (_37968 : A) : (term5678 A s _37967 _37968) = (term5679 A s _37967 _37968).
Proof. exact (MK_COMB (@lem3552102 A _37967 s) (@lem3552101 A _37967 _37968)). Qed.
Lemma lem3552104 {A : Type'} (s : A -> Prop) (_37967 : A -> Prop) (_37968 : A) : (term5677 A s _37967 _37968) = (term5679 A s _37967 _37968).
Proof. exact (TRANS (@lem3552098 A s _37967 _37968) (@lem3552103 A s _37967 _37968)). Qed.
Lemma lem3552105 {A : Type'} (g : type686 A) (s : A -> Prop) (_37967 : A -> Prop) (_37968 : A) : (term5675 A g s _37967 _37968) = (term5680 A g s _37967 _37968).
Proof. exact (MK_COMB (@lem3552095 A g _37967) (@lem3552104 A s _37967 _37968)). Qed.
Lemma lem3552106 {A : Type'} (g : type686 A) (s : A -> Prop) (_37967 : A -> Prop) (_37968 : A) : (term5674 A g s _37967 _37968) = (term5680 A g s _37967 _37968).
Proof. exact (TRANS (@lem3552090 A g s _37967 _37968) (@lem3552105 A g s _37967 _37968)). Qed.
Lemma lem3552107 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem3552108 {A : Type'} (g : type686 A) (s : A -> Prop) (_37967 : A -> Prop) (_37968 : A) : (term5681 A g s _37967 _37968) = (term5682 A g s _37967 _37968).
Proof. exact (MK_COMB (@lem3552107) (@lem3552106 A g s _37967 _37968)). Qed.
Lemma lem3552109 {A : Type'} (u : A -> Prop) (_37968 : A) : (@I (A -> Prop) u _37968) = (@I (A -> Prop) u _37968).
Proof. exact (eq_refl (@I (A -> Prop) u _37968)). Qed.
Lemma lem3552110 {A : Type'} (g : type686 A) (s : A -> Prop) (_37967 : A -> Prop) (u : A -> Prop) (_37968 : A) : (term5673 A g s _37967 u _37968) = (term5683 A g s _37967 u _37968).
Proof. exact (MK_COMB (@lem3552108 A g s _37967 _37968) (@lem3552109 A u _37968)). Qed.
Lemma lem3552111 {A : Type'} (g : type686 A) (s : A -> Prop) (_37967 : A -> Prop) (u : A -> Prop) (_37968 : A) : (term5671 A u g s _37967 _37968) = (term5683 A g s _37967 u _37968).
Proof. exact (TRANS (@lem3552087 A g s _37967 u _37968) (@lem3552110 A g s _37967 u _37968)). Qed.
Lemma lem3552113 {A B : Type'} (g : type686 A) (s : A -> Prop) (f : A -> B) (x' : A) (t : A -> Prop) (u : A -> Prop) (x : A) (h1 : term5858 A B g s u f x' t x) (h2 : term5515 A t u x) : term5679 A s t x.
Proof. exact (conj (@lem3551900 A B g s u f x' t x h1) (@lem3551907 A t u x h2)). Qed.
Lemma lem3552114 {A B : Type'} (g : type686 A) (s : A -> Prop) (f : A -> B) (x' : A) (t : A -> Prop) (u : A -> Prop) (x : A) (h1 : term5858 A B g s u f x' t x) (h2 : term5515 A t u x) : term5680 A g s t x.
Proof. exact (conj (@lem3551893 A B g s u f x' t x h1) (@lem3552113 A B g s f x' t u x h1 h2)). Qed.
Lemma lem3552116 {A B : Type'} (_37967 : A -> Prop) (_37968 : A) (x'' : A -> Prop) (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) (h1 : term5193 A B x'' g s u f) : term5683 A g s _37967 u _37968.
Proof. exact (EQ_MP (@lem3552111 A g s _37967 u _37968) (@lem3552084 A B _37967 _37968 x'' g s u f h1)). Qed.
Lemma lem3552117 {A B : Type'} (_37967 : A -> Prop) (_37968 : A) (x'' : A -> Prop) (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) (h1 : term5193 A B x'' g s u f) : term5683 A g s _37967 u _37968.
Proof. exact (@lem3552116 A B _37967 _37968 x'' g s u f h1). Qed.
Lemma lem3552118 {A B : Type'} (t : A -> Prop) (x : A) (x'' : A -> Prop) (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) (h1 : term5193 A B x'' g s u f) : term5683 A g s t u x.
Proof. exact (@lem3552117 A B t x x'' g s u f h1). Qed.
Lemma lem3552121 {A B : Type'} (x'' : A -> Prop) (g : type686 A) (s : A -> Prop) (f : A -> B) (x' : A) (t : A -> Prop) (u : A -> Prop) (x : A) (h1 : term5193 A B x'' g s u f) (h2 : term5858 A B g s u f x' t x) (h3 : term5515 A t u x) : @I (A -> Prop) u x.
Proof. exact (@lem3552118 A B t x x'' g s u f h1 (@lem3552114 A B g s f x' t u x h2 h3)). Qed.
Lemma lem3552122 {A B : Type'} (x'' : A -> Prop) (g : type686 A) (s : A -> Prop) (f : A -> B) (x' : A) (t : A -> Prop) (u : A -> Prop) (x : A) (h1 : term5193 A B x'' g s u f) (h2 : term5858 A B g s u f x' t x) (h3 : term5515 A t u x) : term839 A u x.
Proof. exact (fun h0 : term619 A u x => @lem3552121 A B x'' g s f x' t u x h1 h2 h3). Qed.
Lemma lem3552124 (p : Prop) : (term828 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem3552125 {A : Type'} (u : A -> Prop) (x : A) : (term839 A u x) = (@I (A -> Prop) u x).
Proof. exact (@lem3552124 (@I (A -> Prop) u x)). Qed.
Lemma lem3552126 {A B : Type'} (x'' : A -> Prop) (g : type686 A) (s : A -> Prop) (f : A -> B) (x' : A) (t : A -> Prop) (u : A -> Prop) (x : A) (h1 : term5193 A B x'' g s u f) (h2 : term5858 A B g s u f x' t x) (h3 : term5515 A t u x) : @I (A -> Prop) u x.
Proof. exact (EQ_MP (@lem3552125 A u x) (@lem3552122 A B x'' g s f x' t u x h1 h2 h3)). Qed.
Lemma lem3552129 (p : Prop) : (~ p) = (p -> False).
Proof. exact (EQ_MP (@lem21021 p) (@lem0)). Qed.
Lemma lem3552131 {A : Type'} (u : A -> Prop) (x : A) : (term619 A u x) = (term5684 A u x).
Proof. exact (@lem3552129 (@I (A -> Prop) u x)). Qed.
Lemma lem3552134 {A : Type'} (t : A -> Prop) (u : A -> Prop) (x : A) (h1 : term5515 A t u x) : term5684 A u x.
Proof. exact (EQ_MP (@lem3552131 A u x) (@lem3551614 A t u x h1)). Qed.
Lemma lem3552137 {A B : Type'} (x'' : A -> Prop) (g : type686 A) (s : A -> Prop) (f : A -> B) (x' : A) (t : A -> Prop) (u : A -> Prop) (x : A) (h1 : term5193 A B x'' g s u f) (h2 : term5858 A B g s u f x' t x) (h3 : term5515 A t u x) : False.
Proof. exact (@lem3552134 A t u x h3 (@lem3552126 A B x'' g s f x' t u x h1 h2 h3)). Qed.
Lemma lem3552138 {A B : Type'} (x'' : A -> Prop) (g : type686 A) (s : A -> Prop) (f : A -> B) (x' : A) (t : A -> Prop) (u : A -> Prop) (x : A) (h1 : term5193 A B x'' g s u f) (h2 : term5858 A B g s u f x' t x) (h3 : term5515 A t u x) : term847.
Proof. exact (fun h0 : ~ False => @lem3552137 A B x'' g s f x' t u x h1 h2 h3). Qed.
Lemma lem3552140 (p : Prop) : (term828 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem3552141 : term847 = False.
Proof. exact (@lem3552140 False). Qed.
Lemma lem3552142 {A B : Type'} (x'' : A -> Prop) (g : type686 A) (s : A -> Prop) (f : A -> B) (x' : A) (t : A -> Prop) (u : A -> Prop) (x : A) (h1 : term5193 A B x'' g s u f) (h2 : term5858 A B g s u f x' t x) (h3 : term5515 A t u x) : False.
Proof. exact (EQ_MP (@lem3552141) (@lem3552138 A B x'' g s f x' t u x h1 h2 h3)). Qed.
Lemma lem3552207 {A B : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) (x' : A) (t : A -> Prop) (x : A) (h1 : term5858 A B g s u f x' t x) : @I ((A -> Prop) -> Prop) g t.
Proof. exact (proj1 (@lem3550725 A B g s u f x' t x h1)). Qed.
Lemma lem3552208 {A B : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) (x' : A) (t : A -> Prop) (x : A) (h1 : term5858 A B g s u f x' t x) : term829 A g t.
Proof. exact (fun h0 : term640 A g t => @lem3552207 A B g s u f x' t x h1). Qed.
Lemma lem3552210 (p : Prop) : (term828 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem3552211 {A : Type'} (g : type686 A) (t : A -> Prop) : (term829 A g t) = (@I ((A -> Prop) -> Prop) g t).
Proof. exact (@lem3552210 (@I ((A -> Prop) -> Prop) g t)). Qed.
Lemma lem3552212 {A B : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) (x' : A) (t : A -> Prop) (x : A) (h1 : term5858 A B g s u f x' t x) : @I ((A -> Prop) -> Prop) g t.
Proof. exact (EQ_MP (@lem3552211 A g t) (@lem3552208 A B g s u f x' t x h1)). Qed.
Lemma lem3552214 {A B : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) (x' : A) (t : A -> Prop) (x : A) (h1 : term5858 A B g s u f x' t x) : term5040 A t s.
Proof. exact (proj2 (@lem3550725 A B g s u f x' t x h1)). Qed.
Lemma lem3552215 {A B : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) (x' : A) (t : A -> Prop) (x : A) (h1 : term5858 A B g s u f x' t x) : term5592 A t s.
Proof. exact (fun h0 : t = s => @lem3552214 A B g s u f x' t x h1). Qed.
Lemma lem3552217 (p : Prop) : (term4856 p) = (~ p).
Proof. exact (EQ_MP (@lem21028 p) (@lem21107 p)). Qed.
Lemma lem3552218 {A : Type'} (t : A -> Prop) (s : A -> Prop) : (term5592 A t s) = (term5040 A t s).
Proof. exact (@lem3552217 (t = s)). Qed.
Lemma lem3552219 {A B : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) (x' : A) (t : A -> Prop) (x : A) (h1 : term5858 A B g s u f x' t x) : term5040 A t s.
Proof. exact (EQ_MP (@lem3552218 A t s) (@lem3552215 A B g s u f x' t x h1)). Qed.
Lemma lem3552221 {A B : Type'} (u : A -> Prop) (f : A -> B) (x' : A) (t : A -> Prop) (x : A) (h1 : term5533 A B u f x' t x) : @I (A -> Prop) u x.
Proof. exact (proj1 (@lem3550733 A B u f x' t x h1)). Qed.
Lemma lem3552222 {A B : Type'} (u : A -> Prop) (f : A -> B) (x' : A) (t : A -> Prop) (x : A) (h1 : term5533 A B u f x' t x) : term839 A u x.
Proof. exact (fun h0 : term619 A u x => @lem3552221 A B u f x' t x h1). Qed.
Lemma lem3552224 (p : Prop) : (term828 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem3552225 {A : Type'} (u : A -> Prop) (x : A) : (term839 A u x) = (@I (A -> Prop) u x).
Proof. exact (@lem3552224 (@I (A -> Prop) u x)). Qed.
Lemma lem3552226 {A B : Type'} (u : A -> Prop) (f : A -> B) (x' : A) (t : A -> Prop) (x : A) (h1 : term5533 A B u f x' t x) : @I (A -> Prop) u x.
Proof. exact (EQ_MP (@lem3552225 A u x) (@lem3552222 A B u f x' t x h1)). Qed.
Lemma lem3552228 {A B : Type'} (u : A -> Prop) (f : A -> B) (x' : A) (t : A -> Prop) (x : A) (h1 : term5533 A B u f x' t x) : (@I (A -> B) f x) = (@I (A -> B) f x').
Proof. exact (proj1 (@lem3550734 A B u f x' t x h1)). Qed.
Lemma lem3552229 {A B : Type'} (u : A -> Prop) (f : A -> B) (x' : A) (t : A -> Prop) (x : A) (h1 : term5533 A B u f x' t x) : term5593 A B x f x'.
Proof. exact (fun h0 : term623 A B x f x' => @lem3552228 A B u f x' t x h1). Qed.
Lemma lem3552231 (p : Prop) : (term828 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem3552232 {A B : Type'} (x : A) (f : A -> B) (x' : A) : (term5593 A B x f x') = ((@I (A -> B) f x) = (@I (A -> B) f x')).
Proof. exact (@lem3552231 ((@I (A -> B) f x) = (@I (A -> B) f x'))). Qed.
Lemma lem3552233 {A B : Type'} (u : A -> Prop) (f : A -> B) (x' : A) (t : A -> Prop) (x : A) (h1 : term5533 A B u f x' t x) : (@I (A -> B) f x) = (@I (A -> B) f x').
Proof. exact (EQ_MP (@lem3552232 A B x f x') (@lem3552229 A B u f x' t x h1)). Qed.
Lemma lem3552235 {A B : Type'} (u : A -> Prop) (f : A -> B) (x' : A) (t : A -> Prop) (x : A) (h1 : term5533 A B u f x' t x) : @I (A -> Prop) t x'.
Proof. exact (proj2 (@lem3550734 A B u f x' t x h1)). Qed.
Lemma lem3552236 {A B : Type'} (u : A -> Prop) (f : A -> B) (x' : A) (t : A -> Prop) (x : A) (h1 : term5533 A B u f x' t x) : term839 A t x'.
Proof. exact (fun h0 : term619 A t x' => @lem3552235 A B u f x' t x h1). Qed.
Lemma lem3552238 (p : Prop) : (term828 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem3552239 {A : Type'} (t : A -> Prop) (x' : A) : (term839 A t x') = (@I (A -> Prop) t x').
Proof. exact (@lem3552238 (@I (A -> Prop) t x')). Qed.
Lemma lem3552240 {A B : Type'} (u : A -> Prop) (f : A -> B) (x' : A) (t : A -> Prop) (x : A) (h1 : term5533 A B u f x' t x) : @I (A -> Prop) t x'.
Proof. exact (EQ_MP (@lem3552239 A t x') (@lem3552236 A B u f x' t x h1)). Qed.
Lemma lem3552246 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem3552247 {A B : Type'} (s : A -> Prop) (g : type686 A) (u : A -> Prop) (f : A -> B) (_37978 : A) (_37976 : A -> Prop) (_37977 : A) : (term5589 A B g s u f _37978 _37976 _37977) = (term5595 A B s g u f _37978 _37976 _37977).
Proof. exact (@lem3552246 (_37976 = s) (term640 A g _37976) (term819 A B u f _37978 _37976 _37977)). Qed.
Lemma lem3552263 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem3552264 {A B : Type'} (u : A -> Prop) (g : type686 A) (f : A -> B) (_37978 : A) (_37976 : A -> Prop) (_37977 : A) : (term820 A B g u f _37978 _37976 _37977) = (term934 A B u g f _37978 _37976 _37977).
Proof. exact (@lem3552263 (term619 A u _37977) (term640 A g _37976) (term818 A B f _37978 _37976 _37977)). Qed.
Lemma lem3552278 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem3552279 {A B : Type'} (f : A -> B) (g : type686 A) (_37978 : A) (_37976 : A -> Prop) (_37977 : A) : (term935 A B g f _37978 _37976 _37977) = (term936 A B f g _37978 _37976 _37977).
Proof. exact (@lem3552278 (term623 A B _37977 f _37978) (term640 A g _37976) (term937 A _37978 _37976 _37977)). Qed.
Lemma lem3552295 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem3552296 {A : Type'} (_37978 : A) (g : type686 A) (_37976 : A -> Prop) (_37977 : A) : (term938 A g _37978 _37976 _37977) = (term939 A _37978 g _37976 _37977).
Proof. exact (@lem3552295 (term619 A _37976 _37978) (term640 A g _37976) (@I (A -> Prop) _37976 _37977)). Qed.
Lemma lem3552310 (q : Prop) (p : Prop) : (p \/ q) = (q \/ p).
Proof. exact (proj1 (@lem827 (@el Prop) p q)). Qed.
Lemma lem3552311 {A : Type'} (_37977 : A) (g : type686 A) (_37976 : A -> Prop) : (term680 A g _37976 _37977) = (term830 A _37977 g _37976).
Proof. exact (@lem3552310 (@I (A -> Prop) _37976 _37977) (term640 A g _37976)). Qed.
Lemma lem3552317 {A : Type'} (_37976 : A -> Prop) (_37978 : A) : (term629 A _37976 _37978) = (term629 A _37976 _37978).
Proof. exact (eq_refl (term629 A _37976 _37978)). Qed.
Lemma lem3552318 {A : Type'} (_37978 : A) (_37977 : A) (g : type686 A) (_37976 : A -> Prop) : (term939 A _37978 g _37976 _37977) = (term940 A _37978 _37977 g _37976).
Proof. exact (MK_COMB (@lem3552317 A _37976 _37978) (@lem3552311 A _37977 g _37976)). Qed.
Lemma lem3552322 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem3552323 {A : Type'} (_37977 : A) (_37978 : A) (g : type686 A) (_37976 : A -> Prop) : (term940 A _37978 _37977 g _37976) = (term941 A _37977 _37978 g _37976).
Proof. exact (@lem3552322 (@I (A -> Prop) _37976 _37977) (term619 A _37976 _37978) (term640 A g _37976)). Qed.
Lemma lem3552339 {A : Type'} (_37977 : A) (_37978 : A) (g : type686 A) (_37976 : A -> Prop) : (term939 A _37978 g _37976 _37977) = (term941 A _37977 _37978 g _37976).
Proof. exact (TRANS (@lem3552318 A _37978 _37977 g _37976) (@lem3552323 A _37977 _37978 g _37976)). Qed.
Lemma lem3552340 {A : Type'} (_37977 : A) (_37978 : A) (g : type686 A) (_37976 : A -> Prop) : (term938 A g _37978 _37976 _37977) = (term941 A _37977 _37978 g _37976).
Proof. exact (TRANS (@lem3552296 A _37978 g _37976 _37977) (@lem3552339 A _37977 _37978 g _37976)). Qed.
Lemma lem3552341 {A B : Type'} (_37977 : A) (f : A -> B) (_37978 : A) : (term625 A B _37977 f _37978) = (term625 A B _37977 f _37978).
Proof. exact (eq_refl (term625 A B _37977 f _37978)). Qed.
Lemma lem3552342 {A B : Type'} (f : A -> B) (_37977 : A) (_37978 : A) (g : type686 A) (_37976 : A -> Prop) : (term936 A B f g _37978 _37976 _37977) = (term942 A B f _37977 _37978 g _37976).
Proof. exact (MK_COMB (@lem3552341 A B _37977 f _37978) (@lem3552340 A _37977 _37978 g _37976)). Qed.
Lemma lem3552346 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem3552347 {A B : Type'} (_37977 : A) (f : A -> B) (_37978 : A) (g : type686 A) (_37976 : A -> Prop) : (term942 A B f _37977 _37978 g _37976) = (term943 A B _37977 f _37978 g _37976).
Proof. exact (@lem3552346 (@I (A -> Prop) _37976 _37977) (term623 A B _37977 f _37978) (term883 A _37978 g _37976)). Qed.
Lemma lem3552375 {A B : Type'} (_37977 : A) (f : A -> B) (_37978 : A) (g : type686 A) (_37976 : A -> Prop) : (term936 A B f g _37978 _37976 _37977) = (term943 A B _37977 f _37978 g _37976).
Proof. exact (TRANS (@lem3552342 A B f _37977 _37978 g _37976) (@lem3552347 A B _37977 f _37978 g _37976)). Qed.
Lemma lem3552376 {A B : Type'} (_37977 : A) (f : A -> B) (_37978 : A) (g : type686 A) (_37976 : A -> Prop) : (term935 A B g f _37978 _37976 _37977) = (term943 A B _37977 f _37978 g _37976).
Proof. exact (TRANS (@lem3552279 A B f g _37978 _37976 _37977) (@lem3552375 A B _37977 f _37978 g _37976)). Qed.
Lemma lem3552377 {A : Type'} (u : A -> Prop) (_37977 : A) : (term629 A u _37977) = (term629 A u _37977).
Proof. exact (eq_refl (term629 A u _37977)). Qed.
Lemma lem3552378 {A B : Type'} (u : A -> Prop) (_37977 : A) (f : A -> B) (_37978 : A) (g : type686 A) (_37976 : A -> Prop) : (term934 A B u g f _37978 _37976 _37977) = (term944 A B u _37977 f _37978 g _37976).
Proof. exact (MK_COMB (@lem3552377 A u _37977) (@lem3552376 A B _37977 f _37978 g _37976)). Qed.
Lemma lem3552382 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem3552383 {A B : Type'} (u : A -> Prop) (_37977 : A) (f : A -> B) (_37978 : A) (g : type686 A) (_37976 : A -> Prop) : (term944 A B u _37977 f _37978 g _37976) = (term945 A B u _37977 f _37978 g _37976).
Proof. exact (@lem3552382 (@I (A -> Prop) _37976 _37977) (term619 A u _37977) (term946 A B _37977 f _37978 g _37976)). Qed.
Lemma lem3552397 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem3552398 {A B : Type'} (f : A -> B) (u : A -> Prop) (_37977 : A) (_37978 : A) (g : type686 A) (_37976 : A -> Prop) : (term947 A B u _37977 f _37978 g _37976) = (term948 A B f u _37977 _37978 g _37976).
Proof. exact (@lem3552397 (term623 A B _37977 f _37978) (term619 A u _37977) (term883 A _37978 g _37976)). Qed.
Lemma lem3552414 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem3552415 {A : Type'} (_37978 : A) (u : A -> Prop) (_37977 : A) (g : type686 A) (_37976 : A -> Prop) : (term949 A u _37977 _37978 g _37976) = (term950 A _37978 u _37977 g _37976).
Proof. exact (@lem3552414 (term619 A _37976 _37978) (term619 A u _37977) (term640 A g _37976)). Qed.
Lemma lem3552431 {A B : Type'} (_37977 : A) (f : A -> B) (_37978 : A) : (term625 A B _37977 f _37978) = (term625 A B _37977 f _37978).
Proof. exact (eq_refl (term625 A B _37977 f _37978)). Qed.
Lemma lem3552432 {A B : Type'} (f : A -> B) (_37978 : A) (u : A -> Prop) (_37977 : A) (g : type686 A) (_37976 : A -> Prop) : (term948 A B f u _37977 _37978 g _37976) = (term951 A B f _37978 u _37977 g _37976).
Proof. exact (MK_COMB (@lem3552431 A B _37977 f _37978) (@lem3552415 A _37978 u _37977 g _37976)). Qed.
Lemma lem3552443 {A B : Type'} (f : A -> B) (_37978 : A) (u : A -> Prop) (_37977 : A) (g : type686 A) (_37976 : A -> Prop) : (term947 A B u _37977 f _37978 g _37976) = (term951 A B f _37978 u _37977 g _37976).
Proof. exact (TRANS (@lem3552398 A B f u _37977 _37978 g _37976) (@lem3552432 A B f _37978 u _37977 g _37976)). Qed.
Lemma lem3552444 {A : Type'} (_37976 : A -> Prop) (_37977 : A) : (term884 A _37976 _37977) = (term884 A _37976 _37977).
Proof. exact (eq_refl (term884 A _37976 _37977)). Qed.
Lemma lem3552445 {A B : Type'} (f : A -> B) (_37978 : A) (u : A -> Prop) (_37977 : A) (g : type686 A) (_37976 : A -> Prop) : (term945 A B u _37977 f _37978 g _37976) = (term952 A B f _37978 u _37977 g _37976).
Proof. exact (MK_COMB (@lem3552444 A _37976 _37977) (@lem3552443 A B f _37978 u _37977 g _37976)). Qed.
Lemma lem3552456 {A B : Type'} (f : A -> B) (_37978 : A) (u : A -> Prop) (_37977 : A) (g : type686 A) (_37976 : A -> Prop) : (term944 A B u _37977 f _37978 g _37976) = (term952 A B f _37978 u _37977 g _37976).
Proof. exact (TRANS (@lem3552383 A B u _37977 f _37978 g _37976) (@lem3552445 A B f _37978 u _37977 g _37976)). Qed.
Lemma lem3552457 {A B : Type'} (f : A -> B) (_37978 : A) (u : A -> Prop) (_37977 : A) (g : type686 A) (_37976 : A -> Prop) : (term934 A B u g f _37978 _37976 _37977) = (term952 A B f _37978 u _37977 g _37976).
Proof. exact (TRANS (@lem3552378 A B u _37977 f _37978 g _37976) (@lem3552456 A B f _37978 u _37977 g _37976)). Qed.
Lemma lem3552458 {A B : Type'} (f : A -> B) (_37978 : A) (u : A -> Prop) (_37977 : A) (g : type686 A) (_37976 : A -> Prop) : (term820 A B g u f _37978 _37976 _37977) = (term952 A B f _37978 u _37977 g _37976).
Proof. exact (TRANS (@lem3552264 A B u g f _37978 _37976 _37977) (@lem3552457 A B f _37978 u _37977 g _37976)). Qed.
Lemma lem3552459 {A : Type'} (_37976 : A -> Prop) (s : A -> Prop) : (term5596 A _37976 s) = (term5596 A _37976 s).
Proof. exact (eq_refl (term5596 A _37976 s)). Qed.
Lemma lem3552460 {A B : Type'} (s : A -> Prop) (f : A -> B) (_37978 : A) (u : A -> Prop) (_37977 : A) (g : type686 A) (_37976 : A -> Prop) : (term5595 A B s g u f _37978 _37976 _37977) = (term5597 A B s f _37978 u _37977 g _37976).
Proof. exact (MK_COMB (@lem3552459 A _37976 s) (@lem3552458 A B f _37978 u _37977 g _37976)). Qed.
Lemma lem3552471 {A B : Type'} (s : A -> Prop) (f : A -> B) (_37978 : A) (u : A -> Prop) (_37977 : A) (g : type686 A) (_37976 : A -> Prop) : (term5589 A B g s u f _37978 _37976 _37977) = (term5597 A B s f _37978 u _37977 g _37976).
Proof. exact (TRANS (@lem3552247 A B s g u f _37978 _37976 _37977) (@lem3552460 A B s f _37978 u _37977 g _37976)). Qed.
Lemma lem3552472 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem3552473 {A B : Type'} (s : A -> Prop) (f : A -> B) (_37978 : A) (u : A -> Prop) (_37977 : A) (g : type686 A) (_37976 : A -> Prop) : (term5598 A B g s u f _37978 _37976 _37977) = (term5599 A B s f _37978 u _37977 g _37976).
Proof. exact (MK_COMB (@lem3552472) (@lem3552471 A B s f _37978 u _37977 g _37976)). Qed.
Lemma lem3552487 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem3552488 {A B : Type'} (s : A -> Prop) (g : type686 A) (u : A -> Prop) (_37977 : A) (f : A -> B) (_37976 : A -> Prop) (_37978 : A) : (term5868 A B g s u _37977 f _37976 _37978) = (term5869 A B s g u _37977 f _37976 _37978).
Proof. exact (@lem3552487 (_37976 = s) (term640 A g _37976) (term699 A B u _37977 f _37976 _37978)). Qed.
Lemma lem3552504 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem3552505 {A B : Type'} (u : A -> Prop) (g : type686 A) (_37977 : A) (f : A -> B) (_37976 : A -> Prop) (_37978 : A) : (term955 A B g u _37977 f _37976 _37978) = (term956 A B u g _37977 f _37976 _37978).
Proof. exact (@lem3552504 (term619 A u _37977) (term640 A g _37976) (term626 A B _37977 f _37976 _37978)). Qed.
Lemma lem3552519 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem3552520 {A B : Type'} (_37977 : A) (f : A -> B) (g : type686 A) (_37976 : A -> Prop) (_37978 : A) : (term957 A B g _37977 f _37976 _37978) = (term958 A B _37977 f g _37976 _37978).
Proof. exact (@lem3552519 (term623 A B _37977 f _37978) (term640 A g _37976) (term619 A _37976 _37978)). Qed.
Lemma lem3552536 (q : Prop) (p : Prop) : (p \/ q) = (q \/ p).
Proof. exact (proj1 (@lem827 (@el Prop) p q)). Qed.
Lemma lem3552537 {A : Type'} (_37978 : A) (g : type686 A) (_37976 : A -> Prop) : (term882 A g _37976 _37978) = (term883 A _37978 g _37976).
Proof. exact (@lem3552536 (term619 A _37976 _37978) (term640 A g _37976)). Qed.
Lemma lem3552543 {A B : Type'} (_37977 : A) (f : A -> B) (_37978 : A) : (term625 A B _37977 f _37978) = (term625 A B _37977 f _37978).
Proof. exact (eq_refl (term625 A B _37977 f _37978)). Qed.
Lemma lem3552544 {A B : Type'} (_37977 : A) (f : A -> B) (_37978 : A) (g : type686 A) (_37976 : A -> Prop) : (term958 A B _37977 f g _37976 _37978) = (term946 A B _37977 f _37978 g _37976).
Proof. exact (MK_COMB (@lem3552543 A B _37977 f _37978) (@lem3552537 A _37978 g _37976)). Qed.
Lemma lem3552555 {A B : Type'} (_37977 : A) (f : A -> B) (_37978 : A) (g : type686 A) (_37976 : A -> Prop) : (term957 A B g _37977 f _37976 _37978) = (term946 A B _37977 f _37978 g _37976).
Proof. exact (TRANS (@lem3552520 A B _37977 f g _37976 _37978) (@lem3552544 A B _37977 f _37978 g _37976)). Qed.
Lemma lem3552556 {A : Type'} (u : A -> Prop) (_37977 : A) : (term629 A u _37977) = (term629 A u _37977).
Proof. exact (eq_refl (term629 A u _37977)). Qed.
Lemma lem3552557 {A B : Type'} (u : A -> Prop) (_37977 : A) (f : A -> B) (_37978 : A) (g : type686 A) (_37976 : A -> Prop) : (term956 A B u g _37977 f _37976 _37978) = (term947 A B u _37977 f _37978 g _37976).
Proof. exact (MK_COMB (@lem3552556 A u _37977) (@lem3552555 A B _37977 f _37978 g _37976)). Qed.
Lemma lem3552561 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem3552562 {A B : Type'} (f : A -> B) (u : A -> Prop) (_37977 : A) (_37978 : A) (g : type686 A) (_37976 : A -> Prop) : (term947 A B u _37977 f _37978 g _37976) = (term948 A B f u _37977 _37978 g _37976).
Proof. exact (@lem3552561 (term623 A B _37977 f _37978) (term619 A u _37977) (term883 A _37978 g _37976)). Qed.
Lemma lem3552578 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem3552579 {A : Type'} (_37978 : A) (u : A -> Prop) (_37977 : A) (g : type686 A) (_37976 : A -> Prop) : (term949 A u _37977 _37978 g _37976) = (term950 A _37978 u _37977 g _37976).
Proof. exact (@lem3552578 (term619 A _37976 _37978) (term619 A u _37977) (term640 A g _37976)). Qed.
Lemma lem3552595 {A B : Type'} (_37977 : A) (f : A -> B) (_37978 : A) : (term625 A B _37977 f _37978) = (term625 A B _37977 f _37978).
Proof. exact (eq_refl (term625 A B _37977 f _37978)). Qed.
Lemma lem3552596 {A B : Type'} (f : A -> B) (_37978 : A) (u : A -> Prop) (_37977 : A) (g : type686 A) (_37976 : A -> Prop) : (term948 A B f u _37977 _37978 g _37976) = (term951 A B f _37978 u _37977 g _37976).
Proof. exact (MK_COMB (@lem3552595 A B _37977 f _37978) (@lem3552579 A _37978 u _37977 g _37976)). Qed.
Lemma lem3552607 {A B : Type'} (f : A -> B) (_37978 : A) (u : A -> Prop) (_37977 : A) (g : type686 A) (_37976 : A -> Prop) : (term947 A B u _37977 f _37978 g _37976) = (term951 A B f _37978 u _37977 g _37976).
Proof. exact (TRANS (@lem3552562 A B f u _37977 _37978 g _37976) (@lem3552596 A B f _37978 u _37977 g _37976)). Qed.
Lemma lem3552608 {A B : Type'} (f : A -> B) (_37978 : A) (u : A -> Prop) (_37977 : A) (g : type686 A) (_37976 : A -> Prop) : (term956 A B u g _37977 f _37976 _37978) = (term951 A B f _37978 u _37977 g _37976).
Proof. exact (TRANS (@lem3552557 A B u _37977 f _37978 g _37976) (@lem3552607 A B f _37978 u _37977 g _37976)). Qed.
Lemma lem3552609 {A B : Type'} (f : A -> B) (_37978 : A) (u : A -> Prop) (_37977 : A) (g : type686 A) (_37976 : A -> Prop) : (term955 A B g u _37977 f _37976 _37978) = (term951 A B f _37978 u _37977 g _37976).
Proof. exact (TRANS (@lem3552505 A B u g _37977 f _37976 _37978) (@lem3552608 A B f _37978 u _37977 g _37976)). Qed.
Lemma lem3552610 {A : Type'} (_37976 : A -> Prop) (s : A -> Prop) : (term5596 A _37976 s) = (term5596 A _37976 s).
Proof. exact (eq_refl (term5596 A _37976 s)). Qed.
Lemma lem3552611 {A B : Type'} (s : A -> Prop) (f : A -> B) (_37978 : A) (u : A -> Prop) (_37977 : A) (g : type686 A) (_37976 : A -> Prop) : (term5869 A B s g u _37977 f _37976 _37978) = (term5870 A B s f _37978 u _37977 g _37976).
Proof. exact (MK_COMB (@lem3552610 A _37976 s) (@lem3552609 A B f _37978 u _37977 g _37976)). Qed.
Lemma lem3552622 {A B : Type'} (s : A -> Prop) (f : A -> B) (_37978 : A) (u : A -> Prop) (_37977 : A) (g : type686 A) (_37976 : A -> Prop) : (term5868 A B g s u _37977 f _37976 _37978) = (term5870 A B s f _37978 u _37977 g _37976).
Proof. exact (TRANS (@lem3552488 A B s g u _37977 f _37976 _37978) (@lem3552611 A B s f _37978 u _37977 g _37976)). Qed.
Lemma lem3552623 {A : Type'} (_37976 : A -> Prop) (_37977 : A) : (term884 A _37976 _37977) = (term884 A _37976 _37977).
Proof. exact (eq_refl (term884 A _37976 _37977)). Qed.
Lemma lem3552624 {A B : Type'} (s : A -> Prop) (f : A -> B) (_37978 : A) (u : A -> Prop) (_37977 : A) (g : type686 A) (_37976 : A -> Prop) : (term5871 A B g s u _37977 f _37976 _37978) = (term5872 A B s f _37978 u _37977 g _37976).
Proof. exact (MK_COMB (@lem3552623 A _37976 _37977) (@lem3552622 A B s f _37978 u _37977 g _37976)). Qed.
Lemma lem3552628 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem3552629 {A B : Type'} (s : A -> Prop) (f : A -> B) (_37978 : A) (u : A -> Prop) (_37977 : A) (g : type686 A) (_37976 : A -> Prop) : (term5872 A B s f _37978 u _37977 g _37976) = (term5597 A B s f _37978 u _37977 g _37976).
Proof. exact (@lem3552628 (_37976 = s) (@I (A -> Prop) _37976 _37977) (term951 A B f _37978 u _37977 g _37976)). Qed.
Lemma lem3552679 {A B : Type'} (s : A -> Prop) (f : A -> B) (_37978 : A) (u : A -> Prop) (_37977 : A) (g : type686 A) (_37976 : A -> Prop) : (term5871 A B g s u _37977 f _37976 _37978) = (term5597 A B s f _37978 u _37977 g _37976).
Proof. exact (TRANS (@lem3552624 A B s f _37978 u _37977 g _37976) (@lem3552629 A B s f _37978 u _37977 g _37976)). Qed.
Lemma lem3552680 {A B : Type'} (s : A -> Prop) (f : A -> B) (_37978 : A) (u : A -> Prop) (_37977 : A) (g : type686 A) (_37976 : A -> Prop) : ((term5589 A B g s u f _37978 _37976 _37977) = (term5871 A B g s u _37977 f _37976 _37978)) = ((term5597 A B s f _37978 u _37977 g _37976) = (term5597 A B s f _37978 u _37977 g _37976)).
Proof. exact (MK_COMB (@lem3552473 A B s f _37978 u _37977 g _37976) (@lem3552679 A B s f _37978 u _37977 g _37976)). Qed.
Lemma lem3552682 {A : Type'} (x : A) : (x = x) = True.
Proof. exact (EQ_MP (@lem20665 A x) (@lem20664 A x)). Qed.
Lemma lem3552683 (x : Prop) : (x = x) = True.
Proof. exact (@lem3552682 Prop x). Qed.
Lemma lem3552684 {A B : Type'} (s : A -> Prop) (f : A -> B) (_37978 : A) (u : A -> Prop) (_37977 : A) (g : type686 A) (_37976 : A -> Prop) : ((term5597 A B s f _37978 u _37977 g _37976) = (term5597 A B s f _37978 u _37977 g _37976)) = True.
Proof. exact (@lem3552683 (term5597 A B s f _37978 u _37977 g _37976)). Qed.
Lemma lem3552685 {A B : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) (_37977 : A) (f : A -> B) (_37976 : A -> Prop) (_37978 : A) : ((term5589 A B g s u f _37978 _37976 _37977) = (term5871 A B g s u _37977 f _37976 _37978)) = True.
Proof. exact (TRANS (@lem3552680 A B s f _37978 u _37977 g _37976) (@lem3552684 A B s f _37978 u _37977 g _37976)). Qed.
Lemma lem3552686 {A B : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) (_37977 : A) (f : A -> B) (_37976 : A -> Prop) (_37978 : A) : True = ((term5589 A B g s u f _37978 _37976 _37977) = (term5871 A B g s u _37977 f _37976 _37978)).
Proof. exact (SYM (@lem3552685 A B g s u _37977 f _37976 _37978)). Qed.
Lemma lem3552687 {A B : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) (_37977 : A) (f : A -> B) (_37976 : A -> Prop) (_37978 : A) : (term5589 A B g s u f _37978 _37976 _37977) = (term5871 A B g s u _37977 f _37976 _37978).
Proof. exact (EQ_MP (@lem3552686 A B g s u _37977 f _37976 _37978) (@lem0)). Qed.
Lemma lem3552688 {A B : Type'} (_37977 : A) (_37976 : A -> Prop) (_37978 : A) (x'' : A -> Prop) (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) (h1 : term5193 A B x'' g s u f) : term5871 A B g s u _37977 f _37976 _37978.
Proof. exact (EQ_MP (@lem3552687 A B g s u _37977 f _37976 _37978) (@lem3551664 A B _37978 _37976 _37977 x'' g s u f h1)). Qed.
Lemma lem3552690 (b : Prop) (a : Prop) : (a \/ b) = (term833 b a).
Proof. exact (EQ_MP (@lem20682 b a) (@lem20764 b a)). Qed.
Lemma lem3552691 {A B : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) (_37978 : A) (_37976 : A -> Prop) (_37977 : A) : (term5871 A B g s u _37977 f _37976 _37978) = (term5873 A B g s u f _37978 _37976 _37977).
Proof. exact (@lem3552690 (term5868 A B g s u _37977 f _37976 _37978) (@I (A -> Prop) _37976 _37977)). Qed.
Lemma lem3552693 (a : Prop) (b : Prop) : (term887 a b) = (term888 a b).
Proof. exact (EQ_MP (@lem20789 a b) (@lem20895 a b)). Qed.
Lemma lem3552694 {A B : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) (_37977 : A) (f : A -> B) (_37976 : A -> Prop) (_37978 : A) : (term5874 A B g s u _37977 f _37976 _37978) = (term5875 A B g s u _37977 f _37976 _37978).
Proof. exact (@lem3552693 (term640 A g _37976) (term5876 A B s u _37977 f _37976 _37978)). Qed.
Lemma lem3552696 (a : Prop) : (term282 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem3552697 {A : Type'} (g : type686 A) (_37976 : A -> Prop) : (term835 A g _37976) = (@I ((A -> Prop) -> Prop) g _37976).
Proof. exact (@lem3552696 (@I ((A -> Prop) -> Prop) g _37976)). Qed.
Lemma lem3552698 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem3552699 {A : Type'} (g : type686 A) (_37976 : A -> Prop) : (term891 A g _37976) = (term678 A g _37976).
Proof. exact (MK_COMB (@lem3552698) (@lem3552697 A g _37976)). Qed.
Lemma lem3552701 (a : Prop) (b : Prop) : (term887 a b) = (term888 a b).
Proof. exact (EQ_MP (@lem20789 a b) (@lem20895 a b)). Qed.
Lemma lem3552702 {A B : Type'} (s : A -> Prop) (u : A -> Prop) (_37977 : A) (f : A -> B) (_37976 : A -> Prop) (_37978 : A) : (term5877 A B s u _37977 f _37976 _37978) = (term5878 A B s u _37977 f _37976 _37978).
Proof. exact (@lem3552701 (_37976 = s) (term699 A B u _37977 f _37976 _37978)). Qed.
Lemma lem3552704 (a : Prop) (b : Prop) : (term887 a b) = (term888 a b).
Proof. exact (EQ_MP (@lem20789 a b) (@lem20895 a b)). Qed.
Lemma lem3552705 {A B : Type'} (u : A -> Prop) (_37977 : A) (f : A -> B) (_37976 : A -> Prop) (_37978 : A) : (term963 A B u _37977 f _37976 _37978) = (term964 A B u _37977 f _37976 _37978).
Proof. exact (@lem3552704 (term619 A u _37977) (term626 A B _37977 f _37976 _37978)). Qed.
Lemma lem3552707 (a : Prop) : (term282 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem3552708 {A : Type'} (u : A -> Prop) (_37977 : A) : (term892 A u _37977) = (@I (A -> Prop) u _37977).
Proof. exact (@lem3552707 (@I (A -> Prop) u _37977)). Qed.
Lemma lem3552709 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem3552710 {A : Type'} (u : A -> Prop) (_37977 : A) : (term965 A u _37977) = (term966 A u _37977).
Proof. exact (MK_COMB (@lem3552709) (@lem3552708 A u _37977)). Qed.
Lemma lem3552712 (a : Prop) (b : Prop) : (term887 a b) = (term888 a b).
Proof. exact (EQ_MP (@lem20789 a b) (@lem20895 a b)). Qed.
Lemma lem3552713 {A B : Type'} (_37977 : A) (f : A -> B) (_37976 : A -> Prop) (_37978 : A) : (term967 A B _37977 f _37976 _37978) = (term968 A B _37977 f _37976 _37978).
Proof. exact (@lem3552712 (term623 A B _37977 f _37978) (term619 A _37976 _37978)). Qed.
Lemma lem3552715 (a : Prop) : (term282 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem3552716 {A B : Type'} (_37977 : A) (f : A -> B) (_37978 : A) : (term969 A B _37977 f _37978) = ((@I (A -> B) f _37977) = (@I (A -> B) f _37978)).
Proof. exact (@lem3552715 ((@I (A -> B) f _37977) = (@I (A -> B) f _37978))). Qed.
Lemma lem3552717 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem3552718 {A B : Type'} (_37977 : A) (f : A -> B) (_37978 : A) : (term970 A B _37977 f _37978) = (term971 A B _37977 f _37978).
Proof. exact (MK_COMB (@lem3552717) (@lem3552716 A B _37977 f _37978)). Qed.
Lemma lem3552720 (a : Prop) : (term282 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem3552721 {A : Type'} (_37976 : A -> Prop) (_37978 : A) : (term892 A _37976 _37978) = (@I (A -> Prop) _37976 _37978).
Proof. exact (@lem3552720 (@I (A -> Prop) _37976 _37978)). Qed.
Lemma lem3552722 {A B : Type'} (_37977 : A) (f : A -> B) (_37976 : A -> Prop) (_37978 : A) : (term968 A B _37977 f _37976 _37978) = (term844 A B _37977 f _37976 _37978).
Proof. exact (MK_COMB (@lem3552718 A B _37977 f _37978) (@lem3552721 A _37976 _37978)). Qed.
Lemma lem3552723 {A B : Type'} (_37977 : A) (f : A -> B) (_37976 : A -> Prop) (_37978 : A) : (term967 A B _37977 f _37976 _37978) = (term844 A B _37977 f _37976 _37978).
Proof. exact (TRANS (@lem3552713 A B _37977 f _37976 _37978) (@lem3552722 A B _37977 f _37976 _37978)). Qed.
Lemma lem3552724 {A B : Type'} (u : A -> Prop) (_37977 : A) (f : A -> B) (_37976 : A -> Prop) (_37978 : A) : (term964 A B u _37977 f _37976 _37978) = (term972 A B u _37977 f _37976 _37978).
Proof. exact (MK_COMB (@lem3552710 A u _37977) (@lem3552723 A B _37977 f _37976 _37978)). Qed.
Lemma lem3552725 {A B : Type'} (u : A -> Prop) (_37977 : A) (f : A -> B) (_37976 : A -> Prop) (_37978 : A) : (term963 A B u _37977 f _37976 _37978) = (term972 A B u _37977 f _37976 _37978).
Proof. exact (TRANS (@lem3552705 A B u _37977 f _37976 _37978) (@lem3552724 A B u _37977 f _37976 _37978)). Qed.
Lemma lem3552726 {A : Type'} (_37976 : A -> Prop) (s : A -> Prop) : (term5636 A _37976 s) = (term5636 A _37976 s).
Proof. exact (eq_refl (term5636 A _37976 s)). Qed.
Lemma lem3552727 {A B : Type'} (s : A -> Prop) (u : A -> Prop) (_37977 : A) (f : A -> B) (_37976 : A -> Prop) (_37978 : A) : (term5878 A B s u _37977 f _37976 _37978) = (term5879 A B s u _37977 f _37976 _37978).
Proof. exact (MK_COMB (@lem3552726 A _37976 s) (@lem3552725 A B u _37977 f _37976 _37978)). Qed.
Lemma lem3552728 {A B : Type'} (s : A -> Prop) (u : A -> Prop) (_37977 : A) (f : A -> B) (_37976 : A -> Prop) (_37978 : A) : (term5877 A B s u _37977 f _37976 _37978) = (term5879 A B s u _37977 f _37976 _37978).
Proof. exact (TRANS (@lem3552702 A B s u _37977 f _37976 _37978) (@lem3552727 A B s u _37977 f _37976 _37978)). Qed.
Lemma lem3552729 {A B : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) (_37977 : A) (f : A -> B) (_37976 : A -> Prop) (_37978 : A) : (term5875 A B g s u _37977 f _37976 _37978) = (term5880 A B g s u _37977 f _37976 _37978).
Proof. exact (MK_COMB (@lem3552699 A g _37976) (@lem3552728 A B s u _37977 f _37976 _37978)). Qed.
Lemma lem3552730 {A B : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) (_37977 : A) (f : A -> B) (_37976 : A -> Prop) (_37978 : A) : (term5874 A B g s u _37977 f _37976 _37978) = (term5880 A B g s u _37977 f _37976 _37978).
Proof. exact (TRANS (@lem3552694 A B g s u _37977 f _37976 _37978) (@lem3552729 A B g s u _37977 f _37976 _37978)). Qed.
Lemma lem3552731 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem3552732 {A B : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) (_37977 : A) (f : A -> B) (_37976 : A -> Prop) (_37978 : A) : (term5881 A B g s u _37977 f _37976 _37978) = (term5882 A B g s u _37977 f _37976 _37978).
Proof. exact (MK_COMB (@lem3552731) (@lem3552730 A B g s u _37977 f _37976 _37978)). Qed.
Lemma lem3552733 {A : Type'} (_37976 : A -> Prop) (_37977 : A) : (@I (A -> Prop) _37976 _37977) = (@I (A -> Prop) _37976 _37977).
Proof. exact (eq_refl (@I (A -> Prop) _37976 _37977)). Qed.
Lemma lem3552734 {A B : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) (_37978 : A) (_37976 : A -> Prop) (_37977 : A) : (term5873 A B g s u f _37978 _37976 _37977) = (term5883 A B g s u f _37978 _37976 _37977).
Proof. exact (MK_COMB (@lem3552732 A B g s u _37977 f _37976 _37978) (@lem3552733 A _37976 _37977)). Qed.
Lemma lem3552735 {A B : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) (_37978 : A) (_37976 : A -> Prop) (_37977 : A) : (term5871 A B g s u _37977 f _37976 _37978) = (term5883 A B g s u f _37978 _37976 _37977).
Proof. exact (TRANS (@lem3552691 A B g s u f _37978 _37976 _37977) (@lem3552734 A B g s u f _37978 _37976 _37977)). Qed.
Lemma lem3552737 {A B : Type'} (u : A -> Prop) (f : A -> B) (x' : A) (t : A -> Prop) (x : A) (h1 : term5533 A B u f x' t x) : term844 A B x f t x'.
Proof. exact (conj (@lem3552233 A B u f x' t x h1) (@lem3552240 A B u f x' t x h1)). Qed.
Lemma lem3552738 {A B : Type'} (u : A -> Prop) (f : A -> B) (x' : A) (t : A -> Prop) (x : A) (h1 : term5533 A B u f x' t x) : term972 A B u x f t x'.
Proof. exact (conj (@lem3552226 A B u f x' t x h1) (@lem3552737 A B u f x' t x h1)). Qed.
Lemma lem3552739 {A B : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) (x' : A) (t : A -> Prop) (x : A) (h1 : term5533 A B u f x' t x) (h2 : term5858 A B g s u f x' t x) : term5879 A B s u x f t x'.
Proof. exact (conj (@lem3552219 A B g s u f x' t x h2) (@lem3552738 A B u f x' t x h1)). Qed.
Lemma lem3552740 {A B : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) (x' : A) (t : A -> Prop) (x : A) (h1 : term5533 A B u f x' t x) (h2 : term5858 A B g s u f x' t x) : term5880 A B g s u x f t x'.
Proof. exact (conj (@lem3552212 A B g s u f x' t x h2) (@lem3552739 A B g s u f x' t x h1 h2)). Qed.
Lemma lem3552742 {A B : Type'} (_37978 : A) (_37976 : A -> Prop) (_37977 : A) (x'' : A -> Prop) (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) (h1 : term5193 A B x'' g s u f) : term5883 A B g s u f _37978 _37976 _37977.
Proof. exact (EQ_MP (@lem3552735 A B g s u f _37978 _37976 _37977) (@lem3552688 A B _37977 _37976 _37978 x'' g s u f h1)). Qed.
Lemma lem3552743 {A B : Type'} (_37978 : A) (_37976 : A -> Prop) (_37977 : A) (x'' : A -> Prop) (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) (h1 : term5193 A B x'' g s u f) : term5883 A B g s u f _37978 _37976 _37977.
Proof. exact (@lem3552742 A B _37978 _37976 _37977 x'' g s u f h1). Qed.
Lemma lem3552744 {A B : Type'} (x' : A) (t : A -> Prop) (x : A) (x'' : A -> Prop) (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) (h1 : term5193 A B x'' g s u f) : term5883 A B g s u f x' t x.
Proof. exact (@lem3552743 A B x' t x x'' g s u f h1). Qed.
Lemma lem3552747 {A B : Type'} (x'' : A -> Prop) (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) (x' : A) (t : A -> Prop) (x : A) (h1 : term5193 A B x'' g s u f) (h2 : term5533 A B u f x' t x) (h3 : term5858 A B g s u f x' t x) : @I (A -> Prop) t x.
Proof. exact (@lem3552744 A B x' t x x'' g s u f h1 (@lem3552740 A B g s u f x' t x h2 h3)). Qed.
Lemma lem3552748 {A B : Type'} (x'' : A -> Prop) (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) (x' : A) (t : A -> Prop) (x : A) (h1 : term5193 A B x'' g s u f) (h2 : term5533 A B u f x' t x) (h3 : term5858 A B g s u f x' t x) : term839 A t x.
Proof. exact (fun h0 : term619 A t x => @lem3552747 A B x'' g s u f x' t x h1 h2 h3). Qed.
Lemma lem3552750 (p : Prop) : (term828 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem3552751 {A : Type'} (t : A -> Prop) (x : A) : (term839 A t x) = (@I (A -> Prop) t x).
Proof. exact (@lem3552750 (@I (A -> Prop) t x)). Qed.
Lemma lem3552752 {A B : Type'} (x'' : A -> Prop) (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) (x' : A) (t : A -> Prop) (x : A) (h1 : term5193 A B x'' g s u f) (h2 : term5533 A B u f x' t x) (h3 : term5858 A B g s u f x' t x) : @I (A -> Prop) t x.
Proof. exact (EQ_MP (@lem3552751 A t x) (@lem3552748 A B x'' g s u f x' t x h1 h2 h3)). Qed.
Lemma lem3552755 (p : Prop) : (~ p) = (p -> False).
Proof. exact (EQ_MP (@lem21021 p) (@lem0)). Qed.
Lemma lem3552757 {A : Type'} (t : A -> Prop) (x : A) : (term619 A t x) = (term5684 A t x).
Proof. exact (@lem3552755 (@I (A -> Prop) t x)). Qed.
Lemma lem3552760 {A B : Type'} (u : A -> Prop) (f : A -> B) (x' : A) (t : A -> Prop) (x : A) (h1 : term5533 A B u f x' t x) : term5684 A t x.
Proof. exact (EQ_MP (@lem3552757 A t x) (@lem3551674 A B u f x' t x h1)). Qed.
Lemma lem3552763 {A B : Type'} (x'' : A -> Prop) (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) (x' : A) (t : A -> Prop) (x : A) (h1 : term5193 A B x'' g s u f) (h2 : term5533 A B u f x' t x) (h3 : term5858 A B g s u f x' t x) : False.
Proof. exact (@lem3552760 A B u f x' t x h2 (@lem3552752 A B x'' g s u f x' t x h1 h2 h3)). Qed.
Lemma lem3552764 {A B : Type'} (x'' : A -> Prop) (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) (x' : A) (t : A -> Prop) (x : A) (h1 : term5193 A B x'' g s u f) (h2 : term5533 A B u f x' t x) (h3 : term5858 A B g s u f x' t x) : term847.
Proof. exact (fun h0 : ~ False => @lem3552763 A B x'' g s u f x' t x h1 h2 h3). Qed.
Lemma lem3552766 (p : Prop) : (term828 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem3552767 : term847 = False.
Proof. exact (@lem3552766 False). Qed.
Lemma lem3552768 {A B : Type'} (x'' : A -> Prop) (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) (x' : A) (t : A -> Prop) (x : A) (h1 : term5193 A B x'' g s u f) (h2 : term5533 A B u f x' t x) (h3 : term5858 A B g s u f x' t x) : False.
Proof. exact (EQ_MP (@lem3552767) (@lem3552764 A B x'' g s u f x' t x h1 h2 h3)). Qed.
Lemma lem3552769 {A B : Type'} (x'' : A -> Prop) (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) (h1 : term5860 A g s) (h2 : term5193 A B x'' g s u f) : (term5860 A g s) = False.
Proof. exact (prop_ext (fun h3 : term5860 A g s => @lem3551823 A B x'' g s u f h1 h2) (fun h3 : False => @lem3550965 A g s h1)). Qed.
Lemma lem3552770 {A B : Type'} (x'' : A -> Prop) (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) (h1 : term5860 A g s) (h2 : term5193 A B x'' g s u f) : False.
Proof. exact (EQ_MP (@lem3552769 A B x'' g s u f h1 h2) (@lem3550965 A g s h1)). Qed.
Lemma lem3552771 {A B : Type'} (x'' : A -> Prop) (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) (x' : A) (t : A -> Prop) (x : A) (h1 : term5193 A B x'' g s u f) (h2 : term5858 A B g s u f x' t x) : False.
Proof. exact (or_elim (@lem3550724 A B g s u f x' t x h2) (fun h0 : term5515 A t u x => @lem3552142 A B x'' g s f x' t u x h1 h2 h0) (fun h0 : term5533 A B u f x' t x => @lem3552768 A B x'' g s u f x' t x h1 h0 h2)). Qed.
Lemma lem3552772 {A B : Type'} (x'' : A -> Prop) (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) (x' : A) (t : A -> Prop) (x : A) (h1 : term5193 A B x'' g s u f) (h2 : term5848 A B g s u f x' t x) : False.
Proof. exact (or_elim (@lem3550526 A B g s u f x' t x h2) (fun h0 : term5860 A g s => @lem3552770 A B x'' g s u f h0 h1) (fun h0 : term5858 A B g s u f x' t x => @lem3552771 A B x'' g s u f x' t x h1 h0)). Qed.
Lemma lem3552773 {A B : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) (x' : A) (t : A -> Prop) (x : A) (h1 : term5075 A B g s u f) (h2 : term5848 A B g s u f x' t x) : False.
Proof. exact (ex_elim (@lem3549875 A B g s u f h1) (fun x'' : A -> Prop => fun h0 : term5195 A B g s u f x'' => @lem3552772 A B x'' g s u f x' t x h0 h2)). Qed.
Lemma lem3552774 {A B : Type'} (t : A -> Prop) (x : A) (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) (h1 : term5851 A B g s u f t x) (h2 : term5075 A B g s u f) : False.
Proof. exact (ex_elim (@lem3550401 A B g s u f t x h1) (fun x' : A => fun h0 : term5850 A B g s u f t x x' => @lem3552773 A B g s u f x' t x h2 h0)). Qed.
Lemma lem3552775 {A B : Type'} (t : A -> Prop) (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) (h1 : term5853 A B g s u f t) (h2 : term5075 A B g s u f) : False.
Proof. exact (ex_elim (@lem3550400 A B g s u f t h1) (fun x : A => fun h0 : term5852 A B g s u f t x => @lem3552774 A B t x g s u f h0 h2)). Qed.
Lemma lem3552776 {A B : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) (h1 : term5739 A B g s u f) (h2 : term5075 A B g s u f) : False.
Proof. exact (ex_elim (@lem3550399 A B g s u f h1) (fun t : A -> Prop => fun h0 : term5854 A B g s u f t => @lem3552775 A B t g s u f h0 h2)). Qed.
Lemma lem3552777 {A B : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) (h1 : term5739 A B g s u f) (h2 : term5075 A B g s u f) : (term5739 A B g s u f) = False.
Proof. exact (prop_ext (fun h3 : term5739 A B g s u f => @lem3552776 A B g s u f h1 h2) (fun h3 : False => @lem3549467 A B g s u f h1)). Qed.
Lemma lem3552778 {A B : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) (h1 : term5739 A B g s u f) (h2 : term5075 A B g s u f) : False.
Proof. exact (EQ_MP (@lem3552777 A B g s u f h1 h2) (@lem3549467 A B g s u f h1)). Qed.
Lemma lem3552779 {A B : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) (h1 : term5075 A B g s u f) : term5738 A B g s u f.
Proof. exact (fun h0 : term5739 A B g s u f => @lem3552778 A B g s u f h0 h1). Qed.
Lemma lem3552780 {A B : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) (h1 : term5075 A B g s u f) : term5714 A B g s u f.
Proof. exact (EQ_MP (@lem3549466 A B g s u f) (@lem3552779 A B g s u f h1)). Qed.
Lemma lem3552781 {A B : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) : term5715 A B g s u f.
Proof. exact (fun h0 : term5075 A B g s u f => @lem3552780 A B g s u f h0). Qed.
Lemma lem3552786 {A B : Type'} (s : A -> Prop) (u : A -> Prop) (f : A -> B) : term5725 A B s u f.
Proof. exact (fun g : type686 A => @lem3552781 A B g s u f). Qed.
Lemma lem3552791 {A B : Type'} (u : A -> Prop) (f : A -> B) : term5729 A B u f.
Proof. exact (fun s : A -> Prop => @lem3552786 A B s u f). Qed.
Lemma lem3552796 {A B : Type'} (f : A -> B) : term5733 A B f.
Proof. exact (fun u : A -> Prop => @lem3552791 A B u f). Qed.
Lemma lem3552801 {A B : Type'} : term5737 A B.
Proof. exact (fun f : A -> B => @lem3552796 A B f). Qed.
Lemma lem3552802 {A B : Type'} : term5736 A B.
Proof. exact (EQ_MP (@lem3549461 A B) (@lem3552801 A B)). Qed.
Lemma lem3552803 {A B : Type'} (f : A -> B) : term5884 A B f.
Proof. exact (@lem3552802 A B f). Qed.
Lemma lem3552804 {A B : Type'} (f : A -> B) : (term5884 A B f) = (term5732 A B f).
Proof. exact (eq_refl (term5884 A B f)). Qed.
Lemma lem3552805 {A B : Type'} (f : A -> B) : term5732 A B f.
Proof. exact (EQ_MP (@lem3552804 A B f) (@lem3552803 A B f)). Qed.
Lemma lem3552806 {A B : Type'} (f : A -> B) (u : A -> Prop) : term5885 A B f u.
Proof. exact (@lem3552805 A B f u). Qed.
Lemma lem3552807 {A B : Type'} (u : A -> Prop) (f : A -> B) : (term5885 A B f u) = (term5728 A B u f).
Proof. exact (eq_refl (term5885 A B f u)). Qed.
Lemma lem3552808 {A B : Type'} (u : A -> Prop) (f : A -> B) : term5728 A B u f.
Proof. exact (EQ_MP (@lem3552807 A B u f) (@lem3552806 A B f u)). Qed.
Lemma lem3552809 {A B : Type'} (u : A -> Prop) (f : A -> B) (s : A -> Prop) : term5886 A B u f s.
Proof. exact (@lem3552808 A B u f s). Qed.
Lemma lem3552810 {A B : Type'} (s : A -> Prop) (u : A -> Prop) (f : A -> B) : (term5886 A B u f s) = (term5724 A B s u f).
Proof. exact (eq_refl (term5886 A B u f s)). Qed.
Lemma lem3552811 {A B : Type'} (s : A -> Prop) (u : A -> Prop) (f : A -> B) : term5724 A B s u f.
Proof. exact (EQ_MP (@lem3552810 A B s u f) (@lem3552809 A B u f s)). Qed.
Lemma lem3552812 {A B : Type'} (s : A -> Prop) (u : A -> Prop) (f : A -> B) (g : type686 A) : term5887 A B s u f g.
Proof. exact (@lem3552811 A B s u f g). Qed.
Lemma lem3552813 {A B : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) : (term5887 A B s u f g) = (term5716 A B g s u f).
Proof. exact (eq_refl (term5887 A B s u f g)). Qed.
Lemma lem3552814 {A B : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) : term5716 A B g s u f.
Proof. exact (EQ_MP (@lem3552813 A B g s u f) (@lem3552812 A B s u f g)). Qed.
Lemma lem3552816 {A B : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) : term5716 A B g s u f.
Proof. exact (@lem3548951 A B g s u f (@lem3552814 A B g s u f)). Qed.
Lemma lem3552817 {A B : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) (h1 : term5717 A B g s u f) : False.
Proof. exact (@lem3552816 A B g s u f (@lem3548935 A B g s u f h1)). Qed.
Lemma lem3552818 {A B : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) (h1 : term5717 A B g s u f) : (term5717 A B g s u f) = False.
Proof. exact (prop_ext (fun h2 : term5717 A B g s u f => @lem3552817 A B g s u f h1) (fun h2 : False => @lem3548935 A B g s u f h1)). Qed.
Lemma lem3552819 {A B : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) (h1 : term5717 A B g s u f) : False.
Proof. exact (EQ_MP (@lem3552818 A B g s u f h1) (@lem3548935 A B g s u f h1)). Qed.
Lemma lem3552820 {A B : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) : term5716 A B g s u f.
Proof. exact (fun h0 : term5717 A B g s u f => @lem3552819 A B g s u f h0). Qed.
Lemma lem3552821 {A B : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) : term5715 A B g s u f.
Proof. exact (EQ_MP (@lem3548934 A B g s u f) (@lem3552820 A B g s u f)). Qed.
Lemma lem3552822 {A B : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) : term5710 A B g s u f.
Proof. exact (EQ_MP (@lem3548930 A B g s u f) (@lem3552821 A B g s u f)). Qed.
Lemma lem3552823 {A B : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) : term5709 A B g s u f.
Proof. exact (EQ_MP (@lem3548434 A B g s u f) (@lem3552822 A B g s u f)). Qed.
Lemma lem3552824 {A B : Type'} (f : A -> B) (g : type686 A) (s : A -> Prop) (u : A -> Prop) (h1 : term4964 A g s u) (h2 : term1944 A B g s u f) (h3 : term1797 A g s) (h4 : @SUBSET A s u) : term5707 A B g s u f.
Proof. exact (@lem3552823 A B g s u f (@lem3548246 A B f g s u h1 h2 h3 h4)). Qed.
Lemma lem3552825 {A B : Type'} (f : A -> B) (g : type686 A) (s : A -> Prop) (u : A -> Prop) (h1 : term4964 A g s u) (h2 : term1944 A B g s u f) (h3 : term1797 A g s) (h4 : @SUBSET A s u) : (term5888 A B f g s) = (term4997 A B f g s).
Proof. exact (@lem3548233 A B u f g s (@lem3552824 A B f g s u h1 h2 h3 h4)). Qed.
Lemma lem3552826 {A B : Type'} (f : A -> B) (g : type686 A) (s : A -> Prop) (u : A -> Prop) (h1 : term4964 A g s u) (h2 : term1944 A B g s u f) (h3 : term1797 A g s) (h4 : @SUBSET A s u) : term5889 A B f g s.
Proof. exact (conj (@lem3548229 A B f g s u h1 h2 h3 h4) (@lem3552825 A B f g s u h1 h2 h3 h4)). Qed.
Lemma lem3552827 {A B : Type'} (f : A -> B) (g : type686 A) (s : A -> Prop) (u : A -> Prop) (h1 : term4964 A g s u) (h2 : term1944 A B g s u f) (h3 : term1797 A g s) (h4 : @SUBSET A s u) : (term4992 A B f g s) = (term4994 A B f g s).
Proof. exact (@lem3541814 A B f g s (@lem3552826 A B f g s u h1 h2 h3 h4)). Qed.
Lemma lem3552828 {A B : Type'} (f : A -> B) (g : type686 A) (s : A -> Prop) (u : A -> Prop) (h1 : term4964 A g s u) (h2 : term1944 A B g s u f) (h3 : term1797 A g s) (h4 : @SUBSET A s u) : (term4970 A B f g s) = (term4988 A B f g s).
Proof. exact (EQ_MP (@lem3541810 A B f g s) (@lem3552827 A B f g s u h1 h2 h3 h4)). Qed.
Lemma lem3552829 {A B : Type'} (f : A -> B) (g : type686 A) (s : A -> Prop) (u : A -> Prop) (h1 : term4964 A g s u) (h2 : term1944 A B g s u f) (h3 : term1797 A g s) (h4 : @SUBSET A s u) : (term4970 A B f g s) = (term4971 A B f g s).
Proof. exact (EQ_MP (@lem3541792 A B f g s) (@lem3552828 A B f g s u h1 h2 h3 h4)). Qed.
Lemma lem3552830 {A B : Type'} (g : type686 A) (f : A -> B) (s : A -> Prop) (u : A -> Prop) (h1 : term4964 A g s u) (h2 : term1944 A B g s u f) (h3 : @SUBSET A s u) : (term4970 A B f g s) = (term4971 A B f g s).
Proof. exact (or_elim (@lem3504836 A g s) (fun h0 : (@DELETE (A -> Prop) g s) = (@EMPTY (A -> Prop)) => @lem3541752 A B f g s h0) (fun h0 : term1797 A g s => @lem3552829 A B f g s u h1 h2 h0 h3)). Qed.
Lemma lem3552831 {A : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) (h1 : term4965 A g s u) : term4964 A g s u.
Proof. exact (proj2 (@lem3541689 A g s u h1)). Qed.
Lemma lem3552832 {A : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) (h1 : term4965 A g s u) : @SUBSET A s u.
Proof. exact (proj1 (@lem3541689 A g s u h1)). Qed.
Lemma lem3552833 {A B : Type'} (g : type686 A) (f : A -> B) (s : A -> Prop) (u : A -> Prop) (h1 : term4964 A g s u) (h2 : term1944 A B g s u f) (h3 : @SUBSET A s u) : (term4964 A g s u) = ((term4970 A B f g s) = (term4971 A B f g s)).
Proof. exact (prop_ext (fun h4 : term4964 A g s u => @lem3552830 A B g f s u h1 h2 h3) (fun h4 : (term4970 A B f g s) = (term4971 A B f g s) => @lem3541690 A g s u h1)). Qed.
Lemma lem3552834 {A B : Type'} (g : type686 A) (f : A -> B) (s : A -> Prop) (u : A -> Prop) (h1 : term4964 A g s u) (h2 : term1944 A B g s u f) (h3 : @SUBSET A s u) : (term4970 A B f g s) = (term4971 A B f g s).
Proof. exact (EQ_MP (@lem3552833 A B g f s u h1 h2 h3) (@lem3541690 A g s u h1)). Qed.
Lemma lem3552835 {A B : Type'} (g : type686 A) (f : A -> B) (s : A -> Prop) (u : A -> Prop) (h1 : term4964 A g s u) (h2 : term1944 A B g s u f) (h3 : @SUBSET A s u) : (@SUBSET A s u) = ((term4970 A B f g s) = (term4971 A B f g s)).
Proof. exact (prop_ext (fun h4 : @SUBSET A s u => @lem3552834 A B g f s u h1 h2 h3) (fun h4 : (term4970 A B f g s) = (term4971 A B f g s) => @lem3541691 A s u h3)). Qed.
Lemma lem3552836 {A B : Type'} (g : type686 A) (f : A -> B) (s : A -> Prop) (u : A -> Prop) (h1 : term4964 A g s u) (h2 : term1944 A B g s u f) (h3 : @SUBSET A s u) : (term4970 A B f g s) = (term4971 A B f g s).
Proof. exact (EQ_MP (@lem3552835 A B g f s u h1 h2 h3) (@lem3541691 A s u h3)). Qed.
Lemma lem3552837 {A B : Type'} (f : A -> B) (g : type686 A) (s : A -> Prop) (u : A -> Prop) (h1 : term1944 A B g s u f) (h2 : term4965 A g s u) (h3 : @SUBSET A s u) : (term4964 A g s u) = ((term4970 A B f g s) = (term4971 A B f g s)).
Proof. exact (prop_ext (fun h4 : term4964 A g s u => @lem3552836 A B g f s u h4 h1 h3) (fun h4 : (term4970 A B f g s) = (term4971 A B f g s) => @lem3552831 A g s u h2)). Qed.
Lemma lem3552838 {A B : Type'} (f : A -> B) (g : type686 A) (s : A -> Prop) (u : A -> Prop) (h1 : term1944 A B g s u f) (h2 : term4965 A g s u) (h3 : @SUBSET A s u) : (term4970 A B f g s) = (term4971 A B f g s).
Proof. exact (EQ_MP (@lem3552837 A B f g s u h1 h2 h3) (@lem3552831 A g s u h2)). Qed.
Lemma lem3552839 {A B : Type'} (f : A -> B) (g : type686 A) (s : A -> Prop) (u : A -> Prop) (h1 : term1944 A B g s u f) (h2 : term4965 A g s u) : (@SUBSET A s u) = ((term4970 A B f g s) = (term4971 A B f g s)).
Proof. exact (prop_ext (fun h3 : @SUBSET A s u => @lem3552838 A B f g s u h1 h2 h3) (fun h3 : (term4970 A B f g s) = (term4971 A B f g s) => @lem3552832 A g s u h2)). Qed.
Lemma lem3552840 {A B : Type'} (f : A -> B) (g : type686 A) (s : A -> Prop) (u : A -> Prop) (h1 : term1944 A B g s u f) (h2 : term4965 A g s u) : (term4970 A B f g s) = (term4971 A B f g s).
Proof. exact (EQ_MP (@lem3552839 A B f g s u h1 h2) (@lem3552832 A g s u h2)). Qed.
Lemma lem3552841 {A B : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) (h1 : term1944 A B g s u f) : term4972 A B u f g s.
Proof. exact (fun h0 : term4965 A g s u => @lem3552840 A B f g s u h1 h0). Qed.
Lemma lem3552842 {A B : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) (h1 : term1944 A B g s u f) : term4937 A B u f g s.
Proof. exact (EQ_MP (@lem3541688 A B u f g s) (@lem3552841 A B g s u f h1)). Qed.
Lemma lem3552843 {A B : Type'} (u : A -> Prop) (f : A -> B) (s : A -> Prop) (g : type686 A) (h1 : term1944 A B g s u f) (h2 : @IN (A -> Prop) s g) : term4939 A B u f g.
Proof. exact (EQ_MP (@lem3541619 A B u f s g h2) (@lem3552842 A B g s u f h1)). Qed.
Lemma lem3552844 {A B : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) (h1 : term4927 A B g s u f) : term1944 A B g s u f.
Proof. exact (proj2 (@lem3541597 A B g s u f h1)). Qed.
Lemma lem3552845 {A B : Type'} (g : type686 A) (s : A -> Prop) (u : A -> Prop) (f : A -> B) (h1 : term4927 A B g s u f) : term4931 A g u.
Proof. exact (proj1 (@lem3541597 A B g s u f h1)). Qed.
Lemma lem3552846 {A B : Type'} (u : A -> Prop) (f : A -> B) (s : A -> Prop) (g : type686 A) (h1 : term1944 A B g s u f) (h2 : @IN (A -> Prop) s g) : (term1944 A B g s u f) = (term4939 A B u f g).
Proof. exact (prop_ext (fun h3 : term1944 A B g s u f => @lem3552843 A B u f s g h1 h2) (fun h3 : term4939 A B u f g => @lem3541598 A B g s u f h1)). Qed.
Lemma lem3552847 {A B : Type'} (u : A -> Prop) (f : A -> B) (s : A -> Prop) (g : type686 A) (h1 : term1944 A B g s u f) (h2 : @IN (A -> Prop) s g) : term4939 A B u f g.
Proof. exact (EQ_MP (@lem3552846 A B u f s g h1 h2) (@lem3541598 A B g s u f h1)). Qed.
Lemma lem3552848 {A B : Type'} (f : A -> B) (u : A -> Prop) (s : A -> Prop) (g : type686 A) (h1 : term1944 A B g s u f) (h2 : term4931 A g u) (h3 : @IN (A -> Prop) s g) : (term49 A B f g) = (term50 A B f g).
Proof. exact (@lem3552847 A B u f s g h1 h3 (@lem3541599 A g u h2)). Qed.
Lemma lem3552849 {A B : Type'} (u : A -> Prop) (f : A -> B) (s : A -> Prop) (g : type686 A) (h1 : term4931 A g u) (h2 : term4927 A B g s u f) (h3 : @IN (A -> Prop) s g) : (term1944 A B g s u f) = ((term49 A B f g) = (term50 A B f g)).
Proof. exact (prop_ext (fun h4 : term1944 A B g s u f => @lem3552848 A B f u s g h4 h1 h3) (fun h4 : (term49 A B f g) = (term50 A B f g) => @lem3552844 A B g s u f h2)). Qed.
Lemma lem3552850 {A B : Type'} (u : A -> Prop) (f : A -> B) (s : A -> Prop) (g : type686 A) (h1 : term4931 A g u) (h2 : term4927 A B g s u f) (h3 : @IN (A -> Prop) s g) : (term49 A B f g) = (term50 A B f g).
Proof. exact (EQ_MP (@lem3552849 A B u f s g h1 h2 h3) (@lem3552844 A B g s u f h2)). Qed.
Lemma lem3552851 {A B : Type'} (u : A -> Prop) (f : A -> B) (s : A -> Prop) (g : type686 A) (h1 : term4927 A B g s u f) (h2 : @IN (A -> Prop) s g) : (term4931 A g u) = ((term49 A B f g) = (term50 A B f g)).
Proof. exact (prop_ext (fun h3 : term4931 A g u => @lem3552850 A B u f s g h3 h1 h2) (fun h3 : (term49 A B f g) = (term50 A B f g) => @lem3552845 A B g s u f h1)). Qed.
Lemma lem3552852 {A B : Type'} (u : A -> Prop) (f : A -> B) (s : A -> Prop) (g : type686 A) (h1 : term4927 A B g s u f) (h2 : @IN (A -> Prop) s g) : (term49 A B f g) = (term50 A B f g).
Proof. exact (EQ_MP (@lem3552851 A B u f s g h1 h2) (@lem3552845 A B g s u f h1)). Qed.
Lemma lem3552853 {A B : Type'} (u : A -> Prop) (f : A -> B) (s : A -> Prop) (g : type686 A) (h1 : @IN (A -> Prop) s g) : term4930 A B s u f g.
Proof. exact (fun h0 : term4927 A B g s u f => @lem3552852 A B u f s g h0 h1). Qed.
Lemma lem3552855 {A B : Type'} (u : A -> Prop) (f : A -> B) (s : A -> Prop) (g : type686 A) (h1 : term115 A s g) : term1954 A B s u f g.
Proof. exact (EQ_MP (@lem3507070 A B u f s g h1) (@lem3541558 A B u f g)). Qed.
Lemma lem3552856 {A B : Type'} (u : A -> Prop) (f : A -> B) (s : A -> Prop) (g : type686 A) (h1 : @IN (A -> Prop) s g) : term1954 A B s u f g.
Proof. exact (EQ_MP (@lem3541596 A B s u f g) (@lem3552853 A B u f s g h1)). Qed.
Lemma lem3552857 {A B : Type'} (s : A -> Prop) (u : A -> Prop) (f : A -> B) (g : type686 A) : term1954 A B s u f g.
Proof. exact (or_elim (@lem3506184 A s g) (fun h0 : @IN (A -> Prop) s g => @lem3552856 A B u f s g h0) (fun h0 : term115 A s g => @lem3552855 A B u f s g h0)). Qed.
Lemma lem3552862 {A B : Type'} (s : A -> Prop) (f : A -> B) (g : type686 A) : term5890 A B s f g.
Proof. exact (fun u : A -> Prop => @lem3552857 A B s u f g). Qed.
Lemma lem3552867 {A B : Type'} (f : A -> B) (g : type686 A) : term5891 A B f g.
Proof. exact (fun s : A -> Prop => @lem3552862 A B s f g). Qed.
Lemma lem3552872 {A B : Type'} (f : A -> B) : term5892 A B f.
Proof. exact (fun g : type686 A => @lem3552867 A B f g). Qed.
Lemma lem3552877 {A B : Type'} : term5893 A B.
Proof. exact (fun f : A -> B => @lem3552872 A B f). Qed.
