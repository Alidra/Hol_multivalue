Require Import coq.
Require Import theory_hol.
Require Import hol_types.
Require Import hol_type_abbrevs.
Require Import hol_terms.
Definition term17 (a0 : Type') (a1 : Type') (x0 : a0 -> a1) (x1 : type686 a0) := (exists y0 : a0 -> Prop, exists y1 : a0 -> Prop, (~ (x1 = (@EMPTY (a0 -> Prop)))) /\ ((forall y2 : a0 -> Prop, (@IN (a0 -> Prop) y2 x1) -> @SUBSET a0 y2 y1) /\ (forall y2 : a0 -> Prop, (@IN (a0 -> Prop) y2 (@DELETE (a0 -> Prop) x1 y0)) -> @SUBSET a0 (@GSPEC a0 (fun y3 : a0 => exists y4 : a0, @SETSPEC a0 y3 ((@IN a0 y4 y1) /\ (@IN a1 (x0 y4) (@IMAGE a0 a1 x0 y2))) y4)) y2))) -> (@IMAGE a0 a1 x0 (@INTERS a0 x1)) = (@INTERS a1 (@IMAGE (a0 -> Prop) (a1 -> Prop) (@IMAGE a0 a1 x0) x1)).
Definition term12 (a0 : Type') (a1 : Type') (x0 : a0 -> a1) (x1 : type686 a0) := (forall y0 : a0 -> a1, forall y1 : type686 a0, forall y2 : a0 -> Prop, forall y3 : a0 -> Prop, ((~ (y1 = (@EMPTY (a0 -> Prop)))) /\ ((forall y4 : a0 -> Prop, (@IN (a0 -> Prop) y4 y1) -> @SUBSET a0 y4 y3) /\ (forall y4 : a0 -> Prop, (@IN (a0 -> Prop) y4 (@DELETE (a0 -> Prop) y1 y2)) -> @SUBSET a0 (@GSPEC a0 (fun y5 : a0 => exists y6 : a0, @SETSPEC a0 y5 ((@IN a0 y6 y3) /\ (@IN a1 (y0 y6) (@IMAGE a0 a1 y0 y4))) y6)) y4))) -> (@IMAGE a0 a1 y0 (@INTERS a0 y1)) = (@INTERS a1 (@IMAGE (a0 -> Prop) (a1 -> Prop) (@IMAGE a0 a1 y0) y1))) -> (@IMAGE a0 a1 x0 (@INTERS a0 x1)) = (@INTERS a1 (@IMAGE (a0 -> Prop) (a1 -> Prop) (@IMAGE a0 a1 x0) x1)).
Definition term69 (a0 : Type') (a1 : Type') (x0 : a0 -> a1) (x1 : type686 a0) := forall y0 : a0 -> Prop, ((~ (x1 = (@EMPTY (a0 -> Prop)))) /\ (forall y1 : a0 -> Prop, (@IN (a0 -> Prop) y1 (@DELETE (a0 -> Prop) x1 y0)) -> @SUBSET a0 (@GSPEC a0 (fun y2 : a0 => exists y3 : a0, @SETSPEC a0 y2 (@IN a1 (x0 y3) (@IMAGE a0 a1 x0 y1)) y3)) y1)) -> (@IMAGE a0 a1 x0 (@INTERS a0 x1)) = (@INTERS a1 (@IMAGE (a0 -> Prop) (a1 -> Prop) (@IMAGE a0 a1 x0) x1)).
Definition term6 (a0 : Type') (a1 : Type') (x0 : a0 -> Prop) (x1 : a0 -> a1) (x2 : type686 a0) := forall y0 : a0 -> Prop, ((~ (x2 = (@EMPTY (a0 -> Prop)))) /\ ((forall y1 : a0 -> Prop, (@IN (a0 -> Prop) y1 x2) -> @SUBSET a0 y1 y0) /\ (forall y1 : a0 -> Prop, (@IN (a0 -> Prop) y1 (@DELETE (a0 -> Prop) x2 x0)) -> @SUBSET a0 (@GSPEC a0 (fun y2 : a0 => exists y3 : a0, @SETSPEC a0 y2 ((@IN a0 y3 y0) /\ (@IN a1 (x1 y3) (@IMAGE a0 a1 x1 y1))) y3)) y1))) -> (@IMAGE a0 a1 x1 (@INTERS a0 x2)) = (@INTERS a1 (@IMAGE (a0 -> Prop) (a1 -> Prop) (@IMAGE a0 a1 x1) x2)).
Definition term67 (a0 : Type') (a1 : Type') (x0 : type686 a0) (x1 : a0 -> Prop) (x2 : a0 -> a1) := (~ (x0 = (@EMPTY (a0 -> Prop)))) /\ ((forall y0 : a0 -> Prop, (@IN (a0 -> Prop) y0 x0) -> @SUBSET a0 y0 (@UNIV a0)) /\ (forall y0 : a0 -> Prop, (@IN (a0 -> Prop) y0 (@DELETE (a0 -> Prop) x0 x1)) -> @SUBSET a0 (@GSPEC a0 (fun y1 : a0 => exists y2 : a0, @SETSPEC a0 y1 ((@IN a0 y2 (@UNIV a0)) /\ (@IN a1 (x2 y2) (@IMAGE a0 a1 x2 y0))) y2)) y0)).
Definition term9 (a0 : Type') (a1 : Type') (x0 : type686 a0) (x1 : a0 -> Prop) (x2 : a0 -> Prop) (x3 : a0 -> a1) := (~ (x0 = (@EMPTY (a0 -> Prop)))) /\ ((forall y0 : a0 -> Prop, (@IN (a0 -> Prop) y0 x0) -> @SUBSET a0 y0 x2) /\ (forall y0 : a0 -> Prop, (@IN (a0 -> Prop) y0 (@DELETE (a0 -> Prop) x0 x1)) -> @SUBSET a0 (@GSPEC a0 (fun y1 : a0 => exists y2 : a0, @SETSPEC a0 y1 ((@IN a0 y2 x2) /\ (@IN a1 (x3 y2) (@IMAGE a0 a1 x3 y0))) y2)) y0)).
Definition term11 (a0 : Type') (a1 : Type') (x0 : a0 -> a1) (x1 : type686 a0) := @INTERS a1 (@IMAGE (a0 -> Prop) (a1 -> Prop) (@IMAGE a0 a1 x0) x1).
Definition term39 (a0 : Type') (x0 : Prop) := forall y0 : a0, x0.
Definition term51 (a0 : Type') (a1 : Type') (x0 : a0) (x1 : a0 -> a1) (x2 : a0 -> Prop) := fun y0 : a0 => @SETSPEC a0 x0 (@IN a1 (x1 y0) (@IMAGE a0 a1 x1 x2)) y0.
Definition term71 (a0 : Type') (a1 : Type') := forall y0 : a0 -> a1, forall y1 : type686 a0, forall y2 : a0 -> Prop, ((~ (y1 = (@EMPTY (a0 -> Prop)))) /\ (forall y3 : a0 -> Prop, (@IN (a0 -> Prop) y3 (@DELETE (a0 -> Prop) y1 y2)) -> @SUBSET a0 (@GSPEC a0 (fun y4 : a0 => exists y5 : a0, @SETSPEC a0 y4 (@IN a1 (y0 y5) (@IMAGE a0 a1 y0 y3)) y5)) y3)) -> (@IMAGE a0 a1 y0 (@INTERS a0 y1)) = (@INTERS a1 (@IMAGE (a0 -> Prop) (a1 -> Prop) (@IMAGE a0 a1 y0) y1)).
Definition term0 (a0 : Type') (a1 : Type') := forall y0 : a0 -> a1, forall y1 : type686 a0, forall y2 : a0 -> Prop, forall y3 : a0 -> Prop, ((~ (y1 = (@EMPTY (a0 -> Prop)))) /\ ((forall y4 : a0 -> Prop, (@IN (a0 -> Prop) y4 y1) -> @SUBSET a0 y4 y3) /\ (forall y4 : a0 -> Prop, (@IN (a0 -> Prop) y4 (@DELETE (a0 -> Prop) y1 y2)) -> @SUBSET a0 (@GSPEC a0 (fun y5 : a0 => exists y6 : a0, @SETSPEC a0 y5 ((@IN a0 y6 y3) /\ (@IN a1 (y0 y6) (@IMAGE a0 a1 y0 y4))) y6)) y4))) -> (@IMAGE a0 a1 y0 (@INTERS a0 y1)) = (@INTERS a1 (@IMAGE (a0 -> Prop) (a1 -> Prop) (@IMAGE a0 a1 y0) y1)).
Definition term8 (a0 : Type') (a1 : Type') (x0 : a0 -> Prop) (x1 : a0 -> Prop) (x2 : a0 -> a1) (x3 : type686 a0) := ((~ (x3 = (@EMPTY (a0 -> Prop)))) /\ ((forall y0 : a0 -> Prop, (@IN (a0 -> Prop) y0 x3) -> @SUBSET a0 y0 x1) /\ (forall y0 : a0 -> Prop, (@IN (a0 -> Prop) y0 (@DELETE (a0 -> Prop) x3 x0)) -> @SUBSET a0 (@GSPEC a0 (fun y1 : a0 => exists y2 : a0, @SETSPEC a0 y1 ((@IN a0 y2 x1) /\ (@IN a1 (x2 y2) (@IMAGE a0 a1 x2 y0))) y2)) y0))) -> (@IMAGE a0 a1 x2 (@INTERS a0 x3)) = (@INTERS a1 (@IMAGE (a0 -> Prop) (a1 -> Prop) (@IMAGE a0 a1 x2) x3)).
Definition term7 (a0 : Type') (a1 : Type') (x0 : a0 -> Prop) (x1 : a0 -> a1) (x2 : type686 a0) (x3 : a0 -> Prop) := (fun y0 : a0 -> Prop => ((~ (x2 = (@EMPTY (a0 -> Prop)))) /\ ((forall y1 : a0 -> Prop, (@IN (a0 -> Prop) y1 x2) -> @SUBSET a0 y1 y0) /\ (forall y1 : a0 -> Prop, (@IN (a0 -> Prop) y1 (@DELETE (a0 -> Prop) x2 x0)) -> @SUBSET a0 (@GSPEC a0 (fun y2 : a0 => exists y3 : a0, @SETSPEC a0 y2 ((@IN a0 y3 y0) /\ (@IN a1 (x1 y3) (@IMAGE a0 a1 x1 y1))) y3)) y1))) -> (@IMAGE a0 a1 x1 (@INTERS a0 x2)) = (@INTERS a1 (@IMAGE (a0 -> Prop) (a1 -> Prop) (@IMAGE a0 a1 x1) x2))) x3.
Definition term45 (a0 : Type') (a1 : Type') (x0 : a0) (x1 : a0 -> a1) (x2 : a0 -> Prop) := True /\ (@IN a1 (x1 x0) (@IMAGE a0 a1 x1 x2)).
Definition term35 (a0 : Type') (x0 : type686 a0) := fun y0 : a0 -> Prop => (@IN (a0 -> Prop) y0 x0) -> @SUBSET a0 y0 (@UNIV a0).
Definition term40 (a0 : Type') (x0 : Prop) := forall y0 : a0 -> Prop, x0.
Definition term2 (a0 : Type') (a1 : Type') (x0 : a0 -> a1) := forall y0 : type686 a0, forall y1 : a0 -> Prop, forall y2 : a0 -> Prop, ((~ (y0 = (@EMPTY (a0 -> Prop)))) /\ ((forall y3 : a0 -> Prop, (@IN (a0 -> Prop) y3 y0) -> @SUBSET a0 y3 y2) /\ (forall y3 : a0 -> Prop, (@IN (a0 -> Prop) y3 (@DELETE (a0 -> Prop) y0 y1)) -> @SUBSET a0 (@GSPEC a0 (fun y4 : a0 => exists y5 : a0, @SETSPEC a0 y4 ((@IN a0 y5 y2) /\ (@IN a1 (x0 y5) (@IMAGE a0 a1 x0 y3))) y5)) y3))) -> (@IMAGE a0 a1 x0 (@INTERS a0 y0)) = (@INTERS a1 (@IMAGE (a0 -> Prop) (a1 -> Prop) (@IMAGE a0 a1 x0) y0)).
Definition term20 (a0 : Type') (a1 : Type') := (forall y0 : a0 -> a1, forall y1 : type686 a0, forall y2 : a0 -> Prop, forall y3 : a0 -> Prop, ((~ (y1 = (@EMPTY (a0 -> Prop)))) /\ ((forall y4 : a0 -> Prop, (@IN (a0 -> Prop) y4 y1) -> @SUBSET a0 y4 y3) /\ (forall y4 : a0 -> Prop, (@IN (a0 -> Prop) y4 (@DELETE (a0 -> Prop) y1 y2)) -> @SUBSET a0 (@GSPEC a0 (fun y5 : a0 => exists y6 : a0, @SETSPEC a0 y5 ((@IN a0 y6 y3) /\ (@IN a1 (y0 y6) (@IMAGE a0 a1 y0 y4))) y6)) y4))) -> (@IMAGE a0 a1 y0 (@INTERS a0 y1)) = (@INTERS a1 (@IMAGE (a0 -> Prop) (a1 -> Prop) (@IMAGE a0 a1 y0) y1))) -> forall y0 : a0 -> a1, forall y1 : type686 a0, (exists y2 : a0 -> Prop, exists y3 : a0 -> Prop, (~ (y1 = (@EMPTY (a0 -> Prop)))) /\ ((forall y4 : a0 -> Prop, (@IN (a0 -> Prop) y4 y1) -> @SUBSET a0 y4 y3) /\ (forall y4 : a0 -> Prop, (@IN (a0 -> Prop) y4 (@DELETE (a0 -> Prop) y1 y2)) -> @SUBSET a0 (@GSPEC a0 (fun y5 : a0 => exists y6 : a0, @SETSPEC a0 y5 ((@IN a0 y6 y3) /\ (@IN a1 (y0 y6) (@IMAGE a0 a1 y0 y4))) y6)) y4))) -> (@IMAGE a0 a1 y0 (@INTERS a0 y1)) = (@INTERS a1 (@IMAGE (a0 -> Prop) (a1 -> Prop) (@IMAGE a0 a1 y0) y1)).
Definition term1 (a0 : Type') (a1 : Type') (x0 : a0 -> a1) := (fun y0 : a0 -> a1 => forall y1 : type686 a0, forall y2 : a0 -> Prop, forall y3 : a0 -> Prop, ((~ (y1 = (@EMPTY (a0 -> Prop)))) /\ ((forall y4 : a0 -> Prop, (@IN (a0 -> Prop) y4 y1) -> @SUBSET a0 y4 y3) /\ (forall y4 : a0 -> Prop, (@IN (a0 -> Prop) y4 (@DELETE (a0 -> Prop) y1 y2)) -> @SUBSET a0 (@GSPEC a0 (fun y5 : a0 => exists y6 : a0, @SETSPEC a0 y5 ((@IN a0 y6 y3) /\ (@IN a1 (y0 y6) (@IMAGE a0 a1 y0 y4))) y6)) y4))) -> (@IMAGE a0 a1 y0 (@INTERS a0 y1)) = (@INTERS a1 (@IMAGE (a0 -> Prop) (a1 -> Prop) (@IMAGE a0 a1 y0) y1))) x0.
Definition term13 (a0 : Type') (a1 : Type') (x0 : type686 a0) (x1 : a0 -> Prop) (x2 : a0 -> a1) := exists y0 : a0 -> Prop, (~ (x0 = (@EMPTY (a0 -> Prop)))) /\ ((forall y1 : a0 -> Prop, (@IN (a0 -> Prop) y1 x0) -> @SUBSET a0 y1 y0) /\ (forall y1 : a0 -> Prop, (@IN (a0 -> Prop) y1 (@DELETE (a0 -> Prop) x0 x1)) -> @SUBSET a0 (@GSPEC a0 (fun y2 : a0 => exists y3 : a0, @SETSPEC a0 y2 ((@IN a0 y3 y0) /\ (@IN a1 (x2 y3) (@IMAGE a0 a1 x2 y1))) y3)) y1)).
Definition term34 (a0 : Type') (x0 : a0 -> Prop) (x1 : type686 a0) := (@IN (a0 -> Prop) x0 x1) -> True.
Definition term23 (a0 : Type') (a1 : Type') (x0 : type686 a0) (x1 : a0 -> Prop) (x2 : a0 -> a1) := (~ (x0 = (@EMPTY (a0 -> Prop)))) /\ (forall y0 : a0 -> Prop, (@IN (a0 -> Prop) y0 (@DELETE (a0 -> Prop) x0 x1)) -> @SUBSET a0 (@GSPEC a0 (fun y1 : a0 => exists y2 : a0, @SETSPEC a0 y1 (@IN a1 (x2 y2) (@IMAGE a0 a1 x2 y0)) y2)) y0).
Definition term10 (a0 : Type') (a1 : Type') (x0 : a0 -> a1) (x1 : type686 a0) := @IMAGE a0 a1 x0 (@INTERS a0 x1).
Definition term5 (a0 : Type') (a1 : Type') (x0 : a0 -> a1) (x1 : type686 a0) (x2 : a0 -> Prop) := (fun y0 : a0 -> Prop => forall y1 : a0 -> Prop, ((~ (x1 = (@EMPTY (a0 -> Prop)))) /\ ((forall y2 : a0 -> Prop, (@IN (a0 -> Prop) y2 x1) -> @SUBSET a0 y2 y1) /\ (forall y2 : a0 -> Prop, (@IN (a0 -> Prop) y2 (@DELETE (a0 -> Prop) x1 y0)) -> @SUBSET a0 (@GSPEC a0 (fun y3 : a0 => exists y4 : a0, @SETSPEC a0 y3 ((@IN a0 y4 y1) /\ (@IN a1 (x0 y4) (@IMAGE a0 a1 x0 y2))) y4)) y2))) -> (@IMAGE a0 a1 x0 (@INTERS a0 x1)) = (@INTERS a1 (@IMAGE (a0 -> Prop) (a1 -> Prop) (@IMAGE a0 a1 x0) x1))) x2.
Definition term44 (a0 : Type') (a1 : Type') (x0 : a0) (x1 : a0 -> a1) (x2 : a0 -> Prop) := (@IN a0 x0 (@UNIV a0)) /\ (@IN a1 (x1 x0) (@IMAGE a0 a1 x1 x2)).
Definition term62 (a0 : Type') (x0 : a0 -> Prop) (x1 : type686 a0) (x2 : a0 -> Prop) := imp (@IN (a0 -> Prop) x0 (@DELETE (a0 -> Prop) x1 x2)).
Definition term27 (a0 : Type') (x0 : a0) := (fun y0 : a0 => @IN a0 y0 (@UNIV a0)) x0.
Definition term57 (a0 : Type') (a1 : Type') (x0 : a0 -> a1) (x1 : a0 -> Prop) := @GSPEC a0 (fun y0 : a0 => exists y1 : a0, @SETSPEC a0 y0 (@IN a1 (x0 y1) (@IMAGE a0 a1 x0 x1)) y1).
Definition term56 (a0 : Type') (a1 : Type') (x0 : a0 -> a1) (x1 : a0 -> Prop) := @GSPEC a0 (fun y0 : a0 => exists y1 : a0, @SETSPEC a0 y0 ((@IN a0 y1 (@UNIV a0)) /\ (@IN a1 (x0 y1) (@IMAGE a0 a1 x0 x1))) y1).
Definition term31 (a0 : Type') (x0 : type686 a0) := and (~ (x0 = (@EMPTY (a0 -> Prop)))).
Definition term53 (a0 : Type') (a1 : Type') (x0 : a0) (x1 : a0 -> a1) (x2 : a0 -> Prop) := exists y0 : a0, @SETSPEC a0 x0 (@IN a1 (x1 y0) (@IMAGE a0 a1 x1 x2)) y0.
Definition term52 (a0 : Type') (a1 : Type') (x0 : a0) (x1 : a0 -> a1) (x2 : a0 -> Prop) := exists y0 : a0, @SETSPEC a0 x0 ((@IN a0 y0 (@UNIV a0)) /\ (@IN a1 (x1 y0) (@IMAGE a0 a1 x1 x2))) y0.
Definition term25 (a0 : Type') (x0 : type686 a0) := ~ (x0 = (@EMPTY (a0 -> Prop))).
Definition term32 (a0 : Type') (x0 : a0 -> Prop) (x1 : type686 a0) := imp (@IN (a0 -> Prop) x0 x1).
Definition term49 (a0 : Type') (a1 : Type') (x0 : a0) (x1 : a0 -> a1) (x2 : a0 -> Prop) (x3 : a0) := @SETSPEC a0 x0 (@IN a1 (x1 x3) (@IMAGE a0 a1 x1 x2)) x3.
Definition term14 (a0 : Type') (a1 : Type') (x0 : type686 a0) (x1 : a0 -> Prop) (x2 : a0 -> a1) := fun y0 : a0 -> Prop => (~ (x0 = (@EMPTY (a0 -> Prop)))) /\ ((forall y1 : a0 -> Prop, (@IN (a0 -> Prop) y1 x0) -> @SUBSET a0 y1 y0) /\ (forall y1 : a0 -> Prop, (@IN (a0 -> Prop) y1 (@DELETE (a0 -> Prop) x0 x1)) -> @SUBSET a0 (@GSPEC a0 (fun y2 : a0 => exists y3 : a0, @SETSPEC a0 y2 ((@IN a0 y3 y0) /\ (@IN a1 (x2 y3) (@IMAGE a0 a1 x2 y1))) y3)) y1)).
Definition term48 (a0 : Type') (a1 : Type') (x0 : a0) (x1 : a0 -> a1) (x2 : a0 -> Prop) (x3 : a0) := @SETSPEC a0 x0 ((@IN a0 x3 (@UNIV a0)) /\ (@IN a1 (x1 x3) (@IMAGE a0 a1 x1 x2))) x3.
Definition term36 (a0 : Type') := fun y0 : a0 -> Prop => True.
Definition term26 (a0 : Type') (x0 : a0 -> Prop) := (fun y0 : a0 -> Prop => @SUBSET a0 y0 (@UNIV a0)) x0.
Definition term33 (a0 : Type') (x0 : type686 a0) (x1 : a0 -> Prop) := (@IN (a0 -> Prop) x1 x0) -> @SUBSET a0 x1 (@UNIV a0).
Definition term43 (a0 : Type') (a1 : Type') (x0 : a0) (x1 : a0 -> a1) (x2 : a0 -> Prop) := @IN a1 (x1 x0) (@IMAGE a0 a1 x1 x2).
Definition term3 (a0 : Type') (a1 : Type') (x0 : a0 -> a1) (x1 : type686 a0) := (fun y0 : type686 a0 => forall y1 : a0 -> Prop, forall y2 : a0 -> Prop, ((~ (y0 = (@EMPTY (a0 -> Prop)))) /\ ((forall y3 : a0 -> Prop, (@IN (a0 -> Prop) y3 y0) -> @SUBSET a0 y3 y2) /\ (forall y3 : a0 -> Prop, (@IN (a0 -> Prop) y3 (@DELETE (a0 -> Prop) y0 y1)) -> @SUBSET a0 (@GSPEC a0 (fun y4 : a0 => exists y5 : a0, @SETSPEC a0 y4 ((@IN a0 y5 y2) /\ (@IN a1 (x0 y5) (@IMAGE a0 a1 x0 y3))) y5)) y3))) -> (@IMAGE a0 a1 x0 (@INTERS a0 y0)) = (@INTERS a1 (@IMAGE (a0 -> Prop) (a1 -> Prop) (@IMAGE a0 a1 x0) y0))) x1.
Definition term55 (a0 : Type') (a1 : Type') (x0 : a0 -> a1) (x1 : a0 -> Prop) := fun y0 : a0 => exists y1 : a0, @SETSPEC a0 y0 (@IN a1 (x0 y1) (@IMAGE a0 a1 x0 x1)) y1.
Definition term54 (a0 : Type') (a1 : Type') (x0 : a0 -> a1) (x1 : a0 -> Prop) := fun y0 : a0 => exists y1 : a0, @SETSPEC a0 y0 ((@IN a0 y1 (@UNIV a0)) /\ (@IN a1 (x0 y1) (@IMAGE a0 a1 x0 x1))) y1.
Definition term19 (a0 : Type') (a1 : Type') := forall y0 : a0 -> a1, forall y1 : type686 a0, (exists y2 : a0 -> Prop, exists y3 : a0 -> Prop, (~ (y1 = (@EMPTY (a0 -> Prop)))) /\ ((forall y4 : a0 -> Prop, (@IN (a0 -> Prop) y4 y1) -> @SUBSET a0 y4 y3) /\ (forall y4 : a0 -> Prop, (@IN (a0 -> Prop) y4 (@DELETE (a0 -> Prop) y1 y2)) -> @SUBSET a0 (@GSPEC a0 (fun y5 : a0 => exists y6 : a0, @SETSPEC a0 y5 ((@IN a0 y6 y3) /\ (@IN a1 (y0 y6) (@IMAGE a0 a1 y0 y4))) y6)) y4))) -> (@IMAGE a0 a1 y0 (@INTERS a0 y1)) = (@INTERS a1 (@IMAGE (a0 -> Prop) (a1 -> Prop) (@IMAGE a0 a1 y0) y1)).
Definition term4 (a0 : Type') (a1 : Type') (x0 : a0 -> a1) (x1 : type686 a0) := forall y0 : a0 -> Prop, forall y1 : a0 -> Prop, ((~ (x1 = (@EMPTY (a0 -> Prop)))) /\ ((forall y2 : a0 -> Prop, (@IN (a0 -> Prop) y2 x1) -> @SUBSET a0 y2 y1) /\ (forall y2 : a0 -> Prop, (@IN (a0 -> Prop) y2 (@DELETE (a0 -> Prop) x1 y0)) -> @SUBSET a0 (@GSPEC a0 (fun y3 : a0 => exists y4 : a0, @SETSPEC a0 y3 ((@IN a0 y4 y1) /\ (@IN a1 (x0 y4) (@IMAGE a0 a1 x0 y2))) y4)) y2))) -> (@IMAGE a0 a1 x0 (@INTERS a0 x1)) = (@INTERS a1 (@IMAGE (a0 -> Prop) (a1 -> Prop) (@IMAGE a0 a1 x0) x1)).
Definition term65 (a0 : Type') (a1 : Type') (x0 : type686 a0) (x1 : a0 -> Prop) (x2 : a0 -> a1) := forall y0 : a0 -> Prop, (@IN (a0 -> Prop) y0 (@DELETE (a0 -> Prop) x0 x1)) -> @SUBSET a0 (@GSPEC a0 (fun y1 : a0 => exists y2 : a0, @SETSPEC a0 y1 ((@IN a0 y2 (@UNIV a0)) /\ (@IN a1 (x2 y2) (@IMAGE a0 a1 x2 y0))) y2)) y0.
Definition term24 (a0 : Type') (a1 : Type') (x0 : type686 a0) (x1 : a0 -> Prop) (x2 : a0 -> a1) := forall y0 : a0 -> Prop, (@IN (a0 -> Prop) y0 (@DELETE (a0 -> Prop) x0 x1)) -> @SUBSET a0 (@GSPEC a0 (fun y1 : a0 => exists y2 : a0, @SETSPEC a0 y1 (@IN a1 (x2 y2) (@IMAGE a0 a1 x2 y0)) y2)) y0.
Definition term18 (a0 : Type') (a1 : Type') (x0 : a0 -> a1) := forall y0 : type686 a0, (exists y1 : a0 -> Prop, exists y2 : a0 -> Prop, (~ (y0 = (@EMPTY (a0 -> Prop)))) /\ ((forall y3 : a0 -> Prop, (@IN (a0 -> Prop) y3 y0) -> @SUBSET a0 y3 y2) /\ (forall y3 : a0 -> Prop, (@IN (a0 -> Prop) y3 (@DELETE (a0 -> Prop) y0 y1)) -> @SUBSET a0 (@GSPEC a0 (fun y4 : a0 => exists y5 : a0, @SETSPEC a0 y4 ((@IN a0 y5 y2) /\ (@IN a1 (x0 y5) (@IMAGE a0 a1 x0 y3))) y5)) y3))) -> (@IMAGE a0 a1 x0 (@INTERS a0 y0)) = (@INTERS a1 (@IMAGE (a0 -> Prop) (a1 -> Prop) (@IMAGE a0 a1 x0) y0)).
Definition term70 (a0 : Type') (a1 : Type') (x0 : a0 -> a1) := forall y0 : type686 a0, forall y1 : a0 -> Prop, ((~ (y0 = (@EMPTY (a0 -> Prop)))) /\ (forall y2 : a0 -> Prop, (@IN (a0 -> Prop) y2 (@DELETE (a0 -> Prop) y0 y1)) -> @SUBSET a0 (@GSPEC a0 (fun y3 : a0 => exists y4 : a0, @SETSPEC a0 y3 (@IN a1 (x0 y4) (@IMAGE a0 a1 x0 y2)) y4)) y2)) -> (@IMAGE a0 a1 x0 (@INTERS a0 y0)) = (@INTERS a1 (@IMAGE (a0 -> Prop) (a1 -> Prop) (@IMAGE a0 a1 x0) y0)).
Definition term68 (a0 : Type') (a1 : Type') (x0 : a0 -> Prop) (x1 : a0 -> a1) (x2 : type686 a0) := ((~ (x2 = (@EMPTY (a0 -> Prop)))) /\ (forall y0 : a0 -> Prop, (@IN (a0 -> Prop) y0 (@DELETE (a0 -> Prop) x2 x0)) -> @SUBSET a0 (@GSPEC a0 (fun y1 : a0 => exists y2 : a0, @SETSPEC a0 y1 (@IN a1 (x1 y2) (@IMAGE a0 a1 x1 y0)) y2)) y0)) -> (@IMAGE a0 a1 x1 (@INTERS a0 x2)) = (@INTERS a1 (@IMAGE (a0 -> Prop) (a1 -> Prop) (@IMAGE a0 a1 x1) x2)).
Definition term61 (a0 : Type') (a1 : Type') (x0 : a0 -> a1) (x1 : a0 -> Prop) := @SUBSET a0 (@GSPEC a0 (fun y0 : a0 => exists y1 : a0, @SETSPEC a0 y0 (@IN a1 (x0 y1) (@IMAGE a0 a1 x0 x1)) y1)) x1.
Definition term60 (a0 : Type') (a1 : Type') (x0 : a0 -> a1) (x1 : a0 -> Prop) := @SUBSET a0 (@GSPEC a0 (fun y0 : a0 => exists y1 : a0, @SETSPEC a0 y0 ((@IN a0 y1 (@UNIV a0)) /\ (@IN a1 (x0 y1) (@IMAGE a0 a1 x0 x1))) y1)) x1.
Definition term41 (a0 : Type') (x0 : type686 a0) := and (forall y0 : a0 -> Prop, (@IN (a0 -> Prop) y0 x0) -> @SUBSET a0 y0 (@UNIV a0)).
Definition term29 (a0 : Type') (a1 : Type') (x0 : type686 a0) (x1 : a0 -> Prop) (x2 : a0 -> a1) (x3 : a0 -> Prop) := (fun y0 : a0 -> Prop => (@IN (a0 -> Prop) y0 (@DELETE (a0 -> Prop) x0 x1)) -> @SUBSET a0 (@GSPEC a0 (fun y1 : a0 => exists y2 : a0, @SETSPEC a0 y1 (@IN a1 (x2 y2) (@IMAGE a0 a1 x2 y0)) y2)) y0) x3.
Definition term22 (a0 : Type') (a1 : Type') (x0 : a0 -> a1) (x1 : type686 a0) := (fun y0 : type686 a0 => (exists y1 : a0 -> Prop, exists y2 : a0 -> Prop, (~ (y0 = (@EMPTY (a0 -> Prop)))) /\ ((forall y3 : a0 -> Prop, (@IN (a0 -> Prop) y3 y0) -> @SUBSET a0 y3 y2) /\ (forall y3 : a0 -> Prop, (@IN (a0 -> Prop) y3 (@DELETE (a0 -> Prop) y0 y1)) -> @SUBSET a0 (@GSPEC a0 (fun y4 : a0 => exists y5 : a0, @SETSPEC a0 y4 ((@IN a0 y5 y2) /\ (@IN a1 (x0 y5) (@IMAGE a0 a1 x0 y3))) y5)) y3))) -> (@IMAGE a0 a1 x0 (@INTERS a0 y0)) = (@INTERS a1 (@IMAGE (a0 -> Prop) (a1 -> Prop) (@IMAGE a0 a1 x0) y0))) x1.
Definition term15 (a0 : Type') (a1 : Type') (x0 : type686 a0) (x1 : a0 -> a1) := exists y0 : a0 -> Prop, exists y1 : a0 -> Prop, (~ (x0 = (@EMPTY (a0 -> Prop)))) /\ ((forall y2 : a0 -> Prop, (@IN (a0 -> Prop) y2 x0) -> @SUBSET a0 y2 y1) /\ (forall y2 : a0 -> Prop, (@IN (a0 -> Prop) y2 (@DELETE (a0 -> Prop) x0 y0)) -> @SUBSET a0 (@GSPEC a0 (fun y3 : a0 => exists y4 : a0, @SETSPEC a0 y3 ((@IN a0 y4 y1) /\ (@IN a1 (x1 y4) (@IMAGE a0 a1 x1 y2))) y4)) y2)).
Definition term63 (a0 : Type') (a1 : Type') (x0 : type686 a0) (x1 : a0 -> Prop) (x2 : a0 -> a1) (x3 : a0 -> Prop) := (@IN (a0 -> Prop) x3 (@DELETE (a0 -> Prop) x0 x1)) -> @SUBSET a0 (@GSPEC a0 (fun y0 : a0 => exists y1 : a0, @SETSPEC a0 y0 ((@IN a0 y1 (@UNIV a0)) /\ (@IN a1 (x2 y1) (@IMAGE a0 a1 x2 x3))) y1)) x3.
Definition term30 (a0 : Type') (a1 : Type') (x0 : type686 a0) (x1 : a0 -> Prop) (x2 : a0 -> a1) (x3 : a0 -> Prop) := (@IN (a0 -> Prop) x3 (@DELETE (a0 -> Prop) x0 x1)) -> @SUBSET a0 (@GSPEC a0 (fun y0 : a0 => exists y1 : a0, @SETSPEC a0 y0 (@IN a1 (x2 y1) (@IMAGE a0 a1 x2 x3)) y1)) x3.
Definition term42 (a0 : Type') (x0 : a0) := and (@IN a0 x0 (@UNIV a0)).
Definition term28 (a0 : Type') (x0 : type686 a0) := (~ (x0 = (@EMPTY (a0 -> Prop)))) -> (x0 = (@EMPTY (a0 -> Prop))) = False.
Definition term47 (a0 : Type') (a1 : Type') (x0 : a0) (x1 : a0) (x2 : a0 -> a1) (x3 : a0 -> Prop) := @SETSPEC a0 x0 (@IN a1 (x2 x1) (@IMAGE a0 a1 x2 x3)).
Definition term16 (a0 : Type') (a1 : Type') (x0 : type686 a0) (x1 : a0 -> a1) := fun y0 : a0 -> Prop => exists y1 : a0 -> Prop, (~ (x0 = (@EMPTY (a0 -> Prop)))) /\ ((forall y2 : a0 -> Prop, (@IN (a0 -> Prop) y2 x0) -> @SUBSET a0 y2 y1) /\ (forall y2 : a0 -> Prop, (@IN (a0 -> Prop) y2 (@DELETE (a0 -> Prop) x0 y0)) -> @SUBSET a0 (@GSPEC a0 (fun y3 : a0 => exists y4 : a0, @SETSPEC a0 y3 ((@IN a0 y4 y1) /\ (@IN a1 (x1 y4) (@IMAGE a0 a1 x1 y2))) y4)) y2)).
Definition term46 (a0 : Type') (a1 : Type') (x0 : a0) (x1 : a0) (x2 : a0 -> a1) (x3 : a0 -> Prop) := @SETSPEC a0 x0 ((@IN a0 x1 (@UNIV a0)) /\ (@IN a1 (x2 x1) (@IMAGE a0 a1 x2 x3))).
Definition term21 (a0 : Type') (a1 : Type') (x0 : a0 -> a1) := (fun y0 : a0 -> a1 => forall y1 : type686 a0, (exists y2 : a0 -> Prop, exists y3 : a0 -> Prop, (~ (y1 = (@EMPTY (a0 -> Prop)))) /\ ((forall y4 : a0 -> Prop, (@IN (a0 -> Prop) y4 y1) -> @SUBSET a0 y4 y3) /\ (forall y4 : a0 -> Prop, (@IN (a0 -> Prop) y4 (@DELETE (a0 -> Prop) y1 y2)) -> @SUBSET a0 (@GSPEC a0 (fun y5 : a0 => exists y6 : a0, @SETSPEC a0 y5 ((@IN a0 y6 y3) /\ (@IN a1 (y0 y6) (@IMAGE a0 a1 y0 y4))) y6)) y4))) -> (@IMAGE a0 a1 y0 (@INTERS a0 y1)) = (@INTERS a1 (@IMAGE (a0 -> Prop) (a1 -> Prop) (@IMAGE a0 a1 y0) y1))) x0.
Definition term59 (a0 : Type') (a1 : Type') (x0 : a0 -> a1) (x1 : a0 -> Prop) := @SUBSET a0 (@GSPEC a0 (fun y0 : a0 => exists y1 : a0, @SETSPEC a0 y0 (@IN a1 (x0 y1) (@IMAGE a0 a1 x0 x1)) y1)).
Definition term58 (a0 : Type') (a1 : Type') (x0 : a0 -> a1) (x1 : a0 -> Prop) := @SUBSET a0 (@GSPEC a0 (fun y0 : a0 => exists y1 : a0, @SETSPEC a0 y0 ((@IN a0 y1 (@UNIV a0)) /\ (@IN a1 (x0 y1) (@IMAGE a0 a1 x0 x1))) y1)).
Definition term66 (a0 : Type') (a1 : Type') (x0 : type686 a0) (x1 : a0 -> Prop) (x2 : a0 -> a1) := (forall y0 : a0 -> Prop, (@IN (a0 -> Prop) y0 x0) -> @SUBSET a0 y0 (@UNIV a0)) /\ (forall y0 : a0 -> Prop, (@IN (a0 -> Prop) y0 (@DELETE (a0 -> Prop) x0 x1)) -> @SUBSET a0 (@GSPEC a0 (fun y1 : a0 => exists y2 : a0, @SETSPEC a0 y1 ((@IN a0 y2 (@UNIV a0)) /\ (@IN a1 (x2 y2) (@IMAGE a0 a1 x2 y0))) y2)) y0).
Definition term50 (a0 : Type') (a1 : Type') (x0 : a0) (x1 : a0 -> a1) (x2 : a0 -> Prop) := fun y0 : a0 => @SETSPEC a0 x0 ((@IN a0 y0 (@UNIV a0)) /\ (@IN a1 (x1 y0) (@IMAGE a0 a1 x1 x2))) y0.
Definition term64 (a0 : Type') (a1 : Type') (x0 : type686 a0) (x1 : a0 -> Prop) (x2 : a0 -> a1) := fun y0 : a0 -> Prop => (@IN (a0 -> Prop) y0 (@DELETE (a0 -> Prop) x0 x1)) -> @SUBSET a0 (@GSPEC a0 (fun y1 : a0 => exists y2 : a0, @SETSPEC a0 y1 ((@IN a0 y2 (@UNIV a0)) /\ (@IN a1 (x2 y2) (@IMAGE a0 a1 x2 y0))) y2)) y0.
Definition term37 (a0 : Type') (x0 : type686 a0) := forall y0 : a0 -> Prop, (@IN (a0 -> Prop) y0 x0) -> @SUBSET a0 y0 (@UNIV a0).
Definition term38 (a0 : Type') := forall y0 : a0 -> Prop, True.
