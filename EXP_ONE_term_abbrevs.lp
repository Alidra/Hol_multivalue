require open hol-light.theory_hol;
require open hol-light.hol_types;
require open hol-light.hol_type_abbrevs;
require open hol-light.hol_terms;
symbol term14 (x0: El num) ≔ (⇒ ((λ y0 : El num, (= (EXP (NUMERAL (BIT1 _0)) y0) (NUMERAL (BIT1 _0)))) x0) ((λ y0 : El num, (= (EXP (NUMERAL (BIT1 _0)) y0) (NUMERAL (BIT1 _0)))) (SUC x0)));
symbol term8 (x0: El num) ≔ ((λ y0 : El num, (= (EXP (NUMERAL (BIT1 _0)) y0) (NUMERAL (BIT1 _0)))) x0);
symbol term9 (x0: El num) ≔ (EXP (NUMERAL (BIT1 _0)) x0);
symbol term34 ≔ (∧ (∀ (λ y0 : El num, (= (* (NUMERAL (BIT1 _0)) y0) y0))) (∧ (∀ (λ y0 : El num, (= (* y0 (NUMERAL (BIT1 _0))) y0))) (∧ (∀ (λ y0 : El num, (∀ (λ y1 : El num, (= (* (SUC y0) y1) (+ (* y0 y1) y1)))))) (∀ (λ y0 : El num, (∀ (λ y1 : El num, (= (* y0 (SUC y1)) (+ y0 (* y0 y1))))))))));
symbol term44 (x0: El num) ≔ (* (NUMERAL (BIT1 _0)) (EXP (NUMERAL (BIT1 _0)) x0));
symbol term24 ≔ (λ y0 : El num, ((λ y1 : El num, (= (EXP (NUMERAL (BIT1 _0)) y1) (NUMERAL (BIT1 _0)))) y0));
symbol term40 (x0: El num) ≔ (∀ (λ y0 : El num, (= (EXP x0 (SUC y0)) (* x0 (EXP x0 y0)))));
symbol term3 ≔ ((λ y0 : El num, (= (EXP (NUMERAL (BIT1 _0)) y0) (NUMERAL (BIT1 _0)))) (NUMERAL _0));
symbol term25 ≔ (∀ (λ y0 : El num, ((λ y1 : El num, (= (EXP (NUMERAL (BIT1 _0)) y1) (NUMERAL (BIT1 _0)))) y0)));
symbol term20 ≔ (∧ ((λ y0 : El num, (= (EXP (NUMERAL (BIT1 _0)) y0) (NUMERAL (BIT1 _0)))) (NUMERAL _0)) (∀ (λ y0 : El num, (⇒ ((λ y1 : El num, (= (EXP (NUMERAL (BIT1 _0)) y1) (NUMERAL (BIT1 _0)))) y0) ((λ y1 : El num, (= (EXP (NUMERAL (BIT1 _0)) y1) (NUMERAL (BIT1 _0)))) (SUC y0))))));
symbol term42 (x0: El num) (x1: El num) ≔ (EXP x0 (SUC x1));
symbol term1 ≔ (⇒ (∧ ((λ y0 : El num, (= (EXP (NUMERAL (BIT1 _0)) y0) (NUMERAL (BIT1 _0)))) (NUMERAL _0)) (∀ (λ y0 : El num, (⇒ ((λ y1 : El num, (= (EXP (NUMERAL (BIT1 _0)) y1) (NUMERAL (BIT1 _0)))) y0) ((λ y1 : El num, (= (EXP (NUMERAL (BIT1 _0)) y1) (NUMERAL (BIT1 _0)))) (SUC y0)))))) (∀ (λ y0 : El num, ((λ y1 : El num, (= (EXP (NUMERAL (BIT1 _0)) y1) (NUMERAL (BIT1 _0)))) y0))));
symbol term41 (x0: El num) (x1: El num) ≔ ((λ y0 : El num, (= (EXP x0 (SUC y0)) (* x0 (EXP x0 y0)))) x1);
symbol term15 (x0: El num) ≔ (⇒ (= (EXP (NUMERAL (BIT1 _0)) x0) (NUMERAL (BIT1 _0))) (= (EXP (NUMERAL (BIT1 _0)) (SUC x0)) (NUMERAL (BIT1 _0))));
symbol term13 (x0: El num) ≔ (EXP (NUMERAL (BIT1 _0)) (SUC x0));
symbol term12 (x0: El num) ≔ ((λ y0 : El num, (= (EXP (NUMERAL (BIT1 _0)) y0) (NUMERAL (BIT1 _0)))) (SUC x0));
symbol term30 (x0: El num) ≔ (EXP x0 (NUMERAL _0));
symbol term0 (x0: El (fun num bool)) ≔ (⇒ (∧ (x0 (NUMERAL _0)) (∀ (λ y0 : El num, (⇒ (x0 y0) (x0 (SUC y0)))))) (∀ (λ y0 : El num, (x0 y0))));
symbol term22 ≔ (⇒ (∧ ((λ y0 : El num, (= (EXP (NUMERAL (BIT1 _0)) y0) (NUMERAL (BIT1 _0)))) (NUMERAL _0)) (∀ (λ y0 : El num, (⇒ ((λ y1 : El num, (= (EXP (NUMERAL (BIT1 _0)) y1) (NUMERAL (BIT1 _0)))) y0) ((λ y1 : El num, (= (EXP (NUMERAL (BIT1 _0)) y1) (NUMERAL (BIT1 _0)))) (SUC y0)))))));
symbol term45 (x0: El num) ≔ ((@= num) (EXP (NUMERAL (BIT1 _0)) (SUC x0)));
symbol term18 ≔ (∀ (λ y0 : El num, (⇒ ((λ y1 : El num, (= (EXP (NUMERAL (BIT1 _0)) y1) (NUMERAL (BIT1 _0)))) y0) ((λ y1 : El num, (= (EXP (NUMERAL (BIT1 _0)) y1) (NUMERAL (BIT1 _0)))) (SUC y0)))));
symbol term7 ≔ (∧ (= (EXP (NUMERAL (BIT1 _0)) (NUMERAL _0)) (NUMERAL (BIT1 _0))));
symbol term6 ≔ (∧ ((λ y0 : El num, (= (EXP (NUMERAL (BIT1 _0)) y0) (NUMERAL (BIT1 _0)))) (NUMERAL _0)));
symbol term11 (x0: El num) ≔ (⇒ (= (EXP (NUMERAL (BIT1 _0)) x0) (NUMERAL (BIT1 _0))));
symbol term29 (x0: El num) ≔ ((λ y0 : El num, (= (EXP y0 (NUMERAL _0)) (NUMERAL (BIT1 _0)))) x0);
symbol term16 ≔ (λ y0 : El num, (⇒ ((λ y1 : El num, (= (EXP (NUMERAL (BIT1 _0)) y1) (NUMERAL (BIT1 _0)))) y0) ((λ y1 : El num, (= (EXP (NUMERAL (BIT1 _0)) y1) (NUMERAL (BIT1 _0)))) (SUC y0))));
symbol term38 ≔ (∀ (λ y0 : El num, (∀ (λ y1 : El num, (= (EXP y0 (SUC y1)) (* y0 (EXP y0 y1)))))));
symbol term4 ≔ (EXP (NUMERAL (BIT1 _0)) (NUMERAL _0));
symbol term2 ≔ (λ y0 : El num, (= (EXP (NUMERAL (BIT1 _0)) y0) (NUMERAL (BIT1 _0))));
symbol term31 ≔ ((@= num) (EXP (NUMERAL (BIT1 _0)) (NUMERAL _0)));
symbol term35 ≔ (∀ (λ y0 : El num, (= (* (NUMERAL (BIT1 _0)) y0) y0)));
symbol term43 (x0: El num) (x1: El num) ≔ (* x0 (EXP x0 x1));
symbol term26 ≔ (∀ (λ y0 : El num, (= (EXP (NUMERAL (BIT1 _0)) y0) (NUMERAL (BIT1 _0)))));
symbol term36 (x0: El num) ≔ ((λ y0 : El num, (= (* (NUMERAL (BIT1 _0)) y0) y0)) x0);
symbol term21 ≔ (∧ (= (EXP (NUMERAL (BIT1 _0)) (NUMERAL _0)) (NUMERAL (BIT1 _0))) (∀ (λ y0 : El num, (⇒ (= (EXP (NUMERAL (BIT1 _0)) y0) (NUMERAL (BIT1 _0))) (= (EXP (NUMERAL (BIT1 _0)) (SUC y0)) (NUMERAL (BIT1 _0)))))));
symbol term32 ≔ ((@= num) (NUMERAL (BIT1 _0)));
symbol term39 (x0: El num) ≔ ((λ y0 : El num, (∀ (λ y1 : El num, (= (EXP y0 (SUC y1)) (* y0 (EXP y0 y1)))))) x0);
symbol term28 ≔ (∀ (λ y0 : El num, (= (EXP y0 (NUMERAL _0)) (NUMERAL (BIT1 _0)))));
symbol term17 ≔ (λ y0 : El num, (⇒ (= (EXP (NUMERAL (BIT1 _0)) y0) (NUMERAL (BIT1 _0))) (= (EXP (NUMERAL (BIT1 _0)) (SUC y0)) (NUMERAL (BIT1 _0)))));
symbol term10 (x0: El num) ≔ (⇒ ((λ y0 : El num, (= (EXP (NUMERAL (BIT1 _0)) y0) (NUMERAL (BIT1 _0)))) x0));
symbol term19 ≔ (∀ (λ y0 : El num, (⇒ (= (EXP (NUMERAL (BIT1 _0)) y0) (NUMERAL (BIT1 _0))) (= (EXP (NUMERAL (BIT1 _0)) (SUC y0)) (NUMERAL (BIT1 _0))))));
symbol term33 ≔ (∧ (∀ (λ y0 : El num, (= (* y0 (NUMERAL _0)) (NUMERAL _0)))) (∧ (∀ (λ y0 : El num, (= (* (NUMERAL (BIT1 _0)) y0) y0))) (∧ (∀ (λ y0 : El num, (= (* y0 (NUMERAL (BIT1 _0))) y0))) (∧ (∀ (λ y0 : El num, (∀ (λ y1 : El num, (= (* (SUC y0) y1) (+ (* y0 y1) y1)))))) (∀ (λ y0 : El num, (∀ (λ y1 : El num, (= (* y0 (SUC y1)) (+ y0 (* y0 y1)))))))))));
symbol term27 ≔ (⇒ (∧ (= (EXP (NUMERAL (BIT1 _0)) (NUMERAL _0)) (NUMERAL (BIT1 _0))) (∀ (λ y0 : El num, (⇒ (= (EXP (NUMERAL (BIT1 _0)) y0) (NUMERAL (BIT1 _0))) (= (EXP (NUMERAL (BIT1 _0)) (SUC y0)) (NUMERAL (BIT1 _0))))))) (∀ (λ y0 : El num, (= (EXP (NUMERAL (BIT1 _0)) y0) (NUMERAL (BIT1 _0))))));
symbol term5 ≔ (NUMERAL (BIT1 _0));
symbol term37 (x0: El num) ≔ (* (NUMERAL (BIT1 _0)) x0);
symbol term23 ≔ (⇒ (∧ (= (EXP (NUMERAL (BIT1 _0)) (NUMERAL _0)) (NUMERAL (BIT1 _0))) (∀ (λ y0 : El num, (⇒ (= (EXP (NUMERAL (BIT1 _0)) y0) (NUMERAL (BIT1 _0))) (= (EXP (NUMERAL (BIT1 _0)) (SUC y0)) (NUMERAL (BIT1 _0))))))));
