Require Import coq.
Require Import theory_hol.
Require Import hol_types.
Require Import hol_terms.
Require Import hol_axioms.
Require Import hol_type_abbrevs.
Require Import thm3464373_term_abbrevs.
Require Import DISJ_ACI_spec.
Require Import thm0_spec.
Require Import thm10578_spec.
Require Import thm10597_spec.
Require Import thm16474_spec.
Require Import thm16506_spec.
Require Import thm16507_spec.
Require Import thm17045_spec.
Require Import thm17265_spec.
Require Import thm17362_spec.
Require Import thm17646_spec.
Require Import thm18392_spec.
Require Import thm18394_spec.
Require Import thm18904_spec.
Require Import thm18905_spec.
Require Import thm18910_spec.
Require Import thm18911_spec.
Require Import thm18922_spec.
Require Import thm18923_spec.
Require Import thm18928_spec.
Require Import thm18929_spec.
Require Import thm19012_spec.
Require Import thm19013_spec.
Require Import thm20664_spec.
Require Import thm20665_spec.
Require Import thm20668_spec.
Require Import thm20682_spec.
Require Import thm20764_spec.
Require Import thm20780_spec.
Require Import thm20789_spec.
Require Import thm20895_spec.
Require Import thm21021_spec.
Require Import thm21114_spec.
Require Import thm21182_spec.
Require Import thm21386_spec.
Require Import thm3458986_spec.
Require Import thm3459503_spec.
Lemma lem3462447 (p : Prop) : p = (term0 p).
Proof. exact (EQ_MP (@lem10578 p) (@lem10597 p)). Qed.
Lemma lem3462448 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (f : type1524 _89837 _89861 _89862 _89863) : (term1 _89837 _89861 _89862 _89863 P f) = (term2 _89837 _89861 _89862 _89863 P f).
Proof. exact (@lem3462447 (term1 _89837 _89861 _89862 _89863 P f)). Qed.
Lemma lem3462449 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (f : type1524 _89837 _89861 _89862 _89863) : (term2 _89837 _89861 _89862 _89863 P f) = (term1 _89837 _89861 _89862 _89863 P f).
Proof. exact (SYM (@lem3462448 _89837 _89861 _89862 _89863 P f)). Qed.
Lemma lem3462450 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (f : type1524 _89837 _89861 _89862 _89863) (h1 : term3 _89837 _89861 _89862 _89863 P f) : term3 _89837 _89861 _89862 _89863 P f.
Proof. exact (h1). Qed.
Lemma lem3462453 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (f : type1524 _89837 _89861 _89862 _89863) (h1 : term2 _89837 _89861 _89862 _89863 P f) : term2 _89837 _89861 _89862 _89863 P f.
Proof. exact (h1). Qed.
Lemma lem3462454 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (f : type1524 _89837 _89861 _89862 _89863) : term4 _89837 _89861 _89862 _89863 P f.
Proof. exact (fun h0 : term2 _89837 _89861 _89862 _89863 P f => @lem3462453 _89837 _89861 _89862 _89863 P f h0). Qed.
Lemma lem3462455 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (f : type1524 _89837 _89861 _89862 _89863) (h1 : term4 _89837 _89861 _89862 _89863 P f) : term4 _89837 _89861 _89862 _89863 P f.
Proof. exact (h1). Qed.
Lemma lem3462456 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (f : type1524 _89837 _89861 _89862 _89863) (h1 : term2 _89837 _89861 _89862 _89863 P f) : term2 _89837 _89861 _89862 _89863 P f.
Proof. exact (h1). Qed.
Lemma lem3462457 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (f : type1524 _89837 _89861 _89862 _89863) (h1 : term2 _89837 _89861 _89862 _89863 P f) (h2 : term4 _89837 _89861 _89862 _89863 P f) : term2 _89837 _89861 _89862 _89863 P f.
Proof. exact (@lem3462455 _89837 _89861 _89862 _89863 P f h2 (@lem3462456 _89837 _89861 _89862 _89863 P f h1)). Qed.
Lemma lem3462458 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (f : type1524 _89837 _89861 _89862 _89863) (h1 : term2 _89837 _89861 _89862 _89863 P f) : term5 _89837 _89861 _89862 _89863 P f.
Proof. exact (fun h0 : term4 _89837 _89861 _89862 _89863 P f => @lem3462457 _89837 _89861 _89862 _89863 P f h1 h0). Qed.
Lemma lem3462459 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (f : type1524 _89837 _89861 _89862 _89863) (h1 : term4 _89837 _89861 _89862 _89863 P f) : term4 _89837 _89861 _89862 _89863 P f.
Proof. exact (h1). Qed.
Lemma lem3462460 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (f : type1524 _89837 _89861 _89862 _89863) (h1 : term2 _89837 _89861 _89862 _89863 P f) (h2 : term4 _89837 _89861 _89862 _89863 P f) : term2 _89837 _89861 _89862 _89863 P f.
Proof. exact (@lem3462458 _89837 _89861 _89862 _89863 P f h1 (@lem3462459 _89837 _89861 _89862 _89863 P f h2)). Qed.
Lemma lem3462461 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (f : type1524 _89837 _89861 _89862 _89863) (h1 : term4 _89837 _89861 _89862 _89863 P f) : term4 _89837 _89861 _89862 _89863 P f.
Proof. exact (fun h0 : term2 _89837 _89861 _89862 _89863 P f => @lem3462460 _89837 _89861 _89862 _89863 P f h0 h1). Qed.
Lemma lem3462462 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (f : type1524 _89837 _89861 _89862 _89863) : term6 _89837 _89861 _89862 _89863 P f.
Proof. exact (fun h0 : term4 _89837 _89861 _89862 _89863 P f => @lem3462461 _89837 _89861 _89862 _89863 P f h0). Qed.
Lemma lem3462465 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (f : type1524 _89837 _89861 _89862 _89863) : term4 _89837 _89861 _89862 _89863 P f.
Proof. exact (@lem3462462 _89837 _89861 _89862 _89863 P f (@lem3462454 _89837 _89861 _89862 _89863 P f)). Qed.
Lemma lem3462466 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (f : type1524 _89837 _89861 _89862 _89863) : term4 _89837 _89861 _89862 _89863 P f.
Proof. exact (@lem3462465 _89837 _89861 _89862 _89863 P f). Qed.
Lemma lem3462476 (t : Prop) : (t -> False) = (~ t).
Proof. exact (proj2 (@lem16474 t)). Qed.
Lemma lem3462477 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (f : type1524 _89837 _89861 _89862 _89863) : (term2 _89837 _89861 _89862 _89863 P f) = (term7 _89837 _89861 _89862 _89863 P f).
Proof. exact (@lem3462476 (term3 _89837 _89861 _89862 _89863 P f)). Qed.
Lemma lem3462479 (t : Prop) : (term8 t) = t.
Proof. exact (EQ_MP (@lem16507 t) (@lem16506 t)). Qed.
Lemma lem3462480 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (f : type1524 _89837 _89861 _89862 _89863) : (term7 _89837 _89861 _89862 _89863 P f) = (term1 _89837 _89861 _89862 _89863 P f).
Proof. exact (@lem3462479 (term1 _89837 _89861 _89862 _89863 P f)). Qed.
Lemma lem3462485 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (f : type1524 _89837 _89861 _89862 _89863) : (term2 _89837 _89861 _89862 _89863 P f) = (term1 _89837 _89861 _89862 _89863 P f).
Proof. exact (TRANS (@lem3462477 _89837 _89861 _89862 _89863 P f) (@lem3462480 _89837 _89861 _89862 _89863 P f)). Qed.
Lemma lem3462564 {_89837 _89861 _89862 _89863 : Type'} (f : type1524 _89837 _89861 _89862 _89863) : (term9 _89837 _89861 _89862 _89863 f) = (term10 _89837 _89861 _89862 _89863 f).
Proof. exact (fun_ext (fun P : type1517 _89861 _89862 _89863 => @lem3462485 _89837 _89861 _89862 _89863 P f)). Qed.
Lemma lem3462565 {_89861 _89862 _89863 : Type'} : (@all (_89863 -> _89862 -> _89861 -> Prop)) = (@all (_89863 -> _89862 -> _89861 -> Prop)).
Proof. exact (eq_refl (@all (_89863 -> _89862 -> _89861 -> Prop))). Qed.
Lemma lem3462566 {_89837 _89861 _89862 _89863 : Type'} (f : type1524 _89837 _89861 _89862 _89863) : (term11 _89837 _89861 _89862 _89863 f) = (term12 _89837 _89861 _89862 _89863 f).
Proof. exact (MK_COMB (@lem3462565 _89861 _89862 _89863) (@lem3462564 _89837 _89861 _89862 _89863 f)). Qed.
Lemma lem3462571 {_89837 _89861 _89862 _89863 : Type'} : (term13 _89837 _89861 _89862 _89863) = (term14 _89837 _89861 _89862 _89863).
Proof. exact (fun_ext (fun f : type1524 _89837 _89861 _89862 _89863 => @lem3462566 _89837 _89861 _89862 _89863 f)). Qed.
Lemma lem3462572 {_89837 _89861 _89862 _89863 : Type'} : (@all (_89863 -> _89862 -> _89861 -> _89837 -> Prop)) = (@all (_89863 -> _89862 -> _89861 -> _89837 -> Prop)).
Proof. exact (eq_refl (@all (_89863 -> _89862 -> _89861 -> _89837 -> Prop))). Qed.
Lemma lem3462581 {_89837 _89861 _89862 _89863 : Type'} : (term15 _89837 _89861 _89862 _89863) = (term16 _89837 _89861 _89862 _89863).
Proof. exact (MK_COMB (@lem3462572 _89837 _89861 _89862 _89863) (@lem3462571 _89837 _89861 _89862 _89863)). Qed.
Lemma lem3462586 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (x : _89837) (f : type1524 _89837 _89861 _89862 _89863) (x' : _89863) (y : _89862) (z : _89861) : (term17 _89837 _89861 _89862 _89863 P x f x' y z) = (term17 _89837 _89861 _89862 _89863 P x f x' y z).
Proof. exact (eq_refl (term17 _89837 _89861 _89862 _89863 P x f x' y z)). Qed.
Lemma lem3462587 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (x : _89837) (f : type1524 _89837 _89861 _89862 _89863) (x' : _89863) (y : _89862) : (term18 _89837 _89861 _89862 _89863 P x f x' y) = (term18 _89837 _89861 _89862 _89863 P x f x' y).
Proof. exact (fun_ext (fun z : _89861 => @lem3462586 _89837 _89861 _89862 _89863 P x f x' y z)). Qed.
Lemma lem3462588 {_89861 : Type'} : (@all _89861) = (@all _89861).
Proof. exact (eq_refl (@all _89861)). Qed.
Lemma lem3462589 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (x : _89837) (f : type1524 _89837 _89861 _89862 _89863) (x' : _89863) (y : _89862) : (term19 _89837 _89861 _89862 _89863 P x f x' y) = (term19 _89837 _89861 _89862 _89863 P x f x' y).
Proof. exact (MK_COMB (@lem3462588 _89861) (@lem3462587 _89837 _89861 _89862 _89863 P x f x' y)). Qed.
Lemma lem3462590 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (x : _89837) (f : type1524 _89837 _89861 _89862 _89863) (x' : _89863) : (term20 _89837 _89861 _89862 _89863 P x f x') = (term20 _89837 _89861 _89862 _89863 P x f x').
Proof. exact (fun_ext (fun y : _89862 => @lem3462589 _89837 _89861 _89862 _89863 P x f x' y)). Qed.
Lemma lem3462591 {_89862 : Type'} : (@all _89862) = (@all _89862).
Proof. exact (eq_refl (@all _89862)). Qed.
Lemma lem3462592 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (x : _89837) (f : type1524 _89837 _89861 _89862 _89863) (x' : _89863) : (term21 _89837 _89861 _89862 _89863 P x f x') = (term21 _89837 _89861 _89862 _89863 P x f x').
Proof. exact (MK_COMB (@lem3462591 _89862) (@lem3462590 _89837 _89861 _89862 _89863 P x f x')). Qed.
Lemma lem3462593 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (x : _89837) (f : type1524 _89837 _89861 _89862 _89863) : (term22 _89837 _89861 _89862 _89863 P x f) = (term22 _89837 _89861 _89862 _89863 P x f).
Proof. exact (fun_ext (fun x' : _89863 => @lem3462592 _89837 _89861 _89862 _89863 P x f x')). Qed.
Lemma lem3462594 {_89863 : Type'} : (@all _89863) = (@all _89863).
Proof. exact (eq_refl (@all _89863)). Qed.
Lemma lem3462595 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (x : _89837) (f : type1524 _89837 _89861 _89862 _89863) : (term23 _89837 _89861 _89862 _89863 P x f) = (term23 _89837 _89861 _89862 _89863 P x f).
Proof. exact (MK_COMB (@lem3462594 _89863) (@lem3462593 _89837 _89861 _89862 _89863 P x f)). Qed.
Lemma lem3462596 {_89837 : Type'} (x : _89837) (t : _89837 -> Prop) : (@IN _89837 x t) = (@IN _89837 x t).
Proof. exact (eq_refl (@IN _89837 x t)). Qed.
Lemma lem3462601 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (t : _89837 -> Prop) (f : type1524 _89837 _89861 _89862 _89863) (x : _89863) (y : _89862) (z : _89861) : (term24 _89837 _89861 _89862 _89863 P t f x y z) = (term24 _89837 _89861 _89862 _89863 P t f x y z).
Proof. exact (eq_refl (term24 _89837 _89861 _89862 _89863 P t f x y z)). Qed.
Lemma lem3462602 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (t : _89837 -> Prop) (f : type1524 _89837 _89861 _89862 _89863) (x : _89863) (y : _89862) : (term25 _89837 _89861 _89862 _89863 P t f x y) = (term25 _89837 _89861 _89862 _89863 P t f x y).
Proof. exact (fun_ext (fun z : _89861 => @lem3462601 _89837 _89861 _89862 _89863 P t f x y z)). Qed.
Lemma lem3462603 {_89861 : Type'} : (@ex _89861) = (@ex _89861).
Proof. exact (eq_refl (@ex _89861)). Qed.
Lemma lem3462604 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (t : _89837 -> Prop) (f : type1524 _89837 _89861 _89862 _89863) (x : _89863) (y : _89862) : (term26 _89837 _89861 _89862 _89863 P t f x y) = (term26 _89837 _89861 _89862 _89863 P t f x y).
Proof. exact (MK_COMB (@lem3462603 _89861) (@lem3462602 _89837 _89861 _89862 _89863 P t f x y)). Qed.
Lemma lem3462605 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (t : _89837 -> Prop) (f : type1524 _89837 _89861 _89862 _89863) (x : _89863) : (term27 _89837 _89861 _89862 _89863 P t f x) = (term27 _89837 _89861 _89862 _89863 P t f x).
Proof. exact (fun_ext (fun y : _89862 => @lem3462604 _89837 _89861 _89862 _89863 P t f x y)). Qed.
Lemma lem3462606 {_89862 : Type'} : (@ex _89862) = (@ex _89862).
Proof. exact (eq_refl (@ex _89862)). Qed.
Lemma lem3462607 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (t : _89837 -> Prop) (f : type1524 _89837 _89861 _89862 _89863) (x : _89863) : (term28 _89837 _89861 _89862 _89863 P t f x) = (term28 _89837 _89861 _89862 _89863 P t f x).
Proof. exact (MK_COMB (@lem3462606 _89862) (@lem3462605 _89837 _89861 _89862 _89863 P t f x)). Qed.
Lemma lem3462608 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (t : _89837 -> Prop) (f : type1524 _89837 _89861 _89862 _89863) : (term29 _89837 _89861 _89862 _89863 P t f) = (term29 _89837 _89861 _89862 _89863 P t f).
Proof. exact (fun_ext (fun x : _89863 => @lem3462607 _89837 _89861 _89862 _89863 P t f x)). Qed.
Lemma lem3462609 {_89863 : Type'} : (@ex _89863) = (@ex _89863).
Proof. exact (eq_refl (@ex _89863)). Qed.
Lemma lem3462610 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (t : _89837 -> Prop) (f : type1524 _89837 _89861 _89862 _89863) : (term30 _89837 _89861 _89862 _89863 P t f) = (term30 _89837 _89861 _89862 _89863 P t f).
Proof. exact (MK_COMB (@lem3462609 _89863) (@lem3462608 _89837 _89861 _89862 _89863 P t f)). Qed.
Lemma lem3462611 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem3462612 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (t : _89837 -> Prop) (f : type1524 _89837 _89861 _89862 _89863) : (term31 _89837 _89861 _89862 _89863 P t f) = (term31 _89837 _89861 _89862 _89863 P t f).
Proof. exact (MK_COMB (@lem3462611) (@lem3462610 _89837 _89861 _89862 _89863 P t f)). Qed.
Lemma lem3462613 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (f : type1524 _89837 _89861 _89862 _89863) (x : _89837) (t : _89837 -> Prop) : (term32 _89837 _89861 _89862 _89863 P f x t) = (term32 _89837 _89861 _89862 _89863 P f x t).
Proof. exact (MK_COMB (@lem3462612 _89837 _89861 _89862 _89863 P t f) (@lem3462596 _89837 x t)). Qed.
Lemma lem3462614 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (f : type1524 _89837 _89861 _89862 _89863) (x : _89837) : (term33 _89837 _89861 _89862 _89863 P f x) = (term33 _89837 _89861 _89862 _89863 P f x).
Proof. exact (fun_ext (fun t : _89837 -> Prop => @lem3462613 _89837 _89861 _89862 _89863 P f x t)). Qed.
Lemma lem3462615 {_89837 : Type'} : (@all (_89837 -> Prop)) = (@all (_89837 -> Prop)).
Proof. exact (eq_refl (@all (_89837 -> Prop))). Qed.
Lemma lem3462616 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (f : type1524 _89837 _89861 _89862 _89863) (x : _89837) : (term34 _89837 _89861 _89862 _89863 P f x) = (term34 _89837 _89861 _89862 _89863 P f x).
Proof. exact (MK_COMB (@lem3462615 _89837) (@lem3462614 _89837 _89861 _89862 _89863 P f x)). Qed.
Lemma lem3462617 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem3462618 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (f : type1524 _89837 _89861 _89862 _89863) (x : _89837) : (term35 _89837 _89861 _89862 _89863 P f x) = (term35 _89837 _89861 _89862 _89863 P f x).
Proof. exact (MK_COMB (@lem3462617) (@lem3462616 _89837 _89861 _89862 _89863 P f x)). Qed.
Lemma lem3462619 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (x : _89837) (f : type1524 _89837 _89861 _89862 _89863) : ((term34 _89837 _89861 _89862 _89863 P f x) = (term23 _89837 _89861 _89862 _89863 P x f)) = ((term34 _89837 _89861 _89862 _89863 P f x) = (term23 _89837 _89861 _89862 _89863 P x f)).
Proof. exact (MK_COMB (@lem3462618 _89837 _89861 _89862 _89863 P f x) (@lem3462595 _89837 _89861 _89862 _89863 P x f)). Qed.
Lemma lem3462620 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (f : type1524 _89837 _89861 _89862 _89863) : (term36 _89837 _89861 _89862 _89863 P f) = (term36 _89837 _89861 _89862 _89863 P f).
Proof. exact (fun_ext (fun x : _89837 => @lem3462619 _89837 _89861 _89862 _89863 P x f)). Qed.
Lemma lem3462621 {_89837 : Type'} : (@all _89837) = (@all _89837).
Proof. exact (eq_refl (@all _89837)). Qed.
Lemma lem3462622 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (f : type1524 _89837 _89861 _89862 _89863) : (term1 _89837 _89861 _89862 _89863 P f) = (term1 _89837 _89861 _89862 _89863 P f).
Proof. exact (MK_COMB (@lem3462621 _89837) (@lem3462620 _89837 _89861 _89862 _89863 P f)). Qed.
Lemma lem3462623 {_89837 _89861 _89862 _89863 : Type'} (f : type1524 _89837 _89861 _89862 _89863) : (term10 _89837 _89861 _89862 _89863 f) = (term10 _89837 _89861 _89862 _89863 f).
Proof. exact (fun_ext (fun P : type1517 _89861 _89862 _89863 => @lem3462622 _89837 _89861 _89862 _89863 P f)). Qed.
Lemma lem3462624 {_89861 _89862 _89863 : Type'} : (@all (_89863 -> _89862 -> _89861 -> Prop)) = (@all (_89863 -> _89862 -> _89861 -> Prop)).
Proof. exact (eq_refl (@all (_89863 -> _89862 -> _89861 -> Prop))). Qed.
Lemma lem3462625 {_89837 _89861 _89862 _89863 : Type'} (f : type1524 _89837 _89861 _89862 _89863) : (term12 _89837 _89861 _89862 _89863 f) = (term12 _89837 _89861 _89862 _89863 f).
Proof. exact (MK_COMB (@lem3462624 _89861 _89862 _89863) (@lem3462623 _89837 _89861 _89862 _89863 f)). Qed.
Lemma lem3462626 {_89837 _89861 _89862 _89863 : Type'} : (term14 _89837 _89861 _89862 _89863) = (term14 _89837 _89861 _89862 _89863).
Proof. exact (fun_ext (fun f : type1524 _89837 _89861 _89862 _89863 => @lem3462625 _89837 _89861 _89862 _89863 f)). Qed.
Lemma lem3462627 {_89837 _89861 _89862 _89863 : Type'} : (@all (_89863 -> _89862 -> _89861 -> _89837 -> Prop)) = (@all (_89863 -> _89862 -> _89861 -> _89837 -> Prop)).
Proof. exact (eq_refl (@all (_89863 -> _89862 -> _89861 -> _89837 -> Prop))). Qed.
Lemma lem3462628 {_89837 _89861 _89862 _89863 : Type'} : (term16 _89837 _89861 _89862 _89863) = (term16 _89837 _89861 _89862 _89863).
Proof. exact (MK_COMB (@lem3462627 _89837 _89861 _89862 _89863) (@lem3462626 _89837 _89861 _89862 _89863)). Qed.
Lemma lem3462697 {_89837 _89861 _89862 _89863 : Type'} : (term15 _89837 _89861 _89862 _89863) = (term16 _89837 _89861 _89862 _89863).
Proof. exact (TRANS (@lem3462581 _89837 _89861 _89862 _89863) (@lem3462628 _89837 _89861 _89862 _89863)). Qed.
Lemma lem3462698 {_89837 _89861 _89862 _89863 : Type'} : (term16 _89837 _89861 _89862 _89863) = (term15 _89837 _89861 _89862 _89863).
Proof. exact (SYM (@lem3462697 _89837 _89861 _89862 _89863)). Qed.
Lemma lem3462700 (p : Prop) : p = (term0 p).
Proof. exact (EQ_MP (@lem10578 p) (@lem10597 p)). Qed.
Lemma lem3462701 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (x : _89837) (f : type1524 _89837 _89861 _89862 _89863) : ((term34 _89837 _89861 _89862 _89863 P f x) = (term23 _89837 _89861 _89862 _89863 P x f)) = (term37 _89837 _89861 _89862 _89863 P x f).
Proof. exact (@lem3462700 ((term34 _89837 _89861 _89862 _89863 P f x) = (term23 _89837 _89861 _89862 _89863 P x f))). Qed.
Lemma lem3462702 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (x : _89837) (f : type1524 _89837 _89861 _89862 _89863) : (term37 _89837 _89861 _89862 _89863 P x f) = ((term34 _89837 _89861 _89862 _89863 P f x) = (term23 _89837 _89861 _89862 _89863 P x f)).
Proof. exact (SYM (@lem3462701 _89837 _89861 _89862 _89863 P x f)). Qed.
Lemma lem3462703 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (x : _89837) (f : type1524 _89837 _89861 _89862 _89863) (h1 : term38 _89837 _89861 _89862 _89863 P x f) : term38 _89837 _89861 _89862 _89863 P x f.
Proof. exact (h1). Qed.
Lemma lem3462712 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (t : _89837 -> Prop) (f : type1524 _89837 _89861 _89862 _89863) (x : _89863) (y : _89862) (z : _89861) : (term39 _89837 _89861 _89862 _89863 P t f x y z) = (term40 _89837 _89861 _89862 _89863 P t f x y z).
Proof. exact (@lem17045 (P x y z) (t = (f x y z))). Qed.
Lemma lem3462715 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (t : _89837 -> Prop) (f : type1524 _89837 _89861 _89862 _89863) (x : _89863) (y : _89862) (z : _89861) : (term24 _89837 _89861 _89862 _89863 P t f x y z) = (term24 _89837 _89861 _89862 _89863 P t f x y z).
Proof. exact (eq_refl (term24 _89837 _89861 _89862 _89863 P t f x y z)). Qed.
Lemma lem3462716 {_89861 : Type'} (P : _89861 -> Prop) : (term41 _89861 P) = (term42 _89861 P).
Proof. exact (@lem18394 _89861 P). Qed.
Lemma lem3462717 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (t : _89837 -> Prop) (f : type1524 _89837 _89861 _89862 _89863) (x : _89863) (y : _89862) : (term43 _89837 _89861 _89862 _89863 P t f x y) = (term44 _89837 _89861 _89862 _89863 P t f x y).
Proof. exact (@lem3462716 _89861 (term25 _89837 _89861 _89862 _89863 P t f x y)). Qed.
Lemma lem3462718 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (t : _89837 -> Prop) (f : type1524 _89837 _89861 _89862 _89863) (x : _89863) (y : _89862) (z : _89861) : (term45 _89837 _89861 _89862 _89863 P t f x y z) = (term24 _89837 _89861 _89862 _89863 P t f x y z).
Proof. exact (eq_refl (term45 _89837 _89861 _89862 _89863 P t f x y z)). Qed.
Lemma lem3462719 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem3462720 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (t : _89837 -> Prop) (f : type1524 _89837 _89861 _89862 _89863) (x : _89863) (y : _89862) (z : _89861) : (term46 _89837 _89861 _89862 _89863 P t f x y z) = (term39 _89837 _89861 _89862 _89863 P t f x y z).
Proof. exact (MK_COMB (@lem3462719) (@lem3462718 _89837 _89861 _89862 _89863 P t f x y z)). Qed.
Lemma lem3462721 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (t : _89837 -> Prop) (f : type1524 _89837 _89861 _89862 _89863) (x : _89863) (y : _89862) (z : _89861) : (term46 _89837 _89861 _89862 _89863 P t f x y z) = (term40 _89837 _89861 _89862 _89863 P t f x y z).
Proof. exact (TRANS (@lem3462720 _89837 _89861 _89862 _89863 P t f x y z) (@lem3462712 _89837 _89861 _89862 _89863 P t f x y z)). Qed.
Lemma lem3462722 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (t : _89837 -> Prop) (f : type1524 _89837 _89861 _89862 _89863) (x : _89863) (y : _89862) : (term47 _89837 _89861 _89862 _89863 P t f x y) = (term48 _89837 _89861 _89862 _89863 P t f x y).
Proof. exact (fun_ext (fun z : _89861 => @lem3462721 _89837 _89861 _89862 _89863 P t f x y z)). Qed.
Lemma lem3462723 {_89861 : Type'} : (@all _89861) = (@all _89861).
Proof. exact (eq_refl (@all _89861)). Qed.
Lemma lem3462724 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (t : _89837 -> Prop) (f : type1524 _89837 _89861 _89862 _89863) (x : _89863) (y : _89862) : (term44 _89837 _89861 _89862 _89863 P t f x y) = (term49 _89837 _89861 _89862 _89863 P t f x y).
Proof. exact (MK_COMB (@lem3462723 _89861) (@lem3462722 _89837 _89861 _89862 _89863 P t f x y)). Qed.
Lemma lem3462725 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (t : _89837 -> Prop) (f : type1524 _89837 _89861 _89862 _89863) (x : _89863) (y : _89862) : (term43 _89837 _89861 _89862 _89863 P t f x y) = (term49 _89837 _89861 _89862 _89863 P t f x y).
Proof. exact (TRANS (@lem3462717 _89837 _89861 _89862 _89863 P t f x y) (@lem3462724 _89837 _89861 _89862 _89863 P t f x y)). Qed.
Lemma lem3462726 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (t : _89837 -> Prop) (f : type1524 _89837 _89861 _89862 _89863) (x : _89863) (y : _89862) : (term25 _89837 _89861 _89862 _89863 P t f x y) = (term25 _89837 _89861 _89862 _89863 P t f x y).
Proof. exact (fun_ext (fun z : _89861 => @lem3462715 _89837 _89861 _89862 _89863 P t f x y z)). Qed.
Lemma lem3462727 {_89861 : Type'} : (@ex _89861) = (@ex _89861).
Proof. exact (eq_refl (@ex _89861)). Qed.
Lemma lem3462728 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (t : _89837 -> Prop) (f : type1524 _89837 _89861 _89862 _89863) (x : _89863) (y : _89862) : (term26 _89837 _89861 _89862 _89863 P t f x y) = (term26 _89837 _89861 _89862 _89863 P t f x y).
Proof. exact (MK_COMB (@lem3462727 _89861) (@lem3462726 _89837 _89861 _89862 _89863 P t f x y)). Qed.
Lemma lem3462729 {_89862 : Type'} (P : _89862 -> Prop) : (term41 _89862 P) = (term42 _89862 P).
Proof. exact (@lem18394 _89862 P). Qed.
Lemma lem3462730 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (t : _89837 -> Prop) (f : type1524 _89837 _89861 _89862 _89863) (x : _89863) : (term50 _89837 _89861 _89862 _89863 P t f x) = (term51 _89837 _89861 _89862 _89863 P t f x).
Proof. exact (@lem3462729 _89862 (term27 _89837 _89861 _89862 _89863 P t f x)). Qed.
Lemma lem3462731 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (t : _89837 -> Prop) (f : type1524 _89837 _89861 _89862 _89863) (x : _89863) (y : _89862) : (term52 _89837 _89861 _89862 _89863 P t f x y) = (term26 _89837 _89861 _89862 _89863 P t f x y).
Proof. exact (eq_refl (term52 _89837 _89861 _89862 _89863 P t f x y)). Qed.
Lemma lem3462732 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem3462733 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (t : _89837 -> Prop) (f : type1524 _89837 _89861 _89862 _89863) (x : _89863) (y : _89862) : (term53 _89837 _89861 _89862 _89863 P t f x y) = (term43 _89837 _89861 _89862 _89863 P t f x y).
Proof. exact (MK_COMB (@lem3462732) (@lem3462731 _89837 _89861 _89862 _89863 P t f x y)). Qed.
Lemma lem3462734 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (t : _89837 -> Prop) (f : type1524 _89837 _89861 _89862 _89863) (x : _89863) (y : _89862) : (term53 _89837 _89861 _89862 _89863 P t f x y) = (term49 _89837 _89861 _89862 _89863 P t f x y).
Proof. exact (TRANS (@lem3462733 _89837 _89861 _89862 _89863 P t f x y) (@lem3462725 _89837 _89861 _89862 _89863 P t f x y)). Qed.
Lemma lem3462735 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (t : _89837 -> Prop) (f : type1524 _89837 _89861 _89862 _89863) (x : _89863) : (term54 _89837 _89861 _89862 _89863 P t f x) = (term55 _89837 _89861 _89862 _89863 P t f x).
Proof. exact (fun_ext (fun y : _89862 => @lem3462734 _89837 _89861 _89862 _89863 P t f x y)). Qed.
Lemma lem3462736 {_89862 : Type'} : (@all _89862) = (@all _89862).
Proof. exact (eq_refl (@all _89862)). Qed.
Lemma lem3462737 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (t : _89837 -> Prop) (f : type1524 _89837 _89861 _89862 _89863) (x : _89863) : (term51 _89837 _89861 _89862 _89863 P t f x) = (term56 _89837 _89861 _89862 _89863 P t f x).
Proof. exact (MK_COMB (@lem3462736 _89862) (@lem3462735 _89837 _89861 _89862 _89863 P t f x)). Qed.
Lemma lem3462738 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (t : _89837 -> Prop) (f : type1524 _89837 _89861 _89862 _89863) (x : _89863) : (term50 _89837 _89861 _89862 _89863 P t f x) = (term56 _89837 _89861 _89862 _89863 P t f x).
Proof. exact (TRANS (@lem3462730 _89837 _89861 _89862 _89863 P t f x) (@lem3462737 _89837 _89861 _89862 _89863 P t f x)). Qed.
Lemma lem3462739 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (t : _89837 -> Prop) (f : type1524 _89837 _89861 _89862 _89863) (x : _89863) : (term27 _89837 _89861 _89862 _89863 P t f x) = (term27 _89837 _89861 _89862 _89863 P t f x).
Proof. exact (fun_ext (fun y : _89862 => @lem3462728 _89837 _89861 _89862 _89863 P t f x y)). Qed.
Lemma lem3462740 {_89862 : Type'} : (@ex _89862) = (@ex _89862).
Proof. exact (eq_refl (@ex _89862)). Qed.
Lemma lem3462741 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (t : _89837 -> Prop) (f : type1524 _89837 _89861 _89862 _89863) (x : _89863) : (term28 _89837 _89861 _89862 _89863 P t f x) = (term28 _89837 _89861 _89862 _89863 P t f x).
Proof. exact (MK_COMB (@lem3462740 _89862) (@lem3462739 _89837 _89861 _89862 _89863 P t f x)). Qed.
Lemma lem3462742 {_89863 : Type'} (P : _89863 -> Prop) : (term41 _89863 P) = (term42 _89863 P).
Proof. exact (@lem18394 _89863 P). Qed.
Lemma lem3462743 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (t : _89837 -> Prop) (f : type1524 _89837 _89861 _89862 _89863) : (term57 _89837 _89861 _89862 _89863 P t f) = (term58 _89837 _89861 _89862 _89863 P t f).
Proof. exact (@lem3462742 _89863 (term29 _89837 _89861 _89862 _89863 P t f)). Qed.
Lemma lem3462744 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (t : _89837 -> Prop) (f : type1524 _89837 _89861 _89862 _89863) (x : _89863) : (term59 _89837 _89861 _89862 _89863 P t f x) = (term28 _89837 _89861 _89862 _89863 P t f x).
Proof. exact (eq_refl (term59 _89837 _89861 _89862 _89863 P t f x)). Qed.
Lemma lem3462745 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem3462746 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (t : _89837 -> Prop) (f : type1524 _89837 _89861 _89862 _89863) (x : _89863) : (term60 _89837 _89861 _89862 _89863 P t f x) = (term50 _89837 _89861 _89862 _89863 P t f x).
Proof. exact (MK_COMB (@lem3462745) (@lem3462744 _89837 _89861 _89862 _89863 P t f x)). Qed.
Lemma lem3462747 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (t : _89837 -> Prop) (f : type1524 _89837 _89861 _89862 _89863) (x : _89863) : (term60 _89837 _89861 _89862 _89863 P t f x) = (term56 _89837 _89861 _89862 _89863 P t f x).
Proof. exact (TRANS (@lem3462746 _89837 _89861 _89862 _89863 P t f x) (@lem3462738 _89837 _89861 _89862 _89863 P t f x)). Qed.
Lemma lem3462748 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (t : _89837 -> Prop) (f : type1524 _89837 _89861 _89862 _89863) : (term61 _89837 _89861 _89862 _89863 P t f) = (term62 _89837 _89861 _89862 _89863 P t f).
Proof. exact (fun_ext (fun x : _89863 => @lem3462747 _89837 _89861 _89862 _89863 P t f x)). Qed.
Lemma lem3462749 {_89863 : Type'} : (@all _89863) = (@all _89863).
Proof. exact (eq_refl (@all _89863)). Qed.
Lemma lem3462750 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (t : _89837 -> Prop) (f : type1524 _89837 _89861 _89862 _89863) : (term58 _89837 _89861 _89862 _89863 P t f) = (term63 _89837 _89861 _89862 _89863 P t f).
Proof. exact (MK_COMB (@lem3462749 _89863) (@lem3462748 _89837 _89861 _89862 _89863 P t f)). Qed.
Lemma lem3462751 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (t : _89837 -> Prop) (f : type1524 _89837 _89861 _89862 _89863) : (term57 _89837 _89861 _89862 _89863 P t f) = (term63 _89837 _89861 _89862 _89863 P t f).
Proof. exact (TRANS (@lem3462743 _89837 _89861 _89862 _89863 P t f) (@lem3462750 _89837 _89861 _89862 _89863 P t f)). Qed.
Lemma lem3462752 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (t : _89837 -> Prop) (f : type1524 _89837 _89861 _89862 _89863) : (term29 _89837 _89861 _89862 _89863 P t f) = (term29 _89837 _89861 _89862 _89863 P t f).
Proof. exact (fun_ext (fun x : _89863 => @lem3462741 _89837 _89861 _89862 _89863 P t f x)). Qed.
Lemma lem3462753 {_89863 : Type'} : (@ex _89863) = (@ex _89863).
Proof. exact (eq_refl (@ex _89863)). Qed.
Lemma lem3462754 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (t : _89837 -> Prop) (f : type1524 _89837 _89861 _89862 _89863) : (term30 _89837 _89861 _89862 _89863 P t f) = (term30 _89837 _89861 _89862 _89863 P t f).
Proof. exact (MK_COMB (@lem3462753 _89863) (@lem3462752 _89837 _89861 _89862 _89863 P t f)). Qed.
Lemma lem3462755 {_89837 : Type'} (x : _89837) (t : _89837 -> Prop) : (term64 _89837 x t) = (term64 _89837 x t).
Proof. exact (eq_refl (term64 _89837 x t)). Qed.
Lemma lem3462756 {_89837 : Type'} (x : _89837) (t : _89837 -> Prop) : (@IN _89837 x t) = (@IN _89837 x t).
Proof. exact (eq_refl (@IN _89837 x t)). Qed.
Lemma lem3462757 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem3462758 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (t : _89837 -> Prop) (f : type1524 _89837 _89861 _89862 _89863) : (term65 _89837 _89861 _89862 _89863 P t f) = (term65 _89837 _89861 _89862 _89863 P t f).
Proof. exact (MK_COMB (@lem3462757) (@lem3462754 _89837 _89861 _89862 _89863 P t f)). Qed.
Lemma lem3462759 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (f : type1524 _89837 _89861 _89862 _89863) (x : _89837) (t : _89837 -> Prop) : (term66 _89837 _89861 _89862 _89863 P f x t) = (term66 _89837 _89861 _89862 _89863 P f x t).
Proof. exact (MK_COMB (@lem3462758 _89837 _89861 _89862 _89863 P t f) (@lem3462755 _89837 x t)). Qed.
Lemma lem3462760 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (f : type1524 _89837 _89861 _89862 _89863) (x : _89837) (t : _89837 -> Prop) : (term67 _89837 _89861 _89862 _89863 P f x t) = (term66 _89837 _89861 _89862 _89863 P f x t).
Proof. exact (@lem17362 (term30 _89837 _89861 _89862 _89863 P t f) (@IN _89837 x t)). Qed.
Lemma lem3462761 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (f : type1524 _89837 _89861 _89862 _89863) (x : _89837) (t : _89837 -> Prop) : (term67 _89837 _89861 _89862 _89863 P f x t) = (term66 _89837 _89861 _89862 _89863 P f x t).
Proof. exact (TRANS (@lem3462760 _89837 _89861 _89862 _89863 P f x t) (@lem3462759 _89837 _89861 _89862 _89863 P f x t)). Qed.
Lemma lem3462762 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem3462763 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (t : _89837 -> Prop) (f : type1524 _89837 _89861 _89862 _89863) : (term68 _89837 _89861 _89862 _89863 P t f) = (term69 _89837 _89861 _89862 _89863 P t f).
Proof. exact (MK_COMB (@lem3462762) (@lem3462751 _89837 _89861 _89862 _89863 P t f)). Qed.
Lemma lem3462764 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (f : type1524 _89837 _89861 _89862 _89863) (x : _89837) (t : _89837 -> Prop) : (term70 _89837 _89861 _89862 _89863 P f x t) = (term71 _89837 _89861 _89862 _89863 P f x t).
Proof. exact (MK_COMB (@lem3462763 _89837 _89861 _89862 _89863 P t f) (@lem3462756 _89837 x t)). Qed.
Lemma lem3462765 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (f : type1524 _89837 _89861 _89862 _89863) (x : _89837) (t : _89837 -> Prop) : (term32 _89837 _89861 _89862 _89863 P f x t) = (term70 _89837 _89861 _89862 _89863 P f x t).
Proof. exact (@lem17265 (term30 _89837 _89861 _89862 _89863 P t f) (@IN _89837 x t)). Qed.
Lemma lem3462766 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (f : type1524 _89837 _89861 _89862 _89863) (x : _89837) (t : _89837 -> Prop) : (term32 _89837 _89861 _89862 _89863 P f x t) = (term71 _89837 _89861 _89862 _89863 P f x t).
Proof. exact (TRANS (@lem3462765 _89837 _89861 _89862 _89863 P f x t) (@lem3462764 _89837 _89861 _89862 _89863 P f x t)). Qed.
Lemma lem3462767 {_89837 : Type'} (P : type686 _89837) : (term72 _89837 P) = (term73 _89837 P).
Proof. exact (@lem18392 (_89837 -> Prop) P). Qed.
Lemma lem3462768 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (f : type1524 _89837 _89861 _89862 _89863) (x : _89837) : (term74 _89837 _89861 _89862 _89863 P f x) = (term75 _89837 _89861 _89862 _89863 P f x).
Proof. exact (@lem3462767 _89837 (term33 _89837 _89861 _89862 _89863 P f x)). Qed.
Lemma lem3462769 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (f : type1524 _89837 _89861 _89862 _89863) (x : _89837) (t : _89837 -> Prop) : (term76 _89837 _89861 _89862 _89863 P f x t) = (term32 _89837 _89861 _89862 _89863 P f x t).
Proof. exact (eq_refl (term76 _89837 _89861 _89862 _89863 P f x t)). Qed.
Lemma lem3462770 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem3462771 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (f : type1524 _89837 _89861 _89862 _89863) (x : _89837) (t : _89837 -> Prop) : (term77 _89837 _89861 _89862 _89863 P f x t) = (term67 _89837 _89861 _89862 _89863 P f x t).
Proof. exact (MK_COMB (@lem3462770) (@lem3462769 _89837 _89861 _89862 _89863 P f x t)). Qed.
Lemma lem3462772 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (f : type1524 _89837 _89861 _89862 _89863) (x : _89837) (t : _89837 -> Prop) : (term77 _89837 _89861 _89862 _89863 P f x t) = (term66 _89837 _89861 _89862 _89863 P f x t).
Proof. exact (TRANS (@lem3462771 _89837 _89861 _89862 _89863 P f x t) (@lem3462761 _89837 _89861 _89862 _89863 P f x t)). Qed.
Lemma lem3462773 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (f : type1524 _89837 _89861 _89862 _89863) (x : _89837) : (term78 _89837 _89861 _89862 _89863 P f x) = (term79 _89837 _89861 _89862 _89863 P f x).
Proof. exact (fun_ext (fun t : _89837 -> Prop => @lem3462772 _89837 _89861 _89862 _89863 P f x t)). Qed.
Lemma lem3462774 {_89837 : Type'} : (@ex (_89837 -> Prop)) = (@ex (_89837 -> Prop)).
Proof. exact (eq_refl (@ex (_89837 -> Prop))). Qed.
Lemma lem3462775 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (f : type1524 _89837 _89861 _89862 _89863) (x : _89837) : (term75 _89837 _89861 _89862 _89863 P f x) = (term80 _89837 _89861 _89862 _89863 P f x).
Proof. exact (MK_COMB (@lem3462774 _89837) (@lem3462773 _89837 _89861 _89862 _89863 P f x)). Qed.
Lemma lem3462776 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (f : type1524 _89837 _89861 _89862 _89863) (x : _89837) : (term74 _89837 _89861 _89862 _89863 P f x) = (term80 _89837 _89861 _89862 _89863 P f x).
Proof. exact (TRANS (@lem3462768 _89837 _89861 _89862 _89863 P f x) (@lem3462775 _89837 _89861 _89862 _89863 P f x)). Qed.
Lemma lem3462777 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (f : type1524 _89837 _89861 _89862 _89863) (x : _89837) : (term33 _89837 _89861 _89862 _89863 P f x) = (term81 _89837 _89861 _89862 _89863 P f x).
Proof. exact (fun_ext (fun t : _89837 -> Prop => @lem3462766 _89837 _89861 _89862 _89863 P f x t)). Qed.
Lemma lem3462778 {_89837 : Type'} : (@all (_89837 -> Prop)) = (@all (_89837 -> Prop)).
Proof. exact (eq_refl (@all (_89837 -> Prop))). Qed.
Lemma lem3462779 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (f : type1524 _89837 _89861 _89862 _89863) (x : _89837) : (term34 _89837 _89861 _89862 _89863 P f x) = (term82 _89837 _89861 _89862 _89863 P f x).
Proof. exact (MK_COMB (@lem3462778 _89837) (@lem3462777 _89837 _89861 _89862 _89863 P f x)). Qed.
Lemma lem3462788 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (x : _89837) (f : type1524 _89837 _89861 _89862 _89863) (x' : _89863) (y : _89862) (z : _89861) : (term83 _89837 _89861 _89862 _89863 P x f x' y z) = (term84 _89837 _89861 _89862 _89863 P x f x' y z).
Proof. exact (@lem17362 (P x' y z) (term85 _89837 _89861 _89862 _89863 x f x' y z)). Qed.
Lemma lem3462793 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (x : _89837) (f : type1524 _89837 _89861 _89862 _89863) (x' : _89863) (y : _89862) (z : _89861) : (term17 _89837 _89861 _89862 _89863 P x f x' y z) = (term86 _89837 _89861 _89862 _89863 P x f x' y z).
Proof. exact (@lem17265 (P x' y z) (term85 _89837 _89861 _89862 _89863 x f x' y z)). Qed.
Lemma lem3462794 {_89861 : Type'} (P : _89861 -> Prop) : (term87 _89861 P) = (term88 _89861 P).
Proof. exact (@lem18392 _89861 P). Qed.
Lemma lem3462795 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (x : _89837) (f : type1524 _89837 _89861 _89862 _89863) (x' : _89863) (y : _89862) : (term89 _89837 _89861 _89862 _89863 P x f x' y) = (term90 _89837 _89861 _89862 _89863 P x f x' y).
Proof. exact (@lem3462794 _89861 (term18 _89837 _89861 _89862 _89863 P x f x' y)). Qed.
Lemma lem3462796 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (x : _89837) (f : type1524 _89837 _89861 _89862 _89863) (x' : _89863) (y : _89862) (z : _89861) : (term91 _89837 _89861 _89862 _89863 P x f x' y z) = (term17 _89837 _89861 _89862 _89863 P x f x' y z).
Proof. exact (eq_refl (term91 _89837 _89861 _89862 _89863 P x f x' y z)). Qed.
Lemma lem3462797 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem3462798 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (x : _89837) (f : type1524 _89837 _89861 _89862 _89863) (x' : _89863) (y : _89862) (z : _89861) : (term92 _89837 _89861 _89862 _89863 P x f x' y z) = (term83 _89837 _89861 _89862 _89863 P x f x' y z).
Proof. exact (MK_COMB (@lem3462797) (@lem3462796 _89837 _89861 _89862 _89863 P x f x' y z)). Qed.
Lemma lem3462799 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (x : _89837) (f : type1524 _89837 _89861 _89862 _89863) (x' : _89863) (y : _89862) (z : _89861) : (term92 _89837 _89861 _89862 _89863 P x f x' y z) = (term84 _89837 _89861 _89862 _89863 P x f x' y z).
Proof. exact (TRANS (@lem3462798 _89837 _89861 _89862 _89863 P x f x' y z) (@lem3462788 _89837 _89861 _89862 _89863 P x f x' y z)). Qed.
Lemma lem3462800 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (x : _89837) (f : type1524 _89837 _89861 _89862 _89863) (x' : _89863) (y : _89862) : (term93 _89837 _89861 _89862 _89863 P x f x' y) = (term94 _89837 _89861 _89862 _89863 P x f x' y).
Proof. exact (fun_ext (fun z : _89861 => @lem3462799 _89837 _89861 _89862 _89863 P x f x' y z)). Qed.
Lemma lem3462801 {_89861 : Type'} : (@ex _89861) = (@ex _89861).
Proof. exact (eq_refl (@ex _89861)). Qed.
Lemma lem3462802 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (x : _89837) (f : type1524 _89837 _89861 _89862 _89863) (x' : _89863) (y : _89862) : (term90 _89837 _89861 _89862 _89863 P x f x' y) = (term95 _89837 _89861 _89862 _89863 P x f x' y).
Proof. exact (MK_COMB (@lem3462801 _89861) (@lem3462800 _89837 _89861 _89862 _89863 P x f x' y)). Qed.
Lemma lem3462803 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (x : _89837) (f : type1524 _89837 _89861 _89862 _89863) (x' : _89863) (y : _89862) : (term89 _89837 _89861 _89862 _89863 P x f x' y) = (term95 _89837 _89861 _89862 _89863 P x f x' y).
Proof. exact (TRANS (@lem3462795 _89837 _89861 _89862 _89863 P x f x' y) (@lem3462802 _89837 _89861 _89862 _89863 P x f x' y)). Qed.
Lemma lem3462804 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (x : _89837) (f : type1524 _89837 _89861 _89862 _89863) (x' : _89863) (y : _89862) : (term18 _89837 _89861 _89862 _89863 P x f x' y) = (term96 _89837 _89861 _89862 _89863 P x f x' y).
Proof. exact (fun_ext (fun z : _89861 => @lem3462793 _89837 _89861 _89862 _89863 P x f x' y z)). Qed.
Lemma lem3462805 {_89861 : Type'} : (@all _89861) = (@all _89861).
Proof. exact (eq_refl (@all _89861)). Qed.
Lemma lem3462806 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (x : _89837) (f : type1524 _89837 _89861 _89862 _89863) (x' : _89863) (y : _89862) : (term19 _89837 _89861 _89862 _89863 P x f x' y) = (term97 _89837 _89861 _89862 _89863 P x f x' y).
Proof. exact (MK_COMB (@lem3462805 _89861) (@lem3462804 _89837 _89861 _89862 _89863 P x f x' y)). Qed.
Lemma lem3462807 {_89862 : Type'} (P : _89862 -> Prop) : (term87 _89862 P) = (term88 _89862 P).
Proof. exact (@lem18392 _89862 P). Qed.
Lemma lem3462808 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (x : _89837) (f : type1524 _89837 _89861 _89862 _89863) (x' : _89863) : (term98 _89837 _89861 _89862 _89863 P x f x') = (term99 _89837 _89861 _89862 _89863 P x f x').
Proof. exact (@lem3462807 _89862 (term20 _89837 _89861 _89862 _89863 P x f x')). Qed.
Lemma lem3462809 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (x : _89837) (f : type1524 _89837 _89861 _89862 _89863) (x' : _89863) (y : _89862) : (term100 _89837 _89861 _89862 _89863 P x f x' y) = (term19 _89837 _89861 _89862 _89863 P x f x' y).
Proof. exact (eq_refl (term100 _89837 _89861 _89862 _89863 P x f x' y)). Qed.
Lemma lem3462810 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem3462811 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (x : _89837) (f : type1524 _89837 _89861 _89862 _89863) (x' : _89863) (y : _89862) : (term101 _89837 _89861 _89862 _89863 P x f x' y) = (term89 _89837 _89861 _89862 _89863 P x f x' y).
Proof. exact (MK_COMB (@lem3462810) (@lem3462809 _89837 _89861 _89862 _89863 P x f x' y)). Qed.
Lemma lem3462812 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (x : _89837) (f : type1524 _89837 _89861 _89862 _89863) (x' : _89863) (y : _89862) : (term101 _89837 _89861 _89862 _89863 P x f x' y) = (term95 _89837 _89861 _89862 _89863 P x f x' y).
Proof. exact (TRANS (@lem3462811 _89837 _89861 _89862 _89863 P x f x' y) (@lem3462803 _89837 _89861 _89862 _89863 P x f x' y)). Qed.
Lemma lem3462813 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (x : _89837) (f : type1524 _89837 _89861 _89862 _89863) (x' : _89863) : (term102 _89837 _89861 _89862 _89863 P x f x') = (term103 _89837 _89861 _89862 _89863 P x f x').
Proof. exact (fun_ext (fun y : _89862 => @lem3462812 _89837 _89861 _89862 _89863 P x f x' y)). Qed.
Lemma lem3462814 {_89862 : Type'} : (@ex _89862) = (@ex _89862).
Proof. exact (eq_refl (@ex _89862)). Qed.
Lemma lem3462815 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (x : _89837) (f : type1524 _89837 _89861 _89862 _89863) (x' : _89863) : (term99 _89837 _89861 _89862 _89863 P x f x') = (term104 _89837 _89861 _89862 _89863 P x f x').
Proof. exact (MK_COMB (@lem3462814 _89862) (@lem3462813 _89837 _89861 _89862 _89863 P x f x')). Qed.
Lemma lem3462816 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (x : _89837) (f : type1524 _89837 _89861 _89862 _89863) (x' : _89863) : (term98 _89837 _89861 _89862 _89863 P x f x') = (term104 _89837 _89861 _89862 _89863 P x f x').
Proof. exact (TRANS (@lem3462808 _89837 _89861 _89862 _89863 P x f x') (@lem3462815 _89837 _89861 _89862 _89863 P x f x')). Qed.
Lemma lem3462817 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (x : _89837) (f : type1524 _89837 _89861 _89862 _89863) (x' : _89863) : (term20 _89837 _89861 _89862 _89863 P x f x') = (term105 _89837 _89861 _89862 _89863 P x f x').
Proof. exact (fun_ext (fun y : _89862 => @lem3462806 _89837 _89861 _89862 _89863 P x f x' y)). Qed.
Lemma lem3462818 {_89862 : Type'} : (@all _89862) = (@all _89862).
Proof. exact (eq_refl (@all _89862)). Qed.
Lemma lem3462819 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (x : _89837) (f : type1524 _89837 _89861 _89862 _89863) (x' : _89863) : (term21 _89837 _89861 _89862 _89863 P x f x') = (term106 _89837 _89861 _89862 _89863 P x f x').
Proof. exact (MK_COMB (@lem3462818 _89862) (@lem3462817 _89837 _89861 _89862 _89863 P x f x')). Qed.
Lemma lem3462820 {_89863 : Type'} (P : _89863 -> Prop) : (term87 _89863 P) = (term88 _89863 P).
Proof. exact (@lem18392 _89863 P). Qed.
Lemma lem3462821 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (x : _89837) (f : type1524 _89837 _89861 _89862 _89863) : (term107 _89837 _89861 _89862 _89863 P x f) = (term108 _89837 _89861 _89862 _89863 P x f).
Proof. exact (@lem3462820 _89863 (term22 _89837 _89861 _89862 _89863 P x f)). Qed.
Lemma lem3462822 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (x : _89837) (f : type1524 _89837 _89861 _89862 _89863) (x' : _89863) : (term109 _89837 _89861 _89862 _89863 P x f x') = (term21 _89837 _89861 _89862 _89863 P x f x').
Proof. exact (eq_refl (term109 _89837 _89861 _89862 _89863 P x f x')). Qed.
Lemma lem3462823 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem3462824 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (x : _89837) (f : type1524 _89837 _89861 _89862 _89863) (x' : _89863) : (term110 _89837 _89861 _89862 _89863 P x f x') = (term98 _89837 _89861 _89862 _89863 P x f x').
Proof. exact (MK_COMB (@lem3462823) (@lem3462822 _89837 _89861 _89862 _89863 P x f x')). Qed.
Lemma lem3462825 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (x : _89837) (f : type1524 _89837 _89861 _89862 _89863) (x' : _89863) : (term110 _89837 _89861 _89862 _89863 P x f x') = (term104 _89837 _89861 _89862 _89863 P x f x').
Proof. exact (TRANS (@lem3462824 _89837 _89861 _89862 _89863 P x f x') (@lem3462816 _89837 _89861 _89862 _89863 P x f x')). Qed.
Lemma lem3462826 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (x : _89837) (f : type1524 _89837 _89861 _89862 _89863) : (term111 _89837 _89861 _89862 _89863 P x f) = (term112 _89837 _89861 _89862 _89863 P x f).
Proof. exact (fun_ext (fun x' : _89863 => @lem3462825 _89837 _89861 _89862 _89863 P x f x')). Qed.
Lemma lem3462827 {_89863 : Type'} : (@ex _89863) = (@ex _89863).
Proof. exact (eq_refl (@ex _89863)). Qed.
Lemma lem3462828 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (x : _89837) (f : type1524 _89837 _89861 _89862 _89863) : (term108 _89837 _89861 _89862 _89863 P x f) = (term113 _89837 _89861 _89862 _89863 P x f).
Proof. exact (MK_COMB (@lem3462827 _89863) (@lem3462826 _89837 _89861 _89862 _89863 P x f)). Qed.
Lemma lem3462829 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (x : _89837) (f : type1524 _89837 _89861 _89862 _89863) : (term107 _89837 _89861 _89862 _89863 P x f) = (term113 _89837 _89861 _89862 _89863 P x f).
Proof. exact (TRANS (@lem3462821 _89837 _89861 _89862 _89863 P x f) (@lem3462828 _89837 _89861 _89862 _89863 P x f)). Qed.
Lemma lem3462830 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (x : _89837) (f : type1524 _89837 _89861 _89862 _89863) : (term22 _89837 _89861 _89862 _89863 P x f) = (term114 _89837 _89861 _89862 _89863 P x f).
Proof. exact (fun_ext (fun x' : _89863 => @lem3462819 _89837 _89861 _89862 _89863 P x f x')). Qed.
Lemma lem3462831 {_89863 : Type'} : (@all _89863) = (@all _89863).
Proof. exact (eq_refl (@all _89863)). Qed.
Lemma lem3462832 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (x : _89837) (f : type1524 _89837 _89861 _89862 _89863) : (term23 _89837 _89861 _89862 _89863 P x f) = (term115 _89837 _89861 _89862 _89863 P x f).
Proof. exact (MK_COMB (@lem3462831 _89863) (@lem3462830 _89837 _89861 _89862 _89863 P x f)). Qed.
Lemma lem3462833 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem3462834 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (f : type1524 _89837 _89861 _89862 _89863) (x : _89837) : (term116 _89837 _89861 _89862 _89863 P f x) = (term117 _89837 _89861 _89862 _89863 P f x).
Proof. exact (MK_COMB (@lem3462833) (@lem3462776 _89837 _89861 _89862 _89863 P f x)). Qed.
Lemma lem3462835 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (x : _89837) (f : type1524 _89837 _89861 _89862 _89863) : (term118 _89837 _89861 _89862 _89863 P x f) = (term119 _89837 _89861 _89862 _89863 P x f).
Proof. exact (MK_COMB (@lem3462834 _89837 _89861 _89862 _89863 P f x) (@lem3462832 _89837 _89861 _89862 _89863 P x f)). Qed.
Lemma lem3462836 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem3462837 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (f : type1524 _89837 _89861 _89862 _89863) (x : _89837) : (term120 _89837 _89861 _89862 _89863 P f x) = (term121 _89837 _89861 _89862 _89863 P f x).
Proof. exact (MK_COMB (@lem3462836) (@lem3462779 _89837 _89861 _89862 _89863 P f x)). Qed.
Lemma lem3462838 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (x : _89837) (f : type1524 _89837 _89861 _89862 _89863) : (term122 _89837 _89861 _89862 _89863 P x f) = (term123 _89837 _89861 _89862 _89863 P x f).
Proof. exact (MK_COMB (@lem3462837 _89837 _89861 _89862 _89863 P f x) (@lem3462829 _89837 _89861 _89862 _89863 P x f)). Qed.
Lemma lem3462839 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem3462840 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (x : _89837) (f : type1524 _89837 _89861 _89862 _89863) : (term124 _89837 _89861 _89862 _89863 P x f) = (term125 _89837 _89861 _89862 _89863 P x f).
Proof. exact (MK_COMB (@lem3462839) (@lem3462838 _89837 _89861 _89862 _89863 P x f)). Qed.
Lemma lem3462841 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (x : _89837) (f : type1524 _89837 _89861 _89862 _89863) : (term126 _89837 _89861 _89862 _89863 P x f) = (term127 _89837 _89861 _89862 _89863 P x f).
Proof. exact (MK_COMB (@lem3462840 _89837 _89861 _89862 _89863 P x f) (@lem3462835 _89837 _89861 _89862 _89863 P x f)). Qed.
Lemma lem3462842 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (x : _89837) (f : type1524 _89837 _89861 _89862 _89863) : (term38 _89837 _89861 _89862 _89863 P x f) = (term126 _89837 _89861 _89862 _89863 P x f).
Proof. exact (@lem17646 (term34 _89837 _89861 _89862 _89863 P f x) (term23 _89837 _89861 _89862 _89863 P x f)). Qed.
Lemma lem3462843 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (x : _89837) (f : type1524 _89837 _89861 _89862 _89863) : (term38 _89837 _89861 _89862 _89863 P x f) = (term127 _89837 _89861 _89862 _89863 P x f).
Proof. exact (TRANS (@lem3462842 _89837 _89861 _89862 _89863 P x f) (@lem3462841 _89837 _89861 _89862 _89863 P x f)). Qed.
Lemma lem3463166 {A : Type'} (P : Prop) (Q : A -> Prop) : (term128 A P Q) = (term129 A P Q).
Proof. exact (EQ_MP (@lem18929 A P Q) (@lem18928 A P Q)). Qed.
Lemma lem3463167 {_89863 : Type'} (P : Prop) (Q : _89863 -> Prop) : (term128 _89863 P Q) = (term129 _89863 P Q).
Proof. exact (@lem3463166 _89863 P Q). Qed.
Lemma lem3463168 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (x : _89837) (f : type1524 _89837 _89861 _89862 _89863) : (term130 _89837 _89861 _89862 _89863 P x f) = (term131 _89837 _89861 _89862 _89863 P x f).
Proof. exact (@lem3463167 _89863 (term82 _89837 _89861 _89862 _89863 P f x) (term112 _89837 _89861 _89862 _89863 P x f)). Qed.
Lemma lem3463169 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (x : _89837) (f : type1524 _89837 _89861 _89862 _89863) (x' : _89863) : (term132 _89837 _89861 _89862 _89863 P x f x') = (term104 _89837 _89861 _89862 _89863 P x f x').
Proof. exact (eq_refl (term132 _89837 _89861 _89862 _89863 P x f x')). Qed.
Lemma lem3463170 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (x : _89837) (f : type1524 _89837 _89861 _89862 _89863) : (term133 _89837 _89861 _89862 _89863 P x f) = (term112 _89837 _89861 _89862 _89863 P x f).
Proof. exact (fun_ext (fun x' : _89863 => @lem3463169 _89837 _89861 _89862 _89863 P x f x')). Qed.
Lemma lem3463171 {_89863 : Type'} : (@ex _89863) = (@ex _89863).
Proof. exact (eq_refl (@ex _89863)). Qed.
Lemma lem3463172 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (x : _89837) (f : type1524 _89837 _89861 _89862 _89863) : (term134 _89837 _89861 _89862 _89863 P x f) = (term113 _89837 _89861 _89862 _89863 P x f).
Proof. exact (MK_COMB (@lem3463171 _89863) (@lem3463170 _89837 _89861 _89862 _89863 P x f)). Qed.
Lemma lem3463173 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (f : type1524 _89837 _89861 _89862 _89863) (x : _89837) : (term121 _89837 _89861 _89862 _89863 P f x) = (term121 _89837 _89861 _89862 _89863 P f x).
Proof. exact (eq_refl (term121 _89837 _89861 _89862 _89863 P f x)). Qed.
Lemma lem3463174 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (x : _89837) (f : type1524 _89837 _89861 _89862 _89863) : (term130 _89837 _89861 _89862 _89863 P x f) = (term123 _89837 _89861 _89862 _89863 P x f).
Proof. exact (MK_COMB (@lem3463173 _89837 _89861 _89862 _89863 P f x) (@lem3463172 _89837 _89861 _89862 _89863 P x f)). Qed.
Lemma lem3463175 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem3463176 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (x : _89837) (f : type1524 _89837 _89861 _89862 _89863) : (term135 _89837 _89861 _89862 _89863 P x f) = (term136 _89837 _89861 _89862 _89863 P x f).
Proof. exact (MK_COMB (@lem3463175) (@lem3463174 _89837 _89861 _89862 _89863 P x f)). Qed.
Lemma lem3463177 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (x : _89837) (f : type1524 _89837 _89861 _89862 _89863) (x' : _89863) : (term132 _89837 _89861 _89862 _89863 P x f x') = (term104 _89837 _89861 _89862 _89863 P x f x').
Proof. exact (eq_refl (term132 _89837 _89861 _89862 _89863 P x f x')). Qed.
Lemma lem3463178 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (f : type1524 _89837 _89861 _89862 _89863) (x : _89837) : (term121 _89837 _89861 _89862 _89863 P f x) = (term121 _89837 _89861 _89862 _89863 P f x).
Proof. exact (eq_refl (term121 _89837 _89861 _89862 _89863 P f x)). Qed.
Lemma lem3463179 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (x : _89837) (f : type1524 _89837 _89861 _89862 _89863) (x' : _89863) : (term137 _89837 _89861 _89862 _89863 P x f x') = (term138 _89837 _89861 _89862 _89863 P x f x').
Proof. exact (MK_COMB (@lem3463178 _89837 _89861 _89862 _89863 P f x) (@lem3463177 _89837 _89861 _89862 _89863 P x f x')). Qed.
Lemma lem3463180 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (x : _89837) (f : type1524 _89837 _89861 _89862 _89863) : (term139 _89837 _89861 _89862 _89863 P x f) = (term140 _89837 _89861 _89862 _89863 P x f).
Proof. exact (fun_ext (fun x' : _89863 => @lem3463179 _89837 _89861 _89862 _89863 P x f x')). Qed.
Lemma lem3463181 {_89863 : Type'} : (@ex _89863) = (@ex _89863).
Proof. exact (eq_refl (@ex _89863)). Qed.
Lemma lem3463182 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (x : _89837) (f : type1524 _89837 _89861 _89862 _89863) : (term131 _89837 _89861 _89862 _89863 P x f) = (term141 _89837 _89861 _89862 _89863 P x f).
Proof. exact (MK_COMB (@lem3463181 _89863) (@lem3463180 _89837 _89861 _89862 _89863 P x f)). Qed.
Lemma lem3463183 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (x : _89837) (f : type1524 _89837 _89861 _89862 _89863) : ((term130 _89837 _89861 _89862 _89863 P x f) = (term131 _89837 _89861 _89862 _89863 P x f)) = ((term123 _89837 _89861 _89862 _89863 P x f) = (term141 _89837 _89861 _89862 _89863 P x f)).
Proof. exact (MK_COMB (@lem3463176 _89837 _89861 _89862 _89863 P x f) (@lem3463182 _89837 _89861 _89862 _89863 P x f)). Qed.
Lemma lem3463184 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (x : _89837) (f : type1524 _89837 _89861 _89862 _89863) : (term123 _89837 _89861 _89862 _89863 P x f) = (term141 _89837 _89861 _89862 _89863 P x f).
Proof. exact (EQ_MP (@lem3463183 _89837 _89861 _89862 _89863 P x f) (@lem3463168 _89837 _89861 _89862 _89863 P x f)). Qed.
Lemma lem3463186 {A : Type'} (P : Prop) (Q : A -> Prop) : (term128 A P Q) = (term129 A P Q).
Proof. exact (EQ_MP (@lem18929 A P Q) (@lem18928 A P Q)). Qed.
Lemma lem3463187 {_89862 : Type'} (P : Prop) (Q : _89862 -> Prop) : (term128 _89862 P Q) = (term129 _89862 P Q).
Proof. exact (@lem3463186 _89862 P Q). Qed.
Lemma lem3463188 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (x : _89837) (f : type1524 _89837 _89861 _89862 _89863) (x' : _89863) : (term142 _89837 _89861 _89862 _89863 P x f x') = (term143 _89837 _89861 _89862 _89863 P x f x').
Proof. exact (@lem3463187 _89862 (term82 _89837 _89861 _89862 _89863 P f x) (term103 _89837 _89861 _89862 _89863 P x f x')). Qed.
Lemma lem3463189 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (x : _89837) (f : type1524 _89837 _89861 _89862 _89863) (x' : _89863) (y : _89862) : (term144 _89837 _89861 _89862 _89863 P x f x' y) = (term95 _89837 _89861 _89862 _89863 P x f x' y).
Proof. exact (eq_refl (term144 _89837 _89861 _89862 _89863 P x f x' y)). Qed.
Lemma lem3463190 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (x : _89837) (f : type1524 _89837 _89861 _89862 _89863) (x' : _89863) : (term145 _89837 _89861 _89862 _89863 P x f x') = (term103 _89837 _89861 _89862 _89863 P x f x').
Proof. exact (fun_ext (fun y : _89862 => @lem3463189 _89837 _89861 _89862 _89863 P x f x' y)). Qed.
Lemma lem3463191 {_89862 : Type'} : (@ex _89862) = (@ex _89862).
Proof. exact (eq_refl (@ex _89862)). Qed.
Lemma lem3463192 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (x : _89837) (f : type1524 _89837 _89861 _89862 _89863) (x' : _89863) : (term146 _89837 _89861 _89862 _89863 P x f x') = (term104 _89837 _89861 _89862 _89863 P x f x').
Proof. exact (MK_COMB (@lem3463191 _89862) (@lem3463190 _89837 _89861 _89862 _89863 P x f x')). Qed.
Lemma lem3463193 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (f : type1524 _89837 _89861 _89862 _89863) (x : _89837) : (term121 _89837 _89861 _89862 _89863 P f x) = (term121 _89837 _89861 _89862 _89863 P f x).
Proof. exact (eq_refl (term121 _89837 _89861 _89862 _89863 P f x)). Qed.
Lemma lem3463194 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (x : _89837) (f : type1524 _89837 _89861 _89862 _89863) (x' : _89863) : (term142 _89837 _89861 _89862 _89863 P x f x') = (term138 _89837 _89861 _89862 _89863 P x f x').
Proof. exact (MK_COMB (@lem3463193 _89837 _89861 _89862 _89863 P f x) (@lem3463192 _89837 _89861 _89862 _89863 P x f x')). Qed.
Lemma lem3463195 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem3463196 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (x : _89837) (f : type1524 _89837 _89861 _89862 _89863) (x' : _89863) : (term147 _89837 _89861 _89862 _89863 P x f x') = (term148 _89837 _89861 _89862 _89863 P x f x').
Proof. exact (MK_COMB (@lem3463195) (@lem3463194 _89837 _89861 _89862 _89863 P x f x')). Qed.
Lemma lem3463197 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (x : _89837) (f : type1524 _89837 _89861 _89862 _89863) (x' : _89863) (y : _89862) : (term144 _89837 _89861 _89862 _89863 P x f x' y) = (term95 _89837 _89861 _89862 _89863 P x f x' y).
Proof. exact (eq_refl (term144 _89837 _89861 _89862 _89863 P x f x' y)). Qed.
Lemma lem3463198 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (f : type1524 _89837 _89861 _89862 _89863) (x : _89837) : (term121 _89837 _89861 _89862 _89863 P f x) = (term121 _89837 _89861 _89862 _89863 P f x).
Proof. exact (eq_refl (term121 _89837 _89861 _89862 _89863 P f x)). Qed.
Lemma lem3463199 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (x : _89837) (f : type1524 _89837 _89861 _89862 _89863) (x' : _89863) (y : _89862) : (term149 _89837 _89861 _89862 _89863 P x f x' y) = (term150 _89837 _89861 _89862 _89863 P x f x' y).
Proof. exact (MK_COMB (@lem3463198 _89837 _89861 _89862 _89863 P f x) (@lem3463197 _89837 _89861 _89862 _89863 P x f x' y)). Qed.
Lemma lem3463200 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (x : _89837) (f : type1524 _89837 _89861 _89862 _89863) (x' : _89863) : (term151 _89837 _89861 _89862 _89863 P x f x') = (term152 _89837 _89861 _89862 _89863 P x f x').
Proof. exact (fun_ext (fun y : _89862 => @lem3463199 _89837 _89861 _89862 _89863 P x f x' y)). Qed.
Lemma lem3463201 {_89862 : Type'} : (@ex _89862) = (@ex _89862).
Proof. exact (eq_refl (@ex _89862)). Qed.
Lemma lem3463202 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (x : _89837) (f : type1524 _89837 _89861 _89862 _89863) (x' : _89863) : (term143 _89837 _89861 _89862 _89863 P x f x') = (term153 _89837 _89861 _89862 _89863 P x f x').
Proof. exact (MK_COMB (@lem3463201 _89862) (@lem3463200 _89837 _89861 _89862 _89863 P x f x')). Qed.
Lemma lem3463203 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (x : _89837) (f : type1524 _89837 _89861 _89862 _89863) (x' : _89863) : ((term142 _89837 _89861 _89862 _89863 P x f x') = (term143 _89837 _89861 _89862 _89863 P x f x')) = ((term138 _89837 _89861 _89862 _89863 P x f x') = (term153 _89837 _89861 _89862 _89863 P x f x')).
Proof. exact (MK_COMB (@lem3463196 _89837 _89861 _89862 _89863 P x f x') (@lem3463202 _89837 _89861 _89862 _89863 P x f x')). Qed.
Lemma lem3463204 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (x : _89837) (f : type1524 _89837 _89861 _89862 _89863) (x' : _89863) : (term138 _89837 _89861 _89862 _89863 P x f x') = (term153 _89837 _89861 _89862 _89863 P x f x').
Proof. exact (EQ_MP (@lem3463203 _89837 _89861 _89862 _89863 P x f x') (@lem3463188 _89837 _89861 _89862 _89863 P x f x')). Qed.
Lemma lem3463206 {A : Type'} (P : Prop) (Q : A -> Prop) : (term128 A P Q) = (term129 A P Q).
Proof. exact (EQ_MP (@lem18929 A P Q) (@lem18928 A P Q)). Qed.
Lemma lem3463207 {_89861 : Type'} (P : Prop) (Q : _89861 -> Prop) : (term128 _89861 P Q) = (term129 _89861 P Q).
Proof. exact (@lem3463206 _89861 P Q). Qed.
Lemma lem3463208 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (x : _89837) (f : type1524 _89837 _89861 _89862 _89863) (x' : _89863) (y : _89862) : (term154 _89837 _89861 _89862 _89863 P x f x' y) = (term155 _89837 _89861 _89862 _89863 P x f x' y).
Proof. exact (@lem3463207 _89861 (term82 _89837 _89861 _89862 _89863 P f x) (term94 _89837 _89861 _89862 _89863 P x f x' y)). Qed.
Lemma lem3463209 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (x : _89837) (f : type1524 _89837 _89861 _89862 _89863) (x' : _89863) (y : _89862) (z : _89861) : (term156 _89837 _89861 _89862 _89863 P x f x' y z) = (term84 _89837 _89861 _89862 _89863 P x f x' y z).
Proof. exact (eq_refl (term156 _89837 _89861 _89862 _89863 P x f x' y z)). Qed.
Lemma lem3463210 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (x : _89837) (f : type1524 _89837 _89861 _89862 _89863) (x' : _89863) (y : _89862) : (term157 _89837 _89861 _89862 _89863 P x f x' y) = (term94 _89837 _89861 _89862 _89863 P x f x' y).
Proof. exact (fun_ext (fun z : _89861 => @lem3463209 _89837 _89861 _89862 _89863 P x f x' y z)). Qed.
Lemma lem3463211 {_89861 : Type'} : (@ex _89861) = (@ex _89861).
Proof. exact (eq_refl (@ex _89861)). Qed.
Lemma lem3463212 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (x : _89837) (f : type1524 _89837 _89861 _89862 _89863) (x' : _89863) (y : _89862) : (term158 _89837 _89861 _89862 _89863 P x f x' y) = (term95 _89837 _89861 _89862 _89863 P x f x' y).
Proof. exact (MK_COMB (@lem3463211 _89861) (@lem3463210 _89837 _89861 _89862 _89863 P x f x' y)). Qed.
Lemma lem3463213 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (f : type1524 _89837 _89861 _89862 _89863) (x : _89837) : (term121 _89837 _89861 _89862 _89863 P f x) = (term121 _89837 _89861 _89862 _89863 P f x).
Proof. exact (eq_refl (term121 _89837 _89861 _89862 _89863 P f x)). Qed.
Lemma lem3463214 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (x : _89837) (f : type1524 _89837 _89861 _89862 _89863) (x' : _89863) (y : _89862) : (term154 _89837 _89861 _89862 _89863 P x f x' y) = (term150 _89837 _89861 _89862 _89863 P x f x' y).
Proof. exact (MK_COMB (@lem3463213 _89837 _89861 _89862 _89863 P f x) (@lem3463212 _89837 _89861 _89862 _89863 P x f x' y)). Qed.
Lemma lem3463215 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem3463216 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (x : _89837) (f : type1524 _89837 _89861 _89862 _89863) (x' : _89863) (y : _89862) : (term159 _89837 _89861 _89862 _89863 P x f x' y) = (term160 _89837 _89861 _89862 _89863 P x f x' y).
Proof. exact (MK_COMB (@lem3463215) (@lem3463214 _89837 _89861 _89862 _89863 P x f x' y)). Qed.
Lemma lem3463217 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (x : _89837) (f : type1524 _89837 _89861 _89862 _89863) (x' : _89863) (y : _89862) (z : _89861) : (term156 _89837 _89861 _89862 _89863 P x f x' y z) = (term84 _89837 _89861 _89862 _89863 P x f x' y z).
Proof. exact (eq_refl (term156 _89837 _89861 _89862 _89863 P x f x' y z)). Qed.
Lemma lem3463218 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (f : type1524 _89837 _89861 _89862 _89863) (x : _89837) : (term121 _89837 _89861 _89862 _89863 P f x) = (term121 _89837 _89861 _89862 _89863 P f x).
Proof. exact (eq_refl (term121 _89837 _89861 _89862 _89863 P f x)). Qed.
Lemma lem3463219 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (x : _89837) (f : type1524 _89837 _89861 _89862 _89863) (x' : _89863) (y : _89862) (z : _89861) : (term161 _89837 _89861 _89862 _89863 P x f x' y z) = (term162 _89837 _89861 _89862 _89863 P x f x' y z).
Proof. exact (MK_COMB (@lem3463218 _89837 _89861 _89862 _89863 P f x) (@lem3463217 _89837 _89861 _89862 _89863 P x f x' y z)). Qed.
Lemma lem3463220 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (x : _89837) (f : type1524 _89837 _89861 _89862 _89863) (x' : _89863) (y : _89862) : (term163 _89837 _89861 _89862 _89863 P x f x' y) = (term164 _89837 _89861 _89862 _89863 P x f x' y).
Proof. exact (fun_ext (fun z : _89861 => @lem3463219 _89837 _89861 _89862 _89863 P x f x' y z)). Qed.
Lemma lem3463221 {_89861 : Type'} : (@ex _89861) = (@ex _89861).
Proof. exact (eq_refl (@ex _89861)). Qed.
Lemma lem3463222 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (x : _89837) (f : type1524 _89837 _89861 _89862 _89863) (x' : _89863) (y : _89862) : (term155 _89837 _89861 _89862 _89863 P x f x' y) = (term165 _89837 _89861 _89862 _89863 P x f x' y).
Proof. exact (MK_COMB (@lem3463221 _89861) (@lem3463220 _89837 _89861 _89862 _89863 P x f x' y)). Qed.
Lemma lem3463223 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (x : _89837) (f : type1524 _89837 _89861 _89862 _89863) (x' : _89863) (y : _89862) : ((term154 _89837 _89861 _89862 _89863 P x f x' y) = (term155 _89837 _89861 _89862 _89863 P x f x' y)) = ((term150 _89837 _89861 _89862 _89863 P x f x' y) = (term165 _89837 _89861 _89862 _89863 P x f x' y)).
Proof. exact (MK_COMB (@lem3463216 _89837 _89861 _89862 _89863 P x f x' y) (@lem3463222 _89837 _89861 _89862 _89863 P x f x' y)). Qed.
Lemma lem3463224 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (x : _89837) (f : type1524 _89837 _89861 _89862 _89863) (x' : _89863) (y : _89862) : (term150 _89837 _89861 _89862 _89863 P x f x' y) = (term165 _89837 _89861 _89862 _89863 P x f x' y).
Proof. exact (EQ_MP (@lem3463223 _89837 _89861 _89862 _89863 P x f x' y) (@lem3463208 _89837 _89861 _89862 _89863 P x f x' y)). Qed.
Lemma lem3463225 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (x : _89837) (f : type1524 _89837 _89861 _89862 _89863) (x' : _89863) : (term152 _89837 _89861 _89862 _89863 P x f x') = (term166 _89837 _89861 _89862 _89863 P x f x').
Proof. exact (fun_ext (fun y : _89862 => @lem3463224 _89837 _89861 _89862 _89863 P x f x' y)). Qed.
Lemma lem3463226 {_89862 : Type'} : (@ex _89862) = (@ex _89862).
Proof. exact (eq_refl (@ex _89862)). Qed.
Lemma lem3463227 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (x : _89837) (f : type1524 _89837 _89861 _89862 _89863) (x' : _89863) : (term153 _89837 _89861 _89862 _89863 P x f x') = (term167 _89837 _89861 _89862 _89863 P x f x').
Proof. exact (MK_COMB (@lem3463226 _89862) (@lem3463225 _89837 _89861 _89862 _89863 P x f x')). Qed.
Lemma lem3463228 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (x : _89837) (f : type1524 _89837 _89861 _89862 _89863) (x' : _89863) : (term138 _89837 _89861 _89862 _89863 P x f x') = (term167 _89837 _89861 _89862 _89863 P x f x').
Proof. exact (TRANS (@lem3463204 _89837 _89861 _89862 _89863 P x f x') (@lem3463227 _89837 _89861 _89862 _89863 P x f x')). Qed.
Lemma lem3463229 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (x : _89837) (f : type1524 _89837 _89861 _89862 _89863) : (term140 _89837 _89861 _89862 _89863 P x f) = (term168 _89837 _89861 _89862 _89863 P x f).
Proof. exact (fun_ext (fun x' : _89863 => @lem3463228 _89837 _89861 _89862 _89863 P x f x')). Qed.
Lemma lem3463230 {_89863 : Type'} : (@ex _89863) = (@ex _89863).
Proof. exact (eq_refl (@ex _89863)). Qed.
Lemma lem3463231 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (x : _89837) (f : type1524 _89837 _89861 _89862 _89863) : (term141 _89837 _89861 _89862 _89863 P x f) = (term169 _89837 _89861 _89862 _89863 P x f).
Proof. exact (MK_COMB (@lem3463230 _89863) (@lem3463229 _89837 _89861 _89862 _89863 P x f)). Qed.
Lemma lem3463232 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (x : _89837) (f : type1524 _89837 _89861 _89862 _89863) : (term123 _89837 _89861 _89862 _89863 P x f) = (term169 _89837 _89861 _89862 _89863 P x f).
Proof. exact (TRANS (@lem3463184 _89837 _89861 _89862 _89863 P x f) (@lem3463231 _89837 _89861 _89862 _89863 P x f)). Qed.
Lemma lem3463233 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem3463234 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (x : _89837) (f : type1524 _89837 _89861 _89862 _89863) : (term125 _89837 _89861 _89862 _89863 P x f) = (term170 _89837 _89861 _89862 _89863 P x f).
Proof. exact (MK_COMB (@lem3463233) (@lem3463232 _89837 _89861 _89862 _89863 P x f)). Qed.
Lemma lem3463236 {A : Type'} (P : A -> Prop) (Q : Prop) : (term171 A P Q) = (term172 A P Q).
Proof. exact (EQ_MP (@lem18923 A P Q) (@lem18922 A P Q)). Qed.
Lemma lem3463237 {_89863 : Type'} (P : _89863 -> Prop) (Q : Prop) : (term171 _89863 P Q) = (term172 _89863 P Q).
Proof. exact (@lem3463236 _89863 P Q). Qed.
Lemma lem3463238 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (f : type1524 _89837 _89861 _89862 _89863) (x : _89837) (t : _89837 -> Prop) : (term173 _89837 _89861 _89862 _89863 P f x t) = (term174 _89837 _89861 _89862 _89863 P f x t).
Proof. exact (@lem3463237 _89863 (term29 _89837 _89861 _89862 _89863 P t f) (term64 _89837 x t)). Qed.
Lemma lem3463239 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (t : _89837 -> Prop) (f : type1524 _89837 _89861 _89862 _89863) (x : _89863) : (term59 _89837 _89861 _89862 _89863 P t f x) = (term28 _89837 _89861 _89862 _89863 P t f x).
Proof. exact (eq_refl (term59 _89837 _89861 _89862 _89863 P t f x)). Qed.
Lemma lem3463240 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (t : _89837 -> Prop) (f : type1524 _89837 _89861 _89862 _89863) : (term175 _89837 _89861 _89862 _89863 P t f) = (term29 _89837 _89861 _89862 _89863 P t f).
Proof. exact (fun_ext (fun x : _89863 => @lem3463239 _89837 _89861 _89862 _89863 P t f x)). Qed.
Lemma lem3463241 {_89863 : Type'} : (@ex _89863) = (@ex _89863).
Proof. exact (eq_refl (@ex _89863)). Qed.
Lemma lem3463242 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (t : _89837 -> Prop) (f : type1524 _89837 _89861 _89862 _89863) : (term176 _89837 _89861 _89862 _89863 P t f) = (term30 _89837 _89861 _89862 _89863 P t f).
Proof. exact (MK_COMB (@lem3463241 _89863) (@lem3463240 _89837 _89861 _89862 _89863 P t f)). Qed.
Lemma lem3463243 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem3463244 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (t : _89837 -> Prop) (f : type1524 _89837 _89861 _89862 _89863) : (term177 _89837 _89861 _89862 _89863 P t f) = (term65 _89837 _89861 _89862 _89863 P t f).
Proof. exact (MK_COMB (@lem3463243) (@lem3463242 _89837 _89861 _89862 _89863 P t f)). Qed.
Lemma lem3463245 {_89837 : Type'} (x : _89837) (t : _89837 -> Prop) : (term64 _89837 x t) = (term64 _89837 x t).
Proof. exact (eq_refl (term64 _89837 x t)). Qed.
Lemma lem3463246 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (f : type1524 _89837 _89861 _89862 _89863) (x : _89837) (t : _89837 -> Prop) : (term173 _89837 _89861 _89862 _89863 P f x t) = (term66 _89837 _89861 _89862 _89863 P f x t).
Proof. exact (MK_COMB (@lem3463244 _89837 _89861 _89862 _89863 P t f) (@lem3463245 _89837 x t)). Qed.
Lemma lem3463247 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem3463248 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (f : type1524 _89837 _89861 _89862 _89863) (x : _89837) (t : _89837 -> Prop) : (term178 _89837 _89861 _89862 _89863 P f x t) = (term179 _89837 _89861 _89862 _89863 P f x t).
Proof. exact (MK_COMB (@lem3463247) (@lem3463246 _89837 _89861 _89862 _89863 P f x t)). Qed.
Lemma lem3463249 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (t : _89837 -> Prop) (f : type1524 _89837 _89861 _89862 _89863) (x : _89863) : (term59 _89837 _89861 _89862 _89863 P t f x) = (term28 _89837 _89861 _89862 _89863 P t f x).
Proof. exact (eq_refl (term59 _89837 _89861 _89862 _89863 P t f x)). Qed.
Lemma lem3463250 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem3463251 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (t : _89837 -> Prop) (f : type1524 _89837 _89861 _89862 _89863) (x : _89863) : (term180 _89837 _89861 _89862 _89863 P t f x) = (term181 _89837 _89861 _89862 _89863 P t f x).
Proof. exact (MK_COMB (@lem3463250) (@lem3463249 _89837 _89861 _89862 _89863 P t f x)). Qed.
Lemma lem3463252 {_89837 : Type'} (x : _89837) (t : _89837 -> Prop) : (term64 _89837 x t) = (term64 _89837 x t).
Proof. exact (eq_refl (term64 _89837 x t)). Qed.
Lemma lem3463253 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (f : type1524 _89837 _89861 _89862 _89863) (x : _89863) (x' : _89837) (t : _89837 -> Prop) : (term182 _89837 _89861 _89862 _89863 P f x x' t) = (term183 _89837 _89861 _89862 _89863 P f x x' t).
Proof. exact (MK_COMB (@lem3463251 _89837 _89861 _89862 _89863 P t f x) (@lem3463252 _89837 x' t)). Qed.
Lemma lem3463254 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (f : type1524 _89837 _89861 _89862 _89863) (x : _89837) (t : _89837 -> Prop) : (term184 _89837 _89861 _89862 _89863 P f x t) = (term185 _89837 _89861 _89862 _89863 P f x t).
Proof. exact (fun_ext (fun x' : _89863 => @lem3463253 _89837 _89861 _89862 _89863 P f x' x t)). Qed.
Lemma lem3463255 {_89863 : Type'} : (@ex _89863) = (@ex _89863).
Proof. exact (eq_refl (@ex _89863)). Qed.
Lemma lem3463256 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (f : type1524 _89837 _89861 _89862 _89863) (x : _89837) (t : _89837 -> Prop) : (term174 _89837 _89861 _89862 _89863 P f x t) = (term186 _89837 _89861 _89862 _89863 P f x t).
Proof. exact (MK_COMB (@lem3463255 _89863) (@lem3463254 _89837 _89861 _89862 _89863 P f x t)). Qed.
Lemma lem3463257 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (f : type1524 _89837 _89861 _89862 _89863) (x : _89837) (t : _89837 -> Prop) : ((term173 _89837 _89861 _89862 _89863 P f x t) = (term174 _89837 _89861 _89862 _89863 P f x t)) = ((term66 _89837 _89861 _89862 _89863 P f x t) = (term186 _89837 _89861 _89862 _89863 P f x t)).
Proof. exact (MK_COMB (@lem3463248 _89837 _89861 _89862 _89863 P f x t) (@lem3463256 _89837 _89861 _89862 _89863 P f x t)). Qed.
Lemma lem3463258 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (f : type1524 _89837 _89861 _89862 _89863) (x : _89837) (t : _89837 -> Prop) : (term66 _89837 _89861 _89862 _89863 P f x t) = (term186 _89837 _89861 _89862 _89863 P f x t).
Proof. exact (EQ_MP (@lem3463257 _89837 _89861 _89862 _89863 P f x t) (@lem3463238 _89837 _89861 _89862 _89863 P f x t)). Qed.
Lemma lem3463260 {A : Type'} (P : A -> Prop) (Q : Prop) : (term171 A P Q) = (term172 A P Q).
Proof. exact (EQ_MP (@lem18923 A P Q) (@lem18922 A P Q)). Qed.
Lemma lem3463261 {_89862 : Type'} (P : _89862 -> Prop) (Q : Prop) : (term171 _89862 P Q) = (term172 _89862 P Q).
Proof. exact (@lem3463260 _89862 P Q). Qed.
Lemma lem3463262 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (f : type1524 _89837 _89861 _89862 _89863) (x : _89863) (x' : _89837) (t : _89837 -> Prop) : (term187 _89837 _89861 _89862 _89863 P f x x' t) = (term188 _89837 _89861 _89862 _89863 P f x x' t).
Proof. exact (@lem3463261 _89862 (term27 _89837 _89861 _89862 _89863 P t f x) (term64 _89837 x' t)). Qed.
Lemma lem3463263 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (t : _89837 -> Prop) (f : type1524 _89837 _89861 _89862 _89863) (x : _89863) (y : _89862) : (term52 _89837 _89861 _89862 _89863 P t f x y) = (term26 _89837 _89861 _89862 _89863 P t f x y).
Proof. exact (eq_refl (term52 _89837 _89861 _89862 _89863 P t f x y)). Qed.
Lemma lem3463264 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (t : _89837 -> Prop) (f : type1524 _89837 _89861 _89862 _89863) (x : _89863) : (term189 _89837 _89861 _89862 _89863 P t f x) = (term27 _89837 _89861 _89862 _89863 P t f x).
Proof. exact (fun_ext (fun y : _89862 => @lem3463263 _89837 _89861 _89862 _89863 P t f x y)). Qed.
Lemma lem3463265 {_89862 : Type'} : (@ex _89862) = (@ex _89862).
Proof. exact (eq_refl (@ex _89862)). Qed.
Lemma lem3463266 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (t : _89837 -> Prop) (f : type1524 _89837 _89861 _89862 _89863) (x : _89863) : (term190 _89837 _89861 _89862 _89863 P t f x) = (term28 _89837 _89861 _89862 _89863 P t f x).
Proof. exact (MK_COMB (@lem3463265 _89862) (@lem3463264 _89837 _89861 _89862 _89863 P t f x)). Qed.
Lemma lem3463267 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem3463268 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (t : _89837 -> Prop) (f : type1524 _89837 _89861 _89862 _89863) (x : _89863) : (term191 _89837 _89861 _89862 _89863 P t f x) = (term181 _89837 _89861 _89862 _89863 P t f x).
Proof. exact (MK_COMB (@lem3463267) (@lem3463266 _89837 _89861 _89862 _89863 P t f x)). Qed.
Lemma lem3463269 {_89837 : Type'} (x : _89837) (t : _89837 -> Prop) : (term64 _89837 x t) = (term64 _89837 x t).
Proof. exact (eq_refl (term64 _89837 x t)). Qed.
Lemma lem3463270 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (f : type1524 _89837 _89861 _89862 _89863) (x : _89863) (x' : _89837) (t : _89837 -> Prop) : (term187 _89837 _89861 _89862 _89863 P f x x' t) = (term183 _89837 _89861 _89862 _89863 P f x x' t).
Proof. exact (MK_COMB (@lem3463268 _89837 _89861 _89862 _89863 P t f x) (@lem3463269 _89837 x' t)). Qed.
Lemma lem3463271 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem3463272 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (f : type1524 _89837 _89861 _89862 _89863) (x : _89863) (x' : _89837) (t : _89837 -> Prop) : (term192 _89837 _89861 _89862 _89863 P f x x' t) = (term193 _89837 _89861 _89862 _89863 P f x x' t).
Proof. exact (MK_COMB (@lem3463271) (@lem3463270 _89837 _89861 _89862 _89863 P f x x' t)). Qed.
Lemma lem3463273 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (t : _89837 -> Prop) (f : type1524 _89837 _89861 _89862 _89863) (x : _89863) (y : _89862) : (term52 _89837 _89861 _89862 _89863 P t f x y) = (term26 _89837 _89861 _89862 _89863 P t f x y).
Proof. exact (eq_refl (term52 _89837 _89861 _89862 _89863 P t f x y)). Qed.
Lemma lem3463274 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem3463275 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (t : _89837 -> Prop) (f : type1524 _89837 _89861 _89862 _89863) (x : _89863) (y : _89862) : (term194 _89837 _89861 _89862 _89863 P t f x y) = (term195 _89837 _89861 _89862 _89863 P t f x y).
Proof. exact (MK_COMB (@lem3463274) (@lem3463273 _89837 _89861 _89862 _89863 P t f x y)). Qed.
Lemma lem3463276 {_89837 : Type'} (x : _89837) (t : _89837 -> Prop) : (term64 _89837 x t) = (term64 _89837 x t).
Proof. exact (eq_refl (term64 _89837 x t)). Qed.
Lemma lem3463277 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (f : type1524 _89837 _89861 _89862 _89863) (x : _89863) (y : _89862) (x' : _89837) (t : _89837 -> Prop) : (term196 _89837 _89861 _89862 _89863 P f x y x' t) = (term197 _89837 _89861 _89862 _89863 P f x y x' t).
Proof. exact (MK_COMB (@lem3463275 _89837 _89861 _89862 _89863 P t f x y) (@lem3463276 _89837 x' t)). Qed.
Lemma lem3463278 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (f : type1524 _89837 _89861 _89862 _89863) (x : _89863) (x' : _89837) (t : _89837 -> Prop) : (term198 _89837 _89861 _89862 _89863 P f x x' t) = (term199 _89837 _89861 _89862 _89863 P f x x' t).
Proof. exact (fun_ext (fun y : _89862 => @lem3463277 _89837 _89861 _89862 _89863 P f x y x' t)). Qed.
Lemma lem3463279 {_89862 : Type'} : (@ex _89862) = (@ex _89862).
Proof. exact (eq_refl (@ex _89862)). Qed.
Lemma lem3463280 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (f : type1524 _89837 _89861 _89862 _89863) (x : _89863) (x' : _89837) (t : _89837 -> Prop) : (term188 _89837 _89861 _89862 _89863 P f x x' t) = (term200 _89837 _89861 _89862 _89863 P f x x' t).
Proof. exact (MK_COMB (@lem3463279 _89862) (@lem3463278 _89837 _89861 _89862 _89863 P f x x' t)). Qed.
Lemma lem3463281 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (f : type1524 _89837 _89861 _89862 _89863) (x : _89863) (x' : _89837) (t : _89837 -> Prop) : ((term187 _89837 _89861 _89862 _89863 P f x x' t) = (term188 _89837 _89861 _89862 _89863 P f x x' t)) = ((term183 _89837 _89861 _89862 _89863 P f x x' t) = (term200 _89837 _89861 _89862 _89863 P f x x' t)).
Proof. exact (MK_COMB (@lem3463272 _89837 _89861 _89862 _89863 P f x x' t) (@lem3463280 _89837 _89861 _89862 _89863 P f x x' t)). Qed.
Lemma lem3463282 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (f : type1524 _89837 _89861 _89862 _89863) (x : _89863) (x' : _89837) (t : _89837 -> Prop) : (term183 _89837 _89861 _89862 _89863 P f x x' t) = (term200 _89837 _89861 _89862 _89863 P f x x' t).
Proof. exact (EQ_MP (@lem3463281 _89837 _89861 _89862 _89863 P f x x' t) (@lem3463262 _89837 _89861 _89862 _89863 P f x x' t)). Qed.
Lemma lem3463284 {A : Type'} (P : A -> Prop) (Q : Prop) : (term171 A P Q) = (term172 A P Q).
Proof. exact (EQ_MP (@lem18923 A P Q) (@lem18922 A P Q)). Qed.
Lemma lem3463285 {_89861 : Type'} (P : _89861 -> Prop) (Q : Prop) : (term171 _89861 P Q) = (term172 _89861 P Q).
Proof. exact (@lem3463284 _89861 P Q). Qed.
Lemma lem3463286 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (f : type1524 _89837 _89861 _89862 _89863) (x : _89863) (y : _89862) (x' : _89837) (t : _89837 -> Prop) : (term201 _89837 _89861 _89862 _89863 P f x y x' t) = (term202 _89837 _89861 _89862 _89863 P f x y x' t).
Proof. exact (@lem3463285 _89861 (term25 _89837 _89861 _89862 _89863 P t f x y) (term64 _89837 x' t)). Qed.
Lemma lem3463287 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (t : _89837 -> Prop) (f : type1524 _89837 _89861 _89862 _89863) (x : _89863) (y : _89862) (z : _89861) : (term45 _89837 _89861 _89862 _89863 P t f x y z) = (term24 _89837 _89861 _89862 _89863 P t f x y z).
Proof. exact (eq_refl (term45 _89837 _89861 _89862 _89863 P t f x y z)). Qed.
Lemma lem3463288 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (t : _89837 -> Prop) (f : type1524 _89837 _89861 _89862 _89863) (x : _89863) (y : _89862) : (term203 _89837 _89861 _89862 _89863 P t f x y) = (term25 _89837 _89861 _89862 _89863 P t f x y).
Proof. exact (fun_ext (fun z : _89861 => @lem3463287 _89837 _89861 _89862 _89863 P t f x y z)). Qed.
Lemma lem3463289 {_89861 : Type'} : (@ex _89861) = (@ex _89861).
Proof. exact (eq_refl (@ex _89861)). Qed.
Lemma lem3463290 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (t : _89837 -> Prop) (f : type1524 _89837 _89861 _89862 _89863) (x : _89863) (y : _89862) : (term204 _89837 _89861 _89862 _89863 P t f x y) = (term26 _89837 _89861 _89862 _89863 P t f x y).
Proof. exact (MK_COMB (@lem3463289 _89861) (@lem3463288 _89837 _89861 _89862 _89863 P t f x y)). Qed.
Lemma lem3463291 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem3463292 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (t : _89837 -> Prop) (f : type1524 _89837 _89861 _89862 _89863) (x : _89863) (y : _89862) : (term205 _89837 _89861 _89862 _89863 P t f x y) = (term195 _89837 _89861 _89862 _89863 P t f x y).
Proof. exact (MK_COMB (@lem3463291) (@lem3463290 _89837 _89861 _89862 _89863 P t f x y)). Qed.
Lemma lem3463293 {_89837 : Type'} (x : _89837) (t : _89837 -> Prop) : (term64 _89837 x t) = (term64 _89837 x t).
Proof. exact (eq_refl (term64 _89837 x t)). Qed.
Lemma lem3463294 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (f : type1524 _89837 _89861 _89862 _89863) (x : _89863) (y : _89862) (x' : _89837) (t : _89837 -> Prop) : (term201 _89837 _89861 _89862 _89863 P f x y x' t) = (term197 _89837 _89861 _89862 _89863 P f x y x' t).
Proof. exact (MK_COMB (@lem3463292 _89837 _89861 _89862 _89863 P t f x y) (@lem3463293 _89837 x' t)). Qed.
Lemma lem3463295 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem3463296 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (f : type1524 _89837 _89861 _89862 _89863) (x : _89863) (y : _89862) (x' : _89837) (t : _89837 -> Prop) : (term206 _89837 _89861 _89862 _89863 P f x y x' t) = (term207 _89837 _89861 _89862 _89863 P f x y x' t).
Proof. exact (MK_COMB (@lem3463295) (@lem3463294 _89837 _89861 _89862 _89863 P f x y x' t)). Qed.
Lemma lem3463297 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (t : _89837 -> Prop) (f : type1524 _89837 _89861 _89862 _89863) (x : _89863) (y : _89862) (z : _89861) : (term45 _89837 _89861 _89862 _89863 P t f x y z) = (term24 _89837 _89861 _89862 _89863 P t f x y z).
Proof. exact (eq_refl (term45 _89837 _89861 _89862 _89863 P t f x y z)). Qed.
Lemma lem3463298 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem3463299 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (t : _89837 -> Prop) (f : type1524 _89837 _89861 _89862 _89863) (x : _89863) (y : _89862) (z : _89861) : (term208 _89837 _89861 _89862 _89863 P t f x y z) = (term209 _89837 _89861 _89862 _89863 P t f x y z).
Proof. exact (MK_COMB (@lem3463298) (@lem3463297 _89837 _89861 _89862 _89863 P t f x y z)). Qed.
Lemma lem3463300 {_89837 : Type'} (x : _89837) (t : _89837 -> Prop) : (term64 _89837 x t) = (term64 _89837 x t).
Proof. exact (eq_refl (term64 _89837 x t)). Qed.
Lemma lem3463301 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (f : type1524 _89837 _89861 _89862 _89863) (x : _89863) (y : _89862) (z : _89861) (x' : _89837) (t : _89837 -> Prop) : (term210 _89837 _89861 _89862 _89863 P f x y z x' t) = (term211 _89837 _89861 _89862 _89863 P f x y z x' t).
Proof. exact (MK_COMB (@lem3463299 _89837 _89861 _89862 _89863 P t f x y z) (@lem3463300 _89837 x' t)). Qed.
Lemma lem3463302 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (f : type1524 _89837 _89861 _89862 _89863) (x : _89863) (y : _89862) (x' : _89837) (t : _89837 -> Prop) : (term212 _89837 _89861 _89862 _89863 P f x y x' t) = (term213 _89837 _89861 _89862 _89863 P f x y x' t).
Proof. exact (fun_ext (fun z : _89861 => @lem3463301 _89837 _89861 _89862 _89863 P f x y z x' t)). Qed.
Lemma lem3463303 {_89861 : Type'} : (@ex _89861) = (@ex _89861).
Proof. exact (eq_refl (@ex _89861)). Qed.
Lemma lem3463304 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (f : type1524 _89837 _89861 _89862 _89863) (x : _89863) (y : _89862) (x' : _89837) (t : _89837 -> Prop) : (term202 _89837 _89861 _89862 _89863 P f x y x' t) = (term214 _89837 _89861 _89862 _89863 P f x y x' t).
Proof. exact (MK_COMB (@lem3463303 _89861) (@lem3463302 _89837 _89861 _89862 _89863 P f x y x' t)). Qed.
Lemma lem3463305 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (f : type1524 _89837 _89861 _89862 _89863) (x : _89863) (y : _89862) (x' : _89837) (t : _89837 -> Prop) : ((term201 _89837 _89861 _89862 _89863 P f x y x' t) = (term202 _89837 _89861 _89862 _89863 P f x y x' t)) = ((term197 _89837 _89861 _89862 _89863 P f x y x' t) = (term214 _89837 _89861 _89862 _89863 P f x y x' t)).
Proof. exact (MK_COMB (@lem3463296 _89837 _89861 _89862 _89863 P f x y x' t) (@lem3463304 _89837 _89861 _89862 _89863 P f x y x' t)). Qed.
Lemma lem3463306 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (f : type1524 _89837 _89861 _89862 _89863) (x : _89863) (y : _89862) (x' : _89837) (t : _89837 -> Prop) : (term197 _89837 _89861 _89862 _89863 P f x y x' t) = (term214 _89837 _89861 _89862 _89863 P f x y x' t).
Proof. exact (EQ_MP (@lem3463305 _89837 _89861 _89862 _89863 P f x y x' t) (@lem3463286 _89837 _89861 _89862 _89863 P f x y x' t)). Qed.
Lemma lem3463307 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (f : type1524 _89837 _89861 _89862 _89863) (x : _89863) (x' : _89837) (t : _89837 -> Prop) : (term199 _89837 _89861 _89862 _89863 P f x x' t) = (term215 _89837 _89861 _89862 _89863 P f x x' t).
Proof. exact (fun_ext (fun y : _89862 => @lem3463306 _89837 _89861 _89862 _89863 P f x y x' t)). Qed.
Lemma lem3463308 {_89862 : Type'} : (@ex _89862) = (@ex _89862).
Proof. exact (eq_refl (@ex _89862)). Qed.
Lemma lem3463309 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (f : type1524 _89837 _89861 _89862 _89863) (x : _89863) (x' : _89837) (t : _89837 -> Prop) : (term200 _89837 _89861 _89862 _89863 P f x x' t) = (term216 _89837 _89861 _89862 _89863 P f x x' t).
Proof. exact (MK_COMB (@lem3463308 _89862) (@lem3463307 _89837 _89861 _89862 _89863 P f x x' t)). Qed.
Lemma lem3463310 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (f : type1524 _89837 _89861 _89862 _89863) (x : _89863) (x' : _89837) (t : _89837 -> Prop) : (term183 _89837 _89861 _89862 _89863 P f x x' t) = (term216 _89837 _89861 _89862 _89863 P f x x' t).
Proof. exact (TRANS (@lem3463282 _89837 _89861 _89862 _89863 P f x x' t) (@lem3463309 _89837 _89861 _89862 _89863 P f x x' t)). Qed.
Lemma lem3463311 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (f : type1524 _89837 _89861 _89862 _89863) (x : _89837) (t : _89837 -> Prop) : (term185 _89837 _89861 _89862 _89863 P f x t) = (term217 _89837 _89861 _89862 _89863 P f x t).
Proof. exact (fun_ext (fun x' : _89863 => @lem3463310 _89837 _89861 _89862 _89863 P f x' x t)). Qed.
Lemma lem3463312 {_89863 : Type'} : (@ex _89863) = (@ex _89863).
Proof. exact (eq_refl (@ex _89863)). Qed.
Lemma lem3463313 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (f : type1524 _89837 _89861 _89862 _89863) (x : _89837) (t : _89837 -> Prop) : (term186 _89837 _89861 _89862 _89863 P f x t) = (term218 _89837 _89861 _89862 _89863 P f x t).
Proof. exact (MK_COMB (@lem3463312 _89863) (@lem3463311 _89837 _89861 _89862 _89863 P f x t)). Qed.
Lemma lem3463314 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (f : type1524 _89837 _89861 _89862 _89863) (x : _89837) (t : _89837 -> Prop) : (term66 _89837 _89861 _89862 _89863 P f x t) = (term218 _89837 _89861 _89862 _89863 P f x t).
Proof. exact (TRANS (@lem3463258 _89837 _89861 _89862 _89863 P f x t) (@lem3463313 _89837 _89861 _89862 _89863 P f x t)). Qed.
Lemma lem3463315 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (f : type1524 _89837 _89861 _89862 _89863) (x : _89837) : (term79 _89837 _89861 _89862 _89863 P f x) = (term219 _89837 _89861 _89862 _89863 P f x).
Proof. exact (fun_ext (fun t : _89837 -> Prop => @lem3463314 _89837 _89861 _89862 _89863 P f x t)). Qed.
Lemma lem3463316 {_89837 : Type'} : (@ex (_89837 -> Prop)) = (@ex (_89837 -> Prop)).
Proof. exact (eq_refl (@ex (_89837 -> Prop))). Qed.
Lemma lem3463317 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (f : type1524 _89837 _89861 _89862 _89863) (x : _89837) : (term80 _89837 _89861 _89862 _89863 P f x) = (term220 _89837 _89861 _89862 _89863 P f x).
Proof. exact (MK_COMB (@lem3463316 _89837) (@lem3463315 _89837 _89861 _89862 _89863 P f x)). Qed.
Lemma lem3463318 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem3463319 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (f : type1524 _89837 _89861 _89862 _89863) (x : _89837) : (term117 _89837 _89861 _89862 _89863 P f x) = (term221 _89837 _89861 _89862 _89863 P f x).
Proof. exact (MK_COMB (@lem3463318) (@lem3463317 _89837 _89861 _89862 _89863 P f x)). Qed.
Lemma lem3463320 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (x : _89837) (f : type1524 _89837 _89861 _89862 _89863) : (term115 _89837 _89861 _89862 _89863 P x f) = (term115 _89837 _89861 _89862 _89863 P x f).
Proof. exact (eq_refl (term115 _89837 _89861 _89862 _89863 P x f)). Qed.
Lemma lem3463321 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (x : _89837) (f : type1524 _89837 _89861 _89862 _89863) : (term119 _89837 _89861 _89862 _89863 P x f) = (term222 _89837 _89861 _89862 _89863 P x f).
Proof. exact (MK_COMB (@lem3463319 _89837 _89861 _89862 _89863 P f x) (@lem3463320 _89837 _89861 _89862 _89863 P x f)). Qed.
Lemma lem3463323 {A : Type'} (P : A -> Prop) (Q : Prop) : (term171 A P Q) = (term172 A P Q).
Proof. exact (EQ_MP (@lem18923 A P Q) (@lem18922 A P Q)). Qed.
Lemma lem3463324 {_89837 : Type'} (P : type686 _89837) (Q : Prop) : (term223 _89837 P Q) = (term224 _89837 P Q).
Proof. exact (@lem3463323 (_89837 -> Prop) P Q). Qed.
Lemma lem3463325 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (x : _89837) (f : type1524 _89837 _89861 _89862 _89863) : (term225 _89837 _89861 _89862 _89863 P x f) = (term226 _89837 _89861 _89862 _89863 P x f).
Proof. exact (@lem3463324 _89837 (term219 _89837 _89861 _89862 _89863 P f x) (term115 _89837 _89861 _89862 _89863 P x f)). Qed.
Lemma lem3463326 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (f : type1524 _89837 _89861 _89862 _89863) (x : _89837) (t : _89837 -> Prop) : (term227 _89837 _89861 _89862 _89863 P f x t) = (term218 _89837 _89861 _89862 _89863 P f x t).
Proof. exact (eq_refl (term227 _89837 _89861 _89862 _89863 P f x t)). Qed.
Lemma lem3463327 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (f : type1524 _89837 _89861 _89862 _89863) (x : _89837) : (term228 _89837 _89861 _89862 _89863 P f x) = (term219 _89837 _89861 _89862 _89863 P f x).
Proof. exact (fun_ext (fun t : _89837 -> Prop => @lem3463326 _89837 _89861 _89862 _89863 P f x t)). Qed.
Lemma lem3463328 {_89837 : Type'} : (@ex (_89837 -> Prop)) = (@ex (_89837 -> Prop)).
Proof. exact (eq_refl (@ex (_89837 -> Prop))). Qed.
Lemma lem3463329 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (f : type1524 _89837 _89861 _89862 _89863) (x : _89837) : (term229 _89837 _89861 _89862 _89863 P f x) = (term220 _89837 _89861 _89862 _89863 P f x).
Proof. exact (MK_COMB (@lem3463328 _89837) (@lem3463327 _89837 _89861 _89862 _89863 P f x)). Qed.
Lemma lem3463330 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem3463331 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (f : type1524 _89837 _89861 _89862 _89863) (x : _89837) : (term230 _89837 _89861 _89862 _89863 P f x) = (term221 _89837 _89861 _89862 _89863 P f x).
Proof. exact (MK_COMB (@lem3463330) (@lem3463329 _89837 _89861 _89862 _89863 P f x)). Qed.
Lemma lem3463332 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (x : _89837) (f : type1524 _89837 _89861 _89862 _89863) : (term115 _89837 _89861 _89862 _89863 P x f) = (term115 _89837 _89861 _89862 _89863 P x f).
Proof. exact (eq_refl (term115 _89837 _89861 _89862 _89863 P x f)). Qed.
Lemma lem3463333 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (x : _89837) (f : type1524 _89837 _89861 _89862 _89863) : (term225 _89837 _89861 _89862 _89863 P x f) = (term222 _89837 _89861 _89862 _89863 P x f).
Proof. exact (MK_COMB (@lem3463331 _89837 _89861 _89862 _89863 P f x) (@lem3463332 _89837 _89861 _89862 _89863 P x f)). Qed.
Lemma lem3463334 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem3463335 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (x : _89837) (f : type1524 _89837 _89861 _89862 _89863) : (term231 _89837 _89861 _89862 _89863 P x f) = (term232 _89837 _89861 _89862 _89863 P x f).
Proof. exact (MK_COMB (@lem3463334) (@lem3463333 _89837 _89861 _89862 _89863 P x f)). Qed.
Lemma lem3463336 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (f : type1524 _89837 _89861 _89862 _89863) (x : _89837) (t : _89837 -> Prop) : (term227 _89837 _89861 _89862 _89863 P f x t) = (term218 _89837 _89861 _89862 _89863 P f x t).
Proof. exact (eq_refl (term227 _89837 _89861 _89862 _89863 P f x t)). Qed.
Lemma lem3463337 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem3463338 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (f : type1524 _89837 _89861 _89862 _89863) (x : _89837) (t : _89837 -> Prop) : (term233 _89837 _89861 _89862 _89863 P f x t) = (term234 _89837 _89861 _89862 _89863 P f x t).
Proof. exact (MK_COMB (@lem3463337) (@lem3463336 _89837 _89861 _89862 _89863 P f x t)). Qed.
Lemma lem3463339 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (x : _89837) (f : type1524 _89837 _89861 _89862 _89863) : (term115 _89837 _89861 _89862 _89863 P x f) = (term115 _89837 _89861 _89862 _89863 P x f).
Proof. exact (eq_refl (term115 _89837 _89861 _89862 _89863 P x f)). Qed.
Lemma lem3463340 {_89837 _89861 _89862 _89863 : Type'} (t : _89837 -> Prop) (P : type1517 _89861 _89862 _89863) (x : _89837) (f : type1524 _89837 _89861 _89862 _89863) : (term235 _89837 _89861 _89862 _89863 t P x f) = (term236 _89837 _89861 _89862 _89863 t P x f).
Proof. exact (MK_COMB (@lem3463338 _89837 _89861 _89862 _89863 P f x t) (@lem3463339 _89837 _89861 _89862 _89863 P x f)). Qed.
Lemma lem3463341 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (x : _89837) (f : type1524 _89837 _89861 _89862 _89863) : (term237 _89837 _89861 _89862 _89863 P x f) = (term238 _89837 _89861 _89862 _89863 P x f).
Proof. exact (fun_ext (fun t : _89837 -> Prop => @lem3463340 _89837 _89861 _89862 _89863 t P x f)). Qed.
Lemma lem3463342 {_89837 : Type'} : (@ex (_89837 -> Prop)) = (@ex (_89837 -> Prop)).
Proof. exact (eq_refl (@ex (_89837 -> Prop))). Qed.
Lemma lem3463343 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (x : _89837) (f : type1524 _89837 _89861 _89862 _89863) : (term226 _89837 _89861 _89862 _89863 P x f) = (term239 _89837 _89861 _89862 _89863 P x f).
Proof. exact (MK_COMB (@lem3463342 _89837) (@lem3463341 _89837 _89861 _89862 _89863 P x f)). Qed.
Lemma lem3463344 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (x : _89837) (f : type1524 _89837 _89861 _89862 _89863) : ((term225 _89837 _89861 _89862 _89863 P x f) = (term226 _89837 _89861 _89862 _89863 P x f)) = ((term222 _89837 _89861 _89862 _89863 P x f) = (term239 _89837 _89861 _89862 _89863 P x f)).
Proof. exact (MK_COMB (@lem3463335 _89837 _89861 _89862 _89863 P x f) (@lem3463343 _89837 _89861 _89862 _89863 P x f)). Qed.
Lemma lem3463345 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (x : _89837) (f : type1524 _89837 _89861 _89862 _89863) : (term222 _89837 _89861 _89862 _89863 P x f) = (term239 _89837 _89861 _89862 _89863 P x f).
Proof. exact (EQ_MP (@lem3463344 _89837 _89861 _89862 _89863 P x f) (@lem3463325 _89837 _89861 _89862 _89863 P x f)). Qed.
Lemma lem3463347 {A : Type'} (P : A -> Prop) (Q : Prop) : (term171 A P Q) = (term172 A P Q).
Proof. exact (EQ_MP (@lem18923 A P Q) (@lem18922 A P Q)). Qed.
Lemma lem3463348 {_89863 : Type'} (P : _89863 -> Prop) (Q : Prop) : (term171 _89863 P Q) = (term172 _89863 P Q).
Proof. exact (@lem3463347 _89863 P Q). Qed.
Lemma lem3463349 {_89837 _89861 _89862 _89863 : Type'} (t : _89837 -> Prop) (P : type1517 _89861 _89862 _89863) (x : _89837) (f : type1524 _89837 _89861 _89862 _89863) : (term240 _89837 _89861 _89862 _89863 t P x f) = (term241 _89837 _89861 _89862 _89863 t P x f).
Proof. exact (@lem3463348 _89863 (term217 _89837 _89861 _89862 _89863 P f x t) (term115 _89837 _89861 _89862 _89863 P x f)). Qed.
Lemma lem3463350 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (f : type1524 _89837 _89861 _89862 _89863) (x : _89863) (x' : _89837) (t : _89837 -> Prop) : (term242 _89837 _89861 _89862 _89863 P f x' t x) = (term216 _89837 _89861 _89862 _89863 P f x x' t).
Proof. exact (eq_refl (term242 _89837 _89861 _89862 _89863 P f x' t x)). Qed.
Lemma lem3463351 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (f : type1524 _89837 _89861 _89862 _89863) (x : _89837) (t : _89837 -> Prop) : (term243 _89837 _89861 _89862 _89863 P f x t) = (term217 _89837 _89861 _89862 _89863 P f x t).
Proof. exact (fun_ext (fun x' : _89863 => @lem3463350 _89837 _89861 _89862 _89863 P f x' x t)). Qed.
Lemma lem3463352 {_89863 : Type'} : (@ex _89863) = (@ex _89863).
Proof. exact (eq_refl (@ex _89863)). Qed.
Lemma lem3463353 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (f : type1524 _89837 _89861 _89862 _89863) (x : _89837) (t : _89837 -> Prop) : (term244 _89837 _89861 _89862 _89863 P f x t) = (term218 _89837 _89861 _89862 _89863 P f x t).
Proof. exact (MK_COMB (@lem3463352 _89863) (@lem3463351 _89837 _89861 _89862 _89863 P f x t)). Qed.
Lemma lem3463354 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem3463355 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (f : type1524 _89837 _89861 _89862 _89863) (x : _89837) (t : _89837 -> Prop) : (term245 _89837 _89861 _89862 _89863 P f x t) = (term234 _89837 _89861 _89862 _89863 P f x t).
Proof. exact (MK_COMB (@lem3463354) (@lem3463353 _89837 _89861 _89862 _89863 P f x t)). Qed.
Lemma lem3463356 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (x : _89837) (f : type1524 _89837 _89861 _89862 _89863) : (term115 _89837 _89861 _89862 _89863 P x f) = (term115 _89837 _89861 _89862 _89863 P x f).
Proof. exact (eq_refl (term115 _89837 _89861 _89862 _89863 P x f)). Qed.
Lemma lem3463357 {_89837 _89861 _89862 _89863 : Type'} (t : _89837 -> Prop) (P : type1517 _89861 _89862 _89863) (x : _89837) (f : type1524 _89837 _89861 _89862 _89863) : (term240 _89837 _89861 _89862 _89863 t P x f) = (term236 _89837 _89861 _89862 _89863 t P x f).
Proof. exact (MK_COMB (@lem3463355 _89837 _89861 _89862 _89863 P f x t) (@lem3463356 _89837 _89861 _89862 _89863 P x f)). Qed.
Lemma lem3463358 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem3463359 {_89837 _89861 _89862 _89863 : Type'} (t : _89837 -> Prop) (P : type1517 _89861 _89862 _89863) (x : _89837) (f : type1524 _89837 _89861 _89862 _89863) : (term246 _89837 _89861 _89862 _89863 t P x f) = (term247 _89837 _89861 _89862 _89863 t P x f).
Proof. exact (MK_COMB (@lem3463358) (@lem3463357 _89837 _89861 _89862 _89863 t P x f)). Qed.
Lemma lem3463360 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (f : type1524 _89837 _89861 _89862 _89863) (x : _89863) (x' : _89837) (t : _89837 -> Prop) : (term242 _89837 _89861 _89862 _89863 P f x' t x) = (term216 _89837 _89861 _89862 _89863 P f x x' t).
Proof. exact (eq_refl (term242 _89837 _89861 _89862 _89863 P f x' t x)). Qed.
Lemma lem3463361 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem3463362 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (f : type1524 _89837 _89861 _89862 _89863) (x : _89863) (x' : _89837) (t : _89837 -> Prop) : (term248 _89837 _89861 _89862 _89863 P f x' t x) = (term249 _89837 _89861 _89862 _89863 P f x x' t).
Proof. exact (MK_COMB (@lem3463361) (@lem3463360 _89837 _89861 _89862 _89863 P f x x' t)). Qed.
Lemma lem3463363 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (x : _89837) (f : type1524 _89837 _89861 _89862 _89863) : (term115 _89837 _89861 _89862 _89863 P x f) = (term115 _89837 _89861 _89862 _89863 P x f).
Proof. exact (eq_refl (term115 _89837 _89861 _89862 _89863 P x f)). Qed.
Lemma lem3463364 {_89837 _89861 _89862 _89863 : Type'} (x : _89863) (t : _89837 -> Prop) (P : type1517 _89861 _89862 _89863) (x' : _89837) (f : type1524 _89837 _89861 _89862 _89863) : (term250 _89837 _89861 _89862 _89863 t x P x' f) = (term251 _89837 _89861 _89862 _89863 x t P x' f).
Proof. exact (MK_COMB (@lem3463362 _89837 _89861 _89862 _89863 P f x x' t) (@lem3463363 _89837 _89861 _89862 _89863 P x' f)). Qed.
Lemma lem3463365 {_89837 _89861 _89862 _89863 : Type'} (t : _89837 -> Prop) (P : type1517 _89861 _89862 _89863) (x : _89837) (f : type1524 _89837 _89861 _89862 _89863) : (term252 _89837 _89861 _89862 _89863 t P x f) = (term253 _89837 _89861 _89862 _89863 t P x f).
Proof. exact (fun_ext (fun x' : _89863 => @lem3463364 _89837 _89861 _89862 _89863 x' t P x f)). Qed.
Lemma lem3463366 {_89863 : Type'} : (@ex _89863) = (@ex _89863).
Proof. exact (eq_refl (@ex _89863)). Qed.
Lemma lem3463367 {_89837 _89861 _89862 _89863 : Type'} (t : _89837 -> Prop) (P : type1517 _89861 _89862 _89863) (x : _89837) (f : type1524 _89837 _89861 _89862 _89863) : (term241 _89837 _89861 _89862 _89863 t P x f) = (term254 _89837 _89861 _89862 _89863 t P x f).
Proof. exact (MK_COMB (@lem3463366 _89863) (@lem3463365 _89837 _89861 _89862 _89863 t P x f)). Qed.
Lemma lem3463368 {_89837 _89861 _89862 _89863 : Type'} (t : _89837 -> Prop) (P : type1517 _89861 _89862 _89863) (x : _89837) (f : type1524 _89837 _89861 _89862 _89863) : ((term240 _89837 _89861 _89862 _89863 t P x f) = (term241 _89837 _89861 _89862 _89863 t P x f)) = ((term236 _89837 _89861 _89862 _89863 t P x f) = (term254 _89837 _89861 _89862 _89863 t P x f)).
Proof. exact (MK_COMB (@lem3463359 _89837 _89861 _89862 _89863 t P x f) (@lem3463367 _89837 _89861 _89862 _89863 t P x f)). Qed.
Lemma lem3463369 {_89837 _89861 _89862 _89863 : Type'} (t : _89837 -> Prop) (P : type1517 _89861 _89862 _89863) (x : _89837) (f : type1524 _89837 _89861 _89862 _89863) : (term236 _89837 _89861 _89862 _89863 t P x f) = (term254 _89837 _89861 _89862 _89863 t P x f).
Proof. exact (EQ_MP (@lem3463368 _89837 _89861 _89862 _89863 t P x f) (@lem3463349 _89837 _89861 _89862 _89863 t P x f)). Qed.
Lemma lem3463371 {A : Type'} (P : A -> Prop) (Q : Prop) : (term171 A P Q) = (term172 A P Q).
Proof. exact (EQ_MP (@lem18923 A P Q) (@lem18922 A P Q)). Qed.
Lemma lem3463372 {_89862 : Type'} (P : _89862 -> Prop) (Q : Prop) : (term171 _89862 P Q) = (term172 _89862 P Q).
Proof. exact (@lem3463371 _89862 P Q). Qed.
Lemma lem3463373 {_89837 _89861 _89862 _89863 : Type'} (x : _89863) (t : _89837 -> Prop) (P : type1517 _89861 _89862 _89863) (x' : _89837) (f : type1524 _89837 _89861 _89862 _89863) : (term255 _89837 _89861 _89862 _89863 x t P x' f) = (term256 _89837 _89861 _89862 _89863 x t P x' f).
Proof. exact (@lem3463372 _89862 (term215 _89837 _89861 _89862 _89863 P f x x' t) (term115 _89837 _89861 _89862 _89863 P x' f)). Qed.
Lemma lem3463374 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (f : type1524 _89837 _89861 _89862 _89863) (x : _89863) (y : _89862) (x' : _89837) (t : _89837 -> Prop) : (term257 _89837 _89861 _89862 _89863 P f x x' t y) = (term214 _89837 _89861 _89862 _89863 P f x y x' t).
Proof. exact (eq_refl (term257 _89837 _89861 _89862 _89863 P f x x' t y)). Qed.
Lemma lem3463375 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (f : type1524 _89837 _89861 _89862 _89863) (x : _89863) (x' : _89837) (t : _89837 -> Prop) : (term258 _89837 _89861 _89862 _89863 P f x x' t) = (term215 _89837 _89861 _89862 _89863 P f x x' t).
Proof. exact (fun_ext (fun y : _89862 => @lem3463374 _89837 _89861 _89862 _89863 P f x y x' t)). Qed.
Lemma lem3463376 {_89862 : Type'} : (@ex _89862) = (@ex _89862).
Proof. exact (eq_refl (@ex _89862)). Qed.
Lemma lem3463377 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (f : type1524 _89837 _89861 _89862 _89863) (x : _89863) (x' : _89837) (t : _89837 -> Prop) : (term259 _89837 _89861 _89862 _89863 P f x x' t) = (term216 _89837 _89861 _89862 _89863 P f x x' t).
Proof. exact (MK_COMB (@lem3463376 _89862) (@lem3463375 _89837 _89861 _89862 _89863 P f x x' t)). Qed.
Lemma lem3463378 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem3463379 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (f : type1524 _89837 _89861 _89862 _89863) (x : _89863) (x' : _89837) (t : _89837 -> Prop) : (term260 _89837 _89861 _89862 _89863 P f x x' t) = (term249 _89837 _89861 _89862 _89863 P f x x' t).
Proof. exact (MK_COMB (@lem3463378) (@lem3463377 _89837 _89861 _89862 _89863 P f x x' t)). Qed.
Lemma lem3463380 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (x : _89837) (f : type1524 _89837 _89861 _89862 _89863) : (term115 _89837 _89861 _89862 _89863 P x f) = (term115 _89837 _89861 _89862 _89863 P x f).
Proof. exact (eq_refl (term115 _89837 _89861 _89862 _89863 P x f)). Qed.
Lemma lem3463381 {_89837 _89861 _89862 _89863 : Type'} (x : _89863) (t : _89837 -> Prop) (P : type1517 _89861 _89862 _89863) (x' : _89837) (f : type1524 _89837 _89861 _89862 _89863) : (term255 _89837 _89861 _89862 _89863 x t P x' f) = (term251 _89837 _89861 _89862 _89863 x t P x' f).
Proof. exact (MK_COMB (@lem3463379 _89837 _89861 _89862 _89863 P f x x' t) (@lem3463380 _89837 _89861 _89862 _89863 P x' f)). Qed.
Lemma lem3463382 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem3463383 {_89837 _89861 _89862 _89863 : Type'} (x : _89863) (t : _89837 -> Prop) (P : type1517 _89861 _89862 _89863) (x' : _89837) (f : type1524 _89837 _89861 _89862 _89863) : (term261 _89837 _89861 _89862 _89863 x t P x' f) = (term262 _89837 _89861 _89862 _89863 x t P x' f).
Proof. exact (MK_COMB (@lem3463382) (@lem3463381 _89837 _89861 _89862 _89863 x t P x' f)). Qed.
Lemma lem3463384 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (f : type1524 _89837 _89861 _89862 _89863) (x : _89863) (y : _89862) (x' : _89837) (t : _89837 -> Prop) : (term257 _89837 _89861 _89862 _89863 P f x x' t y) = (term214 _89837 _89861 _89862 _89863 P f x y x' t).
Proof. exact (eq_refl (term257 _89837 _89861 _89862 _89863 P f x x' t y)). Qed.
Lemma lem3463385 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem3463386 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (f : type1524 _89837 _89861 _89862 _89863) (x : _89863) (y : _89862) (x' : _89837) (t : _89837 -> Prop) : (term263 _89837 _89861 _89862 _89863 P f x x' t y) = (term264 _89837 _89861 _89862 _89863 P f x y x' t).
Proof. exact (MK_COMB (@lem3463385) (@lem3463384 _89837 _89861 _89862 _89863 P f x y x' t)). Qed.
Lemma lem3463387 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (x : _89837) (f : type1524 _89837 _89861 _89862 _89863) : (term115 _89837 _89861 _89862 _89863 P x f) = (term115 _89837 _89861 _89862 _89863 P x f).
Proof. exact (eq_refl (term115 _89837 _89861 _89862 _89863 P x f)). Qed.
Lemma lem3463388 {_89837 _89861 _89862 _89863 : Type'} (x : _89863) (y : _89862) (t : _89837 -> Prop) (P : type1517 _89861 _89862 _89863) (x' : _89837) (f : type1524 _89837 _89861 _89862 _89863) : (term265 _89837 _89861 _89862 _89863 x t y P x' f) = (term266 _89837 _89861 _89862 _89863 x y t P x' f).
Proof. exact (MK_COMB (@lem3463386 _89837 _89861 _89862 _89863 P f x y x' t) (@lem3463387 _89837 _89861 _89862 _89863 P x' f)). Qed.
Lemma lem3463389 {_89837 _89861 _89862 _89863 : Type'} (x : _89863) (t : _89837 -> Prop) (P : type1517 _89861 _89862 _89863) (x' : _89837) (f : type1524 _89837 _89861 _89862 _89863) : (term267 _89837 _89861 _89862 _89863 x t P x' f) = (term268 _89837 _89861 _89862 _89863 x t P x' f).
Proof. exact (fun_ext (fun y : _89862 => @lem3463388 _89837 _89861 _89862 _89863 x y t P x' f)). Qed.
Lemma lem3463390 {_89862 : Type'} : (@ex _89862) = (@ex _89862).
Proof. exact (eq_refl (@ex _89862)). Qed.
Lemma lem3463391 {_89837 _89861 _89862 _89863 : Type'} (x : _89863) (t : _89837 -> Prop) (P : type1517 _89861 _89862 _89863) (x' : _89837) (f : type1524 _89837 _89861 _89862 _89863) : (term256 _89837 _89861 _89862 _89863 x t P x' f) = (term269 _89837 _89861 _89862 _89863 x t P x' f).
Proof. exact (MK_COMB (@lem3463390 _89862) (@lem3463389 _89837 _89861 _89862 _89863 x t P x' f)). Qed.
Lemma lem3463392 {_89837 _89861 _89862 _89863 : Type'} (x : _89863) (t : _89837 -> Prop) (P : type1517 _89861 _89862 _89863) (x' : _89837) (f : type1524 _89837 _89861 _89862 _89863) : ((term255 _89837 _89861 _89862 _89863 x t P x' f) = (term256 _89837 _89861 _89862 _89863 x t P x' f)) = ((term251 _89837 _89861 _89862 _89863 x t P x' f) = (term269 _89837 _89861 _89862 _89863 x t P x' f)).
Proof. exact (MK_COMB (@lem3463383 _89837 _89861 _89862 _89863 x t P x' f) (@lem3463391 _89837 _89861 _89862 _89863 x t P x' f)). Qed.
Lemma lem3463393 {_89837 _89861 _89862 _89863 : Type'} (x : _89863) (t : _89837 -> Prop) (P : type1517 _89861 _89862 _89863) (x' : _89837) (f : type1524 _89837 _89861 _89862 _89863) : (term251 _89837 _89861 _89862 _89863 x t P x' f) = (term269 _89837 _89861 _89862 _89863 x t P x' f).
Proof. exact (EQ_MP (@lem3463392 _89837 _89861 _89862 _89863 x t P x' f) (@lem3463373 _89837 _89861 _89862 _89863 x t P x' f)). Qed.
Lemma lem3463395 {A : Type'} (P : A -> Prop) (Q : Prop) : (term171 A P Q) = (term172 A P Q).
Proof. exact (EQ_MP (@lem18923 A P Q) (@lem18922 A P Q)). Qed.
Lemma lem3463396 {_89861 : Type'} (P : _89861 -> Prop) (Q : Prop) : (term171 _89861 P Q) = (term172 _89861 P Q).
Proof. exact (@lem3463395 _89861 P Q). Qed.
Lemma lem3463397 {_89837 _89861 _89862 _89863 : Type'} (x : _89863) (y : _89862) (t : _89837 -> Prop) (P : type1517 _89861 _89862 _89863) (x' : _89837) (f : type1524 _89837 _89861 _89862 _89863) : (term270 _89837 _89861 _89862 _89863 x y t P x' f) = (term271 _89837 _89861 _89862 _89863 x y t P x' f).
Proof. exact (@lem3463396 _89861 (term213 _89837 _89861 _89862 _89863 P f x y x' t) (term115 _89837 _89861 _89862 _89863 P x' f)). Qed.
Lemma lem3463398 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (f : type1524 _89837 _89861 _89862 _89863) (x : _89863) (y : _89862) (z : _89861) (x' : _89837) (t : _89837 -> Prop) : (term272 _89837 _89861 _89862 _89863 P f x y x' t z) = (term211 _89837 _89861 _89862 _89863 P f x y z x' t).
Proof. exact (eq_refl (term272 _89837 _89861 _89862 _89863 P f x y x' t z)). Qed.
Lemma lem3463399 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (f : type1524 _89837 _89861 _89862 _89863) (x : _89863) (y : _89862) (x' : _89837) (t : _89837 -> Prop) : (term273 _89837 _89861 _89862 _89863 P f x y x' t) = (term213 _89837 _89861 _89862 _89863 P f x y x' t).
Proof. exact (fun_ext (fun z : _89861 => @lem3463398 _89837 _89861 _89862 _89863 P f x y z x' t)). Qed.
Lemma lem3463400 {_89861 : Type'} : (@ex _89861) = (@ex _89861).
Proof. exact (eq_refl (@ex _89861)). Qed.
Lemma lem3463401 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (f : type1524 _89837 _89861 _89862 _89863) (x : _89863) (y : _89862) (x' : _89837) (t : _89837 -> Prop) : (term274 _89837 _89861 _89862 _89863 P f x y x' t) = (term214 _89837 _89861 _89862 _89863 P f x y x' t).
Proof. exact (MK_COMB (@lem3463400 _89861) (@lem3463399 _89837 _89861 _89862 _89863 P f x y x' t)). Qed.
Lemma lem3463402 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem3463403 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (f : type1524 _89837 _89861 _89862 _89863) (x : _89863) (y : _89862) (x' : _89837) (t : _89837 -> Prop) : (term275 _89837 _89861 _89862 _89863 P f x y x' t) = (term264 _89837 _89861 _89862 _89863 P f x y x' t).
Proof. exact (MK_COMB (@lem3463402) (@lem3463401 _89837 _89861 _89862 _89863 P f x y x' t)). Qed.
Lemma lem3463404 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (x : _89837) (f : type1524 _89837 _89861 _89862 _89863) : (term115 _89837 _89861 _89862 _89863 P x f) = (term115 _89837 _89861 _89862 _89863 P x f).
Proof. exact (eq_refl (term115 _89837 _89861 _89862 _89863 P x f)). Qed.
Lemma lem3463405 {_89837 _89861 _89862 _89863 : Type'} (x : _89863) (y : _89862) (t : _89837 -> Prop) (P : type1517 _89861 _89862 _89863) (x' : _89837) (f : type1524 _89837 _89861 _89862 _89863) : (term270 _89837 _89861 _89862 _89863 x y t P x' f) = (term266 _89837 _89861 _89862 _89863 x y t P x' f).
Proof. exact (MK_COMB (@lem3463403 _89837 _89861 _89862 _89863 P f x y x' t) (@lem3463404 _89837 _89861 _89862 _89863 P x' f)). Qed.
Lemma lem3463406 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem3463407 {_89837 _89861 _89862 _89863 : Type'} (x : _89863) (y : _89862) (t : _89837 -> Prop) (P : type1517 _89861 _89862 _89863) (x' : _89837) (f : type1524 _89837 _89861 _89862 _89863) : (term276 _89837 _89861 _89862 _89863 x y t P x' f) = (term277 _89837 _89861 _89862 _89863 x y t P x' f).
Proof. exact (MK_COMB (@lem3463406) (@lem3463405 _89837 _89861 _89862 _89863 x y t P x' f)). Qed.
Lemma lem3463408 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (f : type1524 _89837 _89861 _89862 _89863) (x : _89863) (y : _89862) (z : _89861) (x' : _89837) (t : _89837 -> Prop) : (term272 _89837 _89861 _89862 _89863 P f x y x' t z) = (term211 _89837 _89861 _89862 _89863 P f x y z x' t).
Proof. exact (eq_refl (term272 _89837 _89861 _89862 _89863 P f x y x' t z)). Qed.
Lemma lem3463409 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem3463410 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (f : type1524 _89837 _89861 _89862 _89863) (x : _89863) (y : _89862) (z : _89861) (x' : _89837) (t : _89837 -> Prop) : (term278 _89837 _89861 _89862 _89863 P f x y x' t z) = (term279 _89837 _89861 _89862 _89863 P f x y z x' t).
Proof. exact (MK_COMB (@lem3463409) (@lem3463408 _89837 _89861 _89862 _89863 P f x y z x' t)). Qed.
Lemma lem3463411 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (x : _89837) (f : type1524 _89837 _89861 _89862 _89863) : (term115 _89837 _89861 _89862 _89863 P x f) = (term115 _89837 _89861 _89862 _89863 P x f).
Proof. exact (eq_refl (term115 _89837 _89861 _89862 _89863 P x f)). Qed.
Lemma lem3463412 {_89837 _89861 _89862 _89863 : Type'} (x : _89863) (y : _89862) (z : _89861) (t : _89837 -> Prop) (P : type1517 _89861 _89862 _89863) (x' : _89837) (f : type1524 _89837 _89861 _89862 _89863) : (term280 _89837 _89861 _89862 _89863 x y t z P x' f) = (term281 _89837 _89861 _89862 _89863 x y z t P x' f).
Proof. exact (MK_COMB (@lem3463410 _89837 _89861 _89862 _89863 P f x y z x' t) (@lem3463411 _89837 _89861 _89862 _89863 P x' f)). Qed.
Lemma lem3463413 {_89837 _89861 _89862 _89863 : Type'} (x : _89863) (y : _89862) (t : _89837 -> Prop) (P : type1517 _89861 _89862 _89863) (x' : _89837) (f : type1524 _89837 _89861 _89862 _89863) : (term282 _89837 _89861 _89862 _89863 x y t P x' f) = (term283 _89837 _89861 _89862 _89863 x y t P x' f).
Proof. exact (fun_ext (fun z : _89861 => @lem3463412 _89837 _89861 _89862 _89863 x y z t P x' f)). Qed.
Lemma lem3463414 {_89861 : Type'} : (@ex _89861) = (@ex _89861).
Proof. exact (eq_refl (@ex _89861)). Qed.
Lemma lem3463415 {_89837 _89861 _89862 _89863 : Type'} (x : _89863) (y : _89862) (t : _89837 -> Prop) (P : type1517 _89861 _89862 _89863) (x' : _89837) (f : type1524 _89837 _89861 _89862 _89863) : (term271 _89837 _89861 _89862 _89863 x y t P x' f) = (term284 _89837 _89861 _89862 _89863 x y t P x' f).
Proof. exact (MK_COMB (@lem3463414 _89861) (@lem3463413 _89837 _89861 _89862 _89863 x y t P x' f)). Qed.
Lemma lem3463416 {_89837 _89861 _89862 _89863 : Type'} (x : _89863) (y : _89862) (t : _89837 -> Prop) (P : type1517 _89861 _89862 _89863) (x' : _89837) (f : type1524 _89837 _89861 _89862 _89863) : ((term270 _89837 _89861 _89862 _89863 x y t P x' f) = (term271 _89837 _89861 _89862 _89863 x y t P x' f)) = ((term266 _89837 _89861 _89862 _89863 x y t P x' f) = (term284 _89837 _89861 _89862 _89863 x y t P x' f)).
Proof. exact (MK_COMB (@lem3463407 _89837 _89861 _89862 _89863 x y t P x' f) (@lem3463415 _89837 _89861 _89862 _89863 x y t P x' f)). Qed.
Lemma lem3463417 {_89837 _89861 _89862 _89863 : Type'} (x : _89863) (y : _89862) (t : _89837 -> Prop) (P : type1517 _89861 _89862 _89863) (x' : _89837) (f : type1524 _89837 _89861 _89862 _89863) : (term266 _89837 _89861 _89862 _89863 x y t P x' f) = (term284 _89837 _89861 _89862 _89863 x y t P x' f).
Proof. exact (EQ_MP (@lem3463416 _89837 _89861 _89862 _89863 x y t P x' f) (@lem3463397 _89837 _89861 _89862 _89863 x y t P x' f)). Qed.
Lemma lem3463418 {_89837 _89861 _89862 _89863 : Type'} (x : _89863) (t : _89837 -> Prop) (P : type1517 _89861 _89862 _89863) (x' : _89837) (f : type1524 _89837 _89861 _89862 _89863) : (term268 _89837 _89861 _89862 _89863 x t P x' f) = (term285 _89837 _89861 _89862 _89863 x t P x' f).
Proof. exact (fun_ext (fun y : _89862 => @lem3463417 _89837 _89861 _89862 _89863 x y t P x' f)). Qed.
Lemma lem3463419 {_89862 : Type'} : (@ex _89862) = (@ex _89862).
Proof. exact (eq_refl (@ex _89862)). Qed.
Lemma lem3463420 {_89837 _89861 _89862 _89863 : Type'} (x : _89863) (t : _89837 -> Prop) (P : type1517 _89861 _89862 _89863) (x' : _89837) (f : type1524 _89837 _89861 _89862 _89863) : (term269 _89837 _89861 _89862 _89863 x t P x' f) = (term286 _89837 _89861 _89862 _89863 x t P x' f).
Proof. exact (MK_COMB (@lem3463419 _89862) (@lem3463418 _89837 _89861 _89862 _89863 x t P x' f)). Qed.
Lemma lem3463421 {_89837 _89861 _89862 _89863 : Type'} (x : _89863) (t : _89837 -> Prop) (P : type1517 _89861 _89862 _89863) (x' : _89837) (f : type1524 _89837 _89861 _89862 _89863) : (term251 _89837 _89861 _89862 _89863 x t P x' f) = (term286 _89837 _89861 _89862 _89863 x t P x' f).
Proof. exact (TRANS (@lem3463393 _89837 _89861 _89862 _89863 x t P x' f) (@lem3463420 _89837 _89861 _89862 _89863 x t P x' f)). Qed.
Lemma lem3463422 {_89837 _89861 _89862 _89863 : Type'} (t : _89837 -> Prop) (P : type1517 _89861 _89862 _89863) (x : _89837) (f : type1524 _89837 _89861 _89862 _89863) : (term253 _89837 _89861 _89862 _89863 t P x f) = (term287 _89837 _89861 _89862 _89863 t P x f).
Proof. exact (fun_ext (fun x' : _89863 => @lem3463421 _89837 _89861 _89862 _89863 x' t P x f)). Qed.
Lemma lem3463423 {_89863 : Type'} : (@ex _89863) = (@ex _89863).
Proof. exact (eq_refl (@ex _89863)). Qed.
Lemma lem3463424 {_89837 _89861 _89862 _89863 : Type'} (t : _89837 -> Prop) (P : type1517 _89861 _89862 _89863) (x : _89837) (f : type1524 _89837 _89861 _89862 _89863) : (term254 _89837 _89861 _89862 _89863 t P x f) = (term288 _89837 _89861 _89862 _89863 t P x f).
Proof. exact (MK_COMB (@lem3463423 _89863) (@lem3463422 _89837 _89861 _89862 _89863 t P x f)). Qed.
Lemma lem3463425 {_89837 _89861 _89862 _89863 : Type'} (t : _89837 -> Prop) (P : type1517 _89861 _89862 _89863) (x : _89837) (f : type1524 _89837 _89861 _89862 _89863) : (term236 _89837 _89861 _89862 _89863 t P x f) = (term288 _89837 _89861 _89862 _89863 t P x f).
Proof. exact (TRANS (@lem3463369 _89837 _89861 _89862 _89863 t P x f) (@lem3463424 _89837 _89861 _89862 _89863 t P x f)). Qed.
Lemma lem3463426 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (x : _89837) (f : type1524 _89837 _89861 _89862 _89863) : (term238 _89837 _89861 _89862 _89863 P x f) = (term289 _89837 _89861 _89862 _89863 P x f).
Proof. exact (fun_ext (fun t : _89837 -> Prop => @lem3463425 _89837 _89861 _89862 _89863 t P x f)). Qed.
Lemma lem3463427 {_89837 : Type'} : (@ex (_89837 -> Prop)) = (@ex (_89837 -> Prop)).
Proof. exact (eq_refl (@ex (_89837 -> Prop))). Qed.
Lemma lem3463428 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (x : _89837) (f : type1524 _89837 _89861 _89862 _89863) : (term239 _89837 _89861 _89862 _89863 P x f) = (term290 _89837 _89861 _89862 _89863 P x f).
Proof. exact (MK_COMB (@lem3463427 _89837) (@lem3463426 _89837 _89861 _89862 _89863 P x f)). Qed.
Lemma lem3463429 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (x : _89837) (f : type1524 _89837 _89861 _89862 _89863) : (term222 _89837 _89861 _89862 _89863 P x f) = (term290 _89837 _89861 _89862 _89863 P x f).
Proof. exact (TRANS (@lem3463345 _89837 _89861 _89862 _89863 P x f) (@lem3463428 _89837 _89861 _89862 _89863 P x f)). Qed.
Lemma lem3463430 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (x : _89837) (f : type1524 _89837 _89861 _89862 _89863) : (term119 _89837 _89861 _89862 _89863 P x f) = (term290 _89837 _89861 _89862 _89863 P x f).
Proof. exact (TRANS (@lem3463321 _89837 _89861 _89862 _89863 P x f) (@lem3463429 _89837 _89861 _89862 _89863 P x f)). Qed.
Lemma lem3463431 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (x : _89837) (f : type1524 _89837 _89861 _89862 _89863) : (term127 _89837 _89861 _89862 _89863 P x f) = (term291 _89837 _89861 _89862 _89863 P x f).
Proof. exact (MK_COMB (@lem3463234 _89837 _89861 _89862 _89863 P x f) (@lem3463430 _89837 _89861 _89862 _89863 P x f)). Qed.
Lemma lem3463435 {A : Type'} (P : A -> Prop) (Q : Prop) : (term292 A P Q) = (term293 A P Q).
Proof. exact (EQ_MP (@lem18905 A P Q) (@lem18904 A P Q)). Qed.
Lemma lem3463436 {_89863 : Type'} (P : _89863 -> Prop) (Q : Prop) : (term292 _89863 P Q) = (term293 _89863 P Q).
Proof. exact (@lem3463435 _89863 P Q). Qed.
Lemma lem3463437 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (x : _89837) (f : type1524 _89837 _89861 _89862 _89863) : (term294 _89837 _89861 _89862 _89863 P x f) = (term295 _89837 _89861 _89862 _89863 P x f).
Proof. exact (@lem3463436 _89863 (term168 _89837 _89861 _89862 _89863 P x f) (term290 _89837 _89861 _89862 _89863 P x f)). Qed.
Lemma lem3463438 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (x : _89837) (f : type1524 _89837 _89861 _89862 _89863) (x' : _89863) : (term296 _89837 _89861 _89862 _89863 P x f x') = (term167 _89837 _89861 _89862 _89863 P x f x').
Proof. exact (eq_refl (term296 _89837 _89861 _89862 _89863 P x f x')). Qed.
Lemma lem3463439 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (x : _89837) (f : type1524 _89837 _89861 _89862 _89863) : (term297 _89837 _89861 _89862 _89863 P x f) = (term168 _89837 _89861 _89862 _89863 P x f).
Proof. exact (fun_ext (fun x' : _89863 => @lem3463438 _89837 _89861 _89862 _89863 P x f x')). Qed.
Lemma lem3463440 {_89863 : Type'} : (@ex _89863) = (@ex _89863).
Proof. exact (eq_refl (@ex _89863)). Qed.
Lemma lem3463441 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (x : _89837) (f : type1524 _89837 _89861 _89862 _89863) : (term298 _89837 _89861 _89862 _89863 P x f) = (term169 _89837 _89861 _89862 _89863 P x f).
Proof. exact (MK_COMB (@lem3463440 _89863) (@lem3463439 _89837 _89861 _89862 _89863 P x f)). Qed.
Lemma lem3463442 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem3463443 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (x : _89837) (f : type1524 _89837 _89861 _89862 _89863) : (term299 _89837 _89861 _89862 _89863 P x f) = (term170 _89837 _89861 _89862 _89863 P x f).
Proof. exact (MK_COMB (@lem3463442) (@lem3463441 _89837 _89861 _89862 _89863 P x f)). Qed.
Lemma lem3463444 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (x : _89837) (f : type1524 _89837 _89861 _89862 _89863) : (term290 _89837 _89861 _89862 _89863 P x f) = (term290 _89837 _89861 _89862 _89863 P x f).
Proof. exact (eq_refl (term290 _89837 _89861 _89862 _89863 P x f)). Qed.
Lemma lem3463445 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (x : _89837) (f : type1524 _89837 _89861 _89862 _89863) : (term294 _89837 _89861 _89862 _89863 P x f) = (term291 _89837 _89861 _89862 _89863 P x f).
Proof. exact (MK_COMB (@lem3463443 _89837 _89861 _89862 _89863 P x f) (@lem3463444 _89837 _89861 _89862 _89863 P x f)). Qed.
Lemma lem3463446 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem3463447 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (x : _89837) (f : type1524 _89837 _89861 _89862 _89863) : (term300 _89837 _89861 _89862 _89863 P x f) = (term301 _89837 _89861 _89862 _89863 P x f).
Proof. exact (MK_COMB (@lem3463446) (@lem3463445 _89837 _89861 _89862 _89863 P x f)). Qed.
Lemma lem3463448 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (x : _89837) (f : type1524 _89837 _89861 _89862 _89863) (x' : _89863) : (term296 _89837 _89861 _89862 _89863 P x f x') = (term167 _89837 _89861 _89862 _89863 P x f x').
Proof. exact (eq_refl (term296 _89837 _89861 _89862 _89863 P x f x')). Qed.
Lemma lem3463449 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem3463450 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (x : _89837) (f : type1524 _89837 _89861 _89862 _89863) (x' : _89863) : (term302 _89837 _89861 _89862 _89863 P x f x') = (term303 _89837 _89861 _89862 _89863 P x f x').
Proof. exact (MK_COMB (@lem3463449) (@lem3463448 _89837 _89861 _89862 _89863 P x f x')). Qed.
Lemma lem3463451 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (x : _89837) (f : type1524 _89837 _89861 _89862 _89863) : (term290 _89837 _89861 _89862 _89863 P x f) = (term290 _89837 _89861 _89862 _89863 P x f).
Proof. exact (eq_refl (term290 _89837 _89861 _89862 _89863 P x f)). Qed.
Lemma lem3463452 {_89837 _89861 _89862 _89863 : Type'} (x : _89863) (P : type1517 _89861 _89862 _89863) (x' : _89837) (f : type1524 _89837 _89861 _89862 _89863) : (term304 _89837 _89861 _89862 _89863 x P x' f) = (term305 _89837 _89861 _89862 _89863 x P x' f).
Proof. exact (MK_COMB (@lem3463450 _89837 _89861 _89862 _89863 P x' f x) (@lem3463451 _89837 _89861 _89862 _89863 P x' f)). Qed.
Lemma lem3463453 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (x : _89837) (f : type1524 _89837 _89861 _89862 _89863) : (term306 _89837 _89861 _89862 _89863 P x f) = (term307 _89837 _89861 _89862 _89863 P x f).
Proof. exact (fun_ext (fun x' : _89863 => @lem3463452 _89837 _89861 _89862 _89863 x' P x f)). Qed.
Lemma lem3463454 {_89863 : Type'} : (@ex _89863) = (@ex _89863).
Proof. exact (eq_refl (@ex _89863)). Qed.
Lemma lem3463455 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (x : _89837) (f : type1524 _89837 _89861 _89862 _89863) : (term295 _89837 _89861 _89862 _89863 P x f) = (term308 _89837 _89861 _89862 _89863 P x f).
Proof. exact (MK_COMB (@lem3463454 _89863) (@lem3463453 _89837 _89861 _89862 _89863 P x f)). Qed.
Lemma lem3463456 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (x : _89837) (f : type1524 _89837 _89861 _89862 _89863) : ((term294 _89837 _89861 _89862 _89863 P x f) = (term295 _89837 _89861 _89862 _89863 P x f)) = ((term291 _89837 _89861 _89862 _89863 P x f) = (term308 _89837 _89861 _89862 _89863 P x f)).
Proof. exact (MK_COMB (@lem3463447 _89837 _89861 _89862 _89863 P x f) (@lem3463455 _89837 _89861 _89862 _89863 P x f)). Qed.
Lemma lem3463457 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (x : _89837) (f : type1524 _89837 _89861 _89862 _89863) : (term291 _89837 _89861 _89862 _89863 P x f) = (term308 _89837 _89861 _89862 _89863 P x f).
Proof. exact (EQ_MP (@lem3463456 _89837 _89861 _89862 _89863 P x f) (@lem3463437 _89837 _89861 _89862 _89863 P x f)). Qed.
Lemma lem3463461 {A : Type'} (P : A -> Prop) (Q : Prop) : (term292 A P Q) = (term293 A P Q).
Proof. exact (EQ_MP (@lem18905 A P Q) (@lem18904 A P Q)). Qed.
Lemma lem3463462 {_89862 : Type'} (P : _89862 -> Prop) (Q : Prop) : (term292 _89862 P Q) = (term293 _89862 P Q).
Proof. exact (@lem3463461 _89862 P Q). Qed.
Lemma lem3463463 {_89837 _89861 _89862 _89863 : Type'} (x : _89863) (P : type1517 _89861 _89862 _89863) (x' : _89837) (f : type1524 _89837 _89861 _89862 _89863) : (term309 _89837 _89861 _89862 _89863 x P x' f) = (term310 _89837 _89861 _89862 _89863 x P x' f).
Proof. exact (@lem3463462 _89862 (term166 _89837 _89861 _89862 _89863 P x' f x) (term290 _89837 _89861 _89862 _89863 P x' f)). Qed.
Lemma lem3463464 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (x : _89837) (f : type1524 _89837 _89861 _89862 _89863) (x' : _89863) (y : _89862) : (term311 _89837 _89861 _89862 _89863 P x f x' y) = (term165 _89837 _89861 _89862 _89863 P x f x' y).
Proof. exact (eq_refl (term311 _89837 _89861 _89862 _89863 P x f x' y)). Qed.
Lemma lem3463465 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (x : _89837) (f : type1524 _89837 _89861 _89862 _89863) (x' : _89863) : (term312 _89837 _89861 _89862 _89863 P x f x') = (term166 _89837 _89861 _89862 _89863 P x f x').
Proof. exact (fun_ext (fun y : _89862 => @lem3463464 _89837 _89861 _89862 _89863 P x f x' y)). Qed.
Lemma lem3463466 {_89862 : Type'} : (@ex _89862) = (@ex _89862).
Proof. exact (eq_refl (@ex _89862)). Qed.
Lemma lem3463467 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (x : _89837) (f : type1524 _89837 _89861 _89862 _89863) (x' : _89863) : (term313 _89837 _89861 _89862 _89863 P x f x') = (term167 _89837 _89861 _89862 _89863 P x f x').
Proof. exact (MK_COMB (@lem3463466 _89862) (@lem3463465 _89837 _89861 _89862 _89863 P x f x')). Qed.
Lemma lem3463468 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem3463469 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (x : _89837) (f : type1524 _89837 _89861 _89862 _89863) (x' : _89863) : (term314 _89837 _89861 _89862 _89863 P x f x') = (term303 _89837 _89861 _89862 _89863 P x f x').
Proof. exact (MK_COMB (@lem3463468) (@lem3463467 _89837 _89861 _89862 _89863 P x f x')). Qed.
Lemma lem3463470 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (x : _89837) (f : type1524 _89837 _89861 _89862 _89863) : (term290 _89837 _89861 _89862 _89863 P x f) = (term290 _89837 _89861 _89862 _89863 P x f).
Proof. exact (eq_refl (term290 _89837 _89861 _89862 _89863 P x f)). Qed.
Lemma lem3463471 {_89837 _89861 _89862 _89863 : Type'} (x : _89863) (P : type1517 _89861 _89862 _89863) (x' : _89837) (f : type1524 _89837 _89861 _89862 _89863) : (term309 _89837 _89861 _89862 _89863 x P x' f) = (term305 _89837 _89861 _89862 _89863 x P x' f).
Proof. exact (MK_COMB (@lem3463469 _89837 _89861 _89862 _89863 P x' f x) (@lem3463470 _89837 _89861 _89862 _89863 P x' f)). Qed.
Lemma lem3463472 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem3463473 {_89837 _89861 _89862 _89863 : Type'} (x : _89863) (P : type1517 _89861 _89862 _89863) (x' : _89837) (f : type1524 _89837 _89861 _89862 _89863) : (term315 _89837 _89861 _89862 _89863 x P x' f) = (term316 _89837 _89861 _89862 _89863 x P x' f).
Proof. exact (MK_COMB (@lem3463472) (@lem3463471 _89837 _89861 _89862 _89863 x P x' f)). Qed.
Lemma lem3463474 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (x : _89837) (f : type1524 _89837 _89861 _89862 _89863) (x' : _89863) (y : _89862) : (term311 _89837 _89861 _89862 _89863 P x f x' y) = (term165 _89837 _89861 _89862 _89863 P x f x' y).
Proof. exact (eq_refl (term311 _89837 _89861 _89862 _89863 P x f x' y)). Qed.
Lemma lem3463475 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem3463476 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (x : _89837) (f : type1524 _89837 _89861 _89862 _89863) (x' : _89863) (y : _89862) : (term317 _89837 _89861 _89862 _89863 P x f x' y) = (term318 _89837 _89861 _89862 _89863 P x f x' y).
Proof. exact (MK_COMB (@lem3463475) (@lem3463474 _89837 _89861 _89862 _89863 P x f x' y)). Qed.
Lemma lem3463477 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (x : _89837) (f : type1524 _89837 _89861 _89862 _89863) : (term290 _89837 _89861 _89862 _89863 P x f) = (term290 _89837 _89861 _89862 _89863 P x f).
Proof. exact (eq_refl (term290 _89837 _89861 _89862 _89863 P x f)). Qed.
Lemma lem3463478 {_89837 _89861 _89862 _89863 : Type'} (x : _89863) (y : _89862) (P : type1517 _89861 _89862 _89863) (x' : _89837) (f : type1524 _89837 _89861 _89862 _89863) : (term319 _89837 _89861 _89862 _89863 x y P x' f) = (term320 _89837 _89861 _89862 _89863 x y P x' f).
Proof. exact (MK_COMB (@lem3463476 _89837 _89861 _89862 _89863 P x' f x y) (@lem3463477 _89837 _89861 _89862 _89863 P x' f)). Qed.
Lemma lem3463479 {_89837 _89861 _89862 _89863 : Type'} (x : _89863) (P : type1517 _89861 _89862 _89863) (x' : _89837) (f : type1524 _89837 _89861 _89862 _89863) : (term321 _89837 _89861 _89862 _89863 x P x' f) = (term322 _89837 _89861 _89862 _89863 x P x' f).
Proof. exact (fun_ext (fun y : _89862 => @lem3463478 _89837 _89861 _89862 _89863 x y P x' f)). Qed.
Lemma lem3463480 {_89862 : Type'} : (@ex _89862) = (@ex _89862).
Proof. exact (eq_refl (@ex _89862)). Qed.
Lemma lem3463481 {_89837 _89861 _89862 _89863 : Type'} (x : _89863) (P : type1517 _89861 _89862 _89863) (x' : _89837) (f : type1524 _89837 _89861 _89862 _89863) : (term310 _89837 _89861 _89862 _89863 x P x' f) = (term323 _89837 _89861 _89862 _89863 x P x' f).
Proof. exact (MK_COMB (@lem3463480 _89862) (@lem3463479 _89837 _89861 _89862 _89863 x P x' f)). Qed.
Lemma lem3463482 {_89837 _89861 _89862 _89863 : Type'} (x : _89863) (P : type1517 _89861 _89862 _89863) (x' : _89837) (f : type1524 _89837 _89861 _89862 _89863) : ((term309 _89837 _89861 _89862 _89863 x P x' f) = (term310 _89837 _89861 _89862 _89863 x P x' f)) = ((term305 _89837 _89861 _89862 _89863 x P x' f) = (term323 _89837 _89861 _89862 _89863 x P x' f)).
Proof. exact (MK_COMB (@lem3463473 _89837 _89861 _89862 _89863 x P x' f) (@lem3463481 _89837 _89861 _89862 _89863 x P x' f)). Qed.
Lemma lem3463483 {_89837 _89861 _89862 _89863 : Type'} (x : _89863) (P : type1517 _89861 _89862 _89863) (x' : _89837) (f : type1524 _89837 _89861 _89862 _89863) : (term305 _89837 _89861 _89862 _89863 x P x' f) = (term323 _89837 _89861 _89862 _89863 x P x' f).
Proof. exact (EQ_MP (@lem3463482 _89837 _89861 _89862 _89863 x P x' f) (@lem3463463 _89837 _89861 _89862 _89863 x P x' f)). Qed.
Lemma lem3463487 {A : Type'} (P : A -> Prop) (Q : Prop) : (term292 A P Q) = (term293 A P Q).
Proof. exact (EQ_MP (@lem18905 A P Q) (@lem18904 A P Q)). Qed.
Lemma lem3463488 {_89861 : Type'} (P : _89861 -> Prop) (Q : Prop) : (term292 _89861 P Q) = (term293 _89861 P Q).
Proof. exact (@lem3463487 _89861 P Q). Qed.
Lemma lem3463489 {_89837 _89861 _89862 _89863 : Type'} (x : _89863) (y : _89862) (P : type1517 _89861 _89862 _89863) (x' : _89837) (f : type1524 _89837 _89861 _89862 _89863) : (term324 _89837 _89861 _89862 _89863 x y P x' f) = (term325 _89837 _89861 _89862 _89863 x y P x' f).
Proof. exact (@lem3463488 _89861 (term164 _89837 _89861 _89862 _89863 P x' f x y) (term290 _89837 _89861 _89862 _89863 P x' f)). Qed.
Lemma lem3463490 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (x : _89837) (f : type1524 _89837 _89861 _89862 _89863) (x' : _89863) (y : _89862) (z : _89861) : (term326 _89837 _89861 _89862 _89863 P x f x' y z) = (term162 _89837 _89861 _89862 _89863 P x f x' y z).
Proof. exact (eq_refl (term326 _89837 _89861 _89862 _89863 P x f x' y z)). Qed.
Lemma lem3463491 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (x : _89837) (f : type1524 _89837 _89861 _89862 _89863) (x' : _89863) (y : _89862) : (term327 _89837 _89861 _89862 _89863 P x f x' y) = (term164 _89837 _89861 _89862 _89863 P x f x' y).
Proof. exact (fun_ext (fun z : _89861 => @lem3463490 _89837 _89861 _89862 _89863 P x f x' y z)). Qed.
Lemma lem3463492 {_89861 : Type'} : (@ex _89861) = (@ex _89861).
Proof. exact (eq_refl (@ex _89861)). Qed.
Lemma lem3463493 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (x : _89837) (f : type1524 _89837 _89861 _89862 _89863) (x' : _89863) (y : _89862) : (term328 _89837 _89861 _89862 _89863 P x f x' y) = (term165 _89837 _89861 _89862 _89863 P x f x' y).
Proof. exact (MK_COMB (@lem3463492 _89861) (@lem3463491 _89837 _89861 _89862 _89863 P x f x' y)). Qed.
Lemma lem3463494 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem3463495 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (x : _89837) (f : type1524 _89837 _89861 _89862 _89863) (x' : _89863) (y : _89862) : (term329 _89837 _89861 _89862 _89863 P x f x' y) = (term318 _89837 _89861 _89862 _89863 P x f x' y).
Proof. exact (MK_COMB (@lem3463494) (@lem3463493 _89837 _89861 _89862 _89863 P x f x' y)). Qed.
Lemma lem3463496 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (x : _89837) (f : type1524 _89837 _89861 _89862 _89863) : (term290 _89837 _89861 _89862 _89863 P x f) = (term290 _89837 _89861 _89862 _89863 P x f).
Proof. exact (eq_refl (term290 _89837 _89861 _89862 _89863 P x f)). Qed.
Lemma lem3463497 {_89837 _89861 _89862 _89863 : Type'} (x : _89863) (y : _89862) (P : type1517 _89861 _89862 _89863) (x' : _89837) (f : type1524 _89837 _89861 _89862 _89863) : (term324 _89837 _89861 _89862 _89863 x y P x' f) = (term320 _89837 _89861 _89862 _89863 x y P x' f).
Proof. exact (MK_COMB (@lem3463495 _89837 _89861 _89862 _89863 P x' f x y) (@lem3463496 _89837 _89861 _89862 _89863 P x' f)). Qed.
Lemma lem3463498 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem3463499 {_89837 _89861 _89862 _89863 : Type'} (x : _89863) (y : _89862) (P : type1517 _89861 _89862 _89863) (x' : _89837) (f : type1524 _89837 _89861 _89862 _89863) : (term330 _89837 _89861 _89862 _89863 x y P x' f) = (term331 _89837 _89861 _89862 _89863 x y P x' f).
Proof. exact (MK_COMB (@lem3463498) (@lem3463497 _89837 _89861 _89862 _89863 x y P x' f)). Qed.
Lemma lem3463500 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (x : _89837) (f : type1524 _89837 _89861 _89862 _89863) (x' : _89863) (y : _89862) (z : _89861) : (term326 _89837 _89861 _89862 _89863 P x f x' y z) = (term162 _89837 _89861 _89862 _89863 P x f x' y z).
Proof. exact (eq_refl (term326 _89837 _89861 _89862 _89863 P x f x' y z)). Qed.
Lemma lem3463501 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem3463502 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (x : _89837) (f : type1524 _89837 _89861 _89862 _89863) (x' : _89863) (y : _89862) (z : _89861) : (term332 _89837 _89861 _89862 _89863 P x f x' y z) = (term333 _89837 _89861 _89862 _89863 P x f x' y z).
Proof. exact (MK_COMB (@lem3463501) (@lem3463500 _89837 _89861 _89862 _89863 P x f x' y z)). Qed.
Lemma lem3463503 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (x : _89837) (f : type1524 _89837 _89861 _89862 _89863) : (term290 _89837 _89861 _89862 _89863 P x f) = (term290 _89837 _89861 _89862 _89863 P x f).
Proof. exact (eq_refl (term290 _89837 _89861 _89862 _89863 P x f)). Qed.
Lemma lem3463504 {_89837 _89861 _89862 _89863 : Type'} (x : _89863) (y : _89862) (z : _89861) (P : type1517 _89861 _89862 _89863) (x' : _89837) (f : type1524 _89837 _89861 _89862 _89863) : (term334 _89837 _89861 _89862 _89863 x y z P x' f) = (term335 _89837 _89861 _89862 _89863 x y z P x' f).
Proof. exact (MK_COMB (@lem3463502 _89837 _89861 _89862 _89863 P x' f x y z) (@lem3463503 _89837 _89861 _89862 _89863 P x' f)). Qed.
Lemma lem3463505 {_89837 _89861 _89862 _89863 : Type'} (x : _89863) (y : _89862) (P : type1517 _89861 _89862 _89863) (x' : _89837) (f : type1524 _89837 _89861 _89862 _89863) : (term336 _89837 _89861 _89862 _89863 x y P x' f) = (term337 _89837 _89861 _89862 _89863 x y P x' f).
Proof. exact (fun_ext (fun z : _89861 => @lem3463504 _89837 _89861 _89862 _89863 x y z P x' f)). Qed.
Lemma lem3463506 {_89861 : Type'} : (@ex _89861) = (@ex _89861).
Proof. exact (eq_refl (@ex _89861)). Qed.
Lemma lem3463507 {_89837 _89861 _89862 _89863 : Type'} (x : _89863) (y : _89862) (P : type1517 _89861 _89862 _89863) (x' : _89837) (f : type1524 _89837 _89861 _89862 _89863) : (term325 _89837 _89861 _89862 _89863 x y P x' f) = (term338 _89837 _89861 _89862 _89863 x y P x' f).
Proof. exact (MK_COMB (@lem3463506 _89861) (@lem3463505 _89837 _89861 _89862 _89863 x y P x' f)). Qed.
Lemma lem3463508 {_89837 _89861 _89862 _89863 : Type'} (x : _89863) (y : _89862) (P : type1517 _89861 _89862 _89863) (x' : _89837) (f : type1524 _89837 _89861 _89862 _89863) : ((term324 _89837 _89861 _89862 _89863 x y P x' f) = (term325 _89837 _89861 _89862 _89863 x y P x' f)) = ((term320 _89837 _89861 _89862 _89863 x y P x' f) = (term338 _89837 _89861 _89862 _89863 x y P x' f)).
Proof. exact (MK_COMB (@lem3463499 _89837 _89861 _89862 _89863 x y P x' f) (@lem3463507 _89837 _89861 _89862 _89863 x y P x' f)). Qed.
Lemma lem3463509 {_89837 _89861 _89862 _89863 : Type'} (x : _89863) (y : _89862) (P : type1517 _89861 _89862 _89863) (x' : _89837) (f : type1524 _89837 _89861 _89862 _89863) : (term320 _89837 _89861 _89862 _89863 x y P x' f) = (term338 _89837 _89861 _89862 _89863 x y P x' f).
Proof. exact (EQ_MP (@lem3463508 _89837 _89861 _89862 _89863 x y P x' f) (@lem3463489 _89837 _89861 _89862 _89863 x y P x' f)). Qed.
Lemma lem3463511 {A : Type'} (P : Prop) (Q : A -> Prop) : (term339 A P Q) = (term340 A P Q).
Proof. exact (EQ_MP (@lem18911 A P Q) (@lem18910 A P Q)). Qed.
Lemma lem3463512 {_89837 : Type'} (P : Prop) (Q : type686 _89837) : (term341 _89837 P Q) = (term342 _89837 P Q).
Proof. exact (@lem3463511 (_89837 -> Prop) P Q). Qed.
Lemma lem3463513 {_89837 _89861 _89862 _89863 : Type'} (x : _89863) (y : _89862) (z : _89861) (P : type1517 _89861 _89862 _89863) (x' : _89837) (f : type1524 _89837 _89861 _89862 _89863) : (term343 _89837 _89861 _89862 _89863 x y z P x' f) = (term344 _89837 _89861 _89862 _89863 x y z P x' f).
Proof. exact (@lem3463512 _89837 (term162 _89837 _89861 _89862 _89863 P x' f x y z) (term289 _89837 _89861 _89862 _89863 P x' f)). Qed.
Lemma lem3463514 {_89837 _89861 _89862 _89863 : Type'} (t : _89837 -> Prop) (P : type1517 _89861 _89862 _89863) (x : _89837) (f : type1524 _89837 _89861 _89862 _89863) : (term345 _89837 _89861 _89862 _89863 P x f t) = (term288 _89837 _89861 _89862 _89863 t P x f).
Proof. exact (eq_refl (term345 _89837 _89861 _89862 _89863 P x f t)). Qed.
Lemma lem3463515 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (x : _89837) (f : type1524 _89837 _89861 _89862 _89863) : (term346 _89837 _89861 _89862 _89863 P x f) = (term289 _89837 _89861 _89862 _89863 P x f).
Proof. exact (fun_ext (fun t : _89837 -> Prop => @lem3463514 _89837 _89861 _89862 _89863 t P x f)). Qed.
Lemma lem3463516 {_89837 : Type'} : (@ex (_89837 -> Prop)) = (@ex (_89837 -> Prop)).
Proof. exact (eq_refl (@ex (_89837 -> Prop))). Qed.
Lemma lem3463517 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (x : _89837) (f : type1524 _89837 _89861 _89862 _89863) : (term347 _89837 _89861 _89862 _89863 P x f) = (term290 _89837 _89861 _89862 _89863 P x f).
Proof. exact (MK_COMB (@lem3463516 _89837) (@lem3463515 _89837 _89861 _89862 _89863 P x f)). Qed.
Lemma lem3463518 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (x : _89837) (f : type1524 _89837 _89861 _89862 _89863) (x' : _89863) (y : _89862) (z : _89861) : (term333 _89837 _89861 _89862 _89863 P x f x' y z) = (term333 _89837 _89861 _89862 _89863 P x f x' y z).
Proof. exact (eq_refl (term333 _89837 _89861 _89862 _89863 P x f x' y z)). Qed.
Lemma lem3463519 {_89837 _89861 _89862 _89863 : Type'} (x : _89863) (y : _89862) (z : _89861) (P : type1517 _89861 _89862 _89863) (x' : _89837) (f : type1524 _89837 _89861 _89862 _89863) : (term343 _89837 _89861 _89862 _89863 x y z P x' f) = (term335 _89837 _89861 _89862 _89863 x y z P x' f).
Proof. exact (MK_COMB (@lem3463518 _89837 _89861 _89862 _89863 P x' f x y z) (@lem3463517 _89837 _89861 _89862 _89863 P x' f)). Qed.
Lemma lem3463520 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem3463521 {_89837 _89861 _89862 _89863 : Type'} (x : _89863) (y : _89862) (z : _89861) (P : type1517 _89861 _89862 _89863) (x' : _89837) (f : type1524 _89837 _89861 _89862 _89863) : (term348 _89837 _89861 _89862 _89863 x y z P x' f) = (term349 _89837 _89861 _89862 _89863 x y z P x' f).
Proof. exact (MK_COMB (@lem3463520) (@lem3463519 _89837 _89861 _89862 _89863 x y z P x' f)). Qed.
Lemma lem3463522 {_89837 _89861 _89862 _89863 : Type'} (t : _89837 -> Prop) (P : type1517 _89861 _89862 _89863) (x : _89837) (f : type1524 _89837 _89861 _89862 _89863) : (term345 _89837 _89861 _89862 _89863 P x f t) = (term288 _89837 _89861 _89862 _89863 t P x f).
Proof. exact (eq_refl (term345 _89837 _89861 _89862 _89863 P x f t)). Qed.
Lemma lem3463523 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (x : _89837) (f : type1524 _89837 _89861 _89862 _89863) (x' : _89863) (y : _89862) (z : _89861) : (term333 _89837 _89861 _89862 _89863 P x f x' y z) = (term333 _89837 _89861 _89862 _89863 P x f x' y z).
Proof. exact (eq_refl (term333 _89837 _89861 _89862 _89863 P x f x' y z)). Qed.
Lemma lem3463524 {_89837 _89861 _89862 _89863 : Type'} (x : _89863) (y : _89862) (z : _89861) (t : _89837 -> Prop) (P : type1517 _89861 _89862 _89863) (x' : _89837) (f : type1524 _89837 _89861 _89862 _89863) : (term350 _89837 _89861 _89862 _89863 x y z P x' f t) = (term351 _89837 _89861 _89862 _89863 x y z t P x' f).
Proof. exact (MK_COMB (@lem3463523 _89837 _89861 _89862 _89863 P x' f x y z) (@lem3463522 _89837 _89861 _89862 _89863 t P x' f)). Qed.
Lemma lem3463525 {_89837 _89861 _89862 _89863 : Type'} (x : _89863) (y : _89862) (z : _89861) (P : type1517 _89861 _89862 _89863) (x' : _89837) (f : type1524 _89837 _89861 _89862 _89863) : (term352 _89837 _89861 _89862 _89863 x y z P x' f) = (term353 _89837 _89861 _89862 _89863 x y z P x' f).
Proof. exact (fun_ext (fun t : _89837 -> Prop => @lem3463524 _89837 _89861 _89862 _89863 x y z t P x' f)). Qed.
Lemma lem3463526 {_89837 : Type'} : (@ex (_89837 -> Prop)) = (@ex (_89837 -> Prop)).
Proof. exact (eq_refl (@ex (_89837 -> Prop))). Qed.
Lemma lem3463527 {_89837 _89861 _89862 _89863 : Type'} (x : _89863) (y : _89862) (z : _89861) (P : type1517 _89861 _89862 _89863) (x' : _89837) (f : type1524 _89837 _89861 _89862 _89863) : (term344 _89837 _89861 _89862 _89863 x y z P x' f) = (term354 _89837 _89861 _89862 _89863 x y z P x' f).
Proof. exact (MK_COMB (@lem3463526 _89837) (@lem3463525 _89837 _89861 _89862 _89863 x y z P x' f)). Qed.
Lemma lem3463528 {_89837 _89861 _89862 _89863 : Type'} (x : _89863) (y : _89862) (z : _89861) (P : type1517 _89861 _89862 _89863) (x' : _89837) (f : type1524 _89837 _89861 _89862 _89863) : ((term343 _89837 _89861 _89862 _89863 x y z P x' f) = (term344 _89837 _89861 _89862 _89863 x y z P x' f)) = ((term335 _89837 _89861 _89862 _89863 x y z P x' f) = (term354 _89837 _89861 _89862 _89863 x y z P x' f)).
Proof. exact (MK_COMB (@lem3463521 _89837 _89861 _89862 _89863 x y z P x' f) (@lem3463527 _89837 _89861 _89862 _89863 x y z P x' f)). Qed.
Lemma lem3463529 {_89837 _89861 _89862 _89863 : Type'} (x : _89863) (y : _89862) (z : _89861) (P : type1517 _89861 _89862 _89863) (x' : _89837) (f : type1524 _89837 _89861 _89862 _89863) : (term335 _89837 _89861 _89862 _89863 x y z P x' f) = (term354 _89837 _89861 _89862 _89863 x y z P x' f).
Proof. exact (EQ_MP (@lem3463528 _89837 _89861 _89862 _89863 x y z P x' f) (@lem3463513 _89837 _89861 _89862 _89863 x y z P x' f)). Qed.
Lemma lem3463531 {A : Type'} (P : Prop) (Q : A -> Prop) : (term339 A P Q) = (term340 A P Q).
Proof. exact (EQ_MP (@lem18911 A P Q) (@lem18910 A P Q)). Qed.
Lemma lem3463532 {_89863 : Type'} (P : Prop) (Q : _89863 -> Prop) : (term339 _89863 P Q) = (term340 _89863 P Q).
Proof. exact (@lem3463531 _89863 P Q). Qed.
Lemma lem3463533 {_89837 _89861 _89862 _89863 : Type'} (x : _89863) (y : _89862) (z : _89861) (t : _89837 -> Prop) (P : type1517 _89861 _89862 _89863) (x' : _89837) (f : type1524 _89837 _89861 _89862 _89863) : (term355 _89837 _89861 _89862 _89863 x y z t P x' f) = (term356 _89837 _89861 _89862 _89863 x y z t P x' f).
Proof. exact (@lem3463532 _89863 (term162 _89837 _89861 _89862 _89863 P x' f x y z) (term287 _89837 _89861 _89862 _89863 t P x' f)). Qed.
Lemma lem3463534 {_89837 _89861 _89862 _89863 : Type'} (x : _89863) (t : _89837 -> Prop) (P : type1517 _89861 _89862 _89863) (x' : _89837) (f : type1524 _89837 _89861 _89862 _89863) : (term357 _89837 _89861 _89862 _89863 t P x' f x) = (term286 _89837 _89861 _89862 _89863 x t P x' f).
Proof. exact (eq_refl (term357 _89837 _89861 _89862 _89863 t P x' f x)). Qed.
Lemma lem3463535 {_89837 _89861 _89862 _89863 : Type'} (t : _89837 -> Prop) (P : type1517 _89861 _89862 _89863) (x : _89837) (f : type1524 _89837 _89861 _89862 _89863) : (term358 _89837 _89861 _89862 _89863 t P x f) = (term287 _89837 _89861 _89862 _89863 t P x f).
Proof. exact (fun_ext (fun x' : _89863 => @lem3463534 _89837 _89861 _89862 _89863 x' t P x f)). Qed.
Lemma lem3463536 {_89863 : Type'} : (@ex _89863) = (@ex _89863).
Proof. exact (eq_refl (@ex _89863)). Qed.
Lemma lem3463537 {_89837 _89861 _89862 _89863 : Type'} (t : _89837 -> Prop) (P : type1517 _89861 _89862 _89863) (x : _89837) (f : type1524 _89837 _89861 _89862 _89863) : (term359 _89837 _89861 _89862 _89863 t P x f) = (term288 _89837 _89861 _89862 _89863 t P x f).
Proof. exact (MK_COMB (@lem3463536 _89863) (@lem3463535 _89837 _89861 _89862 _89863 t P x f)). Qed.
Lemma lem3463538 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (x : _89837) (f : type1524 _89837 _89861 _89862 _89863) (x' : _89863) (y : _89862) (z : _89861) : (term333 _89837 _89861 _89862 _89863 P x f x' y z) = (term333 _89837 _89861 _89862 _89863 P x f x' y z).
Proof. exact (eq_refl (term333 _89837 _89861 _89862 _89863 P x f x' y z)). Qed.
Lemma lem3463539 {_89837 _89861 _89862 _89863 : Type'} (x : _89863) (y : _89862) (z : _89861) (t : _89837 -> Prop) (P : type1517 _89861 _89862 _89863) (x' : _89837) (f : type1524 _89837 _89861 _89862 _89863) : (term355 _89837 _89861 _89862 _89863 x y z t P x' f) = (term351 _89837 _89861 _89862 _89863 x y z t P x' f).
Proof. exact (MK_COMB (@lem3463538 _89837 _89861 _89862 _89863 P x' f x y z) (@lem3463537 _89837 _89861 _89862 _89863 t P x' f)). Qed.
Lemma lem3463540 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem3463541 {_89837 _89861 _89862 _89863 : Type'} (x : _89863) (y : _89862) (z : _89861) (t : _89837 -> Prop) (P : type1517 _89861 _89862 _89863) (x' : _89837) (f : type1524 _89837 _89861 _89862 _89863) : (term360 _89837 _89861 _89862 _89863 x y z t P x' f) = (term361 _89837 _89861 _89862 _89863 x y z t P x' f).
Proof. exact (MK_COMB (@lem3463540) (@lem3463539 _89837 _89861 _89862 _89863 x y z t P x' f)). Qed.
Lemma lem3463542 {_89837 _89861 _89862 _89863 : Type'} (x' : _89863) (t : _89837 -> Prop) (P : type1517 _89861 _89862 _89863) (x : _89837) (f : type1524 _89837 _89861 _89862 _89863) : (term357 _89837 _89861 _89862 _89863 t P x f x') = (term286 _89837 _89861 _89862 _89863 x' t P x f).
Proof. exact (eq_refl (term357 _89837 _89861 _89862 _89863 t P x f x')). Qed.
Lemma lem3463543 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (x : _89837) (f : type1524 _89837 _89861 _89862 _89863) (x' : _89863) (y : _89862) (z : _89861) : (term333 _89837 _89861 _89862 _89863 P x f x' y z) = (term333 _89837 _89861 _89862 _89863 P x f x' y z).
Proof. exact (eq_refl (term333 _89837 _89861 _89862 _89863 P x f x' y z)). Qed.
Lemma lem3463544 {_89837 _89861 _89862 _89863 : Type'} (x : _89863) (y : _89862) (z : _89861) (x' : _89863) (t : _89837 -> Prop) (P : type1517 _89861 _89862 _89863) (x'' : _89837) (f : type1524 _89837 _89861 _89862 _89863) : (term362 _89837 _89861 _89862 _89863 x y z t P x'' f x') = (term363 _89837 _89861 _89862 _89863 x y z x' t P x'' f).
Proof. exact (MK_COMB (@lem3463543 _89837 _89861 _89862 _89863 P x'' f x y z) (@lem3463542 _89837 _89861 _89862 _89863 x' t P x'' f)). Qed.
Lemma lem3463545 {_89837 _89861 _89862 _89863 : Type'} (x : _89863) (y : _89862) (z : _89861) (t : _89837 -> Prop) (P : type1517 _89861 _89862 _89863) (x' : _89837) (f : type1524 _89837 _89861 _89862 _89863) : (term364 _89837 _89861 _89862 _89863 x y z t P x' f) = (term365 _89837 _89861 _89862 _89863 x y z t P x' f).
Proof. exact (fun_ext (fun x'' : _89863 => @lem3463544 _89837 _89861 _89862 _89863 x y z x'' t P x' f)). Qed.
Lemma lem3463546 {_89863 : Type'} : (@ex _89863) = (@ex _89863).
Proof. exact (eq_refl (@ex _89863)). Qed.
Lemma lem3463547 {_89837 _89861 _89862 _89863 : Type'} (x : _89863) (y : _89862) (z : _89861) (t : _89837 -> Prop) (P : type1517 _89861 _89862 _89863) (x' : _89837) (f : type1524 _89837 _89861 _89862 _89863) : (term356 _89837 _89861 _89862 _89863 x y z t P x' f) = (term366 _89837 _89861 _89862 _89863 x y z t P x' f).
Proof. exact (MK_COMB (@lem3463546 _89863) (@lem3463545 _89837 _89861 _89862 _89863 x y z t P x' f)). Qed.
Lemma lem3463548 {_89837 _89861 _89862 _89863 : Type'} (x : _89863) (y : _89862) (z : _89861) (t : _89837 -> Prop) (P : type1517 _89861 _89862 _89863) (x' : _89837) (f : type1524 _89837 _89861 _89862 _89863) : ((term355 _89837 _89861 _89862 _89863 x y z t P x' f) = (term356 _89837 _89861 _89862 _89863 x y z t P x' f)) = ((term351 _89837 _89861 _89862 _89863 x y z t P x' f) = (term366 _89837 _89861 _89862 _89863 x y z t P x' f)).
Proof. exact (MK_COMB (@lem3463541 _89837 _89861 _89862 _89863 x y z t P x' f) (@lem3463547 _89837 _89861 _89862 _89863 x y z t P x' f)). Qed.
Lemma lem3463549 {_89837 _89861 _89862 _89863 : Type'} (x : _89863) (y : _89862) (z : _89861) (t : _89837 -> Prop) (P : type1517 _89861 _89862 _89863) (x' : _89837) (f : type1524 _89837 _89861 _89862 _89863) : (term351 _89837 _89861 _89862 _89863 x y z t P x' f) = (term366 _89837 _89861 _89862 _89863 x y z t P x' f).
Proof. exact (EQ_MP (@lem3463548 _89837 _89861 _89862 _89863 x y z t P x' f) (@lem3463533 _89837 _89861 _89862 _89863 x y z t P x' f)). Qed.
Lemma lem3463551 {A : Type'} (P : Prop) (Q : A -> Prop) : (term339 A P Q) = (term340 A P Q).
Proof. exact (EQ_MP (@lem18911 A P Q) (@lem18910 A P Q)). Qed.
Lemma lem3463552 {_89862 : Type'} (P : Prop) (Q : _89862 -> Prop) : (term339 _89862 P Q) = (term340 _89862 P Q).
Proof. exact (@lem3463551 _89862 P Q). Qed.
Lemma lem3463553 {_89837 _89861 _89862 _89863 : Type'} (x : _89863) (y : _89862) (z : _89861) (x' : _89863) (t : _89837 -> Prop) (P : type1517 _89861 _89862 _89863) (x'' : _89837) (f : type1524 _89837 _89861 _89862 _89863) : (term367 _89837 _89861 _89862 _89863 x y z x' t P x'' f) = (term368 _89837 _89861 _89862 _89863 x y z x' t P x'' f).
Proof. exact (@lem3463552 _89862 (term162 _89837 _89861 _89862 _89863 P x'' f x y z) (term285 _89837 _89861 _89862 _89863 x' t P x'' f)). Qed.
Lemma lem3463554 {_89837 _89861 _89862 _89863 : Type'} (x' : _89863) (y : _89862) (t : _89837 -> Prop) (P : type1517 _89861 _89862 _89863) (x : _89837) (f : type1524 _89837 _89861 _89862 _89863) : (term369 _89837 _89861 _89862 _89863 x' t P x f y) = (term284 _89837 _89861 _89862 _89863 x' y t P x f).
Proof. exact (eq_refl (term369 _89837 _89861 _89862 _89863 x' t P x f y)). Qed.
Lemma lem3463555 {_89837 _89861 _89862 _89863 : Type'} (x' : _89863) (t : _89837 -> Prop) (P : type1517 _89861 _89862 _89863) (x : _89837) (f : type1524 _89837 _89861 _89862 _89863) : (term370 _89837 _89861 _89862 _89863 x' t P x f) = (term285 _89837 _89861 _89862 _89863 x' t P x f).
Proof. exact (fun_ext (fun y : _89862 => @lem3463554 _89837 _89861 _89862 _89863 x' y t P x f)). Qed.
Lemma lem3463556 {_89862 : Type'} : (@ex _89862) = (@ex _89862).
Proof. exact (eq_refl (@ex _89862)). Qed.
Lemma lem3463557 {_89837 _89861 _89862 _89863 : Type'} (x' : _89863) (t : _89837 -> Prop) (P : type1517 _89861 _89862 _89863) (x : _89837) (f : type1524 _89837 _89861 _89862 _89863) : (term371 _89837 _89861 _89862 _89863 x' t P x f) = (term286 _89837 _89861 _89862 _89863 x' t P x f).
Proof. exact (MK_COMB (@lem3463556 _89862) (@lem3463555 _89837 _89861 _89862 _89863 x' t P x f)). Qed.
Lemma lem3463558 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (x : _89837) (f : type1524 _89837 _89861 _89862 _89863) (x' : _89863) (y : _89862) (z : _89861) : (term333 _89837 _89861 _89862 _89863 P x f x' y z) = (term333 _89837 _89861 _89862 _89863 P x f x' y z).
Proof. exact (eq_refl (term333 _89837 _89861 _89862 _89863 P x f x' y z)). Qed.
Lemma lem3463559 {_89837 _89861 _89862 _89863 : Type'} (x : _89863) (y : _89862) (z : _89861) (x' : _89863) (t : _89837 -> Prop) (P : type1517 _89861 _89862 _89863) (x'' : _89837) (f : type1524 _89837 _89861 _89862 _89863) : (term367 _89837 _89861 _89862 _89863 x y z x' t P x'' f) = (term363 _89837 _89861 _89862 _89863 x y z x' t P x'' f).
Proof. exact (MK_COMB (@lem3463558 _89837 _89861 _89862 _89863 P x'' f x y z) (@lem3463557 _89837 _89861 _89862 _89863 x' t P x'' f)). Qed.
Lemma lem3463560 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem3463561 {_89837 _89861 _89862 _89863 : Type'} (x : _89863) (y : _89862) (z : _89861) (x' : _89863) (t : _89837 -> Prop) (P : type1517 _89861 _89862 _89863) (x'' : _89837) (f : type1524 _89837 _89861 _89862 _89863) : (term372 _89837 _89861 _89862 _89863 x y z x' t P x'' f) = (term373 _89837 _89861 _89862 _89863 x y z x' t P x'' f).
Proof. exact (MK_COMB (@lem3463560) (@lem3463559 _89837 _89861 _89862 _89863 x y z x' t P x'' f)). Qed.
Lemma lem3463562 {_89837 _89861 _89862 _89863 : Type'} (x' : _89863) (y' : _89862) (t : _89837 -> Prop) (P : type1517 _89861 _89862 _89863) (x : _89837) (f : type1524 _89837 _89861 _89862 _89863) : (term369 _89837 _89861 _89862 _89863 x' t P x f y') = (term284 _89837 _89861 _89862 _89863 x' y' t P x f).
Proof. exact (eq_refl (term369 _89837 _89861 _89862 _89863 x' t P x f y')). Qed.
Lemma lem3463563 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (x : _89837) (f : type1524 _89837 _89861 _89862 _89863) (x' : _89863) (y : _89862) (z : _89861) : (term333 _89837 _89861 _89862 _89863 P x f x' y z) = (term333 _89837 _89861 _89862 _89863 P x f x' y z).
Proof. exact (eq_refl (term333 _89837 _89861 _89862 _89863 P x f x' y z)). Qed.
Lemma lem3463564 {_89837 _89861 _89862 _89863 : Type'} (x : _89863) (y : _89862) (z : _89861) (x' : _89863) (y' : _89862) (t : _89837 -> Prop) (P : type1517 _89861 _89862 _89863) (x'' : _89837) (f : type1524 _89837 _89861 _89862 _89863) : (term374 _89837 _89861 _89862 _89863 x y z x' t P x'' f y') = (term375 _89837 _89861 _89862 _89863 x y z x' y' t P x'' f).
Proof. exact (MK_COMB (@lem3463563 _89837 _89861 _89862 _89863 P x'' f x y z) (@lem3463562 _89837 _89861 _89862 _89863 x' y' t P x'' f)). Qed.
Lemma lem3463565 {_89837 _89861 _89862 _89863 : Type'} (x : _89863) (y : _89862) (z : _89861) (x' : _89863) (t : _89837 -> Prop) (P : type1517 _89861 _89862 _89863) (x'' : _89837) (f : type1524 _89837 _89861 _89862 _89863) : (term376 _89837 _89861 _89862 _89863 x y z x' t P x'' f) = (term377 _89837 _89861 _89862 _89863 x y z x' t P x'' f).
Proof. exact (fun_ext (fun y' : _89862 => @lem3463564 _89837 _89861 _89862 _89863 x y z x' y' t P x'' f)). Qed.
Lemma lem3463566 {_89862 : Type'} : (@ex _89862) = (@ex _89862).
Proof. exact (eq_refl (@ex _89862)). Qed.
Lemma lem3463567 {_89837 _89861 _89862 _89863 : Type'} (x : _89863) (y : _89862) (z : _89861) (x' : _89863) (t : _89837 -> Prop) (P : type1517 _89861 _89862 _89863) (x'' : _89837) (f : type1524 _89837 _89861 _89862 _89863) : (term368 _89837 _89861 _89862 _89863 x y z x' t P x'' f) = (term378 _89837 _89861 _89862 _89863 x y z x' t P x'' f).
Proof. exact (MK_COMB (@lem3463566 _89862) (@lem3463565 _89837 _89861 _89862 _89863 x y z x' t P x'' f)). Qed.
Lemma lem3463568 {_89837 _89861 _89862 _89863 : Type'} (x : _89863) (y : _89862) (z : _89861) (x' : _89863) (t : _89837 -> Prop) (P : type1517 _89861 _89862 _89863) (x'' : _89837) (f : type1524 _89837 _89861 _89862 _89863) : ((term367 _89837 _89861 _89862 _89863 x y z x' t P x'' f) = (term368 _89837 _89861 _89862 _89863 x y z x' t P x'' f)) = ((term363 _89837 _89861 _89862 _89863 x y z x' t P x'' f) = (term378 _89837 _89861 _89862 _89863 x y z x' t P x'' f)).
Proof. exact (MK_COMB (@lem3463561 _89837 _89861 _89862 _89863 x y z x' t P x'' f) (@lem3463567 _89837 _89861 _89862 _89863 x y z x' t P x'' f)). Qed.
Lemma lem3463569 {_89837 _89861 _89862 _89863 : Type'} (x : _89863) (y : _89862) (z : _89861) (x' : _89863) (t : _89837 -> Prop) (P : type1517 _89861 _89862 _89863) (x'' : _89837) (f : type1524 _89837 _89861 _89862 _89863) : (term363 _89837 _89861 _89862 _89863 x y z x' t P x'' f) = (term378 _89837 _89861 _89862 _89863 x y z x' t P x'' f).
Proof. exact (EQ_MP (@lem3463568 _89837 _89861 _89862 _89863 x y z x' t P x'' f) (@lem3463553 _89837 _89861 _89862 _89863 x y z x' t P x'' f)). Qed.
Lemma lem3463571 {A : Type'} (P : Prop) (Q : A -> Prop) : (term339 A P Q) = (term340 A P Q).
Proof. exact (EQ_MP (@lem18911 A P Q) (@lem18910 A P Q)). Qed.
Lemma lem3463572 {_89861 : Type'} (P : Prop) (Q : _89861 -> Prop) : (term339 _89861 P Q) = (term340 _89861 P Q).
Proof. exact (@lem3463571 _89861 P Q). Qed.
Lemma lem3463573 {_89837 _89861 _89862 _89863 : Type'} (x : _89863) (y : _89862) (z : _89861) (x' : _89863) (y' : _89862) (t : _89837 -> Prop) (P : type1517 _89861 _89862 _89863) (x'' : _89837) (f : type1524 _89837 _89861 _89862 _89863) : (term379 _89837 _89861 _89862 _89863 x y z x' y' t P x'' f) = (term380 _89837 _89861 _89862 _89863 x y z x' y' t P x'' f).
Proof. exact (@lem3463572 _89861 (term162 _89837 _89861 _89862 _89863 P x'' f x y z) (term283 _89837 _89861 _89862 _89863 x' y' t P x'' f)). Qed.
Lemma lem3463574 {_89837 _89861 _89862 _89863 : Type'} (x' : _89863) (y' : _89862) (z : _89861) (t : _89837 -> Prop) (P : type1517 _89861 _89862 _89863) (x : _89837) (f : type1524 _89837 _89861 _89862 _89863) : (term381 _89837 _89861 _89862 _89863 x' y' t P x f z) = (term281 _89837 _89861 _89862 _89863 x' y' z t P x f).
Proof. exact (eq_refl (term381 _89837 _89861 _89862 _89863 x' y' t P x f z)). Qed.
Lemma lem3463575 {_89837 _89861 _89862 _89863 : Type'} (x' : _89863) (y' : _89862) (t : _89837 -> Prop) (P : type1517 _89861 _89862 _89863) (x : _89837) (f : type1524 _89837 _89861 _89862 _89863) : (term382 _89837 _89861 _89862 _89863 x' y' t P x f) = (term283 _89837 _89861 _89862 _89863 x' y' t P x f).
Proof. exact (fun_ext (fun z : _89861 => @lem3463574 _89837 _89861 _89862 _89863 x' y' z t P x f)). Qed.
Lemma lem3463576 {_89861 : Type'} : (@ex _89861) = (@ex _89861).
Proof. exact (eq_refl (@ex _89861)). Qed.
Lemma lem3463577 {_89837 _89861 _89862 _89863 : Type'} (x' : _89863) (y' : _89862) (t : _89837 -> Prop) (P : type1517 _89861 _89862 _89863) (x : _89837) (f : type1524 _89837 _89861 _89862 _89863) : (term383 _89837 _89861 _89862 _89863 x' y' t P x f) = (term284 _89837 _89861 _89862 _89863 x' y' t P x f).
Proof. exact (MK_COMB (@lem3463576 _89861) (@lem3463575 _89837 _89861 _89862 _89863 x' y' t P x f)). Qed.
Lemma lem3463578 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (x : _89837) (f : type1524 _89837 _89861 _89862 _89863) (x' : _89863) (y : _89862) (z : _89861) : (term333 _89837 _89861 _89862 _89863 P x f x' y z) = (term333 _89837 _89861 _89862 _89863 P x f x' y z).
Proof. exact (eq_refl (term333 _89837 _89861 _89862 _89863 P x f x' y z)). Qed.
Lemma lem3463579 {_89837 _89861 _89862 _89863 : Type'} (x : _89863) (y : _89862) (z : _89861) (x' : _89863) (y' : _89862) (t : _89837 -> Prop) (P : type1517 _89861 _89862 _89863) (x'' : _89837) (f : type1524 _89837 _89861 _89862 _89863) : (term379 _89837 _89861 _89862 _89863 x y z x' y' t P x'' f) = (term375 _89837 _89861 _89862 _89863 x y z x' y' t P x'' f).
Proof. exact (MK_COMB (@lem3463578 _89837 _89861 _89862 _89863 P x'' f x y z) (@lem3463577 _89837 _89861 _89862 _89863 x' y' t P x'' f)). Qed.
Lemma lem3463580 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem3463581 {_89837 _89861 _89862 _89863 : Type'} (x : _89863) (y : _89862) (z : _89861) (x' : _89863) (y' : _89862) (t : _89837 -> Prop) (P : type1517 _89861 _89862 _89863) (x'' : _89837) (f : type1524 _89837 _89861 _89862 _89863) : (term384 _89837 _89861 _89862 _89863 x y z x' y' t P x'' f) = (term385 _89837 _89861 _89862 _89863 x y z x' y' t P x'' f).
Proof. exact (MK_COMB (@lem3463580) (@lem3463579 _89837 _89861 _89862 _89863 x y z x' y' t P x'' f)). Qed.
Lemma lem3463582 {_89837 _89861 _89862 _89863 : Type'} (x' : _89863) (y' : _89862) (z' : _89861) (t : _89837 -> Prop) (P : type1517 _89861 _89862 _89863) (x : _89837) (f : type1524 _89837 _89861 _89862 _89863) : (term381 _89837 _89861 _89862 _89863 x' y' t P x f z') = (term281 _89837 _89861 _89862 _89863 x' y' z' t P x f).
Proof. exact (eq_refl (term381 _89837 _89861 _89862 _89863 x' y' t P x f z')). Qed.
Lemma lem3463583 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (x : _89837) (f : type1524 _89837 _89861 _89862 _89863) (x' : _89863) (y : _89862) (z : _89861) : (term333 _89837 _89861 _89862 _89863 P x f x' y z) = (term333 _89837 _89861 _89862 _89863 P x f x' y z).
Proof. exact (eq_refl (term333 _89837 _89861 _89862 _89863 P x f x' y z)). Qed.
Lemma lem3463584 {_89837 _89861 _89862 _89863 : Type'} (x : _89863) (y : _89862) (z : _89861) (x' : _89863) (y' : _89862) (z' : _89861) (t : _89837 -> Prop) (P : type1517 _89861 _89862 _89863) (x'' : _89837) (f : type1524 _89837 _89861 _89862 _89863) : (term386 _89837 _89861 _89862 _89863 x y z x' y' t P x'' f z') = (term387 _89837 _89861 _89862 _89863 x y z x' y' z' t P x'' f).
Proof. exact (MK_COMB (@lem3463583 _89837 _89861 _89862 _89863 P x'' f x y z) (@lem3463582 _89837 _89861 _89862 _89863 x' y' z' t P x'' f)). Qed.
Lemma lem3463585 {_89837 _89861 _89862 _89863 : Type'} (x : _89863) (y : _89862) (z : _89861) (x' : _89863) (y' : _89862) (t : _89837 -> Prop) (P : type1517 _89861 _89862 _89863) (x'' : _89837) (f : type1524 _89837 _89861 _89862 _89863) : (term388 _89837 _89861 _89862 _89863 x y z x' y' t P x'' f) = (term389 _89837 _89861 _89862 _89863 x y z x' y' t P x'' f).
Proof. exact (fun_ext (fun z' : _89861 => @lem3463584 _89837 _89861 _89862 _89863 x y z x' y' z' t P x'' f)). Qed.
Lemma lem3463586 {_89861 : Type'} : (@ex _89861) = (@ex _89861).
Proof. exact (eq_refl (@ex _89861)). Qed.
Lemma lem3463587 {_89837 _89861 _89862 _89863 : Type'} (x : _89863) (y : _89862) (z : _89861) (x' : _89863) (y' : _89862) (t : _89837 -> Prop) (P : type1517 _89861 _89862 _89863) (x'' : _89837) (f : type1524 _89837 _89861 _89862 _89863) : (term380 _89837 _89861 _89862 _89863 x y z x' y' t P x'' f) = (term390 _89837 _89861 _89862 _89863 x y z x' y' t P x'' f).
Proof. exact (MK_COMB (@lem3463586 _89861) (@lem3463585 _89837 _89861 _89862 _89863 x y z x' y' t P x'' f)). Qed.
Lemma lem3463588 {_89837 _89861 _89862 _89863 : Type'} (x : _89863) (y : _89862) (z : _89861) (x' : _89863) (y' : _89862) (t : _89837 -> Prop) (P : type1517 _89861 _89862 _89863) (x'' : _89837) (f : type1524 _89837 _89861 _89862 _89863) : ((term379 _89837 _89861 _89862 _89863 x y z x' y' t P x'' f) = (term380 _89837 _89861 _89862 _89863 x y z x' y' t P x'' f)) = ((term375 _89837 _89861 _89862 _89863 x y z x' y' t P x'' f) = (term390 _89837 _89861 _89862 _89863 x y z x' y' t P x'' f)).
Proof. exact (MK_COMB (@lem3463581 _89837 _89861 _89862 _89863 x y z x' y' t P x'' f) (@lem3463587 _89837 _89861 _89862 _89863 x y z x' y' t P x'' f)). Qed.
Lemma lem3463589 {_89837 _89861 _89862 _89863 : Type'} (x : _89863) (y : _89862) (z : _89861) (x' : _89863) (y' : _89862) (t : _89837 -> Prop) (P : type1517 _89861 _89862 _89863) (x'' : _89837) (f : type1524 _89837 _89861 _89862 _89863) : (term375 _89837 _89861 _89862 _89863 x y z x' y' t P x'' f) = (term390 _89837 _89861 _89862 _89863 x y z x' y' t P x'' f).
Proof. exact (EQ_MP (@lem3463588 _89837 _89861 _89862 _89863 x y z x' y' t P x'' f) (@lem3463573 _89837 _89861 _89862 _89863 x y z x' y' t P x'' f)). Qed.
Lemma lem3463590 {_89837 _89861 _89862 _89863 : Type'} (x : _89863) (y : _89862) (z : _89861) (x' : _89863) (t : _89837 -> Prop) (P : type1517 _89861 _89862 _89863) (x'' : _89837) (f : type1524 _89837 _89861 _89862 _89863) : (term377 _89837 _89861 _89862 _89863 x y z x' t P x'' f) = (term391 _89837 _89861 _89862 _89863 x y z x' t P x'' f).
Proof. exact (fun_ext (fun y' : _89862 => @lem3463589 _89837 _89861 _89862 _89863 x y z x' y' t P x'' f)). Qed.
Lemma lem3463591 {_89862 : Type'} : (@ex _89862) = (@ex _89862).
Proof. exact (eq_refl (@ex _89862)). Qed.
Lemma lem3463592 {_89837 _89861 _89862 _89863 : Type'} (x : _89863) (y : _89862) (z : _89861) (x' : _89863) (t : _89837 -> Prop) (P : type1517 _89861 _89862 _89863) (x'' : _89837) (f : type1524 _89837 _89861 _89862 _89863) : (term378 _89837 _89861 _89862 _89863 x y z x' t P x'' f) = (term392 _89837 _89861 _89862 _89863 x y z x' t P x'' f).
Proof. exact (MK_COMB (@lem3463591 _89862) (@lem3463590 _89837 _89861 _89862 _89863 x y z x' t P x'' f)). Qed.
Lemma lem3463593 {_89837 _89861 _89862 _89863 : Type'} (x : _89863) (y : _89862) (z : _89861) (x' : _89863) (t : _89837 -> Prop) (P : type1517 _89861 _89862 _89863) (x'' : _89837) (f : type1524 _89837 _89861 _89862 _89863) : (term363 _89837 _89861 _89862 _89863 x y z x' t P x'' f) = (term392 _89837 _89861 _89862 _89863 x y z x' t P x'' f).
Proof. exact (TRANS (@lem3463569 _89837 _89861 _89862 _89863 x y z x' t P x'' f) (@lem3463592 _89837 _89861 _89862 _89863 x y z x' t P x'' f)). Qed.
Lemma lem3463594 {_89837 _89861 _89862 _89863 : Type'} (x : _89863) (y : _89862) (z : _89861) (t : _89837 -> Prop) (P : type1517 _89861 _89862 _89863) (x' : _89837) (f : type1524 _89837 _89861 _89862 _89863) : (term365 _89837 _89861 _89862 _89863 x y z t P x' f) = (term393 _89837 _89861 _89862 _89863 x y z t P x' f).
Proof. exact (fun_ext (fun x'' : _89863 => @lem3463593 _89837 _89861 _89862 _89863 x y z x'' t P x' f)). Qed.
Lemma lem3463595 {_89863 : Type'} : (@ex _89863) = (@ex _89863).
Proof. exact (eq_refl (@ex _89863)). Qed.
Lemma lem3463596 {_89837 _89861 _89862 _89863 : Type'} (x : _89863) (y : _89862) (z : _89861) (t : _89837 -> Prop) (P : type1517 _89861 _89862 _89863) (x' : _89837) (f : type1524 _89837 _89861 _89862 _89863) : (term366 _89837 _89861 _89862 _89863 x y z t P x' f) = (term394 _89837 _89861 _89862 _89863 x y z t P x' f).
Proof. exact (MK_COMB (@lem3463595 _89863) (@lem3463594 _89837 _89861 _89862 _89863 x y z t P x' f)). Qed.
Lemma lem3463597 {_89837 _89861 _89862 _89863 : Type'} (x : _89863) (y : _89862) (z : _89861) (t : _89837 -> Prop) (P : type1517 _89861 _89862 _89863) (x' : _89837) (f : type1524 _89837 _89861 _89862 _89863) : (term351 _89837 _89861 _89862 _89863 x y z t P x' f) = (term394 _89837 _89861 _89862 _89863 x y z t P x' f).
Proof. exact (TRANS (@lem3463549 _89837 _89861 _89862 _89863 x y z t P x' f) (@lem3463596 _89837 _89861 _89862 _89863 x y z t P x' f)). Qed.
Lemma lem3463598 {_89837 _89861 _89862 _89863 : Type'} (x : _89863) (y : _89862) (z : _89861) (P : type1517 _89861 _89862 _89863) (x' : _89837) (f : type1524 _89837 _89861 _89862 _89863) : (term353 _89837 _89861 _89862 _89863 x y z P x' f) = (term395 _89837 _89861 _89862 _89863 x y z P x' f).
Proof. exact (fun_ext (fun t : _89837 -> Prop => @lem3463597 _89837 _89861 _89862 _89863 x y z t P x' f)). Qed.
Lemma lem3463599 {_89837 : Type'} : (@ex (_89837 -> Prop)) = (@ex (_89837 -> Prop)).
Proof. exact (eq_refl (@ex (_89837 -> Prop))). Qed.
Lemma lem3463600 {_89837 _89861 _89862 _89863 : Type'} (x : _89863) (y : _89862) (z : _89861) (P : type1517 _89861 _89862 _89863) (x' : _89837) (f : type1524 _89837 _89861 _89862 _89863) : (term354 _89837 _89861 _89862 _89863 x y z P x' f) = (term396 _89837 _89861 _89862 _89863 x y z P x' f).
Proof. exact (MK_COMB (@lem3463599 _89837) (@lem3463598 _89837 _89861 _89862 _89863 x y z P x' f)). Qed.
Lemma lem3463601 {_89837 _89861 _89862 _89863 : Type'} (x : _89863) (y : _89862) (z : _89861) (P : type1517 _89861 _89862 _89863) (x' : _89837) (f : type1524 _89837 _89861 _89862 _89863) : (term335 _89837 _89861 _89862 _89863 x y z P x' f) = (term396 _89837 _89861 _89862 _89863 x y z P x' f).
Proof. exact (TRANS (@lem3463529 _89837 _89861 _89862 _89863 x y z P x' f) (@lem3463600 _89837 _89861 _89862 _89863 x y z P x' f)). Qed.
Lemma lem3463602 {_89837 _89861 _89862 _89863 : Type'} (x : _89863) (y : _89862) (P : type1517 _89861 _89862 _89863) (x' : _89837) (f : type1524 _89837 _89861 _89862 _89863) : (term337 _89837 _89861 _89862 _89863 x y P x' f) = (term397 _89837 _89861 _89862 _89863 x y P x' f).
Proof. exact (fun_ext (fun z : _89861 => @lem3463601 _89837 _89861 _89862 _89863 x y z P x' f)). Qed.
Lemma lem3463603 {_89861 : Type'} : (@ex _89861) = (@ex _89861).
Proof. exact (eq_refl (@ex _89861)). Qed.
Lemma lem3463604 {_89837 _89861 _89862 _89863 : Type'} (x : _89863) (y : _89862) (P : type1517 _89861 _89862 _89863) (x' : _89837) (f : type1524 _89837 _89861 _89862 _89863) : (term338 _89837 _89861 _89862 _89863 x y P x' f) = (term398 _89837 _89861 _89862 _89863 x y P x' f).
Proof. exact (MK_COMB (@lem3463603 _89861) (@lem3463602 _89837 _89861 _89862 _89863 x y P x' f)). Qed.
Lemma lem3463605 {_89837 _89861 _89862 _89863 : Type'} (x : _89863) (y : _89862) (P : type1517 _89861 _89862 _89863) (x' : _89837) (f : type1524 _89837 _89861 _89862 _89863) : (term320 _89837 _89861 _89862 _89863 x y P x' f) = (term398 _89837 _89861 _89862 _89863 x y P x' f).
Proof. exact (TRANS (@lem3463509 _89837 _89861 _89862 _89863 x y P x' f) (@lem3463604 _89837 _89861 _89862 _89863 x y P x' f)). Qed.
Lemma lem3463606 {_89837 _89861 _89862 _89863 : Type'} (x : _89863) (P : type1517 _89861 _89862 _89863) (x' : _89837) (f : type1524 _89837 _89861 _89862 _89863) : (term322 _89837 _89861 _89862 _89863 x P x' f) = (term399 _89837 _89861 _89862 _89863 x P x' f).
Proof. exact (fun_ext (fun y : _89862 => @lem3463605 _89837 _89861 _89862 _89863 x y P x' f)). Qed.
Lemma lem3463607 {_89862 : Type'} : (@ex _89862) = (@ex _89862).
Proof. exact (eq_refl (@ex _89862)). Qed.
Lemma lem3463608 {_89837 _89861 _89862 _89863 : Type'} (x : _89863) (P : type1517 _89861 _89862 _89863) (x' : _89837) (f : type1524 _89837 _89861 _89862 _89863) : (term323 _89837 _89861 _89862 _89863 x P x' f) = (term400 _89837 _89861 _89862 _89863 x P x' f).
Proof. exact (MK_COMB (@lem3463607 _89862) (@lem3463606 _89837 _89861 _89862 _89863 x P x' f)). Qed.
Lemma lem3463609 {_89837 _89861 _89862 _89863 : Type'} (x : _89863) (P : type1517 _89861 _89862 _89863) (x' : _89837) (f : type1524 _89837 _89861 _89862 _89863) : (term305 _89837 _89861 _89862 _89863 x P x' f) = (term400 _89837 _89861 _89862 _89863 x P x' f).
Proof. exact (TRANS (@lem3463483 _89837 _89861 _89862 _89863 x P x' f) (@lem3463608 _89837 _89861 _89862 _89863 x P x' f)). Qed.
Lemma lem3463610 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (x : _89837) (f : type1524 _89837 _89861 _89862 _89863) : (term307 _89837 _89861 _89862 _89863 P x f) = (term401 _89837 _89861 _89862 _89863 P x f).
Proof. exact (fun_ext (fun x' : _89863 => @lem3463609 _89837 _89861 _89862 _89863 x' P x f)). Qed.
Lemma lem3463611 {_89863 : Type'} : (@ex _89863) = (@ex _89863).
Proof. exact (eq_refl (@ex _89863)). Qed.
Lemma lem3463612 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (x : _89837) (f : type1524 _89837 _89861 _89862 _89863) : (term308 _89837 _89861 _89862 _89863 P x f) = (term402 _89837 _89861 _89862 _89863 P x f).
Proof. exact (MK_COMB (@lem3463611 _89863) (@lem3463610 _89837 _89861 _89862 _89863 P x f)). Qed.
Lemma lem3463613 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (x : _89837) (f : type1524 _89837 _89861 _89862 _89863) : (term291 _89837 _89861 _89862 _89863 P x f) = (term402 _89837 _89861 _89862 _89863 P x f).
Proof. exact (TRANS (@lem3463457 _89837 _89861 _89862 _89863 P x f) (@lem3463612 _89837 _89861 _89862 _89863 P x f)). Qed.
Lemma lem3463615 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (x : _89837) (f : type1524 _89837 _89861 _89862 _89863) : (term127 _89837 _89861 _89862 _89863 P x f) = (term402 _89837 _89861 _89862 _89863 P x f).
Proof. exact (TRANS (@lem3463431 _89837 _89861 _89862 _89863 P x f) (@lem3463613 _89837 _89861 _89862 _89863 P x f)). Qed.
Lemma lem3463616 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (x : _89837) (f : type1524 _89837 _89861 _89862 _89863) : (term38 _89837 _89861 _89862 _89863 P x f) = (term402 _89837 _89861 _89862 _89863 P x f).
Proof. exact (TRANS (@lem3462843 _89837 _89861 _89862 _89863 P x f) (@lem3463615 _89837 _89861 _89862 _89863 P x f)). Qed.
Lemma lem3463617 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (x : _89837) (f : type1524 _89837 _89861 _89862 _89863) (h1 : term38 _89837 _89861 _89862 _89863 P x f) : term402 _89837 _89861 _89862 _89863 P x f.
Proof. exact (EQ_MP (@lem3463616 _89837 _89861 _89862 _89863 P x f) (@lem3462703 _89837 _89861 _89862 _89863 P x f h1)). Qed.
Lemma lem3463618 {_89837 _89861 _89862 _89863 : Type'} (x' : _89863) (P : type1517 _89861 _89862 _89863) (x : _89837) (f : type1524 _89837 _89861 _89862 _89863) (h1 : term400 _89837 _89861 _89862 _89863 x' P x f) : term400 _89837 _89861 _89862 _89863 x' P x f.
Proof. exact (h1). Qed.
Lemma lem3463619 {_89837 _89861 _89862 _89863 : Type'} (x' : _89863) (y : _89862) (P : type1517 _89861 _89862 _89863) (x : _89837) (f : type1524 _89837 _89861 _89862 _89863) (h1 : term398 _89837 _89861 _89862 _89863 x' y P x f) : term398 _89837 _89861 _89862 _89863 x' y P x f.
Proof. exact (h1). Qed.
Lemma lem3463620 {_89837 _89861 _89862 _89863 : Type'} (x' : _89863) (y : _89862) (z : _89861) (P : type1517 _89861 _89862 _89863) (x : _89837) (f : type1524 _89837 _89861 _89862 _89863) (h1 : term396 _89837 _89861 _89862 _89863 x' y z P x f) : term396 _89837 _89861 _89862 _89863 x' y z P x f.
Proof. exact (h1). Qed.
Lemma lem3463621 {_89837 _89861 _89862 _89863 : Type'} (x' : _89863) (y : _89862) (z : _89861) (t : _89837 -> Prop) (P : type1517 _89861 _89862 _89863) (x : _89837) (f : type1524 _89837 _89861 _89862 _89863) (h1 : term394 _89837 _89861 _89862 _89863 x' y z t P x f) : term394 _89837 _89861 _89862 _89863 x' y z t P x f.
Proof. exact (h1). Qed.
Lemma lem3463622 {_89837 _89861 _89862 _89863 : Type'} (x' : _89863) (y : _89862) (z : _89861) (x'' : _89863) (t : _89837 -> Prop) (P : type1517 _89861 _89862 _89863) (x : _89837) (f : type1524 _89837 _89861 _89862 _89863) (h1 : term392 _89837 _89861 _89862 _89863 x' y z x'' t P x f) : term392 _89837 _89861 _89862 _89863 x' y z x'' t P x f.
Proof. exact (h1). Qed.
Lemma lem3463623 {_89837 _89861 _89862 _89863 : Type'} (x' : _89863) (y : _89862) (z : _89861) (x'' : _89863) (y' : _89862) (t : _89837 -> Prop) (P : type1517 _89861 _89862 _89863) (x : _89837) (f : type1524 _89837 _89861 _89862 _89863) (h1 : term390 _89837 _89861 _89862 _89863 x' y z x'' y' t P x f) : term390 _89837 _89861 _89862 _89863 x' y z x'' y' t P x f.
Proof. exact (h1). Qed.
Lemma lem3463624 {_89837 _89861 _89862 _89863 : Type'} (x' : _89863) (y : _89862) (z : _89861) (x'' : _89863) (y' : _89862) (z' : _89861) (t : _89837 -> Prop) (P : type1517 _89861 _89862 _89863) (x : _89837) (f : type1524 _89837 _89861 _89862 _89863) (h1 : term387 _89837 _89861 _89862 _89863 x' y z x'' y' z' t P x f) : term387 _89837 _89861 _89862 _89863 x' y z x'' y' z' t P x f.
Proof. exact (h1). Qed.
Lemma lem3463647 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (x : _89837) (f : type1524 _89837 _89861 _89862 _89863) (x' : _89863) (y : _89862) (z : _89861) : (term86 _89837 _89861 _89862 _89863 P x f x' y z) = (term86 _89837 _89861 _89862 _89863 P x f x' y z).
Proof. exact (eq_refl (term86 _89837 _89861 _89862 _89863 P x f x' y z)). Qed.
Lemma lem3463648 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (x : _89837) (f : type1524 _89837 _89861 _89862 _89863) (x' : _89863) (y : _89862) : (term96 _89837 _89861 _89862 _89863 P x f x' y) = (term96 _89837 _89861 _89862 _89863 P x f x' y).
Proof. exact (fun_ext (fun z : _89861 => @lem3463647 _89837 _89861 _89862 _89863 P x f x' y z)). Qed.
Lemma lem3463649 {_89861 : Type'} : (@all _89861) = (@all _89861).
Proof. exact (eq_refl (@all _89861)). Qed.
Lemma lem3463650 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (x : _89837) (f : type1524 _89837 _89861 _89862 _89863) (x' : _89863) (y : _89862) : (term97 _89837 _89861 _89862 _89863 P x f x' y) = (term97 _89837 _89861 _89862 _89863 P x f x' y).
Proof. exact (MK_COMB (@lem3463649 _89861) (@lem3463648 _89837 _89861 _89862 _89863 P x f x' y)). Qed.
Lemma lem3463651 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (x : _89837) (f : type1524 _89837 _89861 _89862 _89863) (x' : _89863) : (term105 _89837 _89861 _89862 _89863 P x f x') = (term105 _89837 _89861 _89862 _89863 P x f x').
Proof. exact (fun_ext (fun y : _89862 => @lem3463650 _89837 _89861 _89862 _89863 P x f x' y)). Qed.
Lemma lem3463652 {_89862 : Type'} : (@all _89862) = (@all _89862).
Proof. exact (eq_refl (@all _89862)). Qed.
Lemma lem3463653 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (x : _89837) (f : type1524 _89837 _89861 _89862 _89863) (x' : _89863) : (term106 _89837 _89861 _89862 _89863 P x f x') = (term106 _89837 _89861 _89862 _89863 P x f x').
Proof. exact (MK_COMB (@lem3463652 _89862) (@lem3463651 _89837 _89861 _89862 _89863 P x f x')). Qed.
Lemma lem3463654 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (x : _89837) (f : type1524 _89837 _89861 _89862 _89863) : (term114 _89837 _89861 _89862 _89863 P x f) = (term114 _89837 _89861 _89862 _89863 P x f).
Proof. exact (fun_ext (fun x' : _89863 => @lem3463653 _89837 _89861 _89862 _89863 P x f x')). Qed.
Lemma lem3463655 {_89863 : Type'} : (@all _89863) = (@all _89863).
Proof. exact (eq_refl (@all _89863)). Qed.
Lemma lem3463656 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (x : _89837) (f : type1524 _89837 _89861 _89862 _89863) : (term115 _89837 _89861 _89862 _89863 P x f) = (term115 _89837 _89861 _89862 _89863 P x f).
Proof. exact (MK_COMB (@lem3463655 _89863) (@lem3463654 _89837 _89861 _89862 _89863 P x f)). Qed.
Lemma lem3463689 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (f : type1524 _89837 _89861 _89862 _89863) (x'' : _89863) (y' : _89862) (z' : _89861) (x : _89837) (t : _89837 -> Prop) : (term279 _89837 _89861 _89862 _89863 P f x'' y' z' x t) = (term279 _89837 _89861 _89862 _89863 P f x'' y' z' x t).
Proof. exact (eq_refl (term279 _89837 _89861 _89862 _89863 P f x'' y' z' x t)). Qed.
Lemma lem3463690 {_89837 _89861 _89862 _89863 : Type'} (x'' : _89863) (y' : _89862) (z' : _89861) (t : _89837 -> Prop) (P : type1517 _89861 _89862 _89863) (x : _89837) (f : type1524 _89837 _89861 _89862 _89863) : (term281 _89837 _89861 _89862 _89863 x'' y' z' t P x f) = (term281 _89837 _89861 _89862 _89863 x'' y' z' t P x f).
Proof. exact (MK_COMB (@lem3463689 _89837 _89861 _89862 _89863 P f x'' y' z' x t) (@lem3463656 _89837 _89861 _89862 _89863 P x f)). Qed.
Lemma lem3463713 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (x : _89837) (f : type1524 _89837 _89861 _89862 _89863) (x' : _89863) (y : _89862) (z : _89861) : (term84 _89837 _89861 _89862 _89863 P x f x' y z) = (term84 _89837 _89861 _89862 _89863 P x f x' y z).
Proof. exact (eq_refl (term84 _89837 _89861 _89862 _89863 P x f x' y z)). Qed.
Lemma lem3463718 {_89837 : Type'} (x : _89837) (t : _89837 -> Prop) : (@IN _89837 x t) = (@IN _89837 x t).
Proof. exact (eq_refl (@IN _89837 x t)). Qed.
Lemma lem3463743 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (t : _89837 -> Prop) (f : type1524 _89837 _89861 _89862 _89863) (x : _89863) (y : _89862) (z : _89861) : (term40 _89837 _89861 _89862 _89863 P t f x y z) = (term40 _89837 _89861 _89862 _89863 P t f x y z).
Proof. exact (eq_refl (term40 _89837 _89861 _89862 _89863 P t f x y z)). Qed.
Lemma lem3463744 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (t : _89837 -> Prop) (f : type1524 _89837 _89861 _89862 _89863) (x : _89863) (y : _89862) : (term48 _89837 _89861 _89862 _89863 P t f x y) = (term48 _89837 _89861 _89862 _89863 P t f x y).
Proof. exact (fun_ext (fun z : _89861 => @lem3463743 _89837 _89861 _89862 _89863 P t f x y z)). Qed.
Lemma lem3463745 {_89861 : Type'} : (@all _89861) = (@all _89861).
Proof. exact (eq_refl (@all _89861)). Qed.
Lemma lem3463746 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (t : _89837 -> Prop) (f : type1524 _89837 _89861 _89862 _89863) (x : _89863) (y : _89862) : (term49 _89837 _89861 _89862 _89863 P t f x y) = (term49 _89837 _89861 _89862 _89863 P t f x y).
Proof. exact (MK_COMB (@lem3463745 _89861) (@lem3463744 _89837 _89861 _89862 _89863 P t f x y)). Qed.
Lemma lem3463747 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (t : _89837 -> Prop) (f : type1524 _89837 _89861 _89862 _89863) (x : _89863) : (term55 _89837 _89861 _89862 _89863 P t f x) = (term55 _89837 _89861 _89862 _89863 P t f x).
Proof. exact (fun_ext (fun y : _89862 => @lem3463746 _89837 _89861 _89862 _89863 P t f x y)). Qed.
Lemma lem3463748 {_89862 : Type'} : (@all _89862) = (@all _89862).
Proof. exact (eq_refl (@all _89862)). Qed.
Lemma lem3463749 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (t : _89837 -> Prop) (f : type1524 _89837 _89861 _89862 _89863) (x : _89863) : (term56 _89837 _89861 _89862 _89863 P t f x) = (term56 _89837 _89861 _89862 _89863 P t f x).
Proof. exact (MK_COMB (@lem3463748 _89862) (@lem3463747 _89837 _89861 _89862 _89863 P t f x)). Qed.
Lemma lem3463750 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (t : _89837 -> Prop) (f : type1524 _89837 _89861 _89862 _89863) : (term62 _89837 _89861 _89862 _89863 P t f) = (term62 _89837 _89861 _89862 _89863 P t f).
Proof. exact (fun_ext (fun x : _89863 => @lem3463749 _89837 _89861 _89862 _89863 P t f x)). Qed.
Lemma lem3463751 {_89863 : Type'} : (@all _89863) = (@all _89863).
Proof. exact (eq_refl (@all _89863)). Qed.
Lemma lem3463752 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (t : _89837 -> Prop) (f : type1524 _89837 _89861 _89862 _89863) : (term63 _89837 _89861 _89862 _89863 P t f) = (term63 _89837 _89861 _89862 _89863 P t f).
Proof. exact (MK_COMB (@lem3463751 _89863) (@lem3463750 _89837 _89861 _89862 _89863 P t f)). Qed.
Lemma lem3463753 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem3463754 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (t : _89837 -> Prop) (f : type1524 _89837 _89861 _89862 _89863) : (term69 _89837 _89861 _89862 _89863 P t f) = (term69 _89837 _89861 _89862 _89863 P t f).
Proof. exact (MK_COMB (@lem3463753) (@lem3463752 _89837 _89861 _89862 _89863 P t f)). Qed.
Lemma lem3463755 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (f : type1524 _89837 _89861 _89862 _89863) (x : _89837) (t : _89837 -> Prop) : (term71 _89837 _89861 _89862 _89863 P f x t) = (term71 _89837 _89861 _89862 _89863 P f x t).
Proof. exact (MK_COMB (@lem3463754 _89837 _89861 _89862 _89863 P t f) (@lem3463718 _89837 x t)). Qed.
Lemma lem3463756 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (f : type1524 _89837 _89861 _89862 _89863) (x : _89837) : (term81 _89837 _89861 _89862 _89863 P f x) = (term81 _89837 _89861 _89862 _89863 P f x).
Proof. exact (fun_ext (fun t : _89837 -> Prop => @lem3463755 _89837 _89861 _89862 _89863 P f x t)). Qed.
Lemma lem3463757 {_89837 : Type'} : (@all (_89837 -> Prop)) = (@all (_89837 -> Prop)).
Proof. exact (eq_refl (@all (_89837 -> Prop))). Qed.
Lemma lem3463758 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (f : type1524 _89837 _89861 _89862 _89863) (x : _89837) : (term82 _89837 _89861 _89862 _89863 P f x) = (term82 _89837 _89861 _89862 _89863 P f x).
Proof. exact (MK_COMB (@lem3463757 _89837) (@lem3463756 _89837 _89861 _89862 _89863 P f x)). Qed.
Lemma lem3463759 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem3463760 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (f : type1524 _89837 _89861 _89862 _89863) (x : _89837) : (term121 _89837 _89861 _89862 _89863 P f x) = (term121 _89837 _89861 _89862 _89863 P f x).
Proof. exact (MK_COMB (@lem3463759) (@lem3463758 _89837 _89861 _89862 _89863 P f x)). Qed.
Lemma lem3463761 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (x : _89837) (f : type1524 _89837 _89861 _89862 _89863) (x' : _89863) (y : _89862) (z : _89861) : (term162 _89837 _89861 _89862 _89863 P x f x' y z) = (term162 _89837 _89861 _89862 _89863 P x f x' y z).
Proof. exact (MK_COMB (@lem3463760 _89837 _89861 _89862 _89863 P f x) (@lem3463713 _89837 _89861 _89862 _89863 P x f x' y z)). Qed.
Lemma lem3463762 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem3463763 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (x : _89837) (f : type1524 _89837 _89861 _89862 _89863) (x' : _89863) (y : _89862) (z : _89861) : (term333 _89837 _89861 _89862 _89863 P x f x' y z) = (term333 _89837 _89861 _89862 _89863 P x f x' y z).
Proof. exact (MK_COMB (@lem3463762) (@lem3463761 _89837 _89861 _89862 _89863 P x f x' y z)). Qed.
Lemma lem3463764 {_89837 _89861 _89862 _89863 : Type'} (x' : _89863) (y : _89862) (z : _89861) (x'' : _89863) (y' : _89862) (z' : _89861) (t : _89837 -> Prop) (P : type1517 _89861 _89862 _89863) (x : _89837) (f : type1524 _89837 _89861 _89862 _89863) : (term387 _89837 _89861 _89862 _89863 x' y z x'' y' z' t P x f) = (term387 _89837 _89861 _89862 _89863 x' y z x'' y' z' t P x f).
Proof. exact (MK_COMB (@lem3463763 _89837 _89861 _89862 _89863 P x f x' y z) (@lem3463690 _89837 _89861 _89862 _89863 x'' y' z' t P x f)). Qed.
Lemma lem3463765 {_89837 _89861 _89862 _89863 : Type'} (x' : _89863) (y : _89862) (z : _89861) (x'' : _89863) (y' : _89862) (z' : _89861) (t : _89837 -> Prop) (P : type1517 _89861 _89862 _89863) (x : _89837) (f : type1524 _89837 _89861 _89862 _89863) (h1 : term387 _89837 _89861 _89862 _89863 x' y z x'' y' z' t P x f) : term387 _89837 _89861 _89862 _89863 x' y z x'' y' z' t P x f.
Proof. exact (EQ_MP (@lem3463764 _89837 _89861 _89862 _89863 x' y z x'' y' z' t P x f) (@lem3463624 _89837 _89861 _89862 _89863 x' y z x'' y' z' t P x f h1)). Qed.
Lemma lem3463766 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (x : _89837) (f : type1524 _89837 _89861 _89862 _89863) (x' : _89863) (y : _89862) (z : _89861) (h1 : term162 _89837 _89861 _89862 _89863 P x f x' y z) : term162 _89837 _89861 _89862 _89863 P x f x' y z.
Proof. exact (h1). Qed.
Lemma lem3463767 {_89837 _89861 _89862 _89863 : Type'} (x'' : _89863) (y' : _89862) (z' : _89861) (t : _89837 -> Prop) (P : type1517 _89861 _89862 _89863) (x : _89837) (f : type1524 _89837 _89861 _89862 _89863) (h1 : term281 _89837 _89861 _89862 _89863 x'' y' z' t P x f) : term281 _89837 _89861 _89862 _89863 x'' y' z' t P x f.
Proof. exact (h1). Qed.
Lemma lem3463768 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (x : _89837) (f : type1524 _89837 _89861 _89862 _89863) (x' : _89863) (y : _89862) (z : _89861) (h1 : term162 _89837 _89861 _89862 _89863 P x f x' y z) : term84 _89837 _89861 _89862 _89863 P x f x' y z.
Proof. exact (proj2 (@lem3463766 _89837 _89861 _89862 _89863 P x f x' y z h1)). Qed.
Lemma lem3463769 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (x : _89837) (f : type1524 _89837 _89861 _89862 _89863) (x' : _89863) (y : _89862) (z : _89861) (h1 : term162 _89837 _89861 _89862 _89863 P x f x' y z) : term82 _89837 _89861 _89862 _89863 P f x.
Proof. exact (proj1 (@lem3463766 _89837 _89861 _89862 _89863 P x f x' y z h1)). Qed.
Lemma lem3463772 {_89837 _89861 _89862 _89863 : Type'} (x'' : _89863) (y' : _89862) (z' : _89861) (t : _89837 -> Prop) (P : type1517 _89861 _89862 _89863) (x : _89837) (f : type1524 _89837 _89861 _89862 _89863) (h1 : term281 _89837 _89861 _89862 _89863 x'' y' z' t P x f) : term115 _89837 _89861 _89862 _89863 P x f.
Proof. exact (proj2 (@lem3463767 _89837 _89861 _89862 _89863 x'' y' z' t P x f h1)). Qed.
Lemma lem3463773 {_89837 _89861 _89862 _89863 : Type'} (x'' : _89863) (y' : _89862) (z' : _89861) (t : _89837 -> Prop) (P : type1517 _89861 _89862 _89863) (x : _89837) (f : type1524 _89837 _89861 _89862 _89863) (h1 : term281 _89837 _89861 _89862 _89863 x'' y' z' t P x f) : term211 _89837 _89861 _89862 _89863 P f x'' y' z' x t.
Proof. exact (proj1 (@lem3463767 _89837 _89861 _89862 _89863 x'' y' z' t P x f h1)). Qed.
Lemma lem3463775 {_89837 _89861 _89862 _89863 : Type'} (x'' : _89863) (y' : _89862) (z' : _89861) (t : _89837 -> Prop) (P : type1517 _89861 _89862 _89863) (x : _89837) (f : type1524 _89837 _89861 _89862 _89863) (h1 : term281 _89837 _89861 _89862 _89863 x'' y' z' t P x f) : term24 _89837 _89861 _89862 _89863 P t f x'' y' z'.
Proof. exact (proj1 (@lem3463773 _89837 _89861 _89862 _89863 x'' y' z' t P x f h1)). Qed.
Lemma lem3463779 {A : Type'} (P : A -> Prop) (Q : Prop) : (term403 A P Q) = (term404 A P Q).
Proof. exact (EQ_MP (@lem19013 A P Q) (@lem19012 A P Q)). Qed.
Lemma lem3463780 {_89863 : Type'} (P : _89863 -> Prop) (Q : Prop) : (term403 _89863 P Q) = (term404 _89863 P Q).
Proof. exact (@lem3463779 _89863 P Q). Qed.
Lemma lem3463781 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (f : type1524 _89837 _89861 _89862 _89863) (x : _89837) (t : _89837 -> Prop) : (term405 _89837 _89861 _89862 _89863 P f x t) = (term406 _89837 _89861 _89862 _89863 P f x t).
Proof. exact (@lem3463780 _89863 (term62 _89837 _89861 _89862 _89863 P t f) (@IN _89837 x t)). Qed.
Lemma lem3463782 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (t : _89837 -> Prop) (f : type1524 _89837 _89861 _89862 _89863) (x : _89863) : (term407 _89837 _89861 _89862 _89863 P t f x) = (term56 _89837 _89861 _89862 _89863 P t f x).
Proof. exact (eq_refl (term407 _89837 _89861 _89862 _89863 P t f x)). Qed.
Lemma lem3463783 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (t : _89837 -> Prop) (f : type1524 _89837 _89861 _89862 _89863) : (term408 _89837 _89861 _89862 _89863 P t f) = (term62 _89837 _89861 _89862 _89863 P t f).
Proof. exact (fun_ext (fun x : _89863 => @lem3463782 _89837 _89861 _89862 _89863 P t f x)). Qed.
Lemma lem3463784 {_89863 : Type'} : (@all _89863) = (@all _89863).
Proof. exact (eq_refl (@all _89863)). Qed.
Lemma lem3463785 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (t : _89837 -> Prop) (f : type1524 _89837 _89861 _89862 _89863) : (term409 _89837 _89861 _89862 _89863 P t f) = (term63 _89837 _89861 _89862 _89863 P t f).
Proof. exact (MK_COMB (@lem3463784 _89863) (@lem3463783 _89837 _89861 _89862 _89863 P t f)). Qed.
Lemma lem3463786 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem3463787 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (t : _89837 -> Prop) (f : type1524 _89837 _89861 _89862 _89863) : (term410 _89837 _89861 _89862 _89863 P t f) = (term69 _89837 _89861 _89862 _89863 P t f).
Proof. exact (MK_COMB (@lem3463786) (@lem3463785 _89837 _89861 _89862 _89863 P t f)). Qed.
Lemma lem3463788 {_89837 : Type'} (x : _89837) (t : _89837 -> Prop) : (@IN _89837 x t) = (@IN _89837 x t).
Proof. exact (eq_refl (@IN _89837 x t)). Qed.
Lemma lem3463789 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (f : type1524 _89837 _89861 _89862 _89863) (x : _89837) (t : _89837 -> Prop) : (term405 _89837 _89861 _89862 _89863 P f x t) = (term71 _89837 _89861 _89862 _89863 P f x t).
Proof. exact (MK_COMB (@lem3463787 _89837 _89861 _89862 _89863 P t f) (@lem3463788 _89837 x t)). Qed.
Lemma lem3463790 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem3463791 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (f : type1524 _89837 _89861 _89862 _89863) (x : _89837) (t : _89837 -> Prop) : (term411 _89837 _89861 _89862 _89863 P f x t) = (term412 _89837 _89861 _89862 _89863 P f x t).
Proof. exact (MK_COMB (@lem3463790) (@lem3463789 _89837 _89861 _89862 _89863 P f x t)). Qed.
Lemma lem3463792 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (t : _89837 -> Prop) (f : type1524 _89837 _89861 _89862 _89863) (x : _89863) : (term407 _89837 _89861 _89862 _89863 P t f x) = (term56 _89837 _89861 _89862 _89863 P t f x).
Proof. exact (eq_refl (term407 _89837 _89861 _89862 _89863 P t f x)). Qed.
Lemma lem3463793 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem3463794 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (t : _89837 -> Prop) (f : type1524 _89837 _89861 _89862 _89863) (x : _89863) : (term413 _89837 _89861 _89862 _89863 P t f x) = (term414 _89837 _89861 _89862 _89863 P t f x).
Proof. exact (MK_COMB (@lem3463793) (@lem3463792 _89837 _89861 _89862 _89863 P t f x)). Qed.
Lemma lem3463795 {_89837 : Type'} (x : _89837) (t : _89837 -> Prop) : (@IN _89837 x t) = (@IN _89837 x t).
Proof. exact (eq_refl (@IN _89837 x t)). Qed.
Lemma lem3463796 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (f : type1524 _89837 _89861 _89862 _89863) (x : _89863) (x' : _89837) (t : _89837 -> Prop) : (term415 _89837 _89861 _89862 _89863 P f x x' t) = (term416 _89837 _89861 _89862 _89863 P f x x' t).
Proof. exact (MK_COMB (@lem3463794 _89837 _89861 _89862 _89863 P t f x) (@lem3463795 _89837 x' t)). Qed.
Lemma lem3463797 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (f : type1524 _89837 _89861 _89862 _89863) (x : _89837) (t : _89837 -> Prop) : (term417 _89837 _89861 _89862 _89863 P f x t) = (term418 _89837 _89861 _89862 _89863 P f x t).
Proof. exact (fun_ext (fun x' : _89863 => @lem3463796 _89837 _89861 _89862 _89863 P f x' x t)). Qed.
Lemma lem3463798 {_89863 : Type'} : (@all _89863) = (@all _89863).
Proof. exact (eq_refl (@all _89863)). Qed.
Lemma lem3463799 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (f : type1524 _89837 _89861 _89862 _89863) (x : _89837) (t : _89837 -> Prop) : (term406 _89837 _89861 _89862 _89863 P f x t) = (term419 _89837 _89861 _89862 _89863 P f x t).
Proof. exact (MK_COMB (@lem3463798 _89863) (@lem3463797 _89837 _89861 _89862 _89863 P f x t)). Qed.
Lemma lem3463800 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (f : type1524 _89837 _89861 _89862 _89863) (x : _89837) (t : _89837 -> Prop) : ((term405 _89837 _89861 _89862 _89863 P f x t) = (term406 _89837 _89861 _89862 _89863 P f x t)) = ((term71 _89837 _89861 _89862 _89863 P f x t) = (term419 _89837 _89861 _89862 _89863 P f x t)).
Proof. exact (MK_COMB (@lem3463791 _89837 _89861 _89862 _89863 P f x t) (@lem3463799 _89837 _89861 _89862 _89863 P f x t)). Qed.
Lemma lem3463801 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (f : type1524 _89837 _89861 _89862 _89863) (x : _89837) (t : _89837 -> Prop) : (term71 _89837 _89861 _89862 _89863 P f x t) = (term419 _89837 _89861 _89862 _89863 P f x t).
Proof. exact (EQ_MP (@lem3463800 _89837 _89861 _89862 _89863 P f x t) (@lem3463781 _89837 _89861 _89862 _89863 P f x t)). Qed.
Lemma lem3463803 {A : Type'} (P : A -> Prop) (Q : Prop) : (term403 A P Q) = (term404 A P Q).
Proof. exact (EQ_MP (@lem19013 A P Q) (@lem19012 A P Q)). Qed.
Lemma lem3463804 {_89862 : Type'} (P : _89862 -> Prop) (Q : Prop) : (term403 _89862 P Q) = (term404 _89862 P Q).
Proof. exact (@lem3463803 _89862 P Q). Qed.
Lemma lem3463805 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (f : type1524 _89837 _89861 _89862 _89863) (x : _89863) (x' : _89837) (t : _89837 -> Prop) : (term420 _89837 _89861 _89862 _89863 P f x x' t) = (term421 _89837 _89861 _89862 _89863 P f x x' t).
Proof. exact (@lem3463804 _89862 (term55 _89837 _89861 _89862 _89863 P t f x) (@IN _89837 x' t)). Qed.
Lemma lem3463806 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (t : _89837 -> Prop) (f : type1524 _89837 _89861 _89862 _89863) (x : _89863) (y : _89862) : (term422 _89837 _89861 _89862 _89863 P t f x y) = (term49 _89837 _89861 _89862 _89863 P t f x y).
Proof. exact (eq_refl (term422 _89837 _89861 _89862 _89863 P t f x y)). Qed.
Lemma lem3463807 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (t : _89837 -> Prop) (f : type1524 _89837 _89861 _89862 _89863) (x : _89863) : (term423 _89837 _89861 _89862 _89863 P t f x) = (term55 _89837 _89861 _89862 _89863 P t f x).
Proof. exact (fun_ext (fun y : _89862 => @lem3463806 _89837 _89861 _89862 _89863 P t f x y)). Qed.
Lemma lem3463808 {_89862 : Type'} : (@all _89862) = (@all _89862).
Proof. exact (eq_refl (@all _89862)). Qed.
Lemma lem3463809 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (t : _89837 -> Prop) (f : type1524 _89837 _89861 _89862 _89863) (x : _89863) : (term424 _89837 _89861 _89862 _89863 P t f x) = (term56 _89837 _89861 _89862 _89863 P t f x).
Proof. exact (MK_COMB (@lem3463808 _89862) (@lem3463807 _89837 _89861 _89862 _89863 P t f x)). Qed.
Lemma lem3463810 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem3463811 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (t : _89837 -> Prop) (f : type1524 _89837 _89861 _89862 _89863) (x : _89863) : (term425 _89837 _89861 _89862 _89863 P t f x) = (term414 _89837 _89861 _89862 _89863 P t f x).
Proof. exact (MK_COMB (@lem3463810) (@lem3463809 _89837 _89861 _89862 _89863 P t f x)). Qed.
Lemma lem3463812 {_89837 : Type'} (x : _89837) (t : _89837 -> Prop) : (@IN _89837 x t) = (@IN _89837 x t).
Proof. exact (eq_refl (@IN _89837 x t)). Qed.
Lemma lem3463813 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (f : type1524 _89837 _89861 _89862 _89863) (x : _89863) (x' : _89837) (t : _89837 -> Prop) : (term420 _89837 _89861 _89862 _89863 P f x x' t) = (term416 _89837 _89861 _89862 _89863 P f x x' t).
Proof. exact (MK_COMB (@lem3463811 _89837 _89861 _89862 _89863 P t f x) (@lem3463812 _89837 x' t)). Qed.
Lemma lem3463814 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem3463815 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (f : type1524 _89837 _89861 _89862 _89863) (x : _89863) (x' : _89837) (t : _89837 -> Prop) : (term426 _89837 _89861 _89862 _89863 P f x x' t) = (term427 _89837 _89861 _89862 _89863 P f x x' t).
Proof. exact (MK_COMB (@lem3463814) (@lem3463813 _89837 _89861 _89862 _89863 P f x x' t)). Qed.
Lemma lem3463816 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (t : _89837 -> Prop) (f : type1524 _89837 _89861 _89862 _89863) (x : _89863) (y : _89862) : (term422 _89837 _89861 _89862 _89863 P t f x y) = (term49 _89837 _89861 _89862 _89863 P t f x y).
Proof. exact (eq_refl (term422 _89837 _89861 _89862 _89863 P t f x y)). Qed.
Lemma lem3463817 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem3463818 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (t : _89837 -> Prop) (f : type1524 _89837 _89861 _89862 _89863) (x : _89863) (y : _89862) : (term428 _89837 _89861 _89862 _89863 P t f x y) = (term429 _89837 _89861 _89862 _89863 P t f x y).
Proof. exact (MK_COMB (@lem3463817) (@lem3463816 _89837 _89861 _89862 _89863 P t f x y)). Qed.
Lemma lem3463819 {_89837 : Type'} (x : _89837) (t : _89837 -> Prop) : (@IN _89837 x t) = (@IN _89837 x t).
Proof. exact (eq_refl (@IN _89837 x t)). Qed.
Lemma lem3463820 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (f : type1524 _89837 _89861 _89862 _89863) (x : _89863) (y : _89862) (x' : _89837) (t : _89837 -> Prop) : (term430 _89837 _89861 _89862 _89863 P f x y x' t) = (term431 _89837 _89861 _89862 _89863 P f x y x' t).
Proof. exact (MK_COMB (@lem3463818 _89837 _89861 _89862 _89863 P t f x y) (@lem3463819 _89837 x' t)). Qed.
Lemma lem3463821 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (f : type1524 _89837 _89861 _89862 _89863) (x : _89863) (x' : _89837) (t : _89837 -> Prop) : (term432 _89837 _89861 _89862 _89863 P f x x' t) = (term433 _89837 _89861 _89862 _89863 P f x x' t).
Proof. exact (fun_ext (fun y : _89862 => @lem3463820 _89837 _89861 _89862 _89863 P f x y x' t)). Qed.
Lemma lem3463822 {_89862 : Type'} : (@all _89862) = (@all _89862).
Proof. exact (eq_refl (@all _89862)). Qed.
Lemma lem3463823 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (f : type1524 _89837 _89861 _89862 _89863) (x : _89863) (x' : _89837) (t : _89837 -> Prop) : (term421 _89837 _89861 _89862 _89863 P f x x' t) = (term434 _89837 _89861 _89862 _89863 P f x x' t).
Proof. exact (MK_COMB (@lem3463822 _89862) (@lem3463821 _89837 _89861 _89862 _89863 P f x x' t)). Qed.
Lemma lem3463824 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (f : type1524 _89837 _89861 _89862 _89863) (x : _89863) (x' : _89837) (t : _89837 -> Prop) : ((term420 _89837 _89861 _89862 _89863 P f x x' t) = (term421 _89837 _89861 _89862 _89863 P f x x' t)) = ((term416 _89837 _89861 _89862 _89863 P f x x' t) = (term434 _89837 _89861 _89862 _89863 P f x x' t)).
Proof. exact (MK_COMB (@lem3463815 _89837 _89861 _89862 _89863 P f x x' t) (@lem3463823 _89837 _89861 _89862 _89863 P f x x' t)). Qed.
Lemma lem3463825 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (f : type1524 _89837 _89861 _89862 _89863) (x : _89863) (x' : _89837) (t : _89837 -> Prop) : (term416 _89837 _89861 _89862 _89863 P f x x' t) = (term434 _89837 _89861 _89862 _89863 P f x x' t).
Proof. exact (EQ_MP (@lem3463824 _89837 _89861 _89862 _89863 P f x x' t) (@lem3463805 _89837 _89861 _89862 _89863 P f x x' t)). Qed.
Lemma lem3463827 {A : Type'} (P : A -> Prop) (Q : Prop) : (term403 A P Q) = (term404 A P Q).
Proof. exact (EQ_MP (@lem19013 A P Q) (@lem19012 A P Q)). Qed.
Lemma lem3463828 {_89861 : Type'} (P : _89861 -> Prop) (Q : Prop) : (term403 _89861 P Q) = (term404 _89861 P Q).
Proof. exact (@lem3463827 _89861 P Q). Qed.
Lemma lem3463829 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (f : type1524 _89837 _89861 _89862 _89863) (x : _89863) (y : _89862) (x' : _89837) (t : _89837 -> Prop) : (term435 _89837 _89861 _89862 _89863 P f x y x' t) = (term436 _89837 _89861 _89862 _89863 P f x y x' t).
Proof. exact (@lem3463828 _89861 (term48 _89837 _89861 _89862 _89863 P t f x y) (@IN _89837 x' t)). Qed.
Lemma lem3463830 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (t : _89837 -> Prop) (f : type1524 _89837 _89861 _89862 _89863) (x : _89863) (y : _89862) (z : _89861) : (term437 _89837 _89861 _89862 _89863 P t f x y z) = (term40 _89837 _89861 _89862 _89863 P t f x y z).
Proof. exact (eq_refl (term437 _89837 _89861 _89862 _89863 P t f x y z)). Qed.
Lemma lem3463831 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (t : _89837 -> Prop) (f : type1524 _89837 _89861 _89862 _89863) (x : _89863) (y : _89862) : (term438 _89837 _89861 _89862 _89863 P t f x y) = (term48 _89837 _89861 _89862 _89863 P t f x y).
Proof. exact (fun_ext (fun z : _89861 => @lem3463830 _89837 _89861 _89862 _89863 P t f x y z)). Qed.
Lemma lem3463832 {_89861 : Type'} : (@all _89861) = (@all _89861).
Proof. exact (eq_refl (@all _89861)). Qed.
Lemma lem3463833 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (t : _89837 -> Prop) (f : type1524 _89837 _89861 _89862 _89863) (x : _89863) (y : _89862) : (term439 _89837 _89861 _89862 _89863 P t f x y) = (term49 _89837 _89861 _89862 _89863 P t f x y).
Proof. exact (MK_COMB (@lem3463832 _89861) (@lem3463831 _89837 _89861 _89862 _89863 P t f x y)). Qed.
Lemma lem3463834 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem3463835 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (t : _89837 -> Prop) (f : type1524 _89837 _89861 _89862 _89863) (x : _89863) (y : _89862) : (term440 _89837 _89861 _89862 _89863 P t f x y) = (term429 _89837 _89861 _89862 _89863 P t f x y).
Proof. exact (MK_COMB (@lem3463834) (@lem3463833 _89837 _89861 _89862 _89863 P t f x y)). Qed.
Lemma lem3463836 {_89837 : Type'} (x : _89837) (t : _89837 -> Prop) : (@IN _89837 x t) = (@IN _89837 x t).
Proof. exact (eq_refl (@IN _89837 x t)). Qed.
Lemma lem3463837 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (f : type1524 _89837 _89861 _89862 _89863) (x : _89863) (y : _89862) (x' : _89837) (t : _89837 -> Prop) : (term435 _89837 _89861 _89862 _89863 P f x y x' t) = (term431 _89837 _89861 _89862 _89863 P f x y x' t).
Proof. exact (MK_COMB (@lem3463835 _89837 _89861 _89862 _89863 P t f x y) (@lem3463836 _89837 x' t)). Qed.
Lemma lem3463838 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem3463839 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (f : type1524 _89837 _89861 _89862 _89863) (x : _89863) (y : _89862) (x' : _89837) (t : _89837 -> Prop) : (term441 _89837 _89861 _89862 _89863 P f x y x' t) = (term442 _89837 _89861 _89862 _89863 P f x y x' t).
Proof. exact (MK_COMB (@lem3463838) (@lem3463837 _89837 _89861 _89862 _89863 P f x y x' t)). Qed.
Lemma lem3463840 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (t : _89837 -> Prop) (f : type1524 _89837 _89861 _89862 _89863) (x : _89863) (y : _89862) (z : _89861) : (term437 _89837 _89861 _89862 _89863 P t f x y z) = (term40 _89837 _89861 _89862 _89863 P t f x y z).
Proof. exact (eq_refl (term437 _89837 _89861 _89862 _89863 P t f x y z)). Qed.
Lemma lem3463841 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem3463842 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (t : _89837 -> Prop) (f : type1524 _89837 _89861 _89862 _89863) (x : _89863) (y : _89862) (z : _89861) : (term443 _89837 _89861 _89862 _89863 P t f x y z) = (term444 _89837 _89861 _89862 _89863 P t f x y z).
Proof. exact (MK_COMB (@lem3463841) (@lem3463840 _89837 _89861 _89862 _89863 P t f x y z)). Qed.
Lemma lem3463843 {_89837 : Type'} (x : _89837) (t : _89837 -> Prop) : (@IN _89837 x t) = (@IN _89837 x t).
Proof. exact (eq_refl (@IN _89837 x t)). Qed.
Lemma lem3463844 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (f : type1524 _89837 _89861 _89862 _89863) (x : _89863) (y : _89862) (z : _89861) (x' : _89837) (t : _89837 -> Prop) : (term445 _89837 _89861 _89862 _89863 P f x y z x' t) = (term446 _89837 _89861 _89862 _89863 P f x y z x' t).
Proof. exact (MK_COMB (@lem3463842 _89837 _89861 _89862 _89863 P t f x y z) (@lem3463843 _89837 x' t)). Qed.
Lemma lem3463845 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (f : type1524 _89837 _89861 _89862 _89863) (x : _89863) (y : _89862) (x' : _89837) (t : _89837 -> Prop) : (term447 _89837 _89861 _89862 _89863 P f x y x' t) = (term448 _89837 _89861 _89862 _89863 P f x y x' t).
Proof. exact (fun_ext (fun z : _89861 => @lem3463844 _89837 _89861 _89862 _89863 P f x y z x' t)). Qed.
Lemma lem3463846 {_89861 : Type'} : (@all _89861) = (@all _89861).
Proof. exact (eq_refl (@all _89861)). Qed.
Lemma lem3463847 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (f : type1524 _89837 _89861 _89862 _89863) (x : _89863) (y : _89862) (x' : _89837) (t : _89837 -> Prop) : (term436 _89837 _89861 _89862 _89863 P f x y x' t) = (term449 _89837 _89861 _89862 _89863 P f x y x' t).
Proof. exact (MK_COMB (@lem3463846 _89861) (@lem3463845 _89837 _89861 _89862 _89863 P f x y x' t)). Qed.
Lemma lem3463848 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (f : type1524 _89837 _89861 _89862 _89863) (x : _89863) (y : _89862) (x' : _89837) (t : _89837 -> Prop) : ((term435 _89837 _89861 _89862 _89863 P f x y x' t) = (term436 _89837 _89861 _89862 _89863 P f x y x' t)) = ((term431 _89837 _89861 _89862 _89863 P f x y x' t) = (term449 _89837 _89861 _89862 _89863 P f x y x' t)).
Proof. exact (MK_COMB (@lem3463839 _89837 _89861 _89862 _89863 P f x y x' t) (@lem3463847 _89837 _89861 _89862 _89863 P f x y x' t)). Qed.
Lemma lem3463849 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (f : type1524 _89837 _89861 _89862 _89863) (x : _89863) (y : _89862) (x' : _89837) (t : _89837 -> Prop) : (term431 _89837 _89861 _89862 _89863 P f x y x' t) = (term449 _89837 _89861 _89862 _89863 P f x y x' t).
Proof. exact (EQ_MP (@lem3463848 _89837 _89861 _89862 _89863 P f x y x' t) (@lem3463829 _89837 _89861 _89862 _89863 P f x y x' t)). Qed.
Lemma lem3463850 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (f : type1524 _89837 _89861 _89862 _89863) (x : _89863) (x' : _89837) (t : _89837 -> Prop) : (term433 _89837 _89861 _89862 _89863 P f x x' t) = (term450 _89837 _89861 _89862 _89863 P f x x' t).
Proof. exact (fun_ext (fun y : _89862 => @lem3463849 _89837 _89861 _89862 _89863 P f x y x' t)). Qed.
Lemma lem3463851 {_89862 : Type'} : (@all _89862) = (@all _89862).
Proof. exact (eq_refl (@all _89862)). Qed.
Lemma lem3463852 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (f : type1524 _89837 _89861 _89862 _89863) (x : _89863) (x' : _89837) (t : _89837 -> Prop) : (term434 _89837 _89861 _89862 _89863 P f x x' t) = (term451 _89837 _89861 _89862 _89863 P f x x' t).
Proof. exact (MK_COMB (@lem3463851 _89862) (@lem3463850 _89837 _89861 _89862 _89863 P f x x' t)). Qed.
Lemma lem3463853 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (f : type1524 _89837 _89861 _89862 _89863) (x : _89863) (x' : _89837) (t : _89837 -> Prop) : (term416 _89837 _89861 _89862 _89863 P f x x' t) = (term451 _89837 _89861 _89862 _89863 P f x x' t).
Proof. exact (TRANS (@lem3463825 _89837 _89861 _89862 _89863 P f x x' t) (@lem3463852 _89837 _89861 _89862 _89863 P f x x' t)). Qed.
Lemma lem3463854 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (f : type1524 _89837 _89861 _89862 _89863) (x : _89837) (t : _89837 -> Prop) : (term418 _89837 _89861 _89862 _89863 P f x t) = (term452 _89837 _89861 _89862 _89863 P f x t).
Proof. exact (fun_ext (fun x' : _89863 => @lem3463853 _89837 _89861 _89862 _89863 P f x' x t)). Qed.
Lemma lem3463855 {_89863 : Type'} : (@all _89863) = (@all _89863).
Proof. exact (eq_refl (@all _89863)). Qed.
Lemma lem3463856 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (f : type1524 _89837 _89861 _89862 _89863) (x : _89837) (t : _89837 -> Prop) : (term419 _89837 _89861 _89862 _89863 P f x t) = (term453 _89837 _89861 _89862 _89863 P f x t).
Proof. exact (MK_COMB (@lem3463855 _89863) (@lem3463854 _89837 _89861 _89862 _89863 P f x t)). Qed.
Lemma lem3463857 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (f : type1524 _89837 _89861 _89862 _89863) (x : _89837) (t : _89837 -> Prop) : (term71 _89837 _89861 _89862 _89863 P f x t) = (term453 _89837 _89861 _89862 _89863 P f x t).
Proof. exact (TRANS (@lem3463801 _89837 _89861 _89862 _89863 P f x t) (@lem3463856 _89837 _89861 _89862 _89863 P f x t)). Qed.
Lemma lem3463858 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (f : type1524 _89837 _89861 _89862 _89863) (x : _89837) : (term81 _89837 _89861 _89862 _89863 P f x) = (term454 _89837 _89861 _89862 _89863 P f x).
Proof. exact (fun_ext (fun t : _89837 -> Prop => @lem3463857 _89837 _89861 _89862 _89863 P f x t)). Qed.
Lemma lem3463859 {_89837 : Type'} : (@all (_89837 -> Prop)) = (@all (_89837 -> Prop)).
Proof. exact (eq_refl (@all (_89837 -> Prop))). Qed.
Lemma lem3463860 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (f : type1524 _89837 _89861 _89862 _89863) (x : _89837) : (term82 _89837 _89861 _89862 _89863 P f x) = (term455 _89837 _89861 _89862 _89863 P f x).
Proof. exact (MK_COMB (@lem3463859 _89837) (@lem3463858 _89837 _89861 _89862 _89863 P f x)). Qed.
Lemma lem3463873 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (f : type1524 _89837 _89861 _89862 _89863) (x : _89863) (y : _89862) (z : _89861) (x' : _89837) (t : _89837 -> Prop) : (term446 _89837 _89861 _89862 _89863 P f x y z x' t) = (term446 _89837 _89861 _89862 _89863 P f x y z x' t).
Proof. exact (eq_refl (term446 _89837 _89861 _89862 _89863 P f x y z x' t)). Qed.
Lemma lem3463874 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (f : type1524 _89837 _89861 _89862 _89863) (x : _89863) (y : _89862) (x' : _89837) (t : _89837 -> Prop) : (term448 _89837 _89861 _89862 _89863 P f x y x' t) = (term448 _89837 _89861 _89862 _89863 P f x y x' t).
Proof. exact (fun_ext (fun z : _89861 => @lem3463873 _89837 _89861 _89862 _89863 P f x y z x' t)). Qed.
Lemma lem3463875 {_89861 : Type'} : (@all _89861) = (@all _89861).
Proof. exact (eq_refl (@all _89861)). Qed.
Lemma lem3463876 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (f : type1524 _89837 _89861 _89862 _89863) (x : _89863) (y : _89862) (x' : _89837) (t : _89837 -> Prop) : (term449 _89837 _89861 _89862 _89863 P f x y x' t) = (term449 _89837 _89861 _89862 _89863 P f x y x' t).
Proof. exact (MK_COMB (@lem3463875 _89861) (@lem3463874 _89837 _89861 _89862 _89863 P f x y x' t)). Qed.
Lemma lem3463877 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (f : type1524 _89837 _89861 _89862 _89863) (x : _89863) (x' : _89837) (t : _89837 -> Prop) : (term450 _89837 _89861 _89862 _89863 P f x x' t) = (term450 _89837 _89861 _89862 _89863 P f x x' t).
Proof. exact (fun_ext (fun y : _89862 => @lem3463876 _89837 _89861 _89862 _89863 P f x y x' t)). Qed.
Lemma lem3463878 {_89862 : Type'} : (@all _89862) = (@all _89862).
Proof. exact (eq_refl (@all _89862)). Qed.
Lemma lem3463879 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (f : type1524 _89837 _89861 _89862 _89863) (x : _89863) (x' : _89837) (t : _89837 -> Prop) : (term451 _89837 _89861 _89862 _89863 P f x x' t) = (term451 _89837 _89861 _89862 _89863 P f x x' t).
Proof. exact (MK_COMB (@lem3463878 _89862) (@lem3463877 _89837 _89861 _89862 _89863 P f x x' t)). Qed.
Lemma lem3463880 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (f : type1524 _89837 _89861 _89862 _89863) (x : _89837) (t : _89837 -> Prop) : (term452 _89837 _89861 _89862 _89863 P f x t) = (term452 _89837 _89861 _89862 _89863 P f x t).
Proof. exact (fun_ext (fun x' : _89863 => @lem3463879 _89837 _89861 _89862 _89863 P f x' x t)). Qed.
Lemma lem3463881 {_89863 : Type'} : (@all _89863) = (@all _89863).
Proof. exact (eq_refl (@all _89863)). Qed.
Lemma lem3463882 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (f : type1524 _89837 _89861 _89862 _89863) (x : _89837) (t : _89837 -> Prop) : (term453 _89837 _89861 _89862 _89863 P f x t) = (term453 _89837 _89861 _89862 _89863 P f x t).
Proof. exact (MK_COMB (@lem3463881 _89863) (@lem3463880 _89837 _89861 _89862 _89863 P f x t)). Qed.
Lemma lem3463883 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (f : type1524 _89837 _89861 _89862 _89863) (x : _89837) : (term454 _89837 _89861 _89862 _89863 P f x) = (term454 _89837 _89861 _89862 _89863 P f x).
Proof. exact (fun_ext (fun t : _89837 -> Prop => @lem3463882 _89837 _89861 _89862 _89863 P f x t)). Qed.
Lemma lem3463884 {_89837 : Type'} : (@all (_89837 -> Prop)) = (@all (_89837 -> Prop)).
Proof. exact (eq_refl (@all (_89837 -> Prop))). Qed.
Lemma lem3463885 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (f : type1524 _89837 _89861 _89862 _89863) (x : _89837) : (term455 _89837 _89861 _89862 _89863 P f x) = (term455 _89837 _89861 _89862 _89863 P f x).
Proof. exact (MK_COMB (@lem3463884 _89837) (@lem3463883 _89837 _89861 _89862 _89863 P f x)). Qed.
Lemma lem3463886 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (f : type1524 _89837 _89861 _89862 _89863) (x : _89837) : (term82 _89837 _89861 _89862 _89863 P f x) = (term455 _89837 _89861 _89862 _89863 P f x).
Proof. exact (TRANS (@lem3463860 _89837 _89861 _89862 _89863 P f x) (@lem3463885 _89837 _89861 _89862 _89863 P f x)). Qed.
Lemma lem3463887 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (x : _89837) (f : type1524 _89837 _89861 _89862 _89863) (x' : _89863) (y : _89862) (z : _89861) (h1 : term162 _89837 _89861 _89862 _89863 P x f x' y z) : term455 _89837 _89861 _89862 _89863 P f x.
Proof. exact (EQ_MP (@lem3463886 _89837 _89861 _89862 _89863 P f x) (@lem3463769 _89837 _89861 _89862 _89863 P x f x' y z h1)). Qed.
Lemma lem3463903 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (x : _89837) (f : type1524 _89837 _89861 _89862 _89863) (x' : _89863) (y : _89862) (z : _89861) : (term86 _89837 _89861 _89862 _89863 P x f x' y z) = (term86 _89837 _89861 _89862 _89863 P x f x' y z).
Proof. exact (eq_refl (term86 _89837 _89861 _89862 _89863 P x f x' y z)). Qed.
Lemma lem3463904 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (x : _89837) (f : type1524 _89837 _89861 _89862 _89863) (x' : _89863) (y : _89862) : (term96 _89837 _89861 _89862 _89863 P x f x' y) = (term96 _89837 _89861 _89862 _89863 P x f x' y).
Proof. exact (fun_ext (fun z : _89861 => @lem3463903 _89837 _89861 _89862 _89863 P x f x' y z)). Qed.
Lemma lem3463905 {_89861 : Type'} : (@all _89861) = (@all _89861).
Proof. exact (eq_refl (@all _89861)). Qed.
Lemma lem3463906 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (x : _89837) (f : type1524 _89837 _89861 _89862 _89863) (x' : _89863) (y : _89862) : (term97 _89837 _89861 _89862 _89863 P x f x' y) = (term97 _89837 _89861 _89862 _89863 P x f x' y).
Proof. exact (MK_COMB (@lem3463905 _89861) (@lem3463904 _89837 _89861 _89862 _89863 P x f x' y)). Qed.
Lemma lem3463907 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (x : _89837) (f : type1524 _89837 _89861 _89862 _89863) (x' : _89863) : (term105 _89837 _89861 _89862 _89863 P x f x') = (term105 _89837 _89861 _89862 _89863 P x f x').
Proof. exact (fun_ext (fun y : _89862 => @lem3463906 _89837 _89861 _89862 _89863 P x f x' y)). Qed.
Lemma lem3463908 {_89862 : Type'} : (@all _89862) = (@all _89862).
Proof. exact (eq_refl (@all _89862)). Qed.
Lemma lem3463909 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (x : _89837) (f : type1524 _89837 _89861 _89862 _89863) (x' : _89863) : (term106 _89837 _89861 _89862 _89863 P x f x') = (term106 _89837 _89861 _89862 _89863 P x f x').
Proof. exact (MK_COMB (@lem3463908 _89862) (@lem3463907 _89837 _89861 _89862 _89863 P x f x')). Qed.
Lemma lem3463910 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (x : _89837) (f : type1524 _89837 _89861 _89862 _89863) : (term114 _89837 _89861 _89862 _89863 P x f) = (term114 _89837 _89861 _89862 _89863 P x f).
Proof. exact (fun_ext (fun x' : _89863 => @lem3463909 _89837 _89861 _89862 _89863 P x f x')). Qed.
Lemma lem3463911 {_89863 : Type'} : (@all _89863) = (@all _89863).
Proof. exact (eq_refl (@all _89863)). Qed.
Lemma lem3463913 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (x : _89837) (f : type1524 _89837 _89861 _89862 _89863) : (term115 _89837 _89861 _89862 _89863 P x f) = (term115 _89837 _89861 _89862 _89863 P x f).
Proof. exact (MK_COMB (@lem3463911 _89863) (@lem3463910 _89837 _89861 _89862 _89863 P x f)). Qed.
Lemma lem3463914 {_89837 _89861 _89862 _89863 : Type'} (x'' : _89863) (y' : _89862) (z' : _89861) (t : _89837 -> Prop) (P : type1517 _89861 _89862 _89863) (x : _89837) (f : type1524 _89837 _89861 _89862 _89863) (h1 : term281 _89837 _89861 _89862 _89863 x'' y' z' t P x f) : term115 _89837 _89861 _89862 _89863 P x f.
Proof. exact (EQ_MP (@lem3463913 _89837 _89861 _89862 _89863 P x f) (@lem3463772 _89837 _89861 _89862 _89863 x'' y' z' t P x f h1)). Qed.
Lemma lem3463927 {_89837 _89861 _89862 _89863 : Type'} (_36564 : _89837 -> Prop) (P : type1517 _89861 _89862 _89863) (x : _89837) (f : type1524 _89837 _89861 _89862 _89863) (x' : _89863) (y : _89862) (z : _89861) (h1 : term162 _89837 _89861 _89862 _89863 P x f x' y z) : term456 _89837 _89861 _89862 _89863 P f x _36564.
Proof. exact (@lem3463887 _89837 _89861 _89862 _89863 P x f x' y z h1 _36564). Qed.
Lemma lem3463928 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (f : type1524 _89837 _89861 _89862 _89863) (x : _89837) (_36564 : _89837 -> Prop) : (term456 _89837 _89861 _89862 _89863 P f x _36564) = (term453 _89837 _89861 _89862 _89863 P f x _36564).
Proof. exact (eq_refl (term456 _89837 _89861 _89862 _89863 P f x _36564)). Qed.
Lemma lem3463929 {_89837 _89861 _89862 _89863 : Type'} (_36564 : _89837 -> Prop) (P : type1517 _89861 _89862 _89863) (x : _89837) (f : type1524 _89837 _89861 _89862 _89863) (x' : _89863) (y : _89862) (z : _89861) (h1 : term162 _89837 _89861 _89862 _89863 P x f x' y z) : term453 _89837 _89861 _89862 _89863 P f x _36564.
Proof. exact (EQ_MP (@lem3463928 _89837 _89861 _89862 _89863 P f x _36564) (@lem3463927 _89837 _89861 _89862 _89863 _36564 P x f x' y z h1)). Qed.
Lemma lem3463930 {_89837 _89861 _89862 _89863 : Type'} (_36564 : _89837 -> Prop) (_36565 : _89863) (P : type1517 _89861 _89862 _89863) (x : _89837) (f : type1524 _89837 _89861 _89862 _89863) (x' : _89863) (y : _89862) (z : _89861) (h1 : term162 _89837 _89861 _89862 _89863 P x f x' y z) : term457 _89837 _89861 _89862 _89863 P f x _36564 _36565.
Proof. exact (@lem3463929 _89837 _89861 _89862 _89863 _36564 P x f x' y z h1 _36565). Qed.
Lemma lem3463931 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (f : type1524 _89837 _89861 _89862 _89863) (_36565 : _89863) (x : _89837) (_36564 : _89837 -> Prop) : (term457 _89837 _89861 _89862 _89863 P f x _36564 _36565) = (term451 _89837 _89861 _89862 _89863 P f _36565 x _36564).
Proof. exact (eq_refl (term457 _89837 _89861 _89862 _89863 P f x _36564 _36565)). Qed.
Lemma lem3463932 {_89837 _89861 _89862 _89863 : Type'} (_36565 : _89863) (_36564 : _89837 -> Prop) (P : type1517 _89861 _89862 _89863) (x : _89837) (f : type1524 _89837 _89861 _89862 _89863) (x' : _89863) (y : _89862) (z : _89861) (h1 : term162 _89837 _89861 _89862 _89863 P x f x' y z) : term451 _89837 _89861 _89862 _89863 P f _36565 x _36564.
Proof. exact (EQ_MP (@lem3463931 _89837 _89861 _89862 _89863 P f _36565 x _36564) (@lem3463930 _89837 _89861 _89862 _89863 _36564 _36565 P x f x' y z h1)). Qed.
Lemma lem3463933 {_89837 _89861 _89862 _89863 : Type'} (_36565 : _89863) (_36564 : _89837 -> Prop) (_36566 : _89862) (P : type1517 _89861 _89862 _89863) (x : _89837) (f : type1524 _89837 _89861 _89862 _89863) (x' : _89863) (y : _89862) (z : _89861) (h1 : term162 _89837 _89861 _89862 _89863 P x f x' y z) : term458 _89837 _89861 _89862 _89863 P f _36565 x _36564 _36566.
Proof. exact (@lem3463932 _89837 _89861 _89862 _89863 _36565 _36564 P x f x' y z h1 _36566). Qed.
Lemma lem3463934 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (f : type1524 _89837 _89861 _89862 _89863) (_36565 : _89863) (_36566 : _89862) (x : _89837) (_36564 : _89837 -> Prop) : (term458 _89837 _89861 _89862 _89863 P f _36565 x _36564 _36566) = (term449 _89837 _89861 _89862 _89863 P f _36565 _36566 x _36564).
Proof. exact (eq_refl (term458 _89837 _89861 _89862 _89863 P f _36565 x _36564 _36566)). Qed.
Lemma lem3463935 {_89837 _89861 _89862 _89863 : Type'} (_36565 : _89863) (_36566 : _89862) (_36564 : _89837 -> Prop) (P : type1517 _89861 _89862 _89863) (x : _89837) (f : type1524 _89837 _89861 _89862 _89863) (x' : _89863) (y : _89862) (z : _89861) (h1 : term162 _89837 _89861 _89862 _89863 P x f x' y z) : term449 _89837 _89861 _89862 _89863 P f _36565 _36566 x _36564.
Proof. exact (EQ_MP (@lem3463934 _89837 _89861 _89862 _89863 P f _36565 _36566 x _36564) (@lem3463933 _89837 _89861 _89862 _89863 _36565 _36564 _36566 P x f x' y z h1)). Qed.
Lemma lem3463936 {_89837 _89861 _89862 _89863 : Type'} (_36565 : _89863) (_36566 : _89862) (_36564 : _89837 -> Prop) (_36567 : _89861) (P : type1517 _89861 _89862 _89863) (x : _89837) (f : type1524 _89837 _89861 _89862 _89863) (x' : _89863) (y : _89862) (z : _89861) (h1 : term162 _89837 _89861 _89862 _89863 P x f x' y z) : term459 _89837 _89861 _89862 _89863 P f _36565 _36566 x _36564 _36567.
Proof. exact (@lem3463935 _89837 _89861 _89862 _89863 _36565 _36566 _36564 P x f x' y z h1 _36567). Qed.
Lemma lem3463937 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (f : type1524 _89837 _89861 _89862 _89863) (_36565 : _89863) (_36566 : _89862) (_36567 : _89861) (x : _89837) (_36564 : _89837 -> Prop) : (term459 _89837 _89861 _89862 _89863 P f _36565 _36566 x _36564 _36567) = (term446 _89837 _89861 _89862 _89863 P f _36565 _36566 _36567 x _36564).
Proof. exact (eq_refl (term459 _89837 _89861 _89862 _89863 P f _36565 _36566 x _36564 _36567)). Qed.
Lemma lem3463938 {_89837 _89861 _89862 _89863 : Type'} (_36565 : _89863) (_36566 : _89862) (_36567 : _89861) (_36564 : _89837 -> Prop) (P : type1517 _89861 _89862 _89863) (x : _89837) (f : type1524 _89837 _89861 _89862 _89863) (x' : _89863) (y : _89862) (z : _89861) (h1 : term162 _89837 _89861 _89862 _89863 P x f x' y z) : term446 _89837 _89861 _89862 _89863 P f _36565 _36566 _36567 x _36564.
Proof. exact (EQ_MP (@lem3463937 _89837 _89861 _89862 _89863 P f _36565 _36566 _36567 x _36564) (@lem3463936 _89837 _89861 _89862 _89863 _36565 _36566 _36564 _36567 P x f x' y z h1)). Qed.
Lemma lem3463939 {_89837 _89861 _89862 _89863 : Type'} (_36568 : _89863) (x'' : _89863) (y' : _89862) (z' : _89861) (t : _89837 -> Prop) (P : type1517 _89861 _89862 _89863) (x : _89837) (f : type1524 _89837 _89861 _89862 _89863) (h1 : term281 _89837 _89861 _89862 _89863 x'' y' z' t P x f) : term460 _89837 _89861 _89862 _89863 P x f _36568.
Proof. exact (@lem3463914 _89837 _89861 _89862 _89863 x'' y' z' t P x f h1 _36568). Qed.
Lemma lem3463940 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (x : _89837) (f : type1524 _89837 _89861 _89862 _89863) (_36568 : _89863) : (term460 _89837 _89861 _89862 _89863 P x f _36568) = (term106 _89837 _89861 _89862 _89863 P x f _36568).
Proof. exact (eq_refl (term460 _89837 _89861 _89862 _89863 P x f _36568)). Qed.
Lemma lem3463941 {_89837 _89861 _89862 _89863 : Type'} (_36568 : _89863) (x'' : _89863) (y' : _89862) (z' : _89861) (t : _89837 -> Prop) (P : type1517 _89861 _89862 _89863) (x : _89837) (f : type1524 _89837 _89861 _89862 _89863) (h1 : term281 _89837 _89861 _89862 _89863 x'' y' z' t P x f) : term106 _89837 _89861 _89862 _89863 P x f _36568.
Proof. exact (EQ_MP (@lem3463940 _89837 _89861 _89862 _89863 P x f _36568) (@lem3463939 _89837 _89861 _89862 _89863 _36568 x'' y' z' t P x f h1)). Qed.
Lemma lem3463942 {_89837 _89861 _89862 _89863 : Type'} (_36568 : _89863) (_36569 : _89862) (x'' : _89863) (y' : _89862) (z' : _89861) (t : _89837 -> Prop) (P : type1517 _89861 _89862 _89863) (x : _89837) (f : type1524 _89837 _89861 _89862 _89863) (h1 : term281 _89837 _89861 _89862 _89863 x'' y' z' t P x f) : term461 _89837 _89861 _89862 _89863 P x f _36568 _36569.
Proof. exact (@lem3463941 _89837 _89861 _89862 _89863 _36568 x'' y' z' t P x f h1 _36569). Qed.
Lemma lem3463943 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (x : _89837) (f : type1524 _89837 _89861 _89862 _89863) (_36568 : _89863) (_36569 : _89862) : (term461 _89837 _89861 _89862 _89863 P x f _36568 _36569) = (term97 _89837 _89861 _89862 _89863 P x f _36568 _36569).
Proof. exact (eq_refl (term461 _89837 _89861 _89862 _89863 P x f _36568 _36569)). Qed.
Lemma lem3463944 {_89837 _89861 _89862 _89863 : Type'} (_36568 : _89863) (_36569 : _89862) (x'' : _89863) (y' : _89862) (z' : _89861) (t : _89837 -> Prop) (P : type1517 _89861 _89862 _89863) (x : _89837) (f : type1524 _89837 _89861 _89862 _89863) (h1 : term281 _89837 _89861 _89862 _89863 x'' y' z' t P x f) : term97 _89837 _89861 _89862 _89863 P x f _36568 _36569.
Proof. exact (EQ_MP (@lem3463943 _89837 _89861 _89862 _89863 P x f _36568 _36569) (@lem3463942 _89837 _89861 _89862 _89863 _36568 _36569 x'' y' z' t P x f h1)). Qed.
Lemma lem3463945 {_89837 _89861 _89862 _89863 : Type'} (_36568 : _89863) (_36569 : _89862) (_36570 : _89861) (x'' : _89863) (y' : _89862) (z' : _89861) (t : _89837 -> Prop) (P : type1517 _89861 _89862 _89863) (x : _89837) (f : type1524 _89837 _89861 _89862 _89863) (h1 : term281 _89837 _89861 _89862 _89863 x'' y' z' t P x f) : term462 _89837 _89861 _89862 _89863 P x f _36568 _36569 _36570.
Proof. exact (@lem3463944 _89837 _89861 _89862 _89863 _36568 _36569 x'' y' z' t P x f h1 _36570). Qed.
Lemma lem3463946 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (x : _89837) (f : type1524 _89837 _89861 _89862 _89863) (_36568 : _89863) (_36569 : _89862) (_36570 : _89861) : (term462 _89837 _89861 _89862 _89863 P x f _36568 _36569 _36570) = (term86 _89837 _89861 _89862 _89863 P x f _36568 _36569 _36570).
Proof. exact (eq_refl (term462 _89837 _89861 _89862 _89863 P x f _36568 _36569 _36570)). Qed.
Lemma lem3463958 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (f : type1524 _89837 _89861 _89862 _89863) (_36565 : _89863) (_36566 : _89862) (_36567 : _89861) (x : _89837) (_36564 : _89837 -> Prop) : (term446 _89837 _89861 _89862 _89863 P f _36565 _36566 _36567 x _36564) = (term463 _89837 _89861 _89862 _89863 P f _36565 _36566 _36567 x _36564).
Proof. exact (@lem3458986 (term464 _89861 _89862 _89863 P _36565 _36566 _36567) (term465 _89837 _89861 _89862 _89863 _36564 f _36565 _36566 _36567) (@IN _89837 x _36564)). Qed.
Lemma lem3463959 {_89837 _89861 _89862 _89863 : Type'} (_36565 : _89863) (_36566 : _89862) (_36567 : _89861) (_36564 : _89837 -> Prop) (P : type1517 _89861 _89862 _89863) (x : _89837) (f : type1524 _89837 _89861 _89862 _89863) (x' : _89863) (y : _89862) (z : _89861) (h1 : term162 _89837 _89861 _89862 _89863 P x f x' y z) : term463 _89837 _89861 _89862 _89863 P f _36565 _36566 _36567 x _36564.
Proof. exact (EQ_MP (@lem3463958 _89837 _89861 _89862 _89863 P f _36565 _36566 _36567 x _36564) (@lem3463938 _89837 _89861 _89862 _89863 _36565 _36566 _36567 _36564 P x f x' y z h1)). Qed.
Lemma lem3463963 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (x : _89837) (f : type1524 _89837 _89861 _89862 _89863) (x' : _89863) (y : _89862) (z : _89861) (h1 : term162 _89837 _89861 _89862 _89863 P x f x' y z) : term466 _89837 _89861 _89862 _89863 x f x' y z.
Proof. exact (proj2 (@lem3463768 _89837 _89861 _89862 _89863 P x f x' y z h1)). Qed.
Lemma lem3463971 {_89837 _89861 _89862 _89863 : Type'} (x'' : _89863) (y' : _89862) (z' : _89861) (t : _89837 -> Prop) (P : type1517 _89861 _89862 _89863) (x : _89837) (f : type1524 _89837 _89861 _89862 _89863) (h1 : term281 _89837 _89861 _89862 _89863 x'' y' z' t P x f) : term64 _89837 x t.
Proof. exact (proj2 (@lem3463773 _89837 _89861 _89862 _89863 x'' y' z' t P x f h1)). Qed.
Lemma lem3463975 {_89837 _89861 _89862 _89863 : Type'} (x'' : _89863) (y' : _89862) (z' : _89861) (t : _89837 -> Prop) (P : type1517 _89861 _89862 _89863) (x : _89837) (f : type1524 _89837 _89861 _89862 _89863) (h1 : term281 _89837 _89861 _89862 _89863 x'' y' z' t P x f) : t = (f x'' y' z').
Proof. exact (proj2 (@lem3463775 _89837 _89861 _89862 _89863 x'' y' z' t P x f h1)). Qed.
Lemma lem3464003 {_89837 _89861 _89862 _89863 : Type'} (_36568 : _89863) (_36569 : _89862) (_36570 : _89861) (x'' : _89863) (y' : _89862) (z' : _89861) (t : _89837 -> Prop) (P : type1517 _89861 _89862 _89863) (x : _89837) (f : type1524 _89837 _89861 _89862 _89863) (h1 : term281 _89837 _89861 _89862 _89863 x'' y' z' t P x f) : term86 _89837 _89861 _89862 _89863 P x f _36568 _36569 _36570.
Proof. exact (EQ_MP (@lem3463946 _89837 _89861 _89862 _89863 P x f _36568 _36569 _36570) (@lem3463945 _89837 _89861 _89862 _89863 _36568 _36569 _36570 x'' y' z' t P x f h1)). Qed.
Lemma lem3464004 {_89837 : Type'} (x : _89837) : (term467 _89837 x) = (term467 _89837 x).
Proof. exact (eq_refl (term467 _89837 x)). Qed.
Lemma lem3464005 {_89837 _89861 _89862 _89863 : Type'} (x'' : _89863) (y' : _89862) (z' : _89861) (t : _89837 -> Prop) (P : type1517 _89861 _89862 _89863) (x : _89837) (f : type1524 _89837 _89861 _89862 _89863) (h1 : term281 _89837 _89861 _89862 _89863 x'' y' z' t P x f) : (term468 _89837 x t) = (term469 _89837 _89861 _89862 _89863 x f x'' y' z').
Proof. exact (MK_COMB (@lem3464004 _89837 x) (@lem3463975 _89837 _89861 _89862 _89863 x'' y' z' t P x f h1)). Qed.
Lemma lem3464006 {_89837 _89861 _89862 _89863 : Type'} (x : _89837) (f : type1524 _89837 _89861 _89862 _89863) (x'' : _89863) (y' : _89862) (z' : _89861) : (term469 _89837 _89861 _89862 _89863 x f x'' y' z') = (term466 _89837 _89861 _89862 _89863 x f x'' y' z').
Proof. exact (eq_refl (term469 _89837 _89861 _89862 _89863 x f x'' y' z')). Qed.
Lemma lem3464007 {_89837 : Type'} (x : _89837) (t : _89837 -> Prop) : (term470 _89837 x t) = (term470 _89837 x t).
Proof. exact (eq_refl (term470 _89837 x t)). Qed.
Lemma lem3464008 {_89837 _89861 _89862 _89863 : Type'} (t : _89837 -> Prop) (x : _89837) (f : type1524 _89837 _89861 _89862 _89863) (x'' : _89863) (y' : _89862) (z' : _89861) : ((term468 _89837 x t) = (term469 _89837 _89861 _89862 _89863 x f x'' y' z')) = ((term468 _89837 x t) = (term466 _89837 _89861 _89862 _89863 x f x'' y' z')).
Proof. exact (MK_COMB (@lem3464007 _89837 x t) (@lem3464006 _89837 _89861 _89862 _89863 x f x'' y' z')). Qed.
Lemma lem3464009 {_89837 : Type'} (x : _89837) (t : _89837 -> Prop) : (term468 _89837 x t) = (term64 _89837 x t).
Proof. exact (eq_refl (term468 _89837 x t)). Qed.
Lemma lem3464010 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem3464011 {_89837 : Type'} (x : _89837) (t : _89837 -> Prop) : (term470 _89837 x t) = (term471 _89837 x t).
Proof. exact (MK_COMB (@lem3464010) (@lem3464009 _89837 x t)). Qed.
Lemma lem3464012 {_89837 _89861 _89862 _89863 : Type'} (x : _89837) (f : type1524 _89837 _89861 _89862 _89863) (x'' : _89863) (y' : _89862) (z' : _89861) : (term466 _89837 _89861 _89862 _89863 x f x'' y' z') = (term466 _89837 _89861 _89862 _89863 x f x'' y' z').
Proof. exact (eq_refl (term466 _89837 _89861 _89862 _89863 x f x'' y' z')). Qed.
Lemma lem3464013 {_89837 _89861 _89862 _89863 : Type'} (t : _89837 -> Prop) (x : _89837) (f : type1524 _89837 _89861 _89862 _89863) (x'' : _89863) (y' : _89862) (z' : _89861) : ((term468 _89837 x t) = (term466 _89837 _89861 _89862 _89863 x f x'' y' z')) = ((term64 _89837 x t) = (term466 _89837 _89861 _89862 _89863 x f x'' y' z')).
Proof. exact (MK_COMB (@lem3464011 _89837 x t) (@lem3464012 _89837 _89861 _89862 _89863 x f x'' y' z')). Qed.
Lemma lem3464014 {_89837 _89861 _89862 _89863 : Type'} (t : _89837 -> Prop) (x : _89837) (f : type1524 _89837 _89861 _89862 _89863) (x'' : _89863) (y' : _89862) (z' : _89861) : ((term468 _89837 x t) = (term469 _89837 _89861 _89862 _89863 x f x'' y' z')) = ((term64 _89837 x t) = (term466 _89837 _89861 _89862 _89863 x f x'' y' z')).
Proof. exact (TRANS (@lem3464008 _89837 _89861 _89862 _89863 t x f x'' y' z') (@lem3464013 _89837 _89861 _89862 _89863 t x f x'' y' z')). Qed.
Lemma lem3464015 {_89837 _89861 _89862 _89863 : Type'} (x'' : _89863) (y' : _89862) (z' : _89861) (t : _89837 -> Prop) (P : type1517 _89861 _89862 _89863) (x : _89837) (f : type1524 _89837 _89861 _89862 _89863) (h1 : term281 _89837 _89861 _89862 _89863 x'' y' z' t P x f) : (term64 _89837 x t) = (term466 _89837 _89861 _89862 _89863 x f x'' y' z').
Proof. exact (EQ_MP (@lem3464014 _89837 _89861 _89862 _89863 t x f x'' y' z') (@lem3464005 _89837 _89861 _89862 _89863 x'' y' z' t P x f h1)). Qed.
Lemma lem3464016 {_89837 _89861 _89862 _89863 : Type'} (x'' : _89863) (y' : _89862) (z' : _89861) (t : _89837 -> Prop) (P : type1517 _89861 _89862 _89863) (x : _89837) (f : type1524 _89837 _89861 _89862 _89863) (h1 : term281 _89837 _89861 _89862 _89863 x'' y' z' t P x f) : term466 _89837 _89861 _89862 _89863 x f x'' y' z'.
Proof. exact (EQ_MP (@lem3464015 _89837 _89861 _89862 _89863 x'' y' z' t P x f h1) (@lem3463971 _89837 _89861 _89862 _89863 x'' y' z' t P x f h1)). Qed.
Lemma lem3464109 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (x : _89837) (f : type1524 _89837 _89861 _89862 _89863) (x' : _89863) (y : _89862) (z : _89861) (h1 : term162 _89837 _89861 _89862 _89863 P x f x' y z) : P x' y z.
Proof. exact (proj1 (@lem3463768 _89837 _89861 _89862 _89863 P x f x' y z h1)). Qed.
Lemma lem3464110 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (x : _89837) (f : type1524 _89837 _89861 _89862 _89863) (x' : _89863) (y : _89862) (z : _89861) (h1 : term162 _89837 _89861 _89862 _89863 P x f x' y z) : term472 _89861 _89862 _89863 P x' y z.
Proof. exact (fun h0 : term464 _89861 _89862 _89863 P x' y z => @lem3464109 _89837 _89861 _89862 _89863 P x f x' y z h1). Qed.
Lemma lem3464112 (p : Prop) : (term473 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem3464113 {_89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (x' : _89863) (y : _89862) (z : _89861) : (term472 _89861 _89862 _89863 P x' y z) = (P x' y z).
Proof. exact (@lem3464112 (P x' y z)). Qed.
Lemma lem3464114 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (x : _89837) (f : type1524 _89837 _89861 _89862 _89863) (x' : _89863) (y : _89862) (z : _89861) (h1 : term162 _89837 _89861 _89862 _89863 P x f x' y z) : P x' y z.
Proof. exact (EQ_MP (@lem3464113 _89861 _89862 _89863 P x' y z) (@lem3464110 _89837 _89861 _89862 _89863 P x f x' y z h1)). Qed.
Lemma lem3464116 {_89837 : Type'} (x : _89837 -> Prop) : x = x.
Proof. exact (@lem21386 (_89837 -> Prop) x). Qed.
Lemma lem3464117 {_89837 : Type'} (x : _89837 -> Prop) : x = x.
Proof. exact (@lem3464116 _89837 x). Qed.
Lemma lem3464118 {_89837 _89861 _89862 _89863 : Type'} (f : type1524 _89837 _89861 _89862 _89863) (x' : _89863) (y : _89862) (z : _89861) : (f x' y z) = (f x' y z).
Proof. exact (@lem3464117 _89837 (f x' y z)). Qed.
Lemma lem3464119 {_89837 _89861 _89862 _89863 : Type'} (f : type1524 _89837 _89861 _89862 _89863) (x' : _89863) (y : _89862) (z : _89861) : term474 _89837 _89861 _89862 _89863 f x' y z.
Proof. exact (fun h0 : term475 _89837 _89861 _89862 _89863 f x' y z => @lem3464118 _89837 _89861 _89862 _89863 f x' y z). Qed.
Lemma lem3464121 (p : Prop) : (term473 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem3464122 {_89837 _89861 _89862 _89863 : Type'} (f : type1524 _89837 _89861 _89862 _89863) (x' : _89863) (y : _89862) (z : _89861) : (term474 _89837 _89861 _89862 _89863 f x' y z) = ((f x' y z) = (f x' y z)).
Proof. exact (@lem3464121 ((f x' y z) = (f x' y z))). Qed.
Lemma lem3464123 {_89837 _89861 _89862 _89863 : Type'} (f : type1524 _89837 _89861 _89862 _89863) (x' : _89863) (y : _89862) (z : _89861) : (f x' y z) = (f x' y z).
Proof. exact (EQ_MP (@lem3464122 _89837 _89861 _89862 _89863 f x' y z) (@lem3464119 _89837 _89861 _89862 _89863 f x' y z)). Qed.
Lemma lem3464139 (q : Prop) (p : Prop) : (p \/ q) = (q \/ p).
Proof. exact (proj1 (@lem827 (@el Prop) p q)). Qed.
Lemma lem3464140 {_89837 _89861 _89862 _89863 : Type'} (x : _89837) (_36564 : _89837 -> Prop) (f : type1524 _89837 _89861 _89862 _89863) (_36565 : _89863) (_36566 : _89862) (_36567 : _89861) : (term476 _89837 _89861 _89862 _89863 f _36565 _36566 _36567 x _36564) = (term477 _89837 _89861 _89862 _89863 x _36564 f _36565 _36566 _36567).
Proof. exact (@lem3464139 (@IN _89837 x _36564) (term465 _89837 _89861 _89862 _89863 _36564 f _36565 _36566 _36567)). Qed.
Lemma lem3464148 {_89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (_36565 : _89863) (_36566 : _89862) (_36567 : _89861) : (term478 _89861 _89862 _89863 P _36565 _36566 _36567) = (term478 _89861 _89862 _89863 P _36565 _36566 _36567).
Proof. exact (eq_refl (term478 _89861 _89862 _89863 P _36565 _36566 _36567)). Qed.
Lemma lem3464149 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (x : _89837) (_36564 : _89837 -> Prop) (f : type1524 _89837 _89861 _89862 _89863) (_36565 : _89863) (_36566 : _89862) (_36567 : _89861) : (term463 _89837 _89861 _89862 _89863 P f _36565 _36566 _36567 x _36564) = (term479 _89837 _89861 _89862 _89863 P x _36564 f _36565 _36566 _36567).
Proof. exact (MK_COMB (@lem3464148 _89861 _89862 _89863 P _36565 _36566 _36567) (@lem3464140 _89837 _89861 _89862 _89863 x _36564 f _36565 _36566 _36567)). Qed.
Lemma lem3464153 (q : Prop) (p : Prop) (r : Prop) : (term480 p q r) = (term480 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem3464154 {_89837 _89861 _89862 _89863 : Type'} (x : _89837) (P : type1517 _89861 _89862 _89863) (_36564 : _89837 -> Prop) (f : type1524 _89837 _89861 _89862 _89863) (_36565 : _89863) (_36566 : _89862) (_36567 : _89861) : (term479 _89837 _89861 _89862 _89863 P x _36564 f _36565 _36566 _36567) = (term481 _89837 _89861 _89862 _89863 x P _36564 f _36565 _36566 _36567).
Proof. exact (@lem3464153 (@IN _89837 x _36564) (term464 _89861 _89862 _89863 P _36565 _36566 _36567) (term465 _89837 _89861 _89862 _89863 _36564 f _36565 _36566 _36567)). Qed.
Lemma lem3464172 {_89837 _89861 _89862 _89863 : Type'} (x : _89837) (P : type1517 _89861 _89862 _89863) (_36564 : _89837 -> Prop) (f : type1524 _89837 _89861 _89862 _89863) (_36565 : _89863) (_36566 : _89862) (_36567 : _89861) : (term463 _89837 _89861 _89862 _89863 P f _36565 _36566 _36567 x _36564) = (term481 _89837 _89861 _89862 _89863 x P _36564 f _36565 _36566 _36567).
Proof. exact (TRANS (@lem3464149 _89837 _89861 _89862 _89863 P x _36564 f _36565 _36566 _36567) (@lem3464154 _89837 _89861 _89862 _89863 x P _36564 f _36565 _36566 _36567)). Qed.
Lemma lem3464173 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem3464174 {_89837 _89861 _89862 _89863 : Type'} (x : _89837) (P : type1517 _89861 _89862 _89863) (_36564 : _89837 -> Prop) (f : type1524 _89837 _89861 _89862 _89863) (_36565 : _89863) (_36566 : _89862) (_36567 : _89861) : (term482 _89837 _89861 _89862 _89863 P f _36565 _36566 _36567 x _36564) = (term483 _89837 _89861 _89862 _89863 x P _36564 f _36565 _36566 _36567).
Proof. exact (MK_COMB (@lem3464173) (@lem3464172 _89837 _89861 _89862 _89863 x P _36564 f _36565 _36566 _36567)). Qed.
Lemma lem3464192 {_89837 _89861 _89862 _89863 : Type'} (x : _89837) (P : type1517 _89861 _89862 _89863) (_36564 : _89837 -> Prop) (f : type1524 _89837 _89861 _89862 _89863) (_36565 : _89863) (_36566 : _89862) (_36567 : _89861) : (term481 _89837 _89861 _89862 _89863 x P _36564 f _36565 _36566 _36567) = (term481 _89837 _89861 _89862 _89863 x P _36564 f _36565 _36566 _36567).
Proof. exact (eq_refl (term481 _89837 _89861 _89862 _89863 x P _36564 f _36565 _36566 _36567)). Qed.
Lemma lem3464193 {_89837 _89861 _89862 _89863 : Type'} (x : _89837) (P : type1517 _89861 _89862 _89863) (_36564 : _89837 -> Prop) (f : type1524 _89837 _89861 _89862 _89863) (_36565 : _89863) (_36566 : _89862) (_36567 : _89861) : ((term463 _89837 _89861 _89862 _89863 P f _36565 _36566 _36567 x _36564) = (term481 _89837 _89861 _89862 _89863 x P _36564 f _36565 _36566 _36567)) = ((term481 _89837 _89861 _89862 _89863 x P _36564 f _36565 _36566 _36567) = (term481 _89837 _89861 _89862 _89863 x P _36564 f _36565 _36566 _36567)).
Proof. exact (MK_COMB (@lem3464174 _89837 _89861 _89862 _89863 x P _36564 f _36565 _36566 _36567) (@lem3464192 _89837 _89861 _89862 _89863 x P _36564 f _36565 _36566 _36567)). Qed.
Lemma lem3464195 {A : Type'} (x : A) : (x = x) = True.
Proof. exact (EQ_MP (@lem20665 A x) (@lem20664 A x)). Qed.
Lemma lem3464196 (x : Prop) : (x = x) = True.
Proof. exact (@lem3464195 Prop x). Qed.
Lemma lem3464197 {_89837 _89861 _89862 _89863 : Type'} (x : _89837) (P : type1517 _89861 _89862 _89863) (_36564 : _89837 -> Prop) (f : type1524 _89837 _89861 _89862 _89863) (_36565 : _89863) (_36566 : _89862) (_36567 : _89861) : ((term481 _89837 _89861 _89862 _89863 x P _36564 f _36565 _36566 _36567) = (term481 _89837 _89861 _89862 _89863 x P _36564 f _36565 _36566 _36567)) = True.
Proof. exact (@lem3464196 (term481 _89837 _89861 _89862 _89863 x P _36564 f _36565 _36566 _36567)). Qed.
Lemma lem3464198 {_89837 _89861 _89862 _89863 : Type'} (x : _89837) (P : type1517 _89861 _89862 _89863) (_36564 : _89837 -> Prop) (f : type1524 _89837 _89861 _89862 _89863) (_36565 : _89863) (_36566 : _89862) (_36567 : _89861) : ((term463 _89837 _89861 _89862 _89863 P f _36565 _36566 _36567 x _36564) = (term481 _89837 _89861 _89862 _89863 x P _36564 f _36565 _36566 _36567)) = True.
Proof. exact (TRANS (@lem3464193 _89837 _89861 _89862 _89863 x P _36564 f _36565 _36566 _36567) (@lem3464197 _89837 _89861 _89862 _89863 x P _36564 f _36565 _36566 _36567)). Qed.
Lemma lem3464199 {_89837 _89861 _89862 _89863 : Type'} (x : _89837) (P : type1517 _89861 _89862 _89863) (_36564 : _89837 -> Prop) (f : type1524 _89837 _89861 _89862 _89863) (_36565 : _89863) (_36566 : _89862) (_36567 : _89861) : True = ((term463 _89837 _89861 _89862 _89863 P f _36565 _36566 _36567 x _36564) = (term481 _89837 _89861 _89862 _89863 x P _36564 f _36565 _36566 _36567)).
Proof. exact (SYM (@lem3464198 _89837 _89861 _89862 _89863 x P _36564 f _36565 _36566 _36567)). Qed.
Lemma lem3464200 {_89837 _89861 _89862 _89863 : Type'} (x : _89837) (P : type1517 _89861 _89862 _89863) (_36564 : _89837 -> Prop) (f : type1524 _89837 _89861 _89862 _89863) (_36565 : _89863) (_36566 : _89862) (_36567 : _89861) : (term463 _89837 _89861 _89862 _89863 P f _36565 _36566 _36567 x _36564) = (term481 _89837 _89861 _89862 _89863 x P _36564 f _36565 _36566 _36567).
Proof. exact (EQ_MP (@lem3464199 _89837 _89861 _89862 _89863 x P _36564 f _36565 _36566 _36567) (@lem0)). Qed.
Lemma lem3464201 {_89837 _89861 _89862 _89863 : Type'} (_36564 : _89837 -> Prop) (_36565 : _89863) (_36566 : _89862) (_36567 : _89861) (P : type1517 _89861 _89862 _89863) (x : _89837) (f : type1524 _89837 _89861 _89862 _89863) (x' : _89863) (y : _89862) (z : _89861) (h1 : term162 _89837 _89861 _89862 _89863 P x f x' y z) : term481 _89837 _89861 _89862 _89863 x P _36564 f _36565 _36566 _36567.
Proof. exact (EQ_MP (@lem3464200 _89837 _89861 _89862 _89863 x P _36564 f _36565 _36566 _36567) (@lem3463959 _89837 _89861 _89862 _89863 _36565 _36566 _36567 _36564 P x f x' y z h1)). Qed.
Lemma lem3464203 (b : Prop) (a : Prop) : (a \/ b) = (term484 b a).
Proof. exact (EQ_MP (@lem20682 b a) (@lem20764 b a)). Qed.
Lemma lem3464204 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (f : type1524 _89837 _89861 _89862 _89863) (_36565 : _89863) (_36566 : _89862) (_36567 : _89861) (x : _89837) (_36564 : _89837 -> Prop) : (term481 _89837 _89861 _89862 _89863 x P _36564 f _36565 _36566 _36567) = (term485 _89837 _89861 _89862 _89863 P f _36565 _36566 _36567 x _36564).
Proof. exact (@lem3464203 (term40 _89837 _89861 _89862 _89863 P _36564 f _36565 _36566 _36567) (@IN _89837 x _36564)). Qed.
Lemma lem3464206 (a : Prop) (b : Prop) : (term486 a b) = (term487 a b).
Proof. exact (EQ_MP (@lem20789 a b) (@lem20895 a b)). Qed.
Lemma lem3464207 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (_36564 : _89837 -> Prop) (f : type1524 _89837 _89861 _89862 _89863) (_36565 : _89863) (_36566 : _89862) (_36567 : _89861) : (term488 _89837 _89861 _89862 _89863 P _36564 f _36565 _36566 _36567) = (term489 _89837 _89861 _89862 _89863 P _36564 f _36565 _36566 _36567).
Proof. exact (@lem3464206 (term464 _89861 _89862 _89863 P _36565 _36566 _36567) (term465 _89837 _89861 _89862 _89863 _36564 f _36565 _36566 _36567)). Qed.
Lemma lem3464209 (a : Prop) : (term8 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem3464210 {_89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (_36565 : _89863) (_36566 : _89862) (_36567 : _89861) : (term490 _89861 _89862 _89863 P _36565 _36566 _36567) = (P _36565 _36566 _36567).
Proof. exact (@lem3464209 (P _36565 _36566 _36567)). Qed.
Lemma lem3464211 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem3464212 {_89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (_36565 : _89863) (_36566 : _89862) (_36567 : _89861) : (term491 _89861 _89862 _89863 P _36565 _36566 _36567) = (term492 _89861 _89862 _89863 P _36565 _36566 _36567).
Proof. exact (MK_COMB (@lem3464211) (@lem3464210 _89861 _89862 _89863 P _36565 _36566 _36567)). Qed.
Lemma lem3464214 (a : Prop) : (term8 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem3464215 {_89837 _89861 _89862 _89863 : Type'} (_36564 : _89837 -> Prop) (f : type1524 _89837 _89861 _89862 _89863) (_36565 : _89863) (_36566 : _89862) (_36567 : _89861) : (term493 _89837 _89861 _89862 _89863 _36564 f _36565 _36566 _36567) = (_36564 = (f _36565 _36566 _36567)).
Proof. exact (@lem3464214 (_36564 = (f _36565 _36566 _36567))). Qed.
Lemma lem3464216 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (_36564 : _89837 -> Prop) (f : type1524 _89837 _89861 _89862 _89863) (_36565 : _89863) (_36566 : _89862) (_36567 : _89861) : (term489 _89837 _89861 _89862 _89863 P _36564 f _36565 _36566 _36567) = (term24 _89837 _89861 _89862 _89863 P _36564 f _36565 _36566 _36567).
Proof. exact (MK_COMB (@lem3464212 _89861 _89862 _89863 P _36565 _36566 _36567) (@lem3464215 _89837 _89861 _89862 _89863 _36564 f _36565 _36566 _36567)). Qed.
Lemma lem3464217 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (_36564 : _89837 -> Prop) (f : type1524 _89837 _89861 _89862 _89863) (_36565 : _89863) (_36566 : _89862) (_36567 : _89861) : (term488 _89837 _89861 _89862 _89863 P _36564 f _36565 _36566 _36567) = (term24 _89837 _89861 _89862 _89863 P _36564 f _36565 _36566 _36567).
Proof. exact (TRANS (@lem3464207 _89837 _89861 _89862 _89863 P _36564 f _36565 _36566 _36567) (@lem3464216 _89837 _89861 _89862 _89863 P _36564 f _36565 _36566 _36567)). Qed.
Lemma lem3464218 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem3464219 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (_36564 : _89837 -> Prop) (f : type1524 _89837 _89861 _89862 _89863) (_36565 : _89863) (_36566 : _89862) (_36567 : _89861) : (term494 _89837 _89861 _89862 _89863 P _36564 f _36565 _36566 _36567) = (term495 _89837 _89861 _89862 _89863 P _36564 f _36565 _36566 _36567).
Proof. exact (MK_COMB (@lem3464218) (@lem3464217 _89837 _89861 _89862 _89863 P _36564 f _36565 _36566 _36567)). Qed.
Lemma lem3464220 {_89837 : Type'} (x : _89837) (_36564 : _89837 -> Prop) : (@IN _89837 x _36564) = (@IN _89837 x _36564).
Proof. exact (eq_refl (@IN _89837 x _36564)). Qed.
Lemma lem3464221 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (f : type1524 _89837 _89861 _89862 _89863) (_36565 : _89863) (_36566 : _89862) (_36567 : _89861) (x : _89837) (_36564 : _89837 -> Prop) : (term485 _89837 _89861 _89862 _89863 P f _36565 _36566 _36567 x _36564) = (term496 _89837 _89861 _89862 _89863 P f _36565 _36566 _36567 x _36564).
Proof. exact (MK_COMB (@lem3464219 _89837 _89861 _89862 _89863 P _36564 f _36565 _36566 _36567) (@lem3464220 _89837 x _36564)). Qed.
Lemma lem3464222 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (f : type1524 _89837 _89861 _89862 _89863) (_36565 : _89863) (_36566 : _89862) (_36567 : _89861) (x : _89837) (_36564 : _89837 -> Prop) : (term481 _89837 _89861 _89862 _89863 x P _36564 f _36565 _36566 _36567) = (term496 _89837 _89861 _89862 _89863 P f _36565 _36566 _36567 x _36564).
Proof. exact (TRANS (@lem3464204 _89837 _89861 _89862 _89863 P f _36565 _36566 _36567 x _36564) (@lem3464221 _89837 _89861 _89862 _89863 P f _36565 _36566 _36567 x _36564)). Qed.
Lemma lem3464224 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (x : _89837) (f : type1524 _89837 _89861 _89862 _89863) (x' : _89863) (y : _89862) (z : _89861) (h1 : term162 _89837 _89861 _89862 _89863 P x f x' y z) : term497 _89837 _89861 _89862 _89863 P f x' y z.
Proof. exact (conj (@lem3464114 _89837 _89861 _89862 _89863 P x f x' y z h1) (@lem3464123 _89837 _89861 _89862 _89863 f x' y z)). Qed.
Lemma lem3464226 {_89837 _89861 _89862 _89863 : Type'} (_36565 : _89863) (_36566 : _89862) (_36567 : _89861) (_36564 : _89837 -> Prop) (P : type1517 _89861 _89862 _89863) (x : _89837) (f : type1524 _89837 _89861 _89862 _89863) (x' : _89863) (y : _89862) (z : _89861) (h1 : term162 _89837 _89861 _89862 _89863 P x f x' y z) : term496 _89837 _89861 _89862 _89863 P f _36565 _36566 _36567 x _36564.
Proof. exact (EQ_MP (@lem3464222 _89837 _89861 _89862 _89863 P f _36565 _36566 _36567 x _36564) (@lem3464201 _89837 _89861 _89862 _89863 _36564 _36565 _36566 _36567 P x f x' y z h1)). Qed.
Lemma lem3464227 {_89837 _89861 _89862 _89863 : Type'} (_36565 : _89863) (_36566 : _89862) (_36567 : _89861) (_36564 : _89837 -> Prop) (P : type1517 _89861 _89862 _89863) (x : _89837) (f : type1524 _89837 _89861 _89862 _89863) (x' : _89863) (y : _89862) (z : _89861) (h1 : term162 _89837 _89861 _89862 _89863 P x f x' y z) : term496 _89837 _89861 _89862 _89863 P f _36565 _36566 _36567 x _36564.
Proof. exact (@lem3464226 _89837 _89861 _89862 _89863 _36565 _36566 _36567 _36564 P x f x' y z h1). Qed.
Lemma lem3464228 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (x : _89837) (f : type1524 _89837 _89861 _89862 _89863) (x' : _89863) (y : _89862) (z : _89861) (h1 : term162 _89837 _89861 _89862 _89863 P x f x' y z) : term498 _89837 _89861 _89862 _89863 P x f x' y z.
Proof. exact (@lem3464227 _89837 _89861 _89862 _89863 x' y z (f x' y z) P x f x' y z h1). Qed.
Lemma lem3464231 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (x : _89837) (f : type1524 _89837 _89861 _89862 _89863) (x' : _89863) (y : _89862) (z : _89861) (h1 : term162 _89837 _89861 _89862 _89863 P x f x' y z) : term85 _89837 _89861 _89862 _89863 x f x' y z.
Proof. exact (@lem3464228 _89837 _89861 _89862 _89863 P x f x' y z h1 (@lem3464224 _89837 _89861 _89862 _89863 P x f x' y z h1)). Qed.
Lemma lem3464232 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (x : _89837) (f : type1524 _89837 _89861 _89862 _89863) (x' : _89863) (y : _89862) (z : _89861) (h1 : term162 _89837 _89861 _89862 _89863 P x f x' y z) : term499 _89837 _89861 _89862 _89863 x f x' y z.
Proof. exact (fun h0 : term466 _89837 _89861 _89862 _89863 x f x' y z => @lem3464231 _89837 _89861 _89862 _89863 P x f x' y z h1). Qed.
Lemma lem3464234 (p : Prop) : (term473 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem3464235 {_89837 _89861 _89862 _89863 : Type'} (x : _89837) (f : type1524 _89837 _89861 _89862 _89863) (x' : _89863) (y : _89862) (z : _89861) : (term499 _89837 _89861 _89862 _89863 x f x' y z) = (term85 _89837 _89861 _89862 _89863 x f x' y z).
Proof. exact (@lem3464234 (term85 _89837 _89861 _89862 _89863 x f x' y z)). Qed.
Lemma lem3464236 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (x : _89837) (f : type1524 _89837 _89861 _89862 _89863) (x' : _89863) (y : _89862) (z : _89861) (h1 : term162 _89837 _89861 _89862 _89863 P x f x' y z) : term85 _89837 _89861 _89862 _89863 x f x' y z.
Proof. exact (EQ_MP (@lem3464235 _89837 _89861 _89862 _89863 x f x' y z) (@lem3464232 _89837 _89861 _89862 _89863 P x f x' y z h1)). Qed.
Lemma lem3464239 (p : Prop) : (~ p) = (p -> False).
Proof. exact (EQ_MP (@lem21021 p) (@lem0)). Qed.
Lemma lem3464241 {_89837 _89861 _89862 _89863 : Type'} (x : _89837) (f : type1524 _89837 _89861 _89862 _89863) (x' : _89863) (y : _89862) (z : _89861) : (term466 _89837 _89861 _89862 _89863 x f x' y z) = (term500 _89837 _89861 _89862 _89863 x f x' y z).
Proof. exact (@lem3464239 (term85 _89837 _89861 _89862 _89863 x f x' y z)). Qed.
Lemma lem3464244 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (x : _89837) (f : type1524 _89837 _89861 _89862 _89863) (x' : _89863) (y : _89862) (z : _89861) (h1 : term162 _89837 _89861 _89862 _89863 P x f x' y z) : term500 _89837 _89861 _89862 _89863 x f x' y z.
Proof. exact (EQ_MP (@lem3464241 _89837 _89861 _89862 _89863 x f x' y z) (@lem3463963 _89837 _89861 _89862 _89863 P x f x' y z h1)). Qed.
Lemma lem3464247 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (x : _89837) (f : type1524 _89837 _89861 _89862 _89863) (x' : _89863) (y : _89862) (z : _89861) (h1 : term162 _89837 _89861 _89862 _89863 P x f x' y z) : False.
Proof. exact (@lem3464244 _89837 _89861 _89862 _89863 P x f x' y z h1 (@lem3464236 _89837 _89861 _89862 _89863 P x f x' y z h1)). Qed.
Lemma lem3464248 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (x : _89837) (f : type1524 _89837 _89861 _89862 _89863) (x' : _89863) (y : _89862) (z : _89861) (h1 : term162 _89837 _89861 _89862 _89863 P x f x' y z) : term501.
Proof. exact (fun h0 : ~ False => @lem3464247 _89837 _89861 _89862 _89863 P x f x' y z h1). Qed.
Lemma lem3464250 (p : Prop) : (term473 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem3464251 : term501 = False.
Proof. exact (@lem3464250 False). Qed.
Lemma lem3464252 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (x : _89837) (f : type1524 _89837 _89861 _89862 _89863) (x' : _89863) (y : _89862) (z : _89861) (h1 : term162 _89837 _89861 _89862 _89863 P x f x' y z) : False.
Proof. exact (EQ_MP (@lem3464251) (@lem3464248 _89837 _89861 _89862 _89863 P x f x' y z h1)). Qed.
Lemma lem3464254 {_89837 _89861 _89862 _89863 : Type'} (x'' : _89863) (y' : _89862) (z' : _89861) (t : _89837 -> Prop) (P : type1517 _89861 _89862 _89863) (x : _89837) (f : type1524 _89837 _89861 _89862 _89863) (h1 : term281 _89837 _89861 _89862 _89863 x'' y' z' t P x f) : P x'' y' z'.
Proof. exact (proj1 (@lem3463775 _89837 _89861 _89862 _89863 x'' y' z' t P x f h1)). Qed.
Lemma lem3464255 {_89837 _89861 _89862 _89863 : Type'} (x'' : _89863) (y' : _89862) (z' : _89861) (t : _89837 -> Prop) (P : type1517 _89861 _89862 _89863) (x : _89837) (f : type1524 _89837 _89861 _89862 _89863) (h1 : term281 _89837 _89861 _89862 _89863 x'' y' z' t P x f) : term472 _89861 _89862 _89863 P x'' y' z'.
Proof. exact (fun h0 : term464 _89861 _89862 _89863 P x'' y' z' => @lem3464254 _89837 _89861 _89862 _89863 x'' y' z' t P x f h1). Qed.
Lemma lem3464257 (p : Prop) : (term473 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem3464258 {_89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (x'' : _89863) (y' : _89862) (z' : _89861) : (term472 _89861 _89862 _89863 P x'' y' z') = (P x'' y' z').
Proof. exact (@lem3464257 (P x'' y' z')). Qed.
Lemma lem3464259 {_89837 _89861 _89862 _89863 : Type'} (x'' : _89863) (y' : _89862) (z' : _89861) (t : _89837 -> Prop) (P : type1517 _89861 _89862 _89863) (x : _89837) (f : type1524 _89837 _89861 _89862 _89863) (h1 : term281 _89837 _89861 _89862 _89863 x'' y' z' t P x f) : P x'' y' z'.
Proof. exact (EQ_MP (@lem3464258 _89861 _89862 _89863 P x'' y' z') (@lem3464255 _89837 _89861 _89862 _89863 x'' y' z' t P x f h1)). Qed.
Lemma lem3464265 (q : Prop) (p : Prop) : (p \/ q) = (q \/ p).
Proof. exact (proj1 (@lem827 (@el Prop) p q)). Qed.
Lemma lem3464266 {_89837 _89861 _89862 _89863 : Type'} (x : _89837) (f : type1524 _89837 _89861 _89862 _89863) (P : type1517 _89861 _89862 _89863) (_36568 : _89863) (_36569 : _89862) (_36570 : _89861) : (term86 _89837 _89861 _89862 _89863 P x f _36568 _36569 _36570) = (term502 _89837 _89861 _89862 _89863 x f P _36568 _36569 _36570).
Proof. exact (@lem3464265 (term85 _89837 _89861 _89862 _89863 x f _36568 _36569 _36570) (term464 _89861 _89862 _89863 P _36568 _36569 _36570)). Qed.
Lemma lem3464272 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem3464273 {_89837 _89861 _89862 _89863 : Type'} (x : _89837) (f : type1524 _89837 _89861 _89862 _89863) (P : type1517 _89861 _89862 _89863) (_36568 : _89863) (_36569 : _89862) (_36570 : _89861) : (term503 _89837 _89861 _89862 _89863 P x f _36568 _36569 _36570) = (term504 _89837 _89861 _89862 _89863 x f P _36568 _36569 _36570).
Proof. exact (MK_COMB (@lem3464272) (@lem3464266 _89837 _89861 _89862 _89863 x f P _36568 _36569 _36570)). Qed.
Lemma lem3464279 {_89837 _89861 _89862 _89863 : Type'} (x : _89837) (f : type1524 _89837 _89861 _89862 _89863) (P : type1517 _89861 _89862 _89863) (_36568 : _89863) (_36569 : _89862) (_36570 : _89861) : (term502 _89837 _89861 _89862 _89863 x f P _36568 _36569 _36570) = (term502 _89837 _89861 _89862 _89863 x f P _36568 _36569 _36570).
Proof. exact (eq_refl (term502 _89837 _89861 _89862 _89863 x f P _36568 _36569 _36570)). Qed.
Lemma lem3464280 {_89837 _89861 _89862 _89863 : Type'} (x : _89837) (f : type1524 _89837 _89861 _89862 _89863) (P : type1517 _89861 _89862 _89863) (_36568 : _89863) (_36569 : _89862) (_36570 : _89861) : ((term86 _89837 _89861 _89862 _89863 P x f _36568 _36569 _36570) = (term502 _89837 _89861 _89862 _89863 x f P _36568 _36569 _36570)) = ((term502 _89837 _89861 _89862 _89863 x f P _36568 _36569 _36570) = (term502 _89837 _89861 _89862 _89863 x f P _36568 _36569 _36570)).
Proof. exact (MK_COMB (@lem3464273 _89837 _89861 _89862 _89863 x f P _36568 _36569 _36570) (@lem3464279 _89837 _89861 _89862 _89863 x f P _36568 _36569 _36570)). Qed.
Lemma lem3464282 {A : Type'} (x : A) : (x = x) = True.
Proof. exact (EQ_MP (@lem20665 A x) (@lem20664 A x)). Qed.
Lemma lem3464283 (x : Prop) : (x = x) = True.
Proof. exact (@lem3464282 Prop x). Qed.
Lemma lem3464284 {_89837 _89861 _89862 _89863 : Type'} (x : _89837) (f : type1524 _89837 _89861 _89862 _89863) (P : type1517 _89861 _89862 _89863) (_36568 : _89863) (_36569 : _89862) (_36570 : _89861) : ((term502 _89837 _89861 _89862 _89863 x f P _36568 _36569 _36570) = (term502 _89837 _89861 _89862 _89863 x f P _36568 _36569 _36570)) = True.
Proof. exact (@lem3464283 (term502 _89837 _89861 _89862 _89863 x f P _36568 _36569 _36570)). Qed.
Lemma lem3464285 {_89837 _89861 _89862 _89863 : Type'} (x : _89837) (f : type1524 _89837 _89861 _89862 _89863) (P : type1517 _89861 _89862 _89863) (_36568 : _89863) (_36569 : _89862) (_36570 : _89861) : ((term86 _89837 _89861 _89862 _89863 P x f _36568 _36569 _36570) = (term502 _89837 _89861 _89862 _89863 x f P _36568 _36569 _36570)) = True.
Proof. exact (TRANS (@lem3464280 _89837 _89861 _89862 _89863 x f P _36568 _36569 _36570) (@lem3464284 _89837 _89861 _89862 _89863 x f P _36568 _36569 _36570)). Qed.
Lemma lem3464286 {_89837 _89861 _89862 _89863 : Type'} (x : _89837) (f : type1524 _89837 _89861 _89862 _89863) (P : type1517 _89861 _89862 _89863) (_36568 : _89863) (_36569 : _89862) (_36570 : _89861) : True = ((term86 _89837 _89861 _89862 _89863 P x f _36568 _36569 _36570) = (term502 _89837 _89861 _89862 _89863 x f P _36568 _36569 _36570)).
Proof. exact (SYM (@lem3464285 _89837 _89861 _89862 _89863 x f P _36568 _36569 _36570)). Qed.
Lemma lem3464287 {_89837 _89861 _89862 _89863 : Type'} (x : _89837) (f : type1524 _89837 _89861 _89862 _89863) (P : type1517 _89861 _89862 _89863) (_36568 : _89863) (_36569 : _89862) (_36570 : _89861) : (term86 _89837 _89861 _89862 _89863 P x f _36568 _36569 _36570) = (term502 _89837 _89861 _89862 _89863 x f P _36568 _36569 _36570).
Proof. exact (EQ_MP (@lem3464286 _89837 _89861 _89862 _89863 x f P _36568 _36569 _36570) (@lem0)). Qed.
Lemma lem3464288 {_89837 _89861 _89862 _89863 : Type'} (_36568 : _89863) (_36569 : _89862) (_36570 : _89861) (x'' : _89863) (y' : _89862) (z' : _89861) (t : _89837 -> Prop) (P : type1517 _89861 _89862 _89863) (x : _89837) (f : type1524 _89837 _89861 _89862 _89863) (h1 : term281 _89837 _89861 _89862 _89863 x'' y' z' t P x f) : term502 _89837 _89861 _89862 _89863 x f P _36568 _36569 _36570.
Proof. exact (EQ_MP (@lem3464287 _89837 _89861 _89862 _89863 x f P _36568 _36569 _36570) (@lem3464003 _89837 _89861 _89862 _89863 _36568 _36569 _36570 x'' y' z' t P x f h1)). Qed.
Lemma lem3464290 (b : Prop) (a : Prop) : (a \/ b) = (term484 b a).
Proof. exact (EQ_MP (@lem20682 b a) (@lem20764 b a)). Qed.
Lemma lem3464291 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (x : _89837) (f : type1524 _89837 _89861 _89862 _89863) (_36568 : _89863) (_36569 : _89862) (_36570 : _89861) : (term502 _89837 _89861 _89862 _89863 x f P _36568 _36569 _36570) = (term505 _89837 _89861 _89862 _89863 P x f _36568 _36569 _36570).
Proof. exact (@lem3464290 (term464 _89861 _89862 _89863 P _36568 _36569 _36570) (term85 _89837 _89861 _89862 _89863 x f _36568 _36569 _36570)). Qed.
Lemma lem3464293 (a : Prop) : (term8 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem3464294 {_89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (_36568 : _89863) (_36569 : _89862) (_36570 : _89861) : (term490 _89861 _89862 _89863 P _36568 _36569 _36570) = (P _36568 _36569 _36570).
Proof. exact (@lem3464293 (P _36568 _36569 _36570)). Qed.
Lemma lem3464295 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem3464296 {_89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (_36568 : _89863) (_36569 : _89862) (_36570 : _89861) : (term506 _89861 _89862 _89863 P _36568 _36569 _36570) = (term507 _89861 _89862 _89863 P _36568 _36569 _36570).
Proof. exact (MK_COMB (@lem3464295) (@lem3464294 _89861 _89862 _89863 P _36568 _36569 _36570)). Qed.
Lemma lem3464297 {_89837 _89861 _89862 _89863 : Type'} (x : _89837) (f : type1524 _89837 _89861 _89862 _89863) (_36568 : _89863) (_36569 : _89862) (_36570 : _89861) : (term85 _89837 _89861 _89862 _89863 x f _36568 _36569 _36570) = (term85 _89837 _89861 _89862 _89863 x f _36568 _36569 _36570).
Proof. exact (eq_refl (term85 _89837 _89861 _89862 _89863 x f _36568 _36569 _36570)). Qed.
Lemma lem3464298 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (x : _89837) (f : type1524 _89837 _89861 _89862 _89863) (_36568 : _89863) (_36569 : _89862) (_36570 : _89861) : (term505 _89837 _89861 _89862 _89863 P x f _36568 _36569 _36570) = (term17 _89837 _89861 _89862 _89863 P x f _36568 _36569 _36570).
Proof. exact (MK_COMB (@lem3464296 _89861 _89862 _89863 P _36568 _36569 _36570) (@lem3464297 _89837 _89861 _89862 _89863 x f _36568 _36569 _36570)). Qed.
Lemma lem3464299 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (x : _89837) (f : type1524 _89837 _89861 _89862 _89863) (_36568 : _89863) (_36569 : _89862) (_36570 : _89861) : (term502 _89837 _89861 _89862 _89863 x f P _36568 _36569 _36570) = (term17 _89837 _89861 _89862 _89863 P x f _36568 _36569 _36570).
Proof. exact (TRANS (@lem3464291 _89837 _89861 _89862 _89863 P x f _36568 _36569 _36570) (@lem3464298 _89837 _89861 _89862 _89863 P x f _36568 _36569 _36570)). Qed.
Lemma lem3464302 {_89837 _89861 _89862 _89863 : Type'} (_36568 : _89863) (_36569 : _89862) (_36570 : _89861) (x'' : _89863) (y' : _89862) (z' : _89861) (t : _89837 -> Prop) (P : type1517 _89861 _89862 _89863) (x : _89837) (f : type1524 _89837 _89861 _89862 _89863) (h1 : term281 _89837 _89861 _89862 _89863 x'' y' z' t P x f) : term17 _89837 _89861 _89862 _89863 P x f _36568 _36569 _36570.
Proof. exact (EQ_MP (@lem3464299 _89837 _89861 _89862 _89863 P x f _36568 _36569 _36570) (@lem3464288 _89837 _89861 _89862 _89863 _36568 _36569 _36570 x'' y' z' t P x f h1)). Qed.
Lemma lem3464303 {_89837 _89861 _89862 _89863 : Type'} (_36568 : _89863) (_36569 : _89862) (_36570 : _89861) (x'' : _89863) (y' : _89862) (z' : _89861) (t : _89837 -> Prop) (P : type1517 _89861 _89862 _89863) (x : _89837) (f : type1524 _89837 _89861 _89862 _89863) (h1 : term281 _89837 _89861 _89862 _89863 x'' y' z' t P x f) : term17 _89837 _89861 _89862 _89863 P x f _36568 _36569 _36570.
Proof. exact (@lem3464302 _89837 _89861 _89862 _89863 _36568 _36569 _36570 x'' y' z' t P x f h1). Qed.
Lemma lem3464304 {_89837 _89861 _89862 _89863 : Type'} (x'' : _89863) (y' : _89862) (z' : _89861) (t : _89837 -> Prop) (P : type1517 _89861 _89862 _89863) (x : _89837) (f : type1524 _89837 _89861 _89862 _89863) (h1 : term281 _89837 _89861 _89862 _89863 x'' y' z' t P x f) : term17 _89837 _89861 _89862 _89863 P x f x'' y' z'.
Proof. exact (@lem3464303 _89837 _89861 _89862 _89863 x'' y' z' x'' y' z' t P x f h1). Qed.
Lemma lem3464307 {_89837 _89861 _89862 _89863 : Type'} (x'' : _89863) (y' : _89862) (z' : _89861) (t : _89837 -> Prop) (P : type1517 _89861 _89862 _89863) (x : _89837) (f : type1524 _89837 _89861 _89862 _89863) (h1 : term281 _89837 _89861 _89862 _89863 x'' y' z' t P x f) : term85 _89837 _89861 _89862 _89863 x f x'' y' z'.
Proof. exact (@lem3464304 _89837 _89861 _89862 _89863 x'' y' z' t P x f h1 (@lem3464259 _89837 _89861 _89862 _89863 x'' y' z' t P x f h1)). Qed.
Lemma lem3464308 {_89837 _89861 _89862 _89863 : Type'} (x'' : _89863) (y' : _89862) (z' : _89861) (t : _89837 -> Prop) (P : type1517 _89861 _89862 _89863) (x : _89837) (f : type1524 _89837 _89861 _89862 _89863) (h1 : term281 _89837 _89861 _89862 _89863 x'' y' z' t P x f) : term499 _89837 _89861 _89862 _89863 x f x'' y' z'.
Proof. exact (fun h0 : term466 _89837 _89861 _89862 _89863 x f x'' y' z' => @lem3464307 _89837 _89861 _89862 _89863 x'' y' z' t P x f h1). Qed.
Lemma lem3464310 (p : Prop) : (term473 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem3464311 {_89837 _89861 _89862 _89863 : Type'} (x : _89837) (f : type1524 _89837 _89861 _89862 _89863) (x'' : _89863) (y' : _89862) (z' : _89861) : (term499 _89837 _89861 _89862 _89863 x f x'' y' z') = (term85 _89837 _89861 _89862 _89863 x f x'' y' z').
Proof. exact (@lem3464310 (term85 _89837 _89861 _89862 _89863 x f x'' y' z')). Qed.
Lemma lem3464312 {_89837 _89861 _89862 _89863 : Type'} (x'' : _89863) (y' : _89862) (z' : _89861) (t : _89837 -> Prop) (P : type1517 _89861 _89862 _89863) (x : _89837) (f : type1524 _89837 _89861 _89862 _89863) (h1 : term281 _89837 _89861 _89862 _89863 x'' y' z' t P x f) : term85 _89837 _89861 _89862 _89863 x f x'' y' z'.
Proof. exact (EQ_MP (@lem3464311 _89837 _89861 _89862 _89863 x f x'' y' z') (@lem3464308 _89837 _89861 _89862 _89863 x'' y' z' t P x f h1)). Qed.
Lemma lem3464315 (p : Prop) : (~ p) = (p -> False).
Proof. exact (EQ_MP (@lem21021 p) (@lem0)). Qed.
Lemma lem3464317 {_89837 _89861 _89862 _89863 : Type'} (x : _89837) (f : type1524 _89837 _89861 _89862 _89863) (x'' : _89863) (y' : _89862) (z' : _89861) : (term466 _89837 _89861 _89862 _89863 x f x'' y' z') = (term500 _89837 _89861 _89862 _89863 x f x'' y' z').
Proof. exact (@lem3464315 (term85 _89837 _89861 _89862 _89863 x f x'' y' z')). Qed.
Lemma lem3464320 {_89837 _89861 _89862 _89863 : Type'} (x'' : _89863) (y' : _89862) (z' : _89861) (t : _89837 -> Prop) (P : type1517 _89861 _89862 _89863) (x : _89837) (f : type1524 _89837 _89861 _89862 _89863) (h1 : term281 _89837 _89861 _89862 _89863 x'' y' z' t P x f) : term500 _89837 _89861 _89862 _89863 x f x'' y' z'.
Proof. exact (EQ_MP (@lem3464317 _89837 _89861 _89862 _89863 x f x'' y' z') (@lem3464016 _89837 _89861 _89862 _89863 x'' y' z' t P x f h1)). Qed.
Lemma lem3464323 {_89837 _89861 _89862 _89863 : Type'} (x'' : _89863) (y' : _89862) (z' : _89861) (t : _89837 -> Prop) (P : type1517 _89861 _89862 _89863) (x : _89837) (f : type1524 _89837 _89861 _89862 _89863) (h1 : term281 _89837 _89861 _89862 _89863 x'' y' z' t P x f) : False.
Proof. exact (@lem3464320 _89837 _89861 _89862 _89863 x'' y' z' t P x f h1 (@lem3464312 _89837 _89861 _89862 _89863 x'' y' z' t P x f h1)). Qed.
Lemma lem3464324 {_89837 _89861 _89862 _89863 : Type'} (x'' : _89863) (y' : _89862) (z' : _89861) (t : _89837 -> Prop) (P : type1517 _89861 _89862 _89863) (x : _89837) (f : type1524 _89837 _89861 _89862 _89863) (h1 : term281 _89837 _89861 _89862 _89863 x'' y' z' t P x f) : term501.
Proof. exact (fun h0 : ~ False => @lem3464323 _89837 _89861 _89862 _89863 x'' y' z' t P x f h1). Qed.
Lemma lem3464326 (p : Prop) : (term473 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem3464327 : term501 = False.
Proof. exact (@lem3464326 False). Qed.
Lemma lem3464329 {_89837 _89861 _89862 _89863 : Type'} (x'' : _89863) (y' : _89862) (z' : _89861) (t : _89837 -> Prop) (P : type1517 _89861 _89862 _89863) (x : _89837) (f : type1524 _89837 _89861 _89862 _89863) (h1 : term281 _89837 _89861 _89862 _89863 x'' y' z' t P x f) : False.
Proof. exact (EQ_MP (@lem3464327) (@lem3464324 _89837 _89861 _89862 _89863 x'' y' z' t P x f h1)). Qed.
Lemma lem3464330 {_89837 _89861 _89862 _89863 : Type'} (x' : _89863) (y : _89862) (z : _89861) (x'' : _89863) (y' : _89862) (z' : _89861) (t : _89837 -> Prop) (P : type1517 _89861 _89862 _89863) (x : _89837) (f : type1524 _89837 _89861 _89862 _89863) (h1 : term387 _89837 _89861 _89862 _89863 x' y z x'' y' z' t P x f) : False.
Proof. exact (or_elim (@lem3463765 _89837 _89861 _89862 _89863 x' y z x'' y' z' t P x f h1) (fun h0 : term162 _89837 _89861 _89862 _89863 P x f x' y z => @lem3464252 _89837 _89861 _89862 _89863 P x f x' y z h0) (fun h0 : term281 _89837 _89861 _89862 _89863 x'' y' z' t P x f => @lem3464329 _89837 _89861 _89862 _89863 x'' y' z' t P x f h0)). Qed.
Lemma lem3464331 {_89837 _89861 _89862 _89863 : Type'} (x' : _89863) (y : _89862) (z : _89861) (x'' : _89863) (y' : _89862) (z' : _89861) (t : _89837 -> Prop) (P : type1517 _89861 _89862 _89863) (x : _89837) (f : type1524 _89837 _89861 _89862 _89863) (h1 : term387 _89837 _89861 _89862 _89863 x' y z x'' y' z' t P x f) : (term387 _89837 _89861 _89862 _89863 x' y z x'' y' z' t P x f) = False.
Proof. exact (prop_ext (fun h2 : term387 _89837 _89861 _89862 _89863 x' y z x'' y' z' t P x f => @lem3464330 _89837 _89861 _89862 _89863 x' y z x'' y' z' t P x f h1) (fun h2 : False => @lem3463765 _89837 _89861 _89862 _89863 x' y z x'' y' z' t P x f h1)). Qed.
Lemma lem3464332 {_89837 _89861 _89862 _89863 : Type'} (x' : _89863) (y : _89862) (z : _89861) (x'' : _89863) (y' : _89862) (z' : _89861) (t : _89837 -> Prop) (P : type1517 _89861 _89862 _89863) (x : _89837) (f : type1524 _89837 _89861 _89862 _89863) (h1 : term387 _89837 _89861 _89862 _89863 x' y z x'' y' z' t P x f) : False.
Proof. exact (EQ_MP (@lem3464331 _89837 _89861 _89862 _89863 x' y z x'' y' z' t P x f h1) (@lem3463765 _89837 _89861 _89862 _89863 x' y z x'' y' z' t P x f h1)). Qed.
Lemma lem3464333 {_89837 _89861 _89862 _89863 : Type'} (x' : _89863) (y : _89862) (z : _89861) (x'' : _89863) (y' : _89862) (t : _89837 -> Prop) (P : type1517 _89861 _89862 _89863) (x : _89837) (f : type1524 _89837 _89861 _89862 _89863) (h1 : term390 _89837 _89861 _89862 _89863 x' y z x'' y' t P x f) : False.
Proof. exact (ex_elim (@lem3463623 _89837 _89861 _89862 _89863 x' y z x'' y' t P x f h1) (fun z' : _89861 => fun h0 : term389 _89837 _89861 _89862 _89863 x' y z x'' y' t P x f z' => @lem3464332 _89837 _89861 _89862 _89863 x' y z x'' y' z' t P x f h0)). Qed.
Lemma lem3464334 {_89837 _89861 _89862 _89863 : Type'} (x' : _89863) (y : _89862) (z : _89861) (x'' : _89863) (t : _89837 -> Prop) (P : type1517 _89861 _89862 _89863) (x : _89837) (f : type1524 _89837 _89861 _89862 _89863) (h1 : term392 _89837 _89861 _89862 _89863 x' y z x'' t P x f) : False.
Proof. exact (ex_elim (@lem3463622 _89837 _89861 _89862 _89863 x' y z x'' t P x f h1) (fun y' : _89862 => fun h0 : term391 _89837 _89861 _89862 _89863 x' y z x'' t P x f y' => @lem3464333 _89837 _89861 _89862 _89863 x' y z x'' y' t P x f h0)). Qed.
Lemma lem3464335 {_89837 _89861 _89862 _89863 : Type'} (x' : _89863) (y : _89862) (z : _89861) (t : _89837 -> Prop) (P : type1517 _89861 _89862 _89863) (x : _89837) (f : type1524 _89837 _89861 _89862 _89863) (h1 : term394 _89837 _89861 _89862 _89863 x' y z t P x f) : False.
Proof. exact (ex_elim (@lem3463621 _89837 _89861 _89862 _89863 x' y z t P x f h1) (fun x'' : _89863 => fun h0 : term393 _89837 _89861 _89862 _89863 x' y z t P x f x'' => @lem3464334 _89837 _89861 _89862 _89863 x' y z x'' t P x f h0)). Qed.
Lemma lem3464336 {_89837 _89861 _89862 _89863 : Type'} (x' : _89863) (y : _89862) (z : _89861) (P : type1517 _89861 _89862 _89863) (x : _89837) (f : type1524 _89837 _89861 _89862 _89863) (h1 : term396 _89837 _89861 _89862 _89863 x' y z P x f) : False.
Proof. exact (ex_elim (@lem3463620 _89837 _89861 _89862 _89863 x' y z P x f h1) (fun t : _89837 -> Prop => fun h0 : term395 _89837 _89861 _89862 _89863 x' y z P x f t => @lem3464335 _89837 _89861 _89862 _89863 x' y z t P x f h0)). Qed.
Lemma lem3464337 {_89837 _89861 _89862 _89863 : Type'} (x' : _89863) (y : _89862) (P : type1517 _89861 _89862 _89863) (x : _89837) (f : type1524 _89837 _89861 _89862 _89863) (h1 : term398 _89837 _89861 _89862 _89863 x' y P x f) : False.
Proof. exact (ex_elim (@lem3463619 _89837 _89861 _89862 _89863 x' y P x f h1) (fun z : _89861 => fun h0 : term397 _89837 _89861 _89862 _89863 x' y P x f z => @lem3464336 _89837 _89861 _89862 _89863 x' y z P x f h0)). Qed.
Lemma lem3464338 {_89837 _89861 _89862 _89863 : Type'} (x' : _89863) (P : type1517 _89861 _89862 _89863) (x : _89837) (f : type1524 _89837 _89861 _89862 _89863) (h1 : term400 _89837 _89861 _89862 _89863 x' P x f) : False.
Proof. exact (ex_elim (@lem3463618 _89837 _89861 _89862 _89863 x' P x f h1) (fun y : _89862 => fun h0 : term399 _89837 _89861 _89862 _89863 x' P x f y => @lem3464337 _89837 _89861 _89862 _89863 x' y P x f h0)). Qed.
Lemma lem3464339 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (x : _89837) (f : type1524 _89837 _89861 _89862 _89863) (h1 : term38 _89837 _89861 _89862 _89863 P x f) : False.
Proof. exact (ex_elim (@lem3463617 _89837 _89861 _89862 _89863 P x f h1) (fun x' : _89863 => fun h0 : term401 _89837 _89861 _89862 _89863 P x f x' => @lem3464338 _89837 _89861 _89862 _89863 x' P x f h0)). Qed.
Lemma lem3464340 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (x : _89837) (f : type1524 _89837 _89861 _89862 _89863) (h1 : term38 _89837 _89861 _89862 _89863 P x f) : (term38 _89837 _89861 _89862 _89863 P x f) = False.
Proof. exact (prop_ext (fun h2 : term38 _89837 _89861 _89862 _89863 P x f => @lem3464339 _89837 _89861 _89862 _89863 P x f h1) (fun h2 : False => @lem3462703 _89837 _89861 _89862 _89863 P x f h1)). Qed.
Lemma lem3464341 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (x : _89837) (f : type1524 _89837 _89861 _89862 _89863) (h1 : term38 _89837 _89861 _89862 _89863 P x f) : False.
Proof. exact (EQ_MP (@lem3464340 _89837 _89861 _89862 _89863 P x f h1) (@lem3462703 _89837 _89861 _89862 _89863 P x f h1)). Qed.
Lemma lem3464342 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (x : _89837) (f : type1524 _89837 _89861 _89862 _89863) : term37 _89837 _89861 _89862 _89863 P x f.
Proof. exact (fun h0 : term38 _89837 _89861 _89862 _89863 P x f => @lem3464341 _89837 _89861 _89862 _89863 P x f h0). Qed.
Lemma lem3464343 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (x : _89837) (f : type1524 _89837 _89861 _89862 _89863) : (term34 _89837 _89861 _89862 _89863 P f x) = (term23 _89837 _89861 _89862 _89863 P x f).
Proof. exact (EQ_MP (@lem3462702 _89837 _89861 _89862 _89863 P x f) (@lem3464342 _89837 _89861 _89862 _89863 P x f)). Qed.
Lemma lem3464348 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (f : type1524 _89837 _89861 _89862 _89863) : term1 _89837 _89861 _89862 _89863 P f.
Proof. exact (fun x : _89837 => @lem3464343 _89837 _89861 _89862 _89863 P x f). Qed.
Lemma lem3464353 {_89837 _89861 _89862 _89863 : Type'} (f : type1524 _89837 _89861 _89862 _89863) : term12 _89837 _89861 _89862 _89863 f.
Proof. exact (fun P : type1517 _89861 _89862 _89863 => @lem3464348 _89837 _89861 _89862 _89863 P f). Qed.
Lemma lem3464358 {_89837 _89861 _89862 _89863 : Type'} : term16 _89837 _89861 _89862 _89863.
Proof. exact (fun f : type1524 _89837 _89861 _89862 _89863 => @lem3464353 _89837 _89861 _89862 _89863 f). Qed.
Lemma lem3464359 {_89837 _89861 _89862 _89863 : Type'} : term15 _89837 _89861 _89862 _89863.
Proof. exact (EQ_MP (@lem3462698 _89837 _89861 _89862 _89863) (@lem3464358 _89837 _89861 _89862 _89863)). Qed.
Lemma lem3464360 {_89837 _89861 _89862 _89863 : Type'} (f : type1524 _89837 _89861 _89862 _89863) : term508 _89837 _89861 _89862 _89863 f.
Proof. exact (@lem3464359 _89837 _89861 _89862 _89863 f). Qed.
Lemma lem3464361 {_89837 _89861 _89862 _89863 : Type'} (f : type1524 _89837 _89861 _89862 _89863) : (term508 _89837 _89861 _89862 _89863 f) = (term11 _89837 _89861 _89862 _89863 f).
Proof. exact (eq_refl (term508 _89837 _89861 _89862 _89863 f)). Qed.
Lemma lem3464362 {_89837 _89861 _89862 _89863 : Type'} (f : type1524 _89837 _89861 _89862 _89863) : term11 _89837 _89861 _89862 _89863 f.
Proof. exact (EQ_MP (@lem3464361 _89837 _89861 _89862 _89863 f) (@lem3464360 _89837 _89861 _89862 _89863 f)). Qed.
Lemma lem3464363 {_89837 _89861 _89862 _89863 : Type'} (f : type1524 _89837 _89861 _89862 _89863) (P : type1517 _89861 _89862 _89863) : term509 _89837 _89861 _89862 _89863 f P.
Proof. exact (@lem3464362 _89837 _89861 _89862 _89863 f P). Qed.
Lemma lem3464364 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (f : type1524 _89837 _89861 _89862 _89863) : (term509 _89837 _89861 _89862 _89863 f P) = (term2 _89837 _89861 _89862 _89863 P f).
Proof. exact (eq_refl (term509 _89837 _89861 _89862 _89863 f P)). Qed.
Lemma lem3464365 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (f : type1524 _89837 _89861 _89862 _89863) : term2 _89837 _89861 _89862 _89863 P f.
Proof. exact (EQ_MP (@lem3464364 _89837 _89861 _89862 _89863 P f) (@lem3464363 _89837 _89861 _89862 _89863 f P)). Qed.
Lemma lem3464367 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (f : type1524 _89837 _89861 _89862 _89863) : term2 _89837 _89861 _89862 _89863 P f.
Proof. exact (@lem3462466 _89837 _89861 _89862 _89863 P f (@lem3464365 _89837 _89861 _89862 _89863 P f)). Qed.
Lemma lem3464368 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (f : type1524 _89837 _89861 _89862 _89863) (h1 : term3 _89837 _89861 _89862 _89863 P f) : False.
Proof. exact (@lem3464367 _89837 _89861 _89862 _89863 P f (@lem3462450 _89837 _89861 _89862 _89863 P f h1)). Qed.
Lemma lem3464369 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (f : type1524 _89837 _89861 _89862 _89863) (h1 : term3 _89837 _89861 _89862 _89863 P f) : (term3 _89837 _89861 _89862 _89863 P f) = False.
Proof. exact (prop_ext (fun h2 : term3 _89837 _89861 _89862 _89863 P f => @lem3464368 _89837 _89861 _89862 _89863 P f h1) (fun h2 : False => @lem3462450 _89837 _89861 _89862 _89863 P f h1)). Qed.
Lemma lem3464370 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (f : type1524 _89837 _89861 _89862 _89863) (h1 : term3 _89837 _89861 _89862 _89863 P f) : False.
Proof. exact (EQ_MP (@lem3464369 _89837 _89861 _89862 _89863 P f h1) (@lem3462450 _89837 _89861 _89862 _89863 P f h1)). Qed.
Lemma lem3464371 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (f : type1524 _89837 _89861 _89862 _89863) : term2 _89837 _89861 _89862 _89863 P f.
Proof. exact (fun h0 : term3 _89837 _89861 _89862 _89863 P f => @lem3464370 _89837 _89861 _89862 _89863 P f h0). Qed.
Lemma lem3464372 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (f : type1524 _89837 _89861 _89862 _89863) : term1 _89837 _89861 _89862 _89863 P f.
Proof. exact (EQ_MP (@lem3462449 _89837 _89861 _89862 _89863 P f) (@lem3464371 _89837 _89861 _89862 _89863 P f)). Qed.
Lemma lem3464373 {_89837 _89861 _89862 _89863 : Type'} (P : type1517 _89861 _89862 _89863) (f : type1524 _89837 _89861 _89862 _89863) : term510 _89837 _89861 _89862 _89863 P f.
Proof. exact (EQ_MP (@lem3459503 _89837 _89861 _89862 _89863 P f) (@lem3464372 _89837 _89861 _89862 _89863 P f)). Qed.
