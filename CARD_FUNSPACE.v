Require Import coq.
Require Import theory_hol.
Require Import hol_types.
Require Import hol_terms.
Require Import hol_axioms.
Require Import hol_type_abbrevs.
Require Import CARD_FUNSPACE_term_abbrevs.
Require Import DISJ_ACI_spec.
Require Import DISJ_ASSOC_spec.
Require Import HAS_SIZE_spec.
Require Import HAS_SIZE_FUNSPACE_spec.
Require Import thm0_spec.
Require Import thm10578_spec.
Require Import thm10597_spec.
Require Import thm16474_spec.
Require Import thm17045_spec.
Require Import thm17265_spec.
Require Import thm17362_spec.
Require Import thm17784_spec.
Require Import thm18392_spec.
Require Import thm18394_spec.
Require Import thm18898_spec.
Require Import thm18899_spec.
Require Import thm18910_spec.
Require Import thm18911_spec.
Require Import thm18928_spec.
Require Import thm18929_spec.
Require Import thm18952_spec.
Require Import thm18953_spec.
Require Import thm19490_spec.
Require Import thm19792_spec.
Require Import thm20230_spec.
Require Import thm20661_spec.
Require Import thm20662_spec.
Require Import thm20664_spec.
Require Import thm20665_spec.
Require Import thm20668_spec.
Require Import thm20682_spec.
Require Import thm20764_spec.
Require Import thm20780_spec.
Require Import thm20789_spec.
Require Import thm20895_spec.
Require Import thm21021_spec.
Require Import thm21114_spec.
Require Import thm21182_spec.
Require Import thm21386_spec.
Require Import thm69_spec.
Lemma lem4521679 (t1 : Prop) : term0 t1.
Proof. exact (@lem693 t1). Qed.
Lemma lem4521680 (t1 : Prop) : (term0 t1) = (term1 t1).
Proof. exact (eq_refl (term0 t1)). Qed.
Lemma lem4521681 (t1 : Prop) : term1 t1.
Proof. exact (EQ_MP (@lem4521680 t1) (@lem4521679 t1)). Qed.
Lemma lem4521682 (t1 : Prop) (t2 : Prop) : term2 t1 t2.
Proof. exact (@lem4521681 t1 t2). Qed.
Lemma lem4521683 (t1 : Prop) (t2 : Prop) : (term2 t1 t2) = (term3 t1 t2).
Proof. exact (eq_refl (term2 t1 t2)). Qed.
Lemma lem4521684 (t1 : Prop) (t2 : Prop) : term3 t1 t2.
Proof. exact (EQ_MP (@lem4521683 t1 t2) (@lem4521682 t1 t2)). Qed.
Lemma lem4521685 (t1 : Prop) (t2 : Prop) (t3 : Prop) : term4 t1 t2 t3.
Proof. exact (@lem4521684 t1 t2 t3). Qed.
Lemma lem4521686 (t1 : Prop) (t2 : Prop) (t3 : Prop) : (term4 t1 t2 t3) = ((term5 t1 t2 t3) = (term6 t1 t2 t3)).
Proof. exact (eq_refl (term4 t1 t2 t3)). Qed.
Lemma lem4521687 (t1 : Prop) (t2 : Prop) (t3 : Prop) : (term5 t1 t2 t3) = (term6 t1 t2 t3).
Proof. exact (EQ_MP (@lem4521686 t1 t2 t3) (@lem4521685 t1 t2 t3)). Qed.
Lemma lem4521688 (t1 : Prop) (t2 : Prop) (t3 : Prop) : (term6 t1 t2 t3) = (term5 t1 t2 t3).
Proof. exact (SYM (@lem4521687 t1 t2 t3)). Qed.
Lemma lem4521690 (p : Prop) : p = (term7 p).
Proof. exact (EQ_MP (@lem10578 p) (@lem10597 p)). Qed.
Lemma lem4521691 {_107639 _107642 : Type'} (d : _107639) : (term8 _107639 _107642 d) = (term9 _107639 _107642 d).
Proof. exact (@lem4521690 (term8 _107639 _107642 d)). Qed.
Lemma lem4521692 {_107639 _107642 : Type'} (d : _107639) : (term9 _107639 _107642 d) = (term8 _107639 _107642 d).
Proof. exact (SYM (@lem4521691 _107639 _107642 d)). Qed.
Lemma lem4521693 {_107639 _107642 : Type'} (d : _107639) (h1 : term10 _107639 _107642 d) : term10 _107639 _107642 d.
Proof. exact (h1). Qed.
Lemma lem4521694 {_107639 _107642 : Type'} : term11 _107639 _107642.
Proof. exact (@lem4521678 _107642 _107639). Qed.
Lemma lem4521697 {_107642 B : Type'} : term12 _107642 B.
Proof. exact (@lem4521678 _107642 B). Qed.
Lemma lem4521699 {_107639 B : Type'} : term12 _107639 B.
Proof. exact (@lem4521678 _107639 B). Qed.
Lemma lem4521700 {_107642 A : Type'} : term11 _107642 A.
Proof. exact (@lem4521678 A _107642). Qed.
Lemma lem4521701 {_107639 A : Type'} : term11 _107639 A.
Proof. exact (@lem4521678 A _107639). Qed.
Lemma lem4521702 {A : Type'} : term13 A.
Proof. exact (@lem4521678 A nat). Qed.
Lemma lem4521704 {A : Type'} : term14 A.
Proof. exact (@lem3863773 A). Qed.
Lemma lem4521705 : term15.
Proof. exact (@lem3863773 nat). Qed.
Lemma lem4521706 {A : Type'} : term16 A.
Proof. exact (@lem3863773 (A -> nat)). Qed.
Lemma lem4521707 {B : Type'} : term14 B.
Proof. exact (@lem3863773 B). Qed.
Lemma lem4521708 {A B : Type'} : term17 A B.
Proof. exact (@lem3863773 (A -> B)). Qed.
Lemma lem4521709 {_107642 : Type'} : term14 _107642.
Proof. exact (@lem3863773 _107642). Qed.
Lemma lem4521710 {_107642 B : Type'} : term17 _107642 B.
Proof. exact (@lem3863773 (_107642 -> B)). Qed.
Lemma lem4521711 {_107639 : Type'} : term14 _107639.
Proof. exact (@lem3863773 _107639). Qed.
Lemma lem4521712 {_107639 B : Type'} : term17 _107639 B.
Proof. exact (@lem3863773 (_107639 -> B)). Qed.
Lemma lem4521713 {_107642 A : Type'} : term18 _107642 A.
Proof. exact (@lem3863773 (A -> _107642)). Qed.
Lemma lem4521714 {_107639 A : Type'} : term18 _107639 A.
Proof. exact (@lem3863773 (A -> _107639)). Qed.
Lemma lem4521715 {_107639 _107642 : Type'} : term18 _107639 _107642.
Proof. exact (@lem3863773 (_107642 -> _107639)). Qed.
Lemma lem4521723 {_100044 _107639 _107642 A B : Type'} (d : _107639) (h1 : term19 _100044 _107639 _107642 A B d) : term19 _100044 _107639 _107642 A B d.
Proof. exact (h1). Qed.
Lemma lem4521724 {_100044 _107639 _107642 A B : Type'} (d : _107639) : term20 _100044 _107639 _107642 A B d.
Proof. exact (fun h0 : term19 _100044 _107639 _107642 A B d => @lem4521723 _100044 _107639 _107642 A B d h0). Qed.
Lemma lem4521725 {_100044 _107639 _107642 A B : Type'} (d : _107639) (h1 : term20 _100044 _107639 _107642 A B d) : term20 _100044 _107639 _107642 A B d.
Proof. exact (h1). Qed.
Lemma lem4521726 {_100044 _107639 _107642 A B : Type'} (d : _107639) (h1 : term19 _100044 _107639 _107642 A B d) : term19 _100044 _107639 _107642 A B d.
Proof. exact (h1). Qed.
Lemma lem4521727 {_100044 _107639 _107642 A B : Type'} (d : _107639) (h1 : term19 _100044 _107639 _107642 A B d) (h2 : term20 _100044 _107639 _107642 A B d) : term19 _100044 _107639 _107642 A B d.
Proof. exact (@lem4521725 _100044 _107639 _107642 A B d h2 (@lem4521726 _100044 _107639 _107642 A B d h1)). Qed.
Lemma lem4521728 {_100044 _107639 _107642 A B : Type'} (d : _107639) (h1 : term19 _100044 _107639 _107642 A B d) : term21 _100044 _107639 _107642 A B d.
Proof. exact (fun h0 : term20 _100044 _107639 _107642 A B d => @lem4521727 _100044 _107639 _107642 A B d h1 h0). Qed.
Lemma lem4521729 {_100044 _107639 _107642 A B : Type'} (d : _107639) (h1 : term20 _100044 _107639 _107642 A B d) : term20 _100044 _107639 _107642 A B d.
Proof. exact (h1). Qed.
Lemma lem4521730 {_100044 _107639 _107642 A B : Type'} (d : _107639) (h1 : term19 _100044 _107639 _107642 A B d) (h2 : term20 _100044 _107639 _107642 A B d) : term19 _100044 _107639 _107642 A B d.
Proof. exact (@lem4521728 _100044 _107639 _107642 A B d h1 (@lem4521729 _100044 _107639 _107642 A B d h2)). Qed.
Lemma lem4521731 {_100044 _107639 _107642 A B : Type'} (d : _107639) (h1 : term20 _100044 _107639 _107642 A B d) : term20 _100044 _107639 _107642 A B d.
Proof. exact (fun h0 : term19 _100044 _107639 _107642 A B d => @lem4521730 _100044 _107639 _107642 A B d h0 h1). Qed.
Lemma lem4521732 {_100044 _107639 _107642 A B : Type'} (d : _107639) : term22 _100044 _107639 _107642 A B d.
Proof. exact (fun h0 : term20 _100044 _107639 _107642 A B d => @lem4521731 _100044 _107639 _107642 A B d h0). Qed.
Lemma lem4521735 {_100044 _107639 _107642 A B : Type'} (d : _107639) : term20 _100044 _107639 _107642 A B d.
Proof. exact (@lem4521732 _100044 _107639 _107642 A B d (@lem4521724 _100044 _107639 _107642 A B d)). Qed.
Lemma lem4521736 {_100044 _107639 _107642 A B : Type'} (d : _107639) : term20 _100044 _107639 _107642 A B d.
Proof. exact (@lem4521735 _100044 _107639 _107642 A B d). Qed.
Lemma lem4522194 (t : Prop) : (t -> False) = (~ t).
Proof. exact (proj2 (@lem16474 t)). Qed.
Lemma lem4522195 {A : Type'} : (term23 A) = (term24 A).
Proof. exact (@lem4522194 (term13 A)). Qed.
Lemma lem4522238 {A B : Type'} : (term25 A B) = (term25 A B).
Proof. exact (eq_refl (term25 A B)). Qed.
Lemma lem4522239 {A B : Type'} : (term26 A B) = (term27 A B).
Proof. exact (MK_COMB (@lem4522238 A B) (@lem4522195 A)). Qed.
Lemma lem4522242 {_107642 B : Type'} : (term25 _107642 B) = (term25 _107642 B).
Proof. exact (eq_refl (term25 _107642 B)). Qed.
Lemma lem4522243 {_107642 A B : Type'} : (term28 _107642 A B) = (term29 _107642 A B).
Proof. exact (MK_COMB (@lem4522242 _107642 B) (@lem4522239 A B)). Qed.
Lemma lem4522246 {_107639 B : Type'} : (term25 _107639 B) = (term25 _107639 B).
Proof. exact (eq_refl (term25 _107639 B)). Qed.
Lemma lem4522247 {_107639 _107642 A B : Type'} : (term30 _107639 _107642 A B) = (term31 _107639 _107642 A B).
Proof. exact (MK_COMB (@lem4522246 _107639 B) (@lem4522243 _107642 A B)). Qed.
Lemma lem4522250 {_107642 A : Type'} : (term32 _107642 A) = (term32 _107642 A).
Proof. exact (eq_refl (term32 _107642 A)). Qed.
Lemma lem4522251 {_107639 _107642 A B : Type'} : (term33 _107639 _107642 A B) = (term34 _107639 _107642 A B).
Proof. exact (MK_COMB (@lem4522250 _107642 A) (@lem4522247 _107639 _107642 A B)). Qed.
Lemma lem4522254 {_107639 A : Type'} : (term32 _107639 A) = (term32 _107639 A).
Proof. exact (eq_refl (term32 _107639 A)). Qed.
Lemma lem4522255 {_107639 _107642 A B : Type'} : (term35 _107639 _107642 A B) = (term36 _107639 _107642 A B).
Proof. exact (MK_COMB (@lem4522254 _107639 A) (@lem4522251 _107639 _107642 A B)). Qed.
Lemma lem4522258 {_107639 _107642 : Type'} : (term32 _107639 _107642) = (term32 _107639 _107642).
Proof. exact (eq_refl (term32 _107639 _107642)). Qed.
Lemma lem4522259 {_107639 _107642 A B : Type'} : (term37 _107639 _107642 A B) = (term38 _107639 _107642 A B).
Proof. exact (MK_COMB (@lem4522258 _107639 _107642) (@lem4522255 _107639 _107642 A B)). Qed.
Lemma lem4522262 : term39 = term39.
Proof. exact (eq_refl term39). Qed.
Lemma lem4522263 {_107639 _107642 A B : Type'} : (term40 _107639 _107642 A B) = (term41 _107639 _107642 A B).
Proof. exact (MK_COMB (@lem4522262) (@lem4522259 _107639 _107642 A B)). Qed.
Lemma lem4522266 {A : Type'} : (term42 A) = (term42 A).
Proof. exact (eq_refl (term42 A)). Qed.
Lemma lem4522267 {_107639 _107642 A B : Type'} : (term43 _107639 _107642 A B) = (term44 _107639 _107642 A B).
Proof. exact (MK_COMB (@lem4522266 A) (@lem4522263 _107639 _107642 A B)). Qed.
Lemma lem4522270 {A B : Type'} : (term45 A B) = (term45 A B).
Proof. exact (eq_refl (term45 A B)). Qed.
Lemma lem4522271 {_107639 _107642 A B : Type'} : (term46 _107639 _107642 A B) = (term47 _107639 _107642 A B).
Proof. exact (MK_COMB (@lem4522270 A B) (@lem4522267 _107639 _107642 A B)). Qed.
Lemma lem4522274 {_107642 A : Type'} : (term48 _107642 A) = (term48 _107642 A).
Proof. exact (eq_refl (term48 _107642 A)). Qed.
Lemma lem4522275 {_107639 _107642 A B : Type'} : (term49 _107639 _107642 A B) = (term50 _107639 _107642 A B).
Proof. exact (MK_COMB (@lem4522274 _107642 A) (@lem4522271 _107639 _107642 A B)). Qed.
Lemma lem4522278 {_107639 A : Type'} : (term48 _107639 A) = (term48 _107639 A).
Proof. exact (eq_refl (term48 _107639 A)). Qed.
Lemma lem4522279 {_107639 _107642 A B : Type'} : (term51 _107639 _107642 A B) = (term52 _107639 _107642 A B).
Proof. exact (MK_COMB (@lem4522278 _107639 A) (@lem4522275 _107639 _107642 A B)). Qed.
Lemma lem4522282 {_107642 B : Type'} : (term45 _107642 B) = (term45 _107642 B).
Proof. exact (eq_refl (term45 _107642 B)). Qed.
Lemma lem4522283 {_107639 _107642 A B : Type'} : (term53 _107639 _107642 A B) = (term54 _107639 _107642 A B).
Proof. exact (MK_COMB (@lem4522282 _107642 B) (@lem4522279 _107639 _107642 A B)). Qed.
Lemma lem4522286 {_107639 _107642 : Type'} : (term48 _107639 _107642) = (term48 _107639 _107642).
Proof. exact (eq_refl (term48 _107639 _107642)). Qed.
Lemma lem4522287 {_107639 _107642 A B : Type'} : (term55 _107639 _107642 A B) = (term56 _107639 _107642 A B).
Proof. exact (MK_COMB (@lem4522286 _107639 _107642) (@lem4522283 _107639 _107642 A B)). Qed.
Lemma lem4522290 {_107639 B : Type'} : (term45 _107639 B) = (term45 _107639 B).
Proof. exact (eq_refl (term45 _107639 B)). Qed.
Lemma lem4522291 {_107639 _107642 A B : Type'} : (term57 _107639 _107642 A B) = (term58 _107639 _107642 A B).
Proof. exact (MK_COMB (@lem4522290 _107639 B) (@lem4522287 _107639 _107642 A B)). Qed.
Lemma lem4522294 {B : Type'} : (term59 B) = (term59 B).
Proof. exact (eq_refl (term59 B)). Qed.
Lemma lem4522295 {_107639 _107642 A B : Type'} : (term60 _107639 _107642 A B) = (term61 _107639 _107642 A B).
Proof. exact (MK_COMB (@lem4522294 B) (@lem4522291 _107639 _107642 A B)). Qed.
Lemma lem4522298 {A : Type'} : (term59 A) = (term59 A).
Proof. exact (eq_refl (term59 A)). Qed.
Lemma lem4522299 {_107639 _107642 A B : Type'} : (term62 _107639 _107642 A B) = (term63 _107639 _107642 A B).
Proof. exact (MK_COMB (@lem4522298 A) (@lem4522295 _107639 _107642 A B)). Qed.
Lemma lem4522302 {_107642 : Type'} : (term59 _107642) = (term59 _107642).
Proof. exact (eq_refl (term59 _107642)). Qed.
Lemma lem4522303 {_107639 _107642 A B : Type'} : (term64 _107639 _107642 A B) = (term65 _107639 _107642 A B).
Proof. exact (MK_COMB (@lem4522302 _107642) (@lem4522299 _107639 _107642 A B)). Qed.
Lemma lem4522306 {_107639 : Type'} : (term59 _107639) = (term59 _107639).
Proof. exact (eq_refl (term59 _107639)). Qed.
Lemma lem4522307 {_107639 _107642 A B : Type'} : (term66 _107639 _107642 A B) = (term67 _107639 _107642 A B).
Proof. exact (MK_COMB (@lem4522306 _107639) (@lem4522303 _107639 _107642 A B)). Qed.
Lemma lem4522310 {_100044 : Type'} : (term59 _100044) = (term59 _100044).
Proof. exact (eq_refl (term59 _100044)). Qed.
Lemma lem4522311 {_100044 _107639 _107642 A B : Type'} : (term68 _100044 _107639 _107642 A B) = (term69 _100044 _107639 _107642 A B).
Proof. exact (MK_COMB (@lem4522310 _100044) (@lem4522307 _107639 _107642 A B)). Qed.
Lemma lem4522314 {_107639 _107642 : Type'} (d : _107639) : (term70 _107639 _107642 d) = (term70 _107639 _107642 d).
Proof. exact (eq_refl (term70 _107639 _107642 d)). Qed.
Lemma lem4522315 {_100044 _107639 _107642 A B : Type'} (d : _107639) : (term19 _100044 _107639 _107642 A B d) = (term71 _100044 _107639 _107642 A B d).
Proof. exact (MK_COMB (@lem4522314 _107639 _107642 d) (@lem4522311 _100044 _107639 _107642 A B)). Qed.
Lemma lem4522318 {_100044 _107639 _107642 A B : Type'} : (term72 _100044 _107639 _107642 A B) = (term73 _100044 _107639 _107642 A B).
Proof. exact (fun_ext (fun d : _107639 => @lem4522315 _100044 _107639 _107642 A B d)). Qed.
Lemma lem4522319 {_107639 : Type'} : (@all _107639) = (@all _107639).
Proof. exact (eq_refl (@all _107639)). Qed.
Lemma lem4522326 {_100044 _107639 _107642 A B : Type'} : (term74 _100044 _107639 _107642 A B) = (term75 _100044 _107639 _107642 A B).
Proof. exact (MK_COMB (@lem4522319 _107639) (@lem4522318 _100044 _107639 _107642 A B)). Qed.
Lemma lem4522327 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (h1 : _53776 = (term76 _107639 _107642)) : _53776 = (term76 _107639 _107642).
Proof. exact (h1). Qed.
Lemma lem4522328 {_107639 : Type'} (t : _107639 -> Prop) : t = t.
Proof. exact (eq_refl t). Qed.
Lemma lem4522329 {_107639 _107642 : Type'} (t : _107639 -> Prop) (_53776 : type656 _107639 _107642) (h1 : _53776 = (term76 _107639 _107642)) : (_53776 t) = (term77 _107639 _107642 t).
Proof. exact (MK_COMB (@lem4522327 _107639 _107642 _53776 h1) (@lem4522328 _107639 t)). Qed.
Lemma lem4522330 {_107639 _107642 : Type'} (t : _107639 -> Prop) : (term77 _107639 _107642 t) = (term78 _107639 _107642 t).
Proof. exact (eq_refl (term77 _107639 _107642 t)). Qed.
Lemma lem4522331 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (t : _107639 -> Prop) : (term79 _107639 _107642 _53776 t) = (term79 _107639 _107642 _53776 t).
Proof. exact (eq_refl (term79 _107639 _107642 _53776 t)). Qed.
Lemma lem4522332 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (t : _107639 -> Prop) : ((_53776 t) = (term77 _107639 _107642 t)) = ((_53776 t) = (term78 _107639 _107642 t)).
Proof. exact (MK_COMB (@lem4522331 _107639 _107642 _53776 t) (@lem4522330 _107639 _107642 t)). Qed.
Lemma lem4522333 {_107639 _107642 : Type'} (t : _107639 -> Prop) (_53776 : type656 _107639 _107642) (h1 : _53776 = (term76 _107639 _107642)) : (_53776 t) = (term78 _107639 _107642 t).
Proof. exact (EQ_MP (@lem4522332 _107639 _107642 _53776 t) (@lem4522329 _107639 _107642 t _53776 h1)). Qed.
Lemma lem4522334 {_107642 : Type'} (s : _107642 -> Prop) : s = s.
Proof. exact (eq_refl s). Qed.
Lemma lem4522335 {_107639 _107642 : Type'} (t : _107639 -> Prop) (s : _107642 -> Prop) (_53776 : type656 _107639 _107642) (h1 : _53776 = (term76 _107639 _107642)) : (_53776 t s) = (term80 _107639 _107642 t s).
Proof. exact (MK_COMB (@lem4522333 _107639 _107642 t _53776 h1) (@lem4522334 _107642 s)). Qed.
Lemma lem4522336 {_107639 _107642 : Type'} (t : _107639 -> Prop) (s : _107642 -> Prop) : (term80 _107639 _107642 t s) = (term81 _107639 _107642 t s).
Proof. exact (eq_refl (term80 _107639 _107642 t s)). Qed.
Lemma lem4522337 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (t : _107639 -> Prop) (s : _107642 -> Prop) : (term82 _107639 _107642 _53776 t s) = (term82 _107639 _107642 _53776 t s).
Proof. exact (eq_refl (term82 _107639 _107642 _53776 t s)). Qed.
Lemma lem4522338 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (t : _107639 -> Prop) (s : _107642 -> Prop) : ((_53776 t s) = (term80 _107639 _107642 t s)) = ((_53776 t s) = (term81 _107639 _107642 t s)).
Proof. exact (MK_COMB (@lem4522337 _107639 _107642 _53776 t s) (@lem4522336 _107639 _107642 t s)). Qed.
Lemma lem4522339 {_107639 _107642 : Type'} (t : _107639 -> Prop) (s : _107642 -> Prop) (_53776 : type656 _107639 _107642) (h1 : _53776 = (term76 _107639 _107642)) : (_53776 t s) = (term81 _107639 _107642 t s).
Proof. exact (EQ_MP (@lem4522338 _107639 _107642 _53776 t s) (@lem4522335 _107639 _107642 t s _53776 h1)). Qed.
Lemma lem4522340 {_107639 : Type'} (d : _107639) : d = d.
Proof. exact (eq_refl d). Qed.
Lemma lem4522341 {_107639 _107642 : Type'} (t : _107639 -> Prop) (s : _107642 -> Prop) (d : _107639) (_53776 : type656 _107639 _107642) (h1 : _53776 = (term76 _107639 _107642)) : (_53776 t s d) = (term83 _107639 _107642 t s d).
Proof. exact (MK_COMB (@lem4522339 _107639 _107642 t s _53776 h1) (@lem4522340 _107639 d)). Qed.
Lemma lem4522342 {_107639 _107642 : Type'} (t : _107639 -> Prop) (s : _107642 -> Prop) (d : _107639) : (term83 _107639 _107642 t s d) = (term84 _107639 _107642 t s d).
Proof. exact (eq_refl (term83 _107639 _107642 t s d)). Qed.
Lemma lem4522343 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (t : _107639 -> Prop) (s : _107642 -> Prop) (d : _107639) : (term85 _107639 _107642 _53776 t s d) = (term85 _107639 _107642 _53776 t s d).
Proof. exact (eq_refl (term85 _107639 _107642 _53776 t s d)). Qed.
Lemma lem4522344 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (t : _107639 -> Prop) (s : _107642 -> Prop) (d : _107639) : ((_53776 t s d) = (term83 _107639 _107642 t s d)) = ((_53776 t s d) = (term84 _107639 _107642 t s d)).
Proof. exact (MK_COMB (@lem4522343 _107639 _107642 _53776 t s d) (@lem4522342 _107639 _107642 t s d)). Qed.
Lemma lem4522345 {_107639 _107642 : Type'} (t : _107639 -> Prop) (s : _107642 -> Prop) (d : _107639) (_53776 : type656 _107639 _107642) (h1 : _53776 = (term76 _107639 _107642)) : (_53776 t s d) = (term84 _107639 _107642 t s d).
Proof. exact (EQ_MP (@lem4522344 _107639 _107642 _53776 t s d) (@lem4522341 _107639 _107642 t s d _53776 h1)). Qed.
Lemma lem4522351 (n : nat) (m : nat) : (Nat.pow n m) = (Nat.pow n m).
Proof. exact (eq_refl (Nat.pow n m)). Qed.
Lemma lem4522355 {A : Type'} (f : A -> nat) : f = f.
Proof. exact (eq_refl f). Qed.
Lemma lem4522372 {A : Type'} (s : A -> Prop) (f : A -> nat) (x : A) (d : nat) : (term86 A s f x d) = (term86 A s f x d).
Proof. exact (eq_refl (term86 A s f x d)). Qed.
Lemma lem4522373 {A : Type'} (s : A -> Prop) (f : A -> nat) (d : nat) : (term87 A s f d) = (term87 A s f d).
Proof. exact (fun_ext (fun x : A => @lem4522372 A s f x d)). Qed.
Lemma lem4522374 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem4522375 {A : Type'} (s : A -> Prop) (f : A -> nat) (d : nat) : (term88 A s f d) = (term88 A s f d).
Proof. exact (MK_COMB (@lem4522374 A) (@lem4522373 A s f d)). Qed.
Lemma lem4522390 {A : Type'} (s : A -> Prop) (f : A -> nat) (x : A) (t : nat -> Prop) : (term89 A s f x t) = (term89 A s f x t).
Proof. exact (eq_refl (term89 A s f x t)). Qed.
Lemma lem4522391 {A : Type'} (s : A -> Prop) (f : A -> nat) (t : nat -> Prop) : (term90 A s f t) = (term90 A s f t).
Proof. exact (fun_ext (fun x : A => @lem4522390 A s f x t)). Qed.
Lemma lem4522392 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem4522393 {A : Type'} (s : A -> Prop) (f : A -> nat) (t : nat -> Prop) : (term91 A s f t) = (term91 A s f t).
Proof. exact (MK_COMB (@lem4522392 A) (@lem4522391 A s f t)). Qed.
Lemma lem4522394 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4522395 {A : Type'} (s : A -> Prop) (f : A -> nat) (t : nat -> Prop) : (term92 A s f t) = (term92 A s f t).
Proof. exact (MK_COMB (@lem4522394) (@lem4522393 A s f t)). Qed.
Lemma lem4522396 {A : Type'} (t : nat -> Prop) (s : A -> Prop) (f : A -> nat) (d : nat) : (term93 A t s f d) = (term93 A t s f d).
Proof. exact (MK_COMB (@lem4522395 A s f t) (@lem4522375 A s f d)). Qed.
Lemma lem4522399 {A : Type'} (GEN_PVAR_148 : A -> nat) : (@SETSPEC (A -> nat) GEN_PVAR_148) = (@SETSPEC (A -> nat) GEN_PVAR_148).
Proof. exact (eq_refl (@SETSPEC (A -> nat) GEN_PVAR_148)). Qed.
Lemma lem4522400 {A : Type'} (GEN_PVAR_148 : A -> nat) (t : nat -> Prop) (s : A -> Prop) (f : A -> nat) (d : nat) : (term94 A GEN_PVAR_148 t s f d) = (term94 A GEN_PVAR_148 t s f d).
Proof. exact (MK_COMB (@lem4522399 A GEN_PVAR_148) (@lem4522396 A t s f d)). Qed.
Lemma lem4522401 {A : Type'} (GEN_PVAR_148 : A -> nat) (t : nat -> Prop) (s : A -> Prop) (d : nat) (f : A -> nat) : (term95 A GEN_PVAR_148 t s d f) = (term95 A GEN_PVAR_148 t s d f).
Proof. exact (MK_COMB (@lem4522400 A GEN_PVAR_148 t s f d) (@lem4522355 A f)). Qed.
Lemma lem4522402 {A : Type'} (GEN_PVAR_148 : A -> nat) (t : nat -> Prop) (s : A -> Prop) (d : nat) : (term96 A GEN_PVAR_148 t s d) = (term96 A GEN_PVAR_148 t s d).
Proof. exact (fun_ext (fun f : A -> nat => @lem4522401 A GEN_PVAR_148 t s d f)). Qed.
Lemma lem4522403 {A : Type'} : (@ex (A -> nat)) = (@ex (A -> nat)).
Proof. exact (eq_refl (@ex (A -> nat))). Qed.
Lemma lem4522404 {A : Type'} (GEN_PVAR_148 : A -> nat) (t : nat -> Prop) (s : A -> Prop) (d : nat) : (term97 A GEN_PVAR_148 t s d) = (term97 A GEN_PVAR_148 t s d).
Proof. exact (MK_COMB (@lem4522403 A) (@lem4522402 A GEN_PVAR_148 t s d)). Qed.
Lemma lem4522405 {A : Type'} (t : nat -> Prop) (s : A -> Prop) (d : nat) : (term98 A t s d) = (term98 A t s d).
Proof. exact (fun_ext (fun GEN_PVAR_148 : A -> nat => @lem4522404 A GEN_PVAR_148 t s d)). Qed.
Lemma lem4522406 {A : Type'} : (@GSPEC (A -> nat)) = (@GSPEC (A -> nat)).
Proof. exact (eq_refl (@GSPEC (A -> nat))). Qed.
Lemma lem4522407 {A : Type'} (t : nat -> Prop) (s : A -> Prop) (d : nat) : (term99 A t s d) = (term99 A t s d).
Proof. exact (MK_COMB (@lem4522406 A) (@lem4522405 A t s d)). Qed.
Lemma lem4522408 {A : Type'} : (@HAS_SIZE (A -> nat)) = (@HAS_SIZE (A -> nat)).
Proof. exact (eq_refl (@HAS_SIZE (A -> nat))). Qed.
Lemma lem4522409 {A : Type'} (t : nat -> Prop) (s : A -> Prop) (d : nat) : (term100 A t s d) = (term100 A t s d).
Proof. exact (MK_COMB (@lem4522408 A) (@lem4522407 A t s d)). Qed.
Lemma lem4522410 {A : Type'} (t : nat -> Prop) (s : A -> Prop) (d : nat) (n : nat) (m : nat) : (term101 A t s d n m) = (term101 A t s d n m).
Proof. exact (MK_COMB (@lem4522409 A t s d) (@lem4522351 n m)). Qed.
Lemma lem4522425 {A : Type'} (s : A -> Prop) (m : nat) (t : nat -> Prop) (n : nat) : (term102 A s m t n) = (term102 A s m t n).
Proof. exact (eq_refl (term102 A s m t n)). Qed.
Lemma lem4522426 {A : Type'} (t : nat -> Prop) (s : A -> Prop) (d : nat) (n : nat) (m : nat) : (term103 A t s d n m) = (term103 A t s d n m).
Proof. exact (MK_COMB (@lem4522425 A s m t n) (@lem4522410 A t s d n m)). Qed.
Lemma lem4522427 {A : Type'} (t : nat -> Prop) (d : nat) (n : nat) (m : nat) : (term104 A t d n m) = (term104 A t d n m).
Proof. exact (fun_ext (fun s : A -> Prop => @lem4522426 A t s d n m)). Qed.
Lemma lem4522428 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem4522429 {A : Type'} (t : nat -> Prop) (d : nat) (n : nat) (m : nat) : (term105 A t d n m) = (term105 A t d n m).
Proof. exact (MK_COMB (@lem4522428 A) (@lem4522427 A t d n m)). Qed.
Lemma lem4522430 {A : Type'} (t : nat -> Prop) (d : nat) (n : nat) : (term106 A t d n) = (term106 A t d n).
Proof. exact (fun_ext (fun m : nat => @lem4522429 A t d n m)). Qed.
Lemma lem4522431 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4522432 {A : Type'} (t : nat -> Prop) (d : nat) (n : nat) : (term107 A t d n) = (term107 A t d n).
Proof. exact (MK_COMB (@lem4522431) (@lem4522430 A t d n)). Qed.
Lemma lem4522433 {A : Type'} (d : nat) (n : nat) : (term108 A d n) = (term108 A d n).
Proof. exact (fun_ext (fun t : nat -> Prop => @lem4522432 A t d n)). Qed.
Lemma lem4522434 : (@all (nat -> Prop)) = (@all (nat -> Prop)).
Proof. exact (eq_refl (@all (nat -> Prop))). Qed.
Lemma lem4522435 {A : Type'} (d : nat) (n : nat) : (term109 A d n) = (term109 A d n).
Proof. exact (MK_COMB (@lem4522434) (@lem4522433 A d n)). Qed.
Lemma lem4522436 {A : Type'} (d : nat) : (term110 A d) = (term110 A d).
Proof. exact (fun_ext (fun n : nat => @lem4522435 A d n)). Qed.
Lemma lem4522437 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4522438 {A : Type'} (d : nat) : (term111 A d) = (term111 A d).
Proof. exact (MK_COMB (@lem4522437) (@lem4522436 A d)). Qed.
Lemma lem4522439 {A : Type'} : (term112 A) = (term112 A).
Proof. exact (fun_ext (fun d : nat => @lem4522438 A d)). Qed.
Lemma lem4522440 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4522441 {A : Type'} : (term13 A) = (term13 A).
Proof. exact (MK_COMB (@lem4522440) (@lem4522439 A)). Qed.
Lemma lem4522442 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem4522443 {A : Type'} : (term24 A) = (term24 A).
Proof. exact (MK_COMB (@lem4522442) (@lem4522441 A)). Qed.
Lemma lem4522448 (n : nat) (m : nat) : (Nat.pow n m) = (Nat.pow n m).
Proof. exact (eq_refl (Nat.pow n m)). Qed.
Lemma lem4522452 {A B : Type'} (f : A -> B) : f = f.
Proof. exact (eq_refl f). Qed.
Lemma lem4522469 {A B : Type'} (s : A -> Prop) (f : A -> B) (x : A) (d : B) : (term113 A B s f x d) = (term113 A B s f x d).
Proof. exact (eq_refl (term113 A B s f x d)). Qed.
Lemma lem4522470 {A B : Type'} (s : A -> Prop) (f : A -> B) (d : B) : (term114 A B s f d) = (term114 A B s f d).
Proof. exact (fun_ext (fun x : A => @lem4522469 A B s f x d)). Qed.
Lemma lem4522471 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem4522472 {A B : Type'} (s : A -> Prop) (f : A -> B) (d : B) : (term115 A B s f d) = (term115 A B s f d).
Proof. exact (MK_COMB (@lem4522471 A) (@lem4522470 A B s f d)). Qed.
Lemma lem4522487 {A B : Type'} (s : A -> Prop) (f : A -> B) (x : A) (t : B -> Prop) : (term116 A B s f x t) = (term116 A B s f x t).
Proof. exact (eq_refl (term116 A B s f x t)). Qed.
Lemma lem4522488 {A B : Type'} (s : A -> Prop) (f : A -> B) (t : B -> Prop) : (term117 A B s f t) = (term117 A B s f t).
Proof. exact (fun_ext (fun x : A => @lem4522487 A B s f x t)). Qed.
Lemma lem4522489 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem4522490 {A B : Type'} (s : A -> Prop) (f : A -> B) (t : B -> Prop) : (term118 A B s f t) = (term118 A B s f t).
Proof. exact (MK_COMB (@lem4522489 A) (@lem4522488 A B s f t)). Qed.
Lemma lem4522491 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4522492 {A B : Type'} (s : A -> Prop) (f : A -> B) (t : B -> Prop) : (term119 A B s f t) = (term119 A B s f t).
Proof. exact (MK_COMB (@lem4522491) (@lem4522490 A B s f t)). Qed.
Lemma lem4522493 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (f : A -> B) (d : B) : (term120 A B t s f d) = (term120 A B t s f d).
Proof. exact (MK_COMB (@lem4522492 A B s f t) (@lem4522472 A B s f d)). Qed.
Lemma lem4522496 {A B : Type'} (GEN_PVAR_148 : A -> B) : (@SETSPEC (A -> B) GEN_PVAR_148) = (@SETSPEC (A -> B) GEN_PVAR_148).
Proof. exact (eq_refl (@SETSPEC (A -> B) GEN_PVAR_148)). Qed.
Lemma lem4522497 {A B : Type'} (GEN_PVAR_148 : A -> B) (t : B -> Prop) (s : A -> Prop) (f : A -> B) (d : B) : (term121 A B GEN_PVAR_148 t s f d) = (term121 A B GEN_PVAR_148 t s f d).
Proof. exact (MK_COMB (@lem4522496 A B GEN_PVAR_148) (@lem4522493 A B t s f d)). Qed.
Lemma lem4522498 {A B : Type'} (GEN_PVAR_148 : A -> B) (t : B -> Prop) (s : A -> Prop) (d : B) (f : A -> B) : (term122 A B GEN_PVAR_148 t s d f) = (term122 A B GEN_PVAR_148 t s d f).
Proof. exact (MK_COMB (@lem4522497 A B GEN_PVAR_148 t s f d) (@lem4522452 A B f)). Qed.
Lemma lem4522499 {A B : Type'} (GEN_PVAR_148 : A -> B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term123 A B GEN_PVAR_148 t s d) = (term123 A B GEN_PVAR_148 t s d).
Proof. exact (fun_ext (fun f : A -> B => @lem4522498 A B GEN_PVAR_148 t s d f)). Qed.
Lemma lem4522500 {A B : Type'} : (@ex (A -> B)) = (@ex (A -> B)).
Proof. exact (eq_refl (@ex (A -> B))). Qed.
Lemma lem4522501 {A B : Type'} (GEN_PVAR_148 : A -> B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term124 A B GEN_PVAR_148 t s d) = (term124 A B GEN_PVAR_148 t s d).
Proof. exact (MK_COMB (@lem4522500 A B) (@lem4522499 A B GEN_PVAR_148 t s d)). Qed.
Lemma lem4522502 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (d : B) : (term125 A B t s d) = (term125 A B t s d).
Proof. exact (fun_ext (fun GEN_PVAR_148 : A -> B => @lem4522501 A B GEN_PVAR_148 t s d)). Qed.
Lemma lem4522503 {A B : Type'} : (@GSPEC (A -> B)) = (@GSPEC (A -> B)).
Proof. exact (eq_refl (@GSPEC (A -> B))). Qed.
Lemma lem4522504 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (d : B) : (term126 A B t s d) = (term126 A B t s d).
Proof. exact (MK_COMB (@lem4522503 A B) (@lem4522502 A B t s d)). Qed.
Lemma lem4522505 {A B : Type'} : (@HAS_SIZE (A -> B)) = (@HAS_SIZE (A -> B)).
Proof. exact (eq_refl (@HAS_SIZE (A -> B))). Qed.
Lemma lem4522506 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (d : B) : (term127 A B t s d) = (term127 A B t s d).
Proof. exact (MK_COMB (@lem4522505 A B) (@lem4522504 A B t s d)). Qed.
Lemma lem4522507 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (d : B) (n : nat) (m : nat) : (term128 A B t s d n m) = (term128 A B t s d n m).
Proof. exact (MK_COMB (@lem4522506 A B t s d) (@lem4522448 n m)). Qed.
Lemma lem4522522 {A B : Type'} (s : A -> Prop) (m : nat) (t : B -> Prop) (n : nat) : (term129 A B s m t n) = (term129 A B s m t n).
Proof. exact (eq_refl (term129 A B s m t n)). Qed.
Lemma lem4522523 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (d : B) (n : nat) (m : nat) : (term130 A B t s d n m) = (term130 A B t s d n m).
Proof. exact (MK_COMB (@lem4522522 A B s m t n) (@lem4522507 A B t s d n m)). Qed.
Lemma lem4522524 {A B : Type'} (t : B -> Prop) (d : B) (n : nat) (m : nat) : (term131 A B t d n m) = (term131 A B t d n m).
Proof. exact (fun_ext (fun s : A -> Prop => @lem4522523 A B t s d n m)). Qed.
Lemma lem4522525 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem4522526 {A B : Type'} (t : B -> Prop) (d : B) (n : nat) (m : nat) : (term132 A B t d n m) = (term132 A B t d n m).
Proof. exact (MK_COMB (@lem4522525 A) (@lem4522524 A B t d n m)). Qed.
Lemma lem4522527 {A B : Type'} (t : B -> Prop) (d : B) (n : nat) : (term133 A B t d n) = (term133 A B t d n).
Proof. exact (fun_ext (fun m : nat => @lem4522526 A B t d n m)). Qed.
Lemma lem4522528 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4522529 {A B : Type'} (t : B -> Prop) (d : B) (n : nat) : (term134 A B t d n) = (term134 A B t d n).
Proof. exact (MK_COMB (@lem4522528) (@lem4522527 A B t d n)). Qed.
Lemma lem4522530 {A B : Type'} (d : B) (n : nat) : (term135 A B d n) = (term135 A B d n).
Proof. exact (fun_ext (fun t : B -> Prop => @lem4522529 A B t d n)). Qed.
Lemma lem4522531 {B : Type'} : (@all (B -> Prop)) = (@all (B -> Prop)).
Proof. exact (eq_refl (@all (B -> Prop))). Qed.
Lemma lem4522532 {A B : Type'} (d : B) (n : nat) : (term136 A B d n) = (term136 A B d n).
Proof. exact (MK_COMB (@lem4522531 B) (@lem4522530 A B d n)). Qed.
Lemma lem4522533 {A B : Type'} (d : B) : (term137 A B d) = (term137 A B d).
Proof. exact (fun_ext (fun n : nat => @lem4522532 A B d n)). Qed.
Lemma lem4522534 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4522535 {A B : Type'} (d : B) : (term138 A B d) = (term138 A B d).
Proof. exact (MK_COMB (@lem4522534) (@lem4522533 A B d)). Qed.
Lemma lem4522536 {A B : Type'} : (term139 A B) = (term139 A B).
Proof. exact (fun_ext (fun d : B => @lem4522535 A B d)). Qed.
Lemma lem4522537 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem4522538 {A B : Type'} : (term12 A B) = (term12 A B).
Proof. exact (MK_COMB (@lem4522537 B) (@lem4522536 A B)). Qed.
Lemma lem4522539 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4522540 {A B : Type'} : (term25 A B) = (term25 A B).
Proof. exact (MK_COMB (@lem4522539) (@lem4522538 A B)). Qed.
Lemma lem4522541 {A B : Type'} : (term27 A B) = (term27 A B).
Proof. exact (MK_COMB (@lem4522540 A B) (@lem4522443 A)). Qed.
Lemma lem4522546 (n : nat) (m : nat) : (Nat.pow n m) = (Nat.pow n m).
Proof. exact (eq_refl (Nat.pow n m)). Qed.
Lemma lem4522550 {_107642 B : Type'} (f : _107642 -> B) : f = f.
Proof. exact (eq_refl f). Qed.
Lemma lem4522567 {_107642 B : Type'} (s : _107642 -> Prop) (f : _107642 -> B) (x : _107642) (d : B) : (term113 _107642 B s f x d) = (term113 _107642 B s f x d).
Proof. exact (eq_refl (term113 _107642 B s f x d)). Qed.
Lemma lem4522568 {_107642 B : Type'} (s : _107642 -> Prop) (f : _107642 -> B) (d : B) : (term114 _107642 B s f d) = (term114 _107642 B s f d).
Proof. exact (fun_ext (fun x : _107642 => @lem4522567 _107642 B s f x d)). Qed.
Lemma lem4522569 {_107642 : Type'} : (@all _107642) = (@all _107642).
Proof. exact (eq_refl (@all _107642)). Qed.
Lemma lem4522570 {_107642 B : Type'} (s : _107642 -> Prop) (f : _107642 -> B) (d : B) : (term115 _107642 B s f d) = (term115 _107642 B s f d).
Proof. exact (MK_COMB (@lem4522569 _107642) (@lem4522568 _107642 B s f d)). Qed.
Lemma lem4522585 {_107642 B : Type'} (s : _107642 -> Prop) (f : _107642 -> B) (x : _107642) (t : B -> Prop) : (term116 _107642 B s f x t) = (term116 _107642 B s f x t).
Proof. exact (eq_refl (term116 _107642 B s f x t)). Qed.
Lemma lem4522586 {_107642 B : Type'} (s : _107642 -> Prop) (f : _107642 -> B) (t : B -> Prop) : (term117 _107642 B s f t) = (term117 _107642 B s f t).
Proof. exact (fun_ext (fun x : _107642 => @lem4522585 _107642 B s f x t)). Qed.
Lemma lem4522587 {_107642 : Type'} : (@all _107642) = (@all _107642).
Proof. exact (eq_refl (@all _107642)). Qed.
Lemma lem4522588 {_107642 B : Type'} (s : _107642 -> Prop) (f : _107642 -> B) (t : B -> Prop) : (term118 _107642 B s f t) = (term118 _107642 B s f t).
Proof. exact (MK_COMB (@lem4522587 _107642) (@lem4522586 _107642 B s f t)). Qed.
Lemma lem4522589 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4522590 {_107642 B : Type'} (s : _107642 -> Prop) (f : _107642 -> B) (t : B -> Prop) : (term119 _107642 B s f t) = (term119 _107642 B s f t).
Proof. exact (MK_COMB (@lem4522589) (@lem4522588 _107642 B s f t)). Qed.
Lemma lem4522591 {_107642 B : Type'} (t : B -> Prop) (s : _107642 -> Prop) (f : _107642 -> B) (d : B) : (term120 _107642 B t s f d) = (term120 _107642 B t s f d).
Proof. exact (MK_COMB (@lem4522590 _107642 B s f t) (@lem4522570 _107642 B s f d)). Qed.
Lemma lem4522594 {_107642 B : Type'} (GEN_PVAR_148 : _107642 -> B) : (@SETSPEC (_107642 -> B) GEN_PVAR_148) = (@SETSPEC (_107642 -> B) GEN_PVAR_148).
Proof. exact (eq_refl (@SETSPEC (_107642 -> B) GEN_PVAR_148)). Qed.
Lemma lem4522595 {_107642 B : Type'} (GEN_PVAR_148 : _107642 -> B) (t : B -> Prop) (s : _107642 -> Prop) (f : _107642 -> B) (d : B) : (term121 _107642 B GEN_PVAR_148 t s f d) = (term121 _107642 B GEN_PVAR_148 t s f d).
Proof. exact (MK_COMB (@lem4522594 _107642 B GEN_PVAR_148) (@lem4522591 _107642 B t s f d)). Qed.
Lemma lem4522596 {_107642 B : Type'} (GEN_PVAR_148 : _107642 -> B) (t : B -> Prop) (s : _107642 -> Prop) (d : B) (f : _107642 -> B) : (term122 _107642 B GEN_PVAR_148 t s d f) = (term122 _107642 B GEN_PVAR_148 t s d f).
Proof. exact (MK_COMB (@lem4522595 _107642 B GEN_PVAR_148 t s f d) (@lem4522550 _107642 B f)). Qed.
Lemma lem4522597 {_107642 B : Type'} (GEN_PVAR_148 : _107642 -> B) (t : B -> Prop) (s : _107642 -> Prop) (d : B) : (term123 _107642 B GEN_PVAR_148 t s d) = (term123 _107642 B GEN_PVAR_148 t s d).
Proof. exact (fun_ext (fun f : _107642 -> B => @lem4522596 _107642 B GEN_PVAR_148 t s d f)). Qed.
Lemma lem4522598 {_107642 B : Type'} : (@ex (_107642 -> B)) = (@ex (_107642 -> B)).
Proof. exact (eq_refl (@ex (_107642 -> B))). Qed.
Lemma lem4522599 {_107642 B : Type'} (GEN_PVAR_148 : _107642 -> B) (t : B -> Prop) (s : _107642 -> Prop) (d : B) : (term124 _107642 B GEN_PVAR_148 t s d) = (term124 _107642 B GEN_PVAR_148 t s d).
Proof. exact (MK_COMB (@lem4522598 _107642 B) (@lem4522597 _107642 B GEN_PVAR_148 t s d)). Qed.
Lemma lem4522600 {_107642 B : Type'} (t : B -> Prop) (s : _107642 -> Prop) (d : B) : (term125 _107642 B t s d) = (term125 _107642 B t s d).
Proof. exact (fun_ext (fun GEN_PVAR_148 : _107642 -> B => @lem4522599 _107642 B GEN_PVAR_148 t s d)). Qed.
Lemma lem4522601 {_107642 B : Type'} : (@GSPEC (_107642 -> B)) = (@GSPEC (_107642 -> B)).
Proof. exact (eq_refl (@GSPEC (_107642 -> B))). Qed.
Lemma lem4522602 {_107642 B : Type'} (t : B -> Prop) (s : _107642 -> Prop) (d : B) : (term126 _107642 B t s d) = (term126 _107642 B t s d).
Proof. exact (MK_COMB (@lem4522601 _107642 B) (@lem4522600 _107642 B t s d)). Qed.
Lemma lem4522603 {_107642 B : Type'} : (@HAS_SIZE (_107642 -> B)) = (@HAS_SIZE (_107642 -> B)).
Proof. exact (eq_refl (@HAS_SIZE (_107642 -> B))). Qed.
Lemma lem4522604 {_107642 B : Type'} (t : B -> Prop) (s : _107642 -> Prop) (d : B) : (term127 _107642 B t s d) = (term127 _107642 B t s d).
Proof. exact (MK_COMB (@lem4522603 _107642 B) (@lem4522602 _107642 B t s d)). Qed.
Lemma lem4522605 {_107642 B : Type'} (t : B -> Prop) (s : _107642 -> Prop) (d : B) (n : nat) (m : nat) : (term128 _107642 B t s d n m) = (term128 _107642 B t s d n m).
Proof. exact (MK_COMB (@lem4522604 _107642 B t s d) (@lem4522546 n m)). Qed.
Lemma lem4522620 {_107642 B : Type'} (s : _107642 -> Prop) (m : nat) (t : B -> Prop) (n : nat) : (term129 _107642 B s m t n) = (term129 _107642 B s m t n).
Proof. exact (eq_refl (term129 _107642 B s m t n)). Qed.
Lemma lem4522621 {_107642 B : Type'} (t : B -> Prop) (s : _107642 -> Prop) (d : B) (n : nat) (m : nat) : (term130 _107642 B t s d n m) = (term130 _107642 B t s d n m).
Proof. exact (MK_COMB (@lem4522620 _107642 B s m t n) (@lem4522605 _107642 B t s d n m)). Qed.
Lemma lem4522622 {_107642 B : Type'} (t : B -> Prop) (d : B) (n : nat) (m : nat) : (term131 _107642 B t d n m) = (term131 _107642 B t d n m).
Proof. exact (fun_ext (fun s : _107642 -> Prop => @lem4522621 _107642 B t s d n m)). Qed.
Lemma lem4522623 {_107642 : Type'} : (@all (_107642 -> Prop)) = (@all (_107642 -> Prop)).
Proof. exact (eq_refl (@all (_107642 -> Prop))). Qed.
Lemma lem4522624 {_107642 B : Type'} (t : B -> Prop) (d : B) (n : nat) (m : nat) : (term132 _107642 B t d n m) = (term132 _107642 B t d n m).
Proof. exact (MK_COMB (@lem4522623 _107642) (@lem4522622 _107642 B t d n m)). Qed.
Lemma lem4522625 {_107642 B : Type'} (t : B -> Prop) (d : B) (n : nat) : (term133 _107642 B t d n) = (term133 _107642 B t d n).
Proof. exact (fun_ext (fun m : nat => @lem4522624 _107642 B t d n m)). Qed.
Lemma lem4522626 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4522627 {_107642 B : Type'} (t : B -> Prop) (d : B) (n : nat) : (term134 _107642 B t d n) = (term134 _107642 B t d n).
Proof. exact (MK_COMB (@lem4522626) (@lem4522625 _107642 B t d n)). Qed.
Lemma lem4522628 {_107642 B : Type'} (d : B) (n : nat) : (term135 _107642 B d n) = (term135 _107642 B d n).
Proof. exact (fun_ext (fun t : B -> Prop => @lem4522627 _107642 B t d n)). Qed.
Lemma lem4522629 {B : Type'} : (@all (B -> Prop)) = (@all (B -> Prop)).
Proof. exact (eq_refl (@all (B -> Prop))). Qed.
Lemma lem4522630 {_107642 B : Type'} (d : B) (n : nat) : (term136 _107642 B d n) = (term136 _107642 B d n).
Proof. exact (MK_COMB (@lem4522629 B) (@lem4522628 _107642 B d n)). Qed.
Lemma lem4522631 {_107642 B : Type'} (d : B) : (term137 _107642 B d) = (term137 _107642 B d).
Proof. exact (fun_ext (fun n : nat => @lem4522630 _107642 B d n)). Qed.
Lemma lem4522632 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4522633 {_107642 B : Type'} (d : B) : (term138 _107642 B d) = (term138 _107642 B d).
Proof. exact (MK_COMB (@lem4522632) (@lem4522631 _107642 B d)). Qed.
Lemma lem4522634 {_107642 B : Type'} : (term139 _107642 B) = (term139 _107642 B).
Proof. exact (fun_ext (fun d : B => @lem4522633 _107642 B d)). Qed.
Lemma lem4522635 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem4522636 {_107642 B : Type'} : (term12 _107642 B) = (term12 _107642 B).
Proof. exact (MK_COMB (@lem4522635 B) (@lem4522634 _107642 B)). Qed.
Lemma lem4522637 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4522638 {_107642 B : Type'} : (term25 _107642 B) = (term25 _107642 B).
Proof. exact (MK_COMB (@lem4522637) (@lem4522636 _107642 B)). Qed.
Lemma lem4522639 {_107642 A B : Type'} : (term29 _107642 A B) = (term29 _107642 A B).
Proof. exact (MK_COMB (@lem4522638 _107642 B) (@lem4522541 A B)). Qed.
Lemma lem4522644 (n : nat) (m : nat) : (Nat.pow n m) = (Nat.pow n m).
Proof. exact (eq_refl (Nat.pow n m)). Qed.
Lemma lem4522648 {_107639 B : Type'} (f : _107639 -> B) : f = f.
Proof. exact (eq_refl f). Qed.
Lemma lem4522665 {_107639 B : Type'} (s : _107639 -> Prop) (f : _107639 -> B) (x : _107639) (d : B) : (term113 _107639 B s f x d) = (term113 _107639 B s f x d).
Proof. exact (eq_refl (term113 _107639 B s f x d)). Qed.
Lemma lem4522666 {_107639 B : Type'} (s : _107639 -> Prop) (f : _107639 -> B) (d : B) : (term114 _107639 B s f d) = (term114 _107639 B s f d).
Proof. exact (fun_ext (fun x : _107639 => @lem4522665 _107639 B s f x d)). Qed.
Lemma lem4522667 {_107639 : Type'} : (@all _107639) = (@all _107639).
Proof. exact (eq_refl (@all _107639)). Qed.
Lemma lem4522668 {_107639 B : Type'} (s : _107639 -> Prop) (f : _107639 -> B) (d : B) : (term115 _107639 B s f d) = (term115 _107639 B s f d).
Proof. exact (MK_COMB (@lem4522667 _107639) (@lem4522666 _107639 B s f d)). Qed.
Lemma lem4522683 {_107639 B : Type'} (s : _107639 -> Prop) (f : _107639 -> B) (x : _107639) (t : B -> Prop) : (term116 _107639 B s f x t) = (term116 _107639 B s f x t).
Proof. exact (eq_refl (term116 _107639 B s f x t)). Qed.
Lemma lem4522684 {_107639 B : Type'} (s : _107639 -> Prop) (f : _107639 -> B) (t : B -> Prop) : (term117 _107639 B s f t) = (term117 _107639 B s f t).
Proof. exact (fun_ext (fun x : _107639 => @lem4522683 _107639 B s f x t)). Qed.
Lemma lem4522685 {_107639 : Type'} : (@all _107639) = (@all _107639).
Proof. exact (eq_refl (@all _107639)). Qed.
Lemma lem4522686 {_107639 B : Type'} (s : _107639 -> Prop) (f : _107639 -> B) (t : B -> Prop) : (term118 _107639 B s f t) = (term118 _107639 B s f t).
Proof. exact (MK_COMB (@lem4522685 _107639) (@lem4522684 _107639 B s f t)). Qed.
Lemma lem4522687 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4522688 {_107639 B : Type'} (s : _107639 -> Prop) (f : _107639 -> B) (t : B -> Prop) : (term119 _107639 B s f t) = (term119 _107639 B s f t).
Proof. exact (MK_COMB (@lem4522687) (@lem4522686 _107639 B s f t)). Qed.
Lemma lem4522689 {_107639 B : Type'} (t : B -> Prop) (s : _107639 -> Prop) (f : _107639 -> B) (d : B) : (term120 _107639 B t s f d) = (term120 _107639 B t s f d).
Proof. exact (MK_COMB (@lem4522688 _107639 B s f t) (@lem4522668 _107639 B s f d)). Qed.
Lemma lem4522692 {_107639 B : Type'} (GEN_PVAR_148 : _107639 -> B) : (@SETSPEC (_107639 -> B) GEN_PVAR_148) = (@SETSPEC (_107639 -> B) GEN_PVAR_148).
Proof. exact (eq_refl (@SETSPEC (_107639 -> B) GEN_PVAR_148)). Qed.
Lemma lem4522693 {_107639 B : Type'} (GEN_PVAR_148 : _107639 -> B) (t : B -> Prop) (s : _107639 -> Prop) (f : _107639 -> B) (d : B) : (term121 _107639 B GEN_PVAR_148 t s f d) = (term121 _107639 B GEN_PVAR_148 t s f d).
Proof. exact (MK_COMB (@lem4522692 _107639 B GEN_PVAR_148) (@lem4522689 _107639 B t s f d)). Qed.
Lemma lem4522694 {_107639 B : Type'} (GEN_PVAR_148 : _107639 -> B) (t : B -> Prop) (s : _107639 -> Prop) (d : B) (f : _107639 -> B) : (term122 _107639 B GEN_PVAR_148 t s d f) = (term122 _107639 B GEN_PVAR_148 t s d f).
Proof. exact (MK_COMB (@lem4522693 _107639 B GEN_PVAR_148 t s f d) (@lem4522648 _107639 B f)). Qed.
Lemma lem4522695 {_107639 B : Type'} (GEN_PVAR_148 : _107639 -> B) (t : B -> Prop) (s : _107639 -> Prop) (d : B) : (term123 _107639 B GEN_PVAR_148 t s d) = (term123 _107639 B GEN_PVAR_148 t s d).
Proof. exact (fun_ext (fun f : _107639 -> B => @lem4522694 _107639 B GEN_PVAR_148 t s d f)). Qed.
Lemma lem4522696 {_107639 B : Type'} : (@ex (_107639 -> B)) = (@ex (_107639 -> B)).
Proof. exact (eq_refl (@ex (_107639 -> B))). Qed.
Lemma lem4522697 {_107639 B : Type'} (GEN_PVAR_148 : _107639 -> B) (t : B -> Prop) (s : _107639 -> Prop) (d : B) : (term124 _107639 B GEN_PVAR_148 t s d) = (term124 _107639 B GEN_PVAR_148 t s d).
Proof. exact (MK_COMB (@lem4522696 _107639 B) (@lem4522695 _107639 B GEN_PVAR_148 t s d)). Qed.
Lemma lem4522698 {_107639 B : Type'} (t : B -> Prop) (s : _107639 -> Prop) (d : B) : (term125 _107639 B t s d) = (term125 _107639 B t s d).
Proof. exact (fun_ext (fun GEN_PVAR_148 : _107639 -> B => @lem4522697 _107639 B GEN_PVAR_148 t s d)). Qed.
Lemma lem4522699 {_107639 B : Type'} : (@GSPEC (_107639 -> B)) = (@GSPEC (_107639 -> B)).
Proof. exact (eq_refl (@GSPEC (_107639 -> B))). Qed.
Lemma lem4522700 {_107639 B : Type'} (t : B -> Prop) (s : _107639 -> Prop) (d : B) : (term126 _107639 B t s d) = (term126 _107639 B t s d).
Proof. exact (MK_COMB (@lem4522699 _107639 B) (@lem4522698 _107639 B t s d)). Qed.
Lemma lem4522701 {_107639 B : Type'} : (@HAS_SIZE (_107639 -> B)) = (@HAS_SIZE (_107639 -> B)).
Proof. exact (eq_refl (@HAS_SIZE (_107639 -> B))). Qed.
Lemma lem4522702 {_107639 B : Type'} (t : B -> Prop) (s : _107639 -> Prop) (d : B) : (term127 _107639 B t s d) = (term127 _107639 B t s d).
Proof. exact (MK_COMB (@lem4522701 _107639 B) (@lem4522700 _107639 B t s d)). Qed.
Lemma lem4522703 {_107639 B : Type'} (t : B -> Prop) (s : _107639 -> Prop) (d : B) (n : nat) (m : nat) : (term128 _107639 B t s d n m) = (term128 _107639 B t s d n m).
Proof. exact (MK_COMB (@lem4522702 _107639 B t s d) (@lem4522644 n m)). Qed.
Lemma lem4522718 {_107639 B : Type'} (s : _107639 -> Prop) (m : nat) (t : B -> Prop) (n : nat) : (term129 _107639 B s m t n) = (term129 _107639 B s m t n).
Proof. exact (eq_refl (term129 _107639 B s m t n)). Qed.
Lemma lem4522719 {_107639 B : Type'} (t : B -> Prop) (s : _107639 -> Prop) (d : B) (n : nat) (m : nat) : (term130 _107639 B t s d n m) = (term130 _107639 B t s d n m).
Proof. exact (MK_COMB (@lem4522718 _107639 B s m t n) (@lem4522703 _107639 B t s d n m)). Qed.
Lemma lem4522720 {_107639 B : Type'} (t : B -> Prop) (d : B) (n : nat) (m : nat) : (term131 _107639 B t d n m) = (term131 _107639 B t d n m).
Proof. exact (fun_ext (fun s : _107639 -> Prop => @lem4522719 _107639 B t s d n m)). Qed.
Lemma lem4522721 {_107639 : Type'} : (@all (_107639 -> Prop)) = (@all (_107639 -> Prop)).
Proof. exact (eq_refl (@all (_107639 -> Prop))). Qed.
Lemma lem4522722 {_107639 B : Type'} (t : B -> Prop) (d : B) (n : nat) (m : nat) : (term132 _107639 B t d n m) = (term132 _107639 B t d n m).
Proof. exact (MK_COMB (@lem4522721 _107639) (@lem4522720 _107639 B t d n m)). Qed.
Lemma lem4522723 {_107639 B : Type'} (t : B -> Prop) (d : B) (n : nat) : (term133 _107639 B t d n) = (term133 _107639 B t d n).
Proof. exact (fun_ext (fun m : nat => @lem4522722 _107639 B t d n m)). Qed.
Lemma lem4522724 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4522725 {_107639 B : Type'} (t : B -> Prop) (d : B) (n : nat) : (term134 _107639 B t d n) = (term134 _107639 B t d n).
Proof. exact (MK_COMB (@lem4522724) (@lem4522723 _107639 B t d n)). Qed.
Lemma lem4522726 {_107639 B : Type'} (d : B) (n : nat) : (term135 _107639 B d n) = (term135 _107639 B d n).
Proof. exact (fun_ext (fun t : B -> Prop => @lem4522725 _107639 B t d n)). Qed.
Lemma lem4522727 {B : Type'} : (@all (B -> Prop)) = (@all (B -> Prop)).
Proof. exact (eq_refl (@all (B -> Prop))). Qed.
Lemma lem4522728 {_107639 B : Type'} (d : B) (n : nat) : (term136 _107639 B d n) = (term136 _107639 B d n).
Proof. exact (MK_COMB (@lem4522727 B) (@lem4522726 _107639 B d n)). Qed.
Lemma lem4522729 {_107639 B : Type'} (d : B) : (term137 _107639 B d) = (term137 _107639 B d).
Proof. exact (fun_ext (fun n : nat => @lem4522728 _107639 B d n)). Qed.
Lemma lem4522730 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4522731 {_107639 B : Type'} (d : B) : (term138 _107639 B d) = (term138 _107639 B d).
Proof. exact (MK_COMB (@lem4522730) (@lem4522729 _107639 B d)). Qed.
Lemma lem4522732 {_107639 B : Type'} : (term139 _107639 B) = (term139 _107639 B).
Proof. exact (fun_ext (fun d : B => @lem4522731 _107639 B d)). Qed.
Lemma lem4522733 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem4522734 {_107639 B : Type'} : (term12 _107639 B) = (term12 _107639 B).
Proof. exact (MK_COMB (@lem4522733 B) (@lem4522732 _107639 B)). Qed.
Lemma lem4522735 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4522736 {_107639 B : Type'} : (term25 _107639 B) = (term25 _107639 B).
Proof. exact (MK_COMB (@lem4522735) (@lem4522734 _107639 B)). Qed.
Lemma lem4522737 {_107639 _107642 A B : Type'} : (term31 _107639 _107642 A B) = (term31 _107639 _107642 A B).
Proof. exact (MK_COMB (@lem4522736 _107639 B) (@lem4522639 _107642 A B)). Qed.
Lemma lem4522742 (n : nat) (m : nat) : (Nat.pow n m) = (Nat.pow n m).
Proof. exact (eq_refl (Nat.pow n m)). Qed.
Lemma lem4522746 {_107642 A : Type'} (f : A -> _107642) : f = f.
Proof. exact (eq_refl f). Qed.
Lemma lem4522763 {_107642 A : Type'} (s : A -> Prop) (f : A -> _107642) (x : A) (d : _107642) : (term140 _107642 A s f x d) = (term140 _107642 A s f x d).
Proof. exact (eq_refl (term140 _107642 A s f x d)). Qed.
Lemma lem4522764 {_107642 A : Type'} (s : A -> Prop) (f : A -> _107642) (d : _107642) : (term141 _107642 A s f d) = (term141 _107642 A s f d).
Proof. exact (fun_ext (fun x : A => @lem4522763 _107642 A s f x d)). Qed.
Lemma lem4522765 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem4522766 {_107642 A : Type'} (s : A -> Prop) (f : A -> _107642) (d : _107642) : (term142 _107642 A s f d) = (term142 _107642 A s f d).
Proof. exact (MK_COMB (@lem4522765 A) (@lem4522764 _107642 A s f d)). Qed.
Lemma lem4522781 {_107642 A : Type'} (s : A -> Prop) (f : A -> _107642) (x : A) (t : _107642 -> Prop) : (term143 _107642 A s f x t) = (term143 _107642 A s f x t).
Proof. exact (eq_refl (term143 _107642 A s f x t)). Qed.
Lemma lem4522782 {_107642 A : Type'} (s : A -> Prop) (f : A -> _107642) (t : _107642 -> Prop) : (term144 _107642 A s f t) = (term144 _107642 A s f t).
Proof. exact (fun_ext (fun x : A => @lem4522781 _107642 A s f x t)). Qed.
Lemma lem4522783 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem4522784 {_107642 A : Type'} (s : A -> Prop) (f : A -> _107642) (t : _107642 -> Prop) : (term145 _107642 A s f t) = (term145 _107642 A s f t).
Proof. exact (MK_COMB (@lem4522783 A) (@lem4522782 _107642 A s f t)). Qed.
Lemma lem4522785 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4522786 {_107642 A : Type'} (s : A -> Prop) (f : A -> _107642) (t : _107642 -> Prop) : (term146 _107642 A s f t) = (term146 _107642 A s f t).
Proof. exact (MK_COMB (@lem4522785) (@lem4522784 _107642 A s f t)). Qed.
Lemma lem4522787 {_107642 A : Type'} (t : _107642 -> Prop) (s : A -> Prop) (f : A -> _107642) (d : _107642) : (term147 _107642 A t s f d) = (term147 _107642 A t s f d).
Proof. exact (MK_COMB (@lem4522786 _107642 A s f t) (@lem4522766 _107642 A s f d)). Qed.
Lemma lem4522790 {_107642 A : Type'} (GEN_PVAR_148 : A -> _107642) : (@SETSPEC (A -> _107642) GEN_PVAR_148) = (@SETSPEC (A -> _107642) GEN_PVAR_148).
Proof. exact (eq_refl (@SETSPEC (A -> _107642) GEN_PVAR_148)). Qed.
Lemma lem4522791 {_107642 A : Type'} (GEN_PVAR_148 : A -> _107642) (t : _107642 -> Prop) (s : A -> Prop) (f : A -> _107642) (d : _107642) : (term148 _107642 A GEN_PVAR_148 t s f d) = (term148 _107642 A GEN_PVAR_148 t s f d).
Proof. exact (MK_COMB (@lem4522790 _107642 A GEN_PVAR_148) (@lem4522787 _107642 A t s f d)). Qed.
Lemma lem4522792 {_107642 A : Type'} (GEN_PVAR_148 : A -> _107642) (t : _107642 -> Prop) (s : A -> Prop) (d : _107642) (f : A -> _107642) : (term149 _107642 A GEN_PVAR_148 t s d f) = (term149 _107642 A GEN_PVAR_148 t s d f).
Proof. exact (MK_COMB (@lem4522791 _107642 A GEN_PVAR_148 t s f d) (@lem4522746 _107642 A f)). Qed.
Lemma lem4522793 {_107642 A : Type'} (GEN_PVAR_148 : A -> _107642) (t : _107642 -> Prop) (s : A -> Prop) (d : _107642) : (term150 _107642 A GEN_PVAR_148 t s d) = (term150 _107642 A GEN_PVAR_148 t s d).
Proof. exact (fun_ext (fun f : A -> _107642 => @lem4522792 _107642 A GEN_PVAR_148 t s d f)). Qed.
Lemma lem4522794 {_107642 A : Type'} : (@ex (A -> _107642)) = (@ex (A -> _107642)).
Proof. exact (eq_refl (@ex (A -> _107642))). Qed.
Lemma lem4522795 {_107642 A : Type'} (GEN_PVAR_148 : A -> _107642) (t : _107642 -> Prop) (s : A -> Prop) (d : _107642) : (term151 _107642 A GEN_PVAR_148 t s d) = (term151 _107642 A GEN_PVAR_148 t s d).
Proof. exact (MK_COMB (@lem4522794 _107642 A) (@lem4522793 _107642 A GEN_PVAR_148 t s d)). Qed.
Lemma lem4522796 {_107642 A : Type'} (t : _107642 -> Prop) (s : A -> Prop) (d : _107642) : (term84 _107642 A t s d) = (term84 _107642 A t s d).
Proof. exact (fun_ext (fun GEN_PVAR_148 : A -> _107642 => @lem4522795 _107642 A GEN_PVAR_148 t s d)). Qed.
Lemma lem4522797 {_107642 A : Type'} : (@GSPEC (A -> _107642)) = (@GSPEC (A -> _107642)).
Proof. exact (eq_refl (@GSPEC (A -> _107642))). Qed.
Lemma lem4522798 {_107642 A : Type'} (t : _107642 -> Prop) (s : A -> Prop) (d : _107642) : (term152 _107642 A t s d) = (term152 _107642 A t s d).
Proof. exact (MK_COMB (@lem4522797 _107642 A) (@lem4522796 _107642 A t s d)). Qed.
Lemma lem4522799 {_107642 A : Type'} : (@HAS_SIZE (A -> _107642)) = (@HAS_SIZE (A -> _107642)).
Proof. exact (eq_refl (@HAS_SIZE (A -> _107642))). Qed.
Lemma lem4522800 {_107642 A : Type'} (t : _107642 -> Prop) (s : A -> Prop) (d : _107642) : (term153 _107642 A t s d) = (term153 _107642 A t s d).
Proof. exact (MK_COMB (@lem4522799 _107642 A) (@lem4522798 _107642 A t s d)). Qed.
Lemma lem4522801 {_107642 A : Type'} (t : _107642 -> Prop) (s : A -> Prop) (d : _107642) (n : nat) (m : nat) : (term154 _107642 A t s d n m) = (term154 _107642 A t s d n m).
Proof. exact (MK_COMB (@lem4522800 _107642 A t s d) (@lem4522742 n m)). Qed.
Lemma lem4522816 {_107642 A : Type'} (s : A -> Prop) (m : nat) (t : _107642 -> Prop) (n : nat) : (term155 _107642 A s m t n) = (term155 _107642 A s m t n).
Proof. exact (eq_refl (term155 _107642 A s m t n)). Qed.
Lemma lem4522817 {_107642 A : Type'} (t : _107642 -> Prop) (s : A -> Prop) (d : _107642) (n : nat) (m : nat) : (term156 _107642 A t s d n m) = (term156 _107642 A t s d n m).
Proof. exact (MK_COMB (@lem4522816 _107642 A s m t n) (@lem4522801 _107642 A t s d n m)). Qed.
Lemma lem4522818 {_107642 A : Type'} (t : _107642 -> Prop) (d : _107642) (n : nat) (m : nat) : (term157 _107642 A t d n m) = (term157 _107642 A t d n m).
Proof. exact (fun_ext (fun s : A -> Prop => @lem4522817 _107642 A t s d n m)). Qed.
Lemma lem4522819 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem4522820 {_107642 A : Type'} (t : _107642 -> Prop) (d : _107642) (n : nat) (m : nat) : (term158 _107642 A t d n m) = (term158 _107642 A t d n m).
Proof. exact (MK_COMB (@lem4522819 A) (@lem4522818 _107642 A t d n m)). Qed.
Lemma lem4522821 {_107642 A : Type'} (t : _107642 -> Prop) (d : _107642) (n : nat) : (term159 _107642 A t d n) = (term159 _107642 A t d n).
Proof. exact (fun_ext (fun m : nat => @lem4522820 _107642 A t d n m)). Qed.
Lemma lem4522822 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4522823 {_107642 A : Type'} (t : _107642 -> Prop) (d : _107642) (n : nat) : (term160 _107642 A t d n) = (term160 _107642 A t d n).
Proof. exact (MK_COMB (@lem4522822) (@lem4522821 _107642 A t d n)). Qed.
Lemma lem4522824 {_107642 A : Type'} (d : _107642) (n : nat) : (term161 _107642 A d n) = (term161 _107642 A d n).
Proof. exact (fun_ext (fun t : _107642 -> Prop => @lem4522823 _107642 A t d n)). Qed.
Lemma lem4522825 {_107642 : Type'} : (@all (_107642 -> Prop)) = (@all (_107642 -> Prop)).
Proof. exact (eq_refl (@all (_107642 -> Prop))). Qed.
Lemma lem4522826 {_107642 A : Type'} (d : _107642) (n : nat) : (term162 _107642 A d n) = (term162 _107642 A d n).
Proof. exact (MK_COMB (@lem4522825 _107642) (@lem4522824 _107642 A d n)). Qed.
Lemma lem4522827 {_107642 A : Type'} (d : _107642) : (term163 _107642 A d) = (term163 _107642 A d).
Proof. exact (fun_ext (fun n : nat => @lem4522826 _107642 A d n)). Qed.
Lemma lem4522828 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4522829 {_107642 A : Type'} (d : _107642) : (term164 _107642 A d) = (term164 _107642 A d).
Proof. exact (MK_COMB (@lem4522828) (@lem4522827 _107642 A d)). Qed.
Lemma lem4522830 {_107642 A : Type'} : (term165 _107642 A) = (term165 _107642 A).
Proof. exact (fun_ext (fun d : _107642 => @lem4522829 _107642 A d)). Qed.
Lemma lem4522831 {_107642 : Type'} : (@all _107642) = (@all _107642).
Proof. exact (eq_refl (@all _107642)). Qed.
Lemma lem4522832 {_107642 A : Type'} : (term11 _107642 A) = (term11 _107642 A).
Proof. exact (MK_COMB (@lem4522831 _107642) (@lem4522830 _107642 A)). Qed.
Lemma lem4522833 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4522834 {_107642 A : Type'} : (term32 _107642 A) = (term32 _107642 A).
Proof. exact (MK_COMB (@lem4522833) (@lem4522832 _107642 A)). Qed.
Lemma lem4522835 {_107639 _107642 A B : Type'} : (term34 _107639 _107642 A B) = (term34 _107639 _107642 A B).
Proof. exact (MK_COMB (@lem4522834 _107642 A) (@lem4522737 _107639 _107642 A B)). Qed.
Lemma lem4522840 (n : nat) (m : nat) : (Nat.pow n m) = (Nat.pow n m).
Proof. exact (eq_refl (Nat.pow n m)). Qed.
Lemma lem4522844 {_107639 A : Type'} (f : A -> _107639) : f = f.
Proof. exact (eq_refl f). Qed.
Lemma lem4522861 {_107639 A : Type'} (s : A -> Prop) (f : A -> _107639) (x : A) (d : _107639) : (term140 _107639 A s f x d) = (term140 _107639 A s f x d).
Proof. exact (eq_refl (term140 _107639 A s f x d)). Qed.
Lemma lem4522862 {_107639 A : Type'} (s : A -> Prop) (f : A -> _107639) (d : _107639) : (term141 _107639 A s f d) = (term141 _107639 A s f d).
Proof. exact (fun_ext (fun x : A => @lem4522861 _107639 A s f x d)). Qed.
Lemma lem4522863 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem4522864 {_107639 A : Type'} (s : A -> Prop) (f : A -> _107639) (d : _107639) : (term142 _107639 A s f d) = (term142 _107639 A s f d).
Proof. exact (MK_COMB (@lem4522863 A) (@lem4522862 _107639 A s f d)). Qed.
Lemma lem4522879 {_107639 A : Type'} (s : A -> Prop) (f : A -> _107639) (x : A) (t : _107639 -> Prop) : (term143 _107639 A s f x t) = (term143 _107639 A s f x t).
Proof. exact (eq_refl (term143 _107639 A s f x t)). Qed.
Lemma lem4522880 {_107639 A : Type'} (s : A -> Prop) (f : A -> _107639) (t : _107639 -> Prop) : (term144 _107639 A s f t) = (term144 _107639 A s f t).
Proof. exact (fun_ext (fun x : A => @lem4522879 _107639 A s f x t)). Qed.
Lemma lem4522881 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem4522882 {_107639 A : Type'} (s : A -> Prop) (f : A -> _107639) (t : _107639 -> Prop) : (term145 _107639 A s f t) = (term145 _107639 A s f t).
Proof. exact (MK_COMB (@lem4522881 A) (@lem4522880 _107639 A s f t)). Qed.
Lemma lem4522883 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4522884 {_107639 A : Type'} (s : A -> Prop) (f : A -> _107639) (t : _107639 -> Prop) : (term146 _107639 A s f t) = (term146 _107639 A s f t).
Proof. exact (MK_COMB (@lem4522883) (@lem4522882 _107639 A s f t)). Qed.
Lemma lem4522885 {_107639 A : Type'} (t : _107639 -> Prop) (s : A -> Prop) (f : A -> _107639) (d : _107639) : (term147 _107639 A t s f d) = (term147 _107639 A t s f d).
Proof. exact (MK_COMB (@lem4522884 _107639 A s f t) (@lem4522864 _107639 A s f d)). Qed.
Lemma lem4522888 {_107639 A : Type'} (GEN_PVAR_148 : A -> _107639) : (@SETSPEC (A -> _107639) GEN_PVAR_148) = (@SETSPEC (A -> _107639) GEN_PVAR_148).
Proof. exact (eq_refl (@SETSPEC (A -> _107639) GEN_PVAR_148)). Qed.
Lemma lem4522889 {_107639 A : Type'} (GEN_PVAR_148 : A -> _107639) (t : _107639 -> Prop) (s : A -> Prop) (f : A -> _107639) (d : _107639) : (term148 _107639 A GEN_PVAR_148 t s f d) = (term148 _107639 A GEN_PVAR_148 t s f d).
Proof. exact (MK_COMB (@lem4522888 _107639 A GEN_PVAR_148) (@lem4522885 _107639 A t s f d)). Qed.
Lemma lem4522890 {_107639 A : Type'} (GEN_PVAR_148 : A -> _107639) (t : _107639 -> Prop) (s : A -> Prop) (d : _107639) (f : A -> _107639) : (term149 _107639 A GEN_PVAR_148 t s d f) = (term149 _107639 A GEN_PVAR_148 t s d f).
Proof. exact (MK_COMB (@lem4522889 _107639 A GEN_PVAR_148 t s f d) (@lem4522844 _107639 A f)). Qed.
Lemma lem4522891 {_107639 A : Type'} (GEN_PVAR_148 : A -> _107639) (t : _107639 -> Prop) (s : A -> Prop) (d : _107639) : (term150 _107639 A GEN_PVAR_148 t s d) = (term150 _107639 A GEN_PVAR_148 t s d).
Proof. exact (fun_ext (fun f : A -> _107639 => @lem4522890 _107639 A GEN_PVAR_148 t s d f)). Qed.
Lemma lem4522892 {_107639 A : Type'} : (@ex (A -> _107639)) = (@ex (A -> _107639)).
Proof. exact (eq_refl (@ex (A -> _107639))). Qed.
Lemma lem4522893 {_107639 A : Type'} (GEN_PVAR_148 : A -> _107639) (t : _107639 -> Prop) (s : A -> Prop) (d : _107639) : (term151 _107639 A GEN_PVAR_148 t s d) = (term151 _107639 A GEN_PVAR_148 t s d).
Proof. exact (MK_COMB (@lem4522892 _107639 A) (@lem4522891 _107639 A GEN_PVAR_148 t s d)). Qed.
Lemma lem4522894 {_107639 A : Type'} (t : _107639 -> Prop) (s : A -> Prop) (d : _107639) : (term84 _107639 A t s d) = (term84 _107639 A t s d).
Proof. exact (fun_ext (fun GEN_PVAR_148 : A -> _107639 => @lem4522893 _107639 A GEN_PVAR_148 t s d)). Qed.
Lemma lem4522895 {_107639 A : Type'} : (@GSPEC (A -> _107639)) = (@GSPEC (A -> _107639)).
Proof. exact (eq_refl (@GSPEC (A -> _107639))). Qed.
Lemma lem4522896 {_107639 A : Type'} (t : _107639 -> Prop) (s : A -> Prop) (d : _107639) : (term152 _107639 A t s d) = (term152 _107639 A t s d).
Proof. exact (MK_COMB (@lem4522895 _107639 A) (@lem4522894 _107639 A t s d)). Qed.
Lemma lem4522897 {_107639 A : Type'} : (@HAS_SIZE (A -> _107639)) = (@HAS_SIZE (A -> _107639)).
Proof. exact (eq_refl (@HAS_SIZE (A -> _107639))). Qed.
Lemma lem4522898 {_107639 A : Type'} (t : _107639 -> Prop) (s : A -> Prop) (d : _107639) : (term153 _107639 A t s d) = (term153 _107639 A t s d).
Proof. exact (MK_COMB (@lem4522897 _107639 A) (@lem4522896 _107639 A t s d)). Qed.
Lemma lem4522899 {_107639 A : Type'} (t : _107639 -> Prop) (s : A -> Prop) (d : _107639) (n : nat) (m : nat) : (term154 _107639 A t s d n m) = (term154 _107639 A t s d n m).
Proof. exact (MK_COMB (@lem4522898 _107639 A t s d) (@lem4522840 n m)). Qed.
Lemma lem4522914 {_107639 A : Type'} (s : A -> Prop) (m : nat) (t : _107639 -> Prop) (n : nat) : (term155 _107639 A s m t n) = (term155 _107639 A s m t n).
Proof. exact (eq_refl (term155 _107639 A s m t n)). Qed.
Lemma lem4522915 {_107639 A : Type'} (t : _107639 -> Prop) (s : A -> Prop) (d : _107639) (n : nat) (m : nat) : (term156 _107639 A t s d n m) = (term156 _107639 A t s d n m).
Proof. exact (MK_COMB (@lem4522914 _107639 A s m t n) (@lem4522899 _107639 A t s d n m)). Qed.
Lemma lem4522916 {_107639 A : Type'} (t : _107639 -> Prop) (d : _107639) (n : nat) (m : nat) : (term157 _107639 A t d n m) = (term157 _107639 A t d n m).
Proof. exact (fun_ext (fun s : A -> Prop => @lem4522915 _107639 A t s d n m)). Qed.
Lemma lem4522917 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem4522918 {_107639 A : Type'} (t : _107639 -> Prop) (d : _107639) (n : nat) (m : nat) : (term158 _107639 A t d n m) = (term158 _107639 A t d n m).
Proof. exact (MK_COMB (@lem4522917 A) (@lem4522916 _107639 A t d n m)). Qed.
Lemma lem4522919 {_107639 A : Type'} (t : _107639 -> Prop) (d : _107639) (n : nat) : (term159 _107639 A t d n) = (term159 _107639 A t d n).
Proof. exact (fun_ext (fun m : nat => @lem4522918 _107639 A t d n m)). Qed.
Lemma lem4522920 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4522921 {_107639 A : Type'} (t : _107639 -> Prop) (d : _107639) (n : nat) : (term160 _107639 A t d n) = (term160 _107639 A t d n).
Proof. exact (MK_COMB (@lem4522920) (@lem4522919 _107639 A t d n)). Qed.
Lemma lem4522922 {_107639 A : Type'} (d : _107639) (n : nat) : (term161 _107639 A d n) = (term161 _107639 A d n).
Proof. exact (fun_ext (fun t : _107639 -> Prop => @lem4522921 _107639 A t d n)). Qed.
Lemma lem4522923 {_107639 : Type'} : (@all (_107639 -> Prop)) = (@all (_107639 -> Prop)).
Proof. exact (eq_refl (@all (_107639 -> Prop))). Qed.
Lemma lem4522924 {_107639 A : Type'} (d : _107639) (n : nat) : (term162 _107639 A d n) = (term162 _107639 A d n).
Proof. exact (MK_COMB (@lem4522923 _107639) (@lem4522922 _107639 A d n)). Qed.
Lemma lem4522925 {_107639 A : Type'} (d : _107639) : (term163 _107639 A d) = (term163 _107639 A d).
Proof. exact (fun_ext (fun n : nat => @lem4522924 _107639 A d n)). Qed.
Lemma lem4522926 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4522927 {_107639 A : Type'} (d : _107639) : (term164 _107639 A d) = (term164 _107639 A d).
Proof. exact (MK_COMB (@lem4522926) (@lem4522925 _107639 A d)). Qed.
Lemma lem4522928 {_107639 A : Type'} : (term165 _107639 A) = (term165 _107639 A).
Proof. exact (fun_ext (fun d : _107639 => @lem4522927 _107639 A d)). Qed.
Lemma lem4522929 {_107639 : Type'} : (@all _107639) = (@all _107639).
Proof. exact (eq_refl (@all _107639)). Qed.
Lemma lem4522930 {_107639 A : Type'} : (term11 _107639 A) = (term11 _107639 A).
Proof. exact (MK_COMB (@lem4522929 _107639) (@lem4522928 _107639 A)). Qed.
Lemma lem4522931 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4522932 {_107639 A : Type'} : (term32 _107639 A) = (term32 _107639 A).
Proof. exact (MK_COMB (@lem4522931) (@lem4522930 _107639 A)). Qed.
Lemma lem4522933 {_107639 _107642 A B : Type'} : (term36 _107639 _107642 A B) = (term36 _107639 _107642 A B).
Proof. exact (MK_COMB (@lem4522932 _107639 A) (@lem4522835 _107639 _107642 A B)). Qed.
Lemma lem4522938 (n : nat) (m : nat) : (Nat.pow n m) = (Nat.pow n m).
Proof. exact (eq_refl (Nat.pow n m)). Qed.
Lemma lem4522940 {_107639 _107642 : Type'} (t : _107639 -> Prop) (s : _107642 -> Prop) (d : _107639) (_53776 : type656 _107639 _107642) (h1 : _53776 = (term76 _107639 _107642)) : (term84 _107639 _107642 t s d) = (_53776 t s d).
Proof. exact (SYM (@lem4522345 _107639 _107642 t s d _53776 h1)). Qed.
Lemma lem4522941 {_107639 _107642 : Type'} (t : _107639 -> Prop) (s : _107642 -> Prop) (d : _107639) (_53776 : type656 _107639 _107642) (h1 : _53776 = (term76 _107639 _107642)) : (term84 _107639 _107642 t s d) = (_53776 t s d).
Proof. exact (@lem4522940 _107639 _107642 t s d _53776 h1). Qed.
Lemma lem4522942 {_107639 _107642 : Type'} : (@GSPEC (_107642 -> _107639)) = (@GSPEC (_107642 -> _107639)).
Proof. exact (eq_refl (@GSPEC (_107642 -> _107639))). Qed.
Lemma lem4522943 {_107639 _107642 : Type'} (t : _107639 -> Prop) (s : _107642 -> Prop) (d : _107639) (_53776 : type656 _107639 _107642) (h1 : _53776 = (term76 _107639 _107642)) : (term152 _107639 _107642 t s d) = (term166 _107639 _107642 _53776 t s d).
Proof. exact (MK_COMB (@lem4522942 _107639 _107642) (@lem4522941 _107639 _107642 t s d _53776 h1)). Qed.
Lemma lem4522944 {_107639 _107642 : Type'} : (@HAS_SIZE (_107642 -> _107639)) = (@HAS_SIZE (_107642 -> _107639)).
Proof. exact (eq_refl (@HAS_SIZE (_107642 -> _107639))). Qed.
Lemma lem4522945 {_107639 _107642 : Type'} (t : _107639 -> Prop) (s : _107642 -> Prop) (d : _107639) (_53776 : type656 _107639 _107642) (h1 : _53776 = (term76 _107639 _107642)) : (term153 _107639 _107642 t s d) = (term167 _107639 _107642 _53776 t s d).
Proof. exact (MK_COMB (@lem4522944 _107639 _107642) (@lem4522943 _107639 _107642 t s d _53776 h1)). Qed.
Lemma lem4522946 {_107639 _107642 : Type'} (t : _107639 -> Prop) (s : _107642 -> Prop) (d : _107639) (n : nat) (m : nat) (_53776 : type656 _107639 _107642) (h1 : _53776 = (term76 _107639 _107642)) : (term154 _107639 _107642 t s d n m) = (term168 _107639 _107642 _53776 t s d n m).
Proof. exact (MK_COMB (@lem4522945 _107639 _107642 t s d _53776 h1) (@lem4522938 n m)). Qed.
Lemma lem4522961 {_107639 _107642 : Type'} (s : _107642 -> Prop) (m : nat) (t : _107639 -> Prop) (n : nat) : (term155 _107639 _107642 s m t n) = (term155 _107639 _107642 s m t n).
Proof. exact (eq_refl (term155 _107639 _107642 s m t n)). Qed.
Lemma lem4522962 {_107639 _107642 : Type'} (t : _107639 -> Prop) (s : _107642 -> Prop) (d : _107639) (n : nat) (m : nat) (_53776 : type656 _107639 _107642) (h1 : _53776 = (term76 _107639 _107642)) : (term156 _107639 _107642 t s d n m) = (term169 _107639 _107642 _53776 t s d n m).
Proof. exact (MK_COMB (@lem4522961 _107639 _107642 s m t n) (@lem4522946 _107639 _107642 t s d n m _53776 h1)). Qed.
Lemma lem4522963 {_107639 _107642 : Type'} (t : _107639 -> Prop) (d : _107639) (n : nat) (m : nat) (_53776 : type656 _107639 _107642) (h1 : _53776 = (term76 _107639 _107642)) : (term157 _107639 _107642 t d n m) = (term170 _107639 _107642 _53776 t d n m).
Proof. exact (fun_ext (fun s : _107642 -> Prop => @lem4522962 _107639 _107642 t s d n m _53776 h1)). Qed.
Lemma lem4522964 {_107642 : Type'} : (@all (_107642 -> Prop)) = (@all (_107642 -> Prop)).
Proof. exact (eq_refl (@all (_107642 -> Prop))). Qed.
Lemma lem4522965 {_107639 _107642 : Type'} (t : _107639 -> Prop) (d : _107639) (n : nat) (m : nat) (_53776 : type656 _107639 _107642) (h1 : _53776 = (term76 _107639 _107642)) : (term158 _107639 _107642 t d n m) = (term171 _107639 _107642 _53776 t d n m).
Proof. exact (MK_COMB (@lem4522964 _107642) (@lem4522963 _107639 _107642 t d n m _53776 h1)). Qed.
Lemma lem4522966 {_107639 _107642 : Type'} (t : _107639 -> Prop) (d : _107639) (n : nat) (_53776 : type656 _107639 _107642) (h1 : _53776 = (term76 _107639 _107642)) : (term159 _107639 _107642 t d n) = (term172 _107639 _107642 _53776 t d n).
Proof. exact (fun_ext (fun m : nat => @lem4522965 _107639 _107642 t d n m _53776 h1)). Qed.
Lemma lem4522967 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4522968 {_107639 _107642 : Type'} (t : _107639 -> Prop) (d : _107639) (n : nat) (_53776 : type656 _107639 _107642) (h1 : _53776 = (term76 _107639 _107642)) : (term160 _107639 _107642 t d n) = (term173 _107639 _107642 _53776 t d n).
Proof. exact (MK_COMB (@lem4522967) (@lem4522966 _107639 _107642 t d n _53776 h1)). Qed.
Lemma lem4522969 {_107639 _107642 : Type'} (d : _107639) (n : nat) (_53776 : type656 _107639 _107642) (h1 : _53776 = (term76 _107639 _107642)) : (term161 _107639 _107642 d n) = (term174 _107639 _107642 _53776 d n).
Proof. exact (fun_ext (fun t : _107639 -> Prop => @lem4522968 _107639 _107642 t d n _53776 h1)). Qed.
Lemma lem4522970 {_107639 : Type'} : (@all (_107639 -> Prop)) = (@all (_107639 -> Prop)).
Proof. exact (eq_refl (@all (_107639 -> Prop))). Qed.
Lemma lem4522971 {_107639 _107642 : Type'} (d : _107639) (n : nat) (_53776 : type656 _107639 _107642) (h1 : _53776 = (term76 _107639 _107642)) : (term162 _107639 _107642 d n) = (term175 _107639 _107642 _53776 d n).
Proof. exact (MK_COMB (@lem4522970 _107639) (@lem4522969 _107639 _107642 d n _53776 h1)). Qed.
Lemma lem4522972 {_107639 _107642 : Type'} (d : _107639) (_53776 : type656 _107639 _107642) (h1 : _53776 = (term76 _107639 _107642)) : (term163 _107639 _107642 d) = (term176 _107639 _107642 _53776 d).
Proof. exact (fun_ext (fun n : nat => @lem4522971 _107639 _107642 d n _53776 h1)). Qed.
Lemma lem4522973 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4522974 {_107639 _107642 : Type'} (d : _107639) (_53776 : type656 _107639 _107642) (h1 : _53776 = (term76 _107639 _107642)) : (term164 _107639 _107642 d) = (term177 _107639 _107642 _53776 d).
Proof. exact (MK_COMB (@lem4522973) (@lem4522972 _107639 _107642 d _53776 h1)). Qed.
Lemma lem4522975 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (h1 : _53776 = (term76 _107639 _107642)) : (term165 _107639 _107642) = (term178 _107639 _107642 _53776).
Proof. exact (fun_ext (fun d : _107639 => @lem4522974 _107639 _107642 d _53776 h1)). Qed.
Lemma lem4522976 {_107639 : Type'} : (@all _107639) = (@all _107639).
Proof. exact (eq_refl (@all _107639)). Qed.
Lemma lem4522977 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (h1 : _53776 = (term76 _107639 _107642)) : (term11 _107639 _107642) = (term179 _107639 _107642 _53776).
Proof. exact (MK_COMB (@lem4522976 _107639) (@lem4522975 _107639 _107642 _53776 h1)). Qed.
Lemma lem4522978 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4522979 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (h1 : _53776 = (term76 _107639 _107642)) : (term32 _107639 _107642) = (term180 _107639 _107642 _53776).
Proof. exact (MK_COMB (@lem4522978) (@lem4522977 _107639 _107642 _53776 h1)). Qed.
Lemma lem4522980 {_107639 _107642 A B : Type'} (_53776 : type656 _107639 _107642) (h1 : _53776 = (term76 _107639 _107642)) : (term38 _107639 _107642 A B) = (term181 _107639 _107642 A B _53776).
Proof. exact (MK_COMB (@lem4522979 _107639 _107642 _53776 h1) (@lem4522933 _107639 _107642 A B)). Qed.
Lemma lem4523001 (s : nat -> Prop) (n : nat) : ((@HAS_SIZE nat s n) = (term182 s n)) = ((@HAS_SIZE nat s n) = (term182 s n)).
Proof. exact (eq_refl ((@HAS_SIZE nat s n) = (term182 s n))). Qed.
Lemma lem4523002 (s : nat -> Prop) : (term183 s) = (term183 s).
Proof. exact (fun_ext (fun n : nat => @lem4523001 s n)). Qed.
Lemma lem4523003 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4523004 (s : nat -> Prop) : (term184 s) = (term184 s).
Proof. exact (MK_COMB (@lem4523003) (@lem4523002 s)). Qed.
Lemma lem4523005 : term185 = term185.
Proof. exact (fun_ext (fun s : nat -> Prop => @lem4523004 s)). Qed.
Lemma lem4523006 : (@all (nat -> Prop)) = (@all (nat -> Prop)).
Proof. exact (eq_refl (@all (nat -> Prop))). Qed.
Lemma lem4523007 : term15 = term15.
Proof. exact (MK_COMB (@lem4523006) (@lem4523005)). Qed.
Lemma lem4523008 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4523009 : term39 = term39.
Proof. exact (MK_COMB (@lem4523008) (@lem4523007)). Qed.
Lemma lem4523010 {_107639 _107642 A B : Type'} (_53776 : type656 _107639 _107642) (h1 : _53776 = (term76 _107639 _107642)) : (term41 _107639 _107642 A B) = (term186 _107639 _107642 A B _53776).
Proof. exact (MK_COMB (@lem4523009) (@lem4522980 _107639 _107642 A B _53776 h1)). Qed.
Lemma lem4523031 {A : Type'} (s : type704 A) (n : nat) : ((@HAS_SIZE (A -> nat) s n) = (term187 A s n)) = ((@HAS_SIZE (A -> nat) s n) = (term187 A s n)).
Proof. exact (eq_refl ((@HAS_SIZE (A -> nat) s n) = (term187 A s n))). Qed.
Lemma lem4523032 {A : Type'} (s : type704 A) : (term188 A s) = (term188 A s).
Proof. exact (fun_ext (fun n : nat => @lem4523031 A s n)). Qed.
Lemma lem4523033 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4523034 {A : Type'} (s : type704 A) : (term189 A s) = (term189 A s).
Proof. exact (MK_COMB (@lem4523033) (@lem4523032 A s)). Qed.
Lemma lem4523035 {A : Type'} : (term190 A) = (term190 A).
Proof. exact (fun_ext (fun s : type704 A => @lem4523034 A s)). Qed.
Lemma lem4523036 {A : Type'} : (@all ((A -> nat) -> Prop)) = (@all ((A -> nat) -> Prop)).
Proof. exact (eq_refl (@all ((A -> nat) -> Prop))). Qed.
Lemma lem4523037 {A : Type'} : (term16 A) = (term16 A).
Proof. exact (MK_COMB (@lem4523036 A) (@lem4523035 A)). Qed.
Lemma lem4523038 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4523039 {A : Type'} : (term42 A) = (term42 A).
Proof. exact (MK_COMB (@lem4523038) (@lem4523037 A)). Qed.
Lemma lem4523040 {_107639 _107642 A B : Type'} (_53776 : type656 _107639 _107642) (h1 : _53776 = (term76 _107639 _107642)) : (term44 _107639 _107642 A B) = (term191 _107639 _107642 A B _53776).
Proof. exact (MK_COMB (@lem4523039 A) (@lem4523010 _107639 _107642 A B _53776 h1)). Qed.
Lemma lem4523061 {A B : Type'} (s : type572 A B) (n : nat) : ((@HAS_SIZE (A -> B) s n) = (term192 A B s n)) = ((@HAS_SIZE (A -> B) s n) = (term192 A B s n)).
Proof. exact (eq_refl ((@HAS_SIZE (A -> B) s n) = (term192 A B s n))). Qed.
Lemma lem4523062 {A B : Type'} (s : type572 A B) : (term193 A B s) = (term193 A B s).
Proof. exact (fun_ext (fun n : nat => @lem4523061 A B s n)). Qed.
Lemma lem4523063 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4523064 {A B : Type'} (s : type572 A B) : (term194 A B s) = (term194 A B s).
Proof. exact (MK_COMB (@lem4523063) (@lem4523062 A B s)). Qed.
Lemma lem4523065 {A B : Type'} : (term195 A B) = (term195 A B).
Proof. exact (fun_ext (fun s : type572 A B => @lem4523064 A B s)). Qed.
Lemma lem4523066 {A B : Type'} : (@all ((A -> B) -> Prop)) = (@all ((A -> B) -> Prop)).
Proof. exact (eq_refl (@all ((A -> B) -> Prop))). Qed.
Lemma lem4523067 {A B : Type'} : (term17 A B) = (term17 A B).
Proof. exact (MK_COMB (@lem4523066 A B) (@lem4523065 A B)). Qed.
Lemma lem4523068 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4523069 {A B : Type'} : (term45 A B) = (term45 A B).
Proof. exact (MK_COMB (@lem4523068) (@lem4523067 A B)). Qed.
Lemma lem4523070 {_107639 _107642 A B : Type'} (_53776 : type656 _107639 _107642) (h1 : _53776 = (term76 _107639 _107642)) : (term47 _107639 _107642 A B) = (term196 _107639 _107642 A B _53776).
Proof. exact (MK_COMB (@lem4523069 A B) (@lem4523040 _107639 _107642 A B _53776 h1)). Qed.
Lemma lem4523091 {_107642 A : Type'} (s : type805 _107642 A) (n : nat) : ((@HAS_SIZE (A -> _107642) s n) = (term197 _107642 A s n)) = ((@HAS_SIZE (A -> _107642) s n) = (term197 _107642 A s n)).
Proof. exact (eq_refl ((@HAS_SIZE (A -> _107642) s n) = (term197 _107642 A s n))). Qed.
Lemma lem4523092 {_107642 A : Type'} (s : type805 _107642 A) : (term198 _107642 A s) = (term198 _107642 A s).
Proof. exact (fun_ext (fun n : nat => @lem4523091 _107642 A s n)). Qed.
Lemma lem4523093 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4523094 {_107642 A : Type'} (s : type805 _107642 A) : (term199 _107642 A s) = (term199 _107642 A s).
Proof. exact (MK_COMB (@lem4523093) (@lem4523092 _107642 A s)). Qed.
Lemma lem4523095 {_107642 A : Type'} : (term200 _107642 A) = (term200 _107642 A).
Proof. exact (fun_ext (fun s : type805 _107642 A => @lem4523094 _107642 A s)). Qed.
Lemma lem4523096 {_107642 A : Type'} : (@all ((A -> _107642) -> Prop)) = (@all ((A -> _107642) -> Prop)).
Proof. exact (eq_refl (@all ((A -> _107642) -> Prop))). Qed.
Lemma lem4523097 {_107642 A : Type'} : (term18 _107642 A) = (term18 _107642 A).
Proof. exact (MK_COMB (@lem4523096 _107642 A) (@lem4523095 _107642 A)). Qed.
Lemma lem4523098 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4523099 {_107642 A : Type'} : (term48 _107642 A) = (term48 _107642 A).
Proof. exact (MK_COMB (@lem4523098) (@lem4523097 _107642 A)). Qed.
Lemma lem4523100 {_107639 _107642 A B : Type'} (_53776 : type656 _107639 _107642) (h1 : _53776 = (term76 _107639 _107642)) : (term50 _107639 _107642 A B) = (term201 _107639 _107642 A B _53776).
Proof. exact (MK_COMB (@lem4523099 _107642 A) (@lem4523070 _107639 _107642 A B _53776 h1)). Qed.
Lemma lem4523121 {_107639 A : Type'} (s : type805 _107639 A) (n : nat) : ((@HAS_SIZE (A -> _107639) s n) = (term197 _107639 A s n)) = ((@HAS_SIZE (A -> _107639) s n) = (term197 _107639 A s n)).
Proof. exact (eq_refl ((@HAS_SIZE (A -> _107639) s n) = (term197 _107639 A s n))). Qed.
Lemma lem4523122 {_107639 A : Type'} (s : type805 _107639 A) : (term198 _107639 A s) = (term198 _107639 A s).
Proof. exact (fun_ext (fun n : nat => @lem4523121 _107639 A s n)). Qed.
Lemma lem4523123 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4523124 {_107639 A : Type'} (s : type805 _107639 A) : (term199 _107639 A s) = (term199 _107639 A s).
Proof. exact (MK_COMB (@lem4523123) (@lem4523122 _107639 A s)). Qed.
Lemma lem4523125 {_107639 A : Type'} : (term200 _107639 A) = (term200 _107639 A).
Proof. exact (fun_ext (fun s : type805 _107639 A => @lem4523124 _107639 A s)). Qed.
Lemma lem4523126 {_107639 A : Type'} : (@all ((A -> _107639) -> Prop)) = (@all ((A -> _107639) -> Prop)).
Proof. exact (eq_refl (@all ((A -> _107639) -> Prop))). Qed.
Lemma lem4523127 {_107639 A : Type'} : (term18 _107639 A) = (term18 _107639 A).
Proof. exact (MK_COMB (@lem4523126 _107639 A) (@lem4523125 _107639 A)). Qed.
Lemma lem4523128 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4523129 {_107639 A : Type'} : (term48 _107639 A) = (term48 _107639 A).
Proof. exact (MK_COMB (@lem4523128) (@lem4523127 _107639 A)). Qed.
Lemma lem4523130 {_107639 _107642 A B : Type'} (_53776 : type656 _107639 _107642) (h1 : _53776 = (term76 _107639 _107642)) : (term52 _107639 _107642 A B) = (term202 _107639 _107642 A B _53776).
Proof. exact (MK_COMB (@lem4523129 _107639 A) (@lem4523100 _107639 _107642 A B _53776 h1)). Qed.
Lemma lem4523151 {_107642 B : Type'} (s : type572 _107642 B) (n : nat) : ((@HAS_SIZE (_107642 -> B) s n) = (term192 _107642 B s n)) = ((@HAS_SIZE (_107642 -> B) s n) = (term192 _107642 B s n)).
Proof. exact (eq_refl ((@HAS_SIZE (_107642 -> B) s n) = (term192 _107642 B s n))). Qed.
Lemma lem4523152 {_107642 B : Type'} (s : type572 _107642 B) : (term193 _107642 B s) = (term193 _107642 B s).
Proof. exact (fun_ext (fun n : nat => @lem4523151 _107642 B s n)). Qed.
Lemma lem4523153 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4523154 {_107642 B : Type'} (s : type572 _107642 B) : (term194 _107642 B s) = (term194 _107642 B s).
Proof. exact (MK_COMB (@lem4523153) (@lem4523152 _107642 B s)). Qed.
Lemma lem4523155 {_107642 B : Type'} : (term195 _107642 B) = (term195 _107642 B).
Proof. exact (fun_ext (fun s : type572 _107642 B => @lem4523154 _107642 B s)). Qed.
Lemma lem4523156 {_107642 B : Type'} : (@all ((_107642 -> B) -> Prop)) = (@all ((_107642 -> B) -> Prop)).
Proof. exact (eq_refl (@all ((_107642 -> B) -> Prop))). Qed.
Lemma lem4523157 {_107642 B : Type'} : (term17 _107642 B) = (term17 _107642 B).
Proof. exact (MK_COMB (@lem4523156 _107642 B) (@lem4523155 _107642 B)). Qed.
Lemma lem4523158 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4523159 {_107642 B : Type'} : (term45 _107642 B) = (term45 _107642 B).
Proof. exact (MK_COMB (@lem4523158) (@lem4523157 _107642 B)). Qed.
Lemma lem4523160 {_107639 _107642 A B : Type'} (_53776 : type656 _107639 _107642) (h1 : _53776 = (term76 _107639 _107642)) : (term54 _107639 _107642 A B) = (term203 _107639 _107642 A B _53776).
Proof. exact (MK_COMB (@lem4523159 _107642 B) (@lem4523130 _107639 _107642 A B _53776 h1)). Qed.
Lemma lem4523181 {_107639 _107642 : Type'} (s : type805 _107639 _107642) (n : nat) : ((@HAS_SIZE (_107642 -> _107639) s n) = (term197 _107639 _107642 s n)) = ((@HAS_SIZE (_107642 -> _107639) s n) = (term197 _107639 _107642 s n)).
Proof. exact (eq_refl ((@HAS_SIZE (_107642 -> _107639) s n) = (term197 _107639 _107642 s n))). Qed.
Lemma lem4523182 {_107639 _107642 : Type'} (s : type805 _107639 _107642) : (term198 _107639 _107642 s) = (term198 _107639 _107642 s).
Proof. exact (fun_ext (fun n : nat => @lem4523181 _107639 _107642 s n)). Qed.
Lemma lem4523183 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4523184 {_107639 _107642 : Type'} (s : type805 _107639 _107642) : (term199 _107639 _107642 s) = (term199 _107639 _107642 s).
Proof. exact (MK_COMB (@lem4523183) (@lem4523182 _107639 _107642 s)). Qed.
Lemma lem4523185 {_107639 _107642 : Type'} : (term200 _107639 _107642) = (term200 _107639 _107642).
Proof. exact (fun_ext (fun s : type805 _107639 _107642 => @lem4523184 _107639 _107642 s)). Qed.
Lemma lem4523186 {_107639 _107642 : Type'} : (@all ((_107642 -> _107639) -> Prop)) = (@all ((_107642 -> _107639) -> Prop)).
Proof. exact (eq_refl (@all ((_107642 -> _107639) -> Prop))). Qed.
Lemma lem4523187 {_107639 _107642 : Type'} : (term18 _107639 _107642) = (term18 _107639 _107642).
Proof. exact (MK_COMB (@lem4523186 _107639 _107642) (@lem4523185 _107639 _107642)). Qed.
Lemma lem4523188 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4523189 {_107639 _107642 : Type'} : (term48 _107639 _107642) = (term48 _107639 _107642).
Proof. exact (MK_COMB (@lem4523188) (@lem4523187 _107639 _107642)). Qed.
Lemma lem4523190 {_107639 _107642 A B : Type'} (_53776 : type656 _107639 _107642) (h1 : _53776 = (term76 _107639 _107642)) : (term56 _107639 _107642 A B) = (term204 _107639 _107642 A B _53776).
Proof. exact (MK_COMB (@lem4523189 _107639 _107642) (@lem4523160 _107639 _107642 A B _53776 h1)). Qed.
Lemma lem4523211 {_107639 B : Type'} (s : type572 _107639 B) (n : nat) : ((@HAS_SIZE (_107639 -> B) s n) = (term192 _107639 B s n)) = ((@HAS_SIZE (_107639 -> B) s n) = (term192 _107639 B s n)).
Proof. exact (eq_refl ((@HAS_SIZE (_107639 -> B) s n) = (term192 _107639 B s n))). Qed.
Lemma lem4523212 {_107639 B : Type'} (s : type572 _107639 B) : (term193 _107639 B s) = (term193 _107639 B s).
Proof. exact (fun_ext (fun n : nat => @lem4523211 _107639 B s n)). Qed.
Lemma lem4523213 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4523214 {_107639 B : Type'} (s : type572 _107639 B) : (term194 _107639 B s) = (term194 _107639 B s).
Proof. exact (MK_COMB (@lem4523213) (@lem4523212 _107639 B s)). Qed.
Lemma lem4523215 {_107639 B : Type'} : (term195 _107639 B) = (term195 _107639 B).
Proof. exact (fun_ext (fun s : type572 _107639 B => @lem4523214 _107639 B s)). Qed.
Lemma lem4523216 {_107639 B : Type'} : (@all ((_107639 -> B) -> Prop)) = (@all ((_107639 -> B) -> Prop)).
Proof. exact (eq_refl (@all ((_107639 -> B) -> Prop))). Qed.
Lemma lem4523217 {_107639 B : Type'} : (term17 _107639 B) = (term17 _107639 B).
Proof. exact (MK_COMB (@lem4523216 _107639 B) (@lem4523215 _107639 B)). Qed.
Lemma lem4523218 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4523219 {_107639 B : Type'} : (term45 _107639 B) = (term45 _107639 B).
Proof. exact (MK_COMB (@lem4523218) (@lem4523217 _107639 B)). Qed.
Lemma lem4523220 {_107639 _107642 A B : Type'} (_53776 : type656 _107639 _107642) (h1 : _53776 = (term76 _107639 _107642)) : (term58 _107639 _107642 A B) = (term205 _107639 _107642 A B _53776).
Proof. exact (MK_COMB (@lem4523219 _107639 B) (@lem4523190 _107639 _107642 A B _53776 h1)). Qed.
Lemma lem4523241 {B : Type'} (s : B -> Prop) (n : nat) : ((@HAS_SIZE B s n) = (term206 B s n)) = ((@HAS_SIZE B s n) = (term206 B s n)).
Proof. exact (eq_refl ((@HAS_SIZE B s n) = (term206 B s n))). Qed.
Lemma lem4523242 {B : Type'} (s : B -> Prop) : (term207 B s) = (term207 B s).
Proof. exact (fun_ext (fun n : nat => @lem4523241 B s n)). Qed.
Lemma lem4523243 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4523244 {B : Type'} (s : B -> Prop) : (term208 B s) = (term208 B s).
Proof. exact (MK_COMB (@lem4523243) (@lem4523242 B s)). Qed.
Lemma lem4523245 {B : Type'} : (term209 B) = (term209 B).
Proof. exact (fun_ext (fun s : B -> Prop => @lem4523244 B s)). Qed.
Lemma lem4523246 {B : Type'} : (@all (B -> Prop)) = (@all (B -> Prop)).
Proof. exact (eq_refl (@all (B -> Prop))). Qed.
Lemma lem4523247 {B : Type'} : (term14 B) = (term14 B).
Proof. exact (MK_COMB (@lem4523246 B) (@lem4523245 B)). Qed.
Lemma lem4523248 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4523249 {B : Type'} : (term59 B) = (term59 B).
Proof. exact (MK_COMB (@lem4523248) (@lem4523247 B)). Qed.
Lemma lem4523250 {_107639 _107642 A B : Type'} (_53776 : type656 _107639 _107642) (h1 : _53776 = (term76 _107639 _107642)) : (term61 _107639 _107642 A B) = (term210 _107639 _107642 A B _53776).
Proof. exact (MK_COMB (@lem4523249 B) (@lem4523220 _107639 _107642 A B _53776 h1)). Qed.
Lemma lem4523271 {A : Type'} (s : A -> Prop) (n : nat) : ((@HAS_SIZE A s n) = (term206 A s n)) = ((@HAS_SIZE A s n) = (term206 A s n)).
Proof. exact (eq_refl ((@HAS_SIZE A s n) = (term206 A s n))). Qed.
Lemma lem4523272 {A : Type'} (s : A -> Prop) : (term207 A s) = (term207 A s).
Proof. exact (fun_ext (fun n : nat => @lem4523271 A s n)). Qed.
Lemma lem4523273 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4523274 {A : Type'} (s : A -> Prop) : (term208 A s) = (term208 A s).
Proof. exact (MK_COMB (@lem4523273) (@lem4523272 A s)). Qed.
Lemma lem4523275 {A : Type'} : (term209 A) = (term209 A).
Proof. exact (fun_ext (fun s : A -> Prop => @lem4523274 A s)). Qed.
Lemma lem4523276 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem4523277 {A : Type'} : (term14 A) = (term14 A).
Proof. exact (MK_COMB (@lem4523276 A) (@lem4523275 A)). Qed.
Lemma lem4523278 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4523279 {A : Type'} : (term59 A) = (term59 A).
Proof. exact (MK_COMB (@lem4523278) (@lem4523277 A)). Qed.
Lemma lem4523280 {_107639 _107642 A B : Type'} (_53776 : type656 _107639 _107642) (h1 : _53776 = (term76 _107639 _107642)) : (term63 _107639 _107642 A B) = (term211 _107639 _107642 A B _53776).
Proof. exact (MK_COMB (@lem4523279 A) (@lem4523250 _107639 _107642 A B _53776 h1)). Qed.
Lemma lem4523301 {_107642 : Type'} (s : _107642 -> Prop) (n : nat) : ((@HAS_SIZE _107642 s n) = (term206 _107642 s n)) = ((@HAS_SIZE _107642 s n) = (term206 _107642 s n)).
Proof. exact (eq_refl ((@HAS_SIZE _107642 s n) = (term206 _107642 s n))). Qed.
Lemma lem4523302 {_107642 : Type'} (s : _107642 -> Prop) : (term207 _107642 s) = (term207 _107642 s).
Proof. exact (fun_ext (fun n : nat => @lem4523301 _107642 s n)). Qed.
Lemma lem4523303 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4523304 {_107642 : Type'} (s : _107642 -> Prop) : (term208 _107642 s) = (term208 _107642 s).
Proof. exact (MK_COMB (@lem4523303) (@lem4523302 _107642 s)). Qed.
Lemma lem4523305 {_107642 : Type'} : (term209 _107642) = (term209 _107642).
Proof. exact (fun_ext (fun s : _107642 -> Prop => @lem4523304 _107642 s)). Qed.
Lemma lem4523306 {_107642 : Type'} : (@all (_107642 -> Prop)) = (@all (_107642 -> Prop)).
Proof. exact (eq_refl (@all (_107642 -> Prop))). Qed.
Lemma lem4523307 {_107642 : Type'} : (term14 _107642) = (term14 _107642).
Proof. exact (MK_COMB (@lem4523306 _107642) (@lem4523305 _107642)). Qed.
Lemma lem4523308 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4523309 {_107642 : Type'} : (term59 _107642) = (term59 _107642).
Proof. exact (MK_COMB (@lem4523308) (@lem4523307 _107642)). Qed.
Lemma lem4523310 {_107639 _107642 A B : Type'} (_53776 : type656 _107639 _107642) (h1 : _53776 = (term76 _107639 _107642)) : (term65 _107639 _107642 A B) = (term212 _107639 _107642 A B _53776).
Proof. exact (MK_COMB (@lem4523309 _107642) (@lem4523280 _107639 _107642 A B _53776 h1)). Qed.
Lemma lem4523331 {_107639 : Type'} (s : _107639 -> Prop) (n : nat) : ((@HAS_SIZE _107639 s n) = (term206 _107639 s n)) = ((@HAS_SIZE _107639 s n) = (term206 _107639 s n)).
Proof. exact (eq_refl ((@HAS_SIZE _107639 s n) = (term206 _107639 s n))). Qed.
Lemma lem4523332 {_107639 : Type'} (s : _107639 -> Prop) : (term207 _107639 s) = (term207 _107639 s).
Proof. exact (fun_ext (fun n : nat => @lem4523331 _107639 s n)). Qed.
Lemma lem4523333 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4523334 {_107639 : Type'} (s : _107639 -> Prop) : (term208 _107639 s) = (term208 _107639 s).
Proof. exact (MK_COMB (@lem4523333) (@lem4523332 _107639 s)). Qed.
Lemma lem4523335 {_107639 : Type'} : (term209 _107639) = (term209 _107639).
Proof. exact (fun_ext (fun s : _107639 -> Prop => @lem4523334 _107639 s)). Qed.
Lemma lem4523336 {_107639 : Type'} : (@all (_107639 -> Prop)) = (@all (_107639 -> Prop)).
Proof. exact (eq_refl (@all (_107639 -> Prop))). Qed.
Lemma lem4523337 {_107639 : Type'} : (term14 _107639) = (term14 _107639).
Proof. exact (MK_COMB (@lem4523336 _107639) (@lem4523335 _107639)). Qed.
Lemma lem4523338 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4523339 {_107639 : Type'} : (term59 _107639) = (term59 _107639).
Proof. exact (MK_COMB (@lem4523338) (@lem4523337 _107639)). Qed.
Lemma lem4523340 {_107639 _107642 A B : Type'} (_53776 : type656 _107639 _107642) (h1 : _53776 = (term76 _107639 _107642)) : (term67 _107639 _107642 A B) = (term213 _107639 _107642 A B _53776).
Proof. exact (MK_COMB (@lem4523339 _107639) (@lem4523310 _107639 _107642 A B _53776 h1)). Qed.
Lemma lem4523361 {_100044 : Type'} (s : _100044 -> Prop) (n : nat) : ((@HAS_SIZE _100044 s n) = (term206 _100044 s n)) = ((@HAS_SIZE _100044 s n) = (term206 _100044 s n)).
Proof. exact (eq_refl ((@HAS_SIZE _100044 s n) = (term206 _100044 s n))). Qed.
Lemma lem4523362 {_100044 : Type'} (s : _100044 -> Prop) : (term207 _100044 s) = (term207 _100044 s).
Proof. exact (fun_ext (fun n : nat => @lem4523361 _100044 s n)). Qed.
Lemma lem4523363 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4523364 {_100044 : Type'} (s : _100044 -> Prop) : (term208 _100044 s) = (term208 _100044 s).
Proof. exact (MK_COMB (@lem4523363) (@lem4523362 _100044 s)). Qed.
Lemma lem4523365 {_100044 : Type'} : (term209 _100044) = (term209 _100044).
Proof. exact (fun_ext (fun s : _100044 -> Prop => @lem4523364 _100044 s)). Qed.
Lemma lem4523366 {_100044 : Type'} : (@all (_100044 -> Prop)) = (@all (_100044 -> Prop)).
Proof. exact (eq_refl (@all (_100044 -> Prop))). Qed.
Lemma lem4523367 {_100044 : Type'} : (term14 _100044) = (term14 _100044).
Proof. exact (MK_COMB (@lem4523366 _100044) (@lem4523365 _100044)). Qed.
Lemma lem4523368 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4523369 {_100044 : Type'} : (term59 _100044) = (term59 _100044).
Proof. exact (MK_COMB (@lem4523368) (@lem4523367 _100044)). Qed.
Lemma lem4523370 {_100044 _107639 _107642 A B : Type'} (_53776 : type656 _107639 _107642) (h1 : _53776 = (term76 _107639 _107642)) : (term69 _100044 _107639 _107642 A B) = (term214 _100044 _107639 _107642 A B _53776).
Proof. exact (MK_COMB (@lem4523369 _100044) (@lem4523340 _107639 _107642 A B _53776 h1)). Qed.
Lemma lem4523379 {_107639 _107642 : Type'} (t : _107639 -> Prop) (s : _107642 -> Prop) : (term215 _107639 _107642 t s) = (term215 _107639 _107642 t s).
Proof. exact (eq_refl (term215 _107639 _107642 t s)). Qed.
Lemma lem4523381 {_107639 _107642 : Type'} (t : _107639 -> Prop) (s : _107642 -> Prop) (d : _107639) (_53776 : type656 _107639 _107642) (h1 : _53776 = (term76 _107639 _107642)) : (term84 _107639 _107642 t s d) = (_53776 t s d).
Proof. exact (SYM (@lem4522345 _107639 _107642 t s d _53776 h1)). Qed.
Lemma lem4523382 {_107639 _107642 : Type'} (t : _107639 -> Prop) (s : _107642 -> Prop) (d : _107639) (_53776 : type656 _107639 _107642) (h1 : _53776 = (term76 _107639 _107642)) : (term84 _107639 _107642 t s d) = (_53776 t s d).
Proof. exact (@lem4523381 _107639 _107642 t s d _53776 h1). Qed.
Lemma lem4523383 {_107639 _107642 : Type'} : (@GSPEC (_107642 -> _107639)) = (@GSPEC (_107642 -> _107639)).
Proof. exact (eq_refl (@GSPEC (_107642 -> _107639))). Qed.
Lemma lem4523384 {_107639 _107642 : Type'} (t : _107639 -> Prop) (s : _107642 -> Prop) (d : _107639) (_53776 : type656 _107639 _107642) (h1 : _53776 = (term76 _107639 _107642)) : (term152 _107639 _107642 t s d) = (term166 _107639 _107642 _53776 t s d).
Proof. exact (MK_COMB (@lem4523383 _107639 _107642) (@lem4523382 _107639 _107642 t s d _53776 h1)). Qed.
Lemma lem4523385 {_107639 _107642 : Type'} : (@CARD (_107642 -> _107639)) = (@CARD (_107642 -> _107639)).
Proof. exact (eq_refl (@CARD (_107642 -> _107639))). Qed.
Lemma lem4523386 {_107639 _107642 : Type'} (t : _107639 -> Prop) (s : _107642 -> Prop) (d : _107639) (_53776 : type656 _107639 _107642) (h1 : _53776 = (term76 _107639 _107642)) : (term216 _107639 _107642 t s d) = (term217 _107639 _107642 _53776 t s d).
Proof. exact (MK_COMB (@lem4523385 _107639 _107642) (@lem4523384 _107639 _107642 t s d _53776 h1)). Qed.
Lemma lem4523387 : (@eq nat) = (@eq nat).
Proof. exact (eq_refl (@eq nat)). Qed.
Lemma lem4523388 {_107639 _107642 : Type'} (t : _107639 -> Prop) (s : _107642 -> Prop) (d : _107639) (_53776 : type656 _107639 _107642) (h1 : _53776 = (term76 _107639 _107642)) : (term218 _107639 _107642 t s d) = (term219 _107639 _107642 _53776 t s d).
Proof. exact (MK_COMB (@lem4523387) (@lem4523386 _107639 _107642 t s d _53776 h1)). Qed.
Lemma lem4523389 {_107639 _107642 : Type'} (d : _107639) (t : _107639 -> Prop) (s : _107642 -> Prop) (_53776 : type656 _107639 _107642) (h1 : _53776 = (term76 _107639 _107642)) : ((term216 _107639 _107642 t s d) = (term215 _107639 _107642 t s)) = ((term217 _107639 _107642 _53776 t s d) = (term215 _107639 _107642 t s)).
Proof. exact (MK_COMB (@lem4523388 _107639 _107642 t s d _53776 h1) (@lem4523379 _107639 _107642 t s)). Qed.
Lemma lem4523400 {_107639 _107642 : Type'} (s : _107642 -> Prop) (t : _107639 -> Prop) : (term220 _107639 _107642 s t) = (term220 _107639 _107642 s t).
Proof. exact (eq_refl (term220 _107639 _107642 s t)). Qed.
Lemma lem4523401 {_107639 _107642 : Type'} (d : _107639) (t : _107639 -> Prop) (s : _107642 -> Prop) (_53776 : type656 _107639 _107642) (h1 : _53776 = (term76 _107639 _107642)) : (term221 _107639 _107642 d t s) = (term222 _107639 _107642 _53776 d t s).
Proof. exact (MK_COMB (@lem4523400 _107639 _107642 s t) (@lem4523389 _107639 _107642 d t s _53776 h1)). Qed.
Lemma lem4523402 {_107639 _107642 : Type'} (d : _107639) (s : _107642 -> Prop) (_53776 : type656 _107639 _107642) (h1 : _53776 = (term76 _107639 _107642)) : (term223 _107639 _107642 d s) = (term224 _107639 _107642 _53776 d s).
Proof. exact (fun_ext (fun t : _107639 -> Prop => @lem4523401 _107639 _107642 d t s _53776 h1)). Qed.
Lemma lem4523403 {_107639 : Type'} : (@all (_107639 -> Prop)) = (@all (_107639 -> Prop)).
Proof. exact (eq_refl (@all (_107639 -> Prop))). Qed.
Lemma lem4523404 {_107639 _107642 : Type'} (d : _107639) (s : _107642 -> Prop) (_53776 : type656 _107639 _107642) (h1 : _53776 = (term76 _107639 _107642)) : (term225 _107639 _107642 d s) = (term226 _107639 _107642 _53776 d s).
Proof. exact (MK_COMB (@lem4523403 _107639) (@lem4523402 _107639 _107642 d s _53776 h1)). Qed.
Lemma lem4523405 {_107639 _107642 : Type'} (d : _107639) (_53776 : type656 _107639 _107642) (h1 : _53776 = (term76 _107639 _107642)) : (term227 _107639 _107642 d) = (term228 _107639 _107642 _53776 d).
Proof. exact (fun_ext (fun s : _107642 -> Prop => @lem4523404 _107639 _107642 d s _53776 h1)). Qed.
Lemma lem4523406 {_107642 : Type'} : (@all (_107642 -> Prop)) = (@all (_107642 -> Prop)).
Proof. exact (eq_refl (@all (_107642 -> Prop))). Qed.
Lemma lem4523407 {_107639 _107642 : Type'} (d : _107639) (_53776 : type656 _107639 _107642) (h1 : _53776 = (term76 _107639 _107642)) : (term8 _107639 _107642 d) = (term229 _107639 _107642 _53776 d).
Proof. exact (MK_COMB (@lem4523406 _107642) (@lem4523405 _107639 _107642 d _53776 h1)). Qed.
Lemma lem4523408 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem4523409 {_107639 _107642 : Type'} (d : _107639) (_53776 : type656 _107639 _107642) (h1 : _53776 = (term76 _107639 _107642)) : (term10 _107639 _107642 d) = (term230 _107639 _107642 _53776 d).
Proof. exact (MK_COMB (@lem4523408) (@lem4523407 _107639 _107642 d _53776 h1)). Qed.
Lemma lem4523410 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4523411 {_107639 _107642 : Type'} (d : _107639) (_53776 : type656 _107639 _107642) (h1 : _53776 = (term76 _107639 _107642)) : (term70 _107639 _107642 d) = (term231 _107639 _107642 _53776 d).
Proof. exact (MK_COMB (@lem4523410) (@lem4523409 _107639 _107642 d _53776 h1)). Qed.
Lemma lem4523412 {_100044 _107639 _107642 A B : Type'} (d : _107639) (_53776 : type656 _107639 _107642) (h1 : _53776 = (term76 _107639 _107642)) : (term71 _100044 _107639 _107642 A B d) = (term232 _100044 _107639 _107642 A B d _53776).
Proof. exact (MK_COMB (@lem4523411 _107639 _107642 d _53776 h1) (@lem4523370 _100044 _107639 _107642 A B _53776 h1)). Qed.
Lemma lem4523413 {_100044 _107639 _107642 A B : Type'} (_53776 : type656 _107639 _107642) (h1 : _53776 = (term76 _107639 _107642)) : (term73 _100044 _107639 _107642 A B) = (term233 _100044 _107639 _107642 A B _53776).
Proof. exact (fun_ext (fun d : _107639 => @lem4523412 _100044 _107639 _107642 A B d _53776 h1)). Qed.
Lemma lem4523414 {_107639 : Type'} : (@all _107639) = (@all _107639).
Proof. exact (eq_refl (@all _107639)). Qed.
Lemma lem4523415 {_100044 _107639 _107642 A B : Type'} (_53776 : type656 _107639 _107642) (h1 : _53776 = (term76 _107639 _107642)) : (term75 _100044 _107639 _107642 A B) = (term234 _100044 _107639 _107642 A B _53776).
Proof. exact (MK_COMB (@lem4523414 _107639) (@lem4523413 _100044 _107639 _107642 A B _53776 h1)). Qed.
Lemma lem4523416 {_100044 _107639 _107642 A B : Type'} (_53776 : type656 _107639 _107642) : term235 _100044 _107639 _107642 A B _53776.
Proof. exact (fun h0 : _53776 = (term76 _107639 _107642) => @lem4523415 _100044 _107639 _107642 A B _53776 h0). Qed.
Lemma lem4523417 {_100044 _107639 _107642 A B : Type'} : term236 _100044 _107639 _107642 A B.
Proof. exact (fun _53776 : type656 _107639 _107642 => @lem4523416 _100044 _107639 _107642 A B _53776). Qed.
Lemma lem4523419 {_3603 : Type'} (P : Prop) (c : _3603) (Q : _3603 -> Prop) : term237 _3603 P c Q.
Proof. exact (EQ_MP (@lem20230 _3603 P c Q) (@lem0)). Qed.
Lemma lem4523420 {_107639 _107642 : Type'} (P : Prop) (c : type656 _107639 _107642) (Q : type147 _107639 _107642) : term238 _107639 _107642 P c Q.
Proof. exact (@lem4523419 (type656 _107639 _107642) P c Q). Qed.
Lemma lem4523421 {_100044 _107639 _107642 A B : Type'} : term239 _100044 _107639 _107642 A B.
Proof. exact (@lem4523420 _107639 _107642 (term75 _100044 _107639 _107642 A B) (term76 _107639 _107642) (term240 _100044 _107639 _107642 A B)). Qed.
Lemma lem4523422 {_100044 _107639 _107642 A B : Type'} (_53776 : type656 _107639 _107642) : (term241 _100044 _107639 _107642 A B _53776) = (term234 _100044 _107639 _107642 A B _53776).
Proof. exact (eq_refl (term241 _100044 _107639 _107642 A B _53776)). Qed.
Lemma lem4523423 {_100044 _107639 _107642 A B : Type'} : (term242 _100044 _107639 _107642 A B) = (term242 _100044 _107639 _107642 A B).
Proof. exact (eq_refl (term242 _100044 _107639 _107642 A B)). Qed.
Lemma lem4523424 {_100044 _107639 _107642 A B : Type'} (_53776 : type656 _107639 _107642) : ((term75 _100044 _107639 _107642 A B) = (term241 _100044 _107639 _107642 A B _53776)) = ((term75 _100044 _107639 _107642 A B) = (term234 _100044 _107639 _107642 A B _53776)).
Proof. exact (MK_COMB (@lem4523423 _100044 _107639 _107642 A B) (@lem4523422 _100044 _107639 _107642 A B _53776)). Qed.
Lemma lem4523425 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) : (term243 _107639 _107642 _53776) = (term243 _107639 _107642 _53776).
Proof. exact (eq_refl (term243 _107639 _107642 _53776)). Qed.
Lemma lem4523426 {_100044 _107639 _107642 A B : Type'} (_53776 : type656 _107639 _107642) : (term244 _100044 _107639 _107642 A B _53776) = (term235 _100044 _107639 _107642 A B _53776).
Proof. exact (MK_COMB (@lem4523425 _107639 _107642 _53776) (@lem4523424 _100044 _107639 _107642 A B _53776)). Qed.
Lemma lem4523427 {_100044 _107639 _107642 A B : Type'} : (term245 _100044 _107639 _107642 A B) = (term246 _100044 _107639 _107642 A B).
Proof. exact (fun_ext (fun _53776 : type656 _107639 _107642 => @lem4523426 _100044 _107639 _107642 A B _53776)). Qed.
Lemma lem4523428 {_107639 _107642 : Type'} : (@all ((_107639 -> Prop) -> (_107642 -> Prop) -> _107639 -> (_107642 -> _107639) -> Prop)) = (@all ((_107639 -> Prop) -> (_107642 -> Prop) -> _107639 -> (_107642 -> _107639) -> Prop)).
Proof. exact (eq_refl (@all ((_107639 -> Prop) -> (_107642 -> Prop) -> _107639 -> (_107642 -> _107639) -> Prop))). Qed.
Lemma lem4523429 {_100044 _107639 _107642 A B : Type'} : (term247 _100044 _107639 _107642 A B) = (term236 _100044 _107639 _107642 A B).
Proof. exact (MK_COMB (@lem4523428 _107639 _107642) (@lem4523427 _100044 _107639 _107642 A B)). Qed.
Lemma lem4523430 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4523431 {_100044 _107639 _107642 A B : Type'} : (term248 _100044 _107639 _107642 A B) = (term249 _100044 _107639 _107642 A B).
Proof. exact (MK_COMB (@lem4523430) (@lem4523429 _100044 _107639 _107642 A B)). Qed.
Lemma lem4523432 {_100044 _107639 _107642 A B : Type'} (_53776 : type656 _107639 _107642) : (term241 _100044 _107639 _107642 A B _53776) = (term234 _100044 _107639 _107642 A B _53776).
Proof. exact (eq_refl (term241 _100044 _107639 _107642 A B _53776)). Qed.
Lemma lem4523433 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) : (term243 _107639 _107642 _53776) = (term243 _107639 _107642 _53776).
Proof. exact (eq_refl (term243 _107639 _107642 _53776)). Qed.
Lemma lem4523434 {_100044 _107639 _107642 A B : Type'} (_53776 : type656 _107639 _107642) : (term250 _100044 _107639 _107642 A B _53776) = (term251 _100044 _107639 _107642 A B _53776).
Proof. exact (MK_COMB (@lem4523433 _107639 _107642 _53776) (@lem4523432 _100044 _107639 _107642 A B _53776)). Qed.
Lemma lem4523435 {_100044 _107639 _107642 A B : Type'} : (term252 _100044 _107639 _107642 A B) = (term253 _100044 _107639 _107642 A B).
Proof. exact (fun_ext (fun _53776 : type656 _107639 _107642 => @lem4523434 _100044 _107639 _107642 A B _53776)). Qed.
Lemma lem4523436 {_107639 _107642 : Type'} : (@all ((_107639 -> Prop) -> (_107642 -> Prop) -> _107639 -> (_107642 -> _107639) -> Prop)) = (@all ((_107639 -> Prop) -> (_107642 -> Prop) -> _107639 -> (_107642 -> _107639) -> Prop)).
Proof. exact (eq_refl (@all ((_107639 -> Prop) -> (_107642 -> Prop) -> _107639 -> (_107642 -> _107639) -> Prop))). Qed.
Lemma lem4523437 {_100044 _107639 _107642 A B : Type'} : (term254 _100044 _107639 _107642 A B) = (term255 _100044 _107639 _107642 A B).
Proof. exact (MK_COMB (@lem4523436 _107639 _107642) (@lem4523435 _100044 _107639 _107642 A B)). Qed.
Lemma lem4523438 {_100044 _107639 _107642 A B : Type'} : (term242 _100044 _107639 _107642 A B) = (term242 _100044 _107639 _107642 A B).
Proof. exact (eq_refl (term242 _100044 _107639 _107642 A B)). Qed.
Lemma lem4523439 {_100044 _107639 _107642 A B : Type'} : ((term75 _100044 _107639 _107642 A B) = (term254 _100044 _107639 _107642 A B)) = ((term75 _100044 _107639 _107642 A B) = (term255 _100044 _107639 _107642 A B)).
Proof. exact (MK_COMB (@lem4523438 _100044 _107639 _107642 A B) (@lem4523437 _100044 _107639 _107642 A B)). Qed.
Lemma lem4523440 {_100044 _107639 _107642 A B : Type'} : (term239 _100044 _107639 _107642 A B) = (term256 _100044 _107639 _107642 A B).
Proof. exact (MK_COMB (@lem4523431 _100044 _107639 _107642 A B) (@lem4523439 _100044 _107639 _107642 A B)). Qed.
Lemma lem4523441 {_100044 _107639 _107642 A B : Type'} : term256 _100044 _107639 _107642 A B.
Proof. exact (EQ_MP (@lem4523440 _100044 _107639 _107642 A B) (@lem4523421 _100044 _107639 _107642 A B)). Qed.
Lemma lem4523442 {_100044 _107639 _107642 A B : Type'} : (term75 _100044 _107639 _107642 A B) = (term255 _100044 _107639 _107642 A B).
Proof. exact (@lem4523441 _100044 _107639 _107642 A B (@lem4523417 _100044 _107639 _107642 A B)). Qed.
Lemma lem4523444 {_3571 _3575 : Type'} (s : _3575 -> _3571) (t : _3575 -> _3571) : (s = (term257 _3571 _3575 t)) = (term258 _3571 _3575 s t).
Proof. exact (EQ_MP (@lem19792 _3571 _3575 s t) (@lem0)). Qed.
Lemma lem4523445 {_107639 _107642 : Type'} (s : type656 _107639 _107642) (t : type656 _107639 _107642) : (s = (term259 _107639 _107642 t)) = (term260 _107639 _107642 s t).
Proof. exact (@lem4523444 (type859 _107639 _107642) (_107639 -> Prop) s t). Qed.
Lemma lem4523446 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) : (_53776 = (term261 _107639 _107642)) = (term262 _107639 _107642 _53776).
Proof. exact (@lem4523445 _107639 _107642 _53776 (term76 _107639 _107642)). Qed.
Lemma lem4523447 {_107639 _107642 : Type'} (t : _107639 -> Prop) : (term77 _107639 _107642 t) = (term78 _107639 _107642 t).
Proof. exact (eq_refl (term77 _107639 _107642 t)). Qed.
Lemma lem4523448 {_107639 _107642 : Type'} : (term261 _107639 _107642) = (term76 _107639 _107642).
Proof. exact (fun_ext (fun t : _107639 -> Prop => @lem4523447 _107639 _107642 t)). Qed.
Lemma lem4523449 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) : (@eq ((_107639 -> Prop) -> (_107642 -> Prop) -> _107639 -> (_107642 -> _107639) -> Prop) _53776) = (@eq ((_107639 -> Prop) -> (_107642 -> Prop) -> _107639 -> (_107642 -> _107639) -> Prop) _53776).
Proof. exact (eq_refl (@eq ((_107639 -> Prop) -> (_107642 -> Prop) -> _107639 -> (_107642 -> _107639) -> Prop) _53776)). Qed.
Lemma lem4523450 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) : (_53776 = (term261 _107639 _107642)) = (_53776 = (term76 _107639 _107642)).
Proof. exact (MK_COMB (@lem4523449 _107639 _107642 _53776) (@lem4523448 _107639 _107642)). Qed.
Lemma lem4523451 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4523452 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) : (term263 _107639 _107642 _53776) = (term264 _107639 _107642 _53776).
Proof. exact (MK_COMB (@lem4523451) (@lem4523450 _107639 _107642 _53776)). Qed.
Lemma lem4523453 {_107639 _107642 : Type'} (t : _107639 -> Prop) : (term77 _107639 _107642 t) = (term78 _107639 _107642 t).
Proof. exact (eq_refl (term77 _107639 _107642 t)). Qed.
Lemma lem4523454 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (t : _107639 -> Prop) : (term79 _107639 _107642 _53776 t) = (term79 _107639 _107642 _53776 t).
Proof. exact (eq_refl (term79 _107639 _107642 _53776 t)). Qed.
Lemma lem4523455 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (t : _107639 -> Prop) : ((_53776 t) = (term77 _107639 _107642 t)) = ((_53776 t) = (term78 _107639 _107642 t)).
Proof. exact (MK_COMB (@lem4523454 _107639 _107642 _53776 t) (@lem4523453 _107639 _107642 t)). Qed.
Lemma lem4523456 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) : (term265 _107639 _107642 _53776) = (term266 _107639 _107642 _53776).
Proof. exact (fun_ext (fun t : _107639 -> Prop => @lem4523455 _107639 _107642 _53776 t)). Qed.
Lemma lem4523457 {_107639 : Type'} : (@all (_107639 -> Prop)) = (@all (_107639 -> Prop)).
Proof. exact (eq_refl (@all (_107639 -> Prop))). Qed.
Lemma lem4523458 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) : (term262 _107639 _107642 _53776) = (term267 _107639 _107642 _53776).
Proof. exact (MK_COMB (@lem4523457 _107639) (@lem4523456 _107639 _107642 _53776)). Qed.
Lemma lem4523459 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) : ((_53776 = (term261 _107639 _107642)) = (term262 _107639 _107642 _53776)) = ((_53776 = (term76 _107639 _107642)) = (term267 _107639 _107642 _53776)).
Proof. exact (MK_COMB (@lem4523452 _107639 _107642 _53776) (@lem4523458 _107639 _107642 _53776)). Qed.
Lemma lem4523460 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) : (_53776 = (term76 _107639 _107642)) = (term267 _107639 _107642 _53776).
Proof. exact (EQ_MP (@lem4523459 _107639 _107642 _53776) (@lem4523446 _107639 _107642 _53776)). Qed.
Lemma lem4523462 {_3571 _3575 : Type'} (s : _3575 -> _3571) (t : _3575 -> _3571) : (s = (term257 _3571 _3575 t)) = (term258 _3571 _3575 s t).
Proof. exact (EQ_MP (@lem19792 _3571 _3575 s t) (@lem0)). Qed.
Lemma lem4523463 {_107639 _107642 : Type'} (s : type859 _107639 _107642) (t : type859 _107639 _107642) : (s = (term268 _107639 _107642 t)) = (term269 _107639 _107642 s t).
Proof. exact (@lem4523462 (type1372 _107639 _107642) (_107642 -> Prop) s t). Qed.
Lemma lem4523464 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (t : _107639 -> Prop) : ((_53776 t) = (term270 _107639 _107642 t)) = (term271 _107639 _107642 _53776 t).
Proof. exact (@lem4523463 _107639 _107642 (_53776 t) (term78 _107639 _107642 t)). Qed.
Lemma lem4523465 {_107639 _107642 : Type'} (t : _107639 -> Prop) (s : _107642 -> Prop) : (term80 _107639 _107642 t s) = (term81 _107639 _107642 t s).
Proof. exact (eq_refl (term80 _107639 _107642 t s)). Qed.
Lemma lem4523466 {_107639 _107642 : Type'} (t : _107639 -> Prop) : (term270 _107639 _107642 t) = (term78 _107639 _107642 t).
Proof. exact (fun_ext (fun s : _107642 -> Prop => @lem4523465 _107639 _107642 t s)). Qed.
Lemma lem4523467 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (t : _107639 -> Prop) : (term79 _107639 _107642 _53776 t) = (term79 _107639 _107642 _53776 t).
Proof. exact (eq_refl (term79 _107639 _107642 _53776 t)). Qed.
Lemma lem4523468 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (t : _107639 -> Prop) : ((_53776 t) = (term270 _107639 _107642 t)) = ((_53776 t) = (term78 _107639 _107642 t)).
Proof. exact (MK_COMB (@lem4523467 _107639 _107642 _53776 t) (@lem4523466 _107639 _107642 t)). Qed.
Lemma lem4523469 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4523470 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (t : _107639 -> Prop) : (term272 _107639 _107642 _53776 t) = (term273 _107639 _107642 _53776 t).
Proof. exact (MK_COMB (@lem4523469) (@lem4523468 _107639 _107642 _53776 t)). Qed.
Lemma lem4523471 {_107639 _107642 : Type'} (t : _107639 -> Prop) (s : _107642 -> Prop) : (term80 _107639 _107642 t s) = (term81 _107639 _107642 t s).
Proof. exact (eq_refl (term80 _107639 _107642 t s)). Qed.
Lemma lem4523472 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (t : _107639 -> Prop) (s : _107642 -> Prop) : (term82 _107639 _107642 _53776 t s) = (term82 _107639 _107642 _53776 t s).
Proof. exact (eq_refl (term82 _107639 _107642 _53776 t s)). Qed.
Lemma lem4523473 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (t : _107639 -> Prop) (s : _107642 -> Prop) : ((_53776 t s) = (term80 _107639 _107642 t s)) = ((_53776 t s) = (term81 _107639 _107642 t s)).
Proof. exact (MK_COMB (@lem4523472 _107639 _107642 _53776 t s) (@lem4523471 _107639 _107642 t s)). Qed.
Lemma lem4523474 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (t : _107639 -> Prop) : (term274 _107639 _107642 _53776 t) = (term275 _107639 _107642 _53776 t).
Proof. exact (fun_ext (fun s : _107642 -> Prop => @lem4523473 _107639 _107642 _53776 t s)). Qed.
Lemma lem4523475 {_107642 : Type'} : (@all (_107642 -> Prop)) = (@all (_107642 -> Prop)).
Proof. exact (eq_refl (@all (_107642 -> Prop))). Qed.
Lemma lem4523476 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (t : _107639 -> Prop) : (term271 _107639 _107642 _53776 t) = (term276 _107639 _107642 _53776 t).
Proof. exact (MK_COMB (@lem4523475 _107642) (@lem4523474 _107639 _107642 _53776 t)). Qed.
Lemma lem4523477 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (t : _107639 -> Prop) : (((_53776 t) = (term270 _107639 _107642 t)) = (term271 _107639 _107642 _53776 t)) = (((_53776 t) = (term78 _107639 _107642 t)) = (term276 _107639 _107642 _53776 t)).
Proof. exact (MK_COMB (@lem4523470 _107639 _107642 _53776 t) (@lem4523476 _107639 _107642 _53776 t)). Qed.
Lemma lem4523478 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (t : _107639 -> Prop) : ((_53776 t) = (term78 _107639 _107642 t)) = (term276 _107639 _107642 _53776 t).
Proof. exact (EQ_MP (@lem4523477 _107639 _107642 _53776 t) (@lem4523464 _107639 _107642 _53776 t)). Qed.
Lemma lem4523480 {_3571 _3575 : Type'} (s : _3575 -> _3571) (t : _3575 -> _3571) : (s = (term257 _3571 _3575 t)) = (term258 _3571 _3575 s t).
Proof. exact (EQ_MP (@lem19792 _3571 _3575 s t) (@lem0)). Qed.
Lemma lem4523481 {_107639 _107642 : Type'} (s : type1372 _107639 _107642) (t : type1372 _107639 _107642) : (s = (term277 _107639 _107642 t)) = (term278 _107639 _107642 s t).
Proof. exact (@lem4523480 (type805 _107639 _107642) _107639 s t). Qed.
Lemma lem4523482 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (t : _107639 -> Prop) (s : _107642 -> Prop) : ((_53776 t s) = (term279 _107639 _107642 t s)) = (term280 _107639 _107642 _53776 t s).
Proof. exact (@lem4523481 _107639 _107642 (_53776 t s) (term81 _107639 _107642 t s)). Qed.
Lemma lem4523483 {_107639 _107642 : Type'} (t : _107639 -> Prop) (s : _107642 -> Prop) (d : _107639) : (term83 _107639 _107642 t s d) = (term84 _107639 _107642 t s d).
Proof. exact (eq_refl (term83 _107639 _107642 t s d)). Qed.
Lemma lem4523484 {_107639 _107642 : Type'} (t : _107639 -> Prop) (s : _107642 -> Prop) : (term279 _107639 _107642 t s) = (term81 _107639 _107642 t s).
Proof. exact (fun_ext (fun d : _107639 => @lem4523483 _107639 _107642 t s d)). Qed.
Lemma lem4523485 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (t : _107639 -> Prop) (s : _107642 -> Prop) : (term82 _107639 _107642 _53776 t s) = (term82 _107639 _107642 _53776 t s).
Proof. exact (eq_refl (term82 _107639 _107642 _53776 t s)). Qed.
Lemma lem4523486 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (t : _107639 -> Prop) (s : _107642 -> Prop) : ((_53776 t s) = (term279 _107639 _107642 t s)) = ((_53776 t s) = (term81 _107639 _107642 t s)).
Proof. exact (MK_COMB (@lem4523485 _107639 _107642 _53776 t s) (@lem4523484 _107639 _107642 t s)). Qed.
Lemma lem4523487 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4523488 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (t : _107639 -> Prop) (s : _107642 -> Prop) : (term281 _107639 _107642 _53776 t s) = (term282 _107639 _107642 _53776 t s).
Proof. exact (MK_COMB (@lem4523487) (@lem4523486 _107639 _107642 _53776 t s)). Qed.
Lemma lem4523489 {_107639 _107642 : Type'} (t : _107639 -> Prop) (s : _107642 -> Prop) (d : _107639) : (term83 _107639 _107642 t s d) = (term84 _107639 _107642 t s d).
Proof. exact (eq_refl (term83 _107639 _107642 t s d)). Qed.
Lemma lem4523490 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (t : _107639 -> Prop) (s : _107642 -> Prop) (d : _107639) : (term85 _107639 _107642 _53776 t s d) = (term85 _107639 _107642 _53776 t s d).
Proof. exact (eq_refl (term85 _107639 _107642 _53776 t s d)). Qed.
Lemma lem4523491 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (t : _107639 -> Prop) (s : _107642 -> Prop) (d : _107639) : ((_53776 t s d) = (term83 _107639 _107642 t s d)) = ((_53776 t s d) = (term84 _107639 _107642 t s d)).
Proof. exact (MK_COMB (@lem4523490 _107639 _107642 _53776 t s d) (@lem4523489 _107639 _107642 t s d)). Qed.
Lemma lem4523492 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (t : _107639 -> Prop) (s : _107642 -> Prop) : (term283 _107639 _107642 _53776 t s) = (term284 _107639 _107642 _53776 t s).
Proof. exact (fun_ext (fun d : _107639 => @lem4523491 _107639 _107642 _53776 t s d)). Qed.
Lemma lem4523493 {_107639 : Type'} : (@all _107639) = (@all _107639).
Proof. exact (eq_refl (@all _107639)). Qed.
Lemma lem4523494 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (t : _107639 -> Prop) (s : _107642 -> Prop) : (term280 _107639 _107642 _53776 t s) = (term285 _107639 _107642 _53776 t s).
Proof. exact (MK_COMB (@lem4523493 _107639) (@lem4523492 _107639 _107642 _53776 t s)). Qed.
Lemma lem4523495 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (t : _107639 -> Prop) (s : _107642 -> Prop) : (((_53776 t s) = (term279 _107639 _107642 t s)) = (term280 _107639 _107642 _53776 t s)) = (((_53776 t s) = (term81 _107639 _107642 t s)) = (term285 _107639 _107642 _53776 t s)).
Proof. exact (MK_COMB (@lem4523488 _107639 _107642 _53776 t s) (@lem4523494 _107639 _107642 _53776 t s)). Qed.
Lemma lem4523496 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (t : _107639 -> Prop) (s : _107642 -> Prop) : ((_53776 t s) = (term81 _107639 _107642 t s)) = (term285 _107639 _107642 _53776 t s).
Proof. exact (EQ_MP (@lem4523495 _107639 _107642 _53776 t s) (@lem4523482 _107639 _107642 _53776 t s)). Qed.
Lemma lem4523498 {_3571 _3575 : Type'} (s : _3575 -> _3571) (t : _3575 -> _3571) : (s = (term257 _3571 _3575 t)) = (term258 _3571 _3575 s t).
Proof. exact (EQ_MP (@lem19792 _3571 _3575 s t) (@lem0)). Qed.
Lemma lem4523499 {_107639 _107642 : Type'} (s : type805 _107639 _107642) (t : type805 _107639 _107642) : (s = (term286 _107639 _107642 t)) = (term287 _107639 _107642 s t).
Proof. exact (@lem4523498 Prop (_107642 -> _107639) s t). Qed.
Lemma lem4523500 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (t : _107639 -> Prop) (s : _107642 -> Prop) (d : _107639) : ((_53776 t s d) = (term288 _107639 _107642 t s d)) = (term289 _107639 _107642 _53776 t s d).
Proof. exact (@lem4523499 _107639 _107642 (_53776 t s d) (term84 _107639 _107642 t s d)). Qed.
Lemma lem4523501 {_107639 _107642 : Type'} (GEN_PVAR_149 : _107642 -> _107639) (t : _107639 -> Prop) (s : _107642 -> Prop) (d : _107639) : (term290 _107639 _107642 t s d GEN_PVAR_149) = (term151 _107639 _107642 GEN_PVAR_149 t s d).
Proof. exact (eq_refl (term290 _107639 _107642 t s d GEN_PVAR_149)). Qed.
Lemma lem4523502 {_107639 _107642 : Type'} (t : _107639 -> Prop) (s : _107642 -> Prop) (d : _107639) : (term288 _107639 _107642 t s d) = (term84 _107639 _107642 t s d).
Proof. exact (fun_ext (fun GEN_PVAR_149 : _107642 -> _107639 => @lem4523501 _107639 _107642 GEN_PVAR_149 t s d)). Qed.
Lemma lem4523503 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (t : _107639 -> Prop) (s : _107642 -> Prop) (d : _107639) : (term85 _107639 _107642 _53776 t s d) = (term85 _107639 _107642 _53776 t s d).
Proof. exact (eq_refl (term85 _107639 _107642 _53776 t s d)). Qed.
Lemma lem4523504 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (t : _107639 -> Prop) (s : _107642 -> Prop) (d : _107639) : ((_53776 t s d) = (term288 _107639 _107642 t s d)) = ((_53776 t s d) = (term84 _107639 _107642 t s d)).
Proof. exact (MK_COMB (@lem4523503 _107639 _107642 _53776 t s d) (@lem4523502 _107639 _107642 t s d)). Qed.
Lemma lem4523505 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4523506 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (t : _107639 -> Prop) (s : _107642 -> Prop) (d : _107639) : (term291 _107639 _107642 _53776 t s d) = (term292 _107639 _107642 _53776 t s d).
Proof. exact (MK_COMB (@lem4523505) (@lem4523504 _107639 _107642 _53776 t s d)). Qed.
Lemma lem4523507 {_107639 _107642 : Type'} (GEN_PVAR_149 : _107642 -> _107639) (t : _107639 -> Prop) (s : _107642 -> Prop) (d : _107639) : (term290 _107639 _107642 t s d GEN_PVAR_149) = (term151 _107639 _107642 GEN_PVAR_149 t s d).
Proof. exact (eq_refl (term290 _107639 _107642 t s d GEN_PVAR_149)). Qed.
Lemma lem4523508 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (t : _107639 -> Prop) (s : _107642 -> Prop) (d : _107639) (GEN_PVAR_149 : _107642 -> _107639) : (term293 _107639 _107642 _53776 t s d GEN_PVAR_149) = (term293 _107639 _107642 _53776 t s d GEN_PVAR_149).
Proof. exact (eq_refl (term293 _107639 _107642 _53776 t s d GEN_PVAR_149)). Qed.
Lemma lem4523509 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (GEN_PVAR_149 : _107642 -> _107639) (t : _107639 -> Prop) (s : _107642 -> Prop) (d : _107639) : ((_53776 t s d GEN_PVAR_149) = (term290 _107639 _107642 t s d GEN_PVAR_149)) = ((_53776 t s d GEN_PVAR_149) = (term151 _107639 _107642 GEN_PVAR_149 t s d)).
Proof. exact (MK_COMB (@lem4523508 _107639 _107642 _53776 t s d GEN_PVAR_149) (@lem4523507 _107639 _107642 GEN_PVAR_149 t s d)). Qed.
Lemma lem4523510 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (t : _107639 -> Prop) (s : _107642 -> Prop) (d : _107639) : (term294 _107639 _107642 _53776 t s d) = (term295 _107639 _107642 _53776 t s d).
Proof. exact (fun_ext (fun GEN_PVAR_149 : _107642 -> _107639 => @lem4523509 _107639 _107642 _53776 GEN_PVAR_149 t s d)). Qed.
Lemma lem4523511 {_107639 _107642 : Type'} : (@all (_107642 -> _107639)) = (@all (_107642 -> _107639)).
Proof. exact (eq_refl (@all (_107642 -> _107639))). Qed.
Lemma lem4523512 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (t : _107639 -> Prop) (s : _107642 -> Prop) (d : _107639) : (term289 _107639 _107642 _53776 t s d) = (term296 _107639 _107642 _53776 t s d).
Proof. exact (MK_COMB (@lem4523511 _107639 _107642) (@lem4523510 _107639 _107642 _53776 t s d)). Qed.
Lemma lem4523513 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (t : _107639 -> Prop) (s : _107642 -> Prop) (d : _107639) : (((_53776 t s d) = (term288 _107639 _107642 t s d)) = (term289 _107639 _107642 _53776 t s d)) = (((_53776 t s d) = (term84 _107639 _107642 t s d)) = (term296 _107639 _107642 _53776 t s d)).
Proof. exact (MK_COMB (@lem4523506 _107639 _107642 _53776 t s d) (@lem4523512 _107639 _107642 _53776 t s d)). Qed.
Lemma lem4523514 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (t : _107639 -> Prop) (s : _107642 -> Prop) (d : _107639) : ((_53776 t s d) = (term84 _107639 _107642 t s d)) = (term296 _107639 _107642 _53776 t s d).
Proof. exact (EQ_MP (@lem4523513 _107639 _107642 _53776 t s d) (@lem4523500 _107639 _107642 _53776 t s d)). Qed.
Lemma lem4523515 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (GEN_PVAR_149 : _107642 -> _107639) (t : _107639 -> Prop) (s : _107642 -> Prop) (d : _107639) : ((_53776 t s d GEN_PVAR_149) = (term151 _107639 _107642 GEN_PVAR_149 t s d)) = ((_53776 t s d GEN_PVAR_149) = (term151 _107639 _107642 GEN_PVAR_149 t s d)).
Proof. exact (eq_refl ((_53776 t s d GEN_PVAR_149) = (term151 _107639 _107642 GEN_PVAR_149 t s d))). Qed.
Lemma lem4523516 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (t : _107639 -> Prop) (s : _107642 -> Prop) (d : _107639) : (term295 _107639 _107642 _53776 t s d) = (term295 _107639 _107642 _53776 t s d).
Proof. exact (fun_ext (fun GEN_PVAR_149 : _107642 -> _107639 => @lem4523515 _107639 _107642 _53776 GEN_PVAR_149 t s d)). Qed.
Lemma lem4523517 {_107639 _107642 : Type'} : (@all (_107642 -> _107639)) = (@all (_107642 -> _107639)).
Proof. exact (eq_refl (@all (_107642 -> _107639))). Qed.
Lemma lem4523518 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (t : _107639 -> Prop) (s : _107642 -> Prop) (d : _107639) : (term296 _107639 _107642 _53776 t s d) = (term296 _107639 _107642 _53776 t s d).
Proof. exact (MK_COMB (@lem4523517 _107639 _107642) (@lem4523516 _107639 _107642 _53776 t s d)). Qed.
Lemma lem4523519 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (t : _107639 -> Prop) (s : _107642 -> Prop) (d : _107639) : ((_53776 t s d) = (term84 _107639 _107642 t s d)) = (term296 _107639 _107642 _53776 t s d).
Proof. exact (TRANS (@lem4523514 _107639 _107642 _53776 t s d) (@lem4523518 _107639 _107642 _53776 t s d)). Qed.
Lemma lem4523520 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (t : _107639 -> Prop) (s : _107642 -> Prop) : (term284 _107639 _107642 _53776 t s) = (term297 _107639 _107642 _53776 t s).
Proof. exact (fun_ext (fun d : _107639 => @lem4523519 _107639 _107642 _53776 t s d)). Qed.
Lemma lem4523521 {_107639 : Type'} : (@all _107639) = (@all _107639).
Proof. exact (eq_refl (@all _107639)). Qed.
Lemma lem4523522 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (t : _107639 -> Prop) (s : _107642 -> Prop) : (term285 _107639 _107642 _53776 t s) = (term298 _107639 _107642 _53776 t s).
Proof. exact (MK_COMB (@lem4523521 _107639) (@lem4523520 _107639 _107642 _53776 t s)). Qed.
Lemma lem4523523 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (t : _107639 -> Prop) (s : _107642 -> Prop) : ((_53776 t s) = (term81 _107639 _107642 t s)) = (term298 _107639 _107642 _53776 t s).
Proof. exact (TRANS (@lem4523496 _107639 _107642 _53776 t s) (@lem4523522 _107639 _107642 _53776 t s)). Qed.
Lemma lem4523524 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (t : _107639 -> Prop) : (term275 _107639 _107642 _53776 t) = (term299 _107639 _107642 _53776 t).
Proof. exact (fun_ext (fun s : _107642 -> Prop => @lem4523523 _107639 _107642 _53776 t s)). Qed.
Lemma lem4523525 {_107642 : Type'} : (@all (_107642 -> Prop)) = (@all (_107642 -> Prop)).
Proof. exact (eq_refl (@all (_107642 -> Prop))). Qed.
Lemma lem4523526 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (t : _107639 -> Prop) : (term276 _107639 _107642 _53776 t) = (term300 _107639 _107642 _53776 t).
Proof. exact (MK_COMB (@lem4523525 _107642) (@lem4523524 _107639 _107642 _53776 t)). Qed.
Lemma lem4523527 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (t : _107639 -> Prop) : ((_53776 t) = (term78 _107639 _107642 t)) = (term300 _107639 _107642 _53776 t).
Proof. exact (TRANS (@lem4523478 _107639 _107642 _53776 t) (@lem4523526 _107639 _107642 _53776 t)). Qed.
Lemma lem4523528 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) : (term266 _107639 _107642 _53776) = (term301 _107639 _107642 _53776).
Proof. exact (fun_ext (fun t : _107639 -> Prop => @lem4523527 _107639 _107642 _53776 t)). Qed.
Lemma lem4523529 {_107639 : Type'} : (@all (_107639 -> Prop)) = (@all (_107639 -> Prop)).
Proof. exact (eq_refl (@all (_107639 -> Prop))). Qed.
Lemma lem4523530 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) : (term267 _107639 _107642 _53776) = (term302 _107639 _107642 _53776).
Proof. exact (MK_COMB (@lem4523529 _107639) (@lem4523528 _107639 _107642 _53776)). Qed.
Lemma lem4523531 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) : (_53776 = (term76 _107639 _107642)) = (term302 _107639 _107642 _53776).
Proof. exact (TRANS (@lem4523460 _107639 _107642 _53776) (@lem4523530 _107639 _107642 _53776)). Qed.
Lemma lem4523532 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4523533 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) : (term243 _107639 _107642 _53776) = (term303 _107639 _107642 _53776).
Proof. exact (MK_COMB (@lem4523532) (@lem4523531 _107639 _107642 _53776)). Qed.
Lemma lem4523534 {_100044 _107639 _107642 A B : Type'} (_53776 : type656 _107639 _107642) : (term234 _100044 _107639 _107642 A B _53776) = (term234 _100044 _107639 _107642 A B _53776).
Proof. exact (eq_refl (term234 _100044 _107639 _107642 A B _53776)). Qed.
Lemma lem4523535 {_100044 _107639 _107642 A B : Type'} (_53776 : type656 _107639 _107642) : (term251 _100044 _107639 _107642 A B _53776) = (term304 _100044 _107639 _107642 A B _53776).
Proof. exact (MK_COMB (@lem4523533 _107639 _107642 _53776) (@lem4523534 _100044 _107639 _107642 A B _53776)). Qed.
Lemma lem4523536 {_100044 _107639 _107642 A B : Type'} : (term253 _100044 _107639 _107642 A B) = (term305 _100044 _107639 _107642 A B).
Proof. exact (fun_ext (fun _53776 : type656 _107639 _107642 => @lem4523535 _100044 _107639 _107642 A B _53776)). Qed.
Lemma lem4523537 {_107639 _107642 : Type'} : (@all ((_107639 -> Prop) -> (_107642 -> Prop) -> _107639 -> (_107642 -> _107639) -> Prop)) = (@all ((_107639 -> Prop) -> (_107642 -> Prop) -> _107639 -> (_107642 -> _107639) -> Prop)).
Proof. exact (eq_refl (@all ((_107639 -> Prop) -> (_107642 -> Prop) -> _107639 -> (_107642 -> _107639) -> Prop))). Qed.
Lemma lem4523538 {_100044 _107639 _107642 A B : Type'} : (term255 _100044 _107639 _107642 A B) = (term306 _100044 _107639 _107642 A B).
Proof. exact (MK_COMB (@lem4523537 _107639 _107642) (@lem4523536 _100044 _107639 _107642 A B)). Qed.
Lemma lem4523539 {_100044 _107639 _107642 A B : Type'} : (term242 _100044 _107639 _107642 A B) = (term242 _100044 _107639 _107642 A B).
Proof. exact (eq_refl (term242 _100044 _107639 _107642 A B)). Qed.
Lemma lem4523540 {_100044 _107639 _107642 A B : Type'} : ((term75 _100044 _107639 _107642 A B) = (term255 _100044 _107639 _107642 A B)) = ((term75 _100044 _107639 _107642 A B) = (term306 _100044 _107639 _107642 A B)).
Proof. exact (MK_COMB (@lem4523539 _100044 _107639 _107642 A B) (@lem4523538 _100044 _107639 _107642 A B)). Qed.
Lemma lem4523541 {_100044 _107639 _107642 A B : Type'} : (term75 _100044 _107639 _107642 A B) = (term306 _100044 _107639 _107642 A B).
Proof. exact (EQ_MP (@lem4523540 _100044 _107639 _107642 A B) (@lem4523442 _100044 _107639 _107642 A B)). Qed.
Lemma lem4523542 {_107639 A : Type'} (_53777 : type656 _107639 A) (h1 : _53777 = (term76 _107639 A)) : _53777 = (term76 _107639 A).
Proof. exact (h1). Qed.
Lemma lem4523543 {_107639 : Type'} (t : _107639 -> Prop) : t = t.
Proof. exact (eq_refl t). Qed.
Lemma lem4523544 {_107639 A : Type'} (t : _107639 -> Prop) (_53777 : type656 _107639 A) (h1 : _53777 = (term76 _107639 A)) : (_53777 t) = (term77 _107639 A t).
Proof. exact (MK_COMB (@lem4523542 _107639 A _53777 h1) (@lem4523543 _107639 t)). Qed.
Lemma lem4523545 {_107639 A : Type'} (t : _107639 -> Prop) : (term77 _107639 A t) = (term78 _107639 A t).
Proof. exact (eq_refl (term77 _107639 A t)). Qed.
Lemma lem4523546 {_107639 A : Type'} (_53777 : type656 _107639 A) (t : _107639 -> Prop) : (term79 _107639 A _53777 t) = (term79 _107639 A _53777 t).
Proof. exact (eq_refl (term79 _107639 A _53777 t)). Qed.
Lemma lem4523547 {_107639 A : Type'} (_53777 : type656 _107639 A) (t : _107639 -> Prop) : ((_53777 t) = (term77 _107639 A t)) = ((_53777 t) = (term78 _107639 A t)).
Proof. exact (MK_COMB (@lem4523546 _107639 A _53777 t) (@lem4523545 _107639 A t)). Qed.
Lemma lem4523548 {_107639 A : Type'} (t : _107639 -> Prop) (_53777 : type656 _107639 A) (h1 : _53777 = (term76 _107639 A)) : (_53777 t) = (term78 _107639 A t).
Proof. exact (EQ_MP (@lem4523547 _107639 A _53777 t) (@lem4523544 _107639 A t _53777 h1)). Qed.
Lemma lem4523549 {A : Type'} (s : A -> Prop) : s = s.
Proof. exact (eq_refl s). Qed.
Lemma lem4523550 {_107639 A : Type'} (t : _107639 -> Prop) (s : A -> Prop) (_53777 : type656 _107639 A) (h1 : _53777 = (term76 _107639 A)) : (_53777 t s) = (term80 _107639 A t s).
Proof. exact (MK_COMB (@lem4523548 _107639 A t _53777 h1) (@lem4523549 A s)). Qed.
Lemma lem4523551 {_107639 A : Type'} (t : _107639 -> Prop) (s : A -> Prop) : (term80 _107639 A t s) = (term81 _107639 A t s).
Proof. exact (eq_refl (term80 _107639 A t s)). Qed.
Lemma lem4523552 {_107639 A : Type'} (_53777 : type656 _107639 A) (t : _107639 -> Prop) (s : A -> Prop) : (term82 _107639 A _53777 t s) = (term82 _107639 A _53777 t s).
Proof. exact (eq_refl (term82 _107639 A _53777 t s)). Qed.
Lemma lem4523553 {_107639 A : Type'} (_53777 : type656 _107639 A) (t : _107639 -> Prop) (s : A -> Prop) : ((_53777 t s) = (term80 _107639 A t s)) = ((_53777 t s) = (term81 _107639 A t s)).
Proof. exact (MK_COMB (@lem4523552 _107639 A _53777 t s) (@lem4523551 _107639 A t s)). Qed.
Lemma lem4523554 {_107639 A : Type'} (t : _107639 -> Prop) (s : A -> Prop) (_53777 : type656 _107639 A) (h1 : _53777 = (term76 _107639 A)) : (_53777 t s) = (term81 _107639 A t s).
Proof. exact (EQ_MP (@lem4523553 _107639 A _53777 t s) (@lem4523550 _107639 A t s _53777 h1)). Qed.
Lemma lem4523555 {_107639 : Type'} (d : _107639) : d = d.
Proof. exact (eq_refl d). Qed.
Lemma lem4523556 {_107639 A : Type'} (t : _107639 -> Prop) (s : A -> Prop) (d : _107639) (_53777 : type656 _107639 A) (h1 : _53777 = (term76 _107639 A)) : (_53777 t s d) = (term83 _107639 A t s d).
Proof. exact (MK_COMB (@lem4523554 _107639 A t s _53777 h1) (@lem4523555 _107639 d)). Qed.
Lemma lem4523557 {_107639 A : Type'} (t : _107639 -> Prop) (s : A -> Prop) (d : _107639) : (term83 _107639 A t s d) = (term84 _107639 A t s d).
Proof. exact (eq_refl (term83 _107639 A t s d)). Qed.
Lemma lem4523558 {_107639 A : Type'} (_53777 : type656 _107639 A) (t : _107639 -> Prop) (s : A -> Prop) (d : _107639) : (term85 _107639 A _53777 t s d) = (term85 _107639 A _53777 t s d).
Proof. exact (eq_refl (term85 _107639 A _53777 t s d)). Qed.
Lemma lem4523559 {_107639 A : Type'} (_53777 : type656 _107639 A) (t : _107639 -> Prop) (s : A -> Prop) (d : _107639) : ((_53777 t s d) = (term83 _107639 A t s d)) = ((_53777 t s d) = (term84 _107639 A t s d)).
Proof. exact (MK_COMB (@lem4523558 _107639 A _53777 t s d) (@lem4523557 _107639 A t s d)). Qed.
Lemma lem4523560 {_107639 A : Type'} (t : _107639 -> Prop) (s : A -> Prop) (d : _107639) (_53777 : type656 _107639 A) (h1 : _53777 = (term76 _107639 A)) : (_53777 t s d) = (term84 _107639 A t s d).
Proof. exact (EQ_MP (@lem4523559 _107639 A _53777 t s d) (@lem4523556 _107639 A t s d _53777 h1)). Qed.
Lemma lem4523566 (n : nat) (m : nat) : (Nat.pow n m) = (Nat.pow n m).
Proof. exact (eq_refl (Nat.pow n m)). Qed.
Lemma lem4523570 {A : Type'} (f : A -> nat) : f = f.
Proof. exact (eq_refl f). Qed.
Lemma lem4523587 {A : Type'} (s : A -> Prop) (f : A -> nat) (x : A) (d : nat) : (term86 A s f x d) = (term86 A s f x d).
Proof. exact (eq_refl (term86 A s f x d)). Qed.
Lemma lem4523588 {A : Type'} (s : A -> Prop) (f : A -> nat) (d : nat) : (term87 A s f d) = (term87 A s f d).
Proof. exact (fun_ext (fun x : A => @lem4523587 A s f x d)). Qed.
Lemma lem4523589 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem4523590 {A : Type'} (s : A -> Prop) (f : A -> nat) (d : nat) : (term88 A s f d) = (term88 A s f d).
Proof. exact (MK_COMB (@lem4523589 A) (@lem4523588 A s f d)). Qed.
Lemma lem4523605 {A : Type'} (s : A -> Prop) (f : A -> nat) (x : A) (t : nat -> Prop) : (term89 A s f x t) = (term89 A s f x t).
Proof. exact (eq_refl (term89 A s f x t)). Qed.
Lemma lem4523606 {A : Type'} (s : A -> Prop) (f : A -> nat) (t : nat -> Prop) : (term90 A s f t) = (term90 A s f t).
Proof. exact (fun_ext (fun x : A => @lem4523605 A s f x t)). Qed.
Lemma lem4523607 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem4523608 {A : Type'} (s : A -> Prop) (f : A -> nat) (t : nat -> Prop) : (term91 A s f t) = (term91 A s f t).
Proof. exact (MK_COMB (@lem4523607 A) (@lem4523606 A s f t)). Qed.
Lemma lem4523609 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4523610 {A : Type'} (s : A -> Prop) (f : A -> nat) (t : nat -> Prop) : (term92 A s f t) = (term92 A s f t).
Proof. exact (MK_COMB (@lem4523609) (@lem4523608 A s f t)). Qed.
Lemma lem4523611 {A : Type'} (t : nat -> Prop) (s : A -> Prop) (f : A -> nat) (d : nat) : (term93 A t s f d) = (term93 A t s f d).
Proof. exact (MK_COMB (@lem4523610 A s f t) (@lem4523590 A s f d)). Qed.
Lemma lem4523614 {A : Type'} (GEN_PVAR_148 : A -> nat) : (@SETSPEC (A -> nat) GEN_PVAR_148) = (@SETSPEC (A -> nat) GEN_PVAR_148).
Proof. exact (eq_refl (@SETSPEC (A -> nat) GEN_PVAR_148)). Qed.
Lemma lem4523615 {A : Type'} (GEN_PVAR_148 : A -> nat) (t : nat -> Prop) (s : A -> Prop) (f : A -> nat) (d : nat) : (term94 A GEN_PVAR_148 t s f d) = (term94 A GEN_PVAR_148 t s f d).
Proof. exact (MK_COMB (@lem4523614 A GEN_PVAR_148) (@lem4523611 A t s f d)). Qed.
Lemma lem4523616 {A : Type'} (GEN_PVAR_148 : A -> nat) (t : nat -> Prop) (s : A -> Prop) (d : nat) (f : A -> nat) : (term95 A GEN_PVAR_148 t s d f) = (term95 A GEN_PVAR_148 t s d f).
Proof. exact (MK_COMB (@lem4523615 A GEN_PVAR_148 t s f d) (@lem4523570 A f)). Qed.
Lemma lem4523617 {A : Type'} (GEN_PVAR_148 : A -> nat) (t : nat -> Prop) (s : A -> Prop) (d : nat) : (term96 A GEN_PVAR_148 t s d) = (term96 A GEN_PVAR_148 t s d).
Proof. exact (fun_ext (fun f : A -> nat => @lem4523616 A GEN_PVAR_148 t s d f)). Qed.
Lemma lem4523618 {A : Type'} : (@ex (A -> nat)) = (@ex (A -> nat)).
Proof. exact (eq_refl (@ex (A -> nat))). Qed.
Lemma lem4523619 {A : Type'} (GEN_PVAR_148 : A -> nat) (t : nat -> Prop) (s : A -> Prop) (d : nat) : (term97 A GEN_PVAR_148 t s d) = (term97 A GEN_PVAR_148 t s d).
Proof. exact (MK_COMB (@lem4523618 A) (@lem4523617 A GEN_PVAR_148 t s d)). Qed.
Lemma lem4523620 {A : Type'} (t : nat -> Prop) (s : A -> Prop) (d : nat) : (term98 A t s d) = (term98 A t s d).
Proof. exact (fun_ext (fun GEN_PVAR_148 : A -> nat => @lem4523619 A GEN_PVAR_148 t s d)). Qed.
Lemma lem4523621 {A : Type'} : (@GSPEC (A -> nat)) = (@GSPEC (A -> nat)).
Proof. exact (eq_refl (@GSPEC (A -> nat))). Qed.
Lemma lem4523622 {A : Type'} (t : nat -> Prop) (s : A -> Prop) (d : nat) : (term99 A t s d) = (term99 A t s d).
Proof. exact (MK_COMB (@lem4523621 A) (@lem4523620 A t s d)). Qed.
Lemma lem4523623 {A : Type'} : (@HAS_SIZE (A -> nat)) = (@HAS_SIZE (A -> nat)).
Proof. exact (eq_refl (@HAS_SIZE (A -> nat))). Qed.
Lemma lem4523624 {A : Type'} (t : nat -> Prop) (s : A -> Prop) (d : nat) : (term100 A t s d) = (term100 A t s d).
Proof. exact (MK_COMB (@lem4523623 A) (@lem4523622 A t s d)). Qed.
Lemma lem4523625 {A : Type'} (t : nat -> Prop) (s : A -> Prop) (d : nat) (n : nat) (m : nat) : (term101 A t s d n m) = (term101 A t s d n m).
Proof. exact (MK_COMB (@lem4523624 A t s d) (@lem4523566 n m)). Qed.
Lemma lem4523640 {A : Type'} (s : A -> Prop) (m : nat) (t : nat -> Prop) (n : nat) : (term102 A s m t n) = (term102 A s m t n).
Proof. exact (eq_refl (term102 A s m t n)). Qed.
Lemma lem4523641 {A : Type'} (t : nat -> Prop) (s : A -> Prop) (d : nat) (n : nat) (m : nat) : (term103 A t s d n m) = (term103 A t s d n m).
Proof. exact (MK_COMB (@lem4523640 A s m t n) (@lem4523625 A t s d n m)). Qed.
Lemma lem4523642 {A : Type'} (t : nat -> Prop) (d : nat) (n : nat) (m : nat) : (term104 A t d n m) = (term104 A t d n m).
Proof. exact (fun_ext (fun s : A -> Prop => @lem4523641 A t s d n m)). Qed.
Lemma lem4523643 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem4523644 {A : Type'} (t : nat -> Prop) (d : nat) (n : nat) (m : nat) : (term105 A t d n m) = (term105 A t d n m).
Proof. exact (MK_COMB (@lem4523643 A) (@lem4523642 A t d n m)). Qed.
Lemma lem4523645 {A : Type'} (t : nat -> Prop) (d : nat) (n : nat) : (term106 A t d n) = (term106 A t d n).
Proof. exact (fun_ext (fun m : nat => @lem4523644 A t d n m)). Qed.
Lemma lem4523646 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4523647 {A : Type'} (t : nat -> Prop) (d : nat) (n : nat) : (term107 A t d n) = (term107 A t d n).
Proof. exact (MK_COMB (@lem4523646) (@lem4523645 A t d n)). Qed.
Lemma lem4523648 {A : Type'} (d : nat) (n : nat) : (term108 A d n) = (term108 A d n).
Proof. exact (fun_ext (fun t : nat -> Prop => @lem4523647 A t d n)). Qed.
Lemma lem4523649 : (@all (nat -> Prop)) = (@all (nat -> Prop)).
Proof. exact (eq_refl (@all (nat -> Prop))). Qed.
Lemma lem4523650 {A : Type'} (d : nat) (n : nat) : (term109 A d n) = (term109 A d n).
Proof. exact (MK_COMB (@lem4523649) (@lem4523648 A d n)). Qed.
Lemma lem4523651 {A : Type'} (d : nat) : (term110 A d) = (term110 A d).
Proof. exact (fun_ext (fun n : nat => @lem4523650 A d n)). Qed.
Lemma lem4523652 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4523653 {A : Type'} (d : nat) : (term111 A d) = (term111 A d).
Proof. exact (MK_COMB (@lem4523652) (@lem4523651 A d)). Qed.
Lemma lem4523654 {A : Type'} : (term112 A) = (term112 A).
Proof. exact (fun_ext (fun d : nat => @lem4523653 A d)). Qed.
Lemma lem4523655 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4523656 {A : Type'} : (term13 A) = (term13 A).
Proof. exact (MK_COMB (@lem4523655) (@lem4523654 A)). Qed.
Lemma lem4523657 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem4523658 {A : Type'} : (term24 A) = (term24 A).
Proof. exact (MK_COMB (@lem4523657) (@lem4523656 A)). Qed.
Lemma lem4523663 (n : nat) (m : nat) : (Nat.pow n m) = (Nat.pow n m).
Proof. exact (eq_refl (Nat.pow n m)). Qed.
Lemma lem4523667 {A B : Type'} (f : A -> B) : f = f.
Proof. exact (eq_refl f). Qed.
Lemma lem4523684 {A B : Type'} (s : A -> Prop) (f : A -> B) (x : A) (d : B) : (term113 A B s f x d) = (term113 A B s f x d).
Proof. exact (eq_refl (term113 A B s f x d)). Qed.
Lemma lem4523685 {A B : Type'} (s : A -> Prop) (f : A -> B) (d : B) : (term114 A B s f d) = (term114 A B s f d).
Proof. exact (fun_ext (fun x : A => @lem4523684 A B s f x d)). Qed.
Lemma lem4523686 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem4523687 {A B : Type'} (s : A -> Prop) (f : A -> B) (d : B) : (term115 A B s f d) = (term115 A B s f d).
Proof. exact (MK_COMB (@lem4523686 A) (@lem4523685 A B s f d)). Qed.
Lemma lem4523702 {A B : Type'} (s : A -> Prop) (f : A -> B) (x : A) (t : B -> Prop) : (term116 A B s f x t) = (term116 A B s f x t).
Proof. exact (eq_refl (term116 A B s f x t)). Qed.
Lemma lem4523703 {A B : Type'} (s : A -> Prop) (f : A -> B) (t : B -> Prop) : (term117 A B s f t) = (term117 A B s f t).
Proof. exact (fun_ext (fun x : A => @lem4523702 A B s f x t)). Qed.
Lemma lem4523704 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem4523705 {A B : Type'} (s : A -> Prop) (f : A -> B) (t : B -> Prop) : (term118 A B s f t) = (term118 A B s f t).
Proof. exact (MK_COMB (@lem4523704 A) (@lem4523703 A B s f t)). Qed.
Lemma lem4523706 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4523707 {A B : Type'} (s : A -> Prop) (f : A -> B) (t : B -> Prop) : (term119 A B s f t) = (term119 A B s f t).
Proof. exact (MK_COMB (@lem4523706) (@lem4523705 A B s f t)). Qed.
Lemma lem4523708 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (f : A -> B) (d : B) : (term120 A B t s f d) = (term120 A B t s f d).
Proof. exact (MK_COMB (@lem4523707 A B s f t) (@lem4523687 A B s f d)). Qed.
Lemma lem4523711 {A B : Type'} (GEN_PVAR_148 : A -> B) : (@SETSPEC (A -> B) GEN_PVAR_148) = (@SETSPEC (A -> B) GEN_PVAR_148).
Proof. exact (eq_refl (@SETSPEC (A -> B) GEN_PVAR_148)). Qed.
Lemma lem4523712 {A B : Type'} (GEN_PVAR_148 : A -> B) (t : B -> Prop) (s : A -> Prop) (f : A -> B) (d : B) : (term121 A B GEN_PVAR_148 t s f d) = (term121 A B GEN_PVAR_148 t s f d).
Proof. exact (MK_COMB (@lem4523711 A B GEN_PVAR_148) (@lem4523708 A B t s f d)). Qed.
Lemma lem4523713 {A B : Type'} (GEN_PVAR_148 : A -> B) (t : B -> Prop) (s : A -> Prop) (d : B) (f : A -> B) : (term122 A B GEN_PVAR_148 t s d f) = (term122 A B GEN_PVAR_148 t s d f).
Proof. exact (MK_COMB (@lem4523712 A B GEN_PVAR_148 t s f d) (@lem4523667 A B f)). Qed.
Lemma lem4523714 {A B : Type'} (GEN_PVAR_148 : A -> B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term123 A B GEN_PVAR_148 t s d) = (term123 A B GEN_PVAR_148 t s d).
Proof. exact (fun_ext (fun f : A -> B => @lem4523713 A B GEN_PVAR_148 t s d f)). Qed.
Lemma lem4523715 {A B : Type'} : (@ex (A -> B)) = (@ex (A -> B)).
Proof. exact (eq_refl (@ex (A -> B))). Qed.
Lemma lem4523716 {A B : Type'} (GEN_PVAR_148 : A -> B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term124 A B GEN_PVAR_148 t s d) = (term124 A B GEN_PVAR_148 t s d).
Proof. exact (MK_COMB (@lem4523715 A B) (@lem4523714 A B GEN_PVAR_148 t s d)). Qed.
Lemma lem4523717 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (d : B) : (term125 A B t s d) = (term125 A B t s d).
Proof. exact (fun_ext (fun GEN_PVAR_148 : A -> B => @lem4523716 A B GEN_PVAR_148 t s d)). Qed.
Lemma lem4523718 {A B : Type'} : (@GSPEC (A -> B)) = (@GSPEC (A -> B)).
Proof. exact (eq_refl (@GSPEC (A -> B))). Qed.
Lemma lem4523719 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (d : B) : (term126 A B t s d) = (term126 A B t s d).
Proof. exact (MK_COMB (@lem4523718 A B) (@lem4523717 A B t s d)). Qed.
Lemma lem4523720 {A B : Type'} : (@HAS_SIZE (A -> B)) = (@HAS_SIZE (A -> B)).
Proof. exact (eq_refl (@HAS_SIZE (A -> B))). Qed.
Lemma lem4523721 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (d : B) : (term127 A B t s d) = (term127 A B t s d).
Proof. exact (MK_COMB (@lem4523720 A B) (@lem4523719 A B t s d)). Qed.
Lemma lem4523722 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (d : B) (n : nat) (m : nat) : (term128 A B t s d n m) = (term128 A B t s d n m).
Proof. exact (MK_COMB (@lem4523721 A B t s d) (@lem4523663 n m)). Qed.
Lemma lem4523737 {A B : Type'} (s : A -> Prop) (m : nat) (t : B -> Prop) (n : nat) : (term129 A B s m t n) = (term129 A B s m t n).
Proof. exact (eq_refl (term129 A B s m t n)). Qed.
Lemma lem4523738 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (d : B) (n : nat) (m : nat) : (term130 A B t s d n m) = (term130 A B t s d n m).
Proof. exact (MK_COMB (@lem4523737 A B s m t n) (@lem4523722 A B t s d n m)). Qed.
Lemma lem4523739 {A B : Type'} (t : B -> Prop) (d : B) (n : nat) (m : nat) : (term131 A B t d n m) = (term131 A B t d n m).
Proof. exact (fun_ext (fun s : A -> Prop => @lem4523738 A B t s d n m)). Qed.
Lemma lem4523740 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem4523741 {A B : Type'} (t : B -> Prop) (d : B) (n : nat) (m : nat) : (term132 A B t d n m) = (term132 A B t d n m).
Proof. exact (MK_COMB (@lem4523740 A) (@lem4523739 A B t d n m)). Qed.
Lemma lem4523742 {A B : Type'} (t : B -> Prop) (d : B) (n : nat) : (term133 A B t d n) = (term133 A B t d n).
Proof. exact (fun_ext (fun m : nat => @lem4523741 A B t d n m)). Qed.
Lemma lem4523743 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4523744 {A B : Type'} (t : B -> Prop) (d : B) (n : nat) : (term134 A B t d n) = (term134 A B t d n).
Proof. exact (MK_COMB (@lem4523743) (@lem4523742 A B t d n)). Qed.
Lemma lem4523745 {A B : Type'} (d : B) (n : nat) : (term135 A B d n) = (term135 A B d n).
Proof. exact (fun_ext (fun t : B -> Prop => @lem4523744 A B t d n)). Qed.
Lemma lem4523746 {B : Type'} : (@all (B -> Prop)) = (@all (B -> Prop)).
Proof. exact (eq_refl (@all (B -> Prop))). Qed.
Lemma lem4523747 {A B : Type'} (d : B) (n : nat) : (term136 A B d n) = (term136 A B d n).
Proof. exact (MK_COMB (@lem4523746 B) (@lem4523745 A B d n)). Qed.
Lemma lem4523748 {A B : Type'} (d : B) : (term137 A B d) = (term137 A B d).
Proof. exact (fun_ext (fun n : nat => @lem4523747 A B d n)). Qed.
Lemma lem4523749 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4523750 {A B : Type'} (d : B) : (term138 A B d) = (term138 A B d).
Proof. exact (MK_COMB (@lem4523749) (@lem4523748 A B d)). Qed.
Lemma lem4523751 {A B : Type'} : (term139 A B) = (term139 A B).
Proof. exact (fun_ext (fun d : B => @lem4523750 A B d)). Qed.
Lemma lem4523752 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem4523753 {A B : Type'} : (term12 A B) = (term12 A B).
Proof. exact (MK_COMB (@lem4523752 B) (@lem4523751 A B)). Qed.
Lemma lem4523754 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4523755 {A B : Type'} : (term25 A B) = (term25 A B).
Proof. exact (MK_COMB (@lem4523754) (@lem4523753 A B)). Qed.
Lemma lem4523756 {A B : Type'} : (term27 A B) = (term27 A B).
Proof. exact (MK_COMB (@lem4523755 A B) (@lem4523658 A)). Qed.
Lemma lem4523761 (n : nat) (m : nat) : (Nat.pow n m) = (Nat.pow n m).
Proof. exact (eq_refl (Nat.pow n m)). Qed.
Lemma lem4523765 {_107642 B : Type'} (f : _107642 -> B) : f = f.
Proof. exact (eq_refl f). Qed.
Lemma lem4523782 {_107642 B : Type'} (s : _107642 -> Prop) (f : _107642 -> B) (x : _107642) (d : B) : (term113 _107642 B s f x d) = (term113 _107642 B s f x d).
Proof. exact (eq_refl (term113 _107642 B s f x d)). Qed.
Lemma lem4523783 {_107642 B : Type'} (s : _107642 -> Prop) (f : _107642 -> B) (d : B) : (term114 _107642 B s f d) = (term114 _107642 B s f d).
Proof. exact (fun_ext (fun x : _107642 => @lem4523782 _107642 B s f x d)). Qed.
Lemma lem4523784 {_107642 : Type'} : (@all _107642) = (@all _107642).
Proof. exact (eq_refl (@all _107642)). Qed.
Lemma lem4523785 {_107642 B : Type'} (s : _107642 -> Prop) (f : _107642 -> B) (d : B) : (term115 _107642 B s f d) = (term115 _107642 B s f d).
Proof. exact (MK_COMB (@lem4523784 _107642) (@lem4523783 _107642 B s f d)). Qed.
Lemma lem4523800 {_107642 B : Type'} (s : _107642 -> Prop) (f : _107642 -> B) (x : _107642) (t : B -> Prop) : (term116 _107642 B s f x t) = (term116 _107642 B s f x t).
Proof. exact (eq_refl (term116 _107642 B s f x t)). Qed.
Lemma lem4523801 {_107642 B : Type'} (s : _107642 -> Prop) (f : _107642 -> B) (t : B -> Prop) : (term117 _107642 B s f t) = (term117 _107642 B s f t).
Proof. exact (fun_ext (fun x : _107642 => @lem4523800 _107642 B s f x t)). Qed.
Lemma lem4523802 {_107642 : Type'} : (@all _107642) = (@all _107642).
Proof. exact (eq_refl (@all _107642)). Qed.
Lemma lem4523803 {_107642 B : Type'} (s : _107642 -> Prop) (f : _107642 -> B) (t : B -> Prop) : (term118 _107642 B s f t) = (term118 _107642 B s f t).
Proof. exact (MK_COMB (@lem4523802 _107642) (@lem4523801 _107642 B s f t)). Qed.
Lemma lem4523804 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4523805 {_107642 B : Type'} (s : _107642 -> Prop) (f : _107642 -> B) (t : B -> Prop) : (term119 _107642 B s f t) = (term119 _107642 B s f t).
Proof. exact (MK_COMB (@lem4523804) (@lem4523803 _107642 B s f t)). Qed.
Lemma lem4523806 {_107642 B : Type'} (t : B -> Prop) (s : _107642 -> Prop) (f : _107642 -> B) (d : B) : (term120 _107642 B t s f d) = (term120 _107642 B t s f d).
Proof. exact (MK_COMB (@lem4523805 _107642 B s f t) (@lem4523785 _107642 B s f d)). Qed.
Lemma lem4523809 {_107642 B : Type'} (GEN_PVAR_148 : _107642 -> B) : (@SETSPEC (_107642 -> B) GEN_PVAR_148) = (@SETSPEC (_107642 -> B) GEN_PVAR_148).
Proof. exact (eq_refl (@SETSPEC (_107642 -> B) GEN_PVAR_148)). Qed.
Lemma lem4523810 {_107642 B : Type'} (GEN_PVAR_148 : _107642 -> B) (t : B -> Prop) (s : _107642 -> Prop) (f : _107642 -> B) (d : B) : (term121 _107642 B GEN_PVAR_148 t s f d) = (term121 _107642 B GEN_PVAR_148 t s f d).
Proof. exact (MK_COMB (@lem4523809 _107642 B GEN_PVAR_148) (@lem4523806 _107642 B t s f d)). Qed.
Lemma lem4523811 {_107642 B : Type'} (GEN_PVAR_148 : _107642 -> B) (t : B -> Prop) (s : _107642 -> Prop) (d : B) (f : _107642 -> B) : (term122 _107642 B GEN_PVAR_148 t s d f) = (term122 _107642 B GEN_PVAR_148 t s d f).
Proof. exact (MK_COMB (@lem4523810 _107642 B GEN_PVAR_148 t s f d) (@lem4523765 _107642 B f)). Qed.
Lemma lem4523812 {_107642 B : Type'} (GEN_PVAR_148 : _107642 -> B) (t : B -> Prop) (s : _107642 -> Prop) (d : B) : (term123 _107642 B GEN_PVAR_148 t s d) = (term123 _107642 B GEN_PVAR_148 t s d).
Proof. exact (fun_ext (fun f : _107642 -> B => @lem4523811 _107642 B GEN_PVAR_148 t s d f)). Qed.
Lemma lem4523813 {_107642 B : Type'} : (@ex (_107642 -> B)) = (@ex (_107642 -> B)).
Proof. exact (eq_refl (@ex (_107642 -> B))). Qed.
Lemma lem4523814 {_107642 B : Type'} (GEN_PVAR_148 : _107642 -> B) (t : B -> Prop) (s : _107642 -> Prop) (d : B) : (term124 _107642 B GEN_PVAR_148 t s d) = (term124 _107642 B GEN_PVAR_148 t s d).
Proof. exact (MK_COMB (@lem4523813 _107642 B) (@lem4523812 _107642 B GEN_PVAR_148 t s d)). Qed.
Lemma lem4523815 {_107642 B : Type'} (t : B -> Prop) (s : _107642 -> Prop) (d : B) : (term125 _107642 B t s d) = (term125 _107642 B t s d).
Proof. exact (fun_ext (fun GEN_PVAR_148 : _107642 -> B => @lem4523814 _107642 B GEN_PVAR_148 t s d)). Qed.
Lemma lem4523816 {_107642 B : Type'} : (@GSPEC (_107642 -> B)) = (@GSPEC (_107642 -> B)).
Proof. exact (eq_refl (@GSPEC (_107642 -> B))). Qed.
Lemma lem4523817 {_107642 B : Type'} (t : B -> Prop) (s : _107642 -> Prop) (d : B) : (term126 _107642 B t s d) = (term126 _107642 B t s d).
Proof. exact (MK_COMB (@lem4523816 _107642 B) (@lem4523815 _107642 B t s d)). Qed.
Lemma lem4523818 {_107642 B : Type'} : (@HAS_SIZE (_107642 -> B)) = (@HAS_SIZE (_107642 -> B)).
Proof. exact (eq_refl (@HAS_SIZE (_107642 -> B))). Qed.
Lemma lem4523819 {_107642 B : Type'} (t : B -> Prop) (s : _107642 -> Prop) (d : B) : (term127 _107642 B t s d) = (term127 _107642 B t s d).
Proof. exact (MK_COMB (@lem4523818 _107642 B) (@lem4523817 _107642 B t s d)). Qed.
Lemma lem4523820 {_107642 B : Type'} (t : B -> Prop) (s : _107642 -> Prop) (d : B) (n : nat) (m : nat) : (term128 _107642 B t s d n m) = (term128 _107642 B t s d n m).
Proof. exact (MK_COMB (@lem4523819 _107642 B t s d) (@lem4523761 n m)). Qed.
Lemma lem4523835 {_107642 B : Type'} (s : _107642 -> Prop) (m : nat) (t : B -> Prop) (n : nat) : (term129 _107642 B s m t n) = (term129 _107642 B s m t n).
Proof. exact (eq_refl (term129 _107642 B s m t n)). Qed.
Lemma lem4523836 {_107642 B : Type'} (t : B -> Prop) (s : _107642 -> Prop) (d : B) (n : nat) (m : nat) : (term130 _107642 B t s d n m) = (term130 _107642 B t s d n m).
Proof. exact (MK_COMB (@lem4523835 _107642 B s m t n) (@lem4523820 _107642 B t s d n m)). Qed.
Lemma lem4523837 {_107642 B : Type'} (t : B -> Prop) (d : B) (n : nat) (m : nat) : (term131 _107642 B t d n m) = (term131 _107642 B t d n m).
Proof. exact (fun_ext (fun s : _107642 -> Prop => @lem4523836 _107642 B t s d n m)). Qed.
Lemma lem4523838 {_107642 : Type'} : (@all (_107642 -> Prop)) = (@all (_107642 -> Prop)).
Proof. exact (eq_refl (@all (_107642 -> Prop))). Qed.
Lemma lem4523839 {_107642 B : Type'} (t : B -> Prop) (d : B) (n : nat) (m : nat) : (term132 _107642 B t d n m) = (term132 _107642 B t d n m).
Proof. exact (MK_COMB (@lem4523838 _107642) (@lem4523837 _107642 B t d n m)). Qed.
Lemma lem4523840 {_107642 B : Type'} (t : B -> Prop) (d : B) (n : nat) : (term133 _107642 B t d n) = (term133 _107642 B t d n).
Proof. exact (fun_ext (fun m : nat => @lem4523839 _107642 B t d n m)). Qed.
Lemma lem4523841 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4523842 {_107642 B : Type'} (t : B -> Prop) (d : B) (n : nat) : (term134 _107642 B t d n) = (term134 _107642 B t d n).
Proof. exact (MK_COMB (@lem4523841) (@lem4523840 _107642 B t d n)). Qed.
Lemma lem4523843 {_107642 B : Type'} (d : B) (n : nat) : (term135 _107642 B d n) = (term135 _107642 B d n).
Proof. exact (fun_ext (fun t : B -> Prop => @lem4523842 _107642 B t d n)). Qed.
Lemma lem4523844 {B : Type'} : (@all (B -> Prop)) = (@all (B -> Prop)).
Proof. exact (eq_refl (@all (B -> Prop))). Qed.
Lemma lem4523845 {_107642 B : Type'} (d : B) (n : nat) : (term136 _107642 B d n) = (term136 _107642 B d n).
Proof. exact (MK_COMB (@lem4523844 B) (@lem4523843 _107642 B d n)). Qed.
Lemma lem4523846 {_107642 B : Type'} (d : B) : (term137 _107642 B d) = (term137 _107642 B d).
Proof. exact (fun_ext (fun n : nat => @lem4523845 _107642 B d n)). Qed.
Lemma lem4523847 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4523848 {_107642 B : Type'} (d : B) : (term138 _107642 B d) = (term138 _107642 B d).
Proof. exact (MK_COMB (@lem4523847) (@lem4523846 _107642 B d)). Qed.
Lemma lem4523849 {_107642 B : Type'} : (term139 _107642 B) = (term139 _107642 B).
Proof. exact (fun_ext (fun d : B => @lem4523848 _107642 B d)). Qed.
Lemma lem4523850 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem4523851 {_107642 B : Type'} : (term12 _107642 B) = (term12 _107642 B).
Proof. exact (MK_COMB (@lem4523850 B) (@lem4523849 _107642 B)). Qed.
Lemma lem4523852 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4523853 {_107642 B : Type'} : (term25 _107642 B) = (term25 _107642 B).
Proof. exact (MK_COMB (@lem4523852) (@lem4523851 _107642 B)). Qed.
Lemma lem4523854 {_107642 A B : Type'} : (term29 _107642 A B) = (term29 _107642 A B).
Proof. exact (MK_COMB (@lem4523853 _107642 B) (@lem4523756 A B)). Qed.
Lemma lem4523859 (n : nat) (m : nat) : (Nat.pow n m) = (Nat.pow n m).
Proof. exact (eq_refl (Nat.pow n m)). Qed.
Lemma lem4523863 {_107639 B : Type'} (f : _107639 -> B) : f = f.
Proof. exact (eq_refl f). Qed.
Lemma lem4523880 {_107639 B : Type'} (s : _107639 -> Prop) (f : _107639 -> B) (x : _107639) (d : B) : (term113 _107639 B s f x d) = (term113 _107639 B s f x d).
Proof. exact (eq_refl (term113 _107639 B s f x d)). Qed.
Lemma lem4523881 {_107639 B : Type'} (s : _107639 -> Prop) (f : _107639 -> B) (d : B) : (term114 _107639 B s f d) = (term114 _107639 B s f d).
Proof. exact (fun_ext (fun x : _107639 => @lem4523880 _107639 B s f x d)). Qed.
Lemma lem4523882 {_107639 : Type'} : (@all _107639) = (@all _107639).
Proof. exact (eq_refl (@all _107639)). Qed.
Lemma lem4523883 {_107639 B : Type'} (s : _107639 -> Prop) (f : _107639 -> B) (d : B) : (term115 _107639 B s f d) = (term115 _107639 B s f d).
Proof. exact (MK_COMB (@lem4523882 _107639) (@lem4523881 _107639 B s f d)). Qed.
Lemma lem4523898 {_107639 B : Type'} (s : _107639 -> Prop) (f : _107639 -> B) (x : _107639) (t : B -> Prop) : (term116 _107639 B s f x t) = (term116 _107639 B s f x t).
Proof. exact (eq_refl (term116 _107639 B s f x t)). Qed.
Lemma lem4523899 {_107639 B : Type'} (s : _107639 -> Prop) (f : _107639 -> B) (t : B -> Prop) : (term117 _107639 B s f t) = (term117 _107639 B s f t).
Proof. exact (fun_ext (fun x : _107639 => @lem4523898 _107639 B s f x t)). Qed.
Lemma lem4523900 {_107639 : Type'} : (@all _107639) = (@all _107639).
Proof. exact (eq_refl (@all _107639)). Qed.
Lemma lem4523901 {_107639 B : Type'} (s : _107639 -> Prop) (f : _107639 -> B) (t : B -> Prop) : (term118 _107639 B s f t) = (term118 _107639 B s f t).
Proof. exact (MK_COMB (@lem4523900 _107639) (@lem4523899 _107639 B s f t)). Qed.
Lemma lem4523902 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4523903 {_107639 B : Type'} (s : _107639 -> Prop) (f : _107639 -> B) (t : B -> Prop) : (term119 _107639 B s f t) = (term119 _107639 B s f t).
Proof. exact (MK_COMB (@lem4523902) (@lem4523901 _107639 B s f t)). Qed.
Lemma lem4523904 {_107639 B : Type'} (t : B -> Prop) (s : _107639 -> Prop) (f : _107639 -> B) (d : B) : (term120 _107639 B t s f d) = (term120 _107639 B t s f d).
Proof. exact (MK_COMB (@lem4523903 _107639 B s f t) (@lem4523883 _107639 B s f d)). Qed.
Lemma lem4523907 {_107639 B : Type'} (GEN_PVAR_148 : _107639 -> B) : (@SETSPEC (_107639 -> B) GEN_PVAR_148) = (@SETSPEC (_107639 -> B) GEN_PVAR_148).
Proof. exact (eq_refl (@SETSPEC (_107639 -> B) GEN_PVAR_148)). Qed.
Lemma lem4523908 {_107639 B : Type'} (GEN_PVAR_148 : _107639 -> B) (t : B -> Prop) (s : _107639 -> Prop) (f : _107639 -> B) (d : B) : (term121 _107639 B GEN_PVAR_148 t s f d) = (term121 _107639 B GEN_PVAR_148 t s f d).
Proof. exact (MK_COMB (@lem4523907 _107639 B GEN_PVAR_148) (@lem4523904 _107639 B t s f d)). Qed.
Lemma lem4523909 {_107639 B : Type'} (GEN_PVAR_148 : _107639 -> B) (t : B -> Prop) (s : _107639 -> Prop) (d : B) (f : _107639 -> B) : (term122 _107639 B GEN_PVAR_148 t s d f) = (term122 _107639 B GEN_PVAR_148 t s d f).
Proof. exact (MK_COMB (@lem4523908 _107639 B GEN_PVAR_148 t s f d) (@lem4523863 _107639 B f)). Qed.
Lemma lem4523910 {_107639 B : Type'} (GEN_PVAR_148 : _107639 -> B) (t : B -> Prop) (s : _107639 -> Prop) (d : B) : (term123 _107639 B GEN_PVAR_148 t s d) = (term123 _107639 B GEN_PVAR_148 t s d).
Proof. exact (fun_ext (fun f : _107639 -> B => @lem4523909 _107639 B GEN_PVAR_148 t s d f)). Qed.
Lemma lem4523911 {_107639 B : Type'} : (@ex (_107639 -> B)) = (@ex (_107639 -> B)).
Proof. exact (eq_refl (@ex (_107639 -> B))). Qed.
Lemma lem4523912 {_107639 B : Type'} (GEN_PVAR_148 : _107639 -> B) (t : B -> Prop) (s : _107639 -> Prop) (d : B) : (term124 _107639 B GEN_PVAR_148 t s d) = (term124 _107639 B GEN_PVAR_148 t s d).
Proof. exact (MK_COMB (@lem4523911 _107639 B) (@lem4523910 _107639 B GEN_PVAR_148 t s d)). Qed.
Lemma lem4523913 {_107639 B : Type'} (t : B -> Prop) (s : _107639 -> Prop) (d : B) : (term125 _107639 B t s d) = (term125 _107639 B t s d).
Proof. exact (fun_ext (fun GEN_PVAR_148 : _107639 -> B => @lem4523912 _107639 B GEN_PVAR_148 t s d)). Qed.
Lemma lem4523914 {_107639 B : Type'} : (@GSPEC (_107639 -> B)) = (@GSPEC (_107639 -> B)).
Proof. exact (eq_refl (@GSPEC (_107639 -> B))). Qed.
Lemma lem4523915 {_107639 B : Type'} (t : B -> Prop) (s : _107639 -> Prop) (d : B) : (term126 _107639 B t s d) = (term126 _107639 B t s d).
Proof. exact (MK_COMB (@lem4523914 _107639 B) (@lem4523913 _107639 B t s d)). Qed.
Lemma lem4523916 {_107639 B : Type'} : (@HAS_SIZE (_107639 -> B)) = (@HAS_SIZE (_107639 -> B)).
Proof. exact (eq_refl (@HAS_SIZE (_107639 -> B))). Qed.
Lemma lem4523917 {_107639 B : Type'} (t : B -> Prop) (s : _107639 -> Prop) (d : B) : (term127 _107639 B t s d) = (term127 _107639 B t s d).
Proof. exact (MK_COMB (@lem4523916 _107639 B) (@lem4523915 _107639 B t s d)). Qed.
Lemma lem4523918 {_107639 B : Type'} (t : B -> Prop) (s : _107639 -> Prop) (d : B) (n : nat) (m : nat) : (term128 _107639 B t s d n m) = (term128 _107639 B t s d n m).
Proof. exact (MK_COMB (@lem4523917 _107639 B t s d) (@lem4523859 n m)). Qed.
Lemma lem4523933 {_107639 B : Type'} (s : _107639 -> Prop) (m : nat) (t : B -> Prop) (n : nat) : (term129 _107639 B s m t n) = (term129 _107639 B s m t n).
Proof. exact (eq_refl (term129 _107639 B s m t n)). Qed.
Lemma lem4523934 {_107639 B : Type'} (t : B -> Prop) (s : _107639 -> Prop) (d : B) (n : nat) (m : nat) : (term130 _107639 B t s d n m) = (term130 _107639 B t s d n m).
Proof. exact (MK_COMB (@lem4523933 _107639 B s m t n) (@lem4523918 _107639 B t s d n m)). Qed.
Lemma lem4523935 {_107639 B : Type'} (t : B -> Prop) (d : B) (n : nat) (m : nat) : (term131 _107639 B t d n m) = (term131 _107639 B t d n m).
Proof. exact (fun_ext (fun s : _107639 -> Prop => @lem4523934 _107639 B t s d n m)). Qed.
Lemma lem4523936 {_107639 : Type'} : (@all (_107639 -> Prop)) = (@all (_107639 -> Prop)).
Proof. exact (eq_refl (@all (_107639 -> Prop))). Qed.
Lemma lem4523937 {_107639 B : Type'} (t : B -> Prop) (d : B) (n : nat) (m : nat) : (term132 _107639 B t d n m) = (term132 _107639 B t d n m).
Proof. exact (MK_COMB (@lem4523936 _107639) (@lem4523935 _107639 B t d n m)). Qed.
Lemma lem4523938 {_107639 B : Type'} (t : B -> Prop) (d : B) (n : nat) : (term133 _107639 B t d n) = (term133 _107639 B t d n).
Proof. exact (fun_ext (fun m : nat => @lem4523937 _107639 B t d n m)). Qed.
Lemma lem4523939 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4523940 {_107639 B : Type'} (t : B -> Prop) (d : B) (n : nat) : (term134 _107639 B t d n) = (term134 _107639 B t d n).
Proof. exact (MK_COMB (@lem4523939) (@lem4523938 _107639 B t d n)). Qed.
Lemma lem4523941 {_107639 B : Type'} (d : B) (n : nat) : (term135 _107639 B d n) = (term135 _107639 B d n).
Proof. exact (fun_ext (fun t : B -> Prop => @lem4523940 _107639 B t d n)). Qed.
Lemma lem4523942 {B : Type'} : (@all (B -> Prop)) = (@all (B -> Prop)).
Proof. exact (eq_refl (@all (B -> Prop))). Qed.
Lemma lem4523943 {_107639 B : Type'} (d : B) (n : nat) : (term136 _107639 B d n) = (term136 _107639 B d n).
Proof. exact (MK_COMB (@lem4523942 B) (@lem4523941 _107639 B d n)). Qed.
Lemma lem4523944 {_107639 B : Type'} (d : B) : (term137 _107639 B d) = (term137 _107639 B d).
Proof. exact (fun_ext (fun n : nat => @lem4523943 _107639 B d n)). Qed.
Lemma lem4523945 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4523946 {_107639 B : Type'} (d : B) : (term138 _107639 B d) = (term138 _107639 B d).
Proof. exact (MK_COMB (@lem4523945) (@lem4523944 _107639 B d)). Qed.
Lemma lem4523947 {_107639 B : Type'} : (term139 _107639 B) = (term139 _107639 B).
Proof. exact (fun_ext (fun d : B => @lem4523946 _107639 B d)). Qed.
Lemma lem4523948 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem4523949 {_107639 B : Type'} : (term12 _107639 B) = (term12 _107639 B).
Proof. exact (MK_COMB (@lem4523948 B) (@lem4523947 _107639 B)). Qed.
Lemma lem4523950 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4523951 {_107639 B : Type'} : (term25 _107639 B) = (term25 _107639 B).
Proof. exact (MK_COMB (@lem4523950) (@lem4523949 _107639 B)). Qed.
Lemma lem4523952 {_107639 _107642 A B : Type'} : (term31 _107639 _107642 A B) = (term31 _107639 _107642 A B).
Proof. exact (MK_COMB (@lem4523951 _107639 B) (@lem4523854 _107642 A B)). Qed.
Lemma lem4523957 (n : nat) (m : nat) : (Nat.pow n m) = (Nat.pow n m).
Proof. exact (eq_refl (Nat.pow n m)). Qed.
Lemma lem4523961 {_107642 A : Type'} (f : A -> _107642) : f = f.
Proof. exact (eq_refl f). Qed.
Lemma lem4523978 {_107642 A : Type'} (s : A -> Prop) (f : A -> _107642) (x : A) (d : _107642) : (term140 _107642 A s f x d) = (term140 _107642 A s f x d).
Proof. exact (eq_refl (term140 _107642 A s f x d)). Qed.
Lemma lem4523979 {_107642 A : Type'} (s : A -> Prop) (f : A -> _107642) (d : _107642) : (term141 _107642 A s f d) = (term141 _107642 A s f d).
Proof. exact (fun_ext (fun x : A => @lem4523978 _107642 A s f x d)). Qed.
Lemma lem4523980 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem4523981 {_107642 A : Type'} (s : A -> Prop) (f : A -> _107642) (d : _107642) : (term142 _107642 A s f d) = (term142 _107642 A s f d).
Proof. exact (MK_COMB (@lem4523980 A) (@lem4523979 _107642 A s f d)). Qed.
Lemma lem4523996 {_107642 A : Type'} (s : A -> Prop) (f : A -> _107642) (x : A) (t : _107642 -> Prop) : (term143 _107642 A s f x t) = (term143 _107642 A s f x t).
Proof. exact (eq_refl (term143 _107642 A s f x t)). Qed.
Lemma lem4523997 {_107642 A : Type'} (s : A -> Prop) (f : A -> _107642) (t : _107642 -> Prop) : (term144 _107642 A s f t) = (term144 _107642 A s f t).
Proof. exact (fun_ext (fun x : A => @lem4523996 _107642 A s f x t)). Qed.
Lemma lem4523998 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem4523999 {_107642 A : Type'} (s : A -> Prop) (f : A -> _107642) (t : _107642 -> Prop) : (term145 _107642 A s f t) = (term145 _107642 A s f t).
Proof. exact (MK_COMB (@lem4523998 A) (@lem4523997 _107642 A s f t)). Qed.
Lemma lem4524000 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4524001 {_107642 A : Type'} (s : A -> Prop) (f : A -> _107642) (t : _107642 -> Prop) : (term146 _107642 A s f t) = (term146 _107642 A s f t).
Proof. exact (MK_COMB (@lem4524000) (@lem4523999 _107642 A s f t)). Qed.
Lemma lem4524002 {_107642 A : Type'} (t : _107642 -> Prop) (s : A -> Prop) (f : A -> _107642) (d : _107642) : (term147 _107642 A t s f d) = (term147 _107642 A t s f d).
Proof. exact (MK_COMB (@lem4524001 _107642 A s f t) (@lem4523981 _107642 A s f d)). Qed.
Lemma lem4524005 {_107642 A : Type'} (GEN_PVAR_148 : A -> _107642) : (@SETSPEC (A -> _107642) GEN_PVAR_148) = (@SETSPEC (A -> _107642) GEN_PVAR_148).
Proof. exact (eq_refl (@SETSPEC (A -> _107642) GEN_PVAR_148)). Qed.
Lemma lem4524006 {_107642 A : Type'} (GEN_PVAR_148 : A -> _107642) (t : _107642 -> Prop) (s : A -> Prop) (f : A -> _107642) (d : _107642) : (term148 _107642 A GEN_PVAR_148 t s f d) = (term148 _107642 A GEN_PVAR_148 t s f d).
Proof. exact (MK_COMB (@lem4524005 _107642 A GEN_PVAR_148) (@lem4524002 _107642 A t s f d)). Qed.
Lemma lem4524007 {_107642 A : Type'} (GEN_PVAR_148 : A -> _107642) (t : _107642 -> Prop) (s : A -> Prop) (d : _107642) (f : A -> _107642) : (term149 _107642 A GEN_PVAR_148 t s d f) = (term149 _107642 A GEN_PVAR_148 t s d f).
Proof. exact (MK_COMB (@lem4524006 _107642 A GEN_PVAR_148 t s f d) (@lem4523961 _107642 A f)). Qed.
Lemma lem4524008 {_107642 A : Type'} (GEN_PVAR_148 : A -> _107642) (t : _107642 -> Prop) (s : A -> Prop) (d : _107642) : (term150 _107642 A GEN_PVAR_148 t s d) = (term150 _107642 A GEN_PVAR_148 t s d).
Proof. exact (fun_ext (fun f : A -> _107642 => @lem4524007 _107642 A GEN_PVAR_148 t s d f)). Qed.
Lemma lem4524009 {_107642 A : Type'} : (@ex (A -> _107642)) = (@ex (A -> _107642)).
Proof. exact (eq_refl (@ex (A -> _107642))). Qed.
Lemma lem4524010 {_107642 A : Type'} (GEN_PVAR_148 : A -> _107642) (t : _107642 -> Prop) (s : A -> Prop) (d : _107642) : (term151 _107642 A GEN_PVAR_148 t s d) = (term151 _107642 A GEN_PVAR_148 t s d).
Proof. exact (MK_COMB (@lem4524009 _107642 A) (@lem4524008 _107642 A GEN_PVAR_148 t s d)). Qed.
Lemma lem4524011 {_107642 A : Type'} (t : _107642 -> Prop) (s : A -> Prop) (d : _107642) : (term84 _107642 A t s d) = (term84 _107642 A t s d).
Proof. exact (fun_ext (fun GEN_PVAR_148 : A -> _107642 => @lem4524010 _107642 A GEN_PVAR_148 t s d)). Qed.
Lemma lem4524012 {_107642 A : Type'} : (@GSPEC (A -> _107642)) = (@GSPEC (A -> _107642)).
Proof. exact (eq_refl (@GSPEC (A -> _107642))). Qed.
Lemma lem4524013 {_107642 A : Type'} (t : _107642 -> Prop) (s : A -> Prop) (d : _107642) : (term152 _107642 A t s d) = (term152 _107642 A t s d).
Proof. exact (MK_COMB (@lem4524012 _107642 A) (@lem4524011 _107642 A t s d)). Qed.
Lemma lem4524014 {_107642 A : Type'} : (@HAS_SIZE (A -> _107642)) = (@HAS_SIZE (A -> _107642)).
Proof. exact (eq_refl (@HAS_SIZE (A -> _107642))). Qed.
Lemma lem4524015 {_107642 A : Type'} (t : _107642 -> Prop) (s : A -> Prop) (d : _107642) : (term153 _107642 A t s d) = (term153 _107642 A t s d).
Proof. exact (MK_COMB (@lem4524014 _107642 A) (@lem4524013 _107642 A t s d)). Qed.
Lemma lem4524016 {_107642 A : Type'} (t : _107642 -> Prop) (s : A -> Prop) (d : _107642) (n : nat) (m : nat) : (term154 _107642 A t s d n m) = (term154 _107642 A t s d n m).
Proof. exact (MK_COMB (@lem4524015 _107642 A t s d) (@lem4523957 n m)). Qed.
Lemma lem4524031 {_107642 A : Type'} (s : A -> Prop) (m : nat) (t : _107642 -> Prop) (n : nat) : (term155 _107642 A s m t n) = (term155 _107642 A s m t n).
Proof. exact (eq_refl (term155 _107642 A s m t n)). Qed.
Lemma lem4524032 {_107642 A : Type'} (t : _107642 -> Prop) (s : A -> Prop) (d : _107642) (n : nat) (m : nat) : (term156 _107642 A t s d n m) = (term156 _107642 A t s d n m).
Proof. exact (MK_COMB (@lem4524031 _107642 A s m t n) (@lem4524016 _107642 A t s d n m)). Qed.
Lemma lem4524033 {_107642 A : Type'} (t : _107642 -> Prop) (d : _107642) (n : nat) (m : nat) : (term157 _107642 A t d n m) = (term157 _107642 A t d n m).
Proof. exact (fun_ext (fun s : A -> Prop => @lem4524032 _107642 A t s d n m)). Qed.
Lemma lem4524034 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem4524035 {_107642 A : Type'} (t : _107642 -> Prop) (d : _107642) (n : nat) (m : nat) : (term158 _107642 A t d n m) = (term158 _107642 A t d n m).
Proof. exact (MK_COMB (@lem4524034 A) (@lem4524033 _107642 A t d n m)). Qed.
Lemma lem4524036 {_107642 A : Type'} (t : _107642 -> Prop) (d : _107642) (n : nat) : (term159 _107642 A t d n) = (term159 _107642 A t d n).
Proof. exact (fun_ext (fun m : nat => @lem4524035 _107642 A t d n m)). Qed.
Lemma lem4524037 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4524038 {_107642 A : Type'} (t : _107642 -> Prop) (d : _107642) (n : nat) : (term160 _107642 A t d n) = (term160 _107642 A t d n).
Proof. exact (MK_COMB (@lem4524037) (@lem4524036 _107642 A t d n)). Qed.
Lemma lem4524039 {_107642 A : Type'} (d : _107642) (n : nat) : (term161 _107642 A d n) = (term161 _107642 A d n).
Proof. exact (fun_ext (fun t : _107642 -> Prop => @lem4524038 _107642 A t d n)). Qed.
Lemma lem4524040 {_107642 : Type'} : (@all (_107642 -> Prop)) = (@all (_107642 -> Prop)).
Proof. exact (eq_refl (@all (_107642 -> Prop))). Qed.
Lemma lem4524041 {_107642 A : Type'} (d : _107642) (n : nat) : (term162 _107642 A d n) = (term162 _107642 A d n).
Proof. exact (MK_COMB (@lem4524040 _107642) (@lem4524039 _107642 A d n)). Qed.
Lemma lem4524042 {_107642 A : Type'} (d : _107642) : (term163 _107642 A d) = (term163 _107642 A d).
Proof. exact (fun_ext (fun n : nat => @lem4524041 _107642 A d n)). Qed.
Lemma lem4524043 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4524044 {_107642 A : Type'} (d : _107642) : (term164 _107642 A d) = (term164 _107642 A d).
Proof. exact (MK_COMB (@lem4524043) (@lem4524042 _107642 A d)). Qed.
Lemma lem4524045 {_107642 A : Type'} : (term165 _107642 A) = (term165 _107642 A).
Proof. exact (fun_ext (fun d : _107642 => @lem4524044 _107642 A d)). Qed.
Lemma lem4524046 {_107642 : Type'} : (@all _107642) = (@all _107642).
Proof. exact (eq_refl (@all _107642)). Qed.
Lemma lem4524047 {_107642 A : Type'} : (term11 _107642 A) = (term11 _107642 A).
Proof. exact (MK_COMB (@lem4524046 _107642) (@lem4524045 _107642 A)). Qed.
Lemma lem4524048 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4524049 {_107642 A : Type'} : (term32 _107642 A) = (term32 _107642 A).
Proof. exact (MK_COMB (@lem4524048) (@lem4524047 _107642 A)). Qed.
Lemma lem4524050 {_107639 _107642 A B : Type'} : (term34 _107639 _107642 A B) = (term34 _107639 _107642 A B).
Proof. exact (MK_COMB (@lem4524049 _107642 A) (@lem4523952 _107639 _107642 A B)). Qed.
Lemma lem4524055 (n : nat) (m : nat) : (Nat.pow n m) = (Nat.pow n m).
Proof. exact (eq_refl (Nat.pow n m)). Qed.
Lemma lem4524057 {_107639 A : Type'} (t : _107639 -> Prop) (s : A -> Prop) (d : _107639) (_53777 : type656 _107639 A) (h1 : _53777 = (term76 _107639 A)) : (term84 _107639 A t s d) = (_53777 t s d).
Proof. exact (SYM (@lem4523560 _107639 A t s d _53777 h1)). Qed.
Lemma lem4524058 {_107639 A : Type'} (t : _107639 -> Prop) (s : A -> Prop) (d : _107639) (_53777 : type656 _107639 A) (h1 : _53777 = (term76 _107639 A)) : (term84 _107639 A t s d) = (_53777 t s d).
Proof. exact (@lem4524057 _107639 A t s d _53777 h1). Qed.
Lemma lem4524059 {_107639 A : Type'} : (@GSPEC (A -> _107639)) = (@GSPEC (A -> _107639)).
Proof. exact (eq_refl (@GSPEC (A -> _107639))). Qed.
Lemma lem4524060 {_107639 A : Type'} (t : _107639 -> Prop) (s : A -> Prop) (d : _107639) (_53777 : type656 _107639 A) (h1 : _53777 = (term76 _107639 A)) : (term152 _107639 A t s d) = (term166 _107639 A _53777 t s d).
Proof. exact (MK_COMB (@lem4524059 _107639 A) (@lem4524058 _107639 A t s d _53777 h1)). Qed.
Lemma lem4524061 {_107639 A : Type'} : (@HAS_SIZE (A -> _107639)) = (@HAS_SIZE (A -> _107639)).
Proof. exact (eq_refl (@HAS_SIZE (A -> _107639))). Qed.
Lemma lem4524062 {_107639 A : Type'} (t : _107639 -> Prop) (s : A -> Prop) (d : _107639) (_53777 : type656 _107639 A) (h1 : _53777 = (term76 _107639 A)) : (term153 _107639 A t s d) = (term167 _107639 A _53777 t s d).
Proof. exact (MK_COMB (@lem4524061 _107639 A) (@lem4524060 _107639 A t s d _53777 h1)). Qed.
Lemma lem4524063 {_107639 A : Type'} (t : _107639 -> Prop) (s : A -> Prop) (d : _107639) (n : nat) (m : nat) (_53777 : type656 _107639 A) (h1 : _53777 = (term76 _107639 A)) : (term154 _107639 A t s d n m) = (term168 _107639 A _53777 t s d n m).
Proof. exact (MK_COMB (@lem4524062 _107639 A t s d _53777 h1) (@lem4524055 n m)). Qed.
Lemma lem4524078 {_107639 A : Type'} (s : A -> Prop) (m : nat) (t : _107639 -> Prop) (n : nat) : (term155 _107639 A s m t n) = (term155 _107639 A s m t n).
Proof. exact (eq_refl (term155 _107639 A s m t n)). Qed.
Lemma lem4524079 {_107639 A : Type'} (t : _107639 -> Prop) (s : A -> Prop) (d : _107639) (n : nat) (m : nat) (_53777 : type656 _107639 A) (h1 : _53777 = (term76 _107639 A)) : (term156 _107639 A t s d n m) = (term169 _107639 A _53777 t s d n m).
Proof. exact (MK_COMB (@lem4524078 _107639 A s m t n) (@lem4524063 _107639 A t s d n m _53777 h1)). Qed.
Lemma lem4524080 {_107639 A : Type'} (t : _107639 -> Prop) (d : _107639) (n : nat) (m : nat) (_53777 : type656 _107639 A) (h1 : _53777 = (term76 _107639 A)) : (term157 _107639 A t d n m) = (term170 _107639 A _53777 t d n m).
Proof. exact (fun_ext (fun s : A -> Prop => @lem4524079 _107639 A t s d n m _53777 h1)). Qed.
Lemma lem4524081 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem4524082 {_107639 A : Type'} (t : _107639 -> Prop) (d : _107639) (n : nat) (m : nat) (_53777 : type656 _107639 A) (h1 : _53777 = (term76 _107639 A)) : (term158 _107639 A t d n m) = (term171 _107639 A _53777 t d n m).
Proof. exact (MK_COMB (@lem4524081 A) (@lem4524080 _107639 A t d n m _53777 h1)). Qed.
Lemma lem4524083 {_107639 A : Type'} (t : _107639 -> Prop) (d : _107639) (n : nat) (_53777 : type656 _107639 A) (h1 : _53777 = (term76 _107639 A)) : (term159 _107639 A t d n) = (term172 _107639 A _53777 t d n).
Proof. exact (fun_ext (fun m : nat => @lem4524082 _107639 A t d n m _53777 h1)). Qed.
Lemma lem4524084 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4524085 {_107639 A : Type'} (t : _107639 -> Prop) (d : _107639) (n : nat) (_53777 : type656 _107639 A) (h1 : _53777 = (term76 _107639 A)) : (term160 _107639 A t d n) = (term173 _107639 A _53777 t d n).
Proof. exact (MK_COMB (@lem4524084) (@lem4524083 _107639 A t d n _53777 h1)). Qed.
Lemma lem4524086 {_107639 A : Type'} (d : _107639) (n : nat) (_53777 : type656 _107639 A) (h1 : _53777 = (term76 _107639 A)) : (term161 _107639 A d n) = (term174 _107639 A _53777 d n).
Proof. exact (fun_ext (fun t : _107639 -> Prop => @lem4524085 _107639 A t d n _53777 h1)). Qed.
Lemma lem4524087 {_107639 : Type'} : (@all (_107639 -> Prop)) = (@all (_107639 -> Prop)).
Proof. exact (eq_refl (@all (_107639 -> Prop))). Qed.
Lemma lem4524088 {_107639 A : Type'} (d : _107639) (n : nat) (_53777 : type656 _107639 A) (h1 : _53777 = (term76 _107639 A)) : (term162 _107639 A d n) = (term175 _107639 A _53777 d n).
Proof. exact (MK_COMB (@lem4524087 _107639) (@lem4524086 _107639 A d n _53777 h1)). Qed.
Lemma lem4524089 {_107639 A : Type'} (d : _107639) (_53777 : type656 _107639 A) (h1 : _53777 = (term76 _107639 A)) : (term163 _107639 A d) = (term176 _107639 A _53777 d).
Proof. exact (fun_ext (fun n : nat => @lem4524088 _107639 A d n _53777 h1)). Qed.
Lemma lem4524090 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4524091 {_107639 A : Type'} (d : _107639) (_53777 : type656 _107639 A) (h1 : _53777 = (term76 _107639 A)) : (term164 _107639 A d) = (term177 _107639 A _53777 d).
Proof. exact (MK_COMB (@lem4524090) (@lem4524089 _107639 A d _53777 h1)). Qed.
Lemma lem4524092 {_107639 A : Type'} (_53777 : type656 _107639 A) (h1 : _53777 = (term76 _107639 A)) : (term165 _107639 A) = (term178 _107639 A _53777).
Proof. exact (fun_ext (fun d : _107639 => @lem4524091 _107639 A d _53777 h1)). Qed.
Lemma lem4524093 {_107639 : Type'} : (@all _107639) = (@all _107639).
Proof. exact (eq_refl (@all _107639)). Qed.
Lemma lem4524094 {_107639 A : Type'} (_53777 : type656 _107639 A) (h1 : _53777 = (term76 _107639 A)) : (term11 _107639 A) = (term179 _107639 A _53777).
Proof. exact (MK_COMB (@lem4524093 _107639) (@lem4524092 _107639 A _53777 h1)). Qed.
Lemma lem4524095 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4524096 {_107639 A : Type'} (_53777 : type656 _107639 A) (h1 : _53777 = (term76 _107639 A)) : (term32 _107639 A) = (term180 _107639 A _53777).
Proof. exact (MK_COMB (@lem4524095) (@lem4524094 _107639 A _53777 h1)). Qed.
Lemma lem4524097 {_107639 _107642 A B : Type'} (_53777 : type656 _107639 A) (h1 : _53777 = (term76 _107639 A)) : (term36 _107639 _107642 A B) = (term307 _107639 _107642 A B _53777).
Proof. exact (MK_COMB (@lem4524096 _107639 A _53777 h1) (@lem4524050 _107639 _107642 A B)). Qed.
Lemma lem4524130 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (t : _107639 -> Prop) (s : _107642 -> Prop) (d : _107639) (n : nat) (m : nat) : (term169 _107639 _107642 _53776 t s d n m) = (term169 _107639 _107642 _53776 t s d n m).
Proof. exact (eq_refl (term169 _107639 _107642 _53776 t s d n m)). Qed.
Lemma lem4524131 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (t : _107639 -> Prop) (d : _107639) (n : nat) (m : nat) : (term170 _107639 _107642 _53776 t d n m) = (term170 _107639 _107642 _53776 t d n m).
Proof. exact (fun_ext (fun s : _107642 -> Prop => @lem4524130 _107639 _107642 _53776 t s d n m)). Qed.
Lemma lem4524132 {_107642 : Type'} : (@all (_107642 -> Prop)) = (@all (_107642 -> Prop)).
Proof. exact (eq_refl (@all (_107642 -> Prop))). Qed.
Lemma lem4524133 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (t : _107639 -> Prop) (d : _107639) (n : nat) (m : nat) : (term171 _107639 _107642 _53776 t d n m) = (term171 _107639 _107642 _53776 t d n m).
Proof. exact (MK_COMB (@lem4524132 _107642) (@lem4524131 _107639 _107642 _53776 t d n m)). Qed.
Lemma lem4524134 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (t : _107639 -> Prop) (d : _107639) (n : nat) : (term172 _107639 _107642 _53776 t d n) = (term172 _107639 _107642 _53776 t d n).
Proof. exact (fun_ext (fun m : nat => @lem4524133 _107639 _107642 _53776 t d n m)). Qed.
Lemma lem4524135 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4524136 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (t : _107639 -> Prop) (d : _107639) (n : nat) : (term173 _107639 _107642 _53776 t d n) = (term173 _107639 _107642 _53776 t d n).
Proof. exact (MK_COMB (@lem4524135) (@lem4524134 _107639 _107642 _53776 t d n)). Qed.
Lemma lem4524137 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (d : _107639) (n : nat) : (term174 _107639 _107642 _53776 d n) = (term174 _107639 _107642 _53776 d n).
Proof. exact (fun_ext (fun t : _107639 -> Prop => @lem4524136 _107639 _107642 _53776 t d n)). Qed.
Lemma lem4524138 {_107639 : Type'} : (@all (_107639 -> Prop)) = (@all (_107639 -> Prop)).
Proof. exact (eq_refl (@all (_107639 -> Prop))). Qed.
Lemma lem4524139 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (d : _107639) (n : nat) : (term175 _107639 _107642 _53776 d n) = (term175 _107639 _107642 _53776 d n).
Proof. exact (MK_COMB (@lem4524138 _107639) (@lem4524137 _107639 _107642 _53776 d n)). Qed.
Lemma lem4524140 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (d : _107639) : (term176 _107639 _107642 _53776 d) = (term176 _107639 _107642 _53776 d).
Proof. exact (fun_ext (fun n : nat => @lem4524139 _107639 _107642 _53776 d n)). Qed.
Lemma lem4524141 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4524142 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (d : _107639) : (term177 _107639 _107642 _53776 d) = (term177 _107639 _107642 _53776 d).
Proof. exact (MK_COMB (@lem4524141) (@lem4524140 _107639 _107642 _53776 d)). Qed.
Lemma lem4524143 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) : (term178 _107639 _107642 _53776) = (term178 _107639 _107642 _53776).
Proof. exact (fun_ext (fun d : _107639 => @lem4524142 _107639 _107642 _53776 d)). Qed.
Lemma lem4524144 {_107639 : Type'} : (@all _107639) = (@all _107639).
Proof. exact (eq_refl (@all _107639)). Qed.
Lemma lem4524145 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) : (term179 _107639 _107642 _53776) = (term179 _107639 _107642 _53776).
Proof. exact (MK_COMB (@lem4524144 _107639) (@lem4524143 _107639 _107642 _53776)). Qed.
Lemma lem4524146 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4524147 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) : (term180 _107639 _107642 _53776) = (term180 _107639 _107642 _53776).
Proof. exact (MK_COMB (@lem4524146) (@lem4524145 _107639 _107642 _53776)). Qed.
Lemma lem4524148 {_107639 _107642 A B : Type'} (_53776 : type656 _107639 _107642) (_53777 : type656 _107639 A) (h1 : _53777 = (term76 _107639 A)) : (term181 _107639 _107642 A B _53776) = (term308 _107639 _107642 A B _53776 _53777).
Proof. exact (MK_COMB (@lem4524147 _107639 _107642 _53776) (@lem4524097 _107639 _107642 A B _53777 h1)). Qed.
Lemma lem4524169 (s : nat -> Prop) (n : nat) : ((@HAS_SIZE nat s n) = (term182 s n)) = ((@HAS_SIZE nat s n) = (term182 s n)).
Proof. exact (eq_refl ((@HAS_SIZE nat s n) = (term182 s n))). Qed.
Lemma lem4524170 (s : nat -> Prop) : (term183 s) = (term183 s).
Proof. exact (fun_ext (fun n : nat => @lem4524169 s n)). Qed.
Lemma lem4524171 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4524172 (s : nat -> Prop) : (term184 s) = (term184 s).
Proof. exact (MK_COMB (@lem4524171) (@lem4524170 s)). Qed.
Lemma lem4524173 : term185 = term185.
Proof. exact (fun_ext (fun s : nat -> Prop => @lem4524172 s)). Qed.
Lemma lem4524174 : (@all (nat -> Prop)) = (@all (nat -> Prop)).
Proof. exact (eq_refl (@all (nat -> Prop))). Qed.
Lemma lem4524175 : term15 = term15.
Proof. exact (MK_COMB (@lem4524174) (@lem4524173)). Qed.
Lemma lem4524176 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4524177 : term39 = term39.
Proof. exact (MK_COMB (@lem4524176) (@lem4524175)). Qed.
Lemma lem4524178 {_107639 _107642 A B : Type'} (_53776 : type656 _107639 _107642) (_53777 : type656 _107639 A) (h1 : _53777 = (term76 _107639 A)) : (term186 _107639 _107642 A B _53776) = (term309 _107639 _107642 A B _53776 _53777).
Proof. exact (MK_COMB (@lem4524177) (@lem4524148 _107639 _107642 A B _53776 _53777 h1)). Qed.
Lemma lem4524199 {A : Type'} (s : type704 A) (n : nat) : ((@HAS_SIZE (A -> nat) s n) = (term187 A s n)) = ((@HAS_SIZE (A -> nat) s n) = (term187 A s n)).
Proof. exact (eq_refl ((@HAS_SIZE (A -> nat) s n) = (term187 A s n))). Qed.
Lemma lem4524200 {A : Type'} (s : type704 A) : (term188 A s) = (term188 A s).
Proof. exact (fun_ext (fun n : nat => @lem4524199 A s n)). Qed.
Lemma lem4524201 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4524202 {A : Type'} (s : type704 A) : (term189 A s) = (term189 A s).
Proof. exact (MK_COMB (@lem4524201) (@lem4524200 A s)). Qed.
Lemma lem4524203 {A : Type'} : (term190 A) = (term190 A).
Proof. exact (fun_ext (fun s : type704 A => @lem4524202 A s)). Qed.
Lemma lem4524204 {A : Type'} : (@all ((A -> nat) -> Prop)) = (@all ((A -> nat) -> Prop)).
Proof. exact (eq_refl (@all ((A -> nat) -> Prop))). Qed.
Lemma lem4524205 {A : Type'} : (term16 A) = (term16 A).
Proof. exact (MK_COMB (@lem4524204 A) (@lem4524203 A)). Qed.
Lemma lem4524206 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4524207 {A : Type'} : (term42 A) = (term42 A).
Proof. exact (MK_COMB (@lem4524206) (@lem4524205 A)). Qed.
Lemma lem4524208 {_107639 _107642 A B : Type'} (_53776 : type656 _107639 _107642) (_53777 : type656 _107639 A) (h1 : _53777 = (term76 _107639 A)) : (term191 _107639 _107642 A B _53776) = (term310 _107639 _107642 A B _53776 _53777).
Proof. exact (MK_COMB (@lem4524207 A) (@lem4524178 _107639 _107642 A B _53776 _53777 h1)). Qed.
Lemma lem4524229 {A B : Type'} (s : type572 A B) (n : nat) : ((@HAS_SIZE (A -> B) s n) = (term192 A B s n)) = ((@HAS_SIZE (A -> B) s n) = (term192 A B s n)).
Proof. exact (eq_refl ((@HAS_SIZE (A -> B) s n) = (term192 A B s n))). Qed.
Lemma lem4524230 {A B : Type'} (s : type572 A B) : (term193 A B s) = (term193 A B s).
Proof. exact (fun_ext (fun n : nat => @lem4524229 A B s n)). Qed.
Lemma lem4524231 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4524232 {A B : Type'} (s : type572 A B) : (term194 A B s) = (term194 A B s).
Proof. exact (MK_COMB (@lem4524231) (@lem4524230 A B s)). Qed.
Lemma lem4524233 {A B : Type'} : (term195 A B) = (term195 A B).
Proof. exact (fun_ext (fun s : type572 A B => @lem4524232 A B s)). Qed.
Lemma lem4524234 {A B : Type'} : (@all ((A -> B) -> Prop)) = (@all ((A -> B) -> Prop)).
Proof. exact (eq_refl (@all ((A -> B) -> Prop))). Qed.
Lemma lem4524235 {A B : Type'} : (term17 A B) = (term17 A B).
Proof. exact (MK_COMB (@lem4524234 A B) (@lem4524233 A B)). Qed.
Lemma lem4524236 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4524237 {A B : Type'} : (term45 A B) = (term45 A B).
Proof. exact (MK_COMB (@lem4524236) (@lem4524235 A B)). Qed.
Lemma lem4524238 {_107639 _107642 A B : Type'} (_53776 : type656 _107639 _107642) (_53777 : type656 _107639 A) (h1 : _53777 = (term76 _107639 A)) : (term196 _107639 _107642 A B _53776) = (term311 _107639 _107642 A B _53776 _53777).
Proof. exact (MK_COMB (@lem4524237 A B) (@lem4524208 _107639 _107642 A B _53776 _53777 h1)). Qed.
Lemma lem4524259 {_107642 A : Type'} (s : type805 _107642 A) (n : nat) : ((@HAS_SIZE (A -> _107642) s n) = (term197 _107642 A s n)) = ((@HAS_SIZE (A -> _107642) s n) = (term197 _107642 A s n)).
Proof. exact (eq_refl ((@HAS_SIZE (A -> _107642) s n) = (term197 _107642 A s n))). Qed.
Lemma lem4524260 {_107642 A : Type'} (s : type805 _107642 A) : (term198 _107642 A s) = (term198 _107642 A s).
Proof. exact (fun_ext (fun n : nat => @lem4524259 _107642 A s n)). Qed.
Lemma lem4524261 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4524262 {_107642 A : Type'} (s : type805 _107642 A) : (term199 _107642 A s) = (term199 _107642 A s).
Proof. exact (MK_COMB (@lem4524261) (@lem4524260 _107642 A s)). Qed.
Lemma lem4524263 {_107642 A : Type'} : (term200 _107642 A) = (term200 _107642 A).
Proof. exact (fun_ext (fun s : type805 _107642 A => @lem4524262 _107642 A s)). Qed.
Lemma lem4524264 {_107642 A : Type'} : (@all ((A -> _107642) -> Prop)) = (@all ((A -> _107642) -> Prop)).
Proof. exact (eq_refl (@all ((A -> _107642) -> Prop))). Qed.
Lemma lem4524265 {_107642 A : Type'} : (term18 _107642 A) = (term18 _107642 A).
Proof. exact (MK_COMB (@lem4524264 _107642 A) (@lem4524263 _107642 A)). Qed.
Lemma lem4524266 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4524267 {_107642 A : Type'} : (term48 _107642 A) = (term48 _107642 A).
Proof. exact (MK_COMB (@lem4524266) (@lem4524265 _107642 A)). Qed.
Lemma lem4524268 {_107639 _107642 A B : Type'} (_53776 : type656 _107639 _107642) (_53777 : type656 _107639 A) (h1 : _53777 = (term76 _107639 A)) : (term201 _107639 _107642 A B _53776) = (term312 _107639 _107642 A B _53776 _53777).
Proof. exact (MK_COMB (@lem4524267 _107642 A) (@lem4524238 _107639 _107642 A B _53776 _53777 h1)). Qed.
Lemma lem4524289 {_107639 A : Type'} (s : type805 _107639 A) (n : nat) : ((@HAS_SIZE (A -> _107639) s n) = (term197 _107639 A s n)) = ((@HAS_SIZE (A -> _107639) s n) = (term197 _107639 A s n)).
Proof. exact (eq_refl ((@HAS_SIZE (A -> _107639) s n) = (term197 _107639 A s n))). Qed.
Lemma lem4524290 {_107639 A : Type'} (s : type805 _107639 A) : (term198 _107639 A s) = (term198 _107639 A s).
Proof. exact (fun_ext (fun n : nat => @lem4524289 _107639 A s n)). Qed.
Lemma lem4524291 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4524292 {_107639 A : Type'} (s : type805 _107639 A) : (term199 _107639 A s) = (term199 _107639 A s).
Proof. exact (MK_COMB (@lem4524291) (@lem4524290 _107639 A s)). Qed.
Lemma lem4524293 {_107639 A : Type'} : (term200 _107639 A) = (term200 _107639 A).
Proof. exact (fun_ext (fun s : type805 _107639 A => @lem4524292 _107639 A s)). Qed.
Lemma lem4524294 {_107639 A : Type'} : (@all ((A -> _107639) -> Prop)) = (@all ((A -> _107639) -> Prop)).
Proof. exact (eq_refl (@all ((A -> _107639) -> Prop))). Qed.
Lemma lem4524295 {_107639 A : Type'} : (term18 _107639 A) = (term18 _107639 A).
Proof. exact (MK_COMB (@lem4524294 _107639 A) (@lem4524293 _107639 A)). Qed.
Lemma lem4524296 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4524297 {_107639 A : Type'} : (term48 _107639 A) = (term48 _107639 A).
Proof. exact (MK_COMB (@lem4524296) (@lem4524295 _107639 A)). Qed.
Lemma lem4524298 {_107639 _107642 A B : Type'} (_53776 : type656 _107639 _107642) (_53777 : type656 _107639 A) (h1 : _53777 = (term76 _107639 A)) : (term202 _107639 _107642 A B _53776) = (term313 _107639 _107642 A B _53776 _53777).
Proof. exact (MK_COMB (@lem4524297 _107639 A) (@lem4524268 _107639 _107642 A B _53776 _53777 h1)). Qed.
Lemma lem4524319 {_107642 B : Type'} (s : type572 _107642 B) (n : nat) : ((@HAS_SIZE (_107642 -> B) s n) = (term192 _107642 B s n)) = ((@HAS_SIZE (_107642 -> B) s n) = (term192 _107642 B s n)).
Proof. exact (eq_refl ((@HAS_SIZE (_107642 -> B) s n) = (term192 _107642 B s n))). Qed.
Lemma lem4524320 {_107642 B : Type'} (s : type572 _107642 B) : (term193 _107642 B s) = (term193 _107642 B s).
Proof. exact (fun_ext (fun n : nat => @lem4524319 _107642 B s n)). Qed.
Lemma lem4524321 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4524322 {_107642 B : Type'} (s : type572 _107642 B) : (term194 _107642 B s) = (term194 _107642 B s).
Proof. exact (MK_COMB (@lem4524321) (@lem4524320 _107642 B s)). Qed.
Lemma lem4524323 {_107642 B : Type'} : (term195 _107642 B) = (term195 _107642 B).
Proof. exact (fun_ext (fun s : type572 _107642 B => @lem4524322 _107642 B s)). Qed.
Lemma lem4524324 {_107642 B : Type'} : (@all ((_107642 -> B) -> Prop)) = (@all ((_107642 -> B) -> Prop)).
Proof. exact (eq_refl (@all ((_107642 -> B) -> Prop))). Qed.
Lemma lem4524325 {_107642 B : Type'} : (term17 _107642 B) = (term17 _107642 B).
Proof. exact (MK_COMB (@lem4524324 _107642 B) (@lem4524323 _107642 B)). Qed.
Lemma lem4524326 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4524327 {_107642 B : Type'} : (term45 _107642 B) = (term45 _107642 B).
Proof. exact (MK_COMB (@lem4524326) (@lem4524325 _107642 B)). Qed.
Lemma lem4524328 {_107639 _107642 A B : Type'} (_53776 : type656 _107639 _107642) (_53777 : type656 _107639 A) (h1 : _53777 = (term76 _107639 A)) : (term203 _107639 _107642 A B _53776) = (term314 _107639 _107642 A B _53776 _53777).
Proof. exact (MK_COMB (@lem4524327 _107642 B) (@lem4524298 _107639 _107642 A B _53776 _53777 h1)). Qed.
Lemma lem4524349 {_107639 _107642 : Type'} (s : type805 _107639 _107642) (n : nat) : ((@HAS_SIZE (_107642 -> _107639) s n) = (term197 _107639 _107642 s n)) = ((@HAS_SIZE (_107642 -> _107639) s n) = (term197 _107639 _107642 s n)).
Proof. exact (eq_refl ((@HAS_SIZE (_107642 -> _107639) s n) = (term197 _107639 _107642 s n))). Qed.
Lemma lem4524350 {_107639 _107642 : Type'} (s : type805 _107639 _107642) : (term198 _107639 _107642 s) = (term198 _107639 _107642 s).
Proof. exact (fun_ext (fun n : nat => @lem4524349 _107639 _107642 s n)). Qed.
Lemma lem4524351 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4524352 {_107639 _107642 : Type'} (s : type805 _107639 _107642) : (term199 _107639 _107642 s) = (term199 _107639 _107642 s).
Proof. exact (MK_COMB (@lem4524351) (@lem4524350 _107639 _107642 s)). Qed.
Lemma lem4524353 {_107639 _107642 : Type'} : (term200 _107639 _107642) = (term200 _107639 _107642).
Proof. exact (fun_ext (fun s : type805 _107639 _107642 => @lem4524352 _107639 _107642 s)). Qed.
Lemma lem4524354 {_107639 _107642 : Type'} : (@all ((_107642 -> _107639) -> Prop)) = (@all ((_107642 -> _107639) -> Prop)).
Proof. exact (eq_refl (@all ((_107642 -> _107639) -> Prop))). Qed.
Lemma lem4524355 {_107639 _107642 : Type'} : (term18 _107639 _107642) = (term18 _107639 _107642).
Proof. exact (MK_COMB (@lem4524354 _107639 _107642) (@lem4524353 _107639 _107642)). Qed.
Lemma lem4524356 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4524357 {_107639 _107642 : Type'} : (term48 _107639 _107642) = (term48 _107639 _107642).
Proof. exact (MK_COMB (@lem4524356) (@lem4524355 _107639 _107642)). Qed.
Lemma lem4524358 {_107639 _107642 A B : Type'} (_53776 : type656 _107639 _107642) (_53777 : type656 _107639 A) (h1 : _53777 = (term76 _107639 A)) : (term204 _107639 _107642 A B _53776) = (term315 _107639 _107642 A B _53776 _53777).
Proof. exact (MK_COMB (@lem4524357 _107639 _107642) (@lem4524328 _107639 _107642 A B _53776 _53777 h1)). Qed.
Lemma lem4524379 {_107639 B : Type'} (s : type572 _107639 B) (n : nat) : ((@HAS_SIZE (_107639 -> B) s n) = (term192 _107639 B s n)) = ((@HAS_SIZE (_107639 -> B) s n) = (term192 _107639 B s n)).
Proof. exact (eq_refl ((@HAS_SIZE (_107639 -> B) s n) = (term192 _107639 B s n))). Qed.
Lemma lem4524380 {_107639 B : Type'} (s : type572 _107639 B) : (term193 _107639 B s) = (term193 _107639 B s).
Proof. exact (fun_ext (fun n : nat => @lem4524379 _107639 B s n)). Qed.
Lemma lem4524381 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4524382 {_107639 B : Type'} (s : type572 _107639 B) : (term194 _107639 B s) = (term194 _107639 B s).
Proof. exact (MK_COMB (@lem4524381) (@lem4524380 _107639 B s)). Qed.
Lemma lem4524383 {_107639 B : Type'} : (term195 _107639 B) = (term195 _107639 B).
Proof. exact (fun_ext (fun s : type572 _107639 B => @lem4524382 _107639 B s)). Qed.
Lemma lem4524384 {_107639 B : Type'} : (@all ((_107639 -> B) -> Prop)) = (@all ((_107639 -> B) -> Prop)).
Proof. exact (eq_refl (@all ((_107639 -> B) -> Prop))). Qed.
Lemma lem4524385 {_107639 B : Type'} : (term17 _107639 B) = (term17 _107639 B).
Proof. exact (MK_COMB (@lem4524384 _107639 B) (@lem4524383 _107639 B)). Qed.
Lemma lem4524386 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4524387 {_107639 B : Type'} : (term45 _107639 B) = (term45 _107639 B).
Proof. exact (MK_COMB (@lem4524386) (@lem4524385 _107639 B)). Qed.
Lemma lem4524388 {_107639 _107642 A B : Type'} (_53776 : type656 _107639 _107642) (_53777 : type656 _107639 A) (h1 : _53777 = (term76 _107639 A)) : (term205 _107639 _107642 A B _53776) = (term316 _107639 _107642 A B _53776 _53777).
Proof. exact (MK_COMB (@lem4524387 _107639 B) (@lem4524358 _107639 _107642 A B _53776 _53777 h1)). Qed.
Lemma lem4524409 {B : Type'} (s : B -> Prop) (n : nat) : ((@HAS_SIZE B s n) = (term206 B s n)) = ((@HAS_SIZE B s n) = (term206 B s n)).
Proof. exact (eq_refl ((@HAS_SIZE B s n) = (term206 B s n))). Qed.
Lemma lem4524410 {B : Type'} (s : B -> Prop) : (term207 B s) = (term207 B s).
Proof. exact (fun_ext (fun n : nat => @lem4524409 B s n)). Qed.
Lemma lem4524411 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4524412 {B : Type'} (s : B -> Prop) : (term208 B s) = (term208 B s).
Proof. exact (MK_COMB (@lem4524411) (@lem4524410 B s)). Qed.
Lemma lem4524413 {B : Type'} : (term209 B) = (term209 B).
Proof. exact (fun_ext (fun s : B -> Prop => @lem4524412 B s)). Qed.
Lemma lem4524414 {B : Type'} : (@all (B -> Prop)) = (@all (B -> Prop)).
Proof. exact (eq_refl (@all (B -> Prop))). Qed.
Lemma lem4524415 {B : Type'} : (term14 B) = (term14 B).
Proof. exact (MK_COMB (@lem4524414 B) (@lem4524413 B)). Qed.
Lemma lem4524416 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4524417 {B : Type'} : (term59 B) = (term59 B).
Proof. exact (MK_COMB (@lem4524416) (@lem4524415 B)). Qed.
Lemma lem4524418 {_107639 _107642 A B : Type'} (_53776 : type656 _107639 _107642) (_53777 : type656 _107639 A) (h1 : _53777 = (term76 _107639 A)) : (term210 _107639 _107642 A B _53776) = (term317 _107639 _107642 A B _53776 _53777).
Proof. exact (MK_COMB (@lem4524417 B) (@lem4524388 _107639 _107642 A B _53776 _53777 h1)). Qed.
Lemma lem4524439 {A : Type'} (s : A -> Prop) (n : nat) : ((@HAS_SIZE A s n) = (term206 A s n)) = ((@HAS_SIZE A s n) = (term206 A s n)).
Proof. exact (eq_refl ((@HAS_SIZE A s n) = (term206 A s n))). Qed.
Lemma lem4524440 {A : Type'} (s : A -> Prop) : (term207 A s) = (term207 A s).
Proof. exact (fun_ext (fun n : nat => @lem4524439 A s n)). Qed.
Lemma lem4524441 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4524442 {A : Type'} (s : A -> Prop) : (term208 A s) = (term208 A s).
Proof. exact (MK_COMB (@lem4524441) (@lem4524440 A s)). Qed.
Lemma lem4524443 {A : Type'} : (term209 A) = (term209 A).
Proof. exact (fun_ext (fun s : A -> Prop => @lem4524442 A s)). Qed.
Lemma lem4524444 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem4524445 {A : Type'} : (term14 A) = (term14 A).
Proof. exact (MK_COMB (@lem4524444 A) (@lem4524443 A)). Qed.
Lemma lem4524446 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4524447 {A : Type'} : (term59 A) = (term59 A).
Proof. exact (MK_COMB (@lem4524446) (@lem4524445 A)). Qed.
Lemma lem4524448 {_107639 _107642 A B : Type'} (_53776 : type656 _107639 _107642) (_53777 : type656 _107639 A) (h1 : _53777 = (term76 _107639 A)) : (term211 _107639 _107642 A B _53776) = (term318 _107639 _107642 A B _53776 _53777).
Proof. exact (MK_COMB (@lem4524447 A) (@lem4524418 _107639 _107642 A B _53776 _53777 h1)). Qed.
Lemma lem4524469 {_107642 : Type'} (s : _107642 -> Prop) (n : nat) : ((@HAS_SIZE _107642 s n) = (term206 _107642 s n)) = ((@HAS_SIZE _107642 s n) = (term206 _107642 s n)).
Proof. exact (eq_refl ((@HAS_SIZE _107642 s n) = (term206 _107642 s n))). Qed.
Lemma lem4524470 {_107642 : Type'} (s : _107642 -> Prop) : (term207 _107642 s) = (term207 _107642 s).
Proof. exact (fun_ext (fun n : nat => @lem4524469 _107642 s n)). Qed.
Lemma lem4524471 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4524472 {_107642 : Type'} (s : _107642 -> Prop) : (term208 _107642 s) = (term208 _107642 s).
Proof. exact (MK_COMB (@lem4524471) (@lem4524470 _107642 s)). Qed.
Lemma lem4524473 {_107642 : Type'} : (term209 _107642) = (term209 _107642).
Proof. exact (fun_ext (fun s : _107642 -> Prop => @lem4524472 _107642 s)). Qed.
Lemma lem4524474 {_107642 : Type'} : (@all (_107642 -> Prop)) = (@all (_107642 -> Prop)).
Proof. exact (eq_refl (@all (_107642 -> Prop))). Qed.
Lemma lem4524475 {_107642 : Type'} : (term14 _107642) = (term14 _107642).
Proof. exact (MK_COMB (@lem4524474 _107642) (@lem4524473 _107642)). Qed.
Lemma lem4524476 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4524477 {_107642 : Type'} : (term59 _107642) = (term59 _107642).
Proof. exact (MK_COMB (@lem4524476) (@lem4524475 _107642)). Qed.
Lemma lem4524478 {_107639 _107642 A B : Type'} (_53776 : type656 _107639 _107642) (_53777 : type656 _107639 A) (h1 : _53777 = (term76 _107639 A)) : (term212 _107639 _107642 A B _53776) = (term319 _107639 _107642 A B _53776 _53777).
Proof. exact (MK_COMB (@lem4524477 _107642) (@lem4524448 _107639 _107642 A B _53776 _53777 h1)). Qed.
Lemma lem4524499 {_107639 : Type'} (s : _107639 -> Prop) (n : nat) : ((@HAS_SIZE _107639 s n) = (term206 _107639 s n)) = ((@HAS_SIZE _107639 s n) = (term206 _107639 s n)).
Proof. exact (eq_refl ((@HAS_SIZE _107639 s n) = (term206 _107639 s n))). Qed.
Lemma lem4524500 {_107639 : Type'} (s : _107639 -> Prop) : (term207 _107639 s) = (term207 _107639 s).
Proof. exact (fun_ext (fun n : nat => @lem4524499 _107639 s n)). Qed.
Lemma lem4524501 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4524502 {_107639 : Type'} (s : _107639 -> Prop) : (term208 _107639 s) = (term208 _107639 s).
Proof. exact (MK_COMB (@lem4524501) (@lem4524500 _107639 s)). Qed.
Lemma lem4524503 {_107639 : Type'} : (term209 _107639) = (term209 _107639).
Proof. exact (fun_ext (fun s : _107639 -> Prop => @lem4524502 _107639 s)). Qed.
Lemma lem4524504 {_107639 : Type'} : (@all (_107639 -> Prop)) = (@all (_107639 -> Prop)).
Proof. exact (eq_refl (@all (_107639 -> Prop))). Qed.
Lemma lem4524505 {_107639 : Type'} : (term14 _107639) = (term14 _107639).
Proof. exact (MK_COMB (@lem4524504 _107639) (@lem4524503 _107639)). Qed.
Lemma lem4524506 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4524507 {_107639 : Type'} : (term59 _107639) = (term59 _107639).
Proof. exact (MK_COMB (@lem4524506) (@lem4524505 _107639)). Qed.
Lemma lem4524508 {_107639 _107642 A B : Type'} (_53776 : type656 _107639 _107642) (_53777 : type656 _107639 A) (h1 : _53777 = (term76 _107639 A)) : (term213 _107639 _107642 A B _53776) = (term320 _107639 _107642 A B _53776 _53777).
Proof. exact (MK_COMB (@lem4524507 _107639) (@lem4524478 _107639 _107642 A B _53776 _53777 h1)). Qed.
Lemma lem4524529 {_100044 : Type'} (s : _100044 -> Prop) (n : nat) : ((@HAS_SIZE _100044 s n) = (term206 _100044 s n)) = ((@HAS_SIZE _100044 s n) = (term206 _100044 s n)).
Proof. exact (eq_refl ((@HAS_SIZE _100044 s n) = (term206 _100044 s n))). Qed.
Lemma lem4524530 {_100044 : Type'} (s : _100044 -> Prop) : (term207 _100044 s) = (term207 _100044 s).
Proof. exact (fun_ext (fun n : nat => @lem4524529 _100044 s n)). Qed.
Lemma lem4524531 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4524532 {_100044 : Type'} (s : _100044 -> Prop) : (term208 _100044 s) = (term208 _100044 s).
Proof. exact (MK_COMB (@lem4524531) (@lem4524530 _100044 s)). Qed.
Lemma lem4524533 {_100044 : Type'} : (term209 _100044) = (term209 _100044).
Proof. exact (fun_ext (fun s : _100044 -> Prop => @lem4524532 _100044 s)). Qed.
Lemma lem4524534 {_100044 : Type'} : (@all (_100044 -> Prop)) = (@all (_100044 -> Prop)).
Proof. exact (eq_refl (@all (_100044 -> Prop))). Qed.
Lemma lem4524535 {_100044 : Type'} : (term14 _100044) = (term14 _100044).
Proof. exact (MK_COMB (@lem4524534 _100044) (@lem4524533 _100044)). Qed.
Lemma lem4524536 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4524537 {_100044 : Type'} : (term59 _100044) = (term59 _100044).
Proof. exact (MK_COMB (@lem4524536) (@lem4524535 _100044)). Qed.
Lemma lem4524538 {_100044 _107639 _107642 A B : Type'} (_53776 : type656 _107639 _107642) (_53777 : type656 _107639 A) (h1 : _53777 = (term76 _107639 A)) : (term214 _100044 _107639 _107642 A B _53776) = (term321 _100044 _107639 _107642 A B _53776 _53777).
Proof. exact (MK_COMB (@lem4524537 _100044) (@lem4524508 _107639 _107642 A B _53776 _53777 h1)). Qed.
Lemma lem4524573 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (d : _107639) (t : _107639 -> Prop) (s : _107642 -> Prop) : (term222 _107639 _107642 _53776 d t s) = (term222 _107639 _107642 _53776 d t s).
Proof. exact (eq_refl (term222 _107639 _107642 _53776 d t s)). Qed.
Lemma lem4524574 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (d : _107639) (s : _107642 -> Prop) : (term224 _107639 _107642 _53776 d s) = (term224 _107639 _107642 _53776 d s).
Proof. exact (fun_ext (fun t : _107639 -> Prop => @lem4524573 _107639 _107642 _53776 d t s)). Qed.
Lemma lem4524575 {_107639 : Type'} : (@all (_107639 -> Prop)) = (@all (_107639 -> Prop)).
Proof. exact (eq_refl (@all (_107639 -> Prop))). Qed.
Lemma lem4524576 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (d : _107639) (s : _107642 -> Prop) : (term226 _107639 _107642 _53776 d s) = (term226 _107639 _107642 _53776 d s).
Proof. exact (MK_COMB (@lem4524575 _107639) (@lem4524574 _107639 _107642 _53776 d s)). Qed.
Lemma lem4524577 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (d : _107639) : (term228 _107639 _107642 _53776 d) = (term228 _107639 _107642 _53776 d).
Proof. exact (fun_ext (fun s : _107642 -> Prop => @lem4524576 _107639 _107642 _53776 d s)). Qed.
Lemma lem4524578 {_107642 : Type'} : (@all (_107642 -> Prop)) = (@all (_107642 -> Prop)).
Proof. exact (eq_refl (@all (_107642 -> Prop))). Qed.
Lemma lem4524579 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (d : _107639) : (term229 _107639 _107642 _53776 d) = (term229 _107639 _107642 _53776 d).
Proof. exact (MK_COMB (@lem4524578 _107642) (@lem4524577 _107639 _107642 _53776 d)). Qed.
Lemma lem4524580 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem4524581 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (d : _107639) : (term230 _107639 _107642 _53776 d) = (term230 _107639 _107642 _53776 d).
Proof. exact (MK_COMB (@lem4524580) (@lem4524579 _107639 _107642 _53776 d)). Qed.
Lemma lem4524582 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4524583 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (d : _107639) : (term231 _107639 _107642 _53776 d) = (term231 _107639 _107642 _53776 d).
Proof. exact (MK_COMB (@lem4524582) (@lem4524581 _107639 _107642 _53776 d)). Qed.
Lemma lem4524584 {_100044 _107639 _107642 A B : Type'} (d : _107639) (_53776 : type656 _107639 _107642) (_53777 : type656 _107639 A) (h1 : _53777 = (term76 _107639 A)) : (term232 _100044 _107639 _107642 A B d _53776) = (term322 _100044 _107639 _107642 A B d _53776 _53777).
Proof. exact (MK_COMB (@lem4524583 _107639 _107642 _53776 d) (@lem4524538 _100044 _107639 _107642 A B _53776 _53777 h1)). Qed.
Lemma lem4524585 {_100044 _107639 _107642 A B : Type'} (_53776 : type656 _107639 _107642) (_53777 : type656 _107639 A) (h1 : _53777 = (term76 _107639 A)) : (term233 _100044 _107639 _107642 A B _53776) = (term323 _100044 _107639 _107642 A B _53776 _53777).
Proof. exact (fun_ext (fun d : _107639 => @lem4524584 _100044 _107639 _107642 A B d _53776 _53777 h1)). Qed.
Lemma lem4524586 {_107639 : Type'} : (@all _107639) = (@all _107639).
Proof. exact (eq_refl (@all _107639)). Qed.
Lemma lem4524587 {_100044 _107639 _107642 A B : Type'} (_53776 : type656 _107639 _107642) (_53777 : type656 _107639 A) (h1 : _53777 = (term76 _107639 A)) : (term234 _100044 _107639 _107642 A B _53776) = (term324 _100044 _107639 _107642 A B _53776 _53777).
Proof. exact (MK_COMB (@lem4524586 _107639) (@lem4524585 _100044 _107639 _107642 A B _53776 _53777 h1)). Qed.
Lemma lem4524588 {_107639 _107642 : Type'} (f : _107642 -> _107639) : f = f.
Proof. exact (eq_refl f). Qed.
Lemma lem4524605 {_107639 _107642 : Type'} (s : _107642 -> Prop) (f : _107642 -> _107639) (x : _107642) (d : _107639) : (term140 _107639 _107642 s f x d) = (term140 _107639 _107642 s f x d).
Proof. exact (eq_refl (term140 _107639 _107642 s f x d)). Qed.
Lemma lem4524606 {_107639 _107642 : Type'} (s : _107642 -> Prop) (f : _107642 -> _107639) (d : _107639) : (term141 _107639 _107642 s f d) = (term141 _107639 _107642 s f d).
Proof. exact (fun_ext (fun x : _107642 => @lem4524605 _107639 _107642 s f x d)). Qed.
Lemma lem4524607 {_107642 : Type'} : (@all _107642) = (@all _107642).
Proof. exact (eq_refl (@all _107642)). Qed.
Lemma lem4524608 {_107639 _107642 : Type'} (s : _107642 -> Prop) (f : _107642 -> _107639) (d : _107639) : (term142 _107639 _107642 s f d) = (term142 _107639 _107642 s f d).
Proof. exact (MK_COMB (@lem4524607 _107642) (@lem4524606 _107639 _107642 s f d)). Qed.
Lemma lem4524623 {_107639 _107642 : Type'} (s : _107642 -> Prop) (f : _107642 -> _107639) (x : _107642) (t : _107639 -> Prop) : (term143 _107639 _107642 s f x t) = (term143 _107639 _107642 s f x t).
Proof. exact (eq_refl (term143 _107639 _107642 s f x t)). Qed.
Lemma lem4524624 {_107639 _107642 : Type'} (s : _107642 -> Prop) (f : _107642 -> _107639) (t : _107639 -> Prop) : (term144 _107639 _107642 s f t) = (term144 _107639 _107642 s f t).
Proof. exact (fun_ext (fun x : _107642 => @lem4524623 _107639 _107642 s f x t)). Qed.
Lemma lem4524625 {_107642 : Type'} : (@all _107642) = (@all _107642).
Proof. exact (eq_refl (@all _107642)). Qed.
Lemma lem4524626 {_107639 _107642 : Type'} (s : _107642 -> Prop) (f : _107642 -> _107639) (t : _107639 -> Prop) : (term145 _107639 _107642 s f t) = (term145 _107639 _107642 s f t).
Proof. exact (MK_COMB (@lem4524625 _107642) (@lem4524624 _107639 _107642 s f t)). Qed.
Lemma lem4524627 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4524628 {_107639 _107642 : Type'} (s : _107642 -> Prop) (f : _107642 -> _107639) (t : _107639 -> Prop) : (term146 _107639 _107642 s f t) = (term146 _107639 _107642 s f t).
Proof. exact (MK_COMB (@lem4524627) (@lem4524626 _107639 _107642 s f t)). Qed.
Lemma lem4524629 {_107639 _107642 : Type'} (t : _107639 -> Prop) (s : _107642 -> Prop) (f : _107642 -> _107639) (d : _107639) : (term147 _107639 _107642 t s f d) = (term147 _107639 _107642 t s f d).
Proof. exact (MK_COMB (@lem4524628 _107639 _107642 s f t) (@lem4524608 _107639 _107642 s f d)). Qed.
Lemma lem4524632 {_107639 _107642 : Type'} (GEN_PVAR_149 : _107642 -> _107639) : (@SETSPEC (_107642 -> _107639) GEN_PVAR_149) = (@SETSPEC (_107642 -> _107639) GEN_PVAR_149).
Proof. exact (eq_refl (@SETSPEC (_107642 -> _107639) GEN_PVAR_149)). Qed.
Lemma lem4524633 {_107639 _107642 : Type'} (GEN_PVAR_149 : _107642 -> _107639) (t : _107639 -> Prop) (s : _107642 -> Prop) (f : _107642 -> _107639) (d : _107639) : (term148 _107639 _107642 GEN_PVAR_149 t s f d) = (term148 _107639 _107642 GEN_PVAR_149 t s f d).
Proof. exact (MK_COMB (@lem4524632 _107639 _107642 GEN_PVAR_149) (@lem4524629 _107639 _107642 t s f d)). Qed.
Lemma lem4524634 {_107639 _107642 : Type'} (GEN_PVAR_149 : _107642 -> _107639) (t : _107639 -> Prop) (s : _107642 -> Prop) (d : _107639) (f : _107642 -> _107639) : (term149 _107639 _107642 GEN_PVAR_149 t s d f) = (term149 _107639 _107642 GEN_PVAR_149 t s d f).
Proof. exact (MK_COMB (@lem4524633 _107639 _107642 GEN_PVAR_149 t s f d) (@lem4524588 _107639 _107642 f)). Qed.
Lemma lem4524635 {_107639 _107642 : Type'} (GEN_PVAR_149 : _107642 -> _107639) (t : _107639 -> Prop) (s : _107642 -> Prop) (d : _107639) : (term150 _107639 _107642 GEN_PVAR_149 t s d) = (term150 _107639 _107642 GEN_PVAR_149 t s d).
Proof. exact (fun_ext (fun f : _107642 -> _107639 => @lem4524634 _107639 _107642 GEN_PVAR_149 t s d f)). Qed.
Lemma lem4524636 {_107639 _107642 : Type'} : (@ex (_107642 -> _107639)) = (@ex (_107642 -> _107639)).
Proof. exact (eq_refl (@ex (_107642 -> _107639))). Qed.
Lemma lem4524637 {_107639 _107642 : Type'} (GEN_PVAR_149 : _107642 -> _107639) (t : _107639 -> Prop) (s : _107642 -> Prop) (d : _107639) : (term151 _107639 _107642 GEN_PVAR_149 t s d) = (term151 _107639 _107642 GEN_PVAR_149 t s d).
Proof. exact (MK_COMB (@lem4524636 _107639 _107642) (@lem4524635 _107639 _107642 GEN_PVAR_149 t s d)). Qed.
Lemma lem4524648 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (t : _107639 -> Prop) (s : _107642 -> Prop) (d : _107639) (GEN_PVAR_149 : _107642 -> _107639) : (term293 _107639 _107642 _53776 t s d GEN_PVAR_149) = (term293 _107639 _107642 _53776 t s d GEN_PVAR_149).
Proof. exact (eq_refl (term293 _107639 _107642 _53776 t s d GEN_PVAR_149)). Qed.
Lemma lem4524649 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (GEN_PVAR_149 : _107642 -> _107639) (t : _107639 -> Prop) (s : _107642 -> Prop) (d : _107639) : ((_53776 t s d GEN_PVAR_149) = (term151 _107639 _107642 GEN_PVAR_149 t s d)) = ((_53776 t s d GEN_PVAR_149) = (term151 _107639 _107642 GEN_PVAR_149 t s d)).
Proof. exact (MK_COMB (@lem4524648 _107639 _107642 _53776 t s d GEN_PVAR_149) (@lem4524637 _107639 _107642 GEN_PVAR_149 t s d)). Qed.
Lemma lem4524650 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (t : _107639 -> Prop) (s : _107642 -> Prop) (d : _107639) : (term295 _107639 _107642 _53776 t s d) = (term295 _107639 _107642 _53776 t s d).
Proof. exact (fun_ext (fun GEN_PVAR_149 : _107642 -> _107639 => @lem4524649 _107639 _107642 _53776 GEN_PVAR_149 t s d)). Qed.
Lemma lem4524651 {_107639 _107642 : Type'} : (@all (_107642 -> _107639)) = (@all (_107642 -> _107639)).
Proof. exact (eq_refl (@all (_107642 -> _107639))). Qed.
Lemma lem4524652 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (t : _107639 -> Prop) (s : _107642 -> Prop) (d : _107639) : (term296 _107639 _107642 _53776 t s d) = (term296 _107639 _107642 _53776 t s d).
Proof. exact (MK_COMB (@lem4524651 _107639 _107642) (@lem4524650 _107639 _107642 _53776 t s d)). Qed.
Lemma lem4524653 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (t : _107639 -> Prop) (s : _107642 -> Prop) : (term297 _107639 _107642 _53776 t s) = (term297 _107639 _107642 _53776 t s).
Proof. exact (fun_ext (fun d : _107639 => @lem4524652 _107639 _107642 _53776 t s d)). Qed.
Lemma lem4524654 {_107639 : Type'} : (@all _107639) = (@all _107639).
Proof. exact (eq_refl (@all _107639)). Qed.
Lemma lem4524655 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (t : _107639 -> Prop) (s : _107642 -> Prop) : (term298 _107639 _107642 _53776 t s) = (term298 _107639 _107642 _53776 t s).
Proof. exact (MK_COMB (@lem4524654 _107639) (@lem4524653 _107639 _107642 _53776 t s)). Qed.
Lemma lem4524656 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (t : _107639 -> Prop) : (term299 _107639 _107642 _53776 t) = (term299 _107639 _107642 _53776 t).
Proof. exact (fun_ext (fun s : _107642 -> Prop => @lem4524655 _107639 _107642 _53776 t s)). Qed.
Lemma lem4524657 {_107642 : Type'} : (@all (_107642 -> Prop)) = (@all (_107642 -> Prop)).
Proof. exact (eq_refl (@all (_107642 -> Prop))). Qed.
Lemma lem4524658 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (t : _107639 -> Prop) : (term300 _107639 _107642 _53776 t) = (term300 _107639 _107642 _53776 t).
Proof. exact (MK_COMB (@lem4524657 _107642) (@lem4524656 _107639 _107642 _53776 t)). Qed.
Lemma lem4524659 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) : (term301 _107639 _107642 _53776) = (term301 _107639 _107642 _53776).
Proof. exact (fun_ext (fun t : _107639 -> Prop => @lem4524658 _107639 _107642 _53776 t)). Qed.
Lemma lem4524660 {_107639 : Type'} : (@all (_107639 -> Prop)) = (@all (_107639 -> Prop)).
Proof. exact (eq_refl (@all (_107639 -> Prop))). Qed.
Lemma lem4524661 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) : (term302 _107639 _107642 _53776) = (term302 _107639 _107642 _53776).
Proof. exact (MK_COMB (@lem4524660 _107639) (@lem4524659 _107639 _107642 _53776)). Qed.
Lemma lem4524662 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4524663 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) : (term303 _107639 _107642 _53776) = (term303 _107639 _107642 _53776).
Proof. exact (MK_COMB (@lem4524662) (@lem4524661 _107639 _107642 _53776)). Qed.
Lemma lem4524664 {_100044 _107639 _107642 A B : Type'} (_53776 : type656 _107639 _107642) (_53777 : type656 _107639 A) (h1 : _53777 = (term76 _107639 A)) : (term304 _100044 _107639 _107642 A B _53776) = (term325 _100044 _107639 _107642 A B _53776 _53777).
Proof. exact (MK_COMB (@lem4524663 _107639 _107642 _53776) (@lem4524587 _100044 _107639 _107642 A B _53776 _53777 h1)). Qed.
Lemma lem4524665 {_100044 _107639 _107642 A B : Type'} (_53777 : type656 _107639 A) (h1 : _53777 = (term76 _107639 A)) : (term305 _100044 _107639 _107642 A B) = (term326 _100044 _107639 _107642 A B _53777).
Proof. exact (fun_ext (fun _53776 : type656 _107639 _107642 => @lem4524664 _100044 _107639 _107642 A B _53776 _53777 h1)). Qed.
Lemma lem4524666 {_107639 _107642 : Type'} : (@all ((_107639 -> Prop) -> (_107642 -> Prop) -> _107639 -> (_107642 -> _107639) -> Prop)) = (@all ((_107639 -> Prop) -> (_107642 -> Prop) -> _107639 -> (_107642 -> _107639) -> Prop)).
Proof. exact (eq_refl (@all ((_107639 -> Prop) -> (_107642 -> Prop) -> _107639 -> (_107642 -> _107639) -> Prop))). Qed.
Lemma lem4524667 {_100044 _107639 _107642 A B : Type'} (_53777 : type656 _107639 A) (h1 : _53777 = (term76 _107639 A)) : (term306 _100044 _107639 _107642 A B) = (term327 _100044 _107639 _107642 A B _53777).
Proof. exact (MK_COMB (@lem4524666 _107639 _107642) (@lem4524665 _100044 _107639 _107642 A B _53777 h1)). Qed.
Lemma lem4524668 {_100044 _107639 _107642 A B : Type'} (_53777 : type656 _107639 A) : term328 _100044 _107639 _107642 A B _53777.
Proof. exact (fun h0 : _53777 = (term76 _107639 A) => @lem4524667 _100044 _107639 _107642 A B _53777 h0). Qed.
Lemma lem4524669 {_100044 _107639 _107642 A B : Type'} : term329 _100044 _107639 _107642 A B.
Proof. exact (fun _53777 : type656 _107639 A => @lem4524668 _100044 _107639 _107642 A B _53777). Qed.
Lemma lem4524671 {_3603 : Type'} (P : Prop) (c : _3603) (Q : _3603 -> Prop) : term237 _3603 P c Q.
Proof. exact (EQ_MP (@lem20230 _3603 P c Q) (@lem0)). Qed.
Lemma lem4524672 {_107639 A : Type'} (P : Prop) (c : type656 _107639 A) (Q : type147 _107639 A) : term238 _107639 A P c Q.
Proof. exact (@lem4524671 (type656 _107639 A) P c Q). Qed.
Lemma lem4524673 {_100044 _107639 _107642 A B : Type'} : term330 _100044 _107639 _107642 A B.
Proof. exact (@lem4524672 _107639 A (term306 _100044 _107639 _107642 A B) (term76 _107639 A) (term331 _100044 _107639 _107642 A B)). Qed.
Lemma lem4524674 {_100044 _107639 _107642 A B : Type'} (_53777 : type656 _107639 A) : (term332 _100044 _107639 _107642 A B _53777) = (term327 _100044 _107639 _107642 A B _53777).
Proof. exact (eq_refl (term332 _100044 _107639 _107642 A B _53777)). Qed.
Lemma lem4524675 {_100044 _107639 _107642 A B : Type'} : (term333 _100044 _107639 _107642 A B) = (term333 _100044 _107639 _107642 A B).
Proof. exact (eq_refl (term333 _100044 _107639 _107642 A B)). Qed.
Lemma lem4524676 {_100044 _107639 _107642 A B : Type'} (_53777 : type656 _107639 A) : ((term306 _100044 _107639 _107642 A B) = (term332 _100044 _107639 _107642 A B _53777)) = ((term306 _100044 _107639 _107642 A B) = (term327 _100044 _107639 _107642 A B _53777)).
Proof. exact (MK_COMB (@lem4524675 _100044 _107639 _107642 A B) (@lem4524674 _100044 _107639 _107642 A B _53777)). Qed.
Lemma lem4524677 {_107639 A : Type'} (_53777 : type656 _107639 A) : (term243 _107639 A _53777) = (term243 _107639 A _53777).
Proof. exact (eq_refl (term243 _107639 A _53777)). Qed.
Lemma lem4524678 {_100044 _107639 _107642 A B : Type'} (_53777 : type656 _107639 A) : (term334 _100044 _107639 _107642 A B _53777) = (term328 _100044 _107639 _107642 A B _53777).
Proof. exact (MK_COMB (@lem4524677 _107639 A _53777) (@lem4524676 _100044 _107639 _107642 A B _53777)). Qed.
Lemma lem4524679 {_100044 _107639 _107642 A B : Type'} : (term335 _100044 _107639 _107642 A B) = (term336 _100044 _107639 _107642 A B).
Proof. exact (fun_ext (fun _53777 : type656 _107639 A => @lem4524678 _100044 _107639 _107642 A B _53777)). Qed.
Lemma lem4524680 {_107639 A : Type'} : (@all ((_107639 -> Prop) -> (A -> Prop) -> _107639 -> (A -> _107639) -> Prop)) = (@all ((_107639 -> Prop) -> (A -> Prop) -> _107639 -> (A -> _107639) -> Prop)).
Proof. exact (eq_refl (@all ((_107639 -> Prop) -> (A -> Prop) -> _107639 -> (A -> _107639) -> Prop))). Qed.
Lemma lem4524681 {_100044 _107639 _107642 A B : Type'} : (term337 _100044 _107639 _107642 A B) = (term329 _100044 _107639 _107642 A B).
Proof. exact (MK_COMB (@lem4524680 _107639 A) (@lem4524679 _100044 _107639 _107642 A B)). Qed.
Lemma lem4524682 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4524683 {_100044 _107639 _107642 A B : Type'} : (term338 _100044 _107639 _107642 A B) = (term339 _100044 _107639 _107642 A B).
Proof. exact (MK_COMB (@lem4524682) (@lem4524681 _100044 _107639 _107642 A B)). Qed.
Lemma lem4524684 {_100044 _107639 _107642 A B : Type'} (_53777 : type656 _107639 A) : (term332 _100044 _107639 _107642 A B _53777) = (term327 _100044 _107639 _107642 A B _53777).
Proof. exact (eq_refl (term332 _100044 _107639 _107642 A B _53777)). Qed.
Lemma lem4524685 {_107639 A : Type'} (_53777 : type656 _107639 A) : (term243 _107639 A _53777) = (term243 _107639 A _53777).
Proof. exact (eq_refl (term243 _107639 A _53777)). Qed.
Lemma lem4524686 {_100044 _107639 _107642 A B : Type'} (_53777 : type656 _107639 A) : (term340 _100044 _107639 _107642 A B _53777) = (term341 _100044 _107639 _107642 A B _53777).
Proof. exact (MK_COMB (@lem4524685 _107639 A _53777) (@lem4524684 _100044 _107639 _107642 A B _53777)). Qed.
Lemma lem4524687 {_100044 _107639 _107642 A B : Type'} : (term342 _100044 _107639 _107642 A B) = (term343 _100044 _107639 _107642 A B).
Proof. exact (fun_ext (fun _53777 : type656 _107639 A => @lem4524686 _100044 _107639 _107642 A B _53777)). Qed.
Lemma lem4524688 {_107639 A : Type'} : (@all ((_107639 -> Prop) -> (A -> Prop) -> _107639 -> (A -> _107639) -> Prop)) = (@all ((_107639 -> Prop) -> (A -> Prop) -> _107639 -> (A -> _107639) -> Prop)).
Proof. exact (eq_refl (@all ((_107639 -> Prop) -> (A -> Prop) -> _107639 -> (A -> _107639) -> Prop))). Qed.
Lemma lem4524689 {_100044 _107639 _107642 A B : Type'} : (term344 _100044 _107639 _107642 A B) = (term345 _100044 _107639 _107642 A B).
Proof. exact (MK_COMB (@lem4524688 _107639 A) (@lem4524687 _100044 _107639 _107642 A B)). Qed.
Lemma lem4524690 {_100044 _107639 _107642 A B : Type'} : (term333 _100044 _107639 _107642 A B) = (term333 _100044 _107639 _107642 A B).
Proof. exact (eq_refl (term333 _100044 _107639 _107642 A B)). Qed.
Lemma lem4524691 {_100044 _107639 _107642 A B : Type'} : ((term306 _100044 _107639 _107642 A B) = (term344 _100044 _107639 _107642 A B)) = ((term306 _100044 _107639 _107642 A B) = (term345 _100044 _107639 _107642 A B)).
Proof. exact (MK_COMB (@lem4524690 _100044 _107639 _107642 A B) (@lem4524689 _100044 _107639 _107642 A B)). Qed.
Lemma lem4524692 {_100044 _107639 _107642 A B : Type'} : (term330 _100044 _107639 _107642 A B) = (term346 _100044 _107639 _107642 A B).
Proof. exact (MK_COMB (@lem4524683 _100044 _107639 _107642 A B) (@lem4524691 _100044 _107639 _107642 A B)). Qed.
Lemma lem4524693 {_100044 _107639 _107642 A B : Type'} : term346 _100044 _107639 _107642 A B.
Proof. exact (EQ_MP (@lem4524692 _100044 _107639 _107642 A B) (@lem4524673 _100044 _107639 _107642 A B)). Qed.
Lemma lem4524694 {_100044 _107639 _107642 A B : Type'} : (term306 _100044 _107639 _107642 A B) = (term345 _100044 _107639 _107642 A B).
Proof. exact (@lem4524693 _100044 _107639 _107642 A B (@lem4524669 _100044 _107639 _107642 A B)). Qed.
Lemma lem4524696 {_3571 _3575 : Type'} (s : _3575 -> _3571) (t : _3575 -> _3571) : (s = (term257 _3571 _3575 t)) = (term258 _3571 _3575 s t).
Proof. exact (EQ_MP (@lem19792 _3571 _3575 s t) (@lem0)). Qed.
Lemma lem4524697 {_107639 A : Type'} (s : type656 _107639 A) (t : type656 _107639 A) : (s = (term259 _107639 A t)) = (term260 _107639 A s t).
Proof. exact (@lem4524696 (type859 _107639 A) (_107639 -> Prop) s t). Qed.
Lemma lem4524698 {_107639 A : Type'} (_53777 : type656 _107639 A) : (_53777 = (term261 _107639 A)) = (term262 _107639 A _53777).
Proof. exact (@lem4524697 _107639 A _53777 (term76 _107639 A)). Qed.
Lemma lem4524699 {_107639 A : Type'} (t : _107639 -> Prop) : (term77 _107639 A t) = (term78 _107639 A t).
Proof. exact (eq_refl (term77 _107639 A t)). Qed.
Lemma lem4524700 {_107639 A : Type'} : (term261 _107639 A) = (term76 _107639 A).
Proof. exact (fun_ext (fun t : _107639 -> Prop => @lem4524699 _107639 A t)). Qed.
Lemma lem4524701 {_107639 A : Type'} (_53777 : type656 _107639 A) : (@eq ((_107639 -> Prop) -> (A -> Prop) -> _107639 -> (A -> _107639) -> Prop) _53777) = (@eq ((_107639 -> Prop) -> (A -> Prop) -> _107639 -> (A -> _107639) -> Prop) _53777).
Proof. exact (eq_refl (@eq ((_107639 -> Prop) -> (A -> Prop) -> _107639 -> (A -> _107639) -> Prop) _53777)). Qed.
Lemma lem4524702 {_107639 A : Type'} (_53777 : type656 _107639 A) : (_53777 = (term261 _107639 A)) = (_53777 = (term76 _107639 A)).
Proof. exact (MK_COMB (@lem4524701 _107639 A _53777) (@lem4524700 _107639 A)). Qed.
Lemma lem4524703 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4524704 {_107639 A : Type'} (_53777 : type656 _107639 A) : (term263 _107639 A _53777) = (term264 _107639 A _53777).
Proof. exact (MK_COMB (@lem4524703) (@lem4524702 _107639 A _53777)). Qed.
Lemma lem4524705 {_107639 A : Type'} (t : _107639 -> Prop) : (term77 _107639 A t) = (term78 _107639 A t).
Proof. exact (eq_refl (term77 _107639 A t)). Qed.
Lemma lem4524706 {_107639 A : Type'} (_53777 : type656 _107639 A) (t : _107639 -> Prop) : (term79 _107639 A _53777 t) = (term79 _107639 A _53777 t).
Proof. exact (eq_refl (term79 _107639 A _53777 t)). Qed.
Lemma lem4524707 {_107639 A : Type'} (_53777 : type656 _107639 A) (t : _107639 -> Prop) : ((_53777 t) = (term77 _107639 A t)) = ((_53777 t) = (term78 _107639 A t)).
Proof. exact (MK_COMB (@lem4524706 _107639 A _53777 t) (@lem4524705 _107639 A t)). Qed.
Lemma lem4524708 {_107639 A : Type'} (_53777 : type656 _107639 A) : (term265 _107639 A _53777) = (term266 _107639 A _53777).
Proof. exact (fun_ext (fun t : _107639 -> Prop => @lem4524707 _107639 A _53777 t)). Qed.
Lemma lem4524709 {_107639 : Type'} : (@all (_107639 -> Prop)) = (@all (_107639 -> Prop)).
Proof. exact (eq_refl (@all (_107639 -> Prop))). Qed.
Lemma lem4524710 {_107639 A : Type'} (_53777 : type656 _107639 A) : (term262 _107639 A _53777) = (term267 _107639 A _53777).
Proof. exact (MK_COMB (@lem4524709 _107639) (@lem4524708 _107639 A _53777)). Qed.
Lemma lem4524711 {_107639 A : Type'} (_53777 : type656 _107639 A) : ((_53777 = (term261 _107639 A)) = (term262 _107639 A _53777)) = ((_53777 = (term76 _107639 A)) = (term267 _107639 A _53777)).
Proof. exact (MK_COMB (@lem4524704 _107639 A _53777) (@lem4524710 _107639 A _53777)). Qed.
Lemma lem4524712 {_107639 A : Type'} (_53777 : type656 _107639 A) : (_53777 = (term76 _107639 A)) = (term267 _107639 A _53777).
Proof. exact (EQ_MP (@lem4524711 _107639 A _53777) (@lem4524698 _107639 A _53777)). Qed.
Lemma lem4524714 {_3571 _3575 : Type'} (s : _3575 -> _3571) (t : _3575 -> _3571) : (s = (term257 _3571 _3575 t)) = (term258 _3571 _3575 s t).
Proof. exact (EQ_MP (@lem19792 _3571 _3575 s t) (@lem0)). Qed.
Lemma lem4524715 {_107639 A : Type'} (s : type859 _107639 A) (t : type859 _107639 A) : (s = (term268 _107639 A t)) = (term269 _107639 A s t).
Proof. exact (@lem4524714 (type1372 _107639 A) (A -> Prop) s t). Qed.
Lemma lem4524716 {_107639 A : Type'} (_53777 : type656 _107639 A) (t : _107639 -> Prop) : ((_53777 t) = (term270 _107639 A t)) = (term271 _107639 A _53777 t).
Proof. exact (@lem4524715 _107639 A (_53777 t) (term78 _107639 A t)). Qed.
Lemma lem4524717 {_107639 A : Type'} (t : _107639 -> Prop) (s : A -> Prop) : (term80 _107639 A t s) = (term81 _107639 A t s).
Proof. exact (eq_refl (term80 _107639 A t s)). Qed.
Lemma lem4524718 {_107639 A : Type'} (t : _107639 -> Prop) : (term270 _107639 A t) = (term78 _107639 A t).
Proof. exact (fun_ext (fun s : A -> Prop => @lem4524717 _107639 A t s)). Qed.
Lemma lem4524719 {_107639 A : Type'} (_53777 : type656 _107639 A) (t : _107639 -> Prop) : (term79 _107639 A _53777 t) = (term79 _107639 A _53777 t).
Proof. exact (eq_refl (term79 _107639 A _53777 t)). Qed.
Lemma lem4524720 {_107639 A : Type'} (_53777 : type656 _107639 A) (t : _107639 -> Prop) : ((_53777 t) = (term270 _107639 A t)) = ((_53777 t) = (term78 _107639 A t)).
Proof. exact (MK_COMB (@lem4524719 _107639 A _53777 t) (@lem4524718 _107639 A t)). Qed.
Lemma lem4524721 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4524722 {_107639 A : Type'} (_53777 : type656 _107639 A) (t : _107639 -> Prop) : (term272 _107639 A _53777 t) = (term273 _107639 A _53777 t).
Proof. exact (MK_COMB (@lem4524721) (@lem4524720 _107639 A _53777 t)). Qed.
Lemma lem4524723 {_107639 A : Type'} (t : _107639 -> Prop) (s : A -> Prop) : (term80 _107639 A t s) = (term81 _107639 A t s).
Proof. exact (eq_refl (term80 _107639 A t s)). Qed.
Lemma lem4524724 {_107639 A : Type'} (_53777 : type656 _107639 A) (t : _107639 -> Prop) (s : A -> Prop) : (term82 _107639 A _53777 t s) = (term82 _107639 A _53777 t s).
Proof. exact (eq_refl (term82 _107639 A _53777 t s)). Qed.
Lemma lem4524725 {_107639 A : Type'} (_53777 : type656 _107639 A) (t : _107639 -> Prop) (s : A -> Prop) : ((_53777 t s) = (term80 _107639 A t s)) = ((_53777 t s) = (term81 _107639 A t s)).
Proof. exact (MK_COMB (@lem4524724 _107639 A _53777 t s) (@lem4524723 _107639 A t s)). Qed.
Lemma lem4524726 {_107639 A : Type'} (_53777 : type656 _107639 A) (t : _107639 -> Prop) : (term274 _107639 A _53777 t) = (term275 _107639 A _53777 t).
Proof. exact (fun_ext (fun s : A -> Prop => @lem4524725 _107639 A _53777 t s)). Qed.
Lemma lem4524727 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem4524728 {_107639 A : Type'} (_53777 : type656 _107639 A) (t : _107639 -> Prop) : (term271 _107639 A _53777 t) = (term276 _107639 A _53777 t).
Proof. exact (MK_COMB (@lem4524727 A) (@lem4524726 _107639 A _53777 t)). Qed.
Lemma lem4524729 {_107639 A : Type'} (_53777 : type656 _107639 A) (t : _107639 -> Prop) : (((_53777 t) = (term270 _107639 A t)) = (term271 _107639 A _53777 t)) = (((_53777 t) = (term78 _107639 A t)) = (term276 _107639 A _53777 t)).
Proof. exact (MK_COMB (@lem4524722 _107639 A _53777 t) (@lem4524728 _107639 A _53777 t)). Qed.
Lemma lem4524730 {_107639 A : Type'} (_53777 : type656 _107639 A) (t : _107639 -> Prop) : ((_53777 t) = (term78 _107639 A t)) = (term276 _107639 A _53777 t).
Proof. exact (EQ_MP (@lem4524729 _107639 A _53777 t) (@lem4524716 _107639 A _53777 t)). Qed.
Lemma lem4524732 {_3571 _3575 : Type'} (s : _3575 -> _3571) (t : _3575 -> _3571) : (s = (term257 _3571 _3575 t)) = (term258 _3571 _3575 s t).
Proof. exact (EQ_MP (@lem19792 _3571 _3575 s t) (@lem0)). Qed.
Lemma lem4524733 {_107639 A : Type'} (s : type1372 _107639 A) (t : type1372 _107639 A) : (s = (term277 _107639 A t)) = (term278 _107639 A s t).
Proof. exact (@lem4524732 (type805 _107639 A) _107639 s t). Qed.
Lemma lem4524734 {_107639 A : Type'} (_53777 : type656 _107639 A) (t : _107639 -> Prop) (s : A -> Prop) : ((_53777 t s) = (term279 _107639 A t s)) = (term280 _107639 A _53777 t s).
Proof. exact (@lem4524733 _107639 A (_53777 t s) (term81 _107639 A t s)). Qed.
Lemma lem4524735 {_107639 A : Type'} (t : _107639 -> Prop) (s : A -> Prop) (d : _107639) : (term83 _107639 A t s d) = (term84 _107639 A t s d).
Proof. exact (eq_refl (term83 _107639 A t s d)). Qed.
Lemma lem4524736 {_107639 A : Type'} (t : _107639 -> Prop) (s : A -> Prop) : (term279 _107639 A t s) = (term81 _107639 A t s).
Proof. exact (fun_ext (fun d : _107639 => @lem4524735 _107639 A t s d)). Qed.
Lemma lem4524737 {_107639 A : Type'} (_53777 : type656 _107639 A) (t : _107639 -> Prop) (s : A -> Prop) : (term82 _107639 A _53777 t s) = (term82 _107639 A _53777 t s).
Proof. exact (eq_refl (term82 _107639 A _53777 t s)). Qed.
Lemma lem4524738 {_107639 A : Type'} (_53777 : type656 _107639 A) (t : _107639 -> Prop) (s : A -> Prop) : ((_53777 t s) = (term279 _107639 A t s)) = ((_53777 t s) = (term81 _107639 A t s)).
Proof. exact (MK_COMB (@lem4524737 _107639 A _53777 t s) (@lem4524736 _107639 A t s)). Qed.
Lemma lem4524739 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4524740 {_107639 A : Type'} (_53777 : type656 _107639 A) (t : _107639 -> Prop) (s : A -> Prop) : (term281 _107639 A _53777 t s) = (term282 _107639 A _53777 t s).
Proof. exact (MK_COMB (@lem4524739) (@lem4524738 _107639 A _53777 t s)). Qed.
Lemma lem4524741 {_107639 A : Type'} (t : _107639 -> Prop) (s : A -> Prop) (d : _107639) : (term83 _107639 A t s d) = (term84 _107639 A t s d).
Proof. exact (eq_refl (term83 _107639 A t s d)). Qed.
Lemma lem4524742 {_107639 A : Type'} (_53777 : type656 _107639 A) (t : _107639 -> Prop) (s : A -> Prop) (d : _107639) : (term85 _107639 A _53777 t s d) = (term85 _107639 A _53777 t s d).
Proof. exact (eq_refl (term85 _107639 A _53777 t s d)). Qed.
Lemma lem4524743 {_107639 A : Type'} (_53777 : type656 _107639 A) (t : _107639 -> Prop) (s : A -> Prop) (d : _107639) : ((_53777 t s d) = (term83 _107639 A t s d)) = ((_53777 t s d) = (term84 _107639 A t s d)).
Proof. exact (MK_COMB (@lem4524742 _107639 A _53777 t s d) (@lem4524741 _107639 A t s d)). Qed.
Lemma lem4524744 {_107639 A : Type'} (_53777 : type656 _107639 A) (t : _107639 -> Prop) (s : A -> Prop) : (term283 _107639 A _53777 t s) = (term284 _107639 A _53777 t s).
Proof. exact (fun_ext (fun d : _107639 => @lem4524743 _107639 A _53777 t s d)). Qed.
Lemma lem4524745 {_107639 : Type'} : (@all _107639) = (@all _107639).
Proof. exact (eq_refl (@all _107639)). Qed.
Lemma lem4524746 {_107639 A : Type'} (_53777 : type656 _107639 A) (t : _107639 -> Prop) (s : A -> Prop) : (term280 _107639 A _53777 t s) = (term285 _107639 A _53777 t s).
Proof. exact (MK_COMB (@lem4524745 _107639) (@lem4524744 _107639 A _53777 t s)). Qed.
Lemma lem4524747 {_107639 A : Type'} (_53777 : type656 _107639 A) (t : _107639 -> Prop) (s : A -> Prop) : (((_53777 t s) = (term279 _107639 A t s)) = (term280 _107639 A _53777 t s)) = (((_53777 t s) = (term81 _107639 A t s)) = (term285 _107639 A _53777 t s)).
Proof. exact (MK_COMB (@lem4524740 _107639 A _53777 t s) (@lem4524746 _107639 A _53777 t s)). Qed.
Lemma lem4524748 {_107639 A : Type'} (_53777 : type656 _107639 A) (t : _107639 -> Prop) (s : A -> Prop) : ((_53777 t s) = (term81 _107639 A t s)) = (term285 _107639 A _53777 t s).
Proof. exact (EQ_MP (@lem4524747 _107639 A _53777 t s) (@lem4524734 _107639 A _53777 t s)). Qed.
Lemma lem4524750 {_3571 _3575 : Type'} (s : _3575 -> _3571) (t : _3575 -> _3571) : (s = (term257 _3571 _3575 t)) = (term258 _3571 _3575 s t).
Proof. exact (EQ_MP (@lem19792 _3571 _3575 s t) (@lem0)). Qed.
Lemma lem4524751 {_107639 A : Type'} (s : type805 _107639 A) (t : type805 _107639 A) : (s = (term286 _107639 A t)) = (term287 _107639 A s t).
Proof. exact (@lem4524750 Prop (A -> _107639) s t). Qed.
Lemma lem4524752 {_107639 A : Type'} (_53777 : type656 _107639 A) (t : _107639 -> Prop) (s : A -> Prop) (d : _107639) : ((_53777 t s d) = (term288 _107639 A t s d)) = (term289 _107639 A _53777 t s d).
Proof. exact (@lem4524751 _107639 A (_53777 t s d) (term84 _107639 A t s d)). Qed.
Lemma lem4524753 {_107639 A : Type'} (GEN_PVAR_148 : A -> _107639) (t : _107639 -> Prop) (s : A -> Prop) (d : _107639) : (term290 _107639 A t s d GEN_PVAR_148) = (term151 _107639 A GEN_PVAR_148 t s d).
Proof. exact (eq_refl (term290 _107639 A t s d GEN_PVAR_148)). Qed.
Lemma lem4524754 {_107639 A : Type'} (t : _107639 -> Prop) (s : A -> Prop) (d : _107639) : (term288 _107639 A t s d) = (term84 _107639 A t s d).
Proof. exact (fun_ext (fun GEN_PVAR_148 : A -> _107639 => @lem4524753 _107639 A GEN_PVAR_148 t s d)). Qed.
Lemma lem4524755 {_107639 A : Type'} (_53777 : type656 _107639 A) (t : _107639 -> Prop) (s : A -> Prop) (d : _107639) : (term85 _107639 A _53777 t s d) = (term85 _107639 A _53777 t s d).
Proof. exact (eq_refl (term85 _107639 A _53777 t s d)). Qed.
Lemma lem4524756 {_107639 A : Type'} (_53777 : type656 _107639 A) (t : _107639 -> Prop) (s : A -> Prop) (d : _107639) : ((_53777 t s d) = (term288 _107639 A t s d)) = ((_53777 t s d) = (term84 _107639 A t s d)).
Proof. exact (MK_COMB (@lem4524755 _107639 A _53777 t s d) (@lem4524754 _107639 A t s d)). Qed.
Lemma lem4524757 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4524758 {_107639 A : Type'} (_53777 : type656 _107639 A) (t : _107639 -> Prop) (s : A -> Prop) (d : _107639) : (term291 _107639 A _53777 t s d) = (term292 _107639 A _53777 t s d).
Proof. exact (MK_COMB (@lem4524757) (@lem4524756 _107639 A _53777 t s d)). Qed.
Lemma lem4524759 {_107639 A : Type'} (GEN_PVAR_148 : A -> _107639) (t : _107639 -> Prop) (s : A -> Prop) (d : _107639) : (term290 _107639 A t s d GEN_PVAR_148) = (term151 _107639 A GEN_PVAR_148 t s d).
Proof. exact (eq_refl (term290 _107639 A t s d GEN_PVAR_148)). Qed.
Lemma lem4524760 {_107639 A : Type'} (_53777 : type656 _107639 A) (t : _107639 -> Prop) (s : A -> Prop) (d : _107639) (GEN_PVAR_148 : A -> _107639) : (term293 _107639 A _53777 t s d GEN_PVAR_148) = (term293 _107639 A _53777 t s d GEN_PVAR_148).
Proof. exact (eq_refl (term293 _107639 A _53777 t s d GEN_PVAR_148)). Qed.
Lemma lem4524761 {_107639 A : Type'} (_53777 : type656 _107639 A) (GEN_PVAR_148 : A -> _107639) (t : _107639 -> Prop) (s : A -> Prop) (d : _107639) : ((_53777 t s d GEN_PVAR_148) = (term290 _107639 A t s d GEN_PVAR_148)) = ((_53777 t s d GEN_PVAR_148) = (term151 _107639 A GEN_PVAR_148 t s d)).
Proof. exact (MK_COMB (@lem4524760 _107639 A _53777 t s d GEN_PVAR_148) (@lem4524759 _107639 A GEN_PVAR_148 t s d)). Qed.
Lemma lem4524762 {_107639 A : Type'} (_53777 : type656 _107639 A) (t : _107639 -> Prop) (s : A -> Prop) (d : _107639) : (term294 _107639 A _53777 t s d) = (term295 _107639 A _53777 t s d).
Proof. exact (fun_ext (fun GEN_PVAR_148 : A -> _107639 => @lem4524761 _107639 A _53777 GEN_PVAR_148 t s d)). Qed.
Lemma lem4524763 {_107639 A : Type'} : (@all (A -> _107639)) = (@all (A -> _107639)).
Proof. exact (eq_refl (@all (A -> _107639))). Qed.
Lemma lem4524764 {_107639 A : Type'} (_53777 : type656 _107639 A) (t : _107639 -> Prop) (s : A -> Prop) (d : _107639) : (term289 _107639 A _53777 t s d) = (term296 _107639 A _53777 t s d).
Proof. exact (MK_COMB (@lem4524763 _107639 A) (@lem4524762 _107639 A _53777 t s d)). Qed.
Lemma lem4524765 {_107639 A : Type'} (_53777 : type656 _107639 A) (t : _107639 -> Prop) (s : A -> Prop) (d : _107639) : (((_53777 t s d) = (term288 _107639 A t s d)) = (term289 _107639 A _53777 t s d)) = (((_53777 t s d) = (term84 _107639 A t s d)) = (term296 _107639 A _53777 t s d)).
Proof. exact (MK_COMB (@lem4524758 _107639 A _53777 t s d) (@lem4524764 _107639 A _53777 t s d)). Qed.
Lemma lem4524766 {_107639 A : Type'} (_53777 : type656 _107639 A) (t : _107639 -> Prop) (s : A -> Prop) (d : _107639) : ((_53777 t s d) = (term84 _107639 A t s d)) = (term296 _107639 A _53777 t s d).
Proof. exact (EQ_MP (@lem4524765 _107639 A _53777 t s d) (@lem4524752 _107639 A _53777 t s d)). Qed.
Lemma lem4524767 {_107639 A : Type'} (_53777 : type656 _107639 A) (GEN_PVAR_148 : A -> _107639) (t : _107639 -> Prop) (s : A -> Prop) (d : _107639) : ((_53777 t s d GEN_PVAR_148) = (term151 _107639 A GEN_PVAR_148 t s d)) = ((_53777 t s d GEN_PVAR_148) = (term151 _107639 A GEN_PVAR_148 t s d)).
Proof. exact (eq_refl ((_53777 t s d GEN_PVAR_148) = (term151 _107639 A GEN_PVAR_148 t s d))). Qed.
Lemma lem4524768 {_107639 A : Type'} (_53777 : type656 _107639 A) (t : _107639 -> Prop) (s : A -> Prop) (d : _107639) : (term295 _107639 A _53777 t s d) = (term295 _107639 A _53777 t s d).
Proof. exact (fun_ext (fun GEN_PVAR_148 : A -> _107639 => @lem4524767 _107639 A _53777 GEN_PVAR_148 t s d)). Qed.
Lemma lem4524769 {_107639 A : Type'} : (@all (A -> _107639)) = (@all (A -> _107639)).
Proof. exact (eq_refl (@all (A -> _107639))). Qed.
Lemma lem4524770 {_107639 A : Type'} (_53777 : type656 _107639 A) (t : _107639 -> Prop) (s : A -> Prop) (d : _107639) : (term296 _107639 A _53777 t s d) = (term296 _107639 A _53777 t s d).
Proof. exact (MK_COMB (@lem4524769 _107639 A) (@lem4524768 _107639 A _53777 t s d)). Qed.
Lemma lem4524771 {_107639 A : Type'} (_53777 : type656 _107639 A) (t : _107639 -> Prop) (s : A -> Prop) (d : _107639) : ((_53777 t s d) = (term84 _107639 A t s d)) = (term296 _107639 A _53777 t s d).
Proof. exact (TRANS (@lem4524766 _107639 A _53777 t s d) (@lem4524770 _107639 A _53777 t s d)). Qed.
Lemma lem4524772 {_107639 A : Type'} (_53777 : type656 _107639 A) (t : _107639 -> Prop) (s : A -> Prop) : (term284 _107639 A _53777 t s) = (term297 _107639 A _53777 t s).
Proof. exact (fun_ext (fun d : _107639 => @lem4524771 _107639 A _53777 t s d)). Qed.
Lemma lem4524773 {_107639 : Type'} : (@all _107639) = (@all _107639).
Proof. exact (eq_refl (@all _107639)). Qed.
Lemma lem4524774 {_107639 A : Type'} (_53777 : type656 _107639 A) (t : _107639 -> Prop) (s : A -> Prop) : (term285 _107639 A _53777 t s) = (term298 _107639 A _53777 t s).
Proof. exact (MK_COMB (@lem4524773 _107639) (@lem4524772 _107639 A _53777 t s)). Qed.
Lemma lem4524775 {_107639 A : Type'} (_53777 : type656 _107639 A) (t : _107639 -> Prop) (s : A -> Prop) : ((_53777 t s) = (term81 _107639 A t s)) = (term298 _107639 A _53777 t s).
Proof. exact (TRANS (@lem4524748 _107639 A _53777 t s) (@lem4524774 _107639 A _53777 t s)). Qed.
Lemma lem4524776 {_107639 A : Type'} (_53777 : type656 _107639 A) (t : _107639 -> Prop) : (term275 _107639 A _53777 t) = (term299 _107639 A _53777 t).
Proof. exact (fun_ext (fun s : A -> Prop => @lem4524775 _107639 A _53777 t s)). Qed.
Lemma lem4524777 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem4524778 {_107639 A : Type'} (_53777 : type656 _107639 A) (t : _107639 -> Prop) : (term276 _107639 A _53777 t) = (term300 _107639 A _53777 t).
Proof. exact (MK_COMB (@lem4524777 A) (@lem4524776 _107639 A _53777 t)). Qed.
Lemma lem4524779 {_107639 A : Type'} (_53777 : type656 _107639 A) (t : _107639 -> Prop) : ((_53777 t) = (term78 _107639 A t)) = (term300 _107639 A _53777 t).
Proof. exact (TRANS (@lem4524730 _107639 A _53777 t) (@lem4524778 _107639 A _53777 t)). Qed.
Lemma lem4524780 {_107639 A : Type'} (_53777 : type656 _107639 A) : (term266 _107639 A _53777) = (term301 _107639 A _53777).
Proof. exact (fun_ext (fun t : _107639 -> Prop => @lem4524779 _107639 A _53777 t)). Qed.
Lemma lem4524781 {_107639 : Type'} : (@all (_107639 -> Prop)) = (@all (_107639 -> Prop)).
Proof. exact (eq_refl (@all (_107639 -> Prop))). Qed.
Lemma lem4524782 {_107639 A : Type'} (_53777 : type656 _107639 A) : (term267 _107639 A _53777) = (term302 _107639 A _53777).
Proof. exact (MK_COMB (@lem4524781 _107639) (@lem4524780 _107639 A _53777)). Qed.
Lemma lem4524783 {_107639 A : Type'} (_53777 : type656 _107639 A) : (_53777 = (term76 _107639 A)) = (term302 _107639 A _53777).
Proof. exact (TRANS (@lem4524712 _107639 A _53777) (@lem4524782 _107639 A _53777)). Qed.
Lemma lem4524784 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4524785 {_107639 A : Type'} (_53777 : type656 _107639 A) : (term243 _107639 A _53777) = (term303 _107639 A _53777).
Proof. exact (MK_COMB (@lem4524784) (@lem4524783 _107639 A _53777)). Qed.
Lemma lem4524786 {_100044 _107639 _107642 A B : Type'} (_53777 : type656 _107639 A) : (term327 _100044 _107639 _107642 A B _53777) = (term327 _100044 _107639 _107642 A B _53777).
Proof. exact (eq_refl (term327 _100044 _107639 _107642 A B _53777)). Qed.
Lemma lem4524787 {_100044 _107639 _107642 A B : Type'} (_53777 : type656 _107639 A) : (term341 _100044 _107639 _107642 A B _53777) = (term347 _100044 _107639 _107642 A B _53777).
Proof. exact (MK_COMB (@lem4524785 _107639 A _53777) (@lem4524786 _100044 _107639 _107642 A B _53777)). Qed.
Lemma lem4524788 {_100044 _107639 _107642 A B : Type'} : (term343 _100044 _107639 _107642 A B) = (term348 _100044 _107639 _107642 A B).
Proof. exact (fun_ext (fun _53777 : type656 _107639 A => @lem4524787 _100044 _107639 _107642 A B _53777)). Qed.
Lemma lem4524789 {_107639 A : Type'} : (@all ((_107639 -> Prop) -> (A -> Prop) -> _107639 -> (A -> _107639) -> Prop)) = (@all ((_107639 -> Prop) -> (A -> Prop) -> _107639 -> (A -> _107639) -> Prop)).
Proof. exact (eq_refl (@all ((_107639 -> Prop) -> (A -> Prop) -> _107639 -> (A -> _107639) -> Prop))). Qed.
Lemma lem4524790 {_100044 _107639 _107642 A B : Type'} : (term345 _100044 _107639 _107642 A B) = (term349 _100044 _107639 _107642 A B).
Proof. exact (MK_COMB (@lem4524789 _107639 A) (@lem4524788 _100044 _107639 _107642 A B)). Qed.
Lemma lem4524791 {_100044 _107639 _107642 A B : Type'} : (term333 _100044 _107639 _107642 A B) = (term333 _100044 _107639 _107642 A B).
Proof. exact (eq_refl (term333 _100044 _107639 _107642 A B)). Qed.
Lemma lem4524792 {_100044 _107639 _107642 A B : Type'} : ((term306 _100044 _107639 _107642 A B) = (term345 _100044 _107639 _107642 A B)) = ((term306 _100044 _107639 _107642 A B) = (term349 _100044 _107639 _107642 A B)).
Proof. exact (MK_COMB (@lem4524791 _100044 _107639 _107642 A B) (@lem4524790 _100044 _107639 _107642 A B)). Qed.
Lemma lem4524793 {_100044 _107639 _107642 A B : Type'} : (term306 _100044 _107639 _107642 A B) = (term349 _100044 _107639 _107642 A B).
Proof. exact (EQ_MP (@lem4524792 _100044 _107639 _107642 A B) (@lem4524694 _100044 _107639 _107642 A B)). Qed.
Lemma lem4524794 {_107642 A : Type'} (_53778 : type656 _107642 A) (h1 : _53778 = (term76 _107642 A)) : _53778 = (term76 _107642 A).
Proof. exact (h1). Qed.
Lemma lem4524795 {_107642 : Type'} (t : _107642 -> Prop) : t = t.
Proof. exact (eq_refl t). Qed.
Lemma lem4524796 {_107642 A : Type'} (t : _107642 -> Prop) (_53778 : type656 _107642 A) (h1 : _53778 = (term76 _107642 A)) : (_53778 t) = (term77 _107642 A t).
Proof. exact (MK_COMB (@lem4524794 _107642 A _53778 h1) (@lem4524795 _107642 t)). Qed.
Lemma lem4524797 {_107642 A : Type'} (t : _107642 -> Prop) : (term77 _107642 A t) = (term78 _107642 A t).
Proof. exact (eq_refl (term77 _107642 A t)). Qed.
Lemma lem4524798 {_107642 A : Type'} (_53778 : type656 _107642 A) (t : _107642 -> Prop) : (term79 _107642 A _53778 t) = (term79 _107642 A _53778 t).
Proof. exact (eq_refl (term79 _107642 A _53778 t)). Qed.
Lemma lem4524799 {_107642 A : Type'} (_53778 : type656 _107642 A) (t : _107642 -> Prop) : ((_53778 t) = (term77 _107642 A t)) = ((_53778 t) = (term78 _107642 A t)).
Proof. exact (MK_COMB (@lem4524798 _107642 A _53778 t) (@lem4524797 _107642 A t)). Qed.
Lemma lem4524800 {_107642 A : Type'} (t : _107642 -> Prop) (_53778 : type656 _107642 A) (h1 : _53778 = (term76 _107642 A)) : (_53778 t) = (term78 _107642 A t).
Proof. exact (EQ_MP (@lem4524799 _107642 A _53778 t) (@lem4524796 _107642 A t _53778 h1)). Qed.
Lemma lem4524801 {A : Type'} (s : A -> Prop) : s = s.
Proof. exact (eq_refl s). Qed.
Lemma lem4524802 {_107642 A : Type'} (t : _107642 -> Prop) (s : A -> Prop) (_53778 : type656 _107642 A) (h1 : _53778 = (term76 _107642 A)) : (_53778 t s) = (term80 _107642 A t s).
Proof. exact (MK_COMB (@lem4524800 _107642 A t _53778 h1) (@lem4524801 A s)). Qed.
Lemma lem4524803 {_107642 A : Type'} (t : _107642 -> Prop) (s : A -> Prop) : (term80 _107642 A t s) = (term81 _107642 A t s).
Proof. exact (eq_refl (term80 _107642 A t s)). Qed.
Lemma lem4524804 {_107642 A : Type'} (_53778 : type656 _107642 A) (t : _107642 -> Prop) (s : A -> Prop) : (term82 _107642 A _53778 t s) = (term82 _107642 A _53778 t s).
Proof. exact (eq_refl (term82 _107642 A _53778 t s)). Qed.
Lemma lem4524805 {_107642 A : Type'} (_53778 : type656 _107642 A) (t : _107642 -> Prop) (s : A -> Prop) : ((_53778 t s) = (term80 _107642 A t s)) = ((_53778 t s) = (term81 _107642 A t s)).
Proof. exact (MK_COMB (@lem4524804 _107642 A _53778 t s) (@lem4524803 _107642 A t s)). Qed.
Lemma lem4524806 {_107642 A : Type'} (t : _107642 -> Prop) (s : A -> Prop) (_53778 : type656 _107642 A) (h1 : _53778 = (term76 _107642 A)) : (_53778 t s) = (term81 _107642 A t s).
Proof. exact (EQ_MP (@lem4524805 _107642 A _53778 t s) (@lem4524802 _107642 A t s _53778 h1)). Qed.
Lemma lem4524807 {_107642 : Type'} (d : _107642) : d = d.
Proof. exact (eq_refl d). Qed.
Lemma lem4524808 {_107642 A : Type'} (t : _107642 -> Prop) (s : A -> Prop) (d : _107642) (_53778 : type656 _107642 A) (h1 : _53778 = (term76 _107642 A)) : (_53778 t s d) = (term83 _107642 A t s d).
Proof. exact (MK_COMB (@lem4524806 _107642 A t s _53778 h1) (@lem4524807 _107642 d)). Qed.
Lemma lem4524809 {_107642 A : Type'} (t : _107642 -> Prop) (s : A -> Prop) (d : _107642) : (term83 _107642 A t s d) = (term84 _107642 A t s d).
Proof. exact (eq_refl (term83 _107642 A t s d)). Qed.
Lemma lem4524810 {_107642 A : Type'} (_53778 : type656 _107642 A) (t : _107642 -> Prop) (s : A -> Prop) (d : _107642) : (term85 _107642 A _53778 t s d) = (term85 _107642 A _53778 t s d).
Proof. exact (eq_refl (term85 _107642 A _53778 t s d)). Qed.
Lemma lem4524811 {_107642 A : Type'} (_53778 : type656 _107642 A) (t : _107642 -> Prop) (s : A -> Prop) (d : _107642) : ((_53778 t s d) = (term83 _107642 A t s d)) = ((_53778 t s d) = (term84 _107642 A t s d)).
Proof. exact (MK_COMB (@lem4524810 _107642 A _53778 t s d) (@lem4524809 _107642 A t s d)). Qed.
Lemma lem4524812 {_107642 A : Type'} (t : _107642 -> Prop) (s : A -> Prop) (d : _107642) (_53778 : type656 _107642 A) (h1 : _53778 = (term76 _107642 A)) : (_53778 t s d) = (term84 _107642 A t s d).
Proof. exact (EQ_MP (@lem4524811 _107642 A _53778 t s d) (@lem4524808 _107642 A t s d _53778 h1)). Qed.
Lemma lem4524818 (n : nat) (m : nat) : (Nat.pow n m) = (Nat.pow n m).
Proof. exact (eq_refl (Nat.pow n m)). Qed.
Lemma lem4524822 {A : Type'} (f : A -> nat) : f = f.
Proof. exact (eq_refl f). Qed.
Lemma lem4524839 {A : Type'} (s : A -> Prop) (f : A -> nat) (x : A) (d : nat) : (term86 A s f x d) = (term86 A s f x d).
Proof. exact (eq_refl (term86 A s f x d)). Qed.
Lemma lem4524840 {A : Type'} (s : A -> Prop) (f : A -> nat) (d : nat) : (term87 A s f d) = (term87 A s f d).
Proof. exact (fun_ext (fun x : A => @lem4524839 A s f x d)). Qed.
Lemma lem4524841 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem4524842 {A : Type'} (s : A -> Prop) (f : A -> nat) (d : nat) : (term88 A s f d) = (term88 A s f d).
Proof. exact (MK_COMB (@lem4524841 A) (@lem4524840 A s f d)). Qed.
Lemma lem4524857 {A : Type'} (s : A -> Prop) (f : A -> nat) (x : A) (t : nat -> Prop) : (term89 A s f x t) = (term89 A s f x t).
Proof. exact (eq_refl (term89 A s f x t)). Qed.
Lemma lem4524858 {A : Type'} (s : A -> Prop) (f : A -> nat) (t : nat -> Prop) : (term90 A s f t) = (term90 A s f t).
Proof. exact (fun_ext (fun x : A => @lem4524857 A s f x t)). Qed.
Lemma lem4524859 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem4524860 {A : Type'} (s : A -> Prop) (f : A -> nat) (t : nat -> Prop) : (term91 A s f t) = (term91 A s f t).
Proof. exact (MK_COMB (@lem4524859 A) (@lem4524858 A s f t)). Qed.
Lemma lem4524861 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4524862 {A : Type'} (s : A -> Prop) (f : A -> nat) (t : nat -> Prop) : (term92 A s f t) = (term92 A s f t).
Proof. exact (MK_COMB (@lem4524861) (@lem4524860 A s f t)). Qed.
Lemma lem4524863 {A : Type'} (t : nat -> Prop) (s : A -> Prop) (f : A -> nat) (d : nat) : (term93 A t s f d) = (term93 A t s f d).
Proof. exact (MK_COMB (@lem4524862 A s f t) (@lem4524842 A s f d)). Qed.
Lemma lem4524866 {A : Type'} (GEN_PVAR_148 : A -> nat) : (@SETSPEC (A -> nat) GEN_PVAR_148) = (@SETSPEC (A -> nat) GEN_PVAR_148).
Proof. exact (eq_refl (@SETSPEC (A -> nat) GEN_PVAR_148)). Qed.
Lemma lem4524867 {A : Type'} (GEN_PVAR_148 : A -> nat) (t : nat -> Prop) (s : A -> Prop) (f : A -> nat) (d : nat) : (term94 A GEN_PVAR_148 t s f d) = (term94 A GEN_PVAR_148 t s f d).
Proof. exact (MK_COMB (@lem4524866 A GEN_PVAR_148) (@lem4524863 A t s f d)). Qed.
Lemma lem4524868 {A : Type'} (GEN_PVAR_148 : A -> nat) (t : nat -> Prop) (s : A -> Prop) (d : nat) (f : A -> nat) : (term95 A GEN_PVAR_148 t s d f) = (term95 A GEN_PVAR_148 t s d f).
Proof. exact (MK_COMB (@lem4524867 A GEN_PVAR_148 t s f d) (@lem4524822 A f)). Qed.
Lemma lem4524869 {A : Type'} (GEN_PVAR_148 : A -> nat) (t : nat -> Prop) (s : A -> Prop) (d : nat) : (term96 A GEN_PVAR_148 t s d) = (term96 A GEN_PVAR_148 t s d).
Proof. exact (fun_ext (fun f : A -> nat => @lem4524868 A GEN_PVAR_148 t s d f)). Qed.
Lemma lem4524870 {A : Type'} : (@ex (A -> nat)) = (@ex (A -> nat)).
Proof. exact (eq_refl (@ex (A -> nat))). Qed.
Lemma lem4524871 {A : Type'} (GEN_PVAR_148 : A -> nat) (t : nat -> Prop) (s : A -> Prop) (d : nat) : (term97 A GEN_PVAR_148 t s d) = (term97 A GEN_PVAR_148 t s d).
Proof. exact (MK_COMB (@lem4524870 A) (@lem4524869 A GEN_PVAR_148 t s d)). Qed.
Lemma lem4524872 {A : Type'} (t : nat -> Prop) (s : A -> Prop) (d : nat) : (term98 A t s d) = (term98 A t s d).
Proof. exact (fun_ext (fun GEN_PVAR_148 : A -> nat => @lem4524871 A GEN_PVAR_148 t s d)). Qed.
Lemma lem4524873 {A : Type'} : (@GSPEC (A -> nat)) = (@GSPEC (A -> nat)).
Proof. exact (eq_refl (@GSPEC (A -> nat))). Qed.
Lemma lem4524874 {A : Type'} (t : nat -> Prop) (s : A -> Prop) (d : nat) : (term99 A t s d) = (term99 A t s d).
Proof. exact (MK_COMB (@lem4524873 A) (@lem4524872 A t s d)). Qed.
Lemma lem4524875 {A : Type'} : (@HAS_SIZE (A -> nat)) = (@HAS_SIZE (A -> nat)).
Proof. exact (eq_refl (@HAS_SIZE (A -> nat))). Qed.
Lemma lem4524876 {A : Type'} (t : nat -> Prop) (s : A -> Prop) (d : nat) : (term100 A t s d) = (term100 A t s d).
Proof. exact (MK_COMB (@lem4524875 A) (@lem4524874 A t s d)). Qed.
Lemma lem4524877 {A : Type'} (t : nat -> Prop) (s : A -> Prop) (d : nat) (n : nat) (m : nat) : (term101 A t s d n m) = (term101 A t s d n m).
Proof. exact (MK_COMB (@lem4524876 A t s d) (@lem4524818 n m)). Qed.
Lemma lem4524892 {A : Type'} (s : A -> Prop) (m : nat) (t : nat -> Prop) (n : nat) : (term102 A s m t n) = (term102 A s m t n).
Proof. exact (eq_refl (term102 A s m t n)). Qed.
Lemma lem4524893 {A : Type'} (t : nat -> Prop) (s : A -> Prop) (d : nat) (n : nat) (m : nat) : (term103 A t s d n m) = (term103 A t s d n m).
Proof. exact (MK_COMB (@lem4524892 A s m t n) (@lem4524877 A t s d n m)). Qed.
Lemma lem4524894 {A : Type'} (t : nat -> Prop) (d : nat) (n : nat) (m : nat) : (term104 A t d n m) = (term104 A t d n m).
Proof. exact (fun_ext (fun s : A -> Prop => @lem4524893 A t s d n m)). Qed.
Lemma lem4524895 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem4524896 {A : Type'} (t : nat -> Prop) (d : nat) (n : nat) (m : nat) : (term105 A t d n m) = (term105 A t d n m).
Proof. exact (MK_COMB (@lem4524895 A) (@lem4524894 A t d n m)). Qed.
Lemma lem4524897 {A : Type'} (t : nat -> Prop) (d : nat) (n : nat) : (term106 A t d n) = (term106 A t d n).
Proof. exact (fun_ext (fun m : nat => @lem4524896 A t d n m)). Qed.
Lemma lem4524898 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4524899 {A : Type'} (t : nat -> Prop) (d : nat) (n : nat) : (term107 A t d n) = (term107 A t d n).
Proof. exact (MK_COMB (@lem4524898) (@lem4524897 A t d n)). Qed.
Lemma lem4524900 {A : Type'} (d : nat) (n : nat) : (term108 A d n) = (term108 A d n).
Proof. exact (fun_ext (fun t : nat -> Prop => @lem4524899 A t d n)). Qed.
Lemma lem4524901 : (@all (nat -> Prop)) = (@all (nat -> Prop)).
Proof. exact (eq_refl (@all (nat -> Prop))). Qed.
Lemma lem4524902 {A : Type'} (d : nat) (n : nat) : (term109 A d n) = (term109 A d n).
Proof. exact (MK_COMB (@lem4524901) (@lem4524900 A d n)). Qed.
Lemma lem4524903 {A : Type'} (d : nat) : (term110 A d) = (term110 A d).
Proof. exact (fun_ext (fun n : nat => @lem4524902 A d n)). Qed.
Lemma lem4524904 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4524905 {A : Type'} (d : nat) : (term111 A d) = (term111 A d).
Proof. exact (MK_COMB (@lem4524904) (@lem4524903 A d)). Qed.
Lemma lem4524906 {A : Type'} : (term112 A) = (term112 A).
Proof. exact (fun_ext (fun d : nat => @lem4524905 A d)). Qed.
Lemma lem4524907 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4524908 {A : Type'} : (term13 A) = (term13 A).
Proof. exact (MK_COMB (@lem4524907) (@lem4524906 A)). Qed.
Lemma lem4524909 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem4524910 {A : Type'} : (term24 A) = (term24 A).
Proof. exact (MK_COMB (@lem4524909) (@lem4524908 A)). Qed.
Lemma lem4524915 (n : nat) (m : nat) : (Nat.pow n m) = (Nat.pow n m).
Proof. exact (eq_refl (Nat.pow n m)). Qed.
Lemma lem4524919 {A B : Type'} (f : A -> B) : f = f.
Proof. exact (eq_refl f). Qed.
Lemma lem4524936 {A B : Type'} (s : A -> Prop) (f : A -> B) (x : A) (d : B) : (term113 A B s f x d) = (term113 A B s f x d).
Proof. exact (eq_refl (term113 A B s f x d)). Qed.
Lemma lem4524937 {A B : Type'} (s : A -> Prop) (f : A -> B) (d : B) : (term114 A B s f d) = (term114 A B s f d).
Proof. exact (fun_ext (fun x : A => @lem4524936 A B s f x d)). Qed.
Lemma lem4524938 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem4524939 {A B : Type'} (s : A -> Prop) (f : A -> B) (d : B) : (term115 A B s f d) = (term115 A B s f d).
Proof. exact (MK_COMB (@lem4524938 A) (@lem4524937 A B s f d)). Qed.
Lemma lem4524954 {A B : Type'} (s : A -> Prop) (f : A -> B) (x : A) (t : B -> Prop) : (term116 A B s f x t) = (term116 A B s f x t).
Proof. exact (eq_refl (term116 A B s f x t)). Qed.
Lemma lem4524955 {A B : Type'} (s : A -> Prop) (f : A -> B) (t : B -> Prop) : (term117 A B s f t) = (term117 A B s f t).
Proof. exact (fun_ext (fun x : A => @lem4524954 A B s f x t)). Qed.
Lemma lem4524956 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem4524957 {A B : Type'} (s : A -> Prop) (f : A -> B) (t : B -> Prop) : (term118 A B s f t) = (term118 A B s f t).
Proof. exact (MK_COMB (@lem4524956 A) (@lem4524955 A B s f t)). Qed.
Lemma lem4524958 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4524959 {A B : Type'} (s : A -> Prop) (f : A -> B) (t : B -> Prop) : (term119 A B s f t) = (term119 A B s f t).
Proof. exact (MK_COMB (@lem4524958) (@lem4524957 A B s f t)). Qed.
Lemma lem4524960 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (f : A -> B) (d : B) : (term120 A B t s f d) = (term120 A B t s f d).
Proof. exact (MK_COMB (@lem4524959 A B s f t) (@lem4524939 A B s f d)). Qed.
Lemma lem4524963 {A B : Type'} (GEN_PVAR_148 : A -> B) : (@SETSPEC (A -> B) GEN_PVAR_148) = (@SETSPEC (A -> B) GEN_PVAR_148).
Proof. exact (eq_refl (@SETSPEC (A -> B) GEN_PVAR_148)). Qed.
Lemma lem4524964 {A B : Type'} (GEN_PVAR_148 : A -> B) (t : B -> Prop) (s : A -> Prop) (f : A -> B) (d : B) : (term121 A B GEN_PVAR_148 t s f d) = (term121 A B GEN_PVAR_148 t s f d).
Proof. exact (MK_COMB (@lem4524963 A B GEN_PVAR_148) (@lem4524960 A B t s f d)). Qed.
Lemma lem4524965 {A B : Type'} (GEN_PVAR_148 : A -> B) (t : B -> Prop) (s : A -> Prop) (d : B) (f : A -> B) : (term122 A B GEN_PVAR_148 t s d f) = (term122 A B GEN_PVAR_148 t s d f).
Proof. exact (MK_COMB (@lem4524964 A B GEN_PVAR_148 t s f d) (@lem4524919 A B f)). Qed.
Lemma lem4524966 {A B : Type'} (GEN_PVAR_148 : A -> B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term123 A B GEN_PVAR_148 t s d) = (term123 A B GEN_PVAR_148 t s d).
Proof. exact (fun_ext (fun f : A -> B => @lem4524965 A B GEN_PVAR_148 t s d f)). Qed.
Lemma lem4524967 {A B : Type'} : (@ex (A -> B)) = (@ex (A -> B)).
Proof. exact (eq_refl (@ex (A -> B))). Qed.
Lemma lem4524968 {A B : Type'} (GEN_PVAR_148 : A -> B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term124 A B GEN_PVAR_148 t s d) = (term124 A B GEN_PVAR_148 t s d).
Proof. exact (MK_COMB (@lem4524967 A B) (@lem4524966 A B GEN_PVAR_148 t s d)). Qed.
Lemma lem4524969 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (d : B) : (term125 A B t s d) = (term125 A B t s d).
Proof. exact (fun_ext (fun GEN_PVAR_148 : A -> B => @lem4524968 A B GEN_PVAR_148 t s d)). Qed.
Lemma lem4524970 {A B : Type'} : (@GSPEC (A -> B)) = (@GSPEC (A -> B)).
Proof. exact (eq_refl (@GSPEC (A -> B))). Qed.
Lemma lem4524971 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (d : B) : (term126 A B t s d) = (term126 A B t s d).
Proof. exact (MK_COMB (@lem4524970 A B) (@lem4524969 A B t s d)). Qed.
Lemma lem4524972 {A B : Type'} : (@HAS_SIZE (A -> B)) = (@HAS_SIZE (A -> B)).
Proof. exact (eq_refl (@HAS_SIZE (A -> B))). Qed.
Lemma lem4524973 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (d : B) : (term127 A B t s d) = (term127 A B t s d).
Proof. exact (MK_COMB (@lem4524972 A B) (@lem4524971 A B t s d)). Qed.
Lemma lem4524974 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (d : B) (n : nat) (m : nat) : (term128 A B t s d n m) = (term128 A B t s d n m).
Proof. exact (MK_COMB (@lem4524973 A B t s d) (@lem4524915 n m)). Qed.
Lemma lem4524989 {A B : Type'} (s : A -> Prop) (m : nat) (t : B -> Prop) (n : nat) : (term129 A B s m t n) = (term129 A B s m t n).
Proof. exact (eq_refl (term129 A B s m t n)). Qed.
Lemma lem4524990 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (d : B) (n : nat) (m : nat) : (term130 A B t s d n m) = (term130 A B t s d n m).
Proof. exact (MK_COMB (@lem4524989 A B s m t n) (@lem4524974 A B t s d n m)). Qed.
Lemma lem4524991 {A B : Type'} (t : B -> Prop) (d : B) (n : nat) (m : nat) : (term131 A B t d n m) = (term131 A B t d n m).
Proof. exact (fun_ext (fun s : A -> Prop => @lem4524990 A B t s d n m)). Qed.
Lemma lem4524992 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem4524993 {A B : Type'} (t : B -> Prop) (d : B) (n : nat) (m : nat) : (term132 A B t d n m) = (term132 A B t d n m).
Proof. exact (MK_COMB (@lem4524992 A) (@lem4524991 A B t d n m)). Qed.
Lemma lem4524994 {A B : Type'} (t : B -> Prop) (d : B) (n : nat) : (term133 A B t d n) = (term133 A B t d n).
Proof. exact (fun_ext (fun m : nat => @lem4524993 A B t d n m)). Qed.
Lemma lem4524995 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4524996 {A B : Type'} (t : B -> Prop) (d : B) (n : nat) : (term134 A B t d n) = (term134 A B t d n).
Proof. exact (MK_COMB (@lem4524995) (@lem4524994 A B t d n)). Qed.
Lemma lem4524997 {A B : Type'} (d : B) (n : nat) : (term135 A B d n) = (term135 A B d n).
Proof. exact (fun_ext (fun t : B -> Prop => @lem4524996 A B t d n)). Qed.
Lemma lem4524998 {B : Type'} : (@all (B -> Prop)) = (@all (B -> Prop)).
Proof. exact (eq_refl (@all (B -> Prop))). Qed.
Lemma lem4524999 {A B : Type'} (d : B) (n : nat) : (term136 A B d n) = (term136 A B d n).
Proof. exact (MK_COMB (@lem4524998 B) (@lem4524997 A B d n)). Qed.
Lemma lem4525000 {A B : Type'} (d : B) : (term137 A B d) = (term137 A B d).
Proof. exact (fun_ext (fun n : nat => @lem4524999 A B d n)). Qed.
Lemma lem4525001 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4525002 {A B : Type'} (d : B) : (term138 A B d) = (term138 A B d).
Proof. exact (MK_COMB (@lem4525001) (@lem4525000 A B d)). Qed.
Lemma lem4525003 {A B : Type'} : (term139 A B) = (term139 A B).
Proof. exact (fun_ext (fun d : B => @lem4525002 A B d)). Qed.
Lemma lem4525004 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem4525005 {A B : Type'} : (term12 A B) = (term12 A B).
Proof. exact (MK_COMB (@lem4525004 B) (@lem4525003 A B)). Qed.
Lemma lem4525006 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4525007 {A B : Type'} : (term25 A B) = (term25 A B).
Proof. exact (MK_COMB (@lem4525006) (@lem4525005 A B)). Qed.
Lemma lem4525008 {A B : Type'} : (term27 A B) = (term27 A B).
Proof. exact (MK_COMB (@lem4525007 A B) (@lem4524910 A)). Qed.
Lemma lem4525013 (n : nat) (m : nat) : (Nat.pow n m) = (Nat.pow n m).
Proof. exact (eq_refl (Nat.pow n m)). Qed.
Lemma lem4525017 {_107642 B : Type'} (f : _107642 -> B) : f = f.
Proof. exact (eq_refl f). Qed.
Lemma lem4525034 {_107642 B : Type'} (s : _107642 -> Prop) (f : _107642 -> B) (x : _107642) (d : B) : (term113 _107642 B s f x d) = (term113 _107642 B s f x d).
Proof. exact (eq_refl (term113 _107642 B s f x d)). Qed.
Lemma lem4525035 {_107642 B : Type'} (s : _107642 -> Prop) (f : _107642 -> B) (d : B) : (term114 _107642 B s f d) = (term114 _107642 B s f d).
Proof. exact (fun_ext (fun x : _107642 => @lem4525034 _107642 B s f x d)). Qed.
Lemma lem4525036 {_107642 : Type'} : (@all _107642) = (@all _107642).
Proof. exact (eq_refl (@all _107642)). Qed.
Lemma lem4525037 {_107642 B : Type'} (s : _107642 -> Prop) (f : _107642 -> B) (d : B) : (term115 _107642 B s f d) = (term115 _107642 B s f d).
Proof. exact (MK_COMB (@lem4525036 _107642) (@lem4525035 _107642 B s f d)). Qed.
Lemma lem4525052 {_107642 B : Type'} (s : _107642 -> Prop) (f : _107642 -> B) (x : _107642) (t : B -> Prop) : (term116 _107642 B s f x t) = (term116 _107642 B s f x t).
Proof. exact (eq_refl (term116 _107642 B s f x t)). Qed.
Lemma lem4525053 {_107642 B : Type'} (s : _107642 -> Prop) (f : _107642 -> B) (t : B -> Prop) : (term117 _107642 B s f t) = (term117 _107642 B s f t).
Proof. exact (fun_ext (fun x : _107642 => @lem4525052 _107642 B s f x t)). Qed.
Lemma lem4525054 {_107642 : Type'} : (@all _107642) = (@all _107642).
Proof. exact (eq_refl (@all _107642)). Qed.
Lemma lem4525055 {_107642 B : Type'} (s : _107642 -> Prop) (f : _107642 -> B) (t : B -> Prop) : (term118 _107642 B s f t) = (term118 _107642 B s f t).
Proof. exact (MK_COMB (@lem4525054 _107642) (@lem4525053 _107642 B s f t)). Qed.
Lemma lem4525056 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4525057 {_107642 B : Type'} (s : _107642 -> Prop) (f : _107642 -> B) (t : B -> Prop) : (term119 _107642 B s f t) = (term119 _107642 B s f t).
Proof. exact (MK_COMB (@lem4525056) (@lem4525055 _107642 B s f t)). Qed.
Lemma lem4525058 {_107642 B : Type'} (t : B -> Prop) (s : _107642 -> Prop) (f : _107642 -> B) (d : B) : (term120 _107642 B t s f d) = (term120 _107642 B t s f d).
Proof. exact (MK_COMB (@lem4525057 _107642 B s f t) (@lem4525037 _107642 B s f d)). Qed.
Lemma lem4525061 {_107642 B : Type'} (GEN_PVAR_148 : _107642 -> B) : (@SETSPEC (_107642 -> B) GEN_PVAR_148) = (@SETSPEC (_107642 -> B) GEN_PVAR_148).
Proof. exact (eq_refl (@SETSPEC (_107642 -> B) GEN_PVAR_148)). Qed.
Lemma lem4525062 {_107642 B : Type'} (GEN_PVAR_148 : _107642 -> B) (t : B -> Prop) (s : _107642 -> Prop) (f : _107642 -> B) (d : B) : (term121 _107642 B GEN_PVAR_148 t s f d) = (term121 _107642 B GEN_PVAR_148 t s f d).
Proof. exact (MK_COMB (@lem4525061 _107642 B GEN_PVAR_148) (@lem4525058 _107642 B t s f d)). Qed.
Lemma lem4525063 {_107642 B : Type'} (GEN_PVAR_148 : _107642 -> B) (t : B -> Prop) (s : _107642 -> Prop) (d : B) (f : _107642 -> B) : (term122 _107642 B GEN_PVAR_148 t s d f) = (term122 _107642 B GEN_PVAR_148 t s d f).
Proof. exact (MK_COMB (@lem4525062 _107642 B GEN_PVAR_148 t s f d) (@lem4525017 _107642 B f)). Qed.
Lemma lem4525064 {_107642 B : Type'} (GEN_PVAR_148 : _107642 -> B) (t : B -> Prop) (s : _107642 -> Prop) (d : B) : (term123 _107642 B GEN_PVAR_148 t s d) = (term123 _107642 B GEN_PVAR_148 t s d).
Proof. exact (fun_ext (fun f : _107642 -> B => @lem4525063 _107642 B GEN_PVAR_148 t s d f)). Qed.
Lemma lem4525065 {_107642 B : Type'} : (@ex (_107642 -> B)) = (@ex (_107642 -> B)).
Proof. exact (eq_refl (@ex (_107642 -> B))). Qed.
Lemma lem4525066 {_107642 B : Type'} (GEN_PVAR_148 : _107642 -> B) (t : B -> Prop) (s : _107642 -> Prop) (d : B) : (term124 _107642 B GEN_PVAR_148 t s d) = (term124 _107642 B GEN_PVAR_148 t s d).
Proof. exact (MK_COMB (@lem4525065 _107642 B) (@lem4525064 _107642 B GEN_PVAR_148 t s d)). Qed.
Lemma lem4525067 {_107642 B : Type'} (t : B -> Prop) (s : _107642 -> Prop) (d : B) : (term125 _107642 B t s d) = (term125 _107642 B t s d).
Proof. exact (fun_ext (fun GEN_PVAR_148 : _107642 -> B => @lem4525066 _107642 B GEN_PVAR_148 t s d)). Qed.
Lemma lem4525068 {_107642 B : Type'} : (@GSPEC (_107642 -> B)) = (@GSPEC (_107642 -> B)).
Proof. exact (eq_refl (@GSPEC (_107642 -> B))). Qed.
Lemma lem4525069 {_107642 B : Type'} (t : B -> Prop) (s : _107642 -> Prop) (d : B) : (term126 _107642 B t s d) = (term126 _107642 B t s d).
Proof. exact (MK_COMB (@lem4525068 _107642 B) (@lem4525067 _107642 B t s d)). Qed.
Lemma lem4525070 {_107642 B : Type'} : (@HAS_SIZE (_107642 -> B)) = (@HAS_SIZE (_107642 -> B)).
Proof. exact (eq_refl (@HAS_SIZE (_107642 -> B))). Qed.
Lemma lem4525071 {_107642 B : Type'} (t : B -> Prop) (s : _107642 -> Prop) (d : B) : (term127 _107642 B t s d) = (term127 _107642 B t s d).
Proof. exact (MK_COMB (@lem4525070 _107642 B) (@lem4525069 _107642 B t s d)). Qed.
Lemma lem4525072 {_107642 B : Type'} (t : B -> Prop) (s : _107642 -> Prop) (d : B) (n : nat) (m : nat) : (term128 _107642 B t s d n m) = (term128 _107642 B t s d n m).
Proof. exact (MK_COMB (@lem4525071 _107642 B t s d) (@lem4525013 n m)). Qed.
Lemma lem4525087 {_107642 B : Type'} (s : _107642 -> Prop) (m : nat) (t : B -> Prop) (n : nat) : (term129 _107642 B s m t n) = (term129 _107642 B s m t n).
Proof. exact (eq_refl (term129 _107642 B s m t n)). Qed.
Lemma lem4525088 {_107642 B : Type'} (t : B -> Prop) (s : _107642 -> Prop) (d : B) (n : nat) (m : nat) : (term130 _107642 B t s d n m) = (term130 _107642 B t s d n m).
Proof. exact (MK_COMB (@lem4525087 _107642 B s m t n) (@lem4525072 _107642 B t s d n m)). Qed.
Lemma lem4525089 {_107642 B : Type'} (t : B -> Prop) (d : B) (n : nat) (m : nat) : (term131 _107642 B t d n m) = (term131 _107642 B t d n m).
Proof. exact (fun_ext (fun s : _107642 -> Prop => @lem4525088 _107642 B t s d n m)). Qed.
Lemma lem4525090 {_107642 : Type'} : (@all (_107642 -> Prop)) = (@all (_107642 -> Prop)).
Proof. exact (eq_refl (@all (_107642 -> Prop))). Qed.
Lemma lem4525091 {_107642 B : Type'} (t : B -> Prop) (d : B) (n : nat) (m : nat) : (term132 _107642 B t d n m) = (term132 _107642 B t d n m).
Proof. exact (MK_COMB (@lem4525090 _107642) (@lem4525089 _107642 B t d n m)). Qed.
Lemma lem4525092 {_107642 B : Type'} (t : B -> Prop) (d : B) (n : nat) : (term133 _107642 B t d n) = (term133 _107642 B t d n).
Proof. exact (fun_ext (fun m : nat => @lem4525091 _107642 B t d n m)). Qed.
Lemma lem4525093 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4525094 {_107642 B : Type'} (t : B -> Prop) (d : B) (n : nat) : (term134 _107642 B t d n) = (term134 _107642 B t d n).
Proof. exact (MK_COMB (@lem4525093) (@lem4525092 _107642 B t d n)). Qed.
Lemma lem4525095 {_107642 B : Type'} (d : B) (n : nat) : (term135 _107642 B d n) = (term135 _107642 B d n).
Proof. exact (fun_ext (fun t : B -> Prop => @lem4525094 _107642 B t d n)). Qed.
Lemma lem4525096 {B : Type'} : (@all (B -> Prop)) = (@all (B -> Prop)).
Proof. exact (eq_refl (@all (B -> Prop))). Qed.
Lemma lem4525097 {_107642 B : Type'} (d : B) (n : nat) : (term136 _107642 B d n) = (term136 _107642 B d n).
Proof. exact (MK_COMB (@lem4525096 B) (@lem4525095 _107642 B d n)). Qed.
Lemma lem4525098 {_107642 B : Type'} (d : B) : (term137 _107642 B d) = (term137 _107642 B d).
Proof. exact (fun_ext (fun n : nat => @lem4525097 _107642 B d n)). Qed.
Lemma lem4525099 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4525100 {_107642 B : Type'} (d : B) : (term138 _107642 B d) = (term138 _107642 B d).
Proof. exact (MK_COMB (@lem4525099) (@lem4525098 _107642 B d)). Qed.
Lemma lem4525101 {_107642 B : Type'} : (term139 _107642 B) = (term139 _107642 B).
Proof. exact (fun_ext (fun d : B => @lem4525100 _107642 B d)). Qed.
Lemma lem4525102 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem4525103 {_107642 B : Type'} : (term12 _107642 B) = (term12 _107642 B).
Proof. exact (MK_COMB (@lem4525102 B) (@lem4525101 _107642 B)). Qed.
Lemma lem4525104 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4525105 {_107642 B : Type'} : (term25 _107642 B) = (term25 _107642 B).
Proof. exact (MK_COMB (@lem4525104) (@lem4525103 _107642 B)). Qed.
Lemma lem4525106 {_107642 A B : Type'} : (term29 _107642 A B) = (term29 _107642 A B).
Proof. exact (MK_COMB (@lem4525105 _107642 B) (@lem4525008 A B)). Qed.
Lemma lem4525111 (n : nat) (m : nat) : (Nat.pow n m) = (Nat.pow n m).
Proof. exact (eq_refl (Nat.pow n m)). Qed.
Lemma lem4525115 {_107639 B : Type'} (f : _107639 -> B) : f = f.
Proof. exact (eq_refl f). Qed.
Lemma lem4525132 {_107639 B : Type'} (s : _107639 -> Prop) (f : _107639 -> B) (x : _107639) (d : B) : (term113 _107639 B s f x d) = (term113 _107639 B s f x d).
Proof. exact (eq_refl (term113 _107639 B s f x d)). Qed.
Lemma lem4525133 {_107639 B : Type'} (s : _107639 -> Prop) (f : _107639 -> B) (d : B) : (term114 _107639 B s f d) = (term114 _107639 B s f d).
Proof. exact (fun_ext (fun x : _107639 => @lem4525132 _107639 B s f x d)). Qed.
Lemma lem4525134 {_107639 : Type'} : (@all _107639) = (@all _107639).
Proof. exact (eq_refl (@all _107639)). Qed.
Lemma lem4525135 {_107639 B : Type'} (s : _107639 -> Prop) (f : _107639 -> B) (d : B) : (term115 _107639 B s f d) = (term115 _107639 B s f d).
Proof. exact (MK_COMB (@lem4525134 _107639) (@lem4525133 _107639 B s f d)). Qed.
Lemma lem4525150 {_107639 B : Type'} (s : _107639 -> Prop) (f : _107639 -> B) (x : _107639) (t : B -> Prop) : (term116 _107639 B s f x t) = (term116 _107639 B s f x t).
Proof. exact (eq_refl (term116 _107639 B s f x t)). Qed.
Lemma lem4525151 {_107639 B : Type'} (s : _107639 -> Prop) (f : _107639 -> B) (t : B -> Prop) : (term117 _107639 B s f t) = (term117 _107639 B s f t).
Proof. exact (fun_ext (fun x : _107639 => @lem4525150 _107639 B s f x t)). Qed.
Lemma lem4525152 {_107639 : Type'} : (@all _107639) = (@all _107639).
Proof. exact (eq_refl (@all _107639)). Qed.
Lemma lem4525153 {_107639 B : Type'} (s : _107639 -> Prop) (f : _107639 -> B) (t : B -> Prop) : (term118 _107639 B s f t) = (term118 _107639 B s f t).
Proof. exact (MK_COMB (@lem4525152 _107639) (@lem4525151 _107639 B s f t)). Qed.
Lemma lem4525154 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4525155 {_107639 B : Type'} (s : _107639 -> Prop) (f : _107639 -> B) (t : B -> Prop) : (term119 _107639 B s f t) = (term119 _107639 B s f t).
Proof. exact (MK_COMB (@lem4525154) (@lem4525153 _107639 B s f t)). Qed.
Lemma lem4525156 {_107639 B : Type'} (t : B -> Prop) (s : _107639 -> Prop) (f : _107639 -> B) (d : B) : (term120 _107639 B t s f d) = (term120 _107639 B t s f d).
Proof. exact (MK_COMB (@lem4525155 _107639 B s f t) (@lem4525135 _107639 B s f d)). Qed.
Lemma lem4525159 {_107639 B : Type'} (GEN_PVAR_148 : _107639 -> B) : (@SETSPEC (_107639 -> B) GEN_PVAR_148) = (@SETSPEC (_107639 -> B) GEN_PVAR_148).
Proof. exact (eq_refl (@SETSPEC (_107639 -> B) GEN_PVAR_148)). Qed.
Lemma lem4525160 {_107639 B : Type'} (GEN_PVAR_148 : _107639 -> B) (t : B -> Prop) (s : _107639 -> Prop) (f : _107639 -> B) (d : B) : (term121 _107639 B GEN_PVAR_148 t s f d) = (term121 _107639 B GEN_PVAR_148 t s f d).
Proof. exact (MK_COMB (@lem4525159 _107639 B GEN_PVAR_148) (@lem4525156 _107639 B t s f d)). Qed.
Lemma lem4525161 {_107639 B : Type'} (GEN_PVAR_148 : _107639 -> B) (t : B -> Prop) (s : _107639 -> Prop) (d : B) (f : _107639 -> B) : (term122 _107639 B GEN_PVAR_148 t s d f) = (term122 _107639 B GEN_PVAR_148 t s d f).
Proof. exact (MK_COMB (@lem4525160 _107639 B GEN_PVAR_148 t s f d) (@lem4525115 _107639 B f)). Qed.
Lemma lem4525162 {_107639 B : Type'} (GEN_PVAR_148 : _107639 -> B) (t : B -> Prop) (s : _107639 -> Prop) (d : B) : (term123 _107639 B GEN_PVAR_148 t s d) = (term123 _107639 B GEN_PVAR_148 t s d).
Proof. exact (fun_ext (fun f : _107639 -> B => @lem4525161 _107639 B GEN_PVAR_148 t s d f)). Qed.
Lemma lem4525163 {_107639 B : Type'} : (@ex (_107639 -> B)) = (@ex (_107639 -> B)).
Proof. exact (eq_refl (@ex (_107639 -> B))). Qed.
Lemma lem4525164 {_107639 B : Type'} (GEN_PVAR_148 : _107639 -> B) (t : B -> Prop) (s : _107639 -> Prop) (d : B) : (term124 _107639 B GEN_PVAR_148 t s d) = (term124 _107639 B GEN_PVAR_148 t s d).
Proof. exact (MK_COMB (@lem4525163 _107639 B) (@lem4525162 _107639 B GEN_PVAR_148 t s d)). Qed.
Lemma lem4525165 {_107639 B : Type'} (t : B -> Prop) (s : _107639 -> Prop) (d : B) : (term125 _107639 B t s d) = (term125 _107639 B t s d).
Proof. exact (fun_ext (fun GEN_PVAR_148 : _107639 -> B => @lem4525164 _107639 B GEN_PVAR_148 t s d)). Qed.
Lemma lem4525166 {_107639 B : Type'} : (@GSPEC (_107639 -> B)) = (@GSPEC (_107639 -> B)).
Proof. exact (eq_refl (@GSPEC (_107639 -> B))). Qed.
Lemma lem4525167 {_107639 B : Type'} (t : B -> Prop) (s : _107639 -> Prop) (d : B) : (term126 _107639 B t s d) = (term126 _107639 B t s d).
Proof. exact (MK_COMB (@lem4525166 _107639 B) (@lem4525165 _107639 B t s d)). Qed.
Lemma lem4525168 {_107639 B : Type'} : (@HAS_SIZE (_107639 -> B)) = (@HAS_SIZE (_107639 -> B)).
Proof. exact (eq_refl (@HAS_SIZE (_107639 -> B))). Qed.
Lemma lem4525169 {_107639 B : Type'} (t : B -> Prop) (s : _107639 -> Prop) (d : B) : (term127 _107639 B t s d) = (term127 _107639 B t s d).
Proof. exact (MK_COMB (@lem4525168 _107639 B) (@lem4525167 _107639 B t s d)). Qed.
Lemma lem4525170 {_107639 B : Type'} (t : B -> Prop) (s : _107639 -> Prop) (d : B) (n : nat) (m : nat) : (term128 _107639 B t s d n m) = (term128 _107639 B t s d n m).
Proof. exact (MK_COMB (@lem4525169 _107639 B t s d) (@lem4525111 n m)). Qed.
Lemma lem4525185 {_107639 B : Type'} (s : _107639 -> Prop) (m : nat) (t : B -> Prop) (n : nat) : (term129 _107639 B s m t n) = (term129 _107639 B s m t n).
Proof. exact (eq_refl (term129 _107639 B s m t n)). Qed.
Lemma lem4525186 {_107639 B : Type'} (t : B -> Prop) (s : _107639 -> Prop) (d : B) (n : nat) (m : nat) : (term130 _107639 B t s d n m) = (term130 _107639 B t s d n m).
Proof. exact (MK_COMB (@lem4525185 _107639 B s m t n) (@lem4525170 _107639 B t s d n m)). Qed.
Lemma lem4525187 {_107639 B : Type'} (t : B -> Prop) (d : B) (n : nat) (m : nat) : (term131 _107639 B t d n m) = (term131 _107639 B t d n m).
Proof. exact (fun_ext (fun s : _107639 -> Prop => @lem4525186 _107639 B t s d n m)). Qed.
Lemma lem4525188 {_107639 : Type'} : (@all (_107639 -> Prop)) = (@all (_107639 -> Prop)).
Proof. exact (eq_refl (@all (_107639 -> Prop))). Qed.
Lemma lem4525189 {_107639 B : Type'} (t : B -> Prop) (d : B) (n : nat) (m : nat) : (term132 _107639 B t d n m) = (term132 _107639 B t d n m).
Proof. exact (MK_COMB (@lem4525188 _107639) (@lem4525187 _107639 B t d n m)). Qed.
Lemma lem4525190 {_107639 B : Type'} (t : B -> Prop) (d : B) (n : nat) : (term133 _107639 B t d n) = (term133 _107639 B t d n).
Proof. exact (fun_ext (fun m : nat => @lem4525189 _107639 B t d n m)). Qed.
Lemma lem4525191 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4525192 {_107639 B : Type'} (t : B -> Prop) (d : B) (n : nat) : (term134 _107639 B t d n) = (term134 _107639 B t d n).
Proof. exact (MK_COMB (@lem4525191) (@lem4525190 _107639 B t d n)). Qed.
Lemma lem4525193 {_107639 B : Type'} (d : B) (n : nat) : (term135 _107639 B d n) = (term135 _107639 B d n).
Proof. exact (fun_ext (fun t : B -> Prop => @lem4525192 _107639 B t d n)). Qed.
Lemma lem4525194 {B : Type'} : (@all (B -> Prop)) = (@all (B -> Prop)).
Proof. exact (eq_refl (@all (B -> Prop))). Qed.
Lemma lem4525195 {_107639 B : Type'} (d : B) (n : nat) : (term136 _107639 B d n) = (term136 _107639 B d n).
Proof. exact (MK_COMB (@lem4525194 B) (@lem4525193 _107639 B d n)). Qed.
Lemma lem4525196 {_107639 B : Type'} (d : B) : (term137 _107639 B d) = (term137 _107639 B d).
Proof. exact (fun_ext (fun n : nat => @lem4525195 _107639 B d n)). Qed.
Lemma lem4525197 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4525198 {_107639 B : Type'} (d : B) : (term138 _107639 B d) = (term138 _107639 B d).
Proof. exact (MK_COMB (@lem4525197) (@lem4525196 _107639 B d)). Qed.
Lemma lem4525199 {_107639 B : Type'} : (term139 _107639 B) = (term139 _107639 B).
Proof. exact (fun_ext (fun d : B => @lem4525198 _107639 B d)). Qed.
Lemma lem4525200 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem4525201 {_107639 B : Type'} : (term12 _107639 B) = (term12 _107639 B).
Proof. exact (MK_COMB (@lem4525200 B) (@lem4525199 _107639 B)). Qed.
Lemma lem4525202 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4525203 {_107639 B : Type'} : (term25 _107639 B) = (term25 _107639 B).
Proof. exact (MK_COMB (@lem4525202) (@lem4525201 _107639 B)). Qed.
Lemma lem4525204 {_107639 _107642 A B : Type'} : (term31 _107639 _107642 A B) = (term31 _107639 _107642 A B).
Proof. exact (MK_COMB (@lem4525203 _107639 B) (@lem4525106 _107642 A B)). Qed.
Lemma lem4525209 (n : nat) (m : nat) : (Nat.pow n m) = (Nat.pow n m).
Proof. exact (eq_refl (Nat.pow n m)). Qed.
Lemma lem4525211 {_107642 A : Type'} (t : _107642 -> Prop) (s : A -> Prop) (d : _107642) (_53778 : type656 _107642 A) (h1 : _53778 = (term76 _107642 A)) : (term84 _107642 A t s d) = (_53778 t s d).
Proof. exact (SYM (@lem4524812 _107642 A t s d _53778 h1)). Qed.
Lemma lem4525212 {_107642 A : Type'} (t : _107642 -> Prop) (s : A -> Prop) (d : _107642) (_53778 : type656 _107642 A) (h1 : _53778 = (term76 _107642 A)) : (term84 _107642 A t s d) = (_53778 t s d).
Proof. exact (@lem4525211 _107642 A t s d _53778 h1). Qed.
Lemma lem4525213 {_107642 A : Type'} : (@GSPEC (A -> _107642)) = (@GSPEC (A -> _107642)).
Proof. exact (eq_refl (@GSPEC (A -> _107642))). Qed.
Lemma lem4525214 {_107642 A : Type'} (t : _107642 -> Prop) (s : A -> Prop) (d : _107642) (_53778 : type656 _107642 A) (h1 : _53778 = (term76 _107642 A)) : (term152 _107642 A t s d) = (term166 _107642 A _53778 t s d).
Proof. exact (MK_COMB (@lem4525213 _107642 A) (@lem4525212 _107642 A t s d _53778 h1)). Qed.
Lemma lem4525215 {_107642 A : Type'} : (@HAS_SIZE (A -> _107642)) = (@HAS_SIZE (A -> _107642)).
Proof. exact (eq_refl (@HAS_SIZE (A -> _107642))). Qed.
Lemma lem4525216 {_107642 A : Type'} (t : _107642 -> Prop) (s : A -> Prop) (d : _107642) (_53778 : type656 _107642 A) (h1 : _53778 = (term76 _107642 A)) : (term153 _107642 A t s d) = (term167 _107642 A _53778 t s d).
Proof. exact (MK_COMB (@lem4525215 _107642 A) (@lem4525214 _107642 A t s d _53778 h1)). Qed.
Lemma lem4525217 {_107642 A : Type'} (t : _107642 -> Prop) (s : A -> Prop) (d : _107642) (n : nat) (m : nat) (_53778 : type656 _107642 A) (h1 : _53778 = (term76 _107642 A)) : (term154 _107642 A t s d n m) = (term168 _107642 A _53778 t s d n m).
Proof. exact (MK_COMB (@lem4525216 _107642 A t s d _53778 h1) (@lem4525209 n m)). Qed.
Lemma lem4525232 {_107642 A : Type'} (s : A -> Prop) (m : nat) (t : _107642 -> Prop) (n : nat) : (term155 _107642 A s m t n) = (term155 _107642 A s m t n).
Proof. exact (eq_refl (term155 _107642 A s m t n)). Qed.
Lemma lem4525233 {_107642 A : Type'} (t : _107642 -> Prop) (s : A -> Prop) (d : _107642) (n : nat) (m : nat) (_53778 : type656 _107642 A) (h1 : _53778 = (term76 _107642 A)) : (term156 _107642 A t s d n m) = (term169 _107642 A _53778 t s d n m).
Proof. exact (MK_COMB (@lem4525232 _107642 A s m t n) (@lem4525217 _107642 A t s d n m _53778 h1)). Qed.
Lemma lem4525234 {_107642 A : Type'} (t : _107642 -> Prop) (d : _107642) (n : nat) (m : nat) (_53778 : type656 _107642 A) (h1 : _53778 = (term76 _107642 A)) : (term157 _107642 A t d n m) = (term170 _107642 A _53778 t d n m).
Proof. exact (fun_ext (fun s : A -> Prop => @lem4525233 _107642 A t s d n m _53778 h1)). Qed.
Lemma lem4525235 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem4525236 {_107642 A : Type'} (t : _107642 -> Prop) (d : _107642) (n : nat) (m : nat) (_53778 : type656 _107642 A) (h1 : _53778 = (term76 _107642 A)) : (term158 _107642 A t d n m) = (term171 _107642 A _53778 t d n m).
Proof. exact (MK_COMB (@lem4525235 A) (@lem4525234 _107642 A t d n m _53778 h1)). Qed.
Lemma lem4525237 {_107642 A : Type'} (t : _107642 -> Prop) (d : _107642) (n : nat) (_53778 : type656 _107642 A) (h1 : _53778 = (term76 _107642 A)) : (term159 _107642 A t d n) = (term172 _107642 A _53778 t d n).
Proof. exact (fun_ext (fun m : nat => @lem4525236 _107642 A t d n m _53778 h1)). Qed.
Lemma lem4525238 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4525239 {_107642 A : Type'} (t : _107642 -> Prop) (d : _107642) (n : nat) (_53778 : type656 _107642 A) (h1 : _53778 = (term76 _107642 A)) : (term160 _107642 A t d n) = (term173 _107642 A _53778 t d n).
Proof. exact (MK_COMB (@lem4525238) (@lem4525237 _107642 A t d n _53778 h1)). Qed.
Lemma lem4525240 {_107642 A : Type'} (d : _107642) (n : nat) (_53778 : type656 _107642 A) (h1 : _53778 = (term76 _107642 A)) : (term161 _107642 A d n) = (term174 _107642 A _53778 d n).
Proof. exact (fun_ext (fun t : _107642 -> Prop => @lem4525239 _107642 A t d n _53778 h1)). Qed.
Lemma lem4525241 {_107642 : Type'} : (@all (_107642 -> Prop)) = (@all (_107642 -> Prop)).
Proof. exact (eq_refl (@all (_107642 -> Prop))). Qed.
Lemma lem4525242 {_107642 A : Type'} (d : _107642) (n : nat) (_53778 : type656 _107642 A) (h1 : _53778 = (term76 _107642 A)) : (term162 _107642 A d n) = (term175 _107642 A _53778 d n).
Proof. exact (MK_COMB (@lem4525241 _107642) (@lem4525240 _107642 A d n _53778 h1)). Qed.
Lemma lem4525243 {_107642 A : Type'} (d : _107642) (_53778 : type656 _107642 A) (h1 : _53778 = (term76 _107642 A)) : (term163 _107642 A d) = (term176 _107642 A _53778 d).
Proof. exact (fun_ext (fun n : nat => @lem4525242 _107642 A d n _53778 h1)). Qed.
Lemma lem4525244 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4525245 {_107642 A : Type'} (d : _107642) (_53778 : type656 _107642 A) (h1 : _53778 = (term76 _107642 A)) : (term164 _107642 A d) = (term177 _107642 A _53778 d).
Proof. exact (MK_COMB (@lem4525244) (@lem4525243 _107642 A d _53778 h1)). Qed.
Lemma lem4525246 {_107642 A : Type'} (_53778 : type656 _107642 A) (h1 : _53778 = (term76 _107642 A)) : (term165 _107642 A) = (term178 _107642 A _53778).
Proof. exact (fun_ext (fun d : _107642 => @lem4525245 _107642 A d _53778 h1)). Qed.
Lemma lem4525247 {_107642 : Type'} : (@all _107642) = (@all _107642).
Proof. exact (eq_refl (@all _107642)). Qed.
Lemma lem4525248 {_107642 A : Type'} (_53778 : type656 _107642 A) (h1 : _53778 = (term76 _107642 A)) : (term11 _107642 A) = (term179 _107642 A _53778).
Proof. exact (MK_COMB (@lem4525247 _107642) (@lem4525246 _107642 A _53778 h1)). Qed.
Lemma lem4525249 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4525250 {_107642 A : Type'} (_53778 : type656 _107642 A) (h1 : _53778 = (term76 _107642 A)) : (term32 _107642 A) = (term180 _107642 A _53778).
Proof. exact (MK_COMB (@lem4525249) (@lem4525248 _107642 A _53778 h1)). Qed.
Lemma lem4525251 {_107639 _107642 A B : Type'} (_53778 : type656 _107642 A) (h1 : _53778 = (term76 _107642 A)) : (term34 _107639 _107642 A B) = (term350 _107639 _107642 A B _53778).
Proof. exact (MK_COMB (@lem4525250 _107642 A _53778 h1) (@lem4525204 _107639 _107642 A B)). Qed.
Lemma lem4525284 {_107639 A : Type'} (_53777 : type656 _107639 A) (t : _107639 -> Prop) (s : A -> Prop) (d : _107639) (n : nat) (m : nat) : (term169 _107639 A _53777 t s d n m) = (term169 _107639 A _53777 t s d n m).
Proof. exact (eq_refl (term169 _107639 A _53777 t s d n m)). Qed.
Lemma lem4525285 {_107639 A : Type'} (_53777 : type656 _107639 A) (t : _107639 -> Prop) (d : _107639) (n : nat) (m : nat) : (term170 _107639 A _53777 t d n m) = (term170 _107639 A _53777 t d n m).
Proof. exact (fun_ext (fun s : A -> Prop => @lem4525284 _107639 A _53777 t s d n m)). Qed.
Lemma lem4525286 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem4525287 {_107639 A : Type'} (_53777 : type656 _107639 A) (t : _107639 -> Prop) (d : _107639) (n : nat) (m : nat) : (term171 _107639 A _53777 t d n m) = (term171 _107639 A _53777 t d n m).
Proof. exact (MK_COMB (@lem4525286 A) (@lem4525285 _107639 A _53777 t d n m)). Qed.
Lemma lem4525288 {_107639 A : Type'} (_53777 : type656 _107639 A) (t : _107639 -> Prop) (d : _107639) (n : nat) : (term172 _107639 A _53777 t d n) = (term172 _107639 A _53777 t d n).
Proof. exact (fun_ext (fun m : nat => @lem4525287 _107639 A _53777 t d n m)). Qed.
Lemma lem4525289 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4525290 {_107639 A : Type'} (_53777 : type656 _107639 A) (t : _107639 -> Prop) (d : _107639) (n : nat) : (term173 _107639 A _53777 t d n) = (term173 _107639 A _53777 t d n).
Proof. exact (MK_COMB (@lem4525289) (@lem4525288 _107639 A _53777 t d n)). Qed.
Lemma lem4525291 {_107639 A : Type'} (_53777 : type656 _107639 A) (d : _107639) (n : nat) : (term174 _107639 A _53777 d n) = (term174 _107639 A _53777 d n).
Proof. exact (fun_ext (fun t : _107639 -> Prop => @lem4525290 _107639 A _53777 t d n)). Qed.
Lemma lem4525292 {_107639 : Type'} : (@all (_107639 -> Prop)) = (@all (_107639 -> Prop)).
Proof. exact (eq_refl (@all (_107639 -> Prop))). Qed.
Lemma lem4525293 {_107639 A : Type'} (_53777 : type656 _107639 A) (d : _107639) (n : nat) : (term175 _107639 A _53777 d n) = (term175 _107639 A _53777 d n).
Proof. exact (MK_COMB (@lem4525292 _107639) (@lem4525291 _107639 A _53777 d n)). Qed.
Lemma lem4525294 {_107639 A : Type'} (_53777 : type656 _107639 A) (d : _107639) : (term176 _107639 A _53777 d) = (term176 _107639 A _53777 d).
Proof. exact (fun_ext (fun n : nat => @lem4525293 _107639 A _53777 d n)). Qed.
Lemma lem4525295 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4525296 {_107639 A : Type'} (_53777 : type656 _107639 A) (d : _107639) : (term177 _107639 A _53777 d) = (term177 _107639 A _53777 d).
Proof. exact (MK_COMB (@lem4525295) (@lem4525294 _107639 A _53777 d)). Qed.
Lemma lem4525297 {_107639 A : Type'} (_53777 : type656 _107639 A) : (term178 _107639 A _53777) = (term178 _107639 A _53777).
Proof. exact (fun_ext (fun d : _107639 => @lem4525296 _107639 A _53777 d)). Qed.
Lemma lem4525298 {_107639 : Type'} : (@all _107639) = (@all _107639).
Proof. exact (eq_refl (@all _107639)). Qed.
Lemma lem4525299 {_107639 A : Type'} (_53777 : type656 _107639 A) : (term179 _107639 A _53777) = (term179 _107639 A _53777).
Proof. exact (MK_COMB (@lem4525298 _107639) (@lem4525297 _107639 A _53777)). Qed.
Lemma lem4525300 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4525301 {_107639 A : Type'} (_53777 : type656 _107639 A) : (term180 _107639 A _53777) = (term180 _107639 A _53777).
Proof. exact (MK_COMB (@lem4525300) (@lem4525299 _107639 A _53777)). Qed.
Lemma lem4525302 {_107639 _107642 A B : Type'} (_53777 : type656 _107639 A) (_53778 : type656 _107642 A) (h1 : _53778 = (term76 _107642 A)) : (term307 _107639 _107642 A B _53777) = (term351 _107639 _107642 A B _53777 _53778).
Proof. exact (MK_COMB (@lem4525301 _107639 A _53777) (@lem4525251 _107639 _107642 A B _53778 h1)). Qed.
Lemma lem4525335 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (t : _107639 -> Prop) (s : _107642 -> Prop) (d : _107639) (n : nat) (m : nat) : (term169 _107639 _107642 _53776 t s d n m) = (term169 _107639 _107642 _53776 t s d n m).
Proof. exact (eq_refl (term169 _107639 _107642 _53776 t s d n m)). Qed.
Lemma lem4525336 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (t : _107639 -> Prop) (d : _107639) (n : nat) (m : nat) : (term170 _107639 _107642 _53776 t d n m) = (term170 _107639 _107642 _53776 t d n m).
Proof. exact (fun_ext (fun s : _107642 -> Prop => @lem4525335 _107639 _107642 _53776 t s d n m)). Qed.
Lemma lem4525337 {_107642 : Type'} : (@all (_107642 -> Prop)) = (@all (_107642 -> Prop)).
Proof. exact (eq_refl (@all (_107642 -> Prop))). Qed.
Lemma lem4525338 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (t : _107639 -> Prop) (d : _107639) (n : nat) (m : nat) : (term171 _107639 _107642 _53776 t d n m) = (term171 _107639 _107642 _53776 t d n m).
Proof. exact (MK_COMB (@lem4525337 _107642) (@lem4525336 _107639 _107642 _53776 t d n m)). Qed.
Lemma lem4525339 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (t : _107639 -> Prop) (d : _107639) (n : nat) : (term172 _107639 _107642 _53776 t d n) = (term172 _107639 _107642 _53776 t d n).
Proof. exact (fun_ext (fun m : nat => @lem4525338 _107639 _107642 _53776 t d n m)). Qed.
Lemma lem4525340 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4525341 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (t : _107639 -> Prop) (d : _107639) (n : nat) : (term173 _107639 _107642 _53776 t d n) = (term173 _107639 _107642 _53776 t d n).
Proof. exact (MK_COMB (@lem4525340) (@lem4525339 _107639 _107642 _53776 t d n)). Qed.
Lemma lem4525342 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (d : _107639) (n : nat) : (term174 _107639 _107642 _53776 d n) = (term174 _107639 _107642 _53776 d n).
Proof. exact (fun_ext (fun t : _107639 -> Prop => @lem4525341 _107639 _107642 _53776 t d n)). Qed.
Lemma lem4525343 {_107639 : Type'} : (@all (_107639 -> Prop)) = (@all (_107639 -> Prop)).
Proof. exact (eq_refl (@all (_107639 -> Prop))). Qed.
Lemma lem4525344 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (d : _107639) (n : nat) : (term175 _107639 _107642 _53776 d n) = (term175 _107639 _107642 _53776 d n).
Proof. exact (MK_COMB (@lem4525343 _107639) (@lem4525342 _107639 _107642 _53776 d n)). Qed.
Lemma lem4525345 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (d : _107639) : (term176 _107639 _107642 _53776 d) = (term176 _107639 _107642 _53776 d).
Proof. exact (fun_ext (fun n : nat => @lem4525344 _107639 _107642 _53776 d n)). Qed.
Lemma lem4525346 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4525347 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (d : _107639) : (term177 _107639 _107642 _53776 d) = (term177 _107639 _107642 _53776 d).
Proof. exact (MK_COMB (@lem4525346) (@lem4525345 _107639 _107642 _53776 d)). Qed.
Lemma lem4525348 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) : (term178 _107639 _107642 _53776) = (term178 _107639 _107642 _53776).
Proof. exact (fun_ext (fun d : _107639 => @lem4525347 _107639 _107642 _53776 d)). Qed.
Lemma lem4525349 {_107639 : Type'} : (@all _107639) = (@all _107639).
Proof. exact (eq_refl (@all _107639)). Qed.
Lemma lem4525350 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) : (term179 _107639 _107642 _53776) = (term179 _107639 _107642 _53776).
Proof. exact (MK_COMB (@lem4525349 _107639) (@lem4525348 _107639 _107642 _53776)). Qed.
Lemma lem4525351 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4525352 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) : (term180 _107639 _107642 _53776) = (term180 _107639 _107642 _53776).
Proof. exact (MK_COMB (@lem4525351) (@lem4525350 _107639 _107642 _53776)). Qed.
Lemma lem4525353 {_107639 _107642 A B : Type'} (_53776 : type656 _107639 _107642) (_53777 : type656 _107639 A) (_53778 : type656 _107642 A) (h1 : _53778 = (term76 _107642 A)) : (term308 _107639 _107642 A B _53776 _53777) = (term352 _107639 _107642 A B _53776 _53777 _53778).
Proof. exact (MK_COMB (@lem4525352 _107639 _107642 _53776) (@lem4525302 _107639 _107642 A B _53777 _53778 h1)). Qed.
Lemma lem4525374 (s : nat -> Prop) (n : nat) : ((@HAS_SIZE nat s n) = (term182 s n)) = ((@HAS_SIZE nat s n) = (term182 s n)).
Proof. exact (eq_refl ((@HAS_SIZE nat s n) = (term182 s n))). Qed.
Lemma lem4525375 (s : nat -> Prop) : (term183 s) = (term183 s).
Proof. exact (fun_ext (fun n : nat => @lem4525374 s n)). Qed.
Lemma lem4525376 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4525377 (s : nat -> Prop) : (term184 s) = (term184 s).
Proof. exact (MK_COMB (@lem4525376) (@lem4525375 s)). Qed.
Lemma lem4525378 : term185 = term185.
Proof. exact (fun_ext (fun s : nat -> Prop => @lem4525377 s)). Qed.
Lemma lem4525379 : (@all (nat -> Prop)) = (@all (nat -> Prop)).
Proof. exact (eq_refl (@all (nat -> Prop))). Qed.
Lemma lem4525380 : term15 = term15.
Proof. exact (MK_COMB (@lem4525379) (@lem4525378)). Qed.
Lemma lem4525381 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4525382 : term39 = term39.
Proof. exact (MK_COMB (@lem4525381) (@lem4525380)). Qed.
Lemma lem4525383 {_107639 _107642 A B : Type'} (_53776 : type656 _107639 _107642) (_53777 : type656 _107639 A) (_53778 : type656 _107642 A) (h1 : _53778 = (term76 _107642 A)) : (term309 _107639 _107642 A B _53776 _53777) = (term353 _107639 _107642 A B _53776 _53777 _53778).
Proof. exact (MK_COMB (@lem4525382) (@lem4525353 _107639 _107642 A B _53776 _53777 _53778 h1)). Qed.
Lemma lem4525404 {A : Type'} (s : type704 A) (n : nat) : ((@HAS_SIZE (A -> nat) s n) = (term187 A s n)) = ((@HAS_SIZE (A -> nat) s n) = (term187 A s n)).
Proof. exact (eq_refl ((@HAS_SIZE (A -> nat) s n) = (term187 A s n))). Qed.
Lemma lem4525405 {A : Type'} (s : type704 A) : (term188 A s) = (term188 A s).
Proof. exact (fun_ext (fun n : nat => @lem4525404 A s n)). Qed.
Lemma lem4525406 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4525407 {A : Type'} (s : type704 A) : (term189 A s) = (term189 A s).
Proof. exact (MK_COMB (@lem4525406) (@lem4525405 A s)). Qed.
Lemma lem4525408 {A : Type'} : (term190 A) = (term190 A).
Proof. exact (fun_ext (fun s : type704 A => @lem4525407 A s)). Qed.
Lemma lem4525409 {A : Type'} : (@all ((A -> nat) -> Prop)) = (@all ((A -> nat) -> Prop)).
Proof. exact (eq_refl (@all ((A -> nat) -> Prop))). Qed.
Lemma lem4525410 {A : Type'} : (term16 A) = (term16 A).
Proof. exact (MK_COMB (@lem4525409 A) (@lem4525408 A)). Qed.
Lemma lem4525411 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4525412 {A : Type'} : (term42 A) = (term42 A).
Proof. exact (MK_COMB (@lem4525411) (@lem4525410 A)). Qed.
Lemma lem4525413 {_107639 _107642 A B : Type'} (_53776 : type656 _107639 _107642) (_53777 : type656 _107639 A) (_53778 : type656 _107642 A) (h1 : _53778 = (term76 _107642 A)) : (term310 _107639 _107642 A B _53776 _53777) = (term354 _107639 _107642 A B _53776 _53777 _53778).
Proof. exact (MK_COMB (@lem4525412 A) (@lem4525383 _107639 _107642 A B _53776 _53777 _53778 h1)). Qed.
Lemma lem4525434 {A B : Type'} (s : type572 A B) (n : nat) : ((@HAS_SIZE (A -> B) s n) = (term192 A B s n)) = ((@HAS_SIZE (A -> B) s n) = (term192 A B s n)).
Proof. exact (eq_refl ((@HAS_SIZE (A -> B) s n) = (term192 A B s n))). Qed.
Lemma lem4525435 {A B : Type'} (s : type572 A B) : (term193 A B s) = (term193 A B s).
Proof. exact (fun_ext (fun n : nat => @lem4525434 A B s n)). Qed.
Lemma lem4525436 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4525437 {A B : Type'} (s : type572 A B) : (term194 A B s) = (term194 A B s).
Proof. exact (MK_COMB (@lem4525436) (@lem4525435 A B s)). Qed.
Lemma lem4525438 {A B : Type'} : (term195 A B) = (term195 A B).
Proof. exact (fun_ext (fun s : type572 A B => @lem4525437 A B s)). Qed.
Lemma lem4525439 {A B : Type'} : (@all ((A -> B) -> Prop)) = (@all ((A -> B) -> Prop)).
Proof. exact (eq_refl (@all ((A -> B) -> Prop))). Qed.
Lemma lem4525440 {A B : Type'} : (term17 A B) = (term17 A B).
Proof. exact (MK_COMB (@lem4525439 A B) (@lem4525438 A B)). Qed.
Lemma lem4525441 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4525442 {A B : Type'} : (term45 A B) = (term45 A B).
Proof. exact (MK_COMB (@lem4525441) (@lem4525440 A B)). Qed.
Lemma lem4525443 {_107639 _107642 A B : Type'} (_53776 : type656 _107639 _107642) (_53777 : type656 _107639 A) (_53778 : type656 _107642 A) (h1 : _53778 = (term76 _107642 A)) : (term311 _107639 _107642 A B _53776 _53777) = (term355 _107639 _107642 A B _53776 _53777 _53778).
Proof. exact (MK_COMB (@lem4525442 A B) (@lem4525413 _107639 _107642 A B _53776 _53777 _53778 h1)). Qed.
Lemma lem4525464 {_107642 A : Type'} (s : type805 _107642 A) (n : nat) : ((@HAS_SIZE (A -> _107642) s n) = (term197 _107642 A s n)) = ((@HAS_SIZE (A -> _107642) s n) = (term197 _107642 A s n)).
Proof. exact (eq_refl ((@HAS_SIZE (A -> _107642) s n) = (term197 _107642 A s n))). Qed.
Lemma lem4525465 {_107642 A : Type'} (s : type805 _107642 A) : (term198 _107642 A s) = (term198 _107642 A s).
Proof. exact (fun_ext (fun n : nat => @lem4525464 _107642 A s n)). Qed.
Lemma lem4525466 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4525467 {_107642 A : Type'} (s : type805 _107642 A) : (term199 _107642 A s) = (term199 _107642 A s).
Proof. exact (MK_COMB (@lem4525466) (@lem4525465 _107642 A s)). Qed.
Lemma lem4525468 {_107642 A : Type'} : (term200 _107642 A) = (term200 _107642 A).
Proof. exact (fun_ext (fun s : type805 _107642 A => @lem4525467 _107642 A s)). Qed.
Lemma lem4525469 {_107642 A : Type'} : (@all ((A -> _107642) -> Prop)) = (@all ((A -> _107642) -> Prop)).
Proof. exact (eq_refl (@all ((A -> _107642) -> Prop))). Qed.
Lemma lem4525470 {_107642 A : Type'} : (term18 _107642 A) = (term18 _107642 A).
Proof. exact (MK_COMB (@lem4525469 _107642 A) (@lem4525468 _107642 A)). Qed.
Lemma lem4525471 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4525472 {_107642 A : Type'} : (term48 _107642 A) = (term48 _107642 A).
Proof. exact (MK_COMB (@lem4525471) (@lem4525470 _107642 A)). Qed.
Lemma lem4525473 {_107639 _107642 A B : Type'} (_53776 : type656 _107639 _107642) (_53777 : type656 _107639 A) (_53778 : type656 _107642 A) (h1 : _53778 = (term76 _107642 A)) : (term312 _107639 _107642 A B _53776 _53777) = (term356 _107639 _107642 A B _53776 _53777 _53778).
Proof. exact (MK_COMB (@lem4525472 _107642 A) (@lem4525443 _107639 _107642 A B _53776 _53777 _53778 h1)). Qed.
Lemma lem4525494 {_107639 A : Type'} (s : type805 _107639 A) (n : nat) : ((@HAS_SIZE (A -> _107639) s n) = (term197 _107639 A s n)) = ((@HAS_SIZE (A -> _107639) s n) = (term197 _107639 A s n)).
Proof. exact (eq_refl ((@HAS_SIZE (A -> _107639) s n) = (term197 _107639 A s n))). Qed.
Lemma lem4525495 {_107639 A : Type'} (s : type805 _107639 A) : (term198 _107639 A s) = (term198 _107639 A s).
Proof. exact (fun_ext (fun n : nat => @lem4525494 _107639 A s n)). Qed.
Lemma lem4525496 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4525497 {_107639 A : Type'} (s : type805 _107639 A) : (term199 _107639 A s) = (term199 _107639 A s).
Proof. exact (MK_COMB (@lem4525496) (@lem4525495 _107639 A s)). Qed.
Lemma lem4525498 {_107639 A : Type'} : (term200 _107639 A) = (term200 _107639 A).
Proof. exact (fun_ext (fun s : type805 _107639 A => @lem4525497 _107639 A s)). Qed.
Lemma lem4525499 {_107639 A : Type'} : (@all ((A -> _107639) -> Prop)) = (@all ((A -> _107639) -> Prop)).
Proof. exact (eq_refl (@all ((A -> _107639) -> Prop))). Qed.
Lemma lem4525500 {_107639 A : Type'} : (term18 _107639 A) = (term18 _107639 A).
Proof. exact (MK_COMB (@lem4525499 _107639 A) (@lem4525498 _107639 A)). Qed.
Lemma lem4525501 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4525502 {_107639 A : Type'} : (term48 _107639 A) = (term48 _107639 A).
Proof. exact (MK_COMB (@lem4525501) (@lem4525500 _107639 A)). Qed.
Lemma lem4525503 {_107639 _107642 A B : Type'} (_53776 : type656 _107639 _107642) (_53777 : type656 _107639 A) (_53778 : type656 _107642 A) (h1 : _53778 = (term76 _107642 A)) : (term313 _107639 _107642 A B _53776 _53777) = (term357 _107639 _107642 A B _53776 _53777 _53778).
Proof. exact (MK_COMB (@lem4525502 _107639 A) (@lem4525473 _107639 _107642 A B _53776 _53777 _53778 h1)). Qed.
Lemma lem4525524 {_107642 B : Type'} (s : type572 _107642 B) (n : nat) : ((@HAS_SIZE (_107642 -> B) s n) = (term192 _107642 B s n)) = ((@HAS_SIZE (_107642 -> B) s n) = (term192 _107642 B s n)).
Proof. exact (eq_refl ((@HAS_SIZE (_107642 -> B) s n) = (term192 _107642 B s n))). Qed.
Lemma lem4525525 {_107642 B : Type'} (s : type572 _107642 B) : (term193 _107642 B s) = (term193 _107642 B s).
Proof. exact (fun_ext (fun n : nat => @lem4525524 _107642 B s n)). Qed.
Lemma lem4525526 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4525527 {_107642 B : Type'} (s : type572 _107642 B) : (term194 _107642 B s) = (term194 _107642 B s).
Proof. exact (MK_COMB (@lem4525526) (@lem4525525 _107642 B s)). Qed.
Lemma lem4525528 {_107642 B : Type'} : (term195 _107642 B) = (term195 _107642 B).
Proof. exact (fun_ext (fun s : type572 _107642 B => @lem4525527 _107642 B s)). Qed.
Lemma lem4525529 {_107642 B : Type'} : (@all ((_107642 -> B) -> Prop)) = (@all ((_107642 -> B) -> Prop)).
Proof. exact (eq_refl (@all ((_107642 -> B) -> Prop))). Qed.
Lemma lem4525530 {_107642 B : Type'} : (term17 _107642 B) = (term17 _107642 B).
Proof. exact (MK_COMB (@lem4525529 _107642 B) (@lem4525528 _107642 B)). Qed.
Lemma lem4525531 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4525532 {_107642 B : Type'} : (term45 _107642 B) = (term45 _107642 B).
Proof. exact (MK_COMB (@lem4525531) (@lem4525530 _107642 B)). Qed.
Lemma lem4525533 {_107639 _107642 A B : Type'} (_53776 : type656 _107639 _107642) (_53777 : type656 _107639 A) (_53778 : type656 _107642 A) (h1 : _53778 = (term76 _107642 A)) : (term314 _107639 _107642 A B _53776 _53777) = (term358 _107639 _107642 A B _53776 _53777 _53778).
Proof. exact (MK_COMB (@lem4525532 _107642 B) (@lem4525503 _107639 _107642 A B _53776 _53777 _53778 h1)). Qed.
Lemma lem4525554 {_107639 _107642 : Type'} (s : type805 _107639 _107642) (n : nat) : ((@HAS_SIZE (_107642 -> _107639) s n) = (term197 _107639 _107642 s n)) = ((@HAS_SIZE (_107642 -> _107639) s n) = (term197 _107639 _107642 s n)).
Proof. exact (eq_refl ((@HAS_SIZE (_107642 -> _107639) s n) = (term197 _107639 _107642 s n))). Qed.
Lemma lem4525555 {_107639 _107642 : Type'} (s : type805 _107639 _107642) : (term198 _107639 _107642 s) = (term198 _107639 _107642 s).
Proof. exact (fun_ext (fun n : nat => @lem4525554 _107639 _107642 s n)). Qed.
Lemma lem4525556 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4525557 {_107639 _107642 : Type'} (s : type805 _107639 _107642) : (term199 _107639 _107642 s) = (term199 _107639 _107642 s).
Proof. exact (MK_COMB (@lem4525556) (@lem4525555 _107639 _107642 s)). Qed.
Lemma lem4525558 {_107639 _107642 : Type'} : (term200 _107639 _107642) = (term200 _107639 _107642).
Proof. exact (fun_ext (fun s : type805 _107639 _107642 => @lem4525557 _107639 _107642 s)). Qed.
Lemma lem4525559 {_107639 _107642 : Type'} : (@all ((_107642 -> _107639) -> Prop)) = (@all ((_107642 -> _107639) -> Prop)).
Proof. exact (eq_refl (@all ((_107642 -> _107639) -> Prop))). Qed.
Lemma lem4525560 {_107639 _107642 : Type'} : (term18 _107639 _107642) = (term18 _107639 _107642).
Proof. exact (MK_COMB (@lem4525559 _107639 _107642) (@lem4525558 _107639 _107642)). Qed.
Lemma lem4525561 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4525562 {_107639 _107642 : Type'} : (term48 _107639 _107642) = (term48 _107639 _107642).
Proof. exact (MK_COMB (@lem4525561) (@lem4525560 _107639 _107642)). Qed.
Lemma lem4525563 {_107639 _107642 A B : Type'} (_53776 : type656 _107639 _107642) (_53777 : type656 _107639 A) (_53778 : type656 _107642 A) (h1 : _53778 = (term76 _107642 A)) : (term315 _107639 _107642 A B _53776 _53777) = (term359 _107639 _107642 A B _53776 _53777 _53778).
Proof. exact (MK_COMB (@lem4525562 _107639 _107642) (@lem4525533 _107639 _107642 A B _53776 _53777 _53778 h1)). Qed.
Lemma lem4525584 {_107639 B : Type'} (s : type572 _107639 B) (n : nat) : ((@HAS_SIZE (_107639 -> B) s n) = (term192 _107639 B s n)) = ((@HAS_SIZE (_107639 -> B) s n) = (term192 _107639 B s n)).
Proof. exact (eq_refl ((@HAS_SIZE (_107639 -> B) s n) = (term192 _107639 B s n))). Qed.
Lemma lem4525585 {_107639 B : Type'} (s : type572 _107639 B) : (term193 _107639 B s) = (term193 _107639 B s).
Proof. exact (fun_ext (fun n : nat => @lem4525584 _107639 B s n)). Qed.
Lemma lem4525586 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4525587 {_107639 B : Type'} (s : type572 _107639 B) : (term194 _107639 B s) = (term194 _107639 B s).
Proof. exact (MK_COMB (@lem4525586) (@lem4525585 _107639 B s)). Qed.
Lemma lem4525588 {_107639 B : Type'} : (term195 _107639 B) = (term195 _107639 B).
Proof. exact (fun_ext (fun s : type572 _107639 B => @lem4525587 _107639 B s)). Qed.
Lemma lem4525589 {_107639 B : Type'} : (@all ((_107639 -> B) -> Prop)) = (@all ((_107639 -> B) -> Prop)).
Proof. exact (eq_refl (@all ((_107639 -> B) -> Prop))). Qed.
Lemma lem4525590 {_107639 B : Type'} : (term17 _107639 B) = (term17 _107639 B).
Proof. exact (MK_COMB (@lem4525589 _107639 B) (@lem4525588 _107639 B)). Qed.
Lemma lem4525591 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4525592 {_107639 B : Type'} : (term45 _107639 B) = (term45 _107639 B).
Proof. exact (MK_COMB (@lem4525591) (@lem4525590 _107639 B)). Qed.
Lemma lem4525593 {_107639 _107642 A B : Type'} (_53776 : type656 _107639 _107642) (_53777 : type656 _107639 A) (_53778 : type656 _107642 A) (h1 : _53778 = (term76 _107642 A)) : (term316 _107639 _107642 A B _53776 _53777) = (term360 _107639 _107642 A B _53776 _53777 _53778).
Proof. exact (MK_COMB (@lem4525592 _107639 B) (@lem4525563 _107639 _107642 A B _53776 _53777 _53778 h1)). Qed.
Lemma lem4525614 {B : Type'} (s : B -> Prop) (n : nat) : ((@HAS_SIZE B s n) = (term206 B s n)) = ((@HAS_SIZE B s n) = (term206 B s n)).
Proof. exact (eq_refl ((@HAS_SIZE B s n) = (term206 B s n))). Qed.
Lemma lem4525615 {B : Type'} (s : B -> Prop) : (term207 B s) = (term207 B s).
Proof. exact (fun_ext (fun n : nat => @lem4525614 B s n)). Qed.
Lemma lem4525616 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4525617 {B : Type'} (s : B -> Prop) : (term208 B s) = (term208 B s).
Proof. exact (MK_COMB (@lem4525616) (@lem4525615 B s)). Qed.
Lemma lem4525618 {B : Type'} : (term209 B) = (term209 B).
Proof. exact (fun_ext (fun s : B -> Prop => @lem4525617 B s)). Qed.
Lemma lem4525619 {B : Type'} : (@all (B -> Prop)) = (@all (B -> Prop)).
Proof. exact (eq_refl (@all (B -> Prop))). Qed.
Lemma lem4525620 {B : Type'} : (term14 B) = (term14 B).
Proof. exact (MK_COMB (@lem4525619 B) (@lem4525618 B)). Qed.
Lemma lem4525621 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4525622 {B : Type'} : (term59 B) = (term59 B).
Proof. exact (MK_COMB (@lem4525621) (@lem4525620 B)). Qed.
Lemma lem4525623 {_107639 _107642 A B : Type'} (_53776 : type656 _107639 _107642) (_53777 : type656 _107639 A) (_53778 : type656 _107642 A) (h1 : _53778 = (term76 _107642 A)) : (term317 _107639 _107642 A B _53776 _53777) = (term361 _107639 _107642 A B _53776 _53777 _53778).
Proof. exact (MK_COMB (@lem4525622 B) (@lem4525593 _107639 _107642 A B _53776 _53777 _53778 h1)). Qed.
Lemma lem4525644 {A : Type'} (s : A -> Prop) (n : nat) : ((@HAS_SIZE A s n) = (term206 A s n)) = ((@HAS_SIZE A s n) = (term206 A s n)).
Proof. exact (eq_refl ((@HAS_SIZE A s n) = (term206 A s n))). Qed.
Lemma lem4525645 {A : Type'} (s : A -> Prop) : (term207 A s) = (term207 A s).
Proof. exact (fun_ext (fun n : nat => @lem4525644 A s n)). Qed.
Lemma lem4525646 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4525647 {A : Type'} (s : A -> Prop) : (term208 A s) = (term208 A s).
Proof. exact (MK_COMB (@lem4525646) (@lem4525645 A s)). Qed.
Lemma lem4525648 {A : Type'} : (term209 A) = (term209 A).
Proof. exact (fun_ext (fun s : A -> Prop => @lem4525647 A s)). Qed.
Lemma lem4525649 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem4525650 {A : Type'} : (term14 A) = (term14 A).
Proof. exact (MK_COMB (@lem4525649 A) (@lem4525648 A)). Qed.
Lemma lem4525651 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4525652 {A : Type'} : (term59 A) = (term59 A).
Proof. exact (MK_COMB (@lem4525651) (@lem4525650 A)). Qed.
Lemma lem4525653 {_107639 _107642 A B : Type'} (_53776 : type656 _107639 _107642) (_53777 : type656 _107639 A) (_53778 : type656 _107642 A) (h1 : _53778 = (term76 _107642 A)) : (term318 _107639 _107642 A B _53776 _53777) = (term362 _107639 _107642 A B _53776 _53777 _53778).
Proof. exact (MK_COMB (@lem4525652 A) (@lem4525623 _107639 _107642 A B _53776 _53777 _53778 h1)). Qed.
Lemma lem4525674 {_107642 : Type'} (s : _107642 -> Prop) (n : nat) : ((@HAS_SIZE _107642 s n) = (term206 _107642 s n)) = ((@HAS_SIZE _107642 s n) = (term206 _107642 s n)).
Proof. exact (eq_refl ((@HAS_SIZE _107642 s n) = (term206 _107642 s n))). Qed.
Lemma lem4525675 {_107642 : Type'} (s : _107642 -> Prop) : (term207 _107642 s) = (term207 _107642 s).
Proof. exact (fun_ext (fun n : nat => @lem4525674 _107642 s n)). Qed.
Lemma lem4525676 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4525677 {_107642 : Type'} (s : _107642 -> Prop) : (term208 _107642 s) = (term208 _107642 s).
Proof. exact (MK_COMB (@lem4525676) (@lem4525675 _107642 s)). Qed.
Lemma lem4525678 {_107642 : Type'} : (term209 _107642) = (term209 _107642).
Proof. exact (fun_ext (fun s : _107642 -> Prop => @lem4525677 _107642 s)). Qed.
Lemma lem4525679 {_107642 : Type'} : (@all (_107642 -> Prop)) = (@all (_107642 -> Prop)).
Proof. exact (eq_refl (@all (_107642 -> Prop))). Qed.
Lemma lem4525680 {_107642 : Type'} : (term14 _107642) = (term14 _107642).
Proof. exact (MK_COMB (@lem4525679 _107642) (@lem4525678 _107642)). Qed.
Lemma lem4525681 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4525682 {_107642 : Type'} : (term59 _107642) = (term59 _107642).
Proof. exact (MK_COMB (@lem4525681) (@lem4525680 _107642)). Qed.
Lemma lem4525683 {_107639 _107642 A B : Type'} (_53776 : type656 _107639 _107642) (_53777 : type656 _107639 A) (_53778 : type656 _107642 A) (h1 : _53778 = (term76 _107642 A)) : (term319 _107639 _107642 A B _53776 _53777) = (term363 _107639 _107642 A B _53776 _53777 _53778).
Proof. exact (MK_COMB (@lem4525682 _107642) (@lem4525653 _107639 _107642 A B _53776 _53777 _53778 h1)). Qed.
Lemma lem4525704 {_107639 : Type'} (s : _107639 -> Prop) (n : nat) : ((@HAS_SIZE _107639 s n) = (term206 _107639 s n)) = ((@HAS_SIZE _107639 s n) = (term206 _107639 s n)).
Proof. exact (eq_refl ((@HAS_SIZE _107639 s n) = (term206 _107639 s n))). Qed.
Lemma lem4525705 {_107639 : Type'} (s : _107639 -> Prop) : (term207 _107639 s) = (term207 _107639 s).
Proof. exact (fun_ext (fun n : nat => @lem4525704 _107639 s n)). Qed.
Lemma lem4525706 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4525707 {_107639 : Type'} (s : _107639 -> Prop) : (term208 _107639 s) = (term208 _107639 s).
Proof. exact (MK_COMB (@lem4525706) (@lem4525705 _107639 s)). Qed.
Lemma lem4525708 {_107639 : Type'} : (term209 _107639) = (term209 _107639).
Proof. exact (fun_ext (fun s : _107639 -> Prop => @lem4525707 _107639 s)). Qed.
Lemma lem4525709 {_107639 : Type'} : (@all (_107639 -> Prop)) = (@all (_107639 -> Prop)).
Proof. exact (eq_refl (@all (_107639 -> Prop))). Qed.
Lemma lem4525710 {_107639 : Type'} : (term14 _107639) = (term14 _107639).
Proof. exact (MK_COMB (@lem4525709 _107639) (@lem4525708 _107639)). Qed.
Lemma lem4525711 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4525712 {_107639 : Type'} : (term59 _107639) = (term59 _107639).
Proof. exact (MK_COMB (@lem4525711) (@lem4525710 _107639)). Qed.
Lemma lem4525713 {_107639 _107642 A B : Type'} (_53776 : type656 _107639 _107642) (_53777 : type656 _107639 A) (_53778 : type656 _107642 A) (h1 : _53778 = (term76 _107642 A)) : (term320 _107639 _107642 A B _53776 _53777) = (term364 _107639 _107642 A B _53776 _53777 _53778).
Proof. exact (MK_COMB (@lem4525712 _107639) (@lem4525683 _107639 _107642 A B _53776 _53777 _53778 h1)). Qed.
Lemma lem4525734 {_100044 : Type'} (s : _100044 -> Prop) (n : nat) : ((@HAS_SIZE _100044 s n) = (term206 _100044 s n)) = ((@HAS_SIZE _100044 s n) = (term206 _100044 s n)).
Proof. exact (eq_refl ((@HAS_SIZE _100044 s n) = (term206 _100044 s n))). Qed.
Lemma lem4525735 {_100044 : Type'} (s : _100044 -> Prop) : (term207 _100044 s) = (term207 _100044 s).
Proof. exact (fun_ext (fun n : nat => @lem4525734 _100044 s n)). Qed.
Lemma lem4525736 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4525737 {_100044 : Type'} (s : _100044 -> Prop) : (term208 _100044 s) = (term208 _100044 s).
Proof. exact (MK_COMB (@lem4525736) (@lem4525735 _100044 s)). Qed.
Lemma lem4525738 {_100044 : Type'} : (term209 _100044) = (term209 _100044).
Proof. exact (fun_ext (fun s : _100044 -> Prop => @lem4525737 _100044 s)). Qed.
Lemma lem4525739 {_100044 : Type'} : (@all (_100044 -> Prop)) = (@all (_100044 -> Prop)).
Proof. exact (eq_refl (@all (_100044 -> Prop))). Qed.
Lemma lem4525740 {_100044 : Type'} : (term14 _100044) = (term14 _100044).
Proof. exact (MK_COMB (@lem4525739 _100044) (@lem4525738 _100044)). Qed.
Lemma lem4525741 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4525742 {_100044 : Type'} : (term59 _100044) = (term59 _100044).
Proof. exact (MK_COMB (@lem4525741) (@lem4525740 _100044)). Qed.
Lemma lem4525743 {_100044 _107639 _107642 A B : Type'} (_53776 : type656 _107639 _107642) (_53777 : type656 _107639 A) (_53778 : type656 _107642 A) (h1 : _53778 = (term76 _107642 A)) : (term321 _100044 _107639 _107642 A B _53776 _53777) = (term365 _100044 _107639 _107642 A B _53776 _53777 _53778).
Proof. exact (MK_COMB (@lem4525742 _100044) (@lem4525713 _107639 _107642 A B _53776 _53777 _53778 h1)). Qed.
Lemma lem4525778 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (d : _107639) (t : _107639 -> Prop) (s : _107642 -> Prop) : (term222 _107639 _107642 _53776 d t s) = (term222 _107639 _107642 _53776 d t s).
Proof. exact (eq_refl (term222 _107639 _107642 _53776 d t s)). Qed.
Lemma lem4525779 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (d : _107639) (s : _107642 -> Prop) : (term224 _107639 _107642 _53776 d s) = (term224 _107639 _107642 _53776 d s).
Proof. exact (fun_ext (fun t : _107639 -> Prop => @lem4525778 _107639 _107642 _53776 d t s)). Qed.
Lemma lem4525780 {_107639 : Type'} : (@all (_107639 -> Prop)) = (@all (_107639 -> Prop)).
Proof. exact (eq_refl (@all (_107639 -> Prop))). Qed.
Lemma lem4525781 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (d : _107639) (s : _107642 -> Prop) : (term226 _107639 _107642 _53776 d s) = (term226 _107639 _107642 _53776 d s).
Proof. exact (MK_COMB (@lem4525780 _107639) (@lem4525779 _107639 _107642 _53776 d s)). Qed.
Lemma lem4525782 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (d : _107639) : (term228 _107639 _107642 _53776 d) = (term228 _107639 _107642 _53776 d).
Proof. exact (fun_ext (fun s : _107642 -> Prop => @lem4525781 _107639 _107642 _53776 d s)). Qed.
Lemma lem4525783 {_107642 : Type'} : (@all (_107642 -> Prop)) = (@all (_107642 -> Prop)).
Proof. exact (eq_refl (@all (_107642 -> Prop))). Qed.
Lemma lem4525784 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (d : _107639) : (term229 _107639 _107642 _53776 d) = (term229 _107639 _107642 _53776 d).
Proof. exact (MK_COMB (@lem4525783 _107642) (@lem4525782 _107639 _107642 _53776 d)). Qed.
Lemma lem4525785 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem4525786 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (d : _107639) : (term230 _107639 _107642 _53776 d) = (term230 _107639 _107642 _53776 d).
Proof. exact (MK_COMB (@lem4525785) (@lem4525784 _107639 _107642 _53776 d)). Qed.
Lemma lem4525787 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4525788 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (d : _107639) : (term231 _107639 _107642 _53776 d) = (term231 _107639 _107642 _53776 d).
Proof. exact (MK_COMB (@lem4525787) (@lem4525786 _107639 _107642 _53776 d)). Qed.
Lemma lem4525789 {_100044 _107639 _107642 A B : Type'} (d : _107639) (_53776 : type656 _107639 _107642) (_53777 : type656 _107639 A) (_53778 : type656 _107642 A) (h1 : _53778 = (term76 _107642 A)) : (term322 _100044 _107639 _107642 A B d _53776 _53777) = (term366 _100044 _107639 _107642 A B d _53776 _53777 _53778).
Proof. exact (MK_COMB (@lem4525788 _107639 _107642 _53776 d) (@lem4525743 _100044 _107639 _107642 A B _53776 _53777 _53778 h1)). Qed.
Lemma lem4525790 {_100044 _107639 _107642 A B : Type'} (_53776 : type656 _107639 _107642) (_53777 : type656 _107639 A) (_53778 : type656 _107642 A) (h1 : _53778 = (term76 _107642 A)) : (term323 _100044 _107639 _107642 A B _53776 _53777) = (term367 _100044 _107639 _107642 A B _53776 _53777 _53778).
Proof. exact (fun_ext (fun d : _107639 => @lem4525789 _100044 _107639 _107642 A B d _53776 _53777 _53778 h1)). Qed.
Lemma lem4525791 {_107639 : Type'} : (@all _107639) = (@all _107639).
Proof. exact (eq_refl (@all _107639)). Qed.
Lemma lem4525792 {_100044 _107639 _107642 A B : Type'} (_53776 : type656 _107639 _107642) (_53777 : type656 _107639 A) (_53778 : type656 _107642 A) (h1 : _53778 = (term76 _107642 A)) : (term324 _100044 _107639 _107642 A B _53776 _53777) = (term368 _100044 _107639 _107642 A B _53776 _53777 _53778).
Proof. exact (MK_COMB (@lem4525791 _107639) (@lem4525790 _100044 _107639 _107642 A B _53776 _53777 _53778 h1)). Qed.
Lemma lem4525793 {_107639 _107642 : Type'} (f : _107642 -> _107639) : f = f.
Proof. exact (eq_refl f). Qed.
Lemma lem4525810 {_107639 _107642 : Type'} (s : _107642 -> Prop) (f : _107642 -> _107639) (x : _107642) (d : _107639) : (term140 _107639 _107642 s f x d) = (term140 _107639 _107642 s f x d).
Proof. exact (eq_refl (term140 _107639 _107642 s f x d)). Qed.
Lemma lem4525811 {_107639 _107642 : Type'} (s : _107642 -> Prop) (f : _107642 -> _107639) (d : _107639) : (term141 _107639 _107642 s f d) = (term141 _107639 _107642 s f d).
Proof. exact (fun_ext (fun x : _107642 => @lem4525810 _107639 _107642 s f x d)). Qed.
Lemma lem4525812 {_107642 : Type'} : (@all _107642) = (@all _107642).
Proof. exact (eq_refl (@all _107642)). Qed.
Lemma lem4525813 {_107639 _107642 : Type'} (s : _107642 -> Prop) (f : _107642 -> _107639) (d : _107639) : (term142 _107639 _107642 s f d) = (term142 _107639 _107642 s f d).
Proof. exact (MK_COMB (@lem4525812 _107642) (@lem4525811 _107639 _107642 s f d)). Qed.
Lemma lem4525828 {_107639 _107642 : Type'} (s : _107642 -> Prop) (f : _107642 -> _107639) (x : _107642) (t : _107639 -> Prop) : (term143 _107639 _107642 s f x t) = (term143 _107639 _107642 s f x t).
Proof. exact (eq_refl (term143 _107639 _107642 s f x t)). Qed.
Lemma lem4525829 {_107639 _107642 : Type'} (s : _107642 -> Prop) (f : _107642 -> _107639) (t : _107639 -> Prop) : (term144 _107639 _107642 s f t) = (term144 _107639 _107642 s f t).
Proof. exact (fun_ext (fun x : _107642 => @lem4525828 _107639 _107642 s f x t)). Qed.
Lemma lem4525830 {_107642 : Type'} : (@all _107642) = (@all _107642).
Proof. exact (eq_refl (@all _107642)). Qed.
Lemma lem4525831 {_107639 _107642 : Type'} (s : _107642 -> Prop) (f : _107642 -> _107639) (t : _107639 -> Prop) : (term145 _107639 _107642 s f t) = (term145 _107639 _107642 s f t).
Proof. exact (MK_COMB (@lem4525830 _107642) (@lem4525829 _107639 _107642 s f t)). Qed.
Lemma lem4525832 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4525833 {_107639 _107642 : Type'} (s : _107642 -> Prop) (f : _107642 -> _107639) (t : _107639 -> Prop) : (term146 _107639 _107642 s f t) = (term146 _107639 _107642 s f t).
Proof. exact (MK_COMB (@lem4525832) (@lem4525831 _107639 _107642 s f t)). Qed.
Lemma lem4525834 {_107639 _107642 : Type'} (t : _107639 -> Prop) (s : _107642 -> Prop) (f : _107642 -> _107639) (d : _107639) : (term147 _107639 _107642 t s f d) = (term147 _107639 _107642 t s f d).
Proof. exact (MK_COMB (@lem4525833 _107639 _107642 s f t) (@lem4525813 _107639 _107642 s f d)). Qed.
Lemma lem4525837 {_107639 _107642 : Type'} (GEN_PVAR_149 : _107642 -> _107639) : (@SETSPEC (_107642 -> _107639) GEN_PVAR_149) = (@SETSPEC (_107642 -> _107639) GEN_PVAR_149).
Proof. exact (eq_refl (@SETSPEC (_107642 -> _107639) GEN_PVAR_149)). Qed.
Lemma lem4525838 {_107639 _107642 : Type'} (GEN_PVAR_149 : _107642 -> _107639) (t : _107639 -> Prop) (s : _107642 -> Prop) (f : _107642 -> _107639) (d : _107639) : (term148 _107639 _107642 GEN_PVAR_149 t s f d) = (term148 _107639 _107642 GEN_PVAR_149 t s f d).
Proof. exact (MK_COMB (@lem4525837 _107639 _107642 GEN_PVAR_149) (@lem4525834 _107639 _107642 t s f d)). Qed.
Lemma lem4525839 {_107639 _107642 : Type'} (GEN_PVAR_149 : _107642 -> _107639) (t : _107639 -> Prop) (s : _107642 -> Prop) (d : _107639) (f : _107642 -> _107639) : (term149 _107639 _107642 GEN_PVAR_149 t s d f) = (term149 _107639 _107642 GEN_PVAR_149 t s d f).
Proof. exact (MK_COMB (@lem4525838 _107639 _107642 GEN_PVAR_149 t s f d) (@lem4525793 _107639 _107642 f)). Qed.
Lemma lem4525840 {_107639 _107642 : Type'} (GEN_PVAR_149 : _107642 -> _107639) (t : _107639 -> Prop) (s : _107642 -> Prop) (d : _107639) : (term150 _107639 _107642 GEN_PVAR_149 t s d) = (term150 _107639 _107642 GEN_PVAR_149 t s d).
Proof. exact (fun_ext (fun f : _107642 -> _107639 => @lem4525839 _107639 _107642 GEN_PVAR_149 t s d f)). Qed.
Lemma lem4525841 {_107639 _107642 : Type'} : (@ex (_107642 -> _107639)) = (@ex (_107642 -> _107639)).
Proof. exact (eq_refl (@ex (_107642 -> _107639))). Qed.
Lemma lem4525842 {_107639 _107642 : Type'} (GEN_PVAR_149 : _107642 -> _107639) (t : _107639 -> Prop) (s : _107642 -> Prop) (d : _107639) : (term151 _107639 _107642 GEN_PVAR_149 t s d) = (term151 _107639 _107642 GEN_PVAR_149 t s d).
Proof. exact (MK_COMB (@lem4525841 _107639 _107642) (@lem4525840 _107639 _107642 GEN_PVAR_149 t s d)). Qed.
Lemma lem4525853 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (t : _107639 -> Prop) (s : _107642 -> Prop) (d : _107639) (GEN_PVAR_149 : _107642 -> _107639) : (term293 _107639 _107642 _53776 t s d GEN_PVAR_149) = (term293 _107639 _107642 _53776 t s d GEN_PVAR_149).
Proof. exact (eq_refl (term293 _107639 _107642 _53776 t s d GEN_PVAR_149)). Qed.
Lemma lem4525854 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (GEN_PVAR_149 : _107642 -> _107639) (t : _107639 -> Prop) (s : _107642 -> Prop) (d : _107639) : ((_53776 t s d GEN_PVAR_149) = (term151 _107639 _107642 GEN_PVAR_149 t s d)) = ((_53776 t s d GEN_PVAR_149) = (term151 _107639 _107642 GEN_PVAR_149 t s d)).
Proof. exact (MK_COMB (@lem4525853 _107639 _107642 _53776 t s d GEN_PVAR_149) (@lem4525842 _107639 _107642 GEN_PVAR_149 t s d)). Qed.
Lemma lem4525855 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (t : _107639 -> Prop) (s : _107642 -> Prop) (d : _107639) : (term295 _107639 _107642 _53776 t s d) = (term295 _107639 _107642 _53776 t s d).
Proof. exact (fun_ext (fun GEN_PVAR_149 : _107642 -> _107639 => @lem4525854 _107639 _107642 _53776 GEN_PVAR_149 t s d)). Qed.
Lemma lem4525856 {_107639 _107642 : Type'} : (@all (_107642 -> _107639)) = (@all (_107642 -> _107639)).
Proof. exact (eq_refl (@all (_107642 -> _107639))). Qed.
Lemma lem4525857 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (t : _107639 -> Prop) (s : _107642 -> Prop) (d : _107639) : (term296 _107639 _107642 _53776 t s d) = (term296 _107639 _107642 _53776 t s d).
Proof. exact (MK_COMB (@lem4525856 _107639 _107642) (@lem4525855 _107639 _107642 _53776 t s d)). Qed.
Lemma lem4525858 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (t : _107639 -> Prop) (s : _107642 -> Prop) : (term297 _107639 _107642 _53776 t s) = (term297 _107639 _107642 _53776 t s).
Proof. exact (fun_ext (fun d : _107639 => @lem4525857 _107639 _107642 _53776 t s d)). Qed.
Lemma lem4525859 {_107639 : Type'} : (@all _107639) = (@all _107639).
Proof. exact (eq_refl (@all _107639)). Qed.
Lemma lem4525860 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (t : _107639 -> Prop) (s : _107642 -> Prop) : (term298 _107639 _107642 _53776 t s) = (term298 _107639 _107642 _53776 t s).
Proof. exact (MK_COMB (@lem4525859 _107639) (@lem4525858 _107639 _107642 _53776 t s)). Qed.
Lemma lem4525861 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (t : _107639 -> Prop) : (term299 _107639 _107642 _53776 t) = (term299 _107639 _107642 _53776 t).
Proof. exact (fun_ext (fun s : _107642 -> Prop => @lem4525860 _107639 _107642 _53776 t s)). Qed.
Lemma lem4525862 {_107642 : Type'} : (@all (_107642 -> Prop)) = (@all (_107642 -> Prop)).
Proof. exact (eq_refl (@all (_107642 -> Prop))). Qed.
Lemma lem4525863 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (t : _107639 -> Prop) : (term300 _107639 _107642 _53776 t) = (term300 _107639 _107642 _53776 t).
Proof. exact (MK_COMB (@lem4525862 _107642) (@lem4525861 _107639 _107642 _53776 t)). Qed.
Lemma lem4525864 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) : (term301 _107639 _107642 _53776) = (term301 _107639 _107642 _53776).
Proof. exact (fun_ext (fun t : _107639 -> Prop => @lem4525863 _107639 _107642 _53776 t)). Qed.
Lemma lem4525865 {_107639 : Type'} : (@all (_107639 -> Prop)) = (@all (_107639 -> Prop)).
Proof. exact (eq_refl (@all (_107639 -> Prop))). Qed.
Lemma lem4525866 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) : (term302 _107639 _107642 _53776) = (term302 _107639 _107642 _53776).
Proof. exact (MK_COMB (@lem4525865 _107639) (@lem4525864 _107639 _107642 _53776)). Qed.
Lemma lem4525867 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4525868 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) : (term303 _107639 _107642 _53776) = (term303 _107639 _107642 _53776).
Proof. exact (MK_COMB (@lem4525867) (@lem4525866 _107639 _107642 _53776)). Qed.
Lemma lem4525869 {_100044 _107639 _107642 A B : Type'} (_53776 : type656 _107639 _107642) (_53777 : type656 _107639 A) (_53778 : type656 _107642 A) (h1 : _53778 = (term76 _107642 A)) : (term325 _100044 _107639 _107642 A B _53776 _53777) = (term369 _100044 _107639 _107642 A B _53776 _53777 _53778).
Proof. exact (MK_COMB (@lem4525868 _107639 _107642 _53776) (@lem4525792 _100044 _107639 _107642 A B _53776 _53777 _53778 h1)). Qed.
Lemma lem4525870 {_100044 _107639 _107642 A B : Type'} (_53777 : type656 _107639 A) (_53778 : type656 _107642 A) (h1 : _53778 = (term76 _107642 A)) : (term326 _100044 _107639 _107642 A B _53777) = (term370 _100044 _107639 _107642 A B _53777 _53778).
Proof. exact (fun_ext (fun _53776 : type656 _107639 _107642 => @lem4525869 _100044 _107639 _107642 A B _53776 _53777 _53778 h1)). Qed.
Lemma lem4525871 {_107639 _107642 : Type'} : (@all ((_107639 -> Prop) -> (_107642 -> Prop) -> _107639 -> (_107642 -> _107639) -> Prop)) = (@all ((_107639 -> Prop) -> (_107642 -> Prop) -> _107639 -> (_107642 -> _107639) -> Prop)).
Proof. exact (eq_refl (@all ((_107639 -> Prop) -> (_107642 -> Prop) -> _107639 -> (_107642 -> _107639) -> Prop))). Qed.
Lemma lem4525872 {_100044 _107639 _107642 A B : Type'} (_53777 : type656 _107639 A) (_53778 : type656 _107642 A) (h1 : _53778 = (term76 _107642 A)) : (term327 _100044 _107639 _107642 A B _53777) = (term371 _100044 _107639 _107642 A B _53777 _53778).
Proof. exact (MK_COMB (@lem4525871 _107639 _107642) (@lem4525870 _100044 _107639 _107642 A B _53777 _53778 h1)). Qed.
Lemma lem4525873 {_107639 A : Type'} (f : A -> _107639) : f = f.
Proof. exact (eq_refl f). Qed.
Lemma lem4525890 {_107639 A : Type'} (s : A -> Prop) (f : A -> _107639) (x : A) (d : _107639) : (term140 _107639 A s f x d) = (term140 _107639 A s f x d).
Proof. exact (eq_refl (term140 _107639 A s f x d)). Qed.
Lemma lem4525891 {_107639 A : Type'} (s : A -> Prop) (f : A -> _107639) (d : _107639) : (term141 _107639 A s f d) = (term141 _107639 A s f d).
Proof. exact (fun_ext (fun x : A => @lem4525890 _107639 A s f x d)). Qed.
Lemma lem4525892 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem4525893 {_107639 A : Type'} (s : A -> Prop) (f : A -> _107639) (d : _107639) : (term142 _107639 A s f d) = (term142 _107639 A s f d).
Proof. exact (MK_COMB (@lem4525892 A) (@lem4525891 _107639 A s f d)). Qed.
Lemma lem4525908 {_107639 A : Type'} (s : A -> Prop) (f : A -> _107639) (x : A) (t : _107639 -> Prop) : (term143 _107639 A s f x t) = (term143 _107639 A s f x t).
Proof. exact (eq_refl (term143 _107639 A s f x t)). Qed.
Lemma lem4525909 {_107639 A : Type'} (s : A -> Prop) (f : A -> _107639) (t : _107639 -> Prop) : (term144 _107639 A s f t) = (term144 _107639 A s f t).
Proof. exact (fun_ext (fun x : A => @lem4525908 _107639 A s f x t)). Qed.
Lemma lem4525910 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem4525911 {_107639 A : Type'} (s : A -> Prop) (f : A -> _107639) (t : _107639 -> Prop) : (term145 _107639 A s f t) = (term145 _107639 A s f t).
Proof. exact (MK_COMB (@lem4525910 A) (@lem4525909 _107639 A s f t)). Qed.
Lemma lem4525912 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4525913 {_107639 A : Type'} (s : A -> Prop) (f : A -> _107639) (t : _107639 -> Prop) : (term146 _107639 A s f t) = (term146 _107639 A s f t).
Proof. exact (MK_COMB (@lem4525912) (@lem4525911 _107639 A s f t)). Qed.
Lemma lem4525914 {_107639 A : Type'} (t : _107639 -> Prop) (s : A -> Prop) (f : A -> _107639) (d : _107639) : (term147 _107639 A t s f d) = (term147 _107639 A t s f d).
Proof. exact (MK_COMB (@lem4525913 _107639 A s f t) (@lem4525893 _107639 A s f d)). Qed.
Lemma lem4525917 {_107639 A : Type'} (GEN_PVAR_148 : A -> _107639) : (@SETSPEC (A -> _107639) GEN_PVAR_148) = (@SETSPEC (A -> _107639) GEN_PVAR_148).
Proof. exact (eq_refl (@SETSPEC (A -> _107639) GEN_PVAR_148)). Qed.
Lemma lem4525918 {_107639 A : Type'} (GEN_PVAR_148 : A -> _107639) (t : _107639 -> Prop) (s : A -> Prop) (f : A -> _107639) (d : _107639) : (term148 _107639 A GEN_PVAR_148 t s f d) = (term148 _107639 A GEN_PVAR_148 t s f d).
Proof. exact (MK_COMB (@lem4525917 _107639 A GEN_PVAR_148) (@lem4525914 _107639 A t s f d)). Qed.
Lemma lem4525919 {_107639 A : Type'} (GEN_PVAR_148 : A -> _107639) (t : _107639 -> Prop) (s : A -> Prop) (d : _107639) (f : A -> _107639) : (term149 _107639 A GEN_PVAR_148 t s d f) = (term149 _107639 A GEN_PVAR_148 t s d f).
Proof. exact (MK_COMB (@lem4525918 _107639 A GEN_PVAR_148 t s f d) (@lem4525873 _107639 A f)). Qed.
Lemma lem4525920 {_107639 A : Type'} (GEN_PVAR_148 : A -> _107639) (t : _107639 -> Prop) (s : A -> Prop) (d : _107639) : (term150 _107639 A GEN_PVAR_148 t s d) = (term150 _107639 A GEN_PVAR_148 t s d).
Proof. exact (fun_ext (fun f : A -> _107639 => @lem4525919 _107639 A GEN_PVAR_148 t s d f)). Qed.
Lemma lem4525921 {_107639 A : Type'} : (@ex (A -> _107639)) = (@ex (A -> _107639)).
Proof. exact (eq_refl (@ex (A -> _107639))). Qed.
Lemma lem4525922 {_107639 A : Type'} (GEN_PVAR_148 : A -> _107639) (t : _107639 -> Prop) (s : A -> Prop) (d : _107639) : (term151 _107639 A GEN_PVAR_148 t s d) = (term151 _107639 A GEN_PVAR_148 t s d).
Proof. exact (MK_COMB (@lem4525921 _107639 A) (@lem4525920 _107639 A GEN_PVAR_148 t s d)). Qed.
Lemma lem4525933 {_107639 A : Type'} (_53777 : type656 _107639 A) (t : _107639 -> Prop) (s : A -> Prop) (d : _107639) (GEN_PVAR_148 : A -> _107639) : (term293 _107639 A _53777 t s d GEN_PVAR_148) = (term293 _107639 A _53777 t s d GEN_PVAR_148).
Proof. exact (eq_refl (term293 _107639 A _53777 t s d GEN_PVAR_148)). Qed.
Lemma lem4525934 {_107639 A : Type'} (_53777 : type656 _107639 A) (GEN_PVAR_148 : A -> _107639) (t : _107639 -> Prop) (s : A -> Prop) (d : _107639) : ((_53777 t s d GEN_PVAR_148) = (term151 _107639 A GEN_PVAR_148 t s d)) = ((_53777 t s d GEN_PVAR_148) = (term151 _107639 A GEN_PVAR_148 t s d)).
Proof. exact (MK_COMB (@lem4525933 _107639 A _53777 t s d GEN_PVAR_148) (@lem4525922 _107639 A GEN_PVAR_148 t s d)). Qed.
Lemma lem4525935 {_107639 A : Type'} (_53777 : type656 _107639 A) (t : _107639 -> Prop) (s : A -> Prop) (d : _107639) : (term295 _107639 A _53777 t s d) = (term295 _107639 A _53777 t s d).
Proof. exact (fun_ext (fun GEN_PVAR_148 : A -> _107639 => @lem4525934 _107639 A _53777 GEN_PVAR_148 t s d)). Qed.
Lemma lem4525936 {_107639 A : Type'} : (@all (A -> _107639)) = (@all (A -> _107639)).
Proof. exact (eq_refl (@all (A -> _107639))). Qed.
Lemma lem4525937 {_107639 A : Type'} (_53777 : type656 _107639 A) (t : _107639 -> Prop) (s : A -> Prop) (d : _107639) : (term296 _107639 A _53777 t s d) = (term296 _107639 A _53777 t s d).
Proof. exact (MK_COMB (@lem4525936 _107639 A) (@lem4525935 _107639 A _53777 t s d)). Qed.
Lemma lem4525938 {_107639 A : Type'} (_53777 : type656 _107639 A) (t : _107639 -> Prop) (s : A -> Prop) : (term297 _107639 A _53777 t s) = (term297 _107639 A _53777 t s).
Proof. exact (fun_ext (fun d : _107639 => @lem4525937 _107639 A _53777 t s d)). Qed.
Lemma lem4525939 {_107639 : Type'} : (@all _107639) = (@all _107639).
Proof. exact (eq_refl (@all _107639)). Qed.
Lemma lem4525940 {_107639 A : Type'} (_53777 : type656 _107639 A) (t : _107639 -> Prop) (s : A -> Prop) : (term298 _107639 A _53777 t s) = (term298 _107639 A _53777 t s).
Proof. exact (MK_COMB (@lem4525939 _107639) (@lem4525938 _107639 A _53777 t s)). Qed.
Lemma lem4525941 {_107639 A : Type'} (_53777 : type656 _107639 A) (t : _107639 -> Prop) : (term299 _107639 A _53777 t) = (term299 _107639 A _53777 t).
Proof. exact (fun_ext (fun s : A -> Prop => @lem4525940 _107639 A _53777 t s)). Qed.
Lemma lem4525942 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem4525943 {_107639 A : Type'} (_53777 : type656 _107639 A) (t : _107639 -> Prop) : (term300 _107639 A _53777 t) = (term300 _107639 A _53777 t).
Proof. exact (MK_COMB (@lem4525942 A) (@lem4525941 _107639 A _53777 t)). Qed.
Lemma lem4525944 {_107639 A : Type'} (_53777 : type656 _107639 A) : (term301 _107639 A _53777) = (term301 _107639 A _53777).
Proof. exact (fun_ext (fun t : _107639 -> Prop => @lem4525943 _107639 A _53777 t)). Qed.
Lemma lem4525945 {_107639 : Type'} : (@all (_107639 -> Prop)) = (@all (_107639 -> Prop)).
Proof. exact (eq_refl (@all (_107639 -> Prop))). Qed.
Lemma lem4525946 {_107639 A : Type'} (_53777 : type656 _107639 A) : (term302 _107639 A _53777) = (term302 _107639 A _53777).
Proof. exact (MK_COMB (@lem4525945 _107639) (@lem4525944 _107639 A _53777)). Qed.
Lemma lem4525947 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4525948 {_107639 A : Type'} (_53777 : type656 _107639 A) : (term303 _107639 A _53777) = (term303 _107639 A _53777).
Proof. exact (MK_COMB (@lem4525947) (@lem4525946 _107639 A _53777)). Qed.
Lemma lem4525949 {_100044 _107639 _107642 A B : Type'} (_53777 : type656 _107639 A) (_53778 : type656 _107642 A) (h1 : _53778 = (term76 _107642 A)) : (term347 _100044 _107639 _107642 A B _53777) = (term372 _100044 _107639 _107642 A B _53777 _53778).
Proof. exact (MK_COMB (@lem4525948 _107639 A _53777) (@lem4525872 _100044 _107639 _107642 A B _53777 _53778 h1)). Qed.
Lemma lem4525950 {_100044 _107639 _107642 A B : Type'} (_53778 : type656 _107642 A) (h1 : _53778 = (term76 _107642 A)) : (term348 _100044 _107639 _107642 A B) = (term373 _100044 _107639 _107642 A B _53778).
Proof. exact (fun_ext (fun _53777 : type656 _107639 A => @lem4525949 _100044 _107639 _107642 A B _53777 _53778 h1)). Qed.
Lemma lem4525951 {_107639 A : Type'} : (@all ((_107639 -> Prop) -> (A -> Prop) -> _107639 -> (A -> _107639) -> Prop)) = (@all ((_107639 -> Prop) -> (A -> Prop) -> _107639 -> (A -> _107639) -> Prop)).
Proof. exact (eq_refl (@all ((_107639 -> Prop) -> (A -> Prop) -> _107639 -> (A -> _107639) -> Prop))). Qed.
Lemma lem4525952 {_100044 _107639 _107642 A B : Type'} (_53778 : type656 _107642 A) (h1 : _53778 = (term76 _107642 A)) : (term349 _100044 _107639 _107642 A B) = (term374 _100044 _107639 _107642 A B _53778).
Proof. exact (MK_COMB (@lem4525951 _107639 A) (@lem4525950 _100044 _107639 _107642 A B _53778 h1)). Qed.
Lemma lem4525953 {_100044 _107639 _107642 A B : Type'} (_53778 : type656 _107642 A) : term375 _100044 _107639 _107642 A B _53778.
Proof. exact (fun h0 : _53778 = (term76 _107642 A) => @lem4525952 _100044 _107639 _107642 A B _53778 h0). Qed.
Lemma lem4525954 {_100044 _107639 _107642 A B : Type'} : term376 _100044 _107639 _107642 A B.
Proof. exact (fun _53778 : type656 _107642 A => @lem4525953 _100044 _107639 _107642 A B _53778). Qed.
Lemma lem4525956 {_3603 : Type'} (P : Prop) (c : _3603) (Q : _3603 -> Prop) : term237 _3603 P c Q.
Proof. exact (EQ_MP (@lem20230 _3603 P c Q) (@lem0)). Qed.
Lemma lem4525957 {_107642 A : Type'} (P : Prop) (c : type656 _107642 A) (Q : type147 _107642 A) : term238 _107642 A P c Q.
Proof. exact (@lem4525956 (type656 _107642 A) P c Q). Qed.
Lemma lem4525958 {_100044 _107639 _107642 A B : Type'} : term377 _100044 _107639 _107642 A B.
Proof. exact (@lem4525957 _107642 A (term349 _100044 _107639 _107642 A B) (term76 _107642 A) (term378 _100044 _107639 _107642 A B)). Qed.
Lemma lem4525959 {_100044 _107639 _107642 A B : Type'} (_53778 : type656 _107642 A) : (term379 _100044 _107639 _107642 A B _53778) = (term374 _100044 _107639 _107642 A B _53778).
Proof. exact (eq_refl (term379 _100044 _107639 _107642 A B _53778)). Qed.
Lemma lem4525960 {_100044 _107639 _107642 A B : Type'} : (term380 _100044 _107639 _107642 A B) = (term380 _100044 _107639 _107642 A B).
Proof. exact (eq_refl (term380 _100044 _107639 _107642 A B)). Qed.
Lemma lem4525961 {_100044 _107639 _107642 A B : Type'} (_53778 : type656 _107642 A) : ((term349 _100044 _107639 _107642 A B) = (term379 _100044 _107639 _107642 A B _53778)) = ((term349 _100044 _107639 _107642 A B) = (term374 _100044 _107639 _107642 A B _53778)).
Proof. exact (MK_COMB (@lem4525960 _100044 _107639 _107642 A B) (@lem4525959 _100044 _107639 _107642 A B _53778)). Qed.
Lemma lem4525962 {_107642 A : Type'} (_53778 : type656 _107642 A) : (term243 _107642 A _53778) = (term243 _107642 A _53778).
Proof. exact (eq_refl (term243 _107642 A _53778)). Qed.
Lemma lem4525963 {_100044 _107639 _107642 A B : Type'} (_53778 : type656 _107642 A) : (term381 _100044 _107639 _107642 A B _53778) = (term375 _100044 _107639 _107642 A B _53778).
Proof. exact (MK_COMB (@lem4525962 _107642 A _53778) (@lem4525961 _100044 _107639 _107642 A B _53778)). Qed.
Lemma lem4525964 {_100044 _107639 _107642 A B : Type'} : (term382 _100044 _107639 _107642 A B) = (term383 _100044 _107639 _107642 A B).
Proof. exact (fun_ext (fun _53778 : type656 _107642 A => @lem4525963 _100044 _107639 _107642 A B _53778)). Qed.
Lemma lem4525965 {_107642 A : Type'} : (@all ((_107642 -> Prop) -> (A -> Prop) -> _107642 -> (A -> _107642) -> Prop)) = (@all ((_107642 -> Prop) -> (A -> Prop) -> _107642 -> (A -> _107642) -> Prop)).
Proof. exact (eq_refl (@all ((_107642 -> Prop) -> (A -> Prop) -> _107642 -> (A -> _107642) -> Prop))). Qed.
Lemma lem4525966 {_100044 _107639 _107642 A B : Type'} : (term384 _100044 _107639 _107642 A B) = (term376 _100044 _107639 _107642 A B).
Proof. exact (MK_COMB (@lem4525965 _107642 A) (@lem4525964 _100044 _107639 _107642 A B)). Qed.
Lemma lem4525967 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4525968 {_100044 _107639 _107642 A B : Type'} : (term385 _100044 _107639 _107642 A B) = (term386 _100044 _107639 _107642 A B).
Proof. exact (MK_COMB (@lem4525967) (@lem4525966 _100044 _107639 _107642 A B)). Qed.
Lemma lem4525969 {_100044 _107639 _107642 A B : Type'} (_53778 : type656 _107642 A) : (term379 _100044 _107639 _107642 A B _53778) = (term374 _100044 _107639 _107642 A B _53778).
Proof. exact (eq_refl (term379 _100044 _107639 _107642 A B _53778)). Qed.
Lemma lem4525970 {_107642 A : Type'} (_53778 : type656 _107642 A) : (term243 _107642 A _53778) = (term243 _107642 A _53778).
Proof. exact (eq_refl (term243 _107642 A _53778)). Qed.
Lemma lem4525971 {_100044 _107639 _107642 A B : Type'} (_53778 : type656 _107642 A) : (term387 _100044 _107639 _107642 A B _53778) = (term388 _100044 _107639 _107642 A B _53778).
Proof. exact (MK_COMB (@lem4525970 _107642 A _53778) (@lem4525969 _100044 _107639 _107642 A B _53778)). Qed.
Lemma lem4525972 {_100044 _107639 _107642 A B : Type'} : (term389 _100044 _107639 _107642 A B) = (term390 _100044 _107639 _107642 A B).
Proof. exact (fun_ext (fun _53778 : type656 _107642 A => @lem4525971 _100044 _107639 _107642 A B _53778)). Qed.
Lemma lem4525973 {_107642 A : Type'} : (@all ((_107642 -> Prop) -> (A -> Prop) -> _107642 -> (A -> _107642) -> Prop)) = (@all ((_107642 -> Prop) -> (A -> Prop) -> _107642 -> (A -> _107642) -> Prop)).
Proof. exact (eq_refl (@all ((_107642 -> Prop) -> (A -> Prop) -> _107642 -> (A -> _107642) -> Prop))). Qed.
Lemma lem4525974 {_100044 _107639 _107642 A B : Type'} : (term391 _100044 _107639 _107642 A B) = (term392 _100044 _107639 _107642 A B).
Proof. exact (MK_COMB (@lem4525973 _107642 A) (@lem4525972 _100044 _107639 _107642 A B)). Qed.
Lemma lem4525975 {_100044 _107639 _107642 A B : Type'} : (term380 _100044 _107639 _107642 A B) = (term380 _100044 _107639 _107642 A B).
Proof. exact (eq_refl (term380 _100044 _107639 _107642 A B)). Qed.
Lemma lem4525976 {_100044 _107639 _107642 A B : Type'} : ((term349 _100044 _107639 _107642 A B) = (term391 _100044 _107639 _107642 A B)) = ((term349 _100044 _107639 _107642 A B) = (term392 _100044 _107639 _107642 A B)).
Proof. exact (MK_COMB (@lem4525975 _100044 _107639 _107642 A B) (@lem4525974 _100044 _107639 _107642 A B)). Qed.
Lemma lem4525977 {_100044 _107639 _107642 A B : Type'} : (term377 _100044 _107639 _107642 A B) = (term393 _100044 _107639 _107642 A B).
Proof. exact (MK_COMB (@lem4525968 _100044 _107639 _107642 A B) (@lem4525976 _100044 _107639 _107642 A B)). Qed.
Lemma lem4525978 {_100044 _107639 _107642 A B : Type'} : term393 _100044 _107639 _107642 A B.
Proof. exact (EQ_MP (@lem4525977 _100044 _107639 _107642 A B) (@lem4525958 _100044 _107639 _107642 A B)). Qed.
Lemma lem4525979 {_100044 _107639 _107642 A B : Type'} : (term349 _100044 _107639 _107642 A B) = (term392 _100044 _107639 _107642 A B).
Proof. exact (@lem4525978 _100044 _107639 _107642 A B (@lem4525954 _100044 _107639 _107642 A B)). Qed.
Lemma lem4525981 {_3571 _3575 : Type'} (s : _3575 -> _3571) (t : _3575 -> _3571) : (s = (term257 _3571 _3575 t)) = (term258 _3571 _3575 s t).
Proof. exact (EQ_MP (@lem19792 _3571 _3575 s t) (@lem0)). Qed.
Lemma lem4525982 {_107642 A : Type'} (s : type656 _107642 A) (t : type656 _107642 A) : (s = (term259 _107642 A t)) = (term260 _107642 A s t).
Proof. exact (@lem4525981 (type859 _107642 A) (_107642 -> Prop) s t). Qed.
Lemma lem4525983 {_107642 A : Type'} (_53778 : type656 _107642 A) : (_53778 = (term261 _107642 A)) = (term262 _107642 A _53778).
Proof. exact (@lem4525982 _107642 A _53778 (term76 _107642 A)). Qed.
Lemma lem4525984 {_107642 A : Type'} (t : _107642 -> Prop) : (term77 _107642 A t) = (term78 _107642 A t).
Proof. exact (eq_refl (term77 _107642 A t)). Qed.
Lemma lem4525985 {_107642 A : Type'} : (term261 _107642 A) = (term76 _107642 A).
Proof. exact (fun_ext (fun t : _107642 -> Prop => @lem4525984 _107642 A t)). Qed.
Lemma lem4525986 {_107642 A : Type'} (_53778 : type656 _107642 A) : (@eq ((_107642 -> Prop) -> (A -> Prop) -> _107642 -> (A -> _107642) -> Prop) _53778) = (@eq ((_107642 -> Prop) -> (A -> Prop) -> _107642 -> (A -> _107642) -> Prop) _53778).
Proof. exact (eq_refl (@eq ((_107642 -> Prop) -> (A -> Prop) -> _107642 -> (A -> _107642) -> Prop) _53778)). Qed.
Lemma lem4525987 {_107642 A : Type'} (_53778 : type656 _107642 A) : (_53778 = (term261 _107642 A)) = (_53778 = (term76 _107642 A)).
Proof. exact (MK_COMB (@lem4525986 _107642 A _53778) (@lem4525985 _107642 A)). Qed.
Lemma lem4525988 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4525989 {_107642 A : Type'} (_53778 : type656 _107642 A) : (term263 _107642 A _53778) = (term264 _107642 A _53778).
Proof. exact (MK_COMB (@lem4525988) (@lem4525987 _107642 A _53778)). Qed.
Lemma lem4525990 {_107642 A : Type'} (t : _107642 -> Prop) : (term77 _107642 A t) = (term78 _107642 A t).
Proof. exact (eq_refl (term77 _107642 A t)). Qed.
Lemma lem4525991 {_107642 A : Type'} (_53778 : type656 _107642 A) (t : _107642 -> Prop) : (term79 _107642 A _53778 t) = (term79 _107642 A _53778 t).
Proof. exact (eq_refl (term79 _107642 A _53778 t)). Qed.
Lemma lem4525992 {_107642 A : Type'} (_53778 : type656 _107642 A) (t : _107642 -> Prop) : ((_53778 t) = (term77 _107642 A t)) = ((_53778 t) = (term78 _107642 A t)).
Proof. exact (MK_COMB (@lem4525991 _107642 A _53778 t) (@lem4525990 _107642 A t)). Qed.
Lemma lem4525993 {_107642 A : Type'} (_53778 : type656 _107642 A) : (term265 _107642 A _53778) = (term266 _107642 A _53778).
Proof. exact (fun_ext (fun t : _107642 -> Prop => @lem4525992 _107642 A _53778 t)). Qed.
Lemma lem4525994 {_107642 : Type'} : (@all (_107642 -> Prop)) = (@all (_107642 -> Prop)).
Proof. exact (eq_refl (@all (_107642 -> Prop))). Qed.
Lemma lem4525995 {_107642 A : Type'} (_53778 : type656 _107642 A) : (term262 _107642 A _53778) = (term267 _107642 A _53778).
Proof. exact (MK_COMB (@lem4525994 _107642) (@lem4525993 _107642 A _53778)). Qed.
Lemma lem4525996 {_107642 A : Type'} (_53778 : type656 _107642 A) : ((_53778 = (term261 _107642 A)) = (term262 _107642 A _53778)) = ((_53778 = (term76 _107642 A)) = (term267 _107642 A _53778)).
Proof. exact (MK_COMB (@lem4525989 _107642 A _53778) (@lem4525995 _107642 A _53778)). Qed.
Lemma lem4525997 {_107642 A : Type'} (_53778 : type656 _107642 A) : (_53778 = (term76 _107642 A)) = (term267 _107642 A _53778).
Proof. exact (EQ_MP (@lem4525996 _107642 A _53778) (@lem4525983 _107642 A _53778)). Qed.
Lemma lem4525999 {_3571 _3575 : Type'} (s : _3575 -> _3571) (t : _3575 -> _3571) : (s = (term257 _3571 _3575 t)) = (term258 _3571 _3575 s t).
Proof. exact (EQ_MP (@lem19792 _3571 _3575 s t) (@lem0)). Qed.
Lemma lem4526000 {_107642 A : Type'} (s : type859 _107642 A) (t : type859 _107642 A) : (s = (term268 _107642 A t)) = (term269 _107642 A s t).
Proof. exact (@lem4525999 (type1372 _107642 A) (A -> Prop) s t). Qed.
Lemma lem4526001 {_107642 A : Type'} (_53778 : type656 _107642 A) (t : _107642 -> Prop) : ((_53778 t) = (term270 _107642 A t)) = (term271 _107642 A _53778 t).
Proof. exact (@lem4526000 _107642 A (_53778 t) (term78 _107642 A t)). Qed.
Lemma lem4526002 {_107642 A : Type'} (t : _107642 -> Prop) (s : A -> Prop) : (term80 _107642 A t s) = (term81 _107642 A t s).
Proof. exact (eq_refl (term80 _107642 A t s)). Qed.
Lemma lem4526003 {_107642 A : Type'} (t : _107642 -> Prop) : (term270 _107642 A t) = (term78 _107642 A t).
Proof. exact (fun_ext (fun s : A -> Prop => @lem4526002 _107642 A t s)). Qed.
Lemma lem4526004 {_107642 A : Type'} (_53778 : type656 _107642 A) (t : _107642 -> Prop) : (term79 _107642 A _53778 t) = (term79 _107642 A _53778 t).
Proof. exact (eq_refl (term79 _107642 A _53778 t)). Qed.
Lemma lem4526005 {_107642 A : Type'} (_53778 : type656 _107642 A) (t : _107642 -> Prop) : ((_53778 t) = (term270 _107642 A t)) = ((_53778 t) = (term78 _107642 A t)).
Proof. exact (MK_COMB (@lem4526004 _107642 A _53778 t) (@lem4526003 _107642 A t)). Qed.
Lemma lem4526006 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4526007 {_107642 A : Type'} (_53778 : type656 _107642 A) (t : _107642 -> Prop) : (term272 _107642 A _53778 t) = (term273 _107642 A _53778 t).
Proof. exact (MK_COMB (@lem4526006) (@lem4526005 _107642 A _53778 t)). Qed.
Lemma lem4526008 {_107642 A : Type'} (t : _107642 -> Prop) (s : A -> Prop) : (term80 _107642 A t s) = (term81 _107642 A t s).
Proof. exact (eq_refl (term80 _107642 A t s)). Qed.
Lemma lem4526009 {_107642 A : Type'} (_53778 : type656 _107642 A) (t : _107642 -> Prop) (s : A -> Prop) : (term82 _107642 A _53778 t s) = (term82 _107642 A _53778 t s).
Proof. exact (eq_refl (term82 _107642 A _53778 t s)). Qed.
Lemma lem4526010 {_107642 A : Type'} (_53778 : type656 _107642 A) (t : _107642 -> Prop) (s : A -> Prop) : ((_53778 t s) = (term80 _107642 A t s)) = ((_53778 t s) = (term81 _107642 A t s)).
Proof. exact (MK_COMB (@lem4526009 _107642 A _53778 t s) (@lem4526008 _107642 A t s)). Qed.
Lemma lem4526011 {_107642 A : Type'} (_53778 : type656 _107642 A) (t : _107642 -> Prop) : (term274 _107642 A _53778 t) = (term275 _107642 A _53778 t).
Proof. exact (fun_ext (fun s : A -> Prop => @lem4526010 _107642 A _53778 t s)). Qed.
Lemma lem4526012 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem4526013 {_107642 A : Type'} (_53778 : type656 _107642 A) (t : _107642 -> Prop) : (term271 _107642 A _53778 t) = (term276 _107642 A _53778 t).
Proof. exact (MK_COMB (@lem4526012 A) (@lem4526011 _107642 A _53778 t)). Qed.
Lemma lem4526014 {_107642 A : Type'} (_53778 : type656 _107642 A) (t : _107642 -> Prop) : (((_53778 t) = (term270 _107642 A t)) = (term271 _107642 A _53778 t)) = (((_53778 t) = (term78 _107642 A t)) = (term276 _107642 A _53778 t)).
Proof. exact (MK_COMB (@lem4526007 _107642 A _53778 t) (@lem4526013 _107642 A _53778 t)). Qed.
Lemma lem4526015 {_107642 A : Type'} (_53778 : type656 _107642 A) (t : _107642 -> Prop) : ((_53778 t) = (term78 _107642 A t)) = (term276 _107642 A _53778 t).
Proof. exact (EQ_MP (@lem4526014 _107642 A _53778 t) (@lem4526001 _107642 A _53778 t)). Qed.
Lemma lem4526017 {_3571 _3575 : Type'} (s : _3575 -> _3571) (t : _3575 -> _3571) : (s = (term257 _3571 _3575 t)) = (term258 _3571 _3575 s t).
Proof. exact (EQ_MP (@lem19792 _3571 _3575 s t) (@lem0)). Qed.
Lemma lem4526018 {_107642 A : Type'} (s : type1372 _107642 A) (t : type1372 _107642 A) : (s = (term277 _107642 A t)) = (term278 _107642 A s t).
Proof. exact (@lem4526017 (type805 _107642 A) _107642 s t). Qed.
Lemma lem4526019 {_107642 A : Type'} (_53778 : type656 _107642 A) (t : _107642 -> Prop) (s : A -> Prop) : ((_53778 t s) = (term279 _107642 A t s)) = (term280 _107642 A _53778 t s).
Proof. exact (@lem4526018 _107642 A (_53778 t s) (term81 _107642 A t s)). Qed.
Lemma lem4526020 {_107642 A : Type'} (t : _107642 -> Prop) (s : A -> Prop) (d : _107642) : (term83 _107642 A t s d) = (term84 _107642 A t s d).
Proof. exact (eq_refl (term83 _107642 A t s d)). Qed.
Lemma lem4526021 {_107642 A : Type'} (t : _107642 -> Prop) (s : A -> Prop) : (term279 _107642 A t s) = (term81 _107642 A t s).
Proof. exact (fun_ext (fun d : _107642 => @lem4526020 _107642 A t s d)). Qed.
Lemma lem4526022 {_107642 A : Type'} (_53778 : type656 _107642 A) (t : _107642 -> Prop) (s : A -> Prop) : (term82 _107642 A _53778 t s) = (term82 _107642 A _53778 t s).
Proof. exact (eq_refl (term82 _107642 A _53778 t s)). Qed.
Lemma lem4526023 {_107642 A : Type'} (_53778 : type656 _107642 A) (t : _107642 -> Prop) (s : A -> Prop) : ((_53778 t s) = (term279 _107642 A t s)) = ((_53778 t s) = (term81 _107642 A t s)).
Proof. exact (MK_COMB (@lem4526022 _107642 A _53778 t s) (@lem4526021 _107642 A t s)). Qed.
Lemma lem4526024 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4526025 {_107642 A : Type'} (_53778 : type656 _107642 A) (t : _107642 -> Prop) (s : A -> Prop) : (term281 _107642 A _53778 t s) = (term282 _107642 A _53778 t s).
Proof. exact (MK_COMB (@lem4526024) (@lem4526023 _107642 A _53778 t s)). Qed.
Lemma lem4526026 {_107642 A : Type'} (t : _107642 -> Prop) (s : A -> Prop) (d : _107642) : (term83 _107642 A t s d) = (term84 _107642 A t s d).
Proof. exact (eq_refl (term83 _107642 A t s d)). Qed.
Lemma lem4526027 {_107642 A : Type'} (_53778 : type656 _107642 A) (t : _107642 -> Prop) (s : A -> Prop) (d : _107642) : (term85 _107642 A _53778 t s d) = (term85 _107642 A _53778 t s d).
Proof. exact (eq_refl (term85 _107642 A _53778 t s d)). Qed.
Lemma lem4526028 {_107642 A : Type'} (_53778 : type656 _107642 A) (t : _107642 -> Prop) (s : A -> Prop) (d : _107642) : ((_53778 t s d) = (term83 _107642 A t s d)) = ((_53778 t s d) = (term84 _107642 A t s d)).
Proof. exact (MK_COMB (@lem4526027 _107642 A _53778 t s d) (@lem4526026 _107642 A t s d)). Qed.
Lemma lem4526029 {_107642 A : Type'} (_53778 : type656 _107642 A) (t : _107642 -> Prop) (s : A -> Prop) : (term283 _107642 A _53778 t s) = (term284 _107642 A _53778 t s).
Proof. exact (fun_ext (fun d : _107642 => @lem4526028 _107642 A _53778 t s d)). Qed.
Lemma lem4526030 {_107642 : Type'} : (@all _107642) = (@all _107642).
Proof. exact (eq_refl (@all _107642)). Qed.
Lemma lem4526031 {_107642 A : Type'} (_53778 : type656 _107642 A) (t : _107642 -> Prop) (s : A -> Prop) : (term280 _107642 A _53778 t s) = (term285 _107642 A _53778 t s).
Proof. exact (MK_COMB (@lem4526030 _107642) (@lem4526029 _107642 A _53778 t s)). Qed.
Lemma lem4526032 {_107642 A : Type'} (_53778 : type656 _107642 A) (t : _107642 -> Prop) (s : A -> Prop) : (((_53778 t s) = (term279 _107642 A t s)) = (term280 _107642 A _53778 t s)) = (((_53778 t s) = (term81 _107642 A t s)) = (term285 _107642 A _53778 t s)).
Proof. exact (MK_COMB (@lem4526025 _107642 A _53778 t s) (@lem4526031 _107642 A _53778 t s)). Qed.
Lemma lem4526033 {_107642 A : Type'} (_53778 : type656 _107642 A) (t : _107642 -> Prop) (s : A -> Prop) : ((_53778 t s) = (term81 _107642 A t s)) = (term285 _107642 A _53778 t s).
Proof. exact (EQ_MP (@lem4526032 _107642 A _53778 t s) (@lem4526019 _107642 A _53778 t s)). Qed.
Lemma lem4526035 {_3571 _3575 : Type'} (s : _3575 -> _3571) (t : _3575 -> _3571) : (s = (term257 _3571 _3575 t)) = (term258 _3571 _3575 s t).
Proof. exact (EQ_MP (@lem19792 _3571 _3575 s t) (@lem0)). Qed.
Lemma lem4526036 {_107642 A : Type'} (s : type805 _107642 A) (t : type805 _107642 A) : (s = (term286 _107642 A t)) = (term287 _107642 A s t).
Proof. exact (@lem4526035 Prop (A -> _107642) s t). Qed.
Lemma lem4526037 {_107642 A : Type'} (_53778 : type656 _107642 A) (t : _107642 -> Prop) (s : A -> Prop) (d : _107642) : ((_53778 t s d) = (term288 _107642 A t s d)) = (term289 _107642 A _53778 t s d).
Proof. exact (@lem4526036 _107642 A (_53778 t s d) (term84 _107642 A t s d)). Qed.
Lemma lem4526038 {_107642 A : Type'} (GEN_PVAR_148 : A -> _107642) (t : _107642 -> Prop) (s : A -> Prop) (d : _107642) : (term290 _107642 A t s d GEN_PVAR_148) = (term151 _107642 A GEN_PVAR_148 t s d).
Proof. exact (eq_refl (term290 _107642 A t s d GEN_PVAR_148)). Qed.
Lemma lem4526039 {_107642 A : Type'} (t : _107642 -> Prop) (s : A -> Prop) (d : _107642) : (term288 _107642 A t s d) = (term84 _107642 A t s d).
Proof. exact (fun_ext (fun GEN_PVAR_148 : A -> _107642 => @lem4526038 _107642 A GEN_PVAR_148 t s d)). Qed.
Lemma lem4526040 {_107642 A : Type'} (_53778 : type656 _107642 A) (t : _107642 -> Prop) (s : A -> Prop) (d : _107642) : (term85 _107642 A _53778 t s d) = (term85 _107642 A _53778 t s d).
Proof. exact (eq_refl (term85 _107642 A _53778 t s d)). Qed.
Lemma lem4526041 {_107642 A : Type'} (_53778 : type656 _107642 A) (t : _107642 -> Prop) (s : A -> Prop) (d : _107642) : ((_53778 t s d) = (term288 _107642 A t s d)) = ((_53778 t s d) = (term84 _107642 A t s d)).
Proof. exact (MK_COMB (@lem4526040 _107642 A _53778 t s d) (@lem4526039 _107642 A t s d)). Qed.
Lemma lem4526042 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4526043 {_107642 A : Type'} (_53778 : type656 _107642 A) (t : _107642 -> Prop) (s : A -> Prop) (d : _107642) : (term291 _107642 A _53778 t s d) = (term292 _107642 A _53778 t s d).
Proof. exact (MK_COMB (@lem4526042) (@lem4526041 _107642 A _53778 t s d)). Qed.
Lemma lem4526044 {_107642 A : Type'} (GEN_PVAR_148 : A -> _107642) (t : _107642 -> Prop) (s : A -> Prop) (d : _107642) : (term290 _107642 A t s d GEN_PVAR_148) = (term151 _107642 A GEN_PVAR_148 t s d).
Proof. exact (eq_refl (term290 _107642 A t s d GEN_PVAR_148)). Qed.
Lemma lem4526045 {_107642 A : Type'} (_53778 : type656 _107642 A) (t : _107642 -> Prop) (s : A -> Prop) (d : _107642) (GEN_PVAR_148 : A -> _107642) : (term293 _107642 A _53778 t s d GEN_PVAR_148) = (term293 _107642 A _53778 t s d GEN_PVAR_148).
Proof. exact (eq_refl (term293 _107642 A _53778 t s d GEN_PVAR_148)). Qed.
Lemma lem4526046 {_107642 A : Type'} (_53778 : type656 _107642 A) (GEN_PVAR_148 : A -> _107642) (t : _107642 -> Prop) (s : A -> Prop) (d : _107642) : ((_53778 t s d GEN_PVAR_148) = (term290 _107642 A t s d GEN_PVAR_148)) = ((_53778 t s d GEN_PVAR_148) = (term151 _107642 A GEN_PVAR_148 t s d)).
Proof. exact (MK_COMB (@lem4526045 _107642 A _53778 t s d GEN_PVAR_148) (@lem4526044 _107642 A GEN_PVAR_148 t s d)). Qed.
Lemma lem4526047 {_107642 A : Type'} (_53778 : type656 _107642 A) (t : _107642 -> Prop) (s : A -> Prop) (d : _107642) : (term294 _107642 A _53778 t s d) = (term295 _107642 A _53778 t s d).
Proof. exact (fun_ext (fun GEN_PVAR_148 : A -> _107642 => @lem4526046 _107642 A _53778 GEN_PVAR_148 t s d)). Qed.
Lemma lem4526048 {_107642 A : Type'} : (@all (A -> _107642)) = (@all (A -> _107642)).
Proof. exact (eq_refl (@all (A -> _107642))). Qed.
Lemma lem4526049 {_107642 A : Type'} (_53778 : type656 _107642 A) (t : _107642 -> Prop) (s : A -> Prop) (d : _107642) : (term289 _107642 A _53778 t s d) = (term296 _107642 A _53778 t s d).
Proof. exact (MK_COMB (@lem4526048 _107642 A) (@lem4526047 _107642 A _53778 t s d)). Qed.
Lemma lem4526050 {_107642 A : Type'} (_53778 : type656 _107642 A) (t : _107642 -> Prop) (s : A -> Prop) (d : _107642) : (((_53778 t s d) = (term288 _107642 A t s d)) = (term289 _107642 A _53778 t s d)) = (((_53778 t s d) = (term84 _107642 A t s d)) = (term296 _107642 A _53778 t s d)).
Proof. exact (MK_COMB (@lem4526043 _107642 A _53778 t s d) (@lem4526049 _107642 A _53778 t s d)). Qed.
Lemma lem4526051 {_107642 A : Type'} (_53778 : type656 _107642 A) (t : _107642 -> Prop) (s : A -> Prop) (d : _107642) : ((_53778 t s d) = (term84 _107642 A t s d)) = (term296 _107642 A _53778 t s d).
Proof. exact (EQ_MP (@lem4526050 _107642 A _53778 t s d) (@lem4526037 _107642 A _53778 t s d)). Qed.
Lemma lem4526052 {_107642 A : Type'} (_53778 : type656 _107642 A) (GEN_PVAR_148 : A -> _107642) (t : _107642 -> Prop) (s : A -> Prop) (d : _107642) : ((_53778 t s d GEN_PVAR_148) = (term151 _107642 A GEN_PVAR_148 t s d)) = ((_53778 t s d GEN_PVAR_148) = (term151 _107642 A GEN_PVAR_148 t s d)).
Proof. exact (eq_refl ((_53778 t s d GEN_PVAR_148) = (term151 _107642 A GEN_PVAR_148 t s d))). Qed.
Lemma lem4526053 {_107642 A : Type'} (_53778 : type656 _107642 A) (t : _107642 -> Prop) (s : A -> Prop) (d : _107642) : (term295 _107642 A _53778 t s d) = (term295 _107642 A _53778 t s d).
Proof. exact (fun_ext (fun GEN_PVAR_148 : A -> _107642 => @lem4526052 _107642 A _53778 GEN_PVAR_148 t s d)). Qed.
Lemma lem4526054 {_107642 A : Type'} : (@all (A -> _107642)) = (@all (A -> _107642)).
Proof. exact (eq_refl (@all (A -> _107642))). Qed.
Lemma lem4526055 {_107642 A : Type'} (_53778 : type656 _107642 A) (t : _107642 -> Prop) (s : A -> Prop) (d : _107642) : (term296 _107642 A _53778 t s d) = (term296 _107642 A _53778 t s d).
Proof. exact (MK_COMB (@lem4526054 _107642 A) (@lem4526053 _107642 A _53778 t s d)). Qed.
Lemma lem4526056 {_107642 A : Type'} (_53778 : type656 _107642 A) (t : _107642 -> Prop) (s : A -> Prop) (d : _107642) : ((_53778 t s d) = (term84 _107642 A t s d)) = (term296 _107642 A _53778 t s d).
Proof. exact (TRANS (@lem4526051 _107642 A _53778 t s d) (@lem4526055 _107642 A _53778 t s d)). Qed.
Lemma lem4526057 {_107642 A : Type'} (_53778 : type656 _107642 A) (t : _107642 -> Prop) (s : A -> Prop) : (term284 _107642 A _53778 t s) = (term297 _107642 A _53778 t s).
Proof. exact (fun_ext (fun d : _107642 => @lem4526056 _107642 A _53778 t s d)). Qed.
Lemma lem4526058 {_107642 : Type'} : (@all _107642) = (@all _107642).
Proof. exact (eq_refl (@all _107642)). Qed.
Lemma lem4526059 {_107642 A : Type'} (_53778 : type656 _107642 A) (t : _107642 -> Prop) (s : A -> Prop) : (term285 _107642 A _53778 t s) = (term298 _107642 A _53778 t s).
Proof. exact (MK_COMB (@lem4526058 _107642) (@lem4526057 _107642 A _53778 t s)). Qed.
Lemma lem4526060 {_107642 A : Type'} (_53778 : type656 _107642 A) (t : _107642 -> Prop) (s : A -> Prop) : ((_53778 t s) = (term81 _107642 A t s)) = (term298 _107642 A _53778 t s).
Proof. exact (TRANS (@lem4526033 _107642 A _53778 t s) (@lem4526059 _107642 A _53778 t s)). Qed.
Lemma lem4526061 {_107642 A : Type'} (_53778 : type656 _107642 A) (t : _107642 -> Prop) : (term275 _107642 A _53778 t) = (term299 _107642 A _53778 t).
Proof. exact (fun_ext (fun s : A -> Prop => @lem4526060 _107642 A _53778 t s)). Qed.
Lemma lem4526062 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem4526063 {_107642 A : Type'} (_53778 : type656 _107642 A) (t : _107642 -> Prop) : (term276 _107642 A _53778 t) = (term300 _107642 A _53778 t).
Proof. exact (MK_COMB (@lem4526062 A) (@lem4526061 _107642 A _53778 t)). Qed.
Lemma lem4526064 {_107642 A : Type'} (_53778 : type656 _107642 A) (t : _107642 -> Prop) : ((_53778 t) = (term78 _107642 A t)) = (term300 _107642 A _53778 t).
Proof. exact (TRANS (@lem4526015 _107642 A _53778 t) (@lem4526063 _107642 A _53778 t)). Qed.
Lemma lem4526065 {_107642 A : Type'} (_53778 : type656 _107642 A) : (term266 _107642 A _53778) = (term301 _107642 A _53778).
Proof. exact (fun_ext (fun t : _107642 -> Prop => @lem4526064 _107642 A _53778 t)). Qed.
Lemma lem4526066 {_107642 : Type'} : (@all (_107642 -> Prop)) = (@all (_107642 -> Prop)).
Proof. exact (eq_refl (@all (_107642 -> Prop))). Qed.
Lemma lem4526067 {_107642 A : Type'} (_53778 : type656 _107642 A) : (term267 _107642 A _53778) = (term302 _107642 A _53778).
Proof. exact (MK_COMB (@lem4526066 _107642) (@lem4526065 _107642 A _53778)). Qed.
Lemma lem4526068 {_107642 A : Type'} (_53778 : type656 _107642 A) : (_53778 = (term76 _107642 A)) = (term302 _107642 A _53778).
Proof. exact (TRANS (@lem4525997 _107642 A _53778) (@lem4526067 _107642 A _53778)). Qed.
Lemma lem4526069 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4526070 {_107642 A : Type'} (_53778 : type656 _107642 A) : (term243 _107642 A _53778) = (term303 _107642 A _53778).
Proof. exact (MK_COMB (@lem4526069) (@lem4526068 _107642 A _53778)). Qed.
Lemma lem4526071 {_100044 _107639 _107642 A B : Type'} (_53778 : type656 _107642 A) : (term374 _100044 _107639 _107642 A B _53778) = (term374 _100044 _107639 _107642 A B _53778).
Proof. exact (eq_refl (term374 _100044 _107639 _107642 A B _53778)). Qed.
Lemma lem4526072 {_100044 _107639 _107642 A B : Type'} (_53778 : type656 _107642 A) : (term388 _100044 _107639 _107642 A B _53778) = (term394 _100044 _107639 _107642 A B _53778).
Proof. exact (MK_COMB (@lem4526070 _107642 A _53778) (@lem4526071 _100044 _107639 _107642 A B _53778)). Qed.
Lemma lem4526073 {_100044 _107639 _107642 A B : Type'} : (term390 _100044 _107639 _107642 A B) = (term395 _100044 _107639 _107642 A B).
Proof. exact (fun_ext (fun _53778 : type656 _107642 A => @lem4526072 _100044 _107639 _107642 A B _53778)). Qed.
Lemma lem4526074 {_107642 A : Type'} : (@all ((_107642 -> Prop) -> (A -> Prop) -> _107642 -> (A -> _107642) -> Prop)) = (@all ((_107642 -> Prop) -> (A -> Prop) -> _107642 -> (A -> _107642) -> Prop)).
Proof. exact (eq_refl (@all ((_107642 -> Prop) -> (A -> Prop) -> _107642 -> (A -> _107642) -> Prop))). Qed.
Lemma lem4526075 {_100044 _107639 _107642 A B : Type'} : (term392 _100044 _107639 _107642 A B) = (term396 _100044 _107639 _107642 A B).
Proof. exact (MK_COMB (@lem4526074 _107642 A) (@lem4526073 _100044 _107639 _107642 A B)). Qed.
Lemma lem4526076 {_100044 _107639 _107642 A B : Type'} : (term380 _100044 _107639 _107642 A B) = (term380 _100044 _107639 _107642 A B).
Proof. exact (eq_refl (term380 _100044 _107639 _107642 A B)). Qed.
Lemma lem4526077 {_100044 _107639 _107642 A B : Type'} : ((term349 _100044 _107639 _107642 A B) = (term392 _100044 _107639 _107642 A B)) = ((term349 _100044 _107639 _107642 A B) = (term396 _100044 _107639 _107642 A B)).
Proof. exact (MK_COMB (@lem4526076 _100044 _107639 _107642 A B) (@lem4526075 _100044 _107639 _107642 A B)). Qed.
Lemma lem4526078 {_100044 _107639 _107642 A B : Type'} : (term349 _100044 _107639 _107642 A B) = (term396 _100044 _107639 _107642 A B).
Proof. exact (EQ_MP (@lem4526077 _100044 _107639 _107642 A B) (@lem4525979 _100044 _107639 _107642 A B)). Qed.
Lemma lem4526079 {_107639 B : Type'} (_53779 : type839 _107639 B) (h1 : _53779 = (term397 _107639 B)) : _53779 = (term397 _107639 B).
Proof. exact (h1). Qed.
Lemma lem4526080 {B : Type'} (t : B -> Prop) : t = t.
Proof. exact (eq_refl t). Qed.
Lemma lem4526081 {_107639 B : Type'} (t : B -> Prop) (_53779 : type839 _107639 B) (h1 : _53779 = (term397 _107639 B)) : (_53779 t) = (term398 _107639 B t).
Proof. exact (MK_COMB (@lem4526079 _107639 B _53779 h1) (@lem4526080 B t)). Qed.
Lemma lem4526082 {_107639 B : Type'} (t : B -> Prop) : (term398 _107639 B t) = (term399 _107639 B t).
Proof. exact (eq_refl (term398 _107639 B t)). Qed.
Lemma lem4526083 {_107639 B : Type'} (_53779 : type839 _107639 B) (t : B -> Prop) : (term400 _107639 B _53779 t) = (term400 _107639 B _53779 t).
Proof. exact (eq_refl (term400 _107639 B _53779 t)). Qed.
Lemma lem4526084 {_107639 B : Type'} (_53779 : type839 _107639 B) (t : B -> Prop) : ((_53779 t) = (term398 _107639 B t)) = ((_53779 t) = (term399 _107639 B t)).
Proof. exact (MK_COMB (@lem4526083 _107639 B _53779 t) (@lem4526082 _107639 B t)). Qed.
Lemma lem4526085 {_107639 B : Type'} (t : B -> Prop) (_53779 : type839 _107639 B) (h1 : _53779 = (term397 _107639 B)) : (_53779 t) = (term399 _107639 B t).
Proof. exact (EQ_MP (@lem4526084 _107639 B _53779 t) (@lem4526081 _107639 B t _53779 h1)). Qed.
Lemma lem4526086 {_107639 : Type'} (s : _107639 -> Prop) : s = s.
Proof. exact (eq_refl s). Qed.
Lemma lem4526087 {_107639 B : Type'} (t : B -> Prop) (s : _107639 -> Prop) (_53779 : type839 _107639 B) (h1 : _53779 = (term397 _107639 B)) : (_53779 t s) = (term401 _107639 B t s).
Proof. exact (MK_COMB (@lem4526085 _107639 B t _53779 h1) (@lem4526086 _107639 s)). Qed.
Lemma lem4526088 {_107639 B : Type'} (t : B -> Prop) (s : _107639 -> Prop) : (term401 _107639 B t s) = (term402 _107639 B t s).
Proof. exact (eq_refl (term401 _107639 B t s)). Qed.
Lemma lem4526089 {_107639 B : Type'} (_53779 : type839 _107639 B) (t : B -> Prop) (s : _107639 -> Prop) : (term403 _107639 B _53779 t s) = (term403 _107639 B _53779 t s).
Proof. exact (eq_refl (term403 _107639 B _53779 t s)). Qed.
Lemma lem4526090 {_107639 B : Type'} (_53779 : type839 _107639 B) (t : B -> Prop) (s : _107639 -> Prop) : ((_53779 t s) = (term401 _107639 B t s)) = ((_53779 t s) = (term402 _107639 B t s)).
Proof. exact (MK_COMB (@lem4526089 _107639 B _53779 t s) (@lem4526088 _107639 B t s)). Qed.
Lemma lem4526091 {_107639 B : Type'} (t : B -> Prop) (s : _107639 -> Prop) (_53779 : type839 _107639 B) (h1 : _53779 = (term397 _107639 B)) : (_53779 t s) = (term402 _107639 B t s).
Proof. exact (EQ_MP (@lem4526090 _107639 B _53779 t s) (@lem4526087 _107639 B t s _53779 h1)). Qed.
Lemma lem4526092 {B : Type'} (d : B) : d = d.
Proof. exact (eq_refl d). Qed.
Lemma lem4526093 {_107639 B : Type'} (t : B -> Prop) (s : _107639 -> Prop) (d : B) (_53779 : type839 _107639 B) (h1 : _53779 = (term397 _107639 B)) : (_53779 t s d) = (term404 _107639 B t s d).
Proof. exact (MK_COMB (@lem4526091 _107639 B t s _53779 h1) (@lem4526092 B d)). Qed.
Lemma lem4526094 {_107639 B : Type'} (t : B -> Prop) (s : _107639 -> Prop) (d : B) : (term404 _107639 B t s d) = (term125 _107639 B t s d).
Proof. exact (eq_refl (term404 _107639 B t s d)). Qed.
Lemma lem4526095 {_107639 B : Type'} (_53779 : type839 _107639 B) (t : B -> Prop) (s : _107639 -> Prop) (d : B) : (term405 _107639 B _53779 t s d) = (term405 _107639 B _53779 t s d).
Proof. exact (eq_refl (term405 _107639 B _53779 t s d)). Qed.
Lemma lem4526096 {_107639 B : Type'} (_53779 : type839 _107639 B) (t : B -> Prop) (s : _107639 -> Prop) (d : B) : ((_53779 t s d) = (term404 _107639 B t s d)) = ((_53779 t s d) = (term125 _107639 B t s d)).
Proof. exact (MK_COMB (@lem4526095 _107639 B _53779 t s d) (@lem4526094 _107639 B t s d)). Qed.
Lemma lem4526097 {_107639 B : Type'} (t : B -> Prop) (s : _107639 -> Prop) (d : B) (_53779 : type839 _107639 B) (h1 : _53779 = (term397 _107639 B)) : (_53779 t s d) = (term125 _107639 B t s d).
Proof. exact (EQ_MP (@lem4526096 _107639 B _53779 t s d) (@lem4526093 _107639 B t s d _53779 h1)). Qed.
Lemma lem4526103 (n : nat) (m : nat) : (Nat.pow n m) = (Nat.pow n m).
Proof. exact (eq_refl (Nat.pow n m)). Qed.
Lemma lem4526107 {A : Type'} (f : A -> nat) : f = f.
Proof. exact (eq_refl f). Qed.
Lemma lem4526124 {A : Type'} (s : A -> Prop) (f : A -> nat) (x : A) (d : nat) : (term86 A s f x d) = (term86 A s f x d).
Proof. exact (eq_refl (term86 A s f x d)). Qed.
Lemma lem4526125 {A : Type'} (s : A -> Prop) (f : A -> nat) (d : nat) : (term87 A s f d) = (term87 A s f d).
Proof. exact (fun_ext (fun x : A => @lem4526124 A s f x d)). Qed.
Lemma lem4526126 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem4526127 {A : Type'} (s : A -> Prop) (f : A -> nat) (d : nat) : (term88 A s f d) = (term88 A s f d).
Proof. exact (MK_COMB (@lem4526126 A) (@lem4526125 A s f d)). Qed.
Lemma lem4526142 {A : Type'} (s : A -> Prop) (f : A -> nat) (x : A) (t : nat -> Prop) : (term89 A s f x t) = (term89 A s f x t).
Proof. exact (eq_refl (term89 A s f x t)). Qed.
Lemma lem4526143 {A : Type'} (s : A -> Prop) (f : A -> nat) (t : nat -> Prop) : (term90 A s f t) = (term90 A s f t).
Proof. exact (fun_ext (fun x : A => @lem4526142 A s f x t)). Qed.
Lemma lem4526144 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem4526145 {A : Type'} (s : A -> Prop) (f : A -> nat) (t : nat -> Prop) : (term91 A s f t) = (term91 A s f t).
Proof. exact (MK_COMB (@lem4526144 A) (@lem4526143 A s f t)). Qed.
Lemma lem4526146 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4526147 {A : Type'} (s : A -> Prop) (f : A -> nat) (t : nat -> Prop) : (term92 A s f t) = (term92 A s f t).
Proof. exact (MK_COMB (@lem4526146) (@lem4526145 A s f t)). Qed.
Lemma lem4526148 {A : Type'} (t : nat -> Prop) (s : A -> Prop) (f : A -> nat) (d : nat) : (term93 A t s f d) = (term93 A t s f d).
Proof. exact (MK_COMB (@lem4526147 A s f t) (@lem4526127 A s f d)). Qed.
Lemma lem4526151 {A : Type'} (GEN_PVAR_148 : A -> nat) : (@SETSPEC (A -> nat) GEN_PVAR_148) = (@SETSPEC (A -> nat) GEN_PVAR_148).
Proof. exact (eq_refl (@SETSPEC (A -> nat) GEN_PVAR_148)). Qed.
Lemma lem4526152 {A : Type'} (GEN_PVAR_148 : A -> nat) (t : nat -> Prop) (s : A -> Prop) (f : A -> nat) (d : nat) : (term94 A GEN_PVAR_148 t s f d) = (term94 A GEN_PVAR_148 t s f d).
Proof. exact (MK_COMB (@lem4526151 A GEN_PVAR_148) (@lem4526148 A t s f d)). Qed.
Lemma lem4526153 {A : Type'} (GEN_PVAR_148 : A -> nat) (t : nat -> Prop) (s : A -> Prop) (d : nat) (f : A -> nat) : (term95 A GEN_PVAR_148 t s d f) = (term95 A GEN_PVAR_148 t s d f).
Proof. exact (MK_COMB (@lem4526152 A GEN_PVAR_148 t s f d) (@lem4526107 A f)). Qed.
Lemma lem4526154 {A : Type'} (GEN_PVAR_148 : A -> nat) (t : nat -> Prop) (s : A -> Prop) (d : nat) : (term96 A GEN_PVAR_148 t s d) = (term96 A GEN_PVAR_148 t s d).
Proof. exact (fun_ext (fun f : A -> nat => @lem4526153 A GEN_PVAR_148 t s d f)). Qed.
Lemma lem4526155 {A : Type'} : (@ex (A -> nat)) = (@ex (A -> nat)).
Proof. exact (eq_refl (@ex (A -> nat))). Qed.
Lemma lem4526156 {A : Type'} (GEN_PVAR_148 : A -> nat) (t : nat -> Prop) (s : A -> Prop) (d : nat) : (term97 A GEN_PVAR_148 t s d) = (term97 A GEN_PVAR_148 t s d).
Proof. exact (MK_COMB (@lem4526155 A) (@lem4526154 A GEN_PVAR_148 t s d)). Qed.
Lemma lem4526157 {A : Type'} (t : nat -> Prop) (s : A -> Prop) (d : nat) : (term98 A t s d) = (term98 A t s d).
Proof. exact (fun_ext (fun GEN_PVAR_148 : A -> nat => @lem4526156 A GEN_PVAR_148 t s d)). Qed.
Lemma lem4526158 {A : Type'} : (@GSPEC (A -> nat)) = (@GSPEC (A -> nat)).
Proof. exact (eq_refl (@GSPEC (A -> nat))). Qed.
Lemma lem4526159 {A : Type'} (t : nat -> Prop) (s : A -> Prop) (d : nat) : (term99 A t s d) = (term99 A t s d).
Proof. exact (MK_COMB (@lem4526158 A) (@lem4526157 A t s d)). Qed.
Lemma lem4526160 {A : Type'} : (@HAS_SIZE (A -> nat)) = (@HAS_SIZE (A -> nat)).
Proof. exact (eq_refl (@HAS_SIZE (A -> nat))). Qed.
Lemma lem4526161 {A : Type'} (t : nat -> Prop) (s : A -> Prop) (d : nat) : (term100 A t s d) = (term100 A t s d).
Proof. exact (MK_COMB (@lem4526160 A) (@lem4526159 A t s d)). Qed.
Lemma lem4526162 {A : Type'} (t : nat -> Prop) (s : A -> Prop) (d : nat) (n : nat) (m : nat) : (term101 A t s d n m) = (term101 A t s d n m).
Proof. exact (MK_COMB (@lem4526161 A t s d) (@lem4526103 n m)). Qed.
Lemma lem4526177 {A : Type'} (s : A -> Prop) (m : nat) (t : nat -> Prop) (n : nat) : (term102 A s m t n) = (term102 A s m t n).
Proof. exact (eq_refl (term102 A s m t n)). Qed.
Lemma lem4526178 {A : Type'} (t : nat -> Prop) (s : A -> Prop) (d : nat) (n : nat) (m : nat) : (term103 A t s d n m) = (term103 A t s d n m).
Proof. exact (MK_COMB (@lem4526177 A s m t n) (@lem4526162 A t s d n m)). Qed.
Lemma lem4526179 {A : Type'} (t : nat -> Prop) (d : nat) (n : nat) (m : nat) : (term104 A t d n m) = (term104 A t d n m).
Proof. exact (fun_ext (fun s : A -> Prop => @lem4526178 A t s d n m)). Qed.
Lemma lem4526180 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem4526181 {A : Type'} (t : nat -> Prop) (d : nat) (n : nat) (m : nat) : (term105 A t d n m) = (term105 A t d n m).
Proof. exact (MK_COMB (@lem4526180 A) (@lem4526179 A t d n m)). Qed.
Lemma lem4526182 {A : Type'} (t : nat -> Prop) (d : nat) (n : nat) : (term106 A t d n) = (term106 A t d n).
Proof. exact (fun_ext (fun m : nat => @lem4526181 A t d n m)). Qed.
Lemma lem4526183 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4526184 {A : Type'} (t : nat -> Prop) (d : nat) (n : nat) : (term107 A t d n) = (term107 A t d n).
Proof. exact (MK_COMB (@lem4526183) (@lem4526182 A t d n)). Qed.
Lemma lem4526185 {A : Type'} (d : nat) (n : nat) : (term108 A d n) = (term108 A d n).
Proof. exact (fun_ext (fun t : nat -> Prop => @lem4526184 A t d n)). Qed.
Lemma lem4526186 : (@all (nat -> Prop)) = (@all (nat -> Prop)).
Proof. exact (eq_refl (@all (nat -> Prop))). Qed.
Lemma lem4526187 {A : Type'} (d : nat) (n : nat) : (term109 A d n) = (term109 A d n).
Proof. exact (MK_COMB (@lem4526186) (@lem4526185 A d n)). Qed.
Lemma lem4526188 {A : Type'} (d : nat) : (term110 A d) = (term110 A d).
Proof. exact (fun_ext (fun n : nat => @lem4526187 A d n)). Qed.
Lemma lem4526189 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4526190 {A : Type'} (d : nat) : (term111 A d) = (term111 A d).
Proof. exact (MK_COMB (@lem4526189) (@lem4526188 A d)). Qed.
Lemma lem4526191 {A : Type'} : (term112 A) = (term112 A).
Proof. exact (fun_ext (fun d : nat => @lem4526190 A d)). Qed.
Lemma lem4526192 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4526193 {A : Type'} : (term13 A) = (term13 A).
Proof. exact (MK_COMB (@lem4526192) (@lem4526191 A)). Qed.
Lemma lem4526194 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem4526195 {A : Type'} : (term24 A) = (term24 A).
Proof. exact (MK_COMB (@lem4526194) (@lem4526193 A)). Qed.
Lemma lem4526200 (n : nat) (m : nat) : (Nat.pow n m) = (Nat.pow n m).
Proof. exact (eq_refl (Nat.pow n m)). Qed.
Lemma lem4526204 {A B : Type'} (f : A -> B) : f = f.
Proof. exact (eq_refl f). Qed.
Lemma lem4526221 {A B : Type'} (s : A -> Prop) (f : A -> B) (x : A) (d : B) : (term113 A B s f x d) = (term113 A B s f x d).
Proof. exact (eq_refl (term113 A B s f x d)). Qed.
Lemma lem4526222 {A B : Type'} (s : A -> Prop) (f : A -> B) (d : B) : (term114 A B s f d) = (term114 A B s f d).
Proof. exact (fun_ext (fun x : A => @lem4526221 A B s f x d)). Qed.
Lemma lem4526223 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem4526224 {A B : Type'} (s : A -> Prop) (f : A -> B) (d : B) : (term115 A B s f d) = (term115 A B s f d).
Proof. exact (MK_COMB (@lem4526223 A) (@lem4526222 A B s f d)). Qed.
Lemma lem4526239 {A B : Type'} (s : A -> Prop) (f : A -> B) (x : A) (t : B -> Prop) : (term116 A B s f x t) = (term116 A B s f x t).
Proof. exact (eq_refl (term116 A B s f x t)). Qed.
Lemma lem4526240 {A B : Type'} (s : A -> Prop) (f : A -> B) (t : B -> Prop) : (term117 A B s f t) = (term117 A B s f t).
Proof. exact (fun_ext (fun x : A => @lem4526239 A B s f x t)). Qed.
Lemma lem4526241 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem4526242 {A B : Type'} (s : A -> Prop) (f : A -> B) (t : B -> Prop) : (term118 A B s f t) = (term118 A B s f t).
Proof. exact (MK_COMB (@lem4526241 A) (@lem4526240 A B s f t)). Qed.
Lemma lem4526243 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4526244 {A B : Type'} (s : A -> Prop) (f : A -> B) (t : B -> Prop) : (term119 A B s f t) = (term119 A B s f t).
Proof. exact (MK_COMB (@lem4526243) (@lem4526242 A B s f t)). Qed.
Lemma lem4526245 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (f : A -> B) (d : B) : (term120 A B t s f d) = (term120 A B t s f d).
Proof. exact (MK_COMB (@lem4526244 A B s f t) (@lem4526224 A B s f d)). Qed.
Lemma lem4526248 {A B : Type'} (GEN_PVAR_148 : A -> B) : (@SETSPEC (A -> B) GEN_PVAR_148) = (@SETSPEC (A -> B) GEN_PVAR_148).
Proof. exact (eq_refl (@SETSPEC (A -> B) GEN_PVAR_148)). Qed.
Lemma lem4526249 {A B : Type'} (GEN_PVAR_148 : A -> B) (t : B -> Prop) (s : A -> Prop) (f : A -> B) (d : B) : (term121 A B GEN_PVAR_148 t s f d) = (term121 A B GEN_PVAR_148 t s f d).
Proof. exact (MK_COMB (@lem4526248 A B GEN_PVAR_148) (@lem4526245 A B t s f d)). Qed.
Lemma lem4526250 {A B : Type'} (GEN_PVAR_148 : A -> B) (t : B -> Prop) (s : A -> Prop) (d : B) (f : A -> B) : (term122 A B GEN_PVAR_148 t s d f) = (term122 A B GEN_PVAR_148 t s d f).
Proof. exact (MK_COMB (@lem4526249 A B GEN_PVAR_148 t s f d) (@lem4526204 A B f)). Qed.
Lemma lem4526251 {A B : Type'} (GEN_PVAR_148 : A -> B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term123 A B GEN_PVAR_148 t s d) = (term123 A B GEN_PVAR_148 t s d).
Proof. exact (fun_ext (fun f : A -> B => @lem4526250 A B GEN_PVAR_148 t s d f)). Qed.
Lemma lem4526252 {A B : Type'} : (@ex (A -> B)) = (@ex (A -> B)).
Proof. exact (eq_refl (@ex (A -> B))). Qed.
Lemma lem4526253 {A B : Type'} (GEN_PVAR_148 : A -> B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term124 A B GEN_PVAR_148 t s d) = (term124 A B GEN_PVAR_148 t s d).
Proof. exact (MK_COMB (@lem4526252 A B) (@lem4526251 A B GEN_PVAR_148 t s d)). Qed.
Lemma lem4526254 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (d : B) : (term125 A B t s d) = (term125 A B t s d).
Proof. exact (fun_ext (fun GEN_PVAR_148 : A -> B => @lem4526253 A B GEN_PVAR_148 t s d)). Qed.
Lemma lem4526255 {A B : Type'} : (@GSPEC (A -> B)) = (@GSPEC (A -> B)).
Proof. exact (eq_refl (@GSPEC (A -> B))). Qed.
Lemma lem4526256 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (d : B) : (term126 A B t s d) = (term126 A B t s d).
Proof. exact (MK_COMB (@lem4526255 A B) (@lem4526254 A B t s d)). Qed.
Lemma lem4526257 {A B : Type'} : (@HAS_SIZE (A -> B)) = (@HAS_SIZE (A -> B)).
Proof. exact (eq_refl (@HAS_SIZE (A -> B))). Qed.
Lemma lem4526258 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (d : B) : (term127 A B t s d) = (term127 A B t s d).
Proof. exact (MK_COMB (@lem4526257 A B) (@lem4526256 A B t s d)). Qed.
Lemma lem4526259 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (d : B) (n : nat) (m : nat) : (term128 A B t s d n m) = (term128 A B t s d n m).
Proof. exact (MK_COMB (@lem4526258 A B t s d) (@lem4526200 n m)). Qed.
Lemma lem4526274 {A B : Type'} (s : A -> Prop) (m : nat) (t : B -> Prop) (n : nat) : (term129 A B s m t n) = (term129 A B s m t n).
Proof. exact (eq_refl (term129 A B s m t n)). Qed.
Lemma lem4526275 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (d : B) (n : nat) (m : nat) : (term130 A B t s d n m) = (term130 A B t s d n m).
Proof. exact (MK_COMB (@lem4526274 A B s m t n) (@lem4526259 A B t s d n m)). Qed.
Lemma lem4526276 {A B : Type'} (t : B -> Prop) (d : B) (n : nat) (m : nat) : (term131 A B t d n m) = (term131 A B t d n m).
Proof. exact (fun_ext (fun s : A -> Prop => @lem4526275 A B t s d n m)). Qed.
Lemma lem4526277 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem4526278 {A B : Type'} (t : B -> Prop) (d : B) (n : nat) (m : nat) : (term132 A B t d n m) = (term132 A B t d n m).
Proof. exact (MK_COMB (@lem4526277 A) (@lem4526276 A B t d n m)). Qed.
Lemma lem4526279 {A B : Type'} (t : B -> Prop) (d : B) (n : nat) : (term133 A B t d n) = (term133 A B t d n).
Proof. exact (fun_ext (fun m : nat => @lem4526278 A B t d n m)). Qed.
Lemma lem4526280 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4526281 {A B : Type'} (t : B -> Prop) (d : B) (n : nat) : (term134 A B t d n) = (term134 A B t d n).
Proof. exact (MK_COMB (@lem4526280) (@lem4526279 A B t d n)). Qed.
Lemma lem4526282 {A B : Type'} (d : B) (n : nat) : (term135 A B d n) = (term135 A B d n).
Proof. exact (fun_ext (fun t : B -> Prop => @lem4526281 A B t d n)). Qed.
Lemma lem4526283 {B : Type'} : (@all (B -> Prop)) = (@all (B -> Prop)).
Proof. exact (eq_refl (@all (B -> Prop))). Qed.
Lemma lem4526284 {A B : Type'} (d : B) (n : nat) : (term136 A B d n) = (term136 A B d n).
Proof. exact (MK_COMB (@lem4526283 B) (@lem4526282 A B d n)). Qed.
Lemma lem4526285 {A B : Type'} (d : B) : (term137 A B d) = (term137 A B d).
Proof. exact (fun_ext (fun n : nat => @lem4526284 A B d n)). Qed.
Lemma lem4526286 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4526287 {A B : Type'} (d : B) : (term138 A B d) = (term138 A B d).
Proof. exact (MK_COMB (@lem4526286) (@lem4526285 A B d)). Qed.
Lemma lem4526288 {A B : Type'} : (term139 A B) = (term139 A B).
Proof. exact (fun_ext (fun d : B => @lem4526287 A B d)). Qed.
Lemma lem4526289 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem4526290 {A B : Type'} : (term12 A B) = (term12 A B).
Proof. exact (MK_COMB (@lem4526289 B) (@lem4526288 A B)). Qed.
Lemma lem4526291 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4526292 {A B : Type'} : (term25 A B) = (term25 A B).
Proof. exact (MK_COMB (@lem4526291) (@lem4526290 A B)). Qed.
Lemma lem4526293 {A B : Type'} : (term27 A B) = (term27 A B).
Proof. exact (MK_COMB (@lem4526292 A B) (@lem4526195 A)). Qed.
Lemma lem4526298 (n : nat) (m : nat) : (Nat.pow n m) = (Nat.pow n m).
Proof. exact (eq_refl (Nat.pow n m)). Qed.
Lemma lem4526302 {_107642 B : Type'} (f : _107642 -> B) : f = f.
Proof. exact (eq_refl f). Qed.
Lemma lem4526319 {_107642 B : Type'} (s : _107642 -> Prop) (f : _107642 -> B) (x : _107642) (d : B) : (term113 _107642 B s f x d) = (term113 _107642 B s f x d).
Proof. exact (eq_refl (term113 _107642 B s f x d)). Qed.
Lemma lem4526320 {_107642 B : Type'} (s : _107642 -> Prop) (f : _107642 -> B) (d : B) : (term114 _107642 B s f d) = (term114 _107642 B s f d).
Proof. exact (fun_ext (fun x : _107642 => @lem4526319 _107642 B s f x d)). Qed.
Lemma lem4526321 {_107642 : Type'} : (@all _107642) = (@all _107642).
Proof. exact (eq_refl (@all _107642)). Qed.
Lemma lem4526322 {_107642 B : Type'} (s : _107642 -> Prop) (f : _107642 -> B) (d : B) : (term115 _107642 B s f d) = (term115 _107642 B s f d).
Proof. exact (MK_COMB (@lem4526321 _107642) (@lem4526320 _107642 B s f d)). Qed.
Lemma lem4526337 {_107642 B : Type'} (s : _107642 -> Prop) (f : _107642 -> B) (x : _107642) (t : B -> Prop) : (term116 _107642 B s f x t) = (term116 _107642 B s f x t).
Proof. exact (eq_refl (term116 _107642 B s f x t)). Qed.
Lemma lem4526338 {_107642 B : Type'} (s : _107642 -> Prop) (f : _107642 -> B) (t : B -> Prop) : (term117 _107642 B s f t) = (term117 _107642 B s f t).
Proof. exact (fun_ext (fun x : _107642 => @lem4526337 _107642 B s f x t)). Qed.
Lemma lem4526339 {_107642 : Type'} : (@all _107642) = (@all _107642).
Proof. exact (eq_refl (@all _107642)). Qed.
Lemma lem4526340 {_107642 B : Type'} (s : _107642 -> Prop) (f : _107642 -> B) (t : B -> Prop) : (term118 _107642 B s f t) = (term118 _107642 B s f t).
Proof. exact (MK_COMB (@lem4526339 _107642) (@lem4526338 _107642 B s f t)). Qed.
Lemma lem4526341 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4526342 {_107642 B : Type'} (s : _107642 -> Prop) (f : _107642 -> B) (t : B -> Prop) : (term119 _107642 B s f t) = (term119 _107642 B s f t).
Proof. exact (MK_COMB (@lem4526341) (@lem4526340 _107642 B s f t)). Qed.
Lemma lem4526343 {_107642 B : Type'} (t : B -> Prop) (s : _107642 -> Prop) (f : _107642 -> B) (d : B) : (term120 _107642 B t s f d) = (term120 _107642 B t s f d).
Proof. exact (MK_COMB (@lem4526342 _107642 B s f t) (@lem4526322 _107642 B s f d)). Qed.
Lemma lem4526346 {_107642 B : Type'} (GEN_PVAR_148 : _107642 -> B) : (@SETSPEC (_107642 -> B) GEN_PVAR_148) = (@SETSPEC (_107642 -> B) GEN_PVAR_148).
Proof. exact (eq_refl (@SETSPEC (_107642 -> B) GEN_PVAR_148)). Qed.
Lemma lem4526347 {_107642 B : Type'} (GEN_PVAR_148 : _107642 -> B) (t : B -> Prop) (s : _107642 -> Prop) (f : _107642 -> B) (d : B) : (term121 _107642 B GEN_PVAR_148 t s f d) = (term121 _107642 B GEN_PVAR_148 t s f d).
Proof. exact (MK_COMB (@lem4526346 _107642 B GEN_PVAR_148) (@lem4526343 _107642 B t s f d)). Qed.
Lemma lem4526348 {_107642 B : Type'} (GEN_PVAR_148 : _107642 -> B) (t : B -> Prop) (s : _107642 -> Prop) (d : B) (f : _107642 -> B) : (term122 _107642 B GEN_PVAR_148 t s d f) = (term122 _107642 B GEN_PVAR_148 t s d f).
Proof. exact (MK_COMB (@lem4526347 _107642 B GEN_PVAR_148 t s f d) (@lem4526302 _107642 B f)). Qed.
Lemma lem4526349 {_107642 B : Type'} (GEN_PVAR_148 : _107642 -> B) (t : B -> Prop) (s : _107642 -> Prop) (d : B) : (term123 _107642 B GEN_PVAR_148 t s d) = (term123 _107642 B GEN_PVAR_148 t s d).
Proof. exact (fun_ext (fun f : _107642 -> B => @lem4526348 _107642 B GEN_PVAR_148 t s d f)). Qed.
Lemma lem4526350 {_107642 B : Type'} : (@ex (_107642 -> B)) = (@ex (_107642 -> B)).
Proof. exact (eq_refl (@ex (_107642 -> B))). Qed.
Lemma lem4526351 {_107642 B : Type'} (GEN_PVAR_148 : _107642 -> B) (t : B -> Prop) (s : _107642 -> Prop) (d : B) : (term124 _107642 B GEN_PVAR_148 t s d) = (term124 _107642 B GEN_PVAR_148 t s d).
Proof. exact (MK_COMB (@lem4526350 _107642 B) (@lem4526349 _107642 B GEN_PVAR_148 t s d)). Qed.
Lemma lem4526352 {_107642 B : Type'} (t : B -> Prop) (s : _107642 -> Prop) (d : B) : (term125 _107642 B t s d) = (term125 _107642 B t s d).
Proof. exact (fun_ext (fun GEN_PVAR_148 : _107642 -> B => @lem4526351 _107642 B GEN_PVAR_148 t s d)). Qed.
Lemma lem4526353 {_107642 B : Type'} : (@GSPEC (_107642 -> B)) = (@GSPEC (_107642 -> B)).
Proof. exact (eq_refl (@GSPEC (_107642 -> B))). Qed.
Lemma lem4526354 {_107642 B : Type'} (t : B -> Prop) (s : _107642 -> Prop) (d : B) : (term126 _107642 B t s d) = (term126 _107642 B t s d).
Proof. exact (MK_COMB (@lem4526353 _107642 B) (@lem4526352 _107642 B t s d)). Qed.
Lemma lem4526355 {_107642 B : Type'} : (@HAS_SIZE (_107642 -> B)) = (@HAS_SIZE (_107642 -> B)).
Proof. exact (eq_refl (@HAS_SIZE (_107642 -> B))). Qed.
Lemma lem4526356 {_107642 B : Type'} (t : B -> Prop) (s : _107642 -> Prop) (d : B) : (term127 _107642 B t s d) = (term127 _107642 B t s d).
Proof. exact (MK_COMB (@lem4526355 _107642 B) (@lem4526354 _107642 B t s d)). Qed.
Lemma lem4526357 {_107642 B : Type'} (t : B -> Prop) (s : _107642 -> Prop) (d : B) (n : nat) (m : nat) : (term128 _107642 B t s d n m) = (term128 _107642 B t s d n m).
Proof. exact (MK_COMB (@lem4526356 _107642 B t s d) (@lem4526298 n m)). Qed.
Lemma lem4526372 {_107642 B : Type'} (s : _107642 -> Prop) (m : nat) (t : B -> Prop) (n : nat) : (term129 _107642 B s m t n) = (term129 _107642 B s m t n).
Proof. exact (eq_refl (term129 _107642 B s m t n)). Qed.
Lemma lem4526373 {_107642 B : Type'} (t : B -> Prop) (s : _107642 -> Prop) (d : B) (n : nat) (m : nat) : (term130 _107642 B t s d n m) = (term130 _107642 B t s d n m).
Proof. exact (MK_COMB (@lem4526372 _107642 B s m t n) (@lem4526357 _107642 B t s d n m)). Qed.
Lemma lem4526374 {_107642 B : Type'} (t : B -> Prop) (d : B) (n : nat) (m : nat) : (term131 _107642 B t d n m) = (term131 _107642 B t d n m).
Proof. exact (fun_ext (fun s : _107642 -> Prop => @lem4526373 _107642 B t s d n m)). Qed.
Lemma lem4526375 {_107642 : Type'} : (@all (_107642 -> Prop)) = (@all (_107642 -> Prop)).
Proof. exact (eq_refl (@all (_107642 -> Prop))). Qed.
Lemma lem4526376 {_107642 B : Type'} (t : B -> Prop) (d : B) (n : nat) (m : nat) : (term132 _107642 B t d n m) = (term132 _107642 B t d n m).
Proof. exact (MK_COMB (@lem4526375 _107642) (@lem4526374 _107642 B t d n m)). Qed.
Lemma lem4526377 {_107642 B : Type'} (t : B -> Prop) (d : B) (n : nat) : (term133 _107642 B t d n) = (term133 _107642 B t d n).
Proof. exact (fun_ext (fun m : nat => @lem4526376 _107642 B t d n m)). Qed.
Lemma lem4526378 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4526379 {_107642 B : Type'} (t : B -> Prop) (d : B) (n : nat) : (term134 _107642 B t d n) = (term134 _107642 B t d n).
Proof. exact (MK_COMB (@lem4526378) (@lem4526377 _107642 B t d n)). Qed.
Lemma lem4526380 {_107642 B : Type'} (d : B) (n : nat) : (term135 _107642 B d n) = (term135 _107642 B d n).
Proof. exact (fun_ext (fun t : B -> Prop => @lem4526379 _107642 B t d n)). Qed.
Lemma lem4526381 {B : Type'} : (@all (B -> Prop)) = (@all (B -> Prop)).
Proof. exact (eq_refl (@all (B -> Prop))). Qed.
Lemma lem4526382 {_107642 B : Type'} (d : B) (n : nat) : (term136 _107642 B d n) = (term136 _107642 B d n).
Proof. exact (MK_COMB (@lem4526381 B) (@lem4526380 _107642 B d n)). Qed.
Lemma lem4526383 {_107642 B : Type'} (d : B) : (term137 _107642 B d) = (term137 _107642 B d).
Proof. exact (fun_ext (fun n : nat => @lem4526382 _107642 B d n)). Qed.
Lemma lem4526384 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4526385 {_107642 B : Type'} (d : B) : (term138 _107642 B d) = (term138 _107642 B d).
Proof. exact (MK_COMB (@lem4526384) (@lem4526383 _107642 B d)). Qed.
Lemma lem4526386 {_107642 B : Type'} : (term139 _107642 B) = (term139 _107642 B).
Proof. exact (fun_ext (fun d : B => @lem4526385 _107642 B d)). Qed.
Lemma lem4526387 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem4526388 {_107642 B : Type'} : (term12 _107642 B) = (term12 _107642 B).
Proof. exact (MK_COMB (@lem4526387 B) (@lem4526386 _107642 B)). Qed.
Lemma lem4526389 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4526390 {_107642 B : Type'} : (term25 _107642 B) = (term25 _107642 B).
Proof. exact (MK_COMB (@lem4526389) (@lem4526388 _107642 B)). Qed.
Lemma lem4526391 {_107642 A B : Type'} : (term29 _107642 A B) = (term29 _107642 A B).
Proof. exact (MK_COMB (@lem4526390 _107642 B) (@lem4526293 A B)). Qed.
Lemma lem4526396 (n : nat) (m : nat) : (Nat.pow n m) = (Nat.pow n m).
Proof. exact (eq_refl (Nat.pow n m)). Qed.
Lemma lem4526398 {_107639 B : Type'} (t : B -> Prop) (s : _107639 -> Prop) (d : B) (_53779 : type839 _107639 B) (h1 : _53779 = (term397 _107639 B)) : (term125 _107639 B t s d) = (_53779 t s d).
Proof. exact (SYM (@lem4526097 _107639 B t s d _53779 h1)). Qed.
Lemma lem4526399 {_107639 B : Type'} (t : B -> Prop) (s : _107639 -> Prop) (d : B) (_53779 : type839 _107639 B) (h1 : _53779 = (term397 _107639 B)) : (term125 _107639 B t s d) = (_53779 t s d).
Proof. exact (@lem4526398 _107639 B t s d _53779 h1). Qed.
Lemma lem4526400 {_107639 B : Type'} : (@GSPEC (_107639 -> B)) = (@GSPEC (_107639 -> B)).
Proof. exact (eq_refl (@GSPEC (_107639 -> B))). Qed.
Lemma lem4526401 {_107639 B : Type'} (t : B -> Prop) (s : _107639 -> Prop) (d : B) (_53779 : type839 _107639 B) (h1 : _53779 = (term397 _107639 B)) : (term126 _107639 B t s d) = (term406 _107639 B _53779 t s d).
Proof. exact (MK_COMB (@lem4526400 _107639 B) (@lem4526399 _107639 B t s d _53779 h1)). Qed.
Lemma lem4526402 {_107639 B : Type'} : (@HAS_SIZE (_107639 -> B)) = (@HAS_SIZE (_107639 -> B)).
Proof. exact (eq_refl (@HAS_SIZE (_107639 -> B))). Qed.
Lemma lem4526403 {_107639 B : Type'} (t : B -> Prop) (s : _107639 -> Prop) (d : B) (_53779 : type839 _107639 B) (h1 : _53779 = (term397 _107639 B)) : (term127 _107639 B t s d) = (term407 _107639 B _53779 t s d).
Proof. exact (MK_COMB (@lem4526402 _107639 B) (@lem4526401 _107639 B t s d _53779 h1)). Qed.
Lemma lem4526404 {_107639 B : Type'} (t : B -> Prop) (s : _107639 -> Prop) (d : B) (n : nat) (m : nat) (_53779 : type839 _107639 B) (h1 : _53779 = (term397 _107639 B)) : (term128 _107639 B t s d n m) = (term408 _107639 B _53779 t s d n m).
Proof. exact (MK_COMB (@lem4526403 _107639 B t s d _53779 h1) (@lem4526396 n m)). Qed.
Lemma lem4526419 {_107639 B : Type'} (s : _107639 -> Prop) (m : nat) (t : B -> Prop) (n : nat) : (term129 _107639 B s m t n) = (term129 _107639 B s m t n).
Proof. exact (eq_refl (term129 _107639 B s m t n)). Qed.
Lemma lem4526420 {_107639 B : Type'} (t : B -> Prop) (s : _107639 -> Prop) (d : B) (n : nat) (m : nat) (_53779 : type839 _107639 B) (h1 : _53779 = (term397 _107639 B)) : (term130 _107639 B t s d n m) = (term409 _107639 B _53779 t s d n m).
Proof. exact (MK_COMB (@lem4526419 _107639 B s m t n) (@lem4526404 _107639 B t s d n m _53779 h1)). Qed.
Lemma lem4526421 {_107639 B : Type'} (t : B -> Prop) (d : B) (n : nat) (m : nat) (_53779 : type839 _107639 B) (h1 : _53779 = (term397 _107639 B)) : (term131 _107639 B t d n m) = (term410 _107639 B _53779 t d n m).
Proof. exact (fun_ext (fun s : _107639 -> Prop => @lem4526420 _107639 B t s d n m _53779 h1)). Qed.
Lemma lem4526422 {_107639 : Type'} : (@all (_107639 -> Prop)) = (@all (_107639 -> Prop)).
Proof. exact (eq_refl (@all (_107639 -> Prop))). Qed.
Lemma lem4526423 {_107639 B : Type'} (t : B -> Prop) (d : B) (n : nat) (m : nat) (_53779 : type839 _107639 B) (h1 : _53779 = (term397 _107639 B)) : (term132 _107639 B t d n m) = (term411 _107639 B _53779 t d n m).
Proof. exact (MK_COMB (@lem4526422 _107639) (@lem4526421 _107639 B t d n m _53779 h1)). Qed.
Lemma lem4526424 {_107639 B : Type'} (t : B -> Prop) (d : B) (n : nat) (_53779 : type839 _107639 B) (h1 : _53779 = (term397 _107639 B)) : (term133 _107639 B t d n) = (term412 _107639 B _53779 t d n).
Proof. exact (fun_ext (fun m : nat => @lem4526423 _107639 B t d n m _53779 h1)). Qed.
Lemma lem4526425 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4526426 {_107639 B : Type'} (t : B -> Prop) (d : B) (n : nat) (_53779 : type839 _107639 B) (h1 : _53779 = (term397 _107639 B)) : (term134 _107639 B t d n) = (term413 _107639 B _53779 t d n).
Proof. exact (MK_COMB (@lem4526425) (@lem4526424 _107639 B t d n _53779 h1)). Qed.
Lemma lem4526427 {_107639 B : Type'} (d : B) (n : nat) (_53779 : type839 _107639 B) (h1 : _53779 = (term397 _107639 B)) : (term135 _107639 B d n) = (term414 _107639 B _53779 d n).
Proof. exact (fun_ext (fun t : B -> Prop => @lem4526426 _107639 B t d n _53779 h1)). Qed.
Lemma lem4526428 {B : Type'} : (@all (B -> Prop)) = (@all (B -> Prop)).
Proof. exact (eq_refl (@all (B -> Prop))). Qed.
Lemma lem4526429 {_107639 B : Type'} (d : B) (n : nat) (_53779 : type839 _107639 B) (h1 : _53779 = (term397 _107639 B)) : (term136 _107639 B d n) = (term415 _107639 B _53779 d n).
Proof. exact (MK_COMB (@lem4526428 B) (@lem4526427 _107639 B d n _53779 h1)). Qed.
Lemma lem4526430 {_107639 B : Type'} (d : B) (_53779 : type839 _107639 B) (h1 : _53779 = (term397 _107639 B)) : (term137 _107639 B d) = (term416 _107639 B _53779 d).
Proof. exact (fun_ext (fun n : nat => @lem4526429 _107639 B d n _53779 h1)). Qed.
Lemma lem4526431 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4526432 {_107639 B : Type'} (d : B) (_53779 : type839 _107639 B) (h1 : _53779 = (term397 _107639 B)) : (term138 _107639 B d) = (term417 _107639 B _53779 d).
Proof. exact (MK_COMB (@lem4526431) (@lem4526430 _107639 B d _53779 h1)). Qed.
Lemma lem4526433 {_107639 B : Type'} (_53779 : type839 _107639 B) (h1 : _53779 = (term397 _107639 B)) : (term139 _107639 B) = (term418 _107639 B _53779).
Proof. exact (fun_ext (fun d : B => @lem4526432 _107639 B d _53779 h1)). Qed.
Lemma lem4526434 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem4526435 {_107639 B : Type'} (_53779 : type839 _107639 B) (h1 : _53779 = (term397 _107639 B)) : (term12 _107639 B) = (term419 _107639 B _53779).
Proof. exact (MK_COMB (@lem4526434 B) (@lem4526433 _107639 B _53779 h1)). Qed.
Lemma lem4526436 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4526437 {_107639 B : Type'} (_53779 : type839 _107639 B) (h1 : _53779 = (term397 _107639 B)) : (term25 _107639 B) = (term420 _107639 B _53779).
Proof. exact (MK_COMB (@lem4526436) (@lem4526435 _107639 B _53779 h1)). Qed.
Lemma lem4526438 {_107639 _107642 A B : Type'} (_53779 : type839 _107639 B) (h1 : _53779 = (term397 _107639 B)) : (term31 _107639 _107642 A B) = (term421 _107639 _107642 A B _53779).
Proof. exact (MK_COMB (@lem4526437 _107639 B _53779 h1) (@lem4526391 _107642 A B)). Qed.
Lemma lem4526471 {_107642 A : Type'} (_53778 : type656 _107642 A) (t : _107642 -> Prop) (s : A -> Prop) (d : _107642) (n : nat) (m : nat) : (term169 _107642 A _53778 t s d n m) = (term169 _107642 A _53778 t s d n m).
Proof. exact (eq_refl (term169 _107642 A _53778 t s d n m)). Qed.
Lemma lem4526472 {_107642 A : Type'} (_53778 : type656 _107642 A) (t : _107642 -> Prop) (d : _107642) (n : nat) (m : nat) : (term170 _107642 A _53778 t d n m) = (term170 _107642 A _53778 t d n m).
Proof. exact (fun_ext (fun s : A -> Prop => @lem4526471 _107642 A _53778 t s d n m)). Qed.
Lemma lem4526473 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem4526474 {_107642 A : Type'} (_53778 : type656 _107642 A) (t : _107642 -> Prop) (d : _107642) (n : nat) (m : nat) : (term171 _107642 A _53778 t d n m) = (term171 _107642 A _53778 t d n m).
Proof. exact (MK_COMB (@lem4526473 A) (@lem4526472 _107642 A _53778 t d n m)). Qed.
Lemma lem4526475 {_107642 A : Type'} (_53778 : type656 _107642 A) (t : _107642 -> Prop) (d : _107642) (n : nat) : (term172 _107642 A _53778 t d n) = (term172 _107642 A _53778 t d n).
Proof. exact (fun_ext (fun m : nat => @lem4526474 _107642 A _53778 t d n m)). Qed.
Lemma lem4526476 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4526477 {_107642 A : Type'} (_53778 : type656 _107642 A) (t : _107642 -> Prop) (d : _107642) (n : nat) : (term173 _107642 A _53778 t d n) = (term173 _107642 A _53778 t d n).
Proof. exact (MK_COMB (@lem4526476) (@lem4526475 _107642 A _53778 t d n)). Qed.
Lemma lem4526478 {_107642 A : Type'} (_53778 : type656 _107642 A) (d : _107642) (n : nat) : (term174 _107642 A _53778 d n) = (term174 _107642 A _53778 d n).
Proof. exact (fun_ext (fun t : _107642 -> Prop => @lem4526477 _107642 A _53778 t d n)). Qed.
Lemma lem4526479 {_107642 : Type'} : (@all (_107642 -> Prop)) = (@all (_107642 -> Prop)).
Proof. exact (eq_refl (@all (_107642 -> Prop))). Qed.
Lemma lem4526480 {_107642 A : Type'} (_53778 : type656 _107642 A) (d : _107642) (n : nat) : (term175 _107642 A _53778 d n) = (term175 _107642 A _53778 d n).
Proof. exact (MK_COMB (@lem4526479 _107642) (@lem4526478 _107642 A _53778 d n)). Qed.
Lemma lem4526481 {_107642 A : Type'} (_53778 : type656 _107642 A) (d : _107642) : (term176 _107642 A _53778 d) = (term176 _107642 A _53778 d).
Proof. exact (fun_ext (fun n : nat => @lem4526480 _107642 A _53778 d n)). Qed.
Lemma lem4526482 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4526483 {_107642 A : Type'} (_53778 : type656 _107642 A) (d : _107642) : (term177 _107642 A _53778 d) = (term177 _107642 A _53778 d).
Proof. exact (MK_COMB (@lem4526482) (@lem4526481 _107642 A _53778 d)). Qed.
Lemma lem4526484 {_107642 A : Type'} (_53778 : type656 _107642 A) : (term178 _107642 A _53778) = (term178 _107642 A _53778).
Proof. exact (fun_ext (fun d : _107642 => @lem4526483 _107642 A _53778 d)). Qed.
Lemma lem4526485 {_107642 : Type'} : (@all _107642) = (@all _107642).
Proof. exact (eq_refl (@all _107642)). Qed.
Lemma lem4526486 {_107642 A : Type'} (_53778 : type656 _107642 A) : (term179 _107642 A _53778) = (term179 _107642 A _53778).
Proof. exact (MK_COMB (@lem4526485 _107642) (@lem4526484 _107642 A _53778)). Qed.
Lemma lem4526487 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4526488 {_107642 A : Type'} (_53778 : type656 _107642 A) : (term180 _107642 A _53778) = (term180 _107642 A _53778).
Proof. exact (MK_COMB (@lem4526487) (@lem4526486 _107642 A _53778)). Qed.
Lemma lem4526489 {_107639 _107642 A B : Type'} (_53778 : type656 _107642 A) (_53779 : type839 _107639 B) (h1 : _53779 = (term397 _107639 B)) : (term350 _107639 _107642 A B _53778) = (term422 _107639 _107642 A B _53778 _53779).
Proof. exact (MK_COMB (@lem4526488 _107642 A _53778) (@lem4526438 _107639 _107642 A B _53779 h1)). Qed.
Lemma lem4526522 {_107639 A : Type'} (_53777 : type656 _107639 A) (t : _107639 -> Prop) (s : A -> Prop) (d : _107639) (n : nat) (m : nat) : (term169 _107639 A _53777 t s d n m) = (term169 _107639 A _53777 t s d n m).
Proof. exact (eq_refl (term169 _107639 A _53777 t s d n m)). Qed.
Lemma lem4526523 {_107639 A : Type'} (_53777 : type656 _107639 A) (t : _107639 -> Prop) (d : _107639) (n : nat) (m : nat) : (term170 _107639 A _53777 t d n m) = (term170 _107639 A _53777 t d n m).
Proof. exact (fun_ext (fun s : A -> Prop => @lem4526522 _107639 A _53777 t s d n m)). Qed.
Lemma lem4526524 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem4526525 {_107639 A : Type'} (_53777 : type656 _107639 A) (t : _107639 -> Prop) (d : _107639) (n : nat) (m : nat) : (term171 _107639 A _53777 t d n m) = (term171 _107639 A _53777 t d n m).
Proof. exact (MK_COMB (@lem4526524 A) (@lem4526523 _107639 A _53777 t d n m)). Qed.
Lemma lem4526526 {_107639 A : Type'} (_53777 : type656 _107639 A) (t : _107639 -> Prop) (d : _107639) (n : nat) : (term172 _107639 A _53777 t d n) = (term172 _107639 A _53777 t d n).
Proof. exact (fun_ext (fun m : nat => @lem4526525 _107639 A _53777 t d n m)). Qed.
Lemma lem4526527 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4526528 {_107639 A : Type'} (_53777 : type656 _107639 A) (t : _107639 -> Prop) (d : _107639) (n : nat) : (term173 _107639 A _53777 t d n) = (term173 _107639 A _53777 t d n).
Proof. exact (MK_COMB (@lem4526527) (@lem4526526 _107639 A _53777 t d n)). Qed.
Lemma lem4526529 {_107639 A : Type'} (_53777 : type656 _107639 A) (d : _107639) (n : nat) : (term174 _107639 A _53777 d n) = (term174 _107639 A _53777 d n).
Proof. exact (fun_ext (fun t : _107639 -> Prop => @lem4526528 _107639 A _53777 t d n)). Qed.
Lemma lem4526530 {_107639 : Type'} : (@all (_107639 -> Prop)) = (@all (_107639 -> Prop)).
Proof. exact (eq_refl (@all (_107639 -> Prop))). Qed.
Lemma lem4526531 {_107639 A : Type'} (_53777 : type656 _107639 A) (d : _107639) (n : nat) : (term175 _107639 A _53777 d n) = (term175 _107639 A _53777 d n).
Proof. exact (MK_COMB (@lem4526530 _107639) (@lem4526529 _107639 A _53777 d n)). Qed.
Lemma lem4526532 {_107639 A : Type'} (_53777 : type656 _107639 A) (d : _107639) : (term176 _107639 A _53777 d) = (term176 _107639 A _53777 d).
Proof. exact (fun_ext (fun n : nat => @lem4526531 _107639 A _53777 d n)). Qed.
Lemma lem4526533 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4526534 {_107639 A : Type'} (_53777 : type656 _107639 A) (d : _107639) : (term177 _107639 A _53777 d) = (term177 _107639 A _53777 d).
Proof. exact (MK_COMB (@lem4526533) (@lem4526532 _107639 A _53777 d)). Qed.
Lemma lem4526535 {_107639 A : Type'} (_53777 : type656 _107639 A) : (term178 _107639 A _53777) = (term178 _107639 A _53777).
Proof. exact (fun_ext (fun d : _107639 => @lem4526534 _107639 A _53777 d)). Qed.
Lemma lem4526536 {_107639 : Type'} : (@all _107639) = (@all _107639).
Proof. exact (eq_refl (@all _107639)). Qed.
Lemma lem4526537 {_107639 A : Type'} (_53777 : type656 _107639 A) : (term179 _107639 A _53777) = (term179 _107639 A _53777).
Proof. exact (MK_COMB (@lem4526536 _107639) (@lem4526535 _107639 A _53777)). Qed.
Lemma lem4526538 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4526539 {_107639 A : Type'} (_53777 : type656 _107639 A) : (term180 _107639 A _53777) = (term180 _107639 A _53777).
Proof. exact (MK_COMB (@lem4526538) (@lem4526537 _107639 A _53777)). Qed.
Lemma lem4526540 {_107639 _107642 A B : Type'} (_53777 : type656 _107639 A) (_53778 : type656 _107642 A) (_53779 : type839 _107639 B) (h1 : _53779 = (term397 _107639 B)) : (term351 _107639 _107642 A B _53777 _53778) = (term423 _107639 _107642 A B _53777 _53778 _53779).
Proof. exact (MK_COMB (@lem4526539 _107639 A _53777) (@lem4526489 _107639 _107642 A B _53778 _53779 h1)). Qed.
Lemma lem4526573 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (t : _107639 -> Prop) (s : _107642 -> Prop) (d : _107639) (n : nat) (m : nat) : (term169 _107639 _107642 _53776 t s d n m) = (term169 _107639 _107642 _53776 t s d n m).
Proof. exact (eq_refl (term169 _107639 _107642 _53776 t s d n m)). Qed.
Lemma lem4526574 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (t : _107639 -> Prop) (d : _107639) (n : nat) (m : nat) : (term170 _107639 _107642 _53776 t d n m) = (term170 _107639 _107642 _53776 t d n m).
Proof. exact (fun_ext (fun s : _107642 -> Prop => @lem4526573 _107639 _107642 _53776 t s d n m)). Qed.
Lemma lem4526575 {_107642 : Type'} : (@all (_107642 -> Prop)) = (@all (_107642 -> Prop)).
Proof. exact (eq_refl (@all (_107642 -> Prop))). Qed.
Lemma lem4526576 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (t : _107639 -> Prop) (d : _107639) (n : nat) (m : nat) : (term171 _107639 _107642 _53776 t d n m) = (term171 _107639 _107642 _53776 t d n m).
Proof. exact (MK_COMB (@lem4526575 _107642) (@lem4526574 _107639 _107642 _53776 t d n m)). Qed.
Lemma lem4526577 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (t : _107639 -> Prop) (d : _107639) (n : nat) : (term172 _107639 _107642 _53776 t d n) = (term172 _107639 _107642 _53776 t d n).
Proof. exact (fun_ext (fun m : nat => @lem4526576 _107639 _107642 _53776 t d n m)). Qed.
Lemma lem4526578 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4526579 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (t : _107639 -> Prop) (d : _107639) (n : nat) : (term173 _107639 _107642 _53776 t d n) = (term173 _107639 _107642 _53776 t d n).
Proof. exact (MK_COMB (@lem4526578) (@lem4526577 _107639 _107642 _53776 t d n)). Qed.
Lemma lem4526580 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (d : _107639) (n : nat) : (term174 _107639 _107642 _53776 d n) = (term174 _107639 _107642 _53776 d n).
Proof. exact (fun_ext (fun t : _107639 -> Prop => @lem4526579 _107639 _107642 _53776 t d n)). Qed.
Lemma lem4526581 {_107639 : Type'} : (@all (_107639 -> Prop)) = (@all (_107639 -> Prop)).
Proof. exact (eq_refl (@all (_107639 -> Prop))). Qed.
Lemma lem4526582 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (d : _107639) (n : nat) : (term175 _107639 _107642 _53776 d n) = (term175 _107639 _107642 _53776 d n).
Proof. exact (MK_COMB (@lem4526581 _107639) (@lem4526580 _107639 _107642 _53776 d n)). Qed.
Lemma lem4526583 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (d : _107639) : (term176 _107639 _107642 _53776 d) = (term176 _107639 _107642 _53776 d).
Proof. exact (fun_ext (fun n : nat => @lem4526582 _107639 _107642 _53776 d n)). Qed.
Lemma lem4526584 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4526585 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (d : _107639) : (term177 _107639 _107642 _53776 d) = (term177 _107639 _107642 _53776 d).
Proof. exact (MK_COMB (@lem4526584) (@lem4526583 _107639 _107642 _53776 d)). Qed.
Lemma lem4526586 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) : (term178 _107639 _107642 _53776) = (term178 _107639 _107642 _53776).
Proof. exact (fun_ext (fun d : _107639 => @lem4526585 _107639 _107642 _53776 d)). Qed.
Lemma lem4526587 {_107639 : Type'} : (@all _107639) = (@all _107639).
Proof. exact (eq_refl (@all _107639)). Qed.
Lemma lem4526588 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) : (term179 _107639 _107642 _53776) = (term179 _107639 _107642 _53776).
Proof. exact (MK_COMB (@lem4526587 _107639) (@lem4526586 _107639 _107642 _53776)). Qed.
Lemma lem4526589 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4526590 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) : (term180 _107639 _107642 _53776) = (term180 _107639 _107642 _53776).
Proof. exact (MK_COMB (@lem4526589) (@lem4526588 _107639 _107642 _53776)). Qed.
Lemma lem4526591 {_107639 _107642 A B : Type'} (_53776 : type656 _107639 _107642) (_53777 : type656 _107639 A) (_53778 : type656 _107642 A) (_53779 : type839 _107639 B) (h1 : _53779 = (term397 _107639 B)) : (term352 _107639 _107642 A B _53776 _53777 _53778) = (term424 _107639 _107642 A B _53776 _53777 _53778 _53779).
Proof. exact (MK_COMB (@lem4526590 _107639 _107642 _53776) (@lem4526540 _107639 _107642 A B _53777 _53778 _53779 h1)). Qed.
Lemma lem4526612 (s : nat -> Prop) (n : nat) : ((@HAS_SIZE nat s n) = (term182 s n)) = ((@HAS_SIZE nat s n) = (term182 s n)).
Proof. exact (eq_refl ((@HAS_SIZE nat s n) = (term182 s n))). Qed.
Lemma lem4526613 (s : nat -> Prop) : (term183 s) = (term183 s).
Proof. exact (fun_ext (fun n : nat => @lem4526612 s n)). Qed.
Lemma lem4526614 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4526615 (s : nat -> Prop) : (term184 s) = (term184 s).
Proof. exact (MK_COMB (@lem4526614) (@lem4526613 s)). Qed.
Lemma lem4526616 : term185 = term185.
Proof. exact (fun_ext (fun s : nat -> Prop => @lem4526615 s)). Qed.
Lemma lem4526617 : (@all (nat -> Prop)) = (@all (nat -> Prop)).
Proof. exact (eq_refl (@all (nat -> Prop))). Qed.
Lemma lem4526618 : term15 = term15.
Proof. exact (MK_COMB (@lem4526617) (@lem4526616)). Qed.
Lemma lem4526619 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4526620 : term39 = term39.
Proof. exact (MK_COMB (@lem4526619) (@lem4526618)). Qed.
Lemma lem4526621 {_107639 _107642 A B : Type'} (_53776 : type656 _107639 _107642) (_53777 : type656 _107639 A) (_53778 : type656 _107642 A) (_53779 : type839 _107639 B) (h1 : _53779 = (term397 _107639 B)) : (term353 _107639 _107642 A B _53776 _53777 _53778) = (term425 _107639 _107642 A B _53776 _53777 _53778 _53779).
Proof. exact (MK_COMB (@lem4526620) (@lem4526591 _107639 _107642 A B _53776 _53777 _53778 _53779 h1)). Qed.
Lemma lem4526642 {A : Type'} (s : type704 A) (n : nat) : ((@HAS_SIZE (A -> nat) s n) = (term187 A s n)) = ((@HAS_SIZE (A -> nat) s n) = (term187 A s n)).
Proof. exact (eq_refl ((@HAS_SIZE (A -> nat) s n) = (term187 A s n))). Qed.
Lemma lem4526643 {A : Type'} (s : type704 A) : (term188 A s) = (term188 A s).
Proof. exact (fun_ext (fun n : nat => @lem4526642 A s n)). Qed.
Lemma lem4526644 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4526645 {A : Type'} (s : type704 A) : (term189 A s) = (term189 A s).
Proof. exact (MK_COMB (@lem4526644) (@lem4526643 A s)). Qed.
Lemma lem4526646 {A : Type'} : (term190 A) = (term190 A).
Proof. exact (fun_ext (fun s : type704 A => @lem4526645 A s)). Qed.
Lemma lem4526647 {A : Type'} : (@all ((A -> nat) -> Prop)) = (@all ((A -> nat) -> Prop)).
Proof. exact (eq_refl (@all ((A -> nat) -> Prop))). Qed.
Lemma lem4526648 {A : Type'} : (term16 A) = (term16 A).
Proof. exact (MK_COMB (@lem4526647 A) (@lem4526646 A)). Qed.
Lemma lem4526649 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4526650 {A : Type'} : (term42 A) = (term42 A).
Proof. exact (MK_COMB (@lem4526649) (@lem4526648 A)). Qed.
Lemma lem4526651 {_107639 _107642 A B : Type'} (_53776 : type656 _107639 _107642) (_53777 : type656 _107639 A) (_53778 : type656 _107642 A) (_53779 : type839 _107639 B) (h1 : _53779 = (term397 _107639 B)) : (term354 _107639 _107642 A B _53776 _53777 _53778) = (term426 _107639 _107642 A B _53776 _53777 _53778 _53779).
Proof. exact (MK_COMB (@lem4526650 A) (@lem4526621 _107639 _107642 A B _53776 _53777 _53778 _53779 h1)). Qed.
Lemma lem4526672 {A B : Type'} (s : type572 A B) (n : nat) : ((@HAS_SIZE (A -> B) s n) = (term192 A B s n)) = ((@HAS_SIZE (A -> B) s n) = (term192 A B s n)).
Proof. exact (eq_refl ((@HAS_SIZE (A -> B) s n) = (term192 A B s n))). Qed.
Lemma lem4526673 {A B : Type'} (s : type572 A B) : (term193 A B s) = (term193 A B s).
Proof. exact (fun_ext (fun n : nat => @lem4526672 A B s n)). Qed.
Lemma lem4526674 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4526675 {A B : Type'} (s : type572 A B) : (term194 A B s) = (term194 A B s).
Proof. exact (MK_COMB (@lem4526674) (@lem4526673 A B s)). Qed.
Lemma lem4526676 {A B : Type'} : (term195 A B) = (term195 A B).
Proof. exact (fun_ext (fun s : type572 A B => @lem4526675 A B s)). Qed.
Lemma lem4526677 {A B : Type'} : (@all ((A -> B) -> Prop)) = (@all ((A -> B) -> Prop)).
Proof. exact (eq_refl (@all ((A -> B) -> Prop))). Qed.
Lemma lem4526678 {A B : Type'} : (term17 A B) = (term17 A B).
Proof. exact (MK_COMB (@lem4526677 A B) (@lem4526676 A B)). Qed.
Lemma lem4526679 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4526680 {A B : Type'} : (term45 A B) = (term45 A B).
Proof. exact (MK_COMB (@lem4526679) (@lem4526678 A B)). Qed.
Lemma lem4526681 {_107639 _107642 A B : Type'} (_53776 : type656 _107639 _107642) (_53777 : type656 _107639 A) (_53778 : type656 _107642 A) (_53779 : type839 _107639 B) (h1 : _53779 = (term397 _107639 B)) : (term355 _107639 _107642 A B _53776 _53777 _53778) = (term427 _107639 _107642 A B _53776 _53777 _53778 _53779).
Proof. exact (MK_COMB (@lem4526680 A B) (@lem4526651 _107639 _107642 A B _53776 _53777 _53778 _53779 h1)). Qed.
Lemma lem4526702 {_107642 A : Type'} (s : type805 _107642 A) (n : nat) : ((@HAS_SIZE (A -> _107642) s n) = (term197 _107642 A s n)) = ((@HAS_SIZE (A -> _107642) s n) = (term197 _107642 A s n)).
Proof. exact (eq_refl ((@HAS_SIZE (A -> _107642) s n) = (term197 _107642 A s n))). Qed.
Lemma lem4526703 {_107642 A : Type'} (s : type805 _107642 A) : (term198 _107642 A s) = (term198 _107642 A s).
Proof. exact (fun_ext (fun n : nat => @lem4526702 _107642 A s n)). Qed.
Lemma lem4526704 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4526705 {_107642 A : Type'} (s : type805 _107642 A) : (term199 _107642 A s) = (term199 _107642 A s).
Proof. exact (MK_COMB (@lem4526704) (@lem4526703 _107642 A s)). Qed.
Lemma lem4526706 {_107642 A : Type'} : (term200 _107642 A) = (term200 _107642 A).
Proof. exact (fun_ext (fun s : type805 _107642 A => @lem4526705 _107642 A s)). Qed.
Lemma lem4526707 {_107642 A : Type'} : (@all ((A -> _107642) -> Prop)) = (@all ((A -> _107642) -> Prop)).
Proof. exact (eq_refl (@all ((A -> _107642) -> Prop))). Qed.
Lemma lem4526708 {_107642 A : Type'} : (term18 _107642 A) = (term18 _107642 A).
Proof. exact (MK_COMB (@lem4526707 _107642 A) (@lem4526706 _107642 A)). Qed.
Lemma lem4526709 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4526710 {_107642 A : Type'} : (term48 _107642 A) = (term48 _107642 A).
Proof. exact (MK_COMB (@lem4526709) (@lem4526708 _107642 A)). Qed.
Lemma lem4526711 {_107639 _107642 A B : Type'} (_53776 : type656 _107639 _107642) (_53777 : type656 _107639 A) (_53778 : type656 _107642 A) (_53779 : type839 _107639 B) (h1 : _53779 = (term397 _107639 B)) : (term356 _107639 _107642 A B _53776 _53777 _53778) = (term428 _107639 _107642 A B _53776 _53777 _53778 _53779).
Proof. exact (MK_COMB (@lem4526710 _107642 A) (@lem4526681 _107639 _107642 A B _53776 _53777 _53778 _53779 h1)). Qed.
Lemma lem4526732 {_107639 A : Type'} (s : type805 _107639 A) (n : nat) : ((@HAS_SIZE (A -> _107639) s n) = (term197 _107639 A s n)) = ((@HAS_SIZE (A -> _107639) s n) = (term197 _107639 A s n)).
Proof. exact (eq_refl ((@HAS_SIZE (A -> _107639) s n) = (term197 _107639 A s n))). Qed.
Lemma lem4526733 {_107639 A : Type'} (s : type805 _107639 A) : (term198 _107639 A s) = (term198 _107639 A s).
Proof. exact (fun_ext (fun n : nat => @lem4526732 _107639 A s n)). Qed.
Lemma lem4526734 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4526735 {_107639 A : Type'} (s : type805 _107639 A) : (term199 _107639 A s) = (term199 _107639 A s).
Proof. exact (MK_COMB (@lem4526734) (@lem4526733 _107639 A s)). Qed.
Lemma lem4526736 {_107639 A : Type'} : (term200 _107639 A) = (term200 _107639 A).
Proof. exact (fun_ext (fun s : type805 _107639 A => @lem4526735 _107639 A s)). Qed.
Lemma lem4526737 {_107639 A : Type'} : (@all ((A -> _107639) -> Prop)) = (@all ((A -> _107639) -> Prop)).
Proof. exact (eq_refl (@all ((A -> _107639) -> Prop))). Qed.
Lemma lem4526738 {_107639 A : Type'} : (term18 _107639 A) = (term18 _107639 A).
Proof. exact (MK_COMB (@lem4526737 _107639 A) (@lem4526736 _107639 A)). Qed.
Lemma lem4526739 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4526740 {_107639 A : Type'} : (term48 _107639 A) = (term48 _107639 A).
Proof. exact (MK_COMB (@lem4526739) (@lem4526738 _107639 A)). Qed.
Lemma lem4526741 {_107639 _107642 A B : Type'} (_53776 : type656 _107639 _107642) (_53777 : type656 _107639 A) (_53778 : type656 _107642 A) (_53779 : type839 _107639 B) (h1 : _53779 = (term397 _107639 B)) : (term357 _107639 _107642 A B _53776 _53777 _53778) = (term429 _107639 _107642 A B _53776 _53777 _53778 _53779).
Proof. exact (MK_COMB (@lem4526740 _107639 A) (@lem4526711 _107639 _107642 A B _53776 _53777 _53778 _53779 h1)). Qed.
Lemma lem4526762 {_107642 B : Type'} (s : type572 _107642 B) (n : nat) : ((@HAS_SIZE (_107642 -> B) s n) = (term192 _107642 B s n)) = ((@HAS_SIZE (_107642 -> B) s n) = (term192 _107642 B s n)).
Proof. exact (eq_refl ((@HAS_SIZE (_107642 -> B) s n) = (term192 _107642 B s n))). Qed.
Lemma lem4526763 {_107642 B : Type'} (s : type572 _107642 B) : (term193 _107642 B s) = (term193 _107642 B s).
Proof. exact (fun_ext (fun n : nat => @lem4526762 _107642 B s n)). Qed.
Lemma lem4526764 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4526765 {_107642 B : Type'} (s : type572 _107642 B) : (term194 _107642 B s) = (term194 _107642 B s).
Proof. exact (MK_COMB (@lem4526764) (@lem4526763 _107642 B s)). Qed.
Lemma lem4526766 {_107642 B : Type'} : (term195 _107642 B) = (term195 _107642 B).
Proof. exact (fun_ext (fun s : type572 _107642 B => @lem4526765 _107642 B s)). Qed.
Lemma lem4526767 {_107642 B : Type'} : (@all ((_107642 -> B) -> Prop)) = (@all ((_107642 -> B) -> Prop)).
Proof. exact (eq_refl (@all ((_107642 -> B) -> Prop))). Qed.
Lemma lem4526768 {_107642 B : Type'} : (term17 _107642 B) = (term17 _107642 B).
Proof. exact (MK_COMB (@lem4526767 _107642 B) (@lem4526766 _107642 B)). Qed.
Lemma lem4526769 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4526770 {_107642 B : Type'} : (term45 _107642 B) = (term45 _107642 B).
Proof. exact (MK_COMB (@lem4526769) (@lem4526768 _107642 B)). Qed.
Lemma lem4526771 {_107639 _107642 A B : Type'} (_53776 : type656 _107639 _107642) (_53777 : type656 _107639 A) (_53778 : type656 _107642 A) (_53779 : type839 _107639 B) (h1 : _53779 = (term397 _107639 B)) : (term358 _107639 _107642 A B _53776 _53777 _53778) = (term430 _107639 _107642 A B _53776 _53777 _53778 _53779).
Proof. exact (MK_COMB (@lem4526770 _107642 B) (@lem4526741 _107639 _107642 A B _53776 _53777 _53778 _53779 h1)). Qed.
Lemma lem4526792 {_107639 _107642 : Type'} (s : type805 _107639 _107642) (n : nat) : ((@HAS_SIZE (_107642 -> _107639) s n) = (term197 _107639 _107642 s n)) = ((@HAS_SIZE (_107642 -> _107639) s n) = (term197 _107639 _107642 s n)).
Proof. exact (eq_refl ((@HAS_SIZE (_107642 -> _107639) s n) = (term197 _107639 _107642 s n))). Qed.
Lemma lem4526793 {_107639 _107642 : Type'} (s : type805 _107639 _107642) : (term198 _107639 _107642 s) = (term198 _107639 _107642 s).
Proof. exact (fun_ext (fun n : nat => @lem4526792 _107639 _107642 s n)). Qed.
Lemma lem4526794 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4526795 {_107639 _107642 : Type'} (s : type805 _107639 _107642) : (term199 _107639 _107642 s) = (term199 _107639 _107642 s).
Proof. exact (MK_COMB (@lem4526794) (@lem4526793 _107639 _107642 s)). Qed.
Lemma lem4526796 {_107639 _107642 : Type'} : (term200 _107639 _107642) = (term200 _107639 _107642).
Proof. exact (fun_ext (fun s : type805 _107639 _107642 => @lem4526795 _107639 _107642 s)). Qed.
Lemma lem4526797 {_107639 _107642 : Type'} : (@all ((_107642 -> _107639) -> Prop)) = (@all ((_107642 -> _107639) -> Prop)).
Proof. exact (eq_refl (@all ((_107642 -> _107639) -> Prop))). Qed.
Lemma lem4526798 {_107639 _107642 : Type'} : (term18 _107639 _107642) = (term18 _107639 _107642).
Proof. exact (MK_COMB (@lem4526797 _107639 _107642) (@lem4526796 _107639 _107642)). Qed.
Lemma lem4526799 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4526800 {_107639 _107642 : Type'} : (term48 _107639 _107642) = (term48 _107639 _107642).
Proof. exact (MK_COMB (@lem4526799) (@lem4526798 _107639 _107642)). Qed.
Lemma lem4526801 {_107639 _107642 A B : Type'} (_53776 : type656 _107639 _107642) (_53777 : type656 _107639 A) (_53778 : type656 _107642 A) (_53779 : type839 _107639 B) (h1 : _53779 = (term397 _107639 B)) : (term359 _107639 _107642 A B _53776 _53777 _53778) = (term431 _107639 _107642 A B _53776 _53777 _53778 _53779).
Proof. exact (MK_COMB (@lem4526800 _107639 _107642) (@lem4526771 _107639 _107642 A B _53776 _53777 _53778 _53779 h1)). Qed.
Lemma lem4526822 {_107639 B : Type'} (s : type572 _107639 B) (n : nat) : ((@HAS_SIZE (_107639 -> B) s n) = (term192 _107639 B s n)) = ((@HAS_SIZE (_107639 -> B) s n) = (term192 _107639 B s n)).
Proof. exact (eq_refl ((@HAS_SIZE (_107639 -> B) s n) = (term192 _107639 B s n))). Qed.
Lemma lem4526823 {_107639 B : Type'} (s : type572 _107639 B) : (term193 _107639 B s) = (term193 _107639 B s).
Proof. exact (fun_ext (fun n : nat => @lem4526822 _107639 B s n)). Qed.
Lemma lem4526824 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4526825 {_107639 B : Type'} (s : type572 _107639 B) : (term194 _107639 B s) = (term194 _107639 B s).
Proof. exact (MK_COMB (@lem4526824) (@lem4526823 _107639 B s)). Qed.
Lemma lem4526826 {_107639 B : Type'} : (term195 _107639 B) = (term195 _107639 B).
Proof. exact (fun_ext (fun s : type572 _107639 B => @lem4526825 _107639 B s)). Qed.
Lemma lem4526827 {_107639 B : Type'} : (@all ((_107639 -> B) -> Prop)) = (@all ((_107639 -> B) -> Prop)).
Proof. exact (eq_refl (@all ((_107639 -> B) -> Prop))). Qed.
Lemma lem4526828 {_107639 B : Type'} : (term17 _107639 B) = (term17 _107639 B).
Proof. exact (MK_COMB (@lem4526827 _107639 B) (@lem4526826 _107639 B)). Qed.
Lemma lem4526829 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4526830 {_107639 B : Type'} : (term45 _107639 B) = (term45 _107639 B).
Proof. exact (MK_COMB (@lem4526829) (@lem4526828 _107639 B)). Qed.
Lemma lem4526831 {_107639 _107642 A B : Type'} (_53776 : type656 _107639 _107642) (_53777 : type656 _107639 A) (_53778 : type656 _107642 A) (_53779 : type839 _107639 B) (h1 : _53779 = (term397 _107639 B)) : (term360 _107639 _107642 A B _53776 _53777 _53778) = (term432 _107639 _107642 A B _53776 _53777 _53778 _53779).
Proof. exact (MK_COMB (@lem4526830 _107639 B) (@lem4526801 _107639 _107642 A B _53776 _53777 _53778 _53779 h1)). Qed.
Lemma lem4526852 {B : Type'} (s : B -> Prop) (n : nat) : ((@HAS_SIZE B s n) = (term206 B s n)) = ((@HAS_SIZE B s n) = (term206 B s n)).
Proof. exact (eq_refl ((@HAS_SIZE B s n) = (term206 B s n))). Qed.
Lemma lem4526853 {B : Type'} (s : B -> Prop) : (term207 B s) = (term207 B s).
Proof. exact (fun_ext (fun n : nat => @lem4526852 B s n)). Qed.
Lemma lem4526854 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4526855 {B : Type'} (s : B -> Prop) : (term208 B s) = (term208 B s).
Proof. exact (MK_COMB (@lem4526854) (@lem4526853 B s)). Qed.
Lemma lem4526856 {B : Type'} : (term209 B) = (term209 B).
Proof. exact (fun_ext (fun s : B -> Prop => @lem4526855 B s)). Qed.
Lemma lem4526857 {B : Type'} : (@all (B -> Prop)) = (@all (B -> Prop)).
Proof. exact (eq_refl (@all (B -> Prop))). Qed.
Lemma lem4526858 {B : Type'} : (term14 B) = (term14 B).
Proof. exact (MK_COMB (@lem4526857 B) (@lem4526856 B)). Qed.
Lemma lem4526859 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4526860 {B : Type'} : (term59 B) = (term59 B).
Proof. exact (MK_COMB (@lem4526859) (@lem4526858 B)). Qed.
Lemma lem4526861 {_107639 _107642 A B : Type'} (_53776 : type656 _107639 _107642) (_53777 : type656 _107639 A) (_53778 : type656 _107642 A) (_53779 : type839 _107639 B) (h1 : _53779 = (term397 _107639 B)) : (term361 _107639 _107642 A B _53776 _53777 _53778) = (term433 _107639 _107642 A B _53776 _53777 _53778 _53779).
Proof. exact (MK_COMB (@lem4526860 B) (@lem4526831 _107639 _107642 A B _53776 _53777 _53778 _53779 h1)). Qed.
Lemma lem4526882 {A : Type'} (s : A -> Prop) (n : nat) : ((@HAS_SIZE A s n) = (term206 A s n)) = ((@HAS_SIZE A s n) = (term206 A s n)).
Proof. exact (eq_refl ((@HAS_SIZE A s n) = (term206 A s n))). Qed.
Lemma lem4526883 {A : Type'} (s : A -> Prop) : (term207 A s) = (term207 A s).
Proof. exact (fun_ext (fun n : nat => @lem4526882 A s n)). Qed.
Lemma lem4526884 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4526885 {A : Type'} (s : A -> Prop) : (term208 A s) = (term208 A s).
Proof. exact (MK_COMB (@lem4526884) (@lem4526883 A s)). Qed.
Lemma lem4526886 {A : Type'} : (term209 A) = (term209 A).
Proof. exact (fun_ext (fun s : A -> Prop => @lem4526885 A s)). Qed.
Lemma lem4526887 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem4526888 {A : Type'} : (term14 A) = (term14 A).
Proof. exact (MK_COMB (@lem4526887 A) (@lem4526886 A)). Qed.
Lemma lem4526889 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4526890 {A : Type'} : (term59 A) = (term59 A).
Proof. exact (MK_COMB (@lem4526889) (@lem4526888 A)). Qed.
Lemma lem4526891 {_107639 _107642 A B : Type'} (_53776 : type656 _107639 _107642) (_53777 : type656 _107639 A) (_53778 : type656 _107642 A) (_53779 : type839 _107639 B) (h1 : _53779 = (term397 _107639 B)) : (term362 _107639 _107642 A B _53776 _53777 _53778) = (term434 _107639 _107642 A B _53776 _53777 _53778 _53779).
Proof. exact (MK_COMB (@lem4526890 A) (@lem4526861 _107639 _107642 A B _53776 _53777 _53778 _53779 h1)). Qed.
Lemma lem4526912 {_107642 : Type'} (s : _107642 -> Prop) (n : nat) : ((@HAS_SIZE _107642 s n) = (term206 _107642 s n)) = ((@HAS_SIZE _107642 s n) = (term206 _107642 s n)).
Proof. exact (eq_refl ((@HAS_SIZE _107642 s n) = (term206 _107642 s n))). Qed.
Lemma lem4526913 {_107642 : Type'} (s : _107642 -> Prop) : (term207 _107642 s) = (term207 _107642 s).
Proof. exact (fun_ext (fun n : nat => @lem4526912 _107642 s n)). Qed.
Lemma lem4526914 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4526915 {_107642 : Type'} (s : _107642 -> Prop) : (term208 _107642 s) = (term208 _107642 s).
Proof. exact (MK_COMB (@lem4526914) (@lem4526913 _107642 s)). Qed.
Lemma lem4526916 {_107642 : Type'} : (term209 _107642) = (term209 _107642).
Proof. exact (fun_ext (fun s : _107642 -> Prop => @lem4526915 _107642 s)). Qed.
Lemma lem4526917 {_107642 : Type'} : (@all (_107642 -> Prop)) = (@all (_107642 -> Prop)).
Proof. exact (eq_refl (@all (_107642 -> Prop))). Qed.
Lemma lem4526918 {_107642 : Type'} : (term14 _107642) = (term14 _107642).
Proof. exact (MK_COMB (@lem4526917 _107642) (@lem4526916 _107642)). Qed.
Lemma lem4526919 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4526920 {_107642 : Type'} : (term59 _107642) = (term59 _107642).
Proof. exact (MK_COMB (@lem4526919) (@lem4526918 _107642)). Qed.
Lemma lem4526921 {_107639 _107642 A B : Type'} (_53776 : type656 _107639 _107642) (_53777 : type656 _107639 A) (_53778 : type656 _107642 A) (_53779 : type839 _107639 B) (h1 : _53779 = (term397 _107639 B)) : (term363 _107639 _107642 A B _53776 _53777 _53778) = (term435 _107639 _107642 A B _53776 _53777 _53778 _53779).
Proof. exact (MK_COMB (@lem4526920 _107642) (@lem4526891 _107639 _107642 A B _53776 _53777 _53778 _53779 h1)). Qed.
Lemma lem4526942 {_107639 : Type'} (s : _107639 -> Prop) (n : nat) : ((@HAS_SIZE _107639 s n) = (term206 _107639 s n)) = ((@HAS_SIZE _107639 s n) = (term206 _107639 s n)).
Proof. exact (eq_refl ((@HAS_SIZE _107639 s n) = (term206 _107639 s n))). Qed.
Lemma lem4526943 {_107639 : Type'} (s : _107639 -> Prop) : (term207 _107639 s) = (term207 _107639 s).
Proof. exact (fun_ext (fun n : nat => @lem4526942 _107639 s n)). Qed.
Lemma lem4526944 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4526945 {_107639 : Type'} (s : _107639 -> Prop) : (term208 _107639 s) = (term208 _107639 s).
Proof. exact (MK_COMB (@lem4526944) (@lem4526943 _107639 s)). Qed.
Lemma lem4526946 {_107639 : Type'} : (term209 _107639) = (term209 _107639).
Proof. exact (fun_ext (fun s : _107639 -> Prop => @lem4526945 _107639 s)). Qed.
Lemma lem4526947 {_107639 : Type'} : (@all (_107639 -> Prop)) = (@all (_107639 -> Prop)).
Proof. exact (eq_refl (@all (_107639 -> Prop))). Qed.
Lemma lem4526948 {_107639 : Type'} : (term14 _107639) = (term14 _107639).
Proof. exact (MK_COMB (@lem4526947 _107639) (@lem4526946 _107639)). Qed.
Lemma lem4526949 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4526950 {_107639 : Type'} : (term59 _107639) = (term59 _107639).
Proof. exact (MK_COMB (@lem4526949) (@lem4526948 _107639)). Qed.
Lemma lem4526951 {_107639 _107642 A B : Type'} (_53776 : type656 _107639 _107642) (_53777 : type656 _107639 A) (_53778 : type656 _107642 A) (_53779 : type839 _107639 B) (h1 : _53779 = (term397 _107639 B)) : (term364 _107639 _107642 A B _53776 _53777 _53778) = (term436 _107639 _107642 A B _53776 _53777 _53778 _53779).
Proof. exact (MK_COMB (@lem4526950 _107639) (@lem4526921 _107639 _107642 A B _53776 _53777 _53778 _53779 h1)). Qed.
Lemma lem4526972 {_100044 : Type'} (s : _100044 -> Prop) (n : nat) : ((@HAS_SIZE _100044 s n) = (term206 _100044 s n)) = ((@HAS_SIZE _100044 s n) = (term206 _100044 s n)).
Proof. exact (eq_refl ((@HAS_SIZE _100044 s n) = (term206 _100044 s n))). Qed.
Lemma lem4526973 {_100044 : Type'} (s : _100044 -> Prop) : (term207 _100044 s) = (term207 _100044 s).
Proof. exact (fun_ext (fun n : nat => @lem4526972 _100044 s n)). Qed.
Lemma lem4526974 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4526975 {_100044 : Type'} (s : _100044 -> Prop) : (term208 _100044 s) = (term208 _100044 s).
Proof. exact (MK_COMB (@lem4526974) (@lem4526973 _100044 s)). Qed.
Lemma lem4526976 {_100044 : Type'} : (term209 _100044) = (term209 _100044).
Proof. exact (fun_ext (fun s : _100044 -> Prop => @lem4526975 _100044 s)). Qed.
Lemma lem4526977 {_100044 : Type'} : (@all (_100044 -> Prop)) = (@all (_100044 -> Prop)).
Proof. exact (eq_refl (@all (_100044 -> Prop))). Qed.
Lemma lem4526978 {_100044 : Type'} : (term14 _100044) = (term14 _100044).
Proof. exact (MK_COMB (@lem4526977 _100044) (@lem4526976 _100044)). Qed.
Lemma lem4526979 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4526980 {_100044 : Type'} : (term59 _100044) = (term59 _100044).
Proof. exact (MK_COMB (@lem4526979) (@lem4526978 _100044)). Qed.
Lemma lem4526981 {_100044 _107639 _107642 A B : Type'} (_53776 : type656 _107639 _107642) (_53777 : type656 _107639 A) (_53778 : type656 _107642 A) (_53779 : type839 _107639 B) (h1 : _53779 = (term397 _107639 B)) : (term365 _100044 _107639 _107642 A B _53776 _53777 _53778) = (term437 _100044 _107639 _107642 A B _53776 _53777 _53778 _53779).
Proof. exact (MK_COMB (@lem4526980 _100044) (@lem4526951 _107639 _107642 A B _53776 _53777 _53778 _53779 h1)). Qed.
Lemma lem4527016 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (d : _107639) (t : _107639 -> Prop) (s : _107642 -> Prop) : (term222 _107639 _107642 _53776 d t s) = (term222 _107639 _107642 _53776 d t s).
Proof. exact (eq_refl (term222 _107639 _107642 _53776 d t s)). Qed.
Lemma lem4527017 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (d : _107639) (s : _107642 -> Prop) : (term224 _107639 _107642 _53776 d s) = (term224 _107639 _107642 _53776 d s).
Proof. exact (fun_ext (fun t : _107639 -> Prop => @lem4527016 _107639 _107642 _53776 d t s)). Qed.
Lemma lem4527018 {_107639 : Type'} : (@all (_107639 -> Prop)) = (@all (_107639 -> Prop)).
Proof. exact (eq_refl (@all (_107639 -> Prop))). Qed.
Lemma lem4527019 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (d : _107639) (s : _107642 -> Prop) : (term226 _107639 _107642 _53776 d s) = (term226 _107639 _107642 _53776 d s).
Proof. exact (MK_COMB (@lem4527018 _107639) (@lem4527017 _107639 _107642 _53776 d s)). Qed.
Lemma lem4527020 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (d : _107639) : (term228 _107639 _107642 _53776 d) = (term228 _107639 _107642 _53776 d).
Proof. exact (fun_ext (fun s : _107642 -> Prop => @lem4527019 _107639 _107642 _53776 d s)). Qed.
Lemma lem4527021 {_107642 : Type'} : (@all (_107642 -> Prop)) = (@all (_107642 -> Prop)).
Proof. exact (eq_refl (@all (_107642 -> Prop))). Qed.
Lemma lem4527022 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (d : _107639) : (term229 _107639 _107642 _53776 d) = (term229 _107639 _107642 _53776 d).
Proof. exact (MK_COMB (@lem4527021 _107642) (@lem4527020 _107639 _107642 _53776 d)). Qed.
Lemma lem4527023 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem4527024 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (d : _107639) : (term230 _107639 _107642 _53776 d) = (term230 _107639 _107642 _53776 d).
Proof. exact (MK_COMB (@lem4527023) (@lem4527022 _107639 _107642 _53776 d)). Qed.
Lemma lem4527025 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4527026 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (d : _107639) : (term231 _107639 _107642 _53776 d) = (term231 _107639 _107642 _53776 d).
Proof. exact (MK_COMB (@lem4527025) (@lem4527024 _107639 _107642 _53776 d)). Qed.
Lemma lem4527027 {_100044 _107639 _107642 A B : Type'} (d : _107639) (_53776 : type656 _107639 _107642) (_53777 : type656 _107639 A) (_53778 : type656 _107642 A) (_53779 : type839 _107639 B) (h1 : _53779 = (term397 _107639 B)) : (term366 _100044 _107639 _107642 A B d _53776 _53777 _53778) = (term438 _100044 _107639 _107642 A B d _53776 _53777 _53778 _53779).
Proof. exact (MK_COMB (@lem4527026 _107639 _107642 _53776 d) (@lem4526981 _100044 _107639 _107642 A B _53776 _53777 _53778 _53779 h1)). Qed.
Lemma lem4527028 {_100044 _107639 _107642 A B : Type'} (_53776 : type656 _107639 _107642) (_53777 : type656 _107639 A) (_53778 : type656 _107642 A) (_53779 : type839 _107639 B) (h1 : _53779 = (term397 _107639 B)) : (term367 _100044 _107639 _107642 A B _53776 _53777 _53778) = (term439 _100044 _107639 _107642 A B _53776 _53777 _53778 _53779).
Proof. exact (fun_ext (fun d : _107639 => @lem4527027 _100044 _107639 _107642 A B d _53776 _53777 _53778 _53779 h1)). Qed.
Lemma lem4527029 {_107639 : Type'} : (@all _107639) = (@all _107639).
Proof. exact (eq_refl (@all _107639)). Qed.
Lemma lem4527030 {_100044 _107639 _107642 A B : Type'} (_53776 : type656 _107639 _107642) (_53777 : type656 _107639 A) (_53778 : type656 _107642 A) (_53779 : type839 _107639 B) (h1 : _53779 = (term397 _107639 B)) : (term368 _100044 _107639 _107642 A B _53776 _53777 _53778) = (term440 _100044 _107639 _107642 A B _53776 _53777 _53778 _53779).
Proof. exact (MK_COMB (@lem4527029 _107639) (@lem4527028 _100044 _107639 _107642 A B _53776 _53777 _53778 _53779 h1)). Qed.
Lemma lem4527031 {_107639 _107642 : Type'} (f : _107642 -> _107639) : f = f.
Proof. exact (eq_refl f). Qed.
Lemma lem4527048 {_107639 _107642 : Type'} (s : _107642 -> Prop) (f : _107642 -> _107639) (x : _107642) (d : _107639) : (term140 _107639 _107642 s f x d) = (term140 _107639 _107642 s f x d).
Proof. exact (eq_refl (term140 _107639 _107642 s f x d)). Qed.
Lemma lem4527049 {_107639 _107642 : Type'} (s : _107642 -> Prop) (f : _107642 -> _107639) (d : _107639) : (term141 _107639 _107642 s f d) = (term141 _107639 _107642 s f d).
Proof. exact (fun_ext (fun x : _107642 => @lem4527048 _107639 _107642 s f x d)). Qed.
Lemma lem4527050 {_107642 : Type'} : (@all _107642) = (@all _107642).
Proof. exact (eq_refl (@all _107642)). Qed.
Lemma lem4527051 {_107639 _107642 : Type'} (s : _107642 -> Prop) (f : _107642 -> _107639) (d : _107639) : (term142 _107639 _107642 s f d) = (term142 _107639 _107642 s f d).
Proof. exact (MK_COMB (@lem4527050 _107642) (@lem4527049 _107639 _107642 s f d)). Qed.
Lemma lem4527066 {_107639 _107642 : Type'} (s : _107642 -> Prop) (f : _107642 -> _107639) (x : _107642) (t : _107639 -> Prop) : (term143 _107639 _107642 s f x t) = (term143 _107639 _107642 s f x t).
Proof. exact (eq_refl (term143 _107639 _107642 s f x t)). Qed.
Lemma lem4527067 {_107639 _107642 : Type'} (s : _107642 -> Prop) (f : _107642 -> _107639) (t : _107639 -> Prop) : (term144 _107639 _107642 s f t) = (term144 _107639 _107642 s f t).
Proof. exact (fun_ext (fun x : _107642 => @lem4527066 _107639 _107642 s f x t)). Qed.
Lemma lem4527068 {_107642 : Type'} : (@all _107642) = (@all _107642).
Proof. exact (eq_refl (@all _107642)). Qed.
Lemma lem4527069 {_107639 _107642 : Type'} (s : _107642 -> Prop) (f : _107642 -> _107639) (t : _107639 -> Prop) : (term145 _107639 _107642 s f t) = (term145 _107639 _107642 s f t).
Proof. exact (MK_COMB (@lem4527068 _107642) (@lem4527067 _107639 _107642 s f t)). Qed.
Lemma lem4527070 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4527071 {_107639 _107642 : Type'} (s : _107642 -> Prop) (f : _107642 -> _107639) (t : _107639 -> Prop) : (term146 _107639 _107642 s f t) = (term146 _107639 _107642 s f t).
Proof. exact (MK_COMB (@lem4527070) (@lem4527069 _107639 _107642 s f t)). Qed.
Lemma lem4527072 {_107639 _107642 : Type'} (t : _107639 -> Prop) (s : _107642 -> Prop) (f : _107642 -> _107639) (d : _107639) : (term147 _107639 _107642 t s f d) = (term147 _107639 _107642 t s f d).
Proof. exact (MK_COMB (@lem4527071 _107639 _107642 s f t) (@lem4527051 _107639 _107642 s f d)). Qed.
Lemma lem4527075 {_107639 _107642 : Type'} (GEN_PVAR_149 : _107642 -> _107639) : (@SETSPEC (_107642 -> _107639) GEN_PVAR_149) = (@SETSPEC (_107642 -> _107639) GEN_PVAR_149).
Proof. exact (eq_refl (@SETSPEC (_107642 -> _107639) GEN_PVAR_149)). Qed.
Lemma lem4527076 {_107639 _107642 : Type'} (GEN_PVAR_149 : _107642 -> _107639) (t : _107639 -> Prop) (s : _107642 -> Prop) (f : _107642 -> _107639) (d : _107639) : (term148 _107639 _107642 GEN_PVAR_149 t s f d) = (term148 _107639 _107642 GEN_PVAR_149 t s f d).
Proof. exact (MK_COMB (@lem4527075 _107639 _107642 GEN_PVAR_149) (@lem4527072 _107639 _107642 t s f d)). Qed.
Lemma lem4527077 {_107639 _107642 : Type'} (GEN_PVAR_149 : _107642 -> _107639) (t : _107639 -> Prop) (s : _107642 -> Prop) (d : _107639) (f : _107642 -> _107639) : (term149 _107639 _107642 GEN_PVAR_149 t s d f) = (term149 _107639 _107642 GEN_PVAR_149 t s d f).
Proof. exact (MK_COMB (@lem4527076 _107639 _107642 GEN_PVAR_149 t s f d) (@lem4527031 _107639 _107642 f)). Qed.
Lemma lem4527078 {_107639 _107642 : Type'} (GEN_PVAR_149 : _107642 -> _107639) (t : _107639 -> Prop) (s : _107642 -> Prop) (d : _107639) : (term150 _107639 _107642 GEN_PVAR_149 t s d) = (term150 _107639 _107642 GEN_PVAR_149 t s d).
Proof. exact (fun_ext (fun f : _107642 -> _107639 => @lem4527077 _107639 _107642 GEN_PVAR_149 t s d f)). Qed.
Lemma lem4527079 {_107639 _107642 : Type'} : (@ex (_107642 -> _107639)) = (@ex (_107642 -> _107639)).
Proof. exact (eq_refl (@ex (_107642 -> _107639))). Qed.
Lemma lem4527080 {_107639 _107642 : Type'} (GEN_PVAR_149 : _107642 -> _107639) (t : _107639 -> Prop) (s : _107642 -> Prop) (d : _107639) : (term151 _107639 _107642 GEN_PVAR_149 t s d) = (term151 _107639 _107642 GEN_PVAR_149 t s d).
Proof. exact (MK_COMB (@lem4527079 _107639 _107642) (@lem4527078 _107639 _107642 GEN_PVAR_149 t s d)). Qed.
Lemma lem4527091 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (t : _107639 -> Prop) (s : _107642 -> Prop) (d : _107639) (GEN_PVAR_149 : _107642 -> _107639) : (term293 _107639 _107642 _53776 t s d GEN_PVAR_149) = (term293 _107639 _107642 _53776 t s d GEN_PVAR_149).
Proof. exact (eq_refl (term293 _107639 _107642 _53776 t s d GEN_PVAR_149)). Qed.
Lemma lem4527092 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (GEN_PVAR_149 : _107642 -> _107639) (t : _107639 -> Prop) (s : _107642 -> Prop) (d : _107639) : ((_53776 t s d GEN_PVAR_149) = (term151 _107639 _107642 GEN_PVAR_149 t s d)) = ((_53776 t s d GEN_PVAR_149) = (term151 _107639 _107642 GEN_PVAR_149 t s d)).
Proof. exact (MK_COMB (@lem4527091 _107639 _107642 _53776 t s d GEN_PVAR_149) (@lem4527080 _107639 _107642 GEN_PVAR_149 t s d)). Qed.
Lemma lem4527093 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (t : _107639 -> Prop) (s : _107642 -> Prop) (d : _107639) : (term295 _107639 _107642 _53776 t s d) = (term295 _107639 _107642 _53776 t s d).
Proof. exact (fun_ext (fun GEN_PVAR_149 : _107642 -> _107639 => @lem4527092 _107639 _107642 _53776 GEN_PVAR_149 t s d)). Qed.
Lemma lem4527094 {_107639 _107642 : Type'} : (@all (_107642 -> _107639)) = (@all (_107642 -> _107639)).
Proof. exact (eq_refl (@all (_107642 -> _107639))). Qed.
Lemma lem4527095 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (t : _107639 -> Prop) (s : _107642 -> Prop) (d : _107639) : (term296 _107639 _107642 _53776 t s d) = (term296 _107639 _107642 _53776 t s d).
Proof. exact (MK_COMB (@lem4527094 _107639 _107642) (@lem4527093 _107639 _107642 _53776 t s d)). Qed.
Lemma lem4527096 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (t : _107639 -> Prop) (s : _107642 -> Prop) : (term297 _107639 _107642 _53776 t s) = (term297 _107639 _107642 _53776 t s).
Proof. exact (fun_ext (fun d : _107639 => @lem4527095 _107639 _107642 _53776 t s d)). Qed.
Lemma lem4527097 {_107639 : Type'} : (@all _107639) = (@all _107639).
Proof. exact (eq_refl (@all _107639)). Qed.
Lemma lem4527098 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (t : _107639 -> Prop) (s : _107642 -> Prop) : (term298 _107639 _107642 _53776 t s) = (term298 _107639 _107642 _53776 t s).
Proof. exact (MK_COMB (@lem4527097 _107639) (@lem4527096 _107639 _107642 _53776 t s)). Qed.
Lemma lem4527099 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (t : _107639 -> Prop) : (term299 _107639 _107642 _53776 t) = (term299 _107639 _107642 _53776 t).
Proof. exact (fun_ext (fun s : _107642 -> Prop => @lem4527098 _107639 _107642 _53776 t s)). Qed.
Lemma lem4527100 {_107642 : Type'} : (@all (_107642 -> Prop)) = (@all (_107642 -> Prop)).
Proof. exact (eq_refl (@all (_107642 -> Prop))). Qed.
Lemma lem4527101 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (t : _107639 -> Prop) : (term300 _107639 _107642 _53776 t) = (term300 _107639 _107642 _53776 t).
Proof. exact (MK_COMB (@lem4527100 _107642) (@lem4527099 _107639 _107642 _53776 t)). Qed.
Lemma lem4527102 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) : (term301 _107639 _107642 _53776) = (term301 _107639 _107642 _53776).
Proof. exact (fun_ext (fun t : _107639 -> Prop => @lem4527101 _107639 _107642 _53776 t)). Qed.
Lemma lem4527103 {_107639 : Type'} : (@all (_107639 -> Prop)) = (@all (_107639 -> Prop)).
Proof. exact (eq_refl (@all (_107639 -> Prop))). Qed.
Lemma lem4527104 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) : (term302 _107639 _107642 _53776) = (term302 _107639 _107642 _53776).
Proof. exact (MK_COMB (@lem4527103 _107639) (@lem4527102 _107639 _107642 _53776)). Qed.
Lemma lem4527105 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4527106 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) : (term303 _107639 _107642 _53776) = (term303 _107639 _107642 _53776).
Proof. exact (MK_COMB (@lem4527105) (@lem4527104 _107639 _107642 _53776)). Qed.
Lemma lem4527107 {_100044 _107639 _107642 A B : Type'} (_53776 : type656 _107639 _107642) (_53777 : type656 _107639 A) (_53778 : type656 _107642 A) (_53779 : type839 _107639 B) (h1 : _53779 = (term397 _107639 B)) : (term369 _100044 _107639 _107642 A B _53776 _53777 _53778) = (term441 _100044 _107639 _107642 A B _53776 _53777 _53778 _53779).
Proof. exact (MK_COMB (@lem4527106 _107639 _107642 _53776) (@lem4527030 _100044 _107639 _107642 A B _53776 _53777 _53778 _53779 h1)). Qed.
Lemma lem4527108 {_100044 _107639 _107642 A B : Type'} (_53777 : type656 _107639 A) (_53778 : type656 _107642 A) (_53779 : type839 _107639 B) (h1 : _53779 = (term397 _107639 B)) : (term370 _100044 _107639 _107642 A B _53777 _53778) = (term442 _100044 _107639 _107642 A B _53777 _53778 _53779).
Proof. exact (fun_ext (fun _53776 : type656 _107639 _107642 => @lem4527107 _100044 _107639 _107642 A B _53776 _53777 _53778 _53779 h1)). Qed.
Lemma lem4527109 {_107639 _107642 : Type'} : (@all ((_107639 -> Prop) -> (_107642 -> Prop) -> _107639 -> (_107642 -> _107639) -> Prop)) = (@all ((_107639 -> Prop) -> (_107642 -> Prop) -> _107639 -> (_107642 -> _107639) -> Prop)).
Proof. exact (eq_refl (@all ((_107639 -> Prop) -> (_107642 -> Prop) -> _107639 -> (_107642 -> _107639) -> Prop))). Qed.
Lemma lem4527110 {_100044 _107639 _107642 A B : Type'} (_53777 : type656 _107639 A) (_53778 : type656 _107642 A) (_53779 : type839 _107639 B) (h1 : _53779 = (term397 _107639 B)) : (term371 _100044 _107639 _107642 A B _53777 _53778) = (term443 _100044 _107639 _107642 A B _53777 _53778 _53779).
Proof. exact (MK_COMB (@lem4527109 _107639 _107642) (@lem4527108 _100044 _107639 _107642 A B _53777 _53778 _53779 h1)). Qed.
Lemma lem4527111 {_107639 A : Type'} (f : A -> _107639) : f = f.
Proof. exact (eq_refl f). Qed.
Lemma lem4527128 {_107639 A : Type'} (s : A -> Prop) (f : A -> _107639) (x : A) (d : _107639) : (term140 _107639 A s f x d) = (term140 _107639 A s f x d).
Proof. exact (eq_refl (term140 _107639 A s f x d)). Qed.
Lemma lem4527129 {_107639 A : Type'} (s : A -> Prop) (f : A -> _107639) (d : _107639) : (term141 _107639 A s f d) = (term141 _107639 A s f d).
Proof. exact (fun_ext (fun x : A => @lem4527128 _107639 A s f x d)). Qed.
Lemma lem4527130 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem4527131 {_107639 A : Type'} (s : A -> Prop) (f : A -> _107639) (d : _107639) : (term142 _107639 A s f d) = (term142 _107639 A s f d).
Proof. exact (MK_COMB (@lem4527130 A) (@lem4527129 _107639 A s f d)). Qed.
Lemma lem4527146 {_107639 A : Type'} (s : A -> Prop) (f : A -> _107639) (x : A) (t : _107639 -> Prop) : (term143 _107639 A s f x t) = (term143 _107639 A s f x t).
Proof. exact (eq_refl (term143 _107639 A s f x t)). Qed.
Lemma lem4527147 {_107639 A : Type'} (s : A -> Prop) (f : A -> _107639) (t : _107639 -> Prop) : (term144 _107639 A s f t) = (term144 _107639 A s f t).
Proof. exact (fun_ext (fun x : A => @lem4527146 _107639 A s f x t)). Qed.
Lemma lem4527148 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem4527149 {_107639 A : Type'} (s : A -> Prop) (f : A -> _107639) (t : _107639 -> Prop) : (term145 _107639 A s f t) = (term145 _107639 A s f t).
Proof. exact (MK_COMB (@lem4527148 A) (@lem4527147 _107639 A s f t)). Qed.
Lemma lem4527150 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4527151 {_107639 A : Type'} (s : A -> Prop) (f : A -> _107639) (t : _107639 -> Prop) : (term146 _107639 A s f t) = (term146 _107639 A s f t).
Proof. exact (MK_COMB (@lem4527150) (@lem4527149 _107639 A s f t)). Qed.
Lemma lem4527152 {_107639 A : Type'} (t : _107639 -> Prop) (s : A -> Prop) (f : A -> _107639) (d : _107639) : (term147 _107639 A t s f d) = (term147 _107639 A t s f d).
Proof. exact (MK_COMB (@lem4527151 _107639 A s f t) (@lem4527131 _107639 A s f d)). Qed.
Lemma lem4527155 {_107639 A : Type'} (GEN_PVAR_148 : A -> _107639) : (@SETSPEC (A -> _107639) GEN_PVAR_148) = (@SETSPEC (A -> _107639) GEN_PVAR_148).
Proof. exact (eq_refl (@SETSPEC (A -> _107639) GEN_PVAR_148)). Qed.
Lemma lem4527156 {_107639 A : Type'} (GEN_PVAR_148 : A -> _107639) (t : _107639 -> Prop) (s : A -> Prop) (f : A -> _107639) (d : _107639) : (term148 _107639 A GEN_PVAR_148 t s f d) = (term148 _107639 A GEN_PVAR_148 t s f d).
Proof. exact (MK_COMB (@lem4527155 _107639 A GEN_PVAR_148) (@lem4527152 _107639 A t s f d)). Qed.
Lemma lem4527157 {_107639 A : Type'} (GEN_PVAR_148 : A -> _107639) (t : _107639 -> Prop) (s : A -> Prop) (d : _107639) (f : A -> _107639) : (term149 _107639 A GEN_PVAR_148 t s d f) = (term149 _107639 A GEN_PVAR_148 t s d f).
Proof. exact (MK_COMB (@lem4527156 _107639 A GEN_PVAR_148 t s f d) (@lem4527111 _107639 A f)). Qed.
Lemma lem4527158 {_107639 A : Type'} (GEN_PVAR_148 : A -> _107639) (t : _107639 -> Prop) (s : A -> Prop) (d : _107639) : (term150 _107639 A GEN_PVAR_148 t s d) = (term150 _107639 A GEN_PVAR_148 t s d).
Proof. exact (fun_ext (fun f : A -> _107639 => @lem4527157 _107639 A GEN_PVAR_148 t s d f)). Qed.
Lemma lem4527159 {_107639 A : Type'} : (@ex (A -> _107639)) = (@ex (A -> _107639)).
Proof. exact (eq_refl (@ex (A -> _107639))). Qed.
Lemma lem4527160 {_107639 A : Type'} (GEN_PVAR_148 : A -> _107639) (t : _107639 -> Prop) (s : A -> Prop) (d : _107639) : (term151 _107639 A GEN_PVAR_148 t s d) = (term151 _107639 A GEN_PVAR_148 t s d).
Proof. exact (MK_COMB (@lem4527159 _107639 A) (@lem4527158 _107639 A GEN_PVAR_148 t s d)). Qed.
Lemma lem4527171 {_107639 A : Type'} (_53777 : type656 _107639 A) (t : _107639 -> Prop) (s : A -> Prop) (d : _107639) (GEN_PVAR_148 : A -> _107639) : (term293 _107639 A _53777 t s d GEN_PVAR_148) = (term293 _107639 A _53777 t s d GEN_PVAR_148).
Proof. exact (eq_refl (term293 _107639 A _53777 t s d GEN_PVAR_148)). Qed.
Lemma lem4527172 {_107639 A : Type'} (_53777 : type656 _107639 A) (GEN_PVAR_148 : A -> _107639) (t : _107639 -> Prop) (s : A -> Prop) (d : _107639) : ((_53777 t s d GEN_PVAR_148) = (term151 _107639 A GEN_PVAR_148 t s d)) = ((_53777 t s d GEN_PVAR_148) = (term151 _107639 A GEN_PVAR_148 t s d)).
Proof. exact (MK_COMB (@lem4527171 _107639 A _53777 t s d GEN_PVAR_148) (@lem4527160 _107639 A GEN_PVAR_148 t s d)). Qed.
Lemma lem4527173 {_107639 A : Type'} (_53777 : type656 _107639 A) (t : _107639 -> Prop) (s : A -> Prop) (d : _107639) : (term295 _107639 A _53777 t s d) = (term295 _107639 A _53777 t s d).
Proof. exact (fun_ext (fun GEN_PVAR_148 : A -> _107639 => @lem4527172 _107639 A _53777 GEN_PVAR_148 t s d)). Qed.
Lemma lem4527174 {_107639 A : Type'} : (@all (A -> _107639)) = (@all (A -> _107639)).
Proof. exact (eq_refl (@all (A -> _107639))). Qed.
Lemma lem4527175 {_107639 A : Type'} (_53777 : type656 _107639 A) (t : _107639 -> Prop) (s : A -> Prop) (d : _107639) : (term296 _107639 A _53777 t s d) = (term296 _107639 A _53777 t s d).
Proof. exact (MK_COMB (@lem4527174 _107639 A) (@lem4527173 _107639 A _53777 t s d)). Qed.
Lemma lem4527176 {_107639 A : Type'} (_53777 : type656 _107639 A) (t : _107639 -> Prop) (s : A -> Prop) : (term297 _107639 A _53777 t s) = (term297 _107639 A _53777 t s).
Proof. exact (fun_ext (fun d : _107639 => @lem4527175 _107639 A _53777 t s d)). Qed.
Lemma lem4527177 {_107639 : Type'} : (@all _107639) = (@all _107639).
Proof. exact (eq_refl (@all _107639)). Qed.
Lemma lem4527178 {_107639 A : Type'} (_53777 : type656 _107639 A) (t : _107639 -> Prop) (s : A -> Prop) : (term298 _107639 A _53777 t s) = (term298 _107639 A _53777 t s).
Proof. exact (MK_COMB (@lem4527177 _107639) (@lem4527176 _107639 A _53777 t s)). Qed.
Lemma lem4527179 {_107639 A : Type'} (_53777 : type656 _107639 A) (t : _107639 -> Prop) : (term299 _107639 A _53777 t) = (term299 _107639 A _53777 t).
Proof. exact (fun_ext (fun s : A -> Prop => @lem4527178 _107639 A _53777 t s)). Qed.
Lemma lem4527180 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem4527181 {_107639 A : Type'} (_53777 : type656 _107639 A) (t : _107639 -> Prop) : (term300 _107639 A _53777 t) = (term300 _107639 A _53777 t).
Proof. exact (MK_COMB (@lem4527180 A) (@lem4527179 _107639 A _53777 t)). Qed.
Lemma lem4527182 {_107639 A : Type'} (_53777 : type656 _107639 A) : (term301 _107639 A _53777) = (term301 _107639 A _53777).
Proof. exact (fun_ext (fun t : _107639 -> Prop => @lem4527181 _107639 A _53777 t)). Qed.
Lemma lem4527183 {_107639 : Type'} : (@all (_107639 -> Prop)) = (@all (_107639 -> Prop)).
Proof. exact (eq_refl (@all (_107639 -> Prop))). Qed.
Lemma lem4527184 {_107639 A : Type'} (_53777 : type656 _107639 A) : (term302 _107639 A _53777) = (term302 _107639 A _53777).
Proof. exact (MK_COMB (@lem4527183 _107639) (@lem4527182 _107639 A _53777)). Qed.
Lemma lem4527185 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4527186 {_107639 A : Type'} (_53777 : type656 _107639 A) : (term303 _107639 A _53777) = (term303 _107639 A _53777).
Proof. exact (MK_COMB (@lem4527185) (@lem4527184 _107639 A _53777)). Qed.
Lemma lem4527187 {_100044 _107639 _107642 A B : Type'} (_53777 : type656 _107639 A) (_53778 : type656 _107642 A) (_53779 : type839 _107639 B) (h1 : _53779 = (term397 _107639 B)) : (term372 _100044 _107639 _107642 A B _53777 _53778) = (term444 _100044 _107639 _107642 A B _53777 _53778 _53779).
Proof. exact (MK_COMB (@lem4527186 _107639 A _53777) (@lem4527110 _100044 _107639 _107642 A B _53777 _53778 _53779 h1)). Qed.
Lemma lem4527188 {_100044 _107639 _107642 A B : Type'} (_53778 : type656 _107642 A) (_53779 : type839 _107639 B) (h1 : _53779 = (term397 _107639 B)) : (term373 _100044 _107639 _107642 A B _53778) = (term445 _100044 _107639 _107642 A B _53778 _53779).
Proof. exact (fun_ext (fun _53777 : type656 _107639 A => @lem4527187 _100044 _107639 _107642 A B _53777 _53778 _53779 h1)). Qed.
Lemma lem4527189 {_107639 A : Type'} : (@all ((_107639 -> Prop) -> (A -> Prop) -> _107639 -> (A -> _107639) -> Prop)) = (@all ((_107639 -> Prop) -> (A -> Prop) -> _107639 -> (A -> _107639) -> Prop)).
Proof. exact (eq_refl (@all ((_107639 -> Prop) -> (A -> Prop) -> _107639 -> (A -> _107639) -> Prop))). Qed.
Lemma lem4527190 {_100044 _107639 _107642 A B : Type'} (_53778 : type656 _107642 A) (_53779 : type839 _107639 B) (h1 : _53779 = (term397 _107639 B)) : (term374 _100044 _107639 _107642 A B _53778) = (term446 _100044 _107639 _107642 A B _53778 _53779).
Proof. exact (MK_COMB (@lem4527189 _107639 A) (@lem4527188 _100044 _107639 _107642 A B _53778 _53779 h1)). Qed.
Lemma lem4527191 {_107642 A : Type'} (f : A -> _107642) : f = f.
Proof. exact (eq_refl f). Qed.
Lemma lem4527208 {_107642 A : Type'} (s : A -> Prop) (f : A -> _107642) (x : A) (d : _107642) : (term140 _107642 A s f x d) = (term140 _107642 A s f x d).
Proof. exact (eq_refl (term140 _107642 A s f x d)). Qed.
Lemma lem4527209 {_107642 A : Type'} (s : A -> Prop) (f : A -> _107642) (d : _107642) : (term141 _107642 A s f d) = (term141 _107642 A s f d).
Proof. exact (fun_ext (fun x : A => @lem4527208 _107642 A s f x d)). Qed.
Lemma lem4527210 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem4527211 {_107642 A : Type'} (s : A -> Prop) (f : A -> _107642) (d : _107642) : (term142 _107642 A s f d) = (term142 _107642 A s f d).
Proof. exact (MK_COMB (@lem4527210 A) (@lem4527209 _107642 A s f d)). Qed.
Lemma lem4527226 {_107642 A : Type'} (s : A -> Prop) (f : A -> _107642) (x : A) (t : _107642 -> Prop) : (term143 _107642 A s f x t) = (term143 _107642 A s f x t).
Proof. exact (eq_refl (term143 _107642 A s f x t)). Qed.
Lemma lem4527227 {_107642 A : Type'} (s : A -> Prop) (f : A -> _107642) (t : _107642 -> Prop) : (term144 _107642 A s f t) = (term144 _107642 A s f t).
Proof. exact (fun_ext (fun x : A => @lem4527226 _107642 A s f x t)). Qed.
Lemma lem4527228 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem4527229 {_107642 A : Type'} (s : A -> Prop) (f : A -> _107642) (t : _107642 -> Prop) : (term145 _107642 A s f t) = (term145 _107642 A s f t).
Proof. exact (MK_COMB (@lem4527228 A) (@lem4527227 _107642 A s f t)). Qed.
Lemma lem4527230 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4527231 {_107642 A : Type'} (s : A -> Prop) (f : A -> _107642) (t : _107642 -> Prop) : (term146 _107642 A s f t) = (term146 _107642 A s f t).
Proof. exact (MK_COMB (@lem4527230) (@lem4527229 _107642 A s f t)). Qed.
Lemma lem4527232 {_107642 A : Type'} (t : _107642 -> Prop) (s : A -> Prop) (f : A -> _107642) (d : _107642) : (term147 _107642 A t s f d) = (term147 _107642 A t s f d).
Proof. exact (MK_COMB (@lem4527231 _107642 A s f t) (@lem4527211 _107642 A s f d)). Qed.
Lemma lem4527235 {_107642 A : Type'} (GEN_PVAR_148 : A -> _107642) : (@SETSPEC (A -> _107642) GEN_PVAR_148) = (@SETSPEC (A -> _107642) GEN_PVAR_148).
Proof. exact (eq_refl (@SETSPEC (A -> _107642) GEN_PVAR_148)). Qed.
Lemma lem4527236 {_107642 A : Type'} (GEN_PVAR_148 : A -> _107642) (t : _107642 -> Prop) (s : A -> Prop) (f : A -> _107642) (d : _107642) : (term148 _107642 A GEN_PVAR_148 t s f d) = (term148 _107642 A GEN_PVAR_148 t s f d).
Proof. exact (MK_COMB (@lem4527235 _107642 A GEN_PVAR_148) (@lem4527232 _107642 A t s f d)). Qed.
Lemma lem4527237 {_107642 A : Type'} (GEN_PVAR_148 : A -> _107642) (t : _107642 -> Prop) (s : A -> Prop) (d : _107642) (f : A -> _107642) : (term149 _107642 A GEN_PVAR_148 t s d f) = (term149 _107642 A GEN_PVAR_148 t s d f).
Proof. exact (MK_COMB (@lem4527236 _107642 A GEN_PVAR_148 t s f d) (@lem4527191 _107642 A f)). Qed.
Lemma lem4527238 {_107642 A : Type'} (GEN_PVAR_148 : A -> _107642) (t : _107642 -> Prop) (s : A -> Prop) (d : _107642) : (term150 _107642 A GEN_PVAR_148 t s d) = (term150 _107642 A GEN_PVAR_148 t s d).
Proof. exact (fun_ext (fun f : A -> _107642 => @lem4527237 _107642 A GEN_PVAR_148 t s d f)). Qed.
Lemma lem4527239 {_107642 A : Type'} : (@ex (A -> _107642)) = (@ex (A -> _107642)).
Proof. exact (eq_refl (@ex (A -> _107642))). Qed.
Lemma lem4527240 {_107642 A : Type'} (GEN_PVAR_148 : A -> _107642) (t : _107642 -> Prop) (s : A -> Prop) (d : _107642) : (term151 _107642 A GEN_PVAR_148 t s d) = (term151 _107642 A GEN_PVAR_148 t s d).
Proof. exact (MK_COMB (@lem4527239 _107642 A) (@lem4527238 _107642 A GEN_PVAR_148 t s d)). Qed.
Lemma lem4527251 {_107642 A : Type'} (_53778 : type656 _107642 A) (t : _107642 -> Prop) (s : A -> Prop) (d : _107642) (GEN_PVAR_148 : A -> _107642) : (term293 _107642 A _53778 t s d GEN_PVAR_148) = (term293 _107642 A _53778 t s d GEN_PVAR_148).
Proof. exact (eq_refl (term293 _107642 A _53778 t s d GEN_PVAR_148)). Qed.
Lemma lem4527252 {_107642 A : Type'} (_53778 : type656 _107642 A) (GEN_PVAR_148 : A -> _107642) (t : _107642 -> Prop) (s : A -> Prop) (d : _107642) : ((_53778 t s d GEN_PVAR_148) = (term151 _107642 A GEN_PVAR_148 t s d)) = ((_53778 t s d GEN_PVAR_148) = (term151 _107642 A GEN_PVAR_148 t s d)).
Proof. exact (MK_COMB (@lem4527251 _107642 A _53778 t s d GEN_PVAR_148) (@lem4527240 _107642 A GEN_PVAR_148 t s d)). Qed.
Lemma lem4527253 {_107642 A : Type'} (_53778 : type656 _107642 A) (t : _107642 -> Prop) (s : A -> Prop) (d : _107642) : (term295 _107642 A _53778 t s d) = (term295 _107642 A _53778 t s d).
Proof. exact (fun_ext (fun GEN_PVAR_148 : A -> _107642 => @lem4527252 _107642 A _53778 GEN_PVAR_148 t s d)). Qed.
Lemma lem4527254 {_107642 A : Type'} : (@all (A -> _107642)) = (@all (A -> _107642)).
Proof. exact (eq_refl (@all (A -> _107642))). Qed.
Lemma lem4527255 {_107642 A : Type'} (_53778 : type656 _107642 A) (t : _107642 -> Prop) (s : A -> Prop) (d : _107642) : (term296 _107642 A _53778 t s d) = (term296 _107642 A _53778 t s d).
Proof. exact (MK_COMB (@lem4527254 _107642 A) (@lem4527253 _107642 A _53778 t s d)). Qed.
Lemma lem4527256 {_107642 A : Type'} (_53778 : type656 _107642 A) (t : _107642 -> Prop) (s : A -> Prop) : (term297 _107642 A _53778 t s) = (term297 _107642 A _53778 t s).
Proof. exact (fun_ext (fun d : _107642 => @lem4527255 _107642 A _53778 t s d)). Qed.
Lemma lem4527257 {_107642 : Type'} : (@all _107642) = (@all _107642).
Proof. exact (eq_refl (@all _107642)). Qed.
Lemma lem4527258 {_107642 A : Type'} (_53778 : type656 _107642 A) (t : _107642 -> Prop) (s : A -> Prop) : (term298 _107642 A _53778 t s) = (term298 _107642 A _53778 t s).
Proof. exact (MK_COMB (@lem4527257 _107642) (@lem4527256 _107642 A _53778 t s)). Qed.
Lemma lem4527259 {_107642 A : Type'} (_53778 : type656 _107642 A) (t : _107642 -> Prop) : (term299 _107642 A _53778 t) = (term299 _107642 A _53778 t).
Proof. exact (fun_ext (fun s : A -> Prop => @lem4527258 _107642 A _53778 t s)). Qed.
Lemma lem4527260 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem4527261 {_107642 A : Type'} (_53778 : type656 _107642 A) (t : _107642 -> Prop) : (term300 _107642 A _53778 t) = (term300 _107642 A _53778 t).
Proof. exact (MK_COMB (@lem4527260 A) (@lem4527259 _107642 A _53778 t)). Qed.
Lemma lem4527262 {_107642 A : Type'} (_53778 : type656 _107642 A) : (term301 _107642 A _53778) = (term301 _107642 A _53778).
Proof. exact (fun_ext (fun t : _107642 -> Prop => @lem4527261 _107642 A _53778 t)). Qed.
Lemma lem4527263 {_107642 : Type'} : (@all (_107642 -> Prop)) = (@all (_107642 -> Prop)).
Proof. exact (eq_refl (@all (_107642 -> Prop))). Qed.
Lemma lem4527264 {_107642 A : Type'} (_53778 : type656 _107642 A) : (term302 _107642 A _53778) = (term302 _107642 A _53778).
Proof. exact (MK_COMB (@lem4527263 _107642) (@lem4527262 _107642 A _53778)). Qed.
Lemma lem4527265 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4527266 {_107642 A : Type'} (_53778 : type656 _107642 A) : (term303 _107642 A _53778) = (term303 _107642 A _53778).
Proof. exact (MK_COMB (@lem4527265) (@lem4527264 _107642 A _53778)). Qed.
Lemma lem4527267 {_100044 _107639 _107642 A B : Type'} (_53778 : type656 _107642 A) (_53779 : type839 _107639 B) (h1 : _53779 = (term397 _107639 B)) : (term394 _100044 _107639 _107642 A B _53778) = (term447 _100044 _107639 _107642 A B _53778 _53779).
Proof. exact (MK_COMB (@lem4527266 _107642 A _53778) (@lem4527190 _100044 _107639 _107642 A B _53778 _53779 h1)). Qed.
Lemma lem4527268 {_100044 _107639 _107642 A B : Type'} (_53779 : type839 _107639 B) (h1 : _53779 = (term397 _107639 B)) : (term395 _100044 _107639 _107642 A B) = (term448 _100044 _107639 _107642 A B _53779).
Proof. exact (fun_ext (fun _53778 : type656 _107642 A => @lem4527267 _100044 _107639 _107642 A B _53778 _53779 h1)). Qed.
Lemma lem4527269 {_107642 A : Type'} : (@all ((_107642 -> Prop) -> (A -> Prop) -> _107642 -> (A -> _107642) -> Prop)) = (@all ((_107642 -> Prop) -> (A -> Prop) -> _107642 -> (A -> _107642) -> Prop)).
Proof. exact (eq_refl (@all ((_107642 -> Prop) -> (A -> Prop) -> _107642 -> (A -> _107642) -> Prop))). Qed.
Lemma lem4527270 {_100044 _107639 _107642 A B : Type'} (_53779 : type839 _107639 B) (h1 : _53779 = (term397 _107639 B)) : (term396 _100044 _107639 _107642 A B) = (term449 _100044 _107639 _107642 A B _53779).
Proof. exact (MK_COMB (@lem4527269 _107642 A) (@lem4527268 _100044 _107639 _107642 A B _53779 h1)). Qed.
Lemma lem4527271 {_100044 _107639 _107642 A B : Type'} (_53779 : type839 _107639 B) : term450 _100044 _107639 _107642 A B _53779.
Proof. exact (fun h0 : _53779 = (term397 _107639 B) => @lem4527270 _100044 _107639 _107642 A B _53779 h0). Qed.
Lemma lem4527272 {_100044 _107639 _107642 A B : Type'} : term451 _100044 _107639 _107642 A B.
Proof. exact (fun _53779 : type839 _107639 B => @lem4527271 _100044 _107639 _107642 A B _53779). Qed.
Lemma lem4527274 {_3603 : Type'} (P : Prop) (c : _3603) (Q : _3603 -> Prop) : term237 _3603 P c Q.
Proof. exact (EQ_MP (@lem20230 _3603 P c Q) (@lem0)). Qed.
Lemma lem4527275 {_107639 B : Type'} (P : Prop) (c : type839 _107639 B) (Q : type214 _107639 B) : term452 _107639 B P c Q.
Proof. exact (@lem4527274 (type839 _107639 B) P c Q). Qed.
Lemma lem4527276 {_100044 _107639 _107642 A B : Type'} : term453 _100044 _107639 _107642 A B.
Proof. exact (@lem4527275 _107639 B (term396 _100044 _107639 _107642 A B) (term397 _107639 B) (term454 _100044 _107639 _107642 A B)). Qed.
Lemma lem4527277 {_100044 _107639 _107642 A B : Type'} (_53779 : type839 _107639 B) : (term455 _100044 _107639 _107642 A B _53779) = (term449 _100044 _107639 _107642 A B _53779).
Proof. exact (eq_refl (term455 _100044 _107639 _107642 A B _53779)). Qed.
Lemma lem4527278 {_100044 _107639 _107642 A B : Type'} : (term456 _100044 _107639 _107642 A B) = (term456 _100044 _107639 _107642 A B).
Proof. exact (eq_refl (term456 _100044 _107639 _107642 A B)). Qed.
Lemma lem4527279 {_100044 _107639 _107642 A B : Type'} (_53779 : type839 _107639 B) : ((term396 _100044 _107639 _107642 A B) = (term455 _100044 _107639 _107642 A B _53779)) = ((term396 _100044 _107639 _107642 A B) = (term449 _100044 _107639 _107642 A B _53779)).
Proof. exact (MK_COMB (@lem4527278 _100044 _107639 _107642 A B) (@lem4527277 _100044 _107639 _107642 A B _53779)). Qed.
Lemma lem4527280 {_107639 B : Type'} (_53779 : type839 _107639 B) : (term457 _107639 B _53779) = (term457 _107639 B _53779).
Proof. exact (eq_refl (term457 _107639 B _53779)). Qed.
Lemma lem4527281 {_100044 _107639 _107642 A B : Type'} (_53779 : type839 _107639 B) : (term458 _100044 _107639 _107642 A B _53779) = (term450 _100044 _107639 _107642 A B _53779).
Proof. exact (MK_COMB (@lem4527280 _107639 B _53779) (@lem4527279 _100044 _107639 _107642 A B _53779)). Qed.
Lemma lem4527282 {_100044 _107639 _107642 A B : Type'} : (term459 _100044 _107639 _107642 A B) = (term460 _100044 _107639 _107642 A B).
Proof. exact (fun_ext (fun _53779 : type839 _107639 B => @lem4527281 _100044 _107639 _107642 A B _53779)). Qed.
Lemma lem4527283 {_107639 B : Type'} : (@all ((B -> Prop) -> (_107639 -> Prop) -> B -> (_107639 -> B) -> Prop)) = (@all ((B -> Prop) -> (_107639 -> Prop) -> B -> (_107639 -> B) -> Prop)).
Proof. exact (eq_refl (@all ((B -> Prop) -> (_107639 -> Prop) -> B -> (_107639 -> B) -> Prop))). Qed.
Lemma lem4527284 {_100044 _107639 _107642 A B : Type'} : (term461 _100044 _107639 _107642 A B) = (term451 _100044 _107639 _107642 A B).
Proof. exact (MK_COMB (@lem4527283 _107639 B) (@lem4527282 _100044 _107639 _107642 A B)). Qed.
Lemma lem4527285 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4527286 {_100044 _107639 _107642 A B : Type'} : (term462 _100044 _107639 _107642 A B) = (term463 _100044 _107639 _107642 A B).
Proof. exact (MK_COMB (@lem4527285) (@lem4527284 _100044 _107639 _107642 A B)). Qed.
Lemma lem4527287 {_100044 _107639 _107642 A B : Type'} (_53779 : type839 _107639 B) : (term455 _100044 _107639 _107642 A B _53779) = (term449 _100044 _107639 _107642 A B _53779).
Proof. exact (eq_refl (term455 _100044 _107639 _107642 A B _53779)). Qed.
Lemma lem4527288 {_107639 B : Type'} (_53779 : type839 _107639 B) : (term457 _107639 B _53779) = (term457 _107639 B _53779).
Proof. exact (eq_refl (term457 _107639 B _53779)). Qed.
Lemma lem4527289 {_100044 _107639 _107642 A B : Type'} (_53779 : type839 _107639 B) : (term464 _100044 _107639 _107642 A B _53779) = (term465 _100044 _107639 _107642 A B _53779).
Proof. exact (MK_COMB (@lem4527288 _107639 B _53779) (@lem4527287 _100044 _107639 _107642 A B _53779)). Qed.
Lemma lem4527290 {_100044 _107639 _107642 A B : Type'} : (term466 _100044 _107639 _107642 A B) = (term467 _100044 _107639 _107642 A B).
Proof. exact (fun_ext (fun _53779 : type839 _107639 B => @lem4527289 _100044 _107639 _107642 A B _53779)). Qed.
Lemma lem4527291 {_107639 B : Type'} : (@all ((B -> Prop) -> (_107639 -> Prop) -> B -> (_107639 -> B) -> Prop)) = (@all ((B -> Prop) -> (_107639 -> Prop) -> B -> (_107639 -> B) -> Prop)).
Proof. exact (eq_refl (@all ((B -> Prop) -> (_107639 -> Prop) -> B -> (_107639 -> B) -> Prop))). Qed.
Lemma lem4527292 {_100044 _107639 _107642 A B : Type'} : (term468 _100044 _107639 _107642 A B) = (term469 _100044 _107639 _107642 A B).
Proof. exact (MK_COMB (@lem4527291 _107639 B) (@lem4527290 _100044 _107639 _107642 A B)). Qed.
Lemma lem4527293 {_100044 _107639 _107642 A B : Type'} : (term456 _100044 _107639 _107642 A B) = (term456 _100044 _107639 _107642 A B).
Proof. exact (eq_refl (term456 _100044 _107639 _107642 A B)). Qed.
Lemma lem4527294 {_100044 _107639 _107642 A B : Type'} : ((term396 _100044 _107639 _107642 A B) = (term468 _100044 _107639 _107642 A B)) = ((term396 _100044 _107639 _107642 A B) = (term469 _100044 _107639 _107642 A B)).
Proof. exact (MK_COMB (@lem4527293 _100044 _107639 _107642 A B) (@lem4527292 _100044 _107639 _107642 A B)). Qed.
Lemma lem4527295 {_100044 _107639 _107642 A B : Type'} : (term453 _100044 _107639 _107642 A B) = (term470 _100044 _107639 _107642 A B).
Proof. exact (MK_COMB (@lem4527286 _100044 _107639 _107642 A B) (@lem4527294 _100044 _107639 _107642 A B)). Qed.
Lemma lem4527296 {_100044 _107639 _107642 A B : Type'} : term470 _100044 _107639 _107642 A B.
Proof. exact (EQ_MP (@lem4527295 _100044 _107639 _107642 A B) (@lem4527276 _100044 _107639 _107642 A B)). Qed.
Lemma lem4527297 {_100044 _107639 _107642 A B : Type'} : (term396 _100044 _107639 _107642 A B) = (term469 _100044 _107639 _107642 A B).
Proof. exact (@lem4527296 _100044 _107639 _107642 A B (@lem4527272 _100044 _107639 _107642 A B)). Qed.
Lemma lem4527299 {_3571 _3575 : Type'} (s : _3575 -> _3571) (t : _3575 -> _3571) : (s = (term257 _3571 _3575 t)) = (term258 _3571 _3575 s t).
Proof. exact (EQ_MP (@lem19792 _3571 _3575 s t) (@lem0)). Qed.
Lemma lem4527300 {_107639 B : Type'} (s : type839 _107639 B) (t : type839 _107639 B) : (s = (term471 _107639 B t)) = (term472 _107639 B s t).
Proof. exact (@lem4527299 (type674 _107639 B) (B -> Prop) s t). Qed.
Lemma lem4527301 {_107639 B : Type'} (_53779 : type839 _107639 B) : (_53779 = (term473 _107639 B)) = (term474 _107639 B _53779).
Proof. exact (@lem4527300 _107639 B _53779 (term397 _107639 B)). Qed.
Lemma lem4527302 {_107639 B : Type'} (t : B -> Prop) : (term398 _107639 B t) = (term399 _107639 B t).
Proof. exact (eq_refl (term398 _107639 B t)). Qed.
Lemma lem4527303 {_107639 B : Type'} : (term473 _107639 B) = (term397 _107639 B).
Proof. exact (fun_ext (fun t : B -> Prop => @lem4527302 _107639 B t)). Qed.
Lemma lem4527304 {_107639 B : Type'} (_53779 : type839 _107639 B) : (@eq ((B -> Prop) -> (_107639 -> Prop) -> B -> (_107639 -> B) -> Prop) _53779) = (@eq ((B -> Prop) -> (_107639 -> Prop) -> B -> (_107639 -> B) -> Prop) _53779).
Proof. exact (eq_refl (@eq ((B -> Prop) -> (_107639 -> Prop) -> B -> (_107639 -> B) -> Prop) _53779)). Qed.
Lemma lem4527305 {_107639 B : Type'} (_53779 : type839 _107639 B) : (_53779 = (term473 _107639 B)) = (_53779 = (term397 _107639 B)).
Proof. exact (MK_COMB (@lem4527304 _107639 B _53779) (@lem4527303 _107639 B)). Qed.
Lemma lem4527306 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4527307 {_107639 B : Type'} (_53779 : type839 _107639 B) : (term475 _107639 B _53779) = (term476 _107639 B _53779).
Proof. exact (MK_COMB (@lem4527306) (@lem4527305 _107639 B _53779)). Qed.
Lemma lem4527308 {_107639 B : Type'} (t : B -> Prop) : (term398 _107639 B t) = (term399 _107639 B t).
Proof. exact (eq_refl (term398 _107639 B t)). Qed.
Lemma lem4527309 {_107639 B : Type'} (_53779 : type839 _107639 B) (t : B -> Prop) : (term400 _107639 B _53779 t) = (term400 _107639 B _53779 t).
Proof. exact (eq_refl (term400 _107639 B _53779 t)). Qed.
Lemma lem4527310 {_107639 B : Type'} (_53779 : type839 _107639 B) (t : B -> Prop) : ((_53779 t) = (term398 _107639 B t)) = ((_53779 t) = (term399 _107639 B t)).
Proof. exact (MK_COMB (@lem4527309 _107639 B _53779 t) (@lem4527308 _107639 B t)). Qed.
Lemma lem4527311 {_107639 B : Type'} (_53779 : type839 _107639 B) : (term477 _107639 B _53779) = (term478 _107639 B _53779).
Proof. exact (fun_ext (fun t : B -> Prop => @lem4527310 _107639 B _53779 t)). Qed.
Lemma lem4527312 {B : Type'} : (@all (B -> Prop)) = (@all (B -> Prop)).
Proof. exact (eq_refl (@all (B -> Prop))). Qed.
Lemma lem4527313 {_107639 B : Type'} (_53779 : type839 _107639 B) : (term474 _107639 B _53779) = (term479 _107639 B _53779).
Proof. exact (MK_COMB (@lem4527312 B) (@lem4527311 _107639 B _53779)). Qed.
Lemma lem4527314 {_107639 B : Type'} (_53779 : type839 _107639 B) : ((_53779 = (term473 _107639 B)) = (term474 _107639 B _53779)) = ((_53779 = (term397 _107639 B)) = (term479 _107639 B _53779)).
Proof. exact (MK_COMB (@lem4527307 _107639 B _53779) (@lem4527313 _107639 B _53779)). Qed.
Lemma lem4527315 {_107639 B : Type'} (_53779 : type839 _107639 B) : (_53779 = (term397 _107639 B)) = (term479 _107639 B _53779).
Proof. exact (EQ_MP (@lem4527314 _107639 B _53779) (@lem4527301 _107639 B _53779)). Qed.
Lemma lem4527317 {_3571 _3575 : Type'} (s : _3575 -> _3571) (t : _3575 -> _3571) : (s = (term257 _3571 _3575 t)) = (term258 _3571 _3575 s t).
Proof. exact (EQ_MP (@lem19792 _3571 _3575 s t) (@lem0)). Qed.
Lemma lem4527318 {_107639 B : Type'} (s : type674 _107639 B) (t : type674 _107639 B) : (s = (term480 _107639 B t)) = (term481 _107639 B s t).
Proof. exact (@lem4527317 (type1446 _107639 B) (_107639 -> Prop) s t). Qed.
Lemma lem4527319 {_107639 B : Type'} (_53779 : type839 _107639 B) (t : B -> Prop) : ((_53779 t) = (term482 _107639 B t)) = (term483 _107639 B _53779 t).
Proof. exact (@lem4527318 _107639 B (_53779 t) (term399 _107639 B t)). Qed.
Lemma lem4527320 {_107639 B : Type'} (t : B -> Prop) (s : _107639 -> Prop) : (term401 _107639 B t s) = (term402 _107639 B t s).
Proof. exact (eq_refl (term401 _107639 B t s)). Qed.
Lemma lem4527321 {_107639 B : Type'} (t : B -> Prop) : (term482 _107639 B t) = (term399 _107639 B t).
Proof. exact (fun_ext (fun s : _107639 -> Prop => @lem4527320 _107639 B t s)). Qed.
Lemma lem4527322 {_107639 B : Type'} (_53779 : type839 _107639 B) (t : B -> Prop) : (term400 _107639 B _53779 t) = (term400 _107639 B _53779 t).
Proof. exact (eq_refl (term400 _107639 B _53779 t)). Qed.
Lemma lem4527323 {_107639 B : Type'} (_53779 : type839 _107639 B) (t : B -> Prop) : ((_53779 t) = (term482 _107639 B t)) = ((_53779 t) = (term399 _107639 B t)).
Proof. exact (MK_COMB (@lem4527322 _107639 B _53779 t) (@lem4527321 _107639 B t)). Qed.
Lemma lem4527324 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4527325 {_107639 B : Type'} (_53779 : type839 _107639 B) (t : B -> Prop) : (term484 _107639 B _53779 t) = (term485 _107639 B _53779 t).
Proof. exact (MK_COMB (@lem4527324) (@lem4527323 _107639 B _53779 t)). Qed.
Lemma lem4527326 {_107639 B : Type'} (t : B -> Prop) (s : _107639 -> Prop) : (term401 _107639 B t s) = (term402 _107639 B t s).
Proof. exact (eq_refl (term401 _107639 B t s)). Qed.
Lemma lem4527327 {_107639 B : Type'} (_53779 : type839 _107639 B) (t : B -> Prop) (s : _107639 -> Prop) : (term403 _107639 B _53779 t s) = (term403 _107639 B _53779 t s).
Proof. exact (eq_refl (term403 _107639 B _53779 t s)). Qed.
Lemma lem4527328 {_107639 B : Type'} (_53779 : type839 _107639 B) (t : B -> Prop) (s : _107639 -> Prop) : ((_53779 t s) = (term401 _107639 B t s)) = ((_53779 t s) = (term402 _107639 B t s)).
Proof. exact (MK_COMB (@lem4527327 _107639 B _53779 t s) (@lem4527326 _107639 B t s)). Qed.
Lemma lem4527329 {_107639 B : Type'} (_53779 : type839 _107639 B) (t : B -> Prop) : (term486 _107639 B _53779 t) = (term487 _107639 B _53779 t).
Proof. exact (fun_ext (fun s : _107639 -> Prop => @lem4527328 _107639 B _53779 t s)). Qed.
Lemma lem4527330 {_107639 : Type'} : (@all (_107639 -> Prop)) = (@all (_107639 -> Prop)).
Proof. exact (eq_refl (@all (_107639 -> Prop))). Qed.
Lemma lem4527331 {_107639 B : Type'} (_53779 : type839 _107639 B) (t : B -> Prop) : (term483 _107639 B _53779 t) = (term488 _107639 B _53779 t).
Proof. exact (MK_COMB (@lem4527330 _107639) (@lem4527329 _107639 B _53779 t)). Qed.
Lemma lem4527332 {_107639 B : Type'} (_53779 : type839 _107639 B) (t : B -> Prop) : (((_53779 t) = (term482 _107639 B t)) = (term483 _107639 B _53779 t)) = (((_53779 t) = (term399 _107639 B t)) = (term488 _107639 B _53779 t)).
Proof. exact (MK_COMB (@lem4527325 _107639 B _53779 t) (@lem4527331 _107639 B _53779 t)). Qed.
Lemma lem4527333 {_107639 B : Type'} (_53779 : type839 _107639 B) (t : B -> Prop) : ((_53779 t) = (term399 _107639 B t)) = (term488 _107639 B _53779 t).
Proof. exact (EQ_MP (@lem4527332 _107639 B _53779 t) (@lem4527319 _107639 B _53779 t)). Qed.
Lemma lem4527335 {_3571 _3575 : Type'} (s : _3575 -> _3571) (t : _3575 -> _3571) : (s = (term257 _3571 _3575 t)) = (term258 _3571 _3575 s t).
Proof. exact (EQ_MP (@lem19792 _3571 _3575 s t) (@lem0)). Qed.
Lemma lem4527336 {_107639 B : Type'} (s : type1446 _107639 B) (t : type1446 _107639 B) : (s = (term489 _107639 B t)) = (term490 _107639 B s t).
Proof. exact (@lem4527335 (type572 _107639 B) B s t). Qed.
Lemma lem4527337 {_107639 B : Type'} (_53779 : type839 _107639 B) (t : B -> Prop) (s : _107639 -> Prop) : ((_53779 t s) = (term491 _107639 B t s)) = (term492 _107639 B _53779 t s).
Proof. exact (@lem4527336 _107639 B (_53779 t s) (term402 _107639 B t s)). Qed.
Lemma lem4527338 {_107639 B : Type'} (t : B -> Prop) (s : _107639 -> Prop) (d : B) : (term404 _107639 B t s d) = (term125 _107639 B t s d).
Proof. exact (eq_refl (term404 _107639 B t s d)). Qed.
Lemma lem4527339 {_107639 B : Type'} (t : B -> Prop) (s : _107639 -> Prop) : (term491 _107639 B t s) = (term402 _107639 B t s).
Proof. exact (fun_ext (fun d : B => @lem4527338 _107639 B t s d)). Qed.
Lemma lem4527340 {_107639 B : Type'} (_53779 : type839 _107639 B) (t : B -> Prop) (s : _107639 -> Prop) : (term403 _107639 B _53779 t s) = (term403 _107639 B _53779 t s).
Proof. exact (eq_refl (term403 _107639 B _53779 t s)). Qed.
Lemma lem4527341 {_107639 B : Type'} (_53779 : type839 _107639 B) (t : B -> Prop) (s : _107639 -> Prop) : ((_53779 t s) = (term491 _107639 B t s)) = ((_53779 t s) = (term402 _107639 B t s)).
Proof. exact (MK_COMB (@lem4527340 _107639 B _53779 t s) (@lem4527339 _107639 B t s)). Qed.
Lemma lem4527342 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4527343 {_107639 B : Type'} (_53779 : type839 _107639 B) (t : B -> Prop) (s : _107639 -> Prop) : (term493 _107639 B _53779 t s) = (term494 _107639 B _53779 t s).
Proof. exact (MK_COMB (@lem4527342) (@lem4527341 _107639 B _53779 t s)). Qed.
Lemma lem4527344 {_107639 B : Type'} (t : B -> Prop) (s : _107639 -> Prop) (d : B) : (term404 _107639 B t s d) = (term125 _107639 B t s d).
Proof. exact (eq_refl (term404 _107639 B t s d)). Qed.
Lemma lem4527345 {_107639 B : Type'} (_53779 : type839 _107639 B) (t : B -> Prop) (s : _107639 -> Prop) (d : B) : (term405 _107639 B _53779 t s d) = (term405 _107639 B _53779 t s d).
Proof. exact (eq_refl (term405 _107639 B _53779 t s d)). Qed.
Lemma lem4527346 {_107639 B : Type'} (_53779 : type839 _107639 B) (t : B -> Prop) (s : _107639 -> Prop) (d : B) : ((_53779 t s d) = (term404 _107639 B t s d)) = ((_53779 t s d) = (term125 _107639 B t s d)).
Proof. exact (MK_COMB (@lem4527345 _107639 B _53779 t s d) (@lem4527344 _107639 B t s d)). Qed.
Lemma lem4527347 {_107639 B : Type'} (_53779 : type839 _107639 B) (t : B -> Prop) (s : _107639 -> Prop) : (term495 _107639 B _53779 t s) = (term496 _107639 B _53779 t s).
Proof. exact (fun_ext (fun d : B => @lem4527346 _107639 B _53779 t s d)). Qed.
Lemma lem4527348 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem4527349 {_107639 B : Type'} (_53779 : type839 _107639 B) (t : B -> Prop) (s : _107639 -> Prop) : (term492 _107639 B _53779 t s) = (term497 _107639 B _53779 t s).
Proof. exact (MK_COMB (@lem4527348 B) (@lem4527347 _107639 B _53779 t s)). Qed.
Lemma lem4527350 {_107639 B : Type'} (_53779 : type839 _107639 B) (t : B -> Prop) (s : _107639 -> Prop) : (((_53779 t s) = (term491 _107639 B t s)) = (term492 _107639 B _53779 t s)) = (((_53779 t s) = (term402 _107639 B t s)) = (term497 _107639 B _53779 t s)).
Proof. exact (MK_COMB (@lem4527343 _107639 B _53779 t s) (@lem4527349 _107639 B _53779 t s)). Qed.
Lemma lem4527351 {_107639 B : Type'} (_53779 : type839 _107639 B) (t : B -> Prop) (s : _107639 -> Prop) : ((_53779 t s) = (term402 _107639 B t s)) = (term497 _107639 B _53779 t s).
Proof. exact (EQ_MP (@lem4527350 _107639 B _53779 t s) (@lem4527337 _107639 B _53779 t s)). Qed.
Lemma lem4527353 {_3571 _3575 : Type'} (s : _3575 -> _3571) (t : _3575 -> _3571) : (s = (term257 _3571 _3575 t)) = (term258 _3571 _3575 s t).
Proof. exact (EQ_MP (@lem19792 _3571 _3575 s t) (@lem0)). Qed.
Lemma lem4527354 {_107639 B : Type'} (s : type572 _107639 B) (t : type572 _107639 B) : (s = (term498 _107639 B t)) = (term499 _107639 B s t).
Proof. exact (@lem4527353 Prop (_107639 -> B) s t). Qed.
Lemma lem4527355 {_107639 B : Type'} (_53779 : type839 _107639 B) (t : B -> Prop) (s : _107639 -> Prop) (d : B) : ((_53779 t s d) = (term500 _107639 B t s d)) = (term501 _107639 B _53779 t s d).
Proof. exact (@lem4527354 _107639 B (_53779 t s d) (term125 _107639 B t s d)). Qed.
Lemma lem4527356 {_107639 B : Type'} (GEN_PVAR_148 : _107639 -> B) (t : B -> Prop) (s : _107639 -> Prop) (d : B) : (term502 _107639 B t s d GEN_PVAR_148) = (term124 _107639 B GEN_PVAR_148 t s d).
Proof. exact (eq_refl (term502 _107639 B t s d GEN_PVAR_148)). Qed.
Lemma lem4527357 {_107639 B : Type'} (t : B -> Prop) (s : _107639 -> Prop) (d : B) : (term500 _107639 B t s d) = (term125 _107639 B t s d).
Proof. exact (fun_ext (fun GEN_PVAR_148 : _107639 -> B => @lem4527356 _107639 B GEN_PVAR_148 t s d)). Qed.
Lemma lem4527358 {_107639 B : Type'} (_53779 : type839 _107639 B) (t : B -> Prop) (s : _107639 -> Prop) (d : B) : (term405 _107639 B _53779 t s d) = (term405 _107639 B _53779 t s d).
Proof. exact (eq_refl (term405 _107639 B _53779 t s d)). Qed.
Lemma lem4527359 {_107639 B : Type'} (_53779 : type839 _107639 B) (t : B -> Prop) (s : _107639 -> Prop) (d : B) : ((_53779 t s d) = (term500 _107639 B t s d)) = ((_53779 t s d) = (term125 _107639 B t s d)).
Proof. exact (MK_COMB (@lem4527358 _107639 B _53779 t s d) (@lem4527357 _107639 B t s d)). Qed.
Lemma lem4527360 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4527361 {_107639 B : Type'} (_53779 : type839 _107639 B) (t : B -> Prop) (s : _107639 -> Prop) (d : B) : (term503 _107639 B _53779 t s d) = (term504 _107639 B _53779 t s d).
Proof. exact (MK_COMB (@lem4527360) (@lem4527359 _107639 B _53779 t s d)). Qed.
Lemma lem4527362 {_107639 B : Type'} (GEN_PVAR_148 : _107639 -> B) (t : B -> Prop) (s : _107639 -> Prop) (d : B) : (term502 _107639 B t s d GEN_PVAR_148) = (term124 _107639 B GEN_PVAR_148 t s d).
Proof. exact (eq_refl (term502 _107639 B t s d GEN_PVAR_148)). Qed.
Lemma lem4527363 {_107639 B : Type'} (_53779 : type839 _107639 B) (t : B -> Prop) (s : _107639 -> Prop) (d : B) (GEN_PVAR_148 : _107639 -> B) : (term505 _107639 B _53779 t s d GEN_PVAR_148) = (term505 _107639 B _53779 t s d GEN_PVAR_148).
Proof. exact (eq_refl (term505 _107639 B _53779 t s d GEN_PVAR_148)). Qed.
Lemma lem4527364 {_107639 B : Type'} (_53779 : type839 _107639 B) (GEN_PVAR_148 : _107639 -> B) (t : B -> Prop) (s : _107639 -> Prop) (d : B) : ((_53779 t s d GEN_PVAR_148) = (term502 _107639 B t s d GEN_PVAR_148)) = ((_53779 t s d GEN_PVAR_148) = (term124 _107639 B GEN_PVAR_148 t s d)).
Proof. exact (MK_COMB (@lem4527363 _107639 B _53779 t s d GEN_PVAR_148) (@lem4527362 _107639 B GEN_PVAR_148 t s d)). Qed.
Lemma lem4527365 {_107639 B : Type'} (_53779 : type839 _107639 B) (t : B -> Prop) (s : _107639 -> Prop) (d : B) : (term506 _107639 B _53779 t s d) = (term507 _107639 B _53779 t s d).
Proof. exact (fun_ext (fun GEN_PVAR_148 : _107639 -> B => @lem4527364 _107639 B _53779 GEN_PVAR_148 t s d)). Qed.
Lemma lem4527366 {_107639 B : Type'} : (@all (_107639 -> B)) = (@all (_107639 -> B)).
Proof. exact (eq_refl (@all (_107639 -> B))). Qed.
Lemma lem4527367 {_107639 B : Type'} (_53779 : type839 _107639 B) (t : B -> Prop) (s : _107639 -> Prop) (d : B) : (term501 _107639 B _53779 t s d) = (term508 _107639 B _53779 t s d).
Proof. exact (MK_COMB (@lem4527366 _107639 B) (@lem4527365 _107639 B _53779 t s d)). Qed.
Lemma lem4527368 {_107639 B : Type'} (_53779 : type839 _107639 B) (t : B -> Prop) (s : _107639 -> Prop) (d : B) : (((_53779 t s d) = (term500 _107639 B t s d)) = (term501 _107639 B _53779 t s d)) = (((_53779 t s d) = (term125 _107639 B t s d)) = (term508 _107639 B _53779 t s d)).
Proof. exact (MK_COMB (@lem4527361 _107639 B _53779 t s d) (@lem4527367 _107639 B _53779 t s d)). Qed.
Lemma lem4527369 {_107639 B : Type'} (_53779 : type839 _107639 B) (t : B -> Prop) (s : _107639 -> Prop) (d : B) : ((_53779 t s d) = (term125 _107639 B t s d)) = (term508 _107639 B _53779 t s d).
Proof. exact (EQ_MP (@lem4527368 _107639 B _53779 t s d) (@lem4527355 _107639 B _53779 t s d)). Qed.
Lemma lem4527370 {_107639 B : Type'} (_53779 : type839 _107639 B) (GEN_PVAR_148 : _107639 -> B) (t : B -> Prop) (s : _107639 -> Prop) (d : B) : ((_53779 t s d GEN_PVAR_148) = (term124 _107639 B GEN_PVAR_148 t s d)) = ((_53779 t s d GEN_PVAR_148) = (term124 _107639 B GEN_PVAR_148 t s d)).
Proof. exact (eq_refl ((_53779 t s d GEN_PVAR_148) = (term124 _107639 B GEN_PVAR_148 t s d))). Qed.
Lemma lem4527371 {_107639 B : Type'} (_53779 : type839 _107639 B) (t : B -> Prop) (s : _107639 -> Prop) (d : B) : (term507 _107639 B _53779 t s d) = (term507 _107639 B _53779 t s d).
Proof. exact (fun_ext (fun GEN_PVAR_148 : _107639 -> B => @lem4527370 _107639 B _53779 GEN_PVAR_148 t s d)). Qed.
Lemma lem4527372 {_107639 B : Type'} : (@all (_107639 -> B)) = (@all (_107639 -> B)).
Proof. exact (eq_refl (@all (_107639 -> B))). Qed.
Lemma lem4527373 {_107639 B : Type'} (_53779 : type839 _107639 B) (t : B -> Prop) (s : _107639 -> Prop) (d : B) : (term508 _107639 B _53779 t s d) = (term508 _107639 B _53779 t s d).
Proof. exact (MK_COMB (@lem4527372 _107639 B) (@lem4527371 _107639 B _53779 t s d)). Qed.
Lemma lem4527374 {_107639 B : Type'} (_53779 : type839 _107639 B) (t : B -> Prop) (s : _107639 -> Prop) (d : B) : ((_53779 t s d) = (term125 _107639 B t s d)) = (term508 _107639 B _53779 t s d).
Proof. exact (TRANS (@lem4527369 _107639 B _53779 t s d) (@lem4527373 _107639 B _53779 t s d)). Qed.
Lemma lem4527375 {_107639 B : Type'} (_53779 : type839 _107639 B) (t : B -> Prop) (s : _107639 -> Prop) : (term496 _107639 B _53779 t s) = (term509 _107639 B _53779 t s).
Proof. exact (fun_ext (fun d : B => @lem4527374 _107639 B _53779 t s d)). Qed.
Lemma lem4527376 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem4527377 {_107639 B : Type'} (_53779 : type839 _107639 B) (t : B -> Prop) (s : _107639 -> Prop) : (term497 _107639 B _53779 t s) = (term510 _107639 B _53779 t s).
Proof. exact (MK_COMB (@lem4527376 B) (@lem4527375 _107639 B _53779 t s)). Qed.
Lemma lem4527378 {_107639 B : Type'} (_53779 : type839 _107639 B) (t : B -> Prop) (s : _107639 -> Prop) : ((_53779 t s) = (term402 _107639 B t s)) = (term510 _107639 B _53779 t s).
Proof. exact (TRANS (@lem4527351 _107639 B _53779 t s) (@lem4527377 _107639 B _53779 t s)). Qed.
Lemma lem4527379 {_107639 B : Type'} (_53779 : type839 _107639 B) (t : B -> Prop) : (term487 _107639 B _53779 t) = (term511 _107639 B _53779 t).
Proof. exact (fun_ext (fun s : _107639 -> Prop => @lem4527378 _107639 B _53779 t s)). Qed.
Lemma lem4527380 {_107639 : Type'} : (@all (_107639 -> Prop)) = (@all (_107639 -> Prop)).
Proof. exact (eq_refl (@all (_107639 -> Prop))). Qed.
Lemma lem4527381 {_107639 B : Type'} (_53779 : type839 _107639 B) (t : B -> Prop) : (term488 _107639 B _53779 t) = (term512 _107639 B _53779 t).
Proof. exact (MK_COMB (@lem4527380 _107639) (@lem4527379 _107639 B _53779 t)). Qed.
Lemma lem4527382 {_107639 B : Type'} (_53779 : type839 _107639 B) (t : B -> Prop) : ((_53779 t) = (term399 _107639 B t)) = (term512 _107639 B _53779 t).
Proof. exact (TRANS (@lem4527333 _107639 B _53779 t) (@lem4527381 _107639 B _53779 t)). Qed.
Lemma lem4527383 {_107639 B : Type'} (_53779 : type839 _107639 B) : (term478 _107639 B _53779) = (term513 _107639 B _53779).
Proof. exact (fun_ext (fun t : B -> Prop => @lem4527382 _107639 B _53779 t)). Qed.
Lemma lem4527384 {B : Type'} : (@all (B -> Prop)) = (@all (B -> Prop)).
Proof. exact (eq_refl (@all (B -> Prop))). Qed.
Lemma lem4527385 {_107639 B : Type'} (_53779 : type839 _107639 B) : (term479 _107639 B _53779) = (term514 _107639 B _53779).
Proof. exact (MK_COMB (@lem4527384 B) (@lem4527383 _107639 B _53779)). Qed.
Lemma lem4527386 {_107639 B : Type'} (_53779 : type839 _107639 B) : (_53779 = (term397 _107639 B)) = (term514 _107639 B _53779).
Proof. exact (TRANS (@lem4527315 _107639 B _53779) (@lem4527385 _107639 B _53779)). Qed.
Lemma lem4527387 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4527388 {_107639 B : Type'} (_53779 : type839 _107639 B) : (term457 _107639 B _53779) = (term515 _107639 B _53779).
Proof. exact (MK_COMB (@lem4527387) (@lem4527386 _107639 B _53779)). Qed.
Lemma lem4527389 {_100044 _107639 _107642 A B : Type'} (_53779 : type839 _107639 B) : (term449 _100044 _107639 _107642 A B _53779) = (term449 _100044 _107639 _107642 A B _53779).
Proof. exact (eq_refl (term449 _100044 _107639 _107642 A B _53779)). Qed.
Lemma lem4527390 {_100044 _107639 _107642 A B : Type'} (_53779 : type839 _107639 B) : (term465 _100044 _107639 _107642 A B _53779) = (term516 _100044 _107639 _107642 A B _53779).
Proof. exact (MK_COMB (@lem4527388 _107639 B _53779) (@lem4527389 _100044 _107639 _107642 A B _53779)). Qed.
Lemma lem4527391 {_100044 _107639 _107642 A B : Type'} : (term467 _100044 _107639 _107642 A B) = (term517 _100044 _107639 _107642 A B).
Proof. exact (fun_ext (fun _53779 : type839 _107639 B => @lem4527390 _100044 _107639 _107642 A B _53779)). Qed.
Lemma lem4527392 {_107639 B : Type'} : (@all ((B -> Prop) -> (_107639 -> Prop) -> B -> (_107639 -> B) -> Prop)) = (@all ((B -> Prop) -> (_107639 -> Prop) -> B -> (_107639 -> B) -> Prop)).
Proof. exact (eq_refl (@all ((B -> Prop) -> (_107639 -> Prop) -> B -> (_107639 -> B) -> Prop))). Qed.
Lemma lem4527393 {_100044 _107639 _107642 A B : Type'} : (term469 _100044 _107639 _107642 A B) = (term518 _100044 _107639 _107642 A B).
Proof. exact (MK_COMB (@lem4527392 _107639 B) (@lem4527391 _100044 _107639 _107642 A B)). Qed.
Lemma lem4527394 {_100044 _107639 _107642 A B : Type'} : (term456 _100044 _107639 _107642 A B) = (term456 _100044 _107639 _107642 A B).
Proof. exact (eq_refl (term456 _100044 _107639 _107642 A B)). Qed.
Lemma lem4527395 {_100044 _107639 _107642 A B : Type'} : ((term396 _100044 _107639 _107642 A B) = (term469 _100044 _107639 _107642 A B)) = ((term396 _100044 _107639 _107642 A B) = (term518 _100044 _107639 _107642 A B)).
Proof. exact (MK_COMB (@lem4527394 _100044 _107639 _107642 A B) (@lem4527393 _100044 _107639 _107642 A B)). Qed.
Lemma lem4527396 {_100044 _107639 _107642 A B : Type'} : (term396 _100044 _107639 _107642 A B) = (term518 _100044 _107639 _107642 A B).
Proof. exact (EQ_MP (@lem4527395 _100044 _107639 _107642 A B) (@lem4527297 _100044 _107639 _107642 A B)). Qed.
Lemma lem4527397 {_107642 B : Type'} (_53780 : type839 _107642 B) (h1 : _53780 = (term397 _107642 B)) : _53780 = (term397 _107642 B).
Proof. exact (h1). Qed.
Lemma lem4527398 {B : Type'} (t : B -> Prop) : t = t.
Proof. exact (eq_refl t). Qed.
Lemma lem4527399 {_107642 B : Type'} (t : B -> Prop) (_53780 : type839 _107642 B) (h1 : _53780 = (term397 _107642 B)) : (_53780 t) = (term398 _107642 B t).
Proof. exact (MK_COMB (@lem4527397 _107642 B _53780 h1) (@lem4527398 B t)). Qed.
Lemma lem4527400 {_107642 B : Type'} (t : B -> Prop) : (term398 _107642 B t) = (term399 _107642 B t).
Proof. exact (eq_refl (term398 _107642 B t)). Qed.
Lemma lem4527401 {_107642 B : Type'} (_53780 : type839 _107642 B) (t : B -> Prop) : (term400 _107642 B _53780 t) = (term400 _107642 B _53780 t).
Proof. exact (eq_refl (term400 _107642 B _53780 t)). Qed.
Lemma lem4527402 {_107642 B : Type'} (_53780 : type839 _107642 B) (t : B -> Prop) : ((_53780 t) = (term398 _107642 B t)) = ((_53780 t) = (term399 _107642 B t)).
Proof. exact (MK_COMB (@lem4527401 _107642 B _53780 t) (@lem4527400 _107642 B t)). Qed.
Lemma lem4527403 {_107642 B : Type'} (t : B -> Prop) (_53780 : type839 _107642 B) (h1 : _53780 = (term397 _107642 B)) : (_53780 t) = (term399 _107642 B t).
Proof. exact (EQ_MP (@lem4527402 _107642 B _53780 t) (@lem4527399 _107642 B t _53780 h1)). Qed.
Lemma lem4527404 {_107642 : Type'} (s : _107642 -> Prop) : s = s.
Proof. exact (eq_refl s). Qed.
Lemma lem4527405 {_107642 B : Type'} (t : B -> Prop) (s : _107642 -> Prop) (_53780 : type839 _107642 B) (h1 : _53780 = (term397 _107642 B)) : (_53780 t s) = (term401 _107642 B t s).
Proof. exact (MK_COMB (@lem4527403 _107642 B t _53780 h1) (@lem4527404 _107642 s)). Qed.
Lemma lem4527406 {_107642 B : Type'} (t : B -> Prop) (s : _107642 -> Prop) : (term401 _107642 B t s) = (term402 _107642 B t s).
Proof. exact (eq_refl (term401 _107642 B t s)). Qed.
Lemma lem4527407 {_107642 B : Type'} (_53780 : type839 _107642 B) (t : B -> Prop) (s : _107642 -> Prop) : (term403 _107642 B _53780 t s) = (term403 _107642 B _53780 t s).
Proof. exact (eq_refl (term403 _107642 B _53780 t s)). Qed.
Lemma lem4527408 {_107642 B : Type'} (_53780 : type839 _107642 B) (t : B -> Prop) (s : _107642 -> Prop) : ((_53780 t s) = (term401 _107642 B t s)) = ((_53780 t s) = (term402 _107642 B t s)).
Proof. exact (MK_COMB (@lem4527407 _107642 B _53780 t s) (@lem4527406 _107642 B t s)). Qed.
Lemma lem4527409 {_107642 B : Type'} (t : B -> Prop) (s : _107642 -> Prop) (_53780 : type839 _107642 B) (h1 : _53780 = (term397 _107642 B)) : (_53780 t s) = (term402 _107642 B t s).
Proof. exact (EQ_MP (@lem4527408 _107642 B _53780 t s) (@lem4527405 _107642 B t s _53780 h1)). Qed.
Lemma lem4527410 {B : Type'} (d : B) : d = d.
Proof. exact (eq_refl d). Qed.
Lemma lem4527411 {_107642 B : Type'} (t : B -> Prop) (s : _107642 -> Prop) (d : B) (_53780 : type839 _107642 B) (h1 : _53780 = (term397 _107642 B)) : (_53780 t s d) = (term404 _107642 B t s d).
Proof. exact (MK_COMB (@lem4527409 _107642 B t s _53780 h1) (@lem4527410 B d)). Qed.
Lemma lem4527412 {_107642 B : Type'} (t : B -> Prop) (s : _107642 -> Prop) (d : B) : (term404 _107642 B t s d) = (term125 _107642 B t s d).
Proof. exact (eq_refl (term404 _107642 B t s d)). Qed.
Lemma lem4527413 {_107642 B : Type'} (_53780 : type839 _107642 B) (t : B -> Prop) (s : _107642 -> Prop) (d : B) : (term405 _107642 B _53780 t s d) = (term405 _107642 B _53780 t s d).
Proof. exact (eq_refl (term405 _107642 B _53780 t s d)). Qed.
Lemma lem4527414 {_107642 B : Type'} (_53780 : type839 _107642 B) (t : B -> Prop) (s : _107642 -> Prop) (d : B) : ((_53780 t s d) = (term404 _107642 B t s d)) = ((_53780 t s d) = (term125 _107642 B t s d)).
Proof. exact (MK_COMB (@lem4527413 _107642 B _53780 t s d) (@lem4527412 _107642 B t s d)). Qed.
Lemma lem4527415 {_107642 B : Type'} (t : B -> Prop) (s : _107642 -> Prop) (d : B) (_53780 : type839 _107642 B) (h1 : _53780 = (term397 _107642 B)) : (_53780 t s d) = (term125 _107642 B t s d).
Proof. exact (EQ_MP (@lem4527414 _107642 B _53780 t s d) (@lem4527411 _107642 B t s d _53780 h1)). Qed.
Lemma lem4527421 (n : nat) (m : nat) : (Nat.pow n m) = (Nat.pow n m).
Proof. exact (eq_refl (Nat.pow n m)). Qed.
Lemma lem4527425 {A : Type'} (f : A -> nat) : f = f.
Proof. exact (eq_refl f). Qed.
Lemma lem4527442 {A : Type'} (s : A -> Prop) (f : A -> nat) (x : A) (d : nat) : (term86 A s f x d) = (term86 A s f x d).
Proof. exact (eq_refl (term86 A s f x d)). Qed.
Lemma lem4527443 {A : Type'} (s : A -> Prop) (f : A -> nat) (d : nat) : (term87 A s f d) = (term87 A s f d).
Proof. exact (fun_ext (fun x : A => @lem4527442 A s f x d)). Qed.
Lemma lem4527444 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem4527445 {A : Type'} (s : A -> Prop) (f : A -> nat) (d : nat) : (term88 A s f d) = (term88 A s f d).
Proof. exact (MK_COMB (@lem4527444 A) (@lem4527443 A s f d)). Qed.
Lemma lem4527460 {A : Type'} (s : A -> Prop) (f : A -> nat) (x : A) (t : nat -> Prop) : (term89 A s f x t) = (term89 A s f x t).
Proof. exact (eq_refl (term89 A s f x t)). Qed.
Lemma lem4527461 {A : Type'} (s : A -> Prop) (f : A -> nat) (t : nat -> Prop) : (term90 A s f t) = (term90 A s f t).
Proof. exact (fun_ext (fun x : A => @lem4527460 A s f x t)). Qed.
Lemma lem4527462 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem4527463 {A : Type'} (s : A -> Prop) (f : A -> nat) (t : nat -> Prop) : (term91 A s f t) = (term91 A s f t).
Proof. exact (MK_COMB (@lem4527462 A) (@lem4527461 A s f t)). Qed.
Lemma lem4527464 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4527465 {A : Type'} (s : A -> Prop) (f : A -> nat) (t : nat -> Prop) : (term92 A s f t) = (term92 A s f t).
Proof. exact (MK_COMB (@lem4527464) (@lem4527463 A s f t)). Qed.
Lemma lem4527466 {A : Type'} (t : nat -> Prop) (s : A -> Prop) (f : A -> nat) (d : nat) : (term93 A t s f d) = (term93 A t s f d).
Proof. exact (MK_COMB (@lem4527465 A s f t) (@lem4527445 A s f d)). Qed.
Lemma lem4527469 {A : Type'} (GEN_PVAR_148 : A -> nat) : (@SETSPEC (A -> nat) GEN_PVAR_148) = (@SETSPEC (A -> nat) GEN_PVAR_148).
Proof. exact (eq_refl (@SETSPEC (A -> nat) GEN_PVAR_148)). Qed.
Lemma lem4527470 {A : Type'} (GEN_PVAR_148 : A -> nat) (t : nat -> Prop) (s : A -> Prop) (f : A -> nat) (d : nat) : (term94 A GEN_PVAR_148 t s f d) = (term94 A GEN_PVAR_148 t s f d).
Proof. exact (MK_COMB (@lem4527469 A GEN_PVAR_148) (@lem4527466 A t s f d)). Qed.
Lemma lem4527471 {A : Type'} (GEN_PVAR_148 : A -> nat) (t : nat -> Prop) (s : A -> Prop) (d : nat) (f : A -> nat) : (term95 A GEN_PVAR_148 t s d f) = (term95 A GEN_PVAR_148 t s d f).
Proof. exact (MK_COMB (@lem4527470 A GEN_PVAR_148 t s f d) (@lem4527425 A f)). Qed.
Lemma lem4527472 {A : Type'} (GEN_PVAR_148 : A -> nat) (t : nat -> Prop) (s : A -> Prop) (d : nat) : (term96 A GEN_PVAR_148 t s d) = (term96 A GEN_PVAR_148 t s d).
Proof. exact (fun_ext (fun f : A -> nat => @lem4527471 A GEN_PVAR_148 t s d f)). Qed.
Lemma lem4527473 {A : Type'} : (@ex (A -> nat)) = (@ex (A -> nat)).
Proof. exact (eq_refl (@ex (A -> nat))). Qed.
Lemma lem4527474 {A : Type'} (GEN_PVAR_148 : A -> nat) (t : nat -> Prop) (s : A -> Prop) (d : nat) : (term97 A GEN_PVAR_148 t s d) = (term97 A GEN_PVAR_148 t s d).
Proof. exact (MK_COMB (@lem4527473 A) (@lem4527472 A GEN_PVAR_148 t s d)). Qed.
Lemma lem4527475 {A : Type'} (t : nat -> Prop) (s : A -> Prop) (d : nat) : (term98 A t s d) = (term98 A t s d).
Proof. exact (fun_ext (fun GEN_PVAR_148 : A -> nat => @lem4527474 A GEN_PVAR_148 t s d)). Qed.
Lemma lem4527476 {A : Type'} : (@GSPEC (A -> nat)) = (@GSPEC (A -> nat)).
Proof. exact (eq_refl (@GSPEC (A -> nat))). Qed.
Lemma lem4527477 {A : Type'} (t : nat -> Prop) (s : A -> Prop) (d : nat) : (term99 A t s d) = (term99 A t s d).
Proof. exact (MK_COMB (@lem4527476 A) (@lem4527475 A t s d)). Qed.
Lemma lem4527478 {A : Type'} : (@HAS_SIZE (A -> nat)) = (@HAS_SIZE (A -> nat)).
Proof. exact (eq_refl (@HAS_SIZE (A -> nat))). Qed.
Lemma lem4527479 {A : Type'} (t : nat -> Prop) (s : A -> Prop) (d : nat) : (term100 A t s d) = (term100 A t s d).
Proof. exact (MK_COMB (@lem4527478 A) (@lem4527477 A t s d)). Qed.
Lemma lem4527480 {A : Type'} (t : nat -> Prop) (s : A -> Prop) (d : nat) (n : nat) (m : nat) : (term101 A t s d n m) = (term101 A t s d n m).
Proof. exact (MK_COMB (@lem4527479 A t s d) (@lem4527421 n m)). Qed.
Lemma lem4527495 {A : Type'} (s : A -> Prop) (m : nat) (t : nat -> Prop) (n : nat) : (term102 A s m t n) = (term102 A s m t n).
Proof. exact (eq_refl (term102 A s m t n)). Qed.
Lemma lem4527496 {A : Type'} (t : nat -> Prop) (s : A -> Prop) (d : nat) (n : nat) (m : nat) : (term103 A t s d n m) = (term103 A t s d n m).
Proof. exact (MK_COMB (@lem4527495 A s m t n) (@lem4527480 A t s d n m)). Qed.
Lemma lem4527497 {A : Type'} (t : nat -> Prop) (d : nat) (n : nat) (m : nat) : (term104 A t d n m) = (term104 A t d n m).
Proof. exact (fun_ext (fun s : A -> Prop => @lem4527496 A t s d n m)). Qed.
Lemma lem4527498 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem4527499 {A : Type'} (t : nat -> Prop) (d : nat) (n : nat) (m : nat) : (term105 A t d n m) = (term105 A t d n m).
Proof. exact (MK_COMB (@lem4527498 A) (@lem4527497 A t d n m)). Qed.
Lemma lem4527500 {A : Type'} (t : nat -> Prop) (d : nat) (n : nat) : (term106 A t d n) = (term106 A t d n).
Proof. exact (fun_ext (fun m : nat => @lem4527499 A t d n m)). Qed.
Lemma lem4527501 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4527502 {A : Type'} (t : nat -> Prop) (d : nat) (n : nat) : (term107 A t d n) = (term107 A t d n).
Proof. exact (MK_COMB (@lem4527501) (@lem4527500 A t d n)). Qed.
Lemma lem4527503 {A : Type'} (d : nat) (n : nat) : (term108 A d n) = (term108 A d n).
Proof. exact (fun_ext (fun t : nat -> Prop => @lem4527502 A t d n)). Qed.
Lemma lem4527504 : (@all (nat -> Prop)) = (@all (nat -> Prop)).
Proof. exact (eq_refl (@all (nat -> Prop))). Qed.
Lemma lem4527505 {A : Type'} (d : nat) (n : nat) : (term109 A d n) = (term109 A d n).
Proof. exact (MK_COMB (@lem4527504) (@lem4527503 A d n)). Qed.
Lemma lem4527506 {A : Type'} (d : nat) : (term110 A d) = (term110 A d).
Proof. exact (fun_ext (fun n : nat => @lem4527505 A d n)). Qed.
Lemma lem4527507 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4527508 {A : Type'} (d : nat) : (term111 A d) = (term111 A d).
Proof. exact (MK_COMB (@lem4527507) (@lem4527506 A d)). Qed.
Lemma lem4527509 {A : Type'} : (term112 A) = (term112 A).
Proof. exact (fun_ext (fun d : nat => @lem4527508 A d)). Qed.
Lemma lem4527510 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4527511 {A : Type'} : (term13 A) = (term13 A).
Proof. exact (MK_COMB (@lem4527510) (@lem4527509 A)). Qed.
Lemma lem4527512 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem4527513 {A : Type'} : (term24 A) = (term24 A).
Proof. exact (MK_COMB (@lem4527512) (@lem4527511 A)). Qed.
Lemma lem4527518 (n : nat) (m : nat) : (Nat.pow n m) = (Nat.pow n m).
Proof. exact (eq_refl (Nat.pow n m)). Qed.
Lemma lem4527522 {A B : Type'} (f : A -> B) : f = f.
Proof. exact (eq_refl f). Qed.
Lemma lem4527539 {A B : Type'} (s : A -> Prop) (f : A -> B) (x : A) (d : B) : (term113 A B s f x d) = (term113 A B s f x d).
Proof. exact (eq_refl (term113 A B s f x d)). Qed.
Lemma lem4527540 {A B : Type'} (s : A -> Prop) (f : A -> B) (d : B) : (term114 A B s f d) = (term114 A B s f d).
Proof. exact (fun_ext (fun x : A => @lem4527539 A B s f x d)). Qed.
Lemma lem4527541 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem4527542 {A B : Type'} (s : A -> Prop) (f : A -> B) (d : B) : (term115 A B s f d) = (term115 A B s f d).
Proof. exact (MK_COMB (@lem4527541 A) (@lem4527540 A B s f d)). Qed.
Lemma lem4527557 {A B : Type'} (s : A -> Prop) (f : A -> B) (x : A) (t : B -> Prop) : (term116 A B s f x t) = (term116 A B s f x t).
Proof. exact (eq_refl (term116 A B s f x t)). Qed.
Lemma lem4527558 {A B : Type'} (s : A -> Prop) (f : A -> B) (t : B -> Prop) : (term117 A B s f t) = (term117 A B s f t).
Proof. exact (fun_ext (fun x : A => @lem4527557 A B s f x t)). Qed.
Lemma lem4527559 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem4527560 {A B : Type'} (s : A -> Prop) (f : A -> B) (t : B -> Prop) : (term118 A B s f t) = (term118 A B s f t).
Proof. exact (MK_COMB (@lem4527559 A) (@lem4527558 A B s f t)). Qed.
Lemma lem4527561 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4527562 {A B : Type'} (s : A -> Prop) (f : A -> B) (t : B -> Prop) : (term119 A B s f t) = (term119 A B s f t).
Proof. exact (MK_COMB (@lem4527561) (@lem4527560 A B s f t)). Qed.
Lemma lem4527563 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (f : A -> B) (d : B) : (term120 A B t s f d) = (term120 A B t s f d).
Proof. exact (MK_COMB (@lem4527562 A B s f t) (@lem4527542 A B s f d)). Qed.
Lemma lem4527566 {A B : Type'} (GEN_PVAR_148 : A -> B) : (@SETSPEC (A -> B) GEN_PVAR_148) = (@SETSPEC (A -> B) GEN_PVAR_148).
Proof. exact (eq_refl (@SETSPEC (A -> B) GEN_PVAR_148)). Qed.
Lemma lem4527567 {A B : Type'} (GEN_PVAR_148 : A -> B) (t : B -> Prop) (s : A -> Prop) (f : A -> B) (d : B) : (term121 A B GEN_PVAR_148 t s f d) = (term121 A B GEN_PVAR_148 t s f d).
Proof. exact (MK_COMB (@lem4527566 A B GEN_PVAR_148) (@lem4527563 A B t s f d)). Qed.
Lemma lem4527568 {A B : Type'} (GEN_PVAR_148 : A -> B) (t : B -> Prop) (s : A -> Prop) (d : B) (f : A -> B) : (term122 A B GEN_PVAR_148 t s d f) = (term122 A B GEN_PVAR_148 t s d f).
Proof. exact (MK_COMB (@lem4527567 A B GEN_PVAR_148 t s f d) (@lem4527522 A B f)). Qed.
Lemma lem4527569 {A B : Type'} (GEN_PVAR_148 : A -> B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term123 A B GEN_PVAR_148 t s d) = (term123 A B GEN_PVAR_148 t s d).
Proof. exact (fun_ext (fun f : A -> B => @lem4527568 A B GEN_PVAR_148 t s d f)). Qed.
Lemma lem4527570 {A B : Type'} : (@ex (A -> B)) = (@ex (A -> B)).
Proof. exact (eq_refl (@ex (A -> B))). Qed.
Lemma lem4527571 {A B : Type'} (GEN_PVAR_148 : A -> B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term124 A B GEN_PVAR_148 t s d) = (term124 A B GEN_PVAR_148 t s d).
Proof. exact (MK_COMB (@lem4527570 A B) (@lem4527569 A B GEN_PVAR_148 t s d)). Qed.
Lemma lem4527572 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (d : B) : (term125 A B t s d) = (term125 A B t s d).
Proof. exact (fun_ext (fun GEN_PVAR_148 : A -> B => @lem4527571 A B GEN_PVAR_148 t s d)). Qed.
Lemma lem4527573 {A B : Type'} : (@GSPEC (A -> B)) = (@GSPEC (A -> B)).
Proof. exact (eq_refl (@GSPEC (A -> B))). Qed.
Lemma lem4527574 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (d : B) : (term126 A B t s d) = (term126 A B t s d).
Proof. exact (MK_COMB (@lem4527573 A B) (@lem4527572 A B t s d)). Qed.
Lemma lem4527575 {A B : Type'} : (@HAS_SIZE (A -> B)) = (@HAS_SIZE (A -> B)).
Proof. exact (eq_refl (@HAS_SIZE (A -> B))). Qed.
Lemma lem4527576 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (d : B) : (term127 A B t s d) = (term127 A B t s d).
Proof. exact (MK_COMB (@lem4527575 A B) (@lem4527574 A B t s d)). Qed.
Lemma lem4527577 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (d : B) (n : nat) (m : nat) : (term128 A B t s d n m) = (term128 A B t s d n m).
Proof. exact (MK_COMB (@lem4527576 A B t s d) (@lem4527518 n m)). Qed.
Lemma lem4527592 {A B : Type'} (s : A -> Prop) (m : nat) (t : B -> Prop) (n : nat) : (term129 A B s m t n) = (term129 A B s m t n).
Proof. exact (eq_refl (term129 A B s m t n)). Qed.
Lemma lem4527593 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (d : B) (n : nat) (m : nat) : (term130 A B t s d n m) = (term130 A B t s d n m).
Proof. exact (MK_COMB (@lem4527592 A B s m t n) (@lem4527577 A B t s d n m)). Qed.
Lemma lem4527594 {A B : Type'} (t : B -> Prop) (d : B) (n : nat) (m : nat) : (term131 A B t d n m) = (term131 A B t d n m).
Proof. exact (fun_ext (fun s : A -> Prop => @lem4527593 A B t s d n m)). Qed.
Lemma lem4527595 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem4527596 {A B : Type'} (t : B -> Prop) (d : B) (n : nat) (m : nat) : (term132 A B t d n m) = (term132 A B t d n m).
Proof. exact (MK_COMB (@lem4527595 A) (@lem4527594 A B t d n m)). Qed.
Lemma lem4527597 {A B : Type'} (t : B -> Prop) (d : B) (n : nat) : (term133 A B t d n) = (term133 A B t d n).
Proof. exact (fun_ext (fun m : nat => @lem4527596 A B t d n m)). Qed.
Lemma lem4527598 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4527599 {A B : Type'} (t : B -> Prop) (d : B) (n : nat) : (term134 A B t d n) = (term134 A B t d n).
Proof. exact (MK_COMB (@lem4527598) (@lem4527597 A B t d n)). Qed.
Lemma lem4527600 {A B : Type'} (d : B) (n : nat) : (term135 A B d n) = (term135 A B d n).
Proof. exact (fun_ext (fun t : B -> Prop => @lem4527599 A B t d n)). Qed.
Lemma lem4527601 {B : Type'} : (@all (B -> Prop)) = (@all (B -> Prop)).
Proof. exact (eq_refl (@all (B -> Prop))). Qed.
Lemma lem4527602 {A B : Type'} (d : B) (n : nat) : (term136 A B d n) = (term136 A B d n).
Proof. exact (MK_COMB (@lem4527601 B) (@lem4527600 A B d n)). Qed.
Lemma lem4527603 {A B : Type'} (d : B) : (term137 A B d) = (term137 A B d).
Proof. exact (fun_ext (fun n : nat => @lem4527602 A B d n)). Qed.
Lemma lem4527604 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4527605 {A B : Type'} (d : B) : (term138 A B d) = (term138 A B d).
Proof. exact (MK_COMB (@lem4527604) (@lem4527603 A B d)). Qed.
Lemma lem4527606 {A B : Type'} : (term139 A B) = (term139 A B).
Proof. exact (fun_ext (fun d : B => @lem4527605 A B d)). Qed.
Lemma lem4527607 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem4527608 {A B : Type'} : (term12 A B) = (term12 A B).
Proof. exact (MK_COMB (@lem4527607 B) (@lem4527606 A B)). Qed.
Lemma lem4527609 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4527610 {A B : Type'} : (term25 A B) = (term25 A B).
Proof. exact (MK_COMB (@lem4527609) (@lem4527608 A B)). Qed.
Lemma lem4527611 {A B : Type'} : (term27 A B) = (term27 A B).
Proof. exact (MK_COMB (@lem4527610 A B) (@lem4527513 A)). Qed.
Lemma lem4527616 (n : nat) (m : nat) : (Nat.pow n m) = (Nat.pow n m).
Proof. exact (eq_refl (Nat.pow n m)). Qed.
Lemma lem4527618 {_107642 B : Type'} (t : B -> Prop) (s : _107642 -> Prop) (d : B) (_53780 : type839 _107642 B) (h1 : _53780 = (term397 _107642 B)) : (term125 _107642 B t s d) = (_53780 t s d).
Proof. exact (SYM (@lem4527415 _107642 B t s d _53780 h1)). Qed.
Lemma lem4527619 {_107642 B : Type'} (t : B -> Prop) (s : _107642 -> Prop) (d : B) (_53780 : type839 _107642 B) (h1 : _53780 = (term397 _107642 B)) : (term125 _107642 B t s d) = (_53780 t s d).
Proof. exact (@lem4527618 _107642 B t s d _53780 h1). Qed.
Lemma lem4527620 {_107642 B : Type'} : (@GSPEC (_107642 -> B)) = (@GSPEC (_107642 -> B)).
Proof. exact (eq_refl (@GSPEC (_107642 -> B))). Qed.
Lemma lem4527621 {_107642 B : Type'} (t : B -> Prop) (s : _107642 -> Prop) (d : B) (_53780 : type839 _107642 B) (h1 : _53780 = (term397 _107642 B)) : (term126 _107642 B t s d) = (term406 _107642 B _53780 t s d).
Proof. exact (MK_COMB (@lem4527620 _107642 B) (@lem4527619 _107642 B t s d _53780 h1)). Qed.
Lemma lem4527622 {_107642 B : Type'} : (@HAS_SIZE (_107642 -> B)) = (@HAS_SIZE (_107642 -> B)).
Proof. exact (eq_refl (@HAS_SIZE (_107642 -> B))). Qed.
Lemma lem4527623 {_107642 B : Type'} (t : B -> Prop) (s : _107642 -> Prop) (d : B) (_53780 : type839 _107642 B) (h1 : _53780 = (term397 _107642 B)) : (term127 _107642 B t s d) = (term407 _107642 B _53780 t s d).
Proof. exact (MK_COMB (@lem4527622 _107642 B) (@lem4527621 _107642 B t s d _53780 h1)). Qed.
Lemma lem4527624 {_107642 B : Type'} (t : B -> Prop) (s : _107642 -> Prop) (d : B) (n : nat) (m : nat) (_53780 : type839 _107642 B) (h1 : _53780 = (term397 _107642 B)) : (term128 _107642 B t s d n m) = (term408 _107642 B _53780 t s d n m).
Proof. exact (MK_COMB (@lem4527623 _107642 B t s d _53780 h1) (@lem4527616 n m)). Qed.
Lemma lem4527639 {_107642 B : Type'} (s : _107642 -> Prop) (m : nat) (t : B -> Prop) (n : nat) : (term129 _107642 B s m t n) = (term129 _107642 B s m t n).
Proof. exact (eq_refl (term129 _107642 B s m t n)). Qed.
Lemma lem4527640 {_107642 B : Type'} (t : B -> Prop) (s : _107642 -> Prop) (d : B) (n : nat) (m : nat) (_53780 : type839 _107642 B) (h1 : _53780 = (term397 _107642 B)) : (term130 _107642 B t s d n m) = (term409 _107642 B _53780 t s d n m).
Proof. exact (MK_COMB (@lem4527639 _107642 B s m t n) (@lem4527624 _107642 B t s d n m _53780 h1)). Qed.
Lemma lem4527641 {_107642 B : Type'} (t : B -> Prop) (d : B) (n : nat) (m : nat) (_53780 : type839 _107642 B) (h1 : _53780 = (term397 _107642 B)) : (term131 _107642 B t d n m) = (term410 _107642 B _53780 t d n m).
Proof. exact (fun_ext (fun s : _107642 -> Prop => @lem4527640 _107642 B t s d n m _53780 h1)). Qed.
Lemma lem4527642 {_107642 : Type'} : (@all (_107642 -> Prop)) = (@all (_107642 -> Prop)).
Proof. exact (eq_refl (@all (_107642 -> Prop))). Qed.
Lemma lem4527643 {_107642 B : Type'} (t : B -> Prop) (d : B) (n : nat) (m : nat) (_53780 : type839 _107642 B) (h1 : _53780 = (term397 _107642 B)) : (term132 _107642 B t d n m) = (term411 _107642 B _53780 t d n m).
Proof. exact (MK_COMB (@lem4527642 _107642) (@lem4527641 _107642 B t d n m _53780 h1)). Qed.
Lemma lem4527644 {_107642 B : Type'} (t : B -> Prop) (d : B) (n : nat) (_53780 : type839 _107642 B) (h1 : _53780 = (term397 _107642 B)) : (term133 _107642 B t d n) = (term412 _107642 B _53780 t d n).
Proof. exact (fun_ext (fun m : nat => @lem4527643 _107642 B t d n m _53780 h1)). Qed.
Lemma lem4527645 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4527646 {_107642 B : Type'} (t : B -> Prop) (d : B) (n : nat) (_53780 : type839 _107642 B) (h1 : _53780 = (term397 _107642 B)) : (term134 _107642 B t d n) = (term413 _107642 B _53780 t d n).
Proof. exact (MK_COMB (@lem4527645) (@lem4527644 _107642 B t d n _53780 h1)). Qed.
Lemma lem4527647 {_107642 B : Type'} (d : B) (n : nat) (_53780 : type839 _107642 B) (h1 : _53780 = (term397 _107642 B)) : (term135 _107642 B d n) = (term414 _107642 B _53780 d n).
Proof. exact (fun_ext (fun t : B -> Prop => @lem4527646 _107642 B t d n _53780 h1)). Qed.
Lemma lem4527648 {B : Type'} : (@all (B -> Prop)) = (@all (B -> Prop)).
Proof. exact (eq_refl (@all (B -> Prop))). Qed.
Lemma lem4527649 {_107642 B : Type'} (d : B) (n : nat) (_53780 : type839 _107642 B) (h1 : _53780 = (term397 _107642 B)) : (term136 _107642 B d n) = (term415 _107642 B _53780 d n).
Proof. exact (MK_COMB (@lem4527648 B) (@lem4527647 _107642 B d n _53780 h1)). Qed.
Lemma lem4527650 {_107642 B : Type'} (d : B) (_53780 : type839 _107642 B) (h1 : _53780 = (term397 _107642 B)) : (term137 _107642 B d) = (term416 _107642 B _53780 d).
Proof. exact (fun_ext (fun n : nat => @lem4527649 _107642 B d n _53780 h1)). Qed.
Lemma lem4527651 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4527652 {_107642 B : Type'} (d : B) (_53780 : type839 _107642 B) (h1 : _53780 = (term397 _107642 B)) : (term138 _107642 B d) = (term417 _107642 B _53780 d).
Proof. exact (MK_COMB (@lem4527651) (@lem4527650 _107642 B d _53780 h1)). Qed.
Lemma lem4527653 {_107642 B : Type'} (_53780 : type839 _107642 B) (h1 : _53780 = (term397 _107642 B)) : (term139 _107642 B) = (term418 _107642 B _53780).
Proof. exact (fun_ext (fun d : B => @lem4527652 _107642 B d _53780 h1)). Qed.
Lemma lem4527654 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem4527655 {_107642 B : Type'} (_53780 : type839 _107642 B) (h1 : _53780 = (term397 _107642 B)) : (term12 _107642 B) = (term419 _107642 B _53780).
Proof. exact (MK_COMB (@lem4527654 B) (@lem4527653 _107642 B _53780 h1)). Qed.
Lemma lem4527656 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4527657 {_107642 B : Type'} (_53780 : type839 _107642 B) (h1 : _53780 = (term397 _107642 B)) : (term25 _107642 B) = (term420 _107642 B _53780).
Proof. exact (MK_COMB (@lem4527656) (@lem4527655 _107642 B _53780 h1)). Qed.
Lemma lem4527658 {_107642 A B : Type'} (_53780 : type839 _107642 B) (h1 : _53780 = (term397 _107642 B)) : (term29 _107642 A B) = (term519 _107642 A B _53780).
Proof. exact (MK_COMB (@lem4527657 _107642 B _53780 h1) (@lem4527611 A B)). Qed.
Lemma lem4527691 {_107639 B : Type'} (_53779 : type839 _107639 B) (t : B -> Prop) (s : _107639 -> Prop) (d : B) (n : nat) (m : nat) : (term409 _107639 B _53779 t s d n m) = (term409 _107639 B _53779 t s d n m).
Proof. exact (eq_refl (term409 _107639 B _53779 t s d n m)). Qed.
Lemma lem4527692 {_107639 B : Type'} (_53779 : type839 _107639 B) (t : B -> Prop) (d : B) (n : nat) (m : nat) : (term410 _107639 B _53779 t d n m) = (term410 _107639 B _53779 t d n m).
Proof. exact (fun_ext (fun s : _107639 -> Prop => @lem4527691 _107639 B _53779 t s d n m)). Qed.
Lemma lem4527693 {_107639 : Type'} : (@all (_107639 -> Prop)) = (@all (_107639 -> Prop)).
Proof. exact (eq_refl (@all (_107639 -> Prop))). Qed.
Lemma lem4527694 {_107639 B : Type'} (_53779 : type839 _107639 B) (t : B -> Prop) (d : B) (n : nat) (m : nat) : (term411 _107639 B _53779 t d n m) = (term411 _107639 B _53779 t d n m).
Proof. exact (MK_COMB (@lem4527693 _107639) (@lem4527692 _107639 B _53779 t d n m)). Qed.
Lemma lem4527695 {_107639 B : Type'} (_53779 : type839 _107639 B) (t : B -> Prop) (d : B) (n : nat) : (term412 _107639 B _53779 t d n) = (term412 _107639 B _53779 t d n).
Proof. exact (fun_ext (fun m : nat => @lem4527694 _107639 B _53779 t d n m)). Qed.
Lemma lem4527696 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4527697 {_107639 B : Type'} (_53779 : type839 _107639 B) (t : B -> Prop) (d : B) (n : nat) : (term413 _107639 B _53779 t d n) = (term413 _107639 B _53779 t d n).
Proof. exact (MK_COMB (@lem4527696) (@lem4527695 _107639 B _53779 t d n)). Qed.
Lemma lem4527698 {_107639 B : Type'} (_53779 : type839 _107639 B) (d : B) (n : nat) : (term414 _107639 B _53779 d n) = (term414 _107639 B _53779 d n).
Proof. exact (fun_ext (fun t : B -> Prop => @lem4527697 _107639 B _53779 t d n)). Qed.
Lemma lem4527699 {B : Type'} : (@all (B -> Prop)) = (@all (B -> Prop)).
Proof. exact (eq_refl (@all (B -> Prop))). Qed.
Lemma lem4527700 {_107639 B : Type'} (_53779 : type839 _107639 B) (d : B) (n : nat) : (term415 _107639 B _53779 d n) = (term415 _107639 B _53779 d n).
Proof. exact (MK_COMB (@lem4527699 B) (@lem4527698 _107639 B _53779 d n)). Qed.
Lemma lem4527701 {_107639 B : Type'} (_53779 : type839 _107639 B) (d : B) : (term416 _107639 B _53779 d) = (term416 _107639 B _53779 d).
Proof. exact (fun_ext (fun n : nat => @lem4527700 _107639 B _53779 d n)). Qed.
Lemma lem4527702 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4527703 {_107639 B : Type'} (_53779 : type839 _107639 B) (d : B) : (term417 _107639 B _53779 d) = (term417 _107639 B _53779 d).
Proof. exact (MK_COMB (@lem4527702) (@lem4527701 _107639 B _53779 d)). Qed.
Lemma lem4527704 {_107639 B : Type'} (_53779 : type839 _107639 B) : (term418 _107639 B _53779) = (term418 _107639 B _53779).
Proof. exact (fun_ext (fun d : B => @lem4527703 _107639 B _53779 d)). Qed.
Lemma lem4527705 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem4527706 {_107639 B : Type'} (_53779 : type839 _107639 B) : (term419 _107639 B _53779) = (term419 _107639 B _53779).
Proof. exact (MK_COMB (@lem4527705 B) (@lem4527704 _107639 B _53779)). Qed.
Lemma lem4527707 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4527708 {_107639 B : Type'} (_53779 : type839 _107639 B) : (term420 _107639 B _53779) = (term420 _107639 B _53779).
Proof. exact (MK_COMB (@lem4527707) (@lem4527706 _107639 B _53779)). Qed.
Lemma lem4527709 {_107639 _107642 A B : Type'} (_53779 : type839 _107639 B) (_53780 : type839 _107642 B) (h1 : _53780 = (term397 _107642 B)) : (term421 _107639 _107642 A B _53779) = (term520 _107639 _107642 A B _53779 _53780).
Proof. exact (MK_COMB (@lem4527708 _107639 B _53779) (@lem4527658 _107642 A B _53780 h1)). Qed.
Lemma lem4527742 {_107642 A : Type'} (_53778 : type656 _107642 A) (t : _107642 -> Prop) (s : A -> Prop) (d : _107642) (n : nat) (m : nat) : (term169 _107642 A _53778 t s d n m) = (term169 _107642 A _53778 t s d n m).
Proof. exact (eq_refl (term169 _107642 A _53778 t s d n m)). Qed.
Lemma lem4527743 {_107642 A : Type'} (_53778 : type656 _107642 A) (t : _107642 -> Prop) (d : _107642) (n : nat) (m : nat) : (term170 _107642 A _53778 t d n m) = (term170 _107642 A _53778 t d n m).
Proof. exact (fun_ext (fun s : A -> Prop => @lem4527742 _107642 A _53778 t s d n m)). Qed.
Lemma lem4527744 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem4527745 {_107642 A : Type'} (_53778 : type656 _107642 A) (t : _107642 -> Prop) (d : _107642) (n : nat) (m : nat) : (term171 _107642 A _53778 t d n m) = (term171 _107642 A _53778 t d n m).
Proof. exact (MK_COMB (@lem4527744 A) (@lem4527743 _107642 A _53778 t d n m)). Qed.
Lemma lem4527746 {_107642 A : Type'} (_53778 : type656 _107642 A) (t : _107642 -> Prop) (d : _107642) (n : nat) : (term172 _107642 A _53778 t d n) = (term172 _107642 A _53778 t d n).
Proof. exact (fun_ext (fun m : nat => @lem4527745 _107642 A _53778 t d n m)). Qed.
Lemma lem4527747 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4527748 {_107642 A : Type'} (_53778 : type656 _107642 A) (t : _107642 -> Prop) (d : _107642) (n : nat) : (term173 _107642 A _53778 t d n) = (term173 _107642 A _53778 t d n).
Proof. exact (MK_COMB (@lem4527747) (@lem4527746 _107642 A _53778 t d n)). Qed.
Lemma lem4527749 {_107642 A : Type'} (_53778 : type656 _107642 A) (d : _107642) (n : nat) : (term174 _107642 A _53778 d n) = (term174 _107642 A _53778 d n).
Proof. exact (fun_ext (fun t : _107642 -> Prop => @lem4527748 _107642 A _53778 t d n)). Qed.
Lemma lem4527750 {_107642 : Type'} : (@all (_107642 -> Prop)) = (@all (_107642 -> Prop)).
Proof. exact (eq_refl (@all (_107642 -> Prop))). Qed.
Lemma lem4527751 {_107642 A : Type'} (_53778 : type656 _107642 A) (d : _107642) (n : nat) : (term175 _107642 A _53778 d n) = (term175 _107642 A _53778 d n).
Proof. exact (MK_COMB (@lem4527750 _107642) (@lem4527749 _107642 A _53778 d n)). Qed.
Lemma lem4527752 {_107642 A : Type'} (_53778 : type656 _107642 A) (d : _107642) : (term176 _107642 A _53778 d) = (term176 _107642 A _53778 d).
Proof. exact (fun_ext (fun n : nat => @lem4527751 _107642 A _53778 d n)). Qed.
Lemma lem4527753 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4527754 {_107642 A : Type'} (_53778 : type656 _107642 A) (d : _107642) : (term177 _107642 A _53778 d) = (term177 _107642 A _53778 d).
Proof. exact (MK_COMB (@lem4527753) (@lem4527752 _107642 A _53778 d)). Qed.
Lemma lem4527755 {_107642 A : Type'} (_53778 : type656 _107642 A) : (term178 _107642 A _53778) = (term178 _107642 A _53778).
Proof. exact (fun_ext (fun d : _107642 => @lem4527754 _107642 A _53778 d)). Qed.
Lemma lem4527756 {_107642 : Type'} : (@all _107642) = (@all _107642).
Proof. exact (eq_refl (@all _107642)). Qed.
Lemma lem4527757 {_107642 A : Type'} (_53778 : type656 _107642 A) : (term179 _107642 A _53778) = (term179 _107642 A _53778).
Proof. exact (MK_COMB (@lem4527756 _107642) (@lem4527755 _107642 A _53778)). Qed.
Lemma lem4527758 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4527759 {_107642 A : Type'} (_53778 : type656 _107642 A) : (term180 _107642 A _53778) = (term180 _107642 A _53778).
Proof. exact (MK_COMB (@lem4527758) (@lem4527757 _107642 A _53778)). Qed.
Lemma lem4527760 {_107639 _107642 A B : Type'} (_53778 : type656 _107642 A) (_53779 : type839 _107639 B) (_53780 : type839 _107642 B) (h1 : _53780 = (term397 _107642 B)) : (term422 _107639 _107642 A B _53778 _53779) = (term521 _107639 _107642 A B _53778 _53779 _53780).
Proof. exact (MK_COMB (@lem4527759 _107642 A _53778) (@lem4527709 _107639 _107642 A B _53779 _53780 h1)). Qed.
Lemma lem4527793 {_107639 A : Type'} (_53777 : type656 _107639 A) (t : _107639 -> Prop) (s : A -> Prop) (d : _107639) (n : nat) (m : nat) : (term169 _107639 A _53777 t s d n m) = (term169 _107639 A _53777 t s d n m).
Proof. exact (eq_refl (term169 _107639 A _53777 t s d n m)). Qed.
Lemma lem4527794 {_107639 A : Type'} (_53777 : type656 _107639 A) (t : _107639 -> Prop) (d : _107639) (n : nat) (m : nat) : (term170 _107639 A _53777 t d n m) = (term170 _107639 A _53777 t d n m).
Proof. exact (fun_ext (fun s : A -> Prop => @lem4527793 _107639 A _53777 t s d n m)). Qed.
Lemma lem4527795 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem4527796 {_107639 A : Type'} (_53777 : type656 _107639 A) (t : _107639 -> Prop) (d : _107639) (n : nat) (m : nat) : (term171 _107639 A _53777 t d n m) = (term171 _107639 A _53777 t d n m).
Proof. exact (MK_COMB (@lem4527795 A) (@lem4527794 _107639 A _53777 t d n m)). Qed.
Lemma lem4527797 {_107639 A : Type'} (_53777 : type656 _107639 A) (t : _107639 -> Prop) (d : _107639) (n : nat) : (term172 _107639 A _53777 t d n) = (term172 _107639 A _53777 t d n).
Proof. exact (fun_ext (fun m : nat => @lem4527796 _107639 A _53777 t d n m)). Qed.
Lemma lem4527798 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4527799 {_107639 A : Type'} (_53777 : type656 _107639 A) (t : _107639 -> Prop) (d : _107639) (n : nat) : (term173 _107639 A _53777 t d n) = (term173 _107639 A _53777 t d n).
Proof. exact (MK_COMB (@lem4527798) (@lem4527797 _107639 A _53777 t d n)). Qed.
Lemma lem4527800 {_107639 A : Type'} (_53777 : type656 _107639 A) (d : _107639) (n : nat) : (term174 _107639 A _53777 d n) = (term174 _107639 A _53777 d n).
Proof. exact (fun_ext (fun t : _107639 -> Prop => @lem4527799 _107639 A _53777 t d n)). Qed.
Lemma lem4527801 {_107639 : Type'} : (@all (_107639 -> Prop)) = (@all (_107639 -> Prop)).
Proof. exact (eq_refl (@all (_107639 -> Prop))). Qed.
Lemma lem4527802 {_107639 A : Type'} (_53777 : type656 _107639 A) (d : _107639) (n : nat) : (term175 _107639 A _53777 d n) = (term175 _107639 A _53777 d n).
Proof. exact (MK_COMB (@lem4527801 _107639) (@lem4527800 _107639 A _53777 d n)). Qed.
Lemma lem4527803 {_107639 A : Type'} (_53777 : type656 _107639 A) (d : _107639) : (term176 _107639 A _53777 d) = (term176 _107639 A _53777 d).
Proof. exact (fun_ext (fun n : nat => @lem4527802 _107639 A _53777 d n)). Qed.
Lemma lem4527804 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4527805 {_107639 A : Type'} (_53777 : type656 _107639 A) (d : _107639) : (term177 _107639 A _53777 d) = (term177 _107639 A _53777 d).
Proof. exact (MK_COMB (@lem4527804) (@lem4527803 _107639 A _53777 d)). Qed.
Lemma lem4527806 {_107639 A : Type'} (_53777 : type656 _107639 A) : (term178 _107639 A _53777) = (term178 _107639 A _53777).
Proof. exact (fun_ext (fun d : _107639 => @lem4527805 _107639 A _53777 d)). Qed.
Lemma lem4527807 {_107639 : Type'} : (@all _107639) = (@all _107639).
Proof. exact (eq_refl (@all _107639)). Qed.
Lemma lem4527808 {_107639 A : Type'} (_53777 : type656 _107639 A) : (term179 _107639 A _53777) = (term179 _107639 A _53777).
Proof. exact (MK_COMB (@lem4527807 _107639) (@lem4527806 _107639 A _53777)). Qed.
Lemma lem4527809 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4527810 {_107639 A : Type'} (_53777 : type656 _107639 A) : (term180 _107639 A _53777) = (term180 _107639 A _53777).
Proof. exact (MK_COMB (@lem4527809) (@lem4527808 _107639 A _53777)). Qed.
Lemma lem4527811 {_107639 _107642 A B : Type'} (_53777 : type656 _107639 A) (_53778 : type656 _107642 A) (_53779 : type839 _107639 B) (_53780 : type839 _107642 B) (h1 : _53780 = (term397 _107642 B)) : (term423 _107639 _107642 A B _53777 _53778 _53779) = (term522 _107639 _107642 A B _53777 _53778 _53779 _53780).
Proof. exact (MK_COMB (@lem4527810 _107639 A _53777) (@lem4527760 _107639 _107642 A B _53778 _53779 _53780 h1)). Qed.
Lemma lem4527844 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (t : _107639 -> Prop) (s : _107642 -> Prop) (d : _107639) (n : nat) (m : nat) : (term169 _107639 _107642 _53776 t s d n m) = (term169 _107639 _107642 _53776 t s d n m).
Proof. exact (eq_refl (term169 _107639 _107642 _53776 t s d n m)). Qed.
Lemma lem4527845 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (t : _107639 -> Prop) (d : _107639) (n : nat) (m : nat) : (term170 _107639 _107642 _53776 t d n m) = (term170 _107639 _107642 _53776 t d n m).
Proof. exact (fun_ext (fun s : _107642 -> Prop => @lem4527844 _107639 _107642 _53776 t s d n m)). Qed.
Lemma lem4527846 {_107642 : Type'} : (@all (_107642 -> Prop)) = (@all (_107642 -> Prop)).
Proof. exact (eq_refl (@all (_107642 -> Prop))). Qed.
Lemma lem4527847 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (t : _107639 -> Prop) (d : _107639) (n : nat) (m : nat) : (term171 _107639 _107642 _53776 t d n m) = (term171 _107639 _107642 _53776 t d n m).
Proof. exact (MK_COMB (@lem4527846 _107642) (@lem4527845 _107639 _107642 _53776 t d n m)). Qed.
Lemma lem4527848 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (t : _107639 -> Prop) (d : _107639) (n : nat) : (term172 _107639 _107642 _53776 t d n) = (term172 _107639 _107642 _53776 t d n).
Proof. exact (fun_ext (fun m : nat => @lem4527847 _107639 _107642 _53776 t d n m)). Qed.
Lemma lem4527849 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4527850 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (t : _107639 -> Prop) (d : _107639) (n : nat) : (term173 _107639 _107642 _53776 t d n) = (term173 _107639 _107642 _53776 t d n).
Proof. exact (MK_COMB (@lem4527849) (@lem4527848 _107639 _107642 _53776 t d n)). Qed.
Lemma lem4527851 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (d : _107639) (n : nat) : (term174 _107639 _107642 _53776 d n) = (term174 _107639 _107642 _53776 d n).
Proof. exact (fun_ext (fun t : _107639 -> Prop => @lem4527850 _107639 _107642 _53776 t d n)). Qed.
Lemma lem4527852 {_107639 : Type'} : (@all (_107639 -> Prop)) = (@all (_107639 -> Prop)).
Proof. exact (eq_refl (@all (_107639 -> Prop))). Qed.
Lemma lem4527853 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (d : _107639) (n : nat) : (term175 _107639 _107642 _53776 d n) = (term175 _107639 _107642 _53776 d n).
Proof. exact (MK_COMB (@lem4527852 _107639) (@lem4527851 _107639 _107642 _53776 d n)). Qed.
Lemma lem4527854 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (d : _107639) : (term176 _107639 _107642 _53776 d) = (term176 _107639 _107642 _53776 d).
Proof. exact (fun_ext (fun n : nat => @lem4527853 _107639 _107642 _53776 d n)). Qed.
Lemma lem4527855 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4527856 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (d : _107639) : (term177 _107639 _107642 _53776 d) = (term177 _107639 _107642 _53776 d).
Proof. exact (MK_COMB (@lem4527855) (@lem4527854 _107639 _107642 _53776 d)). Qed.
Lemma lem4527857 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) : (term178 _107639 _107642 _53776) = (term178 _107639 _107642 _53776).
Proof. exact (fun_ext (fun d : _107639 => @lem4527856 _107639 _107642 _53776 d)). Qed.
Lemma lem4527858 {_107639 : Type'} : (@all _107639) = (@all _107639).
Proof. exact (eq_refl (@all _107639)). Qed.
Lemma lem4527859 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) : (term179 _107639 _107642 _53776) = (term179 _107639 _107642 _53776).
Proof. exact (MK_COMB (@lem4527858 _107639) (@lem4527857 _107639 _107642 _53776)). Qed.
Lemma lem4527860 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4527861 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) : (term180 _107639 _107642 _53776) = (term180 _107639 _107642 _53776).
Proof. exact (MK_COMB (@lem4527860) (@lem4527859 _107639 _107642 _53776)). Qed.
Lemma lem4527862 {_107639 _107642 A B : Type'} (_53776 : type656 _107639 _107642) (_53777 : type656 _107639 A) (_53778 : type656 _107642 A) (_53779 : type839 _107639 B) (_53780 : type839 _107642 B) (h1 : _53780 = (term397 _107642 B)) : (term424 _107639 _107642 A B _53776 _53777 _53778 _53779) = (term523 _107639 _107642 A B _53776 _53777 _53778 _53779 _53780).
Proof. exact (MK_COMB (@lem4527861 _107639 _107642 _53776) (@lem4527811 _107639 _107642 A B _53777 _53778 _53779 _53780 h1)). Qed.
Lemma lem4527883 (s : nat -> Prop) (n : nat) : ((@HAS_SIZE nat s n) = (term182 s n)) = ((@HAS_SIZE nat s n) = (term182 s n)).
Proof. exact (eq_refl ((@HAS_SIZE nat s n) = (term182 s n))). Qed.
Lemma lem4527884 (s : nat -> Prop) : (term183 s) = (term183 s).
Proof. exact (fun_ext (fun n : nat => @lem4527883 s n)). Qed.
Lemma lem4527885 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4527886 (s : nat -> Prop) : (term184 s) = (term184 s).
Proof. exact (MK_COMB (@lem4527885) (@lem4527884 s)). Qed.
Lemma lem4527887 : term185 = term185.
Proof. exact (fun_ext (fun s : nat -> Prop => @lem4527886 s)). Qed.
Lemma lem4527888 : (@all (nat -> Prop)) = (@all (nat -> Prop)).
Proof. exact (eq_refl (@all (nat -> Prop))). Qed.
Lemma lem4527889 : term15 = term15.
Proof. exact (MK_COMB (@lem4527888) (@lem4527887)). Qed.
Lemma lem4527890 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4527891 : term39 = term39.
Proof. exact (MK_COMB (@lem4527890) (@lem4527889)). Qed.
Lemma lem4527892 {_107639 _107642 A B : Type'} (_53776 : type656 _107639 _107642) (_53777 : type656 _107639 A) (_53778 : type656 _107642 A) (_53779 : type839 _107639 B) (_53780 : type839 _107642 B) (h1 : _53780 = (term397 _107642 B)) : (term425 _107639 _107642 A B _53776 _53777 _53778 _53779) = (term524 _107639 _107642 A B _53776 _53777 _53778 _53779 _53780).
Proof. exact (MK_COMB (@lem4527891) (@lem4527862 _107639 _107642 A B _53776 _53777 _53778 _53779 _53780 h1)). Qed.
Lemma lem4527913 {A : Type'} (s : type704 A) (n : nat) : ((@HAS_SIZE (A -> nat) s n) = (term187 A s n)) = ((@HAS_SIZE (A -> nat) s n) = (term187 A s n)).
Proof. exact (eq_refl ((@HAS_SIZE (A -> nat) s n) = (term187 A s n))). Qed.
Lemma lem4527914 {A : Type'} (s : type704 A) : (term188 A s) = (term188 A s).
Proof. exact (fun_ext (fun n : nat => @lem4527913 A s n)). Qed.
Lemma lem4527915 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4527916 {A : Type'} (s : type704 A) : (term189 A s) = (term189 A s).
Proof. exact (MK_COMB (@lem4527915) (@lem4527914 A s)). Qed.
Lemma lem4527917 {A : Type'} : (term190 A) = (term190 A).
Proof. exact (fun_ext (fun s : type704 A => @lem4527916 A s)). Qed.
Lemma lem4527918 {A : Type'} : (@all ((A -> nat) -> Prop)) = (@all ((A -> nat) -> Prop)).
Proof. exact (eq_refl (@all ((A -> nat) -> Prop))). Qed.
Lemma lem4527919 {A : Type'} : (term16 A) = (term16 A).
Proof. exact (MK_COMB (@lem4527918 A) (@lem4527917 A)). Qed.
Lemma lem4527920 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4527921 {A : Type'} : (term42 A) = (term42 A).
Proof. exact (MK_COMB (@lem4527920) (@lem4527919 A)). Qed.
Lemma lem4527922 {_107639 _107642 A B : Type'} (_53776 : type656 _107639 _107642) (_53777 : type656 _107639 A) (_53778 : type656 _107642 A) (_53779 : type839 _107639 B) (_53780 : type839 _107642 B) (h1 : _53780 = (term397 _107642 B)) : (term426 _107639 _107642 A B _53776 _53777 _53778 _53779) = (term525 _107639 _107642 A B _53776 _53777 _53778 _53779 _53780).
Proof. exact (MK_COMB (@lem4527921 A) (@lem4527892 _107639 _107642 A B _53776 _53777 _53778 _53779 _53780 h1)). Qed.
Lemma lem4527943 {A B : Type'} (s : type572 A B) (n : nat) : ((@HAS_SIZE (A -> B) s n) = (term192 A B s n)) = ((@HAS_SIZE (A -> B) s n) = (term192 A B s n)).
Proof. exact (eq_refl ((@HAS_SIZE (A -> B) s n) = (term192 A B s n))). Qed.
Lemma lem4527944 {A B : Type'} (s : type572 A B) : (term193 A B s) = (term193 A B s).
Proof. exact (fun_ext (fun n : nat => @lem4527943 A B s n)). Qed.
Lemma lem4527945 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4527946 {A B : Type'} (s : type572 A B) : (term194 A B s) = (term194 A B s).
Proof. exact (MK_COMB (@lem4527945) (@lem4527944 A B s)). Qed.
Lemma lem4527947 {A B : Type'} : (term195 A B) = (term195 A B).
Proof. exact (fun_ext (fun s : type572 A B => @lem4527946 A B s)). Qed.
Lemma lem4527948 {A B : Type'} : (@all ((A -> B) -> Prop)) = (@all ((A -> B) -> Prop)).
Proof. exact (eq_refl (@all ((A -> B) -> Prop))). Qed.
Lemma lem4527949 {A B : Type'} : (term17 A B) = (term17 A B).
Proof. exact (MK_COMB (@lem4527948 A B) (@lem4527947 A B)). Qed.
Lemma lem4527950 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4527951 {A B : Type'} : (term45 A B) = (term45 A B).
Proof. exact (MK_COMB (@lem4527950) (@lem4527949 A B)). Qed.
Lemma lem4527952 {_107639 _107642 A B : Type'} (_53776 : type656 _107639 _107642) (_53777 : type656 _107639 A) (_53778 : type656 _107642 A) (_53779 : type839 _107639 B) (_53780 : type839 _107642 B) (h1 : _53780 = (term397 _107642 B)) : (term427 _107639 _107642 A B _53776 _53777 _53778 _53779) = (term526 _107639 _107642 A B _53776 _53777 _53778 _53779 _53780).
Proof. exact (MK_COMB (@lem4527951 A B) (@lem4527922 _107639 _107642 A B _53776 _53777 _53778 _53779 _53780 h1)). Qed.
Lemma lem4527973 {_107642 A : Type'} (s : type805 _107642 A) (n : nat) : ((@HAS_SIZE (A -> _107642) s n) = (term197 _107642 A s n)) = ((@HAS_SIZE (A -> _107642) s n) = (term197 _107642 A s n)).
Proof. exact (eq_refl ((@HAS_SIZE (A -> _107642) s n) = (term197 _107642 A s n))). Qed.
Lemma lem4527974 {_107642 A : Type'} (s : type805 _107642 A) : (term198 _107642 A s) = (term198 _107642 A s).
Proof. exact (fun_ext (fun n : nat => @lem4527973 _107642 A s n)). Qed.
Lemma lem4527975 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4527976 {_107642 A : Type'} (s : type805 _107642 A) : (term199 _107642 A s) = (term199 _107642 A s).
Proof. exact (MK_COMB (@lem4527975) (@lem4527974 _107642 A s)). Qed.
Lemma lem4527977 {_107642 A : Type'} : (term200 _107642 A) = (term200 _107642 A).
Proof. exact (fun_ext (fun s : type805 _107642 A => @lem4527976 _107642 A s)). Qed.
Lemma lem4527978 {_107642 A : Type'} : (@all ((A -> _107642) -> Prop)) = (@all ((A -> _107642) -> Prop)).
Proof. exact (eq_refl (@all ((A -> _107642) -> Prop))). Qed.
Lemma lem4527979 {_107642 A : Type'} : (term18 _107642 A) = (term18 _107642 A).
Proof. exact (MK_COMB (@lem4527978 _107642 A) (@lem4527977 _107642 A)). Qed.
Lemma lem4527980 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4527981 {_107642 A : Type'} : (term48 _107642 A) = (term48 _107642 A).
Proof. exact (MK_COMB (@lem4527980) (@lem4527979 _107642 A)). Qed.
Lemma lem4527982 {_107639 _107642 A B : Type'} (_53776 : type656 _107639 _107642) (_53777 : type656 _107639 A) (_53778 : type656 _107642 A) (_53779 : type839 _107639 B) (_53780 : type839 _107642 B) (h1 : _53780 = (term397 _107642 B)) : (term428 _107639 _107642 A B _53776 _53777 _53778 _53779) = (term527 _107639 _107642 A B _53776 _53777 _53778 _53779 _53780).
Proof. exact (MK_COMB (@lem4527981 _107642 A) (@lem4527952 _107639 _107642 A B _53776 _53777 _53778 _53779 _53780 h1)). Qed.
Lemma lem4528003 {_107639 A : Type'} (s : type805 _107639 A) (n : nat) : ((@HAS_SIZE (A -> _107639) s n) = (term197 _107639 A s n)) = ((@HAS_SIZE (A -> _107639) s n) = (term197 _107639 A s n)).
Proof. exact (eq_refl ((@HAS_SIZE (A -> _107639) s n) = (term197 _107639 A s n))). Qed.
Lemma lem4528004 {_107639 A : Type'} (s : type805 _107639 A) : (term198 _107639 A s) = (term198 _107639 A s).
Proof. exact (fun_ext (fun n : nat => @lem4528003 _107639 A s n)). Qed.
Lemma lem4528005 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4528006 {_107639 A : Type'} (s : type805 _107639 A) : (term199 _107639 A s) = (term199 _107639 A s).
Proof. exact (MK_COMB (@lem4528005) (@lem4528004 _107639 A s)). Qed.
Lemma lem4528007 {_107639 A : Type'} : (term200 _107639 A) = (term200 _107639 A).
Proof. exact (fun_ext (fun s : type805 _107639 A => @lem4528006 _107639 A s)). Qed.
Lemma lem4528008 {_107639 A : Type'} : (@all ((A -> _107639) -> Prop)) = (@all ((A -> _107639) -> Prop)).
Proof. exact (eq_refl (@all ((A -> _107639) -> Prop))). Qed.
Lemma lem4528009 {_107639 A : Type'} : (term18 _107639 A) = (term18 _107639 A).
Proof. exact (MK_COMB (@lem4528008 _107639 A) (@lem4528007 _107639 A)). Qed.
Lemma lem4528010 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4528011 {_107639 A : Type'} : (term48 _107639 A) = (term48 _107639 A).
Proof. exact (MK_COMB (@lem4528010) (@lem4528009 _107639 A)). Qed.
Lemma lem4528012 {_107639 _107642 A B : Type'} (_53776 : type656 _107639 _107642) (_53777 : type656 _107639 A) (_53778 : type656 _107642 A) (_53779 : type839 _107639 B) (_53780 : type839 _107642 B) (h1 : _53780 = (term397 _107642 B)) : (term429 _107639 _107642 A B _53776 _53777 _53778 _53779) = (term528 _107639 _107642 A B _53776 _53777 _53778 _53779 _53780).
Proof. exact (MK_COMB (@lem4528011 _107639 A) (@lem4527982 _107639 _107642 A B _53776 _53777 _53778 _53779 _53780 h1)). Qed.
Lemma lem4528033 {_107642 B : Type'} (s : type572 _107642 B) (n : nat) : ((@HAS_SIZE (_107642 -> B) s n) = (term192 _107642 B s n)) = ((@HAS_SIZE (_107642 -> B) s n) = (term192 _107642 B s n)).
Proof. exact (eq_refl ((@HAS_SIZE (_107642 -> B) s n) = (term192 _107642 B s n))). Qed.
Lemma lem4528034 {_107642 B : Type'} (s : type572 _107642 B) : (term193 _107642 B s) = (term193 _107642 B s).
Proof. exact (fun_ext (fun n : nat => @lem4528033 _107642 B s n)). Qed.
Lemma lem4528035 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4528036 {_107642 B : Type'} (s : type572 _107642 B) : (term194 _107642 B s) = (term194 _107642 B s).
Proof. exact (MK_COMB (@lem4528035) (@lem4528034 _107642 B s)). Qed.
Lemma lem4528037 {_107642 B : Type'} : (term195 _107642 B) = (term195 _107642 B).
Proof. exact (fun_ext (fun s : type572 _107642 B => @lem4528036 _107642 B s)). Qed.
Lemma lem4528038 {_107642 B : Type'} : (@all ((_107642 -> B) -> Prop)) = (@all ((_107642 -> B) -> Prop)).
Proof. exact (eq_refl (@all ((_107642 -> B) -> Prop))). Qed.
Lemma lem4528039 {_107642 B : Type'} : (term17 _107642 B) = (term17 _107642 B).
Proof. exact (MK_COMB (@lem4528038 _107642 B) (@lem4528037 _107642 B)). Qed.
Lemma lem4528040 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4528041 {_107642 B : Type'} : (term45 _107642 B) = (term45 _107642 B).
Proof. exact (MK_COMB (@lem4528040) (@lem4528039 _107642 B)). Qed.
Lemma lem4528042 {_107639 _107642 A B : Type'} (_53776 : type656 _107639 _107642) (_53777 : type656 _107639 A) (_53778 : type656 _107642 A) (_53779 : type839 _107639 B) (_53780 : type839 _107642 B) (h1 : _53780 = (term397 _107642 B)) : (term430 _107639 _107642 A B _53776 _53777 _53778 _53779) = (term529 _107639 _107642 A B _53776 _53777 _53778 _53779 _53780).
Proof. exact (MK_COMB (@lem4528041 _107642 B) (@lem4528012 _107639 _107642 A B _53776 _53777 _53778 _53779 _53780 h1)). Qed.
Lemma lem4528063 {_107639 _107642 : Type'} (s : type805 _107639 _107642) (n : nat) : ((@HAS_SIZE (_107642 -> _107639) s n) = (term197 _107639 _107642 s n)) = ((@HAS_SIZE (_107642 -> _107639) s n) = (term197 _107639 _107642 s n)).
Proof. exact (eq_refl ((@HAS_SIZE (_107642 -> _107639) s n) = (term197 _107639 _107642 s n))). Qed.
Lemma lem4528064 {_107639 _107642 : Type'} (s : type805 _107639 _107642) : (term198 _107639 _107642 s) = (term198 _107639 _107642 s).
Proof. exact (fun_ext (fun n : nat => @lem4528063 _107639 _107642 s n)). Qed.
Lemma lem4528065 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4528066 {_107639 _107642 : Type'} (s : type805 _107639 _107642) : (term199 _107639 _107642 s) = (term199 _107639 _107642 s).
Proof. exact (MK_COMB (@lem4528065) (@lem4528064 _107639 _107642 s)). Qed.
Lemma lem4528067 {_107639 _107642 : Type'} : (term200 _107639 _107642) = (term200 _107639 _107642).
Proof. exact (fun_ext (fun s : type805 _107639 _107642 => @lem4528066 _107639 _107642 s)). Qed.
Lemma lem4528068 {_107639 _107642 : Type'} : (@all ((_107642 -> _107639) -> Prop)) = (@all ((_107642 -> _107639) -> Prop)).
Proof. exact (eq_refl (@all ((_107642 -> _107639) -> Prop))). Qed.
Lemma lem4528069 {_107639 _107642 : Type'} : (term18 _107639 _107642) = (term18 _107639 _107642).
Proof. exact (MK_COMB (@lem4528068 _107639 _107642) (@lem4528067 _107639 _107642)). Qed.
Lemma lem4528070 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4528071 {_107639 _107642 : Type'} : (term48 _107639 _107642) = (term48 _107639 _107642).
Proof. exact (MK_COMB (@lem4528070) (@lem4528069 _107639 _107642)). Qed.
Lemma lem4528072 {_107639 _107642 A B : Type'} (_53776 : type656 _107639 _107642) (_53777 : type656 _107639 A) (_53778 : type656 _107642 A) (_53779 : type839 _107639 B) (_53780 : type839 _107642 B) (h1 : _53780 = (term397 _107642 B)) : (term431 _107639 _107642 A B _53776 _53777 _53778 _53779) = (term530 _107639 _107642 A B _53776 _53777 _53778 _53779 _53780).
Proof. exact (MK_COMB (@lem4528071 _107639 _107642) (@lem4528042 _107639 _107642 A B _53776 _53777 _53778 _53779 _53780 h1)). Qed.
Lemma lem4528093 {_107639 B : Type'} (s : type572 _107639 B) (n : nat) : ((@HAS_SIZE (_107639 -> B) s n) = (term192 _107639 B s n)) = ((@HAS_SIZE (_107639 -> B) s n) = (term192 _107639 B s n)).
Proof. exact (eq_refl ((@HAS_SIZE (_107639 -> B) s n) = (term192 _107639 B s n))). Qed.
Lemma lem4528094 {_107639 B : Type'} (s : type572 _107639 B) : (term193 _107639 B s) = (term193 _107639 B s).
Proof. exact (fun_ext (fun n : nat => @lem4528093 _107639 B s n)). Qed.
Lemma lem4528095 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4528096 {_107639 B : Type'} (s : type572 _107639 B) : (term194 _107639 B s) = (term194 _107639 B s).
Proof. exact (MK_COMB (@lem4528095) (@lem4528094 _107639 B s)). Qed.
Lemma lem4528097 {_107639 B : Type'} : (term195 _107639 B) = (term195 _107639 B).
Proof. exact (fun_ext (fun s : type572 _107639 B => @lem4528096 _107639 B s)). Qed.
Lemma lem4528098 {_107639 B : Type'} : (@all ((_107639 -> B) -> Prop)) = (@all ((_107639 -> B) -> Prop)).
Proof. exact (eq_refl (@all ((_107639 -> B) -> Prop))). Qed.
Lemma lem4528099 {_107639 B : Type'} : (term17 _107639 B) = (term17 _107639 B).
Proof. exact (MK_COMB (@lem4528098 _107639 B) (@lem4528097 _107639 B)). Qed.
Lemma lem4528100 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4528101 {_107639 B : Type'} : (term45 _107639 B) = (term45 _107639 B).
Proof. exact (MK_COMB (@lem4528100) (@lem4528099 _107639 B)). Qed.
Lemma lem4528102 {_107639 _107642 A B : Type'} (_53776 : type656 _107639 _107642) (_53777 : type656 _107639 A) (_53778 : type656 _107642 A) (_53779 : type839 _107639 B) (_53780 : type839 _107642 B) (h1 : _53780 = (term397 _107642 B)) : (term432 _107639 _107642 A B _53776 _53777 _53778 _53779) = (term531 _107639 _107642 A B _53776 _53777 _53778 _53779 _53780).
Proof. exact (MK_COMB (@lem4528101 _107639 B) (@lem4528072 _107639 _107642 A B _53776 _53777 _53778 _53779 _53780 h1)). Qed.
Lemma lem4528123 {B : Type'} (s : B -> Prop) (n : nat) : ((@HAS_SIZE B s n) = (term206 B s n)) = ((@HAS_SIZE B s n) = (term206 B s n)).
Proof. exact (eq_refl ((@HAS_SIZE B s n) = (term206 B s n))). Qed.
Lemma lem4528124 {B : Type'} (s : B -> Prop) : (term207 B s) = (term207 B s).
Proof. exact (fun_ext (fun n : nat => @lem4528123 B s n)). Qed.
Lemma lem4528125 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4528126 {B : Type'} (s : B -> Prop) : (term208 B s) = (term208 B s).
Proof. exact (MK_COMB (@lem4528125) (@lem4528124 B s)). Qed.
Lemma lem4528127 {B : Type'} : (term209 B) = (term209 B).
Proof. exact (fun_ext (fun s : B -> Prop => @lem4528126 B s)). Qed.
Lemma lem4528128 {B : Type'} : (@all (B -> Prop)) = (@all (B -> Prop)).
Proof. exact (eq_refl (@all (B -> Prop))). Qed.
Lemma lem4528129 {B : Type'} : (term14 B) = (term14 B).
Proof. exact (MK_COMB (@lem4528128 B) (@lem4528127 B)). Qed.
Lemma lem4528130 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4528131 {B : Type'} : (term59 B) = (term59 B).
Proof. exact (MK_COMB (@lem4528130) (@lem4528129 B)). Qed.
Lemma lem4528132 {_107639 _107642 A B : Type'} (_53776 : type656 _107639 _107642) (_53777 : type656 _107639 A) (_53778 : type656 _107642 A) (_53779 : type839 _107639 B) (_53780 : type839 _107642 B) (h1 : _53780 = (term397 _107642 B)) : (term433 _107639 _107642 A B _53776 _53777 _53778 _53779) = (term532 _107639 _107642 A B _53776 _53777 _53778 _53779 _53780).
Proof. exact (MK_COMB (@lem4528131 B) (@lem4528102 _107639 _107642 A B _53776 _53777 _53778 _53779 _53780 h1)). Qed.
Lemma lem4528153 {A : Type'} (s : A -> Prop) (n : nat) : ((@HAS_SIZE A s n) = (term206 A s n)) = ((@HAS_SIZE A s n) = (term206 A s n)).
Proof. exact (eq_refl ((@HAS_SIZE A s n) = (term206 A s n))). Qed.
Lemma lem4528154 {A : Type'} (s : A -> Prop) : (term207 A s) = (term207 A s).
Proof. exact (fun_ext (fun n : nat => @lem4528153 A s n)). Qed.
Lemma lem4528155 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4528156 {A : Type'} (s : A -> Prop) : (term208 A s) = (term208 A s).
Proof. exact (MK_COMB (@lem4528155) (@lem4528154 A s)). Qed.
Lemma lem4528157 {A : Type'} : (term209 A) = (term209 A).
Proof. exact (fun_ext (fun s : A -> Prop => @lem4528156 A s)). Qed.
Lemma lem4528158 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem4528159 {A : Type'} : (term14 A) = (term14 A).
Proof. exact (MK_COMB (@lem4528158 A) (@lem4528157 A)). Qed.
Lemma lem4528160 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4528161 {A : Type'} : (term59 A) = (term59 A).
Proof. exact (MK_COMB (@lem4528160) (@lem4528159 A)). Qed.
Lemma lem4528162 {_107639 _107642 A B : Type'} (_53776 : type656 _107639 _107642) (_53777 : type656 _107639 A) (_53778 : type656 _107642 A) (_53779 : type839 _107639 B) (_53780 : type839 _107642 B) (h1 : _53780 = (term397 _107642 B)) : (term434 _107639 _107642 A B _53776 _53777 _53778 _53779) = (term533 _107639 _107642 A B _53776 _53777 _53778 _53779 _53780).
Proof. exact (MK_COMB (@lem4528161 A) (@lem4528132 _107639 _107642 A B _53776 _53777 _53778 _53779 _53780 h1)). Qed.
Lemma lem4528183 {_107642 : Type'} (s : _107642 -> Prop) (n : nat) : ((@HAS_SIZE _107642 s n) = (term206 _107642 s n)) = ((@HAS_SIZE _107642 s n) = (term206 _107642 s n)).
Proof. exact (eq_refl ((@HAS_SIZE _107642 s n) = (term206 _107642 s n))). Qed.
Lemma lem4528184 {_107642 : Type'} (s : _107642 -> Prop) : (term207 _107642 s) = (term207 _107642 s).
Proof. exact (fun_ext (fun n : nat => @lem4528183 _107642 s n)). Qed.
Lemma lem4528185 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4528186 {_107642 : Type'} (s : _107642 -> Prop) : (term208 _107642 s) = (term208 _107642 s).
Proof. exact (MK_COMB (@lem4528185) (@lem4528184 _107642 s)). Qed.
Lemma lem4528187 {_107642 : Type'} : (term209 _107642) = (term209 _107642).
Proof. exact (fun_ext (fun s : _107642 -> Prop => @lem4528186 _107642 s)). Qed.
Lemma lem4528188 {_107642 : Type'} : (@all (_107642 -> Prop)) = (@all (_107642 -> Prop)).
Proof. exact (eq_refl (@all (_107642 -> Prop))). Qed.
Lemma lem4528189 {_107642 : Type'} : (term14 _107642) = (term14 _107642).
Proof. exact (MK_COMB (@lem4528188 _107642) (@lem4528187 _107642)). Qed.
Lemma lem4528190 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4528191 {_107642 : Type'} : (term59 _107642) = (term59 _107642).
Proof. exact (MK_COMB (@lem4528190) (@lem4528189 _107642)). Qed.
Lemma lem4528192 {_107639 _107642 A B : Type'} (_53776 : type656 _107639 _107642) (_53777 : type656 _107639 A) (_53778 : type656 _107642 A) (_53779 : type839 _107639 B) (_53780 : type839 _107642 B) (h1 : _53780 = (term397 _107642 B)) : (term435 _107639 _107642 A B _53776 _53777 _53778 _53779) = (term534 _107639 _107642 A B _53776 _53777 _53778 _53779 _53780).
Proof. exact (MK_COMB (@lem4528191 _107642) (@lem4528162 _107639 _107642 A B _53776 _53777 _53778 _53779 _53780 h1)). Qed.
Lemma lem4528213 {_107639 : Type'} (s : _107639 -> Prop) (n : nat) : ((@HAS_SIZE _107639 s n) = (term206 _107639 s n)) = ((@HAS_SIZE _107639 s n) = (term206 _107639 s n)).
Proof. exact (eq_refl ((@HAS_SIZE _107639 s n) = (term206 _107639 s n))). Qed.
Lemma lem4528214 {_107639 : Type'} (s : _107639 -> Prop) : (term207 _107639 s) = (term207 _107639 s).
Proof. exact (fun_ext (fun n : nat => @lem4528213 _107639 s n)). Qed.
Lemma lem4528215 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4528216 {_107639 : Type'} (s : _107639 -> Prop) : (term208 _107639 s) = (term208 _107639 s).
Proof. exact (MK_COMB (@lem4528215) (@lem4528214 _107639 s)). Qed.
Lemma lem4528217 {_107639 : Type'} : (term209 _107639) = (term209 _107639).
Proof. exact (fun_ext (fun s : _107639 -> Prop => @lem4528216 _107639 s)). Qed.
Lemma lem4528218 {_107639 : Type'} : (@all (_107639 -> Prop)) = (@all (_107639 -> Prop)).
Proof. exact (eq_refl (@all (_107639 -> Prop))). Qed.
Lemma lem4528219 {_107639 : Type'} : (term14 _107639) = (term14 _107639).
Proof. exact (MK_COMB (@lem4528218 _107639) (@lem4528217 _107639)). Qed.
Lemma lem4528220 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4528221 {_107639 : Type'} : (term59 _107639) = (term59 _107639).
Proof. exact (MK_COMB (@lem4528220) (@lem4528219 _107639)). Qed.
Lemma lem4528222 {_107639 _107642 A B : Type'} (_53776 : type656 _107639 _107642) (_53777 : type656 _107639 A) (_53778 : type656 _107642 A) (_53779 : type839 _107639 B) (_53780 : type839 _107642 B) (h1 : _53780 = (term397 _107642 B)) : (term436 _107639 _107642 A B _53776 _53777 _53778 _53779) = (term535 _107639 _107642 A B _53776 _53777 _53778 _53779 _53780).
Proof. exact (MK_COMB (@lem4528221 _107639) (@lem4528192 _107639 _107642 A B _53776 _53777 _53778 _53779 _53780 h1)). Qed.
Lemma lem4528243 {_100044 : Type'} (s : _100044 -> Prop) (n : nat) : ((@HAS_SIZE _100044 s n) = (term206 _100044 s n)) = ((@HAS_SIZE _100044 s n) = (term206 _100044 s n)).
Proof. exact (eq_refl ((@HAS_SIZE _100044 s n) = (term206 _100044 s n))). Qed.
Lemma lem4528244 {_100044 : Type'} (s : _100044 -> Prop) : (term207 _100044 s) = (term207 _100044 s).
Proof. exact (fun_ext (fun n : nat => @lem4528243 _100044 s n)). Qed.
Lemma lem4528245 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4528246 {_100044 : Type'} (s : _100044 -> Prop) : (term208 _100044 s) = (term208 _100044 s).
Proof. exact (MK_COMB (@lem4528245) (@lem4528244 _100044 s)). Qed.
Lemma lem4528247 {_100044 : Type'} : (term209 _100044) = (term209 _100044).
Proof. exact (fun_ext (fun s : _100044 -> Prop => @lem4528246 _100044 s)). Qed.
Lemma lem4528248 {_100044 : Type'} : (@all (_100044 -> Prop)) = (@all (_100044 -> Prop)).
Proof. exact (eq_refl (@all (_100044 -> Prop))). Qed.
Lemma lem4528249 {_100044 : Type'} : (term14 _100044) = (term14 _100044).
Proof. exact (MK_COMB (@lem4528248 _100044) (@lem4528247 _100044)). Qed.
Lemma lem4528250 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4528251 {_100044 : Type'} : (term59 _100044) = (term59 _100044).
Proof. exact (MK_COMB (@lem4528250) (@lem4528249 _100044)). Qed.
Lemma lem4528252 {_100044 _107639 _107642 A B : Type'} (_53776 : type656 _107639 _107642) (_53777 : type656 _107639 A) (_53778 : type656 _107642 A) (_53779 : type839 _107639 B) (_53780 : type839 _107642 B) (h1 : _53780 = (term397 _107642 B)) : (term437 _100044 _107639 _107642 A B _53776 _53777 _53778 _53779) = (term536 _100044 _107639 _107642 A B _53776 _53777 _53778 _53779 _53780).
Proof. exact (MK_COMB (@lem4528251 _100044) (@lem4528222 _107639 _107642 A B _53776 _53777 _53778 _53779 _53780 h1)). Qed.
Lemma lem4528287 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (d : _107639) (t : _107639 -> Prop) (s : _107642 -> Prop) : (term222 _107639 _107642 _53776 d t s) = (term222 _107639 _107642 _53776 d t s).
Proof. exact (eq_refl (term222 _107639 _107642 _53776 d t s)). Qed.
Lemma lem4528288 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (d : _107639) (s : _107642 -> Prop) : (term224 _107639 _107642 _53776 d s) = (term224 _107639 _107642 _53776 d s).
Proof. exact (fun_ext (fun t : _107639 -> Prop => @lem4528287 _107639 _107642 _53776 d t s)). Qed.
Lemma lem4528289 {_107639 : Type'} : (@all (_107639 -> Prop)) = (@all (_107639 -> Prop)).
Proof. exact (eq_refl (@all (_107639 -> Prop))). Qed.
Lemma lem4528290 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (d : _107639) (s : _107642 -> Prop) : (term226 _107639 _107642 _53776 d s) = (term226 _107639 _107642 _53776 d s).
Proof. exact (MK_COMB (@lem4528289 _107639) (@lem4528288 _107639 _107642 _53776 d s)). Qed.
Lemma lem4528291 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (d : _107639) : (term228 _107639 _107642 _53776 d) = (term228 _107639 _107642 _53776 d).
Proof. exact (fun_ext (fun s : _107642 -> Prop => @lem4528290 _107639 _107642 _53776 d s)). Qed.
Lemma lem4528292 {_107642 : Type'} : (@all (_107642 -> Prop)) = (@all (_107642 -> Prop)).
Proof. exact (eq_refl (@all (_107642 -> Prop))). Qed.
Lemma lem4528293 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (d : _107639) : (term229 _107639 _107642 _53776 d) = (term229 _107639 _107642 _53776 d).
Proof. exact (MK_COMB (@lem4528292 _107642) (@lem4528291 _107639 _107642 _53776 d)). Qed.
Lemma lem4528294 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem4528295 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (d : _107639) : (term230 _107639 _107642 _53776 d) = (term230 _107639 _107642 _53776 d).
Proof. exact (MK_COMB (@lem4528294) (@lem4528293 _107639 _107642 _53776 d)). Qed.
Lemma lem4528296 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4528297 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (d : _107639) : (term231 _107639 _107642 _53776 d) = (term231 _107639 _107642 _53776 d).
Proof. exact (MK_COMB (@lem4528296) (@lem4528295 _107639 _107642 _53776 d)). Qed.
Lemma lem4528298 {_100044 _107639 _107642 A B : Type'} (d : _107639) (_53776 : type656 _107639 _107642) (_53777 : type656 _107639 A) (_53778 : type656 _107642 A) (_53779 : type839 _107639 B) (_53780 : type839 _107642 B) (h1 : _53780 = (term397 _107642 B)) : (term438 _100044 _107639 _107642 A B d _53776 _53777 _53778 _53779) = (term537 _100044 _107639 _107642 A B d _53776 _53777 _53778 _53779 _53780).
Proof. exact (MK_COMB (@lem4528297 _107639 _107642 _53776 d) (@lem4528252 _100044 _107639 _107642 A B _53776 _53777 _53778 _53779 _53780 h1)). Qed.
Lemma lem4528299 {_100044 _107639 _107642 A B : Type'} (_53776 : type656 _107639 _107642) (_53777 : type656 _107639 A) (_53778 : type656 _107642 A) (_53779 : type839 _107639 B) (_53780 : type839 _107642 B) (h1 : _53780 = (term397 _107642 B)) : (term439 _100044 _107639 _107642 A B _53776 _53777 _53778 _53779) = (term538 _100044 _107639 _107642 A B _53776 _53777 _53778 _53779 _53780).
Proof. exact (fun_ext (fun d : _107639 => @lem4528298 _100044 _107639 _107642 A B d _53776 _53777 _53778 _53779 _53780 h1)). Qed.
Lemma lem4528300 {_107639 : Type'} : (@all _107639) = (@all _107639).
Proof. exact (eq_refl (@all _107639)). Qed.
Lemma lem4528301 {_100044 _107639 _107642 A B : Type'} (_53776 : type656 _107639 _107642) (_53777 : type656 _107639 A) (_53778 : type656 _107642 A) (_53779 : type839 _107639 B) (_53780 : type839 _107642 B) (h1 : _53780 = (term397 _107642 B)) : (term440 _100044 _107639 _107642 A B _53776 _53777 _53778 _53779) = (term539 _100044 _107639 _107642 A B _53776 _53777 _53778 _53779 _53780).
Proof. exact (MK_COMB (@lem4528300 _107639) (@lem4528299 _100044 _107639 _107642 A B _53776 _53777 _53778 _53779 _53780 h1)). Qed.
Lemma lem4528302 {_107639 _107642 : Type'} (f : _107642 -> _107639) : f = f.
Proof. exact (eq_refl f). Qed.
Lemma lem4528319 {_107639 _107642 : Type'} (s : _107642 -> Prop) (f : _107642 -> _107639) (x : _107642) (d : _107639) : (term140 _107639 _107642 s f x d) = (term140 _107639 _107642 s f x d).
Proof. exact (eq_refl (term140 _107639 _107642 s f x d)). Qed.
Lemma lem4528320 {_107639 _107642 : Type'} (s : _107642 -> Prop) (f : _107642 -> _107639) (d : _107639) : (term141 _107639 _107642 s f d) = (term141 _107639 _107642 s f d).
Proof. exact (fun_ext (fun x : _107642 => @lem4528319 _107639 _107642 s f x d)). Qed.
Lemma lem4528321 {_107642 : Type'} : (@all _107642) = (@all _107642).
Proof. exact (eq_refl (@all _107642)). Qed.
Lemma lem4528322 {_107639 _107642 : Type'} (s : _107642 -> Prop) (f : _107642 -> _107639) (d : _107639) : (term142 _107639 _107642 s f d) = (term142 _107639 _107642 s f d).
Proof. exact (MK_COMB (@lem4528321 _107642) (@lem4528320 _107639 _107642 s f d)). Qed.
Lemma lem4528337 {_107639 _107642 : Type'} (s : _107642 -> Prop) (f : _107642 -> _107639) (x : _107642) (t : _107639 -> Prop) : (term143 _107639 _107642 s f x t) = (term143 _107639 _107642 s f x t).
Proof. exact (eq_refl (term143 _107639 _107642 s f x t)). Qed.
Lemma lem4528338 {_107639 _107642 : Type'} (s : _107642 -> Prop) (f : _107642 -> _107639) (t : _107639 -> Prop) : (term144 _107639 _107642 s f t) = (term144 _107639 _107642 s f t).
Proof. exact (fun_ext (fun x : _107642 => @lem4528337 _107639 _107642 s f x t)). Qed.
Lemma lem4528339 {_107642 : Type'} : (@all _107642) = (@all _107642).
Proof. exact (eq_refl (@all _107642)). Qed.
Lemma lem4528340 {_107639 _107642 : Type'} (s : _107642 -> Prop) (f : _107642 -> _107639) (t : _107639 -> Prop) : (term145 _107639 _107642 s f t) = (term145 _107639 _107642 s f t).
Proof. exact (MK_COMB (@lem4528339 _107642) (@lem4528338 _107639 _107642 s f t)). Qed.
Lemma lem4528341 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4528342 {_107639 _107642 : Type'} (s : _107642 -> Prop) (f : _107642 -> _107639) (t : _107639 -> Prop) : (term146 _107639 _107642 s f t) = (term146 _107639 _107642 s f t).
Proof. exact (MK_COMB (@lem4528341) (@lem4528340 _107639 _107642 s f t)). Qed.
Lemma lem4528343 {_107639 _107642 : Type'} (t : _107639 -> Prop) (s : _107642 -> Prop) (f : _107642 -> _107639) (d : _107639) : (term147 _107639 _107642 t s f d) = (term147 _107639 _107642 t s f d).
Proof. exact (MK_COMB (@lem4528342 _107639 _107642 s f t) (@lem4528322 _107639 _107642 s f d)). Qed.
Lemma lem4528346 {_107639 _107642 : Type'} (GEN_PVAR_149 : _107642 -> _107639) : (@SETSPEC (_107642 -> _107639) GEN_PVAR_149) = (@SETSPEC (_107642 -> _107639) GEN_PVAR_149).
Proof. exact (eq_refl (@SETSPEC (_107642 -> _107639) GEN_PVAR_149)). Qed.
Lemma lem4528347 {_107639 _107642 : Type'} (GEN_PVAR_149 : _107642 -> _107639) (t : _107639 -> Prop) (s : _107642 -> Prop) (f : _107642 -> _107639) (d : _107639) : (term148 _107639 _107642 GEN_PVAR_149 t s f d) = (term148 _107639 _107642 GEN_PVAR_149 t s f d).
Proof. exact (MK_COMB (@lem4528346 _107639 _107642 GEN_PVAR_149) (@lem4528343 _107639 _107642 t s f d)). Qed.
Lemma lem4528348 {_107639 _107642 : Type'} (GEN_PVAR_149 : _107642 -> _107639) (t : _107639 -> Prop) (s : _107642 -> Prop) (d : _107639) (f : _107642 -> _107639) : (term149 _107639 _107642 GEN_PVAR_149 t s d f) = (term149 _107639 _107642 GEN_PVAR_149 t s d f).
Proof. exact (MK_COMB (@lem4528347 _107639 _107642 GEN_PVAR_149 t s f d) (@lem4528302 _107639 _107642 f)). Qed.
Lemma lem4528349 {_107639 _107642 : Type'} (GEN_PVAR_149 : _107642 -> _107639) (t : _107639 -> Prop) (s : _107642 -> Prop) (d : _107639) : (term150 _107639 _107642 GEN_PVAR_149 t s d) = (term150 _107639 _107642 GEN_PVAR_149 t s d).
Proof. exact (fun_ext (fun f : _107642 -> _107639 => @lem4528348 _107639 _107642 GEN_PVAR_149 t s d f)). Qed.
Lemma lem4528350 {_107639 _107642 : Type'} : (@ex (_107642 -> _107639)) = (@ex (_107642 -> _107639)).
Proof. exact (eq_refl (@ex (_107642 -> _107639))). Qed.
Lemma lem4528351 {_107639 _107642 : Type'} (GEN_PVAR_149 : _107642 -> _107639) (t : _107639 -> Prop) (s : _107642 -> Prop) (d : _107639) : (term151 _107639 _107642 GEN_PVAR_149 t s d) = (term151 _107639 _107642 GEN_PVAR_149 t s d).
Proof. exact (MK_COMB (@lem4528350 _107639 _107642) (@lem4528349 _107639 _107642 GEN_PVAR_149 t s d)). Qed.
Lemma lem4528362 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (t : _107639 -> Prop) (s : _107642 -> Prop) (d : _107639) (GEN_PVAR_149 : _107642 -> _107639) : (term293 _107639 _107642 _53776 t s d GEN_PVAR_149) = (term293 _107639 _107642 _53776 t s d GEN_PVAR_149).
Proof. exact (eq_refl (term293 _107639 _107642 _53776 t s d GEN_PVAR_149)). Qed.
Lemma lem4528363 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (GEN_PVAR_149 : _107642 -> _107639) (t : _107639 -> Prop) (s : _107642 -> Prop) (d : _107639) : ((_53776 t s d GEN_PVAR_149) = (term151 _107639 _107642 GEN_PVAR_149 t s d)) = ((_53776 t s d GEN_PVAR_149) = (term151 _107639 _107642 GEN_PVAR_149 t s d)).
Proof. exact (MK_COMB (@lem4528362 _107639 _107642 _53776 t s d GEN_PVAR_149) (@lem4528351 _107639 _107642 GEN_PVAR_149 t s d)). Qed.
Lemma lem4528364 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (t : _107639 -> Prop) (s : _107642 -> Prop) (d : _107639) : (term295 _107639 _107642 _53776 t s d) = (term295 _107639 _107642 _53776 t s d).
Proof. exact (fun_ext (fun GEN_PVAR_149 : _107642 -> _107639 => @lem4528363 _107639 _107642 _53776 GEN_PVAR_149 t s d)). Qed.
Lemma lem4528365 {_107639 _107642 : Type'} : (@all (_107642 -> _107639)) = (@all (_107642 -> _107639)).
Proof. exact (eq_refl (@all (_107642 -> _107639))). Qed.
Lemma lem4528366 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (t : _107639 -> Prop) (s : _107642 -> Prop) (d : _107639) : (term296 _107639 _107642 _53776 t s d) = (term296 _107639 _107642 _53776 t s d).
Proof. exact (MK_COMB (@lem4528365 _107639 _107642) (@lem4528364 _107639 _107642 _53776 t s d)). Qed.
Lemma lem4528367 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (t : _107639 -> Prop) (s : _107642 -> Prop) : (term297 _107639 _107642 _53776 t s) = (term297 _107639 _107642 _53776 t s).
Proof. exact (fun_ext (fun d : _107639 => @lem4528366 _107639 _107642 _53776 t s d)). Qed.
Lemma lem4528368 {_107639 : Type'} : (@all _107639) = (@all _107639).
Proof. exact (eq_refl (@all _107639)). Qed.
Lemma lem4528369 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (t : _107639 -> Prop) (s : _107642 -> Prop) : (term298 _107639 _107642 _53776 t s) = (term298 _107639 _107642 _53776 t s).
Proof. exact (MK_COMB (@lem4528368 _107639) (@lem4528367 _107639 _107642 _53776 t s)). Qed.
Lemma lem4528370 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (t : _107639 -> Prop) : (term299 _107639 _107642 _53776 t) = (term299 _107639 _107642 _53776 t).
Proof. exact (fun_ext (fun s : _107642 -> Prop => @lem4528369 _107639 _107642 _53776 t s)). Qed.
Lemma lem4528371 {_107642 : Type'} : (@all (_107642 -> Prop)) = (@all (_107642 -> Prop)).
Proof. exact (eq_refl (@all (_107642 -> Prop))). Qed.
Lemma lem4528372 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (t : _107639 -> Prop) : (term300 _107639 _107642 _53776 t) = (term300 _107639 _107642 _53776 t).
Proof. exact (MK_COMB (@lem4528371 _107642) (@lem4528370 _107639 _107642 _53776 t)). Qed.
Lemma lem4528373 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) : (term301 _107639 _107642 _53776) = (term301 _107639 _107642 _53776).
Proof. exact (fun_ext (fun t : _107639 -> Prop => @lem4528372 _107639 _107642 _53776 t)). Qed.
Lemma lem4528374 {_107639 : Type'} : (@all (_107639 -> Prop)) = (@all (_107639 -> Prop)).
Proof. exact (eq_refl (@all (_107639 -> Prop))). Qed.
Lemma lem4528375 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) : (term302 _107639 _107642 _53776) = (term302 _107639 _107642 _53776).
Proof. exact (MK_COMB (@lem4528374 _107639) (@lem4528373 _107639 _107642 _53776)). Qed.
Lemma lem4528376 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4528377 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) : (term303 _107639 _107642 _53776) = (term303 _107639 _107642 _53776).
Proof. exact (MK_COMB (@lem4528376) (@lem4528375 _107639 _107642 _53776)). Qed.
Lemma lem4528378 {_100044 _107639 _107642 A B : Type'} (_53776 : type656 _107639 _107642) (_53777 : type656 _107639 A) (_53778 : type656 _107642 A) (_53779 : type839 _107639 B) (_53780 : type839 _107642 B) (h1 : _53780 = (term397 _107642 B)) : (term441 _100044 _107639 _107642 A B _53776 _53777 _53778 _53779) = (term540 _100044 _107639 _107642 A B _53776 _53777 _53778 _53779 _53780).
Proof. exact (MK_COMB (@lem4528377 _107639 _107642 _53776) (@lem4528301 _100044 _107639 _107642 A B _53776 _53777 _53778 _53779 _53780 h1)). Qed.
Lemma lem4528379 {_100044 _107639 _107642 A B : Type'} (_53777 : type656 _107639 A) (_53778 : type656 _107642 A) (_53779 : type839 _107639 B) (_53780 : type839 _107642 B) (h1 : _53780 = (term397 _107642 B)) : (term442 _100044 _107639 _107642 A B _53777 _53778 _53779) = (term541 _100044 _107639 _107642 A B _53777 _53778 _53779 _53780).
Proof. exact (fun_ext (fun _53776 : type656 _107639 _107642 => @lem4528378 _100044 _107639 _107642 A B _53776 _53777 _53778 _53779 _53780 h1)). Qed.
Lemma lem4528380 {_107639 _107642 : Type'} : (@all ((_107639 -> Prop) -> (_107642 -> Prop) -> _107639 -> (_107642 -> _107639) -> Prop)) = (@all ((_107639 -> Prop) -> (_107642 -> Prop) -> _107639 -> (_107642 -> _107639) -> Prop)).
Proof. exact (eq_refl (@all ((_107639 -> Prop) -> (_107642 -> Prop) -> _107639 -> (_107642 -> _107639) -> Prop))). Qed.
Lemma lem4528381 {_100044 _107639 _107642 A B : Type'} (_53777 : type656 _107639 A) (_53778 : type656 _107642 A) (_53779 : type839 _107639 B) (_53780 : type839 _107642 B) (h1 : _53780 = (term397 _107642 B)) : (term443 _100044 _107639 _107642 A B _53777 _53778 _53779) = (term542 _100044 _107639 _107642 A B _53777 _53778 _53779 _53780).
Proof. exact (MK_COMB (@lem4528380 _107639 _107642) (@lem4528379 _100044 _107639 _107642 A B _53777 _53778 _53779 _53780 h1)). Qed.
Lemma lem4528382 {_107639 A : Type'} (f : A -> _107639) : f = f.
Proof. exact (eq_refl f). Qed.
Lemma lem4528399 {_107639 A : Type'} (s : A -> Prop) (f : A -> _107639) (x : A) (d : _107639) : (term140 _107639 A s f x d) = (term140 _107639 A s f x d).
Proof. exact (eq_refl (term140 _107639 A s f x d)). Qed.
Lemma lem4528400 {_107639 A : Type'} (s : A -> Prop) (f : A -> _107639) (d : _107639) : (term141 _107639 A s f d) = (term141 _107639 A s f d).
Proof. exact (fun_ext (fun x : A => @lem4528399 _107639 A s f x d)). Qed.
Lemma lem4528401 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem4528402 {_107639 A : Type'} (s : A -> Prop) (f : A -> _107639) (d : _107639) : (term142 _107639 A s f d) = (term142 _107639 A s f d).
Proof. exact (MK_COMB (@lem4528401 A) (@lem4528400 _107639 A s f d)). Qed.
Lemma lem4528417 {_107639 A : Type'} (s : A -> Prop) (f : A -> _107639) (x : A) (t : _107639 -> Prop) : (term143 _107639 A s f x t) = (term143 _107639 A s f x t).
Proof. exact (eq_refl (term143 _107639 A s f x t)). Qed.
Lemma lem4528418 {_107639 A : Type'} (s : A -> Prop) (f : A -> _107639) (t : _107639 -> Prop) : (term144 _107639 A s f t) = (term144 _107639 A s f t).
Proof. exact (fun_ext (fun x : A => @lem4528417 _107639 A s f x t)). Qed.
Lemma lem4528419 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem4528420 {_107639 A : Type'} (s : A -> Prop) (f : A -> _107639) (t : _107639 -> Prop) : (term145 _107639 A s f t) = (term145 _107639 A s f t).
Proof. exact (MK_COMB (@lem4528419 A) (@lem4528418 _107639 A s f t)). Qed.
Lemma lem4528421 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4528422 {_107639 A : Type'} (s : A -> Prop) (f : A -> _107639) (t : _107639 -> Prop) : (term146 _107639 A s f t) = (term146 _107639 A s f t).
Proof. exact (MK_COMB (@lem4528421) (@lem4528420 _107639 A s f t)). Qed.
Lemma lem4528423 {_107639 A : Type'} (t : _107639 -> Prop) (s : A -> Prop) (f : A -> _107639) (d : _107639) : (term147 _107639 A t s f d) = (term147 _107639 A t s f d).
Proof. exact (MK_COMB (@lem4528422 _107639 A s f t) (@lem4528402 _107639 A s f d)). Qed.
Lemma lem4528426 {_107639 A : Type'} (GEN_PVAR_148 : A -> _107639) : (@SETSPEC (A -> _107639) GEN_PVAR_148) = (@SETSPEC (A -> _107639) GEN_PVAR_148).
Proof. exact (eq_refl (@SETSPEC (A -> _107639) GEN_PVAR_148)). Qed.
Lemma lem4528427 {_107639 A : Type'} (GEN_PVAR_148 : A -> _107639) (t : _107639 -> Prop) (s : A -> Prop) (f : A -> _107639) (d : _107639) : (term148 _107639 A GEN_PVAR_148 t s f d) = (term148 _107639 A GEN_PVAR_148 t s f d).
Proof. exact (MK_COMB (@lem4528426 _107639 A GEN_PVAR_148) (@lem4528423 _107639 A t s f d)). Qed.
Lemma lem4528428 {_107639 A : Type'} (GEN_PVAR_148 : A -> _107639) (t : _107639 -> Prop) (s : A -> Prop) (d : _107639) (f : A -> _107639) : (term149 _107639 A GEN_PVAR_148 t s d f) = (term149 _107639 A GEN_PVAR_148 t s d f).
Proof. exact (MK_COMB (@lem4528427 _107639 A GEN_PVAR_148 t s f d) (@lem4528382 _107639 A f)). Qed.
Lemma lem4528429 {_107639 A : Type'} (GEN_PVAR_148 : A -> _107639) (t : _107639 -> Prop) (s : A -> Prop) (d : _107639) : (term150 _107639 A GEN_PVAR_148 t s d) = (term150 _107639 A GEN_PVAR_148 t s d).
Proof. exact (fun_ext (fun f : A -> _107639 => @lem4528428 _107639 A GEN_PVAR_148 t s d f)). Qed.
Lemma lem4528430 {_107639 A : Type'} : (@ex (A -> _107639)) = (@ex (A -> _107639)).
Proof. exact (eq_refl (@ex (A -> _107639))). Qed.
Lemma lem4528431 {_107639 A : Type'} (GEN_PVAR_148 : A -> _107639) (t : _107639 -> Prop) (s : A -> Prop) (d : _107639) : (term151 _107639 A GEN_PVAR_148 t s d) = (term151 _107639 A GEN_PVAR_148 t s d).
Proof. exact (MK_COMB (@lem4528430 _107639 A) (@lem4528429 _107639 A GEN_PVAR_148 t s d)). Qed.
Lemma lem4528442 {_107639 A : Type'} (_53777 : type656 _107639 A) (t : _107639 -> Prop) (s : A -> Prop) (d : _107639) (GEN_PVAR_148 : A -> _107639) : (term293 _107639 A _53777 t s d GEN_PVAR_148) = (term293 _107639 A _53777 t s d GEN_PVAR_148).
Proof. exact (eq_refl (term293 _107639 A _53777 t s d GEN_PVAR_148)). Qed.
Lemma lem4528443 {_107639 A : Type'} (_53777 : type656 _107639 A) (GEN_PVAR_148 : A -> _107639) (t : _107639 -> Prop) (s : A -> Prop) (d : _107639) : ((_53777 t s d GEN_PVAR_148) = (term151 _107639 A GEN_PVAR_148 t s d)) = ((_53777 t s d GEN_PVAR_148) = (term151 _107639 A GEN_PVAR_148 t s d)).
Proof. exact (MK_COMB (@lem4528442 _107639 A _53777 t s d GEN_PVAR_148) (@lem4528431 _107639 A GEN_PVAR_148 t s d)). Qed.
Lemma lem4528444 {_107639 A : Type'} (_53777 : type656 _107639 A) (t : _107639 -> Prop) (s : A -> Prop) (d : _107639) : (term295 _107639 A _53777 t s d) = (term295 _107639 A _53777 t s d).
Proof. exact (fun_ext (fun GEN_PVAR_148 : A -> _107639 => @lem4528443 _107639 A _53777 GEN_PVAR_148 t s d)). Qed.
Lemma lem4528445 {_107639 A : Type'} : (@all (A -> _107639)) = (@all (A -> _107639)).
Proof. exact (eq_refl (@all (A -> _107639))). Qed.
Lemma lem4528446 {_107639 A : Type'} (_53777 : type656 _107639 A) (t : _107639 -> Prop) (s : A -> Prop) (d : _107639) : (term296 _107639 A _53777 t s d) = (term296 _107639 A _53777 t s d).
Proof. exact (MK_COMB (@lem4528445 _107639 A) (@lem4528444 _107639 A _53777 t s d)). Qed.
Lemma lem4528447 {_107639 A : Type'} (_53777 : type656 _107639 A) (t : _107639 -> Prop) (s : A -> Prop) : (term297 _107639 A _53777 t s) = (term297 _107639 A _53777 t s).
Proof. exact (fun_ext (fun d : _107639 => @lem4528446 _107639 A _53777 t s d)). Qed.
Lemma lem4528448 {_107639 : Type'} : (@all _107639) = (@all _107639).
Proof. exact (eq_refl (@all _107639)). Qed.
Lemma lem4528449 {_107639 A : Type'} (_53777 : type656 _107639 A) (t : _107639 -> Prop) (s : A -> Prop) : (term298 _107639 A _53777 t s) = (term298 _107639 A _53777 t s).
Proof. exact (MK_COMB (@lem4528448 _107639) (@lem4528447 _107639 A _53777 t s)). Qed.
Lemma lem4528450 {_107639 A : Type'} (_53777 : type656 _107639 A) (t : _107639 -> Prop) : (term299 _107639 A _53777 t) = (term299 _107639 A _53777 t).
Proof. exact (fun_ext (fun s : A -> Prop => @lem4528449 _107639 A _53777 t s)). Qed.
Lemma lem4528451 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem4528452 {_107639 A : Type'} (_53777 : type656 _107639 A) (t : _107639 -> Prop) : (term300 _107639 A _53777 t) = (term300 _107639 A _53777 t).
Proof. exact (MK_COMB (@lem4528451 A) (@lem4528450 _107639 A _53777 t)). Qed.
Lemma lem4528453 {_107639 A : Type'} (_53777 : type656 _107639 A) : (term301 _107639 A _53777) = (term301 _107639 A _53777).
Proof. exact (fun_ext (fun t : _107639 -> Prop => @lem4528452 _107639 A _53777 t)). Qed.
Lemma lem4528454 {_107639 : Type'} : (@all (_107639 -> Prop)) = (@all (_107639 -> Prop)).
Proof. exact (eq_refl (@all (_107639 -> Prop))). Qed.
Lemma lem4528455 {_107639 A : Type'} (_53777 : type656 _107639 A) : (term302 _107639 A _53777) = (term302 _107639 A _53777).
Proof. exact (MK_COMB (@lem4528454 _107639) (@lem4528453 _107639 A _53777)). Qed.
Lemma lem4528456 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4528457 {_107639 A : Type'} (_53777 : type656 _107639 A) : (term303 _107639 A _53777) = (term303 _107639 A _53777).
Proof. exact (MK_COMB (@lem4528456) (@lem4528455 _107639 A _53777)). Qed.
Lemma lem4528458 {_100044 _107639 _107642 A B : Type'} (_53777 : type656 _107639 A) (_53778 : type656 _107642 A) (_53779 : type839 _107639 B) (_53780 : type839 _107642 B) (h1 : _53780 = (term397 _107642 B)) : (term444 _100044 _107639 _107642 A B _53777 _53778 _53779) = (term543 _100044 _107639 _107642 A B _53777 _53778 _53779 _53780).
Proof. exact (MK_COMB (@lem4528457 _107639 A _53777) (@lem4528381 _100044 _107639 _107642 A B _53777 _53778 _53779 _53780 h1)). Qed.
Lemma lem4528459 {_100044 _107639 _107642 A B : Type'} (_53778 : type656 _107642 A) (_53779 : type839 _107639 B) (_53780 : type839 _107642 B) (h1 : _53780 = (term397 _107642 B)) : (term445 _100044 _107639 _107642 A B _53778 _53779) = (term544 _100044 _107639 _107642 A B _53778 _53779 _53780).
Proof. exact (fun_ext (fun _53777 : type656 _107639 A => @lem4528458 _100044 _107639 _107642 A B _53777 _53778 _53779 _53780 h1)). Qed.
Lemma lem4528460 {_107639 A : Type'} : (@all ((_107639 -> Prop) -> (A -> Prop) -> _107639 -> (A -> _107639) -> Prop)) = (@all ((_107639 -> Prop) -> (A -> Prop) -> _107639 -> (A -> _107639) -> Prop)).
Proof. exact (eq_refl (@all ((_107639 -> Prop) -> (A -> Prop) -> _107639 -> (A -> _107639) -> Prop))). Qed.
Lemma lem4528461 {_100044 _107639 _107642 A B : Type'} (_53778 : type656 _107642 A) (_53779 : type839 _107639 B) (_53780 : type839 _107642 B) (h1 : _53780 = (term397 _107642 B)) : (term446 _100044 _107639 _107642 A B _53778 _53779) = (term545 _100044 _107639 _107642 A B _53778 _53779 _53780).
Proof. exact (MK_COMB (@lem4528460 _107639 A) (@lem4528459 _100044 _107639 _107642 A B _53778 _53779 _53780 h1)). Qed.
Lemma lem4528462 {_107642 A : Type'} (f : A -> _107642) : f = f.
Proof. exact (eq_refl f). Qed.
Lemma lem4528479 {_107642 A : Type'} (s : A -> Prop) (f : A -> _107642) (x : A) (d : _107642) : (term140 _107642 A s f x d) = (term140 _107642 A s f x d).
Proof. exact (eq_refl (term140 _107642 A s f x d)). Qed.
Lemma lem4528480 {_107642 A : Type'} (s : A -> Prop) (f : A -> _107642) (d : _107642) : (term141 _107642 A s f d) = (term141 _107642 A s f d).
Proof. exact (fun_ext (fun x : A => @lem4528479 _107642 A s f x d)). Qed.
Lemma lem4528481 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem4528482 {_107642 A : Type'} (s : A -> Prop) (f : A -> _107642) (d : _107642) : (term142 _107642 A s f d) = (term142 _107642 A s f d).
Proof. exact (MK_COMB (@lem4528481 A) (@lem4528480 _107642 A s f d)). Qed.
Lemma lem4528497 {_107642 A : Type'} (s : A -> Prop) (f : A -> _107642) (x : A) (t : _107642 -> Prop) : (term143 _107642 A s f x t) = (term143 _107642 A s f x t).
Proof. exact (eq_refl (term143 _107642 A s f x t)). Qed.
Lemma lem4528498 {_107642 A : Type'} (s : A -> Prop) (f : A -> _107642) (t : _107642 -> Prop) : (term144 _107642 A s f t) = (term144 _107642 A s f t).
Proof. exact (fun_ext (fun x : A => @lem4528497 _107642 A s f x t)). Qed.
Lemma lem4528499 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem4528500 {_107642 A : Type'} (s : A -> Prop) (f : A -> _107642) (t : _107642 -> Prop) : (term145 _107642 A s f t) = (term145 _107642 A s f t).
Proof. exact (MK_COMB (@lem4528499 A) (@lem4528498 _107642 A s f t)). Qed.
Lemma lem4528501 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4528502 {_107642 A : Type'} (s : A -> Prop) (f : A -> _107642) (t : _107642 -> Prop) : (term146 _107642 A s f t) = (term146 _107642 A s f t).
Proof. exact (MK_COMB (@lem4528501) (@lem4528500 _107642 A s f t)). Qed.
Lemma lem4528503 {_107642 A : Type'} (t : _107642 -> Prop) (s : A -> Prop) (f : A -> _107642) (d : _107642) : (term147 _107642 A t s f d) = (term147 _107642 A t s f d).
Proof. exact (MK_COMB (@lem4528502 _107642 A s f t) (@lem4528482 _107642 A s f d)). Qed.
Lemma lem4528506 {_107642 A : Type'} (GEN_PVAR_148 : A -> _107642) : (@SETSPEC (A -> _107642) GEN_PVAR_148) = (@SETSPEC (A -> _107642) GEN_PVAR_148).
Proof. exact (eq_refl (@SETSPEC (A -> _107642) GEN_PVAR_148)). Qed.
Lemma lem4528507 {_107642 A : Type'} (GEN_PVAR_148 : A -> _107642) (t : _107642 -> Prop) (s : A -> Prop) (f : A -> _107642) (d : _107642) : (term148 _107642 A GEN_PVAR_148 t s f d) = (term148 _107642 A GEN_PVAR_148 t s f d).
Proof. exact (MK_COMB (@lem4528506 _107642 A GEN_PVAR_148) (@lem4528503 _107642 A t s f d)). Qed.
Lemma lem4528508 {_107642 A : Type'} (GEN_PVAR_148 : A -> _107642) (t : _107642 -> Prop) (s : A -> Prop) (d : _107642) (f : A -> _107642) : (term149 _107642 A GEN_PVAR_148 t s d f) = (term149 _107642 A GEN_PVAR_148 t s d f).
Proof. exact (MK_COMB (@lem4528507 _107642 A GEN_PVAR_148 t s f d) (@lem4528462 _107642 A f)). Qed.
Lemma lem4528509 {_107642 A : Type'} (GEN_PVAR_148 : A -> _107642) (t : _107642 -> Prop) (s : A -> Prop) (d : _107642) : (term150 _107642 A GEN_PVAR_148 t s d) = (term150 _107642 A GEN_PVAR_148 t s d).
Proof. exact (fun_ext (fun f : A -> _107642 => @lem4528508 _107642 A GEN_PVAR_148 t s d f)). Qed.
Lemma lem4528510 {_107642 A : Type'} : (@ex (A -> _107642)) = (@ex (A -> _107642)).
Proof. exact (eq_refl (@ex (A -> _107642))). Qed.
Lemma lem4528511 {_107642 A : Type'} (GEN_PVAR_148 : A -> _107642) (t : _107642 -> Prop) (s : A -> Prop) (d : _107642) : (term151 _107642 A GEN_PVAR_148 t s d) = (term151 _107642 A GEN_PVAR_148 t s d).
Proof. exact (MK_COMB (@lem4528510 _107642 A) (@lem4528509 _107642 A GEN_PVAR_148 t s d)). Qed.
Lemma lem4528522 {_107642 A : Type'} (_53778 : type656 _107642 A) (t : _107642 -> Prop) (s : A -> Prop) (d : _107642) (GEN_PVAR_148 : A -> _107642) : (term293 _107642 A _53778 t s d GEN_PVAR_148) = (term293 _107642 A _53778 t s d GEN_PVAR_148).
Proof. exact (eq_refl (term293 _107642 A _53778 t s d GEN_PVAR_148)). Qed.
Lemma lem4528523 {_107642 A : Type'} (_53778 : type656 _107642 A) (GEN_PVAR_148 : A -> _107642) (t : _107642 -> Prop) (s : A -> Prop) (d : _107642) : ((_53778 t s d GEN_PVAR_148) = (term151 _107642 A GEN_PVAR_148 t s d)) = ((_53778 t s d GEN_PVAR_148) = (term151 _107642 A GEN_PVAR_148 t s d)).
Proof. exact (MK_COMB (@lem4528522 _107642 A _53778 t s d GEN_PVAR_148) (@lem4528511 _107642 A GEN_PVAR_148 t s d)). Qed.
Lemma lem4528524 {_107642 A : Type'} (_53778 : type656 _107642 A) (t : _107642 -> Prop) (s : A -> Prop) (d : _107642) : (term295 _107642 A _53778 t s d) = (term295 _107642 A _53778 t s d).
Proof. exact (fun_ext (fun GEN_PVAR_148 : A -> _107642 => @lem4528523 _107642 A _53778 GEN_PVAR_148 t s d)). Qed.
Lemma lem4528525 {_107642 A : Type'} : (@all (A -> _107642)) = (@all (A -> _107642)).
Proof. exact (eq_refl (@all (A -> _107642))). Qed.
Lemma lem4528526 {_107642 A : Type'} (_53778 : type656 _107642 A) (t : _107642 -> Prop) (s : A -> Prop) (d : _107642) : (term296 _107642 A _53778 t s d) = (term296 _107642 A _53778 t s d).
Proof. exact (MK_COMB (@lem4528525 _107642 A) (@lem4528524 _107642 A _53778 t s d)). Qed.
Lemma lem4528527 {_107642 A : Type'} (_53778 : type656 _107642 A) (t : _107642 -> Prop) (s : A -> Prop) : (term297 _107642 A _53778 t s) = (term297 _107642 A _53778 t s).
Proof. exact (fun_ext (fun d : _107642 => @lem4528526 _107642 A _53778 t s d)). Qed.
Lemma lem4528528 {_107642 : Type'} : (@all _107642) = (@all _107642).
Proof. exact (eq_refl (@all _107642)). Qed.
Lemma lem4528529 {_107642 A : Type'} (_53778 : type656 _107642 A) (t : _107642 -> Prop) (s : A -> Prop) : (term298 _107642 A _53778 t s) = (term298 _107642 A _53778 t s).
Proof. exact (MK_COMB (@lem4528528 _107642) (@lem4528527 _107642 A _53778 t s)). Qed.
Lemma lem4528530 {_107642 A : Type'} (_53778 : type656 _107642 A) (t : _107642 -> Prop) : (term299 _107642 A _53778 t) = (term299 _107642 A _53778 t).
Proof. exact (fun_ext (fun s : A -> Prop => @lem4528529 _107642 A _53778 t s)). Qed.
Lemma lem4528531 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem4528532 {_107642 A : Type'} (_53778 : type656 _107642 A) (t : _107642 -> Prop) : (term300 _107642 A _53778 t) = (term300 _107642 A _53778 t).
Proof. exact (MK_COMB (@lem4528531 A) (@lem4528530 _107642 A _53778 t)). Qed.
Lemma lem4528533 {_107642 A : Type'} (_53778 : type656 _107642 A) : (term301 _107642 A _53778) = (term301 _107642 A _53778).
Proof. exact (fun_ext (fun t : _107642 -> Prop => @lem4528532 _107642 A _53778 t)). Qed.
Lemma lem4528534 {_107642 : Type'} : (@all (_107642 -> Prop)) = (@all (_107642 -> Prop)).
Proof. exact (eq_refl (@all (_107642 -> Prop))). Qed.
Lemma lem4528535 {_107642 A : Type'} (_53778 : type656 _107642 A) : (term302 _107642 A _53778) = (term302 _107642 A _53778).
Proof. exact (MK_COMB (@lem4528534 _107642) (@lem4528533 _107642 A _53778)). Qed.
Lemma lem4528536 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4528537 {_107642 A : Type'} (_53778 : type656 _107642 A) : (term303 _107642 A _53778) = (term303 _107642 A _53778).
Proof. exact (MK_COMB (@lem4528536) (@lem4528535 _107642 A _53778)). Qed.
Lemma lem4528538 {_100044 _107639 _107642 A B : Type'} (_53778 : type656 _107642 A) (_53779 : type839 _107639 B) (_53780 : type839 _107642 B) (h1 : _53780 = (term397 _107642 B)) : (term447 _100044 _107639 _107642 A B _53778 _53779) = (term546 _100044 _107639 _107642 A B _53778 _53779 _53780).
Proof. exact (MK_COMB (@lem4528537 _107642 A _53778) (@lem4528461 _100044 _107639 _107642 A B _53778 _53779 _53780 h1)). Qed.
Lemma lem4528539 {_100044 _107639 _107642 A B : Type'} (_53779 : type839 _107639 B) (_53780 : type839 _107642 B) (h1 : _53780 = (term397 _107642 B)) : (term448 _100044 _107639 _107642 A B _53779) = (term547 _100044 _107639 _107642 A B _53779 _53780).
Proof. exact (fun_ext (fun _53778 : type656 _107642 A => @lem4528538 _100044 _107639 _107642 A B _53778 _53779 _53780 h1)). Qed.
Lemma lem4528540 {_107642 A : Type'} : (@all ((_107642 -> Prop) -> (A -> Prop) -> _107642 -> (A -> _107642) -> Prop)) = (@all ((_107642 -> Prop) -> (A -> Prop) -> _107642 -> (A -> _107642) -> Prop)).
Proof. exact (eq_refl (@all ((_107642 -> Prop) -> (A -> Prop) -> _107642 -> (A -> _107642) -> Prop))). Qed.
Lemma lem4528541 {_100044 _107639 _107642 A B : Type'} (_53779 : type839 _107639 B) (_53780 : type839 _107642 B) (h1 : _53780 = (term397 _107642 B)) : (term449 _100044 _107639 _107642 A B _53779) = (term548 _100044 _107639 _107642 A B _53779 _53780).
Proof. exact (MK_COMB (@lem4528540 _107642 A) (@lem4528539 _100044 _107639 _107642 A B _53779 _53780 h1)). Qed.
Lemma lem4528542 {_107639 B : Type'} (f : _107639 -> B) : f = f.
Proof. exact (eq_refl f). Qed.
Lemma lem4528559 {_107639 B : Type'} (s : _107639 -> Prop) (f : _107639 -> B) (x : _107639) (d : B) : (term113 _107639 B s f x d) = (term113 _107639 B s f x d).
Proof. exact (eq_refl (term113 _107639 B s f x d)). Qed.
Lemma lem4528560 {_107639 B : Type'} (s : _107639 -> Prop) (f : _107639 -> B) (d : B) : (term114 _107639 B s f d) = (term114 _107639 B s f d).
Proof. exact (fun_ext (fun x : _107639 => @lem4528559 _107639 B s f x d)). Qed.
Lemma lem4528561 {_107639 : Type'} : (@all _107639) = (@all _107639).
Proof. exact (eq_refl (@all _107639)). Qed.
Lemma lem4528562 {_107639 B : Type'} (s : _107639 -> Prop) (f : _107639 -> B) (d : B) : (term115 _107639 B s f d) = (term115 _107639 B s f d).
Proof. exact (MK_COMB (@lem4528561 _107639) (@lem4528560 _107639 B s f d)). Qed.
Lemma lem4528577 {_107639 B : Type'} (s : _107639 -> Prop) (f : _107639 -> B) (x : _107639) (t : B -> Prop) : (term116 _107639 B s f x t) = (term116 _107639 B s f x t).
Proof. exact (eq_refl (term116 _107639 B s f x t)). Qed.
Lemma lem4528578 {_107639 B : Type'} (s : _107639 -> Prop) (f : _107639 -> B) (t : B -> Prop) : (term117 _107639 B s f t) = (term117 _107639 B s f t).
Proof. exact (fun_ext (fun x : _107639 => @lem4528577 _107639 B s f x t)). Qed.
Lemma lem4528579 {_107639 : Type'} : (@all _107639) = (@all _107639).
Proof. exact (eq_refl (@all _107639)). Qed.
Lemma lem4528580 {_107639 B : Type'} (s : _107639 -> Prop) (f : _107639 -> B) (t : B -> Prop) : (term118 _107639 B s f t) = (term118 _107639 B s f t).
Proof. exact (MK_COMB (@lem4528579 _107639) (@lem4528578 _107639 B s f t)). Qed.
Lemma lem4528581 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4528582 {_107639 B : Type'} (s : _107639 -> Prop) (f : _107639 -> B) (t : B -> Prop) : (term119 _107639 B s f t) = (term119 _107639 B s f t).
Proof. exact (MK_COMB (@lem4528581) (@lem4528580 _107639 B s f t)). Qed.
Lemma lem4528583 {_107639 B : Type'} (t : B -> Prop) (s : _107639 -> Prop) (f : _107639 -> B) (d : B) : (term120 _107639 B t s f d) = (term120 _107639 B t s f d).
Proof. exact (MK_COMB (@lem4528582 _107639 B s f t) (@lem4528562 _107639 B s f d)). Qed.
Lemma lem4528586 {_107639 B : Type'} (GEN_PVAR_148 : _107639 -> B) : (@SETSPEC (_107639 -> B) GEN_PVAR_148) = (@SETSPEC (_107639 -> B) GEN_PVAR_148).
Proof. exact (eq_refl (@SETSPEC (_107639 -> B) GEN_PVAR_148)). Qed.
Lemma lem4528587 {_107639 B : Type'} (GEN_PVAR_148 : _107639 -> B) (t : B -> Prop) (s : _107639 -> Prop) (f : _107639 -> B) (d : B) : (term121 _107639 B GEN_PVAR_148 t s f d) = (term121 _107639 B GEN_PVAR_148 t s f d).
Proof. exact (MK_COMB (@lem4528586 _107639 B GEN_PVAR_148) (@lem4528583 _107639 B t s f d)). Qed.
Lemma lem4528588 {_107639 B : Type'} (GEN_PVAR_148 : _107639 -> B) (t : B -> Prop) (s : _107639 -> Prop) (d : B) (f : _107639 -> B) : (term122 _107639 B GEN_PVAR_148 t s d f) = (term122 _107639 B GEN_PVAR_148 t s d f).
Proof. exact (MK_COMB (@lem4528587 _107639 B GEN_PVAR_148 t s f d) (@lem4528542 _107639 B f)). Qed.
Lemma lem4528589 {_107639 B : Type'} (GEN_PVAR_148 : _107639 -> B) (t : B -> Prop) (s : _107639 -> Prop) (d : B) : (term123 _107639 B GEN_PVAR_148 t s d) = (term123 _107639 B GEN_PVAR_148 t s d).
Proof. exact (fun_ext (fun f : _107639 -> B => @lem4528588 _107639 B GEN_PVAR_148 t s d f)). Qed.
Lemma lem4528590 {_107639 B : Type'} : (@ex (_107639 -> B)) = (@ex (_107639 -> B)).
Proof. exact (eq_refl (@ex (_107639 -> B))). Qed.
Lemma lem4528591 {_107639 B : Type'} (GEN_PVAR_148 : _107639 -> B) (t : B -> Prop) (s : _107639 -> Prop) (d : B) : (term124 _107639 B GEN_PVAR_148 t s d) = (term124 _107639 B GEN_PVAR_148 t s d).
Proof. exact (MK_COMB (@lem4528590 _107639 B) (@lem4528589 _107639 B GEN_PVAR_148 t s d)). Qed.
Lemma lem4528602 {_107639 B : Type'} (_53779 : type839 _107639 B) (t : B -> Prop) (s : _107639 -> Prop) (d : B) (GEN_PVAR_148 : _107639 -> B) : (term505 _107639 B _53779 t s d GEN_PVAR_148) = (term505 _107639 B _53779 t s d GEN_PVAR_148).
Proof. exact (eq_refl (term505 _107639 B _53779 t s d GEN_PVAR_148)). Qed.
Lemma lem4528603 {_107639 B : Type'} (_53779 : type839 _107639 B) (GEN_PVAR_148 : _107639 -> B) (t : B -> Prop) (s : _107639 -> Prop) (d : B) : ((_53779 t s d GEN_PVAR_148) = (term124 _107639 B GEN_PVAR_148 t s d)) = ((_53779 t s d GEN_PVAR_148) = (term124 _107639 B GEN_PVAR_148 t s d)).
Proof. exact (MK_COMB (@lem4528602 _107639 B _53779 t s d GEN_PVAR_148) (@lem4528591 _107639 B GEN_PVAR_148 t s d)). Qed.
Lemma lem4528604 {_107639 B : Type'} (_53779 : type839 _107639 B) (t : B -> Prop) (s : _107639 -> Prop) (d : B) : (term507 _107639 B _53779 t s d) = (term507 _107639 B _53779 t s d).
Proof. exact (fun_ext (fun GEN_PVAR_148 : _107639 -> B => @lem4528603 _107639 B _53779 GEN_PVAR_148 t s d)). Qed.
Lemma lem4528605 {_107639 B : Type'} : (@all (_107639 -> B)) = (@all (_107639 -> B)).
Proof. exact (eq_refl (@all (_107639 -> B))). Qed.
Lemma lem4528606 {_107639 B : Type'} (_53779 : type839 _107639 B) (t : B -> Prop) (s : _107639 -> Prop) (d : B) : (term508 _107639 B _53779 t s d) = (term508 _107639 B _53779 t s d).
Proof. exact (MK_COMB (@lem4528605 _107639 B) (@lem4528604 _107639 B _53779 t s d)). Qed.
Lemma lem4528607 {_107639 B : Type'} (_53779 : type839 _107639 B) (t : B -> Prop) (s : _107639 -> Prop) : (term509 _107639 B _53779 t s) = (term509 _107639 B _53779 t s).
Proof. exact (fun_ext (fun d : B => @lem4528606 _107639 B _53779 t s d)). Qed.
Lemma lem4528608 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem4528609 {_107639 B : Type'} (_53779 : type839 _107639 B) (t : B -> Prop) (s : _107639 -> Prop) : (term510 _107639 B _53779 t s) = (term510 _107639 B _53779 t s).
Proof. exact (MK_COMB (@lem4528608 B) (@lem4528607 _107639 B _53779 t s)). Qed.
Lemma lem4528610 {_107639 B : Type'} (_53779 : type839 _107639 B) (t : B -> Prop) : (term511 _107639 B _53779 t) = (term511 _107639 B _53779 t).
Proof. exact (fun_ext (fun s : _107639 -> Prop => @lem4528609 _107639 B _53779 t s)). Qed.
Lemma lem4528611 {_107639 : Type'} : (@all (_107639 -> Prop)) = (@all (_107639 -> Prop)).
Proof. exact (eq_refl (@all (_107639 -> Prop))). Qed.
Lemma lem4528612 {_107639 B : Type'} (_53779 : type839 _107639 B) (t : B -> Prop) : (term512 _107639 B _53779 t) = (term512 _107639 B _53779 t).
Proof. exact (MK_COMB (@lem4528611 _107639) (@lem4528610 _107639 B _53779 t)). Qed.
Lemma lem4528613 {_107639 B : Type'} (_53779 : type839 _107639 B) : (term513 _107639 B _53779) = (term513 _107639 B _53779).
Proof. exact (fun_ext (fun t : B -> Prop => @lem4528612 _107639 B _53779 t)). Qed.
Lemma lem4528614 {B : Type'} : (@all (B -> Prop)) = (@all (B -> Prop)).
Proof. exact (eq_refl (@all (B -> Prop))). Qed.
Lemma lem4528615 {_107639 B : Type'} (_53779 : type839 _107639 B) : (term514 _107639 B _53779) = (term514 _107639 B _53779).
Proof. exact (MK_COMB (@lem4528614 B) (@lem4528613 _107639 B _53779)). Qed.
Lemma lem4528616 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4528617 {_107639 B : Type'} (_53779 : type839 _107639 B) : (term515 _107639 B _53779) = (term515 _107639 B _53779).
Proof. exact (MK_COMB (@lem4528616) (@lem4528615 _107639 B _53779)). Qed.
Lemma lem4528618 {_100044 _107639 _107642 A B : Type'} (_53779 : type839 _107639 B) (_53780 : type839 _107642 B) (h1 : _53780 = (term397 _107642 B)) : (term516 _100044 _107639 _107642 A B _53779) = (term549 _100044 _107639 _107642 A B _53779 _53780).
Proof. exact (MK_COMB (@lem4528617 _107639 B _53779) (@lem4528541 _100044 _107639 _107642 A B _53779 _53780 h1)). Qed.
Lemma lem4528619 {_100044 _107639 _107642 A B : Type'} (_53780 : type839 _107642 B) (h1 : _53780 = (term397 _107642 B)) : (term517 _100044 _107639 _107642 A B) = (term550 _100044 _107639 _107642 A B _53780).
Proof. exact (fun_ext (fun _53779 : type839 _107639 B => @lem4528618 _100044 _107639 _107642 A B _53779 _53780 h1)). Qed.
Lemma lem4528620 {_107639 B : Type'} : (@all ((B -> Prop) -> (_107639 -> Prop) -> B -> (_107639 -> B) -> Prop)) = (@all ((B -> Prop) -> (_107639 -> Prop) -> B -> (_107639 -> B) -> Prop)).
Proof. exact (eq_refl (@all ((B -> Prop) -> (_107639 -> Prop) -> B -> (_107639 -> B) -> Prop))). Qed.
Lemma lem4528621 {_100044 _107639 _107642 A B : Type'} (_53780 : type839 _107642 B) (h1 : _53780 = (term397 _107642 B)) : (term518 _100044 _107639 _107642 A B) = (term551 _100044 _107639 _107642 A B _53780).
Proof. exact (MK_COMB (@lem4528620 _107639 B) (@lem4528619 _100044 _107639 _107642 A B _53780 h1)). Qed.
Lemma lem4528622 {_100044 _107639 _107642 A B : Type'} (_53780 : type839 _107642 B) : term552 _100044 _107639 _107642 A B _53780.
Proof. exact (fun h0 : _53780 = (term397 _107642 B) => @lem4528621 _100044 _107639 _107642 A B _53780 h0). Qed.
Lemma lem4528623 {_100044 _107639 _107642 A B : Type'} : term553 _100044 _107639 _107642 A B.
Proof. exact (fun _53780 : type839 _107642 B => @lem4528622 _100044 _107639 _107642 A B _53780). Qed.
Lemma lem4528625 {_3603 : Type'} (P : Prop) (c : _3603) (Q : _3603 -> Prop) : term237 _3603 P c Q.
Proof. exact (EQ_MP (@lem20230 _3603 P c Q) (@lem0)). Qed.
Lemma lem4528626 {_107642 B : Type'} (P : Prop) (c : type839 _107642 B) (Q : type214 _107642 B) : term452 _107642 B P c Q.
Proof. exact (@lem4528625 (type839 _107642 B) P c Q). Qed.
Lemma lem4528627 {_100044 _107639 _107642 A B : Type'} : term554 _100044 _107639 _107642 A B.
Proof. exact (@lem4528626 _107642 B (term518 _100044 _107639 _107642 A B) (term397 _107642 B) (term555 _100044 _107639 _107642 A B)). Qed.
Lemma lem4528628 {_100044 _107639 _107642 A B : Type'} (_53780 : type839 _107642 B) : (term556 _100044 _107639 _107642 A B _53780) = (term551 _100044 _107639 _107642 A B _53780).
Proof. exact (eq_refl (term556 _100044 _107639 _107642 A B _53780)). Qed.
Lemma lem4528629 {_100044 _107639 _107642 A B : Type'} : (term557 _100044 _107639 _107642 A B) = (term557 _100044 _107639 _107642 A B).
Proof. exact (eq_refl (term557 _100044 _107639 _107642 A B)). Qed.
Lemma lem4528630 {_100044 _107639 _107642 A B : Type'} (_53780 : type839 _107642 B) : ((term518 _100044 _107639 _107642 A B) = (term556 _100044 _107639 _107642 A B _53780)) = ((term518 _100044 _107639 _107642 A B) = (term551 _100044 _107639 _107642 A B _53780)).
Proof. exact (MK_COMB (@lem4528629 _100044 _107639 _107642 A B) (@lem4528628 _100044 _107639 _107642 A B _53780)). Qed.
Lemma lem4528631 {_107642 B : Type'} (_53780 : type839 _107642 B) : (term457 _107642 B _53780) = (term457 _107642 B _53780).
Proof. exact (eq_refl (term457 _107642 B _53780)). Qed.
Lemma lem4528632 {_100044 _107639 _107642 A B : Type'} (_53780 : type839 _107642 B) : (term558 _100044 _107639 _107642 A B _53780) = (term552 _100044 _107639 _107642 A B _53780).
Proof. exact (MK_COMB (@lem4528631 _107642 B _53780) (@lem4528630 _100044 _107639 _107642 A B _53780)). Qed.
Lemma lem4528633 {_100044 _107639 _107642 A B : Type'} : (term559 _100044 _107639 _107642 A B) = (term560 _100044 _107639 _107642 A B).
Proof. exact (fun_ext (fun _53780 : type839 _107642 B => @lem4528632 _100044 _107639 _107642 A B _53780)). Qed.
Lemma lem4528634 {_107642 B : Type'} : (@all ((B -> Prop) -> (_107642 -> Prop) -> B -> (_107642 -> B) -> Prop)) = (@all ((B -> Prop) -> (_107642 -> Prop) -> B -> (_107642 -> B) -> Prop)).
Proof. exact (eq_refl (@all ((B -> Prop) -> (_107642 -> Prop) -> B -> (_107642 -> B) -> Prop))). Qed.
Lemma lem4528635 {_100044 _107639 _107642 A B : Type'} : (term561 _100044 _107639 _107642 A B) = (term553 _100044 _107639 _107642 A B).
Proof. exact (MK_COMB (@lem4528634 _107642 B) (@lem4528633 _100044 _107639 _107642 A B)). Qed.
Lemma lem4528636 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4528637 {_100044 _107639 _107642 A B : Type'} : (term562 _100044 _107639 _107642 A B) = (term563 _100044 _107639 _107642 A B).
Proof. exact (MK_COMB (@lem4528636) (@lem4528635 _100044 _107639 _107642 A B)). Qed.
Lemma lem4528638 {_100044 _107639 _107642 A B : Type'} (_53780 : type839 _107642 B) : (term556 _100044 _107639 _107642 A B _53780) = (term551 _100044 _107639 _107642 A B _53780).
Proof. exact (eq_refl (term556 _100044 _107639 _107642 A B _53780)). Qed.
Lemma lem4528639 {_107642 B : Type'} (_53780 : type839 _107642 B) : (term457 _107642 B _53780) = (term457 _107642 B _53780).
Proof. exact (eq_refl (term457 _107642 B _53780)). Qed.
Lemma lem4528640 {_100044 _107639 _107642 A B : Type'} (_53780 : type839 _107642 B) : (term564 _100044 _107639 _107642 A B _53780) = (term565 _100044 _107639 _107642 A B _53780).
Proof. exact (MK_COMB (@lem4528639 _107642 B _53780) (@lem4528638 _100044 _107639 _107642 A B _53780)). Qed.
Lemma lem4528641 {_100044 _107639 _107642 A B : Type'} : (term566 _100044 _107639 _107642 A B) = (term567 _100044 _107639 _107642 A B).
Proof. exact (fun_ext (fun _53780 : type839 _107642 B => @lem4528640 _100044 _107639 _107642 A B _53780)). Qed.
Lemma lem4528642 {_107642 B : Type'} : (@all ((B -> Prop) -> (_107642 -> Prop) -> B -> (_107642 -> B) -> Prop)) = (@all ((B -> Prop) -> (_107642 -> Prop) -> B -> (_107642 -> B) -> Prop)).
Proof. exact (eq_refl (@all ((B -> Prop) -> (_107642 -> Prop) -> B -> (_107642 -> B) -> Prop))). Qed.
Lemma lem4528643 {_100044 _107639 _107642 A B : Type'} : (term568 _100044 _107639 _107642 A B) = (term569 _100044 _107639 _107642 A B).
Proof. exact (MK_COMB (@lem4528642 _107642 B) (@lem4528641 _100044 _107639 _107642 A B)). Qed.
Lemma lem4528644 {_100044 _107639 _107642 A B : Type'} : (term557 _100044 _107639 _107642 A B) = (term557 _100044 _107639 _107642 A B).
Proof. exact (eq_refl (term557 _100044 _107639 _107642 A B)). Qed.
Lemma lem4528645 {_100044 _107639 _107642 A B : Type'} : ((term518 _100044 _107639 _107642 A B) = (term568 _100044 _107639 _107642 A B)) = ((term518 _100044 _107639 _107642 A B) = (term569 _100044 _107639 _107642 A B)).
Proof. exact (MK_COMB (@lem4528644 _100044 _107639 _107642 A B) (@lem4528643 _100044 _107639 _107642 A B)). Qed.
Lemma lem4528646 {_100044 _107639 _107642 A B : Type'} : (term554 _100044 _107639 _107642 A B) = (term570 _100044 _107639 _107642 A B).
Proof. exact (MK_COMB (@lem4528637 _100044 _107639 _107642 A B) (@lem4528645 _100044 _107639 _107642 A B)). Qed.
Lemma lem4528647 {_100044 _107639 _107642 A B : Type'} : term570 _100044 _107639 _107642 A B.
Proof. exact (EQ_MP (@lem4528646 _100044 _107639 _107642 A B) (@lem4528627 _100044 _107639 _107642 A B)). Qed.
Lemma lem4528648 {_100044 _107639 _107642 A B : Type'} : (term518 _100044 _107639 _107642 A B) = (term569 _100044 _107639 _107642 A B).
Proof. exact (@lem4528647 _100044 _107639 _107642 A B (@lem4528623 _100044 _107639 _107642 A B)). Qed.
Lemma lem4528650 {_3571 _3575 : Type'} (s : _3575 -> _3571) (t : _3575 -> _3571) : (s = (term257 _3571 _3575 t)) = (term258 _3571 _3575 s t).
Proof. exact (EQ_MP (@lem19792 _3571 _3575 s t) (@lem0)). Qed.
Lemma lem4528651 {_107642 B : Type'} (s : type839 _107642 B) (t : type839 _107642 B) : (s = (term471 _107642 B t)) = (term472 _107642 B s t).
Proof. exact (@lem4528650 (type674 _107642 B) (B -> Prop) s t). Qed.
Lemma lem4528652 {_107642 B : Type'} (_53780 : type839 _107642 B) : (_53780 = (term473 _107642 B)) = (term474 _107642 B _53780).
Proof. exact (@lem4528651 _107642 B _53780 (term397 _107642 B)). Qed.
Lemma lem4528653 {_107642 B : Type'} (t : B -> Prop) : (term398 _107642 B t) = (term399 _107642 B t).
Proof. exact (eq_refl (term398 _107642 B t)). Qed.
Lemma lem4528654 {_107642 B : Type'} : (term473 _107642 B) = (term397 _107642 B).
Proof. exact (fun_ext (fun t : B -> Prop => @lem4528653 _107642 B t)). Qed.
Lemma lem4528655 {_107642 B : Type'} (_53780 : type839 _107642 B) : (@eq ((B -> Prop) -> (_107642 -> Prop) -> B -> (_107642 -> B) -> Prop) _53780) = (@eq ((B -> Prop) -> (_107642 -> Prop) -> B -> (_107642 -> B) -> Prop) _53780).
Proof. exact (eq_refl (@eq ((B -> Prop) -> (_107642 -> Prop) -> B -> (_107642 -> B) -> Prop) _53780)). Qed.
Lemma lem4528656 {_107642 B : Type'} (_53780 : type839 _107642 B) : (_53780 = (term473 _107642 B)) = (_53780 = (term397 _107642 B)).
Proof. exact (MK_COMB (@lem4528655 _107642 B _53780) (@lem4528654 _107642 B)). Qed.
Lemma lem4528657 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4528658 {_107642 B : Type'} (_53780 : type839 _107642 B) : (term475 _107642 B _53780) = (term476 _107642 B _53780).
Proof. exact (MK_COMB (@lem4528657) (@lem4528656 _107642 B _53780)). Qed.
Lemma lem4528659 {_107642 B : Type'} (t : B -> Prop) : (term398 _107642 B t) = (term399 _107642 B t).
Proof. exact (eq_refl (term398 _107642 B t)). Qed.
Lemma lem4528660 {_107642 B : Type'} (_53780 : type839 _107642 B) (t : B -> Prop) : (term400 _107642 B _53780 t) = (term400 _107642 B _53780 t).
Proof. exact (eq_refl (term400 _107642 B _53780 t)). Qed.
Lemma lem4528661 {_107642 B : Type'} (_53780 : type839 _107642 B) (t : B -> Prop) : ((_53780 t) = (term398 _107642 B t)) = ((_53780 t) = (term399 _107642 B t)).
Proof. exact (MK_COMB (@lem4528660 _107642 B _53780 t) (@lem4528659 _107642 B t)). Qed.
Lemma lem4528662 {_107642 B : Type'} (_53780 : type839 _107642 B) : (term477 _107642 B _53780) = (term478 _107642 B _53780).
Proof. exact (fun_ext (fun t : B -> Prop => @lem4528661 _107642 B _53780 t)). Qed.
Lemma lem4528663 {B : Type'} : (@all (B -> Prop)) = (@all (B -> Prop)).
Proof. exact (eq_refl (@all (B -> Prop))). Qed.
Lemma lem4528664 {_107642 B : Type'} (_53780 : type839 _107642 B) : (term474 _107642 B _53780) = (term479 _107642 B _53780).
Proof. exact (MK_COMB (@lem4528663 B) (@lem4528662 _107642 B _53780)). Qed.
Lemma lem4528665 {_107642 B : Type'} (_53780 : type839 _107642 B) : ((_53780 = (term473 _107642 B)) = (term474 _107642 B _53780)) = ((_53780 = (term397 _107642 B)) = (term479 _107642 B _53780)).
Proof. exact (MK_COMB (@lem4528658 _107642 B _53780) (@lem4528664 _107642 B _53780)). Qed.
Lemma lem4528666 {_107642 B : Type'} (_53780 : type839 _107642 B) : (_53780 = (term397 _107642 B)) = (term479 _107642 B _53780).
Proof. exact (EQ_MP (@lem4528665 _107642 B _53780) (@lem4528652 _107642 B _53780)). Qed.
Lemma lem4528668 {_3571 _3575 : Type'} (s : _3575 -> _3571) (t : _3575 -> _3571) : (s = (term257 _3571 _3575 t)) = (term258 _3571 _3575 s t).
Proof. exact (EQ_MP (@lem19792 _3571 _3575 s t) (@lem0)). Qed.
Lemma lem4528669 {_107642 B : Type'} (s : type674 _107642 B) (t : type674 _107642 B) : (s = (term480 _107642 B t)) = (term481 _107642 B s t).
Proof. exact (@lem4528668 (type1446 _107642 B) (_107642 -> Prop) s t). Qed.
Lemma lem4528670 {_107642 B : Type'} (_53780 : type839 _107642 B) (t : B -> Prop) : ((_53780 t) = (term482 _107642 B t)) = (term483 _107642 B _53780 t).
Proof. exact (@lem4528669 _107642 B (_53780 t) (term399 _107642 B t)). Qed.
Lemma lem4528671 {_107642 B : Type'} (t : B -> Prop) (s : _107642 -> Prop) : (term401 _107642 B t s) = (term402 _107642 B t s).
Proof. exact (eq_refl (term401 _107642 B t s)). Qed.
Lemma lem4528672 {_107642 B : Type'} (t : B -> Prop) : (term482 _107642 B t) = (term399 _107642 B t).
Proof. exact (fun_ext (fun s : _107642 -> Prop => @lem4528671 _107642 B t s)). Qed.
Lemma lem4528673 {_107642 B : Type'} (_53780 : type839 _107642 B) (t : B -> Prop) : (term400 _107642 B _53780 t) = (term400 _107642 B _53780 t).
Proof. exact (eq_refl (term400 _107642 B _53780 t)). Qed.
Lemma lem4528674 {_107642 B : Type'} (_53780 : type839 _107642 B) (t : B -> Prop) : ((_53780 t) = (term482 _107642 B t)) = ((_53780 t) = (term399 _107642 B t)).
Proof. exact (MK_COMB (@lem4528673 _107642 B _53780 t) (@lem4528672 _107642 B t)). Qed.
Lemma lem4528675 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4528676 {_107642 B : Type'} (_53780 : type839 _107642 B) (t : B -> Prop) : (term484 _107642 B _53780 t) = (term485 _107642 B _53780 t).
Proof. exact (MK_COMB (@lem4528675) (@lem4528674 _107642 B _53780 t)). Qed.
Lemma lem4528677 {_107642 B : Type'} (t : B -> Prop) (s : _107642 -> Prop) : (term401 _107642 B t s) = (term402 _107642 B t s).
Proof. exact (eq_refl (term401 _107642 B t s)). Qed.
Lemma lem4528678 {_107642 B : Type'} (_53780 : type839 _107642 B) (t : B -> Prop) (s : _107642 -> Prop) : (term403 _107642 B _53780 t s) = (term403 _107642 B _53780 t s).
Proof. exact (eq_refl (term403 _107642 B _53780 t s)). Qed.
Lemma lem4528679 {_107642 B : Type'} (_53780 : type839 _107642 B) (t : B -> Prop) (s : _107642 -> Prop) : ((_53780 t s) = (term401 _107642 B t s)) = ((_53780 t s) = (term402 _107642 B t s)).
Proof. exact (MK_COMB (@lem4528678 _107642 B _53780 t s) (@lem4528677 _107642 B t s)). Qed.
Lemma lem4528680 {_107642 B : Type'} (_53780 : type839 _107642 B) (t : B -> Prop) : (term486 _107642 B _53780 t) = (term487 _107642 B _53780 t).
Proof. exact (fun_ext (fun s : _107642 -> Prop => @lem4528679 _107642 B _53780 t s)). Qed.
Lemma lem4528681 {_107642 : Type'} : (@all (_107642 -> Prop)) = (@all (_107642 -> Prop)).
Proof. exact (eq_refl (@all (_107642 -> Prop))). Qed.
Lemma lem4528682 {_107642 B : Type'} (_53780 : type839 _107642 B) (t : B -> Prop) : (term483 _107642 B _53780 t) = (term488 _107642 B _53780 t).
Proof. exact (MK_COMB (@lem4528681 _107642) (@lem4528680 _107642 B _53780 t)). Qed.
Lemma lem4528683 {_107642 B : Type'} (_53780 : type839 _107642 B) (t : B -> Prop) : (((_53780 t) = (term482 _107642 B t)) = (term483 _107642 B _53780 t)) = (((_53780 t) = (term399 _107642 B t)) = (term488 _107642 B _53780 t)).
Proof. exact (MK_COMB (@lem4528676 _107642 B _53780 t) (@lem4528682 _107642 B _53780 t)). Qed.
Lemma lem4528684 {_107642 B : Type'} (_53780 : type839 _107642 B) (t : B -> Prop) : ((_53780 t) = (term399 _107642 B t)) = (term488 _107642 B _53780 t).
Proof. exact (EQ_MP (@lem4528683 _107642 B _53780 t) (@lem4528670 _107642 B _53780 t)). Qed.
Lemma lem4528686 {_3571 _3575 : Type'} (s : _3575 -> _3571) (t : _3575 -> _3571) : (s = (term257 _3571 _3575 t)) = (term258 _3571 _3575 s t).
Proof. exact (EQ_MP (@lem19792 _3571 _3575 s t) (@lem0)). Qed.
Lemma lem4528687 {_107642 B : Type'} (s : type1446 _107642 B) (t : type1446 _107642 B) : (s = (term489 _107642 B t)) = (term490 _107642 B s t).
Proof. exact (@lem4528686 (type572 _107642 B) B s t). Qed.
Lemma lem4528688 {_107642 B : Type'} (_53780 : type839 _107642 B) (t : B -> Prop) (s : _107642 -> Prop) : ((_53780 t s) = (term491 _107642 B t s)) = (term492 _107642 B _53780 t s).
Proof. exact (@lem4528687 _107642 B (_53780 t s) (term402 _107642 B t s)). Qed.
Lemma lem4528689 {_107642 B : Type'} (t : B -> Prop) (s : _107642 -> Prop) (d : B) : (term404 _107642 B t s d) = (term125 _107642 B t s d).
Proof. exact (eq_refl (term404 _107642 B t s d)). Qed.
Lemma lem4528690 {_107642 B : Type'} (t : B -> Prop) (s : _107642 -> Prop) : (term491 _107642 B t s) = (term402 _107642 B t s).
Proof. exact (fun_ext (fun d : B => @lem4528689 _107642 B t s d)). Qed.
Lemma lem4528691 {_107642 B : Type'} (_53780 : type839 _107642 B) (t : B -> Prop) (s : _107642 -> Prop) : (term403 _107642 B _53780 t s) = (term403 _107642 B _53780 t s).
Proof. exact (eq_refl (term403 _107642 B _53780 t s)). Qed.
Lemma lem4528692 {_107642 B : Type'} (_53780 : type839 _107642 B) (t : B -> Prop) (s : _107642 -> Prop) : ((_53780 t s) = (term491 _107642 B t s)) = ((_53780 t s) = (term402 _107642 B t s)).
Proof. exact (MK_COMB (@lem4528691 _107642 B _53780 t s) (@lem4528690 _107642 B t s)). Qed.
Lemma lem4528693 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4528694 {_107642 B : Type'} (_53780 : type839 _107642 B) (t : B -> Prop) (s : _107642 -> Prop) : (term493 _107642 B _53780 t s) = (term494 _107642 B _53780 t s).
Proof. exact (MK_COMB (@lem4528693) (@lem4528692 _107642 B _53780 t s)). Qed.
Lemma lem4528695 {_107642 B : Type'} (t : B -> Prop) (s : _107642 -> Prop) (d : B) : (term404 _107642 B t s d) = (term125 _107642 B t s d).
Proof. exact (eq_refl (term404 _107642 B t s d)). Qed.
Lemma lem4528696 {_107642 B : Type'} (_53780 : type839 _107642 B) (t : B -> Prop) (s : _107642 -> Prop) (d : B) : (term405 _107642 B _53780 t s d) = (term405 _107642 B _53780 t s d).
Proof. exact (eq_refl (term405 _107642 B _53780 t s d)). Qed.
Lemma lem4528697 {_107642 B : Type'} (_53780 : type839 _107642 B) (t : B -> Prop) (s : _107642 -> Prop) (d : B) : ((_53780 t s d) = (term404 _107642 B t s d)) = ((_53780 t s d) = (term125 _107642 B t s d)).
Proof. exact (MK_COMB (@lem4528696 _107642 B _53780 t s d) (@lem4528695 _107642 B t s d)). Qed.
Lemma lem4528698 {_107642 B : Type'} (_53780 : type839 _107642 B) (t : B -> Prop) (s : _107642 -> Prop) : (term495 _107642 B _53780 t s) = (term496 _107642 B _53780 t s).
Proof. exact (fun_ext (fun d : B => @lem4528697 _107642 B _53780 t s d)). Qed.
Lemma lem4528699 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem4528700 {_107642 B : Type'} (_53780 : type839 _107642 B) (t : B -> Prop) (s : _107642 -> Prop) : (term492 _107642 B _53780 t s) = (term497 _107642 B _53780 t s).
Proof. exact (MK_COMB (@lem4528699 B) (@lem4528698 _107642 B _53780 t s)). Qed.
Lemma lem4528701 {_107642 B : Type'} (_53780 : type839 _107642 B) (t : B -> Prop) (s : _107642 -> Prop) : (((_53780 t s) = (term491 _107642 B t s)) = (term492 _107642 B _53780 t s)) = (((_53780 t s) = (term402 _107642 B t s)) = (term497 _107642 B _53780 t s)).
Proof. exact (MK_COMB (@lem4528694 _107642 B _53780 t s) (@lem4528700 _107642 B _53780 t s)). Qed.
Lemma lem4528702 {_107642 B : Type'} (_53780 : type839 _107642 B) (t : B -> Prop) (s : _107642 -> Prop) : ((_53780 t s) = (term402 _107642 B t s)) = (term497 _107642 B _53780 t s).
Proof. exact (EQ_MP (@lem4528701 _107642 B _53780 t s) (@lem4528688 _107642 B _53780 t s)). Qed.
Lemma lem4528704 {_3571 _3575 : Type'} (s : _3575 -> _3571) (t : _3575 -> _3571) : (s = (term257 _3571 _3575 t)) = (term258 _3571 _3575 s t).
Proof. exact (EQ_MP (@lem19792 _3571 _3575 s t) (@lem0)). Qed.
Lemma lem4528705 {_107642 B : Type'} (s : type572 _107642 B) (t : type572 _107642 B) : (s = (term498 _107642 B t)) = (term499 _107642 B s t).
Proof. exact (@lem4528704 Prop (_107642 -> B) s t). Qed.
Lemma lem4528706 {_107642 B : Type'} (_53780 : type839 _107642 B) (t : B -> Prop) (s : _107642 -> Prop) (d : B) : ((_53780 t s d) = (term500 _107642 B t s d)) = (term501 _107642 B _53780 t s d).
Proof. exact (@lem4528705 _107642 B (_53780 t s d) (term125 _107642 B t s d)). Qed.
Lemma lem4528707 {_107642 B : Type'} (GEN_PVAR_148 : _107642 -> B) (t : B -> Prop) (s : _107642 -> Prop) (d : B) : (term502 _107642 B t s d GEN_PVAR_148) = (term124 _107642 B GEN_PVAR_148 t s d).
Proof. exact (eq_refl (term502 _107642 B t s d GEN_PVAR_148)). Qed.
Lemma lem4528708 {_107642 B : Type'} (t : B -> Prop) (s : _107642 -> Prop) (d : B) : (term500 _107642 B t s d) = (term125 _107642 B t s d).
Proof. exact (fun_ext (fun GEN_PVAR_148 : _107642 -> B => @lem4528707 _107642 B GEN_PVAR_148 t s d)). Qed.
Lemma lem4528709 {_107642 B : Type'} (_53780 : type839 _107642 B) (t : B -> Prop) (s : _107642 -> Prop) (d : B) : (term405 _107642 B _53780 t s d) = (term405 _107642 B _53780 t s d).
Proof. exact (eq_refl (term405 _107642 B _53780 t s d)). Qed.
Lemma lem4528710 {_107642 B : Type'} (_53780 : type839 _107642 B) (t : B -> Prop) (s : _107642 -> Prop) (d : B) : ((_53780 t s d) = (term500 _107642 B t s d)) = ((_53780 t s d) = (term125 _107642 B t s d)).
Proof. exact (MK_COMB (@lem4528709 _107642 B _53780 t s d) (@lem4528708 _107642 B t s d)). Qed.
Lemma lem4528711 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4528712 {_107642 B : Type'} (_53780 : type839 _107642 B) (t : B -> Prop) (s : _107642 -> Prop) (d : B) : (term503 _107642 B _53780 t s d) = (term504 _107642 B _53780 t s d).
Proof. exact (MK_COMB (@lem4528711) (@lem4528710 _107642 B _53780 t s d)). Qed.
Lemma lem4528713 {_107642 B : Type'} (GEN_PVAR_148 : _107642 -> B) (t : B -> Prop) (s : _107642 -> Prop) (d : B) : (term502 _107642 B t s d GEN_PVAR_148) = (term124 _107642 B GEN_PVAR_148 t s d).
Proof. exact (eq_refl (term502 _107642 B t s d GEN_PVAR_148)). Qed.
Lemma lem4528714 {_107642 B : Type'} (_53780 : type839 _107642 B) (t : B -> Prop) (s : _107642 -> Prop) (d : B) (GEN_PVAR_148 : _107642 -> B) : (term505 _107642 B _53780 t s d GEN_PVAR_148) = (term505 _107642 B _53780 t s d GEN_PVAR_148).
Proof. exact (eq_refl (term505 _107642 B _53780 t s d GEN_PVAR_148)). Qed.
Lemma lem4528715 {_107642 B : Type'} (_53780 : type839 _107642 B) (GEN_PVAR_148 : _107642 -> B) (t : B -> Prop) (s : _107642 -> Prop) (d : B) : ((_53780 t s d GEN_PVAR_148) = (term502 _107642 B t s d GEN_PVAR_148)) = ((_53780 t s d GEN_PVAR_148) = (term124 _107642 B GEN_PVAR_148 t s d)).
Proof. exact (MK_COMB (@lem4528714 _107642 B _53780 t s d GEN_PVAR_148) (@lem4528713 _107642 B GEN_PVAR_148 t s d)). Qed.
Lemma lem4528716 {_107642 B : Type'} (_53780 : type839 _107642 B) (t : B -> Prop) (s : _107642 -> Prop) (d : B) : (term506 _107642 B _53780 t s d) = (term507 _107642 B _53780 t s d).
Proof. exact (fun_ext (fun GEN_PVAR_148 : _107642 -> B => @lem4528715 _107642 B _53780 GEN_PVAR_148 t s d)). Qed.
Lemma lem4528717 {_107642 B : Type'} : (@all (_107642 -> B)) = (@all (_107642 -> B)).
Proof. exact (eq_refl (@all (_107642 -> B))). Qed.
Lemma lem4528718 {_107642 B : Type'} (_53780 : type839 _107642 B) (t : B -> Prop) (s : _107642 -> Prop) (d : B) : (term501 _107642 B _53780 t s d) = (term508 _107642 B _53780 t s d).
Proof. exact (MK_COMB (@lem4528717 _107642 B) (@lem4528716 _107642 B _53780 t s d)). Qed.
Lemma lem4528719 {_107642 B : Type'} (_53780 : type839 _107642 B) (t : B -> Prop) (s : _107642 -> Prop) (d : B) : (((_53780 t s d) = (term500 _107642 B t s d)) = (term501 _107642 B _53780 t s d)) = (((_53780 t s d) = (term125 _107642 B t s d)) = (term508 _107642 B _53780 t s d)).
Proof. exact (MK_COMB (@lem4528712 _107642 B _53780 t s d) (@lem4528718 _107642 B _53780 t s d)). Qed.
Lemma lem4528720 {_107642 B : Type'} (_53780 : type839 _107642 B) (t : B -> Prop) (s : _107642 -> Prop) (d : B) : ((_53780 t s d) = (term125 _107642 B t s d)) = (term508 _107642 B _53780 t s d).
Proof. exact (EQ_MP (@lem4528719 _107642 B _53780 t s d) (@lem4528706 _107642 B _53780 t s d)). Qed.
Lemma lem4528721 {_107642 B : Type'} (_53780 : type839 _107642 B) (GEN_PVAR_148 : _107642 -> B) (t : B -> Prop) (s : _107642 -> Prop) (d : B) : ((_53780 t s d GEN_PVAR_148) = (term124 _107642 B GEN_PVAR_148 t s d)) = ((_53780 t s d GEN_PVAR_148) = (term124 _107642 B GEN_PVAR_148 t s d)).
Proof. exact (eq_refl ((_53780 t s d GEN_PVAR_148) = (term124 _107642 B GEN_PVAR_148 t s d))). Qed.
Lemma lem4528722 {_107642 B : Type'} (_53780 : type839 _107642 B) (t : B -> Prop) (s : _107642 -> Prop) (d : B) : (term507 _107642 B _53780 t s d) = (term507 _107642 B _53780 t s d).
Proof. exact (fun_ext (fun GEN_PVAR_148 : _107642 -> B => @lem4528721 _107642 B _53780 GEN_PVAR_148 t s d)). Qed.
Lemma lem4528723 {_107642 B : Type'} : (@all (_107642 -> B)) = (@all (_107642 -> B)).
Proof. exact (eq_refl (@all (_107642 -> B))). Qed.
Lemma lem4528724 {_107642 B : Type'} (_53780 : type839 _107642 B) (t : B -> Prop) (s : _107642 -> Prop) (d : B) : (term508 _107642 B _53780 t s d) = (term508 _107642 B _53780 t s d).
Proof. exact (MK_COMB (@lem4528723 _107642 B) (@lem4528722 _107642 B _53780 t s d)). Qed.
Lemma lem4528725 {_107642 B : Type'} (_53780 : type839 _107642 B) (t : B -> Prop) (s : _107642 -> Prop) (d : B) : ((_53780 t s d) = (term125 _107642 B t s d)) = (term508 _107642 B _53780 t s d).
Proof. exact (TRANS (@lem4528720 _107642 B _53780 t s d) (@lem4528724 _107642 B _53780 t s d)). Qed.
Lemma lem4528726 {_107642 B : Type'} (_53780 : type839 _107642 B) (t : B -> Prop) (s : _107642 -> Prop) : (term496 _107642 B _53780 t s) = (term509 _107642 B _53780 t s).
Proof. exact (fun_ext (fun d : B => @lem4528725 _107642 B _53780 t s d)). Qed.
Lemma lem4528727 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem4528728 {_107642 B : Type'} (_53780 : type839 _107642 B) (t : B -> Prop) (s : _107642 -> Prop) : (term497 _107642 B _53780 t s) = (term510 _107642 B _53780 t s).
Proof. exact (MK_COMB (@lem4528727 B) (@lem4528726 _107642 B _53780 t s)). Qed.
Lemma lem4528729 {_107642 B : Type'} (_53780 : type839 _107642 B) (t : B -> Prop) (s : _107642 -> Prop) : ((_53780 t s) = (term402 _107642 B t s)) = (term510 _107642 B _53780 t s).
Proof. exact (TRANS (@lem4528702 _107642 B _53780 t s) (@lem4528728 _107642 B _53780 t s)). Qed.
Lemma lem4528730 {_107642 B : Type'} (_53780 : type839 _107642 B) (t : B -> Prop) : (term487 _107642 B _53780 t) = (term511 _107642 B _53780 t).
Proof. exact (fun_ext (fun s : _107642 -> Prop => @lem4528729 _107642 B _53780 t s)). Qed.
Lemma lem4528731 {_107642 : Type'} : (@all (_107642 -> Prop)) = (@all (_107642 -> Prop)).
Proof. exact (eq_refl (@all (_107642 -> Prop))). Qed.
Lemma lem4528732 {_107642 B : Type'} (_53780 : type839 _107642 B) (t : B -> Prop) : (term488 _107642 B _53780 t) = (term512 _107642 B _53780 t).
Proof. exact (MK_COMB (@lem4528731 _107642) (@lem4528730 _107642 B _53780 t)). Qed.
Lemma lem4528733 {_107642 B : Type'} (_53780 : type839 _107642 B) (t : B -> Prop) : ((_53780 t) = (term399 _107642 B t)) = (term512 _107642 B _53780 t).
Proof. exact (TRANS (@lem4528684 _107642 B _53780 t) (@lem4528732 _107642 B _53780 t)). Qed.
Lemma lem4528734 {_107642 B : Type'} (_53780 : type839 _107642 B) : (term478 _107642 B _53780) = (term513 _107642 B _53780).
Proof. exact (fun_ext (fun t : B -> Prop => @lem4528733 _107642 B _53780 t)). Qed.
Lemma lem4528735 {B : Type'} : (@all (B -> Prop)) = (@all (B -> Prop)).
Proof. exact (eq_refl (@all (B -> Prop))). Qed.
Lemma lem4528736 {_107642 B : Type'} (_53780 : type839 _107642 B) : (term479 _107642 B _53780) = (term514 _107642 B _53780).
Proof. exact (MK_COMB (@lem4528735 B) (@lem4528734 _107642 B _53780)). Qed.
Lemma lem4528737 {_107642 B : Type'} (_53780 : type839 _107642 B) : (_53780 = (term397 _107642 B)) = (term514 _107642 B _53780).
Proof. exact (TRANS (@lem4528666 _107642 B _53780) (@lem4528736 _107642 B _53780)). Qed.
Lemma lem4528738 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4528739 {_107642 B : Type'} (_53780 : type839 _107642 B) : (term457 _107642 B _53780) = (term515 _107642 B _53780).
Proof. exact (MK_COMB (@lem4528738) (@lem4528737 _107642 B _53780)). Qed.
Lemma lem4528740 {_100044 _107639 _107642 A B : Type'} (_53780 : type839 _107642 B) : (term551 _100044 _107639 _107642 A B _53780) = (term551 _100044 _107639 _107642 A B _53780).
Proof. exact (eq_refl (term551 _100044 _107639 _107642 A B _53780)). Qed.
Lemma lem4528741 {_100044 _107639 _107642 A B : Type'} (_53780 : type839 _107642 B) : (term565 _100044 _107639 _107642 A B _53780) = (term571 _100044 _107639 _107642 A B _53780).
Proof. exact (MK_COMB (@lem4528739 _107642 B _53780) (@lem4528740 _100044 _107639 _107642 A B _53780)). Qed.
Lemma lem4528742 {_100044 _107639 _107642 A B : Type'} : (term567 _100044 _107639 _107642 A B) = (term572 _100044 _107639 _107642 A B).
Proof. exact (fun_ext (fun _53780 : type839 _107642 B => @lem4528741 _100044 _107639 _107642 A B _53780)). Qed.
Lemma lem4528743 {_107642 B : Type'} : (@all ((B -> Prop) -> (_107642 -> Prop) -> B -> (_107642 -> B) -> Prop)) = (@all ((B -> Prop) -> (_107642 -> Prop) -> B -> (_107642 -> B) -> Prop)).
Proof. exact (eq_refl (@all ((B -> Prop) -> (_107642 -> Prop) -> B -> (_107642 -> B) -> Prop))). Qed.
Lemma lem4528744 {_100044 _107639 _107642 A B : Type'} : (term569 _100044 _107639 _107642 A B) = (term573 _100044 _107639 _107642 A B).
Proof. exact (MK_COMB (@lem4528743 _107642 B) (@lem4528742 _100044 _107639 _107642 A B)). Qed.
Lemma lem4528745 {_100044 _107639 _107642 A B : Type'} : (term557 _100044 _107639 _107642 A B) = (term557 _100044 _107639 _107642 A B).
Proof. exact (eq_refl (term557 _100044 _107639 _107642 A B)). Qed.
Lemma lem4528746 {_100044 _107639 _107642 A B : Type'} : ((term518 _100044 _107639 _107642 A B) = (term569 _100044 _107639 _107642 A B)) = ((term518 _100044 _107639 _107642 A B) = (term573 _100044 _107639 _107642 A B)).
Proof. exact (MK_COMB (@lem4528745 _100044 _107639 _107642 A B) (@lem4528744 _100044 _107639 _107642 A B)). Qed.
Lemma lem4528747 {_100044 _107639 _107642 A B : Type'} : (term518 _100044 _107639 _107642 A B) = (term573 _100044 _107639 _107642 A B).
Proof. exact (EQ_MP (@lem4528746 _100044 _107639 _107642 A B) (@lem4528648 _100044 _107639 _107642 A B)). Qed.
Lemma lem4528748 {A B : Type'} (_53781 : type839 A B) (h1 : _53781 = (term397 A B)) : _53781 = (term397 A B).
Proof. exact (h1). Qed.
Lemma lem4528749 {B : Type'} (t : B -> Prop) : t = t.
Proof. exact (eq_refl t). Qed.
Lemma lem4528750 {A B : Type'} (t : B -> Prop) (_53781 : type839 A B) (h1 : _53781 = (term397 A B)) : (_53781 t) = (term398 A B t).
Proof. exact (MK_COMB (@lem4528748 A B _53781 h1) (@lem4528749 B t)). Qed.
Lemma lem4528751 {A B : Type'} (t : B -> Prop) : (term398 A B t) = (term399 A B t).
Proof. exact (eq_refl (term398 A B t)). Qed.
Lemma lem4528752 {A B : Type'} (_53781 : type839 A B) (t : B -> Prop) : (term400 A B _53781 t) = (term400 A B _53781 t).
Proof. exact (eq_refl (term400 A B _53781 t)). Qed.
Lemma lem4528753 {A B : Type'} (_53781 : type839 A B) (t : B -> Prop) : ((_53781 t) = (term398 A B t)) = ((_53781 t) = (term399 A B t)).
Proof. exact (MK_COMB (@lem4528752 A B _53781 t) (@lem4528751 A B t)). Qed.
Lemma lem4528754 {A B : Type'} (t : B -> Prop) (_53781 : type839 A B) (h1 : _53781 = (term397 A B)) : (_53781 t) = (term399 A B t).
Proof. exact (EQ_MP (@lem4528753 A B _53781 t) (@lem4528750 A B t _53781 h1)). Qed.
Lemma lem4528755 {A : Type'} (s : A -> Prop) : s = s.
Proof. exact (eq_refl s). Qed.
Lemma lem4528756 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (_53781 : type839 A B) (h1 : _53781 = (term397 A B)) : (_53781 t s) = (term401 A B t s).
Proof. exact (MK_COMB (@lem4528754 A B t _53781 h1) (@lem4528755 A s)). Qed.
Lemma lem4528757 {A B : Type'} (t : B -> Prop) (s : A -> Prop) : (term401 A B t s) = (term402 A B t s).
Proof. exact (eq_refl (term401 A B t s)). Qed.
Lemma lem4528758 {A B : Type'} (_53781 : type839 A B) (t : B -> Prop) (s : A -> Prop) : (term403 A B _53781 t s) = (term403 A B _53781 t s).
Proof. exact (eq_refl (term403 A B _53781 t s)). Qed.
Lemma lem4528759 {A B : Type'} (_53781 : type839 A B) (t : B -> Prop) (s : A -> Prop) : ((_53781 t s) = (term401 A B t s)) = ((_53781 t s) = (term402 A B t s)).
Proof. exact (MK_COMB (@lem4528758 A B _53781 t s) (@lem4528757 A B t s)). Qed.
Lemma lem4528760 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (_53781 : type839 A B) (h1 : _53781 = (term397 A B)) : (_53781 t s) = (term402 A B t s).
Proof. exact (EQ_MP (@lem4528759 A B _53781 t s) (@lem4528756 A B t s _53781 h1)). Qed.
Lemma lem4528761 {B : Type'} (d : B) : d = d.
Proof. exact (eq_refl d). Qed.
Lemma lem4528762 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (d : B) (_53781 : type839 A B) (h1 : _53781 = (term397 A B)) : (_53781 t s d) = (term404 A B t s d).
Proof. exact (MK_COMB (@lem4528760 A B t s _53781 h1) (@lem4528761 B d)). Qed.
Lemma lem4528763 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (d : B) : (term404 A B t s d) = (term125 A B t s d).
Proof. exact (eq_refl (term404 A B t s d)). Qed.
Lemma lem4528764 {A B : Type'} (_53781 : type839 A B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term405 A B _53781 t s d) = (term405 A B _53781 t s d).
Proof. exact (eq_refl (term405 A B _53781 t s d)). Qed.
Lemma lem4528765 {A B : Type'} (_53781 : type839 A B) (t : B -> Prop) (s : A -> Prop) (d : B) : ((_53781 t s d) = (term404 A B t s d)) = ((_53781 t s d) = (term125 A B t s d)).
Proof. exact (MK_COMB (@lem4528764 A B _53781 t s d) (@lem4528763 A B t s d)). Qed.
Lemma lem4528766 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (d : B) (_53781 : type839 A B) (h1 : _53781 = (term397 A B)) : (_53781 t s d) = (term125 A B t s d).
Proof. exact (EQ_MP (@lem4528765 A B _53781 t s d) (@lem4528762 A B t s d _53781 h1)). Qed.
Lemma lem4528772 (n : nat) (m : nat) : (Nat.pow n m) = (Nat.pow n m).
Proof. exact (eq_refl (Nat.pow n m)). Qed.
Lemma lem4528776 {A : Type'} (f : A -> nat) : f = f.
Proof. exact (eq_refl f). Qed.
Lemma lem4528793 {A : Type'} (s : A -> Prop) (f : A -> nat) (x : A) (d : nat) : (term86 A s f x d) = (term86 A s f x d).
Proof. exact (eq_refl (term86 A s f x d)). Qed.
Lemma lem4528794 {A : Type'} (s : A -> Prop) (f : A -> nat) (d : nat) : (term87 A s f d) = (term87 A s f d).
Proof. exact (fun_ext (fun x : A => @lem4528793 A s f x d)). Qed.
Lemma lem4528795 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem4528796 {A : Type'} (s : A -> Prop) (f : A -> nat) (d : nat) : (term88 A s f d) = (term88 A s f d).
Proof. exact (MK_COMB (@lem4528795 A) (@lem4528794 A s f d)). Qed.
Lemma lem4528811 {A : Type'} (s : A -> Prop) (f : A -> nat) (x : A) (t : nat -> Prop) : (term89 A s f x t) = (term89 A s f x t).
Proof. exact (eq_refl (term89 A s f x t)). Qed.
Lemma lem4528812 {A : Type'} (s : A -> Prop) (f : A -> nat) (t : nat -> Prop) : (term90 A s f t) = (term90 A s f t).
Proof. exact (fun_ext (fun x : A => @lem4528811 A s f x t)). Qed.
Lemma lem4528813 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem4528814 {A : Type'} (s : A -> Prop) (f : A -> nat) (t : nat -> Prop) : (term91 A s f t) = (term91 A s f t).
Proof. exact (MK_COMB (@lem4528813 A) (@lem4528812 A s f t)). Qed.
Lemma lem4528815 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4528816 {A : Type'} (s : A -> Prop) (f : A -> nat) (t : nat -> Prop) : (term92 A s f t) = (term92 A s f t).
Proof. exact (MK_COMB (@lem4528815) (@lem4528814 A s f t)). Qed.
Lemma lem4528817 {A : Type'} (t : nat -> Prop) (s : A -> Prop) (f : A -> nat) (d : nat) : (term93 A t s f d) = (term93 A t s f d).
Proof. exact (MK_COMB (@lem4528816 A s f t) (@lem4528796 A s f d)). Qed.
Lemma lem4528820 {A : Type'} (GEN_PVAR_148 : A -> nat) : (@SETSPEC (A -> nat) GEN_PVAR_148) = (@SETSPEC (A -> nat) GEN_PVAR_148).
Proof. exact (eq_refl (@SETSPEC (A -> nat) GEN_PVAR_148)). Qed.
Lemma lem4528821 {A : Type'} (GEN_PVAR_148 : A -> nat) (t : nat -> Prop) (s : A -> Prop) (f : A -> nat) (d : nat) : (term94 A GEN_PVAR_148 t s f d) = (term94 A GEN_PVAR_148 t s f d).
Proof. exact (MK_COMB (@lem4528820 A GEN_PVAR_148) (@lem4528817 A t s f d)). Qed.
Lemma lem4528822 {A : Type'} (GEN_PVAR_148 : A -> nat) (t : nat -> Prop) (s : A -> Prop) (d : nat) (f : A -> nat) : (term95 A GEN_PVAR_148 t s d f) = (term95 A GEN_PVAR_148 t s d f).
Proof. exact (MK_COMB (@lem4528821 A GEN_PVAR_148 t s f d) (@lem4528776 A f)). Qed.
Lemma lem4528823 {A : Type'} (GEN_PVAR_148 : A -> nat) (t : nat -> Prop) (s : A -> Prop) (d : nat) : (term96 A GEN_PVAR_148 t s d) = (term96 A GEN_PVAR_148 t s d).
Proof. exact (fun_ext (fun f : A -> nat => @lem4528822 A GEN_PVAR_148 t s d f)). Qed.
Lemma lem4528824 {A : Type'} : (@ex (A -> nat)) = (@ex (A -> nat)).
Proof. exact (eq_refl (@ex (A -> nat))). Qed.
Lemma lem4528825 {A : Type'} (GEN_PVAR_148 : A -> nat) (t : nat -> Prop) (s : A -> Prop) (d : nat) : (term97 A GEN_PVAR_148 t s d) = (term97 A GEN_PVAR_148 t s d).
Proof. exact (MK_COMB (@lem4528824 A) (@lem4528823 A GEN_PVAR_148 t s d)). Qed.
Lemma lem4528826 {A : Type'} (t : nat -> Prop) (s : A -> Prop) (d : nat) : (term98 A t s d) = (term98 A t s d).
Proof. exact (fun_ext (fun GEN_PVAR_148 : A -> nat => @lem4528825 A GEN_PVAR_148 t s d)). Qed.
Lemma lem4528827 {A : Type'} : (@GSPEC (A -> nat)) = (@GSPEC (A -> nat)).
Proof. exact (eq_refl (@GSPEC (A -> nat))). Qed.
Lemma lem4528828 {A : Type'} (t : nat -> Prop) (s : A -> Prop) (d : nat) : (term99 A t s d) = (term99 A t s d).
Proof. exact (MK_COMB (@lem4528827 A) (@lem4528826 A t s d)). Qed.
Lemma lem4528829 {A : Type'} : (@HAS_SIZE (A -> nat)) = (@HAS_SIZE (A -> nat)).
Proof. exact (eq_refl (@HAS_SIZE (A -> nat))). Qed.
Lemma lem4528830 {A : Type'} (t : nat -> Prop) (s : A -> Prop) (d : nat) : (term100 A t s d) = (term100 A t s d).
Proof. exact (MK_COMB (@lem4528829 A) (@lem4528828 A t s d)). Qed.
Lemma lem4528831 {A : Type'} (t : nat -> Prop) (s : A -> Prop) (d : nat) (n : nat) (m : nat) : (term101 A t s d n m) = (term101 A t s d n m).
Proof. exact (MK_COMB (@lem4528830 A t s d) (@lem4528772 n m)). Qed.
Lemma lem4528846 {A : Type'} (s : A -> Prop) (m : nat) (t : nat -> Prop) (n : nat) : (term102 A s m t n) = (term102 A s m t n).
Proof. exact (eq_refl (term102 A s m t n)). Qed.
Lemma lem4528847 {A : Type'} (t : nat -> Prop) (s : A -> Prop) (d : nat) (n : nat) (m : nat) : (term103 A t s d n m) = (term103 A t s d n m).
Proof. exact (MK_COMB (@lem4528846 A s m t n) (@lem4528831 A t s d n m)). Qed.
Lemma lem4528848 {A : Type'} (t : nat -> Prop) (d : nat) (n : nat) (m : nat) : (term104 A t d n m) = (term104 A t d n m).
Proof. exact (fun_ext (fun s : A -> Prop => @lem4528847 A t s d n m)). Qed.
Lemma lem4528849 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem4528850 {A : Type'} (t : nat -> Prop) (d : nat) (n : nat) (m : nat) : (term105 A t d n m) = (term105 A t d n m).
Proof. exact (MK_COMB (@lem4528849 A) (@lem4528848 A t d n m)). Qed.
Lemma lem4528851 {A : Type'} (t : nat -> Prop) (d : nat) (n : nat) : (term106 A t d n) = (term106 A t d n).
Proof. exact (fun_ext (fun m : nat => @lem4528850 A t d n m)). Qed.
Lemma lem4528852 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4528853 {A : Type'} (t : nat -> Prop) (d : nat) (n : nat) : (term107 A t d n) = (term107 A t d n).
Proof. exact (MK_COMB (@lem4528852) (@lem4528851 A t d n)). Qed.
Lemma lem4528854 {A : Type'} (d : nat) (n : nat) : (term108 A d n) = (term108 A d n).
Proof. exact (fun_ext (fun t : nat -> Prop => @lem4528853 A t d n)). Qed.
Lemma lem4528855 : (@all (nat -> Prop)) = (@all (nat -> Prop)).
Proof. exact (eq_refl (@all (nat -> Prop))). Qed.
Lemma lem4528856 {A : Type'} (d : nat) (n : nat) : (term109 A d n) = (term109 A d n).
Proof. exact (MK_COMB (@lem4528855) (@lem4528854 A d n)). Qed.
Lemma lem4528857 {A : Type'} (d : nat) : (term110 A d) = (term110 A d).
Proof. exact (fun_ext (fun n : nat => @lem4528856 A d n)). Qed.
Lemma lem4528858 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4528859 {A : Type'} (d : nat) : (term111 A d) = (term111 A d).
Proof. exact (MK_COMB (@lem4528858) (@lem4528857 A d)). Qed.
Lemma lem4528860 {A : Type'} : (term112 A) = (term112 A).
Proof. exact (fun_ext (fun d : nat => @lem4528859 A d)). Qed.
Lemma lem4528861 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4528862 {A : Type'} : (term13 A) = (term13 A).
Proof. exact (MK_COMB (@lem4528861) (@lem4528860 A)). Qed.
Lemma lem4528863 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem4528864 {A : Type'} : (term24 A) = (term24 A).
Proof. exact (MK_COMB (@lem4528863) (@lem4528862 A)). Qed.
Lemma lem4528869 (n : nat) (m : nat) : (Nat.pow n m) = (Nat.pow n m).
Proof. exact (eq_refl (Nat.pow n m)). Qed.
Lemma lem4528871 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (d : B) (_53781 : type839 A B) (h1 : _53781 = (term397 A B)) : (term125 A B t s d) = (_53781 t s d).
Proof. exact (SYM (@lem4528766 A B t s d _53781 h1)). Qed.
Lemma lem4528872 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (d : B) (_53781 : type839 A B) (h1 : _53781 = (term397 A B)) : (term125 A B t s d) = (_53781 t s d).
Proof. exact (@lem4528871 A B t s d _53781 h1). Qed.
Lemma lem4528873 {A B : Type'} : (@GSPEC (A -> B)) = (@GSPEC (A -> B)).
Proof. exact (eq_refl (@GSPEC (A -> B))). Qed.
Lemma lem4528874 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (d : B) (_53781 : type839 A B) (h1 : _53781 = (term397 A B)) : (term126 A B t s d) = (term406 A B _53781 t s d).
Proof. exact (MK_COMB (@lem4528873 A B) (@lem4528872 A B t s d _53781 h1)). Qed.
Lemma lem4528875 {A B : Type'} : (@HAS_SIZE (A -> B)) = (@HAS_SIZE (A -> B)).
Proof. exact (eq_refl (@HAS_SIZE (A -> B))). Qed.
Lemma lem4528876 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (d : B) (_53781 : type839 A B) (h1 : _53781 = (term397 A B)) : (term127 A B t s d) = (term407 A B _53781 t s d).
Proof. exact (MK_COMB (@lem4528875 A B) (@lem4528874 A B t s d _53781 h1)). Qed.
Lemma lem4528877 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (d : B) (n : nat) (m : nat) (_53781 : type839 A B) (h1 : _53781 = (term397 A B)) : (term128 A B t s d n m) = (term408 A B _53781 t s d n m).
Proof. exact (MK_COMB (@lem4528876 A B t s d _53781 h1) (@lem4528869 n m)). Qed.
Lemma lem4528892 {A B : Type'} (s : A -> Prop) (m : nat) (t : B -> Prop) (n : nat) : (term129 A B s m t n) = (term129 A B s m t n).
Proof. exact (eq_refl (term129 A B s m t n)). Qed.
Lemma lem4528893 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (d : B) (n : nat) (m : nat) (_53781 : type839 A B) (h1 : _53781 = (term397 A B)) : (term130 A B t s d n m) = (term409 A B _53781 t s d n m).
Proof. exact (MK_COMB (@lem4528892 A B s m t n) (@lem4528877 A B t s d n m _53781 h1)). Qed.
Lemma lem4528894 {A B : Type'} (t : B -> Prop) (d : B) (n : nat) (m : nat) (_53781 : type839 A B) (h1 : _53781 = (term397 A B)) : (term131 A B t d n m) = (term410 A B _53781 t d n m).
Proof. exact (fun_ext (fun s : A -> Prop => @lem4528893 A B t s d n m _53781 h1)). Qed.
Lemma lem4528895 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem4528896 {A B : Type'} (t : B -> Prop) (d : B) (n : nat) (m : nat) (_53781 : type839 A B) (h1 : _53781 = (term397 A B)) : (term132 A B t d n m) = (term411 A B _53781 t d n m).
Proof. exact (MK_COMB (@lem4528895 A) (@lem4528894 A B t d n m _53781 h1)). Qed.
Lemma lem4528897 {A B : Type'} (t : B -> Prop) (d : B) (n : nat) (_53781 : type839 A B) (h1 : _53781 = (term397 A B)) : (term133 A B t d n) = (term412 A B _53781 t d n).
Proof. exact (fun_ext (fun m : nat => @lem4528896 A B t d n m _53781 h1)). Qed.
Lemma lem4528898 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4528899 {A B : Type'} (t : B -> Prop) (d : B) (n : nat) (_53781 : type839 A B) (h1 : _53781 = (term397 A B)) : (term134 A B t d n) = (term413 A B _53781 t d n).
Proof. exact (MK_COMB (@lem4528898) (@lem4528897 A B t d n _53781 h1)). Qed.
Lemma lem4528900 {A B : Type'} (d : B) (n : nat) (_53781 : type839 A B) (h1 : _53781 = (term397 A B)) : (term135 A B d n) = (term414 A B _53781 d n).
Proof. exact (fun_ext (fun t : B -> Prop => @lem4528899 A B t d n _53781 h1)). Qed.
Lemma lem4528901 {B : Type'} : (@all (B -> Prop)) = (@all (B -> Prop)).
Proof. exact (eq_refl (@all (B -> Prop))). Qed.
Lemma lem4528902 {A B : Type'} (d : B) (n : nat) (_53781 : type839 A B) (h1 : _53781 = (term397 A B)) : (term136 A B d n) = (term415 A B _53781 d n).
Proof. exact (MK_COMB (@lem4528901 B) (@lem4528900 A B d n _53781 h1)). Qed.
Lemma lem4528903 {A B : Type'} (d : B) (_53781 : type839 A B) (h1 : _53781 = (term397 A B)) : (term137 A B d) = (term416 A B _53781 d).
Proof. exact (fun_ext (fun n : nat => @lem4528902 A B d n _53781 h1)). Qed.
Lemma lem4528904 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4528905 {A B : Type'} (d : B) (_53781 : type839 A B) (h1 : _53781 = (term397 A B)) : (term138 A B d) = (term417 A B _53781 d).
Proof. exact (MK_COMB (@lem4528904) (@lem4528903 A B d _53781 h1)). Qed.
Lemma lem4528906 {A B : Type'} (_53781 : type839 A B) (h1 : _53781 = (term397 A B)) : (term139 A B) = (term418 A B _53781).
Proof. exact (fun_ext (fun d : B => @lem4528905 A B d _53781 h1)). Qed.
Lemma lem4528907 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem4528908 {A B : Type'} (_53781 : type839 A B) (h1 : _53781 = (term397 A B)) : (term12 A B) = (term419 A B _53781).
Proof. exact (MK_COMB (@lem4528907 B) (@lem4528906 A B _53781 h1)). Qed.
Lemma lem4528909 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4528910 {A B : Type'} (_53781 : type839 A B) (h1 : _53781 = (term397 A B)) : (term25 A B) = (term420 A B _53781).
Proof. exact (MK_COMB (@lem4528909) (@lem4528908 A B _53781 h1)). Qed.
Lemma lem4528911 {A B : Type'} (_53781 : type839 A B) (h1 : _53781 = (term397 A B)) : (term27 A B) = (term574 A B _53781).
Proof. exact (MK_COMB (@lem4528910 A B _53781 h1) (@lem4528864 A)). Qed.
Lemma lem4528944 {_107642 B : Type'} (_53780 : type839 _107642 B) (t : B -> Prop) (s : _107642 -> Prop) (d : B) (n : nat) (m : nat) : (term409 _107642 B _53780 t s d n m) = (term409 _107642 B _53780 t s d n m).
Proof. exact (eq_refl (term409 _107642 B _53780 t s d n m)). Qed.
Lemma lem4528945 {_107642 B : Type'} (_53780 : type839 _107642 B) (t : B -> Prop) (d : B) (n : nat) (m : nat) : (term410 _107642 B _53780 t d n m) = (term410 _107642 B _53780 t d n m).
Proof. exact (fun_ext (fun s : _107642 -> Prop => @lem4528944 _107642 B _53780 t s d n m)). Qed.
Lemma lem4528946 {_107642 : Type'} : (@all (_107642 -> Prop)) = (@all (_107642 -> Prop)).
Proof. exact (eq_refl (@all (_107642 -> Prop))). Qed.
Lemma lem4528947 {_107642 B : Type'} (_53780 : type839 _107642 B) (t : B -> Prop) (d : B) (n : nat) (m : nat) : (term411 _107642 B _53780 t d n m) = (term411 _107642 B _53780 t d n m).
Proof. exact (MK_COMB (@lem4528946 _107642) (@lem4528945 _107642 B _53780 t d n m)). Qed.
Lemma lem4528948 {_107642 B : Type'} (_53780 : type839 _107642 B) (t : B -> Prop) (d : B) (n : nat) : (term412 _107642 B _53780 t d n) = (term412 _107642 B _53780 t d n).
Proof. exact (fun_ext (fun m : nat => @lem4528947 _107642 B _53780 t d n m)). Qed.
Lemma lem4528949 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4528950 {_107642 B : Type'} (_53780 : type839 _107642 B) (t : B -> Prop) (d : B) (n : nat) : (term413 _107642 B _53780 t d n) = (term413 _107642 B _53780 t d n).
Proof. exact (MK_COMB (@lem4528949) (@lem4528948 _107642 B _53780 t d n)). Qed.
Lemma lem4528951 {_107642 B : Type'} (_53780 : type839 _107642 B) (d : B) (n : nat) : (term414 _107642 B _53780 d n) = (term414 _107642 B _53780 d n).
Proof. exact (fun_ext (fun t : B -> Prop => @lem4528950 _107642 B _53780 t d n)). Qed.
Lemma lem4528952 {B : Type'} : (@all (B -> Prop)) = (@all (B -> Prop)).
Proof. exact (eq_refl (@all (B -> Prop))). Qed.
Lemma lem4528953 {_107642 B : Type'} (_53780 : type839 _107642 B) (d : B) (n : nat) : (term415 _107642 B _53780 d n) = (term415 _107642 B _53780 d n).
Proof. exact (MK_COMB (@lem4528952 B) (@lem4528951 _107642 B _53780 d n)). Qed.
Lemma lem4528954 {_107642 B : Type'} (_53780 : type839 _107642 B) (d : B) : (term416 _107642 B _53780 d) = (term416 _107642 B _53780 d).
Proof. exact (fun_ext (fun n : nat => @lem4528953 _107642 B _53780 d n)). Qed.
Lemma lem4528955 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4528956 {_107642 B : Type'} (_53780 : type839 _107642 B) (d : B) : (term417 _107642 B _53780 d) = (term417 _107642 B _53780 d).
Proof. exact (MK_COMB (@lem4528955) (@lem4528954 _107642 B _53780 d)). Qed.
Lemma lem4528957 {_107642 B : Type'} (_53780 : type839 _107642 B) : (term418 _107642 B _53780) = (term418 _107642 B _53780).
Proof. exact (fun_ext (fun d : B => @lem4528956 _107642 B _53780 d)). Qed.
Lemma lem4528958 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem4528959 {_107642 B : Type'} (_53780 : type839 _107642 B) : (term419 _107642 B _53780) = (term419 _107642 B _53780).
Proof. exact (MK_COMB (@lem4528958 B) (@lem4528957 _107642 B _53780)). Qed.
Lemma lem4528960 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4528961 {_107642 B : Type'} (_53780 : type839 _107642 B) : (term420 _107642 B _53780) = (term420 _107642 B _53780).
Proof. exact (MK_COMB (@lem4528960) (@lem4528959 _107642 B _53780)). Qed.
Lemma lem4528962 {_107642 A B : Type'} (_53780 : type839 _107642 B) (_53781 : type839 A B) (h1 : _53781 = (term397 A B)) : (term519 _107642 A B _53780) = (term575 _107642 A B _53780 _53781).
Proof. exact (MK_COMB (@lem4528961 _107642 B _53780) (@lem4528911 A B _53781 h1)). Qed.
Lemma lem4528995 {_107639 B : Type'} (_53779 : type839 _107639 B) (t : B -> Prop) (s : _107639 -> Prop) (d : B) (n : nat) (m : nat) : (term409 _107639 B _53779 t s d n m) = (term409 _107639 B _53779 t s d n m).
Proof. exact (eq_refl (term409 _107639 B _53779 t s d n m)). Qed.
Lemma lem4528996 {_107639 B : Type'} (_53779 : type839 _107639 B) (t : B -> Prop) (d : B) (n : nat) (m : nat) : (term410 _107639 B _53779 t d n m) = (term410 _107639 B _53779 t d n m).
Proof. exact (fun_ext (fun s : _107639 -> Prop => @lem4528995 _107639 B _53779 t s d n m)). Qed.
Lemma lem4528997 {_107639 : Type'} : (@all (_107639 -> Prop)) = (@all (_107639 -> Prop)).
Proof. exact (eq_refl (@all (_107639 -> Prop))). Qed.
Lemma lem4528998 {_107639 B : Type'} (_53779 : type839 _107639 B) (t : B -> Prop) (d : B) (n : nat) (m : nat) : (term411 _107639 B _53779 t d n m) = (term411 _107639 B _53779 t d n m).
Proof. exact (MK_COMB (@lem4528997 _107639) (@lem4528996 _107639 B _53779 t d n m)). Qed.
Lemma lem4528999 {_107639 B : Type'} (_53779 : type839 _107639 B) (t : B -> Prop) (d : B) (n : nat) : (term412 _107639 B _53779 t d n) = (term412 _107639 B _53779 t d n).
Proof. exact (fun_ext (fun m : nat => @lem4528998 _107639 B _53779 t d n m)). Qed.
Lemma lem4529000 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4529001 {_107639 B : Type'} (_53779 : type839 _107639 B) (t : B -> Prop) (d : B) (n : nat) : (term413 _107639 B _53779 t d n) = (term413 _107639 B _53779 t d n).
Proof. exact (MK_COMB (@lem4529000) (@lem4528999 _107639 B _53779 t d n)). Qed.
Lemma lem4529002 {_107639 B : Type'} (_53779 : type839 _107639 B) (d : B) (n : nat) : (term414 _107639 B _53779 d n) = (term414 _107639 B _53779 d n).
Proof. exact (fun_ext (fun t : B -> Prop => @lem4529001 _107639 B _53779 t d n)). Qed.
Lemma lem4529003 {B : Type'} : (@all (B -> Prop)) = (@all (B -> Prop)).
Proof. exact (eq_refl (@all (B -> Prop))). Qed.
Lemma lem4529004 {_107639 B : Type'} (_53779 : type839 _107639 B) (d : B) (n : nat) : (term415 _107639 B _53779 d n) = (term415 _107639 B _53779 d n).
Proof. exact (MK_COMB (@lem4529003 B) (@lem4529002 _107639 B _53779 d n)). Qed.
Lemma lem4529005 {_107639 B : Type'} (_53779 : type839 _107639 B) (d : B) : (term416 _107639 B _53779 d) = (term416 _107639 B _53779 d).
Proof. exact (fun_ext (fun n : nat => @lem4529004 _107639 B _53779 d n)). Qed.
Lemma lem4529006 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4529007 {_107639 B : Type'} (_53779 : type839 _107639 B) (d : B) : (term417 _107639 B _53779 d) = (term417 _107639 B _53779 d).
Proof. exact (MK_COMB (@lem4529006) (@lem4529005 _107639 B _53779 d)). Qed.
Lemma lem4529008 {_107639 B : Type'} (_53779 : type839 _107639 B) : (term418 _107639 B _53779) = (term418 _107639 B _53779).
Proof. exact (fun_ext (fun d : B => @lem4529007 _107639 B _53779 d)). Qed.
Lemma lem4529009 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem4529010 {_107639 B : Type'} (_53779 : type839 _107639 B) : (term419 _107639 B _53779) = (term419 _107639 B _53779).
Proof. exact (MK_COMB (@lem4529009 B) (@lem4529008 _107639 B _53779)). Qed.
Lemma lem4529011 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4529012 {_107639 B : Type'} (_53779 : type839 _107639 B) : (term420 _107639 B _53779) = (term420 _107639 B _53779).
Proof. exact (MK_COMB (@lem4529011) (@lem4529010 _107639 B _53779)). Qed.
Lemma lem4529013 {_107639 _107642 A B : Type'} (_53779 : type839 _107639 B) (_53780 : type839 _107642 B) (_53781 : type839 A B) (h1 : _53781 = (term397 A B)) : (term520 _107639 _107642 A B _53779 _53780) = (term576 _107639 _107642 A B _53779 _53780 _53781).
Proof. exact (MK_COMB (@lem4529012 _107639 B _53779) (@lem4528962 _107642 A B _53780 _53781 h1)). Qed.
Lemma lem4529046 {_107642 A : Type'} (_53778 : type656 _107642 A) (t : _107642 -> Prop) (s : A -> Prop) (d : _107642) (n : nat) (m : nat) : (term169 _107642 A _53778 t s d n m) = (term169 _107642 A _53778 t s d n m).
Proof. exact (eq_refl (term169 _107642 A _53778 t s d n m)). Qed.
Lemma lem4529047 {_107642 A : Type'} (_53778 : type656 _107642 A) (t : _107642 -> Prop) (d : _107642) (n : nat) (m : nat) : (term170 _107642 A _53778 t d n m) = (term170 _107642 A _53778 t d n m).
Proof. exact (fun_ext (fun s : A -> Prop => @lem4529046 _107642 A _53778 t s d n m)). Qed.
Lemma lem4529048 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem4529049 {_107642 A : Type'} (_53778 : type656 _107642 A) (t : _107642 -> Prop) (d : _107642) (n : nat) (m : nat) : (term171 _107642 A _53778 t d n m) = (term171 _107642 A _53778 t d n m).
Proof. exact (MK_COMB (@lem4529048 A) (@lem4529047 _107642 A _53778 t d n m)). Qed.
Lemma lem4529050 {_107642 A : Type'} (_53778 : type656 _107642 A) (t : _107642 -> Prop) (d : _107642) (n : nat) : (term172 _107642 A _53778 t d n) = (term172 _107642 A _53778 t d n).
Proof. exact (fun_ext (fun m : nat => @lem4529049 _107642 A _53778 t d n m)). Qed.
Lemma lem4529051 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4529052 {_107642 A : Type'} (_53778 : type656 _107642 A) (t : _107642 -> Prop) (d : _107642) (n : nat) : (term173 _107642 A _53778 t d n) = (term173 _107642 A _53778 t d n).
Proof. exact (MK_COMB (@lem4529051) (@lem4529050 _107642 A _53778 t d n)). Qed.
Lemma lem4529053 {_107642 A : Type'} (_53778 : type656 _107642 A) (d : _107642) (n : nat) : (term174 _107642 A _53778 d n) = (term174 _107642 A _53778 d n).
Proof. exact (fun_ext (fun t : _107642 -> Prop => @lem4529052 _107642 A _53778 t d n)). Qed.
Lemma lem4529054 {_107642 : Type'} : (@all (_107642 -> Prop)) = (@all (_107642 -> Prop)).
Proof. exact (eq_refl (@all (_107642 -> Prop))). Qed.
Lemma lem4529055 {_107642 A : Type'} (_53778 : type656 _107642 A) (d : _107642) (n : nat) : (term175 _107642 A _53778 d n) = (term175 _107642 A _53778 d n).
Proof. exact (MK_COMB (@lem4529054 _107642) (@lem4529053 _107642 A _53778 d n)). Qed.
Lemma lem4529056 {_107642 A : Type'} (_53778 : type656 _107642 A) (d : _107642) : (term176 _107642 A _53778 d) = (term176 _107642 A _53778 d).
Proof. exact (fun_ext (fun n : nat => @lem4529055 _107642 A _53778 d n)). Qed.
Lemma lem4529057 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4529058 {_107642 A : Type'} (_53778 : type656 _107642 A) (d : _107642) : (term177 _107642 A _53778 d) = (term177 _107642 A _53778 d).
Proof. exact (MK_COMB (@lem4529057) (@lem4529056 _107642 A _53778 d)). Qed.
Lemma lem4529059 {_107642 A : Type'} (_53778 : type656 _107642 A) : (term178 _107642 A _53778) = (term178 _107642 A _53778).
Proof. exact (fun_ext (fun d : _107642 => @lem4529058 _107642 A _53778 d)). Qed.
Lemma lem4529060 {_107642 : Type'} : (@all _107642) = (@all _107642).
Proof. exact (eq_refl (@all _107642)). Qed.
Lemma lem4529061 {_107642 A : Type'} (_53778 : type656 _107642 A) : (term179 _107642 A _53778) = (term179 _107642 A _53778).
Proof. exact (MK_COMB (@lem4529060 _107642) (@lem4529059 _107642 A _53778)). Qed.
Lemma lem4529062 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4529063 {_107642 A : Type'} (_53778 : type656 _107642 A) : (term180 _107642 A _53778) = (term180 _107642 A _53778).
Proof. exact (MK_COMB (@lem4529062) (@lem4529061 _107642 A _53778)). Qed.
Lemma lem4529064 {_107639 _107642 A B : Type'} (_53778 : type656 _107642 A) (_53779 : type839 _107639 B) (_53780 : type839 _107642 B) (_53781 : type839 A B) (h1 : _53781 = (term397 A B)) : (term521 _107639 _107642 A B _53778 _53779 _53780) = (term577 _107639 _107642 A B _53778 _53779 _53780 _53781).
Proof. exact (MK_COMB (@lem4529063 _107642 A _53778) (@lem4529013 _107639 _107642 A B _53779 _53780 _53781 h1)). Qed.
Lemma lem4529097 {_107639 A : Type'} (_53777 : type656 _107639 A) (t : _107639 -> Prop) (s : A -> Prop) (d : _107639) (n : nat) (m : nat) : (term169 _107639 A _53777 t s d n m) = (term169 _107639 A _53777 t s d n m).
Proof. exact (eq_refl (term169 _107639 A _53777 t s d n m)). Qed.
Lemma lem4529098 {_107639 A : Type'} (_53777 : type656 _107639 A) (t : _107639 -> Prop) (d : _107639) (n : nat) (m : nat) : (term170 _107639 A _53777 t d n m) = (term170 _107639 A _53777 t d n m).
Proof. exact (fun_ext (fun s : A -> Prop => @lem4529097 _107639 A _53777 t s d n m)). Qed.
Lemma lem4529099 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem4529100 {_107639 A : Type'} (_53777 : type656 _107639 A) (t : _107639 -> Prop) (d : _107639) (n : nat) (m : nat) : (term171 _107639 A _53777 t d n m) = (term171 _107639 A _53777 t d n m).
Proof. exact (MK_COMB (@lem4529099 A) (@lem4529098 _107639 A _53777 t d n m)). Qed.
Lemma lem4529101 {_107639 A : Type'} (_53777 : type656 _107639 A) (t : _107639 -> Prop) (d : _107639) (n : nat) : (term172 _107639 A _53777 t d n) = (term172 _107639 A _53777 t d n).
Proof. exact (fun_ext (fun m : nat => @lem4529100 _107639 A _53777 t d n m)). Qed.
Lemma lem4529102 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4529103 {_107639 A : Type'} (_53777 : type656 _107639 A) (t : _107639 -> Prop) (d : _107639) (n : nat) : (term173 _107639 A _53777 t d n) = (term173 _107639 A _53777 t d n).
Proof. exact (MK_COMB (@lem4529102) (@lem4529101 _107639 A _53777 t d n)). Qed.
Lemma lem4529104 {_107639 A : Type'} (_53777 : type656 _107639 A) (d : _107639) (n : nat) : (term174 _107639 A _53777 d n) = (term174 _107639 A _53777 d n).
Proof. exact (fun_ext (fun t : _107639 -> Prop => @lem4529103 _107639 A _53777 t d n)). Qed.
Lemma lem4529105 {_107639 : Type'} : (@all (_107639 -> Prop)) = (@all (_107639 -> Prop)).
Proof. exact (eq_refl (@all (_107639 -> Prop))). Qed.
Lemma lem4529106 {_107639 A : Type'} (_53777 : type656 _107639 A) (d : _107639) (n : nat) : (term175 _107639 A _53777 d n) = (term175 _107639 A _53777 d n).
Proof. exact (MK_COMB (@lem4529105 _107639) (@lem4529104 _107639 A _53777 d n)). Qed.
Lemma lem4529107 {_107639 A : Type'} (_53777 : type656 _107639 A) (d : _107639) : (term176 _107639 A _53777 d) = (term176 _107639 A _53777 d).
Proof. exact (fun_ext (fun n : nat => @lem4529106 _107639 A _53777 d n)). Qed.
Lemma lem4529108 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4529109 {_107639 A : Type'} (_53777 : type656 _107639 A) (d : _107639) : (term177 _107639 A _53777 d) = (term177 _107639 A _53777 d).
Proof. exact (MK_COMB (@lem4529108) (@lem4529107 _107639 A _53777 d)). Qed.
Lemma lem4529110 {_107639 A : Type'} (_53777 : type656 _107639 A) : (term178 _107639 A _53777) = (term178 _107639 A _53777).
Proof. exact (fun_ext (fun d : _107639 => @lem4529109 _107639 A _53777 d)). Qed.
Lemma lem4529111 {_107639 : Type'} : (@all _107639) = (@all _107639).
Proof. exact (eq_refl (@all _107639)). Qed.
Lemma lem4529112 {_107639 A : Type'} (_53777 : type656 _107639 A) : (term179 _107639 A _53777) = (term179 _107639 A _53777).
Proof. exact (MK_COMB (@lem4529111 _107639) (@lem4529110 _107639 A _53777)). Qed.
Lemma lem4529113 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4529114 {_107639 A : Type'} (_53777 : type656 _107639 A) : (term180 _107639 A _53777) = (term180 _107639 A _53777).
Proof. exact (MK_COMB (@lem4529113) (@lem4529112 _107639 A _53777)). Qed.
Lemma lem4529115 {_107639 _107642 A B : Type'} (_53777 : type656 _107639 A) (_53778 : type656 _107642 A) (_53779 : type839 _107639 B) (_53780 : type839 _107642 B) (_53781 : type839 A B) (h1 : _53781 = (term397 A B)) : (term522 _107639 _107642 A B _53777 _53778 _53779 _53780) = (term578 _107639 _107642 A B _53777 _53778 _53779 _53780 _53781).
Proof. exact (MK_COMB (@lem4529114 _107639 A _53777) (@lem4529064 _107639 _107642 A B _53778 _53779 _53780 _53781 h1)). Qed.
Lemma lem4529148 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (t : _107639 -> Prop) (s : _107642 -> Prop) (d : _107639) (n : nat) (m : nat) : (term169 _107639 _107642 _53776 t s d n m) = (term169 _107639 _107642 _53776 t s d n m).
Proof. exact (eq_refl (term169 _107639 _107642 _53776 t s d n m)). Qed.
Lemma lem4529149 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (t : _107639 -> Prop) (d : _107639) (n : nat) (m : nat) : (term170 _107639 _107642 _53776 t d n m) = (term170 _107639 _107642 _53776 t d n m).
Proof. exact (fun_ext (fun s : _107642 -> Prop => @lem4529148 _107639 _107642 _53776 t s d n m)). Qed.
Lemma lem4529150 {_107642 : Type'} : (@all (_107642 -> Prop)) = (@all (_107642 -> Prop)).
Proof. exact (eq_refl (@all (_107642 -> Prop))). Qed.
Lemma lem4529151 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (t : _107639 -> Prop) (d : _107639) (n : nat) (m : nat) : (term171 _107639 _107642 _53776 t d n m) = (term171 _107639 _107642 _53776 t d n m).
Proof. exact (MK_COMB (@lem4529150 _107642) (@lem4529149 _107639 _107642 _53776 t d n m)). Qed.
Lemma lem4529152 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (t : _107639 -> Prop) (d : _107639) (n : nat) : (term172 _107639 _107642 _53776 t d n) = (term172 _107639 _107642 _53776 t d n).
Proof. exact (fun_ext (fun m : nat => @lem4529151 _107639 _107642 _53776 t d n m)). Qed.
Lemma lem4529153 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4529154 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (t : _107639 -> Prop) (d : _107639) (n : nat) : (term173 _107639 _107642 _53776 t d n) = (term173 _107639 _107642 _53776 t d n).
Proof. exact (MK_COMB (@lem4529153) (@lem4529152 _107639 _107642 _53776 t d n)). Qed.
Lemma lem4529155 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (d : _107639) (n : nat) : (term174 _107639 _107642 _53776 d n) = (term174 _107639 _107642 _53776 d n).
Proof. exact (fun_ext (fun t : _107639 -> Prop => @lem4529154 _107639 _107642 _53776 t d n)). Qed.
Lemma lem4529156 {_107639 : Type'} : (@all (_107639 -> Prop)) = (@all (_107639 -> Prop)).
Proof. exact (eq_refl (@all (_107639 -> Prop))). Qed.
Lemma lem4529157 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (d : _107639) (n : nat) : (term175 _107639 _107642 _53776 d n) = (term175 _107639 _107642 _53776 d n).
Proof. exact (MK_COMB (@lem4529156 _107639) (@lem4529155 _107639 _107642 _53776 d n)). Qed.
Lemma lem4529158 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (d : _107639) : (term176 _107639 _107642 _53776 d) = (term176 _107639 _107642 _53776 d).
Proof. exact (fun_ext (fun n : nat => @lem4529157 _107639 _107642 _53776 d n)). Qed.
Lemma lem4529159 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4529160 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (d : _107639) : (term177 _107639 _107642 _53776 d) = (term177 _107639 _107642 _53776 d).
Proof. exact (MK_COMB (@lem4529159) (@lem4529158 _107639 _107642 _53776 d)). Qed.
Lemma lem4529161 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) : (term178 _107639 _107642 _53776) = (term178 _107639 _107642 _53776).
Proof. exact (fun_ext (fun d : _107639 => @lem4529160 _107639 _107642 _53776 d)). Qed.
Lemma lem4529162 {_107639 : Type'} : (@all _107639) = (@all _107639).
Proof. exact (eq_refl (@all _107639)). Qed.
Lemma lem4529163 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) : (term179 _107639 _107642 _53776) = (term179 _107639 _107642 _53776).
Proof. exact (MK_COMB (@lem4529162 _107639) (@lem4529161 _107639 _107642 _53776)). Qed.
Lemma lem4529164 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4529165 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) : (term180 _107639 _107642 _53776) = (term180 _107639 _107642 _53776).
Proof. exact (MK_COMB (@lem4529164) (@lem4529163 _107639 _107642 _53776)). Qed.
Lemma lem4529166 {_107639 _107642 A B : Type'} (_53776 : type656 _107639 _107642) (_53777 : type656 _107639 A) (_53778 : type656 _107642 A) (_53779 : type839 _107639 B) (_53780 : type839 _107642 B) (_53781 : type839 A B) (h1 : _53781 = (term397 A B)) : (term523 _107639 _107642 A B _53776 _53777 _53778 _53779 _53780) = (term579 _107639 _107642 A B _53776 _53777 _53778 _53779 _53780 _53781).
Proof. exact (MK_COMB (@lem4529165 _107639 _107642 _53776) (@lem4529115 _107639 _107642 A B _53777 _53778 _53779 _53780 _53781 h1)). Qed.
Lemma lem4529187 (s : nat -> Prop) (n : nat) : ((@HAS_SIZE nat s n) = (term182 s n)) = ((@HAS_SIZE nat s n) = (term182 s n)).
Proof. exact (eq_refl ((@HAS_SIZE nat s n) = (term182 s n))). Qed.
Lemma lem4529188 (s : nat -> Prop) : (term183 s) = (term183 s).
Proof. exact (fun_ext (fun n : nat => @lem4529187 s n)). Qed.
Lemma lem4529189 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4529190 (s : nat -> Prop) : (term184 s) = (term184 s).
Proof. exact (MK_COMB (@lem4529189) (@lem4529188 s)). Qed.
Lemma lem4529191 : term185 = term185.
Proof. exact (fun_ext (fun s : nat -> Prop => @lem4529190 s)). Qed.
Lemma lem4529192 : (@all (nat -> Prop)) = (@all (nat -> Prop)).
Proof. exact (eq_refl (@all (nat -> Prop))). Qed.
Lemma lem4529193 : term15 = term15.
Proof. exact (MK_COMB (@lem4529192) (@lem4529191)). Qed.
Lemma lem4529194 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4529195 : term39 = term39.
Proof. exact (MK_COMB (@lem4529194) (@lem4529193)). Qed.
Lemma lem4529196 {_107639 _107642 A B : Type'} (_53776 : type656 _107639 _107642) (_53777 : type656 _107639 A) (_53778 : type656 _107642 A) (_53779 : type839 _107639 B) (_53780 : type839 _107642 B) (_53781 : type839 A B) (h1 : _53781 = (term397 A B)) : (term524 _107639 _107642 A B _53776 _53777 _53778 _53779 _53780) = (term580 _107639 _107642 A B _53776 _53777 _53778 _53779 _53780 _53781).
Proof. exact (MK_COMB (@lem4529195) (@lem4529166 _107639 _107642 A B _53776 _53777 _53778 _53779 _53780 _53781 h1)). Qed.
Lemma lem4529217 {A : Type'} (s : type704 A) (n : nat) : ((@HAS_SIZE (A -> nat) s n) = (term187 A s n)) = ((@HAS_SIZE (A -> nat) s n) = (term187 A s n)).
Proof. exact (eq_refl ((@HAS_SIZE (A -> nat) s n) = (term187 A s n))). Qed.
Lemma lem4529218 {A : Type'} (s : type704 A) : (term188 A s) = (term188 A s).
Proof. exact (fun_ext (fun n : nat => @lem4529217 A s n)). Qed.
Lemma lem4529219 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4529220 {A : Type'} (s : type704 A) : (term189 A s) = (term189 A s).
Proof. exact (MK_COMB (@lem4529219) (@lem4529218 A s)). Qed.
Lemma lem4529221 {A : Type'} : (term190 A) = (term190 A).
Proof. exact (fun_ext (fun s : type704 A => @lem4529220 A s)). Qed.
Lemma lem4529222 {A : Type'} : (@all ((A -> nat) -> Prop)) = (@all ((A -> nat) -> Prop)).
Proof. exact (eq_refl (@all ((A -> nat) -> Prop))). Qed.
Lemma lem4529223 {A : Type'} : (term16 A) = (term16 A).
Proof. exact (MK_COMB (@lem4529222 A) (@lem4529221 A)). Qed.
Lemma lem4529224 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4529225 {A : Type'} : (term42 A) = (term42 A).
Proof. exact (MK_COMB (@lem4529224) (@lem4529223 A)). Qed.
Lemma lem4529226 {_107639 _107642 A B : Type'} (_53776 : type656 _107639 _107642) (_53777 : type656 _107639 A) (_53778 : type656 _107642 A) (_53779 : type839 _107639 B) (_53780 : type839 _107642 B) (_53781 : type839 A B) (h1 : _53781 = (term397 A B)) : (term525 _107639 _107642 A B _53776 _53777 _53778 _53779 _53780) = (term581 _107639 _107642 A B _53776 _53777 _53778 _53779 _53780 _53781).
Proof. exact (MK_COMB (@lem4529225 A) (@lem4529196 _107639 _107642 A B _53776 _53777 _53778 _53779 _53780 _53781 h1)). Qed.
Lemma lem4529247 {A B : Type'} (s : type572 A B) (n : nat) : ((@HAS_SIZE (A -> B) s n) = (term192 A B s n)) = ((@HAS_SIZE (A -> B) s n) = (term192 A B s n)).
Proof. exact (eq_refl ((@HAS_SIZE (A -> B) s n) = (term192 A B s n))). Qed.
Lemma lem4529248 {A B : Type'} (s : type572 A B) : (term193 A B s) = (term193 A B s).
Proof. exact (fun_ext (fun n : nat => @lem4529247 A B s n)). Qed.
Lemma lem4529249 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4529250 {A B : Type'} (s : type572 A B) : (term194 A B s) = (term194 A B s).
Proof. exact (MK_COMB (@lem4529249) (@lem4529248 A B s)). Qed.
Lemma lem4529251 {A B : Type'} : (term195 A B) = (term195 A B).
Proof. exact (fun_ext (fun s : type572 A B => @lem4529250 A B s)). Qed.
Lemma lem4529252 {A B : Type'} : (@all ((A -> B) -> Prop)) = (@all ((A -> B) -> Prop)).
Proof. exact (eq_refl (@all ((A -> B) -> Prop))). Qed.
Lemma lem4529253 {A B : Type'} : (term17 A B) = (term17 A B).
Proof. exact (MK_COMB (@lem4529252 A B) (@lem4529251 A B)). Qed.
Lemma lem4529254 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4529255 {A B : Type'} : (term45 A B) = (term45 A B).
Proof. exact (MK_COMB (@lem4529254) (@lem4529253 A B)). Qed.
Lemma lem4529256 {_107639 _107642 A B : Type'} (_53776 : type656 _107639 _107642) (_53777 : type656 _107639 A) (_53778 : type656 _107642 A) (_53779 : type839 _107639 B) (_53780 : type839 _107642 B) (_53781 : type839 A B) (h1 : _53781 = (term397 A B)) : (term526 _107639 _107642 A B _53776 _53777 _53778 _53779 _53780) = (term582 _107639 _107642 A B _53776 _53777 _53778 _53779 _53780 _53781).
Proof. exact (MK_COMB (@lem4529255 A B) (@lem4529226 _107639 _107642 A B _53776 _53777 _53778 _53779 _53780 _53781 h1)). Qed.
Lemma lem4529277 {_107642 A : Type'} (s : type805 _107642 A) (n : nat) : ((@HAS_SIZE (A -> _107642) s n) = (term197 _107642 A s n)) = ((@HAS_SIZE (A -> _107642) s n) = (term197 _107642 A s n)).
Proof. exact (eq_refl ((@HAS_SIZE (A -> _107642) s n) = (term197 _107642 A s n))). Qed.
Lemma lem4529278 {_107642 A : Type'} (s : type805 _107642 A) : (term198 _107642 A s) = (term198 _107642 A s).
Proof. exact (fun_ext (fun n : nat => @lem4529277 _107642 A s n)). Qed.
Lemma lem4529279 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4529280 {_107642 A : Type'} (s : type805 _107642 A) : (term199 _107642 A s) = (term199 _107642 A s).
Proof. exact (MK_COMB (@lem4529279) (@lem4529278 _107642 A s)). Qed.
Lemma lem4529281 {_107642 A : Type'} : (term200 _107642 A) = (term200 _107642 A).
Proof. exact (fun_ext (fun s : type805 _107642 A => @lem4529280 _107642 A s)). Qed.
Lemma lem4529282 {_107642 A : Type'} : (@all ((A -> _107642) -> Prop)) = (@all ((A -> _107642) -> Prop)).
Proof. exact (eq_refl (@all ((A -> _107642) -> Prop))). Qed.
Lemma lem4529283 {_107642 A : Type'} : (term18 _107642 A) = (term18 _107642 A).
Proof. exact (MK_COMB (@lem4529282 _107642 A) (@lem4529281 _107642 A)). Qed.
Lemma lem4529284 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4529285 {_107642 A : Type'} : (term48 _107642 A) = (term48 _107642 A).
Proof. exact (MK_COMB (@lem4529284) (@lem4529283 _107642 A)). Qed.
Lemma lem4529286 {_107639 _107642 A B : Type'} (_53776 : type656 _107639 _107642) (_53777 : type656 _107639 A) (_53778 : type656 _107642 A) (_53779 : type839 _107639 B) (_53780 : type839 _107642 B) (_53781 : type839 A B) (h1 : _53781 = (term397 A B)) : (term527 _107639 _107642 A B _53776 _53777 _53778 _53779 _53780) = (term583 _107639 _107642 A B _53776 _53777 _53778 _53779 _53780 _53781).
Proof. exact (MK_COMB (@lem4529285 _107642 A) (@lem4529256 _107639 _107642 A B _53776 _53777 _53778 _53779 _53780 _53781 h1)). Qed.
Lemma lem4529307 {_107639 A : Type'} (s : type805 _107639 A) (n : nat) : ((@HAS_SIZE (A -> _107639) s n) = (term197 _107639 A s n)) = ((@HAS_SIZE (A -> _107639) s n) = (term197 _107639 A s n)).
Proof. exact (eq_refl ((@HAS_SIZE (A -> _107639) s n) = (term197 _107639 A s n))). Qed.
Lemma lem4529308 {_107639 A : Type'} (s : type805 _107639 A) : (term198 _107639 A s) = (term198 _107639 A s).
Proof. exact (fun_ext (fun n : nat => @lem4529307 _107639 A s n)). Qed.
Lemma lem4529309 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4529310 {_107639 A : Type'} (s : type805 _107639 A) : (term199 _107639 A s) = (term199 _107639 A s).
Proof. exact (MK_COMB (@lem4529309) (@lem4529308 _107639 A s)). Qed.
Lemma lem4529311 {_107639 A : Type'} : (term200 _107639 A) = (term200 _107639 A).
Proof. exact (fun_ext (fun s : type805 _107639 A => @lem4529310 _107639 A s)). Qed.
Lemma lem4529312 {_107639 A : Type'} : (@all ((A -> _107639) -> Prop)) = (@all ((A -> _107639) -> Prop)).
Proof. exact (eq_refl (@all ((A -> _107639) -> Prop))). Qed.
Lemma lem4529313 {_107639 A : Type'} : (term18 _107639 A) = (term18 _107639 A).
Proof. exact (MK_COMB (@lem4529312 _107639 A) (@lem4529311 _107639 A)). Qed.
Lemma lem4529314 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4529315 {_107639 A : Type'} : (term48 _107639 A) = (term48 _107639 A).
Proof. exact (MK_COMB (@lem4529314) (@lem4529313 _107639 A)). Qed.
Lemma lem4529316 {_107639 _107642 A B : Type'} (_53776 : type656 _107639 _107642) (_53777 : type656 _107639 A) (_53778 : type656 _107642 A) (_53779 : type839 _107639 B) (_53780 : type839 _107642 B) (_53781 : type839 A B) (h1 : _53781 = (term397 A B)) : (term528 _107639 _107642 A B _53776 _53777 _53778 _53779 _53780) = (term584 _107639 _107642 A B _53776 _53777 _53778 _53779 _53780 _53781).
Proof. exact (MK_COMB (@lem4529315 _107639 A) (@lem4529286 _107639 _107642 A B _53776 _53777 _53778 _53779 _53780 _53781 h1)). Qed.
Lemma lem4529337 {_107642 B : Type'} (s : type572 _107642 B) (n : nat) : ((@HAS_SIZE (_107642 -> B) s n) = (term192 _107642 B s n)) = ((@HAS_SIZE (_107642 -> B) s n) = (term192 _107642 B s n)).
Proof. exact (eq_refl ((@HAS_SIZE (_107642 -> B) s n) = (term192 _107642 B s n))). Qed.
Lemma lem4529338 {_107642 B : Type'} (s : type572 _107642 B) : (term193 _107642 B s) = (term193 _107642 B s).
Proof. exact (fun_ext (fun n : nat => @lem4529337 _107642 B s n)). Qed.
Lemma lem4529339 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4529340 {_107642 B : Type'} (s : type572 _107642 B) : (term194 _107642 B s) = (term194 _107642 B s).
Proof. exact (MK_COMB (@lem4529339) (@lem4529338 _107642 B s)). Qed.
Lemma lem4529341 {_107642 B : Type'} : (term195 _107642 B) = (term195 _107642 B).
Proof. exact (fun_ext (fun s : type572 _107642 B => @lem4529340 _107642 B s)). Qed.
Lemma lem4529342 {_107642 B : Type'} : (@all ((_107642 -> B) -> Prop)) = (@all ((_107642 -> B) -> Prop)).
Proof. exact (eq_refl (@all ((_107642 -> B) -> Prop))). Qed.
Lemma lem4529343 {_107642 B : Type'} : (term17 _107642 B) = (term17 _107642 B).
Proof. exact (MK_COMB (@lem4529342 _107642 B) (@lem4529341 _107642 B)). Qed.
Lemma lem4529344 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4529345 {_107642 B : Type'} : (term45 _107642 B) = (term45 _107642 B).
Proof. exact (MK_COMB (@lem4529344) (@lem4529343 _107642 B)). Qed.
Lemma lem4529346 {_107639 _107642 A B : Type'} (_53776 : type656 _107639 _107642) (_53777 : type656 _107639 A) (_53778 : type656 _107642 A) (_53779 : type839 _107639 B) (_53780 : type839 _107642 B) (_53781 : type839 A B) (h1 : _53781 = (term397 A B)) : (term529 _107639 _107642 A B _53776 _53777 _53778 _53779 _53780) = (term585 _107639 _107642 A B _53776 _53777 _53778 _53779 _53780 _53781).
Proof. exact (MK_COMB (@lem4529345 _107642 B) (@lem4529316 _107639 _107642 A B _53776 _53777 _53778 _53779 _53780 _53781 h1)). Qed.
Lemma lem4529367 {_107639 _107642 : Type'} (s : type805 _107639 _107642) (n : nat) : ((@HAS_SIZE (_107642 -> _107639) s n) = (term197 _107639 _107642 s n)) = ((@HAS_SIZE (_107642 -> _107639) s n) = (term197 _107639 _107642 s n)).
Proof. exact (eq_refl ((@HAS_SIZE (_107642 -> _107639) s n) = (term197 _107639 _107642 s n))). Qed.
Lemma lem4529368 {_107639 _107642 : Type'} (s : type805 _107639 _107642) : (term198 _107639 _107642 s) = (term198 _107639 _107642 s).
Proof. exact (fun_ext (fun n : nat => @lem4529367 _107639 _107642 s n)). Qed.
Lemma lem4529369 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4529370 {_107639 _107642 : Type'} (s : type805 _107639 _107642) : (term199 _107639 _107642 s) = (term199 _107639 _107642 s).
Proof. exact (MK_COMB (@lem4529369) (@lem4529368 _107639 _107642 s)). Qed.
Lemma lem4529371 {_107639 _107642 : Type'} : (term200 _107639 _107642) = (term200 _107639 _107642).
Proof. exact (fun_ext (fun s : type805 _107639 _107642 => @lem4529370 _107639 _107642 s)). Qed.
Lemma lem4529372 {_107639 _107642 : Type'} : (@all ((_107642 -> _107639) -> Prop)) = (@all ((_107642 -> _107639) -> Prop)).
Proof. exact (eq_refl (@all ((_107642 -> _107639) -> Prop))). Qed.
Lemma lem4529373 {_107639 _107642 : Type'} : (term18 _107639 _107642) = (term18 _107639 _107642).
Proof. exact (MK_COMB (@lem4529372 _107639 _107642) (@lem4529371 _107639 _107642)). Qed.
Lemma lem4529374 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4529375 {_107639 _107642 : Type'} : (term48 _107639 _107642) = (term48 _107639 _107642).
Proof. exact (MK_COMB (@lem4529374) (@lem4529373 _107639 _107642)). Qed.
Lemma lem4529376 {_107639 _107642 A B : Type'} (_53776 : type656 _107639 _107642) (_53777 : type656 _107639 A) (_53778 : type656 _107642 A) (_53779 : type839 _107639 B) (_53780 : type839 _107642 B) (_53781 : type839 A B) (h1 : _53781 = (term397 A B)) : (term530 _107639 _107642 A B _53776 _53777 _53778 _53779 _53780) = (term586 _107639 _107642 A B _53776 _53777 _53778 _53779 _53780 _53781).
Proof. exact (MK_COMB (@lem4529375 _107639 _107642) (@lem4529346 _107639 _107642 A B _53776 _53777 _53778 _53779 _53780 _53781 h1)). Qed.
Lemma lem4529397 {_107639 B : Type'} (s : type572 _107639 B) (n : nat) : ((@HAS_SIZE (_107639 -> B) s n) = (term192 _107639 B s n)) = ((@HAS_SIZE (_107639 -> B) s n) = (term192 _107639 B s n)).
Proof. exact (eq_refl ((@HAS_SIZE (_107639 -> B) s n) = (term192 _107639 B s n))). Qed.
Lemma lem4529398 {_107639 B : Type'} (s : type572 _107639 B) : (term193 _107639 B s) = (term193 _107639 B s).
Proof. exact (fun_ext (fun n : nat => @lem4529397 _107639 B s n)). Qed.
Lemma lem4529399 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4529400 {_107639 B : Type'} (s : type572 _107639 B) : (term194 _107639 B s) = (term194 _107639 B s).
Proof. exact (MK_COMB (@lem4529399) (@lem4529398 _107639 B s)). Qed.
Lemma lem4529401 {_107639 B : Type'} : (term195 _107639 B) = (term195 _107639 B).
Proof. exact (fun_ext (fun s : type572 _107639 B => @lem4529400 _107639 B s)). Qed.
Lemma lem4529402 {_107639 B : Type'} : (@all ((_107639 -> B) -> Prop)) = (@all ((_107639 -> B) -> Prop)).
Proof. exact (eq_refl (@all ((_107639 -> B) -> Prop))). Qed.
Lemma lem4529403 {_107639 B : Type'} : (term17 _107639 B) = (term17 _107639 B).
Proof. exact (MK_COMB (@lem4529402 _107639 B) (@lem4529401 _107639 B)). Qed.
Lemma lem4529404 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4529405 {_107639 B : Type'} : (term45 _107639 B) = (term45 _107639 B).
Proof. exact (MK_COMB (@lem4529404) (@lem4529403 _107639 B)). Qed.
Lemma lem4529406 {_107639 _107642 A B : Type'} (_53776 : type656 _107639 _107642) (_53777 : type656 _107639 A) (_53778 : type656 _107642 A) (_53779 : type839 _107639 B) (_53780 : type839 _107642 B) (_53781 : type839 A B) (h1 : _53781 = (term397 A B)) : (term531 _107639 _107642 A B _53776 _53777 _53778 _53779 _53780) = (term587 _107639 _107642 A B _53776 _53777 _53778 _53779 _53780 _53781).
Proof. exact (MK_COMB (@lem4529405 _107639 B) (@lem4529376 _107639 _107642 A B _53776 _53777 _53778 _53779 _53780 _53781 h1)). Qed.
Lemma lem4529427 {B : Type'} (s : B -> Prop) (n : nat) : ((@HAS_SIZE B s n) = (term206 B s n)) = ((@HAS_SIZE B s n) = (term206 B s n)).
Proof. exact (eq_refl ((@HAS_SIZE B s n) = (term206 B s n))). Qed.
Lemma lem4529428 {B : Type'} (s : B -> Prop) : (term207 B s) = (term207 B s).
Proof. exact (fun_ext (fun n : nat => @lem4529427 B s n)). Qed.
Lemma lem4529429 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4529430 {B : Type'} (s : B -> Prop) : (term208 B s) = (term208 B s).
Proof. exact (MK_COMB (@lem4529429) (@lem4529428 B s)). Qed.
Lemma lem4529431 {B : Type'} : (term209 B) = (term209 B).
Proof. exact (fun_ext (fun s : B -> Prop => @lem4529430 B s)). Qed.
Lemma lem4529432 {B : Type'} : (@all (B -> Prop)) = (@all (B -> Prop)).
Proof. exact (eq_refl (@all (B -> Prop))). Qed.
Lemma lem4529433 {B : Type'} : (term14 B) = (term14 B).
Proof. exact (MK_COMB (@lem4529432 B) (@lem4529431 B)). Qed.
Lemma lem4529434 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4529435 {B : Type'} : (term59 B) = (term59 B).
Proof. exact (MK_COMB (@lem4529434) (@lem4529433 B)). Qed.
Lemma lem4529436 {_107639 _107642 A B : Type'} (_53776 : type656 _107639 _107642) (_53777 : type656 _107639 A) (_53778 : type656 _107642 A) (_53779 : type839 _107639 B) (_53780 : type839 _107642 B) (_53781 : type839 A B) (h1 : _53781 = (term397 A B)) : (term532 _107639 _107642 A B _53776 _53777 _53778 _53779 _53780) = (term588 _107639 _107642 A B _53776 _53777 _53778 _53779 _53780 _53781).
Proof. exact (MK_COMB (@lem4529435 B) (@lem4529406 _107639 _107642 A B _53776 _53777 _53778 _53779 _53780 _53781 h1)). Qed.
Lemma lem4529457 {A : Type'} (s : A -> Prop) (n : nat) : ((@HAS_SIZE A s n) = (term206 A s n)) = ((@HAS_SIZE A s n) = (term206 A s n)).
Proof. exact (eq_refl ((@HAS_SIZE A s n) = (term206 A s n))). Qed.
Lemma lem4529458 {A : Type'} (s : A -> Prop) : (term207 A s) = (term207 A s).
Proof. exact (fun_ext (fun n : nat => @lem4529457 A s n)). Qed.
Lemma lem4529459 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4529460 {A : Type'} (s : A -> Prop) : (term208 A s) = (term208 A s).
Proof. exact (MK_COMB (@lem4529459) (@lem4529458 A s)). Qed.
Lemma lem4529461 {A : Type'} : (term209 A) = (term209 A).
Proof. exact (fun_ext (fun s : A -> Prop => @lem4529460 A s)). Qed.
Lemma lem4529462 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem4529463 {A : Type'} : (term14 A) = (term14 A).
Proof. exact (MK_COMB (@lem4529462 A) (@lem4529461 A)). Qed.
Lemma lem4529464 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4529465 {A : Type'} : (term59 A) = (term59 A).
Proof. exact (MK_COMB (@lem4529464) (@lem4529463 A)). Qed.
Lemma lem4529466 {_107639 _107642 A B : Type'} (_53776 : type656 _107639 _107642) (_53777 : type656 _107639 A) (_53778 : type656 _107642 A) (_53779 : type839 _107639 B) (_53780 : type839 _107642 B) (_53781 : type839 A B) (h1 : _53781 = (term397 A B)) : (term533 _107639 _107642 A B _53776 _53777 _53778 _53779 _53780) = (term589 _107639 _107642 A B _53776 _53777 _53778 _53779 _53780 _53781).
Proof. exact (MK_COMB (@lem4529465 A) (@lem4529436 _107639 _107642 A B _53776 _53777 _53778 _53779 _53780 _53781 h1)). Qed.
Lemma lem4529487 {_107642 : Type'} (s : _107642 -> Prop) (n : nat) : ((@HAS_SIZE _107642 s n) = (term206 _107642 s n)) = ((@HAS_SIZE _107642 s n) = (term206 _107642 s n)).
Proof. exact (eq_refl ((@HAS_SIZE _107642 s n) = (term206 _107642 s n))). Qed.
Lemma lem4529488 {_107642 : Type'} (s : _107642 -> Prop) : (term207 _107642 s) = (term207 _107642 s).
Proof. exact (fun_ext (fun n : nat => @lem4529487 _107642 s n)). Qed.
Lemma lem4529489 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4529490 {_107642 : Type'} (s : _107642 -> Prop) : (term208 _107642 s) = (term208 _107642 s).
Proof. exact (MK_COMB (@lem4529489) (@lem4529488 _107642 s)). Qed.
Lemma lem4529491 {_107642 : Type'} : (term209 _107642) = (term209 _107642).
Proof. exact (fun_ext (fun s : _107642 -> Prop => @lem4529490 _107642 s)). Qed.
Lemma lem4529492 {_107642 : Type'} : (@all (_107642 -> Prop)) = (@all (_107642 -> Prop)).
Proof. exact (eq_refl (@all (_107642 -> Prop))). Qed.
Lemma lem4529493 {_107642 : Type'} : (term14 _107642) = (term14 _107642).
Proof. exact (MK_COMB (@lem4529492 _107642) (@lem4529491 _107642)). Qed.
Lemma lem4529494 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4529495 {_107642 : Type'} : (term59 _107642) = (term59 _107642).
Proof. exact (MK_COMB (@lem4529494) (@lem4529493 _107642)). Qed.
Lemma lem4529496 {_107639 _107642 A B : Type'} (_53776 : type656 _107639 _107642) (_53777 : type656 _107639 A) (_53778 : type656 _107642 A) (_53779 : type839 _107639 B) (_53780 : type839 _107642 B) (_53781 : type839 A B) (h1 : _53781 = (term397 A B)) : (term534 _107639 _107642 A B _53776 _53777 _53778 _53779 _53780) = (term590 _107639 _107642 A B _53776 _53777 _53778 _53779 _53780 _53781).
Proof. exact (MK_COMB (@lem4529495 _107642) (@lem4529466 _107639 _107642 A B _53776 _53777 _53778 _53779 _53780 _53781 h1)). Qed.
Lemma lem4529517 {_107639 : Type'} (s : _107639 -> Prop) (n : nat) : ((@HAS_SIZE _107639 s n) = (term206 _107639 s n)) = ((@HAS_SIZE _107639 s n) = (term206 _107639 s n)).
Proof. exact (eq_refl ((@HAS_SIZE _107639 s n) = (term206 _107639 s n))). Qed.
Lemma lem4529518 {_107639 : Type'} (s : _107639 -> Prop) : (term207 _107639 s) = (term207 _107639 s).
Proof. exact (fun_ext (fun n : nat => @lem4529517 _107639 s n)). Qed.
Lemma lem4529519 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4529520 {_107639 : Type'} (s : _107639 -> Prop) : (term208 _107639 s) = (term208 _107639 s).
Proof. exact (MK_COMB (@lem4529519) (@lem4529518 _107639 s)). Qed.
Lemma lem4529521 {_107639 : Type'} : (term209 _107639) = (term209 _107639).
Proof. exact (fun_ext (fun s : _107639 -> Prop => @lem4529520 _107639 s)). Qed.
Lemma lem4529522 {_107639 : Type'} : (@all (_107639 -> Prop)) = (@all (_107639 -> Prop)).
Proof. exact (eq_refl (@all (_107639 -> Prop))). Qed.
Lemma lem4529523 {_107639 : Type'} : (term14 _107639) = (term14 _107639).
Proof. exact (MK_COMB (@lem4529522 _107639) (@lem4529521 _107639)). Qed.
Lemma lem4529524 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4529525 {_107639 : Type'} : (term59 _107639) = (term59 _107639).
Proof. exact (MK_COMB (@lem4529524) (@lem4529523 _107639)). Qed.
Lemma lem4529526 {_107639 _107642 A B : Type'} (_53776 : type656 _107639 _107642) (_53777 : type656 _107639 A) (_53778 : type656 _107642 A) (_53779 : type839 _107639 B) (_53780 : type839 _107642 B) (_53781 : type839 A B) (h1 : _53781 = (term397 A B)) : (term535 _107639 _107642 A B _53776 _53777 _53778 _53779 _53780) = (term591 _107639 _107642 A B _53776 _53777 _53778 _53779 _53780 _53781).
Proof. exact (MK_COMB (@lem4529525 _107639) (@lem4529496 _107639 _107642 A B _53776 _53777 _53778 _53779 _53780 _53781 h1)). Qed.
Lemma lem4529547 {_100044 : Type'} (s : _100044 -> Prop) (n : nat) : ((@HAS_SIZE _100044 s n) = (term206 _100044 s n)) = ((@HAS_SIZE _100044 s n) = (term206 _100044 s n)).
Proof. exact (eq_refl ((@HAS_SIZE _100044 s n) = (term206 _100044 s n))). Qed.
Lemma lem4529548 {_100044 : Type'} (s : _100044 -> Prop) : (term207 _100044 s) = (term207 _100044 s).
Proof. exact (fun_ext (fun n : nat => @lem4529547 _100044 s n)). Qed.
Lemma lem4529549 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4529550 {_100044 : Type'} (s : _100044 -> Prop) : (term208 _100044 s) = (term208 _100044 s).
Proof. exact (MK_COMB (@lem4529549) (@lem4529548 _100044 s)). Qed.
Lemma lem4529551 {_100044 : Type'} : (term209 _100044) = (term209 _100044).
Proof. exact (fun_ext (fun s : _100044 -> Prop => @lem4529550 _100044 s)). Qed.
Lemma lem4529552 {_100044 : Type'} : (@all (_100044 -> Prop)) = (@all (_100044 -> Prop)).
Proof. exact (eq_refl (@all (_100044 -> Prop))). Qed.
Lemma lem4529553 {_100044 : Type'} : (term14 _100044) = (term14 _100044).
Proof. exact (MK_COMB (@lem4529552 _100044) (@lem4529551 _100044)). Qed.
Lemma lem4529554 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4529555 {_100044 : Type'} : (term59 _100044) = (term59 _100044).
Proof. exact (MK_COMB (@lem4529554) (@lem4529553 _100044)). Qed.
Lemma lem4529556 {_100044 _107639 _107642 A B : Type'} (_53776 : type656 _107639 _107642) (_53777 : type656 _107639 A) (_53778 : type656 _107642 A) (_53779 : type839 _107639 B) (_53780 : type839 _107642 B) (_53781 : type839 A B) (h1 : _53781 = (term397 A B)) : (term536 _100044 _107639 _107642 A B _53776 _53777 _53778 _53779 _53780) = (term592 _100044 _107639 _107642 A B _53776 _53777 _53778 _53779 _53780 _53781).
Proof. exact (MK_COMB (@lem4529555 _100044) (@lem4529526 _107639 _107642 A B _53776 _53777 _53778 _53779 _53780 _53781 h1)). Qed.
Lemma lem4529591 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (d : _107639) (t : _107639 -> Prop) (s : _107642 -> Prop) : (term222 _107639 _107642 _53776 d t s) = (term222 _107639 _107642 _53776 d t s).
Proof. exact (eq_refl (term222 _107639 _107642 _53776 d t s)). Qed.
Lemma lem4529592 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (d : _107639) (s : _107642 -> Prop) : (term224 _107639 _107642 _53776 d s) = (term224 _107639 _107642 _53776 d s).
Proof. exact (fun_ext (fun t : _107639 -> Prop => @lem4529591 _107639 _107642 _53776 d t s)). Qed.
Lemma lem4529593 {_107639 : Type'} : (@all (_107639 -> Prop)) = (@all (_107639 -> Prop)).
Proof. exact (eq_refl (@all (_107639 -> Prop))). Qed.
Lemma lem4529594 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (d : _107639) (s : _107642 -> Prop) : (term226 _107639 _107642 _53776 d s) = (term226 _107639 _107642 _53776 d s).
Proof. exact (MK_COMB (@lem4529593 _107639) (@lem4529592 _107639 _107642 _53776 d s)). Qed.
Lemma lem4529595 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (d : _107639) : (term228 _107639 _107642 _53776 d) = (term228 _107639 _107642 _53776 d).
Proof. exact (fun_ext (fun s : _107642 -> Prop => @lem4529594 _107639 _107642 _53776 d s)). Qed.
Lemma lem4529596 {_107642 : Type'} : (@all (_107642 -> Prop)) = (@all (_107642 -> Prop)).
Proof. exact (eq_refl (@all (_107642 -> Prop))). Qed.
Lemma lem4529597 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (d : _107639) : (term229 _107639 _107642 _53776 d) = (term229 _107639 _107642 _53776 d).
Proof. exact (MK_COMB (@lem4529596 _107642) (@lem4529595 _107639 _107642 _53776 d)). Qed.
Lemma lem4529598 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem4529599 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (d : _107639) : (term230 _107639 _107642 _53776 d) = (term230 _107639 _107642 _53776 d).
Proof. exact (MK_COMB (@lem4529598) (@lem4529597 _107639 _107642 _53776 d)). Qed.
Lemma lem4529600 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4529601 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (d : _107639) : (term231 _107639 _107642 _53776 d) = (term231 _107639 _107642 _53776 d).
Proof. exact (MK_COMB (@lem4529600) (@lem4529599 _107639 _107642 _53776 d)). Qed.
Lemma lem4529602 {_100044 _107639 _107642 A B : Type'} (d : _107639) (_53776 : type656 _107639 _107642) (_53777 : type656 _107639 A) (_53778 : type656 _107642 A) (_53779 : type839 _107639 B) (_53780 : type839 _107642 B) (_53781 : type839 A B) (h1 : _53781 = (term397 A B)) : (term537 _100044 _107639 _107642 A B d _53776 _53777 _53778 _53779 _53780) = (term593 _100044 _107639 _107642 A B d _53776 _53777 _53778 _53779 _53780 _53781).
Proof. exact (MK_COMB (@lem4529601 _107639 _107642 _53776 d) (@lem4529556 _100044 _107639 _107642 A B _53776 _53777 _53778 _53779 _53780 _53781 h1)). Qed.
Lemma lem4529603 {_100044 _107639 _107642 A B : Type'} (_53776 : type656 _107639 _107642) (_53777 : type656 _107639 A) (_53778 : type656 _107642 A) (_53779 : type839 _107639 B) (_53780 : type839 _107642 B) (_53781 : type839 A B) (h1 : _53781 = (term397 A B)) : (term538 _100044 _107639 _107642 A B _53776 _53777 _53778 _53779 _53780) = (term594 _100044 _107639 _107642 A B _53776 _53777 _53778 _53779 _53780 _53781).
Proof. exact (fun_ext (fun d : _107639 => @lem4529602 _100044 _107639 _107642 A B d _53776 _53777 _53778 _53779 _53780 _53781 h1)). Qed.
Lemma lem4529604 {_107639 : Type'} : (@all _107639) = (@all _107639).
Proof. exact (eq_refl (@all _107639)). Qed.
Lemma lem4529605 {_100044 _107639 _107642 A B : Type'} (_53776 : type656 _107639 _107642) (_53777 : type656 _107639 A) (_53778 : type656 _107642 A) (_53779 : type839 _107639 B) (_53780 : type839 _107642 B) (_53781 : type839 A B) (h1 : _53781 = (term397 A B)) : (term539 _100044 _107639 _107642 A B _53776 _53777 _53778 _53779 _53780) = (term595 _100044 _107639 _107642 A B _53776 _53777 _53778 _53779 _53780 _53781).
Proof. exact (MK_COMB (@lem4529604 _107639) (@lem4529603 _100044 _107639 _107642 A B _53776 _53777 _53778 _53779 _53780 _53781 h1)). Qed.
Lemma lem4529606 {_107639 _107642 : Type'} (f : _107642 -> _107639) : f = f.
Proof. exact (eq_refl f). Qed.
Lemma lem4529623 {_107639 _107642 : Type'} (s : _107642 -> Prop) (f : _107642 -> _107639) (x : _107642) (d : _107639) : (term140 _107639 _107642 s f x d) = (term140 _107639 _107642 s f x d).
Proof. exact (eq_refl (term140 _107639 _107642 s f x d)). Qed.
Lemma lem4529624 {_107639 _107642 : Type'} (s : _107642 -> Prop) (f : _107642 -> _107639) (d : _107639) : (term141 _107639 _107642 s f d) = (term141 _107639 _107642 s f d).
Proof. exact (fun_ext (fun x : _107642 => @lem4529623 _107639 _107642 s f x d)). Qed.
Lemma lem4529625 {_107642 : Type'} : (@all _107642) = (@all _107642).
Proof. exact (eq_refl (@all _107642)). Qed.
Lemma lem4529626 {_107639 _107642 : Type'} (s : _107642 -> Prop) (f : _107642 -> _107639) (d : _107639) : (term142 _107639 _107642 s f d) = (term142 _107639 _107642 s f d).
Proof. exact (MK_COMB (@lem4529625 _107642) (@lem4529624 _107639 _107642 s f d)). Qed.
Lemma lem4529641 {_107639 _107642 : Type'} (s : _107642 -> Prop) (f : _107642 -> _107639) (x : _107642) (t : _107639 -> Prop) : (term143 _107639 _107642 s f x t) = (term143 _107639 _107642 s f x t).
Proof. exact (eq_refl (term143 _107639 _107642 s f x t)). Qed.
Lemma lem4529642 {_107639 _107642 : Type'} (s : _107642 -> Prop) (f : _107642 -> _107639) (t : _107639 -> Prop) : (term144 _107639 _107642 s f t) = (term144 _107639 _107642 s f t).
Proof. exact (fun_ext (fun x : _107642 => @lem4529641 _107639 _107642 s f x t)). Qed.
Lemma lem4529643 {_107642 : Type'} : (@all _107642) = (@all _107642).
Proof. exact (eq_refl (@all _107642)). Qed.
Lemma lem4529644 {_107639 _107642 : Type'} (s : _107642 -> Prop) (f : _107642 -> _107639) (t : _107639 -> Prop) : (term145 _107639 _107642 s f t) = (term145 _107639 _107642 s f t).
Proof. exact (MK_COMB (@lem4529643 _107642) (@lem4529642 _107639 _107642 s f t)). Qed.
Lemma lem4529645 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4529646 {_107639 _107642 : Type'} (s : _107642 -> Prop) (f : _107642 -> _107639) (t : _107639 -> Prop) : (term146 _107639 _107642 s f t) = (term146 _107639 _107642 s f t).
Proof. exact (MK_COMB (@lem4529645) (@lem4529644 _107639 _107642 s f t)). Qed.
Lemma lem4529647 {_107639 _107642 : Type'} (t : _107639 -> Prop) (s : _107642 -> Prop) (f : _107642 -> _107639) (d : _107639) : (term147 _107639 _107642 t s f d) = (term147 _107639 _107642 t s f d).
Proof. exact (MK_COMB (@lem4529646 _107639 _107642 s f t) (@lem4529626 _107639 _107642 s f d)). Qed.
Lemma lem4529650 {_107639 _107642 : Type'} (GEN_PVAR_149 : _107642 -> _107639) : (@SETSPEC (_107642 -> _107639) GEN_PVAR_149) = (@SETSPEC (_107642 -> _107639) GEN_PVAR_149).
Proof. exact (eq_refl (@SETSPEC (_107642 -> _107639) GEN_PVAR_149)). Qed.
Lemma lem4529651 {_107639 _107642 : Type'} (GEN_PVAR_149 : _107642 -> _107639) (t : _107639 -> Prop) (s : _107642 -> Prop) (f : _107642 -> _107639) (d : _107639) : (term148 _107639 _107642 GEN_PVAR_149 t s f d) = (term148 _107639 _107642 GEN_PVAR_149 t s f d).
Proof. exact (MK_COMB (@lem4529650 _107639 _107642 GEN_PVAR_149) (@lem4529647 _107639 _107642 t s f d)). Qed.
Lemma lem4529652 {_107639 _107642 : Type'} (GEN_PVAR_149 : _107642 -> _107639) (t : _107639 -> Prop) (s : _107642 -> Prop) (d : _107639) (f : _107642 -> _107639) : (term149 _107639 _107642 GEN_PVAR_149 t s d f) = (term149 _107639 _107642 GEN_PVAR_149 t s d f).
Proof. exact (MK_COMB (@lem4529651 _107639 _107642 GEN_PVAR_149 t s f d) (@lem4529606 _107639 _107642 f)). Qed.
Lemma lem4529653 {_107639 _107642 : Type'} (GEN_PVAR_149 : _107642 -> _107639) (t : _107639 -> Prop) (s : _107642 -> Prop) (d : _107639) : (term150 _107639 _107642 GEN_PVAR_149 t s d) = (term150 _107639 _107642 GEN_PVAR_149 t s d).
Proof. exact (fun_ext (fun f : _107642 -> _107639 => @lem4529652 _107639 _107642 GEN_PVAR_149 t s d f)). Qed.
Lemma lem4529654 {_107639 _107642 : Type'} : (@ex (_107642 -> _107639)) = (@ex (_107642 -> _107639)).
Proof. exact (eq_refl (@ex (_107642 -> _107639))). Qed.
Lemma lem4529655 {_107639 _107642 : Type'} (GEN_PVAR_149 : _107642 -> _107639) (t : _107639 -> Prop) (s : _107642 -> Prop) (d : _107639) : (term151 _107639 _107642 GEN_PVAR_149 t s d) = (term151 _107639 _107642 GEN_PVAR_149 t s d).
Proof. exact (MK_COMB (@lem4529654 _107639 _107642) (@lem4529653 _107639 _107642 GEN_PVAR_149 t s d)). Qed.
Lemma lem4529666 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (t : _107639 -> Prop) (s : _107642 -> Prop) (d : _107639) (GEN_PVAR_149 : _107642 -> _107639) : (term293 _107639 _107642 _53776 t s d GEN_PVAR_149) = (term293 _107639 _107642 _53776 t s d GEN_PVAR_149).
Proof. exact (eq_refl (term293 _107639 _107642 _53776 t s d GEN_PVAR_149)). Qed.
Lemma lem4529667 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (GEN_PVAR_149 : _107642 -> _107639) (t : _107639 -> Prop) (s : _107642 -> Prop) (d : _107639) : ((_53776 t s d GEN_PVAR_149) = (term151 _107639 _107642 GEN_PVAR_149 t s d)) = ((_53776 t s d GEN_PVAR_149) = (term151 _107639 _107642 GEN_PVAR_149 t s d)).
Proof. exact (MK_COMB (@lem4529666 _107639 _107642 _53776 t s d GEN_PVAR_149) (@lem4529655 _107639 _107642 GEN_PVAR_149 t s d)). Qed.
Lemma lem4529668 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (t : _107639 -> Prop) (s : _107642 -> Prop) (d : _107639) : (term295 _107639 _107642 _53776 t s d) = (term295 _107639 _107642 _53776 t s d).
Proof. exact (fun_ext (fun GEN_PVAR_149 : _107642 -> _107639 => @lem4529667 _107639 _107642 _53776 GEN_PVAR_149 t s d)). Qed.
Lemma lem4529669 {_107639 _107642 : Type'} : (@all (_107642 -> _107639)) = (@all (_107642 -> _107639)).
Proof. exact (eq_refl (@all (_107642 -> _107639))). Qed.
Lemma lem4529670 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (t : _107639 -> Prop) (s : _107642 -> Prop) (d : _107639) : (term296 _107639 _107642 _53776 t s d) = (term296 _107639 _107642 _53776 t s d).
Proof. exact (MK_COMB (@lem4529669 _107639 _107642) (@lem4529668 _107639 _107642 _53776 t s d)). Qed.
Lemma lem4529671 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (t : _107639 -> Prop) (s : _107642 -> Prop) : (term297 _107639 _107642 _53776 t s) = (term297 _107639 _107642 _53776 t s).
Proof. exact (fun_ext (fun d : _107639 => @lem4529670 _107639 _107642 _53776 t s d)). Qed.
Lemma lem4529672 {_107639 : Type'} : (@all _107639) = (@all _107639).
Proof. exact (eq_refl (@all _107639)). Qed.
Lemma lem4529673 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (t : _107639 -> Prop) (s : _107642 -> Prop) : (term298 _107639 _107642 _53776 t s) = (term298 _107639 _107642 _53776 t s).
Proof. exact (MK_COMB (@lem4529672 _107639) (@lem4529671 _107639 _107642 _53776 t s)). Qed.
Lemma lem4529674 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (t : _107639 -> Prop) : (term299 _107639 _107642 _53776 t) = (term299 _107639 _107642 _53776 t).
Proof. exact (fun_ext (fun s : _107642 -> Prop => @lem4529673 _107639 _107642 _53776 t s)). Qed.
Lemma lem4529675 {_107642 : Type'} : (@all (_107642 -> Prop)) = (@all (_107642 -> Prop)).
Proof. exact (eq_refl (@all (_107642 -> Prop))). Qed.
Lemma lem4529676 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (t : _107639 -> Prop) : (term300 _107639 _107642 _53776 t) = (term300 _107639 _107642 _53776 t).
Proof. exact (MK_COMB (@lem4529675 _107642) (@lem4529674 _107639 _107642 _53776 t)). Qed.
Lemma lem4529677 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) : (term301 _107639 _107642 _53776) = (term301 _107639 _107642 _53776).
Proof. exact (fun_ext (fun t : _107639 -> Prop => @lem4529676 _107639 _107642 _53776 t)). Qed.
Lemma lem4529678 {_107639 : Type'} : (@all (_107639 -> Prop)) = (@all (_107639 -> Prop)).
Proof. exact (eq_refl (@all (_107639 -> Prop))). Qed.
Lemma lem4529679 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) : (term302 _107639 _107642 _53776) = (term302 _107639 _107642 _53776).
Proof. exact (MK_COMB (@lem4529678 _107639) (@lem4529677 _107639 _107642 _53776)). Qed.
Lemma lem4529680 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4529681 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) : (term303 _107639 _107642 _53776) = (term303 _107639 _107642 _53776).
Proof. exact (MK_COMB (@lem4529680) (@lem4529679 _107639 _107642 _53776)). Qed.
Lemma lem4529682 {_100044 _107639 _107642 A B : Type'} (_53776 : type656 _107639 _107642) (_53777 : type656 _107639 A) (_53778 : type656 _107642 A) (_53779 : type839 _107639 B) (_53780 : type839 _107642 B) (_53781 : type839 A B) (h1 : _53781 = (term397 A B)) : (term540 _100044 _107639 _107642 A B _53776 _53777 _53778 _53779 _53780) = (term596 _100044 _107639 _107642 A B _53776 _53777 _53778 _53779 _53780 _53781).
Proof. exact (MK_COMB (@lem4529681 _107639 _107642 _53776) (@lem4529605 _100044 _107639 _107642 A B _53776 _53777 _53778 _53779 _53780 _53781 h1)). Qed.
Lemma lem4529683 {_100044 _107639 _107642 A B : Type'} (_53777 : type656 _107639 A) (_53778 : type656 _107642 A) (_53779 : type839 _107639 B) (_53780 : type839 _107642 B) (_53781 : type839 A B) (h1 : _53781 = (term397 A B)) : (term541 _100044 _107639 _107642 A B _53777 _53778 _53779 _53780) = (term597 _100044 _107639 _107642 A B _53777 _53778 _53779 _53780 _53781).
Proof. exact (fun_ext (fun _53776 : type656 _107639 _107642 => @lem4529682 _100044 _107639 _107642 A B _53776 _53777 _53778 _53779 _53780 _53781 h1)). Qed.
Lemma lem4529684 {_107639 _107642 : Type'} : (@all ((_107639 -> Prop) -> (_107642 -> Prop) -> _107639 -> (_107642 -> _107639) -> Prop)) = (@all ((_107639 -> Prop) -> (_107642 -> Prop) -> _107639 -> (_107642 -> _107639) -> Prop)).
Proof. exact (eq_refl (@all ((_107639 -> Prop) -> (_107642 -> Prop) -> _107639 -> (_107642 -> _107639) -> Prop))). Qed.
Lemma lem4529685 {_100044 _107639 _107642 A B : Type'} (_53777 : type656 _107639 A) (_53778 : type656 _107642 A) (_53779 : type839 _107639 B) (_53780 : type839 _107642 B) (_53781 : type839 A B) (h1 : _53781 = (term397 A B)) : (term542 _100044 _107639 _107642 A B _53777 _53778 _53779 _53780) = (term598 _100044 _107639 _107642 A B _53777 _53778 _53779 _53780 _53781).
Proof. exact (MK_COMB (@lem4529684 _107639 _107642) (@lem4529683 _100044 _107639 _107642 A B _53777 _53778 _53779 _53780 _53781 h1)). Qed.
Lemma lem4529686 {_107639 A : Type'} (f : A -> _107639) : f = f.
Proof. exact (eq_refl f). Qed.
Lemma lem4529703 {_107639 A : Type'} (s : A -> Prop) (f : A -> _107639) (x : A) (d : _107639) : (term140 _107639 A s f x d) = (term140 _107639 A s f x d).
Proof. exact (eq_refl (term140 _107639 A s f x d)). Qed.
Lemma lem4529704 {_107639 A : Type'} (s : A -> Prop) (f : A -> _107639) (d : _107639) : (term141 _107639 A s f d) = (term141 _107639 A s f d).
Proof. exact (fun_ext (fun x : A => @lem4529703 _107639 A s f x d)). Qed.
Lemma lem4529705 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem4529706 {_107639 A : Type'} (s : A -> Prop) (f : A -> _107639) (d : _107639) : (term142 _107639 A s f d) = (term142 _107639 A s f d).
Proof. exact (MK_COMB (@lem4529705 A) (@lem4529704 _107639 A s f d)). Qed.
Lemma lem4529721 {_107639 A : Type'} (s : A -> Prop) (f : A -> _107639) (x : A) (t : _107639 -> Prop) : (term143 _107639 A s f x t) = (term143 _107639 A s f x t).
Proof. exact (eq_refl (term143 _107639 A s f x t)). Qed.
Lemma lem4529722 {_107639 A : Type'} (s : A -> Prop) (f : A -> _107639) (t : _107639 -> Prop) : (term144 _107639 A s f t) = (term144 _107639 A s f t).
Proof. exact (fun_ext (fun x : A => @lem4529721 _107639 A s f x t)). Qed.
Lemma lem4529723 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem4529724 {_107639 A : Type'} (s : A -> Prop) (f : A -> _107639) (t : _107639 -> Prop) : (term145 _107639 A s f t) = (term145 _107639 A s f t).
Proof. exact (MK_COMB (@lem4529723 A) (@lem4529722 _107639 A s f t)). Qed.
Lemma lem4529725 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4529726 {_107639 A : Type'} (s : A -> Prop) (f : A -> _107639) (t : _107639 -> Prop) : (term146 _107639 A s f t) = (term146 _107639 A s f t).
Proof. exact (MK_COMB (@lem4529725) (@lem4529724 _107639 A s f t)). Qed.
Lemma lem4529727 {_107639 A : Type'} (t : _107639 -> Prop) (s : A -> Prop) (f : A -> _107639) (d : _107639) : (term147 _107639 A t s f d) = (term147 _107639 A t s f d).
Proof. exact (MK_COMB (@lem4529726 _107639 A s f t) (@lem4529706 _107639 A s f d)). Qed.
Lemma lem4529730 {_107639 A : Type'} (GEN_PVAR_148 : A -> _107639) : (@SETSPEC (A -> _107639) GEN_PVAR_148) = (@SETSPEC (A -> _107639) GEN_PVAR_148).
Proof. exact (eq_refl (@SETSPEC (A -> _107639) GEN_PVAR_148)). Qed.
Lemma lem4529731 {_107639 A : Type'} (GEN_PVAR_148 : A -> _107639) (t : _107639 -> Prop) (s : A -> Prop) (f : A -> _107639) (d : _107639) : (term148 _107639 A GEN_PVAR_148 t s f d) = (term148 _107639 A GEN_PVAR_148 t s f d).
Proof. exact (MK_COMB (@lem4529730 _107639 A GEN_PVAR_148) (@lem4529727 _107639 A t s f d)). Qed.
Lemma lem4529732 {_107639 A : Type'} (GEN_PVAR_148 : A -> _107639) (t : _107639 -> Prop) (s : A -> Prop) (d : _107639) (f : A -> _107639) : (term149 _107639 A GEN_PVAR_148 t s d f) = (term149 _107639 A GEN_PVAR_148 t s d f).
Proof. exact (MK_COMB (@lem4529731 _107639 A GEN_PVAR_148 t s f d) (@lem4529686 _107639 A f)). Qed.
Lemma lem4529733 {_107639 A : Type'} (GEN_PVAR_148 : A -> _107639) (t : _107639 -> Prop) (s : A -> Prop) (d : _107639) : (term150 _107639 A GEN_PVAR_148 t s d) = (term150 _107639 A GEN_PVAR_148 t s d).
Proof. exact (fun_ext (fun f : A -> _107639 => @lem4529732 _107639 A GEN_PVAR_148 t s d f)). Qed.
Lemma lem4529734 {_107639 A : Type'} : (@ex (A -> _107639)) = (@ex (A -> _107639)).
Proof. exact (eq_refl (@ex (A -> _107639))). Qed.
Lemma lem4529735 {_107639 A : Type'} (GEN_PVAR_148 : A -> _107639) (t : _107639 -> Prop) (s : A -> Prop) (d : _107639) : (term151 _107639 A GEN_PVAR_148 t s d) = (term151 _107639 A GEN_PVAR_148 t s d).
Proof. exact (MK_COMB (@lem4529734 _107639 A) (@lem4529733 _107639 A GEN_PVAR_148 t s d)). Qed.
Lemma lem4529746 {_107639 A : Type'} (_53777 : type656 _107639 A) (t : _107639 -> Prop) (s : A -> Prop) (d : _107639) (GEN_PVAR_148 : A -> _107639) : (term293 _107639 A _53777 t s d GEN_PVAR_148) = (term293 _107639 A _53777 t s d GEN_PVAR_148).
Proof. exact (eq_refl (term293 _107639 A _53777 t s d GEN_PVAR_148)). Qed.
Lemma lem4529747 {_107639 A : Type'} (_53777 : type656 _107639 A) (GEN_PVAR_148 : A -> _107639) (t : _107639 -> Prop) (s : A -> Prop) (d : _107639) : ((_53777 t s d GEN_PVAR_148) = (term151 _107639 A GEN_PVAR_148 t s d)) = ((_53777 t s d GEN_PVAR_148) = (term151 _107639 A GEN_PVAR_148 t s d)).
Proof. exact (MK_COMB (@lem4529746 _107639 A _53777 t s d GEN_PVAR_148) (@lem4529735 _107639 A GEN_PVAR_148 t s d)). Qed.
Lemma lem4529748 {_107639 A : Type'} (_53777 : type656 _107639 A) (t : _107639 -> Prop) (s : A -> Prop) (d : _107639) : (term295 _107639 A _53777 t s d) = (term295 _107639 A _53777 t s d).
Proof. exact (fun_ext (fun GEN_PVAR_148 : A -> _107639 => @lem4529747 _107639 A _53777 GEN_PVAR_148 t s d)). Qed.
Lemma lem4529749 {_107639 A : Type'} : (@all (A -> _107639)) = (@all (A -> _107639)).
Proof. exact (eq_refl (@all (A -> _107639))). Qed.
Lemma lem4529750 {_107639 A : Type'} (_53777 : type656 _107639 A) (t : _107639 -> Prop) (s : A -> Prop) (d : _107639) : (term296 _107639 A _53777 t s d) = (term296 _107639 A _53777 t s d).
Proof. exact (MK_COMB (@lem4529749 _107639 A) (@lem4529748 _107639 A _53777 t s d)). Qed.
Lemma lem4529751 {_107639 A : Type'} (_53777 : type656 _107639 A) (t : _107639 -> Prop) (s : A -> Prop) : (term297 _107639 A _53777 t s) = (term297 _107639 A _53777 t s).
Proof. exact (fun_ext (fun d : _107639 => @lem4529750 _107639 A _53777 t s d)). Qed.
Lemma lem4529752 {_107639 : Type'} : (@all _107639) = (@all _107639).
Proof. exact (eq_refl (@all _107639)). Qed.
Lemma lem4529753 {_107639 A : Type'} (_53777 : type656 _107639 A) (t : _107639 -> Prop) (s : A -> Prop) : (term298 _107639 A _53777 t s) = (term298 _107639 A _53777 t s).
Proof. exact (MK_COMB (@lem4529752 _107639) (@lem4529751 _107639 A _53777 t s)). Qed.
Lemma lem4529754 {_107639 A : Type'} (_53777 : type656 _107639 A) (t : _107639 -> Prop) : (term299 _107639 A _53777 t) = (term299 _107639 A _53777 t).
Proof. exact (fun_ext (fun s : A -> Prop => @lem4529753 _107639 A _53777 t s)). Qed.
Lemma lem4529755 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem4529756 {_107639 A : Type'} (_53777 : type656 _107639 A) (t : _107639 -> Prop) : (term300 _107639 A _53777 t) = (term300 _107639 A _53777 t).
Proof. exact (MK_COMB (@lem4529755 A) (@lem4529754 _107639 A _53777 t)). Qed.
Lemma lem4529757 {_107639 A : Type'} (_53777 : type656 _107639 A) : (term301 _107639 A _53777) = (term301 _107639 A _53777).
Proof. exact (fun_ext (fun t : _107639 -> Prop => @lem4529756 _107639 A _53777 t)). Qed.
Lemma lem4529758 {_107639 : Type'} : (@all (_107639 -> Prop)) = (@all (_107639 -> Prop)).
Proof. exact (eq_refl (@all (_107639 -> Prop))). Qed.
Lemma lem4529759 {_107639 A : Type'} (_53777 : type656 _107639 A) : (term302 _107639 A _53777) = (term302 _107639 A _53777).
Proof. exact (MK_COMB (@lem4529758 _107639) (@lem4529757 _107639 A _53777)). Qed.
Lemma lem4529760 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4529761 {_107639 A : Type'} (_53777 : type656 _107639 A) : (term303 _107639 A _53777) = (term303 _107639 A _53777).
Proof. exact (MK_COMB (@lem4529760) (@lem4529759 _107639 A _53777)). Qed.
Lemma lem4529762 {_100044 _107639 _107642 A B : Type'} (_53777 : type656 _107639 A) (_53778 : type656 _107642 A) (_53779 : type839 _107639 B) (_53780 : type839 _107642 B) (_53781 : type839 A B) (h1 : _53781 = (term397 A B)) : (term543 _100044 _107639 _107642 A B _53777 _53778 _53779 _53780) = (term599 _100044 _107639 _107642 A B _53777 _53778 _53779 _53780 _53781).
Proof. exact (MK_COMB (@lem4529761 _107639 A _53777) (@lem4529685 _100044 _107639 _107642 A B _53777 _53778 _53779 _53780 _53781 h1)). Qed.
Lemma lem4529763 {_100044 _107639 _107642 A B : Type'} (_53778 : type656 _107642 A) (_53779 : type839 _107639 B) (_53780 : type839 _107642 B) (_53781 : type839 A B) (h1 : _53781 = (term397 A B)) : (term544 _100044 _107639 _107642 A B _53778 _53779 _53780) = (term600 _100044 _107639 _107642 A B _53778 _53779 _53780 _53781).
Proof. exact (fun_ext (fun _53777 : type656 _107639 A => @lem4529762 _100044 _107639 _107642 A B _53777 _53778 _53779 _53780 _53781 h1)). Qed.
Lemma lem4529764 {_107639 A : Type'} : (@all ((_107639 -> Prop) -> (A -> Prop) -> _107639 -> (A -> _107639) -> Prop)) = (@all ((_107639 -> Prop) -> (A -> Prop) -> _107639 -> (A -> _107639) -> Prop)).
Proof. exact (eq_refl (@all ((_107639 -> Prop) -> (A -> Prop) -> _107639 -> (A -> _107639) -> Prop))). Qed.
Lemma lem4529765 {_100044 _107639 _107642 A B : Type'} (_53778 : type656 _107642 A) (_53779 : type839 _107639 B) (_53780 : type839 _107642 B) (_53781 : type839 A B) (h1 : _53781 = (term397 A B)) : (term545 _100044 _107639 _107642 A B _53778 _53779 _53780) = (term601 _100044 _107639 _107642 A B _53778 _53779 _53780 _53781).
Proof. exact (MK_COMB (@lem4529764 _107639 A) (@lem4529763 _100044 _107639 _107642 A B _53778 _53779 _53780 _53781 h1)). Qed.
Lemma lem4529766 {_107642 A : Type'} (f : A -> _107642) : f = f.
Proof. exact (eq_refl f). Qed.
Lemma lem4529783 {_107642 A : Type'} (s : A -> Prop) (f : A -> _107642) (x : A) (d : _107642) : (term140 _107642 A s f x d) = (term140 _107642 A s f x d).
Proof. exact (eq_refl (term140 _107642 A s f x d)). Qed.
Lemma lem4529784 {_107642 A : Type'} (s : A -> Prop) (f : A -> _107642) (d : _107642) : (term141 _107642 A s f d) = (term141 _107642 A s f d).
Proof. exact (fun_ext (fun x : A => @lem4529783 _107642 A s f x d)). Qed.
Lemma lem4529785 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem4529786 {_107642 A : Type'} (s : A -> Prop) (f : A -> _107642) (d : _107642) : (term142 _107642 A s f d) = (term142 _107642 A s f d).
Proof. exact (MK_COMB (@lem4529785 A) (@lem4529784 _107642 A s f d)). Qed.
Lemma lem4529801 {_107642 A : Type'} (s : A -> Prop) (f : A -> _107642) (x : A) (t : _107642 -> Prop) : (term143 _107642 A s f x t) = (term143 _107642 A s f x t).
Proof. exact (eq_refl (term143 _107642 A s f x t)). Qed.
Lemma lem4529802 {_107642 A : Type'} (s : A -> Prop) (f : A -> _107642) (t : _107642 -> Prop) : (term144 _107642 A s f t) = (term144 _107642 A s f t).
Proof. exact (fun_ext (fun x : A => @lem4529801 _107642 A s f x t)). Qed.
Lemma lem4529803 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem4529804 {_107642 A : Type'} (s : A -> Prop) (f : A -> _107642) (t : _107642 -> Prop) : (term145 _107642 A s f t) = (term145 _107642 A s f t).
Proof. exact (MK_COMB (@lem4529803 A) (@lem4529802 _107642 A s f t)). Qed.
Lemma lem4529805 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4529806 {_107642 A : Type'} (s : A -> Prop) (f : A -> _107642) (t : _107642 -> Prop) : (term146 _107642 A s f t) = (term146 _107642 A s f t).
Proof. exact (MK_COMB (@lem4529805) (@lem4529804 _107642 A s f t)). Qed.
Lemma lem4529807 {_107642 A : Type'} (t : _107642 -> Prop) (s : A -> Prop) (f : A -> _107642) (d : _107642) : (term147 _107642 A t s f d) = (term147 _107642 A t s f d).
Proof. exact (MK_COMB (@lem4529806 _107642 A s f t) (@lem4529786 _107642 A s f d)). Qed.
Lemma lem4529810 {_107642 A : Type'} (GEN_PVAR_148 : A -> _107642) : (@SETSPEC (A -> _107642) GEN_PVAR_148) = (@SETSPEC (A -> _107642) GEN_PVAR_148).
Proof. exact (eq_refl (@SETSPEC (A -> _107642) GEN_PVAR_148)). Qed.
Lemma lem4529811 {_107642 A : Type'} (GEN_PVAR_148 : A -> _107642) (t : _107642 -> Prop) (s : A -> Prop) (f : A -> _107642) (d : _107642) : (term148 _107642 A GEN_PVAR_148 t s f d) = (term148 _107642 A GEN_PVAR_148 t s f d).
Proof. exact (MK_COMB (@lem4529810 _107642 A GEN_PVAR_148) (@lem4529807 _107642 A t s f d)). Qed.
Lemma lem4529812 {_107642 A : Type'} (GEN_PVAR_148 : A -> _107642) (t : _107642 -> Prop) (s : A -> Prop) (d : _107642) (f : A -> _107642) : (term149 _107642 A GEN_PVAR_148 t s d f) = (term149 _107642 A GEN_PVAR_148 t s d f).
Proof. exact (MK_COMB (@lem4529811 _107642 A GEN_PVAR_148 t s f d) (@lem4529766 _107642 A f)). Qed.
Lemma lem4529813 {_107642 A : Type'} (GEN_PVAR_148 : A -> _107642) (t : _107642 -> Prop) (s : A -> Prop) (d : _107642) : (term150 _107642 A GEN_PVAR_148 t s d) = (term150 _107642 A GEN_PVAR_148 t s d).
Proof. exact (fun_ext (fun f : A -> _107642 => @lem4529812 _107642 A GEN_PVAR_148 t s d f)). Qed.
Lemma lem4529814 {_107642 A : Type'} : (@ex (A -> _107642)) = (@ex (A -> _107642)).
Proof. exact (eq_refl (@ex (A -> _107642))). Qed.
Lemma lem4529815 {_107642 A : Type'} (GEN_PVAR_148 : A -> _107642) (t : _107642 -> Prop) (s : A -> Prop) (d : _107642) : (term151 _107642 A GEN_PVAR_148 t s d) = (term151 _107642 A GEN_PVAR_148 t s d).
Proof. exact (MK_COMB (@lem4529814 _107642 A) (@lem4529813 _107642 A GEN_PVAR_148 t s d)). Qed.
Lemma lem4529826 {_107642 A : Type'} (_53778 : type656 _107642 A) (t : _107642 -> Prop) (s : A -> Prop) (d : _107642) (GEN_PVAR_148 : A -> _107642) : (term293 _107642 A _53778 t s d GEN_PVAR_148) = (term293 _107642 A _53778 t s d GEN_PVAR_148).
Proof. exact (eq_refl (term293 _107642 A _53778 t s d GEN_PVAR_148)). Qed.
Lemma lem4529827 {_107642 A : Type'} (_53778 : type656 _107642 A) (GEN_PVAR_148 : A -> _107642) (t : _107642 -> Prop) (s : A -> Prop) (d : _107642) : ((_53778 t s d GEN_PVAR_148) = (term151 _107642 A GEN_PVAR_148 t s d)) = ((_53778 t s d GEN_PVAR_148) = (term151 _107642 A GEN_PVAR_148 t s d)).
Proof. exact (MK_COMB (@lem4529826 _107642 A _53778 t s d GEN_PVAR_148) (@lem4529815 _107642 A GEN_PVAR_148 t s d)). Qed.
Lemma lem4529828 {_107642 A : Type'} (_53778 : type656 _107642 A) (t : _107642 -> Prop) (s : A -> Prop) (d : _107642) : (term295 _107642 A _53778 t s d) = (term295 _107642 A _53778 t s d).
Proof. exact (fun_ext (fun GEN_PVAR_148 : A -> _107642 => @lem4529827 _107642 A _53778 GEN_PVAR_148 t s d)). Qed.
Lemma lem4529829 {_107642 A : Type'} : (@all (A -> _107642)) = (@all (A -> _107642)).
Proof. exact (eq_refl (@all (A -> _107642))). Qed.
Lemma lem4529830 {_107642 A : Type'} (_53778 : type656 _107642 A) (t : _107642 -> Prop) (s : A -> Prop) (d : _107642) : (term296 _107642 A _53778 t s d) = (term296 _107642 A _53778 t s d).
Proof. exact (MK_COMB (@lem4529829 _107642 A) (@lem4529828 _107642 A _53778 t s d)). Qed.
Lemma lem4529831 {_107642 A : Type'} (_53778 : type656 _107642 A) (t : _107642 -> Prop) (s : A -> Prop) : (term297 _107642 A _53778 t s) = (term297 _107642 A _53778 t s).
Proof. exact (fun_ext (fun d : _107642 => @lem4529830 _107642 A _53778 t s d)). Qed.
Lemma lem4529832 {_107642 : Type'} : (@all _107642) = (@all _107642).
Proof. exact (eq_refl (@all _107642)). Qed.
Lemma lem4529833 {_107642 A : Type'} (_53778 : type656 _107642 A) (t : _107642 -> Prop) (s : A -> Prop) : (term298 _107642 A _53778 t s) = (term298 _107642 A _53778 t s).
Proof. exact (MK_COMB (@lem4529832 _107642) (@lem4529831 _107642 A _53778 t s)). Qed.
Lemma lem4529834 {_107642 A : Type'} (_53778 : type656 _107642 A) (t : _107642 -> Prop) : (term299 _107642 A _53778 t) = (term299 _107642 A _53778 t).
Proof. exact (fun_ext (fun s : A -> Prop => @lem4529833 _107642 A _53778 t s)). Qed.
Lemma lem4529835 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem4529836 {_107642 A : Type'} (_53778 : type656 _107642 A) (t : _107642 -> Prop) : (term300 _107642 A _53778 t) = (term300 _107642 A _53778 t).
Proof. exact (MK_COMB (@lem4529835 A) (@lem4529834 _107642 A _53778 t)). Qed.
Lemma lem4529837 {_107642 A : Type'} (_53778 : type656 _107642 A) : (term301 _107642 A _53778) = (term301 _107642 A _53778).
Proof. exact (fun_ext (fun t : _107642 -> Prop => @lem4529836 _107642 A _53778 t)). Qed.
Lemma lem4529838 {_107642 : Type'} : (@all (_107642 -> Prop)) = (@all (_107642 -> Prop)).
Proof. exact (eq_refl (@all (_107642 -> Prop))). Qed.
Lemma lem4529839 {_107642 A : Type'} (_53778 : type656 _107642 A) : (term302 _107642 A _53778) = (term302 _107642 A _53778).
Proof. exact (MK_COMB (@lem4529838 _107642) (@lem4529837 _107642 A _53778)). Qed.
Lemma lem4529840 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4529841 {_107642 A : Type'} (_53778 : type656 _107642 A) : (term303 _107642 A _53778) = (term303 _107642 A _53778).
Proof. exact (MK_COMB (@lem4529840) (@lem4529839 _107642 A _53778)). Qed.
Lemma lem4529842 {_100044 _107639 _107642 A B : Type'} (_53778 : type656 _107642 A) (_53779 : type839 _107639 B) (_53780 : type839 _107642 B) (_53781 : type839 A B) (h1 : _53781 = (term397 A B)) : (term546 _100044 _107639 _107642 A B _53778 _53779 _53780) = (term602 _100044 _107639 _107642 A B _53778 _53779 _53780 _53781).
Proof. exact (MK_COMB (@lem4529841 _107642 A _53778) (@lem4529765 _100044 _107639 _107642 A B _53778 _53779 _53780 _53781 h1)). Qed.
Lemma lem4529843 {_100044 _107639 _107642 A B : Type'} (_53779 : type839 _107639 B) (_53780 : type839 _107642 B) (_53781 : type839 A B) (h1 : _53781 = (term397 A B)) : (term547 _100044 _107639 _107642 A B _53779 _53780) = (term603 _100044 _107639 _107642 A B _53779 _53780 _53781).
Proof. exact (fun_ext (fun _53778 : type656 _107642 A => @lem4529842 _100044 _107639 _107642 A B _53778 _53779 _53780 _53781 h1)). Qed.
Lemma lem4529844 {_107642 A : Type'} : (@all ((_107642 -> Prop) -> (A -> Prop) -> _107642 -> (A -> _107642) -> Prop)) = (@all ((_107642 -> Prop) -> (A -> Prop) -> _107642 -> (A -> _107642) -> Prop)).
Proof. exact (eq_refl (@all ((_107642 -> Prop) -> (A -> Prop) -> _107642 -> (A -> _107642) -> Prop))). Qed.
Lemma lem4529845 {_100044 _107639 _107642 A B : Type'} (_53779 : type839 _107639 B) (_53780 : type839 _107642 B) (_53781 : type839 A B) (h1 : _53781 = (term397 A B)) : (term548 _100044 _107639 _107642 A B _53779 _53780) = (term604 _100044 _107639 _107642 A B _53779 _53780 _53781).
Proof. exact (MK_COMB (@lem4529844 _107642 A) (@lem4529843 _100044 _107639 _107642 A B _53779 _53780 _53781 h1)). Qed.
Lemma lem4529846 {_107639 B : Type'} (f : _107639 -> B) : f = f.
Proof. exact (eq_refl f). Qed.
Lemma lem4529863 {_107639 B : Type'} (s : _107639 -> Prop) (f : _107639 -> B) (x : _107639) (d : B) : (term113 _107639 B s f x d) = (term113 _107639 B s f x d).
Proof. exact (eq_refl (term113 _107639 B s f x d)). Qed.
Lemma lem4529864 {_107639 B : Type'} (s : _107639 -> Prop) (f : _107639 -> B) (d : B) : (term114 _107639 B s f d) = (term114 _107639 B s f d).
Proof. exact (fun_ext (fun x : _107639 => @lem4529863 _107639 B s f x d)). Qed.
Lemma lem4529865 {_107639 : Type'} : (@all _107639) = (@all _107639).
Proof. exact (eq_refl (@all _107639)). Qed.
Lemma lem4529866 {_107639 B : Type'} (s : _107639 -> Prop) (f : _107639 -> B) (d : B) : (term115 _107639 B s f d) = (term115 _107639 B s f d).
Proof. exact (MK_COMB (@lem4529865 _107639) (@lem4529864 _107639 B s f d)). Qed.
Lemma lem4529881 {_107639 B : Type'} (s : _107639 -> Prop) (f : _107639 -> B) (x : _107639) (t : B -> Prop) : (term116 _107639 B s f x t) = (term116 _107639 B s f x t).
Proof. exact (eq_refl (term116 _107639 B s f x t)). Qed.
Lemma lem4529882 {_107639 B : Type'} (s : _107639 -> Prop) (f : _107639 -> B) (t : B -> Prop) : (term117 _107639 B s f t) = (term117 _107639 B s f t).
Proof. exact (fun_ext (fun x : _107639 => @lem4529881 _107639 B s f x t)). Qed.
Lemma lem4529883 {_107639 : Type'} : (@all _107639) = (@all _107639).
Proof. exact (eq_refl (@all _107639)). Qed.
Lemma lem4529884 {_107639 B : Type'} (s : _107639 -> Prop) (f : _107639 -> B) (t : B -> Prop) : (term118 _107639 B s f t) = (term118 _107639 B s f t).
Proof. exact (MK_COMB (@lem4529883 _107639) (@lem4529882 _107639 B s f t)). Qed.
Lemma lem4529885 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4529886 {_107639 B : Type'} (s : _107639 -> Prop) (f : _107639 -> B) (t : B -> Prop) : (term119 _107639 B s f t) = (term119 _107639 B s f t).
Proof. exact (MK_COMB (@lem4529885) (@lem4529884 _107639 B s f t)). Qed.
Lemma lem4529887 {_107639 B : Type'} (t : B -> Prop) (s : _107639 -> Prop) (f : _107639 -> B) (d : B) : (term120 _107639 B t s f d) = (term120 _107639 B t s f d).
Proof. exact (MK_COMB (@lem4529886 _107639 B s f t) (@lem4529866 _107639 B s f d)). Qed.
Lemma lem4529890 {_107639 B : Type'} (GEN_PVAR_148 : _107639 -> B) : (@SETSPEC (_107639 -> B) GEN_PVAR_148) = (@SETSPEC (_107639 -> B) GEN_PVAR_148).
Proof. exact (eq_refl (@SETSPEC (_107639 -> B) GEN_PVAR_148)). Qed.
Lemma lem4529891 {_107639 B : Type'} (GEN_PVAR_148 : _107639 -> B) (t : B -> Prop) (s : _107639 -> Prop) (f : _107639 -> B) (d : B) : (term121 _107639 B GEN_PVAR_148 t s f d) = (term121 _107639 B GEN_PVAR_148 t s f d).
Proof. exact (MK_COMB (@lem4529890 _107639 B GEN_PVAR_148) (@lem4529887 _107639 B t s f d)). Qed.
Lemma lem4529892 {_107639 B : Type'} (GEN_PVAR_148 : _107639 -> B) (t : B -> Prop) (s : _107639 -> Prop) (d : B) (f : _107639 -> B) : (term122 _107639 B GEN_PVAR_148 t s d f) = (term122 _107639 B GEN_PVAR_148 t s d f).
Proof. exact (MK_COMB (@lem4529891 _107639 B GEN_PVAR_148 t s f d) (@lem4529846 _107639 B f)). Qed.
Lemma lem4529893 {_107639 B : Type'} (GEN_PVAR_148 : _107639 -> B) (t : B -> Prop) (s : _107639 -> Prop) (d : B) : (term123 _107639 B GEN_PVAR_148 t s d) = (term123 _107639 B GEN_PVAR_148 t s d).
Proof. exact (fun_ext (fun f : _107639 -> B => @lem4529892 _107639 B GEN_PVAR_148 t s d f)). Qed.
Lemma lem4529894 {_107639 B : Type'} : (@ex (_107639 -> B)) = (@ex (_107639 -> B)).
Proof. exact (eq_refl (@ex (_107639 -> B))). Qed.
Lemma lem4529895 {_107639 B : Type'} (GEN_PVAR_148 : _107639 -> B) (t : B -> Prop) (s : _107639 -> Prop) (d : B) : (term124 _107639 B GEN_PVAR_148 t s d) = (term124 _107639 B GEN_PVAR_148 t s d).
Proof. exact (MK_COMB (@lem4529894 _107639 B) (@lem4529893 _107639 B GEN_PVAR_148 t s d)). Qed.
Lemma lem4529906 {_107639 B : Type'} (_53779 : type839 _107639 B) (t : B -> Prop) (s : _107639 -> Prop) (d : B) (GEN_PVAR_148 : _107639 -> B) : (term505 _107639 B _53779 t s d GEN_PVAR_148) = (term505 _107639 B _53779 t s d GEN_PVAR_148).
Proof. exact (eq_refl (term505 _107639 B _53779 t s d GEN_PVAR_148)). Qed.
Lemma lem4529907 {_107639 B : Type'} (_53779 : type839 _107639 B) (GEN_PVAR_148 : _107639 -> B) (t : B -> Prop) (s : _107639 -> Prop) (d : B) : ((_53779 t s d GEN_PVAR_148) = (term124 _107639 B GEN_PVAR_148 t s d)) = ((_53779 t s d GEN_PVAR_148) = (term124 _107639 B GEN_PVAR_148 t s d)).
Proof. exact (MK_COMB (@lem4529906 _107639 B _53779 t s d GEN_PVAR_148) (@lem4529895 _107639 B GEN_PVAR_148 t s d)). Qed.
Lemma lem4529908 {_107639 B : Type'} (_53779 : type839 _107639 B) (t : B -> Prop) (s : _107639 -> Prop) (d : B) : (term507 _107639 B _53779 t s d) = (term507 _107639 B _53779 t s d).
Proof. exact (fun_ext (fun GEN_PVAR_148 : _107639 -> B => @lem4529907 _107639 B _53779 GEN_PVAR_148 t s d)). Qed.
Lemma lem4529909 {_107639 B : Type'} : (@all (_107639 -> B)) = (@all (_107639 -> B)).
Proof. exact (eq_refl (@all (_107639 -> B))). Qed.
Lemma lem4529910 {_107639 B : Type'} (_53779 : type839 _107639 B) (t : B -> Prop) (s : _107639 -> Prop) (d : B) : (term508 _107639 B _53779 t s d) = (term508 _107639 B _53779 t s d).
Proof. exact (MK_COMB (@lem4529909 _107639 B) (@lem4529908 _107639 B _53779 t s d)). Qed.
Lemma lem4529911 {_107639 B : Type'} (_53779 : type839 _107639 B) (t : B -> Prop) (s : _107639 -> Prop) : (term509 _107639 B _53779 t s) = (term509 _107639 B _53779 t s).
Proof. exact (fun_ext (fun d : B => @lem4529910 _107639 B _53779 t s d)). Qed.
Lemma lem4529912 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem4529913 {_107639 B : Type'} (_53779 : type839 _107639 B) (t : B -> Prop) (s : _107639 -> Prop) : (term510 _107639 B _53779 t s) = (term510 _107639 B _53779 t s).
Proof. exact (MK_COMB (@lem4529912 B) (@lem4529911 _107639 B _53779 t s)). Qed.
Lemma lem4529914 {_107639 B : Type'} (_53779 : type839 _107639 B) (t : B -> Prop) : (term511 _107639 B _53779 t) = (term511 _107639 B _53779 t).
Proof. exact (fun_ext (fun s : _107639 -> Prop => @lem4529913 _107639 B _53779 t s)). Qed.
Lemma lem4529915 {_107639 : Type'} : (@all (_107639 -> Prop)) = (@all (_107639 -> Prop)).
Proof. exact (eq_refl (@all (_107639 -> Prop))). Qed.
Lemma lem4529916 {_107639 B : Type'} (_53779 : type839 _107639 B) (t : B -> Prop) : (term512 _107639 B _53779 t) = (term512 _107639 B _53779 t).
Proof. exact (MK_COMB (@lem4529915 _107639) (@lem4529914 _107639 B _53779 t)). Qed.
Lemma lem4529917 {_107639 B : Type'} (_53779 : type839 _107639 B) : (term513 _107639 B _53779) = (term513 _107639 B _53779).
Proof. exact (fun_ext (fun t : B -> Prop => @lem4529916 _107639 B _53779 t)). Qed.
Lemma lem4529918 {B : Type'} : (@all (B -> Prop)) = (@all (B -> Prop)).
Proof. exact (eq_refl (@all (B -> Prop))). Qed.
Lemma lem4529919 {_107639 B : Type'} (_53779 : type839 _107639 B) : (term514 _107639 B _53779) = (term514 _107639 B _53779).
Proof. exact (MK_COMB (@lem4529918 B) (@lem4529917 _107639 B _53779)). Qed.
Lemma lem4529920 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4529921 {_107639 B : Type'} (_53779 : type839 _107639 B) : (term515 _107639 B _53779) = (term515 _107639 B _53779).
Proof. exact (MK_COMB (@lem4529920) (@lem4529919 _107639 B _53779)). Qed.
Lemma lem4529922 {_100044 _107639 _107642 A B : Type'} (_53779 : type839 _107639 B) (_53780 : type839 _107642 B) (_53781 : type839 A B) (h1 : _53781 = (term397 A B)) : (term549 _100044 _107639 _107642 A B _53779 _53780) = (term605 _100044 _107639 _107642 A B _53779 _53780 _53781).
Proof. exact (MK_COMB (@lem4529921 _107639 B _53779) (@lem4529845 _100044 _107639 _107642 A B _53779 _53780 _53781 h1)). Qed.
Lemma lem4529923 {_100044 _107639 _107642 A B : Type'} (_53780 : type839 _107642 B) (_53781 : type839 A B) (h1 : _53781 = (term397 A B)) : (term550 _100044 _107639 _107642 A B _53780) = (term606 _100044 _107639 _107642 A B _53780 _53781).
Proof. exact (fun_ext (fun _53779 : type839 _107639 B => @lem4529922 _100044 _107639 _107642 A B _53779 _53780 _53781 h1)). Qed.
Lemma lem4529924 {_107639 B : Type'} : (@all ((B -> Prop) -> (_107639 -> Prop) -> B -> (_107639 -> B) -> Prop)) = (@all ((B -> Prop) -> (_107639 -> Prop) -> B -> (_107639 -> B) -> Prop)).
Proof. exact (eq_refl (@all ((B -> Prop) -> (_107639 -> Prop) -> B -> (_107639 -> B) -> Prop))). Qed.
Lemma lem4529925 {_100044 _107639 _107642 A B : Type'} (_53780 : type839 _107642 B) (_53781 : type839 A B) (h1 : _53781 = (term397 A B)) : (term551 _100044 _107639 _107642 A B _53780) = (term607 _100044 _107639 _107642 A B _53780 _53781).
Proof. exact (MK_COMB (@lem4529924 _107639 B) (@lem4529923 _100044 _107639 _107642 A B _53780 _53781 h1)). Qed.
Lemma lem4529926 {_107642 B : Type'} (f : _107642 -> B) : f = f.
Proof. exact (eq_refl f). Qed.
Lemma lem4529943 {_107642 B : Type'} (s : _107642 -> Prop) (f : _107642 -> B) (x : _107642) (d : B) : (term113 _107642 B s f x d) = (term113 _107642 B s f x d).
Proof. exact (eq_refl (term113 _107642 B s f x d)). Qed.
Lemma lem4529944 {_107642 B : Type'} (s : _107642 -> Prop) (f : _107642 -> B) (d : B) : (term114 _107642 B s f d) = (term114 _107642 B s f d).
Proof. exact (fun_ext (fun x : _107642 => @lem4529943 _107642 B s f x d)). Qed.
Lemma lem4529945 {_107642 : Type'} : (@all _107642) = (@all _107642).
Proof. exact (eq_refl (@all _107642)). Qed.
Lemma lem4529946 {_107642 B : Type'} (s : _107642 -> Prop) (f : _107642 -> B) (d : B) : (term115 _107642 B s f d) = (term115 _107642 B s f d).
Proof. exact (MK_COMB (@lem4529945 _107642) (@lem4529944 _107642 B s f d)). Qed.
Lemma lem4529961 {_107642 B : Type'} (s : _107642 -> Prop) (f : _107642 -> B) (x : _107642) (t : B -> Prop) : (term116 _107642 B s f x t) = (term116 _107642 B s f x t).
Proof. exact (eq_refl (term116 _107642 B s f x t)). Qed.
Lemma lem4529962 {_107642 B : Type'} (s : _107642 -> Prop) (f : _107642 -> B) (t : B -> Prop) : (term117 _107642 B s f t) = (term117 _107642 B s f t).
Proof. exact (fun_ext (fun x : _107642 => @lem4529961 _107642 B s f x t)). Qed.
Lemma lem4529963 {_107642 : Type'} : (@all _107642) = (@all _107642).
Proof. exact (eq_refl (@all _107642)). Qed.
Lemma lem4529964 {_107642 B : Type'} (s : _107642 -> Prop) (f : _107642 -> B) (t : B -> Prop) : (term118 _107642 B s f t) = (term118 _107642 B s f t).
Proof. exact (MK_COMB (@lem4529963 _107642) (@lem4529962 _107642 B s f t)). Qed.
Lemma lem4529965 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4529966 {_107642 B : Type'} (s : _107642 -> Prop) (f : _107642 -> B) (t : B -> Prop) : (term119 _107642 B s f t) = (term119 _107642 B s f t).
Proof. exact (MK_COMB (@lem4529965) (@lem4529964 _107642 B s f t)). Qed.
Lemma lem4529967 {_107642 B : Type'} (t : B -> Prop) (s : _107642 -> Prop) (f : _107642 -> B) (d : B) : (term120 _107642 B t s f d) = (term120 _107642 B t s f d).
Proof. exact (MK_COMB (@lem4529966 _107642 B s f t) (@lem4529946 _107642 B s f d)). Qed.
Lemma lem4529970 {_107642 B : Type'} (GEN_PVAR_148 : _107642 -> B) : (@SETSPEC (_107642 -> B) GEN_PVAR_148) = (@SETSPEC (_107642 -> B) GEN_PVAR_148).
Proof. exact (eq_refl (@SETSPEC (_107642 -> B) GEN_PVAR_148)). Qed.
Lemma lem4529971 {_107642 B : Type'} (GEN_PVAR_148 : _107642 -> B) (t : B -> Prop) (s : _107642 -> Prop) (f : _107642 -> B) (d : B) : (term121 _107642 B GEN_PVAR_148 t s f d) = (term121 _107642 B GEN_PVAR_148 t s f d).
Proof. exact (MK_COMB (@lem4529970 _107642 B GEN_PVAR_148) (@lem4529967 _107642 B t s f d)). Qed.
Lemma lem4529972 {_107642 B : Type'} (GEN_PVAR_148 : _107642 -> B) (t : B -> Prop) (s : _107642 -> Prop) (d : B) (f : _107642 -> B) : (term122 _107642 B GEN_PVAR_148 t s d f) = (term122 _107642 B GEN_PVAR_148 t s d f).
Proof. exact (MK_COMB (@lem4529971 _107642 B GEN_PVAR_148 t s f d) (@lem4529926 _107642 B f)). Qed.
Lemma lem4529973 {_107642 B : Type'} (GEN_PVAR_148 : _107642 -> B) (t : B -> Prop) (s : _107642 -> Prop) (d : B) : (term123 _107642 B GEN_PVAR_148 t s d) = (term123 _107642 B GEN_PVAR_148 t s d).
Proof. exact (fun_ext (fun f : _107642 -> B => @lem4529972 _107642 B GEN_PVAR_148 t s d f)). Qed.
Lemma lem4529974 {_107642 B : Type'} : (@ex (_107642 -> B)) = (@ex (_107642 -> B)).
Proof. exact (eq_refl (@ex (_107642 -> B))). Qed.
Lemma lem4529975 {_107642 B : Type'} (GEN_PVAR_148 : _107642 -> B) (t : B -> Prop) (s : _107642 -> Prop) (d : B) : (term124 _107642 B GEN_PVAR_148 t s d) = (term124 _107642 B GEN_PVAR_148 t s d).
Proof. exact (MK_COMB (@lem4529974 _107642 B) (@lem4529973 _107642 B GEN_PVAR_148 t s d)). Qed.
Lemma lem4529986 {_107642 B : Type'} (_53780 : type839 _107642 B) (t : B -> Prop) (s : _107642 -> Prop) (d : B) (GEN_PVAR_148 : _107642 -> B) : (term505 _107642 B _53780 t s d GEN_PVAR_148) = (term505 _107642 B _53780 t s d GEN_PVAR_148).
Proof. exact (eq_refl (term505 _107642 B _53780 t s d GEN_PVAR_148)). Qed.
Lemma lem4529987 {_107642 B : Type'} (_53780 : type839 _107642 B) (GEN_PVAR_148 : _107642 -> B) (t : B -> Prop) (s : _107642 -> Prop) (d : B) : ((_53780 t s d GEN_PVAR_148) = (term124 _107642 B GEN_PVAR_148 t s d)) = ((_53780 t s d GEN_PVAR_148) = (term124 _107642 B GEN_PVAR_148 t s d)).
Proof. exact (MK_COMB (@lem4529986 _107642 B _53780 t s d GEN_PVAR_148) (@lem4529975 _107642 B GEN_PVAR_148 t s d)). Qed.
Lemma lem4529988 {_107642 B : Type'} (_53780 : type839 _107642 B) (t : B -> Prop) (s : _107642 -> Prop) (d : B) : (term507 _107642 B _53780 t s d) = (term507 _107642 B _53780 t s d).
Proof. exact (fun_ext (fun GEN_PVAR_148 : _107642 -> B => @lem4529987 _107642 B _53780 GEN_PVAR_148 t s d)). Qed.
Lemma lem4529989 {_107642 B : Type'} : (@all (_107642 -> B)) = (@all (_107642 -> B)).
Proof. exact (eq_refl (@all (_107642 -> B))). Qed.
Lemma lem4529990 {_107642 B : Type'} (_53780 : type839 _107642 B) (t : B -> Prop) (s : _107642 -> Prop) (d : B) : (term508 _107642 B _53780 t s d) = (term508 _107642 B _53780 t s d).
Proof. exact (MK_COMB (@lem4529989 _107642 B) (@lem4529988 _107642 B _53780 t s d)). Qed.
Lemma lem4529991 {_107642 B : Type'} (_53780 : type839 _107642 B) (t : B -> Prop) (s : _107642 -> Prop) : (term509 _107642 B _53780 t s) = (term509 _107642 B _53780 t s).
Proof. exact (fun_ext (fun d : B => @lem4529990 _107642 B _53780 t s d)). Qed.
Lemma lem4529992 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem4529993 {_107642 B : Type'} (_53780 : type839 _107642 B) (t : B -> Prop) (s : _107642 -> Prop) : (term510 _107642 B _53780 t s) = (term510 _107642 B _53780 t s).
Proof. exact (MK_COMB (@lem4529992 B) (@lem4529991 _107642 B _53780 t s)). Qed.
Lemma lem4529994 {_107642 B : Type'} (_53780 : type839 _107642 B) (t : B -> Prop) : (term511 _107642 B _53780 t) = (term511 _107642 B _53780 t).
Proof. exact (fun_ext (fun s : _107642 -> Prop => @lem4529993 _107642 B _53780 t s)). Qed.
Lemma lem4529995 {_107642 : Type'} : (@all (_107642 -> Prop)) = (@all (_107642 -> Prop)).
Proof. exact (eq_refl (@all (_107642 -> Prop))). Qed.
Lemma lem4529996 {_107642 B : Type'} (_53780 : type839 _107642 B) (t : B -> Prop) : (term512 _107642 B _53780 t) = (term512 _107642 B _53780 t).
Proof. exact (MK_COMB (@lem4529995 _107642) (@lem4529994 _107642 B _53780 t)). Qed.
Lemma lem4529997 {_107642 B : Type'} (_53780 : type839 _107642 B) : (term513 _107642 B _53780) = (term513 _107642 B _53780).
Proof. exact (fun_ext (fun t : B -> Prop => @lem4529996 _107642 B _53780 t)). Qed.
Lemma lem4529998 {B : Type'} : (@all (B -> Prop)) = (@all (B -> Prop)).
Proof. exact (eq_refl (@all (B -> Prop))). Qed.
Lemma lem4529999 {_107642 B : Type'} (_53780 : type839 _107642 B) : (term514 _107642 B _53780) = (term514 _107642 B _53780).
Proof. exact (MK_COMB (@lem4529998 B) (@lem4529997 _107642 B _53780)). Qed.
Lemma lem4530000 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4530001 {_107642 B : Type'} (_53780 : type839 _107642 B) : (term515 _107642 B _53780) = (term515 _107642 B _53780).
Proof. exact (MK_COMB (@lem4530000) (@lem4529999 _107642 B _53780)). Qed.
Lemma lem4530002 {_100044 _107639 _107642 A B : Type'} (_53780 : type839 _107642 B) (_53781 : type839 A B) (h1 : _53781 = (term397 A B)) : (term571 _100044 _107639 _107642 A B _53780) = (term608 _100044 _107639 _107642 A B _53780 _53781).
Proof. exact (MK_COMB (@lem4530001 _107642 B _53780) (@lem4529925 _100044 _107639 _107642 A B _53780 _53781 h1)). Qed.
Lemma lem4530003 {_100044 _107639 _107642 A B : Type'} (_53781 : type839 A B) (h1 : _53781 = (term397 A B)) : (term572 _100044 _107639 _107642 A B) = (term609 _100044 _107639 _107642 A B _53781).
Proof. exact (fun_ext (fun _53780 : type839 _107642 B => @lem4530002 _100044 _107639 _107642 A B _53780 _53781 h1)). Qed.
Lemma lem4530004 {_107642 B : Type'} : (@all ((B -> Prop) -> (_107642 -> Prop) -> B -> (_107642 -> B) -> Prop)) = (@all ((B -> Prop) -> (_107642 -> Prop) -> B -> (_107642 -> B) -> Prop)).
Proof. exact (eq_refl (@all ((B -> Prop) -> (_107642 -> Prop) -> B -> (_107642 -> B) -> Prop))). Qed.
Lemma lem4530005 {_100044 _107639 _107642 A B : Type'} (_53781 : type839 A B) (h1 : _53781 = (term397 A B)) : (term573 _100044 _107639 _107642 A B) = (term610 _100044 _107639 _107642 A B _53781).
Proof. exact (MK_COMB (@lem4530004 _107642 B) (@lem4530003 _100044 _107639 _107642 A B _53781 h1)). Qed.
Lemma lem4530006 {_100044 _107639 _107642 A B : Type'} (_53781 : type839 A B) : term611 _100044 _107639 _107642 A B _53781.
Proof. exact (fun h0 : _53781 = (term397 A B) => @lem4530005 _100044 _107639 _107642 A B _53781 h0). Qed.
Lemma lem4530007 {_100044 _107639 _107642 A B : Type'} : term612 _100044 _107639 _107642 A B.
Proof. exact (fun _53781 : type839 A B => @lem4530006 _100044 _107639 _107642 A B _53781). Qed.
Lemma lem4530009 {_3603 : Type'} (P : Prop) (c : _3603) (Q : _3603 -> Prop) : term237 _3603 P c Q.
Proof. exact (EQ_MP (@lem20230 _3603 P c Q) (@lem0)). Qed.
Lemma lem4530010 {A B : Type'} (P : Prop) (c : type839 A B) (Q : type214 A B) : term452 A B P c Q.
Proof. exact (@lem4530009 (type839 A B) P c Q). Qed.
Lemma lem4530011 {_100044 _107639 _107642 A B : Type'} : term613 _100044 _107639 _107642 A B.
Proof. exact (@lem4530010 A B (term573 _100044 _107639 _107642 A B) (term397 A B) (term614 _100044 _107639 _107642 A B)). Qed.
Lemma lem4530012 {_100044 _107639 _107642 A B : Type'} (_53781 : type839 A B) : (term615 _100044 _107639 _107642 A B _53781) = (term610 _100044 _107639 _107642 A B _53781).
Proof. exact (eq_refl (term615 _100044 _107639 _107642 A B _53781)). Qed.
Lemma lem4530013 {_100044 _107639 _107642 A B : Type'} : (term616 _100044 _107639 _107642 A B) = (term616 _100044 _107639 _107642 A B).
Proof. exact (eq_refl (term616 _100044 _107639 _107642 A B)). Qed.
Lemma lem4530014 {_100044 _107639 _107642 A B : Type'} (_53781 : type839 A B) : ((term573 _100044 _107639 _107642 A B) = (term615 _100044 _107639 _107642 A B _53781)) = ((term573 _100044 _107639 _107642 A B) = (term610 _100044 _107639 _107642 A B _53781)).
Proof. exact (MK_COMB (@lem4530013 _100044 _107639 _107642 A B) (@lem4530012 _100044 _107639 _107642 A B _53781)). Qed.
Lemma lem4530015 {A B : Type'} (_53781 : type839 A B) : (term457 A B _53781) = (term457 A B _53781).
Proof. exact (eq_refl (term457 A B _53781)). Qed.
Lemma lem4530016 {_100044 _107639 _107642 A B : Type'} (_53781 : type839 A B) : (term617 _100044 _107639 _107642 A B _53781) = (term611 _100044 _107639 _107642 A B _53781).
Proof. exact (MK_COMB (@lem4530015 A B _53781) (@lem4530014 _100044 _107639 _107642 A B _53781)). Qed.
Lemma lem4530017 {_100044 _107639 _107642 A B : Type'} : (term618 _100044 _107639 _107642 A B) = (term619 _100044 _107639 _107642 A B).
Proof. exact (fun_ext (fun _53781 : type839 A B => @lem4530016 _100044 _107639 _107642 A B _53781)). Qed.
Lemma lem4530018 {A B : Type'} : (@all ((B -> Prop) -> (A -> Prop) -> B -> (A -> B) -> Prop)) = (@all ((B -> Prop) -> (A -> Prop) -> B -> (A -> B) -> Prop)).
Proof. exact (eq_refl (@all ((B -> Prop) -> (A -> Prop) -> B -> (A -> B) -> Prop))). Qed.
Lemma lem4530019 {_100044 _107639 _107642 A B : Type'} : (term620 _100044 _107639 _107642 A B) = (term612 _100044 _107639 _107642 A B).
Proof. exact (MK_COMB (@lem4530018 A B) (@lem4530017 _100044 _107639 _107642 A B)). Qed.
Lemma lem4530020 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4530021 {_100044 _107639 _107642 A B : Type'} : (term621 _100044 _107639 _107642 A B) = (term622 _100044 _107639 _107642 A B).
Proof. exact (MK_COMB (@lem4530020) (@lem4530019 _100044 _107639 _107642 A B)). Qed.
Lemma lem4530022 {_100044 _107639 _107642 A B : Type'} (_53781 : type839 A B) : (term615 _100044 _107639 _107642 A B _53781) = (term610 _100044 _107639 _107642 A B _53781).
Proof. exact (eq_refl (term615 _100044 _107639 _107642 A B _53781)). Qed.
Lemma lem4530023 {A B : Type'} (_53781 : type839 A B) : (term457 A B _53781) = (term457 A B _53781).
Proof. exact (eq_refl (term457 A B _53781)). Qed.
Lemma lem4530024 {_100044 _107639 _107642 A B : Type'} (_53781 : type839 A B) : (term623 _100044 _107639 _107642 A B _53781) = (term624 _100044 _107639 _107642 A B _53781).
Proof. exact (MK_COMB (@lem4530023 A B _53781) (@lem4530022 _100044 _107639 _107642 A B _53781)). Qed.
Lemma lem4530025 {_100044 _107639 _107642 A B : Type'} : (term625 _100044 _107639 _107642 A B) = (term626 _100044 _107639 _107642 A B).
Proof. exact (fun_ext (fun _53781 : type839 A B => @lem4530024 _100044 _107639 _107642 A B _53781)). Qed.
Lemma lem4530026 {A B : Type'} : (@all ((B -> Prop) -> (A -> Prop) -> B -> (A -> B) -> Prop)) = (@all ((B -> Prop) -> (A -> Prop) -> B -> (A -> B) -> Prop)).
Proof. exact (eq_refl (@all ((B -> Prop) -> (A -> Prop) -> B -> (A -> B) -> Prop))). Qed.
Lemma lem4530027 {_100044 _107639 _107642 A B : Type'} : (term627 _100044 _107639 _107642 A B) = (term628 _100044 _107639 _107642 A B).
Proof. exact (MK_COMB (@lem4530026 A B) (@lem4530025 _100044 _107639 _107642 A B)). Qed.
Lemma lem4530028 {_100044 _107639 _107642 A B : Type'} : (term616 _100044 _107639 _107642 A B) = (term616 _100044 _107639 _107642 A B).
Proof. exact (eq_refl (term616 _100044 _107639 _107642 A B)). Qed.
Lemma lem4530029 {_100044 _107639 _107642 A B : Type'} : ((term573 _100044 _107639 _107642 A B) = (term627 _100044 _107639 _107642 A B)) = ((term573 _100044 _107639 _107642 A B) = (term628 _100044 _107639 _107642 A B)).
Proof. exact (MK_COMB (@lem4530028 _100044 _107639 _107642 A B) (@lem4530027 _100044 _107639 _107642 A B)). Qed.
Lemma lem4530030 {_100044 _107639 _107642 A B : Type'} : (term613 _100044 _107639 _107642 A B) = (term629 _100044 _107639 _107642 A B).
Proof. exact (MK_COMB (@lem4530021 _100044 _107639 _107642 A B) (@lem4530029 _100044 _107639 _107642 A B)). Qed.
Lemma lem4530031 {_100044 _107639 _107642 A B : Type'} : term629 _100044 _107639 _107642 A B.
Proof. exact (EQ_MP (@lem4530030 _100044 _107639 _107642 A B) (@lem4530011 _100044 _107639 _107642 A B)). Qed.
Lemma lem4530032 {_100044 _107639 _107642 A B : Type'} : (term573 _100044 _107639 _107642 A B) = (term628 _100044 _107639 _107642 A B).
Proof. exact (@lem4530031 _100044 _107639 _107642 A B (@lem4530007 _100044 _107639 _107642 A B)). Qed.
Lemma lem4530034 {_3571 _3575 : Type'} (s : _3575 -> _3571) (t : _3575 -> _3571) : (s = (term257 _3571 _3575 t)) = (term258 _3571 _3575 s t).
Proof. exact (EQ_MP (@lem19792 _3571 _3575 s t) (@lem0)). Qed.
Lemma lem4530035 {A B : Type'} (s : type839 A B) (t : type839 A B) : (s = (term471 A B t)) = (term472 A B s t).
Proof. exact (@lem4530034 (type674 A B) (B -> Prop) s t). Qed.
Lemma lem4530036 {A B : Type'} (_53781 : type839 A B) : (_53781 = (term473 A B)) = (term474 A B _53781).
Proof. exact (@lem4530035 A B _53781 (term397 A B)). Qed.
Lemma lem4530037 {A B : Type'} (t : B -> Prop) : (term398 A B t) = (term399 A B t).
Proof. exact (eq_refl (term398 A B t)). Qed.
Lemma lem4530038 {A B : Type'} : (term473 A B) = (term397 A B).
Proof. exact (fun_ext (fun t : B -> Prop => @lem4530037 A B t)). Qed.
Lemma lem4530039 {A B : Type'} (_53781 : type839 A B) : (@eq ((B -> Prop) -> (A -> Prop) -> B -> (A -> B) -> Prop) _53781) = (@eq ((B -> Prop) -> (A -> Prop) -> B -> (A -> B) -> Prop) _53781).
Proof. exact (eq_refl (@eq ((B -> Prop) -> (A -> Prop) -> B -> (A -> B) -> Prop) _53781)). Qed.
Lemma lem4530040 {A B : Type'} (_53781 : type839 A B) : (_53781 = (term473 A B)) = (_53781 = (term397 A B)).
Proof. exact (MK_COMB (@lem4530039 A B _53781) (@lem4530038 A B)). Qed.
Lemma lem4530041 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4530042 {A B : Type'} (_53781 : type839 A B) : (term475 A B _53781) = (term476 A B _53781).
Proof. exact (MK_COMB (@lem4530041) (@lem4530040 A B _53781)). Qed.
Lemma lem4530043 {A B : Type'} (t : B -> Prop) : (term398 A B t) = (term399 A B t).
Proof. exact (eq_refl (term398 A B t)). Qed.
Lemma lem4530044 {A B : Type'} (_53781 : type839 A B) (t : B -> Prop) : (term400 A B _53781 t) = (term400 A B _53781 t).
Proof. exact (eq_refl (term400 A B _53781 t)). Qed.
Lemma lem4530045 {A B : Type'} (_53781 : type839 A B) (t : B -> Prop) : ((_53781 t) = (term398 A B t)) = ((_53781 t) = (term399 A B t)).
Proof. exact (MK_COMB (@lem4530044 A B _53781 t) (@lem4530043 A B t)). Qed.
Lemma lem4530046 {A B : Type'} (_53781 : type839 A B) : (term477 A B _53781) = (term478 A B _53781).
Proof. exact (fun_ext (fun t : B -> Prop => @lem4530045 A B _53781 t)). Qed.
Lemma lem4530047 {B : Type'} : (@all (B -> Prop)) = (@all (B -> Prop)).
Proof. exact (eq_refl (@all (B -> Prop))). Qed.
Lemma lem4530048 {A B : Type'} (_53781 : type839 A B) : (term474 A B _53781) = (term479 A B _53781).
Proof. exact (MK_COMB (@lem4530047 B) (@lem4530046 A B _53781)). Qed.
Lemma lem4530049 {A B : Type'} (_53781 : type839 A B) : ((_53781 = (term473 A B)) = (term474 A B _53781)) = ((_53781 = (term397 A B)) = (term479 A B _53781)).
Proof. exact (MK_COMB (@lem4530042 A B _53781) (@lem4530048 A B _53781)). Qed.
Lemma lem4530050 {A B : Type'} (_53781 : type839 A B) : (_53781 = (term397 A B)) = (term479 A B _53781).
Proof. exact (EQ_MP (@lem4530049 A B _53781) (@lem4530036 A B _53781)). Qed.
Lemma lem4530052 {_3571 _3575 : Type'} (s : _3575 -> _3571) (t : _3575 -> _3571) : (s = (term257 _3571 _3575 t)) = (term258 _3571 _3575 s t).
Proof. exact (EQ_MP (@lem19792 _3571 _3575 s t) (@lem0)). Qed.
Lemma lem4530053 {A B : Type'} (s : type674 A B) (t : type674 A B) : (s = (term480 A B t)) = (term481 A B s t).
Proof. exact (@lem4530052 (type1446 A B) (A -> Prop) s t). Qed.
Lemma lem4530054 {A B : Type'} (_53781 : type839 A B) (t : B -> Prop) : ((_53781 t) = (term482 A B t)) = (term483 A B _53781 t).
Proof. exact (@lem4530053 A B (_53781 t) (term399 A B t)). Qed.
Lemma lem4530055 {A B : Type'} (t : B -> Prop) (s : A -> Prop) : (term401 A B t s) = (term402 A B t s).
Proof. exact (eq_refl (term401 A B t s)). Qed.
Lemma lem4530056 {A B : Type'} (t : B -> Prop) : (term482 A B t) = (term399 A B t).
Proof. exact (fun_ext (fun s : A -> Prop => @lem4530055 A B t s)). Qed.
Lemma lem4530057 {A B : Type'} (_53781 : type839 A B) (t : B -> Prop) : (term400 A B _53781 t) = (term400 A B _53781 t).
Proof. exact (eq_refl (term400 A B _53781 t)). Qed.
Lemma lem4530058 {A B : Type'} (_53781 : type839 A B) (t : B -> Prop) : ((_53781 t) = (term482 A B t)) = ((_53781 t) = (term399 A B t)).
Proof. exact (MK_COMB (@lem4530057 A B _53781 t) (@lem4530056 A B t)). Qed.
Lemma lem4530059 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4530060 {A B : Type'} (_53781 : type839 A B) (t : B -> Prop) : (term484 A B _53781 t) = (term485 A B _53781 t).
Proof. exact (MK_COMB (@lem4530059) (@lem4530058 A B _53781 t)). Qed.
Lemma lem4530061 {A B : Type'} (t : B -> Prop) (s : A -> Prop) : (term401 A B t s) = (term402 A B t s).
Proof. exact (eq_refl (term401 A B t s)). Qed.
Lemma lem4530062 {A B : Type'} (_53781 : type839 A B) (t : B -> Prop) (s : A -> Prop) : (term403 A B _53781 t s) = (term403 A B _53781 t s).
Proof. exact (eq_refl (term403 A B _53781 t s)). Qed.
Lemma lem4530063 {A B : Type'} (_53781 : type839 A B) (t : B -> Prop) (s : A -> Prop) : ((_53781 t s) = (term401 A B t s)) = ((_53781 t s) = (term402 A B t s)).
Proof. exact (MK_COMB (@lem4530062 A B _53781 t s) (@lem4530061 A B t s)). Qed.
Lemma lem4530064 {A B : Type'} (_53781 : type839 A B) (t : B -> Prop) : (term486 A B _53781 t) = (term487 A B _53781 t).
Proof. exact (fun_ext (fun s : A -> Prop => @lem4530063 A B _53781 t s)). Qed.
Lemma lem4530065 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem4530066 {A B : Type'} (_53781 : type839 A B) (t : B -> Prop) : (term483 A B _53781 t) = (term488 A B _53781 t).
Proof. exact (MK_COMB (@lem4530065 A) (@lem4530064 A B _53781 t)). Qed.
Lemma lem4530067 {A B : Type'} (_53781 : type839 A B) (t : B -> Prop) : (((_53781 t) = (term482 A B t)) = (term483 A B _53781 t)) = (((_53781 t) = (term399 A B t)) = (term488 A B _53781 t)).
Proof. exact (MK_COMB (@lem4530060 A B _53781 t) (@lem4530066 A B _53781 t)). Qed.
Lemma lem4530068 {A B : Type'} (_53781 : type839 A B) (t : B -> Prop) : ((_53781 t) = (term399 A B t)) = (term488 A B _53781 t).
Proof. exact (EQ_MP (@lem4530067 A B _53781 t) (@lem4530054 A B _53781 t)). Qed.
Lemma lem4530070 {_3571 _3575 : Type'} (s : _3575 -> _3571) (t : _3575 -> _3571) : (s = (term257 _3571 _3575 t)) = (term258 _3571 _3575 s t).
Proof. exact (EQ_MP (@lem19792 _3571 _3575 s t) (@lem0)). Qed.
Lemma lem4530071 {A B : Type'} (s : type1446 A B) (t : type1446 A B) : (s = (term489 A B t)) = (term490 A B s t).
Proof. exact (@lem4530070 (type572 A B) B s t). Qed.
Lemma lem4530072 {A B : Type'} (_53781 : type839 A B) (t : B -> Prop) (s : A -> Prop) : ((_53781 t s) = (term491 A B t s)) = (term492 A B _53781 t s).
Proof. exact (@lem4530071 A B (_53781 t s) (term402 A B t s)). Qed.
Lemma lem4530073 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (d : B) : (term404 A B t s d) = (term125 A B t s d).
Proof. exact (eq_refl (term404 A B t s d)). Qed.
Lemma lem4530074 {A B : Type'} (t : B -> Prop) (s : A -> Prop) : (term491 A B t s) = (term402 A B t s).
Proof. exact (fun_ext (fun d : B => @lem4530073 A B t s d)). Qed.
Lemma lem4530075 {A B : Type'} (_53781 : type839 A B) (t : B -> Prop) (s : A -> Prop) : (term403 A B _53781 t s) = (term403 A B _53781 t s).
Proof. exact (eq_refl (term403 A B _53781 t s)). Qed.
Lemma lem4530076 {A B : Type'} (_53781 : type839 A B) (t : B -> Prop) (s : A -> Prop) : ((_53781 t s) = (term491 A B t s)) = ((_53781 t s) = (term402 A B t s)).
Proof. exact (MK_COMB (@lem4530075 A B _53781 t s) (@lem4530074 A B t s)). Qed.
Lemma lem4530077 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4530078 {A B : Type'} (_53781 : type839 A B) (t : B -> Prop) (s : A -> Prop) : (term493 A B _53781 t s) = (term494 A B _53781 t s).
Proof. exact (MK_COMB (@lem4530077) (@lem4530076 A B _53781 t s)). Qed.
Lemma lem4530079 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (d : B) : (term404 A B t s d) = (term125 A B t s d).
Proof. exact (eq_refl (term404 A B t s d)). Qed.
Lemma lem4530080 {A B : Type'} (_53781 : type839 A B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term405 A B _53781 t s d) = (term405 A B _53781 t s d).
Proof. exact (eq_refl (term405 A B _53781 t s d)). Qed.
Lemma lem4530081 {A B : Type'} (_53781 : type839 A B) (t : B -> Prop) (s : A -> Prop) (d : B) : ((_53781 t s d) = (term404 A B t s d)) = ((_53781 t s d) = (term125 A B t s d)).
Proof. exact (MK_COMB (@lem4530080 A B _53781 t s d) (@lem4530079 A B t s d)). Qed.
Lemma lem4530082 {A B : Type'} (_53781 : type839 A B) (t : B -> Prop) (s : A -> Prop) : (term495 A B _53781 t s) = (term496 A B _53781 t s).
Proof. exact (fun_ext (fun d : B => @lem4530081 A B _53781 t s d)). Qed.
Lemma lem4530083 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem4530084 {A B : Type'} (_53781 : type839 A B) (t : B -> Prop) (s : A -> Prop) : (term492 A B _53781 t s) = (term497 A B _53781 t s).
Proof. exact (MK_COMB (@lem4530083 B) (@lem4530082 A B _53781 t s)). Qed.
Lemma lem4530085 {A B : Type'} (_53781 : type839 A B) (t : B -> Prop) (s : A -> Prop) : (((_53781 t s) = (term491 A B t s)) = (term492 A B _53781 t s)) = (((_53781 t s) = (term402 A B t s)) = (term497 A B _53781 t s)).
Proof. exact (MK_COMB (@lem4530078 A B _53781 t s) (@lem4530084 A B _53781 t s)). Qed.
Lemma lem4530086 {A B : Type'} (_53781 : type839 A B) (t : B -> Prop) (s : A -> Prop) : ((_53781 t s) = (term402 A B t s)) = (term497 A B _53781 t s).
Proof. exact (EQ_MP (@lem4530085 A B _53781 t s) (@lem4530072 A B _53781 t s)). Qed.
Lemma lem4530088 {_3571 _3575 : Type'} (s : _3575 -> _3571) (t : _3575 -> _3571) : (s = (term257 _3571 _3575 t)) = (term258 _3571 _3575 s t).
Proof. exact (EQ_MP (@lem19792 _3571 _3575 s t) (@lem0)). Qed.
Lemma lem4530089 {A B : Type'} (s : type572 A B) (t : type572 A B) : (s = (term498 A B t)) = (term499 A B s t).
Proof. exact (@lem4530088 Prop (A -> B) s t). Qed.
Lemma lem4530090 {A B : Type'} (_53781 : type839 A B) (t : B -> Prop) (s : A -> Prop) (d : B) : ((_53781 t s d) = (term500 A B t s d)) = (term501 A B _53781 t s d).
Proof. exact (@lem4530089 A B (_53781 t s d) (term125 A B t s d)). Qed.
Lemma lem4530091 {A B : Type'} (GEN_PVAR_148 : A -> B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term502 A B t s d GEN_PVAR_148) = (term124 A B GEN_PVAR_148 t s d).
Proof. exact (eq_refl (term502 A B t s d GEN_PVAR_148)). Qed.
Lemma lem4530092 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (d : B) : (term500 A B t s d) = (term125 A B t s d).
Proof. exact (fun_ext (fun GEN_PVAR_148 : A -> B => @lem4530091 A B GEN_PVAR_148 t s d)). Qed.
Lemma lem4530093 {A B : Type'} (_53781 : type839 A B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term405 A B _53781 t s d) = (term405 A B _53781 t s d).
Proof. exact (eq_refl (term405 A B _53781 t s d)). Qed.
Lemma lem4530094 {A B : Type'} (_53781 : type839 A B) (t : B -> Prop) (s : A -> Prop) (d : B) : ((_53781 t s d) = (term500 A B t s d)) = ((_53781 t s d) = (term125 A B t s d)).
Proof. exact (MK_COMB (@lem4530093 A B _53781 t s d) (@lem4530092 A B t s d)). Qed.
Lemma lem4530095 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4530096 {A B : Type'} (_53781 : type839 A B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term503 A B _53781 t s d) = (term504 A B _53781 t s d).
Proof. exact (MK_COMB (@lem4530095) (@lem4530094 A B _53781 t s d)). Qed.
Lemma lem4530097 {A B : Type'} (GEN_PVAR_148 : A -> B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term502 A B t s d GEN_PVAR_148) = (term124 A B GEN_PVAR_148 t s d).
Proof. exact (eq_refl (term502 A B t s d GEN_PVAR_148)). Qed.
Lemma lem4530098 {A B : Type'} (_53781 : type839 A B) (t : B -> Prop) (s : A -> Prop) (d : B) (GEN_PVAR_148 : A -> B) : (term505 A B _53781 t s d GEN_PVAR_148) = (term505 A B _53781 t s d GEN_PVAR_148).
Proof. exact (eq_refl (term505 A B _53781 t s d GEN_PVAR_148)). Qed.
Lemma lem4530099 {A B : Type'} (_53781 : type839 A B) (GEN_PVAR_148 : A -> B) (t : B -> Prop) (s : A -> Prop) (d : B) : ((_53781 t s d GEN_PVAR_148) = (term502 A B t s d GEN_PVAR_148)) = ((_53781 t s d GEN_PVAR_148) = (term124 A B GEN_PVAR_148 t s d)).
Proof. exact (MK_COMB (@lem4530098 A B _53781 t s d GEN_PVAR_148) (@lem4530097 A B GEN_PVAR_148 t s d)). Qed.
Lemma lem4530100 {A B : Type'} (_53781 : type839 A B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term506 A B _53781 t s d) = (term507 A B _53781 t s d).
Proof. exact (fun_ext (fun GEN_PVAR_148 : A -> B => @lem4530099 A B _53781 GEN_PVAR_148 t s d)). Qed.
Lemma lem4530101 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem4530102 {A B : Type'} (_53781 : type839 A B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term501 A B _53781 t s d) = (term508 A B _53781 t s d).
Proof. exact (MK_COMB (@lem4530101 A B) (@lem4530100 A B _53781 t s d)). Qed.
Lemma lem4530103 {A B : Type'} (_53781 : type839 A B) (t : B -> Prop) (s : A -> Prop) (d : B) : (((_53781 t s d) = (term500 A B t s d)) = (term501 A B _53781 t s d)) = (((_53781 t s d) = (term125 A B t s d)) = (term508 A B _53781 t s d)).
Proof. exact (MK_COMB (@lem4530096 A B _53781 t s d) (@lem4530102 A B _53781 t s d)). Qed.
Lemma lem4530104 {A B : Type'} (_53781 : type839 A B) (t : B -> Prop) (s : A -> Prop) (d : B) : ((_53781 t s d) = (term125 A B t s d)) = (term508 A B _53781 t s d).
Proof. exact (EQ_MP (@lem4530103 A B _53781 t s d) (@lem4530090 A B _53781 t s d)). Qed.
Lemma lem4530105 {A B : Type'} (_53781 : type839 A B) (GEN_PVAR_148 : A -> B) (t : B -> Prop) (s : A -> Prop) (d : B) : ((_53781 t s d GEN_PVAR_148) = (term124 A B GEN_PVAR_148 t s d)) = ((_53781 t s d GEN_PVAR_148) = (term124 A B GEN_PVAR_148 t s d)).
Proof. exact (eq_refl ((_53781 t s d GEN_PVAR_148) = (term124 A B GEN_PVAR_148 t s d))). Qed.
Lemma lem4530106 {A B : Type'} (_53781 : type839 A B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term507 A B _53781 t s d) = (term507 A B _53781 t s d).
Proof. exact (fun_ext (fun GEN_PVAR_148 : A -> B => @lem4530105 A B _53781 GEN_PVAR_148 t s d)). Qed.
Lemma lem4530107 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem4530108 {A B : Type'} (_53781 : type839 A B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term508 A B _53781 t s d) = (term508 A B _53781 t s d).
Proof. exact (MK_COMB (@lem4530107 A B) (@lem4530106 A B _53781 t s d)). Qed.
Lemma lem4530109 {A B : Type'} (_53781 : type839 A B) (t : B -> Prop) (s : A -> Prop) (d : B) : ((_53781 t s d) = (term125 A B t s d)) = (term508 A B _53781 t s d).
Proof. exact (TRANS (@lem4530104 A B _53781 t s d) (@lem4530108 A B _53781 t s d)). Qed.
Lemma lem4530110 {A B : Type'} (_53781 : type839 A B) (t : B -> Prop) (s : A -> Prop) : (term496 A B _53781 t s) = (term509 A B _53781 t s).
Proof. exact (fun_ext (fun d : B => @lem4530109 A B _53781 t s d)). Qed.
Lemma lem4530111 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem4530112 {A B : Type'} (_53781 : type839 A B) (t : B -> Prop) (s : A -> Prop) : (term497 A B _53781 t s) = (term510 A B _53781 t s).
Proof. exact (MK_COMB (@lem4530111 B) (@lem4530110 A B _53781 t s)). Qed.
Lemma lem4530113 {A B : Type'} (_53781 : type839 A B) (t : B -> Prop) (s : A -> Prop) : ((_53781 t s) = (term402 A B t s)) = (term510 A B _53781 t s).
Proof. exact (TRANS (@lem4530086 A B _53781 t s) (@lem4530112 A B _53781 t s)). Qed.
Lemma lem4530114 {A B : Type'} (_53781 : type839 A B) (t : B -> Prop) : (term487 A B _53781 t) = (term511 A B _53781 t).
Proof. exact (fun_ext (fun s : A -> Prop => @lem4530113 A B _53781 t s)). Qed.
Lemma lem4530115 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem4530116 {A B : Type'} (_53781 : type839 A B) (t : B -> Prop) : (term488 A B _53781 t) = (term512 A B _53781 t).
Proof. exact (MK_COMB (@lem4530115 A) (@lem4530114 A B _53781 t)). Qed.
Lemma lem4530117 {A B : Type'} (_53781 : type839 A B) (t : B -> Prop) : ((_53781 t) = (term399 A B t)) = (term512 A B _53781 t).
Proof. exact (TRANS (@lem4530068 A B _53781 t) (@lem4530116 A B _53781 t)). Qed.
Lemma lem4530118 {A B : Type'} (_53781 : type839 A B) : (term478 A B _53781) = (term513 A B _53781).
Proof. exact (fun_ext (fun t : B -> Prop => @lem4530117 A B _53781 t)). Qed.
Lemma lem4530119 {B : Type'} : (@all (B -> Prop)) = (@all (B -> Prop)).
Proof. exact (eq_refl (@all (B -> Prop))). Qed.
Lemma lem4530120 {A B : Type'} (_53781 : type839 A B) : (term479 A B _53781) = (term514 A B _53781).
Proof. exact (MK_COMB (@lem4530119 B) (@lem4530118 A B _53781)). Qed.
Lemma lem4530121 {A B : Type'} (_53781 : type839 A B) : (_53781 = (term397 A B)) = (term514 A B _53781).
Proof. exact (TRANS (@lem4530050 A B _53781) (@lem4530120 A B _53781)). Qed.
Lemma lem4530122 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4530123 {A B : Type'} (_53781 : type839 A B) : (term457 A B _53781) = (term515 A B _53781).
Proof. exact (MK_COMB (@lem4530122) (@lem4530121 A B _53781)). Qed.
Lemma lem4530124 {_100044 _107639 _107642 A B : Type'} (_53781 : type839 A B) : (term610 _100044 _107639 _107642 A B _53781) = (term610 _100044 _107639 _107642 A B _53781).
Proof. exact (eq_refl (term610 _100044 _107639 _107642 A B _53781)). Qed.
Lemma lem4530125 {_100044 _107639 _107642 A B : Type'} (_53781 : type839 A B) : (term624 _100044 _107639 _107642 A B _53781) = (term630 _100044 _107639 _107642 A B _53781).
Proof. exact (MK_COMB (@lem4530123 A B _53781) (@lem4530124 _100044 _107639 _107642 A B _53781)). Qed.
Lemma lem4530126 {_100044 _107639 _107642 A B : Type'} : (term626 _100044 _107639 _107642 A B) = (term631 _100044 _107639 _107642 A B).
Proof. exact (fun_ext (fun _53781 : type839 A B => @lem4530125 _100044 _107639 _107642 A B _53781)). Qed.
Lemma lem4530127 {A B : Type'} : (@all ((B -> Prop) -> (A -> Prop) -> B -> (A -> B) -> Prop)) = (@all ((B -> Prop) -> (A -> Prop) -> B -> (A -> B) -> Prop)).
Proof. exact (eq_refl (@all ((B -> Prop) -> (A -> Prop) -> B -> (A -> B) -> Prop))). Qed.
Lemma lem4530128 {_100044 _107639 _107642 A B : Type'} : (term628 _100044 _107639 _107642 A B) = (term632 _100044 _107639 _107642 A B).
Proof. exact (MK_COMB (@lem4530127 A B) (@lem4530126 _100044 _107639 _107642 A B)). Qed.
Lemma lem4530129 {_100044 _107639 _107642 A B : Type'} : (term616 _100044 _107639 _107642 A B) = (term616 _100044 _107639 _107642 A B).
Proof. exact (eq_refl (term616 _100044 _107639 _107642 A B)). Qed.
Lemma lem4530130 {_100044 _107639 _107642 A B : Type'} : ((term573 _100044 _107639 _107642 A B) = (term628 _100044 _107639 _107642 A B)) = ((term573 _100044 _107639 _107642 A B) = (term632 _100044 _107639 _107642 A B)).
Proof. exact (MK_COMB (@lem4530129 _100044 _107639 _107642 A B) (@lem4530128 _100044 _107639 _107642 A B)). Qed.
Lemma lem4530131 {_100044 _107639 _107642 A B : Type'} : (term573 _100044 _107639 _107642 A B) = (term632 _100044 _107639 _107642 A B).
Proof. exact (EQ_MP (@lem4530130 _100044 _107639 _107642 A B) (@lem4530032 _100044 _107639 _107642 A B)). Qed.
Lemma lem4530132 {A : Type'} (_53782 : type982 A) (h1 : _53782 = (term633 A)) : _53782 = (term633 A).
Proof. exact (h1). Qed.
Lemma lem4530133 (t : nat -> Prop) : t = t.
Proof. exact (eq_refl t). Qed.
Lemma lem4530134 {A : Type'} (t : nat -> Prop) (_53782 : type982 A) (h1 : _53782 = (term633 A)) : (_53782 t) = (term634 A t).
Proof. exact (MK_COMB (@lem4530132 A _53782 h1) (@lem4530133 t)). Qed.
Lemma lem4530135 {A : Type'} (t : nat -> Prop) : (term634 A t) = (term635 A t).
Proof. exact (eq_refl (term634 A t)). Qed.
Lemma lem4530136 {A : Type'} (_53782 : type982 A) (t : nat -> Prop) : (term636 A _53782 t) = (term636 A _53782 t).
Proof. exact (eq_refl (term636 A _53782 t)). Qed.
Lemma lem4530137 {A : Type'} (_53782 : type982 A) (t : nat -> Prop) : ((_53782 t) = (term634 A t)) = ((_53782 t) = (term635 A t)).
Proof. exact (MK_COMB (@lem4530136 A _53782 t) (@lem4530135 A t)). Qed.
Lemma lem4530138 {A : Type'} (t : nat -> Prop) (_53782 : type982 A) (h1 : _53782 = (term633 A)) : (_53782 t) = (term635 A t).
Proof. exact (EQ_MP (@lem4530137 A _53782 t) (@lem4530134 A t _53782 h1)). Qed.
Lemma lem4530139 {A : Type'} (s : A -> Prop) : s = s.
Proof. exact (eq_refl s). Qed.
Lemma lem4530140 {A : Type'} (t : nat -> Prop) (s : A -> Prop) (_53782 : type982 A) (h1 : _53782 = (term633 A)) : (_53782 t s) = (term637 A t s).
Proof. exact (MK_COMB (@lem4530138 A t _53782 h1) (@lem4530139 A s)). Qed.
Lemma lem4530141 {A : Type'} (t : nat -> Prop) (s : A -> Prop) : (term637 A t s) = (term638 A t s).
Proof. exact (eq_refl (term637 A t s)). Qed.
Lemma lem4530142 {A : Type'} (_53782 : type982 A) (t : nat -> Prop) (s : A -> Prop) : (term639 A _53782 t s) = (term639 A _53782 t s).
Proof. exact (eq_refl (term639 A _53782 t s)). Qed.
Lemma lem4530143 {A : Type'} (_53782 : type982 A) (t : nat -> Prop) (s : A -> Prop) : ((_53782 t s) = (term637 A t s)) = ((_53782 t s) = (term638 A t s)).
Proof. exact (MK_COMB (@lem4530142 A _53782 t s) (@lem4530141 A t s)). Qed.
Lemma lem4530144 {A : Type'} (t : nat -> Prop) (s : A -> Prop) (_53782 : type982 A) (h1 : _53782 = (term633 A)) : (_53782 t s) = (term638 A t s).
Proof. exact (EQ_MP (@lem4530143 A _53782 t s) (@lem4530140 A t s _53782 h1)). Qed.
Lemma lem4530145 (d : nat) : d = d.
Proof. exact (eq_refl d). Qed.
Lemma lem4530146 {A : Type'} (t : nat -> Prop) (s : A -> Prop) (d : nat) (_53782 : type982 A) (h1 : _53782 = (term633 A)) : (_53782 t s d) = (term640 A t s d).
Proof. exact (MK_COMB (@lem4530144 A t s _53782 h1) (@lem4530145 d)). Qed.
Lemma lem4530147 {A : Type'} (t : nat -> Prop) (s : A -> Prop) (d : nat) : (term640 A t s d) = (term98 A t s d).
Proof. exact (eq_refl (term640 A t s d)). Qed.
Lemma lem4530148 {A : Type'} (_53782 : type982 A) (t : nat -> Prop) (s : A -> Prop) (d : nat) : (term641 A _53782 t s d) = (term641 A _53782 t s d).
Proof. exact (eq_refl (term641 A _53782 t s d)). Qed.
Lemma lem4530149 {A : Type'} (_53782 : type982 A) (t : nat -> Prop) (s : A -> Prop) (d : nat) : ((_53782 t s d) = (term640 A t s d)) = ((_53782 t s d) = (term98 A t s d)).
Proof. exact (MK_COMB (@lem4530148 A _53782 t s d) (@lem4530147 A t s d)). Qed.
Lemma lem4530150 {A : Type'} (t : nat -> Prop) (s : A -> Prop) (d : nat) (_53782 : type982 A) (h1 : _53782 = (term633 A)) : (_53782 t s d) = (term98 A t s d).
Proof. exact (EQ_MP (@lem4530149 A _53782 t s d) (@lem4530146 A t s d _53782 h1)). Qed.
Lemma lem4530156 (n : nat) (m : nat) : (Nat.pow n m) = (Nat.pow n m).
Proof. exact (eq_refl (Nat.pow n m)). Qed.
Lemma lem4530158 {A : Type'} (t : nat -> Prop) (s : A -> Prop) (d : nat) (_53782 : type982 A) (h1 : _53782 = (term633 A)) : (term98 A t s d) = (_53782 t s d).
Proof. exact (SYM (@lem4530150 A t s d _53782 h1)). Qed.
Lemma lem4530159 {A : Type'} (t : nat -> Prop) (s : A -> Prop) (d : nat) (_53782 : type982 A) (h1 : _53782 = (term633 A)) : (term98 A t s d) = (_53782 t s d).
Proof. exact (@lem4530158 A t s d _53782 h1). Qed.
Lemma lem4530160 {A : Type'} : (@GSPEC (A -> nat)) = (@GSPEC (A -> nat)).
Proof. exact (eq_refl (@GSPEC (A -> nat))). Qed.
Lemma lem4530161 {A : Type'} (t : nat -> Prop) (s : A -> Prop) (d : nat) (_53782 : type982 A) (h1 : _53782 = (term633 A)) : (term99 A t s d) = (term642 A _53782 t s d).
Proof. exact (MK_COMB (@lem4530160 A) (@lem4530159 A t s d _53782 h1)). Qed.
Lemma lem4530162 {A : Type'} : (@HAS_SIZE (A -> nat)) = (@HAS_SIZE (A -> nat)).
Proof. exact (eq_refl (@HAS_SIZE (A -> nat))). Qed.
Lemma lem4530163 {A : Type'} (t : nat -> Prop) (s : A -> Prop) (d : nat) (_53782 : type982 A) (h1 : _53782 = (term633 A)) : (term100 A t s d) = (term643 A _53782 t s d).
Proof. exact (MK_COMB (@lem4530162 A) (@lem4530161 A t s d _53782 h1)). Qed.
Lemma lem4530164 {A : Type'} (t : nat -> Prop) (s : A -> Prop) (d : nat) (n : nat) (m : nat) (_53782 : type982 A) (h1 : _53782 = (term633 A)) : (term101 A t s d n m) = (term644 A _53782 t s d n m).
Proof. exact (MK_COMB (@lem4530163 A t s d _53782 h1) (@lem4530156 n m)). Qed.
Lemma lem4530179 {A : Type'} (s : A -> Prop) (m : nat) (t : nat -> Prop) (n : nat) : (term102 A s m t n) = (term102 A s m t n).
Proof. exact (eq_refl (term102 A s m t n)). Qed.
Lemma lem4530180 {A : Type'} (t : nat -> Prop) (s : A -> Prop) (d : nat) (n : nat) (m : nat) (_53782 : type982 A) (h1 : _53782 = (term633 A)) : (term103 A t s d n m) = (term645 A _53782 t s d n m).
Proof. exact (MK_COMB (@lem4530179 A s m t n) (@lem4530164 A t s d n m _53782 h1)). Qed.
Lemma lem4530181 {A : Type'} (t : nat -> Prop) (d : nat) (n : nat) (m : nat) (_53782 : type982 A) (h1 : _53782 = (term633 A)) : (term104 A t d n m) = (term646 A _53782 t d n m).
Proof. exact (fun_ext (fun s : A -> Prop => @lem4530180 A t s d n m _53782 h1)). Qed.
Lemma lem4530182 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem4530183 {A : Type'} (t : nat -> Prop) (d : nat) (n : nat) (m : nat) (_53782 : type982 A) (h1 : _53782 = (term633 A)) : (term105 A t d n m) = (term647 A _53782 t d n m).
Proof. exact (MK_COMB (@lem4530182 A) (@lem4530181 A t d n m _53782 h1)). Qed.
Lemma lem4530184 {A : Type'} (t : nat -> Prop) (d : nat) (n : nat) (_53782 : type982 A) (h1 : _53782 = (term633 A)) : (term106 A t d n) = (term648 A _53782 t d n).
Proof. exact (fun_ext (fun m : nat => @lem4530183 A t d n m _53782 h1)). Qed.
Lemma lem4530185 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4530186 {A : Type'} (t : nat -> Prop) (d : nat) (n : nat) (_53782 : type982 A) (h1 : _53782 = (term633 A)) : (term107 A t d n) = (term649 A _53782 t d n).
Proof. exact (MK_COMB (@lem4530185) (@lem4530184 A t d n _53782 h1)). Qed.
Lemma lem4530187 {A : Type'} (d : nat) (n : nat) (_53782 : type982 A) (h1 : _53782 = (term633 A)) : (term108 A d n) = (term650 A _53782 d n).
Proof. exact (fun_ext (fun t : nat -> Prop => @lem4530186 A t d n _53782 h1)). Qed.
Lemma lem4530188 : (@all (nat -> Prop)) = (@all (nat -> Prop)).
Proof. exact (eq_refl (@all (nat -> Prop))). Qed.
Lemma lem4530189 {A : Type'} (d : nat) (n : nat) (_53782 : type982 A) (h1 : _53782 = (term633 A)) : (term109 A d n) = (term651 A _53782 d n).
Proof. exact (MK_COMB (@lem4530188) (@lem4530187 A d n _53782 h1)). Qed.
Lemma lem4530190 {A : Type'} (d : nat) (_53782 : type982 A) (h1 : _53782 = (term633 A)) : (term110 A d) = (term652 A _53782 d).
Proof. exact (fun_ext (fun n : nat => @lem4530189 A d n _53782 h1)). Qed.
Lemma lem4530191 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4530192 {A : Type'} (d : nat) (_53782 : type982 A) (h1 : _53782 = (term633 A)) : (term111 A d) = (term653 A _53782 d).
Proof. exact (MK_COMB (@lem4530191) (@lem4530190 A d _53782 h1)). Qed.
Lemma lem4530193 {A : Type'} (_53782 : type982 A) (h1 : _53782 = (term633 A)) : (term112 A) = (term654 A _53782).
Proof. exact (fun_ext (fun d : nat => @lem4530192 A d _53782 h1)). Qed.
Lemma lem4530194 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4530195 {A : Type'} (_53782 : type982 A) (h1 : _53782 = (term633 A)) : (term13 A) = (term655 A _53782).
Proof. exact (MK_COMB (@lem4530194) (@lem4530193 A _53782 h1)). Qed.
Lemma lem4530196 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem4530197 {A : Type'} (_53782 : type982 A) (h1 : _53782 = (term633 A)) : (term24 A) = (term656 A _53782).
Proof. exact (MK_COMB (@lem4530196) (@lem4530195 A _53782 h1)). Qed.
Lemma lem4530230 {A B : Type'} (_53781 : type839 A B) (t : B -> Prop) (s : A -> Prop) (d : B) (n : nat) (m : nat) : (term409 A B _53781 t s d n m) = (term409 A B _53781 t s d n m).
Proof. exact (eq_refl (term409 A B _53781 t s d n m)). Qed.
Lemma lem4530231 {A B : Type'} (_53781 : type839 A B) (t : B -> Prop) (d : B) (n : nat) (m : nat) : (term410 A B _53781 t d n m) = (term410 A B _53781 t d n m).
Proof. exact (fun_ext (fun s : A -> Prop => @lem4530230 A B _53781 t s d n m)). Qed.
Lemma lem4530232 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem4530233 {A B : Type'} (_53781 : type839 A B) (t : B -> Prop) (d : B) (n : nat) (m : nat) : (term411 A B _53781 t d n m) = (term411 A B _53781 t d n m).
Proof. exact (MK_COMB (@lem4530232 A) (@lem4530231 A B _53781 t d n m)). Qed.
Lemma lem4530234 {A B : Type'} (_53781 : type839 A B) (t : B -> Prop) (d : B) (n : nat) : (term412 A B _53781 t d n) = (term412 A B _53781 t d n).
Proof. exact (fun_ext (fun m : nat => @lem4530233 A B _53781 t d n m)). Qed.
Lemma lem4530235 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4530236 {A B : Type'} (_53781 : type839 A B) (t : B -> Prop) (d : B) (n : nat) : (term413 A B _53781 t d n) = (term413 A B _53781 t d n).
Proof. exact (MK_COMB (@lem4530235) (@lem4530234 A B _53781 t d n)). Qed.
Lemma lem4530237 {A B : Type'} (_53781 : type839 A B) (d : B) (n : nat) : (term414 A B _53781 d n) = (term414 A B _53781 d n).
Proof. exact (fun_ext (fun t : B -> Prop => @lem4530236 A B _53781 t d n)). Qed.
Lemma lem4530238 {B : Type'} : (@all (B -> Prop)) = (@all (B -> Prop)).
Proof. exact (eq_refl (@all (B -> Prop))). Qed.
Lemma lem4530239 {A B : Type'} (_53781 : type839 A B) (d : B) (n : nat) : (term415 A B _53781 d n) = (term415 A B _53781 d n).
Proof. exact (MK_COMB (@lem4530238 B) (@lem4530237 A B _53781 d n)). Qed.
Lemma lem4530240 {A B : Type'} (_53781 : type839 A B) (d : B) : (term416 A B _53781 d) = (term416 A B _53781 d).
Proof. exact (fun_ext (fun n : nat => @lem4530239 A B _53781 d n)). Qed.
Lemma lem4530241 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4530242 {A B : Type'} (_53781 : type839 A B) (d : B) : (term417 A B _53781 d) = (term417 A B _53781 d).
Proof. exact (MK_COMB (@lem4530241) (@lem4530240 A B _53781 d)). Qed.
Lemma lem4530243 {A B : Type'} (_53781 : type839 A B) : (term418 A B _53781) = (term418 A B _53781).
Proof. exact (fun_ext (fun d : B => @lem4530242 A B _53781 d)). Qed.
Lemma lem4530244 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem4530245 {A B : Type'} (_53781 : type839 A B) : (term419 A B _53781) = (term419 A B _53781).
Proof. exact (MK_COMB (@lem4530244 B) (@lem4530243 A B _53781)). Qed.
Lemma lem4530246 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4530247 {A B : Type'} (_53781 : type839 A B) : (term420 A B _53781) = (term420 A B _53781).
Proof. exact (MK_COMB (@lem4530246) (@lem4530245 A B _53781)). Qed.
Lemma lem4530248 {A B : Type'} (_53781 : type839 A B) (_53782 : type982 A) (h1 : _53782 = (term633 A)) : (term574 A B _53781) = (term657 A B _53781 _53782).
Proof. exact (MK_COMB (@lem4530247 A B _53781) (@lem4530197 A _53782 h1)). Qed.
Lemma lem4530281 {_107642 B : Type'} (_53780 : type839 _107642 B) (t : B -> Prop) (s : _107642 -> Prop) (d : B) (n : nat) (m : nat) : (term409 _107642 B _53780 t s d n m) = (term409 _107642 B _53780 t s d n m).
Proof. exact (eq_refl (term409 _107642 B _53780 t s d n m)). Qed.
Lemma lem4530282 {_107642 B : Type'} (_53780 : type839 _107642 B) (t : B -> Prop) (d : B) (n : nat) (m : nat) : (term410 _107642 B _53780 t d n m) = (term410 _107642 B _53780 t d n m).
Proof. exact (fun_ext (fun s : _107642 -> Prop => @lem4530281 _107642 B _53780 t s d n m)). Qed.
Lemma lem4530283 {_107642 : Type'} : (@all (_107642 -> Prop)) = (@all (_107642 -> Prop)).
Proof. exact (eq_refl (@all (_107642 -> Prop))). Qed.
Lemma lem4530284 {_107642 B : Type'} (_53780 : type839 _107642 B) (t : B -> Prop) (d : B) (n : nat) (m : nat) : (term411 _107642 B _53780 t d n m) = (term411 _107642 B _53780 t d n m).
Proof. exact (MK_COMB (@lem4530283 _107642) (@lem4530282 _107642 B _53780 t d n m)). Qed.
Lemma lem4530285 {_107642 B : Type'} (_53780 : type839 _107642 B) (t : B -> Prop) (d : B) (n : nat) : (term412 _107642 B _53780 t d n) = (term412 _107642 B _53780 t d n).
Proof. exact (fun_ext (fun m : nat => @lem4530284 _107642 B _53780 t d n m)). Qed.
Lemma lem4530286 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4530287 {_107642 B : Type'} (_53780 : type839 _107642 B) (t : B -> Prop) (d : B) (n : nat) : (term413 _107642 B _53780 t d n) = (term413 _107642 B _53780 t d n).
Proof. exact (MK_COMB (@lem4530286) (@lem4530285 _107642 B _53780 t d n)). Qed.
Lemma lem4530288 {_107642 B : Type'} (_53780 : type839 _107642 B) (d : B) (n : nat) : (term414 _107642 B _53780 d n) = (term414 _107642 B _53780 d n).
Proof. exact (fun_ext (fun t : B -> Prop => @lem4530287 _107642 B _53780 t d n)). Qed.
Lemma lem4530289 {B : Type'} : (@all (B -> Prop)) = (@all (B -> Prop)).
Proof. exact (eq_refl (@all (B -> Prop))). Qed.
Lemma lem4530290 {_107642 B : Type'} (_53780 : type839 _107642 B) (d : B) (n : nat) : (term415 _107642 B _53780 d n) = (term415 _107642 B _53780 d n).
Proof. exact (MK_COMB (@lem4530289 B) (@lem4530288 _107642 B _53780 d n)). Qed.
Lemma lem4530291 {_107642 B : Type'} (_53780 : type839 _107642 B) (d : B) : (term416 _107642 B _53780 d) = (term416 _107642 B _53780 d).
Proof. exact (fun_ext (fun n : nat => @lem4530290 _107642 B _53780 d n)). Qed.
Lemma lem4530292 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4530293 {_107642 B : Type'} (_53780 : type839 _107642 B) (d : B) : (term417 _107642 B _53780 d) = (term417 _107642 B _53780 d).
Proof. exact (MK_COMB (@lem4530292) (@lem4530291 _107642 B _53780 d)). Qed.
Lemma lem4530294 {_107642 B : Type'} (_53780 : type839 _107642 B) : (term418 _107642 B _53780) = (term418 _107642 B _53780).
Proof. exact (fun_ext (fun d : B => @lem4530293 _107642 B _53780 d)). Qed.
Lemma lem4530295 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem4530296 {_107642 B : Type'} (_53780 : type839 _107642 B) : (term419 _107642 B _53780) = (term419 _107642 B _53780).
Proof. exact (MK_COMB (@lem4530295 B) (@lem4530294 _107642 B _53780)). Qed.
Lemma lem4530297 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4530298 {_107642 B : Type'} (_53780 : type839 _107642 B) : (term420 _107642 B _53780) = (term420 _107642 B _53780).
Proof. exact (MK_COMB (@lem4530297) (@lem4530296 _107642 B _53780)). Qed.
Lemma lem4530299 {_107642 A B : Type'} (_53780 : type839 _107642 B) (_53781 : type839 A B) (_53782 : type982 A) (h1 : _53782 = (term633 A)) : (term575 _107642 A B _53780 _53781) = (term658 _107642 A B _53780 _53781 _53782).
Proof. exact (MK_COMB (@lem4530298 _107642 B _53780) (@lem4530248 A B _53781 _53782 h1)). Qed.
Lemma lem4530332 {_107639 B : Type'} (_53779 : type839 _107639 B) (t : B -> Prop) (s : _107639 -> Prop) (d : B) (n : nat) (m : nat) : (term409 _107639 B _53779 t s d n m) = (term409 _107639 B _53779 t s d n m).
Proof. exact (eq_refl (term409 _107639 B _53779 t s d n m)). Qed.
Lemma lem4530333 {_107639 B : Type'} (_53779 : type839 _107639 B) (t : B -> Prop) (d : B) (n : nat) (m : nat) : (term410 _107639 B _53779 t d n m) = (term410 _107639 B _53779 t d n m).
Proof. exact (fun_ext (fun s : _107639 -> Prop => @lem4530332 _107639 B _53779 t s d n m)). Qed.
Lemma lem4530334 {_107639 : Type'} : (@all (_107639 -> Prop)) = (@all (_107639 -> Prop)).
Proof. exact (eq_refl (@all (_107639 -> Prop))). Qed.
Lemma lem4530335 {_107639 B : Type'} (_53779 : type839 _107639 B) (t : B -> Prop) (d : B) (n : nat) (m : nat) : (term411 _107639 B _53779 t d n m) = (term411 _107639 B _53779 t d n m).
Proof. exact (MK_COMB (@lem4530334 _107639) (@lem4530333 _107639 B _53779 t d n m)). Qed.
Lemma lem4530336 {_107639 B : Type'} (_53779 : type839 _107639 B) (t : B -> Prop) (d : B) (n : nat) : (term412 _107639 B _53779 t d n) = (term412 _107639 B _53779 t d n).
Proof. exact (fun_ext (fun m : nat => @lem4530335 _107639 B _53779 t d n m)). Qed.
Lemma lem4530337 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4530338 {_107639 B : Type'} (_53779 : type839 _107639 B) (t : B -> Prop) (d : B) (n : nat) : (term413 _107639 B _53779 t d n) = (term413 _107639 B _53779 t d n).
Proof. exact (MK_COMB (@lem4530337) (@lem4530336 _107639 B _53779 t d n)). Qed.
Lemma lem4530339 {_107639 B : Type'} (_53779 : type839 _107639 B) (d : B) (n : nat) : (term414 _107639 B _53779 d n) = (term414 _107639 B _53779 d n).
Proof. exact (fun_ext (fun t : B -> Prop => @lem4530338 _107639 B _53779 t d n)). Qed.
Lemma lem4530340 {B : Type'} : (@all (B -> Prop)) = (@all (B -> Prop)).
Proof. exact (eq_refl (@all (B -> Prop))). Qed.
Lemma lem4530341 {_107639 B : Type'} (_53779 : type839 _107639 B) (d : B) (n : nat) : (term415 _107639 B _53779 d n) = (term415 _107639 B _53779 d n).
Proof. exact (MK_COMB (@lem4530340 B) (@lem4530339 _107639 B _53779 d n)). Qed.
Lemma lem4530342 {_107639 B : Type'} (_53779 : type839 _107639 B) (d : B) : (term416 _107639 B _53779 d) = (term416 _107639 B _53779 d).
Proof. exact (fun_ext (fun n : nat => @lem4530341 _107639 B _53779 d n)). Qed.
Lemma lem4530343 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4530344 {_107639 B : Type'} (_53779 : type839 _107639 B) (d : B) : (term417 _107639 B _53779 d) = (term417 _107639 B _53779 d).
Proof. exact (MK_COMB (@lem4530343) (@lem4530342 _107639 B _53779 d)). Qed.
Lemma lem4530345 {_107639 B : Type'} (_53779 : type839 _107639 B) : (term418 _107639 B _53779) = (term418 _107639 B _53779).
Proof. exact (fun_ext (fun d : B => @lem4530344 _107639 B _53779 d)). Qed.
Lemma lem4530346 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem4530347 {_107639 B : Type'} (_53779 : type839 _107639 B) : (term419 _107639 B _53779) = (term419 _107639 B _53779).
Proof. exact (MK_COMB (@lem4530346 B) (@lem4530345 _107639 B _53779)). Qed.
Lemma lem4530348 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4530349 {_107639 B : Type'} (_53779 : type839 _107639 B) : (term420 _107639 B _53779) = (term420 _107639 B _53779).
Proof. exact (MK_COMB (@lem4530348) (@lem4530347 _107639 B _53779)). Qed.
Lemma lem4530350 {_107639 _107642 A B : Type'} (_53779 : type839 _107639 B) (_53780 : type839 _107642 B) (_53781 : type839 A B) (_53782 : type982 A) (h1 : _53782 = (term633 A)) : (term576 _107639 _107642 A B _53779 _53780 _53781) = (term659 _107639 _107642 A B _53779 _53780 _53781 _53782).
Proof. exact (MK_COMB (@lem4530349 _107639 B _53779) (@lem4530299 _107642 A B _53780 _53781 _53782 h1)). Qed.
Lemma lem4530383 {_107642 A : Type'} (_53778 : type656 _107642 A) (t : _107642 -> Prop) (s : A -> Prop) (d : _107642) (n : nat) (m : nat) : (term169 _107642 A _53778 t s d n m) = (term169 _107642 A _53778 t s d n m).
Proof. exact (eq_refl (term169 _107642 A _53778 t s d n m)). Qed.
Lemma lem4530384 {_107642 A : Type'} (_53778 : type656 _107642 A) (t : _107642 -> Prop) (d : _107642) (n : nat) (m : nat) : (term170 _107642 A _53778 t d n m) = (term170 _107642 A _53778 t d n m).
Proof. exact (fun_ext (fun s : A -> Prop => @lem4530383 _107642 A _53778 t s d n m)). Qed.
Lemma lem4530385 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem4530386 {_107642 A : Type'} (_53778 : type656 _107642 A) (t : _107642 -> Prop) (d : _107642) (n : nat) (m : nat) : (term171 _107642 A _53778 t d n m) = (term171 _107642 A _53778 t d n m).
Proof. exact (MK_COMB (@lem4530385 A) (@lem4530384 _107642 A _53778 t d n m)). Qed.
Lemma lem4530387 {_107642 A : Type'} (_53778 : type656 _107642 A) (t : _107642 -> Prop) (d : _107642) (n : nat) : (term172 _107642 A _53778 t d n) = (term172 _107642 A _53778 t d n).
Proof. exact (fun_ext (fun m : nat => @lem4530386 _107642 A _53778 t d n m)). Qed.
Lemma lem4530388 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4530389 {_107642 A : Type'} (_53778 : type656 _107642 A) (t : _107642 -> Prop) (d : _107642) (n : nat) : (term173 _107642 A _53778 t d n) = (term173 _107642 A _53778 t d n).
Proof. exact (MK_COMB (@lem4530388) (@lem4530387 _107642 A _53778 t d n)). Qed.
Lemma lem4530390 {_107642 A : Type'} (_53778 : type656 _107642 A) (d : _107642) (n : nat) : (term174 _107642 A _53778 d n) = (term174 _107642 A _53778 d n).
Proof. exact (fun_ext (fun t : _107642 -> Prop => @lem4530389 _107642 A _53778 t d n)). Qed.
Lemma lem4530391 {_107642 : Type'} : (@all (_107642 -> Prop)) = (@all (_107642 -> Prop)).
Proof. exact (eq_refl (@all (_107642 -> Prop))). Qed.
Lemma lem4530392 {_107642 A : Type'} (_53778 : type656 _107642 A) (d : _107642) (n : nat) : (term175 _107642 A _53778 d n) = (term175 _107642 A _53778 d n).
Proof. exact (MK_COMB (@lem4530391 _107642) (@lem4530390 _107642 A _53778 d n)). Qed.
Lemma lem4530393 {_107642 A : Type'} (_53778 : type656 _107642 A) (d : _107642) : (term176 _107642 A _53778 d) = (term176 _107642 A _53778 d).
Proof. exact (fun_ext (fun n : nat => @lem4530392 _107642 A _53778 d n)). Qed.
Lemma lem4530394 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4530395 {_107642 A : Type'} (_53778 : type656 _107642 A) (d : _107642) : (term177 _107642 A _53778 d) = (term177 _107642 A _53778 d).
Proof. exact (MK_COMB (@lem4530394) (@lem4530393 _107642 A _53778 d)). Qed.
Lemma lem4530396 {_107642 A : Type'} (_53778 : type656 _107642 A) : (term178 _107642 A _53778) = (term178 _107642 A _53778).
Proof. exact (fun_ext (fun d : _107642 => @lem4530395 _107642 A _53778 d)). Qed.
Lemma lem4530397 {_107642 : Type'} : (@all _107642) = (@all _107642).
Proof. exact (eq_refl (@all _107642)). Qed.
Lemma lem4530398 {_107642 A : Type'} (_53778 : type656 _107642 A) : (term179 _107642 A _53778) = (term179 _107642 A _53778).
Proof. exact (MK_COMB (@lem4530397 _107642) (@lem4530396 _107642 A _53778)). Qed.
Lemma lem4530399 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4530400 {_107642 A : Type'} (_53778 : type656 _107642 A) : (term180 _107642 A _53778) = (term180 _107642 A _53778).
Proof. exact (MK_COMB (@lem4530399) (@lem4530398 _107642 A _53778)). Qed.
Lemma lem4530401 {_107639 _107642 A B : Type'} (_53778 : type656 _107642 A) (_53779 : type839 _107639 B) (_53780 : type839 _107642 B) (_53781 : type839 A B) (_53782 : type982 A) (h1 : _53782 = (term633 A)) : (term577 _107639 _107642 A B _53778 _53779 _53780 _53781) = (term660 _107639 _107642 A B _53778 _53779 _53780 _53781 _53782).
Proof. exact (MK_COMB (@lem4530400 _107642 A _53778) (@lem4530350 _107639 _107642 A B _53779 _53780 _53781 _53782 h1)). Qed.
Lemma lem4530434 {_107639 A : Type'} (_53777 : type656 _107639 A) (t : _107639 -> Prop) (s : A -> Prop) (d : _107639) (n : nat) (m : nat) : (term169 _107639 A _53777 t s d n m) = (term169 _107639 A _53777 t s d n m).
Proof. exact (eq_refl (term169 _107639 A _53777 t s d n m)). Qed.
Lemma lem4530435 {_107639 A : Type'} (_53777 : type656 _107639 A) (t : _107639 -> Prop) (d : _107639) (n : nat) (m : nat) : (term170 _107639 A _53777 t d n m) = (term170 _107639 A _53777 t d n m).
Proof. exact (fun_ext (fun s : A -> Prop => @lem4530434 _107639 A _53777 t s d n m)). Qed.
Lemma lem4530436 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem4530437 {_107639 A : Type'} (_53777 : type656 _107639 A) (t : _107639 -> Prop) (d : _107639) (n : nat) (m : nat) : (term171 _107639 A _53777 t d n m) = (term171 _107639 A _53777 t d n m).
Proof. exact (MK_COMB (@lem4530436 A) (@lem4530435 _107639 A _53777 t d n m)). Qed.
Lemma lem4530438 {_107639 A : Type'} (_53777 : type656 _107639 A) (t : _107639 -> Prop) (d : _107639) (n : nat) : (term172 _107639 A _53777 t d n) = (term172 _107639 A _53777 t d n).
Proof. exact (fun_ext (fun m : nat => @lem4530437 _107639 A _53777 t d n m)). Qed.
Lemma lem4530439 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4530440 {_107639 A : Type'} (_53777 : type656 _107639 A) (t : _107639 -> Prop) (d : _107639) (n : nat) : (term173 _107639 A _53777 t d n) = (term173 _107639 A _53777 t d n).
Proof. exact (MK_COMB (@lem4530439) (@lem4530438 _107639 A _53777 t d n)). Qed.
Lemma lem4530441 {_107639 A : Type'} (_53777 : type656 _107639 A) (d : _107639) (n : nat) : (term174 _107639 A _53777 d n) = (term174 _107639 A _53777 d n).
Proof. exact (fun_ext (fun t : _107639 -> Prop => @lem4530440 _107639 A _53777 t d n)). Qed.
Lemma lem4530442 {_107639 : Type'} : (@all (_107639 -> Prop)) = (@all (_107639 -> Prop)).
Proof. exact (eq_refl (@all (_107639 -> Prop))). Qed.
Lemma lem4530443 {_107639 A : Type'} (_53777 : type656 _107639 A) (d : _107639) (n : nat) : (term175 _107639 A _53777 d n) = (term175 _107639 A _53777 d n).
Proof. exact (MK_COMB (@lem4530442 _107639) (@lem4530441 _107639 A _53777 d n)). Qed.
Lemma lem4530444 {_107639 A : Type'} (_53777 : type656 _107639 A) (d : _107639) : (term176 _107639 A _53777 d) = (term176 _107639 A _53777 d).
Proof. exact (fun_ext (fun n : nat => @lem4530443 _107639 A _53777 d n)). Qed.
Lemma lem4530445 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4530446 {_107639 A : Type'} (_53777 : type656 _107639 A) (d : _107639) : (term177 _107639 A _53777 d) = (term177 _107639 A _53777 d).
Proof. exact (MK_COMB (@lem4530445) (@lem4530444 _107639 A _53777 d)). Qed.
Lemma lem4530447 {_107639 A : Type'} (_53777 : type656 _107639 A) : (term178 _107639 A _53777) = (term178 _107639 A _53777).
Proof. exact (fun_ext (fun d : _107639 => @lem4530446 _107639 A _53777 d)). Qed.
Lemma lem4530448 {_107639 : Type'} : (@all _107639) = (@all _107639).
Proof. exact (eq_refl (@all _107639)). Qed.
Lemma lem4530449 {_107639 A : Type'} (_53777 : type656 _107639 A) : (term179 _107639 A _53777) = (term179 _107639 A _53777).
Proof. exact (MK_COMB (@lem4530448 _107639) (@lem4530447 _107639 A _53777)). Qed.
Lemma lem4530450 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4530451 {_107639 A : Type'} (_53777 : type656 _107639 A) : (term180 _107639 A _53777) = (term180 _107639 A _53777).
Proof. exact (MK_COMB (@lem4530450) (@lem4530449 _107639 A _53777)). Qed.
Lemma lem4530452 {_107639 _107642 A B : Type'} (_53777 : type656 _107639 A) (_53778 : type656 _107642 A) (_53779 : type839 _107639 B) (_53780 : type839 _107642 B) (_53781 : type839 A B) (_53782 : type982 A) (h1 : _53782 = (term633 A)) : (term578 _107639 _107642 A B _53777 _53778 _53779 _53780 _53781) = (term661 _107639 _107642 A B _53777 _53778 _53779 _53780 _53781 _53782).
Proof. exact (MK_COMB (@lem4530451 _107639 A _53777) (@lem4530401 _107639 _107642 A B _53778 _53779 _53780 _53781 _53782 h1)). Qed.
Lemma lem4530485 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (t : _107639 -> Prop) (s : _107642 -> Prop) (d : _107639) (n : nat) (m : nat) : (term169 _107639 _107642 _53776 t s d n m) = (term169 _107639 _107642 _53776 t s d n m).
Proof. exact (eq_refl (term169 _107639 _107642 _53776 t s d n m)). Qed.
Lemma lem4530486 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (t : _107639 -> Prop) (d : _107639) (n : nat) (m : nat) : (term170 _107639 _107642 _53776 t d n m) = (term170 _107639 _107642 _53776 t d n m).
Proof. exact (fun_ext (fun s : _107642 -> Prop => @lem4530485 _107639 _107642 _53776 t s d n m)). Qed.
Lemma lem4530487 {_107642 : Type'} : (@all (_107642 -> Prop)) = (@all (_107642 -> Prop)).
Proof. exact (eq_refl (@all (_107642 -> Prop))). Qed.
Lemma lem4530488 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (t : _107639 -> Prop) (d : _107639) (n : nat) (m : nat) : (term171 _107639 _107642 _53776 t d n m) = (term171 _107639 _107642 _53776 t d n m).
Proof. exact (MK_COMB (@lem4530487 _107642) (@lem4530486 _107639 _107642 _53776 t d n m)). Qed.
Lemma lem4530489 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (t : _107639 -> Prop) (d : _107639) (n : nat) : (term172 _107639 _107642 _53776 t d n) = (term172 _107639 _107642 _53776 t d n).
Proof. exact (fun_ext (fun m : nat => @lem4530488 _107639 _107642 _53776 t d n m)). Qed.
Lemma lem4530490 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4530491 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (t : _107639 -> Prop) (d : _107639) (n : nat) : (term173 _107639 _107642 _53776 t d n) = (term173 _107639 _107642 _53776 t d n).
Proof. exact (MK_COMB (@lem4530490) (@lem4530489 _107639 _107642 _53776 t d n)). Qed.
Lemma lem4530492 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (d : _107639) (n : nat) : (term174 _107639 _107642 _53776 d n) = (term174 _107639 _107642 _53776 d n).
Proof. exact (fun_ext (fun t : _107639 -> Prop => @lem4530491 _107639 _107642 _53776 t d n)). Qed.
Lemma lem4530493 {_107639 : Type'} : (@all (_107639 -> Prop)) = (@all (_107639 -> Prop)).
Proof. exact (eq_refl (@all (_107639 -> Prop))). Qed.
Lemma lem4530494 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (d : _107639) (n : nat) : (term175 _107639 _107642 _53776 d n) = (term175 _107639 _107642 _53776 d n).
Proof. exact (MK_COMB (@lem4530493 _107639) (@lem4530492 _107639 _107642 _53776 d n)). Qed.
Lemma lem4530495 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (d : _107639) : (term176 _107639 _107642 _53776 d) = (term176 _107639 _107642 _53776 d).
Proof. exact (fun_ext (fun n : nat => @lem4530494 _107639 _107642 _53776 d n)). Qed.
Lemma lem4530496 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4530497 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (d : _107639) : (term177 _107639 _107642 _53776 d) = (term177 _107639 _107642 _53776 d).
Proof. exact (MK_COMB (@lem4530496) (@lem4530495 _107639 _107642 _53776 d)). Qed.
Lemma lem4530498 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) : (term178 _107639 _107642 _53776) = (term178 _107639 _107642 _53776).
Proof. exact (fun_ext (fun d : _107639 => @lem4530497 _107639 _107642 _53776 d)). Qed.
Lemma lem4530499 {_107639 : Type'} : (@all _107639) = (@all _107639).
Proof. exact (eq_refl (@all _107639)). Qed.
Lemma lem4530500 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) : (term179 _107639 _107642 _53776) = (term179 _107639 _107642 _53776).
Proof. exact (MK_COMB (@lem4530499 _107639) (@lem4530498 _107639 _107642 _53776)). Qed.
Lemma lem4530501 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4530502 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) : (term180 _107639 _107642 _53776) = (term180 _107639 _107642 _53776).
Proof. exact (MK_COMB (@lem4530501) (@lem4530500 _107639 _107642 _53776)). Qed.
Lemma lem4530503 {_107639 _107642 A B : Type'} (_53776 : type656 _107639 _107642) (_53777 : type656 _107639 A) (_53778 : type656 _107642 A) (_53779 : type839 _107639 B) (_53780 : type839 _107642 B) (_53781 : type839 A B) (_53782 : type982 A) (h1 : _53782 = (term633 A)) : (term579 _107639 _107642 A B _53776 _53777 _53778 _53779 _53780 _53781) = (term662 _107639 _107642 A B _53776 _53777 _53778 _53779 _53780 _53781 _53782).
Proof. exact (MK_COMB (@lem4530502 _107639 _107642 _53776) (@lem4530452 _107639 _107642 A B _53777 _53778 _53779 _53780 _53781 _53782 h1)). Qed.
Lemma lem4530524 (s : nat -> Prop) (n : nat) : ((@HAS_SIZE nat s n) = (term182 s n)) = ((@HAS_SIZE nat s n) = (term182 s n)).
Proof. exact (eq_refl ((@HAS_SIZE nat s n) = (term182 s n))). Qed.
Lemma lem4530525 (s : nat -> Prop) : (term183 s) = (term183 s).
Proof. exact (fun_ext (fun n : nat => @lem4530524 s n)). Qed.
Lemma lem4530526 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4530527 (s : nat -> Prop) : (term184 s) = (term184 s).
Proof. exact (MK_COMB (@lem4530526) (@lem4530525 s)). Qed.
Lemma lem4530528 : term185 = term185.
Proof. exact (fun_ext (fun s : nat -> Prop => @lem4530527 s)). Qed.
Lemma lem4530529 : (@all (nat -> Prop)) = (@all (nat -> Prop)).
Proof. exact (eq_refl (@all (nat -> Prop))). Qed.
Lemma lem4530530 : term15 = term15.
Proof. exact (MK_COMB (@lem4530529) (@lem4530528)). Qed.
Lemma lem4530531 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4530532 : term39 = term39.
Proof. exact (MK_COMB (@lem4530531) (@lem4530530)). Qed.
Lemma lem4530533 {_107639 _107642 A B : Type'} (_53776 : type656 _107639 _107642) (_53777 : type656 _107639 A) (_53778 : type656 _107642 A) (_53779 : type839 _107639 B) (_53780 : type839 _107642 B) (_53781 : type839 A B) (_53782 : type982 A) (h1 : _53782 = (term633 A)) : (term580 _107639 _107642 A B _53776 _53777 _53778 _53779 _53780 _53781) = (term663 _107639 _107642 A B _53776 _53777 _53778 _53779 _53780 _53781 _53782).
Proof. exact (MK_COMB (@lem4530532) (@lem4530503 _107639 _107642 A B _53776 _53777 _53778 _53779 _53780 _53781 _53782 h1)). Qed.
Lemma lem4530554 {A : Type'} (s : type704 A) (n : nat) : ((@HAS_SIZE (A -> nat) s n) = (term187 A s n)) = ((@HAS_SIZE (A -> nat) s n) = (term187 A s n)).
Proof. exact (eq_refl ((@HAS_SIZE (A -> nat) s n) = (term187 A s n))). Qed.
Lemma lem4530555 {A : Type'} (s : type704 A) : (term188 A s) = (term188 A s).
Proof. exact (fun_ext (fun n : nat => @lem4530554 A s n)). Qed.
Lemma lem4530556 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4530557 {A : Type'} (s : type704 A) : (term189 A s) = (term189 A s).
Proof. exact (MK_COMB (@lem4530556) (@lem4530555 A s)). Qed.
Lemma lem4530558 {A : Type'} : (term190 A) = (term190 A).
Proof. exact (fun_ext (fun s : type704 A => @lem4530557 A s)). Qed.
Lemma lem4530559 {A : Type'} : (@all ((A -> nat) -> Prop)) = (@all ((A -> nat) -> Prop)).
Proof. exact (eq_refl (@all ((A -> nat) -> Prop))). Qed.
Lemma lem4530560 {A : Type'} : (term16 A) = (term16 A).
Proof. exact (MK_COMB (@lem4530559 A) (@lem4530558 A)). Qed.
Lemma lem4530561 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4530562 {A : Type'} : (term42 A) = (term42 A).
Proof. exact (MK_COMB (@lem4530561) (@lem4530560 A)). Qed.
Lemma lem4530563 {_107639 _107642 A B : Type'} (_53776 : type656 _107639 _107642) (_53777 : type656 _107639 A) (_53778 : type656 _107642 A) (_53779 : type839 _107639 B) (_53780 : type839 _107642 B) (_53781 : type839 A B) (_53782 : type982 A) (h1 : _53782 = (term633 A)) : (term581 _107639 _107642 A B _53776 _53777 _53778 _53779 _53780 _53781) = (term664 _107639 _107642 A B _53776 _53777 _53778 _53779 _53780 _53781 _53782).
Proof. exact (MK_COMB (@lem4530562 A) (@lem4530533 _107639 _107642 A B _53776 _53777 _53778 _53779 _53780 _53781 _53782 h1)). Qed.
Lemma lem4530584 {A B : Type'} (s : type572 A B) (n : nat) : ((@HAS_SIZE (A -> B) s n) = (term192 A B s n)) = ((@HAS_SIZE (A -> B) s n) = (term192 A B s n)).
Proof. exact (eq_refl ((@HAS_SIZE (A -> B) s n) = (term192 A B s n))). Qed.
Lemma lem4530585 {A B : Type'} (s : type572 A B) : (term193 A B s) = (term193 A B s).
Proof. exact (fun_ext (fun n : nat => @lem4530584 A B s n)). Qed.
Lemma lem4530586 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4530587 {A B : Type'} (s : type572 A B) : (term194 A B s) = (term194 A B s).
Proof. exact (MK_COMB (@lem4530586) (@lem4530585 A B s)). Qed.
Lemma lem4530588 {A B : Type'} : (term195 A B) = (term195 A B).
Proof. exact (fun_ext (fun s : type572 A B => @lem4530587 A B s)). Qed.
Lemma lem4530589 {A B : Type'} : (@all ((A -> B) -> Prop)) = (@all ((A -> B) -> Prop)).
Proof. exact (eq_refl (@all ((A -> B) -> Prop))). Qed.
Lemma lem4530590 {A B : Type'} : (term17 A B) = (term17 A B).
Proof. exact (MK_COMB (@lem4530589 A B) (@lem4530588 A B)). Qed.
Lemma lem4530591 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4530592 {A B : Type'} : (term45 A B) = (term45 A B).
Proof. exact (MK_COMB (@lem4530591) (@lem4530590 A B)). Qed.
Lemma lem4530593 {_107639 _107642 A B : Type'} (_53776 : type656 _107639 _107642) (_53777 : type656 _107639 A) (_53778 : type656 _107642 A) (_53779 : type839 _107639 B) (_53780 : type839 _107642 B) (_53781 : type839 A B) (_53782 : type982 A) (h1 : _53782 = (term633 A)) : (term582 _107639 _107642 A B _53776 _53777 _53778 _53779 _53780 _53781) = (term665 _107639 _107642 A B _53776 _53777 _53778 _53779 _53780 _53781 _53782).
Proof. exact (MK_COMB (@lem4530592 A B) (@lem4530563 _107639 _107642 A B _53776 _53777 _53778 _53779 _53780 _53781 _53782 h1)). Qed.
Lemma lem4530614 {_107642 A : Type'} (s : type805 _107642 A) (n : nat) : ((@HAS_SIZE (A -> _107642) s n) = (term197 _107642 A s n)) = ((@HAS_SIZE (A -> _107642) s n) = (term197 _107642 A s n)).
Proof. exact (eq_refl ((@HAS_SIZE (A -> _107642) s n) = (term197 _107642 A s n))). Qed.
Lemma lem4530615 {_107642 A : Type'} (s : type805 _107642 A) : (term198 _107642 A s) = (term198 _107642 A s).
Proof. exact (fun_ext (fun n : nat => @lem4530614 _107642 A s n)). Qed.
Lemma lem4530616 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4530617 {_107642 A : Type'} (s : type805 _107642 A) : (term199 _107642 A s) = (term199 _107642 A s).
Proof. exact (MK_COMB (@lem4530616) (@lem4530615 _107642 A s)). Qed.
Lemma lem4530618 {_107642 A : Type'} : (term200 _107642 A) = (term200 _107642 A).
Proof. exact (fun_ext (fun s : type805 _107642 A => @lem4530617 _107642 A s)). Qed.
Lemma lem4530619 {_107642 A : Type'} : (@all ((A -> _107642) -> Prop)) = (@all ((A -> _107642) -> Prop)).
Proof. exact (eq_refl (@all ((A -> _107642) -> Prop))). Qed.
Lemma lem4530620 {_107642 A : Type'} : (term18 _107642 A) = (term18 _107642 A).
Proof. exact (MK_COMB (@lem4530619 _107642 A) (@lem4530618 _107642 A)). Qed.
Lemma lem4530621 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4530622 {_107642 A : Type'} : (term48 _107642 A) = (term48 _107642 A).
Proof. exact (MK_COMB (@lem4530621) (@lem4530620 _107642 A)). Qed.
Lemma lem4530623 {_107639 _107642 A B : Type'} (_53776 : type656 _107639 _107642) (_53777 : type656 _107639 A) (_53778 : type656 _107642 A) (_53779 : type839 _107639 B) (_53780 : type839 _107642 B) (_53781 : type839 A B) (_53782 : type982 A) (h1 : _53782 = (term633 A)) : (term583 _107639 _107642 A B _53776 _53777 _53778 _53779 _53780 _53781) = (term666 _107639 _107642 A B _53776 _53777 _53778 _53779 _53780 _53781 _53782).
Proof. exact (MK_COMB (@lem4530622 _107642 A) (@lem4530593 _107639 _107642 A B _53776 _53777 _53778 _53779 _53780 _53781 _53782 h1)). Qed.
Lemma lem4530644 {_107639 A : Type'} (s : type805 _107639 A) (n : nat) : ((@HAS_SIZE (A -> _107639) s n) = (term197 _107639 A s n)) = ((@HAS_SIZE (A -> _107639) s n) = (term197 _107639 A s n)).
Proof. exact (eq_refl ((@HAS_SIZE (A -> _107639) s n) = (term197 _107639 A s n))). Qed.
Lemma lem4530645 {_107639 A : Type'} (s : type805 _107639 A) : (term198 _107639 A s) = (term198 _107639 A s).
Proof. exact (fun_ext (fun n : nat => @lem4530644 _107639 A s n)). Qed.
Lemma lem4530646 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4530647 {_107639 A : Type'} (s : type805 _107639 A) : (term199 _107639 A s) = (term199 _107639 A s).
Proof. exact (MK_COMB (@lem4530646) (@lem4530645 _107639 A s)). Qed.
Lemma lem4530648 {_107639 A : Type'} : (term200 _107639 A) = (term200 _107639 A).
Proof. exact (fun_ext (fun s : type805 _107639 A => @lem4530647 _107639 A s)). Qed.
Lemma lem4530649 {_107639 A : Type'} : (@all ((A -> _107639) -> Prop)) = (@all ((A -> _107639) -> Prop)).
Proof. exact (eq_refl (@all ((A -> _107639) -> Prop))). Qed.
Lemma lem4530650 {_107639 A : Type'} : (term18 _107639 A) = (term18 _107639 A).
Proof. exact (MK_COMB (@lem4530649 _107639 A) (@lem4530648 _107639 A)). Qed.
Lemma lem4530651 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4530652 {_107639 A : Type'} : (term48 _107639 A) = (term48 _107639 A).
Proof. exact (MK_COMB (@lem4530651) (@lem4530650 _107639 A)). Qed.
Lemma lem4530653 {_107639 _107642 A B : Type'} (_53776 : type656 _107639 _107642) (_53777 : type656 _107639 A) (_53778 : type656 _107642 A) (_53779 : type839 _107639 B) (_53780 : type839 _107642 B) (_53781 : type839 A B) (_53782 : type982 A) (h1 : _53782 = (term633 A)) : (term584 _107639 _107642 A B _53776 _53777 _53778 _53779 _53780 _53781) = (term667 _107639 _107642 A B _53776 _53777 _53778 _53779 _53780 _53781 _53782).
Proof. exact (MK_COMB (@lem4530652 _107639 A) (@lem4530623 _107639 _107642 A B _53776 _53777 _53778 _53779 _53780 _53781 _53782 h1)). Qed.
Lemma lem4530674 {_107642 B : Type'} (s : type572 _107642 B) (n : nat) : ((@HAS_SIZE (_107642 -> B) s n) = (term192 _107642 B s n)) = ((@HAS_SIZE (_107642 -> B) s n) = (term192 _107642 B s n)).
Proof. exact (eq_refl ((@HAS_SIZE (_107642 -> B) s n) = (term192 _107642 B s n))). Qed.
Lemma lem4530675 {_107642 B : Type'} (s : type572 _107642 B) : (term193 _107642 B s) = (term193 _107642 B s).
Proof. exact (fun_ext (fun n : nat => @lem4530674 _107642 B s n)). Qed.
Lemma lem4530676 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4530677 {_107642 B : Type'} (s : type572 _107642 B) : (term194 _107642 B s) = (term194 _107642 B s).
Proof. exact (MK_COMB (@lem4530676) (@lem4530675 _107642 B s)). Qed.
Lemma lem4530678 {_107642 B : Type'} : (term195 _107642 B) = (term195 _107642 B).
Proof. exact (fun_ext (fun s : type572 _107642 B => @lem4530677 _107642 B s)). Qed.
Lemma lem4530679 {_107642 B : Type'} : (@all ((_107642 -> B) -> Prop)) = (@all ((_107642 -> B) -> Prop)).
Proof. exact (eq_refl (@all ((_107642 -> B) -> Prop))). Qed.
Lemma lem4530680 {_107642 B : Type'} : (term17 _107642 B) = (term17 _107642 B).
Proof. exact (MK_COMB (@lem4530679 _107642 B) (@lem4530678 _107642 B)). Qed.
Lemma lem4530681 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4530682 {_107642 B : Type'} : (term45 _107642 B) = (term45 _107642 B).
Proof. exact (MK_COMB (@lem4530681) (@lem4530680 _107642 B)). Qed.
Lemma lem4530683 {_107639 _107642 A B : Type'} (_53776 : type656 _107639 _107642) (_53777 : type656 _107639 A) (_53778 : type656 _107642 A) (_53779 : type839 _107639 B) (_53780 : type839 _107642 B) (_53781 : type839 A B) (_53782 : type982 A) (h1 : _53782 = (term633 A)) : (term585 _107639 _107642 A B _53776 _53777 _53778 _53779 _53780 _53781) = (term668 _107639 _107642 A B _53776 _53777 _53778 _53779 _53780 _53781 _53782).
Proof. exact (MK_COMB (@lem4530682 _107642 B) (@lem4530653 _107639 _107642 A B _53776 _53777 _53778 _53779 _53780 _53781 _53782 h1)). Qed.
Lemma lem4530704 {_107639 _107642 : Type'} (s : type805 _107639 _107642) (n : nat) : ((@HAS_SIZE (_107642 -> _107639) s n) = (term197 _107639 _107642 s n)) = ((@HAS_SIZE (_107642 -> _107639) s n) = (term197 _107639 _107642 s n)).
Proof. exact (eq_refl ((@HAS_SIZE (_107642 -> _107639) s n) = (term197 _107639 _107642 s n))). Qed.
Lemma lem4530705 {_107639 _107642 : Type'} (s : type805 _107639 _107642) : (term198 _107639 _107642 s) = (term198 _107639 _107642 s).
Proof. exact (fun_ext (fun n : nat => @lem4530704 _107639 _107642 s n)). Qed.
Lemma lem4530706 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4530707 {_107639 _107642 : Type'} (s : type805 _107639 _107642) : (term199 _107639 _107642 s) = (term199 _107639 _107642 s).
Proof. exact (MK_COMB (@lem4530706) (@lem4530705 _107639 _107642 s)). Qed.
Lemma lem4530708 {_107639 _107642 : Type'} : (term200 _107639 _107642) = (term200 _107639 _107642).
Proof. exact (fun_ext (fun s : type805 _107639 _107642 => @lem4530707 _107639 _107642 s)). Qed.
Lemma lem4530709 {_107639 _107642 : Type'} : (@all ((_107642 -> _107639) -> Prop)) = (@all ((_107642 -> _107639) -> Prop)).
Proof. exact (eq_refl (@all ((_107642 -> _107639) -> Prop))). Qed.
Lemma lem4530710 {_107639 _107642 : Type'} : (term18 _107639 _107642) = (term18 _107639 _107642).
Proof. exact (MK_COMB (@lem4530709 _107639 _107642) (@lem4530708 _107639 _107642)). Qed.
Lemma lem4530711 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4530712 {_107639 _107642 : Type'} : (term48 _107639 _107642) = (term48 _107639 _107642).
Proof. exact (MK_COMB (@lem4530711) (@lem4530710 _107639 _107642)). Qed.
Lemma lem4530713 {_107639 _107642 A B : Type'} (_53776 : type656 _107639 _107642) (_53777 : type656 _107639 A) (_53778 : type656 _107642 A) (_53779 : type839 _107639 B) (_53780 : type839 _107642 B) (_53781 : type839 A B) (_53782 : type982 A) (h1 : _53782 = (term633 A)) : (term586 _107639 _107642 A B _53776 _53777 _53778 _53779 _53780 _53781) = (term669 _107639 _107642 A B _53776 _53777 _53778 _53779 _53780 _53781 _53782).
Proof. exact (MK_COMB (@lem4530712 _107639 _107642) (@lem4530683 _107639 _107642 A B _53776 _53777 _53778 _53779 _53780 _53781 _53782 h1)). Qed.
Lemma lem4530734 {_107639 B : Type'} (s : type572 _107639 B) (n : nat) : ((@HAS_SIZE (_107639 -> B) s n) = (term192 _107639 B s n)) = ((@HAS_SIZE (_107639 -> B) s n) = (term192 _107639 B s n)).
Proof. exact (eq_refl ((@HAS_SIZE (_107639 -> B) s n) = (term192 _107639 B s n))). Qed.
Lemma lem4530735 {_107639 B : Type'} (s : type572 _107639 B) : (term193 _107639 B s) = (term193 _107639 B s).
Proof. exact (fun_ext (fun n : nat => @lem4530734 _107639 B s n)). Qed.
Lemma lem4530736 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4530737 {_107639 B : Type'} (s : type572 _107639 B) : (term194 _107639 B s) = (term194 _107639 B s).
Proof. exact (MK_COMB (@lem4530736) (@lem4530735 _107639 B s)). Qed.
Lemma lem4530738 {_107639 B : Type'} : (term195 _107639 B) = (term195 _107639 B).
Proof. exact (fun_ext (fun s : type572 _107639 B => @lem4530737 _107639 B s)). Qed.
Lemma lem4530739 {_107639 B : Type'} : (@all ((_107639 -> B) -> Prop)) = (@all ((_107639 -> B) -> Prop)).
Proof. exact (eq_refl (@all ((_107639 -> B) -> Prop))). Qed.
Lemma lem4530740 {_107639 B : Type'} : (term17 _107639 B) = (term17 _107639 B).
Proof. exact (MK_COMB (@lem4530739 _107639 B) (@lem4530738 _107639 B)). Qed.
Lemma lem4530741 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4530742 {_107639 B : Type'} : (term45 _107639 B) = (term45 _107639 B).
Proof. exact (MK_COMB (@lem4530741) (@lem4530740 _107639 B)). Qed.
Lemma lem4530743 {_107639 _107642 A B : Type'} (_53776 : type656 _107639 _107642) (_53777 : type656 _107639 A) (_53778 : type656 _107642 A) (_53779 : type839 _107639 B) (_53780 : type839 _107642 B) (_53781 : type839 A B) (_53782 : type982 A) (h1 : _53782 = (term633 A)) : (term587 _107639 _107642 A B _53776 _53777 _53778 _53779 _53780 _53781) = (term670 _107639 _107642 A B _53776 _53777 _53778 _53779 _53780 _53781 _53782).
Proof. exact (MK_COMB (@lem4530742 _107639 B) (@lem4530713 _107639 _107642 A B _53776 _53777 _53778 _53779 _53780 _53781 _53782 h1)). Qed.
Lemma lem4530764 {B : Type'} (s : B -> Prop) (n : nat) : ((@HAS_SIZE B s n) = (term206 B s n)) = ((@HAS_SIZE B s n) = (term206 B s n)).
Proof. exact (eq_refl ((@HAS_SIZE B s n) = (term206 B s n))). Qed.
Lemma lem4530765 {B : Type'} (s : B -> Prop) : (term207 B s) = (term207 B s).
Proof. exact (fun_ext (fun n : nat => @lem4530764 B s n)). Qed.
Lemma lem4530766 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4530767 {B : Type'} (s : B -> Prop) : (term208 B s) = (term208 B s).
Proof. exact (MK_COMB (@lem4530766) (@lem4530765 B s)). Qed.
Lemma lem4530768 {B : Type'} : (term209 B) = (term209 B).
Proof. exact (fun_ext (fun s : B -> Prop => @lem4530767 B s)). Qed.
Lemma lem4530769 {B : Type'} : (@all (B -> Prop)) = (@all (B -> Prop)).
Proof. exact (eq_refl (@all (B -> Prop))). Qed.
Lemma lem4530770 {B : Type'} : (term14 B) = (term14 B).
Proof. exact (MK_COMB (@lem4530769 B) (@lem4530768 B)). Qed.
Lemma lem4530771 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4530772 {B : Type'} : (term59 B) = (term59 B).
Proof. exact (MK_COMB (@lem4530771) (@lem4530770 B)). Qed.
Lemma lem4530773 {_107639 _107642 A B : Type'} (_53776 : type656 _107639 _107642) (_53777 : type656 _107639 A) (_53778 : type656 _107642 A) (_53779 : type839 _107639 B) (_53780 : type839 _107642 B) (_53781 : type839 A B) (_53782 : type982 A) (h1 : _53782 = (term633 A)) : (term588 _107639 _107642 A B _53776 _53777 _53778 _53779 _53780 _53781) = (term671 _107639 _107642 A B _53776 _53777 _53778 _53779 _53780 _53781 _53782).
Proof. exact (MK_COMB (@lem4530772 B) (@lem4530743 _107639 _107642 A B _53776 _53777 _53778 _53779 _53780 _53781 _53782 h1)). Qed.
Lemma lem4530794 {A : Type'} (s : A -> Prop) (n : nat) : ((@HAS_SIZE A s n) = (term206 A s n)) = ((@HAS_SIZE A s n) = (term206 A s n)).
Proof. exact (eq_refl ((@HAS_SIZE A s n) = (term206 A s n))). Qed.
Lemma lem4530795 {A : Type'} (s : A -> Prop) : (term207 A s) = (term207 A s).
Proof. exact (fun_ext (fun n : nat => @lem4530794 A s n)). Qed.
Lemma lem4530796 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4530797 {A : Type'} (s : A -> Prop) : (term208 A s) = (term208 A s).
Proof. exact (MK_COMB (@lem4530796) (@lem4530795 A s)). Qed.
Lemma lem4530798 {A : Type'} : (term209 A) = (term209 A).
Proof. exact (fun_ext (fun s : A -> Prop => @lem4530797 A s)). Qed.
Lemma lem4530799 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem4530800 {A : Type'} : (term14 A) = (term14 A).
Proof. exact (MK_COMB (@lem4530799 A) (@lem4530798 A)). Qed.
Lemma lem4530801 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4530802 {A : Type'} : (term59 A) = (term59 A).
Proof. exact (MK_COMB (@lem4530801) (@lem4530800 A)). Qed.
Lemma lem4530803 {_107639 _107642 A B : Type'} (_53776 : type656 _107639 _107642) (_53777 : type656 _107639 A) (_53778 : type656 _107642 A) (_53779 : type839 _107639 B) (_53780 : type839 _107642 B) (_53781 : type839 A B) (_53782 : type982 A) (h1 : _53782 = (term633 A)) : (term589 _107639 _107642 A B _53776 _53777 _53778 _53779 _53780 _53781) = (term672 _107639 _107642 A B _53776 _53777 _53778 _53779 _53780 _53781 _53782).
Proof. exact (MK_COMB (@lem4530802 A) (@lem4530773 _107639 _107642 A B _53776 _53777 _53778 _53779 _53780 _53781 _53782 h1)). Qed.
Lemma lem4530824 {_107642 : Type'} (s : _107642 -> Prop) (n : nat) : ((@HAS_SIZE _107642 s n) = (term206 _107642 s n)) = ((@HAS_SIZE _107642 s n) = (term206 _107642 s n)).
Proof. exact (eq_refl ((@HAS_SIZE _107642 s n) = (term206 _107642 s n))). Qed.
Lemma lem4530825 {_107642 : Type'} (s : _107642 -> Prop) : (term207 _107642 s) = (term207 _107642 s).
Proof. exact (fun_ext (fun n : nat => @lem4530824 _107642 s n)). Qed.
Lemma lem4530826 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4530827 {_107642 : Type'} (s : _107642 -> Prop) : (term208 _107642 s) = (term208 _107642 s).
Proof. exact (MK_COMB (@lem4530826) (@lem4530825 _107642 s)). Qed.
Lemma lem4530828 {_107642 : Type'} : (term209 _107642) = (term209 _107642).
Proof. exact (fun_ext (fun s : _107642 -> Prop => @lem4530827 _107642 s)). Qed.
Lemma lem4530829 {_107642 : Type'} : (@all (_107642 -> Prop)) = (@all (_107642 -> Prop)).
Proof. exact (eq_refl (@all (_107642 -> Prop))). Qed.
Lemma lem4530830 {_107642 : Type'} : (term14 _107642) = (term14 _107642).
Proof. exact (MK_COMB (@lem4530829 _107642) (@lem4530828 _107642)). Qed.
Lemma lem4530831 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4530832 {_107642 : Type'} : (term59 _107642) = (term59 _107642).
Proof. exact (MK_COMB (@lem4530831) (@lem4530830 _107642)). Qed.
Lemma lem4530833 {_107639 _107642 A B : Type'} (_53776 : type656 _107639 _107642) (_53777 : type656 _107639 A) (_53778 : type656 _107642 A) (_53779 : type839 _107639 B) (_53780 : type839 _107642 B) (_53781 : type839 A B) (_53782 : type982 A) (h1 : _53782 = (term633 A)) : (term590 _107639 _107642 A B _53776 _53777 _53778 _53779 _53780 _53781) = (term673 _107639 _107642 A B _53776 _53777 _53778 _53779 _53780 _53781 _53782).
Proof. exact (MK_COMB (@lem4530832 _107642) (@lem4530803 _107639 _107642 A B _53776 _53777 _53778 _53779 _53780 _53781 _53782 h1)). Qed.
Lemma lem4530854 {_107639 : Type'} (s : _107639 -> Prop) (n : nat) : ((@HAS_SIZE _107639 s n) = (term206 _107639 s n)) = ((@HAS_SIZE _107639 s n) = (term206 _107639 s n)).
Proof. exact (eq_refl ((@HAS_SIZE _107639 s n) = (term206 _107639 s n))). Qed.
Lemma lem4530855 {_107639 : Type'} (s : _107639 -> Prop) : (term207 _107639 s) = (term207 _107639 s).
Proof. exact (fun_ext (fun n : nat => @lem4530854 _107639 s n)). Qed.
Lemma lem4530856 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4530857 {_107639 : Type'} (s : _107639 -> Prop) : (term208 _107639 s) = (term208 _107639 s).
Proof. exact (MK_COMB (@lem4530856) (@lem4530855 _107639 s)). Qed.
Lemma lem4530858 {_107639 : Type'} : (term209 _107639) = (term209 _107639).
Proof. exact (fun_ext (fun s : _107639 -> Prop => @lem4530857 _107639 s)). Qed.
Lemma lem4530859 {_107639 : Type'} : (@all (_107639 -> Prop)) = (@all (_107639 -> Prop)).
Proof. exact (eq_refl (@all (_107639 -> Prop))). Qed.
Lemma lem4530860 {_107639 : Type'} : (term14 _107639) = (term14 _107639).
Proof. exact (MK_COMB (@lem4530859 _107639) (@lem4530858 _107639)). Qed.
Lemma lem4530861 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4530862 {_107639 : Type'} : (term59 _107639) = (term59 _107639).
Proof. exact (MK_COMB (@lem4530861) (@lem4530860 _107639)). Qed.
Lemma lem4530863 {_107639 _107642 A B : Type'} (_53776 : type656 _107639 _107642) (_53777 : type656 _107639 A) (_53778 : type656 _107642 A) (_53779 : type839 _107639 B) (_53780 : type839 _107642 B) (_53781 : type839 A B) (_53782 : type982 A) (h1 : _53782 = (term633 A)) : (term591 _107639 _107642 A B _53776 _53777 _53778 _53779 _53780 _53781) = (term674 _107639 _107642 A B _53776 _53777 _53778 _53779 _53780 _53781 _53782).
Proof. exact (MK_COMB (@lem4530862 _107639) (@lem4530833 _107639 _107642 A B _53776 _53777 _53778 _53779 _53780 _53781 _53782 h1)). Qed.
Lemma lem4530884 {_100044 : Type'} (s : _100044 -> Prop) (n : nat) : ((@HAS_SIZE _100044 s n) = (term206 _100044 s n)) = ((@HAS_SIZE _100044 s n) = (term206 _100044 s n)).
Proof. exact (eq_refl ((@HAS_SIZE _100044 s n) = (term206 _100044 s n))). Qed.
Lemma lem4530885 {_100044 : Type'} (s : _100044 -> Prop) : (term207 _100044 s) = (term207 _100044 s).
Proof. exact (fun_ext (fun n : nat => @lem4530884 _100044 s n)). Qed.
Lemma lem4530886 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4530887 {_100044 : Type'} (s : _100044 -> Prop) : (term208 _100044 s) = (term208 _100044 s).
Proof. exact (MK_COMB (@lem4530886) (@lem4530885 _100044 s)). Qed.
Lemma lem4530888 {_100044 : Type'} : (term209 _100044) = (term209 _100044).
Proof. exact (fun_ext (fun s : _100044 -> Prop => @lem4530887 _100044 s)). Qed.
Lemma lem4530889 {_100044 : Type'} : (@all (_100044 -> Prop)) = (@all (_100044 -> Prop)).
Proof. exact (eq_refl (@all (_100044 -> Prop))). Qed.
Lemma lem4530890 {_100044 : Type'} : (term14 _100044) = (term14 _100044).
Proof. exact (MK_COMB (@lem4530889 _100044) (@lem4530888 _100044)). Qed.
Lemma lem4530891 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4530892 {_100044 : Type'} : (term59 _100044) = (term59 _100044).
Proof. exact (MK_COMB (@lem4530891) (@lem4530890 _100044)). Qed.
Lemma lem4530893 {_100044 _107639 _107642 A B : Type'} (_53776 : type656 _107639 _107642) (_53777 : type656 _107639 A) (_53778 : type656 _107642 A) (_53779 : type839 _107639 B) (_53780 : type839 _107642 B) (_53781 : type839 A B) (_53782 : type982 A) (h1 : _53782 = (term633 A)) : (term592 _100044 _107639 _107642 A B _53776 _53777 _53778 _53779 _53780 _53781) = (term675 _100044 _107639 _107642 A B _53776 _53777 _53778 _53779 _53780 _53781 _53782).
Proof. exact (MK_COMB (@lem4530892 _100044) (@lem4530863 _107639 _107642 A B _53776 _53777 _53778 _53779 _53780 _53781 _53782 h1)). Qed.
Lemma lem4530928 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (d : _107639) (t : _107639 -> Prop) (s : _107642 -> Prop) : (term222 _107639 _107642 _53776 d t s) = (term222 _107639 _107642 _53776 d t s).
Proof. exact (eq_refl (term222 _107639 _107642 _53776 d t s)). Qed.
Lemma lem4530929 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (d : _107639) (s : _107642 -> Prop) : (term224 _107639 _107642 _53776 d s) = (term224 _107639 _107642 _53776 d s).
Proof. exact (fun_ext (fun t : _107639 -> Prop => @lem4530928 _107639 _107642 _53776 d t s)). Qed.
Lemma lem4530930 {_107639 : Type'} : (@all (_107639 -> Prop)) = (@all (_107639 -> Prop)).
Proof. exact (eq_refl (@all (_107639 -> Prop))). Qed.
Lemma lem4530931 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (d : _107639) (s : _107642 -> Prop) : (term226 _107639 _107642 _53776 d s) = (term226 _107639 _107642 _53776 d s).
Proof. exact (MK_COMB (@lem4530930 _107639) (@lem4530929 _107639 _107642 _53776 d s)). Qed.
Lemma lem4530932 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (d : _107639) : (term228 _107639 _107642 _53776 d) = (term228 _107639 _107642 _53776 d).
Proof. exact (fun_ext (fun s : _107642 -> Prop => @lem4530931 _107639 _107642 _53776 d s)). Qed.
Lemma lem4530933 {_107642 : Type'} : (@all (_107642 -> Prop)) = (@all (_107642 -> Prop)).
Proof. exact (eq_refl (@all (_107642 -> Prop))). Qed.
Lemma lem4530934 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (d : _107639) : (term229 _107639 _107642 _53776 d) = (term229 _107639 _107642 _53776 d).
Proof. exact (MK_COMB (@lem4530933 _107642) (@lem4530932 _107639 _107642 _53776 d)). Qed.
Lemma lem4530935 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem4530936 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (d : _107639) : (term230 _107639 _107642 _53776 d) = (term230 _107639 _107642 _53776 d).
Proof. exact (MK_COMB (@lem4530935) (@lem4530934 _107639 _107642 _53776 d)). Qed.
Lemma lem4530937 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4530938 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (d : _107639) : (term231 _107639 _107642 _53776 d) = (term231 _107639 _107642 _53776 d).
Proof. exact (MK_COMB (@lem4530937) (@lem4530936 _107639 _107642 _53776 d)). Qed.
Lemma lem4530939 {_100044 _107639 _107642 A B : Type'} (d : _107639) (_53776 : type656 _107639 _107642) (_53777 : type656 _107639 A) (_53778 : type656 _107642 A) (_53779 : type839 _107639 B) (_53780 : type839 _107642 B) (_53781 : type839 A B) (_53782 : type982 A) (h1 : _53782 = (term633 A)) : (term593 _100044 _107639 _107642 A B d _53776 _53777 _53778 _53779 _53780 _53781) = (term676 _100044 _107639 _107642 A B d _53776 _53777 _53778 _53779 _53780 _53781 _53782).
Proof. exact (MK_COMB (@lem4530938 _107639 _107642 _53776 d) (@lem4530893 _100044 _107639 _107642 A B _53776 _53777 _53778 _53779 _53780 _53781 _53782 h1)). Qed.
Lemma lem4530940 {_100044 _107639 _107642 A B : Type'} (_53776 : type656 _107639 _107642) (_53777 : type656 _107639 A) (_53778 : type656 _107642 A) (_53779 : type839 _107639 B) (_53780 : type839 _107642 B) (_53781 : type839 A B) (_53782 : type982 A) (h1 : _53782 = (term633 A)) : (term594 _100044 _107639 _107642 A B _53776 _53777 _53778 _53779 _53780 _53781) = (term677 _100044 _107639 _107642 A B _53776 _53777 _53778 _53779 _53780 _53781 _53782).
Proof. exact (fun_ext (fun d : _107639 => @lem4530939 _100044 _107639 _107642 A B d _53776 _53777 _53778 _53779 _53780 _53781 _53782 h1)). Qed.
Lemma lem4530941 {_107639 : Type'} : (@all _107639) = (@all _107639).
Proof. exact (eq_refl (@all _107639)). Qed.
Lemma lem4530942 {_100044 _107639 _107642 A B : Type'} (_53776 : type656 _107639 _107642) (_53777 : type656 _107639 A) (_53778 : type656 _107642 A) (_53779 : type839 _107639 B) (_53780 : type839 _107642 B) (_53781 : type839 A B) (_53782 : type982 A) (h1 : _53782 = (term633 A)) : (term595 _100044 _107639 _107642 A B _53776 _53777 _53778 _53779 _53780 _53781) = (term678 _100044 _107639 _107642 A B _53776 _53777 _53778 _53779 _53780 _53781 _53782).
Proof. exact (MK_COMB (@lem4530941 _107639) (@lem4530940 _100044 _107639 _107642 A B _53776 _53777 _53778 _53779 _53780 _53781 _53782 h1)). Qed.
Lemma lem4530943 {_107639 _107642 : Type'} (f : _107642 -> _107639) : f = f.
Proof. exact (eq_refl f). Qed.
Lemma lem4530960 {_107639 _107642 : Type'} (s : _107642 -> Prop) (f : _107642 -> _107639) (x : _107642) (d : _107639) : (term140 _107639 _107642 s f x d) = (term140 _107639 _107642 s f x d).
Proof. exact (eq_refl (term140 _107639 _107642 s f x d)). Qed.
Lemma lem4530961 {_107639 _107642 : Type'} (s : _107642 -> Prop) (f : _107642 -> _107639) (d : _107639) : (term141 _107639 _107642 s f d) = (term141 _107639 _107642 s f d).
Proof. exact (fun_ext (fun x : _107642 => @lem4530960 _107639 _107642 s f x d)). Qed.
Lemma lem4530962 {_107642 : Type'} : (@all _107642) = (@all _107642).
Proof. exact (eq_refl (@all _107642)). Qed.
Lemma lem4530963 {_107639 _107642 : Type'} (s : _107642 -> Prop) (f : _107642 -> _107639) (d : _107639) : (term142 _107639 _107642 s f d) = (term142 _107639 _107642 s f d).
Proof. exact (MK_COMB (@lem4530962 _107642) (@lem4530961 _107639 _107642 s f d)). Qed.
Lemma lem4530978 {_107639 _107642 : Type'} (s : _107642 -> Prop) (f : _107642 -> _107639) (x : _107642) (t : _107639 -> Prop) : (term143 _107639 _107642 s f x t) = (term143 _107639 _107642 s f x t).
Proof. exact (eq_refl (term143 _107639 _107642 s f x t)). Qed.
Lemma lem4530979 {_107639 _107642 : Type'} (s : _107642 -> Prop) (f : _107642 -> _107639) (t : _107639 -> Prop) : (term144 _107639 _107642 s f t) = (term144 _107639 _107642 s f t).
Proof. exact (fun_ext (fun x : _107642 => @lem4530978 _107639 _107642 s f x t)). Qed.
Lemma lem4530980 {_107642 : Type'} : (@all _107642) = (@all _107642).
Proof. exact (eq_refl (@all _107642)). Qed.
Lemma lem4530981 {_107639 _107642 : Type'} (s : _107642 -> Prop) (f : _107642 -> _107639) (t : _107639 -> Prop) : (term145 _107639 _107642 s f t) = (term145 _107639 _107642 s f t).
Proof. exact (MK_COMB (@lem4530980 _107642) (@lem4530979 _107639 _107642 s f t)). Qed.
Lemma lem4530982 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4530983 {_107639 _107642 : Type'} (s : _107642 -> Prop) (f : _107642 -> _107639) (t : _107639 -> Prop) : (term146 _107639 _107642 s f t) = (term146 _107639 _107642 s f t).
Proof. exact (MK_COMB (@lem4530982) (@lem4530981 _107639 _107642 s f t)). Qed.
Lemma lem4530984 {_107639 _107642 : Type'} (t : _107639 -> Prop) (s : _107642 -> Prop) (f : _107642 -> _107639) (d : _107639) : (term147 _107639 _107642 t s f d) = (term147 _107639 _107642 t s f d).
Proof. exact (MK_COMB (@lem4530983 _107639 _107642 s f t) (@lem4530963 _107639 _107642 s f d)). Qed.
Lemma lem4530987 {_107639 _107642 : Type'} (GEN_PVAR_149 : _107642 -> _107639) : (@SETSPEC (_107642 -> _107639) GEN_PVAR_149) = (@SETSPEC (_107642 -> _107639) GEN_PVAR_149).
Proof. exact (eq_refl (@SETSPEC (_107642 -> _107639) GEN_PVAR_149)). Qed.
Lemma lem4530988 {_107639 _107642 : Type'} (GEN_PVAR_149 : _107642 -> _107639) (t : _107639 -> Prop) (s : _107642 -> Prop) (f : _107642 -> _107639) (d : _107639) : (term148 _107639 _107642 GEN_PVAR_149 t s f d) = (term148 _107639 _107642 GEN_PVAR_149 t s f d).
Proof. exact (MK_COMB (@lem4530987 _107639 _107642 GEN_PVAR_149) (@lem4530984 _107639 _107642 t s f d)). Qed.
Lemma lem4530989 {_107639 _107642 : Type'} (GEN_PVAR_149 : _107642 -> _107639) (t : _107639 -> Prop) (s : _107642 -> Prop) (d : _107639) (f : _107642 -> _107639) : (term149 _107639 _107642 GEN_PVAR_149 t s d f) = (term149 _107639 _107642 GEN_PVAR_149 t s d f).
Proof. exact (MK_COMB (@lem4530988 _107639 _107642 GEN_PVAR_149 t s f d) (@lem4530943 _107639 _107642 f)). Qed.
Lemma lem4530990 {_107639 _107642 : Type'} (GEN_PVAR_149 : _107642 -> _107639) (t : _107639 -> Prop) (s : _107642 -> Prop) (d : _107639) : (term150 _107639 _107642 GEN_PVAR_149 t s d) = (term150 _107639 _107642 GEN_PVAR_149 t s d).
Proof. exact (fun_ext (fun f : _107642 -> _107639 => @lem4530989 _107639 _107642 GEN_PVAR_149 t s d f)). Qed.
Lemma lem4530991 {_107639 _107642 : Type'} : (@ex (_107642 -> _107639)) = (@ex (_107642 -> _107639)).
Proof. exact (eq_refl (@ex (_107642 -> _107639))). Qed.
Lemma lem4530992 {_107639 _107642 : Type'} (GEN_PVAR_149 : _107642 -> _107639) (t : _107639 -> Prop) (s : _107642 -> Prop) (d : _107639) : (term151 _107639 _107642 GEN_PVAR_149 t s d) = (term151 _107639 _107642 GEN_PVAR_149 t s d).
Proof. exact (MK_COMB (@lem4530991 _107639 _107642) (@lem4530990 _107639 _107642 GEN_PVAR_149 t s d)). Qed.
Lemma lem4531003 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (t : _107639 -> Prop) (s : _107642 -> Prop) (d : _107639) (GEN_PVAR_149 : _107642 -> _107639) : (term293 _107639 _107642 _53776 t s d GEN_PVAR_149) = (term293 _107639 _107642 _53776 t s d GEN_PVAR_149).
Proof. exact (eq_refl (term293 _107639 _107642 _53776 t s d GEN_PVAR_149)). Qed.
Lemma lem4531004 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (GEN_PVAR_149 : _107642 -> _107639) (t : _107639 -> Prop) (s : _107642 -> Prop) (d : _107639) : ((_53776 t s d GEN_PVAR_149) = (term151 _107639 _107642 GEN_PVAR_149 t s d)) = ((_53776 t s d GEN_PVAR_149) = (term151 _107639 _107642 GEN_PVAR_149 t s d)).
Proof. exact (MK_COMB (@lem4531003 _107639 _107642 _53776 t s d GEN_PVAR_149) (@lem4530992 _107639 _107642 GEN_PVAR_149 t s d)). Qed.
Lemma lem4531005 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (t : _107639 -> Prop) (s : _107642 -> Prop) (d : _107639) : (term295 _107639 _107642 _53776 t s d) = (term295 _107639 _107642 _53776 t s d).
Proof. exact (fun_ext (fun GEN_PVAR_149 : _107642 -> _107639 => @lem4531004 _107639 _107642 _53776 GEN_PVAR_149 t s d)). Qed.
Lemma lem4531006 {_107639 _107642 : Type'} : (@all (_107642 -> _107639)) = (@all (_107642 -> _107639)).
Proof. exact (eq_refl (@all (_107642 -> _107639))). Qed.
Lemma lem4531007 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (t : _107639 -> Prop) (s : _107642 -> Prop) (d : _107639) : (term296 _107639 _107642 _53776 t s d) = (term296 _107639 _107642 _53776 t s d).
Proof. exact (MK_COMB (@lem4531006 _107639 _107642) (@lem4531005 _107639 _107642 _53776 t s d)). Qed.
Lemma lem4531008 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (t : _107639 -> Prop) (s : _107642 -> Prop) : (term297 _107639 _107642 _53776 t s) = (term297 _107639 _107642 _53776 t s).
Proof. exact (fun_ext (fun d : _107639 => @lem4531007 _107639 _107642 _53776 t s d)). Qed.
Lemma lem4531009 {_107639 : Type'} : (@all _107639) = (@all _107639).
Proof. exact (eq_refl (@all _107639)). Qed.
Lemma lem4531010 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (t : _107639 -> Prop) (s : _107642 -> Prop) : (term298 _107639 _107642 _53776 t s) = (term298 _107639 _107642 _53776 t s).
Proof. exact (MK_COMB (@lem4531009 _107639) (@lem4531008 _107639 _107642 _53776 t s)). Qed.
Lemma lem4531011 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (t : _107639 -> Prop) : (term299 _107639 _107642 _53776 t) = (term299 _107639 _107642 _53776 t).
Proof. exact (fun_ext (fun s : _107642 -> Prop => @lem4531010 _107639 _107642 _53776 t s)). Qed.
Lemma lem4531012 {_107642 : Type'} : (@all (_107642 -> Prop)) = (@all (_107642 -> Prop)).
Proof. exact (eq_refl (@all (_107642 -> Prop))). Qed.
Lemma lem4531013 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (t : _107639 -> Prop) : (term300 _107639 _107642 _53776 t) = (term300 _107639 _107642 _53776 t).
Proof. exact (MK_COMB (@lem4531012 _107642) (@lem4531011 _107639 _107642 _53776 t)). Qed.
Lemma lem4531014 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) : (term301 _107639 _107642 _53776) = (term301 _107639 _107642 _53776).
Proof. exact (fun_ext (fun t : _107639 -> Prop => @lem4531013 _107639 _107642 _53776 t)). Qed.
Lemma lem4531015 {_107639 : Type'} : (@all (_107639 -> Prop)) = (@all (_107639 -> Prop)).
Proof. exact (eq_refl (@all (_107639 -> Prop))). Qed.
Lemma lem4531016 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) : (term302 _107639 _107642 _53776) = (term302 _107639 _107642 _53776).
Proof. exact (MK_COMB (@lem4531015 _107639) (@lem4531014 _107639 _107642 _53776)). Qed.
Lemma lem4531017 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4531018 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) : (term303 _107639 _107642 _53776) = (term303 _107639 _107642 _53776).
Proof. exact (MK_COMB (@lem4531017) (@lem4531016 _107639 _107642 _53776)). Qed.
Lemma lem4531019 {_100044 _107639 _107642 A B : Type'} (_53776 : type656 _107639 _107642) (_53777 : type656 _107639 A) (_53778 : type656 _107642 A) (_53779 : type839 _107639 B) (_53780 : type839 _107642 B) (_53781 : type839 A B) (_53782 : type982 A) (h1 : _53782 = (term633 A)) : (term596 _100044 _107639 _107642 A B _53776 _53777 _53778 _53779 _53780 _53781) = (term679 _100044 _107639 _107642 A B _53776 _53777 _53778 _53779 _53780 _53781 _53782).
Proof. exact (MK_COMB (@lem4531018 _107639 _107642 _53776) (@lem4530942 _100044 _107639 _107642 A B _53776 _53777 _53778 _53779 _53780 _53781 _53782 h1)). Qed.
Lemma lem4531020 {_100044 _107639 _107642 A B : Type'} (_53777 : type656 _107639 A) (_53778 : type656 _107642 A) (_53779 : type839 _107639 B) (_53780 : type839 _107642 B) (_53781 : type839 A B) (_53782 : type982 A) (h1 : _53782 = (term633 A)) : (term597 _100044 _107639 _107642 A B _53777 _53778 _53779 _53780 _53781) = (term680 _100044 _107639 _107642 A B _53777 _53778 _53779 _53780 _53781 _53782).
Proof. exact (fun_ext (fun _53776 : type656 _107639 _107642 => @lem4531019 _100044 _107639 _107642 A B _53776 _53777 _53778 _53779 _53780 _53781 _53782 h1)). Qed.
Lemma lem4531021 {_107639 _107642 : Type'} : (@all ((_107639 -> Prop) -> (_107642 -> Prop) -> _107639 -> (_107642 -> _107639) -> Prop)) = (@all ((_107639 -> Prop) -> (_107642 -> Prop) -> _107639 -> (_107642 -> _107639) -> Prop)).
Proof. exact (eq_refl (@all ((_107639 -> Prop) -> (_107642 -> Prop) -> _107639 -> (_107642 -> _107639) -> Prop))). Qed.
Lemma lem4531022 {_100044 _107639 _107642 A B : Type'} (_53777 : type656 _107639 A) (_53778 : type656 _107642 A) (_53779 : type839 _107639 B) (_53780 : type839 _107642 B) (_53781 : type839 A B) (_53782 : type982 A) (h1 : _53782 = (term633 A)) : (term598 _100044 _107639 _107642 A B _53777 _53778 _53779 _53780 _53781) = (term681 _100044 _107639 _107642 A B _53777 _53778 _53779 _53780 _53781 _53782).
Proof. exact (MK_COMB (@lem4531021 _107639 _107642) (@lem4531020 _100044 _107639 _107642 A B _53777 _53778 _53779 _53780 _53781 _53782 h1)). Qed.
Lemma lem4531023 {_107639 A : Type'} (f : A -> _107639) : f = f.
Proof. exact (eq_refl f). Qed.
Lemma lem4531040 {_107639 A : Type'} (s : A -> Prop) (f : A -> _107639) (x : A) (d : _107639) : (term140 _107639 A s f x d) = (term140 _107639 A s f x d).
Proof. exact (eq_refl (term140 _107639 A s f x d)). Qed.
Lemma lem4531041 {_107639 A : Type'} (s : A -> Prop) (f : A -> _107639) (d : _107639) : (term141 _107639 A s f d) = (term141 _107639 A s f d).
Proof. exact (fun_ext (fun x : A => @lem4531040 _107639 A s f x d)). Qed.
Lemma lem4531042 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem4531043 {_107639 A : Type'} (s : A -> Prop) (f : A -> _107639) (d : _107639) : (term142 _107639 A s f d) = (term142 _107639 A s f d).
Proof. exact (MK_COMB (@lem4531042 A) (@lem4531041 _107639 A s f d)). Qed.
Lemma lem4531058 {_107639 A : Type'} (s : A -> Prop) (f : A -> _107639) (x : A) (t : _107639 -> Prop) : (term143 _107639 A s f x t) = (term143 _107639 A s f x t).
Proof. exact (eq_refl (term143 _107639 A s f x t)). Qed.
Lemma lem4531059 {_107639 A : Type'} (s : A -> Prop) (f : A -> _107639) (t : _107639 -> Prop) : (term144 _107639 A s f t) = (term144 _107639 A s f t).
Proof. exact (fun_ext (fun x : A => @lem4531058 _107639 A s f x t)). Qed.
Lemma lem4531060 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem4531061 {_107639 A : Type'} (s : A -> Prop) (f : A -> _107639) (t : _107639 -> Prop) : (term145 _107639 A s f t) = (term145 _107639 A s f t).
Proof. exact (MK_COMB (@lem4531060 A) (@lem4531059 _107639 A s f t)). Qed.
Lemma lem4531062 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4531063 {_107639 A : Type'} (s : A -> Prop) (f : A -> _107639) (t : _107639 -> Prop) : (term146 _107639 A s f t) = (term146 _107639 A s f t).
Proof. exact (MK_COMB (@lem4531062) (@lem4531061 _107639 A s f t)). Qed.
Lemma lem4531064 {_107639 A : Type'} (t : _107639 -> Prop) (s : A -> Prop) (f : A -> _107639) (d : _107639) : (term147 _107639 A t s f d) = (term147 _107639 A t s f d).
Proof. exact (MK_COMB (@lem4531063 _107639 A s f t) (@lem4531043 _107639 A s f d)). Qed.
Lemma lem4531067 {_107639 A : Type'} (GEN_PVAR_148 : A -> _107639) : (@SETSPEC (A -> _107639) GEN_PVAR_148) = (@SETSPEC (A -> _107639) GEN_PVAR_148).
Proof. exact (eq_refl (@SETSPEC (A -> _107639) GEN_PVAR_148)). Qed.
Lemma lem4531068 {_107639 A : Type'} (GEN_PVAR_148 : A -> _107639) (t : _107639 -> Prop) (s : A -> Prop) (f : A -> _107639) (d : _107639) : (term148 _107639 A GEN_PVAR_148 t s f d) = (term148 _107639 A GEN_PVAR_148 t s f d).
Proof. exact (MK_COMB (@lem4531067 _107639 A GEN_PVAR_148) (@lem4531064 _107639 A t s f d)). Qed.
Lemma lem4531069 {_107639 A : Type'} (GEN_PVAR_148 : A -> _107639) (t : _107639 -> Prop) (s : A -> Prop) (d : _107639) (f : A -> _107639) : (term149 _107639 A GEN_PVAR_148 t s d f) = (term149 _107639 A GEN_PVAR_148 t s d f).
Proof. exact (MK_COMB (@lem4531068 _107639 A GEN_PVAR_148 t s f d) (@lem4531023 _107639 A f)). Qed.
Lemma lem4531070 {_107639 A : Type'} (GEN_PVAR_148 : A -> _107639) (t : _107639 -> Prop) (s : A -> Prop) (d : _107639) : (term150 _107639 A GEN_PVAR_148 t s d) = (term150 _107639 A GEN_PVAR_148 t s d).
Proof. exact (fun_ext (fun f : A -> _107639 => @lem4531069 _107639 A GEN_PVAR_148 t s d f)). Qed.
Lemma lem4531071 {_107639 A : Type'} : (@ex (A -> _107639)) = (@ex (A -> _107639)).
Proof. exact (eq_refl (@ex (A -> _107639))). Qed.
Lemma lem4531072 {_107639 A : Type'} (GEN_PVAR_148 : A -> _107639) (t : _107639 -> Prop) (s : A -> Prop) (d : _107639) : (term151 _107639 A GEN_PVAR_148 t s d) = (term151 _107639 A GEN_PVAR_148 t s d).
Proof. exact (MK_COMB (@lem4531071 _107639 A) (@lem4531070 _107639 A GEN_PVAR_148 t s d)). Qed.
Lemma lem4531083 {_107639 A : Type'} (_53777 : type656 _107639 A) (t : _107639 -> Prop) (s : A -> Prop) (d : _107639) (GEN_PVAR_148 : A -> _107639) : (term293 _107639 A _53777 t s d GEN_PVAR_148) = (term293 _107639 A _53777 t s d GEN_PVAR_148).
Proof. exact (eq_refl (term293 _107639 A _53777 t s d GEN_PVAR_148)). Qed.
Lemma lem4531084 {_107639 A : Type'} (_53777 : type656 _107639 A) (GEN_PVAR_148 : A -> _107639) (t : _107639 -> Prop) (s : A -> Prop) (d : _107639) : ((_53777 t s d GEN_PVAR_148) = (term151 _107639 A GEN_PVAR_148 t s d)) = ((_53777 t s d GEN_PVAR_148) = (term151 _107639 A GEN_PVAR_148 t s d)).
Proof. exact (MK_COMB (@lem4531083 _107639 A _53777 t s d GEN_PVAR_148) (@lem4531072 _107639 A GEN_PVAR_148 t s d)). Qed.
Lemma lem4531085 {_107639 A : Type'} (_53777 : type656 _107639 A) (t : _107639 -> Prop) (s : A -> Prop) (d : _107639) : (term295 _107639 A _53777 t s d) = (term295 _107639 A _53777 t s d).
Proof. exact (fun_ext (fun GEN_PVAR_148 : A -> _107639 => @lem4531084 _107639 A _53777 GEN_PVAR_148 t s d)). Qed.
Lemma lem4531086 {_107639 A : Type'} : (@all (A -> _107639)) = (@all (A -> _107639)).
Proof. exact (eq_refl (@all (A -> _107639))). Qed.
Lemma lem4531087 {_107639 A : Type'} (_53777 : type656 _107639 A) (t : _107639 -> Prop) (s : A -> Prop) (d : _107639) : (term296 _107639 A _53777 t s d) = (term296 _107639 A _53777 t s d).
Proof. exact (MK_COMB (@lem4531086 _107639 A) (@lem4531085 _107639 A _53777 t s d)). Qed.
Lemma lem4531088 {_107639 A : Type'} (_53777 : type656 _107639 A) (t : _107639 -> Prop) (s : A -> Prop) : (term297 _107639 A _53777 t s) = (term297 _107639 A _53777 t s).
Proof. exact (fun_ext (fun d : _107639 => @lem4531087 _107639 A _53777 t s d)). Qed.
Lemma lem4531089 {_107639 : Type'} : (@all _107639) = (@all _107639).
Proof. exact (eq_refl (@all _107639)). Qed.
Lemma lem4531090 {_107639 A : Type'} (_53777 : type656 _107639 A) (t : _107639 -> Prop) (s : A -> Prop) : (term298 _107639 A _53777 t s) = (term298 _107639 A _53777 t s).
Proof. exact (MK_COMB (@lem4531089 _107639) (@lem4531088 _107639 A _53777 t s)). Qed.
Lemma lem4531091 {_107639 A : Type'} (_53777 : type656 _107639 A) (t : _107639 -> Prop) : (term299 _107639 A _53777 t) = (term299 _107639 A _53777 t).
Proof. exact (fun_ext (fun s : A -> Prop => @lem4531090 _107639 A _53777 t s)). Qed.
Lemma lem4531092 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem4531093 {_107639 A : Type'} (_53777 : type656 _107639 A) (t : _107639 -> Prop) : (term300 _107639 A _53777 t) = (term300 _107639 A _53777 t).
Proof. exact (MK_COMB (@lem4531092 A) (@lem4531091 _107639 A _53777 t)). Qed.
Lemma lem4531094 {_107639 A : Type'} (_53777 : type656 _107639 A) : (term301 _107639 A _53777) = (term301 _107639 A _53777).
Proof. exact (fun_ext (fun t : _107639 -> Prop => @lem4531093 _107639 A _53777 t)). Qed.
Lemma lem4531095 {_107639 : Type'} : (@all (_107639 -> Prop)) = (@all (_107639 -> Prop)).
Proof. exact (eq_refl (@all (_107639 -> Prop))). Qed.
Lemma lem4531096 {_107639 A : Type'} (_53777 : type656 _107639 A) : (term302 _107639 A _53777) = (term302 _107639 A _53777).
Proof. exact (MK_COMB (@lem4531095 _107639) (@lem4531094 _107639 A _53777)). Qed.
Lemma lem4531097 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4531098 {_107639 A : Type'} (_53777 : type656 _107639 A) : (term303 _107639 A _53777) = (term303 _107639 A _53777).
Proof. exact (MK_COMB (@lem4531097) (@lem4531096 _107639 A _53777)). Qed.
Lemma lem4531099 {_100044 _107639 _107642 A B : Type'} (_53777 : type656 _107639 A) (_53778 : type656 _107642 A) (_53779 : type839 _107639 B) (_53780 : type839 _107642 B) (_53781 : type839 A B) (_53782 : type982 A) (h1 : _53782 = (term633 A)) : (term599 _100044 _107639 _107642 A B _53777 _53778 _53779 _53780 _53781) = (term682 _100044 _107639 _107642 A B _53777 _53778 _53779 _53780 _53781 _53782).
Proof. exact (MK_COMB (@lem4531098 _107639 A _53777) (@lem4531022 _100044 _107639 _107642 A B _53777 _53778 _53779 _53780 _53781 _53782 h1)). Qed.
Lemma lem4531100 {_100044 _107639 _107642 A B : Type'} (_53778 : type656 _107642 A) (_53779 : type839 _107639 B) (_53780 : type839 _107642 B) (_53781 : type839 A B) (_53782 : type982 A) (h1 : _53782 = (term633 A)) : (term600 _100044 _107639 _107642 A B _53778 _53779 _53780 _53781) = (term683 _100044 _107639 _107642 A B _53778 _53779 _53780 _53781 _53782).
Proof. exact (fun_ext (fun _53777 : type656 _107639 A => @lem4531099 _100044 _107639 _107642 A B _53777 _53778 _53779 _53780 _53781 _53782 h1)). Qed.
Lemma lem4531101 {_107639 A : Type'} : (@all ((_107639 -> Prop) -> (A -> Prop) -> _107639 -> (A -> _107639) -> Prop)) = (@all ((_107639 -> Prop) -> (A -> Prop) -> _107639 -> (A -> _107639) -> Prop)).
Proof. exact (eq_refl (@all ((_107639 -> Prop) -> (A -> Prop) -> _107639 -> (A -> _107639) -> Prop))). Qed.
Lemma lem4531102 {_100044 _107639 _107642 A B : Type'} (_53778 : type656 _107642 A) (_53779 : type839 _107639 B) (_53780 : type839 _107642 B) (_53781 : type839 A B) (_53782 : type982 A) (h1 : _53782 = (term633 A)) : (term601 _100044 _107639 _107642 A B _53778 _53779 _53780 _53781) = (term684 _100044 _107639 _107642 A B _53778 _53779 _53780 _53781 _53782).
Proof. exact (MK_COMB (@lem4531101 _107639 A) (@lem4531100 _100044 _107639 _107642 A B _53778 _53779 _53780 _53781 _53782 h1)). Qed.
Lemma lem4531103 {_107642 A : Type'} (f : A -> _107642) : f = f.
Proof. exact (eq_refl f). Qed.
Lemma lem4531120 {_107642 A : Type'} (s : A -> Prop) (f : A -> _107642) (x : A) (d : _107642) : (term140 _107642 A s f x d) = (term140 _107642 A s f x d).
Proof. exact (eq_refl (term140 _107642 A s f x d)). Qed.
Lemma lem4531121 {_107642 A : Type'} (s : A -> Prop) (f : A -> _107642) (d : _107642) : (term141 _107642 A s f d) = (term141 _107642 A s f d).
Proof. exact (fun_ext (fun x : A => @lem4531120 _107642 A s f x d)). Qed.
Lemma lem4531122 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem4531123 {_107642 A : Type'} (s : A -> Prop) (f : A -> _107642) (d : _107642) : (term142 _107642 A s f d) = (term142 _107642 A s f d).
Proof. exact (MK_COMB (@lem4531122 A) (@lem4531121 _107642 A s f d)). Qed.
Lemma lem4531138 {_107642 A : Type'} (s : A -> Prop) (f : A -> _107642) (x : A) (t : _107642 -> Prop) : (term143 _107642 A s f x t) = (term143 _107642 A s f x t).
Proof. exact (eq_refl (term143 _107642 A s f x t)). Qed.
Lemma lem4531139 {_107642 A : Type'} (s : A -> Prop) (f : A -> _107642) (t : _107642 -> Prop) : (term144 _107642 A s f t) = (term144 _107642 A s f t).
Proof. exact (fun_ext (fun x : A => @lem4531138 _107642 A s f x t)). Qed.
Lemma lem4531140 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem4531141 {_107642 A : Type'} (s : A -> Prop) (f : A -> _107642) (t : _107642 -> Prop) : (term145 _107642 A s f t) = (term145 _107642 A s f t).
Proof. exact (MK_COMB (@lem4531140 A) (@lem4531139 _107642 A s f t)). Qed.
Lemma lem4531142 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4531143 {_107642 A : Type'} (s : A -> Prop) (f : A -> _107642) (t : _107642 -> Prop) : (term146 _107642 A s f t) = (term146 _107642 A s f t).
Proof. exact (MK_COMB (@lem4531142) (@lem4531141 _107642 A s f t)). Qed.
Lemma lem4531144 {_107642 A : Type'} (t : _107642 -> Prop) (s : A -> Prop) (f : A -> _107642) (d : _107642) : (term147 _107642 A t s f d) = (term147 _107642 A t s f d).
Proof. exact (MK_COMB (@lem4531143 _107642 A s f t) (@lem4531123 _107642 A s f d)). Qed.
Lemma lem4531147 {_107642 A : Type'} (GEN_PVAR_148 : A -> _107642) : (@SETSPEC (A -> _107642) GEN_PVAR_148) = (@SETSPEC (A -> _107642) GEN_PVAR_148).
Proof. exact (eq_refl (@SETSPEC (A -> _107642) GEN_PVAR_148)). Qed.
Lemma lem4531148 {_107642 A : Type'} (GEN_PVAR_148 : A -> _107642) (t : _107642 -> Prop) (s : A -> Prop) (f : A -> _107642) (d : _107642) : (term148 _107642 A GEN_PVAR_148 t s f d) = (term148 _107642 A GEN_PVAR_148 t s f d).
Proof. exact (MK_COMB (@lem4531147 _107642 A GEN_PVAR_148) (@lem4531144 _107642 A t s f d)). Qed.
Lemma lem4531149 {_107642 A : Type'} (GEN_PVAR_148 : A -> _107642) (t : _107642 -> Prop) (s : A -> Prop) (d : _107642) (f : A -> _107642) : (term149 _107642 A GEN_PVAR_148 t s d f) = (term149 _107642 A GEN_PVAR_148 t s d f).
Proof. exact (MK_COMB (@lem4531148 _107642 A GEN_PVAR_148 t s f d) (@lem4531103 _107642 A f)). Qed.
Lemma lem4531150 {_107642 A : Type'} (GEN_PVAR_148 : A -> _107642) (t : _107642 -> Prop) (s : A -> Prop) (d : _107642) : (term150 _107642 A GEN_PVAR_148 t s d) = (term150 _107642 A GEN_PVAR_148 t s d).
Proof. exact (fun_ext (fun f : A -> _107642 => @lem4531149 _107642 A GEN_PVAR_148 t s d f)). Qed.
Lemma lem4531151 {_107642 A : Type'} : (@ex (A -> _107642)) = (@ex (A -> _107642)).
Proof. exact (eq_refl (@ex (A -> _107642))). Qed.
Lemma lem4531152 {_107642 A : Type'} (GEN_PVAR_148 : A -> _107642) (t : _107642 -> Prop) (s : A -> Prop) (d : _107642) : (term151 _107642 A GEN_PVAR_148 t s d) = (term151 _107642 A GEN_PVAR_148 t s d).
Proof. exact (MK_COMB (@lem4531151 _107642 A) (@lem4531150 _107642 A GEN_PVAR_148 t s d)). Qed.
Lemma lem4531163 {_107642 A : Type'} (_53778 : type656 _107642 A) (t : _107642 -> Prop) (s : A -> Prop) (d : _107642) (GEN_PVAR_148 : A -> _107642) : (term293 _107642 A _53778 t s d GEN_PVAR_148) = (term293 _107642 A _53778 t s d GEN_PVAR_148).
Proof. exact (eq_refl (term293 _107642 A _53778 t s d GEN_PVAR_148)). Qed.
Lemma lem4531164 {_107642 A : Type'} (_53778 : type656 _107642 A) (GEN_PVAR_148 : A -> _107642) (t : _107642 -> Prop) (s : A -> Prop) (d : _107642) : ((_53778 t s d GEN_PVAR_148) = (term151 _107642 A GEN_PVAR_148 t s d)) = ((_53778 t s d GEN_PVAR_148) = (term151 _107642 A GEN_PVAR_148 t s d)).
Proof. exact (MK_COMB (@lem4531163 _107642 A _53778 t s d GEN_PVAR_148) (@lem4531152 _107642 A GEN_PVAR_148 t s d)). Qed.
Lemma lem4531165 {_107642 A : Type'} (_53778 : type656 _107642 A) (t : _107642 -> Prop) (s : A -> Prop) (d : _107642) : (term295 _107642 A _53778 t s d) = (term295 _107642 A _53778 t s d).
Proof. exact (fun_ext (fun GEN_PVAR_148 : A -> _107642 => @lem4531164 _107642 A _53778 GEN_PVAR_148 t s d)). Qed.
Lemma lem4531166 {_107642 A : Type'} : (@all (A -> _107642)) = (@all (A -> _107642)).
Proof. exact (eq_refl (@all (A -> _107642))). Qed.
Lemma lem4531167 {_107642 A : Type'} (_53778 : type656 _107642 A) (t : _107642 -> Prop) (s : A -> Prop) (d : _107642) : (term296 _107642 A _53778 t s d) = (term296 _107642 A _53778 t s d).
Proof. exact (MK_COMB (@lem4531166 _107642 A) (@lem4531165 _107642 A _53778 t s d)). Qed.
Lemma lem4531168 {_107642 A : Type'} (_53778 : type656 _107642 A) (t : _107642 -> Prop) (s : A -> Prop) : (term297 _107642 A _53778 t s) = (term297 _107642 A _53778 t s).
Proof. exact (fun_ext (fun d : _107642 => @lem4531167 _107642 A _53778 t s d)). Qed.
Lemma lem4531169 {_107642 : Type'} : (@all _107642) = (@all _107642).
Proof. exact (eq_refl (@all _107642)). Qed.
Lemma lem4531170 {_107642 A : Type'} (_53778 : type656 _107642 A) (t : _107642 -> Prop) (s : A -> Prop) : (term298 _107642 A _53778 t s) = (term298 _107642 A _53778 t s).
Proof. exact (MK_COMB (@lem4531169 _107642) (@lem4531168 _107642 A _53778 t s)). Qed.
Lemma lem4531171 {_107642 A : Type'} (_53778 : type656 _107642 A) (t : _107642 -> Prop) : (term299 _107642 A _53778 t) = (term299 _107642 A _53778 t).
Proof. exact (fun_ext (fun s : A -> Prop => @lem4531170 _107642 A _53778 t s)). Qed.
Lemma lem4531172 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem4531173 {_107642 A : Type'} (_53778 : type656 _107642 A) (t : _107642 -> Prop) : (term300 _107642 A _53778 t) = (term300 _107642 A _53778 t).
Proof. exact (MK_COMB (@lem4531172 A) (@lem4531171 _107642 A _53778 t)). Qed.
Lemma lem4531174 {_107642 A : Type'} (_53778 : type656 _107642 A) : (term301 _107642 A _53778) = (term301 _107642 A _53778).
Proof. exact (fun_ext (fun t : _107642 -> Prop => @lem4531173 _107642 A _53778 t)). Qed.
Lemma lem4531175 {_107642 : Type'} : (@all (_107642 -> Prop)) = (@all (_107642 -> Prop)).
Proof. exact (eq_refl (@all (_107642 -> Prop))). Qed.
Lemma lem4531176 {_107642 A : Type'} (_53778 : type656 _107642 A) : (term302 _107642 A _53778) = (term302 _107642 A _53778).
Proof. exact (MK_COMB (@lem4531175 _107642) (@lem4531174 _107642 A _53778)). Qed.
Lemma lem4531177 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4531178 {_107642 A : Type'} (_53778 : type656 _107642 A) : (term303 _107642 A _53778) = (term303 _107642 A _53778).
Proof. exact (MK_COMB (@lem4531177) (@lem4531176 _107642 A _53778)). Qed.
Lemma lem4531179 {_100044 _107639 _107642 A B : Type'} (_53778 : type656 _107642 A) (_53779 : type839 _107639 B) (_53780 : type839 _107642 B) (_53781 : type839 A B) (_53782 : type982 A) (h1 : _53782 = (term633 A)) : (term602 _100044 _107639 _107642 A B _53778 _53779 _53780 _53781) = (term685 _100044 _107639 _107642 A B _53778 _53779 _53780 _53781 _53782).
Proof. exact (MK_COMB (@lem4531178 _107642 A _53778) (@lem4531102 _100044 _107639 _107642 A B _53778 _53779 _53780 _53781 _53782 h1)). Qed.
Lemma lem4531180 {_100044 _107639 _107642 A B : Type'} (_53779 : type839 _107639 B) (_53780 : type839 _107642 B) (_53781 : type839 A B) (_53782 : type982 A) (h1 : _53782 = (term633 A)) : (term603 _100044 _107639 _107642 A B _53779 _53780 _53781) = (term686 _100044 _107639 _107642 A B _53779 _53780 _53781 _53782).
Proof. exact (fun_ext (fun _53778 : type656 _107642 A => @lem4531179 _100044 _107639 _107642 A B _53778 _53779 _53780 _53781 _53782 h1)). Qed.
Lemma lem4531181 {_107642 A : Type'} : (@all ((_107642 -> Prop) -> (A -> Prop) -> _107642 -> (A -> _107642) -> Prop)) = (@all ((_107642 -> Prop) -> (A -> Prop) -> _107642 -> (A -> _107642) -> Prop)).
Proof. exact (eq_refl (@all ((_107642 -> Prop) -> (A -> Prop) -> _107642 -> (A -> _107642) -> Prop))). Qed.
Lemma lem4531182 {_100044 _107639 _107642 A B : Type'} (_53779 : type839 _107639 B) (_53780 : type839 _107642 B) (_53781 : type839 A B) (_53782 : type982 A) (h1 : _53782 = (term633 A)) : (term604 _100044 _107639 _107642 A B _53779 _53780 _53781) = (term687 _100044 _107639 _107642 A B _53779 _53780 _53781 _53782).
Proof. exact (MK_COMB (@lem4531181 _107642 A) (@lem4531180 _100044 _107639 _107642 A B _53779 _53780 _53781 _53782 h1)). Qed.
Lemma lem4531183 {_107639 B : Type'} (f : _107639 -> B) : f = f.
Proof. exact (eq_refl f). Qed.
Lemma lem4531200 {_107639 B : Type'} (s : _107639 -> Prop) (f : _107639 -> B) (x : _107639) (d : B) : (term113 _107639 B s f x d) = (term113 _107639 B s f x d).
Proof. exact (eq_refl (term113 _107639 B s f x d)). Qed.
Lemma lem4531201 {_107639 B : Type'} (s : _107639 -> Prop) (f : _107639 -> B) (d : B) : (term114 _107639 B s f d) = (term114 _107639 B s f d).
Proof. exact (fun_ext (fun x : _107639 => @lem4531200 _107639 B s f x d)). Qed.
Lemma lem4531202 {_107639 : Type'} : (@all _107639) = (@all _107639).
Proof. exact (eq_refl (@all _107639)). Qed.
Lemma lem4531203 {_107639 B : Type'} (s : _107639 -> Prop) (f : _107639 -> B) (d : B) : (term115 _107639 B s f d) = (term115 _107639 B s f d).
Proof. exact (MK_COMB (@lem4531202 _107639) (@lem4531201 _107639 B s f d)). Qed.
Lemma lem4531218 {_107639 B : Type'} (s : _107639 -> Prop) (f : _107639 -> B) (x : _107639) (t : B -> Prop) : (term116 _107639 B s f x t) = (term116 _107639 B s f x t).
Proof. exact (eq_refl (term116 _107639 B s f x t)). Qed.
Lemma lem4531219 {_107639 B : Type'} (s : _107639 -> Prop) (f : _107639 -> B) (t : B -> Prop) : (term117 _107639 B s f t) = (term117 _107639 B s f t).
Proof. exact (fun_ext (fun x : _107639 => @lem4531218 _107639 B s f x t)). Qed.
Lemma lem4531220 {_107639 : Type'} : (@all _107639) = (@all _107639).
Proof. exact (eq_refl (@all _107639)). Qed.
Lemma lem4531221 {_107639 B : Type'} (s : _107639 -> Prop) (f : _107639 -> B) (t : B -> Prop) : (term118 _107639 B s f t) = (term118 _107639 B s f t).
Proof. exact (MK_COMB (@lem4531220 _107639) (@lem4531219 _107639 B s f t)). Qed.
Lemma lem4531222 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4531223 {_107639 B : Type'} (s : _107639 -> Prop) (f : _107639 -> B) (t : B -> Prop) : (term119 _107639 B s f t) = (term119 _107639 B s f t).
Proof. exact (MK_COMB (@lem4531222) (@lem4531221 _107639 B s f t)). Qed.
Lemma lem4531224 {_107639 B : Type'} (t : B -> Prop) (s : _107639 -> Prop) (f : _107639 -> B) (d : B) : (term120 _107639 B t s f d) = (term120 _107639 B t s f d).
Proof. exact (MK_COMB (@lem4531223 _107639 B s f t) (@lem4531203 _107639 B s f d)). Qed.
Lemma lem4531227 {_107639 B : Type'} (GEN_PVAR_148 : _107639 -> B) : (@SETSPEC (_107639 -> B) GEN_PVAR_148) = (@SETSPEC (_107639 -> B) GEN_PVAR_148).
Proof. exact (eq_refl (@SETSPEC (_107639 -> B) GEN_PVAR_148)). Qed.
Lemma lem4531228 {_107639 B : Type'} (GEN_PVAR_148 : _107639 -> B) (t : B -> Prop) (s : _107639 -> Prop) (f : _107639 -> B) (d : B) : (term121 _107639 B GEN_PVAR_148 t s f d) = (term121 _107639 B GEN_PVAR_148 t s f d).
Proof. exact (MK_COMB (@lem4531227 _107639 B GEN_PVAR_148) (@lem4531224 _107639 B t s f d)). Qed.
Lemma lem4531229 {_107639 B : Type'} (GEN_PVAR_148 : _107639 -> B) (t : B -> Prop) (s : _107639 -> Prop) (d : B) (f : _107639 -> B) : (term122 _107639 B GEN_PVAR_148 t s d f) = (term122 _107639 B GEN_PVAR_148 t s d f).
Proof. exact (MK_COMB (@lem4531228 _107639 B GEN_PVAR_148 t s f d) (@lem4531183 _107639 B f)). Qed.
Lemma lem4531230 {_107639 B : Type'} (GEN_PVAR_148 : _107639 -> B) (t : B -> Prop) (s : _107639 -> Prop) (d : B) : (term123 _107639 B GEN_PVAR_148 t s d) = (term123 _107639 B GEN_PVAR_148 t s d).
Proof. exact (fun_ext (fun f : _107639 -> B => @lem4531229 _107639 B GEN_PVAR_148 t s d f)). Qed.
Lemma lem4531231 {_107639 B : Type'} : (@ex (_107639 -> B)) = (@ex (_107639 -> B)).
Proof. exact (eq_refl (@ex (_107639 -> B))). Qed.
Lemma lem4531232 {_107639 B : Type'} (GEN_PVAR_148 : _107639 -> B) (t : B -> Prop) (s : _107639 -> Prop) (d : B) : (term124 _107639 B GEN_PVAR_148 t s d) = (term124 _107639 B GEN_PVAR_148 t s d).
Proof. exact (MK_COMB (@lem4531231 _107639 B) (@lem4531230 _107639 B GEN_PVAR_148 t s d)). Qed.
Lemma lem4531243 {_107639 B : Type'} (_53779 : type839 _107639 B) (t : B -> Prop) (s : _107639 -> Prop) (d : B) (GEN_PVAR_148 : _107639 -> B) : (term505 _107639 B _53779 t s d GEN_PVAR_148) = (term505 _107639 B _53779 t s d GEN_PVAR_148).
Proof. exact (eq_refl (term505 _107639 B _53779 t s d GEN_PVAR_148)). Qed.
Lemma lem4531244 {_107639 B : Type'} (_53779 : type839 _107639 B) (GEN_PVAR_148 : _107639 -> B) (t : B -> Prop) (s : _107639 -> Prop) (d : B) : ((_53779 t s d GEN_PVAR_148) = (term124 _107639 B GEN_PVAR_148 t s d)) = ((_53779 t s d GEN_PVAR_148) = (term124 _107639 B GEN_PVAR_148 t s d)).
Proof. exact (MK_COMB (@lem4531243 _107639 B _53779 t s d GEN_PVAR_148) (@lem4531232 _107639 B GEN_PVAR_148 t s d)). Qed.
Lemma lem4531245 {_107639 B : Type'} (_53779 : type839 _107639 B) (t : B -> Prop) (s : _107639 -> Prop) (d : B) : (term507 _107639 B _53779 t s d) = (term507 _107639 B _53779 t s d).
Proof. exact (fun_ext (fun GEN_PVAR_148 : _107639 -> B => @lem4531244 _107639 B _53779 GEN_PVAR_148 t s d)). Qed.
Lemma lem4531246 {_107639 B : Type'} : (@all (_107639 -> B)) = (@all (_107639 -> B)).
Proof. exact (eq_refl (@all (_107639 -> B))). Qed.
Lemma lem4531247 {_107639 B : Type'} (_53779 : type839 _107639 B) (t : B -> Prop) (s : _107639 -> Prop) (d : B) : (term508 _107639 B _53779 t s d) = (term508 _107639 B _53779 t s d).
Proof. exact (MK_COMB (@lem4531246 _107639 B) (@lem4531245 _107639 B _53779 t s d)). Qed.
Lemma lem4531248 {_107639 B : Type'} (_53779 : type839 _107639 B) (t : B -> Prop) (s : _107639 -> Prop) : (term509 _107639 B _53779 t s) = (term509 _107639 B _53779 t s).
Proof. exact (fun_ext (fun d : B => @lem4531247 _107639 B _53779 t s d)). Qed.
Lemma lem4531249 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem4531250 {_107639 B : Type'} (_53779 : type839 _107639 B) (t : B -> Prop) (s : _107639 -> Prop) : (term510 _107639 B _53779 t s) = (term510 _107639 B _53779 t s).
Proof. exact (MK_COMB (@lem4531249 B) (@lem4531248 _107639 B _53779 t s)). Qed.
Lemma lem4531251 {_107639 B : Type'} (_53779 : type839 _107639 B) (t : B -> Prop) : (term511 _107639 B _53779 t) = (term511 _107639 B _53779 t).
Proof. exact (fun_ext (fun s : _107639 -> Prop => @lem4531250 _107639 B _53779 t s)). Qed.
Lemma lem4531252 {_107639 : Type'} : (@all (_107639 -> Prop)) = (@all (_107639 -> Prop)).
Proof. exact (eq_refl (@all (_107639 -> Prop))). Qed.
Lemma lem4531253 {_107639 B : Type'} (_53779 : type839 _107639 B) (t : B -> Prop) : (term512 _107639 B _53779 t) = (term512 _107639 B _53779 t).
Proof. exact (MK_COMB (@lem4531252 _107639) (@lem4531251 _107639 B _53779 t)). Qed.
Lemma lem4531254 {_107639 B : Type'} (_53779 : type839 _107639 B) : (term513 _107639 B _53779) = (term513 _107639 B _53779).
Proof. exact (fun_ext (fun t : B -> Prop => @lem4531253 _107639 B _53779 t)). Qed.
Lemma lem4531255 {B : Type'} : (@all (B -> Prop)) = (@all (B -> Prop)).
Proof. exact (eq_refl (@all (B -> Prop))). Qed.
Lemma lem4531256 {_107639 B : Type'} (_53779 : type839 _107639 B) : (term514 _107639 B _53779) = (term514 _107639 B _53779).
Proof. exact (MK_COMB (@lem4531255 B) (@lem4531254 _107639 B _53779)). Qed.
Lemma lem4531257 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4531258 {_107639 B : Type'} (_53779 : type839 _107639 B) : (term515 _107639 B _53779) = (term515 _107639 B _53779).
Proof. exact (MK_COMB (@lem4531257) (@lem4531256 _107639 B _53779)). Qed.
Lemma lem4531259 {_100044 _107639 _107642 A B : Type'} (_53779 : type839 _107639 B) (_53780 : type839 _107642 B) (_53781 : type839 A B) (_53782 : type982 A) (h1 : _53782 = (term633 A)) : (term605 _100044 _107639 _107642 A B _53779 _53780 _53781) = (term688 _100044 _107639 _107642 A B _53779 _53780 _53781 _53782).
Proof. exact (MK_COMB (@lem4531258 _107639 B _53779) (@lem4531182 _100044 _107639 _107642 A B _53779 _53780 _53781 _53782 h1)). Qed.
Lemma lem4531260 {_100044 _107639 _107642 A B : Type'} (_53780 : type839 _107642 B) (_53781 : type839 A B) (_53782 : type982 A) (h1 : _53782 = (term633 A)) : (term606 _100044 _107639 _107642 A B _53780 _53781) = (term689 _100044 _107639 _107642 A B _53780 _53781 _53782).
Proof. exact (fun_ext (fun _53779 : type839 _107639 B => @lem4531259 _100044 _107639 _107642 A B _53779 _53780 _53781 _53782 h1)). Qed.
Lemma lem4531261 {_107639 B : Type'} : (@all ((B -> Prop) -> (_107639 -> Prop) -> B -> (_107639 -> B) -> Prop)) = (@all ((B -> Prop) -> (_107639 -> Prop) -> B -> (_107639 -> B) -> Prop)).
Proof. exact (eq_refl (@all ((B -> Prop) -> (_107639 -> Prop) -> B -> (_107639 -> B) -> Prop))). Qed.
Lemma lem4531262 {_100044 _107639 _107642 A B : Type'} (_53780 : type839 _107642 B) (_53781 : type839 A B) (_53782 : type982 A) (h1 : _53782 = (term633 A)) : (term607 _100044 _107639 _107642 A B _53780 _53781) = (term690 _100044 _107639 _107642 A B _53780 _53781 _53782).
Proof. exact (MK_COMB (@lem4531261 _107639 B) (@lem4531260 _100044 _107639 _107642 A B _53780 _53781 _53782 h1)). Qed.
Lemma lem4531263 {_107642 B : Type'} (f : _107642 -> B) : f = f.
Proof. exact (eq_refl f). Qed.
Lemma lem4531280 {_107642 B : Type'} (s : _107642 -> Prop) (f : _107642 -> B) (x : _107642) (d : B) : (term113 _107642 B s f x d) = (term113 _107642 B s f x d).
Proof. exact (eq_refl (term113 _107642 B s f x d)). Qed.
Lemma lem4531281 {_107642 B : Type'} (s : _107642 -> Prop) (f : _107642 -> B) (d : B) : (term114 _107642 B s f d) = (term114 _107642 B s f d).
Proof. exact (fun_ext (fun x : _107642 => @lem4531280 _107642 B s f x d)). Qed.
Lemma lem4531282 {_107642 : Type'} : (@all _107642) = (@all _107642).
Proof. exact (eq_refl (@all _107642)). Qed.
Lemma lem4531283 {_107642 B : Type'} (s : _107642 -> Prop) (f : _107642 -> B) (d : B) : (term115 _107642 B s f d) = (term115 _107642 B s f d).
Proof. exact (MK_COMB (@lem4531282 _107642) (@lem4531281 _107642 B s f d)). Qed.
Lemma lem4531298 {_107642 B : Type'} (s : _107642 -> Prop) (f : _107642 -> B) (x : _107642) (t : B -> Prop) : (term116 _107642 B s f x t) = (term116 _107642 B s f x t).
Proof. exact (eq_refl (term116 _107642 B s f x t)). Qed.
Lemma lem4531299 {_107642 B : Type'} (s : _107642 -> Prop) (f : _107642 -> B) (t : B -> Prop) : (term117 _107642 B s f t) = (term117 _107642 B s f t).
Proof. exact (fun_ext (fun x : _107642 => @lem4531298 _107642 B s f x t)). Qed.
Lemma lem4531300 {_107642 : Type'} : (@all _107642) = (@all _107642).
Proof. exact (eq_refl (@all _107642)). Qed.
Lemma lem4531301 {_107642 B : Type'} (s : _107642 -> Prop) (f : _107642 -> B) (t : B -> Prop) : (term118 _107642 B s f t) = (term118 _107642 B s f t).
Proof. exact (MK_COMB (@lem4531300 _107642) (@lem4531299 _107642 B s f t)). Qed.
Lemma lem4531302 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4531303 {_107642 B : Type'} (s : _107642 -> Prop) (f : _107642 -> B) (t : B -> Prop) : (term119 _107642 B s f t) = (term119 _107642 B s f t).
Proof. exact (MK_COMB (@lem4531302) (@lem4531301 _107642 B s f t)). Qed.
Lemma lem4531304 {_107642 B : Type'} (t : B -> Prop) (s : _107642 -> Prop) (f : _107642 -> B) (d : B) : (term120 _107642 B t s f d) = (term120 _107642 B t s f d).
Proof. exact (MK_COMB (@lem4531303 _107642 B s f t) (@lem4531283 _107642 B s f d)). Qed.
Lemma lem4531307 {_107642 B : Type'} (GEN_PVAR_148 : _107642 -> B) : (@SETSPEC (_107642 -> B) GEN_PVAR_148) = (@SETSPEC (_107642 -> B) GEN_PVAR_148).
Proof. exact (eq_refl (@SETSPEC (_107642 -> B) GEN_PVAR_148)). Qed.
Lemma lem4531308 {_107642 B : Type'} (GEN_PVAR_148 : _107642 -> B) (t : B -> Prop) (s : _107642 -> Prop) (f : _107642 -> B) (d : B) : (term121 _107642 B GEN_PVAR_148 t s f d) = (term121 _107642 B GEN_PVAR_148 t s f d).
Proof. exact (MK_COMB (@lem4531307 _107642 B GEN_PVAR_148) (@lem4531304 _107642 B t s f d)). Qed.
Lemma lem4531309 {_107642 B : Type'} (GEN_PVAR_148 : _107642 -> B) (t : B -> Prop) (s : _107642 -> Prop) (d : B) (f : _107642 -> B) : (term122 _107642 B GEN_PVAR_148 t s d f) = (term122 _107642 B GEN_PVAR_148 t s d f).
Proof. exact (MK_COMB (@lem4531308 _107642 B GEN_PVAR_148 t s f d) (@lem4531263 _107642 B f)). Qed.
Lemma lem4531310 {_107642 B : Type'} (GEN_PVAR_148 : _107642 -> B) (t : B -> Prop) (s : _107642 -> Prop) (d : B) : (term123 _107642 B GEN_PVAR_148 t s d) = (term123 _107642 B GEN_PVAR_148 t s d).
Proof. exact (fun_ext (fun f : _107642 -> B => @lem4531309 _107642 B GEN_PVAR_148 t s d f)). Qed.
Lemma lem4531311 {_107642 B : Type'} : (@ex (_107642 -> B)) = (@ex (_107642 -> B)).
Proof. exact (eq_refl (@ex (_107642 -> B))). Qed.
Lemma lem4531312 {_107642 B : Type'} (GEN_PVAR_148 : _107642 -> B) (t : B -> Prop) (s : _107642 -> Prop) (d : B) : (term124 _107642 B GEN_PVAR_148 t s d) = (term124 _107642 B GEN_PVAR_148 t s d).
Proof. exact (MK_COMB (@lem4531311 _107642 B) (@lem4531310 _107642 B GEN_PVAR_148 t s d)). Qed.
Lemma lem4531323 {_107642 B : Type'} (_53780 : type839 _107642 B) (t : B -> Prop) (s : _107642 -> Prop) (d : B) (GEN_PVAR_148 : _107642 -> B) : (term505 _107642 B _53780 t s d GEN_PVAR_148) = (term505 _107642 B _53780 t s d GEN_PVAR_148).
Proof. exact (eq_refl (term505 _107642 B _53780 t s d GEN_PVAR_148)). Qed.
Lemma lem4531324 {_107642 B : Type'} (_53780 : type839 _107642 B) (GEN_PVAR_148 : _107642 -> B) (t : B -> Prop) (s : _107642 -> Prop) (d : B) : ((_53780 t s d GEN_PVAR_148) = (term124 _107642 B GEN_PVAR_148 t s d)) = ((_53780 t s d GEN_PVAR_148) = (term124 _107642 B GEN_PVAR_148 t s d)).
Proof. exact (MK_COMB (@lem4531323 _107642 B _53780 t s d GEN_PVAR_148) (@lem4531312 _107642 B GEN_PVAR_148 t s d)). Qed.
Lemma lem4531325 {_107642 B : Type'} (_53780 : type839 _107642 B) (t : B -> Prop) (s : _107642 -> Prop) (d : B) : (term507 _107642 B _53780 t s d) = (term507 _107642 B _53780 t s d).
Proof. exact (fun_ext (fun GEN_PVAR_148 : _107642 -> B => @lem4531324 _107642 B _53780 GEN_PVAR_148 t s d)). Qed.
Lemma lem4531326 {_107642 B : Type'} : (@all (_107642 -> B)) = (@all (_107642 -> B)).
Proof. exact (eq_refl (@all (_107642 -> B))). Qed.
Lemma lem4531327 {_107642 B : Type'} (_53780 : type839 _107642 B) (t : B -> Prop) (s : _107642 -> Prop) (d : B) : (term508 _107642 B _53780 t s d) = (term508 _107642 B _53780 t s d).
Proof. exact (MK_COMB (@lem4531326 _107642 B) (@lem4531325 _107642 B _53780 t s d)). Qed.
Lemma lem4531328 {_107642 B : Type'} (_53780 : type839 _107642 B) (t : B -> Prop) (s : _107642 -> Prop) : (term509 _107642 B _53780 t s) = (term509 _107642 B _53780 t s).
Proof. exact (fun_ext (fun d : B => @lem4531327 _107642 B _53780 t s d)). Qed.
Lemma lem4531329 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem4531330 {_107642 B : Type'} (_53780 : type839 _107642 B) (t : B -> Prop) (s : _107642 -> Prop) : (term510 _107642 B _53780 t s) = (term510 _107642 B _53780 t s).
Proof. exact (MK_COMB (@lem4531329 B) (@lem4531328 _107642 B _53780 t s)). Qed.
Lemma lem4531331 {_107642 B : Type'} (_53780 : type839 _107642 B) (t : B -> Prop) : (term511 _107642 B _53780 t) = (term511 _107642 B _53780 t).
Proof. exact (fun_ext (fun s : _107642 -> Prop => @lem4531330 _107642 B _53780 t s)). Qed.
Lemma lem4531332 {_107642 : Type'} : (@all (_107642 -> Prop)) = (@all (_107642 -> Prop)).
Proof. exact (eq_refl (@all (_107642 -> Prop))). Qed.
Lemma lem4531333 {_107642 B : Type'} (_53780 : type839 _107642 B) (t : B -> Prop) : (term512 _107642 B _53780 t) = (term512 _107642 B _53780 t).
Proof. exact (MK_COMB (@lem4531332 _107642) (@lem4531331 _107642 B _53780 t)). Qed.
Lemma lem4531334 {_107642 B : Type'} (_53780 : type839 _107642 B) : (term513 _107642 B _53780) = (term513 _107642 B _53780).
Proof. exact (fun_ext (fun t : B -> Prop => @lem4531333 _107642 B _53780 t)). Qed.
Lemma lem4531335 {B : Type'} : (@all (B -> Prop)) = (@all (B -> Prop)).
Proof. exact (eq_refl (@all (B -> Prop))). Qed.
Lemma lem4531336 {_107642 B : Type'} (_53780 : type839 _107642 B) : (term514 _107642 B _53780) = (term514 _107642 B _53780).
Proof. exact (MK_COMB (@lem4531335 B) (@lem4531334 _107642 B _53780)). Qed.
Lemma lem4531337 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4531338 {_107642 B : Type'} (_53780 : type839 _107642 B) : (term515 _107642 B _53780) = (term515 _107642 B _53780).
Proof. exact (MK_COMB (@lem4531337) (@lem4531336 _107642 B _53780)). Qed.
Lemma lem4531339 {_100044 _107639 _107642 A B : Type'} (_53780 : type839 _107642 B) (_53781 : type839 A B) (_53782 : type982 A) (h1 : _53782 = (term633 A)) : (term608 _100044 _107639 _107642 A B _53780 _53781) = (term691 _100044 _107639 _107642 A B _53780 _53781 _53782).
Proof. exact (MK_COMB (@lem4531338 _107642 B _53780) (@lem4531262 _100044 _107639 _107642 A B _53780 _53781 _53782 h1)). Qed.
Lemma lem4531340 {_100044 _107639 _107642 A B : Type'} (_53781 : type839 A B) (_53782 : type982 A) (h1 : _53782 = (term633 A)) : (term609 _100044 _107639 _107642 A B _53781) = (term692 _100044 _107639 _107642 A B _53781 _53782).
Proof. exact (fun_ext (fun _53780 : type839 _107642 B => @lem4531339 _100044 _107639 _107642 A B _53780 _53781 _53782 h1)). Qed.
Lemma lem4531341 {_107642 B : Type'} : (@all ((B -> Prop) -> (_107642 -> Prop) -> B -> (_107642 -> B) -> Prop)) = (@all ((B -> Prop) -> (_107642 -> Prop) -> B -> (_107642 -> B) -> Prop)).
Proof. exact (eq_refl (@all ((B -> Prop) -> (_107642 -> Prop) -> B -> (_107642 -> B) -> Prop))). Qed.
Lemma lem4531342 {_100044 _107639 _107642 A B : Type'} (_53781 : type839 A B) (_53782 : type982 A) (h1 : _53782 = (term633 A)) : (term610 _100044 _107639 _107642 A B _53781) = (term693 _100044 _107639 _107642 A B _53781 _53782).
Proof. exact (MK_COMB (@lem4531341 _107642 B) (@lem4531340 _100044 _107639 _107642 A B _53781 _53782 h1)). Qed.
Lemma lem4531343 {A B : Type'} (f : A -> B) : f = f.
Proof. exact (eq_refl f). Qed.
Lemma lem4531360 {A B : Type'} (s : A -> Prop) (f : A -> B) (x : A) (d : B) : (term113 A B s f x d) = (term113 A B s f x d).
Proof. exact (eq_refl (term113 A B s f x d)). Qed.
Lemma lem4531361 {A B : Type'} (s : A -> Prop) (f : A -> B) (d : B) : (term114 A B s f d) = (term114 A B s f d).
Proof. exact (fun_ext (fun x : A => @lem4531360 A B s f x d)). Qed.
Lemma lem4531362 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem4531363 {A B : Type'} (s : A -> Prop) (f : A -> B) (d : B) : (term115 A B s f d) = (term115 A B s f d).
Proof. exact (MK_COMB (@lem4531362 A) (@lem4531361 A B s f d)). Qed.
Lemma lem4531378 {A B : Type'} (s : A -> Prop) (f : A -> B) (x : A) (t : B -> Prop) : (term116 A B s f x t) = (term116 A B s f x t).
Proof. exact (eq_refl (term116 A B s f x t)). Qed.
Lemma lem4531379 {A B : Type'} (s : A -> Prop) (f : A -> B) (t : B -> Prop) : (term117 A B s f t) = (term117 A B s f t).
Proof. exact (fun_ext (fun x : A => @lem4531378 A B s f x t)). Qed.
Lemma lem4531380 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem4531381 {A B : Type'} (s : A -> Prop) (f : A -> B) (t : B -> Prop) : (term118 A B s f t) = (term118 A B s f t).
Proof. exact (MK_COMB (@lem4531380 A) (@lem4531379 A B s f t)). Qed.
Lemma lem4531382 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4531383 {A B : Type'} (s : A -> Prop) (f : A -> B) (t : B -> Prop) : (term119 A B s f t) = (term119 A B s f t).
Proof. exact (MK_COMB (@lem4531382) (@lem4531381 A B s f t)). Qed.
Lemma lem4531384 {A B : Type'} (t : B -> Prop) (s : A -> Prop) (f : A -> B) (d : B) : (term120 A B t s f d) = (term120 A B t s f d).
Proof. exact (MK_COMB (@lem4531383 A B s f t) (@lem4531363 A B s f d)). Qed.
Lemma lem4531387 {A B : Type'} (GEN_PVAR_148 : A -> B) : (@SETSPEC (A -> B) GEN_PVAR_148) = (@SETSPEC (A -> B) GEN_PVAR_148).
Proof. exact (eq_refl (@SETSPEC (A -> B) GEN_PVAR_148)). Qed.
Lemma lem4531388 {A B : Type'} (GEN_PVAR_148 : A -> B) (t : B -> Prop) (s : A -> Prop) (f : A -> B) (d : B) : (term121 A B GEN_PVAR_148 t s f d) = (term121 A B GEN_PVAR_148 t s f d).
Proof. exact (MK_COMB (@lem4531387 A B GEN_PVAR_148) (@lem4531384 A B t s f d)). Qed.
Lemma lem4531389 {A B : Type'} (GEN_PVAR_148 : A -> B) (t : B -> Prop) (s : A -> Prop) (d : B) (f : A -> B) : (term122 A B GEN_PVAR_148 t s d f) = (term122 A B GEN_PVAR_148 t s d f).
Proof. exact (MK_COMB (@lem4531388 A B GEN_PVAR_148 t s f d) (@lem4531343 A B f)). Qed.
Lemma lem4531390 {A B : Type'} (GEN_PVAR_148 : A -> B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term123 A B GEN_PVAR_148 t s d) = (term123 A B GEN_PVAR_148 t s d).
Proof. exact (fun_ext (fun f : A -> B => @lem4531389 A B GEN_PVAR_148 t s d f)). Qed.
Lemma lem4531391 {A B : Type'} : (@ex (A -> B)) = (@ex (A -> B)).
Proof. exact (eq_refl (@ex (A -> B))). Qed.
Lemma lem4531392 {A B : Type'} (GEN_PVAR_148 : A -> B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term124 A B GEN_PVAR_148 t s d) = (term124 A B GEN_PVAR_148 t s d).
Proof. exact (MK_COMB (@lem4531391 A B) (@lem4531390 A B GEN_PVAR_148 t s d)). Qed.
Lemma lem4531403 {A B : Type'} (_53781 : type839 A B) (t : B -> Prop) (s : A -> Prop) (d : B) (GEN_PVAR_148 : A -> B) : (term505 A B _53781 t s d GEN_PVAR_148) = (term505 A B _53781 t s d GEN_PVAR_148).
Proof. exact (eq_refl (term505 A B _53781 t s d GEN_PVAR_148)). Qed.
Lemma lem4531404 {A B : Type'} (_53781 : type839 A B) (GEN_PVAR_148 : A -> B) (t : B -> Prop) (s : A -> Prop) (d : B) : ((_53781 t s d GEN_PVAR_148) = (term124 A B GEN_PVAR_148 t s d)) = ((_53781 t s d GEN_PVAR_148) = (term124 A B GEN_PVAR_148 t s d)).
Proof. exact (MK_COMB (@lem4531403 A B _53781 t s d GEN_PVAR_148) (@lem4531392 A B GEN_PVAR_148 t s d)). Qed.
Lemma lem4531405 {A B : Type'} (_53781 : type839 A B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term507 A B _53781 t s d) = (term507 A B _53781 t s d).
Proof. exact (fun_ext (fun GEN_PVAR_148 : A -> B => @lem4531404 A B _53781 GEN_PVAR_148 t s d)). Qed.
Lemma lem4531406 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem4531407 {A B : Type'} (_53781 : type839 A B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term508 A B _53781 t s d) = (term508 A B _53781 t s d).
Proof. exact (MK_COMB (@lem4531406 A B) (@lem4531405 A B _53781 t s d)). Qed.
Lemma lem4531408 {A B : Type'} (_53781 : type839 A B) (t : B -> Prop) (s : A -> Prop) : (term509 A B _53781 t s) = (term509 A B _53781 t s).
Proof. exact (fun_ext (fun d : B => @lem4531407 A B _53781 t s d)). Qed.
Lemma lem4531409 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem4531410 {A B : Type'} (_53781 : type839 A B) (t : B -> Prop) (s : A -> Prop) : (term510 A B _53781 t s) = (term510 A B _53781 t s).
Proof. exact (MK_COMB (@lem4531409 B) (@lem4531408 A B _53781 t s)). Qed.
Lemma lem4531411 {A B : Type'} (_53781 : type839 A B) (t : B -> Prop) : (term511 A B _53781 t) = (term511 A B _53781 t).
Proof. exact (fun_ext (fun s : A -> Prop => @lem4531410 A B _53781 t s)). Qed.
Lemma lem4531412 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem4531413 {A B : Type'} (_53781 : type839 A B) (t : B -> Prop) : (term512 A B _53781 t) = (term512 A B _53781 t).
Proof. exact (MK_COMB (@lem4531412 A) (@lem4531411 A B _53781 t)). Qed.
Lemma lem4531414 {A B : Type'} (_53781 : type839 A B) : (term513 A B _53781) = (term513 A B _53781).
Proof. exact (fun_ext (fun t : B -> Prop => @lem4531413 A B _53781 t)). Qed.
Lemma lem4531415 {B : Type'} : (@all (B -> Prop)) = (@all (B -> Prop)).
Proof. exact (eq_refl (@all (B -> Prop))). Qed.
Lemma lem4531416 {A B : Type'} (_53781 : type839 A B) : (term514 A B _53781) = (term514 A B _53781).
Proof. exact (MK_COMB (@lem4531415 B) (@lem4531414 A B _53781)). Qed.
Lemma lem4531417 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4531418 {A B : Type'} (_53781 : type839 A B) : (term515 A B _53781) = (term515 A B _53781).
Proof. exact (MK_COMB (@lem4531417) (@lem4531416 A B _53781)). Qed.
Lemma lem4531419 {_100044 _107639 _107642 A B : Type'} (_53781 : type839 A B) (_53782 : type982 A) (h1 : _53782 = (term633 A)) : (term630 _100044 _107639 _107642 A B _53781) = (term694 _100044 _107639 _107642 A B _53781 _53782).
Proof. exact (MK_COMB (@lem4531418 A B _53781) (@lem4531342 _100044 _107639 _107642 A B _53781 _53782 h1)). Qed.
Lemma lem4531420 {_100044 _107639 _107642 A B : Type'} (_53782 : type982 A) (h1 : _53782 = (term633 A)) : (term631 _100044 _107639 _107642 A B) = (term695 _100044 _107639 _107642 A B _53782).
Proof. exact (fun_ext (fun _53781 : type839 A B => @lem4531419 _100044 _107639 _107642 A B _53781 _53782 h1)). Qed.
Lemma lem4531421 {A B : Type'} : (@all ((B -> Prop) -> (A -> Prop) -> B -> (A -> B) -> Prop)) = (@all ((B -> Prop) -> (A -> Prop) -> B -> (A -> B) -> Prop)).
Proof. exact (eq_refl (@all ((B -> Prop) -> (A -> Prop) -> B -> (A -> B) -> Prop))). Qed.
Lemma lem4531422 {_100044 _107639 _107642 A B : Type'} (_53782 : type982 A) (h1 : _53782 = (term633 A)) : (term632 _100044 _107639 _107642 A B) = (term696 _100044 _107639 _107642 A B _53782).
Proof. exact (MK_COMB (@lem4531421 A B) (@lem4531420 _100044 _107639 _107642 A B _53782 h1)). Qed.
Lemma lem4531423 {_100044 _107639 _107642 A B : Type'} (_53782 : type982 A) : term697 _100044 _107639 _107642 A B _53782.
Proof. exact (fun h0 : _53782 = (term633 A) => @lem4531422 _100044 _107639 _107642 A B _53782 h0). Qed.
Lemma lem4531424 {_100044 _107639 _107642 A B : Type'} : term698 _100044 _107639 _107642 A B.
Proof. exact (fun _53782 : type982 A => @lem4531423 _100044 _107639 _107642 A B _53782). Qed.
Lemma lem4531426 {_3603 : Type'} (P : Prop) (c : _3603) (Q : _3603 -> Prop) : term237 _3603 P c Q.
Proof. exact (EQ_MP (@lem20230 _3603 P c Q) (@lem0)). Qed.
Lemma lem4531427 {A : Type'} (P : Prop) (c : type982 A) (Q : type248 A) : term699 A P c Q.
Proof. exact (@lem4531426 (type982 A) P c Q). Qed.
Lemma lem4531428 {_100044 _107639 _107642 A B : Type'} : term700 _100044 _107639 _107642 A B.
Proof. exact (@lem4531427 A (term632 _100044 _107639 _107642 A B) (term633 A) (term701 _100044 _107639 _107642 A B)). Qed.
Lemma lem4531429 {_100044 _107639 _107642 A B : Type'} (_53782 : type982 A) : (term702 _100044 _107639 _107642 A B _53782) = (term696 _100044 _107639 _107642 A B _53782).
Proof. exact (eq_refl (term702 _100044 _107639 _107642 A B _53782)). Qed.
Lemma lem4531430 {_100044 _107639 _107642 A B : Type'} : (term703 _100044 _107639 _107642 A B) = (term703 _100044 _107639 _107642 A B).
Proof. exact (eq_refl (term703 _100044 _107639 _107642 A B)). Qed.
Lemma lem4531431 {_100044 _107639 _107642 A B : Type'} (_53782 : type982 A) : ((term632 _100044 _107639 _107642 A B) = (term702 _100044 _107639 _107642 A B _53782)) = ((term632 _100044 _107639 _107642 A B) = (term696 _100044 _107639 _107642 A B _53782)).
Proof. exact (MK_COMB (@lem4531430 _100044 _107639 _107642 A B) (@lem4531429 _100044 _107639 _107642 A B _53782)). Qed.
Lemma lem4531432 {A : Type'} (_53782 : type982 A) : (term704 A _53782) = (term704 A _53782).
Proof. exact (eq_refl (term704 A _53782)). Qed.
Lemma lem4531433 {_100044 _107639 _107642 A B : Type'} (_53782 : type982 A) : (term705 _100044 _107639 _107642 A B _53782) = (term697 _100044 _107639 _107642 A B _53782).
Proof. exact (MK_COMB (@lem4531432 A _53782) (@lem4531431 _100044 _107639 _107642 A B _53782)). Qed.
Lemma lem4531434 {_100044 _107639 _107642 A B : Type'} : (term706 _100044 _107639 _107642 A B) = (term707 _100044 _107639 _107642 A B).
Proof. exact (fun_ext (fun _53782 : type982 A => @lem4531433 _100044 _107639 _107642 A B _53782)). Qed.
Lemma lem4531435 {A : Type'} : (@all ((nat -> Prop) -> (A -> Prop) -> nat -> (A -> nat) -> Prop)) = (@all ((nat -> Prop) -> (A -> Prop) -> nat -> (A -> nat) -> Prop)).
Proof. exact (eq_refl (@all ((nat -> Prop) -> (A -> Prop) -> nat -> (A -> nat) -> Prop))). Qed.
Lemma lem4531436 {_100044 _107639 _107642 A B : Type'} : (term708 _100044 _107639 _107642 A B) = (term698 _100044 _107639 _107642 A B).
Proof. exact (MK_COMB (@lem4531435 A) (@lem4531434 _100044 _107639 _107642 A B)). Qed.
Lemma lem4531437 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4531438 {_100044 _107639 _107642 A B : Type'} : (term709 _100044 _107639 _107642 A B) = (term710 _100044 _107639 _107642 A B).
Proof. exact (MK_COMB (@lem4531437) (@lem4531436 _100044 _107639 _107642 A B)). Qed.
Lemma lem4531439 {_100044 _107639 _107642 A B : Type'} (_53782 : type982 A) : (term702 _100044 _107639 _107642 A B _53782) = (term696 _100044 _107639 _107642 A B _53782).
Proof. exact (eq_refl (term702 _100044 _107639 _107642 A B _53782)). Qed.
Lemma lem4531440 {A : Type'} (_53782 : type982 A) : (term704 A _53782) = (term704 A _53782).
Proof. exact (eq_refl (term704 A _53782)). Qed.
Lemma lem4531441 {_100044 _107639 _107642 A B : Type'} (_53782 : type982 A) : (term711 _100044 _107639 _107642 A B _53782) = (term712 _100044 _107639 _107642 A B _53782).
Proof. exact (MK_COMB (@lem4531440 A _53782) (@lem4531439 _100044 _107639 _107642 A B _53782)). Qed.
Lemma lem4531442 {_100044 _107639 _107642 A B : Type'} : (term713 _100044 _107639 _107642 A B) = (term714 _100044 _107639 _107642 A B).
Proof. exact (fun_ext (fun _53782 : type982 A => @lem4531441 _100044 _107639 _107642 A B _53782)). Qed.
Lemma lem4531443 {A : Type'} : (@all ((nat -> Prop) -> (A -> Prop) -> nat -> (A -> nat) -> Prop)) = (@all ((nat -> Prop) -> (A -> Prop) -> nat -> (A -> nat) -> Prop)).
Proof. exact (eq_refl (@all ((nat -> Prop) -> (A -> Prop) -> nat -> (A -> nat) -> Prop))). Qed.
Lemma lem4531444 {_100044 _107639 _107642 A B : Type'} : (term715 _100044 _107639 _107642 A B) = (term716 _100044 _107639 _107642 A B).
Proof. exact (MK_COMB (@lem4531443 A) (@lem4531442 _100044 _107639 _107642 A B)). Qed.
Lemma lem4531445 {_100044 _107639 _107642 A B : Type'} : (term703 _100044 _107639 _107642 A B) = (term703 _100044 _107639 _107642 A B).
Proof. exact (eq_refl (term703 _100044 _107639 _107642 A B)). Qed.
Lemma lem4531446 {_100044 _107639 _107642 A B : Type'} : ((term632 _100044 _107639 _107642 A B) = (term715 _100044 _107639 _107642 A B)) = ((term632 _100044 _107639 _107642 A B) = (term716 _100044 _107639 _107642 A B)).
Proof. exact (MK_COMB (@lem4531445 _100044 _107639 _107642 A B) (@lem4531444 _100044 _107639 _107642 A B)). Qed.
Lemma lem4531447 {_100044 _107639 _107642 A B : Type'} : (term700 _100044 _107639 _107642 A B) = (term717 _100044 _107639 _107642 A B).
Proof. exact (MK_COMB (@lem4531438 _100044 _107639 _107642 A B) (@lem4531446 _100044 _107639 _107642 A B)). Qed.
Lemma lem4531448 {_100044 _107639 _107642 A B : Type'} : term717 _100044 _107639 _107642 A B.
Proof. exact (EQ_MP (@lem4531447 _100044 _107639 _107642 A B) (@lem4531428 _100044 _107639 _107642 A B)). Qed.
Lemma lem4531449 {_100044 _107639 _107642 A B : Type'} : (term632 _100044 _107639 _107642 A B) = (term716 _100044 _107639 _107642 A B).
Proof. exact (@lem4531448 _100044 _107639 _107642 A B (@lem4531424 _100044 _107639 _107642 A B)). Qed.
Lemma lem4531451 {_3571 _3575 : Type'} (s : _3575 -> _3571) (t : _3575 -> _3571) : (s = (term257 _3571 _3575 t)) = (term258 _3571 _3575 s t).
Proof. exact (EQ_MP (@lem19792 _3571 _3575 s t) (@lem0)). Qed.
Lemma lem4531452 {A : Type'} (s : type982 A) (t : type982 A) : (s = (term718 A t)) = (term719 A s t).
Proof. exact (@lem4531451 (type680 A) (nat -> Prop) s t). Qed.
Lemma lem4531453 {A : Type'} (_53782 : type982 A) : (_53782 = (term720 A)) = (term721 A _53782).
Proof. exact (@lem4531452 A _53782 (term633 A)). Qed.
Lemma lem4531454 {A : Type'} (t : nat -> Prop) : (term634 A t) = (term635 A t).
Proof. exact (eq_refl (term634 A t)). Qed.
Lemma lem4531455 {A : Type'} : (term720 A) = (term633 A).
Proof. exact (fun_ext (fun t : nat -> Prop => @lem4531454 A t)). Qed.
Lemma lem4531456 {A : Type'} (_53782 : type982 A) : (@eq ((nat -> Prop) -> (A -> Prop) -> nat -> (A -> nat) -> Prop) _53782) = (@eq ((nat -> Prop) -> (A -> Prop) -> nat -> (A -> nat) -> Prop) _53782).
Proof. exact (eq_refl (@eq ((nat -> Prop) -> (A -> Prop) -> nat -> (A -> nat) -> Prop) _53782)). Qed.
Lemma lem4531457 {A : Type'} (_53782 : type982 A) : (_53782 = (term720 A)) = (_53782 = (term633 A)).
Proof. exact (MK_COMB (@lem4531456 A _53782) (@lem4531455 A)). Qed.
Lemma lem4531458 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4531459 {A : Type'} (_53782 : type982 A) : (term722 A _53782) = (term723 A _53782).
Proof. exact (MK_COMB (@lem4531458) (@lem4531457 A _53782)). Qed.
Lemma lem4531460 {A : Type'} (t : nat -> Prop) : (term634 A t) = (term635 A t).
Proof. exact (eq_refl (term634 A t)). Qed.
Lemma lem4531461 {A : Type'} (_53782 : type982 A) (t : nat -> Prop) : (term636 A _53782 t) = (term636 A _53782 t).
Proof. exact (eq_refl (term636 A _53782 t)). Qed.
Lemma lem4531462 {A : Type'} (_53782 : type982 A) (t : nat -> Prop) : ((_53782 t) = (term634 A t)) = ((_53782 t) = (term635 A t)).
Proof. exact (MK_COMB (@lem4531461 A _53782 t) (@lem4531460 A t)). Qed.
Lemma lem4531463 {A : Type'} (_53782 : type982 A) : (term724 A _53782) = (term725 A _53782).
Proof. exact (fun_ext (fun t : nat -> Prop => @lem4531462 A _53782 t)). Qed.
Lemma lem4531464 : (@all (nat -> Prop)) = (@all (nat -> Prop)).
Proof. exact (eq_refl (@all (nat -> Prop))). Qed.
Lemma lem4531465 {A : Type'} (_53782 : type982 A) : (term721 A _53782) = (term726 A _53782).
Proof. exact (MK_COMB (@lem4531464) (@lem4531463 A _53782)). Qed.
Lemma lem4531466 {A : Type'} (_53782 : type982 A) : ((_53782 = (term720 A)) = (term721 A _53782)) = ((_53782 = (term633 A)) = (term726 A _53782)).
Proof. exact (MK_COMB (@lem4531459 A _53782) (@lem4531465 A _53782)). Qed.
Lemma lem4531467 {A : Type'} (_53782 : type982 A) : (_53782 = (term633 A)) = (term726 A _53782).
Proof. exact (EQ_MP (@lem4531466 A _53782) (@lem4531453 A _53782)). Qed.
Lemma lem4531469 {_3571 _3575 : Type'} (s : _3575 -> _3571) (t : _3575 -> _3571) : (s = (term257 _3571 _3575 t)) = (term258 _3571 _3575 s t).
Proof. exact (EQ_MP (@lem19792 _3571 _3575 s t) (@lem0)). Qed.
Lemma lem4531470 {A : Type'} (s : type680 A) (t : type680 A) : (s = (term727 A t)) = (term728 A s t).
Proof. exact (@lem4531469 (type1578 A) (A -> Prop) s t). Qed.
Lemma lem4531471 {A : Type'} (_53782 : type982 A) (t : nat -> Prop) : ((_53782 t) = (term729 A t)) = (term730 A _53782 t).
Proof. exact (@lem4531470 A (_53782 t) (term635 A t)). Qed.
Lemma lem4531472 {A : Type'} (t : nat -> Prop) (s : A -> Prop) : (term637 A t s) = (term638 A t s).
Proof. exact (eq_refl (term637 A t s)). Qed.
Lemma lem4531473 {A : Type'} (t : nat -> Prop) : (term729 A t) = (term635 A t).
Proof. exact (fun_ext (fun s : A -> Prop => @lem4531472 A t s)). Qed.
Lemma lem4531474 {A : Type'} (_53782 : type982 A) (t : nat -> Prop) : (term636 A _53782 t) = (term636 A _53782 t).
Proof. exact (eq_refl (term636 A _53782 t)). Qed.
Lemma lem4531475 {A : Type'} (_53782 : type982 A) (t : nat -> Prop) : ((_53782 t) = (term729 A t)) = ((_53782 t) = (term635 A t)).
Proof. exact (MK_COMB (@lem4531474 A _53782 t) (@lem4531473 A t)). Qed.
Lemma lem4531476 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4531477 {A : Type'} (_53782 : type982 A) (t : nat -> Prop) : (term731 A _53782 t) = (term732 A _53782 t).
Proof. exact (MK_COMB (@lem4531476) (@lem4531475 A _53782 t)). Qed.
Lemma lem4531478 {A : Type'} (t : nat -> Prop) (s : A -> Prop) : (term637 A t s) = (term638 A t s).
Proof. exact (eq_refl (term637 A t s)). Qed.
Lemma lem4531479 {A : Type'} (_53782 : type982 A) (t : nat -> Prop) (s : A -> Prop) : (term639 A _53782 t s) = (term639 A _53782 t s).
Proof. exact (eq_refl (term639 A _53782 t s)). Qed.
Lemma lem4531480 {A : Type'} (_53782 : type982 A) (t : nat -> Prop) (s : A -> Prop) : ((_53782 t s) = (term637 A t s)) = ((_53782 t s) = (term638 A t s)).
Proof. exact (MK_COMB (@lem4531479 A _53782 t s) (@lem4531478 A t s)). Qed.
Lemma lem4531481 {A : Type'} (_53782 : type982 A) (t : nat -> Prop) : (term733 A _53782 t) = (term734 A _53782 t).
Proof. exact (fun_ext (fun s : A -> Prop => @lem4531480 A _53782 t s)). Qed.
Lemma lem4531482 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem4531483 {A : Type'} (_53782 : type982 A) (t : nat -> Prop) : (term730 A _53782 t) = (term735 A _53782 t).
Proof. exact (MK_COMB (@lem4531482 A) (@lem4531481 A _53782 t)). Qed.
Lemma lem4531484 {A : Type'} (_53782 : type982 A) (t : nat -> Prop) : (((_53782 t) = (term729 A t)) = (term730 A _53782 t)) = (((_53782 t) = (term635 A t)) = (term735 A _53782 t)).
Proof. exact (MK_COMB (@lem4531477 A _53782 t) (@lem4531483 A _53782 t)). Qed.
Lemma lem4531485 {A : Type'} (_53782 : type982 A) (t : nat -> Prop) : ((_53782 t) = (term635 A t)) = (term735 A _53782 t).
Proof. exact (EQ_MP (@lem4531484 A _53782 t) (@lem4531471 A _53782 t)). Qed.
Lemma lem4531487 {_3571 _3575 : Type'} (s : _3575 -> _3571) (t : _3575 -> _3571) : (s = (term257 _3571 _3575 t)) = (term258 _3571 _3575 s t).
Proof. exact (EQ_MP (@lem19792 _3571 _3575 s t) (@lem0)). Qed.
Lemma lem4531488 {A : Type'} (s : type1578 A) (t : type1578 A) : (s = (term736 A t)) = (term737 A s t).
Proof. exact (@lem4531487 (type704 A) nat s t). Qed.
Lemma lem4531489 {A : Type'} (_53782 : type982 A) (t : nat -> Prop) (s : A -> Prop) : ((_53782 t s) = (term738 A t s)) = (term739 A _53782 t s).
Proof. exact (@lem4531488 A (_53782 t s) (term638 A t s)). Qed.
Lemma lem4531490 {A : Type'} (t : nat -> Prop) (s : A -> Prop) (d : nat) : (term640 A t s d) = (term98 A t s d).
Proof. exact (eq_refl (term640 A t s d)). Qed.
Lemma lem4531491 {A : Type'} (t : nat -> Prop) (s : A -> Prop) : (term738 A t s) = (term638 A t s).
Proof. exact (fun_ext (fun d : nat => @lem4531490 A t s d)). Qed.
Lemma lem4531492 {A : Type'} (_53782 : type982 A) (t : nat -> Prop) (s : A -> Prop) : (term639 A _53782 t s) = (term639 A _53782 t s).
Proof. exact (eq_refl (term639 A _53782 t s)). Qed.
Lemma lem4531493 {A : Type'} (_53782 : type982 A) (t : nat -> Prop) (s : A -> Prop) : ((_53782 t s) = (term738 A t s)) = ((_53782 t s) = (term638 A t s)).
Proof. exact (MK_COMB (@lem4531492 A _53782 t s) (@lem4531491 A t s)). Qed.
Lemma lem4531494 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4531495 {A : Type'} (_53782 : type982 A) (t : nat -> Prop) (s : A -> Prop) : (term740 A _53782 t s) = (term741 A _53782 t s).
Proof. exact (MK_COMB (@lem4531494) (@lem4531493 A _53782 t s)). Qed.
Lemma lem4531496 {A : Type'} (t : nat -> Prop) (s : A -> Prop) (d : nat) : (term640 A t s d) = (term98 A t s d).
Proof. exact (eq_refl (term640 A t s d)). Qed.
Lemma lem4531497 {A : Type'} (_53782 : type982 A) (t : nat -> Prop) (s : A -> Prop) (d : nat) : (term641 A _53782 t s d) = (term641 A _53782 t s d).
Proof. exact (eq_refl (term641 A _53782 t s d)). Qed.
Lemma lem4531498 {A : Type'} (_53782 : type982 A) (t : nat -> Prop) (s : A -> Prop) (d : nat) : ((_53782 t s d) = (term640 A t s d)) = ((_53782 t s d) = (term98 A t s d)).
Proof. exact (MK_COMB (@lem4531497 A _53782 t s d) (@lem4531496 A t s d)). Qed.
Lemma lem4531499 {A : Type'} (_53782 : type982 A) (t : nat -> Prop) (s : A -> Prop) : (term742 A _53782 t s) = (term743 A _53782 t s).
Proof. exact (fun_ext (fun d : nat => @lem4531498 A _53782 t s d)). Qed.
Lemma lem4531500 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4531501 {A : Type'} (_53782 : type982 A) (t : nat -> Prop) (s : A -> Prop) : (term739 A _53782 t s) = (term744 A _53782 t s).
Proof. exact (MK_COMB (@lem4531500) (@lem4531499 A _53782 t s)). Qed.
Lemma lem4531502 {A : Type'} (_53782 : type982 A) (t : nat -> Prop) (s : A -> Prop) : (((_53782 t s) = (term738 A t s)) = (term739 A _53782 t s)) = (((_53782 t s) = (term638 A t s)) = (term744 A _53782 t s)).
Proof. exact (MK_COMB (@lem4531495 A _53782 t s) (@lem4531501 A _53782 t s)). Qed.
Lemma lem4531503 {A : Type'} (_53782 : type982 A) (t : nat -> Prop) (s : A -> Prop) : ((_53782 t s) = (term638 A t s)) = (term744 A _53782 t s).
Proof. exact (EQ_MP (@lem4531502 A _53782 t s) (@lem4531489 A _53782 t s)). Qed.
Lemma lem4531505 {_3571 _3575 : Type'} (s : _3575 -> _3571) (t : _3575 -> _3571) : (s = (term257 _3571 _3575 t)) = (term258 _3571 _3575 s t).
Proof. exact (EQ_MP (@lem19792 _3571 _3575 s t) (@lem0)). Qed.
Lemma lem4531506 {A : Type'} (s : type704 A) (t : type704 A) : (s = (term745 A t)) = (term746 A s t).
Proof. exact (@lem4531505 Prop (A -> nat) s t). Qed.
Lemma lem4531507 {A : Type'} (_53782 : type982 A) (t : nat -> Prop) (s : A -> Prop) (d : nat) : ((_53782 t s d) = (term747 A t s d)) = (term748 A _53782 t s d).
Proof. exact (@lem4531506 A (_53782 t s d) (term98 A t s d)). Qed.
Lemma lem4531508 {A : Type'} (GEN_PVAR_148 : A -> nat) (t : nat -> Prop) (s : A -> Prop) (d : nat) : (term749 A t s d GEN_PVAR_148) = (term97 A GEN_PVAR_148 t s d).
Proof. exact (eq_refl (term749 A t s d GEN_PVAR_148)). Qed.
Lemma lem4531509 {A : Type'} (t : nat -> Prop) (s : A -> Prop) (d : nat) : (term747 A t s d) = (term98 A t s d).
Proof. exact (fun_ext (fun GEN_PVAR_148 : A -> nat => @lem4531508 A GEN_PVAR_148 t s d)). Qed.
Lemma lem4531510 {A : Type'} (_53782 : type982 A) (t : nat -> Prop) (s : A -> Prop) (d : nat) : (term641 A _53782 t s d) = (term641 A _53782 t s d).
Proof. exact (eq_refl (term641 A _53782 t s d)). Qed.
Lemma lem4531511 {A : Type'} (_53782 : type982 A) (t : nat -> Prop) (s : A -> Prop) (d : nat) : ((_53782 t s d) = (term747 A t s d)) = ((_53782 t s d) = (term98 A t s d)).
Proof. exact (MK_COMB (@lem4531510 A _53782 t s d) (@lem4531509 A t s d)). Qed.
Lemma lem4531512 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4531513 {A : Type'} (_53782 : type982 A) (t : nat -> Prop) (s : A -> Prop) (d : nat) : (term750 A _53782 t s d) = (term751 A _53782 t s d).
Proof. exact (MK_COMB (@lem4531512) (@lem4531511 A _53782 t s d)). Qed.
Lemma lem4531514 {A : Type'} (GEN_PVAR_148 : A -> nat) (t : nat -> Prop) (s : A -> Prop) (d : nat) : (term749 A t s d GEN_PVAR_148) = (term97 A GEN_PVAR_148 t s d).
Proof. exact (eq_refl (term749 A t s d GEN_PVAR_148)). Qed.
Lemma lem4531515 {A : Type'} (_53782 : type982 A) (t : nat -> Prop) (s : A -> Prop) (d : nat) (GEN_PVAR_148 : A -> nat) : (term752 A _53782 t s d GEN_PVAR_148) = (term752 A _53782 t s d GEN_PVAR_148).
Proof. exact (eq_refl (term752 A _53782 t s d GEN_PVAR_148)). Qed.
Lemma lem4531516 {A : Type'} (_53782 : type982 A) (GEN_PVAR_148 : A -> nat) (t : nat -> Prop) (s : A -> Prop) (d : nat) : ((_53782 t s d GEN_PVAR_148) = (term749 A t s d GEN_PVAR_148)) = ((_53782 t s d GEN_PVAR_148) = (term97 A GEN_PVAR_148 t s d)).
Proof. exact (MK_COMB (@lem4531515 A _53782 t s d GEN_PVAR_148) (@lem4531514 A GEN_PVAR_148 t s d)). Qed.
Lemma lem4531517 {A : Type'} (_53782 : type982 A) (t : nat -> Prop) (s : A -> Prop) (d : nat) : (term753 A _53782 t s d) = (term754 A _53782 t s d).
Proof. exact (fun_ext (fun GEN_PVAR_148 : A -> nat => @lem4531516 A _53782 GEN_PVAR_148 t s d)). Qed.
Lemma lem4531518 {A : Type'} : (@all (A -> nat)) = (@all (A -> nat)).
Proof. exact (eq_refl (@all (A -> nat))). Qed.
Lemma lem4531519 {A : Type'} (_53782 : type982 A) (t : nat -> Prop) (s : A -> Prop) (d : nat) : (term748 A _53782 t s d) = (term755 A _53782 t s d).
Proof. exact (MK_COMB (@lem4531518 A) (@lem4531517 A _53782 t s d)). Qed.
Lemma lem4531520 {A : Type'} (_53782 : type982 A) (t : nat -> Prop) (s : A -> Prop) (d : nat) : (((_53782 t s d) = (term747 A t s d)) = (term748 A _53782 t s d)) = (((_53782 t s d) = (term98 A t s d)) = (term755 A _53782 t s d)).
Proof. exact (MK_COMB (@lem4531513 A _53782 t s d) (@lem4531519 A _53782 t s d)). Qed.
Lemma lem4531521 {A : Type'} (_53782 : type982 A) (t : nat -> Prop) (s : A -> Prop) (d : nat) : ((_53782 t s d) = (term98 A t s d)) = (term755 A _53782 t s d).
Proof. exact (EQ_MP (@lem4531520 A _53782 t s d) (@lem4531507 A _53782 t s d)). Qed.
Lemma lem4531522 {A : Type'} (_53782 : type982 A) (GEN_PVAR_148 : A -> nat) (t : nat -> Prop) (s : A -> Prop) (d : nat) : ((_53782 t s d GEN_PVAR_148) = (term97 A GEN_PVAR_148 t s d)) = ((_53782 t s d GEN_PVAR_148) = (term97 A GEN_PVAR_148 t s d)).
Proof. exact (eq_refl ((_53782 t s d GEN_PVAR_148) = (term97 A GEN_PVAR_148 t s d))). Qed.
Lemma lem4531523 {A : Type'} (_53782 : type982 A) (t : nat -> Prop) (s : A -> Prop) (d : nat) : (term754 A _53782 t s d) = (term754 A _53782 t s d).
Proof. exact (fun_ext (fun GEN_PVAR_148 : A -> nat => @lem4531522 A _53782 GEN_PVAR_148 t s d)). Qed.
Lemma lem4531524 {A : Type'} : (@all (A -> nat)) = (@all (A -> nat)).
Proof. exact (eq_refl (@all (A -> nat))). Qed.
Lemma lem4531525 {A : Type'} (_53782 : type982 A) (t : nat -> Prop) (s : A -> Prop) (d : nat) : (term755 A _53782 t s d) = (term755 A _53782 t s d).
Proof. exact (MK_COMB (@lem4531524 A) (@lem4531523 A _53782 t s d)). Qed.
Lemma lem4531526 {A : Type'} (_53782 : type982 A) (t : nat -> Prop) (s : A -> Prop) (d : nat) : ((_53782 t s d) = (term98 A t s d)) = (term755 A _53782 t s d).
Proof. exact (TRANS (@lem4531521 A _53782 t s d) (@lem4531525 A _53782 t s d)). Qed.
Lemma lem4531527 {A : Type'} (_53782 : type982 A) (t : nat -> Prop) (s : A -> Prop) : (term743 A _53782 t s) = (term756 A _53782 t s).
Proof. exact (fun_ext (fun d : nat => @lem4531526 A _53782 t s d)). Qed.
Lemma lem4531528 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4531529 {A : Type'} (_53782 : type982 A) (t : nat -> Prop) (s : A -> Prop) : (term744 A _53782 t s) = (term757 A _53782 t s).
Proof. exact (MK_COMB (@lem4531528) (@lem4531527 A _53782 t s)). Qed.
Lemma lem4531530 {A : Type'} (_53782 : type982 A) (t : nat -> Prop) (s : A -> Prop) : ((_53782 t s) = (term638 A t s)) = (term757 A _53782 t s).
Proof. exact (TRANS (@lem4531503 A _53782 t s) (@lem4531529 A _53782 t s)). Qed.
Lemma lem4531531 {A : Type'} (_53782 : type982 A) (t : nat -> Prop) : (term734 A _53782 t) = (term758 A _53782 t).
Proof. exact (fun_ext (fun s : A -> Prop => @lem4531530 A _53782 t s)). Qed.
Lemma lem4531532 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem4531533 {A : Type'} (_53782 : type982 A) (t : nat -> Prop) : (term735 A _53782 t) = (term759 A _53782 t).
Proof. exact (MK_COMB (@lem4531532 A) (@lem4531531 A _53782 t)). Qed.
Lemma lem4531534 {A : Type'} (_53782 : type982 A) (t : nat -> Prop) : ((_53782 t) = (term635 A t)) = (term759 A _53782 t).
Proof. exact (TRANS (@lem4531485 A _53782 t) (@lem4531533 A _53782 t)). Qed.
Lemma lem4531535 {A : Type'} (_53782 : type982 A) : (term725 A _53782) = (term760 A _53782).
Proof. exact (fun_ext (fun t : nat -> Prop => @lem4531534 A _53782 t)). Qed.
Lemma lem4531536 : (@all (nat -> Prop)) = (@all (nat -> Prop)).
Proof. exact (eq_refl (@all (nat -> Prop))). Qed.
Lemma lem4531537 {A : Type'} (_53782 : type982 A) : (term726 A _53782) = (term761 A _53782).
Proof. exact (MK_COMB (@lem4531536) (@lem4531535 A _53782)). Qed.
Lemma lem4531538 {A : Type'} (_53782 : type982 A) : (_53782 = (term633 A)) = (term761 A _53782).
Proof. exact (TRANS (@lem4531467 A _53782) (@lem4531537 A _53782)). Qed.
Lemma lem4531539 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4531540 {A : Type'} (_53782 : type982 A) : (term704 A _53782) = (term762 A _53782).
Proof. exact (MK_COMB (@lem4531539) (@lem4531538 A _53782)). Qed.
Lemma lem4531541 {_100044 _107639 _107642 A B : Type'} (_53782 : type982 A) : (term696 _100044 _107639 _107642 A B _53782) = (term696 _100044 _107639 _107642 A B _53782).
Proof. exact (eq_refl (term696 _100044 _107639 _107642 A B _53782)). Qed.
Lemma lem4531542 {_100044 _107639 _107642 A B : Type'} (_53782 : type982 A) : (term712 _100044 _107639 _107642 A B _53782) = (term763 _100044 _107639 _107642 A B _53782).
Proof. exact (MK_COMB (@lem4531540 A _53782) (@lem4531541 _100044 _107639 _107642 A B _53782)). Qed.
Lemma lem4531543 {_100044 _107639 _107642 A B : Type'} : (term714 _100044 _107639 _107642 A B) = (term764 _100044 _107639 _107642 A B).
Proof. exact (fun_ext (fun _53782 : type982 A => @lem4531542 _100044 _107639 _107642 A B _53782)). Qed.
Lemma lem4531544 {A : Type'} : (@all ((nat -> Prop) -> (A -> Prop) -> nat -> (A -> nat) -> Prop)) = (@all ((nat -> Prop) -> (A -> Prop) -> nat -> (A -> nat) -> Prop)).
Proof. exact (eq_refl (@all ((nat -> Prop) -> (A -> Prop) -> nat -> (A -> nat) -> Prop))). Qed.
Lemma lem4531545 {_100044 _107639 _107642 A B : Type'} : (term716 _100044 _107639 _107642 A B) = (term765 _100044 _107639 _107642 A B).
Proof. exact (MK_COMB (@lem4531544 A) (@lem4531543 _100044 _107639 _107642 A B)). Qed.
Lemma lem4531546 {_100044 _107639 _107642 A B : Type'} : (term703 _100044 _107639 _107642 A B) = (term703 _100044 _107639 _107642 A B).
Proof. exact (eq_refl (term703 _100044 _107639 _107642 A B)). Qed.
Lemma lem4531547 {_100044 _107639 _107642 A B : Type'} : ((term632 _100044 _107639 _107642 A B) = (term716 _100044 _107639 _107642 A B)) = ((term632 _100044 _107639 _107642 A B) = (term765 _100044 _107639 _107642 A B)).
Proof. exact (MK_COMB (@lem4531546 _100044 _107639 _107642 A B) (@lem4531545 _100044 _107639 _107642 A B)). Qed.
Lemma lem4531550 {_100044 _107639 _107642 A B : Type'} : (term632 _100044 _107639 _107642 A B) = (term765 _100044 _107639 _107642 A B).
Proof. exact (EQ_MP (@lem4531547 _100044 _107639 _107642 A B) (@lem4531449 _100044 _107639 _107642 A B)). Qed.
Lemma lem4531551 {_100044 _107639 _107642 A B : Type'} : (term573 _100044 _107639 _107642 A B) = (term765 _100044 _107639 _107642 A B).
Proof. exact (TRANS (@lem4530131 _100044 _107639 _107642 A B) (@lem4531550 _100044 _107639 _107642 A B)). Qed.
Lemma lem4531552 {_100044 _107639 _107642 A B : Type'} : (term518 _100044 _107639 _107642 A B) = (term765 _100044 _107639 _107642 A B).
Proof. exact (TRANS (@lem4528747 _100044 _107639 _107642 A B) (@lem4531551 _100044 _107639 _107642 A B)). Qed.
Lemma lem4531553 {_100044 _107639 _107642 A B : Type'} : (term396 _100044 _107639 _107642 A B) = (term765 _100044 _107639 _107642 A B).
Proof. exact (TRANS (@lem4527396 _100044 _107639 _107642 A B) (@lem4531552 _100044 _107639 _107642 A B)). Qed.
Lemma lem4531554 {_100044 _107639 _107642 A B : Type'} : (term349 _100044 _107639 _107642 A B) = (term765 _100044 _107639 _107642 A B).
Proof. exact (TRANS (@lem4526078 _100044 _107639 _107642 A B) (@lem4531553 _100044 _107639 _107642 A B)). Qed.
Lemma lem4531555 {_100044 _107639 _107642 A B : Type'} : (term306 _100044 _107639 _107642 A B) = (term765 _100044 _107639 _107642 A B).
Proof. exact (TRANS (@lem4524793 _100044 _107639 _107642 A B) (@lem4531554 _100044 _107639 _107642 A B)). Qed.
Lemma lem4531556 {_100044 _107639 _107642 A B : Type'} : (term75 _100044 _107639 _107642 A B) = (term765 _100044 _107639 _107642 A B).
Proof. exact (TRANS (@lem4523541 _100044 _107639 _107642 A B) (@lem4531555 _100044 _107639 _107642 A B)). Qed.
Lemma lem4531557 {_100044 _107639 _107642 A B : Type'} : (term74 _100044 _107639 _107642 A B) = (term765 _100044 _107639 _107642 A B).
Proof. exact (TRANS (@lem4522326 _100044 _107639 _107642 A B) (@lem4531556 _100044 _107639 _107642 A B)). Qed.
Lemma lem4531566 {A : Type'} (_53782 : type982 A) (t : nat -> Prop) (s : A -> Prop) (d : nat) (n : nat) (m : nat) : (term645 A _53782 t s d n m) = (term645 A _53782 t s d n m).
Proof. exact (eq_refl (term645 A _53782 t s d n m)). Qed.
Lemma lem4531567 {A : Type'} (_53782 : type982 A) (t : nat -> Prop) (d : nat) (n : nat) (m : nat) : (term646 A _53782 t d n m) = (term646 A _53782 t d n m).
Proof. exact (fun_ext (fun s : A -> Prop => @lem4531566 A _53782 t s d n m)). Qed.
Lemma lem4531568 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem4531569 {A : Type'} (_53782 : type982 A) (t : nat -> Prop) (d : nat) (n : nat) (m : nat) : (term647 A _53782 t d n m) = (term647 A _53782 t d n m).
Proof. exact (MK_COMB (@lem4531568 A) (@lem4531567 A _53782 t d n m)). Qed.
Lemma lem4531570 {A : Type'} (_53782 : type982 A) (t : nat -> Prop) (d : nat) (n : nat) : (term648 A _53782 t d n) = (term648 A _53782 t d n).
Proof. exact (fun_ext (fun m : nat => @lem4531569 A _53782 t d n m)). Qed.
Lemma lem4531571 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4531572 {A : Type'} (_53782 : type982 A) (t : nat -> Prop) (d : nat) (n : nat) : (term649 A _53782 t d n) = (term649 A _53782 t d n).
Proof. exact (MK_COMB (@lem4531571) (@lem4531570 A _53782 t d n)). Qed.
Lemma lem4531573 {A : Type'} (_53782 : type982 A) (d : nat) (n : nat) : (term650 A _53782 d n) = (term650 A _53782 d n).
Proof. exact (fun_ext (fun t : nat -> Prop => @lem4531572 A _53782 t d n)). Qed.
Lemma lem4531574 : (@all (nat -> Prop)) = (@all (nat -> Prop)).
Proof. exact (eq_refl (@all (nat -> Prop))). Qed.
Lemma lem4531575 {A : Type'} (_53782 : type982 A) (d : nat) (n : nat) : (term651 A _53782 d n) = (term651 A _53782 d n).
Proof. exact (MK_COMB (@lem4531574) (@lem4531573 A _53782 d n)). Qed.
Lemma lem4531576 {A : Type'} (_53782 : type982 A) (d : nat) : (term652 A _53782 d) = (term652 A _53782 d).
Proof. exact (fun_ext (fun n : nat => @lem4531575 A _53782 d n)). Qed.
Lemma lem4531577 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4531578 {A : Type'} (_53782 : type982 A) (d : nat) : (term653 A _53782 d) = (term653 A _53782 d).
Proof. exact (MK_COMB (@lem4531577) (@lem4531576 A _53782 d)). Qed.
Lemma lem4531579 {A : Type'} (_53782 : type982 A) : (term654 A _53782) = (term654 A _53782).
Proof. exact (fun_ext (fun d : nat => @lem4531578 A _53782 d)). Qed.
Lemma lem4531580 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4531581 {A : Type'} (_53782 : type982 A) : (term655 A _53782) = (term655 A _53782).
Proof. exact (MK_COMB (@lem4531580) (@lem4531579 A _53782)). Qed.
Lemma lem4531582 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem4531583 {A : Type'} (_53782 : type982 A) : (term656 A _53782) = (term656 A _53782).
Proof. exact (MK_COMB (@lem4531582) (@lem4531581 A _53782)). Qed.
Lemma lem4531592 {A B : Type'} (_53781 : type839 A B) (t : B -> Prop) (s : A -> Prop) (d : B) (n : nat) (m : nat) : (term409 A B _53781 t s d n m) = (term409 A B _53781 t s d n m).
Proof. exact (eq_refl (term409 A B _53781 t s d n m)). Qed.
Lemma lem4531593 {A B : Type'} (_53781 : type839 A B) (t : B -> Prop) (d : B) (n : nat) (m : nat) : (term410 A B _53781 t d n m) = (term410 A B _53781 t d n m).
Proof. exact (fun_ext (fun s : A -> Prop => @lem4531592 A B _53781 t s d n m)). Qed.
Lemma lem4531594 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem4531595 {A B : Type'} (_53781 : type839 A B) (t : B -> Prop) (d : B) (n : nat) (m : nat) : (term411 A B _53781 t d n m) = (term411 A B _53781 t d n m).
Proof. exact (MK_COMB (@lem4531594 A) (@lem4531593 A B _53781 t d n m)). Qed.
Lemma lem4531596 {A B : Type'} (_53781 : type839 A B) (t : B -> Prop) (d : B) (n : nat) : (term412 A B _53781 t d n) = (term412 A B _53781 t d n).
Proof. exact (fun_ext (fun m : nat => @lem4531595 A B _53781 t d n m)). Qed.
Lemma lem4531597 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4531598 {A B : Type'} (_53781 : type839 A B) (t : B -> Prop) (d : B) (n : nat) : (term413 A B _53781 t d n) = (term413 A B _53781 t d n).
Proof. exact (MK_COMB (@lem4531597) (@lem4531596 A B _53781 t d n)). Qed.
Lemma lem4531599 {A B : Type'} (_53781 : type839 A B) (d : B) (n : nat) : (term414 A B _53781 d n) = (term414 A B _53781 d n).
Proof. exact (fun_ext (fun t : B -> Prop => @lem4531598 A B _53781 t d n)). Qed.
Lemma lem4531600 {B : Type'} : (@all (B -> Prop)) = (@all (B -> Prop)).
Proof. exact (eq_refl (@all (B -> Prop))). Qed.
Lemma lem4531601 {A B : Type'} (_53781 : type839 A B) (d : B) (n : nat) : (term415 A B _53781 d n) = (term415 A B _53781 d n).
Proof. exact (MK_COMB (@lem4531600 B) (@lem4531599 A B _53781 d n)). Qed.
Lemma lem4531602 {A B : Type'} (_53781 : type839 A B) (d : B) : (term416 A B _53781 d) = (term416 A B _53781 d).
Proof. exact (fun_ext (fun n : nat => @lem4531601 A B _53781 d n)). Qed.
Lemma lem4531603 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4531604 {A B : Type'} (_53781 : type839 A B) (d : B) : (term417 A B _53781 d) = (term417 A B _53781 d).
Proof. exact (MK_COMB (@lem4531603) (@lem4531602 A B _53781 d)). Qed.
Lemma lem4531605 {A B : Type'} (_53781 : type839 A B) : (term418 A B _53781) = (term418 A B _53781).
Proof. exact (fun_ext (fun d : B => @lem4531604 A B _53781 d)). Qed.
Lemma lem4531606 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem4531607 {A B : Type'} (_53781 : type839 A B) : (term419 A B _53781) = (term419 A B _53781).
Proof. exact (MK_COMB (@lem4531606 B) (@lem4531605 A B _53781)). Qed.
Lemma lem4531608 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4531609 {A B : Type'} (_53781 : type839 A B) : (term420 A B _53781) = (term420 A B _53781).
Proof. exact (MK_COMB (@lem4531608) (@lem4531607 A B _53781)). Qed.
Lemma lem4531610 {A B : Type'} (_53781 : type839 A B) (_53782 : type982 A) : (term657 A B _53781 _53782) = (term657 A B _53781 _53782).
Proof. exact (MK_COMB (@lem4531609 A B _53781) (@lem4531583 A _53782)). Qed.
Lemma lem4531619 {_107642 B : Type'} (_53780 : type839 _107642 B) (t : B -> Prop) (s : _107642 -> Prop) (d : B) (n : nat) (m : nat) : (term409 _107642 B _53780 t s d n m) = (term409 _107642 B _53780 t s d n m).
Proof. exact (eq_refl (term409 _107642 B _53780 t s d n m)). Qed.
Lemma lem4531620 {_107642 B : Type'} (_53780 : type839 _107642 B) (t : B -> Prop) (d : B) (n : nat) (m : nat) : (term410 _107642 B _53780 t d n m) = (term410 _107642 B _53780 t d n m).
Proof. exact (fun_ext (fun s : _107642 -> Prop => @lem4531619 _107642 B _53780 t s d n m)). Qed.
Lemma lem4531621 {_107642 : Type'} : (@all (_107642 -> Prop)) = (@all (_107642 -> Prop)).
Proof. exact (eq_refl (@all (_107642 -> Prop))). Qed.
Lemma lem4531622 {_107642 B : Type'} (_53780 : type839 _107642 B) (t : B -> Prop) (d : B) (n : nat) (m : nat) : (term411 _107642 B _53780 t d n m) = (term411 _107642 B _53780 t d n m).
Proof. exact (MK_COMB (@lem4531621 _107642) (@lem4531620 _107642 B _53780 t d n m)). Qed.
Lemma lem4531623 {_107642 B : Type'} (_53780 : type839 _107642 B) (t : B -> Prop) (d : B) (n : nat) : (term412 _107642 B _53780 t d n) = (term412 _107642 B _53780 t d n).
Proof. exact (fun_ext (fun m : nat => @lem4531622 _107642 B _53780 t d n m)). Qed.
Lemma lem4531624 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4531625 {_107642 B : Type'} (_53780 : type839 _107642 B) (t : B -> Prop) (d : B) (n : nat) : (term413 _107642 B _53780 t d n) = (term413 _107642 B _53780 t d n).
Proof. exact (MK_COMB (@lem4531624) (@lem4531623 _107642 B _53780 t d n)). Qed.
Lemma lem4531626 {_107642 B : Type'} (_53780 : type839 _107642 B) (d : B) (n : nat) : (term414 _107642 B _53780 d n) = (term414 _107642 B _53780 d n).
Proof. exact (fun_ext (fun t : B -> Prop => @lem4531625 _107642 B _53780 t d n)). Qed.
Lemma lem4531627 {B : Type'} : (@all (B -> Prop)) = (@all (B -> Prop)).
Proof. exact (eq_refl (@all (B -> Prop))). Qed.
Lemma lem4531628 {_107642 B : Type'} (_53780 : type839 _107642 B) (d : B) (n : nat) : (term415 _107642 B _53780 d n) = (term415 _107642 B _53780 d n).
Proof. exact (MK_COMB (@lem4531627 B) (@lem4531626 _107642 B _53780 d n)). Qed.
Lemma lem4531629 {_107642 B : Type'} (_53780 : type839 _107642 B) (d : B) : (term416 _107642 B _53780 d) = (term416 _107642 B _53780 d).
Proof. exact (fun_ext (fun n : nat => @lem4531628 _107642 B _53780 d n)). Qed.
Lemma lem4531630 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4531631 {_107642 B : Type'} (_53780 : type839 _107642 B) (d : B) : (term417 _107642 B _53780 d) = (term417 _107642 B _53780 d).
Proof. exact (MK_COMB (@lem4531630) (@lem4531629 _107642 B _53780 d)). Qed.
Lemma lem4531632 {_107642 B : Type'} (_53780 : type839 _107642 B) : (term418 _107642 B _53780) = (term418 _107642 B _53780).
Proof. exact (fun_ext (fun d : B => @lem4531631 _107642 B _53780 d)). Qed.
Lemma lem4531633 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem4531634 {_107642 B : Type'} (_53780 : type839 _107642 B) : (term419 _107642 B _53780) = (term419 _107642 B _53780).
Proof. exact (MK_COMB (@lem4531633 B) (@lem4531632 _107642 B _53780)). Qed.
Lemma lem4531635 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4531636 {_107642 B : Type'} (_53780 : type839 _107642 B) : (term420 _107642 B _53780) = (term420 _107642 B _53780).
Proof. exact (MK_COMB (@lem4531635) (@lem4531634 _107642 B _53780)). Qed.
Lemma lem4531637 {_107642 A B : Type'} (_53780 : type839 _107642 B) (_53781 : type839 A B) (_53782 : type982 A) : (term658 _107642 A B _53780 _53781 _53782) = (term658 _107642 A B _53780 _53781 _53782).
Proof. exact (MK_COMB (@lem4531636 _107642 B _53780) (@lem4531610 A B _53781 _53782)). Qed.
Lemma lem4531646 {_107639 B : Type'} (_53779 : type839 _107639 B) (t : B -> Prop) (s : _107639 -> Prop) (d : B) (n : nat) (m : nat) : (term409 _107639 B _53779 t s d n m) = (term409 _107639 B _53779 t s d n m).
Proof. exact (eq_refl (term409 _107639 B _53779 t s d n m)). Qed.
Lemma lem4531647 {_107639 B : Type'} (_53779 : type839 _107639 B) (t : B -> Prop) (d : B) (n : nat) (m : nat) : (term410 _107639 B _53779 t d n m) = (term410 _107639 B _53779 t d n m).
Proof. exact (fun_ext (fun s : _107639 -> Prop => @lem4531646 _107639 B _53779 t s d n m)). Qed.
Lemma lem4531648 {_107639 : Type'} : (@all (_107639 -> Prop)) = (@all (_107639 -> Prop)).
Proof. exact (eq_refl (@all (_107639 -> Prop))). Qed.
Lemma lem4531649 {_107639 B : Type'} (_53779 : type839 _107639 B) (t : B -> Prop) (d : B) (n : nat) (m : nat) : (term411 _107639 B _53779 t d n m) = (term411 _107639 B _53779 t d n m).
Proof. exact (MK_COMB (@lem4531648 _107639) (@lem4531647 _107639 B _53779 t d n m)). Qed.
Lemma lem4531650 {_107639 B : Type'} (_53779 : type839 _107639 B) (t : B -> Prop) (d : B) (n : nat) : (term412 _107639 B _53779 t d n) = (term412 _107639 B _53779 t d n).
Proof. exact (fun_ext (fun m : nat => @lem4531649 _107639 B _53779 t d n m)). Qed.
Lemma lem4531651 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4531652 {_107639 B : Type'} (_53779 : type839 _107639 B) (t : B -> Prop) (d : B) (n : nat) : (term413 _107639 B _53779 t d n) = (term413 _107639 B _53779 t d n).
Proof. exact (MK_COMB (@lem4531651) (@lem4531650 _107639 B _53779 t d n)). Qed.
Lemma lem4531653 {_107639 B : Type'} (_53779 : type839 _107639 B) (d : B) (n : nat) : (term414 _107639 B _53779 d n) = (term414 _107639 B _53779 d n).
Proof. exact (fun_ext (fun t : B -> Prop => @lem4531652 _107639 B _53779 t d n)). Qed.
Lemma lem4531654 {B : Type'} : (@all (B -> Prop)) = (@all (B -> Prop)).
Proof. exact (eq_refl (@all (B -> Prop))). Qed.
Lemma lem4531655 {_107639 B : Type'} (_53779 : type839 _107639 B) (d : B) (n : nat) : (term415 _107639 B _53779 d n) = (term415 _107639 B _53779 d n).
Proof. exact (MK_COMB (@lem4531654 B) (@lem4531653 _107639 B _53779 d n)). Qed.
Lemma lem4531656 {_107639 B : Type'} (_53779 : type839 _107639 B) (d : B) : (term416 _107639 B _53779 d) = (term416 _107639 B _53779 d).
Proof. exact (fun_ext (fun n : nat => @lem4531655 _107639 B _53779 d n)). Qed.
Lemma lem4531657 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4531658 {_107639 B : Type'} (_53779 : type839 _107639 B) (d : B) : (term417 _107639 B _53779 d) = (term417 _107639 B _53779 d).
Proof. exact (MK_COMB (@lem4531657) (@lem4531656 _107639 B _53779 d)). Qed.
Lemma lem4531659 {_107639 B : Type'} (_53779 : type839 _107639 B) : (term418 _107639 B _53779) = (term418 _107639 B _53779).
Proof. exact (fun_ext (fun d : B => @lem4531658 _107639 B _53779 d)). Qed.
Lemma lem4531660 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem4531661 {_107639 B : Type'} (_53779 : type839 _107639 B) : (term419 _107639 B _53779) = (term419 _107639 B _53779).
Proof. exact (MK_COMB (@lem4531660 B) (@lem4531659 _107639 B _53779)). Qed.
Lemma lem4531662 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4531663 {_107639 B : Type'} (_53779 : type839 _107639 B) : (term420 _107639 B _53779) = (term420 _107639 B _53779).
Proof. exact (MK_COMB (@lem4531662) (@lem4531661 _107639 B _53779)). Qed.
Lemma lem4531664 {_107639 _107642 A B : Type'} (_53779 : type839 _107639 B) (_53780 : type839 _107642 B) (_53781 : type839 A B) (_53782 : type982 A) : (term659 _107639 _107642 A B _53779 _53780 _53781 _53782) = (term659 _107639 _107642 A B _53779 _53780 _53781 _53782).
Proof. exact (MK_COMB (@lem4531663 _107639 B _53779) (@lem4531637 _107642 A B _53780 _53781 _53782)). Qed.
Lemma lem4531673 {_107642 A : Type'} (_53778 : type656 _107642 A) (t : _107642 -> Prop) (s : A -> Prop) (d : _107642) (n : nat) (m : nat) : (term169 _107642 A _53778 t s d n m) = (term169 _107642 A _53778 t s d n m).
Proof. exact (eq_refl (term169 _107642 A _53778 t s d n m)). Qed.
Lemma lem4531674 {_107642 A : Type'} (_53778 : type656 _107642 A) (t : _107642 -> Prop) (d : _107642) (n : nat) (m : nat) : (term170 _107642 A _53778 t d n m) = (term170 _107642 A _53778 t d n m).
Proof. exact (fun_ext (fun s : A -> Prop => @lem4531673 _107642 A _53778 t s d n m)). Qed.
Lemma lem4531675 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem4531676 {_107642 A : Type'} (_53778 : type656 _107642 A) (t : _107642 -> Prop) (d : _107642) (n : nat) (m : nat) : (term171 _107642 A _53778 t d n m) = (term171 _107642 A _53778 t d n m).
Proof. exact (MK_COMB (@lem4531675 A) (@lem4531674 _107642 A _53778 t d n m)). Qed.
Lemma lem4531677 {_107642 A : Type'} (_53778 : type656 _107642 A) (t : _107642 -> Prop) (d : _107642) (n : nat) : (term172 _107642 A _53778 t d n) = (term172 _107642 A _53778 t d n).
Proof. exact (fun_ext (fun m : nat => @lem4531676 _107642 A _53778 t d n m)). Qed.
Lemma lem4531678 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4531679 {_107642 A : Type'} (_53778 : type656 _107642 A) (t : _107642 -> Prop) (d : _107642) (n : nat) : (term173 _107642 A _53778 t d n) = (term173 _107642 A _53778 t d n).
Proof. exact (MK_COMB (@lem4531678) (@lem4531677 _107642 A _53778 t d n)). Qed.
Lemma lem4531680 {_107642 A : Type'} (_53778 : type656 _107642 A) (d : _107642) (n : nat) : (term174 _107642 A _53778 d n) = (term174 _107642 A _53778 d n).
Proof. exact (fun_ext (fun t : _107642 -> Prop => @lem4531679 _107642 A _53778 t d n)). Qed.
Lemma lem4531681 {_107642 : Type'} : (@all (_107642 -> Prop)) = (@all (_107642 -> Prop)).
Proof. exact (eq_refl (@all (_107642 -> Prop))). Qed.
Lemma lem4531682 {_107642 A : Type'} (_53778 : type656 _107642 A) (d : _107642) (n : nat) : (term175 _107642 A _53778 d n) = (term175 _107642 A _53778 d n).
Proof. exact (MK_COMB (@lem4531681 _107642) (@lem4531680 _107642 A _53778 d n)). Qed.
Lemma lem4531683 {_107642 A : Type'} (_53778 : type656 _107642 A) (d : _107642) : (term176 _107642 A _53778 d) = (term176 _107642 A _53778 d).
Proof. exact (fun_ext (fun n : nat => @lem4531682 _107642 A _53778 d n)). Qed.
Lemma lem4531684 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4531685 {_107642 A : Type'} (_53778 : type656 _107642 A) (d : _107642) : (term177 _107642 A _53778 d) = (term177 _107642 A _53778 d).
Proof. exact (MK_COMB (@lem4531684) (@lem4531683 _107642 A _53778 d)). Qed.
Lemma lem4531686 {_107642 A : Type'} (_53778 : type656 _107642 A) : (term178 _107642 A _53778) = (term178 _107642 A _53778).
Proof. exact (fun_ext (fun d : _107642 => @lem4531685 _107642 A _53778 d)). Qed.
Lemma lem4531687 {_107642 : Type'} : (@all _107642) = (@all _107642).
Proof. exact (eq_refl (@all _107642)). Qed.
Lemma lem4531688 {_107642 A : Type'} (_53778 : type656 _107642 A) : (term179 _107642 A _53778) = (term179 _107642 A _53778).
Proof. exact (MK_COMB (@lem4531687 _107642) (@lem4531686 _107642 A _53778)). Qed.
Lemma lem4531689 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4531690 {_107642 A : Type'} (_53778 : type656 _107642 A) : (term180 _107642 A _53778) = (term180 _107642 A _53778).
Proof. exact (MK_COMB (@lem4531689) (@lem4531688 _107642 A _53778)). Qed.
Lemma lem4531691 {_107639 _107642 A B : Type'} (_53778 : type656 _107642 A) (_53779 : type839 _107639 B) (_53780 : type839 _107642 B) (_53781 : type839 A B) (_53782 : type982 A) : (term660 _107639 _107642 A B _53778 _53779 _53780 _53781 _53782) = (term660 _107639 _107642 A B _53778 _53779 _53780 _53781 _53782).
Proof. exact (MK_COMB (@lem4531690 _107642 A _53778) (@lem4531664 _107639 _107642 A B _53779 _53780 _53781 _53782)). Qed.
Lemma lem4531700 {_107639 A : Type'} (_53777 : type656 _107639 A) (t : _107639 -> Prop) (s : A -> Prop) (d : _107639) (n : nat) (m : nat) : (term169 _107639 A _53777 t s d n m) = (term169 _107639 A _53777 t s d n m).
Proof. exact (eq_refl (term169 _107639 A _53777 t s d n m)). Qed.
Lemma lem4531701 {_107639 A : Type'} (_53777 : type656 _107639 A) (t : _107639 -> Prop) (d : _107639) (n : nat) (m : nat) : (term170 _107639 A _53777 t d n m) = (term170 _107639 A _53777 t d n m).
Proof. exact (fun_ext (fun s : A -> Prop => @lem4531700 _107639 A _53777 t s d n m)). Qed.
Lemma lem4531702 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem4531703 {_107639 A : Type'} (_53777 : type656 _107639 A) (t : _107639 -> Prop) (d : _107639) (n : nat) (m : nat) : (term171 _107639 A _53777 t d n m) = (term171 _107639 A _53777 t d n m).
Proof. exact (MK_COMB (@lem4531702 A) (@lem4531701 _107639 A _53777 t d n m)). Qed.
Lemma lem4531704 {_107639 A : Type'} (_53777 : type656 _107639 A) (t : _107639 -> Prop) (d : _107639) (n : nat) : (term172 _107639 A _53777 t d n) = (term172 _107639 A _53777 t d n).
Proof. exact (fun_ext (fun m : nat => @lem4531703 _107639 A _53777 t d n m)). Qed.
Lemma lem4531705 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4531706 {_107639 A : Type'} (_53777 : type656 _107639 A) (t : _107639 -> Prop) (d : _107639) (n : nat) : (term173 _107639 A _53777 t d n) = (term173 _107639 A _53777 t d n).
Proof. exact (MK_COMB (@lem4531705) (@lem4531704 _107639 A _53777 t d n)). Qed.
Lemma lem4531707 {_107639 A : Type'} (_53777 : type656 _107639 A) (d : _107639) (n : nat) : (term174 _107639 A _53777 d n) = (term174 _107639 A _53777 d n).
Proof. exact (fun_ext (fun t : _107639 -> Prop => @lem4531706 _107639 A _53777 t d n)). Qed.
Lemma lem4531708 {_107639 : Type'} : (@all (_107639 -> Prop)) = (@all (_107639 -> Prop)).
Proof. exact (eq_refl (@all (_107639 -> Prop))). Qed.
Lemma lem4531709 {_107639 A : Type'} (_53777 : type656 _107639 A) (d : _107639) (n : nat) : (term175 _107639 A _53777 d n) = (term175 _107639 A _53777 d n).
Proof. exact (MK_COMB (@lem4531708 _107639) (@lem4531707 _107639 A _53777 d n)). Qed.
Lemma lem4531710 {_107639 A : Type'} (_53777 : type656 _107639 A) (d : _107639) : (term176 _107639 A _53777 d) = (term176 _107639 A _53777 d).
Proof. exact (fun_ext (fun n : nat => @lem4531709 _107639 A _53777 d n)). Qed.
Lemma lem4531711 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4531712 {_107639 A : Type'} (_53777 : type656 _107639 A) (d : _107639) : (term177 _107639 A _53777 d) = (term177 _107639 A _53777 d).
Proof. exact (MK_COMB (@lem4531711) (@lem4531710 _107639 A _53777 d)). Qed.
Lemma lem4531713 {_107639 A : Type'} (_53777 : type656 _107639 A) : (term178 _107639 A _53777) = (term178 _107639 A _53777).
Proof. exact (fun_ext (fun d : _107639 => @lem4531712 _107639 A _53777 d)). Qed.
Lemma lem4531714 {_107639 : Type'} : (@all _107639) = (@all _107639).
Proof. exact (eq_refl (@all _107639)). Qed.
Lemma lem4531715 {_107639 A : Type'} (_53777 : type656 _107639 A) : (term179 _107639 A _53777) = (term179 _107639 A _53777).
Proof. exact (MK_COMB (@lem4531714 _107639) (@lem4531713 _107639 A _53777)). Qed.
Lemma lem4531716 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4531717 {_107639 A : Type'} (_53777 : type656 _107639 A) : (term180 _107639 A _53777) = (term180 _107639 A _53777).
Proof. exact (MK_COMB (@lem4531716) (@lem4531715 _107639 A _53777)). Qed.
Lemma lem4531718 {_107639 _107642 A B : Type'} (_53777 : type656 _107639 A) (_53778 : type656 _107642 A) (_53779 : type839 _107639 B) (_53780 : type839 _107642 B) (_53781 : type839 A B) (_53782 : type982 A) : (term661 _107639 _107642 A B _53777 _53778 _53779 _53780 _53781 _53782) = (term661 _107639 _107642 A B _53777 _53778 _53779 _53780 _53781 _53782).
Proof. exact (MK_COMB (@lem4531717 _107639 A _53777) (@lem4531691 _107639 _107642 A B _53778 _53779 _53780 _53781 _53782)). Qed.
Lemma lem4531727 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (t : _107639 -> Prop) (s : _107642 -> Prop) (d : _107639) (n : nat) (m : nat) : (term169 _107639 _107642 _53776 t s d n m) = (term169 _107639 _107642 _53776 t s d n m).
Proof. exact (eq_refl (term169 _107639 _107642 _53776 t s d n m)). Qed.
Lemma lem4531728 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (t : _107639 -> Prop) (d : _107639) (n : nat) (m : nat) : (term170 _107639 _107642 _53776 t d n m) = (term170 _107639 _107642 _53776 t d n m).
Proof. exact (fun_ext (fun s : _107642 -> Prop => @lem4531727 _107639 _107642 _53776 t s d n m)). Qed.
Lemma lem4531729 {_107642 : Type'} : (@all (_107642 -> Prop)) = (@all (_107642 -> Prop)).
Proof. exact (eq_refl (@all (_107642 -> Prop))). Qed.
Lemma lem4531730 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (t : _107639 -> Prop) (d : _107639) (n : nat) (m : nat) : (term171 _107639 _107642 _53776 t d n m) = (term171 _107639 _107642 _53776 t d n m).
Proof. exact (MK_COMB (@lem4531729 _107642) (@lem4531728 _107639 _107642 _53776 t d n m)). Qed.
Lemma lem4531731 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (t : _107639 -> Prop) (d : _107639) (n : nat) : (term172 _107639 _107642 _53776 t d n) = (term172 _107639 _107642 _53776 t d n).
Proof. exact (fun_ext (fun m : nat => @lem4531730 _107639 _107642 _53776 t d n m)). Qed.
Lemma lem4531732 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4531733 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (t : _107639 -> Prop) (d : _107639) (n : nat) : (term173 _107639 _107642 _53776 t d n) = (term173 _107639 _107642 _53776 t d n).
Proof. exact (MK_COMB (@lem4531732) (@lem4531731 _107639 _107642 _53776 t d n)). Qed.
Lemma lem4531734 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (d : _107639) (n : nat) : (term174 _107639 _107642 _53776 d n) = (term174 _107639 _107642 _53776 d n).
Proof. exact (fun_ext (fun t : _107639 -> Prop => @lem4531733 _107639 _107642 _53776 t d n)). Qed.
Lemma lem4531735 {_107639 : Type'} : (@all (_107639 -> Prop)) = (@all (_107639 -> Prop)).
Proof. exact (eq_refl (@all (_107639 -> Prop))). Qed.
Lemma lem4531736 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (d : _107639) (n : nat) : (term175 _107639 _107642 _53776 d n) = (term175 _107639 _107642 _53776 d n).
Proof. exact (MK_COMB (@lem4531735 _107639) (@lem4531734 _107639 _107642 _53776 d n)). Qed.
Lemma lem4531737 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (d : _107639) : (term176 _107639 _107642 _53776 d) = (term176 _107639 _107642 _53776 d).
Proof. exact (fun_ext (fun n : nat => @lem4531736 _107639 _107642 _53776 d n)). Qed.
Lemma lem4531738 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4531739 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (d : _107639) : (term177 _107639 _107642 _53776 d) = (term177 _107639 _107642 _53776 d).
Proof. exact (MK_COMB (@lem4531738) (@lem4531737 _107639 _107642 _53776 d)). Qed.
Lemma lem4531740 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) : (term178 _107639 _107642 _53776) = (term178 _107639 _107642 _53776).
Proof. exact (fun_ext (fun d : _107639 => @lem4531739 _107639 _107642 _53776 d)). Qed.
Lemma lem4531741 {_107639 : Type'} : (@all _107639) = (@all _107639).
Proof. exact (eq_refl (@all _107639)). Qed.
Lemma lem4531742 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) : (term179 _107639 _107642 _53776) = (term179 _107639 _107642 _53776).
Proof. exact (MK_COMB (@lem4531741 _107639) (@lem4531740 _107639 _107642 _53776)). Qed.
Lemma lem4531743 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4531744 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) : (term180 _107639 _107642 _53776) = (term180 _107639 _107642 _53776).
Proof. exact (MK_COMB (@lem4531743) (@lem4531742 _107639 _107642 _53776)). Qed.
Lemma lem4531745 {_107639 _107642 A B : Type'} (_53776 : type656 _107639 _107642) (_53777 : type656 _107639 A) (_53778 : type656 _107642 A) (_53779 : type839 _107639 B) (_53780 : type839 _107642 B) (_53781 : type839 A B) (_53782 : type982 A) : (term662 _107639 _107642 A B _53776 _53777 _53778 _53779 _53780 _53781 _53782) = (term662 _107639 _107642 A B _53776 _53777 _53778 _53779 _53780 _53781 _53782).
Proof. exact (MK_COMB (@lem4531744 _107639 _107642 _53776) (@lem4531718 _107639 _107642 A B _53777 _53778 _53779 _53780 _53781 _53782)). Qed.
Lemma lem4531754 (s : nat -> Prop) (n : nat) : ((@HAS_SIZE nat s n) = (term182 s n)) = ((@HAS_SIZE nat s n) = (term182 s n)).
Proof. exact (eq_refl ((@HAS_SIZE nat s n) = (term182 s n))). Qed.
Lemma lem4531755 (s : nat -> Prop) : (term183 s) = (term183 s).
Proof. exact (fun_ext (fun n : nat => @lem4531754 s n)). Qed.
Lemma lem4531756 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4531757 (s : nat -> Prop) : (term184 s) = (term184 s).
Proof. exact (MK_COMB (@lem4531756) (@lem4531755 s)). Qed.
Lemma lem4531758 : term185 = term185.
Proof. exact (fun_ext (fun s : nat -> Prop => @lem4531757 s)). Qed.
Lemma lem4531759 : (@all (nat -> Prop)) = (@all (nat -> Prop)).
Proof. exact (eq_refl (@all (nat -> Prop))). Qed.
Lemma lem4531760 : term15 = term15.
Proof. exact (MK_COMB (@lem4531759) (@lem4531758)). Qed.
Lemma lem4531761 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4531762 : term39 = term39.
Proof. exact (MK_COMB (@lem4531761) (@lem4531760)). Qed.
Lemma lem4531763 {_107639 _107642 A B : Type'} (_53776 : type656 _107639 _107642) (_53777 : type656 _107639 A) (_53778 : type656 _107642 A) (_53779 : type839 _107639 B) (_53780 : type839 _107642 B) (_53781 : type839 A B) (_53782 : type982 A) : (term663 _107639 _107642 A B _53776 _53777 _53778 _53779 _53780 _53781 _53782) = (term663 _107639 _107642 A B _53776 _53777 _53778 _53779 _53780 _53781 _53782).
Proof. exact (MK_COMB (@lem4531762) (@lem4531745 _107639 _107642 A B _53776 _53777 _53778 _53779 _53780 _53781 _53782)). Qed.
Lemma lem4531772 {A : Type'} (s : type704 A) (n : nat) : ((@HAS_SIZE (A -> nat) s n) = (term187 A s n)) = ((@HAS_SIZE (A -> nat) s n) = (term187 A s n)).
Proof. exact (eq_refl ((@HAS_SIZE (A -> nat) s n) = (term187 A s n))). Qed.
Lemma lem4531773 {A : Type'} (s : type704 A) : (term188 A s) = (term188 A s).
Proof. exact (fun_ext (fun n : nat => @lem4531772 A s n)). Qed.
Lemma lem4531774 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4531775 {A : Type'} (s : type704 A) : (term189 A s) = (term189 A s).
Proof. exact (MK_COMB (@lem4531774) (@lem4531773 A s)). Qed.
Lemma lem4531776 {A : Type'} : (term190 A) = (term190 A).
Proof. exact (fun_ext (fun s : type704 A => @lem4531775 A s)). Qed.
Lemma lem4531777 {A : Type'} : (@all ((A -> nat) -> Prop)) = (@all ((A -> nat) -> Prop)).
Proof. exact (eq_refl (@all ((A -> nat) -> Prop))). Qed.
Lemma lem4531778 {A : Type'} : (term16 A) = (term16 A).
Proof. exact (MK_COMB (@lem4531777 A) (@lem4531776 A)). Qed.
Lemma lem4531779 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4531780 {A : Type'} : (term42 A) = (term42 A).
Proof. exact (MK_COMB (@lem4531779) (@lem4531778 A)). Qed.
Lemma lem4531781 {_107639 _107642 A B : Type'} (_53776 : type656 _107639 _107642) (_53777 : type656 _107639 A) (_53778 : type656 _107642 A) (_53779 : type839 _107639 B) (_53780 : type839 _107642 B) (_53781 : type839 A B) (_53782 : type982 A) : (term664 _107639 _107642 A B _53776 _53777 _53778 _53779 _53780 _53781 _53782) = (term664 _107639 _107642 A B _53776 _53777 _53778 _53779 _53780 _53781 _53782).
Proof. exact (MK_COMB (@lem4531780 A) (@lem4531763 _107639 _107642 A B _53776 _53777 _53778 _53779 _53780 _53781 _53782)). Qed.
Lemma lem4531790 {A B : Type'} (s : type572 A B) (n : nat) : ((@HAS_SIZE (A -> B) s n) = (term192 A B s n)) = ((@HAS_SIZE (A -> B) s n) = (term192 A B s n)).
Proof. exact (eq_refl ((@HAS_SIZE (A -> B) s n) = (term192 A B s n))). Qed.
Lemma lem4531791 {A B : Type'} (s : type572 A B) : (term193 A B s) = (term193 A B s).
Proof. exact (fun_ext (fun n : nat => @lem4531790 A B s n)). Qed.
Lemma lem4531792 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4531793 {A B : Type'} (s : type572 A B) : (term194 A B s) = (term194 A B s).
Proof. exact (MK_COMB (@lem4531792) (@lem4531791 A B s)). Qed.
Lemma lem4531794 {A B : Type'} : (term195 A B) = (term195 A B).
Proof. exact (fun_ext (fun s : type572 A B => @lem4531793 A B s)). Qed.
Lemma lem4531795 {A B : Type'} : (@all ((A -> B) -> Prop)) = (@all ((A -> B) -> Prop)).
Proof. exact (eq_refl (@all ((A -> B) -> Prop))). Qed.
Lemma lem4531796 {A B : Type'} : (term17 A B) = (term17 A B).
Proof. exact (MK_COMB (@lem4531795 A B) (@lem4531794 A B)). Qed.
Lemma lem4531797 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4531798 {A B : Type'} : (term45 A B) = (term45 A B).
Proof. exact (MK_COMB (@lem4531797) (@lem4531796 A B)). Qed.
Lemma lem4531799 {_107639 _107642 A B : Type'} (_53776 : type656 _107639 _107642) (_53777 : type656 _107639 A) (_53778 : type656 _107642 A) (_53779 : type839 _107639 B) (_53780 : type839 _107642 B) (_53781 : type839 A B) (_53782 : type982 A) : (term665 _107639 _107642 A B _53776 _53777 _53778 _53779 _53780 _53781 _53782) = (term665 _107639 _107642 A B _53776 _53777 _53778 _53779 _53780 _53781 _53782).
Proof. exact (MK_COMB (@lem4531798 A B) (@lem4531781 _107639 _107642 A B _53776 _53777 _53778 _53779 _53780 _53781 _53782)). Qed.
Lemma lem4531808 {_107642 A : Type'} (s : type805 _107642 A) (n : nat) : ((@HAS_SIZE (A -> _107642) s n) = (term197 _107642 A s n)) = ((@HAS_SIZE (A -> _107642) s n) = (term197 _107642 A s n)).
Proof. exact (eq_refl ((@HAS_SIZE (A -> _107642) s n) = (term197 _107642 A s n))). Qed.
Lemma lem4531809 {_107642 A : Type'} (s : type805 _107642 A) : (term198 _107642 A s) = (term198 _107642 A s).
Proof. exact (fun_ext (fun n : nat => @lem4531808 _107642 A s n)). Qed.
Lemma lem4531810 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4531811 {_107642 A : Type'} (s : type805 _107642 A) : (term199 _107642 A s) = (term199 _107642 A s).
Proof. exact (MK_COMB (@lem4531810) (@lem4531809 _107642 A s)). Qed.
Lemma lem4531812 {_107642 A : Type'} : (term200 _107642 A) = (term200 _107642 A).
Proof. exact (fun_ext (fun s : type805 _107642 A => @lem4531811 _107642 A s)). Qed.
Lemma lem4531813 {_107642 A : Type'} : (@all ((A -> _107642) -> Prop)) = (@all ((A -> _107642) -> Prop)).
Proof. exact (eq_refl (@all ((A -> _107642) -> Prop))). Qed.
Lemma lem4531814 {_107642 A : Type'} : (term18 _107642 A) = (term18 _107642 A).
Proof. exact (MK_COMB (@lem4531813 _107642 A) (@lem4531812 _107642 A)). Qed.
Lemma lem4531815 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4531816 {_107642 A : Type'} : (term48 _107642 A) = (term48 _107642 A).
Proof. exact (MK_COMB (@lem4531815) (@lem4531814 _107642 A)). Qed.
Lemma lem4531817 {_107639 _107642 A B : Type'} (_53776 : type656 _107639 _107642) (_53777 : type656 _107639 A) (_53778 : type656 _107642 A) (_53779 : type839 _107639 B) (_53780 : type839 _107642 B) (_53781 : type839 A B) (_53782 : type982 A) : (term666 _107639 _107642 A B _53776 _53777 _53778 _53779 _53780 _53781 _53782) = (term666 _107639 _107642 A B _53776 _53777 _53778 _53779 _53780 _53781 _53782).
Proof. exact (MK_COMB (@lem4531816 _107642 A) (@lem4531799 _107639 _107642 A B _53776 _53777 _53778 _53779 _53780 _53781 _53782)). Qed.
Lemma lem4531826 {_107639 A : Type'} (s : type805 _107639 A) (n : nat) : ((@HAS_SIZE (A -> _107639) s n) = (term197 _107639 A s n)) = ((@HAS_SIZE (A -> _107639) s n) = (term197 _107639 A s n)).
Proof. exact (eq_refl ((@HAS_SIZE (A -> _107639) s n) = (term197 _107639 A s n))). Qed.
Lemma lem4531827 {_107639 A : Type'} (s : type805 _107639 A) : (term198 _107639 A s) = (term198 _107639 A s).
Proof. exact (fun_ext (fun n : nat => @lem4531826 _107639 A s n)). Qed.
Lemma lem4531828 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4531829 {_107639 A : Type'} (s : type805 _107639 A) : (term199 _107639 A s) = (term199 _107639 A s).
Proof. exact (MK_COMB (@lem4531828) (@lem4531827 _107639 A s)). Qed.
Lemma lem4531830 {_107639 A : Type'} : (term200 _107639 A) = (term200 _107639 A).
Proof. exact (fun_ext (fun s : type805 _107639 A => @lem4531829 _107639 A s)). Qed.
Lemma lem4531831 {_107639 A : Type'} : (@all ((A -> _107639) -> Prop)) = (@all ((A -> _107639) -> Prop)).
Proof. exact (eq_refl (@all ((A -> _107639) -> Prop))). Qed.
Lemma lem4531832 {_107639 A : Type'} : (term18 _107639 A) = (term18 _107639 A).
Proof. exact (MK_COMB (@lem4531831 _107639 A) (@lem4531830 _107639 A)). Qed.
Lemma lem4531833 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4531834 {_107639 A : Type'} : (term48 _107639 A) = (term48 _107639 A).
Proof. exact (MK_COMB (@lem4531833) (@lem4531832 _107639 A)). Qed.
Lemma lem4531835 {_107639 _107642 A B : Type'} (_53776 : type656 _107639 _107642) (_53777 : type656 _107639 A) (_53778 : type656 _107642 A) (_53779 : type839 _107639 B) (_53780 : type839 _107642 B) (_53781 : type839 A B) (_53782 : type982 A) : (term667 _107639 _107642 A B _53776 _53777 _53778 _53779 _53780 _53781 _53782) = (term667 _107639 _107642 A B _53776 _53777 _53778 _53779 _53780 _53781 _53782).
Proof. exact (MK_COMB (@lem4531834 _107639 A) (@lem4531817 _107639 _107642 A B _53776 _53777 _53778 _53779 _53780 _53781 _53782)). Qed.
Lemma lem4531844 {_107642 B : Type'} (s : type572 _107642 B) (n : nat) : ((@HAS_SIZE (_107642 -> B) s n) = (term192 _107642 B s n)) = ((@HAS_SIZE (_107642 -> B) s n) = (term192 _107642 B s n)).
Proof. exact (eq_refl ((@HAS_SIZE (_107642 -> B) s n) = (term192 _107642 B s n))). Qed.
Lemma lem4531845 {_107642 B : Type'} (s : type572 _107642 B) : (term193 _107642 B s) = (term193 _107642 B s).
Proof. exact (fun_ext (fun n : nat => @lem4531844 _107642 B s n)). Qed.
Lemma lem4531846 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4531847 {_107642 B : Type'} (s : type572 _107642 B) : (term194 _107642 B s) = (term194 _107642 B s).
Proof. exact (MK_COMB (@lem4531846) (@lem4531845 _107642 B s)). Qed.
Lemma lem4531848 {_107642 B : Type'} : (term195 _107642 B) = (term195 _107642 B).
Proof. exact (fun_ext (fun s : type572 _107642 B => @lem4531847 _107642 B s)). Qed.
Lemma lem4531849 {_107642 B : Type'} : (@all ((_107642 -> B) -> Prop)) = (@all ((_107642 -> B) -> Prop)).
Proof. exact (eq_refl (@all ((_107642 -> B) -> Prop))). Qed.
Lemma lem4531850 {_107642 B : Type'} : (term17 _107642 B) = (term17 _107642 B).
Proof. exact (MK_COMB (@lem4531849 _107642 B) (@lem4531848 _107642 B)). Qed.
Lemma lem4531851 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4531852 {_107642 B : Type'} : (term45 _107642 B) = (term45 _107642 B).
Proof. exact (MK_COMB (@lem4531851) (@lem4531850 _107642 B)). Qed.
Lemma lem4531853 {_107639 _107642 A B : Type'} (_53776 : type656 _107639 _107642) (_53777 : type656 _107639 A) (_53778 : type656 _107642 A) (_53779 : type839 _107639 B) (_53780 : type839 _107642 B) (_53781 : type839 A B) (_53782 : type982 A) : (term668 _107639 _107642 A B _53776 _53777 _53778 _53779 _53780 _53781 _53782) = (term668 _107639 _107642 A B _53776 _53777 _53778 _53779 _53780 _53781 _53782).
Proof. exact (MK_COMB (@lem4531852 _107642 B) (@lem4531835 _107639 _107642 A B _53776 _53777 _53778 _53779 _53780 _53781 _53782)). Qed.
Lemma lem4531862 {_107639 _107642 : Type'} (s : type805 _107639 _107642) (n : nat) : ((@HAS_SIZE (_107642 -> _107639) s n) = (term197 _107639 _107642 s n)) = ((@HAS_SIZE (_107642 -> _107639) s n) = (term197 _107639 _107642 s n)).
Proof. exact (eq_refl ((@HAS_SIZE (_107642 -> _107639) s n) = (term197 _107639 _107642 s n))). Qed.
Lemma lem4531863 {_107639 _107642 : Type'} (s : type805 _107639 _107642) : (term198 _107639 _107642 s) = (term198 _107639 _107642 s).
Proof. exact (fun_ext (fun n : nat => @lem4531862 _107639 _107642 s n)). Qed.
Lemma lem4531864 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4531865 {_107639 _107642 : Type'} (s : type805 _107639 _107642) : (term199 _107639 _107642 s) = (term199 _107639 _107642 s).
Proof. exact (MK_COMB (@lem4531864) (@lem4531863 _107639 _107642 s)). Qed.
Lemma lem4531866 {_107639 _107642 : Type'} : (term200 _107639 _107642) = (term200 _107639 _107642).
Proof. exact (fun_ext (fun s : type805 _107639 _107642 => @lem4531865 _107639 _107642 s)). Qed.
Lemma lem4531867 {_107639 _107642 : Type'} : (@all ((_107642 -> _107639) -> Prop)) = (@all ((_107642 -> _107639) -> Prop)).
Proof. exact (eq_refl (@all ((_107642 -> _107639) -> Prop))). Qed.
Lemma lem4531868 {_107639 _107642 : Type'} : (term18 _107639 _107642) = (term18 _107639 _107642).
Proof. exact (MK_COMB (@lem4531867 _107639 _107642) (@lem4531866 _107639 _107642)). Qed.
Lemma lem4531869 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4531870 {_107639 _107642 : Type'} : (term48 _107639 _107642) = (term48 _107639 _107642).
Proof. exact (MK_COMB (@lem4531869) (@lem4531868 _107639 _107642)). Qed.
Lemma lem4531871 {_107639 _107642 A B : Type'} (_53776 : type656 _107639 _107642) (_53777 : type656 _107639 A) (_53778 : type656 _107642 A) (_53779 : type839 _107639 B) (_53780 : type839 _107642 B) (_53781 : type839 A B) (_53782 : type982 A) : (term669 _107639 _107642 A B _53776 _53777 _53778 _53779 _53780 _53781 _53782) = (term669 _107639 _107642 A B _53776 _53777 _53778 _53779 _53780 _53781 _53782).
Proof. exact (MK_COMB (@lem4531870 _107639 _107642) (@lem4531853 _107639 _107642 A B _53776 _53777 _53778 _53779 _53780 _53781 _53782)). Qed.
Lemma lem4531880 {_107639 B : Type'} (s : type572 _107639 B) (n : nat) : ((@HAS_SIZE (_107639 -> B) s n) = (term192 _107639 B s n)) = ((@HAS_SIZE (_107639 -> B) s n) = (term192 _107639 B s n)).
Proof. exact (eq_refl ((@HAS_SIZE (_107639 -> B) s n) = (term192 _107639 B s n))). Qed.
Lemma lem4531881 {_107639 B : Type'} (s : type572 _107639 B) : (term193 _107639 B s) = (term193 _107639 B s).
Proof. exact (fun_ext (fun n : nat => @lem4531880 _107639 B s n)). Qed.
Lemma lem4531882 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4531883 {_107639 B : Type'} (s : type572 _107639 B) : (term194 _107639 B s) = (term194 _107639 B s).
Proof. exact (MK_COMB (@lem4531882) (@lem4531881 _107639 B s)). Qed.
Lemma lem4531884 {_107639 B : Type'} : (term195 _107639 B) = (term195 _107639 B).
Proof. exact (fun_ext (fun s : type572 _107639 B => @lem4531883 _107639 B s)). Qed.
Lemma lem4531885 {_107639 B : Type'} : (@all ((_107639 -> B) -> Prop)) = (@all ((_107639 -> B) -> Prop)).
Proof. exact (eq_refl (@all ((_107639 -> B) -> Prop))). Qed.
Lemma lem4531886 {_107639 B : Type'} : (term17 _107639 B) = (term17 _107639 B).
Proof. exact (MK_COMB (@lem4531885 _107639 B) (@lem4531884 _107639 B)). Qed.
Lemma lem4531887 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4531888 {_107639 B : Type'} : (term45 _107639 B) = (term45 _107639 B).
Proof. exact (MK_COMB (@lem4531887) (@lem4531886 _107639 B)). Qed.
Lemma lem4531889 {_107639 _107642 A B : Type'} (_53776 : type656 _107639 _107642) (_53777 : type656 _107639 A) (_53778 : type656 _107642 A) (_53779 : type839 _107639 B) (_53780 : type839 _107642 B) (_53781 : type839 A B) (_53782 : type982 A) : (term670 _107639 _107642 A B _53776 _53777 _53778 _53779 _53780 _53781 _53782) = (term670 _107639 _107642 A B _53776 _53777 _53778 _53779 _53780 _53781 _53782).
Proof. exact (MK_COMB (@lem4531888 _107639 B) (@lem4531871 _107639 _107642 A B _53776 _53777 _53778 _53779 _53780 _53781 _53782)). Qed.
Lemma lem4531898 {B : Type'} (s : B -> Prop) (n : nat) : ((@HAS_SIZE B s n) = (term206 B s n)) = ((@HAS_SIZE B s n) = (term206 B s n)).
Proof. exact (eq_refl ((@HAS_SIZE B s n) = (term206 B s n))). Qed.
Lemma lem4531899 {B : Type'} (s : B -> Prop) : (term207 B s) = (term207 B s).
Proof. exact (fun_ext (fun n : nat => @lem4531898 B s n)). Qed.
Lemma lem4531900 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4531901 {B : Type'} (s : B -> Prop) : (term208 B s) = (term208 B s).
Proof. exact (MK_COMB (@lem4531900) (@lem4531899 B s)). Qed.
Lemma lem4531902 {B : Type'} : (term209 B) = (term209 B).
Proof. exact (fun_ext (fun s : B -> Prop => @lem4531901 B s)). Qed.
Lemma lem4531903 {B : Type'} : (@all (B -> Prop)) = (@all (B -> Prop)).
Proof. exact (eq_refl (@all (B -> Prop))). Qed.
Lemma lem4531904 {B : Type'} : (term14 B) = (term14 B).
Proof. exact (MK_COMB (@lem4531903 B) (@lem4531902 B)). Qed.
Lemma lem4531905 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4531906 {B : Type'} : (term59 B) = (term59 B).
Proof. exact (MK_COMB (@lem4531905) (@lem4531904 B)). Qed.
Lemma lem4531907 {_107639 _107642 A B : Type'} (_53776 : type656 _107639 _107642) (_53777 : type656 _107639 A) (_53778 : type656 _107642 A) (_53779 : type839 _107639 B) (_53780 : type839 _107642 B) (_53781 : type839 A B) (_53782 : type982 A) : (term671 _107639 _107642 A B _53776 _53777 _53778 _53779 _53780 _53781 _53782) = (term671 _107639 _107642 A B _53776 _53777 _53778 _53779 _53780 _53781 _53782).
Proof. exact (MK_COMB (@lem4531906 B) (@lem4531889 _107639 _107642 A B _53776 _53777 _53778 _53779 _53780 _53781 _53782)). Qed.
Lemma lem4531916 {A : Type'} (s : A -> Prop) (n : nat) : ((@HAS_SIZE A s n) = (term206 A s n)) = ((@HAS_SIZE A s n) = (term206 A s n)).
Proof. exact (eq_refl ((@HAS_SIZE A s n) = (term206 A s n))). Qed.
Lemma lem4531917 {A : Type'} (s : A -> Prop) : (term207 A s) = (term207 A s).
Proof. exact (fun_ext (fun n : nat => @lem4531916 A s n)). Qed.
Lemma lem4531918 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4531919 {A : Type'} (s : A -> Prop) : (term208 A s) = (term208 A s).
Proof. exact (MK_COMB (@lem4531918) (@lem4531917 A s)). Qed.
Lemma lem4531920 {A : Type'} : (term209 A) = (term209 A).
Proof. exact (fun_ext (fun s : A -> Prop => @lem4531919 A s)). Qed.
Lemma lem4531921 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem4531922 {A : Type'} : (term14 A) = (term14 A).
Proof. exact (MK_COMB (@lem4531921 A) (@lem4531920 A)). Qed.
Lemma lem4531923 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4531924 {A : Type'} : (term59 A) = (term59 A).
Proof. exact (MK_COMB (@lem4531923) (@lem4531922 A)). Qed.
Lemma lem4531925 {_107639 _107642 A B : Type'} (_53776 : type656 _107639 _107642) (_53777 : type656 _107639 A) (_53778 : type656 _107642 A) (_53779 : type839 _107639 B) (_53780 : type839 _107642 B) (_53781 : type839 A B) (_53782 : type982 A) : (term672 _107639 _107642 A B _53776 _53777 _53778 _53779 _53780 _53781 _53782) = (term672 _107639 _107642 A B _53776 _53777 _53778 _53779 _53780 _53781 _53782).
Proof. exact (MK_COMB (@lem4531924 A) (@lem4531907 _107639 _107642 A B _53776 _53777 _53778 _53779 _53780 _53781 _53782)). Qed.
Lemma lem4531934 {_107642 : Type'} (s : _107642 -> Prop) (n : nat) : ((@HAS_SIZE _107642 s n) = (term206 _107642 s n)) = ((@HAS_SIZE _107642 s n) = (term206 _107642 s n)).
Proof. exact (eq_refl ((@HAS_SIZE _107642 s n) = (term206 _107642 s n))). Qed.
Lemma lem4531935 {_107642 : Type'} (s : _107642 -> Prop) : (term207 _107642 s) = (term207 _107642 s).
Proof. exact (fun_ext (fun n : nat => @lem4531934 _107642 s n)). Qed.
Lemma lem4531936 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4531937 {_107642 : Type'} (s : _107642 -> Prop) : (term208 _107642 s) = (term208 _107642 s).
Proof. exact (MK_COMB (@lem4531936) (@lem4531935 _107642 s)). Qed.
Lemma lem4531938 {_107642 : Type'} : (term209 _107642) = (term209 _107642).
Proof. exact (fun_ext (fun s : _107642 -> Prop => @lem4531937 _107642 s)). Qed.
Lemma lem4531939 {_107642 : Type'} : (@all (_107642 -> Prop)) = (@all (_107642 -> Prop)).
Proof. exact (eq_refl (@all (_107642 -> Prop))). Qed.
Lemma lem4531940 {_107642 : Type'} : (term14 _107642) = (term14 _107642).
Proof. exact (MK_COMB (@lem4531939 _107642) (@lem4531938 _107642)). Qed.
Lemma lem4531941 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4531942 {_107642 : Type'} : (term59 _107642) = (term59 _107642).
Proof. exact (MK_COMB (@lem4531941) (@lem4531940 _107642)). Qed.
Lemma lem4531943 {_107639 _107642 A B : Type'} (_53776 : type656 _107639 _107642) (_53777 : type656 _107639 A) (_53778 : type656 _107642 A) (_53779 : type839 _107639 B) (_53780 : type839 _107642 B) (_53781 : type839 A B) (_53782 : type982 A) : (term673 _107639 _107642 A B _53776 _53777 _53778 _53779 _53780 _53781 _53782) = (term673 _107639 _107642 A B _53776 _53777 _53778 _53779 _53780 _53781 _53782).
Proof. exact (MK_COMB (@lem4531942 _107642) (@lem4531925 _107639 _107642 A B _53776 _53777 _53778 _53779 _53780 _53781 _53782)). Qed.
Lemma lem4531952 {_107639 : Type'} (s : _107639 -> Prop) (n : nat) : ((@HAS_SIZE _107639 s n) = (term206 _107639 s n)) = ((@HAS_SIZE _107639 s n) = (term206 _107639 s n)).
Proof. exact (eq_refl ((@HAS_SIZE _107639 s n) = (term206 _107639 s n))). Qed.
Lemma lem4531953 {_107639 : Type'} (s : _107639 -> Prop) : (term207 _107639 s) = (term207 _107639 s).
Proof. exact (fun_ext (fun n : nat => @lem4531952 _107639 s n)). Qed.
Lemma lem4531954 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4531955 {_107639 : Type'} (s : _107639 -> Prop) : (term208 _107639 s) = (term208 _107639 s).
Proof. exact (MK_COMB (@lem4531954) (@lem4531953 _107639 s)). Qed.
Lemma lem4531956 {_107639 : Type'} : (term209 _107639) = (term209 _107639).
Proof. exact (fun_ext (fun s : _107639 -> Prop => @lem4531955 _107639 s)). Qed.
Lemma lem4531957 {_107639 : Type'} : (@all (_107639 -> Prop)) = (@all (_107639 -> Prop)).
Proof. exact (eq_refl (@all (_107639 -> Prop))). Qed.
Lemma lem4531958 {_107639 : Type'} : (term14 _107639) = (term14 _107639).
Proof. exact (MK_COMB (@lem4531957 _107639) (@lem4531956 _107639)). Qed.
Lemma lem4531959 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4531960 {_107639 : Type'} : (term59 _107639) = (term59 _107639).
Proof. exact (MK_COMB (@lem4531959) (@lem4531958 _107639)). Qed.
Lemma lem4531961 {_107639 _107642 A B : Type'} (_53776 : type656 _107639 _107642) (_53777 : type656 _107639 A) (_53778 : type656 _107642 A) (_53779 : type839 _107639 B) (_53780 : type839 _107642 B) (_53781 : type839 A B) (_53782 : type982 A) : (term674 _107639 _107642 A B _53776 _53777 _53778 _53779 _53780 _53781 _53782) = (term674 _107639 _107642 A B _53776 _53777 _53778 _53779 _53780 _53781 _53782).
Proof. exact (MK_COMB (@lem4531960 _107639) (@lem4531943 _107639 _107642 A B _53776 _53777 _53778 _53779 _53780 _53781 _53782)). Qed.
Lemma lem4531970 {_100044 : Type'} (s : _100044 -> Prop) (n : nat) : ((@HAS_SIZE _100044 s n) = (term206 _100044 s n)) = ((@HAS_SIZE _100044 s n) = (term206 _100044 s n)).
Proof. exact (eq_refl ((@HAS_SIZE _100044 s n) = (term206 _100044 s n))). Qed.
Lemma lem4531971 {_100044 : Type'} (s : _100044 -> Prop) : (term207 _100044 s) = (term207 _100044 s).
Proof. exact (fun_ext (fun n : nat => @lem4531970 _100044 s n)). Qed.
Lemma lem4531972 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4531973 {_100044 : Type'} (s : _100044 -> Prop) : (term208 _100044 s) = (term208 _100044 s).
Proof. exact (MK_COMB (@lem4531972) (@lem4531971 _100044 s)). Qed.
Lemma lem4531974 {_100044 : Type'} : (term209 _100044) = (term209 _100044).
Proof. exact (fun_ext (fun s : _100044 -> Prop => @lem4531973 _100044 s)). Qed.
Lemma lem4531975 {_100044 : Type'} : (@all (_100044 -> Prop)) = (@all (_100044 -> Prop)).
Proof. exact (eq_refl (@all (_100044 -> Prop))). Qed.
Lemma lem4531976 {_100044 : Type'} : (term14 _100044) = (term14 _100044).
Proof. exact (MK_COMB (@lem4531975 _100044) (@lem4531974 _100044)). Qed.
Lemma lem4531977 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4531978 {_100044 : Type'} : (term59 _100044) = (term59 _100044).
Proof. exact (MK_COMB (@lem4531977) (@lem4531976 _100044)). Qed.
Lemma lem4531979 {_100044 _107639 _107642 A B : Type'} (_53776 : type656 _107639 _107642) (_53777 : type656 _107639 A) (_53778 : type656 _107642 A) (_53779 : type839 _107639 B) (_53780 : type839 _107642 B) (_53781 : type839 A B) (_53782 : type982 A) : (term675 _100044 _107639 _107642 A B _53776 _53777 _53778 _53779 _53780 _53781 _53782) = (term675 _100044 _107639 _107642 A B _53776 _53777 _53778 _53779 _53780 _53781 _53782).
Proof. exact (MK_COMB (@lem4531978 _100044) (@lem4531961 _107639 _107642 A B _53776 _53777 _53778 _53779 _53780 _53781 _53782)). Qed.
Lemma lem4531988 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (d : _107639) (t : _107639 -> Prop) (s : _107642 -> Prop) : (term222 _107639 _107642 _53776 d t s) = (term222 _107639 _107642 _53776 d t s).
Proof. exact (eq_refl (term222 _107639 _107642 _53776 d t s)). Qed.
Lemma lem4531989 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (d : _107639) (s : _107642 -> Prop) : (term224 _107639 _107642 _53776 d s) = (term224 _107639 _107642 _53776 d s).
Proof. exact (fun_ext (fun t : _107639 -> Prop => @lem4531988 _107639 _107642 _53776 d t s)). Qed.
Lemma lem4531990 {_107639 : Type'} : (@all (_107639 -> Prop)) = (@all (_107639 -> Prop)).
Proof. exact (eq_refl (@all (_107639 -> Prop))). Qed.
Lemma lem4531991 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (d : _107639) (s : _107642 -> Prop) : (term226 _107639 _107642 _53776 d s) = (term226 _107639 _107642 _53776 d s).
Proof. exact (MK_COMB (@lem4531990 _107639) (@lem4531989 _107639 _107642 _53776 d s)). Qed.
Lemma lem4531992 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (d : _107639) : (term228 _107639 _107642 _53776 d) = (term228 _107639 _107642 _53776 d).
Proof. exact (fun_ext (fun s : _107642 -> Prop => @lem4531991 _107639 _107642 _53776 d s)). Qed.
Lemma lem4531993 {_107642 : Type'} : (@all (_107642 -> Prop)) = (@all (_107642 -> Prop)).
Proof. exact (eq_refl (@all (_107642 -> Prop))). Qed.
Lemma lem4531994 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (d : _107639) : (term229 _107639 _107642 _53776 d) = (term229 _107639 _107642 _53776 d).
Proof. exact (MK_COMB (@lem4531993 _107642) (@lem4531992 _107639 _107642 _53776 d)). Qed.
Lemma lem4531995 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem4531996 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (d : _107639) : (term230 _107639 _107642 _53776 d) = (term230 _107639 _107642 _53776 d).
Proof. exact (MK_COMB (@lem4531995) (@lem4531994 _107639 _107642 _53776 d)). Qed.
Lemma lem4531997 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4531998 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (d : _107639) : (term231 _107639 _107642 _53776 d) = (term231 _107639 _107642 _53776 d).
Proof. exact (MK_COMB (@lem4531997) (@lem4531996 _107639 _107642 _53776 d)). Qed.
Lemma lem4531999 {_100044 _107639 _107642 A B : Type'} (d : _107639) (_53776 : type656 _107639 _107642) (_53777 : type656 _107639 A) (_53778 : type656 _107642 A) (_53779 : type839 _107639 B) (_53780 : type839 _107642 B) (_53781 : type839 A B) (_53782 : type982 A) : (term676 _100044 _107639 _107642 A B d _53776 _53777 _53778 _53779 _53780 _53781 _53782) = (term676 _100044 _107639 _107642 A B d _53776 _53777 _53778 _53779 _53780 _53781 _53782).
Proof. exact (MK_COMB (@lem4531998 _107639 _107642 _53776 d) (@lem4531979 _100044 _107639 _107642 A B _53776 _53777 _53778 _53779 _53780 _53781 _53782)). Qed.
Lemma lem4532000 {_100044 _107639 _107642 A B : Type'} (_53776 : type656 _107639 _107642) (_53777 : type656 _107639 A) (_53778 : type656 _107642 A) (_53779 : type839 _107639 B) (_53780 : type839 _107642 B) (_53781 : type839 A B) (_53782 : type982 A) : (term677 _100044 _107639 _107642 A B _53776 _53777 _53778 _53779 _53780 _53781 _53782) = (term677 _100044 _107639 _107642 A B _53776 _53777 _53778 _53779 _53780 _53781 _53782).
Proof. exact (fun_ext (fun d : _107639 => @lem4531999 _100044 _107639 _107642 A B d _53776 _53777 _53778 _53779 _53780 _53781 _53782)). Qed.
Lemma lem4532001 {_107639 : Type'} : (@all _107639) = (@all _107639).
Proof. exact (eq_refl (@all _107639)). Qed.
Lemma lem4532002 {_100044 _107639 _107642 A B : Type'} (_53776 : type656 _107639 _107642) (_53777 : type656 _107639 A) (_53778 : type656 _107642 A) (_53779 : type839 _107639 B) (_53780 : type839 _107642 B) (_53781 : type839 A B) (_53782 : type982 A) : (term678 _100044 _107639 _107642 A B _53776 _53777 _53778 _53779 _53780 _53781 _53782) = (term678 _100044 _107639 _107642 A B _53776 _53777 _53778 _53779 _53780 _53781 _53782).
Proof. exact (MK_COMB (@lem4532001 _107639) (@lem4532000 _100044 _107639 _107642 A B _53776 _53777 _53778 _53779 _53780 _53781 _53782)). Qed.
Lemma lem4532003 {_107639 _107642 : Type'} (GEN_PVAR_149 : _107642 -> _107639) (t : _107639 -> Prop) (s : _107642 -> Prop) (d : _107639) (f : _107642 -> _107639) : (term149 _107639 _107642 GEN_PVAR_149 t s d f) = (term149 _107639 _107642 GEN_PVAR_149 t s d f).
Proof. exact (eq_refl (term149 _107639 _107642 GEN_PVAR_149 t s d f)). Qed.
Lemma lem4532004 {_107639 _107642 : Type'} (GEN_PVAR_149 : _107642 -> _107639) (t : _107639 -> Prop) (s : _107642 -> Prop) (d : _107639) : (term150 _107639 _107642 GEN_PVAR_149 t s d) = (term150 _107639 _107642 GEN_PVAR_149 t s d).
Proof. exact (fun_ext (fun f : _107642 -> _107639 => @lem4532003 _107639 _107642 GEN_PVAR_149 t s d f)). Qed.
Lemma lem4532005 {_107639 _107642 : Type'} : (@ex (_107642 -> _107639)) = (@ex (_107642 -> _107639)).
Proof. exact (eq_refl (@ex (_107642 -> _107639))). Qed.
Lemma lem4532006 {_107639 _107642 : Type'} (GEN_PVAR_149 : _107642 -> _107639) (t : _107639 -> Prop) (s : _107642 -> Prop) (d : _107639) : (term151 _107639 _107642 GEN_PVAR_149 t s d) = (term151 _107639 _107642 GEN_PVAR_149 t s d).
Proof. exact (MK_COMB (@lem4532005 _107639 _107642) (@lem4532004 _107639 _107642 GEN_PVAR_149 t s d)). Qed.
Lemma lem4532009 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (t : _107639 -> Prop) (s : _107642 -> Prop) (d : _107639) (GEN_PVAR_149 : _107642 -> _107639) : (term293 _107639 _107642 _53776 t s d GEN_PVAR_149) = (term293 _107639 _107642 _53776 t s d GEN_PVAR_149).
Proof. exact (eq_refl (term293 _107639 _107642 _53776 t s d GEN_PVAR_149)). Qed.
Lemma lem4532010 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (GEN_PVAR_149 : _107642 -> _107639) (t : _107639 -> Prop) (s : _107642 -> Prop) (d : _107639) : ((_53776 t s d GEN_PVAR_149) = (term151 _107639 _107642 GEN_PVAR_149 t s d)) = ((_53776 t s d GEN_PVAR_149) = (term151 _107639 _107642 GEN_PVAR_149 t s d)).
Proof. exact (MK_COMB (@lem4532009 _107639 _107642 _53776 t s d GEN_PVAR_149) (@lem4532006 _107639 _107642 GEN_PVAR_149 t s d)). Qed.
Lemma lem4532011 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (t : _107639 -> Prop) (s : _107642 -> Prop) (d : _107639) : (term295 _107639 _107642 _53776 t s d) = (term295 _107639 _107642 _53776 t s d).
Proof. exact (fun_ext (fun GEN_PVAR_149 : _107642 -> _107639 => @lem4532010 _107639 _107642 _53776 GEN_PVAR_149 t s d)). Qed.
Lemma lem4532012 {_107639 _107642 : Type'} : (@all (_107642 -> _107639)) = (@all (_107642 -> _107639)).
Proof. exact (eq_refl (@all (_107642 -> _107639))). Qed.
Lemma lem4532013 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (t : _107639 -> Prop) (s : _107642 -> Prop) (d : _107639) : (term296 _107639 _107642 _53776 t s d) = (term296 _107639 _107642 _53776 t s d).
Proof. exact (MK_COMB (@lem4532012 _107639 _107642) (@lem4532011 _107639 _107642 _53776 t s d)). Qed.
Lemma lem4532014 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (t : _107639 -> Prop) (s : _107642 -> Prop) : (term297 _107639 _107642 _53776 t s) = (term297 _107639 _107642 _53776 t s).
Proof. exact (fun_ext (fun d : _107639 => @lem4532013 _107639 _107642 _53776 t s d)). Qed.
Lemma lem4532015 {_107639 : Type'} : (@all _107639) = (@all _107639).
Proof. exact (eq_refl (@all _107639)). Qed.
Lemma lem4532016 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (t : _107639 -> Prop) (s : _107642 -> Prop) : (term298 _107639 _107642 _53776 t s) = (term298 _107639 _107642 _53776 t s).
Proof. exact (MK_COMB (@lem4532015 _107639) (@lem4532014 _107639 _107642 _53776 t s)). Qed.
Lemma lem4532017 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (t : _107639 -> Prop) : (term299 _107639 _107642 _53776 t) = (term299 _107639 _107642 _53776 t).
Proof. exact (fun_ext (fun s : _107642 -> Prop => @lem4532016 _107639 _107642 _53776 t s)). Qed.
Lemma lem4532018 {_107642 : Type'} : (@all (_107642 -> Prop)) = (@all (_107642 -> Prop)).
Proof. exact (eq_refl (@all (_107642 -> Prop))). Qed.
Lemma lem4532019 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (t : _107639 -> Prop) : (term300 _107639 _107642 _53776 t) = (term300 _107639 _107642 _53776 t).
Proof. exact (MK_COMB (@lem4532018 _107642) (@lem4532017 _107639 _107642 _53776 t)). Qed.
Lemma lem4532020 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) : (term301 _107639 _107642 _53776) = (term301 _107639 _107642 _53776).
Proof. exact (fun_ext (fun t : _107639 -> Prop => @lem4532019 _107639 _107642 _53776 t)). Qed.
Lemma lem4532021 {_107639 : Type'} : (@all (_107639 -> Prop)) = (@all (_107639 -> Prop)).
Proof. exact (eq_refl (@all (_107639 -> Prop))). Qed.
Lemma lem4532022 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) : (term302 _107639 _107642 _53776) = (term302 _107639 _107642 _53776).
Proof. exact (MK_COMB (@lem4532021 _107639) (@lem4532020 _107639 _107642 _53776)). Qed.
Lemma lem4532023 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4532024 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) : (term303 _107639 _107642 _53776) = (term303 _107639 _107642 _53776).
Proof. exact (MK_COMB (@lem4532023) (@lem4532022 _107639 _107642 _53776)). Qed.
Lemma lem4532025 {_100044 _107639 _107642 A B : Type'} (_53776 : type656 _107639 _107642) (_53777 : type656 _107639 A) (_53778 : type656 _107642 A) (_53779 : type839 _107639 B) (_53780 : type839 _107642 B) (_53781 : type839 A B) (_53782 : type982 A) : (term679 _100044 _107639 _107642 A B _53776 _53777 _53778 _53779 _53780 _53781 _53782) = (term679 _100044 _107639 _107642 A B _53776 _53777 _53778 _53779 _53780 _53781 _53782).
Proof. exact (MK_COMB (@lem4532024 _107639 _107642 _53776) (@lem4532002 _100044 _107639 _107642 A B _53776 _53777 _53778 _53779 _53780 _53781 _53782)). Qed.
Lemma lem4532026 {_100044 _107639 _107642 A B : Type'} (_53777 : type656 _107639 A) (_53778 : type656 _107642 A) (_53779 : type839 _107639 B) (_53780 : type839 _107642 B) (_53781 : type839 A B) (_53782 : type982 A) : (term680 _100044 _107639 _107642 A B _53777 _53778 _53779 _53780 _53781 _53782) = (term680 _100044 _107639 _107642 A B _53777 _53778 _53779 _53780 _53781 _53782).
Proof. exact (fun_ext (fun _53776 : type656 _107639 _107642 => @lem4532025 _100044 _107639 _107642 A B _53776 _53777 _53778 _53779 _53780 _53781 _53782)). Qed.
Lemma lem4532027 {_107639 _107642 : Type'} : (@all ((_107639 -> Prop) -> (_107642 -> Prop) -> _107639 -> (_107642 -> _107639) -> Prop)) = (@all ((_107639 -> Prop) -> (_107642 -> Prop) -> _107639 -> (_107642 -> _107639) -> Prop)).
Proof. exact (eq_refl (@all ((_107639 -> Prop) -> (_107642 -> Prop) -> _107639 -> (_107642 -> _107639) -> Prop))). Qed.
Lemma lem4532028 {_100044 _107639 _107642 A B : Type'} (_53777 : type656 _107639 A) (_53778 : type656 _107642 A) (_53779 : type839 _107639 B) (_53780 : type839 _107642 B) (_53781 : type839 A B) (_53782 : type982 A) : (term681 _100044 _107639 _107642 A B _53777 _53778 _53779 _53780 _53781 _53782) = (term681 _100044 _107639 _107642 A B _53777 _53778 _53779 _53780 _53781 _53782).
Proof. exact (MK_COMB (@lem4532027 _107639 _107642) (@lem4532026 _100044 _107639 _107642 A B _53777 _53778 _53779 _53780 _53781 _53782)). Qed.
Lemma lem4532029 {_107639 A : Type'} (GEN_PVAR_148 : A -> _107639) (t : _107639 -> Prop) (s : A -> Prop) (d : _107639) (f : A -> _107639) : (term149 _107639 A GEN_PVAR_148 t s d f) = (term149 _107639 A GEN_PVAR_148 t s d f).
Proof. exact (eq_refl (term149 _107639 A GEN_PVAR_148 t s d f)). Qed.
Lemma lem4532030 {_107639 A : Type'} (GEN_PVAR_148 : A -> _107639) (t : _107639 -> Prop) (s : A -> Prop) (d : _107639) : (term150 _107639 A GEN_PVAR_148 t s d) = (term150 _107639 A GEN_PVAR_148 t s d).
Proof. exact (fun_ext (fun f : A -> _107639 => @lem4532029 _107639 A GEN_PVAR_148 t s d f)). Qed.
Lemma lem4532031 {_107639 A : Type'} : (@ex (A -> _107639)) = (@ex (A -> _107639)).
Proof. exact (eq_refl (@ex (A -> _107639))). Qed.
Lemma lem4532032 {_107639 A : Type'} (GEN_PVAR_148 : A -> _107639) (t : _107639 -> Prop) (s : A -> Prop) (d : _107639) : (term151 _107639 A GEN_PVAR_148 t s d) = (term151 _107639 A GEN_PVAR_148 t s d).
Proof. exact (MK_COMB (@lem4532031 _107639 A) (@lem4532030 _107639 A GEN_PVAR_148 t s d)). Qed.
Lemma lem4532035 {_107639 A : Type'} (_53777 : type656 _107639 A) (t : _107639 -> Prop) (s : A -> Prop) (d : _107639) (GEN_PVAR_148 : A -> _107639) : (term293 _107639 A _53777 t s d GEN_PVAR_148) = (term293 _107639 A _53777 t s d GEN_PVAR_148).
Proof. exact (eq_refl (term293 _107639 A _53777 t s d GEN_PVAR_148)). Qed.
Lemma lem4532036 {_107639 A : Type'} (_53777 : type656 _107639 A) (GEN_PVAR_148 : A -> _107639) (t : _107639 -> Prop) (s : A -> Prop) (d : _107639) : ((_53777 t s d GEN_PVAR_148) = (term151 _107639 A GEN_PVAR_148 t s d)) = ((_53777 t s d GEN_PVAR_148) = (term151 _107639 A GEN_PVAR_148 t s d)).
Proof. exact (MK_COMB (@lem4532035 _107639 A _53777 t s d GEN_PVAR_148) (@lem4532032 _107639 A GEN_PVAR_148 t s d)). Qed.
Lemma lem4532037 {_107639 A : Type'} (_53777 : type656 _107639 A) (t : _107639 -> Prop) (s : A -> Prop) (d : _107639) : (term295 _107639 A _53777 t s d) = (term295 _107639 A _53777 t s d).
Proof. exact (fun_ext (fun GEN_PVAR_148 : A -> _107639 => @lem4532036 _107639 A _53777 GEN_PVAR_148 t s d)). Qed.
Lemma lem4532038 {_107639 A : Type'} : (@all (A -> _107639)) = (@all (A -> _107639)).
Proof. exact (eq_refl (@all (A -> _107639))). Qed.
Lemma lem4532039 {_107639 A : Type'} (_53777 : type656 _107639 A) (t : _107639 -> Prop) (s : A -> Prop) (d : _107639) : (term296 _107639 A _53777 t s d) = (term296 _107639 A _53777 t s d).
Proof. exact (MK_COMB (@lem4532038 _107639 A) (@lem4532037 _107639 A _53777 t s d)). Qed.
Lemma lem4532040 {_107639 A : Type'} (_53777 : type656 _107639 A) (t : _107639 -> Prop) (s : A -> Prop) : (term297 _107639 A _53777 t s) = (term297 _107639 A _53777 t s).
Proof. exact (fun_ext (fun d : _107639 => @lem4532039 _107639 A _53777 t s d)). Qed.
Lemma lem4532041 {_107639 : Type'} : (@all _107639) = (@all _107639).
Proof. exact (eq_refl (@all _107639)). Qed.
Lemma lem4532042 {_107639 A : Type'} (_53777 : type656 _107639 A) (t : _107639 -> Prop) (s : A -> Prop) : (term298 _107639 A _53777 t s) = (term298 _107639 A _53777 t s).
Proof. exact (MK_COMB (@lem4532041 _107639) (@lem4532040 _107639 A _53777 t s)). Qed.
Lemma lem4532043 {_107639 A : Type'} (_53777 : type656 _107639 A) (t : _107639 -> Prop) : (term299 _107639 A _53777 t) = (term299 _107639 A _53777 t).
Proof. exact (fun_ext (fun s : A -> Prop => @lem4532042 _107639 A _53777 t s)). Qed.
Lemma lem4532044 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem4532045 {_107639 A : Type'} (_53777 : type656 _107639 A) (t : _107639 -> Prop) : (term300 _107639 A _53777 t) = (term300 _107639 A _53777 t).
Proof. exact (MK_COMB (@lem4532044 A) (@lem4532043 _107639 A _53777 t)). Qed.
Lemma lem4532046 {_107639 A : Type'} (_53777 : type656 _107639 A) : (term301 _107639 A _53777) = (term301 _107639 A _53777).
Proof. exact (fun_ext (fun t : _107639 -> Prop => @lem4532045 _107639 A _53777 t)). Qed.
Lemma lem4532047 {_107639 : Type'} : (@all (_107639 -> Prop)) = (@all (_107639 -> Prop)).
Proof. exact (eq_refl (@all (_107639 -> Prop))). Qed.
Lemma lem4532048 {_107639 A : Type'} (_53777 : type656 _107639 A) : (term302 _107639 A _53777) = (term302 _107639 A _53777).
Proof. exact (MK_COMB (@lem4532047 _107639) (@lem4532046 _107639 A _53777)). Qed.
Lemma lem4532049 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4532050 {_107639 A : Type'} (_53777 : type656 _107639 A) : (term303 _107639 A _53777) = (term303 _107639 A _53777).
Proof. exact (MK_COMB (@lem4532049) (@lem4532048 _107639 A _53777)). Qed.
Lemma lem4532051 {_100044 _107639 _107642 A B : Type'} (_53777 : type656 _107639 A) (_53778 : type656 _107642 A) (_53779 : type839 _107639 B) (_53780 : type839 _107642 B) (_53781 : type839 A B) (_53782 : type982 A) : (term682 _100044 _107639 _107642 A B _53777 _53778 _53779 _53780 _53781 _53782) = (term682 _100044 _107639 _107642 A B _53777 _53778 _53779 _53780 _53781 _53782).
Proof. exact (MK_COMB (@lem4532050 _107639 A _53777) (@lem4532028 _100044 _107639 _107642 A B _53777 _53778 _53779 _53780 _53781 _53782)). Qed.
Lemma lem4532052 {_100044 _107639 _107642 A B : Type'} (_53778 : type656 _107642 A) (_53779 : type839 _107639 B) (_53780 : type839 _107642 B) (_53781 : type839 A B) (_53782 : type982 A) : (term683 _100044 _107639 _107642 A B _53778 _53779 _53780 _53781 _53782) = (term683 _100044 _107639 _107642 A B _53778 _53779 _53780 _53781 _53782).
Proof. exact (fun_ext (fun _53777 : type656 _107639 A => @lem4532051 _100044 _107639 _107642 A B _53777 _53778 _53779 _53780 _53781 _53782)). Qed.
Lemma lem4532053 {_107639 A : Type'} : (@all ((_107639 -> Prop) -> (A -> Prop) -> _107639 -> (A -> _107639) -> Prop)) = (@all ((_107639 -> Prop) -> (A -> Prop) -> _107639 -> (A -> _107639) -> Prop)).
Proof. exact (eq_refl (@all ((_107639 -> Prop) -> (A -> Prop) -> _107639 -> (A -> _107639) -> Prop))). Qed.
Lemma lem4532054 {_100044 _107639 _107642 A B : Type'} (_53778 : type656 _107642 A) (_53779 : type839 _107639 B) (_53780 : type839 _107642 B) (_53781 : type839 A B) (_53782 : type982 A) : (term684 _100044 _107639 _107642 A B _53778 _53779 _53780 _53781 _53782) = (term684 _100044 _107639 _107642 A B _53778 _53779 _53780 _53781 _53782).
Proof. exact (MK_COMB (@lem4532053 _107639 A) (@lem4532052 _100044 _107639 _107642 A B _53778 _53779 _53780 _53781 _53782)). Qed.
Lemma lem4532055 {_107642 A : Type'} (GEN_PVAR_148 : A -> _107642) (t : _107642 -> Prop) (s : A -> Prop) (d : _107642) (f : A -> _107642) : (term149 _107642 A GEN_PVAR_148 t s d f) = (term149 _107642 A GEN_PVAR_148 t s d f).
Proof. exact (eq_refl (term149 _107642 A GEN_PVAR_148 t s d f)). Qed.
Lemma lem4532056 {_107642 A : Type'} (GEN_PVAR_148 : A -> _107642) (t : _107642 -> Prop) (s : A -> Prop) (d : _107642) : (term150 _107642 A GEN_PVAR_148 t s d) = (term150 _107642 A GEN_PVAR_148 t s d).
Proof. exact (fun_ext (fun f : A -> _107642 => @lem4532055 _107642 A GEN_PVAR_148 t s d f)). Qed.
Lemma lem4532057 {_107642 A : Type'} : (@ex (A -> _107642)) = (@ex (A -> _107642)).
Proof. exact (eq_refl (@ex (A -> _107642))). Qed.
Lemma lem4532058 {_107642 A : Type'} (GEN_PVAR_148 : A -> _107642) (t : _107642 -> Prop) (s : A -> Prop) (d : _107642) : (term151 _107642 A GEN_PVAR_148 t s d) = (term151 _107642 A GEN_PVAR_148 t s d).
Proof. exact (MK_COMB (@lem4532057 _107642 A) (@lem4532056 _107642 A GEN_PVAR_148 t s d)). Qed.
Lemma lem4532061 {_107642 A : Type'} (_53778 : type656 _107642 A) (t : _107642 -> Prop) (s : A -> Prop) (d : _107642) (GEN_PVAR_148 : A -> _107642) : (term293 _107642 A _53778 t s d GEN_PVAR_148) = (term293 _107642 A _53778 t s d GEN_PVAR_148).
Proof. exact (eq_refl (term293 _107642 A _53778 t s d GEN_PVAR_148)). Qed.
Lemma lem4532062 {_107642 A : Type'} (_53778 : type656 _107642 A) (GEN_PVAR_148 : A -> _107642) (t : _107642 -> Prop) (s : A -> Prop) (d : _107642) : ((_53778 t s d GEN_PVAR_148) = (term151 _107642 A GEN_PVAR_148 t s d)) = ((_53778 t s d GEN_PVAR_148) = (term151 _107642 A GEN_PVAR_148 t s d)).
Proof. exact (MK_COMB (@lem4532061 _107642 A _53778 t s d GEN_PVAR_148) (@lem4532058 _107642 A GEN_PVAR_148 t s d)). Qed.
Lemma lem4532063 {_107642 A : Type'} (_53778 : type656 _107642 A) (t : _107642 -> Prop) (s : A -> Prop) (d : _107642) : (term295 _107642 A _53778 t s d) = (term295 _107642 A _53778 t s d).
Proof. exact (fun_ext (fun GEN_PVAR_148 : A -> _107642 => @lem4532062 _107642 A _53778 GEN_PVAR_148 t s d)). Qed.
Lemma lem4532064 {_107642 A : Type'} : (@all (A -> _107642)) = (@all (A -> _107642)).
Proof. exact (eq_refl (@all (A -> _107642))). Qed.
Lemma lem4532065 {_107642 A : Type'} (_53778 : type656 _107642 A) (t : _107642 -> Prop) (s : A -> Prop) (d : _107642) : (term296 _107642 A _53778 t s d) = (term296 _107642 A _53778 t s d).
Proof. exact (MK_COMB (@lem4532064 _107642 A) (@lem4532063 _107642 A _53778 t s d)). Qed.
Lemma lem4532066 {_107642 A : Type'} (_53778 : type656 _107642 A) (t : _107642 -> Prop) (s : A -> Prop) : (term297 _107642 A _53778 t s) = (term297 _107642 A _53778 t s).
Proof. exact (fun_ext (fun d : _107642 => @lem4532065 _107642 A _53778 t s d)). Qed.
Lemma lem4532067 {_107642 : Type'} : (@all _107642) = (@all _107642).
Proof. exact (eq_refl (@all _107642)). Qed.
Lemma lem4532068 {_107642 A : Type'} (_53778 : type656 _107642 A) (t : _107642 -> Prop) (s : A -> Prop) : (term298 _107642 A _53778 t s) = (term298 _107642 A _53778 t s).
Proof. exact (MK_COMB (@lem4532067 _107642) (@lem4532066 _107642 A _53778 t s)). Qed.
Lemma lem4532069 {_107642 A : Type'} (_53778 : type656 _107642 A) (t : _107642 -> Prop) : (term299 _107642 A _53778 t) = (term299 _107642 A _53778 t).
Proof. exact (fun_ext (fun s : A -> Prop => @lem4532068 _107642 A _53778 t s)). Qed.
Lemma lem4532070 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem4532071 {_107642 A : Type'} (_53778 : type656 _107642 A) (t : _107642 -> Prop) : (term300 _107642 A _53778 t) = (term300 _107642 A _53778 t).
Proof. exact (MK_COMB (@lem4532070 A) (@lem4532069 _107642 A _53778 t)). Qed.
Lemma lem4532072 {_107642 A : Type'} (_53778 : type656 _107642 A) : (term301 _107642 A _53778) = (term301 _107642 A _53778).
Proof. exact (fun_ext (fun t : _107642 -> Prop => @lem4532071 _107642 A _53778 t)). Qed.
Lemma lem4532073 {_107642 : Type'} : (@all (_107642 -> Prop)) = (@all (_107642 -> Prop)).
Proof. exact (eq_refl (@all (_107642 -> Prop))). Qed.
Lemma lem4532074 {_107642 A : Type'} (_53778 : type656 _107642 A) : (term302 _107642 A _53778) = (term302 _107642 A _53778).
Proof. exact (MK_COMB (@lem4532073 _107642) (@lem4532072 _107642 A _53778)). Qed.
Lemma lem4532075 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4532076 {_107642 A : Type'} (_53778 : type656 _107642 A) : (term303 _107642 A _53778) = (term303 _107642 A _53778).
Proof. exact (MK_COMB (@lem4532075) (@lem4532074 _107642 A _53778)). Qed.
Lemma lem4532077 {_100044 _107639 _107642 A B : Type'} (_53778 : type656 _107642 A) (_53779 : type839 _107639 B) (_53780 : type839 _107642 B) (_53781 : type839 A B) (_53782 : type982 A) : (term685 _100044 _107639 _107642 A B _53778 _53779 _53780 _53781 _53782) = (term685 _100044 _107639 _107642 A B _53778 _53779 _53780 _53781 _53782).
Proof. exact (MK_COMB (@lem4532076 _107642 A _53778) (@lem4532054 _100044 _107639 _107642 A B _53778 _53779 _53780 _53781 _53782)). Qed.
Lemma lem4532078 {_100044 _107639 _107642 A B : Type'} (_53779 : type839 _107639 B) (_53780 : type839 _107642 B) (_53781 : type839 A B) (_53782 : type982 A) : (term686 _100044 _107639 _107642 A B _53779 _53780 _53781 _53782) = (term686 _100044 _107639 _107642 A B _53779 _53780 _53781 _53782).
Proof. exact (fun_ext (fun _53778 : type656 _107642 A => @lem4532077 _100044 _107639 _107642 A B _53778 _53779 _53780 _53781 _53782)). Qed.
Lemma lem4532079 {_107642 A : Type'} : (@all ((_107642 -> Prop) -> (A -> Prop) -> _107642 -> (A -> _107642) -> Prop)) = (@all ((_107642 -> Prop) -> (A -> Prop) -> _107642 -> (A -> _107642) -> Prop)).
Proof. exact (eq_refl (@all ((_107642 -> Prop) -> (A -> Prop) -> _107642 -> (A -> _107642) -> Prop))). Qed.
Lemma lem4532080 {_100044 _107639 _107642 A B : Type'} (_53779 : type839 _107639 B) (_53780 : type839 _107642 B) (_53781 : type839 A B) (_53782 : type982 A) : (term687 _100044 _107639 _107642 A B _53779 _53780 _53781 _53782) = (term687 _100044 _107639 _107642 A B _53779 _53780 _53781 _53782).
Proof. exact (MK_COMB (@lem4532079 _107642 A) (@lem4532078 _100044 _107639 _107642 A B _53779 _53780 _53781 _53782)). Qed.
Lemma lem4532081 {_107639 B : Type'} (GEN_PVAR_148 : _107639 -> B) (t : B -> Prop) (s : _107639 -> Prop) (d : B) (f : _107639 -> B) : (term122 _107639 B GEN_PVAR_148 t s d f) = (term122 _107639 B GEN_PVAR_148 t s d f).
Proof. exact (eq_refl (term122 _107639 B GEN_PVAR_148 t s d f)). Qed.
Lemma lem4532082 {_107639 B : Type'} (GEN_PVAR_148 : _107639 -> B) (t : B -> Prop) (s : _107639 -> Prop) (d : B) : (term123 _107639 B GEN_PVAR_148 t s d) = (term123 _107639 B GEN_PVAR_148 t s d).
Proof. exact (fun_ext (fun f : _107639 -> B => @lem4532081 _107639 B GEN_PVAR_148 t s d f)). Qed.
Lemma lem4532083 {_107639 B : Type'} : (@ex (_107639 -> B)) = (@ex (_107639 -> B)).
Proof. exact (eq_refl (@ex (_107639 -> B))). Qed.
Lemma lem4532084 {_107639 B : Type'} (GEN_PVAR_148 : _107639 -> B) (t : B -> Prop) (s : _107639 -> Prop) (d : B) : (term124 _107639 B GEN_PVAR_148 t s d) = (term124 _107639 B GEN_PVAR_148 t s d).
Proof. exact (MK_COMB (@lem4532083 _107639 B) (@lem4532082 _107639 B GEN_PVAR_148 t s d)). Qed.
Lemma lem4532087 {_107639 B : Type'} (_53779 : type839 _107639 B) (t : B -> Prop) (s : _107639 -> Prop) (d : B) (GEN_PVAR_148 : _107639 -> B) : (term505 _107639 B _53779 t s d GEN_PVAR_148) = (term505 _107639 B _53779 t s d GEN_PVAR_148).
Proof. exact (eq_refl (term505 _107639 B _53779 t s d GEN_PVAR_148)). Qed.
Lemma lem4532088 {_107639 B : Type'} (_53779 : type839 _107639 B) (GEN_PVAR_148 : _107639 -> B) (t : B -> Prop) (s : _107639 -> Prop) (d : B) : ((_53779 t s d GEN_PVAR_148) = (term124 _107639 B GEN_PVAR_148 t s d)) = ((_53779 t s d GEN_PVAR_148) = (term124 _107639 B GEN_PVAR_148 t s d)).
Proof. exact (MK_COMB (@lem4532087 _107639 B _53779 t s d GEN_PVAR_148) (@lem4532084 _107639 B GEN_PVAR_148 t s d)). Qed.
Lemma lem4532089 {_107639 B : Type'} (_53779 : type839 _107639 B) (t : B -> Prop) (s : _107639 -> Prop) (d : B) : (term507 _107639 B _53779 t s d) = (term507 _107639 B _53779 t s d).
Proof. exact (fun_ext (fun GEN_PVAR_148 : _107639 -> B => @lem4532088 _107639 B _53779 GEN_PVAR_148 t s d)). Qed.
Lemma lem4532090 {_107639 B : Type'} : (@all (_107639 -> B)) = (@all (_107639 -> B)).
Proof. exact (eq_refl (@all (_107639 -> B))). Qed.
Lemma lem4532091 {_107639 B : Type'} (_53779 : type839 _107639 B) (t : B -> Prop) (s : _107639 -> Prop) (d : B) : (term508 _107639 B _53779 t s d) = (term508 _107639 B _53779 t s d).
Proof. exact (MK_COMB (@lem4532090 _107639 B) (@lem4532089 _107639 B _53779 t s d)). Qed.
Lemma lem4532092 {_107639 B : Type'} (_53779 : type839 _107639 B) (t : B -> Prop) (s : _107639 -> Prop) : (term509 _107639 B _53779 t s) = (term509 _107639 B _53779 t s).
Proof. exact (fun_ext (fun d : B => @lem4532091 _107639 B _53779 t s d)). Qed.
Lemma lem4532093 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem4532094 {_107639 B : Type'} (_53779 : type839 _107639 B) (t : B -> Prop) (s : _107639 -> Prop) : (term510 _107639 B _53779 t s) = (term510 _107639 B _53779 t s).
Proof. exact (MK_COMB (@lem4532093 B) (@lem4532092 _107639 B _53779 t s)). Qed.
Lemma lem4532095 {_107639 B : Type'} (_53779 : type839 _107639 B) (t : B -> Prop) : (term511 _107639 B _53779 t) = (term511 _107639 B _53779 t).
Proof. exact (fun_ext (fun s : _107639 -> Prop => @lem4532094 _107639 B _53779 t s)). Qed.
Lemma lem4532096 {_107639 : Type'} : (@all (_107639 -> Prop)) = (@all (_107639 -> Prop)).
Proof. exact (eq_refl (@all (_107639 -> Prop))). Qed.
Lemma lem4532097 {_107639 B : Type'} (_53779 : type839 _107639 B) (t : B -> Prop) : (term512 _107639 B _53779 t) = (term512 _107639 B _53779 t).
Proof. exact (MK_COMB (@lem4532096 _107639) (@lem4532095 _107639 B _53779 t)). Qed.
Lemma lem4532098 {_107639 B : Type'} (_53779 : type839 _107639 B) : (term513 _107639 B _53779) = (term513 _107639 B _53779).
Proof. exact (fun_ext (fun t : B -> Prop => @lem4532097 _107639 B _53779 t)). Qed.
Lemma lem4532099 {B : Type'} : (@all (B -> Prop)) = (@all (B -> Prop)).
Proof. exact (eq_refl (@all (B -> Prop))). Qed.
Lemma lem4532100 {_107639 B : Type'} (_53779 : type839 _107639 B) : (term514 _107639 B _53779) = (term514 _107639 B _53779).
Proof. exact (MK_COMB (@lem4532099 B) (@lem4532098 _107639 B _53779)). Qed.
Lemma lem4532101 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4532102 {_107639 B : Type'} (_53779 : type839 _107639 B) : (term515 _107639 B _53779) = (term515 _107639 B _53779).
Proof. exact (MK_COMB (@lem4532101) (@lem4532100 _107639 B _53779)). Qed.
Lemma lem4532103 {_100044 _107639 _107642 A B : Type'} (_53779 : type839 _107639 B) (_53780 : type839 _107642 B) (_53781 : type839 A B) (_53782 : type982 A) : (term688 _100044 _107639 _107642 A B _53779 _53780 _53781 _53782) = (term688 _100044 _107639 _107642 A B _53779 _53780 _53781 _53782).
Proof. exact (MK_COMB (@lem4532102 _107639 B _53779) (@lem4532080 _100044 _107639 _107642 A B _53779 _53780 _53781 _53782)). Qed.
Lemma lem4532104 {_100044 _107639 _107642 A B : Type'} (_53780 : type839 _107642 B) (_53781 : type839 A B) (_53782 : type982 A) : (term689 _100044 _107639 _107642 A B _53780 _53781 _53782) = (term689 _100044 _107639 _107642 A B _53780 _53781 _53782).
Proof. exact (fun_ext (fun _53779 : type839 _107639 B => @lem4532103 _100044 _107639 _107642 A B _53779 _53780 _53781 _53782)). Qed.
Lemma lem4532105 {_107639 B : Type'} : (@all ((B -> Prop) -> (_107639 -> Prop) -> B -> (_107639 -> B) -> Prop)) = (@all ((B -> Prop) -> (_107639 -> Prop) -> B -> (_107639 -> B) -> Prop)).
Proof. exact (eq_refl (@all ((B -> Prop) -> (_107639 -> Prop) -> B -> (_107639 -> B) -> Prop))). Qed.
Lemma lem4532106 {_100044 _107639 _107642 A B : Type'} (_53780 : type839 _107642 B) (_53781 : type839 A B) (_53782 : type982 A) : (term690 _100044 _107639 _107642 A B _53780 _53781 _53782) = (term690 _100044 _107639 _107642 A B _53780 _53781 _53782).
Proof. exact (MK_COMB (@lem4532105 _107639 B) (@lem4532104 _100044 _107639 _107642 A B _53780 _53781 _53782)). Qed.
Lemma lem4532107 {_107642 B : Type'} (GEN_PVAR_148 : _107642 -> B) (t : B -> Prop) (s : _107642 -> Prop) (d : B) (f : _107642 -> B) : (term122 _107642 B GEN_PVAR_148 t s d f) = (term122 _107642 B GEN_PVAR_148 t s d f).
Proof. exact (eq_refl (term122 _107642 B GEN_PVAR_148 t s d f)). Qed.
Lemma lem4532108 {_107642 B : Type'} (GEN_PVAR_148 : _107642 -> B) (t : B -> Prop) (s : _107642 -> Prop) (d : B) : (term123 _107642 B GEN_PVAR_148 t s d) = (term123 _107642 B GEN_PVAR_148 t s d).
Proof. exact (fun_ext (fun f : _107642 -> B => @lem4532107 _107642 B GEN_PVAR_148 t s d f)). Qed.
Lemma lem4532109 {_107642 B : Type'} : (@ex (_107642 -> B)) = (@ex (_107642 -> B)).
Proof. exact (eq_refl (@ex (_107642 -> B))). Qed.
Lemma lem4532110 {_107642 B : Type'} (GEN_PVAR_148 : _107642 -> B) (t : B -> Prop) (s : _107642 -> Prop) (d : B) : (term124 _107642 B GEN_PVAR_148 t s d) = (term124 _107642 B GEN_PVAR_148 t s d).
Proof. exact (MK_COMB (@lem4532109 _107642 B) (@lem4532108 _107642 B GEN_PVAR_148 t s d)). Qed.
Lemma lem4532113 {_107642 B : Type'} (_53780 : type839 _107642 B) (t : B -> Prop) (s : _107642 -> Prop) (d : B) (GEN_PVAR_148 : _107642 -> B) : (term505 _107642 B _53780 t s d GEN_PVAR_148) = (term505 _107642 B _53780 t s d GEN_PVAR_148).
Proof. exact (eq_refl (term505 _107642 B _53780 t s d GEN_PVAR_148)). Qed.
Lemma lem4532114 {_107642 B : Type'} (_53780 : type839 _107642 B) (GEN_PVAR_148 : _107642 -> B) (t : B -> Prop) (s : _107642 -> Prop) (d : B) : ((_53780 t s d GEN_PVAR_148) = (term124 _107642 B GEN_PVAR_148 t s d)) = ((_53780 t s d GEN_PVAR_148) = (term124 _107642 B GEN_PVAR_148 t s d)).
Proof. exact (MK_COMB (@lem4532113 _107642 B _53780 t s d GEN_PVAR_148) (@lem4532110 _107642 B GEN_PVAR_148 t s d)). Qed.
Lemma lem4532115 {_107642 B : Type'} (_53780 : type839 _107642 B) (t : B -> Prop) (s : _107642 -> Prop) (d : B) : (term507 _107642 B _53780 t s d) = (term507 _107642 B _53780 t s d).
Proof. exact (fun_ext (fun GEN_PVAR_148 : _107642 -> B => @lem4532114 _107642 B _53780 GEN_PVAR_148 t s d)). Qed.
Lemma lem4532116 {_107642 B : Type'} : (@all (_107642 -> B)) = (@all (_107642 -> B)).
Proof. exact (eq_refl (@all (_107642 -> B))). Qed.
Lemma lem4532117 {_107642 B : Type'} (_53780 : type839 _107642 B) (t : B -> Prop) (s : _107642 -> Prop) (d : B) : (term508 _107642 B _53780 t s d) = (term508 _107642 B _53780 t s d).
Proof. exact (MK_COMB (@lem4532116 _107642 B) (@lem4532115 _107642 B _53780 t s d)). Qed.
Lemma lem4532118 {_107642 B : Type'} (_53780 : type839 _107642 B) (t : B -> Prop) (s : _107642 -> Prop) : (term509 _107642 B _53780 t s) = (term509 _107642 B _53780 t s).
Proof. exact (fun_ext (fun d : B => @lem4532117 _107642 B _53780 t s d)). Qed.
Lemma lem4532119 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem4532120 {_107642 B : Type'} (_53780 : type839 _107642 B) (t : B -> Prop) (s : _107642 -> Prop) : (term510 _107642 B _53780 t s) = (term510 _107642 B _53780 t s).
Proof. exact (MK_COMB (@lem4532119 B) (@lem4532118 _107642 B _53780 t s)). Qed.
Lemma lem4532121 {_107642 B : Type'} (_53780 : type839 _107642 B) (t : B -> Prop) : (term511 _107642 B _53780 t) = (term511 _107642 B _53780 t).
Proof. exact (fun_ext (fun s : _107642 -> Prop => @lem4532120 _107642 B _53780 t s)). Qed.
Lemma lem4532122 {_107642 : Type'} : (@all (_107642 -> Prop)) = (@all (_107642 -> Prop)).
Proof. exact (eq_refl (@all (_107642 -> Prop))). Qed.
Lemma lem4532123 {_107642 B : Type'} (_53780 : type839 _107642 B) (t : B -> Prop) : (term512 _107642 B _53780 t) = (term512 _107642 B _53780 t).
Proof. exact (MK_COMB (@lem4532122 _107642) (@lem4532121 _107642 B _53780 t)). Qed.
Lemma lem4532124 {_107642 B : Type'} (_53780 : type839 _107642 B) : (term513 _107642 B _53780) = (term513 _107642 B _53780).
Proof. exact (fun_ext (fun t : B -> Prop => @lem4532123 _107642 B _53780 t)). Qed.
Lemma lem4532125 {B : Type'} : (@all (B -> Prop)) = (@all (B -> Prop)).
Proof. exact (eq_refl (@all (B -> Prop))). Qed.
Lemma lem4532126 {_107642 B : Type'} (_53780 : type839 _107642 B) : (term514 _107642 B _53780) = (term514 _107642 B _53780).
Proof. exact (MK_COMB (@lem4532125 B) (@lem4532124 _107642 B _53780)). Qed.
Lemma lem4532127 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4532128 {_107642 B : Type'} (_53780 : type839 _107642 B) : (term515 _107642 B _53780) = (term515 _107642 B _53780).
Proof. exact (MK_COMB (@lem4532127) (@lem4532126 _107642 B _53780)). Qed.
Lemma lem4532129 {_100044 _107639 _107642 A B : Type'} (_53780 : type839 _107642 B) (_53781 : type839 A B) (_53782 : type982 A) : (term691 _100044 _107639 _107642 A B _53780 _53781 _53782) = (term691 _100044 _107639 _107642 A B _53780 _53781 _53782).
Proof. exact (MK_COMB (@lem4532128 _107642 B _53780) (@lem4532106 _100044 _107639 _107642 A B _53780 _53781 _53782)). Qed.
Lemma lem4532130 {_100044 _107639 _107642 A B : Type'} (_53781 : type839 A B) (_53782 : type982 A) : (term692 _100044 _107639 _107642 A B _53781 _53782) = (term692 _100044 _107639 _107642 A B _53781 _53782).
Proof. exact (fun_ext (fun _53780 : type839 _107642 B => @lem4532129 _100044 _107639 _107642 A B _53780 _53781 _53782)). Qed.
Lemma lem4532131 {_107642 B : Type'} : (@all ((B -> Prop) -> (_107642 -> Prop) -> B -> (_107642 -> B) -> Prop)) = (@all ((B -> Prop) -> (_107642 -> Prop) -> B -> (_107642 -> B) -> Prop)).
Proof. exact (eq_refl (@all ((B -> Prop) -> (_107642 -> Prop) -> B -> (_107642 -> B) -> Prop))). Qed.
Lemma lem4532132 {_100044 _107639 _107642 A B : Type'} (_53781 : type839 A B) (_53782 : type982 A) : (term693 _100044 _107639 _107642 A B _53781 _53782) = (term693 _100044 _107639 _107642 A B _53781 _53782).
Proof. exact (MK_COMB (@lem4532131 _107642 B) (@lem4532130 _100044 _107639 _107642 A B _53781 _53782)). Qed.
Lemma lem4532133 {A B : Type'} (GEN_PVAR_148 : A -> B) (t : B -> Prop) (s : A -> Prop) (d : B) (f : A -> B) : (term122 A B GEN_PVAR_148 t s d f) = (term122 A B GEN_PVAR_148 t s d f).
Proof. exact (eq_refl (term122 A B GEN_PVAR_148 t s d f)). Qed.
Lemma lem4532134 {A B : Type'} (GEN_PVAR_148 : A -> B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term123 A B GEN_PVAR_148 t s d) = (term123 A B GEN_PVAR_148 t s d).
Proof. exact (fun_ext (fun f : A -> B => @lem4532133 A B GEN_PVAR_148 t s d f)). Qed.
Lemma lem4532135 {A B : Type'} : (@ex (A -> B)) = (@ex (A -> B)).
Proof. exact (eq_refl (@ex (A -> B))). Qed.
Lemma lem4532136 {A B : Type'} (GEN_PVAR_148 : A -> B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term124 A B GEN_PVAR_148 t s d) = (term124 A B GEN_PVAR_148 t s d).
Proof. exact (MK_COMB (@lem4532135 A B) (@lem4532134 A B GEN_PVAR_148 t s d)). Qed.
Lemma lem4532139 {A B : Type'} (_53781 : type839 A B) (t : B -> Prop) (s : A -> Prop) (d : B) (GEN_PVAR_148 : A -> B) : (term505 A B _53781 t s d GEN_PVAR_148) = (term505 A B _53781 t s d GEN_PVAR_148).
Proof. exact (eq_refl (term505 A B _53781 t s d GEN_PVAR_148)). Qed.
Lemma lem4532140 {A B : Type'} (_53781 : type839 A B) (GEN_PVAR_148 : A -> B) (t : B -> Prop) (s : A -> Prop) (d : B) : ((_53781 t s d GEN_PVAR_148) = (term124 A B GEN_PVAR_148 t s d)) = ((_53781 t s d GEN_PVAR_148) = (term124 A B GEN_PVAR_148 t s d)).
Proof. exact (MK_COMB (@lem4532139 A B _53781 t s d GEN_PVAR_148) (@lem4532136 A B GEN_PVAR_148 t s d)). Qed.
Lemma lem4532141 {A B : Type'} (_53781 : type839 A B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term507 A B _53781 t s d) = (term507 A B _53781 t s d).
Proof. exact (fun_ext (fun GEN_PVAR_148 : A -> B => @lem4532140 A B _53781 GEN_PVAR_148 t s d)). Qed.
Lemma lem4532142 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem4532143 {A B : Type'} (_53781 : type839 A B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term508 A B _53781 t s d) = (term508 A B _53781 t s d).
Proof. exact (MK_COMB (@lem4532142 A B) (@lem4532141 A B _53781 t s d)). Qed.
Lemma lem4532144 {A B : Type'} (_53781 : type839 A B) (t : B -> Prop) (s : A -> Prop) : (term509 A B _53781 t s) = (term509 A B _53781 t s).
Proof. exact (fun_ext (fun d : B => @lem4532143 A B _53781 t s d)). Qed.
Lemma lem4532145 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem4532146 {A B : Type'} (_53781 : type839 A B) (t : B -> Prop) (s : A -> Prop) : (term510 A B _53781 t s) = (term510 A B _53781 t s).
Proof. exact (MK_COMB (@lem4532145 B) (@lem4532144 A B _53781 t s)). Qed.
Lemma lem4532147 {A B : Type'} (_53781 : type839 A B) (t : B -> Prop) : (term511 A B _53781 t) = (term511 A B _53781 t).
Proof. exact (fun_ext (fun s : A -> Prop => @lem4532146 A B _53781 t s)). Qed.
Lemma lem4532148 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem4532149 {A B : Type'} (_53781 : type839 A B) (t : B -> Prop) : (term512 A B _53781 t) = (term512 A B _53781 t).
Proof. exact (MK_COMB (@lem4532148 A) (@lem4532147 A B _53781 t)). Qed.
Lemma lem4532150 {A B : Type'} (_53781 : type839 A B) : (term513 A B _53781) = (term513 A B _53781).
Proof. exact (fun_ext (fun t : B -> Prop => @lem4532149 A B _53781 t)). Qed.
Lemma lem4532151 {B : Type'} : (@all (B -> Prop)) = (@all (B -> Prop)).
Proof. exact (eq_refl (@all (B -> Prop))). Qed.
Lemma lem4532152 {A B : Type'} (_53781 : type839 A B) : (term514 A B _53781) = (term514 A B _53781).
Proof. exact (MK_COMB (@lem4532151 B) (@lem4532150 A B _53781)). Qed.
Lemma lem4532153 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4532154 {A B : Type'} (_53781 : type839 A B) : (term515 A B _53781) = (term515 A B _53781).
Proof. exact (MK_COMB (@lem4532153) (@lem4532152 A B _53781)). Qed.
Lemma lem4532155 {_100044 _107639 _107642 A B : Type'} (_53781 : type839 A B) (_53782 : type982 A) : (term694 _100044 _107639 _107642 A B _53781 _53782) = (term694 _100044 _107639 _107642 A B _53781 _53782).
Proof. exact (MK_COMB (@lem4532154 A B _53781) (@lem4532132 _100044 _107639 _107642 A B _53781 _53782)). Qed.
Lemma lem4532156 {_100044 _107639 _107642 A B : Type'} (_53782 : type982 A) : (term695 _100044 _107639 _107642 A B _53782) = (term695 _100044 _107639 _107642 A B _53782).
Proof. exact (fun_ext (fun _53781 : type839 A B => @lem4532155 _100044 _107639 _107642 A B _53781 _53782)). Qed.
Lemma lem4532157 {A B : Type'} : (@all ((B -> Prop) -> (A -> Prop) -> B -> (A -> B) -> Prop)) = (@all ((B -> Prop) -> (A -> Prop) -> B -> (A -> B) -> Prop)).
Proof. exact (eq_refl (@all ((B -> Prop) -> (A -> Prop) -> B -> (A -> B) -> Prop))). Qed.
Lemma lem4532158 {_100044 _107639 _107642 A B : Type'} (_53782 : type982 A) : (term696 _100044 _107639 _107642 A B _53782) = (term696 _100044 _107639 _107642 A B _53782).
Proof. exact (MK_COMB (@lem4532157 A B) (@lem4532156 _100044 _107639 _107642 A B _53782)). Qed.
Lemma lem4532159 {A : Type'} (GEN_PVAR_148 : A -> nat) (t : nat -> Prop) (s : A -> Prop) (d : nat) (f : A -> nat) : (term95 A GEN_PVAR_148 t s d f) = (term95 A GEN_PVAR_148 t s d f).
Proof. exact (eq_refl (term95 A GEN_PVAR_148 t s d f)). Qed.
Lemma lem4532160 {A : Type'} (GEN_PVAR_148 : A -> nat) (t : nat -> Prop) (s : A -> Prop) (d : nat) : (term96 A GEN_PVAR_148 t s d) = (term96 A GEN_PVAR_148 t s d).
Proof. exact (fun_ext (fun f : A -> nat => @lem4532159 A GEN_PVAR_148 t s d f)). Qed.
Lemma lem4532161 {A : Type'} : (@ex (A -> nat)) = (@ex (A -> nat)).
Proof. exact (eq_refl (@ex (A -> nat))). Qed.
Lemma lem4532162 {A : Type'} (GEN_PVAR_148 : A -> nat) (t : nat -> Prop) (s : A -> Prop) (d : nat) : (term97 A GEN_PVAR_148 t s d) = (term97 A GEN_PVAR_148 t s d).
Proof. exact (MK_COMB (@lem4532161 A) (@lem4532160 A GEN_PVAR_148 t s d)). Qed.
Lemma lem4532165 {A : Type'} (_53782 : type982 A) (t : nat -> Prop) (s : A -> Prop) (d : nat) (GEN_PVAR_148 : A -> nat) : (term752 A _53782 t s d GEN_PVAR_148) = (term752 A _53782 t s d GEN_PVAR_148).
Proof. exact (eq_refl (term752 A _53782 t s d GEN_PVAR_148)). Qed.
Lemma lem4532166 {A : Type'} (_53782 : type982 A) (GEN_PVAR_148 : A -> nat) (t : nat -> Prop) (s : A -> Prop) (d : nat) : ((_53782 t s d GEN_PVAR_148) = (term97 A GEN_PVAR_148 t s d)) = ((_53782 t s d GEN_PVAR_148) = (term97 A GEN_PVAR_148 t s d)).
Proof. exact (MK_COMB (@lem4532165 A _53782 t s d GEN_PVAR_148) (@lem4532162 A GEN_PVAR_148 t s d)). Qed.
Lemma lem4532167 {A : Type'} (_53782 : type982 A) (t : nat -> Prop) (s : A -> Prop) (d : nat) : (term754 A _53782 t s d) = (term754 A _53782 t s d).
Proof. exact (fun_ext (fun GEN_PVAR_148 : A -> nat => @lem4532166 A _53782 GEN_PVAR_148 t s d)). Qed.
Lemma lem4532168 {A : Type'} : (@all (A -> nat)) = (@all (A -> nat)).
Proof. exact (eq_refl (@all (A -> nat))). Qed.
Lemma lem4532169 {A : Type'} (_53782 : type982 A) (t : nat -> Prop) (s : A -> Prop) (d : nat) : (term755 A _53782 t s d) = (term755 A _53782 t s d).
Proof. exact (MK_COMB (@lem4532168 A) (@lem4532167 A _53782 t s d)). Qed.
Lemma lem4532170 {A : Type'} (_53782 : type982 A) (t : nat -> Prop) (s : A -> Prop) : (term756 A _53782 t s) = (term756 A _53782 t s).
Proof. exact (fun_ext (fun d : nat => @lem4532169 A _53782 t s d)). Qed.
Lemma lem4532171 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4532172 {A : Type'} (_53782 : type982 A) (t : nat -> Prop) (s : A -> Prop) : (term757 A _53782 t s) = (term757 A _53782 t s).
Proof. exact (MK_COMB (@lem4532171) (@lem4532170 A _53782 t s)). Qed.
Lemma lem4532173 {A : Type'} (_53782 : type982 A) (t : nat -> Prop) : (term758 A _53782 t) = (term758 A _53782 t).
Proof. exact (fun_ext (fun s : A -> Prop => @lem4532172 A _53782 t s)). Qed.
Lemma lem4532174 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem4532175 {A : Type'} (_53782 : type982 A) (t : nat -> Prop) : (term759 A _53782 t) = (term759 A _53782 t).
Proof. exact (MK_COMB (@lem4532174 A) (@lem4532173 A _53782 t)). Qed.
Lemma lem4532176 {A : Type'} (_53782 : type982 A) : (term760 A _53782) = (term760 A _53782).
Proof. exact (fun_ext (fun t : nat -> Prop => @lem4532175 A _53782 t)). Qed.
Lemma lem4532177 : (@all (nat -> Prop)) = (@all (nat -> Prop)).
Proof. exact (eq_refl (@all (nat -> Prop))). Qed.
Lemma lem4532178 {A : Type'} (_53782 : type982 A) : (term761 A _53782) = (term761 A _53782).
Proof. exact (MK_COMB (@lem4532177) (@lem4532176 A _53782)). Qed.
Lemma lem4532179 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4532180 {A : Type'} (_53782 : type982 A) : (term762 A _53782) = (term762 A _53782).
Proof. exact (MK_COMB (@lem4532179) (@lem4532178 A _53782)). Qed.
Lemma lem4532181 {_100044 _107639 _107642 A B : Type'} (_53782 : type982 A) : (term763 _100044 _107639 _107642 A B _53782) = (term763 _100044 _107639 _107642 A B _53782).
Proof. exact (MK_COMB (@lem4532180 A _53782) (@lem4532158 _100044 _107639 _107642 A B _53782)). Qed.
Lemma lem4532182 {_100044 _107639 _107642 A B : Type'} : (term764 _100044 _107639 _107642 A B) = (term764 _100044 _107639 _107642 A B).
Proof. exact (fun_ext (fun _53782 : type982 A => @lem4532181 _100044 _107639 _107642 A B _53782)). Qed.
Lemma lem4532183 {A : Type'} : (@all ((nat -> Prop) -> (A -> Prop) -> nat -> (A -> nat) -> Prop)) = (@all ((nat -> Prop) -> (A -> Prop) -> nat -> (A -> nat) -> Prop)).
Proof. exact (eq_refl (@all ((nat -> Prop) -> (A -> Prop) -> nat -> (A -> nat) -> Prop))). Qed.
Lemma lem4532184 {_100044 _107639 _107642 A B : Type'} : (term765 _100044 _107639 _107642 A B) = (term765 _100044 _107639 _107642 A B).
Proof. exact (MK_COMB (@lem4532183 A) (@lem4532182 _100044 _107639 _107642 A B)). Qed.
Lemma lem4533061 {_100044 _107639 _107642 A B : Type'} : (term74 _100044 _107639 _107642 A B) = (term765 _100044 _107639 _107642 A B).
Proof. exact (TRANS (@lem4531557 _100044 _107639 _107642 A B) (@lem4532184 _100044 _107639 _107642 A B)). Qed.
Lemma lem4533062 {_100044 _107639 _107642 A B : Type'} : (term765 _100044 _107639 _107642 A B) = (term74 _100044 _107639 _107642 A B).
Proof. exact (SYM (@lem4533061 _100044 _107639 _107642 A B)). Qed.
Lemma lem4533063 {A : Type'} (_53782 : type982 A) (h1 : term761 A _53782) : term761 A _53782.
Proof. exact (h1). Qed.
Lemma lem4533064 {A B : Type'} (_53781 : type839 A B) (h1 : term514 A B _53781) : term514 A B _53781.
Proof. exact (h1). Qed.
Lemma lem4533065 {_107642 B : Type'} (_53780 : type839 _107642 B) (h1 : term514 _107642 B _53780) : term514 _107642 B _53780.
Proof. exact (h1). Qed.
Lemma lem4533066 {_107639 B : Type'} (_53779 : type839 _107639 B) (h1 : term514 _107639 B _53779) : term514 _107639 B _53779.
Proof. exact (h1). Qed.
Lemma lem4533067 {_107642 A : Type'} (_53778 : type656 _107642 A) (h1 : term302 _107642 A _53778) : term302 _107642 A _53778.
Proof. exact (h1). Qed.
Lemma lem4533068 {_107639 A : Type'} (_53777 : type656 _107639 A) (h1 : term302 _107639 A _53777) : term302 _107639 A _53777.
Proof. exact (h1). Qed.
Lemma lem4533069 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (h1 : term302 _107639 _107642 _53776) : term302 _107639 _107642 _53776.
Proof. exact (h1). Qed.
Lemma lem4533070 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (d : _107639) (h1 : term230 _107639 _107642 _53776 d) : term230 _107639 _107642 _53776 d.
Proof. exact (h1). Qed.
Lemma lem4533072 {_107639 : Type'} (h1 : term14 _107639) : term14 _107639.
Proof. exact (h1). Qed.
Lemma lem4533073 {_107642 : Type'} (h1 : term14 _107642) : term14 _107642.
Proof. exact (h1). Qed.
Lemma lem4533077 {_107639 _107642 : Type'} (h1 : term18 _107639 _107642) : term18 _107639 _107642.
Proof. exact (h1). Qed.
Lemma lem4533084 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (h1 : term179 _107639 _107642 _53776) : term179 _107639 _107642 _53776.
Proof. exact (h1). Qed.
Lemma lem4533094 {A : Type'} (GEN_PVAR_148 : A -> nat) (t : nat -> Prop) (s : A -> Prop) (d : nat) (f : A -> nat) : (term95 A GEN_PVAR_148 t s d f) = (term95 A GEN_PVAR_148 t s d f).
Proof. exact (eq_refl (term95 A GEN_PVAR_148 t s d f)). Qed.
Lemma lem4533095 {A : Type'} (P : type704 A) : (term766 A P) = (term767 A P).
Proof. exact (@lem18394 (A -> nat) P). Qed.
Lemma lem4533096 {A : Type'} (GEN_PVAR_148 : A -> nat) (t : nat -> Prop) (s : A -> Prop) (d : nat) : (term768 A GEN_PVAR_148 t s d) = (term769 A GEN_PVAR_148 t s d).
Proof. exact (@lem4533095 A (term96 A GEN_PVAR_148 t s d)). Qed.
Lemma lem4533097 {A : Type'} (GEN_PVAR_148 : A -> nat) (t : nat -> Prop) (s : A -> Prop) (d : nat) (f : A -> nat) : (term770 A GEN_PVAR_148 t s d f) = (term95 A GEN_PVAR_148 t s d f).
Proof. exact (eq_refl (term770 A GEN_PVAR_148 t s d f)). Qed.
Lemma lem4533098 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem4533100 {A : Type'} (GEN_PVAR_148 : A -> nat) (t : nat -> Prop) (s : A -> Prop) (d : nat) (f : A -> nat) : (term771 A GEN_PVAR_148 t s d f) = (term772 A GEN_PVAR_148 t s d f).
Proof. exact (MK_COMB (@lem4533098) (@lem4533097 A GEN_PVAR_148 t s d f)). Qed.
Lemma lem4533101 {A : Type'} (GEN_PVAR_148 : A -> nat) (t : nat -> Prop) (s : A -> Prop) (d : nat) : (term773 A GEN_PVAR_148 t s d) = (term774 A GEN_PVAR_148 t s d).
Proof. exact (fun_ext (fun f : A -> nat => @lem4533100 A GEN_PVAR_148 t s d f)). Qed.
Lemma lem4533102 {A : Type'} : (@all (A -> nat)) = (@all (A -> nat)).
Proof. exact (eq_refl (@all (A -> nat))). Qed.
Lemma lem4533103 {A : Type'} (GEN_PVAR_148 : A -> nat) (t : nat -> Prop) (s : A -> Prop) (d : nat) : (term769 A GEN_PVAR_148 t s d) = (term775 A GEN_PVAR_148 t s d).
Proof. exact (MK_COMB (@lem4533102 A) (@lem4533101 A GEN_PVAR_148 t s d)). Qed.
Lemma lem4533104 {A : Type'} (GEN_PVAR_148 : A -> nat) (t : nat -> Prop) (s : A -> Prop) (d : nat) : (term768 A GEN_PVAR_148 t s d) = (term775 A GEN_PVAR_148 t s d).
Proof. exact (TRANS (@lem4533096 A GEN_PVAR_148 t s d) (@lem4533103 A GEN_PVAR_148 t s d)). Qed.
Lemma lem4533105 {A : Type'} (GEN_PVAR_148 : A -> nat) (t : nat -> Prop) (s : A -> Prop) (d : nat) : (term96 A GEN_PVAR_148 t s d) = (term96 A GEN_PVAR_148 t s d).
Proof. exact (fun_ext (fun f : A -> nat => @lem4533094 A GEN_PVAR_148 t s d f)). Qed.
Lemma lem4533106 {A : Type'} : (@ex (A -> nat)) = (@ex (A -> nat)).
Proof. exact (eq_refl (@ex (A -> nat))). Qed.
Lemma lem4533107 {A : Type'} (GEN_PVAR_148 : A -> nat) (t : nat -> Prop) (s : A -> Prop) (d : nat) : (term97 A GEN_PVAR_148 t s d) = (term97 A GEN_PVAR_148 t s d).
Proof. exact (MK_COMB (@lem4533106 A) (@lem4533105 A GEN_PVAR_148 t s d)). Qed.
Lemma lem4533109 {A : Type'} (_53782 : type982 A) (t : nat -> Prop) (s : A -> Prop) (d : nat) (GEN_PVAR_148 : A -> nat) : (term776 A _53782 t s d GEN_PVAR_148) = (term776 A _53782 t s d GEN_PVAR_148).
Proof. exact (eq_refl (term776 A _53782 t s d GEN_PVAR_148)). Qed.
Lemma lem4533110 {A : Type'} (_53782 : type982 A) (GEN_PVAR_148 : A -> nat) (t : nat -> Prop) (s : A -> Prop) (d : nat) : (term777 A _53782 GEN_PVAR_148 t s d) = (term777 A _53782 GEN_PVAR_148 t s d).
Proof. exact (MK_COMB (@lem4533109 A _53782 t s d GEN_PVAR_148) (@lem4533107 A GEN_PVAR_148 t s d)). Qed.
Lemma lem4533112 {A : Type'} (_53782 : type982 A) (t : nat -> Prop) (s : A -> Prop) (d : nat) (GEN_PVAR_148 : A -> nat) : (term778 A _53782 t s d GEN_PVAR_148) = (term778 A _53782 t s d GEN_PVAR_148).
Proof. exact (eq_refl (term778 A _53782 t s d GEN_PVAR_148)). Qed.
Lemma lem4533113 {A : Type'} (_53782 : type982 A) (GEN_PVAR_148 : A -> nat) (t : nat -> Prop) (s : A -> Prop) (d : nat) : (term779 A _53782 GEN_PVAR_148 t s d) = (term780 A _53782 GEN_PVAR_148 t s d).
Proof. exact (MK_COMB (@lem4533112 A _53782 t s d GEN_PVAR_148) (@lem4533104 A GEN_PVAR_148 t s d)). Qed.
Lemma lem4533114 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4533115 {A : Type'} (_53782 : type982 A) (GEN_PVAR_148 : A -> nat) (t : nat -> Prop) (s : A -> Prop) (d : nat) : (term781 A _53782 GEN_PVAR_148 t s d) = (term782 A _53782 GEN_PVAR_148 t s d).
Proof. exact (MK_COMB (@lem4533114) (@lem4533113 A _53782 GEN_PVAR_148 t s d)). Qed.
Lemma lem4533116 {A : Type'} (_53782 : type982 A) (GEN_PVAR_148 : A -> nat) (t : nat -> Prop) (s : A -> Prop) (d : nat) : (term783 A _53782 GEN_PVAR_148 t s d) = (term784 A _53782 GEN_PVAR_148 t s d).
Proof. exact (MK_COMB (@lem4533115 A _53782 GEN_PVAR_148 t s d) (@lem4533110 A _53782 GEN_PVAR_148 t s d)). Qed.
Lemma lem4533117 {A : Type'} (_53782 : type982 A) (GEN_PVAR_148 : A -> nat) (t : nat -> Prop) (s : A -> Prop) (d : nat) : ((_53782 t s d GEN_PVAR_148) = (term97 A GEN_PVAR_148 t s d)) = (term783 A _53782 GEN_PVAR_148 t s d).
Proof. exact (@lem17784 (_53782 t s d GEN_PVAR_148) (term97 A GEN_PVAR_148 t s d)). Qed.
Lemma lem4533118 {A : Type'} (_53782 : type982 A) (GEN_PVAR_148 : A -> nat) (t : nat -> Prop) (s : A -> Prop) (d : nat) : ((_53782 t s d GEN_PVAR_148) = (term97 A GEN_PVAR_148 t s d)) = (term784 A _53782 GEN_PVAR_148 t s d).
Proof. exact (TRANS (@lem4533117 A _53782 GEN_PVAR_148 t s d) (@lem4533116 A _53782 GEN_PVAR_148 t s d)). Qed.
Lemma lem4533119 {A : Type'} (_53782 : type982 A) (t : nat -> Prop) (s : A -> Prop) (d : nat) : (term754 A _53782 t s d) = (term785 A _53782 t s d).
Proof. exact (fun_ext (fun GEN_PVAR_148 : A -> nat => @lem4533118 A _53782 GEN_PVAR_148 t s d)). Qed.
Lemma lem4533120 {A : Type'} : (@all (A -> nat)) = (@all (A -> nat)).
Proof. exact (eq_refl (@all (A -> nat))). Qed.
Lemma lem4533121 {A : Type'} (_53782 : type982 A) (t : nat -> Prop) (s : A -> Prop) (d : nat) : (term755 A _53782 t s d) = (term786 A _53782 t s d).
Proof. exact (MK_COMB (@lem4533120 A) (@lem4533119 A _53782 t s d)). Qed.
Lemma lem4533122 {A : Type'} (_53782 : type982 A) (t : nat -> Prop) (s : A -> Prop) : (term756 A _53782 t s) = (term787 A _53782 t s).
Proof. exact (fun_ext (fun d : nat => @lem4533121 A _53782 t s d)). Qed.
Lemma lem4533123 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4533124 {A : Type'} (_53782 : type982 A) (t : nat -> Prop) (s : A -> Prop) : (term757 A _53782 t s) = (term788 A _53782 t s).
Proof. exact (MK_COMB (@lem4533123) (@lem4533122 A _53782 t s)). Qed.
Lemma lem4533125 {A : Type'} (_53782 : type982 A) (t : nat -> Prop) : (term758 A _53782 t) = (term789 A _53782 t).
Proof. exact (fun_ext (fun s : A -> Prop => @lem4533124 A _53782 t s)). Qed.
Lemma lem4533126 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem4533127 {A : Type'} (_53782 : type982 A) (t : nat -> Prop) : (term759 A _53782 t) = (term790 A _53782 t).
Proof. exact (MK_COMB (@lem4533126 A) (@lem4533125 A _53782 t)). Qed.
Lemma lem4533128 {A : Type'} (_53782 : type982 A) : (term760 A _53782) = (term791 A _53782).
Proof. exact (fun_ext (fun t : nat -> Prop => @lem4533127 A _53782 t)). Qed.
Lemma lem4533129 : (@all (nat -> Prop)) = (@all (nat -> Prop)).
Proof. exact (eq_refl (@all (nat -> Prop))). Qed.
Lemma lem4533130 {A : Type'} (_53782 : type982 A) : (term761 A _53782) = (term792 A _53782).
Proof. exact (MK_COMB (@lem4533129) (@lem4533128 A _53782)). Qed.
Lemma lem4533144 {A : Type'} (P : A -> Prop) (Q : A -> Prop) : (term793 A P Q) = (term794 A P Q).
Proof. exact (EQ_MP (@lem18953 A P Q) (@lem18952 A P Q)). Qed.
Lemma lem4533145 {A : Type'} (P : type704 A) (Q : type704 A) : (term795 A P Q) = (term796 A P Q).
Proof. exact (@lem4533144 (A -> nat) P Q). Qed.
Lemma lem4533146 {A : Type'} (_53782 : type982 A) (t : nat -> Prop) (s : A -> Prop) (d : nat) : (term797 A _53782 t s d) = (term798 A _53782 t s d).
Proof. exact (@lem4533145 A (term799 A _53782 t s d) (term800 A _53782 t s d)). Qed.
Lemma lem4533147 {A : Type'} (_53782 : type982 A) (GEN_PVAR_148 : A -> nat) (t : nat -> Prop) (s : A -> Prop) (d : nat) : (term801 A _53782 t s d GEN_PVAR_148) = (term780 A _53782 GEN_PVAR_148 t s d).
Proof. exact (eq_refl (term801 A _53782 t s d GEN_PVAR_148)). Qed.
Lemma lem4533148 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4533149 {A : Type'} (_53782 : type982 A) (GEN_PVAR_148 : A -> nat) (t : nat -> Prop) (s : A -> Prop) (d : nat) : (term802 A _53782 t s d GEN_PVAR_148) = (term782 A _53782 GEN_PVAR_148 t s d).
Proof. exact (MK_COMB (@lem4533148) (@lem4533147 A _53782 GEN_PVAR_148 t s d)). Qed.
Lemma lem4533150 {A : Type'} (_53782 : type982 A) (GEN_PVAR_148 : A -> nat) (t : nat -> Prop) (s : A -> Prop) (d : nat) : (term803 A _53782 t s d GEN_PVAR_148) = (term777 A _53782 GEN_PVAR_148 t s d).
Proof. exact (eq_refl (term803 A _53782 t s d GEN_PVAR_148)). Qed.
Lemma lem4533151 {A : Type'} (_53782 : type982 A) (GEN_PVAR_148 : A -> nat) (t : nat -> Prop) (s : A -> Prop) (d : nat) : (term804 A _53782 t s d GEN_PVAR_148) = (term784 A _53782 GEN_PVAR_148 t s d).
Proof. exact (MK_COMB (@lem4533149 A _53782 GEN_PVAR_148 t s d) (@lem4533150 A _53782 GEN_PVAR_148 t s d)). Qed.
Lemma lem4533152 {A : Type'} (_53782 : type982 A) (t : nat -> Prop) (s : A -> Prop) (d : nat) : (term805 A _53782 t s d) = (term785 A _53782 t s d).
Proof. exact (fun_ext (fun GEN_PVAR_148 : A -> nat => @lem4533151 A _53782 GEN_PVAR_148 t s d)). Qed.
Lemma lem4533153 {A : Type'} : (@all (A -> nat)) = (@all (A -> nat)).
Proof. exact (eq_refl (@all (A -> nat))). Qed.
Lemma lem4533154 {A : Type'} (_53782 : type982 A) (t : nat -> Prop) (s : A -> Prop) (d : nat) : (term797 A _53782 t s d) = (term786 A _53782 t s d).
Proof. exact (MK_COMB (@lem4533153 A) (@lem4533152 A _53782 t s d)). Qed.
Lemma lem4533155 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4533156 {A : Type'} (_53782 : type982 A) (t : nat -> Prop) (s : A -> Prop) (d : nat) : (term806 A _53782 t s d) = (term807 A _53782 t s d).
Proof. exact (MK_COMB (@lem4533155) (@lem4533154 A _53782 t s d)). Qed.
Lemma lem4533157 {A : Type'} (_53782 : type982 A) (GEN_PVAR_148 : A -> nat) (t : nat -> Prop) (s : A -> Prop) (d : nat) : (term801 A _53782 t s d GEN_PVAR_148) = (term780 A _53782 GEN_PVAR_148 t s d).
Proof. exact (eq_refl (term801 A _53782 t s d GEN_PVAR_148)). Qed.
Lemma lem4533158 {A : Type'} (_53782 : type982 A) (t : nat -> Prop) (s : A -> Prop) (d : nat) : (term808 A _53782 t s d) = (term799 A _53782 t s d).
Proof. exact (fun_ext (fun GEN_PVAR_148 : A -> nat => @lem4533157 A _53782 GEN_PVAR_148 t s d)). Qed.
Lemma lem4533159 {A : Type'} : (@all (A -> nat)) = (@all (A -> nat)).
Proof. exact (eq_refl (@all (A -> nat))). Qed.
Lemma lem4533160 {A : Type'} (_53782 : type982 A) (t : nat -> Prop) (s : A -> Prop) (d : nat) : (term809 A _53782 t s d) = (term810 A _53782 t s d).
Proof. exact (MK_COMB (@lem4533159 A) (@lem4533158 A _53782 t s d)). Qed.
Lemma lem4533161 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4533162 {A : Type'} (_53782 : type982 A) (t : nat -> Prop) (s : A -> Prop) (d : nat) : (term811 A _53782 t s d) = (term812 A _53782 t s d).
Proof. exact (MK_COMB (@lem4533161) (@lem4533160 A _53782 t s d)). Qed.
Lemma lem4533163 {A : Type'} (_53782 : type982 A) (GEN_PVAR_148 : A -> nat) (t : nat -> Prop) (s : A -> Prop) (d : nat) : (term803 A _53782 t s d GEN_PVAR_148) = (term777 A _53782 GEN_PVAR_148 t s d).
Proof. exact (eq_refl (term803 A _53782 t s d GEN_PVAR_148)). Qed.
Lemma lem4533164 {A : Type'} (_53782 : type982 A) (t : nat -> Prop) (s : A -> Prop) (d : nat) : (term813 A _53782 t s d) = (term800 A _53782 t s d).
Proof. exact (fun_ext (fun GEN_PVAR_148 : A -> nat => @lem4533163 A _53782 GEN_PVAR_148 t s d)). Qed.
Lemma lem4533165 {A : Type'} : (@all (A -> nat)) = (@all (A -> nat)).
Proof. exact (eq_refl (@all (A -> nat))). Qed.
Lemma lem4533166 {A : Type'} (_53782 : type982 A) (t : nat -> Prop) (s : A -> Prop) (d : nat) : (term814 A _53782 t s d) = (term815 A _53782 t s d).
Proof. exact (MK_COMB (@lem4533165 A) (@lem4533164 A _53782 t s d)). Qed.
Lemma lem4533167 {A : Type'} (_53782 : type982 A) (t : nat -> Prop) (s : A -> Prop) (d : nat) : (term798 A _53782 t s d) = (term816 A _53782 t s d).
Proof. exact (MK_COMB (@lem4533162 A _53782 t s d) (@lem4533166 A _53782 t s d)). Qed.
Lemma lem4533168 {A : Type'} (_53782 : type982 A) (t : nat -> Prop) (s : A -> Prop) (d : nat) : ((term797 A _53782 t s d) = (term798 A _53782 t s d)) = ((term786 A _53782 t s d) = (term816 A _53782 t s d)).
Proof. exact (MK_COMB (@lem4533156 A _53782 t s d) (@lem4533167 A _53782 t s d)). Qed.
Lemma lem4533169 {A : Type'} (_53782 : type982 A) (t : nat -> Prop) (s : A -> Prop) (d : nat) : (term786 A _53782 t s d) = (term816 A _53782 t s d).
Proof. exact (EQ_MP (@lem4533168 A _53782 t s d) (@lem4533146 A _53782 t s d)). Qed.
Lemma lem4533290 {A : Type'} (_53782 : type982 A) (t : nat -> Prop) (s : A -> Prop) : (term787 A _53782 t s) = (term817 A _53782 t s).
Proof. exact (fun_ext (fun d : nat => @lem4533169 A _53782 t s d)). Qed.
Lemma lem4533291 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4533292 {A : Type'} (_53782 : type982 A) (t : nat -> Prop) (s : A -> Prop) : (term788 A _53782 t s) = (term818 A _53782 t s).
Proof. exact (MK_COMB (@lem4533291) (@lem4533290 A _53782 t s)). Qed.
Lemma lem4533294 {A : Type'} (P : A -> Prop) (Q : A -> Prop) : (term793 A P Q) = (term794 A P Q).
Proof. exact (EQ_MP (@lem18953 A P Q) (@lem18952 A P Q)). Qed.
Lemma lem4533295 (P : nat -> Prop) (Q : nat -> Prop) : (term819 P Q) = (term820 P Q).
Proof. exact (@lem4533294 nat P Q). Qed.
Lemma lem4533296 {A : Type'} (_53782 : type982 A) (t : nat -> Prop) (s : A -> Prop) : (term821 A _53782 t s) = (term822 A _53782 t s).
Proof. exact (@lem4533295 (term823 A _53782 t s) (term824 A _53782 t s)). Qed.
Lemma lem4533297 {A : Type'} (_53782 : type982 A) (t : nat -> Prop) (s : A -> Prop) (d : nat) : (term825 A _53782 t s d) = (term810 A _53782 t s d).
Proof. exact (eq_refl (term825 A _53782 t s d)). Qed.
Lemma lem4533298 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4533299 {A : Type'} (_53782 : type982 A) (t : nat -> Prop) (s : A -> Prop) (d : nat) : (term826 A _53782 t s d) = (term812 A _53782 t s d).
Proof. exact (MK_COMB (@lem4533298) (@lem4533297 A _53782 t s d)). Qed.
Lemma lem4533300 {A : Type'} (_53782 : type982 A) (t : nat -> Prop) (s : A -> Prop) (d : nat) : (term827 A _53782 t s d) = (term815 A _53782 t s d).
Proof. exact (eq_refl (term827 A _53782 t s d)). Qed.
Lemma lem4533301 {A : Type'} (_53782 : type982 A) (t : nat -> Prop) (s : A -> Prop) (d : nat) : (term828 A _53782 t s d) = (term816 A _53782 t s d).
Proof. exact (MK_COMB (@lem4533299 A _53782 t s d) (@lem4533300 A _53782 t s d)). Qed.
Lemma lem4533302 {A : Type'} (_53782 : type982 A) (t : nat -> Prop) (s : A -> Prop) : (term829 A _53782 t s) = (term817 A _53782 t s).
Proof. exact (fun_ext (fun d : nat => @lem4533301 A _53782 t s d)). Qed.
Lemma lem4533303 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4533304 {A : Type'} (_53782 : type982 A) (t : nat -> Prop) (s : A -> Prop) : (term821 A _53782 t s) = (term818 A _53782 t s).
Proof. exact (MK_COMB (@lem4533303) (@lem4533302 A _53782 t s)). Qed.
Lemma lem4533305 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4533306 {A : Type'} (_53782 : type982 A) (t : nat -> Prop) (s : A -> Prop) : (term830 A _53782 t s) = (term831 A _53782 t s).
Proof. exact (MK_COMB (@lem4533305) (@lem4533304 A _53782 t s)). Qed.
Lemma lem4533307 {A : Type'} (_53782 : type982 A) (t : nat -> Prop) (s : A -> Prop) (d : nat) : (term825 A _53782 t s d) = (term810 A _53782 t s d).
Proof. exact (eq_refl (term825 A _53782 t s d)). Qed.
Lemma lem4533308 {A : Type'} (_53782 : type982 A) (t : nat -> Prop) (s : A -> Prop) : (term832 A _53782 t s) = (term823 A _53782 t s).
Proof. exact (fun_ext (fun d : nat => @lem4533307 A _53782 t s d)). Qed.
Lemma lem4533309 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4533310 {A : Type'} (_53782 : type982 A) (t : nat -> Prop) (s : A -> Prop) : (term833 A _53782 t s) = (term834 A _53782 t s).
Proof. exact (MK_COMB (@lem4533309) (@lem4533308 A _53782 t s)). Qed.
Lemma lem4533311 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4533312 {A : Type'} (_53782 : type982 A) (t : nat -> Prop) (s : A -> Prop) : (term835 A _53782 t s) = (term836 A _53782 t s).
Proof. exact (MK_COMB (@lem4533311) (@lem4533310 A _53782 t s)). Qed.
Lemma lem4533313 {A : Type'} (_53782 : type982 A) (t : nat -> Prop) (s : A -> Prop) (d : nat) : (term827 A _53782 t s d) = (term815 A _53782 t s d).
Proof. exact (eq_refl (term827 A _53782 t s d)). Qed.
Lemma lem4533314 {A : Type'} (_53782 : type982 A) (t : nat -> Prop) (s : A -> Prop) : (term837 A _53782 t s) = (term824 A _53782 t s).
Proof. exact (fun_ext (fun d : nat => @lem4533313 A _53782 t s d)). Qed.
Lemma lem4533315 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4533316 {A : Type'} (_53782 : type982 A) (t : nat -> Prop) (s : A -> Prop) : (term838 A _53782 t s) = (term839 A _53782 t s).
Proof. exact (MK_COMB (@lem4533315) (@lem4533314 A _53782 t s)). Qed.
Lemma lem4533317 {A : Type'} (_53782 : type982 A) (t : nat -> Prop) (s : A -> Prop) : (term822 A _53782 t s) = (term840 A _53782 t s).
Proof. exact (MK_COMB (@lem4533312 A _53782 t s) (@lem4533316 A _53782 t s)). Qed.
Lemma lem4533318 {A : Type'} (_53782 : type982 A) (t : nat -> Prop) (s : A -> Prop) : ((term821 A _53782 t s) = (term822 A _53782 t s)) = ((term818 A _53782 t s) = (term840 A _53782 t s)).
Proof. exact (MK_COMB (@lem4533306 A _53782 t s) (@lem4533317 A _53782 t s)). Qed.
Lemma lem4533319 {A : Type'} (_53782 : type982 A) (t : nat -> Prop) (s : A -> Prop) : (term818 A _53782 t s) = (term840 A _53782 t s).
Proof. exact (EQ_MP (@lem4533318 A _53782 t s) (@lem4533296 A _53782 t s)). Qed.
Lemma lem4533448 {A : Type'} (_53782 : type982 A) (t : nat -> Prop) (s : A -> Prop) : (term788 A _53782 t s) = (term840 A _53782 t s).
Proof. exact (TRANS (@lem4533292 A _53782 t s) (@lem4533319 A _53782 t s)). Qed.
Lemma lem4533449 {A : Type'} (_53782 : type982 A) (t : nat -> Prop) : (term789 A _53782 t) = (term841 A _53782 t).
Proof. exact (fun_ext (fun s : A -> Prop => @lem4533448 A _53782 t s)). Qed.
Lemma lem4533450 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem4533451 {A : Type'} (_53782 : type982 A) (t : nat -> Prop) : (term790 A _53782 t) = (term842 A _53782 t).
Proof. exact (MK_COMB (@lem4533450 A) (@lem4533449 A _53782 t)). Qed.
Lemma lem4533453 {A : Type'} (P : A -> Prop) (Q : A -> Prop) : (term793 A P Q) = (term794 A P Q).
Proof. exact (EQ_MP (@lem18953 A P Q) (@lem18952 A P Q)). Qed.
Lemma lem4533454 {A : Type'} (P : type686 A) (Q : type686 A) : (term843 A P Q) = (term844 A P Q).
Proof. exact (@lem4533453 (A -> Prop) P Q). Qed.
Lemma lem4533455 {A : Type'} (_53782 : type982 A) (t : nat -> Prop) : (term845 A _53782 t) = (term846 A _53782 t).
Proof. exact (@lem4533454 A (term847 A _53782 t) (term848 A _53782 t)). Qed.
Lemma lem4533456 {A : Type'} (_53782 : type982 A) (t : nat -> Prop) (s : A -> Prop) : (term849 A _53782 t s) = (term834 A _53782 t s).
Proof. exact (eq_refl (term849 A _53782 t s)). Qed.
Lemma lem4533457 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4533458 {A : Type'} (_53782 : type982 A) (t : nat -> Prop) (s : A -> Prop) : (term850 A _53782 t s) = (term836 A _53782 t s).
Proof. exact (MK_COMB (@lem4533457) (@lem4533456 A _53782 t s)). Qed.
Lemma lem4533459 {A : Type'} (_53782 : type982 A) (t : nat -> Prop) (s : A -> Prop) : (term851 A _53782 t s) = (term839 A _53782 t s).
Proof. exact (eq_refl (term851 A _53782 t s)). Qed.
Lemma lem4533460 {A : Type'} (_53782 : type982 A) (t : nat -> Prop) (s : A -> Prop) : (term852 A _53782 t s) = (term840 A _53782 t s).
Proof. exact (MK_COMB (@lem4533458 A _53782 t s) (@lem4533459 A _53782 t s)). Qed.
Lemma lem4533461 {A : Type'} (_53782 : type982 A) (t : nat -> Prop) : (term853 A _53782 t) = (term841 A _53782 t).
Proof. exact (fun_ext (fun s : A -> Prop => @lem4533460 A _53782 t s)). Qed.
Lemma lem4533462 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem4533463 {A : Type'} (_53782 : type982 A) (t : nat -> Prop) : (term845 A _53782 t) = (term842 A _53782 t).
Proof. exact (MK_COMB (@lem4533462 A) (@lem4533461 A _53782 t)). Qed.
Lemma lem4533464 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4533465 {A : Type'} (_53782 : type982 A) (t : nat -> Prop) : (term854 A _53782 t) = (term855 A _53782 t).
Proof. exact (MK_COMB (@lem4533464) (@lem4533463 A _53782 t)). Qed.
Lemma lem4533466 {A : Type'} (_53782 : type982 A) (t : nat -> Prop) (s : A -> Prop) : (term849 A _53782 t s) = (term834 A _53782 t s).
Proof. exact (eq_refl (term849 A _53782 t s)). Qed.
Lemma lem4533467 {A : Type'} (_53782 : type982 A) (t : nat -> Prop) : (term856 A _53782 t) = (term847 A _53782 t).
Proof. exact (fun_ext (fun s : A -> Prop => @lem4533466 A _53782 t s)). Qed.
Lemma lem4533468 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem4533469 {A : Type'} (_53782 : type982 A) (t : nat -> Prop) : (term857 A _53782 t) = (term858 A _53782 t).
Proof. exact (MK_COMB (@lem4533468 A) (@lem4533467 A _53782 t)). Qed.
Lemma lem4533470 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4533471 {A : Type'} (_53782 : type982 A) (t : nat -> Prop) : (term859 A _53782 t) = (term860 A _53782 t).
Proof. exact (MK_COMB (@lem4533470) (@lem4533469 A _53782 t)). Qed.
Lemma lem4533472 {A : Type'} (_53782 : type982 A) (t : nat -> Prop) (s : A -> Prop) : (term851 A _53782 t s) = (term839 A _53782 t s).
Proof. exact (eq_refl (term851 A _53782 t s)). Qed.
Lemma lem4533473 {A : Type'} (_53782 : type982 A) (t : nat -> Prop) : (term861 A _53782 t) = (term848 A _53782 t).
Proof. exact (fun_ext (fun s : A -> Prop => @lem4533472 A _53782 t s)). Qed.
Lemma lem4533474 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem4533475 {A : Type'} (_53782 : type982 A) (t : nat -> Prop) : (term862 A _53782 t) = (term863 A _53782 t).
Proof. exact (MK_COMB (@lem4533474 A) (@lem4533473 A _53782 t)). Qed.
Lemma lem4533476 {A : Type'} (_53782 : type982 A) (t : nat -> Prop) : (term846 A _53782 t) = (term864 A _53782 t).
Proof. exact (MK_COMB (@lem4533471 A _53782 t) (@lem4533475 A _53782 t)). Qed.
Lemma lem4533477 {A : Type'} (_53782 : type982 A) (t : nat -> Prop) : ((term845 A _53782 t) = (term846 A _53782 t)) = ((term842 A _53782 t) = (term864 A _53782 t)).
Proof. exact (MK_COMB (@lem4533465 A _53782 t) (@lem4533476 A _53782 t)). Qed.
Lemma lem4533478 {A : Type'} (_53782 : type982 A) (t : nat -> Prop) : (term842 A _53782 t) = (term864 A _53782 t).
Proof. exact (EQ_MP (@lem4533477 A _53782 t) (@lem4533455 A _53782 t)). Qed.
Lemma lem4533615 {A : Type'} (_53782 : type982 A) (t : nat -> Prop) : (term790 A _53782 t) = (term864 A _53782 t).
Proof. exact (TRANS (@lem4533451 A _53782 t) (@lem4533478 A _53782 t)). Qed.
Lemma lem4533616 {A : Type'} (_53782 : type982 A) : (term791 A _53782) = (term865 A _53782).
Proof. exact (fun_ext (fun t : nat -> Prop => @lem4533615 A _53782 t)). Qed.
Lemma lem4533617 : (@all (nat -> Prop)) = (@all (nat -> Prop)).
Proof. exact (eq_refl (@all (nat -> Prop))). Qed.
Lemma lem4533618 {A : Type'} (_53782 : type982 A) : (term792 A _53782) = (term866 A _53782).
Proof. exact (MK_COMB (@lem4533617) (@lem4533616 A _53782)). Qed.
Lemma lem4533620 {A : Type'} (P : A -> Prop) (Q : A -> Prop) : (term793 A P Q) = (term794 A P Q).
Proof. exact (EQ_MP (@lem18953 A P Q) (@lem18952 A P Q)). Qed.
Lemma lem4533621 (P : type993) (Q : type993) : (term867 P Q) = (term868 P Q).
Proof. exact (@lem4533620 (nat -> Prop) P Q). Qed.
Lemma lem4533622 {A : Type'} (_53782 : type982 A) : (term869 A _53782) = (term870 A _53782).
Proof. exact (@lem4533621 (term871 A _53782) (term872 A _53782)). Qed.
Lemma lem4533623 {A : Type'} (_53782 : type982 A) (t : nat -> Prop) : (term873 A _53782 t) = (term858 A _53782 t).
Proof. exact (eq_refl (term873 A _53782 t)). Qed.
Lemma lem4533624 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4533625 {A : Type'} (_53782 : type982 A) (t : nat -> Prop) : (term874 A _53782 t) = (term860 A _53782 t).
Proof. exact (MK_COMB (@lem4533624) (@lem4533623 A _53782 t)). Qed.
Lemma lem4533626 {A : Type'} (_53782 : type982 A) (t : nat -> Prop) : (term875 A _53782 t) = (term863 A _53782 t).
Proof. exact (eq_refl (term875 A _53782 t)). Qed.
Lemma lem4533627 {A : Type'} (_53782 : type982 A) (t : nat -> Prop) : (term876 A _53782 t) = (term864 A _53782 t).
Proof. exact (MK_COMB (@lem4533625 A _53782 t) (@lem4533626 A _53782 t)). Qed.
Lemma lem4533628 {A : Type'} (_53782 : type982 A) : (term877 A _53782) = (term865 A _53782).
Proof. exact (fun_ext (fun t : nat -> Prop => @lem4533627 A _53782 t)). Qed.
Lemma lem4533629 : (@all (nat -> Prop)) = (@all (nat -> Prop)).
Proof. exact (eq_refl (@all (nat -> Prop))). Qed.
Lemma lem4533630 {A : Type'} (_53782 : type982 A) : (term869 A _53782) = (term866 A _53782).
Proof. exact (MK_COMB (@lem4533629) (@lem4533628 A _53782)). Qed.
Lemma lem4533631 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4533632 {A : Type'} (_53782 : type982 A) : (term878 A _53782) = (term879 A _53782).
Proof. exact (MK_COMB (@lem4533631) (@lem4533630 A _53782)). Qed.
Lemma lem4533633 {A : Type'} (_53782 : type982 A) (t : nat -> Prop) : (term873 A _53782 t) = (term858 A _53782 t).
Proof. exact (eq_refl (term873 A _53782 t)). Qed.
Lemma lem4533634 {A : Type'} (_53782 : type982 A) : (term880 A _53782) = (term871 A _53782).
Proof. exact (fun_ext (fun t : nat -> Prop => @lem4533633 A _53782 t)). Qed.
Lemma lem4533635 : (@all (nat -> Prop)) = (@all (nat -> Prop)).
Proof. exact (eq_refl (@all (nat -> Prop))). Qed.
Lemma lem4533636 {A : Type'} (_53782 : type982 A) : (term881 A _53782) = (term882 A _53782).
Proof. exact (MK_COMB (@lem4533635) (@lem4533634 A _53782)). Qed.
Lemma lem4533637 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4533638 {A : Type'} (_53782 : type982 A) : (term883 A _53782) = (term884 A _53782).
Proof. exact (MK_COMB (@lem4533637) (@lem4533636 A _53782)). Qed.
Lemma lem4533639 {A : Type'} (_53782 : type982 A) (t : nat -> Prop) : (term875 A _53782 t) = (term863 A _53782 t).
Proof. exact (eq_refl (term875 A _53782 t)). Qed.
Lemma lem4533640 {A : Type'} (_53782 : type982 A) : (term885 A _53782) = (term872 A _53782).
Proof. exact (fun_ext (fun t : nat -> Prop => @lem4533639 A _53782 t)). Qed.
Lemma lem4533641 : (@all (nat -> Prop)) = (@all (nat -> Prop)).
Proof. exact (eq_refl (@all (nat -> Prop))). Qed.
Lemma lem4533642 {A : Type'} (_53782 : type982 A) : (term886 A _53782) = (term887 A _53782).
Proof. exact (MK_COMB (@lem4533641) (@lem4533640 A _53782)). Qed.
Lemma lem4533643 {A : Type'} (_53782 : type982 A) : (term870 A _53782) = (term888 A _53782).
Proof. exact (MK_COMB (@lem4533638 A _53782) (@lem4533642 A _53782)). Qed.
Lemma lem4533644 {A : Type'} (_53782 : type982 A) : ((term869 A _53782) = (term870 A _53782)) = ((term866 A _53782) = (term888 A _53782)).
Proof. exact (MK_COMB (@lem4533632 A _53782) (@lem4533643 A _53782)). Qed.
Lemma lem4533645 {A : Type'} (_53782 : type982 A) : (term866 A _53782) = (term888 A _53782).
Proof. exact (EQ_MP (@lem4533644 A _53782) (@lem4533622 A _53782)). Qed.
Lemma lem4533790 {A : Type'} (_53782 : type982 A) : (term792 A _53782) = (term888 A _53782).
Proof. exact (TRANS (@lem4533618 A _53782) (@lem4533645 A _53782)). Qed.
Lemma lem4533792 {A : Type'} (P : Prop) (Q : A -> Prop) : (term889 A P Q) = (term890 A P Q).
Proof. exact (EQ_MP (@lem18911 A P Q) (@lem18910 A P Q)). Qed.
Lemma lem4533793 {A : Type'} (P : Prop) (Q : type704 A) : (term891 A P Q) = (term892 A P Q).
Proof. exact (@lem4533792 (A -> nat) P Q). Qed.
Lemma lem4533794 {A : Type'} (_53782 : type982 A) (GEN_PVAR_148 : A -> nat) (t : nat -> Prop) (s : A -> Prop) (d : nat) : (term893 A _53782 GEN_PVAR_148 t s d) = (term894 A _53782 GEN_PVAR_148 t s d).
Proof. exact (@lem4533793 A (term895 A _53782 t s d GEN_PVAR_148) (term96 A GEN_PVAR_148 t s d)). Qed.
Lemma lem4533795 {A : Type'} (GEN_PVAR_148 : A -> nat) (t : nat -> Prop) (s : A -> Prop) (d : nat) (f : A -> nat) : (term770 A GEN_PVAR_148 t s d f) = (term95 A GEN_PVAR_148 t s d f).
Proof. exact (eq_refl (term770 A GEN_PVAR_148 t s d f)). Qed.
Lemma lem4533796 {A : Type'} (GEN_PVAR_148 : A -> nat) (t : nat -> Prop) (s : A -> Prop) (d : nat) : (term896 A GEN_PVAR_148 t s d) = (term96 A GEN_PVAR_148 t s d).
Proof. exact (fun_ext (fun f : A -> nat => @lem4533795 A GEN_PVAR_148 t s d f)). Qed.
Lemma lem4533797 {A : Type'} : (@ex (A -> nat)) = (@ex (A -> nat)).
Proof. exact (eq_refl (@ex (A -> nat))). Qed.
Lemma lem4533798 {A : Type'} (GEN_PVAR_148 : A -> nat) (t : nat -> Prop) (s : A -> Prop) (d : nat) : (term897 A GEN_PVAR_148 t s d) = (term97 A GEN_PVAR_148 t s d).
Proof. exact (MK_COMB (@lem4533797 A) (@lem4533796 A GEN_PVAR_148 t s d)). Qed.
Lemma lem4533799 {A : Type'} (_53782 : type982 A) (t : nat -> Prop) (s : A -> Prop) (d : nat) (GEN_PVAR_148 : A -> nat) : (term776 A _53782 t s d GEN_PVAR_148) = (term776 A _53782 t s d GEN_PVAR_148).
Proof. exact (eq_refl (term776 A _53782 t s d GEN_PVAR_148)). Qed.
Lemma lem4533800 {A : Type'} (_53782 : type982 A) (GEN_PVAR_148 : A -> nat) (t : nat -> Prop) (s : A -> Prop) (d : nat) : (term893 A _53782 GEN_PVAR_148 t s d) = (term777 A _53782 GEN_PVAR_148 t s d).
Proof. exact (MK_COMB (@lem4533799 A _53782 t s d GEN_PVAR_148) (@lem4533798 A GEN_PVAR_148 t s d)). Qed.
Lemma lem4533801 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4533802 {A : Type'} (_53782 : type982 A) (GEN_PVAR_148 : A -> nat) (t : nat -> Prop) (s : A -> Prop) (d : nat) : (term898 A _53782 GEN_PVAR_148 t s d) = (term899 A _53782 GEN_PVAR_148 t s d).
Proof. exact (MK_COMB (@lem4533801) (@lem4533800 A _53782 GEN_PVAR_148 t s d)). Qed.
Lemma lem4533803 {A : Type'} (GEN_PVAR_148 : A -> nat) (t : nat -> Prop) (s : A -> Prop) (d : nat) (f : A -> nat) : (term770 A GEN_PVAR_148 t s d f) = (term95 A GEN_PVAR_148 t s d f).
Proof. exact (eq_refl (term770 A GEN_PVAR_148 t s d f)). Qed.
Lemma lem4533804 {A : Type'} (_53782 : type982 A) (t : nat -> Prop) (s : A -> Prop) (d : nat) (GEN_PVAR_148 : A -> nat) : (term776 A _53782 t s d GEN_PVAR_148) = (term776 A _53782 t s d GEN_PVAR_148).
Proof. exact (eq_refl (term776 A _53782 t s d GEN_PVAR_148)). Qed.
Lemma lem4533805 {A : Type'} (_53782 : type982 A) (GEN_PVAR_148 : A -> nat) (t : nat -> Prop) (s : A -> Prop) (d : nat) (f : A -> nat) : (term900 A _53782 GEN_PVAR_148 t s d f) = (term901 A _53782 GEN_PVAR_148 t s d f).
Proof. exact (MK_COMB (@lem4533804 A _53782 t s d GEN_PVAR_148) (@lem4533803 A GEN_PVAR_148 t s d f)). Qed.
Lemma lem4533806 {A : Type'} (_53782 : type982 A) (GEN_PVAR_148 : A -> nat) (t : nat -> Prop) (s : A -> Prop) (d : nat) : (term902 A _53782 GEN_PVAR_148 t s d) = (term903 A _53782 GEN_PVAR_148 t s d).
Proof. exact (fun_ext (fun f : A -> nat => @lem4533805 A _53782 GEN_PVAR_148 t s d f)). Qed.
Lemma lem4533807 {A : Type'} : (@ex (A -> nat)) = (@ex (A -> nat)).
Proof. exact (eq_refl (@ex (A -> nat))). Qed.
Lemma lem4533808 {A : Type'} (_53782 : type982 A) (GEN_PVAR_148 : A -> nat) (t : nat -> Prop) (s : A -> Prop) (d : nat) : (term894 A _53782 GEN_PVAR_148 t s d) = (term904 A _53782 GEN_PVAR_148 t s d).
Proof. exact (MK_COMB (@lem4533807 A) (@lem4533806 A _53782 GEN_PVAR_148 t s d)). Qed.
Lemma lem4533809 {A : Type'} (_53782 : type982 A) (GEN_PVAR_148 : A -> nat) (t : nat -> Prop) (s : A -> Prop) (d : nat) : ((term893 A _53782 GEN_PVAR_148 t s d) = (term894 A _53782 GEN_PVAR_148 t s d)) = ((term777 A _53782 GEN_PVAR_148 t s d) = (term904 A _53782 GEN_PVAR_148 t s d)).
Proof. exact (MK_COMB (@lem4533802 A _53782 GEN_PVAR_148 t s d) (@lem4533808 A _53782 GEN_PVAR_148 t s d)). Qed.
Lemma lem4533810 {A : Type'} (_53782 : type982 A) (GEN_PVAR_148 : A -> nat) (t : nat -> Prop) (s : A -> Prop) (d : nat) : (term777 A _53782 GEN_PVAR_148 t s d) = (term904 A _53782 GEN_PVAR_148 t s d).
Proof. exact (EQ_MP (@lem4533809 A _53782 GEN_PVAR_148 t s d) (@lem4533794 A _53782 GEN_PVAR_148 t s d)). Qed.
Lemma lem4533811 {A : Type'} (_53782 : type982 A) (t : nat -> Prop) (s : A -> Prop) (d : nat) : (term800 A _53782 t s d) = (term905 A _53782 t s d).
Proof. exact (fun_ext (fun GEN_PVAR_148 : A -> nat => @lem4533810 A _53782 GEN_PVAR_148 t s d)). Qed.
Lemma lem4533812 {A : Type'} : (@all (A -> nat)) = (@all (A -> nat)).
Proof. exact (eq_refl (@all (A -> nat))). Qed.
Lemma lem4533813 {A : Type'} (_53782 : type982 A) (t : nat -> Prop) (s : A -> Prop) (d : nat) : (term815 A _53782 t s d) = (term906 A _53782 t s d).
Proof. exact (MK_COMB (@lem4533812 A) (@lem4533811 A _53782 t s d)). Qed.
Lemma lem4533815 {A B : Type'} (P : type1413 A B) : (term907 A B P) = (term908 A B P).
Proof. exact (EQ_MP (@lem18899 A B P) (@lem18898 A B P)). Qed.
Lemma lem4533816 {A : Type'} (P : type696 A) : (term909 A P) = (term910 A P).
Proof. exact (@lem4533815 (A -> nat) (A -> nat) P). Qed.
Lemma lem4533817 {A : Type'} (_53782 : type982 A) (t : nat -> Prop) (s : A -> Prop) (d : nat) : (term911 A _53782 t s d) = (term912 A _53782 t s d).
Proof. exact (@lem4533816 A (term913 A _53782 t s d)). Qed.
Lemma lem4533818 {A : Type'} (_53782 : type982 A) (GEN_PVAR_148 : A -> nat) (t : nat -> Prop) (s : A -> Prop) (d : nat) : (term914 A _53782 t s d GEN_PVAR_148) = (term903 A _53782 GEN_PVAR_148 t s d).
Proof. exact (eq_refl (term914 A _53782 t s d GEN_PVAR_148)). Qed.
Lemma lem4533819 {A : Type'} (f : A -> nat) : f = f.
Proof. exact (eq_refl f). Qed.
Lemma lem4533820 {A : Type'} (_53782 : type982 A) (GEN_PVAR_148 : A -> nat) (t : nat -> Prop) (s : A -> Prop) (d : nat) (f : A -> nat) : (term915 A _53782 t s d GEN_PVAR_148 f) = (term916 A _53782 GEN_PVAR_148 t s d f).
Proof. exact (MK_COMB (@lem4533818 A _53782 GEN_PVAR_148 t s d) (@lem4533819 A f)). Qed.
Lemma lem4533821 {A : Type'} (_53782 : type982 A) (GEN_PVAR_148 : A -> nat) (t : nat -> Prop) (s : A -> Prop) (d : nat) (f : A -> nat) : (term916 A _53782 GEN_PVAR_148 t s d f) = (term901 A _53782 GEN_PVAR_148 t s d f).
Proof. exact (eq_refl (term916 A _53782 GEN_PVAR_148 t s d f)). Qed.
Lemma lem4533822 {A : Type'} (_53782 : type982 A) (GEN_PVAR_148 : A -> nat) (t : nat -> Prop) (s : A -> Prop) (d : nat) (f : A -> nat) : (term915 A _53782 t s d GEN_PVAR_148 f) = (term901 A _53782 GEN_PVAR_148 t s d f).
Proof. exact (TRANS (@lem4533820 A _53782 GEN_PVAR_148 t s d f) (@lem4533821 A _53782 GEN_PVAR_148 t s d f)). Qed.
Lemma lem4533823 {A : Type'} (_53782 : type982 A) (GEN_PVAR_148 : A -> nat) (t : nat -> Prop) (s : A -> Prop) (d : nat) : (term917 A _53782 t s d GEN_PVAR_148) = (term903 A _53782 GEN_PVAR_148 t s d).
Proof. exact (fun_ext (fun f : A -> nat => @lem4533822 A _53782 GEN_PVAR_148 t s d f)). Qed.
Lemma lem4533824 {A : Type'} : (@ex (A -> nat)) = (@ex (A -> nat)).
Proof. exact (eq_refl (@ex (A -> nat))). Qed.
Lemma lem4533825 {A : Type'} (_53782 : type982 A) (GEN_PVAR_148 : A -> nat) (t : nat -> Prop) (s : A -> Prop) (d : nat) : (term918 A _53782 t s d GEN_PVAR_148) = (term904 A _53782 GEN_PVAR_148 t s d).
Proof. exact (MK_COMB (@lem4533824 A) (@lem4533823 A _53782 GEN_PVAR_148 t s d)). Qed.
Lemma lem4533826 {A : Type'} (_53782 : type982 A) (t : nat -> Prop) (s : A -> Prop) (d : nat) : (term919 A _53782 t s d) = (term905 A _53782 t s d).
Proof. exact (fun_ext (fun GEN_PVAR_148 : A -> nat => @lem4533825 A _53782 GEN_PVAR_148 t s d)). Qed.
Lemma lem4533827 {A : Type'} : (@all (A -> nat)) = (@all (A -> nat)).
Proof. exact (eq_refl (@all (A -> nat))). Qed.
Lemma lem4533828 {A : Type'} (_53782 : type982 A) (t : nat -> Prop) (s : A -> Prop) (d : nat) : (term911 A _53782 t s d) = (term906 A _53782 t s d).
Proof. exact (MK_COMB (@lem4533827 A) (@lem4533826 A _53782 t s d)). Qed.
Lemma lem4533829 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4533830 {A : Type'} (_53782 : type982 A) (t : nat -> Prop) (s : A -> Prop) (d : nat) : (term920 A _53782 t s d) = (term921 A _53782 t s d).
Proof. exact (MK_COMB (@lem4533829) (@lem4533828 A _53782 t s d)). Qed.
Lemma lem4533831 {A : Type'} (_53782 : type982 A) (GEN_PVAR_148 : A -> nat) (t : nat -> Prop) (s : A -> Prop) (d : nat) : (term914 A _53782 t s d GEN_PVAR_148) = (term903 A _53782 GEN_PVAR_148 t s d).
Proof. exact (eq_refl (term914 A _53782 t s d GEN_PVAR_148)). Qed.
Lemma lem4533832 {A : Type'} (f : type700 A) (GEN_PVAR_148 : A -> nat) : (f GEN_PVAR_148) = (f GEN_PVAR_148).
Proof. exact (eq_refl (f GEN_PVAR_148)). Qed.
Lemma lem4533833 {A : Type'} (_53782 : type982 A) (t : nat -> Prop) (s : A -> Prop) (d : nat) (f : type700 A) (GEN_PVAR_148 : A -> nat) : (term922 A _53782 t s d f GEN_PVAR_148) = (term923 A _53782 t s d f GEN_PVAR_148).
Proof. exact (MK_COMB (@lem4533831 A _53782 GEN_PVAR_148 t s d) (@lem4533832 A f GEN_PVAR_148)). Qed.
Lemma lem4533834 {A : Type'} (_53782 : type982 A) (t : nat -> Prop) (s : A -> Prop) (d : nat) (f : type700 A) (GEN_PVAR_148 : A -> nat) : (term923 A _53782 t s d f GEN_PVAR_148) = (term924 A _53782 t s d f GEN_PVAR_148).
Proof. exact (eq_refl (term923 A _53782 t s d f GEN_PVAR_148)). Qed.
Lemma lem4533835 {A : Type'} (_53782 : type982 A) (t : nat -> Prop) (s : A -> Prop) (d : nat) (f : type700 A) (GEN_PVAR_148 : A -> nat) : (term922 A _53782 t s d f GEN_PVAR_148) = (term924 A _53782 t s d f GEN_PVAR_148).
Proof. exact (TRANS (@lem4533833 A _53782 t s d f GEN_PVAR_148) (@lem4533834 A _53782 t s d f GEN_PVAR_148)). Qed.
Lemma lem4533836 {A : Type'} (_53782 : type982 A) (t : nat -> Prop) (s : A -> Prop) (d : nat) (f : type700 A) : (term925 A _53782 t s d f) = (term926 A _53782 t s d f).
Proof. exact (fun_ext (fun GEN_PVAR_148 : A -> nat => @lem4533835 A _53782 t s d f GEN_PVAR_148)). Qed.
Lemma lem4533837 {A : Type'} : (@all (A -> nat)) = (@all (A -> nat)).
Proof. exact (eq_refl (@all (A -> nat))). Qed.
Lemma lem4533838 {A : Type'} (_53782 : type982 A) (t : nat -> Prop) (s : A -> Prop) (d : nat) (f : type700 A) : (term927 A _53782 t s d f) = (term928 A _53782 t s d f).
Proof. exact (MK_COMB (@lem4533837 A) (@lem4533836 A _53782 t s d f)). Qed.
Lemma lem4533839 {A : Type'} (_53782 : type982 A) (t : nat -> Prop) (s : A -> Prop) (d : nat) : (term929 A _53782 t s d) = (term930 A _53782 t s d).
Proof. exact (fun_ext (fun f : type700 A => @lem4533838 A _53782 t s d f)). Qed.
Lemma lem4533840 {A : Type'} : (@ex ((A -> nat) -> A -> nat)) = (@ex ((A -> nat) -> A -> nat)).
Proof. exact (eq_refl (@ex ((A -> nat) -> A -> nat))). Qed.
Lemma lem4533841 {A : Type'} (_53782 : type982 A) (t : nat -> Prop) (s : A -> Prop) (d : nat) : (term912 A _53782 t s d) = (term931 A _53782 t s d).
Proof. exact (MK_COMB (@lem4533840 A) (@lem4533839 A _53782 t s d)). Qed.
Lemma lem4533842 {A : Type'} (_53782 : type982 A) (t : nat -> Prop) (s : A -> Prop) (d : nat) : ((term911 A _53782 t s d) = (term912 A _53782 t s d)) = ((term906 A _53782 t s d) = (term931 A _53782 t s d)).
Proof. exact (MK_COMB (@lem4533830 A _53782 t s d) (@lem4533841 A _53782 t s d)). Qed.
Lemma lem4533843 {A : Type'} (_53782 : type982 A) (t : nat -> Prop) (s : A -> Prop) (d : nat) : (term906 A _53782 t s d) = (term931 A _53782 t s d).
Proof. exact (EQ_MP (@lem4533842 A _53782 t s d) (@lem4533817 A _53782 t s d)). Qed.
Lemma lem4533844 {A : Type'} (_53782 : type982 A) (t : nat -> Prop) (s : A -> Prop) (d : nat) : (term815 A _53782 t s d) = (term931 A _53782 t s d).
Proof. exact (TRANS (@lem4533813 A _53782 t s d) (@lem4533843 A _53782 t s d)). Qed.
Lemma lem4533845 {A : Type'} (_53782 : type982 A) (t : nat -> Prop) (s : A -> Prop) : (term824 A _53782 t s) = (term932 A _53782 t s).
Proof. exact (fun_ext (fun d : nat => @lem4533844 A _53782 t s d)). Qed.
Lemma lem4533846 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4533847 {A : Type'} (_53782 : type982 A) (t : nat -> Prop) (s : A -> Prop) : (term839 A _53782 t s) = (term933 A _53782 t s).
Proof. exact (MK_COMB (@lem4533846) (@lem4533845 A _53782 t s)). Qed.
Lemma lem4533849 {A B : Type'} (P : type1413 A B) : (term907 A B P) = (term908 A B P).
Proof. exact (EQ_MP (@lem18899 A B P) (@lem18898 A B P)). Qed.
Lemma lem4533850 {A : Type'} (P : type1567 A) : (term934 A P) = (term935 A P).
Proof. exact (@lem4533849 nat (type700 A) P). Qed.
Lemma lem4533851 {A : Type'} (_53782 : type982 A) (t : nat -> Prop) (s : A -> Prop) : (term936 A _53782 t s) = (term937 A _53782 t s).
Proof. exact (@lem4533850 A (term938 A _53782 t s)). Qed.
Lemma lem4533852 {A : Type'} (_53782 : type982 A) (t : nat -> Prop) (s : A -> Prop) (d : nat) : (term939 A _53782 t s d) = (term930 A _53782 t s d).
Proof. exact (eq_refl (term939 A _53782 t s d)). Qed.
Lemma lem4533853 {A : Type'} (f : type700 A) : f = f.
Proof. exact (eq_refl f). Qed.
Lemma lem4533854 {A : Type'} (_53782 : type982 A) (t : nat -> Prop) (s : A -> Prop) (d : nat) (f : type700 A) : (term940 A _53782 t s d f) = (term941 A _53782 t s d f).
Proof. exact (MK_COMB (@lem4533852 A _53782 t s d) (@lem4533853 A f)). Qed.
Lemma lem4533855 {A : Type'} (_53782 : type982 A) (t : nat -> Prop) (s : A -> Prop) (d : nat) (f : type700 A) : (term941 A _53782 t s d f) = (term928 A _53782 t s d f).
Proof. exact (eq_refl (term941 A _53782 t s d f)). Qed.
Lemma lem4533856 {A : Type'} (_53782 : type982 A) (t : nat -> Prop) (s : A -> Prop) (d : nat) (f : type700 A) : (term940 A _53782 t s d f) = (term928 A _53782 t s d f).
Proof. exact (TRANS (@lem4533854 A _53782 t s d f) (@lem4533855 A _53782 t s d f)). Qed.
Lemma lem4533857 {A : Type'} (_53782 : type982 A) (t : nat -> Prop) (s : A -> Prop) (d : nat) : (term942 A _53782 t s d) = (term930 A _53782 t s d).
Proof. exact (fun_ext (fun f : type700 A => @lem4533856 A _53782 t s d f)). Qed.
Lemma lem4533858 {A : Type'} : (@ex ((A -> nat) -> A -> nat)) = (@ex ((A -> nat) -> A -> nat)).
Proof. exact (eq_refl (@ex ((A -> nat) -> A -> nat))). Qed.
Lemma lem4533859 {A : Type'} (_53782 : type982 A) (t : nat -> Prop) (s : A -> Prop) (d : nat) : (term943 A _53782 t s d) = (term931 A _53782 t s d).
Proof. exact (MK_COMB (@lem4533858 A) (@lem4533857 A _53782 t s d)). Qed.
Lemma lem4533860 {A : Type'} (_53782 : type982 A) (t : nat -> Prop) (s : A -> Prop) : (term944 A _53782 t s) = (term932 A _53782 t s).
Proof. exact (fun_ext (fun d : nat => @lem4533859 A _53782 t s d)). Qed.
Lemma lem4533861 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4533862 {A : Type'} (_53782 : type982 A) (t : nat -> Prop) (s : A -> Prop) : (term936 A _53782 t s) = (term933 A _53782 t s).
Proof. exact (MK_COMB (@lem4533861) (@lem4533860 A _53782 t s)). Qed.
Lemma lem4533863 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4533864 {A : Type'} (_53782 : type982 A) (t : nat -> Prop) (s : A -> Prop) : (term945 A _53782 t s) = (term946 A _53782 t s).
Proof. exact (MK_COMB (@lem4533863) (@lem4533862 A _53782 t s)). Qed.
Lemma lem4533865 {A : Type'} (_53782 : type982 A) (t : nat -> Prop) (s : A -> Prop) (d : nat) : (term939 A _53782 t s d) = (term930 A _53782 t s d).
Proof. exact (eq_refl (term939 A _53782 t s d)). Qed.
Lemma lem4533866 {A : Type'} (f : type1577 A) (d : nat) : (f d) = (f d).
Proof. exact (eq_refl (f d)). Qed.
Lemma lem4533867 {A : Type'} (_53782 : type982 A) (t : nat -> Prop) (s : A -> Prop) (f : type1577 A) (d : nat) : (term947 A _53782 t s f d) = (term948 A _53782 t s f d).
Proof. exact (MK_COMB (@lem4533865 A _53782 t s d) (@lem4533866 A f d)). Qed.
Lemma lem4533868 {A : Type'} (_53782 : type982 A) (t : nat -> Prop) (s : A -> Prop) (f : type1577 A) (d : nat) : (term948 A _53782 t s f d) = (term949 A _53782 t s f d).
Proof. exact (eq_refl (term948 A _53782 t s f d)). Qed.
Lemma lem4533869 {A : Type'} (_53782 : type982 A) (t : nat -> Prop) (s : A -> Prop) (f : type1577 A) (d : nat) : (term947 A _53782 t s f d) = (term949 A _53782 t s f d).
Proof. exact (TRANS (@lem4533867 A _53782 t s f d) (@lem4533868 A _53782 t s f d)). Qed.
Lemma lem4533870 {A : Type'} (_53782 : type982 A) (t : nat -> Prop) (s : A -> Prop) (f : type1577 A) : (term950 A _53782 t s f) = (term951 A _53782 t s f).
Proof. exact (fun_ext (fun d : nat => @lem4533869 A _53782 t s f d)). Qed.
Lemma lem4533871 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4533872 {A : Type'} (_53782 : type982 A) (t : nat -> Prop) (s : A -> Prop) (f : type1577 A) : (term952 A _53782 t s f) = (term953 A _53782 t s f).
Proof. exact (MK_COMB (@lem4533871) (@lem4533870 A _53782 t s f)). Qed.
Lemma lem4533873 {A : Type'} (_53782 : type982 A) (t : nat -> Prop) (s : A -> Prop) : (term954 A _53782 t s) = (term955 A _53782 t s).
Proof. exact (fun_ext (fun f : type1577 A => @lem4533872 A _53782 t s f)). Qed.
Lemma lem4533874 {A : Type'} : (@ex (nat -> (A -> nat) -> A -> nat)) = (@ex (nat -> (A -> nat) -> A -> nat)).
Proof. exact (eq_refl (@ex (nat -> (A -> nat) -> A -> nat))). Qed.
Lemma lem4533875 {A : Type'} (_53782 : type982 A) (t : nat -> Prop) (s : A -> Prop) : (term937 A _53782 t s) = (term956 A _53782 t s).
Proof. exact (MK_COMB (@lem4533874 A) (@lem4533873 A _53782 t s)). Qed.
Lemma lem4533876 {A : Type'} (_53782 : type982 A) (t : nat -> Prop) (s : A -> Prop) : ((term936 A _53782 t s) = (term937 A _53782 t s)) = ((term933 A _53782 t s) = (term956 A _53782 t s)).
Proof. exact (MK_COMB (@lem4533864 A _53782 t s) (@lem4533875 A _53782 t s)). Qed.
Lemma lem4533877 {A : Type'} (_53782 : type982 A) (t : nat -> Prop) (s : A -> Prop) : (term933 A _53782 t s) = (term956 A _53782 t s).
Proof. exact (EQ_MP (@lem4533876 A _53782 t s) (@lem4533851 A _53782 t s)). Qed.
Lemma lem4533878 {A : Type'} (_53782 : type982 A) (t : nat -> Prop) (s : A -> Prop) : (term839 A _53782 t s) = (term956 A _53782 t s).
Proof. exact (TRANS (@lem4533847 A _53782 t s) (@lem4533877 A _53782 t s)). Qed.
Lemma lem4533879 {A : Type'} (_53782 : type982 A) (t : nat -> Prop) : (term848 A _53782 t) = (term957 A _53782 t).
Proof. exact (fun_ext (fun s : A -> Prop => @lem4533878 A _53782 t s)). Qed.
Lemma lem4533880 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem4533881 {A : Type'} (_53782 : type982 A) (t : nat -> Prop) : (term863 A _53782 t) = (term958 A _53782 t).
Proof. exact (MK_COMB (@lem4533880 A) (@lem4533879 A _53782 t)). Qed.
Lemma lem4533883 {A B : Type'} (P : type1413 A B) : (term907 A B P) = (term908 A B P).
Proof. exact (EQ_MP (@lem18899 A B P) (@lem18898 A B P)). Qed.
Lemma lem4533884 {A : Type'} (P : type659 A) : (term959 A P) = (term960 A P).
Proof. exact (@lem4533883 (A -> Prop) (type1577 A) P). Qed.
Lemma lem4533885 {A : Type'} (_53782 : type982 A) (t : nat -> Prop) : (term961 A _53782 t) = (term962 A _53782 t).
Proof. exact (@lem4533884 A (term963 A _53782 t)). Qed.
Lemma lem4533886 {A : Type'} (_53782 : type982 A) (t : nat -> Prop) (s : A -> Prop) : (term964 A _53782 t s) = (term955 A _53782 t s).
Proof. exact (eq_refl (term964 A _53782 t s)). Qed.
Lemma lem4533887 {A : Type'} (f : type1577 A) : f = f.
Proof. exact (eq_refl f). Qed.
Lemma lem4533888 {A : Type'} (_53782 : type982 A) (t : nat -> Prop) (s : A -> Prop) (f : type1577 A) : (term965 A _53782 t s f) = (term966 A _53782 t s f).
Proof. exact (MK_COMB (@lem4533886 A _53782 t s) (@lem4533887 A f)). Qed.
Lemma lem4533889 {A : Type'} (_53782 : type982 A) (t : nat -> Prop) (s : A -> Prop) (f : type1577 A) : (term966 A _53782 t s f) = (term953 A _53782 t s f).
Proof. exact (eq_refl (term966 A _53782 t s f)). Qed.
Lemma lem4533890 {A : Type'} (_53782 : type982 A) (t : nat -> Prop) (s : A -> Prop) (f : type1577 A) : (term965 A _53782 t s f) = (term953 A _53782 t s f).
Proof. exact (TRANS (@lem4533888 A _53782 t s f) (@lem4533889 A _53782 t s f)). Qed.
Lemma lem4533891 {A : Type'} (_53782 : type982 A) (t : nat -> Prop) (s : A -> Prop) : (term967 A _53782 t s) = (term955 A _53782 t s).
Proof. exact (fun_ext (fun f : type1577 A => @lem4533890 A _53782 t s f)). Qed.
Lemma lem4533892 {A : Type'} : (@ex (nat -> (A -> nat) -> A -> nat)) = (@ex (nat -> (A -> nat) -> A -> nat)).
Proof. exact (eq_refl (@ex (nat -> (A -> nat) -> A -> nat))). Qed.
Lemma lem4533893 {A : Type'} (_53782 : type982 A) (t : nat -> Prop) (s : A -> Prop) : (term968 A _53782 t s) = (term956 A _53782 t s).
Proof. exact (MK_COMB (@lem4533892 A) (@lem4533891 A _53782 t s)). Qed.
Lemma lem4533894 {A : Type'} (_53782 : type982 A) (t : nat -> Prop) : (term969 A _53782 t) = (term957 A _53782 t).
Proof. exact (fun_ext (fun s : A -> Prop => @lem4533893 A _53782 t s)). Qed.
Lemma lem4533895 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem4533896 {A : Type'} (_53782 : type982 A) (t : nat -> Prop) : (term961 A _53782 t) = (term958 A _53782 t).
Proof. exact (MK_COMB (@lem4533895 A) (@lem4533894 A _53782 t)). Qed.
Lemma lem4533897 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4533898 {A : Type'} (_53782 : type982 A) (t : nat -> Prop) : (term970 A _53782 t) = (term971 A _53782 t).
Proof. exact (MK_COMB (@lem4533897) (@lem4533896 A _53782 t)). Qed.
Lemma lem4533899 {A : Type'} (_53782 : type982 A) (t : nat -> Prop) (s : A -> Prop) : (term964 A _53782 t s) = (term955 A _53782 t s).
Proof. exact (eq_refl (term964 A _53782 t s)). Qed.
Lemma lem4533900 {A : Type'} (f : type679 A) (s : A -> Prop) : (f s) = (f s).
Proof. exact (eq_refl (f s)). Qed.
Lemma lem4533901 {A : Type'} (_53782 : type982 A) (t : nat -> Prop) (f : type679 A) (s : A -> Prop) : (term972 A _53782 t f s) = (term973 A _53782 t f s).
Proof. exact (MK_COMB (@lem4533899 A _53782 t s) (@lem4533900 A f s)). Qed.
Lemma lem4533902 {A : Type'} (_53782 : type982 A) (t : nat -> Prop) (f : type679 A) (s : A -> Prop) : (term973 A _53782 t f s) = (term974 A _53782 t f s).
Proof. exact (eq_refl (term973 A _53782 t f s)). Qed.
Lemma lem4533903 {A : Type'} (_53782 : type982 A) (t : nat -> Prop) (f : type679 A) (s : A -> Prop) : (term972 A _53782 t f s) = (term974 A _53782 t f s).
Proof. exact (TRANS (@lem4533901 A _53782 t f s) (@lem4533902 A _53782 t f s)). Qed.
Lemma lem4533904 {A : Type'} (_53782 : type982 A) (t : nat -> Prop) (f : type679 A) : (term975 A _53782 t f) = (term976 A _53782 t f).
Proof. exact (fun_ext (fun s : A -> Prop => @lem4533903 A _53782 t f s)). Qed.
Lemma lem4533905 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem4533906 {A : Type'} (_53782 : type982 A) (t : nat -> Prop) (f : type679 A) : (term977 A _53782 t f) = (term978 A _53782 t f).
Proof. exact (MK_COMB (@lem4533905 A) (@lem4533904 A _53782 t f)). Qed.
Lemma lem4533907 {A : Type'} (_53782 : type982 A) (t : nat -> Prop) : (term979 A _53782 t) = (term980 A _53782 t).
Proof. exact (fun_ext (fun f : type679 A => @lem4533906 A _53782 t f)). Qed.
Lemma lem4533908 {A : Type'} : (@ex ((A -> Prop) -> nat -> (A -> nat) -> A -> nat)) = (@ex ((A -> Prop) -> nat -> (A -> nat) -> A -> nat)).
Proof. exact (eq_refl (@ex ((A -> Prop) -> nat -> (A -> nat) -> A -> nat))). Qed.
Lemma lem4533909 {A : Type'} (_53782 : type982 A) (t : nat -> Prop) : (term962 A _53782 t) = (term981 A _53782 t).
Proof. exact (MK_COMB (@lem4533908 A) (@lem4533907 A _53782 t)). Qed.
Lemma lem4533910 {A : Type'} (_53782 : type982 A) (t : nat -> Prop) : ((term961 A _53782 t) = (term962 A _53782 t)) = ((term958 A _53782 t) = (term981 A _53782 t)).
Proof. exact (MK_COMB (@lem4533898 A _53782 t) (@lem4533909 A _53782 t)). Qed.
Lemma lem4533911 {A : Type'} (_53782 : type982 A) (t : nat -> Prop) : (term958 A _53782 t) = (term981 A _53782 t).
Proof. exact (EQ_MP (@lem4533910 A _53782 t) (@lem4533885 A _53782 t)). Qed.
Lemma lem4533912 {A : Type'} (_53782 : type982 A) (t : nat -> Prop) : (term863 A _53782 t) = (term981 A _53782 t).
Proof. exact (TRANS (@lem4533881 A _53782 t) (@lem4533911 A _53782 t)). Qed.
Lemma lem4533913 {A : Type'} (_53782 : type982 A) : (term872 A _53782) = (term982 A _53782).
Proof. exact (fun_ext (fun t : nat -> Prop => @lem4533912 A _53782 t)). Qed.
Lemma lem4533914 : (@all (nat -> Prop)) = (@all (nat -> Prop)).
Proof. exact (eq_refl (@all (nat -> Prop))). Qed.
Lemma lem4533915 {A : Type'} (_53782 : type982 A) : (term887 A _53782) = (term983 A _53782).
Proof. exact (MK_COMB (@lem4533914) (@lem4533913 A _53782)). Qed.
Lemma lem4533917 {A B : Type'} (P : type1413 A B) : (term907 A B P) = (term908 A B P).
Proof. exact (EQ_MP (@lem18899 A B P) (@lem18898 A B P)). Qed.
Lemma lem4533918 {A : Type'} (P : type978 A) : (term984 A P) = (term985 A P).
Proof. exact (@lem4533917 (nat -> Prop) (type679 A) P). Qed.
Lemma lem4533919 {A : Type'} (_53782 : type982 A) : (term986 A _53782) = (term987 A _53782).
Proof. exact (@lem4533918 A (term988 A _53782)). Qed.
Lemma lem4533920 {A : Type'} (_53782 : type982 A) (t : nat -> Prop) : (term989 A _53782 t) = (term980 A _53782 t).
Proof. exact (eq_refl (term989 A _53782 t)). Qed.
Lemma lem4533921 {A : Type'} (f : type679 A) : f = f.
Proof. exact (eq_refl f). Qed.
Lemma lem4533922 {A : Type'} (_53782 : type982 A) (t : nat -> Prop) (f : type679 A) : (term990 A _53782 t f) = (term991 A _53782 t f).
Proof. exact (MK_COMB (@lem4533920 A _53782 t) (@lem4533921 A f)). Qed.
Lemma lem4533923 {A : Type'} (_53782 : type982 A) (t : nat -> Prop) (f : type679 A) : (term991 A _53782 t f) = (term978 A _53782 t f).
Proof. exact (eq_refl (term991 A _53782 t f)). Qed.
Lemma lem4533924 {A : Type'} (_53782 : type982 A) (t : nat -> Prop) (f : type679 A) : (term990 A _53782 t f) = (term978 A _53782 t f).
Proof. exact (TRANS (@lem4533922 A _53782 t f) (@lem4533923 A _53782 t f)). Qed.
Lemma lem4533925 {A : Type'} (_53782 : type982 A) (t : nat -> Prop) : (term992 A _53782 t) = (term980 A _53782 t).
Proof. exact (fun_ext (fun f : type679 A => @lem4533924 A _53782 t f)). Qed.
Lemma lem4533926 {A : Type'} : (@ex ((A -> Prop) -> nat -> (A -> nat) -> A -> nat)) = (@ex ((A -> Prop) -> nat -> (A -> nat) -> A -> nat)).
Proof. exact (eq_refl (@ex ((A -> Prop) -> nat -> (A -> nat) -> A -> nat))). Qed.
Lemma lem4533927 {A : Type'} (_53782 : type982 A) (t : nat -> Prop) : (term993 A _53782 t) = (term981 A _53782 t).
Proof. exact (MK_COMB (@lem4533926 A) (@lem4533925 A _53782 t)). Qed.
Lemma lem4533928 {A : Type'} (_53782 : type982 A) : (term994 A _53782) = (term982 A _53782).
Proof. exact (fun_ext (fun t : nat -> Prop => @lem4533927 A _53782 t)). Qed.
Lemma lem4533929 : (@all (nat -> Prop)) = (@all (nat -> Prop)).
Proof. exact (eq_refl (@all (nat -> Prop))). Qed.
Lemma lem4533930 {A : Type'} (_53782 : type982 A) : (term986 A _53782) = (term983 A _53782).
Proof. exact (MK_COMB (@lem4533929) (@lem4533928 A _53782)). Qed.
Lemma lem4533931 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4533932 {A : Type'} (_53782 : type982 A) : (term995 A _53782) = (term996 A _53782).
Proof. exact (MK_COMB (@lem4533931) (@lem4533930 A _53782)). Qed.
Lemma lem4533933 {A : Type'} (_53782 : type982 A) (t : nat -> Prop) : (term989 A _53782 t) = (term980 A _53782 t).
Proof. exact (eq_refl (term989 A _53782 t)). Qed.
Lemma lem4533934 {A : Type'} (f : type981 A) (t : nat -> Prop) : (f t) = (f t).
Proof. exact (eq_refl (f t)). Qed.
Lemma lem4533935 {A : Type'} (_53782 : type982 A) (f : type981 A) (t : nat -> Prop) : (term997 A _53782 f t) = (term998 A _53782 f t).
Proof. exact (MK_COMB (@lem4533933 A _53782 t) (@lem4533934 A f t)). Qed.
Lemma lem4533936 {A : Type'} (_53782 : type982 A) (f : type981 A) (t : nat -> Prop) : (term998 A _53782 f t) = (term999 A _53782 f t).
Proof. exact (eq_refl (term998 A _53782 f t)). Qed.
Lemma lem4533937 {A : Type'} (_53782 : type982 A) (f : type981 A) (t : nat -> Prop) : (term997 A _53782 f t) = (term999 A _53782 f t).
Proof. exact (TRANS (@lem4533935 A _53782 f t) (@lem4533936 A _53782 f t)). Qed.
Lemma lem4533938 {A : Type'} (_53782 : type982 A) (f : type981 A) : (term1000 A _53782 f) = (term1001 A _53782 f).
Proof. exact (fun_ext (fun t : nat -> Prop => @lem4533937 A _53782 f t)). Qed.
Lemma lem4533939 : (@all (nat -> Prop)) = (@all (nat -> Prop)).
Proof. exact (eq_refl (@all (nat -> Prop))). Qed.
Lemma lem4533940 {A : Type'} (_53782 : type982 A) (f : type981 A) : (term1002 A _53782 f) = (term1003 A _53782 f).
Proof. exact (MK_COMB (@lem4533939) (@lem4533938 A _53782 f)). Qed.
Lemma lem4533941 {A : Type'} (_53782 : type982 A) : (term1004 A _53782) = (term1005 A _53782).
Proof. exact (fun_ext (fun f : type981 A => @lem4533940 A _53782 f)). Qed.
Lemma lem4533942 {A : Type'} : (@ex ((nat -> Prop) -> (A -> Prop) -> nat -> (A -> nat) -> A -> nat)) = (@ex ((nat -> Prop) -> (A -> Prop) -> nat -> (A -> nat) -> A -> nat)).
Proof. exact (eq_refl (@ex ((nat -> Prop) -> (A -> Prop) -> nat -> (A -> nat) -> A -> nat))). Qed.
Lemma lem4533943 {A : Type'} (_53782 : type982 A) : (term987 A _53782) = (term1006 A _53782).
Proof. exact (MK_COMB (@lem4533942 A) (@lem4533941 A _53782)). Qed.
Lemma lem4533944 {A : Type'} (_53782 : type982 A) : ((term986 A _53782) = (term987 A _53782)) = ((term983 A _53782) = (term1006 A _53782)).
Proof. exact (MK_COMB (@lem4533932 A _53782) (@lem4533943 A _53782)). Qed.
Lemma lem4533945 {A : Type'} (_53782 : type982 A) : (term983 A _53782) = (term1006 A _53782).
Proof. exact (EQ_MP (@lem4533944 A _53782) (@lem4533919 A _53782)). Qed.
Lemma lem4533946 {A : Type'} (_53782 : type982 A) : (term887 A _53782) = (term1006 A _53782).
Proof. exact (TRANS (@lem4533915 A _53782) (@lem4533945 A _53782)). Qed.
Lemma lem4533947 {A : Type'} (_53782 : type982 A) : (term884 A _53782) = (term884 A _53782).
Proof. exact (eq_refl (term884 A _53782)). Qed.
Lemma lem4533948 {A : Type'} (_53782 : type982 A) : (term888 A _53782) = (term1007 A _53782).
Proof. exact (MK_COMB (@lem4533947 A _53782) (@lem4533946 A _53782)). Qed.
Lemma lem4533950 {A : Type'} (P : Prop) (Q : A -> Prop) : (term1008 A P Q) = (term1009 A P Q).
Proof. exact (EQ_MP (@lem18929 A P Q) (@lem18928 A P Q)). Qed.
Lemma lem4533951 {A : Type'} (P : Prop) (Q : type247 A) : (term1010 A P Q) = (term1011 A P Q).
Proof. exact (@lem4533950 (type981 A) P Q). Qed.
Lemma lem4533952 {A : Type'} (_53782 : type982 A) : (term1012 A _53782) = (term1013 A _53782).
Proof. exact (@lem4533951 A (term882 A _53782) (term1005 A _53782)). Qed.
Lemma lem4533953 {A : Type'} (_53782 : type982 A) (f : type981 A) : (term1014 A _53782 f) = (term1003 A _53782 f).
Proof. exact (eq_refl (term1014 A _53782 f)). Qed.
Lemma lem4533954 {A : Type'} (_53782 : type982 A) : (term1015 A _53782) = (term1005 A _53782).
Proof. exact (fun_ext (fun f : type981 A => @lem4533953 A _53782 f)). Qed.
Lemma lem4533955 {A : Type'} : (@ex ((nat -> Prop) -> (A -> Prop) -> nat -> (A -> nat) -> A -> nat)) = (@ex ((nat -> Prop) -> (A -> Prop) -> nat -> (A -> nat) -> A -> nat)).
Proof. exact (eq_refl (@ex ((nat -> Prop) -> (A -> Prop) -> nat -> (A -> nat) -> A -> nat))). Qed.
Lemma lem4533956 {A : Type'} (_53782 : type982 A) : (term1016 A _53782) = (term1006 A _53782).
Proof. exact (MK_COMB (@lem4533955 A) (@lem4533954 A _53782)). Qed.
Lemma lem4533957 {A : Type'} (_53782 : type982 A) : (term884 A _53782) = (term884 A _53782).
Proof. exact (eq_refl (term884 A _53782)). Qed.
Lemma lem4533958 {A : Type'} (_53782 : type982 A) : (term1012 A _53782) = (term1007 A _53782).
Proof. exact (MK_COMB (@lem4533957 A _53782) (@lem4533956 A _53782)). Qed.
Lemma lem4533959 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4533960 {A : Type'} (_53782 : type982 A) : (term1017 A _53782) = (term1018 A _53782).
Proof. exact (MK_COMB (@lem4533959) (@lem4533958 A _53782)). Qed.
Lemma lem4533961 {A : Type'} (_53782 : type982 A) (f : type981 A) : (term1014 A _53782 f) = (term1003 A _53782 f).
Proof. exact (eq_refl (term1014 A _53782 f)). Qed.
Lemma lem4533962 {A : Type'} (_53782 : type982 A) : (term884 A _53782) = (term884 A _53782).
Proof. exact (eq_refl (term884 A _53782)). Qed.
Lemma lem4533963 {A : Type'} (_53782 : type982 A) (f : type981 A) : (term1019 A _53782 f) = (term1020 A _53782 f).
Proof. exact (MK_COMB (@lem4533962 A _53782) (@lem4533961 A _53782 f)). Qed.
Lemma lem4533964 {A : Type'} (_53782 : type982 A) : (term1021 A _53782) = (term1022 A _53782).
Proof. exact (fun_ext (fun f : type981 A => @lem4533963 A _53782 f)). Qed.
Lemma lem4533965 {A : Type'} : (@ex ((nat -> Prop) -> (A -> Prop) -> nat -> (A -> nat) -> A -> nat)) = (@ex ((nat -> Prop) -> (A -> Prop) -> nat -> (A -> nat) -> A -> nat)).
Proof. exact (eq_refl (@ex ((nat -> Prop) -> (A -> Prop) -> nat -> (A -> nat) -> A -> nat))). Qed.
Lemma lem4533966 {A : Type'} (_53782 : type982 A) : (term1013 A _53782) = (term1023 A _53782).
Proof. exact (MK_COMB (@lem4533965 A) (@lem4533964 A _53782)). Qed.
Lemma lem4533967 {A : Type'} (_53782 : type982 A) : ((term1012 A _53782) = (term1013 A _53782)) = ((term1007 A _53782) = (term1023 A _53782)).
Proof. exact (MK_COMB (@lem4533960 A _53782) (@lem4533966 A _53782)). Qed.
Lemma lem4533968 {A : Type'} (_53782 : type982 A) : (term1007 A _53782) = (term1023 A _53782).
Proof. exact (EQ_MP (@lem4533967 A _53782) (@lem4533952 A _53782)). Qed.
Lemma lem4533969 {A : Type'} (_53782 : type982 A) : (term888 A _53782) = (term1023 A _53782).
Proof. exact (TRANS (@lem4533948 A _53782) (@lem4533968 A _53782)). Qed.
Lemma lem4533970 {A : Type'} (_53782 : type982 A) : (term792 A _53782) = (term1023 A _53782).
Proof. exact (TRANS (@lem4533790 A _53782) (@lem4533969 A _53782)). Qed.
Lemma lem4533971 {A : Type'} (_53782 : type982 A) : (term761 A _53782) = (term1023 A _53782).
Proof. exact (TRANS (@lem4533130 A _53782) (@lem4533970 A _53782)). Qed.
Lemma lem4533972 {A : Type'} (_53782 : type982 A) (h1 : term761 A _53782) : term1023 A _53782.
Proof. exact (EQ_MP (@lem4533971 A _53782) (@lem4533063 A _53782 h1)). Qed.
Lemma lem4533976 {A B : Type'} (GEN_PVAR_148 : A -> B) (t : B -> Prop) (s : A -> Prop) (d : B) (f : A -> B) : (term122 A B GEN_PVAR_148 t s d f) = (term122 A B GEN_PVAR_148 t s d f).
Proof. exact (eq_refl (term122 A B GEN_PVAR_148 t s d f)). Qed.
Lemma lem4533977 {A B : Type'} (P : type572 A B) : (term1024 A B P) = (term1025 A B P).
Proof. exact (@lem18394 (A -> B) P). Qed.
Lemma lem4533978 {A B : Type'} (GEN_PVAR_148 : A -> B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term1026 A B GEN_PVAR_148 t s d) = (term1027 A B GEN_PVAR_148 t s d).
Proof. exact (@lem4533977 A B (term123 A B GEN_PVAR_148 t s d)). Qed.
Lemma lem4533979 {A B : Type'} (GEN_PVAR_148 : A -> B) (t : B -> Prop) (s : A -> Prop) (d : B) (f : A -> B) : (term1028 A B GEN_PVAR_148 t s d f) = (term122 A B GEN_PVAR_148 t s d f).
Proof. exact (eq_refl (term1028 A B GEN_PVAR_148 t s d f)). Qed.
Lemma lem4533980 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem4533982 {A B : Type'} (GEN_PVAR_148 : A -> B) (t : B -> Prop) (s : A -> Prop) (d : B) (f : A -> B) : (term1029 A B GEN_PVAR_148 t s d f) = (term1030 A B GEN_PVAR_148 t s d f).
Proof. exact (MK_COMB (@lem4533980) (@lem4533979 A B GEN_PVAR_148 t s d f)). Qed.
Lemma lem4533983 {A B : Type'} (GEN_PVAR_148 : A -> B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term1031 A B GEN_PVAR_148 t s d) = (term1032 A B GEN_PVAR_148 t s d).
Proof. exact (fun_ext (fun f : A -> B => @lem4533982 A B GEN_PVAR_148 t s d f)). Qed.
Lemma lem4533984 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem4533985 {A B : Type'} (GEN_PVAR_148 : A -> B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term1027 A B GEN_PVAR_148 t s d) = (term1033 A B GEN_PVAR_148 t s d).
Proof. exact (MK_COMB (@lem4533984 A B) (@lem4533983 A B GEN_PVAR_148 t s d)). Qed.
Lemma lem4533986 {A B : Type'} (GEN_PVAR_148 : A -> B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term1026 A B GEN_PVAR_148 t s d) = (term1033 A B GEN_PVAR_148 t s d).
Proof. exact (TRANS (@lem4533978 A B GEN_PVAR_148 t s d) (@lem4533985 A B GEN_PVAR_148 t s d)). Qed.
Lemma lem4533987 {A B : Type'} (GEN_PVAR_148 : A -> B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term123 A B GEN_PVAR_148 t s d) = (term123 A B GEN_PVAR_148 t s d).
Proof. exact (fun_ext (fun f : A -> B => @lem4533976 A B GEN_PVAR_148 t s d f)). Qed.
Lemma lem4533988 {A B : Type'} : (@ex (A -> B)) = (@ex (A -> B)).
Proof. exact (eq_refl (@ex (A -> B))). Qed.
Lemma lem4533989 {A B : Type'} (GEN_PVAR_148 : A -> B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term124 A B GEN_PVAR_148 t s d) = (term124 A B GEN_PVAR_148 t s d).
Proof. exact (MK_COMB (@lem4533988 A B) (@lem4533987 A B GEN_PVAR_148 t s d)). Qed.
Lemma lem4533991 {A B : Type'} (_53781 : type839 A B) (t : B -> Prop) (s : A -> Prop) (d : B) (GEN_PVAR_148 : A -> B) : (term1034 A B _53781 t s d GEN_PVAR_148) = (term1034 A B _53781 t s d GEN_PVAR_148).
Proof. exact (eq_refl (term1034 A B _53781 t s d GEN_PVAR_148)). Qed.
Lemma lem4533992 {A B : Type'} (_53781 : type839 A B) (GEN_PVAR_148 : A -> B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term1035 A B _53781 GEN_PVAR_148 t s d) = (term1035 A B _53781 GEN_PVAR_148 t s d).
Proof. exact (MK_COMB (@lem4533991 A B _53781 t s d GEN_PVAR_148) (@lem4533989 A B GEN_PVAR_148 t s d)). Qed.
Lemma lem4533994 {A B : Type'} (_53781 : type839 A B) (t : B -> Prop) (s : A -> Prop) (d : B) (GEN_PVAR_148 : A -> B) : (term1036 A B _53781 t s d GEN_PVAR_148) = (term1036 A B _53781 t s d GEN_PVAR_148).
Proof. exact (eq_refl (term1036 A B _53781 t s d GEN_PVAR_148)). Qed.
Lemma lem4533995 {A B : Type'} (_53781 : type839 A B) (GEN_PVAR_148 : A -> B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term1037 A B _53781 GEN_PVAR_148 t s d) = (term1038 A B _53781 GEN_PVAR_148 t s d).
Proof. exact (MK_COMB (@lem4533994 A B _53781 t s d GEN_PVAR_148) (@lem4533986 A B GEN_PVAR_148 t s d)). Qed.
Lemma lem4533996 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4533997 {A B : Type'} (_53781 : type839 A B) (GEN_PVAR_148 : A -> B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term1039 A B _53781 GEN_PVAR_148 t s d) = (term1040 A B _53781 GEN_PVAR_148 t s d).
Proof. exact (MK_COMB (@lem4533996) (@lem4533995 A B _53781 GEN_PVAR_148 t s d)). Qed.
Lemma lem4533998 {A B : Type'} (_53781 : type839 A B) (GEN_PVAR_148 : A -> B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term1041 A B _53781 GEN_PVAR_148 t s d) = (term1042 A B _53781 GEN_PVAR_148 t s d).
Proof. exact (MK_COMB (@lem4533997 A B _53781 GEN_PVAR_148 t s d) (@lem4533992 A B _53781 GEN_PVAR_148 t s d)). Qed.
Lemma lem4533999 {A B : Type'} (_53781 : type839 A B) (GEN_PVAR_148 : A -> B) (t : B -> Prop) (s : A -> Prop) (d : B) : ((_53781 t s d GEN_PVAR_148) = (term124 A B GEN_PVAR_148 t s d)) = (term1041 A B _53781 GEN_PVAR_148 t s d).
Proof. exact (@lem17784 (_53781 t s d GEN_PVAR_148) (term124 A B GEN_PVAR_148 t s d)). Qed.
Lemma lem4534000 {A B : Type'} (_53781 : type839 A B) (GEN_PVAR_148 : A -> B) (t : B -> Prop) (s : A -> Prop) (d : B) : ((_53781 t s d GEN_PVAR_148) = (term124 A B GEN_PVAR_148 t s d)) = (term1042 A B _53781 GEN_PVAR_148 t s d).
Proof. exact (TRANS (@lem4533999 A B _53781 GEN_PVAR_148 t s d) (@lem4533998 A B _53781 GEN_PVAR_148 t s d)). Qed.
Lemma lem4534001 {A B : Type'} (_53781 : type839 A B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term507 A B _53781 t s d) = (term1043 A B _53781 t s d).
Proof. exact (fun_ext (fun GEN_PVAR_148 : A -> B => @lem4534000 A B _53781 GEN_PVAR_148 t s d)). Qed.
Lemma lem4534002 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem4534003 {A B : Type'} (_53781 : type839 A B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term508 A B _53781 t s d) = (term1044 A B _53781 t s d).
Proof. exact (MK_COMB (@lem4534002 A B) (@lem4534001 A B _53781 t s d)). Qed.
Lemma lem4534004 {A B : Type'} (_53781 : type839 A B) (t : B -> Prop) (s : A -> Prop) : (term509 A B _53781 t s) = (term1045 A B _53781 t s).
Proof. exact (fun_ext (fun d : B => @lem4534003 A B _53781 t s d)). Qed.
Lemma lem4534005 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem4534006 {A B : Type'} (_53781 : type839 A B) (t : B -> Prop) (s : A -> Prop) : (term510 A B _53781 t s) = (term1046 A B _53781 t s).
Proof. exact (MK_COMB (@lem4534005 B) (@lem4534004 A B _53781 t s)). Qed.
Lemma lem4534007 {A B : Type'} (_53781 : type839 A B) (t : B -> Prop) : (term511 A B _53781 t) = (term1047 A B _53781 t).
Proof. exact (fun_ext (fun s : A -> Prop => @lem4534006 A B _53781 t s)). Qed.
Lemma lem4534008 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem4534009 {A B : Type'} (_53781 : type839 A B) (t : B -> Prop) : (term512 A B _53781 t) = (term1048 A B _53781 t).
Proof. exact (MK_COMB (@lem4534008 A) (@lem4534007 A B _53781 t)). Qed.
Lemma lem4534010 {A B : Type'} (_53781 : type839 A B) : (term513 A B _53781) = (term1049 A B _53781).
Proof. exact (fun_ext (fun t : B -> Prop => @lem4534009 A B _53781 t)). Qed.
Lemma lem4534011 {B : Type'} : (@all (B -> Prop)) = (@all (B -> Prop)).
Proof. exact (eq_refl (@all (B -> Prop))). Qed.
Lemma lem4534012 {A B : Type'} (_53781 : type839 A B) : (term514 A B _53781) = (term1050 A B _53781).
Proof. exact (MK_COMB (@lem4534011 B) (@lem4534010 A B _53781)). Qed.
Lemma lem4534026 {A : Type'} (P : A -> Prop) (Q : A -> Prop) : (term793 A P Q) = (term794 A P Q).
Proof. exact (EQ_MP (@lem18953 A P Q) (@lem18952 A P Q)). Qed.
Lemma lem4534027 {A B : Type'} (P : type572 A B) (Q : type572 A B) : (term1051 A B P Q) = (term1052 A B P Q).
Proof. exact (@lem4534026 (A -> B) P Q). Qed.
Lemma lem4534028 {A B : Type'} (_53781 : type839 A B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term1053 A B _53781 t s d) = (term1054 A B _53781 t s d).
Proof. exact (@lem4534027 A B (term1055 A B _53781 t s d) (term1056 A B _53781 t s d)). Qed.
Lemma lem4534029 {A B : Type'} (_53781 : type839 A B) (GEN_PVAR_148 : A -> B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term1057 A B _53781 t s d GEN_PVAR_148) = (term1038 A B _53781 GEN_PVAR_148 t s d).
Proof. exact (eq_refl (term1057 A B _53781 t s d GEN_PVAR_148)). Qed.
Lemma lem4534030 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4534031 {A B : Type'} (_53781 : type839 A B) (GEN_PVAR_148 : A -> B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term1058 A B _53781 t s d GEN_PVAR_148) = (term1040 A B _53781 GEN_PVAR_148 t s d).
Proof. exact (MK_COMB (@lem4534030) (@lem4534029 A B _53781 GEN_PVAR_148 t s d)). Qed.
Lemma lem4534032 {A B : Type'} (_53781 : type839 A B) (GEN_PVAR_148 : A -> B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term1059 A B _53781 t s d GEN_PVAR_148) = (term1035 A B _53781 GEN_PVAR_148 t s d).
Proof. exact (eq_refl (term1059 A B _53781 t s d GEN_PVAR_148)). Qed.
Lemma lem4534033 {A B : Type'} (_53781 : type839 A B) (GEN_PVAR_148 : A -> B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term1060 A B _53781 t s d GEN_PVAR_148) = (term1042 A B _53781 GEN_PVAR_148 t s d).
Proof. exact (MK_COMB (@lem4534031 A B _53781 GEN_PVAR_148 t s d) (@lem4534032 A B _53781 GEN_PVAR_148 t s d)). Qed.
Lemma lem4534034 {A B : Type'} (_53781 : type839 A B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term1061 A B _53781 t s d) = (term1043 A B _53781 t s d).
Proof. exact (fun_ext (fun GEN_PVAR_148 : A -> B => @lem4534033 A B _53781 GEN_PVAR_148 t s d)). Qed.
Lemma lem4534035 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem4534036 {A B : Type'} (_53781 : type839 A B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term1053 A B _53781 t s d) = (term1044 A B _53781 t s d).
Proof. exact (MK_COMB (@lem4534035 A B) (@lem4534034 A B _53781 t s d)). Qed.
Lemma lem4534037 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4534038 {A B : Type'} (_53781 : type839 A B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term1062 A B _53781 t s d) = (term1063 A B _53781 t s d).
Proof. exact (MK_COMB (@lem4534037) (@lem4534036 A B _53781 t s d)). Qed.
Lemma lem4534039 {A B : Type'} (_53781 : type839 A B) (GEN_PVAR_148 : A -> B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term1057 A B _53781 t s d GEN_PVAR_148) = (term1038 A B _53781 GEN_PVAR_148 t s d).
Proof. exact (eq_refl (term1057 A B _53781 t s d GEN_PVAR_148)). Qed.
Lemma lem4534040 {A B : Type'} (_53781 : type839 A B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term1064 A B _53781 t s d) = (term1055 A B _53781 t s d).
Proof. exact (fun_ext (fun GEN_PVAR_148 : A -> B => @lem4534039 A B _53781 GEN_PVAR_148 t s d)). Qed.
Lemma lem4534041 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem4534042 {A B : Type'} (_53781 : type839 A B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term1065 A B _53781 t s d) = (term1066 A B _53781 t s d).
Proof. exact (MK_COMB (@lem4534041 A B) (@lem4534040 A B _53781 t s d)). Qed.
Lemma lem4534043 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4534044 {A B : Type'} (_53781 : type839 A B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term1067 A B _53781 t s d) = (term1068 A B _53781 t s d).
Proof. exact (MK_COMB (@lem4534043) (@lem4534042 A B _53781 t s d)). Qed.
Lemma lem4534045 {A B : Type'} (_53781 : type839 A B) (GEN_PVAR_148 : A -> B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term1059 A B _53781 t s d GEN_PVAR_148) = (term1035 A B _53781 GEN_PVAR_148 t s d).
Proof. exact (eq_refl (term1059 A B _53781 t s d GEN_PVAR_148)). Qed.
Lemma lem4534046 {A B : Type'} (_53781 : type839 A B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term1069 A B _53781 t s d) = (term1056 A B _53781 t s d).
Proof. exact (fun_ext (fun GEN_PVAR_148 : A -> B => @lem4534045 A B _53781 GEN_PVAR_148 t s d)). Qed.
Lemma lem4534047 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem4534048 {A B : Type'} (_53781 : type839 A B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term1070 A B _53781 t s d) = (term1071 A B _53781 t s d).
Proof. exact (MK_COMB (@lem4534047 A B) (@lem4534046 A B _53781 t s d)). Qed.
Lemma lem4534049 {A B : Type'} (_53781 : type839 A B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term1054 A B _53781 t s d) = (term1072 A B _53781 t s d).
Proof. exact (MK_COMB (@lem4534044 A B _53781 t s d) (@lem4534048 A B _53781 t s d)). Qed.
Lemma lem4534050 {A B : Type'} (_53781 : type839 A B) (t : B -> Prop) (s : A -> Prop) (d : B) : ((term1053 A B _53781 t s d) = (term1054 A B _53781 t s d)) = ((term1044 A B _53781 t s d) = (term1072 A B _53781 t s d)).
Proof. exact (MK_COMB (@lem4534038 A B _53781 t s d) (@lem4534049 A B _53781 t s d)). Qed.
Lemma lem4534051 {A B : Type'} (_53781 : type839 A B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term1044 A B _53781 t s d) = (term1072 A B _53781 t s d).
Proof. exact (EQ_MP (@lem4534050 A B _53781 t s d) (@lem4534028 A B _53781 t s d)). Qed.
Lemma lem4534172 {A B : Type'} (_53781 : type839 A B) (t : B -> Prop) (s : A -> Prop) : (term1045 A B _53781 t s) = (term1073 A B _53781 t s).
Proof. exact (fun_ext (fun d : B => @lem4534051 A B _53781 t s d)). Qed.
Lemma lem4534173 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem4534174 {A B : Type'} (_53781 : type839 A B) (t : B -> Prop) (s : A -> Prop) : (term1046 A B _53781 t s) = (term1074 A B _53781 t s).
Proof. exact (MK_COMB (@lem4534173 B) (@lem4534172 A B _53781 t s)). Qed.
Lemma lem4534176 {A : Type'} (P : A -> Prop) (Q : A -> Prop) : (term793 A P Q) = (term794 A P Q).
Proof. exact (EQ_MP (@lem18953 A P Q) (@lem18952 A P Q)). Qed.
Lemma lem4534177 {B : Type'} (P : B -> Prop) (Q : B -> Prop) : (term793 B P Q) = (term794 B P Q).
Proof. exact (@lem4534176 B P Q). Qed.
Lemma lem4534178 {A B : Type'} (_53781 : type839 A B) (t : B -> Prop) (s : A -> Prop) : (term1075 A B _53781 t s) = (term1076 A B _53781 t s).
Proof. exact (@lem4534177 B (term1077 A B _53781 t s) (term1078 A B _53781 t s)). Qed.
Lemma lem4534179 {A B : Type'} (_53781 : type839 A B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term1079 A B _53781 t s d) = (term1066 A B _53781 t s d).
Proof. exact (eq_refl (term1079 A B _53781 t s d)). Qed.
Lemma lem4534180 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4534181 {A B : Type'} (_53781 : type839 A B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term1080 A B _53781 t s d) = (term1068 A B _53781 t s d).
Proof. exact (MK_COMB (@lem4534180) (@lem4534179 A B _53781 t s d)). Qed.
Lemma lem4534182 {A B : Type'} (_53781 : type839 A B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term1081 A B _53781 t s d) = (term1071 A B _53781 t s d).
Proof. exact (eq_refl (term1081 A B _53781 t s d)). Qed.
Lemma lem4534183 {A B : Type'} (_53781 : type839 A B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term1082 A B _53781 t s d) = (term1072 A B _53781 t s d).
Proof. exact (MK_COMB (@lem4534181 A B _53781 t s d) (@lem4534182 A B _53781 t s d)). Qed.
Lemma lem4534184 {A B : Type'} (_53781 : type839 A B) (t : B -> Prop) (s : A -> Prop) : (term1083 A B _53781 t s) = (term1073 A B _53781 t s).
Proof. exact (fun_ext (fun d : B => @lem4534183 A B _53781 t s d)). Qed.
Lemma lem4534185 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem4534186 {A B : Type'} (_53781 : type839 A B) (t : B -> Prop) (s : A -> Prop) : (term1075 A B _53781 t s) = (term1074 A B _53781 t s).
Proof. exact (MK_COMB (@lem4534185 B) (@lem4534184 A B _53781 t s)). Qed.
Lemma lem4534187 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4534188 {A B : Type'} (_53781 : type839 A B) (t : B -> Prop) (s : A -> Prop) : (term1084 A B _53781 t s) = (term1085 A B _53781 t s).
Proof. exact (MK_COMB (@lem4534187) (@lem4534186 A B _53781 t s)). Qed.
Lemma lem4534189 {A B : Type'} (_53781 : type839 A B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term1079 A B _53781 t s d) = (term1066 A B _53781 t s d).
Proof. exact (eq_refl (term1079 A B _53781 t s d)). Qed.
Lemma lem4534190 {A B : Type'} (_53781 : type839 A B) (t : B -> Prop) (s : A -> Prop) : (term1086 A B _53781 t s) = (term1077 A B _53781 t s).
Proof. exact (fun_ext (fun d : B => @lem4534189 A B _53781 t s d)). Qed.
Lemma lem4534191 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem4534192 {A B : Type'} (_53781 : type839 A B) (t : B -> Prop) (s : A -> Prop) : (term1087 A B _53781 t s) = (term1088 A B _53781 t s).
Proof. exact (MK_COMB (@lem4534191 B) (@lem4534190 A B _53781 t s)). Qed.
Lemma lem4534193 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4534194 {A B : Type'} (_53781 : type839 A B) (t : B -> Prop) (s : A -> Prop) : (term1089 A B _53781 t s) = (term1090 A B _53781 t s).
Proof. exact (MK_COMB (@lem4534193) (@lem4534192 A B _53781 t s)). Qed.
Lemma lem4534195 {A B : Type'} (_53781 : type839 A B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term1081 A B _53781 t s d) = (term1071 A B _53781 t s d).
Proof. exact (eq_refl (term1081 A B _53781 t s d)). Qed.
Lemma lem4534196 {A B : Type'} (_53781 : type839 A B) (t : B -> Prop) (s : A -> Prop) : (term1091 A B _53781 t s) = (term1078 A B _53781 t s).
Proof. exact (fun_ext (fun d : B => @lem4534195 A B _53781 t s d)). Qed.
Lemma lem4534197 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem4534198 {A B : Type'} (_53781 : type839 A B) (t : B -> Prop) (s : A -> Prop) : (term1092 A B _53781 t s) = (term1093 A B _53781 t s).
Proof. exact (MK_COMB (@lem4534197 B) (@lem4534196 A B _53781 t s)). Qed.
Lemma lem4534199 {A B : Type'} (_53781 : type839 A B) (t : B -> Prop) (s : A -> Prop) : (term1076 A B _53781 t s) = (term1094 A B _53781 t s).
Proof. exact (MK_COMB (@lem4534194 A B _53781 t s) (@lem4534198 A B _53781 t s)). Qed.
Lemma lem4534200 {A B : Type'} (_53781 : type839 A B) (t : B -> Prop) (s : A -> Prop) : ((term1075 A B _53781 t s) = (term1076 A B _53781 t s)) = ((term1074 A B _53781 t s) = (term1094 A B _53781 t s)).
Proof. exact (MK_COMB (@lem4534188 A B _53781 t s) (@lem4534199 A B _53781 t s)). Qed.
Lemma lem4534201 {A B : Type'} (_53781 : type839 A B) (t : B -> Prop) (s : A -> Prop) : (term1074 A B _53781 t s) = (term1094 A B _53781 t s).
Proof. exact (EQ_MP (@lem4534200 A B _53781 t s) (@lem4534178 A B _53781 t s)). Qed.
Lemma lem4534330 {A B : Type'} (_53781 : type839 A B) (t : B -> Prop) (s : A -> Prop) : (term1046 A B _53781 t s) = (term1094 A B _53781 t s).
Proof. exact (TRANS (@lem4534174 A B _53781 t s) (@lem4534201 A B _53781 t s)). Qed.
Lemma lem4534331 {A B : Type'} (_53781 : type839 A B) (t : B -> Prop) : (term1047 A B _53781 t) = (term1095 A B _53781 t).
Proof. exact (fun_ext (fun s : A -> Prop => @lem4534330 A B _53781 t s)). Qed.
Lemma lem4534332 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem4534333 {A B : Type'} (_53781 : type839 A B) (t : B -> Prop) : (term1048 A B _53781 t) = (term1096 A B _53781 t).
Proof. exact (MK_COMB (@lem4534332 A) (@lem4534331 A B _53781 t)). Qed.
Lemma lem4534335 {A : Type'} (P : A -> Prop) (Q : A -> Prop) : (term793 A P Q) = (term794 A P Q).
Proof. exact (EQ_MP (@lem18953 A P Q) (@lem18952 A P Q)). Qed.
Lemma lem4534336 {A : Type'} (P : type686 A) (Q : type686 A) : (term843 A P Q) = (term844 A P Q).
Proof. exact (@lem4534335 (A -> Prop) P Q). Qed.
Lemma lem4534337 {A B : Type'} (_53781 : type839 A B) (t : B -> Prop) : (term1097 A B _53781 t) = (term1098 A B _53781 t).
Proof. exact (@lem4534336 A (term1099 A B _53781 t) (term1100 A B _53781 t)). Qed.
Lemma lem4534338 {A B : Type'} (_53781 : type839 A B) (t : B -> Prop) (s : A -> Prop) : (term1101 A B _53781 t s) = (term1088 A B _53781 t s).
Proof. exact (eq_refl (term1101 A B _53781 t s)). Qed.
Lemma lem4534339 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4534340 {A B : Type'} (_53781 : type839 A B) (t : B -> Prop) (s : A -> Prop) : (term1102 A B _53781 t s) = (term1090 A B _53781 t s).
Proof. exact (MK_COMB (@lem4534339) (@lem4534338 A B _53781 t s)). Qed.
Lemma lem4534341 {A B : Type'} (_53781 : type839 A B) (t : B -> Prop) (s : A -> Prop) : (term1103 A B _53781 t s) = (term1093 A B _53781 t s).
Proof. exact (eq_refl (term1103 A B _53781 t s)). Qed.
Lemma lem4534342 {A B : Type'} (_53781 : type839 A B) (t : B -> Prop) (s : A -> Prop) : (term1104 A B _53781 t s) = (term1094 A B _53781 t s).
Proof. exact (MK_COMB (@lem4534340 A B _53781 t s) (@lem4534341 A B _53781 t s)). Qed.
Lemma lem4534343 {A B : Type'} (_53781 : type839 A B) (t : B -> Prop) : (term1105 A B _53781 t) = (term1095 A B _53781 t).
Proof. exact (fun_ext (fun s : A -> Prop => @lem4534342 A B _53781 t s)). Qed.
Lemma lem4534344 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem4534345 {A B : Type'} (_53781 : type839 A B) (t : B -> Prop) : (term1097 A B _53781 t) = (term1096 A B _53781 t).
Proof. exact (MK_COMB (@lem4534344 A) (@lem4534343 A B _53781 t)). Qed.
Lemma lem4534346 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4534347 {A B : Type'} (_53781 : type839 A B) (t : B -> Prop) : (term1106 A B _53781 t) = (term1107 A B _53781 t).
Proof. exact (MK_COMB (@lem4534346) (@lem4534345 A B _53781 t)). Qed.
Lemma lem4534348 {A B : Type'} (_53781 : type839 A B) (t : B -> Prop) (s : A -> Prop) : (term1101 A B _53781 t s) = (term1088 A B _53781 t s).
Proof. exact (eq_refl (term1101 A B _53781 t s)). Qed.
Lemma lem4534349 {A B : Type'} (_53781 : type839 A B) (t : B -> Prop) : (term1108 A B _53781 t) = (term1099 A B _53781 t).
Proof. exact (fun_ext (fun s : A -> Prop => @lem4534348 A B _53781 t s)). Qed.
Lemma lem4534350 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem4534351 {A B : Type'} (_53781 : type839 A B) (t : B -> Prop) : (term1109 A B _53781 t) = (term1110 A B _53781 t).
Proof. exact (MK_COMB (@lem4534350 A) (@lem4534349 A B _53781 t)). Qed.
Lemma lem4534352 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4534353 {A B : Type'} (_53781 : type839 A B) (t : B -> Prop) : (term1111 A B _53781 t) = (term1112 A B _53781 t).
Proof. exact (MK_COMB (@lem4534352) (@lem4534351 A B _53781 t)). Qed.
Lemma lem4534354 {A B : Type'} (_53781 : type839 A B) (t : B -> Prop) (s : A -> Prop) : (term1103 A B _53781 t s) = (term1093 A B _53781 t s).
Proof. exact (eq_refl (term1103 A B _53781 t s)). Qed.
Lemma lem4534355 {A B : Type'} (_53781 : type839 A B) (t : B -> Prop) : (term1113 A B _53781 t) = (term1100 A B _53781 t).
Proof. exact (fun_ext (fun s : A -> Prop => @lem4534354 A B _53781 t s)). Qed.
Lemma lem4534356 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem4534357 {A B : Type'} (_53781 : type839 A B) (t : B -> Prop) : (term1114 A B _53781 t) = (term1115 A B _53781 t).
Proof. exact (MK_COMB (@lem4534356 A) (@lem4534355 A B _53781 t)). Qed.
Lemma lem4534358 {A B : Type'} (_53781 : type839 A B) (t : B -> Prop) : (term1098 A B _53781 t) = (term1116 A B _53781 t).
Proof. exact (MK_COMB (@lem4534353 A B _53781 t) (@lem4534357 A B _53781 t)). Qed.
Lemma lem4534359 {A B : Type'} (_53781 : type839 A B) (t : B -> Prop) : ((term1097 A B _53781 t) = (term1098 A B _53781 t)) = ((term1096 A B _53781 t) = (term1116 A B _53781 t)).
Proof. exact (MK_COMB (@lem4534347 A B _53781 t) (@lem4534358 A B _53781 t)). Qed.
Lemma lem4534360 {A B : Type'} (_53781 : type839 A B) (t : B -> Prop) : (term1096 A B _53781 t) = (term1116 A B _53781 t).
Proof. exact (EQ_MP (@lem4534359 A B _53781 t) (@lem4534337 A B _53781 t)). Qed.
Lemma lem4534497 {A B : Type'} (_53781 : type839 A B) (t : B -> Prop) : (term1048 A B _53781 t) = (term1116 A B _53781 t).
Proof. exact (TRANS (@lem4534333 A B _53781 t) (@lem4534360 A B _53781 t)). Qed.
Lemma lem4534498 {A B : Type'} (_53781 : type839 A B) : (term1049 A B _53781) = (term1117 A B _53781).
Proof. exact (fun_ext (fun t : B -> Prop => @lem4534497 A B _53781 t)). Qed.
Lemma lem4534499 {B : Type'} : (@all (B -> Prop)) = (@all (B -> Prop)).
Proof. exact (eq_refl (@all (B -> Prop))). Qed.
Lemma lem4534500 {A B : Type'} (_53781 : type839 A B) : (term1050 A B _53781) = (term1118 A B _53781).
Proof. exact (MK_COMB (@lem4534499 B) (@lem4534498 A B _53781)). Qed.
Lemma lem4534502 {A : Type'} (P : A -> Prop) (Q : A -> Prop) : (term793 A P Q) = (term794 A P Q).
Proof. exact (EQ_MP (@lem18953 A P Q) (@lem18952 A P Q)). Qed.
Lemma lem4534503 {B : Type'} (P : type686 B) (Q : type686 B) : (term843 B P Q) = (term844 B P Q).
Proof. exact (@lem4534502 (B -> Prop) P Q). Qed.
Lemma lem4534504 {A B : Type'} (_53781 : type839 A B) : (term1119 A B _53781) = (term1120 A B _53781).
Proof. exact (@lem4534503 B (term1121 A B _53781) (term1122 A B _53781)). Qed.
Lemma lem4534505 {A B : Type'} (_53781 : type839 A B) (t : B -> Prop) : (term1123 A B _53781 t) = (term1110 A B _53781 t).
Proof. exact (eq_refl (term1123 A B _53781 t)). Qed.
Lemma lem4534506 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4534507 {A B : Type'} (_53781 : type839 A B) (t : B -> Prop) : (term1124 A B _53781 t) = (term1112 A B _53781 t).
Proof. exact (MK_COMB (@lem4534506) (@lem4534505 A B _53781 t)). Qed.
Lemma lem4534508 {A B : Type'} (_53781 : type839 A B) (t : B -> Prop) : (term1125 A B _53781 t) = (term1115 A B _53781 t).
Proof. exact (eq_refl (term1125 A B _53781 t)). Qed.
Lemma lem4534509 {A B : Type'} (_53781 : type839 A B) (t : B -> Prop) : (term1126 A B _53781 t) = (term1116 A B _53781 t).
Proof. exact (MK_COMB (@lem4534507 A B _53781 t) (@lem4534508 A B _53781 t)). Qed.
Lemma lem4534510 {A B : Type'} (_53781 : type839 A B) : (term1127 A B _53781) = (term1117 A B _53781).
Proof. exact (fun_ext (fun t : B -> Prop => @lem4534509 A B _53781 t)). Qed.
Lemma lem4534511 {B : Type'} : (@all (B -> Prop)) = (@all (B -> Prop)).
Proof. exact (eq_refl (@all (B -> Prop))). Qed.
Lemma lem4534512 {A B : Type'} (_53781 : type839 A B) : (term1119 A B _53781) = (term1118 A B _53781).
Proof. exact (MK_COMB (@lem4534511 B) (@lem4534510 A B _53781)). Qed.
Lemma lem4534513 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4534514 {A B : Type'} (_53781 : type839 A B) : (term1128 A B _53781) = (term1129 A B _53781).
Proof. exact (MK_COMB (@lem4534513) (@lem4534512 A B _53781)). Qed.
Lemma lem4534515 {A B : Type'} (_53781 : type839 A B) (t : B -> Prop) : (term1123 A B _53781 t) = (term1110 A B _53781 t).
Proof. exact (eq_refl (term1123 A B _53781 t)). Qed.
Lemma lem4534516 {A B : Type'} (_53781 : type839 A B) : (term1130 A B _53781) = (term1121 A B _53781).
Proof. exact (fun_ext (fun t : B -> Prop => @lem4534515 A B _53781 t)). Qed.
Lemma lem4534517 {B : Type'} : (@all (B -> Prop)) = (@all (B -> Prop)).
Proof. exact (eq_refl (@all (B -> Prop))). Qed.
Lemma lem4534518 {A B : Type'} (_53781 : type839 A B) : (term1131 A B _53781) = (term1132 A B _53781).
Proof. exact (MK_COMB (@lem4534517 B) (@lem4534516 A B _53781)). Qed.
Lemma lem4534519 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4534520 {A B : Type'} (_53781 : type839 A B) : (term1133 A B _53781) = (term1134 A B _53781).
Proof. exact (MK_COMB (@lem4534519) (@lem4534518 A B _53781)). Qed.
Lemma lem4534521 {A B : Type'} (_53781 : type839 A B) (t : B -> Prop) : (term1125 A B _53781 t) = (term1115 A B _53781 t).
Proof. exact (eq_refl (term1125 A B _53781 t)). Qed.
Lemma lem4534522 {A B : Type'} (_53781 : type839 A B) : (term1135 A B _53781) = (term1122 A B _53781).
Proof. exact (fun_ext (fun t : B -> Prop => @lem4534521 A B _53781 t)). Qed.
Lemma lem4534523 {B : Type'} : (@all (B -> Prop)) = (@all (B -> Prop)).
Proof. exact (eq_refl (@all (B -> Prop))). Qed.
Lemma lem4534524 {A B : Type'} (_53781 : type839 A B) : (term1136 A B _53781) = (term1137 A B _53781).
Proof. exact (MK_COMB (@lem4534523 B) (@lem4534522 A B _53781)). Qed.
Lemma lem4534525 {A B : Type'} (_53781 : type839 A B) : (term1120 A B _53781) = (term1138 A B _53781).
Proof. exact (MK_COMB (@lem4534520 A B _53781) (@lem4534524 A B _53781)). Qed.
Lemma lem4534526 {A B : Type'} (_53781 : type839 A B) : ((term1119 A B _53781) = (term1120 A B _53781)) = ((term1118 A B _53781) = (term1138 A B _53781)).
Proof. exact (MK_COMB (@lem4534514 A B _53781) (@lem4534525 A B _53781)). Qed.
Lemma lem4534527 {A B : Type'} (_53781 : type839 A B) : (term1118 A B _53781) = (term1138 A B _53781).
Proof. exact (EQ_MP (@lem4534526 A B _53781) (@lem4534504 A B _53781)). Qed.
Lemma lem4534672 {A B : Type'} (_53781 : type839 A B) : (term1050 A B _53781) = (term1138 A B _53781).
Proof. exact (TRANS (@lem4534500 A B _53781) (@lem4534527 A B _53781)). Qed.
Lemma lem4534674 {A : Type'} (P : Prop) (Q : A -> Prop) : (term889 A P Q) = (term890 A P Q).
Proof. exact (EQ_MP (@lem18911 A P Q) (@lem18910 A P Q)). Qed.
Lemma lem4534675 {A B : Type'} (P : Prop) (Q : type572 A B) : (term1139 A B P Q) = (term1140 A B P Q).
Proof. exact (@lem4534674 (A -> B) P Q). Qed.
Lemma lem4534676 {A B : Type'} (_53781 : type839 A B) (GEN_PVAR_148 : A -> B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term1141 A B _53781 GEN_PVAR_148 t s d) = (term1142 A B _53781 GEN_PVAR_148 t s d).
Proof. exact (@lem4534675 A B (term1143 A B _53781 t s d GEN_PVAR_148) (term123 A B GEN_PVAR_148 t s d)). Qed.
Lemma lem4534677 {A B : Type'} (GEN_PVAR_148 : A -> B) (t : B -> Prop) (s : A -> Prop) (d : B) (f : A -> B) : (term1028 A B GEN_PVAR_148 t s d f) = (term122 A B GEN_PVAR_148 t s d f).
Proof. exact (eq_refl (term1028 A B GEN_PVAR_148 t s d f)). Qed.
Lemma lem4534678 {A B : Type'} (GEN_PVAR_148 : A -> B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term1144 A B GEN_PVAR_148 t s d) = (term123 A B GEN_PVAR_148 t s d).
Proof. exact (fun_ext (fun f : A -> B => @lem4534677 A B GEN_PVAR_148 t s d f)). Qed.
Lemma lem4534679 {A B : Type'} : (@ex (A -> B)) = (@ex (A -> B)).
Proof. exact (eq_refl (@ex (A -> B))). Qed.
Lemma lem4534680 {A B : Type'} (GEN_PVAR_148 : A -> B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term1145 A B GEN_PVAR_148 t s d) = (term124 A B GEN_PVAR_148 t s d).
Proof. exact (MK_COMB (@lem4534679 A B) (@lem4534678 A B GEN_PVAR_148 t s d)). Qed.
Lemma lem4534681 {A B : Type'} (_53781 : type839 A B) (t : B -> Prop) (s : A -> Prop) (d : B) (GEN_PVAR_148 : A -> B) : (term1034 A B _53781 t s d GEN_PVAR_148) = (term1034 A B _53781 t s d GEN_PVAR_148).
Proof. exact (eq_refl (term1034 A B _53781 t s d GEN_PVAR_148)). Qed.
Lemma lem4534682 {A B : Type'} (_53781 : type839 A B) (GEN_PVAR_148 : A -> B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term1141 A B _53781 GEN_PVAR_148 t s d) = (term1035 A B _53781 GEN_PVAR_148 t s d).
Proof. exact (MK_COMB (@lem4534681 A B _53781 t s d GEN_PVAR_148) (@lem4534680 A B GEN_PVAR_148 t s d)). Qed.
Lemma lem4534683 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4534684 {A B : Type'} (_53781 : type839 A B) (GEN_PVAR_148 : A -> B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term1146 A B _53781 GEN_PVAR_148 t s d) = (term1147 A B _53781 GEN_PVAR_148 t s d).
Proof. exact (MK_COMB (@lem4534683) (@lem4534682 A B _53781 GEN_PVAR_148 t s d)). Qed.
Lemma lem4534685 {A B : Type'} (GEN_PVAR_148 : A -> B) (t : B -> Prop) (s : A -> Prop) (d : B) (f : A -> B) : (term1028 A B GEN_PVAR_148 t s d f) = (term122 A B GEN_PVAR_148 t s d f).
Proof. exact (eq_refl (term1028 A B GEN_PVAR_148 t s d f)). Qed.
Lemma lem4534686 {A B : Type'} (_53781 : type839 A B) (t : B -> Prop) (s : A -> Prop) (d : B) (GEN_PVAR_148 : A -> B) : (term1034 A B _53781 t s d GEN_PVAR_148) = (term1034 A B _53781 t s d GEN_PVAR_148).
Proof. exact (eq_refl (term1034 A B _53781 t s d GEN_PVAR_148)). Qed.
Lemma lem4534687 {A B : Type'} (_53781 : type839 A B) (GEN_PVAR_148 : A -> B) (t : B -> Prop) (s : A -> Prop) (d : B) (f : A -> B) : (term1148 A B _53781 GEN_PVAR_148 t s d f) = (term1149 A B _53781 GEN_PVAR_148 t s d f).
Proof. exact (MK_COMB (@lem4534686 A B _53781 t s d GEN_PVAR_148) (@lem4534685 A B GEN_PVAR_148 t s d f)). Qed.
Lemma lem4534688 {A B : Type'} (_53781 : type839 A B) (GEN_PVAR_148 : A -> B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term1150 A B _53781 GEN_PVAR_148 t s d) = (term1151 A B _53781 GEN_PVAR_148 t s d).
Proof. exact (fun_ext (fun f : A -> B => @lem4534687 A B _53781 GEN_PVAR_148 t s d f)). Qed.
Lemma lem4534689 {A B : Type'} : (@ex (A -> B)) = (@ex (A -> B)).
Proof. exact (eq_refl (@ex (A -> B))). Qed.
Lemma lem4534690 {A B : Type'} (_53781 : type839 A B) (GEN_PVAR_148 : A -> B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term1142 A B _53781 GEN_PVAR_148 t s d) = (term1152 A B _53781 GEN_PVAR_148 t s d).
Proof. exact (MK_COMB (@lem4534689 A B) (@lem4534688 A B _53781 GEN_PVAR_148 t s d)). Qed.
Lemma lem4534691 {A B : Type'} (_53781 : type839 A B) (GEN_PVAR_148 : A -> B) (t : B -> Prop) (s : A -> Prop) (d : B) : ((term1141 A B _53781 GEN_PVAR_148 t s d) = (term1142 A B _53781 GEN_PVAR_148 t s d)) = ((term1035 A B _53781 GEN_PVAR_148 t s d) = (term1152 A B _53781 GEN_PVAR_148 t s d)).
Proof. exact (MK_COMB (@lem4534684 A B _53781 GEN_PVAR_148 t s d) (@lem4534690 A B _53781 GEN_PVAR_148 t s d)). Qed.
Lemma lem4534692 {A B : Type'} (_53781 : type839 A B) (GEN_PVAR_148 : A -> B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term1035 A B _53781 GEN_PVAR_148 t s d) = (term1152 A B _53781 GEN_PVAR_148 t s d).
Proof. exact (EQ_MP (@lem4534691 A B _53781 GEN_PVAR_148 t s d) (@lem4534676 A B _53781 GEN_PVAR_148 t s d)). Qed.
Lemma lem4534693 {A B : Type'} (_53781 : type839 A B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term1056 A B _53781 t s d) = (term1153 A B _53781 t s d).
Proof. exact (fun_ext (fun GEN_PVAR_148 : A -> B => @lem4534692 A B _53781 GEN_PVAR_148 t s d)). Qed.
Lemma lem4534694 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem4534695 {A B : Type'} (_53781 : type839 A B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term1071 A B _53781 t s d) = (term1154 A B _53781 t s d).
Proof. exact (MK_COMB (@lem4534694 A B) (@lem4534693 A B _53781 t s d)). Qed.
Lemma lem4534697 {A B : Type'} (P : type1413 A B) : (term907 A B P) = (term908 A B P).
Proof. exact (EQ_MP (@lem18899 A B P) (@lem18898 A B P)). Qed.
Lemma lem4534698 {A B : Type'} (P : type523 A B) : (term1155 A B P) = (term1156 A B P).
Proof. exact (@lem4534697 (A -> B) (A -> B) P). Qed.
Lemma lem4534699 {A B : Type'} (_53781 : type839 A B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term1157 A B _53781 t s d) = (term1158 A B _53781 t s d).
Proof. exact (@lem4534698 A B (term1159 A B _53781 t s d)). Qed.
Lemma lem4534700 {A B : Type'} (_53781 : type839 A B) (GEN_PVAR_148 : A -> B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term1160 A B _53781 t s d GEN_PVAR_148) = (term1151 A B _53781 GEN_PVAR_148 t s d).
Proof. exact (eq_refl (term1160 A B _53781 t s d GEN_PVAR_148)). Qed.
Lemma lem4534701 {A B : Type'} (f : A -> B) : f = f.
Proof. exact (eq_refl f). Qed.
Lemma lem4534702 {A B : Type'} (_53781 : type839 A B) (GEN_PVAR_148 : A -> B) (t : B -> Prop) (s : A -> Prop) (d : B) (f : A -> B) : (term1161 A B _53781 t s d GEN_PVAR_148 f) = (term1162 A B _53781 GEN_PVAR_148 t s d f).
Proof. exact (MK_COMB (@lem4534700 A B _53781 GEN_PVAR_148 t s d) (@lem4534701 A B f)). Qed.
Lemma lem4534703 {A B : Type'} (_53781 : type839 A B) (GEN_PVAR_148 : A -> B) (t : B -> Prop) (s : A -> Prop) (d : B) (f : A -> B) : (term1162 A B _53781 GEN_PVAR_148 t s d f) = (term1149 A B _53781 GEN_PVAR_148 t s d f).
Proof. exact (eq_refl (term1162 A B _53781 GEN_PVAR_148 t s d f)). Qed.
Lemma lem4534704 {A B : Type'} (_53781 : type839 A B) (GEN_PVAR_148 : A -> B) (t : B -> Prop) (s : A -> Prop) (d : B) (f : A -> B) : (term1161 A B _53781 t s d GEN_PVAR_148 f) = (term1149 A B _53781 GEN_PVAR_148 t s d f).
Proof. exact (TRANS (@lem4534702 A B _53781 GEN_PVAR_148 t s d f) (@lem4534703 A B _53781 GEN_PVAR_148 t s d f)). Qed.
Lemma lem4534705 {A B : Type'} (_53781 : type839 A B) (GEN_PVAR_148 : A -> B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term1163 A B _53781 t s d GEN_PVAR_148) = (term1151 A B _53781 GEN_PVAR_148 t s d).
Proof. exact (fun_ext (fun f : A -> B => @lem4534704 A B _53781 GEN_PVAR_148 t s d f)). Qed.
Lemma lem4534706 {A B : Type'} : (@ex (A -> B)) = (@ex (A -> B)).
Proof. exact (eq_refl (@ex (A -> B))). Qed.
Lemma lem4534707 {A B : Type'} (_53781 : type839 A B) (GEN_PVAR_148 : A -> B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term1164 A B _53781 t s d GEN_PVAR_148) = (term1152 A B _53781 GEN_PVAR_148 t s d).
Proof. exact (MK_COMB (@lem4534706 A B) (@lem4534705 A B _53781 GEN_PVAR_148 t s d)). Qed.
Lemma lem4534708 {A B : Type'} (_53781 : type839 A B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term1165 A B _53781 t s d) = (term1153 A B _53781 t s d).
Proof. exact (fun_ext (fun GEN_PVAR_148 : A -> B => @lem4534707 A B _53781 GEN_PVAR_148 t s d)). Qed.
Lemma lem4534709 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem4534710 {A B : Type'} (_53781 : type839 A B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term1157 A B _53781 t s d) = (term1154 A B _53781 t s d).
Proof. exact (MK_COMB (@lem4534709 A B) (@lem4534708 A B _53781 t s d)). Qed.
Lemma lem4534711 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4534712 {A B : Type'} (_53781 : type839 A B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term1166 A B _53781 t s d) = (term1167 A B _53781 t s d).
Proof. exact (MK_COMB (@lem4534711) (@lem4534710 A B _53781 t s d)). Qed.
Lemma lem4534713 {A B : Type'} (_53781 : type839 A B) (GEN_PVAR_148 : A -> B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term1160 A B _53781 t s d GEN_PVAR_148) = (term1151 A B _53781 GEN_PVAR_148 t s d).
Proof. exact (eq_refl (term1160 A B _53781 t s d GEN_PVAR_148)). Qed.
Lemma lem4534714 {A B : Type'} (f : type549 A B) (GEN_PVAR_148 : A -> B) : (f GEN_PVAR_148) = (f GEN_PVAR_148).
Proof. exact (eq_refl (f GEN_PVAR_148)). Qed.
Lemma lem4534715 {A B : Type'} (_53781 : type839 A B) (t : B -> Prop) (s : A -> Prop) (d : B) (f : type549 A B) (GEN_PVAR_148 : A -> B) : (term1168 A B _53781 t s d f GEN_PVAR_148) = (term1169 A B _53781 t s d f GEN_PVAR_148).
Proof. exact (MK_COMB (@lem4534713 A B _53781 GEN_PVAR_148 t s d) (@lem4534714 A B f GEN_PVAR_148)). Qed.
Lemma lem4534716 {A B : Type'} (_53781 : type839 A B) (t : B -> Prop) (s : A -> Prop) (d : B) (f : type549 A B) (GEN_PVAR_148 : A -> B) : (term1169 A B _53781 t s d f GEN_PVAR_148) = (term1170 A B _53781 t s d f GEN_PVAR_148).
Proof. exact (eq_refl (term1169 A B _53781 t s d f GEN_PVAR_148)). Qed.
Lemma lem4534717 {A B : Type'} (_53781 : type839 A B) (t : B -> Prop) (s : A -> Prop) (d : B) (f : type549 A B) (GEN_PVAR_148 : A -> B) : (term1168 A B _53781 t s d f GEN_PVAR_148) = (term1170 A B _53781 t s d f GEN_PVAR_148).
Proof. exact (TRANS (@lem4534715 A B _53781 t s d f GEN_PVAR_148) (@lem4534716 A B _53781 t s d f GEN_PVAR_148)). Qed.
Lemma lem4534718 {A B : Type'} (_53781 : type839 A B) (t : B -> Prop) (s : A -> Prop) (d : B) (f : type549 A B) : (term1171 A B _53781 t s d f) = (term1172 A B _53781 t s d f).
Proof. exact (fun_ext (fun GEN_PVAR_148 : A -> B => @lem4534717 A B _53781 t s d f GEN_PVAR_148)). Qed.
Lemma lem4534719 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem4534720 {A B : Type'} (_53781 : type839 A B) (t : B -> Prop) (s : A -> Prop) (d : B) (f : type549 A B) : (term1173 A B _53781 t s d f) = (term1174 A B _53781 t s d f).
Proof. exact (MK_COMB (@lem4534719 A B) (@lem4534718 A B _53781 t s d f)). Qed.
Lemma lem4534721 {A B : Type'} (_53781 : type839 A B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term1175 A B _53781 t s d) = (term1176 A B _53781 t s d).
Proof. exact (fun_ext (fun f : type549 A B => @lem4534720 A B _53781 t s d f)). Qed.
Lemma lem4534722 {A B : Type'} : (@ex ((A -> B) -> A -> B)) = (@ex ((A -> B) -> A -> B)).
Proof. exact (eq_refl (@ex ((A -> B) -> A -> B))). Qed.
Lemma lem4534723 {A B : Type'} (_53781 : type839 A B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term1158 A B _53781 t s d) = (term1177 A B _53781 t s d).
Proof. exact (MK_COMB (@lem4534722 A B) (@lem4534721 A B _53781 t s d)). Qed.
Lemma lem4534724 {A B : Type'} (_53781 : type839 A B) (t : B -> Prop) (s : A -> Prop) (d : B) : ((term1157 A B _53781 t s d) = (term1158 A B _53781 t s d)) = ((term1154 A B _53781 t s d) = (term1177 A B _53781 t s d)).
Proof. exact (MK_COMB (@lem4534712 A B _53781 t s d) (@lem4534723 A B _53781 t s d)). Qed.
Lemma lem4534725 {A B : Type'} (_53781 : type839 A B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term1154 A B _53781 t s d) = (term1177 A B _53781 t s d).
Proof. exact (EQ_MP (@lem4534724 A B _53781 t s d) (@lem4534699 A B _53781 t s d)). Qed.
Lemma lem4534726 {A B : Type'} (_53781 : type839 A B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term1071 A B _53781 t s d) = (term1177 A B _53781 t s d).
Proof. exact (TRANS (@lem4534695 A B _53781 t s d) (@lem4534725 A B _53781 t s d)). Qed.
Lemma lem4534727 {A B : Type'} (_53781 : type839 A B) (t : B -> Prop) (s : A -> Prop) : (term1078 A B _53781 t s) = (term1178 A B _53781 t s).
Proof. exact (fun_ext (fun d : B => @lem4534726 A B _53781 t s d)). Qed.
Lemma lem4534728 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem4534729 {A B : Type'} (_53781 : type839 A B) (t : B -> Prop) (s : A -> Prop) : (term1093 A B _53781 t s) = (term1179 A B _53781 t s).
Proof. exact (MK_COMB (@lem4534728 B) (@lem4534727 A B _53781 t s)). Qed.
Lemma lem4534731 {A B : Type'} (P : type1413 A B) : (term907 A B P) = (term908 A B P).
Proof. exact (EQ_MP (@lem18899 A B P) (@lem18898 A B P)). Qed.
Lemma lem4534732 {A B : Type'} (P : type1435 A B) : (term1180 A B P) = (term1181 A B P).
Proof. exact (@lem4534731 B (type549 A B) P). Qed.
Lemma lem4534733 {A B : Type'} (_53781 : type839 A B) (t : B -> Prop) (s : A -> Prop) : (term1182 A B _53781 t s) = (term1183 A B _53781 t s).
Proof. exact (@lem4534732 A B (term1184 A B _53781 t s)). Qed.
Lemma lem4534734 {A B : Type'} (_53781 : type839 A B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term1185 A B _53781 t s d) = (term1176 A B _53781 t s d).
Proof. exact (eq_refl (term1185 A B _53781 t s d)). Qed.
Lemma lem4534735 {A B : Type'} (f : type549 A B) : f = f.
Proof. exact (eq_refl f). Qed.
Lemma lem4534736 {A B : Type'} (_53781 : type839 A B) (t : B -> Prop) (s : A -> Prop) (d : B) (f : type549 A B) : (term1186 A B _53781 t s d f) = (term1187 A B _53781 t s d f).
Proof. exact (MK_COMB (@lem4534734 A B _53781 t s d) (@lem4534735 A B f)). Qed.
Lemma lem4534737 {A B : Type'} (_53781 : type839 A B) (t : B -> Prop) (s : A -> Prop) (d : B) (f : type549 A B) : (term1187 A B _53781 t s d f) = (term1174 A B _53781 t s d f).
Proof. exact (eq_refl (term1187 A B _53781 t s d f)). Qed.
Lemma lem4534738 {A B : Type'} (_53781 : type839 A B) (t : B -> Prop) (s : A -> Prop) (d : B) (f : type549 A B) : (term1186 A B _53781 t s d f) = (term1174 A B _53781 t s d f).
Proof. exact (TRANS (@lem4534736 A B _53781 t s d f) (@lem4534737 A B _53781 t s d f)). Qed.
Lemma lem4534739 {A B : Type'} (_53781 : type839 A B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term1188 A B _53781 t s d) = (term1176 A B _53781 t s d).
Proof. exact (fun_ext (fun f : type549 A B => @lem4534738 A B _53781 t s d f)). Qed.
Lemma lem4534740 {A B : Type'} : (@ex ((A -> B) -> A -> B)) = (@ex ((A -> B) -> A -> B)).
Proof. exact (eq_refl (@ex ((A -> B) -> A -> B))). Qed.
Lemma lem4534741 {A B : Type'} (_53781 : type839 A B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term1189 A B _53781 t s d) = (term1177 A B _53781 t s d).
Proof. exact (MK_COMB (@lem4534740 A B) (@lem4534739 A B _53781 t s d)). Qed.
Lemma lem4534742 {A B : Type'} (_53781 : type839 A B) (t : B -> Prop) (s : A -> Prop) : (term1190 A B _53781 t s) = (term1178 A B _53781 t s).
Proof. exact (fun_ext (fun d : B => @lem4534741 A B _53781 t s d)). Qed.
Lemma lem4534743 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem4534744 {A B : Type'} (_53781 : type839 A B) (t : B -> Prop) (s : A -> Prop) : (term1182 A B _53781 t s) = (term1179 A B _53781 t s).
Proof. exact (MK_COMB (@lem4534743 B) (@lem4534742 A B _53781 t s)). Qed.
Lemma lem4534745 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4534746 {A B : Type'} (_53781 : type839 A B) (t : B -> Prop) (s : A -> Prop) : (term1191 A B _53781 t s) = (term1192 A B _53781 t s).
Proof. exact (MK_COMB (@lem4534745) (@lem4534744 A B _53781 t s)). Qed.
Lemma lem4534747 {A B : Type'} (_53781 : type839 A B) (t : B -> Prop) (s : A -> Prop) (d : B) : (term1185 A B _53781 t s d) = (term1176 A B _53781 t s d).
Proof. exact (eq_refl (term1185 A B _53781 t s d)). Qed.
Lemma lem4534748 {A B : Type'} (f : type1444 A B) (d : B) : (f d) = (f d).
Proof. exact (eq_refl (f d)). Qed.
Lemma lem4534749 {A B : Type'} (_53781 : type839 A B) (t : B -> Prop) (s : A -> Prop) (f : type1444 A B) (d : B) : (term1193 A B _53781 t s f d) = (term1194 A B _53781 t s f d).
Proof. exact (MK_COMB (@lem4534747 A B _53781 t s d) (@lem4534748 A B f d)). Qed.
Lemma lem4534750 {A B : Type'} (_53781 : type839 A B) (t : B -> Prop) (s : A -> Prop) (f : type1444 A B) (d : B) : (term1194 A B _53781 t s f d) = (term1195 A B _53781 t s f d).
Proof. exact (eq_refl (term1194 A B _53781 t s f d)). Qed.
Lemma lem4534751 {A B : Type'} (_53781 : type839 A B) (t : B -> Prop) (s : A -> Prop) (f : type1444 A B) (d : B) : (term1193 A B _53781 t s f d) = (term1195 A B _53781 t s f d).
Proof. exact (TRANS (@lem4534749 A B _53781 t s f d) (@lem4534750 A B _53781 t s f d)). Qed.
Lemma lem4534752 {A B : Type'} (_53781 : type839 A B) (t : B -> Prop) (s : A -> Prop) (f : type1444 A B) : (term1196 A B _53781 t s f) = (term1197 A B _53781 t s f).
Proof. exact (fun_ext (fun d : B => @lem4534751 A B _53781 t s f d)). Qed.
Lemma lem4534753 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem4534754 {A B : Type'} (_53781 : type839 A B) (t : B -> Prop) (s : A -> Prop) (f : type1444 A B) : (term1198 A B _53781 t s f) = (term1199 A B _53781 t s f).
Proof. exact (MK_COMB (@lem4534753 B) (@lem4534752 A B _53781 t s f)). Qed.
Lemma lem4534755 {A B : Type'} (_53781 : type839 A B) (t : B -> Prop) (s : A -> Prop) : (term1200 A B _53781 t s) = (term1201 A B _53781 t s).
Proof. exact (fun_ext (fun f : type1444 A B => @lem4534754 A B _53781 t s f)). Qed.
Lemma lem4534756 {A B : Type'} : (@ex (B -> (A -> B) -> A -> B)) = (@ex (B -> (A -> B) -> A -> B)).
Proof. exact (eq_refl (@ex (B -> (A -> B) -> A -> B))). Qed.
Lemma lem4534757 {A B : Type'} (_53781 : type839 A B) (t : B -> Prop) (s : A -> Prop) : (term1183 A B _53781 t s) = (term1202 A B _53781 t s).
Proof. exact (MK_COMB (@lem4534756 A B) (@lem4534755 A B _53781 t s)). Qed.
Lemma lem4534758 {A B : Type'} (_53781 : type839 A B) (t : B -> Prop) (s : A -> Prop) : ((term1182 A B _53781 t s) = (term1183 A B _53781 t s)) = ((term1179 A B _53781 t s) = (term1202 A B _53781 t s)).
Proof. exact (MK_COMB (@lem4534746 A B _53781 t s) (@lem4534757 A B _53781 t s)). Qed.
Lemma lem4534759 {A B : Type'} (_53781 : type839 A B) (t : B -> Prop) (s : A -> Prop) : (term1179 A B _53781 t s) = (term1202 A B _53781 t s).
Proof. exact (EQ_MP (@lem4534758 A B _53781 t s) (@lem4534733 A B _53781 t s)). Qed.
Lemma lem4534760 {A B : Type'} (_53781 : type839 A B) (t : B -> Prop) (s : A -> Prop) : (term1093 A B _53781 t s) = (term1202 A B _53781 t s).
Proof. exact (TRANS (@lem4534729 A B _53781 t s) (@lem4534759 A B _53781 t s)). Qed.
Lemma lem4534761 {A B : Type'} (_53781 : type839 A B) (t : B -> Prop) : (term1100 A B _53781 t) = (term1203 A B _53781 t).
Proof. exact (fun_ext (fun s : A -> Prop => @lem4534760 A B _53781 t s)). Qed.
Lemma lem4534762 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem4534763 {A B : Type'} (_53781 : type839 A B) (t : B -> Prop) : (term1115 A B _53781 t) = (term1204 A B _53781 t).
Proof. exact (MK_COMB (@lem4534762 A) (@lem4534761 A B _53781 t)). Qed.
Lemma lem4534765 {A B : Type'} (P : type1413 A B) : (term907 A B P) = (term908 A B P).
Proof. exact (EQ_MP (@lem18899 A B P) (@lem18898 A B P)). Qed.
Lemma lem4534766 {A B : Type'} (P : type647 A B) : (term1205 A B P) = (term1206 A B P).
Proof. exact (@lem4534765 (A -> Prop) (type1444 A B) P). Qed.
Lemma lem4534767 {A B : Type'} (_53781 : type839 A B) (t : B -> Prop) : (term1207 A B _53781 t) = (term1208 A B _53781 t).
Proof. exact (@lem4534766 A B (term1209 A B _53781 t)). Qed.
Lemma lem4534768 {A B : Type'} (_53781 : type839 A B) (t : B -> Prop) (s : A -> Prop) : (term1210 A B _53781 t s) = (term1201 A B _53781 t s).
Proof. exact (eq_refl (term1210 A B _53781 t s)). Qed.
Lemma lem4534769 {A B : Type'} (f : type1444 A B) : f = f.
Proof. exact (eq_refl f). Qed.
Lemma lem4534770 {A B : Type'} (_53781 : type839 A B) (t : B -> Prop) (s : A -> Prop) (f : type1444 A B) : (term1211 A B _53781 t s f) = (term1212 A B _53781 t s f).
Proof. exact (MK_COMB (@lem4534768 A B _53781 t s) (@lem4534769 A B f)). Qed.
Lemma lem4534771 {A B : Type'} (_53781 : type839 A B) (t : B -> Prop) (s : A -> Prop) (f : type1444 A B) : (term1212 A B _53781 t s f) = (term1199 A B _53781 t s f).
Proof. exact (eq_refl (term1212 A B _53781 t s f)). Qed.
Lemma lem4534772 {A B : Type'} (_53781 : type839 A B) (t : B -> Prop) (s : A -> Prop) (f : type1444 A B) : (term1211 A B _53781 t s f) = (term1199 A B _53781 t s f).
Proof. exact (TRANS (@lem4534770 A B _53781 t s f) (@lem4534771 A B _53781 t s f)). Qed.
Lemma lem4534773 {A B : Type'} (_53781 : type839 A B) (t : B -> Prop) (s : A -> Prop) : (term1213 A B _53781 t s) = (term1201 A B _53781 t s).
Proof. exact (fun_ext (fun f : type1444 A B => @lem4534772 A B _53781 t s f)). Qed.
Lemma lem4534774 {A B : Type'} : (@ex (B -> (A -> B) -> A -> B)) = (@ex (B -> (A -> B) -> A -> B)).
Proof. exact (eq_refl (@ex (B -> (A -> B) -> A -> B))). Qed.
Lemma lem4534775 {A B : Type'} (_53781 : type839 A B) (t : B -> Prop) (s : A -> Prop) : (term1214 A B _53781 t s) = (term1202 A B _53781 t s).
Proof. exact (MK_COMB (@lem4534774 A B) (@lem4534773 A B _53781 t s)). Qed.
Lemma lem4534776 {A B : Type'} (_53781 : type839 A B) (t : B -> Prop) : (term1215 A B _53781 t) = (term1203 A B _53781 t).
Proof. exact (fun_ext (fun s : A -> Prop => @lem4534775 A B _53781 t s)). Qed.
Lemma lem4534777 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem4534778 {A B : Type'} (_53781 : type839 A B) (t : B -> Prop) : (term1207 A B _53781 t) = (term1204 A B _53781 t).
Proof. exact (MK_COMB (@lem4534777 A) (@lem4534776 A B _53781 t)). Qed.
Lemma lem4534779 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4534780 {A B : Type'} (_53781 : type839 A B) (t : B -> Prop) : (term1216 A B _53781 t) = (term1217 A B _53781 t).
Proof. exact (MK_COMB (@lem4534779) (@lem4534778 A B _53781 t)). Qed.
Lemma lem4534781 {A B : Type'} (_53781 : type839 A B) (t : B -> Prop) (s : A -> Prop) : (term1210 A B _53781 t s) = (term1201 A B _53781 t s).
Proof. exact (eq_refl (term1210 A B _53781 t s)). Qed.
Lemma lem4534782 {A B : Type'} (f : type673 A B) (s : A -> Prop) : (f s) = (f s).
Proof. exact (eq_refl (f s)). Qed.
Lemma lem4534783 {A B : Type'} (_53781 : type839 A B) (t : B -> Prop) (f : type673 A B) (s : A -> Prop) : (term1218 A B _53781 t f s) = (term1219 A B _53781 t f s).
Proof. exact (MK_COMB (@lem4534781 A B _53781 t s) (@lem4534782 A B f s)). Qed.
Lemma lem4534784 {A B : Type'} (_53781 : type839 A B) (t : B -> Prop) (f : type673 A B) (s : A -> Prop) : (term1219 A B _53781 t f s) = (term1220 A B _53781 t f s).
Proof. exact (eq_refl (term1219 A B _53781 t f s)). Qed.
Lemma lem4534785 {A B : Type'} (_53781 : type839 A B) (t : B -> Prop) (f : type673 A B) (s : A -> Prop) : (term1218 A B _53781 t f s) = (term1220 A B _53781 t f s).
Proof. exact (TRANS (@lem4534783 A B _53781 t f s) (@lem4534784 A B _53781 t f s)). Qed.
Lemma lem4534786 {A B : Type'} (_53781 : type839 A B) (t : B -> Prop) (f : type673 A B) : (term1221 A B _53781 t f) = (term1222 A B _53781 t f).
Proof. exact (fun_ext (fun s : A -> Prop => @lem4534785 A B _53781 t f s)). Qed.
Lemma lem4534787 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem4534788 {A B : Type'} (_53781 : type839 A B) (t : B -> Prop) (f : type673 A B) : (term1223 A B _53781 t f) = (term1224 A B _53781 t f).
Proof. exact (MK_COMB (@lem4534787 A) (@lem4534786 A B _53781 t f)). Qed.
Lemma lem4534789 {A B : Type'} (_53781 : type839 A B) (t : B -> Prop) : (term1225 A B _53781 t) = (term1226 A B _53781 t).
Proof. exact (fun_ext (fun f : type673 A B => @lem4534788 A B _53781 t f)). Qed.
Lemma lem4534790 {A B : Type'} : (@ex ((A -> Prop) -> B -> (A -> B) -> A -> B)) = (@ex ((A -> Prop) -> B -> (A -> B) -> A -> B)).
Proof. exact (eq_refl (@ex ((A -> Prop) -> B -> (A -> B) -> A -> B))). Qed.
Lemma lem4534791 {A B : Type'} (_53781 : type839 A B) (t : B -> Prop) : (term1208 A B _53781 t) = (term1227 A B _53781 t).
Proof. exact (MK_COMB (@lem4534790 A B) (@lem4534789 A B _53781 t)). Qed.
Lemma lem4534792 {A B : Type'} (_53781 : type839 A B) (t : B -> Prop) : ((term1207 A B _53781 t) = (term1208 A B _53781 t)) = ((term1204 A B _53781 t) = (term1227 A B _53781 t)).
Proof. exact (MK_COMB (@lem4534780 A B _53781 t) (@lem4534791 A B _53781 t)). Qed.
Lemma lem4534793 {A B : Type'} (_53781 : type839 A B) (t : B -> Prop) : (term1204 A B _53781 t) = (term1227 A B _53781 t).
Proof. exact (EQ_MP (@lem4534792 A B _53781 t) (@lem4534767 A B _53781 t)). Qed.
Lemma lem4534794 {A B : Type'} (_53781 : type839 A B) (t : B -> Prop) : (term1115 A B _53781 t) = (term1227 A B _53781 t).
Proof. exact (TRANS (@lem4534763 A B _53781 t) (@lem4534793 A B _53781 t)). Qed.
Lemma lem4534795 {A B : Type'} (_53781 : type839 A B) : (term1122 A B _53781) = (term1228 A B _53781).
Proof. exact (fun_ext (fun t : B -> Prop => @lem4534794 A B _53781 t)). Qed.
Lemma lem4534796 {B : Type'} : (@all (B -> Prop)) = (@all (B -> Prop)).
Proof. exact (eq_refl (@all (B -> Prop))). Qed.
Lemma lem4534797 {A B : Type'} (_53781 : type839 A B) : (term1137 A B _53781) = (term1229 A B _53781).
Proof. exact (MK_COMB (@lem4534796 B) (@lem4534795 A B _53781)). Qed.
Lemma lem4534799 {A B : Type'} (P : type1413 A B) : (term907 A B P) = (term908 A B P).
Proof. exact (EQ_MP (@lem18899 A B P) (@lem18898 A B P)). Qed.
Lemma lem4534800 {A B : Type'} (P : type820 A B) : (term1230 A B P) = (term1231 A B P).
Proof. exact (@lem4534799 (B -> Prop) (type673 A B) P). Qed.
Lemma lem4534801 {A B : Type'} (_53781 : type839 A B) : (term1232 A B _53781) = (term1233 A B _53781).
Proof. exact (@lem4534800 A B (term1234 A B _53781)). Qed.
Lemma lem4534802 {A B : Type'} (_53781 : type839 A B) (t : B -> Prop) : (term1235 A B _53781 t) = (term1226 A B _53781 t).
Proof. exact (eq_refl (term1235 A B _53781 t)). Qed.
Lemma lem4534803 {A B : Type'} (f : type673 A B) : f = f.
Proof. exact (eq_refl f). Qed.
Lemma lem4534804 {A B : Type'} (_53781 : type839 A B) (t : B -> Prop) (f : type673 A B) : (term1236 A B _53781 t f) = (term1237 A B _53781 t f).
Proof. exact (MK_COMB (@lem4534802 A B _53781 t) (@lem4534803 A B f)). Qed.
Lemma lem4534805 {A B : Type'} (_53781 : type839 A B) (t : B -> Prop) (f : type673 A B) : (term1237 A B _53781 t f) = (term1224 A B _53781 t f).
Proof. exact (eq_refl (term1237 A B _53781 t f)). Qed.
Lemma lem4534806 {A B : Type'} (_53781 : type839 A B) (t : B -> Prop) (f : type673 A B) : (term1236 A B _53781 t f) = (term1224 A B _53781 t f).
Proof. exact (TRANS (@lem4534804 A B _53781 t f) (@lem4534805 A B _53781 t f)). Qed.
Lemma lem4534807 {A B : Type'} (_53781 : type839 A B) (t : B -> Prop) : (term1238 A B _53781 t) = (term1226 A B _53781 t).
Proof. exact (fun_ext (fun f : type673 A B => @lem4534806 A B _53781 t f)). Qed.
Lemma lem4534808 {A B : Type'} : (@ex ((A -> Prop) -> B -> (A -> B) -> A -> B)) = (@ex ((A -> Prop) -> B -> (A -> B) -> A -> B)).
Proof. exact (eq_refl (@ex ((A -> Prop) -> B -> (A -> B) -> A -> B))). Qed.
Lemma lem4534809 {A B : Type'} (_53781 : type839 A B) (t : B -> Prop) : (term1239 A B _53781 t) = (term1227 A B _53781 t).
Proof. exact (MK_COMB (@lem4534808 A B) (@lem4534807 A B _53781 t)). Qed.
Lemma lem4534810 {A B : Type'} (_53781 : type839 A B) : (term1240 A B _53781) = (term1228 A B _53781).
Proof. exact (fun_ext (fun t : B -> Prop => @lem4534809 A B _53781 t)). Qed.
Lemma lem4534811 {B : Type'} : (@all (B -> Prop)) = (@all (B -> Prop)).
Proof. exact (eq_refl (@all (B -> Prop))). Qed.
Lemma lem4534812 {A B : Type'} (_53781 : type839 A B) : (term1232 A B _53781) = (term1229 A B _53781).
Proof. exact (MK_COMB (@lem4534811 B) (@lem4534810 A B _53781)). Qed.
Lemma lem4534813 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4534814 {A B : Type'} (_53781 : type839 A B) : (term1241 A B _53781) = (term1242 A B _53781).
Proof. exact (MK_COMB (@lem4534813) (@lem4534812 A B _53781)). Qed.
Lemma lem4534815 {A B : Type'} (_53781 : type839 A B) (t : B -> Prop) : (term1235 A B _53781 t) = (term1226 A B _53781 t).
Proof. exact (eq_refl (term1235 A B _53781 t)). Qed.
Lemma lem4534816 {A B : Type'} (f : type838 A B) (t : B -> Prop) : (f t) = (f t).
Proof. exact (eq_refl (f t)). Qed.
Lemma lem4534817 {A B : Type'} (_53781 : type839 A B) (f : type838 A B) (t : B -> Prop) : (term1243 A B _53781 f t) = (term1244 A B _53781 f t).
Proof. exact (MK_COMB (@lem4534815 A B _53781 t) (@lem4534816 A B f t)). Qed.
Lemma lem4534818 {A B : Type'} (_53781 : type839 A B) (f : type838 A B) (t : B -> Prop) : (term1244 A B _53781 f t) = (term1245 A B _53781 f t).
Proof. exact (eq_refl (term1244 A B _53781 f t)). Qed.
Lemma lem4534819 {A B : Type'} (_53781 : type839 A B) (f : type838 A B) (t : B -> Prop) : (term1243 A B _53781 f t) = (term1245 A B _53781 f t).
Proof. exact (TRANS (@lem4534817 A B _53781 f t) (@lem4534818 A B _53781 f t)). Qed.
Lemma lem4534820 {A B : Type'} (_53781 : type839 A B) (f : type838 A B) : (term1246 A B _53781 f) = (term1247 A B _53781 f).
Proof. exact (fun_ext (fun t : B -> Prop => @lem4534819 A B _53781 f t)). Qed.
Lemma lem4534821 {B : Type'} : (@all (B -> Prop)) = (@all (B -> Prop)).
Proof. exact (eq_refl (@all (B -> Prop))). Qed.
Lemma lem4534822 {A B : Type'} (_53781 : type839 A B) (f : type838 A B) : (term1248 A B _53781 f) = (term1249 A B _53781 f).
Proof. exact (MK_COMB (@lem4534821 B) (@lem4534820 A B _53781 f)). Qed.
Lemma lem4534823 {A B : Type'} (_53781 : type839 A B) : (term1250 A B _53781) = (term1251 A B _53781).
Proof. exact (fun_ext (fun f : type838 A B => @lem4534822 A B _53781 f)). Qed.
Lemma lem4534824 {A B : Type'} : (@ex ((B -> Prop) -> (A -> Prop) -> B -> (A -> B) -> A -> B)) = (@ex ((B -> Prop) -> (A -> Prop) -> B -> (A -> B) -> A -> B)).
Proof. exact (eq_refl (@ex ((B -> Prop) -> (A -> Prop) -> B -> (A -> B) -> A -> B))). Qed.
Lemma lem4534825 {A B : Type'} (_53781 : type839 A B) : (term1233 A B _53781) = (term1252 A B _53781).
Proof. exact (MK_COMB (@lem4534824 A B) (@lem4534823 A B _53781)). Qed.
Lemma lem4534826 {A B : Type'} (_53781 : type839 A B) : ((term1232 A B _53781) = (term1233 A B _53781)) = ((term1229 A B _53781) = (term1252 A B _53781)).
Proof. exact (MK_COMB (@lem4534814 A B _53781) (@lem4534825 A B _53781)). Qed.
Lemma lem4534827 {A B : Type'} (_53781 : type839 A B) : (term1229 A B _53781) = (term1252 A B _53781).
Proof. exact (EQ_MP (@lem4534826 A B _53781) (@lem4534801 A B _53781)). Qed.
Lemma lem4534828 {A B : Type'} (_53781 : type839 A B) : (term1137 A B _53781) = (term1252 A B _53781).
Proof. exact (TRANS (@lem4534797 A B _53781) (@lem4534827 A B _53781)). Qed.
Lemma lem4534829 {A B : Type'} (_53781 : type839 A B) : (term1134 A B _53781) = (term1134 A B _53781).
Proof. exact (eq_refl (term1134 A B _53781)). Qed.
Lemma lem4534830 {A B : Type'} (_53781 : type839 A B) : (term1138 A B _53781) = (term1253 A B _53781).
Proof. exact (MK_COMB (@lem4534829 A B _53781) (@lem4534828 A B _53781)). Qed.
Lemma lem4534832 {A : Type'} (P : Prop) (Q : A -> Prop) : (term1008 A P Q) = (term1009 A P Q).
Proof. exact (EQ_MP (@lem18929 A P Q) (@lem18928 A P Q)). Qed.
Lemma lem4534833 {A B : Type'} (P : Prop) (Q : type213 A B) : (term1254 A B P Q) = (term1255 A B P Q).
Proof. exact (@lem4534832 (type838 A B) P Q). Qed.
Lemma lem4534834 {A B : Type'} (_53781 : type839 A B) : (term1256 A B _53781) = (term1257 A B _53781).
Proof. exact (@lem4534833 A B (term1132 A B _53781) (term1251 A B _53781)). Qed.
Lemma lem4534835 {A B : Type'} (_53781 : type839 A B) (f : type838 A B) : (term1258 A B _53781 f) = (term1249 A B _53781 f).
Proof. exact (eq_refl (term1258 A B _53781 f)). Qed.
Lemma lem4534836 {A B : Type'} (_53781 : type839 A B) : (term1259 A B _53781) = (term1251 A B _53781).
Proof. exact (fun_ext (fun f : type838 A B => @lem4534835 A B _53781 f)). Qed.
Lemma lem4534837 {A B : Type'} : (@ex ((B -> Prop) -> (A -> Prop) -> B -> (A -> B) -> A -> B)) = (@ex ((B -> Prop) -> (A -> Prop) -> B -> (A -> B) -> A -> B)).
Proof. exact (eq_refl (@ex ((B -> Prop) -> (A -> Prop) -> B -> (A -> B) -> A -> B))). Qed.
Lemma lem4534838 {A B : Type'} (_53781 : type839 A B) : (term1260 A B _53781) = (term1252 A B _53781).
Proof. exact (MK_COMB (@lem4534837 A B) (@lem4534836 A B _53781)). Qed.
Lemma lem4534839 {A B : Type'} (_53781 : type839 A B) : (term1134 A B _53781) = (term1134 A B _53781).
Proof. exact (eq_refl (term1134 A B _53781)). Qed.
Lemma lem4534840 {A B : Type'} (_53781 : type839 A B) : (term1256 A B _53781) = (term1253 A B _53781).
Proof. exact (MK_COMB (@lem4534839 A B _53781) (@lem4534838 A B _53781)). Qed.
Lemma lem4534841 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4534842 {A B : Type'} (_53781 : type839 A B) : (term1261 A B _53781) = (term1262 A B _53781).
Proof. exact (MK_COMB (@lem4534841) (@lem4534840 A B _53781)). Qed.
Lemma lem4534843 {A B : Type'} (_53781 : type839 A B) (f : type838 A B) : (term1258 A B _53781 f) = (term1249 A B _53781 f).
Proof. exact (eq_refl (term1258 A B _53781 f)). Qed.
Lemma lem4534844 {A B : Type'} (_53781 : type839 A B) : (term1134 A B _53781) = (term1134 A B _53781).
Proof. exact (eq_refl (term1134 A B _53781)). Qed.
Lemma lem4534845 {A B : Type'} (_53781 : type839 A B) (f : type838 A B) : (term1263 A B _53781 f) = (term1264 A B _53781 f).
Proof. exact (MK_COMB (@lem4534844 A B _53781) (@lem4534843 A B _53781 f)). Qed.
Lemma lem4534846 {A B : Type'} (_53781 : type839 A B) : (term1265 A B _53781) = (term1266 A B _53781).
Proof. exact (fun_ext (fun f : type838 A B => @lem4534845 A B _53781 f)). Qed.
Lemma lem4534847 {A B : Type'} : (@ex ((B -> Prop) -> (A -> Prop) -> B -> (A -> B) -> A -> B)) = (@ex ((B -> Prop) -> (A -> Prop) -> B -> (A -> B) -> A -> B)).
Proof. exact (eq_refl (@ex ((B -> Prop) -> (A -> Prop) -> B -> (A -> B) -> A -> B))). Qed.
Lemma lem4534848 {A B : Type'} (_53781 : type839 A B) : (term1257 A B _53781) = (term1267 A B _53781).
Proof. exact (MK_COMB (@lem4534847 A B) (@lem4534846 A B _53781)). Qed.
Lemma lem4534849 {A B : Type'} (_53781 : type839 A B) : ((term1256 A B _53781) = (term1257 A B _53781)) = ((term1253 A B _53781) = (term1267 A B _53781)).
Proof. exact (MK_COMB (@lem4534842 A B _53781) (@lem4534848 A B _53781)). Qed.
Lemma lem4534850 {A B : Type'} (_53781 : type839 A B) : (term1253 A B _53781) = (term1267 A B _53781).
Proof. exact (EQ_MP (@lem4534849 A B _53781) (@lem4534834 A B _53781)). Qed.
Lemma lem4534851 {A B : Type'} (_53781 : type839 A B) : (term1138 A B _53781) = (term1267 A B _53781).
Proof. exact (TRANS (@lem4534830 A B _53781) (@lem4534850 A B _53781)). Qed.
Lemma lem4534852 {A B : Type'} (_53781 : type839 A B) : (term1050 A B _53781) = (term1267 A B _53781).
Proof. exact (TRANS (@lem4534672 A B _53781) (@lem4534851 A B _53781)). Qed.
Lemma lem4534853 {A B : Type'} (_53781 : type839 A B) : (term514 A B _53781) = (term1267 A B _53781).
Proof. exact (TRANS (@lem4534012 A B _53781) (@lem4534852 A B _53781)). Qed.
Lemma lem4534854 {A B : Type'} (_53781 : type839 A B) (h1 : term514 A B _53781) : term1267 A B _53781.
Proof. exact (EQ_MP (@lem4534853 A B _53781) (@lem4533064 A B _53781 h1)). Qed.
Lemma lem4534858 {_107642 B : Type'} (GEN_PVAR_148 : _107642 -> B) (t : B -> Prop) (s : _107642 -> Prop) (d : B) (f : _107642 -> B) : (term122 _107642 B GEN_PVAR_148 t s d f) = (term122 _107642 B GEN_PVAR_148 t s d f).
Proof. exact (eq_refl (term122 _107642 B GEN_PVAR_148 t s d f)). Qed.
Lemma lem4534859 {_107642 B : Type'} (P : type572 _107642 B) : (term1024 _107642 B P) = (term1025 _107642 B P).
Proof. exact (@lem18394 (_107642 -> B) P). Qed.
Lemma lem4534860 {_107642 B : Type'} (GEN_PVAR_148 : _107642 -> B) (t : B -> Prop) (s : _107642 -> Prop) (d : B) : (term1026 _107642 B GEN_PVAR_148 t s d) = (term1027 _107642 B GEN_PVAR_148 t s d).
Proof. exact (@lem4534859 _107642 B (term123 _107642 B GEN_PVAR_148 t s d)). Qed.
Lemma lem4534861 {_107642 B : Type'} (GEN_PVAR_148 : _107642 -> B) (t : B -> Prop) (s : _107642 -> Prop) (d : B) (f : _107642 -> B) : (term1028 _107642 B GEN_PVAR_148 t s d f) = (term122 _107642 B GEN_PVAR_148 t s d f).
Proof. exact (eq_refl (term1028 _107642 B GEN_PVAR_148 t s d f)). Qed.
Lemma lem4534862 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem4534864 {_107642 B : Type'} (GEN_PVAR_148 : _107642 -> B) (t : B -> Prop) (s : _107642 -> Prop) (d : B) (f : _107642 -> B) : (term1029 _107642 B GEN_PVAR_148 t s d f) = (term1030 _107642 B GEN_PVAR_148 t s d f).
Proof. exact (MK_COMB (@lem4534862) (@lem4534861 _107642 B GEN_PVAR_148 t s d f)). Qed.
Lemma lem4534865 {_107642 B : Type'} (GEN_PVAR_148 : _107642 -> B) (t : B -> Prop) (s : _107642 -> Prop) (d : B) : (term1031 _107642 B GEN_PVAR_148 t s d) = (term1032 _107642 B GEN_PVAR_148 t s d).
Proof. exact (fun_ext (fun f : _107642 -> B => @lem4534864 _107642 B GEN_PVAR_148 t s d f)). Qed.
Lemma lem4534866 {_107642 B : Type'} : (@all (_107642 -> B)) = (@all (_107642 -> B)).
Proof. exact (eq_refl (@all (_107642 -> B))). Qed.
Lemma lem4534867 {_107642 B : Type'} (GEN_PVAR_148 : _107642 -> B) (t : B -> Prop) (s : _107642 -> Prop) (d : B) : (term1027 _107642 B GEN_PVAR_148 t s d) = (term1033 _107642 B GEN_PVAR_148 t s d).
Proof. exact (MK_COMB (@lem4534866 _107642 B) (@lem4534865 _107642 B GEN_PVAR_148 t s d)). Qed.
Lemma lem4534868 {_107642 B : Type'} (GEN_PVAR_148 : _107642 -> B) (t : B -> Prop) (s : _107642 -> Prop) (d : B) : (term1026 _107642 B GEN_PVAR_148 t s d) = (term1033 _107642 B GEN_PVAR_148 t s d).
Proof. exact (TRANS (@lem4534860 _107642 B GEN_PVAR_148 t s d) (@lem4534867 _107642 B GEN_PVAR_148 t s d)). Qed.
Lemma lem4534869 {_107642 B : Type'} (GEN_PVAR_148 : _107642 -> B) (t : B -> Prop) (s : _107642 -> Prop) (d : B) : (term123 _107642 B GEN_PVAR_148 t s d) = (term123 _107642 B GEN_PVAR_148 t s d).
Proof. exact (fun_ext (fun f : _107642 -> B => @lem4534858 _107642 B GEN_PVAR_148 t s d f)). Qed.
Lemma lem4534870 {_107642 B : Type'} : (@ex (_107642 -> B)) = (@ex (_107642 -> B)).
Proof. exact (eq_refl (@ex (_107642 -> B))). Qed.
Lemma lem4534871 {_107642 B : Type'} (GEN_PVAR_148 : _107642 -> B) (t : B -> Prop) (s : _107642 -> Prop) (d : B) : (term124 _107642 B GEN_PVAR_148 t s d) = (term124 _107642 B GEN_PVAR_148 t s d).
Proof. exact (MK_COMB (@lem4534870 _107642 B) (@lem4534869 _107642 B GEN_PVAR_148 t s d)). Qed.
Lemma lem4534873 {_107642 B : Type'} (_53780 : type839 _107642 B) (t : B -> Prop) (s : _107642 -> Prop) (d : B) (GEN_PVAR_148 : _107642 -> B) : (term1034 _107642 B _53780 t s d GEN_PVAR_148) = (term1034 _107642 B _53780 t s d GEN_PVAR_148).
Proof. exact (eq_refl (term1034 _107642 B _53780 t s d GEN_PVAR_148)). Qed.
Lemma lem4534874 {_107642 B : Type'} (_53780 : type839 _107642 B) (GEN_PVAR_148 : _107642 -> B) (t : B -> Prop) (s : _107642 -> Prop) (d : B) : (term1035 _107642 B _53780 GEN_PVAR_148 t s d) = (term1035 _107642 B _53780 GEN_PVAR_148 t s d).
Proof. exact (MK_COMB (@lem4534873 _107642 B _53780 t s d GEN_PVAR_148) (@lem4534871 _107642 B GEN_PVAR_148 t s d)). Qed.
Lemma lem4534876 {_107642 B : Type'} (_53780 : type839 _107642 B) (t : B -> Prop) (s : _107642 -> Prop) (d : B) (GEN_PVAR_148 : _107642 -> B) : (term1036 _107642 B _53780 t s d GEN_PVAR_148) = (term1036 _107642 B _53780 t s d GEN_PVAR_148).
Proof. exact (eq_refl (term1036 _107642 B _53780 t s d GEN_PVAR_148)). Qed.
Lemma lem4534877 {_107642 B : Type'} (_53780 : type839 _107642 B) (GEN_PVAR_148 : _107642 -> B) (t : B -> Prop) (s : _107642 -> Prop) (d : B) : (term1037 _107642 B _53780 GEN_PVAR_148 t s d) = (term1038 _107642 B _53780 GEN_PVAR_148 t s d).
Proof. exact (MK_COMB (@lem4534876 _107642 B _53780 t s d GEN_PVAR_148) (@lem4534868 _107642 B GEN_PVAR_148 t s d)). Qed.
Lemma lem4534878 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4534879 {_107642 B : Type'} (_53780 : type839 _107642 B) (GEN_PVAR_148 : _107642 -> B) (t : B -> Prop) (s : _107642 -> Prop) (d : B) : (term1039 _107642 B _53780 GEN_PVAR_148 t s d) = (term1040 _107642 B _53780 GEN_PVAR_148 t s d).
Proof. exact (MK_COMB (@lem4534878) (@lem4534877 _107642 B _53780 GEN_PVAR_148 t s d)). Qed.
Lemma lem4534880 {_107642 B : Type'} (_53780 : type839 _107642 B) (GEN_PVAR_148 : _107642 -> B) (t : B -> Prop) (s : _107642 -> Prop) (d : B) : (term1041 _107642 B _53780 GEN_PVAR_148 t s d) = (term1042 _107642 B _53780 GEN_PVAR_148 t s d).
Proof. exact (MK_COMB (@lem4534879 _107642 B _53780 GEN_PVAR_148 t s d) (@lem4534874 _107642 B _53780 GEN_PVAR_148 t s d)). Qed.
Lemma lem4534881 {_107642 B : Type'} (_53780 : type839 _107642 B) (GEN_PVAR_148 : _107642 -> B) (t : B -> Prop) (s : _107642 -> Prop) (d : B) : ((_53780 t s d GEN_PVAR_148) = (term124 _107642 B GEN_PVAR_148 t s d)) = (term1041 _107642 B _53780 GEN_PVAR_148 t s d).
Proof. exact (@lem17784 (_53780 t s d GEN_PVAR_148) (term124 _107642 B GEN_PVAR_148 t s d)). Qed.
Lemma lem4534882 {_107642 B : Type'} (_53780 : type839 _107642 B) (GEN_PVAR_148 : _107642 -> B) (t : B -> Prop) (s : _107642 -> Prop) (d : B) : ((_53780 t s d GEN_PVAR_148) = (term124 _107642 B GEN_PVAR_148 t s d)) = (term1042 _107642 B _53780 GEN_PVAR_148 t s d).
Proof. exact (TRANS (@lem4534881 _107642 B _53780 GEN_PVAR_148 t s d) (@lem4534880 _107642 B _53780 GEN_PVAR_148 t s d)). Qed.
Lemma lem4534883 {_107642 B : Type'} (_53780 : type839 _107642 B) (t : B -> Prop) (s : _107642 -> Prop) (d : B) : (term507 _107642 B _53780 t s d) = (term1043 _107642 B _53780 t s d).
Proof. exact (fun_ext (fun GEN_PVAR_148 : _107642 -> B => @lem4534882 _107642 B _53780 GEN_PVAR_148 t s d)). Qed.
Lemma lem4534884 {_107642 B : Type'} : (@all (_107642 -> B)) = (@all (_107642 -> B)).
Proof. exact (eq_refl (@all (_107642 -> B))). Qed.
Lemma lem4534885 {_107642 B : Type'} (_53780 : type839 _107642 B) (t : B -> Prop) (s : _107642 -> Prop) (d : B) : (term508 _107642 B _53780 t s d) = (term1044 _107642 B _53780 t s d).
Proof. exact (MK_COMB (@lem4534884 _107642 B) (@lem4534883 _107642 B _53780 t s d)). Qed.
Lemma lem4534886 {_107642 B : Type'} (_53780 : type839 _107642 B) (t : B -> Prop) (s : _107642 -> Prop) : (term509 _107642 B _53780 t s) = (term1045 _107642 B _53780 t s).
Proof. exact (fun_ext (fun d : B => @lem4534885 _107642 B _53780 t s d)). Qed.
Lemma lem4534887 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem4534888 {_107642 B : Type'} (_53780 : type839 _107642 B) (t : B -> Prop) (s : _107642 -> Prop) : (term510 _107642 B _53780 t s) = (term1046 _107642 B _53780 t s).
Proof. exact (MK_COMB (@lem4534887 B) (@lem4534886 _107642 B _53780 t s)). Qed.
Lemma lem4534889 {_107642 B : Type'} (_53780 : type839 _107642 B) (t : B -> Prop) : (term511 _107642 B _53780 t) = (term1047 _107642 B _53780 t).
Proof. exact (fun_ext (fun s : _107642 -> Prop => @lem4534888 _107642 B _53780 t s)). Qed.
Lemma lem4534890 {_107642 : Type'} : (@all (_107642 -> Prop)) = (@all (_107642 -> Prop)).
Proof. exact (eq_refl (@all (_107642 -> Prop))). Qed.
Lemma lem4534891 {_107642 B : Type'} (_53780 : type839 _107642 B) (t : B -> Prop) : (term512 _107642 B _53780 t) = (term1048 _107642 B _53780 t).
Proof. exact (MK_COMB (@lem4534890 _107642) (@lem4534889 _107642 B _53780 t)). Qed.
Lemma lem4534892 {_107642 B : Type'} (_53780 : type839 _107642 B) : (term513 _107642 B _53780) = (term1049 _107642 B _53780).
Proof. exact (fun_ext (fun t : B -> Prop => @lem4534891 _107642 B _53780 t)). Qed.
Lemma lem4534893 {B : Type'} : (@all (B -> Prop)) = (@all (B -> Prop)).
Proof. exact (eq_refl (@all (B -> Prop))). Qed.
Lemma lem4534894 {_107642 B : Type'} (_53780 : type839 _107642 B) : (term514 _107642 B _53780) = (term1050 _107642 B _53780).
Proof. exact (MK_COMB (@lem4534893 B) (@lem4534892 _107642 B _53780)). Qed.
Lemma lem4534908 {A : Type'} (P : A -> Prop) (Q : A -> Prop) : (term793 A P Q) = (term794 A P Q).
Proof. exact (EQ_MP (@lem18953 A P Q) (@lem18952 A P Q)). Qed.
Lemma lem4534909 {_107642 B : Type'} (P : type572 _107642 B) (Q : type572 _107642 B) : (term1051 _107642 B P Q) = (term1052 _107642 B P Q).
Proof. exact (@lem4534908 (_107642 -> B) P Q). Qed.
Lemma lem4534910 {_107642 B : Type'} (_53780 : type839 _107642 B) (t : B -> Prop) (s : _107642 -> Prop) (d : B) : (term1053 _107642 B _53780 t s d) = (term1054 _107642 B _53780 t s d).
Proof. exact (@lem4534909 _107642 B (term1055 _107642 B _53780 t s d) (term1056 _107642 B _53780 t s d)). Qed.
Lemma lem4534911 {_107642 B : Type'} (_53780 : type839 _107642 B) (GEN_PVAR_148 : _107642 -> B) (t : B -> Prop) (s : _107642 -> Prop) (d : B) : (term1057 _107642 B _53780 t s d GEN_PVAR_148) = (term1038 _107642 B _53780 GEN_PVAR_148 t s d).
Proof. exact (eq_refl (term1057 _107642 B _53780 t s d GEN_PVAR_148)). Qed.
Lemma lem4534912 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4534913 {_107642 B : Type'} (_53780 : type839 _107642 B) (GEN_PVAR_148 : _107642 -> B) (t : B -> Prop) (s : _107642 -> Prop) (d : B) : (term1058 _107642 B _53780 t s d GEN_PVAR_148) = (term1040 _107642 B _53780 GEN_PVAR_148 t s d).
Proof. exact (MK_COMB (@lem4534912) (@lem4534911 _107642 B _53780 GEN_PVAR_148 t s d)). Qed.
Lemma lem4534914 {_107642 B : Type'} (_53780 : type839 _107642 B) (GEN_PVAR_148 : _107642 -> B) (t : B -> Prop) (s : _107642 -> Prop) (d : B) : (term1059 _107642 B _53780 t s d GEN_PVAR_148) = (term1035 _107642 B _53780 GEN_PVAR_148 t s d).
Proof. exact (eq_refl (term1059 _107642 B _53780 t s d GEN_PVAR_148)). Qed.
Lemma lem4534915 {_107642 B : Type'} (_53780 : type839 _107642 B) (GEN_PVAR_148 : _107642 -> B) (t : B -> Prop) (s : _107642 -> Prop) (d : B) : (term1060 _107642 B _53780 t s d GEN_PVAR_148) = (term1042 _107642 B _53780 GEN_PVAR_148 t s d).
Proof. exact (MK_COMB (@lem4534913 _107642 B _53780 GEN_PVAR_148 t s d) (@lem4534914 _107642 B _53780 GEN_PVAR_148 t s d)). Qed.
Lemma lem4534916 {_107642 B : Type'} (_53780 : type839 _107642 B) (t : B -> Prop) (s : _107642 -> Prop) (d : B) : (term1061 _107642 B _53780 t s d) = (term1043 _107642 B _53780 t s d).
Proof. exact (fun_ext (fun GEN_PVAR_148 : _107642 -> B => @lem4534915 _107642 B _53780 GEN_PVAR_148 t s d)). Qed.
Lemma lem4534917 {_107642 B : Type'} : (@all (_107642 -> B)) = (@all (_107642 -> B)).
Proof. exact (eq_refl (@all (_107642 -> B))). Qed.
Lemma lem4534918 {_107642 B : Type'} (_53780 : type839 _107642 B) (t : B -> Prop) (s : _107642 -> Prop) (d : B) : (term1053 _107642 B _53780 t s d) = (term1044 _107642 B _53780 t s d).
Proof. exact (MK_COMB (@lem4534917 _107642 B) (@lem4534916 _107642 B _53780 t s d)). Qed.
Lemma lem4534919 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4534920 {_107642 B : Type'} (_53780 : type839 _107642 B) (t : B -> Prop) (s : _107642 -> Prop) (d : B) : (term1062 _107642 B _53780 t s d) = (term1063 _107642 B _53780 t s d).
Proof. exact (MK_COMB (@lem4534919) (@lem4534918 _107642 B _53780 t s d)). Qed.
Lemma lem4534921 {_107642 B : Type'} (_53780 : type839 _107642 B) (GEN_PVAR_148 : _107642 -> B) (t : B -> Prop) (s : _107642 -> Prop) (d : B) : (term1057 _107642 B _53780 t s d GEN_PVAR_148) = (term1038 _107642 B _53780 GEN_PVAR_148 t s d).
Proof. exact (eq_refl (term1057 _107642 B _53780 t s d GEN_PVAR_148)). Qed.
Lemma lem4534922 {_107642 B : Type'} (_53780 : type839 _107642 B) (t : B -> Prop) (s : _107642 -> Prop) (d : B) : (term1064 _107642 B _53780 t s d) = (term1055 _107642 B _53780 t s d).
Proof. exact (fun_ext (fun GEN_PVAR_148 : _107642 -> B => @lem4534921 _107642 B _53780 GEN_PVAR_148 t s d)). Qed.
Lemma lem4534923 {_107642 B : Type'} : (@all (_107642 -> B)) = (@all (_107642 -> B)).
Proof. exact (eq_refl (@all (_107642 -> B))). Qed.
Lemma lem4534924 {_107642 B : Type'} (_53780 : type839 _107642 B) (t : B -> Prop) (s : _107642 -> Prop) (d : B) : (term1065 _107642 B _53780 t s d) = (term1066 _107642 B _53780 t s d).
Proof. exact (MK_COMB (@lem4534923 _107642 B) (@lem4534922 _107642 B _53780 t s d)). Qed.
Lemma lem4534925 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4534926 {_107642 B : Type'} (_53780 : type839 _107642 B) (t : B -> Prop) (s : _107642 -> Prop) (d : B) : (term1067 _107642 B _53780 t s d) = (term1068 _107642 B _53780 t s d).
Proof. exact (MK_COMB (@lem4534925) (@lem4534924 _107642 B _53780 t s d)). Qed.
Lemma lem4534927 {_107642 B : Type'} (_53780 : type839 _107642 B) (GEN_PVAR_148 : _107642 -> B) (t : B -> Prop) (s : _107642 -> Prop) (d : B) : (term1059 _107642 B _53780 t s d GEN_PVAR_148) = (term1035 _107642 B _53780 GEN_PVAR_148 t s d).
Proof. exact (eq_refl (term1059 _107642 B _53780 t s d GEN_PVAR_148)). Qed.
Lemma lem4534928 {_107642 B : Type'} (_53780 : type839 _107642 B) (t : B -> Prop) (s : _107642 -> Prop) (d : B) : (term1069 _107642 B _53780 t s d) = (term1056 _107642 B _53780 t s d).
Proof. exact (fun_ext (fun GEN_PVAR_148 : _107642 -> B => @lem4534927 _107642 B _53780 GEN_PVAR_148 t s d)). Qed.
Lemma lem4534929 {_107642 B : Type'} : (@all (_107642 -> B)) = (@all (_107642 -> B)).
Proof. exact (eq_refl (@all (_107642 -> B))). Qed.
Lemma lem4534930 {_107642 B : Type'} (_53780 : type839 _107642 B) (t : B -> Prop) (s : _107642 -> Prop) (d : B) : (term1070 _107642 B _53780 t s d) = (term1071 _107642 B _53780 t s d).
Proof. exact (MK_COMB (@lem4534929 _107642 B) (@lem4534928 _107642 B _53780 t s d)). Qed.
Lemma lem4534931 {_107642 B : Type'} (_53780 : type839 _107642 B) (t : B -> Prop) (s : _107642 -> Prop) (d : B) : (term1054 _107642 B _53780 t s d) = (term1072 _107642 B _53780 t s d).
Proof. exact (MK_COMB (@lem4534926 _107642 B _53780 t s d) (@lem4534930 _107642 B _53780 t s d)). Qed.
Lemma lem4534932 {_107642 B : Type'} (_53780 : type839 _107642 B) (t : B -> Prop) (s : _107642 -> Prop) (d : B) : ((term1053 _107642 B _53780 t s d) = (term1054 _107642 B _53780 t s d)) = ((term1044 _107642 B _53780 t s d) = (term1072 _107642 B _53780 t s d)).
Proof. exact (MK_COMB (@lem4534920 _107642 B _53780 t s d) (@lem4534931 _107642 B _53780 t s d)). Qed.
Lemma lem4534933 {_107642 B : Type'} (_53780 : type839 _107642 B) (t : B -> Prop) (s : _107642 -> Prop) (d : B) : (term1044 _107642 B _53780 t s d) = (term1072 _107642 B _53780 t s d).
Proof. exact (EQ_MP (@lem4534932 _107642 B _53780 t s d) (@lem4534910 _107642 B _53780 t s d)). Qed.
Lemma lem4535054 {_107642 B : Type'} (_53780 : type839 _107642 B) (t : B -> Prop) (s : _107642 -> Prop) : (term1045 _107642 B _53780 t s) = (term1073 _107642 B _53780 t s).
Proof. exact (fun_ext (fun d : B => @lem4534933 _107642 B _53780 t s d)). Qed.
Lemma lem4535055 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem4535056 {_107642 B : Type'} (_53780 : type839 _107642 B) (t : B -> Prop) (s : _107642 -> Prop) : (term1046 _107642 B _53780 t s) = (term1074 _107642 B _53780 t s).
Proof. exact (MK_COMB (@lem4535055 B) (@lem4535054 _107642 B _53780 t s)). Qed.
Lemma lem4535058 {A : Type'} (P : A -> Prop) (Q : A -> Prop) : (term793 A P Q) = (term794 A P Q).
Proof. exact (EQ_MP (@lem18953 A P Q) (@lem18952 A P Q)). Qed.
Lemma lem4535059 {B : Type'} (P : B -> Prop) (Q : B -> Prop) : (term793 B P Q) = (term794 B P Q).
Proof. exact (@lem4535058 B P Q). Qed.
Lemma lem4535060 {_107642 B : Type'} (_53780 : type839 _107642 B) (t : B -> Prop) (s : _107642 -> Prop) : (term1075 _107642 B _53780 t s) = (term1076 _107642 B _53780 t s).
Proof. exact (@lem4535059 B (term1077 _107642 B _53780 t s) (term1078 _107642 B _53780 t s)). Qed.
Lemma lem4535061 {_107642 B : Type'} (_53780 : type839 _107642 B) (t : B -> Prop) (s : _107642 -> Prop) (d : B) : (term1079 _107642 B _53780 t s d) = (term1066 _107642 B _53780 t s d).
Proof. exact (eq_refl (term1079 _107642 B _53780 t s d)). Qed.
Lemma lem4535062 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4535063 {_107642 B : Type'} (_53780 : type839 _107642 B) (t : B -> Prop) (s : _107642 -> Prop) (d : B) : (term1080 _107642 B _53780 t s d) = (term1068 _107642 B _53780 t s d).
Proof. exact (MK_COMB (@lem4535062) (@lem4535061 _107642 B _53780 t s d)). Qed.
Lemma lem4535064 {_107642 B : Type'} (_53780 : type839 _107642 B) (t : B -> Prop) (s : _107642 -> Prop) (d : B) : (term1081 _107642 B _53780 t s d) = (term1071 _107642 B _53780 t s d).
Proof. exact (eq_refl (term1081 _107642 B _53780 t s d)). Qed.
Lemma lem4535065 {_107642 B : Type'} (_53780 : type839 _107642 B) (t : B -> Prop) (s : _107642 -> Prop) (d : B) : (term1082 _107642 B _53780 t s d) = (term1072 _107642 B _53780 t s d).
Proof. exact (MK_COMB (@lem4535063 _107642 B _53780 t s d) (@lem4535064 _107642 B _53780 t s d)). Qed.
Lemma lem4535066 {_107642 B : Type'} (_53780 : type839 _107642 B) (t : B -> Prop) (s : _107642 -> Prop) : (term1083 _107642 B _53780 t s) = (term1073 _107642 B _53780 t s).
Proof. exact (fun_ext (fun d : B => @lem4535065 _107642 B _53780 t s d)). Qed.
Lemma lem4535067 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem4535068 {_107642 B : Type'} (_53780 : type839 _107642 B) (t : B -> Prop) (s : _107642 -> Prop) : (term1075 _107642 B _53780 t s) = (term1074 _107642 B _53780 t s).
Proof. exact (MK_COMB (@lem4535067 B) (@lem4535066 _107642 B _53780 t s)). Qed.
Lemma lem4535069 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4535070 {_107642 B : Type'} (_53780 : type839 _107642 B) (t : B -> Prop) (s : _107642 -> Prop) : (term1084 _107642 B _53780 t s) = (term1085 _107642 B _53780 t s).
Proof. exact (MK_COMB (@lem4535069) (@lem4535068 _107642 B _53780 t s)). Qed.
Lemma lem4535071 {_107642 B : Type'} (_53780 : type839 _107642 B) (t : B -> Prop) (s : _107642 -> Prop) (d : B) : (term1079 _107642 B _53780 t s d) = (term1066 _107642 B _53780 t s d).
Proof. exact (eq_refl (term1079 _107642 B _53780 t s d)). Qed.
Lemma lem4535072 {_107642 B : Type'} (_53780 : type839 _107642 B) (t : B -> Prop) (s : _107642 -> Prop) : (term1086 _107642 B _53780 t s) = (term1077 _107642 B _53780 t s).
Proof. exact (fun_ext (fun d : B => @lem4535071 _107642 B _53780 t s d)). Qed.
Lemma lem4535073 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem4535074 {_107642 B : Type'} (_53780 : type839 _107642 B) (t : B -> Prop) (s : _107642 -> Prop) : (term1087 _107642 B _53780 t s) = (term1088 _107642 B _53780 t s).
Proof. exact (MK_COMB (@lem4535073 B) (@lem4535072 _107642 B _53780 t s)). Qed.
Lemma lem4535075 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4535076 {_107642 B : Type'} (_53780 : type839 _107642 B) (t : B -> Prop) (s : _107642 -> Prop) : (term1089 _107642 B _53780 t s) = (term1090 _107642 B _53780 t s).
Proof. exact (MK_COMB (@lem4535075) (@lem4535074 _107642 B _53780 t s)). Qed.
Lemma lem4535077 {_107642 B : Type'} (_53780 : type839 _107642 B) (t : B -> Prop) (s : _107642 -> Prop) (d : B) : (term1081 _107642 B _53780 t s d) = (term1071 _107642 B _53780 t s d).
Proof. exact (eq_refl (term1081 _107642 B _53780 t s d)). Qed.
Lemma lem4535078 {_107642 B : Type'} (_53780 : type839 _107642 B) (t : B -> Prop) (s : _107642 -> Prop) : (term1091 _107642 B _53780 t s) = (term1078 _107642 B _53780 t s).
Proof. exact (fun_ext (fun d : B => @lem4535077 _107642 B _53780 t s d)). Qed.
Lemma lem4535079 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem4535080 {_107642 B : Type'} (_53780 : type839 _107642 B) (t : B -> Prop) (s : _107642 -> Prop) : (term1092 _107642 B _53780 t s) = (term1093 _107642 B _53780 t s).
Proof. exact (MK_COMB (@lem4535079 B) (@lem4535078 _107642 B _53780 t s)). Qed.
Lemma lem4535081 {_107642 B : Type'} (_53780 : type839 _107642 B) (t : B -> Prop) (s : _107642 -> Prop) : (term1076 _107642 B _53780 t s) = (term1094 _107642 B _53780 t s).
Proof. exact (MK_COMB (@lem4535076 _107642 B _53780 t s) (@lem4535080 _107642 B _53780 t s)). Qed.
Lemma lem4535082 {_107642 B : Type'} (_53780 : type839 _107642 B) (t : B -> Prop) (s : _107642 -> Prop) : ((term1075 _107642 B _53780 t s) = (term1076 _107642 B _53780 t s)) = ((term1074 _107642 B _53780 t s) = (term1094 _107642 B _53780 t s)).
Proof. exact (MK_COMB (@lem4535070 _107642 B _53780 t s) (@lem4535081 _107642 B _53780 t s)). Qed.
Lemma lem4535083 {_107642 B : Type'} (_53780 : type839 _107642 B) (t : B -> Prop) (s : _107642 -> Prop) : (term1074 _107642 B _53780 t s) = (term1094 _107642 B _53780 t s).
Proof. exact (EQ_MP (@lem4535082 _107642 B _53780 t s) (@lem4535060 _107642 B _53780 t s)). Qed.
Lemma lem4535212 {_107642 B : Type'} (_53780 : type839 _107642 B) (t : B -> Prop) (s : _107642 -> Prop) : (term1046 _107642 B _53780 t s) = (term1094 _107642 B _53780 t s).
Proof. exact (TRANS (@lem4535056 _107642 B _53780 t s) (@lem4535083 _107642 B _53780 t s)). Qed.
Lemma lem4535213 {_107642 B : Type'} (_53780 : type839 _107642 B) (t : B -> Prop) : (term1047 _107642 B _53780 t) = (term1095 _107642 B _53780 t).
Proof. exact (fun_ext (fun s : _107642 -> Prop => @lem4535212 _107642 B _53780 t s)). Qed.
Lemma lem4535214 {_107642 : Type'} : (@all (_107642 -> Prop)) = (@all (_107642 -> Prop)).
Proof. exact (eq_refl (@all (_107642 -> Prop))). Qed.
Lemma lem4535215 {_107642 B : Type'} (_53780 : type839 _107642 B) (t : B -> Prop) : (term1048 _107642 B _53780 t) = (term1096 _107642 B _53780 t).
Proof. exact (MK_COMB (@lem4535214 _107642) (@lem4535213 _107642 B _53780 t)). Qed.
Lemma lem4535217 {A : Type'} (P : A -> Prop) (Q : A -> Prop) : (term793 A P Q) = (term794 A P Q).
Proof. exact (EQ_MP (@lem18953 A P Q) (@lem18952 A P Q)). Qed.
Lemma lem4535218 {_107642 : Type'} (P : type686 _107642) (Q : type686 _107642) : (term843 _107642 P Q) = (term844 _107642 P Q).
Proof. exact (@lem4535217 (_107642 -> Prop) P Q). Qed.
Lemma lem4535219 {_107642 B : Type'} (_53780 : type839 _107642 B) (t : B -> Prop) : (term1097 _107642 B _53780 t) = (term1098 _107642 B _53780 t).
Proof. exact (@lem4535218 _107642 (term1099 _107642 B _53780 t) (term1100 _107642 B _53780 t)). Qed.
Lemma lem4535220 {_107642 B : Type'} (_53780 : type839 _107642 B) (t : B -> Prop) (s : _107642 -> Prop) : (term1101 _107642 B _53780 t s) = (term1088 _107642 B _53780 t s).
Proof. exact (eq_refl (term1101 _107642 B _53780 t s)). Qed.
Lemma lem4535221 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4535222 {_107642 B : Type'} (_53780 : type839 _107642 B) (t : B -> Prop) (s : _107642 -> Prop) : (term1102 _107642 B _53780 t s) = (term1090 _107642 B _53780 t s).
Proof. exact (MK_COMB (@lem4535221) (@lem4535220 _107642 B _53780 t s)). Qed.
Lemma lem4535223 {_107642 B : Type'} (_53780 : type839 _107642 B) (t : B -> Prop) (s : _107642 -> Prop) : (term1103 _107642 B _53780 t s) = (term1093 _107642 B _53780 t s).
Proof. exact (eq_refl (term1103 _107642 B _53780 t s)). Qed.
Lemma lem4535224 {_107642 B : Type'} (_53780 : type839 _107642 B) (t : B -> Prop) (s : _107642 -> Prop) : (term1104 _107642 B _53780 t s) = (term1094 _107642 B _53780 t s).
Proof. exact (MK_COMB (@lem4535222 _107642 B _53780 t s) (@lem4535223 _107642 B _53780 t s)). Qed.
Lemma lem4535225 {_107642 B : Type'} (_53780 : type839 _107642 B) (t : B -> Prop) : (term1105 _107642 B _53780 t) = (term1095 _107642 B _53780 t).
Proof. exact (fun_ext (fun s : _107642 -> Prop => @lem4535224 _107642 B _53780 t s)). Qed.
Lemma lem4535226 {_107642 : Type'} : (@all (_107642 -> Prop)) = (@all (_107642 -> Prop)).
Proof. exact (eq_refl (@all (_107642 -> Prop))). Qed.
Lemma lem4535227 {_107642 B : Type'} (_53780 : type839 _107642 B) (t : B -> Prop) : (term1097 _107642 B _53780 t) = (term1096 _107642 B _53780 t).
Proof. exact (MK_COMB (@lem4535226 _107642) (@lem4535225 _107642 B _53780 t)). Qed.
Lemma lem4535228 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4535229 {_107642 B : Type'} (_53780 : type839 _107642 B) (t : B -> Prop) : (term1106 _107642 B _53780 t) = (term1107 _107642 B _53780 t).
Proof. exact (MK_COMB (@lem4535228) (@lem4535227 _107642 B _53780 t)). Qed.
Lemma lem4535230 {_107642 B : Type'} (_53780 : type839 _107642 B) (t : B -> Prop) (s : _107642 -> Prop) : (term1101 _107642 B _53780 t s) = (term1088 _107642 B _53780 t s).
Proof. exact (eq_refl (term1101 _107642 B _53780 t s)). Qed.
Lemma lem4535231 {_107642 B : Type'} (_53780 : type839 _107642 B) (t : B -> Prop) : (term1108 _107642 B _53780 t) = (term1099 _107642 B _53780 t).
Proof. exact (fun_ext (fun s : _107642 -> Prop => @lem4535230 _107642 B _53780 t s)). Qed.
Lemma lem4535232 {_107642 : Type'} : (@all (_107642 -> Prop)) = (@all (_107642 -> Prop)).
Proof. exact (eq_refl (@all (_107642 -> Prop))). Qed.
Lemma lem4535233 {_107642 B : Type'} (_53780 : type839 _107642 B) (t : B -> Prop) : (term1109 _107642 B _53780 t) = (term1110 _107642 B _53780 t).
Proof. exact (MK_COMB (@lem4535232 _107642) (@lem4535231 _107642 B _53780 t)). Qed.
Lemma lem4535234 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4535235 {_107642 B : Type'} (_53780 : type839 _107642 B) (t : B -> Prop) : (term1111 _107642 B _53780 t) = (term1112 _107642 B _53780 t).
Proof. exact (MK_COMB (@lem4535234) (@lem4535233 _107642 B _53780 t)). Qed.
Lemma lem4535236 {_107642 B : Type'} (_53780 : type839 _107642 B) (t : B -> Prop) (s : _107642 -> Prop) : (term1103 _107642 B _53780 t s) = (term1093 _107642 B _53780 t s).
Proof. exact (eq_refl (term1103 _107642 B _53780 t s)). Qed.
Lemma lem4535237 {_107642 B : Type'} (_53780 : type839 _107642 B) (t : B -> Prop) : (term1113 _107642 B _53780 t) = (term1100 _107642 B _53780 t).
Proof. exact (fun_ext (fun s : _107642 -> Prop => @lem4535236 _107642 B _53780 t s)). Qed.
Lemma lem4535238 {_107642 : Type'} : (@all (_107642 -> Prop)) = (@all (_107642 -> Prop)).
Proof. exact (eq_refl (@all (_107642 -> Prop))). Qed.
Lemma lem4535239 {_107642 B : Type'} (_53780 : type839 _107642 B) (t : B -> Prop) : (term1114 _107642 B _53780 t) = (term1115 _107642 B _53780 t).
Proof. exact (MK_COMB (@lem4535238 _107642) (@lem4535237 _107642 B _53780 t)). Qed.
Lemma lem4535240 {_107642 B : Type'} (_53780 : type839 _107642 B) (t : B -> Prop) : (term1098 _107642 B _53780 t) = (term1116 _107642 B _53780 t).
Proof. exact (MK_COMB (@lem4535235 _107642 B _53780 t) (@lem4535239 _107642 B _53780 t)). Qed.
Lemma lem4535241 {_107642 B : Type'} (_53780 : type839 _107642 B) (t : B -> Prop) : ((term1097 _107642 B _53780 t) = (term1098 _107642 B _53780 t)) = ((term1096 _107642 B _53780 t) = (term1116 _107642 B _53780 t)).
Proof. exact (MK_COMB (@lem4535229 _107642 B _53780 t) (@lem4535240 _107642 B _53780 t)). Qed.
Lemma lem4535242 {_107642 B : Type'} (_53780 : type839 _107642 B) (t : B -> Prop) : (term1096 _107642 B _53780 t) = (term1116 _107642 B _53780 t).
Proof. exact (EQ_MP (@lem4535241 _107642 B _53780 t) (@lem4535219 _107642 B _53780 t)). Qed.
Lemma lem4535379 {_107642 B : Type'} (_53780 : type839 _107642 B) (t : B -> Prop) : (term1048 _107642 B _53780 t) = (term1116 _107642 B _53780 t).
Proof. exact (TRANS (@lem4535215 _107642 B _53780 t) (@lem4535242 _107642 B _53780 t)). Qed.
Lemma lem4535380 {_107642 B : Type'} (_53780 : type839 _107642 B) : (term1049 _107642 B _53780) = (term1117 _107642 B _53780).
Proof. exact (fun_ext (fun t : B -> Prop => @lem4535379 _107642 B _53780 t)). Qed.
Lemma lem4535381 {B : Type'} : (@all (B -> Prop)) = (@all (B -> Prop)).
Proof. exact (eq_refl (@all (B -> Prop))). Qed.
Lemma lem4535382 {_107642 B : Type'} (_53780 : type839 _107642 B) : (term1050 _107642 B _53780) = (term1118 _107642 B _53780).
Proof. exact (MK_COMB (@lem4535381 B) (@lem4535380 _107642 B _53780)). Qed.
Lemma lem4535384 {A : Type'} (P : A -> Prop) (Q : A -> Prop) : (term793 A P Q) = (term794 A P Q).
Proof. exact (EQ_MP (@lem18953 A P Q) (@lem18952 A P Q)). Qed.
Lemma lem4535385 {B : Type'} (P : type686 B) (Q : type686 B) : (term843 B P Q) = (term844 B P Q).
Proof. exact (@lem4535384 (B -> Prop) P Q). Qed.
Lemma lem4535386 {_107642 B : Type'} (_53780 : type839 _107642 B) : (term1119 _107642 B _53780) = (term1120 _107642 B _53780).
Proof. exact (@lem4535385 B (term1121 _107642 B _53780) (term1122 _107642 B _53780)). Qed.
Lemma lem4535387 {_107642 B : Type'} (_53780 : type839 _107642 B) (t : B -> Prop) : (term1123 _107642 B _53780 t) = (term1110 _107642 B _53780 t).
Proof. exact (eq_refl (term1123 _107642 B _53780 t)). Qed.
Lemma lem4535388 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4535389 {_107642 B : Type'} (_53780 : type839 _107642 B) (t : B -> Prop) : (term1124 _107642 B _53780 t) = (term1112 _107642 B _53780 t).
Proof. exact (MK_COMB (@lem4535388) (@lem4535387 _107642 B _53780 t)). Qed.
Lemma lem4535390 {_107642 B : Type'} (_53780 : type839 _107642 B) (t : B -> Prop) : (term1125 _107642 B _53780 t) = (term1115 _107642 B _53780 t).
Proof. exact (eq_refl (term1125 _107642 B _53780 t)). Qed.
Lemma lem4535391 {_107642 B : Type'} (_53780 : type839 _107642 B) (t : B -> Prop) : (term1126 _107642 B _53780 t) = (term1116 _107642 B _53780 t).
Proof. exact (MK_COMB (@lem4535389 _107642 B _53780 t) (@lem4535390 _107642 B _53780 t)). Qed.
Lemma lem4535392 {_107642 B : Type'} (_53780 : type839 _107642 B) : (term1127 _107642 B _53780) = (term1117 _107642 B _53780).
Proof. exact (fun_ext (fun t : B -> Prop => @lem4535391 _107642 B _53780 t)). Qed.
Lemma lem4535393 {B : Type'} : (@all (B -> Prop)) = (@all (B -> Prop)).
Proof. exact (eq_refl (@all (B -> Prop))). Qed.
Lemma lem4535394 {_107642 B : Type'} (_53780 : type839 _107642 B) : (term1119 _107642 B _53780) = (term1118 _107642 B _53780).
Proof. exact (MK_COMB (@lem4535393 B) (@lem4535392 _107642 B _53780)). Qed.
Lemma lem4535395 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4535396 {_107642 B : Type'} (_53780 : type839 _107642 B) : (term1128 _107642 B _53780) = (term1129 _107642 B _53780).
Proof. exact (MK_COMB (@lem4535395) (@lem4535394 _107642 B _53780)). Qed.
Lemma lem4535397 {_107642 B : Type'} (_53780 : type839 _107642 B) (t : B -> Prop) : (term1123 _107642 B _53780 t) = (term1110 _107642 B _53780 t).
Proof. exact (eq_refl (term1123 _107642 B _53780 t)). Qed.
Lemma lem4535398 {_107642 B : Type'} (_53780 : type839 _107642 B) : (term1130 _107642 B _53780) = (term1121 _107642 B _53780).
Proof. exact (fun_ext (fun t : B -> Prop => @lem4535397 _107642 B _53780 t)). Qed.
Lemma lem4535399 {B : Type'} : (@all (B -> Prop)) = (@all (B -> Prop)).
Proof. exact (eq_refl (@all (B -> Prop))). Qed.
Lemma lem4535400 {_107642 B : Type'} (_53780 : type839 _107642 B) : (term1131 _107642 B _53780) = (term1132 _107642 B _53780).
Proof. exact (MK_COMB (@lem4535399 B) (@lem4535398 _107642 B _53780)). Qed.
Lemma lem4535401 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4535402 {_107642 B : Type'} (_53780 : type839 _107642 B) : (term1133 _107642 B _53780) = (term1134 _107642 B _53780).
Proof. exact (MK_COMB (@lem4535401) (@lem4535400 _107642 B _53780)). Qed.
Lemma lem4535403 {_107642 B : Type'} (_53780 : type839 _107642 B) (t : B -> Prop) : (term1125 _107642 B _53780 t) = (term1115 _107642 B _53780 t).
Proof. exact (eq_refl (term1125 _107642 B _53780 t)). Qed.
Lemma lem4535404 {_107642 B : Type'} (_53780 : type839 _107642 B) : (term1135 _107642 B _53780) = (term1122 _107642 B _53780).
Proof. exact (fun_ext (fun t : B -> Prop => @lem4535403 _107642 B _53780 t)). Qed.
Lemma lem4535405 {B : Type'} : (@all (B -> Prop)) = (@all (B -> Prop)).
Proof. exact (eq_refl (@all (B -> Prop))). Qed.
Lemma lem4535406 {_107642 B : Type'} (_53780 : type839 _107642 B) : (term1136 _107642 B _53780) = (term1137 _107642 B _53780).
Proof. exact (MK_COMB (@lem4535405 B) (@lem4535404 _107642 B _53780)). Qed.
Lemma lem4535407 {_107642 B : Type'} (_53780 : type839 _107642 B) : (term1120 _107642 B _53780) = (term1138 _107642 B _53780).
Proof. exact (MK_COMB (@lem4535402 _107642 B _53780) (@lem4535406 _107642 B _53780)). Qed.
Lemma lem4535408 {_107642 B : Type'} (_53780 : type839 _107642 B) : ((term1119 _107642 B _53780) = (term1120 _107642 B _53780)) = ((term1118 _107642 B _53780) = (term1138 _107642 B _53780)).
Proof. exact (MK_COMB (@lem4535396 _107642 B _53780) (@lem4535407 _107642 B _53780)). Qed.
Lemma lem4535409 {_107642 B : Type'} (_53780 : type839 _107642 B) : (term1118 _107642 B _53780) = (term1138 _107642 B _53780).
Proof. exact (EQ_MP (@lem4535408 _107642 B _53780) (@lem4535386 _107642 B _53780)). Qed.
Lemma lem4535554 {_107642 B : Type'} (_53780 : type839 _107642 B) : (term1050 _107642 B _53780) = (term1138 _107642 B _53780).
Proof. exact (TRANS (@lem4535382 _107642 B _53780) (@lem4535409 _107642 B _53780)). Qed.
Lemma lem4535556 {A : Type'} (P : Prop) (Q : A -> Prop) : (term889 A P Q) = (term890 A P Q).
Proof. exact (EQ_MP (@lem18911 A P Q) (@lem18910 A P Q)). Qed.
Lemma lem4535557 {_107642 B : Type'} (P : Prop) (Q : type572 _107642 B) : (term1139 _107642 B P Q) = (term1140 _107642 B P Q).
Proof. exact (@lem4535556 (_107642 -> B) P Q). Qed.
Lemma lem4535558 {_107642 B : Type'} (_53780 : type839 _107642 B) (GEN_PVAR_148 : _107642 -> B) (t : B -> Prop) (s : _107642 -> Prop) (d : B) : (term1141 _107642 B _53780 GEN_PVAR_148 t s d) = (term1142 _107642 B _53780 GEN_PVAR_148 t s d).
Proof. exact (@lem4535557 _107642 B (term1143 _107642 B _53780 t s d GEN_PVAR_148) (term123 _107642 B GEN_PVAR_148 t s d)). Qed.
Lemma lem4535559 {_107642 B : Type'} (GEN_PVAR_148 : _107642 -> B) (t : B -> Prop) (s : _107642 -> Prop) (d : B) (f : _107642 -> B) : (term1028 _107642 B GEN_PVAR_148 t s d f) = (term122 _107642 B GEN_PVAR_148 t s d f).
Proof. exact (eq_refl (term1028 _107642 B GEN_PVAR_148 t s d f)). Qed.
Lemma lem4535560 {_107642 B : Type'} (GEN_PVAR_148 : _107642 -> B) (t : B -> Prop) (s : _107642 -> Prop) (d : B) : (term1144 _107642 B GEN_PVAR_148 t s d) = (term123 _107642 B GEN_PVAR_148 t s d).
Proof. exact (fun_ext (fun f : _107642 -> B => @lem4535559 _107642 B GEN_PVAR_148 t s d f)). Qed.
Lemma lem4535561 {_107642 B : Type'} : (@ex (_107642 -> B)) = (@ex (_107642 -> B)).
Proof. exact (eq_refl (@ex (_107642 -> B))). Qed.
Lemma lem4535562 {_107642 B : Type'} (GEN_PVAR_148 : _107642 -> B) (t : B -> Prop) (s : _107642 -> Prop) (d : B) : (term1145 _107642 B GEN_PVAR_148 t s d) = (term124 _107642 B GEN_PVAR_148 t s d).
Proof. exact (MK_COMB (@lem4535561 _107642 B) (@lem4535560 _107642 B GEN_PVAR_148 t s d)). Qed.
Lemma lem4535563 {_107642 B : Type'} (_53780 : type839 _107642 B) (t : B -> Prop) (s : _107642 -> Prop) (d : B) (GEN_PVAR_148 : _107642 -> B) : (term1034 _107642 B _53780 t s d GEN_PVAR_148) = (term1034 _107642 B _53780 t s d GEN_PVAR_148).
Proof. exact (eq_refl (term1034 _107642 B _53780 t s d GEN_PVAR_148)). Qed.
Lemma lem4535564 {_107642 B : Type'} (_53780 : type839 _107642 B) (GEN_PVAR_148 : _107642 -> B) (t : B -> Prop) (s : _107642 -> Prop) (d : B) : (term1141 _107642 B _53780 GEN_PVAR_148 t s d) = (term1035 _107642 B _53780 GEN_PVAR_148 t s d).
Proof. exact (MK_COMB (@lem4535563 _107642 B _53780 t s d GEN_PVAR_148) (@lem4535562 _107642 B GEN_PVAR_148 t s d)). Qed.
Lemma lem4535565 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4535566 {_107642 B : Type'} (_53780 : type839 _107642 B) (GEN_PVAR_148 : _107642 -> B) (t : B -> Prop) (s : _107642 -> Prop) (d : B) : (term1146 _107642 B _53780 GEN_PVAR_148 t s d) = (term1147 _107642 B _53780 GEN_PVAR_148 t s d).
Proof. exact (MK_COMB (@lem4535565) (@lem4535564 _107642 B _53780 GEN_PVAR_148 t s d)). Qed.
Lemma lem4535567 {_107642 B : Type'} (GEN_PVAR_148 : _107642 -> B) (t : B -> Prop) (s : _107642 -> Prop) (d : B) (f : _107642 -> B) : (term1028 _107642 B GEN_PVAR_148 t s d f) = (term122 _107642 B GEN_PVAR_148 t s d f).
Proof. exact (eq_refl (term1028 _107642 B GEN_PVAR_148 t s d f)). Qed.
Lemma lem4535568 {_107642 B : Type'} (_53780 : type839 _107642 B) (t : B -> Prop) (s : _107642 -> Prop) (d : B) (GEN_PVAR_148 : _107642 -> B) : (term1034 _107642 B _53780 t s d GEN_PVAR_148) = (term1034 _107642 B _53780 t s d GEN_PVAR_148).
Proof. exact (eq_refl (term1034 _107642 B _53780 t s d GEN_PVAR_148)). Qed.
Lemma lem4535569 {_107642 B : Type'} (_53780 : type839 _107642 B) (GEN_PVAR_148 : _107642 -> B) (t : B -> Prop) (s : _107642 -> Prop) (d : B) (f : _107642 -> B) : (term1148 _107642 B _53780 GEN_PVAR_148 t s d f) = (term1149 _107642 B _53780 GEN_PVAR_148 t s d f).
Proof. exact (MK_COMB (@lem4535568 _107642 B _53780 t s d GEN_PVAR_148) (@lem4535567 _107642 B GEN_PVAR_148 t s d f)). Qed.
Lemma lem4535570 {_107642 B : Type'} (_53780 : type839 _107642 B) (GEN_PVAR_148 : _107642 -> B) (t : B -> Prop) (s : _107642 -> Prop) (d : B) : (term1150 _107642 B _53780 GEN_PVAR_148 t s d) = (term1151 _107642 B _53780 GEN_PVAR_148 t s d).
Proof. exact (fun_ext (fun f : _107642 -> B => @lem4535569 _107642 B _53780 GEN_PVAR_148 t s d f)). Qed.
Lemma lem4535571 {_107642 B : Type'} : (@ex (_107642 -> B)) = (@ex (_107642 -> B)).
Proof. exact (eq_refl (@ex (_107642 -> B))). Qed.
Lemma lem4535572 {_107642 B : Type'} (_53780 : type839 _107642 B) (GEN_PVAR_148 : _107642 -> B) (t : B -> Prop) (s : _107642 -> Prop) (d : B) : (term1142 _107642 B _53780 GEN_PVAR_148 t s d) = (term1152 _107642 B _53780 GEN_PVAR_148 t s d).
Proof. exact (MK_COMB (@lem4535571 _107642 B) (@lem4535570 _107642 B _53780 GEN_PVAR_148 t s d)). Qed.
Lemma lem4535573 {_107642 B : Type'} (_53780 : type839 _107642 B) (GEN_PVAR_148 : _107642 -> B) (t : B -> Prop) (s : _107642 -> Prop) (d : B) : ((term1141 _107642 B _53780 GEN_PVAR_148 t s d) = (term1142 _107642 B _53780 GEN_PVAR_148 t s d)) = ((term1035 _107642 B _53780 GEN_PVAR_148 t s d) = (term1152 _107642 B _53780 GEN_PVAR_148 t s d)).
Proof. exact (MK_COMB (@lem4535566 _107642 B _53780 GEN_PVAR_148 t s d) (@lem4535572 _107642 B _53780 GEN_PVAR_148 t s d)). Qed.
Lemma lem4535574 {_107642 B : Type'} (_53780 : type839 _107642 B) (GEN_PVAR_148 : _107642 -> B) (t : B -> Prop) (s : _107642 -> Prop) (d : B) : (term1035 _107642 B _53780 GEN_PVAR_148 t s d) = (term1152 _107642 B _53780 GEN_PVAR_148 t s d).
Proof. exact (EQ_MP (@lem4535573 _107642 B _53780 GEN_PVAR_148 t s d) (@lem4535558 _107642 B _53780 GEN_PVAR_148 t s d)). Qed.
Lemma lem4535575 {_107642 B : Type'} (_53780 : type839 _107642 B) (t : B -> Prop) (s : _107642 -> Prop) (d : B) : (term1056 _107642 B _53780 t s d) = (term1153 _107642 B _53780 t s d).
Proof. exact (fun_ext (fun GEN_PVAR_148 : _107642 -> B => @lem4535574 _107642 B _53780 GEN_PVAR_148 t s d)). Qed.
Lemma lem4535576 {_107642 B : Type'} : (@all (_107642 -> B)) = (@all (_107642 -> B)).
Proof. exact (eq_refl (@all (_107642 -> B))). Qed.
Lemma lem4535577 {_107642 B : Type'} (_53780 : type839 _107642 B) (t : B -> Prop) (s : _107642 -> Prop) (d : B) : (term1071 _107642 B _53780 t s d) = (term1154 _107642 B _53780 t s d).
Proof. exact (MK_COMB (@lem4535576 _107642 B) (@lem4535575 _107642 B _53780 t s d)). Qed.
Lemma lem4535579 {A B : Type'} (P : type1413 A B) : (term907 A B P) = (term908 A B P).
Proof. exact (EQ_MP (@lem18899 A B P) (@lem18898 A B P)). Qed.
Lemma lem4535580 {_107642 B : Type'} (P : type523 _107642 B) : (term1155 _107642 B P) = (term1156 _107642 B P).
Proof. exact (@lem4535579 (_107642 -> B) (_107642 -> B) P). Qed.
Lemma lem4535581 {_107642 B : Type'} (_53780 : type839 _107642 B) (t : B -> Prop) (s : _107642 -> Prop) (d : B) : (term1157 _107642 B _53780 t s d) = (term1158 _107642 B _53780 t s d).
Proof. exact (@lem4535580 _107642 B (term1159 _107642 B _53780 t s d)). Qed.
Lemma lem4535582 {_107642 B : Type'} (_53780 : type839 _107642 B) (GEN_PVAR_148 : _107642 -> B) (t : B -> Prop) (s : _107642 -> Prop) (d : B) : (term1160 _107642 B _53780 t s d GEN_PVAR_148) = (term1151 _107642 B _53780 GEN_PVAR_148 t s d).
Proof. exact (eq_refl (term1160 _107642 B _53780 t s d GEN_PVAR_148)). Qed.
Lemma lem4535583 {_107642 B : Type'} (f : _107642 -> B) : f = f.
Proof. exact (eq_refl f). Qed.
Lemma lem4535584 {_107642 B : Type'} (_53780 : type839 _107642 B) (GEN_PVAR_148 : _107642 -> B) (t : B -> Prop) (s : _107642 -> Prop) (d : B) (f : _107642 -> B) : (term1161 _107642 B _53780 t s d GEN_PVAR_148 f) = (term1162 _107642 B _53780 GEN_PVAR_148 t s d f).
Proof. exact (MK_COMB (@lem4535582 _107642 B _53780 GEN_PVAR_148 t s d) (@lem4535583 _107642 B f)). Qed.
Lemma lem4535585 {_107642 B : Type'} (_53780 : type839 _107642 B) (GEN_PVAR_148 : _107642 -> B) (t : B -> Prop) (s : _107642 -> Prop) (d : B) (f : _107642 -> B) : (term1162 _107642 B _53780 GEN_PVAR_148 t s d f) = (term1149 _107642 B _53780 GEN_PVAR_148 t s d f).
Proof. exact (eq_refl (term1162 _107642 B _53780 GEN_PVAR_148 t s d f)). Qed.
Lemma lem4535586 {_107642 B : Type'} (_53780 : type839 _107642 B) (GEN_PVAR_148 : _107642 -> B) (t : B -> Prop) (s : _107642 -> Prop) (d : B) (f : _107642 -> B) : (term1161 _107642 B _53780 t s d GEN_PVAR_148 f) = (term1149 _107642 B _53780 GEN_PVAR_148 t s d f).
Proof. exact (TRANS (@lem4535584 _107642 B _53780 GEN_PVAR_148 t s d f) (@lem4535585 _107642 B _53780 GEN_PVAR_148 t s d f)). Qed.
Lemma lem4535587 {_107642 B : Type'} (_53780 : type839 _107642 B) (GEN_PVAR_148 : _107642 -> B) (t : B -> Prop) (s : _107642 -> Prop) (d : B) : (term1163 _107642 B _53780 t s d GEN_PVAR_148) = (term1151 _107642 B _53780 GEN_PVAR_148 t s d).
Proof. exact (fun_ext (fun f : _107642 -> B => @lem4535586 _107642 B _53780 GEN_PVAR_148 t s d f)). Qed.
Lemma lem4535588 {_107642 B : Type'} : (@ex (_107642 -> B)) = (@ex (_107642 -> B)).
Proof. exact (eq_refl (@ex (_107642 -> B))). Qed.
Lemma lem4535589 {_107642 B : Type'} (_53780 : type839 _107642 B) (GEN_PVAR_148 : _107642 -> B) (t : B -> Prop) (s : _107642 -> Prop) (d : B) : (term1164 _107642 B _53780 t s d GEN_PVAR_148) = (term1152 _107642 B _53780 GEN_PVAR_148 t s d).
Proof. exact (MK_COMB (@lem4535588 _107642 B) (@lem4535587 _107642 B _53780 GEN_PVAR_148 t s d)). Qed.
Lemma lem4535590 {_107642 B : Type'} (_53780 : type839 _107642 B) (t : B -> Prop) (s : _107642 -> Prop) (d : B) : (term1165 _107642 B _53780 t s d) = (term1153 _107642 B _53780 t s d).
Proof. exact (fun_ext (fun GEN_PVAR_148 : _107642 -> B => @lem4535589 _107642 B _53780 GEN_PVAR_148 t s d)). Qed.
Lemma lem4535591 {_107642 B : Type'} : (@all (_107642 -> B)) = (@all (_107642 -> B)).
Proof. exact (eq_refl (@all (_107642 -> B))). Qed.
Lemma lem4535592 {_107642 B : Type'} (_53780 : type839 _107642 B) (t : B -> Prop) (s : _107642 -> Prop) (d : B) : (term1157 _107642 B _53780 t s d) = (term1154 _107642 B _53780 t s d).
Proof. exact (MK_COMB (@lem4535591 _107642 B) (@lem4535590 _107642 B _53780 t s d)). Qed.
Lemma lem4535593 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4535594 {_107642 B : Type'} (_53780 : type839 _107642 B) (t : B -> Prop) (s : _107642 -> Prop) (d : B) : (term1166 _107642 B _53780 t s d) = (term1167 _107642 B _53780 t s d).
Proof. exact (MK_COMB (@lem4535593) (@lem4535592 _107642 B _53780 t s d)). Qed.
Lemma lem4535595 {_107642 B : Type'} (_53780 : type839 _107642 B) (GEN_PVAR_148 : _107642 -> B) (t : B -> Prop) (s : _107642 -> Prop) (d : B) : (term1160 _107642 B _53780 t s d GEN_PVAR_148) = (term1151 _107642 B _53780 GEN_PVAR_148 t s d).
Proof. exact (eq_refl (term1160 _107642 B _53780 t s d GEN_PVAR_148)). Qed.
Lemma lem4535596 {_107642 B : Type'} (f : type549 _107642 B) (GEN_PVAR_148 : _107642 -> B) : (f GEN_PVAR_148) = (f GEN_PVAR_148).
Proof. exact (eq_refl (f GEN_PVAR_148)). Qed.
Lemma lem4535597 {_107642 B : Type'} (_53780 : type839 _107642 B) (t : B -> Prop) (s : _107642 -> Prop) (d : B) (f : type549 _107642 B) (GEN_PVAR_148 : _107642 -> B) : (term1168 _107642 B _53780 t s d f GEN_PVAR_148) = (term1169 _107642 B _53780 t s d f GEN_PVAR_148).
Proof. exact (MK_COMB (@lem4535595 _107642 B _53780 GEN_PVAR_148 t s d) (@lem4535596 _107642 B f GEN_PVAR_148)). Qed.
Lemma lem4535598 {_107642 B : Type'} (_53780 : type839 _107642 B) (t : B -> Prop) (s : _107642 -> Prop) (d : B) (f : type549 _107642 B) (GEN_PVAR_148 : _107642 -> B) : (term1169 _107642 B _53780 t s d f GEN_PVAR_148) = (term1170 _107642 B _53780 t s d f GEN_PVAR_148).
Proof. exact (eq_refl (term1169 _107642 B _53780 t s d f GEN_PVAR_148)). Qed.
Lemma lem4535599 {_107642 B : Type'} (_53780 : type839 _107642 B) (t : B -> Prop) (s : _107642 -> Prop) (d : B) (f : type549 _107642 B) (GEN_PVAR_148 : _107642 -> B) : (term1168 _107642 B _53780 t s d f GEN_PVAR_148) = (term1170 _107642 B _53780 t s d f GEN_PVAR_148).
Proof. exact (TRANS (@lem4535597 _107642 B _53780 t s d f GEN_PVAR_148) (@lem4535598 _107642 B _53780 t s d f GEN_PVAR_148)). Qed.
Lemma lem4535600 {_107642 B : Type'} (_53780 : type839 _107642 B) (t : B -> Prop) (s : _107642 -> Prop) (d : B) (f : type549 _107642 B) : (term1171 _107642 B _53780 t s d f) = (term1172 _107642 B _53780 t s d f).
Proof. exact (fun_ext (fun GEN_PVAR_148 : _107642 -> B => @lem4535599 _107642 B _53780 t s d f GEN_PVAR_148)). Qed.
Lemma lem4535601 {_107642 B : Type'} : (@all (_107642 -> B)) = (@all (_107642 -> B)).
Proof. exact (eq_refl (@all (_107642 -> B))). Qed.
Lemma lem4535602 {_107642 B : Type'} (_53780 : type839 _107642 B) (t : B -> Prop) (s : _107642 -> Prop) (d : B) (f : type549 _107642 B) : (term1173 _107642 B _53780 t s d f) = (term1174 _107642 B _53780 t s d f).
Proof. exact (MK_COMB (@lem4535601 _107642 B) (@lem4535600 _107642 B _53780 t s d f)). Qed.
Lemma lem4535603 {_107642 B : Type'} (_53780 : type839 _107642 B) (t : B -> Prop) (s : _107642 -> Prop) (d : B) : (term1175 _107642 B _53780 t s d) = (term1176 _107642 B _53780 t s d).
Proof. exact (fun_ext (fun f : type549 _107642 B => @lem4535602 _107642 B _53780 t s d f)). Qed.
Lemma lem4535604 {_107642 B : Type'} : (@ex ((_107642 -> B) -> _107642 -> B)) = (@ex ((_107642 -> B) -> _107642 -> B)).
Proof. exact (eq_refl (@ex ((_107642 -> B) -> _107642 -> B))). Qed.
Lemma lem4535605 {_107642 B : Type'} (_53780 : type839 _107642 B) (t : B -> Prop) (s : _107642 -> Prop) (d : B) : (term1158 _107642 B _53780 t s d) = (term1177 _107642 B _53780 t s d).
Proof. exact (MK_COMB (@lem4535604 _107642 B) (@lem4535603 _107642 B _53780 t s d)). Qed.
Lemma lem4535606 {_107642 B : Type'} (_53780 : type839 _107642 B) (t : B -> Prop) (s : _107642 -> Prop) (d : B) : ((term1157 _107642 B _53780 t s d) = (term1158 _107642 B _53780 t s d)) = ((term1154 _107642 B _53780 t s d) = (term1177 _107642 B _53780 t s d)).
Proof. exact (MK_COMB (@lem4535594 _107642 B _53780 t s d) (@lem4535605 _107642 B _53780 t s d)). Qed.
Lemma lem4535607 {_107642 B : Type'} (_53780 : type839 _107642 B) (t : B -> Prop) (s : _107642 -> Prop) (d : B) : (term1154 _107642 B _53780 t s d) = (term1177 _107642 B _53780 t s d).
Proof. exact (EQ_MP (@lem4535606 _107642 B _53780 t s d) (@lem4535581 _107642 B _53780 t s d)). Qed.
Lemma lem4535608 {_107642 B : Type'} (_53780 : type839 _107642 B) (t : B -> Prop) (s : _107642 -> Prop) (d : B) : (term1071 _107642 B _53780 t s d) = (term1177 _107642 B _53780 t s d).
Proof. exact (TRANS (@lem4535577 _107642 B _53780 t s d) (@lem4535607 _107642 B _53780 t s d)). Qed.
Lemma lem4535609 {_107642 B : Type'} (_53780 : type839 _107642 B) (t : B -> Prop) (s : _107642 -> Prop) : (term1078 _107642 B _53780 t s) = (term1178 _107642 B _53780 t s).
Proof. exact (fun_ext (fun d : B => @lem4535608 _107642 B _53780 t s d)). Qed.
Lemma lem4535610 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem4535611 {_107642 B : Type'} (_53780 : type839 _107642 B) (t : B -> Prop) (s : _107642 -> Prop) : (term1093 _107642 B _53780 t s) = (term1179 _107642 B _53780 t s).
Proof. exact (MK_COMB (@lem4535610 B) (@lem4535609 _107642 B _53780 t s)). Qed.
Lemma lem4535613 {A B : Type'} (P : type1413 A B) : (term907 A B P) = (term908 A B P).
Proof. exact (EQ_MP (@lem18899 A B P) (@lem18898 A B P)). Qed.
Lemma lem4535614 {_107642 B : Type'} (P : type1435 _107642 B) : (term1180 _107642 B P) = (term1181 _107642 B P).
Proof. exact (@lem4535613 B (type549 _107642 B) P). Qed.
Lemma lem4535615 {_107642 B : Type'} (_53780 : type839 _107642 B) (t : B -> Prop) (s : _107642 -> Prop) : (term1182 _107642 B _53780 t s) = (term1183 _107642 B _53780 t s).
Proof. exact (@lem4535614 _107642 B (term1184 _107642 B _53780 t s)). Qed.
Lemma lem4535616 {_107642 B : Type'} (_53780 : type839 _107642 B) (t : B -> Prop) (s : _107642 -> Prop) (d : B) : (term1185 _107642 B _53780 t s d) = (term1176 _107642 B _53780 t s d).
Proof. exact (eq_refl (term1185 _107642 B _53780 t s d)). Qed.
Lemma lem4535617 {_107642 B : Type'} (f : type549 _107642 B) : f = f.
Proof. exact (eq_refl f). Qed.
Lemma lem4535618 {_107642 B : Type'} (_53780 : type839 _107642 B) (t : B -> Prop) (s : _107642 -> Prop) (d : B) (f : type549 _107642 B) : (term1186 _107642 B _53780 t s d f) = (term1187 _107642 B _53780 t s d f).
Proof. exact (MK_COMB (@lem4535616 _107642 B _53780 t s d) (@lem4535617 _107642 B f)). Qed.
Lemma lem4535619 {_107642 B : Type'} (_53780 : type839 _107642 B) (t : B -> Prop) (s : _107642 -> Prop) (d : B) (f : type549 _107642 B) : (term1187 _107642 B _53780 t s d f) = (term1174 _107642 B _53780 t s d f).
Proof. exact (eq_refl (term1187 _107642 B _53780 t s d f)). Qed.
Lemma lem4535620 {_107642 B : Type'} (_53780 : type839 _107642 B) (t : B -> Prop) (s : _107642 -> Prop) (d : B) (f : type549 _107642 B) : (term1186 _107642 B _53780 t s d f) = (term1174 _107642 B _53780 t s d f).
Proof. exact (TRANS (@lem4535618 _107642 B _53780 t s d f) (@lem4535619 _107642 B _53780 t s d f)). Qed.
Lemma lem4535621 {_107642 B : Type'} (_53780 : type839 _107642 B) (t : B -> Prop) (s : _107642 -> Prop) (d : B) : (term1188 _107642 B _53780 t s d) = (term1176 _107642 B _53780 t s d).
Proof. exact (fun_ext (fun f : type549 _107642 B => @lem4535620 _107642 B _53780 t s d f)). Qed.
Lemma lem4535622 {_107642 B : Type'} : (@ex ((_107642 -> B) -> _107642 -> B)) = (@ex ((_107642 -> B) -> _107642 -> B)).
Proof. exact (eq_refl (@ex ((_107642 -> B) -> _107642 -> B))). Qed.
Lemma lem4535623 {_107642 B : Type'} (_53780 : type839 _107642 B) (t : B -> Prop) (s : _107642 -> Prop) (d : B) : (term1189 _107642 B _53780 t s d) = (term1177 _107642 B _53780 t s d).
Proof. exact (MK_COMB (@lem4535622 _107642 B) (@lem4535621 _107642 B _53780 t s d)). Qed.
Lemma lem4535624 {_107642 B : Type'} (_53780 : type839 _107642 B) (t : B -> Prop) (s : _107642 -> Prop) : (term1190 _107642 B _53780 t s) = (term1178 _107642 B _53780 t s).
Proof. exact (fun_ext (fun d : B => @lem4535623 _107642 B _53780 t s d)). Qed.
Lemma lem4535625 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem4535626 {_107642 B : Type'} (_53780 : type839 _107642 B) (t : B -> Prop) (s : _107642 -> Prop) : (term1182 _107642 B _53780 t s) = (term1179 _107642 B _53780 t s).
Proof. exact (MK_COMB (@lem4535625 B) (@lem4535624 _107642 B _53780 t s)). Qed.
Lemma lem4535627 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4535628 {_107642 B : Type'} (_53780 : type839 _107642 B) (t : B -> Prop) (s : _107642 -> Prop) : (term1191 _107642 B _53780 t s) = (term1192 _107642 B _53780 t s).
Proof. exact (MK_COMB (@lem4535627) (@lem4535626 _107642 B _53780 t s)). Qed.
Lemma lem4535629 {_107642 B : Type'} (_53780 : type839 _107642 B) (t : B -> Prop) (s : _107642 -> Prop) (d : B) : (term1185 _107642 B _53780 t s d) = (term1176 _107642 B _53780 t s d).
Proof. exact (eq_refl (term1185 _107642 B _53780 t s d)). Qed.
Lemma lem4535630 {_107642 B : Type'} (f : type1444 _107642 B) (d : B) : (f d) = (f d).
Proof. exact (eq_refl (f d)). Qed.
Lemma lem4535631 {_107642 B : Type'} (_53780 : type839 _107642 B) (t : B -> Prop) (s : _107642 -> Prop) (f : type1444 _107642 B) (d : B) : (term1193 _107642 B _53780 t s f d) = (term1194 _107642 B _53780 t s f d).
Proof. exact (MK_COMB (@lem4535629 _107642 B _53780 t s d) (@lem4535630 _107642 B f d)). Qed.
Lemma lem4535632 {_107642 B : Type'} (_53780 : type839 _107642 B) (t : B -> Prop) (s : _107642 -> Prop) (f : type1444 _107642 B) (d : B) : (term1194 _107642 B _53780 t s f d) = (term1195 _107642 B _53780 t s f d).
Proof. exact (eq_refl (term1194 _107642 B _53780 t s f d)). Qed.
Lemma lem4535633 {_107642 B : Type'} (_53780 : type839 _107642 B) (t : B -> Prop) (s : _107642 -> Prop) (f : type1444 _107642 B) (d : B) : (term1193 _107642 B _53780 t s f d) = (term1195 _107642 B _53780 t s f d).
Proof. exact (TRANS (@lem4535631 _107642 B _53780 t s f d) (@lem4535632 _107642 B _53780 t s f d)). Qed.
Lemma lem4535634 {_107642 B : Type'} (_53780 : type839 _107642 B) (t : B -> Prop) (s : _107642 -> Prop) (f : type1444 _107642 B) : (term1196 _107642 B _53780 t s f) = (term1197 _107642 B _53780 t s f).
Proof. exact (fun_ext (fun d : B => @lem4535633 _107642 B _53780 t s f d)). Qed.
Lemma lem4535635 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem4535636 {_107642 B : Type'} (_53780 : type839 _107642 B) (t : B -> Prop) (s : _107642 -> Prop) (f : type1444 _107642 B) : (term1198 _107642 B _53780 t s f) = (term1199 _107642 B _53780 t s f).
Proof. exact (MK_COMB (@lem4535635 B) (@lem4535634 _107642 B _53780 t s f)). Qed.
Lemma lem4535637 {_107642 B : Type'} (_53780 : type839 _107642 B) (t : B -> Prop) (s : _107642 -> Prop) : (term1200 _107642 B _53780 t s) = (term1201 _107642 B _53780 t s).
Proof. exact (fun_ext (fun f : type1444 _107642 B => @lem4535636 _107642 B _53780 t s f)). Qed.
Lemma lem4535638 {_107642 B : Type'} : (@ex (B -> (_107642 -> B) -> _107642 -> B)) = (@ex (B -> (_107642 -> B) -> _107642 -> B)).
Proof. exact (eq_refl (@ex (B -> (_107642 -> B) -> _107642 -> B))). Qed.
Lemma lem4535639 {_107642 B : Type'} (_53780 : type839 _107642 B) (t : B -> Prop) (s : _107642 -> Prop) : (term1183 _107642 B _53780 t s) = (term1202 _107642 B _53780 t s).
Proof. exact (MK_COMB (@lem4535638 _107642 B) (@lem4535637 _107642 B _53780 t s)). Qed.
Lemma lem4535640 {_107642 B : Type'} (_53780 : type839 _107642 B) (t : B -> Prop) (s : _107642 -> Prop) : ((term1182 _107642 B _53780 t s) = (term1183 _107642 B _53780 t s)) = ((term1179 _107642 B _53780 t s) = (term1202 _107642 B _53780 t s)).
Proof. exact (MK_COMB (@lem4535628 _107642 B _53780 t s) (@lem4535639 _107642 B _53780 t s)). Qed.
Lemma lem4535641 {_107642 B : Type'} (_53780 : type839 _107642 B) (t : B -> Prop) (s : _107642 -> Prop) : (term1179 _107642 B _53780 t s) = (term1202 _107642 B _53780 t s).
Proof. exact (EQ_MP (@lem4535640 _107642 B _53780 t s) (@lem4535615 _107642 B _53780 t s)). Qed.
Lemma lem4535642 {_107642 B : Type'} (_53780 : type839 _107642 B) (t : B -> Prop) (s : _107642 -> Prop) : (term1093 _107642 B _53780 t s) = (term1202 _107642 B _53780 t s).
Proof. exact (TRANS (@lem4535611 _107642 B _53780 t s) (@lem4535641 _107642 B _53780 t s)). Qed.
Lemma lem4535643 {_107642 B : Type'} (_53780 : type839 _107642 B) (t : B -> Prop) : (term1100 _107642 B _53780 t) = (term1203 _107642 B _53780 t).
Proof. exact (fun_ext (fun s : _107642 -> Prop => @lem4535642 _107642 B _53780 t s)). Qed.
Lemma lem4535644 {_107642 : Type'} : (@all (_107642 -> Prop)) = (@all (_107642 -> Prop)).
Proof. exact (eq_refl (@all (_107642 -> Prop))). Qed.
Lemma lem4535645 {_107642 B : Type'} (_53780 : type839 _107642 B) (t : B -> Prop) : (term1115 _107642 B _53780 t) = (term1204 _107642 B _53780 t).
Proof. exact (MK_COMB (@lem4535644 _107642) (@lem4535643 _107642 B _53780 t)). Qed.
Lemma lem4535647 {A B : Type'} (P : type1413 A B) : (term907 A B P) = (term908 A B P).
Proof. exact (EQ_MP (@lem18899 A B P) (@lem18898 A B P)). Qed.
Lemma lem4535648 {_107642 B : Type'} (P : type647 _107642 B) : (term1205 _107642 B P) = (term1206 _107642 B P).
Proof. exact (@lem4535647 (_107642 -> Prop) (type1444 _107642 B) P). Qed.
Lemma lem4535649 {_107642 B : Type'} (_53780 : type839 _107642 B) (t : B -> Prop) : (term1207 _107642 B _53780 t) = (term1208 _107642 B _53780 t).
Proof. exact (@lem4535648 _107642 B (term1209 _107642 B _53780 t)). Qed.
Lemma lem4535650 {_107642 B : Type'} (_53780 : type839 _107642 B) (t : B -> Prop) (s : _107642 -> Prop) : (term1210 _107642 B _53780 t s) = (term1201 _107642 B _53780 t s).
Proof. exact (eq_refl (term1210 _107642 B _53780 t s)). Qed.
Lemma lem4535651 {_107642 B : Type'} (f : type1444 _107642 B) : f = f.
Proof. exact (eq_refl f). Qed.
Lemma lem4535652 {_107642 B : Type'} (_53780 : type839 _107642 B) (t : B -> Prop) (s : _107642 -> Prop) (f : type1444 _107642 B) : (term1211 _107642 B _53780 t s f) = (term1212 _107642 B _53780 t s f).
Proof. exact (MK_COMB (@lem4535650 _107642 B _53780 t s) (@lem4535651 _107642 B f)). Qed.
Lemma lem4535653 {_107642 B : Type'} (_53780 : type839 _107642 B) (t : B -> Prop) (s : _107642 -> Prop) (f : type1444 _107642 B) : (term1212 _107642 B _53780 t s f) = (term1199 _107642 B _53780 t s f).
Proof. exact (eq_refl (term1212 _107642 B _53780 t s f)). Qed.
Lemma lem4535654 {_107642 B : Type'} (_53780 : type839 _107642 B) (t : B -> Prop) (s : _107642 -> Prop) (f : type1444 _107642 B) : (term1211 _107642 B _53780 t s f) = (term1199 _107642 B _53780 t s f).
Proof. exact (TRANS (@lem4535652 _107642 B _53780 t s f) (@lem4535653 _107642 B _53780 t s f)). Qed.
Lemma lem4535655 {_107642 B : Type'} (_53780 : type839 _107642 B) (t : B -> Prop) (s : _107642 -> Prop) : (term1213 _107642 B _53780 t s) = (term1201 _107642 B _53780 t s).
Proof. exact (fun_ext (fun f : type1444 _107642 B => @lem4535654 _107642 B _53780 t s f)). Qed.
Lemma lem4535656 {_107642 B : Type'} : (@ex (B -> (_107642 -> B) -> _107642 -> B)) = (@ex (B -> (_107642 -> B) -> _107642 -> B)).
Proof. exact (eq_refl (@ex (B -> (_107642 -> B) -> _107642 -> B))). Qed.
Lemma lem4535657 {_107642 B : Type'} (_53780 : type839 _107642 B) (t : B -> Prop) (s : _107642 -> Prop) : (term1214 _107642 B _53780 t s) = (term1202 _107642 B _53780 t s).
Proof. exact (MK_COMB (@lem4535656 _107642 B) (@lem4535655 _107642 B _53780 t s)). Qed.
Lemma lem4535658 {_107642 B : Type'} (_53780 : type839 _107642 B) (t : B -> Prop) : (term1215 _107642 B _53780 t) = (term1203 _107642 B _53780 t).
Proof. exact (fun_ext (fun s : _107642 -> Prop => @lem4535657 _107642 B _53780 t s)). Qed.
Lemma lem4535659 {_107642 : Type'} : (@all (_107642 -> Prop)) = (@all (_107642 -> Prop)).
Proof. exact (eq_refl (@all (_107642 -> Prop))). Qed.
Lemma lem4535660 {_107642 B : Type'} (_53780 : type839 _107642 B) (t : B -> Prop) : (term1207 _107642 B _53780 t) = (term1204 _107642 B _53780 t).
Proof. exact (MK_COMB (@lem4535659 _107642) (@lem4535658 _107642 B _53780 t)). Qed.
Lemma lem4535661 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4535662 {_107642 B : Type'} (_53780 : type839 _107642 B) (t : B -> Prop) : (term1216 _107642 B _53780 t) = (term1217 _107642 B _53780 t).
Proof. exact (MK_COMB (@lem4535661) (@lem4535660 _107642 B _53780 t)). Qed.
Lemma lem4535663 {_107642 B : Type'} (_53780 : type839 _107642 B) (t : B -> Prop) (s : _107642 -> Prop) : (term1210 _107642 B _53780 t s) = (term1201 _107642 B _53780 t s).
Proof. exact (eq_refl (term1210 _107642 B _53780 t s)). Qed.
Lemma lem4535664 {_107642 B : Type'} (f : type673 _107642 B) (s : _107642 -> Prop) : (f s) = (f s).
Proof. exact (eq_refl (f s)). Qed.
Lemma lem4535665 {_107642 B : Type'} (_53780 : type839 _107642 B) (t : B -> Prop) (f : type673 _107642 B) (s : _107642 -> Prop) : (term1218 _107642 B _53780 t f s) = (term1219 _107642 B _53780 t f s).
Proof. exact (MK_COMB (@lem4535663 _107642 B _53780 t s) (@lem4535664 _107642 B f s)). Qed.
Lemma lem4535666 {_107642 B : Type'} (_53780 : type839 _107642 B) (t : B -> Prop) (f : type673 _107642 B) (s : _107642 -> Prop) : (term1219 _107642 B _53780 t f s) = (term1220 _107642 B _53780 t f s).
Proof. exact (eq_refl (term1219 _107642 B _53780 t f s)). Qed.
Lemma lem4535667 {_107642 B : Type'} (_53780 : type839 _107642 B) (t : B -> Prop) (f : type673 _107642 B) (s : _107642 -> Prop) : (term1218 _107642 B _53780 t f s) = (term1220 _107642 B _53780 t f s).
Proof. exact (TRANS (@lem4535665 _107642 B _53780 t f s) (@lem4535666 _107642 B _53780 t f s)). Qed.
Lemma lem4535668 {_107642 B : Type'} (_53780 : type839 _107642 B) (t : B -> Prop) (f : type673 _107642 B) : (term1221 _107642 B _53780 t f) = (term1222 _107642 B _53780 t f).
Proof. exact (fun_ext (fun s : _107642 -> Prop => @lem4535667 _107642 B _53780 t f s)). Qed.
Lemma lem4535669 {_107642 : Type'} : (@all (_107642 -> Prop)) = (@all (_107642 -> Prop)).
Proof. exact (eq_refl (@all (_107642 -> Prop))). Qed.
Lemma lem4535670 {_107642 B : Type'} (_53780 : type839 _107642 B) (t : B -> Prop) (f : type673 _107642 B) : (term1223 _107642 B _53780 t f) = (term1224 _107642 B _53780 t f).
Proof. exact (MK_COMB (@lem4535669 _107642) (@lem4535668 _107642 B _53780 t f)). Qed.
Lemma lem4535671 {_107642 B : Type'} (_53780 : type839 _107642 B) (t : B -> Prop) : (term1225 _107642 B _53780 t) = (term1226 _107642 B _53780 t).
Proof. exact (fun_ext (fun f : type673 _107642 B => @lem4535670 _107642 B _53780 t f)). Qed.
Lemma lem4535672 {_107642 B : Type'} : (@ex ((_107642 -> Prop) -> B -> (_107642 -> B) -> _107642 -> B)) = (@ex ((_107642 -> Prop) -> B -> (_107642 -> B) -> _107642 -> B)).
Proof. exact (eq_refl (@ex ((_107642 -> Prop) -> B -> (_107642 -> B) -> _107642 -> B))). Qed.
Lemma lem4535673 {_107642 B : Type'} (_53780 : type839 _107642 B) (t : B -> Prop) : (term1208 _107642 B _53780 t) = (term1227 _107642 B _53780 t).
Proof. exact (MK_COMB (@lem4535672 _107642 B) (@lem4535671 _107642 B _53780 t)). Qed.
Lemma lem4535674 {_107642 B : Type'} (_53780 : type839 _107642 B) (t : B -> Prop) : ((term1207 _107642 B _53780 t) = (term1208 _107642 B _53780 t)) = ((term1204 _107642 B _53780 t) = (term1227 _107642 B _53780 t)).
Proof. exact (MK_COMB (@lem4535662 _107642 B _53780 t) (@lem4535673 _107642 B _53780 t)). Qed.
Lemma lem4535675 {_107642 B : Type'} (_53780 : type839 _107642 B) (t : B -> Prop) : (term1204 _107642 B _53780 t) = (term1227 _107642 B _53780 t).
Proof. exact (EQ_MP (@lem4535674 _107642 B _53780 t) (@lem4535649 _107642 B _53780 t)). Qed.
Lemma lem4535676 {_107642 B : Type'} (_53780 : type839 _107642 B) (t : B -> Prop) : (term1115 _107642 B _53780 t) = (term1227 _107642 B _53780 t).
Proof. exact (TRANS (@lem4535645 _107642 B _53780 t) (@lem4535675 _107642 B _53780 t)). Qed.
Lemma lem4535677 {_107642 B : Type'} (_53780 : type839 _107642 B) : (term1122 _107642 B _53780) = (term1228 _107642 B _53780).
Proof. exact (fun_ext (fun t : B -> Prop => @lem4535676 _107642 B _53780 t)). Qed.
Lemma lem4535678 {B : Type'} : (@all (B -> Prop)) = (@all (B -> Prop)).
Proof. exact (eq_refl (@all (B -> Prop))). Qed.
Lemma lem4535679 {_107642 B : Type'} (_53780 : type839 _107642 B) : (term1137 _107642 B _53780) = (term1229 _107642 B _53780).
Proof. exact (MK_COMB (@lem4535678 B) (@lem4535677 _107642 B _53780)). Qed.
Lemma lem4535681 {A B : Type'} (P : type1413 A B) : (term907 A B P) = (term908 A B P).
Proof. exact (EQ_MP (@lem18899 A B P) (@lem18898 A B P)). Qed.
Lemma lem4535682 {_107642 B : Type'} (P : type820 _107642 B) : (term1230 _107642 B P) = (term1231 _107642 B P).
Proof. exact (@lem4535681 (B -> Prop) (type673 _107642 B) P). Qed.
Lemma lem4535683 {_107642 B : Type'} (_53780 : type839 _107642 B) : (term1232 _107642 B _53780) = (term1233 _107642 B _53780).
Proof. exact (@lem4535682 _107642 B (term1234 _107642 B _53780)). Qed.
Lemma lem4535684 {_107642 B : Type'} (_53780 : type839 _107642 B) (t : B -> Prop) : (term1235 _107642 B _53780 t) = (term1226 _107642 B _53780 t).
Proof. exact (eq_refl (term1235 _107642 B _53780 t)). Qed.
Lemma lem4535685 {_107642 B : Type'} (f : type673 _107642 B) : f = f.
Proof. exact (eq_refl f). Qed.
Lemma lem4535686 {_107642 B : Type'} (_53780 : type839 _107642 B) (t : B -> Prop) (f : type673 _107642 B) : (term1236 _107642 B _53780 t f) = (term1237 _107642 B _53780 t f).
Proof. exact (MK_COMB (@lem4535684 _107642 B _53780 t) (@lem4535685 _107642 B f)). Qed.
Lemma lem4535687 {_107642 B : Type'} (_53780 : type839 _107642 B) (t : B -> Prop) (f : type673 _107642 B) : (term1237 _107642 B _53780 t f) = (term1224 _107642 B _53780 t f).
Proof. exact (eq_refl (term1237 _107642 B _53780 t f)). Qed.
Lemma lem4535688 {_107642 B : Type'} (_53780 : type839 _107642 B) (t : B -> Prop) (f : type673 _107642 B) : (term1236 _107642 B _53780 t f) = (term1224 _107642 B _53780 t f).
Proof. exact (TRANS (@lem4535686 _107642 B _53780 t f) (@lem4535687 _107642 B _53780 t f)). Qed.
Lemma lem4535689 {_107642 B : Type'} (_53780 : type839 _107642 B) (t : B -> Prop) : (term1238 _107642 B _53780 t) = (term1226 _107642 B _53780 t).
Proof. exact (fun_ext (fun f : type673 _107642 B => @lem4535688 _107642 B _53780 t f)). Qed.
Lemma lem4535690 {_107642 B : Type'} : (@ex ((_107642 -> Prop) -> B -> (_107642 -> B) -> _107642 -> B)) = (@ex ((_107642 -> Prop) -> B -> (_107642 -> B) -> _107642 -> B)).
Proof. exact (eq_refl (@ex ((_107642 -> Prop) -> B -> (_107642 -> B) -> _107642 -> B))). Qed.
Lemma lem4535691 {_107642 B : Type'} (_53780 : type839 _107642 B) (t : B -> Prop) : (term1239 _107642 B _53780 t) = (term1227 _107642 B _53780 t).
Proof. exact (MK_COMB (@lem4535690 _107642 B) (@lem4535689 _107642 B _53780 t)). Qed.
Lemma lem4535692 {_107642 B : Type'} (_53780 : type839 _107642 B) : (term1240 _107642 B _53780) = (term1228 _107642 B _53780).
Proof. exact (fun_ext (fun t : B -> Prop => @lem4535691 _107642 B _53780 t)). Qed.
Lemma lem4535693 {B : Type'} : (@all (B -> Prop)) = (@all (B -> Prop)).
Proof. exact (eq_refl (@all (B -> Prop))). Qed.
Lemma lem4535694 {_107642 B : Type'} (_53780 : type839 _107642 B) : (term1232 _107642 B _53780) = (term1229 _107642 B _53780).
Proof. exact (MK_COMB (@lem4535693 B) (@lem4535692 _107642 B _53780)). Qed.
Lemma lem4535695 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4535696 {_107642 B : Type'} (_53780 : type839 _107642 B) : (term1241 _107642 B _53780) = (term1242 _107642 B _53780).
Proof. exact (MK_COMB (@lem4535695) (@lem4535694 _107642 B _53780)). Qed.
Lemma lem4535697 {_107642 B : Type'} (_53780 : type839 _107642 B) (t : B -> Prop) : (term1235 _107642 B _53780 t) = (term1226 _107642 B _53780 t).
Proof. exact (eq_refl (term1235 _107642 B _53780 t)). Qed.
Lemma lem4535698 {_107642 B : Type'} (f : type838 _107642 B) (t : B -> Prop) : (f t) = (f t).
Proof. exact (eq_refl (f t)). Qed.
Lemma lem4535699 {_107642 B : Type'} (_53780 : type839 _107642 B) (f : type838 _107642 B) (t : B -> Prop) : (term1243 _107642 B _53780 f t) = (term1244 _107642 B _53780 f t).
Proof. exact (MK_COMB (@lem4535697 _107642 B _53780 t) (@lem4535698 _107642 B f t)). Qed.
Lemma lem4535700 {_107642 B : Type'} (_53780 : type839 _107642 B) (f : type838 _107642 B) (t : B -> Prop) : (term1244 _107642 B _53780 f t) = (term1245 _107642 B _53780 f t).
Proof. exact (eq_refl (term1244 _107642 B _53780 f t)). Qed.
Lemma lem4535701 {_107642 B : Type'} (_53780 : type839 _107642 B) (f : type838 _107642 B) (t : B -> Prop) : (term1243 _107642 B _53780 f t) = (term1245 _107642 B _53780 f t).
Proof. exact (TRANS (@lem4535699 _107642 B _53780 f t) (@lem4535700 _107642 B _53780 f t)). Qed.
Lemma lem4535702 {_107642 B : Type'} (_53780 : type839 _107642 B) (f : type838 _107642 B) : (term1246 _107642 B _53780 f) = (term1247 _107642 B _53780 f).
Proof. exact (fun_ext (fun t : B -> Prop => @lem4535701 _107642 B _53780 f t)). Qed.
Lemma lem4535703 {B : Type'} : (@all (B -> Prop)) = (@all (B -> Prop)).
Proof. exact (eq_refl (@all (B -> Prop))). Qed.
Lemma lem4535704 {_107642 B : Type'} (_53780 : type839 _107642 B) (f : type838 _107642 B) : (term1248 _107642 B _53780 f) = (term1249 _107642 B _53780 f).
Proof. exact (MK_COMB (@lem4535703 B) (@lem4535702 _107642 B _53780 f)). Qed.
Lemma lem4535705 {_107642 B : Type'} (_53780 : type839 _107642 B) : (term1250 _107642 B _53780) = (term1251 _107642 B _53780).
Proof. exact (fun_ext (fun f : type838 _107642 B => @lem4535704 _107642 B _53780 f)). Qed.
Lemma lem4535706 {_107642 B : Type'} : (@ex ((B -> Prop) -> (_107642 -> Prop) -> B -> (_107642 -> B) -> _107642 -> B)) = (@ex ((B -> Prop) -> (_107642 -> Prop) -> B -> (_107642 -> B) -> _107642 -> B)).
Proof. exact (eq_refl (@ex ((B -> Prop) -> (_107642 -> Prop) -> B -> (_107642 -> B) -> _107642 -> B))). Qed.
Lemma lem4535707 {_107642 B : Type'} (_53780 : type839 _107642 B) : (term1233 _107642 B _53780) = (term1252 _107642 B _53780).
Proof. exact (MK_COMB (@lem4535706 _107642 B) (@lem4535705 _107642 B _53780)). Qed.
Lemma lem4535708 {_107642 B : Type'} (_53780 : type839 _107642 B) : ((term1232 _107642 B _53780) = (term1233 _107642 B _53780)) = ((term1229 _107642 B _53780) = (term1252 _107642 B _53780)).
Proof. exact (MK_COMB (@lem4535696 _107642 B _53780) (@lem4535707 _107642 B _53780)). Qed.
Lemma lem4535709 {_107642 B : Type'} (_53780 : type839 _107642 B) : (term1229 _107642 B _53780) = (term1252 _107642 B _53780).
Proof. exact (EQ_MP (@lem4535708 _107642 B _53780) (@lem4535683 _107642 B _53780)). Qed.
Lemma lem4535710 {_107642 B : Type'} (_53780 : type839 _107642 B) : (term1137 _107642 B _53780) = (term1252 _107642 B _53780).
Proof. exact (TRANS (@lem4535679 _107642 B _53780) (@lem4535709 _107642 B _53780)). Qed.
Lemma lem4535711 {_107642 B : Type'} (_53780 : type839 _107642 B) : (term1134 _107642 B _53780) = (term1134 _107642 B _53780).
Proof. exact (eq_refl (term1134 _107642 B _53780)). Qed.
Lemma lem4535712 {_107642 B : Type'} (_53780 : type839 _107642 B) : (term1138 _107642 B _53780) = (term1253 _107642 B _53780).
Proof. exact (MK_COMB (@lem4535711 _107642 B _53780) (@lem4535710 _107642 B _53780)). Qed.
Lemma lem4535714 {A : Type'} (P : Prop) (Q : A -> Prop) : (term1008 A P Q) = (term1009 A P Q).
Proof. exact (EQ_MP (@lem18929 A P Q) (@lem18928 A P Q)). Qed.
Lemma lem4535715 {_107642 B : Type'} (P : Prop) (Q : type213 _107642 B) : (term1254 _107642 B P Q) = (term1255 _107642 B P Q).
Proof. exact (@lem4535714 (type838 _107642 B) P Q). Qed.
Lemma lem4535716 {_107642 B : Type'} (_53780 : type839 _107642 B) : (term1256 _107642 B _53780) = (term1257 _107642 B _53780).
Proof. exact (@lem4535715 _107642 B (term1132 _107642 B _53780) (term1251 _107642 B _53780)). Qed.
Lemma lem4535717 {_107642 B : Type'} (_53780 : type839 _107642 B) (f : type838 _107642 B) : (term1258 _107642 B _53780 f) = (term1249 _107642 B _53780 f).
Proof. exact (eq_refl (term1258 _107642 B _53780 f)). Qed.
Lemma lem4535718 {_107642 B : Type'} (_53780 : type839 _107642 B) : (term1259 _107642 B _53780) = (term1251 _107642 B _53780).
Proof. exact (fun_ext (fun f : type838 _107642 B => @lem4535717 _107642 B _53780 f)). Qed.
Lemma lem4535719 {_107642 B : Type'} : (@ex ((B -> Prop) -> (_107642 -> Prop) -> B -> (_107642 -> B) -> _107642 -> B)) = (@ex ((B -> Prop) -> (_107642 -> Prop) -> B -> (_107642 -> B) -> _107642 -> B)).
Proof. exact (eq_refl (@ex ((B -> Prop) -> (_107642 -> Prop) -> B -> (_107642 -> B) -> _107642 -> B))). Qed.
Lemma lem4535720 {_107642 B : Type'} (_53780 : type839 _107642 B) : (term1260 _107642 B _53780) = (term1252 _107642 B _53780).
Proof. exact (MK_COMB (@lem4535719 _107642 B) (@lem4535718 _107642 B _53780)). Qed.
Lemma lem4535721 {_107642 B : Type'} (_53780 : type839 _107642 B) : (term1134 _107642 B _53780) = (term1134 _107642 B _53780).
Proof. exact (eq_refl (term1134 _107642 B _53780)). Qed.
Lemma lem4535722 {_107642 B : Type'} (_53780 : type839 _107642 B) : (term1256 _107642 B _53780) = (term1253 _107642 B _53780).
Proof. exact (MK_COMB (@lem4535721 _107642 B _53780) (@lem4535720 _107642 B _53780)). Qed.
Lemma lem4535723 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4535724 {_107642 B : Type'} (_53780 : type839 _107642 B) : (term1261 _107642 B _53780) = (term1262 _107642 B _53780).
Proof. exact (MK_COMB (@lem4535723) (@lem4535722 _107642 B _53780)). Qed.
Lemma lem4535725 {_107642 B : Type'} (_53780 : type839 _107642 B) (f : type838 _107642 B) : (term1258 _107642 B _53780 f) = (term1249 _107642 B _53780 f).
Proof. exact (eq_refl (term1258 _107642 B _53780 f)). Qed.
Lemma lem4535726 {_107642 B : Type'} (_53780 : type839 _107642 B) : (term1134 _107642 B _53780) = (term1134 _107642 B _53780).
Proof. exact (eq_refl (term1134 _107642 B _53780)). Qed.
Lemma lem4535727 {_107642 B : Type'} (_53780 : type839 _107642 B) (f : type838 _107642 B) : (term1263 _107642 B _53780 f) = (term1264 _107642 B _53780 f).
Proof. exact (MK_COMB (@lem4535726 _107642 B _53780) (@lem4535725 _107642 B _53780 f)). Qed.
Lemma lem4535728 {_107642 B : Type'} (_53780 : type839 _107642 B) : (term1265 _107642 B _53780) = (term1266 _107642 B _53780).
Proof. exact (fun_ext (fun f : type838 _107642 B => @lem4535727 _107642 B _53780 f)). Qed.
Lemma lem4535729 {_107642 B : Type'} : (@ex ((B -> Prop) -> (_107642 -> Prop) -> B -> (_107642 -> B) -> _107642 -> B)) = (@ex ((B -> Prop) -> (_107642 -> Prop) -> B -> (_107642 -> B) -> _107642 -> B)).
Proof. exact (eq_refl (@ex ((B -> Prop) -> (_107642 -> Prop) -> B -> (_107642 -> B) -> _107642 -> B))). Qed.
Lemma lem4535730 {_107642 B : Type'} (_53780 : type839 _107642 B) : (term1257 _107642 B _53780) = (term1267 _107642 B _53780).
Proof. exact (MK_COMB (@lem4535729 _107642 B) (@lem4535728 _107642 B _53780)). Qed.
Lemma lem4535731 {_107642 B : Type'} (_53780 : type839 _107642 B) : ((term1256 _107642 B _53780) = (term1257 _107642 B _53780)) = ((term1253 _107642 B _53780) = (term1267 _107642 B _53780)).
Proof. exact (MK_COMB (@lem4535724 _107642 B _53780) (@lem4535730 _107642 B _53780)). Qed.
Lemma lem4535732 {_107642 B : Type'} (_53780 : type839 _107642 B) : (term1253 _107642 B _53780) = (term1267 _107642 B _53780).
Proof. exact (EQ_MP (@lem4535731 _107642 B _53780) (@lem4535716 _107642 B _53780)). Qed.
Lemma lem4535733 {_107642 B : Type'} (_53780 : type839 _107642 B) : (term1138 _107642 B _53780) = (term1267 _107642 B _53780).
Proof. exact (TRANS (@lem4535712 _107642 B _53780) (@lem4535732 _107642 B _53780)). Qed.
Lemma lem4535734 {_107642 B : Type'} (_53780 : type839 _107642 B) : (term1050 _107642 B _53780) = (term1267 _107642 B _53780).
Proof. exact (TRANS (@lem4535554 _107642 B _53780) (@lem4535733 _107642 B _53780)). Qed.
Lemma lem4535735 {_107642 B : Type'} (_53780 : type839 _107642 B) : (term514 _107642 B _53780) = (term1267 _107642 B _53780).
Proof. exact (TRANS (@lem4534894 _107642 B _53780) (@lem4535734 _107642 B _53780)). Qed.
Lemma lem4535736 {_107642 B : Type'} (_53780 : type839 _107642 B) (h1 : term514 _107642 B _53780) : term1267 _107642 B _53780.
Proof. exact (EQ_MP (@lem4535735 _107642 B _53780) (@lem4533065 _107642 B _53780 h1)). Qed.
Lemma lem4535740 {_107639 B : Type'} (GEN_PVAR_148 : _107639 -> B) (t : B -> Prop) (s : _107639 -> Prop) (d : B) (f : _107639 -> B) : (term122 _107639 B GEN_PVAR_148 t s d f) = (term122 _107639 B GEN_PVAR_148 t s d f).
Proof. exact (eq_refl (term122 _107639 B GEN_PVAR_148 t s d f)). Qed.
Lemma lem4535741 {_107639 B : Type'} (P : type572 _107639 B) : (term1024 _107639 B P) = (term1025 _107639 B P).
Proof. exact (@lem18394 (_107639 -> B) P). Qed.
Lemma lem4535742 {_107639 B : Type'} (GEN_PVAR_148 : _107639 -> B) (t : B -> Prop) (s : _107639 -> Prop) (d : B) : (term1026 _107639 B GEN_PVAR_148 t s d) = (term1027 _107639 B GEN_PVAR_148 t s d).
Proof. exact (@lem4535741 _107639 B (term123 _107639 B GEN_PVAR_148 t s d)). Qed.
Lemma lem4535743 {_107639 B : Type'} (GEN_PVAR_148 : _107639 -> B) (t : B -> Prop) (s : _107639 -> Prop) (d : B) (f : _107639 -> B) : (term1028 _107639 B GEN_PVAR_148 t s d f) = (term122 _107639 B GEN_PVAR_148 t s d f).
Proof. exact (eq_refl (term1028 _107639 B GEN_PVAR_148 t s d f)). Qed.
Lemma lem4535744 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem4535746 {_107639 B : Type'} (GEN_PVAR_148 : _107639 -> B) (t : B -> Prop) (s : _107639 -> Prop) (d : B) (f : _107639 -> B) : (term1029 _107639 B GEN_PVAR_148 t s d f) = (term1030 _107639 B GEN_PVAR_148 t s d f).
Proof. exact (MK_COMB (@lem4535744) (@lem4535743 _107639 B GEN_PVAR_148 t s d f)). Qed.
Lemma lem4535747 {_107639 B : Type'} (GEN_PVAR_148 : _107639 -> B) (t : B -> Prop) (s : _107639 -> Prop) (d : B) : (term1031 _107639 B GEN_PVAR_148 t s d) = (term1032 _107639 B GEN_PVAR_148 t s d).
Proof. exact (fun_ext (fun f : _107639 -> B => @lem4535746 _107639 B GEN_PVAR_148 t s d f)). Qed.
Lemma lem4535748 {_107639 B : Type'} : (@all (_107639 -> B)) = (@all (_107639 -> B)).
Proof. exact (eq_refl (@all (_107639 -> B))). Qed.
Lemma lem4535749 {_107639 B : Type'} (GEN_PVAR_148 : _107639 -> B) (t : B -> Prop) (s : _107639 -> Prop) (d : B) : (term1027 _107639 B GEN_PVAR_148 t s d) = (term1033 _107639 B GEN_PVAR_148 t s d).
Proof. exact (MK_COMB (@lem4535748 _107639 B) (@lem4535747 _107639 B GEN_PVAR_148 t s d)). Qed.
Lemma lem4535750 {_107639 B : Type'} (GEN_PVAR_148 : _107639 -> B) (t : B -> Prop) (s : _107639 -> Prop) (d : B) : (term1026 _107639 B GEN_PVAR_148 t s d) = (term1033 _107639 B GEN_PVAR_148 t s d).
Proof. exact (TRANS (@lem4535742 _107639 B GEN_PVAR_148 t s d) (@lem4535749 _107639 B GEN_PVAR_148 t s d)). Qed.
Lemma lem4535751 {_107639 B : Type'} (GEN_PVAR_148 : _107639 -> B) (t : B -> Prop) (s : _107639 -> Prop) (d : B) : (term123 _107639 B GEN_PVAR_148 t s d) = (term123 _107639 B GEN_PVAR_148 t s d).
Proof. exact (fun_ext (fun f : _107639 -> B => @lem4535740 _107639 B GEN_PVAR_148 t s d f)). Qed.
Lemma lem4535752 {_107639 B : Type'} : (@ex (_107639 -> B)) = (@ex (_107639 -> B)).
Proof. exact (eq_refl (@ex (_107639 -> B))). Qed.
Lemma lem4535753 {_107639 B : Type'} (GEN_PVAR_148 : _107639 -> B) (t : B -> Prop) (s : _107639 -> Prop) (d : B) : (term124 _107639 B GEN_PVAR_148 t s d) = (term124 _107639 B GEN_PVAR_148 t s d).
Proof. exact (MK_COMB (@lem4535752 _107639 B) (@lem4535751 _107639 B GEN_PVAR_148 t s d)). Qed.
Lemma lem4535755 {_107639 B : Type'} (_53779 : type839 _107639 B) (t : B -> Prop) (s : _107639 -> Prop) (d : B) (GEN_PVAR_148 : _107639 -> B) : (term1034 _107639 B _53779 t s d GEN_PVAR_148) = (term1034 _107639 B _53779 t s d GEN_PVAR_148).
Proof. exact (eq_refl (term1034 _107639 B _53779 t s d GEN_PVAR_148)). Qed.
Lemma lem4535756 {_107639 B : Type'} (_53779 : type839 _107639 B) (GEN_PVAR_148 : _107639 -> B) (t : B -> Prop) (s : _107639 -> Prop) (d : B) : (term1035 _107639 B _53779 GEN_PVAR_148 t s d) = (term1035 _107639 B _53779 GEN_PVAR_148 t s d).
Proof. exact (MK_COMB (@lem4535755 _107639 B _53779 t s d GEN_PVAR_148) (@lem4535753 _107639 B GEN_PVAR_148 t s d)). Qed.
Lemma lem4535758 {_107639 B : Type'} (_53779 : type839 _107639 B) (t : B -> Prop) (s : _107639 -> Prop) (d : B) (GEN_PVAR_148 : _107639 -> B) : (term1036 _107639 B _53779 t s d GEN_PVAR_148) = (term1036 _107639 B _53779 t s d GEN_PVAR_148).
Proof. exact (eq_refl (term1036 _107639 B _53779 t s d GEN_PVAR_148)). Qed.
Lemma lem4535759 {_107639 B : Type'} (_53779 : type839 _107639 B) (GEN_PVAR_148 : _107639 -> B) (t : B -> Prop) (s : _107639 -> Prop) (d : B) : (term1037 _107639 B _53779 GEN_PVAR_148 t s d) = (term1038 _107639 B _53779 GEN_PVAR_148 t s d).
Proof. exact (MK_COMB (@lem4535758 _107639 B _53779 t s d GEN_PVAR_148) (@lem4535750 _107639 B GEN_PVAR_148 t s d)). Qed.
Lemma lem4535760 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4535761 {_107639 B : Type'} (_53779 : type839 _107639 B) (GEN_PVAR_148 : _107639 -> B) (t : B -> Prop) (s : _107639 -> Prop) (d : B) : (term1039 _107639 B _53779 GEN_PVAR_148 t s d) = (term1040 _107639 B _53779 GEN_PVAR_148 t s d).
Proof. exact (MK_COMB (@lem4535760) (@lem4535759 _107639 B _53779 GEN_PVAR_148 t s d)). Qed.
Lemma lem4535762 {_107639 B : Type'} (_53779 : type839 _107639 B) (GEN_PVAR_148 : _107639 -> B) (t : B -> Prop) (s : _107639 -> Prop) (d : B) : (term1041 _107639 B _53779 GEN_PVAR_148 t s d) = (term1042 _107639 B _53779 GEN_PVAR_148 t s d).
Proof. exact (MK_COMB (@lem4535761 _107639 B _53779 GEN_PVAR_148 t s d) (@lem4535756 _107639 B _53779 GEN_PVAR_148 t s d)). Qed.
Lemma lem4535763 {_107639 B : Type'} (_53779 : type839 _107639 B) (GEN_PVAR_148 : _107639 -> B) (t : B -> Prop) (s : _107639 -> Prop) (d : B) : ((_53779 t s d GEN_PVAR_148) = (term124 _107639 B GEN_PVAR_148 t s d)) = (term1041 _107639 B _53779 GEN_PVAR_148 t s d).
Proof. exact (@lem17784 (_53779 t s d GEN_PVAR_148) (term124 _107639 B GEN_PVAR_148 t s d)). Qed.
Lemma lem4535764 {_107639 B : Type'} (_53779 : type839 _107639 B) (GEN_PVAR_148 : _107639 -> B) (t : B -> Prop) (s : _107639 -> Prop) (d : B) : ((_53779 t s d GEN_PVAR_148) = (term124 _107639 B GEN_PVAR_148 t s d)) = (term1042 _107639 B _53779 GEN_PVAR_148 t s d).
Proof. exact (TRANS (@lem4535763 _107639 B _53779 GEN_PVAR_148 t s d) (@lem4535762 _107639 B _53779 GEN_PVAR_148 t s d)). Qed.
Lemma lem4535765 {_107639 B : Type'} (_53779 : type839 _107639 B) (t : B -> Prop) (s : _107639 -> Prop) (d : B) : (term507 _107639 B _53779 t s d) = (term1043 _107639 B _53779 t s d).
Proof. exact (fun_ext (fun GEN_PVAR_148 : _107639 -> B => @lem4535764 _107639 B _53779 GEN_PVAR_148 t s d)). Qed.
Lemma lem4535766 {_107639 B : Type'} : (@all (_107639 -> B)) = (@all (_107639 -> B)).
Proof. exact (eq_refl (@all (_107639 -> B))). Qed.
Lemma lem4535767 {_107639 B : Type'} (_53779 : type839 _107639 B) (t : B -> Prop) (s : _107639 -> Prop) (d : B) : (term508 _107639 B _53779 t s d) = (term1044 _107639 B _53779 t s d).
Proof. exact (MK_COMB (@lem4535766 _107639 B) (@lem4535765 _107639 B _53779 t s d)). Qed.
Lemma lem4535768 {_107639 B : Type'} (_53779 : type839 _107639 B) (t : B -> Prop) (s : _107639 -> Prop) : (term509 _107639 B _53779 t s) = (term1045 _107639 B _53779 t s).
Proof. exact (fun_ext (fun d : B => @lem4535767 _107639 B _53779 t s d)). Qed.
Lemma lem4535769 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem4535770 {_107639 B : Type'} (_53779 : type839 _107639 B) (t : B -> Prop) (s : _107639 -> Prop) : (term510 _107639 B _53779 t s) = (term1046 _107639 B _53779 t s).
Proof. exact (MK_COMB (@lem4535769 B) (@lem4535768 _107639 B _53779 t s)). Qed.
Lemma lem4535771 {_107639 B : Type'} (_53779 : type839 _107639 B) (t : B -> Prop) : (term511 _107639 B _53779 t) = (term1047 _107639 B _53779 t).
Proof. exact (fun_ext (fun s : _107639 -> Prop => @lem4535770 _107639 B _53779 t s)). Qed.
Lemma lem4535772 {_107639 : Type'} : (@all (_107639 -> Prop)) = (@all (_107639 -> Prop)).
Proof. exact (eq_refl (@all (_107639 -> Prop))). Qed.
Lemma lem4535773 {_107639 B : Type'} (_53779 : type839 _107639 B) (t : B -> Prop) : (term512 _107639 B _53779 t) = (term1048 _107639 B _53779 t).
Proof. exact (MK_COMB (@lem4535772 _107639) (@lem4535771 _107639 B _53779 t)). Qed.
Lemma lem4535774 {_107639 B : Type'} (_53779 : type839 _107639 B) : (term513 _107639 B _53779) = (term1049 _107639 B _53779).
Proof. exact (fun_ext (fun t : B -> Prop => @lem4535773 _107639 B _53779 t)). Qed.
Lemma lem4535775 {B : Type'} : (@all (B -> Prop)) = (@all (B -> Prop)).
Proof. exact (eq_refl (@all (B -> Prop))). Qed.
Lemma lem4535776 {_107639 B : Type'} (_53779 : type839 _107639 B) : (term514 _107639 B _53779) = (term1050 _107639 B _53779).
Proof. exact (MK_COMB (@lem4535775 B) (@lem4535774 _107639 B _53779)). Qed.
Lemma lem4535790 {A : Type'} (P : A -> Prop) (Q : A -> Prop) : (term793 A P Q) = (term794 A P Q).
Proof. exact (EQ_MP (@lem18953 A P Q) (@lem18952 A P Q)). Qed.
Lemma lem4535791 {_107639 B : Type'} (P : type572 _107639 B) (Q : type572 _107639 B) : (term1051 _107639 B P Q) = (term1052 _107639 B P Q).
Proof. exact (@lem4535790 (_107639 -> B) P Q). Qed.
Lemma lem4535792 {_107639 B : Type'} (_53779 : type839 _107639 B) (t : B -> Prop) (s : _107639 -> Prop) (d : B) : (term1053 _107639 B _53779 t s d) = (term1054 _107639 B _53779 t s d).
Proof. exact (@lem4535791 _107639 B (term1055 _107639 B _53779 t s d) (term1056 _107639 B _53779 t s d)). Qed.
Lemma lem4535793 {_107639 B : Type'} (_53779 : type839 _107639 B) (GEN_PVAR_148 : _107639 -> B) (t : B -> Prop) (s : _107639 -> Prop) (d : B) : (term1057 _107639 B _53779 t s d GEN_PVAR_148) = (term1038 _107639 B _53779 GEN_PVAR_148 t s d).
Proof. exact (eq_refl (term1057 _107639 B _53779 t s d GEN_PVAR_148)). Qed.
Lemma lem4535794 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4535795 {_107639 B : Type'} (_53779 : type839 _107639 B) (GEN_PVAR_148 : _107639 -> B) (t : B -> Prop) (s : _107639 -> Prop) (d : B) : (term1058 _107639 B _53779 t s d GEN_PVAR_148) = (term1040 _107639 B _53779 GEN_PVAR_148 t s d).
Proof. exact (MK_COMB (@lem4535794) (@lem4535793 _107639 B _53779 GEN_PVAR_148 t s d)). Qed.
Lemma lem4535796 {_107639 B : Type'} (_53779 : type839 _107639 B) (GEN_PVAR_148 : _107639 -> B) (t : B -> Prop) (s : _107639 -> Prop) (d : B) : (term1059 _107639 B _53779 t s d GEN_PVAR_148) = (term1035 _107639 B _53779 GEN_PVAR_148 t s d).
Proof. exact (eq_refl (term1059 _107639 B _53779 t s d GEN_PVAR_148)). Qed.
Lemma lem4535797 {_107639 B : Type'} (_53779 : type839 _107639 B) (GEN_PVAR_148 : _107639 -> B) (t : B -> Prop) (s : _107639 -> Prop) (d : B) : (term1060 _107639 B _53779 t s d GEN_PVAR_148) = (term1042 _107639 B _53779 GEN_PVAR_148 t s d).
Proof. exact (MK_COMB (@lem4535795 _107639 B _53779 GEN_PVAR_148 t s d) (@lem4535796 _107639 B _53779 GEN_PVAR_148 t s d)). Qed.
Lemma lem4535798 {_107639 B : Type'} (_53779 : type839 _107639 B) (t : B -> Prop) (s : _107639 -> Prop) (d : B) : (term1061 _107639 B _53779 t s d) = (term1043 _107639 B _53779 t s d).
Proof. exact (fun_ext (fun GEN_PVAR_148 : _107639 -> B => @lem4535797 _107639 B _53779 GEN_PVAR_148 t s d)). Qed.
Lemma lem4535799 {_107639 B : Type'} : (@all (_107639 -> B)) = (@all (_107639 -> B)).
Proof. exact (eq_refl (@all (_107639 -> B))). Qed.
Lemma lem4535800 {_107639 B : Type'} (_53779 : type839 _107639 B) (t : B -> Prop) (s : _107639 -> Prop) (d : B) : (term1053 _107639 B _53779 t s d) = (term1044 _107639 B _53779 t s d).
Proof. exact (MK_COMB (@lem4535799 _107639 B) (@lem4535798 _107639 B _53779 t s d)). Qed.
Lemma lem4535801 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4535802 {_107639 B : Type'} (_53779 : type839 _107639 B) (t : B -> Prop) (s : _107639 -> Prop) (d : B) : (term1062 _107639 B _53779 t s d) = (term1063 _107639 B _53779 t s d).
Proof. exact (MK_COMB (@lem4535801) (@lem4535800 _107639 B _53779 t s d)). Qed.
Lemma lem4535803 {_107639 B : Type'} (_53779 : type839 _107639 B) (GEN_PVAR_148 : _107639 -> B) (t : B -> Prop) (s : _107639 -> Prop) (d : B) : (term1057 _107639 B _53779 t s d GEN_PVAR_148) = (term1038 _107639 B _53779 GEN_PVAR_148 t s d).
Proof. exact (eq_refl (term1057 _107639 B _53779 t s d GEN_PVAR_148)). Qed.
Lemma lem4535804 {_107639 B : Type'} (_53779 : type839 _107639 B) (t : B -> Prop) (s : _107639 -> Prop) (d : B) : (term1064 _107639 B _53779 t s d) = (term1055 _107639 B _53779 t s d).
Proof. exact (fun_ext (fun GEN_PVAR_148 : _107639 -> B => @lem4535803 _107639 B _53779 GEN_PVAR_148 t s d)). Qed.
Lemma lem4535805 {_107639 B : Type'} : (@all (_107639 -> B)) = (@all (_107639 -> B)).
Proof. exact (eq_refl (@all (_107639 -> B))). Qed.
Lemma lem4535806 {_107639 B : Type'} (_53779 : type839 _107639 B) (t : B -> Prop) (s : _107639 -> Prop) (d : B) : (term1065 _107639 B _53779 t s d) = (term1066 _107639 B _53779 t s d).
Proof. exact (MK_COMB (@lem4535805 _107639 B) (@lem4535804 _107639 B _53779 t s d)). Qed.
Lemma lem4535807 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4535808 {_107639 B : Type'} (_53779 : type839 _107639 B) (t : B -> Prop) (s : _107639 -> Prop) (d : B) : (term1067 _107639 B _53779 t s d) = (term1068 _107639 B _53779 t s d).
Proof. exact (MK_COMB (@lem4535807) (@lem4535806 _107639 B _53779 t s d)). Qed.
Lemma lem4535809 {_107639 B : Type'} (_53779 : type839 _107639 B) (GEN_PVAR_148 : _107639 -> B) (t : B -> Prop) (s : _107639 -> Prop) (d : B) : (term1059 _107639 B _53779 t s d GEN_PVAR_148) = (term1035 _107639 B _53779 GEN_PVAR_148 t s d).
Proof. exact (eq_refl (term1059 _107639 B _53779 t s d GEN_PVAR_148)). Qed.
Lemma lem4535810 {_107639 B : Type'} (_53779 : type839 _107639 B) (t : B -> Prop) (s : _107639 -> Prop) (d : B) : (term1069 _107639 B _53779 t s d) = (term1056 _107639 B _53779 t s d).
Proof. exact (fun_ext (fun GEN_PVAR_148 : _107639 -> B => @lem4535809 _107639 B _53779 GEN_PVAR_148 t s d)). Qed.
Lemma lem4535811 {_107639 B : Type'} : (@all (_107639 -> B)) = (@all (_107639 -> B)).
Proof. exact (eq_refl (@all (_107639 -> B))). Qed.
Lemma lem4535812 {_107639 B : Type'} (_53779 : type839 _107639 B) (t : B -> Prop) (s : _107639 -> Prop) (d : B) : (term1070 _107639 B _53779 t s d) = (term1071 _107639 B _53779 t s d).
Proof. exact (MK_COMB (@lem4535811 _107639 B) (@lem4535810 _107639 B _53779 t s d)). Qed.
Lemma lem4535813 {_107639 B : Type'} (_53779 : type839 _107639 B) (t : B -> Prop) (s : _107639 -> Prop) (d : B) : (term1054 _107639 B _53779 t s d) = (term1072 _107639 B _53779 t s d).
Proof. exact (MK_COMB (@lem4535808 _107639 B _53779 t s d) (@lem4535812 _107639 B _53779 t s d)). Qed.
Lemma lem4535814 {_107639 B : Type'} (_53779 : type839 _107639 B) (t : B -> Prop) (s : _107639 -> Prop) (d : B) : ((term1053 _107639 B _53779 t s d) = (term1054 _107639 B _53779 t s d)) = ((term1044 _107639 B _53779 t s d) = (term1072 _107639 B _53779 t s d)).
Proof. exact (MK_COMB (@lem4535802 _107639 B _53779 t s d) (@lem4535813 _107639 B _53779 t s d)). Qed.
Lemma lem4535815 {_107639 B : Type'} (_53779 : type839 _107639 B) (t : B -> Prop) (s : _107639 -> Prop) (d : B) : (term1044 _107639 B _53779 t s d) = (term1072 _107639 B _53779 t s d).
Proof. exact (EQ_MP (@lem4535814 _107639 B _53779 t s d) (@lem4535792 _107639 B _53779 t s d)). Qed.
Lemma lem4535936 {_107639 B : Type'} (_53779 : type839 _107639 B) (t : B -> Prop) (s : _107639 -> Prop) : (term1045 _107639 B _53779 t s) = (term1073 _107639 B _53779 t s).
Proof. exact (fun_ext (fun d : B => @lem4535815 _107639 B _53779 t s d)). Qed.
Lemma lem4535937 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem4535938 {_107639 B : Type'} (_53779 : type839 _107639 B) (t : B -> Prop) (s : _107639 -> Prop) : (term1046 _107639 B _53779 t s) = (term1074 _107639 B _53779 t s).
Proof. exact (MK_COMB (@lem4535937 B) (@lem4535936 _107639 B _53779 t s)). Qed.
Lemma lem4535940 {A : Type'} (P : A -> Prop) (Q : A -> Prop) : (term793 A P Q) = (term794 A P Q).
Proof. exact (EQ_MP (@lem18953 A P Q) (@lem18952 A P Q)). Qed.
Lemma lem4535941 {B : Type'} (P : B -> Prop) (Q : B -> Prop) : (term793 B P Q) = (term794 B P Q).
Proof. exact (@lem4535940 B P Q). Qed.
Lemma lem4535942 {_107639 B : Type'} (_53779 : type839 _107639 B) (t : B -> Prop) (s : _107639 -> Prop) : (term1075 _107639 B _53779 t s) = (term1076 _107639 B _53779 t s).
Proof. exact (@lem4535941 B (term1077 _107639 B _53779 t s) (term1078 _107639 B _53779 t s)). Qed.
Lemma lem4535943 {_107639 B : Type'} (_53779 : type839 _107639 B) (t : B -> Prop) (s : _107639 -> Prop) (d : B) : (term1079 _107639 B _53779 t s d) = (term1066 _107639 B _53779 t s d).
Proof. exact (eq_refl (term1079 _107639 B _53779 t s d)). Qed.
Lemma lem4535944 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4535945 {_107639 B : Type'} (_53779 : type839 _107639 B) (t : B -> Prop) (s : _107639 -> Prop) (d : B) : (term1080 _107639 B _53779 t s d) = (term1068 _107639 B _53779 t s d).
Proof. exact (MK_COMB (@lem4535944) (@lem4535943 _107639 B _53779 t s d)). Qed.
Lemma lem4535946 {_107639 B : Type'} (_53779 : type839 _107639 B) (t : B -> Prop) (s : _107639 -> Prop) (d : B) : (term1081 _107639 B _53779 t s d) = (term1071 _107639 B _53779 t s d).
Proof. exact (eq_refl (term1081 _107639 B _53779 t s d)). Qed.
Lemma lem4535947 {_107639 B : Type'} (_53779 : type839 _107639 B) (t : B -> Prop) (s : _107639 -> Prop) (d : B) : (term1082 _107639 B _53779 t s d) = (term1072 _107639 B _53779 t s d).
Proof. exact (MK_COMB (@lem4535945 _107639 B _53779 t s d) (@lem4535946 _107639 B _53779 t s d)). Qed.
Lemma lem4535948 {_107639 B : Type'} (_53779 : type839 _107639 B) (t : B -> Prop) (s : _107639 -> Prop) : (term1083 _107639 B _53779 t s) = (term1073 _107639 B _53779 t s).
Proof. exact (fun_ext (fun d : B => @lem4535947 _107639 B _53779 t s d)). Qed.
Lemma lem4535949 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem4535950 {_107639 B : Type'} (_53779 : type839 _107639 B) (t : B -> Prop) (s : _107639 -> Prop) : (term1075 _107639 B _53779 t s) = (term1074 _107639 B _53779 t s).
Proof. exact (MK_COMB (@lem4535949 B) (@lem4535948 _107639 B _53779 t s)). Qed.
Lemma lem4535951 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4535952 {_107639 B : Type'} (_53779 : type839 _107639 B) (t : B -> Prop) (s : _107639 -> Prop) : (term1084 _107639 B _53779 t s) = (term1085 _107639 B _53779 t s).
Proof. exact (MK_COMB (@lem4535951) (@lem4535950 _107639 B _53779 t s)). Qed.
Lemma lem4535953 {_107639 B : Type'} (_53779 : type839 _107639 B) (t : B -> Prop) (s : _107639 -> Prop) (d : B) : (term1079 _107639 B _53779 t s d) = (term1066 _107639 B _53779 t s d).
Proof. exact (eq_refl (term1079 _107639 B _53779 t s d)). Qed.
Lemma lem4535954 {_107639 B : Type'} (_53779 : type839 _107639 B) (t : B -> Prop) (s : _107639 -> Prop) : (term1086 _107639 B _53779 t s) = (term1077 _107639 B _53779 t s).
Proof. exact (fun_ext (fun d : B => @lem4535953 _107639 B _53779 t s d)). Qed.
Lemma lem4535955 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem4535956 {_107639 B : Type'} (_53779 : type839 _107639 B) (t : B -> Prop) (s : _107639 -> Prop) : (term1087 _107639 B _53779 t s) = (term1088 _107639 B _53779 t s).
Proof. exact (MK_COMB (@lem4535955 B) (@lem4535954 _107639 B _53779 t s)). Qed.
Lemma lem4535957 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4535958 {_107639 B : Type'} (_53779 : type839 _107639 B) (t : B -> Prop) (s : _107639 -> Prop) : (term1089 _107639 B _53779 t s) = (term1090 _107639 B _53779 t s).
Proof. exact (MK_COMB (@lem4535957) (@lem4535956 _107639 B _53779 t s)). Qed.
Lemma lem4535959 {_107639 B : Type'} (_53779 : type839 _107639 B) (t : B -> Prop) (s : _107639 -> Prop) (d : B) : (term1081 _107639 B _53779 t s d) = (term1071 _107639 B _53779 t s d).
Proof. exact (eq_refl (term1081 _107639 B _53779 t s d)). Qed.
Lemma lem4535960 {_107639 B : Type'} (_53779 : type839 _107639 B) (t : B -> Prop) (s : _107639 -> Prop) : (term1091 _107639 B _53779 t s) = (term1078 _107639 B _53779 t s).
Proof. exact (fun_ext (fun d : B => @lem4535959 _107639 B _53779 t s d)). Qed.
Lemma lem4535961 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem4535962 {_107639 B : Type'} (_53779 : type839 _107639 B) (t : B -> Prop) (s : _107639 -> Prop) : (term1092 _107639 B _53779 t s) = (term1093 _107639 B _53779 t s).
Proof. exact (MK_COMB (@lem4535961 B) (@lem4535960 _107639 B _53779 t s)). Qed.
Lemma lem4535963 {_107639 B : Type'} (_53779 : type839 _107639 B) (t : B -> Prop) (s : _107639 -> Prop) : (term1076 _107639 B _53779 t s) = (term1094 _107639 B _53779 t s).
Proof. exact (MK_COMB (@lem4535958 _107639 B _53779 t s) (@lem4535962 _107639 B _53779 t s)). Qed.
Lemma lem4535964 {_107639 B : Type'} (_53779 : type839 _107639 B) (t : B -> Prop) (s : _107639 -> Prop) : ((term1075 _107639 B _53779 t s) = (term1076 _107639 B _53779 t s)) = ((term1074 _107639 B _53779 t s) = (term1094 _107639 B _53779 t s)).
Proof. exact (MK_COMB (@lem4535952 _107639 B _53779 t s) (@lem4535963 _107639 B _53779 t s)). Qed.
Lemma lem4535965 {_107639 B : Type'} (_53779 : type839 _107639 B) (t : B -> Prop) (s : _107639 -> Prop) : (term1074 _107639 B _53779 t s) = (term1094 _107639 B _53779 t s).
Proof. exact (EQ_MP (@lem4535964 _107639 B _53779 t s) (@lem4535942 _107639 B _53779 t s)). Qed.
Lemma lem4536094 {_107639 B : Type'} (_53779 : type839 _107639 B) (t : B -> Prop) (s : _107639 -> Prop) : (term1046 _107639 B _53779 t s) = (term1094 _107639 B _53779 t s).
Proof. exact (TRANS (@lem4535938 _107639 B _53779 t s) (@lem4535965 _107639 B _53779 t s)). Qed.
Lemma lem4536095 {_107639 B : Type'} (_53779 : type839 _107639 B) (t : B -> Prop) : (term1047 _107639 B _53779 t) = (term1095 _107639 B _53779 t).
Proof. exact (fun_ext (fun s : _107639 -> Prop => @lem4536094 _107639 B _53779 t s)). Qed.
Lemma lem4536096 {_107639 : Type'} : (@all (_107639 -> Prop)) = (@all (_107639 -> Prop)).
Proof. exact (eq_refl (@all (_107639 -> Prop))). Qed.
Lemma lem4536097 {_107639 B : Type'} (_53779 : type839 _107639 B) (t : B -> Prop) : (term1048 _107639 B _53779 t) = (term1096 _107639 B _53779 t).
Proof. exact (MK_COMB (@lem4536096 _107639) (@lem4536095 _107639 B _53779 t)). Qed.
Lemma lem4536099 {A : Type'} (P : A -> Prop) (Q : A -> Prop) : (term793 A P Q) = (term794 A P Q).
Proof. exact (EQ_MP (@lem18953 A P Q) (@lem18952 A P Q)). Qed.
Lemma lem4536100 {_107639 : Type'} (P : type686 _107639) (Q : type686 _107639) : (term843 _107639 P Q) = (term844 _107639 P Q).
Proof. exact (@lem4536099 (_107639 -> Prop) P Q). Qed.
Lemma lem4536101 {_107639 B : Type'} (_53779 : type839 _107639 B) (t : B -> Prop) : (term1097 _107639 B _53779 t) = (term1098 _107639 B _53779 t).
Proof. exact (@lem4536100 _107639 (term1099 _107639 B _53779 t) (term1100 _107639 B _53779 t)). Qed.
Lemma lem4536102 {_107639 B : Type'} (_53779 : type839 _107639 B) (t : B -> Prop) (s : _107639 -> Prop) : (term1101 _107639 B _53779 t s) = (term1088 _107639 B _53779 t s).
Proof. exact (eq_refl (term1101 _107639 B _53779 t s)). Qed.
Lemma lem4536103 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4536104 {_107639 B : Type'} (_53779 : type839 _107639 B) (t : B -> Prop) (s : _107639 -> Prop) : (term1102 _107639 B _53779 t s) = (term1090 _107639 B _53779 t s).
Proof. exact (MK_COMB (@lem4536103) (@lem4536102 _107639 B _53779 t s)). Qed.
Lemma lem4536105 {_107639 B : Type'} (_53779 : type839 _107639 B) (t : B -> Prop) (s : _107639 -> Prop) : (term1103 _107639 B _53779 t s) = (term1093 _107639 B _53779 t s).
Proof. exact (eq_refl (term1103 _107639 B _53779 t s)). Qed.
Lemma lem4536106 {_107639 B : Type'} (_53779 : type839 _107639 B) (t : B -> Prop) (s : _107639 -> Prop) : (term1104 _107639 B _53779 t s) = (term1094 _107639 B _53779 t s).
Proof. exact (MK_COMB (@lem4536104 _107639 B _53779 t s) (@lem4536105 _107639 B _53779 t s)). Qed.
Lemma lem4536107 {_107639 B : Type'} (_53779 : type839 _107639 B) (t : B -> Prop) : (term1105 _107639 B _53779 t) = (term1095 _107639 B _53779 t).
Proof. exact (fun_ext (fun s : _107639 -> Prop => @lem4536106 _107639 B _53779 t s)). Qed.
Lemma lem4536108 {_107639 : Type'} : (@all (_107639 -> Prop)) = (@all (_107639 -> Prop)).
Proof. exact (eq_refl (@all (_107639 -> Prop))). Qed.
Lemma lem4536109 {_107639 B : Type'} (_53779 : type839 _107639 B) (t : B -> Prop) : (term1097 _107639 B _53779 t) = (term1096 _107639 B _53779 t).
Proof. exact (MK_COMB (@lem4536108 _107639) (@lem4536107 _107639 B _53779 t)). Qed.
Lemma lem4536110 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4536111 {_107639 B : Type'} (_53779 : type839 _107639 B) (t : B -> Prop) : (term1106 _107639 B _53779 t) = (term1107 _107639 B _53779 t).
Proof. exact (MK_COMB (@lem4536110) (@lem4536109 _107639 B _53779 t)). Qed.
Lemma lem4536112 {_107639 B : Type'} (_53779 : type839 _107639 B) (t : B -> Prop) (s : _107639 -> Prop) : (term1101 _107639 B _53779 t s) = (term1088 _107639 B _53779 t s).
Proof. exact (eq_refl (term1101 _107639 B _53779 t s)). Qed.
Lemma lem4536113 {_107639 B : Type'} (_53779 : type839 _107639 B) (t : B -> Prop) : (term1108 _107639 B _53779 t) = (term1099 _107639 B _53779 t).
Proof. exact (fun_ext (fun s : _107639 -> Prop => @lem4536112 _107639 B _53779 t s)). Qed.
Lemma lem4536114 {_107639 : Type'} : (@all (_107639 -> Prop)) = (@all (_107639 -> Prop)).
Proof. exact (eq_refl (@all (_107639 -> Prop))). Qed.
Lemma lem4536115 {_107639 B : Type'} (_53779 : type839 _107639 B) (t : B -> Prop) : (term1109 _107639 B _53779 t) = (term1110 _107639 B _53779 t).
Proof. exact (MK_COMB (@lem4536114 _107639) (@lem4536113 _107639 B _53779 t)). Qed.
Lemma lem4536116 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4536117 {_107639 B : Type'} (_53779 : type839 _107639 B) (t : B -> Prop) : (term1111 _107639 B _53779 t) = (term1112 _107639 B _53779 t).
Proof. exact (MK_COMB (@lem4536116) (@lem4536115 _107639 B _53779 t)). Qed.
Lemma lem4536118 {_107639 B : Type'} (_53779 : type839 _107639 B) (t : B -> Prop) (s : _107639 -> Prop) : (term1103 _107639 B _53779 t s) = (term1093 _107639 B _53779 t s).
Proof. exact (eq_refl (term1103 _107639 B _53779 t s)). Qed.
Lemma lem4536119 {_107639 B : Type'} (_53779 : type839 _107639 B) (t : B -> Prop) : (term1113 _107639 B _53779 t) = (term1100 _107639 B _53779 t).
Proof. exact (fun_ext (fun s : _107639 -> Prop => @lem4536118 _107639 B _53779 t s)). Qed.
Lemma lem4536120 {_107639 : Type'} : (@all (_107639 -> Prop)) = (@all (_107639 -> Prop)).
Proof. exact (eq_refl (@all (_107639 -> Prop))). Qed.
Lemma lem4536121 {_107639 B : Type'} (_53779 : type839 _107639 B) (t : B -> Prop) : (term1114 _107639 B _53779 t) = (term1115 _107639 B _53779 t).
Proof. exact (MK_COMB (@lem4536120 _107639) (@lem4536119 _107639 B _53779 t)). Qed.
Lemma lem4536122 {_107639 B : Type'} (_53779 : type839 _107639 B) (t : B -> Prop) : (term1098 _107639 B _53779 t) = (term1116 _107639 B _53779 t).
Proof. exact (MK_COMB (@lem4536117 _107639 B _53779 t) (@lem4536121 _107639 B _53779 t)). Qed.
Lemma lem4536123 {_107639 B : Type'} (_53779 : type839 _107639 B) (t : B -> Prop) : ((term1097 _107639 B _53779 t) = (term1098 _107639 B _53779 t)) = ((term1096 _107639 B _53779 t) = (term1116 _107639 B _53779 t)).
Proof. exact (MK_COMB (@lem4536111 _107639 B _53779 t) (@lem4536122 _107639 B _53779 t)). Qed.
Lemma lem4536124 {_107639 B : Type'} (_53779 : type839 _107639 B) (t : B -> Prop) : (term1096 _107639 B _53779 t) = (term1116 _107639 B _53779 t).
Proof. exact (EQ_MP (@lem4536123 _107639 B _53779 t) (@lem4536101 _107639 B _53779 t)). Qed.
Lemma lem4536261 {_107639 B : Type'} (_53779 : type839 _107639 B) (t : B -> Prop) : (term1048 _107639 B _53779 t) = (term1116 _107639 B _53779 t).
Proof. exact (TRANS (@lem4536097 _107639 B _53779 t) (@lem4536124 _107639 B _53779 t)). Qed.
Lemma lem4536262 {_107639 B : Type'} (_53779 : type839 _107639 B) : (term1049 _107639 B _53779) = (term1117 _107639 B _53779).
Proof. exact (fun_ext (fun t : B -> Prop => @lem4536261 _107639 B _53779 t)). Qed.
Lemma lem4536263 {B : Type'} : (@all (B -> Prop)) = (@all (B -> Prop)).
Proof. exact (eq_refl (@all (B -> Prop))). Qed.
Lemma lem4536264 {_107639 B : Type'} (_53779 : type839 _107639 B) : (term1050 _107639 B _53779) = (term1118 _107639 B _53779).
Proof. exact (MK_COMB (@lem4536263 B) (@lem4536262 _107639 B _53779)). Qed.
Lemma lem4536266 {A : Type'} (P : A -> Prop) (Q : A -> Prop) : (term793 A P Q) = (term794 A P Q).
Proof. exact (EQ_MP (@lem18953 A P Q) (@lem18952 A P Q)). Qed.
Lemma lem4536267 {B : Type'} (P : type686 B) (Q : type686 B) : (term843 B P Q) = (term844 B P Q).
Proof. exact (@lem4536266 (B -> Prop) P Q). Qed.
Lemma lem4536268 {_107639 B : Type'} (_53779 : type839 _107639 B) : (term1119 _107639 B _53779) = (term1120 _107639 B _53779).
Proof. exact (@lem4536267 B (term1121 _107639 B _53779) (term1122 _107639 B _53779)). Qed.
Lemma lem4536269 {_107639 B : Type'} (_53779 : type839 _107639 B) (t : B -> Prop) : (term1123 _107639 B _53779 t) = (term1110 _107639 B _53779 t).
Proof. exact (eq_refl (term1123 _107639 B _53779 t)). Qed.
Lemma lem4536270 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4536271 {_107639 B : Type'} (_53779 : type839 _107639 B) (t : B -> Prop) : (term1124 _107639 B _53779 t) = (term1112 _107639 B _53779 t).
Proof. exact (MK_COMB (@lem4536270) (@lem4536269 _107639 B _53779 t)). Qed.
Lemma lem4536272 {_107639 B : Type'} (_53779 : type839 _107639 B) (t : B -> Prop) : (term1125 _107639 B _53779 t) = (term1115 _107639 B _53779 t).
Proof. exact (eq_refl (term1125 _107639 B _53779 t)). Qed.
Lemma lem4536273 {_107639 B : Type'} (_53779 : type839 _107639 B) (t : B -> Prop) : (term1126 _107639 B _53779 t) = (term1116 _107639 B _53779 t).
Proof. exact (MK_COMB (@lem4536271 _107639 B _53779 t) (@lem4536272 _107639 B _53779 t)). Qed.
Lemma lem4536274 {_107639 B : Type'} (_53779 : type839 _107639 B) : (term1127 _107639 B _53779) = (term1117 _107639 B _53779).
Proof. exact (fun_ext (fun t : B -> Prop => @lem4536273 _107639 B _53779 t)). Qed.
Lemma lem4536275 {B : Type'} : (@all (B -> Prop)) = (@all (B -> Prop)).
Proof. exact (eq_refl (@all (B -> Prop))). Qed.
Lemma lem4536276 {_107639 B : Type'} (_53779 : type839 _107639 B) : (term1119 _107639 B _53779) = (term1118 _107639 B _53779).
Proof. exact (MK_COMB (@lem4536275 B) (@lem4536274 _107639 B _53779)). Qed.
Lemma lem4536277 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4536278 {_107639 B : Type'} (_53779 : type839 _107639 B) : (term1128 _107639 B _53779) = (term1129 _107639 B _53779).
Proof. exact (MK_COMB (@lem4536277) (@lem4536276 _107639 B _53779)). Qed.
Lemma lem4536279 {_107639 B : Type'} (_53779 : type839 _107639 B) (t : B -> Prop) : (term1123 _107639 B _53779 t) = (term1110 _107639 B _53779 t).
Proof. exact (eq_refl (term1123 _107639 B _53779 t)). Qed.
Lemma lem4536280 {_107639 B : Type'} (_53779 : type839 _107639 B) : (term1130 _107639 B _53779) = (term1121 _107639 B _53779).
Proof. exact (fun_ext (fun t : B -> Prop => @lem4536279 _107639 B _53779 t)). Qed.
Lemma lem4536281 {B : Type'} : (@all (B -> Prop)) = (@all (B -> Prop)).
Proof. exact (eq_refl (@all (B -> Prop))). Qed.
Lemma lem4536282 {_107639 B : Type'} (_53779 : type839 _107639 B) : (term1131 _107639 B _53779) = (term1132 _107639 B _53779).
Proof. exact (MK_COMB (@lem4536281 B) (@lem4536280 _107639 B _53779)). Qed.
Lemma lem4536283 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4536284 {_107639 B : Type'} (_53779 : type839 _107639 B) : (term1133 _107639 B _53779) = (term1134 _107639 B _53779).
Proof. exact (MK_COMB (@lem4536283) (@lem4536282 _107639 B _53779)). Qed.
Lemma lem4536285 {_107639 B : Type'} (_53779 : type839 _107639 B) (t : B -> Prop) : (term1125 _107639 B _53779 t) = (term1115 _107639 B _53779 t).
Proof. exact (eq_refl (term1125 _107639 B _53779 t)). Qed.
Lemma lem4536286 {_107639 B : Type'} (_53779 : type839 _107639 B) : (term1135 _107639 B _53779) = (term1122 _107639 B _53779).
Proof. exact (fun_ext (fun t : B -> Prop => @lem4536285 _107639 B _53779 t)). Qed.
Lemma lem4536287 {B : Type'} : (@all (B -> Prop)) = (@all (B -> Prop)).
Proof. exact (eq_refl (@all (B -> Prop))). Qed.
Lemma lem4536288 {_107639 B : Type'} (_53779 : type839 _107639 B) : (term1136 _107639 B _53779) = (term1137 _107639 B _53779).
Proof. exact (MK_COMB (@lem4536287 B) (@lem4536286 _107639 B _53779)). Qed.
Lemma lem4536289 {_107639 B : Type'} (_53779 : type839 _107639 B) : (term1120 _107639 B _53779) = (term1138 _107639 B _53779).
Proof. exact (MK_COMB (@lem4536284 _107639 B _53779) (@lem4536288 _107639 B _53779)). Qed.
Lemma lem4536290 {_107639 B : Type'} (_53779 : type839 _107639 B) : ((term1119 _107639 B _53779) = (term1120 _107639 B _53779)) = ((term1118 _107639 B _53779) = (term1138 _107639 B _53779)).
Proof. exact (MK_COMB (@lem4536278 _107639 B _53779) (@lem4536289 _107639 B _53779)). Qed.
Lemma lem4536291 {_107639 B : Type'} (_53779 : type839 _107639 B) : (term1118 _107639 B _53779) = (term1138 _107639 B _53779).
Proof. exact (EQ_MP (@lem4536290 _107639 B _53779) (@lem4536268 _107639 B _53779)). Qed.
Lemma lem4536436 {_107639 B : Type'} (_53779 : type839 _107639 B) : (term1050 _107639 B _53779) = (term1138 _107639 B _53779).
Proof. exact (TRANS (@lem4536264 _107639 B _53779) (@lem4536291 _107639 B _53779)). Qed.
Lemma lem4536438 {A : Type'} (P : Prop) (Q : A -> Prop) : (term889 A P Q) = (term890 A P Q).
Proof. exact (EQ_MP (@lem18911 A P Q) (@lem18910 A P Q)). Qed.
Lemma lem4536439 {_107639 B : Type'} (P : Prop) (Q : type572 _107639 B) : (term1139 _107639 B P Q) = (term1140 _107639 B P Q).
Proof. exact (@lem4536438 (_107639 -> B) P Q). Qed.
Lemma lem4536440 {_107639 B : Type'} (_53779 : type839 _107639 B) (GEN_PVAR_148 : _107639 -> B) (t : B -> Prop) (s : _107639 -> Prop) (d : B) : (term1141 _107639 B _53779 GEN_PVAR_148 t s d) = (term1142 _107639 B _53779 GEN_PVAR_148 t s d).
Proof. exact (@lem4536439 _107639 B (term1143 _107639 B _53779 t s d GEN_PVAR_148) (term123 _107639 B GEN_PVAR_148 t s d)). Qed.
Lemma lem4536441 {_107639 B : Type'} (GEN_PVAR_148 : _107639 -> B) (t : B -> Prop) (s : _107639 -> Prop) (d : B) (f : _107639 -> B) : (term1028 _107639 B GEN_PVAR_148 t s d f) = (term122 _107639 B GEN_PVAR_148 t s d f).
Proof. exact (eq_refl (term1028 _107639 B GEN_PVAR_148 t s d f)). Qed.
Lemma lem4536442 {_107639 B : Type'} (GEN_PVAR_148 : _107639 -> B) (t : B -> Prop) (s : _107639 -> Prop) (d : B) : (term1144 _107639 B GEN_PVAR_148 t s d) = (term123 _107639 B GEN_PVAR_148 t s d).
Proof. exact (fun_ext (fun f : _107639 -> B => @lem4536441 _107639 B GEN_PVAR_148 t s d f)). Qed.
Lemma lem4536443 {_107639 B : Type'} : (@ex (_107639 -> B)) = (@ex (_107639 -> B)).
Proof. exact (eq_refl (@ex (_107639 -> B))). Qed.
Lemma lem4536444 {_107639 B : Type'} (GEN_PVAR_148 : _107639 -> B) (t : B -> Prop) (s : _107639 -> Prop) (d : B) : (term1145 _107639 B GEN_PVAR_148 t s d) = (term124 _107639 B GEN_PVAR_148 t s d).
Proof. exact (MK_COMB (@lem4536443 _107639 B) (@lem4536442 _107639 B GEN_PVAR_148 t s d)). Qed.
Lemma lem4536445 {_107639 B : Type'} (_53779 : type839 _107639 B) (t : B -> Prop) (s : _107639 -> Prop) (d : B) (GEN_PVAR_148 : _107639 -> B) : (term1034 _107639 B _53779 t s d GEN_PVAR_148) = (term1034 _107639 B _53779 t s d GEN_PVAR_148).
Proof. exact (eq_refl (term1034 _107639 B _53779 t s d GEN_PVAR_148)). Qed.
Lemma lem4536446 {_107639 B : Type'} (_53779 : type839 _107639 B) (GEN_PVAR_148 : _107639 -> B) (t : B -> Prop) (s : _107639 -> Prop) (d : B) : (term1141 _107639 B _53779 GEN_PVAR_148 t s d) = (term1035 _107639 B _53779 GEN_PVAR_148 t s d).
Proof. exact (MK_COMB (@lem4536445 _107639 B _53779 t s d GEN_PVAR_148) (@lem4536444 _107639 B GEN_PVAR_148 t s d)). Qed.
Lemma lem4536447 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4536448 {_107639 B : Type'} (_53779 : type839 _107639 B) (GEN_PVAR_148 : _107639 -> B) (t : B -> Prop) (s : _107639 -> Prop) (d : B) : (term1146 _107639 B _53779 GEN_PVAR_148 t s d) = (term1147 _107639 B _53779 GEN_PVAR_148 t s d).
Proof. exact (MK_COMB (@lem4536447) (@lem4536446 _107639 B _53779 GEN_PVAR_148 t s d)). Qed.
Lemma lem4536449 {_107639 B : Type'} (GEN_PVAR_148 : _107639 -> B) (t : B -> Prop) (s : _107639 -> Prop) (d : B) (f : _107639 -> B) : (term1028 _107639 B GEN_PVAR_148 t s d f) = (term122 _107639 B GEN_PVAR_148 t s d f).
Proof. exact (eq_refl (term1028 _107639 B GEN_PVAR_148 t s d f)). Qed.
Lemma lem4536450 {_107639 B : Type'} (_53779 : type839 _107639 B) (t : B -> Prop) (s : _107639 -> Prop) (d : B) (GEN_PVAR_148 : _107639 -> B) : (term1034 _107639 B _53779 t s d GEN_PVAR_148) = (term1034 _107639 B _53779 t s d GEN_PVAR_148).
Proof. exact (eq_refl (term1034 _107639 B _53779 t s d GEN_PVAR_148)). Qed.
Lemma lem4536451 {_107639 B : Type'} (_53779 : type839 _107639 B) (GEN_PVAR_148 : _107639 -> B) (t : B -> Prop) (s : _107639 -> Prop) (d : B) (f : _107639 -> B) : (term1148 _107639 B _53779 GEN_PVAR_148 t s d f) = (term1149 _107639 B _53779 GEN_PVAR_148 t s d f).
Proof. exact (MK_COMB (@lem4536450 _107639 B _53779 t s d GEN_PVAR_148) (@lem4536449 _107639 B GEN_PVAR_148 t s d f)). Qed.
Lemma lem4536452 {_107639 B : Type'} (_53779 : type839 _107639 B) (GEN_PVAR_148 : _107639 -> B) (t : B -> Prop) (s : _107639 -> Prop) (d : B) : (term1150 _107639 B _53779 GEN_PVAR_148 t s d) = (term1151 _107639 B _53779 GEN_PVAR_148 t s d).
Proof. exact (fun_ext (fun f : _107639 -> B => @lem4536451 _107639 B _53779 GEN_PVAR_148 t s d f)). Qed.
Lemma lem4536453 {_107639 B : Type'} : (@ex (_107639 -> B)) = (@ex (_107639 -> B)).
Proof. exact (eq_refl (@ex (_107639 -> B))). Qed.
Lemma lem4536454 {_107639 B : Type'} (_53779 : type839 _107639 B) (GEN_PVAR_148 : _107639 -> B) (t : B -> Prop) (s : _107639 -> Prop) (d : B) : (term1142 _107639 B _53779 GEN_PVAR_148 t s d) = (term1152 _107639 B _53779 GEN_PVAR_148 t s d).
Proof. exact (MK_COMB (@lem4536453 _107639 B) (@lem4536452 _107639 B _53779 GEN_PVAR_148 t s d)). Qed.
Lemma lem4536455 {_107639 B : Type'} (_53779 : type839 _107639 B) (GEN_PVAR_148 : _107639 -> B) (t : B -> Prop) (s : _107639 -> Prop) (d : B) : ((term1141 _107639 B _53779 GEN_PVAR_148 t s d) = (term1142 _107639 B _53779 GEN_PVAR_148 t s d)) = ((term1035 _107639 B _53779 GEN_PVAR_148 t s d) = (term1152 _107639 B _53779 GEN_PVAR_148 t s d)).
Proof. exact (MK_COMB (@lem4536448 _107639 B _53779 GEN_PVAR_148 t s d) (@lem4536454 _107639 B _53779 GEN_PVAR_148 t s d)). Qed.
Lemma lem4536456 {_107639 B : Type'} (_53779 : type839 _107639 B) (GEN_PVAR_148 : _107639 -> B) (t : B -> Prop) (s : _107639 -> Prop) (d : B) : (term1035 _107639 B _53779 GEN_PVAR_148 t s d) = (term1152 _107639 B _53779 GEN_PVAR_148 t s d).
Proof. exact (EQ_MP (@lem4536455 _107639 B _53779 GEN_PVAR_148 t s d) (@lem4536440 _107639 B _53779 GEN_PVAR_148 t s d)). Qed.
Lemma lem4536457 {_107639 B : Type'} (_53779 : type839 _107639 B) (t : B -> Prop) (s : _107639 -> Prop) (d : B) : (term1056 _107639 B _53779 t s d) = (term1153 _107639 B _53779 t s d).
Proof. exact (fun_ext (fun GEN_PVAR_148 : _107639 -> B => @lem4536456 _107639 B _53779 GEN_PVAR_148 t s d)). Qed.
Lemma lem4536458 {_107639 B : Type'} : (@all (_107639 -> B)) = (@all (_107639 -> B)).
Proof. exact (eq_refl (@all (_107639 -> B))). Qed.
Lemma lem4536459 {_107639 B : Type'} (_53779 : type839 _107639 B) (t : B -> Prop) (s : _107639 -> Prop) (d : B) : (term1071 _107639 B _53779 t s d) = (term1154 _107639 B _53779 t s d).
Proof. exact (MK_COMB (@lem4536458 _107639 B) (@lem4536457 _107639 B _53779 t s d)). Qed.
Lemma lem4536461 {A B : Type'} (P : type1413 A B) : (term907 A B P) = (term908 A B P).
Proof. exact (EQ_MP (@lem18899 A B P) (@lem18898 A B P)). Qed.
Lemma lem4536462 {_107639 B : Type'} (P : type523 _107639 B) : (term1155 _107639 B P) = (term1156 _107639 B P).
Proof. exact (@lem4536461 (_107639 -> B) (_107639 -> B) P). Qed.
Lemma lem4536463 {_107639 B : Type'} (_53779 : type839 _107639 B) (t : B -> Prop) (s : _107639 -> Prop) (d : B) : (term1157 _107639 B _53779 t s d) = (term1158 _107639 B _53779 t s d).
Proof. exact (@lem4536462 _107639 B (term1159 _107639 B _53779 t s d)). Qed.
Lemma lem4536464 {_107639 B : Type'} (_53779 : type839 _107639 B) (GEN_PVAR_148 : _107639 -> B) (t : B -> Prop) (s : _107639 -> Prop) (d : B) : (term1160 _107639 B _53779 t s d GEN_PVAR_148) = (term1151 _107639 B _53779 GEN_PVAR_148 t s d).
Proof. exact (eq_refl (term1160 _107639 B _53779 t s d GEN_PVAR_148)). Qed.
Lemma lem4536465 {_107639 B : Type'} (f : _107639 -> B) : f = f.
Proof. exact (eq_refl f). Qed.
Lemma lem4536466 {_107639 B : Type'} (_53779 : type839 _107639 B) (GEN_PVAR_148 : _107639 -> B) (t : B -> Prop) (s : _107639 -> Prop) (d : B) (f : _107639 -> B) : (term1161 _107639 B _53779 t s d GEN_PVAR_148 f) = (term1162 _107639 B _53779 GEN_PVAR_148 t s d f).
Proof. exact (MK_COMB (@lem4536464 _107639 B _53779 GEN_PVAR_148 t s d) (@lem4536465 _107639 B f)). Qed.
Lemma lem4536467 {_107639 B : Type'} (_53779 : type839 _107639 B) (GEN_PVAR_148 : _107639 -> B) (t : B -> Prop) (s : _107639 -> Prop) (d : B) (f : _107639 -> B) : (term1162 _107639 B _53779 GEN_PVAR_148 t s d f) = (term1149 _107639 B _53779 GEN_PVAR_148 t s d f).
Proof. exact (eq_refl (term1162 _107639 B _53779 GEN_PVAR_148 t s d f)). Qed.
Lemma lem4536468 {_107639 B : Type'} (_53779 : type839 _107639 B) (GEN_PVAR_148 : _107639 -> B) (t : B -> Prop) (s : _107639 -> Prop) (d : B) (f : _107639 -> B) : (term1161 _107639 B _53779 t s d GEN_PVAR_148 f) = (term1149 _107639 B _53779 GEN_PVAR_148 t s d f).
Proof. exact (TRANS (@lem4536466 _107639 B _53779 GEN_PVAR_148 t s d f) (@lem4536467 _107639 B _53779 GEN_PVAR_148 t s d f)). Qed.
Lemma lem4536469 {_107639 B : Type'} (_53779 : type839 _107639 B) (GEN_PVAR_148 : _107639 -> B) (t : B -> Prop) (s : _107639 -> Prop) (d : B) : (term1163 _107639 B _53779 t s d GEN_PVAR_148) = (term1151 _107639 B _53779 GEN_PVAR_148 t s d).
Proof. exact (fun_ext (fun f : _107639 -> B => @lem4536468 _107639 B _53779 GEN_PVAR_148 t s d f)). Qed.
Lemma lem4536470 {_107639 B : Type'} : (@ex (_107639 -> B)) = (@ex (_107639 -> B)).
Proof. exact (eq_refl (@ex (_107639 -> B))). Qed.
Lemma lem4536471 {_107639 B : Type'} (_53779 : type839 _107639 B) (GEN_PVAR_148 : _107639 -> B) (t : B -> Prop) (s : _107639 -> Prop) (d : B) : (term1164 _107639 B _53779 t s d GEN_PVAR_148) = (term1152 _107639 B _53779 GEN_PVAR_148 t s d).
Proof. exact (MK_COMB (@lem4536470 _107639 B) (@lem4536469 _107639 B _53779 GEN_PVAR_148 t s d)). Qed.
Lemma lem4536472 {_107639 B : Type'} (_53779 : type839 _107639 B) (t : B -> Prop) (s : _107639 -> Prop) (d : B) : (term1165 _107639 B _53779 t s d) = (term1153 _107639 B _53779 t s d).
Proof. exact (fun_ext (fun GEN_PVAR_148 : _107639 -> B => @lem4536471 _107639 B _53779 GEN_PVAR_148 t s d)). Qed.
Lemma lem4536473 {_107639 B : Type'} : (@all (_107639 -> B)) = (@all (_107639 -> B)).
Proof. exact (eq_refl (@all (_107639 -> B))). Qed.
Lemma lem4536474 {_107639 B : Type'} (_53779 : type839 _107639 B) (t : B -> Prop) (s : _107639 -> Prop) (d : B) : (term1157 _107639 B _53779 t s d) = (term1154 _107639 B _53779 t s d).
Proof. exact (MK_COMB (@lem4536473 _107639 B) (@lem4536472 _107639 B _53779 t s d)). Qed.
Lemma lem4536475 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4536476 {_107639 B : Type'} (_53779 : type839 _107639 B) (t : B -> Prop) (s : _107639 -> Prop) (d : B) : (term1166 _107639 B _53779 t s d) = (term1167 _107639 B _53779 t s d).
Proof. exact (MK_COMB (@lem4536475) (@lem4536474 _107639 B _53779 t s d)). Qed.
Lemma lem4536477 {_107639 B : Type'} (_53779 : type839 _107639 B) (GEN_PVAR_148 : _107639 -> B) (t : B -> Prop) (s : _107639 -> Prop) (d : B) : (term1160 _107639 B _53779 t s d GEN_PVAR_148) = (term1151 _107639 B _53779 GEN_PVAR_148 t s d).
Proof. exact (eq_refl (term1160 _107639 B _53779 t s d GEN_PVAR_148)). Qed.
Lemma lem4536478 {_107639 B : Type'} (f : type549 _107639 B) (GEN_PVAR_148 : _107639 -> B) : (f GEN_PVAR_148) = (f GEN_PVAR_148).
Proof. exact (eq_refl (f GEN_PVAR_148)). Qed.
Lemma lem4536479 {_107639 B : Type'} (_53779 : type839 _107639 B) (t : B -> Prop) (s : _107639 -> Prop) (d : B) (f : type549 _107639 B) (GEN_PVAR_148 : _107639 -> B) : (term1168 _107639 B _53779 t s d f GEN_PVAR_148) = (term1169 _107639 B _53779 t s d f GEN_PVAR_148).
Proof. exact (MK_COMB (@lem4536477 _107639 B _53779 GEN_PVAR_148 t s d) (@lem4536478 _107639 B f GEN_PVAR_148)). Qed.
Lemma lem4536480 {_107639 B : Type'} (_53779 : type839 _107639 B) (t : B -> Prop) (s : _107639 -> Prop) (d : B) (f : type549 _107639 B) (GEN_PVAR_148 : _107639 -> B) : (term1169 _107639 B _53779 t s d f GEN_PVAR_148) = (term1170 _107639 B _53779 t s d f GEN_PVAR_148).
Proof. exact (eq_refl (term1169 _107639 B _53779 t s d f GEN_PVAR_148)). Qed.
Lemma lem4536481 {_107639 B : Type'} (_53779 : type839 _107639 B) (t : B -> Prop) (s : _107639 -> Prop) (d : B) (f : type549 _107639 B) (GEN_PVAR_148 : _107639 -> B) : (term1168 _107639 B _53779 t s d f GEN_PVAR_148) = (term1170 _107639 B _53779 t s d f GEN_PVAR_148).
Proof. exact (TRANS (@lem4536479 _107639 B _53779 t s d f GEN_PVAR_148) (@lem4536480 _107639 B _53779 t s d f GEN_PVAR_148)). Qed.
Lemma lem4536482 {_107639 B : Type'} (_53779 : type839 _107639 B) (t : B -> Prop) (s : _107639 -> Prop) (d : B) (f : type549 _107639 B) : (term1171 _107639 B _53779 t s d f) = (term1172 _107639 B _53779 t s d f).
Proof. exact (fun_ext (fun GEN_PVAR_148 : _107639 -> B => @lem4536481 _107639 B _53779 t s d f GEN_PVAR_148)). Qed.
Lemma lem4536483 {_107639 B : Type'} : (@all (_107639 -> B)) = (@all (_107639 -> B)).
Proof. exact (eq_refl (@all (_107639 -> B))). Qed.
Lemma lem4536484 {_107639 B : Type'} (_53779 : type839 _107639 B) (t : B -> Prop) (s : _107639 -> Prop) (d : B) (f : type549 _107639 B) : (term1173 _107639 B _53779 t s d f) = (term1174 _107639 B _53779 t s d f).
Proof. exact (MK_COMB (@lem4536483 _107639 B) (@lem4536482 _107639 B _53779 t s d f)). Qed.
Lemma lem4536485 {_107639 B : Type'} (_53779 : type839 _107639 B) (t : B -> Prop) (s : _107639 -> Prop) (d : B) : (term1175 _107639 B _53779 t s d) = (term1176 _107639 B _53779 t s d).
Proof. exact (fun_ext (fun f : type549 _107639 B => @lem4536484 _107639 B _53779 t s d f)). Qed.
Lemma lem4536486 {_107639 B : Type'} : (@ex ((_107639 -> B) -> _107639 -> B)) = (@ex ((_107639 -> B) -> _107639 -> B)).
Proof. exact (eq_refl (@ex ((_107639 -> B) -> _107639 -> B))). Qed.
Lemma lem4536487 {_107639 B : Type'} (_53779 : type839 _107639 B) (t : B -> Prop) (s : _107639 -> Prop) (d : B) : (term1158 _107639 B _53779 t s d) = (term1177 _107639 B _53779 t s d).
Proof. exact (MK_COMB (@lem4536486 _107639 B) (@lem4536485 _107639 B _53779 t s d)). Qed.
Lemma lem4536488 {_107639 B : Type'} (_53779 : type839 _107639 B) (t : B -> Prop) (s : _107639 -> Prop) (d : B) : ((term1157 _107639 B _53779 t s d) = (term1158 _107639 B _53779 t s d)) = ((term1154 _107639 B _53779 t s d) = (term1177 _107639 B _53779 t s d)).
Proof. exact (MK_COMB (@lem4536476 _107639 B _53779 t s d) (@lem4536487 _107639 B _53779 t s d)). Qed.
Lemma lem4536489 {_107639 B : Type'} (_53779 : type839 _107639 B) (t : B -> Prop) (s : _107639 -> Prop) (d : B) : (term1154 _107639 B _53779 t s d) = (term1177 _107639 B _53779 t s d).
Proof. exact (EQ_MP (@lem4536488 _107639 B _53779 t s d) (@lem4536463 _107639 B _53779 t s d)). Qed.
Lemma lem4536490 {_107639 B : Type'} (_53779 : type839 _107639 B) (t : B -> Prop) (s : _107639 -> Prop) (d : B) : (term1071 _107639 B _53779 t s d) = (term1177 _107639 B _53779 t s d).
Proof. exact (TRANS (@lem4536459 _107639 B _53779 t s d) (@lem4536489 _107639 B _53779 t s d)). Qed.
Lemma lem4536491 {_107639 B : Type'} (_53779 : type839 _107639 B) (t : B -> Prop) (s : _107639 -> Prop) : (term1078 _107639 B _53779 t s) = (term1178 _107639 B _53779 t s).
Proof. exact (fun_ext (fun d : B => @lem4536490 _107639 B _53779 t s d)). Qed.
Lemma lem4536492 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem4536493 {_107639 B : Type'} (_53779 : type839 _107639 B) (t : B -> Prop) (s : _107639 -> Prop) : (term1093 _107639 B _53779 t s) = (term1179 _107639 B _53779 t s).
Proof. exact (MK_COMB (@lem4536492 B) (@lem4536491 _107639 B _53779 t s)). Qed.
Lemma lem4536495 {A B : Type'} (P : type1413 A B) : (term907 A B P) = (term908 A B P).
Proof. exact (EQ_MP (@lem18899 A B P) (@lem18898 A B P)). Qed.
Lemma lem4536496 {_107639 B : Type'} (P : type1435 _107639 B) : (term1180 _107639 B P) = (term1181 _107639 B P).
Proof. exact (@lem4536495 B (type549 _107639 B) P). Qed.
Lemma lem4536497 {_107639 B : Type'} (_53779 : type839 _107639 B) (t : B -> Prop) (s : _107639 -> Prop) : (term1182 _107639 B _53779 t s) = (term1183 _107639 B _53779 t s).
Proof. exact (@lem4536496 _107639 B (term1184 _107639 B _53779 t s)). Qed.
Lemma lem4536498 {_107639 B : Type'} (_53779 : type839 _107639 B) (t : B -> Prop) (s : _107639 -> Prop) (d : B) : (term1185 _107639 B _53779 t s d) = (term1176 _107639 B _53779 t s d).
Proof. exact (eq_refl (term1185 _107639 B _53779 t s d)). Qed.
Lemma lem4536499 {_107639 B : Type'} (f : type549 _107639 B) : f = f.
Proof. exact (eq_refl f). Qed.
Lemma lem4536500 {_107639 B : Type'} (_53779 : type839 _107639 B) (t : B -> Prop) (s : _107639 -> Prop) (d : B) (f : type549 _107639 B) : (term1186 _107639 B _53779 t s d f) = (term1187 _107639 B _53779 t s d f).
Proof. exact (MK_COMB (@lem4536498 _107639 B _53779 t s d) (@lem4536499 _107639 B f)). Qed.
Lemma lem4536501 {_107639 B : Type'} (_53779 : type839 _107639 B) (t : B -> Prop) (s : _107639 -> Prop) (d : B) (f : type549 _107639 B) : (term1187 _107639 B _53779 t s d f) = (term1174 _107639 B _53779 t s d f).
Proof. exact (eq_refl (term1187 _107639 B _53779 t s d f)). Qed.
Lemma lem4536502 {_107639 B : Type'} (_53779 : type839 _107639 B) (t : B -> Prop) (s : _107639 -> Prop) (d : B) (f : type549 _107639 B) : (term1186 _107639 B _53779 t s d f) = (term1174 _107639 B _53779 t s d f).
Proof. exact (TRANS (@lem4536500 _107639 B _53779 t s d f) (@lem4536501 _107639 B _53779 t s d f)). Qed.
Lemma lem4536503 {_107639 B : Type'} (_53779 : type839 _107639 B) (t : B -> Prop) (s : _107639 -> Prop) (d : B) : (term1188 _107639 B _53779 t s d) = (term1176 _107639 B _53779 t s d).
Proof. exact (fun_ext (fun f : type549 _107639 B => @lem4536502 _107639 B _53779 t s d f)). Qed.
Lemma lem4536504 {_107639 B : Type'} : (@ex ((_107639 -> B) -> _107639 -> B)) = (@ex ((_107639 -> B) -> _107639 -> B)).
Proof. exact (eq_refl (@ex ((_107639 -> B) -> _107639 -> B))). Qed.
Lemma lem4536505 {_107639 B : Type'} (_53779 : type839 _107639 B) (t : B -> Prop) (s : _107639 -> Prop) (d : B) : (term1189 _107639 B _53779 t s d) = (term1177 _107639 B _53779 t s d).
Proof. exact (MK_COMB (@lem4536504 _107639 B) (@lem4536503 _107639 B _53779 t s d)). Qed.
Lemma lem4536506 {_107639 B : Type'} (_53779 : type839 _107639 B) (t : B -> Prop) (s : _107639 -> Prop) : (term1190 _107639 B _53779 t s) = (term1178 _107639 B _53779 t s).
Proof. exact (fun_ext (fun d : B => @lem4536505 _107639 B _53779 t s d)). Qed.
Lemma lem4536507 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem4536508 {_107639 B : Type'} (_53779 : type839 _107639 B) (t : B -> Prop) (s : _107639 -> Prop) : (term1182 _107639 B _53779 t s) = (term1179 _107639 B _53779 t s).
Proof. exact (MK_COMB (@lem4536507 B) (@lem4536506 _107639 B _53779 t s)). Qed.
Lemma lem4536509 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4536510 {_107639 B : Type'} (_53779 : type839 _107639 B) (t : B -> Prop) (s : _107639 -> Prop) : (term1191 _107639 B _53779 t s) = (term1192 _107639 B _53779 t s).
Proof. exact (MK_COMB (@lem4536509) (@lem4536508 _107639 B _53779 t s)). Qed.
Lemma lem4536511 {_107639 B : Type'} (_53779 : type839 _107639 B) (t : B -> Prop) (s : _107639 -> Prop) (d : B) : (term1185 _107639 B _53779 t s d) = (term1176 _107639 B _53779 t s d).
Proof. exact (eq_refl (term1185 _107639 B _53779 t s d)). Qed.
Lemma lem4536512 {_107639 B : Type'} (f : type1444 _107639 B) (d : B) : (f d) = (f d).
Proof. exact (eq_refl (f d)). Qed.
Lemma lem4536513 {_107639 B : Type'} (_53779 : type839 _107639 B) (t : B -> Prop) (s : _107639 -> Prop) (f : type1444 _107639 B) (d : B) : (term1193 _107639 B _53779 t s f d) = (term1194 _107639 B _53779 t s f d).
Proof. exact (MK_COMB (@lem4536511 _107639 B _53779 t s d) (@lem4536512 _107639 B f d)). Qed.
Lemma lem4536514 {_107639 B : Type'} (_53779 : type839 _107639 B) (t : B -> Prop) (s : _107639 -> Prop) (f : type1444 _107639 B) (d : B) : (term1194 _107639 B _53779 t s f d) = (term1195 _107639 B _53779 t s f d).
Proof. exact (eq_refl (term1194 _107639 B _53779 t s f d)). Qed.
Lemma lem4536515 {_107639 B : Type'} (_53779 : type839 _107639 B) (t : B -> Prop) (s : _107639 -> Prop) (f : type1444 _107639 B) (d : B) : (term1193 _107639 B _53779 t s f d) = (term1195 _107639 B _53779 t s f d).
Proof. exact (TRANS (@lem4536513 _107639 B _53779 t s f d) (@lem4536514 _107639 B _53779 t s f d)). Qed.
Lemma lem4536516 {_107639 B : Type'} (_53779 : type839 _107639 B) (t : B -> Prop) (s : _107639 -> Prop) (f : type1444 _107639 B) : (term1196 _107639 B _53779 t s f) = (term1197 _107639 B _53779 t s f).
Proof. exact (fun_ext (fun d : B => @lem4536515 _107639 B _53779 t s f d)). Qed.
Lemma lem4536517 {B : Type'} : (@all B) = (@all B).
Proof. exact (eq_refl (@all B)). Qed.
Lemma lem4536518 {_107639 B : Type'} (_53779 : type839 _107639 B) (t : B -> Prop) (s : _107639 -> Prop) (f : type1444 _107639 B) : (term1198 _107639 B _53779 t s f) = (term1199 _107639 B _53779 t s f).
Proof. exact (MK_COMB (@lem4536517 B) (@lem4536516 _107639 B _53779 t s f)). Qed.
Lemma lem4536519 {_107639 B : Type'} (_53779 : type839 _107639 B) (t : B -> Prop) (s : _107639 -> Prop) : (term1200 _107639 B _53779 t s) = (term1201 _107639 B _53779 t s).
Proof. exact (fun_ext (fun f : type1444 _107639 B => @lem4536518 _107639 B _53779 t s f)). Qed.
Lemma lem4536520 {_107639 B : Type'} : (@ex (B -> (_107639 -> B) -> _107639 -> B)) = (@ex (B -> (_107639 -> B) -> _107639 -> B)).
Proof. exact (eq_refl (@ex (B -> (_107639 -> B) -> _107639 -> B))). Qed.
Lemma lem4536521 {_107639 B : Type'} (_53779 : type839 _107639 B) (t : B -> Prop) (s : _107639 -> Prop) : (term1183 _107639 B _53779 t s) = (term1202 _107639 B _53779 t s).
Proof. exact (MK_COMB (@lem4536520 _107639 B) (@lem4536519 _107639 B _53779 t s)). Qed.
Lemma lem4536522 {_107639 B : Type'} (_53779 : type839 _107639 B) (t : B -> Prop) (s : _107639 -> Prop) : ((term1182 _107639 B _53779 t s) = (term1183 _107639 B _53779 t s)) = ((term1179 _107639 B _53779 t s) = (term1202 _107639 B _53779 t s)).
Proof. exact (MK_COMB (@lem4536510 _107639 B _53779 t s) (@lem4536521 _107639 B _53779 t s)). Qed.
Lemma lem4536523 {_107639 B : Type'} (_53779 : type839 _107639 B) (t : B -> Prop) (s : _107639 -> Prop) : (term1179 _107639 B _53779 t s) = (term1202 _107639 B _53779 t s).
Proof. exact (EQ_MP (@lem4536522 _107639 B _53779 t s) (@lem4536497 _107639 B _53779 t s)). Qed.
Lemma lem4536524 {_107639 B : Type'} (_53779 : type839 _107639 B) (t : B -> Prop) (s : _107639 -> Prop) : (term1093 _107639 B _53779 t s) = (term1202 _107639 B _53779 t s).
Proof. exact (TRANS (@lem4536493 _107639 B _53779 t s) (@lem4536523 _107639 B _53779 t s)). Qed.
Lemma lem4536525 {_107639 B : Type'} (_53779 : type839 _107639 B) (t : B -> Prop) : (term1100 _107639 B _53779 t) = (term1203 _107639 B _53779 t).
Proof. exact (fun_ext (fun s : _107639 -> Prop => @lem4536524 _107639 B _53779 t s)). Qed.
Lemma lem4536526 {_107639 : Type'} : (@all (_107639 -> Prop)) = (@all (_107639 -> Prop)).
Proof. exact (eq_refl (@all (_107639 -> Prop))). Qed.
Lemma lem4536527 {_107639 B : Type'} (_53779 : type839 _107639 B) (t : B -> Prop) : (term1115 _107639 B _53779 t) = (term1204 _107639 B _53779 t).
Proof. exact (MK_COMB (@lem4536526 _107639) (@lem4536525 _107639 B _53779 t)). Qed.
Lemma lem4536529 {A B : Type'} (P : type1413 A B) : (term907 A B P) = (term908 A B P).
Proof. exact (EQ_MP (@lem18899 A B P) (@lem18898 A B P)). Qed.
Lemma lem4536530 {_107639 B : Type'} (P : type647 _107639 B) : (term1205 _107639 B P) = (term1206 _107639 B P).
Proof. exact (@lem4536529 (_107639 -> Prop) (type1444 _107639 B) P). Qed.
Lemma lem4536531 {_107639 B : Type'} (_53779 : type839 _107639 B) (t : B -> Prop) : (term1207 _107639 B _53779 t) = (term1208 _107639 B _53779 t).
Proof. exact (@lem4536530 _107639 B (term1209 _107639 B _53779 t)). Qed.
Lemma lem4536532 {_107639 B : Type'} (_53779 : type839 _107639 B) (t : B -> Prop) (s : _107639 -> Prop) : (term1210 _107639 B _53779 t s) = (term1201 _107639 B _53779 t s).
Proof. exact (eq_refl (term1210 _107639 B _53779 t s)). Qed.
Lemma lem4536533 {_107639 B : Type'} (f : type1444 _107639 B) : f = f.
Proof. exact (eq_refl f). Qed.
Lemma lem4536534 {_107639 B : Type'} (_53779 : type839 _107639 B) (t : B -> Prop) (s : _107639 -> Prop) (f : type1444 _107639 B) : (term1211 _107639 B _53779 t s f) = (term1212 _107639 B _53779 t s f).
Proof. exact (MK_COMB (@lem4536532 _107639 B _53779 t s) (@lem4536533 _107639 B f)). Qed.
Lemma lem4536535 {_107639 B : Type'} (_53779 : type839 _107639 B) (t : B -> Prop) (s : _107639 -> Prop) (f : type1444 _107639 B) : (term1212 _107639 B _53779 t s f) = (term1199 _107639 B _53779 t s f).
Proof. exact (eq_refl (term1212 _107639 B _53779 t s f)). Qed.
Lemma lem4536536 {_107639 B : Type'} (_53779 : type839 _107639 B) (t : B -> Prop) (s : _107639 -> Prop) (f : type1444 _107639 B) : (term1211 _107639 B _53779 t s f) = (term1199 _107639 B _53779 t s f).
Proof. exact (TRANS (@lem4536534 _107639 B _53779 t s f) (@lem4536535 _107639 B _53779 t s f)). Qed.
Lemma lem4536537 {_107639 B : Type'} (_53779 : type839 _107639 B) (t : B -> Prop) (s : _107639 -> Prop) : (term1213 _107639 B _53779 t s) = (term1201 _107639 B _53779 t s).
Proof. exact (fun_ext (fun f : type1444 _107639 B => @lem4536536 _107639 B _53779 t s f)). Qed.
Lemma lem4536538 {_107639 B : Type'} : (@ex (B -> (_107639 -> B) -> _107639 -> B)) = (@ex (B -> (_107639 -> B) -> _107639 -> B)).
Proof. exact (eq_refl (@ex (B -> (_107639 -> B) -> _107639 -> B))). Qed.
Lemma lem4536539 {_107639 B : Type'} (_53779 : type839 _107639 B) (t : B -> Prop) (s : _107639 -> Prop) : (term1214 _107639 B _53779 t s) = (term1202 _107639 B _53779 t s).
Proof. exact (MK_COMB (@lem4536538 _107639 B) (@lem4536537 _107639 B _53779 t s)). Qed.
Lemma lem4536540 {_107639 B : Type'} (_53779 : type839 _107639 B) (t : B -> Prop) : (term1215 _107639 B _53779 t) = (term1203 _107639 B _53779 t).
Proof. exact (fun_ext (fun s : _107639 -> Prop => @lem4536539 _107639 B _53779 t s)). Qed.
Lemma lem4536541 {_107639 : Type'} : (@all (_107639 -> Prop)) = (@all (_107639 -> Prop)).
Proof. exact (eq_refl (@all (_107639 -> Prop))). Qed.
Lemma lem4536542 {_107639 B : Type'} (_53779 : type839 _107639 B) (t : B -> Prop) : (term1207 _107639 B _53779 t) = (term1204 _107639 B _53779 t).
Proof. exact (MK_COMB (@lem4536541 _107639) (@lem4536540 _107639 B _53779 t)). Qed.
Lemma lem4536543 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4536544 {_107639 B : Type'} (_53779 : type839 _107639 B) (t : B -> Prop) : (term1216 _107639 B _53779 t) = (term1217 _107639 B _53779 t).
Proof. exact (MK_COMB (@lem4536543) (@lem4536542 _107639 B _53779 t)). Qed.
Lemma lem4536545 {_107639 B : Type'} (_53779 : type839 _107639 B) (t : B -> Prop) (s : _107639 -> Prop) : (term1210 _107639 B _53779 t s) = (term1201 _107639 B _53779 t s).
Proof. exact (eq_refl (term1210 _107639 B _53779 t s)). Qed.
Lemma lem4536546 {_107639 B : Type'} (f : type673 _107639 B) (s : _107639 -> Prop) : (f s) = (f s).
Proof. exact (eq_refl (f s)). Qed.
Lemma lem4536547 {_107639 B : Type'} (_53779 : type839 _107639 B) (t : B -> Prop) (f : type673 _107639 B) (s : _107639 -> Prop) : (term1218 _107639 B _53779 t f s) = (term1219 _107639 B _53779 t f s).
Proof. exact (MK_COMB (@lem4536545 _107639 B _53779 t s) (@lem4536546 _107639 B f s)). Qed.
Lemma lem4536548 {_107639 B : Type'} (_53779 : type839 _107639 B) (t : B -> Prop) (f : type673 _107639 B) (s : _107639 -> Prop) : (term1219 _107639 B _53779 t f s) = (term1220 _107639 B _53779 t f s).
Proof. exact (eq_refl (term1219 _107639 B _53779 t f s)). Qed.
Lemma lem4536549 {_107639 B : Type'} (_53779 : type839 _107639 B) (t : B -> Prop) (f : type673 _107639 B) (s : _107639 -> Prop) : (term1218 _107639 B _53779 t f s) = (term1220 _107639 B _53779 t f s).
Proof. exact (TRANS (@lem4536547 _107639 B _53779 t f s) (@lem4536548 _107639 B _53779 t f s)). Qed.
Lemma lem4536550 {_107639 B : Type'} (_53779 : type839 _107639 B) (t : B -> Prop) (f : type673 _107639 B) : (term1221 _107639 B _53779 t f) = (term1222 _107639 B _53779 t f).
Proof. exact (fun_ext (fun s : _107639 -> Prop => @lem4536549 _107639 B _53779 t f s)). Qed.
Lemma lem4536551 {_107639 : Type'} : (@all (_107639 -> Prop)) = (@all (_107639 -> Prop)).
Proof. exact (eq_refl (@all (_107639 -> Prop))). Qed.
Lemma lem4536552 {_107639 B : Type'} (_53779 : type839 _107639 B) (t : B -> Prop) (f : type673 _107639 B) : (term1223 _107639 B _53779 t f) = (term1224 _107639 B _53779 t f).
Proof. exact (MK_COMB (@lem4536551 _107639) (@lem4536550 _107639 B _53779 t f)). Qed.
Lemma lem4536553 {_107639 B : Type'} (_53779 : type839 _107639 B) (t : B -> Prop) : (term1225 _107639 B _53779 t) = (term1226 _107639 B _53779 t).
Proof. exact (fun_ext (fun f : type673 _107639 B => @lem4536552 _107639 B _53779 t f)). Qed.
Lemma lem4536554 {_107639 B : Type'} : (@ex ((_107639 -> Prop) -> B -> (_107639 -> B) -> _107639 -> B)) = (@ex ((_107639 -> Prop) -> B -> (_107639 -> B) -> _107639 -> B)).
Proof. exact (eq_refl (@ex ((_107639 -> Prop) -> B -> (_107639 -> B) -> _107639 -> B))). Qed.
Lemma lem4536555 {_107639 B : Type'} (_53779 : type839 _107639 B) (t : B -> Prop) : (term1208 _107639 B _53779 t) = (term1227 _107639 B _53779 t).
Proof. exact (MK_COMB (@lem4536554 _107639 B) (@lem4536553 _107639 B _53779 t)). Qed.
Lemma lem4536556 {_107639 B : Type'} (_53779 : type839 _107639 B) (t : B -> Prop) : ((term1207 _107639 B _53779 t) = (term1208 _107639 B _53779 t)) = ((term1204 _107639 B _53779 t) = (term1227 _107639 B _53779 t)).
Proof. exact (MK_COMB (@lem4536544 _107639 B _53779 t) (@lem4536555 _107639 B _53779 t)). Qed.
Lemma lem4536557 {_107639 B : Type'} (_53779 : type839 _107639 B) (t : B -> Prop) : (term1204 _107639 B _53779 t) = (term1227 _107639 B _53779 t).
Proof. exact (EQ_MP (@lem4536556 _107639 B _53779 t) (@lem4536531 _107639 B _53779 t)). Qed.
Lemma lem4536558 {_107639 B : Type'} (_53779 : type839 _107639 B) (t : B -> Prop) : (term1115 _107639 B _53779 t) = (term1227 _107639 B _53779 t).
Proof. exact (TRANS (@lem4536527 _107639 B _53779 t) (@lem4536557 _107639 B _53779 t)). Qed.
Lemma lem4536559 {_107639 B : Type'} (_53779 : type839 _107639 B) : (term1122 _107639 B _53779) = (term1228 _107639 B _53779).
Proof. exact (fun_ext (fun t : B -> Prop => @lem4536558 _107639 B _53779 t)). Qed.
Lemma lem4536560 {B : Type'} : (@all (B -> Prop)) = (@all (B -> Prop)).
Proof. exact (eq_refl (@all (B -> Prop))). Qed.
Lemma lem4536561 {_107639 B : Type'} (_53779 : type839 _107639 B) : (term1137 _107639 B _53779) = (term1229 _107639 B _53779).
Proof. exact (MK_COMB (@lem4536560 B) (@lem4536559 _107639 B _53779)). Qed.
Lemma lem4536563 {A B : Type'} (P : type1413 A B) : (term907 A B P) = (term908 A B P).
Proof. exact (EQ_MP (@lem18899 A B P) (@lem18898 A B P)). Qed.
Lemma lem4536564 {_107639 B : Type'} (P : type820 _107639 B) : (term1230 _107639 B P) = (term1231 _107639 B P).
Proof. exact (@lem4536563 (B -> Prop) (type673 _107639 B) P). Qed.
Lemma lem4536565 {_107639 B : Type'} (_53779 : type839 _107639 B) : (term1232 _107639 B _53779) = (term1233 _107639 B _53779).
Proof. exact (@lem4536564 _107639 B (term1234 _107639 B _53779)). Qed.
Lemma lem4536566 {_107639 B : Type'} (_53779 : type839 _107639 B) (t : B -> Prop) : (term1235 _107639 B _53779 t) = (term1226 _107639 B _53779 t).
Proof. exact (eq_refl (term1235 _107639 B _53779 t)). Qed.
Lemma lem4536567 {_107639 B : Type'} (f : type673 _107639 B) : f = f.
Proof. exact (eq_refl f). Qed.
Lemma lem4536568 {_107639 B : Type'} (_53779 : type839 _107639 B) (t : B -> Prop) (f : type673 _107639 B) : (term1236 _107639 B _53779 t f) = (term1237 _107639 B _53779 t f).
Proof. exact (MK_COMB (@lem4536566 _107639 B _53779 t) (@lem4536567 _107639 B f)). Qed.
Lemma lem4536569 {_107639 B : Type'} (_53779 : type839 _107639 B) (t : B -> Prop) (f : type673 _107639 B) : (term1237 _107639 B _53779 t f) = (term1224 _107639 B _53779 t f).
Proof. exact (eq_refl (term1237 _107639 B _53779 t f)). Qed.
Lemma lem4536570 {_107639 B : Type'} (_53779 : type839 _107639 B) (t : B -> Prop) (f : type673 _107639 B) : (term1236 _107639 B _53779 t f) = (term1224 _107639 B _53779 t f).
Proof. exact (TRANS (@lem4536568 _107639 B _53779 t f) (@lem4536569 _107639 B _53779 t f)). Qed.
Lemma lem4536571 {_107639 B : Type'} (_53779 : type839 _107639 B) (t : B -> Prop) : (term1238 _107639 B _53779 t) = (term1226 _107639 B _53779 t).
Proof. exact (fun_ext (fun f : type673 _107639 B => @lem4536570 _107639 B _53779 t f)). Qed.
Lemma lem4536572 {_107639 B : Type'} : (@ex ((_107639 -> Prop) -> B -> (_107639 -> B) -> _107639 -> B)) = (@ex ((_107639 -> Prop) -> B -> (_107639 -> B) -> _107639 -> B)).
Proof. exact (eq_refl (@ex ((_107639 -> Prop) -> B -> (_107639 -> B) -> _107639 -> B))). Qed.
Lemma lem4536573 {_107639 B : Type'} (_53779 : type839 _107639 B) (t : B -> Prop) : (term1239 _107639 B _53779 t) = (term1227 _107639 B _53779 t).
Proof. exact (MK_COMB (@lem4536572 _107639 B) (@lem4536571 _107639 B _53779 t)). Qed.
Lemma lem4536574 {_107639 B : Type'} (_53779 : type839 _107639 B) : (term1240 _107639 B _53779) = (term1228 _107639 B _53779).
Proof. exact (fun_ext (fun t : B -> Prop => @lem4536573 _107639 B _53779 t)). Qed.
Lemma lem4536575 {B : Type'} : (@all (B -> Prop)) = (@all (B -> Prop)).
Proof. exact (eq_refl (@all (B -> Prop))). Qed.
Lemma lem4536576 {_107639 B : Type'} (_53779 : type839 _107639 B) : (term1232 _107639 B _53779) = (term1229 _107639 B _53779).
Proof. exact (MK_COMB (@lem4536575 B) (@lem4536574 _107639 B _53779)). Qed.
Lemma lem4536577 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4536578 {_107639 B : Type'} (_53779 : type839 _107639 B) : (term1241 _107639 B _53779) = (term1242 _107639 B _53779).
Proof. exact (MK_COMB (@lem4536577) (@lem4536576 _107639 B _53779)). Qed.
Lemma lem4536579 {_107639 B : Type'} (_53779 : type839 _107639 B) (t : B -> Prop) : (term1235 _107639 B _53779 t) = (term1226 _107639 B _53779 t).
Proof. exact (eq_refl (term1235 _107639 B _53779 t)). Qed.
Lemma lem4536580 {_107639 B : Type'} (f : type838 _107639 B) (t : B -> Prop) : (f t) = (f t).
Proof. exact (eq_refl (f t)). Qed.
Lemma lem4536581 {_107639 B : Type'} (_53779 : type839 _107639 B) (f : type838 _107639 B) (t : B -> Prop) : (term1243 _107639 B _53779 f t) = (term1244 _107639 B _53779 f t).
Proof. exact (MK_COMB (@lem4536579 _107639 B _53779 t) (@lem4536580 _107639 B f t)). Qed.
Lemma lem4536582 {_107639 B : Type'} (_53779 : type839 _107639 B) (f : type838 _107639 B) (t : B -> Prop) : (term1244 _107639 B _53779 f t) = (term1245 _107639 B _53779 f t).
Proof. exact (eq_refl (term1244 _107639 B _53779 f t)). Qed.
Lemma lem4536583 {_107639 B : Type'} (_53779 : type839 _107639 B) (f : type838 _107639 B) (t : B -> Prop) : (term1243 _107639 B _53779 f t) = (term1245 _107639 B _53779 f t).
Proof. exact (TRANS (@lem4536581 _107639 B _53779 f t) (@lem4536582 _107639 B _53779 f t)). Qed.
Lemma lem4536584 {_107639 B : Type'} (_53779 : type839 _107639 B) (f : type838 _107639 B) : (term1246 _107639 B _53779 f) = (term1247 _107639 B _53779 f).
Proof. exact (fun_ext (fun t : B -> Prop => @lem4536583 _107639 B _53779 f t)). Qed.
Lemma lem4536585 {B : Type'} : (@all (B -> Prop)) = (@all (B -> Prop)).
Proof. exact (eq_refl (@all (B -> Prop))). Qed.
Lemma lem4536586 {_107639 B : Type'} (_53779 : type839 _107639 B) (f : type838 _107639 B) : (term1248 _107639 B _53779 f) = (term1249 _107639 B _53779 f).
Proof. exact (MK_COMB (@lem4536585 B) (@lem4536584 _107639 B _53779 f)). Qed.
Lemma lem4536587 {_107639 B : Type'} (_53779 : type839 _107639 B) : (term1250 _107639 B _53779) = (term1251 _107639 B _53779).
Proof. exact (fun_ext (fun f : type838 _107639 B => @lem4536586 _107639 B _53779 f)). Qed.
Lemma lem4536588 {_107639 B : Type'} : (@ex ((B -> Prop) -> (_107639 -> Prop) -> B -> (_107639 -> B) -> _107639 -> B)) = (@ex ((B -> Prop) -> (_107639 -> Prop) -> B -> (_107639 -> B) -> _107639 -> B)).
Proof. exact (eq_refl (@ex ((B -> Prop) -> (_107639 -> Prop) -> B -> (_107639 -> B) -> _107639 -> B))). Qed.
Lemma lem4536589 {_107639 B : Type'} (_53779 : type839 _107639 B) : (term1233 _107639 B _53779) = (term1252 _107639 B _53779).
Proof. exact (MK_COMB (@lem4536588 _107639 B) (@lem4536587 _107639 B _53779)). Qed.
Lemma lem4536590 {_107639 B : Type'} (_53779 : type839 _107639 B) : ((term1232 _107639 B _53779) = (term1233 _107639 B _53779)) = ((term1229 _107639 B _53779) = (term1252 _107639 B _53779)).
Proof. exact (MK_COMB (@lem4536578 _107639 B _53779) (@lem4536589 _107639 B _53779)). Qed.
Lemma lem4536591 {_107639 B : Type'} (_53779 : type839 _107639 B) : (term1229 _107639 B _53779) = (term1252 _107639 B _53779).
Proof. exact (EQ_MP (@lem4536590 _107639 B _53779) (@lem4536565 _107639 B _53779)). Qed.
Lemma lem4536592 {_107639 B : Type'} (_53779 : type839 _107639 B) : (term1137 _107639 B _53779) = (term1252 _107639 B _53779).
Proof. exact (TRANS (@lem4536561 _107639 B _53779) (@lem4536591 _107639 B _53779)). Qed.
Lemma lem4536593 {_107639 B : Type'} (_53779 : type839 _107639 B) : (term1134 _107639 B _53779) = (term1134 _107639 B _53779).
Proof. exact (eq_refl (term1134 _107639 B _53779)). Qed.
Lemma lem4536594 {_107639 B : Type'} (_53779 : type839 _107639 B) : (term1138 _107639 B _53779) = (term1253 _107639 B _53779).
Proof. exact (MK_COMB (@lem4536593 _107639 B _53779) (@lem4536592 _107639 B _53779)). Qed.
Lemma lem4536596 {A : Type'} (P : Prop) (Q : A -> Prop) : (term1008 A P Q) = (term1009 A P Q).
Proof. exact (EQ_MP (@lem18929 A P Q) (@lem18928 A P Q)). Qed.
Lemma lem4536597 {_107639 B : Type'} (P : Prop) (Q : type213 _107639 B) : (term1254 _107639 B P Q) = (term1255 _107639 B P Q).
Proof. exact (@lem4536596 (type838 _107639 B) P Q). Qed.
Lemma lem4536598 {_107639 B : Type'} (_53779 : type839 _107639 B) : (term1256 _107639 B _53779) = (term1257 _107639 B _53779).
Proof. exact (@lem4536597 _107639 B (term1132 _107639 B _53779) (term1251 _107639 B _53779)). Qed.
Lemma lem4536599 {_107639 B : Type'} (_53779 : type839 _107639 B) (f : type838 _107639 B) : (term1258 _107639 B _53779 f) = (term1249 _107639 B _53779 f).
Proof. exact (eq_refl (term1258 _107639 B _53779 f)). Qed.
Lemma lem4536600 {_107639 B : Type'} (_53779 : type839 _107639 B) : (term1259 _107639 B _53779) = (term1251 _107639 B _53779).
Proof. exact (fun_ext (fun f : type838 _107639 B => @lem4536599 _107639 B _53779 f)). Qed.
Lemma lem4536601 {_107639 B : Type'} : (@ex ((B -> Prop) -> (_107639 -> Prop) -> B -> (_107639 -> B) -> _107639 -> B)) = (@ex ((B -> Prop) -> (_107639 -> Prop) -> B -> (_107639 -> B) -> _107639 -> B)).
Proof. exact (eq_refl (@ex ((B -> Prop) -> (_107639 -> Prop) -> B -> (_107639 -> B) -> _107639 -> B))). Qed.
Lemma lem4536602 {_107639 B : Type'} (_53779 : type839 _107639 B) : (term1260 _107639 B _53779) = (term1252 _107639 B _53779).
Proof. exact (MK_COMB (@lem4536601 _107639 B) (@lem4536600 _107639 B _53779)). Qed.
Lemma lem4536603 {_107639 B : Type'} (_53779 : type839 _107639 B) : (term1134 _107639 B _53779) = (term1134 _107639 B _53779).
Proof. exact (eq_refl (term1134 _107639 B _53779)). Qed.
Lemma lem4536604 {_107639 B : Type'} (_53779 : type839 _107639 B) : (term1256 _107639 B _53779) = (term1253 _107639 B _53779).
Proof. exact (MK_COMB (@lem4536603 _107639 B _53779) (@lem4536602 _107639 B _53779)). Qed.
Lemma lem4536605 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4536606 {_107639 B : Type'} (_53779 : type839 _107639 B) : (term1261 _107639 B _53779) = (term1262 _107639 B _53779).
Proof. exact (MK_COMB (@lem4536605) (@lem4536604 _107639 B _53779)). Qed.
Lemma lem4536607 {_107639 B : Type'} (_53779 : type839 _107639 B) (f : type838 _107639 B) : (term1258 _107639 B _53779 f) = (term1249 _107639 B _53779 f).
Proof. exact (eq_refl (term1258 _107639 B _53779 f)). Qed.
Lemma lem4536608 {_107639 B : Type'} (_53779 : type839 _107639 B) : (term1134 _107639 B _53779) = (term1134 _107639 B _53779).
Proof. exact (eq_refl (term1134 _107639 B _53779)). Qed.
Lemma lem4536609 {_107639 B : Type'} (_53779 : type839 _107639 B) (f : type838 _107639 B) : (term1263 _107639 B _53779 f) = (term1264 _107639 B _53779 f).
Proof. exact (MK_COMB (@lem4536608 _107639 B _53779) (@lem4536607 _107639 B _53779 f)). Qed.
Lemma lem4536610 {_107639 B : Type'} (_53779 : type839 _107639 B) : (term1265 _107639 B _53779) = (term1266 _107639 B _53779).
Proof. exact (fun_ext (fun f : type838 _107639 B => @lem4536609 _107639 B _53779 f)). Qed.
Lemma lem4536611 {_107639 B : Type'} : (@ex ((B -> Prop) -> (_107639 -> Prop) -> B -> (_107639 -> B) -> _107639 -> B)) = (@ex ((B -> Prop) -> (_107639 -> Prop) -> B -> (_107639 -> B) -> _107639 -> B)).
Proof. exact (eq_refl (@ex ((B -> Prop) -> (_107639 -> Prop) -> B -> (_107639 -> B) -> _107639 -> B))). Qed.
Lemma lem4536612 {_107639 B : Type'} (_53779 : type839 _107639 B) : (term1257 _107639 B _53779) = (term1267 _107639 B _53779).
Proof. exact (MK_COMB (@lem4536611 _107639 B) (@lem4536610 _107639 B _53779)). Qed.
Lemma lem4536613 {_107639 B : Type'} (_53779 : type839 _107639 B) : ((term1256 _107639 B _53779) = (term1257 _107639 B _53779)) = ((term1253 _107639 B _53779) = (term1267 _107639 B _53779)).
Proof. exact (MK_COMB (@lem4536606 _107639 B _53779) (@lem4536612 _107639 B _53779)). Qed.
Lemma lem4536614 {_107639 B : Type'} (_53779 : type839 _107639 B) : (term1253 _107639 B _53779) = (term1267 _107639 B _53779).
Proof. exact (EQ_MP (@lem4536613 _107639 B _53779) (@lem4536598 _107639 B _53779)). Qed.
Lemma lem4536615 {_107639 B : Type'} (_53779 : type839 _107639 B) : (term1138 _107639 B _53779) = (term1267 _107639 B _53779).
Proof. exact (TRANS (@lem4536594 _107639 B _53779) (@lem4536614 _107639 B _53779)). Qed.
Lemma lem4536616 {_107639 B : Type'} (_53779 : type839 _107639 B) : (term1050 _107639 B _53779) = (term1267 _107639 B _53779).
Proof. exact (TRANS (@lem4536436 _107639 B _53779) (@lem4536615 _107639 B _53779)). Qed.
Lemma lem4536617 {_107639 B : Type'} (_53779 : type839 _107639 B) : (term514 _107639 B _53779) = (term1267 _107639 B _53779).
Proof. exact (TRANS (@lem4535776 _107639 B _53779) (@lem4536616 _107639 B _53779)). Qed.
Lemma lem4536618 {_107639 B : Type'} (_53779 : type839 _107639 B) (h1 : term514 _107639 B _53779) : term1267 _107639 B _53779.
Proof. exact (EQ_MP (@lem4536617 _107639 B _53779) (@lem4533066 _107639 B _53779 h1)). Qed.
Lemma lem4536622 {_107642 A : Type'} (GEN_PVAR_148 : A -> _107642) (t : _107642 -> Prop) (s : A -> Prop) (d : _107642) (f : A -> _107642) : (term149 _107642 A GEN_PVAR_148 t s d f) = (term149 _107642 A GEN_PVAR_148 t s d f).
Proof. exact (eq_refl (term149 _107642 A GEN_PVAR_148 t s d f)). Qed.
Lemma lem4536623 {_107642 A : Type'} (P : type805 _107642 A) : (term1268 _107642 A P) = (term1269 _107642 A P).
Proof. exact (@lem18394 (A -> _107642) P). Qed.
Lemma lem4536624 {_107642 A : Type'} (GEN_PVAR_148 : A -> _107642) (t : _107642 -> Prop) (s : A -> Prop) (d : _107642) : (term1270 _107642 A GEN_PVAR_148 t s d) = (term1271 _107642 A GEN_PVAR_148 t s d).
Proof. exact (@lem4536623 _107642 A (term150 _107642 A GEN_PVAR_148 t s d)). Qed.
Lemma lem4536625 {_107642 A : Type'} (GEN_PVAR_148 : A -> _107642) (t : _107642 -> Prop) (s : A -> Prop) (d : _107642) (f : A -> _107642) : (term1272 _107642 A GEN_PVAR_148 t s d f) = (term149 _107642 A GEN_PVAR_148 t s d f).
Proof. exact (eq_refl (term1272 _107642 A GEN_PVAR_148 t s d f)). Qed.
Lemma lem4536626 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem4536628 {_107642 A : Type'} (GEN_PVAR_148 : A -> _107642) (t : _107642 -> Prop) (s : A -> Prop) (d : _107642) (f : A -> _107642) : (term1273 _107642 A GEN_PVAR_148 t s d f) = (term1274 _107642 A GEN_PVAR_148 t s d f).
Proof. exact (MK_COMB (@lem4536626) (@lem4536625 _107642 A GEN_PVAR_148 t s d f)). Qed.
Lemma lem4536629 {_107642 A : Type'} (GEN_PVAR_148 : A -> _107642) (t : _107642 -> Prop) (s : A -> Prop) (d : _107642) : (term1275 _107642 A GEN_PVAR_148 t s d) = (term1276 _107642 A GEN_PVAR_148 t s d).
Proof. exact (fun_ext (fun f : A -> _107642 => @lem4536628 _107642 A GEN_PVAR_148 t s d f)). Qed.
Lemma lem4536630 {_107642 A : Type'} : (@all (A -> _107642)) = (@all (A -> _107642)).
Proof. exact (eq_refl (@all (A -> _107642))). Qed.
Lemma lem4536631 {_107642 A : Type'} (GEN_PVAR_148 : A -> _107642) (t : _107642 -> Prop) (s : A -> Prop) (d : _107642) : (term1271 _107642 A GEN_PVAR_148 t s d) = (term1277 _107642 A GEN_PVAR_148 t s d).
Proof. exact (MK_COMB (@lem4536630 _107642 A) (@lem4536629 _107642 A GEN_PVAR_148 t s d)). Qed.
Lemma lem4536632 {_107642 A : Type'} (GEN_PVAR_148 : A -> _107642) (t : _107642 -> Prop) (s : A -> Prop) (d : _107642) : (term1270 _107642 A GEN_PVAR_148 t s d) = (term1277 _107642 A GEN_PVAR_148 t s d).
Proof. exact (TRANS (@lem4536624 _107642 A GEN_PVAR_148 t s d) (@lem4536631 _107642 A GEN_PVAR_148 t s d)). Qed.
Lemma lem4536633 {_107642 A : Type'} (GEN_PVAR_148 : A -> _107642) (t : _107642 -> Prop) (s : A -> Prop) (d : _107642) : (term150 _107642 A GEN_PVAR_148 t s d) = (term150 _107642 A GEN_PVAR_148 t s d).
Proof. exact (fun_ext (fun f : A -> _107642 => @lem4536622 _107642 A GEN_PVAR_148 t s d f)). Qed.
Lemma lem4536634 {_107642 A : Type'} : (@ex (A -> _107642)) = (@ex (A -> _107642)).
Proof. exact (eq_refl (@ex (A -> _107642))). Qed.
Lemma lem4536635 {_107642 A : Type'} (GEN_PVAR_148 : A -> _107642) (t : _107642 -> Prop) (s : A -> Prop) (d : _107642) : (term151 _107642 A GEN_PVAR_148 t s d) = (term151 _107642 A GEN_PVAR_148 t s d).
Proof. exact (MK_COMB (@lem4536634 _107642 A) (@lem4536633 _107642 A GEN_PVAR_148 t s d)). Qed.
Lemma lem4536637 {_107642 A : Type'} (_53778 : type656 _107642 A) (t : _107642 -> Prop) (s : A -> Prop) (d : _107642) (GEN_PVAR_148 : A -> _107642) : (term1278 _107642 A _53778 t s d GEN_PVAR_148) = (term1278 _107642 A _53778 t s d GEN_PVAR_148).
Proof. exact (eq_refl (term1278 _107642 A _53778 t s d GEN_PVAR_148)). Qed.
Lemma lem4536638 {_107642 A : Type'} (_53778 : type656 _107642 A) (GEN_PVAR_148 : A -> _107642) (t : _107642 -> Prop) (s : A -> Prop) (d : _107642) : (term1279 _107642 A _53778 GEN_PVAR_148 t s d) = (term1279 _107642 A _53778 GEN_PVAR_148 t s d).
Proof. exact (MK_COMB (@lem4536637 _107642 A _53778 t s d GEN_PVAR_148) (@lem4536635 _107642 A GEN_PVAR_148 t s d)). Qed.
Lemma lem4536640 {_107642 A : Type'} (_53778 : type656 _107642 A) (t : _107642 -> Prop) (s : A -> Prop) (d : _107642) (GEN_PVAR_148 : A -> _107642) : (term1280 _107642 A _53778 t s d GEN_PVAR_148) = (term1280 _107642 A _53778 t s d GEN_PVAR_148).
Proof. exact (eq_refl (term1280 _107642 A _53778 t s d GEN_PVAR_148)). Qed.
Lemma lem4536641 {_107642 A : Type'} (_53778 : type656 _107642 A) (GEN_PVAR_148 : A -> _107642) (t : _107642 -> Prop) (s : A -> Prop) (d : _107642) : (term1281 _107642 A _53778 GEN_PVAR_148 t s d) = (term1282 _107642 A _53778 GEN_PVAR_148 t s d).
Proof. exact (MK_COMB (@lem4536640 _107642 A _53778 t s d GEN_PVAR_148) (@lem4536632 _107642 A GEN_PVAR_148 t s d)). Qed.
Lemma lem4536642 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4536643 {_107642 A : Type'} (_53778 : type656 _107642 A) (GEN_PVAR_148 : A -> _107642) (t : _107642 -> Prop) (s : A -> Prop) (d : _107642) : (term1283 _107642 A _53778 GEN_PVAR_148 t s d) = (term1284 _107642 A _53778 GEN_PVAR_148 t s d).
Proof. exact (MK_COMB (@lem4536642) (@lem4536641 _107642 A _53778 GEN_PVAR_148 t s d)). Qed.
Lemma lem4536644 {_107642 A : Type'} (_53778 : type656 _107642 A) (GEN_PVAR_148 : A -> _107642) (t : _107642 -> Prop) (s : A -> Prop) (d : _107642) : (term1285 _107642 A _53778 GEN_PVAR_148 t s d) = (term1286 _107642 A _53778 GEN_PVAR_148 t s d).
Proof. exact (MK_COMB (@lem4536643 _107642 A _53778 GEN_PVAR_148 t s d) (@lem4536638 _107642 A _53778 GEN_PVAR_148 t s d)). Qed.
Lemma lem4536645 {_107642 A : Type'} (_53778 : type656 _107642 A) (GEN_PVAR_148 : A -> _107642) (t : _107642 -> Prop) (s : A -> Prop) (d : _107642) : ((_53778 t s d GEN_PVAR_148) = (term151 _107642 A GEN_PVAR_148 t s d)) = (term1285 _107642 A _53778 GEN_PVAR_148 t s d).
Proof. exact (@lem17784 (_53778 t s d GEN_PVAR_148) (term151 _107642 A GEN_PVAR_148 t s d)). Qed.
Lemma lem4536646 {_107642 A : Type'} (_53778 : type656 _107642 A) (GEN_PVAR_148 : A -> _107642) (t : _107642 -> Prop) (s : A -> Prop) (d : _107642) : ((_53778 t s d GEN_PVAR_148) = (term151 _107642 A GEN_PVAR_148 t s d)) = (term1286 _107642 A _53778 GEN_PVAR_148 t s d).
Proof. exact (TRANS (@lem4536645 _107642 A _53778 GEN_PVAR_148 t s d) (@lem4536644 _107642 A _53778 GEN_PVAR_148 t s d)). Qed.
Lemma lem4536647 {_107642 A : Type'} (_53778 : type656 _107642 A) (t : _107642 -> Prop) (s : A -> Prop) (d : _107642) : (term295 _107642 A _53778 t s d) = (term1287 _107642 A _53778 t s d).
Proof. exact (fun_ext (fun GEN_PVAR_148 : A -> _107642 => @lem4536646 _107642 A _53778 GEN_PVAR_148 t s d)). Qed.
Lemma lem4536648 {_107642 A : Type'} : (@all (A -> _107642)) = (@all (A -> _107642)).
Proof. exact (eq_refl (@all (A -> _107642))). Qed.
Lemma lem4536649 {_107642 A : Type'} (_53778 : type656 _107642 A) (t : _107642 -> Prop) (s : A -> Prop) (d : _107642) : (term296 _107642 A _53778 t s d) = (term1288 _107642 A _53778 t s d).
Proof. exact (MK_COMB (@lem4536648 _107642 A) (@lem4536647 _107642 A _53778 t s d)). Qed.
Lemma lem4536650 {_107642 A : Type'} (_53778 : type656 _107642 A) (t : _107642 -> Prop) (s : A -> Prop) : (term297 _107642 A _53778 t s) = (term1289 _107642 A _53778 t s).
Proof. exact (fun_ext (fun d : _107642 => @lem4536649 _107642 A _53778 t s d)). Qed.
Lemma lem4536651 {_107642 : Type'} : (@all _107642) = (@all _107642).
Proof. exact (eq_refl (@all _107642)). Qed.
Lemma lem4536652 {_107642 A : Type'} (_53778 : type656 _107642 A) (t : _107642 -> Prop) (s : A -> Prop) : (term298 _107642 A _53778 t s) = (term1290 _107642 A _53778 t s).
Proof. exact (MK_COMB (@lem4536651 _107642) (@lem4536650 _107642 A _53778 t s)). Qed.
Lemma lem4536653 {_107642 A : Type'} (_53778 : type656 _107642 A) (t : _107642 -> Prop) : (term299 _107642 A _53778 t) = (term1291 _107642 A _53778 t).
Proof. exact (fun_ext (fun s : A -> Prop => @lem4536652 _107642 A _53778 t s)). Qed.
Lemma lem4536654 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem4536655 {_107642 A : Type'} (_53778 : type656 _107642 A) (t : _107642 -> Prop) : (term300 _107642 A _53778 t) = (term1292 _107642 A _53778 t).
Proof. exact (MK_COMB (@lem4536654 A) (@lem4536653 _107642 A _53778 t)). Qed.
Lemma lem4536656 {_107642 A : Type'} (_53778 : type656 _107642 A) : (term301 _107642 A _53778) = (term1293 _107642 A _53778).
Proof. exact (fun_ext (fun t : _107642 -> Prop => @lem4536655 _107642 A _53778 t)). Qed.
Lemma lem4536657 {_107642 : Type'} : (@all (_107642 -> Prop)) = (@all (_107642 -> Prop)).
Proof. exact (eq_refl (@all (_107642 -> Prop))). Qed.
Lemma lem4536658 {_107642 A : Type'} (_53778 : type656 _107642 A) : (term302 _107642 A _53778) = (term1294 _107642 A _53778).
Proof. exact (MK_COMB (@lem4536657 _107642) (@lem4536656 _107642 A _53778)). Qed.
Lemma lem4536672 {A : Type'} (P : A -> Prop) (Q : A -> Prop) : (term793 A P Q) = (term794 A P Q).
Proof. exact (EQ_MP (@lem18953 A P Q) (@lem18952 A P Q)). Qed.
Lemma lem4536673 {_107642 A : Type'} (P : type805 _107642 A) (Q : type805 _107642 A) : (term1295 _107642 A P Q) = (term1296 _107642 A P Q).
Proof. exact (@lem4536672 (A -> _107642) P Q). Qed.
Lemma lem4536674 {_107642 A : Type'} (_53778 : type656 _107642 A) (t : _107642 -> Prop) (s : A -> Prop) (d : _107642) : (term1297 _107642 A _53778 t s d) = (term1298 _107642 A _53778 t s d).
Proof. exact (@lem4536673 _107642 A (term1299 _107642 A _53778 t s d) (term1300 _107642 A _53778 t s d)). Qed.
Lemma lem4536675 {_107642 A : Type'} (_53778 : type656 _107642 A) (GEN_PVAR_148 : A -> _107642) (t : _107642 -> Prop) (s : A -> Prop) (d : _107642) : (term1301 _107642 A _53778 t s d GEN_PVAR_148) = (term1282 _107642 A _53778 GEN_PVAR_148 t s d).
Proof. exact (eq_refl (term1301 _107642 A _53778 t s d GEN_PVAR_148)). Qed.
Lemma lem4536676 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4536677 {_107642 A : Type'} (_53778 : type656 _107642 A) (GEN_PVAR_148 : A -> _107642) (t : _107642 -> Prop) (s : A -> Prop) (d : _107642) : (term1302 _107642 A _53778 t s d GEN_PVAR_148) = (term1284 _107642 A _53778 GEN_PVAR_148 t s d).
Proof. exact (MK_COMB (@lem4536676) (@lem4536675 _107642 A _53778 GEN_PVAR_148 t s d)). Qed.
Lemma lem4536678 {_107642 A : Type'} (_53778 : type656 _107642 A) (GEN_PVAR_148 : A -> _107642) (t : _107642 -> Prop) (s : A -> Prop) (d : _107642) : (term1303 _107642 A _53778 t s d GEN_PVAR_148) = (term1279 _107642 A _53778 GEN_PVAR_148 t s d).
Proof. exact (eq_refl (term1303 _107642 A _53778 t s d GEN_PVAR_148)). Qed.
Lemma lem4536679 {_107642 A : Type'} (_53778 : type656 _107642 A) (GEN_PVAR_148 : A -> _107642) (t : _107642 -> Prop) (s : A -> Prop) (d : _107642) : (term1304 _107642 A _53778 t s d GEN_PVAR_148) = (term1286 _107642 A _53778 GEN_PVAR_148 t s d).
Proof. exact (MK_COMB (@lem4536677 _107642 A _53778 GEN_PVAR_148 t s d) (@lem4536678 _107642 A _53778 GEN_PVAR_148 t s d)). Qed.
Lemma lem4536680 {_107642 A : Type'} (_53778 : type656 _107642 A) (t : _107642 -> Prop) (s : A -> Prop) (d : _107642) : (term1305 _107642 A _53778 t s d) = (term1287 _107642 A _53778 t s d).
Proof. exact (fun_ext (fun GEN_PVAR_148 : A -> _107642 => @lem4536679 _107642 A _53778 GEN_PVAR_148 t s d)). Qed.
Lemma lem4536681 {_107642 A : Type'} : (@all (A -> _107642)) = (@all (A -> _107642)).
Proof. exact (eq_refl (@all (A -> _107642))). Qed.
Lemma lem4536682 {_107642 A : Type'} (_53778 : type656 _107642 A) (t : _107642 -> Prop) (s : A -> Prop) (d : _107642) : (term1297 _107642 A _53778 t s d) = (term1288 _107642 A _53778 t s d).
Proof. exact (MK_COMB (@lem4536681 _107642 A) (@lem4536680 _107642 A _53778 t s d)). Qed.
Lemma lem4536683 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4536684 {_107642 A : Type'} (_53778 : type656 _107642 A) (t : _107642 -> Prop) (s : A -> Prop) (d : _107642) : (term1306 _107642 A _53778 t s d) = (term1307 _107642 A _53778 t s d).
Proof. exact (MK_COMB (@lem4536683) (@lem4536682 _107642 A _53778 t s d)). Qed.
Lemma lem4536685 {_107642 A : Type'} (_53778 : type656 _107642 A) (GEN_PVAR_148 : A -> _107642) (t : _107642 -> Prop) (s : A -> Prop) (d : _107642) : (term1301 _107642 A _53778 t s d GEN_PVAR_148) = (term1282 _107642 A _53778 GEN_PVAR_148 t s d).
Proof. exact (eq_refl (term1301 _107642 A _53778 t s d GEN_PVAR_148)). Qed.
Lemma lem4536686 {_107642 A : Type'} (_53778 : type656 _107642 A) (t : _107642 -> Prop) (s : A -> Prop) (d : _107642) : (term1308 _107642 A _53778 t s d) = (term1299 _107642 A _53778 t s d).
Proof. exact (fun_ext (fun GEN_PVAR_148 : A -> _107642 => @lem4536685 _107642 A _53778 GEN_PVAR_148 t s d)). Qed.
Lemma lem4536687 {_107642 A : Type'} : (@all (A -> _107642)) = (@all (A -> _107642)).
Proof. exact (eq_refl (@all (A -> _107642))). Qed.
Lemma lem4536688 {_107642 A : Type'} (_53778 : type656 _107642 A) (t : _107642 -> Prop) (s : A -> Prop) (d : _107642) : (term1309 _107642 A _53778 t s d) = (term1310 _107642 A _53778 t s d).
Proof. exact (MK_COMB (@lem4536687 _107642 A) (@lem4536686 _107642 A _53778 t s d)). Qed.
Lemma lem4536689 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4536690 {_107642 A : Type'} (_53778 : type656 _107642 A) (t : _107642 -> Prop) (s : A -> Prop) (d : _107642) : (term1311 _107642 A _53778 t s d) = (term1312 _107642 A _53778 t s d).
Proof. exact (MK_COMB (@lem4536689) (@lem4536688 _107642 A _53778 t s d)). Qed.
Lemma lem4536691 {_107642 A : Type'} (_53778 : type656 _107642 A) (GEN_PVAR_148 : A -> _107642) (t : _107642 -> Prop) (s : A -> Prop) (d : _107642) : (term1303 _107642 A _53778 t s d GEN_PVAR_148) = (term1279 _107642 A _53778 GEN_PVAR_148 t s d).
Proof. exact (eq_refl (term1303 _107642 A _53778 t s d GEN_PVAR_148)). Qed.
Lemma lem4536692 {_107642 A : Type'} (_53778 : type656 _107642 A) (t : _107642 -> Prop) (s : A -> Prop) (d : _107642) : (term1313 _107642 A _53778 t s d) = (term1300 _107642 A _53778 t s d).
Proof. exact (fun_ext (fun GEN_PVAR_148 : A -> _107642 => @lem4536691 _107642 A _53778 GEN_PVAR_148 t s d)). Qed.
Lemma lem4536693 {_107642 A : Type'} : (@all (A -> _107642)) = (@all (A -> _107642)).
Proof. exact (eq_refl (@all (A -> _107642))). Qed.
Lemma lem4536694 {_107642 A : Type'} (_53778 : type656 _107642 A) (t : _107642 -> Prop) (s : A -> Prop) (d : _107642) : (term1314 _107642 A _53778 t s d) = (term1315 _107642 A _53778 t s d).
Proof. exact (MK_COMB (@lem4536693 _107642 A) (@lem4536692 _107642 A _53778 t s d)). Qed.
Lemma lem4536695 {_107642 A : Type'} (_53778 : type656 _107642 A) (t : _107642 -> Prop) (s : A -> Prop) (d : _107642) : (term1298 _107642 A _53778 t s d) = (term1316 _107642 A _53778 t s d).
Proof. exact (MK_COMB (@lem4536690 _107642 A _53778 t s d) (@lem4536694 _107642 A _53778 t s d)). Qed.
Lemma lem4536696 {_107642 A : Type'} (_53778 : type656 _107642 A) (t : _107642 -> Prop) (s : A -> Prop) (d : _107642) : ((term1297 _107642 A _53778 t s d) = (term1298 _107642 A _53778 t s d)) = ((term1288 _107642 A _53778 t s d) = (term1316 _107642 A _53778 t s d)).
Proof. exact (MK_COMB (@lem4536684 _107642 A _53778 t s d) (@lem4536695 _107642 A _53778 t s d)). Qed.
Lemma lem4536697 {_107642 A : Type'} (_53778 : type656 _107642 A) (t : _107642 -> Prop) (s : A -> Prop) (d : _107642) : (term1288 _107642 A _53778 t s d) = (term1316 _107642 A _53778 t s d).
Proof. exact (EQ_MP (@lem4536696 _107642 A _53778 t s d) (@lem4536674 _107642 A _53778 t s d)). Qed.
Lemma lem4536818 {_107642 A : Type'} (_53778 : type656 _107642 A) (t : _107642 -> Prop) (s : A -> Prop) : (term1289 _107642 A _53778 t s) = (term1317 _107642 A _53778 t s).
Proof. exact (fun_ext (fun d : _107642 => @lem4536697 _107642 A _53778 t s d)). Qed.
Lemma lem4536819 {_107642 : Type'} : (@all _107642) = (@all _107642).
Proof. exact (eq_refl (@all _107642)). Qed.
Lemma lem4536820 {_107642 A : Type'} (_53778 : type656 _107642 A) (t : _107642 -> Prop) (s : A -> Prop) : (term1290 _107642 A _53778 t s) = (term1318 _107642 A _53778 t s).
Proof. exact (MK_COMB (@lem4536819 _107642) (@lem4536818 _107642 A _53778 t s)). Qed.
Lemma lem4536822 {A : Type'} (P : A -> Prop) (Q : A -> Prop) : (term793 A P Q) = (term794 A P Q).
Proof. exact (EQ_MP (@lem18953 A P Q) (@lem18952 A P Q)). Qed.
Lemma lem4536823 {_107642 : Type'} (P : _107642 -> Prop) (Q : _107642 -> Prop) : (term793 _107642 P Q) = (term794 _107642 P Q).
Proof. exact (@lem4536822 _107642 P Q). Qed.
Lemma lem4536824 {_107642 A : Type'} (_53778 : type656 _107642 A) (t : _107642 -> Prop) (s : A -> Prop) : (term1319 _107642 A _53778 t s) = (term1320 _107642 A _53778 t s).
Proof. exact (@lem4536823 _107642 (term1321 _107642 A _53778 t s) (term1322 _107642 A _53778 t s)). Qed.
Lemma lem4536825 {_107642 A : Type'} (_53778 : type656 _107642 A) (t : _107642 -> Prop) (s : A -> Prop) (d : _107642) : (term1323 _107642 A _53778 t s d) = (term1310 _107642 A _53778 t s d).
Proof. exact (eq_refl (term1323 _107642 A _53778 t s d)). Qed.
Lemma lem4536826 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4536827 {_107642 A : Type'} (_53778 : type656 _107642 A) (t : _107642 -> Prop) (s : A -> Prop) (d : _107642) : (term1324 _107642 A _53778 t s d) = (term1312 _107642 A _53778 t s d).
Proof. exact (MK_COMB (@lem4536826) (@lem4536825 _107642 A _53778 t s d)). Qed.
Lemma lem4536828 {_107642 A : Type'} (_53778 : type656 _107642 A) (t : _107642 -> Prop) (s : A -> Prop) (d : _107642) : (term1325 _107642 A _53778 t s d) = (term1315 _107642 A _53778 t s d).
Proof. exact (eq_refl (term1325 _107642 A _53778 t s d)). Qed.
Lemma lem4536829 {_107642 A : Type'} (_53778 : type656 _107642 A) (t : _107642 -> Prop) (s : A -> Prop) (d : _107642) : (term1326 _107642 A _53778 t s d) = (term1316 _107642 A _53778 t s d).
Proof. exact (MK_COMB (@lem4536827 _107642 A _53778 t s d) (@lem4536828 _107642 A _53778 t s d)). Qed.
Lemma lem4536830 {_107642 A : Type'} (_53778 : type656 _107642 A) (t : _107642 -> Prop) (s : A -> Prop) : (term1327 _107642 A _53778 t s) = (term1317 _107642 A _53778 t s).
Proof. exact (fun_ext (fun d : _107642 => @lem4536829 _107642 A _53778 t s d)). Qed.
Lemma lem4536831 {_107642 : Type'} : (@all _107642) = (@all _107642).
Proof. exact (eq_refl (@all _107642)). Qed.
Lemma lem4536832 {_107642 A : Type'} (_53778 : type656 _107642 A) (t : _107642 -> Prop) (s : A -> Prop) : (term1319 _107642 A _53778 t s) = (term1318 _107642 A _53778 t s).
Proof. exact (MK_COMB (@lem4536831 _107642) (@lem4536830 _107642 A _53778 t s)). Qed.
Lemma lem4536833 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4536834 {_107642 A : Type'} (_53778 : type656 _107642 A) (t : _107642 -> Prop) (s : A -> Prop) : (term1328 _107642 A _53778 t s) = (term1329 _107642 A _53778 t s).
Proof. exact (MK_COMB (@lem4536833) (@lem4536832 _107642 A _53778 t s)). Qed.
Lemma lem4536835 {_107642 A : Type'} (_53778 : type656 _107642 A) (t : _107642 -> Prop) (s : A -> Prop) (d : _107642) : (term1323 _107642 A _53778 t s d) = (term1310 _107642 A _53778 t s d).
Proof. exact (eq_refl (term1323 _107642 A _53778 t s d)). Qed.
Lemma lem4536836 {_107642 A : Type'} (_53778 : type656 _107642 A) (t : _107642 -> Prop) (s : A -> Prop) : (term1330 _107642 A _53778 t s) = (term1321 _107642 A _53778 t s).
Proof. exact (fun_ext (fun d : _107642 => @lem4536835 _107642 A _53778 t s d)). Qed.
Lemma lem4536837 {_107642 : Type'} : (@all _107642) = (@all _107642).
Proof. exact (eq_refl (@all _107642)). Qed.
Lemma lem4536838 {_107642 A : Type'} (_53778 : type656 _107642 A) (t : _107642 -> Prop) (s : A -> Prop) : (term1331 _107642 A _53778 t s) = (term1332 _107642 A _53778 t s).
Proof. exact (MK_COMB (@lem4536837 _107642) (@lem4536836 _107642 A _53778 t s)). Qed.
Lemma lem4536839 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4536840 {_107642 A : Type'} (_53778 : type656 _107642 A) (t : _107642 -> Prop) (s : A -> Prop) : (term1333 _107642 A _53778 t s) = (term1334 _107642 A _53778 t s).
Proof. exact (MK_COMB (@lem4536839) (@lem4536838 _107642 A _53778 t s)). Qed.
Lemma lem4536841 {_107642 A : Type'} (_53778 : type656 _107642 A) (t : _107642 -> Prop) (s : A -> Prop) (d : _107642) : (term1325 _107642 A _53778 t s d) = (term1315 _107642 A _53778 t s d).
Proof. exact (eq_refl (term1325 _107642 A _53778 t s d)). Qed.
Lemma lem4536842 {_107642 A : Type'} (_53778 : type656 _107642 A) (t : _107642 -> Prop) (s : A -> Prop) : (term1335 _107642 A _53778 t s) = (term1322 _107642 A _53778 t s).
Proof. exact (fun_ext (fun d : _107642 => @lem4536841 _107642 A _53778 t s d)). Qed.
Lemma lem4536843 {_107642 : Type'} : (@all _107642) = (@all _107642).
Proof. exact (eq_refl (@all _107642)). Qed.
Lemma lem4536844 {_107642 A : Type'} (_53778 : type656 _107642 A) (t : _107642 -> Prop) (s : A -> Prop) : (term1336 _107642 A _53778 t s) = (term1337 _107642 A _53778 t s).
Proof. exact (MK_COMB (@lem4536843 _107642) (@lem4536842 _107642 A _53778 t s)). Qed.
Lemma lem4536845 {_107642 A : Type'} (_53778 : type656 _107642 A) (t : _107642 -> Prop) (s : A -> Prop) : (term1320 _107642 A _53778 t s) = (term1338 _107642 A _53778 t s).
Proof. exact (MK_COMB (@lem4536840 _107642 A _53778 t s) (@lem4536844 _107642 A _53778 t s)). Qed.
Lemma lem4536846 {_107642 A : Type'} (_53778 : type656 _107642 A) (t : _107642 -> Prop) (s : A -> Prop) : ((term1319 _107642 A _53778 t s) = (term1320 _107642 A _53778 t s)) = ((term1318 _107642 A _53778 t s) = (term1338 _107642 A _53778 t s)).
Proof. exact (MK_COMB (@lem4536834 _107642 A _53778 t s) (@lem4536845 _107642 A _53778 t s)). Qed.
Lemma lem4536847 {_107642 A : Type'} (_53778 : type656 _107642 A) (t : _107642 -> Prop) (s : A -> Prop) : (term1318 _107642 A _53778 t s) = (term1338 _107642 A _53778 t s).
Proof. exact (EQ_MP (@lem4536846 _107642 A _53778 t s) (@lem4536824 _107642 A _53778 t s)). Qed.
Lemma lem4536976 {_107642 A : Type'} (_53778 : type656 _107642 A) (t : _107642 -> Prop) (s : A -> Prop) : (term1290 _107642 A _53778 t s) = (term1338 _107642 A _53778 t s).
Proof. exact (TRANS (@lem4536820 _107642 A _53778 t s) (@lem4536847 _107642 A _53778 t s)). Qed.
Lemma lem4536977 {_107642 A : Type'} (_53778 : type656 _107642 A) (t : _107642 -> Prop) : (term1291 _107642 A _53778 t) = (term1339 _107642 A _53778 t).
Proof. exact (fun_ext (fun s : A -> Prop => @lem4536976 _107642 A _53778 t s)). Qed.
Lemma lem4536978 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem4536979 {_107642 A : Type'} (_53778 : type656 _107642 A) (t : _107642 -> Prop) : (term1292 _107642 A _53778 t) = (term1340 _107642 A _53778 t).
Proof. exact (MK_COMB (@lem4536978 A) (@lem4536977 _107642 A _53778 t)). Qed.
Lemma lem4536981 {A : Type'} (P : A -> Prop) (Q : A -> Prop) : (term793 A P Q) = (term794 A P Q).
Proof. exact (EQ_MP (@lem18953 A P Q) (@lem18952 A P Q)). Qed.
Lemma lem4536982 {A : Type'} (P : type686 A) (Q : type686 A) : (term843 A P Q) = (term844 A P Q).
Proof. exact (@lem4536981 (A -> Prop) P Q). Qed.
Lemma lem4536983 {_107642 A : Type'} (_53778 : type656 _107642 A) (t : _107642 -> Prop) : (term1341 _107642 A _53778 t) = (term1342 _107642 A _53778 t).
Proof. exact (@lem4536982 A (term1343 _107642 A _53778 t) (term1344 _107642 A _53778 t)). Qed.
Lemma lem4536984 {_107642 A : Type'} (_53778 : type656 _107642 A) (t : _107642 -> Prop) (s : A -> Prop) : (term1345 _107642 A _53778 t s) = (term1332 _107642 A _53778 t s).
Proof. exact (eq_refl (term1345 _107642 A _53778 t s)). Qed.
Lemma lem4536985 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4536986 {_107642 A : Type'} (_53778 : type656 _107642 A) (t : _107642 -> Prop) (s : A -> Prop) : (term1346 _107642 A _53778 t s) = (term1334 _107642 A _53778 t s).
Proof. exact (MK_COMB (@lem4536985) (@lem4536984 _107642 A _53778 t s)). Qed.
Lemma lem4536987 {_107642 A : Type'} (_53778 : type656 _107642 A) (t : _107642 -> Prop) (s : A -> Prop) : (term1347 _107642 A _53778 t s) = (term1337 _107642 A _53778 t s).
Proof. exact (eq_refl (term1347 _107642 A _53778 t s)). Qed.
Lemma lem4536988 {_107642 A : Type'} (_53778 : type656 _107642 A) (t : _107642 -> Prop) (s : A -> Prop) : (term1348 _107642 A _53778 t s) = (term1338 _107642 A _53778 t s).
Proof. exact (MK_COMB (@lem4536986 _107642 A _53778 t s) (@lem4536987 _107642 A _53778 t s)). Qed.
Lemma lem4536989 {_107642 A : Type'} (_53778 : type656 _107642 A) (t : _107642 -> Prop) : (term1349 _107642 A _53778 t) = (term1339 _107642 A _53778 t).
Proof. exact (fun_ext (fun s : A -> Prop => @lem4536988 _107642 A _53778 t s)). Qed.
Lemma lem4536990 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem4536991 {_107642 A : Type'} (_53778 : type656 _107642 A) (t : _107642 -> Prop) : (term1341 _107642 A _53778 t) = (term1340 _107642 A _53778 t).
Proof. exact (MK_COMB (@lem4536990 A) (@lem4536989 _107642 A _53778 t)). Qed.
Lemma lem4536992 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4536993 {_107642 A : Type'} (_53778 : type656 _107642 A) (t : _107642 -> Prop) : (term1350 _107642 A _53778 t) = (term1351 _107642 A _53778 t).
Proof. exact (MK_COMB (@lem4536992) (@lem4536991 _107642 A _53778 t)). Qed.
Lemma lem4536994 {_107642 A : Type'} (_53778 : type656 _107642 A) (t : _107642 -> Prop) (s : A -> Prop) : (term1345 _107642 A _53778 t s) = (term1332 _107642 A _53778 t s).
Proof. exact (eq_refl (term1345 _107642 A _53778 t s)). Qed.
Lemma lem4536995 {_107642 A : Type'} (_53778 : type656 _107642 A) (t : _107642 -> Prop) : (term1352 _107642 A _53778 t) = (term1343 _107642 A _53778 t).
Proof. exact (fun_ext (fun s : A -> Prop => @lem4536994 _107642 A _53778 t s)). Qed.
Lemma lem4536996 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem4536997 {_107642 A : Type'} (_53778 : type656 _107642 A) (t : _107642 -> Prop) : (term1353 _107642 A _53778 t) = (term1354 _107642 A _53778 t).
Proof. exact (MK_COMB (@lem4536996 A) (@lem4536995 _107642 A _53778 t)). Qed.
Lemma lem4536998 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4536999 {_107642 A : Type'} (_53778 : type656 _107642 A) (t : _107642 -> Prop) : (term1355 _107642 A _53778 t) = (term1356 _107642 A _53778 t).
Proof. exact (MK_COMB (@lem4536998) (@lem4536997 _107642 A _53778 t)). Qed.
Lemma lem4537000 {_107642 A : Type'} (_53778 : type656 _107642 A) (t : _107642 -> Prop) (s : A -> Prop) : (term1347 _107642 A _53778 t s) = (term1337 _107642 A _53778 t s).
Proof. exact (eq_refl (term1347 _107642 A _53778 t s)). Qed.
Lemma lem4537001 {_107642 A : Type'} (_53778 : type656 _107642 A) (t : _107642 -> Prop) : (term1357 _107642 A _53778 t) = (term1344 _107642 A _53778 t).
Proof. exact (fun_ext (fun s : A -> Prop => @lem4537000 _107642 A _53778 t s)). Qed.
Lemma lem4537002 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem4537003 {_107642 A : Type'} (_53778 : type656 _107642 A) (t : _107642 -> Prop) : (term1358 _107642 A _53778 t) = (term1359 _107642 A _53778 t).
Proof. exact (MK_COMB (@lem4537002 A) (@lem4537001 _107642 A _53778 t)). Qed.
Lemma lem4537004 {_107642 A : Type'} (_53778 : type656 _107642 A) (t : _107642 -> Prop) : (term1342 _107642 A _53778 t) = (term1360 _107642 A _53778 t).
Proof. exact (MK_COMB (@lem4536999 _107642 A _53778 t) (@lem4537003 _107642 A _53778 t)). Qed.
Lemma lem4537005 {_107642 A : Type'} (_53778 : type656 _107642 A) (t : _107642 -> Prop) : ((term1341 _107642 A _53778 t) = (term1342 _107642 A _53778 t)) = ((term1340 _107642 A _53778 t) = (term1360 _107642 A _53778 t)).
Proof. exact (MK_COMB (@lem4536993 _107642 A _53778 t) (@lem4537004 _107642 A _53778 t)). Qed.
Lemma lem4537006 {_107642 A : Type'} (_53778 : type656 _107642 A) (t : _107642 -> Prop) : (term1340 _107642 A _53778 t) = (term1360 _107642 A _53778 t).
Proof. exact (EQ_MP (@lem4537005 _107642 A _53778 t) (@lem4536983 _107642 A _53778 t)). Qed.
Lemma lem4537143 {_107642 A : Type'} (_53778 : type656 _107642 A) (t : _107642 -> Prop) : (term1292 _107642 A _53778 t) = (term1360 _107642 A _53778 t).
Proof. exact (TRANS (@lem4536979 _107642 A _53778 t) (@lem4537006 _107642 A _53778 t)). Qed.
Lemma lem4537144 {_107642 A : Type'} (_53778 : type656 _107642 A) : (term1293 _107642 A _53778) = (term1361 _107642 A _53778).
Proof. exact (fun_ext (fun t : _107642 -> Prop => @lem4537143 _107642 A _53778 t)). Qed.
Lemma lem4537145 {_107642 : Type'} : (@all (_107642 -> Prop)) = (@all (_107642 -> Prop)).
Proof. exact (eq_refl (@all (_107642 -> Prop))). Qed.
Lemma lem4537146 {_107642 A : Type'} (_53778 : type656 _107642 A) : (term1294 _107642 A _53778) = (term1362 _107642 A _53778).
Proof. exact (MK_COMB (@lem4537145 _107642) (@lem4537144 _107642 A _53778)). Qed.
Lemma lem4537148 {A : Type'} (P : A -> Prop) (Q : A -> Prop) : (term793 A P Q) = (term794 A P Q).
Proof. exact (EQ_MP (@lem18953 A P Q) (@lem18952 A P Q)). Qed.
Lemma lem4537149 {_107642 : Type'} (P : type686 _107642) (Q : type686 _107642) : (term843 _107642 P Q) = (term844 _107642 P Q).
Proof. exact (@lem4537148 (_107642 -> Prop) P Q). Qed.
Lemma lem4537150 {_107642 A : Type'} (_53778 : type656 _107642 A) : (term1363 _107642 A _53778) = (term1364 _107642 A _53778).
Proof. exact (@lem4537149 _107642 (term1365 _107642 A _53778) (term1366 _107642 A _53778)). Qed.
Lemma lem4537151 {_107642 A : Type'} (_53778 : type656 _107642 A) (t : _107642 -> Prop) : (term1367 _107642 A _53778 t) = (term1354 _107642 A _53778 t).
Proof. exact (eq_refl (term1367 _107642 A _53778 t)). Qed.
Lemma lem4537152 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4537153 {_107642 A : Type'} (_53778 : type656 _107642 A) (t : _107642 -> Prop) : (term1368 _107642 A _53778 t) = (term1356 _107642 A _53778 t).
Proof. exact (MK_COMB (@lem4537152) (@lem4537151 _107642 A _53778 t)). Qed.
Lemma lem4537154 {_107642 A : Type'} (_53778 : type656 _107642 A) (t : _107642 -> Prop) : (term1369 _107642 A _53778 t) = (term1359 _107642 A _53778 t).
Proof. exact (eq_refl (term1369 _107642 A _53778 t)). Qed.
Lemma lem4537155 {_107642 A : Type'} (_53778 : type656 _107642 A) (t : _107642 -> Prop) : (term1370 _107642 A _53778 t) = (term1360 _107642 A _53778 t).
Proof. exact (MK_COMB (@lem4537153 _107642 A _53778 t) (@lem4537154 _107642 A _53778 t)). Qed.
Lemma lem4537156 {_107642 A : Type'} (_53778 : type656 _107642 A) : (term1371 _107642 A _53778) = (term1361 _107642 A _53778).
Proof. exact (fun_ext (fun t : _107642 -> Prop => @lem4537155 _107642 A _53778 t)). Qed.
Lemma lem4537157 {_107642 : Type'} : (@all (_107642 -> Prop)) = (@all (_107642 -> Prop)).
Proof. exact (eq_refl (@all (_107642 -> Prop))). Qed.
Lemma lem4537158 {_107642 A : Type'} (_53778 : type656 _107642 A) : (term1363 _107642 A _53778) = (term1362 _107642 A _53778).
Proof. exact (MK_COMB (@lem4537157 _107642) (@lem4537156 _107642 A _53778)). Qed.
Lemma lem4537159 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4537160 {_107642 A : Type'} (_53778 : type656 _107642 A) : (term1372 _107642 A _53778) = (term1373 _107642 A _53778).
Proof. exact (MK_COMB (@lem4537159) (@lem4537158 _107642 A _53778)). Qed.
Lemma lem4537161 {_107642 A : Type'} (_53778 : type656 _107642 A) (t : _107642 -> Prop) : (term1367 _107642 A _53778 t) = (term1354 _107642 A _53778 t).
Proof. exact (eq_refl (term1367 _107642 A _53778 t)). Qed.
Lemma lem4537162 {_107642 A : Type'} (_53778 : type656 _107642 A) : (term1374 _107642 A _53778) = (term1365 _107642 A _53778).
Proof. exact (fun_ext (fun t : _107642 -> Prop => @lem4537161 _107642 A _53778 t)). Qed.
Lemma lem4537163 {_107642 : Type'} : (@all (_107642 -> Prop)) = (@all (_107642 -> Prop)).
Proof. exact (eq_refl (@all (_107642 -> Prop))). Qed.
Lemma lem4537164 {_107642 A : Type'} (_53778 : type656 _107642 A) : (term1375 _107642 A _53778) = (term1376 _107642 A _53778).
Proof. exact (MK_COMB (@lem4537163 _107642) (@lem4537162 _107642 A _53778)). Qed.
Lemma lem4537165 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4537166 {_107642 A : Type'} (_53778 : type656 _107642 A) : (term1377 _107642 A _53778) = (term1378 _107642 A _53778).
Proof. exact (MK_COMB (@lem4537165) (@lem4537164 _107642 A _53778)). Qed.
Lemma lem4537167 {_107642 A : Type'} (_53778 : type656 _107642 A) (t : _107642 -> Prop) : (term1369 _107642 A _53778 t) = (term1359 _107642 A _53778 t).
Proof. exact (eq_refl (term1369 _107642 A _53778 t)). Qed.
Lemma lem4537168 {_107642 A : Type'} (_53778 : type656 _107642 A) : (term1379 _107642 A _53778) = (term1366 _107642 A _53778).
Proof. exact (fun_ext (fun t : _107642 -> Prop => @lem4537167 _107642 A _53778 t)). Qed.
Lemma lem4537169 {_107642 : Type'} : (@all (_107642 -> Prop)) = (@all (_107642 -> Prop)).
Proof. exact (eq_refl (@all (_107642 -> Prop))). Qed.
Lemma lem4537170 {_107642 A : Type'} (_53778 : type656 _107642 A) : (term1380 _107642 A _53778) = (term1381 _107642 A _53778).
Proof. exact (MK_COMB (@lem4537169 _107642) (@lem4537168 _107642 A _53778)). Qed.
Lemma lem4537171 {_107642 A : Type'} (_53778 : type656 _107642 A) : (term1364 _107642 A _53778) = (term1382 _107642 A _53778).
Proof. exact (MK_COMB (@lem4537166 _107642 A _53778) (@lem4537170 _107642 A _53778)). Qed.
Lemma lem4537172 {_107642 A : Type'} (_53778 : type656 _107642 A) : ((term1363 _107642 A _53778) = (term1364 _107642 A _53778)) = ((term1362 _107642 A _53778) = (term1382 _107642 A _53778)).
Proof. exact (MK_COMB (@lem4537160 _107642 A _53778) (@lem4537171 _107642 A _53778)). Qed.
Lemma lem4537173 {_107642 A : Type'} (_53778 : type656 _107642 A) : (term1362 _107642 A _53778) = (term1382 _107642 A _53778).
Proof. exact (EQ_MP (@lem4537172 _107642 A _53778) (@lem4537150 _107642 A _53778)). Qed.
Lemma lem4537318 {_107642 A : Type'} (_53778 : type656 _107642 A) : (term1294 _107642 A _53778) = (term1382 _107642 A _53778).
Proof. exact (TRANS (@lem4537146 _107642 A _53778) (@lem4537173 _107642 A _53778)). Qed.
Lemma lem4537320 {A : Type'} (P : Prop) (Q : A -> Prop) : (term889 A P Q) = (term890 A P Q).
Proof. exact (EQ_MP (@lem18911 A P Q) (@lem18910 A P Q)). Qed.
Lemma lem4537321 {_107642 A : Type'} (P : Prop) (Q : type805 _107642 A) : (term1383 _107642 A P Q) = (term1384 _107642 A P Q).
Proof. exact (@lem4537320 (A -> _107642) P Q). Qed.
Lemma lem4537322 {_107642 A : Type'} (_53778 : type656 _107642 A) (GEN_PVAR_148 : A -> _107642) (t : _107642 -> Prop) (s : A -> Prop) (d : _107642) : (term1385 _107642 A _53778 GEN_PVAR_148 t s d) = (term1386 _107642 A _53778 GEN_PVAR_148 t s d).
Proof. exact (@lem4537321 _107642 A (term1387 _107642 A _53778 t s d GEN_PVAR_148) (term150 _107642 A GEN_PVAR_148 t s d)). Qed.
Lemma lem4537323 {_107642 A : Type'} (GEN_PVAR_148 : A -> _107642) (t : _107642 -> Prop) (s : A -> Prop) (d : _107642) (f : A -> _107642) : (term1272 _107642 A GEN_PVAR_148 t s d f) = (term149 _107642 A GEN_PVAR_148 t s d f).
Proof. exact (eq_refl (term1272 _107642 A GEN_PVAR_148 t s d f)). Qed.
Lemma lem4537324 {_107642 A : Type'} (GEN_PVAR_148 : A -> _107642) (t : _107642 -> Prop) (s : A -> Prop) (d : _107642) : (term1388 _107642 A GEN_PVAR_148 t s d) = (term150 _107642 A GEN_PVAR_148 t s d).
Proof. exact (fun_ext (fun f : A -> _107642 => @lem4537323 _107642 A GEN_PVAR_148 t s d f)). Qed.
Lemma lem4537325 {_107642 A : Type'} : (@ex (A -> _107642)) = (@ex (A -> _107642)).
Proof. exact (eq_refl (@ex (A -> _107642))). Qed.
Lemma lem4537326 {_107642 A : Type'} (GEN_PVAR_148 : A -> _107642) (t : _107642 -> Prop) (s : A -> Prop) (d : _107642) : (term1389 _107642 A GEN_PVAR_148 t s d) = (term151 _107642 A GEN_PVAR_148 t s d).
Proof. exact (MK_COMB (@lem4537325 _107642 A) (@lem4537324 _107642 A GEN_PVAR_148 t s d)). Qed.
Lemma lem4537327 {_107642 A : Type'} (_53778 : type656 _107642 A) (t : _107642 -> Prop) (s : A -> Prop) (d : _107642) (GEN_PVAR_148 : A -> _107642) : (term1278 _107642 A _53778 t s d GEN_PVAR_148) = (term1278 _107642 A _53778 t s d GEN_PVAR_148).
Proof. exact (eq_refl (term1278 _107642 A _53778 t s d GEN_PVAR_148)). Qed.
Lemma lem4537328 {_107642 A : Type'} (_53778 : type656 _107642 A) (GEN_PVAR_148 : A -> _107642) (t : _107642 -> Prop) (s : A -> Prop) (d : _107642) : (term1385 _107642 A _53778 GEN_PVAR_148 t s d) = (term1279 _107642 A _53778 GEN_PVAR_148 t s d).
Proof. exact (MK_COMB (@lem4537327 _107642 A _53778 t s d GEN_PVAR_148) (@lem4537326 _107642 A GEN_PVAR_148 t s d)). Qed.
Lemma lem4537329 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4537330 {_107642 A : Type'} (_53778 : type656 _107642 A) (GEN_PVAR_148 : A -> _107642) (t : _107642 -> Prop) (s : A -> Prop) (d : _107642) : (term1390 _107642 A _53778 GEN_PVAR_148 t s d) = (term1391 _107642 A _53778 GEN_PVAR_148 t s d).
Proof. exact (MK_COMB (@lem4537329) (@lem4537328 _107642 A _53778 GEN_PVAR_148 t s d)). Qed.
Lemma lem4537331 {_107642 A : Type'} (GEN_PVAR_148 : A -> _107642) (t : _107642 -> Prop) (s : A -> Prop) (d : _107642) (f : A -> _107642) : (term1272 _107642 A GEN_PVAR_148 t s d f) = (term149 _107642 A GEN_PVAR_148 t s d f).
Proof. exact (eq_refl (term1272 _107642 A GEN_PVAR_148 t s d f)). Qed.
Lemma lem4537332 {_107642 A : Type'} (_53778 : type656 _107642 A) (t : _107642 -> Prop) (s : A -> Prop) (d : _107642) (GEN_PVAR_148 : A -> _107642) : (term1278 _107642 A _53778 t s d GEN_PVAR_148) = (term1278 _107642 A _53778 t s d GEN_PVAR_148).
Proof. exact (eq_refl (term1278 _107642 A _53778 t s d GEN_PVAR_148)). Qed.
Lemma lem4537333 {_107642 A : Type'} (_53778 : type656 _107642 A) (GEN_PVAR_148 : A -> _107642) (t : _107642 -> Prop) (s : A -> Prop) (d : _107642) (f : A -> _107642) : (term1392 _107642 A _53778 GEN_PVAR_148 t s d f) = (term1393 _107642 A _53778 GEN_PVAR_148 t s d f).
Proof. exact (MK_COMB (@lem4537332 _107642 A _53778 t s d GEN_PVAR_148) (@lem4537331 _107642 A GEN_PVAR_148 t s d f)). Qed.
Lemma lem4537334 {_107642 A : Type'} (_53778 : type656 _107642 A) (GEN_PVAR_148 : A -> _107642) (t : _107642 -> Prop) (s : A -> Prop) (d : _107642) : (term1394 _107642 A _53778 GEN_PVAR_148 t s d) = (term1395 _107642 A _53778 GEN_PVAR_148 t s d).
Proof. exact (fun_ext (fun f : A -> _107642 => @lem4537333 _107642 A _53778 GEN_PVAR_148 t s d f)). Qed.
Lemma lem4537335 {_107642 A : Type'} : (@ex (A -> _107642)) = (@ex (A -> _107642)).
Proof. exact (eq_refl (@ex (A -> _107642))). Qed.
Lemma lem4537336 {_107642 A : Type'} (_53778 : type656 _107642 A) (GEN_PVAR_148 : A -> _107642) (t : _107642 -> Prop) (s : A -> Prop) (d : _107642) : (term1386 _107642 A _53778 GEN_PVAR_148 t s d) = (term1396 _107642 A _53778 GEN_PVAR_148 t s d).
Proof. exact (MK_COMB (@lem4537335 _107642 A) (@lem4537334 _107642 A _53778 GEN_PVAR_148 t s d)). Qed.
Lemma lem4537337 {_107642 A : Type'} (_53778 : type656 _107642 A) (GEN_PVAR_148 : A -> _107642) (t : _107642 -> Prop) (s : A -> Prop) (d : _107642) : ((term1385 _107642 A _53778 GEN_PVAR_148 t s d) = (term1386 _107642 A _53778 GEN_PVAR_148 t s d)) = ((term1279 _107642 A _53778 GEN_PVAR_148 t s d) = (term1396 _107642 A _53778 GEN_PVAR_148 t s d)).
Proof. exact (MK_COMB (@lem4537330 _107642 A _53778 GEN_PVAR_148 t s d) (@lem4537336 _107642 A _53778 GEN_PVAR_148 t s d)). Qed.
Lemma lem4537338 {_107642 A : Type'} (_53778 : type656 _107642 A) (GEN_PVAR_148 : A -> _107642) (t : _107642 -> Prop) (s : A -> Prop) (d : _107642) : (term1279 _107642 A _53778 GEN_PVAR_148 t s d) = (term1396 _107642 A _53778 GEN_PVAR_148 t s d).
Proof. exact (EQ_MP (@lem4537337 _107642 A _53778 GEN_PVAR_148 t s d) (@lem4537322 _107642 A _53778 GEN_PVAR_148 t s d)). Qed.
Lemma lem4537339 {_107642 A : Type'} (_53778 : type656 _107642 A) (t : _107642 -> Prop) (s : A -> Prop) (d : _107642) : (term1300 _107642 A _53778 t s d) = (term1397 _107642 A _53778 t s d).
Proof. exact (fun_ext (fun GEN_PVAR_148 : A -> _107642 => @lem4537338 _107642 A _53778 GEN_PVAR_148 t s d)). Qed.
Lemma lem4537340 {_107642 A : Type'} : (@all (A -> _107642)) = (@all (A -> _107642)).
Proof. exact (eq_refl (@all (A -> _107642))). Qed.
Lemma lem4537341 {_107642 A : Type'} (_53778 : type656 _107642 A) (t : _107642 -> Prop) (s : A -> Prop) (d : _107642) : (term1315 _107642 A _53778 t s d) = (term1398 _107642 A _53778 t s d).
Proof. exact (MK_COMB (@lem4537340 _107642 A) (@lem4537339 _107642 A _53778 t s d)). Qed.
Lemma lem4537343 {A B : Type'} (P : type1413 A B) : (term907 A B P) = (term908 A B P).
Proof. exact (EQ_MP (@lem18899 A B P) (@lem18898 A B P)). Qed.
Lemma lem4537344 {_107642 A : Type'} (P : type786 _107642 A) : (term1399 _107642 A P) = (term1400 _107642 A P).
Proof. exact (@lem4537343 (A -> _107642) (A -> _107642) P). Qed.
Lemma lem4537345 {_107642 A : Type'} (_53778 : type656 _107642 A) (t : _107642 -> Prop) (s : A -> Prop) (d : _107642) : (term1401 _107642 A _53778 t s d) = (term1402 _107642 A _53778 t s d).
Proof. exact (@lem4537344 _107642 A (term1403 _107642 A _53778 t s d)). Qed.
Lemma lem4537346 {_107642 A : Type'} (_53778 : type656 _107642 A) (GEN_PVAR_148 : A -> _107642) (t : _107642 -> Prop) (s : A -> Prop) (d : _107642) : (term1404 _107642 A _53778 t s d GEN_PVAR_148) = (term1395 _107642 A _53778 GEN_PVAR_148 t s d).
Proof. exact (eq_refl (term1404 _107642 A _53778 t s d GEN_PVAR_148)). Qed.
Lemma lem4537347 {_107642 A : Type'} (f : A -> _107642) : f = f.
Proof. exact (eq_refl f). Qed.
Lemma lem4537348 {_107642 A : Type'} (_53778 : type656 _107642 A) (GEN_PVAR_148 : A -> _107642) (t : _107642 -> Prop) (s : A -> Prop) (d : _107642) (f : A -> _107642) : (term1405 _107642 A _53778 t s d GEN_PVAR_148 f) = (term1406 _107642 A _53778 GEN_PVAR_148 t s d f).
Proof. exact (MK_COMB (@lem4537346 _107642 A _53778 GEN_PVAR_148 t s d) (@lem4537347 _107642 A f)). Qed.
Lemma lem4537349 {_107642 A : Type'} (_53778 : type656 _107642 A) (GEN_PVAR_148 : A -> _107642) (t : _107642 -> Prop) (s : A -> Prop) (d : _107642) (f : A -> _107642) : (term1406 _107642 A _53778 GEN_PVAR_148 t s d f) = (term1393 _107642 A _53778 GEN_PVAR_148 t s d f).
Proof. exact (eq_refl (term1406 _107642 A _53778 GEN_PVAR_148 t s d f)). Qed.
Lemma lem4537350 {_107642 A : Type'} (_53778 : type656 _107642 A) (GEN_PVAR_148 : A -> _107642) (t : _107642 -> Prop) (s : A -> Prop) (d : _107642) (f : A -> _107642) : (term1405 _107642 A _53778 t s d GEN_PVAR_148 f) = (term1393 _107642 A _53778 GEN_PVAR_148 t s d f).
Proof. exact (TRANS (@lem4537348 _107642 A _53778 GEN_PVAR_148 t s d f) (@lem4537349 _107642 A _53778 GEN_PVAR_148 t s d f)). Qed.
Lemma lem4537351 {_107642 A : Type'} (_53778 : type656 _107642 A) (GEN_PVAR_148 : A -> _107642) (t : _107642 -> Prop) (s : A -> Prop) (d : _107642) : (term1407 _107642 A _53778 t s d GEN_PVAR_148) = (term1395 _107642 A _53778 GEN_PVAR_148 t s d).
Proof. exact (fun_ext (fun f : A -> _107642 => @lem4537350 _107642 A _53778 GEN_PVAR_148 t s d f)). Qed.
Lemma lem4537352 {_107642 A : Type'} : (@ex (A -> _107642)) = (@ex (A -> _107642)).
Proof. exact (eq_refl (@ex (A -> _107642))). Qed.
Lemma lem4537353 {_107642 A : Type'} (_53778 : type656 _107642 A) (GEN_PVAR_148 : A -> _107642) (t : _107642 -> Prop) (s : A -> Prop) (d : _107642) : (term1408 _107642 A _53778 t s d GEN_PVAR_148) = (term1396 _107642 A _53778 GEN_PVAR_148 t s d).
Proof. exact (MK_COMB (@lem4537352 _107642 A) (@lem4537351 _107642 A _53778 GEN_PVAR_148 t s d)). Qed.
Lemma lem4537354 {_107642 A : Type'} (_53778 : type656 _107642 A) (t : _107642 -> Prop) (s : A -> Prop) (d : _107642) : (term1409 _107642 A _53778 t s d) = (term1397 _107642 A _53778 t s d).
Proof. exact (fun_ext (fun GEN_PVAR_148 : A -> _107642 => @lem4537353 _107642 A _53778 GEN_PVAR_148 t s d)). Qed.
Lemma lem4537355 {_107642 A : Type'} : (@all (A -> _107642)) = (@all (A -> _107642)).
Proof. exact (eq_refl (@all (A -> _107642))). Qed.
Lemma lem4537356 {_107642 A : Type'} (_53778 : type656 _107642 A) (t : _107642 -> Prop) (s : A -> Prop) (d : _107642) : (term1401 _107642 A _53778 t s d) = (term1398 _107642 A _53778 t s d).
Proof. exact (MK_COMB (@lem4537355 _107642 A) (@lem4537354 _107642 A _53778 t s d)). Qed.
Lemma lem4537357 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4537358 {_107642 A : Type'} (_53778 : type656 _107642 A) (t : _107642 -> Prop) (s : A -> Prop) (d : _107642) : (term1410 _107642 A _53778 t s d) = (term1411 _107642 A _53778 t s d).
Proof. exact (MK_COMB (@lem4537357) (@lem4537356 _107642 A _53778 t s d)). Qed.
Lemma lem4537359 {_107642 A : Type'} (_53778 : type656 _107642 A) (GEN_PVAR_148 : A -> _107642) (t : _107642 -> Prop) (s : A -> Prop) (d : _107642) : (term1404 _107642 A _53778 t s d GEN_PVAR_148) = (term1395 _107642 A _53778 GEN_PVAR_148 t s d).
Proof. exact (eq_refl (term1404 _107642 A _53778 t s d GEN_PVAR_148)). Qed.
Lemma lem4537360 {_107642 A : Type'} (f : type796 _107642 A) (GEN_PVAR_148 : A -> _107642) : (f GEN_PVAR_148) = (f GEN_PVAR_148).
Proof. exact (eq_refl (f GEN_PVAR_148)). Qed.
Lemma lem4537361 {_107642 A : Type'} (_53778 : type656 _107642 A) (t : _107642 -> Prop) (s : A -> Prop) (d : _107642) (f : type796 _107642 A) (GEN_PVAR_148 : A -> _107642) : (term1412 _107642 A _53778 t s d f GEN_PVAR_148) = (term1413 _107642 A _53778 t s d f GEN_PVAR_148).
Proof. exact (MK_COMB (@lem4537359 _107642 A _53778 GEN_PVAR_148 t s d) (@lem4537360 _107642 A f GEN_PVAR_148)). Qed.
Lemma lem4537362 {_107642 A : Type'} (_53778 : type656 _107642 A) (t : _107642 -> Prop) (s : A -> Prop) (d : _107642) (f : type796 _107642 A) (GEN_PVAR_148 : A -> _107642) : (term1413 _107642 A _53778 t s d f GEN_PVAR_148) = (term1414 _107642 A _53778 t s d f GEN_PVAR_148).
Proof. exact (eq_refl (term1413 _107642 A _53778 t s d f GEN_PVAR_148)). Qed.
Lemma lem4537363 {_107642 A : Type'} (_53778 : type656 _107642 A) (t : _107642 -> Prop) (s : A -> Prop) (d : _107642) (f : type796 _107642 A) (GEN_PVAR_148 : A -> _107642) : (term1412 _107642 A _53778 t s d f GEN_PVAR_148) = (term1414 _107642 A _53778 t s d f GEN_PVAR_148).
Proof. exact (TRANS (@lem4537361 _107642 A _53778 t s d f GEN_PVAR_148) (@lem4537362 _107642 A _53778 t s d f GEN_PVAR_148)). Qed.
Lemma lem4537364 {_107642 A : Type'} (_53778 : type656 _107642 A) (t : _107642 -> Prop) (s : A -> Prop) (d : _107642) (f : type796 _107642 A) : (term1415 _107642 A _53778 t s d f) = (term1416 _107642 A _53778 t s d f).
Proof. exact (fun_ext (fun GEN_PVAR_148 : A -> _107642 => @lem4537363 _107642 A _53778 t s d f GEN_PVAR_148)). Qed.
Lemma lem4537365 {_107642 A : Type'} : (@all (A -> _107642)) = (@all (A -> _107642)).
Proof. exact (eq_refl (@all (A -> _107642))). Qed.
Lemma lem4537366 {_107642 A : Type'} (_53778 : type656 _107642 A) (t : _107642 -> Prop) (s : A -> Prop) (d : _107642) (f : type796 _107642 A) : (term1417 _107642 A _53778 t s d f) = (term1418 _107642 A _53778 t s d f).
Proof. exact (MK_COMB (@lem4537365 _107642 A) (@lem4537364 _107642 A _53778 t s d f)). Qed.
Lemma lem4537367 {_107642 A : Type'} (_53778 : type656 _107642 A) (t : _107642 -> Prop) (s : A -> Prop) (d : _107642) : (term1419 _107642 A _53778 t s d) = (term1420 _107642 A _53778 t s d).
Proof. exact (fun_ext (fun f : type796 _107642 A => @lem4537366 _107642 A _53778 t s d f)). Qed.
Lemma lem4537368 {_107642 A : Type'} : (@ex ((A -> _107642) -> A -> _107642)) = (@ex ((A -> _107642) -> A -> _107642)).
Proof. exact (eq_refl (@ex ((A -> _107642) -> A -> _107642))). Qed.
Lemma lem4537369 {_107642 A : Type'} (_53778 : type656 _107642 A) (t : _107642 -> Prop) (s : A -> Prop) (d : _107642) : (term1402 _107642 A _53778 t s d) = (term1421 _107642 A _53778 t s d).
Proof. exact (MK_COMB (@lem4537368 _107642 A) (@lem4537367 _107642 A _53778 t s d)). Qed.
Lemma lem4537370 {_107642 A : Type'} (_53778 : type656 _107642 A) (t : _107642 -> Prop) (s : A -> Prop) (d : _107642) : ((term1401 _107642 A _53778 t s d) = (term1402 _107642 A _53778 t s d)) = ((term1398 _107642 A _53778 t s d) = (term1421 _107642 A _53778 t s d)).
Proof. exact (MK_COMB (@lem4537358 _107642 A _53778 t s d) (@lem4537369 _107642 A _53778 t s d)). Qed.
Lemma lem4537371 {_107642 A : Type'} (_53778 : type656 _107642 A) (t : _107642 -> Prop) (s : A -> Prop) (d : _107642) : (term1398 _107642 A _53778 t s d) = (term1421 _107642 A _53778 t s d).
Proof. exact (EQ_MP (@lem4537370 _107642 A _53778 t s d) (@lem4537345 _107642 A _53778 t s d)). Qed.
Lemma lem4537372 {_107642 A : Type'} (_53778 : type656 _107642 A) (t : _107642 -> Prop) (s : A -> Prop) (d : _107642) : (term1315 _107642 A _53778 t s d) = (term1421 _107642 A _53778 t s d).
Proof. exact (TRANS (@lem4537341 _107642 A _53778 t s d) (@lem4537371 _107642 A _53778 t s d)). Qed.
Lemma lem4537373 {_107642 A : Type'} (_53778 : type656 _107642 A) (t : _107642 -> Prop) (s : A -> Prop) : (term1322 _107642 A _53778 t s) = (term1422 _107642 A _53778 t s).
Proof. exact (fun_ext (fun d : _107642 => @lem4537372 _107642 A _53778 t s d)). Qed.
Lemma lem4537374 {_107642 : Type'} : (@all _107642) = (@all _107642).
Proof. exact (eq_refl (@all _107642)). Qed.
Lemma lem4537375 {_107642 A : Type'} (_53778 : type656 _107642 A) (t : _107642 -> Prop) (s : A -> Prop) : (term1337 _107642 A _53778 t s) = (term1423 _107642 A _53778 t s).
Proof. exact (MK_COMB (@lem4537374 _107642) (@lem4537373 _107642 A _53778 t s)). Qed.
Lemma lem4537377 {A B : Type'} (P : type1413 A B) : (term907 A B P) = (term908 A B P).
Proof. exact (EQ_MP (@lem18899 A B P) (@lem18898 A B P)). Qed.
Lemma lem4537378 {_107642 A : Type'} (P : type1357 _107642 A) : (term1424 _107642 A P) = (term1425 _107642 A P).
Proof. exact (@lem4537377 _107642 (type796 _107642 A) P). Qed.
Lemma lem4537379 {_107642 A : Type'} (_53778 : type656 _107642 A) (t : _107642 -> Prop) (s : A -> Prop) : (term1426 _107642 A _53778 t s) = (term1427 _107642 A _53778 t s).
Proof. exact (@lem4537378 _107642 A (term1428 _107642 A _53778 t s)). Qed.
Lemma lem4537380 {_107642 A : Type'} (_53778 : type656 _107642 A) (t : _107642 -> Prop) (s : A -> Prop) (d : _107642) : (term1429 _107642 A _53778 t s d) = (term1420 _107642 A _53778 t s d).
Proof. exact (eq_refl (term1429 _107642 A _53778 t s d)). Qed.
Lemma lem4537381 {_107642 A : Type'} (f : type796 _107642 A) : f = f.
Proof. exact (eq_refl f). Qed.
Lemma lem4537382 {_107642 A : Type'} (_53778 : type656 _107642 A) (t : _107642 -> Prop) (s : A -> Prop) (d : _107642) (f : type796 _107642 A) : (term1430 _107642 A _53778 t s d f) = (term1431 _107642 A _53778 t s d f).
Proof. exact (MK_COMB (@lem4537380 _107642 A _53778 t s d) (@lem4537381 _107642 A f)). Qed.
Lemma lem4537383 {_107642 A : Type'} (_53778 : type656 _107642 A) (t : _107642 -> Prop) (s : A -> Prop) (d : _107642) (f : type796 _107642 A) : (term1431 _107642 A _53778 t s d f) = (term1418 _107642 A _53778 t s d f).
Proof. exact (eq_refl (term1431 _107642 A _53778 t s d f)). Qed.
Lemma lem4537384 {_107642 A : Type'} (_53778 : type656 _107642 A) (t : _107642 -> Prop) (s : A -> Prop) (d : _107642) (f : type796 _107642 A) : (term1430 _107642 A _53778 t s d f) = (term1418 _107642 A _53778 t s d f).
Proof. exact (TRANS (@lem4537382 _107642 A _53778 t s d f) (@lem4537383 _107642 A _53778 t s d f)). Qed.
Lemma lem4537385 {_107642 A : Type'} (_53778 : type656 _107642 A) (t : _107642 -> Prop) (s : A -> Prop) (d : _107642) : (term1432 _107642 A _53778 t s d) = (term1420 _107642 A _53778 t s d).
Proof. exact (fun_ext (fun f : type796 _107642 A => @lem4537384 _107642 A _53778 t s d f)). Qed.
Lemma lem4537386 {_107642 A : Type'} : (@ex ((A -> _107642) -> A -> _107642)) = (@ex ((A -> _107642) -> A -> _107642)).
Proof. exact (eq_refl (@ex ((A -> _107642) -> A -> _107642))). Qed.
Lemma lem4537387 {_107642 A : Type'} (_53778 : type656 _107642 A) (t : _107642 -> Prop) (s : A -> Prop) (d : _107642) : (term1433 _107642 A _53778 t s d) = (term1421 _107642 A _53778 t s d).
Proof. exact (MK_COMB (@lem4537386 _107642 A) (@lem4537385 _107642 A _53778 t s d)). Qed.
Lemma lem4537388 {_107642 A : Type'} (_53778 : type656 _107642 A) (t : _107642 -> Prop) (s : A -> Prop) : (term1434 _107642 A _53778 t s) = (term1422 _107642 A _53778 t s).
Proof. exact (fun_ext (fun d : _107642 => @lem4537387 _107642 A _53778 t s d)). Qed.
Lemma lem4537389 {_107642 : Type'} : (@all _107642) = (@all _107642).
Proof. exact (eq_refl (@all _107642)). Qed.
Lemma lem4537390 {_107642 A : Type'} (_53778 : type656 _107642 A) (t : _107642 -> Prop) (s : A -> Prop) : (term1426 _107642 A _53778 t s) = (term1423 _107642 A _53778 t s).
Proof. exact (MK_COMB (@lem4537389 _107642) (@lem4537388 _107642 A _53778 t s)). Qed.
Lemma lem4537391 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4537392 {_107642 A : Type'} (_53778 : type656 _107642 A) (t : _107642 -> Prop) (s : A -> Prop) : (term1435 _107642 A _53778 t s) = (term1436 _107642 A _53778 t s).
Proof. exact (MK_COMB (@lem4537391) (@lem4537390 _107642 A _53778 t s)). Qed.
Lemma lem4537393 {_107642 A : Type'} (_53778 : type656 _107642 A) (t : _107642 -> Prop) (s : A -> Prop) (d : _107642) : (term1429 _107642 A _53778 t s d) = (term1420 _107642 A _53778 t s d).
Proof. exact (eq_refl (term1429 _107642 A _53778 t s d)). Qed.
Lemma lem4537394 {_107642 A : Type'} (f : type1371 _107642 A) (d : _107642) : (f d) = (f d).
Proof. exact (eq_refl (f d)). Qed.
Lemma lem4537395 {_107642 A : Type'} (_53778 : type656 _107642 A) (t : _107642 -> Prop) (s : A -> Prop) (f : type1371 _107642 A) (d : _107642) : (term1437 _107642 A _53778 t s f d) = (term1438 _107642 A _53778 t s f d).
Proof. exact (MK_COMB (@lem4537393 _107642 A _53778 t s d) (@lem4537394 _107642 A f d)). Qed.
Lemma lem4537396 {_107642 A : Type'} (_53778 : type656 _107642 A) (t : _107642 -> Prop) (s : A -> Prop) (f : type1371 _107642 A) (d : _107642) : (term1438 _107642 A _53778 t s f d) = (term1439 _107642 A _53778 t s f d).
Proof. exact (eq_refl (term1438 _107642 A _53778 t s f d)). Qed.
Lemma lem4537397 {_107642 A : Type'} (_53778 : type656 _107642 A) (t : _107642 -> Prop) (s : A -> Prop) (f : type1371 _107642 A) (d : _107642) : (term1437 _107642 A _53778 t s f d) = (term1439 _107642 A _53778 t s f d).
Proof. exact (TRANS (@lem4537395 _107642 A _53778 t s f d) (@lem4537396 _107642 A _53778 t s f d)). Qed.
Lemma lem4537398 {_107642 A : Type'} (_53778 : type656 _107642 A) (t : _107642 -> Prop) (s : A -> Prop) (f : type1371 _107642 A) : (term1440 _107642 A _53778 t s f) = (term1441 _107642 A _53778 t s f).
Proof. exact (fun_ext (fun d : _107642 => @lem4537397 _107642 A _53778 t s f d)). Qed.
Lemma lem4537399 {_107642 : Type'} : (@all _107642) = (@all _107642).
Proof. exact (eq_refl (@all _107642)). Qed.
Lemma lem4537400 {_107642 A : Type'} (_53778 : type656 _107642 A) (t : _107642 -> Prop) (s : A -> Prop) (f : type1371 _107642 A) : (term1442 _107642 A _53778 t s f) = (term1443 _107642 A _53778 t s f).
Proof. exact (MK_COMB (@lem4537399 _107642) (@lem4537398 _107642 A _53778 t s f)). Qed.
Lemma lem4537401 {_107642 A : Type'} (_53778 : type656 _107642 A) (t : _107642 -> Prop) (s : A -> Prop) : (term1444 _107642 A _53778 t s) = (term1445 _107642 A _53778 t s).
Proof. exact (fun_ext (fun f : type1371 _107642 A => @lem4537400 _107642 A _53778 t s f)). Qed.
Lemma lem4537402 {_107642 A : Type'} : (@ex (_107642 -> (A -> _107642) -> A -> _107642)) = (@ex (_107642 -> (A -> _107642) -> A -> _107642)).
Proof. exact (eq_refl (@ex (_107642 -> (A -> _107642) -> A -> _107642))). Qed.
Lemma lem4537403 {_107642 A : Type'} (_53778 : type656 _107642 A) (t : _107642 -> Prop) (s : A -> Prop) : (term1427 _107642 A _53778 t s) = (term1446 _107642 A _53778 t s).
Proof. exact (MK_COMB (@lem4537402 _107642 A) (@lem4537401 _107642 A _53778 t s)). Qed.
Lemma lem4537404 {_107642 A : Type'} (_53778 : type656 _107642 A) (t : _107642 -> Prop) (s : A -> Prop) : ((term1426 _107642 A _53778 t s) = (term1427 _107642 A _53778 t s)) = ((term1423 _107642 A _53778 t s) = (term1446 _107642 A _53778 t s)).
Proof. exact (MK_COMB (@lem4537392 _107642 A _53778 t s) (@lem4537403 _107642 A _53778 t s)). Qed.
Lemma lem4537405 {_107642 A : Type'} (_53778 : type656 _107642 A) (t : _107642 -> Prop) (s : A -> Prop) : (term1423 _107642 A _53778 t s) = (term1446 _107642 A _53778 t s).
Proof. exact (EQ_MP (@lem4537404 _107642 A _53778 t s) (@lem4537379 _107642 A _53778 t s)). Qed.
Lemma lem4537406 {_107642 A : Type'} (_53778 : type656 _107642 A) (t : _107642 -> Prop) (s : A -> Prop) : (term1337 _107642 A _53778 t s) = (term1446 _107642 A _53778 t s).
Proof. exact (TRANS (@lem4537375 _107642 A _53778 t s) (@lem4537405 _107642 A _53778 t s)). Qed.
Lemma lem4537407 {_107642 A : Type'} (_53778 : type656 _107642 A) (t : _107642 -> Prop) : (term1344 _107642 A _53778 t) = (term1447 _107642 A _53778 t).
Proof. exact (fun_ext (fun s : A -> Prop => @lem4537406 _107642 A _53778 t s)). Qed.
Lemma lem4537408 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem4537409 {_107642 A : Type'} (_53778 : type656 _107642 A) (t : _107642 -> Prop) : (term1359 _107642 A _53778 t) = (term1448 _107642 A _53778 t).
Proof. exact (MK_COMB (@lem4537408 A) (@lem4537407 _107642 A _53778 t)). Qed.
Lemma lem4537411 {A B : Type'} (P : type1413 A B) : (term907 A B P) = (term908 A B P).
Proof. exact (EQ_MP (@lem18899 A B P) (@lem18898 A B P)). Qed.
Lemma lem4537412 {_107642 A : Type'} (P : type829 _107642 A) : (term1449 _107642 A P) = (term1450 _107642 A P).
Proof. exact (@lem4537411 (A -> Prop) (type1371 _107642 A) P). Qed.
Lemma lem4537413 {_107642 A : Type'} (_53778 : type656 _107642 A) (t : _107642 -> Prop) : (term1451 _107642 A _53778 t) = (term1452 _107642 A _53778 t).
Proof. exact (@lem4537412 _107642 A (term1453 _107642 A _53778 t)). Qed.
Lemma lem4537414 {_107642 A : Type'} (_53778 : type656 _107642 A) (t : _107642 -> Prop) (s : A -> Prop) : (term1454 _107642 A _53778 t s) = (term1445 _107642 A _53778 t s).
Proof. exact (eq_refl (term1454 _107642 A _53778 t s)). Qed.
Lemma lem4537415 {_107642 A : Type'} (f : type1371 _107642 A) : f = f.
Proof. exact (eq_refl f). Qed.
Lemma lem4537416 {_107642 A : Type'} (_53778 : type656 _107642 A) (t : _107642 -> Prop) (s : A -> Prop) (f : type1371 _107642 A) : (term1455 _107642 A _53778 t s f) = (term1456 _107642 A _53778 t s f).
Proof. exact (MK_COMB (@lem4537414 _107642 A _53778 t s) (@lem4537415 _107642 A f)). Qed.
Lemma lem4537417 {_107642 A : Type'} (_53778 : type656 _107642 A) (t : _107642 -> Prop) (s : A -> Prop) (f : type1371 _107642 A) : (term1456 _107642 A _53778 t s f) = (term1443 _107642 A _53778 t s f).
Proof. exact (eq_refl (term1456 _107642 A _53778 t s f)). Qed.
Lemma lem4537418 {_107642 A : Type'} (_53778 : type656 _107642 A) (t : _107642 -> Prop) (s : A -> Prop) (f : type1371 _107642 A) : (term1455 _107642 A _53778 t s f) = (term1443 _107642 A _53778 t s f).
Proof. exact (TRANS (@lem4537416 _107642 A _53778 t s f) (@lem4537417 _107642 A _53778 t s f)). Qed.
Lemma lem4537419 {_107642 A : Type'} (_53778 : type656 _107642 A) (t : _107642 -> Prop) (s : A -> Prop) : (term1457 _107642 A _53778 t s) = (term1445 _107642 A _53778 t s).
Proof. exact (fun_ext (fun f : type1371 _107642 A => @lem4537418 _107642 A _53778 t s f)). Qed.
Lemma lem4537420 {_107642 A : Type'} : (@ex (_107642 -> (A -> _107642) -> A -> _107642)) = (@ex (_107642 -> (A -> _107642) -> A -> _107642)).
Proof. exact (eq_refl (@ex (_107642 -> (A -> _107642) -> A -> _107642))). Qed.
Lemma lem4537421 {_107642 A : Type'} (_53778 : type656 _107642 A) (t : _107642 -> Prop) (s : A -> Prop) : (term1458 _107642 A _53778 t s) = (term1446 _107642 A _53778 t s).
Proof. exact (MK_COMB (@lem4537420 _107642 A) (@lem4537419 _107642 A _53778 t s)). Qed.
Lemma lem4537422 {_107642 A : Type'} (_53778 : type656 _107642 A) (t : _107642 -> Prop) : (term1459 _107642 A _53778 t) = (term1447 _107642 A _53778 t).
Proof. exact (fun_ext (fun s : A -> Prop => @lem4537421 _107642 A _53778 t s)). Qed.
Lemma lem4537423 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem4537424 {_107642 A : Type'} (_53778 : type656 _107642 A) (t : _107642 -> Prop) : (term1451 _107642 A _53778 t) = (term1448 _107642 A _53778 t).
Proof. exact (MK_COMB (@lem4537423 A) (@lem4537422 _107642 A _53778 t)). Qed.
Lemma lem4537425 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4537426 {_107642 A : Type'} (_53778 : type656 _107642 A) (t : _107642 -> Prop) : (term1460 _107642 A _53778 t) = (term1461 _107642 A _53778 t).
Proof. exact (MK_COMB (@lem4537425) (@lem4537424 _107642 A _53778 t)). Qed.
Lemma lem4537427 {_107642 A : Type'} (_53778 : type656 _107642 A) (t : _107642 -> Prop) (s : A -> Prop) : (term1454 _107642 A _53778 t s) = (term1445 _107642 A _53778 t s).
Proof. exact (eq_refl (term1454 _107642 A _53778 t s)). Qed.
Lemma lem4537428 {_107642 A : Type'} (f : type858 _107642 A) (s : A -> Prop) : (f s) = (f s).
Proof. exact (eq_refl (f s)). Qed.
Lemma lem4537429 {_107642 A : Type'} (_53778 : type656 _107642 A) (t : _107642 -> Prop) (f : type858 _107642 A) (s : A -> Prop) : (term1462 _107642 A _53778 t f s) = (term1463 _107642 A _53778 t f s).
Proof. exact (MK_COMB (@lem4537427 _107642 A _53778 t s) (@lem4537428 _107642 A f s)). Qed.
Lemma lem4537430 {_107642 A : Type'} (_53778 : type656 _107642 A) (t : _107642 -> Prop) (f : type858 _107642 A) (s : A -> Prop) : (term1463 _107642 A _53778 t f s) = (term1464 _107642 A _53778 t f s).
Proof. exact (eq_refl (term1463 _107642 A _53778 t f s)). Qed.
Lemma lem4537431 {_107642 A : Type'} (_53778 : type656 _107642 A) (t : _107642 -> Prop) (f : type858 _107642 A) (s : A -> Prop) : (term1462 _107642 A _53778 t f s) = (term1464 _107642 A _53778 t f s).
Proof. exact (TRANS (@lem4537429 _107642 A _53778 t f s) (@lem4537430 _107642 A _53778 t f s)). Qed.
Lemma lem4537432 {_107642 A : Type'} (_53778 : type656 _107642 A) (t : _107642 -> Prop) (f : type858 _107642 A) : (term1465 _107642 A _53778 t f) = (term1466 _107642 A _53778 t f).
Proof. exact (fun_ext (fun s : A -> Prop => @lem4537431 _107642 A _53778 t f s)). Qed.
Lemma lem4537433 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem4537434 {_107642 A : Type'} (_53778 : type656 _107642 A) (t : _107642 -> Prop) (f : type858 _107642 A) : (term1467 _107642 A _53778 t f) = (term1468 _107642 A _53778 t f).
Proof. exact (MK_COMB (@lem4537433 A) (@lem4537432 _107642 A _53778 t f)). Qed.
Lemma lem4537435 {_107642 A : Type'} (_53778 : type656 _107642 A) (t : _107642 -> Prop) : (term1469 _107642 A _53778 t) = (term1470 _107642 A _53778 t).
Proof. exact (fun_ext (fun f : type858 _107642 A => @lem4537434 _107642 A _53778 t f)). Qed.
Lemma lem4537436 {_107642 A : Type'} : (@ex ((A -> Prop) -> _107642 -> (A -> _107642) -> A -> _107642)) = (@ex ((A -> Prop) -> _107642 -> (A -> _107642) -> A -> _107642)).
Proof. exact (eq_refl (@ex ((A -> Prop) -> _107642 -> (A -> _107642) -> A -> _107642))). Qed.
Lemma lem4537437 {_107642 A : Type'} (_53778 : type656 _107642 A) (t : _107642 -> Prop) : (term1452 _107642 A _53778 t) = (term1471 _107642 A _53778 t).
Proof. exact (MK_COMB (@lem4537436 _107642 A) (@lem4537435 _107642 A _53778 t)). Qed.
Lemma lem4537438 {_107642 A : Type'} (_53778 : type656 _107642 A) (t : _107642 -> Prop) : ((term1451 _107642 A _53778 t) = (term1452 _107642 A _53778 t)) = ((term1448 _107642 A _53778 t) = (term1471 _107642 A _53778 t)).
Proof. exact (MK_COMB (@lem4537426 _107642 A _53778 t) (@lem4537437 _107642 A _53778 t)). Qed.
Lemma lem4537439 {_107642 A : Type'} (_53778 : type656 _107642 A) (t : _107642 -> Prop) : (term1448 _107642 A _53778 t) = (term1471 _107642 A _53778 t).
Proof. exact (EQ_MP (@lem4537438 _107642 A _53778 t) (@lem4537413 _107642 A _53778 t)). Qed.
Lemma lem4537440 {_107642 A : Type'} (_53778 : type656 _107642 A) (t : _107642 -> Prop) : (term1359 _107642 A _53778 t) = (term1471 _107642 A _53778 t).
Proof. exact (TRANS (@lem4537409 _107642 A _53778 t) (@lem4537439 _107642 A _53778 t)). Qed.
Lemma lem4537441 {_107642 A : Type'} (_53778 : type656 _107642 A) : (term1366 _107642 A _53778) = (term1472 _107642 A _53778).
Proof. exact (fun_ext (fun t : _107642 -> Prop => @lem4537440 _107642 A _53778 t)). Qed.
Lemma lem4537442 {_107642 : Type'} : (@all (_107642 -> Prop)) = (@all (_107642 -> Prop)).
Proof. exact (eq_refl (@all (_107642 -> Prop))). Qed.
Lemma lem4537443 {_107642 A : Type'} (_53778 : type656 _107642 A) : (term1381 _107642 A _53778) = (term1473 _107642 A _53778).
Proof. exact (MK_COMB (@lem4537442 _107642) (@lem4537441 _107642 A _53778)). Qed.
Lemma lem4537445 {A B : Type'} (P : type1413 A B) : (term907 A B P) = (term908 A B P).
Proof. exact (EQ_MP (@lem18899 A B P) (@lem18898 A B P)). Qed.
Lemma lem4537446 {_107642 A : Type'} (P : type606 _107642 A) : (term1474 _107642 A P) = (term1475 _107642 A P).
Proof. exact (@lem4537445 (_107642 -> Prop) (type858 _107642 A) P). Qed.
Lemma lem4537447 {_107642 A : Type'} (_53778 : type656 _107642 A) : (term1476 _107642 A _53778) = (term1477 _107642 A _53778).
Proof. exact (@lem4537446 _107642 A (term1478 _107642 A _53778)). Qed.
Lemma lem4537448 {_107642 A : Type'} (_53778 : type656 _107642 A) (t : _107642 -> Prop) : (term1479 _107642 A _53778 t) = (term1470 _107642 A _53778 t).
Proof. exact (eq_refl (term1479 _107642 A _53778 t)). Qed.
Lemma lem4537449 {_107642 A : Type'} (f : type858 _107642 A) : f = f.
Proof. exact (eq_refl f). Qed.
Lemma lem4537450 {_107642 A : Type'} (_53778 : type656 _107642 A) (t : _107642 -> Prop) (f : type858 _107642 A) : (term1480 _107642 A _53778 t f) = (term1481 _107642 A _53778 t f).
Proof. exact (MK_COMB (@lem4537448 _107642 A _53778 t) (@lem4537449 _107642 A f)). Qed.
Lemma lem4537451 {_107642 A : Type'} (_53778 : type656 _107642 A) (t : _107642 -> Prop) (f : type858 _107642 A) : (term1481 _107642 A _53778 t f) = (term1468 _107642 A _53778 t f).
Proof. exact (eq_refl (term1481 _107642 A _53778 t f)). Qed.
Lemma lem4537452 {_107642 A : Type'} (_53778 : type656 _107642 A) (t : _107642 -> Prop) (f : type858 _107642 A) : (term1480 _107642 A _53778 t f) = (term1468 _107642 A _53778 t f).
Proof. exact (TRANS (@lem4537450 _107642 A _53778 t f) (@lem4537451 _107642 A _53778 t f)). Qed.
Lemma lem4537453 {_107642 A : Type'} (_53778 : type656 _107642 A) (t : _107642 -> Prop) : (term1482 _107642 A _53778 t) = (term1470 _107642 A _53778 t).
Proof. exact (fun_ext (fun f : type858 _107642 A => @lem4537452 _107642 A _53778 t f)). Qed.
Lemma lem4537454 {_107642 A : Type'} : (@ex ((A -> Prop) -> _107642 -> (A -> _107642) -> A -> _107642)) = (@ex ((A -> Prop) -> _107642 -> (A -> _107642) -> A -> _107642)).
Proof. exact (eq_refl (@ex ((A -> Prop) -> _107642 -> (A -> _107642) -> A -> _107642))). Qed.
Lemma lem4537455 {_107642 A : Type'} (_53778 : type656 _107642 A) (t : _107642 -> Prop) : (term1483 _107642 A _53778 t) = (term1471 _107642 A _53778 t).
Proof. exact (MK_COMB (@lem4537454 _107642 A) (@lem4537453 _107642 A _53778 t)). Qed.
Lemma lem4537456 {_107642 A : Type'} (_53778 : type656 _107642 A) : (term1484 _107642 A _53778) = (term1472 _107642 A _53778).
Proof. exact (fun_ext (fun t : _107642 -> Prop => @lem4537455 _107642 A _53778 t)). Qed.
Lemma lem4537457 {_107642 : Type'} : (@all (_107642 -> Prop)) = (@all (_107642 -> Prop)).
Proof. exact (eq_refl (@all (_107642 -> Prop))). Qed.
Lemma lem4537458 {_107642 A : Type'} (_53778 : type656 _107642 A) : (term1476 _107642 A _53778) = (term1473 _107642 A _53778).
Proof. exact (MK_COMB (@lem4537457 _107642) (@lem4537456 _107642 A _53778)). Qed.
Lemma lem4537459 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4537460 {_107642 A : Type'} (_53778 : type656 _107642 A) : (term1485 _107642 A _53778) = (term1486 _107642 A _53778).
Proof. exact (MK_COMB (@lem4537459) (@lem4537458 _107642 A _53778)). Qed.
Lemma lem4537461 {_107642 A : Type'} (_53778 : type656 _107642 A) (t : _107642 -> Prop) : (term1479 _107642 A _53778 t) = (term1470 _107642 A _53778 t).
Proof. exact (eq_refl (term1479 _107642 A _53778 t)). Qed.
Lemma lem4537462 {_107642 A : Type'} (f : type655 _107642 A) (t : _107642 -> Prop) : (f t) = (f t).
Proof. exact (eq_refl (f t)). Qed.
Lemma lem4537463 {_107642 A : Type'} (_53778 : type656 _107642 A) (f : type655 _107642 A) (t : _107642 -> Prop) : (term1487 _107642 A _53778 f t) = (term1488 _107642 A _53778 f t).
Proof. exact (MK_COMB (@lem4537461 _107642 A _53778 t) (@lem4537462 _107642 A f t)). Qed.
Lemma lem4537464 {_107642 A : Type'} (_53778 : type656 _107642 A) (f : type655 _107642 A) (t : _107642 -> Prop) : (term1488 _107642 A _53778 f t) = (term1489 _107642 A _53778 f t).
Proof. exact (eq_refl (term1488 _107642 A _53778 f t)). Qed.
Lemma lem4537465 {_107642 A : Type'} (_53778 : type656 _107642 A) (f : type655 _107642 A) (t : _107642 -> Prop) : (term1487 _107642 A _53778 f t) = (term1489 _107642 A _53778 f t).
Proof. exact (TRANS (@lem4537463 _107642 A _53778 f t) (@lem4537464 _107642 A _53778 f t)). Qed.
Lemma lem4537466 {_107642 A : Type'} (_53778 : type656 _107642 A) (f : type655 _107642 A) : (term1490 _107642 A _53778 f) = (term1491 _107642 A _53778 f).
Proof. exact (fun_ext (fun t : _107642 -> Prop => @lem4537465 _107642 A _53778 f t)). Qed.
Lemma lem4537467 {_107642 : Type'} : (@all (_107642 -> Prop)) = (@all (_107642 -> Prop)).
Proof. exact (eq_refl (@all (_107642 -> Prop))). Qed.
Lemma lem4537468 {_107642 A : Type'} (_53778 : type656 _107642 A) (f : type655 _107642 A) : (term1492 _107642 A _53778 f) = (term1493 _107642 A _53778 f).
Proof. exact (MK_COMB (@lem4537467 _107642) (@lem4537466 _107642 A _53778 f)). Qed.
Lemma lem4537469 {_107642 A : Type'} (_53778 : type656 _107642 A) : (term1494 _107642 A _53778) = (term1495 _107642 A _53778).
Proof. exact (fun_ext (fun f : type655 _107642 A => @lem4537468 _107642 A _53778 f)). Qed.
Lemma lem4537470 {_107642 A : Type'} : (@ex ((_107642 -> Prop) -> (A -> Prop) -> _107642 -> (A -> _107642) -> A -> _107642)) = (@ex ((_107642 -> Prop) -> (A -> Prop) -> _107642 -> (A -> _107642) -> A -> _107642)).
Proof. exact (eq_refl (@ex ((_107642 -> Prop) -> (A -> Prop) -> _107642 -> (A -> _107642) -> A -> _107642))). Qed.
Lemma lem4537471 {_107642 A : Type'} (_53778 : type656 _107642 A) : (term1477 _107642 A _53778) = (term1496 _107642 A _53778).
Proof. exact (MK_COMB (@lem4537470 _107642 A) (@lem4537469 _107642 A _53778)). Qed.
Lemma lem4537472 {_107642 A : Type'} (_53778 : type656 _107642 A) : ((term1476 _107642 A _53778) = (term1477 _107642 A _53778)) = ((term1473 _107642 A _53778) = (term1496 _107642 A _53778)).
Proof. exact (MK_COMB (@lem4537460 _107642 A _53778) (@lem4537471 _107642 A _53778)). Qed.
Lemma lem4537473 {_107642 A : Type'} (_53778 : type656 _107642 A) : (term1473 _107642 A _53778) = (term1496 _107642 A _53778).
Proof. exact (EQ_MP (@lem4537472 _107642 A _53778) (@lem4537447 _107642 A _53778)). Qed.
Lemma lem4537474 {_107642 A : Type'} (_53778 : type656 _107642 A) : (term1381 _107642 A _53778) = (term1496 _107642 A _53778).
Proof. exact (TRANS (@lem4537443 _107642 A _53778) (@lem4537473 _107642 A _53778)). Qed.
Lemma lem4537475 {_107642 A : Type'} (_53778 : type656 _107642 A) : (term1378 _107642 A _53778) = (term1378 _107642 A _53778).
Proof. exact (eq_refl (term1378 _107642 A _53778)). Qed.
Lemma lem4537476 {_107642 A : Type'} (_53778 : type656 _107642 A) : (term1382 _107642 A _53778) = (term1497 _107642 A _53778).
Proof. exact (MK_COMB (@lem4537475 _107642 A _53778) (@lem4537474 _107642 A _53778)). Qed.
Lemma lem4537478 {A : Type'} (P : Prop) (Q : A -> Prop) : (term1008 A P Q) = (term1009 A P Q).
Proof. exact (EQ_MP (@lem18929 A P Q) (@lem18928 A P Q)). Qed.
Lemma lem4537479 {_107642 A : Type'} (P : Prop) (Q : type146 _107642 A) : (term1498 _107642 A P Q) = (term1499 _107642 A P Q).
Proof. exact (@lem4537478 (type655 _107642 A) P Q). Qed.
Lemma lem4537480 {_107642 A : Type'} (_53778 : type656 _107642 A) : (term1500 _107642 A _53778) = (term1501 _107642 A _53778).
Proof. exact (@lem4537479 _107642 A (term1376 _107642 A _53778) (term1495 _107642 A _53778)). Qed.
Lemma lem4537481 {_107642 A : Type'} (_53778 : type656 _107642 A) (f : type655 _107642 A) : (term1502 _107642 A _53778 f) = (term1493 _107642 A _53778 f).
Proof. exact (eq_refl (term1502 _107642 A _53778 f)). Qed.
Lemma lem4537482 {_107642 A : Type'} (_53778 : type656 _107642 A) : (term1503 _107642 A _53778) = (term1495 _107642 A _53778).
Proof. exact (fun_ext (fun f : type655 _107642 A => @lem4537481 _107642 A _53778 f)). Qed.
Lemma lem4537483 {_107642 A : Type'} : (@ex ((_107642 -> Prop) -> (A -> Prop) -> _107642 -> (A -> _107642) -> A -> _107642)) = (@ex ((_107642 -> Prop) -> (A -> Prop) -> _107642 -> (A -> _107642) -> A -> _107642)).
Proof. exact (eq_refl (@ex ((_107642 -> Prop) -> (A -> Prop) -> _107642 -> (A -> _107642) -> A -> _107642))). Qed.
Lemma lem4537484 {_107642 A : Type'} (_53778 : type656 _107642 A) : (term1504 _107642 A _53778) = (term1496 _107642 A _53778).
Proof. exact (MK_COMB (@lem4537483 _107642 A) (@lem4537482 _107642 A _53778)). Qed.
Lemma lem4537485 {_107642 A : Type'} (_53778 : type656 _107642 A) : (term1378 _107642 A _53778) = (term1378 _107642 A _53778).
Proof. exact (eq_refl (term1378 _107642 A _53778)). Qed.
Lemma lem4537486 {_107642 A : Type'} (_53778 : type656 _107642 A) : (term1500 _107642 A _53778) = (term1497 _107642 A _53778).
Proof. exact (MK_COMB (@lem4537485 _107642 A _53778) (@lem4537484 _107642 A _53778)). Qed.
Lemma lem4537487 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4537488 {_107642 A : Type'} (_53778 : type656 _107642 A) : (term1505 _107642 A _53778) = (term1506 _107642 A _53778).
Proof. exact (MK_COMB (@lem4537487) (@lem4537486 _107642 A _53778)). Qed.
Lemma lem4537489 {_107642 A : Type'} (_53778 : type656 _107642 A) (f : type655 _107642 A) : (term1502 _107642 A _53778 f) = (term1493 _107642 A _53778 f).
Proof. exact (eq_refl (term1502 _107642 A _53778 f)). Qed.
Lemma lem4537490 {_107642 A : Type'} (_53778 : type656 _107642 A) : (term1378 _107642 A _53778) = (term1378 _107642 A _53778).
Proof. exact (eq_refl (term1378 _107642 A _53778)). Qed.
Lemma lem4537491 {_107642 A : Type'} (_53778 : type656 _107642 A) (f : type655 _107642 A) : (term1507 _107642 A _53778 f) = (term1508 _107642 A _53778 f).
Proof. exact (MK_COMB (@lem4537490 _107642 A _53778) (@lem4537489 _107642 A _53778 f)). Qed.
Lemma lem4537492 {_107642 A : Type'} (_53778 : type656 _107642 A) : (term1509 _107642 A _53778) = (term1510 _107642 A _53778).
Proof. exact (fun_ext (fun f : type655 _107642 A => @lem4537491 _107642 A _53778 f)). Qed.
Lemma lem4537493 {_107642 A : Type'} : (@ex ((_107642 -> Prop) -> (A -> Prop) -> _107642 -> (A -> _107642) -> A -> _107642)) = (@ex ((_107642 -> Prop) -> (A -> Prop) -> _107642 -> (A -> _107642) -> A -> _107642)).
Proof. exact (eq_refl (@ex ((_107642 -> Prop) -> (A -> Prop) -> _107642 -> (A -> _107642) -> A -> _107642))). Qed.
Lemma lem4537494 {_107642 A : Type'} (_53778 : type656 _107642 A) : (term1501 _107642 A _53778) = (term1511 _107642 A _53778).
Proof. exact (MK_COMB (@lem4537493 _107642 A) (@lem4537492 _107642 A _53778)). Qed.
Lemma lem4537495 {_107642 A : Type'} (_53778 : type656 _107642 A) : ((term1500 _107642 A _53778) = (term1501 _107642 A _53778)) = ((term1497 _107642 A _53778) = (term1511 _107642 A _53778)).
Proof. exact (MK_COMB (@lem4537488 _107642 A _53778) (@lem4537494 _107642 A _53778)). Qed.
Lemma lem4537496 {_107642 A : Type'} (_53778 : type656 _107642 A) : (term1497 _107642 A _53778) = (term1511 _107642 A _53778).
Proof. exact (EQ_MP (@lem4537495 _107642 A _53778) (@lem4537480 _107642 A _53778)). Qed.
Lemma lem4537497 {_107642 A : Type'} (_53778 : type656 _107642 A) : (term1382 _107642 A _53778) = (term1511 _107642 A _53778).
Proof. exact (TRANS (@lem4537476 _107642 A _53778) (@lem4537496 _107642 A _53778)). Qed.
Lemma lem4537498 {_107642 A : Type'} (_53778 : type656 _107642 A) : (term1294 _107642 A _53778) = (term1511 _107642 A _53778).
Proof. exact (TRANS (@lem4537318 _107642 A _53778) (@lem4537497 _107642 A _53778)). Qed.
Lemma lem4537499 {_107642 A : Type'} (_53778 : type656 _107642 A) : (term302 _107642 A _53778) = (term1511 _107642 A _53778).
Proof. exact (TRANS (@lem4536658 _107642 A _53778) (@lem4537498 _107642 A _53778)). Qed.
Lemma lem4537500 {_107642 A : Type'} (_53778 : type656 _107642 A) (h1 : term302 _107642 A _53778) : term1511 _107642 A _53778.
Proof. exact (EQ_MP (@lem4537499 _107642 A _53778) (@lem4533067 _107642 A _53778 h1)). Qed.
Lemma lem4537504 {_107639 A : Type'} (GEN_PVAR_148 : A -> _107639) (t : _107639 -> Prop) (s : A -> Prop) (d : _107639) (f : A -> _107639) : (term149 _107639 A GEN_PVAR_148 t s d f) = (term149 _107639 A GEN_PVAR_148 t s d f).
Proof. exact (eq_refl (term149 _107639 A GEN_PVAR_148 t s d f)). Qed.
Lemma lem4537505 {_107639 A : Type'} (P : type805 _107639 A) : (term1268 _107639 A P) = (term1269 _107639 A P).
Proof. exact (@lem18394 (A -> _107639) P). Qed.
Lemma lem4537506 {_107639 A : Type'} (GEN_PVAR_148 : A -> _107639) (t : _107639 -> Prop) (s : A -> Prop) (d : _107639) : (term1270 _107639 A GEN_PVAR_148 t s d) = (term1271 _107639 A GEN_PVAR_148 t s d).
Proof. exact (@lem4537505 _107639 A (term150 _107639 A GEN_PVAR_148 t s d)). Qed.
Lemma lem4537507 {_107639 A : Type'} (GEN_PVAR_148 : A -> _107639) (t : _107639 -> Prop) (s : A -> Prop) (d : _107639) (f : A -> _107639) : (term1272 _107639 A GEN_PVAR_148 t s d f) = (term149 _107639 A GEN_PVAR_148 t s d f).
Proof. exact (eq_refl (term1272 _107639 A GEN_PVAR_148 t s d f)). Qed.
Lemma lem4537508 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem4537510 {_107639 A : Type'} (GEN_PVAR_148 : A -> _107639) (t : _107639 -> Prop) (s : A -> Prop) (d : _107639) (f : A -> _107639) : (term1273 _107639 A GEN_PVAR_148 t s d f) = (term1274 _107639 A GEN_PVAR_148 t s d f).
Proof. exact (MK_COMB (@lem4537508) (@lem4537507 _107639 A GEN_PVAR_148 t s d f)). Qed.
Lemma lem4537511 {_107639 A : Type'} (GEN_PVAR_148 : A -> _107639) (t : _107639 -> Prop) (s : A -> Prop) (d : _107639) : (term1275 _107639 A GEN_PVAR_148 t s d) = (term1276 _107639 A GEN_PVAR_148 t s d).
Proof. exact (fun_ext (fun f : A -> _107639 => @lem4537510 _107639 A GEN_PVAR_148 t s d f)). Qed.
Lemma lem4537512 {_107639 A : Type'} : (@all (A -> _107639)) = (@all (A -> _107639)).
Proof. exact (eq_refl (@all (A -> _107639))). Qed.
Lemma lem4537513 {_107639 A : Type'} (GEN_PVAR_148 : A -> _107639) (t : _107639 -> Prop) (s : A -> Prop) (d : _107639) : (term1271 _107639 A GEN_PVAR_148 t s d) = (term1277 _107639 A GEN_PVAR_148 t s d).
Proof. exact (MK_COMB (@lem4537512 _107639 A) (@lem4537511 _107639 A GEN_PVAR_148 t s d)). Qed.
Lemma lem4537514 {_107639 A : Type'} (GEN_PVAR_148 : A -> _107639) (t : _107639 -> Prop) (s : A -> Prop) (d : _107639) : (term1270 _107639 A GEN_PVAR_148 t s d) = (term1277 _107639 A GEN_PVAR_148 t s d).
Proof. exact (TRANS (@lem4537506 _107639 A GEN_PVAR_148 t s d) (@lem4537513 _107639 A GEN_PVAR_148 t s d)). Qed.
Lemma lem4537515 {_107639 A : Type'} (GEN_PVAR_148 : A -> _107639) (t : _107639 -> Prop) (s : A -> Prop) (d : _107639) : (term150 _107639 A GEN_PVAR_148 t s d) = (term150 _107639 A GEN_PVAR_148 t s d).
Proof. exact (fun_ext (fun f : A -> _107639 => @lem4537504 _107639 A GEN_PVAR_148 t s d f)). Qed.
Lemma lem4537516 {_107639 A : Type'} : (@ex (A -> _107639)) = (@ex (A -> _107639)).
Proof. exact (eq_refl (@ex (A -> _107639))). Qed.
Lemma lem4537517 {_107639 A : Type'} (GEN_PVAR_148 : A -> _107639) (t : _107639 -> Prop) (s : A -> Prop) (d : _107639) : (term151 _107639 A GEN_PVAR_148 t s d) = (term151 _107639 A GEN_PVAR_148 t s d).
Proof. exact (MK_COMB (@lem4537516 _107639 A) (@lem4537515 _107639 A GEN_PVAR_148 t s d)). Qed.
Lemma lem4537519 {_107639 A : Type'} (_53777 : type656 _107639 A) (t : _107639 -> Prop) (s : A -> Prop) (d : _107639) (GEN_PVAR_148 : A -> _107639) : (term1278 _107639 A _53777 t s d GEN_PVAR_148) = (term1278 _107639 A _53777 t s d GEN_PVAR_148).
Proof. exact (eq_refl (term1278 _107639 A _53777 t s d GEN_PVAR_148)). Qed.
Lemma lem4537520 {_107639 A : Type'} (_53777 : type656 _107639 A) (GEN_PVAR_148 : A -> _107639) (t : _107639 -> Prop) (s : A -> Prop) (d : _107639) : (term1279 _107639 A _53777 GEN_PVAR_148 t s d) = (term1279 _107639 A _53777 GEN_PVAR_148 t s d).
Proof. exact (MK_COMB (@lem4537519 _107639 A _53777 t s d GEN_PVAR_148) (@lem4537517 _107639 A GEN_PVAR_148 t s d)). Qed.
Lemma lem4537522 {_107639 A : Type'} (_53777 : type656 _107639 A) (t : _107639 -> Prop) (s : A -> Prop) (d : _107639) (GEN_PVAR_148 : A -> _107639) : (term1280 _107639 A _53777 t s d GEN_PVAR_148) = (term1280 _107639 A _53777 t s d GEN_PVAR_148).
Proof. exact (eq_refl (term1280 _107639 A _53777 t s d GEN_PVAR_148)). Qed.
Lemma lem4537523 {_107639 A : Type'} (_53777 : type656 _107639 A) (GEN_PVAR_148 : A -> _107639) (t : _107639 -> Prop) (s : A -> Prop) (d : _107639) : (term1281 _107639 A _53777 GEN_PVAR_148 t s d) = (term1282 _107639 A _53777 GEN_PVAR_148 t s d).
Proof. exact (MK_COMB (@lem4537522 _107639 A _53777 t s d GEN_PVAR_148) (@lem4537514 _107639 A GEN_PVAR_148 t s d)). Qed.
Lemma lem4537524 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4537525 {_107639 A : Type'} (_53777 : type656 _107639 A) (GEN_PVAR_148 : A -> _107639) (t : _107639 -> Prop) (s : A -> Prop) (d : _107639) : (term1283 _107639 A _53777 GEN_PVAR_148 t s d) = (term1284 _107639 A _53777 GEN_PVAR_148 t s d).
Proof. exact (MK_COMB (@lem4537524) (@lem4537523 _107639 A _53777 GEN_PVAR_148 t s d)). Qed.
Lemma lem4537526 {_107639 A : Type'} (_53777 : type656 _107639 A) (GEN_PVAR_148 : A -> _107639) (t : _107639 -> Prop) (s : A -> Prop) (d : _107639) : (term1285 _107639 A _53777 GEN_PVAR_148 t s d) = (term1286 _107639 A _53777 GEN_PVAR_148 t s d).
Proof. exact (MK_COMB (@lem4537525 _107639 A _53777 GEN_PVAR_148 t s d) (@lem4537520 _107639 A _53777 GEN_PVAR_148 t s d)). Qed.
Lemma lem4537527 {_107639 A : Type'} (_53777 : type656 _107639 A) (GEN_PVAR_148 : A -> _107639) (t : _107639 -> Prop) (s : A -> Prop) (d : _107639) : ((_53777 t s d GEN_PVAR_148) = (term151 _107639 A GEN_PVAR_148 t s d)) = (term1285 _107639 A _53777 GEN_PVAR_148 t s d).
Proof. exact (@lem17784 (_53777 t s d GEN_PVAR_148) (term151 _107639 A GEN_PVAR_148 t s d)). Qed.
Lemma lem4537528 {_107639 A : Type'} (_53777 : type656 _107639 A) (GEN_PVAR_148 : A -> _107639) (t : _107639 -> Prop) (s : A -> Prop) (d : _107639) : ((_53777 t s d GEN_PVAR_148) = (term151 _107639 A GEN_PVAR_148 t s d)) = (term1286 _107639 A _53777 GEN_PVAR_148 t s d).
Proof. exact (TRANS (@lem4537527 _107639 A _53777 GEN_PVAR_148 t s d) (@lem4537526 _107639 A _53777 GEN_PVAR_148 t s d)). Qed.
Lemma lem4537529 {_107639 A : Type'} (_53777 : type656 _107639 A) (t : _107639 -> Prop) (s : A -> Prop) (d : _107639) : (term295 _107639 A _53777 t s d) = (term1287 _107639 A _53777 t s d).
Proof. exact (fun_ext (fun GEN_PVAR_148 : A -> _107639 => @lem4537528 _107639 A _53777 GEN_PVAR_148 t s d)). Qed.
Lemma lem4537530 {_107639 A : Type'} : (@all (A -> _107639)) = (@all (A -> _107639)).
Proof. exact (eq_refl (@all (A -> _107639))). Qed.
Lemma lem4537531 {_107639 A : Type'} (_53777 : type656 _107639 A) (t : _107639 -> Prop) (s : A -> Prop) (d : _107639) : (term296 _107639 A _53777 t s d) = (term1288 _107639 A _53777 t s d).
Proof. exact (MK_COMB (@lem4537530 _107639 A) (@lem4537529 _107639 A _53777 t s d)). Qed.
Lemma lem4537532 {_107639 A : Type'} (_53777 : type656 _107639 A) (t : _107639 -> Prop) (s : A -> Prop) : (term297 _107639 A _53777 t s) = (term1289 _107639 A _53777 t s).
Proof. exact (fun_ext (fun d : _107639 => @lem4537531 _107639 A _53777 t s d)). Qed.
Lemma lem4537533 {_107639 : Type'} : (@all _107639) = (@all _107639).
Proof. exact (eq_refl (@all _107639)). Qed.
Lemma lem4537534 {_107639 A : Type'} (_53777 : type656 _107639 A) (t : _107639 -> Prop) (s : A -> Prop) : (term298 _107639 A _53777 t s) = (term1290 _107639 A _53777 t s).
Proof. exact (MK_COMB (@lem4537533 _107639) (@lem4537532 _107639 A _53777 t s)). Qed.
Lemma lem4537535 {_107639 A : Type'} (_53777 : type656 _107639 A) (t : _107639 -> Prop) : (term299 _107639 A _53777 t) = (term1291 _107639 A _53777 t).
Proof. exact (fun_ext (fun s : A -> Prop => @lem4537534 _107639 A _53777 t s)). Qed.
Lemma lem4537536 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem4537537 {_107639 A : Type'} (_53777 : type656 _107639 A) (t : _107639 -> Prop) : (term300 _107639 A _53777 t) = (term1292 _107639 A _53777 t).
Proof. exact (MK_COMB (@lem4537536 A) (@lem4537535 _107639 A _53777 t)). Qed.
Lemma lem4537538 {_107639 A : Type'} (_53777 : type656 _107639 A) : (term301 _107639 A _53777) = (term1293 _107639 A _53777).
Proof. exact (fun_ext (fun t : _107639 -> Prop => @lem4537537 _107639 A _53777 t)). Qed.
Lemma lem4537539 {_107639 : Type'} : (@all (_107639 -> Prop)) = (@all (_107639 -> Prop)).
Proof. exact (eq_refl (@all (_107639 -> Prop))). Qed.
Lemma lem4537540 {_107639 A : Type'} (_53777 : type656 _107639 A) : (term302 _107639 A _53777) = (term1294 _107639 A _53777).
Proof. exact (MK_COMB (@lem4537539 _107639) (@lem4537538 _107639 A _53777)). Qed.
Lemma lem4537554 {A : Type'} (P : A -> Prop) (Q : A -> Prop) : (term793 A P Q) = (term794 A P Q).
Proof. exact (EQ_MP (@lem18953 A P Q) (@lem18952 A P Q)). Qed.
Lemma lem4537555 {_107639 A : Type'} (P : type805 _107639 A) (Q : type805 _107639 A) : (term1295 _107639 A P Q) = (term1296 _107639 A P Q).
Proof. exact (@lem4537554 (A -> _107639) P Q). Qed.
Lemma lem4537556 {_107639 A : Type'} (_53777 : type656 _107639 A) (t : _107639 -> Prop) (s : A -> Prop) (d : _107639) : (term1297 _107639 A _53777 t s d) = (term1298 _107639 A _53777 t s d).
Proof. exact (@lem4537555 _107639 A (term1299 _107639 A _53777 t s d) (term1300 _107639 A _53777 t s d)). Qed.
Lemma lem4537557 {_107639 A : Type'} (_53777 : type656 _107639 A) (GEN_PVAR_148 : A -> _107639) (t : _107639 -> Prop) (s : A -> Prop) (d : _107639) : (term1301 _107639 A _53777 t s d GEN_PVAR_148) = (term1282 _107639 A _53777 GEN_PVAR_148 t s d).
Proof. exact (eq_refl (term1301 _107639 A _53777 t s d GEN_PVAR_148)). Qed.
Lemma lem4537558 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4537559 {_107639 A : Type'} (_53777 : type656 _107639 A) (GEN_PVAR_148 : A -> _107639) (t : _107639 -> Prop) (s : A -> Prop) (d : _107639) : (term1302 _107639 A _53777 t s d GEN_PVAR_148) = (term1284 _107639 A _53777 GEN_PVAR_148 t s d).
Proof. exact (MK_COMB (@lem4537558) (@lem4537557 _107639 A _53777 GEN_PVAR_148 t s d)). Qed.
Lemma lem4537560 {_107639 A : Type'} (_53777 : type656 _107639 A) (GEN_PVAR_148 : A -> _107639) (t : _107639 -> Prop) (s : A -> Prop) (d : _107639) : (term1303 _107639 A _53777 t s d GEN_PVAR_148) = (term1279 _107639 A _53777 GEN_PVAR_148 t s d).
Proof. exact (eq_refl (term1303 _107639 A _53777 t s d GEN_PVAR_148)). Qed.
Lemma lem4537561 {_107639 A : Type'} (_53777 : type656 _107639 A) (GEN_PVAR_148 : A -> _107639) (t : _107639 -> Prop) (s : A -> Prop) (d : _107639) : (term1304 _107639 A _53777 t s d GEN_PVAR_148) = (term1286 _107639 A _53777 GEN_PVAR_148 t s d).
Proof. exact (MK_COMB (@lem4537559 _107639 A _53777 GEN_PVAR_148 t s d) (@lem4537560 _107639 A _53777 GEN_PVAR_148 t s d)). Qed.
Lemma lem4537562 {_107639 A : Type'} (_53777 : type656 _107639 A) (t : _107639 -> Prop) (s : A -> Prop) (d : _107639) : (term1305 _107639 A _53777 t s d) = (term1287 _107639 A _53777 t s d).
Proof. exact (fun_ext (fun GEN_PVAR_148 : A -> _107639 => @lem4537561 _107639 A _53777 GEN_PVAR_148 t s d)). Qed.
Lemma lem4537563 {_107639 A : Type'} : (@all (A -> _107639)) = (@all (A -> _107639)).
Proof. exact (eq_refl (@all (A -> _107639))). Qed.
Lemma lem4537564 {_107639 A : Type'} (_53777 : type656 _107639 A) (t : _107639 -> Prop) (s : A -> Prop) (d : _107639) : (term1297 _107639 A _53777 t s d) = (term1288 _107639 A _53777 t s d).
Proof. exact (MK_COMB (@lem4537563 _107639 A) (@lem4537562 _107639 A _53777 t s d)). Qed.
Lemma lem4537565 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4537566 {_107639 A : Type'} (_53777 : type656 _107639 A) (t : _107639 -> Prop) (s : A -> Prop) (d : _107639) : (term1306 _107639 A _53777 t s d) = (term1307 _107639 A _53777 t s d).
Proof. exact (MK_COMB (@lem4537565) (@lem4537564 _107639 A _53777 t s d)). Qed.
Lemma lem4537567 {_107639 A : Type'} (_53777 : type656 _107639 A) (GEN_PVAR_148 : A -> _107639) (t : _107639 -> Prop) (s : A -> Prop) (d : _107639) : (term1301 _107639 A _53777 t s d GEN_PVAR_148) = (term1282 _107639 A _53777 GEN_PVAR_148 t s d).
Proof. exact (eq_refl (term1301 _107639 A _53777 t s d GEN_PVAR_148)). Qed.
Lemma lem4537568 {_107639 A : Type'} (_53777 : type656 _107639 A) (t : _107639 -> Prop) (s : A -> Prop) (d : _107639) : (term1308 _107639 A _53777 t s d) = (term1299 _107639 A _53777 t s d).
Proof. exact (fun_ext (fun GEN_PVAR_148 : A -> _107639 => @lem4537567 _107639 A _53777 GEN_PVAR_148 t s d)). Qed.
Lemma lem4537569 {_107639 A : Type'} : (@all (A -> _107639)) = (@all (A -> _107639)).
Proof. exact (eq_refl (@all (A -> _107639))). Qed.
Lemma lem4537570 {_107639 A : Type'} (_53777 : type656 _107639 A) (t : _107639 -> Prop) (s : A -> Prop) (d : _107639) : (term1309 _107639 A _53777 t s d) = (term1310 _107639 A _53777 t s d).
Proof. exact (MK_COMB (@lem4537569 _107639 A) (@lem4537568 _107639 A _53777 t s d)). Qed.
Lemma lem4537571 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4537572 {_107639 A : Type'} (_53777 : type656 _107639 A) (t : _107639 -> Prop) (s : A -> Prop) (d : _107639) : (term1311 _107639 A _53777 t s d) = (term1312 _107639 A _53777 t s d).
Proof. exact (MK_COMB (@lem4537571) (@lem4537570 _107639 A _53777 t s d)). Qed.
Lemma lem4537573 {_107639 A : Type'} (_53777 : type656 _107639 A) (GEN_PVAR_148 : A -> _107639) (t : _107639 -> Prop) (s : A -> Prop) (d : _107639) : (term1303 _107639 A _53777 t s d GEN_PVAR_148) = (term1279 _107639 A _53777 GEN_PVAR_148 t s d).
Proof. exact (eq_refl (term1303 _107639 A _53777 t s d GEN_PVAR_148)). Qed.
Lemma lem4537574 {_107639 A : Type'} (_53777 : type656 _107639 A) (t : _107639 -> Prop) (s : A -> Prop) (d : _107639) : (term1313 _107639 A _53777 t s d) = (term1300 _107639 A _53777 t s d).
Proof. exact (fun_ext (fun GEN_PVAR_148 : A -> _107639 => @lem4537573 _107639 A _53777 GEN_PVAR_148 t s d)). Qed.
Lemma lem4537575 {_107639 A : Type'} : (@all (A -> _107639)) = (@all (A -> _107639)).
Proof. exact (eq_refl (@all (A -> _107639))). Qed.
Lemma lem4537576 {_107639 A : Type'} (_53777 : type656 _107639 A) (t : _107639 -> Prop) (s : A -> Prop) (d : _107639) : (term1314 _107639 A _53777 t s d) = (term1315 _107639 A _53777 t s d).
Proof. exact (MK_COMB (@lem4537575 _107639 A) (@lem4537574 _107639 A _53777 t s d)). Qed.
Lemma lem4537577 {_107639 A : Type'} (_53777 : type656 _107639 A) (t : _107639 -> Prop) (s : A -> Prop) (d : _107639) : (term1298 _107639 A _53777 t s d) = (term1316 _107639 A _53777 t s d).
Proof. exact (MK_COMB (@lem4537572 _107639 A _53777 t s d) (@lem4537576 _107639 A _53777 t s d)). Qed.
Lemma lem4537578 {_107639 A : Type'} (_53777 : type656 _107639 A) (t : _107639 -> Prop) (s : A -> Prop) (d : _107639) : ((term1297 _107639 A _53777 t s d) = (term1298 _107639 A _53777 t s d)) = ((term1288 _107639 A _53777 t s d) = (term1316 _107639 A _53777 t s d)).
Proof. exact (MK_COMB (@lem4537566 _107639 A _53777 t s d) (@lem4537577 _107639 A _53777 t s d)). Qed.
Lemma lem4537579 {_107639 A : Type'} (_53777 : type656 _107639 A) (t : _107639 -> Prop) (s : A -> Prop) (d : _107639) : (term1288 _107639 A _53777 t s d) = (term1316 _107639 A _53777 t s d).
Proof. exact (EQ_MP (@lem4537578 _107639 A _53777 t s d) (@lem4537556 _107639 A _53777 t s d)). Qed.
Lemma lem4537700 {_107639 A : Type'} (_53777 : type656 _107639 A) (t : _107639 -> Prop) (s : A -> Prop) : (term1289 _107639 A _53777 t s) = (term1317 _107639 A _53777 t s).
Proof. exact (fun_ext (fun d : _107639 => @lem4537579 _107639 A _53777 t s d)). Qed.
Lemma lem4537701 {_107639 : Type'} : (@all _107639) = (@all _107639).
Proof. exact (eq_refl (@all _107639)). Qed.
Lemma lem4537702 {_107639 A : Type'} (_53777 : type656 _107639 A) (t : _107639 -> Prop) (s : A -> Prop) : (term1290 _107639 A _53777 t s) = (term1318 _107639 A _53777 t s).
Proof. exact (MK_COMB (@lem4537701 _107639) (@lem4537700 _107639 A _53777 t s)). Qed.
Lemma lem4537704 {A : Type'} (P : A -> Prop) (Q : A -> Prop) : (term793 A P Q) = (term794 A P Q).
Proof. exact (EQ_MP (@lem18953 A P Q) (@lem18952 A P Q)). Qed.
Lemma lem4537705 {_107639 : Type'} (P : _107639 -> Prop) (Q : _107639 -> Prop) : (term793 _107639 P Q) = (term794 _107639 P Q).
Proof. exact (@lem4537704 _107639 P Q). Qed.
Lemma lem4537706 {_107639 A : Type'} (_53777 : type656 _107639 A) (t : _107639 -> Prop) (s : A -> Prop) : (term1319 _107639 A _53777 t s) = (term1320 _107639 A _53777 t s).
Proof. exact (@lem4537705 _107639 (term1321 _107639 A _53777 t s) (term1322 _107639 A _53777 t s)). Qed.
Lemma lem4537707 {_107639 A : Type'} (_53777 : type656 _107639 A) (t : _107639 -> Prop) (s : A -> Prop) (d : _107639) : (term1323 _107639 A _53777 t s d) = (term1310 _107639 A _53777 t s d).
Proof. exact (eq_refl (term1323 _107639 A _53777 t s d)). Qed.
Lemma lem4537708 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4537709 {_107639 A : Type'} (_53777 : type656 _107639 A) (t : _107639 -> Prop) (s : A -> Prop) (d : _107639) : (term1324 _107639 A _53777 t s d) = (term1312 _107639 A _53777 t s d).
Proof. exact (MK_COMB (@lem4537708) (@lem4537707 _107639 A _53777 t s d)). Qed.
Lemma lem4537710 {_107639 A : Type'} (_53777 : type656 _107639 A) (t : _107639 -> Prop) (s : A -> Prop) (d : _107639) : (term1325 _107639 A _53777 t s d) = (term1315 _107639 A _53777 t s d).
Proof. exact (eq_refl (term1325 _107639 A _53777 t s d)). Qed.
Lemma lem4537711 {_107639 A : Type'} (_53777 : type656 _107639 A) (t : _107639 -> Prop) (s : A -> Prop) (d : _107639) : (term1326 _107639 A _53777 t s d) = (term1316 _107639 A _53777 t s d).
Proof. exact (MK_COMB (@lem4537709 _107639 A _53777 t s d) (@lem4537710 _107639 A _53777 t s d)). Qed.
Lemma lem4537712 {_107639 A : Type'} (_53777 : type656 _107639 A) (t : _107639 -> Prop) (s : A -> Prop) : (term1327 _107639 A _53777 t s) = (term1317 _107639 A _53777 t s).
Proof. exact (fun_ext (fun d : _107639 => @lem4537711 _107639 A _53777 t s d)). Qed.
Lemma lem4537713 {_107639 : Type'} : (@all _107639) = (@all _107639).
Proof. exact (eq_refl (@all _107639)). Qed.
Lemma lem4537714 {_107639 A : Type'} (_53777 : type656 _107639 A) (t : _107639 -> Prop) (s : A -> Prop) : (term1319 _107639 A _53777 t s) = (term1318 _107639 A _53777 t s).
Proof. exact (MK_COMB (@lem4537713 _107639) (@lem4537712 _107639 A _53777 t s)). Qed.
Lemma lem4537715 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4537716 {_107639 A : Type'} (_53777 : type656 _107639 A) (t : _107639 -> Prop) (s : A -> Prop) : (term1328 _107639 A _53777 t s) = (term1329 _107639 A _53777 t s).
Proof. exact (MK_COMB (@lem4537715) (@lem4537714 _107639 A _53777 t s)). Qed.
Lemma lem4537717 {_107639 A : Type'} (_53777 : type656 _107639 A) (t : _107639 -> Prop) (s : A -> Prop) (d : _107639) : (term1323 _107639 A _53777 t s d) = (term1310 _107639 A _53777 t s d).
Proof. exact (eq_refl (term1323 _107639 A _53777 t s d)). Qed.
Lemma lem4537718 {_107639 A : Type'} (_53777 : type656 _107639 A) (t : _107639 -> Prop) (s : A -> Prop) : (term1330 _107639 A _53777 t s) = (term1321 _107639 A _53777 t s).
Proof. exact (fun_ext (fun d : _107639 => @lem4537717 _107639 A _53777 t s d)). Qed.
Lemma lem4537719 {_107639 : Type'} : (@all _107639) = (@all _107639).
Proof. exact (eq_refl (@all _107639)). Qed.
Lemma lem4537720 {_107639 A : Type'} (_53777 : type656 _107639 A) (t : _107639 -> Prop) (s : A -> Prop) : (term1331 _107639 A _53777 t s) = (term1332 _107639 A _53777 t s).
Proof. exact (MK_COMB (@lem4537719 _107639) (@lem4537718 _107639 A _53777 t s)). Qed.
Lemma lem4537721 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4537722 {_107639 A : Type'} (_53777 : type656 _107639 A) (t : _107639 -> Prop) (s : A -> Prop) : (term1333 _107639 A _53777 t s) = (term1334 _107639 A _53777 t s).
Proof. exact (MK_COMB (@lem4537721) (@lem4537720 _107639 A _53777 t s)). Qed.
Lemma lem4537723 {_107639 A : Type'} (_53777 : type656 _107639 A) (t : _107639 -> Prop) (s : A -> Prop) (d : _107639) : (term1325 _107639 A _53777 t s d) = (term1315 _107639 A _53777 t s d).
Proof. exact (eq_refl (term1325 _107639 A _53777 t s d)). Qed.
Lemma lem4537724 {_107639 A : Type'} (_53777 : type656 _107639 A) (t : _107639 -> Prop) (s : A -> Prop) : (term1335 _107639 A _53777 t s) = (term1322 _107639 A _53777 t s).
Proof. exact (fun_ext (fun d : _107639 => @lem4537723 _107639 A _53777 t s d)). Qed.
Lemma lem4537725 {_107639 : Type'} : (@all _107639) = (@all _107639).
Proof. exact (eq_refl (@all _107639)). Qed.
Lemma lem4537726 {_107639 A : Type'} (_53777 : type656 _107639 A) (t : _107639 -> Prop) (s : A -> Prop) : (term1336 _107639 A _53777 t s) = (term1337 _107639 A _53777 t s).
Proof. exact (MK_COMB (@lem4537725 _107639) (@lem4537724 _107639 A _53777 t s)). Qed.
Lemma lem4537727 {_107639 A : Type'} (_53777 : type656 _107639 A) (t : _107639 -> Prop) (s : A -> Prop) : (term1320 _107639 A _53777 t s) = (term1338 _107639 A _53777 t s).
Proof. exact (MK_COMB (@lem4537722 _107639 A _53777 t s) (@lem4537726 _107639 A _53777 t s)). Qed.
Lemma lem4537728 {_107639 A : Type'} (_53777 : type656 _107639 A) (t : _107639 -> Prop) (s : A -> Prop) : ((term1319 _107639 A _53777 t s) = (term1320 _107639 A _53777 t s)) = ((term1318 _107639 A _53777 t s) = (term1338 _107639 A _53777 t s)).
Proof. exact (MK_COMB (@lem4537716 _107639 A _53777 t s) (@lem4537727 _107639 A _53777 t s)). Qed.
Lemma lem4537729 {_107639 A : Type'} (_53777 : type656 _107639 A) (t : _107639 -> Prop) (s : A -> Prop) : (term1318 _107639 A _53777 t s) = (term1338 _107639 A _53777 t s).
Proof. exact (EQ_MP (@lem4537728 _107639 A _53777 t s) (@lem4537706 _107639 A _53777 t s)). Qed.
Lemma lem4537858 {_107639 A : Type'} (_53777 : type656 _107639 A) (t : _107639 -> Prop) (s : A -> Prop) : (term1290 _107639 A _53777 t s) = (term1338 _107639 A _53777 t s).
Proof. exact (TRANS (@lem4537702 _107639 A _53777 t s) (@lem4537729 _107639 A _53777 t s)). Qed.
Lemma lem4537859 {_107639 A : Type'} (_53777 : type656 _107639 A) (t : _107639 -> Prop) : (term1291 _107639 A _53777 t) = (term1339 _107639 A _53777 t).
Proof. exact (fun_ext (fun s : A -> Prop => @lem4537858 _107639 A _53777 t s)). Qed.
Lemma lem4537860 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem4537861 {_107639 A : Type'} (_53777 : type656 _107639 A) (t : _107639 -> Prop) : (term1292 _107639 A _53777 t) = (term1340 _107639 A _53777 t).
Proof. exact (MK_COMB (@lem4537860 A) (@lem4537859 _107639 A _53777 t)). Qed.
Lemma lem4537863 {A : Type'} (P : A -> Prop) (Q : A -> Prop) : (term793 A P Q) = (term794 A P Q).
Proof. exact (EQ_MP (@lem18953 A P Q) (@lem18952 A P Q)). Qed.
Lemma lem4537864 {A : Type'} (P : type686 A) (Q : type686 A) : (term843 A P Q) = (term844 A P Q).
Proof. exact (@lem4537863 (A -> Prop) P Q). Qed.
Lemma lem4537865 {_107639 A : Type'} (_53777 : type656 _107639 A) (t : _107639 -> Prop) : (term1341 _107639 A _53777 t) = (term1342 _107639 A _53777 t).
Proof. exact (@lem4537864 A (term1343 _107639 A _53777 t) (term1344 _107639 A _53777 t)). Qed.
Lemma lem4537866 {_107639 A : Type'} (_53777 : type656 _107639 A) (t : _107639 -> Prop) (s : A -> Prop) : (term1345 _107639 A _53777 t s) = (term1332 _107639 A _53777 t s).
Proof. exact (eq_refl (term1345 _107639 A _53777 t s)). Qed.
Lemma lem4537867 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4537868 {_107639 A : Type'} (_53777 : type656 _107639 A) (t : _107639 -> Prop) (s : A -> Prop) : (term1346 _107639 A _53777 t s) = (term1334 _107639 A _53777 t s).
Proof. exact (MK_COMB (@lem4537867) (@lem4537866 _107639 A _53777 t s)). Qed.
Lemma lem4537869 {_107639 A : Type'} (_53777 : type656 _107639 A) (t : _107639 -> Prop) (s : A -> Prop) : (term1347 _107639 A _53777 t s) = (term1337 _107639 A _53777 t s).
Proof. exact (eq_refl (term1347 _107639 A _53777 t s)). Qed.
Lemma lem4537870 {_107639 A : Type'} (_53777 : type656 _107639 A) (t : _107639 -> Prop) (s : A -> Prop) : (term1348 _107639 A _53777 t s) = (term1338 _107639 A _53777 t s).
Proof. exact (MK_COMB (@lem4537868 _107639 A _53777 t s) (@lem4537869 _107639 A _53777 t s)). Qed.
Lemma lem4537871 {_107639 A : Type'} (_53777 : type656 _107639 A) (t : _107639 -> Prop) : (term1349 _107639 A _53777 t) = (term1339 _107639 A _53777 t).
Proof. exact (fun_ext (fun s : A -> Prop => @lem4537870 _107639 A _53777 t s)). Qed.
Lemma lem4537872 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem4537873 {_107639 A : Type'} (_53777 : type656 _107639 A) (t : _107639 -> Prop) : (term1341 _107639 A _53777 t) = (term1340 _107639 A _53777 t).
Proof. exact (MK_COMB (@lem4537872 A) (@lem4537871 _107639 A _53777 t)). Qed.
Lemma lem4537874 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4537875 {_107639 A : Type'} (_53777 : type656 _107639 A) (t : _107639 -> Prop) : (term1350 _107639 A _53777 t) = (term1351 _107639 A _53777 t).
Proof. exact (MK_COMB (@lem4537874) (@lem4537873 _107639 A _53777 t)). Qed.
Lemma lem4537876 {_107639 A : Type'} (_53777 : type656 _107639 A) (t : _107639 -> Prop) (s : A -> Prop) : (term1345 _107639 A _53777 t s) = (term1332 _107639 A _53777 t s).
Proof. exact (eq_refl (term1345 _107639 A _53777 t s)). Qed.
Lemma lem4537877 {_107639 A : Type'} (_53777 : type656 _107639 A) (t : _107639 -> Prop) : (term1352 _107639 A _53777 t) = (term1343 _107639 A _53777 t).
Proof. exact (fun_ext (fun s : A -> Prop => @lem4537876 _107639 A _53777 t s)). Qed.
Lemma lem4537878 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem4537879 {_107639 A : Type'} (_53777 : type656 _107639 A) (t : _107639 -> Prop) : (term1353 _107639 A _53777 t) = (term1354 _107639 A _53777 t).
Proof. exact (MK_COMB (@lem4537878 A) (@lem4537877 _107639 A _53777 t)). Qed.
Lemma lem4537880 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4537881 {_107639 A : Type'} (_53777 : type656 _107639 A) (t : _107639 -> Prop) : (term1355 _107639 A _53777 t) = (term1356 _107639 A _53777 t).
Proof. exact (MK_COMB (@lem4537880) (@lem4537879 _107639 A _53777 t)). Qed.
Lemma lem4537882 {_107639 A : Type'} (_53777 : type656 _107639 A) (t : _107639 -> Prop) (s : A -> Prop) : (term1347 _107639 A _53777 t s) = (term1337 _107639 A _53777 t s).
Proof. exact (eq_refl (term1347 _107639 A _53777 t s)). Qed.
Lemma lem4537883 {_107639 A : Type'} (_53777 : type656 _107639 A) (t : _107639 -> Prop) : (term1357 _107639 A _53777 t) = (term1344 _107639 A _53777 t).
Proof. exact (fun_ext (fun s : A -> Prop => @lem4537882 _107639 A _53777 t s)). Qed.
Lemma lem4537884 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem4537885 {_107639 A : Type'} (_53777 : type656 _107639 A) (t : _107639 -> Prop) : (term1358 _107639 A _53777 t) = (term1359 _107639 A _53777 t).
Proof. exact (MK_COMB (@lem4537884 A) (@lem4537883 _107639 A _53777 t)). Qed.
Lemma lem4537886 {_107639 A : Type'} (_53777 : type656 _107639 A) (t : _107639 -> Prop) : (term1342 _107639 A _53777 t) = (term1360 _107639 A _53777 t).
Proof. exact (MK_COMB (@lem4537881 _107639 A _53777 t) (@lem4537885 _107639 A _53777 t)). Qed.
Lemma lem4537887 {_107639 A : Type'} (_53777 : type656 _107639 A) (t : _107639 -> Prop) : ((term1341 _107639 A _53777 t) = (term1342 _107639 A _53777 t)) = ((term1340 _107639 A _53777 t) = (term1360 _107639 A _53777 t)).
Proof. exact (MK_COMB (@lem4537875 _107639 A _53777 t) (@lem4537886 _107639 A _53777 t)). Qed.
Lemma lem4537888 {_107639 A : Type'} (_53777 : type656 _107639 A) (t : _107639 -> Prop) : (term1340 _107639 A _53777 t) = (term1360 _107639 A _53777 t).
Proof. exact (EQ_MP (@lem4537887 _107639 A _53777 t) (@lem4537865 _107639 A _53777 t)). Qed.
Lemma lem4538025 {_107639 A : Type'} (_53777 : type656 _107639 A) (t : _107639 -> Prop) : (term1292 _107639 A _53777 t) = (term1360 _107639 A _53777 t).
Proof. exact (TRANS (@lem4537861 _107639 A _53777 t) (@lem4537888 _107639 A _53777 t)). Qed.
Lemma lem4538026 {_107639 A : Type'} (_53777 : type656 _107639 A) : (term1293 _107639 A _53777) = (term1361 _107639 A _53777).
Proof. exact (fun_ext (fun t : _107639 -> Prop => @lem4538025 _107639 A _53777 t)). Qed.
Lemma lem4538027 {_107639 : Type'} : (@all (_107639 -> Prop)) = (@all (_107639 -> Prop)).
Proof. exact (eq_refl (@all (_107639 -> Prop))). Qed.
Lemma lem4538028 {_107639 A : Type'} (_53777 : type656 _107639 A) : (term1294 _107639 A _53777) = (term1362 _107639 A _53777).
Proof. exact (MK_COMB (@lem4538027 _107639) (@lem4538026 _107639 A _53777)). Qed.
Lemma lem4538030 {A : Type'} (P : A -> Prop) (Q : A -> Prop) : (term793 A P Q) = (term794 A P Q).
Proof. exact (EQ_MP (@lem18953 A P Q) (@lem18952 A P Q)). Qed.
Lemma lem4538031 {_107639 : Type'} (P : type686 _107639) (Q : type686 _107639) : (term843 _107639 P Q) = (term844 _107639 P Q).
Proof. exact (@lem4538030 (_107639 -> Prop) P Q). Qed.
Lemma lem4538032 {_107639 A : Type'} (_53777 : type656 _107639 A) : (term1363 _107639 A _53777) = (term1364 _107639 A _53777).
Proof. exact (@lem4538031 _107639 (term1365 _107639 A _53777) (term1366 _107639 A _53777)). Qed.
Lemma lem4538033 {_107639 A : Type'} (_53777 : type656 _107639 A) (t : _107639 -> Prop) : (term1367 _107639 A _53777 t) = (term1354 _107639 A _53777 t).
Proof. exact (eq_refl (term1367 _107639 A _53777 t)). Qed.
Lemma lem4538034 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4538035 {_107639 A : Type'} (_53777 : type656 _107639 A) (t : _107639 -> Prop) : (term1368 _107639 A _53777 t) = (term1356 _107639 A _53777 t).
Proof. exact (MK_COMB (@lem4538034) (@lem4538033 _107639 A _53777 t)). Qed.
Lemma lem4538036 {_107639 A : Type'} (_53777 : type656 _107639 A) (t : _107639 -> Prop) : (term1369 _107639 A _53777 t) = (term1359 _107639 A _53777 t).
Proof. exact (eq_refl (term1369 _107639 A _53777 t)). Qed.
Lemma lem4538037 {_107639 A : Type'} (_53777 : type656 _107639 A) (t : _107639 -> Prop) : (term1370 _107639 A _53777 t) = (term1360 _107639 A _53777 t).
Proof. exact (MK_COMB (@lem4538035 _107639 A _53777 t) (@lem4538036 _107639 A _53777 t)). Qed.
Lemma lem4538038 {_107639 A : Type'} (_53777 : type656 _107639 A) : (term1371 _107639 A _53777) = (term1361 _107639 A _53777).
Proof. exact (fun_ext (fun t : _107639 -> Prop => @lem4538037 _107639 A _53777 t)). Qed.
Lemma lem4538039 {_107639 : Type'} : (@all (_107639 -> Prop)) = (@all (_107639 -> Prop)).
Proof. exact (eq_refl (@all (_107639 -> Prop))). Qed.
Lemma lem4538040 {_107639 A : Type'} (_53777 : type656 _107639 A) : (term1363 _107639 A _53777) = (term1362 _107639 A _53777).
Proof. exact (MK_COMB (@lem4538039 _107639) (@lem4538038 _107639 A _53777)). Qed.
Lemma lem4538041 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4538042 {_107639 A : Type'} (_53777 : type656 _107639 A) : (term1372 _107639 A _53777) = (term1373 _107639 A _53777).
Proof. exact (MK_COMB (@lem4538041) (@lem4538040 _107639 A _53777)). Qed.
Lemma lem4538043 {_107639 A : Type'} (_53777 : type656 _107639 A) (t : _107639 -> Prop) : (term1367 _107639 A _53777 t) = (term1354 _107639 A _53777 t).
Proof. exact (eq_refl (term1367 _107639 A _53777 t)). Qed.
Lemma lem4538044 {_107639 A : Type'} (_53777 : type656 _107639 A) : (term1374 _107639 A _53777) = (term1365 _107639 A _53777).
Proof. exact (fun_ext (fun t : _107639 -> Prop => @lem4538043 _107639 A _53777 t)). Qed.
Lemma lem4538045 {_107639 : Type'} : (@all (_107639 -> Prop)) = (@all (_107639 -> Prop)).
Proof. exact (eq_refl (@all (_107639 -> Prop))). Qed.
Lemma lem4538046 {_107639 A : Type'} (_53777 : type656 _107639 A) : (term1375 _107639 A _53777) = (term1376 _107639 A _53777).
Proof. exact (MK_COMB (@lem4538045 _107639) (@lem4538044 _107639 A _53777)). Qed.
Lemma lem4538047 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4538048 {_107639 A : Type'} (_53777 : type656 _107639 A) : (term1377 _107639 A _53777) = (term1378 _107639 A _53777).
Proof. exact (MK_COMB (@lem4538047) (@lem4538046 _107639 A _53777)). Qed.
Lemma lem4538049 {_107639 A : Type'} (_53777 : type656 _107639 A) (t : _107639 -> Prop) : (term1369 _107639 A _53777 t) = (term1359 _107639 A _53777 t).
Proof. exact (eq_refl (term1369 _107639 A _53777 t)). Qed.
Lemma lem4538050 {_107639 A : Type'} (_53777 : type656 _107639 A) : (term1379 _107639 A _53777) = (term1366 _107639 A _53777).
Proof. exact (fun_ext (fun t : _107639 -> Prop => @lem4538049 _107639 A _53777 t)). Qed.
Lemma lem4538051 {_107639 : Type'} : (@all (_107639 -> Prop)) = (@all (_107639 -> Prop)).
Proof. exact (eq_refl (@all (_107639 -> Prop))). Qed.
Lemma lem4538052 {_107639 A : Type'} (_53777 : type656 _107639 A) : (term1380 _107639 A _53777) = (term1381 _107639 A _53777).
Proof. exact (MK_COMB (@lem4538051 _107639) (@lem4538050 _107639 A _53777)). Qed.
Lemma lem4538053 {_107639 A : Type'} (_53777 : type656 _107639 A) : (term1364 _107639 A _53777) = (term1382 _107639 A _53777).
Proof. exact (MK_COMB (@lem4538048 _107639 A _53777) (@lem4538052 _107639 A _53777)). Qed.
Lemma lem4538054 {_107639 A : Type'} (_53777 : type656 _107639 A) : ((term1363 _107639 A _53777) = (term1364 _107639 A _53777)) = ((term1362 _107639 A _53777) = (term1382 _107639 A _53777)).
Proof. exact (MK_COMB (@lem4538042 _107639 A _53777) (@lem4538053 _107639 A _53777)). Qed.
Lemma lem4538055 {_107639 A : Type'} (_53777 : type656 _107639 A) : (term1362 _107639 A _53777) = (term1382 _107639 A _53777).
Proof. exact (EQ_MP (@lem4538054 _107639 A _53777) (@lem4538032 _107639 A _53777)). Qed.
Lemma lem4538200 {_107639 A : Type'} (_53777 : type656 _107639 A) : (term1294 _107639 A _53777) = (term1382 _107639 A _53777).
Proof. exact (TRANS (@lem4538028 _107639 A _53777) (@lem4538055 _107639 A _53777)). Qed.
Lemma lem4538202 {A : Type'} (P : Prop) (Q : A -> Prop) : (term889 A P Q) = (term890 A P Q).
Proof. exact (EQ_MP (@lem18911 A P Q) (@lem18910 A P Q)). Qed.
Lemma lem4538203 {_107639 A : Type'} (P : Prop) (Q : type805 _107639 A) : (term1383 _107639 A P Q) = (term1384 _107639 A P Q).
Proof. exact (@lem4538202 (A -> _107639) P Q). Qed.
Lemma lem4538204 {_107639 A : Type'} (_53777 : type656 _107639 A) (GEN_PVAR_148 : A -> _107639) (t : _107639 -> Prop) (s : A -> Prop) (d : _107639) : (term1385 _107639 A _53777 GEN_PVAR_148 t s d) = (term1386 _107639 A _53777 GEN_PVAR_148 t s d).
Proof. exact (@lem4538203 _107639 A (term1387 _107639 A _53777 t s d GEN_PVAR_148) (term150 _107639 A GEN_PVAR_148 t s d)). Qed.
Lemma lem4538205 {_107639 A : Type'} (GEN_PVAR_148 : A -> _107639) (t : _107639 -> Prop) (s : A -> Prop) (d : _107639) (f : A -> _107639) : (term1272 _107639 A GEN_PVAR_148 t s d f) = (term149 _107639 A GEN_PVAR_148 t s d f).
Proof. exact (eq_refl (term1272 _107639 A GEN_PVAR_148 t s d f)). Qed.
Lemma lem4538206 {_107639 A : Type'} (GEN_PVAR_148 : A -> _107639) (t : _107639 -> Prop) (s : A -> Prop) (d : _107639) : (term1388 _107639 A GEN_PVAR_148 t s d) = (term150 _107639 A GEN_PVAR_148 t s d).
Proof. exact (fun_ext (fun f : A -> _107639 => @lem4538205 _107639 A GEN_PVAR_148 t s d f)). Qed.
Lemma lem4538207 {_107639 A : Type'} : (@ex (A -> _107639)) = (@ex (A -> _107639)).
Proof. exact (eq_refl (@ex (A -> _107639))). Qed.
Lemma lem4538208 {_107639 A : Type'} (GEN_PVAR_148 : A -> _107639) (t : _107639 -> Prop) (s : A -> Prop) (d : _107639) : (term1389 _107639 A GEN_PVAR_148 t s d) = (term151 _107639 A GEN_PVAR_148 t s d).
Proof. exact (MK_COMB (@lem4538207 _107639 A) (@lem4538206 _107639 A GEN_PVAR_148 t s d)). Qed.
Lemma lem4538209 {_107639 A : Type'} (_53777 : type656 _107639 A) (t : _107639 -> Prop) (s : A -> Prop) (d : _107639) (GEN_PVAR_148 : A -> _107639) : (term1278 _107639 A _53777 t s d GEN_PVAR_148) = (term1278 _107639 A _53777 t s d GEN_PVAR_148).
Proof. exact (eq_refl (term1278 _107639 A _53777 t s d GEN_PVAR_148)). Qed.
Lemma lem4538210 {_107639 A : Type'} (_53777 : type656 _107639 A) (GEN_PVAR_148 : A -> _107639) (t : _107639 -> Prop) (s : A -> Prop) (d : _107639) : (term1385 _107639 A _53777 GEN_PVAR_148 t s d) = (term1279 _107639 A _53777 GEN_PVAR_148 t s d).
Proof. exact (MK_COMB (@lem4538209 _107639 A _53777 t s d GEN_PVAR_148) (@lem4538208 _107639 A GEN_PVAR_148 t s d)). Qed.
Lemma lem4538211 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4538212 {_107639 A : Type'} (_53777 : type656 _107639 A) (GEN_PVAR_148 : A -> _107639) (t : _107639 -> Prop) (s : A -> Prop) (d : _107639) : (term1390 _107639 A _53777 GEN_PVAR_148 t s d) = (term1391 _107639 A _53777 GEN_PVAR_148 t s d).
Proof. exact (MK_COMB (@lem4538211) (@lem4538210 _107639 A _53777 GEN_PVAR_148 t s d)). Qed.
Lemma lem4538213 {_107639 A : Type'} (GEN_PVAR_148 : A -> _107639) (t : _107639 -> Prop) (s : A -> Prop) (d : _107639) (f : A -> _107639) : (term1272 _107639 A GEN_PVAR_148 t s d f) = (term149 _107639 A GEN_PVAR_148 t s d f).
Proof. exact (eq_refl (term1272 _107639 A GEN_PVAR_148 t s d f)). Qed.
Lemma lem4538214 {_107639 A : Type'} (_53777 : type656 _107639 A) (t : _107639 -> Prop) (s : A -> Prop) (d : _107639) (GEN_PVAR_148 : A -> _107639) : (term1278 _107639 A _53777 t s d GEN_PVAR_148) = (term1278 _107639 A _53777 t s d GEN_PVAR_148).
Proof. exact (eq_refl (term1278 _107639 A _53777 t s d GEN_PVAR_148)). Qed.
Lemma lem4538215 {_107639 A : Type'} (_53777 : type656 _107639 A) (GEN_PVAR_148 : A -> _107639) (t : _107639 -> Prop) (s : A -> Prop) (d : _107639) (f : A -> _107639) : (term1392 _107639 A _53777 GEN_PVAR_148 t s d f) = (term1393 _107639 A _53777 GEN_PVAR_148 t s d f).
Proof. exact (MK_COMB (@lem4538214 _107639 A _53777 t s d GEN_PVAR_148) (@lem4538213 _107639 A GEN_PVAR_148 t s d f)). Qed.
Lemma lem4538216 {_107639 A : Type'} (_53777 : type656 _107639 A) (GEN_PVAR_148 : A -> _107639) (t : _107639 -> Prop) (s : A -> Prop) (d : _107639) : (term1394 _107639 A _53777 GEN_PVAR_148 t s d) = (term1395 _107639 A _53777 GEN_PVAR_148 t s d).
Proof. exact (fun_ext (fun f : A -> _107639 => @lem4538215 _107639 A _53777 GEN_PVAR_148 t s d f)). Qed.
Lemma lem4538217 {_107639 A : Type'} : (@ex (A -> _107639)) = (@ex (A -> _107639)).
Proof. exact (eq_refl (@ex (A -> _107639))). Qed.
Lemma lem4538218 {_107639 A : Type'} (_53777 : type656 _107639 A) (GEN_PVAR_148 : A -> _107639) (t : _107639 -> Prop) (s : A -> Prop) (d : _107639) : (term1386 _107639 A _53777 GEN_PVAR_148 t s d) = (term1396 _107639 A _53777 GEN_PVAR_148 t s d).
Proof. exact (MK_COMB (@lem4538217 _107639 A) (@lem4538216 _107639 A _53777 GEN_PVAR_148 t s d)). Qed.
Lemma lem4538219 {_107639 A : Type'} (_53777 : type656 _107639 A) (GEN_PVAR_148 : A -> _107639) (t : _107639 -> Prop) (s : A -> Prop) (d : _107639) : ((term1385 _107639 A _53777 GEN_PVAR_148 t s d) = (term1386 _107639 A _53777 GEN_PVAR_148 t s d)) = ((term1279 _107639 A _53777 GEN_PVAR_148 t s d) = (term1396 _107639 A _53777 GEN_PVAR_148 t s d)).
Proof. exact (MK_COMB (@lem4538212 _107639 A _53777 GEN_PVAR_148 t s d) (@lem4538218 _107639 A _53777 GEN_PVAR_148 t s d)). Qed.
Lemma lem4538220 {_107639 A : Type'} (_53777 : type656 _107639 A) (GEN_PVAR_148 : A -> _107639) (t : _107639 -> Prop) (s : A -> Prop) (d : _107639) : (term1279 _107639 A _53777 GEN_PVAR_148 t s d) = (term1396 _107639 A _53777 GEN_PVAR_148 t s d).
Proof. exact (EQ_MP (@lem4538219 _107639 A _53777 GEN_PVAR_148 t s d) (@lem4538204 _107639 A _53777 GEN_PVAR_148 t s d)). Qed.
Lemma lem4538221 {_107639 A : Type'} (_53777 : type656 _107639 A) (t : _107639 -> Prop) (s : A -> Prop) (d : _107639) : (term1300 _107639 A _53777 t s d) = (term1397 _107639 A _53777 t s d).
Proof. exact (fun_ext (fun GEN_PVAR_148 : A -> _107639 => @lem4538220 _107639 A _53777 GEN_PVAR_148 t s d)). Qed.
Lemma lem4538222 {_107639 A : Type'} : (@all (A -> _107639)) = (@all (A -> _107639)).
Proof. exact (eq_refl (@all (A -> _107639))). Qed.
Lemma lem4538223 {_107639 A : Type'} (_53777 : type656 _107639 A) (t : _107639 -> Prop) (s : A -> Prop) (d : _107639) : (term1315 _107639 A _53777 t s d) = (term1398 _107639 A _53777 t s d).
Proof. exact (MK_COMB (@lem4538222 _107639 A) (@lem4538221 _107639 A _53777 t s d)). Qed.
Lemma lem4538225 {A B : Type'} (P : type1413 A B) : (term907 A B P) = (term908 A B P).
Proof. exact (EQ_MP (@lem18899 A B P) (@lem18898 A B P)). Qed.
Lemma lem4538226 {_107639 A : Type'} (P : type786 _107639 A) : (term1399 _107639 A P) = (term1400 _107639 A P).
Proof. exact (@lem4538225 (A -> _107639) (A -> _107639) P). Qed.
Lemma lem4538227 {_107639 A : Type'} (_53777 : type656 _107639 A) (t : _107639 -> Prop) (s : A -> Prop) (d : _107639) : (term1401 _107639 A _53777 t s d) = (term1402 _107639 A _53777 t s d).
Proof. exact (@lem4538226 _107639 A (term1403 _107639 A _53777 t s d)). Qed.
Lemma lem4538228 {_107639 A : Type'} (_53777 : type656 _107639 A) (GEN_PVAR_148 : A -> _107639) (t : _107639 -> Prop) (s : A -> Prop) (d : _107639) : (term1404 _107639 A _53777 t s d GEN_PVAR_148) = (term1395 _107639 A _53777 GEN_PVAR_148 t s d).
Proof. exact (eq_refl (term1404 _107639 A _53777 t s d GEN_PVAR_148)). Qed.
Lemma lem4538229 {_107639 A : Type'} (f : A -> _107639) : f = f.
Proof. exact (eq_refl f). Qed.
Lemma lem4538230 {_107639 A : Type'} (_53777 : type656 _107639 A) (GEN_PVAR_148 : A -> _107639) (t : _107639 -> Prop) (s : A -> Prop) (d : _107639) (f : A -> _107639) : (term1405 _107639 A _53777 t s d GEN_PVAR_148 f) = (term1406 _107639 A _53777 GEN_PVAR_148 t s d f).
Proof. exact (MK_COMB (@lem4538228 _107639 A _53777 GEN_PVAR_148 t s d) (@lem4538229 _107639 A f)). Qed.
Lemma lem4538231 {_107639 A : Type'} (_53777 : type656 _107639 A) (GEN_PVAR_148 : A -> _107639) (t : _107639 -> Prop) (s : A -> Prop) (d : _107639) (f : A -> _107639) : (term1406 _107639 A _53777 GEN_PVAR_148 t s d f) = (term1393 _107639 A _53777 GEN_PVAR_148 t s d f).
Proof. exact (eq_refl (term1406 _107639 A _53777 GEN_PVAR_148 t s d f)). Qed.
Lemma lem4538232 {_107639 A : Type'} (_53777 : type656 _107639 A) (GEN_PVAR_148 : A -> _107639) (t : _107639 -> Prop) (s : A -> Prop) (d : _107639) (f : A -> _107639) : (term1405 _107639 A _53777 t s d GEN_PVAR_148 f) = (term1393 _107639 A _53777 GEN_PVAR_148 t s d f).
Proof. exact (TRANS (@lem4538230 _107639 A _53777 GEN_PVAR_148 t s d f) (@lem4538231 _107639 A _53777 GEN_PVAR_148 t s d f)). Qed.
Lemma lem4538233 {_107639 A : Type'} (_53777 : type656 _107639 A) (GEN_PVAR_148 : A -> _107639) (t : _107639 -> Prop) (s : A -> Prop) (d : _107639) : (term1407 _107639 A _53777 t s d GEN_PVAR_148) = (term1395 _107639 A _53777 GEN_PVAR_148 t s d).
Proof. exact (fun_ext (fun f : A -> _107639 => @lem4538232 _107639 A _53777 GEN_PVAR_148 t s d f)). Qed.
Lemma lem4538234 {_107639 A : Type'} : (@ex (A -> _107639)) = (@ex (A -> _107639)).
Proof. exact (eq_refl (@ex (A -> _107639))). Qed.
Lemma lem4538235 {_107639 A : Type'} (_53777 : type656 _107639 A) (GEN_PVAR_148 : A -> _107639) (t : _107639 -> Prop) (s : A -> Prop) (d : _107639) : (term1408 _107639 A _53777 t s d GEN_PVAR_148) = (term1396 _107639 A _53777 GEN_PVAR_148 t s d).
Proof. exact (MK_COMB (@lem4538234 _107639 A) (@lem4538233 _107639 A _53777 GEN_PVAR_148 t s d)). Qed.
Lemma lem4538236 {_107639 A : Type'} (_53777 : type656 _107639 A) (t : _107639 -> Prop) (s : A -> Prop) (d : _107639) : (term1409 _107639 A _53777 t s d) = (term1397 _107639 A _53777 t s d).
Proof. exact (fun_ext (fun GEN_PVAR_148 : A -> _107639 => @lem4538235 _107639 A _53777 GEN_PVAR_148 t s d)). Qed.
Lemma lem4538237 {_107639 A : Type'} : (@all (A -> _107639)) = (@all (A -> _107639)).
Proof. exact (eq_refl (@all (A -> _107639))). Qed.
Lemma lem4538238 {_107639 A : Type'} (_53777 : type656 _107639 A) (t : _107639 -> Prop) (s : A -> Prop) (d : _107639) : (term1401 _107639 A _53777 t s d) = (term1398 _107639 A _53777 t s d).
Proof. exact (MK_COMB (@lem4538237 _107639 A) (@lem4538236 _107639 A _53777 t s d)). Qed.
Lemma lem4538239 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4538240 {_107639 A : Type'} (_53777 : type656 _107639 A) (t : _107639 -> Prop) (s : A -> Prop) (d : _107639) : (term1410 _107639 A _53777 t s d) = (term1411 _107639 A _53777 t s d).
Proof. exact (MK_COMB (@lem4538239) (@lem4538238 _107639 A _53777 t s d)). Qed.
Lemma lem4538241 {_107639 A : Type'} (_53777 : type656 _107639 A) (GEN_PVAR_148 : A -> _107639) (t : _107639 -> Prop) (s : A -> Prop) (d : _107639) : (term1404 _107639 A _53777 t s d GEN_PVAR_148) = (term1395 _107639 A _53777 GEN_PVAR_148 t s d).
Proof. exact (eq_refl (term1404 _107639 A _53777 t s d GEN_PVAR_148)). Qed.
Lemma lem4538242 {_107639 A : Type'} (f : type796 _107639 A) (GEN_PVAR_148 : A -> _107639) : (f GEN_PVAR_148) = (f GEN_PVAR_148).
Proof. exact (eq_refl (f GEN_PVAR_148)). Qed.
Lemma lem4538243 {_107639 A : Type'} (_53777 : type656 _107639 A) (t : _107639 -> Prop) (s : A -> Prop) (d : _107639) (f : type796 _107639 A) (GEN_PVAR_148 : A -> _107639) : (term1412 _107639 A _53777 t s d f GEN_PVAR_148) = (term1413 _107639 A _53777 t s d f GEN_PVAR_148).
Proof. exact (MK_COMB (@lem4538241 _107639 A _53777 GEN_PVAR_148 t s d) (@lem4538242 _107639 A f GEN_PVAR_148)). Qed.
Lemma lem4538244 {_107639 A : Type'} (_53777 : type656 _107639 A) (t : _107639 -> Prop) (s : A -> Prop) (d : _107639) (f : type796 _107639 A) (GEN_PVAR_148 : A -> _107639) : (term1413 _107639 A _53777 t s d f GEN_PVAR_148) = (term1414 _107639 A _53777 t s d f GEN_PVAR_148).
Proof. exact (eq_refl (term1413 _107639 A _53777 t s d f GEN_PVAR_148)). Qed.
Lemma lem4538245 {_107639 A : Type'} (_53777 : type656 _107639 A) (t : _107639 -> Prop) (s : A -> Prop) (d : _107639) (f : type796 _107639 A) (GEN_PVAR_148 : A -> _107639) : (term1412 _107639 A _53777 t s d f GEN_PVAR_148) = (term1414 _107639 A _53777 t s d f GEN_PVAR_148).
Proof. exact (TRANS (@lem4538243 _107639 A _53777 t s d f GEN_PVAR_148) (@lem4538244 _107639 A _53777 t s d f GEN_PVAR_148)). Qed.
Lemma lem4538246 {_107639 A : Type'} (_53777 : type656 _107639 A) (t : _107639 -> Prop) (s : A -> Prop) (d : _107639) (f : type796 _107639 A) : (term1415 _107639 A _53777 t s d f) = (term1416 _107639 A _53777 t s d f).
Proof. exact (fun_ext (fun GEN_PVAR_148 : A -> _107639 => @lem4538245 _107639 A _53777 t s d f GEN_PVAR_148)). Qed.
Lemma lem4538247 {_107639 A : Type'} : (@all (A -> _107639)) = (@all (A -> _107639)).
Proof. exact (eq_refl (@all (A -> _107639))). Qed.
Lemma lem4538248 {_107639 A : Type'} (_53777 : type656 _107639 A) (t : _107639 -> Prop) (s : A -> Prop) (d : _107639) (f : type796 _107639 A) : (term1417 _107639 A _53777 t s d f) = (term1418 _107639 A _53777 t s d f).
Proof. exact (MK_COMB (@lem4538247 _107639 A) (@lem4538246 _107639 A _53777 t s d f)). Qed.
Lemma lem4538249 {_107639 A : Type'} (_53777 : type656 _107639 A) (t : _107639 -> Prop) (s : A -> Prop) (d : _107639) : (term1419 _107639 A _53777 t s d) = (term1420 _107639 A _53777 t s d).
Proof. exact (fun_ext (fun f : type796 _107639 A => @lem4538248 _107639 A _53777 t s d f)). Qed.
Lemma lem4538250 {_107639 A : Type'} : (@ex ((A -> _107639) -> A -> _107639)) = (@ex ((A -> _107639) -> A -> _107639)).
Proof. exact (eq_refl (@ex ((A -> _107639) -> A -> _107639))). Qed.
Lemma lem4538251 {_107639 A : Type'} (_53777 : type656 _107639 A) (t : _107639 -> Prop) (s : A -> Prop) (d : _107639) : (term1402 _107639 A _53777 t s d) = (term1421 _107639 A _53777 t s d).
Proof. exact (MK_COMB (@lem4538250 _107639 A) (@lem4538249 _107639 A _53777 t s d)). Qed.
Lemma lem4538252 {_107639 A : Type'} (_53777 : type656 _107639 A) (t : _107639 -> Prop) (s : A -> Prop) (d : _107639) : ((term1401 _107639 A _53777 t s d) = (term1402 _107639 A _53777 t s d)) = ((term1398 _107639 A _53777 t s d) = (term1421 _107639 A _53777 t s d)).
Proof. exact (MK_COMB (@lem4538240 _107639 A _53777 t s d) (@lem4538251 _107639 A _53777 t s d)). Qed.
Lemma lem4538253 {_107639 A : Type'} (_53777 : type656 _107639 A) (t : _107639 -> Prop) (s : A -> Prop) (d : _107639) : (term1398 _107639 A _53777 t s d) = (term1421 _107639 A _53777 t s d).
Proof. exact (EQ_MP (@lem4538252 _107639 A _53777 t s d) (@lem4538227 _107639 A _53777 t s d)). Qed.
Lemma lem4538254 {_107639 A : Type'} (_53777 : type656 _107639 A) (t : _107639 -> Prop) (s : A -> Prop) (d : _107639) : (term1315 _107639 A _53777 t s d) = (term1421 _107639 A _53777 t s d).
Proof. exact (TRANS (@lem4538223 _107639 A _53777 t s d) (@lem4538253 _107639 A _53777 t s d)). Qed.
Lemma lem4538255 {_107639 A : Type'} (_53777 : type656 _107639 A) (t : _107639 -> Prop) (s : A -> Prop) : (term1322 _107639 A _53777 t s) = (term1422 _107639 A _53777 t s).
Proof. exact (fun_ext (fun d : _107639 => @lem4538254 _107639 A _53777 t s d)). Qed.
Lemma lem4538256 {_107639 : Type'} : (@all _107639) = (@all _107639).
Proof. exact (eq_refl (@all _107639)). Qed.
Lemma lem4538257 {_107639 A : Type'} (_53777 : type656 _107639 A) (t : _107639 -> Prop) (s : A -> Prop) : (term1337 _107639 A _53777 t s) = (term1423 _107639 A _53777 t s).
Proof. exact (MK_COMB (@lem4538256 _107639) (@lem4538255 _107639 A _53777 t s)). Qed.
Lemma lem4538259 {A B : Type'} (P : type1413 A B) : (term907 A B P) = (term908 A B P).
Proof. exact (EQ_MP (@lem18899 A B P) (@lem18898 A B P)). Qed.
Lemma lem4538260 {_107639 A : Type'} (P : type1357 _107639 A) : (term1424 _107639 A P) = (term1425 _107639 A P).
Proof. exact (@lem4538259 _107639 (type796 _107639 A) P). Qed.
Lemma lem4538261 {_107639 A : Type'} (_53777 : type656 _107639 A) (t : _107639 -> Prop) (s : A -> Prop) : (term1426 _107639 A _53777 t s) = (term1427 _107639 A _53777 t s).
Proof. exact (@lem4538260 _107639 A (term1428 _107639 A _53777 t s)). Qed.
Lemma lem4538262 {_107639 A : Type'} (_53777 : type656 _107639 A) (t : _107639 -> Prop) (s : A -> Prop) (d : _107639) : (term1429 _107639 A _53777 t s d) = (term1420 _107639 A _53777 t s d).
Proof. exact (eq_refl (term1429 _107639 A _53777 t s d)). Qed.
Lemma lem4538263 {_107639 A : Type'} (f : type796 _107639 A) : f = f.
Proof. exact (eq_refl f). Qed.
Lemma lem4538264 {_107639 A : Type'} (_53777 : type656 _107639 A) (t : _107639 -> Prop) (s : A -> Prop) (d : _107639) (f : type796 _107639 A) : (term1430 _107639 A _53777 t s d f) = (term1431 _107639 A _53777 t s d f).
Proof. exact (MK_COMB (@lem4538262 _107639 A _53777 t s d) (@lem4538263 _107639 A f)). Qed.
Lemma lem4538265 {_107639 A : Type'} (_53777 : type656 _107639 A) (t : _107639 -> Prop) (s : A -> Prop) (d : _107639) (f : type796 _107639 A) : (term1431 _107639 A _53777 t s d f) = (term1418 _107639 A _53777 t s d f).
Proof. exact (eq_refl (term1431 _107639 A _53777 t s d f)). Qed.
Lemma lem4538266 {_107639 A : Type'} (_53777 : type656 _107639 A) (t : _107639 -> Prop) (s : A -> Prop) (d : _107639) (f : type796 _107639 A) : (term1430 _107639 A _53777 t s d f) = (term1418 _107639 A _53777 t s d f).
Proof. exact (TRANS (@lem4538264 _107639 A _53777 t s d f) (@lem4538265 _107639 A _53777 t s d f)). Qed.
Lemma lem4538267 {_107639 A : Type'} (_53777 : type656 _107639 A) (t : _107639 -> Prop) (s : A -> Prop) (d : _107639) : (term1432 _107639 A _53777 t s d) = (term1420 _107639 A _53777 t s d).
Proof. exact (fun_ext (fun f : type796 _107639 A => @lem4538266 _107639 A _53777 t s d f)). Qed.
Lemma lem4538268 {_107639 A : Type'} : (@ex ((A -> _107639) -> A -> _107639)) = (@ex ((A -> _107639) -> A -> _107639)).
Proof. exact (eq_refl (@ex ((A -> _107639) -> A -> _107639))). Qed.
Lemma lem4538269 {_107639 A : Type'} (_53777 : type656 _107639 A) (t : _107639 -> Prop) (s : A -> Prop) (d : _107639) : (term1433 _107639 A _53777 t s d) = (term1421 _107639 A _53777 t s d).
Proof. exact (MK_COMB (@lem4538268 _107639 A) (@lem4538267 _107639 A _53777 t s d)). Qed.
Lemma lem4538270 {_107639 A : Type'} (_53777 : type656 _107639 A) (t : _107639 -> Prop) (s : A -> Prop) : (term1434 _107639 A _53777 t s) = (term1422 _107639 A _53777 t s).
Proof. exact (fun_ext (fun d : _107639 => @lem4538269 _107639 A _53777 t s d)). Qed.
Lemma lem4538271 {_107639 : Type'} : (@all _107639) = (@all _107639).
Proof. exact (eq_refl (@all _107639)). Qed.
Lemma lem4538272 {_107639 A : Type'} (_53777 : type656 _107639 A) (t : _107639 -> Prop) (s : A -> Prop) : (term1426 _107639 A _53777 t s) = (term1423 _107639 A _53777 t s).
Proof. exact (MK_COMB (@lem4538271 _107639) (@lem4538270 _107639 A _53777 t s)). Qed.
Lemma lem4538273 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4538274 {_107639 A : Type'} (_53777 : type656 _107639 A) (t : _107639 -> Prop) (s : A -> Prop) : (term1435 _107639 A _53777 t s) = (term1436 _107639 A _53777 t s).
Proof. exact (MK_COMB (@lem4538273) (@lem4538272 _107639 A _53777 t s)). Qed.
Lemma lem4538275 {_107639 A : Type'} (_53777 : type656 _107639 A) (t : _107639 -> Prop) (s : A -> Prop) (d : _107639) : (term1429 _107639 A _53777 t s d) = (term1420 _107639 A _53777 t s d).
Proof. exact (eq_refl (term1429 _107639 A _53777 t s d)). Qed.
Lemma lem4538276 {_107639 A : Type'} (f : type1371 _107639 A) (d : _107639) : (f d) = (f d).
Proof. exact (eq_refl (f d)). Qed.
Lemma lem4538277 {_107639 A : Type'} (_53777 : type656 _107639 A) (t : _107639 -> Prop) (s : A -> Prop) (f : type1371 _107639 A) (d : _107639) : (term1437 _107639 A _53777 t s f d) = (term1438 _107639 A _53777 t s f d).
Proof. exact (MK_COMB (@lem4538275 _107639 A _53777 t s d) (@lem4538276 _107639 A f d)). Qed.
Lemma lem4538278 {_107639 A : Type'} (_53777 : type656 _107639 A) (t : _107639 -> Prop) (s : A -> Prop) (f : type1371 _107639 A) (d : _107639) : (term1438 _107639 A _53777 t s f d) = (term1439 _107639 A _53777 t s f d).
Proof. exact (eq_refl (term1438 _107639 A _53777 t s f d)). Qed.
Lemma lem4538279 {_107639 A : Type'} (_53777 : type656 _107639 A) (t : _107639 -> Prop) (s : A -> Prop) (f : type1371 _107639 A) (d : _107639) : (term1437 _107639 A _53777 t s f d) = (term1439 _107639 A _53777 t s f d).
Proof. exact (TRANS (@lem4538277 _107639 A _53777 t s f d) (@lem4538278 _107639 A _53777 t s f d)). Qed.
Lemma lem4538280 {_107639 A : Type'} (_53777 : type656 _107639 A) (t : _107639 -> Prop) (s : A -> Prop) (f : type1371 _107639 A) : (term1440 _107639 A _53777 t s f) = (term1441 _107639 A _53777 t s f).
Proof. exact (fun_ext (fun d : _107639 => @lem4538279 _107639 A _53777 t s f d)). Qed.
Lemma lem4538281 {_107639 : Type'} : (@all _107639) = (@all _107639).
Proof. exact (eq_refl (@all _107639)). Qed.
Lemma lem4538282 {_107639 A : Type'} (_53777 : type656 _107639 A) (t : _107639 -> Prop) (s : A -> Prop) (f : type1371 _107639 A) : (term1442 _107639 A _53777 t s f) = (term1443 _107639 A _53777 t s f).
Proof. exact (MK_COMB (@lem4538281 _107639) (@lem4538280 _107639 A _53777 t s f)). Qed.
Lemma lem4538283 {_107639 A : Type'} (_53777 : type656 _107639 A) (t : _107639 -> Prop) (s : A -> Prop) : (term1444 _107639 A _53777 t s) = (term1445 _107639 A _53777 t s).
Proof. exact (fun_ext (fun f : type1371 _107639 A => @lem4538282 _107639 A _53777 t s f)). Qed.
Lemma lem4538284 {_107639 A : Type'} : (@ex (_107639 -> (A -> _107639) -> A -> _107639)) = (@ex (_107639 -> (A -> _107639) -> A -> _107639)).
Proof. exact (eq_refl (@ex (_107639 -> (A -> _107639) -> A -> _107639))). Qed.
Lemma lem4538285 {_107639 A : Type'} (_53777 : type656 _107639 A) (t : _107639 -> Prop) (s : A -> Prop) : (term1427 _107639 A _53777 t s) = (term1446 _107639 A _53777 t s).
Proof. exact (MK_COMB (@lem4538284 _107639 A) (@lem4538283 _107639 A _53777 t s)). Qed.
Lemma lem4538286 {_107639 A : Type'} (_53777 : type656 _107639 A) (t : _107639 -> Prop) (s : A -> Prop) : ((term1426 _107639 A _53777 t s) = (term1427 _107639 A _53777 t s)) = ((term1423 _107639 A _53777 t s) = (term1446 _107639 A _53777 t s)).
Proof. exact (MK_COMB (@lem4538274 _107639 A _53777 t s) (@lem4538285 _107639 A _53777 t s)). Qed.
Lemma lem4538287 {_107639 A : Type'} (_53777 : type656 _107639 A) (t : _107639 -> Prop) (s : A -> Prop) : (term1423 _107639 A _53777 t s) = (term1446 _107639 A _53777 t s).
Proof. exact (EQ_MP (@lem4538286 _107639 A _53777 t s) (@lem4538261 _107639 A _53777 t s)). Qed.
Lemma lem4538288 {_107639 A : Type'} (_53777 : type656 _107639 A) (t : _107639 -> Prop) (s : A -> Prop) : (term1337 _107639 A _53777 t s) = (term1446 _107639 A _53777 t s).
Proof. exact (TRANS (@lem4538257 _107639 A _53777 t s) (@lem4538287 _107639 A _53777 t s)). Qed.
Lemma lem4538289 {_107639 A : Type'} (_53777 : type656 _107639 A) (t : _107639 -> Prop) : (term1344 _107639 A _53777 t) = (term1447 _107639 A _53777 t).
Proof. exact (fun_ext (fun s : A -> Prop => @lem4538288 _107639 A _53777 t s)). Qed.
Lemma lem4538290 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem4538291 {_107639 A : Type'} (_53777 : type656 _107639 A) (t : _107639 -> Prop) : (term1359 _107639 A _53777 t) = (term1448 _107639 A _53777 t).
Proof. exact (MK_COMB (@lem4538290 A) (@lem4538289 _107639 A _53777 t)). Qed.
Lemma lem4538293 {A B : Type'} (P : type1413 A B) : (term907 A B P) = (term908 A B P).
Proof. exact (EQ_MP (@lem18899 A B P) (@lem18898 A B P)). Qed.
Lemma lem4538294 {_107639 A : Type'} (P : type829 _107639 A) : (term1449 _107639 A P) = (term1450 _107639 A P).
Proof. exact (@lem4538293 (A -> Prop) (type1371 _107639 A) P). Qed.
Lemma lem4538295 {_107639 A : Type'} (_53777 : type656 _107639 A) (t : _107639 -> Prop) : (term1451 _107639 A _53777 t) = (term1452 _107639 A _53777 t).
Proof. exact (@lem4538294 _107639 A (term1453 _107639 A _53777 t)). Qed.
Lemma lem4538296 {_107639 A : Type'} (_53777 : type656 _107639 A) (t : _107639 -> Prop) (s : A -> Prop) : (term1454 _107639 A _53777 t s) = (term1445 _107639 A _53777 t s).
Proof. exact (eq_refl (term1454 _107639 A _53777 t s)). Qed.
Lemma lem4538297 {_107639 A : Type'} (f : type1371 _107639 A) : f = f.
Proof. exact (eq_refl f). Qed.
Lemma lem4538298 {_107639 A : Type'} (_53777 : type656 _107639 A) (t : _107639 -> Prop) (s : A -> Prop) (f : type1371 _107639 A) : (term1455 _107639 A _53777 t s f) = (term1456 _107639 A _53777 t s f).
Proof. exact (MK_COMB (@lem4538296 _107639 A _53777 t s) (@lem4538297 _107639 A f)). Qed.
Lemma lem4538299 {_107639 A : Type'} (_53777 : type656 _107639 A) (t : _107639 -> Prop) (s : A -> Prop) (f : type1371 _107639 A) : (term1456 _107639 A _53777 t s f) = (term1443 _107639 A _53777 t s f).
Proof. exact (eq_refl (term1456 _107639 A _53777 t s f)). Qed.
Lemma lem4538300 {_107639 A : Type'} (_53777 : type656 _107639 A) (t : _107639 -> Prop) (s : A -> Prop) (f : type1371 _107639 A) : (term1455 _107639 A _53777 t s f) = (term1443 _107639 A _53777 t s f).
Proof. exact (TRANS (@lem4538298 _107639 A _53777 t s f) (@lem4538299 _107639 A _53777 t s f)). Qed.
Lemma lem4538301 {_107639 A : Type'} (_53777 : type656 _107639 A) (t : _107639 -> Prop) (s : A -> Prop) : (term1457 _107639 A _53777 t s) = (term1445 _107639 A _53777 t s).
Proof. exact (fun_ext (fun f : type1371 _107639 A => @lem4538300 _107639 A _53777 t s f)). Qed.
Lemma lem4538302 {_107639 A : Type'} : (@ex (_107639 -> (A -> _107639) -> A -> _107639)) = (@ex (_107639 -> (A -> _107639) -> A -> _107639)).
Proof. exact (eq_refl (@ex (_107639 -> (A -> _107639) -> A -> _107639))). Qed.
Lemma lem4538303 {_107639 A : Type'} (_53777 : type656 _107639 A) (t : _107639 -> Prop) (s : A -> Prop) : (term1458 _107639 A _53777 t s) = (term1446 _107639 A _53777 t s).
Proof. exact (MK_COMB (@lem4538302 _107639 A) (@lem4538301 _107639 A _53777 t s)). Qed.
Lemma lem4538304 {_107639 A : Type'} (_53777 : type656 _107639 A) (t : _107639 -> Prop) : (term1459 _107639 A _53777 t) = (term1447 _107639 A _53777 t).
Proof. exact (fun_ext (fun s : A -> Prop => @lem4538303 _107639 A _53777 t s)). Qed.
Lemma lem4538305 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem4538306 {_107639 A : Type'} (_53777 : type656 _107639 A) (t : _107639 -> Prop) : (term1451 _107639 A _53777 t) = (term1448 _107639 A _53777 t).
Proof. exact (MK_COMB (@lem4538305 A) (@lem4538304 _107639 A _53777 t)). Qed.
Lemma lem4538307 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4538308 {_107639 A : Type'} (_53777 : type656 _107639 A) (t : _107639 -> Prop) : (term1460 _107639 A _53777 t) = (term1461 _107639 A _53777 t).
Proof. exact (MK_COMB (@lem4538307) (@lem4538306 _107639 A _53777 t)). Qed.
Lemma lem4538309 {_107639 A : Type'} (_53777 : type656 _107639 A) (t : _107639 -> Prop) (s : A -> Prop) : (term1454 _107639 A _53777 t s) = (term1445 _107639 A _53777 t s).
Proof. exact (eq_refl (term1454 _107639 A _53777 t s)). Qed.
Lemma lem4538310 {_107639 A : Type'} (f : type858 _107639 A) (s : A -> Prop) : (f s) = (f s).
Proof. exact (eq_refl (f s)). Qed.
Lemma lem4538311 {_107639 A : Type'} (_53777 : type656 _107639 A) (t : _107639 -> Prop) (f : type858 _107639 A) (s : A -> Prop) : (term1462 _107639 A _53777 t f s) = (term1463 _107639 A _53777 t f s).
Proof. exact (MK_COMB (@lem4538309 _107639 A _53777 t s) (@lem4538310 _107639 A f s)). Qed.
Lemma lem4538312 {_107639 A : Type'} (_53777 : type656 _107639 A) (t : _107639 -> Prop) (f : type858 _107639 A) (s : A -> Prop) : (term1463 _107639 A _53777 t f s) = (term1464 _107639 A _53777 t f s).
Proof. exact (eq_refl (term1463 _107639 A _53777 t f s)). Qed.
Lemma lem4538313 {_107639 A : Type'} (_53777 : type656 _107639 A) (t : _107639 -> Prop) (f : type858 _107639 A) (s : A -> Prop) : (term1462 _107639 A _53777 t f s) = (term1464 _107639 A _53777 t f s).
Proof. exact (TRANS (@lem4538311 _107639 A _53777 t f s) (@lem4538312 _107639 A _53777 t f s)). Qed.
Lemma lem4538314 {_107639 A : Type'} (_53777 : type656 _107639 A) (t : _107639 -> Prop) (f : type858 _107639 A) : (term1465 _107639 A _53777 t f) = (term1466 _107639 A _53777 t f).
Proof. exact (fun_ext (fun s : A -> Prop => @lem4538313 _107639 A _53777 t f s)). Qed.
Lemma lem4538315 {A : Type'} : (@all (A -> Prop)) = (@all (A -> Prop)).
Proof. exact (eq_refl (@all (A -> Prop))). Qed.
Lemma lem4538316 {_107639 A : Type'} (_53777 : type656 _107639 A) (t : _107639 -> Prop) (f : type858 _107639 A) : (term1467 _107639 A _53777 t f) = (term1468 _107639 A _53777 t f).
Proof. exact (MK_COMB (@lem4538315 A) (@lem4538314 _107639 A _53777 t f)). Qed.
Lemma lem4538317 {_107639 A : Type'} (_53777 : type656 _107639 A) (t : _107639 -> Prop) : (term1469 _107639 A _53777 t) = (term1470 _107639 A _53777 t).
Proof. exact (fun_ext (fun f : type858 _107639 A => @lem4538316 _107639 A _53777 t f)). Qed.
Lemma lem4538318 {_107639 A : Type'} : (@ex ((A -> Prop) -> _107639 -> (A -> _107639) -> A -> _107639)) = (@ex ((A -> Prop) -> _107639 -> (A -> _107639) -> A -> _107639)).
Proof. exact (eq_refl (@ex ((A -> Prop) -> _107639 -> (A -> _107639) -> A -> _107639))). Qed.
Lemma lem4538319 {_107639 A : Type'} (_53777 : type656 _107639 A) (t : _107639 -> Prop) : (term1452 _107639 A _53777 t) = (term1471 _107639 A _53777 t).
Proof. exact (MK_COMB (@lem4538318 _107639 A) (@lem4538317 _107639 A _53777 t)). Qed.
Lemma lem4538320 {_107639 A : Type'} (_53777 : type656 _107639 A) (t : _107639 -> Prop) : ((term1451 _107639 A _53777 t) = (term1452 _107639 A _53777 t)) = ((term1448 _107639 A _53777 t) = (term1471 _107639 A _53777 t)).
Proof. exact (MK_COMB (@lem4538308 _107639 A _53777 t) (@lem4538319 _107639 A _53777 t)). Qed.
Lemma lem4538321 {_107639 A : Type'} (_53777 : type656 _107639 A) (t : _107639 -> Prop) : (term1448 _107639 A _53777 t) = (term1471 _107639 A _53777 t).
Proof. exact (EQ_MP (@lem4538320 _107639 A _53777 t) (@lem4538295 _107639 A _53777 t)). Qed.
Lemma lem4538322 {_107639 A : Type'} (_53777 : type656 _107639 A) (t : _107639 -> Prop) : (term1359 _107639 A _53777 t) = (term1471 _107639 A _53777 t).
Proof. exact (TRANS (@lem4538291 _107639 A _53777 t) (@lem4538321 _107639 A _53777 t)). Qed.
Lemma lem4538323 {_107639 A : Type'} (_53777 : type656 _107639 A) : (term1366 _107639 A _53777) = (term1472 _107639 A _53777).
Proof. exact (fun_ext (fun t : _107639 -> Prop => @lem4538322 _107639 A _53777 t)). Qed.
Lemma lem4538324 {_107639 : Type'} : (@all (_107639 -> Prop)) = (@all (_107639 -> Prop)).
Proof. exact (eq_refl (@all (_107639 -> Prop))). Qed.
Lemma lem4538325 {_107639 A : Type'} (_53777 : type656 _107639 A) : (term1381 _107639 A _53777) = (term1473 _107639 A _53777).
Proof. exact (MK_COMB (@lem4538324 _107639) (@lem4538323 _107639 A _53777)). Qed.
Lemma lem4538327 {A B : Type'} (P : type1413 A B) : (term907 A B P) = (term908 A B P).
Proof. exact (EQ_MP (@lem18899 A B P) (@lem18898 A B P)). Qed.
Lemma lem4538328 {_107639 A : Type'} (P : type606 _107639 A) : (term1474 _107639 A P) = (term1475 _107639 A P).
Proof. exact (@lem4538327 (_107639 -> Prop) (type858 _107639 A) P). Qed.
Lemma lem4538329 {_107639 A : Type'} (_53777 : type656 _107639 A) : (term1476 _107639 A _53777) = (term1477 _107639 A _53777).
Proof. exact (@lem4538328 _107639 A (term1478 _107639 A _53777)). Qed.
Lemma lem4538330 {_107639 A : Type'} (_53777 : type656 _107639 A) (t : _107639 -> Prop) : (term1479 _107639 A _53777 t) = (term1470 _107639 A _53777 t).
Proof. exact (eq_refl (term1479 _107639 A _53777 t)). Qed.
Lemma lem4538331 {_107639 A : Type'} (f : type858 _107639 A) : f = f.
Proof. exact (eq_refl f). Qed.
Lemma lem4538332 {_107639 A : Type'} (_53777 : type656 _107639 A) (t : _107639 -> Prop) (f : type858 _107639 A) : (term1480 _107639 A _53777 t f) = (term1481 _107639 A _53777 t f).
Proof. exact (MK_COMB (@lem4538330 _107639 A _53777 t) (@lem4538331 _107639 A f)). Qed.
Lemma lem4538333 {_107639 A : Type'} (_53777 : type656 _107639 A) (t : _107639 -> Prop) (f : type858 _107639 A) : (term1481 _107639 A _53777 t f) = (term1468 _107639 A _53777 t f).
Proof. exact (eq_refl (term1481 _107639 A _53777 t f)). Qed.
Lemma lem4538334 {_107639 A : Type'} (_53777 : type656 _107639 A) (t : _107639 -> Prop) (f : type858 _107639 A) : (term1480 _107639 A _53777 t f) = (term1468 _107639 A _53777 t f).
Proof. exact (TRANS (@lem4538332 _107639 A _53777 t f) (@lem4538333 _107639 A _53777 t f)). Qed.
Lemma lem4538335 {_107639 A : Type'} (_53777 : type656 _107639 A) (t : _107639 -> Prop) : (term1482 _107639 A _53777 t) = (term1470 _107639 A _53777 t).
Proof. exact (fun_ext (fun f : type858 _107639 A => @lem4538334 _107639 A _53777 t f)). Qed.
Lemma lem4538336 {_107639 A : Type'} : (@ex ((A -> Prop) -> _107639 -> (A -> _107639) -> A -> _107639)) = (@ex ((A -> Prop) -> _107639 -> (A -> _107639) -> A -> _107639)).
Proof. exact (eq_refl (@ex ((A -> Prop) -> _107639 -> (A -> _107639) -> A -> _107639))). Qed.
Lemma lem4538337 {_107639 A : Type'} (_53777 : type656 _107639 A) (t : _107639 -> Prop) : (term1483 _107639 A _53777 t) = (term1471 _107639 A _53777 t).
Proof. exact (MK_COMB (@lem4538336 _107639 A) (@lem4538335 _107639 A _53777 t)). Qed.
Lemma lem4538338 {_107639 A : Type'} (_53777 : type656 _107639 A) : (term1484 _107639 A _53777) = (term1472 _107639 A _53777).
Proof. exact (fun_ext (fun t : _107639 -> Prop => @lem4538337 _107639 A _53777 t)). Qed.
Lemma lem4538339 {_107639 : Type'} : (@all (_107639 -> Prop)) = (@all (_107639 -> Prop)).
Proof. exact (eq_refl (@all (_107639 -> Prop))). Qed.
Lemma lem4538340 {_107639 A : Type'} (_53777 : type656 _107639 A) : (term1476 _107639 A _53777) = (term1473 _107639 A _53777).
Proof. exact (MK_COMB (@lem4538339 _107639) (@lem4538338 _107639 A _53777)). Qed.
Lemma lem4538341 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4538342 {_107639 A : Type'} (_53777 : type656 _107639 A) : (term1485 _107639 A _53777) = (term1486 _107639 A _53777).
Proof. exact (MK_COMB (@lem4538341) (@lem4538340 _107639 A _53777)). Qed.
Lemma lem4538343 {_107639 A : Type'} (_53777 : type656 _107639 A) (t : _107639 -> Prop) : (term1479 _107639 A _53777 t) = (term1470 _107639 A _53777 t).
Proof. exact (eq_refl (term1479 _107639 A _53777 t)). Qed.
Lemma lem4538344 {_107639 A : Type'} (f : type655 _107639 A) (t : _107639 -> Prop) : (f t) = (f t).
Proof. exact (eq_refl (f t)). Qed.
Lemma lem4538345 {_107639 A : Type'} (_53777 : type656 _107639 A) (f : type655 _107639 A) (t : _107639 -> Prop) : (term1487 _107639 A _53777 f t) = (term1488 _107639 A _53777 f t).
Proof. exact (MK_COMB (@lem4538343 _107639 A _53777 t) (@lem4538344 _107639 A f t)). Qed.
Lemma lem4538346 {_107639 A : Type'} (_53777 : type656 _107639 A) (f : type655 _107639 A) (t : _107639 -> Prop) : (term1488 _107639 A _53777 f t) = (term1489 _107639 A _53777 f t).
Proof. exact (eq_refl (term1488 _107639 A _53777 f t)). Qed.
Lemma lem4538347 {_107639 A : Type'} (_53777 : type656 _107639 A) (f : type655 _107639 A) (t : _107639 -> Prop) : (term1487 _107639 A _53777 f t) = (term1489 _107639 A _53777 f t).
Proof. exact (TRANS (@lem4538345 _107639 A _53777 f t) (@lem4538346 _107639 A _53777 f t)). Qed.
Lemma lem4538348 {_107639 A : Type'} (_53777 : type656 _107639 A) (f : type655 _107639 A) : (term1490 _107639 A _53777 f) = (term1491 _107639 A _53777 f).
Proof. exact (fun_ext (fun t : _107639 -> Prop => @lem4538347 _107639 A _53777 f t)). Qed.
Lemma lem4538349 {_107639 : Type'} : (@all (_107639 -> Prop)) = (@all (_107639 -> Prop)).
Proof. exact (eq_refl (@all (_107639 -> Prop))). Qed.
Lemma lem4538350 {_107639 A : Type'} (_53777 : type656 _107639 A) (f : type655 _107639 A) : (term1492 _107639 A _53777 f) = (term1493 _107639 A _53777 f).
Proof. exact (MK_COMB (@lem4538349 _107639) (@lem4538348 _107639 A _53777 f)). Qed.
Lemma lem4538351 {_107639 A : Type'} (_53777 : type656 _107639 A) : (term1494 _107639 A _53777) = (term1495 _107639 A _53777).
Proof. exact (fun_ext (fun f : type655 _107639 A => @lem4538350 _107639 A _53777 f)). Qed.
Lemma lem4538352 {_107639 A : Type'} : (@ex ((_107639 -> Prop) -> (A -> Prop) -> _107639 -> (A -> _107639) -> A -> _107639)) = (@ex ((_107639 -> Prop) -> (A -> Prop) -> _107639 -> (A -> _107639) -> A -> _107639)).
Proof. exact (eq_refl (@ex ((_107639 -> Prop) -> (A -> Prop) -> _107639 -> (A -> _107639) -> A -> _107639))). Qed.
Lemma lem4538353 {_107639 A : Type'} (_53777 : type656 _107639 A) : (term1477 _107639 A _53777) = (term1496 _107639 A _53777).
Proof. exact (MK_COMB (@lem4538352 _107639 A) (@lem4538351 _107639 A _53777)). Qed.
Lemma lem4538354 {_107639 A : Type'} (_53777 : type656 _107639 A) : ((term1476 _107639 A _53777) = (term1477 _107639 A _53777)) = ((term1473 _107639 A _53777) = (term1496 _107639 A _53777)).
Proof. exact (MK_COMB (@lem4538342 _107639 A _53777) (@lem4538353 _107639 A _53777)). Qed.
Lemma lem4538355 {_107639 A : Type'} (_53777 : type656 _107639 A) : (term1473 _107639 A _53777) = (term1496 _107639 A _53777).
Proof. exact (EQ_MP (@lem4538354 _107639 A _53777) (@lem4538329 _107639 A _53777)). Qed.
Lemma lem4538356 {_107639 A : Type'} (_53777 : type656 _107639 A) : (term1381 _107639 A _53777) = (term1496 _107639 A _53777).
Proof. exact (TRANS (@lem4538325 _107639 A _53777) (@lem4538355 _107639 A _53777)). Qed.
Lemma lem4538357 {_107639 A : Type'} (_53777 : type656 _107639 A) : (term1378 _107639 A _53777) = (term1378 _107639 A _53777).
Proof. exact (eq_refl (term1378 _107639 A _53777)). Qed.
Lemma lem4538358 {_107639 A : Type'} (_53777 : type656 _107639 A) : (term1382 _107639 A _53777) = (term1497 _107639 A _53777).
Proof. exact (MK_COMB (@lem4538357 _107639 A _53777) (@lem4538356 _107639 A _53777)). Qed.
Lemma lem4538360 {A : Type'} (P : Prop) (Q : A -> Prop) : (term1008 A P Q) = (term1009 A P Q).
Proof. exact (EQ_MP (@lem18929 A P Q) (@lem18928 A P Q)). Qed.
Lemma lem4538361 {_107639 A : Type'} (P : Prop) (Q : type146 _107639 A) : (term1498 _107639 A P Q) = (term1499 _107639 A P Q).
Proof. exact (@lem4538360 (type655 _107639 A) P Q). Qed.
Lemma lem4538362 {_107639 A : Type'} (_53777 : type656 _107639 A) : (term1500 _107639 A _53777) = (term1501 _107639 A _53777).
Proof. exact (@lem4538361 _107639 A (term1376 _107639 A _53777) (term1495 _107639 A _53777)). Qed.
Lemma lem4538363 {_107639 A : Type'} (_53777 : type656 _107639 A) (f : type655 _107639 A) : (term1502 _107639 A _53777 f) = (term1493 _107639 A _53777 f).
Proof. exact (eq_refl (term1502 _107639 A _53777 f)). Qed.
Lemma lem4538364 {_107639 A : Type'} (_53777 : type656 _107639 A) : (term1503 _107639 A _53777) = (term1495 _107639 A _53777).
Proof. exact (fun_ext (fun f : type655 _107639 A => @lem4538363 _107639 A _53777 f)). Qed.
Lemma lem4538365 {_107639 A : Type'} : (@ex ((_107639 -> Prop) -> (A -> Prop) -> _107639 -> (A -> _107639) -> A -> _107639)) = (@ex ((_107639 -> Prop) -> (A -> Prop) -> _107639 -> (A -> _107639) -> A -> _107639)).
Proof. exact (eq_refl (@ex ((_107639 -> Prop) -> (A -> Prop) -> _107639 -> (A -> _107639) -> A -> _107639))). Qed.
Lemma lem4538366 {_107639 A : Type'} (_53777 : type656 _107639 A) : (term1504 _107639 A _53777) = (term1496 _107639 A _53777).
Proof. exact (MK_COMB (@lem4538365 _107639 A) (@lem4538364 _107639 A _53777)). Qed.
Lemma lem4538367 {_107639 A : Type'} (_53777 : type656 _107639 A) : (term1378 _107639 A _53777) = (term1378 _107639 A _53777).
Proof. exact (eq_refl (term1378 _107639 A _53777)). Qed.
Lemma lem4538368 {_107639 A : Type'} (_53777 : type656 _107639 A) : (term1500 _107639 A _53777) = (term1497 _107639 A _53777).
Proof. exact (MK_COMB (@lem4538367 _107639 A _53777) (@lem4538366 _107639 A _53777)). Qed.
Lemma lem4538369 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4538370 {_107639 A : Type'} (_53777 : type656 _107639 A) : (term1505 _107639 A _53777) = (term1506 _107639 A _53777).
Proof. exact (MK_COMB (@lem4538369) (@lem4538368 _107639 A _53777)). Qed.
Lemma lem4538371 {_107639 A : Type'} (_53777 : type656 _107639 A) (f : type655 _107639 A) : (term1502 _107639 A _53777 f) = (term1493 _107639 A _53777 f).
Proof. exact (eq_refl (term1502 _107639 A _53777 f)). Qed.
Lemma lem4538372 {_107639 A : Type'} (_53777 : type656 _107639 A) : (term1378 _107639 A _53777) = (term1378 _107639 A _53777).
Proof. exact (eq_refl (term1378 _107639 A _53777)). Qed.
Lemma lem4538373 {_107639 A : Type'} (_53777 : type656 _107639 A) (f : type655 _107639 A) : (term1507 _107639 A _53777 f) = (term1508 _107639 A _53777 f).
Proof. exact (MK_COMB (@lem4538372 _107639 A _53777) (@lem4538371 _107639 A _53777 f)). Qed.
Lemma lem4538374 {_107639 A : Type'} (_53777 : type656 _107639 A) : (term1509 _107639 A _53777) = (term1510 _107639 A _53777).
Proof. exact (fun_ext (fun f : type655 _107639 A => @lem4538373 _107639 A _53777 f)). Qed.
Lemma lem4538375 {_107639 A : Type'} : (@ex ((_107639 -> Prop) -> (A -> Prop) -> _107639 -> (A -> _107639) -> A -> _107639)) = (@ex ((_107639 -> Prop) -> (A -> Prop) -> _107639 -> (A -> _107639) -> A -> _107639)).
Proof. exact (eq_refl (@ex ((_107639 -> Prop) -> (A -> Prop) -> _107639 -> (A -> _107639) -> A -> _107639))). Qed.
Lemma lem4538376 {_107639 A : Type'} (_53777 : type656 _107639 A) : (term1501 _107639 A _53777) = (term1511 _107639 A _53777).
Proof. exact (MK_COMB (@lem4538375 _107639 A) (@lem4538374 _107639 A _53777)). Qed.
Lemma lem4538377 {_107639 A : Type'} (_53777 : type656 _107639 A) : ((term1500 _107639 A _53777) = (term1501 _107639 A _53777)) = ((term1497 _107639 A _53777) = (term1511 _107639 A _53777)).
Proof. exact (MK_COMB (@lem4538370 _107639 A _53777) (@lem4538376 _107639 A _53777)). Qed.
Lemma lem4538378 {_107639 A : Type'} (_53777 : type656 _107639 A) : (term1497 _107639 A _53777) = (term1511 _107639 A _53777).
Proof. exact (EQ_MP (@lem4538377 _107639 A _53777) (@lem4538362 _107639 A _53777)). Qed.
Lemma lem4538379 {_107639 A : Type'} (_53777 : type656 _107639 A) : (term1382 _107639 A _53777) = (term1511 _107639 A _53777).
Proof. exact (TRANS (@lem4538358 _107639 A _53777) (@lem4538378 _107639 A _53777)). Qed.
Lemma lem4538380 {_107639 A : Type'} (_53777 : type656 _107639 A) : (term1294 _107639 A _53777) = (term1511 _107639 A _53777).
Proof. exact (TRANS (@lem4538200 _107639 A _53777) (@lem4538379 _107639 A _53777)). Qed.
Lemma lem4538381 {_107639 A : Type'} (_53777 : type656 _107639 A) : (term302 _107639 A _53777) = (term1511 _107639 A _53777).
Proof. exact (TRANS (@lem4537540 _107639 A _53777) (@lem4538380 _107639 A _53777)). Qed.
Lemma lem4538382 {_107639 A : Type'} (_53777 : type656 _107639 A) (h1 : term302 _107639 A _53777) : term1511 _107639 A _53777.
Proof. exact (EQ_MP (@lem4538381 _107639 A _53777) (@lem4533068 _107639 A _53777 h1)). Qed.
Lemma lem4538386 {_107639 _107642 : Type'} (GEN_PVAR_149 : _107642 -> _107639) (t : _107639 -> Prop) (s : _107642 -> Prop) (d : _107639) (f : _107642 -> _107639) : (term149 _107639 _107642 GEN_PVAR_149 t s d f) = (term149 _107639 _107642 GEN_PVAR_149 t s d f).
Proof. exact (eq_refl (term149 _107639 _107642 GEN_PVAR_149 t s d f)). Qed.
Lemma lem4538387 {_107639 _107642 : Type'} (P : type805 _107639 _107642) : (term1268 _107639 _107642 P) = (term1269 _107639 _107642 P).
Proof. exact (@lem18394 (_107642 -> _107639) P). Qed.
Lemma lem4538388 {_107639 _107642 : Type'} (GEN_PVAR_149 : _107642 -> _107639) (t : _107639 -> Prop) (s : _107642 -> Prop) (d : _107639) : (term1270 _107639 _107642 GEN_PVAR_149 t s d) = (term1271 _107639 _107642 GEN_PVAR_149 t s d).
Proof. exact (@lem4538387 _107639 _107642 (term150 _107639 _107642 GEN_PVAR_149 t s d)). Qed.
Lemma lem4538389 {_107639 _107642 : Type'} (GEN_PVAR_149 : _107642 -> _107639) (t : _107639 -> Prop) (s : _107642 -> Prop) (d : _107639) (f : _107642 -> _107639) : (term1272 _107639 _107642 GEN_PVAR_149 t s d f) = (term149 _107639 _107642 GEN_PVAR_149 t s d f).
Proof. exact (eq_refl (term1272 _107639 _107642 GEN_PVAR_149 t s d f)). Qed.
Lemma lem4538390 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem4538392 {_107639 _107642 : Type'} (GEN_PVAR_149 : _107642 -> _107639) (t : _107639 -> Prop) (s : _107642 -> Prop) (d : _107639) (f : _107642 -> _107639) : (term1273 _107639 _107642 GEN_PVAR_149 t s d f) = (term1274 _107639 _107642 GEN_PVAR_149 t s d f).
Proof. exact (MK_COMB (@lem4538390) (@lem4538389 _107639 _107642 GEN_PVAR_149 t s d f)). Qed.
Lemma lem4538393 {_107639 _107642 : Type'} (GEN_PVAR_149 : _107642 -> _107639) (t : _107639 -> Prop) (s : _107642 -> Prop) (d : _107639) : (term1275 _107639 _107642 GEN_PVAR_149 t s d) = (term1276 _107639 _107642 GEN_PVAR_149 t s d).
Proof. exact (fun_ext (fun f : _107642 -> _107639 => @lem4538392 _107639 _107642 GEN_PVAR_149 t s d f)). Qed.
Lemma lem4538394 {_107639 _107642 : Type'} : (@all (_107642 -> _107639)) = (@all (_107642 -> _107639)).
Proof. exact (eq_refl (@all (_107642 -> _107639))). Qed.
Lemma lem4538395 {_107639 _107642 : Type'} (GEN_PVAR_149 : _107642 -> _107639) (t : _107639 -> Prop) (s : _107642 -> Prop) (d : _107639) : (term1271 _107639 _107642 GEN_PVAR_149 t s d) = (term1277 _107639 _107642 GEN_PVAR_149 t s d).
Proof. exact (MK_COMB (@lem4538394 _107639 _107642) (@lem4538393 _107639 _107642 GEN_PVAR_149 t s d)). Qed.
Lemma lem4538396 {_107639 _107642 : Type'} (GEN_PVAR_149 : _107642 -> _107639) (t : _107639 -> Prop) (s : _107642 -> Prop) (d : _107639) : (term1270 _107639 _107642 GEN_PVAR_149 t s d) = (term1277 _107639 _107642 GEN_PVAR_149 t s d).
Proof. exact (TRANS (@lem4538388 _107639 _107642 GEN_PVAR_149 t s d) (@lem4538395 _107639 _107642 GEN_PVAR_149 t s d)). Qed.
Lemma lem4538397 {_107639 _107642 : Type'} (GEN_PVAR_149 : _107642 -> _107639) (t : _107639 -> Prop) (s : _107642 -> Prop) (d : _107639) : (term150 _107639 _107642 GEN_PVAR_149 t s d) = (term150 _107639 _107642 GEN_PVAR_149 t s d).
Proof. exact (fun_ext (fun f : _107642 -> _107639 => @lem4538386 _107639 _107642 GEN_PVAR_149 t s d f)). Qed.
Lemma lem4538398 {_107639 _107642 : Type'} : (@ex (_107642 -> _107639)) = (@ex (_107642 -> _107639)).
Proof. exact (eq_refl (@ex (_107642 -> _107639))). Qed.
Lemma lem4538399 {_107639 _107642 : Type'} (GEN_PVAR_149 : _107642 -> _107639) (t : _107639 -> Prop) (s : _107642 -> Prop) (d : _107639) : (term151 _107639 _107642 GEN_PVAR_149 t s d) = (term151 _107639 _107642 GEN_PVAR_149 t s d).
Proof. exact (MK_COMB (@lem4538398 _107639 _107642) (@lem4538397 _107639 _107642 GEN_PVAR_149 t s d)). Qed.
Lemma lem4538401 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (t : _107639 -> Prop) (s : _107642 -> Prop) (d : _107639) (GEN_PVAR_149 : _107642 -> _107639) : (term1278 _107639 _107642 _53776 t s d GEN_PVAR_149) = (term1278 _107639 _107642 _53776 t s d GEN_PVAR_149).
Proof. exact (eq_refl (term1278 _107639 _107642 _53776 t s d GEN_PVAR_149)). Qed.
Lemma lem4538402 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (GEN_PVAR_149 : _107642 -> _107639) (t : _107639 -> Prop) (s : _107642 -> Prop) (d : _107639) : (term1279 _107639 _107642 _53776 GEN_PVAR_149 t s d) = (term1279 _107639 _107642 _53776 GEN_PVAR_149 t s d).
Proof. exact (MK_COMB (@lem4538401 _107639 _107642 _53776 t s d GEN_PVAR_149) (@lem4538399 _107639 _107642 GEN_PVAR_149 t s d)). Qed.
Lemma lem4538404 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (t : _107639 -> Prop) (s : _107642 -> Prop) (d : _107639) (GEN_PVAR_149 : _107642 -> _107639) : (term1280 _107639 _107642 _53776 t s d GEN_PVAR_149) = (term1280 _107639 _107642 _53776 t s d GEN_PVAR_149).
Proof. exact (eq_refl (term1280 _107639 _107642 _53776 t s d GEN_PVAR_149)). Qed.
Lemma lem4538405 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (GEN_PVAR_149 : _107642 -> _107639) (t : _107639 -> Prop) (s : _107642 -> Prop) (d : _107639) : (term1281 _107639 _107642 _53776 GEN_PVAR_149 t s d) = (term1282 _107639 _107642 _53776 GEN_PVAR_149 t s d).
Proof. exact (MK_COMB (@lem4538404 _107639 _107642 _53776 t s d GEN_PVAR_149) (@lem4538396 _107639 _107642 GEN_PVAR_149 t s d)). Qed.
Lemma lem4538406 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4538407 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (GEN_PVAR_149 : _107642 -> _107639) (t : _107639 -> Prop) (s : _107642 -> Prop) (d : _107639) : (term1283 _107639 _107642 _53776 GEN_PVAR_149 t s d) = (term1284 _107639 _107642 _53776 GEN_PVAR_149 t s d).
Proof. exact (MK_COMB (@lem4538406) (@lem4538405 _107639 _107642 _53776 GEN_PVAR_149 t s d)). Qed.
Lemma lem4538408 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (GEN_PVAR_149 : _107642 -> _107639) (t : _107639 -> Prop) (s : _107642 -> Prop) (d : _107639) : (term1285 _107639 _107642 _53776 GEN_PVAR_149 t s d) = (term1286 _107639 _107642 _53776 GEN_PVAR_149 t s d).
Proof. exact (MK_COMB (@lem4538407 _107639 _107642 _53776 GEN_PVAR_149 t s d) (@lem4538402 _107639 _107642 _53776 GEN_PVAR_149 t s d)). Qed.
Lemma lem4538409 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (GEN_PVAR_149 : _107642 -> _107639) (t : _107639 -> Prop) (s : _107642 -> Prop) (d : _107639) : ((_53776 t s d GEN_PVAR_149) = (term151 _107639 _107642 GEN_PVAR_149 t s d)) = (term1285 _107639 _107642 _53776 GEN_PVAR_149 t s d).
Proof. exact (@lem17784 (_53776 t s d GEN_PVAR_149) (term151 _107639 _107642 GEN_PVAR_149 t s d)). Qed.
Lemma lem4538410 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (GEN_PVAR_149 : _107642 -> _107639) (t : _107639 -> Prop) (s : _107642 -> Prop) (d : _107639) : ((_53776 t s d GEN_PVAR_149) = (term151 _107639 _107642 GEN_PVAR_149 t s d)) = (term1286 _107639 _107642 _53776 GEN_PVAR_149 t s d).
Proof. exact (TRANS (@lem4538409 _107639 _107642 _53776 GEN_PVAR_149 t s d) (@lem4538408 _107639 _107642 _53776 GEN_PVAR_149 t s d)). Qed.
Lemma lem4538411 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (t : _107639 -> Prop) (s : _107642 -> Prop) (d : _107639) : (term295 _107639 _107642 _53776 t s d) = (term1287 _107639 _107642 _53776 t s d).
Proof. exact (fun_ext (fun GEN_PVAR_149 : _107642 -> _107639 => @lem4538410 _107639 _107642 _53776 GEN_PVAR_149 t s d)). Qed.
Lemma lem4538412 {_107639 _107642 : Type'} : (@all (_107642 -> _107639)) = (@all (_107642 -> _107639)).
Proof. exact (eq_refl (@all (_107642 -> _107639))). Qed.
Lemma lem4538413 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (t : _107639 -> Prop) (s : _107642 -> Prop) (d : _107639) : (term296 _107639 _107642 _53776 t s d) = (term1288 _107639 _107642 _53776 t s d).
Proof. exact (MK_COMB (@lem4538412 _107639 _107642) (@lem4538411 _107639 _107642 _53776 t s d)). Qed.
Lemma lem4538414 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (t : _107639 -> Prop) (s : _107642 -> Prop) : (term297 _107639 _107642 _53776 t s) = (term1289 _107639 _107642 _53776 t s).
Proof. exact (fun_ext (fun d : _107639 => @lem4538413 _107639 _107642 _53776 t s d)). Qed.
Lemma lem4538415 {_107639 : Type'} : (@all _107639) = (@all _107639).
Proof. exact (eq_refl (@all _107639)). Qed.
Lemma lem4538416 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (t : _107639 -> Prop) (s : _107642 -> Prop) : (term298 _107639 _107642 _53776 t s) = (term1290 _107639 _107642 _53776 t s).
Proof. exact (MK_COMB (@lem4538415 _107639) (@lem4538414 _107639 _107642 _53776 t s)). Qed.
Lemma lem4538417 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (t : _107639 -> Prop) : (term299 _107639 _107642 _53776 t) = (term1291 _107639 _107642 _53776 t).
Proof. exact (fun_ext (fun s : _107642 -> Prop => @lem4538416 _107639 _107642 _53776 t s)). Qed.
Lemma lem4538418 {_107642 : Type'} : (@all (_107642 -> Prop)) = (@all (_107642 -> Prop)).
Proof. exact (eq_refl (@all (_107642 -> Prop))). Qed.
Lemma lem4538419 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (t : _107639 -> Prop) : (term300 _107639 _107642 _53776 t) = (term1292 _107639 _107642 _53776 t).
Proof. exact (MK_COMB (@lem4538418 _107642) (@lem4538417 _107639 _107642 _53776 t)). Qed.
Lemma lem4538420 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) : (term301 _107639 _107642 _53776) = (term1293 _107639 _107642 _53776).
Proof. exact (fun_ext (fun t : _107639 -> Prop => @lem4538419 _107639 _107642 _53776 t)). Qed.
Lemma lem4538421 {_107639 : Type'} : (@all (_107639 -> Prop)) = (@all (_107639 -> Prop)).
Proof. exact (eq_refl (@all (_107639 -> Prop))). Qed.
Lemma lem4538422 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) : (term302 _107639 _107642 _53776) = (term1294 _107639 _107642 _53776).
Proof. exact (MK_COMB (@lem4538421 _107639) (@lem4538420 _107639 _107642 _53776)). Qed.
Lemma lem4538436 {A : Type'} (P : A -> Prop) (Q : A -> Prop) : (term793 A P Q) = (term794 A P Q).
Proof. exact (EQ_MP (@lem18953 A P Q) (@lem18952 A P Q)). Qed.
Lemma lem4538437 {_107639 _107642 : Type'} (P : type805 _107639 _107642) (Q : type805 _107639 _107642) : (term1295 _107639 _107642 P Q) = (term1296 _107639 _107642 P Q).
Proof. exact (@lem4538436 (_107642 -> _107639) P Q). Qed.
Lemma lem4538438 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (t : _107639 -> Prop) (s : _107642 -> Prop) (d : _107639) : (term1297 _107639 _107642 _53776 t s d) = (term1298 _107639 _107642 _53776 t s d).
Proof. exact (@lem4538437 _107639 _107642 (term1299 _107639 _107642 _53776 t s d) (term1300 _107639 _107642 _53776 t s d)). Qed.
Lemma lem4538439 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (GEN_PVAR_149 : _107642 -> _107639) (t : _107639 -> Prop) (s : _107642 -> Prop) (d : _107639) : (term1301 _107639 _107642 _53776 t s d GEN_PVAR_149) = (term1282 _107639 _107642 _53776 GEN_PVAR_149 t s d).
Proof. exact (eq_refl (term1301 _107639 _107642 _53776 t s d GEN_PVAR_149)). Qed.
Lemma lem4538440 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4538441 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (GEN_PVAR_149 : _107642 -> _107639) (t : _107639 -> Prop) (s : _107642 -> Prop) (d : _107639) : (term1302 _107639 _107642 _53776 t s d GEN_PVAR_149) = (term1284 _107639 _107642 _53776 GEN_PVAR_149 t s d).
Proof. exact (MK_COMB (@lem4538440) (@lem4538439 _107639 _107642 _53776 GEN_PVAR_149 t s d)). Qed.
Lemma lem4538442 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (GEN_PVAR_149 : _107642 -> _107639) (t : _107639 -> Prop) (s : _107642 -> Prop) (d : _107639) : (term1303 _107639 _107642 _53776 t s d GEN_PVAR_149) = (term1279 _107639 _107642 _53776 GEN_PVAR_149 t s d).
Proof. exact (eq_refl (term1303 _107639 _107642 _53776 t s d GEN_PVAR_149)). Qed.
Lemma lem4538443 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (GEN_PVAR_149 : _107642 -> _107639) (t : _107639 -> Prop) (s : _107642 -> Prop) (d : _107639) : (term1304 _107639 _107642 _53776 t s d GEN_PVAR_149) = (term1286 _107639 _107642 _53776 GEN_PVAR_149 t s d).
Proof. exact (MK_COMB (@lem4538441 _107639 _107642 _53776 GEN_PVAR_149 t s d) (@lem4538442 _107639 _107642 _53776 GEN_PVAR_149 t s d)). Qed.
Lemma lem4538444 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (t : _107639 -> Prop) (s : _107642 -> Prop) (d : _107639) : (term1305 _107639 _107642 _53776 t s d) = (term1287 _107639 _107642 _53776 t s d).
Proof. exact (fun_ext (fun GEN_PVAR_149 : _107642 -> _107639 => @lem4538443 _107639 _107642 _53776 GEN_PVAR_149 t s d)). Qed.
Lemma lem4538445 {_107639 _107642 : Type'} : (@all (_107642 -> _107639)) = (@all (_107642 -> _107639)).
Proof. exact (eq_refl (@all (_107642 -> _107639))). Qed.
Lemma lem4538446 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (t : _107639 -> Prop) (s : _107642 -> Prop) (d : _107639) : (term1297 _107639 _107642 _53776 t s d) = (term1288 _107639 _107642 _53776 t s d).
Proof. exact (MK_COMB (@lem4538445 _107639 _107642) (@lem4538444 _107639 _107642 _53776 t s d)). Qed.
Lemma lem4538447 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4538448 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (t : _107639 -> Prop) (s : _107642 -> Prop) (d : _107639) : (term1306 _107639 _107642 _53776 t s d) = (term1307 _107639 _107642 _53776 t s d).
Proof. exact (MK_COMB (@lem4538447) (@lem4538446 _107639 _107642 _53776 t s d)). Qed.
Lemma lem4538449 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (GEN_PVAR_149 : _107642 -> _107639) (t : _107639 -> Prop) (s : _107642 -> Prop) (d : _107639) : (term1301 _107639 _107642 _53776 t s d GEN_PVAR_149) = (term1282 _107639 _107642 _53776 GEN_PVAR_149 t s d).
Proof. exact (eq_refl (term1301 _107639 _107642 _53776 t s d GEN_PVAR_149)). Qed.
Lemma lem4538450 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (t : _107639 -> Prop) (s : _107642 -> Prop) (d : _107639) : (term1308 _107639 _107642 _53776 t s d) = (term1299 _107639 _107642 _53776 t s d).
Proof. exact (fun_ext (fun GEN_PVAR_149 : _107642 -> _107639 => @lem4538449 _107639 _107642 _53776 GEN_PVAR_149 t s d)). Qed.
Lemma lem4538451 {_107639 _107642 : Type'} : (@all (_107642 -> _107639)) = (@all (_107642 -> _107639)).
Proof. exact (eq_refl (@all (_107642 -> _107639))). Qed.
Lemma lem4538452 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (t : _107639 -> Prop) (s : _107642 -> Prop) (d : _107639) : (term1309 _107639 _107642 _53776 t s d) = (term1310 _107639 _107642 _53776 t s d).
Proof. exact (MK_COMB (@lem4538451 _107639 _107642) (@lem4538450 _107639 _107642 _53776 t s d)). Qed.
Lemma lem4538453 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4538454 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (t : _107639 -> Prop) (s : _107642 -> Prop) (d : _107639) : (term1311 _107639 _107642 _53776 t s d) = (term1312 _107639 _107642 _53776 t s d).
Proof. exact (MK_COMB (@lem4538453) (@lem4538452 _107639 _107642 _53776 t s d)). Qed.
Lemma lem4538455 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (GEN_PVAR_149 : _107642 -> _107639) (t : _107639 -> Prop) (s : _107642 -> Prop) (d : _107639) : (term1303 _107639 _107642 _53776 t s d GEN_PVAR_149) = (term1279 _107639 _107642 _53776 GEN_PVAR_149 t s d).
Proof. exact (eq_refl (term1303 _107639 _107642 _53776 t s d GEN_PVAR_149)). Qed.
Lemma lem4538456 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (t : _107639 -> Prop) (s : _107642 -> Prop) (d : _107639) : (term1313 _107639 _107642 _53776 t s d) = (term1300 _107639 _107642 _53776 t s d).
Proof. exact (fun_ext (fun GEN_PVAR_149 : _107642 -> _107639 => @lem4538455 _107639 _107642 _53776 GEN_PVAR_149 t s d)). Qed.
Lemma lem4538457 {_107639 _107642 : Type'} : (@all (_107642 -> _107639)) = (@all (_107642 -> _107639)).
Proof. exact (eq_refl (@all (_107642 -> _107639))). Qed.
Lemma lem4538458 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (t : _107639 -> Prop) (s : _107642 -> Prop) (d : _107639) : (term1314 _107639 _107642 _53776 t s d) = (term1315 _107639 _107642 _53776 t s d).
Proof. exact (MK_COMB (@lem4538457 _107639 _107642) (@lem4538456 _107639 _107642 _53776 t s d)). Qed.
Lemma lem4538459 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (t : _107639 -> Prop) (s : _107642 -> Prop) (d : _107639) : (term1298 _107639 _107642 _53776 t s d) = (term1316 _107639 _107642 _53776 t s d).
Proof. exact (MK_COMB (@lem4538454 _107639 _107642 _53776 t s d) (@lem4538458 _107639 _107642 _53776 t s d)). Qed.
Lemma lem4538460 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (t : _107639 -> Prop) (s : _107642 -> Prop) (d : _107639) : ((term1297 _107639 _107642 _53776 t s d) = (term1298 _107639 _107642 _53776 t s d)) = ((term1288 _107639 _107642 _53776 t s d) = (term1316 _107639 _107642 _53776 t s d)).
Proof. exact (MK_COMB (@lem4538448 _107639 _107642 _53776 t s d) (@lem4538459 _107639 _107642 _53776 t s d)). Qed.
Lemma lem4538461 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (t : _107639 -> Prop) (s : _107642 -> Prop) (d : _107639) : (term1288 _107639 _107642 _53776 t s d) = (term1316 _107639 _107642 _53776 t s d).
Proof. exact (EQ_MP (@lem4538460 _107639 _107642 _53776 t s d) (@lem4538438 _107639 _107642 _53776 t s d)). Qed.
Lemma lem4538582 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (t : _107639 -> Prop) (s : _107642 -> Prop) : (term1289 _107639 _107642 _53776 t s) = (term1317 _107639 _107642 _53776 t s).
Proof. exact (fun_ext (fun d : _107639 => @lem4538461 _107639 _107642 _53776 t s d)). Qed.
Lemma lem4538583 {_107639 : Type'} : (@all _107639) = (@all _107639).
Proof. exact (eq_refl (@all _107639)). Qed.
Lemma lem4538584 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (t : _107639 -> Prop) (s : _107642 -> Prop) : (term1290 _107639 _107642 _53776 t s) = (term1318 _107639 _107642 _53776 t s).
Proof. exact (MK_COMB (@lem4538583 _107639) (@lem4538582 _107639 _107642 _53776 t s)). Qed.
Lemma lem4538586 {A : Type'} (P : A -> Prop) (Q : A -> Prop) : (term793 A P Q) = (term794 A P Q).
Proof. exact (EQ_MP (@lem18953 A P Q) (@lem18952 A P Q)). Qed.
Lemma lem4538587 {_107639 : Type'} (P : _107639 -> Prop) (Q : _107639 -> Prop) : (term793 _107639 P Q) = (term794 _107639 P Q).
Proof. exact (@lem4538586 _107639 P Q). Qed.
Lemma lem4538588 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (t : _107639 -> Prop) (s : _107642 -> Prop) : (term1319 _107639 _107642 _53776 t s) = (term1320 _107639 _107642 _53776 t s).
Proof. exact (@lem4538587 _107639 (term1321 _107639 _107642 _53776 t s) (term1322 _107639 _107642 _53776 t s)). Qed.
Lemma lem4538589 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (t : _107639 -> Prop) (s : _107642 -> Prop) (d : _107639) : (term1323 _107639 _107642 _53776 t s d) = (term1310 _107639 _107642 _53776 t s d).
Proof. exact (eq_refl (term1323 _107639 _107642 _53776 t s d)). Qed.
Lemma lem4538590 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4538591 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (t : _107639 -> Prop) (s : _107642 -> Prop) (d : _107639) : (term1324 _107639 _107642 _53776 t s d) = (term1312 _107639 _107642 _53776 t s d).
Proof. exact (MK_COMB (@lem4538590) (@lem4538589 _107639 _107642 _53776 t s d)). Qed.
Lemma lem4538592 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (t : _107639 -> Prop) (s : _107642 -> Prop) (d : _107639) : (term1325 _107639 _107642 _53776 t s d) = (term1315 _107639 _107642 _53776 t s d).
Proof. exact (eq_refl (term1325 _107639 _107642 _53776 t s d)). Qed.
Lemma lem4538593 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (t : _107639 -> Prop) (s : _107642 -> Prop) (d : _107639) : (term1326 _107639 _107642 _53776 t s d) = (term1316 _107639 _107642 _53776 t s d).
Proof. exact (MK_COMB (@lem4538591 _107639 _107642 _53776 t s d) (@lem4538592 _107639 _107642 _53776 t s d)). Qed.
Lemma lem4538594 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (t : _107639 -> Prop) (s : _107642 -> Prop) : (term1327 _107639 _107642 _53776 t s) = (term1317 _107639 _107642 _53776 t s).
Proof. exact (fun_ext (fun d : _107639 => @lem4538593 _107639 _107642 _53776 t s d)). Qed.
Lemma lem4538595 {_107639 : Type'} : (@all _107639) = (@all _107639).
Proof. exact (eq_refl (@all _107639)). Qed.
Lemma lem4538596 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (t : _107639 -> Prop) (s : _107642 -> Prop) : (term1319 _107639 _107642 _53776 t s) = (term1318 _107639 _107642 _53776 t s).
Proof. exact (MK_COMB (@lem4538595 _107639) (@lem4538594 _107639 _107642 _53776 t s)). Qed.
Lemma lem4538597 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4538598 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (t : _107639 -> Prop) (s : _107642 -> Prop) : (term1328 _107639 _107642 _53776 t s) = (term1329 _107639 _107642 _53776 t s).
Proof. exact (MK_COMB (@lem4538597) (@lem4538596 _107639 _107642 _53776 t s)). Qed.
Lemma lem4538599 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (t : _107639 -> Prop) (s : _107642 -> Prop) (d : _107639) : (term1323 _107639 _107642 _53776 t s d) = (term1310 _107639 _107642 _53776 t s d).
Proof. exact (eq_refl (term1323 _107639 _107642 _53776 t s d)). Qed.
Lemma lem4538600 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (t : _107639 -> Prop) (s : _107642 -> Prop) : (term1330 _107639 _107642 _53776 t s) = (term1321 _107639 _107642 _53776 t s).
Proof. exact (fun_ext (fun d : _107639 => @lem4538599 _107639 _107642 _53776 t s d)). Qed.
Lemma lem4538601 {_107639 : Type'} : (@all _107639) = (@all _107639).
Proof. exact (eq_refl (@all _107639)). Qed.
Lemma lem4538602 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (t : _107639 -> Prop) (s : _107642 -> Prop) : (term1331 _107639 _107642 _53776 t s) = (term1332 _107639 _107642 _53776 t s).
Proof. exact (MK_COMB (@lem4538601 _107639) (@lem4538600 _107639 _107642 _53776 t s)). Qed.
Lemma lem4538603 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4538604 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (t : _107639 -> Prop) (s : _107642 -> Prop) : (term1333 _107639 _107642 _53776 t s) = (term1334 _107639 _107642 _53776 t s).
Proof. exact (MK_COMB (@lem4538603) (@lem4538602 _107639 _107642 _53776 t s)). Qed.
Lemma lem4538605 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (t : _107639 -> Prop) (s : _107642 -> Prop) (d : _107639) : (term1325 _107639 _107642 _53776 t s d) = (term1315 _107639 _107642 _53776 t s d).
Proof. exact (eq_refl (term1325 _107639 _107642 _53776 t s d)). Qed.
Lemma lem4538606 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (t : _107639 -> Prop) (s : _107642 -> Prop) : (term1335 _107639 _107642 _53776 t s) = (term1322 _107639 _107642 _53776 t s).
Proof. exact (fun_ext (fun d : _107639 => @lem4538605 _107639 _107642 _53776 t s d)). Qed.
Lemma lem4538607 {_107639 : Type'} : (@all _107639) = (@all _107639).
Proof. exact (eq_refl (@all _107639)). Qed.
Lemma lem4538608 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (t : _107639 -> Prop) (s : _107642 -> Prop) : (term1336 _107639 _107642 _53776 t s) = (term1337 _107639 _107642 _53776 t s).
Proof. exact (MK_COMB (@lem4538607 _107639) (@lem4538606 _107639 _107642 _53776 t s)). Qed.
Lemma lem4538609 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (t : _107639 -> Prop) (s : _107642 -> Prop) : (term1320 _107639 _107642 _53776 t s) = (term1338 _107639 _107642 _53776 t s).
Proof. exact (MK_COMB (@lem4538604 _107639 _107642 _53776 t s) (@lem4538608 _107639 _107642 _53776 t s)). Qed.
Lemma lem4538610 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (t : _107639 -> Prop) (s : _107642 -> Prop) : ((term1319 _107639 _107642 _53776 t s) = (term1320 _107639 _107642 _53776 t s)) = ((term1318 _107639 _107642 _53776 t s) = (term1338 _107639 _107642 _53776 t s)).
Proof. exact (MK_COMB (@lem4538598 _107639 _107642 _53776 t s) (@lem4538609 _107639 _107642 _53776 t s)). Qed.
Lemma lem4538611 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (t : _107639 -> Prop) (s : _107642 -> Prop) : (term1318 _107639 _107642 _53776 t s) = (term1338 _107639 _107642 _53776 t s).
Proof. exact (EQ_MP (@lem4538610 _107639 _107642 _53776 t s) (@lem4538588 _107639 _107642 _53776 t s)). Qed.
Lemma lem4538740 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (t : _107639 -> Prop) (s : _107642 -> Prop) : (term1290 _107639 _107642 _53776 t s) = (term1338 _107639 _107642 _53776 t s).
Proof. exact (TRANS (@lem4538584 _107639 _107642 _53776 t s) (@lem4538611 _107639 _107642 _53776 t s)). Qed.
Lemma lem4538741 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (t : _107639 -> Prop) : (term1291 _107639 _107642 _53776 t) = (term1339 _107639 _107642 _53776 t).
Proof. exact (fun_ext (fun s : _107642 -> Prop => @lem4538740 _107639 _107642 _53776 t s)). Qed.
Lemma lem4538742 {_107642 : Type'} : (@all (_107642 -> Prop)) = (@all (_107642 -> Prop)).
Proof. exact (eq_refl (@all (_107642 -> Prop))). Qed.
Lemma lem4538743 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (t : _107639 -> Prop) : (term1292 _107639 _107642 _53776 t) = (term1340 _107639 _107642 _53776 t).
Proof. exact (MK_COMB (@lem4538742 _107642) (@lem4538741 _107639 _107642 _53776 t)). Qed.
Lemma lem4538745 {A : Type'} (P : A -> Prop) (Q : A -> Prop) : (term793 A P Q) = (term794 A P Q).
Proof. exact (EQ_MP (@lem18953 A P Q) (@lem18952 A P Q)). Qed.
Lemma lem4538746 {_107642 : Type'} (P : type686 _107642) (Q : type686 _107642) : (term843 _107642 P Q) = (term844 _107642 P Q).
Proof. exact (@lem4538745 (_107642 -> Prop) P Q). Qed.
Lemma lem4538747 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (t : _107639 -> Prop) : (term1341 _107639 _107642 _53776 t) = (term1342 _107639 _107642 _53776 t).
Proof. exact (@lem4538746 _107642 (term1343 _107639 _107642 _53776 t) (term1344 _107639 _107642 _53776 t)). Qed.
Lemma lem4538748 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (t : _107639 -> Prop) (s : _107642 -> Prop) : (term1345 _107639 _107642 _53776 t s) = (term1332 _107639 _107642 _53776 t s).
Proof. exact (eq_refl (term1345 _107639 _107642 _53776 t s)). Qed.
Lemma lem4538749 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4538750 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (t : _107639 -> Prop) (s : _107642 -> Prop) : (term1346 _107639 _107642 _53776 t s) = (term1334 _107639 _107642 _53776 t s).
Proof. exact (MK_COMB (@lem4538749) (@lem4538748 _107639 _107642 _53776 t s)). Qed.
Lemma lem4538751 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (t : _107639 -> Prop) (s : _107642 -> Prop) : (term1347 _107639 _107642 _53776 t s) = (term1337 _107639 _107642 _53776 t s).
Proof. exact (eq_refl (term1347 _107639 _107642 _53776 t s)). Qed.
Lemma lem4538752 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (t : _107639 -> Prop) (s : _107642 -> Prop) : (term1348 _107639 _107642 _53776 t s) = (term1338 _107639 _107642 _53776 t s).
Proof. exact (MK_COMB (@lem4538750 _107639 _107642 _53776 t s) (@lem4538751 _107639 _107642 _53776 t s)). Qed.
Lemma lem4538753 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (t : _107639 -> Prop) : (term1349 _107639 _107642 _53776 t) = (term1339 _107639 _107642 _53776 t).
Proof. exact (fun_ext (fun s : _107642 -> Prop => @lem4538752 _107639 _107642 _53776 t s)). Qed.
Lemma lem4538754 {_107642 : Type'} : (@all (_107642 -> Prop)) = (@all (_107642 -> Prop)).
Proof. exact (eq_refl (@all (_107642 -> Prop))). Qed.
Lemma lem4538755 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (t : _107639 -> Prop) : (term1341 _107639 _107642 _53776 t) = (term1340 _107639 _107642 _53776 t).
Proof. exact (MK_COMB (@lem4538754 _107642) (@lem4538753 _107639 _107642 _53776 t)). Qed.
Lemma lem4538756 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4538757 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (t : _107639 -> Prop) : (term1350 _107639 _107642 _53776 t) = (term1351 _107639 _107642 _53776 t).
Proof. exact (MK_COMB (@lem4538756) (@lem4538755 _107639 _107642 _53776 t)). Qed.
Lemma lem4538758 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (t : _107639 -> Prop) (s : _107642 -> Prop) : (term1345 _107639 _107642 _53776 t s) = (term1332 _107639 _107642 _53776 t s).
Proof. exact (eq_refl (term1345 _107639 _107642 _53776 t s)). Qed.
Lemma lem4538759 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (t : _107639 -> Prop) : (term1352 _107639 _107642 _53776 t) = (term1343 _107639 _107642 _53776 t).
Proof. exact (fun_ext (fun s : _107642 -> Prop => @lem4538758 _107639 _107642 _53776 t s)). Qed.
Lemma lem4538760 {_107642 : Type'} : (@all (_107642 -> Prop)) = (@all (_107642 -> Prop)).
Proof. exact (eq_refl (@all (_107642 -> Prop))). Qed.
Lemma lem4538761 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (t : _107639 -> Prop) : (term1353 _107639 _107642 _53776 t) = (term1354 _107639 _107642 _53776 t).
Proof. exact (MK_COMB (@lem4538760 _107642) (@lem4538759 _107639 _107642 _53776 t)). Qed.
Lemma lem4538762 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4538763 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (t : _107639 -> Prop) : (term1355 _107639 _107642 _53776 t) = (term1356 _107639 _107642 _53776 t).
Proof. exact (MK_COMB (@lem4538762) (@lem4538761 _107639 _107642 _53776 t)). Qed.
Lemma lem4538764 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (t : _107639 -> Prop) (s : _107642 -> Prop) : (term1347 _107639 _107642 _53776 t s) = (term1337 _107639 _107642 _53776 t s).
Proof. exact (eq_refl (term1347 _107639 _107642 _53776 t s)). Qed.
Lemma lem4538765 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (t : _107639 -> Prop) : (term1357 _107639 _107642 _53776 t) = (term1344 _107639 _107642 _53776 t).
Proof. exact (fun_ext (fun s : _107642 -> Prop => @lem4538764 _107639 _107642 _53776 t s)). Qed.
Lemma lem4538766 {_107642 : Type'} : (@all (_107642 -> Prop)) = (@all (_107642 -> Prop)).
Proof. exact (eq_refl (@all (_107642 -> Prop))). Qed.
Lemma lem4538767 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (t : _107639 -> Prop) : (term1358 _107639 _107642 _53776 t) = (term1359 _107639 _107642 _53776 t).
Proof. exact (MK_COMB (@lem4538766 _107642) (@lem4538765 _107639 _107642 _53776 t)). Qed.
Lemma lem4538768 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (t : _107639 -> Prop) : (term1342 _107639 _107642 _53776 t) = (term1360 _107639 _107642 _53776 t).
Proof. exact (MK_COMB (@lem4538763 _107639 _107642 _53776 t) (@lem4538767 _107639 _107642 _53776 t)). Qed.
Lemma lem4538769 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (t : _107639 -> Prop) : ((term1341 _107639 _107642 _53776 t) = (term1342 _107639 _107642 _53776 t)) = ((term1340 _107639 _107642 _53776 t) = (term1360 _107639 _107642 _53776 t)).
Proof. exact (MK_COMB (@lem4538757 _107639 _107642 _53776 t) (@lem4538768 _107639 _107642 _53776 t)). Qed.
Lemma lem4538770 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (t : _107639 -> Prop) : (term1340 _107639 _107642 _53776 t) = (term1360 _107639 _107642 _53776 t).
Proof. exact (EQ_MP (@lem4538769 _107639 _107642 _53776 t) (@lem4538747 _107639 _107642 _53776 t)). Qed.
Lemma lem4538907 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (t : _107639 -> Prop) : (term1292 _107639 _107642 _53776 t) = (term1360 _107639 _107642 _53776 t).
Proof. exact (TRANS (@lem4538743 _107639 _107642 _53776 t) (@lem4538770 _107639 _107642 _53776 t)). Qed.
Lemma lem4538908 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) : (term1293 _107639 _107642 _53776) = (term1361 _107639 _107642 _53776).
Proof. exact (fun_ext (fun t : _107639 -> Prop => @lem4538907 _107639 _107642 _53776 t)). Qed.
Lemma lem4538909 {_107639 : Type'} : (@all (_107639 -> Prop)) = (@all (_107639 -> Prop)).
Proof. exact (eq_refl (@all (_107639 -> Prop))). Qed.
Lemma lem4538910 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) : (term1294 _107639 _107642 _53776) = (term1362 _107639 _107642 _53776).
Proof. exact (MK_COMB (@lem4538909 _107639) (@lem4538908 _107639 _107642 _53776)). Qed.
Lemma lem4538912 {A : Type'} (P : A -> Prop) (Q : A -> Prop) : (term793 A P Q) = (term794 A P Q).
Proof. exact (EQ_MP (@lem18953 A P Q) (@lem18952 A P Q)). Qed.
Lemma lem4538913 {_107639 : Type'} (P : type686 _107639) (Q : type686 _107639) : (term843 _107639 P Q) = (term844 _107639 P Q).
Proof. exact (@lem4538912 (_107639 -> Prop) P Q). Qed.
Lemma lem4538914 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) : (term1363 _107639 _107642 _53776) = (term1364 _107639 _107642 _53776).
Proof. exact (@lem4538913 _107639 (term1365 _107639 _107642 _53776) (term1366 _107639 _107642 _53776)). Qed.
Lemma lem4538915 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (t : _107639 -> Prop) : (term1367 _107639 _107642 _53776 t) = (term1354 _107639 _107642 _53776 t).
Proof. exact (eq_refl (term1367 _107639 _107642 _53776 t)). Qed.
Lemma lem4538916 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4538917 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (t : _107639 -> Prop) : (term1368 _107639 _107642 _53776 t) = (term1356 _107639 _107642 _53776 t).
Proof. exact (MK_COMB (@lem4538916) (@lem4538915 _107639 _107642 _53776 t)). Qed.
Lemma lem4538918 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (t : _107639 -> Prop) : (term1369 _107639 _107642 _53776 t) = (term1359 _107639 _107642 _53776 t).
Proof. exact (eq_refl (term1369 _107639 _107642 _53776 t)). Qed.
Lemma lem4538919 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (t : _107639 -> Prop) : (term1370 _107639 _107642 _53776 t) = (term1360 _107639 _107642 _53776 t).
Proof. exact (MK_COMB (@lem4538917 _107639 _107642 _53776 t) (@lem4538918 _107639 _107642 _53776 t)). Qed.
Lemma lem4538920 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) : (term1371 _107639 _107642 _53776) = (term1361 _107639 _107642 _53776).
Proof. exact (fun_ext (fun t : _107639 -> Prop => @lem4538919 _107639 _107642 _53776 t)). Qed.
Lemma lem4538921 {_107639 : Type'} : (@all (_107639 -> Prop)) = (@all (_107639 -> Prop)).
Proof. exact (eq_refl (@all (_107639 -> Prop))). Qed.
Lemma lem4538922 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) : (term1363 _107639 _107642 _53776) = (term1362 _107639 _107642 _53776).
Proof. exact (MK_COMB (@lem4538921 _107639) (@lem4538920 _107639 _107642 _53776)). Qed.
Lemma lem4538923 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4538924 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) : (term1372 _107639 _107642 _53776) = (term1373 _107639 _107642 _53776).
Proof. exact (MK_COMB (@lem4538923) (@lem4538922 _107639 _107642 _53776)). Qed.
Lemma lem4538925 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (t : _107639 -> Prop) : (term1367 _107639 _107642 _53776 t) = (term1354 _107639 _107642 _53776 t).
Proof. exact (eq_refl (term1367 _107639 _107642 _53776 t)). Qed.
Lemma lem4538926 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) : (term1374 _107639 _107642 _53776) = (term1365 _107639 _107642 _53776).
Proof. exact (fun_ext (fun t : _107639 -> Prop => @lem4538925 _107639 _107642 _53776 t)). Qed.
Lemma lem4538927 {_107639 : Type'} : (@all (_107639 -> Prop)) = (@all (_107639 -> Prop)).
Proof. exact (eq_refl (@all (_107639 -> Prop))). Qed.
Lemma lem4538928 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) : (term1375 _107639 _107642 _53776) = (term1376 _107639 _107642 _53776).
Proof. exact (MK_COMB (@lem4538927 _107639) (@lem4538926 _107639 _107642 _53776)). Qed.
Lemma lem4538929 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4538930 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) : (term1377 _107639 _107642 _53776) = (term1378 _107639 _107642 _53776).
Proof. exact (MK_COMB (@lem4538929) (@lem4538928 _107639 _107642 _53776)). Qed.
Lemma lem4538931 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (t : _107639 -> Prop) : (term1369 _107639 _107642 _53776 t) = (term1359 _107639 _107642 _53776 t).
Proof. exact (eq_refl (term1369 _107639 _107642 _53776 t)). Qed.
Lemma lem4538932 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) : (term1379 _107639 _107642 _53776) = (term1366 _107639 _107642 _53776).
Proof. exact (fun_ext (fun t : _107639 -> Prop => @lem4538931 _107639 _107642 _53776 t)). Qed.
Lemma lem4538933 {_107639 : Type'} : (@all (_107639 -> Prop)) = (@all (_107639 -> Prop)).
Proof. exact (eq_refl (@all (_107639 -> Prop))). Qed.
Lemma lem4538934 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) : (term1380 _107639 _107642 _53776) = (term1381 _107639 _107642 _53776).
Proof. exact (MK_COMB (@lem4538933 _107639) (@lem4538932 _107639 _107642 _53776)). Qed.
Lemma lem4538935 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) : (term1364 _107639 _107642 _53776) = (term1382 _107639 _107642 _53776).
Proof. exact (MK_COMB (@lem4538930 _107639 _107642 _53776) (@lem4538934 _107639 _107642 _53776)). Qed.
Lemma lem4538936 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) : ((term1363 _107639 _107642 _53776) = (term1364 _107639 _107642 _53776)) = ((term1362 _107639 _107642 _53776) = (term1382 _107639 _107642 _53776)).
Proof. exact (MK_COMB (@lem4538924 _107639 _107642 _53776) (@lem4538935 _107639 _107642 _53776)). Qed.
Lemma lem4538937 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) : (term1362 _107639 _107642 _53776) = (term1382 _107639 _107642 _53776).
Proof. exact (EQ_MP (@lem4538936 _107639 _107642 _53776) (@lem4538914 _107639 _107642 _53776)). Qed.
Lemma lem4539082 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) : (term1294 _107639 _107642 _53776) = (term1382 _107639 _107642 _53776).
Proof. exact (TRANS (@lem4538910 _107639 _107642 _53776) (@lem4538937 _107639 _107642 _53776)). Qed.
Lemma lem4539084 {A : Type'} (P : Prop) (Q : A -> Prop) : (term889 A P Q) = (term890 A P Q).
Proof. exact (EQ_MP (@lem18911 A P Q) (@lem18910 A P Q)). Qed.
Lemma lem4539085 {_107639 _107642 : Type'} (P : Prop) (Q : type805 _107639 _107642) : (term1383 _107639 _107642 P Q) = (term1384 _107639 _107642 P Q).
Proof. exact (@lem4539084 (_107642 -> _107639) P Q). Qed.
Lemma lem4539086 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (GEN_PVAR_149 : _107642 -> _107639) (t : _107639 -> Prop) (s : _107642 -> Prop) (d : _107639) : (term1385 _107639 _107642 _53776 GEN_PVAR_149 t s d) = (term1386 _107639 _107642 _53776 GEN_PVAR_149 t s d).
Proof. exact (@lem4539085 _107639 _107642 (term1387 _107639 _107642 _53776 t s d GEN_PVAR_149) (term150 _107639 _107642 GEN_PVAR_149 t s d)). Qed.
Lemma lem4539087 {_107639 _107642 : Type'} (GEN_PVAR_149 : _107642 -> _107639) (t : _107639 -> Prop) (s : _107642 -> Prop) (d : _107639) (f : _107642 -> _107639) : (term1272 _107639 _107642 GEN_PVAR_149 t s d f) = (term149 _107639 _107642 GEN_PVAR_149 t s d f).
Proof. exact (eq_refl (term1272 _107639 _107642 GEN_PVAR_149 t s d f)). Qed.
Lemma lem4539088 {_107639 _107642 : Type'} (GEN_PVAR_149 : _107642 -> _107639) (t : _107639 -> Prop) (s : _107642 -> Prop) (d : _107639) : (term1388 _107639 _107642 GEN_PVAR_149 t s d) = (term150 _107639 _107642 GEN_PVAR_149 t s d).
Proof. exact (fun_ext (fun f : _107642 -> _107639 => @lem4539087 _107639 _107642 GEN_PVAR_149 t s d f)). Qed.
Lemma lem4539089 {_107639 _107642 : Type'} : (@ex (_107642 -> _107639)) = (@ex (_107642 -> _107639)).
Proof. exact (eq_refl (@ex (_107642 -> _107639))). Qed.
Lemma lem4539090 {_107639 _107642 : Type'} (GEN_PVAR_149 : _107642 -> _107639) (t : _107639 -> Prop) (s : _107642 -> Prop) (d : _107639) : (term1389 _107639 _107642 GEN_PVAR_149 t s d) = (term151 _107639 _107642 GEN_PVAR_149 t s d).
Proof. exact (MK_COMB (@lem4539089 _107639 _107642) (@lem4539088 _107639 _107642 GEN_PVAR_149 t s d)). Qed.
Lemma lem4539091 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (t : _107639 -> Prop) (s : _107642 -> Prop) (d : _107639) (GEN_PVAR_149 : _107642 -> _107639) : (term1278 _107639 _107642 _53776 t s d GEN_PVAR_149) = (term1278 _107639 _107642 _53776 t s d GEN_PVAR_149).
Proof. exact (eq_refl (term1278 _107639 _107642 _53776 t s d GEN_PVAR_149)). Qed.
Lemma lem4539092 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (GEN_PVAR_149 : _107642 -> _107639) (t : _107639 -> Prop) (s : _107642 -> Prop) (d : _107639) : (term1385 _107639 _107642 _53776 GEN_PVAR_149 t s d) = (term1279 _107639 _107642 _53776 GEN_PVAR_149 t s d).
Proof. exact (MK_COMB (@lem4539091 _107639 _107642 _53776 t s d GEN_PVAR_149) (@lem4539090 _107639 _107642 GEN_PVAR_149 t s d)). Qed.
Lemma lem4539093 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4539094 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (GEN_PVAR_149 : _107642 -> _107639) (t : _107639 -> Prop) (s : _107642 -> Prop) (d : _107639) : (term1390 _107639 _107642 _53776 GEN_PVAR_149 t s d) = (term1391 _107639 _107642 _53776 GEN_PVAR_149 t s d).
Proof. exact (MK_COMB (@lem4539093) (@lem4539092 _107639 _107642 _53776 GEN_PVAR_149 t s d)). Qed.
Lemma lem4539095 {_107639 _107642 : Type'} (GEN_PVAR_149 : _107642 -> _107639) (t : _107639 -> Prop) (s : _107642 -> Prop) (d : _107639) (f : _107642 -> _107639) : (term1272 _107639 _107642 GEN_PVAR_149 t s d f) = (term149 _107639 _107642 GEN_PVAR_149 t s d f).
Proof. exact (eq_refl (term1272 _107639 _107642 GEN_PVAR_149 t s d f)). Qed.
Lemma lem4539096 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (t : _107639 -> Prop) (s : _107642 -> Prop) (d : _107639) (GEN_PVAR_149 : _107642 -> _107639) : (term1278 _107639 _107642 _53776 t s d GEN_PVAR_149) = (term1278 _107639 _107642 _53776 t s d GEN_PVAR_149).
Proof. exact (eq_refl (term1278 _107639 _107642 _53776 t s d GEN_PVAR_149)). Qed.
Lemma lem4539097 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (GEN_PVAR_149 : _107642 -> _107639) (t : _107639 -> Prop) (s : _107642 -> Prop) (d : _107639) (f : _107642 -> _107639) : (term1392 _107639 _107642 _53776 GEN_PVAR_149 t s d f) = (term1393 _107639 _107642 _53776 GEN_PVAR_149 t s d f).
Proof. exact (MK_COMB (@lem4539096 _107639 _107642 _53776 t s d GEN_PVAR_149) (@lem4539095 _107639 _107642 GEN_PVAR_149 t s d f)). Qed.
Lemma lem4539098 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (GEN_PVAR_149 : _107642 -> _107639) (t : _107639 -> Prop) (s : _107642 -> Prop) (d : _107639) : (term1394 _107639 _107642 _53776 GEN_PVAR_149 t s d) = (term1395 _107639 _107642 _53776 GEN_PVAR_149 t s d).
Proof. exact (fun_ext (fun f : _107642 -> _107639 => @lem4539097 _107639 _107642 _53776 GEN_PVAR_149 t s d f)). Qed.
Lemma lem4539099 {_107639 _107642 : Type'} : (@ex (_107642 -> _107639)) = (@ex (_107642 -> _107639)).
Proof. exact (eq_refl (@ex (_107642 -> _107639))). Qed.
Lemma lem4539100 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (GEN_PVAR_149 : _107642 -> _107639) (t : _107639 -> Prop) (s : _107642 -> Prop) (d : _107639) : (term1386 _107639 _107642 _53776 GEN_PVAR_149 t s d) = (term1396 _107639 _107642 _53776 GEN_PVAR_149 t s d).
Proof. exact (MK_COMB (@lem4539099 _107639 _107642) (@lem4539098 _107639 _107642 _53776 GEN_PVAR_149 t s d)). Qed.
Lemma lem4539101 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (GEN_PVAR_149 : _107642 -> _107639) (t : _107639 -> Prop) (s : _107642 -> Prop) (d : _107639) : ((term1385 _107639 _107642 _53776 GEN_PVAR_149 t s d) = (term1386 _107639 _107642 _53776 GEN_PVAR_149 t s d)) = ((term1279 _107639 _107642 _53776 GEN_PVAR_149 t s d) = (term1396 _107639 _107642 _53776 GEN_PVAR_149 t s d)).
Proof. exact (MK_COMB (@lem4539094 _107639 _107642 _53776 GEN_PVAR_149 t s d) (@lem4539100 _107639 _107642 _53776 GEN_PVAR_149 t s d)). Qed.
Lemma lem4539102 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (GEN_PVAR_149 : _107642 -> _107639) (t : _107639 -> Prop) (s : _107642 -> Prop) (d : _107639) : (term1279 _107639 _107642 _53776 GEN_PVAR_149 t s d) = (term1396 _107639 _107642 _53776 GEN_PVAR_149 t s d).
Proof. exact (EQ_MP (@lem4539101 _107639 _107642 _53776 GEN_PVAR_149 t s d) (@lem4539086 _107639 _107642 _53776 GEN_PVAR_149 t s d)). Qed.
Lemma lem4539103 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (t : _107639 -> Prop) (s : _107642 -> Prop) (d : _107639) : (term1300 _107639 _107642 _53776 t s d) = (term1397 _107639 _107642 _53776 t s d).
Proof. exact (fun_ext (fun GEN_PVAR_149 : _107642 -> _107639 => @lem4539102 _107639 _107642 _53776 GEN_PVAR_149 t s d)). Qed.
Lemma lem4539104 {_107639 _107642 : Type'} : (@all (_107642 -> _107639)) = (@all (_107642 -> _107639)).
Proof. exact (eq_refl (@all (_107642 -> _107639))). Qed.
Lemma lem4539105 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (t : _107639 -> Prop) (s : _107642 -> Prop) (d : _107639) : (term1315 _107639 _107642 _53776 t s d) = (term1398 _107639 _107642 _53776 t s d).
Proof. exact (MK_COMB (@lem4539104 _107639 _107642) (@lem4539103 _107639 _107642 _53776 t s d)). Qed.
Lemma lem4539107 {A B : Type'} (P : type1413 A B) : (term907 A B P) = (term908 A B P).
Proof. exact (EQ_MP (@lem18899 A B P) (@lem18898 A B P)). Qed.
Lemma lem4539108 {_107639 _107642 : Type'} (P : type786 _107639 _107642) : (term1399 _107639 _107642 P) = (term1400 _107639 _107642 P).
Proof. exact (@lem4539107 (_107642 -> _107639) (_107642 -> _107639) P). Qed.
Lemma lem4539109 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (t : _107639 -> Prop) (s : _107642 -> Prop) (d : _107639) : (term1401 _107639 _107642 _53776 t s d) = (term1402 _107639 _107642 _53776 t s d).
Proof. exact (@lem4539108 _107639 _107642 (term1403 _107639 _107642 _53776 t s d)). Qed.
Lemma lem4539110 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (GEN_PVAR_149 : _107642 -> _107639) (t : _107639 -> Prop) (s : _107642 -> Prop) (d : _107639) : (term1404 _107639 _107642 _53776 t s d GEN_PVAR_149) = (term1395 _107639 _107642 _53776 GEN_PVAR_149 t s d).
Proof. exact (eq_refl (term1404 _107639 _107642 _53776 t s d GEN_PVAR_149)). Qed.
Lemma lem4539111 {_107639 _107642 : Type'} (f : _107642 -> _107639) : f = f.
Proof. exact (eq_refl f). Qed.
Lemma lem4539112 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (GEN_PVAR_149 : _107642 -> _107639) (t : _107639 -> Prop) (s : _107642 -> Prop) (d : _107639) (f : _107642 -> _107639) : (term1405 _107639 _107642 _53776 t s d GEN_PVAR_149 f) = (term1406 _107639 _107642 _53776 GEN_PVAR_149 t s d f).
Proof. exact (MK_COMB (@lem4539110 _107639 _107642 _53776 GEN_PVAR_149 t s d) (@lem4539111 _107639 _107642 f)). Qed.
Lemma lem4539113 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (GEN_PVAR_149 : _107642 -> _107639) (t : _107639 -> Prop) (s : _107642 -> Prop) (d : _107639) (f : _107642 -> _107639) : (term1406 _107639 _107642 _53776 GEN_PVAR_149 t s d f) = (term1393 _107639 _107642 _53776 GEN_PVAR_149 t s d f).
Proof. exact (eq_refl (term1406 _107639 _107642 _53776 GEN_PVAR_149 t s d f)). Qed.
Lemma lem4539114 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (GEN_PVAR_149 : _107642 -> _107639) (t : _107639 -> Prop) (s : _107642 -> Prop) (d : _107639) (f : _107642 -> _107639) : (term1405 _107639 _107642 _53776 t s d GEN_PVAR_149 f) = (term1393 _107639 _107642 _53776 GEN_PVAR_149 t s d f).
Proof. exact (TRANS (@lem4539112 _107639 _107642 _53776 GEN_PVAR_149 t s d f) (@lem4539113 _107639 _107642 _53776 GEN_PVAR_149 t s d f)). Qed.
Lemma lem4539115 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (GEN_PVAR_149 : _107642 -> _107639) (t : _107639 -> Prop) (s : _107642 -> Prop) (d : _107639) : (term1407 _107639 _107642 _53776 t s d GEN_PVAR_149) = (term1395 _107639 _107642 _53776 GEN_PVAR_149 t s d).
Proof. exact (fun_ext (fun f : _107642 -> _107639 => @lem4539114 _107639 _107642 _53776 GEN_PVAR_149 t s d f)). Qed.
Lemma lem4539116 {_107639 _107642 : Type'} : (@ex (_107642 -> _107639)) = (@ex (_107642 -> _107639)).
Proof. exact (eq_refl (@ex (_107642 -> _107639))). Qed.
Lemma lem4539117 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (GEN_PVAR_149 : _107642 -> _107639) (t : _107639 -> Prop) (s : _107642 -> Prop) (d : _107639) : (term1408 _107639 _107642 _53776 t s d GEN_PVAR_149) = (term1396 _107639 _107642 _53776 GEN_PVAR_149 t s d).
Proof. exact (MK_COMB (@lem4539116 _107639 _107642) (@lem4539115 _107639 _107642 _53776 GEN_PVAR_149 t s d)). Qed.
Lemma lem4539118 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (t : _107639 -> Prop) (s : _107642 -> Prop) (d : _107639) : (term1409 _107639 _107642 _53776 t s d) = (term1397 _107639 _107642 _53776 t s d).
Proof. exact (fun_ext (fun GEN_PVAR_149 : _107642 -> _107639 => @lem4539117 _107639 _107642 _53776 GEN_PVAR_149 t s d)). Qed.
Lemma lem4539119 {_107639 _107642 : Type'} : (@all (_107642 -> _107639)) = (@all (_107642 -> _107639)).
Proof. exact (eq_refl (@all (_107642 -> _107639))). Qed.
Lemma lem4539120 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (t : _107639 -> Prop) (s : _107642 -> Prop) (d : _107639) : (term1401 _107639 _107642 _53776 t s d) = (term1398 _107639 _107642 _53776 t s d).
Proof. exact (MK_COMB (@lem4539119 _107639 _107642) (@lem4539118 _107639 _107642 _53776 t s d)). Qed.
Lemma lem4539121 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4539122 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (t : _107639 -> Prop) (s : _107642 -> Prop) (d : _107639) : (term1410 _107639 _107642 _53776 t s d) = (term1411 _107639 _107642 _53776 t s d).
Proof. exact (MK_COMB (@lem4539121) (@lem4539120 _107639 _107642 _53776 t s d)). Qed.
Lemma lem4539123 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (GEN_PVAR_149 : _107642 -> _107639) (t : _107639 -> Prop) (s : _107642 -> Prop) (d : _107639) : (term1404 _107639 _107642 _53776 t s d GEN_PVAR_149) = (term1395 _107639 _107642 _53776 GEN_PVAR_149 t s d).
Proof. exact (eq_refl (term1404 _107639 _107642 _53776 t s d GEN_PVAR_149)). Qed.
Lemma lem4539124 {_107639 _107642 : Type'} (f : type796 _107639 _107642) (GEN_PVAR_149 : _107642 -> _107639) : (f GEN_PVAR_149) = (f GEN_PVAR_149).
Proof. exact (eq_refl (f GEN_PVAR_149)). Qed.
Lemma lem4539125 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (t : _107639 -> Prop) (s : _107642 -> Prop) (d : _107639) (f : type796 _107639 _107642) (GEN_PVAR_149 : _107642 -> _107639) : (term1412 _107639 _107642 _53776 t s d f GEN_PVAR_149) = (term1413 _107639 _107642 _53776 t s d f GEN_PVAR_149).
Proof. exact (MK_COMB (@lem4539123 _107639 _107642 _53776 GEN_PVAR_149 t s d) (@lem4539124 _107639 _107642 f GEN_PVAR_149)). Qed.
Lemma lem4539126 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (t : _107639 -> Prop) (s : _107642 -> Prop) (d : _107639) (f : type796 _107639 _107642) (GEN_PVAR_149 : _107642 -> _107639) : (term1413 _107639 _107642 _53776 t s d f GEN_PVAR_149) = (term1414 _107639 _107642 _53776 t s d f GEN_PVAR_149).
Proof. exact (eq_refl (term1413 _107639 _107642 _53776 t s d f GEN_PVAR_149)). Qed.
Lemma lem4539127 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (t : _107639 -> Prop) (s : _107642 -> Prop) (d : _107639) (f : type796 _107639 _107642) (GEN_PVAR_149 : _107642 -> _107639) : (term1412 _107639 _107642 _53776 t s d f GEN_PVAR_149) = (term1414 _107639 _107642 _53776 t s d f GEN_PVAR_149).
Proof. exact (TRANS (@lem4539125 _107639 _107642 _53776 t s d f GEN_PVAR_149) (@lem4539126 _107639 _107642 _53776 t s d f GEN_PVAR_149)). Qed.
Lemma lem4539128 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (t : _107639 -> Prop) (s : _107642 -> Prop) (d : _107639) (f : type796 _107639 _107642) : (term1415 _107639 _107642 _53776 t s d f) = (term1416 _107639 _107642 _53776 t s d f).
Proof. exact (fun_ext (fun GEN_PVAR_149 : _107642 -> _107639 => @lem4539127 _107639 _107642 _53776 t s d f GEN_PVAR_149)). Qed.
Lemma lem4539129 {_107639 _107642 : Type'} : (@all (_107642 -> _107639)) = (@all (_107642 -> _107639)).
Proof. exact (eq_refl (@all (_107642 -> _107639))). Qed.
Lemma lem4539130 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (t : _107639 -> Prop) (s : _107642 -> Prop) (d : _107639) (f : type796 _107639 _107642) : (term1417 _107639 _107642 _53776 t s d f) = (term1418 _107639 _107642 _53776 t s d f).
Proof. exact (MK_COMB (@lem4539129 _107639 _107642) (@lem4539128 _107639 _107642 _53776 t s d f)). Qed.
Lemma lem4539131 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (t : _107639 -> Prop) (s : _107642 -> Prop) (d : _107639) : (term1419 _107639 _107642 _53776 t s d) = (term1420 _107639 _107642 _53776 t s d).
Proof. exact (fun_ext (fun f : type796 _107639 _107642 => @lem4539130 _107639 _107642 _53776 t s d f)). Qed.
Lemma lem4539132 {_107639 _107642 : Type'} : (@ex ((_107642 -> _107639) -> _107642 -> _107639)) = (@ex ((_107642 -> _107639) -> _107642 -> _107639)).
Proof. exact (eq_refl (@ex ((_107642 -> _107639) -> _107642 -> _107639))). Qed.
Lemma lem4539133 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (t : _107639 -> Prop) (s : _107642 -> Prop) (d : _107639) : (term1402 _107639 _107642 _53776 t s d) = (term1421 _107639 _107642 _53776 t s d).
Proof. exact (MK_COMB (@lem4539132 _107639 _107642) (@lem4539131 _107639 _107642 _53776 t s d)). Qed.
Lemma lem4539134 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (t : _107639 -> Prop) (s : _107642 -> Prop) (d : _107639) : ((term1401 _107639 _107642 _53776 t s d) = (term1402 _107639 _107642 _53776 t s d)) = ((term1398 _107639 _107642 _53776 t s d) = (term1421 _107639 _107642 _53776 t s d)).
Proof. exact (MK_COMB (@lem4539122 _107639 _107642 _53776 t s d) (@lem4539133 _107639 _107642 _53776 t s d)). Qed.
Lemma lem4539135 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (t : _107639 -> Prop) (s : _107642 -> Prop) (d : _107639) : (term1398 _107639 _107642 _53776 t s d) = (term1421 _107639 _107642 _53776 t s d).
Proof. exact (EQ_MP (@lem4539134 _107639 _107642 _53776 t s d) (@lem4539109 _107639 _107642 _53776 t s d)). Qed.
Lemma lem4539136 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (t : _107639 -> Prop) (s : _107642 -> Prop) (d : _107639) : (term1315 _107639 _107642 _53776 t s d) = (term1421 _107639 _107642 _53776 t s d).
Proof. exact (TRANS (@lem4539105 _107639 _107642 _53776 t s d) (@lem4539135 _107639 _107642 _53776 t s d)). Qed.
Lemma lem4539137 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (t : _107639 -> Prop) (s : _107642 -> Prop) : (term1322 _107639 _107642 _53776 t s) = (term1422 _107639 _107642 _53776 t s).
Proof. exact (fun_ext (fun d : _107639 => @lem4539136 _107639 _107642 _53776 t s d)). Qed.
Lemma lem4539138 {_107639 : Type'} : (@all _107639) = (@all _107639).
Proof. exact (eq_refl (@all _107639)). Qed.
Lemma lem4539139 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (t : _107639 -> Prop) (s : _107642 -> Prop) : (term1337 _107639 _107642 _53776 t s) = (term1423 _107639 _107642 _53776 t s).
Proof. exact (MK_COMB (@lem4539138 _107639) (@lem4539137 _107639 _107642 _53776 t s)). Qed.
Lemma lem4539141 {A B : Type'} (P : type1413 A B) : (term907 A B P) = (term908 A B P).
Proof. exact (EQ_MP (@lem18899 A B P) (@lem18898 A B P)). Qed.
Lemma lem4539142 {_107639 _107642 : Type'} (P : type1357 _107639 _107642) : (term1424 _107639 _107642 P) = (term1425 _107639 _107642 P).
Proof. exact (@lem4539141 _107639 (type796 _107639 _107642) P). Qed.
Lemma lem4539143 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (t : _107639 -> Prop) (s : _107642 -> Prop) : (term1426 _107639 _107642 _53776 t s) = (term1427 _107639 _107642 _53776 t s).
Proof. exact (@lem4539142 _107639 _107642 (term1428 _107639 _107642 _53776 t s)). Qed.
Lemma lem4539144 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (t : _107639 -> Prop) (s : _107642 -> Prop) (d : _107639) : (term1429 _107639 _107642 _53776 t s d) = (term1420 _107639 _107642 _53776 t s d).
Proof. exact (eq_refl (term1429 _107639 _107642 _53776 t s d)). Qed.
Lemma lem4539145 {_107639 _107642 : Type'} (f : type796 _107639 _107642) : f = f.
Proof. exact (eq_refl f). Qed.
Lemma lem4539146 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (t : _107639 -> Prop) (s : _107642 -> Prop) (d : _107639) (f : type796 _107639 _107642) : (term1430 _107639 _107642 _53776 t s d f) = (term1431 _107639 _107642 _53776 t s d f).
Proof. exact (MK_COMB (@lem4539144 _107639 _107642 _53776 t s d) (@lem4539145 _107639 _107642 f)). Qed.
Lemma lem4539147 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (t : _107639 -> Prop) (s : _107642 -> Prop) (d : _107639) (f : type796 _107639 _107642) : (term1431 _107639 _107642 _53776 t s d f) = (term1418 _107639 _107642 _53776 t s d f).
Proof. exact (eq_refl (term1431 _107639 _107642 _53776 t s d f)). Qed.
Lemma lem4539148 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (t : _107639 -> Prop) (s : _107642 -> Prop) (d : _107639) (f : type796 _107639 _107642) : (term1430 _107639 _107642 _53776 t s d f) = (term1418 _107639 _107642 _53776 t s d f).
Proof. exact (TRANS (@lem4539146 _107639 _107642 _53776 t s d f) (@lem4539147 _107639 _107642 _53776 t s d f)). Qed.
Lemma lem4539149 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (t : _107639 -> Prop) (s : _107642 -> Prop) (d : _107639) : (term1432 _107639 _107642 _53776 t s d) = (term1420 _107639 _107642 _53776 t s d).
Proof. exact (fun_ext (fun f : type796 _107639 _107642 => @lem4539148 _107639 _107642 _53776 t s d f)). Qed.
Lemma lem4539150 {_107639 _107642 : Type'} : (@ex ((_107642 -> _107639) -> _107642 -> _107639)) = (@ex ((_107642 -> _107639) -> _107642 -> _107639)).
Proof. exact (eq_refl (@ex ((_107642 -> _107639) -> _107642 -> _107639))). Qed.
Lemma lem4539151 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (t : _107639 -> Prop) (s : _107642 -> Prop) (d : _107639) : (term1433 _107639 _107642 _53776 t s d) = (term1421 _107639 _107642 _53776 t s d).
Proof. exact (MK_COMB (@lem4539150 _107639 _107642) (@lem4539149 _107639 _107642 _53776 t s d)). Qed.
Lemma lem4539152 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (t : _107639 -> Prop) (s : _107642 -> Prop) : (term1434 _107639 _107642 _53776 t s) = (term1422 _107639 _107642 _53776 t s).
Proof. exact (fun_ext (fun d : _107639 => @lem4539151 _107639 _107642 _53776 t s d)). Qed.
Lemma lem4539153 {_107639 : Type'} : (@all _107639) = (@all _107639).
Proof. exact (eq_refl (@all _107639)). Qed.
Lemma lem4539154 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (t : _107639 -> Prop) (s : _107642 -> Prop) : (term1426 _107639 _107642 _53776 t s) = (term1423 _107639 _107642 _53776 t s).
Proof. exact (MK_COMB (@lem4539153 _107639) (@lem4539152 _107639 _107642 _53776 t s)). Qed.
Lemma lem4539155 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4539156 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (t : _107639 -> Prop) (s : _107642 -> Prop) : (term1435 _107639 _107642 _53776 t s) = (term1436 _107639 _107642 _53776 t s).
Proof. exact (MK_COMB (@lem4539155) (@lem4539154 _107639 _107642 _53776 t s)). Qed.
Lemma lem4539157 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (t : _107639 -> Prop) (s : _107642 -> Prop) (d : _107639) : (term1429 _107639 _107642 _53776 t s d) = (term1420 _107639 _107642 _53776 t s d).
Proof. exact (eq_refl (term1429 _107639 _107642 _53776 t s d)). Qed.
Lemma lem4539158 {_107639 _107642 : Type'} (f : type1371 _107639 _107642) (d : _107639) : (f d) = (f d).
Proof. exact (eq_refl (f d)). Qed.
Lemma lem4539159 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (t : _107639 -> Prop) (s : _107642 -> Prop) (f : type1371 _107639 _107642) (d : _107639) : (term1437 _107639 _107642 _53776 t s f d) = (term1438 _107639 _107642 _53776 t s f d).
Proof. exact (MK_COMB (@lem4539157 _107639 _107642 _53776 t s d) (@lem4539158 _107639 _107642 f d)). Qed.
Lemma lem4539160 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (t : _107639 -> Prop) (s : _107642 -> Prop) (f : type1371 _107639 _107642) (d : _107639) : (term1438 _107639 _107642 _53776 t s f d) = (term1439 _107639 _107642 _53776 t s f d).
Proof. exact (eq_refl (term1438 _107639 _107642 _53776 t s f d)). Qed.
Lemma lem4539161 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (t : _107639 -> Prop) (s : _107642 -> Prop) (f : type1371 _107639 _107642) (d : _107639) : (term1437 _107639 _107642 _53776 t s f d) = (term1439 _107639 _107642 _53776 t s f d).
Proof. exact (TRANS (@lem4539159 _107639 _107642 _53776 t s f d) (@lem4539160 _107639 _107642 _53776 t s f d)). Qed.
Lemma lem4539162 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (t : _107639 -> Prop) (s : _107642 -> Prop) (f : type1371 _107639 _107642) : (term1440 _107639 _107642 _53776 t s f) = (term1441 _107639 _107642 _53776 t s f).
Proof. exact (fun_ext (fun d : _107639 => @lem4539161 _107639 _107642 _53776 t s f d)). Qed.
Lemma lem4539163 {_107639 : Type'} : (@all _107639) = (@all _107639).
Proof. exact (eq_refl (@all _107639)). Qed.
Lemma lem4539164 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (t : _107639 -> Prop) (s : _107642 -> Prop) (f : type1371 _107639 _107642) : (term1442 _107639 _107642 _53776 t s f) = (term1443 _107639 _107642 _53776 t s f).
Proof. exact (MK_COMB (@lem4539163 _107639) (@lem4539162 _107639 _107642 _53776 t s f)). Qed.
Lemma lem4539165 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (t : _107639 -> Prop) (s : _107642 -> Prop) : (term1444 _107639 _107642 _53776 t s) = (term1445 _107639 _107642 _53776 t s).
Proof. exact (fun_ext (fun f : type1371 _107639 _107642 => @lem4539164 _107639 _107642 _53776 t s f)). Qed.
Lemma lem4539166 {_107639 _107642 : Type'} : (@ex (_107639 -> (_107642 -> _107639) -> _107642 -> _107639)) = (@ex (_107639 -> (_107642 -> _107639) -> _107642 -> _107639)).
Proof. exact (eq_refl (@ex (_107639 -> (_107642 -> _107639) -> _107642 -> _107639))). Qed.
Lemma lem4539167 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (t : _107639 -> Prop) (s : _107642 -> Prop) : (term1427 _107639 _107642 _53776 t s) = (term1446 _107639 _107642 _53776 t s).
Proof. exact (MK_COMB (@lem4539166 _107639 _107642) (@lem4539165 _107639 _107642 _53776 t s)). Qed.
Lemma lem4539168 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (t : _107639 -> Prop) (s : _107642 -> Prop) : ((term1426 _107639 _107642 _53776 t s) = (term1427 _107639 _107642 _53776 t s)) = ((term1423 _107639 _107642 _53776 t s) = (term1446 _107639 _107642 _53776 t s)).
Proof. exact (MK_COMB (@lem4539156 _107639 _107642 _53776 t s) (@lem4539167 _107639 _107642 _53776 t s)). Qed.
Lemma lem4539169 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (t : _107639 -> Prop) (s : _107642 -> Prop) : (term1423 _107639 _107642 _53776 t s) = (term1446 _107639 _107642 _53776 t s).
Proof. exact (EQ_MP (@lem4539168 _107639 _107642 _53776 t s) (@lem4539143 _107639 _107642 _53776 t s)). Qed.
Lemma lem4539170 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (t : _107639 -> Prop) (s : _107642 -> Prop) : (term1337 _107639 _107642 _53776 t s) = (term1446 _107639 _107642 _53776 t s).
Proof. exact (TRANS (@lem4539139 _107639 _107642 _53776 t s) (@lem4539169 _107639 _107642 _53776 t s)). Qed.
Lemma lem4539171 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (t : _107639 -> Prop) : (term1344 _107639 _107642 _53776 t) = (term1447 _107639 _107642 _53776 t).
Proof. exact (fun_ext (fun s : _107642 -> Prop => @lem4539170 _107639 _107642 _53776 t s)). Qed.
Lemma lem4539172 {_107642 : Type'} : (@all (_107642 -> Prop)) = (@all (_107642 -> Prop)).
Proof. exact (eq_refl (@all (_107642 -> Prop))). Qed.
Lemma lem4539173 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (t : _107639 -> Prop) : (term1359 _107639 _107642 _53776 t) = (term1448 _107639 _107642 _53776 t).
Proof. exact (MK_COMB (@lem4539172 _107642) (@lem4539171 _107639 _107642 _53776 t)). Qed.
Lemma lem4539175 {A B : Type'} (P : type1413 A B) : (term907 A B P) = (term908 A B P).
Proof. exact (EQ_MP (@lem18899 A B P) (@lem18898 A B P)). Qed.
Lemma lem4539176 {_107639 _107642 : Type'} (P : type829 _107639 _107642) : (term1449 _107639 _107642 P) = (term1450 _107639 _107642 P).
Proof. exact (@lem4539175 (_107642 -> Prop) (type1371 _107639 _107642) P). Qed.
Lemma lem4539177 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (t : _107639 -> Prop) : (term1451 _107639 _107642 _53776 t) = (term1452 _107639 _107642 _53776 t).
Proof. exact (@lem4539176 _107639 _107642 (term1453 _107639 _107642 _53776 t)). Qed.
Lemma lem4539178 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (t : _107639 -> Prop) (s : _107642 -> Prop) : (term1454 _107639 _107642 _53776 t s) = (term1445 _107639 _107642 _53776 t s).
Proof. exact (eq_refl (term1454 _107639 _107642 _53776 t s)). Qed.
Lemma lem4539179 {_107639 _107642 : Type'} (f : type1371 _107639 _107642) : f = f.
Proof. exact (eq_refl f). Qed.
Lemma lem4539180 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (t : _107639 -> Prop) (s : _107642 -> Prop) (f : type1371 _107639 _107642) : (term1455 _107639 _107642 _53776 t s f) = (term1456 _107639 _107642 _53776 t s f).
Proof. exact (MK_COMB (@lem4539178 _107639 _107642 _53776 t s) (@lem4539179 _107639 _107642 f)). Qed.
Lemma lem4539181 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (t : _107639 -> Prop) (s : _107642 -> Prop) (f : type1371 _107639 _107642) : (term1456 _107639 _107642 _53776 t s f) = (term1443 _107639 _107642 _53776 t s f).
Proof. exact (eq_refl (term1456 _107639 _107642 _53776 t s f)). Qed.
Lemma lem4539182 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (t : _107639 -> Prop) (s : _107642 -> Prop) (f : type1371 _107639 _107642) : (term1455 _107639 _107642 _53776 t s f) = (term1443 _107639 _107642 _53776 t s f).
Proof. exact (TRANS (@lem4539180 _107639 _107642 _53776 t s f) (@lem4539181 _107639 _107642 _53776 t s f)). Qed.
Lemma lem4539183 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (t : _107639 -> Prop) (s : _107642 -> Prop) : (term1457 _107639 _107642 _53776 t s) = (term1445 _107639 _107642 _53776 t s).
Proof. exact (fun_ext (fun f : type1371 _107639 _107642 => @lem4539182 _107639 _107642 _53776 t s f)). Qed.
Lemma lem4539184 {_107639 _107642 : Type'} : (@ex (_107639 -> (_107642 -> _107639) -> _107642 -> _107639)) = (@ex (_107639 -> (_107642 -> _107639) -> _107642 -> _107639)).
Proof. exact (eq_refl (@ex (_107639 -> (_107642 -> _107639) -> _107642 -> _107639))). Qed.
Lemma lem4539185 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (t : _107639 -> Prop) (s : _107642 -> Prop) : (term1458 _107639 _107642 _53776 t s) = (term1446 _107639 _107642 _53776 t s).
Proof. exact (MK_COMB (@lem4539184 _107639 _107642) (@lem4539183 _107639 _107642 _53776 t s)). Qed.
Lemma lem4539186 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (t : _107639 -> Prop) : (term1459 _107639 _107642 _53776 t) = (term1447 _107639 _107642 _53776 t).
Proof. exact (fun_ext (fun s : _107642 -> Prop => @lem4539185 _107639 _107642 _53776 t s)). Qed.
Lemma lem4539187 {_107642 : Type'} : (@all (_107642 -> Prop)) = (@all (_107642 -> Prop)).
Proof. exact (eq_refl (@all (_107642 -> Prop))). Qed.
Lemma lem4539188 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (t : _107639 -> Prop) : (term1451 _107639 _107642 _53776 t) = (term1448 _107639 _107642 _53776 t).
Proof. exact (MK_COMB (@lem4539187 _107642) (@lem4539186 _107639 _107642 _53776 t)). Qed.
Lemma lem4539189 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4539190 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (t : _107639 -> Prop) : (term1460 _107639 _107642 _53776 t) = (term1461 _107639 _107642 _53776 t).
Proof. exact (MK_COMB (@lem4539189) (@lem4539188 _107639 _107642 _53776 t)). Qed.
Lemma lem4539191 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (t : _107639 -> Prop) (s : _107642 -> Prop) : (term1454 _107639 _107642 _53776 t s) = (term1445 _107639 _107642 _53776 t s).
Proof. exact (eq_refl (term1454 _107639 _107642 _53776 t s)). Qed.
Lemma lem4539192 {_107639 _107642 : Type'} (f : type858 _107639 _107642) (s : _107642 -> Prop) : (f s) = (f s).
Proof. exact (eq_refl (f s)). Qed.
Lemma lem4539193 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (t : _107639 -> Prop) (f : type858 _107639 _107642) (s : _107642 -> Prop) : (term1462 _107639 _107642 _53776 t f s) = (term1463 _107639 _107642 _53776 t f s).
Proof. exact (MK_COMB (@lem4539191 _107639 _107642 _53776 t s) (@lem4539192 _107639 _107642 f s)). Qed.
Lemma lem4539194 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (t : _107639 -> Prop) (f : type858 _107639 _107642) (s : _107642 -> Prop) : (term1463 _107639 _107642 _53776 t f s) = (term1464 _107639 _107642 _53776 t f s).
Proof. exact (eq_refl (term1463 _107639 _107642 _53776 t f s)). Qed.
Lemma lem4539195 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (t : _107639 -> Prop) (f : type858 _107639 _107642) (s : _107642 -> Prop) : (term1462 _107639 _107642 _53776 t f s) = (term1464 _107639 _107642 _53776 t f s).
Proof. exact (TRANS (@lem4539193 _107639 _107642 _53776 t f s) (@lem4539194 _107639 _107642 _53776 t f s)). Qed.
Lemma lem4539196 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (t : _107639 -> Prop) (f : type858 _107639 _107642) : (term1465 _107639 _107642 _53776 t f) = (term1466 _107639 _107642 _53776 t f).
Proof. exact (fun_ext (fun s : _107642 -> Prop => @lem4539195 _107639 _107642 _53776 t f s)). Qed.
Lemma lem4539197 {_107642 : Type'} : (@all (_107642 -> Prop)) = (@all (_107642 -> Prop)).
Proof. exact (eq_refl (@all (_107642 -> Prop))). Qed.
Lemma lem4539198 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (t : _107639 -> Prop) (f : type858 _107639 _107642) : (term1467 _107639 _107642 _53776 t f) = (term1468 _107639 _107642 _53776 t f).
Proof. exact (MK_COMB (@lem4539197 _107642) (@lem4539196 _107639 _107642 _53776 t f)). Qed.
Lemma lem4539199 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (t : _107639 -> Prop) : (term1469 _107639 _107642 _53776 t) = (term1470 _107639 _107642 _53776 t).
Proof. exact (fun_ext (fun f : type858 _107639 _107642 => @lem4539198 _107639 _107642 _53776 t f)). Qed.
Lemma lem4539200 {_107639 _107642 : Type'} : (@ex ((_107642 -> Prop) -> _107639 -> (_107642 -> _107639) -> _107642 -> _107639)) = (@ex ((_107642 -> Prop) -> _107639 -> (_107642 -> _107639) -> _107642 -> _107639)).
Proof. exact (eq_refl (@ex ((_107642 -> Prop) -> _107639 -> (_107642 -> _107639) -> _107642 -> _107639))). Qed.
Lemma lem4539201 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (t : _107639 -> Prop) : (term1452 _107639 _107642 _53776 t) = (term1471 _107639 _107642 _53776 t).
Proof. exact (MK_COMB (@lem4539200 _107639 _107642) (@lem4539199 _107639 _107642 _53776 t)). Qed.
Lemma lem4539202 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (t : _107639 -> Prop) : ((term1451 _107639 _107642 _53776 t) = (term1452 _107639 _107642 _53776 t)) = ((term1448 _107639 _107642 _53776 t) = (term1471 _107639 _107642 _53776 t)).
Proof. exact (MK_COMB (@lem4539190 _107639 _107642 _53776 t) (@lem4539201 _107639 _107642 _53776 t)). Qed.
Lemma lem4539203 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (t : _107639 -> Prop) : (term1448 _107639 _107642 _53776 t) = (term1471 _107639 _107642 _53776 t).
Proof. exact (EQ_MP (@lem4539202 _107639 _107642 _53776 t) (@lem4539177 _107639 _107642 _53776 t)). Qed.
Lemma lem4539204 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (t : _107639 -> Prop) : (term1359 _107639 _107642 _53776 t) = (term1471 _107639 _107642 _53776 t).
Proof. exact (TRANS (@lem4539173 _107639 _107642 _53776 t) (@lem4539203 _107639 _107642 _53776 t)). Qed.
Lemma lem4539205 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) : (term1366 _107639 _107642 _53776) = (term1472 _107639 _107642 _53776).
Proof. exact (fun_ext (fun t : _107639 -> Prop => @lem4539204 _107639 _107642 _53776 t)). Qed.
Lemma lem4539206 {_107639 : Type'} : (@all (_107639 -> Prop)) = (@all (_107639 -> Prop)).
Proof. exact (eq_refl (@all (_107639 -> Prop))). Qed.
Lemma lem4539207 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) : (term1381 _107639 _107642 _53776) = (term1473 _107639 _107642 _53776).
Proof. exact (MK_COMB (@lem4539206 _107639) (@lem4539205 _107639 _107642 _53776)). Qed.
Lemma lem4539209 {A B : Type'} (P : type1413 A B) : (term907 A B P) = (term908 A B P).
Proof. exact (EQ_MP (@lem18899 A B P) (@lem18898 A B P)). Qed.
Lemma lem4539210 {_107639 _107642 : Type'} (P : type606 _107639 _107642) : (term1474 _107639 _107642 P) = (term1475 _107639 _107642 P).
Proof. exact (@lem4539209 (_107639 -> Prop) (type858 _107639 _107642) P). Qed.
Lemma lem4539211 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) : (term1476 _107639 _107642 _53776) = (term1477 _107639 _107642 _53776).
Proof. exact (@lem4539210 _107639 _107642 (term1478 _107639 _107642 _53776)). Qed.
Lemma lem4539212 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (t : _107639 -> Prop) : (term1479 _107639 _107642 _53776 t) = (term1470 _107639 _107642 _53776 t).
Proof. exact (eq_refl (term1479 _107639 _107642 _53776 t)). Qed.
Lemma lem4539213 {_107639 _107642 : Type'} (f : type858 _107639 _107642) : f = f.
Proof. exact (eq_refl f). Qed.
Lemma lem4539214 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (t : _107639 -> Prop) (f : type858 _107639 _107642) : (term1480 _107639 _107642 _53776 t f) = (term1481 _107639 _107642 _53776 t f).
Proof. exact (MK_COMB (@lem4539212 _107639 _107642 _53776 t) (@lem4539213 _107639 _107642 f)). Qed.
Lemma lem4539215 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (t : _107639 -> Prop) (f : type858 _107639 _107642) : (term1481 _107639 _107642 _53776 t f) = (term1468 _107639 _107642 _53776 t f).
Proof. exact (eq_refl (term1481 _107639 _107642 _53776 t f)). Qed.
Lemma lem4539216 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (t : _107639 -> Prop) (f : type858 _107639 _107642) : (term1480 _107639 _107642 _53776 t f) = (term1468 _107639 _107642 _53776 t f).
Proof. exact (TRANS (@lem4539214 _107639 _107642 _53776 t f) (@lem4539215 _107639 _107642 _53776 t f)). Qed.
Lemma lem4539217 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (t : _107639 -> Prop) : (term1482 _107639 _107642 _53776 t) = (term1470 _107639 _107642 _53776 t).
Proof. exact (fun_ext (fun f : type858 _107639 _107642 => @lem4539216 _107639 _107642 _53776 t f)). Qed.
Lemma lem4539218 {_107639 _107642 : Type'} : (@ex ((_107642 -> Prop) -> _107639 -> (_107642 -> _107639) -> _107642 -> _107639)) = (@ex ((_107642 -> Prop) -> _107639 -> (_107642 -> _107639) -> _107642 -> _107639)).
Proof. exact (eq_refl (@ex ((_107642 -> Prop) -> _107639 -> (_107642 -> _107639) -> _107642 -> _107639))). Qed.
Lemma lem4539219 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (t : _107639 -> Prop) : (term1483 _107639 _107642 _53776 t) = (term1471 _107639 _107642 _53776 t).
Proof. exact (MK_COMB (@lem4539218 _107639 _107642) (@lem4539217 _107639 _107642 _53776 t)). Qed.
Lemma lem4539220 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) : (term1484 _107639 _107642 _53776) = (term1472 _107639 _107642 _53776).
Proof. exact (fun_ext (fun t : _107639 -> Prop => @lem4539219 _107639 _107642 _53776 t)). Qed.
Lemma lem4539221 {_107639 : Type'} : (@all (_107639 -> Prop)) = (@all (_107639 -> Prop)).
Proof. exact (eq_refl (@all (_107639 -> Prop))). Qed.
Lemma lem4539222 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) : (term1476 _107639 _107642 _53776) = (term1473 _107639 _107642 _53776).
Proof. exact (MK_COMB (@lem4539221 _107639) (@lem4539220 _107639 _107642 _53776)). Qed.
Lemma lem4539223 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4539224 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) : (term1485 _107639 _107642 _53776) = (term1486 _107639 _107642 _53776).
Proof. exact (MK_COMB (@lem4539223) (@lem4539222 _107639 _107642 _53776)). Qed.
Lemma lem4539225 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (t : _107639 -> Prop) : (term1479 _107639 _107642 _53776 t) = (term1470 _107639 _107642 _53776 t).
Proof. exact (eq_refl (term1479 _107639 _107642 _53776 t)). Qed.
Lemma lem4539226 {_107639 _107642 : Type'} (f : type655 _107639 _107642) (t : _107639 -> Prop) : (f t) = (f t).
Proof. exact (eq_refl (f t)). Qed.
Lemma lem4539227 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (f : type655 _107639 _107642) (t : _107639 -> Prop) : (term1487 _107639 _107642 _53776 f t) = (term1488 _107639 _107642 _53776 f t).
Proof. exact (MK_COMB (@lem4539225 _107639 _107642 _53776 t) (@lem4539226 _107639 _107642 f t)). Qed.
Lemma lem4539228 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (f : type655 _107639 _107642) (t : _107639 -> Prop) : (term1488 _107639 _107642 _53776 f t) = (term1489 _107639 _107642 _53776 f t).
Proof. exact (eq_refl (term1488 _107639 _107642 _53776 f t)). Qed.
Lemma lem4539229 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (f : type655 _107639 _107642) (t : _107639 -> Prop) : (term1487 _107639 _107642 _53776 f t) = (term1489 _107639 _107642 _53776 f t).
Proof. exact (TRANS (@lem4539227 _107639 _107642 _53776 f t) (@lem4539228 _107639 _107642 _53776 f t)). Qed.
Lemma lem4539230 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (f : type655 _107639 _107642) : (term1490 _107639 _107642 _53776 f) = (term1491 _107639 _107642 _53776 f).
Proof. exact (fun_ext (fun t : _107639 -> Prop => @lem4539229 _107639 _107642 _53776 f t)). Qed.
Lemma lem4539231 {_107639 : Type'} : (@all (_107639 -> Prop)) = (@all (_107639 -> Prop)).
Proof. exact (eq_refl (@all (_107639 -> Prop))). Qed.
Lemma lem4539232 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (f : type655 _107639 _107642) : (term1492 _107639 _107642 _53776 f) = (term1493 _107639 _107642 _53776 f).
Proof. exact (MK_COMB (@lem4539231 _107639) (@lem4539230 _107639 _107642 _53776 f)). Qed.
Lemma lem4539233 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) : (term1494 _107639 _107642 _53776) = (term1495 _107639 _107642 _53776).
Proof. exact (fun_ext (fun f : type655 _107639 _107642 => @lem4539232 _107639 _107642 _53776 f)). Qed.
Lemma lem4539234 {_107639 _107642 : Type'} : (@ex ((_107639 -> Prop) -> (_107642 -> Prop) -> _107639 -> (_107642 -> _107639) -> _107642 -> _107639)) = (@ex ((_107639 -> Prop) -> (_107642 -> Prop) -> _107639 -> (_107642 -> _107639) -> _107642 -> _107639)).
Proof. exact (eq_refl (@ex ((_107639 -> Prop) -> (_107642 -> Prop) -> _107639 -> (_107642 -> _107639) -> _107642 -> _107639))). Qed.
Lemma lem4539235 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) : (term1477 _107639 _107642 _53776) = (term1496 _107639 _107642 _53776).
Proof. exact (MK_COMB (@lem4539234 _107639 _107642) (@lem4539233 _107639 _107642 _53776)). Qed.
Lemma lem4539236 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) : ((term1476 _107639 _107642 _53776) = (term1477 _107639 _107642 _53776)) = ((term1473 _107639 _107642 _53776) = (term1496 _107639 _107642 _53776)).
Proof. exact (MK_COMB (@lem4539224 _107639 _107642 _53776) (@lem4539235 _107639 _107642 _53776)). Qed.
Lemma lem4539237 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) : (term1473 _107639 _107642 _53776) = (term1496 _107639 _107642 _53776).
Proof. exact (EQ_MP (@lem4539236 _107639 _107642 _53776) (@lem4539211 _107639 _107642 _53776)). Qed.
Lemma lem4539238 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) : (term1381 _107639 _107642 _53776) = (term1496 _107639 _107642 _53776).
Proof. exact (TRANS (@lem4539207 _107639 _107642 _53776) (@lem4539237 _107639 _107642 _53776)). Qed.
Lemma lem4539239 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) : (term1378 _107639 _107642 _53776) = (term1378 _107639 _107642 _53776).
Proof. exact (eq_refl (term1378 _107639 _107642 _53776)). Qed.
Lemma lem4539240 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) : (term1382 _107639 _107642 _53776) = (term1497 _107639 _107642 _53776).
Proof. exact (MK_COMB (@lem4539239 _107639 _107642 _53776) (@lem4539238 _107639 _107642 _53776)). Qed.
Lemma lem4539242 {A : Type'} (P : Prop) (Q : A -> Prop) : (term1008 A P Q) = (term1009 A P Q).
Proof. exact (EQ_MP (@lem18929 A P Q) (@lem18928 A P Q)). Qed.
Lemma lem4539243 {_107639 _107642 : Type'} (P : Prop) (Q : type146 _107639 _107642) : (term1498 _107639 _107642 P Q) = (term1499 _107639 _107642 P Q).
Proof. exact (@lem4539242 (type655 _107639 _107642) P Q). Qed.
Lemma lem4539244 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) : (term1500 _107639 _107642 _53776) = (term1501 _107639 _107642 _53776).
Proof. exact (@lem4539243 _107639 _107642 (term1376 _107639 _107642 _53776) (term1495 _107639 _107642 _53776)). Qed.
Lemma lem4539245 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (f : type655 _107639 _107642) : (term1502 _107639 _107642 _53776 f) = (term1493 _107639 _107642 _53776 f).
Proof. exact (eq_refl (term1502 _107639 _107642 _53776 f)). Qed.
Lemma lem4539246 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) : (term1503 _107639 _107642 _53776) = (term1495 _107639 _107642 _53776).
Proof. exact (fun_ext (fun f : type655 _107639 _107642 => @lem4539245 _107639 _107642 _53776 f)). Qed.
Lemma lem4539247 {_107639 _107642 : Type'} : (@ex ((_107639 -> Prop) -> (_107642 -> Prop) -> _107639 -> (_107642 -> _107639) -> _107642 -> _107639)) = (@ex ((_107639 -> Prop) -> (_107642 -> Prop) -> _107639 -> (_107642 -> _107639) -> _107642 -> _107639)).
Proof. exact (eq_refl (@ex ((_107639 -> Prop) -> (_107642 -> Prop) -> _107639 -> (_107642 -> _107639) -> _107642 -> _107639))). Qed.
Lemma lem4539248 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) : (term1504 _107639 _107642 _53776) = (term1496 _107639 _107642 _53776).
Proof. exact (MK_COMB (@lem4539247 _107639 _107642) (@lem4539246 _107639 _107642 _53776)). Qed.
Lemma lem4539249 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) : (term1378 _107639 _107642 _53776) = (term1378 _107639 _107642 _53776).
Proof. exact (eq_refl (term1378 _107639 _107642 _53776)). Qed.
Lemma lem4539250 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) : (term1500 _107639 _107642 _53776) = (term1497 _107639 _107642 _53776).
Proof. exact (MK_COMB (@lem4539249 _107639 _107642 _53776) (@lem4539248 _107639 _107642 _53776)). Qed.
Lemma lem4539251 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4539252 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) : (term1505 _107639 _107642 _53776) = (term1506 _107639 _107642 _53776).
Proof. exact (MK_COMB (@lem4539251) (@lem4539250 _107639 _107642 _53776)). Qed.
Lemma lem4539253 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (f : type655 _107639 _107642) : (term1502 _107639 _107642 _53776 f) = (term1493 _107639 _107642 _53776 f).
Proof. exact (eq_refl (term1502 _107639 _107642 _53776 f)). Qed.
Lemma lem4539254 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) : (term1378 _107639 _107642 _53776) = (term1378 _107639 _107642 _53776).
Proof. exact (eq_refl (term1378 _107639 _107642 _53776)). Qed.
Lemma lem4539255 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (f : type655 _107639 _107642) : (term1507 _107639 _107642 _53776 f) = (term1508 _107639 _107642 _53776 f).
Proof. exact (MK_COMB (@lem4539254 _107639 _107642 _53776) (@lem4539253 _107639 _107642 _53776 f)). Qed.
Lemma lem4539256 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) : (term1509 _107639 _107642 _53776) = (term1510 _107639 _107642 _53776).
Proof. exact (fun_ext (fun f : type655 _107639 _107642 => @lem4539255 _107639 _107642 _53776 f)). Qed.
Lemma lem4539257 {_107639 _107642 : Type'} : (@ex ((_107639 -> Prop) -> (_107642 -> Prop) -> _107639 -> (_107642 -> _107639) -> _107642 -> _107639)) = (@ex ((_107639 -> Prop) -> (_107642 -> Prop) -> _107639 -> (_107642 -> _107639) -> _107642 -> _107639)).
Proof. exact (eq_refl (@ex ((_107639 -> Prop) -> (_107642 -> Prop) -> _107639 -> (_107642 -> _107639) -> _107642 -> _107639))). Qed.
Lemma lem4539258 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) : (term1501 _107639 _107642 _53776) = (term1511 _107639 _107642 _53776).
Proof. exact (MK_COMB (@lem4539257 _107639 _107642) (@lem4539256 _107639 _107642 _53776)). Qed.
Lemma lem4539259 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) : ((term1500 _107639 _107642 _53776) = (term1501 _107639 _107642 _53776)) = ((term1497 _107639 _107642 _53776) = (term1511 _107639 _107642 _53776)).
Proof. exact (MK_COMB (@lem4539252 _107639 _107642 _53776) (@lem4539258 _107639 _107642 _53776)). Qed.
Lemma lem4539260 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) : (term1497 _107639 _107642 _53776) = (term1511 _107639 _107642 _53776).
Proof. exact (EQ_MP (@lem4539259 _107639 _107642 _53776) (@lem4539244 _107639 _107642 _53776)). Qed.
Lemma lem4539261 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) : (term1382 _107639 _107642 _53776) = (term1511 _107639 _107642 _53776).
Proof. exact (TRANS (@lem4539240 _107639 _107642 _53776) (@lem4539260 _107639 _107642 _53776)). Qed.
Lemma lem4539262 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) : (term1294 _107639 _107642 _53776) = (term1511 _107639 _107642 _53776).
Proof. exact (TRANS (@lem4539082 _107639 _107642 _53776) (@lem4539261 _107639 _107642 _53776)). Qed.
Lemma lem4539263 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) : (term302 _107639 _107642 _53776) = (term1511 _107639 _107642 _53776).
Proof. exact (TRANS (@lem4538422 _107639 _107642 _53776) (@lem4539262 _107639 _107642 _53776)). Qed.
Lemma lem4539264 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (h1 : term302 _107639 _107642 _53776) : term1511 _107639 _107642 _53776.
Proof. exact (EQ_MP (@lem4539263 _107639 _107642 _53776) (@lem4533069 _107639 _107642 _53776 h1)). Qed.
Lemma lem4539275 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (d : _107639) (t : _107639 -> Prop) (s : _107642 -> Prop) : (term1512 _107639 _107642 _53776 d t s) = (term1513 _107639 _107642 _53776 d t s).
Proof. exact (@lem17362 (term1514 _107639 _107642 s t) ((term217 _107639 _107642 _53776 t s d) = (term215 _107639 _107642 t s))). Qed.
Lemma lem4539276 {_107639 : Type'} (P : type686 _107639) : (term1515 _107639 P) = (term1516 _107639 P).
Proof. exact (@lem18392 (_107639 -> Prop) P). Qed.
Lemma lem4539277 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (d : _107639) (s : _107642 -> Prop) : (term1517 _107639 _107642 _53776 d s) = (term1518 _107639 _107642 _53776 d s).
Proof. exact (@lem4539276 _107639 (term224 _107639 _107642 _53776 d s)). Qed.
Lemma lem4539278 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (d : _107639) (t : _107639 -> Prop) (s : _107642 -> Prop) : (term1519 _107639 _107642 _53776 d s t) = (term222 _107639 _107642 _53776 d t s).
Proof. exact (eq_refl (term1519 _107639 _107642 _53776 d s t)). Qed.
Lemma lem4539279 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem4539280 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (d : _107639) (t : _107639 -> Prop) (s : _107642 -> Prop) : (term1520 _107639 _107642 _53776 d s t) = (term1512 _107639 _107642 _53776 d t s).
Proof. exact (MK_COMB (@lem4539279) (@lem4539278 _107639 _107642 _53776 d t s)). Qed.
Lemma lem4539281 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (d : _107639) (t : _107639 -> Prop) (s : _107642 -> Prop) : (term1520 _107639 _107642 _53776 d s t) = (term1513 _107639 _107642 _53776 d t s).
Proof. exact (TRANS (@lem4539280 _107639 _107642 _53776 d t s) (@lem4539275 _107639 _107642 _53776 d t s)). Qed.
Lemma lem4539282 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (d : _107639) (s : _107642 -> Prop) : (term1521 _107639 _107642 _53776 d s) = (term1522 _107639 _107642 _53776 d s).
Proof. exact (fun_ext (fun t : _107639 -> Prop => @lem4539281 _107639 _107642 _53776 d t s)). Qed.
Lemma lem4539283 {_107639 : Type'} : (@ex (_107639 -> Prop)) = (@ex (_107639 -> Prop)).
Proof. exact (eq_refl (@ex (_107639 -> Prop))). Qed.
Lemma lem4539284 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (d : _107639) (s : _107642 -> Prop) : (term1518 _107639 _107642 _53776 d s) = (term1523 _107639 _107642 _53776 d s).
Proof. exact (MK_COMB (@lem4539283 _107639) (@lem4539282 _107639 _107642 _53776 d s)). Qed.
Lemma lem4539285 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (d : _107639) (s : _107642 -> Prop) : (term1517 _107639 _107642 _53776 d s) = (term1523 _107639 _107642 _53776 d s).
Proof. exact (TRANS (@lem4539277 _107639 _107642 _53776 d s) (@lem4539284 _107639 _107642 _53776 d s)). Qed.
Lemma lem4539286 {_107642 : Type'} (P : type686 _107642) : (term1515 _107642 P) = (term1516 _107642 P).
Proof. exact (@lem18392 (_107642 -> Prop) P). Qed.
Lemma lem4539287 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (d : _107639) : (term230 _107639 _107642 _53776 d) = (term1524 _107639 _107642 _53776 d).
Proof. exact (@lem4539286 _107642 (term228 _107639 _107642 _53776 d)). Qed.
Lemma lem4539288 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (d : _107639) (s : _107642 -> Prop) : (term1525 _107639 _107642 _53776 d s) = (term226 _107639 _107642 _53776 d s).
Proof. exact (eq_refl (term1525 _107639 _107642 _53776 d s)). Qed.
Lemma lem4539289 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem4539290 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (d : _107639) (s : _107642 -> Prop) : (term1526 _107639 _107642 _53776 d s) = (term1517 _107639 _107642 _53776 d s).
Proof. exact (MK_COMB (@lem4539289) (@lem4539288 _107639 _107642 _53776 d s)). Qed.
Lemma lem4539291 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (d : _107639) (s : _107642 -> Prop) : (term1526 _107639 _107642 _53776 d s) = (term1523 _107639 _107642 _53776 d s).
Proof. exact (TRANS (@lem4539290 _107639 _107642 _53776 d s) (@lem4539285 _107639 _107642 _53776 d s)). Qed.
Lemma lem4539292 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (d : _107639) : (term1527 _107639 _107642 _53776 d) = (term1528 _107639 _107642 _53776 d).
Proof. exact (fun_ext (fun s : _107642 -> Prop => @lem4539291 _107639 _107642 _53776 d s)). Qed.
Lemma lem4539293 {_107642 : Type'} : (@ex (_107642 -> Prop)) = (@ex (_107642 -> Prop)).
Proof. exact (eq_refl (@ex (_107642 -> Prop))). Qed.
Lemma lem4539294 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (d : _107639) : (term1524 _107639 _107642 _53776 d) = (term1529 _107639 _107642 _53776 d).
Proof. exact (MK_COMB (@lem4539293 _107642) (@lem4539292 _107639 _107642 _53776 d)). Qed.
Lemma lem4539351 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (d : _107639) : (term230 _107639 _107642 _53776 d) = (term1529 _107639 _107642 _53776 d).
Proof. exact (TRANS (@lem4539287 _107639 _107642 _53776 d) (@lem4539294 _107639 _107642 _53776 d)). Qed.
Lemma lem4539352 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (d : _107639) (h1 : term230 _107639 _107642 _53776 d) : term1529 _107639 _107642 _53776 d.
Proof. exact (EQ_MP (@lem4539351 _107639 _107642 _53776 d) (@lem4533070 _107639 _107642 _53776 d h1)). Qed.
Lemma lem4539660 {_107639 : Type'} (s : _107639 -> Prop) (n : nat) : (term1530 _107639 s n) = (term1531 _107639 s n).
Proof. exact (@lem17045 (@FINITE _107639 s) ((@CARD _107639 s) = n)). Qed.
Lemma lem4539666 {_107639 : Type'} (s : _107639 -> Prop) (n : nat) : (term1532 _107639 s n) = (term1532 _107639 s n).
Proof. exact (eq_refl (term1532 _107639 s n)). Qed.
Lemma lem4539668 {_107639 : Type'} (s : _107639 -> Prop) (n : nat) : (term1533 _107639 s n) = (term1533 _107639 s n).
Proof. exact (eq_refl (term1533 _107639 s n)). Qed.
Lemma lem4539669 {_107639 : Type'} (s : _107639 -> Prop) (n : nat) : (term1534 _107639 s n) = (term1535 _107639 s n).
Proof. exact (MK_COMB (@lem4539668 _107639 s n) (@lem4539660 _107639 s n)). Qed.
Lemma lem4539670 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4539671 {_107639 : Type'} (s : _107639 -> Prop) (n : nat) : (term1536 _107639 s n) = (term1537 _107639 s n).
Proof. exact (MK_COMB (@lem4539670) (@lem4539669 _107639 s n)). Qed.
Lemma lem4539672 {_107639 : Type'} (s : _107639 -> Prop) (n : nat) : (term1538 _107639 s n) = (term1539 _107639 s n).
Proof. exact (MK_COMB (@lem4539671 _107639 s n) (@lem4539666 _107639 s n)). Qed.
Lemma lem4539673 {_107639 : Type'} (s : _107639 -> Prop) (n : nat) : ((@HAS_SIZE _107639 s n) = (term206 _107639 s n)) = (term1538 _107639 s n).
Proof. exact (@lem17784 (@HAS_SIZE _107639 s n) (term206 _107639 s n)). Qed.
Lemma lem4539674 {_107639 : Type'} (s : _107639 -> Prop) (n : nat) : ((@HAS_SIZE _107639 s n) = (term206 _107639 s n)) = (term1539 _107639 s n).
Proof. exact (TRANS (@lem4539673 _107639 s n) (@lem4539672 _107639 s n)). Qed.
Lemma lem4539675 {_107639 : Type'} (s : _107639 -> Prop) : (term207 _107639 s) = (term1540 _107639 s).
Proof. exact (fun_ext (fun n : nat => @lem4539674 _107639 s n)). Qed.
Lemma lem4539676 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4539677 {_107639 : Type'} (s : _107639 -> Prop) : (term208 _107639 s) = (term1541 _107639 s).
Proof. exact (MK_COMB (@lem4539676) (@lem4539675 _107639 s)). Qed.
Lemma lem4539678 {_107639 : Type'} : (term209 _107639) = (term1542 _107639).
Proof. exact (fun_ext (fun s : _107639 -> Prop => @lem4539677 _107639 s)). Qed.
Lemma lem4539679 {_107639 : Type'} : (@all (_107639 -> Prop)) = (@all (_107639 -> Prop)).
Proof. exact (eq_refl (@all (_107639 -> Prop))). Qed.
Lemma lem4539680 {_107639 : Type'} : (term14 _107639) = (term1543 _107639).
Proof. exact (MK_COMB (@lem4539679 _107639) (@lem4539678 _107639)). Qed.
Lemma lem4539686 {A : Type'} (P : A -> Prop) (Q : A -> Prop) : (term793 A P Q) = (term794 A P Q).
Proof. exact (EQ_MP (@lem18953 A P Q) (@lem18952 A P Q)). Qed.
Lemma lem4539687 (P : nat -> Prop) (Q : nat -> Prop) : (term819 P Q) = (term820 P Q).
Proof. exact (@lem4539686 nat P Q). Qed.
Lemma lem4539688 {_107639 : Type'} (s : _107639 -> Prop) : (term1544 _107639 s) = (term1545 _107639 s).
Proof. exact (@lem4539687 (term1546 _107639 s) (term1547 _107639 s)). Qed.
Lemma lem4539689 {_107639 : Type'} (s : _107639 -> Prop) (n : nat) : (term1548 _107639 s n) = (term1535 _107639 s n).
Proof. exact (eq_refl (term1548 _107639 s n)). Qed.
Lemma lem4539690 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4539691 {_107639 : Type'} (s : _107639 -> Prop) (n : nat) : (term1549 _107639 s n) = (term1537 _107639 s n).
Proof. exact (MK_COMB (@lem4539690) (@lem4539689 _107639 s n)). Qed.
Lemma lem4539692 {_107639 : Type'} (s : _107639 -> Prop) (n : nat) : (term1550 _107639 s n) = (term1532 _107639 s n).
Proof. exact (eq_refl (term1550 _107639 s n)). Qed.
Lemma lem4539693 {_107639 : Type'} (s : _107639 -> Prop) (n : nat) : (term1551 _107639 s n) = (term1539 _107639 s n).
Proof. exact (MK_COMB (@lem4539691 _107639 s n) (@lem4539692 _107639 s n)). Qed.
Lemma lem4539694 {_107639 : Type'} (s : _107639 -> Prop) : (term1552 _107639 s) = (term1540 _107639 s).
Proof. exact (fun_ext (fun n : nat => @lem4539693 _107639 s n)). Qed.
Lemma lem4539695 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4539696 {_107639 : Type'} (s : _107639 -> Prop) : (term1544 _107639 s) = (term1541 _107639 s).
Proof. exact (MK_COMB (@lem4539695) (@lem4539694 _107639 s)). Qed.
Lemma lem4539697 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4539698 {_107639 : Type'} (s : _107639 -> Prop) : (term1553 _107639 s) = (term1554 _107639 s).
Proof. exact (MK_COMB (@lem4539697) (@lem4539696 _107639 s)). Qed.
Lemma lem4539699 {_107639 : Type'} (s : _107639 -> Prop) (n : nat) : (term1548 _107639 s n) = (term1535 _107639 s n).
Proof. exact (eq_refl (term1548 _107639 s n)). Qed.
Lemma lem4539700 {_107639 : Type'} (s : _107639 -> Prop) : (term1555 _107639 s) = (term1546 _107639 s).
Proof. exact (fun_ext (fun n : nat => @lem4539699 _107639 s n)). Qed.
Lemma lem4539701 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4539702 {_107639 : Type'} (s : _107639 -> Prop) : (term1556 _107639 s) = (term1557 _107639 s).
Proof. exact (MK_COMB (@lem4539701) (@lem4539700 _107639 s)). Qed.
Lemma lem4539703 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4539704 {_107639 : Type'} (s : _107639 -> Prop) : (term1558 _107639 s) = (term1559 _107639 s).
Proof. exact (MK_COMB (@lem4539703) (@lem4539702 _107639 s)). Qed.
Lemma lem4539705 {_107639 : Type'} (s : _107639 -> Prop) (n : nat) : (term1550 _107639 s n) = (term1532 _107639 s n).
Proof. exact (eq_refl (term1550 _107639 s n)). Qed.
Lemma lem4539706 {_107639 : Type'} (s : _107639 -> Prop) : (term1560 _107639 s) = (term1547 _107639 s).
Proof. exact (fun_ext (fun n : nat => @lem4539705 _107639 s n)). Qed.
Lemma lem4539707 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4539708 {_107639 : Type'} (s : _107639 -> Prop) : (term1561 _107639 s) = (term1562 _107639 s).
Proof. exact (MK_COMB (@lem4539707) (@lem4539706 _107639 s)). Qed.
Lemma lem4539709 {_107639 : Type'} (s : _107639 -> Prop) : (term1545 _107639 s) = (term1563 _107639 s).
Proof. exact (MK_COMB (@lem4539704 _107639 s) (@lem4539708 _107639 s)). Qed.
Lemma lem4539710 {_107639 : Type'} (s : _107639 -> Prop) : ((term1544 _107639 s) = (term1545 _107639 s)) = ((term1541 _107639 s) = (term1563 _107639 s)).
Proof. exact (MK_COMB (@lem4539698 _107639 s) (@lem4539709 _107639 s)). Qed.
Lemma lem4539711 {_107639 : Type'} (s : _107639 -> Prop) : (term1541 _107639 s) = (term1563 _107639 s).
Proof. exact (EQ_MP (@lem4539710 _107639 s) (@lem4539688 _107639 s)). Qed.
Lemma lem4539808 {_107639 : Type'} : (term1542 _107639) = (term1564 _107639).
Proof. exact (fun_ext (fun s : _107639 -> Prop => @lem4539711 _107639 s)). Qed.
Lemma lem4539809 {_107639 : Type'} : (@all (_107639 -> Prop)) = (@all (_107639 -> Prop)).
Proof. exact (eq_refl (@all (_107639 -> Prop))). Qed.
Lemma lem4539810 {_107639 : Type'} : (term1543 _107639) = (term1565 _107639).
Proof. exact (MK_COMB (@lem4539809 _107639) (@lem4539808 _107639)). Qed.
Lemma lem4539812 {A : Type'} (P : A -> Prop) (Q : A -> Prop) : (term793 A P Q) = (term794 A P Q).
Proof. exact (EQ_MP (@lem18953 A P Q) (@lem18952 A P Q)). Qed.
Lemma lem4539813 {_107639 : Type'} (P : type686 _107639) (Q : type686 _107639) : (term843 _107639 P Q) = (term844 _107639 P Q).
Proof. exact (@lem4539812 (_107639 -> Prop) P Q). Qed.
Lemma lem4539814 {_107639 : Type'} : (term1566 _107639) = (term1567 _107639).
Proof. exact (@lem4539813 _107639 (term1568 _107639) (term1569 _107639)). Qed.
Lemma lem4539815 {_107639 : Type'} (s : _107639 -> Prop) : (term1570 _107639 s) = (term1557 _107639 s).
Proof. exact (eq_refl (term1570 _107639 s)). Qed.
Lemma lem4539816 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4539817 {_107639 : Type'} (s : _107639 -> Prop) : (term1571 _107639 s) = (term1559 _107639 s).
Proof. exact (MK_COMB (@lem4539816) (@lem4539815 _107639 s)). Qed.
Lemma lem4539818 {_107639 : Type'} (s : _107639 -> Prop) : (term1572 _107639 s) = (term1562 _107639 s).
Proof. exact (eq_refl (term1572 _107639 s)). Qed.
Lemma lem4539819 {_107639 : Type'} (s : _107639 -> Prop) : (term1573 _107639 s) = (term1563 _107639 s).
Proof. exact (MK_COMB (@lem4539817 _107639 s) (@lem4539818 _107639 s)). Qed.
Lemma lem4539820 {_107639 : Type'} : (term1574 _107639) = (term1564 _107639).
Proof. exact (fun_ext (fun s : _107639 -> Prop => @lem4539819 _107639 s)). Qed.
Lemma lem4539821 {_107639 : Type'} : (@all (_107639 -> Prop)) = (@all (_107639 -> Prop)).
Proof. exact (eq_refl (@all (_107639 -> Prop))). Qed.
Lemma lem4539822 {_107639 : Type'} : (term1566 _107639) = (term1565 _107639).
Proof. exact (MK_COMB (@lem4539821 _107639) (@lem4539820 _107639)). Qed.
Lemma lem4539823 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4539824 {_107639 : Type'} : (term1575 _107639) = (term1576 _107639).
Proof. exact (MK_COMB (@lem4539823) (@lem4539822 _107639)). Qed.
Lemma lem4539825 {_107639 : Type'} (s : _107639 -> Prop) : (term1570 _107639 s) = (term1557 _107639 s).
Proof. exact (eq_refl (term1570 _107639 s)). Qed.
Lemma lem4539826 {_107639 : Type'} : (term1577 _107639) = (term1568 _107639).
Proof. exact (fun_ext (fun s : _107639 -> Prop => @lem4539825 _107639 s)). Qed.
Lemma lem4539827 {_107639 : Type'} : (@all (_107639 -> Prop)) = (@all (_107639 -> Prop)).
Proof. exact (eq_refl (@all (_107639 -> Prop))). Qed.
Lemma lem4539828 {_107639 : Type'} : (term1578 _107639) = (term1579 _107639).
Proof. exact (MK_COMB (@lem4539827 _107639) (@lem4539826 _107639)). Qed.
Lemma lem4539829 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4539830 {_107639 : Type'} : (term1580 _107639) = (term1581 _107639).
Proof. exact (MK_COMB (@lem4539829) (@lem4539828 _107639)). Qed.
Lemma lem4539831 {_107639 : Type'} (s : _107639 -> Prop) : (term1572 _107639 s) = (term1562 _107639 s).
Proof. exact (eq_refl (term1572 _107639 s)). Qed.
Lemma lem4539832 {_107639 : Type'} : (term1582 _107639) = (term1569 _107639).
Proof. exact (fun_ext (fun s : _107639 -> Prop => @lem4539831 _107639 s)). Qed.
Lemma lem4539833 {_107639 : Type'} : (@all (_107639 -> Prop)) = (@all (_107639 -> Prop)).
Proof. exact (eq_refl (@all (_107639 -> Prop))). Qed.
Lemma lem4539834 {_107639 : Type'} : (term1583 _107639) = (term1584 _107639).
Proof. exact (MK_COMB (@lem4539833 _107639) (@lem4539832 _107639)). Qed.
Lemma lem4539835 {_107639 : Type'} : (term1567 _107639) = (term1585 _107639).
Proof. exact (MK_COMB (@lem4539830 _107639) (@lem4539834 _107639)). Qed.
Lemma lem4539836 {_107639 : Type'} : ((term1566 _107639) = (term1567 _107639)) = ((term1565 _107639) = (term1585 _107639)).
Proof. exact (MK_COMB (@lem4539824 _107639) (@lem4539835 _107639)). Qed.
Lemma lem4539837 {_107639 : Type'} : (term1565 _107639) = (term1585 _107639).
Proof. exact (EQ_MP (@lem4539836 _107639) (@lem4539814 _107639)). Qed.
Lemma lem4539944 {_107639 : Type'} : (term1543 _107639) = (term1585 _107639).
Proof. exact (TRANS (@lem4539810 _107639) (@lem4539837 _107639)). Qed.
Lemma lem4539945 {_107639 : Type'} : (term14 _107639) = (term1585 _107639).
Proof. exact (TRANS (@lem4539680 _107639) (@lem4539944 _107639)). Qed.
Lemma lem4539946 {_107639 : Type'} (h1 : term14 _107639) : term1585 _107639.
Proof. exact (EQ_MP (@lem4539945 _107639) (@lem4533072 _107639 h1)). Qed.
Lemma lem4539957 {_107642 : Type'} (s : _107642 -> Prop) (n : nat) : (term1530 _107642 s n) = (term1531 _107642 s n).
Proof. exact (@lem17045 (@FINITE _107642 s) ((@CARD _107642 s) = n)). Qed.
Lemma lem4539963 {_107642 : Type'} (s : _107642 -> Prop) (n : nat) : (term1532 _107642 s n) = (term1532 _107642 s n).
Proof. exact (eq_refl (term1532 _107642 s n)). Qed.
Lemma lem4539965 {_107642 : Type'} (s : _107642 -> Prop) (n : nat) : (term1533 _107642 s n) = (term1533 _107642 s n).
Proof. exact (eq_refl (term1533 _107642 s n)). Qed.
Lemma lem4539966 {_107642 : Type'} (s : _107642 -> Prop) (n : nat) : (term1534 _107642 s n) = (term1535 _107642 s n).
Proof. exact (MK_COMB (@lem4539965 _107642 s n) (@lem4539957 _107642 s n)). Qed.
Lemma lem4539967 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4539968 {_107642 : Type'} (s : _107642 -> Prop) (n : nat) : (term1536 _107642 s n) = (term1537 _107642 s n).
Proof. exact (MK_COMB (@lem4539967) (@lem4539966 _107642 s n)). Qed.
Lemma lem4539969 {_107642 : Type'} (s : _107642 -> Prop) (n : nat) : (term1538 _107642 s n) = (term1539 _107642 s n).
Proof. exact (MK_COMB (@lem4539968 _107642 s n) (@lem4539963 _107642 s n)). Qed.
Lemma lem4539970 {_107642 : Type'} (s : _107642 -> Prop) (n : nat) : ((@HAS_SIZE _107642 s n) = (term206 _107642 s n)) = (term1538 _107642 s n).
Proof. exact (@lem17784 (@HAS_SIZE _107642 s n) (term206 _107642 s n)). Qed.
Lemma lem4539971 {_107642 : Type'} (s : _107642 -> Prop) (n : nat) : ((@HAS_SIZE _107642 s n) = (term206 _107642 s n)) = (term1539 _107642 s n).
Proof. exact (TRANS (@lem4539970 _107642 s n) (@lem4539969 _107642 s n)). Qed.
Lemma lem4539972 {_107642 : Type'} (s : _107642 -> Prop) : (term207 _107642 s) = (term1540 _107642 s).
Proof. exact (fun_ext (fun n : nat => @lem4539971 _107642 s n)). Qed.
Lemma lem4539973 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4539974 {_107642 : Type'} (s : _107642 -> Prop) : (term208 _107642 s) = (term1541 _107642 s).
Proof. exact (MK_COMB (@lem4539973) (@lem4539972 _107642 s)). Qed.
Lemma lem4539975 {_107642 : Type'} : (term209 _107642) = (term1542 _107642).
Proof. exact (fun_ext (fun s : _107642 -> Prop => @lem4539974 _107642 s)). Qed.
Lemma lem4539976 {_107642 : Type'} : (@all (_107642 -> Prop)) = (@all (_107642 -> Prop)).
Proof. exact (eq_refl (@all (_107642 -> Prop))). Qed.
Lemma lem4539977 {_107642 : Type'} : (term14 _107642) = (term1543 _107642).
Proof. exact (MK_COMB (@lem4539976 _107642) (@lem4539975 _107642)). Qed.
Lemma lem4539983 {A : Type'} (P : A -> Prop) (Q : A -> Prop) : (term793 A P Q) = (term794 A P Q).
Proof. exact (EQ_MP (@lem18953 A P Q) (@lem18952 A P Q)). Qed.
Lemma lem4539984 (P : nat -> Prop) (Q : nat -> Prop) : (term819 P Q) = (term820 P Q).
Proof. exact (@lem4539983 nat P Q). Qed.
Lemma lem4539985 {_107642 : Type'} (s : _107642 -> Prop) : (term1544 _107642 s) = (term1545 _107642 s).
Proof. exact (@lem4539984 (term1546 _107642 s) (term1547 _107642 s)). Qed.
Lemma lem4539986 {_107642 : Type'} (s : _107642 -> Prop) (n : nat) : (term1548 _107642 s n) = (term1535 _107642 s n).
Proof. exact (eq_refl (term1548 _107642 s n)). Qed.
Lemma lem4539987 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4539988 {_107642 : Type'} (s : _107642 -> Prop) (n : nat) : (term1549 _107642 s n) = (term1537 _107642 s n).
Proof. exact (MK_COMB (@lem4539987) (@lem4539986 _107642 s n)). Qed.
Lemma lem4539989 {_107642 : Type'} (s : _107642 -> Prop) (n : nat) : (term1550 _107642 s n) = (term1532 _107642 s n).
Proof. exact (eq_refl (term1550 _107642 s n)). Qed.
Lemma lem4539990 {_107642 : Type'} (s : _107642 -> Prop) (n : nat) : (term1551 _107642 s n) = (term1539 _107642 s n).
Proof. exact (MK_COMB (@lem4539988 _107642 s n) (@lem4539989 _107642 s n)). Qed.
Lemma lem4539991 {_107642 : Type'} (s : _107642 -> Prop) : (term1552 _107642 s) = (term1540 _107642 s).
Proof. exact (fun_ext (fun n : nat => @lem4539990 _107642 s n)). Qed.
Lemma lem4539992 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4539993 {_107642 : Type'} (s : _107642 -> Prop) : (term1544 _107642 s) = (term1541 _107642 s).
Proof. exact (MK_COMB (@lem4539992) (@lem4539991 _107642 s)). Qed.
Lemma lem4539994 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4539995 {_107642 : Type'} (s : _107642 -> Prop) : (term1553 _107642 s) = (term1554 _107642 s).
Proof. exact (MK_COMB (@lem4539994) (@lem4539993 _107642 s)). Qed.
Lemma lem4539996 {_107642 : Type'} (s : _107642 -> Prop) (n : nat) : (term1548 _107642 s n) = (term1535 _107642 s n).
Proof. exact (eq_refl (term1548 _107642 s n)). Qed.
Lemma lem4539997 {_107642 : Type'} (s : _107642 -> Prop) : (term1555 _107642 s) = (term1546 _107642 s).
Proof. exact (fun_ext (fun n : nat => @lem4539996 _107642 s n)). Qed.
Lemma lem4539998 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4539999 {_107642 : Type'} (s : _107642 -> Prop) : (term1556 _107642 s) = (term1557 _107642 s).
Proof. exact (MK_COMB (@lem4539998) (@lem4539997 _107642 s)). Qed.
Lemma lem4540000 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4540001 {_107642 : Type'} (s : _107642 -> Prop) : (term1558 _107642 s) = (term1559 _107642 s).
Proof. exact (MK_COMB (@lem4540000) (@lem4539999 _107642 s)). Qed.
Lemma lem4540002 {_107642 : Type'} (s : _107642 -> Prop) (n : nat) : (term1550 _107642 s n) = (term1532 _107642 s n).
Proof. exact (eq_refl (term1550 _107642 s n)). Qed.
Lemma lem4540003 {_107642 : Type'} (s : _107642 -> Prop) : (term1560 _107642 s) = (term1547 _107642 s).
Proof. exact (fun_ext (fun n : nat => @lem4540002 _107642 s n)). Qed.
Lemma lem4540004 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4540005 {_107642 : Type'} (s : _107642 -> Prop) : (term1561 _107642 s) = (term1562 _107642 s).
Proof. exact (MK_COMB (@lem4540004) (@lem4540003 _107642 s)). Qed.
Lemma lem4540006 {_107642 : Type'} (s : _107642 -> Prop) : (term1545 _107642 s) = (term1563 _107642 s).
Proof. exact (MK_COMB (@lem4540001 _107642 s) (@lem4540005 _107642 s)). Qed.
Lemma lem4540007 {_107642 : Type'} (s : _107642 -> Prop) : ((term1544 _107642 s) = (term1545 _107642 s)) = ((term1541 _107642 s) = (term1563 _107642 s)).
Proof. exact (MK_COMB (@lem4539995 _107642 s) (@lem4540006 _107642 s)). Qed.
Lemma lem4540008 {_107642 : Type'} (s : _107642 -> Prop) : (term1541 _107642 s) = (term1563 _107642 s).
Proof. exact (EQ_MP (@lem4540007 _107642 s) (@lem4539985 _107642 s)). Qed.
Lemma lem4540105 {_107642 : Type'} : (term1542 _107642) = (term1564 _107642).
Proof. exact (fun_ext (fun s : _107642 -> Prop => @lem4540008 _107642 s)). Qed.
Lemma lem4540106 {_107642 : Type'} : (@all (_107642 -> Prop)) = (@all (_107642 -> Prop)).
Proof. exact (eq_refl (@all (_107642 -> Prop))). Qed.
Lemma lem4540107 {_107642 : Type'} : (term1543 _107642) = (term1565 _107642).
Proof. exact (MK_COMB (@lem4540106 _107642) (@lem4540105 _107642)). Qed.
Lemma lem4540109 {A : Type'} (P : A -> Prop) (Q : A -> Prop) : (term793 A P Q) = (term794 A P Q).
Proof. exact (EQ_MP (@lem18953 A P Q) (@lem18952 A P Q)). Qed.
Lemma lem4540110 {_107642 : Type'} (P : type686 _107642) (Q : type686 _107642) : (term843 _107642 P Q) = (term844 _107642 P Q).
Proof. exact (@lem4540109 (_107642 -> Prop) P Q). Qed.
Lemma lem4540111 {_107642 : Type'} : (term1566 _107642) = (term1567 _107642).
Proof. exact (@lem4540110 _107642 (term1568 _107642) (term1569 _107642)). Qed.
Lemma lem4540112 {_107642 : Type'} (s : _107642 -> Prop) : (term1570 _107642 s) = (term1557 _107642 s).
Proof. exact (eq_refl (term1570 _107642 s)). Qed.
Lemma lem4540113 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4540114 {_107642 : Type'} (s : _107642 -> Prop) : (term1571 _107642 s) = (term1559 _107642 s).
Proof. exact (MK_COMB (@lem4540113) (@lem4540112 _107642 s)). Qed.
Lemma lem4540115 {_107642 : Type'} (s : _107642 -> Prop) : (term1572 _107642 s) = (term1562 _107642 s).
Proof. exact (eq_refl (term1572 _107642 s)). Qed.
Lemma lem4540116 {_107642 : Type'} (s : _107642 -> Prop) : (term1573 _107642 s) = (term1563 _107642 s).
Proof. exact (MK_COMB (@lem4540114 _107642 s) (@lem4540115 _107642 s)). Qed.
Lemma lem4540117 {_107642 : Type'} : (term1574 _107642) = (term1564 _107642).
Proof. exact (fun_ext (fun s : _107642 -> Prop => @lem4540116 _107642 s)). Qed.
Lemma lem4540118 {_107642 : Type'} : (@all (_107642 -> Prop)) = (@all (_107642 -> Prop)).
Proof. exact (eq_refl (@all (_107642 -> Prop))). Qed.
Lemma lem4540119 {_107642 : Type'} : (term1566 _107642) = (term1565 _107642).
Proof. exact (MK_COMB (@lem4540118 _107642) (@lem4540117 _107642)). Qed.
Lemma lem4540120 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4540121 {_107642 : Type'} : (term1575 _107642) = (term1576 _107642).
Proof. exact (MK_COMB (@lem4540120) (@lem4540119 _107642)). Qed.
Lemma lem4540122 {_107642 : Type'} (s : _107642 -> Prop) : (term1570 _107642 s) = (term1557 _107642 s).
Proof. exact (eq_refl (term1570 _107642 s)). Qed.
Lemma lem4540123 {_107642 : Type'} : (term1577 _107642) = (term1568 _107642).
Proof. exact (fun_ext (fun s : _107642 -> Prop => @lem4540122 _107642 s)). Qed.
Lemma lem4540124 {_107642 : Type'} : (@all (_107642 -> Prop)) = (@all (_107642 -> Prop)).
Proof. exact (eq_refl (@all (_107642 -> Prop))). Qed.
Lemma lem4540125 {_107642 : Type'} : (term1578 _107642) = (term1579 _107642).
Proof. exact (MK_COMB (@lem4540124 _107642) (@lem4540123 _107642)). Qed.
Lemma lem4540126 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4540127 {_107642 : Type'} : (term1580 _107642) = (term1581 _107642).
Proof. exact (MK_COMB (@lem4540126) (@lem4540125 _107642)). Qed.
Lemma lem4540128 {_107642 : Type'} (s : _107642 -> Prop) : (term1572 _107642 s) = (term1562 _107642 s).
Proof. exact (eq_refl (term1572 _107642 s)). Qed.
Lemma lem4540129 {_107642 : Type'} : (term1582 _107642) = (term1569 _107642).
Proof. exact (fun_ext (fun s : _107642 -> Prop => @lem4540128 _107642 s)). Qed.
Lemma lem4540130 {_107642 : Type'} : (@all (_107642 -> Prop)) = (@all (_107642 -> Prop)).
Proof. exact (eq_refl (@all (_107642 -> Prop))). Qed.
Lemma lem4540131 {_107642 : Type'} : (term1583 _107642) = (term1584 _107642).
Proof. exact (MK_COMB (@lem4540130 _107642) (@lem4540129 _107642)). Qed.
Lemma lem4540132 {_107642 : Type'} : (term1567 _107642) = (term1585 _107642).
Proof. exact (MK_COMB (@lem4540127 _107642) (@lem4540131 _107642)). Qed.
Lemma lem4540133 {_107642 : Type'} : ((term1566 _107642) = (term1567 _107642)) = ((term1565 _107642) = (term1585 _107642)).
Proof. exact (MK_COMB (@lem4540121 _107642) (@lem4540132 _107642)). Qed.
Lemma lem4540134 {_107642 : Type'} : (term1565 _107642) = (term1585 _107642).
Proof. exact (EQ_MP (@lem4540133 _107642) (@lem4540111 _107642)). Qed.
Lemma lem4540241 {_107642 : Type'} : (term1543 _107642) = (term1585 _107642).
Proof. exact (TRANS (@lem4540107 _107642) (@lem4540134 _107642)). Qed.
Lemma lem4540242 {_107642 : Type'} : (term14 _107642) = (term1585 _107642).
Proof. exact (TRANS (@lem4539977 _107642) (@lem4540241 _107642)). Qed.
Lemma lem4540243 {_107642 : Type'} (h1 : term14 _107642) : term1585 _107642.
Proof. exact (EQ_MP (@lem4540242 _107642) (@lem4533073 _107642 h1)). Qed.
Lemma lem4541145 {_107639 _107642 : Type'} (s : type805 _107639 _107642) (n : nat) : (term1586 _107639 _107642 s n) = (term1587 _107639 _107642 s n).
Proof. exact (@lem17045 (@FINITE (_107642 -> _107639) s) ((@CARD (_107642 -> _107639) s) = n)). Qed.
Lemma lem4541151 {_107639 _107642 : Type'} (s : type805 _107639 _107642) (n : nat) : (term1588 _107639 _107642 s n) = (term1588 _107639 _107642 s n).
Proof. exact (eq_refl (term1588 _107639 _107642 s n)). Qed.
Lemma lem4541153 {_107639 _107642 : Type'} (s : type805 _107639 _107642) (n : nat) : (term1589 _107639 _107642 s n) = (term1589 _107639 _107642 s n).
Proof. exact (eq_refl (term1589 _107639 _107642 s n)). Qed.
Lemma lem4541154 {_107639 _107642 : Type'} (s : type805 _107639 _107642) (n : nat) : (term1590 _107639 _107642 s n) = (term1591 _107639 _107642 s n).
Proof. exact (MK_COMB (@lem4541153 _107639 _107642 s n) (@lem4541145 _107639 _107642 s n)). Qed.
Lemma lem4541155 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4541156 {_107639 _107642 : Type'} (s : type805 _107639 _107642) (n : nat) : (term1592 _107639 _107642 s n) = (term1593 _107639 _107642 s n).
Proof. exact (MK_COMB (@lem4541155) (@lem4541154 _107639 _107642 s n)). Qed.
Lemma lem4541157 {_107639 _107642 : Type'} (s : type805 _107639 _107642) (n : nat) : (term1594 _107639 _107642 s n) = (term1595 _107639 _107642 s n).
Proof. exact (MK_COMB (@lem4541156 _107639 _107642 s n) (@lem4541151 _107639 _107642 s n)). Qed.
Lemma lem4541158 {_107639 _107642 : Type'} (s : type805 _107639 _107642) (n : nat) : ((@HAS_SIZE (_107642 -> _107639) s n) = (term197 _107639 _107642 s n)) = (term1594 _107639 _107642 s n).
Proof. exact (@lem17784 (@HAS_SIZE (_107642 -> _107639) s n) (term197 _107639 _107642 s n)). Qed.
Lemma lem4541159 {_107639 _107642 : Type'} (s : type805 _107639 _107642) (n : nat) : ((@HAS_SIZE (_107642 -> _107639) s n) = (term197 _107639 _107642 s n)) = (term1595 _107639 _107642 s n).
Proof. exact (TRANS (@lem4541158 _107639 _107642 s n) (@lem4541157 _107639 _107642 s n)). Qed.
Lemma lem4541160 {_107639 _107642 : Type'} (s : type805 _107639 _107642) : (term198 _107639 _107642 s) = (term1596 _107639 _107642 s).
Proof. exact (fun_ext (fun n : nat => @lem4541159 _107639 _107642 s n)). Qed.
Lemma lem4541161 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4541162 {_107639 _107642 : Type'} (s : type805 _107639 _107642) : (term199 _107639 _107642 s) = (term1597 _107639 _107642 s).
Proof. exact (MK_COMB (@lem4541161) (@lem4541160 _107639 _107642 s)). Qed.
Lemma lem4541163 {_107639 _107642 : Type'} : (term200 _107639 _107642) = (term1598 _107639 _107642).
Proof. exact (fun_ext (fun s : type805 _107639 _107642 => @lem4541162 _107639 _107642 s)). Qed.
Lemma lem4541164 {_107639 _107642 : Type'} : (@all ((_107642 -> _107639) -> Prop)) = (@all ((_107642 -> _107639) -> Prop)).
Proof. exact (eq_refl (@all ((_107642 -> _107639) -> Prop))). Qed.
Lemma lem4541165 {_107639 _107642 : Type'} : (term18 _107639 _107642) = (term1599 _107639 _107642).
Proof. exact (MK_COMB (@lem4541164 _107639 _107642) (@lem4541163 _107639 _107642)). Qed.
Lemma lem4541171 {A : Type'} (P : A -> Prop) (Q : A -> Prop) : (term793 A P Q) = (term794 A P Q).
Proof. exact (EQ_MP (@lem18953 A P Q) (@lem18952 A P Q)). Qed.
Lemma lem4541172 (P : nat -> Prop) (Q : nat -> Prop) : (term819 P Q) = (term820 P Q).
Proof. exact (@lem4541171 nat P Q). Qed.
Lemma lem4541173 {_107639 _107642 : Type'} (s : type805 _107639 _107642) : (term1600 _107639 _107642 s) = (term1601 _107639 _107642 s).
Proof. exact (@lem4541172 (term1602 _107639 _107642 s) (term1603 _107639 _107642 s)). Qed.
Lemma lem4541174 {_107639 _107642 : Type'} (s : type805 _107639 _107642) (n : nat) : (term1604 _107639 _107642 s n) = (term1591 _107639 _107642 s n).
Proof. exact (eq_refl (term1604 _107639 _107642 s n)). Qed.
Lemma lem4541175 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4541176 {_107639 _107642 : Type'} (s : type805 _107639 _107642) (n : nat) : (term1605 _107639 _107642 s n) = (term1593 _107639 _107642 s n).
Proof. exact (MK_COMB (@lem4541175) (@lem4541174 _107639 _107642 s n)). Qed.
Lemma lem4541177 {_107639 _107642 : Type'} (s : type805 _107639 _107642) (n : nat) : (term1606 _107639 _107642 s n) = (term1588 _107639 _107642 s n).
Proof. exact (eq_refl (term1606 _107639 _107642 s n)). Qed.
Lemma lem4541178 {_107639 _107642 : Type'} (s : type805 _107639 _107642) (n : nat) : (term1607 _107639 _107642 s n) = (term1595 _107639 _107642 s n).
Proof. exact (MK_COMB (@lem4541176 _107639 _107642 s n) (@lem4541177 _107639 _107642 s n)). Qed.
Lemma lem4541179 {_107639 _107642 : Type'} (s : type805 _107639 _107642) : (term1608 _107639 _107642 s) = (term1596 _107639 _107642 s).
Proof. exact (fun_ext (fun n : nat => @lem4541178 _107639 _107642 s n)). Qed.
Lemma lem4541180 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4541181 {_107639 _107642 : Type'} (s : type805 _107639 _107642) : (term1600 _107639 _107642 s) = (term1597 _107639 _107642 s).
Proof. exact (MK_COMB (@lem4541180) (@lem4541179 _107639 _107642 s)). Qed.
Lemma lem4541182 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4541183 {_107639 _107642 : Type'} (s : type805 _107639 _107642) : (term1609 _107639 _107642 s) = (term1610 _107639 _107642 s).
Proof. exact (MK_COMB (@lem4541182) (@lem4541181 _107639 _107642 s)). Qed.
Lemma lem4541184 {_107639 _107642 : Type'} (s : type805 _107639 _107642) (n : nat) : (term1604 _107639 _107642 s n) = (term1591 _107639 _107642 s n).
Proof. exact (eq_refl (term1604 _107639 _107642 s n)). Qed.
Lemma lem4541185 {_107639 _107642 : Type'} (s : type805 _107639 _107642) : (term1611 _107639 _107642 s) = (term1602 _107639 _107642 s).
Proof. exact (fun_ext (fun n : nat => @lem4541184 _107639 _107642 s n)). Qed.
Lemma lem4541186 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4541187 {_107639 _107642 : Type'} (s : type805 _107639 _107642) : (term1612 _107639 _107642 s) = (term1613 _107639 _107642 s).
Proof. exact (MK_COMB (@lem4541186) (@lem4541185 _107639 _107642 s)). Qed.
Lemma lem4541188 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4541189 {_107639 _107642 : Type'} (s : type805 _107639 _107642) : (term1614 _107639 _107642 s) = (term1615 _107639 _107642 s).
Proof. exact (MK_COMB (@lem4541188) (@lem4541187 _107639 _107642 s)). Qed.
Lemma lem4541190 {_107639 _107642 : Type'} (s : type805 _107639 _107642) (n : nat) : (term1606 _107639 _107642 s n) = (term1588 _107639 _107642 s n).
Proof. exact (eq_refl (term1606 _107639 _107642 s n)). Qed.
Lemma lem4541191 {_107639 _107642 : Type'} (s : type805 _107639 _107642) : (term1616 _107639 _107642 s) = (term1603 _107639 _107642 s).
Proof. exact (fun_ext (fun n : nat => @lem4541190 _107639 _107642 s n)). Qed.
Lemma lem4541192 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4541193 {_107639 _107642 : Type'} (s : type805 _107639 _107642) : (term1617 _107639 _107642 s) = (term1618 _107639 _107642 s).
Proof. exact (MK_COMB (@lem4541192) (@lem4541191 _107639 _107642 s)). Qed.
Lemma lem4541194 {_107639 _107642 : Type'} (s : type805 _107639 _107642) : (term1601 _107639 _107642 s) = (term1619 _107639 _107642 s).
Proof. exact (MK_COMB (@lem4541189 _107639 _107642 s) (@lem4541193 _107639 _107642 s)). Qed.
Lemma lem4541195 {_107639 _107642 : Type'} (s : type805 _107639 _107642) : ((term1600 _107639 _107642 s) = (term1601 _107639 _107642 s)) = ((term1597 _107639 _107642 s) = (term1619 _107639 _107642 s)).
Proof. exact (MK_COMB (@lem4541183 _107639 _107642 s) (@lem4541194 _107639 _107642 s)). Qed.
Lemma lem4541196 {_107639 _107642 : Type'} (s : type805 _107639 _107642) : (term1597 _107639 _107642 s) = (term1619 _107639 _107642 s).
Proof. exact (EQ_MP (@lem4541195 _107639 _107642 s) (@lem4541173 _107639 _107642 s)). Qed.
Lemma lem4541293 {_107639 _107642 : Type'} : (term1598 _107639 _107642) = (term1620 _107639 _107642).
Proof. exact (fun_ext (fun s : type805 _107639 _107642 => @lem4541196 _107639 _107642 s)). Qed.
Lemma lem4541294 {_107639 _107642 : Type'} : (@all ((_107642 -> _107639) -> Prop)) = (@all ((_107642 -> _107639) -> Prop)).
Proof. exact (eq_refl (@all ((_107642 -> _107639) -> Prop))). Qed.
Lemma lem4541295 {_107639 _107642 : Type'} : (term1599 _107639 _107642) = (term1621 _107639 _107642).
Proof. exact (MK_COMB (@lem4541294 _107639 _107642) (@lem4541293 _107639 _107642)). Qed.
Lemma lem4541297 {A : Type'} (P : A -> Prop) (Q : A -> Prop) : (term793 A P Q) = (term794 A P Q).
Proof. exact (EQ_MP (@lem18953 A P Q) (@lem18952 A P Q)). Qed.
Lemma lem4541298 {_107639 _107642 : Type'} (P : type207 _107639 _107642) (Q : type207 _107639 _107642) : (term1622 _107639 _107642 P Q) = (term1623 _107639 _107642 P Q).
Proof. exact (@lem4541297 (type805 _107639 _107642) P Q). Qed.
Lemma lem4541299 {_107639 _107642 : Type'} : (term1624 _107639 _107642) = (term1625 _107639 _107642).
Proof. exact (@lem4541298 _107639 _107642 (term1626 _107639 _107642) (term1627 _107639 _107642)). Qed.
Lemma lem4541300 {_107639 _107642 : Type'} (s : type805 _107639 _107642) : (term1628 _107639 _107642 s) = (term1613 _107639 _107642 s).
Proof. exact (eq_refl (term1628 _107639 _107642 s)). Qed.
Lemma lem4541301 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4541302 {_107639 _107642 : Type'} (s : type805 _107639 _107642) : (term1629 _107639 _107642 s) = (term1615 _107639 _107642 s).
Proof. exact (MK_COMB (@lem4541301) (@lem4541300 _107639 _107642 s)). Qed.
Lemma lem4541303 {_107639 _107642 : Type'} (s : type805 _107639 _107642) : (term1630 _107639 _107642 s) = (term1618 _107639 _107642 s).
Proof. exact (eq_refl (term1630 _107639 _107642 s)). Qed.
Lemma lem4541304 {_107639 _107642 : Type'} (s : type805 _107639 _107642) : (term1631 _107639 _107642 s) = (term1619 _107639 _107642 s).
Proof. exact (MK_COMB (@lem4541302 _107639 _107642 s) (@lem4541303 _107639 _107642 s)). Qed.
Lemma lem4541305 {_107639 _107642 : Type'} : (term1632 _107639 _107642) = (term1620 _107639 _107642).
Proof. exact (fun_ext (fun s : type805 _107639 _107642 => @lem4541304 _107639 _107642 s)). Qed.
Lemma lem4541306 {_107639 _107642 : Type'} : (@all ((_107642 -> _107639) -> Prop)) = (@all ((_107642 -> _107639) -> Prop)).
Proof. exact (eq_refl (@all ((_107642 -> _107639) -> Prop))). Qed.
Lemma lem4541307 {_107639 _107642 : Type'} : (term1624 _107639 _107642) = (term1621 _107639 _107642).
Proof. exact (MK_COMB (@lem4541306 _107639 _107642) (@lem4541305 _107639 _107642)). Qed.
Lemma lem4541308 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4541309 {_107639 _107642 : Type'} : (term1633 _107639 _107642) = (term1634 _107639 _107642).
Proof. exact (MK_COMB (@lem4541308) (@lem4541307 _107639 _107642)). Qed.
Lemma lem4541310 {_107639 _107642 : Type'} (s : type805 _107639 _107642) : (term1628 _107639 _107642 s) = (term1613 _107639 _107642 s).
Proof. exact (eq_refl (term1628 _107639 _107642 s)). Qed.
Lemma lem4541311 {_107639 _107642 : Type'} : (term1635 _107639 _107642) = (term1626 _107639 _107642).
Proof. exact (fun_ext (fun s : type805 _107639 _107642 => @lem4541310 _107639 _107642 s)). Qed.
Lemma lem4541312 {_107639 _107642 : Type'} : (@all ((_107642 -> _107639) -> Prop)) = (@all ((_107642 -> _107639) -> Prop)).
Proof. exact (eq_refl (@all ((_107642 -> _107639) -> Prop))). Qed.
Lemma lem4541313 {_107639 _107642 : Type'} : (term1636 _107639 _107642) = (term1637 _107639 _107642).
Proof. exact (MK_COMB (@lem4541312 _107639 _107642) (@lem4541311 _107639 _107642)). Qed.
Lemma lem4541314 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4541315 {_107639 _107642 : Type'} : (term1638 _107639 _107642) = (term1639 _107639 _107642).
Proof. exact (MK_COMB (@lem4541314) (@lem4541313 _107639 _107642)). Qed.
Lemma lem4541316 {_107639 _107642 : Type'} (s : type805 _107639 _107642) : (term1630 _107639 _107642 s) = (term1618 _107639 _107642 s).
Proof. exact (eq_refl (term1630 _107639 _107642 s)). Qed.
Lemma lem4541317 {_107639 _107642 : Type'} : (term1640 _107639 _107642) = (term1627 _107639 _107642).
Proof. exact (fun_ext (fun s : type805 _107639 _107642 => @lem4541316 _107639 _107642 s)). Qed.
Lemma lem4541318 {_107639 _107642 : Type'} : (@all ((_107642 -> _107639) -> Prop)) = (@all ((_107642 -> _107639) -> Prop)).
Proof. exact (eq_refl (@all ((_107642 -> _107639) -> Prop))). Qed.
Lemma lem4541319 {_107639 _107642 : Type'} : (term1641 _107639 _107642) = (term1642 _107639 _107642).
Proof. exact (MK_COMB (@lem4541318 _107639 _107642) (@lem4541317 _107639 _107642)). Qed.
Lemma lem4541320 {_107639 _107642 : Type'} : (term1625 _107639 _107642) = (term1643 _107639 _107642).
Proof. exact (MK_COMB (@lem4541315 _107639 _107642) (@lem4541319 _107639 _107642)). Qed.
Lemma lem4541321 {_107639 _107642 : Type'} : ((term1624 _107639 _107642) = (term1625 _107639 _107642)) = ((term1621 _107639 _107642) = (term1643 _107639 _107642)).
Proof. exact (MK_COMB (@lem4541309 _107639 _107642) (@lem4541320 _107639 _107642)). Qed.
Lemma lem4541322 {_107639 _107642 : Type'} : (term1621 _107639 _107642) = (term1643 _107639 _107642).
Proof. exact (EQ_MP (@lem4541321 _107639 _107642) (@lem4541299 _107639 _107642)). Qed.
Lemma lem4541429 {_107639 _107642 : Type'} : (term1599 _107639 _107642) = (term1643 _107639 _107642).
Proof. exact (TRANS (@lem4541295 _107639 _107642) (@lem4541322 _107639 _107642)). Qed.
Lemma lem4541430 {_107639 _107642 : Type'} : (term18 _107639 _107642) = (term1643 _107639 _107642).
Proof. exact (TRANS (@lem4541165 _107639 _107642) (@lem4541429 _107639 _107642)). Qed.
Lemma lem4541431 {_107639 _107642 : Type'} (h1 : term18 _107639 _107642) : term1643 _107639 _107642.
Proof. exact (EQ_MP (@lem4541430 _107639 _107642) (@lem4533077 _107639 _107642 h1)). Qed.
Lemma lem4543220 {_107639 _107642 : Type'} (s : _107642 -> Prop) (m : nat) (t : _107639 -> Prop) (n : nat) : (term1644 _107639 _107642 s m t n) = (term1645 _107639 _107642 s m t n).
Proof. exact (@lem17045 (@HAS_SIZE _107642 s m) (@HAS_SIZE _107639 t n)). Qed.
Lemma lem4543221 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (t : _107639 -> Prop) (s : _107642 -> Prop) (d : _107639) (n : nat) (m : nat) : (term168 _107639 _107642 _53776 t s d n m) = (term168 _107639 _107642 _53776 t s d n m).
Proof. exact (eq_refl (term168 _107639 _107642 _53776 t s d n m)). Qed.
Lemma lem4543222 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem4543223 {_107639 _107642 : Type'} (s : _107642 -> Prop) (m : nat) (t : _107639 -> Prop) (n : nat) : (term1646 _107639 _107642 s m t n) = (term1647 _107639 _107642 s m t n).
Proof. exact (MK_COMB (@lem4543222) (@lem4543220 _107639 _107642 s m t n)). Qed.
Lemma lem4543224 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (t : _107639 -> Prop) (s : _107642 -> Prop) (d : _107639) (n : nat) (m : nat) : (term1648 _107639 _107642 _53776 t s d n m) = (term1649 _107639 _107642 _53776 t s d n m).
Proof. exact (MK_COMB (@lem4543223 _107639 _107642 s m t n) (@lem4543221 _107639 _107642 _53776 t s d n m)). Qed.
Lemma lem4543225 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (t : _107639 -> Prop) (s : _107642 -> Prop) (d : _107639) (n : nat) (m : nat) : (term169 _107639 _107642 _53776 t s d n m) = (term1648 _107639 _107642 _53776 t s d n m).
Proof. exact (@lem17265 (term1650 _107639 _107642 s m t n) (term168 _107639 _107642 _53776 t s d n m)). Qed.
Lemma lem4543226 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (t : _107639 -> Prop) (s : _107642 -> Prop) (d : _107639) (n : nat) (m : nat) : (term169 _107639 _107642 _53776 t s d n m) = (term1649 _107639 _107642 _53776 t s d n m).
Proof. exact (TRANS (@lem4543225 _107639 _107642 _53776 t s d n m) (@lem4543224 _107639 _107642 _53776 t s d n m)). Qed.
Lemma lem4543227 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (t : _107639 -> Prop) (d : _107639) (n : nat) (m : nat) : (term170 _107639 _107642 _53776 t d n m) = (term1651 _107639 _107642 _53776 t d n m).
Proof. exact (fun_ext (fun s : _107642 -> Prop => @lem4543226 _107639 _107642 _53776 t s d n m)). Qed.
Lemma lem4543228 {_107642 : Type'} : (@all (_107642 -> Prop)) = (@all (_107642 -> Prop)).
Proof. exact (eq_refl (@all (_107642 -> Prop))). Qed.
Lemma lem4543229 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (t : _107639 -> Prop) (d : _107639) (n : nat) (m : nat) : (term171 _107639 _107642 _53776 t d n m) = (term1652 _107639 _107642 _53776 t d n m).
Proof. exact (MK_COMB (@lem4543228 _107642) (@lem4543227 _107639 _107642 _53776 t d n m)). Qed.
Lemma lem4543230 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (t : _107639 -> Prop) (d : _107639) (n : nat) : (term172 _107639 _107642 _53776 t d n) = (term1653 _107639 _107642 _53776 t d n).
Proof. exact (fun_ext (fun m : nat => @lem4543229 _107639 _107642 _53776 t d n m)). Qed.
Lemma lem4543231 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4543232 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (t : _107639 -> Prop) (d : _107639) (n : nat) : (term173 _107639 _107642 _53776 t d n) = (term1654 _107639 _107642 _53776 t d n).
Proof. exact (MK_COMB (@lem4543231) (@lem4543230 _107639 _107642 _53776 t d n)). Qed.
Lemma lem4543233 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (d : _107639) (n : nat) : (term174 _107639 _107642 _53776 d n) = (term1655 _107639 _107642 _53776 d n).
Proof. exact (fun_ext (fun t : _107639 -> Prop => @lem4543232 _107639 _107642 _53776 t d n)). Qed.
Lemma lem4543234 {_107639 : Type'} : (@all (_107639 -> Prop)) = (@all (_107639 -> Prop)).
Proof. exact (eq_refl (@all (_107639 -> Prop))). Qed.
Lemma lem4543235 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (d : _107639) (n : nat) : (term175 _107639 _107642 _53776 d n) = (term1656 _107639 _107642 _53776 d n).
Proof. exact (MK_COMB (@lem4543234 _107639) (@lem4543233 _107639 _107642 _53776 d n)). Qed.
Lemma lem4543236 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (d : _107639) : (term176 _107639 _107642 _53776 d) = (term1657 _107639 _107642 _53776 d).
Proof. exact (fun_ext (fun n : nat => @lem4543235 _107639 _107642 _53776 d n)). Qed.
Lemma lem4543237 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4543238 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (d : _107639) : (term177 _107639 _107642 _53776 d) = (term1658 _107639 _107642 _53776 d).
Proof. exact (MK_COMB (@lem4543237) (@lem4543236 _107639 _107642 _53776 d)). Qed.
Lemma lem4543239 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) : (term178 _107639 _107642 _53776) = (term1659 _107639 _107642 _53776).
Proof. exact (fun_ext (fun d : _107639 => @lem4543238 _107639 _107642 _53776 d)). Qed.
Lemma lem4543240 {_107639 : Type'} : (@all _107639) = (@all _107639).
Proof. exact (eq_refl (@all _107639)). Qed.
Lemma lem4543309 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) : (term179 _107639 _107642 _53776) = (term1660 _107639 _107642 _53776).
Proof. exact (MK_COMB (@lem4543240 _107639) (@lem4543239 _107639 _107642 _53776)). Qed.
Lemma lem4543310 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (h1 : term179 _107639 _107642 _53776) : term1660 _107639 _107642 _53776.
Proof. exact (EQ_MP (@lem4543309 _107639 _107642 _53776) (@lem4533084 _107639 _107642 _53776 h1)). Qed.
Lemma lem4543893 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (d : _107639) (s : _107642 -> Prop) (h1 : term1523 _107639 _107642 _53776 d s) : term1523 _107639 _107642 _53776 d s.
Proof. exact (h1). Qed.
Lemma lem4543894 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (d : _107639) (t : _107639 -> Prop) (s : _107642 -> Prop) (h1 : term1513 _107639 _107642 _53776 d t s) : term1513 _107639 _107642 _53776 d t s.
Proof. exact (h1). Qed.
Lemma lem4544010 : (@eq nat) = (@eq nat).
Proof. exact (eq_refl (@eq nat)). Qed.
Lemma lem4544015 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem4544016 {_107639 : Type'} (f : type687 _107639) (x : _107639 -> Prop) : (f x) = (@I ((_107639 -> Prop) -> nat) f x).
Proof. exact (@lem4544015 (_107639 -> Prop) nat f x). Qed.
Lemma lem4544018 {_107639 : Type'} (s : _107639 -> Prop) : (@CARD _107639 s) = (@I ((_107639 -> Prop) -> nat) (@CARD _107639) s).
Proof. exact (@lem4544016 _107639 (@CARD _107639) s). Qed.
Lemma lem4544019 (n : nat) : n = n.
Proof. exact (eq_refl n). Qed.
Lemma lem4544020 {_107639 : Type'} (s : _107639 -> Prop) : (term1661 _107639 s) = (term1662 _107639 s).
Proof. exact (MK_COMB (@lem4544010) (@lem4544018 _107639 s)). Qed.
Lemma lem4544021 {_107639 : Type'} (s : _107639 -> Prop) (n : nat) : ((@CARD _107639 s) = n) = ((@I ((_107639 -> Prop) -> nat) (@CARD _107639) s) = n).
Proof. exact (MK_COMB (@lem4544020 _107639 s) (@lem4544019 n)). Qed.
Lemma lem4544026 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem4544027 {_107639 : Type'} (f : type686 _107639) (x : _107639 -> Prop) : (f x) = (@I ((_107639 -> Prop) -> Prop) f x).
Proof. exact (@lem4544026 (_107639 -> Prop) Prop f x). Qed.
Lemma lem4544029 {_107639 : Type'} (s : _107639 -> Prop) : (@FINITE _107639 s) = (@I ((_107639 -> Prop) -> Prop) (@FINITE _107639) s).
Proof. exact (@lem4544027 _107639 (@FINITE _107639) s). Qed.
Lemma lem4544030 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4544031 {_107639 : Type'} (s : _107639 -> Prop) : (term1663 _107639 s) = (term1664 _107639 s).
Proof. exact (MK_COMB (@lem4544030) (@lem4544029 _107639 s)). Qed.
Lemma lem4544032 {_107639 : Type'} (s : _107639 -> Prop) (n : nat) : (term206 _107639 s n) = (term1665 _107639 s n).
Proof. exact (MK_COMB (@lem4544031 _107639 s) (@lem4544021 _107639 s n)). Qed.
Lemma lem4544033 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem4544040 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem4544041 {_107639 : Type'} (f : type682 _107639) (x : _107639 -> Prop) : (f x) = (@I ((_107639 -> Prop) -> nat -> Prop) f x).
Proof. exact (@lem4544040 (_107639 -> Prop) (nat -> Prop) f x). Qed.
Lemma lem4544042 {_107639 : Type'} (s : _107639 -> Prop) : (@HAS_SIZE _107639 s) = (@I ((_107639 -> Prop) -> nat -> Prop) (@HAS_SIZE _107639) s).
Proof. exact (@lem4544041 _107639 (@HAS_SIZE _107639) s). Qed.
Lemma lem4544043 (n : nat) : n = n.
Proof. exact (eq_refl n). Qed.
Lemma lem4544044 {_107639 : Type'} (s : _107639 -> Prop) (n : nat) : (@HAS_SIZE _107639 s n) = (@I ((_107639 -> Prop) -> nat -> Prop) (@HAS_SIZE _107639) s n).
Proof. exact (MK_COMB (@lem4544042 _107639 s) (@lem4544043 n)). Qed.
Lemma lem4544046 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem4544047 (f : nat -> Prop) (x : nat) : (f x) = (@I (nat -> Prop) f x).
Proof. exact (@lem4544046 nat Prop f x). Qed.
Lemma lem4544048 {_107639 : Type'} (s : _107639 -> Prop) (n : nat) : (@I ((_107639 -> Prop) -> nat -> Prop) (@HAS_SIZE _107639) s n) = (term1666 _107639 s n).
Proof. exact (@lem4544047 (@I ((_107639 -> Prop) -> nat -> Prop) (@HAS_SIZE _107639) s) n). Qed.
Lemma lem4544050 {_107639 : Type'} (s : _107639 -> Prop) (n : nat) : (@HAS_SIZE _107639 s n) = (term1666 _107639 s n).
Proof. exact (TRANS (@lem4544044 _107639 s n) (@lem4544048 _107639 s n)). Qed.
Lemma lem4544051 {_107639 : Type'} (s : _107639 -> Prop) (n : nat) : (term1667 _107639 s n) = (term1668 _107639 s n).
Proof. exact (MK_COMB (@lem4544033) (@lem4544050 _107639 s n)). Qed.
Lemma lem4544052 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem4544053 {_107639 : Type'} (s : _107639 -> Prop) (n : nat) : (term1669 _107639 s n) = (term1670 _107639 s n).
Proof. exact (MK_COMB (@lem4544052) (@lem4544051 _107639 s n)). Qed.
Lemma lem4544054 {_107639 : Type'} (s : _107639 -> Prop) (n : nat) : (term1532 _107639 s n) = (term1671 _107639 s n).
Proof. exact (MK_COMB (@lem4544053 _107639 s n) (@lem4544032 _107639 s n)). Qed.
Lemma lem4544055 {_107639 : Type'} (s : _107639 -> Prop) : (term1547 _107639 s) = (term1672 _107639 s).
Proof. exact (fun_ext (fun n : nat => @lem4544054 _107639 s n)). Qed.
Lemma lem4544056 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4544057 {_107639 : Type'} (s : _107639 -> Prop) : (term1562 _107639 s) = (term1673 _107639 s).
Proof. exact (MK_COMB (@lem4544056) (@lem4544055 _107639 s)). Qed.
Lemma lem4544058 {_107639 : Type'} : (term1569 _107639) = (term1674 _107639).
Proof. exact (fun_ext (fun s : _107639 -> Prop => @lem4544057 _107639 s)). Qed.
Lemma lem4544059 {_107639 : Type'} : (@all (_107639 -> Prop)) = (@all (_107639 -> Prop)).
Proof. exact (eq_refl (@all (_107639 -> Prop))). Qed.
Lemma lem4544060 {_107639 : Type'} : (term1584 _107639) = (term1675 _107639).
Proof. exact (MK_COMB (@lem4544059 _107639) (@lem4544058 _107639)). Qed.
Lemma lem4544061 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem4544062 : (@eq nat) = (@eq nat).
Proof. exact (eq_refl (@eq nat)). Qed.
Lemma lem4544067 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem4544068 {_107639 : Type'} (f : type687 _107639) (x : _107639 -> Prop) : (f x) = (@I ((_107639 -> Prop) -> nat) f x).
Proof. exact (@lem4544067 (_107639 -> Prop) nat f x). Qed.
Lemma lem4544070 {_107639 : Type'} (s : _107639 -> Prop) : (@CARD _107639 s) = (@I ((_107639 -> Prop) -> nat) (@CARD _107639) s).
Proof. exact (@lem4544068 _107639 (@CARD _107639) s). Qed.
Lemma lem4544071 (n : nat) : n = n.
Proof. exact (eq_refl n). Qed.
Lemma lem4544072 {_107639 : Type'} (s : _107639 -> Prop) : (term1661 _107639 s) = (term1662 _107639 s).
Proof. exact (MK_COMB (@lem4544062) (@lem4544070 _107639 s)). Qed.
Lemma lem4544073 {_107639 : Type'} (s : _107639 -> Prop) (n : nat) : ((@CARD _107639 s) = n) = ((@I ((_107639 -> Prop) -> nat) (@CARD _107639) s) = n).
Proof. exact (MK_COMB (@lem4544072 _107639 s) (@lem4544071 n)). Qed.
Lemma lem4544074 {_107639 : Type'} (s : _107639 -> Prop) (n : nat) : (term1676 _107639 s n) = (term1677 _107639 s n).
Proof. exact (MK_COMB (@lem4544061) (@lem4544073 _107639 s n)). Qed.
Lemma lem4544075 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem4544080 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem4544081 {_107639 : Type'} (f : type686 _107639) (x : _107639 -> Prop) : (f x) = (@I ((_107639 -> Prop) -> Prop) f x).
Proof. exact (@lem4544080 (_107639 -> Prop) Prop f x). Qed.
Lemma lem4544083 {_107639 : Type'} (s : _107639 -> Prop) : (@FINITE _107639 s) = (@I ((_107639 -> Prop) -> Prop) (@FINITE _107639) s).
Proof. exact (@lem4544081 _107639 (@FINITE _107639) s). Qed.
Lemma lem4544084 {_107639 : Type'} (s : _107639 -> Prop) : (term1678 _107639 s) = (term1679 _107639 s).
Proof. exact (MK_COMB (@lem4544075) (@lem4544083 _107639 s)). Qed.
Lemma lem4544085 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem4544086 {_107639 : Type'} (s : _107639 -> Prop) : (term1680 _107639 s) = (term1681 _107639 s).
Proof. exact (MK_COMB (@lem4544085) (@lem4544084 _107639 s)). Qed.
Lemma lem4544087 {_107639 : Type'} (s : _107639 -> Prop) (n : nat) : (term1531 _107639 s n) = (term1682 _107639 s n).
Proof. exact (MK_COMB (@lem4544086 _107639 s) (@lem4544074 _107639 s n)). Qed.
Lemma lem4544094 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem4544095 {_107639 : Type'} (f : type682 _107639) (x : _107639 -> Prop) : (f x) = (@I ((_107639 -> Prop) -> nat -> Prop) f x).
Proof. exact (@lem4544094 (_107639 -> Prop) (nat -> Prop) f x). Qed.
Lemma lem4544096 {_107639 : Type'} (s : _107639 -> Prop) : (@HAS_SIZE _107639 s) = (@I ((_107639 -> Prop) -> nat -> Prop) (@HAS_SIZE _107639) s).
Proof. exact (@lem4544095 _107639 (@HAS_SIZE _107639) s). Qed.
Lemma lem4544097 (n : nat) : n = n.
Proof. exact (eq_refl n). Qed.
Lemma lem4544098 {_107639 : Type'} (s : _107639 -> Prop) (n : nat) : (@HAS_SIZE _107639 s n) = (@I ((_107639 -> Prop) -> nat -> Prop) (@HAS_SIZE _107639) s n).
Proof. exact (MK_COMB (@lem4544096 _107639 s) (@lem4544097 n)). Qed.
Lemma lem4544100 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem4544101 (f : nat -> Prop) (x : nat) : (f x) = (@I (nat -> Prop) f x).
Proof. exact (@lem4544100 nat Prop f x). Qed.
Lemma lem4544102 {_107639 : Type'} (s : _107639 -> Prop) (n : nat) : (@I ((_107639 -> Prop) -> nat -> Prop) (@HAS_SIZE _107639) s n) = (term1666 _107639 s n).
Proof. exact (@lem4544101 (@I ((_107639 -> Prop) -> nat -> Prop) (@HAS_SIZE _107639) s) n). Qed.
Lemma lem4544104 {_107639 : Type'} (s : _107639 -> Prop) (n : nat) : (@HAS_SIZE _107639 s n) = (term1666 _107639 s n).
Proof. exact (TRANS (@lem4544098 _107639 s n) (@lem4544102 _107639 s n)). Qed.
Lemma lem4544105 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem4544106 {_107639 : Type'} (s : _107639 -> Prop) (n : nat) : (term1533 _107639 s n) = (term1683 _107639 s n).
Proof. exact (MK_COMB (@lem4544105) (@lem4544104 _107639 s n)). Qed.
Lemma lem4544107 {_107639 : Type'} (s : _107639 -> Prop) (n : nat) : (term1535 _107639 s n) = (term1684 _107639 s n).
Proof. exact (MK_COMB (@lem4544106 _107639 s n) (@lem4544087 _107639 s n)). Qed.
Lemma lem4544108 {_107639 : Type'} (s : _107639 -> Prop) : (term1546 _107639 s) = (term1685 _107639 s).
Proof. exact (fun_ext (fun n : nat => @lem4544107 _107639 s n)). Qed.
Lemma lem4544109 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4544110 {_107639 : Type'} (s : _107639 -> Prop) : (term1557 _107639 s) = (term1686 _107639 s).
Proof. exact (MK_COMB (@lem4544109) (@lem4544108 _107639 s)). Qed.
Lemma lem4544111 {_107639 : Type'} : (term1568 _107639) = (term1687 _107639).
Proof. exact (fun_ext (fun s : _107639 -> Prop => @lem4544110 _107639 s)). Qed.
Lemma lem4544112 {_107639 : Type'} : (@all (_107639 -> Prop)) = (@all (_107639 -> Prop)).
Proof. exact (eq_refl (@all (_107639 -> Prop))). Qed.
Lemma lem4544113 {_107639 : Type'} : (term1579 _107639) = (term1688 _107639).
Proof. exact (MK_COMB (@lem4544112 _107639) (@lem4544111 _107639)). Qed.
Lemma lem4544114 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4544115 {_107639 : Type'} : (term1581 _107639) = (term1689 _107639).
Proof. exact (MK_COMB (@lem4544114) (@lem4544113 _107639)). Qed.
Lemma lem4544116 {_107639 : Type'} : (term1585 _107639) = (term1690 _107639).
Proof. exact (MK_COMB (@lem4544115 _107639) (@lem4544060 _107639)). Qed.
Lemma lem4544117 {_107639 : Type'} (h1 : term14 _107639) : term1690 _107639.
Proof. exact (EQ_MP (@lem4544116 _107639) (@lem4539946 _107639 h1)). Qed.
Lemma lem4544118 : (@eq nat) = (@eq nat).
Proof. exact (eq_refl (@eq nat)). Qed.
Lemma lem4544123 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem4544124 {_107642 : Type'} (f : type687 _107642) (x : _107642 -> Prop) : (f x) = (@I ((_107642 -> Prop) -> nat) f x).
Proof. exact (@lem4544123 (_107642 -> Prop) nat f x). Qed.
Lemma lem4544126 {_107642 : Type'} (s : _107642 -> Prop) : (@CARD _107642 s) = (@I ((_107642 -> Prop) -> nat) (@CARD _107642) s).
Proof. exact (@lem4544124 _107642 (@CARD _107642) s). Qed.
Lemma lem4544127 (n : nat) : n = n.
Proof. exact (eq_refl n). Qed.
Lemma lem4544128 {_107642 : Type'} (s : _107642 -> Prop) : (term1661 _107642 s) = (term1662 _107642 s).
Proof. exact (MK_COMB (@lem4544118) (@lem4544126 _107642 s)). Qed.
Lemma lem4544129 {_107642 : Type'} (s : _107642 -> Prop) (n : nat) : ((@CARD _107642 s) = n) = ((@I ((_107642 -> Prop) -> nat) (@CARD _107642) s) = n).
Proof. exact (MK_COMB (@lem4544128 _107642 s) (@lem4544127 n)). Qed.
Lemma lem4544134 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem4544135 {_107642 : Type'} (f : type686 _107642) (x : _107642 -> Prop) : (f x) = (@I ((_107642 -> Prop) -> Prop) f x).
Proof. exact (@lem4544134 (_107642 -> Prop) Prop f x). Qed.
Lemma lem4544137 {_107642 : Type'} (s : _107642 -> Prop) : (@FINITE _107642 s) = (@I ((_107642 -> Prop) -> Prop) (@FINITE _107642) s).
Proof. exact (@lem4544135 _107642 (@FINITE _107642) s). Qed.
Lemma lem4544138 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4544139 {_107642 : Type'} (s : _107642 -> Prop) : (term1663 _107642 s) = (term1664 _107642 s).
Proof. exact (MK_COMB (@lem4544138) (@lem4544137 _107642 s)). Qed.
Lemma lem4544140 {_107642 : Type'} (s : _107642 -> Prop) (n : nat) : (term206 _107642 s n) = (term1665 _107642 s n).
Proof. exact (MK_COMB (@lem4544139 _107642 s) (@lem4544129 _107642 s n)). Qed.
Lemma lem4544141 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem4544148 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem4544149 {_107642 : Type'} (f : type682 _107642) (x : _107642 -> Prop) : (f x) = (@I ((_107642 -> Prop) -> nat -> Prop) f x).
Proof. exact (@lem4544148 (_107642 -> Prop) (nat -> Prop) f x). Qed.
Lemma lem4544150 {_107642 : Type'} (s : _107642 -> Prop) : (@HAS_SIZE _107642 s) = (@I ((_107642 -> Prop) -> nat -> Prop) (@HAS_SIZE _107642) s).
Proof. exact (@lem4544149 _107642 (@HAS_SIZE _107642) s). Qed.
Lemma lem4544151 (n : nat) : n = n.
Proof. exact (eq_refl n). Qed.
Lemma lem4544152 {_107642 : Type'} (s : _107642 -> Prop) (n : nat) : (@HAS_SIZE _107642 s n) = (@I ((_107642 -> Prop) -> nat -> Prop) (@HAS_SIZE _107642) s n).
Proof. exact (MK_COMB (@lem4544150 _107642 s) (@lem4544151 n)). Qed.
Lemma lem4544154 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem4544155 (f : nat -> Prop) (x : nat) : (f x) = (@I (nat -> Prop) f x).
Proof. exact (@lem4544154 nat Prop f x). Qed.
Lemma lem4544156 {_107642 : Type'} (s : _107642 -> Prop) (n : nat) : (@I ((_107642 -> Prop) -> nat -> Prop) (@HAS_SIZE _107642) s n) = (term1666 _107642 s n).
Proof. exact (@lem4544155 (@I ((_107642 -> Prop) -> nat -> Prop) (@HAS_SIZE _107642) s) n). Qed.
Lemma lem4544158 {_107642 : Type'} (s : _107642 -> Prop) (n : nat) : (@HAS_SIZE _107642 s n) = (term1666 _107642 s n).
Proof. exact (TRANS (@lem4544152 _107642 s n) (@lem4544156 _107642 s n)). Qed.
Lemma lem4544159 {_107642 : Type'} (s : _107642 -> Prop) (n : nat) : (term1667 _107642 s n) = (term1668 _107642 s n).
Proof. exact (MK_COMB (@lem4544141) (@lem4544158 _107642 s n)). Qed.
Lemma lem4544160 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem4544161 {_107642 : Type'} (s : _107642 -> Prop) (n : nat) : (term1669 _107642 s n) = (term1670 _107642 s n).
Proof. exact (MK_COMB (@lem4544160) (@lem4544159 _107642 s n)). Qed.
Lemma lem4544162 {_107642 : Type'} (s : _107642 -> Prop) (n : nat) : (term1532 _107642 s n) = (term1671 _107642 s n).
Proof. exact (MK_COMB (@lem4544161 _107642 s n) (@lem4544140 _107642 s n)). Qed.
Lemma lem4544163 {_107642 : Type'} (s : _107642 -> Prop) : (term1547 _107642 s) = (term1672 _107642 s).
Proof. exact (fun_ext (fun n : nat => @lem4544162 _107642 s n)). Qed.
Lemma lem4544164 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4544165 {_107642 : Type'} (s : _107642 -> Prop) : (term1562 _107642 s) = (term1673 _107642 s).
Proof. exact (MK_COMB (@lem4544164) (@lem4544163 _107642 s)). Qed.
Lemma lem4544166 {_107642 : Type'} : (term1569 _107642) = (term1674 _107642).
Proof. exact (fun_ext (fun s : _107642 -> Prop => @lem4544165 _107642 s)). Qed.
Lemma lem4544167 {_107642 : Type'} : (@all (_107642 -> Prop)) = (@all (_107642 -> Prop)).
Proof. exact (eq_refl (@all (_107642 -> Prop))). Qed.
Lemma lem4544168 {_107642 : Type'} : (term1584 _107642) = (term1675 _107642).
Proof. exact (MK_COMB (@lem4544167 _107642) (@lem4544166 _107642)). Qed.
Lemma lem4544169 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem4544170 : (@eq nat) = (@eq nat).
Proof. exact (eq_refl (@eq nat)). Qed.
Lemma lem4544175 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem4544176 {_107642 : Type'} (f : type687 _107642) (x : _107642 -> Prop) : (f x) = (@I ((_107642 -> Prop) -> nat) f x).
Proof. exact (@lem4544175 (_107642 -> Prop) nat f x). Qed.
Lemma lem4544178 {_107642 : Type'} (s : _107642 -> Prop) : (@CARD _107642 s) = (@I ((_107642 -> Prop) -> nat) (@CARD _107642) s).
Proof. exact (@lem4544176 _107642 (@CARD _107642) s). Qed.
Lemma lem4544179 (n : nat) : n = n.
Proof. exact (eq_refl n). Qed.
Lemma lem4544180 {_107642 : Type'} (s : _107642 -> Prop) : (term1661 _107642 s) = (term1662 _107642 s).
Proof. exact (MK_COMB (@lem4544170) (@lem4544178 _107642 s)). Qed.
Lemma lem4544181 {_107642 : Type'} (s : _107642 -> Prop) (n : nat) : ((@CARD _107642 s) = n) = ((@I ((_107642 -> Prop) -> nat) (@CARD _107642) s) = n).
Proof. exact (MK_COMB (@lem4544180 _107642 s) (@lem4544179 n)). Qed.
Lemma lem4544182 {_107642 : Type'} (s : _107642 -> Prop) (n : nat) : (term1676 _107642 s n) = (term1677 _107642 s n).
Proof. exact (MK_COMB (@lem4544169) (@lem4544181 _107642 s n)). Qed.
Lemma lem4544183 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem4544188 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem4544189 {_107642 : Type'} (f : type686 _107642) (x : _107642 -> Prop) : (f x) = (@I ((_107642 -> Prop) -> Prop) f x).
Proof. exact (@lem4544188 (_107642 -> Prop) Prop f x). Qed.
Lemma lem4544191 {_107642 : Type'} (s : _107642 -> Prop) : (@FINITE _107642 s) = (@I ((_107642 -> Prop) -> Prop) (@FINITE _107642) s).
Proof. exact (@lem4544189 _107642 (@FINITE _107642) s). Qed.
Lemma lem4544192 {_107642 : Type'} (s : _107642 -> Prop) : (term1678 _107642 s) = (term1679 _107642 s).
Proof. exact (MK_COMB (@lem4544183) (@lem4544191 _107642 s)). Qed.
Lemma lem4544193 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem4544194 {_107642 : Type'} (s : _107642 -> Prop) : (term1680 _107642 s) = (term1681 _107642 s).
Proof. exact (MK_COMB (@lem4544193) (@lem4544192 _107642 s)). Qed.
Lemma lem4544195 {_107642 : Type'} (s : _107642 -> Prop) (n : nat) : (term1531 _107642 s n) = (term1682 _107642 s n).
Proof. exact (MK_COMB (@lem4544194 _107642 s) (@lem4544182 _107642 s n)). Qed.
Lemma lem4544202 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem4544203 {_107642 : Type'} (f : type682 _107642) (x : _107642 -> Prop) : (f x) = (@I ((_107642 -> Prop) -> nat -> Prop) f x).
Proof. exact (@lem4544202 (_107642 -> Prop) (nat -> Prop) f x). Qed.
Lemma lem4544204 {_107642 : Type'} (s : _107642 -> Prop) : (@HAS_SIZE _107642 s) = (@I ((_107642 -> Prop) -> nat -> Prop) (@HAS_SIZE _107642) s).
Proof. exact (@lem4544203 _107642 (@HAS_SIZE _107642) s). Qed.
Lemma lem4544205 (n : nat) : n = n.
Proof. exact (eq_refl n). Qed.
Lemma lem4544206 {_107642 : Type'} (s : _107642 -> Prop) (n : nat) : (@HAS_SIZE _107642 s n) = (@I ((_107642 -> Prop) -> nat -> Prop) (@HAS_SIZE _107642) s n).
Proof. exact (MK_COMB (@lem4544204 _107642 s) (@lem4544205 n)). Qed.
Lemma lem4544208 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem4544209 (f : nat -> Prop) (x : nat) : (f x) = (@I (nat -> Prop) f x).
Proof. exact (@lem4544208 nat Prop f x). Qed.
Lemma lem4544210 {_107642 : Type'} (s : _107642 -> Prop) (n : nat) : (@I ((_107642 -> Prop) -> nat -> Prop) (@HAS_SIZE _107642) s n) = (term1666 _107642 s n).
Proof. exact (@lem4544209 (@I ((_107642 -> Prop) -> nat -> Prop) (@HAS_SIZE _107642) s) n). Qed.
Lemma lem4544212 {_107642 : Type'} (s : _107642 -> Prop) (n : nat) : (@HAS_SIZE _107642 s n) = (term1666 _107642 s n).
Proof. exact (TRANS (@lem4544206 _107642 s n) (@lem4544210 _107642 s n)). Qed.
Lemma lem4544213 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem4544214 {_107642 : Type'} (s : _107642 -> Prop) (n : nat) : (term1533 _107642 s n) = (term1683 _107642 s n).
Proof. exact (MK_COMB (@lem4544213) (@lem4544212 _107642 s n)). Qed.
Lemma lem4544215 {_107642 : Type'} (s : _107642 -> Prop) (n : nat) : (term1535 _107642 s n) = (term1684 _107642 s n).
Proof. exact (MK_COMB (@lem4544214 _107642 s n) (@lem4544195 _107642 s n)). Qed.
Lemma lem4544216 {_107642 : Type'} (s : _107642 -> Prop) : (term1546 _107642 s) = (term1685 _107642 s).
Proof. exact (fun_ext (fun n : nat => @lem4544215 _107642 s n)). Qed.
Lemma lem4544217 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4544218 {_107642 : Type'} (s : _107642 -> Prop) : (term1557 _107642 s) = (term1686 _107642 s).
Proof. exact (MK_COMB (@lem4544217) (@lem4544216 _107642 s)). Qed.
Lemma lem4544219 {_107642 : Type'} : (term1568 _107642) = (term1687 _107642).
Proof. exact (fun_ext (fun s : _107642 -> Prop => @lem4544218 _107642 s)). Qed.
Lemma lem4544220 {_107642 : Type'} : (@all (_107642 -> Prop)) = (@all (_107642 -> Prop)).
Proof. exact (eq_refl (@all (_107642 -> Prop))). Qed.
Lemma lem4544221 {_107642 : Type'} : (term1579 _107642) = (term1688 _107642).
Proof. exact (MK_COMB (@lem4544220 _107642) (@lem4544219 _107642)). Qed.
Lemma lem4544222 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4544223 {_107642 : Type'} : (term1581 _107642) = (term1689 _107642).
Proof. exact (MK_COMB (@lem4544222) (@lem4544221 _107642)). Qed.
Lemma lem4544224 {_107642 : Type'} : (term1585 _107642) = (term1690 _107642).
Proof. exact (MK_COMB (@lem4544223 _107642) (@lem4544168 _107642)). Qed.
Lemma lem4544225 {_107642 : Type'} (h1 : term14 _107642) : term1690 _107642.
Proof. exact (EQ_MP (@lem4544224 _107642) (@lem4540243 _107642 h1)). Qed.
Lemma lem4544550 : (@eq nat) = (@eq nat).
Proof. exact (eq_refl (@eq nat)). Qed.
Lemma lem4544555 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem4544556 {_107639 _107642 : Type'} (f : type208 _107639 _107642) (x : type805 _107639 _107642) : (f x) = (@I (((_107642 -> _107639) -> Prop) -> nat) f x).
Proof. exact (@lem4544555 (type805 _107639 _107642) nat f x). Qed.
Lemma lem4544558 {_107639 _107642 : Type'} (s : type805 _107639 _107642) : (@CARD (_107642 -> _107639) s) = (@I (((_107642 -> _107639) -> Prop) -> nat) (@CARD (_107642 -> _107639)) s).
Proof. exact (@lem4544556 _107639 _107642 (@CARD (_107642 -> _107639)) s). Qed.
Lemma lem4544559 (n : nat) : n = n.
Proof. exact (eq_refl n). Qed.
Lemma lem4544560 {_107639 _107642 : Type'} (s : type805 _107639 _107642) : (term1691 _107639 _107642 s) = (term1692 _107639 _107642 s).
Proof. exact (MK_COMB (@lem4544550) (@lem4544558 _107639 _107642 s)). Qed.
Lemma lem4544561 {_107639 _107642 : Type'} (s : type805 _107639 _107642) (n : nat) : ((@CARD (_107642 -> _107639) s) = n) = ((@I (((_107642 -> _107639) -> Prop) -> nat) (@CARD (_107642 -> _107639)) s) = n).
Proof. exact (MK_COMB (@lem4544560 _107639 _107642 s) (@lem4544559 n)). Qed.
Lemma lem4544566 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem4544567 {_107639 _107642 : Type'} (f : type207 _107639 _107642) (x : type805 _107639 _107642) : (f x) = (@I (((_107642 -> _107639) -> Prop) -> Prop) f x).
Proof. exact (@lem4544566 (type805 _107639 _107642) Prop f x). Qed.
Lemma lem4544569 {_107639 _107642 : Type'} (s : type805 _107639 _107642) : (@FINITE (_107642 -> _107639) s) = (@I (((_107642 -> _107639) -> Prop) -> Prop) (@FINITE (_107642 -> _107639)) s).
Proof. exact (@lem4544567 _107639 _107642 (@FINITE (_107642 -> _107639)) s). Qed.
Lemma lem4544570 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4544571 {_107639 _107642 : Type'} (s : type805 _107639 _107642) : (term1693 _107639 _107642 s) = (term1694 _107639 _107642 s).
Proof. exact (MK_COMB (@lem4544570) (@lem4544569 _107639 _107642 s)). Qed.
Lemma lem4544572 {_107639 _107642 : Type'} (s : type805 _107639 _107642) (n : nat) : (term197 _107639 _107642 s n) = (term1695 _107639 _107642 s n).
Proof. exact (MK_COMB (@lem4544571 _107639 _107642 s) (@lem4544561 _107639 _107642 s n)). Qed.
Lemma lem4544573 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem4544580 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem4544581 {_107639 _107642 : Type'} (f : type206 _107639 _107642) (x : type805 _107639 _107642) : (f x) = (@I (((_107642 -> _107639) -> Prop) -> nat -> Prop) f x).
Proof. exact (@lem4544580 (type805 _107639 _107642) (nat -> Prop) f x). Qed.
Lemma lem4544582 {_107639 _107642 : Type'} (s : type805 _107639 _107642) : (@HAS_SIZE (_107642 -> _107639) s) = (@I (((_107642 -> _107639) -> Prop) -> nat -> Prop) (@HAS_SIZE (_107642 -> _107639)) s).
Proof. exact (@lem4544581 _107639 _107642 (@HAS_SIZE (_107642 -> _107639)) s). Qed.
Lemma lem4544583 (n : nat) : n = n.
Proof. exact (eq_refl n). Qed.
Lemma lem4544584 {_107639 _107642 : Type'} (s : type805 _107639 _107642) (n : nat) : (@HAS_SIZE (_107642 -> _107639) s n) = (@I (((_107642 -> _107639) -> Prop) -> nat -> Prop) (@HAS_SIZE (_107642 -> _107639)) s n).
Proof. exact (MK_COMB (@lem4544582 _107639 _107642 s) (@lem4544583 n)). Qed.
Lemma lem4544586 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem4544587 (f : nat -> Prop) (x : nat) : (f x) = (@I (nat -> Prop) f x).
Proof. exact (@lem4544586 nat Prop f x). Qed.
Lemma lem4544588 {_107639 _107642 : Type'} (s : type805 _107639 _107642) (n : nat) : (@I (((_107642 -> _107639) -> Prop) -> nat -> Prop) (@HAS_SIZE (_107642 -> _107639)) s n) = (term1696 _107639 _107642 s n).
Proof. exact (@lem4544587 (@I (((_107642 -> _107639) -> Prop) -> nat -> Prop) (@HAS_SIZE (_107642 -> _107639)) s) n). Qed.
Lemma lem4544590 {_107639 _107642 : Type'} (s : type805 _107639 _107642) (n : nat) : (@HAS_SIZE (_107642 -> _107639) s n) = (term1696 _107639 _107642 s n).
Proof. exact (TRANS (@lem4544584 _107639 _107642 s n) (@lem4544588 _107639 _107642 s n)). Qed.
Lemma lem4544591 {_107639 _107642 : Type'} (s : type805 _107639 _107642) (n : nat) : (term1697 _107639 _107642 s n) = (term1698 _107639 _107642 s n).
Proof. exact (MK_COMB (@lem4544573) (@lem4544590 _107639 _107642 s n)). Qed.
Lemma lem4544592 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem4544593 {_107639 _107642 : Type'} (s : type805 _107639 _107642) (n : nat) : (term1699 _107639 _107642 s n) = (term1700 _107639 _107642 s n).
Proof. exact (MK_COMB (@lem4544592) (@lem4544591 _107639 _107642 s n)). Qed.
Lemma lem4544594 {_107639 _107642 : Type'} (s : type805 _107639 _107642) (n : nat) : (term1588 _107639 _107642 s n) = (term1701 _107639 _107642 s n).
Proof. exact (MK_COMB (@lem4544593 _107639 _107642 s n) (@lem4544572 _107639 _107642 s n)). Qed.
Lemma lem4544595 {_107639 _107642 : Type'} (s : type805 _107639 _107642) : (term1603 _107639 _107642 s) = (term1702 _107639 _107642 s).
Proof. exact (fun_ext (fun n : nat => @lem4544594 _107639 _107642 s n)). Qed.
Lemma lem4544596 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4544597 {_107639 _107642 : Type'} (s : type805 _107639 _107642) : (term1618 _107639 _107642 s) = (term1703 _107639 _107642 s).
Proof. exact (MK_COMB (@lem4544596) (@lem4544595 _107639 _107642 s)). Qed.
Lemma lem4544598 {_107639 _107642 : Type'} : (term1627 _107639 _107642) = (term1704 _107639 _107642).
Proof. exact (fun_ext (fun s : type805 _107639 _107642 => @lem4544597 _107639 _107642 s)). Qed.
Lemma lem4544599 {_107639 _107642 : Type'} : (@all ((_107642 -> _107639) -> Prop)) = (@all ((_107642 -> _107639) -> Prop)).
Proof. exact (eq_refl (@all ((_107642 -> _107639) -> Prop))). Qed.
Lemma lem4544600 {_107639 _107642 : Type'} : (term1642 _107639 _107642) = (term1705 _107639 _107642).
Proof. exact (MK_COMB (@lem4544599 _107639 _107642) (@lem4544598 _107639 _107642)). Qed.
Lemma lem4544601 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem4544602 : (@eq nat) = (@eq nat).
Proof. exact (eq_refl (@eq nat)). Qed.
Lemma lem4544607 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem4544608 {_107639 _107642 : Type'} (f : type208 _107639 _107642) (x : type805 _107639 _107642) : (f x) = (@I (((_107642 -> _107639) -> Prop) -> nat) f x).
Proof. exact (@lem4544607 (type805 _107639 _107642) nat f x). Qed.
Lemma lem4544610 {_107639 _107642 : Type'} (s : type805 _107639 _107642) : (@CARD (_107642 -> _107639) s) = (@I (((_107642 -> _107639) -> Prop) -> nat) (@CARD (_107642 -> _107639)) s).
Proof. exact (@lem4544608 _107639 _107642 (@CARD (_107642 -> _107639)) s). Qed.
Lemma lem4544611 (n : nat) : n = n.
Proof. exact (eq_refl n). Qed.
Lemma lem4544612 {_107639 _107642 : Type'} (s : type805 _107639 _107642) : (term1691 _107639 _107642 s) = (term1692 _107639 _107642 s).
Proof. exact (MK_COMB (@lem4544602) (@lem4544610 _107639 _107642 s)). Qed.
Lemma lem4544613 {_107639 _107642 : Type'} (s : type805 _107639 _107642) (n : nat) : ((@CARD (_107642 -> _107639) s) = n) = ((@I (((_107642 -> _107639) -> Prop) -> nat) (@CARD (_107642 -> _107639)) s) = n).
Proof. exact (MK_COMB (@lem4544612 _107639 _107642 s) (@lem4544611 n)). Qed.
Lemma lem4544614 {_107639 _107642 : Type'} (s : type805 _107639 _107642) (n : nat) : (term1706 _107639 _107642 s n) = (term1707 _107639 _107642 s n).
Proof. exact (MK_COMB (@lem4544601) (@lem4544613 _107639 _107642 s n)). Qed.
Lemma lem4544615 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem4544620 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem4544621 {_107639 _107642 : Type'} (f : type207 _107639 _107642) (x : type805 _107639 _107642) : (f x) = (@I (((_107642 -> _107639) -> Prop) -> Prop) f x).
Proof. exact (@lem4544620 (type805 _107639 _107642) Prop f x). Qed.
Lemma lem4544623 {_107639 _107642 : Type'} (s : type805 _107639 _107642) : (@FINITE (_107642 -> _107639) s) = (@I (((_107642 -> _107639) -> Prop) -> Prop) (@FINITE (_107642 -> _107639)) s).
Proof. exact (@lem4544621 _107639 _107642 (@FINITE (_107642 -> _107639)) s). Qed.
Lemma lem4544624 {_107639 _107642 : Type'} (s : type805 _107639 _107642) : (term1708 _107639 _107642 s) = (term1709 _107639 _107642 s).
Proof. exact (MK_COMB (@lem4544615) (@lem4544623 _107639 _107642 s)). Qed.
Lemma lem4544625 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem4544626 {_107639 _107642 : Type'} (s : type805 _107639 _107642) : (term1710 _107639 _107642 s) = (term1711 _107639 _107642 s).
Proof. exact (MK_COMB (@lem4544625) (@lem4544624 _107639 _107642 s)). Qed.
Lemma lem4544627 {_107639 _107642 : Type'} (s : type805 _107639 _107642) (n : nat) : (term1587 _107639 _107642 s n) = (term1712 _107639 _107642 s n).
Proof. exact (MK_COMB (@lem4544626 _107639 _107642 s) (@lem4544614 _107639 _107642 s n)). Qed.
Lemma lem4544634 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem4544635 {_107639 _107642 : Type'} (f : type206 _107639 _107642) (x : type805 _107639 _107642) : (f x) = (@I (((_107642 -> _107639) -> Prop) -> nat -> Prop) f x).
Proof. exact (@lem4544634 (type805 _107639 _107642) (nat -> Prop) f x). Qed.
Lemma lem4544636 {_107639 _107642 : Type'} (s : type805 _107639 _107642) : (@HAS_SIZE (_107642 -> _107639) s) = (@I (((_107642 -> _107639) -> Prop) -> nat -> Prop) (@HAS_SIZE (_107642 -> _107639)) s).
Proof. exact (@lem4544635 _107639 _107642 (@HAS_SIZE (_107642 -> _107639)) s). Qed.
Lemma lem4544637 (n : nat) : n = n.
Proof. exact (eq_refl n). Qed.
Lemma lem4544638 {_107639 _107642 : Type'} (s : type805 _107639 _107642) (n : nat) : (@HAS_SIZE (_107642 -> _107639) s n) = (@I (((_107642 -> _107639) -> Prop) -> nat -> Prop) (@HAS_SIZE (_107642 -> _107639)) s n).
Proof. exact (MK_COMB (@lem4544636 _107639 _107642 s) (@lem4544637 n)). Qed.
Lemma lem4544640 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem4544641 (f : nat -> Prop) (x : nat) : (f x) = (@I (nat -> Prop) f x).
Proof. exact (@lem4544640 nat Prop f x). Qed.
Lemma lem4544642 {_107639 _107642 : Type'} (s : type805 _107639 _107642) (n : nat) : (@I (((_107642 -> _107639) -> Prop) -> nat -> Prop) (@HAS_SIZE (_107642 -> _107639)) s n) = (term1696 _107639 _107642 s n).
Proof. exact (@lem4544641 (@I (((_107642 -> _107639) -> Prop) -> nat -> Prop) (@HAS_SIZE (_107642 -> _107639)) s) n). Qed.
Lemma lem4544644 {_107639 _107642 : Type'} (s : type805 _107639 _107642) (n : nat) : (@HAS_SIZE (_107642 -> _107639) s n) = (term1696 _107639 _107642 s n).
Proof. exact (TRANS (@lem4544638 _107639 _107642 s n) (@lem4544642 _107639 _107642 s n)). Qed.
Lemma lem4544645 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem4544646 {_107639 _107642 : Type'} (s : type805 _107639 _107642) (n : nat) : (term1589 _107639 _107642 s n) = (term1713 _107639 _107642 s n).
Proof. exact (MK_COMB (@lem4544645) (@lem4544644 _107639 _107642 s n)). Qed.
Lemma lem4544647 {_107639 _107642 : Type'} (s : type805 _107639 _107642) (n : nat) : (term1591 _107639 _107642 s n) = (term1714 _107639 _107642 s n).
Proof. exact (MK_COMB (@lem4544646 _107639 _107642 s n) (@lem4544627 _107639 _107642 s n)). Qed.
Lemma lem4544648 {_107639 _107642 : Type'} (s : type805 _107639 _107642) : (term1602 _107639 _107642 s) = (term1715 _107639 _107642 s).
Proof. exact (fun_ext (fun n : nat => @lem4544647 _107639 _107642 s n)). Qed.
Lemma lem4544649 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4544650 {_107639 _107642 : Type'} (s : type805 _107639 _107642) : (term1613 _107639 _107642 s) = (term1716 _107639 _107642 s).
Proof. exact (MK_COMB (@lem4544649) (@lem4544648 _107639 _107642 s)). Qed.
Lemma lem4544651 {_107639 _107642 : Type'} : (term1626 _107639 _107642) = (term1717 _107639 _107642).
Proof. exact (fun_ext (fun s : type805 _107639 _107642 => @lem4544650 _107639 _107642 s)). Qed.
Lemma lem4544652 {_107639 _107642 : Type'} : (@all ((_107642 -> _107639) -> Prop)) = (@all ((_107642 -> _107639) -> Prop)).
Proof. exact (eq_refl (@all ((_107642 -> _107639) -> Prop))). Qed.
Lemma lem4544653 {_107639 _107642 : Type'} : (term1637 _107639 _107642) = (term1718 _107639 _107642).
Proof. exact (MK_COMB (@lem4544652 _107639 _107642) (@lem4544651 _107639 _107642)). Qed.
Lemma lem4544654 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4544655 {_107639 _107642 : Type'} : (term1639 _107639 _107642) = (term1719 _107639 _107642).
Proof. exact (MK_COMB (@lem4544654) (@lem4544653 _107639 _107642)). Qed.
Lemma lem4544656 {_107639 _107642 : Type'} : (term1643 _107639 _107642) = (term1720 _107639 _107642).
Proof. exact (MK_COMB (@lem4544655 _107639 _107642) (@lem4544600 _107639 _107642)). Qed.
Lemma lem4544657 {_107639 _107642 : Type'} (h1 : term18 _107639 _107642) : term1720 _107639 _107642.
Proof. exact (EQ_MP (@lem4544656 _107639 _107642) (@lem4541431 _107639 _107642 h1)). Qed.
Lemma lem4545306 {_107639 _107642 : Type'} : (@HAS_SIZE (_107642 -> _107639)) = (@HAS_SIZE (_107642 -> _107639)).
Proof. exact (eq_refl (@HAS_SIZE (_107642 -> _107639))). Qed.
Lemma lem4545307 {_107639 _107642 : Type'} : (@GSPEC (_107642 -> _107639)) = (@GSPEC (_107642 -> _107639)).
Proof. exact (eq_refl (@GSPEC (_107642 -> _107639))). Qed.
Lemma lem4545316 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem4545317 {_107639 _107642 : Type'} (f : type656 _107639 _107642) (x : _107639 -> Prop) : (f x) = (@I ((_107639 -> Prop) -> (_107642 -> Prop) -> _107639 -> (_107642 -> _107639) -> Prop) f x).
Proof. exact (@lem4545316 (_107639 -> Prop) (type859 _107639 _107642) f x). Qed.
Lemma lem4545318 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (t : _107639 -> Prop) : (_53776 t) = (@I ((_107639 -> Prop) -> (_107642 -> Prop) -> _107639 -> (_107642 -> _107639) -> Prop) _53776 t).
Proof. exact (@lem4545317 _107639 _107642 _53776 t). Qed.
Lemma lem4545319 {_107642 : Type'} (s : _107642 -> Prop) : s = s.
Proof. exact (eq_refl s). Qed.
Lemma lem4545320 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (t : _107639 -> Prop) (s : _107642 -> Prop) : (_53776 t s) = (@I ((_107639 -> Prop) -> (_107642 -> Prop) -> _107639 -> (_107642 -> _107639) -> Prop) _53776 t s).
Proof. exact (MK_COMB (@lem4545318 _107639 _107642 _53776 t) (@lem4545319 _107642 s)). Qed.
Lemma lem4545322 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem4545323 {_107639 _107642 : Type'} (f : type859 _107639 _107642) (x : _107642 -> Prop) : (f x) = (@I ((_107642 -> Prop) -> _107639 -> (_107642 -> _107639) -> Prop) f x).
Proof. exact (@lem4545322 (_107642 -> Prop) (type1372 _107639 _107642) f x). Qed.
Lemma lem4545324 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (t : _107639 -> Prop) (s : _107642 -> Prop) : (@I ((_107639 -> Prop) -> (_107642 -> Prop) -> _107639 -> (_107642 -> _107639) -> Prop) _53776 t s) = (term1721 _107639 _107642 _53776 t s).
Proof. exact (@lem4545323 _107639 _107642 (@I ((_107639 -> Prop) -> (_107642 -> Prop) -> _107639 -> (_107642 -> _107639) -> Prop) _53776 t) s). Qed.
Lemma lem4545325 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (t : _107639 -> Prop) (s : _107642 -> Prop) : (_53776 t s) = (term1721 _107639 _107642 _53776 t s).
Proof. exact (TRANS (@lem4545320 _107639 _107642 _53776 t s) (@lem4545324 _107639 _107642 _53776 t s)). Qed.
Lemma lem4545326 {_107639 : Type'} (d : _107639) : d = d.
Proof. exact (eq_refl d). Qed.
Lemma lem4545327 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (t : _107639 -> Prop) (s : _107642 -> Prop) (d : _107639) : (_53776 t s d) = (term1722 _107639 _107642 _53776 t s d).
Proof. exact (MK_COMB (@lem4545325 _107639 _107642 _53776 t s) (@lem4545326 _107639 d)). Qed.
Lemma lem4545329 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem4545330 {_107639 _107642 : Type'} (f : type1372 _107639 _107642) (x : _107639) : (f x) = (@I (_107639 -> (_107642 -> _107639) -> Prop) f x).
Proof. exact (@lem4545329 _107639 (type805 _107639 _107642) f x). Qed.
Lemma lem4545331 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (t : _107639 -> Prop) (s : _107642 -> Prop) (d : _107639) : (term1722 _107639 _107642 _53776 t s d) = (term1723 _107639 _107642 _53776 t s d).
Proof. exact (@lem4545330 _107639 _107642 (term1721 _107639 _107642 _53776 t s) d). Qed.
Lemma lem4545333 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (t : _107639 -> Prop) (s : _107642 -> Prop) (d : _107639) : (_53776 t s d) = (term1723 _107639 _107642 _53776 t s d).
Proof. exact (TRANS (@lem4545327 _107639 _107642 _53776 t s d) (@lem4545331 _107639 _107642 _53776 t s d)). Qed.
Lemma lem4545334 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (t : _107639 -> Prop) (s : _107642 -> Prop) (d : _107639) : (term166 _107639 _107642 _53776 t s d) = (term1724 _107639 _107642 _53776 t s d).
Proof. exact (MK_COMB (@lem4545307 _107639 _107642) (@lem4545333 _107639 _107642 _53776 t s d)). Qed.
Lemma lem4545336 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem4545337 {_107639 _107642 : Type'} (f : type205 _107639 _107642) (x : type805 _107639 _107642) : (f x) = (@I (((_107642 -> _107639) -> Prop) -> (_107642 -> _107639) -> Prop) f x).
Proof. exact (@lem4545336 (type805 _107639 _107642) (type805 _107639 _107642) f x). Qed.
Lemma lem4545338 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (t : _107639 -> Prop) (s : _107642 -> Prop) (d : _107639) : (term1724 _107639 _107642 _53776 t s d) = (term1725 _107639 _107642 _53776 t s d).
Proof. exact (@lem4545337 _107639 _107642 (@GSPEC (_107642 -> _107639)) (term1723 _107639 _107642 _53776 t s d)). Qed.
Lemma lem4545339 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (t : _107639 -> Prop) (s : _107642 -> Prop) (d : _107639) : (term166 _107639 _107642 _53776 t s d) = (term1725 _107639 _107642 _53776 t s d).
Proof. exact (TRANS (@lem4545334 _107639 _107642 _53776 t s d) (@lem4545338 _107639 _107642 _53776 t s d)). Qed.
Lemma lem4545346 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem4545347 (f : type1606) (x : nat) : (f x) = (@I (nat -> nat -> nat) f x).
Proof. exact (@lem4545346 nat (nat -> nat) f x). Qed.
Lemma lem4545348 (n : nat) : (Nat.pow n) = (@I (nat -> nat -> nat) Nat.pow n).
Proof. exact (@lem4545347 Nat.pow n). Qed.
Lemma lem4545349 (m : nat) : m = m.
Proof. exact (eq_refl m). Qed.
Lemma lem4545350 (n : nat) (m : nat) : (Nat.pow n m) = (@I (nat -> nat -> nat) Nat.pow n m).
Proof. exact (MK_COMB (@lem4545348 n) (@lem4545349 m)). Qed.
Lemma lem4545352 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem4545353 (f : nat -> nat) (x : nat) : (f x) = (@I (nat -> nat) f x).
Proof. exact (@lem4545352 nat nat f x). Qed.
Lemma lem4545354 (n : nat) (m : nat) : (@I (nat -> nat -> nat) Nat.pow n m) = (term1726 n m).
Proof. exact (@lem4545353 (@I (nat -> nat -> nat) Nat.pow n) m). Qed.
Lemma lem4545356 (n : nat) (m : nat) : (Nat.pow n m) = (term1726 n m).
Proof. exact (TRANS (@lem4545350 n m) (@lem4545354 n m)). Qed.
Lemma lem4545357 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (t : _107639 -> Prop) (s : _107642 -> Prop) (d : _107639) : (term167 _107639 _107642 _53776 t s d) = (term1727 _107639 _107642 _53776 t s d).
Proof. exact (MK_COMB (@lem4545306 _107639 _107642) (@lem4545339 _107639 _107642 _53776 t s d)). Qed.
Lemma lem4545358 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (t : _107639 -> Prop) (s : _107642 -> Prop) (d : _107639) (n : nat) (m : nat) : (term168 _107639 _107642 _53776 t s d n m) = (term1728 _107639 _107642 _53776 t s d n m).
Proof. exact (MK_COMB (@lem4545357 _107639 _107642 _53776 t s d) (@lem4545356 n m)). Qed.
Lemma lem4545360 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem4545361 {_107639 _107642 : Type'} (f : type206 _107639 _107642) (x : type805 _107639 _107642) : (f x) = (@I (((_107642 -> _107639) -> Prop) -> nat -> Prop) f x).
Proof. exact (@lem4545360 (type805 _107639 _107642) (nat -> Prop) f x). Qed.
Lemma lem4545362 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (t : _107639 -> Prop) (s : _107642 -> Prop) (d : _107639) : (term1727 _107639 _107642 _53776 t s d) = (term1729 _107639 _107642 _53776 t s d).
Proof. exact (@lem4545361 _107639 _107642 (@HAS_SIZE (_107642 -> _107639)) (term1725 _107639 _107642 _53776 t s d)). Qed.
Lemma lem4545363 (n : nat) (m : nat) : (term1726 n m) = (term1726 n m).
Proof. exact (eq_refl (term1726 n m)). Qed.
Lemma lem4545364 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (t : _107639 -> Prop) (s : _107642 -> Prop) (d : _107639) (n : nat) (m : nat) : (term1728 _107639 _107642 _53776 t s d n m) = (term1730 _107639 _107642 _53776 t s d n m).
Proof. exact (MK_COMB (@lem4545362 _107639 _107642 _53776 t s d) (@lem4545363 n m)). Qed.
Lemma lem4545366 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem4545367 (f : nat -> Prop) (x : nat) : (f x) = (@I (nat -> Prop) f x).
Proof. exact (@lem4545366 nat Prop f x). Qed.
Lemma lem4545368 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (t : _107639 -> Prop) (s : _107642 -> Prop) (d : _107639) (n : nat) (m : nat) : (term1730 _107639 _107642 _53776 t s d n m) = (term1731 _107639 _107642 _53776 t s d n m).
Proof. exact (@lem4545367 (term1729 _107639 _107642 _53776 t s d) (term1726 n m)). Qed.
Lemma lem4545369 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (t : _107639 -> Prop) (s : _107642 -> Prop) (d : _107639) (n : nat) (m : nat) : (term1728 _107639 _107642 _53776 t s d n m) = (term1731 _107639 _107642 _53776 t s d n m).
Proof. exact (TRANS (@lem4545364 _107639 _107642 _53776 t s d n m) (@lem4545368 _107639 _107642 _53776 t s d n m)). Qed.
Lemma lem4545370 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (t : _107639 -> Prop) (s : _107642 -> Prop) (d : _107639) (n : nat) (m : nat) : (term168 _107639 _107642 _53776 t s d n m) = (term1731 _107639 _107642 _53776 t s d n m).
Proof. exact (TRANS (@lem4545358 _107639 _107642 _53776 t s d n m) (@lem4545369 _107639 _107642 _53776 t s d n m)). Qed.
Lemma lem4545371 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem4545378 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem4545379 {_107639 : Type'} (f : type682 _107639) (x : _107639 -> Prop) : (f x) = (@I ((_107639 -> Prop) -> nat -> Prop) f x).
Proof. exact (@lem4545378 (_107639 -> Prop) (nat -> Prop) f x). Qed.
Lemma lem4545380 {_107639 : Type'} (t : _107639 -> Prop) : (@HAS_SIZE _107639 t) = (@I ((_107639 -> Prop) -> nat -> Prop) (@HAS_SIZE _107639) t).
Proof. exact (@lem4545379 _107639 (@HAS_SIZE _107639) t). Qed.
Lemma lem4545381 (n : nat) : n = n.
Proof. exact (eq_refl n). Qed.
Lemma lem4545382 {_107639 : Type'} (t : _107639 -> Prop) (n : nat) : (@HAS_SIZE _107639 t n) = (@I ((_107639 -> Prop) -> nat -> Prop) (@HAS_SIZE _107639) t n).
Proof. exact (MK_COMB (@lem4545380 _107639 t) (@lem4545381 n)). Qed.
Lemma lem4545384 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem4545385 (f : nat -> Prop) (x : nat) : (f x) = (@I (nat -> Prop) f x).
Proof. exact (@lem4545384 nat Prop f x). Qed.
Lemma lem4545386 {_107639 : Type'} (t : _107639 -> Prop) (n : nat) : (@I ((_107639 -> Prop) -> nat -> Prop) (@HAS_SIZE _107639) t n) = (term1666 _107639 t n).
Proof. exact (@lem4545385 (@I ((_107639 -> Prop) -> nat -> Prop) (@HAS_SIZE _107639) t) n). Qed.
Lemma lem4545388 {_107639 : Type'} (t : _107639 -> Prop) (n : nat) : (@HAS_SIZE _107639 t n) = (term1666 _107639 t n).
Proof. exact (TRANS (@lem4545382 _107639 t n) (@lem4545386 _107639 t n)). Qed.
Lemma lem4545389 {_107639 : Type'} (t : _107639 -> Prop) (n : nat) : (term1667 _107639 t n) = (term1668 _107639 t n).
Proof. exact (MK_COMB (@lem4545371) (@lem4545388 _107639 t n)). Qed.
Lemma lem4545390 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem4545397 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem4545398 {_107642 : Type'} (f : type682 _107642) (x : _107642 -> Prop) : (f x) = (@I ((_107642 -> Prop) -> nat -> Prop) f x).
Proof. exact (@lem4545397 (_107642 -> Prop) (nat -> Prop) f x). Qed.
Lemma lem4545399 {_107642 : Type'} (s : _107642 -> Prop) : (@HAS_SIZE _107642 s) = (@I ((_107642 -> Prop) -> nat -> Prop) (@HAS_SIZE _107642) s).
Proof. exact (@lem4545398 _107642 (@HAS_SIZE _107642) s). Qed.
Lemma lem4545400 (m : nat) : m = m.
Proof. exact (eq_refl m). Qed.
Lemma lem4545401 {_107642 : Type'} (s : _107642 -> Prop) (m : nat) : (@HAS_SIZE _107642 s m) = (@I ((_107642 -> Prop) -> nat -> Prop) (@HAS_SIZE _107642) s m).
Proof. exact (MK_COMB (@lem4545399 _107642 s) (@lem4545400 m)). Qed.
Lemma lem4545403 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem4545404 (f : nat -> Prop) (x : nat) : (f x) = (@I (nat -> Prop) f x).
Proof. exact (@lem4545403 nat Prop f x). Qed.
Lemma lem4545405 {_107642 : Type'} (s : _107642 -> Prop) (m : nat) : (@I ((_107642 -> Prop) -> nat -> Prop) (@HAS_SIZE _107642) s m) = (term1666 _107642 s m).
Proof. exact (@lem4545404 (@I ((_107642 -> Prop) -> nat -> Prop) (@HAS_SIZE _107642) s) m). Qed.
Lemma lem4545407 {_107642 : Type'} (s : _107642 -> Prop) (m : nat) : (@HAS_SIZE _107642 s m) = (term1666 _107642 s m).
Proof. exact (TRANS (@lem4545401 _107642 s m) (@lem4545405 _107642 s m)). Qed.
Lemma lem4545408 {_107642 : Type'} (s : _107642 -> Prop) (m : nat) : (term1667 _107642 s m) = (term1668 _107642 s m).
Proof. exact (MK_COMB (@lem4545390) (@lem4545407 _107642 s m)). Qed.
Lemma lem4545409 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem4545410 {_107642 : Type'} (s : _107642 -> Prop) (m : nat) : (term1669 _107642 s m) = (term1670 _107642 s m).
Proof. exact (MK_COMB (@lem4545409) (@lem4545408 _107642 s m)). Qed.
Lemma lem4545411 {_107639 _107642 : Type'} (s : _107642 -> Prop) (m : nat) (t : _107639 -> Prop) (n : nat) : (term1645 _107639 _107642 s m t n) = (term1732 _107639 _107642 s m t n).
Proof. exact (MK_COMB (@lem4545410 _107642 s m) (@lem4545389 _107639 t n)). Qed.
Lemma lem4545412 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem4545413 {_107639 _107642 : Type'} (s : _107642 -> Prop) (m : nat) (t : _107639 -> Prop) (n : nat) : (term1647 _107639 _107642 s m t n) = (term1733 _107639 _107642 s m t n).
Proof. exact (MK_COMB (@lem4545412) (@lem4545411 _107639 _107642 s m t n)). Qed.
Lemma lem4545414 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (t : _107639 -> Prop) (s : _107642 -> Prop) (d : _107639) (n : nat) (m : nat) : (term1649 _107639 _107642 _53776 t s d n m) = (term1734 _107639 _107642 _53776 t s d n m).
Proof. exact (MK_COMB (@lem4545413 _107639 _107642 s m t n) (@lem4545370 _107639 _107642 _53776 t s d n m)). Qed.
Lemma lem4545415 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (t : _107639 -> Prop) (d : _107639) (n : nat) (m : nat) : (term1651 _107639 _107642 _53776 t d n m) = (term1735 _107639 _107642 _53776 t d n m).
Proof. exact (fun_ext (fun s : _107642 -> Prop => @lem4545414 _107639 _107642 _53776 t s d n m)). Qed.
Lemma lem4545416 {_107642 : Type'} : (@all (_107642 -> Prop)) = (@all (_107642 -> Prop)).
Proof. exact (eq_refl (@all (_107642 -> Prop))). Qed.
Lemma lem4545417 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (t : _107639 -> Prop) (d : _107639) (n : nat) (m : nat) : (term1652 _107639 _107642 _53776 t d n m) = (term1736 _107639 _107642 _53776 t d n m).
Proof. exact (MK_COMB (@lem4545416 _107642) (@lem4545415 _107639 _107642 _53776 t d n m)). Qed.
Lemma lem4545418 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (t : _107639 -> Prop) (d : _107639) (n : nat) : (term1653 _107639 _107642 _53776 t d n) = (term1737 _107639 _107642 _53776 t d n).
Proof. exact (fun_ext (fun m : nat => @lem4545417 _107639 _107642 _53776 t d n m)). Qed.
Lemma lem4545419 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4545420 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (t : _107639 -> Prop) (d : _107639) (n : nat) : (term1654 _107639 _107642 _53776 t d n) = (term1738 _107639 _107642 _53776 t d n).
Proof. exact (MK_COMB (@lem4545419) (@lem4545418 _107639 _107642 _53776 t d n)). Qed.
Lemma lem4545421 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (d : _107639) (n : nat) : (term1655 _107639 _107642 _53776 d n) = (term1739 _107639 _107642 _53776 d n).
Proof. exact (fun_ext (fun t : _107639 -> Prop => @lem4545420 _107639 _107642 _53776 t d n)). Qed.
Lemma lem4545422 {_107639 : Type'} : (@all (_107639 -> Prop)) = (@all (_107639 -> Prop)).
Proof. exact (eq_refl (@all (_107639 -> Prop))). Qed.
Lemma lem4545423 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (d : _107639) (n : nat) : (term1656 _107639 _107642 _53776 d n) = (term1740 _107639 _107642 _53776 d n).
Proof. exact (MK_COMB (@lem4545422 _107639) (@lem4545421 _107639 _107642 _53776 d n)). Qed.
Lemma lem4545424 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (d : _107639) : (term1657 _107639 _107642 _53776 d) = (term1741 _107639 _107642 _53776 d).
Proof. exact (fun_ext (fun n : nat => @lem4545423 _107639 _107642 _53776 d n)). Qed.
Lemma lem4545425 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4545426 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (d : _107639) : (term1658 _107639 _107642 _53776 d) = (term1742 _107639 _107642 _53776 d).
Proof. exact (MK_COMB (@lem4545425) (@lem4545424 _107639 _107642 _53776 d)). Qed.
Lemma lem4545427 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) : (term1659 _107639 _107642 _53776) = (term1743 _107639 _107642 _53776).
Proof. exact (fun_ext (fun d : _107639 => @lem4545426 _107639 _107642 _53776 d)). Qed.
Lemma lem4545428 {_107639 : Type'} : (@all _107639) = (@all _107639).
Proof. exact (eq_refl (@all _107639)). Qed.
Lemma lem4545429 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) : (term1660 _107639 _107642 _53776) = (term1744 _107639 _107642 _53776).
Proof. exact (MK_COMB (@lem4545428 _107639) (@lem4545427 _107639 _107642 _53776)). Qed.
Lemma lem4545430 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (h1 : term179 _107639 _107642 _53776) : term1744 _107639 _107642 _53776.
Proof. exact (EQ_MP (@lem4545429 _107639 _107642 _53776) (@lem4543310 _107639 _107642 _53776 h1)). Qed.
Lemma lem4546181 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem4546182 : (@eq nat) = (@eq nat).
Proof. exact (eq_refl (@eq nat)). Qed.
Lemma lem4546183 {_107639 _107642 : Type'} : (@CARD (_107642 -> _107639)) = (@CARD (_107642 -> _107639)).
Proof. exact (eq_refl (@CARD (_107642 -> _107639))). Qed.
Lemma lem4546184 {_107639 _107642 : Type'} : (@GSPEC (_107642 -> _107639)) = (@GSPEC (_107642 -> _107639)).
Proof. exact (eq_refl (@GSPEC (_107642 -> _107639))). Qed.
Lemma lem4546193 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem4546194 {_107639 _107642 : Type'} (f : type656 _107639 _107642) (x : _107639 -> Prop) : (f x) = (@I ((_107639 -> Prop) -> (_107642 -> Prop) -> _107639 -> (_107642 -> _107639) -> Prop) f x).
Proof. exact (@lem4546193 (_107639 -> Prop) (type859 _107639 _107642) f x). Qed.
Lemma lem4546195 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (t : _107639 -> Prop) : (_53776 t) = (@I ((_107639 -> Prop) -> (_107642 -> Prop) -> _107639 -> (_107642 -> _107639) -> Prop) _53776 t).
Proof. exact (@lem4546194 _107639 _107642 _53776 t). Qed.
Lemma lem4546196 {_107642 : Type'} (s : _107642 -> Prop) : s = s.
Proof. exact (eq_refl s). Qed.
Lemma lem4546197 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (t : _107639 -> Prop) (s : _107642 -> Prop) : (_53776 t s) = (@I ((_107639 -> Prop) -> (_107642 -> Prop) -> _107639 -> (_107642 -> _107639) -> Prop) _53776 t s).
Proof. exact (MK_COMB (@lem4546195 _107639 _107642 _53776 t) (@lem4546196 _107642 s)). Qed.
Lemma lem4546199 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem4546200 {_107639 _107642 : Type'} (f : type859 _107639 _107642) (x : _107642 -> Prop) : (f x) = (@I ((_107642 -> Prop) -> _107639 -> (_107642 -> _107639) -> Prop) f x).
Proof. exact (@lem4546199 (_107642 -> Prop) (type1372 _107639 _107642) f x). Qed.
Lemma lem4546201 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (t : _107639 -> Prop) (s : _107642 -> Prop) : (@I ((_107639 -> Prop) -> (_107642 -> Prop) -> _107639 -> (_107642 -> _107639) -> Prop) _53776 t s) = (term1721 _107639 _107642 _53776 t s).
Proof. exact (@lem4546200 _107639 _107642 (@I ((_107639 -> Prop) -> (_107642 -> Prop) -> _107639 -> (_107642 -> _107639) -> Prop) _53776 t) s). Qed.
Lemma lem4546202 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (t : _107639 -> Prop) (s : _107642 -> Prop) : (_53776 t s) = (term1721 _107639 _107642 _53776 t s).
Proof. exact (TRANS (@lem4546197 _107639 _107642 _53776 t s) (@lem4546201 _107639 _107642 _53776 t s)). Qed.
Lemma lem4546203 {_107639 : Type'} (d : _107639) : d = d.
Proof. exact (eq_refl d). Qed.
Lemma lem4546204 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (t : _107639 -> Prop) (s : _107642 -> Prop) (d : _107639) : (_53776 t s d) = (term1722 _107639 _107642 _53776 t s d).
Proof. exact (MK_COMB (@lem4546202 _107639 _107642 _53776 t s) (@lem4546203 _107639 d)). Qed.
Lemma lem4546206 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem4546207 {_107639 _107642 : Type'} (f : type1372 _107639 _107642) (x : _107639) : (f x) = (@I (_107639 -> (_107642 -> _107639) -> Prop) f x).
Proof. exact (@lem4546206 _107639 (type805 _107639 _107642) f x). Qed.
Lemma lem4546208 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (t : _107639 -> Prop) (s : _107642 -> Prop) (d : _107639) : (term1722 _107639 _107642 _53776 t s d) = (term1723 _107639 _107642 _53776 t s d).
Proof. exact (@lem4546207 _107639 _107642 (term1721 _107639 _107642 _53776 t s) d). Qed.
Lemma lem4546210 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (t : _107639 -> Prop) (s : _107642 -> Prop) (d : _107639) : (_53776 t s d) = (term1723 _107639 _107642 _53776 t s d).
Proof. exact (TRANS (@lem4546204 _107639 _107642 _53776 t s d) (@lem4546208 _107639 _107642 _53776 t s d)). Qed.
Lemma lem4546211 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (t : _107639 -> Prop) (s : _107642 -> Prop) (d : _107639) : (term166 _107639 _107642 _53776 t s d) = (term1724 _107639 _107642 _53776 t s d).
Proof. exact (MK_COMB (@lem4546184 _107639 _107642) (@lem4546210 _107639 _107642 _53776 t s d)). Qed.
Lemma lem4546213 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem4546214 {_107639 _107642 : Type'} (f : type205 _107639 _107642) (x : type805 _107639 _107642) : (f x) = (@I (((_107642 -> _107639) -> Prop) -> (_107642 -> _107639) -> Prop) f x).
Proof. exact (@lem4546213 (type805 _107639 _107642) (type805 _107639 _107642) f x). Qed.
Lemma lem4546215 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (t : _107639 -> Prop) (s : _107642 -> Prop) (d : _107639) : (term1724 _107639 _107642 _53776 t s d) = (term1725 _107639 _107642 _53776 t s d).
Proof. exact (@lem4546214 _107639 _107642 (@GSPEC (_107642 -> _107639)) (term1723 _107639 _107642 _53776 t s d)). Qed.
Lemma lem4546216 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (t : _107639 -> Prop) (s : _107642 -> Prop) (d : _107639) : (term166 _107639 _107642 _53776 t s d) = (term1725 _107639 _107642 _53776 t s d).
Proof. exact (TRANS (@lem4546211 _107639 _107642 _53776 t s d) (@lem4546215 _107639 _107642 _53776 t s d)). Qed.
Lemma lem4546217 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (t : _107639 -> Prop) (s : _107642 -> Prop) (d : _107639) : (term217 _107639 _107642 _53776 t s d) = (term1745 _107639 _107642 _53776 t s d).
Proof. exact (MK_COMB (@lem4546183 _107639 _107642) (@lem4546216 _107639 _107642 _53776 t s d)). Qed.
Lemma lem4546219 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem4546220 {_107639 _107642 : Type'} (f : type208 _107639 _107642) (x : type805 _107639 _107642) : (f x) = (@I (((_107642 -> _107639) -> Prop) -> nat) f x).
Proof. exact (@lem4546219 (type805 _107639 _107642) nat f x). Qed.
Lemma lem4546221 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (t : _107639 -> Prop) (s : _107642 -> Prop) (d : _107639) : (term1745 _107639 _107642 _53776 t s d) = (term1746 _107639 _107642 _53776 t s d).
Proof. exact (@lem4546220 _107639 _107642 (@CARD (_107642 -> _107639)) (term1725 _107639 _107642 _53776 t s d)). Qed.
Lemma lem4546222 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (t : _107639 -> Prop) (s : _107642 -> Prop) (d : _107639) : (term217 _107639 _107642 _53776 t s d) = (term1746 _107639 _107642 _53776 t s d).
Proof. exact (TRANS (@lem4546217 _107639 _107642 _53776 t s d) (@lem4546221 _107639 _107642 _53776 t s d)). Qed.
Lemma lem4546223 : Nat.pow = Nat.pow.
Proof. exact (eq_refl Nat.pow). Qed.
Lemma lem4546228 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem4546229 {_107639 : Type'} (f : type687 _107639) (x : _107639 -> Prop) : (f x) = (@I ((_107639 -> Prop) -> nat) f x).
Proof. exact (@lem4546228 (_107639 -> Prop) nat f x). Qed.
Lemma lem4546231 {_107639 : Type'} (t : _107639 -> Prop) : (@CARD _107639 t) = (@I ((_107639 -> Prop) -> nat) (@CARD _107639) t).
Proof. exact (@lem4546229 _107639 (@CARD _107639) t). Qed.
Lemma lem4546236 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem4546237 {_107642 : Type'} (f : type687 _107642) (x : _107642 -> Prop) : (f x) = (@I ((_107642 -> Prop) -> nat) f x).
Proof. exact (@lem4546236 (_107642 -> Prop) nat f x). Qed.
Lemma lem4546239 {_107642 : Type'} (s : _107642 -> Prop) : (@CARD _107642 s) = (@I ((_107642 -> Prop) -> nat) (@CARD _107642) s).
Proof. exact (@lem4546237 _107642 (@CARD _107642) s). Qed.
Lemma lem4546240 {_107639 : Type'} (t : _107639 -> Prop) : (term1747 _107639 t) = (term1748 _107639 t).
Proof. exact (MK_COMB (@lem4546223) (@lem4546231 _107639 t)). Qed.
Lemma lem4546241 {_107639 _107642 : Type'} (t : _107639 -> Prop) (s : _107642 -> Prop) : (term215 _107639 _107642 t s) = (term1749 _107639 _107642 t s).
Proof. exact (MK_COMB (@lem4546240 _107639 t) (@lem4546239 _107642 s)). Qed.
Lemma lem4546243 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem4546244 (f : type1606) (x : nat) : (f x) = (@I (nat -> nat -> nat) f x).
Proof. exact (@lem4546243 nat (nat -> nat) f x). Qed.
Lemma lem4546245 {_107639 : Type'} (t : _107639 -> Prop) : (term1748 _107639 t) = (term1750 _107639 t).
Proof. exact (@lem4546244 Nat.pow (@I ((_107639 -> Prop) -> nat) (@CARD _107639) t)). Qed.
Lemma lem4546246 {_107642 : Type'} (s : _107642 -> Prop) : (@I ((_107642 -> Prop) -> nat) (@CARD _107642) s) = (@I ((_107642 -> Prop) -> nat) (@CARD _107642) s).
Proof. exact (eq_refl (@I ((_107642 -> Prop) -> nat) (@CARD _107642) s)). Qed.
Lemma lem4546247 {_107639 _107642 : Type'} (t : _107639 -> Prop) (s : _107642 -> Prop) : (term1749 _107639 _107642 t s) = (term1751 _107639 _107642 t s).
Proof. exact (MK_COMB (@lem4546245 _107639 t) (@lem4546246 _107642 s)). Qed.
Lemma lem4546249 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem4546250 (f : nat -> nat) (x : nat) : (f x) = (@I (nat -> nat) f x).
Proof. exact (@lem4546249 nat nat f x). Qed.
Lemma lem4546251 {_107639 _107642 : Type'} (t : _107639 -> Prop) (s : _107642 -> Prop) : (term1751 _107639 _107642 t s) = (term1752 _107639 _107642 t s).
Proof. exact (@lem4546250 (term1750 _107639 t) (@I ((_107642 -> Prop) -> nat) (@CARD _107642) s)). Qed.
Lemma lem4546252 {_107639 _107642 : Type'} (t : _107639 -> Prop) (s : _107642 -> Prop) : (term1749 _107639 _107642 t s) = (term1752 _107639 _107642 t s).
Proof. exact (TRANS (@lem4546247 _107639 _107642 t s) (@lem4546251 _107639 _107642 t s)). Qed.
Lemma lem4546253 {_107639 _107642 : Type'} (t : _107639 -> Prop) (s : _107642 -> Prop) : (term215 _107639 _107642 t s) = (term1752 _107639 _107642 t s).
Proof. exact (TRANS (@lem4546241 _107639 _107642 t s) (@lem4546252 _107639 _107642 t s)). Qed.
Lemma lem4546254 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (t : _107639 -> Prop) (s : _107642 -> Prop) (d : _107639) : (term219 _107639 _107642 _53776 t s d) = (term1753 _107639 _107642 _53776 t s d).
Proof. exact (MK_COMB (@lem4546182) (@lem4546222 _107639 _107642 _53776 t s d)). Qed.
Lemma lem4546255 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (d : _107639) (t : _107639 -> Prop) (s : _107642 -> Prop) : ((term217 _107639 _107642 _53776 t s d) = (term215 _107639 _107642 t s)) = ((term1746 _107639 _107642 _53776 t s d) = (term1752 _107639 _107642 t s)).
Proof. exact (MK_COMB (@lem4546254 _107639 _107642 _53776 t s d) (@lem4546253 _107639 _107642 t s)). Qed.
Lemma lem4546256 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (d : _107639) (t : _107639 -> Prop) (s : _107642 -> Prop) : (term1754 _107639 _107642 _53776 d t s) = (term1755 _107639 _107642 _53776 d t s).
Proof. exact (MK_COMB (@lem4546181) (@lem4546255 _107639 _107642 _53776 d t s)). Qed.
Lemma lem4546261 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem4546262 {_107639 : Type'} (f : type686 _107639) (x : _107639 -> Prop) : (f x) = (@I ((_107639 -> Prop) -> Prop) f x).
Proof. exact (@lem4546261 (_107639 -> Prop) Prop f x). Qed.
Lemma lem4546264 {_107639 : Type'} (t : _107639 -> Prop) : (@FINITE _107639 t) = (@I ((_107639 -> Prop) -> Prop) (@FINITE _107639) t).
Proof. exact (@lem4546262 _107639 (@FINITE _107639) t). Qed.
Lemma lem4546269 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem4546270 {_107642 : Type'} (f : type686 _107642) (x : _107642 -> Prop) : (f x) = (@I ((_107642 -> Prop) -> Prop) f x).
Proof. exact (@lem4546269 (_107642 -> Prop) Prop f x). Qed.
Lemma lem4546272 {_107642 : Type'} (s : _107642 -> Prop) : (@FINITE _107642 s) = (@I ((_107642 -> Prop) -> Prop) (@FINITE _107642) s).
Proof. exact (@lem4546270 _107642 (@FINITE _107642) s). Qed.
Lemma lem4546273 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4546274 {_107642 : Type'} (s : _107642 -> Prop) : (term1663 _107642 s) = (term1664 _107642 s).
Proof. exact (MK_COMB (@lem4546273) (@lem4546272 _107642 s)). Qed.
Lemma lem4546275 {_107639 _107642 : Type'} (s : _107642 -> Prop) (t : _107639 -> Prop) : (term1514 _107639 _107642 s t) = (term1756 _107639 _107642 s t).
Proof. exact (MK_COMB (@lem4546274 _107642 s) (@lem4546264 _107639 t)). Qed.
Lemma lem4546276 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4546277 {_107639 _107642 : Type'} (s : _107642 -> Prop) (t : _107639 -> Prop) : (term1757 _107639 _107642 s t) = (term1758 _107639 _107642 s t).
Proof. exact (MK_COMB (@lem4546276) (@lem4546275 _107639 _107642 s t)). Qed.
Lemma lem4546278 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (d : _107639) (t : _107639 -> Prop) (s : _107642 -> Prop) : (term1513 _107639 _107642 _53776 d t s) = (term1759 _107639 _107642 _53776 d t s).
Proof. exact (MK_COMB (@lem4546277 _107639 _107642 s t) (@lem4546256 _107639 _107642 _53776 d t s)). Qed.
Lemma lem4546279 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (d : _107639) (t : _107639 -> Prop) (s : _107642 -> Prop) (h1 : term1513 _107639 _107642 _53776 d t s) : term1759 _107639 _107642 _53776 d t s.
Proof. exact (EQ_MP (@lem4546278 _107639 _107642 _53776 d t s) (@lem4543894 _107639 _107642 _53776 d t s h1)). Qed.
Lemma lem4549704 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (d : _107639) (t : _107639 -> Prop) (s : _107642 -> Prop) (h1 : term1513 _107639 _107642 _53776 d t s) : term1756 _107639 _107642 s t.
Proof. exact (proj1 (@lem4546279 _107639 _107642 _53776 d t s h1)). Qed.
Lemma lem4549719 {_107639 _107642 : Type'} (h1 : term18 _107639 _107642) : term1705 _107639 _107642.
Proof. exact (proj2 (@lem4544657 _107639 _107642 h1)). Qed.
Lemma lem4549728 {_107642 : Type'} (h1 : term14 _107642) : term1688 _107642.
Proof. exact (proj1 (@lem4544225 _107642 h1)). Qed.
Lemma lem4549730 {_107639 : Type'} (h1 : term14 _107639) : term1688 _107639.
Proof. exact (proj1 (@lem4544117 _107639 h1)). Qed.
Lemma lem4549746 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (t : _107639 -> Prop) (s : _107642 -> Prop) (d : _107639) (n : nat) (m : nat) : (term1734 _107639 _107642 _53776 t s d n m) = (term1734 _107639 _107642 _53776 t s d n m).
Proof. exact (eq_refl (term1734 _107639 _107642 _53776 t s d n m)). Qed.
Lemma lem4549747 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (t : _107639 -> Prop) (d : _107639) (n : nat) (m : nat) : (term1735 _107639 _107642 _53776 t d n m) = (term1735 _107639 _107642 _53776 t d n m).
Proof. exact (fun_ext (fun s : _107642 -> Prop => @lem4549746 _107639 _107642 _53776 t s d n m)). Qed.
Lemma lem4549748 {_107642 : Type'} : (@all (_107642 -> Prop)) = (@all (_107642 -> Prop)).
Proof. exact (eq_refl (@all (_107642 -> Prop))). Qed.
Lemma lem4549749 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (t : _107639 -> Prop) (d : _107639) (n : nat) (m : nat) : (term1736 _107639 _107642 _53776 t d n m) = (term1736 _107639 _107642 _53776 t d n m).
Proof. exact (MK_COMB (@lem4549748 _107642) (@lem4549747 _107639 _107642 _53776 t d n m)). Qed.
Lemma lem4549750 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (t : _107639 -> Prop) (d : _107639) (n : nat) : (term1737 _107639 _107642 _53776 t d n) = (term1737 _107639 _107642 _53776 t d n).
Proof. exact (fun_ext (fun m : nat => @lem4549749 _107639 _107642 _53776 t d n m)). Qed.
Lemma lem4549751 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4549752 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (t : _107639 -> Prop) (d : _107639) (n : nat) : (term1738 _107639 _107642 _53776 t d n) = (term1738 _107639 _107642 _53776 t d n).
Proof. exact (MK_COMB (@lem4549751) (@lem4549750 _107639 _107642 _53776 t d n)). Qed.
Lemma lem4549753 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (d : _107639) (n : nat) : (term1739 _107639 _107642 _53776 d n) = (term1739 _107639 _107642 _53776 d n).
Proof. exact (fun_ext (fun t : _107639 -> Prop => @lem4549752 _107639 _107642 _53776 t d n)). Qed.
Lemma lem4549754 {_107639 : Type'} : (@all (_107639 -> Prop)) = (@all (_107639 -> Prop)).
Proof. exact (eq_refl (@all (_107639 -> Prop))). Qed.
Lemma lem4549755 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (d : _107639) (n : nat) : (term1740 _107639 _107642 _53776 d n) = (term1740 _107639 _107642 _53776 d n).
Proof. exact (MK_COMB (@lem4549754 _107639) (@lem4549753 _107639 _107642 _53776 d n)). Qed.
Lemma lem4549756 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (d : _107639) : (term1741 _107639 _107642 _53776 d) = (term1741 _107639 _107642 _53776 d).
Proof. exact (fun_ext (fun n : nat => @lem4549755 _107639 _107642 _53776 d n)). Qed.
Lemma lem4549757 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4549758 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (d : _107639) : (term1742 _107639 _107642 _53776 d) = (term1742 _107639 _107642 _53776 d).
Proof. exact (MK_COMB (@lem4549757) (@lem4549756 _107639 _107642 _53776 d)). Qed.
Lemma lem4549759 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) : (term1743 _107639 _107642 _53776) = (term1743 _107639 _107642 _53776).
Proof. exact (fun_ext (fun d : _107639 => @lem4549758 _107639 _107642 _53776 d)). Qed.
Lemma lem4549760 {_107639 : Type'} : (@all _107639) = (@all _107639).
Proof. exact (eq_refl (@all _107639)). Qed.
Lemma lem4549762 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) : (term1744 _107639 _107642 _53776) = (term1744 _107639 _107642 _53776).
Proof. exact (MK_COMB (@lem4549760 _107639) (@lem4549759 _107639 _107642 _53776)). Qed.
Lemma lem4549763 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (h1 : term179 _107639 _107642 _53776) : term1744 _107639 _107642 _53776.
Proof. exact (EQ_MP (@lem4549762 _107639 _107642 _53776) (@lem4545430 _107639 _107642 _53776 h1)). Qed.
Lemma lem4551444 {_107639 _107642 : Type'} (s : type805 _107639 _107642) (n : nat) : (term1701 _107639 _107642 s n) = (term1760 _107639 _107642 s n).
Proof. exact (@lem19490 (@I (((_107642 -> _107639) -> Prop) -> Prop) (@FINITE (_107642 -> _107639)) s) (term1698 _107639 _107642 s n) ((@I (((_107642 -> _107639) -> Prop) -> nat) (@CARD (_107642 -> _107639)) s) = n)). Qed.
Lemma lem4551445 {_107639 _107642 : Type'} (s : type805 _107639 _107642) : (term1702 _107639 _107642 s) = (term1761 _107639 _107642 s).
Proof. exact (fun_ext (fun n : nat => @lem4551444 _107639 _107642 s n)). Qed.
Lemma lem4551446 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4551447 {_107639 _107642 : Type'} (s : type805 _107639 _107642) : (term1703 _107639 _107642 s) = (term1762 _107639 _107642 s).
Proof. exact (MK_COMB (@lem4551446) (@lem4551445 _107639 _107642 s)). Qed.
Lemma lem4551448 {_107639 _107642 : Type'} : (term1704 _107639 _107642) = (term1763 _107639 _107642).
Proof. exact (fun_ext (fun s : type805 _107639 _107642 => @lem4551447 _107639 _107642 s)). Qed.
Lemma lem4551449 {_107639 _107642 : Type'} : (@all ((_107642 -> _107639) -> Prop)) = (@all ((_107642 -> _107639) -> Prop)).
Proof. exact (eq_refl (@all ((_107642 -> _107639) -> Prop))). Qed.
Lemma lem4551451 {_107639 _107642 : Type'} : (term1705 _107639 _107642) = (term1764 _107639 _107642).
Proof. exact (MK_COMB (@lem4551449 _107639 _107642) (@lem4551448 _107639 _107642)). Qed.
Lemma lem4551452 {_107639 _107642 : Type'} (h1 : term18 _107639 _107642) : term1764 _107639 _107642.
Proof. exact (EQ_MP (@lem4551451 _107639 _107642) (@lem4549719 _107639 _107642 h1)). Qed.
Lemma lem4551610 {_107642 : Type'} (s : _107642 -> Prop) (n : nat) : (term1684 _107642 s n) = (term1684 _107642 s n).
Proof. exact (eq_refl (term1684 _107642 s n)). Qed.
Lemma lem4551611 {_107642 : Type'} (s : _107642 -> Prop) : (term1685 _107642 s) = (term1685 _107642 s).
Proof. exact (fun_ext (fun n : nat => @lem4551610 _107642 s n)). Qed.
Lemma lem4551612 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4551613 {_107642 : Type'} (s : _107642 -> Prop) : (term1686 _107642 s) = (term1686 _107642 s).
Proof. exact (MK_COMB (@lem4551612) (@lem4551611 _107642 s)). Qed.
Lemma lem4551614 {_107642 : Type'} : (term1687 _107642) = (term1687 _107642).
Proof. exact (fun_ext (fun s : _107642 -> Prop => @lem4551613 _107642 s)). Qed.
Lemma lem4551615 {_107642 : Type'} : (@all (_107642 -> Prop)) = (@all (_107642 -> Prop)).
Proof. exact (eq_refl (@all (_107642 -> Prop))). Qed.
Lemma lem4551617 {_107642 : Type'} : (term1688 _107642) = (term1688 _107642).
Proof. exact (MK_COMB (@lem4551615 _107642) (@lem4551614 _107642)). Qed.
Lemma lem4551618 {_107642 : Type'} (h1 : term14 _107642) : term1688 _107642.
Proof. exact (EQ_MP (@lem4551617 _107642) (@lem4549728 _107642 h1)). Qed.
Lemma lem4551658 {_107639 : Type'} (s : _107639 -> Prop) (n : nat) : (term1684 _107639 s n) = (term1684 _107639 s n).
Proof. exact (eq_refl (term1684 _107639 s n)). Qed.
Lemma lem4551659 {_107639 : Type'} (s : _107639 -> Prop) : (term1685 _107639 s) = (term1685 _107639 s).
Proof. exact (fun_ext (fun n : nat => @lem4551658 _107639 s n)). Qed.
Lemma lem4551660 : (@all nat) = (@all nat).
Proof. exact (eq_refl (@all nat)). Qed.
Lemma lem4551661 {_107639 : Type'} (s : _107639 -> Prop) : (term1686 _107639 s) = (term1686 _107639 s).
Proof. exact (MK_COMB (@lem4551660) (@lem4551659 _107639 s)). Qed.
Lemma lem4551662 {_107639 : Type'} : (term1687 _107639) = (term1687 _107639).
Proof. exact (fun_ext (fun s : _107639 -> Prop => @lem4551661 _107639 s)). Qed.
Lemma lem4551663 {_107639 : Type'} : (@all (_107639 -> Prop)) = (@all (_107639 -> Prop)).
Proof. exact (eq_refl (@all (_107639 -> Prop))). Qed.
Lemma lem4551665 {_107639 : Type'} : (term1688 _107639) = (term1688 _107639).
Proof. exact (MK_COMB (@lem4551663 _107639) (@lem4551662 _107639)). Qed.
Lemma lem4551666 {_107639 : Type'} (h1 : term14 _107639) : term1688 _107639.
Proof. exact (EQ_MP (@lem4551665 _107639) (@lem4549730 _107639 h1)). Qed.
Lemma lem4551741 {_107639 _107642 : Type'} (_53783 : _107639) (_53776 : type656 _107639 _107642) (h1 : term179 _107639 _107642 _53776) : term1765 _107639 _107642 _53776 _53783.
Proof. exact (@lem4549763 _107639 _107642 _53776 h1 _53783). Qed.
Lemma lem4551742 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (_53783 : _107639) : (term1765 _107639 _107642 _53776 _53783) = (term1742 _107639 _107642 _53776 _53783).
Proof. exact (eq_refl (term1765 _107639 _107642 _53776 _53783)). Qed.
Lemma lem4551743 {_107639 _107642 : Type'} (_53783 : _107639) (_53776 : type656 _107639 _107642) (h1 : term179 _107639 _107642 _53776) : term1742 _107639 _107642 _53776 _53783.
Proof. exact (EQ_MP (@lem4551742 _107639 _107642 _53776 _53783) (@lem4551741 _107639 _107642 _53783 _53776 h1)). Qed.
Lemma lem4551744 {_107639 _107642 : Type'} (_53783 : _107639) (_53784 : nat) (_53776 : type656 _107639 _107642) (h1 : term179 _107639 _107642 _53776) : term1766 _107639 _107642 _53776 _53783 _53784.
Proof. exact (@lem4551743 _107639 _107642 _53783 _53776 h1 _53784). Qed.
Lemma lem4551745 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (_53783 : _107639) (_53784 : nat) : (term1766 _107639 _107642 _53776 _53783 _53784) = (term1740 _107639 _107642 _53776 _53783 _53784).
Proof. exact (eq_refl (term1766 _107639 _107642 _53776 _53783 _53784)). Qed.
Lemma lem4551746 {_107639 _107642 : Type'} (_53783 : _107639) (_53784 : nat) (_53776 : type656 _107639 _107642) (h1 : term179 _107639 _107642 _53776) : term1740 _107639 _107642 _53776 _53783 _53784.
Proof. exact (EQ_MP (@lem4551745 _107639 _107642 _53776 _53783 _53784) (@lem4551744 _107639 _107642 _53783 _53784 _53776 h1)). Qed.
Lemma lem4551747 {_107639 _107642 : Type'} (_53783 : _107639) (_53784 : nat) (_53785 : _107639 -> Prop) (_53776 : type656 _107639 _107642) (h1 : term179 _107639 _107642 _53776) : term1767 _107639 _107642 _53776 _53783 _53784 _53785.
Proof. exact (@lem4551746 _107639 _107642 _53783 _53784 _53776 h1 _53785). Qed.
Lemma lem4551748 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (_53785 : _107639 -> Prop) (_53783 : _107639) (_53784 : nat) : (term1767 _107639 _107642 _53776 _53783 _53784 _53785) = (term1738 _107639 _107642 _53776 _53785 _53783 _53784).
Proof. exact (eq_refl (term1767 _107639 _107642 _53776 _53783 _53784 _53785)). Qed.
Lemma lem4551749 {_107639 _107642 : Type'} (_53785 : _107639 -> Prop) (_53783 : _107639) (_53784 : nat) (_53776 : type656 _107639 _107642) (h1 : term179 _107639 _107642 _53776) : term1738 _107639 _107642 _53776 _53785 _53783 _53784.
Proof. exact (EQ_MP (@lem4551748 _107639 _107642 _53776 _53785 _53783 _53784) (@lem4551747 _107639 _107642 _53783 _53784 _53785 _53776 h1)). Qed.
Lemma lem4551750 {_107639 _107642 : Type'} (_53785 : _107639 -> Prop) (_53783 : _107639) (_53784 : nat) (_53786 : nat) (_53776 : type656 _107639 _107642) (h1 : term179 _107639 _107642 _53776) : term1768 _107639 _107642 _53776 _53785 _53783 _53784 _53786.
Proof. exact (@lem4551749 _107639 _107642 _53785 _53783 _53784 _53776 h1 _53786). Qed.
Lemma lem4551751 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (_53785 : _107639 -> Prop) (_53783 : _107639) (_53784 : nat) (_53786 : nat) : (term1768 _107639 _107642 _53776 _53785 _53783 _53784 _53786) = (term1736 _107639 _107642 _53776 _53785 _53783 _53784 _53786).
Proof. exact (eq_refl (term1768 _107639 _107642 _53776 _53785 _53783 _53784 _53786)). Qed.
Lemma lem4551752 {_107639 _107642 : Type'} (_53785 : _107639 -> Prop) (_53783 : _107639) (_53784 : nat) (_53786 : nat) (_53776 : type656 _107639 _107642) (h1 : term179 _107639 _107642 _53776) : term1736 _107639 _107642 _53776 _53785 _53783 _53784 _53786.
Proof. exact (EQ_MP (@lem4551751 _107639 _107642 _53776 _53785 _53783 _53784 _53786) (@lem4551750 _107639 _107642 _53785 _53783 _53784 _53786 _53776 h1)). Qed.
Lemma lem4551753 {_107639 _107642 : Type'} (_53785 : _107639 -> Prop) (_53783 : _107639) (_53784 : nat) (_53786 : nat) (_53787 : _107642 -> Prop) (_53776 : type656 _107639 _107642) (h1 : term179 _107639 _107642 _53776) : term1769 _107639 _107642 _53776 _53785 _53783 _53784 _53786 _53787.
Proof. exact (@lem4551752 _107639 _107642 _53785 _53783 _53784 _53786 _53776 h1 _53787). Qed.
Lemma lem4551754 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (_53785 : _107639 -> Prop) (_53787 : _107642 -> Prop) (_53783 : _107639) (_53784 : nat) (_53786 : nat) : (term1769 _107639 _107642 _53776 _53785 _53783 _53784 _53786 _53787) = (term1734 _107639 _107642 _53776 _53785 _53787 _53783 _53784 _53786).
Proof. exact (eq_refl (term1769 _107639 _107642 _53776 _53785 _53783 _53784 _53786 _53787)). Qed.
Lemma lem4551755 {_107639 _107642 : Type'} (_53785 : _107639 -> Prop) (_53787 : _107642 -> Prop) (_53783 : _107639) (_53784 : nat) (_53786 : nat) (_53776 : type656 _107639 _107642) (h1 : term179 _107639 _107642 _53776) : term1734 _107639 _107642 _53776 _53785 _53787 _53783 _53784 _53786.
Proof. exact (EQ_MP (@lem4551754 _107639 _107642 _53776 _53785 _53787 _53783 _53784 _53786) (@lem4551753 _107639 _107642 _53785 _53783 _53784 _53786 _53787 _53776 h1)). Qed.
Lemma lem4552113 {_107639 _107642 : Type'} (_53907 : type805 _107639 _107642) (h1 : term18 _107639 _107642) : term1770 _107639 _107642 _53907.
Proof. exact (@lem4551452 _107639 _107642 h1 _53907). Qed.
Lemma lem4552114 {_107639 _107642 : Type'} (_53907 : type805 _107639 _107642) : (term1770 _107639 _107642 _53907) = (term1762 _107639 _107642 _53907).
Proof. exact (eq_refl (term1770 _107639 _107642 _53907)). Qed.
Lemma lem4552115 {_107639 _107642 : Type'} (_53907 : type805 _107639 _107642) (h1 : term18 _107639 _107642) : term1762 _107639 _107642 _53907.
Proof. exact (EQ_MP (@lem4552114 _107639 _107642 _53907) (@lem4552113 _107639 _107642 _53907 h1)). Qed.
Lemma lem4552116 {_107639 _107642 : Type'} (_53907 : type805 _107639 _107642) (_53908 : nat) (h1 : term18 _107639 _107642) : term1771 _107639 _107642 _53907 _53908.
Proof. exact (@lem4552115 _107639 _107642 _53907 h1 _53908). Qed.
Lemma lem4552117 {_107639 _107642 : Type'} (_53907 : type805 _107639 _107642) (_53908 : nat) : (term1771 _107639 _107642 _53907 _53908) = (term1760 _107639 _107642 _53907 _53908).
Proof. exact (eq_refl (term1771 _107639 _107642 _53907 _53908)). Qed.
Lemma lem4552118 {_107639 _107642 : Type'} (_53907 : type805 _107639 _107642) (_53908 : nat) (h1 : term18 _107639 _107642) : term1760 _107639 _107642 _53907 _53908.
Proof. exact (EQ_MP (@lem4552117 _107639 _107642 _53907 _53908) (@lem4552116 _107639 _107642 _53907 _53908 h1)). Qed.
Lemma lem4552155 {_107642 : Type'} (_53921 : _107642 -> Prop) (h1 : term14 _107642) : term1772 _107642 _53921.
Proof. exact (@lem4551618 _107642 h1 _53921). Qed.
Lemma lem4552156 {_107642 : Type'} (_53921 : _107642 -> Prop) : (term1772 _107642 _53921) = (term1686 _107642 _53921).
Proof. exact (eq_refl (term1772 _107642 _53921)). Qed.
Lemma lem4552157 {_107642 : Type'} (_53921 : _107642 -> Prop) (h1 : term14 _107642) : term1686 _107642 _53921.
Proof. exact (EQ_MP (@lem4552156 _107642 _53921) (@lem4552155 _107642 _53921 h1)). Qed.
Lemma lem4552158 {_107642 : Type'} (_53921 : _107642 -> Prop) (_53922 : nat) (h1 : term14 _107642) : term1773 _107642 _53921 _53922.
Proof. exact (@lem4552157 _107642 _53921 h1 _53922). Qed.
Lemma lem4552159 {_107642 : Type'} (_53921 : _107642 -> Prop) (_53922 : nat) : (term1773 _107642 _53921 _53922) = (term1684 _107642 _53921 _53922).
Proof. exact (eq_refl (term1773 _107642 _53921 _53922)). Qed.
Lemma lem4552167 {_107639 : Type'} (_53925 : _107639 -> Prop) (h1 : term14 _107639) : term1772 _107639 _53925.
Proof. exact (@lem4551666 _107639 h1 _53925). Qed.
Lemma lem4552168 {_107639 : Type'} (_53925 : _107639 -> Prop) : (term1772 _107639 _53925) = (term1686 _107639 _53925).
Proof. exact (eq_refl (term1772 _107639 _53925)). Qed.
Lemma lem4552169 {_107639 : Type'} (_53925 : _107639 -> Prop) (h1 : term14 _107639) : term1686 _107639 _53925.
Proof. exact (EQ_MP (@lem4552168 _107639 _53925) (@lem4552167 _107639 _53925 h1)). Qed.
Lemma lem4552170 {_107639 : Type'} (_53925 : _107639 -> Prop) (_53926 : nat) (h1 : term14 _107639) : term1773 _107639 _53925 _53926.
Proof. exact (@lem4552169 _107639 _53925 h1 _53926). Qed.
Lemma lem4552171 {_107639 : Type'} (_53925 : _107639 -> Prop) (_53926 : nat) : (term1773 _107639 _53925 _53926) = (term1684 _107639 _53925 _53926).
Proof. exact (eq_refl (term1773 _107639 _53925 _53926)). Qed.
Lemma lem4552227 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (_53785 : _107639 -> Prop) (_53787 : _107642 -> Prop) (_53783 : _107639) (_53784 : nat) (_53786 : nat) : (term1734 _107639 _107642 _53776 _53785 _53787 _53783 _53784 _53786) = (term1774 _107639 _107642 _53776 _53785 _53787 _53783 _53784 _53786).
Proof. exact (@lem4521688 (term1668 _107642 _53787 _53786) (term1668 _107639 _53785 _53784) (term1731 _107639 _107642 _53776 _53785 _53787 _53783 _53784 _53786)). Qed.
Lemma lem4552228 {_107639 _107642 : Type'} (_53785 : _107639 -> Prop) (_53787 : _107642 -> Prop) (_53783 : _107639) (_53784 : nat) (_53786 : nat) (_53776 : type656 _107639 _107642) (h1 : term179 _107639 _107642 _53776) : term1774 _107639 _107642 _53776 _53785 _53787 _53783 _53784 _53786.
Proof. exact (EQ_MP (@lem4552227 _107639 _107642 _53776 _53785 _53787 _53783 _53784 _53786) (@lem4551755 _107639 _107642 _53785 _53787 _53783 _53784 _53786 _53776 h1)). Qed.
Lemma lem4552386 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (d : _107639) (t : _107639 -> Prop) (s : _107642 -> Prop) (h1 : term1513 _107639 _107642 _53776 d t s) : term1755 _107639 _107642 _53776 d t s.
Proof. exact (proj2 (@lem4546279 _107639 _107642 _53776 d t s h1)). Qed.
Lemma lem4552500 {_107642 : Type'} (_53921 : _107642 -> Prop) (_53922 : nat) (h1 : term14 _107642) : term1684 _107642 _53921 _53922.
Proof. exact (EQ_MP (@lem4552159 _107642 _53921 _53922) (@lem4552158 _107642 _53921 _53922 h1)). Qed.
Lemma lem4552510 {_107639 : Type'} (_53925 : _107639 -> Prop) (_53926 : nat) (h1 : term14 _107639) : term1684 _107639 _53925 _53926.
Proof. exact (EQ_MP (@lem4552171 _107639 _53925 _53926) (@lem4552170 _107639 _53925 _53926 h1)). Qed.
Lemma lem4552604 {_107639 _107642 : Type'} (_53907 : type805 _107639 _107642) (_53908 : nat) (h1 : term18 _107639 _107642) : term1775 _107639 _107642 _53907 _53908.
Proof. exact (proj2 (@lem4552118 _107639 _107642 _53907 _53908 h1)). Qed.
Lemma lem4554841 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (d : _107639) (t : _107639 -> Prop) (s : _107642 -> Prop) (h1 : term1513 _107639 _107642 _53776 d t s) : @I ((_107642 -> Prop) -> Prop) (@FINITE _107642) s.
Proof. exact (proj1 (@lem4549704 _107639 _107642 _53776 d t s h1)). Qed.
Lemma lem4554842 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (d : _107639) (t : _107639 -> Prop) (s : _107642 -> Prop) (h1 : term1513 _107639 _107642 _53776 d t s) : term1776 _107642 s.
Proof. exact (fun h0 : term1679 _107642 s => @lem4554841 _107639 _107642 _53776 d t s h1). Qed.
Lemma lem4554844 (p : Prop) : (term1777 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem4554845 {_107642 : Type'} (s : _107642 -> Prop) : (term1776 _107642 s) = (@I ((_107642 -> Prop) -> Prop) (@FINITE _107642) s).
Proof. exact (@lem4554844 (@I ((_107642 -> Prop) -> Prop) (@FINITE _107642) s)). Qed.
Lemma lem4554846 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (d : _107639) (t : _107639 -> Prop) (s : _107642 -> Prop) (h1 : term1513 _107639 _107642 _53776 d t s) : @I ((_107642 -> Prop) -> Prop) (@FINITE _107642) s.
Proof. exact (EQ_MP (@lem4554845 _107642 s) (@lem4554842 _107639 _107642 _53776 d t s h1)). Qed.
Lemma lem4554848 (x : nat) : x = x.
Proof. exact (@lem21386 nat x). Qed.
Lemma lem4554849 {_107642 : Type'} (s : _107642 -> Prop) : (@I ((_107642 -> Prop) -> nat) (@CARD _107642) s) = (@I ((_107642 -> Prop) -> nat) (@CARD _107642) s).
Proof. exact (@lem4554848 (@I ((_107642 -> Prop) -> nat) (@CARD _107642) s)). Qed.
Lemma lem4554850 {_107642 : Type'} (s : _107642 -> Prop) : term1778 _107642 s.
Proof. exact (fun h0 : term1779 _107642 s => @lem4554849 _107642 s). Qed.
Lemma lem4554852 (p : Prop) : (term1777 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem4554853 {_107642 : Type'} (s : _107642 -> Prop) : (term1778 _107642 s) = ((@I ((_107642 -> Prop) -> nat) (@CARD _107642) s) = (@I ((_107642 -> Prop) -> nat) (@CARD _107642) s)).
Proof. exact (@lem4554852 ((@I ((_107642 -> Prop) -> nat) (@CARD _107642) s) = (@I ((_107642 -> Prop) -> nat) (@CARD _107642) s))). Qed.
Lemma lem4554854 {_107642 : Type'} (s : _107642 -> Prop) : (@I ((_107642 -> Prop) -> nat) (@CARD _107642) s) = (@I ((_107642 -> Prop) -> nat) (@CARD _107642) s).
Proof. exact (EQ_MP (@lem4554853 _107642 s) (@lem4554850 _107642 s)). Qed.
Lemma lem4554856 (b : Prop) (a : Prop) : (a \/ b) = (term1780 b a).
Proof. exact (EQ_MP (@lem20682 b a) (@lem20764 b a)). Qed.
Lemma lem4554857 {_107642 : Type'} (_53921 : _107642 -> Prop) (_53922 : nat) : (term1684 _107642 _53921 _53922) = (term1781 _107642 _53921 _53922).
Proof. exact (@lem4554856 (term1682 _107642 _53921 _53922) (term1666 _107642 _53921 _53922)). Qed.
Lemma lem4554859 (a : Prop) (b : Prop) : (term1782 a b) = (term1783 a b).
Proof. exact (EQ_MP (@lem20789 a b) (@lem20895 a b)). Qed.
Lemma lem4554860 {_107642 : Type'} (_53921 : _107642 -> Prop) (_53922 : nat) : (term1784 _107642 _53921 _53922) = (term1785 _107642 _53921 _53922).
Proof. exact (@lem4554859 (term1679 _107642 _53921) (term1677 _107642 _53921 _53922)). Qed.
Lemma lem4554862 (a : Prop) : (term1786 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem4554863 {_107642 : Type'} (_53921 : _107642 -> Prop) : (term1787 _107642 _53921) = (@I ((_107642 -> Prop) -> Prop) (@FINITE _107642) _53921).
Proof. exact (@lem4554862 (@I ((_107642 -> Prop) -> Prop) (@FINITE _107642) _53921)). Qed.
Lemma lem4554864 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4554865 {_107642 : Type'} (_53921 : _107642 -> Prop) : (term1788 _107642 _53921) = (term1664 _107642 _53921).
Proof. exact (MK_COMB (@lem4554864) (@lem4554863 _107642 _53921)). Qed.
Lemma lem4554867 (a : Prop) : (term1786 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem4554868 {_107642 : Type'} (_53921 : _107642 -> Prop) (_53922 : nat) : (term1789 _107642 _53921 _53922) = ((@I ((_107642 -> Prop) -> nat) (@CARD _107642) _53921) = _53922).
Proof. exact (@lem4554867 ((@I ((_107642 -> Prop) -> nat) (@CARD _107642) _53921) = _53922)). Qed.
Lemma lem4554869 {_107642 : Type'} (_53921 : _107642 -> Prop) (_53922 : nat) : (term1785 _107642 _53921 _53922) = (term1665 _107642 _53921 _53922).
Proof. exact (MK_COMB (@lem4554865 _107642 _53921) (@lem4554868 _107642 _53921 _53922)). Qed.
Lemma lem4554870 {_107642 : Type'} (_53921 : _107642 -> Prop) (_53922 : nat) : (term1784 _107642 _53921 _53922) = (term1665 _107642 _53921 _53922).
Proof. exact (TRANS (@lem4554860 _107642 _53921 _53922) (@lem4554869 _107642 _53921 _53922)). Qed.
Lemma lem4554871 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4554872 {_107642 : Type'} (_53921 : _107642 -> Prop) (_53922 : nat) : (term1790 _107642 _53921 _53922) = (term1791 _107642 _53921 _53922).
Proof. exact (MK_COMB (@lem4554871) (@lem4554870 _107642 _53921 _53922)). Qed.
Lemma lem4554873 {_107642 : Type'} (_53921 : _107642 -> Prop) (_53922 : nat) : (term1666 _107642 _53921 _53922) = (term1666 _107642 _53921 _53922).
Proof. exact (eq_refl (term1666 _107642 _53921 _53922)). Qed.
Lemma lem4554874 {_107642 : Type'} (_53921 : _107642 -> Prop) (_53922 : nat) : (term1781 _107642 _53921 _53922) = (term1792 _107642 _53921 _53922).
Proof. exact (MK_COMB (@lem4554872 _107642 _53921 _53922) (@lem4554873 _107642 _53921 _53922)). Qed.
Lemma lem4554875 {_107642 : Type'} (_53921 : _107642 -> Prop) (_53922 : nat) : (term1684 _107642 _53921 _53922) = (term1792 _107642 _53921 _53922).
Proof. exact (TRANS (@lem4554857 _107642 _53921 _53922) (@lem4554874 _107642 _53921 _53922)). Qed.
Lemma lem4554877 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (d : _107639) (t : _107639 -> Prop) (s : _107642 -> Prop) (h1 : term1513 _107639 _107642 _53776 d t s) : term1793 _107642 s.
Proof. exact (conj (@lem4554846 _107639 _107642 _53776 d t s h1) (@lem4554854 _107642 s)). Qed.
Lemma lem4554879 {_107642 : Type'} (_53921 : _107642 -> Prop) (_53922 : nat) (h1 : term14 _107642) : term1792 _107642 _53921 _53922.
Proof. exact (EQ_MP (@lem4554875 _107642 _53921 _53922) (@lem4552500 _107642 _53921 _53922 h1)). Qed.
Lemma lem4554880 {_107642 : Type'} (_53921 : _107642 -> Prop) (_53922 : nat) (h1 : term14 _107642) : term1792 _107642 _53921 _53922.
Proof. exact (@lem4554879 _107642 _53921 _53922 h1). Qed.
Lemma lem4554881 {_107642 : Type'} (s : _107642 -> Prop) (h1 : term14 _107642) : term1794 _107642 s.
Proof. exact (@lem4554880 _107642 s (@I ((_107642 -> Prop) -> nat) (@CARD _107642) s) h1). Qed.
Lemma lem4554884 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (d : _107639) (t : _107639 -> Prop) (s : _107642 -> Prop) (h1 : term14 _107642) (h2 : term1513 _107639 _107642 _53776 d t s) : term1795 _107642 s.
Proof. exact (@lem4554881 _107642 s h1 (@lem4554877 _107639 _107642 _53776 d t s h2)). Qed.
Lemma lem4554885 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (d : _107639) (t : _107639 -> Prop) (s : _107642 -> Prop) (h1 : term14 _107642) (h2 : term1513 _107639 _107642 _53776 d t s) : term1796 _107642 s.
Proof. exact (fun h0 : term1797 _107642 s => @lem4554884 _107639 _107642 _53776 d t s h1 h2). Qed.
Lemma lem4554887 (p : Prop) : (term1777 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem4554888 {_107642 : Type'} (s : _107642 -> Prop) : (term1796 _107642 s) = (term1795 _107642 s).
Proof. exact (@lem4554887 (term1795 _107642 s)). Qed.
Lemma lem4554889 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (d : _107639) (t : _107639 -> Prop) (s : _107642 -> Prop) (h1 : term14 _107642) (h2 : term1513 _107639 _107642 _53776 d t s) : term1795 _107642 s.
Proof. exact (EQ_MP (@lem4554888 _107642 s) (@lem4554885 _107639 _107642 _53776 d t s h1 h2)). Qed.
Lemma lem4554891 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (d : _107639) (t : _107639 -> Prop) (s : _107642 -> Prop) (h1 : term1513 _107639 _107642 _53776 d t s) : @I ((_107639 -> Prop) -> Prop) (@FINITE _107639) t.
Proof. exact (proj2 (@lem4549704 _107639 _107642 _53776 d t s h1)). Qed.
Lemma lem4554892 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (d : _107639) (t : _107639 -> Prop) (s : _107642 -> Prop) (h1 : term1513 _107639 _107642 _53776 d t s) : term1776 _107639 t.
Proof. exact (fun h0 : term1679 _107639 t => @lem4554891 _107639 _107642 _53776 d t s h1). Qed.
Lemma lem4554894 (p : Prop) : (term1777 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem4554895 {_107639 : Type'} (t : _107639 -> Prop) : (term1776 _107639 t) = (@I ((_107639 -> Prop) -> Prop) (@FINITE _107639) t).
Proof. exact (@lem4554894 (@I ((_107639 -> Prop) -> Prop) (@FINITE _107639) t)). Qed.
Lemma lem4554896 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (d : _107639) (t : _107639 -> Prop) (s : _107642 -> Prop) (h1 : term1513 _107639 _107642 _53776 d t s) : @I ((_107639 -> Prop) -> Prop) (@FINITE _107639) t.
Proof. exact (EQ_MP (@lem4554895 _107639 t) (@lem4554892 _107639 _107642 _53776 d t s h1)). Qed.
Lemma lem4554898 (x : nat) : x = x.
Proof. exact (@lem21386 nat x). Qed.
Lemma lem4554899 {_107639 : Type'} (t : _107639 -> Prop) : (@I ((_107639 -> Prop) -> nat) (@CARD _107639) t) = (@I ((_107639 -> Prop) -> nat) (@CARD _107639) t).
Proof. exact (@lem4554898 (@I ((_107639 -> Prop) -> nat) (@CARD _107639) t)). Qed.
Lemma lem4554900 {_107639 : Type'} (t : _107639 -> Prop) : term1778 _107639 t.
Proof. exact (fun h0 : term1779 _107639 t => @lem4554899 _107639 t). Qed.
Lemma lem4554902 (p : Prop) : (term1777 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem4554903 {_107639 : Type'} (t : _107639 -> Prop) : (term1778 _107639 t) = ((@I ((_107639 -> Prop) -> nat) (@CARD _107639) t) = (@I ((_107639 -> Prop) -> nat) (@CARD _107639) t)).
Proof. exact (@lem4554902 ((@I ((_107639 -> Prop) -> nat) (@CARD _107639) t) = (@I ((_107639 -> Prop) -> nat) (@CARD _107639) t))). Qed.
Lemma lem4554904 {_107639 : Type'} (t : _107639 -> Prop) : (@I ((_107639 -> Prop) -> nat) (@CARD _107639) t) = (@I ((_107639 -> Prop) -> nat) (@CARD _107639) t).
Proof. exact (EQ_MP (@lem4554903 _107639 t) (@lem4554900 _107639 t)). Qed.
Lemma lem4554906 (b : Prop) (a : Prop) : (a \/ b) = (term1780 b a).
Proof. exact (EQ_MP (@lem20682 b a) (@lem20764 b a)). Qed.
Lemma lem4554907 {_107639 : Type'} (_53925 : _107639 -> Prop) (_53926 : nat) : (term1684 _107639 _53925 _53926) = (term1781 _107639 _53925 _53926).
Proof. exact (@lem4554906 (term1682 _107639 _53925 _53926) (term1666 _107639 _53925 _53926)). Qed.
Lemma lem4554909 (a : Prop) (b : Prop) : (term1782 a b) = (term1783 a b).
Proof. exact (EQ_MP (@lem20789 a b) (@lem20895 a b)). Qed.
Lemma lem4554910 {_107639 : Type'} (_53925 : _107639 -> Prop) (_53926 : nat) : (term1784 _107639 _53925 _53926) = (term1785 _107639 _53925 _53926).
Proof. exact (@lem4554909 (term1679 _107639 _53925) (term1677 _107639 _53925 _53926)). Qed.
Lemma lem4554912 (a : Prop) : (term1786 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem4554913 {_107639 : Type'} (_53925 : _107639 -> Prop) : (term1787 _107639 _53925) = (@I ((_107639 -> Prop) -> Prop) (@FINITE _107639) _53925).
Proof. exact (@lem4554912 (@I ((_107639 -> Prop) -> Prop) (@FINITE _107639) _53925)). Qed.
Lemma lem4554914 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4554915 {_107639 : Type'} (_53925 : _107639 -> Prop) : (term1788 _107639 _53925) = (term1664 _107639 _53925).
Proof. exact (MK_COMB (@lem4554914) (@lem4554913 _107639 _53925)). Qed.
Lemma lem4554917 (a : Prop) : (term1786 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem4554918 {_107639 : Type'} (_53925 : _107639 -> Prop) (_53926 : nat) : (term1789 _107639 _53925 _53926) = ((@I ((_107639 -> Prop) -> nat) (@CARD _107639) _53925) = _53926).
Proof. exact (@lem4554917 ((@I ((_107639 -> Prop) -> nat) (@CARD _107639) _53925) = _53926)). Qed.
Lemma lem4554919 {_107639 : Type'} (_53925 : _107639 -> Prop) (_53926 : nat) : (term1785 _107639 _53925 _53926) = (term1665 _107639 _53925 _53926).
Proof. exact (MK_COMB (@lem4554915 _107639 _53925) (@lem4554918 _107639 _53925 _53926)). Qed.
Lemma lem4554920 {_107639 : Type'} (_53925 : _107639 -> Prop) (_53926 : nat) : (term1784 _107639 _53925 _53926) = (term1665 _107639 _53925 _53926).
Proof. exact (TRANS (@lem4554910 _107639 _53925 _53926) (@lem4554919 _107639 _53925 _53926)). Qed.
Lemma lem4554921 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4554922 {_107639 : Type'} (_53925 : _107639 -> Prop) (_53926 : nat) : (term1790 _107639 _53925 _53926) = (term1791 _107639 _53925 _53926).
Proof. exact (MK_COMB (@lem4554921) (@lem4554920 _107639 _53925 _53926)). Qed.
Lemma lem4554923 {_107639 : Type'} (_53925 : _107639 -> Prop) (_53926 : nat) : (term1666 _107639 _53925 _53926) = (term1666 _107639 _53925 _53926).
Proof. exact (eq_refl (term1666 _107639 _53925 _53926)). Qed.
Lemma lem4554924 {_107639 : Type'} (_53925 : _107639 -> Prop) (_53926 : nat) : (term1781 _107639 _53925 _53926) = (term1792 _107639 _53925 _53926).
Proof. exact (MK_COMB (@lem4554922 _107639 _53925 _53926) (@lem4554923 _107639 _53925 _53926)). Qed.
Lemma lem4554925 {_107639 : Type'} (_53925 : _107639 -> Prop) (_53926 : nat) : (term1684 _107639 _53925 _53926) = (term1792 _107639 _53925 _53926).
Proof. exact (TRANS (@lem4554907 _107639 _53925 _53926) (@lem4554924 _107639 _53925 _53926)). Qed.
Lemma lem4554927 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (d : _107639) (t : _107639 -> Prop) (s : _107642 -> Prop) (h1 : term1513 _107639 _107642 _53776 d t s) : term1793 _107639 t.
Proof. exact (conj (@lem4554896 _107639 _107642 _53776 d t s h1) (@lem4554904 _107639 t)). Qed.
Lemma lem4554929 {_107639 : Type'} (_53925 : _107639 -> Prop) (_53926 : nat) (h1 : term14 _107639) : term1792 _107639 _53925 _53926.
Proof. exact (EQ_MP (@lem4554925 _107639 _53925 _53926) (@lem4552510 _107639 _53925 _53926 h1)). Qed.
Lemma lem4554930 {_107639 : Type'} (_53925 : _107639 -> Prop) (_53926 : nat) (h1 : term14 _107639) : term1792 _107639 _53925 _53926.
Proof. exact (@lem4554929 _107639 _53925 _53926 h1). Qed.
Lemma lem4554931 {_107639 : Type'} (t : _107639 -> Prop) (h1 : term14 _107639) : term1794 _107639 t.
Proof. exact (@lem4554930 _107639 t (@I ((_107639 -> Prop) -> nat) (@CARD _107639) t) h1). Qed.
Lemma lem4554934 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (d : _107639) (t : _107639 -> Prop) (s : _107642 -> Prop) (h1 : term14 _107639) (h2 : term1513 _107639 _107642 _53776 d t s) : term1795 _107639 t.
Proof. exact (@lem4554931 _107639 t h1 (@lem4554927 _107639 _107642 _53776 d t s h2)). Qed.
Lemma lem4554935 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (d : _107639) (t : _107639 -> Prop) (s : _107642 -> Prop) (h1 : term14 _107639) (h2 : term1513 _107639 _107642 _53776 d t s) : term1796 _107639 t.
Proof. exact (fun h0 : term1797 _107639 t => @lem4554934 _107639 _107642 _53776 d t s h1 h2). Qed.
Lemma lem4554937 (p : Prop) : (term1777 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem4554938 {_107639 : Type'} (t : _107639 -> Prop) : (term1796 _107639 t) = (term1795 _107639 t).
Proof. exact (@lem4554937 (term1795 _107639 t)). Qed.
Lemma lem4554939 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (d : _107639) (t : _107639 -> Prop) (s : _107642 -> Prop) (h1 : term14 _107639) (h2 : term1513 _107639 _107642 _53776 d t s) : term1795 _107639 t.
Proof. exact (EQ_MP (@lem4554938 _107639 t) (@lem4554935 _107639 _107642 _53776 d t s h1 h2)). Qed.
Lemma lem4554945 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem4554946 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (_53785 : _107639 -> Prop) (_53787 : _107642 -> Prop) (_53783 : _107639) (_53784 : nat) (_53786 : nat) : (term1774 _107639 _107642 _53776 _53785 _53787 _53783 _53784 _53786) = (term1798 _107639 _107642 _53776 _53785 _53787 _53783 _53784 _53786).
Proof. exact (@lem4554945 (term1668 _107639 _53785 _53784) (term1668 _107642 _53787 _53786) (term1731 _107639 _107642 _53776 _53785 _53787 _53783 _53784 _53786)). Qed.
Lemma lem4554960 (q : Prop) (p : Prop) : (p \/ q) = (q \/ p).
Proof. exact (proj1 (@lem827 (@el Prop) p q)). Qed.
Lemma lem4554961 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (_53785 : _107639 -> Prop) (_53783 : _107639) (_53784 : nat) (_53787 : _107642 -> Prop) (_53786 : nat) : (term1799 _107639 _107642 _53776 _53785 _53787 _53783 _53784 _53786) = (term1800 _107639 _107642 _53776 _53785 _53783 _53784 _53787 _53786).
Proof. exact (@lem4554960 (term1731 _107639 _107642 _53776 _53785 _53787 _53783 _53784 _53786) (term1668 _107642 _53787 _53786)). Qed.
Lemma lem4554967 {_107639 : Type'} (_53785 : _107639 -> Prop) (_53784 : nat) : (term1670 _107639 _53785 _53784) = (term1670 _107639 _53785 _53784).
Proof. exact (eq_refl (term1670 _107639 _53785 _53784)). Qed.
Lemma lem4554968 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (_53785 : _107639 -> Prop) (_53783 : _107639) (_53784 : nat) (_53787 : _107642 -> Prop) (_53786 : nat) : (term1798 _107639 _107642 _53776 _53785 _53787 _53783 _53784 _53786) = (term1801 _107639 _107642 _53776 _53785 _53783 _53784 _53787 _53786).
Proof. exact (MK_COMB (@lem4554967 _107639 _53785 _53784) (@lem4554961 _107639 _107642 _53776 _53785 _53783 _53784 _53787 _53786)). Qed.
Lemma lem4554972 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem4554973 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (_53783 : _107639) (_53785 : _107639 -> Prop) (_53784 : nat) (_53787 : _107642 -> Prop) (_53786 : nat) : (term1801 _107639 _107642 _53776 _53785 _53783 _53784 _53787 _53786) = (term1802 _107639 _107642 _53776 _53783 _53785 _53784 _53787 _53786).
Proof. exact (@lem4554972 (term1731 _107639 _107642 _53776 _53785 _53787 _53783 _53784 _53786) (term1668 _107639 _53785 _53784) (term1668 _107642 _53787 _53786)). Qed.
Lemma lem4554989 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (_53783 : _107639) (_53785 : _107639 -> Prop) (_53784 : nat) (_53787 : _107642 -> Prop) (_53786 : nat) : (term1798 _107639 _107642 _53776 _53785 _53787 _53783 _53784 _53786) = (term1802 _107639 _107642 _53776 _53783 _53785 _53784 _53787 _53786).
Proof. exact (TRANS (@lem4554968 _107639 _107642 _53776 _53785 _53783 _53784 _53787 _53786) (@lem4554973 _107639 _107642 _53776 _53783 _53785 _53784 _53787 _53786)). Qed.
Lemma lem4554990 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (_53783 : _107639) (_53785 : _107639 -> Prop) (_53784 : nat) (_53787 : _107642 -> Prop) (_53786 : nat) : (term1774 _107639 _107642 _53776 _53785 _53787 _53783 _53784 _53786) = (term1802 _107639 _107642 _53776 _53783 _53785 _53784 _53787 _53786).
Proof. exact (TRANS (@lem4554946 _107639 _107642 _53776 _53785 _53787 _53783 _53784 _53786) (@lem4554989 _107639 _107642 _53776 _53783 _53785 _53784 _53787 _53786)). Qed.
Lemma lem4554991 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4554992 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (_53783 : _107639) (_53785 : _107639 -> Prop) (_53784 : nat) (_53787 : _107642 -> Prop) (_53786 : nat) : (term1803 _107639 _107642 _53776 _53785 _53787 _53783 _53784 _53786) = (term1804 _107639 _107642 _53776 _53783 _53785 _53784 _53787 _53786).
Proof. exact (MK_COMB (@lem4554991) (@lem4554990 _107639 _107642 _53776 _53783 _53785 _53784 _53787 _53786)). Qed.
Lemma lem4555006 (q : Prop) (p : Prop) : (p \/ q) = (q \/ p).
Proof. exact (proj1 (@lem827 (@el Prop) p q)). Qed.
Lemma lem4555007 {_107639 _107642 : Type'} (_53785 : _107639 -> Prop) (_53784 : nat) (_53787 : _107642 -> Prop) (_53786 : nat) : (term1732 _107639 _107642 _53787 _53786 _53785 _53784) = (term1805 _107639 _107642 _53785 _53784 _53787 _53786).
Proof. exact (@lem4555006 (term1668 _107639 _53785 _53784) (term1668 _107642 _53787 _53786)). Qed.
Lemma lem4555013 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (_53785 : _107639 -> Prop) (_53787 : _107642 -> Prop) (_53783 : _107639) (_53784 : nat) (_53786 : nat) : (term1806 _107639 _107642 _53776 _53785 _53787 _53783 _53784 _53786) = (term1806 _107639 _107642 _53776 _53785 _53787 _53783 _53784 _53786).
Proof. exact (eq_refl (term1806 _107639 _107642 _53776 _53785 _53787 _53783 _53784 _53786)). Qed.
Lemma lem4555014 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (_53783 : _107639) (_53785 : _107639 -> Prop) (_53784 : nat) (_53787 : _107642 -> Prop) (_53786 : nat) : (term1807 _107639 _107642 _53776 _53783 _53787 _53786 _53785 _53784) = (term1802 _107639 _107642 _53776 _53783 _53785 _53784 _53787 _53786).
Proof. exact (MK_COMB (@lem4555013 _107639 _107642 _53776 _53785 _53787 _53783 _53784 _53786) (@lem4555007 _107639 _107642 _53785 _53784 _53787 _53786)). Qed.
Lemma lem4555025 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (_53783 : _107639) (_53785 : _107639 -> Prop) (_53784 : nat) (_53787 : _107642 -> Prop) (_53786 : nat) : ((term1774 _107639 _107642 _53776 _53785 _53787 _53783 _53784 _53786) = (term1807 _107639 _107642 _53776 _53783 _53787 _53786 _53785 _53784)) = ((term1802 _107639 _107642 _53776 _53783 _53785 _53784 _53787 _53786) = (term1802 _107639 _107642 _53776 _53783 _53785 _53784 _53787 _53786)).
Proof. exact (MK_COMB (@lem4554992 _107639 _107642 _53776 _53783 _53785 _53784 _53787 _53786) (@lem4555014 _107639 _107642 _53776 _53783 _53785 _53784 _53787 _53786)). Qed.
Lemma lem4555027 {A : Type'} (x : A) : (x = x) = True.
Proof. exact (EQ_MP (@lem20665 A x) (@lem20664 A x)). Qed.
Lemma lem4555028 (x : Prop) : (x = x) = True.
Proof. exact (@lem4555027 Prop x). Qed.
Lemma lem4555029 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (_53783 : _107639) (_53785 : _107639 -> Prop) (_53784 : nat) (_53787 : _107642 -> Prop) (_53786 : nat) : ((term1802 _107639 _107642 _53776 _53783 _53785 _53784 _53787 _53786) = (term1802 _107639 _107642 _53776 _53783 _53785 _53784 _53787 _53786)) = True.
Proof. exact (@lem4555028 (term1802 _107639 _107642 _53776 _53783 _53785 _53784 _53787 _53786)). Qed.
Lemma lem4555030 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (_53783 : _107639) (_53787 : _107642 -> Prop) (_53786 : nat) (_53785 : _107639 -> Prop) (_53784 : nat) : ((term1774 _107639 _107642 _53776 _53785 _53787 _53783 _53784 _53786) = (term1807 _107639 _107642 _53776 _53783 _53787 _53786 _53785 _53784)) = True.
Proof. exact (TRANS (@lem4555025 _107639 _107642 _53776 _53783 _53785 _53784 _53787 _53786) (@lem4555029 _107639 _107642 _53776 _53783 _53785 _53784 _53787 _53786)). Qed.
Lemma lem4555031 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (_53783 : _107639) (_53787 : _107642 -> Prop) (_53786 : nat) (_53785 : _107639 -> Prop) (_53784 : nat) : True = ((term1774 _107639 _107642 _53776 _53785 _53787 _53783 _53784 _53786) = (term1807 _107639 _107642 _53776 _53783 _53787 _53786 _53785 _53784)).
Proof. exact (SYM (@lem4555030 _107639 _107642 _53776 _53783 _53787 _53786 _53785 _53784)). Qed.
Lemma lem4555032 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (_53783 : _107639) (_53787 : _107642 -> Prop) (_53786 : nat) (_53785 : _107639 -> Prop) (_53784 : nat) : (term1774 _107639 _107642 _53776 _53785 _53787 _53783 _53784 _53786) = (term1807 _107639 _107642 _53776 _53783 _53787 _53786 _53785 _53784).
Proof. exact (EQ_MP (@lem4555031 _107639 _107642 _53776 _53783 _53787 _53786 _53785 _53784) (@lem0)). Qed.
Lemma lem4555033 {_107639 _107642 : Type'} (_53783 : _107639) (_53787 : _107642 -> Prop) (_53786 : nat) (_53785 : _107639 -> Prop) (_53784 : nat) (_53776 : type656 _107639 _107642) (h1 : term179 _107639 _107642 _53776) : term1807 _107639 _107642 _53776 _53783 _53787 _53786 _53785 _53784.
Proof. exact (EQ_MP (@lem4555032 _107639 _107642 _53776 _53783 _53787 _53786 _53785 _53784) (@lem4552228 _107639 _107642 _53785 _53787 _53783 _53784 _53786 _53776 h1)). Qed.
Lemma lem4555035 (b : Prop) (a : Prop) : (a \/ b) = (term1780 b a).
Proof. exact (EQ_MP (@lem20682 b a) (@lem20764 b a)). Qed.
Lemma lem4555036 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (_53785 : _107639 -> Prop) (_53787 : _107642 -> Prop) (_53783 : _107639) (_53784 : nat) (_53786 : nat) : (term1807 _107639 _107642 _53776 _53783 _53787 _53786 _53785 _53784) = (term1808 _107639 _107642 _53776 _53785 _53787 _53783 _53784 _53786).
Proof. exact (@lem4555035 (term1732 _107639 _107642 _53787 _53786 _53785 _53784) (term1731 _107639 _107642 _53776 _53785 _53787 _53783 _53784 _53786)). Qed.
Lemma lem4555038 (a : Prop) (b : Prop) : (term1782 a b) = (term1783 a b).
Proof. exact (EQ_MP (@lem20789 a b) (@lem20895 a b)). Qed.
Lemma lem4555039 {_107639 _107642 : Type'} (_53787 : _107642 -> Prop) (_53786 : nat) (_53785 : _107639 -> Prop) (_53784 : nat) : (term1809 _107639 _107642 _53787 _53786 _53785 _53784) = (term1810 _107639 _107642 _53787 _53786 _53785 _53784).
Proof. exact (@lem4555038 (term1668 _107642 _53787 _53786) (term1668 _107639 _53785 _53784)). Qed.
Lemma lem4555041 (a : Prop) : (term1786 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem4555042 {_107642 : Type'} (_53787 : _107642 -> Prop) (_53786 : nat) : (term1811 _107642 _53787 _53786) = (term1666 _107642 _53787 _53786).
Proof. exact (@lem4555041 (term1666 _107642 _53787 _53786)). Qed.
Lemma lem4555043 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem4555044 {_107642 : Type'} (_53787 : _107642 -> Prop) (_53786 : nat) : (term1812 _107642 _53787 _53786) = (term1813 _107642 _53787 _53786).
Proof. exact (MK_COMB (@lem4555043) (@lem4555042 _107642 _53787 _53786)). Qed.
Lemma lem4555046 (a : Prop) : (term1786 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem4555047 {_107639 : Type'} (_53785 : _107639 -> Prop) (_53784 : nat) : (term1811 _107639 _53785 _53784) = (term1666 _107639 _53785 _53784).
Proof. exact (@lem4555046 (term1666 _107639 _53785 _53784)). Qed.
Lemma lem4555048 {_107639 _107642 : Type'} (_53787 : _107642 -> Prop) (_53786 : nat) (_53785 : _107639 -> Prop) (_53784 : nat) : (term1810 _107639 _107642 _53787 _53786 _53785 _53784) = (term1814 _107639 _107642 _53787 _53786 _53785 _53784).
Proof. exact (MK_COMB (@lem4555044 _107642 _53787 _53786) (@lem4555047 _107639 _53785 _53784)). Qed.
Lemma lem4555049 {_107639 _107642 : Type'} (_53787 : _107642 -> Prop) (_53786 : nat) (_53785 : _107639 -> Prop) (_53784 : nat) : (term1809 _107639 _107642 _53787 _53786 _53785 _53784) = (term1814 _107639 _107642 _53787 _53786 _53785 _53784).
Proof. exact (TRANS (@lem4555039 _107639 _107642 _53787 _53786 _53785 _53784) (@lem4555048 _107639 _107642 _53787 _53786 _53785 _53784)). Qed.
Lemma lem4555050 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4555051 {_107639 _107642 : Type'} (_53787 : _107642 -> Prop) (_53786 : nat) (_53785 : _107639 -> Prop) (_53784 : nat) : (term1815 _107639 _107642 _53787 _53786 _53785 _53784) = (term1816 _107639 _107642 _53787 _53786 _53785 _53784).
Proof. exact (MK_COMB (@lem4555050) (@lem4555049 _107639 _107642 _53787 _53786 _53785 _53784)). Qed.
Lemma lem4555052 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (_53785 : _107639 -> Prop) (_53787 : _107642 -> Prop) (_53783 : _107639) (_53784 : nat) (_53786 : nat) : (term1731 _107639 _107642 _53776 _53785 _53787 _53783 _53784 _53786) = (term1731 _107639 _107642 _53776 _53785 _53787 _53783 _53784 _53786).
Proof. exact (eq_refl (term1731 _107639 _107642 _53776 _53785 _53787 _53783 _53784 _53786)). Qed.
Lemma lem4555053 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (_53785 : _107639 -> Prop) (_53787 : _107642 -> Prop) (_53783 : _107639) (_53784 : nat) (_53786 : nat) : (term1808 _107639 _107642 _53776 _53785 _53787 _53783 _53784 _53786) = (term1817 _107639 _107642 _53776 _53785 _53787 _53783 _53784 _53786).
Proof. exact (MK_COMB (@lem4555051 _107639 _107642 _53787 _53786 _53785 _53784) (@lem4555052 _107639 _107642 _53776 _53785 _53787 _53783 _53784 _53786)). Qed.
Lemma lem4555054 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (_53785 : _107639 -> Prop) (_53787 : _107642 -> Prop) (_53783 : _107639) (_53784 : nat) (_53786 : nat) : (term1807 _107639 _107642 _53776 _53783 _53787 _53786 _53785 _53784) = (term1817 _107639 _107642 _53776 _53785 _53787 _53783 _53784 _53786).
Proof. exact (TRANS (@lem4555036 _107639 _107642 _53776 _53785 _53787 _53783 _53784 _53786) (@lem4555053 _107639 _107642 _53776 _53785 _53787 _53783 _53784 _53786)). Qed.
Lemma lem4555056 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (d : _107639) (t : _107639 -> Prop) (s : _107642 -> Prop) (h1 : term14 _107639) (h2 : term14 _107642) (h3 : term1513 _107639 _107642 _53776 d t s) : term1818 _107639 _107642 s t.
Proof. exact (conj (@lem4554889 _107639 _107642 _53776 d t s h2 h3) (@lem4554939 _107639 _107642 _53776 d t s h1 h3)). Qed.
Lemma lem4555058 {_107639 _107642 : Type'} (_53785 : _107639 -> Prop) (_53787 : _107642 -> Prop) (_53783 : _107639) (_53784 : nat) (_53786 : nat) (_53776 : type656 _107639 _107642) (h1 : term179 _107639 _107642 _53776) : term1817 _107639 _107642 _53776 _53785 _53787 _53783 _53784 _53786.
Proof. exact (EQ_MP (@lem4555054 _107639 _107642 _53776 _53785 _53787 _53783 _53784 _53786) (@lem4555033 _107639 _107642 _53783 _53787 _53786 _53785 _53784 _53776 h1)). Qed.
Lemma lem4555059 {_107639 _107642 : Type'} (_53785 : _107639 -> Prop) (_53787 : _107642 -> Prop) (_53783 : _107639) (_53784 : nat) (_53786 : nat) (_53776 : type656 _107639 _107642) (h1 : term179 _107639 _107642 _53776) : term1817 _107639 _107642 _53776 _53785 _53787 _53783 _53784 _53786.
Proof. exact (@lem4555058 _107639 _107642 _53785 _53787 _53783 _53784 _53786 _53776 h1). Qed.
Lemma lem4555060 {_107639 _107642 : Type'} (_53783 : _107639) (t : _107639 -> Prop) (s : _107642 -> Prop) (_53776 : type656 _107639 _107642) (h1 : term179 _107639 _107642 _53776) : term1819 _107639 _107642 _53776 _53783 t s.
Proof. exact (@lem4555059 _107639 _107642 t s _53783 (@I ((_107639 -> Prop) -> nat) (@CARD _107639) t) (@I ((_107642 -> Prop) -> nat) (@CARD _107642) s) _53776 h1). Qed.
Lemma lem4555063 {_107639 _107642 : Type'} (_53783 : _107639) (_53776 : type656 _107639 _107642) (d : _107639) (t : _107639 -> Prop) (s : _107642 -> Prop) (h1 : term179 _107639 _107642 _53776) (h2 : term14 _107639) (h3 : term14 _107642) (h4 : term1513 _107639 _107642 _53776 d t s) : term1820 _107639 _107642 _53776 _53783 t s.
Proof. exact (@lem4555060 _107639 _107642 _53783 t s _53776 h1 (@lem4555056 _107639 _107642 _53776 d t s h2 h3 h4)). Qed.
Lemma lem4555064 {_107639 _107642 : Type'} (_53783 : _107639) (_53776 : type656 _107639 _107642) (d : _107639) (t : _107639 -> Prop) (s : _107642 -> Prop) (h1 : term179 _107639 _107642 _53776) (h2 : term14 _107639) (h3 : term14 _107642) (h4 : term1513 _107639 _107642 _53776 d t s) : term1820 _107639 _107642 _53776 _53783 t s.
Proof. exact (@lem4555063 _107639 _107642 _53783 _53776 d t s h1 h2 h3 h4). Qed.
Lemma lem4555065 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (d : _107639) (t : _107639 -> Prop) (s : _107642 -> Prop) (h1 : term179 _107639 _107642 _53776) (h2 : term14 _107639) (h3 : term14 _107642) (h4 : term1513 _107639 _107642 _53776 d t s) : term1820 _107639 _107642 _53776 d t s.
Proof. exact (@lem4555064 _107639 _107642 d _53776 d t s h1 h2 h3 h4). Qed.
Lemma lem4555066 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (d : _107639) (t : _107639 -> Prop) (s : _107642 -> Prop) (h1 : term179 _107639 _107642 _53776) (h2 : term14 _107639) (h3 : term14 _107642) (h4 : term1513 _107639 _107642 _53776 d t s) : term1821 _107639 _107642 _53776 d t s.
Proof. exact (fun h0 : term1822 _107639 _107642 _53776 d t s => @lem4555065 _107639 _107642 _53776 d t s h1 h2 h3 h4). Qed.
Lemma lem4555068 (p : Prop) : (term1777 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem4555069 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (d : _107639) (t : _107639 -> Prop) (s : _107642 -> Prop) : (term1821 _107639 _107642 _53776 d t s) = (term1820 _107639 _107642 _53776 d t s).
Proof. exact (@lem4555068 (term1820 _107639 _107642 _53776 d t s)). Qed.
Lemma lem4555070 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (d : _107639) (t : _107639 -> Prop) (s : _107642 -> Prop) (h1 : term179 _107639 _107642 _53776) (h2 : term14 _107639) (h3 : term14 _107642) (h4 : term1513 _107639 _107642 _53776 d t s) : term1820 _107639 _107642 _53776 d t s.
Proof. exact (EQ_MP (@lem4555069 _107639 _107642 _53776 d t s) (@lem4555066 _107639 _107642 _53776 d t s h1 h2 h3 h4)). Qed.
Lemma lem4555076 (q : Prop) (p : Prop) : (p \/ q) = (q \/ p).
Proof. exact (proj1 (@lem827 (@el Prop) p q)). Qed.
Lemma lem4555077 {_107639 _107642 : Type'} (_53907 : type805 _107639 _107642) (_53908 : nat) : (term1775 _107639 _107642 _53907 _53908) = (term1823 _107639 _107642 _53907 _53908).
Proof. exact (@lem4555076 ((@I (((_107642 -> _107639) -> Prop) -> nat) (@CARD (_107642 -> _107639)) _53907) = _53908) (term1698 _107639 _107642 _53907 _53908)). Qed.
Lemma lem4555085 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem4555086 {_107639 _107642 : Type'} (_53907 : type805 _107639 _107642) (_53908 : nat) : (term1824 _107639 _107642 _53907 _53908) = (term1825 _107639 _107642 _53907 _53908).
Proof. exact (MK_COMB (@lem4555085) (@lem4555077 _107639 _107642 _53907 _53908)). Qed.
Lemma lem4555094 {_107639 _107642 : Type'} (_53907 : type805 _107639 _107642) (_53908 : nat) : (term1823 _107639 _107642 _53907 _53908) = (term1823 _107639 _107642 _53907 _53908).
Proof. exact (eq_refl (term1823 _107639 _107642 _53907 _53908)). Qed.
Lemma lem4555095 {_107639 _107642 : Type'} (_53907 : type805 _107639 _107642) (_53908 : nat) : ((term1775 _107639 _107642 _53907 _53908) = (term1823 _107639 _107642 _53907 _53908)) = ((term1823 _107639 _107642 _53907 _53908) = (term1823 _107639 _107642 _53907 _53908)).
Proof. exact (MK_COMB (@lem4555086 _107639 _107642 _53907 _53908) (@lem4555094 _107639 _107642 _53907 _53908)). Qed.
Lemma lem4555097 {A : Type'} (x : A) : (x = x) = True.
Proof. exact (EQ_MP (@lem20665 A x) (@lem20664 A x)). Qed.
Lemma lem4555098 (x : Prop) : (x = x) = True.
Proof. exact (@lem4555097 Prop x). Qed.
Lemma lem4555099 {_107639 _107642 : Type'} (_53907 : type805 _107639 _107642) (_53908 : nat) : ((term1823 _107639 _107642 _53907 _53908) = (term1823 _107639 _107642 _53907 _53908)) = True.
Proof. exact (@lem4555098 (term1823 _107639 _107642 _53907 _53908)). Qed.
Lemma lem4555100 {_107639 _107642 : Type'} (_53907 : type805 _107639 _107642) (_53908 : nat) : ((term1775 _107639 _107642 _53907 _53908) = (term1823 _107639 _107642 _53907 _53908)) = True.
Proof. exact (TRANS (@lem4555095 _107639 _107642 _53907 _53908) (@lem4555099 _107639 _107642 _53907 _53908)). Qed.
Lemma lem4555101 {_107639 _107642 : Type'} (_53907 : type805 _107639 _107642) (_53908 : nat) : True = ((term1775 _107639 _107642 _53907 _53908) = (term1823 _107639 _107642 _53907 _53908)).
Proof. exact (SYM (@lem4555100 _107639 _107642 _53907 _53908)). Qed.
Lemma lem4555102 {_107639 _107642 : Type'} (_53907 : type805 _107639 _107642) (_53908 : nat) : (term1775 _107639 _107642 _53907 _53908) = (term1823 _107639 _107642 _53907 _53908).
Proof. exact (EQ_MP (@lem4555101 _107639 _107642 _53907 _53908) (@lem0)). Qed.
Lemma lem4555103 {_107639 _107642 : Type'} (_53907 : type805 _107639 _107642) (_53908 : nat) (h1 : term18 _107639 _107642) : term1823 _107639 _107642 _53907 _53908.
Proof. exact (EQ_MP (@lem4555102 _107639 _107642 _53907 _53908) (@lem4552604 _107639 _107642 _53907 _53908 h1)). Qed.
Lemma lem4555105 (b : Prop) (a : Prop) : (a \/ b) = (term1780 b a).
Proof. exact (EQ_MP (@lem20682 b a) (@lem20764 b a)). Qed.
Lemma lem4555106 {_107639 _107642 : Type'} (_53907 : type805 _107639 _107642) (_53908 : nat) : (term1823 _107639 _107642 _53907 _53908) = (term1826 _107639 _107642 _53907 _53908).
Proof. exact (@lem4555105 (term1698 _107639 _107642 _53907 _53908) ((@I (((_107642 -> _107639) -> Prop) -> nat) (@CARD (_107642 -> _107639)) _53907) = _53908)). Qed.
Lemma lem4555108 (a : Prop) : (term1786 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem4555109 {_107639 _107642 : Type'} (_53907 : type805 _107639 _107642) (_53908 : nat) : (term1827 _107639 _107642 _53907 _53908) = (term1696 _107639 _107642 _53907 _53908).
Proof. exact (@lem4555108 (term1696 _107639 _107642 _53907 _53908)). Qed.
Lemma lem4555110 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem4555111 {_107639 _107642 : Type'} (_53907 : type805 _107639 _107642) (_53908 : nat) : (term1828 _107639 _107642 _53907 _53908) = (term1829 _107639 _107642 _53907 _53908).
Proof. exact (MK_COMB (@lem4555110) (@lem4555109 _107639 _107642 _53907 _53908)). Qed.
Lemma lem4555112 {_107639 _107642 : Type'} (_53907 : type805 _107639 _107642) (_53908 : nat) : ((@I (((_107642 -> _107639) -> Prop) -> nat) (@CARD (_107642 -> _107639)) _53907) = _53908) = ((@I (((_107642 -> _107639) -> Prop) -> nat) (@CARD (_107642 -> _107639)) _53907) = _53908).
Proof. exact (eq_refl ((@I (((_107642 -> _107639) -> Prop) -> nat) (@CARD (_107642 -> _107639)) _53907) = _53908)). Qed.
Lemma lem4555113 {_107639 _107642 : Type'} (_53907 : type805 _107639 _107642) (_53908 : nat) : (term1826 _107639 _107642 _53907 _53908) = (term1830 _107639 _107642 _53907 _53908).
Proof. exact (MK_COMB (@lem4555111 _107639 _107642 _53907 _53908) (@lem4555112 _107639 _107642 _53907 _53908)). Qed.
Lemma lem4555114 {_107639 _107642 : Type'} (_53907 : type805 _107639 _107642) (_53908 : nat) : (term1823 _107639 _107642 _53907 _53908) = (term1830 _107639 _107642 _53907 _53908).
Proof. exact (TRANS (@lem4555106 _107639 _107642 _53907 _53908) (@lem4555113 _107639 _107642 _53907 _53908)). Qed.
Lemma lem4555117 {_107639 _107642 : Type'} (_53907 : type805 _107639 _107642) (_53908 : nat) (h1 : term18 _107639 _107642) : term1830 _107639 _107642 _53907 _53908.
Proof. exact (EQ_MP (@lem4555114 _107639 _107642 _53907 _53908) (@lem4555103 _107639 _107642 _53907 _53908 h1)). Qed.
Lemma lem4555118 {_107639 _107642 : Type'} (_53907 : type805 _107639 _107642) (_53908 : nat) (h1 : term18 _107639 _107642) : term1830 _107639 _107642 _53907 _53908.
Proof. exact (@lem4555117 _107639 _107642 _53907 _53908 h1). Qed.
Lemma lem4555119 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (d : _107639) (t : _107639 -> Prop) (s : _107642 -> Prop) (h1 : term18 _107639 _107642) : term1831 _107639 _107642 _53776 d t s.
Proof. exact (@lem4555118 _107639 _107642 (term1725 _107639 _107642 _53776 t s d) (term1752 _107639 _107642 t s) h1). Qed.
Lemma lem4555122 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (d : _107639) (t : _107639 -> Prop) (s : _107642 -> Prop) (h1 : term179 _107639 _107642 _53776) (h2 : term14 _107639) (h3 : term14 _107642) (h4 : term18 _107639 _107642) (h5 : term1513 _107639 _107642 _53776 d t s) : (term1746 _107639 _107642 _53776 t s d) = (term1752 _107639 _107642 t s).
Proof. exact (@lem4555119 _107639 _107642 _53776 d t s h4 (@lem4555070 _107639 _107642 _53776 d t s h1 h2 h3 h5)). Qed.
Lemma lem4555123 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (d : _107639) (t : _107639 -> Prop) (s : _107642 -> Prop) (h1 : term179 _107639 _107642 _53776) (h2 : term14 _107639) (h3 : term14 _107642) (h4 : term18 _107639 _107642) (h5 : term1513 _107639 _107642 _53776 d t s) : term1832 _107639 _107642 _53776 d t s.
Proof. exact (fun h0 : term1755 _107639 _107642 _53776 d t s => @lem4555122 _107639 _107642 _53776 d t s h1 h2 h3 h4 h5). Qed.
Lemma lem4555125 (p : Prop) : (term1777 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem4555126 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (d : _107639) (t : _107639 -> Prop) (s : _107642 -> Prop) : (term1832 _107639 _107642 _53776 d t s) = ((term1746 _107639 _107642 _53776 t s d) = (term1752 _107639 _107642 t s)).
Proof. exact (@lem4555125 ((term1746 _107639 _107642 _53776 t s d) = (term1752 _107639 _107642 t s))). Qed.
Lemma lem4555127 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (d : _107639) (t : _107639 -> Prop) (s : _107642 -> Prop) (h1 : term179 _107639 _107642 _53776) (h2 : term14 _107639) (h3 : term14 _107642) (h4 : term18 _107639 _107642) (h5 : term1513 _107639 _107642 _53776 d t s) : (term1746 _107639 _107642 _53776 t s d) = (term1752 _107639 _107642 t s).
Proof. exact (EQ_MP (@lem4555126 _107639 _107642 _53776 d t s) (@lem4555123 _107639 _107642 _53776 d t s h1 h2 h3 h4 h5)). Qed.
Lemma lem4555130 (p : Prop) : (~ p) = (p -> False).
Proof. exact (EQ_MP (@lem21021 p) (@lem0)). Qed.
Lemma lem4555132 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (d : _107639) (t : _107639 -> Prop) (s : _107642 -> Prop) : (term1755 _107639 _107642 _53776 d t s) = (term1833 _107639 _107642 _53776 d t s).
Proof. exact (@lem4555130 ((term1746 _107639 _107642 _53776 t s d) = (term1752 _107639 _107642 t s))). Qed.
Lemma lem4555135 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (d : _107639) (t : _107639 -> Prop) (s : _107642 -> Prop) (h1 : term1513 _107639 _107642 _53776 d t s) : term1833 _107639 _107642 _53776 d t s.
Proof. exact (EQ_MP (@lem4555132 _107639 _107642 _53776 d t s) (@lem4552386 _107639 _107642 _53776 d t s h1)). Qed.
Lemma lem4555138 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (d : _107639) (t : _107639 -> Prop) (s : _107642 -> Prop) (h1 : term179 _107639 _107642 _53776) (h2 : term14 _107639) (h3 : term14 _107642) (h4 : term18 _107639 _107642) (h5 : term1513 _107639 _107642 _53776 d t s) : False.
Proof. exact (@lem4555135 _107639 _107642 _53776 d t s h5 (@lem4555127 _107639 _107642 _53776 d t s h1 h2 h3 h4 h5)). Qed.
Lemma lem4555139 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (d : _107639) (t : _107639 -> Prop) (s : _107642 -> Prop) (h1 : term179 _107639 _107642 _53776) (h2 : term14 _107639) (h3 : term14 _107642) (h4 : term18 _107639 _107642) (h5 : term1513 _107639 _107642 _53776 d t s) : term1834.
Proof. exact (fun h0 : ~ False => @lem4555138 _107639 _107642 _53776 d t s h1 h2 h3 h4 h5). Qed.
Lemma lem4555141 (p : Prop) : (term1777 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem4555142 : term1834 = False.
Proof. exact (@lem4555141 False). Qed.
Lemma lem4555143 {_107639 _107642 : Type'} (_53776 : type656 _107639 _107642) (d : _107639) (t : _107639 -> Prop) (s : _107642 -> Prop) (h1 : term179 _107639 _107642 _53776) (h2 : term14 _107639) (h3 : term14 _107642) (h4 : term18 _107639 _107642) (h5 : term1513 _107639 _107642 _53776 d t s) : False.
Proof. exact (EQ_MP (@lem4555142) (@lem4555139 _107639 _107642 _53776 d t s h1 h2 h3 h4 h5)). Qed.
Lemma lem4555144 {_107639 _107642 A : Type'} (_53782 : type982 A) (_53776 : type656 _107639 _107642) (d : _107639) (t : _107639 -> Prop) (s : _107642 -> Prop) (h1 : term179 _107639 _107642 _53776) (h2 : term14 _107639) (h3 : term14 _107642) (h4 : term18 _107639 _107642) (h5 : term761 A _53782) (h6 : term1513 _107639 _107642 _53776 d t s) : False.
Proof. exact (ex_elim (@lem4533972 A _53782 h5) (fun f'''''' : type981 A => fun h0 : term1022 A _53782 f'''''' => @lem4555143 _107639 _107642 _53776 d t s h1 h2 h3 h4 h6)). Qed.
Lemma lem4555145 {_107639 _107642 A B : Type'} (_53781 : type839 A B) (_53782 : type982 A) (_53776 : type656 _107639 _107642) (d : _107639) (t : _107639 -> Prop) (s : _107642 -> Prop) (h1 : term179 _107639 _107642 _53776) (h2 : term14 _107639) (h3 : term14 _107642) (h4 : term514 A B _53781) (h5 : term18 _107639 _107642) (h6 : term761 A _53782) (h7 : term1513 _107639 _107642 _53776 d t s) : False.
Proof. exact (ex_elim (@lem4534854 A B _53781 h4) (fun f''''' : type838 A B => fun h0 : term1266 A B _53781 f''''' => @lem4555144 _107639 _107642 A _53782 _53776 d t s h1 h2 h3 h5 h6 h7)). Qed.
Lemma lem4555146 {_107639 _107642 A B : Type'} (_53780 : type839 _107642 B) (_53781 : type839 A B) (_53782 : type982 A) (_53776 : type656 _107639 _107642) (d : _107639) (t : _107639 -> Prop) (s : _107642 -> Prop) (h1 : term179 _107639 _107642 _53776) (h2 : term14 _107639) (h3 : term14 _107642) (h4 : term514 _107642 B _53780) (h5 : term514 A B _53781) (h6 : term18 _107639 _107642) (h7 : term761 A _53782) (h8 : term1513 _107639 _107642 _53776 d t s) : False.
Proof. exact (ex_elim (@lem4535736 _107642 B _53780 h4) (fun f'''' : type838 _107642 B => fun h0 : term1266 _107642 B _53780 f'''' => @lem4555145 _107639 _107642 A B _53781 _53782 _53776 d t s h1 h2 h3 h5 h6 h7 h8)). Qed.
Lemma lem4555147 {_107639 _107642 A B : Type'} (_53779 : type839 _107639 B) (_53780 : type839 _107642 B) (_53781 : type839 A B) (_53782 : type982 A) (_53776 : type656 _107639 _107642) (d : _107639) (t : _107639 -> Prop) (s : _107642 -> Prop) (h1 : term179 _107639 _107642 _53776) (h2 : term14 _107639) (h3 : term14 _107642) (h4 : term514 _107639 B _53779) (h5 : term514 _107642 B _53780) (h6 : term514 A B _53781) (h7 : term18 _107639 _107642) (h8 : term761 A _53782) (h9 : term1513 _107639 _107642 _53776 d t s) : False.
Proof. exact (ex_elim (@lem4536618 _107639 B _53779 h4) (fun f''' : type838 _107639 B => fun h0 : term1266 _107639 B _53779 f''' => @lem4555146 _107639 _107642 A B _53780 _53781 _53782 _53776 d t s h1 h2 h3 h5 h6 h7 h8 h9)). Qed.
Lemma lem4555148 {_107639 _107642 A B : Type'} (_53778 : type656 _107642 A) (_53779 : type839 _107639 B) (_53780 : type839 _107642 B) (_53781 : type839 A B) (_53782 : type982 A) (_53776 : type656 _107639 _107642) (d : _107639) (t : _107639 -> Prop) (s : _107642 -> Prop) (h1 : term179 _107639 _107642 _53776) (h2 : term14 _107639) (h3 : term302 _107642 A _53778) (h4 : term14 _107642) (h5 : term514 _107639 B _53779) (h6 : term514 _107642 B _53780) (h7 : term514 A B _53781) (h8 : term18 _107639 _107642) (h9 : term761 A _53782) (h10 : term1513 _107639 _107642 _53776 d t s) : False.
Proof. exact (ex_elim (@lem4537500 _107642 A _53778 h3) (fun f'' : type655 _107642 A => fun h0 : term1510 _107642 A _53778 f'' => @lem4555147 _107639 _107642 A B _53779 _53780 _53781 _53782 _53776 d t s h1 h2 h4 h5 h6 h7 h8 h9 h10)). Qed.
Lemma lem4555149 {_107639 _107642 A B : Type'} (_53777 : type656 _107639 A) (_53778 : type656 _107642 A) (_53779 : type839 _107639 B) (_53780 : type839 _107642 B) (_53781 : type839 A B) (_53782 : type982 A) (_53776 : type656 _107639 _107642) (d : _107639) (t : _107639 -> Prop) (s : _107642 -> Prop) (h1 : term179 _107639 _107642 _53776) (h2 : term302 _107639 A _53777) (h3 : term14 _107639) (h4 : term302 _107642 A _53778) (h5 : term14 _107642) (h6 : term514 _107639 B _53779) (h7 : term514 _107642 B _53780) (h8 : term514 A B _53781) (h9 : term18 _107639 _107642) (h10 : term761 A _53782) (h11 : term1513 _107639 _107642 _53776 d t s) : False.
Proof. exact (ex_elim (@lem4538382 _107639 A _53777 h2) (fun f' : type655 _107639 A => fun h0 : term1510 _107639 A _53777 f' => @lem4555148 _107639 _107642 A B _53778 _53779 _53780 _53781 _53782 _53776 d t s h1 h3 h4 h5 h6 h7 h8 h9 h10 h11)). Qed.
Lemma lem4555150 {_107639 _107642 A B : Type'} (_53777 : type656 _107639 A) (_53778 : type656 _107642 A) (_53779 : type839 _107639 B) (_53780 : type839 _107642 B) (_53781 : type839 A B) (_53782 : type982 A) (_53776 : type656 _107639 _107642) (d : _107639) (t : _107639 -> Prop) (s : _107642 -> Prop) (h1 : term179 _107639 _107642 _53776) (h2 : term302 _107639 _107642 _53776) (h3 : term302 _107639 A _53777) (h4 : term14 _107639) (h5 : term302 _107642 A _53778) (h6 : term14 _107642) (h7 : term514 _107639 B _53779) (h8 : term514 _107642 B _53780) (h9 : term514 A B _53781) (h10 : term18 _107639 _107642) (h11 : term761 A _53782) (h12 : term1513 _107639 _107642 _53776 d t s) : False.
Proof. exact (ex_elim (@lem4539264 _107639 _107642 _53776 h2) (fun f : type655 _107639 _107642 => fun h0 : term1510 _107639 _107642 _53776 f => @lem4555149 _107639 _107642 A B _53777 _53778 _53779 _53780 _53781 _53782 _53776 d t s h1 h3 h4 h5 h6 h7 h8 h9 h10 h11 h12)). Qed.
Lemma lem4555151 {_107639 _107642 A B : Type'} (_53777 : type656 _107639 A) (_53778 : type656 _107642 A) (_53779 : type839 _107639 B) (_53780 : type839 _107642 B) (_53781 : type839 A B) (_53782 : type982 A) (_53776 : type656 _107639 _107642) (d : _107639) (s : _107642 -> Prop) (h1 : term179 _107639 _107642 _53776) (h2 : term302 _107639 _107642 _53776) (h3 : term302 _107639 A _53777) (h4 : term14 _107639) (h5 : term302 _107642 A _53778) (h6 : term14 _107642) (h7 : term514 _107639 B _53779) (h8 : term514 _107642 B _53780) (h9 : term514 A B _53781) (h10 : term18 _107639 _107642) (h11 : term761 A _53782) (h12 : term1523 _107639 _107642 _53776 d s) : False.
Proof. exact (ex_elim (@lem4543893 _107639 _107642 _53776 d s h12) (fun t : _107639 -> Prop => fun h0 : term1522 _107639 _107642 _53776 d s t => @lem4555150 _107639 _107642 A B _53777 _53778 _53779 _53780 _53781 _53782 _53776 d t s h1 h2 h3 h4 h5 h6 h7 h8 h9 h10 h11 h0)). Qed.
Lemma lem4555152 {_107639 _107642 A B : Type'} (_53777 : type656 _107639 A) (_53778 : type656 _107642 A) (_53779 : type839 _107639 B) (_53780 : type839 _107642 B) (_53781 : type839 A B) (_53782 : type982 A) (_53776 : type656 _107639 _107642) (d : _107639) (h1 : term179 _107639 _107642 _53776) (h2 : term302 _107639 _107642 _53776) (h3 : term302 _107639 A _53777) (h4 : term14 _107639) (h5 : term302 _107642 A _53778) (h6 : term14 _107642) (h7 : term514 _107639 B _53779) (h8 : term514 _107642 B _53780) (h9 : term514 A B _53781) (h10 : term18 _107639 _107642) (h11 : term761 A _53782) (h12 : term230 _107639 _107642 _53776 d) : False.
Proof. exact (ex_elim (@lem4539352 _107639 _107642 _53776 d h12) (fun s : _107642 -> Prop => fun h0 : term1528 _107639 _107642 _53776 d s => @lem4555151 _107639 _107642 A B _53777 _53778 _53779 _53780 _53781 _53782 _53776 d s h1 h2 h3 h4 h5 h6 h7 h8 h9 h10 h11 h0)). Qed.
Lemma lem4555153 {_107639 _107642 A B : Type'} (_53777 : type656 _107639 A) (_53778 : type656 _107642 A) (_53779 : type839 _107639 B) (_53780 : type839 _107642 B) (_53781 : type839 A B) (_53782 : type982 A) (_53776 : type656 _107639 _107642) (d : _107639) (h1 : term179 _107639 _107642 _53776) (h2 : term302 _107639 _107642 _53776) (h3 : term302 _107639 A _53777) (h4 : term14 _107639) (h5 : term302 _107642 A _53778) (h6 : term14 _107642) (h7 : term514 _107639 B _53779) (h8 : term514 _107642 B _53780) (h9 : term514 A B _53781) (h10 : term18 _107639 _107642) (h11 : term761 A _53782) (h12 : term230 _107639 _107642 _53776 d) : term1835 A _53782.
Proof. exact (fun h0 : term655 A _53782 => @lem4555152 _107639 _107642 A B _53777 _53778 _53779 _53780 _53781 _53782 _53776 d h1 h2 h3 h4 h5 h6 h7 h8 h9 h10 h11 h12). Qed.
Lemma lem4555154 {A : Type'} (_53782 : type982 A) : (term1835 A _53782) = (term656 A _53782).
Proof. exact (@lem69 (term655 A _53782)). Qed.
Lemma lem4555155 {_107639 _107642 A B : Type'} (_53777 : type656 _107639 A) (_53778 : type656 _107642 A) (_53779 : type839 _107639 B) (_53780 : type839 _107642 B) (_53781 : type839 A B) (_53782 : type982 A) (_53776 : type656 _107639 _107642) (d : _107639) (h1 : term179 _107639 _107642 _53776) (h2 : term302 _107639 _107642 _53776) (h3 : term302 _107639 A _53777) (h4 : term14 _107639) (h5 : term302 _107642 A _53778) (h6 : term14 _107642) (h7 : term514 _107639 B _53779) (h8 : term514 _107642 B _53780) (h9 : term514 A B _53781) (h10 : term18 _107639 _107642) (h11 : term761 A _53782) (h12 : term230 _107639 _107642 _53776 d) : term656 A _53782.
Proof. exact (EQ_MP (@lem4555154 A _53782) (@lem4555153 _107639 _107642 A B _53777 _53778 _53779 _53780 _53781 _53782 _53776 d h1 h2 h3 h4 h5 h6 h7 h8 h9 h10 h11 h12)). Qed.
Lemma lem4555156 {_107639 _107642 A B : Type'} (_53777 : type656 _107639 A) (_53778 : type656 _107642 A) (_53779 : type839 _107639 B) (_53780 : type839 _107642 B) (_53781 : type839 A B) (_53782 : type982 A) (_53776 : type656 _107639 _107642) (d : _107639) (h1 : term179 _107639 _107642 _53776) (h2 : term302 _107639 _107642 _53776) (h3 : term302 _107639 A _53777) (h4 : term14 _107639) (h5 : term302 _107642 A _53778) (h6 : term14 _107642) (h7 : term514 _107639 B _53779) (h8 : term514 _107642 B _53780) (h9 : term514 A B _53781) (h10 : term18 _107639 _107642) (h11 : term761 A _53782) (h12 : term230 _107639 _107642 _53776 d) : term657 A B _53781 _53782.
Proof. exact (fun h0 : term419 A B _53781 => @lem4555155 _107639 _107642 A B _53777 _53778 _53779 _53780 _53781 _53782 _53776 d h1 h2 h3 h4 h5 h6 h7 h8 h9 h10 h11 h12). Qed.
Lemma lem4555157 {_107639 _107642 A B : Type'} (_53777 : type656 _107639 A) (_53778 : type656 _107642 A) (_53779 : type839 _107639 B) (_53780 : type839 _107642 B) (_53781 : type839 A B) (_53782 : type982 A) (_53776 : type656 _107639 _107642) (d : _107639) (h1 : term179 _107639 _107642 _53776) (h2 : term302 _107639 _107642 _53776) (h3 : term302 _107639 A _53777) (h4 : term14 _107639) (h5 : term302 _107642 A _53778) (h6 : term14 _107642) (h7 : term514 _107639 B _53779) (h8 : term514 _107642 B _53780) (h9 : term514 A B _53781) (h10 : term18 _107639 _107642) (h11 : term761 A _53782) (h12 : term230 _107639 _107642 _53776 d) : term658 _107642 A B _53780 _53781 _53782.
Proof. exact (fun h0 : term419 _107642 B _53780 => @lem4555156 _107639 _107642 A B _53777 _53778 _53779 _53780 _53781 _53782 _53776 d h1 h2 h3 h4 h5 h6 h7 h8 h9 h10 h11 h12). Qed.
Lemma lem4555158 {_107639 _107642 A B : Type'} (_53777 : type656 _107639 A) (_53778 : type656 _107642 A) (_53779 : type839 _107639 B) (_53780 : type839 _107642 B) (_53781 : type839 A B) (_53782 : type982 A) (_53776 : type656 _107639 _107642) (d : _107639) (h1 : term179 _107639 _107642 _53776) (h2 : term302 _107639 _107642 _53776) (h3 : term302 _107639 A _53777) (h4 : term14 _107639) (h5 : term302 _107642 A _53778) (h6 : term14 _107642) (h7 : term514 _107639 B _53779) (h8 : term514 _107642 B _53780) (h9 : term514 A B _53781) (h10 : term18 _107639 _107642) (h11 : term761 A _53782) (h12 : term230 _107639 _107642 _53776 d) : term659 _107639 _107642 A B _53779 _53780 _53781 _53782.
Proof. exact (fun h0 : term419 _107639 B _53779 => @lem4555157 _107639 _107642 A B _53777 _53778 _53779 _53780 _53781 _53782 _53776 d h1 h2 h3 h4 h5 h6 h7 h8 h9 h10 h11 h12). Qed.
Lemma lem4555159 {_107639 _107642 A B : Type'} (_53777 : type656 _107639 A) (_53778 : type656 _107642 A) (_53779 : type839 _107639 B) (_53780 : type839 _107642 B) (_53781 : type839 A B) (_53782 : type982 A) (_53776 : type656 _107639 _107642) (d : _107639) (h1 : term179 _107639 _107642 _53776) (h2 : term302 _107639 _107642 _53776) (h3 : term302 _107639 A _53777) (h4 : term14 _107639) (h5 : term302 _107642 A _53778) (h6 : term14 _107642) (h7 : term514 _107639 B _53779) (h8 : term514 _107642 B _53780) (h9 : term514 A B _53781) (h10 : term18 _107639 _107642) (h11 : term761 A _53782) (h12 : term230 _107639 _107642 _53776 d) : term660 _107639 _107642 A B _53778 _53779 _53780 _53781 _53782.
Proof. exact (fun h0 : term179 _107642 A _53778 => @lem4555158 _107639 _107642 A B _53777 _53778 _53779 _53780 _53781 _53782 _53776 d h1 h2 h3 h4 h5 h6 h7 h8 h9 h10 h11 h12). Qed.
Lemma lem4555160 {_107639 _107642 A B : Type'} (_53777 : type656 _107639 A) (_53778 : type656 _107642 A) (_53779 : type839 _107639 B) (_53780 : type839 _107642 B) (_53781 : type839 A B) (_53782 : type982 A) (_53776 : type656 _107639 _107642) (d : _107639) (h1 : term179 _107639 _107642 _53776) (h2 : term302 _107639 _107642 _53776) (h3 : term302 _107639 A _53777) (h4 : term14 _107639) (h5 : term302 _107642 A _53778) (h6 : term14 _107642) (h7 : term514 _107639 B _53779) (h8 : term514 _107642 B _53780) (h9 : term514 A B _53781) (h10 : term18 _107639 _107642) (h11 : term761 A _53782) (h12 : term230 _107639 _107642 _53776 d) : term661 _107639 _107642 A B _53777 _53778 _53779 _53780 _53781 _53782.
Proof. exact (fun h0 : term179 _107639 A _53777 => @lem4555159 _107639 _107642 A B _53777 _53778 _53779 _53780 _53781 _53782 _53776 d h1 h2 h3 h4 h5 h6 h7 h8 h9 h10 h11 h12). Qed.
Lemma lem4555161 {_107639 _107642 A B : Type'} (_53777 : type656 _107639 A) (_53778 : type656 _107642 A) (_53779 : type839 _107639 B) (_53780 : type839 _107642 B) (_53781 : type839 A B) (_53782 : type982 A) (_53776 : type656 _107639 _107642) (d : _107639) (h1 : term302 _107639 _107642 _53776) (h2 : term302 _107639 A _53777) (h3 : term14 _107639) (h4 : term302 _107642 A _53778) (h5 : term14 _107642) (h6 : term514 _107639 B _53779) (h7 : term514 _107642 B _53780) (h8 : term514 A B _53781) (h9 : term18 _107639 _107642) (h10 : term761 A _53782) (h11 : term230 _107639 _107642 _53776 d) : term662 _107639 _107642 A B _53776 _53777 _53778 _53779 _53780 _53781 _53782.
Proof. exact (fun h0 : term179 _107639 _107642 _53776 => @lem4555160 _107639 _107642 A B _53777 _53778 _53779 _53780 _53781 _53782 _53776 d h0 h1 h2 h3 h4 h5 h6 h7 h8 h9 h10 h11). Qed.
Lemma lem4555162 {_107639 _107642 A B : Type'} (_53777 : type656 _107639 A) (_53778 : type656 _107642 A) (_53779 : type839 _107639 B) (_53780 : type839 _107642 B) (_53781 : type839 A B) (_53782 : type982 A) (_53776 : type656 _107639 _107642) (d : _107639) (h1 : term302 _107639 _107642 _53776) (h2 : term302 _107639 A _53777) (h3 : term14 _107639) (h4 : term302 _107642 A _53778) (h5 : term14 _107642) (h6 : term514 _107639 B _53779) (h7 : term514 _107642 B _53780) (h8 : term514 A B _53781) (h9 : term18 _107639 _107642) (h10 : term761 A _53782) (h11 : term230 _107639 _107642 _53776 d) : term663 _107639 _107642 A B _53776 _53777 _53778 _53779 _53780 _53781 _53782.
Proof. exact (fun h0 : term15 => @lem4555161 _107639 _107642 A B _53777 _53778 _53779 _53780 _53781 _53782 _53776 d h1 h2 h3 h4 h5 h6 h7 h8 h9 h10 h11). Qed.
Lemma lem4555163 {_107639 _107642 A B : Type'} (_53777 : type656 _107639 A) (_53778 : type656 _107642 A) (_53779 : type839 _107639 B) (_53780 : type839 _107642 B) (_53781 : type839 A B) (_53782 : type982 A) (_53776 : type656 _107639 _107642) (d : _107639) (h1 : term302 _107639 _107642 _53776) (h2 : term302 _107639 A _53777) (h3 : term14 _107639) (h4 : term302 _107642 A _53778) (h5 : term14 _107642) (h6 : term514 _107639 B _53779) (h7 : term514 _107642 B _53780) (h8 : term514 A B _53781) (h9 : term18 _107639 _107642) (h10 : term761 A _53782) (h11 : term230 _107639 _107642 _53776 d) : term664 _107639 _107642 A B _53776 _53777 _53778 _53779 _53780 _53781 _53782.
Proof. exact (fun h0 : term16 A => @lem4555162 _107639 _107642 A B _53777 _53778 _53779 _53780 _53781 _53782 _53776 d h1 h2 h3 h4 h5 h6 h7 h8 h9 h10 h11). Qed.
Lemma lem4555164 {_107639 _107642 A B : Type'} (_53777 : type656 _107639 A) (_53778 : type656 _107642 A) (_53779 : type839 _107639 B) (_53780 : type839 _107642 B) (_53781 : type839 A B) (_53782 : type982 A) (_53776 : type656 _107639 _107642) (d : _107639) (h1 : term302 _107639 _107642 _53776) (h2 : term302 _107639 A _53777) (h3 : term14 _107639) (h4 : term302 _107642 A _53778) (h5 : term14 _107642) (h6 : term514 _107639 B _53779) (h7 : term514 _107642 B _53780) (h8 : term514 A B _53781) (h9 : term18 _107639 _107642) (h10 : term761 A _53782) (h11 : term230 _107639 _107642 _53776 d) : term665 _107639 _107642 A B _53776 _53777 _53778 _53779 _53780 _53781 _53782.
Proof. exact (fun h0 : term17 A B => @lem4555163 _107639 _107642 A B _53777 _53778 _53779 _53780 _53781 _53782 _53776 d h1 h2 h3 h4 h5 h6 h7 h8 h9 h10 h11). Qed.
Lemma lem4555165 {_107639 _107642 A B : Type'} (_53777 : type656 _107639 A) (_53778 : type656 _107642 A) (_53779 : type839 _107639 B) (_53780 : type839 _107642 B) (_53781 : type839 A B) (_53782 : type982 A) (_53776 : type656 _107639 _107642) (d : _107639) (h1 : term302 _107639 _107642 _53776) (h2 : term302 _107639 A _53777) (h3 : term14 _107639) (h4 : term302 _107642 A _53778) (h5 : term14 _107642) (h6 : term514 _107639 B _53779) (h7 : term514 _107642 B _53780) (h8 : term514 A B _53781) (h9 : term18 _107639 _107642) (h10 : term761 A _53782) (h11 : term230 _107639 _107642 _53776 d) : term666 _107639 _107642 A B _53776 _53777 _53778 _53779 _53780 _53781 _53782.
Proof. exact (fun h0 : term18 _107642 A => @lem4555164 _107639 _107642 A B _53777 _53778 _53779 _53780 _53781 _53782 _53776 d h1 h2 h3 h4 h5 h6 h7 h8 h9 h10 h11). Qed.
Lemma lem4555166 {_107639 _107642 A B : Type'} (_53777 : type656 _107639 A) (_53778 : type656 _107642 A) (_53779 : type839 _107639 B) (_53780 : type839 _107642 B) (_53781 : type839 A B) (_53782 : type982 A) (_53776 : type656 _107639 _107642) (d : _107639) (h1 : term302 _107639 _107642 _53776) (h2 : term302 _107639 A _53777) (h3 : term14 _107639) (h4 : term302 _107642 A _53778) (h5 : term14 _107642) (h6 : term514 _107639 B _53779) (h7 : term514 _107642 B _53780) (h8 : term514 A B _53781) (h9 : term18 _107639 _107642) (h10 : term761 A _53782) (h11 : term230 _107639 _107642 _53776 d) : term667 _107639 _107642 A B _53776 _53777 _53778 _53779 _53780 _53781 _53782.
Proof. exact (fun h0 : term18 _107639 A => @lem4555165 _107639 _107642 A B _53777 _53778 _53779 _53780 _53781 _53782 _53776 d h1 h2 h3 h4 h5 h6 h7 h8 h9 h10 h11). Qed.
Lemma lem4555167 {_107639 _107642 A B : Type'} (_53777 : type656 _107639 A) (_53778 : type656 _107642 A) (_53779 : type839 _107639 B) (_53780 : type839 _107642 B) (_53781 : type839 A B) (_53782 : type982 A) (_53776 : type656 _107639 _107642) (d : _107639) (h1 : term302 _107639 _107642 _53776) (h2 : term302 _107639 A _53777) (h3 : term14 _107639) (h4 : term302 _107642 A _53778) (h5 : term14 _107642) (h6 : term514 _107639 B _53779) (h7 : term514 _107642 B _53780) (h8 : term514 A B _53781) (h9 : term18 _107639 _107642) (h10 : term761 A _53782) (h11 : term230 _107639 _107642 _53776 d) : term668 _107639 _107642 A B _53776 _53777 _53778 _53779 _53780 _53781 _53782.
Proof. exact (fun h0 : term17 _107642 B => @lem4555166 _107639 _107642 A B _53777 _53778 _53779 _53780 _53781 _53782 _53776 d h1 h2 h3 h4 h5 h6 h7 h8 h9 h10 h11). Qed.
Lemma lem4555168 {_107639 _107642 A B : Type'} (_53777 : type656 _107639 A) (_53778 : type656 _107642 A) (_53779 : type839 _107639 B) (_53780 : type839 _107642 B) (_53781 : type839 A B) (_53782 : type982 A) (_53776 : type656 _107639 _107642) (d : _107639) (h1 : term302 _107639 _107642 _53776) (h2 : term302 _107639 A _53777) (h3 : term14 _107639) (h4 : term302 _107642 A _53778) (h5 : term14 _107642) (h6 : term514 _107639 B _53779) (h7 : term514 _107642 B _53780) (h8 : term514 A B _53781) (h9 : term761 A _53782) (h10 : term230 _107639 _107642 _53776 d) : term669 _107639 _107642 A B _53776 _53777 _53778 _53779 _53780 _53781 _53782.
Proof. exact (fun h0 : term18 _107639 _107642 => @lem4555167 _107639 _107642 A B _53777 _53778 _53779 _53780 _53781 _53782 _53776 d h1 h2 h3 h4 h5 h6 h7 h8 h0 h9 h10). Qed.
Lemma lem4555169 {_107639 _107642 A B : Type'} (_53777 : type656 _107639 A) (_53778 : type656 _107642 A) (_53779 : type839 _107639 B) (_53780 : type839 _107642 B) (_53781 : type839 A B) (_53782 : type982 A) (_53776 : type656 _107639 _107642) (d : _107639) (h1 : term302 _107639 _107642 _53776) (h2 : term302 _107639 A _53777) (h3 : term14 _107639) (h4 : term302 _107642 A _53778) (h5 : term14 _107642) (h6 : term514 _107639 B _53779) (h7 : term514 _107642 B _53780) (h8 : term514 A B _53781) (h9 : term761 A _53782) (h10 : term230 _107639 _107642 _53776 d) : term670 _107639 _107642 A B _53776 _53777 _53778 _53779 _53780 _53781 _53782.
Proof. exact (fun h0 : term17 _107639 B => @lem4555168 _107639 _107642 A B _53777 _53778 _53779 _53780 _53781 _53782 _53776 d h1 h2 h3 h4 h5 h6 h7 h8 h9 h10). Qed.
Lemma lem4555170 {_107639 _107642 A B : Type'} (_53777 : type656 _107639 A) (_53778 : type656 _107642 A) (_53779 : type839 _107639 B) (_53780 : type839 _107642 B) (_53781 : type839 A B) (_53782 : type982 A) (_53776 : type656 _107639 _107642) (d : _107639) (h1 : term302 _107639 _107642 _53776) (h2 : term302 _107639 A _53777) (h3 : term14 _107639) (h4 : term302 _107642 A _53778) (h5 : term14 _107642) (h6 : term514 _107639 B _53779) (h7 : term514 _107642 B _53780) (h8 : term514 A B _53781) (h9 : term761 A _53782) (h10 : term230 _107639 _107642 _53776 d) : term671 _107639 _107642 A B _53776 _53777 _53778 _53779 _53780 _53781 _53782.
Proof. exact (fun h0 : term14 B => @lem4555169 _107639 _107642 A B _53777 _53778 _53779 _53780 _53781 _53782 _53776 d h1 h2 h3 h4 h5 h6 h7 h8 h9 h10). Qed.
Lemma lem4555171 {_107639 _107642 A B : Type'} (_53777 : type656 _107639 A) (_53778 : type656 _107642 A) (_53779 : type839 _107639 B) (_53780 : type839 _107642 B) (_53781 : type839 A B) (_53782 : type982 A) (_53776 : type656 _107639 _107642) (d : _107639) (h1 : term302 _107639 _107642 _53776) (h2 : term302 _107639 A _53777) (h3 : term14 _107639) (h4 : term302 _107642 A _53778) (h5 : term14 _107642) (h6 : term514 _107639 B _53779) (h7 : term514 _107642 B _53780) (h8 : term514 A B _53781) (h9 : term761 A _53782) (h10 : term230 _107639 _107642 _53776 d) : term672 _107639 _107642 A B _53776 _53777 _53778 _53779 _53780 _53781 _53782.
Proof. exact (fun h0 : term14 A => @lem4555170 _107639 _107642 A B _53777 _53778 _53779 _53780 _53781 _53782 _53776 d h1 h2 h3 h4 h5 h6 h7 h8 h9 h10). Qed.
Lemma lem4555172 {_107639 _107642 A B : Type'} (_53777 : type656 _107639 A) (_53778 : type656 _107642 A) (_53779 : type839 _107639 B) (_53780 : type839 _107642 B) (_53781 : type839 A B) (_53782 : type982 A) (_53776 : type656 _107639 _107642) (d : _107639) (h1 : term302 _107639 _107642 _53776) (h2 : term302 _107639 A _53777) (h3 : term14 _107639) (h4 : term302 _107642 A _53778) (h5 : term514 _107639 B _53779) (h6 : term514 _107642 B _53780) (h7 : term514 A B _53781) (h8 : term761 A _53782) (h9 : term230 _107639 _107642 _53776 d) : term673 _107639 _107642 A B _53776 _53777 _53778 _53779 _53780 _53781 _53782.
Proof. exact (fun h0 : term14 _107642 => @lem4555171 _107639 _107642 A B _53777 _53778 _53779 _53780 _53781 _53782 _53776 d h1 h2 h3 h4 h0 h5 h6 h7 h8 h9). Qed.
Lemma lem4555173 {_107639 _107642 A B : Type'} (_53777 : type656 _107639 A) (_53778 : type656 _107642 A) (_53779 : type839 _107639 B) (_53780 : type839 _107642 B) (_53781 : type839 A B) (_53782 : type982 A) (_53776 : type656 _107639 _107642) (d : _107639) (h1 : term302 _107639 _107642 _53776) (h2 : term302 _107639 A _53777) (h3 : term302 _107642 A _53778) (h4 : term514 _107639 B _53779) (h5 : term514 _107642 B _53780) (h6 : term514 A B _53781) (h7 : term761 A _53782) (h8 : term230 _107639 _107642 _53776 d) : term674 _107639 _107642 A B _53776 _53777 _53778 _53779 _53780 _53781 _53782.
Proof. exact (fun h0 : term14 _107639 => @lem4555172 _107639 _107642 A B _53777 _53778 _53779 _53780 _53781 _53782 _53776 d h1 h2 h0 h3 h4 h5 h6 h7 h8). Qed.
Lemma lem4555174 {_100044 _107639 _107642 A B : Type'} (_53777 : type656 _107639 A) (_53778 : type656 _107642 A) (_53779 : type839 _107639 B) (_53780 : type839 _107642 B) (_53781 : type839 A B) (_53782 : type982 A) (_53776 : type656 _107639 _107642) (d : _107639) (h1 : term302 _107639 _107642 _53776) (h2 : term302 _107639 A _53777) (h3 : term302 _107642 A _53778) (h4 : term514 _107639 B _53779) (h5 : term514 _107642 B _53780) (h6 : term514 A B _53781) (h7 : term761 A _53782) (h8 : term230 _107639 _107642 _53776 d) : term675 _100044 _107639 _107642 A B _53776 _53777 _53778 _53779 _53780 _53781 _53782.
Proof. exact (fun h0 : term14 _100044 => @lem4555173 _107639 _107642 A B _53777 _53778 _53779 _53780 _53781 _53782 _53776 d h1 h2 h3 h4 h5 h6 h7 h8). Qed.
Lemma lem4555175 {_100044 _107639 _107642 A B : Type'} (d : _107639) (_53776 : type656 _107639 _107642) (_53777 : type656 _107639 A) (_53778 : type656 _107642 A) (_53779 : type839 _107639 B) (_53780 : type839 _107642 B) (_53781 : type839 A B) (_53782 : type982 A) (h1 : term302 _107639 _107642 _53776) (h2 : term302 _107639 A _53777) (h3 : term302 _107642 A _53778) (h4 : term514 _107639 B _53779) (h5 : term514 _107642 B _53780) (h6 : term514 A B _53781) (h7 : term761 A _53782) : term676 _100044 _107639 _107642 A B d _53776 _53777 _53778 _53779 _53780 _53781 _53782.
Proof. exact (fun h0 : term230 _107639 _107642 _53776 d => @lem4555174 _100044 _107639 _107642 A B _53777 _53778 _53779 _53780 _53781 _53782 _53776 d h1 h2 h3 h4 h5 h6 h7 h0). Qed.
Lemma lem4555180 {_100044 _107639 _107642 A B : Type'} (_53776 : type656 _107639 _107642) (_53777 : type656 _107639 A) (_53778 : type656 _107642 A) (_53779 : type839 _107639 B) (_53780 : type839 _107642 B) (_53781 : type839 A B) (_53782 : type982 A) (h1 : term302 _107639 _107642 _53776) (h2 : term302 _107639 A _53777) (h3 : term302 _107642 A _53778) (h4 : term514 _107639 B _53779) (h5 : term514 _107642 B _53780) (h6 : term514 A B _53781) (h7 : term761 A _53782) : term678 _100044 _107639 _107642 A B _53776 _53777 _53778 _53779 _53780 _53781 _53782.
Proof. exact (fun d : _107639 => @lem4555175 _100044 _107639 _107642 A B d _53776 _53777 _53778 _53779 _53780 _53781 _53782 h1 h2 h3 h4 h5 h6 h7). Qed.
Lemma lem4555181 {_100044 _107639 _107642 A B : Type'} (_53776 : type656 _107639 _107642) (_53777 : type656 _107639 A) (_53778 : type656 _107642 A) (_53779 : type839 _107639 B) (_53780 : type839 _107642 B) (_53781 : type839 A B) (_53782 : type982 A) (h1 : term302 _107639 A _53777) (h2 : term302 _107642 A _53778) (h3 : term514 _107639 B _53779) (h4 : term514 _107642 B _53780) (h5 : term514 A B _53781) (h6 : term761 A _53782) : term679 _100044 _107639 _107642 A B _53776 _53777 _53778 _53779 _53780 _53781 _53782.
Proof. exact (fun h0 : term302 _107639 _107642 _53776 => @lem4555180 _100044 _107639 _107642 A B _53776 _53777 _53778 _53779 _53780 _53781 _53782 h0 h1 h2 h3 h4 h5 h6). Qed.
Lemma lem4555186 {_100044 _107639 _107642 A B : Type'} (_53777 : type656 _107639 A) (_53778 : type656 _107642 A) (_53779 : type839 _107639 B) (_53780 : type839 _107642 B) (_53781 : type839 A B) (_53782 : type982 A) (h1 : term302 _107639 A _53777) (h2 : term302 _107642 A _53778) (h3 : term514 _107639 B _53779) (h4 : term514 _107642 B _53780) (h5 : term514 A B _53781) (h6 : term761 A _53782) : term681 _100044 _107639 _107642 A B _53777 _53778 _53779 _53780 _53781 _53782.
Proof. exact (fun _53776 : type656 _107639 _107642 => @lem4555181 _100044 _107639 _107642 A B _53776 _53777 _53778 _53779 _53780 _53781 _53782 h1 h2 h3 h4 h5 h6). Qed.
Lemma lem4555187 {_100044 _107639 _107642 A B : Type'} (_53777 : type656 _107639 A) (_53778 : type656 _107642 A) (_53779 : type839 _107639 B) (_53780 : type839 _107642 B) (_53781 : type839 A B) (_53782 : type982 A) (h1 : term302 _107642 A _53778) (h2 : term514 _107639 B _53779) (h3 : term514 _107642 B _53780) (h4 : term514 A B _53781) (h5 : term761 A _53782) : term682 _100044 _107639 _107642 A B _53777 _53778 _53779 _53780 _53781 _53782.
Proof. exact (fun h0 : term302 _107639 A _53777 => @lem4555186 _100044 _107639 _107642 A B _53777 _53778 _53779 _53780 _53781 _53782 h0 h1 h2 h3 h4 h5). Qed.
Lemma lem4555192 {_100044 _107639 _107642 A B : Type'} (_53778 : type656 _107642 A) (_53779 : type839 _107639 B) (_53780 : type839 _107642 B) (_53781 : type839 A B) (_53782 : type982 A) (h1 : term302 _107642 A _53778) (h2 : term514 _107639 B _53779) (h3 : term514 _107642 B _53780) (h4 : term514 A B _53781) (h5 : term761 A _53782) : term684 _100044 _107639 _107642 A B _53778 _53779 _53780 _53781 _53782.
Proof. exact (fun _53777 : type656 _107639 A => @lem4555187 _100044 _107639 _107642 A B _53777 _53778 _53779 _53780 _53781 _53782 h1 h2 h3 h4 h5). Qed.
Lemma lem4555193 {_100044 _107639 _107642 A B : Type'} (_53778 : type656 _107642 A) (_53779 : type839 _107639 B) (_53780 : type839 _107642 B) (_53781 : type839 A B) (_53782 : type982 A) (h1 : term514 _107639 B _53779) (h2 : term514 _107642 B _53780) (h3 : term514 A B _53781) (h4 : term761 A _53782) : term685 _100044 _107639 _107642 A B _53778 _53779 _53780 _53781 _53782.
Proof. exact (fun h0 : term302 _107642 A _53778 => @lem4555192 _100044 _107639 _107642 A B _53778 _53779 _53780 _53781 _53782 h0 h1 h2 h3 h4). Qed.
Lemma lem4555198 {_100044 _107639 _107642 A B : Type'} (_53779 : type839 _107639 B) (_53780 : type839 _107642 B) (_53781 : type839 A B) (_53782 : type982 A) (h1 : term514 _107639 B _53779) (h2 : term514 _107642 B _53780) (h3 : term514 A B _53781) (h4 : term761 A _53782) : term687 _100044 _107639 _107642 A B _53779 _53780 _53781 _53782.
Proof. exact (fun _53778 : type656 _107642 A => @lem4555193 _100044 _107639 _107642 A B _53778 _53779 _53780 _53781 _53782 h1 h2 h3 h4). Qed.
Lemma lem4555199 {_100044 _107639 _107642 A B : Type'} (_53779 : type839 _107639 B) (_53780 : type839 _107642 B) (_53781 : type839 A B) (_53782 : type982 A) (h1 : term514 _107642 B _53780) (h2 : term514 A B _53781) (h3 : term761 A _53782) : term688 _100044 _107639 _107642 A B _53779 _53780 _53781 _53782.
Proof. exact (fun h0 : term514 _107639 B _53779 => @lem4555198 _100044 _107639 _107642 A B _53779 _53780 _53781 _53782 h0 h1 h2 h3). Qed.
Lemma lem4555204 {_100044 _107639 _107642 A B : Type'} (_53780 : type839 _107642 B) (_53781 : type839 A B) (_53782 : type982 A) (h1 : term514 _107642 B _53780) (h2 : term514 A B _53781) (h3 : term761 A _53782) : term690 _100044 _107639 _107642 A B _53780 _53781 _53782.
Proof. exact (fun _53779 : type839 _107639 B => @lem4555199 _100044 _107639 _107642 A B _53779 _53780 _53781 _53782 h1 h2 h3). Qed.
Lemma lem4555205 {_100044 _107639 _107642 A B : Type'} (_53780 : type839 _107642 B) (_53781 : type839 A B) (_53782 : type982 A) (h1 : term514 A B _53781) (h2 : term761 A _53782) : term691 _100044 _107639 _107642 A B _53780 _53781 _53782.
Proof. exact (fun h0 : term514 _107642 B _53780 => @lem4555204 _100044 _107639 _107642 A B _53780 _53781 _53782 h0 h1 h2). Qed.
Lemma lem4555210 {_100044 _107639 _107642 A B : Type'} (_53781 : type839 A B) (_53782 : type982 A) (h1 : term514 A B _53781) (h2 : term761 A _53782) : term693 _100044 _107639 _107642 A B _53781 _53782.
Proof. exact (fun _53780 : type839 _107642 B => @lem4555205 _100044 _107639 _107642 A B _53780 _53781 _53782 h1 h2). Qed.
Lemma lem4555211 {_100044 _107639 _107642 A B : Type'} (_53781 : type839 A B) (_53782 : type982 A) (h1 : term761 A _53782) : term694 _100044 _107639 _107642 A B _53781 _53782.
Proof. exact (fun h0 : term514 A B _53781 => @lem4555210 _100044 _107639 _107642 A B _53781 _53782 h0 h1). Qed.
Lemma lem4555216 {_100044 _107639 _107642 A B : Type'} (_53782 : type982 A) (h1 : term761 A _53782) : term696 _100044 _107639 _107642 A B _53782.
Proof. exact (fun _53781 : type839 A B => @lem4555211 _100044 _107639 _107642 A B _53781 _53782 h1). Qed.
Lemma lem4555217 {_100044 _107639 _107642 A B : Type'} (_53782 : type982 A) : term763 _100044 _107639 _107642 A B _53782.
Proof. exact (fun h0 : term761 A _53782 => @lem4555216 _100044 _107639 _107642 A B _53782 h0). Qed.
Lemma lem4555222 {_100044 _107639 _107642 A B : Type'} : term765 _100044 _107639 _107642 A B.
Proof. exact (fun _53782 : type982 A => @lem4555217 _100044 _107639 _107642 A B _53782). Qed.
Lemma lem4555223 {_100044 _107639 _107642 A B : Type'} : term74 _100044 _107639 _107642 A B.
Proof. exact (EQ_MP (@lem4533062 _100044 _107639 _107642 A B) (@lem4555222 _100044 _107639 _107642 A B)). Qed.
Lemma lem4555224 {_100044 _107639 _107642 A B : Type'} (d : _107639) : term1836 _100044 _107639 _107642 A B d.
Proof. exact (@lem4555223 _100044 _107639 _107642 A B d). Qed.
Lemma lem4555225 {_100044 _107639 _107642 A B : Type'} (d : _107639) : (term1836 _100044 _107639 _107642 A B d) = (term19 _100044 _107639 _107642 A B d).
Proof. exact (eq_refl (term1836 _100044 _107639 _107642 A B d)). Qed.
Lemma lem4555226 {_100044 _107639 _107642 A B : Type'} (d : _107639) : term19 _100044 _107639 _107642 A B d.
Proof. exact (EQ_MP (@lem4555225 _100044 _107639 _107642 A B d) (@lem4555224 _100044 _107639 _107642 A B d)). Qed.
Lemma lem4555228 {_100044 _107639 _107642 A B : Type'} (d : _107639) : term19 _100044 _107639 _107642 A B d.
Proof. exact (@lem4521736 _100044 _107639 _107642 A B d (@lem4555226 _100044 _107639 _107642 A B d)). Qed.
Lemma lem4555229 {_100044 _107639 _107642 A B : Type'} (d : _107639) (h1 : term10 _107639 _107642 d) : term68 _100044 _107639 _107642 A B.
Proof. exact (@lem4555228 _100044 _107639 _107642 A B d (@lem4521693 _107639 _107642 d h1)). Qed.
Lemma lem4555230 {_107639 _107642 A B : Type'} (d : _107639) (h1 : term10 _107639 _107642 d) : term66 _107639 _107642 A B.
Proof. exact (@lem4555229 Prop _107639 _107642 A B d h1 (@lem3863773 Prop)). Qed.
Lemma lem4555231 {_107639 _107642 A B : Type'} (d : _107639) (h1 : term10 _107639 _107642 d) : term64 _107639 _107642 A B.
Proof. exact (@lem4555230 _107639 _107642 A B d h1 (@lem4521711 _107639)). Qed.
Lemma lem4555232 {_107639 _107642 A B : Type'} (d : _107639) (h1 : term10 _107639 _107642 d) : term62 _107639 _107642 A B.
Proof. exact (@lem4555231 _107639 _107642 A B d h1 (@lem4521709 _107642)). Qed.
Lemma lem4555233 {_107639 _107642 A B : Type'} (d : _107639) (h1 : term10 _107639 _107642 d) : term60 _107639 _107642 A B.
Proof. exact (@lem4555232 _107639 _107642 A B d h1 (@lem4521704 A)). Qed.
Lemma lem4555234 {_107639 _107642 A B : Type'} (d : _107639) (h1 : term10 _107639 _107642 d) : term57 _107639 _107642 A B.
Proof. exact (@lem4555233 _107639 _107642 A B d h1 (@lem4521707 B)). Qed.
Lemma lem4555235 {_107639 _107642 A B : Type'} (d : _107639) (h1 : term10 _107639 _107642 d) : term55 _107639 _107642 A B.
Proof. exact (@lem4555234 _107639 _107642 A B d h1 (@lem4521712 _107639 B)). Qed.
Lemma lem4555236 {_107639 _107642 A B : Type'} (d : _107639) (h1 : term10 _107639 _107642 d) : term53 _107639 _107642 A B.
Proof. exact (@lem4555235 _107639 _107642 A B d h1 (@lem4521715 _107639 _107642)). Qed.
Lemma lem4555237 {_107639 _107642 A B : Type'} (d : _107639) (h1 : term10 _107639 _107642 d) : term51 _107639 _107642 A B.
Proof. exact (@lem4555236 _107639 _107642 A B d h1 (@lem4521710 _107642 B)). Qed.
Lemma lem4555238 {_107639 _107642 A B : Type'} (d : _107639) (h1 : term10 _107639 _107642 d) : term49 _107639 _107642 A B.
Proof. exact (@lem4555237 _107639 _107642 A B d h1 (@lem4521714 _107639 A)). Qed.
Lemma lem4555239 {_107639 _107642 A B : Type'} (d : _107639) (h1 : term10 _107639 _107642 d) : term46 _107639 _107642 A B.
Proof. exact (@lem4555238 _107639 _107642 A B d h1 (@lem4521713 _107642 A)). Qed.
Lemma lem4555240 {_107639 _107642 A B : Type'} (d : _107639) (h1 : term10 _107639 _107642 d) : term43 _107639 _107642 A B.
Proof. exact (@lem4555239 _107639 _107642 A B d h1 (@lem4521708 A B)). Qed.
Lemma lem4555241 {_107639 _107642 A B : Type'} (d : _107639) (h1 : term10 _107639 _107642 d) : term40 _107639 _107642 A B.
Proof. exact (@lem4555240 _107639 _107642 A B d h1 (@lem4521706 A)). Qed.
Lemma lem4555242 {_107639 _107642 A B : Type'} (d : _107639) (h1 : term10 _107639 _107642 d) : term37 _107639 _107642 A B.
Proof. exact (@lem4555241 _107639 _107642 A B d h1 (@lem4521705)). Qed.
Lemma lem4555243 {_107639 _107642 A B : Type'} (d : _107639) (h1 : term10 _107639 _107642 d) : term35 _107639 _107642 A B.
Proof. exact (@lem4555242 _107639 _107642 A B d h1 (@lem4521694 _107639 _107642)). Qed.
Lemma lem4555244 {_107639 _107642 A B : Type'} (d : _107639) (h1 : term10 _107639 _107642 d) : term33 _107639 _107642 A B.
Proof. exact (@lem4555243 _107639 _107642 A B d h1 (@lem4521701 _107639 A)). Qed.
Lemma lem4555245 {_107639 _107642 A B : Type'} (d : _107639) (h1 : term10 _107639 _107642 d) : term30 _107639 _107642 A B.
Proof. exact (@lem4555244 _107639 _107642 A B d h1 (@lem4521700 _107642 A)). Qed.
Lemma lem4555246 {_107639 _107642 A B : Type'} (d : _107639) (h1 : term10 _107639 _107642 d) : term28 _107642 A B.
Proof. exact (@lem4555245 _107639 _107642 A B d h1 (@lem4521699 _107639 B)). Qed.
Lemma lem4555247 {_107639 _107642 A B : Type'} (d : _107639) (h1 : term10 _107639 _107642 d) : term26 A B.
Proof. exact (@lem4555246 _107639 _107642 A B d h1 (@lem4521697 _107642 B)). Qed.
Lemma lem4555248 {_107639 _107642 A : Type'} (d : _107639) (h1 : term10 _107639 _107642 d) : term23 A.
Proof. exact (@lem4555247 _107639 _107642 A Prop d h1 (@lem4521678 A Prop)). Qed.
Lemma lem4555249 {_107639 _107642 : Type'} (d : _107639) (h1 : term10 _107639 _107642 d) : False.
Proof. exact (@lem4555248 _107639 _107642 Prop d h1 (@lem4521702 Prop)). Qed.
Lemma lem4555250 {_107639 _107642 : Type'} (d : _107639) (h1 : term10 _107639 _107642 d) : (term10 _107639 _107642 d) = False.
Proof. exact (prop_ext (fun h2 : term10 _107639 _107642 d => @lem4555249 _107639 _107642 d h1) (fun h2 : False => @lem4521693 _107639 _107642 d h1)). Qed.
Lemma lem4555251 {_107639 _107642 : Type'} (d : _107639) (h1 : term10 _107639 _107642 d) : False.
Proof. exact (EQ_MP (@lem4555250 _107639 _107642 d h1) (@lem4521693 _107639 _107642 d h1)). Qed.
Lemma lem4555252 {_107639 _107642 : Type'} (d : _107639) : term9 _107639 _107642 d.
Proof. exact (fun h0 : term10 _107639 _107642 d => @lem4555251 _107639 _107642 d h0). Qed.
Lemma lem4555253 {_107639 _107642 : Type'} (d : _107639) : term8 _107639 _107642 d.
Proof. exact (EQ_MP (@lem4521692 _107639 _107642 d) (@lem4555252 _107639 _107642 d)). Qed.
