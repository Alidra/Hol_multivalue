Require Import coq.
Require Import theory_hol.
Require Import hol_types.
Require Import hol_type_abbrevs.
Require Import hol_terms.
Definition term4 (a0 : Type') (a1 : Type') (a2 : Type') (x0 : cart a0 a1) (x1 : cart a0 a2) := @lambda a0 (finite_sum a1 a2) (fun y0 : nat => @COND a0 (Peano.le y0 (@dimindex a1 (@UNIV a1))) (@dollar a0 a1 x0 y0) (@dollar a0 a2 x1 (Nat.sub y0 (@dimindex a1 (@UNIV a1))))).
Definition term6 (a0 : Type') (a1 : Type') (a2 : Type') := forall y0 : cart a0 a1, forall y1 : cart a0 a2, (@pastecart a0 a1 a2 y0 y1) = (@lambda a0 (finite_sum a1 a2) (fun y2 : nat => @COND a0 (Peano.le y2 (@dimindex a1 (@UNIV a1))) (@dollar a0 a1 y0 y2) (@dollar a0 a2 y1 (Nat.sub y2 (@dimindex a1 (@UNIV a1)))))).
Definition term5 (a0 : Type') (a1 : Type') (a2 : Type') (x0 : cart a0 a1) := forall y0 : cart a0 a2, (@pastecart a0 a1 a2 x0 y0) = (@lambda a0 (finite_sum a1 a2) (fun y1 : nat => @COND a0 (Peano.le y1 (@dimindex a1 (@UNIV a1))) (@dollar a0 a1 x0 y1) (@dollar a0 a2 y0 (Nat.sub y1 (@dimindex a1 (@UNIV a1)))))).
Definition term3 (a0 : Type') (a1 : Type') (a2 : Type') (x0 : cart a0 a1) (x1 : cart a0 a2) := (fun y0 : cart a0 a2 => @lambda a0 (finite_sum a1 a2) (fun y1 : nat => @COND a0 (Peano.le y1 (@dimindex a1 (@UNIV a1))) (@dollar a0 a1 x0 y1) (@dollar a0 a2 y0 (Nat.sub y1 (@dimindex a1 (@UNIV a1)))))) x1.
Definition term1 (a0 : Type') (a1 : Type') (a2 : Type') (x0 : cart a0 a1) := (fun y0 : cart a0 a1 => fun y1 : cart a0 a2 => @lambda a0 (finite_sum a1 a2) (fun y2 : nat => @COND a0 (Peano.le y2 (@dimindex a1 (@UNIV a1))) (@dollar a0 a1 y0 y2) (@dollar a0 a2 y1 (Nat.sub y2 (@dimindex a1 (@UNIV a1)))))) x0.
Definition term2 (a0 : Type') (a1 : Type') (a2 : Type') (x0 : cart a0 a1) := fun y0 : cart a0 a2 => @lambda a0 (finite_sum a1 a2) (fun y1 : nat => @COND a0 (Peano.le y1 (@dimindex a1 (@UNIV a1))) (@dollar a0 a1 x0 y1) (@dollar a0 a2 y0 (Nat.sub y1 (@dimindex a1 (@UNIV a1))))).
Definition term7 (a0 : Type') (a1 : Type') (a2 : Type') (x0 : cart a0 a1) := (fun y0 : cart a0 a1 => forall y1 : cart a0 a2, (@pastecart a0 a1 a2 y0 y1) = (@lambda a0 (finite_sum a1 a2) (fun y2 : nat => @COND a0 (Peano.le y2 (@dimindex a1 (@UNIV a1))) (@dollar a0 a1 y0 y2) (@dollar a0 a2 y1 (Nat.sub y2 (@dimindex a1 (@UNIV a1))))))) x0.
Definition term0 (a0 : Type') (a1 : Type') (a2 : Type') := fun y0 : cart a0 a1 => fun y1 : cart a0 a2 => @lambda a0 (finite_sum a1 a2) (fun y2 : nat => @COND a0 (Peano.le y2 (@dimindex a1 (@UNIV a1))) (@dollar a0 a1 y0 y2) (@dollar a0 a2 y1 (Nat.sub y2 (@dimindex a1 (@UNIV a1))))).
Definition term8 (a0 : Type') (a1 : Type') (a2 : Type') (x0 : cart a0 a1) (x1 : cart a0 a2) := (fun y0 : cart a0 a2 => (@pastecart a0 a1 a2 x0 y0) = (@lambda a0 (finite_sum a1 a2) (fun y1 : nat => @COND a0 (Peano.le y1 (@dimindex a1 (@UNIV a1))) (@dollar a0 a1 x0 y1) (@dollar a0 a2 y0 (Nat.sub y1 (@dimindex a1 (@UNIV a1))))))) x1.
