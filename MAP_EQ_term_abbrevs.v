Require Import coq.
Require Import theory_hol.
Require Import hol_types.
Require Import hol_type_abbrevs.
Require Import hol_terms.
Definition term184 (a0 : Type') (a1 : Type') (x0 : type516 a0 a1) (x1 : a0 -> a1) (x2 : a0 -> a1) := @I ((a0 -> Prop) -> (list a0) -> Prop) (@List.Forall a0) (@I ((a0 -> a1) -> a0 -> Prop) (@I ((a0 -> a1) -> (a0 -> a1) -> a0 -> Prop) x0 x1) x2).
Definition term64 (a0 : Type') (a1 : Type') (x0 : a0 -> a1) (x1 : a0) (x2 : a0 -> a1) (x3 : list a0) := (((x0 x1) = (x2 x1)) /\ (@List.Forall a0 (fun y0 : a0 => (x0 y0) = (x2 y0)) x3)) -> (@cons a1 (x0 x1) (@List.map a0 a1 x0 x3)) = (@cons a1 (x2 x1) (@List.map a0 a1 x2 x3)).
Definition term186 (a0 : Type') (a1 : Type') (x0 : type516 a0 a1) (x1 : a0 -> a1) (x2 : a0 -> a1) (x3 : list a0) := @I ((list a0) -> Prop) (@I ((a0 -> Prop) -> (list a0) -> Prop) (@List.Forall a0) (@I ((a0 -> a1) -> a0 -> Prop) (@I ((a0 -> a1) -> (a0 -> a1) -> a0 -> Prop) x0 x1) x2)) x3.
Definition term96 (a0 : Type') (a1 : Type') (x0 : type516 a0 a1) (x1 : a0 -> a1) (x2 : a0 -> a1) := @eq (a0 -> Prop) (x0 x1 x2).
Definition term199 (a0 : Type') (a1 : Type') (x0 : a0 -> a1) (x1 : a0) := @I (a1 -> (list a1) -> list a1) (@cons a1) (@I (a0 -> a1) x0 x1).
Definition term207 := (~ False) -> False.
Definition term276 (a0 : Type') (a1 : Type') (x0 : list a0) (x1 : a0 -> a1) := (fun y0 : a0 -> a1 => forall y1 : a0, forall y2 : a0 -> a1, ((@List.Forall a0 (fun y3 : a0 => (y2 y3) = (y0 y3)) x0) -> (@List.map a0 a1 y2 x0) = (@List.map a0 a1 y0 x0)) -> (~ ((((y2 y1) = (y0 y1)) /\ (@List.Forall a0 (fun y3 : a0 => (y2 y3) = (y0 y3)) x0)) -> (@cons a1 (y2 y1) (@List.map a0 a1 y2 x0)) = (@cons a1 (y0 y1) (@List.map a0 a1 y0 x0)))) -> False) x1.
Definition term1 (a0 : Type') (a1 : Type') (x0 : a0 -> a1) := (fun y0 : a0 -> a1 => forall y1 : a0, forall y2 : list a0, (@List.map a0 a1 y0 (@cons a0 y1 y2)) = (@cons a1 (y0 y1) (@List.map a0 a1 y0 y2))) x0.
Definition term21 (a0 : Type') (a1 : Type') (x0 : a0 -> a1) (x1 : a0 -> a1) (x2 : a0) (x3 : list a0) := (fun y0 : list a0 => (@List.Forall a0 (fun y1 : a0 => (x0 y1) = (x1 y1)) y0) -> (@List.map a0 a1 x0 y0) = (@List.map a0 a1 x1 y0)) (@cons a0 x2 x3).
Definition term70 (a0 : Type') (a1 : Type') (x0 : a0 -> a1) (x1 : a0) (x2 : a0 -> a1) (x3 : list a0) := ((((@List.Forall a0 (fun y0 : a0 => (x0 y0) = (x2 y0)) x3) -> (@List.map a0 a1 x0 x3) = (@List.map a0 a1 x2 x3)) -> (~ ((((x0 x1) = (x2 x1)) /\ (@List.Forall a0 (fun y0 : a0 => (x0 y0) = (x2 y0)) x3)) -> (@cons a1 (x0 x1) (@List.map a0 a1 x0 x3)) = (@cons a1 (x2 x1) (@List.map a0 a1 x2 x3)))) -> False) -> ((@List.Forall a0 (fun y0 : a0 => (x0 y0) = (x2 y0)) x3) -> (@List.map a0 a1 x0 x3) = (@List.map a0 a1 x2 x3)) -> (~ ((((x0 x1) = (x2 x1)) /\ (@List.Forall a0 (fun y0 : a0 => (x0 y0) = (x2 y0)) x3)) -> (@cons a1 (x0 x1) (@List.map a0 a1 x0 x3)) = (@cons a1 (x2 x1) (@List.map a0 a1 x2 x3)))) -> False) -> ((@List.Forall a0 (fun y0 : a0 => (x0 y0) = (x2 y0)) x3) -> (@List.map a0 a1 x0 x3) = (@List.map a0 a1 x2 x3)) -> (~ ((((x0 x1) = (x2 x1)) /\ (@List.Forall a0 (fun y0 : a0 => (x0 y0) = (x2 y0)) x3)) -> (@cons a1 (x0 x1) (@List.map a0 a1 x0 x3)) = (@cons a1 (x2 x1) (@List.map a0 a1 x2 x3)))) -> False.
Definition term165 (a0 : Type') (a1 : Type') (x0 : type516 a0 a1) (x1 : a0 -> a1) (x2 : a0 -> a1) := fun y0 : a0 => (x0 x1 x2 y0) = ((x1 y0) = (x2 y0)).
Definition term211 (a0 : Type') (x0 : type1397 a0) (x1 : a0) (x2 : type1397 a0) (x3 : a0) := (x1 = x3) -> (~ (x0 = x2)) \/ ((@I (a0 -> (list a0) -> list a0) x0 x1) = (@I (a0 -> (list a0) -> list a0) x2 x3)).
Definition term98 (a0 : Type') (a1 : Type') (x0 : type516 a0 a1) (x1 : a0 -> a1) (x2 : a0 -> a1) := @List.Forall a0 (x0 x1 x2).
Definition term178 (a0 : Type') (a1 : Type') (x0 : a0 -> a1) (x1 : list a0) := @I ((list a0) -> list a1) (@I ((a0 -> a1) -> (list a0) -> list a1) (@List.map a0 a1) x0) x1.
Definition term30 (a0 : Type') (a1 : Type') (x0 : a0 -> a1) (x1 : a0 -> a1) := fun y0 : a0 => forall y1 : list a0, ((@List.Forall a0 (fun y2 : a0 => (x0 y2) = (x1 y2)) y1) -> (@List.map a0 a1 x0 y1) = (@List.map a0 a1 x1 y1)) -> (@List.Forall a0 (fun y2 : a0 => (x0 y2) = (x1 y2)) (@cons a0 y0 y1)) -> (@List.map a0 a1 x0 (@cons a0 y0 y1)) = (@List.map a0 a1 x1 (@cons a0 y0 y1)).
Definition term23 (a0 : Type') (a1 : Type') (x0 : a0 -> a1) (x1 : a0 -> a1) (x2 : a0) (x3 : list a0) := ((fun y0 : list a0 => (@List.Forall a0 (fun y1 : a0 => (x0 y1) = (x1 y1)) y0) -> (@List.map a0 a1 x0 y0) = (@List.map a0 a1 x1 y0)) x3) -> (fun y0 : list a0 => (@List.Forall a0 (fun y1 : a0 => (x0 y1) = (x1 y1)) y0) -> (@List.map a0 a1 x0 y0) = (@List.map a0 a1 x1 y0)) (@cons a0 x2 x3).
Definition term73 (x0 : Prop) := ~ (~ x0).
Definition term41 (a0 : Type') (a1 : Type') (x0 : a0 -> a1) (x1 : a0 -> a1) := @List.Forall a0 (fun y0 : a0 => (x0 y0) = (x1 y0)) (@nil a0).
Definition term164 (a0 : Type') (a1 : Type') (x0 : type516 a0 a1) (x1 : a0 -> a1) (x2 : a0 -> a1) := fun y0 : a0 => (x0 x1 x2 y0) = ((fun y1 : a0 => (x1 y1) = (x2 y1)) y0).
Definition term217 (a0 : Type') (a1 : Type') (x0 : a0 -> a1) (x1 : a0 -> a1) (x2 : a0) := (~ ((@I (a0 -> a1) x0 x2) = (@I (a0 -> a1) x1 x2))) -> (@I (a0 -> a1) x0 x2) = (@I (a0 -> a1) x1 x2).
Definition term47 (a0 : Type') (a1 : Type') (x0 : a0 -> a1) (x1 : a0 -> a1) (x2 : a0) (x3 : list a0) := @List.Forall a0 (fun y0 : a0 => (x0 y0) = (x1 y0)) (@cons a0 x2 x3).
Definition term172 (a0 : Type') (a1 : Type') (x0 : type516 a0 a1) := (forall y0 : a0 -> a1, forall y1 : a0 -> a1, forall y2 : a0, (x0 y0 y1 y2) = ((y0 y2) = (y1 y2))) -> forall y0 : list a0, forall y1 : a0 -> a1, forall y2 : a0, forall y3 : a0 -> a1, ((@List.Forall a0 (x0 y3 y1) y0) -> (@List.map a0 a1 y3 y0) = (@List.map a0 a1 y1 y0)) -> (((y3 y2) = (y1 y2)) /\ (@List.Forall a0 (x0 y3 y1) y0)) -> (@cons a1 (y3 y2) (@List.map a0 a1 y3 y0)) = (@cons a1 (y1 y2) (@List.map a0 a1 y1 y0)).
Definition term26 (a0 : Type') (a1 : Type') (x0 : a0 -> a1) (x1 : a0 -> a1) (x2 : a0) := fun y0 : list a0 => ((@List.Forall a0 (fun y1 : a0 => (x0 y1) = (x1 y1)) y0) -> (@List.map a0 a1 x0 y0) = (@List.map a0 a1 x1 y0)) -> (@List.Forall a0 (fun y1 : a0 => (x0 y1) = (x1 y1)) (@cons a0 x2 y0)) -> (@List.map a0 a1 x0 (@cons a0 x2 y0)) = (@List.map a0 a1 x1 (@cons a0 x2 y0)).
Definition term201 (a0 : Type') (a1 : Type') (x0 : a0) (x1 : a0 -> a1) (x2 : list a0) := @I ((list a1) -> list a1) (@I (a1 -> (list a1) -> list a1) (@cons a1) (@I (a0 -> a1) x1 x0)) (@I ((list a0) -> list a1) (@I ((a0 -> a1) -> (list a0) -> list a1) (@List.map a0 a1) x1) x2).
Definition term112 (a0 : Type') (a1 : Type') (x0 : type516 a0 a1) (x1 : list a0) := fun y0 : a0 -> a1 => forall y1 : a0, forall y2 : a0 -> a1, ((@List.Forall a0 (x0 y2 y0) x1) -> (@List.map a0 a1 y2 x1) = (@List.map a0 a1 y0 x1)) -> (((y2 y1) = (y0 y1)) /\ (@List.Forall a0 (x0 y2 y0) x1)) -> (@cons a1 (y2 y1) (@List.map a0 a1 y2 x1)) = (@cons a1 (y0 y1) (@List.map a0 a1 y0 x1)).
Definition term84 (a0 : Type') (a1 : Type') (x0 : list a0) := fun y0 : a0 -> a1 => forall y1 : a0, forall y2 : a0 -> a1, ((@List.Forall a0 (fun y3 : a0 => (y2 y3) = (y0 y3)) x0) -> (@List.map a0 a1 y2 x0) = (@List.map a0 a1 y0 x0)) -> (((y2 y1) = (y0 y1)) /\ (@List.Forall a0 (fun y3 : a0 => (y2 y3) = (y0 y3)) x0)) -> (@cons a1 (y2 y1) (@List.map a0 a1 y2 x0)) = (@cons a1 (y0 y1) (@List.map a0 a1 y0 x0)).
Definition term83 (a0 : Type') (a1 : Type') (x0 : list a0) := fun y0 : a0 -> a1 => forall y1 : a0, forall y2 : a0 -> a1, ((@List.Forall a0 (fun y3 : a0 => (y2 y3) = (y0 y3)) x0) -> (@List.map a0 a1 y2 x0) = (@List.map a0 a1 y0 x0)) -> (~ ((((y2 y1) = (y0 y1)) /\ (@List.Forall a0 (fun y3 : a0 => (y2 y3) = (y0 y3)) x0)) -> (@cons a1 (y2 y1) (@List.map a0 a1 y2 x0)) = (@cons a1 (y0 y1) (@List.map a0 a1 y0 x0)))) -> False.
Definition term206 (a0 : Type') (a1 : Type') (x0 : type516 a0 a1) (x1 : a0 -> a1) (x2 : a0 -> a1) (x3 : list a0) := (@I ((list a0) -> Prop) (@I ((a0 -> Prop) -> (list a0) -> Prop) (@List.Forall a0) (@I ((a0 -> a1) -> a0 -> Prop) (@I ((a0 -> a1) -> (a0 -> a1) -> a0 -> Prop) x0 x1) x2)) x3) -> False.
Definition term202 (a0 : Type') (a1 : Type') (x0 : a0) (x1 : a0 -> a1) (x2 : list a0) := @eq (list a1) (@I ((list a1) -> list a1) (@I (a1 -> (list a1) -> list a1) (@cons a1) (@I (a0 -> a1) x1 x0)) (@I ((list a0) -> list a1) (@I ((a0 -> a1) -> (list a0) -> list a1) (@List.map a0 a1) x1) x2)).
Definition term262 (a0 : Type') (x0 : type1138 a0) (x1 : type1138 a0) (x2 : list a0) (x3 : list a0) := (~ (~ (x0 = x1))) /\ (~ (~ (x2 = x3))).
Definition term236 (a0 : Type') (x0 : a0) (x1 : a0) (x2 : type1397 a0) (x3 : type1397 a0) := (~ (~ (x0 = x1))) /\ (~ (~ (x2 = x3))).
Definition term5 (a0 : Type') (a1 : Type') (x0 : a0) (x1 : a0 -> a1) (x2 : list a0) := (fun y0 : list a0 => (@List.map a0 a1 x1 (@cons a0 x0 y0)) = (@cons a1 (x1 x0) (@List.map a0 a1 x1 y0))) x2.
Definition term60 (a0 : Type') (a1 : Type') (x0 : a0 -> a1) (x1 : a0 -> a1) (x2 : a0) (x3 : list a0) := imp (@List.Forall a0 (fun y0 : a0 => (x0 y0) = (x1 y0)) (@cons a0 x2 x3)).
Definition term256 (a0 : Type') (x0 : type1138 a0) (x1 : type1138 a0) := ~ (x0 = x1).
Definition term222 (a0 : Type') (x0 : type1397 a0) (x1 : type1397 a0) := ~ (x0 = x1).
Definition term35 (a0 : Type') (a1 : Type') (x0 : a0 -> a1) (x1 : a0 -> a1) := imp (((fun y0 : list a0 => (@List.Forall a0 (fun y1 : a0 => (x0 y1) = (x1 y1)) y0) -> (@List.map a0 a1 x0 y0) = (@List.map a0 a1 x1 y0)) (@nil a0)) /\ (forall y0 : a0, forall y1 : list a0, ((fun y2 : list a0 => (@List.Forall a0 (fun y3 : a0 => (x0 y3) = (x1 y3)) y2) -> (@List.map a0 a1 x0 y2) = (@List.map a0 a1 x1 y2)) y1) -> (fun y2 : list a0 => (@List.Forall a0 (fun y3 : a0 => (x0 y3) = (x1 y3)) y2) -> (@List.map a0 a1 x0 y2) = (@List.map a0 a1 x1 y2)) (@cons a0 y0 y1))).
Definition term258 (a0 : Type') (x0 : type1138 a0) (x1 : type1138 a0) (x2 : list a0) (x3 : list a0) := @eq Prop (((@I ((list a0) -> list a0) x0 x2) = (@I ((list a0) -> list a0) x1 x3)) \/ ((~ (x0 = x1)) \/ (~ (x2 = x3)))).
Definition term229 (a0 : Type') (x0 : a0) (x1 : a0) (x2 : type1397 a0) (x3 : type1397 a0) := @eq Prop (((@I (a0 -> (list a0) -> list a0) x2 x0) = (@I (a0 -> (list a0) -> list a0) x3 x1)) \/ ((~ (x0 = x1)) \/ (~ (x2 = x3)))).
Definition term67 (a0 : Type') (a1 : Type') (x0 : a0 -> a1) (x1 : a0) (x2 : a0 -> a1) (x3 : list a0) := ~ ((((x0 x1) = (x2 x1)) /\ (@List.Forall a0 (fun y0 : a0 => (x0 y0) = (x2 y0)) x3)) -> (@cons a1 (x0 x1) (@List.map a0 a1 x0 x3)) = (@cons a1 (x2 x1) (@List.map a0 a1 x2 x3))).
Definition term55 (a0 : Type') (a1 : Type') (x0 : a0 -> a1) (x1 : a0 -> a1) (x2 : a0) := @eq Prop ((fun y0 : a0 => (x0 y0) = (x1 y0)) x2).
Definition term133 (a0 : Type') (a1 : Type') := fun y0 : type516 a0 a1 => (y0 = (fun y1 : a0 -> a1 => fun y2 : a0 -> a1 => fun y3 : a0 => (y1 y3) = (y2 y3))) -> (fun y1 : type516 a0 a1 => forall y2 : list a0, forall y3 : a0 -> a1, forall y4 : a0, forall y5 : a0 -> a1, ((@List.Forall a0 (y1 y5 y3) y2) -> (@List.map a0 a1 y5 y2) = (@List.map a0 a1 y3 y2)) -> (((y5 y4) = (y3 y4)) /\ (@List.Forall a0 (y1 y5 y3) y2)) -> (@cons a1 (y5 y4) (@List.map a0 a1 y5 y2)) = (@cons a1 (y3 y4) (@List.map a0 a1 y3 y2))) y0.
Definition term135 (a0 : Type') (a1 : Type') := forall y0 : type516 a0 a1, (y0 = (fun y1 : a0 -> a1 => fun y2 : a0 -> a1 => fun y3 : a0 => (y1 y3) = (y2 y3))) -> (fun y1 : type516 a0 a1 => forall y2 : list a0, forall y3 : a0 -> a1, forall y4 : a0, forall y5 : a0 -> a1, ((@List.Forall a0 (y1 y5 y3) y2) -> (@List.map a0 a1 y5 y2) = (@List.map a0 a1 y3 y2)) -> (((y5 y4) = (y3 y4)) /\ (@List.Forall a0 (y1 y5 y3) y2)) -> (@cons a1 (y5 y4) (@List.map a0 a1 y5 y2)) = (@cons a1 (y3 y4) (@List.map a0 a1 y3 y2))) y0.
Definition term246 (a0 : Type') (a1 : Type') (x0 : a0 -> a1) (x1 : a0 -> a1) (x2 : a0) := (((@I (a0 -> a1) x0 x2) = (@I (a0 -> a1) x1 x2)) /\ ((@cons a1) = (@cons a1))) -> (@I (a1 -> (list a1) -> list a1) (@cons a1) (@I (a0 -> a1) x0 x2)) = (@I (a1 -> (list a1) -> list a1) (@cons a1) (@I (a0 -> a1) x1 x2)).
Definition term158 (a0 : Type') (x0 : a0 -> Prop) := fun y0 : a0 => x0 y0.
Definition term189 (a0 : Type') (a1 : Type') (x0 : type516 a0 a1) (x1 : a0 -> a1) (x2 : a0 -> a1) (x3 : list a0) := or (~ (@List.Forall a0 (x0 x1 x2) x3)).
Definition term241 (a0 : Type') (x0 : a0) (x1 : a0) (x2 : type1397 a0) (x3 : type1397 a0) := (x0 = x1) /\ (x2 = x3).
Definition term280 (a0 : Type') (a1 : Type') := forall y0 : a0 -> a1, forall y1 : a0 -> a1, forall y2 : list a0, (@List.Forall a0 (fun y3 : a0 => (y0 y3) = (y1 y3)) y2) -> (@List.map a0 a1 y0 y2) = (@List.map a0 a1 y1 y2).
Definition term170 (a0 : Type') (a1 : Type') (x0 : type516 a0 a1) := forall y0 : a0 -> a1, forall y1 : a0 -> a1, forall y2 : a0, (x0 y0 y1 y2) = ((y0 y2) = (y1 y2)).
Definition term224 (a0 : Type') (x0 : a0) (x1 : a0) (x2 : type1397 a0) (x3 : type1397 a0) := (~ (x0 = x1)) \/ (((@I (a0 -> (list a0) -> list a0) x2 x0) = (@I (a0 -> (list a0) -> list a0) x3 x1)) \/ (~ (x2 = x3))).
Definition term65 (x0 : Prop) := (~ x0) -> False.
Definition term11 (a0 : Type') (a1 : Type') (x0 : a0 -> a1) (x1 : a0 -> a1) := (((fun y0 : list a0 => (@List.Forall a0 (fun y1 : a0 => (x0 y1) = (x1 y1)) y0) -> (@List.map a0 a1 x0 y0) = (@List.map a0 a1 x1 y0)) (@nil a0)) /\ (forall y0 : a0, forall y1 : list a0, ((fun y2 : list a0 => (@List.Forall a0 (fun y3 : a0 => (x0 y3) = (x1 y3)) y2) -> (@List.map a0 a1 x0 y2) = (@List.map a0 a1 x1 y2)) y1) -> (fun y2 : list a0 => (@List.Forall a0 (fun y3 : a0 => (x0 y3) = (x1 y3)) y2) -> (@List.map a0 a1 x0 y2) = (@List.map a0 a1 x1 y2)) (@cons a0 y0 y1))) -> forall y0 : list a0, (fun y1 : list a0 => (@List.Forall a0 (fun y2 : a0 => (x0 y2) = (x1 y2)) y1) -> (@List.map a0 a1 x0 y1) = (@List.map a0 a1 x1 y1)) y0.
Definition term268 (a0 : Type') (x0 : type1138 a0) (x1 : type1138 a0) (x2 : list a0) (x3 : list a0) := imp (~ ((~ (x0 = x1)) \/ (~ (x2 = x3)))).
Definition term242 (a0 : Type') (x0 : a0) (x1 : a0) (x2 : type1397 a0) (x3 : type1397 a0) := imp (~ ((~ (x0 = x1)) \/ (~ (x2 = x3)))).
Definition term218 (a0 : Type') (a1 : Type') (x0 : a0 -> a1) (x1 : a0 -> a1) (x2 : a0) := ~ ((@I (a0 -> a1) x0 x2) = (@I (a0 -> a1) x1 x2)).
Definition term10 (a0 : Type') (x0 : type1143 a0) := ((x0 (@nil a0)) /\ (forall y0 : a0, forall y1 : list a0, (x0 y1) -> x0 (@cons a0 y0 y1))) -> forall y0 : list a0, x0 y0.
Definition term275 (a0 : Type') (a1 : Type') (x0 : list a0) := (fun y0 : list a0 => forall y1 : a0 -> a1, forall y2 : a0, forall y3 : a0 -> a1, ((@List.Forall a0 (fun y4 : a0 => (y3 y4) = (y1 y4)) y0) -> (@List.map a0 a1 y3 y0) = (@List.map a0 a1 y1 y0)) -> (~ ((((y3 y2) = (y1 y2)) /\ (@List.Forall a0 (fun y4 : a0 => (y3 y4) = (y1 y4)) y0)) -> (@cons a1 (y3 y2) (@List.map a0 a1 y3 y0)) = (@cons a1 (y1 y2) (@List.map a0 a1 y1 y0)))) -> False) x0.
Definition term156 (a0 : Type') (a1 : Type') (x0 : type516 a0 a1) (x1 : a0 -> a1) := fun y0 : a0 -> a1 => (x0 x1 y0) = (fun y1 : a0 => (x1 y1) = (y0 y1)).
Definition term106 (a0 : Type') (a1 : Type') (x0 : type516 a0 a1) (x1 : a0 -> a1) (x2 : a0 -> a1) (x3 : list a0) := imp ((@List.Forall a0 (x0 x1 x2) x3) -> (@List.map a0 a1 x1 x3) = (@List.map a0 a1 x2 x3)).
Definition term175 (a0 : Type') (a1 : Type') (x0 : a0 -> a1) (x1 : a0) (x2 : a0 -> a1) (x3 : list a0) := (~ ((@cons a1 (x0 x1) (@List.map a0 a1 x0 x3)) = (@cons a1 (x2 x1) (@List.map a0 a1 x2 x3)))) -> False.
Definition term66 (a0 : Type') (a1 : Type') (x0 : a0 -> a1) (x1 : a0) (x2 : a0 -> a1) (x3 : list a0) := (~ ((((x0 x1) = (x2 x1)) /\ (@List.Forall a0 (fun y0 : a0 => (x0 y0) = (x2 y0)) x3)) -> (@cons a1 (x0 x1) (@List.map a0 a1 x0 x3)) = (@cons a1 (x2 x1) (@List.map a0 a1 x2 x3)))) -> False.
Definition term115 (a0 : Type') (a1 : Type') (x0 : type516 a0 a1) := forall y0 : list a0, forall y1 : a0 -> a1, forall y2 : a0, forall y3 : a0 -> a1, ((@List.Forall a0 (x0 y3 y1) y0) -> (@List.map a0 a1 y3 y0) = (@List.map a0 a1 y1 y0)) -> (((y3 y2) = (y1 y2)) /\ (@List.Forall a0 (x0 y3 y1) y0)) -> (@cons a1 (y3 y2) (@List.map a0 a1 y3 y0)) = (@cons a1 (y1 y2) (@List.map a0 a1 y1 y0)).
Definition term90 (a0 : Type') (a1 : Type') := forall y0 : list a0, forall y1 : a0 -> a1, forall y2 : a0, forall y3 : a0 -> a1, ((@List.Forall a0 (fun y4 : a0 => (y3 y4) = (y1 y4)) y0) -> (@List.map a0 a1 y3 y0) = (@List.map a0 a1 y1 y0)) -> (((y3 y2) = (y1 y2)) /\ (@List.Forall a0 (fun y4 : a0 => (y3 y4) = (y1 y4)) y0)) -> (@cons a1 (y3 y2) (@List.map a0 a1 y3 y0)) = (@cons a1 (y1 y2) (@List.map a0 a1 y1 y0)).
Definition term89 (a0 : Type') (a1 : Type') := forall y0 : list a0, forall y1 : a0 -> a1, forall y2 : a0, forall y3 : a0 -> a1, ((@List.Forall a0 (fun y4 : a0 => (y3 y4) = (y1 y4)) y0) -> (@List.map a0 a1 y3 y0) = (@List.map a0 a1 y1 y0)) -> (~ ((((y3 y2) = (y1 y2)) /\ (@List.Forall a0 (fun y4 : a0 => (y3 y4) = (y1 y4)) y0)) -> (@cons a1 (y3 y2) (@List.map a0 a1 y3 y0)) = (@cons a1 (y1 y2) (@List.map a0 a1 y1 y0)))) -> False.
Definition term72 (a0 : Type') (a1 : Type') (x0 : a0 -> a1) (x1 : a0) (x2 : a0 -> a1) (x3 : list a0) := ~ (~ ((((x0 x1) = (x2 x1)) /\ (@List.Forall a0 (fun y0 : a0 => (x0 y0) = (x2 y0)) x3)) -> (@cons a1 (x0 x1) (@List.map a0 a1 x0 x3)) = (@cons a1 (x2 x1) (@List.map a0 a1 x2 x3)))).
Definition term71 (a0 : Type') (a1 : Type') (x0 : a0 -> a1) (x1 : a0) (x2 : a0 -> a1) (x3 : list a0) := ((((@List.Forall a0 (fun y0 : a0 => (x0 y0) = (x2 y0)) x3) -> (@List.map a0 a1 x0 x3) = (@List.map a0 a1 x2 x3)) -> (~ ((((x0 x1) = (x2 x1)) /\ (@List.Forall a0 (fun y0 : a0 => (x0 y0) = (x2 y0)) x3)) -> (@cons a1 (x0 x1) (@List.map a0 a1 x0 x3)) = (@cons a1 (x2 x1) (@List.map a0 a1 x2 x3)))) -> False) -> ((@List.Forall a0 (fun y0 : a0 => (x0 y0) = (x2 y0)) x3) -> (@List.map a0 a1 x0 x3) = (@List.map a0 a1 x2 x3)) -> (~ ((((x0 x1) = (x2 x1)) /\ (@List.Forall a0 (fun y0 : a0 => (x0 y0) = (x2 y0)) x3)) -> (@cons a1 (x0 x1) (@List.map a0 a1 x0 x3)) = (@cons a1 (x2 x1) (@List.map a0 a1 x2 x3)))) -> False) -> (((@List.Forall a0 (fun y0 : a0 => (x0 y0) = (x2 y0)) x3) -> (@List.map a0 a1 x0 x3) = (@List.map a0 a1 x2 x3)) -> (~ ((((x0 x1) = (x2 x1)) /\ (@List.Forall a0 (fun y0 : a0 => (x0 y0) = (x2 y0)) x3)) -> (@cons a1 (x0 x1) (@List.map a0 a1 x0 x3)) = (@cons a1 (x2 x1) (@List.map a0 a1 x2 x3)))) -> False) -> ((@List.Forall a0 (fun y0 : a0 => (x0 y0) = (x2 y0)) x3) -> (@List.map a0 a1 x0 x3) = (@List.map a0 a1 x2 x3)) -> (~ ((((x0 x1) = (x2 x1)) /\ (@List.Forall a0 (fun y0 : a0 => (x0 y0) = (x2 y0)) x3)) -> (@cons a1 (x0 x1) (@List.map a0 a1 x0 x3)) = (@cons a1 (x2 x1) (@List.map a0 a1 x2 x3)))) -> False.
Definition term25 (a0 : Type') (a1 : Type') (x0 : a0 -> a1) (x1 : a0 -> a1) (x2 : a0) := fun y0 : list a0 => ((fun y1 : list a0 => (@List.Forall a0 (fun y2 : a0 => (x0 y2) = (x1 y2)) y1) -> (@List.map a0 a1 x0 y1) = (@List.map a0 a1 x1 y1)) y0) -> (fun y1 : list a0 => (@List.Forall a0 (fun y2 : a0 => (x0 y2) = (x1 y2)) y1) -> (@List.map a0 a1 x0 y1) = (@List.map a0 a1 x1 y1)) (@cons a0 x2 y0).
Definition term160 (a0 : Type') (a1 : Type') (x0 : type516 a0 a1) (x1 : a0 -> a1) (x2 : a0 -> a1) := forall y0 : a0, (x0 x1 x2 y0) = ((fun y1 : a0 => (x1 y1) = (x2 y1)) y0).
Definition term24 (a0 : Type') (a1 : Type') (x0 : a0 -> a1) (x1 : a0 -> a1) (x2 : a0) (x3 : list a0) := ((@List.Forall a0 (fun y0 : a0 => (x0 y0) = (x1 y0)) x3) -> (@List.map a0 a1 x0 x3) = (@List.map a0 a1 x1 x3)) -> (@List.Forall a0 (fun y0 : a0 => (x0 y0) = (x1 y0)) (@cons a0 x2 x3)) -> (@List.map a0 a1 x0 (@cons a0 x2 x3)) = (@List.map a0 a1 x1 (@cons a0 x2 x3)).
Definition term212 (a0 : Type') (x0 : type1397 a0) (x1 : a0) (x2 : type1397 a0) (x3 : a0) := (~ (x1 = x3)) \/ ((~ (x0 = x2)) \/ ((@I (a0 -> (list a0) -> list a0) x0 x1) = (@I (a0 -> (list a0) -> list a0) x2 x3))).
Definition term18 (a0 : Type') (a1 : Type') (x0 : a0 -> a1) (x1 : a0 -> a1) (x2 : list a0) := (@List.Forall a0 (fun y0 : a0 => (x0 y0) = (x1 y0)) x2) -> (@List.map a0 a1 x0 x2) = (@List.map a0 a1 x1 x2).
Definition term19 (a0 : Type') (a1 : Type') (x0 : a0 -> a1) (x1 : a0 -> a1) (x2 : list a0) := imp ((fun y0 : list a0 => (@List.Forall a0 (fun y1 : a0 => (x0 y1) = (x1 y1)) y0) -> (@List.map a0 a1 x0 y0) = (@List.map a0 a1 x1 y0)) x2).
Definition term123 (a0 : Type') (a1 : Type') := @eq Prop (forall y0 : list a0, forall y1 : a0 -> a1, forall y2 : a0, forall y3 : a0 -> a1, ((@List.Forall a0 (fun y4 : a0 => (y3 y4) = (y1 y4)) y0) -> (@List.map a0 a1 y3 y0) = (@List.map a0 a1 y1 y0)) -> (((y3 y2) = (y1 y2)) /\ (@List.Forall a0 (fun y4 : a0 => (y3 y4) = (y1 y4)) y0)) -> (@cons a1 (y3 y2) (@List.map a0 a1 y3 y0)) = (@cons a1 (y1 y2) (@List.map a0 a1 y1 y0))).
Definition term230 (x0 : Prop) (x1 : Prop) := (~ x0) -> x1.
Definition term126 (a0 : Type') (a1 : Type') := fun y0 : type516 a0 a1 => (y0 = (fun y1 : a0 -> a1 => fun y2 : a0 -> a1 => fun y3 : a0 => (y1 y3) = (y2 y3))) -> (forall y1 : list a0, forall y2 : a0 -> a1, forall y3 : a0, forall y4 : a0 -> a1, ((@List.Forall a0 (fun y5 : a0 => (y4 y5) = (y2 y5)) y1) -> (@List.map a0 a1 y4 y1) = (@List.map a0 a1 y2 y1)) -> (((y4 y3) = (y2 y3)) /\ (@List.Forall a0 (fun y5 : a0 => (y4 y5) = (y2 y5)) y1)) -> (@cons a1 (y4 y3) (@List.map a0 a1 y4 y1)) = (@cons a1 (y2 y3) (@List.map a0 a1 y2 y1))) = ((fun y1 : type516 a0 a1 => forall y2 : list a0, forall y3 : a0 -> a1, forall y4 : a0, forall y5 : a0 -> a1, ((@List.Forall a0 (y1 y5 y3) y2) -> (@List.map a0 a1 y5 y2) = (@List.map a0 a1 y3 y2)) -> (((y5 y4) = (y3 y4)) /\ (@List.Forall a0 (y1 y5 y3) y2)) -> (@cons a1 (y5 y4) (@List.map a0 a1 y5 y2)) = (@cons a1 (y3 y4) (@List.map a0 a1 y3 y2))) y0).
Definition term127 (a0 : Type') (a1 : Type') := fun y0 : type516 a0 a1 => (y0 = (fun y1 : a0 -> a1 => fun y2 : a0 -> a1 => fun y3 : a0 => (y1 y3) = (y2 y3))) -> (forall y1 : list a0, forall y2 : a0 -> a1, forall y3 : a0, forall y4 : a0 -> a1, ((@List.Forall a0 (fun y5 : a0 => (y4 y5) = (y2 y5)) y1) -> (@List.map a0 a1 y4 y1) = (@List.map a0 a1 y2 y1)) -> (((y4 y3) = (y2 y3)) /\ (@List.Forall a0 (fun y5 : a0 => (y4 y5) = (y2 y5)) y1)) -> (@cons a1 (y4 y3) (@List.map a0 a1 y4 y1)) = (@cons a1 (y2 y3) (@List.map a0 a1 y2 y1))) = (forall y1 : list a0, forall y2 : a0 -> a1, forall y3 : a0, forall y4 : a0 -> a1, ((@List.Forall a0 (y0 y4 y2) y1) -> (@List.map a0 a1 y4 y1) = (@List.map a0 a1 y2 y1)) -> (((y4 y3) = (y2 y3)) /\ (@List.Forall a0 (y0 y4 y2) y1)) -> (@cons a1 (y4 y3) (@List.map a0 a1 y4 y1)) = (@cons a1 (y2 y3) (@List.map a0 a1 y2 y1))).
Definition term171 (a0 : Type') (a1 : Type') (x0 : type516 a0 a1) := imp (forall y0 : a0 -> a1, forall y1 : a0 -> a1, forall y2 : a0, (x0 y0 y1 y2) = ((y0 y2) = (y1 y2))).
Definition term37 (a0 : Type') (a1 : Type') (x0 : a0 -> a1) (x1 : a0 -> a1) := fun y0 : list a0 => (fun y1 : list a0 => (@List.Forall a0 (fun y2 : a0 => (x0 y2) = (x1 y2)) y1) -> (@List.map a0 a1 x0 y1) = (@List.map a0 a1 x1 y1)) y0.
Definition term163 (a0 : Type') (a1 : Type') (x0 : type516 a0 a1) (x1 : a0 -> a1) (x2 : a0 -> a1) (x3 : a0) := @eq Prop (x0 x1 x2 x3).
Definition term3 (a0 : Type') (a1 : Type') (x0 : a0 -> a1) (x1 : a0) := (fun y0 : a0 => forall y1 : list a0, (@List.map a0 a1 x0 (@cons a0 y0 y1)) = (@cons a1 (x0 y0) (@List.map a0 a1 x0 y1))) x1.
Definition term248 (a0 : Type') (a1 : Type') (x0 : a0 -> a1) (x1 : a0 -> a1) (x2 : a0) := ~ ((@I (a1 -> (list a1) -> list a1) (@cons a1) (@I (a0 -> a1) x0 x2)) = (@I (a1 -> (list a1) -> list a1) (@cons a1) (@I (a0 -> a1) x1 x2))).
Definition term205 (x0 : Prop) := (~ x0) -> x0.
Definition term203 (a0 : Type') (a1 : Type') (x0 : a0 -> a1) (x1 : a0) (x2 : a0 -> a1) (x3 : list a0) := ~ ((@I ((list a1) -> list a1) (@I (a1 -> (list a1) -> list a1) (@cons a1) (@I (a0 -> a1) x0 x1)) (@I ((list a0) -> list a1) (@I ((a0 -> a1) -> (list a0) -> list a1) (@List.map a0 a1) x0) x3)) = (@I ((list a1) -> list a1) (@I (a1 -> (list a1) -> list a1) (@cons a1) (@I (a0 -> a1) x2 x1)) (@I ((list a0) -> list a1) (@I ((a0 -> a1) -> (list a0) -> list a1) (@List.map a0 a1) x2) x3))).
Definition term269 (a0 : Type') (x0 : type1138 a0) (x1 : type1138 a0) (x2 : list a0) (x3 : list a0) := imp ((x0 = x1) /\ (x2 = x3)).
Definition term265 (a0 : Type') (x0 : type1138 a0) (x1 : type1138 a0) := and (x0 = x1).
Definition term114 (a0 : Type') (a1 : Type') (x0 : type516 a0 a1) := fun y0 : list a0 => forall y1 : a0 -> a1, forall y2 : a0, forall y3 : a0 -> a1, ((@List.Forall a0 (x0 y3 y1) y0) -> (@List.map a0 a1 y3 y0) = (@List.map a0 a1 y1 y0)) -> (((y3 y2) = (y1 y2)) /\ (@List.Forall a0 (x0 y3 y1) y0)) -> (@cons a1 (y3 y2) (@List.map a0 a1 y3 y0)) = (@cons a1 (y1 y2) (@List.map a0 a1 y1 y0)).
Definition term88 (a0 : Type') (a1 : Type') := fun y0 : list a0 => forall y1 : a0 -> a1, forall y2 : a0, forall y3 : a0 -> a1, ((@List.Forall a0 (fun y4 : a0 => (y3 y4) = (y1 y4)) y0) -> (@List.map a0 a1 y3 y0) = (@List.map a0 a1 y1 y0)) -> (((y3 y2) = (y1 y2)) /\ (@List.Forall a0 (fun y4 : a0 => (y3 y4) = (y1 y4)) y0)) -> (@cons a1 (y3 y2) (@List.map a0 a1 y3 y0)) = (@cons a1 (y1 y2) (@List.map a0 a1 y1 y0)).
Definition term87 (a0 : Type') (a1 : Type') := fun y0 : list a0 => forall y1 : a0 -> a1, forall y2 : a0, forall y3 : a0 -> a1, ((@List.Forall a0 (fun y4 : a0 => (y3 y4) = (y1 y4)) y0) -> (@List.map a0 a1 y3 y0) = (@List.map a0 a1 y1 y0)) -> (~ ((((y3 y2) = (y1 y2)) /\ (@List.Forall a0 (fun y4 : a0 => (y3 y4) = (y1 y4)) y0)) -> (@cons a1 (y3 y2) (@List.map a0 a1 y3 y0)) = (@cons a1 (y1 y2) (@List.map a0 a1 y1 y0)))) -> False.
Definition term29 (a0 : Type') (a1 : Type') (x0 : a0 -> a1) (x1 : a0 -> a1) := fun y0 : a0 => forall y1 : list a0, ((fun y2 : list a0 => (@List.Forall a0 (fun y3 : a0 => (x0 y3) = (x1 y3)) y2) -> (@List.map a0 a1 x0 y2) = (@List.map a0 a1 x1 y2)) y1) -> (fun y2 : list a0 => (@List.Forall a0 (fun y3 : a0 => (x0 y3) = (x1 y3)) y2) -> (@List.map a0 a1 x0 y2) = (@List.map a0 a1 x1 y2)) (@cons a0 y0 y1).
Definition term145 (a0 : Type') (a1 : Type') (x0 : type516 a0 a1) := @eq Prop (x0 = (fun y0 : a0 -> a1 => fun y1 : a0 -> a1 => fun y2 : a0 => (y0 y2) = (y1 y2))).
Definition term234 (x0 : Prop) (x1 : Prop) := (~ x0) /\ (~ x1).
Definition term109 (a0 : Type') (a1 : Type') (x0 : type516 a0 a1) (x1 : a0) (x2 : a0 -> a1) (x3 : list a0) := forall y0 : a0 -> a1, ((@List.Forall a0 (x0 y0 x2) x3) -> (@List.map a0 a1 y0 x3) = (@List.map a0 a1 x2 x3)) -> (((y0 x1) = (x2 x1)) /\ (@List.Forall a0 (x0 y0 x2) x3)) -> (@cons a1 (y0 x1) (@List.map a0 a1 y0 x3)) = (@cons a1 (x2 x1) (@List.map a0 a1 x2 x3)).
Definition term78 (a0 : Type') (a1 : Type') (x0 : a0) (x1 : a0 -> a1) (x2 : list a0) := forall y0 : a0 -> a1, ((@List.Forall a0 (fun y1 : a0 => (y0 y1) = (x1 y1)) x2) -> (@List.map a0 a1 y0 x2) = (@List.map a0 a1 x1 x2)) -> (((y0 x0) = (x1 x0)) /\ (@List.Forall a0 (fun y1 : a0 => (y0 y1) = (x1 y1)) x2)) -> (@cons a1 (y0 x0) (@List.map a0 a1 y0 x2)) = (@cons a1 (x1 x0) (@List.map a0 a1 x1 x2)).
Definition term116 (a0 : Type') (a1 : Type') (x0 : type516 a0 a1) := (x0 = (fun y0 : a0 -> a1 => fun y1 : a0 -> a1 => fun y2 : a0 => (y0 y2) = (y1 y2))) -> (forall y0 : list a0, forall y1 : a0 -> a1, forall y2 : a0, forall y3 : a0 -> a1, ((@List.Forall a0 (fun y4 : a0 => (y3 y4) = (y1 y4)) y0) -> (@List.map a0 a1 y3 y0) = (@List.map a0 a1 y1 y0)) -> (((y3 y2) = (y1 y2)) /\ (@List.Forall a0 (fun y4 : a0 => (y3 y4) = (y1 y4)) y0)) -> (@cons a1 (y3 y2) (@List.map a0 a1 y3 y0)) = (@cons a1 (y1 y2) (@List.map a0 a1 y1 y0))) = (forall y0 : list a0, forall y1 : a0 -> a1, forall y2 : a0, forall y3 : a0 -> a1, ((@List.Forall a0 (x0 y3 y1) y0) -> (@List.map a0 a1 y3 y0) = (@List.map a0 a1 y1 y0)) -> (((y3 y2) = (y1 y2)) /\ (@List.Forall a0 (x0 y3 y1) y0)) -> (@cons a1 (y3 y2) (@List.map a0 a1 y3 y0)) = (@cons a1 (y1 y2) (@List.map a0 a1 y1 y0))).
Definition term77 (a0 : Type') (a1 : Type') (x0 : a0) (x1 : a0 -> a1) (x2 : list a0) := forall y0 : a0 -> a1, ((@List.Forall a0 (fun y1 : a0 => (y0 y1) = (x1 y1)) x2) -> (@List.map a0 a1 y0 x2) = (@List.map a0 a1 x1 x2)) -> (~ ((((y0 x0) = (x1 x0)) /\ (@List.Forall a0 (fun y1 : a0 => (y0 y1) = (x1 y1)) x2)) -> (@cons a1 (y0 x0) (@List.map a0 a1 y0 x2)) = (@cons a1 (x1 x0) (@List.map a0 a1 x1 x2)))) -> False.
Definition term46 (a0 : Type') (x0 : a0) (x1 : a0 -> Prop) (x2 : list a0) := (x1 x0) /\ (@List.Forall a0 x1 x2).
Definition term151 (a0 : Type') (a1 : Type') (x0 : a0 -> a1) := fun y0 : a0 -> a1 => (fun y1 : a0 -> a1 => fun y2 : a0 => (x0 y2) = (y1 y2)) y0.
Definition term223 (a0 : Type') (x0 : a0) (x1 : a0) := or (~ (x0 = x1)).
Definition term192 (a0 : Type') (a1 : Type') (x0 : a0 -> a1) (x1 : a0) := @eq a1 (x0 x1).
Definition term79 (a0 : Type') (a1 : Type') (x0 : a0 -> a1) (x1 : list a0) := fun y0 : a0 => forall y1 : a0 -> a1, ((@List.Forall a0 (fun y2 : a0 => (y1 y2) = (x0 y2)) x1) -> (@List.map a0 a1 y1 x1) = (@List.map a0 a1 x0 x1)) -> (~ ((((y1 y0) = (x0 y0)) /\ (@List.Forall a0 (fun y2 : a0 => (y1 y2) = (x0 y2)) x1)) -> (@cons a1 (y1 y0) (@List.map a0 a1 y1 x1)) = (@cons a1 (x0 y0) (@List.map a0 a1 x0 x1)))) -> False.
Definition term44 (a0 : Type') (a1 : Type') (x0 : a0 -> a1) := @eq (list a1) (@List.map a0 a1 x0 (@nil a0)).
Definition term157 (a0 : Type') (a1 : Type') (x0 : type516 a0 a1) (x1 : a0 -> a1) := forall y0 : a0 -> a1, (x0 x1 y0) = (fun y1 : a0 => (x1 y1) = (y0 y1)).
Definition term231 (a0 : Type') (x0 : type1397 a0) (x1 : a0) (x2 : type1397 a0) (x3 : a0) := (~ ((~ (x1 = x3)) \/ (~ (x0 = x2)))) -> (@I (a0 -> (list a0) -> list a0) x0 x1) = (@I (a0 -> (list a0) -> list a0) x2 x3).
Definition term277 (a0 : Type') (a1 : Type') (x0 : a0 -> a1) (x1 : list a0) (x2 : a0) := (fun y0 : a0 => forall y1 : a0 -> a1, ((@List.Forall a0 (fun y2 : a0 => (y1 y2) = (x0 y2)) x1) -> (@List.map a0 a1 y1 x1) = (@List.map a0 a1 x0 x1)) -> (~ ((((y1 y0) = (x0 y0)) /\ (@List.Forall a0 (fun y2 : a0 => (y1 y2) = (x0 y2)) x1)) -> (@cons a1 (y1 y0) (@List.map a0 a1 y1 x1)) = (@cons a1 (x0 y0) (@List.map a0 a1 x0 x1)))) -> False) x2.
Definition term225 (x0 : Prop) (x1 : Prop) (x2 : Prop) := x0 \/ (x1 \/ x2).
Definition term214 (a0 : Type') (x0 : type1138 a0) (x1 : list a0) (x2 : type1138 a0) (x3 : list a0) := (~ (x1 = x3)) \/ ((@I ((list a0) -> list a0) x0 x1) = (@I ((list a0) -> list a0) x2 x3)).
Definition term154 (a0 : Type') (a1 : Type') (x0 : type516 a0 a1) (x1 : a0 -> a1) := @eq Prop ((x0 x1) = (fun y0 : a0 -> a1 => fun y1 : a0 => (x1 y1) = (y0 y1))).
Definition term255 (a0 : Type') (x0 : type1138 a0) (x1 : type1138 a0) (x2 : list a0) (x3 : list a0) := ((@I ((list a0) -> list a0) x0 x2) = (@I ((list a0) -> list a0) x1 x3)) \/ ((~ (x0 = x1)) \/ (~ (x2 = x3))).
Definition term185 (a0 : Type') (a1 : Type') (x0 : type516 a0 a1) (x1 : a0 -> a1) (x2 : a0 -> a1) (x3 : list a0) := @I ((a0 -> Prop) -> (list a0) -> Prop) (@List.Forall a0) (@I ((a0 -> a1) -> a0 -> Prop) (@I ((a0 -> a1) -> (a0 -> a1) -> a0 -> Prop) x0 x1) x2) x3.
Definition term142 (a0 : Type') (a1 : Type') := fun y0 : a0 -> a1 => (fun y1 : a0 -> a1 => fun y2 : a0 -> a1 => fun y3 : a0 => (y1 y3) = (y2 y3)) y0.
Definition term219 (a0 : Type') := (~ ((@cons a0) = (@cons a0))) -> (@cons a0) = (@cons a0).
Definition term105 (a0 : Type') (a1 : Type') (x0 : type516 a0 a1) (x1 : a0 -> a1) (x2 : a0 -> a1) (x3 : list a0) := (@List.Forall a0 (x0 x1 x2) x3) -> (@List.map a0 a1 x1 x3) = (@List.map a0 a1 x2 x3).
Definition term191 (a0 : Type') (a1 : Type') (x0 : type516 a0 a1) (x1 : a0 -> a1) (x2 : a0 -> a1) (x3 : list a0) := (~ (@I ((list a0) -> Prop) (@I ((a0 -> Prop) -> (list a0) -> Prop) (@List.Forall a0) (@I ((a0 -> a1) -> a0 -> Prop) (@I ((a0 -> a1) -> (a0 -> a1) -> a0 -> Prop) x0 x1) x2)) x3)) \/ ((@I ((list a0) -> list a1) (@I ((a0 -> a1) -> (list a0) -> list a1) (@List.map a0 a1) x1) x3) = (@I ((list a0) -> list a1) (@I ((a0 -> a1) -> (list a0) -> list a1) (@List.map a0 a1) x2) x3)).
Definition term131 (a0 : Type') (a1 : Type') (x0 : type516 a0 a1) := (x0 = (fun y0 : a0 -> a1 => fun y1 : a0 -> a1 => fun y2 : a0 => (y0 y2) = (y1 y2))) -> (fun y0 : type516 a0 a1 => forall y1 : list a0, forall y2 : a0 -> a1, forall y3 : a0, forall y4 : a0 -> a1, ((@List.Forall a0 (y0 y4 y2) y1) -> (@List.map a0 a1 y4 y1) = (@List.map a0 a1 y2 y1)) -> (((y4 y3) = (y2 y3)) /\ (@List.Forall a0 (y0 y4 y2) y1)) -> (@cons a1 (y4 y3) (@List.map a0 a1 y4 y1)) = (@cons a1 (y2 y3) (@List.map a0 a1 y2 y1))) x0.
Definition term200 (a0 : Type') (a1 : Type') (x0 : a0) (x1 : a0 -> a1) (x2 : list a0) := @I (a1 -> (list a1) -> list a1) (@cons a1) (@I (a0 -> a1) x1 x0) (@I ((list a0) -> list a1) (@I ((a0 -> a1) -> (list a0) -> list a1) (@List.map a0 a1) x1) x2).
Definition term196 (a0 : Type') (a1 : Type') (x0 : a0 -> a1) (x1 : a0) := @cons a1 (x0 x1).
Definition term52 (a0 : Type') (a1 : Type') (x0 : a0 -> a1) (x1 : a0 -> a1) (x2 : a0) := (fun y0 : a0 => (x0 y0) = (x1 y0)) x2.
Definition term108 (a0 : Type') (a1 : Type') (x0 : type516 a0 a1) (x1 : a0) (x2 : a0 -> a1) (x3 : list a0) := fun y0 : a0 -> a1 => ((@List.Forall a0 (x0 y0 x2) x3) -> (@List.map a0 a1 y0 x3) = (@List.map a0 a1 x2 x3)) -> (((y0 x1) = (x2 x1)) /\ (@List.Forall a0 (x0 y0 x2) x3)) -> (@cons a1 (y0 x1) (@List.map a0 a1 y0 x3)) = (@cons a1 (x2 x1) (@List.map a0 a1 x2 x3)).
Definition term76 (a0 : Type') (a1 : Type') (x0 : a0) (x1 : a0 -> a1) (x2 : list a0) := fun y0 : a0 -> a1 => ((@List.Forall a0 (fun y1 : a0 => (y0 y1) = (x1 y1)) x2) -> (@List.map a0 a1 y0 x2) = (@List.map a0 a1 x1 x2)) -> (((y0 x0) = (x1 x0)) /\ (@List.Forall a0 (fun y1 : a0 => (y0 y1) = (x1 y1)) x2)) -> (@cons a1 (y0 x0) (@List.map a0 a1 y0 x2)) = (@cons a1 (x1 x0) (@List.map a0 a1 x1 x2)).
Definition term146 (a0 : Type') (a1 : Type') (x0 : type516 a0 a1) := fun y0 : a0 -> a1 => (x0 y0) = ((fun y1 : a0 -> a1 => fun y2 : a0 -> a1 => fun y3 : a0 => (y1 y3) = (y2 y3)) y0).
Definition term118 (a0 : Type') (x0 : Prop) (x1 : a0) (x2 : a0 -> Prop) := (forall y0 : a0, (y0 = x1) -> x0 = (x2 y0)) -> x0 = (forall y0 : a0, (y0 = x1) -> x2 y0).
Definition term274 (a0 : Type') (a1 : Type') (x0 : a0 -> a1) (x1 : a0) (x2 : a0 -> a1) (x3 : list a0) := ((@I ((list a1) -> list a1) (@I (a1 -> (list a1) -> list a1) (@cons a1) (@I (a0 -> a1) x0 x1)) (@I ((list a0) -> list a1) (@I ((a0 -> a1) -> (list a0) -> list a1) (@List.map a0 a1) x0) x3)) = (@I ((list a1) -> list a1) (@I (a1 -> (list a1) -> list a1) (@cons a1) (@I (a0 -> a1) x2 x1)) (@I ((list a0) -> list a1) (@I ((a0 -> a1) -> (list a0) -> list a1) (@List.map a0 a1) x2) x3))) -> False.
Definition term138 (a0 : Type') (a1 : Type') (x0 : a1 -> a0) := fun y0 : a1 => x0 y0.
Definition term92 (a0 : Type') (a1 : Type') (x0 : a0 -> a1) := (fun y0 : a0 -> a1 => fun y1 : a0 -> a1 => fun y2 : a0 => (y0 y2) = (y1 y2)) x0.
Definition term149 (a0 : Type') (a1 : Type') (x0 : type551 a0 a1) := fun y0 : a0 -> a1 => x0 y0.
Definition term140 (a0 : Type') (a1 : Type') (x0 : type516 a0 a1) := fun y0 : a0 -> a1 => x0 y0.
Definition term198 (a0 : Type') (a1 : Type') (x0 : a0) (x1 : a0 -> a1) (x2 : list a0) := @cons a1 (@I (a0 -> a1) x1 x0) (@I ((list a0) -> list a1) (@I ((a0 -> a1) -> (list a0) -> list a1) (@List.map a0 a1) x1) x2).
Definition term144 (a0 : Type') (a1 : Type') (x0 : type516 a0 a1) := @eq Prop (x0 = (fun y0 : a0 -> a1 => (fun y1 : a0 -> a1 => fun y2 : a0 -> a1 => fun y3 : a0 => (y1 y3) = (y2 y3)) y0)).
Definition term147 (a0 : Type') (a1 : Type') (x0 : type516 a0 a1) := fun y0 : a0 -> a1 => (x0 y0) = (fun y1 : a0 -> a1 => fun y2 : a0 => (y0 y2) = (y1 y2)).
Definition term244 (a0 : Type') (x0 : type1397 a0) (x1 : a0) (x2 : type1397 a0) (x3 : a0) := ((x1 = x3) /\ (x0 = x2)) -> (@I (a0 -> (list a0) -> list a0) x0 x1) = (@I (a0 -> (list a0) -> list a0) x2 x3).
Definition term20 (a0 : Type') (a1 : Type') (x0 : a0 -> a1) (x1 : a0 -> a1) (x2 : list a0) := imp ((@List.Forall a0 (fun y0 : a0 => (x0 y0) = (x1 y0)) x2) -> (@List.map a0 a1 x0 x2) = (@List.map a0 a1 x1 x2)).
Definition term49 (a0 : Type') (a1 : Type') (x0 : a0 -> a1) (x1 : a0) := (fun y0 : a0 => x0 y0) x1.
Definition term9 (a0 : Type') (a1 : Type') (x0 : a0 -> a1) := (fun y0 : a0 -> a1 => (@List.map a0 a1 y0 (@nil a0)) = (@nil a1)) x0.
Definition term27 (a0 : Type') (a1 : Type') (x0 : a0 -> a1) (x1 : a0 -> a1) (x2 : a0) := forall y0 : list a0, ((fun y1 : list a0 => (@List.Forall a0 (fun y2 : a0 => (x0 y2) = (x1 y2)) y1) -> (@List.map a0 a1 x0 y1) = (@List.map a0 a1 x1 y1)) y0) -> (fun y1 : list a0 => (@List.Forall a0 (fun y2 : a0 => (x0 y2) = (x1 y2)) y1) -> (@List.map a0 a1 x0 y1) = (@List.map a0 a1 x1 y1)) (@cons a0 x2 y0).
Definition term13 (a0 : Type') (a1 : Type') (x0 : a0 -> a1) (x1 : a0 -> a1) := (fun y0 : list a0 => (@List.Forall a0 (fun y1 : a0 => (x0 y1) = (x1 y1)) y0) -> (@List.map a0 a1 x0 y0) = (@List.map a0 a1 x1 y0)) (@nil a0).
Definition term233 (x0 : Prop) (x1 : Prop) := ~ (x0 \/ x1).
Definition term208 (a0 : Type') (x0 : type1397 a0) (x1 : a0) (x2 : type1397 a0) (x3 : a0) := (x0 = x2) -> (@I (a0 -> (list a0) -> list a0) x0 x1) = (@I (a0 -> (list a0) -> list a0) x2 x3).
Definition term204 (a0 : Type') (a1 : Type') (x0 : type516 a0 a1) (x1 : a0 -> a1) (x2 : a0 -> a1) (x3 : list a0) := (~ (@I ((list a0) -> Prop) (@I ((a0 -> Prop) -> (list a0) -> Prop) (@List.Forall a0) (@I ((a0 -> a1) -> a0 -> Prop) (@I ((a0 -> a1) -> (a0 -> a1) -> a0 -> Prop) x0 x1) x2)) x3)) -> @I ((list a0) -> Prop) (@I ((a0 -> Prop) -> (list a0) -> Prop) (@List.Forall a0) (@I ((a0 -> a1) -> a0 -> Prop) (@I ((a0 -> a1) -> (a0 -> a1) -> a0 -> Prop) x0 x1) x2)) x3.
Definition term39 (a0 : Type') (a1 : Type') (x0 : a0 -> a1) (x1 : a0 -> a1) := forall y0 : list a0, (@List.Forall a0 (fun y1 : a0 => (x0 y1) = (x1 y1)) y0) -> (@List.map a0 a1 x0 y0) = (@List.map a0 a1 x1 y0).
Definition term50 (a0 : Type') (x0 : a0 -> Prop) (x1 : a0) := (fun y0 : a0 => x0 y0) x1.
Definition term61 (a0 : Type') (a1 : Type') (x0 : a0) (x1 : a0 -> a1) (x2 : a0 -> a1) (x3 : list a0) := imp (((x1 x0) = (x2 x0)) /\ (@List.Forall a0 (fun y0 : a0 => (x1 y0) = (x2 y0)) x3)).
Definition term271 (a0 : Type') (a1 : Type') (x0 : a0) (x1 : a0 -> a1) (x2 : a0 -> a1) (x3 : list a0) := ((@I (a1 -> (list a1) -> list a1) (@cons a1) (@I (a0 -> a1) x1 x0)) = (@I (a1 -> (list a1) -> list a1) (@cons a1) (@I (a0 -> a1) x2 x0))) /\ ((@I ((list a0) -> list a1) (@I ((a0 -> a1) -> (list a0) -> list a1) (@List.map a0 a1) x1) x3) = (@I ((list a0) -> list a1) (@I ((a0 -> a1) -> (list a0) -> list a1) (@List.map a0 a1) x2) x3)).
Definition term215 (a0 : Type') (x0 : type1138 a0) (x1 : list a0) (x2 : type1138 a0) (x3 : list a0) := (x0 = x2) -> (~ (x1 = x3)) \/ ((@I ((list a0) -> list a0) x0 x1) = (@I ((list a0) -> list a0) x2 x3)).
Definition term58 (a0 : Type') (a1 : Type') (x0 : a0 -> a1) (x1 : a0 -> a1) (x2 : list a0) := @List.Forall a0 (fun y0 : a0 => (x0 y0) = (x1 y0)) x2.
Definition term257 (a0 : Type') (x0 : type1138 a0) (x1 : list a0) (x2 : type1138 a0) (x3 : list a0) := @eq Prop ((~ (x0 = x2)) \/ ((~ (x1 = x3)) \/ ((@I ((list a0) -> list a0) x0 x1) = (@I ((list a0) -> list a0) x2 x3)))).
Definition term228 (a0 : Type') (x0 : type1397 a0) (x1 : a0) (x2 : type1397 a0) (x3 : a0) := @eq Prop ((~ (x1 = x3)) \/ ((~ (x0 = x2)) \/ ((@I (a0 -> (list a0) -> list a0) x0 x1) = (@I (a0 -> (list a0) -> list a0) x2 x3)))).
Definition term57 (a0 : Type') (a1 : Type') (x0 : a0 -> a1) (x1 : a0 -> a1) (x2 : a0) := and ((x0 x2) = (x1 x2)).
Definition term16 (a0 : Type') (a1 : Type') (x0 : a0 -> a1) (x1 : a0 -> a1) := and ((@List.Forall a0 (fun y0 : a0 => (x0 y0) = (x1 y0)) (@nil a0)) -> (@List.map a0 a1 x0 (@nil a0)) = (@List.map a0 a1 x1 (@nil a0))).
Definition term15 (a0 : Type') (a1 : Type') (x0 : a0 -> a1) (x1 : a0 -> a1) := and ((fun y0 : list a0 => (@List.Forall a0 (fun y1 : a0 => (x0 y1) = (x1 y1)) y0) -> (@List.map a0 a1 x0 y0) = (@List.map a0 a1 x1 y0)) (@nil a0)).
Definition term7 (a0 : Type') (a1 : Type') (x0 : a0) (x1 : a0 -> a1) (x2 : list a0) := @cons a1 (x1 x0) (@List.map a0 a1 x1 x2).
Definition term148 (a0 : Type') (a1 : Type') (x0 : type516 a0 a1) := forall y0 : a0 -> a1, (x0 y0) = (fun y1 : a0 -> a1 => fun y2 : a0 => (y0 y2) = (y1 y2)).
Definition term91 (a0 : Type') (a1 : Type') := fun y0 : a0 -> a1 => fun y1 : a0 -> a1 => fun y2 : a0 => (y0 y2) = (y1 y2).
Definition term28 (a0 : Type') (a1 : Type') (x0 : a0 -> a1) (x1 : a0 -> a1) (x2 : a0) := forall y0 : list a0, ((@List.Forall a0 (fun y1 : a0 => (x0 y1) = (x1 y1)) y0) -> (@List.map a0 a1 x0 y0) = (@List.map a0 a1 x1 y0)) -> (@List.Forall a0 (fun y1 : a0 => (x0 y1) = (x1 y1)) (@cons a0 x2 y0)) -> (@List.map a0 a1 x0 (@cons a0 x2 y0)) = (@List.map a0 a1 x1 (@cons a0 x2 y0)).
Definition term130 (a0 : Type') (a1 : Type') := imp (forall y0 : type516 a0 a1, (y0 = (fun y1 : a0 -> a1 => fun y2 : a0 -> a1 => fun y3 : a0 => (y1 y3) = (y2 y3))) -> (forall y1 : list a0, forall y2 : a0 -> a1, forall y3 : a0, forall y4 : a0 -> a1, ((@List.Forall a0 (fun y5 : a0 => (y4 y5) = (y2 y5)) y1) -> (@List.map a0 a1 y4 y1) = (@List.map a0 a1 y2 y1)) -> (((y4 y3) = (y2 y3)) /\ (@List.Forall a0 (fun y5 : a0 => (y4 y5) = (y2 y5)) y1)) -> (@cons a1 (y4 y3) (@List.map a0 a1 y4 y1)) = (@cons a1 (y2 y3) (@List.map a0 a1 y2 y1))) = (forall y1 : list a0, forall y2 : a0 -> a1, forall y3 : a0, forall y4 : a0 -> a1, ((@List.Forall a0 (y0 y4 y2) y1) -> (@List.map a0 a1 y4 y1) = (@List.map a0 a1 y2 y1)) -> (((y4 y3) = (y2 y3)) /\ (@List.Forall a0 (y0 y4 y2) y1)) -> (@cons a1 (y4 y3) (@List.map a0 a1 y4 y1)) = (@cons a1 (y2 y3) (@List.map a0 a1 y2 y1)))).
Definition term129 (a0 : Type') (a1 : Type') := imp (forall y0 : type516 a0 a1, (y0 = (fun y1 : a0 -> a1 => fun y2 : a0 -> a1 => fun y3 : a0 => (y1 y3) = (y2 y3))) -> (forall y1 : list a0, forall y2 : a0 -> a1, forall y3 : a0, forall y4 : a0 -> a1, ((@List.Forall a0 (fun y5 : a0 => (y4 y5) = (y2 y5)) y1) -> (@List.map a0 a1 y4 y1) = (@List.map a0 a1 y2 y1)) -> (((y4 y3) = (y2 y3)) /\ (@List.Forall a0 (fun y5 : a0 => (y4 y5) = (y2 y5)) y1)) -> (@cons a1 (y4 y3) (@List.map a0 a1 y4 y1)) = (@cons a1 (y2 y3) (@List.map a0 a1 y2 y1))) = ((fun y1 : type516 a0 a1 => forall y2 : list a0, forall y3 : a0 -> a1, forall y4 : a0, forall y5 : a0 -> a1, ((@List.Forall a0 (y1 y5 y3) y2) -> (@List.map a0 a1 y5 y2) = (@List.map a0 a1 y3 y2)) -> (((y5 y4) = (y3 y4)) /\ (@List.Forall a0 (y1 y5 y3) y2)) -> (@cons a1 (y5 y4) (@List.map a0 a1 y5 y2)) = (@cons a1 (y3 y4) (@List.map a0 a1 y3 y2))) y0)).
Definition term193 (a0 : Type') (a1 : Type') (x0 : a0 -> a1) (x1 : a0) := @eq a1 (@I (a0 -> a1) x0 x1).
Definition term139 (a0 : Type') (a1 : Type') (x0 : a1 -> a0) (x1 : a1 -> a0) := forall y0 : a1, (x0 y0) = (x1 y0).
Definition term213 (a0 : Type') (x0 : type1138 a0) (x1 : list a0) (x2 : type1138 a0) (x3 : list a0) := (x1 = x3) -> (@I ((list a0) -> list a0) x0 x1) = (@I ((list a0) -> list a0) x2 x3).
Definition term270 (a0 : Type') (x0 : type1138 a0) (x1 : list a0) (x2 : type1138 a0) (x3 : list a0) := ((x0 = x2) /\ (x1 = x3)) -> (@I ((list a0) -> list a0) x0 x1) = (@I ((list a0) -> list a0) x2 x3).
Definition term119 (a0 : Type') (a1 : Type') (x0 : Prop) (x1 : type516 a0 a1) (x2 : type95 a0 a1) := (forall y0 : type516 a0 a1, (y0 = x1) -> x0 = (x2 y0)) -> x0 = (forall y0 : type516 a0 a1, (y0 = x1) -> x2 y0).
Definition term137 (a0 : Type') (a1 : Type') := (forall y0 : type516 a0 a1, (y0 = (fun y1 : a0 -> a1 => fun y2 : a0 -> a1 => fun y3 : a0 => (y1 y3) = (y2 y3))) -> (forall y1 : list a0, forall y2 : a0 -> a1, forall y3 : a0, forall y4 : a0 -> a1, ((@List.Forall a0 (fun y5 : a0 => (y4 y5) = (y2 y5)) y1) -> (@List.map a0 a1 y4 y1) = (@List.map a0 a1 y2 y1)) -> (((y4 y3) = (y2 y3)) /\ (@List.Forall a0 (fun y5 : a0 => (y4 y5) = (y2 y5)) y1)) -> (@cons a1 (y4 y3) (@List.map a0 a1 y4 y1)) = (@cons a1 (y2 y3) (@List.map a0 a1 y2 y1))) = (forall y1 : list a0, forall y2 : a0 -> a1, forall y3 : a0, forall y4 : a0 -> a1, ((@List.Forall a0 (y0 y4 y2) y1) -> (@List.map a0 a1 y4 y1) = (@List.map a0 a1 y2 y1)) -> (((y4 y3) = (y2 y3)) /\ (@List.Forall a0 (y0 y4 y2) y1)) -> (@cons a1 (y4 y3) (@List.map a0 a1 y4 y1)) = (@cons a1 (y2 y3) (@List.map a0 a1 y2 y1)))) -> (forall y0 : list a0, forall y1 : a0 -> a1, forall y2 : a0, forall y3 : a0 -> a1, ((@List.Forall a0 (fun y4 : a0 => (y3 y4) = (y1 y4)) y0) -> (@List.map a0 a1 y3 y0) = (@List.map a0 a1 y1 y0)) -> (((y3 y2) = (y1 y2)) /\ (@List.Forall a0 (fun y4 : a0 => (y3 y4) = (y1 y4)) y0)) -> (@cons a1 (y3 y2) (@List.map a0 a1 y3 y0)) = (@cons a1 (y1 y2) (@List.map a0 a1 y1 y0))) = (forall y0 : type516 a0 a1, (y0 = (fun y1 : a0 -> a1 => fun y2 : a0 -> a1 => fun y3 : a0 => (y1 y3) = (y2 y3))) -> forall y1 : list a0, forall y2 : a0 -> a1, forall y3 : a0, forall y4 : a0 -> a1, ((@List.Forall a0 (y0 y4 y2) y1) -> (@List.map a0 a1 y4 y1) = (@List.map a0 a1 y2 y1)) -> (((y4 y3) = (y2 y3)) /\ (@List.Forall a0 (y0 y4 y2) y1)) -> (@cons a1 (y4 y3) (@List.map a0 a1 y4 y1)) = (@cons a1 (y2 y3) (@List.map a0 a1 y2 y1))).
Definition term120 (a0 : Type') (a1 : Type') := (forall y0 : type516 a0 a1, (y0 = (fun y1 : a0 -> a1 => fun y2 : a0 -> a1 => fun y3 : a0 => (y1 y3) = (y2 y3))) -> (forall y1 : list a0, forall y2 : a0 -> a1, forall y3 : a0, forall y4 : a0 -> a1, ((@List.Forall a0 (fun y5 : a0 => (y4 y5) = (y2 y5)) y1) -> (@List.map a0 a1 y4 y1) = (@List.map a0 a1 y2 y1)) -> (((y4 y3) = (y2 y3)) /\ (@List.Forall a0 (fun y5 : a0 => (y4 y5) = (y2 y5)) y1)) -> (@cons a1 (y4 y3) (@List.map a0 a1 y4 y1)) = (@cons a1 (y2 y3) (@List.map a0 a1 y2 y1))) = ((fun y1 : type516 a0 a1 => forall y2 : list a0, forall y3 : a0 -> a1, forall y4 : a0, forall y5 : a0 -> a1, ((@List.Forall a0 (y1 y5 y3) y2) -> (@List.map a0 a1 y5 y2) = (@List.map a0 a1 y3 y2)) -> (((y5 y4) = (y3 y4)) /\ (@List.Forall a0 (y1 y5 y3) y2)) -> (@cons a1 (y5 y4) (@List.map a0 a1 y5 y2)) = (@cons a1 (y3 y4) (@List.map a0 a1 y3 y2))) y0)) -> (forall y0 : list a0, forall y1 : a0 -> a1, forall y2 : a0, forall y3 : a0 -> a1, ((@List.Forall a0 (fun y4 : a0 => (y3 y4) = (y1 y4)) y0) -> (@List.map a0 a1 y3 y0) = (@List.map a0 a1 y1 y0)) -> (((y3 y2) = (y1 y2)) /\ (@List.Forall a0 (fun y4 : a0 => (y3 y4) = (y1 y4)) y0)) -> (@cons a1 (y3 y2) (@List.map a0 a1 y3 y0)) = (@cons a1 (y1 y2) (@List.map a0 a1 y1 y0))) = (forall y0 : type516 a0 a1, (y0 = (fun y1 : a0 -> a1 => fun y2 : a0 -> a1 => fun y3 : a0 => (y1 y3) = (y2 y3))) -> (fun y1 : type516 a0 a1 => forall y2 : list a0, forall y3 : a0 -> a1, forall y4 : a0, forall y5 : a0 -> a1, ((@List.Forall a0 (y1 y5 y3) y2) -> (@List.map a0 a1 y5 y2) = (@List.map a0 a1 y3 y2)) -> (((y5 y4) = (y3 y4)) /\ (@List.Forall a0 (y1 y5 y3) y2)) -> (@cons a1 (y5 y4) (@List.map a0 a1 y5 y2)) = (@cons a1 (y3 y4) (@List.map a0 a1 y3 y2))) y0).
Definition term117 (a0 : Type') (a1 : Type') := forall y0 : type516 a0 a1, (y0 = (fun y1 : a0 -> a1 => fun y2 : a0 -> a1 => fun y3 : a0 => (y1 y3) = (y2 y3))) -> (forall y1 : list a0, forall y2 : a0 -> a1, forall y3 : a0, forall y4 : a0 -> a1, ((@List.Forall a0 (fun y5 : a0 => (y4 y5) = (y2 y5)) y1) -> (@List.map a0 a1 y4 y1) = (@List.map a0 a1 y2 y1)) -> (((y4 y3) = (y2 y3)) /\ (@List.Forall a0 (fun y5 : a0 => (y4 y5) = (y2 y5)) y1)) -> (@cons a1 (y4 y3) (@List.map a0 a1 y4 y1)) = (@cons a1 (y2 y3) (@List.map a0 a1 y2 y1))) = (forall y1 : list a0, forall y2 : a0 -> a1, forall y3 : a0, forall y4 : a0 -> a1, ((@List.Forall a0 (y0 y4 y2) y1) -> (@List.map a0 a1 y4 y1) = (@List.map a0 a1 y2 y1)) -> (((y4 y3) = (y2 y3)) /\ (@List.Forall a0 (y0 y4 y2) y1)) -> (@cons a1 (y4 y3) (@List.map a0 a1 y4 y1)) = (@cons a1 (y2 y3) (@List.map a0 a1 y2 y1))).
Definition term17 (a0 : Type') (a1 : Type') (x0 : a0 -> a1) (x1 : a0 -> a1) (x2 : list a0) := (fun y0 : list a0 => (@List.Forall a0 (fun y1 : a0 => (x0 y1) = (x1 y1)) y0) -> (@List.map a0 a1 x0 y0) = (@List.map a0 a1 x1 y0)) x2.
Definition term14 (a0 : Type') (a1 : Type') (x0 : a0 -> a1) (x1 : a0 -> a1) := (@List.Forall a0 (fun y0 : a0 => (x0 y0) = (x1 y0)) (@nil a0)) -> (@List.map a0 a1 x0 (@nil a0)) = (@List.map a0 a1 x1 (@nil a0)).
Definition term110 (a0 : Type') (a1 : Type') (x0 : type516 a0 a1) (x1 : a0 -> a1) (x2 : list a0) := fun y0 : a0 => forall y1 : a0 -> a1, ((@List.Forall a0 (x0 y1 x1) x2) -> (@List.map a0 a1 y1 x2) = (@List.map a0 a1 x1 x2)) -> (((y1 y0) = (x1 y0)) /\ (@List.Forall a0 (x0 y1 x1) x2)) -> (@cons a1 (y1 y0) (@List.map a0 a1 y1 x2)) = (@cons a1 (x1 y0) (@List.map a0 a1 x1 x2)).
Definition term80 (a0 : Type') (a1 : Type') (x0 : a0 -> a1) (x1 : list a0) := fun y0 : a0 => forall y1 : a0 -> a1, ((@List.Forall a0 (fun y2 : a0 => (y1 y2) = (x0 y2)) x1) -> (@List.map a0 a1 y1 x1) = (@List.map a0 a1 x0 x1)) -> (((y1 y0) = (x0 y0)) /\ (@List.Forall a0 (fun y2 : a0 => (y1 y2) = (x0 y2)) x1)) -> (@cons a1 (y1 y0) (@List.map a0 a1 y1 x1)) = (@cons a1 (x0 y0) (@List.map a0 a1 x0 x1)).
Definition term54 (a0 : Type') (a1 : Type') (x0 : a0 -> a1) (x1 : a0 -> a1) (x2 : a0) := @eq Prop ((fun y0 : a0 => (fun y1 : a0 => (x0 y1) = (x1 y1)) y0) x2).
Definition term68 (a0 : Type') (a1 : Type') (x0 : a0 -> a1) (x1 : a0) (x2 : a0 -> a1) (x3 : list a0) := ((@List.Forall a0 (fun y0 : a0 => (x0 y0) = (x2 y0)) x3) -> (@List.map a0 a1 x0 x3) = (@List.map a0 a1 x2 x3)) -> (~ ((((x0 x1) = (x2 x1)) /\ (@List.Forall a0 (fun y0 : a0 => (x0 y0) = (x2 y0)) x3)) -> (@cons a1 (x0 x1) (@List.map a0 a1 x0 x3)) = (@cons a1 (x2 x1) (@List.map a0 a1 x2 x3)))) -> False.
Definition term273 (a0 : Type') (a1 : Type') (x0 : a0 -> a1) (x1 : a0) (x2 : a0 -> a1) (x3 : list a0) := (~ ((@I ((list a1) -> list a1) (@I (a1 -> (list a1) -> list a1) (@cons a1) (@I (a0 -> a1) x0 x1)) (@I ((list a0) -> list a1) (@I ((a0 -> a1) -> (list a0) -> list a1) (@List.map a0 a1) x0) x3)) = (@I ((list a1) -> list a1) (@I (a1 -> (list a1) -> list a1) (@cons a1) (@I (a0 -> a1) x2 x1)) (@I ((list a0) -> list a1) (@I ((a0 -> a1) -> (list a0) -> list a1) (@List.map a0 a1) x2) x3)))) -> (@I ((list a1) -> list a1) (@I (a1 -> (list a1) -> list a1) (@cons a1) (@I (a0 -> a1) x0 x1)) (@I ((list a0) -> list a1) (@I ((a0 -> a1) -> (list a0) -> list a1) (@List.map a0 a1) x0) x3)) = (@I ((list a1) -> list a1) (@I (a1 -> (list a1) -> list a1) (@cons a1) (@I (a0 -> a1) x2 x1)) (@I ((list a0) -> list a1) (@I ((a0 -> a1) -> (list a0) -> list a1) (@List.map a0 a1) x2) x3)).
Definition term22 (a0 : Type') (a1 : Type') (x0 : a0 -> a1) (x1 : a0 -> a1) (x2 : a0) (x3 : list a0) := (@List.Forall a0 (fun y0 : a0 => (x0 y0) = (x1 y0)) (@cons a0 x2 x3)) -> (@List.map a0 a1 x0 (@cons a0 x2 x3)) = (@List.map a0 a1 x1 (@cons a0 x2 x3)).
Definition term210 (a0 : Type') (x0 : type1397 a0) (x1 : a0) (x2 : type1397 a0) (x3 : a0) := (~ (x0 = x2)) \/ ((@I (a0 -> (list a0) -> list a0) x0 x1) = (@I (a0 -> (list a0) -> list a0) x2 x3)).
Definition term153 (a0 : Type') (a1 : Type') (x0 : type516 a0 a1) (x1 : a0 -> a1) := @eq Prop ((x0 x1) = (fun y0 : a0 -> a1 => (fun y1 : a0 -> a1 => fun y2 : a0 => (x1 y2) = (y1 y2)) y0)).
Definition term251 (a0 : Type') (x0 : type1138 a0) (x1 : type1138 a0) (x2 : list a0) (x3 : list a0) := ((@I ((list a0) -> list a0) x0 x2) = (@I ((list a0) -> list a0) x1 x3)) \/ (~ (x2 = x3)).
Definition term59 (a0 : Type') (a1 : Type') (x0 : a0) (x1 : a0 -> a1) (x2 : a0 -> a1) (x3 : list a0) := ((x1 x0) = (x2 x0)) /\ (@List.Forall a0 (fun y0 : a0 => (x1 y0) = (x2 y0)) x3).
Definition term239 (a0 : Type') (x0 : a0) (x1 : a0) := and (x0 = x1).
Definition term232 (a0 : Type') (x0 : a0) (x1 : a0) (x2 : type1397 a0) (x3 : type1397 a0) := (~ (x0 = x1)) \/ (~ (x2 = x3)).
Definition term143 (a0 : Type') (a1 : Type') (x0 : type516 a0 a1) := forall y0 : a0 -> a1, (x0 y0) = ((fun y1 : a0 -> a1 => fun y2 : a0 -> a1 => fun y3 : a0 => (y1 y3) = (y2 y3)) y0).
Definition term194 (a0 : Type') (a1 : Type') (x0 : a0 -> a1) (x1 : a0 -> a1) (x2 : a0) := and ((@I (a0 -> a1) x0 x2) = (@I (a0 -> a1) x1 x2)).
Definition term278 (a0 : Type') (a1 : Type') (x0 : a0) (x1 : a0 -> a1) (x2 : list a0) (x3 : a0 -> a1) := (fun y0 : a0 -> a1 => ((@List.Forall a0 (fun y1 : a0 => (y0 y1) = (x1 y1)) x2) -> (@List.map a0 a1 y0 x2) = (@List.map a0 a1 x1 x2)) -> (~ ((((y0 x0) = (x1 x0)) /\ (@List.Forall a0 (fun y1 : a0 => (y0 y1) = (x1 y1)) x2)) -> (@cons a1 (y0 x0) (@List.map a0 a1 y0 x2)) = (@cons a1 (x1 x0) (@List.map a0 a1 x1 x2)))) -> False) x3.
Definition term264 (a0 : Type') (x0 : type1138 a0) (x1 : type1138 a0) := and (~ (~ (x0 = x1))).
Definition term238 (a0 : Type') (x0 : a0) (x1 : a0) := and (~ (~ (x0 = x1))).
Definition term227 (a0 : Type') (x0 : a0) (x1 : a0) := ~ (x0 = x1).
Definition term8 (a0 : Type') (a1 : Type') := forall y0 : a0 -> a1, (@List.map a0 a1 y0 (@nil a0)) = (@nil a1).
Definition term279 (a0 : Type') (a1 : Type') (x0 : a0 -> a1) := forall y0 : a0 -> a1, forall y1 : list a0, (@List.Forall a0 (fun y2 : a0 => (x0 y2) = (y0 y2)) y1) -> (@List.map a0 a1 x0 y1) = (@List.map a0 a1 y0 y1).
Definition term40 (a0 : Type') (a1 : Type') (x0 : a0 -> a1) (x1 : a0 -> a1) := (((@List.Forall a0 (fun y0 : a0 => (x0 y0) = (x1 y0)) (@nil a0)) -> (@List.map a0 a1 x0 (@nil a0)) = (@List.map a0 a1 x1 (@nil a0))) /\ (forall y0 : a0, forall y1 : list a0, ((@List.Forall a0 (fun y2 : a0 => (x0 y2) = (x1 y2)) y1) -> (@List.map a0 a1 x0 y1) = (@List.map a0 a1 x1 y1)) -> (@List.Forall a0 (fun y2 : a0 => (x0 y2) = (x1 y2)) (@cons a0 y0 y1)) -> (@List.map a0 a1 x0 (@cons a0 y0 y1)) = (@List.map a0 a1 x1 (@cons a0 y0 y1)))) -> forall y0 : list a0, (@List.Forall a0 (fun y1 : a0 => (x0 y1) = (x1 y1)) y0) -> (@List.map a0 a1 x0 y0) = (@List.map a0 a1 x1 y0).
Definition term94 (a0 : Type') (a1 : Type') (x0 : type516 a0 a1) (x1 : a0 -> a1) := @eq ((a0 -> a1) -> a0 -> Prop) (x0 x1).
Definition term56 (a0 : Type') (a1 : Type') (x0 : a0 -> a1) (x1 : a0 -> a1) (x2 : a0) := and ((fun y0 : a0 => (x0 y0) = (x1 y0)) x2).
Definition term48 (a0 : Type') (a1 : Type') (x0 : a0) (x1 : a0 -> a1) (x2 : a0 -> a1) (x3 : list a0) := ((fun y0 : a0 => (x1 y0) = (x2 y0)) x0) /\ (@List.Forall a0 (fun y0 : a0 => (x1 y0) = (x2 y0)) x3).
Definition term53 (a0 : Type') (a1 : Type') (x0 : a0 -> a1) (x1 : a0 -> a1) := fun y0 : a0 => (fun y1 : a0 => (x0 y1) = (x1 y1)) y0.
Definition term128 (a0 : Type') (a1 : Type') := forall y0 : type516 a0 a1, (y0 = (fun y1 : a0 -> a1 => fun y2 : a0 -> a1 => fun y3 : a0 => (y1 y3) = (y2 y3))) -> (forall y1 : list a0, forall y2 : a0 -> a1, forall y3 : a0, forall y4 : a0 -> a1, ((@List.Forall a0 (fun y5 : a0 => (y4 y5) = (y2 y5)) y1) -> (@List.map a0 a1 y4 y1) = (@List.map a0 a1 y2 y1)) -> (((y4 y3) = (y2 y3)) /\ (@List.Forall a0 (fun y5 : a0 => (y4 y5) = (y2 y5)) y1)) -> (@cons a1 (y4 y3) (@List.map a0 a1 y4 y1)) = (@cons a1 (y2 y3) (@List.map a0 a1 y2 y1))) = ((fun y1 : type516 a0 a1 => forall y2 : list a0, forall y3 : a0 -> a1, forall y4 : a0, forall y5 : a0 -> a1, ((@List.Forall a0 (y1 y5 y3) y2) -> (@List.map a0 a1 y5 y2) = (@List.map a0 a1 y3 y2)) -> (((y5 y4) = (y3 y4)) /\ (@List.Forall a0 (y1 y5 y3) y2)) -> (@cons a1 (y5 y4) (@List.map a0 a1 y5 y2)) = (@cons a1 (y3 y4) (@List.map a0 a1 y3 y2))) y0).
Definition term221 (a0 : Type') (x0 : a0) (x1 : a0) (x2 : type1397 a0) (x3 : type1397 a0) := ((@I (a0 -> (list a0) -> list a0) x2 x0) = (@I (a0 -> (list a0) -> list a0) x3 x1)) \/ (~ (x2 = x3)).
Definition term254 (a0 : Type') (x0 : type1138 a0) (x1 : type1138 a0) (x2 : list a0) (x3 : list a0) := (~ (x0 = x1)) \/ (((@I ((list a0) -> list a0) x0 x2) = (@I ((list a0) -> list a0) x1 x3)) \/ (~ (x2 = x3))).
Definition term4 (a0 : Type') (a1 : Type') (x0 : a0) (x1 : a0 -> a1) := forall y0 : list a0, (@List.map a0 a1 x1 (@cons a0 x0 y0)) = (@cons a1 (x1 x0) (@List.map a0 a1 x1 y0)).
Definition term152 (a0 : Type') (a1 : Type') (x0 : type516 a0 a1) (x1 : a0 -> a1) := forall y0 : a0 -> a1, (x0 x1 y0) = ((fun y1 : a0 -> a1 => fun y2 : a0 => (x1 y2) = (y1 y2)) y0).
Definition term272 (a0 : Type') (a1 : Type') (x0 : a0 -> a1) (x1 : a0) (x2 : a0 -> a1) (x3 : list a0) := (((@I (a1 -> (list a1) -> list a1) (@cons a1) (@I (a0 -> a1) x0 x1)) = (@I (a1 -> (list a1) -> list a1) (@cons a1) (@I (a0 -> a1) x2 x1))) /\ ((@I ((list a0) -> list a1) (@I ((a0 -> a1) -> (list a0) -> list a1) (@List.map a0 a1) x0) x3) = (@I ((list a0) -> list a1) (@I ((a0 -> a1) -> (list a0) -> list a1) (@List.map a0 a1) x2) x3))) -> (@I ((list a1) -> list a1) (@I (a1 -> (list a1) -> list a1) (@cons a1) (@I (a0 -> a1) x0 x1)) (@I ((list a0) -> list a1) (@I ((a0 -> a1) -> (list a0) -> list a1) (@List.map a0 a1) x0) x3)) = (@I ((list a1) -> list a1) (@I (a1 -> (list a1) -> list a1) (@cons a1) (@I (a0 -> a1) x2 x1)) (@I ((list a0) -> list a1) (@I ((a0 -> a1) -> (list a0) -> list a1) (@List.map a0 a1) x2) x3)).
Definition term124 (a0 : Type') (a1 : Type') (x0 : type516 a0 a1) := imp (x0 = (fun y0 : a0 -> a1 => fun y1 : a0 -> a1 => fun y2 : a0 => (y0 y2) = (y1 y2))).
Definition term102 (a0 : Type') (a1 : Type') (x0 : type516 a0 a1) (x1 : a0 -> a1) (x2 : a0) (x3 : a0 -> a1) (x4 : list a0) := (((x1 x2) = (x3 x2)) /\ (@List.Forall a0 (x0 x1 x3) x4)) -> (@cons a1 (x1 x2) (@List.map a0 a1 x1 x4)) = (@cons a1 (x3 x2) (@List.map a0 a1 x3 x4)).
Definition term62 (a0 : Type') (a1 : Type') (x0 : a0 -> a1) (x1 : a0) (x2 : list a0) := @eq (list a1) (@List.map a0 a1 x0 (@cons a0 x1 x2)).
Definition term180 (a0 : Type') (a1 : Type') (x0 : a0 -> a1) (x1 : list a0) := @eq (list a1) (@I ((list a0) -> list a1) (@I ((a0 -> a1) -> (list a0) -> list a1) (@List.map a0 a1) x0) x1).
Definition term134 (a0 : Type') (a1 : Type') := fun y0 : type516 a0 a1 => (y0 = (fun y1 : a0 -> a1 => fun y2 : a0 -> a1 => fun y3 : a0 => (y1 y3) = (y2 y3))) -> forall y1 : list a0, forall y2 : a0 -> a1, forall y3 : a0, forall y4 : a0 -> a1, ((@List.Forall a0 (y0 y4 y2) y1) -> (@List.map a0 a1 y4 y1) = (@List.map a0 a1 y2 y1)) -> (((y4 y3) = (y2 y3)) /\ (@List.Forall a0 (y0 y4 y2) y1)) -> (@cons a1 (y4 y3) (@List.map a0 a1 y4 y1)) = (@cons a1 (y2 y3) (@List.map a0 a1 y2 y1)).
Definition term136 (a0 : Type') (a1 : Type') := forall y0 : type516 a0 a1, (y0 = (fun y1 : a0 -> a1 => fun y2 : a0 -> a1 => fun y3 : a0 => (y1 y3) = (y2 y3))) -> forall y1 : list a0, forall y2 : a0 -> a1, forall y3 : a0, forall y4 : a0 -> a1, ((@List.Forall a0 (y0 y4 y2) y1) -> (@List.map a0 a1 y4 y1) = (@List.map a0 a1 y2 y1)) -> (((y4 y3) = (y2 y3)) /\ (@List.Forall a0 (y0 y4 y2) y1)) -> (@cons a1 (y4 y3) (@List.map a0 a1 y4 y1)) = (@cons a1 (y2 y3) (@List.map a0 a1 y2 y1)).
Definition term100 (a0 : Type') (a1 : Type') (x0 : a0) (x1 : type516 a0 a1) (x2 : a0 -> a1) (x3 : a0 -> a1) (x4 : list a0) := ((x2 x0) = (x3 x0)) /\ (@List.Forall a0 (x1 x2 x3) x4).
Definition term190 (a0 : Type') (a1 : Type') (x0 : type516 a0 a1) (x1 : a0 -> a1) (x2 : a0 -> a1) (x3 : list a0) := or (~ (@I ((list a0) -> Prop) (@I ((a0 -> Prop) -> (list a0) -> Prop) (@List.Forall a0) (@I ((a0 -> a1) -> a0 -> Prop) (@I ((a0 -> a1) -> (a0 -> a1) -> a0 -> Prop) x0 x1) x2)) x3)).
Definition term245 (a0 : Type') (a1 : Type') (x0 : a0 -> a1) (x1 : a0 -> a1) (x2 : a0) := ((@I (a0 -> a1) x0 x2) = (@I (a0 -> a1) x1 x2)) /\ ((@cons a1) = (@cons a1)).
Definition term43 (a0 : Type') (a1 : Type') (x0 : a0 -> a1) (x1 : a0 -> a1) := imp (@List.Forall a0 (fun y0 : a0 => (x0 y0) = (x1 y0)) (@nil a0)).
Definition term99 (a0 : Type') (a1 : Type') (x0 : type516 a0 a1) (x1 : a0 -> a1) (x2 : a0 -> a1) (x3 : list a0) := @List.Forall a0 (x0 x1 x2) x3.
Definition term63 (a0 : Type') (a1 : Type') (x0 : a0) (x1 : a0 -> a1) (x2 : list a0) := @eq (list a1) (@cons a1 (x1 x0) (@List.map a0 a1 x1 x2)).
Definition term167 (a0 : Type') (a1 : Type') (x0 : type516 a0 a1) (x1 : a0 -> a1) := fun y0 : a0 -> a1 => forall y1 : a0, (x0 x1 y0 y1) = ((x1 y1) = (y0 y1)).
Definition term169 (a0 : Type') (a1 : Type') (x0 : type516 a0 a1) := fun y0 : a0 -> a1 => forall y1 : a0 -> a1, forall y2 : a0, (x0 y0 y1 y2) = ((y0 y2) = (y1 y2)).
Definition term121 (a0 : Type') (a1 : Type') := fun y0 : type516 a0 a1 => forall y1 : list a0, forall y2 : a0 -> a1, forall y3 : a0, forall y4 : a0 -> a1, ((@List.Forall a0 (y0 y4 y2) y1) -> (@List.map a0 a1 y4 y1) = (@List.map a0 a1 y2 y1)) -> (((y4 y3) = (y2 y3)) /\ (@List.Forall a0 (y0 y4 y2) y1)) -> (@cons a1 (y4 y3) (@List.map a0 a1 y4 y1)) = (@cons a1 (y2 y3) (@List.map a0 a1 y2 y1)).
Definition term249 (a0 : Type') (a1 : Type') (x0 : a0 -> a1) (x1 : a0 -> a1) (x2 : list a0) := (~ ((@I ((list a0) -> list a1) (@I ((a0 -> a1) -> (list a0) -> list a1) (@List.map a0 a1) x0) x2) = (@I ((list a0) -> list a1) (@I ((a0 -> a1) -> (list a0) -> list a1) (@List.map a0 a1) x1) x2))) -> (@I ((list a0) -> list a1) (@I ((a0 -> a1) -> (list a0) -> list a1) (@List.map a0 a1) x0) x2) = (@I ((list a0) -> list a1) (@I ((a0 -> a1) -> (list a0) -> list a1) (@List.map a0 a1) x1) x2).
Definition term267 (a0 : Type') (x0 : type1138 a0) (x1 : type1138 a0) (x2 : list a0) (x3 : list a0) := (x0 = x1) /\ (x2 = x3).
Definition term261 (a0 : Type') (x0 : type1138 a0) (x1 : type1138 a0) (x2 : list a0) (x3 : list a0) := ~ ((~ (x0 = x1)) \/ (~ (x2 = x3))).
Definition term235 (a0 : Type') (x0 : a0) (x1 : a0) (x2 : type1397 a0) (x3 : type1397 a0) := ~ ((~ (x0 = x1)) \/ (~ (x2 = x3))).
Definition term197 (a0 : Type') (a1 : Type') (x0 : a0 -> a1) (x1 : a0) := @cons a1 (@I (a0 -> a1) x0 x1).
Definition term243 (a0 : Type') (x0 : a0) (x1 : a0) (x2 : type1397 a0) (x3 : type1397 a0) := imp ((x0 = x1) /\ (x2 = x3)).
Definition term220 (a0 : Type') := ~ ((@cons a0) = (@cons a0)).
Definition term247 (a0 : Type') (a1 : Type') (x0 : a0 -> a1) (x1 : a0 -> a1) (x2 : a0) := (~ ((@I (a1 -> (list a1) -> list a1) (@cons a1) (@I (a0 -> a1) x0 x2)) = (@I (a1 -> (list a1) -> list a1) (@cons a1) (@I (a0 -> a1) x1 x2)))) -> (@I (a1 -> (list a1) -> list a1) (@cons a1) (@I (a0 -> a1) x0 x2)) = (@I (a1 -> (list a1) -> list a1) (@cons a1) (@I (a0 -> a1) x1 x2)).
Definition term182 (a0 : Type') (a1 : Type') (x0 : type516 a0 a1) (x1 : a0 -> a1) (x2 : a0 -> a1) := @List.Forall a0 (@I ((a0 -> a1) -> a0 -> Prop) (@I ((a0 -> a1) -> (a0 -> a1) -> a0 -> Prop) x0 x1) x2).
Definition term97 (a0 : Type') (a1 : Type') (x0 : a0 -> a1) (x1 : a0 -> a1) := @List.Forall a0 (fun y0 : a0 => (x0 y0) = (x1 y0)).
Definition term12 (a0 : Type') (a1 : Type') (x0 : a0 -> a1) (x1 : a0 -> a1) := fun y0 : list a0 => (@List.Forall a0 (fun y1 : a0 => (x0 y1) = (x1 y1)) y0) -> (@List.map a0 a1 x0 y0) = (@List.map a0 a1 x1 y0).
Definition term6 (a0 : Type') (a1 : Type') (x0 : a0 -> a1) (x1 : a0) (x2 : list a0) := @List.map a0 a1 x0 (@cons a0 x1 x2).
Definition term181 (a0 : Type') (a1 : Type') (x0 : type516 a0 a1) (x1 : a0 -> a1) (x2 : a0 -> a1) := @I ((a0 -> a1) -> a0 -> Prop) (@I ((a0 -> a1) -> (a0 -> a1) -> a0 -> Prop) x0 x1) x2.
Definition term75 (a0 : Type') (a1 : Type') (x0 : a0) (x1 : a0 -> a1) (x2 : list a0) := fun y0 : a0 -> a1 => ((@List.Forall a0 (fun y1 : a0 => (y0 y1) = (x1 y1)) x2) -> (@List.map a0 a1 y0 x2) = (@List.map a0 a1 x1 x2)) -> (~ ((((y0 x0) = (x1 x0)) /\ (@List.Forall a0 (fun y1 : a0 => (y0 y1) = (x1 y1)) x2)) -> (@cons a1 (y0 x0) (@List.map a0 a1 y0 x2)) = (@cons a1 (x1 x0) (@List.map a0 a1 x1 x2)))) -> False.
Definition term188 (a0 : Type') (a1 : Type') (x0 : type516 a0 a1) (x1 : a0 -> a1) (x2 : a0 -> a1) (x3 : list a0) := ~ (@I ((list a0) -> Prop) (@I ((a0 -> Prop) -> (list a0) -> Prop) (@List.Forall a0) (@I ((a0 -> a1) -> a0 -> Prop) (@I ((a0 -> a1) -> (a0 -> a1) -> a0 -> Prop) x0 x1) x2)) x3).
Definition term209 (x0 : Prop) (x1 : Prop) := (~ x0) \/ x1.
Definition term155 (a0 : Type') (a1 : Type') (x0 : type516 a0 a1) (x1 : a0 -> a1) := fun y0 : a0 -> a1 => (x0 x1 y0) = ((fun y1 : a0 -> a1 => fun y2 : a0 => (x1 y2) = (y1 y2)) y0).
Definition term260 (a0 : Type') (x0 : type1138 a0) (x1 : type1138 a0) (x2 : list a0) (x3 : list a0) := (~ (x0 = x1)) \/ (~ (x2 = x3)).
Definition term177 (a0 : Type') (a1 : Type') (x0 : type516 a0 a1) (x1 : a0 -> a1) (x2 : a0 -> a1) (x3 : list a0) := (~ (@List.Forall a0 (x0 x1 x2) x3)) \/ ((@List.map a0 a1 x1 x3) = (@List.map a0 a1 x2 x3)).
Definition term36 (a0 : Type') (a1 : Type') (x0 : a0 -> a1) (x1 : a0 -> a1) := imp (((@List.Forall a0 (fun y0 : a0 => (x0 y0) = (x1 y0)) (@nil a0)) -> (@List.map a0 a1 x0 (@nil a0)) = (@List.map a0 a1 x1 (@nil a0))) /\ (forall y0 : a0, forall y1 : list a0, ((@List.Forall a0 (fun y2 : a0 => (x0 y2) = (x1 y2)) y1) -> (@List.map a0 a1 x0 y1) = (@List.map a0 a1 x1 y1)) -> (@List.Forall a0 (fun y2 : a0 => (x0 y2) = (x1 y2)) (@cons a0 y0 y1)) -> (@List.map a0 a1 x0 (@cons a0 y0 y1)) = (@List.map a0 a1 x1 (@cons a0 y0 y1)))).
Definition term216 (a0 : Type') (x0 : type1138 a0) (x1 : list a0) (x2 : type1138 a0) (x3 : list a0) := (~ (x0 = x2)) \/ ((~ (x1 = x3)) \/ ((@I ((list a0) -> list a0) x0 x1) = (@I ((list a0) -> list a0) x2 x3))).
Definition term51 (a0 : Type') (a1 : Type') (x0 : a0 -> a1) (x1 : a0 -> a1) (x2 : a0) := (fun y0 : a0 => (fun y1 : a0 => (x0 y1) = (x1 y1)) y0) x2.
Definition term173 (a0 : Type') (a1 : Type') := fun y0 : type516 a0 a1 => (forall y1 : a0 -> a1, forall y2 : a0 -> a1, forall y3 : a0, (y0 y1 y2 y3) = ((y1 y3) = (y2 y3))) -> forall y1 : list a0, forall y2 : a0 -> a1, forall y3 : a0, forall y4 : a0 -> a1, ((@List.Forall a0 (y0 y4 y2) y1) -> (@List.map a0 a1 y4 y1) = (@List.map a0 a1 y2 y1)) -> (((y4 y3) = (y2 y3)) /\ (@List.Forall a0 (y0 y4 y2) y1)) -> (@cons a1 (y4 y3) (@List.map a0 a1 y4 y1)) = (@cons a1 (y2 y3) (@List.map a0 a1 y2 y1)).
Definition term113 (a0 : Type') (a1 : Type') (x0 : type516 a0 a1) (x1 : list a0) := forall y0 : a0 -> a1, forall y1 : a0, forall y2 : a0 -> a1, ((@List.Forall a0 (x0 y2 y0) x1) -> (@List.map a0 a1 y2 x1) = (@List.map a0 a1 y0 x1)) -> (((y2 y1) = (y0 y1)) /\ (@List.Forall a0 (x0 y2 y0) x1)) -> (@cons a1 (y2 y1) (@List.map a0 a1 y2 x1)) = (@cons a1 (y0 y1) (@List.map a0 a1 y0 x1)).
Definition term86 (a0 : Type') (a1 : Type') (x0 : list a0) := forall y0 : a0 -> a1, forall y1 : a0, forall y2 : a0 -> a1, ((@List.Forall a0 (fun y3 : a0 => (y2 y3) = (y0 y3)) x0) -> (@List.map a0 a1 y2 x0) = (@List.map a0 a1 y0 x0)) -> (((y2 y1) = (y0 y1)) /\ (@List.Forall a0 (fun y3 : a0 => (y2 y3) = (y0 y3)) x0)) -> (@cons a1 (y2 y1) (@List.map a0 a1 y2 x0)) = (@cons a1 (y0 y1) (@List.map a0 a1 y0 x0)).
Definition term85 (a0 : Type') (a1 : Type') (x0 : list a0) := forall y0 : a0 -> a1, forall y1 : a0, forall y2 : a0 -> a1, ((@List.Forall a0 (fun y3 : a0 => (y2 y3) = (y0 y3)) x0) -> (@List.map a0 a1 y2 x0) = (@List.map a0 a1 y0 x0)) -> (~ ((((y2 y1) = (y0 y1)) /\ (@List.Forall a0 (fun y3 : a0 => (y2 y3) = (y0 y3)) x0)) -> (@cons a1 (y2 y1) (@List.map a0 a1 y2 x0)) = (@cons a1 (y0 y1) (@List.map a0 a1 y0 x0)))) -> False.
Definition term0 (a0 : Type') (a1 : Type') := forall y0 : a0 -> a1, forall y1 : a0, forall y2 : list a0, (@List.map a0 a1 y0 (@cons a0 y1 y2)) = (@cons a1 (y0 y1) (@List.map a0 a1 y0 y2)).
Definition term187 (a0 : Type') (a1 : Type') (x0 : type516 a0 a1) (x1 : a0 -> a1) (x2 : a0 -> a1) (x3 : list a0) := ~ (@List.Forall a0 (x0 x1 x2) x3).
Definition term103 (a0 : Type') (a1 : Type') (x0 : a0 -> a1) (x1 : a0 -> a1) (x2 : list a0) := imp (@List.Forall a0 (fun y0 : a0 => (x0 y0) = (x1 y0)) x2).
Definition term174 (a0 : Type') (a1 : Type') := forall y0 : type516 a0 a1, (forall y1 : a0 -> a1, forall y2 : a0 -> a1, forall y3 : a0, (y0 y1 y2 y3) = ((y1 y3) = (y2 y3))) -> forall y1 : list a0, forall y2 : a0 -> a1, forall y3 : a0, forall y4 : a0 -> a1, ((@List.Forall a0 (y0 y4 y2) y1) -> (@List.map a0 a1 y4 y1) = (@List.map a0 a1 y2 y1)) -> (((y4 y3) = (y2 y3)) /\ (@List.Forall a0 (y0 y4 y2) y1)) -> (@cons a1 (y4 y3) (@List.map a0 a1 y4 y1)) = (@cons a1 (y2 y3) (@List.map a0 a1 y2 y1)).
Definition term95 (a0 : Type') (a1 : Type') (x0 : a0 -> a1) (x1 : a0 -> a1) := (fun y0 : a0 -> a1 => fun y1 : a0 => (x0 y1) = (y0 y1)) x1.
Definition term159 (a0 : Type') (x0 : a0 -> Prop) (x1 : a0 -> Prop) := forall y0 : a0, (x0 y0) = (x1 y0).
Definition term150 (a0 : Type') (a1 : Type') (x0 : type551 a0 a1) (x1 : type551 a0 a1) := forall y0 : a0 -> a1, (x0 y0) = (x1 y0).
Definition term141 (a0 : Type') (a1 : Type') (x0 : type516 a0 a1) (x1 : type516 a0 a1) := forall y0 : a0 -> a1, (x0 y0) = (x1 y0).
Definition term125 (a0 : Type') (a1 : Type') (x0 : type516 a0 a1) := (x0 = (fun y0 : a0 -> a1 => fun y1 : a0 -> a1 => fun y2 : a0 => (y0 y2) = (y1 y2))) -> (forall y0 : list a0, forall y1 : a0 -> a1, forall y2 : a0, forall y3 : a0 -> a1, ((@List.Forall a0 (fun y4 : a0 => (y3 y4) = (y1 y4)) y0) -> (@List.map a0 a1 y3 y0) = (@List.map a0 a1 y1 y0)) -> (((y3 y2) = (y1 y2)) /\ (@List.Forall a0 (fun y4 : a0 => (y3 y4) = (y1 y4)) y0)) -> (@cons a1 (y3 y2) (@List.map a0 a1 y3 y0)) = (@cons a1 (y1 y2) (@List.map a0 a1 y1 y0))) = ((fun y0 : type516 a0 a1 => forall y1 : list a0, forall y2 : a0 -> a1, forall y3 : a0, forall y4 : a0 -> a1, ((@List.Forall a0 (y0 y4 y2) y1) -> (@List.map a0 a1 y4 y1) = (@List.map a0 a1 y2 y1)) -> (((y4 y3) = (y2 y3)) /\ (@List.Forall a0 (y0 y4 y2) y1)) -> (@cons a1 (y4 y3) (@List.map a0 a1 y4 y1)) = (@cons a1 (y2 y3) (@List.map a0 a1 y2 y1))) x0).
Definition term183 (a0 : Type') (a1 : Type') (x0 : type516 a0 a1) (x1 : a0 -> a1) (x2 : a0 -> a1) (x3 : list a0) := @List.Forall a0 (@I ((a0 -> a1) -> a0 -> Prop) (@I ((a0 -> a1) -> (a0 -> a1) -> a0 -> Prop) x0 x1) x2) x3.
Definition term195 (a0 : Type') (a1 : Type') (x0 : a0) (x1 : type516 a0 a1) (x2 : a0 -> a1) (x3 : a0 -> a1) (x4 : list a0) := ((@I (a0 -> a1) x2 x0) = (@I (a0 -> a1) x3 x0)) /\ (@I ((list a0) -> Prop) (@I ((a0 -> Prop) -> (list a0) -> Prop) (@List.Forall a0) (@I ((a0 -> a1) -> a0 -> Prop) (@I ((a0 -> a1) -> (a0 -> a1) -> a0 -> Prop) x1 x2) x3)) x4).
Definition term166 (a0 : Type') (a1 : Type') (x0 : type516 a0 a1) (x1 : a0 -> a1) (x2 : a0 -> a1) := forall y0 : a0, (x0 x1 x2 y0) = ((x1 y0) = (x2 y0)).
Definition term250 (a0 : Type') (a1 : Type') (x0 : a0 -> a1) (x1 : a0 -> a1) (x2 : list a0) := ~ ((@I ((list a0) -> list a1) (@I ((a0 -> a1) -> (list a0) -> list a1) (@List.map a0 a1) x0) x2) = (@I ((list a0) -> list a1) (@I ((a0 -> a1) -> (list a0) -> list a1) (@List.map a0 a1) x1) x2)).
Definition term252 (a0 : Type') (x0 : list a0) (x1 : list a0) := ~ (x0 = x1).
Definition term259 (a0 : Type') (x0 : type1138 a0) (x1 : list a0) (x2 : type1138 a0) (x3 : list a0) := (~ ((~ (x0 = x2)) \/ (~ (x1 = x3)))) -> (@I ((list a0) -> list a0) x0 x1) = (@I ((list a0) -> list a0) x2 x3).
Definition term266 (a0 : Type') (x0 : list a0) (x1 : list a0) := ~ (~ (x0 = x1)).
Definition term263 (a0 : Type') (x0 : type1138 a0) (x1 : type1138 a0) := ~ (~ (x0 = x1)).
Definition term240 (a0 : Type') (x0 : type1397 a0) (x1 : type1397 a0) := ~ (~ (x0 = x1)).
Definition term253 (a0 : Type') (x0 : type1138 a0) (x1 : type1138 a0) := or (~ (x0 = x1)).
Definition term38 (a0 : Type') (a1 : Type') (x0 : a0 -> a1) (x1 : a0 -> a1) := forall y0 : list a0, (fun y1 : list a0 => (@List.Forall a0 (fun y2 : a0 => (x0 y2) = (x1 y2)) y1) -> (@List.map a0 a1 x0 y1) = (@List.map a0 a1 x1 y1)) y0.
Definition term162 (a0 : Type') (a1 : Type') (x0 : type516 a0 a1) (x1 : a0 -> a1) (x2 : a0 -> a1) := @eq Prop ((x0 x1 x2) = (fun y0 : a0 => (x1 y0) = (x2 y0))).
Definition term104 (a0 : Type') (a1 : Type') (x0 : type516 a0 a1) (x1 : a0 -> a1) (x2 : a0 -> a1) (x3 : list a0) := imp (@List.Forall a0 (x0 x1 x2) x3).
Definition term107 (a0 : Type') (a1 : Type') (x0 : type516 a0 a1) (x1 : a0 -> a1) (x2 : a0) (x3 : a0 -> a1) (x4 : list a0) := ((@List.Forall a0 (x0 x1 x3) x4) -> (@List.map a0 a1 x1 x4) = (@List.map a0 a1 x3 x4)) -> (((x1 x2) = (x3 x2)) /\ (@List.Forall a0 (x0 x1 x3) x4)) -> (@cons a1 (x1 x2) (@List.map a0 a1 x1 x4)) = (@cons a1 (x3 x2) (@List.map a0 a1 x3 x4)).
Definition term74 (a0 : Type') (a1 : Type') (x0 : a0 -> a1) (x1 : a0) (x2 : a0 -> a1) (x3 : list a0) := ((@List.Forall a0 (fun y0 : a0 => (x0 y0) = (x2 y0)) x3) -> (@List.map a0 a1 x0 x3) = (@List.map a0 a1 x2 x3)) -> (((x0 x1) = (x2 x1)) /\ (@List.Forall a0 (fun y0 : a0 => (x0 y0) = (x2 y0)) x3)) -> (@cons a1 (x0 x1) (@List.map a0 a1 x0 x3)) = (@cons a1 (x2 x1) (@List.map a0 a1 x2 x3)).
Definition term111 (a0 : Type') (a1 : Type') (x0 : type516 a0 a1) (x1 : a0 -> a1) (x2 : list a0) := forall y0 : a0, forall y1 : a0 -> a1, ((@List.Forall a0 (x0 y1 x1) x2) -> (@List.map a0 a1 y1 x2) = (@List.map a0 a1 x1 x2)) -> (((y1 y0) = (x1 y0)) /\ (@List.Forall a0 (x0 y1 x1) x2)) -> (@cons a1 (y1 y0) (@List.map a0 a1 y1 x2)) = (@cons a1 (x1 y0) (@List.map a0 a1 x1 x2)).
Definition term82 (a0 : Type') (a1 : Type') (x0 : a0 -> a1) (x1 : list a0) := forall y0 : a0, forall y1 : a0 -> a1, ((@List.Forall a0 (fun y2 : a0 => (y1 y2) = (x0 y2)) x1) -> (@List.map a0 a1 y1 x1) = (@List.map a0 a1 x0 x1)) -> (((y1 y0) = (x0 y0)) /\ (@List.Forall a0 (fun y2 : a0 => (y1 y2) = (x0 y2)) x1)) -> (@cons a1 (y1 y0) (@List.map a0 a1 y1 x1)) = (@cons a1 (x0 y0) (@List.map a0 a1 x0 x1)).
Definition term81 (a0 : Type') (a1 : Type') (x0 : a0 -> a1) (x1 : list a0) := forall y0 : a0, forall y1 : a0 -> a1, ((@List.Forall a0 (fun y2 : a0 => (y1 y2) = (x0 y2)) x1) -> (@List.map a0 a1 y1 x1) = (@List.map a0 a1 x0 x1)) -> (~ ((((y1 y0) = (x0 y0)) /\ (@List.Forall a0 (fun y2 : a0 => (y1 y2) = (x0 y2)) x1)) -> (@cons a1 (y1 y0) (@List.map a0 a1 y1 x1)) = (@cons a1 (x0 y0) (@List.map a0 a1 x0 x1)))) -> False.
Definition term32 (a0 : Type') (a1 : Type') (x0 : a0 -> a1) (x1 : a0 -> a1) := forall y0 : a0, forall y1 : list a0, ((@List.Forall a0 (fun y2 : a0 => (x0 y2) = (x1 y2)) y1) -> (@List.map a0 a1 x0 y1) = (@List.map a0 a1 x1 y1)) -> (@List.Forall a0 (fun y2 : a0 => (x0 y2) = (x1 y2)) (@cons a0 y0 y1)) -> (@List.map a0 a1 x0 (@cons a0 y0 y1)) = (@List.map a0 a1 x1 (@cons a0 y0 y1)).
Definition term31 (a0 : Type') (a1 : Type') (x0 : a0 -> a1) (x1 : a0 -> a1) := forall y0 : a0, forall y1 : list a0, ((fun y2 : list a0 => (@List.Forall a0 (fun y3 : a0 => (x0 y3) = (x1 y3)) y2) -> (@List.map a0 a1 x0 y2) = (@List.map a0 a1 x1 y2)) y1) -> (fun y2 : list a0 => (@List.Forall a0 (fun y3 : a0 => (x0 y3) = (x1 y3)) y2) -> (@List.map a0 a1 x0 y2) = (@List.map a0 a1 x1 y2)) (@cons a0 y0 y1).
Definition term2 (a0 : Type') (a1 : Type') (x0 : a0 -> a1) := forall y0 : a0, forall y1 : list a0, (@List.map a0 a1 x0 (@cons a0 y0 y1)) = (@cons a1 (x0 y0) (@List.map a0 a1 x0 y1)).
Definition term176 (a0 : Type') (a1 : Type') (x0 : a0 -> a1) (x1 : a0) (x2 : a0 -> a1) (x3 : list a0) := ~ ((@cons a1 (x0 x1) (@List.map a0 a1 x0 x3)) = (@cons a1 (x2 x1) (@List.map a0 a1 x2 x3))).
Definition term179 (a0 : Type') (a1 : Type') (x0 : a0 -> a1) (x1 : list a0) := @eq (list a1) (@List.map a0 a1 x0 x1).
Definition term69 (a0 : Type') (a1 : Type') (x0 : a0 -> a1) (x1 : a0) (x2 : a0 -> a1) (x3 : list a0) := (((@List.Forall a0 (fun y0 : a0 => (x0 y0) = (x2 y0)) x3) -> (@List.map a0 a1 x0 x3) = (@List.map a0 a1 x2 x3)) -> (~ ((((x0 x1) = (x2 x1)) /\ (@List.Forall a0 (fun y0 : a0 => (x0 y0) = (x2 y0)) x3)) -> (@cons a1 (x0 x1) (@List.map a0 a1 x0 x3)) = (@cons a1 (x2 x1) (@List.map a0 a1 x2 x3)))) -> False) -> ((@List.Forall a0 (fun y0 : a0 => (x0 y0) = (x2 y0)) x3) -> (@List.map a0 a1 x0 x3) = (@List.map a0 a1 x2 x3)) -> (~ ((((x0 x1) = (x2 x1)) /\ (@List.Forall a0 (fun y0 : a0 => (x0 y0) = (x2 y0)) x3)) -> (@cons a1 (x0 x1) (@List.map a0 a1 x0 x3)) = (@cons a1 (x2 x1) (@List.map a0 a1 x2 x3)))) -> False.
Definition term45 (a0 : Type') (x0 : a0 -> Prop) (x1 : a0) (x2 : list a0) := @List.Forall a0 x0 (@cons a0 x1 x2).
Definition term168 (a0 : Type') (a1 : Type') (x0 : type516 a0 a1) (x1 : a0 -> a1) := forall y0 : a0 -> a1, forall y1 : a0, (x0 x1 y0 y1) = ((x1 y1) = (y0 y1)).
Definition term226 (a0 : Type') (x0 : a0) (x1 : a0) (x2 : type1397 a0) (x3 : type1397 a0) := ((@I (a0 -> (list a0) -> list a0) x2 x0) = (@I (a0 -> (list a0) -> list a0) x3 x1)) \/ ((~ (x0 = x1)) \/ (~ (x2 = x3))).
Definition term237 (a0 : Type') (x0 : a0) (x1 : a0) := ~ (~ (x0 = x1)).
Definition term101 (a0 : Type') (a1 : Type') (x0 : a0) (x1 : type516 a0 a1) (x2 : a0 -> a1) (x3 : a0 -> a1) (x4 : list a0) := imp (((x2 x0) = (x3 x0)) /\ (@List.Forall a0 (x1 x2 x3) x4)).
Definition term42 (a0 : Type') (a1 : Type') (x0 : a0 -> a1) (x1 : a0 -> a1) := fun y0 : a0 => (x0 y0) = (x1 y0).
Definition term33 (a0 : Type') (a1 : Type') (x0 : a0 -> a1) (x1 : a0 -> a1) := ((fun y0 : list a0 => (@List.Forall a0 (fun y1 : a0 => (x0 y1) = (x1 y1)) y0) -> (@List.map a0 a1 x0 y0) = (@List.map a0 a1 x1 y0)) (@nil a0)) /\ (forall y0 : a0, forall y1 : list a0, ((fun y2 : list a0 => (@List.Forall a0 (fun y3 : a0 => (x0 y3) = (x1 y3)) y2) -> (@List.map a0 a1 x0 y2) = (@List.map a0 a1 x1 y2)) y1) -> (fun y2 : list a0 => (@List.Forall a0 (fun y3 : a0 => (x0 y3) = (x1 y3)) y2) -> (@List.map a0 a1 x0 y2) = (@List.map a0 a1 x1 y2)) (@cons a0 y0 y1)).
Definition term34 (a0 : Type') (a1 : Type') (x0 : a0 -> a1) (x1 : a0 -> a1) := ((@List.Forall a0 (fun y0 : a0 => (x0 y0) = (x1 y0)) (@nil a0)) -> (@List.map a0 a1 x0 (@nil a0)) = (@List.map a0 a1 x1 (@nil a0))) /\ (forall y0 : a0, forall y1 : list a0, ((@List.Forall a0 (fun y2 : a0 => (x0 y2) = (x1 y2)) y1) -> (@List.map a0 a1 x0 y1) = (@List.map a0 a1 x1 y1)) -> (@List.Forall a0 (fun y2 : a0 => (x0 y2) = (x1 y2)) (@cons a0 y0 y1)) -> (@List.map a0 a1 x0 (@cons a0 y0 y1)) = (@List.map a0 a1 x1 (@cons a0 y0 y1))).
Definition term93 (a0 : Type') (a1 : Type') (x0 : a0 -> a1) := fun y0 : a0 -> a1 => fun y1 : a0 => (x0 y1) = (y0 y1).
Definition term161 (a0 : Type') (a1 : Type') (x0 : type516 a0 a1) (x1 : a0 -> a1) (x2 : a0 -> a1) := @eq Prop ((x0 x1 x2) = (fun y0 : a0 => (fun y1 : a0 => (x1 y1) = (x2 y1)) y0)).
Definition term132 (a0 : Type') (a1 : Type') (x0 : type516 a0 a1) := (x0 = (fun y0 : a0 -> a1 => fun y1 : a0 -> a1 => fun y2 : a0 => (y0 y2) = (y1 y2))) -> forall y0 : list a0, forall y1 : a0 -> a1, forall y2 : a0, forall y3 : a0 -> a1, ((@List.Forall a0 (x0 y3 y1) y0) -> (@List.map a0 a1 y3 y0) = (@List.map a0 a1 y1 y0)) -> (((y3 y2) = (y1 y2)) /\ (@List.Forall a0 (x0 y3 y1) y0)) -> (@cons a1 (y3 y2) (@List.map a0 a1 y3 y0)) = (@cons a1 (y1 y2) (@List.map a0 a1 y1 y0)).
Definition term122 (a0 : Type') (a1 : Type') (x0 : type516 a0 a1) := (fun y0 : type516 a0 a1 => forall y1 : list a0, forall y2 : a0 -> a1, forall y3 : a0, forall y4 : a0 -> a1, ((@List.Forall a0 (y0 y4 y2) y1) -> (@List.map a0 a1 y4 y1) = (@List.map a0 a1 y2 y1)) -> (((y4 y3) = (y2 y3)) /\ (@List.Forall a0 (y0 y4 y2) y1)) -> (@cons a1 (y4 y3) (@List.map a0 a1 y4 y1)) = (@cons a1 (y2 y3) (@List.map a0 a1 y2 y1))) x0.
