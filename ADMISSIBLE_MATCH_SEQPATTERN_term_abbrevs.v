Require Import coq.
Require Import theory_hol.
Require Import hol_types.
Require Import hol_type_abbrevs.
Require Import hol_terms.
Definition term96 (a0 : Type') (a1 : Type') (a2 : Type') (a3 : Type') (a4 : Type') (a5 : Type') (x0 : type1470 a0 a1) (x1 : type560 a1 a2 a5) := fun y0 : a5 -> a0 => forall y1 : type566 a1 a2 a3 a4 a5, forall y2 : type566 a1 a2 a3 a4 a5, forall y3 : type564 a1 a2 a4 a5, ((@admissible a0 a2 a1 Prop a5 x0 x1 y0 (fun y4 : a1 -> a2 => fun y5 : a5 => exists y6 : a3, y1 y4 y5 (y3 y4 y5) y6)) /\ ((@admissible a0 a2 a1 a3 a5 x0 (fun y4 : a1 -> a2 => fun y5 : a5 => (x1 y4 y5) /\ (exists y6 : a3, y1 y4 y5 (y3 y4 y5) y6)) y0 (fun y4 : a1 -> a2 => fun y5 : a5 => @_MATCH a4 a3 (y3 y4 y5) (y1 y4 y5))) /\ (@admissible a0 a2 a1 a3 a5 x0 (fun y4 : a1 -> a2 => fun y5 : a5 => (x1 y4 y5) /\ (~ (exists y6 : a3, y1 y4 y5 (y3 y4 y5) y6))) y0 (fun y4 : a1 -> a2 => fun y5 : a5 => @_MATCH a4 a3 (y3 y4 y5) (y2 y4 y5))))) -> @admissible a0 a2 a1 a3 a5 x0 x1 y0 (fun y4 : a1 -> a2 => fun y5 : a5 => @_MATCH a4 a3 (y3 y4 y5) (@_SEQPATTERN a3 a4 (y1 y4 y5) (y2 y4 y5))).
Definition term18 (a0 : Type') (a1 : Type') (a2 : Type') (a3 : Type') (a4 : Type') (x0 : type564 a0 a1 a3 a4) (x1 : type566 a0 a1 a2 a3 a4) (x2 : type566 a0 a1 a2 a3 a4) := fun y0 : a0 -> a1 => fun y1 : a4 => @_MATCH a3 a2 (x0 y0 y1) (@_SEQPATTERN a2 a3 (x1 y0 y1) (x2 y0 y1)).
Definition term71 (a0 : Type') (a1 : Type') (a2 : Type') (a3 : Type') (a4 : Type') (x0 : type564 a0 a1 a3 a4) (x1 : type566 a0 a1 a2 a3 a4) (x2 : a0 -> a1) := fun y0 : a4 => @_MATCH a3 a2 (x0 x2 y0) (x1 x2 y0).
Definition term17 (a0 : Type') (a1 : Type') (a2 : Type') (a3 : Type') (a4 : Type') (x0 : type566 a0 a1 a2 a3 a4) (x1 : type564 a0 a1 a3 a4) (x2 : type566 a0 a1 a2 a3 a4) (x3 : a0 -> a1) := fun y0 : a4 => @COND a2 (exists y1 : a2, x0 x3 y0 (x1 x3 y0) y1) (@_MATCH a3 a2 (x1 x3 y0) (x0 x3 y0)) (@_MATCH a3 a2 (x1 x3 y0) (x2 x3 y0)).
Definition term36 (a0 : Type') (a1 : Type') (a2 : Type') (a3 : Type') (a4 : Type') (x0 : type560 a0 a1 a4) (x1 : type566 a0 a1 a2 a3 a4) (x2 : type564 a0 a1 a3 a4) (x3 : a0 -> a1) := fun y0 : a4 => (x0 x3 y0) /\ ((fun y1 : a0 -> a1 => fun y2 : a4 => exists y3 : a2, x1 y1 y2 (x2 y1 y2) y3) x3 y0).
Definition term28 (a0 : Type') (a1 : Type') (a2 : Type') (a3 : Type') (a4 : Type') (x0 : type566 a0 a1 a2 a3 a4) (x1 : type564 a0 a1 a3 a4) (x2 : a0 -> a1) := (fun y0 : a0 -> a1 => fun y1 : a4 => exists y2 : a2, x0 y0 y1 (x1 y0 y1) y2) x2.
Definition term51 (a0 : Type') (a1 : Type') (a2 : Type') (a3 : Type') (a4 : Type') (x0 : type560 a0 a1 a4) (x1 : type566 a0 a1 a2 a3 a4) (x2 : type564 a0 a1 a3 a4) (x3 : a0 -> a1) (x4 : a4) := (x0 x3 x4) /\ (~ (exists y0 : a2, x1 x3 x4 (x2 x3 x4) y0)).
Definition term89 (a0 : Type') (a1 : Type') (a2 : Type') (a3 : Type') (a4 : Type') (a5 : Type') (x0 : type1470 a0 a1) (x1 : type560 a1 a2 a5) (x2 : a5 -> a0) (x3 : type566 a1 a2 a3 a4 a5) := fun y0 : type566 a1 a2 a3 a4 a5 => forall y1 : type564 a1 a2 a4 a5, ((@admissible a0 a2 a1 Prop a5 x0 x1 x2 (fun y2 : a1 -> a2 => fun y3 : a5 => exists y4 : a3, x3 y2 y3 (y1 y2 y3) y4)) /\ ((@admissible a0 a2 a1 a3 a5 x0 (fun y2 : a1 -> a2 => fun y3 : a5 => (x1 y2 y3) /\ (exists y4 : a3, x3 y2 y3 (y1 y2 y3) y4)) x2 (fun y2 : a1 -> a2 => fun y3 : a5 => @_MATCH a4 a3 (y1 y2 y3) (x3 y2 y3))) /\ (@admissible a0 a2 a1 a3 a5 x0 (fun y2 : a1 -> a2 => fun y3 : a5 => (x1 y2 y3) /\ (~ (exists y4 : a3, x3 y2 y3 (y1 y2 y3) y4))) x2 (fun y2 : a1 -> a2 => fun y3 : a5 => @_MATCH a4 a3 (y1 y2 y3) (y0 y2 y3))))) -> @admissible a0 a2 a1 a3 a5 x0 x1 x2 (fun y2 : a1 -> a2 => fun y3 : a5 => @_MATCH a4 a3 (y1 y2 y3) (@_SEQPATTERN a3 a4 (x3 y2 y3) (y0 y2 y3))).
Definition term30 (a0 : Type') (a1 : Type') (a2 : Type') (a3 : Type') (a4 : Type') (x0 : type566 a0 a1 a2 a3 a4) (x1 : type564 a0 a1 a3 a4) (x2 : a0 -> a1) (x3 : a4) := (fun y0 : a0 -> a1 => fun y1 : a4 => exists y2 : a2, x0 y0 y1 (x1 y0 y1) y2) x2 x3.
Definition term87 (a0 : Type') (x0 : Prop) := forall y0 : a0, x0.
Definition term67 (a0 : Type') (a1 : Type') (a2 : Type') (a3 : Type') (a4 : Type') (a5 : Type') (x0 : type1470 a0 a1) (x1 : type560 a1 a2 a5) (x2 : type566 a1 a2 a3 a4 a5) (x3 : a5 -> a0) (x4 : type564 a1 a2 a4 a5) (x5 : type566 a1 a2 a3 a4 a5) := imp ((@admissible a0 a2 a1 Prop a5 x0 x1 x3 (fun y0 : a1 -> a2 => fun y1 : a5 => exists y2 : a3, x2 y0 y1 (x4 y0 y1) y2)) /\ ((@admissible a0 a2 a1 a3 a5 x0 (fun y0 : a1 -> a2 => fun y1 : a5 => (x1 y0 y1) /\ ((fun y2 : a1 -> a2 => fun y3 : a5 => exists y4 : a3, x2 y2 y3 (x4 y2 y3) y4) y0 y1)) x3 (fun y0 : a1 -> a2 => fun y1 : a5 => @_MATCH a4 a3 (x4 y0 y1) (x2 y0 y1))) /\ (@admissible a0 a2 a1 a3 a5 x0 (fun y0 : a1 -> a2 => fun y1 : a5 => (x1 y0 y1) /\ (~ ((fun y2 : a1 -> a2 => fun y3 : a5 => exists y4 : a3, x2 y2 y3 (x4 y2 y3) y4) y0 y1))) x3 (fun y0 : a1 -> a2 => fun y1 : a5 => @_MATCH a4 a3 (x4 y0 y1) (x5 y0 y1))))).
Definition term22 (a0 : Type') (a1 : Type') (a2 : Type') (a3 : Type') (a4 : Type') (a5 : Type') (x0 : type1470 a0 a1) (x1 : type560 a1 a2 a5) (x2 : type566 a1 a2 a3 a4 a5) (x3 : a5 -> a0) (x4 : type564 a1 a2 a4 a5) (x5 : type566 a1 a2 a3 a4 a5) := imp ((@admissible a0 a2 a1 Prop a5 x0 x1 x3 (fun y0 : a1 -> a2 => fun y1 : a5 => exists y2 : a3, x2 y0 y1 (x4 y0 y1) y2)) /\ ((@admissible a0 a2 a1 a3 a5 x0 (fun y0 : a1 -> a2 => fun y1 : a5 => (x1 y0 y1) /\ (exists y2 : a3, x2 y0 y1 (x4 y0 y1) y2)) x3 (fun y0 : a1 -> a2 => fun y1 : a5 => @_MATCH a4 a3 (x4 y0 y1) (x2 y0 y1))) /\ (@admissible a0 a2 a1 a3 a5 x0 (fun y0 : a1 -> a2 => fun y1 : a5 => (x1 y0 y1) /\ (~ (exists y2 : a3, x2 y0 y1 (x4 y0 y1) y2))) x3 (fun y0 : a1 -> a2 => fun y1 : a5 => @_MATCH a4 a3 (x4 y0 y1) (x5 y0 y1))))).
Definition term108 (a0 : Type') (a1 : Type') (a2 : Type') (a3 : Type') (a4 : Type') (a5 : Type') := forall y0 : type1470 a0 a1, forall y1 : type560 a1 a2 a5, forall y2 : a5 -> a0, forall y3 : type566 a1 a2 a3 a4 a5, forall y4 : type566 a1 a2 a3 a4 a5, forall y5 : type564 a1 a2 a4 a5, ((@admissible a0 a2 a1 Prop a5 y0 y1 y2 (fun y6 : a1 -> a2 => fun y7 : a5 => exists y8 : a3, y3 y6 y7 (y5 y6 y7) y8)) /\ ((@admissible a0 a2 a1 a3 a5 y0 (fun y6 : a1 -> a2 => fun y7 : a5 => (y1 y6 y7) /\ (exists y8 : a3, y3 y6 y7 (y5 y6 y7) y8)) y2 (fun y6 : a1 -> a2 => fun y7 : a5 => @_MATCH a4 a3 (y5 y6 y7) (y3 y6 y7))) /\ (@admissible a0 a2 a1 a3 a5 y0 (fun y6 : a1 -> a2 => fun y7 : a5 => (y1 y6 y7) /\ (~ (exists y8 : a3, y3 y6 y7 (y5 y6 y7) y8))) y2 (fun y6 : a1 -> a2 => fun y7 : a5 => @_MATCH a4 a3 (y5 y6 y7) (y4 y6 y7))))) -> @admissible a0 a2 a1 a3 a5 y0 y1 y2 (fun y6 : a1 -> a2 => fun y7 : a5 => @_MATCH a4 a3 (y5 y6 y7) (@_SEQPATTERN a3 a4 (y3 y6 y7) (y4 y6 y7))).
Definition term98 (a0 : Type') (a1 : Type') (a2 : Type') (a3 : Type') (a4 : Type') (a5 : Type') (x0 : type1470 a0 a1) (x1 : type560 a1 a2 a5) := forall y0 : a5 -> a0, forall y1 : type566 a1 a2 a3 a4 a5, forall y2 : type566 a1 a2 a3 a4 a5, forall y3 : type564 a1 a2 a4 a5, ((@admissible a0 a2 a1 Prop a5 x0 x1 y0 (fun y4 : a1 -> a2 => fun y5 : a5 => exists y6 : a3, y1 y4 y5 (y3 y4 y5) y6)) /\ ((@admissible a0 a2 a1 a3 a5 x0 (fun y4 : a1 -> a2 => fun y5 : a5 => (x1 y4 y5) /\ (exists y6 : a3, y1 y4 y5 (y3 y4 y5) y6)) y0 (fun y4 : a1 -> a2 => fun y5 : a5 => @_MATCH a4 a3 (y3 y4 y5) (y1 y4 y5))) /\ (@admissible a0 a2 a1 a3 a5 x0 (fun y4 : a1 -> a2 => fun y5 : a5 => (x1 y4 y5) /\ (~ (exists y6 : a3, y1 y4 y5 (y3 y4 y5) y6))) y0 (fun y4 : a1 -> a2 => fun y5 : a5 => @_MATCH a4 a3 (y3 y4 y5) (y2 y4 y5))))) -> @admissible a0 a2 a1 a3 a5 x0 x1 y0 (fun y4 : a1 -> a2 => fun y5 : a5 => @_MATCH a4 a3 (y3 y4 y5) (@_SEQPATTERN a3 a4 (y1 y4 y5) (y2 y4 y5))).
Definition term5 (a0 : Type') (a1 : Type') (a2 : Type') (a3 : Type') (a4 : Type') (x0 : type1470 a0 a1) (x1 : type560 a1 a2 a4) (x2 : type560 a1 a2 a4) := forall y0 : a4 -> a0, forall y1 : type564 a1 a2 a3 a4, forall y2 : type564 a1 a2 a3 a4, ((@admissible a0 a2 a1 Prop a4 x0 x1 y0 x2) /\ ((@admissible a0 a2 a1 a3 a4 x0 (fun y3 : a1 -> a2 => fun y4 : a4 => (x1 y3 y4) /\ (x2 y3 y4)) y0 y1) /\ (@admissible a0 a2 a1 a3 a4 x0 (fun y3 : a1 -> a2 => fun y4 : a4 => (x1 y3 y4) /\ (~ (x2 y3 y4))) y0 y2))) -> @admissible a0 a2 a1 a3 a4 x0 x1 y0 (fun y3 : a1 -> a2 => fun y4 : a4 => @COND a3 (x2 y3 y4) (y1 y3 y4) (y2 y3 y4)).
Definition term38 (a0 : Type') (a1 : Type') (a2 : Type') (a3 : Type') (a4 : Type') (x0 : type560 a0 a1 a4) (x1 : type566 a0 a1 a2 a3 a4) (x2 : type564 a0 a1 a3 a4) := fun y0 : a0 -> a1 => fun y1 : a4 => (x0 y0 y1) /\ ((fun y2 : a0 -> a1 => fun y3 : a4 => exists y4 : a2, x1 y2 y3 (x2 y2 y3) y4) y0 y1).
Definition term45 (a0 : Type') (a1 : Type') (a2 : Type') (a3 : Type') (a4 : Type') (a5 : Type') (x0 : type1470 a0 a1) (x1 : type560 a1 a2 a5) (x2 : a5 -> a0) (x3 : type564 a1 a2 a4 a5) (x4 : type566 a1 a2 a3 a4 a5) := @admissible a0 a2 a1 a3 a5 x0 (fun y0 : a1 -> a2 => fun y1 : a5 => (x1 y0 y1) /\ (exists y2 : a3, x4 y0 y1 (x3 y0 y1) y2)) x2 (fun y0 : a1 -> a2 => fun y1 : a5 => @_MATCH a4 a3 (x3 y0 y1) (x4 y0 y1)).
Definition term44 (a0 : Type') (a1 : Type') (a2 : Type') (a3 : Type') (a4 : Type') (a5 : Type') (x0 : type1470 a0 a1) (x1 : type560 a1 a2 a5) (x2 : a5 -> a0) (x3 : type564 a1 a2 a4 a5) (x4 : type566 a1 a2 a3 a4 a5) := @admissible a0 a2 a1 a3 a5 x0 (fun y0 : a1 -> a2 => fun y1 : a5 => (x1 y0 y1) /\ ((fun y2 : a1 -> a2 => fun y3 : a5 => exists y4 : a3, x4 y2 y3 (x3 y2 y3) y4) y0 y1)) x2 (fun y0 : a1 -> a2 => fun y1 : a5 => @_MATCH a4 a3 (x3 y0 y1) (x4 y0 y1)).
Definition term70 (a0 : Type') (a1 : Type') (a2 : Type') (a3 : Type') (a4 : Type') (x0 : type564 a0 a1 a3 a4) (x1 : type566 a0 a1 a2 a3 a4) (x2 : a0 -> a1) := (fun y0 : a0 -> a1 => fun y1 : a4 => @_MATCH a3 a2 (x0 y0 y1) (x1 y0 y1)) x2.
Definition term31 (a0 : Type') (a1 : Type') (a2 : Type') (a3 : Type') (a4 : Type') (x0 : type566 a0 a1 a2 a3 a4) (x1 : type564 a0 a1 a3 a4) (x2 : a0 -> a1) (x3 : a4) := (fun y0 : a4 => exists y1 : a2, x0 x2 y0 (x1 x2 y0) y1) x3.
Definition term110 (a0 : Type') (a1 : Type') (x0 : Prop) := forall y0 : type1470 a0 a1, x0.
Definition term100 (a0 : Type') (a1 : Type') (x0 : Prop) := forall y0 : a1 -> a0, x0.
Definition term6 (a0 : Type') (a1 : Type') (a2 : Type') (a3 : Type') (a4 : Type') (x0 : type1470 a0 a1) (x1 : type560 a1 a2 a4) (x2 : type560 a1 a2 a4) (x3 : a4 -> a0) := (fun y0 : a4 -> a0 => forall y1 : type564 a1 a2 a3 a4, forall y2 : type564 a1 a2 a3 a4, ((@admissible a0 a2 a1 Prop a4 x0 x1 y0 x2) /\ ((@admissible a0 a2 a1 a3 a4 x0 (fun y3 : a1 -> a2 => fun y4 : a4 => (x1 y3 y4) /\ (x2 y3 y4)) y0 y1) /\ (@admissible a0 a2 a1 a3 a4 x0 (fun y3 : a1 -> a2 => fun y4 : a4 => (x1 y3 y4) /\ (~ (x2 y3 y4))) y0 y2))) -> @admissible a0 a2 a1 a3 a4 x0 x1 y0 (fun y3 : a1 -> a2 => fun y4 : a4 => @COND a3 (x2 y3 y4) (y1 y3 y4) (y2 y3 y4))) x3.
Definition term103 (a0 : Type') (a1 : Type') (a2 : Type') (a3 : Type') (a4 : Type') (a5 : Type') (x0 : type1470 a0 a1) := forall y0 : type560 a1 a2 a5, forall y1 : a5 -> a0, forall y2 : type566 a1 a2 a3 a4 a5, forall y3 : type566 a1 a2 a3 a4 a5, forall y4 : type564 a1 a2 a4 a5, ((@admissible a0 a2 a1 Prop a5 x0 y0 y1 (fun y5 : a1 -> a2 => fun y6 : a5 => exists y7 : a3, y2 y5 y6 (y4 y5 y6) y7)) /\ ((@admissible a0 a2 a1 a3 a5 x0 (fun y5 : a1 -> a2 => fun y6 : a5 => (y0 y5 y6) /\ (exists y7 : a3, y2 y5 y6 (y4 y5 y6) y7)) y1 (fun y5 : a1 -> a2 => fun y6 : a5 => @_MATCH a4 a3 (y4 y5 y6) (y2 y5 y6))) /\ (@admissible a0 a2 a1 a3 a5 x0 (fun y5 : a1 -> a2 => fun y6 : a5 => (y0 y5 y6) /\ (~ (exists y7 : a3, y2 y5 y6 (y4 y5 y6) y7))) y1 (fun y5 : a1 -> a2 => fun y6 : a5 => @_MATCH a4 a3 (y4 y5 y6) (y3 y5 y6))))) -> @admissible a0 a2 a1 a3 a5 x0 y0 y1 (fun y5 : a1 -> a2 => fun y6 : a5 => @_MATCH a4 a3 (y4 y5 y6) (@_SEQPATTERN a3 a4 (y2 y5 y6) (y3 y5 y6))).
Definition term95 (a0 : Type') (a1 : Type') (a2 : Type') (a3 : Type') (a4 : Type') (a5 : Type') (x0 : type1470 a0 a1) (x1 : type560 a1 a2 a5) (x2 : a5 -> a0) := forall y0 : type566 a1 a2 a3 a4 a5, forall y1 : type566 a1 a2 a3 a4 a5, forall y2 : type564 a1 a2 a4 a5, ((@admissible a0 a2 a1 Prop a5 x0 x1 x2 (fun y3 : a1 -> a2 => fun y4 : a5 => exists y5 : a3, y0 y3 y4 (y2 y3 y4) y5)) /\ ((@admissible a0 a2 a1 a3 a5 x0 (fun y3 : a1 -> a2 => fun y4 : a5 => (x1 y3 y4) /\ (exists y5 : a3, y0 y3 y4 (y2 y3 y4) y5)) x2 (fun y3 : a1 -> a2 => fun y4 : a5 => @_MATCH a4 a3 (y2 y3 y4) (y0 y3 y4))) /\ (@admissible a0 a2 a1 a3 a5 x0 (fun y3 : a1 -> a2 => fun y4 : a5 => (x1 y3 y4) /\ (~ (exists y5 : a3, y0 y3 y4 (y2 y3 y4) y5))) x2 (fun y3 : a1 -> a2 => fun y4 : a5 => @_MATCH a4 a3 (y2 y3 y4) (y1 y3 y4))))) -> @admissible a0 a2 a1 a3 a5 x0 x1 x2 (fun y3 : a1 -> a2 => fun y4 : a5 => @_MATCH a4 a3 (y2 y3 y4) (@_SEQPATTERN a3 a4 (y0 y3 y4) (y1 y3 y4))).
Definition term3 (a0 : Type') (a1 : Type') (a2 : Type') (a3 : Type') (a4 : Type') (x0 : type1470 a0 a1) (x1 : type560 a1 a2 a4) := forall y0 : type560 a1 a2 a4, forall y1 : a4 -> a0, forall y2 : type564 a1 a2 a3 a4, forall y3 : type564 a1 a2 a3 a4, ((@admissible a0 a2 a1 Prop a4 x0 x1 y1 y0) /\ ((@admissible a0 a2 a1 a3 a4 x0 (fun y4 : a1 -> a2 => fun y5 : a4 => (x1 y4 y5) /\ (y0 y4 y5)) y1 y2) /\ (@admissible a0 a2 a1 a3 a4 x0 (fun y4 : a1 -> a2 => fun y5 : a4 => (x1 y4 y5) /\ (~ (y0 y4 y5))) y1 y3))) -> @admissible a0 a2 a1 a3 a4 x0 x1 y1 (fun y4 : a1 -> a2 => fun y5 : a4 => @COND a3 (y0 y4 y5) (y2 y4 y5) (y3 y4 y5)).
Definition term1 (a0 : Type') (a1 : Type') (a2 : Type') (a3 : Type') (a4 : Type') (x0 : type1470 a0 a1) := forall y0 : type560 a1 a2 a4, forall y1 : type560 a1 a2 a4, forall y2 : a4 -> a0, forall y3 : type564 a1 a2 a3 a4, forall y4 : type564 a1 a2 a3 a4, ((@admissible a0 a2 a1 Prop a4 x0 y0 y2 y1) /\ ((@admissible a0 a2 a1 a3 a4 x0 (fun y5 : a1 -> a2 => fun y6 : a4 => (y0 y5 y6) /\ (y1 y5 y6)) y2 y3) /\ (@admissible a0 a2 a1 a3 a4 x0 (fun y5 : a1 -> a2 => fun y6 : a4 => (y0 y5 y6) /\ (~ (y1 y5 y6))) y2 y4))) -> @admissible a0 a2 a1 a3 a4 x0 y0 y2 (fun y5 : a1 -> a2 => fun y6 : a4 => @COND a3 (y1 y5 y6) (y3 y5 y6) (y4 y5 y6)).
Definition term13 (a0 : Type') (a1 : Type') (x0 : type1470 a0 a1) (x1 : a1) (x2 : type1470 a0 a1) := @COND a0 (exists y0 : a0, x0 x1 y0) (@_MATCH a1 a0 x1 x0) (@_MATCH a1 a0 x1 x2).
Definition term34 (a0 : Type') (a1 : Type') (a2 : Type') (a3 : Type') (a4 : Type') (x0 : type560 a0 a1 a4) (x1 : type566 a0 a1 a2 a3 a4) (x2 : type564 a0 a1 a3 a4) (x3 : a0 -> a1) (x4 : a4) := (x0 x3 x4) /\ ((fun y0 : a0 -> a1 => fun y1 : a4 => exists y2 : a2, x1 y0 y1 (x2 y0 y1) y2) x3 x4).
Definition term55 (a0 : Type') (a1 : Type') (a2 : Type') (a3 : Type') (a4 : Type') (x0 : type560 a0 a1 a4) (x1 : type566 a0 a1 a2 a3 a4) (x2 : type564 a0 a1 a3 a4) := fun y0 : a0 -> a1 => fun y1 : a4 => (x0 y0 y1) /\ (~ (exists y2 : a2, x1 y0 y1 (x2 y0 y1) y2)).
Definition term79 (a0 : Type') (a1 : Type') (a2 : Type') (a3 : Type') (a4 : Type') (x0 : type566 a0 a1 a2 a3 a4) (x1 : type564 a0 a1 a3 a4) (x2 : type566 a0 a1 a2 a3 a4) := fun y0 : a0 -> a1 => fun y1 : a4 => @COND a2 ((fun y2 : a0 -> a1 => fun y3 : a4 => exists y4 : a2, x0 y2 y3 (x1 y2 y3) y4) y0 y1) ((fun y2 : a0 -> a1 => fun y3 : a4 => @_MATCH a3 a2 (x1 y2 y3) (x0 y2 y3)) y0 y1) ((fun y2 : a0 -> a1 => fun y3 : a4 => @_MATCH a3 a2 (x1 y2 y3) (x2 y2 y3)) y0 y1).
Definition term41 (a0 : Type') (a1 : Type') (a2 : Type') (a3 : Type') (a4 : Type') (a5 : Type') (x0 : type1470 a0 a1) (x1 : type560 a1 a2 a5) (x2 : type566 a1 a2 a3 a4 a5) (x3 : type564 a1 a2 a4 a5) := @admissible a0 a2 a1 a3 a5 x0 (fun y0 : a1 -> a2 => fun y1 : a5 => (x1 y0 y1) /\ (exists y2 : a3, x2 y0 y1 (x3 y0 y1) y2)).
Definition term74 (a0 : Type') (a1 : Type') (a2 : Type') (a3 : Type') (a4 : Type') (x0 : type564 a0 a1 a3 a4) (x1 : type566 a0 a1 a2 a3 a4) (x2 : a0 -> a1) (x3 : a4) := @_MATCH a3 a2 (x0 x2 x3) (x1 x2 x3).
Definition term25 (a0 : Type') (a1 : Type') (a2 : Type') (a3 : Type') (a4 : Type') (a5 : Type') (x0 : type1470 a0 a1) (x1 : type560 a1 a2 a5) (x2 : a5 -> a0) (x3 : type566 a1 a2 a3 a4 a5) (x4 : type564 a1 a2 a4 a5) (x5 : type566 a1 a2 a3 a4 a5) := ((@admissible a0 a2 a1 Prop a5 x0 x1 x2 (fun y0 : a1 -> a2 => fun y1 : a5 => exists y2 : a3, x3 y0 y1 (x4 y0 y1) y2)) /\ ((@admissible a0 a2 a1 a3 a5 x0 (fun y0 : a1 -> a2 => fun y1 : a5 => (x1 y0 y1) /\ ((fun y2 : a1 -> a2 => fun y3 : a5 => exists y4 : a3, x3 y2 y3 (x4 y2 y3) y4) y0 y1)) x2 (fun y0 : a1 -> a2 => fun y1 : a5 => @_MATCH a4 a3 (x4 y0 y1) (x3 y0 y1))) /\ (@admissible a0 a2 a1 a3 a5 x0 (fun y0 : a1 -> a2 => fun y1 : a5 => (x1 y0 y1) /\ (~ ((fun y2 : a1 -> a2 => fun y3 : a5 => exists y4 : a3, x3 y2 y3 (x4 y2 y3) y4) y0 y1))) x2 (fun y0 : a1 -> a2 => fun y1 : a5 => @_MATCH a4 a3 (x4 y0 y1) (x5 y0 y1))))) -> @admissible a0 a2 a1 a3 a5 x0 x1 x2 (fun y0 : a1 -> a2 => fun y1 : a5 => @COND a3 ((fun y2 : a1 -> a2 => fun y3 : a5 => exists y4 : a3, x3 y2 y3 (x4 y2 y3) y4) y0 y1) ((fun y2 : a1 -> a2 => fun y3 : a5 => @_MATCH a4 a3 (x4 y2 y3) (x3 y2 y3)) y0 y1) ((fun y2 : a1 -> a2 => fun y3 : a5 => @_MATCH a4 a3 (x4 y2 y3) (x5 y2 y3)) y0 y1)).
Definition term24 (a0 : Type') (a1 : Type') (a2 : Type') (a3 : Type') (a4 : Type') (a5 : Type') (x0 : type1470 a0 a1) (x1 : type560 a1 a2 a5) (x2 : a5 -> a0) (x3 : type566 a1 a2 a3 a4 a5) (x4 : type564 a1 a2 a4 a5) (x5 : type566 a1 a2 a3 a4 a5) := ((@admissible a0 a2 a1 Prop a5 x0 x1 x2 (fun y0 : a1 -> a2 => fun y1 : a5 => exists y2 : a3, x3 y0 y1 (x4 y0 y1) y2)) /\ ((@admissible a0 a2 a1 a3 a5 x0 (fun y0 : a1 -> a2 => fun y1 : a5 => (x1 y0 y1) /\ (exists y2 : a3, x3 y0 y1 (x4 y0 y1) y2)) x2 (fun y0 : a1 -> a2 => fun y1 : a5 => @_MATCH a4 a3 (x4 y0 y1) (x3 y0 y1))) /\ (@admissible a0 a2 a1 a3 a5 x0 (fun y0 : a1 -> a2 => fun y1 : a5 => (x1 y0 y1) /\ (~ (exists y2 : a3, x3 y0 y1 (x4 y0 y1) y2))) x2 (fun y0 : a1 -> a2 => fun y1 : a5 => @_MATCH a4 a3 (x4 y0 y1) (x5 y0 y1))))) -> @admissible a0 a2 a1 a3 a5 x0 x1 x2 (fun y0 : a1 -> a2 => fun y1 : a5 => @COND a3 (exists y2 : a3, x3 y0 y1 (x4 y0 y1) y2) (@_MATCH a4 a3 (x4 y0 y1) (x3 y0 y1)) (@_MATCH a4 a3 (x4 y0 y1) (x5 y0 y1))).
Definition term23 (a0 : Type') (a1 : Type') (a2 : Type') (a3 : Type') (a4 : Type') (a5 : Type') (x0 : type1470 a0 a1) (x1 : type560 a1 a2 a5) (x2 : a5 -> a0) (x3 : type564 a1 a2 a4 a5) (x4 : type566 a1 a2 a3 a4 a5) (x5 : type566 a1 a2 a3 a4 a5) := ((@admissible a0 a2 a1 Prop a5 x0 x1 x2 (fun y0 : a1 -> a2 => fun y1 : a5 => exists y2 : a3, x4 y0 y1 (x3 y0 y1) y2)) /\ ((@admissible a0 a2 a1 a3 a5 x0 (fun y0 : a1 -> a2 => fun y1 : a5 => (x1 y0 y1) /\ (exists y2 : a3, x4 y0 y1 (x3 y0 y1) y2)) x2 (fun y0 : a1 -> a2 => fun y1 : a5 => @_MATCH a4 a3 (x3 y0 y1) (x4 y0 y1))) /\ (@admissible a0 a2 a1 a3 a5 x0 (fun y0 : a1 -> a2 => fun y1 : a5 => (x1 y0 y1) /\ (~ (exists y2 : a3, x4 y0 y1 (x3 y0 y1) y2))) x2 (fun y0 : a1 -> a2 => fun y1 : a5 => @_MATCH a4 a3 (x3 y0 y1) (x5 y0 y1))))) -> @admissible a0 a2 a1 a3 a5 x0 x1 x2 (fun y0 : a1 -> a2 => fun y1 : a5 => @_MATCH a4 a3 (x3 y0 y1) (@_SEQPATTERN a3 a4 (x4 y0 y1) (x5 y0 y1))).
Definition term16 (a0 : Type') (a1 : Type') (a2 : Type') (a3 : Type') (a4 : Type') (x0 : type564 a0 a1 a3 a4) (x1 : type566 a0 a1 a2 a3 a4) (x2 : type566 a0 a1 a2 a3 a4) (x3 : a0 -> a1) := fun y0 : a4 => @_MATCH a3 a2 (x0 x3 y0) (@_SEQPATTERN a2 a3 (x1 x3 y0) (x2 x3 y0)).
Definition term52 (a0 : Type') (a1 : Type') (a2 : Type') (a3 : Type') (a4 : Type') (x0 : type560 a0 a1 a4) (x1 : type566 a0 a1 a2 a3 a4) (x2 : type564 a0 a1 a3 a4) (x3 : a0 -> a1) := fun y0 : a4 => (x0 x3 y0) /\ (~ ((fun y1 : a0 -> a1 => fun y2 : a4 => exists y3 : a2, x1 y1 y2 (x2 y1 y2) y3) x3 y0)).
Definition term19 (a0 : Type') (a1 : Type') (a2 : Type') (a3 : Type') (a4 : Type') (x0 : type566 a0 a1 a2 a3 a4) (x1 : type564 a0 a1 a3 a4) (x2 : type566 a0 a1 a2 a3 a4) := fun y0 : a0 -> a1 => fun y1 : a4 => @COND a2 (exists y2 : a2, x0 y0 y1 (x1 y0 y1) y2) (@_MATCH a3 a2 (x1 y0 y1) (x0 y0 y1)) (@_MATCH a3 a2 (x1 y0 y1) (x2 y0 y1)).
Definition term32 (a0 : Type') (a1 : Type') (a2 : Type') (a3 : Type') (a4 : Type') (x0 : type566 a0 a1 a2 a3 a4) (x1 : type564 a0 a1 a3 a4) (x2 : a0 -> a1) (x3 : a4) := exists y0 : a2, x0 x2 x3 (x1 x2 x3) y0.
Definition term54 (a0 : Type') (a1 : Type') (a2 : Type') (a3 : Type') (a4 : Type') (x0 : type560 a0 a1 a4) (x1 : type566 a0 a1 a2 a3 a4) (x2 : type564 a0 a1 a3 a4) := fun y0 : a0 -> a1 => fun y1 : a4 => (x0 y0 y1) /\ (~ ((fun y2 : a0 -> a1 => fun y3 : a4 => exists y4 : a2, x1 y2 y3 (x2 y2 y3) y4) y0 y1)).
Definition term35 (a0 : Type') (a1 : Type') (a2 : Type') (a3 : Type') (a4 : Type') (x0 : type560 a0 a1 a4) (x1 : type566 a0 a1 a2 a3 a4) (x2 : type564 a0 a1 a3 a4) (x3 : a0 -> a1) (x4 : a4) := (x0 x3 x4) /\ (exists y0 : a2, x1 x3 x4 (x2 x3 x4) y0).
Definition term64 (a0 : Type') (a1 : Type') (a2 : Type') (a3 : Type') (a4 : Type') (a5 : Type') (x0 : type1470 a0 a1) (x1 : type560 a1 a2 a5) (x2 : a5 -> a0) (x3 : type566 a1 a2 a3 a4 a5) (x4 : type564 a1 a2 a4 a5) := and (@admissible a0 a2 a1 Prop a5 x0 x1 x2 (fun y0 : a1 -> a2 => fun y1 : a5 => exists y2 : a3, x3 y0 y1 (x4 y0 y1) y2)).
Definition term37 (a0 : Type') (a1 : Type') (a2 : Type') (a3 : Type') (a4 : Type') (x0 : type560 a0 a1 a4) (x1 : type566 a0 a1 a2 a3 a4) (x2 : type564 a0 a1 a3 a4) (x3 : a0 -> a1) := fun y0 : a4 => (x0 x3 y0) /\ (exists y1 : a2, x1 x3 y0 (x2 x3 y0) y1).
Definition term107 (a0 : Type') (a1 : Type') := fun y0 : type1470 a0 a1 => True.
Definition term106 (a0 : Type') (a1 : Type') (a2 : Type') (a3 : Type') (a4 : Type') (a5 : Type') := fun y0 : type1470 a0 a1 => forall y1 : type560 a1 a2 a5, forall y2 : a5 -> a0, forall y3 : type566 a1 a2 a3 a4 a5, forall y4 : type566 a1 a2 a3 a4 a5, forall y5 : type564 a1 a2 a4 a5, ((@admissible a0 a2 a1 Prop a5 y0 y1 y2 (fun y6 : a1 -> a2 => fun y7 : a5 => exists y8 : a3, y3 y6 y7 (y5 y6 y7) y8)) /\ ((@admissible a0 a2 a1 a3 a5 y0 (fun y6 : a1 -> a2 => fun y7 : a5 => (y1 y6 y7) /\ (exists y8 : a3, y3 y6 y7 (y5 y6 y7) y8)) y2 (fun y6 : a1 -> a2 => fun y7 : a5 => @_MATCH a4 a3 (y5 y6 y7) (y3 y6 y7))) /\ (@admissible a0 a2 a1 a3 a5 y0 (fun y6 : a1 -> a2 => fun y7 : a5 => (y1 y6 y7) /\ (~ (exists y8 : a3, y3 y6 y7 (y5 y6 y7) y8))) y2 (fun y6 : a1 -> a2 => fun y7 : a5 => @_MATCH a4 a3 (y5 y6 y7) (y4 y6 y7))))) -> @admissible a0 a2 a1 a3 a5 y0 y1 y2 (fun y6 : a1 -> a2 => fun y7 : a5 => @_MATCH a4 a3 (y5 y6 y7) (@_SEQPATTERN a3 a4 (y3 y6 y7) (y4 y6 y7))).
Definition term104 (a0 : Type') (a1 : Type') (a2 : Type') := forall y0 : type560 a0 a1 a2, True.
Definition term92 (a0 : Type') (a1 : Type') (a2 : Type') (a3 : Type') (a4 : Type') := forall y0 : type566 a0 a1 a2 a3 a4, True.
Definition term86 (a0 : Type') (a1 : Type') (a2 : Type') (a3 : Type') := forall y0 : type564 a0 a1 a2 a3, True.
Definition term48 (a0 : Type') (a1 : Type') (a2 : Type') (a3 : Type') (a4 : Type') (x0 : type566 a0 a1 a2 a3 a4) (x1 : type564 a0 a1 a3 a4) (x2 : a0 -> a1) (x3 : a4) := ~ ((fun y0 : a0 -> a1 => fun y1 : a4 => exists y2 : a2, x0 y0 y1 (x1 y0 y1) y2) x2 x3).
Definition term59 (a0 : Type') (a1 : Type') (a2 : Type') (a3 : Type') (a4 : Type') (a5 : Type') (x0 : type1470 a0 a1) (x1 : type560 a1 a2 a5) (x2 : type566 a1 a2 a3 a4 a5) (x3 : type564 a1 a2 a4 a5) (x4 : a5 -> a0) := @admissible a0 a2 a1 a3 a5 x0 (fun y0 : a1 -> a2 => fun y1 : a5 => (x1 y0 y1) /\ (~ (exists y2 : a3, x2 y0 y1 (x3 y0 y1) y2))) x4.
Definition term58 (a0 : Type') (a1 : Type') (a2 : Type') (a3 : Type') (a4 : Type') (a5 : Type') (x0 : type1470 a0 a1) (x1 : type560 a1 a2 a5) (x2 : type566 a1 a2 a3 a4 a5) (x3 : type564 a1 a2 a4 a5) (x4 : a5 -> a0) := @admissible a0 a2 a1 a3 a5 x0 (fun y0 : a1 -> a2 => fun y1 : a5 => (x1 y0 y1) /\ (~ ((fun y2 : a1 -> a2 => fun y3 : a5 => exists y4 : a3, x2 y2 y3 (x3 y2 y3) y4) y0 y1))) x4.
Definition term43 (a0 : Type') (a1 : Type') (a2 : Type') (a3 : Type') (a4 : Type') (a5 : Type') (x0 : type1470 a0 a1) (x1 : type560 a1 a2 a5) (x2 : type566 a1 a2 a3 a4 a5) (x3 : type564 a1 a2 a4 a5) (x4 : a5 -> a0) := @admissible a0 a2 a1 a3 a5 x0 (fun y0 : a1 -> a2 => fun y1 : a5 => (x1 y0 y1) /\ (exists y2 : a3, x2 y0 y1 (x3 y0 y1) y2)) x4.
Definition term42 (a0 : Type') (a1 : Type') (a2 : Type') (a3 : Type') (a4 : Type') (a5 : Type') (x0 : type1470 a0 a1) (x1 : type560 a1 a2 a5) (x2 : type566 a1 a2 a3 a4 a5) (x3 : type564 a1 a2 a4 a5) (x4 : a5 -> a0) := @admissible a0 a2 a1 a3 a5 x0 (fun y0 : a1 -> a2 => fun y1 : a5 => (x1 y0 y1) /\ ((fun y2 : a1 -> a2 => fun y3 : a5 => exists y4 : a3, x2 y2 y3 (x3 y2 y3) y4) y0 y1)) x4.
Definition term8 (a0 : Type') (a1 : Type') (a2 : Type') (a3 : Type') (a4 : Type') (x0 : type1470 a0 a1) (x1 : type560 a1 a2 a4) (x2 : a4 -> a0) (x3 : type560 a1 a2 a4) (x4 : type564 a1 a2 a3 a4) := (fun y0 : type564 a1 a2 a3 a4 => forall y1 : type564 a1 a2 a3 a4, ((@admissible a0 a2 a1 Prop a4 x0 x1 x2 x3) /\ ((@admissible a0 a2 a1 a3 a4 x0 (fun y2 : a1 -> a2 => fun y3 : a4 => (x1 y2 y3) /\ (x3 y2 y3)) x2 y0) /\ (@admissible a0 a2 a1 a3 a4 x0 (fun y2 : a1 -> a2 => fun y3 : a4 => (x1 y2 y3) /\ (~ (x3 y2 y3))) x2 y1))) -> @admissible a0 a2 a1 a3 a4 x0 x1 x2 (fun y2 : a1 -> a2 => fun y3 : a4 => @COND a3 (x3 y2 y3) (y0 y2 y3) (y1 y2 y3))) x4.
Definition term75 (a0 : Type') (a1 : Type') (a2 : Type') (a3 : Type') (a4 : Type') (x0 : type564 a0 a1 a3 a4) (x1 : type566 a0 a1 a2 a3 a4) (x2 : a0 -> a1) (x3 : a4) := @COND a2 ((fun y0 : a0 -> a1 => fun y1 : a4 => exists y2 : a2, x1 y0 y1 (x0 y0 y1) y2) x2 x3) ((fun y0 : a0 -> a1 => fun y1 : a4 => @_MATCH a3 a2 (x0 y0 y1) (x1 y0 y1)) x2 x3).
Definition term102 (a0 : Type') (a1 : Type') (a2 : Type') := fun y0 : type560 a0 a1 a2 => True.
Definition term90 (a0 : Type') (a1 : Type') (a2 : Type') (a3 : Type') (a4 : Type') := fun y0 : type566 a0 a1 a2 a3 a4 => True.
Definition term84 (a0 : Type') (a1 : Type') (a2 : Type') (a3 : Type') := fun y0 : type564 a0 a1 a2 a3 => True.
Definition term33 (a0 : Type') (a1 : Type') (a2 : Type') (x0 : type560 a0 a1 a2) (x1 : a0 -> a1) (x2 : a2) := and (x0 x1 x2).
Definition term61 (a0 : Type') (a1 : Type') (a2 : Type') (a3 : Type') (a4 : Type') (a5 : Type') (x0 : type1470 a0 a1) (x1 : type560 a1 a2 a5) (x2 : type566 a1 a2 a3 a4 a5) (x3 : a5 -> a0) (x4 : type564 a1 a2 a4 a5) (x5 : type566 a1 a2 a3 a4 a5) := @admissible a0 a2 a1 a3 a5 x0 (fun y0 : a1 -> a2 => fun y1 : a5 => (x1 y0 y1) /\ (~ (exists y2 : a3, x2 y0 y1 (x4 y0 y1) y2))) x3 (fun y0 : a1 -> a2 => fun y1 : a5 => @_MATCH a4 a3 (x4 y0 y1) (x5 y0 y1)).
Definition term60 (a0 : Type') (a1 : Type') (a2 : Type') (a3 : Type') (a4 : Type') (a5 : Type') (x0 : type1470 a0 a1) (x1 : type560 a1 a2 a5) (x2 : type566 a1 a2 a3 a4 a5) (x3 : a5 -> a0) (x4 : type564 a1 a2 a4 a5) (x5 : type566 a1 a2 a3 a4 a5) := @admissible a0 a2 a1 a3 a5 x0 (fun y0 : a1 -> a2 => fun y1 : a5 => (x1 y0 y1) /\ (~ ((fun y2 : a1 -> a2 => fun y3 : a5 => exists y4 : a3, x2 y2 y3 (x4 y2 y3) y4) y0 y1))) x3 (fun y0 : a1 -> a2 => fun y1 : a5 => @_MATCH a4 a3 (x4 y0 y1) (x5 y0 y1)).
Definition term50 (a0 : Type') (a1 : Type') (a2 : Type') (a3 : Type') (a4 : Type') (x0 : type560 a0 a1 a4) (x1 : type566 a0 a1 a2 a3 a4) (x2 : type564 a0 a1 a3 a4) (x3 : a0 -> a1) (x4 : a4) := (x0 x3 x4) /\ (~ ((fun y0 : a0 -> a1 => fun y1 : a4 => exists y2 : a2, x1 y0 y1 (x2 y0 y1) y2) x3 x4)).
Definition term2 (a0 : Type') (a1 : Type') (a2 : Type') (a3 : Type') (a4 : Type') (x0 : type1470 a0 a1) (x1 : type560 a1 a2 a4) := (fun y0 : type560 a1 a2 a4 => forall y1 : type560 a1 a2 a4, forall y2 : a4 -> a0, forall y3 : type564 a1 a2 a3 a4, forall y4 : type564 a1 a2 a3 a4, ((@admissible a0 a2 a1 Prop a4 x0 y0 y2 y1) /\ ((@admissible a0 a2 a1 a3 a4 x0 (fun y5 : a1 -> a2 => fun y6 : a4 => (y0 y5 y6) /\ (y1 y5 y6)) y2 y3) /\ (@admissible a0 a2 a1 a3 a4 x0 (fun y5 : a1 -> a2 => fun y6 : a4 => (y0 y5 y6) /\ (~ (y1 y5 y6))) y2 y4))) -> @admissible a0 a2 a1 a3 a4 x0 y0 y2 (fun y5 : a1 -> a2 => fun y6 : a4 => @COND a3 (y1 y5 y6) (y3 y5 y6) (y4 y5 y6))) x1.
Definition term83 (a0 : Type') (a1 : Type') (a2 : Type') (a3 : Type') (a4 : Type') (a5 : Type') (x0 : type1470 a0 a1) (x1 : type560 a1 a2 a5) (x2 : a5 -> a0) (x3 : type566 a1 a2 a3 a4 a5) (x4 : type566 a1 a2 a3 a4 a5) := fun y0 : type564 a1 a2 a4 a5 => ((@admissible a0 a2 a1 Prop a5 x0 x1 x2 (fun y1 : a1 -> a2 => fun y2 : a5 => exists y3 : a3, x3 y1 y2 (y0 y1 y2) y3)) /\ ((@admissible a0 a2 a1 a3 a5 x0 (fun y1 : a1 -> a2 => fun y2 : a5 => (x1 y1 y2) /\ (exists y3 : a3, x3 y1 y2 (y0 y1 y2) y3)) x2 (fun y1 : a1 -> a2 => fun y2 : a5 => @_MATCH a4 a3 (y0 y1 y2) (x3 y1 y2))) /\ (@admissible a0 a2 a1 a3 a5 x0 (fun y1 : a1 -> a2 => fun y2 : a5 => (x1 y1 y2) /\ (~ (exists y3 : a3, x3 y1 y2 (y0 y1 y2) y3))) x2 (fun y1 : a1 -> a2 => fun y2 : a5 => @_MATCH a4 a3 (y0 y1 y2) (x4 y1 y2))))) -> @admissible a0 a2 a1 a3 a5 x0 x1 x2 (fun y1 : a1 -> a2 => fun y2 : a5 => @_MATCH a4 a3 (y0 y1 y2) (@_SEQPATTERN a3 a4 (x3 y1 y2) (x4 y1 y2))).
Definition term76 (a0 : Type') (a1 : Type') (a2 : Type') (a3 : Type') (a4 : Type') (x0 : type564 a0 a1 a3 a4) (x1 : type566 a0 a1 a2 a3 a4) (x2 : a0 -> a1) (x3 : a4) := @COND a2 (exists y0 : a2, x1 x2 x3 (x0 x2 x3) y0) (@_MATCH a3 a2 (x0 x2 x3) (x1 x2 x3)).
Definition term47 (a0 : Type') (a1 : Type') (a2 : Type') (a3 : Type') (a4 : Type') (a5 : Type') (x0 : type1470 a0 a1) (x1 : type560 a1 a2 a5) (x2 : a5 -> a0) (x3 : type564 a1 a2 a4 a5) (x4 : type566 a1 a2 a3 a4 a5) := and (@admissible a0 a2 a1 a3 a5 x0 (fun y0 : a1 -> a2 => fun y1 : a5 => (x1 y0 y1) /\ (exists y2 : a3, x4 y0 y1 (x3 y0 y1) y2)) x2 (fun y0 : a1 -> a2 => fun y1 : a5 => @_MATCH a4 a3 (x3 y0 y1) (x4 y0 y1))).
Definition term46 (a0 : Type') (a1 : Type') (a2 : Type') (a3 : Type') (a4 : Type') (a5 : Type') (x0 : type1470 a0 a1) (x1 : type560 a1 a2 a5) (x2 : a5 -> a0) (x3 : type564 a1 a2 a4 a5) (x4 : type566 a1 a2 a3 a4 a5) := and (@admissible a0 a2 a1 a3 a5 x0 (fun y0 : a1 -> a2 => fun y1 : a5 => (x1 y0 y1) /\ ((fun y2 : a1 -> a2 => fun y3 : a5 => exists y4 : a3, x4 y2 y3 (x3 y2 y3) y4) y0 y1)) x2 (fun y0 : a1 -> a2 => fun y1 : a5 => @_MATCH a4 a3 (x3 y0 y1) (x4 y0 y1))).
Definition term91 (a0 : Type') (a1 : Type') (a2 : Type') (a3 : Type') (a4 : Type') (a5 : Type') (x0 : type1470 a0 a1) (x1 : type560 a1 a2 a5) (x2 : a5 -> a0) (x3 : type566 a1 a2 a3 a4 a5) := forall y0 : type566 a1 a2 a3 a4 a5, forall y1 : type564 a1 a2 a4 a5, ((@admissible a0 a2 a1 Prop a5 x0 x1 x2 (fun y2 : a1 -> a2 => fun y3 : a5 => exists y4 : a3, x3 y2 y3 (y1 y2 y3) y4)) /\ ((@admissible a0 a2 a1 a3 a5 x0 (fun y2 : a1 -> a2 => fun y3 : a5 => (x1 y2 y3) /\ (exists y4 : a3, x3 y2 y3 (y1 y2 y3) y4)) x2 (fun y2 : a1 -> a2 => fun y3 : a5 => @_MATCH a4 a3 (y1 y2 y3) (x3 y2 y3))) /\ (@admissible a0 a2 a1 a3 a5 x0 (fun y2 : a1 -> a2 => fun y3 : a5 => (x1 y2 y3) /\ (~ (exists y4 : a3, x3 y2 y3 (y1 y2 y3) y4))) x2 (fun y2 : a1 -> a2 => fun y3 : a5 => @_MATCH a4 a3 (y1 y2 y3) (y0 y2 y3))))) -> @admissible a0 a2 a1 a3 a5 x0 x1 x2 (fun y2 : a1 -> a2 => fun y3 : a5 => @_MATCH a4 a3 (y1 y2 y3) (@_SEQPATTERN a3 a4 (x3 y2 y3) (y0 y2 y3))).
Definition term7 (a0 : Type') (a1 : Type') (a2 : Type') (a3 : Type') (a4 : Type') (x0 : type1470 a0 a1) (x1 : type560 a1 a2 a4) (x2 : a4 -> a0) (x3 : type560 a1 a2 a4) := forall y0 : type564 a1 a2 a3 a4, forall y1 : type564 a1 a2 a3 a4, ((@admissible a0 a2 a1 Prop a4 x0 x1 x2 x3) /\ ((@admissible a0 a2 a1 a3 a4 x0 (fun y2 : a1 -> a2 => fun y3 : a4 => (x1 y2 y3) /\ (x3 y2 y3)) x2 y0) /\ (@admissible a0 a2 a1 a3 a4 x0 (fun y2 : a1 -> a2 => fun y3 : a4 => (x1 y2 y3) /\ (~ (x3 y2 y3))) x2 y1))) -> @admissible a0 a2 a1 a3 a4 x0 x1 x2 (fun y2 : a1 -> a2 => fun y3 : a4 => @COND a3 (x3 y2 y3) (y0 y2 y3) (y1 y2 y3)).
Definition term97 (a0 : Type') (a1 : Type') := fun y0 : a1 -> a0 => True.
Definition term26 (a0 : Type') (a1 : Type') (a2 : Type') (a3 : Type') (a4 : Type') (x0 : type566 a0 a1 a2 a3 a4) (x1 : type564 a0 a1 a3 a4) := fun y0 : a0 -> a1 => fun y1 : a4 => exists y2 : a2, x0 y0 y1 (x1 y0 y1) y2.
Definition term77 (a0 : Type') (a1 : Type') (a2 : Type') (a3 : Type') (a4 : Type') (x0 : type566 a0 a1 a2 a3 a4) (x1 : type564 a0 a1 a3 a4) (x2 : type566 a0 a1 a2 a3 a4) (x3 : a0 -> a1) (x4 : a4) := @COND a2 ((fun y0 : a0 -> a1 => fun y1 : a4 => exists y2 : a2, x0 y0 y1 (x1 y0 y1) y2) x3 x4) ((fun y0 : a0 -> a1 => fun y1 : a4 => @_MATCH a3 a2 (x1 y0 y1) (x0 y0 y1)) x3 x4) ((fun y0 : a0 -> a1 => fun y1 : a4 => @_MATCH a3 a2 (x1 y0 y1) (x2 y0 y1)) x3 x4).
Definition term4 (a0 : Type') (a1 : Type') (a2 : Type') (a3 : Type') (a4 : Type') (x0 : type1470 a0 a1) (x1 : type560 a1 a2 a4) (x2 : type560 a1 a2 a4) := (fun y0 : type560 a1 a2 a4 => forall y1 : a4 -> a0, forall y2 : type564 a1 a2 a3 a4, forall y3 : type564 a1 a2 a3 a4, ((@admissible a0 a2 a1 Prop a4 x0 x1 y1 y0) /\ ((@admissible a0 a2 a1 a3 a4 x0 (fun y4 : a1 -> a2 => fun y5 : a4 => (x1 y4 y5) /\ (y0 y4 y5)) y1 y2) /\ (@admissible a0 a2 a1 a3 a4 x0 (fun y4 : a1 -> a2 => fun y5 : a4 => (x1 y4 y5) /\ (~ (y0 y4 y5))) y1 y3))) -> @admissible a0 a2 a1 a3 a4 x0 x1 y1 (fun y4 : a1 -> a2 => fun y5 : a4 => @COND a3 (y0 y4 y5) (y2 y4 y5) (y3 y4 y5))) x2.
Definition term49 (a0 : Type') (a1 : Type') (a2 : Type') (a3 : Type') (a4 : Type') (x0 : type566 a0 a1 a2 a3 a4) (x1 : type564 a0 a1 a3 a4) (x2 : a0 -> a1) (x3 : a4) := ~ (exists y0 : a2, x0 x2 x3 (x1 x2 x3) y0).
Definition term66 (a0 : Type') (a1 : Type') (a2 : Type') (a3 : Type') (a4 : Type') (a5 : Type') (x0 : type1470 a0 a1) (x1 : type560 a1 a2 a5) (x2 : type566 a1 a2 a3 a4 a5) (x3 : a5 -> a0) (x4 : type564 a1 a2 a4 a5) (x5 : type566 a1 a2 a3 a4 a5) := (@admissible a0 a2 a1 Prop a5 x0 x1 x3 (fun y0 : a1 -> a2 => fun y1 : a5 => exists y2 : a3, x2 y0 y1 (x4 y0 y1) y2)) /\ ((@admissible a0 a2 a1 a3 a5 x0 (fun y0 : a1 -> a2 => fun y1 : a5 => (x1 y0 y1) /\ (exists y2 : a3, x2 y0 y1 (x4 y0 y1) y2)) x3 (fun y0 : a1 -> a2 => fun y1 : a5 => @_MATCH a4 a3 (x4 y0 y1) (x2 y0 y1))) /\ (@admissible a0 a2 a1 a3 a5 x0 (fun y0 : a1 -> a2 => fun y1 : a5 => (x1 y0 y1) /\ (~ (exists y2 : a3, x2 y0 y1 (x4 y0 y1) y2))) x3 (fun y0 : a1 -> a2 => fun y1 : a5 => @_MATCH a4 a3 (x4 y0 y1) (x5 y0 y1)))).
Definition term65 (a0 : Type') (a1 : Type') (a2 : Type') (a3 : Type') (a4 : Type') (a5 : Type') (x0 : type1470 a0 a1) (x1 : type560 a1 a2 a5) (x2 : type566 a1 a2 a3 a4 a5) (x3 : a5 -> a0) (x4 : type564 a1 a2 a4 a5) (x5 : type566 a1 a2 a3 a4 a5) := (@admissible a0 a2 a1 Prop a5 x0 x1 x3 (fun y0 : a1 -> a2 => fun y1 : a5 => exists y2 : a3, x2 y0 y1 (x4 y0 y1) y2)) /\ ((@admissible a0 a2 a1 a3 a5 x0 (fun y0 : a1 -> a2 => fun y1 : a5 => (x1 y0 y1) /\ ((fun y2 : a1 -> a2 => fun y3 : a5 => exists y4 : a3, x2 y2 y3 (x4 y2 y3) y4) y0 y1)) x3 (fun y0 : a1 -> a2 => fun y1 : a5 => @_MATCH a4 a3 (x4 y0 y1) (x2 y0 y1))) /\ (@admissible a0 a2 a1 a3 a5 x0 (fun y0 : a1 -> a2 => fun y1 : a5 => (x1 y0 y1) /\ (~ ((fun y2 : a1 -> a2 => fun y3 : a5 => exists y4 : a3, x2 y2 y3 (x4 y2 y3) y4) y0 y1))) x3 (fun y0 : a1 -> a2 => fun y1 : a5 => @_MATCH a4 a3 (x4 y0 y1) (x5 y0 y1)))).
Definition term69 (a0 : Type') (a1 : Type') (a2 : Type') (a3 : Type') (a4 : Type') (x0 : type566 a0 a1 a2 a3 a4) (x1 : type564 a0 a1 a3 a4) (x2 : a0 -> a1) (x3 : a4) := @COND a2 (exists y0 : a2, x0 x2 x3 (x1 x2 x3) y0).
Definition term85 (a0 : Type') (a1 : Type') (a2 : Type') (a3 : Type') (a4 : Type') (a5 : Type') (x0 : type1470 a0 a1) (x1 : type560 a1 a2 a5) (x2 : a5 -> a0) (x3 : type566 a1 a2 a3 a4 a5) (x4 : type566 a1 a2 a3 a4 a5) := forall y0 : type564 a1 a2 a4 a5, ((@admissible a0 a2 a1 Prop a5 x0 x1 x2 (fun y1 : a1 -> a2 => fun y2 : a5 => exists y3 : a3, x3 y1 y2 (y0 y1 y2) y3)) /\ ((@admissible a0 a2 a1 a3 a5 x0 (fun y1 : a1 -> a2 => fun y2 : a5 => (x1 y1 y2) /\ (exists y3 : a3, x3 y1 y2 (y0 y1 y2) y3)) x2 (fun y1 : a1 -> a2 => fun y2 : a5 => @_MATCH a4 a3 (y0 y1 y2) (x3 y1 y2))) /\ (@admissible a0 a2 a1 a3 a5 x0 (fun y1 : a1 -> a2 => fun y2 : a5 => (x1 y1 y2) /\ (~ (exists y3 : a3, x3 y1 y2 (y0 y1 y2) y3))) x2 (fun y1 : a1 -> a2 => fun y2 : a5 => @_MATCH a4 a3 (y0 y1 y2) (x4 y1 y2))))) -> @admissible a0 a2 a1 a3 a5 x0 x1 x2 (fun y1 : a1 -> a2 => fun y2 : a5 => @_MATCH a4 a3 (y0 y1 y2) (@_SEQPATTERN a3 a4 (x3 y1 y2) (x4 y1 y2))).
Definition term9 (a0 : Type') (a1 : Type') (a2 : Type') (a3 : Type') (a4 : Type') (x0 : type1470 a0 a1) (x1 : type560 a1 a2 a4) (x2 : a4 -> a0) (x3 : type560 a1 a2 a4) (x4 : type564 a1 a2 a3 a4) := forall y0 : type564 a1 a2 a3 a4, ((@admissible a0 a2 a1 Prop a4 x0 x1 x2 x3) /\ ((@admissible a0 a2 a1 a3 a4 x0 (fun y1 : a1 -> a2 => fun y2 : a4 => (x1 y1 y2) /\ (x3 y1 y2)) x2 x4) /\ (@admissible a0 a2 a1 a3 a4 x0 (fun y1 : a1 -> a2 => fun y2 : a4 => (x1 y1 y2) /\ (~ (x3 y1 y2))) x2 y0))) -> @admissible a0 a2 a1 a3 a4 x0 x1 x2 (fun y1 : a1 -> a2 => fun y2 : a4 => @COND a3 (x3 y1 y2) (x4 y1 y2) (y0 y1 y2)).
Definition term72 (a0 : Type') (a1 : Type') (a2 : Type') (a3 : Type') (a4 : Type') (x0 : type564 a0 a1 a3 a4) (x1 : type566 a0 a1 a2 a3 a4) (x2 : a0 -> a1) (x3 : a4) := (fun y0 : a0 -> a1 => fun y1 : a4 => @_MATCH a3 a2 (x0 y0 y1) (x1 y0 y1)) x2 x3.
Definition term105 (a0 : Type') (a1 : Type') (a2 : Type') (x0 : Prop) := forall y0 : type560 a0 a1 a2, x0.
Definition term93 (a0 : Type') (a1 : Type') (a2 : Type') (a3 : Type') (a4 : Type') (x0 : Prop) := forall y0 : type566 a0 a1 a2 a3 a4, x0.
Definition term88 (a0 : Type') (a1 : Type') (a2 : Type') (a3 : Type') (x0 : Prop) := forall y0 : type564 a0 a1 a2 a3, x0.
Definition term11 (a0 : Type') (a1 : Type') (a2 : Type') (a3 : Type') (a4 : Type') (x0 : type1470 a0 a1) (x1 : type560 a1 a2 a4) (x2 : a4 -> a0) (x3 : type560 a1 a2 a4) (x4 : type564 a1 a2 a3 a4) (x5 : type564 a1 a2 a3 a4) := ((@admissible a0 a2 a1 Prop a4 x0 x1 x2 x3) /\ ((@admissible a0 a2 a1 a3 a4 x0 (fun y0 : a1 -> a2 => fun y1 : a4 => (x1 y0 y1) /\ (x3 y0 y1)) x2 x4) /\ (@admissible a0 a2 a1 a3 a4 x0 (fun y0 : a1 -> a2 => fun y1 : a4 => (x1 y0 y1) /\ (~ (x3 y0 y1))) x2 x5))) -> @admissible a0 a2 a1 a3 a4 x0 x1 x2 (fun y0 : a1 -> a2 => fun y1 : a4 => @COND a3 (x3 y0 y1) (x4 y0 y1) (x5 y0 y1)).
Definition term40 (a0 : Type') (a1 : Type') (a2 : Type') (a3 : Type') (a4 : Type') (a5 : Type') (x0 : type1470 a0 a1) (x1 : type560 a1 a2 a5) (x2 : type566 a1 a2 a3 a4 a5) (x3 : type564 a1 a2 a4 a5) := @admissible a0 a2 a1 a3 a5 x0 (fun y0 : a1 -> a2 => fun y1 : a5 => (x1 y0 y1) /\ ((fun y2 : a1 -> a2 => fun y3 : a5 => exists y4 : a3, x2 y2 y3 (x3 y2 y3) y4) y0 y1)).
Definition term29 (a0 : Type') (a1 : Type') (a2 : Type') (a3 : Type') (a4 : Type') (x0 : type566 a0 a1 a2 a3 a4) (x1 : type564 a0 a1 a3 a4) (x2 : a0 -> a1) := fun y0 : a4 => exists y1 : a2, x0 x2 y0 (x1 x2 y0) y1.
Definition term0 (a0 : Type') (a1 : Type') (a2 : Type') (a3 : Type') (a4 : Type') (x0 : type1470 a0 a1) := (fun y0 : type1470 a0 a1 => forall y1 : type560 a1 a2 a4, forall y2 : type560 a1 a2 a4, forall y3 : a4 -> a0, forall y4 : type564 a1 a2 a3 a4, forall y5 : type564 a1 a2 a3 a4, ((@admissible a0 a2 a1 Prop a4 y0 y1 y3 y2) /\ ((@admissible a0 a2 a1 a3 a4 y0 (fun y6 : a1 -> a2 => fun y7 : a4 => (y1 y6 y7) /\ (y2 y6 y7)) y3 y4) /\ (@admissible a0 a2 a1 a3 a4 y0 (fun y6 : a1 -> a2 => fun y7 : a4 => (y1 y6 y7) /\ (~ (y2 y6 y7))) y3 y5))) -> @admissible a0 a2 a1 a3 a4 y0 y1 y3 (fun y6 : a1 -> a2 => fun y7 : a4 => @COND a3 (y2 y6 y7) (y4 y6 y7) (y5 y6 y7))) x0.
Definition term10 (a0 : Type') (a1 : Type') (a2 : Type') (a3 : Type') (a4 : Type') (x0 : type1470 a0 a1) (x1 : type560 a1 a2 a4) (x2 : a4 -> a0) (x3 : type560 a1 a2 a4) (x4 : type564 a1 a2 a3 a4) (x5 : type564 a1 a2 a3 a4) := (fun y0 : type564 a1 a2 a3 a4 => ((@admissible a0 a2 a1 Prop a4 x0 x1 x2 x3) /\ ((@admissible a0 a2 a1 a3 a4 x0 (fun y1 : a1 -> a2 => fun y2 : a4 => (x1 y1 y2) /\ (x3 y1 y2)) x2 x4) /\ (@admissible a0 a2 a1 a3 a4 x0 (fun y1 : a1 -> a2 => fun y2 : a4 => (x1 y1 y2) /\ (~ (x3 y1 y2))) x2 y0))) -> @admissible a0 a2 a1 a3 a4 x0 x1 x2 (fun y1 : a1 -> a2 => fun y2 : a4 => @COND a3 (x3 y1 y2) (x4 y1 y2) (y0 y1 y2))) x5.
Definition term63 (a0 : Type') (a1 : Type') (a2 : Type') (a3 : Type') (a4 : Type') (a5 : Type') (x0 : type1470 a0 a1) (x1 : type560 a1 a2 a5) (x2 : type566 a1 a2 a3 a4 a5) (x3 : a5 -> a0) (x4 : type564 a1 a2 a4 a5) (x5 : type566 a1 a2 a3 a4 a5) := (@admissible a0 a2 a1 a3 a5 x0 (fun y0 : a1 -> a2 => fun y1 : a5 => (x1 y0 y1) /\ (exists y2 : a3, x2 y0 y1 (x4 y0 y1) y2)) x3 (fun y0 : a1 -> a2 => fun y1 : a5 => @_MATCH a4 a3 (x4 y0 y1) (x2 y0 y1))) /\ (@admissible a0 a2 a1 a3 a5 x0 (fun y0 : a1 -> a2 => fun y1 : a5 => (x1 y0 y1) /\ (~ (exists y2 : a3, x2 y0 y1 (x4 y0 y1) y2))) x3 (fun y0 : a1 -> a2 => fun y1 : a5 => @_MATCH a4 a3 (x4 y0 y1) (x5 y0 y1))).
Definition term62 (a0 : Type') (a1 : Type') (a2 : Type') (a3 : Type') (a4 : Type') (a5 : Type') (x0 : type1470 a0 a1) (x1 : type560 a1 a2 a5) (x2 : type566 a1 a2 a3 a4 a5) (x3 : a5 -> a0) (x4 : type564 a1 a2 a4 a5) (x5 : type566 a1 a2 a3 a4 a5) := (@admissible a0 a2 a1 a3 a5 x0 (fun y0 : a1 -> a2 => fun y1 : a5 => (x1 y0 y1) /\ ((fun y2 : a1 -> a2 => fun y3 : a5 => exists y4 : a3, x2 y2 y3 (x4 y2 y3) y4) y0 y1)) x3 (fun y0 : a1 -> a2 => fun y1 : a5 => @_MATCH a4 a3 (x4 y0 y1) (x2 y0 y1))) /\ (@admissible a0 a2 a1 a3 a5 x0 (fun y0 : a1 -> a2 => fun y1 : a5 => (x1 y0 y1) /\ (~ ((fun y2 : a1 -> a2 => fun y3 : a5 => exists y4 : a3, x2 y2 y3 (x4 y2 y3) y4) y0 y1))) x3 (fun y0 : a1 -> a2 => fun y1 : a5 => @_MATCH a4 a3 (x4 y0 y1) (x5 y0 y1))).
Definition term82 (a0 : Type') (a1 : Type') (a2 : Type') (a3 : Type') (a4 : Type') (a5 : Type') (x0 : type1470 a0 a1) (x1 : type560 a1 a2 a5) (x2 : a5 -> a0) (x3 : type566 a1 a2 a3 a4 a5) (x4 : type564 a1 a2 a4 a5) (x5 : type566 a1 a2 a3 a4 a5) := @eq Prop (((@admissible a0 a2 a1 Prop a5 x0 x1 x2 (fun y0 : a1 -> a2 => fun y1 : a5 => exists y2 : a3, x3 y0 y1 (x4 y0 y1) y2)) /\ ((@admissible a0 a2 a1 a3 a5 x0 (fun y0 : a1 -> a2 => fun y1 : a5 => (x1 y0 y1) /\ (exists y2 : a3, x3 y0 y1 (x4 y0 y1) y2)) x2 (fun y0 : a1 -> a2 => fun y1 : a5 => @_MATCH a4 a3 (x4 y0 y1) (x3 y0 y1))) /\ (@admissible a0 a2 a1 a3 a5 x0 (fun y0 : a1 -> a2 => fun y1 : a5 => (x1 y0 y1) /\ (~ (exists y2 : a3, x3 y0 y1 (x4 y0 y1) y2))) x2 (fun y0 : a1 -> a2 => fun y1 : a5 => @_MATCH a4 a3 (x4 y0 y1) (x5 y0 y1))))) -> @admissible a0 a2 a1 a3 a5 x0 x1 x2 (fun y0 : a1 -> a2 => fun y1 : a5 => @COND a3 (exists y2 : a3, x3 y0 y1 (x4 y0 y1) y2) (@_MATCH a4 a3 (x4 y0 y1) (x3 y0 y1)) (@_MATCH a4 a3 (x4 y0 y1) (x5 y0 y1)))).
Definition term81 (a0 : Type') (a1 : Type') (a2 : Type') (a3 : Type') (a4 : Type') (a5 : Type') (x0 : type1470 a0 a1) (x1 : type560 a1 a2 a5) (x2 : a5 -> a0) (x3 : type566 a1 a2 a3 a4 a5) (x4 : type564 a1 a2 a4 a5) (x5 : type566 a1 a2 a3 a4 a5) := @eq Prop (((@admissible a0 a2 a1 Prop a5 x0 x1 x2 (fun y0 : a1 -> a2 => fun y1 : a5 => exists y2 : a3, x3 y0 y1 (x4 y0 y1) y2)) /\ ((@admissible a0 a2 a1 a3 a5 x0 (fun y0 : a1 -> a2 => fun y1 : a5 => (x1 y0 y1) /\ ((fun y2 : a1 -> a2 => fun y3 : a5 => exists y4 : a3, x3 y2 y3 (x4 y2 y3) y4) y0 y1)) x2 (fun y0 : a1 -> a2 => fun y1 : a5 => @_MATCH a4 a3 (x4 y0 y1) (x3 y0 y1))) /\ (@admissible a0 a2 a1 a3 a5 x0 (fun y0 : a1 -> a2 => fun y1 : a5 => (x1 y0 y1) /\ (~ ((fun y2 : a1 -> a2 => fun y3 : a5 => exists y4 : a3, x3 y2 y3 (x4 y2 y3) y4) y0 y1))) x2 (fun y0 : a1 -> a2 => fun y1 : a5 => @_MATCH a4 a3 (x4 y0 y1) (x5 y0 y1))))) -> @admissible a0 a2 a1 a3 a5 x0 x1 x2 (fun y0 : a1 -> a2 => fun y1 : a5 => @COND a3 ((fun y2 : a1 -> a2 => fun y3 : a5 => exists y4 : a3, x3 y2 y3 (x4 y2 y3) y4) y0 y1) ((fun y2 : a1 -> a2 => fun y3 : a5 => @_MATCH a4 a3 (x4 y2 y3) (x3 y2 y3)) y0 y1) ((fun y2 : a1 -> a2 => fun y3 : a5 => @_MATCH a4 a3 (x4 y2 y3) (x5 y2 y3)) y0 y1))).
Definition term68 (a0 : Type') (a1 : Type') (a2 : Type') (a3 : Type') (a4 : Type') (x0 : type566 a0 a1 a2 a3 a4) (x1 : type564 a0 a1 a3 a4) (x2 : a0 -> a1) (x3 : a4) := @COND a2 ((fun y0 : a0 -> a1 => fun y1 : a4 => exists y2 : a2, x0 y0 y1 (x1 y0 y1) y2) x2 x3).
Definition term14 (a0 : Type') (a1 : Type') (a2 : Type') (a3 : Type') (a4 : Type') (x0 : type564 a0 a1 a3 a4) (x1 : type566 a0 a1 a2 a3 a4) (x2 : type566 a0 a1 a2 a3 a4) (x3 : a0 -> a1) (x4 : a4) := @_MATCH a3 a2 (x0 x3 x4) (@_SEQPATTERN a2 a3 (x1 x3 x4) (x2 x3 x4)).
Definition term73 (a0 : Type') (a1 : Type') (a2 : Type') (a3 : Type') (a4 : Type') (x0 : type564 a0 a1 a3 a4) (x1 : type566 a0 a1 a2 a3 a4) (x2 : a0 -> a1) (x3 : a4) := (fun y0 : a4 => @_MATCH a3 a2 (x0 x2 y0) (x1 x2 y0)) x3.
Definition term80 (a0 : Type') (a1 : Type') (a2 : Type') (a3 : Type') (a4 : Type') (a5 : Type') (x0 : type1470 a0 a1) (x1 : type560 a1 a2 a5) (x2 : a5 -> a0) (x3 : type566 a1 a2 a3 a4 a5) (x4 : type564 a1 a2 a4 a5) (x5 : type566 a1 a2 a3 a4 a5) := @admissible a0 a2 a1 a3 a5 x0 x1 x2 (fun y0 : a1 -> a2 => fun y1 : a5 => @COND a3 ((fun y2 : a1 -> a2 => fun y3 : a5 => exists y4 : a3, x3 y2 y3 (x4 y2 y3) y4) y0 y1) ((fun y2 : a1 -> a2 => fun y3 : a5 => @_MATCH a4 a3 (x4 y2 y3) (x3 y2 y3)) y0 y1) ((fun y2 : a1 -> a2 => fun y3 : a5 => @_MATCH a4 a3 (x4 y2 y3) (x5 y2 y3)) y0 y1)).
Definition term21 (a0 : Type') (a1 : Type') (a2 : Type') (a3 : Type') (a4 : Type') (a5 : Type') (x0 : type1470 a0 a1) (x1 : type560 a1 a2 a5) (x2 : a5 -> a0) (x3 : type566 a1 a2 a3 a4 a5) (x4 : type564 a1 a2 a4 a5) (x5 : type566 a1 a2 a3 a4 a5) := @admissible a0 a2 a1 a3 a5 x0 x1 x2 (fun y0 : a1 -> a2 => fun y1 : a5 => @COND a3 (exists y2 : a3, x3 y0 y1 (x4 y0 y1) y2) (@_MATCH a4 a3 (x4 y0 y1) (x3 y0 y1)) (@_MATCH a4 a3 (x4 y0 y1) (x5 y0 y1))).
Definition term20 (a0 : Type') (a1 : Type') (a2 : Type') (a3 : Type') (a4 : Type') (a5 : Type') (x0 : type1470 a0 a1) (x1 : type560 a1 a2 a5) (x2 : a5 -> a0) (x3 : type564 a1 a2 a4 a5) (x4 : type566 a1 a2 a3 a4 a5) (x5 : type566 a1 a2 a3 a4 a5) := @admissible a0 a2 a1 a3 a5 x0 x1 x2 (fun y0 : a1 -> a2 => fun y1 : a5 => @_MATCH a4 a3 (x3 y0 y1) (@_SEQPATTERN a3 a4 (x4 y0 y1) (x5 y0 y1))).
Definition term27 (a0 : Type') (a1 : Type') (a2 : Type') (a3 : Type') (a4 : Type') (x0 : type564 a0 a1 a3 a4) (x1 : type566 a0 a1 a2 a3 a4) := fun y0 : a0 -> a1 => fun y1 : a4 => @_MATCH a3 a2 (x0 y0 y1) (x1 y0 y1).
Definition term53 (a0 : Type') (a1 : Type') (a2 : Type') (a3 : Type') (a4 : Type') (x0 : type560 a0 a1 a4) (x1 : type566 a0 a1 a2 a3 a4) (x2 : type564 a0 a1 a3 a4) (x3 : a0 -> a1) := fun y0 : a4 => (x0 x3 y0) /\ (~ (exists y1 : a2, x1 x3 y0 (x2 x3 y0) y1)).
Definition term57 (a0 : Type') (a1 : Type') (a2 : Type') (a3 : Type') (a4 : Type') (a5 : Type') (x0 : type1470 a0 a1) (x1 : type560 a1 a2 a5) (x2 : type566 a1 a2 a3 a4 a5) (x3 : type564 a1 a2 a4 a5) := @admissible a0 a2 a1 a3 a5 x0 (fun y0 : a1 -> a2 => fun y1 : a5 => (x1 y0 y1) /\ (~ (exists y2 : a3, x2 y0 y1 (x3 y0 y1) y2))).
Definition term56 (a0 : Type') (a1 : Type') (a2 : Type') (a3 : Type') (a4 : Type') (a5 : Type') (x0 : type1470 a0 a1) (x1 : type560 a1 a2 a5) (x2 : type566 a1 a2 a3 a4 a5) (x3 : type564 a1 a2 a4 a5) := @admissible a0 a2 a1 a3 a5 x0 (fun y0 : a1 -> a2 => fun y1 : a5 => (x1 y0 y1) /\ (~ ((fun y2 : a1 -> a2 => fun y3 : a5 => exists y4 : a3, x2 y2 y3 (x3 y2 y3) y4) y0 y1))).
Definition term101 (a0 : Type') (a1 : Type') (a2 : Type') (a3 : Type') (a4 : Type') (a5 : Type') (x0 : type1470 a0 a1) := fun y0 : type560 a1 a2 a5 => forall y1 : a5 -> a0, forall y2 : type566 a1 a2 a3 a4 a5, forall y3 : type566 a1 a2 a3 a4 a5, forall y4 : type564 a1 a2 a4 a5, ((@admissible a0 a2 a1 Prop a5 x0 y0 y1 (fun y5 : a1 -> a2 => fun y6 : a5 => exists y7 : a3, y2 y5 y6 (y4 y5 y6) y7)) /\ ((@admissible a0 a2 a1 a3 a5 x0 (fun y5 : a1 -> a2 => fun y6 : a5 => (y0 y5 y6) /\ (exists y7 : a3, y2 y5 y6 (y4 y5 y6) y7)) y1 (fun y5 : a1 -> a2 => fun y6 : a5 => @_MATCH a4 a3 (y4 y5 y6) (y2 y5 y6))) /\ (@admissible a0 a2 a1 a3 a5 x0 (fun y5 : a1 -> a2 => fun y6 : a5 => (y0 y5 y6) /\ (~ (exists y7 : a3, y2 y5 y6 (y4 y5 y6) y7))) y1 (fun y5 : a1 -> a2 => fun y6 : a5 => @_MATCH a4 a3 (y4 y5 y6) (y3 y5 y6))))) -> @admissible a0 a2 a1 a3 a5 x0 y0 y1 (fun y5 : a1 -> a2 => fun y6 : a5 => @_MATCH a4 a3 (y4 y5 y6) (@_SEQPATTERN a3 a4 (y2 y5 y6) (y3 y5 y6))).
Definition term94 (a0 : Type') (a1 : Type') (a2 : Type') (a3 : Type') (a4 : Type') (a5 : Type') (x0 : type1470 a0 a1) (x1 : type560 a1 a2 a5) (x2 : a5 -> a0) := fun y0 : type566 a1 a2 a3 a4 a5 => forall y1 : type566 a1 a2 a3 a4 a5, forall y2 : type564 a1 a2 a4 a5, ((@admissible a0 a2 a1 Prop a5 x0 x1 x2 (fun y3 : a1 -> a2 => fun y4 : a5 => exists y5 : a3, y0 y3 y4 (y2 y3 y4) y5)) /\ ((@admissible a0 a2 a1 a3 a5 x0 (fun y3 : a1 -> a2 => fun y4 : a5 => (x1 y3 y4) /\ (exists y5 : a3, y0 y3 y4 (y2 y3 y4) y5)) x2 (fun y3 : a1 -> a2 => fun y4 : a5 => @_MATCH a4 a3 (y2 y3 y4) (y0 y3 y4))) /\ (@admissible a0 a2 a1 a3 a5 x0 (fun y3 : a1 -> a2 => fun y4 : a5 => (x1 y3 y4) /\ (~ (exists y5 : a3, y0 y3 y4 (y2 y3 y4) y5))) x2 (fun y3 : a1 -> a2 => fun y4 : a5 => @_MATCH a4 a3 (y2 y3 y4) (y1 y3 y4))))) -> @admissible a0 a2 a1 a3 a5 x0 x1 x2 (fun y3 : a1 -> a2 => fun y4 : a5 => @_MATCH a4 a3 (y2 y3 y4) (@_SEQPATTERN a3 a4 (y0 y3 y4) (y1 y3 y4))).
Definition term15 (a0 : Type') (a1 : Type') (a2 : Type') (a3 : Type') (a4 : Type') (x0 : type566 a0 a1 a2 a3 a4) (x1 : type564 a0 a1 a3 a4) (x2 : type566 a0 a1 a2 a3 a4) (x3 : a0 -> a1) (x4 : a4) := @COND a2 (exists y0 : a2, x0 x3 x4 (x1 x3 x4) y0) (@_MATCH a3 a2 (x1 x3 x4) (x0 x3 x4)) (@_MATCH a3 a2 (x1 x3 x4) (x2 x3 x4)).
Definition term39 (a0 : Type') (a1 : Type') (a2 : Type') (a3 : Type') (a4 : Type') (x0 : type560 a0 a1 a4) (x1 : type566 a0 a1 a2 a3 a4) (x2 : type564 a0 a1 a3 a4) := fun y0 : a0 -> a1 => fun y1 : a4 => (x0 y0 y1) /\ (exists y2 : a2, x1 y0 y1 (x2 y0 y1) y2).
Definition term78 (a0 : Type') (a1 : Type') (a2 : Type') (a3 : Type') (a4 : Type') (x0 : type566 a0 a1 a2 a3 a4) (x1 : type564 a0 a1 a3 a4) (x2 : type566 a0 a1 a2 a3 a4) (x3 : a0 -> a1) := fun y0 : a4 => @COND a2 ((fun y1 : a0 -> a1 => fun y2 : a4 => exists y3 : a2, x0 y1 y2 (x1 y1 y2) y3) x3 y0) ((fun y1 : a0 -> a1 => fun y2 : a4 => @_MATCH a3 a2 (x1 y1 y2) (x0 y1 y2)) x3 y0) ((fun y1 : a0 -> a1 => fun y2 : a4 => @_MATCH a3 a2 (x1 y1 y2) (x2 y1 y2)) x3 y0).
Definition term109 (a0 : Type') (a1 : Type') := forall y0 : type1470 a0 a1, True.
Definition term99 (a0 : Type') (a1 : Type') := forall y0 : a1 -> a0, True.
Definition term12 (a0 : Type') (a1 : Type') (x0 : a1) (x1 : type1470 a0 a1) (x2 : type1470 a0 a1) := @_MATCH a1 a0 x0 (@_SEQPATTERN a0 a1 x1 x2).
