require open hol-light.theory_hol;
require open hol-light.hol_types;
require open hol-light.hol_type_abbrevs;
require open hol-light.hol_terms;
symbol term8 a0 a1 (x0: El a0) (x1: El a1) (x2: El (list a1)) ≔ ((@CONS (prod a0 a1)) ((@̦‚ a0 a1) x0 ((@HD a1) ((@CONS a1) x1 x2))));
symbol term6 a0 (x0: El a0) (x1: El (list a0)) ≔ ((@HD a0) ((@CONS a0) x0 x1));
symbol term15 a0 a1 a2 a3 (x0: El a2) (x1: El a3) (x2: El (list a2)) (x3: El (list a3)) ≔ (∧ (= ((@ZIP a0 a1) (@NIL a0) (@NIL a1)) (@NIL (prod a0 a1))) (= ((@ZIP a2 a3) ((@CONS a2) x0 x2) ((@CONS a3) x1 x3)) ((@CONS (prod a2 a3)) ((@̦‚ a2 a3) x0 x1) ((@ZIP a2 a3) x2 x3))));
symbol term11 a0 a1 (x0: El (list a0)) (x1: El a1) (x2: El (list a1)) ≔ ((@ZIP a0 a1) x0 ((@TL a1) ((@CONS a1) x1 x2)));
symbol term13 a0 a1 (x0: El a0) (x1: El (list a0)) (x2: El a1) (x3: El (list a1)) ≔ ((@= (list (prod a0 a1))) ((@ZIP a0 a1) ((@CONS a0) x0 x1) ((@CONS a1) x2 x3)));
symbol term4 a0 a1 (x0: El a0) (x1: El (list a0)) (x2: El a1) (x3: El (list a1)) ≔ ((@ZIP a0 a1) ((@CONS a0) x0 x1) ((@CONS a1) x2 x3));
symbol term0 a0 a1 ≔ ((@= (list (prod a0 a1))) ((@ZIP a0 a1) (@NIL a0) (@NIL a1)));
symbol term10 a0 (x0: El a0) (x1: El (list a0)) ≔ ((@TL a0) ((@CONS a0) x0 x1));
symbol term7 a0 a1 (x0: El a0) (x1: El a1) (x2: El (list a1)) ≔ ((@̦‚ a0 a1) x0 ((@HD a1) ((@CONS a1) x1 x2)));
symbol term14 a0 a1 (x0: El a0) (x1: El a1) (x2: El (list a0)) (x3: El (list a1)) ≔ ((@= (list (prod a0 a1))) ((@CONS (prod a0 a1)) ((@̦‚ a0 a1) x0 x1) ((@ZIP a0 a1) x2 x3)));
symbol term3 a0 a1 (x0: El a0) (x1: El (list a0)) (x2: El (list a1)) ≔ ((@CONS (prod a0 a1)) ((@̦‚ a0 a1) x0 ((@HD a1) x2)) ((@ZIP a0 a1) x1 ((@TL a1) x2)));
symbol term2 a0 a1 (x0: El a0) (x1: El (list a0)) (x2: El (list a1)) ≔ ((@ZIP a0 a1) ((@CONS a0) x0 x1) x2);
symbol term1 a0 a1 ≔ (∧ (= ((@ZIP a0 a1) (@NIL a0) (@NIL a1)) (@NIL (prod a0 a1))));
symbol term5 a0 a1 (x0: El a0) (x1: El (list a0)) (x2: El a1) (x3: El (list a1)) ≔ ((@CONS (prod a0 a1)) ((@̦‚ a0 a1) x0 ((@HD a1) ((@CONS a1) x2 x3))) ((@ZIP a0 a1) x1 ((@TL a1) ((@CONS a1) x2 x3))));
symbol term12 a0 a1 (x0: El a0) (x1: El a1) (x2: El (list a0)) (x3: El (list a1)) ≔ ((@CONS (prod a0 a1)) ((@̦‚ a0 a1) x0 x1) ((@ZIP a0 a1) x2 x3));
symbol term9 a0 a1 (x0: El a0) (x1: El a1) ≔ ((@CONS (prod a0 a1)) ((@̦‚ a0 a1) x0 x1));
