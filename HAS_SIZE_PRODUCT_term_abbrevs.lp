require open hol-light.theory_hol;
require open hol-light.hol_types;
require open hol-light.hol_type_abbrevs;
require open hol-light.hol_terms;
symbol term10 a0 a1 (x0: El (fun a0 bool)) (x1: El (fun a1 bool)) ≔ ((@CARD (prod a0 a1)) ((@GSPEC (prod a0 a1)) (λ y0 : El (prod a0 a1), (∃ (λ y1 : El a0, (∃ (λ y2 : El a1, ((@SETSPEC (prod a0 a1)) y0 (∧ ((@IN a0) y1 x0) ((@IN a1) y2 x1)) ((@̦‚ a0 a1) y1 y2)))))))));
symbol term25 a0 a1 (x0: El (fun a0 bool)) (x1: El (fun a1 bool)) (x2: El num) (x3: El num) (x4: El bool) (x5: El bool) ≔ (⇒ (= (∧ ((@HAS_SIZE a0) x0 x2) ((@HAS_SIZE a1) x1 x3)) x4) (⇒ (⇒ x4 (= ((@HAS_SIZE (prod a0 a1)) ((@GSPEC (prod a0 a1)) (λ y0 : El (prod a0 a1), (∃ (λ y1 : El a0, (∃ (λ y2 : El a1, ((@SETSPEC (prod a0 a1)) y0 (∧ ((@IN a0) y1 x0) ((@IN a1) y2 x1)) ((@̦‚ a0 a1) y1 y2)))))))) (* x2 x3)) x5)) (= (⇒ (∧ ((@HAS_SIZE a0) x0 x2) ((@HAS_SIZE a1) x1 x3)) ((@HAS_SIZE (prod a0 a1)) ((@GSPEC (prod a0 a1)) (λ y0 : El (prod a0 a1), (∃ (λ y1 : El a0, (∃ (λ y2 : El a1, ((@SETSPEC (prod a0 a1)) y0 (∧ ((@IN a0) y1 x0) ((@IN a1) y2 x1)) ((@̦‚ a0 a1) y1 y2)))))))) (* x2 x3))) (⇒ x4 x5))));
symbol term20 a0 a1 (x0: El (fun a0 bool)) (x1: El num) (x2: El (fun a1 bool)) (x3: El num) ≔ (∧ ((@HAS_SIZE a0) x0 x1) ((@HAS_SIZE a1) x2 x3));
symbol term1 a0 a1 (x0: El (fun a0 bool)) ≔ (∀ (λ y0 : El (fun a1 bool), (⇒ (∧ ((@FINITE a0) x0) ((@FINITE a1) y0)) ((@FINITE (prod a0 a1)) ((@GSPEC (prod a0 a1)) (λ y1 : El (prod a0 a1), (∃ (λ y2 : El a0, (∃ (λ y3 : El a1, ((@SETSPEC (prod a0 a1)) y1 (∧ ((@IN a0) y2 x0) ((@IN a1) y3 y0)) ((@̦‚ a0 a1) y2 y3))))))))))));
symbol term48 a0 (x0: El bool) ≔ (∀ (λ y0 : El a0, x0));
symbol term38 a0 a1 (x0: El (fun a0 bool)) (x1: El (fun a1 bool)) ≔ ((@= num) ((@CARD (prod a0 a1)) ((@GSPEC (prod a0 a1)) (λ y0 : El (prod a0 a1), (∃ (λ y1 : El a0, (∃ (λ y2 : El a1, ((@SETSPEC (prod a0 a1)) y0 (∧ ((@IN a0) y1 x0) ((@IN a1) y2 x1)) ((@̦‚ a0 a1) y1 y2))))))))));
symbol term44 a0 a1 (x0: El (fun a0 bool)) (x1: El (fun a1 bool)) (x2: El num) ≔ (λ y0 : El num, (⇒ (∧ ((@HAS_SIZE a0) x0 x2) ((@HAS_SIZE a1) x1 y0)) ((@HAS_SIZE (prod a0 a1)) ((@GSPEC (prod a0 a1)) (λ y1 : El (prod a0 a1), (∃ (λ y2 : El a0, (∃ (λ y3 : El a1, ((@SETSPEC (prod a0 a1)) y1 (∧ ((@IN a0) y2 x0) ((@IN a1) y3 x1)) ((@̦‚ a0 a1) y2 y3)))))))) (* x2 y0))));
symbol term58 a0 a1 ≔ (∀ (λ y0 : El (fun a0 bool), (∀ (λ y1 : El num, (∀ (λ y2 : El (fun a1 bool), (∀ (λ y3 : El num, (⇒ (∧ ((@HAS_SIZE a0) y0 y1) ((@HAS_SIZE a1) y2 y3)) ((@HAS_SIZE (prod a0 a1)) ((@GSPEC (prod a0 a1)) (λ y4 : El (prod a0 a1), (∃ (λ y5 : El a0, (∃ (λ y6 : El a1, ((@SETSPEC (prod a0 a1)) y4 (∧ ((@IN a0) y5 y0) ((@IN a1) y6 y2)) ((@̦‚ a0 a1) y5 y6)))))))) (* y1 y3)))))))))));
symbol term9 a0 a1 (x0: El (fun a0 bool)) (x1: El (fun a1 bool)) ≔ (⇒ (∧ ((@FINITE a0) x0) ((@FINITE a1) x1)) (= ((@CARD (prod a0 a1)) ((@GSPEC (prod a0 a1)) (λ y0 : El (prod a0 a1), (∃ (λ y1 : El a0, (∃ (λ y2 : El a1, ((@SETSPEC (prod a0 a1)) y0 (∧ ((@IN a0) y1 x0) ((@IN a1) y2 x1)) ((@̦‚ a0 a1) y1 y2))))))))) (* ((@CARD a0) x0) ((@CARD a1) x1))));
symbol term54 a0 (x0: El bool) ≔ (∀ (λ y0 : El (fun a0 bool), x0));
symbol term4 a0 a1 (x0: El (fun a0 bool)) (x1: El (fun a1 bool)) ≔ (∧ ((@FINITE a0) x0) ((@FINITE a1) x1));
symbol term34 a0 a1 (x0: El (fun a0 bool)) (x1: El (fun a1 bool)) ≔ (⇒ (∧ ((@FINITE a0) x0) ((@FINITE a1) x1)) (= ((@FINITE (prod a0 a1)) ((@GSPEC (prod a0 a1)) (λ y0 : El (prod a0 a1), (∃ (λ y1 : El a0, (∃ (λ y2 : El a1, ((@SETSPEC (prod a0 a1)) y0 (∧ ((@IN a0) y1 x0) ((@IN a1) y2 x1)) ((@̦‚ a0 a1) y1 y2))))))))) T));
symbol term57 a0 a1 ≔ (λ y0 : El (fun a0 bool), (∀ (λ y1 : El num, (∀ (λ y2 : El (fun a1 bool), (∀ (λ y3 : El num, (⇒ (∧ ((@HAS_SIZE a0) y0 y1) ((@HAS_SIZE a1) y2 y3)) ((@HAS_SIZE (prod a0 a1)) ((@GSPEC (prod a0 a1)) (λ y4 : El (prod a0 a1), (∃ (λ y5 : El a0, (∃ (λ y6 : El a1, ((@SETSPEC (prod a0 a1)) y4 (∧ ((@IN a0) y5 y0) ((@IN a1) y6 y2)) ((@̦‚ a0 a1) y5 y6)))))))) (* y1 y3))))))))));
symbol term27 a0 (x0: El (fun a0 bool)) (x1: El num) ≔ (∧ (∧ ((@FINITE a0) x0) (= ((@CARD a0) x0) x1)));
symbol term28 a0 a1 (x0: El (fun a0 bool)) (x1: El num) (x2: El (fun a1 bool)) (x3: El num) ≔ (∧ (∧ ((@FINITE a0) x0) (= ((@CARD a0) x0) x1)) (∧ ((@FINITE a1) x2) (= ((@CARD a1) x2) x3)));
symbol term26 a0 (x0: El (fun a0 bool)) (x1: El num) ≔ (∧ ((@HAS_SIZE a0) x0 x1));
symbol term37 a0 (x0: El (fun a0 bool)) ≔ (* ((@CARD a0) x0));
symbol term32 a0 a1 (x0: El (fun a0 bool)) (x1: El (fun a1 bool)) (x2: El num) (x3: El num) ≔ (∧ ((@FINITE (prod a0 a1)) ((@GSPEC (prod a0 a1)) (λ y0 : El (prod a0 a1), (∃ (λ y1 : El a0, (∃ (λ y2 : El a1, ((@SETSPEC (prod a0 a1)) y0 (∧ ((@IN a0) y1 x0) ((@IN a1) y2 x1)) ((@̦‚ a0 a1) y1 y2))))))))) (= ((@CARD (prod a0 a1)) ((@GSPEC (prod a0 a1)) (λ y0 : El (prod a0 a1), (∃ (λ y1 : El a0, (∃ (λ y2 : El a1, ((@SETSPEC (prod a0 a1)) y0 (∧ ((@IN a0) y1 x0) ((@IN a1) y2 x1)) ((@̦‚ a0 a1) y1 y2))))))))) (* x2 x3)));
symbol term55 a0 a1 (x0: El (fun a0 bool)) ≔ (λ y0 : El num, (∀ (λ y1 : El (fun a1 bool), (∀ (λ y2 : El num, (⇒ (∧ ((@HAS_SIZE a0) x0 y0) ((@HAS_SIZE a1) y1 y2)) ((@HAS_SIZE (prod a0 a1)) ((@GSPEC (prod a0 a1)) (λ y3 : El (prod a0 a1), (∃ (λ y4 : El a0, (∃ (λ y5 : El a1, ((@SETSPEC (prod a0 a1)) y3 (∧ ((@IN a0) y4 x0) ((@IN a1) y5 y1)) ((@̦‚ a0 a1) y4 y5)))))))) (* y0 y2))))))));
symbol term35 a0 (x0: El (fun a0 bool)) ≔ (∧ ((@FINITE a0) x0));
symbol term16 (x0: El bool) (x1: El bool) (x2: El bool) (x3: El bool) ≔ (⇒ (= x0 x2) (⇒ (⇒ x2 (= x1 x3)) (= (⇒ x0 x1) (⇒ x2 x3))));
symbol term42 a0 a1 (x0: El (fun a0 bool)) (x1: El (fun a1 bool)) (x2: El num) (x3: El num) ≔ (⇒ (∧ ((@HAS_SIZE a0) x0 x2) ((@HAS_SIZE a1) x1 x3)) ((@HAS_SIZE (prod a0 a1)) ((@GSPEC (prod a0 a1)) (λ y0 : El (prod a0 a1), (∃ (λ y1 : El a0, (∃ (λ y2 : El a1, ((@SETSPEC (prod a0 a1)) y0 (∧ ((@IN a0) y1 x0) ((@IN a1) y2 x1)) ((@̦‚ a0 a1) y1 y2)))))))) (* x2 x3)));
symbol term14 a0 (x0: El (fun a0 bool)) (x1: El num) ≔ ((λ y0 : El num, (= ((@HAS_SIZE a0) x0 y0) (∧ ((@FINITE a0) x0) (= ((@CARD a0) x0) y0)))) x1);
symbol term11 a0 a1 (x0: El (fun a0 bool)) (x1: El (fun a1 bool)) ≔ (* ((@CARD a0) x0) ((@CARD a1) x1));
symbol term41 a0 a1 (x0: El (fun a0 bool)) (x1: El num) (x2: El (fun a1 bool)) (x3: El num) ≔ (⇒ (⇒ (∧ (∧ ((@FINITE a0) x0) (= ((@CARD a0) x0) x1)) (∧ ((@FINITE a1) x2) (= ((@CARD a1) x2) x3))) (= ((@HAS_SIZE (prod a0 a1)) ((@GSPEC (prod a0 a1)) (λ y0 : El (prod a0 a1), (∃ (λ y1 : El a0, (∃ (λ y2 : El a1, ((@SETSPEC (prod a0 a1)) y0 (∧ ((@IN a0) y1 x0) ((@IN a1) y2 x2)) ((@̦‚ a0 a1) y1 y2)))))))) (* x1 x3)) T)) (= (⇒ (∧ ((@HAS_SIZE a0) x0 x1) ((@HAS_SIZE a1) x2 x3)) ((@HAS_SIZE (prod a0 a1)) ((@GSPEC (prod a0 a1)) (λ y0 : El (prod a0 a1), (∃ (λ y1 : El a0, (∃ (λ y2 : El a1, ((@SETSPEC (prod a0 a1)) y0 (∧ ((@IN a0) y1 x0) ((@IN a1) y2 x2)) ((@̦‚ a0 a1) y1 y2)))))))) (* x1 x3))) (⇒ (∧ (∧ ((@FINITE a0) x0) (= ((@CARD a0) x0) x1)) (∧ ((@FINITE a1) x2) (= ((@CARD a1) x2) x3))) T)));
symbol term56 a0 a1 (x0: El (fun a0 bool)) ≔ (∀ (λ y0 : El num, (∀ (λ y1 : El (fun a1 bool), (∀ (λ y2 : El num, (⇒ (∧ ((@HAS_SIZE a0) x0 y0) ((@HAS_SIZE a1) y1 y2)) ((@HAS_SIZE (prod a0 a1)) ((@GSPEC (prod a0 a1)) (λ y3 : El (prod a0 a1), (∃ (λ y4 : El a0, (∃ (λ y5 : El a1, ((@SETSPEC (prod a0 a1)) y3 (∧ ((@IN a0) y4 x0) ((@IN a1) y5 y1)) ((@̦‚ a0 a1) y4 y5)))))))) (* y0 y2)))))))));
symbol term47 ≔ (∀ (λ y0 : El num, T));
symbol term12 a0 (x0: El (fun a0 bool)) ≔ ((λ y0 : El (fun a0 bool), (∀ (λ y1 : El num, (= ((@HAS_SIZE a0) y0 y1) (∧ ((@FINITE a0) y0) (= ((@CARD a0) y0) y1)))))) x0);
symbol term6 a0 a1 (x0: El (fun a0 bool)) ≔ ((λ y0 : El (fun a0 bool), (∀ (λ y1 : El (fun a1 bool), (⇒ (∧ ((@FINITE a0) y0) ((@FINITE a1) y1)) (= ((@CARD (prod a0 a1)) ((@GSPEC (prod a0 a1)) (λ y2 : El (prod a0 a1), (∃ (λ y3 : El a0, (∃ (λ y4 : El a1, ((@SETSPEC (prod a0 a1)) y2 (∧ ((@IN a0) y3 y0) ((@IN a1) y4 y1)) ((@̦‚ a0 a1) y3 y4))))))))) (* ((@CARD a0) y0) ((@CARD a1) y1))))))) x0);
symbol term0 a0 a1 (x0: El (fun a0 bool)) ≔ ((λ y0 : El (fun a0 bool), (∀ (λ y1 : El (fun a1 bool), (⇒ (∧ ((@FINITE a0) y0) ((@FINITE a1) y1)) ((@FINITE (prod a0 a1)) ((@GSPEC (prod a0 a1)) (λ y2 : El (prod a0 a1), (∃ (λ y3 : El a0, (∃ (λ y4 : El a1, ((@SETSPEC (prod a0 a1)) y2 (∧ ((@IN a0) y3 y0) ((@IN a1) y4 y1)) ((@̦‚ a0 a1) y3 y4))))))))))))) x0);
symbol term45 ≔ (λ y0 : El num, T);
symbol term50 a0 a1 (x0: El (fun a0 bool)) (x1: El num) ≔ (λ y0 : El (fun a1 bool), (∀ (λ y1 : El num, (⇒ (∧ ((@HAS_SIZE a0) x0 x1) ((@HAS_SIZE a1) y0 y1)) ((@HAS_SIZE (prod a0 a1)) ((@GSPEC (prod a0 a1)) (λ y2 : El (prod a0 a1), (∃ (λ y3 : El a0, (∃ (λ y4 : El a1, ((@SETSPEC (prod a0 a1)) y2 (∧ ((@IN a0) y3 x0) ((@IN a1) y4 y0)) ((@̦‚ a0 a1) y3 y4)))))))) (* x1 y1))))));
symbol term30 a0 a1 (x0: El (fun a0 bool)) (x1: El num) (x2: El (fun a1 bool)) (x3: El num) (x4: El bool) ≔ (⇒ (⇒ (∧ (∧ ((@FINITE a0) x0) (= ((@CARD a0) x0) x1)) (∧ ((@FINITE a1) x2) (= ((@CARD a1) x2) x3))) (= ((@HAS_SIZE (prod a0 a1)) ((@GSPEC (prod a0 a1)) (λ y0 : El (prod a0 a1), (∃ (λ y1 : El a0, (∃ (λ y2 : El a1, ((@SETSPEC (prod a0 a1)) y0 (∧ ((@IN a0) y1 x0) ((@IN a1) y2 x2)) ((@̦‚ a0 a1) y1 y2)))))))) (* x1 x3)) x4)) (= (⇒ (∧ ((@HAS_SIZE a0) x0 x1) ((@HAS_SIZE a1) x2 x3)) ((@HAS_SIZE (prod a0 a1)) ((@GSPEC (prod a0 a1)) (λ y0 : El (prod a0 a1), (∃ (λ y1 : El a0, (∃ (λ y2 : El a1, ((@SETSPEC (prod a0 a1)) y0 (∧ ((@IN a0) y1 x0) ((@IN a1) y2 x2)) ((@̦‚ a0 a1) y1 y2)))))))) (* x1 x3))) (⇒ (∧ (∧ ((@FINITE a0) x0) (= ((@CARD a0) x0) x1)) (∧ ((@FINITE a1) x2) (= ((@CARD a1) x2) x3))) x4)));
symbol term23 a0 a1 (x0: El (fun a0 bool)) (x1: El (fun a1 bool)) (x2: El num) (x3: El num) (x4: El bool) ≔ (∀ (λ y0 : El bool, (⇒ (= (∧ ((@HAS_SIZE a0) x0 x2) ((@HAS_SIZE a1) x1 x3)) x4) (⇒ (⇒ x4 (= ((@HAS_SIZE (prod a0 a1)) ((@GSPEC (prod a0 a1)) (λ y1 : El (prod a0 a1), (∃ (λ y2 : El a0, (∃ (λ y3 : El a1, ((@SETSPEC (prod a0 a1)) y1 (∧ ((@IN a0) y2 x0) ((@IN a1) y3 x1)) ((@̦‚ a0 a1) y2 y3)))))))) (* x2 x3)) y0)) (= (⇒ (∧ ((@HAS_SIZE a0) x0 x2) ((@HAS_SIZE a1) x1 x3)) ((@HAS_SIZE (prod a0 a1)) ((@GSPEC (prod a0 a1)) (λ y1 : El (prod a0 a1), (∃ (λ y2 : El a0, (∃ (λ y3 : El a1, ((@SETSPEC (prod a0 a1)) y1 (∧ ((@IN a0) y2 x0) ((@IN a1) y3 x1)) ((@̦‚ a0 a1) y2 y3)))))))) (* x2 x3))) (⇒ x4 y0))))));
symbol term17 (x0: El bool) (x1: El bool) (x2: El bool) ≔ (∀ (λ y0 : El bool, (⇒ (= x0 x2) (⇒ (⇒ x2 (= x1 y0)) (= (⇒ x0 x1) (⇒ x2 y0))))));
symbol term51 a0 ≔ (λ y0 : El (fun a0 bool), T);
symbol term21 a0 a1 (x0: El (fun a0 bool)) (x1: El (fun a1 bool)) (x2: El num) (x3: El num) ≔ ((@HAS_SIZE (prod a0 a1)) ((@GSPEC (prod a0 a1)) (λ y0 : El (prod a0 a1), (∃ (λ y1 : El a0, (∃ (λ y2 : El a1, ((@SETSPEC (prod a0 a1)) y0 (∧ ((@IN a0) y1 x0) ((@IN a1) y2 x1)) ((@̦‚ a0 a1) y1 y2)))))))) (* x2 x3));
symbol term31 a0 a1 (x0: El (type1210 a0 a1)) (x1: El num) ≔ (∧ ((@FINITE (prod a0 a1)) x0) (= ((@CARD (prod a0 a1)) x0) x1));
symbol term15 a0 (x0: El (fun a0 bool)) (x1: El num) ≔ (∧ ((@FINITE a0) x0) (= ((@CARD a0) x0) x1));
symbol term19 a0 a1 (x0: El (fun a0 bool)) (x1: El (fun a1 bool)) (x2: El num) (x3: El num) ≔ (∀ (λ y0 : El bool, (∀ (λ y1 : El bool, (⇒ (= (∧ ((@HAS_SIZE a0) x0 x2) ((@HAS_SIZE a1) x1 x3)) y0) (⇒ (⇒ y0 (= ((@HAS_SIZE (prod a0 a1)) ((@GSPEC (prod a0 a1)) (λ y2 : El (prod a0 a1), (∃ (λ y3 : El a0, (∃ (λ y4 : El a1, ((@SETSPEC (prod a0 a1)) y2 (∧ ((@IN a0) y3 x0) ((@IN a1) y4 x1)) ((@̦‚ a0 a1) y3 y4)))))))) (* x2 x3)) y1)) (= (⇒ (∧ ((@HAS_SIZE a0) x0 x2) ((@HAS_SIZE a1) x1 x3)) ((@HAS_SIZE (prod a0 a1)) ((@GSPEC (prod a0 a1)) (λ y2 : El (prod a0 a1), (∃ (λ y3 : El a0, (∃ (λ y4 : El a1, ((@SETSPEC (prod a0 a1)) y2 (∧ ((@IN a0) y3 x0) ((@IN a1) y4 x1)) ((@̦‚ a0 a1) y3 y4)))))))) (* x2 x3))) (⇒ y0 y1))))))));
symbol term18 (x0: El bool) (x1: El bool) ≔ (∀ (λ y0 : El bool, (∀ (λ y1 : El bool, (⇒ (= x0 y0) (⇒ (⇒ y0 (= x1 y1)) (= (⇒ x0 x1) (⇒ y0 y1))))))));
symbol term52 a0 a1 (x0: El (fun a0 bool)) (x1: El num) ≔ (∀ (λ y0 : El (fun a1 bool), (∀ (λ y1 : El num, (⇒ (∧ ((@HAS_SIZE a0) x0 x1) ((@HAS_SIZE a1) y0 y1)) ((@HAS_SIZE (prod a0 a1)) ((@GSPEC (prod a0 a1)) (λ y2 : El (prod a0 a1), (∃ (λ y3 : El a0, (∃ (λ y4 : El a1, ((@SETSPEC (prod a0 a1)) y2 (∧ ((@IN a0) y3 x0) ((@IN a1) y4 y0)) ((@̦‚ a0 a1) y3 y4)))))))) (* x1 y1)))))));
symbol term24 a0 a1 (x0: El (fun a0 bool)) (x1: El (fun a1 bool)) (x2: El num) (x3: El num) (x4: El bool) (x5: El bool) ≔ ((λ y0 : El bool, (⇒ (= (∧ ((@HAS_SIZE a0) x0 x2) ((@HAS_SIZE a1) x1 x3)) x4) (⇒ (⇒ x4 (= ((@HAS_SIZE (prod a0 a1)) ((@GSPEC (prod a0 a1)) (λ y1 : El (prod a0 a1), (∃ (λ y2 : El a0, (∃ (λ y3 : El a1, ((@SETSPEC (prod a0 a1)) y1 (∧ ((@IN a0) y2 x0) ((@IN a1) y3 x1)) ((@̦‚ a0 a1) y2 y3)))))))) (* x2 x3)) y0)) (= (⇒ (∧ ((@HAS_SIZE a0) x0 x2) ((@HAS_SIZE a1) x1 x3)) ((@HAS_SIZE (prod a0 a1)) ((@GSPEC (prod a0 a1)) (λ y1 : El (prod a0 a1), (∃ (λ y2 : El a0, (∃ (λ y3 : El a1, ((@SETSPEC (prod a0 a1)) y1 (∧ ((@IN a0) y2 x0) ((@IN a1) y3 x1)) ((@̦‚ a0 a1) y2 y3)))))))) (* x2 x3))) (⇒ x4 y0))))) x5);
symbol term2 a0 a1 (x0: El (fun a0 bool)) (x1: El (fun a1 bool)) ≔ ((λ y0 : El (fun a1 bool), (⇒ (∧ ((@FINITE a0) x0) ((@FINITE a1) y0)) ((@FINITE (prod a0 a1)) ((@GSPEC (prod a0 a1)) (λ y1 : El (prod a0 a1), (∃ (λ y2 : El a0, (∃ (λ y3 : El a1, ((@SETSPEC (prod a0 a1)) y1 (∧ ((@IN a0) y2 x0) ((@IN a1) y3 y0)) ((@̦‚ a0 a1) y2 y3))))))))))) x1);
symbol term8 a0 a1 (x0: El (fun a0 bool)) (x1: El (fun a1 bool)) ≔ ((λ y0 : El (fun a1 bool), (⇒ (∧ ((@FINITE a0) x0) ((@FINITE a1) y0)) (= ((@CARD (prod a0 a1)) ((@GSPEC (prod a0 a1)) (λ y1 : El (prod a0 a1), (∃ (λ y2 : El a0, (∃ (λ y3 : El a1, ((@SETSPEC (prod a0 a1)) y1 (∧ ((@IN a0) y2 x0) ((@IN a1) y3 y0)) ((@̦‚ a0 a1) y2 y3))))))))) (* ((@CARD a0) x0) ((@CARD a1) y0))))) x1);
symbol term46 a0 a1 (x0: El (fun a0 bool)) (x1: El (fun a1 bool)) (x2: El num) ≔ (∀ (λ y0 : El num, (⇒ (∧ ((@HAS_SIZE a0) x0 x2) ((@HAS_SIZE a1) x1 y0)) ((@HAS_SIZE (prod a0 a1)) ((@GSPEC (prod a0 a1)) (λ y1 : El (prod a0 a1), (∃ (λ y2 : El a0, (∃ (λ y3 : El a1, ((@SETSPEC (prod a0 a1)) y1 (∧ ((@IN a0) y2 x0) ((@IN a1) y3 x1)) ((@̦‚ a0 a1) y2 y3)))))))) (* x2 y0)))));
symbol term33 a0 a1 (x0: El (fun a0 bool)) (x1: El (fun a1 bool)) ≔ ((@GSPEC (prod a0 a1)) (λ y0 : El (prod a0 a1), (∃ (λ y1 : El a0, (∃ (λ y2 : El a1, ((@SETSPEC (prod a0 a1)) y0 (∧ ((@IN a0) y1 x0) ((@IN a1) y2 x1)) ((@̦‚ a0 a1) y1 y2))))))));
symbol term29 a0 a1 (x0: El (fun a0 bool)) (x1: El num) (x2: El (fun a1 bool)) (x3: El num) (x4: El bool) ≔ (⇒ (= (∧ ((@HAS_SIZE a0) x0 x1) ((@HAS_SIZE a1) x2 x3)) (∧ (∧ ((@FINITE a0) x0) (= ((@CARD a0) x0) x1)) (∧ ((@FINITE a1) x2) (= ((@CARD a1) x2) x3)))) (⇒ (⇒ (∧ (∧ ((@FINITE a0) x0) (= ((@CARD a0) x0) x1)) (∧ ((@FINITE a1) x2) (= ((@CARD a1) x2) x3))) (= ((@HAS_SIZE (prod a0 a1)) ((@GSPEC (prod a0 a1)) (λ y0 : El (prod a0 a1), (∃ (λ y1 : El a0, (∃ (λ y2 : El a1, ((@SETSPEC (prod a0 a1)) y0 (∧ ((@IN a0) y1 x0) ((@IN a1) y2 x2)) ((@̦‚ a0 a1) y1 y2)))))))) (* x1 x3)) x4)) (= (⇒ (∧ ((@HAS_SIZE a0) x0 x1) ((@HAS_SIZE a1) x2 x3)) ((@HAS_SIZE (prod a0 a1)) ((@GSPEC (prod a0 a1)) (λ y0 : El (prod a0 a1), (∃ (λ y1 : El a0, (∃ (λ y2 : El a1, ((@SETSPEC (prod a0 a1)) y0 (∧ ((@IN a0) y1 x0) ((@IN a1) y2 x2)) ((@̦‚ a0 a1) y1 y2)))))))) (* x1 x3))) (⇒ (∧ (∧ ((@FINITE a0) x0) (= ((@CARD a0) x0) x1)) (∧ ((@FINITE a1) x2) (= ((@CARD a1) x2) x3))) x4))));
symbol term13 a0 (x0: El (fun a0 bool)) ≔ (∀ (λ y0 : El num, (= ((@HAS_SIZE a0) x0 y0) (∧ ((@FINITE a0) x0) (= ((@CARD a0) x0) y0)))));
symbol term7 a0 a1 (x0: El (fun a0 bool)) ≔ (∀ (λ y0 : El (fun a1 bool), (⇒ (∧ ((@FINITE a0) x0) ((@FINITE a1) y0)) (= ((@CARD (prod a0 a1)) ((@GSPEC (prod a0 a1)) (λ y1 : El (prod a0 a1), (∃ (λ y2 : El a0, (∃ (λ y3 : El a1, ((@SETSPEC (prod a0 a1)) y1 (∧ ((@IN a0) y2 x0) ((@IN a1) y3 y0)) ((@̦‚ a0 a1) y2 y3))))))))) (* ((@CARD a0) x0) ((@CARD a1) y0))))));
symbol term39 (x0: El num) (x1: El num) ≔ ((@= num) (* x0 x1));
symbol term49 (x0: El bool) ≔ (∀ (λ y0 : El num, x0));
symbol term40 a0 a1 (x0: El (fun a0 bool)) (x1: El (fun a1 bool)) (x2: El num) (x3: El num) ≔ (⇒ (∧ (∧ ((@FINITE a0) x0) (= ((@CARD a0) x0) x2)) (∧ ((@FINITE a1) x1) (= ((@CARD a1) x1) x3))) (= ((@HAS_SIZE (prod a0 a1)) ((@GSPEC (prod a0 a1)) (λ y0 : El (prod a0 a1), (∃ (λ y1 : El a0, (∃ (λ y2 : El a1, ((@SETSPEC (prod a0 a1)) y0 (∧ ((@IN a0) y1 x0) ((@IN a1) y2 x1)) ((@̦‚ a0 a1) y1 y2)))))))) (* x2 x3)) T));
symbol term3 a0 a1 (x0: El (fun a0 bool)) (x1: El (fun a1 bool)) ≔ (⇒ (∧ ((@FINITE a0) x0) ((@FINITE a1) x1)) ((@FINITE (prod a0 a1)) ((@GSPEC (prod a0 a1)) (λ y0 : El (prod a0 a1), (∃ (λ y1 : El a0, (∃ (λ y2 : El a1, ((@SETSPEC (prod a0 a1)) y0 (∧ ((@IN a0) y1 x0) ((@IN a1) y2 x1)) ((@̦‚ a0 a1) y1 y2))))))))));
symbol term22 a0 a1 (x0: El (fun a0 bool)) (x1: El (fun a1 bool)) (x2: El num) (x3: El num) (x4: El bool) ≔ ((λ y0 : El bool, (∀ (λ y1 : El bool, (⇒ (= (∧ ((@HAS_SIZE a0) x0 x2) ((@HAS_SIZE a1) x1 x3)) y0) (⇒ (⇒ y0 (= ((@HAS_SIZE (prod a0 a1)) ((@GSPEC (prod a0 a1)) (λ y2 : El (prod a0 a1), (∃ (λ y3 : El a0, (∃ (λ y4 : El a1, ((@SETSPEC (prod a0 a1)) y2 (∧ ((@IN a0) y3 x0) ((@IN a1) y4 x1)) ((@̦‚ a0 a1) y3 y4)))))))) (* x2 x3)) y1)) (= (⇒ (∧ ((@HAS_SIZE a0) x0 x2) ((@HAS_SIZE a1) x1 x3)) ((@HAS_SIZE (prod a0 a1)) ((@GSPEC (prod a0 a1)) (λ y2 : El (prod a0 a1), (∃ (λ y3 : El a0, (∃ (λ y4 : El a1, ((@SETSPEC (prod a0 a1)) y2 (∧ ((@IN a0) y3 x0) ((@IN a1) y4 x1)) ((@̦‚ a0 a1) y3 y4)))))))) (* x2 x3))) (⇒ y0 y1))))))) x4);
symbol term36 a0 a1 (x0: El (fun a0 bool)) (x1: El (fun a1 bool)) ≔ (∧ ((@FINITE (prod a0 a1)) ((@GSPEC (prod a0 a1)) (λ y0 : El (prod a0 a1), (∃ (λ y1 : El a0, (∃ (λ y2 : El a1, ((@SETSPEC (prod a0 a1)) y0 (∧ ((@IN a0) y1 x0) ((@IN a1) y2 x1)) ((@̦‚ a0 a1) y1 y2))))))))));
symbol term5 a0 a1 (x0: El (fun a0 bool)) (x1: El (fun a1 bool)) ≔ ((@FINITE (prod a0 a1)) ((@GSPEC (prod a0 a1)) (λ y0 : El (prod a0 a1), (∃ (λ y1 : El a0, (∃ (λ y2 : El a1, ((@SETSPEC (prod a0 a1)) y0 (∧ ((@IN a0) y1 x0) ((@IN a1) y2 x1)) ((@̦‚ a0 a1) y1 y2)))))))));
symbol term43 a0 a1 (x0: El (fun a0 bool)) (x1: El num) (x2: El (fun a1 bool)) (x3: El num) ≔ (⇒ (∧ (∧ ((@FINITE a0) x0) (= ((@CARD a0) x0) x1)) (∧ ((@FINITE a1) x2) (= ((@CARD a1) x2) x3))) T);
symbol term53 a0 ≔ (∀ (λ y0 : El (fun a0 bool), T));
