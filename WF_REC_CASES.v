Require Import coq.
Require Import theory_hol.
Require Import hol_types.
Require Import hol_terms.
Require Import hol_axioms.
Require Import hol_type_abbrevs.
Require Import WF_REC_CASES_term_abbrevs.
Require Import CASEWISE_spec.
Require Import DISJ_ACI_spec.
Require Import DISJ_ASSOC_spec.
Require Import FORALL_PAIR_THM_spec.
Require Import LEFT_IMP_EXISTS_THM_spec.
Require Import NOT_CLAUSES_WEAK_spec.
Require Import RIGHT_IMP_FORALL_THM_spec.
Require Import WF_REC_TAIL_GENERAL_spec.
Require Import list_INDUCT_spec.
Require Import thm0_spec.
Require Import thm10578_spec.
Require Import thm10597_spec.
Require Import thm1100834_spec.
Require Import thm1100835_spec.
Require Import thm1100843_spec.
Require Import thm1100844_spec.
Require Import thm12653_spec.
Require Import thm16474_spec.
Require Import thm16506_spec.
Require Import thm16507_spec.
Require Import thm16933_spec.
Require Import thm17045_spec.
Require Import thm17160_spec.
Require Import thm17265_spec.
Require Import thm17362_spec.
Require Import thm17646_spec.
Require Import thm17784_spec.
Require Import thm1809_spec.
Require Import thm1810_spec.
Require Import thm1815_spec.
Require Import thm1816_spec.
Require Import thm1820_spec.
Require Import thm1821_spec.
Require Import thm1822_spec.
Require Import thm1832_spec.
Require Import thm18392_spec.
Require Import thm18394_spec.
Require Import thm1842_spec.
Require Import thm1844_spec.
Require Import thm1857_spec.
Require Import thm1862_spec.
Require Import thm1863_spec.
Require Import thm18898_spec.
Require Import thm18899_spec.
Require Import thm18904_spec.
Require Import thm18905_spec.
Require Import thm18910_spec.
Require Import thm18911_spec.
Require Import thm18916_spec.
Require Import thm18917_spec.
Require Import thm18922_spec.
Require Import thm18923_spec.
Require Import thm18928_spec.
Require Import thm18929_spec.
Require Import thm18946_spec.
Require Import thm18947_spec.
Require Import thm18970_spec.
Require Import thm18971_spec.
Require Import thm19012_spec.
Require Import thm19013_spec.
Require Import thm19490_spec.
Require Import thm19699_spec.
Require Import thm19732_spec.
Require Import thm20425_spec.
Require Import thm20611_spec.
Require Import thm20612_spec.
Require Import thm20661_spec.
Require Import thm20662_spec.
Require Import thm20664_spec.
Require Import thm20665_spec.
Require Import thm20668_spec.
Require Import thm20682_spec.
Require Import thm20764_spec.
Require Import thm20780_spec.
Require Import thm20789_spec.
Require Import thm20895_spec.
Require Import thm21021_spec.
Require Import thm21028_spec.
Require Import thm21107_spec.
Require Import thm21114_spec.
Require Import thm21182_spec.
Require Import thm21386_spec.
Require Import thm21394_spec.
Require Import thm21490_spec.
Require Import thm21501_spec.
Require Import thm21598_spec.
Require Import thm21735_spec.
Require Import thm21736_spec.
Require Import thm21761_spec.
Require Import thm48805_spec.
Require Import thm48806_spec.
Require Import thm48811_spec.
Require Import thm48812_spec.
Require Import thm48920_spec.
Require Import thm51_spec.
Require Import thm51128_spec.
Require Import thm51159_spec.
Require Import thm7_spec.
Lemma lem8356519 (t1 : Prop) : term0 t1.
Proof. exact (@lem693 t1). Qed.
Lemma lem8356520 (t1 : Prop) : (term0 t1) = (term1 t1).
Proof. exact (eq_refl (term0 t1)). Qed.
Lemma lem8356521 (t1 : Prop) : term1 t1.
Proof. exact (EQ_MP (@lem8356520 t1) (@lem8356519 t1)). Qed.
Lemma lem8356522 (t1 : Prop) (t2 : Prop) : term2 t1 t2.
Proof. exact (@lem8356521 t1 t2). Qed.
Lemma lem8356523 (t1 : Prop) (t2 : Prop) : (term2 t1 t2) = (term3 t1 t2).
Proof. exact (eq_refl (term2 t1 t2)). Qed.
Lemma lem8356524 (t1 : Prop) (t2 : Prop) : term3 t1 t2.
Proof. exact (EQ_MP (@lem8356523 t1 t2) (@lem8356522 t1 t2)). Qed.
Lemma lem8356525 (t1 : Prop) (t2 : Prop) (t3 : Prop) : term4 t1 t2 t3.
Proof. exact (@lem8356524 t1 t2 t3). Qed.
Lemma lem8356526 (t1 : Prop) (t2 : Prop) (t3 : Prop) : (term4 t1 t2 t3) = ((term5 t1 t2 t3) = (term6 t1 t2 t3)).
Proof. exact (eq_refl (term4 t1 t2 t3)). Qed.
Lemma lem8356527 (t1 : Prop) (t2 : Prop) (t3 : Prop) : (term5 t1 t2 t3) = (term6 t1 t2 t3).
Proof. exact (EQ_MP (@lem8356526 t1 t2 t3) (@lem8356525 t1 t2 t3)). Qed.
Lemma lem8356528 (t1 : Prop) (t2 : Prop) (t3 : Prop) : (term6 t1 t2 t3) = (term5 t1 t2 t3).
Proof. exact (SYM (@lem8356527 t1 t2 t3)). Qed.
Lemma lem8356529 {A B : Type'} (lt2 : type1402 A) (h1 : term7 A B lt2) : term7 A B lt2.
Proof. exact (h1). Qed.
Lemma lem8356530 {A B : Type'} (P : type551 A B) (lt2 : type1402 A) (h1 : term7 A B lt2) : term8 A B lt2 P.
Proof. exact (@lem8356529 A B lt2 h1 P). Qed.
Lemma lem8356531 {A B : Type'} (lt2 : type1402 A) (P : type551 A B) : (term8 A B lt2 P) = (term9 A B lt2 P).
Proof. exact (eq_refl (term8 A B lt2 P)). Qed.
Lemma lem8356532 {A B : Type'} (P : type551 A B) (lt2 : type1402 A) (h1 : term7 A B lt2) : term9 A B lt2 P.
Proof. exact (EQ_MP (@lem8356531 A B lt2 P) (@lem8356530 A B P lt2 h1)). Qed.
Lemma lem8356533 {A B : Type'} (P : type551 A B) (G : type548 A B) (lt2 : type1402 A) (h1 : term7 A B lt2) : term10 A B lt2 P G.
Proof. exact (@lem8356532 A B P lt2 h1 G). Qed.
Lemma lem8356534 {A B : Type'} (lt2 : type1402 A) (P : type551 A B) (G : type548 A B) : (term10 A B lt2 P G) = (term11 A B lt2 P G).
Proof. exact (eq_refl (term10 A B lt2 P G)). Qed.
Lemma lem8356535 {A B : Type'} (P : type551 A B) (G : type548 A B) (lt2 : type1402 A) (h1 : term7 A B lt2) : term11 A B lt2 P G.
Proof. exact (EQ_MP (@lem8356534 A B lt2 P G) (@lem8356533 A B P G lt2 h1)). Qed.
Lemma lem8356536 {A B : Type'} (P : type551 A B) (G : type548 A B) (H : type549 A B) (lt2 : type1402 A) (h1 : term7 A B lt2) : term12 A B lt2 P G H.
Proof. exact (@lem8356535 A B P G lt2 h1 H). Qed.
Lemma lem8356537 {A B : Type'} (lt2 : type1402 A) (P : type551 A B) (G : type548 A B) (H : type549 A B) : (term12 A B lt2 P G H) = (term13 A B lt2 P G H).
Proof. exact (eq_refl (term12 A B lt2 P G H)). Qed.
Lemma lem8356538 {A B : Type'} (P : type551 A B) (G : type548 A B) (H : type549 A B) (lt2 : type1402 A) (h1 : term7 A B lt2) : term13 A B lt2 P G H.
Proof. exact (EQ_MP (@lem8356537 A B lt2 P G H) (@lem8356536 A B P G H lt2 h1)). Qed.
Lemma lem8356539 {A B : Type'} (H : type549 A B) (P : type551 A B) (G : type548 A B) (lt2 : type1402 A) (h1 : term14 A B H P G lt2) : term14 A B H P G lt2.
Proof. exact (h1). Qed.
Lemma lem8356540 {A B : Type'} (H : type549 A B) (P : type551 A B) (G : type548 A B) (lt2 : type1402 A) (h1 : term7 A B lt2) (h2 : term14 A B H P G lt2) : term15 A B P G H.
Proof. exact (@lem8356538 A B P G H lt2 h1 (@lem8356539 A B H P G lt2 h2)). Qed.
Lemma lem8356541 {A B : Type'} (H : type549 A B) (P : type551 A B) (G : type548 A B) (lt2 : type1402 A) (h1 : term14 A B H P G lt2) : term16 A B lt2 P G H.
Proof. exact (fun h0 : term7 A B lt2 => @lem8356540 A B H P G lt2 h0 h1). Qed.
Lemma lem8356542 {A B : Type'} (lt2 : type1402 A) (h1 : term7 A B lt2) : term7 A B lt2.
Proof. exact (h1). Qed.
Lemma lem8356543 {A B : Type'} (H : type549 A B) (P : type551 A B) (G : type548 A B) (lt2 : type1402 A) (h1 : term7 A B lt2) (h2 : term14 A B H P G lt2) : term15 A B P G H.
Proof. exact (@lem8356541 A B H P G lt2 h2 (@lem8356542 A B lt2 h1)). Qed.
Lemma lem8356544 {A B : Type'} (P : type551 A B) (G : type548 A B) (H : type549 A B) (lt2 : type1402 A) (h1 : term7 A B lt2) : term13 A B lt2 P G H.
Proof. exact (fun h0 : term14 A B H P G lt2 => @lem8356543 A B H P G lt2 h1 h0). Qed.
Lemma lem8356545 {A B : Type'} (P : type551 A B) (G : type548 A B) (lt2 : type1402 A) (h1 : term7 A B lt2) : term11 A B lt2 P G.
Proof. exact (fun H : type549 A B => @lem8356544 A B P G H lt2 h1). Qed.
Lemma lem8356546 {A B : Type'} (P : type551 A B) (lt2 : type1402 A) (h1 : term7 A B lt2) : term9 A B lt2 P.
Proof. exact (fun G : type548 A B => @lem8356545 A B P G lt2 h1). Qed.
Lemma lem8356547 {A B : Type'} (lt2 : type1402 A) (h1 : term7 A B lt2) : term7 A B lt2.
Proof. exact (fun P : type551 A B => @lem8356546 A B P lt2 h1). Qed.
Lemma lem8356548 {A B : Type'} (lt2 : type1402 A) : term17 A B lt2.
Proof. exact (fun h0 : term7 A B lt2 => @lem8356547 A B lt2 h0). Qed.
Lemma lem8356549 {A B : Type'} (lt2 : type1402 A) : term7 A B lt2.
Proof. exact (@lem8356548 A B lt2 (@lem510969 A B lt2)). Qed.
Lemma lem8356550 {A B : Type'} (lt2 : type1402 A) (P : type551 A B) : term8 A B lt2 P.
Proof. exact (@lem8356549 A B lt2 P). Qed.
Lemma lem8356551 {A B : Type'} (lt2 : type1402 A) (P : type551 A B) : (term8 A B lt2 P) = (term9 A B lt2 P).
Proof. exact (eq_refl (term8 A B lt2 P)). Qed.
Lemma lem8356552 {A B : Type'} (lt2 : type1402 A) (P : type551 A B) : term9 A B lt2 P.
Proof. exact (EQ_MP (@lem8356551 A B lt2 P) (@lem8356550 A B lt2 P)). Qed.
Lemma lem8356553 {A B : Type'} (lt2 : type1402 A) (P : type551 A B) (G : type548 A B) : term10 A B lt2 P G.
Proof. exact (@lem8356552 A B lt2 P G). Qed.
Lemma lem8356554 {A B : Type'} (lt2 : type1402 A) (P : type551 A B) (G : type548 A B) : (term10 A B lt2 P G) = (term11 A B lt2 P G).
Proof. exact (eq_refl (term10 A B lt2 P G)). Qed.
Lemma lem8356555 {A B : Type'} (lt2 : type1402 A) (P : type551 A B) (G : type548 A B) : term11 A B lt2 P G.
Proof. exact (EQ_MP (@lem8356554 A B lt2 P G) (@lem8356553 A B lt2 P G)). Qed.
Lemma lem8356556 {A B : Type'} (lt2 : type1402 A) (P : type551 A B) (G : type548 A B) (H : type549 A B) : term12 A B lt2 P G H.
Proof. exact (@lem8356555 A B lt2 P G H). Qed.
Lemma lem8356557 {A B : Type'} (lt2 : type1402 A) (P : type551 A B) (G : type548 A B) (H : type549 A B) : (term12 A B lt2 P G H) = (term13 A B lt2 P G H).
Proof. exact (eq_refl (term12 A B lt2 P G H)). Qed.
Lemma lem8356559 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (H : type796 _146290 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (H' : type796 _146290 _146293) (h1 : term18 _146290 _146293 lt2 H P G H') : term18 _146290 _146293 lt2 H P G H'.
Proof. exact (h1). Qed.
Lemma lem8356560 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (H : type796 _146290 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (H' : type796 _146290 _146293) (h1 : term19 _146290 _146293 lt2 H P G H') : term19 _146290 _146293 lt2 H P G H'.
Proof. exact (h1). Qed.
Lemma lem8356561 {_146293 : Type'} (lt2 : type1402 _146293) (h1 : @WF _146293 lt2) : @WF _146293 lt2.
Proof. exact (h1). Qed.
Lemma lem8356562 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (H : type796 _146290 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (H' : type796 _146290 _146293) (h1 : term20 _146290 _146293 lt2 H P G H') : term20 _146290 _146293 lt2 H P G H'.
Proof. exact (h1). Qed.
Lemma lem8356563 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (H' : type796 _146290 _146293) (h1 : term21 _146290 _146293 lt2 P G H') : term21 _146290 _146293 lt2 P G H'.
Proof. exact (h1). Qed.
Lemma lem8356564 {_146290 _146293 : Type'} (H : type796 _146290 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (H' : type796 _146290 _146293) (h1 : term22 _146290 _146293 H P G H') : term22 _146290 _146293 H P G H'.
Proof. exact (h1). Qed.
Lemma lem8356565 {_146290 _146293 : Type'} (P : type799 _146290 _146293) (G : type797 _146290 _146293) (lt2 : type1402 _146293) (h1 : term23 _146290 _146293 P G lt2) : term23 _146290 _146293 P G lt2.
Proof. exact (h1). Qed.
Lemma lem8356590 {_146290 _146293 : Type'} (f : _146293 -> _146290) (H : type796 _146290 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (H' : type796 _146290 _146293) (h1 : term22 _146290 _146293 H P G H') : term24 _146290 _146293 H P G H' f.
Proof. exact (@lem8356564 _146290 _146293 H P G H' h1 f). Qed.
Lemma lem8356591 {_146290 _146293 : Type'} (H : type796 _146290 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (H' : type796 _146290 _146293) (f : _146293 -> _146290) : (term24 _146290 _146293 H P G H' f) = (term25 _146290 _146293 H P G H' f).
Proof. exact (eq_refl (term24 _146290 _146293 H P G H' f)). Qed.
Lemma lem8356592 {_146290 _146293 : Type'} (f : _146293 -> _146290) (H : type796 _146290 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (H' : type796 _146290 _146293) (h1 : term22 _146290 _146293 H P G H') : term25 _146290 _146293 H P G H' f.
Proof. exact (EQ_MP (@lem8356591 _146290 _146293 H P G H' f) (@lem8356590 _146290 _146293 f H P G H' h1)). Qed.
Lemma lem8356593 {_146290 _146293 : Type'} (f : _146293 -> _146290) (x : _146293) (H : type796 _146290 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (H' : type796 _146290 _146293) (h1 : term22 _146290 _146293 H P G H') : term26 _146290 _146293 H P G H' f x.
Proof. exact (@lem8356592 _146290 _146293 f H P G H' h1 x). Qed.
Lemma lem8356594 {_146290 _146293 : Type'} (H : type796 _146290 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (H' : type796 _146290 _146293) (f : _146293 -> _146290) (x : _146293) : (term26 _146290 _146293 H P G H' f x) = ((H f x) = (term27 _146290 _146293 P G H' f x)).
Proof. exact (eq_refl (term26 _146290 _146293 H P G H' f x)). Qed.
Lemma lem8356607 {_146290 _146293 : Type'} (f : _146293 -> _146290) (x : _146293) (H : type796 _146290 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (H' : type796 _146290 _146293) (h1 : term22 _146290 _146293 H P G H') : (H f x) = (term27 _146290 _146293 P G H' f x).
Proof. exact (EQ_MP (@lem8356594 _146290 _146293 H P G H' f x) (@lem8356593 _146290 _146293 f x H P G H' h1)). Qed.
Lemma lem8356608 {_146290 _146293 : Type'} (f : _146293 -> _146290) (x : _146293) (H : type796 _146290 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (H' : type796 _146290 _146293) (h1 : term22 _146290 _146293 H P G H') : (H f x) = (term27 _146290 _146293 P G H' f x).
Proof. exact (@lem8356607 _146290 _146293 f x H P G H' h1). Qed.
Lemma lem8356609 {_146290 _146293 : Type'} (f : _146293 -> _146290) (x : _146293) : (term28 _146290 _146293 f x) = (term28 _146290 _146293 f x).
Proof. exact (eq_refl (term28 _146290 _146293 f x)). Qed.
Lemma lem8356610 {_146290 _146293 : Type'} (f : _146293 -> _146290) (x : _146293) (H : type796 _146290 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (H' : type796 _146290 _146293) (h1 : term22 _146290 _146293 H P G H') : ((f x) = (H f x)) = ((f x) = (term27 _146290 _146293 P G H' f x)).
Proof. exact (MK_COMB (@lem8356609 _146290 _146293 f x) (@lem8356608 _146290 _146293 f x H P G H' h1)). Qed.
Lemma lem8356613 {_146290 _146293 : Type'} (f : _146293 -> _146290) (H : type796 _146290 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (H' : type796 _146290 _146293) (h1 : term22 _146290 _146293 H P G H') : (term29 _146290 _146293 H f) = (term30 _146290 _146293 P G H' f).
Proof. exact (fun_ext (fun x : _146293 => @lem8356610 _146290 _146293 f x H P G H' h1)). Qed.
Lemma lem8356614 {_146293 : Type'} : (@all _146293) = (@all _146293).
Proof. exact (eq_refl (@all _146293)). Qed.
Lemma lem8356615 {_146290 _146293 : Type'} (f : _146293 -> _146290) (H : type796 _146290 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (H' : type796 _146290 _146293) (h1 : term22 _146290 _146293 H P G H') : (term31 _146290 _146293 H f) = (term32 _146290 _146293 P G H' f).
Proof. exact (MK_COMB (@lem8356614 _146293) (@lem8356613 _146290 _146293 f H P G H' h1)). Qed.
Lemma lem8356620 {_146290 _146293 : Type'} (H : type796 _146290 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (H' : type796 _146290 _146293) (h1 : term22 _146290 _146293 H P G H') : (term33 _146290 _146293 H) = (term34 _146290 _146293 P G H').
Proof. exact (fun_ext (fun f : _146293 -> _146290 => @lem8356615 _146290 _146293 f H P G H' h1)). Qed.
Lemma lem8356621 {_146290 _146293 : Type'} : (@ex (_146293 -> _146290)) = (@ex (_146293 -> _146290)).
Proof. exact (eq_refl (@ex (_146293 -> _146290))). Qed.
Lemma lem8356622 {_146290 _146293 : Type'} (H : type796 _146290 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (H' : type796 _146290 _146293) (h1 : term22 _146290 _146293 H P G H') : (term35 _146290 _146293 H) = (term36 _146290 _146293 P G H').
Proof. exact (MK_COMB (@lem8356621 _146290 _146293) (@lem8356620 _146290 _146293 H P G H' h1)). Qed.
Lemma lem8356627 {_146290 _146293 : Type'} (H : type796 _146290 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (H' : type796 _146290 _146293) (h1 : term22 _146290 _146293 H P G H') : (term36 _146290 _146293 P G H') = (term35 _146290 _146293 H).
Proof. exact (SYM (@lem8356622 _146290 _146293 H P G H' h1)). Qed.
Lemma lem8356629 {A B : Type'} (lt2 : type1402 A) (P : type551 A B) (G : type548 A B) (H : type549 A B) : term13 A B lt2 P G H.
Proof. exact (EQ_MP (@lem8356557 A B lt2 P G H) (@lem8356556 A B lt2 P G H)). Qed.
Lemma lem8356630 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (H : type796 _146290 _146293) : term37 _146290 _146293 lt2 P G H.
Proof. exact (@lem8356629 _146293 _146290 lt2 P G H). Qed.
Lemma lem8356631 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (H' : type796 _146290 _146293) : term37 _146290 _146293 lt2 P G H'.
Proof. exact (@lem8356630 _146290 _146293 lt2 P G H'). Qed.
Lemma lem8356633 (p : Prop) : p = (term38 p).
Proof. exact (EQ_MP (@lem10578 p) (@lem10597 p)). Qed.
Lemma lem8356634 {_146290 _146293 : Type'} (H' : type796 _146290 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (lt2 : type1402 _146293) : (term39 _146290 _146293 H' P G lt2) = (term40 _146290 _146293 H' P G lt2).
Proof. exact (@lem8356633 (term39 _146290 _146293 H' P G lt2)). Qed.
Lemma lem8356635 {_146290 _146293 : Type'} (H' : type796 _146290 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (lt2 : type1402 _146293) : (term40 _146290 _146293 H' P G lt2) = (term39 _146290 _146293 H' P G lt2).
Proof. exact (SYM (@lem8356634 _146290 _146293 H' P G lt2)). Qed.
Lemma lem8356636 {_146290 _146293 : Type'} (H' : type796 _146290 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (lt2 : type1402 _146293) (h1 : term41 _146290 _146293 H' P G lt2) : term41 _146290 _146293 H' P G lt2.
Proof. exact (h1). Qed.
Lemma lem8356639 {_146290 _146293 : Type'} (H : type796 _146290 _146293) (H' : type796 _146290 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (lt2 : type1402 _146293) (h1 : term42 _146290 _146293 H H' P G lt2) : term42 _146290 _146293 H H' P G lt2.
Proof. exact (h1). Qed.
Lemma lem8356640 {_146290 _146293 : Type'} (H : type796 _146290 _146293) (H' : type796 _146290 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (lt2 : type1402 _146293) : term43 _146290 _146293 H H' P G lt2.
Proof. exact (fun h0 : term42 _146290 _146293 H H' P G lt2 => @lem8356639 _146290 _146293 H H' P G lt2 h0). Qed.
Lemma lem8356641 {_146290 _146293 : Type'} (H : type796 _146290 _146293) (H' : type796 _146290 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (lt2 : type1402 _146293) (h1 : term43 _146290 _146293 H H' P G lt2) : term43 _146290 _146293 H H' P G lt2.
Proof. exact (h1). Qed.
Lemma lem8356642 {_146290 _146293 : Type'} (H : type796 _146290 _146293) (H' : type796 _146290 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (lt2 : type1402 _146293) (h1 : term42 _146290 _146293 H H' P G lt2) : term42 _146290 _146293 H H' P G lt2.
Proof. exact (h1). Qed.
Lemma lem8356643 {_146290 _146293 : Type'} (H : type796 _146290 _146293) (H' : type796 _146290 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (lt2 : type1402 _146293) (h1 : term42 _146290 _146293 H H' P G lt2) (h2 : term43 _146290 _146293 H H' P G lt2) : term42 _146290 _146293 H H' P G lt2.
Proof. exact (@lem8356641 _146290 _146293 H H' P G lt2 h2 (@lem8356642 _146290 _146293 H H' P G lt2 h1)). Qed.
Lemma lem8356644 {_146290 _146293 : Type'} (H : type796 _146290 _146293) (H' : type796 _146290 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (lt2 : type1402 _146293) (h1 : term42 _146290 _146293 H H' P G lt2) : term44 _146290 _146293 H H' P G lt2.
Proof. exact (fun h0 : term43 _146290 _146293 H H' P G lt2 => @lem8356643 _146290 _146293 H H' P G lt2 h1 h0). Qed.
Lemma lem8356645 {_146290 _146293 : Type'} (H : type796 _146290 _146293) (H' : type796 _146290 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (lt2 : type1402 _146293) (h1 : term43 _146290 _146293 H H' P G lt2) : term43 _146290 _146293 H H' P G lt2.
Proof. exact (h1). Qed.
Lemma lem8356646 {_146290 _146293 : Type'} (H : type796 _146290 _146293) (H' : type796 _146290 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (lt2 : type1402 _146293) (h1 : term42 _146290 _146293 H H' P G lt2) (h2 : term43 _146290 _146293 H H' P G lt2) : term42 _146290 _146293 H H' P G lt2.
Proof. exact (@lem8356644 _146290 _146293 H H' P G lt2 h1 (@lem8356645 _146290 _146293 H H' P G lt2 h2)). Qed.
Lemma lem8356647 {_146290 _146293 : Type'} (H : type796 _146290 _146293) (H' : type796 _146290 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (lt2 : type1402 _146293) (h1 : term43 _146290 _146293 H H' P G lt2) : term43 _146290 _146293 H H' P G lt2.
Proof. exact (fun h0 : term42 _146290 _146293 H H' P G lt2 => @lem8356646 _146290 _146293 H H' P G lt2 h0 h1). Qed.
Lemma lem8356648 {_146290 _146293 : Type'} (H : type796 _146290 _146293) (H' : type796 _146290 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (lt2 : type1402 _146293) : term45 _146290 _146293 H H' P G lt2.
Proof. exact (fun h0 : term43 _146290 _146293 H H' P G lt2 => @lem8356647 _146290 _146293 H H' P G lt2 h0). Qed.
Lemma lem8356651 {_146290 _146293 : Type'} (H : type796 _146290 _146293) (H' : type796 _146290 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (lt2 : type1402 _146293) : term43 _146290 _146293 H H' P G lt2.
Proof. exact (@lem8356648 _146290 _146293 H H' P G lt2 (@lem8356640 _146290 _146293 H H' P G lt2)). Qed.
Lemma lem8356652 {_146290 _146293 : Type'} (H : type796 _146290 _146293) (H' : type796 _146290 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (lt2 : type1402 _146293) : term43 _146290 _146293 H H' P G lt2.
Proof. exact (@lem8356651 _146290 _146293 H H' P G lt2). Qed.
Lemma lem8356730 (t : Prop) : (t -> False) = (~ t).
Proof. exact (proj2 (@lem16474 t)). Qed.
Lemma lem8356731 {_146290 _146293 : Type'} (H' : type796 _146290 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (lt2 : type1402 _146293) : (term40 _146290 _146293 H' P G lt2) = (term46 _146290 _146293 H' P G lt2).
Proof. exact (@lem8356730 (term41 _146290 _146293 H' P G lt2)). Qed.
Lemma lem8356733 (t : Prop) : (term47 t) = t.
Proof. exact (EQ_MP (@lem16507 t) (@lem16506 t)). Qed.
Lemma lem8356734 {_146290 _146293 : Type'} (H' : type796 _146290 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (lt2 : type1402 _146293) : (term46 _146290 _146293 H' P G lt2) = (term39 _146290 _146293 H' P G lt2).
Proof. exact (@lem8356733 (term39 _146290 _146293 H' P G lt2)). Qed.
Lemma lem8356737 {_146290 _146293 : Type'} (H' : type796 _146290 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (lt2 : type1402 _146293) : (term40 _146290 _146293 H' P G lt2) = (term39 _146290 _146293 H' P G lt2).
Proof. exact (TRANS (@lem8356731 _146290 _146293 H' P G lt2) (@lem8356734 _146290 _146293 H' P G lt2)). Qed.
Lemma lem8356802 {_146290 _146293 : Type'} (H : type796 _146290 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (H' : type796 _146290 _146293) : (term48 _146290 _146293 H P G H') = (term48 _146290 _146293 H P G H').
Proof. exact (eq_refl (term48 _146290 _146293 H P G H')). Qed.
Lemma lem8356803 {_146290 _146293 : Type'} (H : type796 _146290 _146293) (H' : type796 _146290 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (lt2 : type1402 _146293) : (term49 _146290 _146293 H H' P G lt2) = (term50 _146290 _146293 H H' P G lt2).
Proof. exact (MK_COMB (@lem8356802 _146290 _146293 H P G H') (@lem8356737 _146290 _146293 H' P G lt2)). Qed.
Lemma lem8356806 {_146290 _146293 : Type'} (P : type799 _146290 _146293) (G : type797 _146290 _146293) (lt2 : type1402 _146293) : (term51 _146290 _146293 P G lt2) = (term51 _146290 _146293 P G lt2).
Proof. exact (eq_refl (term51 _146290 _146293 P G lt2)). Qed.
Lemma lem8356807 {_146290 _146293 : Type'} (H : type796 _146290 _146293) (H' : type796 _146290 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (lt2 : type1402 _146293) : (term52 _146290 _146293 H H' P G lt2) = (term53 _146290 _146293 H H' P G lt2).
Proof. exact (MK_COMB (@lem8356806 _146290 _146293 P G lt2) (@lem8356803 _146290 _146293 H H' P G lt2)). Qed.
Lemma lem8356810 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (H' : type796 _146290 _146293) : (term54 _146290 _146293 lt2 P G H') = (term54 _146290 _146293 lt2 P G H').
Proof. exact (eq_refl (term54 _146290 _146293 lt2 P G H')). Qed.
Lemma lem8356811 {_146290 _146293 : Type'} (H : type796 _146290 _146293) (H' : type796 _146290 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (lt2 : type1402 _146293) : (term55 _146290 _146293 H H' P G lt2) = (term56 _146290 _146293 H H' P G lt2).
Proof. exact (MK_COMB (@lem8356810 _146290 _146293 lt2 P G H') (@lem8356807 _146290 _146293 H H' P G lt2)). Qed.
Lemma lem8356814 {_146293 : Type'} (lt2 : type1402 _146293) : (term57 _146293 lt2) = (term57 _146293 lt2).
Proof. exact (eq_refl (term57 _146293 lt2)). Qed.
Lemma lem8356815 {_146290 _146293 : Type'} (H : type796 _146290 _146293) (H' : type796 _146290 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (lt2 : type1402 _146293) : (term42 _146290 _146293 H H' P G lt2) = (term58 _146290 _146293 H H' P G lt2).
Proof. exact (MK_COMB (@lem8356814 _146293 lt2) (@lem8356811 _146290 _146293 H H' P G lt2)). Qed.
Lemma lem8356818 {_146290 _146293 : Type'} (H' : type796 _146290 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (lt2 : type1402 _146293) : (term59 _146290 _146293 H' P G lt2) = (term60 _146290 _146293 H' P G lt2).
Proof. exact (fun_ext (fun H : type796 _146290 _146293 => @lem8356815 _146290 _146293 H H' P G lt2)). Qed.
Lemma lem8356819 {_146290 _146293 : Type'} : (@all ((_146293 -> _146290) -> _146293 -> _146290)) = (@all ((_146293 -> _146290) -> _146293 -> _146290)).
Proof. exact (eq_refl (@all ((_146293 -> _146290) -> _146293 -> _146290))). Qed.
Lemma lem8356820 {_146290 _146293 : Type'} (H' : type796 _146290 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (lt2 : type1402 _146293) : (term61 _146290 _146293 H' P G lt2) = (term62 _146290 _146293 H' P G lt2).
Proof. exact (MK_COMB (@lem8356819 _146290 _146293) (@lem8356818 _146290 _146293 H' P G lt2)). Qed.
Lemma lem8356825 {_146290 _146293 : Type'} (P : type799 _146290 _146293) (G : type797 _146290 _146293) (lt2 : type1402 _146293) : (term63 _146290 _146293 P G lt2) = (term64 _146290 _146293 P G lt2).
Proof. exact (fun_ext (fun H' : type796 _146290 _146293 => @lem8356820 _146290 _146293 H' P G lt2)). Qed.
Lemma lem8356826 {_146290 _146293 : Type'} : (@all ((_146293 -> _146290) -> _146293 -> _146290)) = (@all ((_146293 -> _146290) -> _146293 -> _146290)).
Proof. exact (eq_refl (@all ((_146293 -> _146290) -> _146293 -> _146290))). Qed.
Lemma lem8356827 {_146290 _146293 : Type'} (P : type799 _146290 _146293) (G : type797 _146290 _146293) (lt2 : type1402 _146293) : (term65 _146290 _146293 P G lt2) = (term66 _146290 _146293 P G lt2).
Proof. exact (MK_COMB (@lem8356826 _146290 _146293) (@lem8356825 _146290 _146293 P G lt2)). Qed.
Lemma lem8356832 {_146290 _146293 : Type'} (G : type797 _146290 _146293) (lt2 : type1402 _146293) : (term67 _146290 _146293 G lt2) = (term68 _146290 _146293 G lt2).
Proof. exact (fun_ext (fun P : type799 _146290 _146293 => @lem8356827 _146290 _146293 P G lt2)). Qed.
Lemma lem8356833 {_146290 _146293 : Type'} : (@all ((_146293 -> _146290) -> _146293 -> Prop)) = (@all ((_146293 -> _146290) -> _146293 -> Prop)).
Proof. exact (eq_refl (@all ((_146293 -> _146290) -> _146293 -> Prop))). Qed.
Lemma lem8356834 {_146290 _146293 : Type'} (G : type797 _146290 _146293) (lt2 : type1402 _146293) : (term69 _146290 _146293 G lt2) = (term70 _146290 _146293 G lt2).
Proof. exact (MK_COMB (@lem8356833 _146290 _146293) (@lem8356832 _146290 _146293 G lt2)). Qed.
Lemma lem8356839 {_146290 _146293 : Type'} (lt2 : type1402 _146293) : (term71 _146290 _146293 lt2) = (term72 _146290 _146293 lt2).
Proof. exact (fun_ext (fun G : type797 _146290 _146293 => @lem8356834 _146290 _146293 G lt2)). Qed.
Lemma lem8356840 {_146290 _146293 : Type'} : (@all ((_146293 -> _146290) -> _146293 -> _146293)) = (@all ((_146293 -> _146290) -> _146293 -> _146293)).
Proof. exact (eq_refl (@all ((_146293 -> _146290) -> _146293 -> _146293))). Qed.
Lemma lem8356841 {_146290 _146293 : Type'} (lt2 : type1402 _146293) : (term73 _146290 _146293 lt2) = (term74 _146290 _146293 lt2).
Proof. exact (MK_COMB (@lem8356840 _146290 _146293) (@lem8356839 _146290 _146293 lt2)). Qed.
Lemma lem8356846 {_146290 _146293 : Type'} : (term75 _146290 _146293) = (term76 _146290 _146293).
Proof. exact (fun_ext (fun lt2 : type1402 _146293 => @lem8356841 _146290 _146293 lt2)). Qed.
Lemma lem8356847 {_146293 : Type'} : (@all (_146293 -> _146293 -> Prop)) = (@all (_146293 -> _146293 -> Prop)).
Proof. exact (eq_refl (@all (_146293 -> _146293 -> Prop))). Qed.
Lemma lem8356856 {_146290 _146293 : Type'} : (term77 _146290 _146293) = (term78 _146290 _146293).
Proof. exact (MK_COMB (@lem8356847 _146293) (@lem8356846 _146290 _146293)). Qed.
Lemma lem8356865 {_146290 _146293 : Type'} (P : type799 _146290 _146293) (G : type797 _146290 _146293) (f : _146293 -> _146290) (lt2 : type1402 _146293) (y : _146293) (x : _146293) : (term79 _146290 _146293 P G f lt2 y x) = (term79 _146290 _146293 P G f lt2 y x).
Proof. exact (eq_refl (term79 _146290 _146293 P G f lt2 y x)). Qed.
Lemma lem8356866 {_146290 _146293 : Type'} (P : type799 _146290 _146293) (G : type797 _146290 _146293) (f : _146293 -> _146290) (lt2 : type1402 _146293) (x : _146293) : (term80 _146290 _146293 P G f lt2 x) = (term80 _146290 _146293 P G f lt2 x).
Proof. exact (fun_ext (fun y : _146293 => @lem8356865 _146290 _146293 P G f lt2 y x)). Qed.
Lemma lem8356867 {_146293 : Type'} : (@all _146293) = (@all _146293).
Proof. exact (eq_refl (@all _146293)). Qed.
Lemma lem8356868 {_146290 _146293 : Type'} (P : type799 _146290 _146293) (G : type797 _146290 _146293) (f : _146293 -> _146290) (lt2 : type1402 _146293) (x : _146293) : (term81 _146290 _146293 P G f lt2 x) = (term81 _146290 _146293 P G f lt2 x).
Proof. exact (MK_COMB (@lem8356867 _146293) (@lem8356866 _146290 _146293 P G f lt2 x)). Qed.
Lemma lem8356869 {_146290 _146293 : Type'} (P : type799 _146290 _146293) (G : type797 _146290 _146293) (f : _146293 -> _146290) (lt2 : type1402 _146293) : (term82 _146290 _146293 P G f lt2) = (term82 _146290 _146293 P G f lt2).
Proof. exact (fun_ext (fun x : _146293 => @lem8356868 _146290 _146293 P G f lt2 x)). Qed.
Lemma lem8356870 {_146293 : Type'} : (@all _146293) = (@all _146293).
Proof. exact (eq_refl (@all _146293)). Qed.
Lemma lem8356871 {_146290 _146293 : Type'} (P : type799 _146290 _146293) (G : type797 _146290 _146293) (f : _146293 -> _146290) (lt2 : type1402 _146293) : (term83 _146290 _146293 P G f lt2) = (term83 _146290 _146293 P G f lt2).
Proof. exact (MK_COMB (@lem8356870 _146293) (@lem8356869 _146290 _146293 P G f lt2)). Qed.
Lemma lem8356872 {_146290 _146293 : Type'} (P : type799 _146290 _146293) (G : type797 _146290 _146293) (lt2 : type1402 _146293) : (term84 _146290 _146293 P G lt2) = (term84 _146290 _146293 P G lt2).
Proof. exact (fun_ext (fun f : _146293 -> _146290 => @lem8356871 _146290 _146293 P G f lt2)). Qed.
Lemma lem8356873 {_146290 _146293 : Type'} : (@all (_146293 -> _146290)) = (@all (_146293 -> _146290)).
Proof. exact (eq_refl (@all (_146293 -> _146290))). Qed.
Lemma lem8356874 {_146290 _146293 : Type'} (P : type799 _146290 _146293) (G : type797 _146290 _146293) (lt2 : type1402 _146293) : (term23 _146290 _146293 P G lt2) = (term23 _146290 _146293 P G lt2).
Proof. exact (MK_COMB (@lem8356873 _146290 _146293) (@lem8356872 _146290 _146293 P G lt2)). Qed.
Lemma lem8356875 {_146290 _146293 : Type'} (f : _146293 -> _146290) (H' : type796 _146290 _146293) (g : _146293 -> _146290) (x : _146293) : ((H' f x) = (H' g x)) = ((H' f x) = (H' g x)).
Proof. exact (eq_refl ((H' f x) = (H' g x))). Qed.
Lemma lem8356880 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (x : _146293) (f : _146293 -> _146290) (g : _146293 -> _146290) (z : _146293) : (term85 _146290 _146293 lt2 x f g z) = (term85 _146290 _146293 lt2 x f g z).
Proof. exact (eq_refl (term85 _146290 _146293 lt2 x f g z)). Qed.
Lemma lem8356881 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (x : _146293) (f : _146293 -> _146290) (g : _146293 -> _146290) : (term86 _146290 _146293 lt2 x f g) = (term86 _146290 _146293 lt2 x f g).
Proof. exact (fun_ext (fun z : _146293 => @lem8356880 _146290 _146293 lt2 x f g z)). Qed.
Lemma lem8356882 {_146293 : Type'} : (@all _146293) = (@all _146293).
Proof. exact (eq_refl (@all _146293)). Qed.
Lemma lem8356883 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (x : _146293) (f : _146293 -> _146290) (g : _146293 -> _146290) : (term87 _146290 _146293 lt2 x f g) = (term87 _146290 _146293 lt2 x f g).
Proof. exact (MK_COMB (@lem8356882 _146293) (@lem8356881 _146290 _146293 lt2 x f g)). Qed.
Lemma lem8356884 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem8356885 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (x : _146293) (f : _146293 -> _146290) (g : _146293 -> _146290) : (term88 _146290 _146293 lt2 x f g) = (term88 _146290 _146293 lt2 x f g).
Proof. exact (MK_COMB (@lem8356884) (@lem8356883 _146290 _146293 lt2 x f g)). Qed.
Lemma lem8356886 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (f : _146293 -> _146290) (H' : type796 _146290 _146293) (g : _146293 -> _146290) (x : _146293) : (term89 _146290 _146293 lt2 f H' g x) = (term89 _146290 _146293 lt2 f H' g x).
Proof. exact (MK_COMB (@lem8356885 _146290 _146293 lt2 x f g) (@lem8356875 _146290 _146293 f H' g x)). Qed.
Lemma lem8356887 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (f : _146293 -> _146290) (H' : type796 _146290 _146293) (g : _146293 -> _146290) : (term90 _146290 _146293 lt2 f H' g) = (term90 _146290 _146293 lt2 f H' g).
Proof. exact (fun_ext (fun x : _146293 => @lem8356886 _146290 _146293 lt2 f H' g x)). Qed.
Lemma lem8356888 {_146293 : Type'} : (@all _146293) = (@all _146293).
Proof. exact (eq_refl (@all _146293)). Qed.
Lemma lem8356889 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (f : _146293 -> _146290) (H' : type796 _146290 _146293) (g : _146293 -> _146290) : (term91 _146290 _146293 lt2 f H' g) = (term91 _146290 _146293 lt2 f H' g).
Proof. exact (MK_COMB (@lem8356888 _146293) (@lem8356887 _146290 _146293 lt2 f H' g)). Qed.
Lemma lem8356890 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (f : _146293 -> _146290) (H' : type796 _146290 _146293) : (term92 _146290 _146293 lt2 f H') = (term92 _146290 _146293 lt2 f H').
Proof. exact (fun_ext (fun g : _146293 -> _146290 => @lem8356889 _146290 _146293 lt2 f H' g)). Qed.
Lemma lem8356891 {_146290 _146293 : Type'} : (@all (_146293 -> _146290)) = (@all (_146293 -> _146290)).
Proof. exact (eq_refl (@all (_146293 -> _146290))). Qed.
Lemma lem8356892 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (f : _146293 -> _146290) (H' : type796 _146290 _146293) : (term93 _146290 _146293 lt2 f H') = (term93 _146290 _146293 lt2 f H').
Proof. exact (MK_COMB (@lem8356891 _146290 _146293) (@lem8356890 _146290 _146293 lt2 f H')). Qed.
Lemma lem8356893 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (H' : type796 _146290 _146293) : (term94 _146290 _146293 lt2 H') = (term94 _146290 _146293 lt2 H').
Proof. exact (fun_ext (fun f : _146293 -> _146290 => @lem8356892 _146290 _146293 lt2 f H')). Qed.
Lemma lem8356894 {_146290 _146293 : Type'} : (@all (_146293 -> _146290)) = (@all (_146293 -> _146290)).
Proof. exact (eq_refl (@all (_146293 -> _146290))). Qed.
Lemma lem8356895 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (H' : type796 _146290 _146293) : (term95 _146290 _146293 lt2 H') = (term95 _146290 _146293 lt2 H').
Proof. exact (MK_COMB (@lem8356894 _146290 _146293) (@lem8356893 _146290 _146293 lt2 H')). Qed.
Lemma lem8356896 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8356897 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (H' : type796 _146290 _146293) : (term96 _146290 _146293 lt2 H') = (term96 _146290 _146293 lt2 H').
Proof. exact (MK_COMB (@lem8356896) (@lem8356895 _146290 _146293 lt2 H')). Qed.
Lemma lem8356898 {_146290 _146293 : Type'} (H' : type796 _146290 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (lt2 : type1402 _146293) : (term97 _146290 _146293 H' P G lt2) = (term97 _146290 _146293 H' P G lt2).
Proof. exact (MK_COMB (@lem8356897 _146290 _146293 lt2 H') (@lem8356874 _146290 _146293 P G lt2)). Qed.
Lemma lem8356911 {_146290 _146293 : Type'} (P : type799 _146290 _146293) (G : type797 _146290 _146293) (f : _146293 -> _146290) (H' : type796 _146290 _146293) (g : _146293 -> _146290) (x : _146293) : (term98 _146290 _146293 P G f H' g x) = (term98 _146290 _146293 P G f H' g x).
Proof. exact (eq_refl (term98 _146290 _146293 P G f H' g x)). Qed.
Lemma lem8356916 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (x : _146293) (f : _146293 -> _146290) (g : _146293 -> _146290) (z : _146293) : (term85 _146290 _146293 lt2 x f g z) = (term85 _146290 _146293 lt2 x f g z).
Proof. exact (eq_refl (term85 _146290 _146293 lt2 x f g z)). Qed.
Lemma lem8356917 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (x : _146293) (f : _146293 -> _146290) (g : _146293 -> _146290) : (term86 _146290 _146293 lt2 x f g) = (term86 _146290 _146293 lt2 x f g).
Proof. exact (fun_ext (fun z : _146293 => @lem8356916 _146290 _146293 lt2 x f g z)). Qed.
Lemma lem8356918 {_146293 : Type'} : (@all _146293) = (@all _146293).
Proof. exact (eq_refl (@all _146293)). Qed.
Lemma lem8356919 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (x : _146293) (f : _146293 -> _146290) (g : _146293 -> _146290) : (term87 _146290 _146293 lt2 x f g) = (term87 _146290 _146293 lt2 x f g).
Proof. exact (MK_COMB (@lem8356918 _146293) (@lem8356917 _146290 _146293 lt2 x f g)). Qed.
Lemma lem8356920 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem8356921 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (x : _146293) (f : _146293 -> _146290) (g : _146293 -> _146290) : (term88 _146290 _146293 lt2 x f g) = (term88 _146290 _146293 lt2 x f g).
Proof. exact (MK_COMB (@lem8356920) (@lem8356919 _146290 _146293 lt2 x f g)). Qed.
Lemma lem8356922 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (f : _146293 -> _146290) (H' : type796 _146290 _146293) (g : _146293 -> _146290) (x : _146293) : (term99 _146290 _146293 lt2 P G f H' g x) = (term99 _146290 _146293 lt2 P G f H' g x).
Proof. exact (MK_COMB (@lem8356921 _146290 _146293 lt2 x f g) (@lem8356911 _146290 _146293 P G f H' g x)). Qed.
Lemma lem8356923 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (f : _146293 -> _146290) (H' : type796 _146290 _146293) (g : _146293 -> _146290) : (term100 _146290 _146293 lt2 P G f H' g) = (term100 _146290 _146293 lt2 P G f H' g).
Proof. exact (fun_ext (fun x : _146293 => @lem8356922 _146290 _146293 lt2 P G f H' g x)). Qed.
Lemma lem8356924 {_146293 : Type'} : (@all _146293) = (@all _146293).
Proof. exact (eq_refl (@all _146293)). Qed.
Lemma lem8356925 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (f : _146293 -> _146290) (H' : type796 _146290 _146293) (g : _146293 -> _146290) : (term101 _146290 _146293 lt2 P G f H' g) = (term101 _146290 _146293 lt2 P G f H' g).
Proof. exact (MK_COMB (@lem8356924 _146293) (@lem8356923 _146290 _146293 lt2 P G f H' g)). Qed.
Lemma lem8356926 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (f : _146293 -> _146290) (H' : type796 _146290 _146293) : (term102 _146290 _146293 lt2 P G f H') = (term102 _146290 _146293 lt2 P G f H').
Proof. exact (fun_ext (fun g : _146293 -> _146290 => @lem8356925 _146290 _146293 lt2 P G f H' g)). Qed.
Lemma lem8356927 {_146290 _146293 : Type'} : (@all (_146293 -> _146290)) = (@all (_146293 -> _146290)).
Proof. exact (eq_refl (@all (_146293 -> _146290))). Qed.
Lemma lem8356928 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (f : _146293 -> _146290) (H' : type796 _146290 _146293) : (term103 _146290 _146293 lt2 P G f H') = (term103 _146290 _146293 lt2 P G f H').
Proof. exact (MK_COMB (@lem8356927 _146290 _146293) (@lem8356926 _146290 _146293 lt2 P G f H')). Qed.
Lemma lem8356929 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (H' : type796 _146290 _146293) : (term104 _146290 _146293 lt2 P G H') = (term104 _146290 _146293 lt2 P G H').
Proof. exact (fun_ext (fun f : _146293 -> _146290 => @lem8356928 _146290 _146293 lt2 P G f H')). Qed.
Lemma lem8356930 {_146290 _146293 : Type'} : (@all (_146293 -> _146290)) = (@all (_146293 -> _146290)).
Proof. exact (eq_refl (@all (_146293 -> _146290))). Qed.
Lemma lem8356931 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (H' : type796 _146290 _146293) : (term21 _146290 _146293 lt2 P G H') = (term21 _146290 _146293 lt2 P G H').
Proof. exact (MK_COMB (@lem8356930 _146290 _146293) (@lem8356929 _146290 _146293 lt2 P G H')). Qed.
Lemma lem8356932 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8356933 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (H' : type796 _146290 _146293) : (term105 _146290 _146293 lt2 P G H') = (term105 _146290 _146293 lt2 P G H').
Proof. exact (MK_COMB (@lem8356932) (@lem8356931 _146290 _146293 lt2 P G H')). Qed.
Lemma lem8356934 {_146290 _146293 : Type'} (H' : type796 _146290 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (lt2 : type1402 _146293) : (term106 _146290 _146293 H' P G lt2) = (term106 _146290 _146293 H' P G lt2).
Proof. exact (MK_COMB (@lem8356933 _146290 _146293 lt2 P G H') (@lem8356898 _146290 _146293 H' P G lt2)). Qed.
Lemma lem8356937 {_146293 : Type'} (lt2 : type1402 _146293) : (term107 _146293 lt2) = (term107 _146293 lt2).
Proof. exact (eq_refl (term107 _146293 lt2)). Qed.
Lemma lem8356938 {_146290 _146293 : Type'} (H' : type796 _146290 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (lt2 : type1402 _146293) : (term39 _146290 _146293 H' P G lt2) = (term39 _146290 _146293 H' P G lt2).
Proof. exact (MK_COMB (@lem8356937 _146293 lt2) (@lem8356934 _146290 _146293 H' P G lt2)). Qed.
Lemma lem8356942 {_146290 _146293 : Type'} (P : type799 _146290 _146293) (f : _146293 -> _146290) (x : _146293) (h1 : (P f x) = False) : (P f x) = False.
Proof. exact (h1). Qed.
Lemma lem8356943 {_146290 : Type'} : (@COND _146290) = (@COND _146290).
Proof. exact (eq_refl (@COND _146290)). Qed.
Lemma lem8356944 {_146290 _146293 : Type'} (P : type799 _146290 _146293) (f : _146293 -> _146290) (x : _146293) (h1 : (P f x) = False) : (term108 _146290 _146293 P f x) = (@COND _146290 False).
Proof. exact (MK_COMB (@lem8356943 _146290) (@lem8356942 _146290 _146293 P f x h1)). Qed.
Lemma lem8356945 {_146290 _146293 : Type'} (G : type797 _146290 _146293) (f : _146293 -> _146290) (x : _146293) : (term109 _146290 _146293 G f x) = (term109 _146290 _146293 G f x).
Proof. exact (eq_refl (term109 _146290 _146293 G f x)). Qed.
Lemma lem8356946 {_146290 _146293 : Type'} (G : type797 _146290 _146293) (P : type799 _146290 _146293) (f : _146293 -> _146290) (x : _146293) (h1 : (P f x) = False) : (term110 _146290 _146293 P G f x) = (term111 _146290 _146293 G f x).
Proof. exact (MK_COMB (@lem8356944 _146290 _146293 P f x h1) (@lem8356945 _146290 _146293 G f x)). Qed.
Lemma lem8356947 {_146290 _146293 : Type'} (H' : type796 _146290 _146293) (f : _146293 -> _146290) (x : _146293) : (H' f x) = (H' f x).
Proof. exact (eq_refl (H' f x)). Qed.
Lemma lem8356948 {_146290 _146293 : Type'} (G : type797 _146290 _146293) (H' : type796 _146290 _146293) (P : type799 _146290 _146293) (f : _146293 -> _146290) (x : _146293) (h1 : (P f x) = False) : (term27 _146290 _146293 P G H' f x) = (term112 _146290 _146293 G H' f x).
Proof. exact (MK_COMB (@lem8356946 _146290 _146293 G P f x h1) (@lem8356947 _146290 _146293 H' f x)). Qed.
Lemma lem8356950 {A : Type'} (t1 : A) (t2 : A) : (@COND A False t1 t2) = t2.
Proof. exact (proj2 (@lem12653 A t1 t2)). Qed.
Lemma lem8356951 {_146290 : Type'} (t1 : _146290) (t2 : _146290) : (@COND _146290 False t1 t2) = t2.
Proof. exact (@lem8356950 _146290 t1 t2). Qed.
Lemma lem8356952 {_146290 _146293 : Type'} (G : type797 _146290 _146293) (H' : type796 _146290 _146293) (f : _146293 -> _146290) (x : _146293) : (term112 _146290 _146293 G H' f x) = (H' f x).
Proof. exact (@lem8356951 _146290 (term109 _146290 _146293 G f x) (H' f x)). Qed.
Lemma lem8356953 {_146290 _146293 : Type'} (G : type797 _146290 _146293) (H' : type796 _146290 _146293) (P : type799 _146290 _146293) (f : _146293 -> _146290) (x : _146293) (h1 : (P f x) = False) : (term27 _146290 _146293 P G H' f x) = (H' f x).
Proof. exact (TRANS (@lem8356948 _146290 _146293 G H' P f x h1) (@lem8356952 _146290 _146293 G H' f x)). Qed.
Lemma lem8356954 {_146290 _146293 : Type'} (H : type796 _146290 _146293) (f : _146293 -> _146290) (x : _146293) : (term113 _146290 _146293 H f x) = (term113 _146290 _146293 H f x).
Proof. exact (eq_refl (term113 _146290 _146293 H f x)). Qed.
Lemma lem8356955 {_146290 _146293 : Type'} (G : type797 _146290 _146293) (H : type796 _146290 _146293) (H' : type796 _146290 _146293) (P : type799 _146290 _146293) (f : _146293 -> _146290) (x : _146293) (h1 : (P f x) = False) : ((H f x) = (term27 _146290 _146293 P G H' f x)) = ((H f x) = (H' f x)).
Proof. exact (MK_COMB (@lem8356954 _146290 _146293 H f x) (@lem8356953 _146290 _146293 G H' P f x h1)). Qed.
Lemma lem8356958 {_146290 _146293 : Type'} (P : type799 _146290 _146293) (G : type797 _146290 _146293) (H : type796 _146290 _146293) (H' : type796 _146290 _146293) (f : _146293 -> _146290) (x : _146293) : term114 _146290 _146293 P G H H' f x.
Proof. exact (fun h0 : (P f x) = False => @lem8356955 _146290 _146293 G H H' P f x h0). Qed.
Lemma lem8356960 {_146290 _146293 : Type'} (P : type799 _146290 _146293) (f : _146293 -> _146290) (x : _146293) (h1 : (P f x) = True) : (P f x) = True.
Proof. exact (h1). Qed.
Lemma lem8356961 {_146290 : Type'} : (@COND _146290) = (@COND _146290).
Proof. exact (eq_refl (@COND _146290)). Qed.
Lemma lem8356962 {_146290 _146293 : Type'} (P : type799 _146290 _146293) (f : _146293 -> _146290) (x : _146293) (h1 : (P f x) = True) : (term108 _146290 _146293 P f x) = (@COND _146290 True).
Proof. exact (MK_COMB (@lem8356961 _146290) (@lem8356960 _146290 _146293 P f x h1)). Qed.
Lemma lem8356963 {_146290 _146293 : Type'} (G : type797 _146290 _146293) (f : _146293 -> _146290) (x : _146293) : (term109 _146290 _146293 G f x) = (term109 _146290 _146293 G f x).
Proof. exact (eq_refl (term109 _146290 _146293 G f x)). Qed.
Lemma lem8356964 {_146290 _146293 : Type'} (G : type797 _146290 _146293) (P : type799 _146290 _146293) (f : _146293 -> _146290) (x : _146293) (h1 : (P f x) = True) : (term110 _146290 _146293 P G f x) = (term115 _146290 _146293 G f x).
Proof. exact (MK_COMB (@lem8356962 _146290 _146293 P f x h1) (@lem8356963 _146290 _146293 G f x)). Qed.
Lemma lem8356965 {_146290 _146293 : Type'} (H' : type796 _146290 _146293) (f : _146293 -> _146290) (x : _146293) : (H' f x) = (H' f x).
Proof. exact (eq_refl (H' f x)). Qed.
Lemma lem8356966 {_146290 _146293 : Type'} (G : type797 _146290 _146293) (H' : type796 _146290 _146293) (P : type799 _146290 _146293) (f : _146293 -> _146290) (x : _146293) (h1 : (P f x) = True) : (term27 _146290 _146293 P G H' f x) = (term116 _146290 _146293 G H' f x).
Proof. exact (MK_COMB (@lem8356964 _146290 _146293 G P f x h1) (@lem8356965 _146290 _146293 H' f x)). Qed.
Lemma lem8356968 {A : Type'} (t2 : A) (t1 : A) : (@COND A True t1 t2) = t1.
Proof. exact (proj1 (@lem12653 A t1 t2)). Qed.
Lemma lem8356969 {_146290 : Type'} (t2 : _146290) (t1 : _146290) : (@COND _146290 True t1 t2) = t1.
Proof. exact (@lem8356968 _146290 t2 t1). Qed.
Lemma lem8356970 {_146290 _146293 : Type'} (H' : type796 _146290 _146293) (G : type797 _146290 _146293) (f : _146293 -> _146290) (x : _146293) : (term116 _146290 _146293 G H' f x) = (term109 _146290 _146293 G f x).
Proof. exact (@lem8356969 _146290 (H' f x) (term109 _146290 _146293 G f x)). Qed.
Lemma lem8356971 {_146290 _146293 : Type'} (H' : type796 _146290 _146293) (G : type797 _146290 _146293) (P : type799 _146290 _146293) (f : _146293 -> _146290) (x : _146293) (h1 : (P f x) = True) : (term27 _146290 _146293 P G H' f x) = (term109 _146290 _146293 G f x).
Proof. exact (TRANS (@lem8356966 _146290 _146293 G H' P f x h1) (@lem8356970 _146290 _146293 H' G f x)). Qed.
Lemma lem8356972 {_146290 _146293 : Type'} (H : type796 _146290 _146293) (f : _146293 -> _146290) (x : _146293) : (term113 _146290 _146293 H f x) = (term113 _146290 _146293 H f x).
Proof. exact (eq_refl (term113 _146290 _146293 H f x)). Qed.
Lemma lem8356973 {_146290 _146293 : Type'} (H' : type796 _146290 _146293) (H : type796 _146290 _146293) (G : type797 _146290 _146293) (P : type799 _146290 _146293) (f : _146293 -> _146290) (x : _146293) (h1 : (P f x) = True) : ((H f x) = (term27 _146290 _146293 P G H' f x)) = ((H f x) = (term109 _146290 _146293 G f x)).
Proof. exact (MK_COMB (@lem8356972 _146290 _146293 H f x) (@lem8356971 _146290 _146293 H' G P f x h1)). Qed.
Lemma lem8356976 {_146290 _146293 : Type'} (P : type799 _146290 _146293) (H' : type796 _146290 _146293) (H : type796 _146290 _146293) (G : type797 _146290 _146293) (f : _146293 -> _146290) (x : _146293) : term117 _146290 _146293 P H' H G f x.
Proof. exact (fun h0 : (P f x) = True => @lem8356973 _146290 _146293 H' H G P f x h0). Qed.
Lemma lem8356977 {_146290 _146293 : Type'} (P : type799 _146290 _146293) (H' : type796 _146290 _146293) (H : type796 _146290 _146293) (G : type797 _146290 _146293) (f : _146293 -> _146290) (x : _146293) : term118 _146290 _146293 P H' H G f x.
Proof. exact (conj (@lem8356958 _146290 _146293 P G H H' f x) (@lem8356976 _146290 _146293 P H' H G f x)). Qed.
Lemma lem8356979 (x : Prop) (x1 : Prop) (b : Prop) (x0 : Prop) : term119 x x1 b x0.
Proof. exact (or_elim (@lem20425 b) (fun h0 : b = True => @lem20612 x x1 x0 b h0) (fun h0 : b = False => @lem20611 x x1 x0 b h0)). Qed.
Lemma lem8356980 {_146290 _146293 : Type'} (G : type797 _146290 _146293) (P : type799 _146290 _146293) (H : type796 _146290 _146293) (H' : type796 _146290 _146293) (f : _146293 -> _146290) (x : _146293) : term120 _146290 _146293 G P H H' f x.
Proof. exact (@lem8356979 ((H f x) = (term27 _146290 _146293 P G H' f x)) ((H f x) = (term109 _146290 _146293 G f x)) (P f x) ((H f x) = (H' f x))). Qed.
Lemma lem8357013 {_146290 _146293 : Type'} (G : type797 _146290 _146293) (P : type799 _146290 _146293) (H : type796 _146290 _146293) (H' : type796 _146290 _146293) (f : _146293 -> _146290) (x : _146293) : ((H f x) = (term27 _146290 _146293 P G H' f x)) = (term121 _146290 _146293 G P H H' f x).
Proof. exact (@lem8356980 _146290 _146293 G P H H' f x (@lem8356977 _146290 _146293 P H' H G f x)). Qed.
Lemma lem8357014 {_146290 _146293 : Type'} (G : type797 _146290 _146293) (P : type799 _146290 _146293) (H : type796 _146290 _146293) (H' : type796 _146290 _146293) (f : _146293 -> _146290) : (term122 _146290 _146293 H P G H' f) = (term123 _146290 _146293 G P H H' f).
Proof. exact (fun_ext (fun x : _146293 => @lem8357013 _146290 _146293 G P H H' f x)). Qed.
Lemma lem8357015 {_146293 : Type'} : (@all _146293) = (@all _146293).
Proof. exact (eq_refl (@all _146293)). Qed.
Lemma lem8357016 {_146290 _146293 : Type'} (G : type797 _146290 _146293) (P : type799 _146290 _146293) (H : type796 _146290 _146293) (H' : type796 _146290 _146293) (f : _146293 -> _146290) : (term25 _146290 _146293 H P G H' f) = (term124 _146290 _146293 G P H H' f).
Proof. exact (MK_COMB (@lem8357015 _146293) (@lem8357014 _146290 _146293 G P H H' f)). Qed.
Lemma lem8357017 {_146290 _146293 : Type'} (G : type797 _146290 _146293) (P : type799 _146290 _146293) (H : type796 _146290 _146293) (H' : type796 _146290 _146293) : (term125 _146290 _146293 H P G H') = (term126 _146290 _146293 G P H H').
Proof. exact (fun_ext (fun f : _146293 -> _146290 => @lem8357016 _146290 _146293 G P H H' f)). Qed.
Lemma lem8357018 {_146290 _146293 : Type'} : (@all (_146293 -> _146290)) = (@all (_146293 -> _146290)).
Proof. exact (eq_refl (@all (_146293 -> _146290))). Qed.
Lemma lem8357019 {_146290 _146293 : Type'} (G : type797 _146290 _146293) (P : type799 _146290 _146293) (H : type796 _146290 _146293) (H' : type796 _146290 _146293) : (term22 _146290 _146293 H P G H') = (term127 _146290 _146293 G P H H').
Proof. exact (MK_COMB (@lem8357018 _146290 _146293) (@lem8357017 _146290 _146293 G P H H')). Qed.
Lemma lem8357020 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem8357021 {_146290 _146293 : Type'} (G : type797 _146290 _146293) (P : type799 _146290 _146293) (H : type796 _146290 _146293) (H' : type796 _146290 _146293) : (term48 _146290 _146293 H P G H') = (term128 _146290 _146293 G P H H').
Proof. exact (MK_COMB (@lem8357020) (@lem8357019 _146290 _146293 G P H H')). Qed.
Lemma lem8357022 {_146290 _146293 : Type'} (H : type796 _146290 _146293) (H' : type796 _146290 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (lt2 : type1402 _146293) : (term50 _146290 _146293 H H' P G lt2) = (term129 _146290 _146293 H H' P G lt2).
Proof. exact (MK_COMB (@lem8357021 _146290 _146293 G P H H') (@lem8356938 _146290 _146293 H' P G lt2)). Qed.
Lemma lem8357031 {_146290 _146293 : Type'} (P : type799 _146290 _146293) (G : type797 _146290 _146293) (f : _146293 -> _146290) (lt2 : type1402 _146293) (y : _146293) (x : _146293) : (term79 _146290 _146293 P G f lt2 y x) = (term79 _146290 _146293 P G f lt2 y x).
Proof. exact (eq_refl (term79 _146290 _146293 P G f lt2 y x)). Qed.
Lemma lem8357032 {_146290 _146293 : Type'} (P : type799 _146290 _146293) (G : type797 _146290 _146293) (f : _146293 -> _146290) (lt2 : type1402 _146293) (x : _146293) : (term80 _146290 _146293 P G f lt2 x) = (term80 _146290 _146293 P G f lt2 x).
Proof. exact (fun_ext (fun y : _146293 => @lem8357031 _146290 _146293 P G f lt2 y x)). Qed.
Lemma lem8357033 {_146293 : Type'} : (@all _146293) = (@all _146293).
Proof. exact (eq_refl (@all _146293)). Qed.
Lemma lem8357034 {_146290 _146293 : Type'} (P : type799 _146290 _146293) (G : type797 _146290 _146293) (f : _146293 -> _146290) (lt2 : type1402 _146293) (x : _146293) : (term81 _146290 _146293 P G f lt2 x) = (term81 _146290 _146293 P G f lt2 x).
Proof. exact (MK_COMB (@lem8357033 _146293) (@lem8357032 _146290 _146293 P G f lt2 x)). Qed.
Lemma lem8357035 {_146290 _146293 : Type'} (P : type799 _146290 _146293) (G : type797 _146290 _146293) (f : _146293 -> _146290) (lt2 : type1402 _146293) : (term82 _146290 _146293 P G f lt2) = (term82 _146290 _146293 P G f lt2).
Proof. exact (fun_ext (fun x : _146293 => @lem8357034 _146290 _146293 P G f lt2 x)). Qed.
Lemma lem8357036 {_146293 : Type'} : (@all _146293) = (@all _146293).
Proof. exact (eq_refl (@all _146293)). Qed.
Lemma lem8357037 {_146290 _146293 : Type'} (P : type799 _146290 _146293) (G : type797 _146290 _146293) (f : _146293 -> _146290) (lt2 : type1402 _146293) : (term83 _146290 _146293 P G f lt2) = (term83 _146290 _146293 P G f lt2).
Proof. exact (MK_COMB (@lem8357036 _146293) (@lem8357035 _146290 _146293 P G f lt2)). Qed.
Lemma lem8357038 {_146290 _146293 : Type'} (P : type799 _146290 _146293) (G : type797 _146290 _146293) (lt2 : type1402 _146293) : (term84 _146290 _146293 P G lt2) = (term84 _146290 _146293 P G lt2).
Proof. exact (fun_ext (fun f : _146293 -> _146290 => @lem8357037 _146290 _146293 P G f lt2)). Qed.
Lemma lem8357039 {_146290 _146293 : Type'} : (@all (_146293 -> _146290)) = (@all (_146293 -> _146290)).
Proof. exact (eq_refl (@all (_146293 -> _146290))). Qed.
Lemma lem8357040 {_146290 _146293 : Type'} (P : type799 _146290 _146293) (G : type797 _146290 _146293) (lt2 : type1402 _146293) : (term23 _146290 _146293 P G lt2) = (term23 _146290 _146293 P G lt2).
Proof. exact (MK_COMB (@lem8357039 _146290 _146293) (@lem8357038 _146290 _146293 P G lt2)). Qed.
Lemma lem8357041 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem8357042 {_146290 _146293 : Type'} (P : type799 _146290 _146293) (G : type797 _146290 _146293) (lt2 : type1402 _146293) : (term51 _146290 _146293 P G lt2) = (term51 _146290 _146293 P G lt2).
Proof. exact (MK_COMB (@lem8357041) (@lem8357040 _146290 _146293 P G lt2)). Qed.
Lemma lem8357043 {_146290 _146293 : Type'} (H : type796 _146290 _146293) (H' : type796 _146290 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (lt2 : type1402 _146293) : (term53 _146290 _146293 H H' P G lt2) = (term130 _146290 _146293 H H' P G lt2).
Proof. exact (MK_COMB (@lem8357042 _146290 _146293 P G lt2) (@lem8357022 _146290 _146293 H H' P G lt2)). Qed.
Lemma lem8357056 {_146290 _146293 : Type'} (P : type799 _146290 _146293) (G : type797 _146290 _146293) (f : _146293 -> _146290) (H' : type796 _146290 _146293) (g : _146293 -> _146290) (x : _146293) : (term98 _146290 _146293 P G f H' g x) = (term98 _146290 _146293 P G f H' g x).
Proof. exact (eq_refl (term98 _146290 _146293 P G f H' g x)). Qed.
Lemma lem8357061 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (x : _146293) (f : _146293 -> _146290) (g : _146293 -> _146290) (z : _146293) : (term85 _146290 _146293 lt2 x f g z) = (term85 _146290 _146293 lt2 x f g z).
Proof. exact (eq_refl (term85 _146290 _146293 lt2 x f g z)). Qed.
Lemma lem8357062 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (x : _146293) (f : _146293 -> _146290) (g : _146293 -> _146290) : (term86 _146290 _146293 lt2 x f g) = (term86 _146290 _146293 lt2 x f g).
Proof. exact (fun_ext (fun z : _146293 => @lem8357061 _146290 _146293 lt2 x f g z)). Qed.
Lemma lem8357063 {_146293 : Type'} : (@all _146293) = (@all _146293).
Proof. exact (eq_refl (@all _146293)). Qed.
Lemma lem8357064 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (x : _146293) (f : _146293 -> _146290) (g : _146293 -> _146290) : (term87 _146290 _146293 lt2 x f g) = (term87 _146290 _146293 lt2 x f g).
Proof. exact (MK_COMB (@lem8357063 _146293) (@lem8357062 _146290 _146293 lt2 x f g)). Qed.
Lemma lem8357065 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem8357066 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (x : _146293) (f : _146293 -> _146290) (g : _146293 -> _146290) : (term88 _146290 _146293 lt2 x f g) = (term88 _146290 _146293 lt2 x f g).
Proof. exact (MK_COMB (@lem8357065) (@lem8357064 _146290 _146293 lt2 x f g)). Qed.
Lemma lem8357067 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (f : _146293 -> _146290) (H' : type796 _146290 _146293) (g : _146293 -> _146290) (x : _146293) : (term99 _146290 _146293 lt2 P G f H' g x) = (term99 _146290 _146293 lt2 P G f H' g x).
Proof. exact (MK_COMB (@lem8357066 _146290 _146293 lt2 x f g) (@lem8357056 _146290 _146293 P G f H' g x)). Qed.
Lemma lem8357068 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (f : _146293 -> _146290) (H' : type796 _146290 _146293) (g : _146293 -> _146290) : (term100 _146290 _146293 lt2 P G f H' g) = (term100 _146290 _146293 lt2 P G f H' g).
Proof. exact (fun_ext (fun x : _146293 => @lem8357067 _146290 _146293 lt2 P G f H' g x)). Qed.
Lemma lem8357069 {_146293 : Type'} : (@all _146293) = (@all _146293).
Proof. exact (eq_refl (@all _146293)). Qed.
Lemma lem8357070 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (f : _146293 -> _146290) (H' : type796 _146290 _146293) (g : _146293 -> _146290) : (term101 _146290 _146293 lt2 P G f H' g) = (term101 _146290 _146293 lt2 P G f H' g).
Proof. exact (MK_COMB (@lem8357069 _146293) (@lem8357068 _146290 _146293 lt2 P G f H' g)). Qed.
Lemma lem8357071 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (f : _146293 -> _146290) (H' : type796 _146290 _146293) : (term102 _146290 _146293 lt2 P G f H') = (term102 _146290 _146293 lt2 P G f H').
Proof. exact (fun_ext (fun g : _146293 -> _146290 => @lem8357070 _146290 _146293 lt2 P G f H' g)). Qed.
Lemma lem8357072 {_146290 _146293 : Type'} : (@all (_146293 -> _146290)) = (@all (_146293 -> _146290)).
Proof. exact (eq_refl (@all (_146293 -> _146290))). Qed.
Lemma lem8357073 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (f : _146293 -> _146290) (H' : type796 _146290 _146293) : (term103 _146290 _146293 lt2 P G f H') = (term103 _146290 _146293 lt2 P G f H').
Proof. exact (MK_COMB (@lem8357072 _146290 _146293) (@lem8357071 _146290 _146293 lt2 P G f H')). Qed.
Lemma lem8357074 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (H' : type796 _146290 _146293) : (term104 _146290 _146293 lt2 P G H') = (term104 _146290 _146293 lt2 P G H').
Proof. exact (fun_ext (fun f : _146293 -> _146290 => @lem8357073 _146290 _146293 lt2 P G f H')). Qed.
Lemma lem8357075 {_146290 _146293 : Type'} : (@all (_146293 -> _146290)) = (@all (_146293 -> _146290)).
Proof. exact (eq_refl (@all (_146293 -> _146290))). Qed.
Lemma lem8357076 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (H' : type796 _146290 _146293) : (term21 _146290 _146293 lt2 P G H') = (term21 _146290 _146293 lt2 P G H').
Proof. exact (MK_COMB (@lem8357075 _146290 _146293) (@lem8357074 _146290 _146293 lt2 P G H')). Qed.
Lemma lem8357077 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem8357078 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (H' : type796 _146290 _146293) : (term54 _146290 _146293 lt2 P G H') = (term54 _146290 _146293 lt2 P G H').
Proof. exact (MK_COMB (@lem8357077) (@lem8357076 _146290 _146293 lt2 P G H')). Qed.
Lemma lem8357079 {_146290 _146293 : Type'} (H : type796 _146290 _146293) (H' : type796 _146290 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (lt2 : type1402 _146293) : (term56 _146290 _146293 H H' P G lt2) = (term131 _146290 _146293 H H' P G lt2).
Proof. exact (MK_COMB (@lem8357078 _146290 _146293 lt2 P G H') (@lem8357043 _146290 _146293 H H' P G lt2)). Qed.
Lemma lem8357082 {_146293 : Type'} (lt2 : type1402 _146293) : (term57 _146293 lt2) = (term57 _146293 lt2).
Proof. exact (eq_refl (term57 _146293 lt2)). Qed.
Lemma lem8357083 {_146290 _146293 : Type'} (H : type796 _146290 _146293) (H' : type796 _146290 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (lt2 : type1402 _146293) : (term58 _146290 _146293 H H' P G lt2) = (term132 _146290 _146293 H H' P G lt2).
Proof. exact (MK_COMB (@lem8357082 _146293 lt2) (@lem8357079 _146290 _146293 H H' P G lt2)). Qed.
Lemma lem8357084 {_146290 _146293 : Type'} (H' : type796 _146290 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (lt2 : type1402 _146293) : (term60 _146290 _146293 H' P G lt2) = (term133 _146290 _146293 H' P G lt2).
Proof. exact (fun_ext (fun H : type796 _146290 _146293 => @lem8357083 _146290 _146293 H H' P G lt2)). Qed.
Lemma lem8357085 {_146290 _146293 : Type'} : (@all ((_146293 -> _146290) -> _146293 -> _146290)) = (@all ((_146293 -> _146290) -> _146293 -> _146290)).
Proof. exact (eq_refl (@all ((_146293 -> _146290) -> _146293 -> _146290))). Qed.
Lemma lem8357086 {_146290 _146293 : Type'} (H' : type796 _146290 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (lt2 : type1402 _146293) : (term62 _146290 _146293 H' P G lt2) = (term134 _146290 _146293 H' P G lt2).
Proof. exact (MK_COMB (@lem8357085 _146290 _146293) (@lem8357084 _146290 _146293 H' P G lt2)). Qed.
Lemma lem8357087 {_146290 _146293 : Type'} (P : type799 _146290 _146293) (G : type797 _146290 _146293) (lt2 : type1402 _146293) : (term64 _146290 _146293 P G lt2) = (term135 _146290 _146293 P G lt2).
Proof. exact (fun_ext (fun H' : type796 _146290 _146293 => @lem8357086 _146290 _146293 H' P G lt2)). Qed.
Lemma lem8357088 {_146290 _146293 : Type'} : (@all ((_146293 -> _146290) -> _146293 -> _146290)) = (@all ((_146293 -> _146290) -> _146293 -> _146290)).
Proof. exact (eq_refl (@all ((_146293 -> _146290) -> _146293 -> _146290))). Qed.
Lemma lem8357089 {_146290 _146293 : Type'} (P : type799 _146290 _146293) (G : type797 _146290 _146293) (lt2 : type1402 _146293) : (term66 _146290 _146293 P G lt2) = (term136 _146290 _146293 P G lt2).
Proof. exact (MK_COMB (@lem8357088 _146290 _146293) (@lem8357087 _146290 _146293 P G lt2)). Qed.
Lemma lem8357090 {_146290 _146293 : Type'} (G : type797 _146290 _146293) (lt2 : type1402 _146293) : (term68 _146290 _146293 G lt2) = (term137 _146290 _146293 G lt2).
Proof. exact (fun_ext (fun P : type799 _146290 _146293 => @lem8357089 _146290 _146293 P G lt2)). Qed.
Lemma lem8357091 {_146290 _146293 : Type'} : (@all ((_146293 -> _146290) -> _146293 -> Prop)) = (@all ((_146293 -> _146290) -> _146293 -> Prop)).
Proof. exact (eq_refl (@all ((_146293 -> _146290) -> _146293 -> Prop))). Qed.
Lemma lem8357092 {_146290 _146293 : Type'} (G : type797 _146290 _146293) (lt2 : type1402 _146293) : (term70 _146290 _146293 G lt2) = (term138 _146290 _146293 G lt2).
Proof. exact (MK_COMB (@lem8357091 _146290 _146293) (@lem8357090 _146290 _146293 G lt2)). Qed.
Lemma lem8357093 {_146290 _146293 : Type'} (lt2 : type1402 _146293) : (term72 _146290 _146293 lt2) = (term139 _146290 _146293 lt2).
Proof. exact (fun_ext (fun G : type797 _146290 _146293 => @lem8357092 _146290 _146293 G lt2)). Qed.
Lemma lem8357094 {_146290 _146293 : Type'} : (@all ((_146293 -> _146290) -> _146293 -> _146293)) = (@all ((_146293 -> _146290) -> _146293 -> _146293)).
Proof. exact (eq_refl (@all ((_146293 -> _146290) -> _146293 -> _146293))). Qed.
Lemma lem8357095 {_146290 _146293 : Type'} (lt2 : type1402 _146293) : (term74 _146290 _146293 lt2) = (term140 _146290 _146293 lt2).
Proof. exact (MK_COMB (@lem8357094 _146290 _146293) (@lem8357093 _146290 _146293 lt2)). Qed.
Lemma lem8357096 {_146290 _146293 : Type'} : (term76 _146290 _146293) = (term141 _146290 _146293).
Proof. exact (fun_ext (fun lt2 : type1402 _146293 => @lem8357095 _146290 _146293 lt2)). Qed.
Lemma lem8357097 {_146293 : Type'} : (@all (_146293 -> _146293 -> Prop)) = (@all (_146293 -> _146293 -> Prop)).
Proof. exact (eq_refl (@all (_146293 -> _146293 -> Prop))). Qed.
Lemma lem8357098 {_146290 _146293 : Type'} : (term78 _146290 _146293) = (term142 _146290 _146293).
Proof. exact (MK_COMB (@lem8357097 _146293) (@lem8357096 _146290 _146293)). Qed.
Lemma lem8357299 {_146290 _146293 : Type'} : (term77 _146290 _146293) = (term142 _146290 _146293).
Proof. exact (TRANS (@lem8356856 _146290 _146293) (@lem8357098 _146290 _146293)). Qed.
Lemma lem8357300 {_146290 _146293 : Type'} : (term142 _146290 _146293) = (term77 _146290 _146293).
Proof. exact (SYM (@lem8357299 _146290 _146293)). Qed.
Lemma lem8357302 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (H' : type796 _146290 _146293) (h1 : term21 _146290 _146293 lt2 P G H') : term21 _146290 _146293 lt2 P G H'.
Proof. exact (h1). Qed.
Lemma lem8357303 {_146290 _146293 : Type'} (P : type799 _146290 _146293) (G : type797 _146290 _146293) (lt2 : type1402 _146293) (h1 : term23 _146290 _146293 P G lt2) : term23 _146290 _146293 P G lt2.
Proof. exact (h1). Qed.
Lemma lem8357306 (p : Prop) : p = (term38 p).
Proof. exact (EQ_MP (@lem10578 p) (@lem10597 p)). Qed.
Lemma lem8357307 {_146290 _146293 : Type'} (H' : type796 _146290 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (lt2 : type1402 _146293) : (term39 _146290 _146293 H' P G lt2) = (term40 _146290 _146293 H' P G lt2).
Proof. exact (@lem8357306 (term39 _146290 _146293 H' P G lt2)). Qed.
Lemma lem8357308 {_146290 _146293 : Type'} (H' : type796 _146290 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (lt2 : type1402 _146293) : (term40 _146290 _146293 H' P G lt2) = (term39 _146290 _146293 H' P G lt2).
Proof. exact (SYM (@lem8357307 _146290 _146293 H' P G lt2)). Qed.
Lemma lem8357309 {_146290 _146293 : Type'} (H' : type796 _146290 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (lt2 : type1402 _146293) (h1 : term41 _146290 _146293 H' P G lt2) : term41 _146290 _146293 H' P G lt2.
Proof. exact (h1). Qed.
Lemma lem8357315 {_146293 : Type'} (lt2 : type1402 _146293) (h1 : @WF _146293 lt2) : @WF _146293 lt2.
Proof. exact (h1). Qed.
Lemma lem8357322 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (x : _146293) (f : _146293 -> _146290) (g : _146293 -> _146290) (z : _146293) : (term143 _146290 _146293 lt2 x f g z) = (term144 _146290 _146293 lt2 x f g z).
Proof. exact (@lem17362 (lt2 z x) ((f z) = (g z))). Qed.
Lemma lem8357323 {_146293 : Type'} (P : _146293 -> Prop) : (term145 _146293 P) = (term146 _146293 P).
Proof. exact (@lem18392 _146293 P). Qed.
Lemma lem8357324 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (x : _146293) (f : _146293 -> _146290) (g : _146293 -> _146290) : (term147 _146290 _146293 lt2 x f g) = (term148 _146290 _146293 lt2 x f g).
Proof. exact (@lem8357323 _146293 (term86 _146290 _146293 lt2 x f g)). Qed.
Lemma lem8357325 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (x : _146293) (f : _146293 -> _146290) (g : _146293 -> _146290) (z : _146293) : (term149 _146290 _146293 lt2 x f g z) = (term85 _146290 _146293 lt2 x f g z).
Proof. exact (eq_refl (term149 _146290 _146293 lt2 x f g z)). Qed.
Lemma lem8357326 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem8357327 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (x : _146293) (f : _146293 -> _146290) (g : _146293 -> _146290) (z : _146293) : (term150 _146290 _146293 lt2 x f g z) = (term143 _146290 _146293 lt2 x f g z).
Proof. exact (MK_COMB (@lem8357326) (@lem8357325 _146290 _146293 lt2 x f g z)). Qed.
Lemma lem8357328 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (x : _146293) (f : _146293 -> _146290) (g : _146293 -> _146290) (z : _146293) : (term150 _146290 _146293 lt2 x f g z) = (term144 _146290 _146293 lt2 x f g z).
Proof. exact (TRANS (@lem8357327 _146290 _146293 lt2 x f g z) (@lem8357322 _146290 _146293 lt2 x f g z)). Qed.
Lemma lem8357329 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (x : _146293) (f : _146293 -> _146290) (g : _146293 -> _146290) : (term151 _146290 _146293 lt2 x f g) = (term152 _146290 _146293 lt2 x f g).
Proof. exact (fun_ext (fun z : _146293 => @lem8357328 _146290 _146293 lt2 x f g z)). Qed.
Lemma lem8357330 {_146293 : Type'} : (@ex _146293) = (@ex _146293).
Proof. exact (eq_refl (@ex _146293)). Qed.
Lemma lem8357331 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (x : _146293) (f : _146293 -> _146290) (g : _146293 -> _146290) : (term148 _146290 _146293 lt2 x f g) = (term153 _146290 _146293 lt2 x f g).
Proof. exact (MK_COMB (@lem8357330 _146293) (@lem8357329 _146290 _146293 lt2 x f g)). Qed.
Lemma lem8357332 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (x : _146293) (f : _146293 -> _146290) (g : _146293 -> _146290) : (term147 _146290 _146293 lt2 x f g) = (term153 _146290 _146293 lt2 x f g).
Proof. exact (TRANS (@lem8357324 _146290 _146293 lt2 x f g) (@lem8357331 _146290 _146293 lt2 x f g)). Qed.
Lemma lem8357347 {_146290 _146293 : Type'} (f : _146293 -> _146290) (P : type799 _146290 _146293) (g : _146293 -> _146290) (x : _146293) : ((P f x) = (P g x)) = (term154 _146290 _146293 f P g x).
Proof. exact (@lem17784 (P f x) (P g x)). Qed.
Lemma lem8357352 {_146290 _146293 : Type'} (G : type797 _146290 _146293) (f : _146293 -> _146290) (H' : type796 _146290 _146293) (g : _146293 -> _146290) (x : _146293) : (term155 _146290 _146293 G f H' g x) = (term155 _146290 _146293 G f H' g x).
Proof. exact (eq_refl (term155 _146290 _146293 G f H' g x)). Qed.
Lemma lem8357353 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8357354 {_146290 _146293 : Type'} (f : _146293 -> _146290) (P : type799 _146290 _146293) (g : _146293 -> _146290) (x : _146293) : (term156 _146290 _146293 f P g x) = (term157 _146290 _146293 f P g x).
Proof. exact (MK_COMB (@lem8357353) (@lem8357347 _146290 _146293 f P g x)). Qed.
Lemma lem8357355 {_146290 _146293 : Type'} (P : type799 _146290 _146293) (G : type797 _146290 _146293) (f : _146293 -> _146290) (H' : type796 _146290 _146293) (g : _146293 -> _146290) (x : _146293) : (term98 _146290 _146293 P G f H' g x) = (term158 _146290 _146293 P G f H' g x).
Proof. exact (MK_COMB (@lem8357354 _146290 _146293 f P g x) (@lem8357352 _146290 _146293 G f H' g x)). Qed.
Lemma lem8357356 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8357357 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (x : _146293) (f : _146293 -> _146290) (g : _146293 -> _146290) : (term159 _146290 _146293 lt2 x f g) = (term160 _146290 _146293 lt2 x f g).
Proof. exact (MK_COMB (@lem8357356) (@lem8357332 _146290 _146293 lt2 x f g)). Qed.
Lemma lem8357358 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (f : _146293 -> _146290) (H' : type796 _146290 _146293) (g : _146293 -> _146290) (x : _146293) : (term161 _146290 _146293 lt2 P G f H' g x) = (term162 _146290 _146293 lt2 P G f H' g x).
Proof. exact (MK_COMB (@lem8357357 _146290 _146293 lt2 x f g) (@lem8357355 _146290 _146293 P G f H' g x)). Qed.
Lemma lem8357359 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (f : _146293 -> _146290) (H' : type796 _146290 _146293) (g : _146293 -> _146290) (x : _146293) : (term99 _146290 _146293 lt2 P G f H' g x) = (term161 _146290 _146293 lt2 P G f H' g x).
Proof. exact (@lem17265 (term87 _146290 _146293 lt2 x f g) (term98 _146290 _146293 P G f H' g x)). Qed.
Lemma lem8357360 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (f : _146293 -> _146290) (H' : type796 _146290 _146293) (g : _146293 -> _146290) (x : _146293) : (term99 _146290 _146293 lt2 P G f H' g x) = (term162 _146290 _146293 lt2 P G f H' g x).
Proof. exact (TRANS (@lem8357359 _146290 _146293 lt2 P G f H' g x) (@lem8357358 _146290 _146293 lt2 P G f H' g x)). Qed.
Lemma lem8357361 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (f : _146293 -> _146290) (H' : type796 _146290 _146293) (g : _146293 -> _146290) : (term100 _146290 _146293 lt2 P G f H' g) = (term163 _146290 _146293 lt2 P G f H' g).
Proof. exact (fun_ext (fun x : _146293 => @lem8357360 _146290 _146293 lt2 P G f H' g x)). Qed.
Lemma lem8357362 {_146293 : Type'} : (@all _146293) = (@all _146293).
Proof. exact (eq_refl (@all _146293)). Qed.
Lemma lem8357363 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (f : _146293 -> _146290) (H' : type796 _146290 _146293) (g : _146293 -> _146290) : (term101 _146290 _146293 lt2 P G f H' g) = (term164 _146290 _146293 lt2 P G f H' g).
Proof. exact (MK_COMB (@lem8357362 _146293) (@lem8357361 _146290 _146293 lt2 P G f H' g)). Qed.
Lemma lem8357364 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (f : _146293 -> _146290) (H' : type796 _146290 _146293) : (term102 _146290 _146293 lt2 P G f H') = (term165 _146290 _146293 lt2 P G f H').
Proof. exact (fun_ext (fun g : _146293 -> _146290 => @lem8357363 _146290 _146293 lt2 P G f H' g)). Qed.
Lemma lem8357365 {_146290 _146293 : Type'} : (@all (_146293 -> _146290)) = (@all (_146293 -> _146290)).
Proof. exact (eq_refl (@all (_146293 -> _146290))). Qed.
Lemma lem8357366 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (f : _146293 -> _146290) (H' : type796 _146290 _146293) : (term103 _146290 _146293 lt2 P G f H') = (term166 _146290 _146293 lt2 P G f H').
Proof. exact (MK_COMB (@lem8357365 _146290 _146293) (@lem8357364 _146290 _146293 lt2 P G f H')). Qed.
Lemma lem8357367 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (H' : type796 _146290 _146293) : (term104 _146290 _146293 lt2 P G H') = (term167 _146290 _146293 lt2 P G H').
Proof. exact (fun_ext (fun f : _146293 -> _146290 => @lem8357366 _146290 _146293 lt2 P G f H')). Qed.
Lemma lem8357368 {_146290 _146293 : Type'} : (@all (_146293 -> _146290)) = (@all (_146293 -> _146290)).
Proof. exact (eq_refl (@all (_146293 -> _146290))). Qed.
Lemma lem8357369 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (H' : type796 _146290 _146293) : (term21 _146290 _146293 lt2 P G H') = (term168 _146290 _146293 lt2 P G H').
Proof. exact (MK_COMB (@lem8357368 _146290 _146293) (@lem8357367 _146290 _146293 lt2 P G H')). Qed.
Lemma lem8357476 {A : Type'} (P : A -> Prop) (Q : Prop) : (term169 A P Q) = (term170 A P Q).
Proof. exact (EQ_MP (@lem18905 A P Q) (@lem18904 A P Q)). Qed.
Lemma lem8357477 {_146293 : Type'} (P : _146293 -> Prop) (Q : Prop) : (term169 _146293 P Q) = (term170 _146293 P Q).
Proof. exact (@lem8357476 _146293 P Q). Qed.
Lemma lem8357478 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (f : _146293 -> _146290) (H' : type796 _146290 _146293) (g : _146293 -> _146290) (x : _146293) : (term171 _146290 _146293 lt2 P G f H' g x) = (term172 _146290 _146293 lt2 P G f H' g x).
Proof. exact (@lem8357477 _146293 (term152 _146290 _146293 lt2 x f g) (term158 _146290 _146293 P G f H' g x)). Qed.
Lemma lem8357479 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (x : _146293) (f : _146293 -> _146290) (g : _146293 -> _146290) (z : _146293) : (term173 _146290 _146293 lt2 x f g z) = (term144 _146290 _146293 lt2 x f g z).
Proof. exact (eq_refl (term173 _146290 _146293 lt2 x f g z)). Qed.
Lemma lem8357480 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (x : _146293) (f : _146293 -> _146290) (g : _146293 -> _146290) : (term174 _146290 _146293 lt2 x f g) = (term152 _146290 _146293 lt2 x f g).
Proof. exact (fun_ext (fun z : _146293 => @lem8357479 _146290 _146293 lt2 x f g z)). Qed.
Lemma lem8357481 {_146293 : Type'} : (@ex _146293) = (@ex _146293).
Proof. exact (eq_refl (@ex _146293)). Qed.
Lemma lem8357482 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (x : _146293) (f : _146293 -> _146290) (g : _146293 -> _146290) : (term175 _146290 _146293 lt2 x f g) = (term153 _146290 _146293 lt2 x f g).
Proof. exact (MK_COMB (@lem8357481 _146293) (@lem8357480 _146290 _146293 lt2 x f g)). Qed.
Lemma lem8357483 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8357484 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (x : _146293) (f : _146293 -> _146290) (g : _146293 -> _146290) : (term176 _146290 _146293 lt2 x f g) = (term160 _146290 _146293 lt2 x f g).
Proof. exact (MK_COMB (@lem8357483) (@lem8357482 _146290 _146293 lt2 x f g)). Qed.
Lemma lem8357485 {_146290 _146293 : Type'} (P : type799 _146290 _146293) (G : type797 _146290 _146293) (f : _146293 -> _146290) (H' : type796 _146290 _146293) (g : _146293 -> _146290) (x : _146293) : (term158 _146290 _146293 P G f H' g x) = (term158 _146290 _146293 P G f H' g x).
Proof. exact (eq_refl (term158 _146290 _146293 P G f H' g x)). Qed.
Lemma lem8357486 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (f : _146293 -> _146290) (H' : type796 _146290 _146293) (g : _146293 -> _146290) (x : _146293) : (term171 _146290 _146293 lt2 P G f H' g x) = (term162 _146290 _146293 lt2 P G f H' g x).
Proof. exact (MK_COMB (@lem8357484 _146290 _146293 lt2 x f g) (@lem8357485 _146290 _146293 P G f H' g x)). Qed.
Lemma lem8357487 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8357488 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (f : _146293 -> _146290) (H' : type796 _146290 _146293) (g : _146293 -> _146290) (x : _146293) : (term177 _146290 _146293 lt2 P G f H' g x) = (term178 _146290 _146293 lt2 P G f H' g x).
Proof. exact (MK_COMB (@lem8357487) (@lem8357486 _146290 _146293 lt2 P G f H' g x)). Qed.
Lemma lem8357489 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (x : _146293) (f : _146293 -> _146290) (g : _146293 -> _146290) (z : _146293) : (term173 _146290 _146293 lt2 x f g z) = (term144 _146290 _146293 lt2 x f g z).
Proof. exact (eq_refl (term173 _146290 _146293 lt2 x f g z)). Qed.
Lemma lem8357490 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8357491 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (x : _146293) (f : _146293 -> _146290) (g : _146293 -> _146290) (z : _146293) : (term179 _146290 _146293 lt2 x f g z) = (term180 _146290 _146293 lt2 x f g z).
Proof. exact (MK_COMB (@lem8357490) (@lem8357489 _146290 _146293 lt2 x f g z)). Qed.
Lemma lem8357492 {_146290 _146293 : Type'} (P : type799 _146290 _146293) (G : type797 _146290 _146293) (f : _146293 -> _146290) (H' : type796 _146290 _146293) (g : _146293 -> _146290) (x : _146293) : (term158 _146290 _146293 P G f H' g x) = (term158 _146290 _146293 P G f H' g x).
Proof. exact (eq_refl (term158 _146290 _146293 P G f H' g x)). Qed.
Lemma lem8357493 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (z : _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (f : _146293 -> _146290) (H' : type796 _146290 _146293) (g : _146293 -> _146290) (x : _146293) : (term181 _146290 _146293 lt2 z P G f H' g x) = (term182 _146290 _146293 lt2 z P G f H' g x).
Proof. exact (MK_COMB (@lem8357491 _146290 _146293 lt2 x f g z) (@lem8357492 _146290 _146293 P G f H' g x)). Qed.
Lemma lem8357494 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (f : _146293 -> _146290) (H' : type796 _146290 _146293) (g : _146293 -> _146290) (x : _146293) : (term183 _146290 _146293 lt2 P G f H' g x) = (term184 _146290 _146293 lt2 P G f H' g x).
Proof. exact (fun_ext (fun z : _146293 => @lem8357493 _146290 _146293 lt2 z P G f H' g x)). Qed.
Lemma lem8357495 {_146293 : Type'} : (@ex _146293) = (@ex _146293).
Proof. exact (eq_refl (@ex _146293)). Qed.
Lemma lem8357496 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (f : _146293 -> _146290) (H' : type796 _146290 _146293) (g : _146293 -> _146290) (x : _146293) : (term172 _146290 _146293 lt2 P G f H' g x) = (term185 _146290 _146293 lt2 P G f H' g x).
Proof. exact (MK_COMB (@lem8357495 _146293) (@lem8357494 _146290 _146293 lt2 P G f H' g x)). Qed.
Lemma lem8357497 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (f : _146293 -> _146290) (H' : type796 _146290 _146293) (g : _146293 -> _146290) (x : _146293) : ((term171 _146290 _146293 lt2 P G f H' g x) = (term172 _146290 _146293 lt2 P G f H' g x)) = ((term162 _146290 _146293 lt2 P G f H' g x) = (term185 _146290 _146293 lt2 P G f H' g x)).
Proof. exact (MK_COMB (@lem8357488 _146290 _146293 lt2 P G f H' g x) (@lem8357496 _146290 _146293 lt2 P G f H' g x)). Qed.
Lemma lem8357498 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (f : _146293 -> _146290) (H' : type796 _146290 _146293) (g : _146293 -> _146290) (x : _146293) : (term162 _146290 _146293 lt2 P G f H' g x) = (term185 _146290 _146293 lt2 P G f H' g x).
Proof. exact (EQ_MP (@lem8357497 _146290 _146293 lt2 P G f H' g x) (@lem8357478 _146290 _146293 lt2 P G f H' g x)). Qed.
Lemma lem8357499 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (f : _146293 -> _146290) (H' : type796 _146290 _146293) (g : _146293 -> _146290) : (term163 _146290 _146293 lt2 P G f H' g) = (term186 _146290 _146293 lt2 P G f H' g).
Proof. exact (fun_ext (fun x : _146293 => @lem8357498 _146290 _146293 lt2 P G f H' g x)). Qed.
Lemma lem8357500 {_146293 : Type'} : (@all _146293) = (@all _146293).
Proof. exact (eq_refl (@all _146293)). Qed.
Lemma lem8357501 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (f : _146293 -> _146290) (H' : type796 _146290 _146293) (g : _146293 -> _146290) : (term164 _146290 _146293 lt2 P G f H' g) = (term187 _146290 _146293 lt2 P G f H' g).
Proof. exact (MK_COMB (@lem8357500 _146293) (@lem8357499 _146290 _146293 lt2 P G f H' g)). Qed.
Lemma lem8357503 {A B : Type'} (P : type1413 A B) : (term188 A B P) = (term189 A B P).
Proof. exact (EQ_MP (@lem18899 A B P) (@lem18898 A B P)). Qed.
Lemma lem8357504 {_146293 : Type'} (P : type1402 _146293) : (term190 _146293 P) = (term191 _146293 P).
Proof. exact (@lem8357503 _146293 _146293 P). Qed.
Lemma lem8357505 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (f : _146293 -> _146290) (H' : type796 _146290 _146293) (g : _146293 -> _146290) : (term192 _146290 _146293 lt2 P G f H' g) = (term193 _146290 _146293 lt2 P G f H' g).
Proof. exact (@lem8357504 _146293 (term194 _146290 _146293 lt2 P G f H' g)). Qed.
Lemma lem8357506 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (f : _146293 -> _146290) (H' : type796 _146290 _146293) (g : _146293 -> _146290) (x : _146293) : (term195 _146290 _146293 lt2 P G f H' g x) = (term184 _146290 _146293 lt2 P G f H' g x).
Proof. exact (eq_refl (term195 _146290 _146293 lt2 P G f H' g x)). Qed.
Lemma lem8357507 {_146293 : Type'} (z : _146293) : z = z.
Proof. exact (eq_refl z). Qed.
Lemma lem8357508 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (f : _146293 -> _146290) (H' : type796 _146290 _146293) (g : _146293 -> _146290) (x : _146293) (z : _146293) : (term196 _146290 _146293 lt2 P G f H' g x z) = (term197 _146290 _146293 lt2 P G f H' g x z).
Proof. exact (MK_COMB (@lem8357506 _146290 _146293 lt2 P G f H' g x) (@lem8357507 _146293 z)). Qed.
Lemma lem8357509 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (z : _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (f : _146293 -> _146290) (H' : type796 _146290 _146293) (g : _146293 -> _146290) (x : _146293) : (term197 _146290 _146293 lt2 P G f H' g x z) = (term182 _146290 _146293 lt2 z P G f H' g x).
Proof. exact (eq_refl (term197 _146290 _146293 lt2 P G f H' g x z)). Qed.
Lemma lem8357510 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (z : _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (f : _146293 -> _146290) (H' : type796 _146290 _146293) (g : _146293 -> _146290) (x : _146293) : (term196 _146290 _146293 lt2 P G f H' g x z) = (term182 _146290 _146293 lt2 z P G f H' g x).
Proof. exact (TRANS (@lem8357508 _146290 _146293 lt2 P G f H' g x z) (@lem8357509 _146290 _146293 lt2 z P G f H' g x)). Qed.
Lemma lem8357511 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (f : _146293 -> _146290) (H' : type796 _146290 _146293) (g : _146293 -> _146290) (x : _146293) : (term198 _146290 _146293 lt2 P G f H' g x) = (term184 _146290 _146293 lt2 P G f H' g x).
Proof. exact (fun_ext (fun z : _146293 => @lem8357510 _146290 _146293 lt2 z P G f H' g x)). Qed.
Lemma lem8357512 {_146293 : Type'} : (@ex _146293) = (@ex _146293).
Proof. exact (eq_refl (@ex _146293)). Qed.
Lemma lem8357513 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (f : _146293 -> _146290) (H' : type796 _146290 _146293) (g : _146293 -> _146290) (x : _146293) : (term199 _146290 _146293 lt2 P G f H' g x) = (term185 _146290 _146293 lt2 P G f H' g x).
Proof. exact (MK_COMB (@lem8357512 _146293) (@lem8357511 _146290 _146293 lt2 P G f H' g x)). Qed.
Lemma lem8357514 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (f : _146293 -> _146290) (H' : type796 _146290 _146293) (g : _146293 -> _146290) : (term200 _146290 _146293 lt2 P G f H' g) = (term186 _146290 _146293 lt2 P G f H' g).
Proof. exact (fun_ext (fun x : _146293 => @lem8357513 _146290 _146293 lt2 P G f H' g x)). Qed.
Lemma lem8357515 {_146293 : Type'} : (@all _146293) = (@all _146293).
Proof. exact (eq_refl (@all _146293)). Qed.
Lemma lem8357516 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (f : _146293 -> _146290) (H' : type796 _146290 _146293) (g : _146293 -> _146290) : (term192 _146290 _146293 lt2 P G f H' g) = (term187 _146290 _146293 lt2 P G f H' g).
Proof. exact (MK_COMB (@lem8357515 _146293) (@lem8357514 _146290 _146293 lt2 P G f H' g)). Qed.
Lemma lem8357517 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8357518 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (f : _146293 -> _146290) (H' : type796 _146290 _146293) (g : _146293 -> _146290) : (term201 _146290 _146293 lt2 P G f H' g) = (term202 _146290 _146293 lt2 P G f H' g).
Proof. exact (MK_COMB (@lem8357517) (@lem8357516 _146290 _146293 lt2 P G f H' g)). Qed.
Lemma lem8357519 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (f : _146293 -> _146290) (H' : type796 _146290 _146293) (g : _146293 -> _146290) (x : _146293) : (term195 _146290 _146293 lt2 P G f H' g x) = (term184 _146290 _146293 lt2 P G f H' g x).
Proof. exact (eq_refl (term195 _146290 _146293 lt2 P G f H' g x)). Qed.
Lemma lem8357520 {_146293 : Type'} (z : _146293 -> _146293) (x : _146293) : (z x) = (z x).
Proof. exact (eq_refl (z x)). Qed.
Lemma lem8357521 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (f : _146293 -> _146290) (H' : type796 _146290 _146293) (g : _146293 -> _146290) (z : _146293 -> _146293) (x : _146293) : (term203 _146290 _146293 lt2 P G f H' g z x) = (term204 _146290 _146293 lt2 P G f H' g z x).
Proof. exact (MK_COMB (@lem8357519 _146290 _146293 lt2 P G f H' g x) (@lem8357520 _146293 z x)). Qed.
Lemma lem8357522 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (z : _146293 -> _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (f : _146293 -> _146290) (H' : type796 _146290 _146293) (g : _146293 -> _146290) (x : _146293) : (term204 _146290 _146293 lt2 P G f H' g z x) = (term205 _146290 _146293 lt2 z P G f H' g x).
Proof. exact (eq_refl (term204 _146290 _146293 lt2 P G f H' g z x)). Qed.
Lemma lem8357523 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (z : _146293 -> _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (f : _146293 -> _146290) (H' : type796 _146290 _146293) (g : _146293 -> _146290) (x : _146293) : (term203 _146290 _146293 lt2 P G f H' g z x) = (term205 _146290 _146293 lt2 z P G f H' g x).
Proof. exact (TRANS (@lem8357521 _146290 _146293 lt2 P G f H' g z x) (@lem8357522 _146290 _146293 lt2 z P G f H' g x)). Qed.
Lemma lem8357524 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (z : _146293 -> _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (f : _146293 -> _146290) (H' : type796 _146290 _146293) (g : _146293 -> _146290) : (term206 _146290 _146293 lt2 P G f H' g z) = (term207 _146290 _146293 lt2 z P G f H' g).
Proof. exact (fun_ext (fun x : _146293 => @lem8357523 _146290 _146293 lt2 z P G f H' g x)). Qed.
Lemma lem8357525 {_146293 : Type'} : (@all _146293) = (@all _146293).
Proof. exact (eq_refl (@all _146293)). Qed.
Lemma lem8357526 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (z : _146293 -> _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (f : _146293 -> _146290) (H' : type796 _146290 _146293) (g : _146293 -> _146290) : (term208 _146290 _146293 lt2 P G f H' g z) = (term209 _146290 _146293 lt2 z P G f H' g).
Proof. exact (MK_COMB (@lem8357525 _146293) (@lem8357524 _146290 _146293 lt2 z P G f H' g)). Qed.
Lemma lem8357527 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (f : _146293 -> _146290) (H' : type796 _146290 _146293) (g : _146293 -> _146290) : (term210 _146290 _146293 lt2 P G f H' g) = (term211 _146290 _146293 lt2 P G f H' g).
Proof. exact (fun_ext (fun z : _146293 -> _146293 => @lem8357526 _146290 _146293 lt2 z P G f H' g)). Qed.
Lemma lem8357528 {_146293 : Type'} : (@ex (_146293 -> _146293)) = (@ex (_146293 -> _146293)).
Proof. exact (eq_refl (@ex (_146293 -> _146293))). Qed.
Lemma lem8357529 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (f : _146293 -> _146290) (H' : type796 _146290 _146293) (g : _146293 -> _146290) : (term193 _146290 _146293 lt2 P G f H' g) = (term212 _146290 _146293 lt2 P G f H' g).
Proof. exact (MK_COMB (@lem8357528 _146293) (@lem8357527 _146290 _146293 lt2 P G f H' g)). Qed.
Lemma lem8357530 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (f : _146293 -> _146290) (H' : type796 _146290 _146293) (g : _146293 -> _146290) : ((term192 _146290 _146293 lt2 P G f H' g) = (term193 _146290 _146293 lt2 P G f H' g)) = ((term187 _146290 _146293 lt2 P G f H' g) = (term212 _146290 _146293 lt2 P G f H' g)).
Proof. exact (MK_COMB (@lem8357518 _146290 _146293 lt2 P G f H' g) (@lem8357529 _146290 _146293 lt2 P G f H' g)). Qed.
Lemma lem8357531 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (f : _146293 -> _146290) (H' : type796 _146290 _146293) (g : _146293 -> _146290) : (term187 _146290 _146293 lt2 P G f H' g) = (term212 _146290 _146293 lt2 P G f H' g).
Proof. exact (EQ_MP (@lem8357530 _146290 _146293 lt2 P G f H' g) (@lem8357505 _146290 _146293 lt2 P G f H' g)). Qed.
Lemma lem8357532 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (f : _146293 -> _146290) (H' : type796 _146290 _146293) (g : _146293 -> _146290) : (term164 _146290 _146293 lt2 P G f H' g) = (term212 _146290 _146293 lt2 P G f H' g).
Proof. exact (TRANS (@lem8357501 _146290 _146293 lt2 P G f H' g) (@lem8357531 _146290 _146293 lt2 P G f H' g)). Qed.
Lemma lem8357533 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (f : _146293 -> _146290) (H' : type796 _146290 _146293) : (term165 _146290 _146293 lt2 P G f H') = (term213 _146290 _146293 lt2 P G f H').
Proof. exact (fun_ext (fun g : _146293 -> _146290 => @lem8357532 _146290 _146293 lt2 P G f H' g)). Qed.
Lemma lem8357534 {_146290 _146293 : Type'} : (@all (_146293 -> _146290)) = (@all (_146293 -> _146290)).
Proof. exact (eq_refl (@all (_146293 -> _146290))). Qed.
Lemma lem8357535 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (f : _146293 -> _146290) (H' : type796 _146290 _146293) : (term166 _146290 _146293 lt2 P G f H') = (term214 _146290 _146293 lt2 P G f H').
Proof. exact (MK_COMB (@lem8357534 _146290 _146293) (@lem8357533 _146290 _146293 lt2 P G f H')). Qed.
Lemma lem8357537 {A B : Type'} (P : type1413 A B) : (term188 A B P) = (term189 A B P).
Proof. exact (EQ_MP (@lem18899 A B P) (@lem18898 A B P)). Qed.
Lemma lem8357538 {_146290 _146293 : Type'} (P : type787 _146290 _146293) : (term215 _146290 _146293 P) = (term216 _146290 _146293 P).
Proof. exact (@lem8357537 (_146293 -> _146290) (_146293 -> _146293) P). Qed.
Lemma lem8357539 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (f : _146293 -> _146290) (H' : type796 _146290 _146293) : (term217 _146290 _146293 lt2 P G f H') = (term218 _146290 _146293 lt2 P G f H').
Proof. exact (@lem8357538 _146290 _146293 (term219 _146290 _146293 lt2 P G f H')). Qed.
Lemma lem8357540 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (f : _146293 -> _146290) (H' : type796 _146290 _146293) (g : _146293 -> _146290) : (term220 _146290 _146293 lt2 P G f H' g) = (term211 _146290 _146293 lt2 P G f H' g).
Proof. exact (eq_refl (term220 _146290 _146293 lt2 P G f H' g)). Qed.
Lemma lem8357541 {_146293 : Type'} (z : _146293 -> _146293) : z = z.
Proof. exact (eq_refl z). Qed.
Lemma lem8357542 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (f : _146293 -> _146290) (H' : type796 _146290 _146293) (g : _146293 -> _146290) (z : _146293 -> _146293) : (term221 _146290 _146293 lt2 P G f H' g z) = (term222 _146290 _146293 lt2 P G f H' g z).
Proof. exact (MK_COMB (@lem8357540 _146290 _146293 lt2 P G f H' g) (@lem8357541 _146293 z)). Qed.
Lemma lem8357543 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (z : _146293 -> _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (f : _146293 -> _146290) (H' : type796 _146290 _146293) (g : _146293 -> _146290) : (term222 _146290 _146293 lt2 P G f H' g z) = (term209 _146290 _146293 lt2 z P G f H' g).
Proof. exact (eq_refl (term222 _146290 _146293 lt2 P G f H' g z)). Qed.
Lemma lem8357544 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (z : _146293 -> _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (f : _146293 -> _146290) (H' : type796 _146290 _146293) (g : _146293 -> _146290) : (term221 _146290 _146293 lt2 P G f H' g z) = (term209 _146290 _146293 lt2 z P G f H' g).
Proof. exact (TRANS (@lem8357542 _146290 _146293 lt2 P G f H' g z) (@lem8357543 _146290 _146293 lt2 z P G f H' g)). Qed.
Lemma lem8357545 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (f : _146293 -> _146290) (H' : type796 _146290 _146293) (g : _146293 -> _146290) : (term223 _146290 _146293 lt2 P G f H' g) = (term211 _146290 _146293 lt2 P G f H' g).
Proof. exact (fun_ext (fun z : _146293 -> _146293 => @lem8357544 _146290 _146293 lt2 z P G f H' g)). Qed.
Lemma lem8357546 {_146293 : Type'} : (@ex (_146293 -> _146293)) = (@ex (_146293 -> _146293)).
Proof. exact (eq_refl (@ex (_146293 -> _146293))). Qed.
Lemma lem8357547 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (f : _146293 -> _146290) (H' : type796 _146290 _146293) (g : _146293 -> _146290) : (term224 _146290 _146293 lt2 P G f H' g) = (term212 _146290 _146293 lt2 P G f H' g).
Proof. exact (MK_COMB (@lem8357546 _146293) (@lem8357545 _146290 _146293 lt2 P G f H' g)). Qed.
Lemma lem8357548 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (f : _146293 -> _146290) (H' : type796 _146290 _146293) : (term225 _146290 _146293 lt2 P G f H') = (term213 _146290 _146293 lt2 P G f H').
Proof. exact (fun_ext (fun g : _146293 -> _146290 => @lem8357547 _146290 _146293 lt2 P G f H' g)). Qed.
Lemma lem8357549 {_146290 _146293 : Type'} : (@all (_146293 -> _146290)) = (@all (_146293 -> _146290)).
Proof. exact (eq_refl (@all (_146293 -> _146290))). Qed.
Lemma lem8357550 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (f : _146293 -> _146290) (H' : type796 _146290 _146293) : (term217 _146290 _146293 lt2 P G f H') = (term214 _146290 _146293 lt2 P G f H').
Proof. exact (MK_COMB (@lem8357549 _146290 _146293) (@lem8357548 _146290 _146293 lt2 P G f H')). Qed.
Lemma lem8357551 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8357552 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (f : _146293 -> _146290) (H' : type796 _146290 _146293) : (term226 _146290 _146293 lt2 P G f H') = (term227 _146290 _146293 lt2 P G f H').
Proof. exact (MK_COMB (@lem8357551) (@lem8357550 _146290 _146293 lt2 P G f H')). Qed.
Lemma lem8357553 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (f : _146293 -> _146290) (H' : type796 _146290 _146293) (g : _146293 -> _146290) : (term220 _146290 _146293 lt2 P G f H' g) = (term211 _146290 _146293 lt2 P G f H' g).
Proof. exact (eq_refl (term220 _146290 _146293 lt2 P G f H' g)). Qed.
Lemma lem8357554 {_146290 _146293 : Type'} (z : type797 _146290 _146293) (g : _146293 -> _146290) : (z g) = (z g).
Proof. exact (eq_refl (z g)). Qed.
Lemma lem8357555 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (f : _146293 -> _146290) (H' : type796 _146290 _146293) (z : type797 _146290 _146293) (g : _146293 -> _146290) : (term228 _146290 _146293 lt2 P G f H' z g) = (term229 _146290 _146293 lt2 P G f H' z g).
Proof. exact (MK_COMB (@lem8357553 _146290 _146293 lt2 P G f H' g) (@lem8357554 _146290 _146293 z g)). Qed.
Lemma lem8357556 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (z : type797 _146290 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (f : _146293 -> _146290) (H' : type796 _146290 _146293) (g : _146293 -> _146290) : (term229 _146290 _146293 lt2 P G f H' z g) = (term230 _146290 _146293 lt2 z P G f H' g).
Proof. exact (eq_refl (term229 _146290 _146293 lt2 P G f H' z g)). Qed.
Lemma lem8357557 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (z : type797 _146290 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (f : _146293 -> _146290) (H' : type796 _146290 _146293) (g : _146293 -> _146290) : (term228 _146290 _146293 lt2 P G f H' z g) = (term230 _146290 _146293 lt2 z P G f H' g).
Proof. exact (TRANS (@lem8357555 _146290 _146293 lt2 P G f H' z g) (@lem8357556 _146290 _146293 lt2 z P G f H' g)). Qed.
Lemma lem8357558 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (z : type797 _146290 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (f : _146293 -> _146290) (H' : type796 _146290 _146293) : (term231 _146290 _146293 lt2 P G f H' z) = (term232 _146290 _146293 lt2 z P G f H').
Proof. exact (fun_ext (fun g : _146293 -> _146290 => @lem8357557 _146290 _146293 lt2 z P G f H' g)). Qed.
Lemma lem8357559 {_146290 _146293 : Type'} : (@all (_146293 -> _146290)) = (@all (_146293 -> _146290)).
Proof. exact (eq_refl (@all (_146293 -> _146290))). Qed.
Lemma lem8357560 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (z : type797 _146290 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (f : _146293 -> _146290) (H' : type796 _146290 _146293) : (term233 _146290 _146293 lt2 P G f H' z) = (term234 _146290 _146293 lt2 z P G f H').
Proof. exact (MK_COMB (@lem8357559 _146290 _146293) (@lem8357558 _146290 _146293 lt2 z P G f H')). Qed.
Lemma lem8357561 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (f : _146293 -> _146290) (H' : type796 _146290 _146293) : (term235 _146290 _146293 lt2 P G f H') = (term236 _146290 _146293 lt2 P G f H').
Proof. exact (fun_ext (fun z : type797 _146290 _146293 => @lem8357560 _146290 _146293 lt2 z P G f H')). Qed.
Lemma lem8357562 {_146290 _146293 : Type'} : (@ex ((_146293 -> _146290) -> _146293 -> _146293)) = (@ex ((_146293 -> _146290) -> _146293 -> _146293)).
Proof. exact (eq_refl (@ex ((_146293 -> _146290) -> _146293 -> _146293))). Qed.
Lemma lem8357563 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (f : _146293 -> _146290) (H' : type796 _146290 _146293) : (term218 _146290 _146293 lt2 P G f H') = (term237 _146290 _146293 lt2 P G f H').
Proof. exact (MK_COMB (@lem8357562 _146290 _146293) (@lem8357561 _146290 _146293 lt2 P G f H')). Qed.
Lemma lem8357564 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (f : _146293 -> _146290) (H' : type796 _146290 _146293) : ((term217 _146290 _146293 lt2 P G f H') = (term218 _146290 _146293 lt2 P G f H')) = ((term214 _146290 _146293 lt2 P G f H') = (term237 _146290 _146293 lt2 P G f H')).
Proof. exact (MK_COMB (@lem8357552 _146290 _146293 lt2 P G f H') (@lem8357563 _146290 _146293 lt2 P G f H')). Qed.
Lemma lem8357565 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (f : _146293 -> _146290) (H' : type796 _146290 _146293) : (term214 _146290 _146293 lt2 P G f H') = (term237 _146290 _146293 lt2 P G f H').
Proof. exact (EQ_MP (@lem8357564 _146290 _146293 lt2 P G f H') (@lem8357539 _146290 _146293 lt2 P G f H')). Qed.
Lemma lem8357566 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (f : _146293 -> _146290) (H' : type796 _146290 _146293) : (term166 _146290 _146293 lt2 P G f H') = (term237 _146290 _146293 lt2 P G f H').
Proof. exact (TRANS (@lem8357535 _146290 _146293 lt2 P G f H') (@lem8357565 _146290 _146293 lt2 P G f H')). Qed.
Lemma lem8357567 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (H' : type796 _146290 _146293) : (term167 _146290 _146293 lt2 P G H') = (term238 _146290 _146293 lt2 P G H').
Proof. exact (fun_ext (fun f : _146293 -> _146290 => @lem8357566 _146290 _146293 lt2 P G f H')). Qed.
Lemma lem8357568 {_146290 _146293 : Type'} : (@all (_146293 -> _146290)) = (@all (_146293 -> _146290)).
Proof. exact (eq_refl (@all (_146293 -> _146290))). Qed.
Lemma lem8357569 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (H' : type796 _146290 _146293) : (term168 _146290 _146293 lt2 P G H') = (term239 _146290 _146293 lt2 P G H').
Proof. exact (MK_COMB (@lem8357568 _146290 _146293) (@lem8357567 _146290 _146293 lt2 P G H')). Qed.
Lemma lem8357571 {A B : Type'} (P : type1413 A B) : (term188 A B P) = (term189 A B P).
Proof. exact (EQ_MP (@lem18899 A B P) (@lem18898 A B P)). Qed.
Lemma lem8357572 {_146290 _146293 : Type'} (P : type771 _146290 _146293) : (term240 _146290 _146293 P) = (term241 _146290 _146293 P).
Proof. exact (@lem8357571 (_146293 -> _146290) (type797 _146290 _146293) P). Qed.
Lemma lem8357573 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (H' : type796 _146290 _146293) : (term242 _146290 _146293 lt2 P G H') = (term243 _146290 _146293 lt2 P G H').
Proof. exact (@lem8357572 _146290 _146293 (term244 _146290 _146293 lt2 P G H')). Qed.
Lemma lem8357574 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (f : _146293 -> _146290) (H' : type796 _146290 _146293) : (term245 _146290 _146293 lt2 P G H' f) = (term236 _146290 _146293 lt2 P G f H').
Proof. exact (eq_refl (term245 _146290 _146293 lt2 P G H' f)). Qed.
Lemma lem8357575 {_146290 _146293 : Type'} (z : type797 _146290 _146293) : z = z.
Proof. exact (eq_refl z). Qed.
Lemma lem8357576 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (f : _146293 -> _146290) (H' : type796 _146290 _146293) (z : type797 _146290 _146293) : (term246 _146290 _146293 lt2 P G H' f z) = (term247 _146290 _146293 lt2 P G f H' z).
Proof. exact (MK_COMB (@lem8357574 _146290 _146293 lt2 P G f H') (@lem8357575 _146290 _146293 z)). Qed.
Lemma lem8357577 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (z : type797 _146290 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (f : _146293 -> _146290) (H' : type796 _146290 _146293) : (term247 _146290 _146293 lt2 P G f H' z) = (term234 _146290 _146293 lt2 z P G f H').
Proof. exact (eq_refl (term247 _146290 _146293 lt2 P G f H' z)). Qed.
Lemma lem8357578 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (z : type797 _146290 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (f : _146293 -> _146290) (H' : type796 _146290 _146293) : (term246 _146290 _146293 lt2 P G H' f z) = (term234 _146290 _146293 lt2 z P G f H').
Proof. exact (TRANS (@lem8357576 _146290 _146293 lt2 P G f H' z) (@lem8357577 _146290 _146293 lt2 z P G f H')). Qed.
Lemma lem8357579 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (f : _146293 -> _146290) (H' : type796 _146290 _146293) : (term248 _146290 _146293 lt2 P G H' f) = (term236 _146290 _146293 lt2 P G f H').
Proof. exact (fun_ext (fun z : type797 _146290 _146293 => @lem8357578 _146290 _146293 lt2 z P G f H')). Qed.
Lemma lem8357580 {_146290 _146293 : Type'} : (@ex ((_146293 -> _146290) -> _146293 -> _146293)) = (@ex ((_146293 -> _146290) -> _146293 -> _146293)).
Proof. exact (eq_refl (@ex ((_146293 -> _146290) -> _146293 -> _146293))). Qed.
Lemma lem8357581 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (f : _146293 -> _146290) (H' : type796 _146290 _146293) : (term249 _146290 _146293 lt2 P G H' f) = (term237 _146290 _146293 lt2 P G f H').
Proof. exact (MK_COMB (@lem8357580 _146290 _146293) (@lem8357579 _146290 _146293 lt2 P G f H')). Qed.
Lemma lem8357582 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (H' : type796 _146290 _146293) : (term250 _146290 _146293 lt2 P G H') = (term238 _146290 _146293 lt2 P G H').
Proof. exact (fun_ext (fun f : _146293 -> _146290 => @lem8357581 _146290 _146293 lt2 P G f H')). Qed.
Lemma lem8357583 {_146290 _146293 : Type'} : (@all (_146293 -> _146290)) = (@all (_146293 -> _146290)).
Proof. exact (eq_refl (@all (_146293 -> _146290))). Qed.
Lemma lem8357584 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (H' : type796 _146290 _146293) : (term242 _146290 _146293 lt2 P G H') = (term239 _146290 _146293 lt2 P G H').
Proof. exact (MK_COMB (@lem8357583 _146290 _146293) (@lem8357582 _146290 _146293 lt2 P G H')). Qed.
Lemma lem8357585 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8357586 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (H' : type796 _146290 _146293) : (term251 _146290 _146293 lt2 P G H') = (term252 _146290 _146293 lt2 P G H').
Proof. exact (MK_COMB (@lem8357585) (@lem8357584 _146290 _146293 lt2 P G H')). Qed.
Lemma lem8357587 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (f : _146293 -> _146290) (H' : type796 _146290 _146293) : (term245 _146290 _146293 lt2 P G H' f) = (term236 _146290 _146293 lt2 P G f H').
Proof. exact (eq_refl (term245 _146290 _146293 lt2 P G H' f)). Qed.
Lemma lem8357588 {_146290 _146293 : Type'} (z : type784 _146290 _146293) (f : _146293 -> _146290) : (z f) = (z f).
Proof. exact (eq_refl (z f)). Qed.
Lemma lem8357589 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (H' : type796 _146290 _146293) (z : type784 _146290 _146293) (f : _146293 -> _146290) : (term253 _146290 _146293 lt2 P G H' z f) = (term254 _146290 _146293 lt2 P G H' z f).
Proof. exact (MK_COMB (@lem8357587 _146290 _146293 lt2 P G f H') (@lem8357588 _146290 _146293 z f)). Qed.
Lemma lem8357590 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (z : type784 _146290 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (f : _146293 -> _146290) (H' : type796 _146290 _146293) : (term254 _146290 _146293 lt2 P G H' z f) = (term255 _146290 _146293 lt2 z P G f H').
Proof. exact (eq_refl (term254 _146290 _146293 lt2 P G H' z f)). Qed.
Lemma lem8357591 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (z : type784 _146290 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (f : _146293 -> _146290) (H' : type796 _146290 _146293) : (term253 _146290 _146293 lt2 P G H' z f) = (term255 _146290 _146293 lt2 z P G f H').
Proof. exact (TRANS (@lem8357589 _146290 _146293 lt2 P G H' z f) (@lem8357590 _146290 _146293 lt2 z P G f H')). Qed.
Lemma lem8357592 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (z : type784 _146290 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (H' : type796 _146290 _146293) : (term256 _146290 _146293 lt2 P G H' z) = (term257 _146290 _146293 lt2 z P G H').
Proof. exact (fun_ext (fun f : _146293 -> _146290 => @lem8357591 _146290 _146293 lt2 z P G f H')). Qed.
Lemma lem8357593 {_146290 _146293 : Type'} : (@all (_146293 -> _146290)) = (@all (_146293 -> _146290)).
Proof. exact (eq_refl (@all (_146293 -> _146290))). Qed.
Lemma lem8357594 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (z : type784 _146290 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (H' : type796 _146290 _146293) : (term258 _146290 _146293 lt2 P G H' z) = (term259 _146290 _146293 lt2 z P G H').
Proof. exact (MK_COMB (@lem8357593 _146290 _146293) (@lem8357592 _146290 _146293 lt2 z P G H')). Qed.
Lemma lem8357595 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (H' : type796 _146290 _146293) : (term260 _146290 _146293 lt2 P G H') = (term261 _146290 _146293 lt2 P G H').
Proof. exact (fun_ext (fun z : type784 _146290 _146293 => @lem8357594 _146290 _146293 lt2 z P G H')). Qed.
Lemma lem8357596 {_146290 _146293 : Type'} : (@ex ((_146293 -> _146290) -> (_146293 -> _146290) -> _146293 -> _146293)) = (@ex ((_146293 -> _146290) -> (_146293 -> _146290) -> _146293 -> _146293)).
Proof. exact (eq_refl (@ex ((_146293 -> _146290) -> (_146293 -> _146290) -> _146293 -> _146293))). Qed.
Lemma lem8357597 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (H' : type796 _146290 _146293) : (term243 _146290 _146293 lt2 P G H') = (term262 _146290 _146293 lt2 P G H').
Proof. exact (MK_COMB (@lem8357596 _146290 _146293) (@lem8357595 _146290 _146293 lt2 P G H')). Qed.
Lemma lem8357598 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (H' : type796 _146290 _146293) : ((term242 _146290 _146293 lt2 P G H') = (term243 _146290 _146293 lt2 P G H')) = ((term239 _146290 _146293 lt2 P G H') = (term262 _146290 _146293 lt2 P G H')).
Proof. exact (MK_COMB (@lem8357586 _146290 _146293 lt2 P G H') (@lem8357597 _146290 _146293 lt2 P G H')). Qed.
Lemma lem8357599 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (H' : type796 _146290 _146293) : (term239 _146290 _146293 lt2 P G H') = (term262 _146290 _146293 lt2 P G H').
Proof. exact (EQ_MP (@lem8357598 _146290 _146293 lt2 P G H') (@lem8357573 _146290 _146293 lt2 P G H')). Qed.
Lemma lem8357601 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (H' : type796 _146290 _146293) : (term168 _146290 _146293 lt2 P G H') = (term262 _146290 _146293 lt2 P G H').
Proof. exact (TRANS (@lem8357569 _146290 _146293 lt2 P G H') (@lem8357599 _146290 _146293 lt2 P G H')). Qed.
Lemma lem8357602 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (H' : type796 _146290 _146293) : (term21 _146290 _146293 lt2 P G H') = (term262 _146290 _146293 lt2 P G H').
Proof. exact (TRANS (@lem8357369 _146290 _146293 lt2 P G H') (@lem8357601 _146290 _146293 lt2 P G H')). Qed.
Lemma lem8357603 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (H' : type796 _146290 _146293) (h1 : term21 _146290 _146293 lt2 P G H') : term262 _146290 _146293 lt2 P G H'.
Proof. exact (EQ_MP (@lem8357602 _146290 _146293 lt2 P G H') (@lem8357302 _146290 _146293 lt2 P G H' h1)). Qed.
Lemma lem8357610 {_146290 _146293 : Type'} (P : type799 _146290 _146293) (lt2 : type1402 _146293) (y : _146293) (G : type797 _146290 _146293) (f : _146293 -> _146290) (x : _146293) : (term263 _146290 _146293 P lt2 y G f x) = (term264 _146290 _146293 P lt2 y G f x).
Proof. exact (@lem17045 (P f x) (term265 _146290 _146293 lt2 y G f x)). Qed.
Lemma lem8357611 {_146293 : Type'} (lt2 : type1402 _146293) (y : _146293) (x : _146293) : (lt2 y x) = (lt2 y x).
Proof. exact (eq_refl (lt2 y x)). Qed.
Lemma lem8357612 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8357613 {_146290 _146293 : Type'} (P : type799 _146290 _146293) (lt2 : type1402 _146293) (y : _146293) (G : type797 _146290 _146293) (f : _146293 -> _146290) (x : _146293) : (term266 _146290 _146293 P lt2 y G f x) = (term267 _146290 _146293 P lt2 y G f x).
Proof. exact (MK_COMB (@lem8357612) (@lem8357610 _146290 _146293 P lt2 y G f x)). Qed.
Lemma lem8357614 {_146290 _146293 : Type'} (P : type799 _146290 _146293) (G : type797 _146290 _146293) (f : _146293 -> _146290) (lt2 : type1402 _146293) (y : _146293) (x : _146293) : (term268 _146290 _146293 P G f lt2 y x) = (term269 _146290 _146293 P G f lt2 y x).
Proof. exact (MK_COMB (@lem8357613 _146290 _146293 P lt2 y G f x) (@lem8357611 _146293 lt2 y x)). Qed.
Lemma lem8357615 {_146290 _146293 : Type'} (P : type799 _146290 _146293) (G : type797 _146290 _146293) (f : _146293 -> _146290) (lt2 : type1402 _146293) (y : _146293) (x : _146293) : (term79 _146290 _146293 P G f lt2 y x) = (term268 _146290 _146293 P G f lt2 y x).
Proof. exact (@lem17265 (term270 _146290 _146293 P lt2 y G f x) (lt2 y x)). Qed.
Lemma lem8357616 {_146290 _146293 : Type'} (P : type799 _146290 _146293) (G : type797 _146290 _146293) (f : _146293 -> _146290) (lt2 : type1402 _146293) (y : _146293) (x : _146293) : (term79 _146290 _146293 P G f lt2 y x) = (term269 _146290 _146293 P G f lt2 y x).
Proof. exact (TRANS (@lem8357615 _146290 _146293 P G f lt2 y x) (@lem8357614 _146290 _146293 P G f lt2 y x)). Qed.
Lemma lem8357617 {_146290 _146293 : Type'} (P : type799 _146290 _146293) (G : type797 _146290 _146293) (f : _146293 -> _146290) (lt2 : type1402 _146293) (x : _146293) : (term80 _146290 _146293 P G f lt2 x) = (term271 _146290 _146293 P G f lt2 x).
Proof. exact (fun_ext (fun y : _146293 => @lem8357616 _146290 _146293 P G f lt2 y x)). Qed.
Lemma lem8357618 {_146293 : Type'} : (@all _146293) = (@all _146293).
Proof. exact (eq_refl (@all _146293)). Qed.
Lemma lem8357619 {_146290 _146293 : Type'} (P : type799 _146290 _146293) (G : type797 _146290 _146293) (f : _146293 -> _146290) (lt2 : type1402 _146293) (x : _146293) : (term81 _146290 _146293 P G f lt2 x) = (term272 _146290 _146293 P G f lt2 x).
Proof. exact (MK_COMB (@lem8357618 _146293) (@lem8357617 _146290 _146293 P G f lt2 x)). Qed.
Lemma lem8357620 {_146290 _146293 : Type'} (P : type799 _146290 _146293) (G : type797 _146290 _146293) (f : _146293 -> _146290) (lt2 : type1402 _146293) : (term82 _146290 _146293 P G f lt2) = (term273 _146290 _146293 P G f lt2).
Proof. exact (fun_ext (fun x : _146293 => @lem8357619 _146290 _146293 P G f lt2 x)). Qed.
Lemma lem8357621 {_146293 : Type'} : (@all _146293) = (@all _146293).
Proof. exact (eq_refl (@all _146293)). Qed.
Lemma lem8357622 {_146290 _146293 : Type'} (P : type799 _146290 _146293) (G : type797 _146290 _146293) (f : _146293 -> _146290) (lt2 : type1402 _146293) : (term83 _146290 _146293 P G f lt2) = (term274 _146290 _146293 P G f lt2).
Proof. exact (MK_COMB (@lem8357621 _146293) (@lem8357620 _146290 _146293 P G f lt2)). Qed.
Lemma lem8357623 {_146290 _146293 : Type'} (P : type799 _146290 _146293) (G : type797 _146290 _146293) (lt2 : type1402 _146293) : (term84 _146290 _146293 P G lt2) = (term275 _146290 _146293 P G lt2).
Proof. exact (fun_ext (fun f : _146293 -> _146290 => @lem8357622 _146290 _146293 P G f lt2)). Qed.
Lemma lem8357624 {_146290 _146293 : Type'} : (@all (_146293 -> _146290)) = (@all (_146293 -> _146290)).
Proof. exact (eq_refl (@all (_146293 -> _146290))). Qed.
Lemma lem8357685 {_146290 _146293 : Type'} (P : type799 _146290 _146293) (G : type797 _146290 _146293) (lt2 : type1402 _146293) : (term23 _146290 _146293 P G lt2) = (term276 _146290 _146293 P G lt2).
Proof. exact (MK_COMB (@lem8357624 _146290 _146293) (@lem8357623 _146290 _146293 P G lt2)). Qed.
Lemma lem8357686 {_146290 _146293 : Type'} (P : type799 _146290 _146293) (G : type797 _146290 _146293) (lt2 : type1402 _146293) (h1 : term23 _146290 _146293 P G lt2) : term276 _146290 _146293 P G lt2.
Proof. exact (EQ_MP (@lem8357685 _146290 _146293 P G lt2) (@lem8357303 _146290 _146293 P G lt2 h1)). Qed.
Lemma lem8357979 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (x : _146293) (f : _146293 -> _146290) (g : _146293 -> _146290) (z : _146293) : (term85 _146290 _146293 lt2 x f g z) = (term277 _146290 _146293 lt2 x f g z).
Proof. exact (@lem17265 (lt2 z x) ((f z) = (g z))). Qed.
Lemma lem8357980 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (x : _146293) (f : _146293 -> _146290) (g : _146293 -> _146290) : (term86 _146290 _146293 lt2 x f g) = (term278 _146290 _146293 lt2 x f g).
Proof. exact (fun_ext (fun z : _146293 => @lem8357979 _146290 _146293 lt2 x f g z)). Qed.
Lemma lem8357981 {_146293 : Type'} : (@all _146293) = (@all _146293).
Proof. exact (eq_refl (@all _146293)). Qed.
Lemma lem8357982 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (x : _146293) (f : _146293 -> _146290) (g : _146293 -> _146290) : (term87 _146290 _146293 lt2 x f g) = (term279 _146290 _146293 lt2 x f g).
Proof. exact (MK_COMB (@lem8357981 _146293) (@lem8357980 _146290 _146293 lt2 x f g)). Qed.
Lemma lem8357997 {_146290 _146293 : Type'} (f : _146293 -> _146290) (P : type799 _146290 _146293) (g : _146293 -> _146290) (x : _146293) : (term280 _146290 _146293 f P g x) = (term281 _146290 _146293 f P g x).
Proof. exact (@lem17646 (P f x) (P g x)). Qed.
Lemma lem8358004 {_146290 _146293 : Type'} (G : type797 _146290 _146293) (f : _146293 -> _146290) (H' : type796 _146290 _146293) (g : _146293 -> _146290) (x : _146293) : (term282 _146290 _146293 G f H' g x) = (term283 _146290 _146293 G f H' g x).
Proof. exact (@lem17045 ((G f x) = (G g x)) ((H' f x) = (H' g x))). Qed.
Lemma lem8358005 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8358006 {_146290 _146293 : Type'} (f : _146293 -> _146290) (P : type799 _146290 _146293) (g : _146293 -> _146290) (x : _146293) : (term284 _146290 _146293 f P g x) = (term285 _146290 _146293 f P g x).
Proof. exact (MK_COMB (@lem8358005) (@lem8357997 _146290 _146293 f P g x)). Qed.
Lemma lem8358007 {_146290 _146293 : Type'} (P : type799 _146290 _146293) (G : type797 _146290 _146293) (f : _146293 -> _146290) (H' : type796 _146290 _146293) (g : _146293 -> _146290) (x : _146293) : (term286 _146290 _146293 P G f H' g x) = (term287 _146290 _146293 P G f H' g x).
Proof. exact (MK_COMB (@lem8358006 _146290 _146293 f P g x) (@lem8358004 _146290 _146293 G f H' g x)). Qed.
Lemma lem8358008 {_146290 _146293 : Type'} (P : type799 _146290 _146293) (G : type797 _146290 _146293) (f : _146293 -> _146290) (H' : type796 _146290 _146293) (g : _146293 -> _146290) (x : _146293) : (term288 _146290 _146293 P G f H' g x) = (term286 _146290 _146293 P G f H' g x).
Proof. exact (@lem17045 ((P f x) = (P g x)) (term155 _146290 _146293 G f H' g x)). Qed.
Lemma lem8358009 {_146290 _146293 : Type'} (P : type799 _146290 _146293) (G : type797 _146290 _146293) (f : _146293 -> _146290) (H' : type796 _146290 _146293) (g : _146293 -> _146290) (x : _146293) : (term288 _146290 _146293 P G f H' g x) = (term287 _146290 _146293 P G f H' g x).
Proof. exact (TRANS (@lem8358008 _146290 _146293 P G f H' g x) (@lem8358007 _146290 _146293 P G f H' g x)). Qed.
Lemma lem8358010 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8358011 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (x : _146293) (f : _146293 -> _146290) (g : _146293 -> _146290) : (term289 _146290 _146293 lt2 x f g) = (term290 _146290 _146293 lt2 x f g).
Proof. exact (MK_COMB (@lem8358010) (@lem8357982 _146290 _146293 lt2 x f g)). Qed.
Lemma lem8358012 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (f : _146293 -> _146290) (H' : type796 _146290 _146293) (g : _146293 -> _146290) (x : _146293) : (term291 _146290 _146293 lt2 P G f H' g x) = (term292 _146290 _146293 lt2 P G f H' g x).
Proof. exact (MK_COMB (@lem8358011 _146290 _146293 lt2 x f g) (@lem8358009 _146290 _146293 P G f H' g x)). Qed.
Lemma lem8358013 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (f : _146293 -> _146290) (H' : type796 _146290 _146293) (g : _146293 -> _146290) (x : _146293) : (term293 _146290 _146293 lt2 P G f H' g x) = (term291 _146290 _146293 lt2 P G f H' g x).
Proof. exact (@lem17362 (term87 _146290 _146293 lt2 x f g) (term98 _146290 _146293 P G f H' g x)). Qed.
Lemma lem8358014 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (f : _146293 -> _146290) (H' : type796 _146290 _146293) (g : _146293 -> _146290) (x : _146293) : (term293 _146290 _146293 lt2 P G f H' g x) = (term292 _146290 _146293 lt2 P G f H' g x).
Proof. exact (TRANS (@lem8358013 _146290 _146293 lt2 P G f H' g x) (@lem8358012 _146290 _146293 lt2 P G f H' g x)). Qed.
Lemma lem8358015 {_146293 : Type'} (P : _146293 -> Prop) : (term145 _146293 P) = (term146 _146293 P).
Proof. exact (@lem18392 _146293 P). Qed.
Lemma lem8358016 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (f : _146293 -> _146290) (H' : type796 _146290 _146293) (g : _146293 -> _146290) : (term294 _146290 _146293 lt2 P G f H' g) = (term295 _146290 _146293 lt2 P G f H' g).
Proof. exact (@lem8358015 _146293 (term100 _146290 _146293 lt2 P G f H' g)). Qed.
Lemma lem8358017 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (f : _146293 -> _146290) (H' : type796 _146290 _146293) (g : _146293 -> _146290) (x : _146293) : (term296 _146290 _146293 lt2 P G f H' g x) = (term99 _146290 _146293 lt2 P G f H' g x).
Proof. exact (eq_refl (term296 _146290 _146293 lt2 P G f H' g x)). Qed.
Lemma lem8358018 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem8358019 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (f : _146293 -> _146290) (H' : type796 _146290 _146293) (g : _146293 -> _146290) (x : _146293) : (term297 _146290 _146293 lt2 P G f H' g x) = (term293 _146290 _146293 lt2 P G f H' g x).
Proof. exact (MK_COMB (@lem8358018) (@lem8358017 _146290 _146293 lt2 P G f H' g x)). Qed.
Lemma lem8358020 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (f : _146293 -> _146290) (H' : type796 _146290 _146293) (g : _146293 -> _146290) (x : _146293) : (term297 _146290 _146293 lt2 P G f H' g x) = (term292 _146290 _146293 lt2 P G f H' g x).
Proof. exact (TRANS (@lem8358019 _146290 _146293 lt2 P G f H' g x) (@lem8358014 _146290 _146293 lt2 P G f H' g x)). Qed.
Lemma lem8358021 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (f : _146293 -> _146290) (H' : type796 _146290 _146293) (g : _146293 -> _146290) : (term298 _146290 _146293 lt2 P G f H' g) = (term299 _146290 _146293 lt2 P G f H' g).
Proof. exact (fun_ext (fun x : _146293 => @lem8358020 _146290 _146293 lt2 P G f H' g x)). Qed.
Lemma lem8358022 {_146293 : Type'} : (@ex _146293) = (@ex _146293).
Proof. exact (eq_refl (@ex _146293)). Qed.
Lemma lem8358023 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (f : _146293 -> _146290) (H' : type796 _146290 _146293) (g : _146293 -> _146290) : (term295 _146290 _146293 lt2 P G f H' g) = (term300 _146290 _146293 lt2 P G f H' g).
Proof. exact (MK_COMB (@lem8358022 _146293) (@lem8358021 _146290 _146293 lt2 P G f H' g)). Qed.
Lemma lem8358024 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (f : _146293 -> _146290) (H' : type796 _146290 _146293) (g : _146293 -> _146290) : (term294 _146290 _146293 lt2 P G f H' g) = (term300 _146290 _146293 lt2 P G f H' g).
Proof. exact (TRANS (@lem8358016 _146290 _146293 lt2 P G f H' g) (@lem8358023 _146290 _146293 lt2 P G f H' g)). Qed.
Lemma lem8358025 {_146290 _146293 : Type'} (P : type805 _146290 _146293) : (term301 _146290 _146293 P) = (term302 _146290 _146293 P).
Proof. exact (@lem18392 (_146293 -> _146290) P). Qed.
Lemma lem8358026 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (f : _146293 -> _146290) (H' : type796 _146290 _146293) : (term303 _146290 _146293 lt2 P G f H') = (term304 _146290 _146293 lt2 P G f H').
Proof. exact (@lem8358025 _146290 _146293 (term102 _146290 _146293 lt2 P G f H')). Qed.
Lemma lem8358027 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (f : _146293 -> _146290) (H' : type796 _146290 _146293) (g : _146293 -> _146290) : (term305 _146290 _146293 lt2 P G f H' g) = (term101 _146290 _146293 lt2 P G f H' g).
Proof. exact (eq_refl (term305 _146290 _146293 lt2 P G f H' g)). Qed.
Lemma lem8358028 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem8358029 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (f : _146293 -> _146290) (H' : type796 _146290 _146293) (g : _146293 -> _146290) : (term306 _146290 _146293 lt2 P G f H' g) = (term294 _146290 _146293 lt2 P G f H' g).
Proof. exact (MK_COMB (@lem8358028) (@lem8358027 _146290 _146293 lt2 P G f H' g)). Qed.
Lemma lem8358030 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (f : _146293 -> _146290) (H' : type796 _146290 _146293) (g : _146293 -> _146290) : (term306 _146290 _146293 lt2 P G f H' g) = (term300 _146290 _146293 lt2 P G f H' g).
Proof. exact (TRANS (@lem8358029 _146290 _146293 lt2 P G f H' g) (@lem8358024 _146290 _146293 lt2 P G f H' g)). Qed.
Lemma lem8358031 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (f : _146293 -> _146290) (H' : type796 _146290 _146293) : (term307 _146290 _146293 lt2 P G f H') = (term308 _146290 _146293 lt2 P G f H').
Proof. exact (fun_ext (fun g : _146293 -> _146290 => @lem8358030 _146290 _146293 lt2 P G f H' g)). Qed.
Lemma lem8358032 {_146290 _146293 : Type'} : (@ex (_146293 -> _146290)) = (@ex (_146293 -> _146290)).
Proof. exact (eq_refl (@ex (_146293 -> _146290))). Qed.
Lemma lem8358033 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (f : _146293 -> _146290) (H' : type796 _146290 _146293) : (term304 _146290 _146293 lt2 P G f H') = (term309 _146290 _146293 lt2 P G f H').
Proof. exact (MK_COMB (@lem8358032 _146290 _146293) (@lem8358031 _146290 _146293 lt2 P G f H')). Qed.
Lemma lem8358034 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (f : _146293 -> _146290) (H' : type796 _146290 _146293) : (term303 _146290 _146293 lt2 P G f H') = (term309 _146290 _146293 lt2 P G f H').
Proof. exact (TRANS (@lem8358026 _146290 _146293 lt2 P G f H') (@lem8358033 _146290 _146293 lt2 P G f H')). Qed.
Lemma lem8358035 {_146290 _146293 : Type'} (P : type805 _146290 _146293) : (term301 _146290 _146293 P) = (term302 _146290 _146293 P).
Proof. exact (@lem18392 (_146293 -> _146290) P). Qed.
Lemma lem8358036 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (H' : type796 _146290 _146293) : (term310 _146290 _146293 lt2 P G H') = (term311 _146290 _146293 lt2 P G H').
Proof. exact (@lem8358035 _146290 _146293 (term104 _146290 _146293 lt2 P G H')). Qed.
Lemma lem8358037 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (f : _146293 -> _146290) (H' : type796 _146290 _146293) : (term312 _146290 _146293 lt2 P G H' f) = (term103 _146290 _146293 lt2 P G f H').
Proof. exact (eq_refl (term312 _146290 _146293 lt2 P G H' f)). Qed.
Lemma lem8358038 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem8358039 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (f : _146293 -> _146290) (H' : type796 _146290 _146293) : (term313 _146290 _146293 lt2 P G H' f) = (term303 _146290 _146293 lt2 P G f H').
Proof. exact (MK_COMB (@lem8358038) (@lem8358037 _146290 _146293 lt2 P G f H')). Qed.
Lemma lem8358040 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (f : _146293 -> _146290) (H' : type796 _146290 _146293) : (term313 _146290 _146293 lt2 P G H' f) = (term309 _146290 _146293 lt2 P G f H').
Proof. exact (TRANS (@lem8358039 _146290 _146293 lt2 P G f H') (@lem8358034 _146290 _146293 lt2 P G f H')). Qed.
Lemma lem8358041 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (H' : type796 _146290 _146293) : (term314 _146290 _146293 lt2 P G H') = (term315 _146290 _146293 lt2 P G H').
Proof. exact (fun_ext (fun f : _146293 -> _146290 => @lem8358040 _146290 _146293 lt2 P G f H')). Qed.
Lemma lem8358042 {_146290 _146293 : Type'} : (@ex (_146293 -> _146290)) = (@ex (_146293 -> _146290)).
Proof. exact (eq_refl (@ex (_146293 -> _146290))). Qed.
Lemma lem8358043 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (H' : type796 _146290 _146293) : (term311 _146290 _146293 lt2 P G H') = (term316 _146290 _146293 lt2 P G H').
Proof. exact (MK_COMB (@lem8358042 _146290 _146293) (@lem8358041 _146290 _146293 lt2 P G H')). Qed.
Lemma lem8358044 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (H' : type796 _146290 _146293) : (term310 _146290 _146293 lt2 P G H') = (term316 _146290 _146293 lt2 P G H').
Proof. exact (TRANS (@lem8358036 _146290 _146293 lt2 P G H') (@lem8358043 _146290 _146293 lt2 P G H')). Qed.
Lemma lem8358051 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (x : _146293) (f : _146293 -> _146290) (g : _146293 -> _146290) (z : _146293) : (term85 _146290 _146293 lt2 x f g z) = (term277 _146290 _146293 lt2 x f g z).
Proof. exact (@lem17265 (lt2 z x) ((f z) = (g z))). Qed.
Lemma lem8358052 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (x : _146293) (f : _146293 -> _146290) (g : _146293 -> _146290) : (term86 _146290 _146293 lt2 x f g) = (term278 _146290 _146293 lt2 x f g).
Proof. exact (fun_ext (fun z : _146293 => @lem8358051 _146290 _146293 lt2 x f g z)). Qed.
Lemma lem8358053 {_146293 : Type'} : (@all _146293) = (@all _146293).
Proof. exact (eq_refl (@all _146293)). Qed.
Lemma lem8358054 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (x : _146293) (f : _146293 -> _146290) (g : _146293 -> _146290) : (term87 _146290 _146293 lt2 x f g) = (term279 _146290 _146293 lt2 x f g).
Proof. exact (MK_COMB (@lem8358053 _146293) (@lem8358052 _146290 _146293 lt2 x f g)). Qed.
Lemma lem8358055 {_146290 _146293 : Type'} (f : _146293 -> _146290) (H' : type796 _146290 _146293) (g : _146293 -> _146290) (x : _146293) : (term317 _146290 _146293 f H' g x) = (term317 _146290 _146293 f H' g x).
Proof. exact (eq_refl (term317 _146290 _146293 f H' g x)). Qed.
Lemma lem8358056 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8358057 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (x : _146293) (f : _146293 -> _146290) (g : _146293 -> _146290) : (term289 _146290 _146293 lt2 x f g) = (term290 _146290 _146293 lt2 x f g).
Proof. exact (MK_COMB (@lem8358056) (@lem8358054 _146290 _146293 lt2 x f g)). Qed.
Lemma lem8358058 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (f : _146293 -> _146290) (H' : type796 _146290 _146293) (g : _146293 -> _146290) (x : _146293) : (term318 _146290 _146293 lt2 f H' g x) = (term319 _146290 _146293 lt2 f H' g x).
Proof. exact (MK_COMB (@lem8358057 _146290 _146293 lt2 x f g) (@lem8358055 _146290 _146293 f H' g x)). Qed.
Lemma lem8358059 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (f : _146293 -> _146290) (H' : type796 _146290 _146293) (g : _146293 -> _146290) (x : _146293) : (term320 _146290 _146293 lt2 f H' g x) = (term318 _146290 _146293 lt2 f H' g x).
Proof. exact (@lem17362 (term87 _146290 _146293 lt2 x f g) ((H' f x) = (H' g x))). Qed.
Lemma lem8358060 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (f : _146293 -> _146290) (H' : type796 _146290 _146293) (g : _146293 -> _146290) (x : _146293) : (term320 _146290 _146293 lt2 f H' g x) = (term319 _146290 _146293 lt2 f H' g x).
Proof. exact (TRANS (@lem8358059 _146290 _146293 lt2 f H' g x) (@lem8358058 _146290 _146293 lt2 f H' g x)). Qed.
Lemma lem8358061 {_146293 : Type'} (P : _146293 -> Prop) : (term145 _146293 P) = (term146 _146293 P).
Proof. exact (@lem18392 _146293 P). Qed.
Lemma lem8358062 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (f : _146293 -> _146290) (H' : type796 _146290 _146293) (g : _146293 -> _146290) : (term321 _146290 _146293 lt2 f H' g) = (term322 _146290 _146293 lt2 f H' g).
Proof. exact (@lem8358061 _146293 (term90 _146290 _146293 lt2 f H' g)). Qed.
Lemma lem8358063 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (f : _146293 -> _146290) (H' : type796 _146290 _146293) (g : _146293 -> _146290) (x : _146293) : (term323 _146290 _146293 lt2 f H' g x) = (term89 _146290 _146293 lt2 f H' g x).
Proof. exact (eq_refl (term323 _146290 _146293 lt2 f H' g x)). Qed.
Lemma lem8358064 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem8358065 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (f : _146293 -> _146290) (H' : type796 _146290 _146293) (g : _146293 -> _146290) (x : _146293) : (term324 _146290 _146293 lt2 f H' g x) = (term320 _146290 _146293 lt2 f H' g x).
Proof. exact (MK_COMB (@lem8358064) (@lem8358063 _146290 _146293 lt2 f H' g x)). Qed.
Lemma lem8358066 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (f : _146293 -> _146290) (H' : type796 _146290 _146293) (g : _146293 -> _146290) (x : _146293) : (term324 _146290 _146293 lt2 f H' g x) = (term319 _146290 _146293 lt2 f H' g x).
Proof. exact (TRANS (@lem8358065 _146290 _146293 lt2 f H' g x) (@lem8358060 _146290 _146293 lt2 f H' g x)). Qed.
Lemma lem8358067 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (f : _146293 -> _146290) (H' : type796 _146290 _146293) (g : _146293 -> _146290) : (term325 _146290 _146293 lt2 f H' g) = (term326 _146290 _146293 lt2 f H' g).
Proof. exact (fun_ext (fun x : _146293 => @lem8358066 _146290 _146293 lt2 f H' g x)). Qed.
Lemma lem8358068 {_146293 : Type'} : (@ex _146293) = (@ex _146293).
Proof. exact (eq_refl (@ex _146293)). Qed.
Lemma lem8358069 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (f : _146293 -> _146290) (H' : type796 _146290 _146293) (g : _146293 -> _146290) : (term322 _146290 _146293 lt2 f H' g) = (term327 _146290 _146293 lt2 f H' g).
Proof. exact (MK_COMB (@lem8358068 _146293) (@lem8358067 _146290 _146293 lt2 f H' g)). Qed.
Lemma lem8358070 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (f : _146293 -> _146290) (H' : type796 _146290 _146293) (g : _146293 -> _146290) : (term321 _146290 _146293 lt2 f H' g) = (term327 _146290 _146293 lt2 f H' g).
Proof. exact (TRANS (@lem8358062 _146290 _146293 lt2 f H' g) (@lem8358069 _146290 _146293 lt2 f H' g)). Qed.
Lemma lem8358071 {_146290 _146293 : Type'} (P : type805 _146290 _146293) : (term301 _146290 _146293 P) = (term302 _146290 _146293 P).
Proof. exact (@lem18392 (_146293 -> _146290) P). Qed.
Lemma lem8358072 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (f : _146293 -> _146290) (H' : type796 _146290 _146293) : (term328 _146290 _146293 lt2 f H') = (term329 _146290 _146293 lt2 f H').
Proof. exact (@lem8358071 _146290 _146293 (term92 _146290 _146293 lt2 f H')). Qed.
Lemma lem8358073 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (f : _146293 -> _146290) (H' : type796 _146290 _146293) (g : _146293 -> _146290) : (term330 _146290 _146293 lt2 f H' g) = (term91 _146290 _146293 lt2 f H' g).
Proof. exact (eq_refl (term330 _146290 _146293 lt2 f H' g)). Qed.
Lemma lem8358074 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem8358075 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (f : _146293 -> _146290) (H' : type796 _146290 _146293) (g : _146293 -> _146290) : (term331 _146290 _146293 lt2 f H' g) = (term321 _146290 _146293 lt2 f H' g).
Proof. exact (MK_COMB (@lem8358074) (@lem8358073 _146290 _146293 lt2 f H' g)). Qed.
Lemma lem8358076 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (f : _146293 -> _146290) (H' : type796 _146290 _146293) (g : _146293 -> _146290) : (term331 _146290 _146293 lt2 f H' g) = (term327 _146290 _146293 lt2 f H' g).
Proof. exact (TRANS (@lem8358075 _146290 _146293 lt2 f H' g) (@lem8358070 _146290 _146293 lt2 f H' g)). Qed.
Lemma lem8358077 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (f : _146293 -> _146290) (H' : type796 _146290 _146293) : (term332 _146290 _146293 lt2 f H') = (term333 _146290 _146293 lt2 f H').
Proof. exact (fun_ext (fun g : _146293 -> _146290 => @lem8358076 _146290 _146293 lt2 f H' g)). Qed.
Lemma lem8358078 {_146290 _146293 : Type'} : (@ex (_146293 -> _146290)) = (@ex (_146293 -> _146290)).
Proof. exact (eq_refl (@ex (_146293 -> _146290))). Qed.
Lemma lem8358079 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (f : _146293 -> _146290) (H' : type796 _146290 _146293) : (term329 _146290 _146293 lt2 f H') = (term334 _146290 _146293 lt2 f H').
Proof. exact (MK_COMB (@lem8358078 _146290 _146293) (@lem8358077 _146290 _146293 lt2 f H')). Qed.
Lemma lem8358080 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (f : _146293 -> _146290) (H' : type796 _146290 _146293) : (term328 _146290 _146293 lt2 f H') = (term334 _146290 _146293 lt2 f H').
Proof. exact (TRANS (@lem8358072 _146290 _146293 lt2 f H') (@lem8358079 _146290 _146293 lt2 f H')). Qed.
Lemma lem8358081 {_146290 _146293 : Type'} (P : type805 _146290 _146293) : (term301 _146290 _146293 P) = (term302 _146290 _146293 P).
Proof. exact (@lem18392 (_146293 -> _146290) P). Qed.
Lemma lem8358082 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (H' : type796 _146290 _146293) : (term335 _146290 _146293 lt2 H') = (term336 _146290 _146293 lt2 H').
Proof. exact (@lem8358081 _146290 _146293 (term94 _146290 _146293 lt2 H')). Qed.
Lemma lem8358083 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (f : _146293 -> _146290) (H' : type796 _146290 _146293) : (term337 _146290 _146293 lt2 H' f) = (term93 _146290 _146293 lt2 f H').
Proof. exact (eq_refl (term337 _146290 _146293 lt2 H' f)). Qed.
Lemma lem8358084 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem8358085 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (f : _146293 -> _146290) (H' : type796 _146290 _146293) : (term338 _146290 _146293 lt2 H' f) = (term328 _146290 _146293 lt2 f H').
Proof. exact (MK_COMB (@lem8358084) (@lem8358083 _146290 _146293 lt2 f H')). Qed.
Lemma lem8358086 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (f : _146293 -> _146290) (H' : type796 _146290 _146293) : (term338 _146290 _146293 lt2 H' f) = (term334 _146290 _146293 lt2 f H').
Proof. exact (TRANS (@lem8358085 _146290 _146293 lt2 f H') (@lem8358080 _146290 _146293 lt2 f H')). Qed.
Lemma lem8358087 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (H' : type796 _146290 _146293) : (term339 _146290 _146293 lt2 H') = (term340 _146290 _146293 lt2 H').
Proof. exact (fun_ext (fun f : _146293 -> _146290 => @lem8358086 _146290 _146293 lt2 f H')). Qed.
Lemma lem8358088 {_146290 _146293 : Type'} : (@ex (_146293 -> _146290)) = (@ex (_146293 -> _146290)).
Proof. exact (eq_refl (@ex (_146293 -> _146290))). Qed.
Lemma lem8358089 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (H' : type796 _146290 _146293) : (term336 _146290 _146293 lt2 H') = (term341 _146290 _146293 lt2 H').
Proof. exact (MK_COMB (@lem8358088 _146290 _146293) (@lem8358087 _146290 _146293 lt2 H')). Qed.
Lemma lem8358090 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (H' : type796 _146290 _146293) : (term335 _146290 _146293 lt2 H') = (term341 _146290 _146293 lt2 H').
Proof. exact (TRANS (@lem8358082 _146290 _146293 lt2 H') (@lem8358089 _146290 _146293 lt2 H')). Qed.
Lemma lem8358101 {_146290 _146293 : Type'} (P : type799 _146290 _146293) (G : type797 _146290 _146293) (f : _146293 -> _146290) (lt2 : type1402 _146293) (y : _146293) (x : _146293) : (term342 _146290 _146293 P G f lt2 y x) = (term343 _146290 _146293 P G f lt2 y x).
Proof. exact (@lem17362 (term270 _146290 _146293 P lt2 y G f x) (lt2 y x)). Qed.
Lemma lem8358102 {_146293 : Type'} (P : _146293 -> Prop) : (term145 _146293 P) = (term146 _146293 P).
Proof. exact (@lem18392 _146293 P). Qed.
Lemma lem8358103 {_146290 _146293 : Type'} (P : type799 _146290 _146293) (G : type797 _146290 _146293) (f : _146293 -> _146290) (lt2 : type1402 _146293) (x : _146293) : (term344 _146290 _146293 P G f lt2 x) = (term345 _146290 _146293 P G f lt2 x).
Proof. exact (@lem8358102 _146293 (term80 _146290 _146293 P G f lt2 x)). Qed.
Lemma lem8358104 {_146290 _146293 : Type'} (P : type799 _146290 _146293) (G : type797 _146290 _146293) (f : _146293 -> _146290) (lt2 : type1402 _146293) (y : _146293) (x : _146293) : (term346 _146290 _146293 P G f lt2 x y) = (term79 _146290 _146293 P G f lt2 y x).
Proof. exact (eq_refl (term346 _146290 _146293 P G f lt2 x y)). Qed.
Lemma lem8358105 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem8358106 {_146290 _146293 : Type'} (P : type799 _146290 _146293) (G : type797 _146290 _146293) (f : _146293 -> _146290) (lt2 : type1402 _146293) (y : _146293) (x : _146293) : (term347 _146290 _146293 P G f lt2 x y) = (term342 _146290 _146293 P G f lt2 y x).
Proof. exact (MK_COMB (@lem8358105) (@lem8358104 _146290 _146293 P G f lt2 y x)). Qed.
Lemma lem8358107 {_146290 _146293 : Type'} (P : type799 _146290 _146293) (G : type797 _146290 _146293) (f : _146293 -> _146290) (lt2 : type1402 _146293) (y : _146293) (x : _146293) : (term347 _146290 _146293 P G f lt2 x y) = (term343 _146290 _146293 P G f lt2 y x).
Proof. exact (TRANS (@lem8358106 _146290 _146293 P G f lt2 y x) (@lem8358101 _146290 _146293 P G f lt2 y x)). Qed.
Lemma lem8358108 {_146290 _146293 : Type'} (P : type799 _146290 _146293) (G : type797 _146290 _146293) (f : _146293 -> _146290) (lt2 : type1402 _146293) (x : _146293) : (term348 _146290 _146293 P G f lt2 x) = (term349 _146290 _146293 P G f lt2 x).
Proof. exact (fun_ext (fun y : _146293 => @lem8358107 _146290 _146293 P G f lt2 y x)). Qed.
Lemma lem8358109 {_146293 : Type'} : (@ex _146293) = (@ex _146293).
Proof. exact (eq_refl (@ex _146293)). Qed.
Lemma lem8358110 {_146290 _146293 : Type'} (P : type799 _146290 _146293) (G : type797 _146290 _146293) (f : _146293 -> _146290) (lt2 : type1402 _146293) (x : _146293) : (term345 _146290 _146293 P G f lt2 x) = (term350 _146290 _146293 P G f lt2 x).
Proof. exact (MK_COMB (@lem8358109 _146293) (@lem8358108 _146290 _146293 P G f lt2 x)). Qed.
Lemma lem8358111 {_146290 _146293 : Type'} (P : type799 _146290 _146293) (G : type797 _146290 _146293) (f : _146293 -> _146290) (lt2 : type1402 _146293) (x : _146293) : (term344 _146290 _146293 P G f lt2 x) = (term350 _146290 _146293 P G f lt2 x).
Proof. exact (TRANS (@lem8358103 _146290 _146293 P G f lt2 x) (@lem8358110 _146290 _146293 P G f lt2 x)). Qed.
Lemma lem8358112 {_146293 : Type'} (P : _146293 -> Prop) : (term145 _146293 P) = (term146 _146293 P).
Proof. exact (@lem18392 _146293 P). Qed.
Lemma lem8358113 {_146290 _146293 : Type'} (P : type799 _146290 _146293) (G : type797 _146290 _146293) (f : _146293 -> _146290) (lt2 : type1402 _146293) : (term351 _146290 _146293 P G f lt2) = (term352 _146290 _146293 P G f lt2).
Proof. exact (@lem8358112 _146293 (term82 _146290 _146293 P G f lt2)). Qed.
Lemma lem8358114 {_146290 _146293 : Type'} (P : type799 _146290 _146293) (G : type797 _146290 _146293) (f : _146293 -> _146290) (lt2 : type1402 _146293) (x : _146293) : (term353 _146290 _146293 P G f lt2 x) = (term81 _146290 _146293 P G f lt2 x).
Proof. exact (eq_refl (term353 _146290 _146293 P G f lt2 x)). Qed.
Lemma lem8358115 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem8358116 {_146290 _146293 : Type'} (P : type799 _146290 _146293) (G : type797 _146290 _146293) (f : _146293 -> _146290) (lt2 : type1402 _146293) (x : _146293) : (term354 _146290 _146293 P G f lt2 x) = (term344 _146290 _146293 P G f lt2 x).
Proof. exact (MK_COMB (@lem8358115) (@lem8358114 _146290 _146293 P G f lt2 x)). Qed.
Lemma lem8358117 {_146290 _146293 : Type'} (P : type799 _146290 _146293) (G : type797 _146290 _146293) (f : _146293 -> _146290) (lt2 : type1402 _146293) (x : _146293) : (term354 _146290 _146293 P G f lt2 x) = (term350 _146290 _146293 P G f lt2 x).
Proof. exact (TRANS (@lem8358116 _146290 _146293 P G f lt2 x) (@lem8358111 _146290 _146293 P G f lt2 x)). Qed.
Lemma lem8358118 {_146290 _146293 : Type'} (P : type799 _146290 _146293) (G : type797 _146290 _146293) (f : _146293 -> _146290) (lt2 : type1402 _146293) : (term355 _146290 _146293 P G f lt2) = (term356 _146290 _146293 P G f lt2).
Proof. exact (fun_ext (fun x : _146293 => @lem8358117 _146290 _146293 P G f lt2 x)). Qed.
Lemma lem8358119 {_146293 : Type'} : (@ex _146293) = (@ex _146293).
Proof. exact (eq_refl (@ex _146293)). Qed.
Lemma lem8358120 {_146290 _146293 : Type'} (P : type799 _146290 _146293) (G : type797 _146290 _146293) (f : _146293 -> _146290) (lt2 : type1402 _146293) : (term352 _146290 _146293 P G f lt2) = (term357 _146290 _146293 P G f lt2).
Proof. exact (MK_COMB (@lem8358119 _146293) (@lem8358118 _146290 _146293 P G f lt2)). Qed.
Lemma lem8358121 {_146290 _146293 : Type'} (P : type799 _146290 _146293) (G : type797 _146290 _146293) (f : _146293 -> _146290) (lt2 : type1402 _146293) : (term351 _146290 _146293 P G f lt2) = (term357 _146290 _146293 P G f lt2).
Proof. exact (TRANS (@lem8358113 _146290 _146293 P G f lt2) (@lem8358120 _146290 _146293 P G f lt2)). Qed.
Lemma lem8358122 {_146290 _146293 : Type'} (P : type805 _146290 _146293) : (term301 _146290 _146293 P) = (term302 _146290 _146293 P).
Proof. exact (@lem18392 (_146293 -> _146290) P). Qed.
Lemma lem8358123 {_146290 _146293 : Type'} (P : type799 _146290 _146293) (G : type797 _146290 _146293) (lt2 : type1402 _146293) : (term358 _146290 _146293 P G lt2) = (term359 _146290 _146293 P G lt2).
Proof. exact (@lem8358122 _146290 _146293 (term84 _146290 _146293 P G lt2)). Qed.
Lemma lem8358124 {_146290 _146293 : Type'} (P : type799 _146290 _146293) (G : type797 _146290 _146293) (f : _146293 -> _146290) (lt2 : type1402 _146293) : (term360 _146290 _146293 P G lt2 f) = (term83 _146290 _146293 P G f lt2).
Proof. exact (eq_refl (term360 _146290 _146293 P G lt2 f)). Qed.
Lemma lem8358125 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem8358126 {_146290 _146293 : Type'} (P : type799 _146290 _146293) (G : type797 _146290 _146293) (f : _146293 -> _146290) (lt2 : type1402 _146293) : (term361 _146290 _146293 P G lt2 f) = (term351 _146290 _146293 P G f lt2).
Proof. exact (MK_COMB (@lem8358125) (@lem8358124 _146290 _146293 P G f lt2)). Qed.
Lemma lem8358127 {_146290 _146293 : Type'} (P : type799 _146290 _146293) (G : type797 _146290 _146293) (f : _146293 -> _146290) (lt2 : type1402 _146293) : (term361 _146290 _146293 P G lt2 f) = (term357 _146290 _146293 P G f lt2).
Proof. exact (TRANS (@lem8358126 _146290 _146293 P G f lt2) (@lem8358121 _146290 _146293 P G f lt2)). Qed.
Lemma lem8358128 {_146290 _146293 : Type'} (P : type799 _146290 _146293) (G : type797 _146290 _146293) (lt2 : type1402 _146293) : (term362 _146290 _146293 P G lt2) = (term363 _146290 _146293 P G lt2).
Proof. exact (fun_ext (fun f : _146293 -> _146290 => @lem8358127 _146290 _146293 P G f lt2)). Qed.
Lemma lem8358129 {_146290 _146293 : Type'} : (@ex (_146293 -> _146290)) = (@ex (_146293 -> _146290)).
Proof. exact (eq_refl (@ex (_146293 -> _146290))). Qed.
Lemma lem8358130 {_146290 _146293 : Type'} (P : type799 _146290 _146293) (G : type797 _146290 _146293) (lt2 : type1402 _146293) : (term359 _146290 _146293 P G lt2) = (term364 _146290 _146293 P G lt2).
Proof. exact (MK_COMB (@lem8358129 _146290 _146293) (@lem8358128 _146290 _146293 P G lt2)). Qed.
Lemma lem8358131 {_146290 _146293 : Type'} (P : type799 _146290 _146293) (G : type797 _146290 _146293) (lt2 : type1402 _146293) : (term358 _146290 _146293 P G lt2) = (term364 _146290 _146293 P G lt2).
Proof. exact (TRANS (@lem8358123 _146290 _146293 P G lt2) (@lem8358130 _146290 _146293 P G lt2)). Qed.
Lemma lem8358132 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8358133 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (H' : type796 _146290 _146293) : (term365 _146290 _146293 lt2 H') = (term366 _146290 _146293 lt2 H').
Proof. exact (MK_COMB (@lem8358132) (@lem8358090 _146290 _146293 lt2 H')). Qed.
Lemma lem8358134 {_146290 _146293 : Type'} (H' : type796 _146290 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (lt2 : type1402 _146293) : (term367 _146290 _146293 H' P G lt2) = (term368 _146290 _146293 H' P G lt2).
Proof. exact (MK_COMB (@lem8358133 _146290 _146293 lt2 H') (@lem8358131 _146290 _146293 P G lt2)). Qed.
Lemma lem8358135 {_146290 _146293 : Type'} (H' : type796 _146290 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (lt2 : type1402 _146293) : (term369 _146290 _146293 H' P G lt2) = (term367 _146290 _146293 H' P G lt2).
Proof. exact (@lem17045 (term95 _146290 _146293 lt2 H') (term23 _146290 _146293 P G lt2)). Qed.
Lemma lem8358136 {_146290 _146293 : Type'} (H' : type796 _146290 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (lt2 : type1402 _146293) : (term369 _146290 _146293 H' P G lt2) = (term368 _146290 _146293 H' P G lt2).
Proof. exact (TRANS (@lem8358135 _146290 _146293 H' P G lt2) (@lem8358134 _146290 _146293 H' P G lt2)). Qed.
Lemma lem8358137 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8358138 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (H' : type796 _146290 _146293) : (term370 _146290 _146293 lt2 P G H') = (term371 _146290 _146293 lt2 P G H').
Proof. exact (MK_COMB (@lem8358137) (@lem8358044 _146290 _146293 lt2 P G H')). Qed.
Lemma lem8358139 {_146290 _146293 : Type'} (H' : type796 _146290 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (lt2 : type1402 _146293) : (term372 _146290 _146293 H' P G lt2) = (term373 _146290 _146293 H' P G lt2).
Proof. exact (MK_COMB (@lem8358138 _146290 _146293 lt2 P G H') (@lem8358136 _146290 _146293 H' P G lt2)). Qed.
Lemma lem8358140 {_146290 _146293 : Type'} (H' : type796 _146290 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (lt2 : type1402 _146293) : (term374 _146290 _146293 H' P G lt2) = (term372 _146290 _146293 H' P G lt2).
Proof. exact (@lem17045 (term21 _146290 _146293 lt2 P G H') (term97 _146290 _146293 H' P G lt2)). Qed.
Lemma lem8358141 {_146290 _146293 : Type'} (H' : type796 _146290 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (lt2 : type1402 _146293) : (term374 _146290 _146293 H' P G lt2) = (term373 _146290 _146293 H' P G lt2).
Proof. exact (TRANS (@lem8358140 _146290 _146293 H' P G lt2) (@lem8358139 _146290 _146293 H' P G lt2)). Qed.
Lemma lem8358143 {_146293 : Type'} (lt2 : type1402 _146293) : (term375 _146293 lt2) = (term375 _146293 lt2).
Proof. exact (eq_refl (term375 _146293 lt2)). Qed.
Lemma lem8358144 {_146290 _146293 : Type'} (H' : type796 _146290 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (lt2 : type1402 _146293) : (term376 _146290 _146293 H' P G lt2) = (term377 _146290 _146293 H' P G lt2).
Proof. exact (MK_COMB (@lem8358143 _146293 lt2) (@lem8358141 _146290 _146293 H' P G lt2)). Qed.
Lemma lem8358145 {_146290 _146293 : Type'} (H' : type796 _146290 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (lt2 : type1402 _146293) : (term41 _146290 _146293 H' P G lt2) = (term376 _146290 _146293 H' P G lt2).
Proof. exact (@lem17045 (@WF _146293 lt2) (term106 _146290 _146293 H' P G lt2)). Qed.
Lemma lem8358146 {_146290 _146293 : Type'} (H' : type796 _146290 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (lt2 : type1402 _146293) : (term41 _146290 _146293 H' P G lt2) = (term377 _146290 _146293 H' P G lt2).
Proof. exact (TRANS (@lem8358145 _146290 _146293 H' P G lt2) (@lem8358144 _146290 _146293 H' P G lt2)). Qed.
Lemma lem8358413 {A : Type'} (P : A -> Prop) (Q : A -> Prop) : (term378 A P Q) = (term379 A P Q).
Proof. exact (EQ_MP (@lem18917 A P Q) (@lem18916 A P Q)). Qed.
Lemma lem8358414 {_146290 _146293 : Type'} (P : type805 _146290 _146293) (Q : type805 _146290 _146293) : (term380 _146290 _146293 P Q) = (term381 _146290 _146293 P Q).
Proof. exact (@lem8358413 (_146293 -> _146290) P Q). Qed.
Lemma lem8358415 {_146290 _146293 : Type'} (H' : type796 _146290 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (lt2 : type1402 _146293) : (term382 _146290 _146293 H' P G lt2) = (term383 _146290 _146293 H' P G lt2).
Proof. exact (@lem8358414 _146290 _146293 (term340 _146290 _146293 lt2 H') (term363 _146290 _146293 P G lt2)). Qed.
Lemma lem8358416 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (f : _146293 -> _146290) (H' : type796 _146290 _146293) : (term384 _146290 _146293 lt2 H' f) = (term334 _146290 _146293 lt2 f H').
Proof. exact (eq_refl (term384 _146290 _146293 lt2 H' f)). Qed.
Lemma lem8358417 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (H' : type796 _146290 _146293) : (term385 _146290 _146293 lt2 H') = (term340 _146290 _146293 lt2 H').
Proof. exact (fun_ext (fun f : _146293 -> _146290 => @lem8358416 _146290 _146293 lt2 f H')). Qed.
Lemma lem8358418 {_146290 _146293 : Type'} : (@ex (_146293 -> _146290)) = (@ex (_146293 -> _146290)).
Proof. exact (eq_refl (@ex (_146293 -> _146290))). Qed.
Lemma lem8358419 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (H' : type796 _146290 _146293) : (term386 _146290 _146293 lt2 H') = (term341 _146290 _146293 lt2 H').
Proof. exact (MK_COMB (@lem8358418 _146290 _146293) (@lem8358417 _146290 _146293 lt2 H')). Qed.
Lemma lem8358420 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8358421 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (H' : type796 _146290 _146293) : (term387 _146290 _146293 lt2 H') = (term366 _146290 _146293 lt2 H').
Proof. exact (MK_COMB (@lem8358420) (@lem8358419 _146290 _146293 lt2 H')). Qed.
Lemma lem8358422 {_146290 _146293 : Type'} (P : type799 _146290 _146293) (G : type797 _146290 _146293) (f : _146293 -> _146290) (lt2 : type1402 _146293) : (term388 _146290 _146293 P G lt2 f) = (term357 _146290 _146293 P G f lt2).
Proof. exact (eq_refl (term388 _146290 _146293 P G lt2 f)). Qed.
Lemma lem8358423 {_146290 _146293 : Type'} (P : type799 _146290 _146293) (G : type797 _146290 _146293) (lt2 : type1402 _146293) : (term389 _146290 _146293 P G lt2) = (term363 _146290 _146293 P G lt2).
Proof. exact (fun_ext (fun f : _146293 -> _146290 => @lem8358422 _146290 _146293 P G f lt2)). Qed.
Lemma lem8358424 {_146290 _146293 : Type'} : (@ex (_146293 -> _146290)) = (@ex (_146293 -> _146290)).
Proof. exact (eq_refl (@ex (_146293 -> _146290))). Qed.
Lemma lem8358425 {_146290 _146293 : Type'} (P : type799 _146290 _146293) (G : type797 _146290 _146293) (lt2 : type1402 _146293) : (term390 _146290 _146293 P G lt2) = (term364 _146290 _146293 P G lt2).
Proof. exact (MK_COMB (@lem8358424 _146290 _146293) (@lem8358423 _146290 _146293 P G lt2)). Qed.
Lemma lem8358426 {_146290 _146293 : Type'} (H' : type796 _146290 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (lt2 : type1402 _146293) : (term382 _146290 _146293 H' P G lt2) = (term368 _146290 _146293 H' P G lt2).
Proof. exact (MK_COMB (@lem8358421 _146290 _146293 lt2 H') (@lem8358425 _146290 _146293 P G lt2)). Qed.
Lemma lem8358427 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8358428 {_146290 _146293 : Type'} (H' : type796 _146290 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (lt2 : type1402 _146293) : (term391 _146290 _146293 H' P G lt2) = (term392 _146290 _146293 H' P G lt2).
Proof. exact (MK_COMB (@lem8358427) (@lem8358426 _146290 _146293 H' P G lt2)). Qed.
Lemma lem8358429 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (f : _146293 -> _146290) (H' : type796 _146290 _146293) : (term384 _146290 _146293 lt2 H' f) = (term334 _146290 _146293 lt2 f H').
Proof. exact (eq_refl (term384 _146290 _146293 lt2 H' f)). Qed.
Lemma lem8358430 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8358431 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (f : _146293 -> _146290) (H' : type796 _146290 _146293) : (term393 _146290 _146293 lt2 H' f) = (term394 _146290 _146293 lt2 f H').
Proof. exact (MK_COMB (@lem8358430) (@lem8358429 _146290 _146293 lt2 f H')). Qed.
Lemma lem8358432 {_146290 _146293 : Type'} (P : type799 _146290 _146293) (G : type797 _146290 _146293) (f : _146293 -> _146290) (lt2 : type1402 _146293) : (term388 _146290 _146293 P G lt2 f) = (term357 _146290 _146293 P G f lt2).
Proof. exact (eq_refl (term388 _146290 _146293 P G lt2 f)). Qed.
Lemma lem8358433 {_146290 _146293 : Type'} (H' : type796 _146290 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (f : _146293 -> _146290) (lt2 : type1402 _146293) : (term395 _146290 _146293 H' P G lt2 f) = (term396 _146290 _146293 H' P G f lt2).
Proof. exact (MK_COMB (@lem8358431 _146290 _146293 lt2 f H') (@lem8358432 _146290 _146293 P G f lt2)). Qed.
Lemma lem8358434 {_146290 _146293 : Type'} (H' : type796 _146290 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (lt2 : type1402 _146293) : (term397 _146290 _146293 H' P G lt2) = (term398 _146290 _146293 H' P G lt2).
Proof. exact (fun_ext (fun f : _146293 -> _146290 => @lem8358433 _146290 _146293 H' P G f lt2)). Qed.
Lemma lem8358435 {_146290 _146293 : Type'} : (@ex (_146293 -> _146290)) = (@ex (_146293 -> _146290)).
Proof. exact (eq_refl (@ex (_146293 -> _146290))). Qed.
Lemma lem8358436 {_146290 _146293 : Type'} (H' : type796 _146290 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (lt2 : type1402 _146293) : (term383 _146290 _146293 H' P G lt2) = (term399 _146290 _146293 H' P G lt2).
Proof. exact (MK_COMB (@lem8358435 _146290 _146293) (@lem8358434 _146290 _146293 H' P G lt2)). Qed.
Lemma lem8358437 {_146290 _146293 : Type'} (H' : type796 _146290 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (lt2 : type1402 _146293) : ((term382 _146290 _146293 H' P G lt2) = (term383 _146290 _146293 H' P G lt2)) = ((term368 _146290 _146293 H' P G lt2) = (term399 _146290 _146293 H' P G lt2)).
Proof. exact (MK_COMB (@lem8358428 _146290 _146293 H' P G lt2) (@lem8358436 _146290 _146293 H' P G lt2)). Qed.
Lemma lem8358438 {_146290 _146293 : Type'} (H' : type796 _146290 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (lt2 : type1402 _146293) : (term368 _146290 _146293 H' P G lt2) = (term399 _146290 _146293 H' P G lt2).
Proof. exact (EQ_MP (@lem8358437 _146290 _146293 H' P G lt2) (@lem8358415 _146290 _146293 H' P G lt2)). Qed.
Lemma lem8358442 {A : Type'} (P : A -> Prop) (Q : Prop) : (term169 A P Q) = (term170 A P Q).
Proof. exact (EQ_MP (@lem18905 A P Q) (@lem18904 A P Q)). Qed.
Lemma lem8358443 {_146290 _146293 : Type'} (P : type805 _146290 _146293) (Q : Prop) : (term400 _146290 _146293 P Q) = (term401 _146290 _146293 P Q).
Proof. exact (@lem8358442 (_146293 -> _146290) P Q). Qed.
Lemma lem8358444 {_146290 _146293 : Type'} (H' : type796 _146290 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (f : _146293 -> _146290) (lt2 : type1402 _146293) : (term402 _146290 _146293 H' P G f lt2) = (term403 _146290 _146293 H' P G f lt2).
Proof. exact (@lem8358443 _146290 _146293 (term333 _146290 _146293 lt2 f H') (term357 _146290 _146293 P G f lt2)). Qed.
Lemma lem8358445 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (f : _146293 -> _146290) (H' : type796 _146290 _146293) (g : _146293 -> _146290) : (term404 _146290 _146293 lt2 f H' g) = (term327 _146290 _146293 lt2 f H' g).
Proof. exact (eq_refl (term404 _146290 _146293 lt2 f H' g)). Qed.
Lemma lem8358446 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (f : _146293 -> _146290) (H' : type796 _146290 _146293) : (term405 _146290 _146293 lt2 f H') = (term333 _146290 _146293 lt2 f H').
Proof. exact (fun_ext (fun g : _146293 -> _146290 => @lem8358445 _146290 _146293 lt2 f H' g)). Qed.
Lemma lem8358447 {_146290 _146293 : Type'} : (@ex (_146293 -> _146290)) = (@ex (_146293 -> _146290)).
Proof. exact (eq_refl (@ex (_146293 -> _146290))). Qed.
Lemma lem8358448 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (f : _146293 -> _146290) (H' : type796 _146290 _146293) : (term406 _146290 _146293 lt2 f H') = (term334 _146290 _146293 lt2 f H').
Proof. exact (MK_COMB (@lem8358447 _146290 _146293) (@lem8358446 _146290 _146293 lt2 f H')). Qed.
Lemma lem8358449 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8358450 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (f : _146293 -> _146290) (H' : type796 _146290 _146293) : (term407 _146290 _146293 lt2 f H') = (term394 _146290 _146293 lt2 f H').
Proof. exact (MK_COMB (@lem8358449) (@lem8358448 _146290 _146293 lt2 f H')). Qed.
Lemma lem8358451 {_146290 _146293 : Type'} (P : type799 _146290 _146293) (G : type797 _146290 _146293) (f : _146293 -> _146290) (lt2 : type1402 _146293) : (term357 _146290 _146293 P G f lt2) = (term357 _146290 _146293 P G f lt2).
Proof. exact (eq_refl (term357 _146290 _146293 P G f lt2)). Qed.
Lemma lem8358452 {_146290 _146293 : Type'} (H' : type796 _146290 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (f : _146293 -> _146290) (lt2 : type1402 _146293) : (term402 _146290 _146293 H' P G f lt2) = (term396 _146290 _146293 H' P G f lt2).
Proof. exact (MK_COMB (@lem8358450 _146290 _146293 lt2 f H') (@lem8358451 _146290 _146293 P G f lt2)). Qed.
Lemma lem8358453 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8358454 {_146290 _146293 : Type'} (H' : type796 _146290 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (f : _146293 -> _146290) (lt2 : type1402 _146293) : (term408 _146290 _146293 H' P G f lt2) = (term409 _146290 _146293 H' P G f lt2).
Proof. exact (MK_COMB (@lem8358453) (@lem8358452 _146290 _146293 H' P G f lt2)). Qed.
Lemma lem8358455 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (f : _146293 -> _146290) (H' : type796 _146290 _146293) (g : _146293 -> _146290) : (term404 _146290 _146293 lt2 f H' g) = (term327 _146290 _146293 lt2 f H' g).
Proof. exact (eq_refl (term404 _146290 _146293 lt2 f H' g)). Qed.
Lemma lem8358456 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8358457 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (f : _146293 -> _146290) (H' : type796 _146290 _146293) (g : _146293 -> _146290) : (term410 _146290 _146293 lt2 f H' g) = (term411 _146290 _146293 lt2 f H' g).
Proof. exact (MK_COMB (@lem8358456) (@lem8358455 _146290 _146293 lt2 f H' g)). Qed.
Lemma lem8358458 {_146290 _146293 : Type'} (P : type799 _146290 _146293) (G : type797 _146290 _146293) (f : _146293 -> _146290) (lt2 : type1402 _146293) : (term357 _146290 _146293 P G f lt2) = (term357 _146290 _146293 P G f lt2).
Proof. exact (eq_refl (term357 _146290 _146293 P G f lt2)). Qed.
Lemma lem8358459 {_146290 _146293 : Type'} (H' : type796 _146290 _146293) (g : _146293 -> _146290) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (f : _146293 -> _146290) (lt2 : type1402 _146293) : (term412 _146290 _146293 H' g P G f lt2) = (term413 _146290 _146293 H' g P G f lt2).
Proof. exact (MK_COMB (@lem8358457 _146290 _146293 lt2 f H' g) (@lem8358458 _146290 _146293 P G f lt2)). Qed.
Lemma lem8358460 {_146290 _146293 : Type'} (H' : type796 _146290 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (f : _146293 -> _146290) (lt2 : type1402 _146293) : (term414 _146290 _146293 H' P G f lt2) = (term415 _146290 _146293 H' P G f lt2).
Proof. exact (fun_ext (fun g : _146293 -> _146290 => @lem8358459 _146290 _146293 H' g P G f lt2)). Qed.
Lemma lem8358461 {_146290 _146293 : Type'} : (@ex (_146293 -> _146290)) = (@ex (_146293 -> _146290)).
Proof. exact (eq_refl (@ex (_146293 -> _146290))). Qed.
Lemma lem8358462 {_146290 _146293 : Type'} (H' : type796 _146290 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (f : _146293 -> _146290) (lt2 : type1402 _146293) : (term403 _146290 _146293 H' P G f lt2) = (term416 _146290 _146293 H' P G f lt2).
Proof. exact (MK_COMB (@lem8358461 _146290 _146293) (@lem8358460 _146290 _146293 H' P G f lt2)). Qed.
Lemma lem8358463 {_146290 _146293 : Type'} (H' : type796 _146290 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (f : _146293 -> _146290) (lt2 : type1402 _146293) : ((term402 _146290 _146293 H' P G f lt2) = (term403 _146290 _146293 H' P G f lt2)) = ((term396 _146290 _146293 H' P G f lt2) = (term416 _146290 _146293 H' P G f lt2)).
Proof. exact (MK_COMB (@lem8358454 _146290 _146293 H' P G f lt2) (@lem8358462 _146290 _146293 H' P G f lt2)). Qed.
Lemma lem8358464 {_146290 _146293 : Type'} (H' : type796 _146290 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (f : _146293 -> _146290) (lt2 : type1402 _146293) : (term396 _146290 _146293 H' P G f lt2) = (term416 _146290 _146293 H' P G f lt2).
Proof. exact (EQ_MP (@lem8358463 _146290 _146293 H' P G f lt2) (@lem8358444 _146290 _146293 H' P G f lt2)). Qed.
Lemma lem8358466 {A : Type'} (P : A -> Prop) (Q : A -> Prop) : (term378 A P Q) = (term379 A P Q).
Proof. exact (EQ_MP (@lem18917 A P Q) (@lem18916 A P Q)). Qed.
Lemma lem8358467 {_146293 : Type'} (P : _146293 -> Prop) (Q : _146293 -> Prop) : (term378 _146293 P Q) = (term379 _146293 P Q).
Proof. exact (@lem8358466 _146293 P Q). Qed.
Lemma lem8358468 {_146290 _146293 : Type'} (H' : type796 _146290 _146293) (g : _146293 -> _146290) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (f : _146293 -> _146290) (lt2 : type1402 _146293) : (term417 _146290 _146293 H' g P G f lt2) = (term418 _146290 _146293 H' g P G f lt2).
Proof. exact (@lem8358467 _146293 (term326 _146290 _146293 lt2 f H' g) (term356 _146290 _146293 P G f lt2)). Qed.
Lemma lem8358469 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (f : _146293 -> _146290) (H' : type796 _146290 _146293) (g : _146293 -> _146290) (x : _146293) : (term419 _146290 _146293 lt2 f H' g x) = (term319 _146290 _146293 lt2 f H' g x).
Proof. exact (eq_refl (term419 _146290 _146293 lt2 f H' g x)). Qed.
Lemma lem8358470 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (f : _146293 -> _146290) (H' : type796 _146290 _146293) (g : _146293 -> _146290) : (term420 _146290 _146293 lt2 f H' g) = (term326 _146290 _146293 lt2 f H' g).
Proof. exact (fun_ext (fun x : _146293 => @lem8358469 _146290 _146293 lt2 f H' g x)). Qed.
Lemma lem8358471 {_146293 : Type'} : (@ex _146293) = (@ex _146293).
Proof. exact (eq_refl (@ex _146293)). Qed.
Lemma lem8358472 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (f : _146293 -> _146290) (H' : type796 _146290 _146293) (g : _146293 -> _146290) : (term421 _146290 _146293 lt2 f H' g) = (term327 _146290 _146293 lt2 f H' g).
Proof. exact (MK_COMB (@lem8358471 _146293) (@lem8358470 _146290 _146293 lt2 f H' g)). Qed.
Lemma lem8358473 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8358474 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (f : _146293 -> _146290) (H' : type796 _146290 _146293) (g : _146293 -> _146290) : (term422 _146290 _146293 lt2 f H' g) = (term411 _146290 _146293 lt2 f H' g).
Proof. exact (MK_COMB (@lem8358473) (@lem8358472 _146290 _146293 lt2 f H' g)). Qed.
Lemma lem8358475 {_146290 _146293 : Type'} (P : type799 _146290 _146293) (G : type797 _146290 _146293) (f : _146293 -> _146290) (lt2 : type1402 _146293) (x : _146293) : (term423 _146290 _146293 P G f lt2 x) = (term350 _146290 _146293 P G f lt2 x).
Proof. exact (eq_refl (term423 _146290 _146293 P G f lt2 x)). Qed.
Lemma lem8358476 {_146290 _146293 : Type'} (P : type799 _146290 _146293) (G : type797 _146290 _146293) (f : _146293 -> _146290) (lt2 : type1402 _146293) : (term424 _146290 _146293 P G f lt2) = (term356 _146290 _146293 P G f lt2).
Proof. exact (fun_ext (fun x : _146293 => @lem8358475 _146290 _146293 P G f lt2 x)). Qed.
Lemma lem8358477 {_146293 : Type'} : (@ex _146293) = (@ex _146293).
Proof. exact (eq_refl (@ex _146293)). Qed.
Lemma lem8358478 {_146290 _146293 : Type'} (P : type799 _146290 _146293) (G : type797 _146290 _146293) (f : _146293 -> _146290) (lt2 : type1402 _146293) : (term425 _146290 _146293 P G f lt2) = (term357 _146290 _146293 P G f lt2).
Proof. exact (MK_COMB (@lem8358477 _146293) (@lem8358476 _146290 _146293 P G f lt2)). Qed.
Lemma lem8358479 {_146290 _146293 : Type'} (H' : type796 _146290 _146293) (g : _146293 -> _146290) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (f : _146293 -> _146290) (lt2 : type1402 _146293) : (term417 _146290 _146293 H' g P G f lt2) = (term413 _146290 _146293 H' g P G f lt2).
Proof. exact (MK_COMB (@lem8358474 _146290 _146293 lt2 f H' g) (@lem8358478 _146290 _146293 P G f lt2)). Qed.
Lemma lem8358480 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8358481 {_146290 _146293 : Type'} (H' : type796 _146290 _146293) (g : _146293 -> _146290) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (f : _146293 -> _146290) (lt2 : type1402 _146293) : (term426 _146290 _146293 H' g P G f lt2) = (term427 _146290 _146293 H' g P G f lt2).
Proof. exact (MK_COMB (@lem8358480) (@lem8358479 _146290 _146293 H' g P G f lt2)). Qed.
Lemma lem8358482 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (f : _146293 -> _146290) (H' : type796 _146290 _146293) (g : _146293 -> _146290) (x : _146293) : (term419 _146290 _146293 lt2 f H' g x) = (term319 _146290 _146293 lt2 f H' g x).
Proof. exact (eq_refl (term419 _146290 _146293 lt2 f H' g x)). Qed.
Lemma lem8358483 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8358484 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (f : _146293 -> _146290) (H' : type796 _146290 _146293) (g : _146293 -> _146290) (x : _146293) : (term428 _146290 _146293 lt2 f H' g x) = (term429 _146290 _146293 lt2 f H' g x).
Proof. exact (MK_COMB (@lem8358483) (@lem8358482 _146290 _146293 lt2 f H' g x)). Qed.
Lemma lem8358485 {_146290 _146293 : Type'} (P : type799 _146290 _146293) (G : type797 _146290 _146293) (f : _146293 -> _146290) (lt2 : type1402 _146293) (x : _146293) : (term423 _146290 _146293 P G f lt2 x) = (term350 _146290 _146293 P G f lt2 x).
Proof. exact (eq_refl (term423 _146290 _146293 P G f lt2 x)). Qed.
Lemma lem8358486 {_146290 _146293 : Type'} (H' : type796 _146290 _146293) (g : _146293 -> _146290) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (f : _146293 -> _146290) (lt2 : type1402 _146293) (x : _146293) : (term430 _146290 _146293 H' g P G f lt2 x) = (term431 _146290 _146293 H' g P G f lt2 x).
Proof. exact (MK_COMB (@lem8358484 _146290 _146293 lt2 f H' g x) (@lem8358485 _146290 _146293 P G f lt2 x)). Qed.
Lemma lem8358487 {_146290 _146293 : Type'} (H' : type796 _146290 _146293) (g : _146293 -> _146290) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (f : _146293 -> _146290) (lt2 : type1402 _146293) : (term432 _146290 _146293 H' g P G f lt2) = (term433 _146290 _146293 H' g P G f lt2).
Proof. exact (fun_ext (fun x : _146293 => @lem8358486 _146290 _146293 H' g P G f lt2 x)). Qed.
Lemma lem8358488 {_146293 : Type'} : (@ex _146293) = (@ex _146293).
Proof. exact (eq_refl (@ex _146293)). Qed.
Lemma lem8358489 {_146290 _146293 : Type'} (H' : type796 _146290 _146293) (g : _146293 -> _146290) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (f : _146293 -> _146290) (lt2 : type1402 _146293) : (term418 _146290 _146293 H' g P G f lt2) = (term434 _146290 _146293 H' g P G f lt2).
Proof. exact (MK_COMB (@lem8358488 _146293) (@lem8358487 _146290 _146293 H' g P G f lt2)). Qed.
Lemma lem8358490 {_146290 _146293 : Type'} (H' : type796 _146290 _146293) (g : _146293 -> _146290) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (f : _146293 -> _146290) (lt2 : type1402 _146293) : ((term417 _146290 _146293 H' g P G f lt2) = (term418 _146290 _146293 H' g P G f lt2)) = ((term413 _146290 _146293 H' g P G f lt2) = (term434 _146290 _146293 H' g P G f lt2)).
Proof. exact (MK_COMB (@lem8358481 _146290 _146293 H' g P G f lt2) (@lem8358489 _146290 _146293 H' g P G f lt2)). Qed.
Lemma lem8358491 {_146290 _146293 : Type'} (H' : type796 _146290 _146293) (g : _146293 -> _146290) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (f : _146293 -> _146290) (lt2 : type1402 _146293) : (term413 _146290 _146293 H' g P G f lt2) = (term434 _146290 _146293 H' g P G f lt2).
Proof. exact (EQ_MP (@lem8358490 _146290 _146293 H' g P G f lt2) (@lem8358468 _146290 _146293 H' g P G f lt2)). Qed.
Lemma lem8358493 {A : Type'} (P : Prop) (Q : A -> Prop) : (term435 A P Q) = (term436 A P Q).
Proof. exact (EQ_MP (@lem18911 A P Q) (@lem18910 A P Q)). Qed.
Lemma lem8358494 {_146293 : Type'} (P : Prop) (Q : _146293 -> Prop) : (term435 _146293 P Q) = (term436 _146293 P Q).
Proof. exact (@lem8358493 _146293 P Q). Qed.
Lemma lem8358495 {_146290 _146293 : Type'} (H' : type796 _146290 _146293) (g : _146293 -> _146290) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (f : _146293 -> _146290) (lt2 : type1402 _146293) (x : _146293) : (term437 _146290 _146293 H' g P G f lt2 x) = (term438 _146290 _146293 H' g P G f lt2 x).
Proof. exact (@lem8358494 _146293 (term319 _146290 _146293 lt2 f H' g x) (term349 _146290 _146293 P G f lt2 x)). Qed.
Lemma lem8358496 {_146290 _146293 : Type'} (P : type799 _146290 _146293) (G : type797 _146290 _146293) (f : _146293 -> _146290) (lt2 : type1402 _146293) (y : _146293) (x : _146293) : (term439 _146290 _146293 P G f lt2 x y) = (term343 _146290 _146293 P G f lt2 y x).
Proof. exact (eq_refl (term439 _146290 _146293 P G f lt2 x y)). Qed.
Lemma lem8358497 {_146290 _146293 : Type'} (P : type799 _146290 _146293) (G : type797 _146290 _146293) (f : _146293 -> _146290) (lt2 : type1402 _146293) (x : _146293) : (term440 _146290 _146293 P G f lt2 x) = (term349 _146290 _146293 P G f lt2 x).
Proof. exact (fun_ext (fun y : _146293 => @lem8358496 _146290 _146293 P G f lt2 y x)). Qed.
Lemma lem8358498 {_146293 : Type'} : (@ex _146293) = (@ex _146293).
Proof. exact (eq_refl (@ex _146293)). Qed.
Lemma lem8358499 {_146290 _146293 : Type'} (P : type799 _146290 _146293) (G : type797 _146290 _146293) (f : _146293 -> _146290) (lt2 : type1402 _146293) (x : _146293) : (term441 _146290 _146293 P G f lt2 x) = (term350 _146290 _146293 P G f lt2 x).
Proof. exact (MK_COMB (@lem8358498 _146293) (@lem8358497 _146290 _146293 P G f lt2 x)). Qed.
Lemma lem8358500 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (f : _146293 -> _146290) (H' : type796 _146290 _146293) (g : _146293 -> _146290) (x : _146293) : (term429 _146290 _146293 lt2 f H' g x) = (term429 _146290 _146293 lt2 f H' g x).
Proof. exact (eq_refl (term429 _146290 _146293 lt2 f H' g x)). Qed.
Lemma lem8358501 {_146290 _146293 : Type'} (H' : type796 _146290 _146293) (g : _146293 -> _146290) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (f : _146293 -> _146290) (lt2 : type1402 _146293) (x : _146293) : (term437 _146290 _146293 H' g P G f lt2 x) = (term431 _146290 _146293 H' g P G f lt2 x).
Proof. exact (MK_COMB (@lem8358500 _146290 _146293 lt2 f H' g x) (@lem8358499 _146290 _146293 P G f lt2 x)). Qed.
Lemma lem8358502 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8358503 {_146290 _146293 : Type'} (H' : type796 _146290 _146293) (g : _146293 -> _146290) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (f : _146293 -> _146290) (lt2 : type1402 _146293) (x : _146293) : (term442 _146290 _146293 H' g P G f lt2 x) = (term443 _146290 _146293 H' g P G f lt2 x).
Proof. exact (MK_COMB (@lem8358502) (@lem8358501 _146290 _146293 H' g P G f lt2 x)). Qed.
Lemma lem8358504 {_146290 _146293 : Type'} (P : type799 _146290 _146293) (G : type797 _146290 _146293) (f : _146293 -> _146290) (lt2 : type1402 _146293) (y : _146293) (x : _146293) : (term439 _146290 _146293 P G f lt2 x y) = (term343 _146290 _146293 P G f lt2 y x).
Proof. exact (eq_refl (term439 _146290 _146293 P G f lt2 x y)). Qed.
Lemma lem8358505 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (f : _146293 -> _146290) (H' : type796 _146290 _146293) (g : _146293 -> _146290) (x : _146293) : (term429 _146290 _146293 lt2 f H' g x) = (term429 _146290 _146293 lt2 f H' g x).
Proof. exact (eq_refl (term429 _146290 _146293 lt2 f H' g x)). Qed.
Lemma lem8358506 {_146290 _146293 : Type'} (H' : type796 _146290 _146293) (g : _146293 -> _146290) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (f : _146293 -> _146290) (lt2 : type1402 _146293) (y : _146293) (x : _146293) : (term444 _146290 _146293 H' g P G f lt2 x y) = (term445 _146290 _146293 H' g P G f lt2 y x).
Proof. exact (MK_COMB (@lem8358505 _146290 _146293 lt2 f H' g x) (@lem8358504 _146290 _146293 P G f lt2 y x)). Qed.
Lemma lem8358507 {_146290 _146293 : Type'} (H' : type796 _146290 _146293) (g : _146293 -> _146290) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (f : _146293 -> _146290) (lt2 : type1402 _146293) (x : _146293) : (term446 _146290 _146293 H' g P G f lt2 x) = (term447 _146290 _146293 H' g P G f lt2 x).
Proof. exact (fun_ext (fun y : _146293 => @lem8358506 _146290 _146293 H' g P G f lt2 y x)). Qed.
Lemma lem8358508 {_146293 : Type'} : (@ex _146293) = (@ex _146293).
Proof. exact (eq_refl (@ex _146293)). Qed.
Lemma lem8358509 {_146290 _146293 : Type'} (H' : type796 _146290 _146293) (g : _146293 -> _146290) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (f : _146293 -> _146290) (lt2 : type1402 _146293) (x : _146293) : (term438 _146290 _146293 H' g P G f lt2 x) = (term448 _146290 _146293 H' g P G f lt2 x).
Proof. exact (MK_COMB (@lem8358508 _146293) (@lem8358507 _146290 _146293 H' g P G f lt2 x)). Qed.
Lemma lem8358510 {_146290 _146293 : Type'} (H' : type796 _146290 _146293) (g : _146293 -> _146290) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (f : _146293 -> _146290) (lt2 : type1402 _146293) (x : _146293) : ((term437 _146290 _146293 H' g P G f lt2 x) = (term438 _146290 _146293 H' g P G f lt2 x)) = ((term431 _146290 _146293 H' g P G f lt2 x) = (term448 _146290 _146293 H' g P G f lt2 x)).
Proof. exact (MK_COMB (@lem8358503 _146290 _146293 H' g P G f lt2 x) (@lem8358509 _146290 _146293 H' g P G f lt2 x)). Qed.
Lemma lem8358511 {_146290 _146293 : Type'} (H' : type796 _146290 _146293) (g : _146293 -> _146290) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (f : _146293 -> _146290) (lt2 : type1402 _146293) (x : _146293) : (term431 _146290 _146293 H' g P G f lt2 x) = (term448 _146290 _146293 H' g P G f lt2 x).
Proof. exact (EQ_MP (@lem8358510 _146290 _146293 H' g P G f lt2 x) (@lem8358495 _146290 _146293 H' g P G f lt2 x)). Qed.
Lemma lem8358512 {_146290 _146293 : Type'} (H' : type796 _146290 _146293) (g : _146293 -> _146290) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (f : _146293 -> _146290) (lt2 : type1402 _146293) : (term433 _146290 _146293 H' g P G f lt2) = (term449 _146290 _146293 H' g P G f lt2).
Proof. exact (fun_ext (fun x : _146293 => @lem8358511 _146290 _146293 H' g P G f lt2 x)). Qed.
Lemma lem8358513 {_146293 : Type'} : (@ex _146293) = (@ex _146293).
Proof. exact (eq_refl (@ex _146293)). Qed.
Lemma lem8358514 {_146290 _146293 : Type'} (H' : type796 _146290 _146293) (g : _146293 -> _146290) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (f : _146293 -> _146290) (lt2 : type1402 _146293) : (term434 _146290 _146293 H' g P G f lt2) = (term450 _146290 _146293 H' g P G f lt2).
Proof. exact (MK_COMB (@lem8358513 _146293) (@lem8358512 _146290 _146293 H' g P G f lt2)). Qed.
Lemma lem8358515 {_146290 _146293 : Type'} (H' : type796 _146290 _146293) (g : _146293 -> _146290) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (f : _146293 -> _146290) (lt2 : type1402 _146293) : (term413 _146290 _146293 H' g P G f lt2) = (term450 _146290 _146293 H' g P G f lt2).
Proof. exact (TRANS (@lem8358491 _146290 _146293 H' g P G f lt2) (@lem8358514 _146290 _146293 H' g P G f lt2)). Qed.
Lemma lem8358516 {_146290 _146293 : Type'} (H' : type796 _146290 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (f : _146293 -> _146290) (lt2 : type1402 _146293) : (term415 _146290 _146293 H' P G f lt2) = (term451 _146290 _146293 H' P G f lt2).
Proof. exact (fun_ext (fun g : _146293 -> _146290 => @lem8358515 _146290 _146293 H' g P G f lt2)). Qed.
Lemma lem8358517 {_146290 _146293 : Type'} : (@ex (_146293 -> _146290)) = (@ex (_146293 -> _146290)).
Proof. exact (eq_refl (@ex (_146293 -> _146290))). Qed.
Lemma lem8358518 {_146290 _146293 : Type'} (H' : type796 _146290 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (f : _146293 -> _146290) (lt2 : type1402 _146293) : (term416 _146290 _146293 H' P G f lt2) = (term452 _146290 _146293 H' P G f lt2).
Proof. exact (MK_COMB (@lem8358517 _146290 _146293) (@lem8358516 _146290 _146293 H' P G f lt2)). Qed.
Lemma lem8358519 {_146290 _146293 : Type'} (H' : type796 _146290 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (f : _146293 -> _146290) (lt2 : type1402 _146293) : (term396 _146290 _146293 H' P G f lt2) = (term452 _146290 _146293 H' P G f lt2).
Proof. exact (TRANS (@lem8358464 _146290 _146293 H' P G f lt2) (@lem8358518 _146290 _146293 H' P G f lt2)). Qed.
Lemma lem8358520 {_146290 _146293 : Type'} (H' : type796 _146290 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (lt2 : type1402 _146293) : (term398 _146290 _146293 H' P G lt2) = (term453 _146290 _146293 H' P G lt2).
Proof. exact (fun_ext (fun f : _146293 -> _146290 => @lem8358519 _146290 _146293 H' P G f lt2)). Qed.
Lemma lem8358521 {_146290 _146293 : Type'} : (@ex (_146293 -> _146290)) = (@ex (_146293 -> _146290)).
Proof. exact (eq_refl (@ex (_146293 -> _146290))). Qed.
Lemma lem8358522 {_146290 _146293 : Type'} (H' : type796 _146290 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (lt2 : type1402 _146293) : (term399 _146290 _146293 H' P G lt2) = (term454 _146290 _146293 H' P G lt2).
Proof. exact (MK_COMB (@lem8358521 _146290 _146293) (@lem8358520 _146290 _146293 H' P G lt2)). Qed.
Lemma lem8358523 {_146290 _146293 : Type'} (H' : type796 _146290 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (lt2 : type1402 _146293) : (term368 _146290 _146293 H' P G lt2) = (term454 _146290 _146293 H' P G lt2).
Proof. exact (TRANS (@lem8358438 _146290 _146293 H' P G lt2) (@lem8358522 _146290 _146293 H' P G lt2)). Qed.
Lemma lem8358524 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (H' : type796 _146290 _146293) : (term371 _146290 _146293 lt2 P G H') = (term371 _146290 _146293 lt2 P G H').
Proof. exact (eq_refl (term371 _146290 _146293 lt2 P G H')). Qed.
Lemma lem8358525 {_146290 _146293 : Type'} (H' : type796 _146290 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (lt2 : type1402 _146293) : (term373 _146290 _146293 H' P G lt2) = (term455 _146290 _146293 H' P G lt2).
Proof. exact (MK_COMB (@lem8358524 _146290 _146293 lt2 P G H') (@lem8358523 _146290 _146293 H' P G lt2)). Qed.
Lemma lem8358527 {A : Type'} (P : A -> Prop) (Q : A -> Prop) : (term378 A P Q) = (term379 A P Q).
Proof. exact (EQ_MP (@lem18917 A P Q) (@lem18916 A P Q)). Qed.
Lemma lem8358528 {_146290 _146293 : Type'} (P : type805 _146290 _146293) (Q : type805 _146290 _146293) : (term380 _146290 _146293 P Q) = (term381 _146290 _146293 P Q).
Proof. exact (@lem8358527 (_146293 -> _146290) P Q). Qed.
Lemma lem8358529 {_146290 _146293 : Type'} (H' : type796 _146290 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (lt2 : type1402 _146293) : (term456 _146290 _146293 H' P G lt2) = (term457 _146290 _146293 H' P G lt2).
Proof. exact (@lem8358528 _146290 _146293 (term315 _146290 _146293 lt2 P G H') (term453 _146290 _146293 H' P G lt2)). Qed.
Lemma lem8358530 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (f : _146293 -> _146290) (H' : type796 _146290 _146293) : (term458 _146290 _146293 lt2 P G H' f) = (term309 _146290 _146293 lt2 P G f H').
Proof. exact (eq_refl (term458 _146290 _146293 lt2 P G H' f)). Qed.
Lemma lem8358531 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (H' : type796 _146290 _146293) : (term459 _146290 _146293 lt2 P G H') = (term315 _146290 _146293 lt2 P G H').
Proof. exact (fun_ext (fun f : _146293 -> _146290 => @lem8358530 _146290 _146293 lt2 P G f H')). Qed.
Lemma lem8358532 {_146290 _146293 : Type'} : (@ex (_146293 -> _146290)) = (@ex (_146293 -> _146290)).
Proof. exact (eq_refl (@ex (_146293 -> _146290))). Qed.
Lemma lem8358533 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (H' : type796 _146290 _146293) : (term460 _146290 _146293 lt2 P G H') = (term316 _146290 _146293 lt2 P G H').
Proof. exact (MK_COMB (@lem8358532 _146290 _146293) (@lem8358531 _146290 _146293 lt2 P G H')). Qed.
Lemma lem8358534 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8358535 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (H' : type796 _146290 _146293) : (term461 _146290 _146293 lt2 P G H') = (term371 _146290 _146293 lt2 P G H').
Proof. exact (MK_COMB (@lem8358534) (@lem8358533 _146290 _146293 lt2 P G H')). Qed.
Lemma lem8358536 {_146290 _146293 : Type'} (H' : type796 _146290 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (f : _146293 -> _146290) (lt2 : type1402 _146293) : (term462 _146290 _146293 H' P G lt2 f) = (term452 _146290 _146293 H' P G f lt2).
Proof. exact (eq_refl (term462 _146290 _146293 H' P G lt2 f)). Qed.
Lemma lem8358537 {_146290 _146293 : Type'} (H' : type796 _146290 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (lt2 : type1402 _146293) : (term463 _146290 _146293 H' P G lt2) = (term453 _146290 _146293 H' P G lt2).
Proof. exact (fun_ext (fun f : _146293 -> _146290 => @lem8358536 _146290 _146293 H' P G f lt2)). Qed.
Lemma lem8358538 {_146290 _146293 : Type'} : (@ex (_146293 -> _146290)) = (@ex (_146293 -> _146290)).
Proof. exact (eq_refl (@ex (_146293 -> _146290))). Qed.
Lemma lem8358539 {_146290 _146293 : Type'} (H' : type796 _146290 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (lt2 : type1402 _146293) : (term464 _146290 _146293 H' P G lt2) = (term454 _146290 _146293 H' P G lt2).
Proof. exact (MK_COMB (@lem8358538 _146290 _146293) (@lem8358537 _146290 _146293 H' P G lt2)). Qed.
Lemma lem8358540 {_146290 _146293 : Type'} (H' : type796 _146290 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (lt2 : type1402 _146293) : (term456 _146290 _146293 H' P G lt2) = (term455 _146290 _146293 H' P G lt2).
Proof. exact (MK_COMB (@lem8358535 _146290 _146293 lt2 P G H') (@lem8358539 _146290 _146293 H' P G lt2)). Qed.
Lemma lem8358541 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8358542 {_146290 _146293 : Type'} (H' : type796 _146290 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (lt2 : type1402 _146293) : (term465 _146290 _146293 H' P G lt2) = (term466 _146290 _146293 H' P G lt2).
Proof. exact (MK_COMB (@lem8358541) (@lem8358540 _146290 _146293 H' P G lt2)). Qed.
Lemma lem8358543 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (f : _146293 -> _146290) (H' : type796 _146290 _146293) : (term458 _146290 _146293 lt2 P G H' f) = (term309 _146290 _146293 lt2 P G f H').
Proof. exact (eq_refl (term458 _146290 _146293 lt2 P G H' f)). Qed.
Lemma lem8358544 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8358545 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (f : _146293 -> _146290) (H' : type796 _146290 _146293) : (term467 _146290 _146293 lt2 P G H' f) = (term468 _146290 _146293 lt2 P G f H').
Proof. exact (MK_COMB (@lem8358544) (@lem8358543 _146290 _146293 lt2 P G f H')). Qed.
Lemma lem8358546 {_146290 _146293 : Type'} (H' : type796 _146290 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (f : _146293 -> _146290) (lt2 : type1402 _146293) : (term462 _146290 _146293 H' P G lt2 f) = (term452 _146290 _146293 H' P G f lt2).
Proof. exact (eq_refl (term462 _146290 _146293 H' P G lt2 f)). Qed.
Lemma lem8358547 {_146290 _146293 : Type'} (H' : type796 _146290 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (f : _146293 -> _146290) (lt2 : type1402 _146293) : (term469 _146290 _146293 H' P G lt2 f) = (term470 _146290 _146293 H' P G f lt2).
Proof. exact (MK_COMB (@lem8358545 _146290 _146293 lt2 P G f H') (@lem8358546 _146290 _146293 H' P G f lt2)). Qed.
Lemma lem8358548 {_146290 _146293 : Type'} (H' : type796 _146290 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (lt2 : type1402 _146293) : (term471 _146290 _146293 H' P G lt2) = (term472 _146290 _146293 H' P G lt2).
Proof. exact (fun_ext (fun f : _146293 -> _146290 => @lem8358547 _146290 _146293 H' P G f lt2)). Qed.
Lemma lem8358549 {_146290 _146293 : Type'} : (@ex (_146293 -> _146290)) = (@ex (_146293 -> _146290)).
Proof. exact (eq_refl (@ex (_146293 -> _146290))). Qed.
Lemma lem8358550 {_146290 _146293 : Type'} (H' : type796 _146290 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (lt2 : type1402 _146293) : (term457 _146290 _146293 H' P G lt2) = (term473 _146290 _146293 H' P G lt2).
Proof. exact (MK_COMB (@lem8358549 _146290 _146293) (@lem8358548 _146290 _146293 H' P G lt2)). Qed.
Lemma lem8358551 {_146290 _146293 : Type'} (H' : type796 _146290 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (lt2 : type1402 _146293) : ((term456 _146290 _146293 H' P G lt2) = (term457 _146290 _146293 H' P G lt2)) = ((term455 _146290 _146293 H' P G lt2) = (term473 _146290 _146293 H' P G lt2)).
Proof. exact (MK_COMB (@lem8358542 _146290 _146293 H' P G lt2) (@lem8358550 _146290 _146293 H' P G lt2)). Qed.
Lemma lem8358552 {_146290 _146293 : Type'} (H' : type796 _146290 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (lt2 : type1402 _146293) : (term455 _146290 _146293 H' P G lt2) = (term473 _146290 _146293 H' P G lt2).
Proof. exact (EQ_MP (@lem8358551 _146290 _146293 H' P G lt2) (@lem8358529 _146290 _146293 H' P G lt2)). Qed.
Lemma lem8358554 {A : Type'} (P : A -> Prop) (Q : A -> Prop) : (term378 A P Q) = (term379 A P Q).
Proof. exact (EQ_MP (@lem18917 A P Q) (@lem18916 A P Q)). Qed.
Lemma lem8358555 {_146290 _146293 : Type'} (P : type805 _146290 _146293) (Q : type805 _146290 _146293) : (term380 _146290 _146293 P Q) = (term381 _146290 _146293 P Q).
Proof. exact (@lem8358554 (_146293 -> _146290) P Q). Qed.
Lemma lem8358556 {_146290 _146293 : Type'} (H' : type796 _146290 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (f : _146293 -> _146290) (lt2 : type1402 _146293) : (term474 _146290 _146293 H' P G f lt2) = (term475 _146290 _146293 H' P G f lt2).
Proof. exact (@lem8358555 _146290 _146293 (term308 _146290 _146293 lt2 P G f H') (term451 _146290 _146293 H' P G f lt2)). Qed.
Lemma lem8358557 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (f : _146293 -> _146290) (H' : type796 _146290 _146293) (g : _146293 -> _146290) : (term476 _146290 _146293 lt2 P G f H' g) = (term300 _146290 _146293 lt2 P G f H' g).
Proof. exact (eq_refl (term476 _146290 _146293 lt2 P G f H' g)). Qed.
Lemma lem8358558 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (f : _146293 -> _146290) (H' : type796 _146290 _146293) : (term477 _146290 _146293 lt2 P G f H') = (term308 _146290 _146293 lt2 P G f H').
Proof. exact (fun_ext (fun g : _146293 -> _146290 => @lem8358557 _146290 _146293 lt2 P G f H' g)). Qed.
Lemma lem8358559 {_146290 _146293 : Type'} : (@ex (_146293 -> _146290)) = (@ex (_146293 -> _146290)).
Proof. exact (eq_refl (@ex (_146293 -> _146290))). Qed.
Lemma lem8358560 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (f : _146293 -> _146290) (H' : type796 _146290 _146293) : (term478 _146290 _146293 lt2 P G f H') = (term309 _146290 _146293 lt2 P G f H').
Proof. exact (MK_COMB (@lem8358559 _146290 _146293) (@lem8358558 _146290 _146293 lt2 P G f H')). Qed.
Lemma lem8358561 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8358562 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (f : _146293 -> _146290) (H' : type796 _146290 _146293) : (term479 _146290 _146293 lt2 P G f H') = (term468 _146290 _146293 lt2 P G f H').
Proof. exact (MK_COMB (@lem8358561) (@lem8358560 _146290 _146293 lt2 P G f H')). Qed.
Lemma lem8358563 {_146290 _146293 : Type'} (H' : type796 _146290 _146293) (g : _146293 -> _146290) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (f : _146293 -> _146290) (lt2 : type1402 _146293) : (term480 _146290 _146293 H' P G f lt2 g) = (term450 _146290 _146293 H' g P G f lt2).
Proof. exact (eq_refl (term480 _146290 _146293 H' P G f lt2 g)). Qed.
Lemma lem8358564 {_146290 _146293 : Type'} (H' : type796 _146290 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (f : _146293 -> _146290) (lt2 : type1402 _146293) : (term481 _146290 _146293 H' P G f lt2) = (term451 _146290 _146293 H' P G f lt2).
Proof. exact (fun_ext (fun g : _146293 -> _146290 => @lem8358563 _146290 _146293 H' g P G f lt2)). Qed.
Lemma lem8358565 {_146290 _146293 : Type'} : (@ex (_146293 -> _146290)) = (@ex (_146293 -> _146290)).
Proof. exact (eq_refl (@ex (_146293 -> _146290))). Qed.
Lemma lem8358566 {_146290 _146293 : Type'} (H' : type796 _146290 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (f : _146293 -> _146290) (lt2 : type1402 _146293) : (term482 _146290 _146293 H' P G f lt2) = (term452 _146290 _146293 H' P G f lt2).
Proof. exact (MK_COMB (@lem8358565 _146290 _146293) (@lem8358564 _146290 _146293 H' P G f lt2)). Qed.
Lemma lem8358567 {_146290 _146293 : Type'} (H' : type796 _146290 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (f : _146293 -> _146290) (lt2 : type1402 _146293) : (term474 _146290 _146293 H' P G f lt2) = (term470 _146290 _146293 H' P G f lt2).
Proof. exact (MK_COMB (@lem8358562 _146290 _146293 lt2 P G f H') (@lem8358566 _146290 _146293 H' P G f lt2)). Qed.
Lemma lem8358568 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8358569 {_146290 _146293 : Type'} (H' : type796 _146290 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (f : _146293 -> _146290) (lt2 : type1402 _146293) : (term483 _146290 _146293 H' P G f lt2) = (term484 _146290 _146293 H' P G f lt2).
Proof. exact (MK_COMB (@lem8358568) (@lem8358567 _146290 _146293 H' P G f lt2)). Qed.
Lemma lem8358570 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (f : _146293 -> _146290) (H' : type796 _146290 _146293) (g : _146293 -> _146290) : (term476 _146290 _146293 lt2 P G f H' g) = (term300 _146290 _146293 lt2 P G f H' g).
Proof. exact (eq_refl (term476 _146290 _146293 lt2 P G f H' g)). Qed.
Lemma lem8358571 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8358572 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (f : _146293 -> _146290) (H' : type796 _146290 _146293) (g : _146293 -> _146290) : (term485 _146290 _146293 lt2 P G f H' g) = (term486 _146290 _146293 lt2 P G f H' g).
Proof. exact (MK_COMB (@lem8358571) (@lem8358570 _146290 _146293 lt2 P G f H' g)). Qed.
Lemma lem8358573 {_146290 _146293 : Type'} (H' : type796 _146290 _146293) (g : _146293 -> _146290) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (f : _146293 -> _146290) (lt2 : type1402 _146293) : (term480 _146290 _146293 H' P G f lt2 g) = (term450 _146290 _146293 H' g P G f lt2).
Proof. exact (eq_refl (term480 _146290 _146293 H' P G f lt2 g)). Qed.
Lemma lem8358574 {_146290 _146293 : Type'} (H' : type796 _146290 _146293) (g : _146293 -> _146290) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (f : _146293 -> _146290) (lt2 : type1402 _146293) : (term487 _146290 _146293 H' P G f lt2 g) = (term488 _146290 _146293 H' g P G f lt2).
Proof. exact (MK_COMB (@lem8358572 _146290 _146293 lt2 P G f H' g) (@lem8358573 _146290 _146293 H' g P G f lt2)). Qed.
Lemma lem8358575 {_146290 _146293 : Type'} (H' : type796 _146290 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (f : _146293 -> _146290) (lt2 : type1402 _146293) : (term489 _146290 _146293 H' P G f lt2) = (term490 _146290 _146293 H' P G f lt2).
Proof. exact (fun_ext (fun g : _146293 -> _146290 => @lem8358574 _146290 _146293 H' g P G f lt2)). Qed.
Lemma lem8358576 {_146290 _146293 : Type'} : (@ex (_146293 -> _146290)) = (@ex (_146293 -> _146290)).
Proof. exact (eq_refl (@ex (_146293 -> _146290))). Qed.
Lemma lem8358577 {_146290 _146293 : Type'} (H' : type796 _146290 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (f : _146293 -> _146290) (lt2 : type1402 _146293) : (term475 _146290 _146293 H' P G f lt2) = (term491 _146290 _146293 H' P G f lt2).
Proof. exact (MK_COMB (@lem8358576 _146290 _146293) (@lem8358575 _146290 _146293 H' P G f lt2)). Qed.
Lemma lem8358578 {_146290 _146293 : Type'} (H' : type796 _146290 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (f : _146293 -> _146290) (lt2 : type1402 _146293) : ((term474 _146290 _146293 H' P G f lt2) = (term475 _146290 _146293 H' P G f lt2)) = ((term470 _146290 _146293 H' P G f lt2) = (term491 _146290 _146293 H' P G f lt2)).
Proof. exact (MK_COMB (@lem8358569 _146290 _146293 H' P G f lt2) (@lem8358577 _146290 _146293 H' P G f lt2)). Qed.
Lemma lem8358579 {_146290 _146293 : Type'} (H' : type796 _146290 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (f : _146293 -> _146290) (lt2 : type1402 _146293) : (term470 _146290 _146293 H' P G f lt2) = (term491 _146290 _146293 H' P G f lt2).
Proof. exact (EQ_MP (@lem8358578 _146290 _146293 H' P G f lt2) (@lem8358556 _146290 _146293 H' P G f lt2)). Qed.
Lemma lem8358581 {A : Type'} (P : A -> Prop) (Q : A -> Prop) : (term378 A P Q) = (term379 A P Q).
Proof. exact (EQ_MP (@lem18917 A P Q) (@lem18916 A P Q)). Qed.
Lemma lem8358582 {_146293 : Type'} (P : _146293 -> Prop) (Q : _146293 -> Prop) : (term378 _146293 P Q) = (term379 _146293 P Q).
Proof. exact (@lem8358581 _146293 P Q). Qed.
Lemma lem8358583 {_146290 _146293 : Type'} (H' : type796 _146290 _146293) (g : _146293 -> _146290) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (f : _146293 -> _146290) (lt2 : type1402 _146293) : (term492 _146290 _146293 H' g P G f lt2) = (term493 _146290 _146293 H' g P G f lt2).
Proof. exact (@lem8358582 _146293 (term299 _146290 _146293 lt2 P G f H' g) (term449 _146290 _146293 H' g P G f lt2)). Qed.
Lemma lem8358584 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (f : _146293 -> _146290) (H' : type796 _146290 _146293) (g : _146293 -> _146290) (x : _146293) : (term494 _146290 _146293 lt2 P G f H' g x) = (term292 _146290 _146293 lt2 P G f H' g x).
Proof. exact (eq_refl (term494 _146290 _146293 lt2 P G f H' g x)). Qed.
Lemma lem8358585 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (f : _146293 -> _146290) (H' : type796 _146290 _146293) (g : _146293 -> _146290) : (term495 _146290 _146293 lt2 P G f H' g) = (term299 _146290 _146293 lt2 P G f H' g).
Proof. exact (fun_ext (fun x : _146293 => @lem8358584 _146290 _146293 lt2 P G f H' g x)). Qed.
Lemma lem8358586 {_146293 : Type'} : (@ex _146293) = (@ex _146293).
Proof. exact (eq_refl (@ex _146293)). Qed.
Lemma lem8358587 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (f : _146293 -> _146290) (H' : type796 _146290 _146293) (g : _146293 -> _146290) : (term496 _146290 _146293 lt2 P G f H' g) = (term300 _146290 _146293 lt2 P G f H' g).
Proof. exact (MK_COMB (@lem8358586 _146293) (@lem8358585 _146290 _146293 lt2 P G f H' g)). Qed.
Lemma lem8358588 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8358589 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (f : _146293 -> _146290) (H' : type796 _146290 _146293) (g : _146293 -> _146290) : (term497 _146290 _146293 lt2 P G f H' g) = (term486 _146290 _146293 lt2 P G f H' g).
Proof. exact (MK_COMB (@lem8358588) (@lem8358587 _146290 _146293 lt2 P G f H' g)). Qed.
Lemma lem8358590 {_146290 _146293 : Type'} (H' : type796 _146290 _146293) (g : _146293 -> _146290) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (f : _146293 -> _146290) (lt2 : type1402 _146293) (x : _146293) : (term498 _146290 _146293 H' g P G f lt2 x) = (term448 _146290 _146293 H' g P G f lt2 x).
Proof. exact (eq_refl (term498 _146290 _146293 H' g P G f lt2 x)). Qed.
Lemma lem8358591 {_146290 _146293 : Type'} (H' : type796 _146290 _146293) (g : _146293 -> _146290) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (f : _146293 -> _146290) (lt2 : type1402 _146293) : (term499 _146290 _146293 H' g P G f lt2) = (term449 _146290 _146293 H' g P G f lt2).
Proof. exact (fun_ext (fun x : _146293 => @lem8358590 _146290 _146293 H' g P G f lt2 x)). Qed.
Lemma lem8358592 {_146293 : Type'} : (@ex _146293) = (@ex _146293).
Proof. exact (eq_refl (@ex _146293)). Qed.
Lemma lem8358593 {_146290 _146293 : Type'} (H' : type796 _146290 _146293) (g : _146293 -> _146290) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (f : _146293 -> _146290) (lt2 : type1402 _146293) : (term500 _146290 _146293 H' g P G f lt2) = (term450 _146290 _146293 H' g P G f lt2).
Proof. exact (MK_COMB (@lem8358592 _146293) (@lem8358591 _146290 _146293 H' g P G f lt2)). Qed.
Lemma lem8358594 {_146290 _146293 : Type'} (H' : type796 _146290 _146293) (g : _146293 -> _146290) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (f : _146293 -> _146290) (lt2 : type1402 _146293) : (term492 _146290 _146293 H' g P G f lt2) = (term488 _146290 _146293 H' g P G f lt2).
Proof. exact (MK_COMB (@lem8358589 _146290 _146293 lt2 P G f H' g) (@lem8358593 _146290 _146293 H' g P G f lt2)). Qed.
Lemma lem8358595 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8358596 {_146290 _146293 : Type'} (H' : type796 _146290 _146293) (g : _146293 -> _146290) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (f : _146293 -> _146290) (lt2 : type1402 _146293) : (term501 _146290 _146293 H' g P G f lt2) = (term502 _146290 _146293 H' g P G f lt2).
Proof. exact (MK_COMB (@lem8358595) (@lem8358594 _146290 _146293 H' g P G f lt2)). Qed.
Lemma lem8358597 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (f : _146293 -> _146290) (H' : type796 _146290 _146293) (g : _146293 -> _146290) (x : _146293) : (term494 _146290 _146293 lt2 P G f H' g x) = (term292 _146290 _146293 lt2 P G f H' g x).
Proof. exact (eq_refl (term494 _146290 _146293 lt2 P G f H' g x)). Qed.
Lemma lem8358598 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8358599 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (f : _146293 -> _146290) (H' : type796 _146290 _146293) (g : _146293 -> _146290) (x : _146293) : (term503 _146290 _146293 lt2 P G f H' g x) = (term504 _146290 _146293 lt2 P G f H' g x).
Proof. exact (MK_COMB (@lem8358598) (@lem8358597 _146290 _146293 lt2 P G f H' g x)). Qed.
Lemma lem8358600 {_146290 _146293 : Type'} (H' : type796 _146290 _146293) (g : _146293 -> _146290) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (f : _146293 -> _146290) (lt2 : type1402 _146293) (x : _146293) : (term498 _146290 _146293 H' g P G f lt2 x) = (term448 _146290 _146293 H' g P G f lt2 x).
Proof. exact (eq_refl (term498 _146290 _146293 H' g P G f lt2 x)). Qed.
Lemma lem8358601 {_146290 _146293 : Type'} (H' : type796 _146290 _146293) (g : _146293 -> _146290) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (f : _146293 -> _146290) (lt2 : type1402 _146293) (x : _146293) : (term505 _146290 _146293 H' g P G f lt2 x) = (term506 _146290 _146293 H' g P G f lt2 x).
Proof. exact (MK_COMB (@lem8358599 _146290 _146293 lt2 P G f H' g x) (@lem8358600 _146290 _146293 H' g P G f lt2 x)). Qed.
Lemma lem8358602 {_146290 _146293 : Type'} (H' : type796 _146290 _146293) (g : _146293 -> _146290) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (f : _146293 -> _146290) (lt2 : type1402 _146293) : (term507 _146290 _146293 H' g P G f lt2) = (term508 _146290 _146293 H' g P G f lt2).
Proof. exact (fun_ext (fun x : _146293 => @lem8358601 _146290 _146293 H' g P G f lt2 x)). Qed.
Lemma lem8358603 {_146293 : Type'} : (@ex _146293) = (@ex _146293).
Proof. exact (eq_refl (@ex _146293)). Qed.
Lemma lem8358604 {_146290 _146293 : Type'} (H' : type796 _146290 _146293) (g : _146293 -> _146290) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (f : _146293 -> _146290) (lt2 : type1402 _146293) : (term493 _146290 _146293 H' g P G f lt2) = (term509 _146290 _146293 H' g P G f lt2).
Proof. exact (MK_COMB (@lem8358603 _146293) (@lem8358602 _146290 _146293 H' g P G f lt2)). Qed.
Lemma lem8358605 {_146290 _146293 : Type'} (H' : type796 _146290 _146293) (g : _146293 -> _146290) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (f : _146293 -> _146290) (lt2 : type1402 _146293) : ((term492 _146290 _146293 H' g P G f lt2) = (term493 _146290 _146293 H' g P G f lt2)) = ((term488 _146290 _146293 H' g P G f lt2) = (term509 _146290 _146293 H' g P G f lt2)).
Proof. exact (MK_COMB (@lem8358596 _146290 _146293 H' g P G f lt2) (@lem8358604 _146290 _146293 H' g P G f lt2)). Qed.
Lemma lem8358606 {_146290 _146293 : Type'} (H' : type796 _146290 _146293) (g : _146293 -> _146290) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (f : _146293 -> _146290) (lt2 : type1402 _146293) : (term488 _146290 _146293 H' g P G f lt2) = (term509 _146290 _146293 H' g P G f lt2).
Proof. exact (EQ_MP (@lem8358605 _146290 _146293 H' g P G f lt2) (@lem8358583 _146290 _146293 H' g P G f lt2)). Qed.
Lemma lem8358608 {A : Type'} (P : Prop) (Q : A -> Prop) : (term435 A P Q) = (term436 A P Q).
Proof. exact (EQ_MP (@lem18911 A P Q) (@lem18910 A P Q)). Qed.
Lemma lem8358609 {_146293 : Type'} (P : Prop) (Q : _146293 -> Prop) : (term435 _146293 P Q) = (term436 _146293 P Q).
Proof. exact (@lem8358608 _146293 P Q). Qed.
Lemma lem8358610 {_146290 _146293 : Type'} (H' : type796 _146290 _146293) (g : _146293 -> _146290) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (f : _146293 -> _146290) (lt2 : type1402 _146293) (x : _146293) : (term510 _146290 _146293 H' g P G f lt2 x) = (term511 _146290 _146293 H' g P G f lt2 x).
Proof. exact (@lem8358609 _146293 (term292 _146290 _146293 lt2 P G f H' g x) (term447 _146290 _146293 H' g P G f lt2 x)). Qed.
Lemma lem8358611 {_146290 _146293 : Type'} (H' : type796 _146290 _146293) (g : _146293 -> _146290) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (f : _146293 -> _146290) (lt2 : type1402 _146293) (y : _146293) (x : _146293) : (term512 _146290 _146293 H' g P G f lt2 x y) = (term445 _146290 _146293 H' g P G f lt2 y x).
Proof. exact (eq_refl (term512 _146290 _146293 H' g P G f lt2 x y)). Qed.
Lemma lem8358612 {_146290 _146293 : Type'} (H' : type796 _146290 _146293) (g : _146293 -> _146290) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (f : _146293 -> _146290) (lt2 : type1402 _146293) (x : _146293) : (term513 _146290 _146293 H' g P G f lt2 x) = (term447 _146290 _146293 H' g P G f lt2 x).
Proof. exact (fun_ext (fun y : _146293 => @lem8358611 _146290 _146293 H' g P G f lt2 y x)). Qed.
Lemma lem8358613 {_146293 : Type'} : (@ex _146293) = (@ex _146293).
Proof. exact (eq_refl (@ex _146293)). Qed.
Lemma lem8358614 {_146290 _146293 : Type'} (H' : type796 _146290 _146293) (g : _146293 -> _146290) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (f : _146293 -> _146290) (lt2 : type1402 _146293) (x : _146293) : (term514 _146290 _146293 H' g P G f lt2 x) = (term448 _146290 _146293 H' g P G f lt2 x).
Proof. exact (MK_COMB (@lem8358613 _146293) (@lem8358612 _146290 _146293 H' g P G f lt2 x)). Qed.
Lemma lem8358615 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (f : _146293 -> _146290) (H' : type796 _146290 _146293) (g : _146293 -> _146290) (x : _146293) : (term504 _146290 _146293 lt2 P G f H' g x) = (term504 _146290 _146293 lt2 P G f H' g x).
Proof. exact (eq_refl (term504 _146290 _146293 lt2 P G f H' g x)). Qed.
Lemma lem8358616 {_146290 _146293 : Type'} (H' : type796 _146290 _146293) (g : _146293 -> _146290) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (f : _146293 -> _146290) (lt2 : type1402 _146293) (x : _146293) : (term510 _146290 _146293 H' g P G f lt2 x) = (term506 _146290 _146293 H' g P G f lt2 x).
Proof. exact (MK_COMB (@lem8358615 _146290 _146293 lt2 P G f H' g x) (@lem8358614 _146290 _146293 H' g P G f lt2 x)). Qed.
Lemma lem8358617 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8358618 {_146290 _146293 : Type'} (H' : type796 _146290 _146293) (g : _146293 -> _146290) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (f : _146293 -> _146290) (lt2 : type1402 _146293) (x : _146293) : (term515 _146290 _146293 H' g P G f lt2 x) = (term516 _146290 _146293 H' g P G f lt2 x).
Proof. exact (MK_COMB (@lem8358617) (@lem8358616 _146290 _146293 H' g P G f lt2 x)). Qed.
Lemma lem8358619 {_146290 _146293 : Type'} (H' : type796 _146290 _146293) (g : _146293 -> _146290) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (f : _146293 -> _146290) (lt2 : type1402 _146293) (y : _146293) (x : _146293) : (term512 _146290 _146293 H' g P G f lt2 x y) = (term445 _146290 _146293 H' g P G f lt2 y x).
Proof. exact (eq_refl (term512 _146290 _146293 H' g P G f lt2 x y)). Qed.
Lemma lem8358620 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (f : _146293 -> _146290) (H' : type796 _146290 _146293) (g : _146293 -> _146290) (x : _146293) : (term504 _146290 _146293 lt2 P G f H' g x) = (term504 _146290 _146293 lt2 P G f H' g x).
Proof. exact (eq_refl (term504 _146290 _146293 lt2 P G f H' g x)). Qed.
Lemma lem8358621 {_146290 _146293 : Type'} (H' : type796 _146290 _146293) (g : _146293 -> _146290) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (f : _146293 -> _146290) (lt2 : type1402 _146293) (y : _146293) (x : _146293) : (term517 _146290 _146293 H' g P G f lt2 x y) = (term518 _146290 _146293 H' g P G f lt2 y x).
Proof. exact (MK_COMB (@lem8358620 _146290 _146293 lt2 P G f H' g x) (@lem8358619 _146290 _146293 H' g P G f lt2 y x)). Qed.
Lemma lem8358622 {_146290 _146293 : Type'} (H' : type796 _146290 _146293) (g : _146293 -> _146290) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (f : _146293 -> _146290) (lt2 : type1402 _146293) (x : _146293) : (term519 _146290 _146293 H' g P G f lt2 x) = (term520 _146290 _146293 H' g P G f lt2 x).
Proof. exact (fun_ext (fun y : _146293 => @lem8358621 _146290 _146293 H' g P G f lt2 y x)). Qed.
Lemma lem8358623 {_146293 : Type'} : (@ex _146293) = (@ex _146293).
Proof. exact (eq_refl (@ex _146293)). Qed.
Lemma lem8358624 {_146290 _146293 : Type'} (H' : type796 _146290 _146293) (g : _146293 -> _146290) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (f : _146293 -> _146290) (lt2 : type1402 _146293) (x : _146293) : (term511 _146290 _146293 H' g P G f lt2 x) = (term521 _146290 _146293 H' g P G f lt2 x).
Proof. exact (MK_COMB (@lem8358623 _146293) (@lem8358622 _146290 _146293 H' g P G f lt2 x)). Qed.
Lemma lem8358625 {_146290 _146293 : Type'} (H' : type796 _146290 _146293) (g : _146293 -> _146290) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (f : _146293 -> _146290) (lt2 : type1402 _146293) (x : _146293) : ((term510 _146290 _146293 H' g P G f lt2 x) = (term511 _146290 _146293 H' g P G f lt2 x)) = ((term506 _146290 _146293 H' g P G f lt2 x) = (term521 _146290 _146293 H' g P G f lt2 x)).
Proof. exact (MK_COMB (@lem8358618 _146290 _146293 H' g P G f lt2 x) (@lem8358624 _146290 _146293 H' g P G f lt2 x)). Qed.
Lemma lem8358626 {_146290 _146293 : Type'} (H' : type796 _146290 _146293) (g : _146293 -> _146290) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (f : _146293 -> _146290) (lt2 : type1402 _146293) (x : _146293) : (term506 _146290 _146293 H' g P G f lt2 x) = (term521 _146290 _146293 H' g P G f lt2 x).
Proof. exact (EQ_MP (@lem8358625 _146290 _146293 H' g P G f lt2 x) (@lem8358610 _146290 _146293 H' g P G f lt2 x)). Qed.
Lemma lem8358627 {_146290 _146293 : Type'} (H' : type796 _146290 _146293) (g : _146293 -> _146290) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (f : _146293 -> _146290) (lt2 : type1402 _146293) : (term508 _146290 _146293 H' g P G f lt2) = (term522 _146290 _146293 H' g P G f lt2).
Proof. exact (fun_ext (fun x : _146293 => @lem8358626 _146290 _146293 H' g P G f lt2 x)). Qed.
Lemma lem8358628 {_146293 : Type'} : (@ex _146293) = (@ex _146293).
Proof. exact (eq_refl (@ex _146293)). Qed.
Lemma lem8358629 {_146290 _146293 : Type'} (H' : type796 _146290 _146293) (g : _146293 -> _146290) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (f : _146293 -> _146290) (lt2 : type1402 _146293) : (term509 _146290 _146293 H' g P G f lt2) = (term523 _146290 _146293 H' g P G f lt2).
Proof. exact (MK_COMB (@lem8358628 _146293) (@lem8358627 _146290 _146293 H' g P G f lt2)). Qed.
Lemma lem8358630 {_146290 _146293 : Type'} (H' : type796 _146290 _146293) (g : _146293 -> _146290) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (f : _146293 -> _146290) (lt2 : type1402 _146293) : (term488 _146290 _146293 H' g P G f lt2) = (term523 _146290 _146293 H' g P G f lt2).
Proof. exact (TRANS (@lem8358606 _146290 _146293 H' g P G f lt2) (@lem8358629 _146290 _146293 H' g P G f lt2)). Qed.
Lemma lem8358631 {_146290 _146293 : Type'} (H' : type796 _146290 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (f : _146293 -> _146290) (lt2 : type1402 _146293) : (term490 _146290 _146293 H' P G f lt2) = (term524 _146290 _146293 H' P G f lt2).
Proof. exact (fun_ext (fun g : _146293 -> _146290 => @lem8358630 _146290 _146293 H' g P G f lt2)). Qed.
Lemma lem8358632 {_146290 _146293 : Type'} : (@ex (_146293 -> _146290)) = (@ex (_146293 -> _146290)).
Proof. exact (eq_refl (@ex (_146293 -> _146290))). Qed.
Lemma lem8358633 {_146290 _146293 : Type'} (H' : type796 _146290 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (f : _146293 -> _146290) (lt2 : type1402 _146293) : (term491 _146290 _146293 H' P G f lt2) = (term525 _146290 _146293 H' P G f lt2).
Proof. exact (MK_COMB (@lem8358632 _146290 _146293) (@lem8358631 _146290 _146293 H' P G f lt2)). Qed.
Lemma lem8358634 {_146290 _146293 : Type'} (H' : type796 _146290 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (f : _146293 -> _146290) (lt2 : type1402 _146293) : (term470 _146290 _146293 H' P G f lt2) = (term525 _146290 _146293 H' P G f lt2).
Proof. exact (TRANS (@lem8358579 _146290 _146293 H' P G f lt2) (@lem8358633 _146290 _146293 H' P G f lt2)). Qed.
Lemma lem8358635 {_146290 _146293 : Type'} (H' : type796 _146290 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (lt2 : type1402 _146293) : (term472 _146290 _146293 H' P G lt2) = (term526 _146290 _146293 H' P G lt2).
Proof. exact (fun_ext (fun f : _146293 -> _146290 => @lem8358634 _146290 _146293 H' P G f lt2)). Qed.
Lemma lem8358636 {_146290 _146293 : Type'} : (@ex (_146293 -> _146290)) = (@ex (_146293 -> _146290)).
Proof. exact (eq_refl (@ex (_146293 -> _146290))). Qed.
Lemma lem8358637 {_146290 _146293 : Type'} (H' : type796 _146290 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (lt2 : type1402 _146293) : (term473 _146290 _146293 H' P G lt2) = (term527 _146290 _146293 H' P G lt2).
Proof. exact (MK_COMB (@lem8358636 _146290 _146293) (@lem8358635 _146290 _146293 H' P G lt2)). Qed.
Lemma lem8358638 {_146290 _146293 : Type'} (H' : type796 _146290 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (lt2 : type1402 _146293) : (term455 _146290 _146293 H' P G lt2) = (term527 _146290 _146293 H' P G lt2).
Proof. exact (TRANS (@lem8358552 _146290 _146293 H' P G lt2) (@lem8358637 _146290 _146293 H' P G lt2)). Qed.
Lemma lem8358639 {_146290 _146293 : Type'} (H' : type796 _146290 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (lt2 : type1402 _146293) : (term373 _146290 _146293 H' P G lt2) = (term527 _146290 _146293 H' P G lt2).
Proof. exact (TRANS (@lem8358525 _146290 _146293 H' P G lt2) (@lem8358638 _146290 _146293 H' P G lt2)). Qed.
Lemma lem8358640 {_146293 : Type'} (lt2 : type1402 _146293) : (term375 _146293 lt2) = (term375 _146293 lt2).
Proof. exact (eq_refl (term375 _146293 lt2)). Qed.
Lemma lem8358641 {_146290 _146293 : Type'} (H' : type796 _146290 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (lt2 : type1402 _146293) : (term377 _146290 _146293 H' P G lt2) = (term528 _146290 _146293 H' P G lt2).
Proof. exact (MK_COMB (@lem8358640 _146293 lt2) (@lem8358639 _146290 _146293 H' P G lt2)). Qed.
Lemma lem8358643 {A : Type'} (P : Prop) (Q : A -> Prop) : (term435 A P Q) = (term436 A P Q).
Proof. exact (EQ_MP (@lem18911 A P Q) (@lem18910 A P Q)). Qed.
Lemma lem8358644 {_146290 _146293 : Type'} (P : Prop) (Q : type805 _146290 _146293) : (term529 _146290 _146293 P Q) = (term530 _146290 _146293 P Q).
Proof. exact (@lem8358643 (_146293 -> _146290) P Q). Qed.
Lemma lem8358645 {_146290 _146293 : Type'} (H' : type796 _146290 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (lt2 : type1402 _146293) : (term531 _146290 _146293 H' P G lt2) = (term532 _146290 _146293 H' P G lt2).
Proof. exact (@lem8358644 _146290 _146293 (term533 _146293 lt2) (term526 _146290 _146293 H' P G lt2)). Qed.
Lemma lem8358646 {_146290 _146293 : Type'} (H' : type796 _146290 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (f : _146293 -> _146290) (lt2 : type1402 _146293) : (term534 _146290 _146293 H' P G lt2 f) = (term525 _146290 _146293 H' P G f lt2).
Proof. exact (eq_refl (term534 _146290 _146293 H' P G lt2 f)). Qed.
Lemma lem8358647 {_146290 _146293 : Type'} (H' : type796 _146290 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (lt2 : type1402 _146293) : (term535 _146290 _146293 H' P G lt2) = (term526 _146290 _146293 H' P G lt2).
Proof. exact (fun_ext (fun f : _146293 -> _146290 => @lem8358646 _146290 _146293 H' P G f lt2)). Qed.
Lemma lem8358648 {_146290 _146293 : Type'} : (@ex (_146293 -> _146290)) = (@ex (_146293 -> _146290)).
Proof. exact (eq_refl (@ex (_146293 -> _146290))). Qed.
Lemma lem8358649 {_146290 _146293 : Type'} (H' : type796 _146290 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (lt2 : type1402 _146293) : (term536 _146290 _146293 H' P G lt2) = (term527 _146290 _146293 H' P G lt2).
Proof. exact (MK_COMB (@lem8358648 _146290 _146293) (@lem8358647 _146290 _146293 H' P G lt2)). Qed.
Lemma lem8358650 {_146293 : Type'} (lt2 : type1402 _146293) : (term375 _146293 lt2) = (term375 _146293 lt2).
Proof. exact (eq_refl (term375 _146293 lt2)). Qed.
Lemma lem8358651 {_146290 _146293 : Type'} (H' : type796 _146290 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (lt2 : type1402 _146293) : (term531 _146290 _146293 H' P G lt2) = (term528 _146290 _146293 H' P G lt2).
Proof. exact (MK_COMB (@lem8358650 _146293 lt2) (@lem8358649 _146290 _146293 H' P G lt2)). Qed.
Lemma lem8358652 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8358653 {_146290 _146293 : Type'} (H' : type796 _146290 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (lt2 : type1402 _146293) : (term537 _146290 _146293 H' P G lt2) = (term538 _146290 _146293 H' P G lt2).
Proof. exact (MK_COMB (@lem8358652) (@lem8358651 _146290 _146293 H' P G lt2)). Qed.
Lemma lem8358654 {_146290 _146293 : Type'} (H' : type796 _146290 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (f : _146293 -> _146290) (lt2 : type1402 _146293) : (term534 _146290 _146293 H' P G lt2 f) = (term525 _146290 _146293 H' P G f lt2).
Proof. exact (eq_refl (term534 _146290 _146293 H' P G lt2 f)). Qed.
Lemma lem8358655 {_146293 : Type'} (lt2 : type1402 _146293) : (term375 _146293 lt2) = (term375 _146293 lt2).
Proof. exact (eq_refl (term375 _146293 lt2)). Qed.
Lemma lem8358656 {_146290 _146293 : Type'} (H' : type796 _146290 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (f : _146293 -> _146290) (lt2 : type1402 _146293) : (term539 _146290 _146293 H' P G lt2 f) = (term540 _146290 _146293 H' P G f lt2).
Proof. exact (MK_COMB (@lem8358655 _146293 lt2) (@lem8358654 _146290 _146293 H' P G f lt2)). Qed.
Lemma lem8358657 {_146290 _146293 : Type'} (H' : type796 _146290 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (lt2 : type1402 _146293) : (term541 _146290 _146293 H' P G lt2) = (term542 _146290 _146293 H' P G lt2).
Proof. exact (fun_ext (fun f : _146293 -> _146290 => @lem8358656 _146290 _146293 H' P G f lt2)). Qed.
Lemma lem8358658 {_146290 _146293 : Type'} : (@ex (_146293 -> _146290)) = (@ex (_146293 -> _146290)).
Proof. exact (eq_refl (@ex (_146293 -> _146290))). Qed.
Lemma lem8358659 {_146290 _146293 : Type'} (H' : type796 _146290 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (lt2 : type1402 _146293) : (term532 _146290 _146293 H' P G lt2) = (term543 _146290 _146293 H' P G lt2).
Proof. exact (MK_COMB (@lem8358658 _146290 _146293) (@lem8358657 _146290 _146293 H' P G lt2)). Qed.
Lemma lem8358660 {_146290 _146293 : Type'} (H' : type796 _146290 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (lt2 : type1402 _146293) : ((term531 _146290 _146293 H' P G lt2) = (term532 _146290 _146293 H' P G lt2)) = ((term528 _146290 _146293 H' P G lt2) = (term543 _146290 _146293 H' P G lt2)).
Proof. exact (MK_COMB (@lem8358653 _146290 _146293 H' P G lt2) (@lem8358659 _146290 _146293 H' P G lt2)). Qed.
Lemma lem8358661 {_146290 _146293 : Type'} (H' : type796 _146290 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (lt2 : type1402 _146293) : (term528 _146290 _146293 H' P G lt2) = (term543 _146290 _146293 H' P G lt2).
Proof. exact (EQ_MP (@lem8358660 _146290 _146293 H' P G lt2) (@lem8358645 _146290 _146293 H' P G lt2)). Qed.
Lemma lem8358663 {A : Type'} (P : Prop) (Q : A -> Prop) : (term435 A P Q) = (term436 A P Q).
Proof. exact (EQ_MP (@lem18911 A P Q) (@lem18910 A P Q)). Qed.
Lemma lem8358664 {_146290 _146293 : Type'} (P : Prop) (Q : type805 _146290 _146293) : (term529 _146290 _146293 P Q) = (term530 _146290 _146293 P Q).
Proof. exact (@lem8358663 (_146293 -> _146290) P Q). Qed.
Lemma lem8358665 {_146290 _146293 : Type'} (H' : type796 _146290 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (f : _146293 -> _146290) (lt2 : type1402 _146293) : (term544 _146290 _146293 H' P G f lt2) = (term545 _146290 _146293 H' P G f lt2).
Proof. exact (@lem8358664 _146290 _146293 (term533 _146293 lt2) (term524 _146290 _146293 H' P G f lt2)). Qed.
Lemma lem8358666 {_146290 _146293 : Type'} (H' : type796 _146290 _146293) (g : _146293 -> _146290) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (f : _146293 -> _146290) (lt2 : type1402 _146293) : (term546 _146290 _146293 H' P G f lt2 g) = (term523 _146290 _146293 H' g P G f lt2).
Proof. exact (eq_refl (term546 _146290 _146293 H' P G f lt2 g)). Qed.
Lemma lem8358667 {_146290 _146293 : Type'} (H' : type796 _146290 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (f : _146293 -> _146290) (lt2 : type1402 _146293) : (term547 _146290 _146293 H' P G f lt2) = (term524 _146290 _146293 H' P G f lt2).
Proof. exact (fun_ext (fun g : _146293 -> _146290 => @lem8358666 _146290 _146293 H' g P G f lt2)). Qed.
Lemma lem8358668 {_146290 _146293 : Type'} : (@ex (_146293 -> _146290)) = (@ex (_146293 -> _146290)).
Proof. exact (eq_refl (@ex (_146293 -> _146290))). Qed.
Lemma lem8358669 {_146290 _146293 : Type'} (H' : type796 _146290 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (f : _146293 -> _146290) (lt2 : type1402 _146293) : (term548 _146290 _146293 H' P G f lt2) = (term525 _146290 _146293 H' P G f lt2).
Proof. exact (MK_COMB (@lem8358668 _146290 _146293) (@lem8358667 _146290 _146293 H' P G f lt2)). Qed.
Lemma lem8358670 {_146293 : Type'} (lt2 : type1402 _146293) : (term375 _146293 lt2) = (term375 _146293 lt2).
Proof. exact (eq_refl (term375 _146293 lt2)). Qed.
Lemma lem8358671 {_146290 _146293 : Type'} (H' : type796 _146290 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (f : _146293 -> _146290) (lt2 : type1402 _146293) : (term544 _146290 _146293 H' P G f lt2) = (term540 _146290 _146293 H' P G f lt2).
Proof. exact (MK_COMB (@lem8358670 _146293 lt2) (@lem8358669 _146290 _146293 H' P G f lt2)). Qed.
Lemma lem8358672 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8358673 {_146290 _146293 : Type'} (H' : type796 _146290 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (f : _146293 -> _146290) (lt2 : type1402 _146293) : (term549 _146290 _146293 H' P G f lt2) = (term550 _146290 _146293 H' P G f lt2).
Proof. exact (MK_COMB (@lem8358672) (@lem8358671 _146290 _146293 H' P G f lt2)). Qed.
Lemma lem8358674 {_146290 _146293 : Type'} (H' : type796 _146290 _146293) (g : _146293 -> _146290) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (f : _146293 -> _146290) (lt2 : type1402 _146293) : (term546 _146290 _146293 H' P G f lt2 g) = (term523 _146290 _146293 H' g P G f lt2).
Proof. exact (eq_refl (term546 _146290 _146293 H' P G f lt2 g)). Qed.
Lemma lem8358675 {_146293 : Type'} (lt2 : type1402 _146293) : (term375 _146293 lt2) = (term375 _146293 lt2).
Proof. exact (eq_refl (term375 _146293 lt2)). Qed.
Lemma lem8358676 {_146290 _146293 : Type'} (H' : type796 _146290 _146293) (g : _146293 -> _146290) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (f : _146293 -> _146290) (lt2 : type1402 _146293) : (term551 _146290 _146293 H' P G f lt2 g) = (term552 _146290 _146293 H' g P G f lt2).
Proof. exact (MK_COMB (@lem8358675 _146293 lt2) (@lem8358674 _146290 _146293 H' g P G f lt2)). Qed.
Lemma lem8358677 {_146290 _146293 : Type'} (H' : type796 _146290 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (f : _146293 -> _146290) (lt2 : type1402 _146293) : (term553 _146290 _146293 H' P G f lt2) = (term554 _146290 _146293 H' P G f lt2).
Proof. exact (fun_ext (fun g : _146293 -> _146290 => @lem8358676 _146290 _146293 H' g P G f lt2)). Qed.
Lemma lem8358678 {_146290 _146293 : Type'} : (@ex (_146293 -> _146290)) = (@ex (_146293 -> _146290)).
Proof. exact (eq_refl (@ex (_146293 -> _146290))). Qed.
Lemma lem8358679 {_146290 _146293 : Type'} (H' : type796 _146290 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (f : _146293 -> _146290) (lt2 : type1402 _146293) : (term545 _146290 _146293 H' P G f lt2) = (term555 _146290 _146293 H' P G f lt2).
Proof. exact (MK_COMB (@lem8358678 _146290 _146293) (@lem8358677 _146290 _146293 H' P G f lt2)). Qed.
Lemma lem8358680 {_146290 _146293 : Type'} (H' : type796 _146290 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (f : _146293 -> _146290) (lt2 : type1402 _146293) : ((term544 _146290 _146293 H' P G f lt2) = (term545 _146290 _146293 H' P G f lt2)) = ((term540 _146290 _146293 H' P G f lt2) = (term555 _146290 _146293 H' P G f lt2)).
Proof. exact (MK_COMB (@lem8358673 _146290 _146293 H' P G f lt2) (@lem8358679 _146290 _146293 H' P G f lt2)). Qed.
Lemma lem8358681 {_146290 _146293 : Type'} (H' : type796 _146290 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (f : _146293 -> _146290) (lt2 : type1402 _146293) : (term540 _146290 _146293 H' P G f lt2) = (term555 _146290 _146293 H' P G f lt2).
Proof. exact (EQ_MP (@lem8358680 _146290 _146293 H' P G f lt2) (@lem8358665 _146290 _146293 H' P G f lt2)). Qed.
Lemma lem8358683 {A : Type'} (P : Prop) (Q : A -> Prop) : (term435 A P Q) = (term436 A P Q).
Proof. exact (EQ_MP (@lem18911 A P Q) (@lem18910 A P Q)). Qed.
Lemma lem8358684 {_146293 : Type'} (P : Prop) (Q : _146293 -> Prop) : (term435 _146293 P Q) = (term436 _146293 P Q).
Proof. exact (@lem8358683 _146293 P Q). Qed.
Lemma lem8358685 {_146290 _146293 : Type'} (H' : type796 _146290 _146293) (g : _146293 -> _146290) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (f : _146293 -> _146290) (lt2 : type1402 _146293) : (term556 _146290 _146293 H' g P G f lt2) = (term557 _146290 _146293 H' g P G f lt2).
Proof. exact (@lem8358684 _146293 (term533 _146293 lt2) (term522 _146290 _146293 H' g P G f lt2)). Qed.
Lemma lem8358686 {_146290 _146293 : Type'} (H' : type796 _146290 _146293) (g : _146293 -> _146290) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (f : _146293 -> _146290) (lt2 : type1402 _146293) (x : _146293) : (term558 _146290 _146293 H' g P G f lt2 x) = (term521 _146290 _146293 H' g P G f lt2 x).
Proof. exact (eq_refl (term558 _146290 _146293 H' g P G f lt2 x)). Qed.
Lemma lem8358687 {_146290 _146293 : Type'} (H' : type796 _146290 _146293) (g : _146293 -> _146290) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (f : _146293 -> _146290) (lt2 : type1402 _146293) : (term559 _146290 _146293 H' g P G f lt2) = (term522 _146290 _146293 H' g P G f lt2).
Proof. exact (fun_ext (fun x : _146293 => @lem8358686 _146290 _146293 H' g P G f lt2 x)). Qed.
Lemma lem8358688 {_146293 : Type'} : (@ex _146293) = (@ex _146293).
Proof. exact (eq_refl (@ex _146293)). Qed.
Lemma lem8358689 {_146290 _146293 : Type'} (H' : type796 _146290 _146293) (g : _146293 -> _146290) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (f : _146293 -> _146290) (lt2 : type1402 _146293) : (term560 _146290 _146293 H' g P G f lt2) = (term523 _146290 _146293 H' g P G f lt2).
Proof. exact (MK_COMB (@lem8358688 _146293) (@lem8358687 _146290 _146293 H' g P G f lt2)). Qed.
Lemma lem8358690 {_146293 : Type'} (lt2 : type1402 _146293) : (term375 _146293 lt2) = (term375 _146293 lt2).
Proof. exact (eq_refl (term375 _146293 lt2)). Qed.
Lemma lem8358691 {_146290 _146293 : Type'} (H' : type796 _146290 _146293) (g : _146293 -> _146290) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (f : _146293 -> _146290) (lt2 : type1402 _146293) : (term556 _146290 _146293 H' g P G f lt2) = (term552 _146290 _146293 H' g P G f lt2).
Proof. exact (MK_COMB (@lem8358690 _146293 lt2) (@lem8358689 _146290 _146293 H' g P G f lt2)). Qed.
Lemma lem8358692 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8358693 {_146290 _146293 : Type'} (H' : type796 _146290 _146293) (g : _146293 -> _146290) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (f : _146293 -> _146290) (lt2 : type1402 _146293) : (term561 _146290 _146293 H' g P G f lt2) = (term562 _146290 _146293 H' g P G f lt2).
Proof. exact (MK_COMB (@lem8358692) (@lem8358691 _146290 _146293 H' g P G f lt2)). Qed.
Lemma lem8358694 {_146290 _146293 : Type'} (H' : type796 _146290 _146293) (g : _146293 -> _146290) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (f : _146293 -> _146290) (lt2 : type1402 _146293) (x : _146293) : (term558 _146290 _146293 H' g P G f lt2 x) = (term521 _146290 _146293 H' g P G f lt2 x).
Proof. exact (eq_refl (term558 _146290 _146293 H' g P G f lt2 x)). Qed.
Lemma lem8358695 {_146293 : Type'} (lt2 : type1402 _146293) : (term375 _146293 lt2) = (term375 _146293 lt2).
Proof. exact (eq_refl (term375 _146293 lt2)). Qed.
Lemma lem8358696 {_146290 _146293 : Type'} (H' : type796 _146290 _146293) (g : _146293 -> _146290) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (f : _146293 -> _146290) (lt2 : type1402 _146293) (x : _146293) : (term563 _146290 _146293 H' g P G f lt2 x) = (term564 _146290 _146293 H' g P G f lt2 x).
Proof. exact (MK_COMB (@lem8358695 _146293 lt2) (@lem8358694 _146290 _146293 H' g P G f lt2 x)). Qed.
Lemma lem8358697 {_146290 _146293 : Type'} (H' : type796 _146290 _146293) (g : _146293 -> _146290) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (f : _146293 -> _146290) (lt2 : type1402 _146293) : (term565 _146290 _146293 H' g P G f lt2) = (term566 _146290 _146293 H' g P G f lt2).
Proof. exact (fun_ext (fun x : _146293 => @lem8358696 _146290 _146293 H' g P G f lt2 x)). Qed.
Lemma lem8358698 {_146293 : Type'} : (@ex _146293) = (@ex _146293).
Proof. exact (eq_refl (@ex _146293)). Qed.
Lemma lem8358699 {_146290 _146293 : Type'} (H' : type796 _146290 _146293) (g : _146293 -> _146290) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (f : _146293 -> _146290) (lt2 : type1402 _146293) : (term557 _146290 _146293 H' g P G f lt2) = (term567 _146290 _146293 H' g P G f lt2).
Proof. exact (MK_COMB (@lem8358698 _146293) (@lem8358697 _146290 _146293 H' g P G f lt2)). Qed.
Lemma lem8358700 {_146290 _146293 : Type'} (H' : type796 _146290 _146293) (g : _146293 -> _146290) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (f : _146293 -> _146290) (lt2 : type1402 _146293) : ((term556 _146290 _146293 H' g P G f lt2) = (term557 _146290 _146293 H' g P G f lt2)) = ((term552 _146290 _146293 H' g P G f lt2) = (term567 _146290 _146293 H' g P G f lt2)).
Proof. exact (MK_COMB (@lem8358693 _146290 _146293 H' g P G f lt2) (@lem8358699 _146290 _146293 H' g P G f lt2)). Qed.
Lemma lem8358701 {_146290 _146293 : Type'} (H' : type796 _146290 _146293) (g : _146293 -> _146290) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (f : _146293 -> _146290) (lt2 : type1402 _146293) : (term552 _146290 _146293 H' g P G f lt2) = (term567 _146290 _146293 H' g P G f lt2).
Proof. exact (EQ_MP (@lem8358700 _146290 _146293 H' g P G f lt2) (@lem8358685 _146290 _146293 H' g P G f lt2)). Qed.
Lemma lem8358703 {A : Type'} (P : Prop) (Q : A -> Prop) : (term435 A P Q) = (term436 A P Q).
Proof. exact (EQ_MP (@lem18911 A P Q) (@lem18910 A P Q)). Qed.
Lemma lem8358704 {_146293 : Type'} (P : Prop) (Q : _146293 -> Prop) : (term435 _146293 P Q) = (term436 _146293 P Q).
Proof. exact (@lem8358703 _146293 P Q). Qed.
Lemma lem8358705 {_146290 _146293 : Type'} (H' : type796 _146290 _146293) (g : _146293 -> _146290) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (f : _146293 -> _146290) (lt2 : type1402 _146293) (x : _146293) : (term568 _146290 _146293 H' g P G f lt2 x) = (term569 _146290 _146293 H' g P G f lt2 x).
Proof. exact (@lem8358704 _146293 (term533 _146293 lt2) (term520 _146290 _146293 H' g P G f lt2 x)). Qed.
Lemma lem8358706 {_146290 _146293 : Type'} (H' : type796 _146290 _146293) (g : _146293 -> _146290) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (f : _146293 -> _146290) (lt2 : type1402 _146293) (y : _146293) (x : _146293) : (term570 _146290 _146293 H' g P G f lt2 x y) = (term518 _146290 _146293 H' g P G f lt2 y x).
Proof. exact (eq_refl (term570 _146290 _146293 H' g P G f lt2 x y)). Qed.
Lemma lem8358707 {_146290 _146293 : Type'} (H' : type796 _146290 _146293) (g : _146293 -> _146290) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (f : _146293 -> _146290) (lt2 : type1402 _146293) (x : _146293) : (term571 _146290 _146293 H' g P G f lt2 x) = (term520 _146290 _146293 H' g P G f lt2 x).
Proof. exact (fun_ext (fun y : _146293 => @lem8358706 _146290 _146293 H' g P G f lt2 y x)). Qed.
Lemma lem8358708 {_146293 : Type'} : (@ex _146293) = (@ex _146293).
Proof. exact (eq_refl (@ex _146293)). Qed.
Lemma lem8358709 {_146290 _146293 : Type'} (H' : type796 _146290 _146293) (g : _146293 -> _146290) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (f : _146293 -> _146290) (lt2 : type1402 _146293) (x : _146293) : (term572 _146290 _146293 H' g P G f lt2 x) = (term521 _146290 _146293 H' g P G f lt2 x).
Proof. exact (MK_COMB (@lem8358708 _146293) (@lem8358707 _146290 _146293 H' g P G f lt2 x)). Qed.
Lemma lem8358710 {_146293 : Type'} (lt2 : type1402 _146293) : (term375 _146293 lt2) = (term375 _146293 lt2).
Proof. exact (eq_refl (term375 _146293 lt2)). Qed.
Lemma lem8358711 {_146290 _146293 : Type'} (H' : type796 _146290 _146293) (g : _146293 -> _146290) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (f : _146293 -> _146290) (lt2 : type1402 _146293) (x : _146293) : (term568 _146290 _146293 H' g P G f lt2 x) = (term564 _146290 _146293 H' g P G f lt2 x).
Proof. exact (MK_COMB (@lem8358710 _146293 lt2) (@lem8358709 _146290 _146293 H' g P G f lt2 x)). Qed.
Lemma lem8358712 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8358713 {_146290 _146293 : Type'} (H' : type796 _146290 _146293) (g : _146293 -> _146290) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (f : _146293 -> _146290) (lt2 : type1402 _146293) (x : _146293) : (term573 _146290 _146293 H' g P G f lt2 x) = (term574 _146290 _146293 H' g P G f lt2 x).
Proof. exact (MK_COMB (@lem8358712) (@lem8358711 _146290 _146293 H' g P G f lt2 x)). Qed.
Lemma lem8358714 {_146290 _146293 : Type'} (H' : type796 _146290 _146293) (g : _146293 -> _146290) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (f : _146293 -> _146290) (lt2 : type1402 _146293) (y : _146293) (x : _146293) : (term570 _146290 _146293 H' g P G f lt2 x y) = (term518 _146290 _146293 H' g P G f lt2 y x).
Proof. exact (eq_refl (term570 _146290 _146293 H' g P G f lt2 x y)). Qed.
Lemma lem8358715 {_146293 : Type'} (lt2 : type1402 _146293) : (term375 _146293 lt2) = (term375 _146293 lt2).
Proof. exact (eq_refl (term375 _146293 lt2)). Qed.
Lemma lem8358716 {_146290 _146293 : Type'} (H' : type796 _146290 _146293) (g : _146293 -> _146290) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (f : _146293 -> _146290) (lt2 : type1402 _146293) (y : _146293) (x : _146293) : (term575 _146290 _146293 H' g P G f lt2 x y) = (term576 _146290 _146293 H' g P G f lt2 y x).
Proof. exact (MK_COMB (@lem8358715 _146293 lt2) (@lem8358714 _146290 _146293 H' g P G f lt2 y x)). Qed.
Lemma lem8358717 {_146290 _146293 : Type'} (H' : type796 _146290 _146293) (g : _146293 -> _146290) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (f : _146293 -> _146290) (lt2 : type1402 _146293) (x : _146293) : (term577 _146290 _146293 H' g P G f lt2 x) = (term578 _146290 _146293 H' g P G f lt2 x).
Proof. exact (fun_ext (fun y : _146293 => @lem8358716 _146290 _146293 H' g P G f lt2 y x)). Qed.
Lemma lem8358718 {_146293 : Type'} : (@ex _146293) = (@ex _146293).
Proof. exact (eq_refl (@ex _146293)). Qed.
Lemma lem8358719 {_146290 _146293 : Type'} (H' : type796 _146290 _146293) (g : _146293 -> _146290) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (f : _146293 -> _146290) (lt2 : type1402 _146293) (x : _146293) : (term569 _146290 _146293 H' g P G f lt2 x) = (term579 _146290 _146293 H' g P G f lt2 x).
Proof. exact (MK_COMB (@lem8358718 _146293) (@lem8358717 _146290 _146293 H' g P G f lt2 x)). Qed.
Lemma lem8358720 {_146290 _146293 : Type'} (H' : type796 _146290 _146293) (g : _146293 -> _146290) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (f : _146293 -> _146290) (lt2 : type1402 _146293) (x : _146293) : ((term568 _146290 _146293 H' g P G f lt2 x) = (term569 _146290 _146293 H' g P G f lt2 x)) = ((term564 _146290 _146293 H' g P G f lt2 x) = (term579 _146290 _146293 H' g P G f lt2 x)).
Proof. exact (MK_COMB (@lem8358713 _146290 _146293 H' g P G f lt2 x) (@lem8358719 _146290 _146293 H' g P G f lt2 x)). Qed.
Lemma lem8358721 {_146290 _146293 : Type'} (H' : type796 _146290 _146293) (g : _146293 -> _146290) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (f : _146293 -> _146290) (lt2 : type1402 _146293) (x : _146293) : (term564 _146290 _146293 H' g P G f lt2 x) = (term579 _146290 _146293 H' g P G f lt2 x).
Proof. exact (EQ_MP (@lem8358720 _146290 _146293 H' g P G f lt2 x) (@lem8358705 _146290 _146293 H' g P G f lt2 x)). Qed.
Lemma lem8358722 {_146290 _146293 : Type'} (H' : type796 _146290 _146293) (g : _146293 -> _146290) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (f : _146293 -> _146290) (lt2 : type1402 _146293) : (term566 _146290 _146293 H' g P G f lt2) = (term580 _146290 _146293 H' g P G f lt2).
Proof. exact (fun_ext (fun x : _146293 => @lem8358721 _146290 _146293 H' g P G f lt2 x)). Qed.
Lemma lem8358723 {_146293 : Type'} : (@ex _146293) = (@ex _146293).
Proof. exact (eq_refl (@ex _146293)). Qed.
Lemma lem8358724 {_146290 _146293 : Type'} (H' : type796 _146290 _146293) (g : _146293 -> _146290) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (f : _146293 -> _146290) (lt2 : type1402 _146293) : (term567 _146290 _146293 H' g P G f lt2) = (term581 _146290 _146293 H' g P G f lt2).
Proof. exact (MK_COMB (@lem8358723 _146293) (@lem8358722 _146290 _146293 H' g P G f lt2)). Qed.
Lemma lem8358725 {_146290 _146293 : Type'} (H' : type796 _146290 _146293) (g : _146293 -> _146290) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (f : _146293 -> _146290) (lt2 : type1402 _146293) : (term552 _146290 _146293 H' g P G f lt2) = (term581 _146290 _146293 H' g P G f lt2).
Proof. exact (TRANS (@lem8358701 _146290 _146293 H' g P G f lt2) (@lem8358724 _146290 _146293 H' g P G f lt2)). Qed.
Lemma lem8358726 {_146290 _146293 : Type'} (H' : type796 _146290 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (f : _146293 -> _146290) (lt2 : type1402 _146293) : (term554 _146290 _146293 H' P G f lt2) = (term582 _146290 _146293 H' P G f lt2).
Proof. exact (fun_ext (fun g : _146293 -> _146290 => @lem8358725 _146290 _146293 H' g P G f lt2)). Qed.
Lemma lem8358727 {_146290 _146293 : Type'} : (@ex (_146293 -> _146290)) = (@ex (_146293 -> _146290)).
Proof. exact (eq_refl (@ex (_146293 -> _146290))). Qed.
Lemma lem8358728 {_146290 _146293 : Type'} (H' : type796 _146290 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (f : _146293 -> _146290) (lt2 : type1402 _146293) : (term555 _146290 _146293 H' P G f lt2) = (term583 _146290 _146293 H' P G f lt2).
Proof. exact (MK_COMB (@lem8358727 _146290 _146293) (@lem8358726 _146290 _146293 H' P G f lt2)). Qed.
Lemma lem8358729 {_146290 _146293 : Type'} (H' : type796 _146290 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (f : _146293 -> _146290) (lt2 : type1402 _146293) : (term540 _146290 _146293 H' P G f lt2) = (term583 _146290 _146293 H' P G f lt2).
Proof. exact (TRANS (@lem8358681 _146290 _146293 H' P G f lt2) (@lem8358728 _146290 _146293 H' P G f lt2)). Qed.
Lemma lem8358730 {_146290 _146293 : Type'} (H' : type796 _146290 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (lt2 : type1402 _146293) : (term542 _146290 _146293 H' P G lt2) = (term584 _146290 _146293 H' P G lt2).
Proof. exact (fun_ext (fun f : _146293 -> _146290 => @lem8358729 _146290 _146293 H' P G f lt2)). Qed.
Lemma lem8358731 {_146290 _146293 : Type'} : (@ex (_146293 -> _146290)) = (@ex (_146293 -> _146290)).
Proof. exact (eq_refl (@ex (_146293 -> _146290))). Qed.
Lemma lem8358732 {_146290 _146293 : Type'} (H' : type796 _146290 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (lt2 : type1402 _146293) : (term543 _146290 _146293 H' P G lt2) = (term585 _146290 _146293 H' P G lt2).
Proof. exact (MK_COMB (@lem8358731 _146290 _146293) (@lem8358730 _146290 _146293 H' P G lt2)). Qed.
Lemma lem8358733 {_146290 _146293 : Type'} (H' : type796 _146290 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (lt2 : type1402 _146293) : (term528 _146290 _146293 H' P G lt2) = (term585 _146290 _146293 H' P G lt2).
Proof. exact (TRANS (@lem8358661 _146290 _146293 H' P G lt2) (@lem8358732 _146290 _146293 H' P G lt2)). Qed.
Lemma lem8358735 {_146290 _146293 : Type'} (H' : type796 _146290 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (lt2 : type1402 _146293) : (term377 _146290 _146293 H' P G lt2) = (term585 _146290 _146293 H' P G lt2).
Proof. exact (TRANS (@lem8358641 _146290 _146293 H' P G lt2) (@lem8358733 _146290 _146293 H' P G lt2)). Qed.
Lemma lem8358736 {_146290 _146293 : Type'} (H' : type796 _146290 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (lt2 : type1402 _146293) : (term41 _146290 _146293 H' P G lt2) = (term585 _146290 _146293 H' P G lt2).
Proof. exact (TRANS (@lem8358146 _146290 _146293 H' P G lt2) (@lem8358735 _146290 _146293 H' P G lt2)). Qed.
Lemma lem8358737 {_146290 _146293 : Type'} (H' : type796 _146290 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (lt2 : type1402 _146293) (h1 : term41 _146290 _146293 H' P G lt2) : term585 _146290 _146293 H' P G lt2.
Proof. exact (EQ_MP (@lem8358736 _146290 _146293 H' P G lt2) (@lem8357309 _146290 _146293 H' P G lt2 h1)). Qed.
Lemma lem8358738 {_146290 _146293 : Type'} (H' : type796 _146290 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (f : _146293 -> _146290) (lt2 : type1402 _146293) (h1 : term583 _146290 _146293 H' P G f lt2) : term583 _146290 _146293 H' P G f lt2.
Proof. exact (h1). Qed.
Lemma lem8358739 {_146290 _146293 : Type'} (H' : type796 _146290 _146293) (g : _146293 -> _146290) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (f : _146293 -> _146290) (lt2 : type1402 _146293) (h1 : term581 _146290 _146293 H' g P G f lt2) : term581 _146290 _146293 H' g P G f lt2.
Proof. exact (h1). Qed.
Lemma lem8358740 {_146290 _146293 : Type'} (H' : type796 _146290 _146293) (g : _146293 -> _146290) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (f : _146293 -> _146290) (lt2 : type1402 _146293) (x : _146293) (h1 : term579 _146290 _146293 H' g P G f lt2 x) : term579 _146290 _146293 H' g P G f lt2 x.
Proof. exact (h1). Qed.
Lemma lem8358741 {_146290 _146293 : Type'} (H' : type796 _146290 _146293) (g : _146293 -> _146290) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (f : _146293 -> _146290) (lt2 : type1402 _146293) (y : _146293) (x : _146293) (h1 : term576 _146290 _146293 H' g P G f lt2 y x) : term576 _146290 _146293 H' g P G f lt2 y x.
Proof. exact (h1). Qed.
Lemma lem8358742 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (z : type784 _146290 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (H' : type796 _146290 _146293) (h1 : term259 _146290 _146293 lt2 z P G H') : term259 _146290 _146293 lt2 z P G H'.
Proof. exact (h1). Qed.
Lemma lem8358747 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8358748 {_146293 : Type'} (f : type421 _146293) (x : type1402 _146293) : (f x) = (@I ((_146293 -> _146293 -> Prop) -> Prop) f x).
Proof. exact (@lem8358747 (type1402 _146293) Prop f x). Qed.
Lemma lem8358750 {_146293 : Type'} (lt2 : type1402 _146293) : (@WF _146293 lt2) = (@I ((_146293 -> _146293 -> Prop) -> Prop) (@WF _146293) lt2).
Proof. exact (@lem8358748 _146293 (@WF _146293) lt2). Qed.
Lemma lem8358758 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8358759 {_146293 : Type'} (f : type1402 _146293) (x : _146293) : (f x) = (@I (_146293 -> _146293 -> Prop) f x).
Proof. exact (@lem8358758 _146293 (_146293 -> Prop) f x). Qed.
Lemma lem8358760 {_146293 : Type'} (lt2 : type1402 _146293) (y : _146293) : (lt2 y) = (@I (_146293 -> _146293 -> Prop) lt2 y).
Proof. exact (@lem8358759 _146293 lt2 y). Qed.
Lemma lem8358761 {_146293 : Type'} (x : _146293) : x = x.
Proof. exact (eq_refl x). Qed.
Lemma lem8358762 {_146293 : Type'} (lt2 : type1402 _146293) (y : _146293) (x : _146293) : (lt2 y x) = (@I (_146293 -> _146293 -> Prop) lt2 y x).
Proof. exact (MK_COMB (@lem8358760 _146293 lt2 y) (@lem8358761 _146293 x)). Qed.
Lemma lem8358764 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8358765 {_146293 : Type'} (f : _146293 -> Prop) (x : _146293) : (f x) = (@I (_146293 -> Prop) f x).
Proof. exact (@lem8358764 _146293 Prop f x). Qed.
Lemma lem8358766 {_146293 : Type'} (lt2 : type1402 _146293) (y : _146293) (x : _146293) : (@I (_146293 -> _146293 -> Prop) lt2 y x) = (term586 _146293 lt2 y x).
Proof. exact (@lem8358765 _146293 (@I (_146293 -> _146293 -> Prop) lt2 y) x). Qed.
Lemma lem8358768 {_146293 : Type'} (lt2 : type1402 _146293) (y : _146293) (x : _146293) : (lt2 y x) = (term586 _146293 lt2 y x).
Proof. exact (TRANS (@lem8358762 _146293 lt2 y x) (@lem8358766 _146293 lt2 y x)). Qed.
Lemma lem8358769 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem8358778 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8358779 {_146290 _146293 : Type'} (f : type797 _146290 _146293) (x : _146293 -> _146290) : (f x) = (@I ((_146293 -> _146290) -> _146293 -> _146293) f x).
Proof. exact (@lem8358778 (_146293 -> _146290) (_146293 -> _146293) f x). Qed.
Lemma lem8358780 {_146290 _146293 : Type'} (G : type797 _146290 _146293) (f : _146293 -> _146290) : (G f) = (@I ((_146293 -> _146290) -> _146293 -> _146293) G f).
Proof. exact (@lem8358779 _146290 _146293 G f). Qed.
Lemma lem8358781 {_146293 : Type'} (x : _146293) : x = x.
Proof. exact (eq_refl x). Qed.
Lemma lem8358782 {_146290 _146293 : Type'} (G : type797 _146290 _146293) (f : _146293 -> _146290) (x : _146293) : (G f x) = (@I ((_146293 -> _146290) -> _146293 -> _146293) G f x).
Proof. exact (MK_COMB (@lem8358780 _146290 _146293 G f) (@lem8358781 _146293 x)). Qed.
Lemma lem8358784 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8358785 {_146293 : Type'} (f : _146293 -> _146293) (x : _146293) : (f x) = (@I (_146293 -> _146293) f x).
Proof. exact (@lem8358784 _146293 _146293 f x). Qed.
Lemma lem8358786 {_146290 _146293 : Type'} (G : type797 _146290 _146293) (f : _146293 -> _146290) (x : _146293) : (@I ((_146293 -> _146290) -> _146293 -> _146293) G f x) = (term587 _146290 _146293 G f x).
Proof. exact (@lem8358785 _146293 (@I ((_146293 -> _146290) -> _146293 -> _146293) G f) x). Qed.
Lemma lem8358788 {_146290 _146293 : Type'} (G : type797 _146290 _146293) (f : _146293 -> _146290) (x : _146293) : (G f x) = (term587 _146290 _146293 G f x).
Proof. exact (TRANS (@lem8358782 _146290 _146293 G f x) (@lem8358786 _146290 _146293 G f x)). Qed.
Lemma lem8358789 {_146293 : Type'} (lt2 : type1402 _146293) (y : _146293) : (lt2 y) = (lt2 y).
Proof. exact (eq_refl (lt2 y)). Qed.
Lemma lem8358790 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (y : _146293) (G : type797 _146290 _146293) (f : _146293 -> _146290) (x : _146293) : (term265 _146290 _146293 lt2 y G f x) = (term588 _146290 _146293 lt2 y G f x).
Proof. exact (MK_COMB (@lem8358789 _146293 lt2 y) (@lem8358788 _146290 _146293 G f x)). Qed.
Lemma lem8358792 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8358793 {_146293 : Type'} (f : type1402 _146293) (x : _146293) : (f x) = (@I (_146293 -> _146293 -> Prop) f x).
Proof. exact (@lem8358792 _146293 (_146293 -> Prop) f x). Qed.
Lemma lem8358794 {_146293 : Type'} (lt2 : type1402 _146293) (y : _146293) : (lt2 y) = (@I (_146293 -> _146293 -> Prop) lt2 y).
Proof. exact (@lem8358793 _146293 lt2 y). Qed.
Lemma lem8358795 {_146290 _146293 : Type'} (G : type797 _146290 _146293) (f : _146293 -> _146290) (x : _146293) : (term587 _146290 _146293 G f x) = (term587 _146290 _146293 G f x).
Proof. exact (eq_refl (term587 _146290 _146293 G f x)). Qed.
Lemma lem8358796 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (y : _146293) (G : type797 _146290 _146293) (f : _146293 -> _146290) (x : _146293) : (term588 _146290 _146293 lt2 y G f x) = (term589 _146290 _146293 lt2 y G f x).
Proof. exact (MK_COMB (@lem8358794 _146293 lt2 y) (@lem8358795 _146290 _146293 G f x)). Qed.
Lemma lem8358798 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8358799 {_146293 : Type'} (f : _146293 -> Prop) (x : _146293) : (f x) = (@I (_146293 -> Prop) f x).
Proof. exact (@lem8358798 _146293 Prop f x). Qed.
Lemma lem8358800 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (y : _146293) (G : type797 _146290 _146293) (f : _146293 -> _146290) (x : _146293) : (term589 _146290 _146293 lt2 y G f x) = (term590 _146290 _146293 lt2 y G f x).
Proof. exact (@lem8358799 _146293 (@I (_146293 -> _146293 -> Prop) lt2 y) (term587 _146290 _146293 G f x)). Qed.
Lemma lem8358801 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (y : _146293) (G : type797 _146290 _146293) (f : _146293 -> _146290) (x : _146293) : (term588 _146290 _146293 lt2 y G f x) = (term590 _146290 _146293 lt2 y G f x).
Proof. exact (TRANS (@lem8358796 _146290 _146293 lt2 y G f x) (@lem8358800 _146290 _146293 lt2 y G f x)). Qed.
Lemma lem8358802 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (y : _146293) (G : type797 _146290 _146293) (f : _146293 -> _146290) (x : _146293) : (term265 _146290 _146293 lt2 y G f x) = (term590 _146290 _146293 lt2 y G f x).
Proof. exact (TRANS (@lem8358790 _146290 _146293 lt2 y G f x) (@lem8358801 _146290 _146293 lt2 y G f x)). Qed.
Lemma lem8358803 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (y : _146293) (G : type797 _146290 _146293) (f : _146293 -> _146290) (x : _146293) : (term591 _146290 _146293 lt2 y G f x) = (term592 _146290 _146293 lt2 y G f x).
Proof. exact (MK_COMB (@lem8358769) (@lem8358802 _146290 _146293 lt2 y G f x)). Qed.
Lemma lem8358804 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem8358811 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8358812 {_146290 _146293 : Type'} (f : type799 _146290 _146293) (x : _146293 -> _146290) : (f x) = (@I ((_146293 -> _146290) -> _146293 -> Prop) f x).
Proof. exact (@lem8358811 (_146293 -> _146290) (_146293 -> Prop) f x). Qed.
Lemma lem8358813 {_146290 _146293 : Type'} (P : type799 _146290 _146293) (f : _146293 -> _146290) : (P f) = (@I ((_146293 -> _146290) -> _146293 -> Prop) P f).
Proof. exact (@lem8358812 _146290 _146293 P f). Qed.
Lemma lem8358814 {_146293 : Type'} (x : _146293) : x = x.
Proof. exact (eq_refl x). Qed.
Lemma lem8358815 {_146290 _146293 : Type'} (P : type799 _146290 _146293) (f : _146293 -> _146290) (x : _146293) : (P f x) = (@I ((_146293 -> _146290) -> _146293 -> Prop) P f x).
Proof. exact (MK_COMB (@lem8358813 _146290 _146293 P f) (@lem8358814 _146293 x)). Qed.
Lemma lem8358817 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8358818 {_146293 : Type'} (f : _146293 -> Prop) (x : _146293) : (f x) = (@I (_146293 -> Prop) f x).
Proof. exact (@lem8358817 _146293 Prop f x). Qed.
Lemma lem8358819 {_146290 _146293 : Type'} (P : type799 _146290 _146293) (f : _146293 -> _146290) (x : _146293) : (@I ((_146293 -> _146290) -> _146293 -> Prop) P f x) = (term593 _146290 _146293 P f x).
Proof. exact (@lem8358818 _146293 (@I ((_146293 -> _146290) -> _146293 -> Prop) P f) x). Qed.
Lemma lem8358821 {_146290 _146293 : Type'} (P : type799 _146290 _146293) (f : _146293 -> _146290) (x : _146293) : (P f x) = (term593 _146290 _146293 P f x).
Proof. exact (TRANS (@lem8358815 _146290 _146293 P f x) (@lem8358819 _146290 _146293 P f x)). Qed.
Lemma lem8358822 {_146290 _146293 : Type'} (P : type799 _146290 _146293) (f : _146293 -> _146290) (x : _146293) : (term594 _146290 _146293 P f x) = (term595 _146290 _146293 P f x).
Proof. exact (MK_COMB (@lem8358804) (@lem8358821 _146290 _146293 P f x)). Qed.
Lemma lem8358823 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8358824 {_146290 _146293 : Type'} (P : type799 _146290 _146293) (f : _146293 -> _146290) (x : _146293) : (term596 _146290 _146293 P f x) = (term597 _146290 _146293 P f x).
Proof. exact (MK_COMB (@lem8358823) (@lem8358822 _146290 _146293 P f x)). Qed.
Lemma lem8358825 {_146290 _146293 : Type'} (P : type799 _146290 _146293) (lt2 : type1402 _146293) (y : _146293) (G : type797 _146290 _146293) (f : _146293 -> _146290) (x : _146293) : (term264 _146290 _146293 P lt2 y G f x) = (term598 _146290 _146293 P lt2 y G f x).
Proof. exact (MK_COMB (@lem8358824 _146290 _146293 P f x) (@lem8358803 _146290 _146293 lt2 y G f x)). Qed.
Lemma lem8358826 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8358827 {_146290 _146293 : Type'} (P : type799 _146290 _146293) (lt2 : type1402 _146293) (y : _146293) (G : type797 _146290 _146293) (f : _146293 -> _146290) (x : _146293) : (term267 _146290 _146293 P lt2 y G f x) = (term599 _146290 _146293 P lt2 y G f x).
Proof. exact (MK_COMB (@lem8358826) (@lem8358825 _146290 _146293 P lt2 y G f x)). Qed.
Lemma lem8358828 {_146290 _146293 : Type'} (P : type799 _146290 _146293) (G : type797 _146290 _146293) (f : _146293 -> _146290) (lt2 : type1402 _146293) (y : _146293) (x : _146293) : (term269 _146290 _146293 P G f lt2 y x) = (term600 _146290 _146293 P G f lt2 y x).
Proof. exact (MK_COMB (@lem8358827 _146290 _146293 P lt2 y G f x) (@lem8358768 _146293 lt2 y x)). Qed.
Lemma lem8358829 {_146290 _146293 : Type'} (P : type799 _146290 _146293) (G : type797 _146290 _146293) (f : _146293 -> _146290) (lt2 : type1402 _146293) (x : _146293) : (term271 _146290 _146293 P G f lt2 x) = (term601 _146290 _146293 P G f lt2 x).
Proof. exact (fun_ext (fun y : _146293 => @lem8358828 _146290 _146293 P G f lt2 y x)). Qed.
Lemma lem8358830 {_146293 : Type'} : (@all _146293) = (@all _146293).
Proof. exact (eq_refl (@all _146293)). Qed.
Lemma lem8358831 {_146290 _146293 : Type'} (P : type799 _146290 _146293) (G : type797 _146290 _146293) (f : _146293 -> _146290) (lt2 : type1402 _146293) (x : _146293) : (term272 _146290 _146293 P G f lt2 x) = (term602 _146290 _146293 P G f lt2 x).
Proof. exact (MK_COMB (@lem8358830 _146293) (@lem8358829 _146290 _146293 P G f lt2 x)). Qed.
Lemma lem8358832 {_146290 _146293 : Type'} (P : type799 _146290 _146293) (G : type797 _146290 _146293) (f : _146293 -> _146290) (lt2 : type1402 _146293) : (term273 _146290 _146293 P G f lt2) = (term603 _146290 _146293 P G f lt2).
Proof. exact (fun_ext (fun x : _146293 => @lem8358831 _146290 _146293 P G f lt2 x)). Qed.
Lemma lem8358833 {_146293 : Type'} : (@all _146293) = (@all _146293).
Proof. exact (eq_refl (@all _146293)). Qed.
Lemma lem8358834 {_146290 _146293 : Type'} (P : type799 _146290 _146293) (G : type797 _146290 _146293) (f : _146293 -> _146290) (lt2 : type1402 _146293) : (term274 _146290 _146293 P G f lt2) = (term604 _146290 _146293 P G f lt2).
Proof. exact (MK_COMB (@lem8358833 _146293) (@lem8358832 _146290 _146293 P G f lt2)). Qed.
Lemma lem8358835 {_146290 _146293 : Type'} (P : type799 _146290 _146293) (G : type797 _146290 _146293) (lt2 : type1402 _146293) : (term275 _146290 _146293 P G lt2) = (term605 _146290 _146293 P G lt2).
Proof. exact (fun_ext (fun f : _146293 -> _146290 => @lem8358834 _146290 _146293 P G f lt2)). Qed.
Lemma lem8358836 {_146290 _146293 : Type'} : (@all (_146293 -> _146290)) = (@all (_146293 -> _146290)).
Proof. exact (eq_refl (@all (_146293 -> _146290))). Qed.
Lemma lem8358837 {_146290 _146293 : Type'} (P : type799 _146290 _146293) (G : type797 _146290 _146293) (lt2 : type1402 _146293) : (term276 _146290 _146293 P G lt2) = (term606 _146290 _146293 P G lt2).
Proof. exact (MK_COMB (@lem8358836 _146290 _146293) (@lem8358835 _146290 _146293 P G lt2)). Qed.
Lemma lem8358838 {_146290 _146293 : Type'} (P : type799 _146290 _146293) (G : type797 _146290 _146293) (lt2 : type1402 _146293) (h1 : term23 _146290 _146293 P G lt2) : term606 _146290 _146293 P G lt2.
Proof. exact (EQ_MP (@lem8358837 _146290 _146293 P G lt2) (@lem8357686 _146290 _146293 P G lt2 h1)). Qed.
Lemma lem8358978 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem8358985 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8358986 {_146293 : Type'} (f : type1402 _146293) (x : _146293) : (f x) = (@I (_146293 -> _146293 -> Prop) f x).
Proof. exact (@lem8358985 _146293 (_146293 -> Prop) f x). Qed.
Lemma lem8358987 {_146293 : Type'} (lt2 : type1402 _146293) (y : _146293) : (lt2 y) = (@I (_146293 -> _146293 -> Prop) lt2 y).
Proof. exact (@lem8358986 _146293 lt2 y). Qed.
Lemma lem8358988 {_146293 : Type'} (x : _146293) : x = x.
Proof. exact (eq_refl x). Qed.
Lemma lem8358989 {_146293 : Type'} (lt2 : type1402 _146293) (y : _146293) (x : _146293) : (lt2 y x) = (@I (_146293 -> _146293 -> Prop) lt2 y x).
Proof. exact (MK_COMB (@lem8358987 _146293 lt2 y) (@lem8358988 _146293 x)). Qed.
Lemma lem8358991 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8358992 {_146293 : Type'} (f : _146293 -> Prop) (x : _146293) : (f x) = (@I (_146293 -> Prop) f x).
Proof. exact (@lem8358991 _146293 Prop f x). Qed.
Lemma lem8358993 {_146293 : Type'} (lt2 : type1402 _146293) (y : _146293) (x : _146293) : (@I (_146293 -> _146293 -> Prop) lt2 y x) = (term586 _146293 lt2 y x).
Proof. exact (@lem8358992 _146293 (@I (_146293 -> _146293 -> Prop) lt2 y) x). Qed.
Lemma lem8358995 {_146293 : Type'} (lt2 : type1402 _146293) (y : _146293) (x : _146293) : (lt2 y x) = (term586 _146293 lt2 y x).
Proof. exact (TRANS (@lem8358989 _146293 lt2 y x) (@lem8358993 _146293 lt2 y x)). Qed.
Lemma lem8358996 {_146293 : Type'} (lt2 : type1402 _146293) (y : _146293) (x : _146293) : (term607 _146293 lt2 y x) = (term608 _146293 lt2 y x).
Proof. exact (MK_COMB (@lem8358978) (@lem8358995 _146293 lt2 y x)). Qed.
Lemma lem8359005 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8359006 {_146290 _146293 : Type'} (f : type797 _146290 _146293) (x : _146293 -> _146290) : (f x) = (@I ((_146293 -> _146290) -> _146293 -> _146293) f x).
Proof. exact (@lem8359005 (_146293 -> _146290) (_146293 -> _146293) f x). Qed.
Lemma lem8359007 {_146290 _146293 : Type'} (G : type797 _146290 _146293) (f : _146293 -> _146290) : (G f) = (@I ((_146293 -> _146290) -> _146293 -> _146293) G f).
Proof. exact (@lem8359006 _146290 _146293 G f). Qed.
Lemma lem8359008 {_146293 : Type'} (x : _146293) : x = x.
Proof. exact (eq_refl x). Qed.
Lemma lem8359009 {_146290 _146293 : Type'} (G : type797 _146290 _146293) (f : _146293 -> _146290) (x : _146293) : (G f x) = (@I ((_146293 -> _146290) -> _146293 -> _146293) G f x).
Proof. exact (MK_COMB (@lem8359007 _146290 _146293 G f) (@lem8359008 _146293 x)). Qed.
Lemma lem8359011 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8359012 {_146293 : Type'} (f : _146293 -> _146293) (x : _146293) : (f x) = (@I (_146293 -> _146293) f x).
Proof. exact (@lem8359011 _146293 _146293 f x). Qed.
Lemma lem8359013 {_146290 _146293 : Type'} (G : type797 _146290 _146293) (f : _146293 -> _146290) (x : _146293) : (@I ((_146293 -> _146290) -> _146293 -> _146293) G f x) = (term587 _146290 _146293 G f x).
Proof. exact (@lem8359012 _146293 (@I ((_146293 -> _146290) -> _146293 -> _146293) G f) x). Qed.
Lemma lem8359015 {_146290 _146293 : Type'} (G : type797 _146290 _146293) (f : _146293 -> _146290) (x : _146293) : (G f x) = (term587 _146290 _146293 G f x).
Proof. exact (TRANS (@lem8359009 _146290 _146293 G f x) (@lem8359013 _146290 _146293 G f x)). Qed.
Lemma lem8359016 {_146293 : Type'} (lt2 : type1402 _146293) (y : _146293) : (lt2 y) = (lt2 y).
Proof. exact (eq_refl (lt2 y)). Qed.
Lemma lem8359017 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (y : _146293) (G : type797 _146290 _146293) (f : _146293 -> _146290) (x : _146293) : (term265 _146290 _146293 lt2 y G f x) = (term588 _146290 _146293 lt2 y G f x).
Proof. exact (MK_COMB (@lem8359016 _146293 lt2 y) (@lem8359015 _146290 _146293 G f x)). Qed.
Lemma lem8359019 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8359020 {_146293 : Type'} (f : type1402 _146293) (x : _146293) : (f x) = (@I (_146293 -> _146293 -> Prop) f x).
Proof. exact (@lem8359019 _146293 (_146293 -> Prop) f x). Qed.
Lemma lem8359021 {_146293 : Type'} (lt2 : type1402 _146293) (y : _146293) : (lt2 y) = (@I (_146293 -> _146293 -> Prop) lt2 y).
Proof. exact (@lem8359020 _146293 lt2 y). Qed.
Lemma lem8359022 {_146290 _146293 : Type'} (G : type797 _146290 _146293) (f : _146293 -> _146290) (x : _146293) : (term587 _146290 _146293 G f x) = (term587 _146290 _146293 G f x).
Proof. exact (eq_refl (term587 _146290 _146293 G f x)). Qed.
Lemma lem8359023 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (y : _146293) (G : type797 _146290 _146293) (f : _146293 -> _146290) (x : _146293) : (term588 _146290 _146293 lt2 y G f x) = (term589 _146290 _146293 lt2 y G f x).
Proof. exact (MK_COMB (@lem8359021 _146293 lt2 y) (@lem8359022 _146290 _146293 G f x)). Qed.
Lemma lem8359025 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8359026 {_146293 : Type'} (f : _146293 -> Prop) (x : _146293) : (f x) = (@I (_146293 -> Prop) f x).
Proof. exact (@lem8359025 _146293 Prop f x). Qed.
Lemma lem8359027 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (y : _146293) (G : type797 _146290 _146293) (f : _146293 -> _146290) (x : _146293) : (term589 _146290 _146293 lt2 y G f x) = (term590 _146290 _146293 lt2 y G f x).
Proof. exact (@lem8359026 _146293 (@I (_146293 -> _146293 -> Prop) lt2 y) (term587 _146290 _146293 G f x)). Qed.
Lemma lem8359028 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (y : _146293) (G : type797 _146290 _146293) (f : _146293 -> _146290) (x : _146293) : (term588 _146290 _146293 lt2 y G f x) = (term590 _146290 _146293 lt2 y G f x).
Proof. exact (TRANS (@lem8359023 _146290 _146293 lt2 y G f x) (@lem8359027 _146290 _146293 lt2 y G f x)). Qed.
Lemma lem8359029 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (y : _146293) (G : type797 _146290 _146293) (f : _146293 -> _146290) (x : _146293) : (term265 _146290 _146293 lt2 y G f x) = (term590 _146290 _146293 lt2 y G f x).
Proof. exact (TRANS (@lem8359017 _146290 _146293 lt2 y G f x) (@lem8359028 _146290 _146293 lt2 y G f x)). Qed.
Lemma lem8359036 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8359037 {_146290 _146293 : Type'} (f : type799 _146290 _146293) (x : _146293 -> _146290) : (f x) = (@I ((_146293 -> _146290) -> _146293 -> Prop) f x).
Proof. exact (@lem8359036 (_146293 -> _146290) (_146293 -> Prop) f x). Qed.
Lemma lem8359038 {_146290 _146293 : Type'} (P : type799 _146290 _146293) (f : _146293 -> _146290) : (P f) = (@I ((_146293 -> _146290) -> _146293 -> Prop) P f).
Proof. exact (@lem8359037 _146290 _146293 P f). Qed.
Lemma lem8359039 {_146293 : Type'} (x : _146293) : x = x.
Proof. exact (eq_refl x). Qed.
Lemma lem8359040 {_146290 _146293 : Type'} (P : type799 _146290 _146293) (f : _146293 -> _146290) (x : _146293) : (P f x) = (@I ((_146293 -> _146290) -> _146293 -> Prop) P f x).
Proof. exact (MK_COMB (@lem8359038 _146290 _146293 P f) (@lem8359039 _146293 x)). Qed.
Lemma lem8359042 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8359043 {_146293 : Type'} (f : _146293 -> Prop) (x : _146293) : (f x) = (@I (_146293 -> Prop) f x).
Proof. exact (@lem8359042 _146293 Prop f x). Qed.
Lemma lem8359044 {_146290 _146293 : Type'} (P : type799 _146290 _146293) (f : _146293 -> _146290) (x : _146293) : (@I ((_146293 -> _146290) -> _146293 -> Prop) P f x) = (term593 _146290 _146293 P f x).
Proof. exact (@lem8359043 _146293 (@I ((_146293 -> _146290) -> _146293 -> Prop) P f) x). Qed.
Lemma lem8359046 {_146290 _146293 : Type'} (P : type799 _146290 _146293) (f : _146293 -> _146290) (x : _146293) : (P f x) = (term593 _146290 _146293 P f x).
Proof. exact (TRANS (@lem8359040 _146290 _146293 P f x) (@lem8359044 _146290 _146293 P f x)). Qed.
Lemma lem8359047 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8359048 {_146290 _146293 : Type'} (P : type799 _146290 _146293) (f : _146293 -> _146290) (x : _146293) : (term609 _146290 _146293 P f x) = (term610 _146290 _146293 P f x).
Proof. exact (MK_COMB (@lem8359047) (@lem8359046 _146290 _146293 P f x)). Qed.
Lemma lem8359049 {_146290 _146293 : Type'} (P : type799 _146290 _146293) (lt2 : type1402 _146293) (y : _146293) (G : type797 _146290 _146293) (f : _146293 -> _146290) (x : _146293) : (term270 _146290 _146293 P lt2 y G f x) = (term611 _146290 _146293 P lt2 y G f x).
Proof. exact (MK_COMB (@lem8359048 _146290 _146293 P f x) (@lem8359029 _146290 _146293 lt2 y G f x)). Qed.
Lemma lem8359050 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8359051 {_146290 _146293 : Type'} (P : type799 _146290 _146293) (lt2 : type1402 _146293) (y : _146293) (G : type797 _146290 _146293) (f : _146293 -> _146290) (x : _146293) : (term612 _146290 _146293 P lt2 y G f x) = (term613 _146290 _146293 P lt2 y G f x).
Proof. exact (MK_COMB (@lem8359050) (@lem8359049 _146290 _146293 P lt2 y G f x)). Qed.
Lemma lem8359052 {_146290 _146293 : Type'} (P : type799 _146290 _146293) (G : type797 _146290 _146293) (f : _146293 -> _146290) (lt2 : type1402 _146293) (y : _146293) (x : _146293) : (term343 _146290 _146293 P G f lt2 y x) = (term614 _146290 _146293 P G f lt2 y x).
Proof. exact (MK_COMB (@lem8359051 _146290 _146293 P lt2 y G f x) (@lem8358996 _146293 lt2 y x)). Qed.
Lemma lem8359053 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem8359054 {_146290 : Type'} : (@eq _146290) = (@eq _146290).
Proof. exact (eq_refl (@eq _146290)). Qed.
Lemma lem8359061 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8359062 {_146290 _146293 : Type'} (f : type796 _146290 _146293) (x : _146293 -> _146290) : (f x) = (@I ((_146293 -> _146290) -> _146293 -> _146290) f x).
Proof. exact (@lem8359061 (_146293 -> _146290) (_146293 -> _146290) f x). Qed.
Lemma lem8359063 {_146290 _146293 : Type'} (H' : type796 _146290 _146293) (f : _146293 -> _146290) : (H' f) = (@I ((_146293 -> _146290) -> _146293 -> _146290) H' f).
Proof. exact (@lem8359062 _146290 _146293 H' f). Qed.
Lemma lem8359064 {_146293 : Type'} (x : _146293) : x = x.
Proof. exact (eq_refl x). Qed.
Lemma lem8359065 {_146290 _146293 : Type'} (H' : type796 _146290 _146293) (f : _146293 -> _146290) (x : _146293) : (H' f x) = (@I ((_146293 -> _146290) -> _146293 -> _146290) H' f x).
Proof. exact (MK_COMB (@lem8359063 _146290 _146293 H' f) (@lem8359064 _146293 x)). Qed.
Lemma lem8359067 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8359068 {_146290 _146293 : Type'} (f : _146293 -> _146290) (x : _146293) : (f x) = (@I (_146293 -> _146290) f x).
Proof. exact (@lem8359067 _146293 _146290 f x). Qed.
Lemma lem8359069 {_146290 _146293 : Type'} (H' : type796 _146290 _146293) (f : _146293 -> _146290) (x : _146293) : (@I ((_146293 -> _146290) -> _146293 -> _146290) H' f x) = (term615 _146290 _146293 H' f x).
Proof. exact (@lem8359068 _146290 _146293 (@I ((_146293 -> _146290) -> _146293 -> _146290) H' f) x). Qed.
Lemma lem8359071 {_146290 _146293 : Type'} (H' : type796 _146290 _146293) (f : _146293 -> _146290) (x : _146293) : (H' f x) = (term615 _146290 _146293 H' f x).
Proof. exact (TRANS (@lem8359065 _146290 _146293 H' f x) (@lem8359069 _146290 _146293 H' f x)). Qed.
Lemma lem8359078 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8359079 {_146290 _146293 : Type'} (f : type796 _146290 _146293) (x : _146293 -> _146290) : (f x) = (@I ((_146293 -> _146290) -> _146293 -> _146290) f x).
Proof. exact (@lem8359078 (_146293 -> _146290) (_146293 -> _146290) f x). Qed.
Lemma lem8359080 {_146290 _146293 : Type'} (H' : type796 _146290 _146293) (g : _146293 -> _146290) : (H' g) = (@I ((_146293 -> _146290) -> _146293 -> _146290) H' g).
Proof. exact (@lem8359079 _146290 _146293 H' g). Qed.
Lemma lem8359081 {_146293 : Type'} (x : _146293) : x = x.
Proof. exact (eq_refl x). Qed.
Lemma lem8359082 {_146290 _146293 : Type'} (H' : type796 _146290 _146293) (g : _146293 -> _146290) (x : _146293) : (H' g x) = (@I ((_146293 -> _146290) -> _146293 -> _146290) H' g x).
Proof. exact (MK_COMB (@lem8359080 _146290 _146293 H' g) (@lem8359081 _146293 x)). Qed.
Lemma lem8359084 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8359085 {_146290 _146293 : Type'} (f : _146293 -> _146290) (x : _146293) : (f x) = (@I (_146293 -> _146290) f x).
Proof. exact (@lem8359084 _146293 _146290 f x). Qed.
Lemma lem8359086 {_146290 _146293 : Type'} (H' : type796 _146290 _146293) (g : _146293 -> _146290) (x : _146293) : (@I ((_146293 -> _146290) -> _146293 -> _146290) H' g x) = (term615 _146290 _146293 H' g x).
Proof. exact (@lem8359085 _146290 _146293 (@I ((_146293 -> _146290) -> _146293 -> _146290) H' g) x). Qed.
Lemma lem8359088 {_146290 _146293 : Type'} (H' : type796 _146290 _146293) (g : _146293 -> _146290) (x : _146293) : (H' g x) = (term615 _146290 _146293 H' g x).
Proof. exact (TRANS (@lem8359082 _146290 _146293 H' g x) (@lem8359086 _146290 _146293 H' g x)). Qed.
Lemma lem8359089 {_146290 _146293 : Type'} (H' : type796 _146290 _146293) (f : _146293 -> _146290) (x : _146293) : (term113 _146290 _146293 H' f x) = (term616 _146290 _146293 H' f x).
Proof. exact (MK_COMB (@lem8359054 _146290) (@lem8359071 _146290 _146293 H' f x)). Qed.
Lemma lem8359090 {_146290 _146293 : Type'} (f : _146293 -> _146290) (H' : type796 _146290 _146293) (g : _146293 -> _146290) (x : _146293) : ((H' f x) = (H' g x)) = ((term615 _146290 _146293 H' f x) = (term615 _146290 _146293 H' g x)).
Proof. exact (MK_COMB (@lem8359089 _146290 _146293 H' f x) (@lem8359088 _146290 _146293 H' g x)). Qed.
Lemma lem8359091 {_146290 _146293 : Type'} (f : _146293 -> _146290) (H' : type796 _146290 _146293) (g : _146293 -> _146290) (x : _146293) : (term317 _146290 _146293 f H' g x) = (term617 _146290 _146293 f H' g x).
Proof. exact (MK_COMB (@lem8359053) (@lem8359090 _146290 _146293 f H' g x)). Qed.
Lemma lem8359092 {_146290 : Type'} : (@eq _146290) = (@eq _146290).
Proof. exact (eq_refl (@eq _146290)). Qed.
Lemma lem8359097 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8359098 {_146290 _146293 : Type'} (f : _146293 -> _146290) (x : _146293) : (f x) = (@I (_146293 -> _146290) f x).
Proof. exact (@lem8359097 _146293 _146290 f x). Qed.
Lemma lem8359100 {_146290 _146293 : Type'} (f : _146293 -> _146290) (z : _146293) : (f z) = (@I (_146293 -> _146290) f z).
Proof. exact (@lem8359098 _146290 _146293 f z). Qed.
Lemma lem8359105 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8359106 {_146290 _146293 : Type'} (f : _146293 -> _146290) (x : _146293) : (f x) = (@I (_146293 -> _146290) f x).
Proof. exact (@lem8359105 _146293 _146290 f x). Qed.
Lemma lem8359108 {_146290 _146293 : Type'} (g : _146293 -> _146290) (z : _146293) : (g z) = (@I (_146293 -> _146290) g z).
Proof. exact (@lem8359106 _146290 _146293 g z). Qed.
Lemma lem8359109 {_146290 _146293 : Type'} (f : _146293 -> _146290) (z : _146293) : (term28 _146290 _146293 f z) = (term618 _146290 _146293 f z).
Proof. exact (MK_COMB (@lem8359092 _146290) (@lem8359100 _146290 _146293 f z)). Qed.
Lemma lem8359110 {_146290 _146293 : Type'} (f : _146293 -> _146290) (g : _146293 -> _146290) (z : _146293) : ((f z) = (g z)) = ((@I (_146293 -> _146290) f z) = (@I (_146293 -> _146290) g z)).
Proof. exact (MK_COMB (@lem8359109 _146290 _146293 f z) (@lem8359108 _146290 _146293 g z)). Qed.
Lemma lem8359111 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem8359118 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8359119 {_146293 : Type'} (f : type1402 _146293) (x : _146293) : (f x) = (@I (_146293 -> _146293 -> Prop) f x).
Proof. exact (@lem8359118 _146293 (_146293 -> Prop) f x). Qed.
Lemma lem8359120 {_146293 : Type'} (lt2 : type1402 _146293) (z : _146293) : (lt2 z) = (@I (_146293 -> _146293 -> Prop) lt2 z).
Proof. exact (@lem8359119 _146293 lt2 z). Qed.
Lemma lem8359121 {_146293 : Type'} (x : _146293) : x = x.
Proof. exact (eq_refl x). Qed.
Lemma lem8359122 {_146293 : Type'} (lt2 : type1402 _146293) (z : _146293) (x : _146293) : (lt2 z x) = (@I (_146293 -> _146293 -> Prop) lt2 z x).
Proof. exact (MK_COMB (@lem8359120 _146293 lt2 z) (@lem8359121 _146293 x)). Qed.
Lemma lem8359124 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8359125 {_146293 : Type'} (f : _146293 -> Prop) (x : _146293) : (f x) = (@I (_146293 -> Prop) f x).
Proof. exact (@lem8359124 _146293 Prop f x). Qed.
Lemma lem8359126 {_146293 : Type'} (lt2 : type1402 _146293) (z : _146293) (x : _146293) : (@I (_146293 -> _146293 -> Prop) lt2 z x) = (term586 _146293 lt2 z x).
Proof. exact (@lem8359125 _146293 (@I (_146293 -> _146293 -> Prop) lt2 z) x). Qed.
Lemma lem8359128 {_146293 : Type'} (lt2 : type1402 _146293) (z : _146293) (x : _146293) : (lt2 z x) = (term586 _146293 lt2 z x).
Proof. exact (TRANS (@lem8359122 _146293 lt2 z x) (@lem8359126 _146293 lt2 z x)). Qed.
Lemma lem8359129 {_146293 : Type'} (lt2 : type1402 _146293) (z : _146293) (x : _146293) : (term607 _146293 lt2 z x) = (term608 _146293 lt2 z x).
Proof. exact (MK_COMB (@lem8359111) (@lem8359128 _146293 lt2 z x)). Qed.
Lemma lem8359130 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8359131 {_146293 : Type'} (lt2 : type1402 _146293) (z : _146293) (x : _146293) : (term619 _146293 lt2 z x) = (term620 _146293 lt2 z x).
Proof. exact (MK_COMB (@lem8359130) (@lem8359129 _146293 lt2 z x)). Qed.
Lemma lem8359132 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (x : _146293) (f : _146293 -> _146290) (g : _146293 -> _146290) (z : _146293) : (term277 _146290 _146293 lt2 x f g z) = (term621 _146290 _146293 lt2 x f g z).
Proof. exact (MK_COMB (@lem8359131 _146293 lt2 z x) (@lem8359110 _146290 _146293 f g z)). Qed.
Lemma lem8359133 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (x : _146293) (f : _146293 -> _146290) (g : _146293 -> _146290) : (term278 _146290 _146293 lt2 x f g) = (term622 _146290 _146293 lt2 x f g).
Proof. exact (fun_ext (fun z : _146293 => @lem8359132 _146290 _146293 lt2 x f g z)). Qed.
Lemma lem8359134 {_146293 : Type'} : (@all _146293) = (@all _146293).
Proof. exact (eq_refl (@all _146293)). Qed.
Lemma lem8359135 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (x : _146293) (f : _146293 -> _146290) (g : _146293 -> _146290) : (term279 _146290 _146293 lt2 x f g) = (term623 _146290 _146293 lt2 x f g).
Proof. exact (MK_COMB (@lem8359134 _146293) (@lem8359133 _146290 _146293 lt2 x f g)). Qed.
Lemma lem8359136 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8359137 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (x : _146293) (f : _146293 -> _146290) (g : _146293 -> _146290) : (term290 _146290 _146293 lt2 x f g) = (term624 _146290 _146293 lt2 x f g).
Proof. exact (MK_COMB (@lem8359136) (@lem8359135 _146290 _146293 lt2 x f g)). Qed.
Lemma lem8359138 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (f : _146293 -> _146290) (H' : type796 _146290 _146293) (g : _146293 -> _146290) (x : _146293) : (term319 _146290 _146293 lt2 f H' g x) = (term625 _146290 _146293 lt2 f H' g x).
Proof. exact (MK_COMB (@lem8359137 _146290 _146293 lt2 x f g) (@lem8359091 _146290 _146293 f H' g x)). Qed.
Lemma lem8359139 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8359140 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (f : _146293 -> _146290) (H' : type796 _146290 _146293) (g : _146293 -> _146290) (x : _146293) : (term429 _146290 _146293 lt2 f H' g x) = (term626 _146290 _146293 lt2 f H' g x).
Proof. exact (MK_COMB (@lem8359139) (@lem8359138 _146290 _146293 lt2 f H' g x)). Qed.
Lemma lem8359141 {_146290 _146293 : Type'} (H' : type796 _146290 _146293) (g : _146293 -> _146290) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (f : _146293 -> _146290) (lt2 : type1402 _146293) (y : _146293) (x : _146293) : (term445 _146290 _146293 H' g P G f lt2 y x) = (term627 _146290 _146293 H' g P G f lt2 y x).
Proof. exact (MK_COMB (@lem8359140 _146290 _146293 lt2 f H' g x) (@lem8359052 _146290 _146293 P G f lt2 y x)). Qed.
Lemma lem8359142 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem8359143 {_146290 : Type'} : (@eq _146290) = (@eq _146290).
Proof. exact (eq_refl (@eq _146290)). Qed.
Lemma lem8359150 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8359151 {_146290 _146293 : Type'} (f : type796 _146290 _146293) (x : _146293 -> _146290) : (f x) = (@I ((_146293 -> _146290) -> _146293 -> _146290) f x).
Proof. exact (@lem8359150 (_146293 -> _146290) (_146293 -> _146290) f x). Qed.
Lemma lem8359152 {_146290 _146293 : Type'} (H' : type796 _146290 _146293) (f : _146293 -> _146290) : (H' f) = (@I ((_146293 -> _146290) -> _146293 -> _146290) H' f).
Proof. exact (@lem8359151 _146290 _146293 H' f). Qed.
Lemma lem8359153 {_146293 : Type'} (x : _146293) : x = x.
Proof. exact (eq_refl x). Qed.
Lemma lem8359154 {_146290 _146293 : Type'} (H' : type796 _146290 _146293) (f : _146293 -> _146290) (x : _146293) : (H' f x) = (@I ((_146293 -> _146290) -> _146293 -> _146290) H' f x).
Proof. exact (MK_COMB (@lem8359152 _146290 _146293 H' f) (@lem8359153 _146293 x)). Qed.
Lemma lem8359156 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8359157 {_146290 _146293 : Type'} (f : _146293 -> _146290) (x : _146293) : (f x) = (@I (_146293 -> _146290) f x).
Proof. exact (@lem8359156 _146293 _146290 f x). Qed.
Lemma lem8359158 {_146290 _146293 : Type'} (H' : type796 _146290 _146293) (f : _146293 -> _146290) (x : _146293) : (@I ((_146293 -> _146290) -> _146293 -> _146290) H' f x) = (term615 _146290 _146293 H' f x).
Proof. exact (@lem8359157 _146290 _146293 (@I ((_146293 -> _146290) -> _146293 -> _146290) H' f) x). Qed.
Lemma lem8359160 {_146290 _146293 : Type'} (H' : type796 _146290 _146293) (f : _146293 -> _146290) (x : _146293) : (H' f x) = (term615 _146290 _146293 H' f x).
Proof. exact (TRANS (@lem8359154 _146290 _146293 H' f x) (@lem8359158 _146290 _146293 H' f x)). Qed.
Lemma lem8359167 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8359168 {_146290 _146293 : Type'} (f : type796 _146290 _146293) (x : _146293 -> _146290) : (f x) = (@I ((_146293 -> _146290) -> _146293 -> _146290) f x).
Proof. exact (@lem8359167 (_146293 -> _146290) (_146293 -> _146290) f x). Qed.
Lemma lem8359169 {_146290 _146293 : Type'} (H' : type796 _146290 _146293) (g : _146293 -> _146290) : (H' g) = (@I ((_146293 -> _146290) -> _146293 -> _146290) H' g).
Proof. exact (@lem8359168 _146290 _146293 H' g). Qed.
Lemma lem8359170 {_146293 : Type'} (x : _146293) : x = x.
Proof. exact (eq_refl x). Qed.
Lemma lem8359171 {_146290 _146293 : Type'} (H' : type796 _146290 _146293) (g : _146293 -> _146290) (x : _146293) : (H' g x) = (@I ((_146293 -> _146290) -> _146293 -> _146290) H' g x).
Proof. exact (MK_COMB (@lem8359169 _146290 _146293 H' g) (@lem8359170 _146293 x)). Qed.
Lemma lem8359173 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8359174 {_146290 _146293 : Type'} (f : _146293 -> _146290) (x : _146293) : (f x) = (@I (_146293 -> _146290) f x).
Proof. exact (@lem8359173 _146293 _146290 f x). Qed.
Lemma lem8359175 {_146290 _146293 : Type'} (H' : type796 _146290 _146293) (g : _146293 -> _146290) (x : _146293) : (@I ((_146293 -> _146290) -> _146293 -> _146290) H' g x) = (term615 _146290 _146293 H' g x).
Proof. exact (@lem8359174 _146290 _146293 (@I ((_146293 -> _146290) -> _146293 -> _146290) H' g) x). Qed.
Lemma lem8359177 {_146290 _146293 : Type'} (H' : type796 _146290 _146293) (g : _146293 -> _146290) (x : _146293) : (H' g x) = (term615 _146290 _146293 H' g x).
Proof. exact (TRANS (@lem8359171 _146290 _146293 H' g x) (@lem8359175 _146290 _146293 H' g x)). Qed.
Lemma lem8359178 {_146290 _146293 : Type'} (H' : type796 _146290 _146293) (f : _146293 -> _146290) (x : _146293) : (term113 _146290 _146293 H' f x) = (term616 _146290 _146293 H' f x).
Proof. exact (MK_COMB (@lem8359143 _146290) (@lem8359160 _146290 _146293 H' f x)). Qed.
Lemma lem8359179 {_146290 _146293 : Type'} (f : _146293 -> _146290) (H' : type796 _146290 _146293) (g : _146293 -> _146290) (x : _146293) : ((H' f x) = (H' g x)) = ((term615 _146290 _146293 H' f x) = (term615 _146290 _146293 H' g x)).
Proof. exact (MK_COMB (@lem8359178 _146290 _146293 H' f x) (@lem8359177 _146290 _146293 H' g x)). Qed.
Lemma lem8359180 {_146290 _146293 : Type'} (f : _146293 -> _146290) (H' : type796 _146290 _146293) (g : _146293 -> _146290) (x : _146293) : (term317 _146290 _146293 f H' g x) = (term617 _146290 _146293 f H' g x).
Proof. exact (MK_COMB (@lem8359142) (@lem8359179 _146290 _146293 f H' g x)). Qed.
Lemma lem8359181 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem8359182 {_146293 : Type'} : (@eq _146293) = (@eq _146293).
Proof. exact (eq_refl (@eq _146293)). Qed.
Lemma lem8359189 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8359190 {_146290 _146293 : Type'} (f : type797 _146290 _146293) (x : _146293 -> _146290) : (f x) = (@I ((_146293 -> _146290) -> _146293 -> _146293) f x).
Proof. exact (@lem8359189 (_146293 -> _146290) (_146293 -> _146293) f x). Qed.
Lemma lem8359191 {_146290 _146293 : Type'} (G : type797 _146290 _146293) (f : _146293 -> _146290) : (G f) = (@I ((_146293 -> _146290) -> _146293 -> _146293) G f).
Proof. exact (@lem8359190 _146290 _146293 G f). Qed.
Lemma lem8359192 {_146293 : Type'} (x : _146293) : x = x.
Proof. exact (eq_refl x). Qed.
Lemma lem8359193 {_146290 _146293 : Type'} (G : type797 _146290 _146293) (f : _146293 -> _146290) (x : _146293) : (G f x) = (@I ((_146293 -> _146290) -> _146293 -> _146293) G f x).
Proof. exact (MK_COMB (@lem8359191 _146290 _146293 G f) (@lem8359192 _146293 x)). Qed.
Lemma lem8359195 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8359196 {_146293 : Type'} (f : _146293 -> _146293) (x : _146293) : (f x) = (@I (_146293 -> _146293) f x).
Proof. exact (@lem8359195 _146293 _146293 f x). Qed.
Lemma lem8359197 {_146290 _146293 : Type'} (G : type797 _146290 _146293) (f : _146293 -> _146290) (x : _146293) : (@I ((_146293 -> _146290) -> _146293 -> _146293) G f x) = (term587 _146290 _146293 G f x).
Proof. exact (@lem8359196 _146293 (@I ((_146293 -> _146290) -> _146293 -> _146293) G f) x). Qed.
Lemma lem8359199 {_146290 _146293 : Type'} (G : type797 _146290 _146293) (f : _146293 -> _146290) (x : _146293) : (G f x) = (term587 _146290 _146293 G f x).
Proof. exact (TRANS (@lem8359193 _146290 _146293 G f x) (@lem8359197 _146290 _146293 G f x)). Qed.
Lemma lem8359206 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8359207 {_146290 _146293 : Type'} (f : type797 _146290 _146293) (x : _146293 -> _146290) : (f x) = (@I ((_146293 -> _146290) -> _146293 -> _146293) f x).
Proof. exact (@lem8359206 (_146293 -> _146290) (_146293 -> _146293) f x). Qed.
Lemma lem8359208 {_146290 _146293 : Type'} (G : type797 _146290 _146293) (g : _146293 -> _146290) : (G g) = (@I ((_146293 -> _146290) -> _146293 -> _146293) G g).
Proof. exact (@lem8359207 _146290 _146293 G g). Qed.
Lemma lem8359209 {_146293 : Type'} (x : _146293) : x = x.
Proof. exact (eq_refl x). Qed.
Lemma lem8359210 {_146290 _146293 : Type'} (G : type797 _146290 _146293) (g : _146293 -> _146290) (x : _146293) : (G g x) = (@I ((_146293 -> _146290) -> _146293 -> _146293) G g x).
Proof. exact (MK_COMB (@lem8359208 _146290 _146293 G g) (@lem8359209 _146293 x)). Qed.
Lemma lem8359212 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8359213 {_146293 : Type'} (f : _146293 -> _146293) (x : _146293) : (f x) = (@I (_146293 -> _146293) f x).
Proof. exact (@lem8359212 _146293 _146293 f x). Qed.
Lemma lem8359214 {_146290 _146293 : Type'} (G : type797 _146290 _146293) (g : _146293 -> _146290) (x : _146293) : (@I ((_146293 -> _146290) -> _146293 -> _146293) G g x) = (term587 _146290 _146293 G g x).
Proof. exact (@lem8359213 _146293 (@I ((_146293 -> _146290) -> _146293 -> _146293) G g) x). Qed.
Lemma lem8359216 {_146290 _146293 : Type'} (G : type797 _146290 _146293) (g : _146293 -> _146290) (x : _146293) : (G g x) = (term587 _146290 _146293 G g x).
Proof. exact (TRANS (@lem8359210 _146290 _146293 G g x) (@lem8359214 _146290 _146293 G g x)). Qed.
Lemma lem8359217 {_146290 _146293 : Type'} (G : type797 _146290 _146293) (f : _146293 -> _146290) (x : _146293) : (term628 _146290 _146293 G f x) = (term629 _146290 _146293 G f x).
Proof. exact (MK_COMB (@lem8359182 _146293) (@lem8359199 _146290 _146293 G f x)). Qed.
Lemma lem8359218 {_146290 _146293 : Type'} (f : _146293 -> _146290) (G : type797 _146290 _146293) (g : _146293 -> _146290) (x : _146293) : ((G f x) = (G g x)) = ((term587 _146290 _146293 G f x) = (term587 _146290 _146293 G g x)).
Proof. exact (MK_COMB (@lem8359217 _146290 _146293 G f x) (@lem8359216 _146290 _146293 G g x)). Qed.
Lemma lem8359219 {_146290 _146293 : Type'} (f : _146293 -> _146290) (G : type797 _146290 _146293) (g : _146293 -> _146290) (x : _146293) : (term630 _146290 _146293 f G g x) = (term631 _146290 _146293 f G g x).
Proof. exact (MK_COMB (@lem8359181) (@lem8359218 _146290 _146293 f G g x)). Qed.
Lemma lem8359220 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8359221 {_146290 _146293 : Type'} (f : _146293 -> _146290) (G : type797 _146290 _146293) (g : _146293 -> _146290) (x : _146293) : (term632 _146290 _146293 f G g x) = (term633 _146290 _146293 f G g x).
Proof. exact (MK_COMB (@lem8359220) (@lem8359219 _146290 _146293 f G g x)). Qed.
Lemma lem8359222 {_146290 _146293 : Type'} (G : type797 _146290 _146293) (f : _146293 -> _146290) (H' : type796 _146290 _146293) (g : _146293 -> _146290) (x : _146293) : (term283 _146290 _146293 G f H' g x) = (term634 _146290 _146293 G f H' g x).
Proof. exact (MK_COMB (@lem8359221 _146290 _146293 f G g x) (@lem8359180 _146290 _146293 f H' g x)). Qed.
Lemma lem8359229 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8359230 {_146290 _146293 : Type'} (f : type799 _146290 _146293) (x : _146293 -> _146290) : (f x) = (@I ((_146293 -> _146290) -> _146293 -> Prop) f x).
Proof. exact (@lem8359229 (_146293 -> _146290) (_146293 -> Prop) f x). Qed.
Lemma lem8359231 {_146290 _146293 : Type'} (P : type799 _146290 _146293) (g : _146293 -> _146290) : (P g) = (@I ((_146293 -> _146290) -> _146293 -> Prop) P g).
Proof. exact (@lem8359230 _146290 _146293 P g). Qed.
Lemma lem8359232 {_146293 : Type'} (x : _146293) : x = x.
Proof. exact (eq_refl x). Qed.
Lemma lem8359233 {_146290 _146293 : Type'} (P : type799 _146290 _146293) (g : _146293 -> _146290) (x : _146293) : (P g x) = (@I ((_146293 -> _146290) -> _146293 -> Prop) P g x).
Proof. exact (MK_COMB (@lem8359231 _146290 _146293 P g) (@lem8359232 _146293 x)). Qed.
Lemma lem8359235 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8359236 {_146293 : Type'} (f : _146293 -> Prop) (x : _146293) : (f x) = (@I (_146293 -> Prop) f x).
Proof. exact (@lem8359235 _146293 Prop f x). Qed.
Lemma lem8359237 {_146290 _146293 : Type'} (P : type799 _146290 _146293) (g : _146293 -> _146290) (x : _146293) : (@I ((_146293 -> _146290) -> _146293 -> Prop) P g x) = (term593 _146290 _146293 P g x).
Proof. exact (@lem8359236 _146293 (@I ((_146293 -> _146290) -> _146293 -> Prop) P g) x). Qed.
Lemma lem8359239 {_146290 _146293 : Type'} (P : type799 _146290 _146293) (g : _146293 -> _146290) (x : _146293) : (P g x) = (term593 _146290 _146293 P g x).
Proof. exact (TRANS (@lem8359233 _146290 _146293 P g x) (@lem8359237 _146290 _146293 P g x)). Qed.
Lemma lem8359240 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem8359247 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8359248 {_146290 _146293 : Type'} (f : type799 _146290 _146293) (x : _146293 -> _146290) : (f x) = (@I ((_146293 -> _146290) -> _146293 -> Prop) f x).
Proof. exact (@lem8359247 (_146293 -> _146290) (_146293 -> Prop) f x). Qed.
Lemma lem8359249 {_146290 _146293 : Type'} (P : type799 _146290 _146293) (f : _146293 -> _146290) : (P f) = (@I ((_146293 -> _146290) -> _146293 -> Prop) P f).
Proof. exact (@lem8359248 _146290 _146293 P f). Qed.
Lemma lem8359250 {_146293 : Type'} (x : _146293) : x = x.
Proof. exact (eq_refl x). Qed.
Lemma lem8359251 {_146290 _146293 : Type'} (P : type799 _146290 _146293) (f : _146293 -> _146290) (x : _146293) : (P f x) = (@I ((_146293 -> _146290) -> _146293 -> Prop) P f x).
Proof. exact (MK_COMB (@lem8359249 _146290 _146293 P f) (@lem8359250 _146293 x)). Qed.
Lemma lem8359253 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8359254 {_146293 : Type'} (f : _146293 -> Prop) (x : _146293) : (f x) = (@I (_146293 -> Prop) f x).
Proof. exact (@lem8359253 _146293 Prop f x). Qed.
Lemma lem8359255 {_146290 _146293 : Type'} (P : type799 _146290 _146293) (f : _146293 -> _146290) (x : _146293) : (@I ((_146293 -> _146290) -> _146293 -> Prop) P f x) = (term593 _146290 _146293 P f x).
Proof. exact (@lem8359254 _146293 (@I ((_146293 -> _146290) -> _146293 -> Prop) P f) x). Qed.
Lemma lem8359257 {_146290 _146293 : Type'} (P : type799 _146290 _146293) (f : _146293 -> _146290) (x : _146293) : (P f x) = (term593 _146290 _146293 P f x).
Proof. exact (TRANS (@lem8359251 _146290 _146293 P f x) (@lem8359255 _146290 _146293 P f x)). Qed.
Lemma lem8359258 {_146290 _146293 : Type'} (P : type799 _146290 _146293) (f : _146293 -> _146290) (x : _146293) : (term594 _146290 _146293 P f x) = (term595 _146290 _146293 P f x).
Proof. exact (MK_COMB (@lem8359240) (@lem8359257 _146290 _146293 P f x)). Qed.
Lemma lem8359259 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8359260 {_146290 _146293 : Type'} (P : type799 _146290 _146293) (f : _146293 -> _146290) (x : _146293) : (term635 _146290 _146293 P f x) = (term636 _146290 _146293 P f x).
Proof. exact (MK_COMB (@lem8359259) (@lem8359258 _146290 _146293 P f x)). Qed.
Lemma lem8359261 {_146290 _146293 : Type'} (f : _146293 -> _146290) (P : type799 _146290 _146293) (g : _146293 -> _146290) (x : _146293) : (term637 _146290 _146293 f P g x) = (term638 _146290 _146293 f P g x).
Proof. exact (MK_COMB (@lem8359260 _146290 _146293 P f x) (@lem8359239 _146290 _146293 P g x)). Qed.
Lemma lem8359262 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem8359269 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8359270 {_146290 _146293 : Type'} (f : type799 _146290 _146293) (x : _146293 -> _146290) : (f x) = (@I ((_146293 -> _146290) -> _146293 -> Prop) f x).
Proof. exact (@lem8359269 (_146293 -> _146290) (_146293 -> Prop) f x). Qed.
Lemma lem8359271 {_146290 _146293 : Type'} (P : type799 _146290 _146293) (g : _146293 -> _146290) : (P g) = (@I ((_146293 -> _146290) -> _146293 -> Prop) P g).
Proof. exact (@lem8359270 _146290 _146293 P g). Qed.
Lemma lem8359272 {_146293 : Type'} (x : _146293) : x = x.
Proof. exact (eq_refl x). Qed.
Lemma lem8359273 {_146290 _146293 : Type'} (P : type799 _146290 _146293) (g : _146293 -> _146290) (x : _146293) : (P g x) = (@I ((_146293 -> _146290) -> _146293 -> Prop) P g x).
Proof. exact (MK_COMB (@lem8359271 _146290 _146293 P g) (@lem8359272 _146293 x)). Qed.
Lemma lem8359275 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8359276 {_146293 : Type'} (f : _146293 -> Prop) (x : _146293) : (f x) = (@I (_146293 -> Prop) f x).
Proof. exact (@lem8359275 _146293 Prop f x). Qed.
Lemma lem8359277 {_146290 _146293 : Type'} (P : type799 _146290 _146293) (g : _146293 -> _146290) (x : _146293) : (@I ((_146293 -> _146290) -> _146293 -> Prop) P g x) = (term593 _146290 _146293 P g x).
Proof. exact (@lem8359276 _146293 (@I ((_146293 -> _146290) -> _146293 -> Prop) P g) x). Qed.
Lemma lem8359279 {_146290 _146293 : Type'} (P : type799 _146290 _146293) (g : _146293 -> _146290) (x : _146293) : (P g x) = (term593 _146290 _146293 P g x).
Proof. exact (TRANS (@lem8359273 _146290 _146293 P g x) (@lem8359277 _146290 _146293 P g x)). Qed.
Lemma lem8359280 {_146290 _146293 : Type'} (P : type799 _146290 _146293) (g : _146293 -> _146290) (x : _146293) : (term594 _146290 _146293 P g x) = (term595 _146290 _146293 P g x).
Proof. exact (MK_COMB (@lem8359262) (@lem8359279 _146290 _146293 P g x)). Qed.
Lemma lem8359287 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8359288 {_146290 _146293 : Type'} (f : type799 _146290 _146293) (x : _146293 -> _146290) : (f x) = (@I ((_146293 -> _146290) -> _146293 -> Prop) f x).
Proof. exact (@lem8359287 (_146293 -> _146290) (_146293 -> Prop) f x). Qed.
Lemma lem8359289 {_146290 _146293 : Type'} (P : type799 _146290 _146293) (f : _146293 -> _146290) : (P f) = (@I ((_146293 -> _146290) -> _146293 -> Prop) P f).
Proof. exact (@lem8359288 _146290 _146293 P f). Qed.
Lemma lem8359290 {_146293 : Type'} (x : _146293) : x = x.
Proof. exact (eq_refl x). Qed.
Lemma lem8359291 {_146290 _146293 : Type'} (P : type799 _146290 _146293) (f : _146293 -> _146290) (x : _146293) : (P f x) = (@I ((_146293 -> _146290) -> _146293 -> Prop) P f x).
Proof. exact (MK_COMB (@lem8359289 _146290 _146293 P f) (@lem8359290 _146293 x)). Qed.
Lemma lem8359293 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8359294 {_146293 : Type'} (f : _146293 -> Prop) (x : _146293) : (f x) = (@I (_146293 -> Prop) f x).
Proof. exact (@lem8359293 _146293 Prop f x). Qed.
Lemma lem8359295 {_146290 _146293 : Type'} (P : type799 _146290 _146293) (f : _146293 -> _146290) (x : _146293) : (@I ((_146293 -> _146290) -> _146293 -> Prop) P f x) = (term593 _146290 _146293 P f x).
Proof. exact (@lem8359294 _146293 (@I ((_146293 -> _146290) -> _146293 -> Prop) P f) x). Qed.
Lemma lem8359297 {_146290 _146293 : Type'} (P : type799 _146290 _146293) (f : _146293 -> _146290) (x : _146293) : (P f x) = (term593 _146290 _146293 P f x).
Proof. exact (TRANS (@lem8359291 _146290 _146293 P f x) (@lem8359295 _146290 _146293 P f x)). Qed.
Lemma lem8359298 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8359299 {_146290 _146293 : Type'} (P : type799 _146290 _146293) (f : _146293 -> _146290) (x : _146293) : (term609 _146290 _146293 P f x) = (term610 _146290 _146293 P f x).
Proof. exact (MK_COMB (@lem8359298) (@lem8359297 _146290 _146293 P f x)). Qed.
Lemma lem8359300 {_146290 _146293 : Type'} (f : _146293 -> _146290) (P : type799 _146290 _146293) (g : _146293 -> _146290) (x : _146293) : (term639 _146290 _146293 f P g x) = (term640 _146290 _146293 f P g x).
Proof. exact (MK_COMB (@lem8359299 _146290 _146293 P f x) (@lem8359280 _146290 _146293 P g x)). Qed.
Lemma lem8359301 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8359302 {_146290 _146293 : Type'} (f : _146293 -> _146290) (P : type799 _146290 _146293) (g : _146293 -> _146290) (x : _146293) : (term641 _146290 _146293 f P g x) = (term642 _146290 _146293 f P g x).
Proof. exact (MK_COMB (@lem8359301) (@lem8359300 _146290 _146293 f P g x)). Qed.
Lemma lem8359303 {_146290 _146293 : Type'} (f : _146293 -> _146290) (P : type799 _146290 _146293) (g : _146293 -> _146290) (x : _146293) : (term281 _146290 _146293 f P g x) = (term643 _146290 _146293 f P g x).
Proof. exact (MK_COMB (@lem8359302 _146290 _146293 f P g x) (@lem8359261 _146290 _146293 f P g x)). Qed.
Lemma lem8359304 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8359305 {_146290 _146293 : Type'} (f : _146293 -> _146290) (P : type799 _146290 _146293) (g : _146293 -> _146290) (x : _146293) : (term285 _146290 _146293 f P g x) = (term644 _146290 _146293 f P g x).
Proof. exact (MK_COMB (@lem8359304) (@lem8359303 _146290 _146293 f P g x)). Qed.
Lemma lem8359306 {_146290 _146293 : Type'} (P : type799 _146290 _146293) (G : type797 _146290 _146293) (f : _146293 -> _146290) (H' : type796 _146290 _146293) (g : _146293 -> _146290) (x : _146293) : (term287 _146290 _146293 P G f H' g x) = (term645 _146290 _146293 P G f H' g x).
Proof. exact (MK_COMB (@lem8359305 _146290 _146293 f P g x) (@lem8359222 _146290 _146293 G f H' g x)). Qed.
Lemma lem8359307 {_146290 : Type'} : (@eq _146290) = (@eq _146290).
Proof. exact (eq_refl (@eq _146290)). Qed.
Lemma lem8359312 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8359313 {_146290 _146293 : Type'} (f : _146293 -> _146290) (x : _146293) : (f x) = (@I (_146293 -> _146290) f x).
Proof. exact (@lem8359312 _146293 _146290 f x). Qed.
Lemma lem8359315 {_146290 _146293 : Type'} (f : _146293 -> _146290) (z : _146293) : (f z) = (@I (_146293 -> _146290) f z).
Proof. exact (@lem8359313 _146290 _146293 f z). Qed.
Lemma lem8359320 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8359321 {_146290 _146293 : Type'} (f : _146293 -> _146290) (x : _146293) : (f x) = (@I (_146293 -> _146290) f x).
Proof. exact (@lem8359320 _146293 _146290 f x). Qed.
Lemma lem8359323 {_146290 _146293 : Type'} (g : _146293 -> _146290) (z : _146293) : (g z) = (@I (_146293 -> _146290) g z).
Proof. exact (@lem8359321 _146290 _146293 g z). Qed.
Lemma lem8359324 {_146290 _146293 : Type'} (f : _146293 -> _146290) (z : _146293) : (term28 _146290 _146293 f z) = (term618 _146290 _146293 f z).
Proof. exact (MK_COMB (@lem8359307 _146290) (@lem8359315 _146290 _146293 f z)). Qed.
Lemma lem8359325 {_146290 _146293 : Type'} (f : _146293 -> _146290) (g : _146293 -> _146290) (z : _146293) : ((f z) = (g z)) = ((@I (_146293 -> _146290) f z) = (@I (_146293 -> _146290) g z)).
Proof. exact (MK_COMB (@lem8359324 _146290 _146293 f z) (@lem8359323 _146290 _146293 g z)). Qed.
Lemma lem8359326 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem8359333 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8359334 {_146293 : Type'} (f : type1402 _146293) (x : _146293) : (f x) = (@I (_146293 -> _146293 -> Prop) f x).
Proof. exact (@lem8359333 _146293 (_146293 -> Prop) f x). Qed.
Lemma lem8359335 {_146293 : Type'} (lt2 : type1402 _146293) (z : _146293) : (lt2 z) = (@I (_146293 -> _146293 -> Prop) lt2 z).
Proof. exact (@lem8359334 _146293 lt2 z). Qed.
Lemma lem8359336 {_146293 : Type'} (x : _146293) : x = x.
Proof. exact (eq_refl x). Qed.
Lemma lem8359337 {_146293 : Type'} (lt2 : type1402 _146293) (z : _146293) (x : _146293) : (lt2 z x) = (@I (_146293 -> _146293 -> Prop) lt2 z x).
Proof. exact (MK_COMB (@lem8359335 _146293 lt2 z) (@lem8359336 _146293 x)). Qed.
Lemma lem8359339 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8359340 {_146293 : Type'} (f : _146293 -> Prop) (x : _146293) : (f x) = (@I (_146293 -> Prop) f x).
Proof. exact (@lem8359339 _146293 Prop f x). Qed.
Lemma lem8359341 {_146293 : Type'} (lt2 : type1402 _146293) (z : _146293) (x : _146293) : (@I (_146293 -> _146293 -> Prop) lt2 z x) = (term586 _146293 lt2 z x).
Proof. exact (@lem8359340 _146293 (@I (_146293 -> _146293 -> Prop) lt2 z) x). Qed.
Lemma lem8359343 {_146293 : Type'} (lt2 : type1402 _146293) (z : _146293) (x : _146293) : (lt2 z x) = (term586 _146293 lt2 z x).
Proof. exact (TRANS (@lem8359337 _146293 lt2 z x) (@lem8359341 _146293 lt2 z x)). Qed.
Lemma lem8359344 {_146293 : Type'} (lt2 : type1402 _146293) (z : _146293) (x : _146293) : (term607 _146293 lt2 z x) = (term608 _146293 lt2 z x).
Proof. exact (MK_COMB (@lem8359326) (@lem8359343 _146293 lt2 z x)). Qed.
Lemma lem8359345 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8359346 {_146293 : Type'} (lt2 : type1402 _146293) (z : _146293) (x : _146293) : (term619 _146293 lt2 z x) = (term620 _146293 lt2 z x).
Proof. exact (MK_COMB (@lem8359345) (@lem8359344 _146293 lt2 z x)). Qed.
Lemma lem8359347 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (x : _146293) (f : _146293 -> _146290) (g : _146293 -> _146290) (z : _146293) : (term277 _146290 _146293 lt2 x f g z) = (term621 _146290 _146293 lt2 x f g z).
Proof. exact (MK_COMB (@lem8359346 _146293 lt2 z x) (@lem8359325 _146290 _146293 f g z)). Qed.
Lemma lem8359348 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (x : _146293) (f : _146293 -> _146290) (g : _146293 -> _146290) : (term278 _146290 _146293 lt2 x f g) = (term622 _146290 _146293 lt2 x f g).
Proof. exact (fun_ext (fun z : _146293 => @lem8359347 _146290 _146293 lt2 x f g z)). Qed.
Lemma lem8359349 {_146293 : Type'} : (@all _146293) = (@all _146293).
Proof. exact (eq_refl (@all _146293)). Qed.
Lemma lem8359350 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (x : _146293) (f : _146293 -> _146290) (g : _146293 -> _146290) : (term279 _146290 _146293 lt2 x f g) = (term623 _146290 _146293 lt2 x f g).
Proof. exact (MK_COMB (@lem8359349 _146293) (@lem8359348 _146290 _146293 lt2 x f g)). Qed.
Lemma lem8359351 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8359352 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (x : _146293) (f : _146293 -> _146290) (g : _146293 -> _146290) : (term290 _146290 _146293 lt2 x f g) = (term624 _146290 _146293 lt2 x f g).
Proof. exact (MK_COMB (@lem8359351) (@lem8359350 _146290 _146293 lt2 x f g)). Qed.
Lemma lem8359353 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (f : _146293 -> _146290) (H' : type796 _146290 _146293) (g : _146293 -> _146290) (x : _146293) : (term292 _146290 _146293 lt2 P G f H' g x) = (term646 _146290 _146293 lt2 P G f H' g x).
Proof. exact (MK_COMB (@lem8359352 _146290 _146293 lt2 x f g) (@lem8359306 _146290 _146293 P G f H' g x)). Qed.
Lemma lem8359354 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8359355 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (f : _146293 -> _146290) (H' : type796 _146290 _146293) (g : _146293 -> _146290) (x : _146293) : (term504 _146290 _146293 lt2 P G f H' g x) = (term647 _146290 _146293 lt2 P G f H' g x).
Proof. exact (MK_COMB (@lem8359354) (@lem8359353 _146290 _146293 lt2 P G f H' g x)). Qed.
Lemma lem8359356 {_146290 _146293 : Type'} (H' : type796 _146290 _146293) (g : _146293 -> _146290) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (f : _146293 -> _146290) (lt2 : type1402 _146293) (y : _146293) (x : _146293) : (term518 _146290 _146293 H' g P G f lt2 y x) = (term648 _146290 _146293 H' g P G f lt2 y x).
Proof. exact (MK_COMB (@lem8359355 _146290 _146293 lt2 P G f H' g x) (@lem8359141 _146290 _146293 H' g P G f lt2 y x)). Qed.
Lemma lem8359357 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem8359362 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8359363 {_146293 : Type'} (f : type421 _146293) (x : type1402 _146293) : (f x) = (@I ((_146293 -> _146293 -> Prop) -> Prop) f x).
Proof. exact (@lem8359362 (type1402 _146293) Prop f x). Qed.
Lemma lem8359365 {_146293 : Type'} (lt2 : type1402 _146293) : (@WF _146293 lt2) = (@I ((_146293 -> _146293 -> Prop) -> Prop) (@WF _146293) lt2).
Proof. exact (@lem8359363 _146293 (@WF _146293) lt2). Qed.
Lemma lem8359366 {_146293 : Type'} (lt2 : type1402 _146293) : (term533 _146293 lt2) = (term649 _146293 lt2).
Proof. exact (MK_COMB (@lem8359357) (@lem8359365 _146293 lt2)). Qed.
Lemma lem8359367 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8359368 {_146293 : Type'} (lt2 : type1402 _146293) : (term375 _146293 lt2) = (term650 _146293 lt2).
Proof. exact (MK_COMB (@lem8359367) (@lem8359366 _146293 lt2)). Qed.
Lemma lem8359369 {_146290 _146293 : Type'} (H' : type796 _146290 _146293) (g : _146293 -> _146290) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (f : _146293 -> _146290) (lt2 : type1402 _146293) (y : _146293) (x : _146293) : (term576 _146290 _146293 H' g P G f lt2 y x) = (term651 _146290 _146293 H' g P G f lt2 y x).
Proof. exact (MK_COMB (@lem8359368 _146293 lt2) (@lem8359356 _146290 _146293 H' g P G f lt2 y x)). Qed.
Lemma lem8359370 {_146290 _146293 : Type'} (H' : type796 _146290 _146293) (g : _146293 -> _146290) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (f : _146293 -> _146290) (lt2 : type1402 _146293) (y : _146293) (x : _146293) (h1 : term576 _146290 _146293 H' g P G f lt2 y x) : term651 _146290 _146293 H' g P G f lt2 y x.
Proof. exact (EQ_MP (@lem8359369 _146290 _146293 H' g P G f lt2 y x) (@lem8358741 _146290 _146293 H' g P G f lt2 y x h1)). Qed.
Lemma lem8359371 {_146290 : Type'} : (@eq _146290) = (@eq _146290).
Proof. exact (eq_refl (@eq _146290)). Qed.
Lemma lem8359378 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8359379 {_146290 _146293 : Type'} (f : type796 _146290 _146293) (x : _146293 -> _146290) : (f x) = (@I ((_146293 -> _146290) -> _146293 -> _146290) f x).
Proof. exact (@lem8359378 (_146293 -> _146290) (_146293 -> _146290) f x). Qed.
Lemma lem8359380 {_146290 _146293 : Type'} (H' : type796 _146290 _146293) (f : _146293 -> _146290) : (H' f) = (@I ((_146293 -> _146290) -> _146293 -> _146290) H' f).
Proof. exact (@lem8359379 _146290 _146293 H' f). Qed.
Lemma lem8359381 {_146293 : Type'} (x : _146293) : x = x.
Proof. exact (eq_refl x). Qed.
Lemma lem8359382 {_146290 _146293 : Type'} (H' : type796 _146290 _146293) (f : _146293 -> _146290) (x : _146293) : (H' f x) = (@I ((_146293 -> _146290) -> _146293 -> _146290) H' f x).
Proof. exact (MK_COMB (@lem8359380 _146290 _146293 H' f) (@lem8359381 _146293 x)). Qed.
Lemma lem8359384 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8359385 {_146290 _146293 : Type'} (f : _146293 -> _146290) (x : _146293) : (f x) = (@I (_146293 -> _146290) f x).
Proof. exact (@lem8359384 _146293 _146290 f x). Qed.
Lemma lem8359386 {_146290 _146293 : Type'} (H' : type796 _146290 _146293) (f : _146293 -> _146290) (x : _146293) : (@I ((_146293 -> _146290) -> _146293 -> _146290) H' f x) = (term615 _146290 _146293 H' f x).
Proof. exact (@lem8359385 _146290 _146293 (@I ((_146293 -> _146290) -> _146293 -> _146290) H' f) x). Qed.
Lemma lem8359388 {_146290 _146293 : Type'} (H' : type796 _146290 _146293) (f : _146293 -> _146290) (x : _146293) : (H' f x) = (term615 _146290 _146293 H' f x).
Proof. exact (TRANS (@lem8359382 _146290 _146293 H' f x) (@lem8359386 _146290 _146293 H' f x)). Qed.
Lemma lem8359395 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8359396 {_146290 _146293 : Type'} (f : type796 _146290 _146293) (x : _146293 -> _146290) : (f x) = (@I ((_146293 -> _146290) -> _146293 -> _146290) f x).
Proof. exact (@lem8359395 (_146293 -> _146290) (_146293 -> _146290) f x). Qed.
Lemma lem8359397 {_146290 _146293 : Type'} (H' : type796 _146290 _146293) (g : _146293 -> _146290) : (H' g) = (@I ((_146293 -> _146290) -> _146293 -> _146290) H' g).
Proof. exact (@lem8359396 _146290 _146293 H' g). Qed.
Lemma lem8359398 {_146293 : Type'} (x : _146293) : x = x.
Proof. exact (eq_refl x). Qed.
Lemma lem8359399 {_146290 _146293 : Type'} (H' : type796 _146290 _146293) (g : _146293 -> _146290) (x : _146293) : (H' g x) = (@I ((_146293 -> _146290) -> _146293 -> _146290) H' g x).
Proof. exact (MK_COMB (@lem8359397 _146290 _146293 H' g) (@lem8359398 _146293 x)). Qed.
Lemma lem8359401 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8359402 {_146290 _146293 : Type'} (f : _146293 -> _146290) (x : _146293) : (f x) = (@I (_146293 -> _146290) f x).
Proof. exact (@lem8359401 _146293 _146290 f x). Qed.
Lemma lem8359403 {_146290 _146293 : Type'} (H' : type796 _146290 _146293) (g : _146293 -> _146290) (x : _146293) : (@I ((_146293 -> _146290) -> _146293 -> _146290) H' g x) = (term615 _146290 _146293 H' g x).
Proof. exact (@lem8359402 _146290 _146293 (@I ((_146293 -> _146290) -> _146293 -> _146290) H' g) x). Qed.
Lemma lem8359405 {_146290 _146293 : Type'} (H' : type796 _146290 _146293) (g : _146293 -> _146290) (x : _146293) : (H' g x) = (term615 _146290 _146293 H' g x).
Proof. exact (TRANS (@lem8359399 _146290 _146293 H' g x) (@lem8359403 _146290 _146293 H' g x)). Qed.
Lemma lem8359406 {_146290 _146293 : Type'} (H' : type796 _146290 _146293) (f : _146293 -> _146290) (x : _146293) : (term113 _146290 _146293 H' f x) = (term616 _146290 _146293 H' f x).
Proof. exact (MK_COMB (@lem8359371 _146290) (@lem8359388 _146290 _146293 H' f x)). Qed.
Lemma lem8359407 {_146290 _146293 : Type'} (f : _146293 -> _146290) (H' : type796 _146290 _146293) (g : _146293 -> _146290) (x : _146293) : ((H' f x) = (H' g x)) = ((term615 _146290 _146293 H' f x) = (term615 _146290 _146293 H' g x)).
Proof. exact (MK_COMB (@lem8359406 _146290 _146293 H' f x) (@lem8359405 _146290 _146293 H' g x)). Qed.
Lemma lem8359408 {_146293 : Type'} : (@eq _146293) = (@eq _146293).
Proof. exact (eq_refl (@eq _146293)). Qed.
Lemma lem8359415 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8359416 {_146290 _146293 : Type'} (f : type797 _146290 _146293) (x : _146293 -> _146290) : (f x) = (@I ((_146293 -> _146290) -> _146293 -> _146293) f x).
Proof. exact (@lem8359415 (_146293 -> _146290) (_146293 -> _146293) f x). Qed.
Lemma lem8359417 {_146290 _146293 : Type'} (G : type797 _146290 _146293) (f : _146293 -> _146290) : (G f) = (@I ((_146293 -> _146290) -> _146293 -> _146293) G f).
Proof. exact (@lem8359416 _146290 _146293 G f). Qed.
Lemma lem8359418 {_146293 : Type'} (x : _146293) : x = x.
Proof. exact (eq_refl x). Qed.
Lemma lem8359419 {_146290 _146293 : Type'} (G : type797 _146290 _146293) (f : _146293 -> _146290) (x : _146293) : (G f x) = (@I ((_146293 -> _146290) -> _146293 -> _146293) G f x).
Proof. exact (MK_COMB (@lem8359417 _146290 _146293 G f) (@lem8359418 _146293 x)). Qed.
Lemma lem8359421 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8359422 {_146293 : Type'} (f : _146293 -> _146293) (x : _146293) : (f x) = (@I (_146293 -> _146293) f x).
Proof. exact (@lem8359421 _146293 _146293 f x). Qed.
Lemma lem8359423 {_146290 _146293 : Type'} (G : type797 _146290 _146293) (f : _146293 -> _146290) (x : _146293) : (@I ((_146293 -> _146290) -> _146293 -> _146293) G f x) = (term587 _146290 _146293 G f x).
Proof. exact (@lem8359422 _146293 (@I ((_146293 -> _146290) -> _146293 -> _146293) G f) x). Qed.
Lemma lem8359425 {_146290 _146293 : Type'} (G : type797 _146290 _146293) (f : _146293 -> _146290) (x : _146293) : (G f x) = (term587 _146290 _146293 G f x).
Proof. exact (TRANS (@lem8359419 _146290 _146293 G f x) (@lem8359423 _146290 _146293 G f x)). Qed.
Lemma lem8359432 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8359433 {_146290 _146293 : Type'} (f : type797 _146290 _146293) (x : _146293 -> _146290) : (f x) = (@I ((_146293 -> _146290) -> _146293 -> _146293) f x).
Proof. exact (@lem8359432 (_146293 -> _146290) (_146293 -> _146293) f x). Qed.
Lemma lem8359434 {_146290 _146293 : Type'} (G : type797 _146290 _146293) (g : _146293 -> _146290) : (G g) = (@I ((_146293 -> _146290) -> _146293 -> _146293) G g).
Proof. exact (@lem8359433 _146290 _146293 G g). Qed.
Lemma lem8359435 {_146293 : Type'} (x : _146293) : x = x.
Proof. exact (eq_refl x). Qed.
Lemma lem8359436 {_146290 _146293 : Type'} (G : type797 _146290 _146293) (g : _146293 -> _146290) (x : _146293) : (G g x) = (@I ((_146293 -> _146290) -> _146293 -> _146293) G g x).
Proof. exact (MK_COMB (@lem8359434 _146290 _146293 G g) (@lem8359435 _146293 x)). Qed.
Lemma lem8359438 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8359439 {_146293 : Type'} (f : _146293 -> _146293) (x : _146293) : (f x) = (@I (_146293 -> _146293) f x).
Proof. exact (@lem8359438 _146293 _146293 f x). Qed.
Lemma lem8359440 {_146290 _146293 : Type'} (G : type797 _146290 _146293) (g : _146293 -> _146290) (x : _146293) : (@I ((_146293 -> _146290) -> _146293 -> _146293) G g x) = (term587 _146290 _146293 G g x).
Proof. exact (@lem8359439 _146293 (@I ((_146293 -> _146290) -> _146293 -> _146293) G g) x). Qed.
Lemma lem8359442 {_146290 _146293 : Type'} (G : type797 _146290 _146293) (g : _146293 -> _146290) (x : _146293) : (G g x) = (term587 _146290 _146293 G g x).
Proof. exact (TRANS (@lem8359436 _146290 _146293 G g x) (@lem8359440 _146290 _146293 G g x)). Qed.
Lemma lem8359443 {_146290 _146293 : Type'} (G : type797 _146290 _146293) (f : _146293 -> _146290) (x : _146293) : (term628 _146290 _146293 G f x) = (term629 _146290 _146293 G f x).
Proof. exact (MK_COMB (@lem8359408 _146293) (@lem8359425 _146290 _146293 G f x)). Qed.
Lemma lem8359444 {_146290 _146293 : Type'} (f : _146293 -> _146290) (G : type797 _146290 _146293) (g : _146293 -> _146290) (x : _146293) : ((G f x) = (G g x)) = ((term587 _146290 _146293 G f x) = (term587 _146290 _146293 G g x)).
Proof. exact (MK_COMB (@lem8359443 _146290 _146293 G f x) (@lem8359442 _146290 _146293 G g x)). Qed.
Lemma lem8359445 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8359446 {_146290 _146293 : Type'} (f : _146293 -> _146290) (G : type797 _146290 _146293) (g : _146293 -> _146290) (x : _146293) : (term652 _146290 _146293 f G g x) = (term653 _146290 _146293 f G g x).
Proof. exact (MK_COMB (@lem8359445) (@lem8359444 _146290 _146293 f G g x)). Qed.
Lemma lem8359447 {_146290 _146293 : Type'} (G : type797 _146290 _146293) (f : _146293 -> _146290) (H' : type796 _146290 _146293) (g : _146293 -> _146290) (x : _146293) : (term155 _146290 _146293 G f H' g x) = (term654 _146290 _146293 G f H' g x).
Proof. exact (MK_COMB (@lem8359446 _146290 _146293 f G g x) (@lem8359407 _146290 _146293 f H' g x)). Qed.
Lemma lem8359454 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8359455 {_146290 _146293 : Type'} (f : type799 _146290 _146293) (x : _146293 -> _146290) : (f x) = (@I ((_146293 -> _146290) -> _146293 -> Prop) f x).
Proof. exact (@lem8359454 (_146293 -> _146290) (_146293 -> Prop) f x). Qed.
Lemma lem8359456 {_146290 _146293 : Type'} (P : type799 _146290 _146293) (g : _146293 -> _146290) : (P g) = (@I ((_146293 -> _146290) -> _146293 -> Prop) P g).
Proof. exact (@lem8359455 _146290 _146293 P g). Qed.
Lemma lem8359457 {_146293 : Type'} (x : _146293) : x = x.
Proof. exact (eq_refl x). Qed.
Lemma lem8359458 {_146290 _146293 : Type'} (P : type799 _146290 _146293) (g : _146293 -> _146290) (x : _146293) : (P g x) = (@I ((_146293 -> _146290) -> _146293 -> Prop) P g x).
Proof. exact (MK_COMB (@lem8359456 _146290 _146293 P g) (@lem8359457 _146293 x)). Qed.
Lemma lem8359460 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8359461 {_146293 : Type'} (f : _146293 -> Prop) (x : _146293) : (f x) = (@I (_146293 -> Prop) f x).
Proof. exact (@lem8359460 _146293 Prop f x). Qed.
Lemma lem8359462 {_146290 _146293 : Type'} (P : type799 _146290 _146293) (g : _146293 -> _146290) (x : _146293) : (@I ((_146293 -> _146290) -> _146293 -> Prop) P g x) = (term593 _146290 _146293 P g x).
Proof. exact (@lem8359461 _146293 (@I ((_146293 -> _146290) -> _146293 -> Prop) P g) x). Qed.
Lemma lem8359464 {_146290 _146293 : Type'} (P : type799 _146290 _146293) (g : _146293 -> _146290) (x : _146293) : (P g x) = (term593 _146290 _146293 P g x).
Proof. exact (TRANS (@lem8359458 _146290 _146293 P g x) (@lem8359462 _146290 _146293 P g x)). Qed.
Lemma lem8359465 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem8359472 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8359473 {_146290 _146293 : Type'} (f : type799 _146290 _146293) (x : _146293 -> _146290) : (f x) = (@I ((_146293 -> _146290) -> _146293 -> Prop) f x).
Proof. exact (@lem8359472 (_146293 -> _146290) (_146293 -> Prop) f x). Qed.
Lemma lem8359474 {_146290 _146293 : Type'} (P : type799 _146290 _146293) (f : _146293 -> _146290) : (P f) = (@I ((_146293 -> _146290) -> _146293 -> Prop) P f).
Proof. exact (@lem8359473 _146290 _146293 P f). Qed.
Lemma lem8359475 {_146293 : Type'} (x : _146293) : x = x.
Proof. exact (eq_refl x). Qed.
Lemma lem8359476 {_146290 _146293 : Type'} (P : type799 _146290 _146293) (f : _146293 -> _146290) (x : _146293) : (P f x) = (@I ((_146293 -> _146290) -> _146293 -> Prop) P f x).
Proof. exact (MK_COMB (@lem8359474 _146290 _146293 P f) (@lem8359475 _146293 x)). Qed.
Lemma lem8359478 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8359479 {_146293 : Type'} (f : _146293 -> Prop) (x : _146293) : (f x) = (@I (_146293 -> Prop) f x).
Proof. exact (@lem8359478 _146293 Prop f x). Qed.
Lemma lem8359480 {_146290 _146293 : Type'} (P : type799 _146290 _146293) (f : _146293 -> _146290) (x : _146293) : (@I ((_146293 -> _146290) -> _146293 -> Prop) P f x) = (term593 _146290 _146293 P f x).
Proof. exact (@lem8359479 _146293 (@I ((_146293 -> _146290) -> _146293 -> Prop) P f) x). Qed.
Lemma lem8359482 {_146290 _146293 : Type'} (P : type799 _146290 _146293) (f : _146293 -> _146290) (x : _146293) : (P f x) = (term593 _146290 _146293 P f x).
Proof. exact (TRANS (@lem8359476 _146290 _146293 P f x) (@lem8359480 _146290 _146293 P f x)). Qed.
Lemma lem8359483 {_146290 _146293 : Type'} (P : type799 _146290 _146293) (f : _146293 -> _146290) (x : _146293) : (term594 _146290 _146293 P f x) = (term595 _146290 _146293 P f x).
Proof. exact (MK_COMB (@lem8359465) (@lem8359482 _146290 _146293 P f x)). Qed.
Lemma lem8359484 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8359485 {_146290 _146293 : Type'} (P : type799 _146290 _146293) (f : _146293 -> _146290) (x : _146293) : (term596 _146290 _146293 P f x) = (term597 _146290 _146293 P f x).
Proof. exact (MK_COMB (@lem8359484) (@lem8359483 _146290 _146293 P f x)). Qed.
Lemma lem8359486 {_146290 _146293 : Type'} (f : _146293 -> _146290) (P : type799 _146290 _146293) (g : _146293 -> _146290) (x : _146293) : (term655 _146290 _146293 f P g x) = (term656 _146290 _146293 f P g x).
Proof. exact (MK_COMB (@lem8359485 _146290 _146293 P f x) (@lem8359464 _146290 _146293 P g x)). Qed.
Lemma lem8359487 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem8359494 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8359495 {_146290 _146293 : Type'} (f : type799 _146290 _146293) (x : _146293 -> _146290) : (f x) = (@I ((_146293 -> _146290) -> _146293 -> Prop) f x).
Proof. exact (@lem8359494 (_146293 -> _146290) (_146293 -> Prop) f x). Qed.
Lemma lem8359496 {_146290 _146293 : Type'} (P : type799 _146290 _146293) (g : _146293 -> _146290) : (P g) = (@I ((_146293 -> _146290) -> _146293 -> Prop) P g).
Proof. exact (@lem8359495 _146290 _146293 P g). Qed.
Lemma lem8359497 {_146293 : Type'} (x : _146293) : x = x.
Proof. exact (eq_refl x). Qed.
Lemma lem8359498 {_146290 _146293 : Type'} (P : type799 _146290 _146293) (g : _146293 -> _146290) (x : _146293) : (P g x) = (@I ((_146293 -> _146290) -> _146293 -> Prop) P g x).
Proof. exact (MK_COMB (@lem8359496 _146290 _146293 P g) (@lem8359497 _146293 x)). Qed.
Lemma lem8359500 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8359501 {_146293 : Type'} (f : _146293 -> Prop) (x : _146293) : (f x) = (@I (_146293 -> Prop) f x).
Proof. exact (@lem8359500 _146293 Prop f x). Qed.
Lemma lem8359502 {_146290 _146293 : Type'} (P : type799 _146290 _146293) (g : _146293 -> _146290) (x : _146293) : (@I ((_146293 -> _146290) -> _146293 -> Prop) P g x) = (term593 _146290 _146293 P g x).
Proof. exact (@lem8359501 _146293 (@I ((_146293 -> _146290) -> _146293 -> Prop) P g) x). Qed.
Lemma lem8359504 {_146290 _146293 : Type'} (P : type799 _146290 _146293) (g : _146293 -> _146290) (x : _146293) : (P g x) = (term593 _146290 _146293 P g x).
Proof. exact (TRANS (@lem8359498 _146290 _146293 P g x) (@lem8359502 _146290 _146293 P g x)). Qed.
Lemma lem8359505 {_146290 _146293 : Type'} (P : type799 _146290 _146293) (g : _146293 -> _146290) (x : _146293) : (term594 _146290 _146293 P g x) = (term595 _146290 _146293 P g x).
Proof. exact (MK_COMB (@lem8359487) (@lem8359504 _146290 _146293 P g x)). Qed.
Lemma lem8359512 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8359513 {_146290 _146293 : Type'} (f : type799 _146290 _146293) (x : _146293 -> _146290) : (f x) = (@I ((_146293 -> _146290) -> _146293 -> Prop) f x).
Proof. exact (@lem8359512 (_146293 -> _146290) (_146293 -> Prop) f x). Qed.
Lemma lem8359514 {_146290 _146293 : Type'} (P : type799 _146290 _146293) (f : _146293 -> _146290) : (P f) = (@I ((_146293 -> _146290) -> _146293 -> Prop) P f).
Proof. exact (@lem8359513 _146290 _146293 P f). Qed.
Lemma lem8359515 {_146293 : Type'} (x : _146293) : x = x.
Proof. exact (eq_refl x). Qed.
Lemma lem8359516 {_146290 _146293 : Type'} (P : type799 _146290 _146293) (f : _146293 -> _146290) (x : _146293) : (P f x) = (@I ((_146293 -> _146290) -> _146293 -> Prop) P f x).
Proof. exact (MK_COMB (@lem8359514 _146290 _146293 P f) (@lem8359515 _146293 x)). Qed.
Lemma lem8359518 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8359519 {_146293 : Type'} (f : _146293 -> Prop) (x : _146293) : (f x) = (@I (_146293 -> Prop) f x).
Proof. exact (@lem8359518 _146293 Prop f x). Qed.
Lemma lem8359520 {_146290 _146293 : Type'} (P : type799 _146290 _146293) (f : _146293 -> _146290) (x : _146293) : (@I ((_146293 -> _146290) -> _146293 -> Prop) P f x) = (term593 _146290 _146293 P f x).
Proof. exact (@lem8359519 _146293 (@I ((_146293 -> _146290) -> _146293 -> Prop) P f) x). Qed.
Lemma lem8359522 {_146290 _146293 : Type'} (P : type799 _146290 _146293) (f : _146293 -> _146290) (x : _146293) : (P f x) = (term593 _146290 _146293 P f x).
Proof. exact (TRANS (@lem8359516 _146290 _146293 P f x) (@lem8359520 _146290 _146293 P f x)). Qed.
Lemma lem8359523 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8359524 {_146290 _146293 : Type'} (P : type799 _146290 _146293) (f : _146293 -> _146290) (x : _146293) : (term657 _146290 _146293 P f x) = (term658 _146290 _146293 P f x).
Proof. exact (MK_COMB (@lem8359523) (@lem8359522 _146290 _146293 P f x)). Qed.
Lemma lem8359525 {_146290 _146293 : Type'} (f : _146293 -> _146290) (P : type799 _146290 _146293) (g : _146293 -> _146290) (x : _146293) : (term659 _146290 _146293 f P g x) = (term660 _146290 _146293 f P g x).
Proof. exact (MK_COMB (@lem8359524 _146290 _146293 P f x) (@lem8359505 _146290 _146293 P g x)). Qed.
Lemma lem8359526 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8359527 {_146290 _146293 : Type'} (f : _146293 -> _146290) (P : type799 _146290 _146293) (g : _146293 -> _146290) (x : _146293) : (term661 _146290 _146293 f P g x) = (term662 _146290 _146293 f P g x).
Proof. exact (MK_COMB (@lem8359526) (@lem8359525 _146290 _146293 f P g x)). Qed.
Lemma lem8359528 {_146290 _146293 : Type'} (f : _146293 -> _146290) (P : type799 _146290 _146293) (g : _146293 -> _146290) (x : _146293) : (term154 _146290 _146293 f P g x) = (term663 _146290 _146293 f P g x).
Proof. exact (MK_COMB (@lem8359527 _146290 _146293 f P g x) (@lem8359486 _146290 _146293 f P g x)). Qed.
Lemma lem8359529 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8359530 {_146290 _146293 : Type'} (f : _146293 -> _146290) (P : type799 _146290 _146293) (g : _146293 -> _146290) (x : _146293) : (term157 _146290 _146293 f P g x) = (term664 _146290 _146293 f P g x).
Proof. exact (MK_COMB (@lem8359529) (@lem8359528 _146290 _146293 f P g x)). Qed.
Lemma lem8359531 {_146290 _146293 : Type'} (P : type799 _146290 _146293) (G : type797 _146290 _146293) (f : _146293 -> _146290) (H' : type796 _146290 _146293) (g : _146293 -> _146290) (x : _146293) : (term158 _146290 _146293 P G f H' g x) = (term665 _146290 _146293 P G f H' g x).
Proof. exact (MK_COMB (@lem8359530 _146290 _146293 f P g x) (@lem8359447 _146290 _146293 G f H' g x)). Qed.
Lemma lem8359532 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem8359533 {_146290 : Type'} : (@eq _146290) = (@eq _146290).
Proof. exact (eq_refl (@eq _146290)). Qed.
Lemma lem8359534 {_146290 _146293 : Type'} (f : _146293 -> _146290) : f = f.
Proof. exact (eq_refl f). Qed.
Lemma lem8359543 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8359544 {_146290 _146293 : Type'} (f : type784 _146290 _146293) (x : _146293 -> _146290) : (f x) = (@I ((_146293 -> _146290) -> (_146293 -> _146290) -> _146293 -> _146293) f x).
Proof. exact (@lem8359543 (_146293 -> _146290) (type797 _146290 _146293) f x). Qed.
Lemma lem8359545 {_146290 _146293 : Type'} (z : type784 _146290 _146293) (f : _146293 -> _146290) : (z f) = (@I ((_146293 -> _146290) -> (_146293 -> _146290) -> _146293 -> _146293) z f).
Proof. exact (@lem8359544 _146290 _146293 z f). Qed.
Lemma lem8359546 {_146290 _146293 : Type'} (g : _146293 -> _146290) : g = g.
Proof. exact (eq_refl g). Qed.
Lemma lem8359547 {_146290 _146293 : Type'} (z : type784 _146290 _146293) (f : _146293 -> _146290) (g : _146293 -> _146290) : (z f g) = (@I ((_146293 -> _146290) -> (_146293 -> _146290) -> _146293 -> _146293) z f g).
Proof. exact (MK_COMB (@lem8359545 _146290 _146293 z f) (@lem8359546 _146290 _146293 g)). Qed.
Lemma lem8359549 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8359550 {_146290 _146293 : Type'} (f : type797 _146290 _146293) (x : _146293 -> _146290) : (f x) = (@I ((_146293 -> _146290) -> _146293 -> _146293) f x).
Proof. exact (@lem8359549 (_146293 -> _146290) (_146293 -> _146293) f x). Qed.
Lemma lem8359551 {_146290 _146293 : Type'} (z : type784 _146290 _146293) (f : _146293 -> _146290) (g : _146293 -> _146290) : (@I ((_146293 -> _146290) -> (_146293 -> _146290) -> _146293 -> _146293) z f g) = (term666 _146290 _146293 z f g).
Proof. exact (@lem8359550 _146290 _146293 (@I ((_146293 -> _146290) -> (_146293 -> _146290) -> _146293 -> _146293) z f) g). Qed.
Lemma lem8359552 {_146290 _146293 : Type'} (z : type784 _146290 _146293) (f : _146293 -> _146290) (g : _146293 -> _146290) : (z f g) = (term666 _146290 _146293 z f g).
Proof. exact (TRANS (@lem8359547 _146290 _146293 z f g) (@lem8359551 _146290 _146293 z f g)). Qed.
Lemma lem8359553 {_146293 : Type'} (x : _146293) : x = x.
Proof. exact (eq_refl x). Qed.
Lemma lem8359554 {_146290 _146293 : Type'} (z : type784 _146290 _146293) (f : _146293 -> _146290) (g : _146293 -> _146290) (x : _146293) : (z f g x) = (term667 _146290 _146293 z f g x).
Proof. exact (MK_COMB (@lem8359552 _146290 _146293 z f g) (@lem8359553 _146293 x)). Qed.
Lemma lem8359556 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8359557 {_146293 : Type'} (f : _146293 -> _146293) (x : _146293) : (f x) = (@I (_146293 -> _146293) f x).
Proof. exact (@lem8359556 _146293 _146293 f x). Qed.
Lemma lem8359558 {_146290 _146293 : Type'} (z : type784 _146290 _146293) (f : _146293 -> _146290) (g : _146293 -> _146290) (x : _146293) : (term667 _146290 _146293 z f g x) = (term668 _146290 _146293 z f g x).
Proof. exact (@lem8359557 _146293 (term666 _146290 _146293 z f g) x). Qed.
Lemma lem8359560 {_146290 _146293 : Type'} (z : type784 _146290 _146293) (f : _146293 -> _146290) (g : _146293 -> _146290) (x : _146293) : (z f g x) = (term668 _146290 _146293 z f g x).
Proof. exact (TRANS (@lem8359554 _146290 _146293 z f g x) (@lem8359558 _146290 _146293 z f g x)). Qed.
Lemma lem8359561 {_146290 _146293 : Type'} (z : type784 _146290 _146293) (f : _146293 -> _146290) (g : _146293 -> _146290) (x : _146293) : (term669 _146290 _146293 z f g x) = (term670 _146290 _146293 z f g x).
Proof. exact (MK_COMB (@lem8359534 _146290 _146293 f) (@lem8359560 _146290 _146293 z f g x)). Qed.
Lemma lem8359563 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8359564 {_146290 _146293 : Type'} (f : _146293 -> _146290) (x : _146293) : (f x) = (@I (_146293 -> _146290) f x).
Proof. exact (@lem8359563 _146293 _146290 f x). Qed.
Lemma lem8359565 {_146290 _146293 : Type'} (z : type784 _146290 _146293) (f : _146293 -> _146290) (g : _146293 -> _146290) (x : _146293) : (term670 _146290 _146293 z f g x) = (term671 _146290 _146293 z f g x).
Proof. exact (@lem8359564 _146290 _146293 f (term668 _146290 _146293 z f g x)). Qed.
Lemma lem8359566 {_146290 _146293 : Type'} (z : type784 _146290 _146293) (f : _146293 -> _146290) (g : _146293 -> _146290) (x : _146293) : (term669 _146290 _146293 z f g x) = (term671 _146290 _146293 z f g x).
Proof. exact (TRANS (@lem8359561 _146290 _146293 z f g x) (@lem8359565 _146290 _146293 z f g x)). Qed.
Lemma lem8359567 {_146290 _146293 : Type'} (g : _146293 -> _146290) : g = g.
Proof. exact (eq_refl g). Qed.
Lemma lem8359576 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8359577 {_146290 _146293 : Type'} (f : type784 _146290 _146293) (x : _146293 -> _146290) : (f x) = (@I ((_146293 -> _146290) -> (_146293 -> _146290) -> _146293 -> _146293) f x).
Proof. exact (@lem8359576 (_146293 -> _146290) (type797 _146290 _146293) f x). Qed.
Lemma lem8359578 {_146290 _146293 : Type'} (z : type784 _146290 _146293) (f : _146293 -> _146290) : (z f) = (@I ((_146293 -> _146290) -> (_146293 -> _146290) -> _146293 -> _146293) z f).
Proof. exact (@lem8359577 _146290 _146293 z f). Qed.
Lemma lem8359579 {_146290 _146293 : Type'} (g : _146293 -> _146290) : g = g.
Proof. exact (eq_refl g). Qed.
Lemma lem8359580 {_146290 _146293 : Type'} (z : type784 _146290 _146293) (f : _146293 -> _146290) (g : _146293 -> _146290) : (z f g) = (@I ((_146293 -> _146290) -> (_146293 -> _146290) -> _146293 -> _146293) z f g).
Proof. exact (MK_COMB (@lem8359578 _146290 _146293 z f) (@lem8359579 _146290 _146293 g)). Qed.
Lemma lem8359582 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8359583 {_146290 _146293 : Type'} (f : type797 _146290 _146293) (x : _146293 -> _146290) : (f x) = (@I ((_146293 -> _146290) -> _146293 -> _146293) f x).
Proof. exact (@lem8359582 (_146293 -> _146290) (_146293 -> _146293) f x). Qed.
Lemma lem8359584 {_146290 _146293 : Type'} (z : type784 _146290 _146293) (f : _146293 -> _146290) (g : _146293 -> _146290) : (@I ((_146293 -> _146290) -> (_146293 -> _146290) -> _146293 -> _146293) z f g) = (term666 _146290 _146293 z f g).
Proof. exact (@lem8359583 _146290 _146293 (@I ((_146293 -> _146290) -> (_146293 -> _146290) -> _146293 -> _146293) z f) g). Qed.
Lemma lem8359585 {_146290 _146293 : Type'} (z : type784 _146290 _146293) (f : _146293 -> _146290) (g : _146293 -> _146290) : (z f g) = (term666 _146290 _146293 z f g).
Proof. exact (TRANS (@lem8359580 _146290 _146293 z f g) (@lem8359584 _146290 _146293 z f g)). Qed.
Lemma lem8359586 {_146293 : Type'} (x : _146293) : x = x.
Proof. exact (eq_refl x). Qed.
Lemma lem8359587 {_146290 _146293 : Type'} (z : type784 _146290 _146293) (f : _146293 -> _146290) (g : _146293 -> _146290) (x : _146293) : (z f g x) = (term667 _146290 _146293 z f g x).
Proof. exact (MK_COMB (@lem8359585 _146290 _146293 z f g) (@lem8359586 _146293 x)). Qed.
Lemma lem8359589 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8359590 {_146293 : Type'} (f : _146293 -> _146293) (x : _146293) : (f x) = (@I (_146293 -> _146293) f x).
Proof. exact (@lem8359589 _146293 _146293 f x). Qed.
Lemma lem8359591 {_146290 _146293 : Type'} (z : type784 _146290 _146293) (f : _146293 -> _146290) (g : _146293 -> _146290) (x : _146293) : (term667 _146290 _146293 z f g x) = (term668 _146290 _146293 z f g x).
Proof. exact (@lem8359590 _146293 (term666 _146290 _146293 z f g) x). Qed.
Lemma lem8359593 {_146290 _146293 : Type'} (z : type784 _146290 _146293) (f : _146293 -> _146290) (g : _146293 -> _146290) (x : _146293) : (z f g x) = (term668 _146290 _146293 z f g x).
Proof. exact (TRANS (@lem8359587 _146290 _146293 z f g x) (@lem8359591 _146290 _146293 z f g x)). Qed.
Lemma lem8359594 {_146290 _146293 : Type'} (z : type784 _146290 _146293) (f : _146293 -> _146290) (g : _146293 -> _146290) (x : _146293) : (term672 _146290 _146293 z f g x) = (term673 _146290 _146293 z f g x).
Proof. exact (MK_COMB (@lem8359567 _146290 _146293 g) (@lem8359593 _146290 _146293 z f g x)). Qed.
Lemma lem8359596 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8359597 {_146290 _146293 : Type'} (f : _146293 -> _146290) (x : _146293) : (f x) = (@I (_146293 -> _146290) f x).
Proof. exact (@lem8359596 _146293 _146290 f x). Qed.
Lemma lem8359598 {_146290 _146293 : Type'} (z : type784 _146290 _146293) (f : _146293 -> _146290) (g : _146293 -> _146290) (x : _146293) : (term673 _146290 _146293 z f g x) = (term674 _146290 _146293 z f g x).
Proof. exact (@lem8359597 _146290 _146293 g (term668 _146290 _146293 z f g x)). Qed.
Lemma lem8359599 {_146290 _146293 : Type'} (z : type784 _146290 _146293) (f : _146293 -> _146290) (g : _146293 -> _146290) (x : _146293) : (term672 _146290 _146293 z f g x) = (term674 _146290 _146293 z f g x).
Proof. exact (TRANS (@lem8359594 _146290 _146293 z f g x) (@lem8359598 _146290 _146293 z f g x)). Qed.
Lemma lem8359600 {_146290 _146293 : Type'} (z : type784 _146290 _146293) (f : _146293 -> _146290) (g : _146293 -> _146290) (x : _146293) : (term675 _146290 _146293 z f g x) = (term676 _146290 _146293 z f g x).
Proof. exact (MK_COMB (@lem8359533 _146290) (@lem8359566 _146290 _146293 z f g x)). Qed.
Lemma lem8359601 {_146290 _146293 : Type'} (z : type784 _146290 _146293) (f : _146293 -> _146290) (g : _146293 -> _146290) (x : _146293) : ((term669 _146290 _146293 z f g x) = (term672 _146290 _146293 z f g x)) = ((term671 _146290 _146293 z f g x) = (term674 _146290 _146293 z f g x)).
Proof. exact (MK_COMB (@lem8359600 _146290 _146293 z f g x) (@lem8359599 _146290 _146293 z f g x)). Qed.
Lemma lem8359602 {_146290 _146293 : Type'} (z : type784 _146290 _146293) (f : _146293 -> _146290) (g : _146293 -> _146290) (x : _146293) : (term677 _146290 _146293 z f g x) = (term678 _146290 _146293 z f g x).
Proof. exact (MK_COMB (@lem8359532) (@lem8359601 _146290 _146293 z f g x)). Qed.
Lemma lem8359603 {_146293 : Type'} (lt2 : type1402 _146293) : lt2 = lt2.
Proof. exact (eq_refl lt2). Qed.
Lemma lem8359612 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8359613 {_146290 _146293 : Type'} (f : type784 _146290 _146293) (x : _146293 -> _146290) : (f x) = (@I ((_146293 -> _146290) -> (_146293 -> _146290) -> _146293 -> _146293) f x).
Proof. exact (@lem8359612 (_146293 -> _146290) (type797 _146290 _146293) f x). Qed.
Lemma lem8359614 {_146290 _146293 : Type'} (z : type784 _146290 _146293) (f : _146293 -> _146290) : (z f) = (@I ((_146293 -> _146290) -> (_146293 -> _146290) -> _146293 -> _146293) z f).
Proof. exact (@lem8359613 _146290 _146293 z f). Qed.
Lemma lem8359615 {_146290 _146293 : Type'} (g : _146293 -> _146290) : g = g.
Proof. exact (eq_refl g). Qed.
Lemma lem8359616 {_146290 _146293 : Type'} (z : type784 _146290 _146293) (f : _146293 -> _146290) (g : _146293 -> _146290) : (z f g) = (@I ((_146293 -> _146290) -> (_146293 -> _146290) -> _146293 -> _146293) z f g).
Proof. exact (MK_COMB (@lem8359614 _146290 _146293 z f) (@lem8359615 _146290 _146293 g)). Qed.
Lemma lem8359618 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8359619 {_146290 _146293 : Type'} (f : type797 _146290 _146293) (x : _146293 -> _146290) : (f x) = (@I ((_146293 -> _146290) -> _146293 -> _146293) f x).
Proof. exact (@lem8359618 (_146293 -> _146290) (_146293 -> _146293) f x). Qed.
Lemma lem8359620 {_146290 _146293 : Type'} (z : type784 _146290 _146293) (f : _146293 -> _146290) (g : _146293 -> _146290) : (@I ((_146293 -> _146290) -> (_146293 -> _146290) -> _146293 -> _146293) z f g) = (term666 _146290 _146293 z f g).
Proof. exact (@lem8359619 _146290 _146293 (@I ((_146293 -> _146290) -> (_146293 -> _146290) -> _146293 -> _146293) z f) g). Qed.
Lemma lem8359621 {_146290 _146293 : Type'} (z : type784 _146290 _146293) (f : _146293 -> _146290) (g : _146293 -> _146290) : (z f g) = (term666 _146290 _146293 z f g).
Proof. exact (TRANS (@lem8359616 _146290 _146293 z f g) (@lem8359620 _146290 _146293 z f g)). Qed.
Lemma lem8359622 {_146293 : Type'} (x : _146293) : x = x.
Proof. exact (eq_refl x). Qed.
Lemma lem8359623 {_146290 _146293 : Type'} (z : type784 _146290 _146293) (f : _146293 -> _146290) (g : _146293 -> _146290) (x : _146293) : (z f g x) = (term667 _146290 _146293 z f g x).
Proof. exact (MK_COMB (@lem8359621 _146290 _146293 z f g) (@lem8359622 _146293 x)). Qed.
Lemma lem8359625 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8359626 {_146293 : Type'} (f : _146293 -> _146293) (x : _146293) : (f x) = (@I (_146293 -> _146293) f x).
Proof. exact (@lem8359625 _146293 _146293 f x). Qed.
Lemma lem8359627 {_146290 _146293 : Type'} (z : type784 _146290 _146293) (f : _146293 -> _146290) (g : _146293 -> _146290) (x : _146293) : (term667 _146290 _146293 z f g x) = (term668 _146290 _146293 z f g x).
Proof. exact (@lem8359626 _146293 (term666 _146290 _146293 z f g) x). Qed.
Lemma lem8359629 {_146290 _146293 : Type'} (z : type784 _146290 _146293) (f : _146293 -> _146290) (g : _146293 -> _146290) (x : _146293) : (z f g x) = (term668 _146290 _146293 z f g x).
Proof. exact (TRANS (@lem8359623 _146290 _146293 z f g x) (@lem8359627 _146290 _146293 z f g x)). Qed.
Lemma lem8359630 {_146293 : Type'} (x : _146293) : x = x.
Proof. exact (eq_refl x). Qed.
Lemma lem8359631 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (z : type784 _146290 _146293) (f : _146293 -> _146290) (g : _146293 -> _146290) (x : _146293) : (term679 _146290 _146293 lt2 z f g x) = (term680 _146290 _146293 lt2 z f g x).
Proof. exact (MK_COMB (@lem8359603 _146293 lt2) (@lem8359629 _146290 _146293 z f g x)). Qed.
Lemma lem8359632 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (z : type784 _146290 _146293) (f : _146293 -> _146290) (g : _146293 -> _146290) (x : _146293) : (term681 _146290 _146293 lt2 z f g x) = (term682 _146290 _146293 lt2 z f g x).
Proof. exact (MK_COMB (@lem8359631 _146290 _146293 lt2 z f g x) (@lem8359630 _146293 x)). Qed.
Lemma lem8359634 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8359635 {_146293 : Type'} (f : type1402 _146293) (x : _146293) : (f x) = (@I (_146293 -> _146293 -> Prop) f x).
Proof. exact (@lem8359634 _146293 (_146293 -> Prop) f x). Qed.
Lemma lem8359636 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (z : type784 _146290 _146293) (f : _146293 -> _146290) (g : _146293 -> _146290) (x : _146293) : (term680 _146290 _146293 lt2 z f g x) = (term683 _146290 _146293 lt2 z f g x).
Proof. exact (@lem8359635 _146293 lt2 (term668 _146290 _146293 z f g x)). Qed.
Lemma lem8359637 {_146293 : Type'} (x : _146293) : x = x.
Proof. exact (eq_refl x). Qed.
Lemma lem8359638 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (z : type784 _146290 _146293) (f : _146293 -> _146290) (g : _146293 -> _146290) (x : _146293) : (term682 _146290 _146293 lt2 z f g x) = (term684 _146290 _146293 lt2 z f g x).
Proof. exact (MK_COMB (@lem8359636 _146290 _146293 lt2 z f g x) (@lem8359637 _146293 x)). Qed.
Lemma lem8359640 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8359641 {_146293 : Type'} (f : _146293 -> Prop) (x : _146293) : (f x) = (@I (_146293 -> Prop) f x).
Proof. exact (@lem8359640 _146293 Prop f x). Qed.
Lemma lem8359642 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (z : type784 _146290 _146293) (f : _146293 -> _146290) (g : _146293 -> _146290) (x : _146293) : (term684 _146290 _146293 lt2 z f g x) = (term685 _146290 _146293 lt2 z f g x).
Proof. exact (@lem8359641 _146293 (term683 _146290 _146293 lt2 z f g x) x). Qed.
Lemma lem8359643 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (z : type784 _146290 _146293) (f : _146293 -> _146290) (g : _146293 -> _146290) (x : _146293) : (term682 _146290 _146293 lt2 z f g x) = (term685 _146290 _146293 lt2 z f g x).
Proof. exact (TRANS (@lem8359638 _146290 _146293 lt2 z f g x) (@lem8359642 _146290 _146293 lt2 z f g x)). Qed.
Lemma lem8359644 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (z : type784 _146290 _146293) (f : _146293 -> _146290) (g : _146293 -> _146290) (x : _146293) : (term681 _146290 _146293 lt2 z f g x) = (term685 _146290 _146293 lt2 z f g x).
Proof. exact (TRANS (@lem8359632 _146290 _146293 lt2 z f g x) (@lem8359643 _146290 _146293 lt2 z f g x)). Qed.
Lemma lem8359645 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8359646 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (z : type784 _146290 _146293) (f : _146293 -> _146290) (g : _146293 -> _146290) (x : _146293) : (term686 _146290 _146293 lt2 z f g x) = (term687 _146290 _146293 lt2 z f g x).
Proof. exact (MK_COMB (@lem8359645) (@lem8359644 _146290 _146293 lt2 z f g x)). Qed.
Lemma lem8359647 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (z : type784 _146290 _146293) (f : _146293 -> _146290) (g : _146293 -> _146290) (x : _146293) : (term688 _146290 _146293 lt2 z f g x) = (term689 _146290 _146293 lt2 z f g x).
Proof. exact (MK_COMB (@lem8359646 _146290 _146293 lt2 z f g x) (@lem8359602 _146290 _146293 z f g x)). Qed.
Lemma lem8359648 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8359649 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (z : type784 _146290 _146293) (f : _146293 -> _146290) (g : _146293 -> _146290) (x : _146293) : (term690 _146290 _146293 lt2 z f g x) = (term691 _146290 _146293 lt2 z f g x).
Proof. exact (MK_COMB (@lem8359648) (@lem8359647 _146290 _146293 lt2 z f g x)). Qed.
Lemma lem8359650 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (z : type784 _146290 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (f : _146293 -> _146290) (H' : type796 _146290 _146293) (g : _146293 -> _146290) (x : _146293) : (term692 _146290 _146293 lt2 z P G f H' g x) = (term693 _146290 _146293 lt2 z P G f H' g x).
Proof. exact (MK_COMB (@lem8359649 _146290 _146293 lt2 z f g x) (@lem8359531 _146290 _146293 P G f H' g x)). Qed.
Lemma lem8359651 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (z : type784 _146290 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (f : _146293 -> _146290) (H' : type796 _146290 _146293) (g : _146293 -> _146290) : (term694 _146290 _146293 lt2 z P G f H' g) = (term695 _146290 _146293 lt2 z P G f H' g).
Proof. exact (fun_ext (fun x : _146293 => @lem8359650 _146290 _146293 lt2 z P G f H' g x)). Qed.
Lemma lem8359652 {_146293 : Type'} : (@all _146293) = (@all _146293).
Proof. exact (eq_refl (@all _146293)). Qed.
Lemma lem8359653 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (z : type784 _146290 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (f : _146293 -> _146290) (H' : type796 _146290 _146293) (g : _146293 -> _146290) : (term696 _146290 _146293 lt2 z P G f H' g) = (term697 _146290 _146293 lt2 z P G f H' g).
Proof. exact (MK_COMB (@lem8359652 _146293) (@lem8359651 _146290 _146293 lt2 z P G f H' g)). Qed.
Lemma lem8359654 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (z : type784 _146290 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (f : _146293 -> _146290) (H' : type796 _146290 _146293) : (term698 _146290 _146293 lt2 z P G f H') = (term699 _146290 _146293 lt2 z P G f H').
Proof. exact (fun_ext (fun g : _146293 -> _146290 => @lem8359653 _146290 _146293 lt2 z P G f H' g)). Qed.
Lemma lem8359655 {_146290 _146293 : Type'} : (@all (_146293 -> _146290)) = (@all (_146293 -> _146290)).
Proof. exact (eq_refl (@all (_146293 -> _146290))). Qed.
Lemma lem8359656 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (z : type784 _146290 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (f : _146293 -> _146290) (H' : type796 _146290 _146293) : (term255 _146290 _146293 lt2 z P G f H') = (term700 _146290 _146293 lt2 z P G f H').
Proof. exact (MK_COMB (@lem8359655 _146290 _146293) (@lem8359654 _146290 _146293 lt2 z P G f H')). Qed.
Lemma lem8359657 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (z : type784 _146290 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (H' : type796 _146290 _146293) : (term257 _146290 _146293 lt2 z P G H') = (term701 _146290 _146293 lt2 z P G H').
Proof. exact (fun_ext (fun f : _146293 -> _146290 => @lem8359656 _146290 _146293 lt2 z P G f H')). Qed.
Lemma lem8359658 {_146290 _146293 : Type'} : (@all (_146293 -> _146290)) = (@all (_146293 -> _146290)).
Proof. exact (eq_refl (@all (_146293 -> _146290))). Qed.
Lemma lem8359659 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (z : type784 _146290 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (H' : type796 _146290 _146293) : (term259 _146290 _146293 lt2 z P G H') = (term702 _146290 _146293 lt2 z P G H').
Proof. exact (MK_COMB (@lem8359658 _146290 _146293) (@lem8359657 _146290 _146293 lt2 z P G H')). Qed.
Lemma lem8359660 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (z : type784 _146290 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (H' : type796 _146290 _146293) (h1 : term259 _146290 _146293 lt2 z P G H') : term702 _146290 _146293 lt2 z P G H'.
Proof. exact (EQ_MP (@lem8359659 _146290 _146293 lt2 z P G H') (@lem8358742 _146290 _146293 lt2 z P G H' h1)). Qed.
Lemma lem8359664 {_146290 _146293 : Type'} (H' : type796 _146290 _146293) (g : _146293 -> _146290) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (f : _146293 -> _146290) (lt2 : type1402 _146293) (y : _146293) (x : _146293) (h1 : term648 _146290 _146293 H' g P G f lt2 y x) : term648 _146290 _146293 H' g P G f lt2 y x.
Proof. exact (h1). Qed.
Lemma lem8359665 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (f : _146293 -> _146290) (H' : type796 _146290 _146293) (g : _146293 -> _146290) (x : _146293) (h1 : term646 _146290 _146293 lt2 P G f H' g x) : term646 _146290 _146293 lt2 P G f H' g x.
Proof. exact (h1). Qed.
Lemma lem8359666 {_146290 _146293 : Type'} (H' : type796 _146290 _146293) (g : _146293 -> _146290) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (f : _146293 -> _146290) (lt2 : type1402 _146293) (y : _146293) (x : _146293) (h1 : term627 _146290 _146293 H' g P G f lt2 y x) : term627 _146290 _146293 H' g P G f lt2 y x.
Proof. exact (h1). Qed.
Lemma lem8359667 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (f : _146293 -> _146290) (H' : type796 _146290 _146293) (g : _146293 -> _146290) (x : _146293) (h1 : term646 _146290 _146293 lt2 P G f H' g x) : term645 _146290 _146293 P G f H' g x.
Proof. exact (proj2 (@lem8359665 _146290 _146293 lt2 P G f H' g x h1)). Qed.
Lemma lem8359668 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (f : _146293 -> _146290) (H' : type796 _146290 _146293) (g : _146293 -> _146290) (x : _146293) (h1 : term646 _146290 _146293 lt2 P G f H' g x) : term623 _146290 _146293 lt2 x f g.
Proof. exact (proj1 (@lem8359665 _146290 _146293 lt2 P G f H' g x h1)). Qed.
Lemma lem8359669 {_146290 _146293 : Type'} (f : _146293 -> _146290) (P : type799 _146290 _146293) (g : _146293 -> _146290) (x : _146293) (h1 : term643 _146290 _146293 f P g x) : term643 _146290 _146293 f P g x.
Proof. exact (h1). Qed.
Lemma lem8359670 {_146290 _146293 : Type'} (G : type797 _146290 _146293) (f : _146293 -> _146290) (H' : type796 _146290 _146293) (g : _146293 -> _146290) (x : _146293) (h1 : term634 _146290 _146293 G f H' g x) : term634 _146290 _146293 G f H' g x.
Proof. exact (h1). Qed.
Lemma lem8359671 {_146290 _146293 : Type'} (f : _146293 -> _146290) (P : type799 _146290 _146293) (g : _146293 -> _146290) (x : _146293) (h1 : term640 _146290 _146293 f P g x) : term640 _146290 _146293 f P g x.
Proof. exact (h1). Qed.
Lemma lem8359672 {_146290 _146293 : Type'} (f : _146293 -> _146290) (P : type799 _146290 _146293) (g : _146293 -> _146290) (x : _146293) (h1 : term638 _146290 _146293 f P g x) : term638 _146290 _146293 f P g x.
Proof. exact (h1). Qed.
Lemma lem8359679 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (f : _146293 -> _146290) (H' : type796 _146290 _146293) (g : _146293 -> _146290) (x : _146293) (h1 : term625 _146290 _146293 lt2 f H' g x) : term625 _146290 _146293 lt2 f H' g x.
Proof. exact (h1). Qed.
Lemma lem8359680 {_146290 _146293 : Type'} (P : type799 _146290 _146293) (G : type797 _146290 _146293) (f : _146293 -> _146290) (lt2 : type1402 _146293) (y : _146293) (x : _146293) (h1 : term614 _146290 _146293 P G f lt2 y x) : term614 _146290 _146293 P G f lt2 y x.
Proof. exact (h1). Qed.
Lemma lem8359682 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (f : _146293 -> _146290) (H' : type796 _146290 _146293) (g : _146293 -> _146290) (x : _146293) (h1 : term625 _146290 _146293 lt2 f H' g x) : term623 _146290 _146293 lt2 x f g.
Proof. exact (proj1 (@lem8359679 _146290 _146293 lt2 f H' g x h1)). Qed.
Lemma lem8359684 {_146290 _146293 : Type'} (P : type799 _146290 _146293) (G : type797 _146290 _146293) (f : _146293 -> _146290) (lt2 : type1402 _146293) (y : _146293) (x : _146293) (h1 : term614 _146290 _146293 P G f lt2 y x) : term611 _146290 _146293 P lt2 y G f x.
Proof. exact (proj1 (@lem8359680 _146290 _146293 P G f lt2 y x h1)). Qed.
Lemma lem8359840 {_146293 : Type'} (lt2 : type1402 _146293) (h1 : term649 _146293 lt2) : term649 _146293 lt2.
Proof. exact (h1). Qed.
Lemma lem8359904 {_146290 _146293 : Type'} (P : type799 _146290 _146293) (lt2 : type1402 _146293) (z : type784 _146290 _146293) (G : type797 _146290 _146293) (f : _146293 -> _146290) (H' : type796 _146290 _146293) (g : _146293 -> _146290) (x : _146293) : (term693 _146290 _146293 lt2 z P G f H' g x) = (term703 _146290 _146293 P lt2 z G f H' g x).
Proof. exact (@lem19490 (term663 _146290 _146293 f P g x) (term689 _146290 _146293 lt2 z f g x) (term654 _146290 _146293 G f H' g x)). Qed.
Lemma lem8359905 {_146290 _146293 : Type'} (G : type797 _146290 _146293) (lt2 : type1402 _146293) (z : type784 _146290 _146293) (f : _146293 -> _146290) (H' : type796 _146290 _146293) (g : _146293 -> _146290) (x : _146293) : (term704 _146290 _146293 lt2 z G f H' g x) = (term705 _146290 _146293 G lt2 z f H' g x).
Proof. exact (@lem19490 ((term587 _146290 _146293 G f x) = (term587 _146290 _146293 G g x)) (term689 _146290 _146293 lt2 z f g x) ((term615 _146290 _146293 H' f x) = (term615 _146290 _146293 H' g x))). Qed.
Lemma lem8359912 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (z : type784 _146290 _146293) (f : _146293 -> _146290) (H' : type796 _146290 _146293) (g : _146293 -> _146290) (x : _146293) : (term706 _146290 _146293 lt2 z f H' g x) = (term707 _146290 _146293 lt2 z f H' g x).
Proof. exact (@lem19699 (term685 _146290 _146293 lt2 z f g x) (term678 _146290 _146293 z f g x) ((term615 _146290 _146293 H' f x) = (term615 _146290 _146293 H' g x))). Qed.
Lemma lem8359919 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (z : type784 _146290 _146293) (f : _146293 -> _146290) (G : type797 _146290 _146293) (g : _146293 -> _146290) (x : _146293) : (term708 _146290 _146293 lt2 z f G g x) = (term709 _146290 _146293 lt2 z f G g x).
Proof. exact (@lem19699 (term685 _146290 _146293 lt2 z f g x) (term678 _146290 _146293 z f g x) ((term587 _146290 _146293 G f x) = (term587 _146290 _146293 G g x))). Qed.
Lemma lem8359920 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8359921 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (z : type784 _146290 _146293) (f : _146293 -> _146290) (G : type797 _146290 _146293) (g : _146293 -> _146290) (x : _146293) : (term710 _146290 _146293 lt2 z f G g x) = (term711 _146290 _146293 lt2 z f G g x).
Proof. exact (MK_COMB (@lem8359920) (@lem8359919 _146290 _146293 lt2 z f G g x)). Qed.
Lemma lem8359922 {_146290 _146293 : Type'} (G : type797 _146290 _146293) (lt2 : type1402 _146293) (z : type784 _146290 _146293) (f : _146293 -> _146290) (H' : type796 _146290 _146293) (g : _146293 -> _146290) (x : _146293) : (term705 _146290 _146293 G lt2 z f H' g x) = (term712 _146290 _146293 G lt2 z f H' g x).
Proof. exact (MK_COMB (@lem8359921 _146290 _146293 lt2 z f G g x) (@lem8359912 _146290 _146293 lt2 z f H' g x)). Qed.
Lemma lem8359923 {_146290 _146293 : Type'} (G : type797 _146290 _146293) (lt2 : type1402 _146293) (z : type784 _146290 _146293) (f : _146293 -> _146290) (H' : type796 _146290 _146293) (g : _146293 -> _146290) (x : _146293) : (term704 _146290 _146293 lt2 z G f H' g x) = (term712 _146290 _146293 G lt2 z f H' g x).
Proof. exact (TRANS (@lem8359905 _146290 _146293 G lt2 z f H' g x) (@lem8359922 _146290 _146293 G lt2 z f H' g x)). Qed.
Lemma lem8359924 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (z : type784 _146290 _146293) (f : _146293 -> _146290) (P : type799 _146290 _146293) (g : _146293 -> _146290) (x : _146293) : (term713 _146290 _146293 lt2 z f P g x) = (term714 _146290 _146293 lt2 z f P g x).
Proof. exact (@lem19490 (term660 _146290 _146293 f P g x) (term689 _146290 _146293 lt2 z f g x) (term656 _146290 _146293 f P g x)). Qed.
Lemma lem8359931 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (z : type784 _146290 _146293) (f : _146293 -> _146290) (P : type799 _146290 _146293) (g : _146293 -> _146290) (x : _146293) : (term715 _146290 _146293 lt2 z f P g x) = (term716 _146290 _146293 lt2 z f P g x).
Proof. exact (@lem19699 (term685 _146290 _146293 lt2 z f g x) (term678 _146290 _146293 z f g x) (term656 _146290 _146293 f P g x)). Qed.
Lemma lem8359938 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (z : type784 _146290 _146293) (f : _146293 -> _146290) (P : type799 _146290 _146293) (g : _146293 -> _146290) (x : _146293) : (term717 _146290 _146293 lt2 z f P g x) = (term718 _146290 _146293 lt2 z f P g x).
Proof. exact (@lem19699 (term685 _146290 _146293 lt2 z f g x) (term678 _146290 _146293 z f g x) (term660 _146290 _146293 f P g x)). Qed.
Lemma lem8359939 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8359940 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (z : type784 _146290 _146293) (f : _146293 -> _146290) (P : type799 _146290 _146293) (g : _146293 -> _146290) (x : _146293) : (term719 _146290 _146293 lt2 z f P g x) = (term720 _146290 _146293 lt2 z f P g x).
Proof. exact (MK_COMB (@lem8359939) (@lem8359938 _146290 _146293 lt2 z f P g x)). Qed.
Lemma lem8359941 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (z : type784 _146290 _146293) (f : _146293 -> _146290) (P : type799 _146290 _146293) (g : _146293 -> _146290) (x : _146293) : (term714 _146290 _146293 lt2 z f P g x) = (term721 _146290 _146293 lt2 z f P g x).
Proof. exact (MK_COMB (@lem8359940 _146290 _146293 lt2 z f P g x) (@lem8359931 _146290 _146293 lt2 z f P g x)). Qed.
Lemma lem8359942 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (z : type784 _146290 _146293) (f : _146293 -> _146290) (P : type799 _146290 _146293) (g : _146293 -> _146290) (x : _146293) : (term713 _146290 _146293 lt2 z f P g x) = (term721 _146290 _146293 lt2 z f P g x).
Proof. exact (TRANS (@lem8359924 _146290 _146293 lt2 z f P g x) (@lem8359941 _146290 _146293 lt2 z f P g x)). Qed.
Lemma lem8359943 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8359944 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (z : type784 _146290 _146293) (f : _146293 -> _146290) (P : type799 _146290 _146293) (g : _146293 -> _146290) (x : _146293) : (term722 _146290 _146293 lt2 z f P g x) = (term723 _146290 _146293 lt2 z f P g x).
Proof. exact (MK_COMB (@lem8359943) (@lem8359942 _146290 _146293 lt2 z f P g x)). Qed.
Lemma lem8359945 {_146290 _146293 : Type'} (P : type799 _146290 _146293) (G : type797 _146290 _146293) (lt2 : type1402 _146293) (z : type784 _146290 _146293) (f : _146293 -> _146290) (H' : type796 _146290 _146293) (g : _146293 -> _146290) (x : _146293) : (term703 _146290 _146293 P lt2 z G f H' g x) = (term724 _146290 _146293 P G lt2 z f H' g x).
Proof. exact (MK_COMB (@lem8359944 _146290 _146293 lt2 z f P g x) (@lem8359923 _146290 _146293 G lt2 z f H' g x)). Qed.
Lemma lem8359947 {_146290 _146293 : Type'} (P : type799 _146290 _146293) (G : type797 _146290 _146293) (lt2 : type1402 _146293) (z : type784 _146290 _146293) (f : _146293 -> _146290) (H' : type796 _146290 _146293) (g : _146293 -> _146290) (x : _146293) : (term693 _146290 _146293 lt2 z P G f H' g x) = (term724 _146290 _146293 P G lt2 z f H' g x).
Proof. exact (TRANS (@lem8359904 _146290 _146293 P lt2 z G f H' g x) (@lem8359945 _146290 _146293 P G lt2 z f H' g x)). Qed.
Lemma lem8359948 {_146290 _146293 : Type'} (P : type799 _146290 _146293) (G : type797 _146290 _146293) (lt2 : type1402 _146293) (z : type784 _146290 _146293) (f : _146293 -> _146290) (H' : type796 _146290 _146293) (g : _146293 -> _146290) : (term695 _146290 _146293 lt2 z P G f H' g) = (term725 _146290 _146293 P G lt2 z f H' g).
Proof. exact (fun_ext (fun x : _146293 => @lem8359947 _146290 _146293 P G lt2 z f H' g x)). Qed.
Lemma lem8359949 {_146293 : Type'} : (@all _146293) = (@all _146293).
Proof. exact (eq_refl (@all _146293)). Qed.
Lemma lem8359950 {_146290 _146293 : Type'} (P : type799 _146290 _146293) (G : type797 _146290 _146293) (lt2 : type1402 _146293) (z : type784 _146290 _146293) (f : _146293 -> _146290) (H' : type796 _146290 _146293) (g : _146293 -> _146290) : (term697 _146290 _146293 lt2 z P G f H' g) = (term726 _146290 _146293 P G lt2 z f H' g).
Proof. exact (MK_COMB (@lem8359949 _146293) (@lem8359948 _146290 _146293 P G lt2 z f H' g)). Qed.
Lemma lem8359951 {_146290 _146293 : Type'} (P : type799 _146290 _146293) (G : type797 _146290 _146293) (lt2 : type1402 _146293) (z : type784 _146290 _146293) (f : _146293 -> _146290) (H' : type796 _146290 _146293) : (term699 _146290 _146293 lt2 z P G f H') = (term727 _146290 _146293 P G lt2 z f H').
Proof. exact (fun_ext (fun g : _146293 -> _146290 => @lem8359950 _146290 _146293 P G lt2 z f H' g)). Qed.
Lemma lem8359952 {_146290 _146293 : Type'} : (@all (_146293 -> _146290)) = (@all (_146293 -> _146290)).
Proof. exact (eq_refl (@all (_146293 -> _146290))). Qed.
Lemma lem8359953 {_146290 _146293 : Type'} (P : type799 _146290 _146293) (G : type797 _146290 _146293) (lt2 : type1402 _146293) (z : type784 _146290 _146293) (f : _146293 -> _146290) (H' : type796 _146290 _146293) : (term700 _146290 _146293 lt2 z P G f H') = (term728 _146290 _146293 P G lt2 z f H').
Proof. exact (MK_COMB (@lem8359952 _146290 _146293) (@lem8359951 _146290 _146293 P G lt2 z f H')). Qed.
Lemma lem8359954 {_146290 _146293 : Type'} (P : type799 _146290 _146293) (G : type797 _146290 _146293) (lt2 : type1402 _146293) (z : type784 _146290 _146293) (H' : type796 _146290 _146293) : (term701 _146290 _146293 lt2 z P G H') = (term729 _146290 _146293 P G lt2 z H').
Proof. exact (fun_ext (fun f : _146293 -> _146290 => @lem8359953 _146290 _146293 P G lt2 z f H')). Qed.
Lemma lem8359955 {_146290 _146293 : Type'} : (@all (_146293 -> _146290)) = (@all (_146293 -> _146290)).
Proof. exact (eq_refl (@all (_146293 -> _146290))). Qed.
Lemma lem8359957 {_146290 _146293 : Type'} (P : type799 _146290 _146293) (G : type797 _146290 _146293) (lt2 : type1402 _146293) (z : type784 _146290 _146293) (H' : type796 _146290 _146293) : (term702 _146290 _146293 lt2 z P G H') = (term730 _146290 _146293 P G lt2 z H').
Proof. exact (MK_COMB (@lem8359955 _146290 _146293) (@lem8359954 _146290 _146293 P G lt2 z H')). Qed.
Lemma lem8359958 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (z : type784 _146290 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (H' : type796 _146290 _146293) (h1 : term259 _146290 _146293 lt2 z P G H') : term730 _146290 _146293 P G lt2 z H'.
Proof. exact (EQ_MP (@lem8359957 _146290 _146293 P G lt2 z H') (@lem8359660 _146290 _146293 lt2 z P G H' h1)). Qed.
Lemma lem8359998 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (x : _146293) (f : _146293 -> _146290) (g : _146293 -> _146290) (z : _146293) : (term621 _146290 _146293 lt2 x f g z) = (term621 _146290 _146293 lt2 x f g z).
Proof. exact (eq_refl (term621 _146290 _146293 lt2 x f g z)). Qed.
Lemma lem8359999 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (x : _146293) (f : _146293 -> _146290) (g : _146293 -> _146290) : (term622 _146290 _146293 lt2 x f g) = (term622 _146290 _146293 lt2 x f g).
Proof. exact (fun_ext (fun z : _146293 => @lem8359998 _146290 _146293 lt2 x f g z)). Qed.
Lemma lem8360000 {_146293 : Type'} : (@all _146293) = (@all _146293).
Proof. exact (eq_refl (@all _146293)). Qed.
Lemma lem8360002 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (x : _146293) (f : _146293 -> _146290) (g : _146293 -> _146290) : (term623 _146290 _146293 lt2 x f g) = (term623 _146290 _146293 lt2 x f g).
Proof. exact (MK_COMB (@lem8360000 _146293) (@lem8359999 _146290 _146293 lt2 x f g)). Qed.
Lemma lem8360003 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (f : _146293 -> _146290) (H' : type796 _146290 _146293) (g : _146293 -> _146290) (x : _146293) (h1 : term646 _146290 _146293 lt2 P G f H' g x) : term623 _146290 _146293 lt2 x f g.
Proof. exact (EQ_MP (@lem8360002 _146290 _146293 lt2 x f g) (@lem8359668 _146290 _146293 lt2 P G f H' g x h1)). Qed.
Lemma lem8360075 {_146290 _146293 : Type'} (P : type799 _146290 _146293) (lt2 : type1402 _146293) (z : type784 _146290 _146293) (G : type797 _146290 _146293) (f : _146293 -> _146290) (H' : type796 _146290 _146293) (g : _146293 -> _146290) (x : _146293) : (term693 _146290 _146293 lt2 z P G f H' g x) = (term703 _146290 _146293 P lt2 z G f H' g x).
Proof. exact (@lem19490 (term663 _146290 _146293 f P g x) (term689 _146290 _146293 lt2 z f g x) (term654 _146290 _146293 G f H' g x)). Qed.
Lemma lem8360076 {_146290 _146293 : Type'} (G : type797 _146290 _146293) (lt2 : type1402 _146293) (z : type784 _146290 _146293) (f : _146293 -> _146290) (H' : type796 _146290 _146293) (g : _146293 -> _146290) (x : _146293) : (term704 _146290 _146293 lt2 z G f H' g x) = (term705 _146290 _146293 G lt2 z f H' g x).
Proof. exact (@lem19490 ((term587 _146290 _146293 G f x) = (term587 _146290 _146293 G g x)) (term689 _146290 _146293 lt2 z f g x) ((term615 _146290 _146293 H' f x) = (term615 _146290 _146293 H' g x))). Qed.
Lemma lem8360083 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (z : type784 _146290 _146293) (f : _146293 -> _146290) (H' : type796 _146290 _146293) (g : _146293 -> _146290) (x : _146293) : (term706 _146290 _146293 lt2 z f H' g x) = (term707 _146290 _146293 lt2 z f H' g x).
Proof. exact (@lem19699 (term685 _146290 _146293 lt2 z f g x) (term678 _146290 _146293 z f g x) ((term615 _146290 _146293 H' f x) = (term615 _146290 _146293 H' g x))). Qed.
Lemma lem8360090 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (z : type784 _146290 _146293) (f : _146293 -> _146290) (G : type797 _146290 _146293) (g : _146293 -> _146290) (x : _146293) : (term708 _146290 _146293 lt2 z f G g x) = (term709 _146290 _146293 lt2 z f G g x).
Proof. exact (@lem19699 (term685 _146290 _146293 lt2 z f g x) (term678 _146290 _146293 z f g x) ((term587 _146290 _146293 G f x) = (term587 _146290 _146293 G g x))). Qed.
Lemma lem8360091 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8360092 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (z : type784 _146290 _146293) (f : _146293 -> _146290) (G : type797 _146290 _146293) (g : _146293 -> _146290) (x : _146293) : (term710 _146290 _146293 lt2 z f G g x) = (term711 _146290 _146293 lt2 z f G g x).
Proof. exact (MK_COMB (@lem8360091) (@lem8360090 _146290 _146293 lt2 z f G g x)). Qed.
Lemma lem8360093 {_146290 _146293 : Type'} (G : type797 _146290 _146293) (lt2 : type1402 _146293) (z : type784 _146290 _146293) (f : _146293 -> _146290) (H' : type796 _146290 _146293) (g : _146293 -> _146290) (x : _146293) : (term705 _146290 _146293 G lt2 z f H' g x) = (term712 _146290 _146293 G lt2 z f H' g x).
Proof. exact (MK_COMB (@lem8360092 _146290 _146293 lt2 z f G g x) (@lem8360083 _146290 _146293 lt2 z f H' g x)). Qed.
Lemma lem8360094 {_146290 _146293 : Type'} (G : type797 _146290 _146293) (lt2 : type1402 _146293) (z : type784 _146290 _146293) (f : _146293 -> _146290) (H' : type796 _146290 _146293) (g : _146293 -> _146290) (x : _146293) : (term704 _146290 _146293 lt2 z G f H' g x) = (term712 _146290 _146293 G lt2 z f H' g x).
Proof. exact (TRANS (@lem8360076 _146290 _146293 G lt2 z f H' g x) (@lem8360093 _146290 _146293 G lt2 z f H' g x)). Qed.
Lemma lem8360095 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (z : type784 _146290 _146293) (f : _146293 -> _146290) (P : type799 _146290 _146293) (g : _146293 -> _146290) (x : _146293) : (term713 _146290 _146293 lt2 z f P g x) = (term714 _146290 _146293 lt2 z f P g x).
Proof. exact (@lem19490 (term660 _146290 _146293 f P g x) (term689 _146290 _146293 lt2 z f g x) (term656 _146290 _146293 f P g x)). Qed.
Lemma lem8360102 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (z : type784 _146290 _146293) (f : _146293 -> _146290) (P : type799 _146290 _146293) (g : _146293 -> _146290) (x : _146293) : (term715 _146290 _146293 lt2 z f P g x) = (term716 _146290 _146293 lt2 z f P g x).
Proof. exact (@lem19699 (term685 _146290 _146293 lt2 z f g x) (term678 _146290 _146293 z f g x) (term656 _146290 _146293 f P g x)). Qed.
Lemma lem8360109 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (z : type784 _146290 _146293) (f : _146293 -> _146290) (P : type799 _146290 _146293) (g : _146293 -> _146290) (x : _146293) : (term717 _146290 _146293 lt2 z f P g x) = (term718 _146290 _146293 lt2 z f P g x).
Proof. exact (@lem19699 (term685 _146290 _146293 lt2 z f g x) (term678 _146290 _146293 z f g x) (term660 _146290 _146293 f P g x)). Qed.
Lemma lem8360110 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8360111 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (z : type784 _146290 _146293) (f : _146293 -> _146290) (P : type799 _146290 _146293) (g : _146293 -> _146290) (x : _146293) : (term719 _146290 _146293 lt2 z f P g x) = (term720 _146290 _146293 lt2 z f P g x).
Proof. exact (MK_COMB (@lem8360110) (@lem8360109 _146290 _146293 lt2 z f P g x)). Qed.
Lemma lem8360112 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (z : type784 _146290 _146293) (f : _146293 -> _146290) (P : type799 _146290 _146293) (g : _146293 -> _146290) (x : _146293) : (term714 _146290 _146293 lt2 z f P g x) = (term721 _146290 _146293 lt2 z f P g x).
Proof. exact (MK_COMB (@lem8360111 _146290 _146293 lt2 z f P g x) (@lem8360102 _146290 _146293 lt2 z f P g x)). Qed.
Lemma lem8360113 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (z : type784 _146290 _146293) (f : _146293 -> _146290) (P : type799 _146290 _146293) (g : _146293 -> _146290) (x : _146293) : (term713 _146290 _146293 lt2 z f P g x) = (term721 _146290 _146293 lt2 z f P g x).
Proof. exact (TRANS (@lem8360095 _146290 _146293 lt2 z f P g x) (@lem8360112 _146290 _146293 lt2 z f P g x)). Qed.
Lemma lem8360114 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8360115 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (z : type784 _146290 _146293) (f : _146293 -> _146290) (P : type799 _146290 _146293) (g : _146293 -> _146290) (x : _146293) : (term722 _146290 _146293 lt2 z f P g x) = (term723 _146290 _146293 lt2 z f P g x).
Proof. exact (MK_COMB (@lem8360114) (@lem8360113 _146290 _146293 lt2 z f P g x)). Qed.
Lemma lem8360116 {_146290 _146293 : Type'} (P : type799 _146290 _146293) (G : type797 _146290 _146293) (lt2 : type1402 _146293) (z : type784 _146290 _146293) (f : _146293 -> _146290) (H' : type796 _146290 _146293) (g : _146293 -> _146290) (x : _146293) : (term703 _146290 _146293 P lt2 z G f H' g x) = (term724 _146290 _146293 P G lt2 z f H' g x).
Proof. exact (MK_COMB (@lem8360115 _146290 _146293 lt2 z f P g x) (@lem8360094 _146290 _146293 G lt2 z f H' g x)). Qed.
Lemma lem8360118 {_146290 _146293 : Type'} (P : type799 _146290 _146293) (G : type797 _146290 _146293) (lt2 : type1402 _146293) (z : type784 _146290 _146293) (f : _146293 -> _146290) (H' : type796 _146290 _146293) (g : _146293 -> _146290) (x : _146293) : (term693 _146290 _146293 lt2 z P G f H' g x) = (term724 _146290 _146293 P G lt2 z f H' g x).
Proof. exact (TRANS (@lem8360075 _146290 _146293 P lt2 z G f H' g x) (@lem8360116 _146290 _146293 P G lt2 z f H' g x)). Qed.
Lemma lem8360119 {_146290 _146293 : Type'} (P : type799 _146290 _146293) (G : type797 _146290 _146293) (lt2 : type1402 _146293) (z : type784 _146290 _146293) (f : _146293 -> _146290) (H' : type796 _146290 _146293) (g : _146293 -> _146290) : (term695 _146290 _146293 lt2 z P G f H' g) = (term725 _146290 _146293 P G lt2 z f H' g).
Proof. exact (fun_ext (fun x : _146293 => @lem8360118 _146290 _146293 P G lt2 z f H' g x)). Qed.
Lemma lem8360120 {_146293 : Type'} : (@all _146293) = (@all _146293).
Proof. exact (eq_refl (@all _146293)). Qed.
Lemma lem8360121 {_146290 _146293 : Type'} (P : type799 _146290 _146293) (G : type797 _146290 _146293) (lt2 : type1402 _146293) (z : type784 _146290 _146293) (f : _146293 -> _146290) (H' : type796 _146290 _146293) (g : _146293 -> _146290) : (term697 _146290 _146293 lt2 z P G f H' g) = (term726 _146290 _146293 P G lt2 z f H' g).
Proof. exact (MK_COMB (@lem8360120 _146293) (@lem8360119 _146290 _146293 P G lt2 z f H' g)). Qed.
Lemma lem8360122 {_146290 _146293 : Type'} (P : type799 _146290 _146293) (G : type797 _146290 _146293) (lt2 : type1402 _146293) (z : type784 _146290 _146293) (f : _146293 -> _146290) (H' : type796 _146290 _146293) : (term699 _146290 _146293 lt2 z P G f H') = (term727 _146290 _146293 P G lt2 z f H').
Proof. exact (fun_ext (fun g : _146293 -> _146290 => @lem8360121 _146290 _146293 P G lt2 z f H' g)). Qed.
Lemma lem8360123 {_146290 _146293 : Type'} : (@all (_146293 -> _146290)) = (@all (_146293 -> _146290)).
Proof. exact (eq_refl (@all (_146293 -> _146290))). Qed.
Lemma lem8360124 {_146290 _146293 : Type'} (P : type799 _146290 _146293) (G : type797 _146290 _146293) (lt2 : type1402 _146293) (z : type784 _146290 _146293) (f : _146293 -> _146290) (H' : type796 _146290 _146293) : (term700 _146290 _146293 lt2 z P G f H') = (term728 _146290 _146293 P G lt2 z f H').
Proof. exact (MK_COMB (@lem8360123 _146290 _146293) (@lem8360122 _146290 _146293 P G lt2 z f H')). Qed.
Lemma lem8360125 {_146290 _146293 : Type'} (P : type799 _146290 _146293) (G : type797 _146290 _146293) (lt2 : type1402 _146293) (z : type784 _146290 _146293) (H' : type796 _146290 _146293) : (term701 _146290 _146293 lt2 z P G H') = (term729 _146290 _146293 P G lt2 z H').
Proof. exact (fun_ext (fun f : _146293 -> _146290 => @lem8360124 _146290 _146293 P G lt2 z f H')). Qed.
Lemma lem8360126 {_146290 _146293 : Type'} : (@all (_146293 -> _146290)) = (@all (_146293 -> _146290)).
Proof. exact (eq_refl (@all (_146293 -> _146290))). Qed.
Lemma lem8360128 {_146290 _146293 : Type'} (P : type799 _146290 _146293) (G : type797 _146290 _146293) (lt2 : type1402 _146293) (z : type784 _146290 _146293) (H' : type796 _146290 _146293) : (term702 _146290 _146293 lt2 z P G H') = (term730 _146290 _146293 P G lt2 z H').
Proof. exact (MK_COMB (@lem8360126 _146290 _146293) (@lem8360125 _146290 _146293 P G lt2 z H')). Qed.
Lemma lem8360129 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (z : type784 _146290 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (H' : type796 _146290 _146293) (h1 : term259 _146290 _146293 lt2 z P G H') : term730 _146290 _146293 P G lt2 z H'.
Proof. exact (EQ_MP (@lem8360128 _146290 _146293 P G lt2 z H') (@lem8359660 _146290 _146293 lt2 z P G H' h1)). Qed.
Lemma lem8360169 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (x : _146293) (f : _146293 -> _146290) (g : _146293 -> _146290) (z : _146293) : (term621 _146290 _146293 lt2 x f g z) = (term621 _146290 _146293 lt2 x f g z).
Proof. exact (eq_refl (term621 _146290 _146293 lt2 x f g z)). Qed.
Lemma lem8360170 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (x : _146293) (f : _146293 -> _146290) (g : _146293 -> _146290) : (term622 _146290 _146293 lt2 x f g) = (term622 _146290 _146293 lt2 x f g).
Proof. exact (fun_ext (fun z : _146293 => @lem8360169 _146290 _146293 lt2 x f g z)). Qed.
Lemma lem8360171 {_146293 : Type'} : (@all _146293) = (@all _146293).
Proof. exact (eq_refl (@all _146293)). Qed.
Lemma lem8360173 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (x : _146293) (f : _146293 -> _146290) (g : _146293 -> _146290) : (term623 _146290 _146293 lt2 x f g) = (term623 _146290 _146293 lt2 x f g).
Proof. exact (MK_COMB (@lem8360171 _146293) (@lem8360170 _146290 _146293 lt2 x f g)). Qed.
Lemma lem8360174 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (f : _146293 -> _146290) (H' : type796 _146290 _146293) (g : _146293 -> _146290) (x : _146293) (h1 : term646 _146290 _146293 lt2 P G f H' g x) : term623 _146290 _146293 lt2 x f g.
Proof. exact (EQ_MP (@lem8360173 _146290 _146293 lt2 x f g) (@lem8359668 _146290 _146293 lt2 P G f H' g x h1)). Qed.
Lemma lem8360246 {_146290 _146293 : Type'} (P : type799 _146290 _146293) (lt2 : type1402 _146293) (z : type784 _146290 _146293) (G : type797 _146290 _146293) (f : _146293 -> _146290) (H' : type796 _146290 _146293) (g : _146293 -> _146290) (x : _146293) : (term693 _146290 _146293 lt2 z P G f H' g x) = (term703 _146290 _146293 P lt2 z G f H' g x).
Proof. exact (@lem19490 (term663 _146290 _146293 f P g x) (term689 _146290 _146293 lt2 z f g x) (term654 _146290 _146293 G f H' g x)). Qed.
Lemma lem8360247 {_146290 _146293 : Type'} (G : type797 _146290 _146293) (lt2 : type1402 _146293) (z : type784 _146290 _146293) (f : _146293 -> _146290) (H' : type796 _146290 _146293) (g : _146293 -> _146290) (x : _146293) : (term704 _146290 _146293 lt2 z G f H' g x) = (term705 _146290 _146293 G lt2 z f H' g x).
Proof. exact (@lem19490 ((term587 _146290 _146293 G f x) = (term587 _146290 _146293 G g x)) (term689 _146290 _146293 lt2 z f g x) ((term615 _146290 _146293 H' f x) = (term615 _146290 _146293 H' g x))). Qed.
Lemma lem8360254 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (z : type784 _146290 _146293) (f : _146293 -> _146290) (H' : type796 _146290 _146293) (g : _146293 -> _146290) (x : _146293) : (term706 _146290 _146293 lt2 z f H' g x) = (term707 _146290 _146293 lt2 z f H' g x).
Proof. exact (@lem19699 (term685 _146290 _146293 lt2 z f g x) (term678 _146290 _146293 z f g x) ((term615 _146290 _146293 H' f x) = (term615 _146290 _146293 H' g x))). Qed.
Lemma lem8360261 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (z : type784 _146290 _146293) (f : _146293 -> _146290) (G : type797 _146290 _146293) (g : _146293 -> _146290) (x : _146293) : (term708 _146290 _146293 lt2 z f G g x) = (term709 _146290 _146293 lt2 z f G g x).
Proof. exact (@lem19699 (term685 _146290 _146293 lt2 z f g x) (term678 _146290 _146293 z f g x) ((term587 _146290 _146293 G f x) = (term587 _146290 _146293 G g x))). Qed.
Lemma lem8360262 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8360263 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (z : type784 _146290 _146293) (f : _146293 -> _146290) (G : type797 _146290 _146293) (g : _146293 -> _146290) (x : _146293) : (term710 _146290 _146293 lt2 z f G g x) = (term711 _146290 _146293 lt2 z f G g x).
Proof. exact (MK_COMB (@lem8360262) (@lem8360261 _146290 _146293 lt2 z f G g x)). Qed.
Lemma lem8360264 {_146290 _146293 : Type'} (G : type797 _146290 _146293) (lt2 : type1402 _146293) (z : type784 _146290 _146293) (f : _146293 -> _146290) (H' : type796 _146290 _146293) (g : _146293 -> _146290) (x : _146293) : (term705 _146290 _146293 G lt2 z f H' g x) = (term712 _146290 _146293 G lt2 z f H' g x).
Proof. exact (MK_COMB (@lem8360263 _146290 _146293 lt2 z f G g x) (@lem8360254 _146290 _146293 lt2 z f H' g x)). Qed.
Lemma lem8360265 {_146290 _146293 : Type'} (G : type797 _146290 _146293) (lt2 : type1402 _146293) (z : type784 _146290 _146293) (f : _146293 -> _146290) (H' : type796 _146290 _146293) (g : _146293 -> _146290) (x : _146293) : (term704 _146290 _146293 lt2 z G f H' g x) = (term712 _146290 _146293 G lt2 z f H' g x).
Proof. exact (TRANS (@lem8360247 _146290 _146293 G lt2 z f H' g x) (@lem8360264 _146290 _146293 G lt2 z f H' g x)). Qed.
Lemma lem8360266 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (z : type784 _146290 _146293) (f : _146293 -> _146290) (P : type799 _146290 _146293) (g : _146293 -> _146290) (x : _146293) : (term713 _146290 _146293 lt2 z f P g x) = (term714 _146290 _146293 lt2 z f P g x).
Proof. exact (@lem19490 (term660 _146290 _146293 f P g x) (term689 _146290 _146293 lt2 z f g x) (term656 _146290 _146293 f P g x)). Qed.
Lemma lem8360273 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (z : type784 _146290 _146293) (f : _146293 -> _146290) (P : type799 _146290 _146293) (g : _146293 -> _146290) (x : _146293) : (term715 _146290 _146293 lt2 z f P g x) = (term716 _146290 _146293 lt2 z f P g x).
Proof. exact (@lem19699 (term685 _146290 _146293 lt2 z f g x) (term678 _146290 _146293 z f g x) (term656 _146290 _146293 f P g x)). Qed.
Lemma lem8360280 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (z : type784 _146290 _146293) (f : _146293 -> _146290) (P : type799 _146290 _146293) (g : _146293 -> _146290) (x : _146293) : (term717 _146290 _146293 lt2 z f P g x) = (term718 _146290 _146293 lt2 z f P g x).
Proof. exact (@lem19699 (term685 _146290 _146293 lt2 z f g x) (term678 _146290 _146293 z f g x) (term660 _146290 _146293 f P g x)). Qed.
Lemma lem8360281 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8360282 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (z : type784 _146290 _146293) (f : _146293 -> _146290) (P : type799 _146290 _146293) (g : _146293 -> _146290) (x : _146293) : (term719 _146290 _146293 lt2 z f P g x) = (term720 _146290 _146293 lt2 z f P g x).
Proof. exact (MK_COMB (@lem8360281) (@lem8360280 _146290 _146293 lt2 z f P g x)). Qed.
Lemma lem8360283 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (z : type784 _146290 _146293) (f : _146293 -> _146290) (P : type799 _146290 _146293) (g : _146293 -> _146290) (x : _146293) : (term714 _146290 _146293 lt2 z f P g x) = (term721 _146290 _146293 lt2 z f P g x).
Proof. exact (MK_COMB (@lem8360282 _146290 _146293 lt2 z f P g x) (@lem8360273 _146290 _146293 lt2 z f P g x)). Qed.
Lemma lem8360284 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (z : type784 _146290 _146293) (f : _146293 -> _146290) (P : type799 _146290 _146293) (g : _146293 -> _146290) (x : _146293) : (term713 _146290 _146293 lt2 z f P g x) = (term721 _146290 _146293 lt2 z f P g x).
Proof. exact (TRANS (@lem8360266 _146290 _146293 lt2 z f P g x) (@lem8360283 _146290 _146293 lt2 z f P g x)). Qed.
Lemma lem8360285 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8360286 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (z : type784 _146290 _146293) (f : _146293 -> _146290) (P : type799 _146290 _146293) (g : _146293 -> _146290) (x : _146293) : (term722 _146290 _146293 lt2 z f P g x) = (term723 _146290 _146293 lt2 z f P g x).
Proof. exact (MK_COMB (@lem8360285) (@lem8360284 _146290 _146293 lt2 z f P g x)). Qed.
Lemma lem8360287 {_146290 _146293 : Type'} (P : type799 _146290 _146293) (G : type797 _146290 _146293) (lt2 : type1402 _146293) (z : type784 _146290 _146293) (f : _146293 -> _146290) (H' : type796 _146290 _146293) (g : _146293 -> _146290) (x : _146293) : (term703 _146290 _146293 P lt2 z G f H' g x) = (term724 _146290 _146293 P G lt2 z f H' g x).
Proof. exact (MK_COMB (@lem8360286 _146290 _146293 lt2 z f P g x) (@lem8360265 _146290 _146293 G lt2 z f H' g x)). Qed.
Lemma lem8360289 {_146290 _146293 : Type'} (P : type799 _146290 _146293) (G : type797 _146290 _146293) (lt2 : type1402 _146293) (z : type784 _146290 _146293) (f : _146293 -> _146290) (H' : type796 _146290 _146293) (g : _146293 -> _146290) (x : _146293) : (term693 _146290 _146293 lt2 z P G f H' g x) = (term724 _146290 _146293 P G lt2 z f H' g x).
Proof. exact (TRANS (@lem8360246 _146290 _146293 P lt2 z G f H' g x) (@lem8360287 _146290 _146293 P G lt2 z f H' g x)). Qed.
Lemma lem8360290 {_146290 _146293 : Type'} (P : type799 _146290 _146293) (G : type797 _146290 _146293) (lt2 : type1402 _146293) (z : type784 _146290 _146293) (f : _146293 -> _146290) (H' : type796 _146290 _146293) (g : _146293 -> _146290) : (term695 _146290 _146293 lt2 z P G f H' g) = (term725 _146290 _146293 P G lt2 z f H' g).
Proof. exact (fun_ext (fun x : _146293 => @lem8360289 _146290 _146293 P G lt2 z f H' g x)). Qed.
Lemma lem8360291 {_146293 : Type'} : (@all _146293) = (@all _146293).
Proof. exact (eq_refl (@all _146293)). Qed.
Lemma lem8360292 {_146290 _146293 : Type'} (P : type799 _146290 _146293) (G : type797 _146290 _146293) (lt2 : type1402 _146293) (z : type784 _146290 _146293) (f : _146293 -> _146290) (H' : type796 _146290 _146293) (g : _146293 -> _146290) : (term697 _146290 _146293 lt2 z P G f H' g) = (term726 _146290 _146293 P G lt2 z f H' g).
Proof. exact (MK_COMB (@lem8360291 _146293) (@lem8360290 _146290 _146293 P G lt2 z f H' g)). Qed.
Lemma lem8360293 {_146290 _146293 : Type'} (P : type799 _146290 _146293) (G : type797 _146290 _146293) (lt2 : type1402 _146293) (z : type784 _146290 _146293) (f : _146293 -> _146290) (H' : type796 _146290 _146293) : (term699 _146290 _146293 lt2 z P G f H') = (term727 _146290 _146293 P G lt2 z f H').
Proof. exact (fun_ext (fun g : _146293 -> _146290 => @lem8360292 _146290 _146293 P G lt2 z f H' g)). Qed.
Lemma lem8360294 {_146290 _146293 : Type'} : (@all (_146293 -> _146290)) = (@all (_146293 -> _146290)).
Proof. exact (eq_refl (@all (_146293 -> _146290))). Qed.
Lemma lem8360295 {_146290 _146293 : Type'} (P : type799 _146290 _146293) (G : type797 _146290 _146293) (lt2 : type1402 _146293) (z : type784 _146290 _146293) (f : _146293 -> _146290) (H' : type796 _146290 _146293) : (term700 _146290 _146293 lt2 z P G f H') = (term728 _146290 _146293 P G lt2 z f H').
Proof. exact (MK_COMB (@lem8360294 _146290 _146293) (@lem8360293 _146290 _146293 P G lt2 z f H')). Qed.
Lemma lem8360296 {_146290 _146293 : Type'} (P : type799 _146290 _146293) (G : type797 _146290 _146293) (lt2 : type1402 _146293) (z : type784 _146290 _146293) (H' : type796 _146290 _146293) : (term701 _146290 _146293 lt2 z P G H') = (term729 _146290 _146293 P G lt2 z H').
Proof. exact (fun_ext (fun f : _146293 -> _146290 => @lem8360295 _146290 _146293 P G lt2 z f H')). Qed.
Lemma lem8360297 {_146290 _146293 : Type'} : (@all (_146293 -> _146290)) = (@all (_146293 -> _146290)).
Proof. exact (eq_refl (@all (_146293 -> _146290))). Qed.
Lemma lem8360299 {_146290 _146293 : Type'} (P : type799 _146290 _146293) (G : type797 _146290 _146293) (lt2 : type1402 _146293) (z : type784 _146290 _146293) (H' : type796 _146290 _146293) : (term702 _146290 _146293 lt2 z P G H') = (term730 _146290 _146293 P G lt2 z H').
Proof. exact (MK_COMB (@lem8360297 _146290 _146293) (@lem8360296 _146290 _146293 P G lt2 z H')). Qed.
Lemma lem8360300 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (z : type784 _146290 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (H' : type796 _146290 _146293) (h1 : term259 _146290 _146293 lt2 z P G H') : term730 _146290 _146293 P G lt2 z H'.
Proof. exact (EQ_MP (@lem8360299 _146290 _146293 P G lt2 z H') (@lem8359660 _146290 _146293 lt2 z P G H' h1)). Qed.
Lemma lem8360340 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (x : _146293) (f : _146293 -> _146290) (g : _146293 -> _146290) (z : _146293) : (term621 _146290 _146293 lt2 x f g z) = (term621 _146290 _146293 lt2 x f g z).
Proof. exact (eq_refl (term621 _146290 _146293 lt2 x f g z)). Qed.
Lemma lem8360341 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (x : _146293) (f : _146293 -> _146290) (g : _146293 -> _146290) : (term622 _146290 _146293 lt2 x f g) = (term622 _146290 _146293 lt2 x f g).
Proof. exact (fun_ext (fun z : _146293 => @lem8360340 _146290 _146293 lt2 x f g z)). Qed.
Lemma lem8360342 {_146293 : Type'} : (@all _146293) = (@all _146293).
Proof. exact (eq_refl (@all _146293)). Qed.
Lemma lem8360344 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (x : _146293) (f : _146293 -> _146290) (g : _146293 -> _146290) : (term623 _146290 _146293 lt2 x f g) = (term623 _146290 _146293 lt2 x f g).
Proof. exact (MK_COMB (@lem8360342 _146293) (@lem8360341 _146290 _146293 lt2 x f g)). Qed.
Lemma lem8360345 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (f : _146293 -> _146290) (H' : type796 _146290 _146293) (g : _146293 -> _146290) (x : _146293) (h1 : term646 _146290 _146293 lt2 P G f H' g x) : term623 _146290 _146293 lt2 x f g.
Proof. exact (EQ_MP (@lem8360344 _146290 _146293 lt2 x f g) (@lem8359668 _146290 _146293 lt2 P G f H' g x h1)). Qed.
Lemma lem8360349 {_146290 _146293 : Type'} (f : _146293 -> _146290) (G : type797 _146290 _146293) (g : _146293 -> _146290) (x : _146293) (h1 : term631 _146290 _146293 f G g x) : term631 _146290 _146293 f G g x.
Proof. exact (h1). Qed.
Lemma lem8360413 {_146290 _146293 : Type'} (P : type799 _146290 _146293) (lt2 : type1402 _146293) (z : type784 _146290 _146293) (G : type797 _146290 _146293) (f : _146293 -> _146290) (H' : type796 _146290 _146293) (g : _146293 -> _146290) (x : _146293) : (term693 _146290 _146293 lt2 z P G f H' g x) = (term703 _146290 _146293 P lt2 z G f H' g x).
Proof. exact (@lem19490 (term663 _146290 _146293 f P g x) (term689 _146290 _146293 lt2 z f g x) (term654 _146290 _146293 G f H' g x)). Qed.
Lemma lem8360414 {_146290 _146293 : Type'} (G : type797 _146290 _146293) (lt2 : type1402 _146293) (z : type784 _146290 _146293) (f : _146293 -> _146290) (H' : type796 _146290 _146293) (g : _146293 -> _146290) (x : _146293) : (term704 _146290 _146293 lt2 z G f H' g x) = (term705 _146290 _146293 G lt2 z f H' g x).
Proof. exact (@lem19490 ((term587 _146290 _146293 G f x) = (term587 _146290 _146293 G g x)) (term689 _146290 _146293 lt2 z f g x) ((term615 _146290 _146293 H' f x) = (term615 _146290 _146293 H' g x))). Qed.
Lemma lem8360421 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (z : type784 _146290 _146293) (f : _146293 -> _146290) (H' : type796 _146290 _146293) (g : _146293 -> _146290) (x : _146293) : (term706 _146290 _146293 lt2 z f H' g x) = (term707 _146290 _146293 lt2 z f H' g x).
Proof. exact (@lem19699 (term685 _146290 _146293 lt2 z f g x) (term678 _146290 _146293 z f g x) ((term615 _146290 _146293 H' f x) = (term615 _146290 _146293 H' g x))). Qed.
Lemma lem8360428 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (z : type784 _146290 _146293) (f : _146293 -> _146290) (G : type797 _146290 _146293) (g : _146293 -> _146290) (x : _146293) : (term708 _146290 _146293 lt2 z f G g x) = (term709 _146290 _146293 lt2 z f G g x).
Proof. exact (@lem19699 (term685 _146290 _146293 lt2 z f g x) (term678 _146290 _146293 z f g x) ((term587 _146290 _146293 G f x) = (term587 _146290 _146293 G g x))). Qed.
Lemma lem8360429 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8360430 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (z : type784 _146290 _146293) (f : _146293 -> _146290) (G : type797 _146290 _146293) (g : _146293 -> _146290) (x : _146293) : (term710 _146290 _146293 lt2 z f G g x) = (term711 _146290 _146293 lt2 z f G g x).
Proof. exact (MK_COMB (@lem8360429) (@lem8360428 _146290 _146293 lt2 z f G g x)). Qed.
Lemma lem8360431 {_146290 _146293 : Type'} (G : type797 _146290 _146293) (lt2 : type1402 _146293) (z : type784 _146290 _146293) (f : _146293 -> _146290) (H' : type796 _146290 _146293) (g : _146293 -> _146290) (x : _146293) : (term705 _146290 _146293 G lt2 z f H' g x) = (term712 _146290 _146293 G lt2 z f H' g x).
Proof. exact (MK_COMB (@lem8360430 _146290 _146293 lt2 z f G g x) (@lem8360421 _146290 _146293 lt2 z f H' g x)). Qed.
Lemma lem8360432 {_146290 _146293 : Type'} (G : type797 _146290 _146293) (lt2 : type1402 _146293) (z : type784 _146290 _146293) (f : _146293 -> _146290) (H' : type796 _146290 _146293) (g : _146293 -> _146290) (x : _146293) : (term704 _146290 _146293 lt2 z G f H' g x) = (term712 _146290 _146293 G lt2 z f H' g x).
Proof. exact (TRANS (@lem8360414 _146290 _146293 G lt2 z f H' g x) (@lem8360431 _146290 _146293 G lt2 z f H' g x)). Qed.
Lemma lem8360433 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (z : type784 _146290 _146293) (f : _146293 -> _146290) (P : type799 _146290 _146293) (g : _146293 -> _146290) (x : _146293) : (term713 _146290 _146293 lt2 z f P g x) = (term714 _146290 _146293 lt2 z f P g x).
Proof. exact (@lem19490 (term660 _146290 _146293 f P g x) (term689 _146290 _146293 lt2 z f g x) (term656 _146290 _146293 f P g x)). Qed.
Lemma lem8360440 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (z : type784 _146290 _146293) (f : _146293 -> _146290) (P : type799 _146290 _146293) (g : _146293 -> _146290) (x : _146293) : (term715 _146290 _146293 lt2 z f P g x) = (term716 _146290 _146293 lt2 z f P g x).
Proof. exact (@lem19699 (term685 _146290 _146293 lt2 z f g x) (term678 _146290 _146293 z f g x) (term656 _146290 _146293 f P g x)). Qed.
Lemma lem8360447 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (z : type784 _146290 _146293) (f : _146293 -> _146290) (P : type799 _146290 _146293) (g : _146293 -> _146290) (x : _146293) : (term717 _146290 _146293 lt2 z f P g x) = (term718 _146290 _146293 lt2 z f P g x).
Proof. exact (@lem19699 (term685 _146290 _146293 lt2 z f g x) (term678 _146290 _146293 z f g x) (term660 _146290 _146293 f P g x)). Qed.
Lemma lem8360448 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8360449 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (z : type784 _146290 _146293) (f : _146293 -> _146290) (P : type799 _146290 _146293) (g : _146293 -> _146290) (x : _146293) : (term719 _146290 _146293 lt2 z f P g x) = (term720 _146290 _146293 lt2 z f P g x).
Proof. exact (MK_COMB (@lem8360448) (@lem8360447 _146290 _146293 lt2 z f P g x)). Qed.
Lemma lem8360450 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (z : type784 _146290 _146293) (f : _146293 -> _146290) (P : type799 _146290 _146293) (g : _146293 -> _146290) (x : _146293) : (term714 _146290 _146293 lt2 z f P g x) = (term721 _146290 _146293 lt2 z f P g x).
Proof. exact (MK_COMB (@lem8360449 _146290 _146293 lt2 z f P g x) (@lem8360440 _146290 _146293 lt2 z f P g x)). Qed.
Lemma lem8360451 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (z : type784 _146290 _146293) (f : _146293 -> _146290) (P : type799 _146290 _146293) (g : _146293 -> _146290) (x : _146293) : (term713 _146290 _146293 lt2 z f P g x) = (term721 _146290 _146293 lt2 z f P g x).
Proof. exact (TRANS (@lem8360433 _146290 _146293 lt2 z f P g x) (@lem8360450 _146290 _146293 lt2 z f P g x)). Qed.
Lemma lem8360452 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8360453 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (z : type784 _146290 _146293) (f : _146293 -> _146290) (P : type799 _146290 _146293) (g : _146293 -> _146290) (x : _146293) : (term722 _146290 _146293 lt2 z f P g x) = (term723 _146290 _146293 lt2 z f P g x).
Proof. exact (MK_COMB (@lem8360452) (@lem8360451 _146290 _146293 lt2 z f P g x)). Qed.
Lemma lem8360454 {_146290 _146293 : Type'} (P : type799 _146290 _146293) (G : type797 _146290 _146293) (lt2 : type1402 _146293) (z : type784 _146290 _146293) (f : _146293 -> _146290) (H' : type796 _146290 _146293) (g : _146293 -> _146290) (x : _146293) : (term703 _146290 _146293 P lt2 z G f H' g x) = (term724 _146290 _146293 P G lt2 z f H' g x).
Proof. exact (MK_COMB (@lem8360453 _146290 _146293 lt2 z f P g x) (@lem8360432 _146290 _146293 G lt2 z f H' g x)). Qed.
Lemma lem8360456 {_146290 _146293 : Type'} (P : type799 _146290 _146293) (G : type797 _146290 _146293) (lt2 : type1402 _146293) (z : type784 _146290 _146293) (f : _146293 -> _146290) (H' : type796 _146290 _146293) (g : _146293 -> _146290) (x : _146293) : (term693 _146290 _146293 lt2 z P G f H' g x) = (term724 _146290 _146293 P G lt2 z f H' g x).
Proof. exact (TRANS (@lem8360413 _146290 _146293 P lt2 z G f H' g x) (@lem8360454 _146290 _146293 P G lt2 z f H' g x)). Qed.
Lemma lem8360457 {_146290 _146293 : Type'} (P : type799 _146290 _146293) (G : type797 _146290 _146293) (lt2 : type1402 _146293) (z : type784 _146290 _146293) (f : _146293 -> _146290) (H' : type796 _146290 _146293) (g : _146293 -> _146290) : (term695 _146290 _146293 lt2 z P G f H' g) = (term725 _146290 _146293 P G lt2 z f H' g).
Proof. exact (fun_ext (fun x : _146293 => @lem8360456 _146290 _146293 P G lt2 z f H' g x)). Qed.
Lemma lem8360458 {_146293 : Type'} : (@all _146293) = (@all _146293).
Proof. exact (eq_refl (@all _146293)). Qed.
Lemma lem8360459 {_146290 _146293 : Type'} (P : type799 _146290 _146293) (G : type797 _146290 _146293) (lt2 : type1402 _146293) (z : type784 _146290 _146293) (f : _146293 -> _146290) (H' : type796 _146290 _146293) (g : _146293 -> _146290) : (term697 _146290 _146293 lt2 z P G f H' g) = (term726 _146290 _146293 P G lt2 z f H' g).
Proof. exact (MK_COMB (@lem8360458 _146293) (@lem8360457 _146290 _146293 P G lt2 z f H' g)). Qed.
Lemma lem8360460 {_146290 _146293 : Type'} (P : type799 _146290 _146293) (G : type797 _146290 _146293) (lt2 : type1402 _146293) (z : type784 _146290 _146293) (f : _146293 -> _146290) (H' : type796 _146290 _146293) : (term699 _146290 _146293 lt2 z P G f H') = (term727 _146290 _146293 P G lt2 z f H').
Proof. exact (fun_ext (fun g : _146293 -> _146290 => @lem8360459 _146290 _146293 P G lt2 z f H' g)). Qed.
Lemma lem8360461 {_146290 _146293 : Type'} : (@all (_146293 -> _146290)) = (@all (_146293 -> _146290)).
Proof. exact (eq_refl (@all (_146293 -> _146290))). Qed.
Lemma lem8360462 {_146290 _146293 : Type'} (P : type799 _146290 _146293) (G : type797 _146290 _146293) (lt2 : type1402 _146293) (z : type784 _146290 _146293) (f : _146293 -> _146290) (H' : type796 _146290 _146293) : (term700 _146290 _146293 lt2 z P G f H') = (term728 _146290 _146293 P G lt2 z f H').
Proof. exact (MK_COMB (@lem8360461 _146290 _146293) (@lem8360460 _146290 _146293 P G lt2 z f H')). Qed.
Lemma lem8360463 {_146290 _146293 : Type'} (P : type799 _146290 _146293) (G : type797 _146290 _146293) (lt2 : type1402 _146293) (z : type784 _146290 _146293) (H' : type796 _146290 _146293) : (term701 _146290 _146293 lt2 z P G H') = (term729 _146290 _146293 P G lt2 z H').
Proof. exact (fun_ext (fun f : _146293 -> _146290 => @lem8360462 _146290 _146293 P G lt2 z f H')). Qed.
Lemma lem8360464 {_146290 _146293 : Type'} : (@all (_146293 -> _146290)) = (@all (_146293 -> _146290)).
Proof. exact (eq_refl (@all (_146293 -> _146290))). Qed.
Lemma lem8360466 {_146290 _146293 : Type'} (P : type799 _146290 _146293) (G : type797 _146290 _146293) (lt2 : type1402 _146293) (z : type784 _146290 _146293) (H' : type796 _146290 _146293) : (term702 _146290 _146293 lt2 z P G H') = (term730 _146290 _146293 P G lt2 z H').
Proof. exact (MK_COMB (@lem8360464 _146290 _146293) (@lem8360463 _146290 _146293 P G lt2 z H')). Qed.
Lemma lem8360467 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (z : type784 _146290 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (H' : type796 _146290 _146293) (h1 : term259 _146290 _146293 lt2 z P G H') : term730 _146290 _146293 P G lt2 z H'.
Proof. exact (EQ_MP (@lem8360466 _146290 _146293 P G lt2 z H') (@lem8359660 _146290 _146293 lt2 z P G H' h1)). Qed.
Lemma lem8360507 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (x : _146293) (f : _146293 -> _146290) (g : _146293 -> _146290) (z : _146293) : (term621 _146290 _146293 lt2 x f g z) = (term621 _146290 _146293 lt2 x f g z).
Proof. exact (eq_refl (term621 _146290 _146293 lt2 x f g z)). Qed.
Lemma lem8360508 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (x : _146293) (f : _146293 -> _146290) (g : _146293 -> _146290) : (term622 _146290 _146293 lt2 x f g) = (term622 _146290 _146293 lt2 x f g).
Proof. exact (fun_ext (fun z : _146293 => @lem8360507 _146290 _146293 lt2 x f g z)). Qed.
Lemma lem8360509 {_146293 : Type'} : (@all _146293) = (@all _146293).
Proof. exact (eq_refl (@all _146293)). Qed.
Lemma lem8360511 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (x : _146293) (f : _146293 -> _146290) (g : _146293 -> _146290) : (term623 _146290 _146293 lt2 x f g) = (term623 _146290 _146293 lt2 x f g).
Proof. exact (MK_COMB (@lem8360509 _146293) (@lem8360508 _146290 _146293 lt2 x f g)). Qed.
Lemma lem8360512 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (f : _146293 -> _146290) (H' : type796 _146290 _146293) (g : _146293 -> _146290) (x : _146293) (h1 : term646 _146290 _146293 lt2 P G f H' g x) : term623 _146290 _146293 lt2 x f g.
Proof. exact (EQ_MP (@lem8360511 _146290 _146293 lt2 x f g) (@lem8359668 _146290 _146293 lt2 P G f H' g x h1)). Qed.
Lemma lem8360516 {_146290 _146293 : Type'} (f : _146293 -> _146290) (H' : type796 _146290 _146293) (g : _146293 -> _146290) (x : _146293) (h1 : term617 _146290 _146293 f H' g x) : term617 _146290 _146293 f H' g x.
Proof. exact (h1). Qed.
Lemma lem8360580 {_146290 _146293 : Type'} (P : type799 _146290 _146293) (lt2 : type1402 _146293) (z : type784 _146290 _146293) (G : type797 _146290 _146293) (f : _146293 -> _146290) (H' : type796 _146290 _146293) (g : _146293 -> _146290) (x : _146293) : (term693 _146290 _146293 lt2 z P G f H' g x) = (term703 _146290 _146293 P lt2 z G f H' g x).
Proof. exact (@lem19490 (term663 _146290 _146293 f P g x) (term689 _146290 _146293 lt2 z f g x) (term654 _146290 _146293 G f H' g x)). Qed.
Lemma lem8360581 {_146290 _146293 : Type'} (G : type797 _146290 _146293) (lt2 : type1402 _146293) (z : type784 _146290 _146293) (f : _146293 -> _146290) (H' : type796 _146290 _146293) (g : _146293 -> _146290) (x : _146293) : (term704 _146290 _146293 lt2 z G f H' g x) = (term705 _146290 _146293 G lt2 z f H' g x).
Proof. exact (@lem19490 ((term587 _146290 _146293 G f x) = (term587 _146290 _146293 G g x)) (term689 _146290 _146293 lt2 z f g x) ((term615 _146290 _146293 H' f x) = (term615 _146290 _146293 H' g x))). Qed.
Lemma lem8360588 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (z : type784 _146290 _146293) (f : _146293 -> _146290) (H' : type796 _146290 _146293) (g : _146293 -> _146290) (x : _146293) : (term706 _146290 _146293 lt2 z f H' g x) = (term707 _146290 _146293 lt2 z f H' g x).
Proof. exact (@lem19699 (term685 _146290 _146293 lt2 z f g x) (term678 _146290 _146293 z f g x) ((term615 _146290 _146293 H' f x) = (term615 _146290 _146293 H' g x))). Qed.
Lemma lem8360595 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (z : type784 _146290 _146293) (f : _146293 -> _146290) (G : type797 _146290 _146293) (g : _146293 -> _146290) (x : _146293) : (term708 _146290 _146293 lt2 z f G g x) = (term709 _146290 _146293 lt2 z f G g x).
Proof. exact (@lem19699 (term685 _146290 _146293 lt2 z f g x) (term678 _146290 _146293 z f g x) ((term587 _146290 _146293 G f x) = (term587 _146290 _146293 G g x))). Qed.
Lemma lem8360596 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8360597 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (z : type784 _146290 _146293) (f : _146293 -> _146290) (G : type797 _146290 _146293) (g : _146293 -> _146290) (x : _146293) : (term710 _146290 _146293 lt2 z f G g x) = (term711 _146290 _146293 lt2 z f G g x).
Proof. exact (MK_COMB (@lem8360596) (@lem8360595 _146290 _146293 lt2 z f G g x)). Qed.
Lemma lem8360598 {_146290 _146293 : Type'} (G : type797 _146290 _146293) (lt2 : type1402 _146293) (z : type784 _146290 _146293) (f : _146293 -> _146290) (H' : type796 _146290 _146293) (g : _146293 -> _146290) (x : _146293) : (term705 _146290 _146293 G lt2 z f H' g x) = (term712 _146290 _146293 G lt2 z f H' g x).
Proof. exact (MK_COMB (@lem8360597 _146290 _146293 lt2 z f G g x) (@lem8360588 _146290 _146293 lt2 z f H' g x)). Qed.
Lemma lem8360599 {_146290 _146293 : Type'} (G : type797 _146290 _146293) (lt2 : type1402 _146293) (z : type784 _146290 _146293) (f : _146293 -> _146290) (H' : type796 _146290 _146293) (g : _146293 -> _146290) (x : _146293) : (term704 _146290 _146293 lt2 z G f H' g x) = (term712 _146290 _146293 G lt2 z f H' g x).
Proof. exact (TRANS (@lem8360581 _146290 _146293 G lt2 z f H' g x) (@lem8360598 _146290 _146293 G lt2 z f H' g x)). Qed.
Lemma lem8360600 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (z : type784 _146290 _146293) (f : _146293 -> _146290) (P : type799 _146290 _146293) (g : _146293 -> _146290) (x : _146293) : (term713 _146290 _146293 lt2 z f P g x) = (term714 _146290 _146293 lt2 z f P g x).
Proof. exact (@lem19490 (term660 _146290 _146293 f P g x) (term689 _146290 _146293 lt2 z f g x) (term656 _146290 _146293 f P g x)). Qed.
Lemma lem8360607 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (z : type784 _146290 _146293) (f : _146293 -> _146290) (P : type799 _146290 _146293) (g : _146293 -> _146290) (x : _146293) : (term715 _146290 _146293 lt2 z f P g x) = (term716 _146290 _146293 lt2 z f P g x).
Proof. exact (@lem19699 (term685 _146290 _146293 lt2 z f g x) (term678 _146290 _146293 z f g x) (term656 _146290 _146293 f P g x)). Qed.
Lemma lem8360614 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (z : type784 _146290 _146293) (f : _146293 -> _146290) (P : type799 _146290 _146293) (g : _146293 -> _146290) (x : _146293) : (term717 _146290 _146293 lt2 z f P g x) = (term718 _146290 _146293 lt2 z f P g x).
Proof. exact (@lem19699 (term685 _146290 _146293 lt2 z f g x) (term678 _146290 _146293 z f g x) (term660 _146290 _146293 f P g x)). Qed.
Lemma lem8360615 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8360616 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (z : type784 _146290 _146293) (f : _146293 -> _146290) (P : type799 _146290 _146293) (g : _146293 -> _146290) (x : _146293) : (term719 _146290 _146293 lt2 z f P g x) = (term720 _146290 _146293 lt2 z f P g x).
Proof. exact (MK_COMB (@lem8360615) (@lem8360614 _146290 _146293 lt2 z f P g x)). Qed.
Lemma lem8360617 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (z : type784 _146290 _146293) (f : _146293 -> _146290) (P : type799 _146290 _146293) (g : _146293 -> _146290) (x : _146293) : (term714 _146290 _146293 lt2 z f P g x) = (term721 _146290 _146293 lt2 z f P g x).
Proof. exact (MK_COMB (@lem8360616 _146290 _146293 lt2 z f P g x) (@lem8360607 _146290 _146293 lt2 z f P g x)). Qed.
Lemma lem8360618 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (z : type784 _146290 _146293) (f : _146293 -> _146290) (P : type799 _146290 _146293) (g : _146293 -> _146290) (x : _146293) : (term713 _146290 _146293 lt2 z f P g x) = (term721 _146290 _146293 lt2 z f P g x).
Proof. exact (TRANS (@lem8360600 _146290 _146293 lt2 z f P g x) (@lem8360617 _146290 _146293 lt2 z f P g x)). Qed.
Lemma lem8360619 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8360620 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (z : type784 _146290 _146293) (f : _146293 -> _146290) (P : type799 _146290 _146293) (g : _146293 -> _146290) (x : _146293) : (term722 _146290 _146293 lt2 z f P g x) = (term723 _146290 _146293 lt2 z f P g x).
Proof. exact (MK_COMB (@lem8360619) (@lem8360618 _146290 _146293 lt2 z f P g x)). Qed.
Lemma lem8360621 {_146290 _146293 : Type'} (P : type799 _146290 _146293) (G : type797 _146290 _146293) (lt2 : type1402 _146293) (z : type784 _146290 _146293) (f : _146293 -> _146290) (H' : type796 _146290 _146293) (g : _146293 -> _146290) (x : _146293) : (term703 _146290 _146293 P lt2 z G f H' g x) = (term724 _146290 _146293 P G lt2 z f H' g x).
Proof. exact (MK_COMB (@lem8360620 _146290 _146293 lt2 z f P g x) (@lem8360599 _146290 _146293 G lt2 z f H' g x)). Qed.
Lemma lem8360623 {_146290 _146293 : Type'} (P : type799 _146290 _146293) (G : type797 _146290 _146293) (lt2 : type1402 _146293) (z : type784 _146290 _146293) (f : _146293 -> _146290) (H' : type796 _146290 _146293) (g : _146293 -> _146290) (x : _146293) : (term693 _146290 _146293 lt2 z P G f H' g x) = (term724 _146290 _146293 P G lt2 z f H' g x).
Proof. exact (TRANS (@lem8360580 _146290 _146293 P lt2 z G f H' g x) (@lem8360621 _146290 _146293 P G lt2 z f H' g x)). Qed.
Lemma lem8360624 {_146290 _146293 : Type'} (P : type799 _146290 _146293) (G : type797 _146290 _146293) (lt2 : type1402 _146293) (z : type784 _146290 _146293) (f : _146293 -> _146290) (H' : type796 _146290 _146293) (g : _146293 -> _146290) : (term695 _146290 _146293 lt2 z P G f H' g) = (term725 _146290 _146293 P G lt2 z f H' g).
Proof. exact (fun_ext (fun x : _146293 => @lem8360623 _146290 _146293 P G lt2 z f H' g x)). Qed.
Lemma lem8360625 {_146293 : Type'} : (@all _146293) = (@all _146293).
Proof. exact (eq_refl (@all _146293)). Qed.
Lemma lem8360626 {_146290 _146293 : Type'} (P : type799 _146290 _146293) (G : type797 _146290 _146293) (lt2 : type1402 _146293) (z : type784 _146290 _146293) (f : _146293 -> _146290) (H' : type796 _146290 _146293) (g : _146293 -> _146290) : (term697 _146290 _146293 lt2 z P G f H' g) = (term726 _146290 _146293 P G lt2 z f H' g).
Proof. exact (MK_COMB (@lem8360625 _146293) (@lem8360624 _146290 _146293 P G lt2 z f H' g)). Qed.
Lemma lem8360627 {_146290 _146293 : Type'} (P : type799 _146290 _146293) (G : type797 _146290 _146293) (lt2 : type1402 _146293) (z : type784 _146290 _146293) (f : _146293 -> _146290) (H' : type796 _146290 _146293) : (term699 _146290 _146293 lt2 z P G f H') = (term727 _146290 _146293 P G lt2 z f H').
Proof. exact (fun_ext (fun g : _146293 -> _146290 => @lem8360626 _146290 _146293 P G lt2 z f H' g)). Qed.
Lemma lem8360628 {_146290 _146293 : Type'} : (@all (_146293 -> _146290)) = (@all (_146293 -> _146290)).
Proof. exact (eq_refl (@all (_146293 -> _146290))). Qed.
Lemma lem8360629 {_146290 _146293 : Type'} (P : type799 _146290 _146293) (G : type797 _146290 _146293) (lt2 : type1402 _146293) (z : type784 _146290 _146293) (f : _146293 -> _146290) (H' : type796 _146290 _146293) : (term700 _146290 _146293 lt2 z P G f H') = (term728 _146290 _146293 P G lt2 z f H').
Proof. exact (MK_COMB (@lem8360628 _146290 _146293) (@lem8360627 _146290 _146293 P G lt2 z f H')). Qed.
Lemma lem8360630 {_146290 _146293 : Type'} (P : type799 _146290 _146293) (G : type797 _146290 _146293) (lt2 : type1402 _146293) (z : type784 _146290 _146293) (H' : type796 _146290 _146293) : (term701 _146290 _146293 lt2 z P G H') = (term729 _146290 _146293 P G lt2 z H').
Proof. exact (fun_ext (fun f : _146293 -> _146290 => @lem8360629 _146290 _146293 P G lt2 z f H')). Qed.
Lemma lem8360631 {_146290 _146293 : Type'} : (@all (_146293 -> _146290)) = (@all (_146293 -> _146290)).
Proof. exact (eq_refl (@all (_146293 -> _146290))). Qed.
Lemma lem8360633 {_146290 _146293 : Type'} (P : type799 _146290 _146293) (G : type797 _146290 _146293) (lt2 : type1402 _146293) (z : type784 _146290 _146293) (H' : type796 _146290 _146293) : (term702 _146290 _146293 lt2 z P G H') = (term730 _146290 _146293 P G lt2 z H').
Proof. exact (MK_COMB (@lem8360631 _146290 _146293) (@lem8360630 _146290 _146293 P G lt2 z H')). Qed.
Lemma lem8360634 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (z : type784 _146290 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (H' : type796 _146290 _146293) (h1 : term259 _146290 _146293 lt2 z P G H') : term730 _146290 _146293 P G lt2 z H'.
Proof. exact (EQ_MP (@lem8360633 _146290 _146293 P G lt2 z H') (@lem8359660 _146290 _146293 lt2 z P G H' h1)). Qed.
Lemma lem8360674 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (x : _146293) (f : _146293 -> _146290) (g : _146293 -> _146290) (z : _146293) : (term621 _146290 _146293 lt2 x f g z) = (term621 _146290 _146293 lt2 x f g z).
Proof. exact (eq_refl (term621 _146290 _146293 lt2 x f g z)). Qed.
Lemma lem8360675 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (x : _146293) (f : _146293 -> _146290) (g : _146293 -> _146290) : (term622 _146290 _146293 lt2 x f g) = (term622 _146290 _146293 lt2 x f g).
Proof. exact (fun_ext (fun z : _146293 => @lem8360674 _146290 _146293 lt2 x f g z)). Qed.
Lemma lem8360676 {_146293 : Type'} : (@all _146293) = (@all _146293).
Proof. exact (eq_refl (@all _146293)). Qed.
Lemma lem8360678 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (x : _146293) (f : _146293 -> _146290) (g : _146293 -> _146290) : (term623 _146290 _146293 lt2 x f g) = (term623 _146290 _146293 lt2 x f g).
Proof. exact (MK_COMB (@lem8360676 _146293) (@lem8360675 _146290 _146293 lt2 x f g)). Qed.
Lemma lem8360679 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (f : _146293 -> _146290) (H' : type796 _146290 _146293) (g : _146293 -> _146290) (x : _146293) (h1 : term625 _146290 _146293 lt2 f H' g x) : term623 _146290 _146293 lt2 x f g.
Proof. exact (EQ_MP (@lem8360678 _146290 _146293 lt2 x f g) (@lem8359682 _146290 _146293 lt2 f H' g x h1)). Qed.
Lemma lem8360701 {_146290 _146293 : Type'} (P : type799 _146290 _146293) (G : type797 _146290 _146293) (f : _146293 -> _146290) (lt2 : type1402 _146293) (y : _146293) (x : _146293) : (term600 _146290 _146293 P G f lt2 y x) = (term600 _146290 _146293 P G f lt2 y x).
Proof. exact (eq_refl (term600 _146290 _146293 P G f lt2 y x)). Qed.
Lemma lem8360702 {_146290 _146293 : Type'} (P : type799 _146290 _146293) (G : type797 _146290 _146293) (f : _146293 -> _146290) (lt2 : type1402 _146293) (x : _146293) : (term601 _146290 _146293 P G f lt2 x) = (term601 _146290 _146293 P G f lt2 x).
Proof. exact (fun_ext (fun y : _146293 => @lem8360701 _146290 _146293 P G f lt2 y x)). Qed.
Lemma lem8360703 {_146293 : Type'} : (@all _146293) = (@all _146293).
Proof. exact (eq_refl (@all _146293)). Qed.
Lemma lem8360704 {_146290 _146293 : Type'} (P : type799 _146290 _146293) (G : type797 _146290 _146293) (f : _146293 -> _146290) (lt2 : type1402 _146293) (x : _146293) : (term602 _146290 _146293 P G f lt2 x) = (term602 _146290 _146293 P G f lt2 x).
Proof. exact (MK_COMB (@lem8360703 _146293) (@lem8360702 _146290 _146293 P G f lt2 x)). Qed.
Lemma lem8360705 {_146290 _146293 : Type'} (P : type799 _146290 _146293) (G : type797 _146290 _146293) (f : _146293 -> _146290) (lt2 : type1402 _146293) : (term603 _146290 _146293 P G f lt2) = (term603 _146290 _146293 P G f lt2).
Proof. exact (fun_ext (fun x : _146293 => @lem8360704 _146290 _146293 P G f lt2 x)). Qed.
Lemma lem8360706 {_146293 : Type'} : (@all _146293) = (@all _146293).
Proof. exact (eq_refl (@all _146293)). Qed.
Lemma lem8360707 {_146290 _146293 : Type'} (P : type799 _146290 _146293) (G : type797 _146290 _146293) (f : _146293 -> _146290) (lt2 : type1402 _146293) : (term604 _146290 _146293 P G f lt2) = (term604 _146290 _146293 P G f lt2).
Proof. exact (MK_COMB (@lem8360706 _146293) (@lem8360705 _146290 _146293 P G f lt2)). Qed.
Lemma lem8360708 {_146290 _146293 : Type'} (P : type799 _146290 _146293) (G : type797 _146290 _146293) (lt2 : type1402 _146293) : (term605 _146290 _146293 P G lt2) = (term605 _146290 _146293 P G lt2).
Proof. exact (fun_ext (fun f : _146293 -> _146290 => @lem8360707 _146290 _146293 P G f lt2)). Qed.
Lemma lem8360709 {_146290 _146293 : Type'} : (@all (_146293 -> _146290)) = (@all (_146293 -> _146290)).
Proof. exact (eq_refl (@all (_146293 -> _146290))). Qed.
Lemma lem8360711 {_146290 _146293 : Type'} (P : type799 _146290 _146293) (G : type797 _146290 _146293) (lt2 : type1402 _146293) : (term606 _146290 _146293 P G lt2) = (term606 _146290 _146293 P G lt2).
Proof. exact (MK_COMB (@lem8360709 _146290 _146293) (@lem8360708 _146290 _146293 P G lt2)). Qed.
Lemma lem8360712 {_146290 _146293 : Type'} (P : type799 _146290 _146293) (G : type797 _146290 _146293) (lt2 : type1402 _146293) (h1 : term23 _146290 _146293 P G lt2) : term606 _146290 _146293 P G lt2.
Proof. exact (EQ_MP (@lem8360711 _146290 _146293 P G lt2) (@lem8358838 _146290 _146293 P G lt2 h1)). Qed.
Lemma lem8360885 {_146290 _146293 : Type'} (_113758 : _146293 -> _146290) (lt2 : type1402 _146293) (z : type784 _146290 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (H' : type796 _146290 _146293) (h1 : term259 _146290 _146293 lt2 z P G H') : term731 _146290 _146293 P G lt2 z H' _113758.
Proof. exact (@lem8359958 _146290 _146293 lt2 z P G H' h1 _113758). Qed.
Lemma lem8360886 {_146290 _146293 : Type'} (P : type799 _146290 _146293) (G : type797 _146290 _146293) (lt2 : type1402 _146293) (z : type784 _146290 _146293) (_113758 : _146293 -> _146290) (H' : type796 _146290 _146293) : (term731 _146290 _146293 P G lt2 z H' _113758) = (term728 _146290 _146293 P G lt2 z _113758 H').
Proof. exact (eq_refl (term731 _146290 _146293 P G lt2 z H' _113758)). Qed.
Lemma lem8360887 {_146290 _146293 : Type'} (_113758 : _146293 -> _146290) (lt2 : type1402 _146293) (z : type784 _146290 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (H' : type796 _146290 _146293) (h1 : term259 _146290 _146293 lt2 z P G H') : term728 _146290 _146293 P G lt2 z _113758 H'.
Proof. exact (EQ_MP (@lem8360886 _146290 _146293 P G lt2 z _113758 H') (@lem8360885 _146290 _146293 _113758 lt2 z P G H' h1)). Qed.
Lemma lem8360888 {_146290 _146293 : Type'} (_113758 : _146293 -> _146290) (_113759 : _146293 -> _146290) (lt2 : type1402 _146293) (z : type784 _146290 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (H' : type796 _146290 _146293) (h1 : term259 _146290 _146293 lt2 z P G H') : term732 _146290 _146293 P G lt2 z _113758 H' _113759.
Proof. exact (@lem8360887 _146290 _146293 _113758 lt2 z P G H' h1 _113759). Qed.
Lemma lem8360889 {_146290 _146293 : Type'} (P : type799 _146290 _146293) (G : type797 _146290 _146293) (lt2 : type1402 _146293) (z : type784 _146290 _146293) (_113758 : _146293 -> _146290) (H' : type796 _146290 _146293) (_113759 : _146293 -> _146290) : (term732 _146290 _146293 P G lt2 z _113758 H' _113759) = (term726 _146290 _146293 P G lt2 z _113758 H' _113759).
Proof. exact (eq_refl (term732 _146290 _146293 P G lt2 z _113758 H' _113759)). Qed.
Lemma lem8360890 {_146290 _146293 : Type'} (_113758 : _146293 -> _146290) (_113759 : _146293 -> _146290) (lt2 : type1402 _146293) (z : type784 _146290 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (H' : type796 _146290 _146293) (h1 : term259 _146290 _146293 lt2 z P G H') : term726 _146290 _146293 P G lt2 z _113758 H' _113759.
Proof. exact (EQ_MP (@lem8360889 _146290 _146293 P G lt2 z _113758 H' _113759) (@lem8360888 _146290 _146293 _113758 _113759 lt2 z P G H' h1)). Qed.
Lemma lem8360891 {_146290 _146293 : Type'} (_113758 : _146293 -> _146290) (_113759 : _146293 -> _146290) (_113760 : _146293) (lt2 : type1402 _146293) (z : type784 _146290 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (H' : type796 _146290 _146293) (h1 : term259 _146290 _146293 lt2 z P G H') : term733 _146290 _146293 P G lt2 z _113758 H' _113759 _113760.
Proof. exact (@lem8360890 _146290 _146293 _113758 _113759 lt2 z P G H' h1 _113760). Qed.
Lemma lem8360892 {_146290 _146293 : Type'} (P : type799 _146290 _146293) (G : type797 _146290 _146293) (lt2 : type1402 _146293) (z : type784 _146290 _146293) (_113758 : _146293 -> _146290) (H' : type796 _146290 _146293) (_113759 : _146293 -> _146290) (_113760 : _146293) : (term733 _146290 _146293 P G lt2 z _113758 H' _113759 _113760) = (term724 _146290 _146293 P G lt2 z _113758 H' _113759 _113760).
Proof. exact (eq_refl (term733 _146290 _146293 P G lt2 z _113758 H' _113759 _113760)). Qed.
Lemma lem8360893 {_146290 _146293 : Type'} (_113758 : _146293 -> _146290) (_113759 : _146293 -> _146290) (_113760 : _146293) (lt2 : type1402 _146293) (z : type784 _146290 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (H' : type796 _146290 _146293) (h1 : term259 _146290 _146293 lt2 z P G H') : term724 _146290 _146293 P G lt2 z _113758 H' _113759 _113760.
Proof. exact (EQ_MP (@lem8360892 _146290 _146293 P G lt2 z _113758 H' _113759 _113760) (@lem8360891 _146290 _146293 _113758 _113759 _113760 lt2 z P G H' h1)). Qed.
Lemma lem8360906 {_146290 _146293 : Type'} (_113765 : _146293) (lt2 : type1402 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (f : _146293 -> _146290) (H' : type796 _146290 _146293) (g : _146293 -> _146290) (x : _146293) (h1 : term646 _146290 _146293 lt2 P G f H' g x) : term734 _146290 _146293 lt2 x f g _113765.
Proof. exact (@lem8360003 _146290 _146293 lt2 P G f H' g x h1 _113765). Qed.
Lemma lem8360907 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (x : _146293) (f : _146293 -> _146290) (g : _146293 -> _146290) (_113765 : _146293) : (term734 _146290 _146293 lt2 x f g _113765) = (term621 _146290 _146293 lt2 x f g _113765).
Proof. exact (eq_refl (term734 _146290 _146293 lt2 x f g _113765)). Qed.
Lemma lem8360918 {_146290 _146293 : Type'} (_113769 : _146293 -> _146290) (lt2 : type1402 _146293) (z : type784 _146290 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (H' : type796 _146290 _146293) (h1 : term259 _146290 _146293 lt2 z P G H') : term731 _146290 _146293 P G lt2 z H' _113769.
Proof. exact (@lem8360129 _146290 _146293 lt2 z P G H' h1 _113769). Qed.
Lemma lem8360919 {_146290 _146293 : Type'} (P : type799 _146290 _146293) (G : type797 _146290 _146293) (lt2 : type1402 _146293) (z : type784 _146290 _146293) (_113769 : _146293 -> _146290) (H' : type796 _146290 _146293) : (term731 _146290 _146293 P G lt2 z H' _113769) = (term728 _146290 _146293 P G lt2 z _113769 H').
Proof. exact (eq_refl (term731 _146290 _146293 P G lt2 z H' _113769)). Qed.
Lemma lem8360920 {_146290 _146293 : Type'} (_113769 : _146293 -> _146290) (lt2 : type1402 _146293) (z : type784 _146290 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (H' : type796 _146290 _146293) (h1 : term259 _146290 _146293 lt2 z P G H') : term728 _146290 _146293 P G lt2 z _113769 H'.
Proof. exact (EQ_MP (@lem8360919 _146290 _146293 P G lt2 z _113769 H') (@lem8360918 _146290 _146293 _113769 lt2 z P G H' h1)). Qed.
Lemma lem8360921 {_146290 _146293 : Type'} (_113769 : _146293 -> _146290) (_113770 : _146293 -> _146290) (lt2 : type1402 _146293) (z : type784 _146290 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (H' : type796 _146290 _146293) (h1 : term259 _146290 _146293 lt2 z P G H') : term732 _146290 _146293 P G lt2 z _113769 H' _113770.
Proof. exact (@lem8360920 _146290 _146293 _113769 lt2 z P G H' h1 _113770). Qed.
Lemma lem8360922 {_146290 _146293 : Type'} (P : type799 _146290 _146293) (G : type797 _146290 _146293) (lt2 : type1402 _146293) (z : type784 _146290 _146293) (_113769 : _146293 -> _146290) (H' : type796 _146290 _146293) (_113770 : _146293 -> _146290) : (term732 _146290 _146293 P G lt2 z _113769 H' _113770) = (term726 _146290 _146293 P G lt2 z _113769 H' _113770).
Proof. exact (eq_refl (term732 _146290 _146293 P G lt2 z _113769 H' _113770)). Qed.
Lemma lem8360923 {_146290 _146293 : Type'} (_113769 : _146293 -> _146290) (_113770 : _146293 -> _146290) (lt2 : type1402 _146293) (z : type784 _146290 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (H' : type796 _146290 _146293) (h1 : term259 _146290 _146293 lt2 z P G H') : term726 _146290 _146293 P G lt2 z _113769 H' _113770.
Proof. exact (EQ_MP (@lem8360922 _146290 _146293 P G lt2 z _113769 H' _113770) (@lem8360921 _146290 _146293 _113769 _113770 lt2 z P G H' h1)). Qed.
Lemma lem8360924 {_146290 _146293 : Type'} (_113769 : _146293 -> _146290) (_113770 : _146293 -> _146290) (_113771 : _146293) (lt2 : type1402 _146293) (z : type784 _146290 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (H' : type796 _146290 _146293) (h1 : term259 _146290 _146293 lt2 z P G H') : term733 _146290 _146293 P G lt2 z _113769 H' _113770 _113771.
Proof. exact (@lem8360923 _146290 _146293 _113769 _113770 lt2 z P G H' h1 _113771). Qed.
Lemma lem8360925 {_146290 _146293 : Type'} (P : type799 _146290 _146293) (G : type797 _146290 _146293) (lt2 : type1402 _146293) (z : type784 _146290 _146293) (_113769 : _146293 -> _146290) (H' : type796 _146290 _146293) (_113770 : _146293 -> _146290) (_113771 : _146293) : (term733 _146290 _146293 P G lt2 z _113769 H' _113770 _113771) = (term724 _146290 _146293 P G lt2 z _113769 H' _113770 _113771).
Proof. exact (eq_refl (term733 _146290 _146293 P G lt2 z _113769 H' _113770 _113771)). Qed.
Lemma lem8360926 {_146290 _146293 : Type'} (_113769 : _146293 -> _146290) (_113770 : _146293 -> _146290) (_113771 : _146293) (lt2 : type1402 _146293) (z : type784 _146290 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (H' : type796 _146290 _146293) (h1 : term259 _146290 _146293 lt2 z P G H') : term724 _146290 _146293 P G lt2 z _113769 H' _113770 _113771.
Proof. exact (EQ_MP (@lem8360925 _146290 _146293 P G lt2 z _113769 H' _113770 _113771) (@lem8360924 _146290 _146293 _113769 _113770 _113771 lt2 z P G H' h1)). Qed.
Lemma lem8360939 {_146290 _146293 : Type'} (_113776 : _146293) (lt2 : type1402 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (f : _146293 -> _146290) (H' : type796 _146290 _146293) (g : _146293 -> _146290) (x : _146293) (h1 : term646 _146290 _146293 lt2 P G f H' g x) : term734 _146290 _146293 lt2 x f g _113776.
Proof. exact (@lem8360174 _146290 _146293 lt2 P G f H' g x h1 _113776). Qed.
Lemma lem8360940 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (x : _146293) (f : _146293 -> _146290) (g : _146293 -> _146290) (_113776 : _146293) : (term734 _146290 _146293 lt2 x f g _113776) = (term621 _146290 _146293 lt2 x f g _113776).
Proof. exact (eq_refl (term734 _146290 _146293 lt2 x f g _113776)). Qed.
Lemma lem8360951 {_146290 _146293 : Type'} (_113780 : _146293 -> _146290) (lt2 : type1402 _146293) (z : type784 _146290 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (H' : type796 _146290 _146293) (h1 : term259 _146290 _146293 lt2 z P G H') : term731 _146290 _146293 P G lt2 z H' _113780.
Proof. exact (@lem8360300 _146290 _146293 lt2 z P G H' h1 _113780). Qed.
Lemma lem8360952 {_146290 _146293 : Type'} (P : type799 _146290 _146293) (G : type797 _146290 _146293) (lt2 : type1402 _146293) (z : type784 _146290 _146293) (_113780 : _146293 -> _146290) (H' : type796 _146290 _146293) : (term731 _146290 _146293 P G lt2 z H' _113780) = (term728 _146290 _146293 P G lt2 z _113780 H').
Proof. exact (eq_refl (term731 _146290 _146293 P G lt2 z H' _113780)). Qed.
Lemma lem8360953 {_146290 _146293 : Type'} (_113780 : _146293 -> _146290) (lt2 : type1402 _146293) (z : type784 _146290 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (H' : type796 _146290 _146293) (h1 : term259 _146290 _146293 lt2 z P G H') : term728 _146290 _146293 P G lt2 z _113780 H'.
Proof. exact (EQ_MP (@lem8360952 _146290 _146293 P G lt2 z _113780 H') (@lem8360951 _146290 _146293 _113780 lt2 z P G H' h1)). Qed.
Lemma lem8360954 {_146290 _146293 : Type'} (_113780 : _146293 -> _146290) (_113781 : _146293 -> _146290) (lt2 : type1402 _146293) (z : type784 _146290 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (H' : type796 _146290 _146293) (h1 : term259 _146290 _146293 lt2 z P G H') : term732 _146290 _146293 P G lt2 z _113780 H' _113781.
Proof. exact (@lem8360953 _146290 _146293 _113780 lt2 z P G H' h1 _113781). Qed.
Lemma lem8360955 {_146290 _146293 : Type'} (P : type799 _146290 _146293) (G : type797 _146290 _146293) (lt2 : type1402 _146293) (z : type784 _146290 _146293) (_113780 : _146293 -> _146290) (H' : type796 _146290 _146293) (_113781 : _146293 -> _146290) : (term732 _146290 _146293 P G lt2 z _113780 H' _113781) = (term726 _146290 _146293 P G lt2 z _113780 H' _113781).
Proof. exact (eq_refl (term732 _146290 _146293 P G lt2 z _113780 H' _113781)). Qed.
Lemma lem8360956 {_146290 _146293 : Type'} (_113780 : _146293 -> _146290) (_113781 : _146293 -> _146290) (lt2 : type1402 _146293) (z : type784 _146290 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (H' : type796 _146290 _146293) (h1 : term259 _146290 _146293 lt2 z P G H') : term726 _146290 _146293 P G lt2 z _113780 H' _113781.
Proof. exact (EQ_MP (@lem8360955 _146290 _146293 P G lt2 z _113780 H' _113781) (@lem8360954 _146290 _146293 _113780 _113781 lt2 z P G H' h1)). Qed.
Lemma lem8360957 {_146290 _146293 : Type'} (_113780 : _146293 -> _146290) (_113781 : _146293 -> _146290) (_113782 : _146293) (lt2 : type1402 _146293) (z : type784 _146290 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (H' : type796 _146290 _146293) (h1 : term259 _146290 _146293 lt2 z P G H') : term733 _146290 _146293 P G lt2 z _113780 H' _113781 _113782.
Proof. exact (@lem8360956 _146290 _146293 _113780 _113781 lt2 z P G H' h1 _113782). Qed.
Lemma lem8360958 {_146290 _146293 : Type'} (P : type799 _146290 _146293) (G : type797 _146290 _146293) (lt2 : type1402 _146293) (z : type784 _146290 _146293) (_113780 : _146293 -> _146290) (H' : type796 _146290 _146293) (_113781 : _146293 -> _146290) (_113782 : _146293) : (term733 _146290 _146293 P G lt2 z _113780 H' _113781 _113782) = (term724 _146290 _146293 P G lt2 z _113780 H' _113781 _113782).
Proof. exact (eq_refl (term733 _146290 _146293 P G lt2 z _113780 H' _113781 _113782)). Qed.
Lemma lem8360959 {_146290 _146293 : Type'} (_113780 : _146293 -> _146290) (_113781 : _146293 -> _146290) (_113782 : _146293) (lt2 : type1402 _146293) (z : type784 _146290 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (H' : type796 _146290 _146293) (h1 : term259 _146290 _146293 lt2 z P G H') : term724 _146290 _146293 P G lt2 z _113780 H' _113781 _113782.
Proof. exact (EQ_MP (@lem8360958 _146290 _146293 P G lt2 z _113780 H' _113781 _113782) (@lem8360957 _146290 _146293 _113780 _113781 _113782 lt2 z P G H' h1)). Qed.
Lemma lem8360972 {_146290 _146293 : Type'} (_113787 : _146293) (lt2 : type1402 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (f : _146293 -> _146290) (H' : type796 _146290 _146293) (g : _146293 -> _146290) (x : _146293) (h1 : term646 _146290 _146293 lt2 P G f H' g x) : term734 _146290 _146293 lt2 x f g _113787.
Proof. exact (@lem8360345 _146290 _146293 lt2 P G f H' g x h1 _113787). Qed.
Lemma lem8360973 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (x : _146293) (f : _146293 -> _146290) (g : _146293 -> _146290) (_113787 : _146293) : (term734 _146290 _146293 lt2 x f g _113787) = (term621 _146290 _146293 lt2 x f g _113787).
Proof. exact (eq_refl (term734 _146290 _146293 lt2 x f g _113787)). Qed.
Lemma lem8360984 {_146290 _146293 : Type'} (_113791 : _146293 -> _146290) (lt2 : type1402 _146293) (z : type784 _146290 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (H' : type796 _146290 _146293) (h1 : term259 _146290 _146293 lt2 z P G H') : term731 _146290 _146293 P G lt2 z H' _113791.
Proof. exact (@lem8360467 _146290 _146293 lt2 z P G H' h1 _113791). Qed.
Lemma lem8360985 {_146290 _146293 : Type'} (P : type799 _146290 _146293) (G : type797 _146290 _146293) (lt2 : type1402 _146293) (z : type784 _146290 _146293) (_113791 : _146293 -> _146290) (H' : type796 _146290 _146293) : (term731 _146290 _146293 P G lt2 z H' _113791) = (term728 _146290 _146293 P G lt2 z _113791 H').
Proof. exact (eq_refl (term731 _146290 _146293 P G lt2 z H' _113791)). Qed.
Lemma lem8360986 {_146290 _146293 : Type'} (_113791 : _146293 -> _146290) (lt2 : type1402 _146293) (z : type784 _146290 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (H' : type796 _146290 _146293) (h1 : term259 _146290 _146293 lt2 z P G H') : term728 _146290 _146293 P G lt2 z _113791 H'.
Proof. exact (EQ_MP (@lem8360985 _146290 _146293 P G lt2 z _113791 H') (@lem8360984 _146290 _146293 _113791 lt2 z P G H' h1)). Qed.
Lemma lem8360987 {_146290 _146293 : Type'} (_113791 : _146293 -> _146290) (_113792 : _146293 -> _146290) (lt2 : type1402 _146293) (z : type784 _146290 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (H' : type796 _146290 _146293) (h1 : term259 _146290 _146293 lt2 z P G H') : term732 _146290 _146293 P G lt2 z _113791 H' _113792.
Proof. exact (@lem8360986 _146290 _146293 _113791 lt2 z P G H' h1 _113792). Qed.
Lemma lem8360988 {_146290 _146293 : Type'} (P : type799 _146290 _146293) (G : type797 _146290 _146293) (lt2 : type1402 _146293) (z : type784 _146290 _146293) (_113791 : _146293 -> _146290) (H' : type796 _146290 _146293) (_113792 : _146293 -> _146290) : (term732 _146290 _146293 P G lt2 z _113791 H' _113792) = (term726 _146290 _146293 P G lt2 z _113791 H' _113792).
Proof. exact (eq_refl (term732 _146290 _146293 P G lt2 z _113791 H' _113792)). Qed.
Lemma lem8360989 {_146290 _146293 : Type'} (_113791 : _146293 -> _146290) (_113792 : _146293 -> _146290) (lt2 : type1402 _146293) (z : type784 _146290 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (H' : type796 _146290 _146293) (h1 : term259 _146290 _146293 lt2 z P G H') : term726 _146290 _146293 P G lt2 z _113791 H' _113792.
Proof. exact (EQ_MP (@lem8360988 _146290 _146293 P G lt2 z _113791 H' _113792) (@lem8360987 _146290 _146293 _113791 _113792 lt2 z P G H' h1)). Qed.
Lemma lem8360990 {_146290 _146293 : Type'} (_113791 : _146293 -> _146290) (_113792 : _146293 -> _146290) (_113793 : _146293) (lt2 : type1402 _146293) (z : type784 _146290 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (H' : type796 _146290 _146293) (h1 : term259 _146290 _146293 lt2 z P G H') : term733 _146290 _146293 P G lt2 z _113791 H' _113792 _113793.
Proof. exact (@lem8360989 _146290 _146293 _113791 _113792 lt2 z P G H' h1 _113793). Qed.
Lemma lem8360991 {_146290 _146293 : Type'} (P : type799 _146290 _146293) (G : type797 _146290 _146293) (lt2 : type1402 _146293) (z : type784 _146290 _146293) (_113791 : _146293 -> _146290) (H' : type796 _146290 _146293) (_113792 : _146293 -> _146290) (_113793 : _146293) : (term733 _146290 _146293 P G lt2 z _113791 H' _113792 _113793) = (term724 _146290 _146293 P G lt2 z _113791 H' _113792 _113793).
Proof. exact (eq_refl (term733 _146290 _146293 P G lt2 z _113791 H' _113792 _113793)). Qed.
Lemma lem8360992 {_146290 _146293 : Type'} (_113791 : _146293 -> _146290) (_113792 : _146293 -> _146290) (_113793 : _146293) (lt2 : type1402 _146293) (z : type784 _146290 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (H' : type796 _146290 _146293) (h1 : term259 _146290 _146293 lt2 z P G H') : term724 _146290 _146293 P G lt2 z _113791 H' _113792 _113793.
Proof. exact (EQ_MP (@lem8360991 _146290 _146293 P G lt2 z _113791 H' _113792 _113793) (@lem8360990 _146290 _146293 _113791 _113792 _113793 lt2 z P G H' h1)). Qed.
Lemma lem8361005 {_146290 _146293 : Type'} (_113798 : _146293) (lt2 : type1402 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (f : _146293 -> _146290) (H' : type796 _146290 _146293) (g : _146293 -> _146290) (x : _146293) (h1 : term646 _146290 _146293 lt2 P G f H' g x) : term734 _146290 _146293 lt2 x f g _113798.
Proof. exact (@lem8360512 _146290 _146293 lt2 P G f H' g x h1 _113798). Qed.
Lemma lem8361006 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (x : _146293) (f : _146293 -> _146290) (g : _146293 -> _146290) (_113798 : _146293) : (term734 _146290 _146293 lt2 x f g _113798) = (term621 _146290 _146293 lt2 x f g _113798).
Proof. exact (eq_refl (term734 _146290 _146293 lt2 x f g _113798)). Qed.
Lemma lem8361017 {_146290 _146293 : Type'} (_113802 : _146293 -> _146290) (lt2 : type1402 _146293) (z : type784 _146290 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (H' : type796 _146290 _146293) (h1 : term259 _146290 _146293 lt2 z P G H') : term731 _146290 _146293 P G lt2 z H' _113802.
Proof. exact (@lem8360634 _146290 _146293 lt2 z P G H' h1 _113802). Qed.
Lemma lem8361018 {_146290 _146293 : Type'} (P : type799 _146290 _146293) (G : type797 _146290 _146293) (lt2 : type1402 _146293) (z : type784 _146290 _146293) (_113802 : _146293 -> _146290) (H' : type796 _146290 _146293) : (term731 _146290 _146293 P G lt2 z H' _113802) = (term728 _146290 _146293 P G lt2 z _113802 H').
Proof. exact (eq_refl (term731 _146290 _146293 P G lt2 z H' _113802)). Qed.
Lemma lem8361019 {_146290 _146293 : Type'} (_113802 : _146293 -> _146290) (lt2 : type1402 _146293) (z : type784 _146290 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (H' : type796 _146290 _146293) (h1 : term259 _146290 _146293 lt2 z P G H') : term728 _146290 _146293 P G lt2 z _113802 H'.
Proof. exact (EQ_MP (@lem8361018 _146290 _146293 P G lt2 z _113802 H') (@lem8361017 _146290 _146293 _113802 lt2 z P G H' h1)). Qed.
Lemma lem8361020 {_146290 _146293 : Type'} (_113802 : _146293 -> _146290) (_113803 : _146293 -> _146290) (lt2 : type1402 _146293) (z : type784 _146290 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (H' : type796 _146290 _146293) (h1 : term259 _146290 _146293 lt2 z P G H') : term732 _146290 _146293 P G lt2 z _113802 H' _113803.
Proof. exact (@lem8361019 _146290 _146293 _113802 lt2 z P G H' h1 _113803). Qed.
Lemma lem8361021 {_146290 _146293 : Type'} (P : type799 _146290 _146293) (G : type797 _146290 _146293) (lt2 : type1402 _146293) (z : type784 _146290 _146293) (_113802 : _146293 -> _146290) (H' : type796 _146290 _146293) (_113803 : _146293 -> _146290) : (term732 _146290 _146293 P G lt2 z _113802 H' _113803) = (term726 _146290 _146293 P G lt2 z _113802 H' _113803).
Proof. exact (eq_refl (term732 _146290 _146293 P G lt2 z _113802 H' _113803)). Qed.
Lemma lem8361022 {_146290 _146293 : Type'} (_113802 : _146293 -> _146290) (_113803 : _146293 -> _146290) (lt2 : type1402 _146293) (z : type784 _146290 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (H' : type796 _146290 _146293) (h1 : term259 _146290 _146293 lt2 z P G H') : term726 _146290 _146293 P G lt2 z _113802 H' _113803.
Proof. exact (EQ_MP (@lem8361021 _146290 _146293 P G lt2 z _113802 H' _113803) (@lem8361020 _146290 _146293 _113802 _113803 lt2 z P G H' h1)). Qed.
Lemma lem8361023 {_146290 _146293 : Type'} (_113802 : _146293 -> _146290) (_113803 : _146293 -> _146290) (_113804 : _146293) (lt2 : type1402 _146293) (z : type784 _146290 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (H' : type796 _146290 _146293) (h1 : term259 _146290 _146293 lt2 z P G H') : term733 _146290 _146293 P G lt2 z _113802 H' _113803 _113804.
Proof. exact (@lem8361022 _146290 _146293 _113802 _113803 lt2 z P G H' h1 _113804). Qed.
Lemma lem8361024 {_146290 _146293 : Type'} (P : type799 _146290 _146293) (G : type797 _146290 _146293) (lt2 : type1402 _146293) (z : type784 _146290 _146293) (_113802 : _146293 -> _146290) (H' : type796 _146290 _146293) (_113803 : _146293 -> _146290) (_113804 : _146293) : (term733 _146290 _146293 P G lt2 z _113802 H' _113803 _113804) = (term724 _146290 _146293 P G lt2 z _113802 H' _113803 _113804).
Proof. exact (eq_refl (term733 _146290 _146293 P G lt2 z _113802 H' _113803 _113804)). Qed.
Lemma lem8361025 {_146290 _146293 : Type'} (_113802 : _146293 -> _146290) (_113803 : _146293 -> _146290) (_113804 : _146293) (lt2 : type1402 _146293) (z : type784 _146290 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (H' : type796 _146290 _146293) (h1 : term259 _146290 _146293 lt2 z P G H') : term724 _146290 _146293 P G lt2 z _113802 H' _113803 _113804.
Proof. exact (EQ_MP (@lem8361024 _146290 _146293 P G lt2 z _113802 H' _113803 _113804) (@lem8361023 _146290 _146293 _113802 _113803 _113804 lt2 z P G H' h1)). Qed.
Lemma lem8361038 {_146290 _146293 : Type'} (_113809 : _146293) (lt2 : type1402 _146293) (f : _146293 -> _146290) (H' : type796 _146290 _146293) (g : _146293 -> _146290) (x : _146293) (h1 : term625 _146290 _146293 lt2 f H' g x) : term734 _146290 _146293 lt2 x f g _113809.
Proof. exact (@lem8360679 _146290 _146293 lt2 f H' g x h1 _113809). Qed.
Lemma lem8361039 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (x : _146293) (f : _146293 -> _146290) (g : _146293 -> _146290) (_113809 : _146293) : (term734 _146290 _146293 lt2 x f g _113809) = (term621 _146290 _146293 lt2 x f g _113809).
Proof. exact (eq_refl (term734 _146290 _146293 lt2 x f g _113809)). Qed.
Lemma lem8361041 {_146290 _146293 : Type'} (_113810 : _146293 -> _146290) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (lt2 : type1402 _146293) (h1 : term23 _146290 _146293 P G lt2) : term735 _146290 _146293 P G lt2 _113810.
Proof. exact (@lem8360712 _146290 _146293 P G lt2 h1 _113810). Qed.
Lemma lem8361042 {_146290 _146293 : Type'} (P : type799 _146290 _146293) (G : type797 _146290 _146293) (_113810 : _146293 -> _146290) (lt2 : type1402 _146293) : (term735 _146290 _146293 P G lt2 _113810) = (term604 _146290 _146293 P G _113810 lt2).
Proof. exact (eq_refl (term735 _146290 _146293 P G lt2 _113810)). Qed.
Lemma lem8361043 {_146290 _146293 : Type'} (_113810 : _146293 -> _146290) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (lt2 : type1402 _146293) (h1 : term23 _146290 _146293 P G lt2) : term604 _146290 _146293 P G _113810 lt2.
Proof. exact (EQ_MP (@lem8361042 _146290 _146293 P G _113810 lt2) (@lem8361041 _146290 _146293 _113810 P G lt2 h1)). Qed.
Lemma lem8361044 {_146290 _146293 : Type'} (_113810 : _146293 -> _146290) (_113811 : _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (lt2 : type1402 _146293) (h1 : term23 _146290 _146293 P G lt2) : term736 _146290 _146293 P G _113810 lt2 _113811.
Proof. exact (@lem8361043 _146290 _146293 _113810 P G lt2 h1 _113811). Qed.
Lemma lem8361045 {_146290 _146293 : Type'} (P : type799 _146290 _146293) (G : type797 _146290 _146293) (_113810 : _146293 -> _146290) (lt2 : type1402 _146293) (_113811 : _146293) : (term736 _146290 _146293 P G _113810 lt2 _113811) = (term602 _146290 _146293 P G _113810 lt2 _113811).
Proof. exact (eq_refl (term736 _146290 _146293 P G _113810 lt2 _113811)). Qed.
Lemma lem8361046 {_146290 _146293 : Type'} (_113810 : _146293 -> _146290) (_113811 : _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (lt2 : type1402 _146293) (h1 : term23 _146290 _146293 P G lt2) : term602 _146290 _146293 P G _113810 lt2 _113811.
Proof. exact (EQ_MP (@lem8361045 _146290 _146293 P G _113810 lt2 _113811) (@lem8361044 _146290 _146293 _113810 _113811 P G lt2 h1)). Qed.
Lemma lem8361047 {_146290 _146293 : Type'} (_113810 : _146293 -> _146290) (_113811 : _146293) (_113812 : _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (lt2 : type1402 _146293) (h1 : term23 _146290 _146293 P G lt2) : term737 _146290 _146293 P G _113810 lt2 _113811 _113812.
Proof. exact (@lem8361046 _146290 _146293 _113810 _113811 P G lt2 h1 _113812). Qed.
Lemma lem8361048 {_146290 _146293 : Type'} (P : type799 _146290 _146293) (G : type797 _146290 _146293) (_113810 : _146293 -> _146290) (lt2 : type1402 _146293) (_113812 : _146293) (_113811 : _146293) : (term737 _146290 _146293 P G _113810 lt2 _113811 _113812) = (term600 _146290 _146293 P G _113810 lt2 _113812 _113811).
Proof. exact (eq_refl (term737 _146290 _146293 P G _113810 lt2 _113811 _113812)). Qed.
Lemma lem8361049 {_146290 _146293 : Type'} (_113810 : _146293 -> _146290) (_113812 : _146293) (_113811 : _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (lt2 : type1402 _146293) (h1 : term23 _146290 _146293 P G lt2) : term600 _146290 _146293 P G _113810 lt2 _113812 _113811.
Proof. exact (EQ_MP (@lem8361048 _146290 _146293 P G _113810 lt2 _113812 _113811) (@lem8361047 _146290 _146293 _113810 _113811 _113812 P G lt2 h1)). Qed.
Lemma lem8361086 {_146290 _146293 : Type'} (_113758 : _146293 -> _146290) (_113759 : _146293 -> _146290) (_113760 : _146293) (lt2 : type1402 _146293) (z : type784 _146290 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (H' : type796 _146290 _146293) (h1 : term259 _146290 _146293 lt2 z P G H') : term721 _146290 _146293 lt2 z _113758 P _113759 _113760.
Proof. exact (proj1 (@lem8360893 _146290 _146293 _113758 _113759 _113760 lt2 z P G H' h1)). Qed.
Lemma lem8361093 {_146290 _146293 : Type'} (_113758 : _146293 -> _146290) (_113759 : _146293 -> _146290) (_113760 : _146293) (lt2 : type1402 _146293) (z : type784 _146290 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (H' : type796 _146290 _146293) (h1 : term259 _146290 _146293 lt2 z P G H') : term716 _146290 _146293 lt2 z _113758 P _113759 _113760.
Proof. exact (proj2 (@lem8361086 _146290 _146293 _113758 _113759 _113760 lt2 z P G H' h1)). Qed.
Lemma lem8361100 {_146290 _146293 : Type'} (_113769 : _146293 -> _146290) (_113770 : _146293 -> _146290) (_113771 : _146293) (lt2 : type1402 _146293) (z : type784 _146290 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (H' : type796 _146290 _146293) (h1 : term259 _146290 _146293 lt2 z P G H') : term721 _146290 _146293 lt2 z _113769 P _113770 _113771.
Proof. exact (proj1 (@lem8360926 _146290 _146293 _113769 _113770 _113771 lt2 z P G H' h1)). Qed.
Lemma lem8361108 {_146290 _146293 : Type'} (_113769 : _146293 -> _146290) (_113770 : _146293 -> _146290) (_113771 : _146293) (lt2 : type1402 _146293) (z : type784 _146290 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (H' : type796 _146290 _146293) (h1 : term259 _146290 _146293 lt2 z P G H') : term718 _146290 _146293 lt2 z _113769 P _113770 _113771.
Proof. exact (proj1 (@lem8361100 _146290 _146293 _113769 _113770 _113771 lt2 z P G H' h1)). Qed.
Lemma lem8361113 {_146290 _146293 : Type'} (_113780 : _146293 -> _146290) (_113781 : _146293 -> _146290) (_113782 : _146293) (lt2 : type1402 _146293) (z : type784 _146290 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (H' : type796 _146290 _146293) (h1 : term259 _146290 _146293 lt2 z P G H') : term712 _146290 _146293 G lt2 z _113780 H' _113781 _113782.
Proof. exact (proj2 (@lem8360959 _146290 _146293 _113780 _113781 _113782 lt2 z P G H' h1)). Qed.
Lemma lem8361116 {_146290 _146293 : Type'} (_113780 : _146293 -> _146290) (_113781 : _146293 -> _146290) (_113782 : _146293) (lt2 : type1402 _146293) (z : type784 _146290 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (H' : type796 _146290 _146293) (h1 : term259 _146290 _146293 lt2 z P G H') : term709 _146290 _146293 lt2 z _113780 G _113781 _113782.
Proof. exact (proj1 (@lem8361113 _146290 _146293 _113780 _113781 _113782 lt2 z P G H' h1)). Qed.
Lemma lem8361127 {_146290 _146293 : Type'} (_113791 : _146293 -> _146290) (_113792 : _146293 -> _146290) (_113793 : _146293) (lt2 : type1402 _146293) (z : type784 _146290 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (H' : type796 _146290 _146293) (h1 : term259 _146290 _146293 lt2 z P G H') : term712 _146290 _146293 G lt2 z _113791 H' _113792 _113793.
Proof. exact (proj2 (@lem8360992 _146290 _146293 _113791 _113792 _113793 lt2 z P G H' h1)). Qed.
Lemma lem8361129 {_146290 _146293 : Type'} (_113791 : _146293 -> _146290) (_113792 : _146293 -> _146290) (_113793 : _146293) (lt2 : type1402 _146293) (z : type784 _146290 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (H' : type796 _146290 _146293) (h1 : term259 _146290 _146293 lt2 z P G H') : term707 _146290 _146293 lt2 z _113791 H' _113792 _113793.
Proof. exact (proj2 (@lem8361127 _146290 _146293 _113791 _113792 _113793 lt2 z P G H' h1)). Qed.
Lemma lem8361141 {_146290 _146293 : Type'} (_113802 : _146293 -> _146290) (_113803 : _146293 -> _146290) (_113804 : _146293) (lt2 : type1402 _146293) (z : type784 _146290 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (H' : type796 _146290 _146293) (h1 : term259 _146290 _146293 lt2 z P G H') : term712 _146290 _146293 G lt2 z _113802 H' _113803 _113804.
Proof. exact (proj2 (@lem8361025 _146290 _146293 _113802 _113803 _113804 lt2 z P G H' h1)). Qed.
Lemma lem8361143 {_146290 _146293 : Type'} (_113802 : _146293 -> _146290) (_113803 : _146293 -> _146290) (_113804 : _146293) (lt2 : type1402 _146293) (z : type784 _146290 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (H' : type796 _146290 _146293) (h1 : term259 _146290 _146293 lt2 z P G H') : term707 _146290 _146293 lt2 z _113802 H' _113803 _113804.
Proof. exact (proj2 (@lem8361141 _146290 _146293 _113802 _113803 _113804 lt2 z P G H' h1)). Qed.
Lemma lem8361196 {_146293 : Type'} (lt2 : type1402 _146293) (h1 : term649 _146293 lt2) : term649 _146293 lt2.
Proof. exact (h1). Qed.
Lemma lem8361292 {_146290 _146293 : Type'} (_113765 : _146293) (lt2 : type1402 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (f : _146293 -> _146290) (H' : type796 _146290 _146293) (g : _146293 -> _146290) (x : _146293) (h1 : term646 _146290 _146293 lt2 P G f H' g x) : term621 _146290 _146293 lt2 x f g _113765.
Proof. exact (EQ_MP (@lem8360907 _146290 _146293 lt2 x f g _113765) (@lem8360906 _146290 _146293 _113765 lt2 P G f H' g x h1)). Qed.
Lemma lem8361296 {_146290 _146293 : Type'} (f : _146293 -> _146290) (P : type799 _146290 _146293) (g : _146293 -> _146290) (x : _146293) (h1 : term640 _146290 _146293 f P g x) : term595 _146290 _146293 P g x.
Proof. exact (proj2 (@lem8359671 _146290 _146293 f P g x h1)). Qed.
Lemma lem8361330 {_146290 _146293 : Type'} (_113758 : _146293 -> _146290) (_113759 : _146293 -> _146290) (_113760 : _146293) (lt2 : type1402 _146293) (z : type784 _146290 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (H' : type796 _146290 _146293) (h1 : term259 _146290 _146293 lt2 z P G H') : term738 _146290 _146293 lt2 z _113758 P _113759 _113760.
Proof. exact (proj1 (@lem8361093 _146290 _146293 _113758 _113759 _113760 lt2 z P G H' h1)). Qed.
Lemma lem8361340 {_146290 _146293 : Type'} (_113758 : _146293 -> _146290) (_113759 : _146293 -> _146290) (_113760 : _146293) (lt2 : type1402 _146293) (z : type784 _146290 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (H' : type796 _146290 _146293) (h1 : term259 _146290 _146293 lt2 z P G H') : term739 _146290 _146293 z _113758 P _113759 _113760.
Proof. exact (proj2 (@lem8361093 _146290 _146293 _113758 _113759 _113760 lt2 z P G H' h1)). Qed.
Lemma lem8361392 {_146290 _146293 : Type'} (_113776 : _146293) (lt2 : type1402 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (f : _146293 -> _146290) (H' : type796 _146290 _146293) (g : _146293 -> _146290) (x : _146293) (h1 : term646 _146290 _146293 lt2 P G f H' g x) : term621 _146290 _146293 lt2 x f g _113776.
Proof. exact (EQ_MP (@lem8360940 _146290 _146293 lt2 x f g _113776) (@lem8360939 _146290 _146293 _113776 lt2 P G f H' g x h1)). Qed.
Lemma lem8361394 {_146290 _146293 : Type'} (f : _146293 -> _146290) (P : type799 _146290 _146293) (g : _146293 -> _146290) (x : _146293) (h1 : term638 _146290 _146293 f P g x) : term595 _146290 _146293 P f x.
Proof. exact (proj1 (@lem8359672 _146290 _146293 f P g x h1)). Qed.
Lemma lem8361450 {_146290 _146293 : Type'} (_113769 : _146293 -> _146290) (_113770 : _146293 -> _146290) (_113771 : _146293) (lt2 : type1402 _146293) (z : type784 _146290 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (H' : type796 _146290 _146293) (h1 : term259 _146290 _146293 lt2 z P G H') : term740 _146290 _146293 lt2 z _113769 P _113770 _113771.
Proof. exact (proj1 (@lem8361108 _146290 _146293 _113769 _113770 _113771 lt2 z P G H' h1)). Qed.
Lemma lem8361460 {_146290 _146293 : Type'} (_113769 : _146293 -> _146290) (_113770 : _146293 -> _146290) (_113771 : _146293) (lt2 : type1402 _146293) (z : type784 _146290 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (H' : type796 _146290 _146293) (h1 : term259 _146290 _146293 lt2 z P G H') : term741 _146290 _146293 z _113769 P _113770 _113771.
Proof. exact (proj2 (@lem8361108 _146290 _146293 _113769 _113770 _113771 lt2 z P G H' h1)). Qed.
Lemma lem8361492 {_146290 _146293 : Type'} (_113787 : _146293) (lt2 : type1402 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (f : _146293 -> _146290) (H' : type796 _146290 _146293) (g : _146293 -> _146290) (x : _146293) (h1 : term646 _146290 _146293 lt2 P G f H' g x) : term621 _146290 _146293 lt2 x f g _113787.
Proof. exact (EQ_MP (@lem8360973 _146290 _146293 lt2 x f g _113787) (@lem8360972 _146290 _146293 _113787 lt2 P G f H' g x h1)). Qed.
Lemma lem8361494 {_146290 _146293 : Type'} (f : _146293 -> _146290) (G : type797 _146290 _146293) (g : _146293 -> _146290) (x : _146293) (h1 : term631 _146290 _146293 f G g x) : term631 _146290 _146293 f G g x.
Proof. exact (h1). Qed.
Lemma lem8361512 {_146290 _146293 : Type'} (_113780 : _146293 -> _146290) (_113781 : _146293 -> _146290) (_113782 : _146293) (lt2 : type1402 _146293) (z : type784 _146290 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (H' : type796 _146290 _146293) (h1 : term259 _146290 _146293 lt2 z P G H') : term742 _146290 _146293 lt2 z _113780 G _113781 _113782.
Proof. exact (proj1 (@lem8361116 _146290 _146293 _113780 _113781 _113782 lt2 z P G H' h1)). Qed.
Lemma lem8361518 {_146290 _146293 : Type'} (_113780 : _146293 -> _146290) (_113781 : _146293 -> _146290) (_113782 : _146293) (lt2 : type1402 _146293) (z : type784 _146290 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (H' : type796 _146290 _146293) (h1 : term259 _146290 _146293 lt2 z P G H') : term743 _146290 _146293 z _113780 G _113781 _113782.
Proof. exact (proj2 (@lem8361116 _146290 _146293 _113780 _113781 _113782 lt2 z P G H' h1)). Qed.
Lemma lem8361590 {_146290 _146293 : Type'} (_113798 : _146293) (lt2 : type1402 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (f : _146293 -> _146290) (H' : type796 _146290 _146293) (g : _146293 -> _146290) (x : _146293) (h1 : term646 _146290 _146293 lt2 P G f H' g x) : term621 _146290 _146293 lt2 x f g _113798.
Proof. exact (EQ_MP (@lem8361006 _146290 _146293 lt2 x f g _113798) (@lem8361005 _146290 _146293 _113798 lt2 P G f H' g x h1)). Qed.
Lemma lem8361592 {_146290 _146293 : Type'} (f : _146293 -> _146290) (H' : type796 _146290 _146293) (g : _146293 -> _146290) (x : _146293) (h1 : term617 _146290 _146293 f H' g x) : term617 _146290 _146293 f H' g x.
Proof. exact (h1). Qed.
Lemma lem8361598 {_146290 _146293 : Type'} (_113791 : _146293 -> _146290) (_113792 : _146293 -> _146290) (_113793 : _146293) (lt2 : type1402 _146293) (z : type784 _146290 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (H' : type796 _146290 _146293) (h1 : term259 _146290 _146293 lt2 z P G H') : term744 _146290 _146293 lt2 z _113791 H' _113792 _113793.
Proof. exact (proj1 (@lem8361129 _146290 _146293 _113791 _113792 _113793 lt2 z P G H' h1)). Qed.
Lemma lem8361604 {_146290 _146293 : Type'} (_113791 : _146293 -> _146290) (_113792 : _146293 -> _146290) (_113793 : _146293) (lt2 : type1402 _146293) (z : type784 _146290 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (H' : type796 _146290 _146293) (h1 : term259 _146290 _146293 lt2 z P G H') : term745 _146290 _146293 z _113791 H' _113792 _113793.
Proof. exact (proj2 (@lem8361129 _146290 _146293 _113791 _113792 _113793 lt2 z P G H' h1)). Qed.
Lemma lem8361688 {_146290 _146293 : Type'} (_113809 : _146293) (lt2 : type1402 _146293) (f : _146293 -> _146290) (H' : type796 _146290 _146293) (g : _146293 -> _146290) (x : _146293) (h1 : term625 _146290 _146293 lt2 f H' g x) : term621 _146290 _146293 lt2 x f g _113809.
Proof. exact (EQ_MP (@lem8361039 _146290 _146293 lt2 x f g _113809) (@lem8361038 _146290 _146293 _113809 lt2 f H' g x h1)). Qed.
Lemma lem8361690 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (f : _146293 -> _146290) (H' : type796 _146290 _146293) (g : _146293 -> _146290) (x : _146293) (h1 : term625 _146290 _146293 lt2 f H' g x) : term617 _146290 _146293 f H' g x.
Proof. exact (proj2 (@lem8359679 _146290 _146293 lt2 f H' g x h1)). Qed.
Lemma lem8361696 {_146290 _146293 : Type'} (_113802 : _146293 -> _146290) (_113803 : _146293 -> _146290) (_113804 : _146293) (lt2 : type1402 _146293) (z : type784 _146290 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (H' : type796 _146290 _146293) (h1 : term259 _146290 _146293 lt2 z P G H') : term744 _146290 _146293 lt2 z _113802 H' _113803 _113804.
Proof. exact (proj1 (@lem8361143 _146290 _146293 _113802 _113803 _113804 lt2 z P G H' h1)). Qed.
Lemma lem8361702 {_146290 _146293 : Type'} (_113802 : _146293 -> _146290) (_113803 : _146293 -> _146290) (_113804 : _146293) (lt2 : type1402 _146293) (z : type784 _146290 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (H' : type796 _146290 _146293) (h1 : term259 _146290 _146293 lt2 z P G H') : term745 _146290 _146293 z _113802 H' _113803 _113804.
Proof. exact (proj2 (@lem8361143 _146290 _146293 _113802 _113803 _113804 lt2 z P G H' h1)). Qed.
Lemma lem8361767 {_146290 _146293 : Type'} (P : type799 _146290 _146293) (G : type797 _146290 _146293) (_113810 : _146293 -> _146290) (lt2 : type1402 _146293) (_113812 : _146293) (_113811 : _146293) : (term600 _146290 _146293 P G _113810 lt2 _113812 _113811) = (term746 _146290 _146293 P G _113810 lt2 _113812 _113811).
Proof. exact (@lem8356528 (term595 _146290 _146293 P _113810 _113811) (term592 _146290 _146293 lt2 _113812 G _113810 _113811) (term586 _146293 lt2 _113812 _113811)). Qed.
Lemma lem8361768 {_146290 _146293 : Type'} (_113810 : _146293 -> _146290) (_113812 : _146293) (_113811 : _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (lt2 : type1402 _146293) (h1 : term23 _146290 _146293 P G lt2) : term746 _146290 _146293 P G _113810 lt2 _113812 _113811.
Proof. exact (EQ_MP (@lem8361767 _146290 _146293 P G _113810 lt2 _113812 _113811) (@lem8361049 _146290 _146293 _113810 _113812 _113811 P G lt2 h1)). Qed.
Lemma lem8361782 {_146290 _146293 : Type'} (P : type799 _146290 _146293) (G : type797 _146290 _146293) (f : _146293 -> _146290) (lt2 : type1402 _146293) (y : _146293) (x : _146293) (h1 : term614 _146290 _146293 P G f lt2 y x) : term608 _146293 lt2 y x.
Proof. exact (proj2 (@lem8359680 _146290 _146293 P G f lt2 y x h1)). Qed.
Lemma lem8362017 {_146293 : Type'} (lt2 : type1402 _146293) (h1 : @WF _146293 lt2) : @I ((_146293 -> _146293 -> Prop) -> Prop) (@WF _146293) lt2.
Proof. exact (EQ_MP (@lem8358750 _146293 lt2) (@lem8357315 _146293 lt2 h1)). Qed.
Lemma lem8362018 {_146293 : Type'} (lt2 : type1402 _146293) (h1 : @WF _146293 lt2) : term747 _146293 lt2.
Proof. exact (fun h0 : term649 _146293 lt2 => @lem8362017 _146293 lt2 h1). Qed.
Lemma lem8362020 (p : Prop) : (term748 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8362021 {_146293 : Type'} (lt2 : type1402 _146293) : (term747 _146293 lt2) = (@I ((_146293 -> _146293 -> Prop) -> Prop) (@WF _146293) lt2).
Proof. exact (@lem8362020 (@I ((_146293 -> _146293 -> Prop) -> Prop) (@WF _146293) lt2)). Qed.
Lemma lem8362022 {_146293 : Type'} (lt2 : type1402 _146293) (h1 : @WF _146293 lt2) : @I ((_146293 -> _146293 -> Prop) -> Prop) (@WF _146293) lt2.
Proof. exact (EQ_MP (@lem8362021 _146293 lt2) (@lem8362018 _146293 lt2 h1)). Qed.
Lemma lem8362025 (p : Prop) : (~ p) = (p -> False).
Proof. exact (EQ_MP (@lem21021 p) (@lem0)). Qed.
Lemma lem8362027 {_146293 : Type'} (lt2 : type1402 _146293) : (term649 _146293 lt2) = (term749 _146293 lt2).
Proof. exact (@lem8362025 (@I ((_146293 -> _146293 -> Prop) -> Prop) (@WF _146293) lt2)). Qed.
Lemma lem8362030 {_146293 : Type'} (lt2 : type1402 _146293) (h1 : term649 _146293 lt2) : term749 _146293 lt2.
Proof. exact (EQ_MP (@lem8362027 _146293 lt2) (@lem8361196 _146293 lt2 h1)). Qed.
Lemma lem8362033 {_146293 : Type'} (lt2 : type1402 _146293) (h1 : @WF _146293 lt2) (h2 : term649 _146293 lt2) : False.
Proof. exact (@lem8362030 _146293 lt2 h2 (@lem8362022 _146293 lt2 h1)). Qed.
Lemma lem8362034 {_146293 : Type'} (lt2 : type1402 _146293) (h1 : @WF _146293 lt2) (h2 : term649 _146293 lt2) : term750.
Proof. exact (fun h0 : ~ False => @lem8362033 _146293 lt2 h1 h2). Qed.
Lemma lem8362036 (p : Prop) : (term748 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8362037 : term750 = False.
Proof. exact (@lem8362036 False). Qed.
Lemma lem8362038 {_146293 : Type'} (lt2 : type1402 _146293) (h1 : @WF _146293 lt2) (h2 : term649 _146293 lt2) : False.
Proof. exact (EQ_MP (@lem8362037) (@lem8362034 _146293 lt2 h1 h2)). Qed.
Lemma lem8362205 {_146290 _146293 : Type'} (f : _146293 -> _146290) (P : type799 _146290 _146293) (g : _146293 -> _146290) (x : _146293) (h1 : term640 _146290 _146293 f P g x) : term593 _146290 _146293 P f x.
Proof. exact (proj1 (@lem8359671 _146290 _146293 f P g x h1)). Qed.
Lemma lem8362206 {_146290 _146293 : Type'} (f : _146293 -> _146290) (P : type799 _146290 _146293) (g : _146293 -> _146290) (x : _146293) (h1 : term640 _146290 _146293 f P g x) : term751 _146290 _146293 P f x.
Proof. exact (fun h0 : term595 _146290 _146293 P f x => @lem8362205 _146290 _146293 f P g x h1). Qed.
Lemma lem8362208 (p : Prop) : (term748 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8362209 {_146290 _146293 : Type'} (P : type799 _146290 _146293) (f : _146293 -> _146290) (x : _146293) : (term751 _146290 _146293 P f x) = (term593 _146290 _146293 P f x).
Proof. exact (@lem8362208 (term593 _146290 _146293 P f x)). Qed.
Lemma lem8362210 {_146290 _146293 : Type'} (f : _146293 -> _146290) (P : type799 _146290 _146293) (g : _146293 -> _146290) (x : _146293) (h1 : term640 _146290 _146293 f P g x) : term593 _146290 _146293 P f x.
Proof. exact (EQ_MP (@lem8362209 _146290 _146293 P f x) (@lem8362206 _146290 _146293 f P g x h1)). Qed.
Lemma lem8362213 {_146290 _146293 : Type'} (P : type799 _146290 _146293) (g : _146293 -> _146290) (x : _146293) (h1 : term595 _146290 _146293 P g x) : term595 _146290 _146293 P g x.
Proof. exact (h1). Qed.
Lemma lem8362214 {_146290 _146293 : Type'} (P : type799 _146290 _146293) (g : _146293 -> _146290) (x : _146293) (h1 : term595 _146290 _146293 P g x) : term752 _146290 _146293 P g x.
Proof. exact (fun h0 : term593 _146290 _146293 P g x => @lem8362213 _146290 _146293 P g x h1). Qed.
Lemma lem8362216 (p : Prop) : (term753 p) = (~ p).
Proof. exact (EQ_MP (@lem21028 p) (@lem21107 p)). Qed.
Lemma lem8362217 {_146290 _146293 : Type'} (P : type799 _146290 _146293) (g : _146293 -> _146290) (x : _146293) : (term752 _146290 _146293 P g x) = (term595 _146290 _146293 P g x).
Proof. exact (@lem8362216 (term593 _146290 _146293 P g x)). Qed.
Lemma lem8362218 {_146290 _146293 : Type'} (P : type799 _146290 _146293) (g : _146293 -> _146290) (x : _146293) (h1 : term595 _146290 _146293 P g x) : term595 _146290 _146293 P g x.
Proof. exact (EQ_MP (@lem8362217 _146290 _146293 P g x) (@lem8362214 _146290 _146293 P g x h1)). Qed.
Lemma lem8362220 (b : Prop) (a : Prop) : (a \/ b) = (term754 b a).
Proof. exact (EQ_MP (@lem20682 b a) (@lem20764 b a)). Qed.
Lemma lem8362221 {_146290 _146293 : Type'} (P : type799 _146290 _146293) (lt2 : type1402 _146293) (z : type784 _146290 _146293) (_113758 : _146293 -> _146290) (_113759 : _146293 -> _146290) (_113760 : _146293) : (term738 _146290 _146293 lt2 z _113758 P _113759 _113760) = (term755 _146290 _146293 P lt2 z _113758 _113759 _113760).
Proof. exact (@lem8362220 (term656 _146290 _146293 _113758 P _113759 _113760) (term685 _146290 _146293 lt2 z _113758 _113759 _113760)). Qed.
Lemma lem8362223 (a : Prop) (b : Prop) : (term756 a b) = (term757 a b).
Proof. exact (EQ_MP (@lem20789 a b) (@lem20895 a b)). Qed.
Lemma lem8362224 {_146290 _146293 : Type'} (_113758 : _146293 -> _146290) (P : type799 _146290 _146293) (_113759 : _146293 -> _146290) (_113760 : _146293) : (term758 _146290 _146293 _113758 P _113759 _113760) = (term759 _146290 _146293 _113758 P _113759 _113760).
Proof. exact (@lem8362223 (term595 _146290 _146293 P _113758 _113760) (term593 _146290 _146293 P _113759 _113760)). Qed.
Lemma lem8362226 (a : Prop) : (term47 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem8362227 {_146290 _146293 : Type'} (P : type799 _146290 _146293) (_113758 : _146293 -> _146290) (_113760 : _146293) : (term760 _146290 _146293 P _113758 _113760) = (term593 _146290 _146293 P _113758 _113760).
Proof. exact (@lem8362226 (term593 _146290 _146293 P _113758 _113760)). Qed.
Lemma lem8362228 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8362229 {_146290 _146293 : Type'} (P : type799 _146290 _146293) (_113758 : _146293 -> _146290) (_113760 : _146293) : (term761 _146290 _146293 P _113758 _113760) = (term610 _146290 _146293 P _113758 _113760).
Proof. exact (MK_COMB (@lem8362228) (@lem8362227 _146290 _146293 P _113758 _113760)). Qed.
Lemma lem8362230 {_146290 _146293 : Type'} (P : type799 _146290 _146293) (_113759 : _146293 -> _146290) (_113760 : _146293) : (term595 _146290 _146293 P _113759 _113760) = (term595 _146290 _146293 P _113759 _113760).
Proof. exact (eq_refl (term595 _146290 _146293 P _113759 _113760)). Qed.
Lemma lem8362231 {_146290 _146293 : Type'} (_113758 : _146293 -> _146290) (P : type799 _146290 _146293) (_113759 : _146293 -> _146290) (_113760 : _146293) : (term759 _146290 _146293 _113758 P _113759 _113760) = (term640 _146290 _146293 _113758 P _113759 _113760).
Proof. exact (MK_COMB (@lem8362229 _146290 _146293 P _113758 _113760) (@lem8362230 _146290 _146293 P _113759 _113760)). Qed.
Lemma lem8362232 {_146290 _146293 : Type'} (_113758 : _146293 -> _146290) (P : type799 _146290 _146293) (_113759 : _146293 -> _146290) (_113760 : _146293) : (term758 _146290 _146293 _113758 P _113759 _113760) = (term640 _146290 _146293 _113758 P _113759 _113760).
Proof. exact (TRANS (@lem8362224 _146290 _146293 _113758 P _113759 _113760) (@lem8362231 _146290 _146293 _113758 P _113759 _113760)). Qed.
Lemma lem8362233 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem8362234 {_146290 _146293 : Type'} (_113758 : _146293 -> _146290) (P : type799 _146290 _146293) (_113759 : _146293 -> _146290) (_113760 : _146293) : (term762 _146290 _146293 _113758 P _113759 _113760) = (term763 _146290 _146293 _113758 P _113759 _113760).
Proof. exact (MK_COMB (@lem8362233) (@lem8362232 _146290 _146293 _113758 P _113759 _113760)). Qed.
Lemma lem8362235 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (z : type784 _146290 _146293) (_113758 : _146293 -> _146290) (_113759 : _146293 -> _146290) (_113760 : _146293) : (term685 _146290 _146293 lt2 z _113758 _113759 _113760) = (term685 _146290 _146293 lt2 z _113758 _113759 _113760).
Proof. exact (eq_refl (term685 _146290 _146293 lt2 z _113758 _113759 _113760)). Qed.
Lemma lem8362236 {_146290 _146293 : Type'} (P : type799 _146290 _146293) (lt2 : type1402 _146293) (z : type784 _146290 _146293) (_113758 : _146293 -> _146290) (_113759 : _146293 -> _146290) (_113760 : _146293) : (term755 _146290 _146293 P lt2 z _113758 _113759 _113760) = (term764 _146290 _146293 P lt2 z _113758 _113759 _113760).
Proof. exact (MK_COMB (@lem8362234 _146290 _146293 _113758 P _113759 _113760) (@lem8362235 _146290 _146293 lt2 z _113758 _113759 _113760)). Qed.
Lemma lem8362237 {_146290 _146293 : Type'} (P : type799 _146290 _146293) (lt2 : type1402 _146293) (z : type784 _146290 _146293) (_113758 : _146293 -> _146290) (_113759 : _146293 -> _146290) (_113760 : _146293) : (term738 _146290 _146293 lt2 z _113758 P _113759 _113760) = (term764 _146290 _146293 P lt2 z _113758 _113759 _113760).
Proof. exact (TRANS (@lem8362221 _146290 _146293 P lt2 z _113758 _113759 _113760) (@lem8362236 _146290 _146293 P lt2 z _113758 _113759 _113760)). Qed.
Lemma lem8362239 {_146290 _146293 : Type'} (f : _146293 -> _146290) (P : type799 _146290 _146293) (g : _146293 -> _146290) (x : _146293) (h1 : term595 _146290 _146293 P g x) (h2 : term640 _146290 _146293 f P g x) : term640 _146290 _146293 f P g x.
Proof. exact (conj (@lem8362210 _146290 _146293 f P g x h2) (@lem8362218 _146290 _146293 P g x h1)). Qed.
Lemma lem8362241 {_146290 _146293 : Type'} (_113758 : _146293 -> _146290) (_113759 : _146293 -> _146290) (_113760 : _146293) (lt2 : type1402 _146293) (z : type784 _146290 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (H' : type796 _146290 _146293) (h1 : term259 _146290 _146293 lt2 z P G H') : term764 _146290 _146293 P lt2 z _113758 _113759 _113760.
Proof. exact (EQ_MP (@lem8362237 _146290 _146293 P lt2 z _113758 _113759 _113760) (@lem8361330 _146290 _146293 _113758 _113759 _113760 lt2 z P G H' h1)). Qed.
Lemma lem8362242 {_146290 _146293 : Type'} (_113758 : _146293 -> _146290) (_113759 : _146293 -> _146290) (_113760 : _146293) (lt2 : type1402 _146293) (z : type784 _146290 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (H' : type796 _146290 _146293) (h1 : term259 _146290 _146293 lt2 z P G H') : term764 _146290 _146293 P lt2 z _113758 _113759 _113760.
Proof. exact (@lem8362241 _146290 _146293 _113758 _113759 _113760 lt2 z P G H' h1). Qed.
Lemma lem8362243 {_146290 _146293 : Type'} (f : _146293 -> _146290) (g : _146293 -> _146290) (x : _146293) (lt2 : type1402 _146293) (z : type784 _146290 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (H' : type796 _146290 _146293) (h1 : term259 _146290 _146293 lt2 z P G H') : term764 _146290 _146293 P lt2 z f g x.
Proof. exact (@lem8362242 _146290 _146293 f g x lt2 z P G H' h1). Qed.
Lemma lem8362246 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (z : type784 _146290 _146293) (G : type797 _146290 _146293) (H' : type796 _146290 _146293) (f : _146293 -> _146290) (P : type799 _146290 _146293) (g : _146293 -> _146290) (x : _146293) (h1 : term259 _146290 _146293 lt2 z P G H') (h2 : term595 _146290 _146293 P g x) (h3 : term640 _146290 _146293 f P g x) : term685 _146290 _146293 lt2 z f g x.
Proof. exact (@lem8362243 _146290 _146293 f g x lt2 z P G H' h1 (@lem8362239 _146290 _146293 f P g x h2 h3)). Qed.
Lemma lem8362247 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (z : type784 _146290 _146293) (G : type797 _146290 _146293) (H' : type796 _146290 _146293) (f : _146293 -> _146290) (P : type799 _146290 _146293) (g : _146293 -> _146290) (x : _146293) (h1 : term259 _146290 _146293 lt2 z P G H') (h2 : term595 _146290 _146293 P g x) (h3 : term640 _146290 _146293 f P g x) : term765 _146290 _146293 lt2 z f g x.
Proof. exact (fun h0 : term766 _146290 _146293 lt2 z f g x => @lem8362246 _146290 _146293 lt2 z G H' f P g x h1 h2 h3). Qed.
Lemma lem8362249 (p : Prop) : (term748 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8362250 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (z : type784 _146290 _146293) (f : _146293 -> _146290) (g : _146293 -> _146290) (x : _146293) : (term765 _146290 _146293 lt2 z f g x) = (term685 _146290 _146293 lt2 z f g x).
Proof. exact (@lem8362249 (term685 _146290 _146293 lt2 z f g x)). Qed.
Lemma lem8362251 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (z : type784 _146290 _146293) (G : type797 _146290 _146293) (H' : type796 _146290 _146293) (f : _146293 -> _146290) (P : type799 _146290 _146293) (g : _146293 -> _146290) (x : _146293) (h1 : term259 _146290 _146293 lt2 z P G H') (h2 : term595 _146290 _146293 P g x) (h3 : term640 _146290 _146293 f P g x) : term685 _146290 _146293 lt2 z f g x.
Proof. exact (EQ_MP (@lem8362250 _146290 _146293 lt2 z f g x) (@lem8362247 _146290 _146293 lt2 z G H' f P g x h1 h2 h3)). Qed.
Lemma lem8362257 (q : Prop) (p : Prop) : (p \/ q) = (q \/ p).
Proof. exact (proj1 (@lem827 (@el Prop) p q)). Qed.
Lemma lem8362258 {_146290 _146293 : Type'} (f : _146293 -> _146290) (g : _146293 -> _146290) (lt2 : type1402 _146293) (_113765 : _146293) (x : _146293) : (term621 _146290 _146293 lt2 x f g _113765) = (term767 _146290 _146293 f g lt2 _113765 x).
Proof. exact (@lem8362257 ((@I (_146293 -> _146290) f _113765) = (@I (_146293 -> _146290) g _113765)) (term608 _146293 lt2 _113765 x)). Qed.
Lemma lem8362266 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8362267 {_146290 _146293 : Type'} (f : _146293 -> _146290) (g : _146293 -> _146290) (lt2 : type1402 _146293) (_113765 : _146293) (x : _146293) : (term768 _146290 _146293 lt2 x f g _113765) = (term769 _146290 _146293 f g lt2 _113765 x).
Proof. exact (MK_COMB (@lem8362266) (@lem8362258 _146290 _146293 f g lt2 _113765 x)). Qed.
Lemma lem8362275 {_146290 _146293 : Type'} (f : _146293 -> _146290) (g : _146293 -> _146290) (lt2 : type1402 _146293) (_113765 : _146293) (x : _146293) : (term767 _146290 _146293 f g lt2 _113765 x) = (term767 _146290 _146293 f g lt2 _113765 x).
Proof. exact (eq_refl (term767 _146290 _146293 f g lt2 _113765 x)). Qed.
Lemma lem8362276 {_146290 _146293 : Type'} (f : _146293 -> _146290) (g : _146293 -> _146290) (lt2 : type1402 _146293) (_113765 : _146293) (x : _146293) : ((term621 _146290 _146293 lt2 x f g _113765) = (term767 _146290 _146293 f g lt2 _113765 x)) = ((term767 _146290 _146293 f g lt2 _113765 x) = (term767 _146290 _146293 f g lt2 _113765 x)).
Proof. exact (MK_COMB (@lem8362267 _146290 _146293 f g lt2 _113765 x) (@lem8362275 _146290 _146293 f g lt2 _113765 x)). Qed.
Lemma lem8362278 {A : Type'} (x : A) : (x = x) = True.
Proof. exact (EQ_MP (@lem20665 A x) (@lem20664 A x)). Qed.
Lemma lem8362279 (x : Prop) : (x = x) = True.
Proof. exact (@lem8362278 Prop x). Qed.
Lemma lem8362280 {_146290 _146293 : Type'} (f : _146293 -> _146290) (g : _146293 -> _146290) (lt2 : type1402 _146293) (_113765 : _146293) (x : _146293) : ((term767 _146290 _146293 f g lt2 _113765 x) = (term767 _146290 _146293 f g lt2 _113765 x)) = True.
Proof. exact (@lem8362279 (term767 _146290 _146293 f g lt2 _113765 x)). Qed.
Lemma lem8362281 {_146290 _146293 : Type'} (f : _146293 -> _146290) (g : _146293 -> _146290) (lt2 : type1402 _146293) (_113765 : _146293) (x : _146293) : ((term621 _146290 _146293 lt2 x f g _113765) = (term767 _146290 _146293 f g lt2 _113765 x)) = True.
Proof. exact (TRANS (@lem8362276 _146290 _146293 f g lt2 _113765 x) (@lem8362280 _146290 _146293 f g lt2 _113765 x)). Qed.
Lemma lem8362282 {_146290 _146293 : Type'} (f : _146293 -> _146290) (g : _146293 -> _146290) (lt2 : type1402 _146293) (_113765 : _146293) (x : _146293) : True = ((term621 _146290 _146293 lt2 x f g _113765) = (term767 _146290 _146293 f g lt2 _113765 x)).
Proof. exact (SYM (@lem8362281 _146290 _146293 f g lt2 _113765 x)). Qed.
Lemma lem8362283 {_146290 _146293 : Type'} (f : _146293 -> _146290) (g : _146293 -> _146290) (lt2 : type1402 _146293) (_113765 : _146293) (x : _146293) : (term621 _146290 _146293 lt2 x f g _113765) = (term767 _146290 _146293 f g lt2 _113765 x).
Proof. exact (EQ_MP (@lem8362282 _146290 _146293 f g lt2 _113765 x) (@lem0)). Qed.
Lemma lem8362284 {_146290 _146293 : Type'} (_113765 : _146293) (lt2 : type1402 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (f : _146293 -> _146290) (H' : type796 _146290 _146293) (g : _146293 -> _146290) (x : _146293) (h1 : term646 _146290 _146293 lt2 P G f H' g x) : term767 _146290 _146293 f g lt2 _113765 x.
Proof. exact (EQ_MP (@lem8362283 _146290 _146293 f g lt2 _113765 x) (@lem8361292 _146290 _146293 _113765 lt2 P G f H' g x h1)). Qed.
Lemma lem8362286 (b : Prop) (a : Prop) : (a \/ b) = (term754 b a).
Proof. exact (EQ_MP (@lem20682 b a) (@lem20764 b a)). Qed.
Lemma lem8362287 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (x : _146293) (f : _146293 -> _146290) (g : _146293 -> _146290) (_113765 : _146293) : (term767 _146290 _146293 f g lt2 _113765 x) = (term770 _146290 _146293 lt2 x f g _113765).
Proof. exact (@lem8362286 (term608 _146293 lt2 _113765 x) ((@I (_146293 -> _146290) f _113765) = (@I (_146293 -> _146290) g _113765))). Qed.
Lemma lem8362289 (a : Prop) : (term47 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem8362290 {_146293 : Type'} (lt2 : type1402 _146293) (_113765 : _146293) (x : _146293) : (term771 _146293 lt2 _113765 x) = (term586 _146293 lt2 _113765 x).
Proof. exact (@lem8362289 (term586 _146293 lt2 _113765 x)). Qed.
Lemma lem8362291 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem8362292 {_146293 : Type'} (lt2 : type1402 _146293) (_113765 : _146293) (x : _146293) : (term772 _146293 lt2 _113765 x) = (term773 _146293 lt2 _113765 x).
Proof. exact (MK_COMB (@lem8362291) (@lem8362290 _146293 lt2 _113765 x)). Qed.
Lemma lem8362293 {_146290 _146293 : Type'} (f : _146293 -> _146290) (g : _146293 -> _146290) (_113765 : _146293) : ((@I (_146293 -> _146290) f _113765) = (@I (_146293 -> _146290) g _113765)) = ((@I (_146293 -> _146290) f _113765) = (@I (_146293 -> _146290) g _113765)).
Proof. exact (eq_refl ((@I (_146293 -> _146290) f _113765) = (@I (_146293 -> _146290) g _113765))). Qed.
Lemma lem8362294 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (x : _146293) (f : _146293 -> _146290) (g : _146293 -> _146290) (_113765 : _146293) : (term770 _146290 _146293 lt2 x f g _113765) = (term774 _146290 _146293 lt2 x f g _113765).
Proof. exact (MK_COMB (@lem8362292 _146293 lt2 _113765 x) (@lem8362293 _146290 _146293 f g _113765)). Qed.
Lemma lem8362295 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (x : _146293) (f : _146293 -> _146290) (g : _146293 -> _146290) (_113765 : _146293) : (term767 _146290 _146293 f g lt2 _113765 x) = (term774 _146290 _146293 lt2 x f g _113765).
Proof. exact (TRANS (@lem8362287 _146290 _146293 lt2 x f g _113765) (@lem8362294 _146290 _146293 lt2 x f g _113765)). Qed.
Lemma lem8362298 {_146290 _146293 : Type'} (_113765 : _146293) (lt2 : type1402 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (f : _146293 -> _146290) (H' : type796 _146290 _146293) (g : _146293 -> _146290) (x : _146293) (h1 : term646 _146290 _146293 lt2 P G f H' g x) : term774 _146290 _146293 lt2 x f g _113765.
Proof. exact (EQ_MP (@lem8362295 _146290 _146293 lt2 x f g _113765) (@lem8362284 _146290 _146293 _113765 lt2 P G f H' g x h1)). Qed.
Lemma lem8362299 {_146290 _146293 : Type'} (_113765 : _146293) (lt2 : type1402 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (f : _146293 -> _146290) (H' : type796 _146290 _146293) (g : _146293 -> _146290) (x : _146293) (h1 : term646 _146290 _146293 lt2 P G f H' g x) : term774 _146290 _146293 lt2 x f g _113765.
Proof. exact (@lem8362298 _146290 _146293 _113765 lt2 P G f H' g x h1). Qed.
Lemma lem8362300 {_146290 _146293 : Type'} (z : type784 _146290 _146293) (lt2 : type1402 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (f : _146293 -> _146290) (H' : type796 _146290 _146293) (g : _146293 -> _146290) (x : _146293) (h1 : term646 _146290 _146293 lt2 P G f H' g x) : term775 _146290 _146293 lt2 z f g x.
Proof. exact (@lem8362299 _146290 _146293 (term668 _146290 _146293 z f g x) lt2 P G f H' g x h1). Qed.
Lemma lem8362303 {_146290 _146293 : Type'} (z : type784 _146290 _146293) (lt2 : type1402 _146293) (G : type797 _146290 _146293) (H' : type796 _146290 _146293) (f : _146293 -> _146290) (P : type799 _146290 _146293) (g : _146293 -> _146290) (x : _146293) (h1 : term259 _146290 _146293 lt2 z P G H') (h2 : term595 _146290 _146293 P g x) (h3 : term646 _146290 _146293 lt2 P G f H' g x) (h4 : term640 _146290 _146293 f P g x) : (term671 _146290 _146293 z f g x) = (term674 _146290 _146293 z f g x).
Proof. exact (@lem8362300 _146290 _146293 z lt2 P G f H' g x h3 (@lem8362251 _146290 _146293 lt2 z G H' f P g x h1 h2 h4)). Qed.
Lemma lem8362304 {_146290 _146293 : Type'} (z : type784 _146290 _146293) (lt2 : type1402 _146293) (G : type797 _146290 _146293) (H' : type796 _146290 _146293) (f : _146293 -> _146290) (P : type799 _146290 _146293) (g : _146293 -> _146290) (x : _146293) (h1 : term259 _146290 _146293 lt2 z P G H') (h2 : term595 _146290 _146293 P g x) (h3 : term646 _146290 _146293 lt2 P G f H' g x) (h4 : term640 _146290 _146293 f P g x) : term776 _146290 _146293 z f g x.
Proof. exact (fun h0 : term678 _146290 _146293 z f g x => @lem8362303 _146290 _146293 z lt2 G H' f P g x h1 h2 h3 h4). Qed.
Lemma lem8362306 (p : Prop) : (term748 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8362307 {_146290 _146293 : Type'} (z : type784 _146290 _146293) (f : _146293 -> _146290) (g : _146293 -> _146290) (x : _146293) : (term776 _146290 _146293 z f g x) = ((term671 _146290 _146293 z f g x) = (term674 _146290 _146293 z f g x)).
Proof. exact (@lem8362306 ((term671 _146290 _146293 z f g x) = (term674 _146290 _146293 z f g x))). Qed.
Lemma lem8362308 {_146290 _146293 : Type'} (z : type784 _146290 _146293) (lt2 : type1402 _146293) (G : type797 _146290 _146293) (H' : type796 _146290 _146293) (f : _146293 -> _146290) (P : type799 _146290 _146293) (g : _146293 -> _146290) (x : _146293) (h1 : term259 _146290 _146293 lt2 z P G H') (h2 : term595 _146290 _146293 P g x) (h3 : term646 _146290 _146293 lt2 P G f H' g x) (h4 : term640 _146290 _146293 f P g x) : (term671 _146290 _146293 z f g x) = (term674 _146290 _146293 z f g x).
Proof. exact (EQ_MP (@lem8362307 _146290 _146293 z f g x) (@lem8362304 _146290 _146293 z lt2 G H' f P g x h1 h2 h3 h4)). Qed.
Lemma lem8362310 {_146290 _146293 : Type'} (f : _146293 -> _146290) (P : type799 _146290 _146293) (g : _146293 -> _146290) (x : _146293) (h1 : term640 _146290 _146293 f P g x) : term593 _146290 _146293 P f x.
Proof. exact (proj1 (@lem8359671 _146290 _146293 f P g x h1)). Qed.
Lemma lem8362311 {_146290 _146293 : Type'} (f : _146293 -> _146290) (P : type799 _146290 _146293) (g : _146293 -> _146290) (x : _146293) (h1 : term640 _146290 _146293 f P g x) : term751 _146290 _146293 P f x.
Proof. exact (fun h0 : term595 _146290 _146293 P f x => @lem8362310 _146290 _146293 f P g x h1). Qed.
Lemma lem8362313 (p : Prop) : (term748 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8362314 {_146290 _146293 : Type'} (P : type799 _146290 _146293) (f : _146293 -> _146290) (x : _146293) : (term751 _146290 _146293 P f x) = (term593 _146290 _146293 P f x).
Proof. exact (@lem8362313 (term593 _146290 _146293 P f x)). Qed.
Lemma lem8362315 {_146290 _146293 : Type'} (f : _146293 -> _146290) (P : type799 _146290 _146293) (g : _146293 -> _146290) (x : _146293) (h1 : term640 _146290 _146293 f P g x) : term593 _146290 _146293 P f x.
Proof. exact (EQ_MP (@lem8362314 _146290 _146293 P f x) (@lem8362311 _146290 _146293 f P g x h1)). Qed.
Lemma lem8362333 (q : Prop) (p : Prop) : (p \/ q) = (q \/ p).
Proof. exact (proj1 (@lem827 (@el Prop) p q)). Qed.
Lemma lem8362334 {_146290 _146293 : Type'} (_113759 : _146293 -> _146290) (P : type799 _146290 _146293) (_113758 : _146293 -> _146290) (_113760 : _146293) : (term656 _146290 _146293 _113758 P _113759 _113760) = (term660 _146290 _146293 _113759 P _113758 _113760).
Proof. exact (@lem8362333 (term593 _146290 _146293 P _113759 _113760) (term595 _146290 _146293 P _113758 _113760)). Qed.
Lemma lem8362340 {_146290 _146293 : Type'} (z : type784 _146290 _146293) (_113758 : _146293 -> _146290) (_113759 : _146293 -> _146290) (_113760 : _146293) : (term777 _146290 _146293 z _113758 _113759 _113760) = (term777 _146290 _146293 z _113758 _113759 _113760).
Proof. exact (eq_refl (term777 _146290 _146293 z _113758 _113759 _113760)). Qed.
Lemma lem8362341 {_146290 _146293 : Type'} (z : type784 _146290 _146293) (_113759 : _146293 -> _146290) (P : type799 _146290 _146293) (_113758 : _146293 -> _146290) (_113760 : _146293) : (term739 _146290 _146293 z _113758 P _113759 _113760) = (term778 _146290 _146293 z _113759 P _113758 _113760).
Proof. exact (MK_COMB (@lem8362340 _146290 _146293 z _113758 _113759 _113760) (@lem8362334 _146290 _146293 _113759 P _113758 _113760)). Qed.
Lemma lem8362345 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem8362346 {_146290 _146293 : Type'} (z : type784 _146290 _146293) (_113759 : _146293 -> _146290) (P : type799 _146290 _146293) (_113758 : _146293 -> _146290) (_113760 : _146293) : (term778 _146290 _146293 z _113759 P _113758 _113760) = (term779 _146290 _146293 z _113759 P _113758 _113760).
Proof. exact (@lem8362345 (term593 _146290 _146293 P _113759 _113760) (term678 _146290 _146293 z _113758 _113759 _113760) (term595 _146290 _146293 P _113758 _113760)). Qed.
Lemma lem8362364 {_146290 _146293 : Type'} (z : type784 _146290 _146293) (_113759 : _146293 -> _146290) (P : type799 _146290 _146293) (_113758 : _146293 -> _146290) (_113760 : _146293) : (term739 _146290 _146293 z _113758 P _113759 _113760) = (term779 _146290 _146293 z _113759 P _113758 _113760).
Proof. exact (TRANS (@lem8362341 _146290 _146293 z _113759 P _113758 _113760) (@lem8362346 _146290 _146293 z _113759 P _113758 _113760)). Qed.
Lemma lem8362365 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8362366 {_146290 _146293 : Type'} (z : type784 _146290 _146293) (_113759 : _146293 -> _146290) (P : type799 _146290 _146293) (_113758 : _146293 -> _146290) (_113760 : _146293) : (term780 _146290 _146293 z _113758 P _113759 _113760) = (term781 _146290 _146293 z _113759 P _113758 _113760).
Proof. exact (MK_COMB (@lem8362365) (@lem8362364 _146290 _146293 z _113759 P _113758 _113760)). Qed.
Lemma lem8362384 {_146290 _146293 : Type'} (z : type784 _146290 _146293) (_113759 : _146293 -> _146290) (P : type799 _146290 _146293) (_113758 : _146293 -> _146290) (_113760 : _146293) : (term779 _146290 _146293 z _113759 P _113758 _113760) = (term779 _146290 _146293 z _113759 P _113758 _113760).
Proof. exact (eq_refl (term779 _146290 _146293 z _113759 P _113758 _113760)). Qed.
Lemma lem8362385 {_146290 _146293 : Type'} (z : type784 _146290 _146293) (_113759 : _146293 -> _146290) (P : type799 _146290 _146293) (_113758 : _146293 -> _146290) (_113760 : _146293) : ((term739 _146290 _146293 z _113758 P _113759 _113760) = (term779 _146290 _146293 z _113759 P _113758 _113760)) = ((term779 _146290 _146293 z _113759 P _113758 _113760) = (term779 _146290 _146293 z _113759 P _113758 _113760)).
Proof. exact (MK_COMB (@lem8362366 _146290 _146293 z _113759 P _113758 _113760) (@lem8362384 _146290 _146293 z _113759 P _113758 _113760)). Qed.
Lemma lem8362387 {A : Type'} (x : A) : (x = x) = True.
Proof. exact (EQ_MP (@lem20665 A x) (@lem20664 A x)). Qed.
Lemma lem8362388 (x : Prop) : (x = x) = True.
Proof. exact (@lem8362387 Prop x). Qed.
Lemma lem8362389 {_146290 _146293 : Type'} (z : type784 _146290 _146293) (_113759 : _146293 -> _146290) (P : type799 _146290 _146293) (_113758 : _146293 -> _146290) (_113760 : _146293) : ((term779 _146290 _146293 z _113759 P _113758 _113760) = (term779 _146290 _146293 z _113759 P _113758 _113760)) = True.
Proof. exact (@lem8362388 (term779 _146290 _146293 z _113759 P _113758 _113760)). Qed.
Lemma lem8362390 {_146290 _146293 : Type'} (z : type784 _146290 _146293) (_113759 : _146293 -> _146290) (P : type799 _146290 _146293) (_113758 : _146293 -> _146290) (_113760 : _146293) : ((term739 _146290 _146293 z _113758 P _113759 _113760) = (term779 _146290 _146293 z _113759 P _113758 _113760)) = True.
Proof. exact (TRANS (@lem8362385 _146290 _146293 z _113759 P _113758 _113760) (@lem8362389 _146290 _146293 z _113759 P _113758 _113760)). Qed.
Lemma lem8362391 {_146290 _146293 : Type'} (z : type784 _146290 _146293) (_113759 : _146293 -> _146290) (P : type799 _146290 _146293) (_113758 : _146293 -> _146290) (_113760 : _146293) : True = ((term739 _146290 _146293 z _113758 P _113759 _113760) = (term779 _146290 _146293 z _113759 P _113758 _113760)).
Proof. exact (SYM (@lem8362390 _146290 _146293 z _113759 P _113758 _113760)). Qed.
Lemma lem8362392 {_146290 _146293 : Type'} (z : type784 _146290 _146293) (_113759 : _146293 -> _146290) (P : type799 _146290 _146293) (_113758 : _146293 -> _146290) (_113760 : _146293) : (term739 _146290 _146293 z _113758 P _113759 _113760) = (term779 _146290 _146293 z _113759 P _113758 _113760).
Proof. exact (EQ_MP (@lem8362391 _146290 _146293 z _113759 P _113758 _113760) (@lem0)). Qed.
Lemma lem8362393 {_146290 _146293 : Type'} (_113759 : _146293 -> _146290) (_113758 : _146293 -> _146290) (_113760 : _146293) (lt2 : type1402 _146293) (z : type784 _146290 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (H' : type796 _146290 _146293) (h1 : term259 _146290 _146293 lt2 z P G H') : term779 _146290 _146293 z _113759 P _113758 _113760.
Proof. exact (EQ_MP (@lem8362392 _146290 _146293 z _113759 P _113758 _113760) (@lem8361340 _146290 _146293 _113758 _113759 _113760 lt2 z P G H' h1)). Qed.
Lemma lem8362395 (b : Prop) (a : Prop) : (a \/ b) = (term754 b a).
Proof. exact (EQ_MP (@lem20682 b a) (@lem20764 b a)). Qed.
Lemma lem8362396 {_146290 _146293 : Type'} (z : type784 _146290 _146293) (_113758 : _146293 -> _146290) (P : type799 _146290 _146293) (_113759 : _146293 -> _146290) (_113760 : _146293) : (term779 _146290 _146293 z _113759 P _113758 _113760) = (term782 _146290 _146293 z _113758 P _113759 _113760).
Proof. exact (@lem8362395 (term783 _146290 _146293 z _113759 P _113758 _113760) (term593 _146290 _146293 P _113759 _113760)). Qed.
Lemma lem8362398 (a : Prop) (b : Prop) : (term756 a b) = (term757 a b).
Proof. exact (EQ_MP (@lem20789 a b) (@lem20895 a b)). Qed.
Lemma lem8362399 {_146290 _146293 : Type'} (z : type784 _146290 _146293) (_113759 : _146293 -> _146290) (P : type799 _146290 _146293) (_113758 : _146293 -> _146290) (_113760 : _146293) : (term784 _146290 _146293 z _113759 P _113758 _113760) = (term785 _146290 _146293 z _113759 P _113758 _113760).
Proof. exact (@lem8362398 (term678 _146290 _146293 z _113758 _113759 _113760) (term595 _146290 _146293 P _113758 _113760)). Qed.
Lemma lem8362401 (a : Prop) : (term47 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem8362402 {_146290 _146293 : Type'} (z : type784 _146290 _146293) (_113758 : _146293 -> _146290) (_113759 : _146293 -> _146290) (_113760 : _146293) : (term786 _146290 _146293 z _113758 _113759 _113760) = ((term671 _146290 _146293 z _113758 _113759 _113760) = (term674 _146290 _146293 z _113758 _113759 _113760)).
Proof. exact (@lem8362401 ((term671 _146290 _146293 z _113758 _113759 _113760) = (term674 _146290 _146293 z _113758 _113759 _113760))). Qed.
Lemma lem8362403 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8362404 {_146290 _146293 : Type'} (z : type784 _146290 _146293) (_113758 : _146293 -> _146290) (_113759 : _146293 -> _146290) (_113760 : _146293) : (term787 _146290 _146293 z _113758 _113759 _113760) = (term788 _146290 _146293 z _113758 _113759 _113760).
Proof. exact (MK_COMB (@lem8362403) (@lem8362402 _146290 _146293 z _113758 _113759 _113760)). Qed.
Lemma lem8362406 (a : Prop) : (term47 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem8362407 {_146290 _146293 : Type'} (P : type799 _146290 _146293) (_113758 : _146293 -> _146290) (_113760 : _146293) : (term760 _146290 _146293 P _113758 _113760) = (term593 _146290 _146293 P _113758 _113760).
Proof. exact (@lem8362406 (term593 _146290 _146293 P _113758 _113760)). Qed.
Lemma lem8362408 {_146290 _146293 : Type'} (z : type784 _146290 _146293) (_113759 : _146293 -> _146290) (P : type799 _146290 _146293) (_113758 : _146293 -> _146290) (_113760 : _146293) : (term785 _146290 _146293 z _113759 P _113758 _113760) = (term789 _146290 _146293 z _113759 P _113758 _113760).
Proof. exact (MK_COMB (@lem8362404 _146290 _146293 z _113758 _113759 _113760) (@lem8362407 _146290 _146293 P _113758 _113760)). Qed.
Lemma lem8362409 {_146290 _146293 : Type'} (z : type784 _146290 _146293) (_113759 : _146293 -> _146290) (P : type799 _146290 _146293) (_113758 : _146293 -> _146290) (_113760 : _146293) : (term784 _146290 _146293 z _113759 P _113758 _113760) = (term789 _146290 _146293 z _113759 P _113758 _113760).
Proof. exact (TRANS (@lem8362399 _146290 _146293 z _113759 P _113758 _113760) (@lem8362408 _146290 _146293 z _113759 P _113758 _113760)). Qed.
Lemma lem8362410 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem8362411 {_146290 _146293 : Type'} (z : type784 _146290 _146293) (_113759 : _146293 -> _146290) (P : type799 _146290 _146293) (_113758 : _146293 -> _146290) (_113760 : _146293) : (term790 _146290 _146293 z _113759 P _113758 _113760) = (term791 _146290 _146293 z _113759 P _113758 _113760).
Proof. exact (MK_COMB (@lem8362410) (@lem8362409 _146290 _146293 z _113759 P _113758 _113760)). Qed.
Lemma lem8362412 {_146290 _146293 : Type'} (P : type799 _146290 _146293) (_113759 : _146293 -> _146290) (_113760 : _146293) : (term593 _146290 _146293 P _113759 _113760) = (term593 _146290 _146293 P _113759 _113760).
Proof. exact (eq_refl (term593 _146290 _146293 P _113759 _113760)). Qed.
Lemma lem8362413 {_146290 _146293 : Type'} (z : type784 _146290 _146293) (_113758 : _146293 -> _146290) (P : type799 _146290 _146293) (_113759 : _146293 -> _146290) (_113760 : _146293) : (term782 _146290 _146293 z _113758 P _113759 _113760) = (term792 _146290 _146293 z _113758 P _113759 _113760).
Proof. exact (MK_COMB (@lem8362411 _146290 _146293 z _113759 P _113758 _113760) (@lem8362412 _146290 _146293 P _113759 _113760)). Qed.
Lemma lem8362414 {_146290 _146293 : Type'} (z : type784 _146290 _146293) (_113758 : _146293 -> _146290) (P : type799 _146290 _146293) (_113759 : _146293 -> _146290) (_113760 : _146293) : (term779 _146290 _146293 z _113759 P _113758 _113760) = (term792 _146290 _146293 z _113758 P _113759 _113760).
Proof. exact (TRANS (@lem8362396 _146290 _146293 z _113758 P _113759 _113760) (@lem8362413 _146290 _146293 z _113758 P _113759 _113760)). Qed.
Lemma lem8362416 {_146290 _146293 : Type'} (z : type784 _146290 _146293) (lt2 : type1402 _146293) (G : type797 _146290 _146293) (H' : type796 _146290 _146293) (f : _146293 -> _146290) (P : type799 _146290 _146293) (g : _146293 -> _146290) (x : _146293) (h1 : term259 _146290 _146293 lt2 z P G H') (h2 : term595 _146290 _146293 P g x) (h3 : term646 _146290 _146293 lt2 P G f H' g x) (h4 : term640 _146290 _146293 f P g x) : term789 _146290 _146293 z g P f x.
Proof. exact (conj (@lem8362308 _146290 _146293 z lt2 G H' f P g x h1 h2 h3 h4) (@lem8362315 _146290 _146293 f P g x h4)). Qed.
Lemma lem8362418 {_146290 _146293 : Type'} (_113758 : _146293 -> _146290) (_113759 : _146293 -> _146290) (_113760 : _146293) (lt2 : type1402 _146293) (z : type784 _146290 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (H' : type796 _146290 _146293) (h1 : term259 _146290 _146293 lt2 z P G H') : term792 _146290 _146293 z _113758 P _113759 _113760.
Proof. exact (EQ_MP (@lem8362414 _146290 _146293 z _113758 P _113759 _113760) (@lem8362393 _146290 _146293 _113759 _113758 _113760 lt2 z P G H' h1)). Qed.
Lemma lem8362419 {_146290 _146293 : Type'} (_113758 : _146293 -> _146290) (_113759 : _146293 -> _146290) (_113760 : _146293) (lt2 : type1402 _146293) (z : type784 _146290 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (H' : type796 _146290 _146293) (h1 : term259 _146290 _146293 lt2 z P G H') : term792 _146290 _146293 z _113758 P _113759 _113760.
Proof. exact (@lem8362418 _146290 _146293 _113758 _113759 _113760 lt2 z P G H' h1). Qed.
Lemma lem8362420 {_146290 _146293 : Type'} (f : _146293 -> _146290) (g : _146293 -> _146290) (x : _146293) (lt2 : type1402 _146293) (z : type784 _146290 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (H' : type796 _146290 _146293) (h1 : term259 _146290 _146293 lt2 z P G H') : term792 _146290 _146293 z f P g x.
Proof. exact (@lem8362419 _146290 _146293 f g x lt2 z P G H' h1). Qed.
Lemma lem8362423 {_146290 _146293 : Type'} (z : type784 _146290 _146293) (lt2 : type1402 _146293) (G : type797 _146290 _146293) (H' : type796 _146290 _146293) (f : _146293 -> _146290) (P : type799 _146290 _146293) (g : _146293 -> _146290) (x : _146293) (h1 : term259 _146290 _146293 lt2 z P G H') (h2 : term595 _146290 _146293 P g x) (h3 : term646 _146290 _146293 lt2 P G f H' g x) (h4 : term640 _146290 _146293 f P g x) : term593 _146290 _146293 P g x.
Proof. exact (@lem8362420 _146290 _146293 f g x lt2 z P G H' h1 (@lem8362416 _146290 _146293 z lt2 G H' f P g x h1 h2 h3 h4)). Qed.
Lemma lem8362424 {_146290 _146293 : Type'} (z : type784 _146290 _146293) (lt2 : type1402 _146293) (G : type797 _146290 _146293) (H' : type796 _146290 _146293) (f : _146293 -> _146290) (P : type799 _146290 _146293) (g : _146293 -> _146290) (x : _146293) (h1 : term259 _146290 _146293 lt2 z P G H') (h2 : term646 _146290 _146293 lt2 P G f H' g x) (h3 : term640 _146290 _146293 f P g x) : term751 _146290 _146293 P g x.
Proof. exact (fun h0 : term595 _146290 _146293 P g x => @lem8362423 _146290 _146293 z lt2 G H' f P g x h1 h0 h2 h3). Qed.
Lemma lem8362426 (p : Prop) : (term748 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8362427 {_146290 _146293 : Type'} (P : type799 _146290 _146293) (g : _146293 -> _146290) (x : _146293) : (term751 _146290 _146293 P g x) = (term593 _146290 _146293 P g x).
Proof. exact (@lem8362426 (term593 _146290 _146293 P g x)). Qed.
Lemma lem8362428 {_146290 _146293 : Type'} (z : type784 _146290 _146293) (lt2 : type1402 _146293) (G : type797 _146290 _146293) (H' : type796 _146290 _146293) (f : _146293 -> _146290) (P : type799 _146290 _146293) (g : _146293 -> _146290) (x : _146293) (h1 : term259 _146290 _146293 lt2 z P G H') (h2 : term646 _146290 _146293 lt2 P G f H' g x) (h3 : term640 _146290 _146293 f P g x) : term593 _146290 _146293 P g x.
Proof. exact (EQ_MP (@lem8362427 _146290 _146293 P g x) (@lem8362424 _146290 _146293 z lt2 G H' f P g x h1 h2 h3)). Qed.
Lemma lem8362431 (p : Prop) : (~ p) = (p -> False).
Proof. exact (EQ_MP (@lem21021 p) (@lem0)). Qed.
Lemma lem8362433 {_146290 _146293 : Type'} (P : type799 _146290 _146293) (g : _146293 -> _146290) (x : _146293) : (term595 _146290 _146293 P g x) = (term793 _146290 _146293 P g x).
Proof. exact (@lem8362431 (term593 _146290 _146293 P g x)). Qed.
Lemma lem8362436 {_146290 _146293 : Type'} (f : _146293 -> _146290) (P : type799 _146290 _146293) (g : _146293 -> _146290) (x : _146293) (h1 : term640 _146290 _146293 f P g x) : term793 _146290 _146293 P g x.
Proof. exact (EQ_MP (@lem8362433 _146290 _146293 P g x) (@lem8361296 _146290 _146293 f P g x h1)). Qed.
Lemma lem8362439 {_146290 _146293 : Type'} (z : type784 _146290 _146293) (lt2 : type1402 _146293) (G : type797 _146290 _146293) (H' : type796 _146290 _146293) (f : _146293 -> _146290) (P : type799 _146290 _146293) (g : _146293 -> _146290) (x : _146293) (h1 : term259 _146290 _146293 lt2 z P G H') (h2 : term646 _146290 _146293 lt2 P G f H' g x) (h3 : term640 _146290 _146293 f P g x) : False.
Proof. exact (@lem8362436 _146290 _146293 f P g x h3 (@lem8362428 _146290 _146293 z lt2 G H' f P g x h1 h2 h3)). Qed.
Lemma lem8362440 {_146290 _146293 : Type'} (z : type784 _146290 _146293) (lt2 : type1402 _146293) (G : type797 _146290 _146293) (H' : type796 _146290 _146293) (f : _146293 -> _146290) (P : type799 _146290 _146293) (g : _146293 -> _146290) (x : _146293) (h1 : term259 _146290 _146293 lt2 z P G H') (h2 : term646 _146290 _146293 lt2 P G f H' g x) (h3 : term640 _146290 _146293 f P g x) : term750.
Proof. exact (fun h0 : ~ False => @lem8362439 _146290 _146293 z lt2 G H' f P g x h1 h2 h3). Qed.
Lemma lem8362442 (p : Prop) : (term748 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8362443 : term750 = False.
Proof. exact (@lem8362442 False). Qed.
Lemma lem8362444 {_146290 _146293 : Type'} (z : type784 _146290 _146293) (lt2 : type1402 _146293) (G : type797 _146290 _146293) (H' : type796 _146290 _146293) (f : _146293 -> _146290) (P : type799 _146290 _146293) (g : _146293 -> _146290) (x : _146293) (h1 : term259 _146290 _146293 lt2 z P G H') (h2 : term646 _146290 _146293 lt2 P G f H' g x) (h3 : term640 _146290 _146293 f P g x) : False.
Proof. exact (EQ_MP (@lem8362443) (@lem8362440 _146290 _146293 z lt2 G H' f P g x h1 h2 h3)). Qed.
Lemma lem8362612 {_146290 _146293 : Type'} (P : type799 _146290 _146293) (f : _146293 -> _146290) (x : _146293) (h1 : term595 _146290 _146293 P f x) : term595 _146290 _146293 P f x.
Proof. exact (h1). Qed.
Lemma lem8362613 {_146290 _146293 : Type'} (P : type799 _146290 _146293) (f : _146293 -> _146290) (x : _146293) (h1 : term595 _146290 _146293 P f x) : term752 _146290 _146293 P f x.
Proof. exact (fun h0 : term593 _146290 _146293 P f x => @lem8362612 _146290 _146293 P f x h1). Qed.
Lemma lem8362615 (p : Prop) : (term753 p) = (~ p).
Proof. exact (EQ_MP (@lem21028 p) (@lem21107 p)). Qed.
Lemma lem8362616 {_146290 _146293 : Type'} (P : type799 _146290 _146293) (f : _146293 -> _146290) (x : _146293) : (term752 _146290 _146293 P f x) = (term595 _146290 _146293 P f x).
Proof. exact (@lem8362615 (term593 _146290 _146293 P f x)). Qed.
Lemma lem8362617 {_146290 _146293 : Type'} (P : type799 _146290 _146293) (f : _146293 -> _146290) (x : _146293) (h1 : term595 _146290 _146293 P f x) : term595 _146290 _146293 P f x.
Proof. exact (EQ_MP (@lem8362616 _146290 _146293 P f x) (@lem8362613 _146290 _146293 P f x h1)). Qed.
Lemma lem8362619 {_146290 _146293 : Type'} (f : _146293 -> _146290) (P : type799 _146290 _146293) (g : _146293 -> _146290) (x : _146293) (h1 : term638 _146290 _146293 f P g x) : term593 _146290 _146293 P g x.
Proof. exact (proj2 (@lem8359672 _146290 _146293 f P g x h1)). Qed.
Lemma lem8362620 {_146290 _146293 : Type'} (f : _146293 -> _146290) (P : type799 _146290 _146293) (g : _146293 -> _146290) (x : _146293) (h1 : term638 _146290 _146293 f P g x) : term751 _146290 _146293 P g x.
Proof. exact (fun h0 : term595 _146290 _146293 P g x => @lem8362619 _146290 _146293 f P g x h1). Qed.
Lemma lem8362622 (p : Prop) : (term748 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8362623 {_146290 _146293 : Type'} (P : type799 _146290 _146293) (g : _146293 -> _146290) (x : _146293) : (term751 _146290 _146293 P g x) = (term593 _146290 _146293 P g x).
Proof. exact (@lem8362622 (term593 _146290 _146293 P g x)). Qed.
Lemma lem8362624 {_146290 _146293 : Type'} (f : _146293 -> _146290) (P : type799 _146290 _146293) (g : _146293 -> _146290) (x : _146293) (h1 : term638 _146290 _146293 f P g x) : term593 _146290 _146293 P g x.
Proof. exact (EQ_MP (@lem8362623 _146290 _146293 P g x) (@lem8362620 _146290 _146293 f P g x h1)). Qed.
Lemma lem8362626 (b : Prop) (a : Prop) : (a \/ b) = (term754 b a).
Proof. exact (EQ_MP (@lem20682 b a) (@lem20764 b a)). Qed.
Lemma lem8362627 {_146290 _146293 : Type'} (P : type799 _146290 _146293) (lt2 : type1402 _146293) (z : type784 _146290 _146293) (_113769 : _146293 -> _146290) (_113770 : _146293 -> _146290) (_113771 : _146293) : (term740 _146290 _146293 lt2 z _113769 P _113770 _113771) = (term794 _146290 _146293 P lt2 z _113769 _113770 _113771).
Proof. exact (@lem8362626 (term660 _146290 _146293 _113769 P _113770 _113771) (term685 _146290 _146293 lt2 z _113769 _113770 _113771)). Qed.
Lemma lem8362629 (a : Prop) (b : Prop) : (term756 a b) = (term757 a b).
Proof. exact (EQ_MP (@lem20789 a b) (@lem20895 a b)). Qed.
Lemma lem8362630 {_146290 _146293 : Type'} (_113769 : _146293 -> _146290) (P : type799 _146290 _146293) (_113770 : _146293 -> _146290) (_113771 : _146293) : (term795 _146290 _146293 _113769 P _113770 _113771) = (term796 _146290 _146293 _113769 P _113770 _113771).
Proof. exact (@lem8362629 (term593 _146290 _146293 P _113769 _113771) (term595 _146290 _146293 P _113770 _113771)). Qed.
Lemma lem8362632 (a : Prop) : (term47 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem8362633 {_146290 _146293 : Type'} (P : type799 _146290 _146293) (_113770 : _146293 -> _146290) (_113771 : _146293) : (term760 _146290 _146293 P _113770 _113771) = (term593 _146290 _146293 P _113770 _113771).
Proof. exact (@lem8362632 (term593 _146290 _146293 P _113770 _113771)). Qed.
Lemma lem8362634 {_146290 _146293 : Type'} (P : type799 _146290 _146293) (_113769 : _146293 -> _146290) (_113771 : _146293) : (term636 _146290 _146293 P _113769 _113771) = (term636 _146290 _146293 P _113769 _113771).
Proof. exact (eq_refl (term636 _146290 _146293 P _113769 _113771)). Qed.
Lemma lem8362635 {_146290 _146293 : Type'} (_113769 : _146293 -> _146290) (P : type799 _146290 _146293) (_113770 : _146293 -> _146290) (_113771 : _146293) : (term796 _146290 _146293 _113769 P _113770 _113771) = (term638 _146290 _146293 _113769 P _113770 _113771).
Proof. exact (MK_COMB (@lem8362634 _146290 _146293 P _113769 _113771) (@lem8362633 _146290 _146293 P _113770 _113771)). Qed.
Lemma lem8362636 {_146290 _146293 : Type'} (_113769 : _146293 -> _146290) (P : type799 _146290 _146293) (_113770 : _146293 -> _146290) (_113771 : _146293) : (term795 _146290 _146293 _113769 P _113770 _113771) = (term638 _146290 _146293 _113769 P _113770 _113771).
Proof. exact (TRANS (@lem8362630 _146290 _146293 _113769 P _113770 _113771) (@lem8362635 _146290 _146293 _113769 P _113770 _113771)). Qed.
Lemma lem8362637 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem8362638 {_146290 _146293 : Type'} (_113769 : _146293 -> _146290) (P : type799 _146290 _146293) (_113770 : _146293 -> _146290) (_113771 : _146293) : (term797 _146290 _146293 _113769 P _113770 _113771) = (term798 _146290 _146293 _113769 P _113770 _113771).
Proof. exact (MK_COMB (@lem8362637) (@lem8362636 _146290 _146293 _113769 P _113770 _113771)). Qed.
Lemma lem8362639 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (z : type784 _146290 _146293) (_113769 : _146293 -> _146290) (_113770 : _146293 -> _146290) (_113771 : _146293) : (term685 _146290 _146293 lt2 z _113769 _113770 _113771) = (term685 _146290 _146293 lt2 z _113769 _113770 _113771).
Proof. exact (eq_refl (term685 _146290 _146293 lt2 z _113769 _113770 _113771)). Qed.
Lemma lem8362640 {_146290 _146293 : Type'} (P : type799 _146290 _146293) (lt2 : type1402 _146293) (z : type784 _146290 _146293) (_113769 : _146293 -> _146290) (_113770 : _146293 -> _146290) (_113771 : _146293) : (term794 _146290 _146293 P lt2 z _113769 _113770 _113771) = (term799 _146290 _146293 P lt2 z _113769 _113770 _113771).
Proof. exact (MK_COMB (@lem8362638 _146290 _146293 _113769 P _113770 _113771) (@lem8362639 _146290 _146293 lt2 z _113769 _113770 _113771)). Qed.
Lemma lem8362641 {_146290 _146293 : Type'} (P : type799 _146290 _146293) (lt2 : type1402 _146293) (z : type784 _146290 _146293) (_113769 : _146293 -> _146290) (_113770 : _146293 -> _146290) (_113771 : _146293) : (term740 _146290 _146293 lt2 z _113769 P _113770 _113771) = (term799 _146290 _146293 P lt2 z _113769 _113770 _113771).
Proof. exact (TRANS (@lem8362627 _146290 _146293 P lt2 z _113769 _113770 _113771) (@lem8362640 _146290 _146293 P lt2 z _113769 _113770 _113771)). Qed.
Lemma lem8362643 {_146290 _146293 : Type'} (f : _146293 -> _146290) (P : type799 _146290 _146293) (g : _146293 -> _146290) (x : _146293) (h1 : term595 _146290 _146293 P f x) (h2 : term638 _146290 _146293 f P g x) : term638 _146290 _146293 f P g x.
Proof. exact (conj (@lem8362617 _146290 _146293 P f x h1) (@lem8362624 _146290 _146293 f P g x h2)). Qed.
Lemma lem8362645 {_146290 _146293 : Type'} (_113769 : _146293 -> _146290) (_113770 : _146293 -> _146290) (_113771 : _146293) (lt2 : type1402 _146293) (z : type784 _146290 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (H' : type796 _146290 _146293) (h1 : term259 _146290 _146293 lt2 z P G H') : term799 _146290 _146293 P lt2 z _113769 _113770 _113771.
Proof. exact (EQ_MP (@lem8362641 _146290 _146293 P lt2 z _113769 _113770 _113771) (@lem8361450 _146290 _146293 _113769 _113770 _113771 lt2 z P G H' h1)). Qed.
Lemma lem8362646 {_146290 _146293 : Type'} (_113769 : _146293 -> _146290) (_113770 : _146293 -> _146290) (_113771 : _146293) (lt2 : type1402 _146293) (z : type784 _146290 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (H' : type796 _146290 _146293) (h1 : term259 _146290 _146293 lt2 z P G H') : term799 _146290 _146293 P lt2 z _113769 _113770 _113771.
Proof. exact (@lem8362645 _146290 _146293 _113769 _113770 _113771 lt2 z P G H' h1). Qed.
Lemma lem8362647 {_146290 _146293 : Type'} (f : _146293 -> _146290) (g : _146293 -> _146290) (x : _146293) (lt2 : type1402 _146293) (z : type784 _146290 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (H' : type796 _146290 _146293) (h1 : term259 _146290 _146293 lt2 z P G H') : term799 _146290 _146293 P lt2 z f g x.
Proof. exact (@lem8362646 _146290 _146293 f g x lt2 z P G H' h1). Qed.
Lemma lem8362650 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (z : type784 _146290 _146293) (G : type797 _146290 _146293) (H' : type796 _146290 _146293) (f : _146293 -> _146290) (P : type799 _146290 _146293) (g : _146293 -> _146290) (x : _146293) (h1 : term259 _146290 _146293 lt2 z P G H') (h2 : term595 _146290 _146293 P f x) (h3 : term638 _146290 _146293 f P g x) : term685 _146290 _146293 lt2 z f g x.
Proof. exact (@lem8362647 _146290 _146293 f g x lt2 z P G H' h1 (@lem8362643 _146290 _146293 f P g x h2 h3)). Qed.
Lemma lem8362651 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (z : type784 _146290 _146293) (G : type797 _146290 _146293) (H' : type796 _146290 _146293) (f : _146293 -> _146290) (P : type799 _146290 _146293) (g : _146293 -> _146290) (x : _146293) (h1 : term259 _146290 _146293 lt2 z P G H') (h2 : term595 _146290 _146293 P f x) (h3 : term638 _146290 _146293 f P g x) : term765 _146290 _146293 lt2 z f g x.
Proof. exact (fun h0 : term766 _146290 _146293 lt2 z f g x => @lem8362650 _146290 _146293 lt2 z G H' f P g x h1 h2 h3). Qed.
Lemma lem8362653 (p : Prop) : (term748 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8362654 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (z : type784 _146290 _146293) (f : _146293 -> _146290) (g : _146293 -> _146290) (x : _146293) : (term765 _146290 _146293 lt2 z f g x) = (term685 _146290 _146293 lt2 z f g x).
Proof. exact (@lem8362653 (term685 _146290 _146293 lt2 z f g x)). Qed.
Lemma lem8362655 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (z : type784 _146290 _146293) (G : type797 _146290 _146293) (H' : type796 _146290 _146293) (f : _146293 -> _146290) (P : type799 _146290 _146293) (g : _146293 -> _146290) (x : _146293) (h1 : term259 _146290 _146293 lt2 z P G H') (h2 : term595 _146290 _146293 P f x) (h3 : term638 _146290 _146293 f P g x) : term685 _146290 _146293 lt2 z f g x.
Proof. exact (EQ_MP (@lem8362654 _146290 _146293 lt2 z f g x) (@lem8362651 _146290 _146293 lt2 z G H' f P g x h1 h2 h3)). Qed.
Lemma lem8362661 (q : Prop) (p : Prop) : (p \/ q) = (q \/ p).
Proof. exact (proj1 (@lem827 (@el Prop) p q)). Qed.
Lemma lem8362662 {_146290 _146293 : Type'} (f : _146293 -> _146290) (g : _146293 -> _146290) (lt2 : type1402 _146293) (_113776 : _146293) (x : _146293) : (term621 _146290 _146293 lt2 x f g _113776) = (term767 _146290 _146293 f g lt2 _113776 x).
Proof. exact (@lem8362661 ((@I (_146293 -> _146290) f _113776) = (@I (_146293 -> _146290) g _113776)) (term608 _146293 lt2 _113776 x)). Qed.
Lemma lem8362670 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8362671 {_146290 _146293 : Type'} (f : _146293 -> _146290) (g : _146293 -> _146290) (lt2 : type1402 _146293) (_113776 : _146293) (x : _146293) : (term768 _146290 _146293 lt2 x f g _113776) = (term769 _146290 _146293 f g lt2 _113776 x).
Proof. exact (MK_COMB (@lem8362670) (@lem8362662 _146290 _146293 f g lt2 _113776 x)). Qed.
Lemma lem8362679 {_146290 _146293 : Type'} (f : _146293 -> _146290) (g : _146293 -> _146290) (lt2 : type1402 _146293) (_113776 : _146293) (x : _146293) : (term767 _146290 _146293 f g lt2 _113776 x) = (term767 _146290 _146293 f g lt2 _113776 x).
Proof. exact (eq_refl (term767 _146290 _146293 f g lt2 _113776 x)). Qed.
Lemma lem8362680 {_146290 _146293 : Type'} (f : _146293 -> _146290) (g : _146293 -> _146290) (lt2 : type1402 _146293) (_113776 : _146293) (x : _146293) : ((term621 _146290 _146293 lt2 x f g _113776) = (term767 _146290 _146293 f g lt2 _113776 x)) = ((term767 _146290 _146293 f g lt2 _113776 x) = (term767 _146290 _146293 f g lt2 _113776 x)).
Proof. exact (MK_COMB (@lem8362671 _146290 _146293 f g lt2 _113776 x) (@lem8362679 _146290 _146293 f g lt2 _113776 x)). Qed.
Lemma lem8362682 {A : Type'} (x : A) : (x = x) = True.
Proof. exact (EQ_MP (@lem20665 A x) (@lem20664 A x)). Qed.
Lemma lem8362683 (x : Prop) : (x = x) = True.
Proof. exact (@lem8362682 Prop x). Qed.
Lemma lem8362684 {_146290 _146293 : Type'} (f : _146293 -> _146290) (g : _146293 -> _146290) (lt2 : type1402 _146293) (_113776 : _146293) (x : _146293) : ((term767 _146290 _146293 f g lt2 _113776 x) = (term767 _146290 _146293 f g lt2 _113776 x)) = True.
Proof. exact (@lem8362683 (term767 _146290 _146293 f g lt2 _113776 x)). Qed.
Lemma lem8362685 {_146290 _146293 : Type'} (f : _146293 -> _146290) (g : _146293 -> _146290) (lt2 : type1402 _146293) (_113776 : _146293) (x : _146293) : ((term621 _146290 _146293 lt2 x f g _113776) = (term767 _146290 _146293 f g lt2 _113776 x)) = True.
Proof. exact (TRANS (@lem8362680 _146290 _146293 f g lt2 _113776 x) (@lem8362684 _146290 _146293 f g lt2 _113776 x)). Qed.
Lemma lem8362686 {_146290 _146293 : Type'} (f : _146293 -> _146290) (g : _146293 -> _146290) (lt2 : type1402 _146293) (_113776 : _146293) (x : _146293) : True = ((term621 _146290 _146293 lt2 x f g _113776) = (term767 _146290 _146293 f g lt2 _113776 x)).
Proof. exact (SYM (@lem8362685 _146290 _146293 f g lt2 _113776 x)). Qed.
Lemma lem8362687 {_146290 _146293 : Type'} (f : _146293 -> _146290) (g : _146293 -> _146290) (lt2 : type1402 _146293) (_113776 : _146293) (x : _146293) : (term621 _146290 _146293 lt2 x f g _113776) = (term767 _146290 _146293 f g lt2 _113776 x).
Proof. exact (EQ_MP (@lem8362686 _146290 _146293 f g lt2 _113776 x) (@lem0)). Qed.
Lemma lem8362688 {_146290 _146293 : Type'} (_113776 : _146293) (lt2 : type1402 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (f : _146293 -> _146290) (H' : type796 _146290 _146293) (g : _146293 -> _146290) (x : _146293) (h1 : term646 _146290 _146293 lt2 P G f H' g x) : term767 _146290 _146293 f g lt2 _113776 x.
Proof. exact (EQ_MP (@lem8362687 _146290 _146293 f g lt2 _113776 x) (@lem8361392 _146290 _146293 _113776 lt2 P G f H' g x h1)). Qed.
Lemma lem8362690 (b : Prop) (a : Prop) : (a \/ b) = (term754 b a).
Proof. exact (EQ_MP (@lem20682 b a) (@lem20764 b a)). Qed.
Lemma lem8362691 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (x : _146293) (f : _146293 -> _146290) (g : _146293 -> _146290) (_113776 : _146293) : (term767 _146290 _146293 f g lt2 _113776 x) = (term770 _146290 _146293 lt2 x f g _113776).
Proof. exact (@lem8362690 (term608 _146293 lt2 _113776 x) ((@I (_146293 -> _146290) f _113776) = (@I (_146293 -> _146290) g _113776))). Qed.
Lemma lem8362693 (a : Prop) : (term47 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem8362694 {_146293 : Type'} (lt2 : type1402 _146293) (_113776 : _146293) (x : _146293) : (term771 _146293 lt2 _113776 x) = (term586 _146293 lt2 _113776 x).
Proof. exact (@lem8362693 (term586 _146293 lt2 _113776 x)). Qed.
Lemma lem8362695 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem8362696 {_146293 : Type'} (lt2 : type1402 _146293) (_113776 : _146293) (x : _146293) : (term772 _146293 lt2 _113776 x) = (term773 _146293 lt2 _113776 x).
Proof. exact (MK_COMB (@lem8362695) (@lem8362694 _146293 lt2 _113776 x)). Qed.
Lemma lem8362697 {_146290 _146293 : Type'} (f : _146293 -> _146290) (g : _146293 -> _146290) (_113776 : _146293) : ((@I (_146293 -> _146290) f _113776) = (@I (_146293 -> _146290) g _113776)) = ((@I (_146293 -> _146290) f _113776) = (@I (_146293 -> _146290) g _113776)).
Proof. exact (eq_refl ((@I (_146293 -> _146290) f _113776) = (@I (_146293 -> _146290) g _113776))). Qed.
Lemma lem8362698 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (x : _146293) (f : _146293 -> _146290) (g : _146293 -> _146290) (_113776 : _146293) : (term770 _146290 _146293 lt2 x f g _113776) = (term774 _146290 _146293 lt2 x f g _113776).
Proof. exact (MK_COMB (@lem8362696 _146293 lt2 _113776 x) (@lem8362697 _146290 _146293 f g _113776)). Qed.
Lemma lem8362699 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (x : _146293) (f : _146293 -> _146290) (g : _146293 -> _146290) (_113776 : _146293) : (term767 _146290 _146293 f g lt2 _113776 x) = (term774 _146290 _146293 lt2 x f g _113776).
Proof. exact (TRANS (@lem8362691 _146290 _146293 lt2 x f g _113776) (@lem8362698 _146290 _146293 lt2 x f g _113776)). Qed.
Lemma lem8362702 {_146290 _146293 : Type'} (_113776 : _146293) (lt2 : type1402 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (f : _146293 -> _146290) (H' : type796 _146290 _146293) (g : _146293 -> _146290) (x : _146293) (h1 : term646 _146290 _146293 lt2 P G f H' g x) : term774 _146290 _146293 lt2 x f g _113776.
Proof. exact (EQ_MP (@lem8362699 _146290 _146293 lt2 x f g _113776) (@lem8362688 _146290 _146293 _113776 lt2 P G f H' g x h1)). Qed.
Lemma lem8362703 {_146290 _146293 : Type'} (_113776 : _146293) (lt2 : type1402 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (f : _146293 -> _146290) (H' : type796 _146290 _146293) (g : _146293 -> _146290) (x : _146293) (h1 : term646 _146290 _146293 lt2 P G f H' g x) : term774 _146290 _146293 lt2 x f g _113776.
Proof. exact (@lem8362702 _146290 _146293 _113776 lt2 P G f H' g x h1). Qed.
Lemma lem8362704 {_146290 _146293 : Type'} (z : type784 _146290 _146293) (lt2 : type1402 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (f : _146293 -> _146290) (H' : type796 _146290 _146293) (g : _146293 -> _146290) (x : _146293) (h1 : term646 _146290 _146293 lt2 P G f H' g x) : term775 _146290 _146293 lt2 z f g x.
Proof. exact (@lem8362703 _146290 _146293 (term668 _146290 _146293 z f g x) lt2 P G f H' g x h1). Qed.
Lemma lem8362707 {_146290 _146293 : Type'} (z : type784 _146290 _146293) (lt2 : type1402 _146293) (G : type797 _146290 _146293) (H' : type796 _146290 _146293) (f : _146293 -> _146290) (P : type799 _146290 _146293) (g : _146293 -> _146290) (x : _146293) (h1 : term259 _146290 _146293 lt2 z P G H') (h2 : term595 _146290 _146293 P f x) (h3 : term646 _146290 _146293 lt2 P G f H' g x) (h4 : term638 _146290 _146293 f P g x) : (term671 _146290 _146293 z f g x) = (term674 _146290 _146293 z f g x).
Proof. exact (@lem8362704 _146290 _146293 z lt2 P G f H' g x h3 (@lem8362655 _146290 _146293 lt2 z G H' f P g x h1 h2 h4)). Qed.
Lemma lem8362708 {_146290 _146293 : Type'} (z : type784 _146290 _146293) (lt2 : type1402 _146293) (G : type797 _146290 _146293) (H' : type796 _146290 _146293) (f : _146293 -> _146290) (P : type799 _146290 _146293) (g : _146293 -> _146290) (x : _146293) (h1 : term259 _146290 _146293 lt2 z P G H') (h2 : term595 _146290 _146293 P f x) (h3 : term646 _146290 _146293 lt2 P G f H' g x) (h4 : term638 _146290 _146293 f P g x) : term776 _146290 _146293 z f g x.
Proof. exact (fun h0 : term678 _146290 _146293 z f g x => @lem8362707 _146290 _146293 z lt2 G H' f P g x h1 h2 h3 h4). Qed.
Lemma lem8362710 (p : Prop) : (term748 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8362711 {_146290 _146293 : Type'} (z : type784 _146290 _146293) (f : _146293 -> _146290) (g : _146293 -> _146290) (x : _146293) : (term776 _146290 _146293 z f g x) = ((term671 _146290 _146293 z f g x) = (term674 _146290 _146293 z f g x)).
Proof. exact (@lem8362710 ((term671 _146290 _146293 z f g x) = (term674 _146290 _146293 z f g x))). Qed.
Lemma lem8362712 {_146290 _146293 : Type'} (z : type784 _146290 _146293) (lt2 : type1402 _146293) (G : type797 _146290 _146293) (H' : type796 _146290 _146293) (f : _146293 -> _146290) (P : type799 _146290 _146293) (g : _146293 -> _146290) (x : _146293) (h1 : term259 _146290 _146293 lt2 z P G H') (h2 : term595 _146290 _146293 P f x) (h3 : term646 _146290 _146293 lt2 P G f H' g x) (h4 : term638 _146290 _146293 f P g x) : (term671 _146290 _146293 z f g x) = (term674 _146290 _146293 z f g x).
Proof. exact (EQ_MP (@lem8362711 _146290 _146293 z f g x) (@lem8362708 _146290 _146293 z lt2 G H' f P g x h1 h2 h3 h4)). Qed.
Lemma lem8362714 {_146290 _146293 : Type'} (f : _146293 -> _146290) (P : type799 _146290 _146293) (g : _146293 -> _146290) (x : _146293) (h1 : term638 _146290 _146293 f P g x) : term593 _146290 _146293 P g x.
Proof. exact (proj2 (@lem8359672 _146290 _146293 f P g x h1)). Qed.
Lemma lem8362715 {_146290 _146293 : Type'} (f : _146293 -> _146290) (P : type799 _146290 _146293) (g : _146293 -> _146290) (x : _146293) (h1 : term638 _146290 _146293 f P g x) : term751 _146290 _146293 P g x.
Proof. exact (fun h0 : term595 _146290 _146293 P g x => @lem8362714 _146290 _146293 f P g x h1). Qed.
Lemma lem8362717 (p : Prop) : (term748 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8362718 {_146290 _146293 : Type'} (P : type799 _146290 _146293) (g : _146293 -> _146290) (x : _146293) : (term751 _146290 _146293 P g x) = (term593 _146290 _146293 P g x).
Proof. exact (@lem8362717 (term593 _146290 _146293 P g x)). Qed.
Lemma lem8362719 {_146290 _146293 : Type'} (f : _146293 -> _146290) (P : type799 _146290 _146293) (g : _146293 -> _146290) (x : _146293) (h1 : term638 _146290 _146293 f P g x) : term593 _146290 _146293 P g x.
Proof. exact (EQ_MP (@lem8362718 _146290 _146293 P g x) (@lem8362715 _146290 _146293 f P g x h1)). Qed.
Lemma lem8362725 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem8362726 {_146290 _146293 : Type'} (z : type784 _146290 _146293) (_113769 : _146293 -> _146290) (P : type799 _146290 _146293) (_113770 : _146293 -> _146290) (_113771 : _146293) : (term741 _146290 _146293 z _113769 P _113770 _113771) = (term800 _146290 _146293 z _113769 P _113770 _113771).
Proof. exact (@lem8362725 (term593 _146290 _146293 P _113769 _113771) (term678 _146290 _146293 z _113769 _113770 _113771) (term595 _146290 _146293 P _113770 _113771)). Qed.
Lemma lem8362744 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8362745 {_146290 _146293 : Type'} (z : type784 _146290 _146293) (_113769 : _146293 -> _146290) (P : type799 _146290 _146293) (_113770 : _146293 -> _146290) (_113771 : _146293) : (term801 _146290 _146293 z _113769 P _113770 _113771) = (term802 _146290 _146293 z _113769 P _113770 _113771).
Proof. exact (MK_COMB (@lem8362744) (@lem8362726 _146290 _146293 z _113769 P _113770 _113771)). Qed.
Lemma lem8362763 {_146290 _146293 : Type'} (z : type784 _146290 _146293) (_113769 : _146293 -> _146290) (P : type799 _146290 _146293) (_113770 : _146293 -> _146290) (_113771 : _146293) : (term800 _146290 _146293 z _113769 P _113770 _113771) = (term800 _146290 _146293 z _113769 P _113770 _113771).
Proof. exact (eq_refl (term800 _146290 _146293 z _113769 P _113770 _113771)). Qed.
Lemma lem8362764 {_146290 _146293 : Type'} (z : type784 _146290 _146293) (_113769 : _146293 -> _146290) (P : type799 _146290 _146293) (_113770 : _146293 -> _146290) (_113771 : _146293) : ((term741 _146290 _146293 z _113769 P _113770 _113771) = (term800 _146290 _146293 z _113769 P _113770 _113771)) = ((term800 _146290 _146293 z _113769 P _113770 _113771) = (term800 _146290 _146293 z _113769 P _113770 _113771)).
Proof. exact (MK_COMB (@lem8362745 _146290 _146293 z _113769 P _113770 _113771) (@lem8362763 _146290 _146293 z _113769 P _113770 _113771)). Qed.
Lemma lem8362766 {A : Type'} (x : A) : (x = x) = True.
Proof. exact (EQ_MP (@lem20665 A x) (@lem20664 A x)). Qed.
Lemma lem8362767 (x : Prop) : (x = x) = True.
Proof. exact (@lem8362766 Prop x). Qed.
Lemma lem8362768 {_146290 _146293 : Type'} (z : type784 _146290 _146293) (_113769 : _146293 -> _146290) (P : type799 _146290 _146293) (_113770 : _146293 -> _146290) (_113771 : _146293) : ((term800 _146290 _146293 z _113769 P _113770 _113771) = (term800 _146290 _146293 z _113769 P _113770 _113771)) = True.
Proof. exact (@lem8362767 (term800 _146290 _146293 z _113769 P _113770 _113771)). Qed.
Lemma lem8362769 {_146290 _146293 : Type'} (z : type784 _146290 _146293) (_113769 : _146293 -> _146290) (P : type799 _146290 _146293) (_113770 : _146293 -> _146290) (_113771 : _146293) : ((term741 _146290 _146293 z _113769 P _113770 _113771) = (term800 _146290 _146293 z _113769 P _113770 _113771)) = True.
Proof. exact (TRANS (@lem8362764 _146290 _146293 z _113769 P _113770 _113771) (@lem8362768 _146290 _146293 z _113769 P _113770 _113771)). Qed.
Lemma lem8362770 {_146290 _146293 : Type'} (z : type784 _146290 _146293) (_113769 : _146293 -> _146290) (P : type799 _146290 _146293) (_113770 : _146293 -> _146290) (_113771 : _146293) : True = ((term741 _146290 _146293 z _113769 P _113770 _113771) = (term800 _146290 _146293 z _113769 P _113770 _113771)).
Proof. exact (SYM (@lem8362769 _146290 _146293 z _113769 P _113770 _113771)). Qed.
Lemma lem8362771 {_146290 _146293 : Type'} (z : type784 _146290 _146293) (_113769 : _146293 -> _146290) (P : type799 _146290 _146293) (_113770 : _146293 -> _146290) (_113771 : _146293) : (term741 _146290 _146293 z _113769 P _113770 _113771) = (term800 _146290 _146293 z _113769 P _113770 _113771).
Proof. exact (EQ_MP (@lem8362770 _146290 _146293 z _113769 P _113770 _113771) (@lem0)). Qed.
Lemma lem8362772 {_146290 _146293 : Type'} (_113769 : _146293 -> _146290) (_113770 : _146293 -> _146290) (_113771 : _146293) (lt2 : type1402 _146293) (z : type784 _146290 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (H' : type796 _146290 _146293) (h1 : term259 _146290 _146293 lt2 z P G H') : term800 _146290 _146293 z _113769 P _113770 _113771.
Proof. exact (EQ_MP (@lem8362771 _146290 _146293 z _113769 P _113770 _113771) (@lem8361460 _146290 _146293 _113769 _113770 _113771 lt2 z P G H' h1)). Qed.
Lemma lem8362774 (b : Prop) (a : Prop) : (a \/ b) = (term754 b a).
Proof. exact (EQ_MP (@lem20682 b a) (@lem20764 b a)). Qed.
Lemma lem8362775 {_146290 _146293 : Type'} (z : type784 _146290 _146293) (_113770 : _146293 -> _146290) (P : type799 _146290 _146293) (_113769 : _146293 -> _146290) (_113771 : _146293) : (term800 _146290 _146293 z _113769 P _113770 _113771) = (term803 _146290 _146293 z _113770 P _113769 _113771).
Proof. exact (@lem8362774 (term804 _146290 _146293 z _113769 P _113770 _113771) (term593 _146290 _146293 P _113769 _113771)). Qed.
Lemma lem8362777 (a : Prop) (b : Prop) : (term756 a b) = (term757 a b).
Proof. exact (EQ_MP (@lem20789 a b) (@lem20895 a b)). Qed.
Lemma lem8362778 {_146290 _146293 : Type'} (z : type784 _146290 _146293) (_113769 : _146293 -> _146290) (P : type799 _146290 _146293) (_113770 : _146293 -> _146290) (_113771 : _146293) : (term805 _146290 _146293 z _113769 P _113770 _113771) = (term806 _146290 _146293 z _113769 P _113770 _113771).
Proof. exact (@lem8362777 (term678 _146290 _146293 z _113769 _113770 _113771) (term595 _146290 _146293 P _113770 _113771)). Qed.
Lemma lem8362780 (a : Prop) : (term47 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem8362781 {_146290 _146293 : Type'} (z : type784 _146290 _146293) (_113769 : _146293 -> _146290) (_113770 : _146293 -> _146290) (_113771 : _146293) : (term786 _146290 _146293 z _113769 _113770 _113771) = ((term671 _146290 _146293 z _113769 _113770 _113771) = (term674 _146290 _146293 z _113769 _113770 _113771)).
Proof. exact (@lem8362780 ((term671 _146290 _146293 z _113769 _113770 _113771) = (term674 _146290 _146293 z _113769 _113770 _113771))). Qed.
Lemma lem8362782 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8362783 {_146290 _146293 : Type'} (z : type784 _146290 _146293) (_113769 : _146293 -> _146290) (_113770 : _146293 -> _146290) (_113771 : _146293) : (term787 _146290 _146293 z _113769 _113770 _113771) = (term788 _146290 _146293 z _113769 _113770 _113771).
Proof. exact (MK_COMB (@lem8362782) (@lem8362781 _146290 _146293 z _113769 _113770 _113771)). Qed.
Lemma lem8362785 (a : Prop) : (term47 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem8362786 {_146290 _146293 : Type'} (P : type799 _146290 _146293) (_113770 : _146293 -> _146290) (_113771 : _146293) : (term760 _146290 _146293 P _113770 _113771) = (term593 _146290 _146293 P _113770 _113771).
Proof. exact (@lem8362785 (term593 _146290 _146293 P _113770 _113771)). Qed.
Lemma lem8362787 {_146290 _146293 : Type'} (z : type784 _146290 _146293) (_113769 : _146293 -> _146290) (P : type799 _146290 _146293) (_113770 : _146293 -> _146290) (_113771 : _146293) : (term806 _146290 _146293 z _113769 P _113770 _113771) = (term807 _146290 _146293 z _113769 P _113770 _113771).
Proof. exact (MK_COMB (@lem8362783 _146290 _146293 z _113769 _113770 _113771) (@lem8362786 _146290 _146293 P _113770 _113771)). Qed.
Lemma lem8362788 {_146290 _146293 : Type'} (z : type784 _146290 _146293) (_113769 : _146293 -> _146290) (P : type799 _146290 _146293) (_113770 : _146293 -> _146290) (_113771 : _146293) : (term805 _146290 _146293 z _113769 P _113770 _113771) = (term807 _146290 _146293 z _113769 P _113770 _113771).
Proof. exact (TRANS (@lem8362778 _146290 _146293 z _113769 P _113770 _113771) (@lem8362787 _146290 _146293 z _113769 P _113770 _113771)). Qed.
Lemma lem8362789 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem8362790 {_146290 _146293 : Type'} (z : type784 _146290 _146293) (_113769 : _146293 -> _146290) (P : type799 _146290 _146293) (_113770 : _146293 -> _146290) (_113771 : _146293) : (term808 _146290 _146293 z _113769 P _113770 _113771) = (term809 _146290 _146293 z _113769 P _113770 _113771).
Proof. exact (MK_COMB (@lem8362789) (@lem8362788 _146290 _146293 z _113769 P _113770 _113771)). Qed.
Lemma lem8362791 {_146290 _146293 : Type'} (P : type799 _146290 _146293) (_113769 : _146293 -> _146290) (_113771 : _146293) : (term593 _146290 _146293 P _113769 _113771) = (term593 _146290 _146293 P _113769 _113771).
Proof. exact (eq_refl (term593 _146290 _146293 P _113769 _113771)). Qed.
Lemma lem8362792 {_146290 _146293 : Type'} (z : type784 _146290 _146293) (_113770 : _146293 -> _146290) (P : type799 _146290 _146293) (_113769 : _146293 -> _146290) (_113771 : _146293) : (term803 _146290 _146293 z _113770 P _113769 _113771) = (term810 _146290 _146293 z _113770 P _113769 _113771).
Proof. exact (MK_COMB (@lem8362790 _146290 _146293 z _113769 P _113770 _113771) (@lem8362791 _146290 _146293 P _113769 _113771)). Qed.
Lemma lem8362793 {_146290 _146293 : Type'} (z : type784 _146290 _146293) (_113770 : _146293 -> _146290) (P : type799 _146290 _146293) (_113769 : _146293 -> _146290) (_113771 : _146293) : (term800 _146290 _146293 z _113769 P _113770 _113771) = (term810 _146290 _146293 z _113770 P _113769 _113771).
Proof. exact (TRANS (@lem8362775 _146290 _146293 z _113770 P _113769 _113771) (@lem8362792 _146290 _146293 z _113770 P _113769 _113771)). Qed.
Lemma lem8362795 {_146290 _146293 : Type'} (z : type784 _146290 _146293) (lt2 : type1402 _146293) (G : type797 _146290 _146293) (H' : type796 _146290 _146293) (f : _146293 -> _146290) (P : type799 _146290 _146293) (g : _146293 -> _146290) (x : _146293) (h1 : term259 _146290 _146293 lt2 z P G H') (h2 : term595 _146290 _146293 P f x) (h3 : term646 _146290 _146293 lt2 P G f H' g x) (h4 : term638 _146290 _146293 f P g x) : term807 _146290 _146293 z f P g x.
Proof. exact (conj (@lem8362712 _146290 _146293 z lt2 G H' f P g x h1 h2 h3 h4) (@lem8362719 _146290 _146293 f P g x h4)). Qed.
Lemma lem8362797 {_146290 _146293 : Type'} (_113770 : _146293 -> _146290) (_113769 : _146293 -> _146290) (_113771 : _146293) (lt2 : type1402 _146293) (z : type784 _146290 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (H' : type796 _146290 _146293) (h1 : term259 _146290 _146293 lt2 z P G H') : term810 _146290 _146293 z _113770 P _113769 _113771.
Proof. exact (EQ_MP (@lem8362793 _146290 _146293 z _113770 P _113769 _113771) (@lem8362772 _146290 _146293 _113769 _113770 _113771 lt2 z P G H' h1)). Qed.
Lemma lem8362798 {_146290 _146293 : Type'} (_113770 : _146293 -> _146290) (_113769 : _146293 -> _146290) (_113771 : _146293) (lt2 : type1402 _146293) (z : type784 _146290 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (H' : type796 _146290 _146293) (h1 : term259 _146290 _146293 lt2 z P G H') : term810 _146290 _146293 z _113770 P _113769 _113771.
Proof. exact (@lem8362797 _146290 _146293 _113770 _113769 _113771 lt2 z P G H' h1). Qed.
Lemma lem8362799 {_146290 _146293 : Type'} (g : _146293 -> _146290) (f : _146293 -> _146290) (x : _146293) (lt2 : type1402 _146293) (z : type784 _146290 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (H' : type796 _146290 _146293) (h1 : term259 _146290 _146293 lt2 z P G H') : term810 _146290 _146293 z g P f x.
Proof. exact (@lem8362798 _146290 _146293 g f x lt2 z P G H' h1). Qed.
Lemma lem8362802 {_146290 _146293 : Type'} (z : type784 _146290 _146293) (lt2 : type1402 _146293) (G : type797 _146290 _146293) (H' : type796 _146290 _146293) (f : _146293 -> _146290) (P : type799 _146290 _146293) (g : _146293 -> _146290) (x : _146293) (h1 : term259 _146290 _146293 lt2 z P G H') (h2 : term595 _146290 _146293 P f x) (h3 : term646 _146290 _146293 lt2 P G f H' g x) (h4 : term638 _146290 _146293 f P g x) : term593 _146290 _146293 P f x.
Proof. exact (@lem8362799 _146290 _146293 g f x lt2 z P G H' h1 (@lem8362795 _146290 _146293 z lt2 G H' f P g x h1 h2 h3 h4)). Qed.
Lemma lem8362803 {_146290 _146293 : Type'} (z : type784 _146290 _146293) (lt2 : type1402 _146293) (G : type797 _146290 _146293) (H' : type796 _146290 _146293) (f : _146293 -> _146290) (P : type799 _146290 _146293) (g : _146293 -> _146290) (x : _146293) (h1 : term259 _146290 _146293 lt2 z P G H') (h2 : term646 _146290 _146293 lt2 P G f H' g x) (h3 : term638 _146290 _146293 f P g x) : term751 _146290 _146293 P f x.
Proof. exact (fun h0 : term595 _146290 _146293 P f x => @lem8362802 _146290 _146293 z lt2 G H' f P g x h1 h0 h2 h3). Qed.
Lemma lem8362805 (p : Prop) : (term748 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8362806 {_146290 _146293 : Type'} (P : type799 _146290 _146293) (f : _146293 -> _146290) (x : _146293) : (term751 _146290 _146293 P f x) = (term593 _146290 _146293 P f x).
Proof. exact (@lem8362805 (term593 _146290 _146293 P f x)). Qed.
Lemma lem8362807 {_146290 _146293 : Type'} (z : type784 _146290 _146293) (lt2 : type1402 _146293) (G : type797 _146290 _146293) (H' : type796 _146290 _146293) (f : _146293 -> _146290) (P : type799 _146290 _146293) (g : _146293 -> _146290) (x : _146293) (h1 : term259 _146290 _146293 lt2 z P G H') (h2 : term646 _146290 _146293 lt2 P G f H' g x) (h3 : term638 _146290 _146293 f P g x) : term593 _146290 _146293 P f x.
Proof. exact (EQ_MP (@lem8362806 _146290 _146293 P f x) (@lem8362803 _146290 _146293 z lt2 G H' f P g x h1 h2 h3)). Qed.
Lemma lem8362810 (p : Prop) : (~ p) = (p -> False).
Proof. exact (EQ_MP (@lem21021 p) (@lem0)). Qed.
Lemma lem8362812 {_146290 _146293 : Type'} (P : type799 _146290 _146293) (f : _146293 -> _146290) (x : _146293) : (term595 _146290 _146293 P f x) = (term793 _146290 _146293 P f x).
Proof. exact (@lem8362810 (term593 _146290 _146293 P f x)). Qed.
Lemma lem8362815 {_146290 _146293 : Type'} (f : _146293 -> _146290) (P : type799 _146290 _146293) (g : _146293 -> _146290) (x : _146293) (h1 : term638 _146290 _146293 f P g x) : term793 _146290 _146293 P f x.
Proof. exact (EQ_MP (@lem8362812 _146290 _146293 P f x) (@lem8361394 _146290 _146293 f P g x h1)). Qed.
Lemma lem8362818 {_146290 _146293 : Type'} (z : type784 _146290 _146293) (lt2 : type1402 _146293) (G : type797 _146290 _146293) (H' : type796 _146290 _146293) (f : _146293 -> _146290) (P : type799 _146290 _146293) (g : _146293 -> _146290) (x : _146293) (h1 : term259 _146290 _146293 lt2 z P G H') (h2 : term646 _146290 _146293 lt2 P G f H' g x) (h3 : term638 _146290 _146293 f P g x) : False.
Proof. exact (@lem8362815 _146290 _146293 f P g x h3 (@lem8362807 _146290 _146293 z lt2 G H' f P g x h1 h2 h3)). Qed.
Lemma lem8362819 {_146290 _146293 : Type'} (z : type784 _146290 _146293) (lt2 : type1402 _146293) (G : type797 _146290 _146293) (H' : type796 _146290 _146293) (f : _146293 -> _146290) (P : type799 _146290 _146293) (g : _146293 -> _146290) (x : _146293) (h1 : term259 _146290 _146293 lt2 z P G H') (h2 : term646 _146290 _146293 lt2 P G f H' g x) (h3 : term638 _146290 _146293 f P g x) : term750.
Proof. exact (fun h0 : ~ False => @lem8362818 _146290 _146293 z lt2 G H' f P g x h1 h2 h3). Qed.
Lemma lem8362821 (p : Prop) : (term748 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8362822 : term750 = False.
Proof. exact (@lem8362821 False). Qed.
Lemma lem8362823 {_146290 _146293 : Type'} (z : type784 _146290 _146293) (lt2 : type1402 _146293) (G : type797 _146290 _146293) (H' : type796 _146290 _146293) (f : _146293 -> _146290) (P : type799 _146290 _146293) (g : _146293 -> _146290) (x : _146293) (h1 : term259 _146290 _146293 lt2 z P G H') (h2 : term646 _146290 _146293 lt2 P G f H' g x) (h3 : term638 _146290 _146293 f P g x) : False.
Proof. exact (EQ_MP (@lem8362822) (@lem8362819 _146290 _146293 z lt2 G H' f P g x h1 h2 h3)). Qed.
Lemma lem8362991 {_146290 _146293 : Type'} (f : _146293 -> _146290) (G : type797 _146290 _146293) (g : _146293 -> _146290) (x : _146293) (h1 : term631 _146290 _146293 f G g x) : term631 _146290 _146293 f G g x.
Proof. exact (h1). Qed.
Lemma lem8362992 {_146290 _146293 : Type'} (f : _146293 -> _146290) (G : type797 _146290 _146293) (g : _146293 -> _146290) (x : _146293) (h1 : term631 _146290 _146293 f G g x) : term811 _146290 _146293 f G g x.
Proof. exact (fun h0 : (term587 _146290 _146293 G f x) = (term587 _146290 _146293 G g x) => @lem8362991 _146290 _146293 f G g x h1). Qed.
Lemma lem8362994 (p : Prop) : (term753 p) = (~ p).
Proof. exact (EQ_MP (@lem21028 p) (@lem21107 p)). Qed.
Lemma lem8362995 {_146290 _146293 : Type'} (f : _146293 -> _146290) (G : type797 _146290 _146293) (g : _146293 -> _146290) (x : _146293) : (term811 _146290 _146293 f G g x) = (term631 _146290 _146293 f G g x).
Proof. exact (@lem8362994 ((term587 _146290 _146293 G f x) = (term587 _146290 _146293 G g x))). Qed.
Lemma lem8362996 {_146290 _146293 : Type'} (f : _146293 -> _146290) (G : type797 _146290 _146293) (g : _146293 -> _146290) (x : _146293) (h1 : term631 _146290 _146293 f G g x) : term631 _146290 _146293 f G g x.
Proof. exact (EQ_MP (@lem8362995 _146290 _146293 f G g x) (@lem8362992 _146290 _146293 f G g x h1)). Qed.
Lemma lem8362998 (b : Prop) (a : Prop) : (a \/ b) = (term754 b a).
Proof. exact (EQ_MP (@lem20682 b a) (@lem20764 b a)). Qed.
Lemma lem8363001 {_146290 _146293 : Type'} (G : type797 _146290 _146293) (lt2 : type1402 _146293) (z : type784 _146290 _146293) (_113780 : _146293 -> _146290) (_113781 : _146293 -> _146290) (_113782 : _146293) : (term742 _146290 _146293 lt2 z _113780 G _113781 _113782) = (term812 _146290 _146293 G lt2 z _113780 _113781 _113782).
Proof. exact (@lem8362998 ((term587 _146290 _146293 G _113780 _113782) = (term587 _146290 _146293 G _113781 _113782)) (term685 _146290 _146293 lt2 z _113780 _113781 _113782)). Qed.
Lemma lem8363004 {_146290 _146293 : Type'} (_113780 : _146293 -> _146290) (_113781 : _146293 -> _146290) (_113782 : _146293) (lt2 : type1402 _146293) (z : type784 _146290 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (H' : type796 _146290 _146293) (h1 : term259 _146290 _146293 lt2 z P G H') : term812 _146290 _146293 G lt2 z _113780 _113781 _113782.
Proof. exact (EQ_MP (@lem8363001 _146290 _146293 G lt2 z _113780 _113781 _113782) (@lem8361512 _146290 _146293 _113780 _113781 _113782 lt2 z P G H' h1)). Qed.
Lemma lem8363005 {_146290 _146293 : Type'} (_113780 : _146293 -> _146290) (_113781 : _146293 -> _146290) (_113782 : _146293) (lt2 : type1402 _146293) (z : type784 _146290 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (H' : type796 _146290 _146293) (h1 : term259 _146290 _146293 lt2 z P G H') : term812 _146290 _146293 G lt2 z _113780 _113781 _113782.
Proof. exact (@lem8363004 _146290 _146293 _113780 _113781 _113782 lt2 z P G H' h1). Qed.
Lemma lem8363006 {_146290 _146293 : Type'} (f : _146293 -> _146290) (g : _146293 -> _146290) (x : _146293) (lt2 : type1402 _146293) (z : type784 _146290 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (H' : type796 _146290 _146293) (h1 : term259 _146290 _146293 lt2 z P G H') : term812 _146290 _146293 G lt2 z f g x.
Proof. exact (@lem8363005 _146290 _146293 f g x lt2 z P G H' h1). Qed.
Lemma lem8363009 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (z : type784 _146290 _146293) (P : type799 _146290 _146293) (H' : type796 _146290 _146293) (f : _146293 -> _146290) (G : type797 _146290 _146293) (g : _146293 -> _146290) (x : _146293) (h1 : term259 _146290 _146293 lt2 z P G H') (h2 : term631 _146290 _146293 f G g x) : term685 _146290 _146293 lt2 z f g x.
Proof. exact (@lem8363006 _146290 _146293 f g x lt2 z P G H' h1 (@lem8362996 _146290 _146293 f G g x h2)). Qed.
Lemma lem8363010 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (z : type784 _146290 _146293) (P : type799 _146290 _146293) (H' : type796 _146290 _146293) (f : _146293 -> _146290) (G : type797 _146290 _146293) (g : _146293 -> _146290) (x : _146293) (h1 : term259 _146290 _146293 lt2 z P G H') (h2 : term631 _146290 _146293 f G g x) : term765 _146290 _146293 lt2 z f g x.
Proof. exact (fun h0 : term766 _146290 _146293 lt2 z f g x => @lem8363009 _146290 _146293 lt2 z P H' f G g x h1 h2). Qed.
Lemma lem8363012 (p : Prop) : (term748 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8363013 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (z : type784 _146290 _146293) (f : _146293 -> _146290) (g : _146293 -> _146290) (x : _146293) : (term765 _146290 _146293 lt2 z f g x) = (term685 _146290 _146293 lt2 z f g x).
Proof. exact (@lem8363012 (term685 _146290 _146293 lt2 z f g x)). Qed.
Lemma lem8363014 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (z : type784 _146290 _146293) (P : type799 _146290 _146293) (H' : type796 _146290 _146293) (f : _146293 -> _146290) (G : type797 _146290 _146293) (g : _146293 -> _146290) (x : _146293) (h1 : term259 _146290 _146293 lt2 z P G H') (h2 : term631 _146290 _146293 f G g x) : term685 _146290 _146293 lt2 z f g x.
Proof. exact (EQ_MP (@lem8363013 _146290 _146293 lt2 z f g x) (@lem8363010 _146290 _146293 lt2 z P H' f G g x h1 h2)). Qed.
Lemma lem8363020 (q : Prop) (p : Prop) : (p \/ q) = (q \/ p).
Proof. exact (proj1 (@lem827 (@el Prop) p q)). Qed.
Lemma lem8363021 {_146290 _146293 : Type'} (f : _146293 -> _146290) (g : _146293 -> _146290) (lt2 : type1402 _146293) (_113787 : _146293) (x : _146293) : (term621 _146290 _146293 lt2 x f g _113787) = (term767 _146290 _146293 f g lt2 _113787 x).
Proof. exact (@lem8363020 ((@I (_146293 -> _146290) f _113787) = (@I (_146293 -> _146290) g _113787)) (term608 _146293 lt2 _113787 x)). Qed.
Lemma lem8363029 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8363030 {_146290 _146293 : Type'} (f : _146293 -> _146290) (g : _146293 -> _146290) (lt2 : type1402 _146293) (_113787 : _146293) (x : _146293) : (term768 _146290 _146293 lt2 x f g _113787) = (term769 _146290 _146293 f g lt2 _113787 x).
Proof. exact (MK_COMB (@lem8363029) (@lem8363021 _146290 _146293 f g lt2 _113787 x)). Qed.
Lemma lem8363038 {_146290 _146293 : Type'} (f : _146293 -> _146290) (g : _146293 -> _146290) (lt2 : type1402 _146293) (_113787 : _146293) (x : _146293) : (term767 _146290 _146293 f g lt2 _113787 x) = (term767 _146290 _146293 f g lt2 _113787 x).
Proof. exact (eq_refl (term767 _146290 _146293 f g lt2 _113787 x)). Qed.
Lemma lem8363039 {_146290 _146293 : Type'} (f : _146293 -> _146290) (g : _146293 -> _146290) (lt2 : type1402 _146293) (_113787 : _146293) (x : _146293) : ((term621 _146290 _146293 lt2 x f g _113787) = (term767 _146290 _146293 f g lt2 _113787 x)) = ((term767 _146290 _146293 f g lt2 _113787 x) = (term767 _146290 _146293 f g lt2 _113787 x)).
Proof. exact (MK_COMB (@lem8363030 _146290 _146293 f g lt2 _113787 x) (@lem8363038 _146290 _146293 f g lt2 _113787 x)). Qed.
Lemma lem8363041 {A : Type'} (x : A) : (x = x) = True.
Proof. exact (EQ_MP (@lem20665 A x) (@lem20664 A x)). Qed.
Lemma lem8363042 (x : Prop) : (x = x) = True.
Proof. exact (@lem8363041 Prop x). Qed.
Lemma lem8363043 {_146290 _146293 : Type'} (f : _146293 -> _146290) (g : _146293 -> _146290) (lt2 : type1402 _146293) (_113787 : _146293) (x : _146293) : ((term767 _146290 _146293 f g lt2 _113787 x) = (term767 _146290 _146293 f g lt2 _113787 x)) = True.
Proof. exact (@lem8363042 (term767 _146290 _146293 f g lt2 _113787 x)). Qed.
Lemma lem8363044 {_146290 _146293 : Type'} (f : _146293 -> _146290) (g : _146293 -> _146290) (lt2 : type1402 _146293) (_113787 : _146293) (x : _146293) : ((term621 _146290 _146293 lt2 x f g _113787) = (term767 _146290 _146293 f g lt2 _113787 x)) = True.
Proof. exact (TRANS (@lem8363039 _146290 _146293 f g lt2 _113787 x) (@lem8363043 _146290 _146293 f g lt2 _113787 x)). Qed.
Lemma lem8363045 {_146290 _146293 : Type'} (f : _146293 -> _146290) (g : _146293 -> _146290) (lt2 : type1402 _146293) (_113787 : _146293) (x : _146293) : True = ((term621 _146290 _146293 lt2 x f g _113787) = (term767 _146290 _146293 f g lt2 _113787 x)).
Proof. exact (SYM (@lem8363044 _146290 _146293 f g lt2 _113787 x)). Qed.
Lemma lem8363046 {_146290 _146293 : Type'} (f : _146293 -> _146290) (g : _146293 -> _146290) (lt2 : type1402 _146293) (_113787 : _146293) (x : _146293) : (term621 _146290 _146293 lt2 x f g _113787) = (term767 _146290 _146293 f g lt2 _113787 x).
Proof. exact (EQ_MP (@lem8363045 _146290 _146293 f g lt2 _113787 x) (@lem0)). Qed.
Lemma lem8363047 {_146290 _146293 : Type'} (_113787 : _146293) (lt2 : type1402 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (f : _146293 -> _146290) (H' : type796 _146290 _146293) (g : _146293 -> _146290) (x : _146293) (h1 : term646 _146290 _146293 lt2 P G f H' g x) : term767 _146290 _146293 f g lt2 _113787 x.
Proof. exact (EQ_MP (@lem8363046 _146290 _146293 f g lt2 _113787 x) (@lem8361492 _146290 _146293 _113787 lt2 P G f H' g x h1)). Qed.
Lemma lem8363049 (b : Prop) (a : Prop) : (a \/ b) = (term754 b a).
Proof. exact (EQ_MP (@lem20682 b a) (@lem20764 b a)). Qed.
Lemma lem8363050 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (x : _146293) (f : _146293 -> _146290) (g : _146293 -> _146290) (_113787 : _146293) : (term767 _146290 _146293 f g lt2 _113787 x) = (term770 _146290 _146293 lt2 x f g _113787).
Proof. exact (@lem8363049 (term608 _146293 lt2 _113787 x) ((@I (_146293 -> _146290) f _113787) = (@I (_146293 -> _146290) g _113787))). Qed.
Lemma lem8363052 (a : Prop) : (term47 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem8363053 {_146293 : Type'} (lt2 : type1402 _146293) (_113787 : _146293) (x : _146293) : (term771 _146293 lt2 _113787 x) = (term586 _146293 lt2 _113787 x).
Proof. exact (@lem8363052 (term586 _146293 lt2 _113787 x)). Qed.
Lemma lem8363054 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem8363055 {_146293 : Type'} (lt2 : type1402 _146293) (_113787 : _146293) (x : _146293) : (term772 _146293 lt2 _113787 x) = (term773 _146293 lt2 _113787 x).
Proof. exact (MK_COMB (@lem8363054) (@lem8363053 _146293 lt2 _113787 x)). Qed.
Lemma lem8363056 {_146290 _146293 : Type'} (f : _146293 -> _146290) (g : _146293 -> _146290) (_113787 : _146293) : ((@I (_146293 -> _146290) f _113787) = (@I (_146293 -> _146290) g _113787)) = ((@I (_146293 -> _146290) f _113787) = (@I (_146293 -> _146290) g _113787)).
Proof. exact (eq_refl ((@I (_146293 -> _146290) f _113787) = (@I (_146293 -> _146290) g _113787))). Qed.
Lemma lem8363057 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (x : _146293) (f : _146293 -> _146290) (g : _146293 -> _146290) (_113787 : _146293) : (term770 _146290 _146293 lt2 x f g _113787) = (term774 _146290 _146293 lt2 x f g _113787).
Proof. exact (MK_COMB (@lem8363055 _146293 lt2 _113787 x) (@lem8363056 _146290 _146293 f g _113787)). Qed.
Lemma lem8363058 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (x : _146293) (f : _146293 -> _146290) (g : _146293 -> _146290) (_113787 : _146293) : (term767 _146290 _146293 f g lt2 _113787 x) = (term774 _146290 _146293 lt2 x f g _113787).
Proof. exact (TRANS (@lem8363050 _146290 _146293 lt2 x f g _113787) (@lem8363057 _146290 _146293 lt2 x f g _113787)). Qed.
Lemma lem8363061 {_146290 _146293 : Type'} (_113787 : _146293) (lt2 : type1402 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (f : _146293 -> _146290) (H' : type796 _146290 _146293) (g : _146293 -> _146290) (x : _146293) (h1 : term646 _146290 _146293 lt2 P G f H' g x) : term774 _146290 _146293 lt2 x f g _113787.
Proof. exact (EQ_MP (@lem8363058 _146290 _146293 lt2 x f g _113787) (@lem8363047 _146290 _146293 _113787 lt2 P G f H' g x h1)). Qed.
Lemma lem8363062 {_146290 _146293 : Type'} (_113787 : _146293) (lt2 : type1402 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (f : _146293 -> _146290) (H' : type796 _146290 _146293) (g : _146293 -> _146290) (x : _146293) (h1 : term646 _146290 _146293 lt2 P G f H' g x) : term774 _146290 _146293 lt2 x f g _113787.
Proof. exact (@lem8363061 _146290 _146293 _113787 lt2 P G f H' g x h1). Qed.
Lemma lem8363063 {_146290 _146293 : Type'} (z : type784 _146290 _146293) (lt2 : type1402 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (f : _146293 -> _146290) (H' : type796 _146290 _146293) (g : _146293 -> _146290) (x : _146293) (h1 : term646 _146290 _146293 lt2 P G f H' g x) : term775 _146290 _146293 lt2 z f g x.
Proof. exact (@lem8363062 _146290 _146293 (term668 _146290 _146293 z f g x) lt2 P G f H' g x h1). Qed.
Lemma lem8363066 {_146290 _146293 : Type'} (z : type784 _146290 _146293) (lt2 : type1402 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (f : _146293 -> _146290) (H' : type796 _146290 _146293) (g : _146293 -> _146290) (x : _146293) (h1 : term259 _146290 _146293 lt2 z P G H') (h2 : term631 _146290 _146293 f G g x) (h3 : term646 _146290 _146293 lt2 P G f H' g x) : (term671 _146290 _146293 z f g x) = (term674 _146290 _146293 z f g x).
Proof. exact (@lem8363063 _146290 _146293 z lt2 P G f H' g x h3 (@lem8363014 _146290 _146293 lt2 z P H' f G g x h1 h2)). Qed.
Lemma lem8363067 {_146290 _146293 : Type'} (z : type784 _146290 _146293) (lt2 : type1402 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (f : _146293 -> _146290) (H' : type796 _146290 _146293) (g : _146293 -> _146290) (x : _146293) (h1 : term259 _146290 _146293 lt2 z P G H') (h2 : term631 _146290 _146293 f G g x) (h3 : term646 _146290 _146293 lt2 P G f H' g x) : term776 _146290 _146293 z f g x.
Proof. exact (fun h0 : term678 _146290 _146293 z f g x => @lem8363066 _146290 _146293 z lt2 P G f H' g x h1 h2 h3). Qed.
Lemma lem8363069 (p : Prop) : (term748 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8363070 {_146290 _146293 : Type'} (z : type784 _146290 _146293) (f : _146293 -> _146290) (g : _146293 -> _146290) (x : _146293) : (term776 _146290 _146293 z f g x) = ((term671 _146290 _146293 z f g x) = (term674 _146290 _146293 z f g x)).
Proof. exact (@lem8363069 ((term671 _146290 _146293 z f g x) = (term674 _146290 _146293 z f g x))). Qed.
Lemma lem8363071 {_146290 _146293 : Type'} (z : type784 _146290 _146293) (lt2 : type1402 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (f : _146293 -> _146290) (H' : type796 _146290 _146293) (g : _146293 -> _146290) (x : _146293) (h1 : term259 _146290 _146293 lt2 z P G H') (h2 : term631 _146290 _146293 f G g x) (h3 : term646 _146290 _146293 lt2 P G f H' g x) : (term671 _146290 _146293 z f g x) = (term674 _146290 _146293 z f g x).
Proof. exact (EQ_MP (@lem8363070 _146290 _146293 z f g x) (@lem8363067 _146290 _146293 z lt2 P G f H' g x h1 h2 h3)). Qed.
Lemma lem8363077 (q : Prop) (p : Prop) : (p \/ q) = (q \/ p).
Proof. exact (proj1 (@lem827 (@el Prop) p q)). Qed.
Lemma lem8363078 {_146290 _146293 : Type'} (G : type797 _146290 _146293) (z : type784 _146290 _146293) (_113780 : _146293 -> _146290) (_113781 : _146293 -> _146290) (_113782 : _146293) : (term743 _146290 _146293 z _113780 G _113781 _113782) = (term813 _146290 _146293 G z _113780 _113781 _113782).
Proof. exact (@lem8363077 ((term587 _146290 _146293 G _113780 _113782) = (term587 _146290 _146293 G _113781 _113782)) (term678 _146290 _146293 z _113780 _113781 _113782)). Qed.
Lemma lem8363088 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8363089 {_146290 _146293 : Type'} (G : type797 _146290 _146293) (z : type784 _146290 _146293) (_113780 : _146293 -> _146290) (_113781 : _146293 -> _146290) (_113782 : _146293) : (term814 _146290 _146293 z _113780 G _113781 _113782) = (term815 _146290 _146293 G z _113780 _113781 _113782).
Proof. exact (MK_COMB (@lem8363088) (@lem8363078 _146290 _146293 G z _113780 _113781 _113782)). Qed.
Lemma lem8363099 {_146290 _146293 : Type'} (G : type797 _146290 _146293) (z : type784 _146290 _146293) (_113780 : _146293 -> _146290) (_113781 : _146293 -> _146290) (_113782 : _146293) : (term813 _146290 _146293 G z _113780 _113781 _113782) = (term813 _146290 _146293 G z _113780 _113781 _113782).
Proof. exact (eq_refl (term813 _146290 _146293 G z _113780 _113781 _113782)). Qed.
Lemma lem8363100 {_146290 _146293 : Type'} (G : type797 _146290 _146293) (z : type784 _146290 _146293) (_113780 : _146293 -> _146290) (_113781 : _146293 -> _146290) (_113782 : _146293) : ((term743 _146290 _146293 z _113780 G _113781 _113782) = (term813 _146290 _146293 G z _113780 _113781 _113782)) = ((term813 _146290 _146293 G z _113780 _113781 _113782) = (term813 _146290 _146293 G z _113780 _113781 _113782)).
Proof. exact (MK_COMB (@lem8363089 _146290 _146293 G z _113780 _113781 _113782) (@lem8363099 _146290 _146293 G z _113780 _113781 _113782)). Qed.
Lemma lem8363102 {A : Type'} (x : A) : (x = x) = True.
Proof. exact (EQ_MP (@lem20665 A x) (@lem20664 A x)). Qed.
Lemma lem8363103 (x : Prop) : (x = x) = True.
Proof. exact (@lem8363102 Prop x). Qed.
Lemma lem8363104 {_146290 _146293 : Type'} (G : type797 _146290 _146293) (z : type784 _146290 _146293) (_113780 : _146293 -> _146290) (_113781 : _146293 -> _146290) (_113782 : _146293) : ((term813 _146290 _146293 G z _113780 _113781 _113782) = (term813 _146290 _146293 G z _113780 _113781 _113782)) = True.
Proof. exact (@lem8363103 (term813 _146290 _146293 G z _113780 _113781 _113782)). Qed.
Lemma lem8363105 {_146290 _146293 : Type'} (G : type797 _146290 _146293) (z : type784 _146290 _146293) (_113780 : _146293 -> _146290) (_113781 : _146293 -> _146290) (_113782 : _146293) : ((term743 _146290 _146293 z _113780 G _113781 _113782) = (term813 _146290 _146293 G z _113780 _113781 _113782)) = True.
Proof. exact (TRANS (@lem8363100 _146290 _146293 G z _113780 _113781 _113782) (@lem8363104 _146290 _146293 G z _113780 _113781 _113782)). Qed.
Lemma lem8363106 {_146290 _146293 : Type'} (G : type797 _146290 _146293) (z : type784 _146290 _146293) (_113780 : _146293 -> _146290) (_113781 : _146293 -> _146290) (_113782 : _146293) : True = ((term743 _146290 _146293 z _113780 G _113781 _113782) = (term813 _146290 _146293 G z _113780 _113781 _113782)).
Proof. exact (SYM (@lem8363105 _146290 _146293 G z _113780 _113781 _113782)). Qed.
Lemma lem8363107 {_146290 _146293 : Type'} (G : type797 _146290 _146293) (z : type784 _146290 _146293) (_113780 : _146293 -> _146290) (_113781 : _146293 -> _146290) (_113782 : _146293) : (term743 _146290 _146293 z _113780 G _113781 _113782) = (term813 _146290 _146293 G z _113780 _113781 _113782).
Proof. exact (EQ_MP (@lem8363106 _146290 _146293 G z _113780 _113781 _113782) (@lem0)). Qed.
Lemma lem8363108 {_146290 _146293 : Type'} (_113780 : _146293 -> _146290) (_113781 : _146293 -> _146290) (_113782 : _146293) (lt2 : type1402 _146293) (z : type784 _146290 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (H' : type796 _146290 _146293) (h1 : term259 _146290 _146293 lt2 z P G H') : term813 _146290 _146293 G z _113780 _113781 _113782.
Proof. exact (EQ_MP (@lem8363107 _146290 _146293 G z _113780 _113781 _113782) (@lem8361518 _146290 _146293 _113780 _113781 _113782 lt2 z P G H' h1)). Qed.
Lemma lem8363110 (b : Prop) (a : Prop) : (a \/ b) = (term754 b a).
Proof. exact (EQ_MP (@lem20682 b a) (@lem20764 b a)). Qed.
Lemma lem8363111 {_146290 _146293 : Type'} (z : type784 _146290 _146293) (_113780 : _146293 -> _146290) (G : type797 _146290 _146293) (_113781 : _146293 -> _146290) (_113782 : _146293) : (term813 _146290 _146293 G z _113780 _113781 _113782) = (term816 _146290 _146293 z _113780 G _113781 _113782).
Proof. exact (@lem8363110 (term678 _146290 _146293 z _113780 _113781 _113782) ((term587 _146290 _146293 G _113780 _113782) = (term587 _146290 _146293 G _113781 _113782))). Qed.
Lemma lem8363113 (a : Prop) : (term47 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem8363114 {_146290 _146293 : Type'} (z : type784 _146290 _146293) (_113780 : _146293 -> _146290) (_113781 : _146293 -> _146290) (_113782 : _146293) : (term786 _146290 _146293 z _113780 _113781 _113782) = ((term671 _146290 _146293 z _113780 _113781 _113782) = (term674 _146290 _146293 z _113780 _113781 _113782)).
Proof. exact (@lem8363113 ((term671 _146290 _146293 z _113780 _113781 _113782) = (term674 _146290 _146293 z _113780 _113781 _113782))). Qed.
Lemma lem8363115 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem8363116 {_146290 _146293 : Type'} (z : type784 _146290 _146293) (_113780 : _146293 -> _146290) (_113781 : _146293 -> _146290) (_113782 : _146293) : (term817 _146290 _146293 z _113780 _113781 _113782) = (term818 _146290 _146293 z _113780 _113781 _113782).
Proof. exact (MK_COMB (@lem8363115) (@lem8363114 _146290 _146293 z _113780 _113781 _113782)). Qed.
Lemma lem8363117 {_146290 _146293 : Type'} (_113780 : _146293 -> _146290) (G : type797 _146290 _146293) (_113781 : _146293 -> _146290) (_113782 : _146293) : ((term587 _146290 _146293 G _113780 _113782) = (term587 _146290 _146293 G _113781 _113782)) = ((term587 _146290 _146293 G _113780 _113782) = (term587 _146290 _146293 G _113781 _113782)).
Proof. exact (eq_refl ((term587 _146290 _146293 G _113780 _113782) = (term587 _146290 _146293 G _113781 _113782))). Qed.
Lemma lem8363118 {_146290 _146293 : Type'} (z : type784 _146290 _146293) (_113780 : _146293 -> _146290) (G : type797 _146290 _146293) (_113781 : _146293 -> _146290) (_113782 : _146293) : (term816 _146290 _146293 z _113780 G _113781 _113782) = (term819 _146290 _146293 z _113780 G _113781 _113782).
Proof. exact (MK_COMB (@lem8363116 _146290 _146293 z _113780 _113781 _113782) (@lem8363117 _146290 _146293 _113780 G _113781 _113782)). Qed.
Lemma lem8363119 {_146290 _146293 : Type'} (z : type784 _146290 _146293) (_113780 : _146293 -> _146290) (G : type797 _146290 _146293) (_113781 : _146293 -> _146290) (_113782 : _146293) : (term813 _146290 _146293 G z _113780 _113781 _113782) = (term819 _146290 _146293 z _113780 G _113781 _113782).
Proof. exact (TRANS (@lem8363111 _146290 _146293 z _113780 G _113781 _113782) (@lem8363118 _146290 _146293 z _113780 G _113781 _113782)). Qed.
Lemma lem8363122 {_146290 _146293 : Type'} (_113780 : _146293 -> _146290) (_113781 : _146293 -> _146290) (_113782 : _146293) (lt2 : type1402 _146293) (z : type784 _146290 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (H' : type796 _146290 _146293) (h1 : term259 _146290 _146293 lt2 z P G H') : term819 _146290 _146293 z _113780 G _113781 _113782.
Proof. exact (EQ_MP (@lem8363119 _146290 _146293 z _113780 G _113781 _113782) (@lem8363108 _146290 _146293 _113780 _113781 _113782 lt2 z P G H' h1)). Qed.
Lemma lem8363123 {_146290 _146293 : Type'} (_113780 : _146293 -> _146290) (_113781 : _146293 -> _146290) (_113782 : _146293) (lt2 : type1402 _146293) (z : type784 _146290 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (H' : type796 _146290 _146293) (h1 : term259 _146290 _146293 lt2 z P G H') : term819 _146290 _146293 z _113780 G _113781 _113782.
Proof. exact (@lem8363122 _146290 _146293 _113780 _113781 _113782 lt2 z P G H' h1). Qed.
Lemma lem8363124 {_146290 _146293 : Type'} (f : _146293 -> _146290) (g : _146293 -> _146290) (x : _146293) (lt2 : type1402 _146293) (z : type784 _146290 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (H' : type796 _146290 _146293) (h1 : term259 _146290 _146293 lt2 z P G H') : term819 _146290 _146293 z f G g x.
Proof. exact (@lem8363123 _146290 _146293 f g x lt2 z P G H' h1). Qed.
Lemma lem8363127 {_146290 _146293 : Type'} (z : type784 _146290 _146293) (lt2 : type1402 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (f : _146293 -> _146290) (H' : type796 _146290 _146293) (g : _146293 -> _146290) (x : _146293) (h1 : term259 _146290 _146293 lt2 z P G H') (h2 : term631 _146290 _146293 f G g x) (h3 : term646 _146290 _146293 lt2 P G f H' g x) : (term587 _146290 _146293 G f x) = (term587 _146290 _146293 G g x).
Proof. exact (@lem8363124 _146290 _146293 f g x lt2 z P G H' h1 (@lem8363071 _146290 _146293 z lt2 P G f H' g x h1 h2 h3)). Qed.
Lemma lem8363128 {_146290 _146293 : Type'} (z : type784 _146290 _146293) (lt2 : type1402 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (f : _146293 -> _146290) (H' : type796 _146290 _146293) (g : _146293 -> _146290) (x : _146293) (h1 : term259 _146290 _146293 lt2 z P G H') (h2 : term646 _146290 _146293 lt2 P G f H' g x) : term820 _146290 _146293 f G g x.
Proof. exact (fun h0 : term631 _146290 _146293 f G g x => @lem8363127 _146290 _146293 z lt2 P G f H' g x h1 h0 h2). Qed.
Lemma lem8363130 (p : Prop) : (term748 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8363131 {_146290 _146293 : Type'} (f : _146293 -> _146290) (G : type797 _146290 _146293) (g : _146293 -> _146290) (x : _146293) : (term820 _146290 _146293 f G g x) = ((term587 _146290 _146293 G f x) = (term587 _146290 _146293 G g x)).
Proof. exact (@lem8363130 ((term587 _146290 _146293 G f x) = (term587 _146290 _146293 G g x))). Qed.
Lemma lem8363132 {_146290 _146293 : Type'} (z : type784 _146290 _146293) (lt2 : type1402 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (f : _146293 -> _146290) (H' : type796 _146290 _146293) (g : _146293 -> _146290) (x : _146293) (h1 : term259 _146290 _146293 lt2 z P G H') (h2 : term646 _146290 _146293 lt2 P G f H' g x) : (term587 _146290 _146293 G f x) = (term587 _146290 _146293 G g x).
Proof. exact (EQ_MP (@lem8363131 _146290 _146293 f G g x) (@lem8363128 _146290 _146293 z lt2 P G f H' g x h1 h2)). Qed.
Lemma lem8363135 (p : Prop) : (~ p) = (p -> False).
Proof. exact (EQ_MP (@lem21021 p) (@lem0)). Qed.
Lemma lem8363137 {_146290 _146293 : Type'} (f : _146293 -> _146290) (G : type797 _146290 _146293) (g : _146293 -> _146290) (x : _146293) : (term631 _146290 _146293 f G g x) = (term821 _146290 _146293 f G g x).
Proof. exact (@lem8363135 ((term587 _146290 _146293 G f x) = (term587 _146290 _146293 G g x))). Qed.
Lemma lem8363140 {_146290 _146293 : Type'} (f : _146293 -> _146290) (G : type797 _146290 _146293) (g : _146293 -> _146290) (x : _146293) (h1 : term631 _146290 _146293 f G g x) : term821 _146290 _146293 f G g x.
Proof. exact (EQ_MP (@lem8363137 _146290 _146293 f G g x) (@lem8361494 _146290 _146293 f G g x h1)). Qed.
Lemma lem8363143 {_146290 _146293 : Type'} (z : type784 _146290 _146293) (lt2 : type1402 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (f : _146293 -> _146290) (H' : type796 _146290 _146293) (g : _146293 -> _146290) (x : _146293) (h1 : term259 _146290 _146293 lt2 z P G H') (h2 : term631 _146290 _146293 f G g x) (h3 : term646 _146290 _146293 lt2 P G f H' g x) : False.
Proof. exact (@lem8363140 _146290 _146293 f G g x h2 (@lem8363132 _146290 _146293 z lt2 P G f H' g x h1 h3)). Qed.
Lemma lem8363144 {_146290 _146293 : Type'} (z : type784 _146290 _146293) (lt2 : type1402 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (f : _146293 -> _146290) (H' : type796 _146290 _146293) (g : _146293 -> _146290) (x : _146293) (h1 : term259 _146290 _146293 lt2 z P G H') (h2 : term631 _146290 _146293 f G g x) (h3 : term646 _146290 _146293 lt2 P G f H' g x) : term750.
Proof. exact (fun h0 : ~ False => @lem8363143 _146290 _146293 z lt2 P G f H' g x h1 h2 h3). Qed.
Lemma lem8363146 (p : Prop) : (term748 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8363147 : term750 = False.
Proof. exact (@lem8363146 False). Qed.
Lemma lem8363148 {_146290 _146293 : Type'} (z : type784 _146290 _146293) (lt2 : type1402 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (f : _146293 -> _146290) (H' : type796 _146290 _146293) (g : _146293 -> _146290) (x : _146293) (h1 : term259 _146290 _146293 lt2 z P G H') (h2 : term631 _146290 _146293 f G g x) (h3 : term646 _146290 _146293 lt2 P G f H' g x) : False.
Proof. exact (EQ_MP (@lem8363147) (@lem8363144 _146290 _146293 z lt2 P G f H' g x h1 h2 h3)). Qed.
Lemma lem8363316 {_146290 _146293 : Type'} (f : _146293 -> _146290) (H' : type796 _146290 _146293) (g : _146293 -> _146290) (x : _146293) (h1 : term617 _146290 _146293 f H' g x) : term617 _146290 _146293 f H' g x.
Proof. exact (h1). Qed.
Lemma lem8363317 {_146290 _146293 : Type'} (f : _146293 -> _146290) (H' : type796 _146290 _146293) (g : _146293 -> _146290) (x : _146293) (h1 : term617 _146290 _146293 f H' g x) : term822 _146290 _146293 f H' g x.
Proof. exact (fun h0 : (term615 _146290 _146293 H' f x) = (term615 _146290 _146293 H' g x) => @lem8363316 _146290 _146293 f H' g x h1). Qed.
Lemma lem8363319 (p : Prop) : (term753 p) = (~ p).
Proof. exact (EQ_MP (@lem21028 p) (@lem21107 p)). Qed.
Lemma lem8363320 {_146290 _146293 : Type'} (f : _146293 -> _146290) (H' : type796 _146290 _146293) (g : _146293 -> _146290) (x : _146293) : (term822 _146290 _146293 f H' g x) = (term617 _146290 _146293 f H' g x).
Proof. exact (@lem8363319 ((term615 _146290 _146293 H' f x) = (term615 _146290 _146293 H' g x))). Qed.
Lemma lem8363321 {_146290 _146293 : Type'} (f : _146293 -> _146290) (H' : type796 _146290 _146293) (g : _146293 -> _146290) (x : _146293) (h1 : term617 _146290 _146293 f H' g x) : term617 _146290 _146293 f H' g x.
Proof. exact (EQ_MP (@lem8363320 _146290 _146293 f H' g x) (@lem8363317 _146290 _146293 f H' g x h1)). Qed.
Lemma lem8363323 (b : Prop) (a : Prop) : (a \/ b) = (term754 b a).
Proof. exact (EQ_MP (@lem20682 b a) (@lem20764 b a)). Qed.
Lemma lem8363326 {_146290 _146293 : Type'} (H' : type796 _146290 _146293) (lt2 : type1402 _146293) (z : type784 _146290 _146293) (_113791 : _146293 -> _146290) (_113792 : _146293 -> _146290) (_113793 : _146293) : (term744 _146290 _146293 lt2 z _113791 H' _113792 _113793) = (term823 _146290 _146293 H' lt2 z _113791 _113792 _113793).
Proof. exact (@lem8363323 ((term615 _146290 _146293 H' _113791 _113793) = (term615 _146290 _146293 H' _113792 _113793)) (term685 _146290 _146293 lt2 z _113791 _113792 _113793)). Qed.
Lemma lem8363329 {_146290 _146293 : Type'} (_113791 : _146293 -> _146290) (_113792 : _146293 -> _146290) (_113793 : _146293) (lt2 : type1402 _146293) (z : type784 _146290 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (H' : type796 _146290 _146293) (h1 : term259 _146290 _146293 lt2 z P G H') : term823 _146290 _146293 H' lt2 z _113791 _113792 _113793.
Proof. exact (EQ_MP (@lem8363326 _146290 _146293 H' lt2 z _113791 _113792 _113793) (@lem8361598 _146290 _146293 _113791 _113792 _113793 lt2 z P G H' h1)). Qed.
Lemma lem8363330 {_146290 _146293 : Type'} (_113791 : _146293 -> _146290) (_113792 : _146293 -> _146290) (_113793 : _146293) (lt2 : type1402 _146293) (z : type784 _146290 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (H' : type796 _146290 _146293) (h1 : term259 _146290 _146293 lt2 z P G H') : term823 _146290 _146293 H' lt2 z _113791 _113792 _113793.
Proof. exact (@lem8363329 _146290 _146293 _113791 _113792 _113793 lt2 z P G H' h1). Qed.
Lemma lem8363331 {_146290 _146293 : Type'} (f : _146293 -> _146290) (g : _146293 -> _146290) (x : _146293) (lt2 : type1402 _146293) (z : type784 _146290 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (H' : type796 _146290 _146293) (h1 : term259 _146290 _146293 lt2 z P G H') : term823 _146290 _146293 H' lt2 z f g x.
Proof. exact (@lem8363330 _146290 _146293 f g x lt2 z P G H' h1). Qed.
Lemma lem8363334 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (z : type784 _146290 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (f : _146293 -> _146290) (H' : type796 _146290 _146293) (g : _146293 -> _146290) (x : _146293) (h1 : term259 _146290 _146293 lt2 z P G H') (h2 : term617 _146290 _146293 f H' g x) : term685 _146290 _146293 lt2 z f g x.
Proof. exact (@lem8363331 _146290 _146293 f g x lt2 z P G H' h1 (@lem8363321 _146290 _146293 f H' g x h2)). Qed.
Lemma lem8363335 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (z : type784 _146290 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (f : _146293 -> _146290) (H' : type796 _146290 _146293) (g : _146293 -> _146290) (x : _146293) (h1 : term259 _146290 _146293 lt2 z P G H') (h2 : term617 _146290 _146293 f H' g x) : term765 _146290 _146293 lt2 z f g x.
Proof. exact (fun h0 : term766 _146290 _146293 lt2 z f g x => @lem8363334 _146290 _146293 lt2 z P G f H' g x h1 h2). Qed.
Lemma lem8363337 (p : Prop) : (term748 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8363338 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (z : type784 _146290 _146293) (f : _146293 -> _146290) (g : _146293 -> _146290) (x : _146293) : (term765 _146290 _146293 lt2 z f g x) = (term685 _146290 _146293 lt2 z f g x).
Proof. exact (@lem8363337 (term685 _146290 _146293 lt2 z f g x)). Qed.
Lemma lem8363339 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (z : type784 _146290 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (f : _146293 -> _146290) (H' : type796 _146290 _146293) (g : _146293 -> _146290) (x : _146293) (h1 : term259 _146290 _146293 lt2 z P G H') (h2 : term617 _146290 _146293 f H' g x) : term685 _146290 _146293 lt2 z f g x.
Proof. exact (EQ_MP (@lem8363338 _146290 _146293 lt2 z f g x) (@lem8363335 _146290 _146293 lt2 z P G f H' g x h1 h2)). Qed.
Lemma lem8363345 (q : Prop) (p : Prop) : (p \/ q) = (q \/ p).
Proof. exact (proj1 (@lem827 (@el Prop) p q)). Qed.
Lemma lem8363346 {_146290 _146293 : Type'} (f : _146293 -> _146290) (g : _146293 -> _146290) (lt2 : type1402 _146293) (_113798 : _146293) (x : _146293) : (term621 _146290 _146293 lt2 x f g _113798) = (term767 _146290 _146293 f g lt2 _113798 x).
Proof. exact (@lem8363345 ((@I (_146293 -> _146290) f _113798) = (@I (_146293 -> _146290) g _113798)) (term608 _146293 lt2 _113798 x)). Qed.
Lemma lem8363354 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8363355 {_146290 _146293 : Type'} (f : _146293 -> _146290) (g : _146293 -> _146290) (lt2 : type1402 _146293) (_113798 : _146293) (x : _146293) : (term768 _146290 _146293 lt2 x f g _113798) = (term769 _146290 _146293 f g lt2 _113798 x).
Proof. exact (MK_COMB (@lem8363354) (@lem8363346 _146290 _146293 f g lt2 _113798 x)). Qed.
Lemma lem8363363 {_146290 _146293 : Type'} (f : _146293 -> _146290) (g : _146293 -> _146290) (lt2 : type1402 _146293) (_113798 : _146293) (x : _146293) : (term767 _146290 _146293 f g lt2 _113798 x) = (term767 _146290 _146293 f g lt2 _113798 x).
Proof. exact (eq_refl (term767 _146290 _146293 f g lt2 _113798 x)). Qed.
Lemma lem8363364 {_146290 _146293 : Type'} (f : _146293 -> _146290) (g : _146293 -> _146290) (lt2 : type1402 _146293) (_113798 : _146293) (x : _146293) : ((term621 _146290 _146293 lt2 x f g _113798) = (term767 _146290 _146293 f g lt2 _113798 x)) = ((term767 _146290 _146293 f g lt2 _113798 x) = (term767 _146290 _146293 f g lt2 _113798 x)).
Proof. exact (MK_COMB (@lem8363355 _146290 _146293 f g lt2 _113798 x) (@lem8363363 _146290 _146293 f g lt2 _113798 x)). Qed.
Lemma lem8363366 {A : Type'} (x : A) : (x = x) = True.
Proof. exact (EQ_MP (@lem20665 A x) (@lem20664 A x)). Qed.
Lemma lem8363367 (x : Prop) : (x = x) = True.
Proof. exact (@lem8363366 Prop x). Qed.
Lemma lem8363368 {_146290 _146293 : Type'} (f : _146293 -> _146290) (g : _146293 -> _146290) (lt2 : type1402 _146293) (_113798 : _146293) (x : _146293) : ((term767 _146290 _146293 f g lt2 _113798 x) = (term767 _146290 _146293 f g lt2 _113798 x)) = True.
Proof. exact (@lem8363367 (term767 _146290 _146293 f g lt2 _113798 x)). Qed.
Lemma lem8363369 {_146290 _146293 : Type'} (f : _146293 -> _146290) (g : _146293 -> _146290) (lt2 : type1402 _146293) (_113798 : _146293) (x : _146293) : ((term621 _146290 _146293 lt2 x f g _113798) = (term767 _146290 _146293 f g lt2 _113798 x)) = True.
Proof. exact (TRANS (@lem8363364 _146290 _146293 f g lt2 _113798 x) (@lem8363368 _146290 _146293 f g lt2 _113798 x)). Qed.
Lemma lem8363370 {_146290 _146293 : Type'} (f : _146293 -> _146290) (g : _146293 -> _146290) (lt2 : type1402 _146293) (_113798 : _146293) (x : _146293) : True = ((term621 _146290 _146293 lt2 x f g _113798) = (term767 _146290 _146293 f g lt2 _113798 x)).
Proof. exact (SYM (@lem8363369 _146290 _146293 f g lt2 _113798 x)). Qed.
Lemma lem8363371 {_146290 _146293 : Type'} (f : _146293 -> _146290) (g : _146293 -> _146290) (lt2 : type1402 _146293) (_113798 : _146293) (x : _146293) : (term621 _146290 _146293 lt2 x f g _113798) = (term767 _146290 _146293 f g lt2 _113798 x).
Proof. exact (EQ_MP (@lem8363370 _146290 _146293 f g lt2 _113798 x) (@lem0)). Qed.
Lemma lem8363372 {_146290 _146293 : Type'} (_113798 : _146293) (lt2 : type1402 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (f : _146293 -> _146290) (H' : type796 _146290 _146293) (g : _146293 -> _146290) (x : _146293) (h1 : term646 _146290 _146293 lt2 P G f H' g x) : term767 _146290 _146293 f g lt2 _113798 x.
Proof. exact (EQ_MP (@lem8363371 _146290 _146293 f g lt2 _113798 x) (@lem8361590 _146290 _146293 _113798 lt2 P G f H' g x h1)). Qed.
Lemma lem8363374 (b : Prop) (a : Prop) : (a \/ b) = (term754 b a).
Proof. exact (EQ_MP (@lem20682 b a) (@lem20764 b a)). Qed.
Lemma lem8363375 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (x : _146293) (f : _146293 -> _146290) (g : _146293 -> _146290) (_113798 : _146293) : (term767 _146290 _146293 f g lt2 _113798 x) = (term770 _146290 _146293 lt2 x f g _113798).
Proof. exact (@lem8363374 (term608 _146293 lt2 _113798 x) ((@I (_146293 -> _146290) f _113798) = (@I (_146293 -> _146290) g _113798))). Qed.
Lemma lem8363377 (a : Prop) : (term47 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem8363378 {_146293 : Type'} (lt2 : type1402 _146293) (_113798 : _146293) (x : _146293) : (term771 _146293 lt2 _113798 x) = (term586 _146293 lt2 _113798 x).
Proof. exact (@lem8363377 (term586 _146293 lt2 _113798 x)). Qed.
Lemma lem8363379 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem8363380 {_146293 : Type'} (lt2 : type1402 _146293) (_113798 : _146293) (x : _146293) : (term772 _146293 lt2 _113798 x) = (term773 _146293 lt2 _113798 x).
Proof. exact (MK_COMB (@lem8363379) (@lem8363378 _146293 lt2 _113798 x)). Qed.
Lemma lem8363381 {_146290 _146293 : Type'} (f : _146293 -> _146290) (g : _146293 -> _146290) (_113798 : _146293) : ((@I (_146293 -> _146290) f _113798) = (@I (_146293 -> _146290) g _113798)) = ((@I (_146293 -> _146290) f _113798) = (@I (_146293 -> _146290) g _113798)).
Proof. exact (eq_refl ((@I (_146293 -> _146290) f _113798) = (@I (_146293 -> _146290) g _113798))). Qed.
Lemma lem8363382 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (x : _146293) (f : _146293 -> _146290) (g : _146293 -> _146290) (_113798 : _146293) : (term770 _146290 _146293 lt2 x f g _113798) = (term774 _146290 _146293 lt2 x f g _113798).
Proof. exact (MK_COMB (@lem8363380 _146293 lt2 _113798 x) (@lem8363381 _146290 _146293 f g _113798)). Qed.
Lemma lem8363383 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (x : _146293) (f : _146293 -> _146290) (g : _146293 -> _146290) (_113798 : _146293) : (term767 _146290 _146293 f g lt2 _113798 x) = (term774 _146290 _146293 lt2 x f g _113798).
Proof. exact (TRANS (@lem8363375 _146290 _146293 lt2 x f g _113798) (@lem8363382 _146290 _146293 lt2 x f g _113798)). Qed.
Lemma lem8363386 {_146290 _146293 : Type'} (_113798 : _146293) (lt2 : type1402 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (f : _146293 -> _146290) (H' : type796 _146290 _146293) (g : _146293 -> _146290) (x : _146293) (h1 : term646 _146290 _146293 lt2 P G f H' g x) : term774 _146290 _146293 lt2 x f g _113798.
Proof. exact (EQ_MP (@lem8363383 _146290 _146293 lt2 x f g _113798) (@lem8363372 _146290 _146293 _113798 lt2 P G f H' g x h1)). Qed.
Lemma lem8363387 {_146290 _146293 : Type'} (_113798 : _146293) (lt2 : type1402 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (f : _146293 -> _146290) (H' : type796 _146290 _146293) (g : _146293 -> _146290) (x : _146293) (h1 : term646 _146290 _146293 lt2 P G f H' g x) : term774 _146290 _146293 lt2 x f g _113798.
Proof. exact (@lem8363386 _146290 _146293 _113798 lt2 P G f H' g x h1). Qed.
Lemma lem8363388 {_146290 _146293 : Type'} (z : type784 _146290 _146293) (lt2 : type1402 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (f : _146293 -> _146290) (H' : type796 _146290 _146293) (g : _146293 -> _146290) (x : _146293) (h1 : term646 _146290 _146293 lt2 P G f H' g x) : term775 _146290 _146293 lt2 z f g x.
Proof. exact (@lem8363387 _146290 _146293 (term668 _146290 _146293 z f g x) lt2 P G f H' g x h1). Qed.
Lemma lem8363391 {_146290 _146293 : Type'} (z : type784 _146290 _146293) (lt2 : type1402 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (f : _146293 -> _146290) (H' : type796 _146290 _146293) (g : _146293 -> _146290) (x : _146293) (h1 : term259 _146290 _146293 lt2 z P G H') (h2 : term617 _146290 _146293 f H' g x) (h3 : term646 _146290 _146293 lt2 P G f H' g x) : (term671 _146290 _146293 z f g x) = (term674 _146290 _146293 z f g x).
Proof. exact (@lem8363388 _146290 _146293 z lt2 P G f H' g x h3 (@lem8363339 _146290 _146293 lt2 z P G f H' g x h1 h2)). Qed.
Lemma lem8363392 {_146290 _146293 : Type'} (z : type784 _146290 _146293) (lt2 : type1402 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (f : _146293 -> _146290) (H' : type796 _146290 _146293) (g : _146293 -> _146290) (x : _146293) (h1 : term259 _146290 _146293 lt2 z P G H') (h2 : term617 _146290 _146293 f H' g x) (h3 : term646 _146290 _146293 lt2 P G f H' g x) : term776 _146290 _146293 z f g x.
Proof. exact (fun h0 : term678 _146290 _146293 z f g x => @lem8363391 _146290 _146293 z lt2 P G f H' g x h1 h2 h3). Qed.
Lemma lem8363394 (p : Prop) : (term748 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8363395 {_146290 _146293 : Type'} (z : type784 _146290 _146293) (f : _146293 -> _146290) (g : _146293 -> _146290) (x : _146293) : (term776 _146290 _146293 z f g x) = ((term671 _146290 _146293 z f g x) = (term674 _146290 _146293 z f g x)).
Proof. exact (@lem8363394 ((term671 _146290 _146293 z f g x) = (term674 _146290 _146293 z f g x))). Qed.
Lemma lem8363396 {_146290 _146293 : Type'} (z : type784 _146290 _146293) (lt2 : type1402 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (f : _146293 -> _146290) (H' : type796 _146290 _146293) (g : _146293 -> _146290) (x : _146293) (h1 : term259 _146290 _146293 lt2 z P G H') (h2 : term617 _146290 _146293 f H' g x) (h3 : term646 _146290 _146293 lt2 P G f H' g x) : (term671 _146290 _146293 z f g x) = (term674 _146290 _146293 z f g x).
Proof. exact (EQ_MP (@lem8363395 _146290 _146293 z f g x) (@lem8363392 _146290 _146293 z lt2 P G f H' g x h1 h2 h3)). Qed.
Lemma lem8363402 (q : Prop) (p : Prop) : (p \/ q) = (q \/ p).
Proof. exact (proj1 (@lem827 (@el Prop) p q)). Qed.
Lemma lem8363403 {_146290 _146293 : Type'} (H' : type796 _146290 _146293) (z : type784 _146290 _146293) (_113791 : _146293 -> _146290) (_113792 : _146293 -> _146290) (_113793 : _146293) : (term745 _146290 _146293 z _113791 H' _113792 _113793) = (term824 _146290 _146293 H' z _113791 _113792 _113793).
Proof. exact (@lem8363402 ((term615 _146290 _146293 H' _113791 _113793) = (term615 _146290 _146293 H' _113792 _113793)) (term678 _146290 _146293 z _113791 _113792 _113793)). Qed.
Lemma lem8363413 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8363414 {_146290 _146293 : Type'} (H' : type796 _146290 _146293) (z : type784 _146290 _146293) (_113791 : _146293 -> _146290) (_113792 : _146293 -> _146290) (_113793 : _146293) : (term825 _146290 _146293 z _113791 H' _113792 _113793) = (term826 _146290 _146293 H' z _113791 _113792 _113793).
Proof. exact (MK_COMB (@lem8363413) (@lem8363403 _146290 _146293 H' z _113791 _113792 _113793)). Qed.
Lemma lem8363424 {_146290 _146293 : Type'} (H' : type796 _146290 _146293) (z : type784 _146290 _146293) (_113791 : _146293 -> _146290) (_113792 : _146293 -> _146290) (_113793 : _146293) : (term824 _146290 _146293 H' z _113791 _113792 _113793) = (term824 _146290 _146293 H' z _113791 _113792 _113793).
Proof. exact (eq_refl (term824 _146290 _146293 H' z _113791 _113792 _113793)). Qed.
Lemma lem8363425 {_146290 _146293 : Type'} (H' : type796 _146290 _146293) (z : type784 _146290 _146293) (_113791 : _146293 -> _146290) (_113792 : _146293 -> _146290) (_113793 : _146293) : ((term745 _146290 _146293 z _113791 H' _113792 _113793) = (term824 _146290 _146293 H' z _113791 _113792 _113793)) = ((term824 _146290 _146293 H' z _113791 _113792 _113793) = (term824 _146290 _146293 H' z _113791 _113792 _113793)).
Proof. exact (MK_COMB (@lem8363414 _146290 _146293 H' z _113791 _113792 _113793) (@lem8363424 _146290 _146293 H' z _113791 _113792 _113793)). Qed.
Lemma lem8363427 {A : Type'} (x : A) : (x = x) = True.
Proof. exact (EQ_MP (@lem20665 A x) (@lem20664 A x)). Qed.
Lemma lem8363428 (x : Prop) : (x = x) = True.
Proof. exact (@lem8363427 Prop x). Qed.
Lemma lem8363429 {_146290 _146293 : Type'} (H' : type796 _146290 _146293) (z : type784 _146290 _146293) (_113791 : _146293 -> _146290) (_113792 : _146293 -> _146290) (_113793 : _146293) : ((term824 _146290 _146293 H' z _113791 _113792 _113793) = (term824 _146290 _146293 H' z _113791 _113792 _113793)) = True.
Proof. exact (@lem8363428 (term824 _146290 _146293 H' z _113791 _113792 _113793)). Qed.
Lemma lem8363430 {_146290 _146293 : Type'} (H' : type796 _146290 _146293) (z : type784 _146290 _146293) (_113791 : _146293 -> _146290) (_113792 : _146293 -> _146290) (_113793 : _146293) : ((term745 _146290 _146293 z _113791 H' _113792 _113793) = (term824 _146290 _146293 H' z _113791 _113792 _113793)) = True.
Proof. exact (TRANS (@lem8363425 _146290 _146293 H' z _113791 _113792 _113793) (@lem8363429 _146290 _146293 H' z _113791 _113792 _113793)). Qed.
Lemma lem8363431 {_146290 _146293 : Type'} (H' : type796 _146290 _146293) (z : type784 _146290 _146293) (_113791 : _146293 -> _146290) (_113792 : _146293 -> _146290) (_113793 : _146293) : True = ((term745 _146290 _146293 z _113791 H' _113792 _113793) = (term824 _146290 _146293 H' z _113791 _113792 _113793)).
Proof. exact (SYM (@lem8363430 _146290 _146293 H' z _113791 _113792 _113793)). Qed.
Lemma lem8363432 {_146290 _146293 : Type'} (H' : type796 _146290 _146293) (z : type784 _146290 _146293) (_113791 : _146293 -> _146290) (_113792 : _146293 -> _146290) (_113793 : _146293) : (term745 _146290 _146293 z _113791 H' _113792 _113793) = (term824 _146290 _146293 H' z _113791 _113792 _113793).
Proof. exact (EQ_MP (@lem8363431 _146290 _146293 H' z _113791 _113792 _113793) (@lem0)). Qed.
Lemma lem8363433 {_146290 _146293 : Type'} (_113791 : _146293 -> _146290) (_113792 : _146293 -> _146290) (_113793 : _146293) (lt2 : type1402 _146293) (z : type784 _146290 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (H' : type796 _146290 _146293) (h1 : term259 _146290 _146293 lt2 z P G H') : term824 _146290 _146293 H' z _113791 _113792 _113793.
Proof. exact (EQ_MP (@lem8363432 _146290 _146293 H' z _113791 _113792 _113793) (@lem8361604 _146290 _146293 _113791 _113792 _113793 lt2 z P G H' h1)). Qed.
Lemma lem8363435 (b : Prop) (a : Prop) : (a \/ b) = (term754 b a).
Proof. exact (EQ_MP (@lem20682 b a) (@lem20764 b a)). Qed.
Lemma lem8363436 {_146290 _146293 : Type'} (z : type784 _146290 _146293) (_113791 : _146293 -> _146290) (H' : type796 _146290 _146293) (_113792 : _146293 -> _146290) (_113793 : _146293) : (term824 _146290 _146293 H' z _113791 _113792 _113793) = (term827 _146290 _146293 z _113791 H' _113792 _113793).
Proof. exact (@lem8363435 (term678 _146290 _146293 z _113791 _113792 _113793) ((term615 _146290 _146293 H' _113791 _113793) = (term615 _146290 _146293 H' _113792 _113793))). Qed.
Lemma lem8363438 (a : Prop) : (term47 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem8363439 {_146290 _146293 : Type'} (z : type784 _146290 _146293) (_113791 : _146293 -> _146290) (_113792 : _146293 -> _146290) (_113793 : _146293) : (term786 _146290 _146293 z _113791 _113792 _113793) = ((term671 _146290 _146293 z _113791 _113792 _113793) = (term674 _146290 _146293 z _113791 _113792 _113793)).
Proof. exact (@lem8363438 ((term671 _146290 _146293 z _113791 _113792 _113793) = (term674 _146290 _146293 z _113791 _113792 _113793))). Qed.
Lemma lem8363440 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem8363441 {_146290 _146293 : Type'} (z : type784 _146290 _146293) (_113791 : _146293 -> _146290) (_113792 : _146293 -> _146290) (_113793 : _146293) : (term817 _146290 _146293 z _113791 _113792 _113793) = (term818 _146290 _146293 z _113791 _113792 _113793).
Proof. exact (MK_COMB (@lem8363440) (@lem8363439 _146290 _146293 z _113791 _113792 _113793)). Qed.
Lemma lem8363442 {_146290 _146293 : Type'} (_113791 : _146293 -> _146290) (H' : type796 _146290 _146293) (_113792 : _146293 -> _146290) (_113793 : _146293) : ((term615 _146290 _146293 H' _113791 _113793) = (term615 _146290 _146293 H' _113792 _113793)) = ((term615 _146290 _146293 H' _113791 _113793) = (term615 _146290 _146293 H' _113792 _113793)).
Proof. exact (eq_refl ((term615 _146290 _146293 H' _113791 _113793) = (term615 _146290 _146293 H' _113792 _113793))). Qed.
Lemma lem8363443 {_146290 _146293 : Type'} (z : type784 _146290 _146293) (_113791 : _146293 -> _146290) (H' : type796 _146290 _146293) (_113792 : _146293 -> _146290) (_113793 : _146293) : (term827 _146290 _146293 z _113791 H' _113792 _113793) = (term828 _146290 _146293 z _113791 H' _113792 _113793).
Proof. exact (MK_COMB (@lem8363441 _146290 _146293 z _113791 _113792 _113793) (@lem8363442 _146290 _146293 _113791 H' _113792 _113793)). Qed.
Lemma lem8363444 {_146290 _146293 : Type'} (z : type784 _146290 _146293) (_113791 : _146293 -> _146290) (H' : type796 _146290 _146293) (_113792 : _146293 -> _146290) (_113793 : _146293) : (term824 _146290 _146293 H' z _113791 _113792 _113793) = (term828 _146290 _146293 z _113791 H' _113792 _113793).
Proof. exact (TRANS (@lem8363436 _146290 _146293 z _113791 H' _113792 _113793) (@lem8363443 _146290 _146293 z _113791 H' _113792 _113793)). Qed.
Lemma lem8363447 {_146290 _146293 : Type'} (_113791 : _146293 -> _146290) (_113792 : _146293 -> _146290) (_113793 : _146293) (lt2 : type1402 _146293) (z : type784 _146290 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (H' : type796 _146290 _146293) (h1 : term259 _146290 _146293 lt2 z P G H') : term828 _146290 _146293 z _113791 H' _113792 _113793.
Proof. exact (EQ_MP (@lem8363444 _146290 _146293 z _113791 H' _113792 _113793) (@lem8363433 _146290 _146293 _113791 _113792 _113793 lt2 z P G H' h1)). Qed.
Lemma lem8363448 {_146290 _146293 : Type'} (_113791 : _146293 -> _146290) (_113792 : _146293 -> _146290) (_113793 : _146293) (lt2 : type1402 _146293) (z : type784 _146290 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (H' : type796 _146290 _146293) (h1 : term259 _146290 _146293 lt2 z P G H') : term828 _146290 _146293 z _113791 H' _113792 _113793.
Proof. exact (@lem8363447 _146290 _146293 _113791 _113792 _113793 lt2 z P G H' h1). Qed.
Lemma lem8363449 {_146290 _146293 : Type'} (f : _146293 -> _146290) (g : _146293 -> _146290) (x : _146293) (lt2 : type1402 _146293) (z : type784 _146290 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (H' : type796 _146290 _146293) (h1 : term259 _146290 _146293 lt2 z P G H') : term828 _146290 _146293 z f H' g x.
Proof. exact (@lem8363448 _146290 _146293 f g x lt2 z P G H' h1). Qed.
Lemma lem8363452 {_146290 _146293 : Type'} (z : type784 _146290 _146293) (lt2 : type1402 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (f : _146293 -> _146290) (H' : type796 _146290 _146293) (g : _146293 -> _146290) (x : _146293) (h1 : term259 _146290 _146293 lt2 z P G H') (h2 : term617 _146290 _146293 f H' g x) (h3 : term646 _146290 _146293 lt2 P G f H' g x) : (term615 _146290 _146293 H' f x) = (term615 _146290 _146293 H' g x).
Proof. exact (@lem8363449 _146290 _146293 f g x lt2 z P G H' h1 (@lem8363396 _146290 _146293 z lt2 P G f H' g x h1 h2 h3)). Qed.
Lemma lem8363453 {_146290 _146293 : Type'} (z : type784 _146290 _146293) (lt2 : type1402 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (f : _146293 -> _146290) (H' : type796 _146290 _146293) (g : _146293 -> _146290) (x : _146293) (h1 : term259 _146290 _146293 lt2 z P G H') (h2 : term646 _146290 _146293 lt2 P G f H' g x) : term829 _146290 _146293 f H' g x.
Proof. exact (fun h0 : term617 _146290 _146293 f H' g x => @lem8363452 _146290 _146293 z lt2 P G f H' g x h1 h0 h2). Qed.
Lemma lem8363455 (p : Prop) : (term748 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8363456 {_146290 _146293 : Type'} (f : _146293 -> _146290) (H' : type796 _146290 _146293) (g : _146293 -> _146290) (x : _146293) : (term829 _146290 _146293 f H' g x) = ((term615 _146290 _146293 H' f x) = (term615 _146290 _146293 H' g x)).
Proof. exact (@lem8363455 ((term615 _146290 _146293 H' f x) = (term615 _146290 _146293 H' g x))). Qed.
Lemma lem8363457 {_146290 _146293 : Type'} (z : type784 _146290 _146293) (lt2 : type1402 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (f : _146293 -> _146290) (H' : type796 _146290 _146293) (g : _146293 -> _146290) (x : _146293) (h1 : term259 _146290 _146293 lt2 z P G H') (h2 : term646 _146290 _146293 lt2 P G f H' g x) : (term615 _146290 _146293 H' f x) = (term615 _146290 _146293 H' g x).
Proof. exact (EQ_MP (@lem8363456 _146290 _146293 f H' g x) (@lem8363453 _146290 _146293 z lt2 P G f H' g x h1 h2)). Qed.
Lemma lem8363460 (p : Prop) : (~ p) = (p -> False).
Proof. exact (EQ_MP (@lem21021 p) (@lem0)). Qed.
Lemma lem8363462 {_146290 _146293 : Type'} (f : _146293 -> _146290) (H' : type796 _146290 _146293) (g : _146293 -> _146290) (x : _146293) : (term617 _146290 _146293 f H' g x) = (term830 _146290 _146293 f H' g x).
Proof. exact (@lem8363460 ((term615 _146290 _146293 H' f x) = (term615 _146290 _146293 H' g x))). Qed.
Lemma lem8363465 {_146290 _146293 : Type'} (f : _146293 -> _146290) (H' : type796 _146290 _146293) (g : _146293 -> _146290) (x : _146293) (h1 : term617 _146290 _146293 f H' g x) : term830 _146290 _146293 f H' g x.
Proof. exact (EQ_MP (@lem8363462 _146290 _146293 f H' g x) (@lem8361592 _146290 _146293 f H' g x h1)). Qed.
Lemma lem8363468 {_146290 _146293 : Type'} (z : type784 _146290 _146293) (lt2 : type1402 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (f : _146293 -> _146290) (H' : type796 _146290 _146293) (g : _146293 -> _146290) (x : _146293) (h1 : term259 _146290 _146293 lt2 z P G H') (h2 : term617 _146290 _146293 f H' g x) (h3 : term646 _146290 _146293 lt2 P G f H' g x) : False.
Proof. exact (@lem8363465 _146290 _146293 f H' g x h2 (@lem8363457 _146290 _146293 z lt2 P G f H' g x h1 h3)). Qed.
Lemma lem8363469 {_146290 _146293 : Type'} (z : type784 _146290 _146293) (lt2 : type1402 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (f : _146293 -> _146290) (H' : type796 _146290 _146293) (g : _146293 -> _146290) (x : _146293) (h1 : term259 _146290 _146293 lt2 z P G H') (h2 : term617 _146290 _146293 f H' g x) (h3 : term646 _146290 _146293 lt2 P G f H' g x) : term750.
Proof. exact (fun h0 : ~ False => @lem8363468 _146290 _146293 z lt2 P G f H' g x h1 h2 h3). Qed.
Lemma lem8363471 (p : Prop) : (term748 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8363472 : term750 = False.
Proof. exact (@lem8363471 False). Qed.
Lemma lem8363473 {_146290 _146293 : Type'} (z : type784 _146290 _146293) (lt2 : type1402 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (f : _146293 -> _146290) (H' : type796 _146290 _146293) (g : _146293 -> _146290) (x : _146293) (h1 : term259 _146290 _146293 lt2 z P G H') (h2 : term617 _146290 _146293 f H' g x) (h3 : term646 _146290 _146293 lt2 P G f H' g x) : False.
Proof. exact (EQ_MP (@lem8363472) (@lem8363469 _146290 _146293 z lt2 P G f H' g x h1 h2 h3)). Qed.
Lemma lem8363641 {_146290 _146293 : Type'} (f : _146293 -> _146290) (H' : type796 _146290 _146293) (g : _146293 -> _146290) (x : _146293) (h1 : term617 _146290 _146293 f H' g x) : term617 _146290 _146293 f H' g x.
Proof. exact (h1). Qed.
Lemma lem8363642 {_146290 _146293 : Type'} (f : _146293 -> _146290) (H' : type796 _146290 _146293) (g : _146293 -> _146290) (x : _146293) (h1 : term617 _146290 _146293 f H' g x) : term822 _146290 _146293 f H' g x.
Proof. exact (fun h0 : (term615 _146290 _146293 H' f x) = (term615 _146290 _146293 H' g x) => @lem8363641 _146290 _146293 f H' g x h1). Qed.
Lemma lem8363644 (p : Prop) : (term753 p) = (~ p).
Proof. exact (EQ_MP (@lem21028 p) (@lem21107 p)). Qed.
Lemma lem8363645 {_146290 _146293 : Type'} (f : _146293 -> _146290) (H' : type796 _146290 _146293) (g : _146293 -> _146290) (x : _146293) : (term822 _146290 _146293 f H' g x) = (term617 _146290 _146293 f H' g x).
Proof. exact (@lem8363644 ((term615 _146290 _146293 H' f x) = (term615 _146290 _146293 H' g x))). Qed.
Lemma lem8363646 {_146290 _146293 : Type'} (f : _146293 -> _146290) (H' : type796 _146290 _146293) (g : _146293 -> _146290) (x : _146293) (h1 : term617 _146290 _146293 f H' g x) : term617 _146290 _146293 f H' g x.
Proof. exact (EQ_MP (@lem8363645 _146290 _146293 f H' g x) (@lem8363642 _146290 _146293 f H' g x h1)). Qed.
Lemma lem8363648 (b : Prop) (a : Prop) : (a \/ b) = (term754 b a).
Proof. exact (EQ_MP (@lem20682 b a) (@lem20764 b a)). Qed.
Lemma lem8363651 {_146290 _146293 : Type'} (H' : type796 _146290 _146293) (lt2 : type1402 _146293) (z : type784 _146290 _146293) (_113802 : _146293 -> _146290) (_113803 : _146293 -> _146290) (_113804 : _146293) : (term744 _146290 _146293 lt2 z _113802 H' _113803 _113804) = (term823 _146290 _146293 H' lt2 z _113802 _113803 _113804).
Proof. exact (@lem8363648 ((term615 _146290 _146293 H' _113802 _113804) = (term615 _146290 _146293 H' _113803 _113804)) (term685 _146290 _146293 lt2 z _113802 _113803 _113804)). Qed.
Lemma lem8363654 {_146290 _146293 : Type'} (_113802 : _146293 -> _146290) (_113803 : _146293 -> _146290) (_113804 : _146293) (lt2 : type1402 _146293) (z : type784 _146290 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (H' : type796 _146290 _146293) (h1 : term259 _146290 _146293 lt2 z P G H') : term823 _146290 _146293 H' lt2 z _113802 _113803 _113804.
Proof. exact (EQ_MP (@lem8363651 _146290 _146293 H' lt2 z _113802 _113803 _113804) (@lem8361696 _146290 _146293 _113802 _113803 _113804 lt2 z P G H' h1)). Qed.
Lemma lem8363655 {_146290 _146293 : Type'} (_113802 : _146293 -> _146290) (_113803 : _146293 -> _146290) (_113804 : _146293) (lt2 : type1402 _146293) (z : type784 _146290 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (H' : type796 _146290 _146293) (h1 : term259 _146290 _146293 lt2 z P G H') : term823 _146290 _146293 H' lt2 z _113802 _113803 _113804.
Proof. exact (@lem8363654 _146290 _146293 _113802 _113803 _113804 lt2 z P G H' h1). Qed.
Lemma lem8363656 {_146290 _146293 : Type'} (f : _146293 -> _146290) (g : _146293 -> _146290) (x : _146293) (lt2 : type1402 _146293) (z : type784 _146290 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (H' : type796 _146290 _146293) (h1 : term259 _146290 _146293 lt2 z P G H') : term823 _146290 _146293 H' lt2 z f g x.
Proof. exact (@lem8363655 _146290 _146293 f g x lt2 z P G H' h1). Qed.
Lemma lem8363659 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (z : type784 _146290 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (f : _146293 -> _146290) (H' : type796 _146290 _146293) (g : _146293 -> _146290) (x : _146293) (h1 : term259 _146290 _146293 lt2 z P G H') (h2 : term617 _146290 _146293 f H' g x) : term685 _146290 _146293 lt2 z f g x.
Proof. exact (@lem8363656 _146290 _146293 f g x lt2 z P G H' h1 (@lem8363646 _146290 _146293 f H' g x h2)). Qed.
Lemma lem8363660 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (z : type784 _146290 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (f : _146293 -> _146290) (H' : type796 _146290 _146293) (g : _146293 -> _146290) (x : _146293) (h1 : term259 _146290 _146293 lt2 z P G H') (h2 : term617 _146290 _146293 f H' g x) : term765 _146290 _146293 lt2 z f g x.
Proof. exact (fun h0 : term766 _146290 _146293 lt2 z f g x => @lem8363659 _146290 _146293 lt2 z P G f H' g x h1 h2). Qed.
Lemma lem8363662 (p : Prop) : (term748 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8363663 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (z : type784 _146290 _146293) (f : _146293 -> _146290) (g : _146293 -> _146290) (x : _146293) : (term765 _146290 _146293 lt2 z f g x) = (term685 _146290 _146293 lt2 z f g x).
Proof. exact (@lem8363662 (term685 _146290 _146293 lt2 z f g x)). Qed.
Lemma lem8363664 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (z : type784 _146290 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (f : _146293 -> _146290) (H' : type796 _146290 _146293) (g : _146293 -> _146290) (x : _146293) (h1 : term259 _146290 _146293 lt2 z P G H') (h2 : term617 _146290 _146293 f H' g x) : term685 _146290 _146293 lt2 z f g x.
Proof. exact (EQ_MP (@lem8363663 _146290 _146293 lt2 z f g x) (@lem8363660 _146290 _146293 lt2 z P G f H' g x h1 h2)). Qed.
Lemma lem8363670 (q : Prop) (p : Prop) : (p \/ q) = (q \/ p).
Proof. exact (proj1 (@lem827 (@el Prop) p q)). Qed.
Lemma lem8363671 {_146290 _146293 : Type'} (f : _146293 -> _146290) (g : _146293 -> _146290) (lt2 : type1402 _146293) (_113809 : _146293) (x : _146293) : (term621 _146290 _146293 lt2 x f g _113809) = (term767 _146290 _146293 f g lt2 _113809 x).
Proof. exact (@lem8363670 ((@I (_146293 -> _146290) f _113809) = (@I (_146293 -> _146290) g _113809)) (term608 _146293 lt2 _113809 x)). Qed.
Lemma lem8363679 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8363680 {_146290 _146293 : Type'} (f : _146293 -> _146290) (g : _146293 -> _146290) (lt2 : type1402 _146293) (_113809 : _146293) (x : _146293) : (term768 _146290 _146293 lt2 x f g _113809) = (term769 _146290 _146293 f g lt2 _113809 x).
Proof. exact (MK_COMB (@lem8363679) (@lem8363671 _146290 _146293 f g lt2 _113809 x)). Qed.
Lemma lem8363688 {_146290 _146293 : Type'} (f : _146293 -> _146290) (g : _146293 -> _146290) (lt2 : type1402 _146293) (_113809 : _146293) (x : _146293) : (term767 _146290 _146293 f g lt2 _113809 x) = (term767 _146290 _146293 f g lt2 _113809 x).
Proof. exact (eq_refl (term767 _146290 _146293 f g lt2 _113809 x)). Qed.
Lemma lem8363689 {_146290 _146293 : Type'} (f : _146293 -> _146290) (g : _146293 -> _146290) (lt2 : type1402 _146293) (_113809 : _146293) (x : _146293) : ((term621 _146290 _146293 lt2 x f g _113809) = (term767 _146290 _146293 f g lt2 _113809 x)) = ((term767 _146290 _146293 f g lt2 _113809 x) = (term767 _146290 _146293 f g lt2 _113809 x)).
Proof. exact (MK_COMB (@lem8363680 _146290 _146293 f g lt2 _113809 x) (@lem8363688 _146290 _146293 f g lt2 _113809 x)). Qed.
Lemma lem8363691 {A : Type'} (x : A) : (x = x) = True.
Proof. exact (EQ_MP (@lem20665 A x) (@lem20664 A x)). Qed.
Lemma lem8363692 (x : Prop) : (x = x) = True.
Proof. exact (@lem8363691 Prop x). Qed.
Lemma lem8363693 {_146290 _146293 : Type'} (f : _146293 -> _146290) (g : _146293 -> _146290) (lt2 : type1402 _146293) (_113809 : _146293) (x : _146293) : ((term767 _146290 _146293 f g lt2 _113809 x) = (term767 _146290 _146293 f g lt2 _113809 x)) = True.
Proof. exact (@lem8363692 (term767 _146290 _146293 f g lt2 _113809 x)). Qed.
Lemma lem8363694 {_146290 _146293 : Type'} (f : _146293 -> _146290) (g : _146293 -> _146290) (lt2 : type1402 _146293) (_113809 : _146293) (x : _146293) : ((term621 _146290 _146293 lt2 x f g _113809) = (term767 _146290 _146293 f g lt2 _113809 x)) = True.
Proof. exact (TRANS (@lem8363689 _146290 _146293 f g lt2 _113809 x) (@lem8363693 _146290 _146293 f g lt2 _113809 x)). Qed.
Lemma lem8363695 {_146290 _146293 : Type'} (f : _146293 -> _146290) (g : _146293 -> _146290) (lt2 : type1402 _146293) (_113809 : _146293) (x : _146293) : True = ((term621 _146290 _146293 lt2 x f g _113809) = (term767 _146290 _146293 f g lt2 _113809 x)).
Proof. exact (SYM (@lem8363694 _146290 _146293 f g lt2 _113809 x)). Qed.
Lemma lem8363696 {_146290 _146293 : Type'} (f : _146293 -> _146290) (g : _146293 -> _146290) (lt2 : type1402 _146293) (_113809 : _146293) (x : _146293) : (term621 _146290 _146293 lt2 x f g _113809) = (term767 _146290 _146293 f g lt2 _113809 x).
Proof. exact (EQ_MP (@lem8363695 _146290 _146293 f g lt2 _113809 x) (@lem0)). Qed.
Lemma lem8363697 {_146290 _146293 : Type'} (_113809 : _146293) (lt2 : type1402 _146293) (f : _146293 -> _146290) (H' : type796 _146290 _146293) (g : _146293 -> _146290) (x : _146293) (h1 : term625 _146290 _146293 lt2 f H' g x) : term767 _146290 _146293 f g lt2 _113809 x.
Proof. exact (EQ_MP (@lem8363696 _146290 _146293 f g lt2 _113809 x) (@lem8361688 _146290 _146293 _113809 lt2 f H' g x h1)). Qed.
Lemma lem8363699 (b : Prop) (a : Prop) : (a \/ b) = (term754 b a).
Proof. exact (EQ_MP (@lem20682 b a) (@lem20764 b a)). Qed.
Lemma lem8363700 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (x : _146293) (f : _146293 -> _146290) (g : _146293 -> _146290) (_113809 : _146293) : (term767 _146290 _146293 f g lt2 _113809 x) = (term770 _146290 _146293 lt2 x f g _113809).
Proof. exact (@lem8363699 (term608 _146293 lt2 _113809 x) ((@I (_146293 -> _146290) f _113809) = (@I (_146293 -> _146290) g _113809))). Qed.
Lemma lem8363702 (a : Prop) : (term47 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem8363703 {_146293 : Type'} (lt2 : type1402 _146293) (_113809 : _146293) (x : _146293) : (term771 _146293 lt2 _113809 x) = (term586 _146293 lt2 _113809 x).
Proof. exact (@lem8363702 (term586 _146293 lt2 _113809 x)). Qed.
Lemma lem8363704 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem8363705 {_146293 : Type'} (lt2 : type1402 _146293) (_113809 : _146293) (x : _146293) : (term772 _146293 lt2 _113809 x) = (term773 _146293 lt2 _113809 x).
Proof. exact (MK_COMB (@lem8363704) (@lem8363703 _146293 lt2 _113809 x)). Qed.
Lemma lem8363706 {_146290 _146293 : Type'} (f : _146293 -> _146290) (g : _146293 -> _146290) (_113809 : _146293) : ((@I (_146293 -> _146290) f _113809) = (@I (_146293 -> _146290) g _113809)) = ((@I (_146293 -> _146290) f _113809) = (@I (_146293 -> _146290) g _113809)).
Proof. exact (eq_refl ((@I (_146293 -> _146290) f _113809) = (@I (_146293 -> _146290) g _113809))). Qed.
Lemma lem8363707 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (x : _146293) (f : _146293 -> _146290) (g : _146293 -> _146290) (_113809 : _146293) : (term770 _146290 _146293 lt2 x f g _113809) = (term774 _146290 _146293 lt2 x f g _113809).
Proof. exact (MK_COMB (@lem8363705 _146293 lt2 _113809 x) (@lem8363706 _146290 _146293 f g _113809)). Qed.
Lemma lem8363708 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (x : _146293) (f : _146293 -> _146290) (g : _146293 -> _146290) (_113809 : _146293) : (term767 _146290 _146293 f g lt2 _113809 x) = (term774 _146290 _146293 lt2 x f g _113809).
Proof. exact (TRANS (@lem8363700 _146290 _146293 lt2 x f g _113809) (@lem8363707 _146290 _146293 lt2 x f g _113809)). Qed.
Lemma lem8363711 {_146290 _146293 : Type'} (_113809 : _146293) (lt2 : type1402 _146293) (f : _146293 -> _146290) (H' : type796 _146290 _146293) (g : _146293 -> _146290) (x : _146293) (h1 : term625 _146290 _146293 lt2 f H' g x) : term774 _146290 _146293 lt2 x f g _113809.
Proof. exact (EQ_MP (@lem8363708 _146290 _146293 lt2 x f g _113809) (@lem8363697 _146290 _146293 _113809 lt2 f H' g x h1)). Qed.
Lemma lem8363712 {_146290 _146293 : Type'} (_113809 : _146293) (lt2 : type1402 _146293) (f : _146293 -> _146290) (H' : type796 _146290 _146293) (g : _146293 -> _146290) (x : _146293) (h1 : term625 _146290 _146293 lt2 f H' g x) : term774 _146290 _146293 lt2 x f g _113809.
Proof. exact (@lem8363711 _146290 _146293 _113809 lt2 f H' g x h1). Qed.
Lemma lem8363713 {_146290 _146293 : Type'} (z : type784 _146290 _146293) (lt2 : type1402 _146293) (f : _146293 -> _146290) (H' : type796 _146290 _146293) (g : _146293 -> _146290) (x : _146293) (h1 : term625 _146290 _146293 lt2 f H' g x) : term775 _146290 _146293 lt2 z f g x.
Proof. exact (@lem8363712 _146290 _146293 (term668 _146290 _146293 z f g x) lt2 f H' g x h1). Qed.
Lemma lem8363716 {_146290 _146293 : Type'} (z : type784 _146290 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (lt2 : type1402 _146293) (f : _146293 -> _146290) (H' : type796 _146290 _146293) (g : _146293 -> _146290) (x : _146293) (h1 : term259 _146290 _146293 lt2 z P G H') (h2 : term617 _146290 _146293 f H' g x) (h3 : term625 _146290 _146293 lt2 f H' g x) : (term671 _146290 _146293 z f g x) = (term674 _146290 _146293 z f g x).
Proof. exact (@lem8363713 _146290 _146293 z lt2 f H' g x h3 (@lem8363664 _146290 _146293 lt2 z P G f H' g x h1 h2)). Qed.
Lemma lem8363717 {_146290 _146293 : Type'} (z : type784 _146290 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (lt2 : type1402 _146293) (f : _146293 -> _146290) (H' : type796 _146290 _146293) (g : _146293 -> _146290) (x : _146293) (h1 : term259 _146290 _146293 lt2 z P G H') (h2 : term617 _146290 _146293 f H' g x) (h3 : term625 _146290 _146293 lt2 f H' g x) : term776 _146290 _146293 z f g x.
Proof. exact (fun h0 : term678 _146290 _146293 z f g x => @lem8363716 _146290 _146293 z P G lt2 f H' g x h1 h2 h3). Qed.
Lemma lem8363719 (p : Prop) : (term748 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8363720 {_146290 _146293 : Type'} (z : type784 _146290 _146293) (f : _146293 -> _146290) (g : _146293 -> _146290) (x : _146293) : (term776 _146290 _146293 z f g x) = ((term671 _146290 _146293 z f g x) = (term674 _146290 _146293 z f g x)).
Proof. exact (@lem8363719 ((term671 _146290 _146293 z f g x) = (term674 _146290 _146293 z f g x))). Qed.
Lemma lem8363721 {_146290 _146293 : Type'} (z : type784 _146290 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (lt2 : type1402 _146293) (f : _146293 -> _146290) (H' : type796 _146290 _146293) (g : _146293 -> _146290) (x : _146293) (h1 : term259 _146290 _146293 lt2 z P G H') (h2 : term617 _146290 _146293 f H' g x) (h3 : term625 _146290 _146293 lt2 f H' g x) : (term671 _146290 _146293 z f g x) = (term674 _146290 _146293 z f g x).
Proof. exact (EQ_MP (@lem8363720 _146290 _146293 z f g x) (@lem8363717 _146290 _146293 z P G lt2 f H' g x h1 h2 h3)). Qed.
Lemma lem8363727 (q : Prop) (p : Prop) : (p \/ q) = (q \/ p).
Proof. exact (proj1 (@lem827 (@el Prop) p q)). Qed.
Lemma lem8363728 {_146290 _146293 : Type'} (H' : type796 _146290 _146293) (z : type784 _146290 _146293) (_113802 : _146293 -> _146290) (_113803 : _146293 -> _146290) (_113804 : _146293) : (term745 _146290 _146293 z _113802 H' _113803 _113804) = (term824 _146290 _146293 H' z _113802 _113803 _113804).
Proof. exact (@lem8363727 ((term615 _146290 _146293 H' _113802 _113804) = (term615 _146290 _146293 H' _113803 _113804)) (term678 _146290 _146293 z _113802 _113803 _113804)). Qed.
Lemma lem8363738 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8363739 {_146290 _146293 : Type'} (H' : type796 _146290 _146293) (z : type784 _146290 _146293) (_113802 : _146293 -> _146290) (_113803 : _146293 -> _146290) (_113804 : _146293) : (term825 _146290 _146293 z _113802 H' _113803 _113804) = (term826 _146290 _146293 H' z _113802 _113803 _113804).
Proof. exact (MK_COMB (@lem8363738) (@lem8363728 _146290 _146293 H' z _113802 _113803 _113804)). Qed.
Lemma lem8363749 {_146290 _146293 : Type'} (H' : type796 _146290 _146293) (z : type784 _146290 _146293) (_113802 : _146293 -> _146290) (_113803 : _146293 -> _146290) (_113804 : _146293) : (term824 _146290 _146293 H' z _113802 _113803 _113804) = (term824 _146290 _146293 H' z _113802 _113803 _113804).
Proof. exact (eq_refl (term824 _146290 _146293 H' z _113802 _113803 _113804)). Qed.
Lemma lem8363750 {_146290 _146293 : Type'} (H' : type796 _146290 _146293) (z : type784 _146290 _146293) (_113802 : _146293 -> _146290) (_113803 : _146293 -> _146290) (_113804 : _146293) : ((term745 _146290 _146293 z _113802 H' _113803 _113804) = (term824 _146290 _146293 H' z _113802 _113803 _113804)) = ((term824 _146290 _146293 H' z _113802 _113803 _113804) = (term824 _146290 _146293 H' z _113802 _113803 _113804)).
Proof. exact (MK_COMB (@lem8363739 _146290 _146293 H' z _113802 _113803 _113804) (@lem8363749 _146290 _146293 H' z _113802 _113803 _113804)). Qed.
Lemma lem8363752 {A : Type'} (x : A) : (x = x) = True.
Proof. exact (EQ_MP (@lem20665 A x) (@lem20664 A x)). Qed.
Lemma lem8363753 (x : Prop) : (x = x) = True.
Proof. exact (@lem8363752 Prop x). Qed.
Lemma lem8363754 {_146290 _146293 : Type'} (H' : type796 _146290 _146293) (z : type784 _146290 _146293) (_113802 : _146293 -> _146290) (_113803 : _146293 -> _146290) (_113804 : _146293) : ((term824 _146290 _146293 H' z _113802 _113803 _113804) = (term824 _146290 _146293 H' z _113802 _113803 _113804)) = True.
Proof. exact (@lem8363753 (term824 _146290 _146293 H' z _113802 _113803 _113804)). Qed.
Lemma lem8363755 {_146290 _146293 : Type'} (H' : type796 _146290 _146293) (z : type784 _146290 _146293) (_113802 : _146293 -> _146290) (_113803 : _146293 -> _146290) (_113804 : _146293) : ((term745 _146290 _146293 z _113802 H' _113803 _113804) = (term824 _146290 _146293 H' z _113802 _113803 _113804)) = True.
Proof. exact (TRANS (@lem8363750 _146290 _146293 H' z _113802 _113803 _113804) (@lem8363754 _146290 _146293 H' z _113802 _113803 _113804)). Qed.
Lemma lem8363756 {_146290 _146293 : Type'} (H' : type796 _146290 _146293) (z : type784 _146290 _146293) (_113802 : _146293 -> _146290) (_113803 : _146293 -> _146290) (_113804 : _146293) : True = ((term745 _146290 _146293 z _113802 H' _113803 _113804) = (term824 _146290 _146293 H' z _113802 _113803 _113804)).
Proof. exact (SYM (@lem8363755 _146290 _146293 H' z _113802 _113803 _113804)). Qed.
Lemma lem8363757 {_146290 _146293 : Type'} (H' : type796 _146290 _146293) (z : type784 _146290 _146293) (_113802 : _146293 -> _146290) (_113803 : _146293 -> _146290) (_113804 : _146293) : (term745 _146290 _146293 z _113802 H' _113803 _113804) = (term824 _146290 _146293 H' z _113802 _113803 _113804).
Proof. exact (EQ_MP (@lem8363756 _146290 _146293 H' z _113802 _113803 _113804) (@lem0)). Qed.
Lemma lem8363758 {_146290 _146293 : Type'} (_113802 : _146293 -> _146290) (_113803 : _146293 -> _146290) (_113804 : _146293) (lt2 : type1402 _146293) (z : type784 _146290 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (H' : type796 _146290 _146293) (h1 : term259 _146290 _146293 lt2 z P G H') : term824 _146290 _146293 H' z _113802 _113803 _113804.
Proof. exact (EQ_MP (@lem8363757 _146290 _146293 H' z _113802 _113803 _113804) (@lem8361702 _146290 _146293 _113802 _113803 _113804 lt2 z P G H' h1)). Qed.
Lemma lem8363760 (b : Prop) (a : Prop) : (a \/ b) = (term754 b a).
Proof. exact (EQ_MP (@lem20682 b a) (@lem20764 b a)). Qed.
Lemma lem8363761 {_146290 _146293 : Type'} (z : type784 _146290 _146293) (_113802 : _146293 -> _146290) (H' : type796 _146290 _146293) (_113803 : _146293 -> _146290) (_113804 : _146293) : (term824 _146290 _146293 H' z _113802 _113803 _113804) = (term827 _146290 _146293 z _113802 H' _113803 _113804).
Proof. exact (@lem8363760 (term678 _146290 _146293 z _113802 _113803 _113804) ((term615 _146290 _146293 H' _113802 _113804) = (term615 _146290 _146293 H' _113803 _113804))). Qed.
Lemma lem8363763 (a : Prop) : (term47 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem8363764 {_146290 _146293 : Type'} (z : type784 _146290 _146293) (_113802 : _146293 -> _146290) (_113803 : _146293 -> _146290) (_113804 : _146293) : (term786 _146290 _146293 z _113802 _113803 _113804) = ((term671 _146290 _146293 z _113802 _113803 _113804) = (term674 _146290 _146293 z _113802 _113803 _113804)).
Proof. exact (@lem8363763 ((term671 _146290 _146293 z _113802 _113803 _113804) = (term674 _146290 _146293 z _113802 _113803 _113804))). Qed.
Lemma lem8363765 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem8363766 {_146290 _146293 : Type'} (z : type784 _146290 _146293) (_113802 : _146293 -> _146290) (_113803 : _146293 -> _146290) (_113804 : _146293) : (term817 _146290 _146293 z _113802 _113803 _113804) = (term818 _146290 _146293 z _113802 _113803 _113804).
Proof. exact (MK_COMB (@lem8363765) (@lem8363764 _146290 _146293 z _113802 _113803 _113804)). Qed.
Lemma lem8363767 {_146290 _146293 : Type'} (_113802 : _146293 -> _146290) (H' : type796 _146290 _146293) (_113803 : _146293 -> _146290) (_113804 : _146293) : ((term615 _146290 _146293 H' _113802 _113804) = (term615 _146290 _146293 H' _113803 _113804)) = ((term615 _146290 _146293 H' _113802 _113804) = (term615 _146290 _146293 H' _113803 _113804)).
Proof. exact (eq_refl ((term615 _146290 _146293 H' _113802 _113804) = (term615 _146290 _146293 H' _113803 _113804))). Qed.
Lemma lem8363768 {_146290 _146293 : Type'} (z : type784 _146290 _146293) (_113802 : _146293 -> _146290) (H' : type796 _146290 _146293) (_113803 : _146293 -> _146290) (_113804 : _146293) : (term827 _146290 _146293 z _113802 H' _113803 _113804) = (term828 _146290 _146293 z _113802 H' _113803 _113804).
Proof. exact (MK_COMB (@lem8363766 _146290 _146293 z _113802 _113803 _113804) (@lem8363767 _146290 _146293 _113802 H' _113803 _113804)). Qed.
Lemma lem8363769 {_146290 _146293 : Type'} (z : type784 _146290 _146293) (_113802 : _146293 -> _146290) (H' : type796 _146290 _146293) (_113803 : _146293 -> _146290) (_113804 : _146293) : (term824 _146290 _146293 H' z _113802 _113803 _113804) = (term828 _146290 _146293 z _113802 H' _113803 _113804).
Proof. exact (TRANS (@lem8363761 _146290 _146293 z _113802 H' _113803 _113804) (@lem8363768 _146290 _146293 z _113802 H' _113803 _113804)). Qed.
Lemma lem8363772 {_146290 _146293 : Type'} (_113802 : _146293 -> _146290) (_113803 : _146293 -> _146290) (_113804 : _146293) (lt2 : type1402 _146293) (z : type784 _146290 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (H' : type796 _146290 _146293) (h1 : term259 _146290 _146293 lt2 z P G H') : term828 _146290 _146293 z _113802 H' _113803 _113804.
Proof. exact (EQ_MP (@lem8363769 _146290 _146293 z _113802 H' _113803 _113804) (@lem8363758 _146290 _146293 _113802 _113803 _113804 lt2 z P G H' h1)). Qed.
Lemma lem8363773 {_146290 _146293 : Type'} (_113802 : _146293 -> _146290) (_113803 : _146293 -> _146290) (_113804 : _146293) (lt2 : type1402 _146293) (z : type784 _146290 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (H' : type796 _146290 _146293) (h1 : term259 _146290 _146293 lt2 z P G H') : term828 _146290 _146293 z _113802 H' _113803 _113804.
Proof. exact (@lem8363772 _146290 _146293 _113802 _113803 _113804 lt2 z P G H' h1). Qed.
Lemma lem8363774 {_146290 _146293 : Type'} (f : _146293 -> _146290) (g : _146293 -> _146290) (x : _146293) (lt2 : type1402 _146293) (z : type784 _146290 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (H' : type796 _146290 _146293) (h1 : term259 _146290 _146293 lt2 z P G H') : term828 _146290 _146293 z f H' g x.
Proof. exact (@lem8363773 _146290 _146293 f g x lt2 z P G H' h1). Qed.
Lemma lem8363777 {_146290 _146293 : Type'} (z : type784 _146290 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (lt2 : type1402 _146293) (f : _146293 -> _146290) (H' : type796 _146290 _146293) (g : _146293 -> _146290) (x : _146293) (h1 : term259 _146290 _146293 lt2 z P G H') (h2 : term617 _146290 _146293 f H' g x) (h3 : term625 _146290 _146293 lt2 f H' g x) : (term615 _146290 _146293 H' f x) = (term615 _146290 _146293 H' g x).
Proof. exact (@lem8363774 _146290 _146293 f g x lt2 z P G H' h1 (@lem8363721 _146290 _146293 z P G lt2 f H' g x h1 h2 h3)). Qed.
Lemma lem8363778 {_146290 _146293 : Type'} (z : type784 _146290 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (lt2 : type1402 _146293) (f : _146293 -> _146290) (H' : type796 _146290 _146293) (g : _146293 -> _146290) (x : _146293) (h1 : term259 _146290 _146293 lt2 z P G H') (h2 : term625 _146290 _146293 lt2 f H' g x) : term829 _146290 _146293 f H' g x.
Proof. exact (fun h0 : term617 _146290 _146293 f H' g x => @lem8363777 _146290 _146293 z P G lt2 f H' g x h1 h0 h2). Qed.
Lemma lem8363780 (p : Prop) : (term748 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8363781 {_146290 _146293 : Type'} (f : _146293 -> _146290) (H' : type796 _146290 _146293) (g : _146293 -> _146290) (x : _146293) : (term829 _146290 _146293 f H' g x) = ((term615 _146290 _146293 H' f x) = (term615 _146290 _146293 H' g x)).
Proof. exact (@lem8363780 ((term615 _146290 _146293 H' f x) = (term615 _146290 _146293 H' g x))). Qed.
Lemma lem8363782 {_146290 _146293 : Type'} (z : type784 _146290 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (lt2 : type1402 _146293) (f : _146293 -> _146290) (H' : type796 _146290 _146293) (g : _146293 -> _146290) (x : _146293) (h1 : term259 _146290 _146293 lt2 z P G H') (h2 : term625 _146290 _146293 lt2 f H' g x) : (term615 _146290 _146293 H' f x) = (term615 _146290 _146293 H' g x).
Proof. exact (EQ_MP (@lem8363781 _146290 _146293 f H' g x) (@lem8363778 _146290 _146293 z P G lt2 f H' g x h1 h2)). Qed.
Lemma lem8363785 (p : Prop) : (~ p) = (p -> False).
Proof. exact (EQ_MP (@lem21021 p) (@lem0)). Qed.
Lemma lem8363787 {_146290 _146293 : Type'} (f : _146293 -> _146290) (H' : type796 _146290 _146293) (g : _146293 -> _146290) (x : _146293) : (term617 _146290 _146293 f H' g x) = (term830 _146290 _146293 f H' g x).
Proof. exact (@lem8363785 ((term615 _146290 _146293 H' f x) = (term615 _146290 _146293 H' g x))). Qed.
Lemma lem8363790 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (f : _146293 -> _146290) (H' : type796 _146290 _146293) (g : _146293 -> _146290) (x : _146293) (h1 : term625 _146290 _146293 lt2 f H' g x) : term830 _146290 _146293 f H' g x.
Proof. exact (EQ_MP (@lem8363787 _146290 _146293 f H' g x) (@lem8361690 _146290 _146293 lt2 f H' g x h1)). Qed.
Lemma lem8363793 {_146290 _146293 : Type'} (z : type784 _146290 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (lt2 : type1402 _146293) (f : _146293 -> _146290) (H' : type796 _146290 _146293) (g : _146293 -> _146290) (x : _146293) (h1 : term259 _146290 _146293 lt2 z P G H') (h2 : term625 _146290 _146293 lt2 f H' g x) : False.
Proof. exact (@lem8363790 _146290 _146293 lt2 f H' g x h2 (@lem8363782 _146290 _146293 z P G lt2 f H' g x h1 h2)). Qed.
Lemma lem8363794 {_146290 _146293 : Type'} (z : type784 _146290 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (lt2 : type1402 _146293) (f : _146293 -> _146290) (H' : type796 _146290 _146293) (g : _146293 -> _146290) (x : _146293) (h1 : term259 _146290 _146293 lt2 z P G H') (h2 : term625 _146290 _146293 lt2 f H' g x) : term750.
Proof. exact (fun h0 : ~ False => @lem8363793 _146290 _146293 z P G lt2 f H' g x h1 h2). Qed.
Lemma lem8363796 (p : Prop) : (term748 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8363797 : term750 = False.
Proof. exact (@lem8363796 False). Qed.
Lemma lem8363798 {_146290 _146293 : Type'} (z : type784 _146290 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (lt2 : type1402 _146293) (f : _146293 -> _146290) (H' : type796 _146290 _146293) (g : _146293 -> _146290) (x : _146293) (h1 : term259 _146290 _146293 lt2 z P G H') (h2 : term625 _146290 _146293 lt2 f H' g x) : False.
Proof. exact (EQ_MP (@lem8363797) (@lem8363794 _146290 _146293 z P G lt2 f H' g x h1 h2)). Qed.
Lemma lem8363965 {_146290 _146293 : Type'} (P : type799 _146290 _146293) (G : type797 _146290 _146293) (f : _146293 -> _146290) (lt2 : type1402 _146293) (y : _146293) (x : _146293) (h1 : term614 _146290 _146293 P G f lt2 y x) : term593 _146290 _146293 P f x.
Proof. exact (proj1 (@lem8359684 _146290 _146293 P G f lt2 y x h1)). Qed.
Lemma lem8363966 {_146290 _146293 : Type'} (P : type799 _146290 _146293) (G : type797 _146290 _146293) (f : _146293 -> _146290) (lt2 : type1402 _146293) (y : _146293) (x : _146293) (h1 : term614 _146290 _146293 P G f lt2 y x) : term751 _146290 _146293 P f x.
Proof. exact (fun h0 : term595 _146290 _146293 P f x => @lem8363965 _146290 _146293 P G f lt2 y x h1). Qed.
Lemma lem8363968 (p : Prop) : (term748 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8363969 {_146290 _146293 : Type'} (P : type799 _146290 _146293) (f : _146293 -> _146290) (x : _146293) : (term751 _146290 _146293 P f x) = (term593 _146290 _146293 P f x).
Proof. exact (@lem8363968 (term593 _146290 _146293 P f x)). Qed.
Lemma lem8363970 {_146290 _146293 : Type'} (P : type799 _146290 _146293) (G : type797 _146290 _146293) (f : _146293 -> _146290) (lt2 : type1402 _146293) (y : _146293) (x : _146293) (h1 : term614 _146290 _146293 P G f lt2 y x) : term593 _146290 _146293 P f x.
Proof. exact (EQ_MP (@lem8363969 _146290 _146293 P f x) (@lem8363966 _146290 _146293 P G f lt2 y x h1)). Qed.
Lemma lem8363972 {_146290 _146293 : Type'} (P : type799 _146290 _146293) (G : type797 _146290 _146293) (f : _146293 -> _146290) (lt2 : type1402 _146293) (y : _146293) (x : _146293) (h1 : term614 _146290 _146293 P G f lt2 y x) : term590 _146290 _146293 lt2 y G f x.
Proof. exact (proj2 (@lem8359684 _146290 _146293 P G f lt2 y x h1)). Qed.
Lemma lem8363973 {_146290 _146293 : Type'} (P : type799 _146290 _146293) (G : type797 _146290 _146293) (f : _146293 -> _146290) (lt2 : type1402 _146293) (y : _146293) (x : _146293) (h1 : term614 _146290 _146293 P G f lt2 y x) : term831 _146290 _146293 lt2 y G f x.
Proof. exact (fun h0 : term592 _146290 _146293 lt2 y G f x => @lem8363972 _146290 _146293 P G f lt2 y x h1). Qed.
Lemma lem8363975 (p : Prop) : (term748 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8363976 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (y : _146293) (G : type797 _146290 _146293) (f : _146293 -> _146290) (x : _146293) : (term831 _146290 _146293 lt2 y G f x) = (term590 _146290 _146293 lt2 y G f x).
Proof. exact (@lem8363975 (term590 _146290 _146293 lt2 y G f x)). Qed.
Lemma lem8363977 {_146290 _146293 : Type'} (P : type799 _146290 _146293) (G : type797 _146290 _146293) (f : _146293 -> _146290) (lt2 : type1402 _146293) (y : _146293) (x : _146293) (h1 : term614 _146290 _146293 P G f lt2 y x) : term590 _146290 _146293 lt2 y G f x.
Proof. exact (EQ_MP (@lem8363976 _146290 _146293 lt2 y G f x) (@lem8363973 _146290 _146293 P G f lt2 y x h1)). Qed.
Lemma lem8363983 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem8363984 {_146290 _146293 : Type'} (G : type797 _146290 _146293) (P : type799 _146290 _146293) (_113810 : _146293 -> _146290) (lt2 : type1402 _146293) (_113812 : _146293) (_113811 : _146293) : (term746 _146290 _146293 P G _113810 lt2 _113812 _113811) = (term832 _146290 _146293 G P _113810 lt2 _113812 _113811).
Proof. exact (@lem8363983 (term592 _146290 _146293 lt2 _113812 G _113810 _113811) (term595 _146290 _146293 P _113810 _113811) (term586 _146293 lt2 _113812 _113811)). Qed.
Lemma lem8363998 (q : Prop) (p : Prop) : (p \/ q) = (q \/ p).
Proof. exact (proj1 (@lem827 (@el Prop) p q)). Qed.
Lemma lem8363999 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (_113812 : _146293) (P : type799 _146290 _146293) (_113810 : _146293 -> _146290) (_113811 : _146293) : (term833 _146290 _146293 P _113810 lt2 _113812 _113811) = (term834 _146290 _146293 lt2 _113812 P _113810 _113811).
Proof. exact (@lem8363998 (term586 _146293 lt2 _113812 _113811) (term595 _146290 _146293 P _113810 _113811)). Qed.
Lemma lem8364005 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (_113812 : _146293) (G : type797 _146290 _146293) (_113810 : _146293 -> _146290) (_113811 : _146293) : (term835 _146290 _146293 lt2 _113812 G _113810 _113811) = (term835 _146290 _146293 lt2 _113812 G _113810 _113811).
Proof. exact (eq_refl (term835 _146290 _146293 lt2 _113812 G _113810 _113811)). Qed.
Lemma lem8364006 {_146290 _146293 : Type'} (G : type797 _146290 _146293) (lt2 : type1402 _146293) (_113812 : _146293) (P : type799 _146290 _146293) (_113810 : _146293 -> _146290) (_113811 : _146293) : (term832 _146290 _146293 G P _113810 lt2 _113812 _113811) = (term836 _146290 _146293 G lt2 _113812 P _113810 _113811).
Proof. exact (MK_COMB (@lem8364005 _146290 _146293 lt2 _113812 G _113810 _113811) (@lem8363999 _146290 _146293 lt2 _113812 P _113810 _113811)). Qed.
Lemma lem8364010 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem8364011 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (_113812 : _146293) (G : type797 _146290 _146293) (P : type799 _146290 _146293) (_113810 : _146293 -> _146290) (_113811 : _146293) : (term836 _146290 _146293 G lt2 _113812 P _113810 _113811) = (term837 _146290 _146293 lt2 _113812 G P _113810 _113811).
Proof. exact (@lem8364010 (term586 _146293 lt2 _113812 _113811) (term592 _146290 _146293 lt2 _113812 G _113810 _113811) (term595 _146290 _146293 P _113810 _113811)). Qed.
Lemma lem8364027 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (_113812 : _146293) (G : type797 _146290 _146293) (P : type799 _146290 _146293) (_113810 : _146293 -> _146290) (_113811 : _146293) : (term832 _146290 _146293 G P _113810 lt2 _113812 _113811) = (term837 _146290 _146293 lt2 _113812 G P _113810 _113811).
Proof. exact (TRANS (@lem8364006 _146290 _146293 G lt2 _113812 P _113810 _113811) (@lem8364011 _146290 _146293 lt2 _113812 G P _113810 _113811)). Qed.
Lemma lem8364028 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (_113812 : _146293) (G : type797 _146290 _146293) (P : type799 _146290 _146293) (_113810 : _146293 -> _146290) (_113811 : _146293) : (term746 _146290 _146293 P G _113810 lt2 _113812 _113811) = (term837 _146290 _146293 lt2 _113812 G P _113810 _113811).
Proof. exact (TRANS (@lem8363984 _146290 _146293 G P _113810 lt2 _113812 _113811) (@lem8364027 _146290 _146293 lt2 _113812 G P _113810 _113811)). Qed.
Lemma lem8364029 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8364030 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (_113812 : _146293) (G : type797 _146290 _146293) (P : type799 _146290 _146293) (_113810 : _146293 -> _146290) (_113811 : _146293) : (term838 _146290 _146293 P G _113810 lt2 _113812 _113811) = (term839 _146290 _146293 lt2 _113812 G P _113810 _113811).
Proof. exact (MK_COMB (@lem8364029) (@lem8364028 _146290 _146293 lt2 _113812 G P _113810 _113811)). Qed.
Lemma lem8364044 (q : Prop) (p : Prop) : (p \/ q) = (q \/ p).
Proof. exact (proj1 (@lem827 (@el Prop) p q)). Qed.
Lemma lem8364045 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (_113812 : _146293) (G : type797 _146290 _146293) (P : type799 _146290 _146293) (_113810 : _146293 -> _146290) (_113811 : _146293) : (term598 _146290 _146293 P lt2 _113812 G _113810 _113811) = (term840 _146290 _146293 lt2 _113812 G P _113810 _113811).
Proof. exact (@lem8364044 (term592 _146290 _146293 lt2 _113812 G _113810 _113811) (term595 _146290 _146293 P _113810 _113811)). Qed.
Lemma lem8364051 {_146293 : Type'} (lt2 : type1402 _146293) (_113812 : _146293) (_113811 : _146293) : (term841 _146293 lt2 _113812 _113811) = (term841 _146293 lt2 _113812 _113811).
Proof. exact (eq_refl (term841 _146293 lt2 _113812 _113811)). Qed.
Lemma lem8364052 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (_113812 : _146293) (G : type797 _146290 _146293) (P : type799 _146290 _146293) (_113810 : _146293 -> _146290) (_113811 : _146293) : (term842 _146290 _146293 P lt2 _113812 G _113810 _113811) = (term837 _146290 _146293 lt2 _113812 G P _113810 _113811).
Proof. exact (MK_COMB (@lem8364051 _146293 lt2 _113812 _113811) (@lem8364045 _146290 _146293 lt2 _113812 G P _113810 _113811)). Qed.
Lemma lem8364063 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (_113812 : _146293) (G : type797 _146290 _146293) (P : type799 _146290 _146293) (_113810 : _146293 -> _146290) (_113811 : _146293) : ((term746 _146290 _146293 P G _113810 lt2 _113812 _113811) = (term842 _146290 _146293 P lt2 _113812 G _113810 _113811)) = ((term837 _146290 _146293 lt2 _113812 G P _113810 _113811) = (term837 _146290 _146293 lt2 _113812 G P _113810 _113811)).
Proof. exact (MK_COMB (@lem8364030 _146290 _146293 lt2 _113812 G P _113810 _113811) (@lem8364052 _146290 _146293 lt2 _113812 G P _113810 _113811)). Qed.
Lemma lem8364065 {A : Type'} (x : A) : (x = x) = True.
Proof. exact (EQ_MP (@lem20665 A x) (@lem20664 A x)). Qed.
Lemma lem8364066 (x : Prop) : (x = x) = True.
Proof. exact (@lem8364065 Prop x). Qed.
Lemma lem8364067 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (_113812 : _146293) (G : type797 _146290 _146293) (P : type799 _146290 _146293) (_113810 : _146293 -> _146290) (_113811 : _146293) : ((term837 _146290 _146293 lt2 _113812 G P _113810 _113811) = (term837 _146290 _146293 lt2 _113812 G P _113810 _113811)) = True.
Proof. exact (@lem8364066 (term837 _146290 _146293 lt2 _113812 G P _113810 _113811)). Qed.
Lemma lem8364068 {_146290 _146293 : Type'} (P : type799 _146290 _146293) (lt2 : type1402 _146293) (_113812 : _146293) (G : type797 _146290 _146293) (_113810 : _146293 -> _146290) (_113811 : _146293) : ((term746 _146290 _146293 P G _113810 lt2 _113812 _113811) = (term842 _146290 _146293 P lt2 _113812 G _113810 _113811)) = True.
Proof. exact (TRANS (@lem8364063 _146290 _146293 lt2 _113812 G P _113810 _113811) (@lem8364067 _146290 _146293 lt2 _113812 G P _113810 _113811)). Qed.
Lemma lem8364069 {_146290 _146293 : Type'} (P : type799 _146290 _146293) (lt2 : type1402 _146293) (_113812 : _146293) (G : type797 _146290 _146293) (_113810 : _146293 -> _146290) (_113811 : _146293) : True = ((term746 _146290 _146293 P G _113810 lt2 _113812 _113811) = (term842 _146290 _146293 P lt2 _113812 G _113810 _113811)).
Proof. exact (SYM (@lem8364068 _146290 _146293 P lt2 _113812 G _113810 _113811)). Qed.
Lemma lem8364070 {_146290 _146293 : Type'} (P : type799 _146290 _146293) (lt2 : type1402 _146293) (_113812 : _146293) (G : type797 _146290 _146293) (_113810 : _146293 -> _146290) (_113811 : _146293) : (term746 _146290 _146293 P G _113810 lt2 _113812 _113811) = (term842 _146290 _146293 P lt2 _113812 G _113810 _113811).
Proof. exact (EQ_MP (@lem8364069 _146290 _146293 P lt2 _113812 G _113810 _113811) (@lem0)). Qed.
Lemma lem8364071 {_146290 _146293 : Type'} (_113812 : _146293) (_113810 : _146293 -> _146290) (_113811 : _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (lt2 : type1402 _146293) (h1 : term23 _146290 _146293 P G lt2) : term842 _146290 _146293 P lt2 _113812 G _113810 _113811.
Proof. exact (EQ_MP (@lem8364070 _146290 _146293 P lt2 _113812 G _113810 _113811) (@lem8361768 _146290 _146293 _113810 _113812 _113811 P G lt2 h1)). Qed.
Lemma lem8364073 (b : Prop) (a : Prop) : (a \/ b) = (term754 b a).
Proof. exact (EQ_MP (@lem20682 b a) (@lem20764 b a)). Qed.
Lemma lem8364074 {_146290 _146293 : Type'} (P : type799 _146290 _146293) (G : type797 _146290 _146293) (_113810 : _146293 -> _146290) (lt2 : type1402 _146293) (_113812 : _146293) (_113811 : _146293) : (term842 _146290 _146293 P lt2 _113812 G _113810 _113811) = (term843 _146290 _146293 P G _113810 lt2 _113812 _113811).
Proof. exact (@lem8364073 (term598 _146290 _146293 P lt2 _113812 G _113810 _113811) (term586 _146293 lt2 _113812 _113811)). Qed.
Lemma lem8364076 (a : Prop) (b : Prop) : (term756 a b) = (term757 a b).
Proof. exact (EQ_MP (@lem20789 a b) (@lem20895 a b)). Qed.
Lemma lem8364077 {_146290 _146293 : Type'} (P : type799 _146290 _146293) (lt2 : type1402 _146293) (_113812 : _146293) (G : type797 _146290 _146293) (_113810 : _146293 -> _146290) (_113811 : _146293) : (term844 _146290 _146293 P lt2 _113812 G _113810 _113811) = (term845 _146290 _146293 P lt2 _113812 G _113810 _113811).
Proof. exact (@lem8364076 (term595 _146290 _146293 P _113810 _113811) (term592 _146290 _146293 lt2 _113812 G _113810 _113811)). Qed.
Lemma lem8364079 (a : Prop) : (term47 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem8364080 {_146290 _146293 : Type'} (P : type799 _146290 _146293) (_113810 : _146293 -> _146290) (_113811 : _146293) : (term760 _146290 _146293 P _113810 _113811) = (term593 _146290 _146293 P _113810 _113811).
Proof. exact (@lem8364079 (term593 _146290 _146293 P _113810 _113811)). Qed.
Lemma lem8364081 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8364082 {_146290 _146293 : Type'} (P : type799 _146290 _146293) (_113810 : _146293 -> _146290) (_113811 : _146293) : (term761 _146290 _146293 P _113810 _113811) = (term610 _146290 _146293 P _113810 _113811).
Proof. exact (MK_COMB (@lem8364081) (@lem8364080 _146290 _146293 P _113810 _113811)). Qed.
Lemma lem8364084 (a : Prop) : (term47 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem8364085 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (_113812 : _146293) (G : type797 _146290 _146293) (_113810 : _146293 -> _146290) (_113811 : _146293) : (term846 _146290 _146293 lt2 _113812 G _113810 _113811) = (term590 _146290 _146293 lt2 _113812 G _113810 _113811).
Proof. exact (@lem8364084 (term590 _146290 _146293 lt2 _113812 G _113810 _113811)). Qed.
Lemma lem8364086 {_146290 _146293 : Type'} (P : type799 _146290 _146293) (lt2 : type1402 _146293) (_113812 : _146293) (G : type797 _146290 _146293) (_113810 : _146293 -> _146290) (_113811 : _146293) : (term845 _146290 _146293 P lt2 _113812 G _113810 _113811) = (term611 _146290 _146293 P lt2 _113812 G _113810 _113811).
Proof. exact (MK_COMB (@lem8364082 _146290 _146293 P _113810 _113811) (@lem8364085 _146290 _146293 lt2 _113812 G _113810 _113811)). Qed.
Lemma lem8364087 {_146290 _146293 : Type'} (P : type799 _146290 _146293) (lt2 : type1402 _146293) (_113812 : _146293) (G : type797 _146290 _146293) (_113810 : _146293 -> _146290) (_113811 : _146293) : (term844 _146290 _146293 P lt2 _113812 G _113810 _113811) = (term611 _146290 _146293 P lt2 _113812 G _113810 _113811).
Proof. exact (TRANS (@lem8364077 _146290 _146293 P lt2 _113812 G _113810 _113811) (@lem8364086 _146290 _146293 P lt2 _113812 G _113810 _113811)). Qed.
Lemma lem8364088 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem8364089 {_146290 _146293 : Type'} (P : type799 _146290 _146293) (lt2 : type1402 _146293) (_113812 : _146293) (G : type797 _146290 _146293) (_113810 : _146293 -> _146290) (_113811 : _146293) : (term847 _146290 _146293 P lt2 _113812 G _113810 _113811) = (term848 _146290 _146293 P lt2 _113812 G _113810 _113811).
Proof. exact (MK_COMB (@lem8364088) (@lem8364087 _146290 _146293 P lt2 _113812 G _113810 _113811)). Qed.
Lemma lem8364090 {_146293 : Type'} (lt2 : type1402 _146293) (_113812 : _146293) (_113811 : _146293) : (term586 _146293 lt2 _113812 _113811) = (term586 _146293 lt2 _113812 _113811).
Proof. exact (eq_refl (term586 _146293 lt2 _113812 _113811)). Qed.
Lemma lem8364091 {_146290 _146293 : Type'} (P : type799 _146290 _146293) (G : type797 _146290 _146293) (_113810 : _146293 -> _146290) (lt2 : type1402 _146293) (_113812 : _146293) (_113811 : _146293) : (term843 _146290 _146293 P G _113810 lt2 _113812 _113811) = (term849 _146290 _146293 P G _113810 lt2 _113812 _113811).
Proof. exact (MK_COMB (@lem8364089 _146290 _146293 P lt2 _113812 G _113810 _113811) (@lem8364090 _146293 lt2 _113812 _113811)). Qed.
Lemma lem8364092 {_146290 _146293 : Type'} (P : type799 _146290 _146293) (G : type797 _146290 _146293) (_113810 : _146293 -> _146290) (lt2 : type1402 _146293) (_113812 : _146293) (_113811 : _146293) : (term842 _146290 _146293 P lt2 _113812 G _113810 _113811) = (term849 _146290 _146293 P G _113810 lt2 _113812 _113811).
Proof. exact (TRANS (@lem8364074 _146290 _146293 P G _113810 lt2 _113812 _113811) (@lem8364091 _146290 _146293 P G _113810 lt2 _113812 _113811)). Qed.
Lemma lem8364094 {_146290 _146293 : Type'} (P : type799 _146290 _146293) (G : type797 _146290 _146293) (f : _146293 -> _146290) (lt2 : type1402 _146293) (y : _146293) (x : _146293) (h1 : term614 _146290 _146293 P G f lt2 y x) : term611 _146290 _146293 P lt2 y G f x.
Proof. exact (conj (@lem8363970 _146290 _146293 P G f lt2 y x h1) (@lem8363977 _146290 _146293 P G f lt2 y x h1)). Qed.
Lemma lem8364096 {_146290 _146293 : Type'} (_113810 : _146293 -> _146290) (_113812 : _146293) (_113811 : _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (lt2 : type1402 _146293) (h1 : term23 _146290 _146293 P G lt2) : term849 _146290 _146293 P G _113810 lt2 _113812 _113811.
Proof. exact (EQ_MP (@lem8364092 _146290 _146293 P G _113810 lt2 _113812 _113811) (@lem8364071 _146290 _146293 _113812 _113810 _113811 P G lt2 h1)). Qed.
Lemma lem8364097 {_146290 _146293 : Type'} (_113810 : _146293 -> _146290) (_113812 : _146293) (_113811 : _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (lt2 : type1402 _146293) (h1 : term23 _146290 _146293 P G lt2) : term849 _146290 _146293 P G _113810 lt2 _113812 _113811.
Proof. exact (@lem8364096 _146290 _146293 _113810 _113812 _113811 P G lt2 h1). Qed.
Lemma lem8364098 {_146290 _146293 : Type'} (f : _146293 -> _146290) (y : _146293) (x : _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (lt2 : type1402 _146293) (h1 : term23 _146290 _146293 P G lt2) : term849 _146290 _146293 P G f lt2 y x.
Proof. exact (@lem8364097 _146290 _146293 f y x P G lt2 h1). Qed.
Lemma lem8364101 {_146290 _146293 : Type'} (P : type799 _146290 _146293) (G : type797 _146290 _146293) (f : _146293 -> _146290) (lt2 : type1402 _146293) (y : _146293) (x : _146293) (h1 : term23 _146290 _146293 P G lt2) (h2 : term614 _146290 _146293 P G f lt2 y x) : term586 _146293 lt2 y x.
Proof. exact (@lem8364098 _146290 _146293 f y x P G lt2 h1 (@lem8364094 _146290 _146293 P G f lt2 y x h2)). Qed.
Lemma lem8364102 {_146290 _146293 : Type'} (P : type799 _146290 _146293) (G : type797 _146290 _146293) (f : _146293 -> _146290) (lt2 : type1402 _146293) (y : _146293) (x : _146293) (h1 : term23 _146290 _146293 P G lt2) (h2 : term614 _146290 _146293 P G f lt2 y x) : term850 _146293 lt2 y x.
Proof. exact (fun h0 : term608 _146293 lt2 y x => @lem8364101 _146290 _146293 P G f lt2 y x h1 h2). Qed.
Lemma lem8364104 (p : Prop) : (term748 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8364105 {_146293 : Type'} (lt2 : type1402 _146293) (y : _146293) (x : _146293) : (term850 _146293 lt2 y x) = (term586 _146293 lt2 y x).
Proof. exact (@lem8364104 (term586 _146293 lt2 y x)). Qed.
Lemma lem8364106 {_146290 _146293 : Type'} (P : type799 _146290 _146293) (G : type797 _146290 _146293) (f : _146293 -> _146290) (lt2 : type1402 _146293) (y : _146293) (x : _146293) (h1 : term23 _146290 _146293 P G lt2) (h2 : term614 _146290 _146293 P G f lt2 y x) : term586 _146293 lt2 y x.
Proof. exact (EQ_MP (@lem8364105 _146293 lt2 y x) (@lem8364102 _146290 _146293 P G f lt2 y x h1 h2)). Qed.
Lemma lem8364109 (p : Prop) : (~ p) = (p -> False).
Proof. exact (EQ_MP (@lem21021 p) (@lem0)). Qed.
Lemma lem8364111 {_146293 : Type'} (lt2 : type1402 _146293) (y : _146293) (x : _146293) : (term608 _146293 lt2 y x) = (term851 _146293 lt2 y x).
Proof. exact (@lem8364109 (term586 _146293 lt2 y x)). Qed.
Lemma lem8364114 {_146290 _146293 : Type'} (P : type799 _146290 _146293) (G : type797 _146290 _146293) (f : _146293 -> _146290) (lt2 : type1402 _146293) (y : _146293) (x : _146293) (h1 : term614 _146290 _146293 P G f lt2 y x) : term851 _146293 lt2 y x.
Proof. exact (EQ_MP (@lem8364111 _146293 lt2 y x) (@lem8361782 _146290 _146293 P G f lt2 y x h1)). Qed.
Lemma lem8364117 {_146290 _146293 : Type'} (P : type799 _146290 _146293) (G : type797 _146290 _146293) (f : _146293 -> _146290) (lt2 : type1402 _146293) (y : _146293) (x : _146293) (h1 : term23 _146290 _146293 P G lt2) (h2 : term614 _146290 _146293 P G f lt2 y x) : False.
Proof. exact (@lem8364114 _146290 _146293 P G f lt2 y x h2 (@lem8364106 _146290 _146293 P G f lt2 y x h1 h2)). Qed.
Lemma lem8364118 {_146290 _146293 : Type'} (P : type799 _146290 _146293) (G : type797 _146290 _146293) (f : _146293 -> _146290) (lt2 : type1402 _146293) (y : _146293) (x : _146293) (h1 : term23 _146290 _146293 P G lt2) (h2 : term614 _146290 _146293 P G f lt2 y x) : term750.
Proof. exact (fun h0 : ~ False => @lem8364117 _146290 _146293 P G f lt2 y x h1 h2). Qed.
Lemma lem8364120 (p : Prop) : (term748 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8364121 : term750 = False.
Proof. exact (@lem8364120 False). Qed.
Lemma lem8364122 {_146290 _146293 : Type'} (P : type799 _146290 _146293) (G : type797 _146290 _146293) (f : _146293 -> _146290) (lt2 : type1402 _146293) (y : _146293) (x : _146293) (h1 : term23 _146290 _146293 P G lt2) (h2 : term614 _146290 _146293 P G f lt2 y x) : False.
Proof. exact (EQ_MP (@lem8364121) (@lem8364118 _146290 _146293 P G f lt2 y x h1 h2)). Qed.
Lemma lem8364123 {_146290 _146293 : Type'} (z : type784 _146290 _146293) (lt2 : type1402 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (f : _146293 -> _146290) (H' : type796 _146290 _146293) (g : _146293 -> _146290) (x : _146293) (h1 : term259 _146290 _146293 lt2 z P G H') (h2 : term617 _146290 _146293 f H' g x) (h3 : term646 _146290 _146293 lt2 P G f H' g x) : (term617 _146290 _146293 f H' g x) = False.
Proof. exact (prop_ext (fun h4 : term617 _146290 _146293 f H' g x => @lem8363473 _146290 _146293 z lt2 P G f H' g x h1 h2 h3) (fun h4 : False => @lem8361592 _146290 _146293 f H' g x h2)). Qed.
Lemma lem8364124 {_146290 _146293 : Type'} (z : type784 _146290 _146293) (lt2 : type1402 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (f : _146293 -> _146290) (H' : type796 _146290 _146293) (g : _146293 -> _146290) (x : _146293) (h1 : term259 _146290 _146293 lt2 z P G H') (h2 : term617 _146290 _146293 f H' g x) (h3 : term646 _146290 _146293 lt2 P G f H' g x) : False.
Proof. exact (EQ_MP (@lem8364123 _146290 _146293 z lt2 P G f H' g x h1 h2 h3) (@lem8361592 _146290 _146293 f H' g x h2)). Qed.
Lemma lem8364125 {_146290 _146293 : Type'} (z : type784 _146290 _146293) (lt2 : type1402 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (f : _146293 -> _146290) (H' : type796 _146290 _146293) (g : _146293 -> _146290) (x : _146293) (h1 : term259 _146290 _146293 lt2 z P G H') (h2 : term631 _146290 _146293 f G g x) (h3 : term646 _146290 _146293 lt2 P G f H' g x) : (term631 _146290 _146293 f G g x) = False.
Proof. exact (prop_ext (fun h4 : term631 _146290 _146293 f G g x => @lem8363148 _146290 _146293 z lt2 P G f H' g x h1 h2 h3) (fun h4 : False => @lem8361494 _146290 _146293 f G g x h2)). Qed.
Lemma lem8364126 {_146290 _146293 : Type'} (z : type784 _146290 _146293) (lt2 : type1402 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (f : _146293 -> _146290) (H' : type796 _146290 _146293) (g : _146293 -> _146290) (x : _146293) (h1 : term259 _146290 _146293 lt2 z P G H') (h2 : term631 _146290 _146293 f G g x) (h3 : term646 _146290 _146293 lt2 P G f H' g x) : False.
Proof. exact (EQ_MP (@lem8364125 _146290 _146293 z lt2 P G f H' g x h1 h2 h3) (@lem8361494 _146290 _146293 f G g x h2)). Qed.
Lemma lem8364127 {_146293 : Type'} (lt2 : type1402 _146293) (h1 : @WF _146293 lt2) (h2 : term649 _146293 lt2) : (term649 _146293 lt2) = False.
Proof. exact (prop_ext (fun h3 : term649 _146293 lt2 => @lem8362038 _146293 lt2 h1 h2) (fun h3 : False => @lem8361196 _146293 lt2 h2)). Qed.
Lemma lem8364128 {_146293 : Type'} (lt2 : type1402 _146293) (h1 : @WF _146293 lt2) (h2 : term649 _146293 lt2) : False.
Proof. exact (EQ_MP (@lem8364127 _146293 lt2 h1 h2) (@lem8361196 _146293 lt2 h2)). Qed.
Lemma lem8364129 {_146290 _146293 : Type'} (z : type784 _146290 _146293) (lt2 : type1402 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (f : _146293 -> _146290) (H' : type796 _146290 _146293) (g : _146293 -> _146290) (x : _146293) (h1 : term259 _146290 _146293 lt2 z P G H') (h2 : term617 _146290 _146293 f H' g x) (h3 : term646 _146290 _146293 lt2 P G f H' g x) : (term617 _146290 _146293 f H' g x) = False.
Proof. exact (prop_ext (fun h4 : term617 _146290 _146293 f H' g x => @lem8364124 _146290 _146293 z lt2 P G f H' g x h1 h2 h3) (fun h4 : False => @lem8360516 _146290 _146293 f H' g x h2)). Qed.
Lemma lem8364130 {_146290 _146293 : Type'} (z : type784 _146290 _146293) (lt2 : type1402 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (f : _146293 -> _146290) (H' : type796 _146290 _146293) (g : _146293 -> _146290) (x : _146293) (h1 : term259 _146290 _146293 lt2 z P G H') (h2 : term617 _146290 _146293 f H' g x) (h3 : term646 _146290 _146293 lt2 P G f H' g x) : False.
Proof. exact (EQ_MP (@lem8364129 _146290 _146293 z lt2 P G f H' g x h1 h2 h3) (@lem8360516 _146290 _146293 f H' g x h2)). Qed.
Lemma lem8364131 {_146290 _146293 : Type'} (z : type784 _146290 _146293) (lt2 : type1402 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (f : _146293 -> _146290) (H' : type796 _146290 _146293) (g : _146293 -> _146290) (x : _146293) (h1 : term259 _146290 _146293 lt2 z P G H') (h2 : term631 _146290 _146293 f G g x) (h3 : term646 _146290 _146293 lt2 P G f H' g x) : (term631 _146290 _146293 f G g x) = False.
Proof. exact (prop_ext (fun h4 : term631 _146290 _146293 f G g x => @lem8364126 _146290 _146293 z lt2 P G f H' g x h1 h2 h3) (fun h4 : False => @lem8360349 _146290 _146293 f G g x h2)). Qed.
Lemma lem8364132 {_146290 _146293 : Type'} (z : type784 _146290 _146293) (lt2 : type1402 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (f : _146293 -> _146290) (H' : type796 _146290 _146293) (g : _146293 -> _146290) (x : _146293) (h1 : term259 _146290 _146293 lt2 z P G H') (h2 : term631 _146290 _146293 f G g x) (h3 : term646 _146290 _146293 lt2 P G f H' g x) : False.
Proof. exact (EQ_MP (@lem8364131 _146290 _146293 z lt2 P G f H' g x h1 h2 h3) (@lem8360349 _146290 _146293 f G g x h2)). Qed.
Lemma lem8364133 {_146293 : Type'} (lt2 : type1402 _146293) (h1 : @WF _146293 lt2) (h2 : term649 _146293 lt2) : (term649 _146293 lt2) = False.
Proof. exact (prop_ext (fun h3 : term649 _146293 lt2 => @lem8364128 _146293 lt2 h1 h2) (fun h3 : False => @lem8359840 _146293 lt2 h2)). Qed.
Lemma lem8364134 {_146293 : Type'} (lt2 : type1402 _146293) (h1 : @WF _146293 lt2) (h2 : term649 _146293 lt2) : False.
Proof. exact (EQ_MP (@lem8364133 _146293 lt2 h1 h2) (@lem8359840 _146293 lt2 h2)). Qed.
Lemma lem8364135 {_146290 _146293 : Type'} (z : type784 _146290 _146293) (lt2 : type1402 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (f : _146293 -> _146290) (H' : type796 _146290 _146293) (g : _146293 -> _146290) (x : _146293) (h1 : term259 _146290 _146293 lt2 z P G H') (h2 : term617 _146290 _146293 f H' g x) (h3 : term646 _146290 _146293 lt2 P G f H' g x) : (term617 _146290 _146293 f H' g x) = False.
Proof. exact (prop_ext (fun h4 : term617 _146290 _146293 f H' g x => @lem8364130 _146290 _146293 z lt2 P G f H' g x h1 h2 h3) (fun h4 : False => @lem8360516 _146290 _146293 f H' g x h2)). Qed.
Lemma lem8364136 {_146290 _146293 : Type'} (z : type784 _146290 _146293) (lt2 : type1402 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (f : _146293 -> _146290) (H' : type796 _146290 _146293) (g : _146293 -> _146290) (x : _146293) (h1 : term259 _146290 _146293 lt2 z P G H') (h2 : term617 _146290 _146293 f H' g x) (h3 : term646 _146290 _146293 lt2 P G f H' g x) : False.
Proof. exact (EQ_MP (@lem8364135 _146290 _146293 z lt2 P G f H' g x h1 h2 h3) (@lem8360516 _146290 _146293 f H' g x h2)). Qed.
Lemma lem8364137 {_146290 _146293 : Type'} (z : type784 _146290 _146293) (lt2 : type1402 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (f : _146293 -> _146290) (H' : type796 _146290 _146293) (g : _146293 -> _146290) (x : _146293) (h1 : term259 _146290 _146293 lt2 z P G H') (h2 : term631 _146290 _146293 f G g x) (h3 : term646 _146290 _146293 lt2 P G f H' g x) : (term631 _146290 _146293 f G g x) = False.
Proof. exact (prop_ext (fun h4 : term631 _146290 _146293 f G g x => @lem8364132 _146290 _146293 z lt2 P G f H' g x h1 h2 h3) (fun h4 : False => @lem8360349 _146290 _146293 f G g x h2)). Qed.
Lemma lem8364138 {_146290 _146293 : Type'} (z : type784 _146290 _146293) (lt2 : type1402 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (f : _146293 -> _146290) (H' : type796 _146290 _146293) (g : _146293 -> _146290) (x : _146293) (h1 : term259 _146290 _146293 lt2 z P G H') (h2 : term631 _146290 _146293 f G g x) (h3 : term646 _146290 _146293 lt2 P G f H' g x) : False.
Proof. exact (EQ_MP (@lem8364137 _146290 _146293 z lt2 P G f H' g x h1 h2 h3) (@lem8360349 _146290 _146293 f G g x h2)). Qed.
Lemma lem8364139 {_146293 : Type'} (lt2 : type1402 _146293) (h1 : @WF _146293 lt2) (h2 : term649 _146293 lt2) : (term649 _146293 lt2) = False.
Proof. exact (prop_ext (fun h3 : term649 _146293 lt2 => @lem8364134 _146293 lt2 h1 h2) (fun h3 : False => @lem8359840 _146293 lt2 h2)). Qed.
Lemma lem8364140 {_146293 : Type'} (lt2 : type1402 _146293) (h1 : @WF _146293 lt2) (h2 : term649 _146293 lt2) : False.
Proof. exact (EQ_MP (@lem8364139 _146293 lt2 h1 h2) (@lem8359840 _146293 lt2 h2)). Qed.
Lemma lem8364141 {_146290 _146293 : Type'} (z : type784 _146290 _146293) (H' : type796 _146290 _146293) (g : _146293 -> _146290) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (f : _146293 -> _146290) (lt2 : type1402 _146293) (y : _146293) (x : _146293) (h1 : term23 _146290 _146293 P G lt2) (h2 : term259 _146290 _146293 lt2 z P G H') (h3 : term627 _146290 _146293 H' g P G f lt2 y x) : False.
Proof. exact (or_elim (@lem8359666 _146290 _146293 H' g P G f lt2 y x h3) (fun h0 : term625 _146290 _146293 lt2 f H' g x => @lem8363798 _146290 _146293 z P G lt2 f H' g x h2 h0) (fun h0 : term614 _146290 _146293 P G f lt2 y x => @lem8364122 _146290 _146293 P G f lt2 y x h1 h0)). Qed.
Lemma lem8364142 {_146290 _146293 : Type'} (z : type784 _146290 _146293) (lt2 : type1402 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (f : _146293 -> _146290) (H' : type796 _146290 _146293) (g : _146293 -> _146290) (x : _146293) (h1 : term259 _146290 _146293 lt2 z P G H') (h2 : term646 _146290 _146293 lt2 P G f H' g x) (h3 : term634 _146290 _146293 G f H' g x) : False.
Proof. exact (or_elim (@lem8359670 _146290 _146293 G f H' g x h3) (fun h0 : term631 _146290 _146293 f G g x => @lem8364138 _146290 _146293 z lt2 P G f H' g x h1 h0 h2) (fun h0 : term617 _146290 _146293 f H' g x => @lem8364136 _146290 _146293 z lt2 P G f H' g x h1 h0 h2)). Qed.
Lemma lem8364143 {_146290 _146293 : Type'} (z : type784 _146290 _146293) (lt2 : type1402 _146293) (G : type797 _146290 _146293) (H' : type796 _146290 _146293) (f : _146293 -> _146290) (P : type799 _146290 _146293) (g : _146293 -> _146290) (x : _146293) (h1 : term259 _146290 _146293 lt2 z P G H') (h2 : term646 _146290 _146293 lt2 P G f H' g x) (h3 : term643 _146290 _146293 f P g x) : False.
Proof. exact (or_elim (@lem8359669 _146290 _146293 f P g x h3) (fun h0 : term640 _146290 _146293 f P g x => @lem8362444 _146290 _146293 z lt2 G H' f P g x h1 h2 h0) (fun h0 : term638 _146290 _146293 f P g x => @lem8362823 _146290 _146293 z lt2 G H' f P g x h1 h2 h0)). Qed.
Lemma lem8364144 {_146290 _146293 : Type'} (z : type784 _146290 _146293) (lt2 : type1402 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (f : _146293 -> _146290) (H' : type796 _146290 _146293) (g : _146293 -> _146290) (x : _146293) (h1 : term259 _146290 _146293 lt2 z P G H') (h2 : term646 _146290 _146293 lt2 P G f H' g x) : False.
Proof. exact (or_elim (@lem8359667 _146290 _146293 lt2 P G f H' g x h2) (fun h0 : term643 _146290 _146293 f P g x => @lem8364143 _146290 _146293 z lt2 G H' f P g x h1 h2 h0) (fun h0 : term634 _146290 _146293 G f H' g x => @lem8364142 _146290 _146293 z lt2 P G f H' g x h1 h2 h0)). Qed.
Lemma lem8364145 {_146290 _146293 : Type'} (z : type784 _146290 _146293) (H' : type796 _146290 _146293) (g : _146293 -> _146290) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (f : _146293 -> _146290) (lt2 : type1402 _146293) (y : _146293) (x : _146293) (h1 : term23 _146290 _146293 P G lt2) (h2 : term259 _146290 _146293 lt2 z P G H') (h3 : term648 _146290 _146293 H' g P G f lt2 y x) : False.
Proof. exact (or_elim (@lem8359664 _146290 _146293 H' g P G f lt2 y x h3) (fun h0 : term646 _146290 _146293 lt2 P G f H' g x => @lem8364144 _146290 _146293 z lt2 P G f H' g x h2 h0) (fun h0 : term627 _146290 _146293 H' g P G f lt2 y x => @lem8364141 _146290 _146293 z H' g P G f lt2 y x h1 h2 h0)). Qed.
Lemma lem8364146 {_146290 _146293 : Type'} (z : type784 _146290 _146293) (H' : type796 _146290 _146293) (g : _146293 -> _146290) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (f : _146293 -> _146290) (lt2 : type1402 _146293) (y : _146293) (x : _146293) (h1 : term23 _146290 _146293 P G lt2) (h2 : term259 _146290 _146293 lt2 z P G H') (h3 : @WF _146293 lt2) (h4 : term576 _146290 _146293 H' g P G f lt2 y x) : False.
Proof. exact (or_elim (@lem8359370 _146290 _146293 H' g P G f lt2 y x h4) (fun h0 : term649 _146293 lt2 => @lem8364140 _146293 lt2 h3 h0) (fun h0 : term648 _146290 _146293 H' g P G f lt2 y x => @lem8364145 _146290 _146293 z H' g P G f lt2 y x h1 h2 h0)). Qed.
Lemma lem8364147 {_146290 _146293 : Type'} (H' : type796 _146290 _146293) (g : _146293 -> _146290) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (f : _146293 -> _146290) (lt2 : type1402 _146293) (y : _146293) (x : _146293) (h1 : term23 _146290 _146293 P G lt2) (h2 : term21 _146290 _146293 lt2 P G H') (h3 : @WF _146293 lt2) (h4 : term576 _146290 _146293 H' g P G f lt2 y x) : False.
Proof. exact (ex_elim (@lem8357603 _146290 _146293 lt2 P G H' h2) (fun z : type784 _146290 _146293 => fun h0 : term261 _146290 _146293 lt2 P G H' z => @lem8364146 _146290 _146293 z H' g P G f lt2 y x h1 h0 h3 h4)). Qed.
Lemma lem8364148 {_146290 _146293 : Type'} (H' : type796 _146290 _146293) (g : _146293 -> _146290) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (f : _146293 -> _146290) (x : _146293) (lt2 : type1402 _146293) (h1 : term23 _146290 _146293 P G lt2) (h2 : term21 _146290 _146293 lt2 P G H') (h3 : term579 _146290 _146293 H' g P G f lt2 x) (h4 : @WF _146293 lt2) : False.
Proof. exact (ex_elim (@lem8358740 _146290 _146293 H' g P G f lt2 x h3) (fun y : _146293 => fun h0 : term578 _146290 _146293 H' g P G f lt2 x y => @lem8364147 _146290 _146293 H' g P G f lt2 y x h1 h2 h4 h0)). Qed.
Lemma lem8364149 {_146290 _146293 : Type'} (H' : type796 _146290 _146293) (g : _146293 -> _146290) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (f : _146293 -> _146290) (lt2 : type1402 _146293) (h1 : term23 _146290 _146293 P G lt2) (h2 : term21 _146290 _146293 lt2 P G H') (h3 : term581 _146290 _146293 H' g P G f lt2) (h4 : @WF _146293 lt2) : False.
Proof. exact (ex_elim (@lem8358739 _146290 _146293 H' g P G f lt2 h3) (fun x : _146293 => fun h0 : term580 _146290 _146293 H' g P G f lt2 x => @lem8364148 _146290 _146293 H' g P G f x lt2 h1 h2 h0 h4)). Qed.
Lemma lem8364150 {_146290 _146293 : Type'} (H' : type796 _146290 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (f : _146293 -> _146290) (lt2 : type1402 _146293) (h1 : term23 _146290 _146293 P G lt2) (h2 : term21 _146290 _146293 lt2 P G H') (h3 : term583 _146290 _146293 H' P G f lt2) (h4 : @WF _146293 lt2) : False.
Proof. exact (ex_elim (@lem8358738 _146290 _146293 H' P G f lt2 h3) (fun g : _146293 -> _146290 => fun h0 : term582 _146290 _146293 H' P G f lt2 g => @lem8364149 _146290 _146293 H' g P G f lt2 h1 h2 h0 h4)). Qed.
Lemma lem8364151 {_146290 _146293 : Type'} (H' : type796 _146290 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (lt2 : type1402 _146293) (h1 : term23 _146290 _146293 P G lt2) (h2 : term21 _146290 _146293 lt2 P G H') (h3 : @WF _146293 lt2) (h4 : term41 _146290 _146293 H' P G lt2) : False.
Proof. exact (ex_elim (@lem8358737 _146290 _146293 H' P G lt2 h4) (fun f : _146293 -> _146290 => fun h0 : term584 _146290 _146293 H' P G lt2 f => @lem8364150 _146290 _146293 H' P G f lt2 h1 h2 h0 h3)). Qed.
Lemma lem8364152 {_146290 _146293 : Type'} (H' : type796 _146290 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (lt2 : type1402 _146293) (h1 : term23 _146290 _146293 P G lt2) (h2 : term21 _146290 _146293 lt2 P G H') (h3 : @WF _146293 lt2) (h4 : term41 _146290 _146293 H' P G lt2) : (@WF _146293 lt2) = False.
Proof. exact (prop_ext (fun h5 : @WF _146293 lt2 => @lem8364151 _146290 _146293 H' P G lt2 h1 h2 h3 h4) (fun h5 : False => @lem8357315 _146293 lt2 h3)). Qed.
Lemma lem8364153 {_146290 _146293 : Type'} (H' : type796 _146290 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (lt2 : type1402 _146293) (h1 : term23 _146290 _146293 P G lt2) (h2 : term21 _146290 _146293 lt2 P G H') (h3 : @WF _146293 lt2) (h4 : term41 _146290 _146293 H' P G lt2) : False.
Proof. exact (EQ_MP (@lem8364152 _146290 _146293 H' P G lt2 h1 h2 h3 h4) (@lem8357315 _146293 lt2 h3)). Qed.
Lemma lem8364154 {_146290 _146293 : Type'} (H' : type796 _146290 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (lt2 : type1402 _146293) (h1 : term23 _146290 _146293 P G lt2) (h2 : term21 _146290 _146293 lt2 P G H') (h3 : @WF _146293 lt2) (h4 : term41 _146290 _146293 H' P G lt2) : (term41 _146290 _146293 H' P G lt2) = False.
Proof. exact (prop_ext (fun h5 : term41 _146290 _146293 H' P G lt2 => @lem8364153 _146290 _146293 H' P G lt2 h1 h2 h3 h4) (fun h5 : False => @lem8357309 _146290 _146293 H' P G lt2 h4)). Qed.
Lemma lem8364155 {_146290 _146293 : Type'} (H' : type796 _146290 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (lt2 : type1402 _146293) (h1 : term23 _146290 _146293 P G lt2) (h2 : term21 _146290 _146293 lt2 P G H') (h3 : @WF _146293 lt2) (h4 : term41 _146290 _146293 H' P G lt2) : False.
Proof. exact (EQ_MP (@lem8364154 _146290 _146293 H' P G lt2 h1 h2 h3 h4) (@lem8357309 _146290 _146293 H' P G lt2 h4)). Qed.
Lemma lem8364156 {_146290 _146293 : Type'} (P : type799 _146290 _146293) (G : type797 _146290 _146293) (H' : type796 _146290 _146293) (lt2 : type1402 _146293) (h1 : term23 _146290 _146293 P G lt2) (h2 : term21 _146290 _146293 lt2 P G H') (h3 : @WF _146293 lt2) : term40 _146290 _146293 H' P G lt2.
Proof. exact (fun h0 : term41 _146290 _146293 H' P G lt2 => @lem8364155 _146290 _146293 H' P G lt2 h1 h2 h3 h0). Qed.
Lemma lem8364157 {_146290 _146293 : Type'} (P : type799 _146290 _146293) (G : type797 _146290 _146293) (H' : type796 _146290 _146293) (lt2 : type1402 _146293) (h1 : term23 _146290 _146293 P G lt2) (h2 : term21 _146290 _146293 lt2 P G H') (h3 : @WF _146293 lt2) : term39 _146290 _146293 H' P G lt2.
Proof. exact (EQ_MP (@lem8357308 _146290 _146293 H' P G lt2) (@lem8364156 _146290 _146293 P G H' lt2 h1 h2 h3)). Qed.
Lemma lem8364158 {_146290 _146293 : Type'} (H : type796 _146290 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (H' : type796 _146290 _146293) (lt2 : type1402 _146293) (h1 : term23 _146290 _146293 P G lt2) (h2 : term21 _146290 _146293 lt2 P G H') (h3 : @WF _146293 lt2) : term129 _146290 _146293 H H' P G lt2.
Proof. exact (fun h0 : term127 _146290 _146293 G P H H' => @lem8364157 _146290 _146293 P G H' lt2 h1 h2 h3). Qed.
Lemma lem8364159 {_146290 _146293 : Type'} (H : type796 _146290 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (H' : type796 _146290 _146293) (lt2 : type1402 _146293) (h1 : term21 _146290 _146293 lt2 P G H') (h2 : @WF _146293 lt2) : term130 _146290 _146293 H H' P G lt2.
Proof. exact (fun h0 : term23 _146290 _146293 P G lt2 => @lem8364158 _146290 _146293 H P G H' lt2 h0 h1 h2). Qed.
Lemma lem8364160 {_146290 _146293 : Type'} (H : type796 _146290 _146293) (H' : type796 _146290 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (lt2 : type1402 _146293) (h1 : @WF _146293 lt2) : term131 _146290 _146293 H H' P G lt2.
Proof. exact (fun h0 : term21 _146290 _146293 lt2 P G H' => @lem8364159 _146290 _146293 H P G H' lt2 h0 h1). Qed.
Lemma lem8364161 {_146290 _146293 : Type'} (H : type796 _146290 _146293) (H' : type796 _146290 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (lt2 : type1402 _146293) : term132 _146290 _146293 H H' P G lt2.
Proof. exact (fun h0 : @WF _146293 lt2 => @lem8364160 _146290 _146293 H H' P G lt2 h0). Qed.
Lemma lem8364166 {_146290 _146293 : Type'} (H' : type796 _146290 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (lt2 : type1402 _146293) : term134 _146290 _146293 H' P G lt2.
Proof. exact (fun H : type796 _146290 _146293 => @lem8364161 _146290 _146293 H H' P G lt2). Qed.
Lemma lem8364171 {_146290 _146293 : Type'} (P : type799 _146290 _146293) (G : type797 _146290 _146293) (lt2 : type1402 _146293) : term136 _146290 _146293 P G lt2.
Proof. exact (fun H' : type796 _146290 _146293 => @lem8364166 _146290 _146293 H' P G lt2). Qed.
Lemma lem8364176 {_146290 _146293 : Type'} (G : type797 _146290 _146293) (lt2 : type1402 _146293) : term138 _146290 _146293 G lt2.
Proof. exact (fun P : type799 _146290 _146293 => @lem8364171 _146290 _146293 P G lt2). Qed.
Lemma lem8364181 {_146290 _146293 : Type'} (lt2 : type1402 _146293) : term140 _146290 _146293 lt2.
Proof. exact (fun G : type797 _146290 _146293 => @lem8364176 _146290 _146293 G lt2). Qed.
Lemma lem8364186 {_146290 _146293 : Type'} : term142 _146290 _146293.
Proof. exact (fun lt2 : type1402 _146293 => @lem8364181 _146290 _146293 lt2). Qed.
Lemma lem8364187 {_146290 _146293 : Type'} : term77 _146290 _146293.
Proof. exact (EQ_MP (@lem8357300 _146290 _146293) (@lem8364186 _146290 _146293)). Qed.
Lemma lem8364188 {_146290 _146293 : Type'} (lt2 : type1402 _146293) : term852 _146290 _146293 lt2.
Proof. exact (@lem8364187 _146290 _146293 lt2). Qed.
Lemma lem8364189 {_146290 _146293 : Type'} (lt2 : type1402 _146293) : (term852 _146290 _146293 lt2) = (term73 _146290 _146293 lt2).
Proof. exact (eq_refl (term852 _146290 _146293 lt2)). Qed.
Lemma lem8364190 {_146290 _146293 : Type'} (lt2 : type1402 _146293) : term73 _146290 _146293 lt2.
Proof. exact (EQ_MP (@lem8364189 _146290 _146293 lt2) (@lem8364188 _146290 _146293 lt2)). Qed.
Lemma lem8364191 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (G : type797 _146290 _146293) : term853 _146290 _146293 lt2 G.
Proof. exact (@lem8364190 _146290 _146293 lt2 G). Qed.
Lemma lem8364192 {_146290 _146293 : Type'} (G : type797 _146290 _146293) (lt2 : type1402 _146293) : (term853 _146290 _146293 lt2 G) = (term69 _146290 _146293 G lt2).
Proof. exact (eq_refl (term853 _146290 _146293 lt2 G)). Qed.
Lemma lem8364193 {_146290 _146293 : Type'} (G : type797 _146290 _146293) (lt2 : type1402 _146293) : term69 _146290 _146293 G lt2.
Proof. exact (EQ_MP (@lem8364192 _146290 _146293 G lt2) (@lem8364191 _146290 _146293 lt2 G)). Qed.
Lemma lem8364194 {_146290 _146293 : Type'} (G : type797 _146290 _146293) (lt2 : type1402 _146293) (P : type799 _146290 _146293) : term854 _146290 _146293 G lt2 P.
Proof. exact (@lem8364193 _146290 _146293 G lt2 P). Qed.
Lemma lem8364195 {_146290 _146293 : Type'} (P : type799 _146290 _146293) (G : type797 _146290 _146293) (lt2 : type1402 _146293) : (term854 _146290 _146293 G lt2 P) = (term65 _146290 _146293 P G lt2).
Proof. exact (eq_refl (term854 _146290 _146293 G lt2 P)). Qed.
Lemma lem8364196 {_146290 _146293 : Type'} (P : type799 _146290 _146293) (G : type797 _146290 _146293) (lt2 : type1402 _146293) : term65 _146290 _146293 P G lt2.
Proof. exact (EQ_MP (@lem8364195 _146290 _146293 P G lt2) (@lem8364194 _146290 _146293 G lt2 P)). Qed.
Lemma lem8364197 {_146290 _146293 : Type'} (P : type799 _146290 _146293) (G : type797 _146290 _146293) (lt2 : type1402 _146293) (H' : type796 _146290 _146293) : term855 _146290 _146293 P G lt2 H'.
Proof. exact (@lem8364196 _146290 _146293 P G lt2 H'). Qed.
Lemma lem8364198 {_146290 _146293 : Type'} (H' : type796 _146290 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (lt2 : type1402 _146293) : (term855 _146290 _146293 P G lt2 H') = (term61 _146290 _146293 H' P G lt2).
Proof. exact (eq_refl (term855 _146290 _146293 P G lt2 H')). Qed.
Lemma lem8364199 {_146290 _146293 : Type'} (H' : type796 _146290 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (lt2 : type1402 _146293) : term61 _146290 _146293 H' P G lt2.
Proof. exact (EQ_MP (@lem8364198 _146290 _146293 H' P G lt2) (@lem8364197 _146290 _146293 P G lt2 H')). Qed.
Lemma lem8364200 {_146290 _146293 : Type'} (H' : type796 _146290 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (lt2 : type1402 _146293) (H : type796 _146290 _146293) : term856 _146290 _146293 H' P G lt2 H.
Proof. exact (@lem8364199 _146290 _146293 H' P G lt2 H). Qed.
Lemma lem8364201 {_146290 _146293 : Type'} (H : type796 _146290 _146293) (H' : type796 _146290 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (lt2 : type1402 _146293) : (term856 _146290 _146293 H' P G lt2 H) = (term42 _146290 _146293 H H' P G lt2).
Proof. exact (eq_refl (term856 _146290 _146293 H' P G lt2 H)). Qed.
Lemma lem8364202 {_146290 _146293 : Type'} (H : type796 _146290 _146293) (H' : type796 _146290 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (lt2 : type1402 _146293) : term42 _146290 _146293 H H' P G lt2.
Proof. exact (EQ_MP (@lem8364201 _146290 _146293 H H' P G lt2) (@lem8364200 _146290 _146293 H' P G lt2 H)). Qed.
Lemma lem8364204 {_146290 _146293 : Type'} (H : type796 _146290 _146293) (H' : type796 _146290 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (lt2 : type1402 _146293) : term42 _146290 _146293 H H' P G lt2.
Proof. exact (@lem8356652 _146290 _146293 H H' P G lt2 (@lem8364202 _146290 _146293 H H' P G lt2)). Qed.
Lemma lem8364205 {_146290 _146293 : Type'} (H : type796 _146290 _146293) (H' : type796 _146290 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (lt2 : type1402 _146293) (h1 : @WF _146293 lt2) : term55 _146290 _146293 H H' P G lt2.
Proof. exact (@lem8364204 _146290 _146293 H H' P G lt2 (@lem8356561 _146293 lt2 h1)). Qed.
Lemma lem8364206 {_146290 _146293 : Type'} (H : type796 _146290 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (H' : type796 _146290 _146293) (lt2 : type1402 _146293) (h1 : term21 _146290 _146293 lt2 P G H') (h2 : @WF _146293 lt2) : term52 _146290 _146293 H H' P G lt2.
Proof. exact (@lem8364205 _146290 _146293 H H' P G lt2 h2 (@lem8356563 _146290 _146293 lt2 P G H' h1)). Qed.
Lemma lem8364207 {_146290 _146293 : Type'} (H : type796 _146290 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (H' : type796 _146290 _146293) (lt2 : type1402 _146293) (h1 : term23 _146290 _146293 P G lt2) (h2 : term21 _146290 _146293 lt2 P G H') (h3 : @WF _146293 lt2) : term49 _146290 _146293 H H' P G lt2.
Proof. exact (@lem8364206 _146290 _146293 H P G H' lt2 h2 h3 (@lem8356565 _146290 _146293 P G lt2 h1)). Qed.
Lemma lem8364208 {_146290 _146293 : Type'} (H : type796 _146290 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (H' : type796 _146290 _146293) (lt2 : type1402 _146293) (h1 : term23 _146290 _146293 P G lt2) (h2 : term22 _146290 _146293 H P G H') (h3 : term21 _146290 _146293 lt2 P G H') (h4 : @WF _146293 lt2) : term40 _146290 _146293 H' P G lt2.
Proof. exact (@lem8364207 _146290 _146293 H P G H' lt2 h1 h3 h4 (@lem8356564 _146290 _146293 H P G H' h2)). Qed.
Lemma lem8364209 {_146290 _146293 : Type'} (H : type796 _146290 _146293) (H' : type796 _146290 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (lt2 : type1402 _146293) (h1 : term23 _146290 _146293 P G lt2) (h2 : term22 _146290 _146293 H P G H') (h3 : term21 _146290 _146293 lt2 P G H') (h4 : @WF _146293 lt2) (h5 : term41 _146290 _146293 H' P G lt2) : False.
Proof. exact (@lem8364208 _146290 _146293 H P G H' lt2 h1 h2 h3 h4 (@lem8356636 _146290 _146293 H' P G lt2 h5)). Qed.
Lemma lem8364210 {_146290 _146293 : Type'} (H : type796 _146290 _146293) (H' : type796 _146290 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (lt2 : type1402 _146293) (h1 : term23 _146290 _146293 P G lt2) (h2 : term22 _146290 _146293 H P G H') (h3 : term21 _146290 _146293 lt2 P G H') (h4 : @WF _146293 lt2) (h5 : term41 _146290 _146293 H' P G lt2) : (term41 _146290 _146293 H' P G lt2) = False.
Proof. exact (prop_ext (fun h6 : term41 _146290 _146293 H' P G lt2 => @lem8364209 _146290 _146293 H H' P G lt2 h1 h2 h3 h4 h5) (fun h6 : False => @lem8356636 _146290 _146293 H' P G lt2 h5)). Qed.
Lemma lem8364211 {_146290 _146293 : Type'} (H : type796 _146290 _146293) (H' : type796 _146290 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (lt2 : type1402 _146293) (h1 : term23 _146290 _146293 P G lt2) (h2 : term22 _146290 _146293 H P G H') (h3 : term21 _146290 _146293 lt2 P G H') (h4 : @WF _146293 lt2) (h5 : term41 _146290 _146293 H' P G lt2) : False.
Proof. exact (EQ_MP (@lem8364210 _146290 _146293 H H' P G lt2 h1 h2 h3 h4 h5) (@lem8356636 _146290 _146293 H' P G lt2 h5)). Qed.
Lemma lem8364212 {_146290 _146293 : Type'} (H : type796 _146290 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (H' : type796 _146290 _146293) (lt2 : type1402 _146293) (h1 : term23 _146290 _146293 P G lt2) (h2 : term22 _146290 _146293 H P G H') (h3 : term21 _146290 _146293 lt2 P G H') (h4 : @WF _146293 lt2) : term40 _146290 _146293 H' P G lt2.
Proof. exact (fun h0 : term41 _146290 _146293 H' P G lt2 => @lem8364211 _146290 _146293 H H' P G lt2 h1 h2 h3 h4 h0). Qed.
Lemma lem8364213 {_146290 _146293 : Type'} (H : type796 _146290 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (H' : type796 _146290 _146293) (lt2 : type1402 _146293) (h1 : term23 _146290 _146293 P G lt2) (h2 : term22 _146290 _146293 H P G H') (h3 : term21 _146290 _146293 lt2 P G H') (h4 : @WF _146293 lt2) : term39 _146290 _146293 H' P G lt2.
Proof. exact (EQ_MP (@lem8356635 _146290 _146293 H' P G lt2) (@lem8364212 _146290 _146293 H P G H' lt2 h1 h2 h3 h4)). Qed.
Lemma lem8364214 {_146290 _146293 : Type'} (H : type796 _146290 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (H' : type796 _146290 _146293) (lt2 : type1402 _146293) (h1 : term23 _146290 _146293 P G lt2) (h2 : term22 _146290 _146293 H P G H') (h3 : term21 _146290 _146293 lt2 P G H') (h4 : @WF _146293 lt2) : term36 _146290 _146293 P G H'.
Proof. exact (@lem8356631 _146290 _146293 lt2 P G H' (@lem8364213 _146290 _146293 H P G H' lt2 h1 h2 h3 h4)). Qed.
Lemma lem8364215 {_146290 _146293 : Type'} (H : type796 _146290 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (H' : type796 _146290 _146293) (lt2 : type1402 _146293) (h1 : term23 _146290 _146293 P G lt2) (h2 : term22 _146290 _146293 H P G H') (h3 : term21 _146290 _146293 lt2 P G H') (h4 : @WF _146293 lt2) : term35 _146290 _146293 H.
Proof. exact (EQ_MP (@lem8356627 _146290 _146293 H P G H' h2) (@lem8364214 _146290 _146293 H P G H' lt2 h1 h2 h3 h4)). Qed.
Lemma lem8364216 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (H : type796 _146290 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (H' : type796 _146290 _146293) (h1 : term18 _146290 _146293 lt2 H P G H') : term19 _146290 _146293 lt2 H P G H'.
Proof. exact (proj2 (@lem8356559 _146290 _146293 lt2 H P G H' h1)). Qed.
Lemma lem8364217 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (H : type796 _146290 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (H' : type796 _146290 _146293) (h1 : term18 _146290 _146293 lt2 H P G H') : @WF _146293 lt2.
Proof. exact (proj1 (@lem8356559 _146290 _146293 lt2 H P G H' h1)). Qed.
Lemma lem8364218 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (H : type796 _146290 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (H' : type796 _146290 _146293) (h1 : term19 _146290 _146293 lt2 H P G H') : term20 _146290 _146293 lt2 H P G H'.
Proof. exact (proj2 (@lem8356560 _146290 _146293 lt2 H P G H' h1)). Qed.
Lemma lem8364219 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (H : type796 _146290 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (H' : type796 _146290 _146293) (h1 : term19 _146290 _146293 lt2 H P G H') : term21 _146290 _146293 lt2 P G H'.
Proof. exact (proj1 (@lem8356560 _146290 _146293 lt2 H P G H' h1)). Qed.
Lemma lem8364220 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (H : type796 _146290 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (H' : type796 _146290 _146293) (h1 : term20 _146290 _146293 lt2 H P G H') : term22 _146290 _146293 H P G H'.
Proof. exact (proj2 (@lem8356562 _146290 _146293 lt2 H P G H' h1)). Qed.
Lemma lem8364221 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (H : type796 _146290 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (H' : type796 _146290 _146293) (h1 : term20 _146290 _146293 lt2 H P G H') : term23 _146290 _146293 P G lt2.
Proof. exact (proj1 (@lem8356562 _146290 _146293 lt2 H P G H' h1)). Qed.
Lemma lem8364222 {_146290 _146293 : Type'} (H : type796 _146290 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (H' : type796 _146290 _146293) (lt2 : type1402 _146293) (h1 : term23 _146290 _146293 P G lt2) (h2 : term22 _146290 _146293 H P G H') (h3 : term21 _146290 _146293 lt2 P G H') (h4 : @WF _146293 lt2) : (term22 _146290 _146293 H P G H') = (term35 _146290 _146293 H).
Proof. exact (prop_ext (fun h5 : term22 _146290 _146293 H P G H' => @lem8364215 _146290 _146293 H P G H' lt2 h1 h2 h3 h4) (fun h5 : term35 _146290 _146293 H => @lem8356564 _146290 _146293 H P G H' h2)). Qed.
Lemma lem8364223 {_146290 _146293 : Type'} (H : type796 _146290 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (H' : type796 _146290 _146293) (lt2 : type1402 _146293) (h1 : term23 _146290 _146293 P G lt2) (h2 : term22 _146290 _146293 H P G H') (h3 : term21 _146290 _146293 lt2 P G H') (h4 : @WF _146293 lt2) : term35 _146290 _146293 H.
Proof. exact (EQ_MP (@lem8364222 _146290 _146293 H P G H' lt2 h1 h2 h3 h4) (@lem8356564 _146290 _146293 H P G H' h2)). Qed.
Lemma lem8364224 {_146290 _146293 : Type'} (H : type796 _146290 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (H' : type796 _146290 _146293) (lt2 : type1402 _146293) (h1 : term23 _146290 _146293 P G lt2) (h2 : term22 _146290 _146293 H P G H') (h3 : term21 _146290 _146293 lt2 P G H') (h4 : @WF _146293 lt2) : (term23 _146290 _146293 P G lt2) = (term35 _146290 _146293 H).
Proof. exact (prop_ext (fun h5 : term23 _146290 _146293 P G lt2 => @lem8364223 _146290 _146293 H P G H' lt2 h1 h2 h3 h4) (fun h5 : term35 _146290 _146293 H => @lem8356565 _146290 _146293 P G lt2 h1)). Qed.
Lemma lem8364225 {_146290 _146293 : Type'} (H : type796 _146290 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (H' : type796 _146290 _146293) (lt2 : type1402 _146293) (h1 : term23 _146290 _146293 P G lt2) (h2 : term22 _146290 _146293 H P G H') (h3 : term21 _146290 _146293 lt2 P G H') (h4 : @WF _146293 lt2) : term35 _146290 _146293 H.
Proof. exact (EQ_MP (@lem8364224 _146290 _146293 H P G H' lt2 h1 h2 h3 h4) (@lem8356565 _146290 _146293 P G lt2 h1)). Qed.
Lemma lem8364226 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (H : type796 _146290 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (H' : type796 _146290 _146293) (h1 : term23 _146290 _146293 P G lt2) (h2 : term21 _146290 _146293 lt2 P G H') (h3 : @WF _146293 lt2) (h4 : term20 _146290 _146293 lt2 H P G H') : (term22 _146290 _146293 H P G H') = (term35 _146290 _146293 H).
Proof. exact (prop_ext (fun h5 : term22 _146290 _146293 H P G H' => @lem8364225 _146290 _146293 H P G H' lt2 h1 h5 h2 h3) (fun h5 : term35 _146290 _146293 H => @lem8364220 _146290 _146293 lt2 H P G H' h4)). Qed.
Lemma lem8364227 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (H : type796 _146290 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (H' : type796 _146290 _146293) (h1 : term23 _146290 _146293 P G lt2) (h2 : term21 _146290 _146293 lt2 P G H') (h3 : @WF _146293 lt2) (h4 : term20 _146290 _146293 lt2 H P G H') : term35 _146290 _146293 H.
Proof. exact (EQ_MP (@lem8364226 _146290 _146293 lt2 H P G H' h1 h2 h3 h4) (@lem8364220 _146290 _146293 lt2 H P G H' h4)). Qed.
Lemma lem8364228 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (H : type796 _146290 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (H' : type796 _146290 _146293) (h1 : term21 _146290 _146293 lt2 P G H') (h2 : @WF _146293 lt2) (h3 : term20 _146290 _146293 lt2 H P G H') : (term23 _146290 _146293 P G lt2) = (term35 _146290 _146293 H).
Proof. exact (prop_ext (fun h4 : term23 _146290 _146293 P G lt2 => @lem8364227 _146290 _146293 lt2 H P G H' h4 h1 h2 h3) (fun h4 : term35 _146290 _146293 H => @lem8364221 _146290 _146293 lt2 H P G H' h3)). Qed.
Lemma lem8364229 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (H : type796 _146290 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (H' : type796 _146290 _146293) (h1 : term21 _146290 _146293 lt2 P G H') (h2 : @WF _146293 lt2) (h3 : term20 _146290 _146293 lt2 H P G H') : term35 _146290 _146293 H.
Proof. exact (EQ_MP (@lem8364228 _146290 _146293 lt2 H P G H' h1 h2 h3) (@lem8364221 _146290 _146293 lt2 H P G H' h3)). Qed.
Lemma lem8364230 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (H : type796 _146290 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (H' : type796 _146290 _146293) (h1 : term21 _146290 _146293 lt2 P G H') (h2 : @WF _146293 lt2) (h3 : term20 _146290 _146293 lt2 H P G H') : (term21 _146290 _146293 lt2 P G H') = (term35 _146290 _146293 H).
Proof. exact (prop_ext (fun h4 : term21 _146290 _146293 lt2 P G H' => @lem8364229 _146290 _146293 lt2 H P G H' h1 h2 h3) (fun h4 : term35 _146290 _146293 H => @lem8356563 _146290 _146293 lt2 P G H' h1)). Qed.
Lemma lem8364231 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (H : type796 _146290 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (H' : type796 _146290 _146293) (h1 : term21 _146290 _146293 lt2 P G H') (h2 : @WF _146293 lt2) (h3 : term20 _146290 _146293 lt2 H P G H') : term35 _146290 _146293 H.
Proof. exact (EQ_MP (@lem8364230 _146290 _146293 lt2 H P G H' h1 h2 h3) (@lem8356563 _146290 _146293 lt2 P G H' h1)). Qed.
Lemma lem8364232 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (H : type796 _146290 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (H' : type796 _146290 _146293) (h1 : term21 _146290 _146293 lt2 P G H') (h2 : @WF _146293 lt2) (h3 : term19 _146290 _146293 lt2 H P G H') : (term20 _146290 _146293 lt2 H P G H') = (term35 _146290 _146293 H).
Proof. exact (prop_ext (fun h4 : term20 _146290 _146293 lt2 H P G H' => @lem8364231 _146290 _146293 lt2 H P G H' h1 h2 h4) (fun h4 : term35 _146290 _146293 H => @lem8364218 _146290 _146293 lt2 H P G H' h3)). Qed.
Lemma lem8364233 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (H : type796 _146290 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (H' : type796 _146290 _146293) (h1 : term21 _146290 _146293 lt2 P G H') (h2 : @WF _146293 lt2) (h3 : term19 _146290 _146293 lt2 H P G H') : term35 _146290 _146293 H.
Proof. exact (EQ_MP (@lem8364232 _146290 _146293 lt2 H P G H' h1 h2 h3) (@lem8364218 _146290 _146293 lt2 H P G H' h3)). Qed.
Lemma lem8364234 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (H : type796 _146290 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (H' : type796 _146290 _146293) (h1 : @WF _146293 lt2) (h2 : term19 _146290 _146293 lt2 H P G H') : (term21 _146290 _146293 lt2 P G H') = (term35 _146290 _146293 H).
Proof. exact (prop_ext (fun h3 : term21 _146290 _146293 lt2 P G H' => @lem8364233 _146290 _146293 lt2 H P G H' h3 h1 h2) (fun h3 : term35 _146290 _146293 H => @lem8364219 _146290 _146293 lt2 H P G H' h2)). Qed.
Lemma lem8364235 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (H : type796 _146290 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (H' : type796 _146290 _146293) (h1 : @WF _146293 lt2) (h2 : term19 _146290 _146293 lt2 H P G H') : term35 _146290 _146293 H.
Proof. exact (EQ_MP (@lem8364234 _146290 _146293 lt2 H P G H' h1 h2) (@lem8364219 _146290 _146293 lt2 H P G H' h2)). Qed.
Lemma lem8364236 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (H : type796 _146290 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (H' : type796 _146290 _146293) (h1 : @WF _146293 lt2) (h2 : term19 _146290 _146293 lt2 H P G H') : (@WF _146293 lt2) = (term35 _146290 _146293 H).
Proof. exact (prop_ext (fun h3 : @WF _146293 lt2 => @lem8364235 _146290 _146293 lt2 H P G H' h1 h2) (fun h3 : term35 _146290 _146293 H => @lem8356561 _146293 lt2 h1)). Qed.
Lemma lem8364237 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (H : type796 _146290 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (H' : type796 _146290 _146293) (h1 : @WF _146293 lt2) (h2 : term19 _146290 _146293 lt2 H P G H') : term35 _146290 _146293 H.
Proof. exact (EQ_MP (@lem8364236 _146290 _146293 lt2 H P G H' h1 h2) (@lem8356561 _146293 lt2 h1)). Qed.
Lemma lem8364238 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (H : type796 _146290 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (H' : type796 _146290 _146293) (h1 : @WF _146293 lt2) (h2 : term18 _146290 _146293 lt2 H P G H') : (term19 _146290 _146293 lt2 H P G H') = (term35 _146290 _146293 H).
Proof. exact (prop_ext (fun h3 : term19 _146290 _146293 lt2 H P G H' => @lem8364237 _146290 _146293 lt2 H P G H' h1 h3) (fun h3 : term35 _146290 _146293 H => @lem8364216 _146290 _146293 lt2 H P G H' h2)). Qed.
Lemma lem8364239 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (H : type796 _146290 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (H' : type796 _146290 _146293) (h1 : @WF _146293 lt2) (h2 : term18 _146290 _146293 lt2 H P G H') : term35 _146290 _146293 H.
Proof. exact (EQ_MP (@lem8364238 _146290 _146293 lt2 H P G H' h1 h2) (@lem8364216 _146290 _146293 lt2 H P G H' h2)). Qed.
Lemma lem8364240 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (H : type796 _146290 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (H' : type796 _146290 _146293) (h1 : term18 _146290 _146293 lt2 H P G H') : (@WF _146293 lt2) = (term35 _146290 _146293 H).
Proof. exact (prop_ext (fun h2 : @WF _146293 lt2 => @lem8364239 _146290 _146293 lt2 H P G H' h2 h1) (fun h2 : term35 _146290 _146293 H => @lem8364217 _146290 _146293 lt2 H P G H' h1)). Qed.
Lemma lem8364241 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (H : type796 _146290 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (H' : type796 _146290 _146293) (h1 : term18 _146290 _146293 lt2 H P G H') : term35 _146290 _146293 H.
Proof. exact (EQ_MP (@lem8364240 _146290 _146293 lt2 H P G H' h1) (@lem8364217 _146290 _146293 lt2 H P G H' h1)). Qed.
Lemma lem8364242 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (H' : type796 _146290 _146293) (H : type796 _146290 _146293) : term857 _146290 _146293 lt2 P G H' H.
Proof. exact (fun h0 : term18 _146290 _146293 lt2 H P G H' => @lem8364241 _146290 _146293 lt2 H P G H' h0). Qed.
Lemma lem8364247 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (H : type796 _146290 _146293) : term858 _146290 _146293 lt2 P G H.
Proof. exact (fun H' : type796 _146290 _146293 => @lem8364242 _146290 _146293 lt2 P G H' H). Qed.
Lemma lem8364252 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) : term859 _146290 _146293 lt2 P G.
Proof. exact (fun H : type796 _146290 _146293 => @lem8364247 _146290 _146293 lt2 P G H). Qed.
Lemma lem8364257 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (P : type799 _146290 _146293) : term860 _146290 _146293 lt2 P.
Proof. exact (fun G : type797 _146290 _146293 => @lem8364252 _146290 _146293 lt2 P G). Qed.
Lemma lem8364262 {_146290 _146293 : Type'} (lt2 : type1402 _146293) : term861 _146290 _146293 lt2.
Proof. exact (fun P : type799 _146290 _146293 => @lem8364257 _146290 _146293 lt2 P). Qed.
Lemma lem8364263 (t1 : Prop) : term0 t1.
Proof. exact (@lem693 t1). Qed.
Lemma lem8364264 (t1 : Prop) : (term0 t1) = (term1 t1).
Proof. exact (eq_refl (term0 t1)). Qed.
Lemma lem8364265 (t1 : Prop) : term1 t1.
Proof. exact (EQ_MP (@lem8364264 t1) (@lem8364263 t1)). Qed.
Lemma lem8364266 (t1 : Prop) (t2 : Prop) : term2 t1 t2.
Proof. exact (@lem8364265 t1 t2). Qed.
Lemma lem8364267 (t1 : Prop) (t2 : Prop) : (term2 t1 t2) = (term3 t1 t2).
Proof. exact (eq_refl (term2 t1 t2)). Qed.
Lemma lem8364268 (t1 : Prop) (t2 : Prop) : term3 t1 t2.
Proof. exact (EQ_MP (@lem8364267 t1 t2) (@lem8364266 t1 t2)). Qed.
Lemma lem8364269 (t1 : Prop) (t2 : Prop) (t3 : Prop) : term4 t1 t2 t3.
Proof. exact (@lem8364268 t1 t2 t3). Qed.
Lemma lem8364270 (t1 : Prop) (t2 : Prop) (t3 : Prop) : (term4 t1 t2 t3) = ((term5 t1 t2 t3) = (term6 t1 t2 t3)).
Proof. exact (eq_refl (term4 t1 t2 t3)). Qed.
Lemma lem8364271 (t1 : Prop) (t2 : Prop) (t3 : Prop) : (term5 t1 t2 t3) = (term6 t1 t2 t3).
Proof. exact (EQ_MP (@lem8364270 t1 t2 t3) (@lem8364269 t1 t2 t3)). Qed.
Lemma lem8364272 (t1 : Prop) (t2 : Prop) (t3 : Prop) : (term6 t1 t2 t3) = (term5 t1 t2 t3).
Proof. exact (SYM (@lem8364271 t1 t2 t3)). Qed.
Lemma lem8364273 {A : Type'} (P : Prop) : term862 A P.
Proof. exact (@lem6418 A P). Qed.
Lemma lem8364274 {A : Type'} (P : Prop) : (term862 A P) = (term863 A P).
Proof. exact (eq_refl (term862 A P)). Qed.
Lemma lem8364275 {A : Type'} (P : Prop) : term863 A P.
Proof. exact (EQ_MP (@lem8364274 A P) (@lem8364273 A P)). Qed.
Lemma lem8364276 {A : Type'} (P : Prop) (Q : A -> Prop) : term864 A P Q.
Proof. exact (@lem8364275 A P Q). Qed.
Lemma lem8364277 {A : Type'} (P : Prop) (Q : A -> Prop) : (term864 A P Q) = ((term865 A P Q) = (term866 A P Q)).
Proof. exact (eq_refl (term864 A P Q)). Qed.
Lemma lem8364279 {A : Type'} (P : A -> Prop) : term867 A P.
Proof. exact (@lem6644 A P). Qed.
Lemma lem8364280 {A : Type'} (P : A -> Prop) : (term867 A P) = (term868 A P).
Proof. exact (eq_refl (term867 A P)). Qed.
Lemma lem8364281 {A : Type'} (P : A -> Prop) : term868 A P.
Proof. exact (EQ_MP (@lem8364280 A P) (@lem8364279 A P)). Qed.
Lemma lem8364282 {A : Type'} (P : A -> Prop) (Q : Prop) : term869 A P Q.
Proof. exact (@lem8364281 A P Q). Qed.
Lemma lem8364283 {A : Type'} (P : A -> Prop) (Q : Prop) : (term869 A P Q) = ((term870 A P Q) = (term871 A P Q)).
Proof. exact (eq_refl (term869 A P Q)). Qed.
Lemma lem8364285 {_5106 _5107 : Type'} (P : type1223 _5106 _5107) : term872 _5106 _5107 P.
Proof. exact (@lem49909 _5106 _5107 P). Qed.
Lemma lem8364286 {_5106 _5107 : Type'} (P : type1223 _5106 _5107) : (term872 _5106 _5107 P) = ((term873 _5106 _5107 P) = (term874 _5106 _5107 P)).
Proof. exact (eq_refl (term872 _5106 _5107 P)). Qed.
Lemma lem8364292 {A : Type'} (h1 : term875 A) : term875 A.
Proof. exact (h1). Qed.
Lemma lem8364293 {A : Type'} (P : type1143 A) (h1 : term875 A) : term876 A P.
Proof. exact (@lem8364292 A h1 P). Qed.
Lemma lem8364294 {A : Type'} (P : type1143 A) : (term876 A P) = (term877 A P).
Proof. exact (eq_refl (term876 A P)). Qed.
Lemma lem8364295 {A : Type'} (P : type1143 A) (h1 : term875 A) : term877 A P.
Proof. exact (EQ_MP (@lem8364294 A P) (@lem8364293 A P h1)). Qed.
Lemma lem8364296 {A : Type'} (P : type1143 A) (h1 : term878 A P) : term878 A P.
Proof. exact (h1). Qed.
Lemma lem8364297 {A : Type'} (P : type1143 A) (h1 : term875 A) (h2 : term878 A P) : term879 A P.
Proof. exact (@lem8364295 A P h1 (@lem8364296 A P h2)). Qed.
Lemma lem8364298 {A : Type'} (P : type1143 A) (h1 : term878 A P) : term880 A P.
Proof. exact (fun h0 : term875 A => @lem8364297 A P h0 h1). Qed.
Lemma lem8364299 {A : Type'} (h1 : term875 A) : term875 A.
Proof. exact (h1). Qed.
Lemma lem8364300 {A : Type'} (P : type1143 A) (h1 : term875 A) (h2 : term878 A P) : term879 A P.
Proof. exact (@lem8364298 A P h2 (@lem8364299 A h1)). Qed.
Lemma lem8364301 {A : Type'} (P : type1143 A) (h1 : term875 A) : term877 A P.
Proof. exact (fun h0 : term878 A P => @lem8364300 A P h1 h0). Qed.
Lemma lem8364302 {A : Type'} (h1 : term875 A) : term875 A.
Proof. exact (fun P : type1143 A => @lem8364301 A P h1). Qed.
Lemma lem8364303 {A : Type'} : term881 A.
Proof. exact (fun h0 : term875 A => @lem8364302 A h0). Qed.
Lemma lem8364304 {A : Type'} : term875 A.
Proof. exact (@lem8364303 A (@lem1071853 A)). Qed.
Lemma lem8364305 {A : Type'} (P : type1143 A) : term876 A P.
Proof. exact (@lem8364304 A P). Qed.
Lemma lem8364306 {A : Type'} (P : type1143 A) : (term876 A P) = (term877 A P).
Proof. exact (eq_refl (term876 A P)). Qed.
Lemma lem8364308 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (h1 : term861 _146290 _146293 lt2) : term861 _146290 _146293 lt2.
Proof. exact (h1). Qed.
Lemma lem8364309 {_146290 _146293 : Type'} (P : type799 _146290 _146293) (lt2 : type1402 _146293) (h1 : term861 _146290 _146293 lt2) : term882 _146290 _146293 lt2 P.
Proof. exact (@lem8364308 _146290 _146293 lt2 h1 P). Qed.
Lemma lem8364310 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (P : type799 _146290 _146293) : (term882 _146290 _146293 lt2 P) = (term860 _146290 _146293 lt2 P).
Proof. exact (eq_refl (term882 _146290 _146293 lt2 P)). Qed.
Lemma lem8364311 {_146290 _146293 : Type'} (P : type799 _146290 _146293) (lt2 : type1402 _146293) (h1 : term861 _146290 _146293 lt2) : term860 _146290 _146293 lt2 P.
Proof. exact (EQ_MP (@lem8364310 _146290 _146293 lt2 P) (@lem8364309 _146290 _146293 P lt2 h1)). Qed.
Lemma lem8364312 {_146290 _146293 : Type'} (P : type799 _146290 _146293) (G : type797 _146290 _146293) (lt2 : type1402 _146293) (h1 : term861 _146290 _146293 lt2) : term883 _146290 _146293 lt2 P G.
Proof. exact (@lem8364311 _146290 _146293 P lt2 h1 G). Qed.
Lemma lem8364313 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) : (term883 _146290 _146293 lt2 P G) = (term859 _146290 _146293 lt2 P G).
Proof. exact (eq_refl (term883 _146290 _146293 lt2 P G)). Qed.
Lemma lem8364314 {_146290 _146293 : Type'} (P : type799 _146290 _146293) (G : type797 _146290 _146293) (lt2 : type1402 _146293) (h1 : term861 _146290 _146293 lt2) : term859 _146290 _146293 lt2 P G.
Proof. exact (EQ_MP (@lem8364313 _146290 _146293 lt2 P G) (@lem8364312 _146290 _146293 P G lt2 h1)). Qed.
Lemma lem8364315 {_146290 _146293 : Type'} (P : type799 _146290 _146293) (G : type797 _146290 _146293) (H : type796 _146290 _146293) (lt2 : type1402 _146293) (h1 : term861 _146290 _146293 lt2) : term884 _146290 _146293 lt2 P G H.
Proof. exact (@lem8364314 _146290 _146293 P G lt2 h1 H). Qed.
Lemma lem8364316 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (H : type796 _146290 _146293) : (term884 _146290 _146293 lt2 P G H) = (term858 _146290 _146293 lt2 P G H).
Proof. exact (eq_refl (term884 _146290 _146293 lt2 P G H)). Qed.
Lemma lem8364317 {_146290 _146293 : Type'} (P : type799 _146290 _146293) (G : type797 _146290 _146293) (H : type796 _146290 _146293) (lt2 : type1402 _146293) (h1 : term861 _146290 _146293 lt2) : term858 _146290 _146293 lt2 P G H.
Proof. exact (EQ_MP (@lem8364316 _146290 _146293 lt2 P G H) (@lem8364315 _146290 _146293 P G H lt2 h1)). Qed.
Lemma lem8364318 {_146290 _146293 : Type'} (P : type799 _146290 _146293) (G : type797 _146290 _146293) (H : type796 _146290 _146293) (H' : type796 _146290 _146293) (lt2 : type1402 _146293) (h1 : term861 _146290 _146293 lt2) : term885 _146290 _146293 lt2 P G H H'.
Proof. exact (@lem8364317 _146290 _146293 P G H lt2 h1 H'). Qed.
Lemma lem8364319 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (H' : type796 _146290 _146293) (H : type796 _146290 _146293) : (term885 _146290 _146293 lt2 P G H H') = (term857 _146290 _146293 lt2 P G H' H).
Proof. exact (eq_refl (term885 _146290 _146293 lt2 P G H H')). Qed.
Lemma lem8364320 {_146290 _146293 : Type'} (P : type799 _146290 _146293) (G : type797 _146290 _146293) (H' : type796 _146290 _146293) (H : type796 _146290 _146293) (lt2 : type1402 _146293) (h1 : term861 _146290 _146293 lt2) : term857 _146290 _146293 lt2 P G H' H.
Proof. exact (EQ_MP (@lem8364319 _146290 _146293 lt2 P G H' H) (@lem8364318 _146290 _146293 P G H H' lt2 h1)). Qed.
Lemma lem8364321 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (H : type796 _146290 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (H' : type796 _146290 _146293) (h1 : term18 _146290 _146293 lt2 H P G H') : term18 _146290 _146293 lt2 H P G H'.
Proof. exact (h1). Qed.
Lemma lem8364322 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (H : type796 _146290 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (H' : type796 _146290 _146293) (h1 : term861 _146290 _146293 lt2) (h2 : term18 _146290 _146293 lt2 H P G H') : term35 _146290 _146293 H.
Proof. exact (@lem8364320 _146290 _146293 P G H' H lt2 h1 (@lem8364321 _146290 _146293 lt2 H P G H' h2)). Qed.
Lemma lem8364323 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (H : type796 _146290 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (H' : type796 _146290 _146293) (h1 : term18 _146290 _146293 lt2 H P G H') : term886 _146290 _146293 lt2 H.
Proof. exact (fun h0 : term861 _146290 _146293 lt2 => @lem8364322 _146290 _146293 lt2 H P G H' h0 h1). Qed.
Lemma lem8364324 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (H : type796 _146290 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (h1 : term887 _146290 _146293 lt2 H P G) : term887 _146290 _146293 lt2 H P G.
Proof. exact (h1). Qed.
Lemma lem8364325 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (H : type796 _146290 _146293) (P : type799 _146290 _146293) (G : type797 _146290 _146293) (h1 : term887 _146290 _146293 lt2 H P G) : term886 _146290 _146293 lt2 H.
Proof. exact (ex_elim (@lem8364324 _146290 _146293 lt2 H P G h1) (fun H' : type796 _146290 _146293 => fun h0 : term888 _146290 _146293 lt2 H P G H' => @lem8364323 _146290 _146293 lt2 H P G H' h0)). Qed.
Lemma lem8364326 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (H : type796 _146290 _146293) (P : type799 _146290 _146293) (h1 : term889 _146290 _146293 lt2 H P) : term889 _146290 _146293 lt2 H P.
Proof. exact (h1). Qed.
Lemma lem8364327 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (H : type796 _146290 _146293) (P : type799 _146290 _146293) (h1 : term889 _146290 _146293 lt2 H P) : term886 _146290 _146293 lt2 H.
Proof. exact (ex_elim (@lem8364326 _146290 _146293 lt2 H P h1) (fun G : type797 _146290 _146293 => fun h0 : term890 _146290 _146293 lt2 H P G => @lem8364325 _146290 _146293 lt2 H P G h0)). Qed.
Lemma lem8364328 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (H : type796 _146290 _146293) (h1 : term891 _146290 _146293 lt2 H) : term891 _146290 _146293 lt2 H.
Proof. exact (h1). Qed.
Lemma lem8364329 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (H : type796 _146290 _146293) (h1 : term891 _146290 _146293 lt2 H) : term886 _146290 _146293 lt2 H.
Proof. exact (ex_elim (@lem8364328 _146290 _146293 lt2 H h1) (fun P : type799 _146290 _146293 => fun h0 : term892 _146290 _146293 lt2 H P => @lem8364327 _146290 _146293 lt2 H P h0)). Qed.
Lemma lem8364330 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (h1 : term861 _146290 _146293 lt2) : term861 _146290 _146293 lt2.
Proof. exact (h1). Qed.
Lemma lem8364331 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (H : type796 _146290 _146293) (h1 : term861 _146290 _146293 lt2) (h2 : term891 _146290 _146293 lt2 H) : term35 _146290 _146293 H.
Proof. exact (@lem8364329 _146290 _146293 lt2 H h2 (@lem8364330 _146290 _146293 lt2 h1)). Qed.
Lemma lem8364332 {_146290 _146293 : Type'} (H : type796 _146290 _146293) (lt2 : type1402 _146293) (h1 : term861 _146290 _146293 lt2) : term893 _146290 _146293 lt2 H.
Proof. exact (fun h0 : term891 _146290 _146293 lt2 H => @lem8364331 _146290 _146293 lt2 H h1 h0). Qed.
Lemma lem8364333 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (h1 : term861 _146290 _146293 lt2) : term894 _146290 _146293 lt2.
Proof. exact (fun H : type796 _146290 _146293 => @lem8364332 _146290 _146293 H lt2 h1). Qed.
Lemma lem8364334 {_146290 _146293 : Type'} (lt2 : type1402 _146293) : term895 _146290 _146293 lt2.
Proof. exact (fun h0 : term861 _146290 _146293 lt2 => @lem8364333 _146290 _146293 lt2 h0). Qed.
Lemma lem8364335 {_146290 _146293 : Type'} (lt2 : type1402 _146293) : term894 _146290 _146293 lt2.
Proof. exact (@lem8364334 _146290 _146293 lt2 (@lem8364262 _146290 _146293 lt2)). Qed.
Lemma lem8364336 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (H : type796 _146290 _146293) : term896 _146290 _146293 lt2 H.
Proof. exact (@lem8364335 _146290 _146293 lt2 H). Qed.
Lemma lem8364337 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (H : type796 _146290 _146293) : (term896 _146290 _146293 lt2 H) = (term893 _146290 _146293 lt2 H).
Proof. exact (eq_refl (term896 _146290 _146293 lt2 H)). Qed.
Lemma lem8364339 {A B P : Type'} (lt2 : type1402 A) (clauses : type1635 A B P) (h1 : term897 A B P lt2 clauses) : term897 A B P lt2 clauses.
Proof. exact (h1). Qed.
Lemma lem8364340 {A B P : Type'} (lt2 : type1402 A) (clauses : type1635 A B P) (h1 : term898 A B P lt2 clauses) : term898 A B P lt2 clauses.
Proof. exact (h1). Qed.
Lemma lem8364341 {A : Type'} (lt2 : type1402 A) (h1 : @WF A lt2) : @WF A lt2.
Proof. exact (h1). Qed.
Lemma lem8364343 {_146290 _146293 : Type'} (lt2 : type1402 _146293) (H : type796 _146290 _146293) : term893 _146290 _146293 lt2 H.
Proof. exact (EQ_MP (@lem8364337 _146290 _146293 lt2 H) (@lem8364336 _146290 _146293 lt2 H)). Qed.
Lemma lem8364344 {A B : Type'} (lt2 : type1402 A) (H : type549 A B) : term899 A B lt2 H.
Proof. exact (@lem8364343 B A lt2 H). Qed.
Lemma lem8364345 {A B P : Type'} (lt2 : type1402 A) (clauses : type1635 A B P) : term900 A B P lt2 clauses.
Proof. exact (@lem8364344 A B lt2 (term901 A B P clauses)). Qed.
Lemma lem8364346 {A B P : Type'} (clauses : type1635 A B P) (f : A -> B) : (term902 A B P clauses f) = (term903 A B P clauses f).
Proof. exact (eq_refl (term902 A B P clauses f)). Qed.
Lemma lem8364347 {A : Type'} (x : A) : x = x.
Proof. exact (eq_refl x). Qed.
Lemma lem8364348 {A B P : Type'} (clauses : type1635 A B P) (f : A -> B) (x : A) : (term904 A B P clauses f x) = (term905 A B P clauses f x).
Proof. exact (MK_COMB (@lem8364346 A B P clauses f) (@lem8364347 A x)). Qed.
Lemma lem8364349 {A B P : Type'} (clauses : type1635 A B P) (f : A -> B) (x : A) : (term905 A B P clauses f x) = (@CASEWISE B P A (A -> B) clauses f x).
Proof. exact (eq_refl (term905 A B P clauses f x)). Qed.
Lemma lem8364350 {A B P : Type'} (clauses : type1635 A B P) (f : A -> B) (x : A) : (term904 A B P clauses f x) = (@CASEWISE B P A (A -> B) clauses f x).
Proof. exact (TRANS (@lem8364348 A B P clauses f x) (@lem8364349 A B P clauses f x)). Qed.
Lemma lem8364351 {B : Type'} : (@eq B) = (@eq B).
Proof. exact (eq_refl (@eq B)). Qed.
Lemma lem8364352 {A B P : Type'} (clauses : type1635 A B P) (f : A -> B) (x : A) : (term906 A B P clauses f x) = (term907 A B P clauses f x).
Proof. exact (MK_COMB (@lem8364351 B) (@lem8364350 A B P clauses f x)). Qed.
Lemma lem8364353 {A B : Type'} (P : type551 A B) (G : type548 A B) (H' : type549 A B) (f : A -> B) (x : A) : (term908 A B P G H' f x) = (term908 A B P G H' f x).
Proof. exact (eq_refl (term908 A B P G H' f x)). Qed.
Lemma lem8364354 {A B P : Type'} (clauses : type1635 A B P) (P' : type551 A B) (G : type548 A B) (H' : type549 A B) (f : A -> B) (x : A) : ((term904 A B P clauses f x) = (term908 A B P' G H' f x)) = ((@CASEWISE B P A (A -> B) clauses f x) = (term908 A B P' G H' f x)).
Proof. exact (MK_COMB (@lem8364352 A B P clauses f x) (@lem8364353 A B P' G H' f x)). Qed.
Lemma lem8364355 {A B P : Type'} (clauses : type1635 A B P) (P' : type551 A B) (G : type548 A B) (H' : type549 A B) (f : A -> B) : (term909 A B P clauses P' G H' f) = (term910 A B P clauses P' G H' f).
Proof. exact (fun_ext (fun x : A => @lem8364354 A B P clauses P' G H' f x)). Qed.
Lemma lem8364356 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem8364357 {A B P : Type'} (clauses : type1635 A B P) (P' : type551 A B) (G : type548 A B) (H' : type549 A B) (f : A -> B) : (term911 A B P clauses P' G H' f) = (term912 A B P clauses P' G H' f).
Proof. exact (MK_COMB (@lem8364356 A) (@lem8364355 A B P clauses P' G H' f)). Qed.
Lemma lem8364358 {A B P : Type'} (clauses : type1635 A B P) (P' : type551 A B) (G : type548 A B) (H' : type549 A B) : (term913 A B P clauses P' G H') = (term914 A B P clauses P' G H').
Proof. exact (fun_ext (fun f : A -> B => @lem8364357 A B P clauses P' G H' f)). Qed.
Lemma lem8364359 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem8364360 {A B P : Type'} (clauses : type1635 A B P) (P' : type551 A B) (G : type548 A B) (H' : type549 A B) : (term915 A B P clauses P' G H') = (term916 A B P clauses P' G H').
Proof. exact (MK_COMB (@lem8364359 A B) (@lem8364358 A B P clauses P' G H')). Qed.
Lemma lem8364361 {A B : Type'} (P : type551 A B) (G : type548 A B) (lt2 : type1402 A) : (term917 A B P G lt2) = (term917 A B P G lt2).
Proof. exact (eq_refl (term917 A B P G lt2)). Qed.
Lemma lem8364362 {A B P : Type'} (lt2 : type1402 A) (clauses : type1635 A B P) (P' : type551 A B) (G : type548 A B) (H' : type549 A B) : (term918 A B P lt2 clauses P' G H') = (term919 A B P lt2 clauses P' G H').
Proof. exact (MK_COMB (@lem8364361 A B P' G lt2) (@lem8364360 A B P clauses P' G H')). Qed.
Lemma lem8364363 {A B : Type'} (lt2 : type1402 A) (P : type551 A B) (G : type548 A B) (H' : type549 A B) : (term920 A B lt2 P G H') = (term920 A B lt2 P G H').
Proof. exact (eq_refl (term920 A B lt2 P G H')). Qed.
Lemma lem8364364 {A B P : Type'} (lt2 : type1402 A) (clauses : type1635 A B P) (P' : type551 A B) (G : type548 A B) (H' : type549 A B) : (term921 A B P lt2 clauses P' G H') = (term922 A B P lt2 clauses P' G H').
Proof. exact (MK_COMB (@lem8364363 A B lt2 P' G H') (@lem8364362 A B P lt2 clauses P' G H')). Qed.
Lemma lem8364365 {A : Type'} (lt2 : type1402 A) : (term107 A lt2) = (term107 A lt2).
Proof. exact (eq_refl (term107 A lt2)). Qed.
Lemma lem8364366 {A B P : Type'} (lt2 : type1402 A) (clauses : type1635 A B P) (P' : type551 A B) (G : type548 A B) (H' : type549 A B) : (term923 A B P lt2 clauses P' G H') = (term924 A B P lt2 clauses P' G H').
Proof. exact (MK_COMB (@lem8364365 A lt2) (@lem8364364 A B P lt2 clauses P' G H')). Qed.
Lemma lem8364367 {A B P : Type'} (lt2 : type1402 A) (clauses : type1635 A B P) (P' : type551 A B) (G : type548 A B) : (term925 A B P lt2 clauses P' G) = (term926 A B P lt2 clauses P' G).
Proof. exact (fun_ext (fun H' : type549 A B => @lem8364366 A B P lt2 clauses P' G H')). Qed.
Lemma lem8364368 {A B : Type'} : (@ex ((A -> B) -> A -> B)) = (@ex ((A -> B) -> A -> B)).
Proof. exact (eq_refl (@ex ((A -> B) -> A -> B))). Qed.
Lemma lem8364369 {A B P : Type'} (lt2 : type1402 A) (clauses : type1635 A B P) (P' : type551 A B) (G : type548 A B) : (term927 A B P lt2 clauses P' G) = (term928 A B P lt2 clauses P' G).
Proof. exact (MK_COMB (@lem8364368 A B) (@lem8364367 A B P lt2 clauses P' G)). Qed.
Lemma lem8364370 {A B P : Type'} (lt2 : type1402 A) (clauses : type1635 A B P) (P' : type551 A B) : (term929 A B P lt2 clauses P') = (term930 A B P lt2 clauses P').
Proof. exact (fun_ext (fun G : type548 A B => @lem8364369 A B P lt2 clauses P' G)). Qed.
Lemma lem8364371 {A B : Type'} : (@ex ((A -> B) -> A -> A)) = (@ex ((A -> B) -> A -> A)).
Proof. exact (eq_refl (@ex ((A -> B) -> A -> A))). Qed.
Lemma lem8364372 {A B P : Type'} (lt2 : type1402 A) (clauses : type1635 A B P) (P' : type551 A B) : (term931 A B P lt2 clauses P') = (term932 A B P lt2 clauses P').
Proof. exact (MK_COMB (@lem8364371 A B) (@lem8364370 A B P lt2 clauses P')). Qed.
Lemma lem8364373 {A B P : Type'} (lt2 : type1402 A) (clauses : type1635 A B P) : (term933 A B P lt2 clauses) = (term934 A B P lt2 clauses).
Proof. exact (fun_ext (fun P' : type551 A B => @lem8364372 A B P lt2 clauses P')). Qed.
Lemma lem8364374 {A B : Type'} : (@ex ((A -> B) -> A -> Prop)) = (@ex ((A -> B) -> A -> Prop)).
Proof. exact (eq_refl (@ex ((A -> B) -> A -> Prop))). Qed.
Lemma lem8364375 {A B P : Type'} (lt2 : type1402 A) (clauses : type1635 A B P) : (term935 A B P lt2 clauses) = (term936 A B P lt2 clauses).
Proof. exact (MK_COMB (@lem8364374 A B) (@lem8364373 A B P lt2 clauses)). Qed.
Lemma lem8364376 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem8364377 {A B P : Type'} (lt2 : type1402 A) (clauses : type1635 A B P) : (term937 A B P lt2 clauses) = (term938 A B P lt2 clauses).
Proof. exact (MK_COMB (@lem8364376) (@lem8364375 A B P lt2 clauses)). Qed.
Lemma lem8364378 {A B P : Type'} (clauses : type1635 A B P) (f : A -> B) : (term902 A B P clauses f) = (term903 A B P clauses f).
Proof. exact (eq_refl (term902 A B P clauses f)). Qed.
Lemma lem8364379 {A : Type'} (x : A) : x = x.
Proof. exact (eq_refl x). Qed.
Lemma lem8364380 {A B P : Type'} (clauses : type1635 A B P) (f : A -> B) (x : A) : (term904 A B P clauses f x) = (term905 A B P clauses f x).
Proof. exact (MK_COMB (@lem8364378 A B P clauses f) (@lem8364379 A x)). Qed.
Lemma lem8364381 {A B P : Type'} (clauses : type1635 A B P) (f : A -> B) (x : A) : (term905 A B P clauses f x) = (@CASEWISE B P A (A -> B) clauses f x).
Proof. exact (eq_refl (term905 A B P clauses f x)). Qed.
Lemma lem8364382 {A B P : Type'} (clauses : type1635 A B P) (f : A -> B) (x : A) : (term904 A B P clauses f x) = (@CASEWISE B P A (A -> B) clauses f x).
Proof. exact (TRANS (@lem8364380 A B P clauses f x) (@lem8364381 A B P clauses f x)). Qed.
Lemma lem8364383 {A B : Type'} (f : A -> B) (x : A) : (term939 A B f x) = (term939 A B f x).
Proof. exact (eq_refl (term939 A B f x)). Qed.
Lemma lem8364384 {A B P : Type'} (clauses : type1635 A B P) (f : A -> B) (x : A) : ((f x) = (term904 A B P clauses f x)) = ((f x) = (@CASEWISE B P A (A -> B) clauses f x)).
Proof. exact (MK_COMB (@lem8364383 A B f x) (@lem8364382 A B P clauses f x)). Qed.
Lemma lem8364385 {A B P : Type'} (clauses : type1635 A B P) (f : A -> B) : (term940 A B P clauses f) = (term941 A B P clauses f).
Proof. exact (fun_ext (fun x : A => @lem8364384 A B P clauses f x)). Qed.
Lemma lem8364386 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem8364387 {A B P : Type'} (clauses : type1635 A B P) (f : A -> B) : (term942 A B P clauses f) = (term943 A B P clauses f).
Proof. exact (MK_COMB (@lem8364386 A) (@lem8364385 A B P clauses f)). Qed.
Lemma lem8364388 {A B P : Type'} (clauses : type1635 A B P) : (term944 A B P clauses) = (term945 A B P clauses).
Proof. exact (fun_ext (fun f : A -> B => @lem8364387 A B P clauses f)). Qed.
Lemma lem8364389 {A B : Type'} : (@ex (A -> B)) = (@ex (A -> B)).
Proof. exact (eq_refl (@ex (A -> B))). Qed.
Lemma lem8364390 {A B P : Type'} (clauses : type1635 A B P) : (term946 A B P clauses) = (term947 A B P clauses).
Proof. exact (MK_COMB (@lem8364389 A B) (@lem8364388 A B P clauses)). Qed.
Lemma lem8364391 {A B P : Type'} (lt2 : type1402 A) (clauses : type1635 A B P) : (term900 A B P lt2 clauses) = (term948 A B P lt2 clauses).
Proof. exact (MK_COMB (@lem8364377 A B P lt2 clauses) (@lem8364390 A B P clauses)). Qed.
Lemma lem8364392 {A B P : Type'} (lt2 : type1402 A) (clauses : type1635 A B P) : term948 A B P lt2 clauses.
Proof. exact (EQ_MP (@lem8364391 A B P lt2 clauses) (@lem8364345 A B P lt2 clauses)). Qed.
Lemma lem8364393 {A : Type'} (lt2 : type1402 A) : (@WF A lt2) = ((@WF A lt2) = True).
Proof. exact (@lem7 (@WF A lt2)). Qed.
Lemma lem8364498 {A : Type'} (lt2 : type1402 A) (h1 : @WF A lt2) : (@WF A lt2) = True.
Proof. exact (EQ_MP (@lem8364393 A lt2) (@lem8364341 A lt2 h1)). Qed.
Lemma lem8364499 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8364500 {A : Type'} (lt2 : type1402 A) (h1 : @WF A lt2) : (term107 A lt2) = (and True).
Proof. exact (MK_COMB (@lem8364499) (@lem8364498 A lt2 h1)). Qed.
Lemma lem8364563 {A B P : Type'} (lt2 : type1402 A) (clauses : type1635 A B P) (P' : type551 A B) (G : type548 A B) (H' : type549 A B) : (term922 A B P lt2 clauses P' G H') = (term922 A B P lt2 clauses P' G H').
Proof. exact (eq_refl (term922 A B P lt2 clauses P' G H')). Qed.
Lemma lem8364564 {A B P : Type'} (clauses : type1635 A B P) (P' : type551 A B) (G : type548 A B) (H' : type549 A B) (lt2 : type1402 A) (h1 : @WF A lt2) : (term924 A B P lt2 clauses P' G H') = (term949 A B P lt2 clauses P' G H').
Proof. exact (MK_COMB (@lem8364500 A lt2 h1) (@lem8364563 A B P lt2 clauses P' G H')). Qed.
Lemma lem8364566 (t : Prop) : (True /\ t) = t.
Proof. exact (proj1 (@lem1842 t)). Qed.
Lemma lem8364567 {A B P : Type'} (lt2 : type1402 A) (clauses : type1635 A B P) (P' : type551 A B) (G : type548 A B) (H' : type549 A B) : (term949 A B P lt2 clauses P' G H') = (term922 A B P lt2 clauses P' G H').
Proof. exact (@lem8364566 (term922 A B P lt2 clauses P' G H')). Qed.
Lemma lem8364630 {A B P : Type'} (clauses : type1635 A B P) (P' : type551 A B) (G : type548 A B) (H' : type549 A B) (lt2 : type1402 A) (h1 : @WF A lt2) : (term924 A B P lt2 clauses P' G H') = (term922 A B P lt2 clauses P' G H').
Proof. exact (TRANS (@lem8364564 A B P clauses P' G H' lt2 h1) (@lem8364567 A B P lt2 clauses P' G H')). Qed.
Lemma lem8364631 {A B P : Type'} (clauses : type1635 A B P) (P' : type551 A B) (G : type548 A B) (lt2 : type1402 A) (h1 : @WF A lt2) : (term926 A B P lt2 clauses P' G) = (term950 A B P lt2 clauses P' G).
Proof. exact (fun_ext (fun H' : type549 A B => @lem8364630 A B P clauses P' G H' lt2 h1)). Qed.
Lemma lem8364632 {A B : Type'} : (@ex ((A -> B) -> A -> B)) = (@ex ((A -> B) -> A -> B)).
Proof. exact (eq_refl (@ex ((A -> B) -> A -> B))). Qed.
Lemma lem8364633 {A B P : Type'} (clauses : type1635 A B P) (P' : type551 A B) (G : type548 A B) (lt2 : type1402 A) (h1 : @WF A lt2) : (term928 A B P lt2 clauses P' G) = (term951 A B P lt2 clauses P' G).
Proof. exact (MK_COMB (@lem8364632 A B) (@lem8364631 A B P clauses P' G lt2 h1)). Qed.
Lemma lem8364638 {A B P : Type'} (clauses : type1635 A B P) (P' : type551 A B) (lt2 : type1402 A) (h1 : @WF A lt2) : (term930 A B P lt2 clauses P') = (term952 A B P lt2 clauses P').
Proof. exact (fun_ext (fun G : type548 A B => @lem8364633 A B P clauses P' G lt2 h1)). Qed.
Lemma lem8364639 {A B : Type'} : (@ex ((A -> B) -> A -> A)) = (@ex ((A -> B) -> A -> A)).
Proof. exact (eq_refl (@ex ((A -> B) -> A -> A))). Qed.
Lemma lem8364640 {A B P : Type'} (clauses : type1635 A B P) (P' : type551 A B) (lt2 : type1402 A) (h1 : @WF A lt2) : (term932 A B P lt2 clauses P') = (term953 A B P lt2 clauses P').
Proof. exact (MK_COMB (@lem8364639 A B) (@lem8364638 A B P clauses P' lt2 h1)). Qed.
Lemma lem8364645 {A B P : Type'} (clauses : type1635 A B P) (lt2 : type1402 A) (h1 : @WF A lt2) : (term934 A B P lt2 clauses) = (term954 A B P lt2 clauses).
Proof. exact (fun_ext (fun P' : type551 A B => @lem8364640 A B P clauses P' lt2 h1)). Qed.
Lemma lem8364646 {A B : Type'} : (@ex ((A -> B) -> A -> Prop)) = (@ex ((A -> B) -> A -> Prop)).
Proof. exact (eq_refl (@ex ((A -> B) -> A -> Prop))). Qed.
Lemma lem8364647 {A B P : Type'} (clauses : type1635 A B P) (lt2 : type1402 A) (h1 : @WF A lt2) : (term936 A B P lt2 clauses) = (term955 A B P lt2 clauses).
Proof. exact (MK_COMB (@lem8364646 A B) (@lem8364645 A B P clauses lt2 h1)). Qed.
Lemma lem8364652 {A B P : Type'} (lt2 : type1402 A) (clauses : type1635 A B P) : (term956 A B P lt2 clauses) = (term956 A B P lt2 clauses).
Proof. exact (eq_refl (term956 A B P lt2 clauses)). Qed.
Lemma lem8364653 {A B P : Type'} (clauses : type1635 A B P) (lt2 : type1402 A) (h1 : @WF A lt2) : (term957 A B P lt2 clauses) = (term958 A B P lt2 clauses).
Proof. exact (MK_COMB (@lem8364652 A B P lt2 clauses) (@lem8364647 A B P clauses lt2 h1)). Qed.
Lemma lem8364656 {A B P : Type'} (lt2 : type1402 A) (h1 : @WF A lt2) : (term959 A B P lt2) = (term960 A B P lt2).
Proof. exact (fun_ext (fun clauses : type1635 A B P => @lem8364653 A B P clauses lt2 h1)). Qed.
Lemma lem8364657 {A B P : Type'} : (@all (list (prod (P -> A) ((A -> B) -> P -> B)))) = (@all (list (prod (P -> A) ((A -> B) -> P -> B)))).
Proof. exact (eq_refl (@all (list (prod (P -> A) ((A -> B) -> P -> B))))). Qed.
Lemma lem8364658 {A B P : Type'} (lt2 : type1402 A) (h1 : @WF A lt2) : (term961 A B P lt2) = (term962 A B P lt2).
Proof. exact (MK_COMB (@lem8364657 A B P) (@lem8364656 A B P lt2 h1)). Qed.
Lemma lem8364663 {A B P : Type'} (lt2 : type1402 A) (h1 : @WF A lt2) : (term962 A B P lt2) = (term961 A B P lt2).
Proof. exact (SYM (@lem8364658 A B P lt2 h1)). Qed.
Lemma lem8364665 {A : Type'} (P : type1143 A) : term877 A P.
Proof. exact (EQ_MP (@lem8364306 A P) (@lem8364305 A P)). Qed.
Lemma lem8364666 {A B P : Type'} (P' : type1084 A B P) : term963 A B P P'.
Proof. exact (@lem8364665 (type1645 A B P) P'). Qed.
Lemma lem8364667 {A B P : Type'} (lt2 : type1402 A) : term964 A B P lt2.
Proof. exact (@lem8364666 A B P (term960 A B P lt2)). Qed.
Lemma lem8364668 {A B P : Type'} (lt2 : type1402 A) : (term965 A B P lt2) = (term966 A B P lt2).
Proof. exact (eq_refl (term965 A B P lt2)). Qed.
Lemma lem8364669 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8364670 {A B P : Type'} (lt2 : type1402 A) : (term967 A B P lt2) = (term968 A B P lt2).
Proof. exact (MK_COMB (@lem8364669) (@lem8364668 A B P lt2)). Qed.
Lemma lem8364671 {A B P : Type'} (lt2 : type1402 A) (a1 : type1635 A B P) : (term969 A B P lt2 a1) = (term958 A B P lt2 a1).
Proof. exact (eq_refl (term969 A B P lt2 a1)). Qed.
Lemma lem8364672 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem8364673 {A B P : Type'} (lt2 : type1402 A) (a1 : type1635 A B P) : (term970 A B P lt2 a1) = (term971 A B P lt2 a1).
Proof. exact (MK_COMB (@lem8364672) (@lem8364671 A B P lt2 a1)). Qed.
Lemma lem8364674 {A B P : Type'} (lt2 : type1402 A) (a0 : type1645 A B P) (a1 : type1635 A B P) : (term972 A B P lt2 a0 a1) = (term973 A B P lt2 a0 a1).
Proof. exact (eq_refl (term972 A B P lt2 a0 a1)). Qed.
Lemma lem8364675 {A B P : Type'} (lt2 : type1402 A) (a0 : type1645 A B P) (a1 : type1635 A B P) : (term974 A B P lt2 a0 a1) = (term975 A B P lt2 a0 a1).
Proof. exact (MK_COMB (@lem8364673 A B P lt2 a1) (@lem8364674 A B P lt2 a0 a1)). Qed.
Lemma lem8364676 {A B P : Type'} (lt2 : type1402 A) (a0 : type1645 A B P) : (term976 A B P lt2 a0) = (term977 A B P lt2 a0).
Proof. exact (fun_ext (fun a1 : type1635 A B P => @lem8364675 A B P lt2 a0 a1)). Qed.
Lemma lem8364677 {A B P : Type'} : (@all (list (prod (P -> A) ((A -> B) -> P -> B)))) = (@all (list (prod (P -> A) ((A -> B) -> P -> B)))).
Proof. exact (eq_refl (@all (list (prod (P -> A) ((A -> B) -> P -> B))))). Qed.
Lemma lem8364678 {A B P : Type'} (lt2 : type1402 A) (a0 : type1645 A B P) : (term978 A B P lt2 a0) = (term979 A B P lt2 a0).
Proof. exact (MK_COMB (@lem8364677 A B P) (@lem8364676 A B P lt2 a0)). Qed.
Lemma lem8364679 {A B P : Type'} (lt2 : type1402 A) : (term980 A B P lt2) = (term981 A B P lt2).
Proof. exact (fun_ext (fun a0 : type1645 A B P => @lem8364678 A B P lt2 a0)). Qed.
Lemma lem8364680 {A B P : Type'} : (@all (prod (P -> A) ((A -> B) -> P -> B))) = (@all (prod (P -> A) ((A -> B) -> P -> B))).
Proof. exact (eq_refl (@all (prod (P -> A) ((A -> B) -> P -> B)))). Qed.
Lemma lem8364681 {A B P : Type'} (lt2 : type1402 A) : (term982 A B P lt2) = (term983 A B P lt2).
Proof. exact (MK_COMB (@lem8364680 A B P) (@lem8364679 A B P lt2)). Qed.
Lemma lem8364682 {A B P : Type'} (lt2 : type1402 A) : (term984 A B P lt2) = (term985 A B P lt2).
Proof. exact (MK_COMB (@lem8364670 A B P lt2) (@lem8364681 A B P lt2)). Qed.
Lemma lem8364683 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem8364684 {A B P : Type'} (lt2 : type1402 A) : (term986 A B P lt2) = (term987 A B P lt2).
Proof. exact (MK_COMB (@lem8364683) (@lem8364682 A B P lt2)). Qed.
Lemma lem8364685 {A B P : Type'} (lt2 : type1402 A) (clauses : type1635 A B P) : (term969 A B P lt2 clauses) = (term958 A B P lt2 clauses).
Proof. exact (eq_refl (term969 A B P lt2 clauses)). Qed.
Lemma lem8364686 {A B P : Type'} (lt2 : type1402 A) : (term988 A B P lt2) = (term960 A B P lt2).
Proof. exact (fun_ext (fun clauses : type1635 A B P => @lem8364685 A B P lt2 clauses)). Qed.
Lemma lem8364687 {A B P : Type'} : (@all (list (prod (P -> A) ((A -> B) -> P -> B)))) = (@all (list (prod (P -> A) ((A -> B) -> P -> B)))).
Proof. exact (eq_refl (@all (list (prod (P -> A) ((A -> B) -> P -> B))))). Qed.
Lemma lem8364688 {A B P : Type'} (lt2 : type1402 A) : (term989 A B P lt2) = (term962 A B P lt2).
Proof. exact (MK_COMB (@lem8364687 A B P) (@lem8364686 A B P lt2)). Qed.
Lemma lem8364689 {A B P : Type'} (lt2 : type1402 A) : (term964 A B P lt2) = (term990 A B P lt2).
Proof. exact (MK_COMB (@lem8364684 A B P lt2) (@lem8364688 A B P lt2)). Qed.
Lemma lem8364690 {A B P : Type'} (lt2 : type1402 A) : term990 A B P lt2.
Proof. exact (EQ_MP (@lem8364689 A B P lt2) (@lem8364667 A B P lt2)). Qed.
Lemma lem8364696 {_25307 : Type'} (P : _25307 -> Prop) : (@List.Forall _25307 P (@nil _25307)) = True.
Proof. exact (EQ_MP (@lem1100835 _25307 P) (@lem1100834 _25307 P)). Qed.
Lemma lem8364697 {A B P : Type'} (P' : type1177 A B P) : (@List.Forall (prod (P -> A) ((A -> B) -> P -> B)) P' (@nil (prod (P -> A) ((A -> B) -> P -> B)))) = True.
Proof. exact (@lem8364696 (type1645 A B P) P'). Qed.
Lemma lem8364698 {A B P : Type'} (lt2 : type1402 A) : (term991 A B P lt2) = True.
Proof. exact (@lem8364697 A B P (term992 A B P lt2)). Qed.
Lemma lem8364699 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem8364700 {A B P : Type'} (lt2 : type1402 A) : (term993 A B P lt2) = (imp True).
Proof. exact (MK_COMB (@lem8364699) (@lem8364698 A B P lt2)). Qed.
Lemma lem8364794 {_143170 _143178 _143218 _143219 : Type'} (f : _143219) (x : _143218) : (@CASEWISE _143178 _143170 _143218 _143219 (@nil (prod (_143170 -> _143218) (_143219 -> _143170 -> _143178))) f x) = (term994 _143178).
Proof. exact (proj1 (@lem8059078 _143170 _143178 Prop _143218 _143219 Prop (@el (_143219 -> Prop -> Prop)) (@el (Prop -> _143218)) (@el (list (prod (Prop -> _143218) (_143219 -> Prop -> Prop)))) f x)). Qed.
Lemma lem8364795 {A B P : Type'} (f : A -> B) (x : A) : (@CASEWISE B P A (A -> B) (@nil (prod (P -> A) ((A -> B) -> P -> B))) f x) = (term994 B).
Proof. exact (@lem8364794 P B A (A -> B) f x). Qed.
Lemma lem8364796 {B : Type'} : (@eq B) = (@eq B).
Proof. exact (eq_refl (@eq B)). Qed.
Lemma lem8364797 {A B P : Type'} (f : A -> B) (x : A) : (term995 A B P f x) = (term996 B).
Proof. exact (MK_COMB (@lem8364796 B) (@lem8364795 A B P f x)). Qed.
Lemma lem8364798 {A B : Type'} (P : type551 A B) (G : type548 A B) (H' : type549 A B) (f : A -> B) (x : A) : (term908 A B P G H' f x) = (term908 A B P G H' f x).
Proof. exact (eq_refl (term908 A B P G H' f x)). Qed.
Lemma lem8364799 {A B P : Type'} (P' : type551 A B) (G : type548 A B) (H' : type549 A B) (f : A -> B) (x : A) : ((@CASEWISE B P A (A -> B) (@nil (prod (P -> A) ((A -> B) -> P -> B))) f x) = (term908 A B P' G H' f x)) = ((term994 B) = (term908 A B P' G H' f x)).
Proof. exact (MK_COMB (@lem8364797 A B P f x) (@lem8364798 A B P' G H' f x)). Qed.
Lemma lem8364802 {A B P : Type'} (P' : type551 A B) (G : type548 A B) (H' : type549 A B) (f : A -> B) : (term997 A B P P' G H' f) = (term998 A B P' G H' f).
Proof. exact (fun_ext (fun x : A => @lem8364799 A B P P' G H' f x)). Qed.
Lemma lem8364803 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem8364804 {A B P : Type'} (P' : type551 A B) (G : type548 A B) (H' : type549 A B) (f : A -> B) : (term999 A B P P' G H' f) = (term1000 A B P' G H' f).
Proof. exact (MK_COMB (@lem8364803 A) (@lem8364802 A B P P' G H' f)). Qed.
Lemma lem8364811 {A B P : Type'} (P' : type551 A B) (G : type548 A B) (H' : type549 A B) : (term1001 A B P P' G H') = (term1002 A B P' G H').
Proof. exact (fun_ext (fun f : A -> B => @lem8364804 A B P P' G H' f)). Qed.
Lemma lem8364812 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem8364813 {A B P : Type'} (P' : type551 A B) (G : type548 A B) (H' : type549 A B) : (term1003 A B P P' G H') = (term1004 A B P' G H').
Proof. exact (MK_COMB (@lem8364812 A B) (@lem8364811 A B P P' G H')). Qed.
Lemma lem8364820 {A B : Type'} (P : type551 A B) (G : type548 A B) (lt2 : type1402 A) : (term917 A B P G lt2) = (term917 A B P G lt2).
Proof. exact (eq_refl (term917 A B P G lt2)). Qed.
Lemma lem8364821 {A B P : Type'} (lt2 : type1402 A) (P' : type551 A B) (G : type548 A B) (H' : type549 A B) : (term1005 A B P lt2 P' G H') = (term1006 A B lt2 P' G H').
Proof. exact (MK_COMB (@lem8364820 A B P' G lt2) (@lem8364813 A B P P' G H')). Qed.
Lemma lem8364824 {A B : Type'} (lt2 : type1402 A) (P : type551 A B) (G : type548 A B) (H' : type549 A B) : (term920 A B lt2 P G H') = (term920 A B lt2 P G H').
Proof. exact (eq_refl (term920 A B lt2 P G H')). Qed.
Lemma lem8364825 {A B P : Type'} (lt2 : type1402 A) (P' : type551 A B) (G : type548 A B) (H' : type549 A B) : (term1007 A B P lt2 P' G H') = (term1008 A B lt2 P' G H').
Proof. exact (MK_COMB (@lem8364824 A B lt2 P' G H') (@lem8364821 A B P lt2 P' G H')). Qed.
Lemma lem8364828 {A B P : Type'} (lt2 : type1402 A) (P' : type551 A B) (G : type548 A B) : (term1009 A B P lt2 P' G) = (term1010 A B lt2 P' G).
Proof. exact (fun_ext (fun H' : type549 A B => @lem8364825 A B P lt2 P' G H')). Qed.
Lemma lem8364829 {A B : Type'} : (@ex ((A -> B) -> A -> B)) = (@ex ((A -> B) -> A -> B)).
Proof. exact (eq_refl (@ex ((A -> B) -> A -> B))). Qed.
Lemma lem8364830 {A B P : Type'} (lt2 : type1402 A) (P' : type551 A B) (G : type548 A B) : (term1011 A B P lt2 P' G) = (term1012 A B lt2 P' G).
Proof. exact (MK_COMB (@lem8364829 A B) (@lem8364828 A B P lt2 P' G)). Qed.
Lemma lem8364835 {A B P : Type'} (lt2 : type1402 A) (P' : type551 A B) : (term1013 A B P lt2 P') = (term1014 A B lt2 P').
Proof. exact (fun_ext (fun G : type548 A B => @lem8364830 A B P lt2 P' G)). Qed.
Lemma lem8364836 {A B : Type'} : (@ex ((A -> B) -> A -> A)) = (@ex ((A -> B) -> A -> A)).
Proof. exact (eq_refl (@ex ((A -> B) -> A -> A))). Qed.
Lemma lem8364837 {A B P : Type'} (lt2 : type1402 A) (P' : type551 A B) : (term1015 A B P lt2 P') = (term1016 A B lt2 P').
Proof. exact (MK_COMB (@lem8364836 A B) (@lem8364835 A B P lt2 P')). Qed.
Lemma lem8364842 {A B P : Type'} (lt2 : type1402 A) : (term1017 A B P lt2) = (term1018 A B lt2).
Proof. exact (fun_ext (fun P' : type551 A B => @lem8364837 A B P lt2 P')). Qed.
Lemma lem8364843 {A B : Type'} : (@ex ((A -> B) -> A -> Prop)) = (@ex ((A -> B) -> A -> Prop)).
Proof. exact (eq_refl (@ex ((A -> B) -> A -> Prop))). Qed.
Lemma lem8364844 {A B P : Type'} (lt2 : type1402 A) : (term1019 A B P lt2) = (term1020 A B lt2).
Proof. exact (MK_COMB (@lem8364843 A B) (@lem8364842 A B P lt2)). Qed.
Lemma lem8364849 {A B P : Type'} (lt2 : type1402 A) : (term966 A B P lt2) = (term1021 A B lt2).
Proof. exact (MK_COMB (@lem8364700 A B P lt2) (@lem8364844 A B P lt2)). Qed.
Lemma lem8364851 (t : Prop) : (True -> t) = t.
Proof. exact (proj1 (@lem1820 t)). Qed.
Lemma lem8364852 {A B : Type'} (lt2 : type1402 A) : (term1021 A B lt2) = (term1020 A B lt2).
Proof. exact (@lem8364851 (term1020 A B lt2)). Qed.
Lemma lem8364945 {A B P : Type'} (lt2 : type1402 A) : (term966 A B P lt2) = (term1020 A B lt2).
Proof. exact (TRANS (@lem8364849 A B P lt2) (@lem8364852 A B lt2)). Qed.
Lemma lem8364946 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8364947 {A B P : Type'} (lt2 : type1402 A) : (term968 A B P lt2) = (term1022 A B lt2).
Proof. exact (MK_COMB (@lem8364946) (@lem8364945 A B P lt2)). Qed.
Lemma lem8364953 {_5106 _5107 : Type'} (P : type1223 _5106 _5107) : (term873 _5106 _5107 P) = (term874 _5106 _5107 P).
Proof. exact (EQ_MP (@lem8364286 _5106 _5107 P) (@lem8364285 _5106 _5107 P)). Qed.
Lemma lem8364954 {A B P : Type'} (P' : type1177 A B P) : (term1023 A B P P') = (term1024 A B P P').
Proof. exact (@lem8364953 (type558 A B P) (P -> A) P'). Qed.
Lemma lem8364955 {A B P : Type'} (lt2 : type1402 A) : (term1025 A B P lt2) = (term1026 A B P lt2).
Proof. exact (@lem8364954 A B P (term981 A B P lt2)). Qed.
Lemma lem8364956 {A B P : Type'} (lt2 : type1402 A) (a0 : type1645 A B P) : (term1027 A B P lt2 a0) = (term979 A B P lt2 a0).
Proof. exact (eq_refl (term1027 A B P lt2 a0)). Qed.
Lemma lem8364957 {A B P : Type'} (lt2 : type1402 A) : (term1028 A B P lt2) = (term981 A B P lt2).
Proof. exact (fun_ext (fun a0 : type1645 A B P => @lem8364956 A B P lt2 a0)). Qed.
Lemma lem8364958 {A B P : Type'} : (@all (prod (P -> A) ((A -> B) -> P -> B))) = (@all (prod (P -> A) ((A -> B) -> P -> B))).
Proof. exact (eq_refl (@all (prod (P -> A) ((A -> B) -> P -> B)))). Qed.
Lemma lem8364959 {A B P : Type'} (lt2 : type1402 A) : (term1025 A B P lt2) = (term983 A B P lt2).
Proof. exact (MK_COMB (@lem8364958 A B P) (@lem8364957 A B P lt2)). Qed.
Lemma lem8364960 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8364961 {A B P : Type'} (lt2 : type1402 A) : (term1029 A B P lt2) = (term1030 A B P lt2).
Proof. exact (MK_COMB (@lem8364960) (@lem8364959 A B P lt2)). Qed.
Lemma lem8364962 {A B P : Type'} (lt2 : type1402 A) (p1 : P -> A) (p2 : type558 A B P) : (term1031 A B P lt2 p1 p2) = (term1032 A B P lt2 p1 p2).
Proof. exact (eq_refl (term1031 A B P lt2 p1 p2)). Qed.
Lemma lem8364963 {A B P : Type'} (lt2 : type1402 A) (p1 : P -> A) : (term1033 A B P lt2 p1) = (term1034 A B P lt2 p1).
Proof. exact (fun_ext (fun p2 : type558 A B P => @lem8364962 A B P lt2 p1 p2)). Qed.
Lemma lem8364964 {A B P : Type'} : (@all ((A -> B) -> P -> B)) = (@all ((A -> B) -> P -> B)).
Proof. exact (eq_refl (@all ((A -> B) -> P -> B))). Qed.
Lemma lem8364965 {A B P : Type'} (lt2 : type1402 A) (p1 : P -> A) : (term1035 A B P lt2 p1) = (term1036 A B P lt2 p1).
Proof. exact (MK_COMB (@lem8364964 A B P) (@lem8364963 A B P lt2 p1)). Qed.
Lemma lem8364966 {A B P : Type'} (lt2 : type1402 A) : (term1037 A B P lt2) = (term1038 A B P lt2).
Proof. exact (fun_ext (fun p1 : P -> A => @lem8364965 A B P lt2 p1)). Qed.
Lemma lem8364967 {A P : Type'} : (@all (P -> A)) = (@all (P -> A)).
Proof. exact (eq_refl (@all (P -> A))). Qed.
Lemma lem8364968 {A B P : Type'} (lt2 : type1402 A) : (term1026 A B P lt2) = (term1039 A B P lt2).
Proof. exact (MK_COMB (@lem8364967 A P) (@lem8364966 A B P lt2)). Qed.
Lemma lem8364969 {A B P : Type'} (lt2 : type1402 A) : ((term1025 A B P lt2) = (term1026 A B P lt2)) = ((term983 A B P lt2) = (term1039 A B P lt2)).
Proof. exact (MK_COMB (@lem8364961 A B P lt2) (@lem8364968 A B P lt2)). Qed.
Lemma lem8364970 {A B P : Type'} (lt2 : type1402 A) : (term983 A B P lt2) = (term1039 A B P lt2).
Proof. exact (EQ_MP (@lem8364969 A B P lt2) (@lem8364955 A B P lt2)). Qed.
Lemma lem8365192 {_25307 : Type'} (h : _25307) (P : _25307 -> Prop) (t : list _25307) : (term1040 _25307 P h t) = (term1041 _25307 h P t).
Proof. exact (EQ_MP (@lem1100844 _25307 h P t) (@lem1100843 _25307 h P t)). Qed.
Lemma lem8365193 {A B P : Type'} (h : type1645 A B P) (P' : type1177 A B P) (t : type1635 A B P) : (term1042 A B P P' h t) = (term1043 A B P h P' t).
Proof. exact (@lem8365192 (type1645 A B P) h P' t). Qed.
Lemma lem8365194 {A B P : Type'} (p1 : P -> A) (p2 : type558 A B P) (lt2 : type1402 A) (a1 : type1635 A B P) : (term1044 A B P lt2 p1 p2 a1) = (term1045 A B P p1 p2 lt2 a1).
Proof. exact (@lem8365193 A B P (@pair (P -> A) ((A -> B) -> P -> B) p1 p2) (term992 A B P lt2) a1). Qed.
Lemma lem8365197 {A B P : Type'} (a0 : P -> A) (a1 : type558 A B P) : a0 = (term1046 A B P a0 a1).
Proof. exact (@lem51128 (P -> A) (type558 A B P) a0 a1). Qed.
Lemma lem8365198 {A B P : Type'} (s : P -> A) (t : type558 A B P) : s = (term1046 A B P s t).
Proof. exact (@lem8365197 A B P s t). Qed.
Lemma lem8365199 {A B P : Type'} (a0 : P -> A) (a1 : type558 A B P) : a1 = (term1047 A B P a0 a1).
Proof. exact (@lem51159 (P -> A) (type558 A B P) a0 a1). Qed.
Lemma lem8365200 {A B P : Type'} (s : P -> A) (t : type558 A B P) : t = (term1047 A B P s t).
Proof. exact (@lem8365199 A B P s t). Qed.
Lemma lem8365201 {A P : Type'} (s : P -> A) : s = s.
Proof. exact (eq_refl s). Qed.
Lemma lem8365202 {A P : Type'} : (term1048 A P) = (term1048 A P).
Proof. exact (eq_refl (term1048 A P)). Qed.
Lemma lem8365203 {A B P : Type'} (s : P -> A) (t : type558 A B P) : (term1049 A P s) = (term1050 A B P s t).
Proof. exact (MK_COMB (@lem8365202 A P) (@lem8365198 A B P s t)). Qed.
Lemma lem8365204 {A B P : Type'} (s : P -> A) (t : type558 A B P) : (term1050 A B P s t) = (term1046 A B P s t).
Proof. exact (eq_refl (term1050 A B P s t)). Qed.
Lemma lem8365205 {A P : Type'} (s : P -> A) : (term1051 A P s) = (term1051 A P s).
Proof. exact (eq_refl (term1051 A P s)). Qed.
Lemma lem8365206 {A B P : Type'} (s : P -> A) (t : type558 A B P) : ((term1049 A P s) = (term1050 A B P s t)) = ((term1049 A P s) = (term1046 A B P s t)).
Proof. exact (MK_COMB (@lem8365205 A P s) (@lem8365204 A B P s t)). Qed.
Lemma lem8365207 {A P : Type'} (s : P -> A) : (term1049 A P s) = s.
Proof. exact (eq_refl (term1049 A P s)). Qed.
Lemma lem8365208 {A P : Type'} : (@eq (P -> A)) = (@eq (P -> A)).
Proof. exact (eq_refl (@eq (P -> A))). Qed.
Lemma lem8365209 {A P : Type'} (s : P -> A) : (term1051 A P s) = (@eq (P -> A) s).
Proof. exact (MK_COMB (@lem8365208 A P) (@lem8365207 A P s)). Qed.
Lemma lem8365210 {A B P : Type'} (s : P -> A) (t : type558 A B P) : (term1046 A B P s t) = (term1046 A B P s t).
Proof. exact (eq_refl (term1046 A B P s t)). Qed.
Lemma lem8365211 {A B P : Type'} (s : P -> A) (t : type558 A B P) : ((term1049 A P s) = (term1046 A B P s t)) = (s = (term1046 A B P s t)).
Proof. exact (MK_COMB (@lem8365209 A P s) (@lem8365210 A B P s t)). Qed.
Lemma lem8365212 {A B P : Type'} (s : P -> A) (t : type558 A B P) : ((term1049 A P s) = (term1050 A B P s t)) = (s = (term1046 A B P s t)).
Proof. exact (TRANS (@lem8365206 A B P s t) (@lem8365211 A B P s t)). Qed.
Lemma lem8365213 {A B P : Type'} (s : P -> A) (t : type558 A B P) : s = (term1046 A B P s t).
Proof. exact (EQ_MP (@lem8365212 A B P s t) (@lem8365203 A B P s t)). Qed.
Lemma lem8365214 {A P : Type'} (s : P -> A) : (@eq (P -> A) s) = (@eq (P -> A) s).
Proof. exact (eq_refl (@eq (P -> A) s)). Qed.
Lemma lem8365215 {A B P : Type'} (s : P -> A) (t : type558 A B P) : (s = s) = (s = (term1046 A B P s t)).
Proof. exact (MK_COMB (@lem8365214 A P s) (@lem8365213 A B P s t)). Qed.
Lemma lem8365216 {A B P : Type'} (s : P -> A) (t : type558 A B P) : s = (term1046 A B P s t).
Proof. exact (EQ_MP (@lem8365215 A B P s t) (@lem8365201 A P s)). Qed.
Lemma lem8365217 {A B P : Type'} (t : type558 A B P) : t = t.
Proof. exact (eq_refl t). Qed.
Lemma lem8365218 {A B P : Type'} : (term1052 A B P) = (term1052 A B P).
Proof. exact (eq_refl (term1052 A B P)). Qed.
Lemma lem8365219 {A B P : Type'} (s : P -> A) (t : type558 A B P) : (term1053 A B P t) = (term1054 A B P s t).
Proof. exact (MK_COMB (@lem8365218 A B P) (@lem8365200 A B P s t)). Qed.
Lemma lem8365220 {A B P : Type'} (s : P -> A) (t : type558 A B P) : (term1054 A B P s t) = (term1047 A B P s t).
Proof. exact (eq_refl (term1054 A B P s t)). Qed.
Lemma lem8365221 {A B P : Type'} (t : type558 A B P) : (term1055 A B P t) = (term1055 A B P t).
Proof. exact (eq_refl (term1055 A B P t)). Qed.
Lemma lem8365222 {A B P : Type'} (s : P -> A) (t : type558 A B P) : ((term1053 A B P t) = (term1054 A B P s t)) = ((term1053 A B P t) = (term1047 A B P s t)).
Proof. exact (MK_COMB (@lem8365221 A B P t) (@lem8365220 A B P s t)). Qed.
Lemma lem8365223 {A B P : Type'} (t : type558 A B P) : (term1053 A B P t) = t.
Proof. exact (eq_refl (term1053 A B P t)). Qed.
Lemma lem8365224 {A B P : Type'} : (@eq ((A -> B) -> P -> B)) = (@eq ((A -> B) -> P -> B)).
Proof. exact (eq_refl (@eq ((A -> B) -> P -> B))). Qed.
Lemma lem8365225 {A B P : Type'} (t : type558 A B P) : (term1055 A B P t) = (@eq ((A -> B) -> P -> B) t).
Proof. exact (MK_COMB (@lem8365224 A B P) (@lem8365223 A B P t)). Qed.
Lemma lem8365226 {A B P : Type'} (s : P -> A) (t : type558 A B P) : (term1047 A B P s t) = (term1047 A B P s t).
Proof. exact (eq_refl (term1047 A B P s t)). Qed.
Lemma lem8365227 {A B P : Type'} (s : P -> A) (t : type558 A B P) : ((term1053 A B P t) = (term1047 A B P s t)) = (t = (term1047 A B P s t)).
Proof. exact (MK_COMB (@lem8365225 A B P t) (@lem8365226 A B P s t)). Qed.
Lemma lem8365228 {A B P : Type'} (s : P -> A) (t : type558 A B P) : ((term1053 A B P t) = (term1054 A B P s t)) = (t = (term1047 A B P s t)).
Proof. exact (TRANS (@lem8365222 A B P s t) (@lem8365227 A B P s t)). Qed.
Lemma lem8365229 {A B P : Type'} (s : P -> A) (t : type558 A B P) : t = (term1047 A B P s t).
Proof. exact (EQ_MP (@lem8365228 A B P s t) (@lem8365219 A B P s t)). Qed.
Lemma lem8365230 {A B P : Type'} (t : type558 A B P) : (@eq ((A -> B) -> P -> B) t) = (@eq ((A -> B) -> P -> B) t).
Proof. exact (eq_refl (@eq ((A -> B) -> P -> B) t)). Qed.
Lemma lem8365231 {A B P : Type'} (s : P -> A) (t : type558 A B P) : (t = t) = (t = (term1047 A B P s t)).
Proof. exact (MK_COMB (@lem8365230 A B P t) (@lem8365229 A B P s t)). Qed.
Lemma lem8365232 {A B P : Type'} (s : P -> A) (t : type558 A B P) : t = (term1047 A B P s t).
Proof. exact (EQ_MP (@lem8365231 A B P s t) (@lem8365217 A B P t)). Qed.
Lemma lem8365233 {A B P : Type'} (lt2 : type1402 A) : (term1056 A B P lt2) = (term1056 A B P lt2).
Proof. exact (eq_refl (term1056 A B P lt2)). Qed.
Lemma lem8365234 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (t : type558 A B P) : (term1057 A B P lt2 s) = (term1058 A B P lt2 s t).
Proof. exact (MK_COMB (@lem8365233 A B P lt2) (@lem8365216 A B P s t)). Qed.
Lemma lem8365235 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (t : type558 A B P) : (term1058 A B P lt2 s t) = (term1059 A B P lt2 s t).
Proof. exact (eq_refl (term1058 A B P lt2 s t)). Qed.
Lemma lem8365236 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) : (term1060 A B P lt2 s) = (term1060 A B P lt2 s).
Proof. exact (eq_refl (term1060 A B P lt2 s)). Qed.
Lemma lem8365237 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (t : type558 A B P) : ((term1057 A B P lt2 s) = (term1058 A B P lt2 s t)) = ((term1057 A B P lt2 s) = (term1059 A B P lt2 s t)).
Proof. exact (MK_COMB (@lem8365236 A B P lt2 s) (@lem8365235 A B P lt2 s t)). Qed.
Lemma lem8365238 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) : (term1057 A B P lt2 s) = (term1061 A B P lt2 s).
Proof. exact (eq_refl (term1057 A B P lt2 s)). Qed.
Lemma lem8365239 {A B P : Type'} : (@eq (((A -> B) -> P -> B) -> Prop)) = (@eq (((A -> B) -> P -> B) -> Prop)).
Proof. exact (eq_refl (@eq (((A -> B) -> P -> B) -> Prop))). Qed.
Lemma lem8365240 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) : (term1060 A B P lt2 s) = (term1062 A B P lt2 s).
Proof. exact (MK_COMB (@lem8365239 A B P) (@lem8365238 A B P lt2 s)). Qed.
Lemma lem8365241 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (t : type558 A B P) : (term1059 A B P lt2 s t) = (term1059 A B P lt2 s t).
Proof. exact (eq_refl (term1059 A B P lt2 s t)). Qed.
Lemma lem8365242 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (t : type558 A B P) : ((term1057 A B P lt2 s) = (term1059 A B P lt2 s t)) = ((term1061 A B P lt2 s) = (term1059 A B P lt2 s t)).
Proof. exact (MK_COMB (@lem8365240 A B P lt2 s) (@lem8365241 A B P lt2 s t)). Qed.
Lemma lem8365243 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (t : type558 A B P) : ((term1057 A B P lt2 s) = (term1058 A B P lt2 s t)) = ((term1061 A B P lt2 s) = (term1059 A B P lt2 s t)).
Proof. exact (TRANS (@lem8365237 A B P lt2 s t) (@lem8365242 A B P lt2 s t)). Qed.
Lemma lem8365244 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (t : type558 A B P) : (term1061 A B P lt2 s) = (term1059 A B P lt2 s t).
Proof. exact (EQ_MP (@lem8365243 A B P lt2 s t) (@lem8365234 A B P lt2 s t)). Qed.
Lemma lem8365245 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (t : type558 A B P) : (term1063 A B P lt2 s t) = (term1064 A B P lt2 s t).
Proof. exact (MK_COMB (@lem8365244 A B P lt2 s t) (@lem8365232 A B P s t)). Qed.
Lemma lem8365246 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (t : type558 A B P) : (term1064 A B P lt2 s t) = (term1065 A B P lt2 s t).
Proof. exact (eq_refl (term1064 A B P lt2 s t)). Qed.
Lemma lem8365247 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (t : type558 A B P) : (term1066 A B P lt2 s t) = (term1066 A B P lt2 s t).
Proof. exact (eq_refl (term1066 A B P lt2 s t)). Qed.
Lemma lem8365248 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (t : type558 A B P) : ((term1063 A B P lt2 s t) = (term1064 A B P lt2 s t)) = ((term1063 A B P lt2 s t) = (term1065 A B P lt2 s t)).
Proof. exact (MK_COMB (@lem8365247 A B P lt2 s t) (@lem8365246 A B P lt2 s t)). Qed.
Lemma lem8365249 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (t : type558 A B P) : (term1063 A B P lt2 s t) = (term1067 A B P lt2 s t).
Proof. exact (eq_refl (term1063 A B P lt2 s t)). Qed.
Lemma lem8365250 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8365251 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (t : type558 A B P) : (term1066 A B P lt2 s t) = (term1068 A B P lt2 s t).
Proof. exact (MK_COMB (@lem8365250) (@lem8365249 A B P lt2 s t)). Qed.
Lemma lem8365252 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (t : type558 A B P) : (term1065 A B P lt2 s t) = (term1065 A B P lt2 s t).
Proof. exact (eq_refl (term1065 A B P lt2 s t)). Qed.
Lemma lem8365253 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (t : type558 A B P) : ((term1063 A B P lt2 s t) = (term1065 A B P lt2 s t)) = ((term1067 A B P lt2 s t) = (term1065 A B P lt2 s t)).
Proof. exact (MK_COMB (@lem8365251 A B P lt2 s t) (@lem8365252 A B P lt2 s t)). Qed.
Lemma lem8365254 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (t : type558 A B P) : ((term1063 A B P lt2 s t) = (term1064 A B P lt2 s t)) = ((term1067 A B P lt2 s t) = (term1065 A B P lt2 s t)).
Proof. exact (TRANS (@lem8365248 A B P lt2 s t) (@lem8365253 A B P lt2 s t)). Qed.
Lemma lem8365255 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (t : type558 A B P) : (term1067 A B P lt2 s t) = (term1065 A B P lt2 s t).
Proof. exact (EQ_MP (@lem8365254 A B P lt2 s t) (@lem8365245 A B P lt2 s t)). Qed.
Lemma lem8365256 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (t : type558 A B P) : (term1065 A B P lt2 s t) = (term1067 A B P lt2 s t).
Proof. exact (SYM (@lem8365255 A B P lt2 s t)). Qed.
Lemma lem8365257 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (t : type558 A B P) : (term1069 A B P lt2 s t) = (term1065 A B P lt2 s t).
Proof. exact (eq_refl (term1069 A B P lt2 s t)). Qed.
Lemma lem8365258 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (t : type558 A B P) : (term1069 A B P lt2 s t) = (term1067 A B P lt2 s t).
Proof. exact (TRANS (@lem8365257 A B P lt2 s t) (@lem8365256 A B P lt2 s t)). Qed.
Lemma lem8365259 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) : term1070 A B P lt2 s.
Proof. exact (fun t : type558 A B P => @lem8365258 A B P lt2 s t). Qed.
Lemma lem8365260 {A B P : Type'} (lt2 : type1402 A) : term1071 A B P lt2.
Proof. exact (fun s : P -> A => @lem8365259 A B P lt2 s). Qed.
Lemma lem8365261 {A B P : Type'} (lt2 : type1402 A) : term1072 A B P lt2.
Proof. exact (ex_intro (term1073 A B P lt2) (term1074 A B P lt2) (@lem8365260 A B P lt2)). Qed.
Lemma lem8365263 {A : Type'} (a : A) (b : A) : (a = b) = (@GEQ A a b).
Proof. exact (EQ_MP (@lem48806 A a b) (@lem48805 A a b)). Qed.
Lemma lem8365264 (a : Prop) (b : Prop) : (a = b) = (@GEQ Prop a b).
Proof. exact (@lem8365263 Prop a b). Qed.
Lemma lem8365265 {A B P : Type'} (_114082 : type1177 A B P) (lt2 : type1402 A) (s : P -> A) (t : type558 A B P) : ((term1075 A B P _114082 s t) = (term1067 A B P lt2 s t)) = (term1076 A B P _114082 lt2 s t).
Proof. exact (@lem8365264 (term1075 A B P _114082 s t) (term1067 A B P lt2 s t)). Qed.
Lemma lem8365266 {A B P : Type'} (_114082 : type1177 A B P) (lt2 : type1402 A) (s : P -> A) : (term1077 A B P _114082 lt2 s) = (term1078 A B P _114082 lt2 s).
Proof. exact (fun_ext (fun t : type558 A B P => @lem8365265 A B P _114082 lt2 s t)). Qed.
Lemma lem8365267 {A B P : Type'} : (@all ((A -> B) -> P -> B)) = (@all ((A -> B) -> P -> B)).
Proof. exact (eq_refl (@all ((A -> B) -> P -> B))). Qed.
Lemma lem8365268 {A B P : Type'} (_114082 : type1177 A B P) (lt2 : type1402 A) (s : P -> A) : (term1079 A B P _114082 lt2 s) = (term1080 A B P _114082 lt2 s).
Proof. exact (MK_COMB (@lem8365267 A B P) (@lem8365266 A B P _114082 lt2 s)). Qed.
Lemma lem8365269 {A B P : Type'} (_114082 : type1177 A B P) (lt2 : type1402 A) : (term1081 A B P _114082 lt2) = (term1082 A B P _114082 lt2).
Proof. exact (fun_ext (fun s : P -> A => @lem8365268 A B P _114082 lt2 s)). Qed.
Lemma lem8365270 {A P : Type'} : (@all (P -> A)) = (@all (P -> A)).
Proof. exact (eq_refl (@all (P -> A))). Qed.
Lemma lem8365271 {A B P : Type'} (_114082 : type1177 A B P) (lt2 : type1402 A) : (term1083 A B P _114082 lt2) = (term1084 A B P _114082 lt2).
Proof. exact (MK_COMB (@lem8365270 A P) (@lem8365269 A B P _114082 lt2)). Qed.
Lemma lem8365272 {A B P : Type'} (lt2 : type1402 A) : (term1073 A B P lt2) = (term1085 A B P lt2).
Proof. exact (fun_ext (fun _114082 : type1177 A B P => @lem8365271 A B P _114082 lt2)). Qed.
Lemma lem8365273 {A B P : Type'} : (@ex ((prod (P -> A) ((A -> B) -> P -> B)) -> Prop)) = (@ex ((prod (P -> A) ((A -> B) -> P -> B)) -> Prop)).
Proof. exact (eq_refl (@ex ((prod (P -> A) ((A -> B) -> P -> B)) -> Prop))). Qed.
Lemma lem8365274 {A B P : Type'} (lt2 : type1402 A) : (term1072 A B P lt2) = (term1086 A B P lt2).
Proof. exact (MK_COMB (@lem8365273 A B P) (@lem8365272 A B P lt2)). Qed.
Lemma lem8365275 {A B P : Type'} (lt2 : type1402 A) : term1086 A B P lt2.
Proof. exact (EQ_MP (@lem8365274 A B P lt2) (@lem8365261 A B P lt2)). Qed.
Lemma lem8365277 {_5076 : Type'} (P : _5076 -> Prop) : term1087 _5076 P.
Proof. exact (EQ_MP (@lem48920 _5076 P) (@lem0)). Qed.
Lemma lem8365278 {A B P : Type'} (P' : type301 A B P) : term1088 A B P P'.
Proof. exact (@lem8365277 (type1177 A B P) P'). Qed.
Lemma lem8365279 {A B P : Type'} (lt2 : type1402 A) : term1089 A B P lt2.
Proof. exact (@lem8365278 A B P (term1085 A B P lt2)). Qed.
Lemma lem8365280 {A B P : Type'} (lt2 : type1402 A) : term1090 A B P lt2.
Proof. exact (@lem8365279 A B P lt2 (@lem8365275 A B P lt2)). Qed.
Lemma lem8365281 {A B P : Type'} (lt2 : type1402 A) : (term1090 A B P lt2) = (term1091 A B P lt2).
Proof. exact (eq_refl (term1090 A B P lt2)). Qed.
Lemma lem8365282 {A B P : Type'} (lt2 : type1402 A) : term1091 A B P lt2.
Proof. exact (EQ_MP (@lem8365281 A B P lt2) (@lem8365280 A B P lt2)). Qed.
Lemma lem8365283 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) : term1092 A B P lt2 s.
Proof. exact (@lem8365282 A B P lt2 s). Qed.
Lemma lem8365284 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) : (term1092 A B P lt2 s) = (term1093 A B P lt2 s).
Proof. exact (eq_refl (term1092 A B P lt2 s)). Qed.
Lemma lem8365285 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) : term1093 A B P lt2 s.
Proof. exact (EQ_MP (@lem8365284 A B P lt2 s) (@lem8365283 A B P lt2 s)). Qed.
Lemma lem8365286 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (t : type558 A B P) : term1094 A B P lt2 s t.
Proof. exact (@lem8365285 A B P lt2 s t). Qed.
Lemma lem8365287 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (t : type558 A B P) : (term1094 A B P lt2 s t) = (term1095 A B P lt2 s t).
Proof. exact (eq_refl (term1094 A B P lt2 s t)). Qed.
Lemma lem8365288 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (t : type558 A B P) : term1095 A B P lt2 s t.
Proof. exact (EQ_MP (@lem8365287 A B P lt2 s t) (@lem8365286 A B P lt2 s t)). Qed.
Lemma lem8365290 {A : Type'} (a : A) (b : A) : (@GEQ A a b) = (a = b).
Proof. exact (EQ_MP (@lem48812 A a b) (@lem48811 A a b)). Qed.
Lemma lem8365291 (a : Prop) (b : Prop) : (@GEQ Prop a b) = (a = b).
Proof. exact (@lem8365290 Prop a b). Qed.
Lemma lem8365292 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (t : type558 A B P) : (term1095 A B P lt2 s t) = ((term1096 A B P lt2 s t) = (term1067 A B P lt2 s t)).
Proof. exact (@lem8365291 (term1096 A B P lt2 s t) (term1067 A B P lt2 s t)). Qed.
Lemma lem8365293 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (t : type558 A B P) : (term1096 A B P lt2 s t) = (term1067 A B P lt2 s t).
Proof. exact (EQ_MP (@lem8365292 A B P lt2 s t) (@lem8365288 A B P lt2 s t)). Qed.
Lemma lem8365294 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (t : type558 A B P) : (term1096 A B P lt2 s t) = (term1067 A B P lt2 s t).
Proof. exact (@lem8365293 A B P lt2 s t). Qed.
Lemma lem8365295 {A B P : Type'} (lt2 : type1402 A) (p1 : P -> A) (p2 : type558 A B P) : (term1096 A B P lt2 p1 p2) = (term1067 A B P lt2 p1 p2).
Proof. exact (@lem8365294 A B P lt2 p1 p2). Qed.
Lemma lem8365388 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8365389 {A B P : Type'} (lt2 : type1402 A) (p1 : P -> A) (p2 : type558 A B P) : (term1097 A B P lt2 p1 p2) = (term1098 A B P lt2 p1 p2).
Proof. exact (MK_COMB (@lem8365388) (@lem8365295 A B P lt2 p1 p2)). Qed.
Lemma lem8365494 {A B P : Type'} (lt2 : type1402 A) (a1 : type1635 A B P) : (term898 A B P lt2 a1) = (term898 A B P lt2 a1).
Proof. exact (eq_refl (term898 A B P lt2 a1)). Qed.
Lemma lem8365495 {A B P : Type'} (p1 : P -> A) (p2 : type558 A B P) (lt2 : type1402 A) (a1 : type1635 A B P) : (term1045 A B P p1 p2 lt2 a1) = (term1099 A B P p1 p2 lt2 a1).
Proof. exact (MK_COMB (@lem8365389 A B P lt2 p1 p2) (@lem8365494 A B P lt2 a1)). Qed.
Lemma lem8365498 {A B P : Type'} (p1 : P -> A) (p2 : type558 A B P) (lt2 : type1402 A) (a1 : type1635 A B P) : (term1044 A B P lt2 p1 p2 a1) = (term1099 A B P p1 p2 lt2 a1).
Proof. exact (TRANS (@lem8365194 A B P p1 p2 lt2 a1) (@lem8365495 A B P p1 p2 lt2 a1)). Qed.
Lemma lem8365499 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem8365500 {A B P : Type'} (p1 : P -> A) (p2 : type558 A B P) (lt2 : type1402 A) (a1 : type1635 A B P) : (term1100 A B P lt2 p1 p2 a1) = (term1101 A B P p1 p2 lt2 a1).
Proof. exact (MK_COMB (@lem8365499) (@lem8365498 A B P p1 p2 lt2 a1)). Qed.
Lemma lem8365594 {_143179 _143218 _143219 _143221 : Type'} (t : type1475 _143179 _143219 _143221) (s : _143221 -> _143218) (clauses : type1639 _143179 _143218 _143219 _143221) (f : _143219) (x : _143218) : (term1102 _143179 _143218 _143219 _143221 s t clauses f x) = (term1103 _143179 _143218 _143219 _143221 t s clauses f x).
Proof. exact (proj2 (@lem8059078 Prop Prop _143179 _143218 _143219 _143221 t s clauses f x)). Qed.
Lemma lem8365595 {A B P : Type'} (t : type558 A B P) (s : P -> A) (clauses : type1635 A B P) (f : A -> B) (x : A) : (term1104 A B P s t clauses f x) = (term1105 A B P t s clauses f x).
Proof. exact (@lem8365594 B A (A -> B) P t s clauses f x). Qed.
Lemma lem8365596 {A B P : Type'} (p2 : type558 A B P) (p1 : P -> A) (a1 : type1635 A B P) (f : A -> B) (x : A) : (term1104 A B P p1 p2 a1 f x) = (term1105 A B P p2 p1 a1 f x).
Proof. exact (@lem8365595 A B P p2 p1 a1 f x). Qed.
Lemma lem8365607 {B : Type'} : (@eq B) = (@eq B).
Proof. exact (eq_refl (@eq B)). Qed.
Lemma lem8365608 {A B P : Type'} (p2 : type558 A B P) (p1 : P -> A) (a1 : type1635 A B P) (f : A -> B) (x : A) : (term1106 A B P p1 p2 a1 f x) = (term1107 A B P p2 p1 a1 f x).
Proof. exact (MK_COMB (@lem8365607 B) (@lem8365596 A B P p2 p1 a1 f x)). Qed.
Lemma lem8365609 {A B : Type'} (P : type551 A B) (G : type548 A B) (H' : type549 A B) (f : A -> B) (x : A) : (term908 A B P G H' f x) = (term908 A B P G H' f x).
Proof. exact (eq_refl (term908 A B P G H' f x)). Qed.
Lemma lem8365610 {A B P : Type'} (p2 : type558 A B P) (p1 : P -> A) (a1 : type1635 A B P) (P' : type551 A B) (G : type548 A B) (H' : type549 A B) (f : A -> B) (x : A) : ((term1104 A B P p1 p2 a1 f x) = (term908 A B P' G H' f x)) = ((term1105 A B P p2 p1 a1 f x) = (term908 A B P' G H' f x)).
Proof. exact (MK_COMB (@lem8365608 A B P p2 p1 a1 f x) (@lem8365609 A B P' G H' f x)). Qed.
Lemma lem8365613 {A B P : Type'} (p2 : type558 A B P) (p1 : P -> A) (a1 : type1635 A B P) (P' : type551 A B) (G : type548 A B) (H' : type549 A B) (f : A -> B) : (term1108 A B P p1 p2 a1 P' G H' f) = (term1109 A B P p2 p1 a1 P' G H' f).
Proof. exact (fun_ext (fun x : A => @lem8365610 A B P p2 p1 a1 P' G H' f x)). Qed.
Lemma lem8365614 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem8365615 {A B P : Type'} (p2 : type558 A B P) (p1 : P -> A) (a1 : type1635 A B P) (P' : type551 A B) (G : type548 A B) (H' : type549 A B) (f : A -> B) : (term1110 A B P p1 p2 a1 P' G H' f) = (term1111 A B P p2 p1 a1 P' G H' f).
Proof. exact (MK_COMB (@lem8365614 A) (@lem8365613 A B P p2 p1 a1 P' G H' f)). Qed.
Lemma lem8365622 {A B P : Type'} (p2 : type558 A B P) (p1 : P -> A) (a1 : type1635 A B P) (P' : type551 A B) (G : type548 A B) (H' : type549 A B) : (term1112 A B P p1 p2 a1 P' G H') = (term1113 A B P p2 p1 a1 P' G H').
Proof. exact (fun_ext (fun f : A -> B => @lem8365615 A B P p2 p1 a1 P' G H' f)). Qed.
Lemma lem8365623 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem8365624 {A B P : Type'} (p2 : type558 A B P) (p1 : P -> A) (a1 : type1635 A B P) (P' : type551 A B) (G : type548 A B) (H' : type549 A B) : (term1114 A B P p1 p2 a1 P' G H') = (term1115 A B P p2 p1 a1 P' G H').
Proof. exact (MK_COMB (@lem8365623 A B) (@lem8365622 A B P p2 p1 a1 P' G H')). Qed.
Lemma lem8365631 {A B : Type'} (P : type551 A B) (G : type548 A B) (lt2 : type1402 A) : (term917 A B P G lt2) = (term917 A B P G lt2).
Proof. exact (eq_refl (term917 A B P G lt2)). Qed.
Lemma lem8365632 {A B P : Type'} (lt2 : type1402 A) (p2 : type558 A B P) (p1 : P -> A) (a1 : type1635 A B P) (P' : type551 A B) (G : type548 A B) (H' : type549 A B) : (term1116 A B P lt2 p1 p2 a1 P' G H') = (term1117 A B P lt2 p2 p1 a1 P' G H').
Proof. exact (MK_COMB (@lem8365631 A B P' G lt2) (@lem8365624 A B P p2 p1 a1 P' G H')). Qed.
Lemma lem8365635 {A B : Type'} (lt2 : type1402 A) (P : type551 A B) (G : type548 A B) (H' : type549 A B) : (term920 A B lt2 P G H') = (term920 A B lt2 P G H').
Proof. exact (eq_refl (term920 A B lt2 P G H')). Qed.
Lemma lem8365636 {A B P : Type'} (lt2 : type1402 A) (p2 : type558 A B P) (p1 : P -> A) (a1 : type1635 A B P) (P' : type551 A B) (G : type548 A B) (H' : type549 A B) : (term1118 A B P lt2 p1 p2 a1 P' G H') = (term1119 A B P lt2 p2 p1 a1 P' G H').
Proof. exact (MK_COMB (@lem8365635 A B lt2 P' G H') (@lem8365632 A B P lt2 p2 p1 a1 P' G H')). Qed.
Lemma lem8365639 {A B P : Type'} (lt2 : type1402 A) (p2 : type558 A B P) (p1 : P -> A) (a1 : type1635 A B P) (P' : type551 A B) (G : type548 A B) : (term1120 A B P lt2 p1 p2 a1 P' G) = (term1121 A B P lt2 p2 p1 a1 P' G).
Proof. exact (fun_ext (fun H' : type549 A B => @lem8365636 A B P lt2 p2 p1 a1 P' G H')). Qed.
Lemma lem8365640 {A B : Type'} : (@ex ((A -> B) -> A -> B)) = (@ex ((A -> B) -> A -> B)).
Proof. exact (eq_refl (@ex ((A -> B) -> A -> B))). Qed.
Lemma lem8365641 {A B P : Type'} (lt2 : type1402 A) (p2 : type558 A B P) (p1 : P -> A) (a1 : type1635 A B P) (P' : type551 A B) (G : type548 A B) : (term1122 A B P lt2 p1 p2 a1 P' G) = (term1123 A B P lt2 p2 p1 a1 P' G).
Proof. exact (MK_COMB (@lem8365640 A B) (@lem8365639 A B P lt2 p2 p1 a1 P' G)). Qed.
Lemma lem8365646 {A B P : Type'} (lt2 : type1402 A) (p2 : type558 A B P) (p1 : P -> A) (a1 : type1635 A B P) (P' : type551 A B) : (term1124 A B P lt2 p1 p2 a1 P') = (term1125 A B P lt2 p2 p1 a1 P').
Proof. exact (fun_ext (fun G : type548 A B => @lem8365641 A B P lt2 p2 p1 a1 P' G)). Qed.
Lemma lem8365647 {A B : Type'} : (@ex ((A -> B) -> A -> A)) = (@ex ((A -> B) -> A -> A)).
Proof. exact (eq_refl (@ex ((A -> B) -> A -> A))). Qed.
Lemma lem8365648 {A B P : Type'} (lt2 : type1402 A) (p2 : type558 A B P) (p1 : P -> A) (a1 : type1635 A B P) (P' : type551 A B) : (term1126 A B P lt2 p1 p2 a1 P') = (term1127 A B P lt2 p2 p1 a1 P').
Proof. exact (MK_COMB (@lem8365647 A B) (@lem8365646 A B P lt2 p2 p1 a1 P')). Qed.
Lemma lem8365653 {A B P : Type'} (lt2 : type1402 A) (p2 : type558 A B P) (p1 : P -> A) (a1 : type1635 A B P) : (term1128 A B P lt2 p1 p2 a1) = (term1129 A B P lt2 p2 p1 a1).
Proof. exact (fun_ext (fun P' : type551 A B => @lem8365648 A B P lt2 p2 p1 a1 P')). Qed.
Lemma lem8365654 {A B : Type'} : (@ex ((A -> B) -> A -> Prop)) = (@ex ((A -> B) -> A -> Prop)).
Proof. exact (eq_refl (@ex ((A -> B) -> A -> Prop))). Qed.
Lemma lem8365655 {A B P : Type'} (lt2 : type1402 A) (p2 : type558 A B P) (p1 : P -> A) (a1 : type1635 A B P) : (term1130 A B P lt2 p1 p2 a1) = (term1131 A B P lt2 p2 p1 a1).
Proof. exact (MK_COMB (@lem8365654 A B) (@lem8365653 A B P lt2 p2 p1 a1)). Qed.
Lemma lem8365660 {A B P : Type'} (lt2 : type1402 A) (p2 : type558 A B P) (p1 : P -> A) (a1 : type1635 A B P) : (term1132 A B P lt2 p1 p2 a1) = (term1133 A B P lt2 p2 p1 a1).
Proof. exact (MK_COMB (@lem8365500 A B P p1 p2 lt2 a1) (@lem8365655 A B P lt2 p2 p1 a1)). Qed.
Lemma lem8365663 {A B P : Type'} (lt2 : type1402 A) (a1 : type1635 A B P) : (term971 A B P lt2 a1) = (term971 A B P lt2 a1).
Proof. exact (eq_refl (term971 A B P lt2 a1)). Qed.
Lemma lem8365664 {A B P : Type'} (lt2 : type1402 A) (p2 : type558 A B P) (p1 : P -> A) (a1 : type1635 A B P) : (term1134 A B P lt2 p1 p2 a1) = (term1135 A B P lt2 p2 p1 a1).
Proof. exact (MK_COMB (@lem8365663 A B P lt2 a1) (@lem8365660 A B P lt2 p2 p1 a1)). Qed.
Lemma lem8365667 {A B P : Type'} (lt2 : type1402 A) (p2 : type558 A B P) (p1 : P -> A) : (term1136 A B P lt2 p1 p2) = (term1137 A B P lt2 p2 p1).
Proof. exact (fun_ext (fun a1 : type1635 A B P => @lem8365664 A B P lt2 p2 p1 a1)). Qed.
Lemma lem8365668 {A B P : Type'} : (@all (list (prod (P -> A) ((A -> B) -> P -> B)))) = (@all (list (prod (P -> A) ((A -> B) -> P -> B)))).
Proof. exact (eq_refl (@all (list (prod (P -> A) ((A -> B) -> P -> B))))). Qed.
Lemma lem8365669 {A B P : Type'} (lt2 : type1402 A) (p2 : type558 A B P) (p1 : P -> A) : (term1032 A B P lt2 p1 p2) = (term1138 A B P lt2 p2 p1).
Proof. exact (MK_COMB (@lem8365668 A B P) (@lem8365667 A B P lt2 p2 p1)). Qed.
Lemma lem8365676 {A B P : Type'} (lt2 : type1402 A) (p1 : P -> A) : (term1034 A B P lt2 p1) = (term1139 A B P lt2 p1).
Proof. exact (fun_ext (fun p2 : type558 A B P => @lem8365669 A B P lt2 p2 p1)). Qed.
Lemma lem8365677 {A B P : Type'} : (@all ((A -> B) -> P -> B)) = (@all ((A -> B) -> P -> B)).
Proof. exact (eq_refl (@all ((A -> B) -> P -> B))). Qed.
Lemma lem8365678 {A B P : Type'} (lt2 : type1402 A) (p1 : P -> A) : (term1036 A B P lt2 p1) = (term1140 A B P lt2 p1).
Proof. exact (MK_COMB (@lem8365677 A B P) (@lem8365676 A B P lt2 p1)). Qed.
Lemma lem8365685 {A B P : Type'} (lt2 : type1402 A) : (term1038 A B P lt2) = (term1141 A B P lt2).
Proof. exact (fun_ext (fun p1 : P -> A => @lem8365678 A B P lt2 p1)). Qed.
Lemma lem8365686 {A P : Type'} : (@all (P -> A)) = (@all (P -> A)).
Proof. exact (eq_refl (@all (P -> A))). Qed.
Lemma lem8365687 {A B P : Type'} (lt2 : type1402 A) : (term1039 A B P lt2) = (term1142 A B P lt2).
Proof. exact (MK_COMB (@lem8365686 A P) (@lem8365685 A B P lt2)). Qed.
Lemma lem8365694 {A B P : Type'} (lt2 : type1402 A) : (term983 A B P lt2) = (term1142 A B P lt2).
Proof. exact (TRANS (@lem8364970 A B P lt2) (@lem8365687 A B P lt2)). Qed.
Lemma lem8365695 {A B P : Type'} (lt2 : type1402 A) : (term985 A B P lt2) = (term1143 A B P lt2).
Proof. exact (MK_COMB (@lem8364947 A B P lt2) (@lem8365694 A B P lt2)). Qed.
Lemma lem8365698 {A B P : Type'} (lt2 : type1402 A) : (term1143 A B P lt2) = (term985 A B P lt2).
Proof. exact (SYM (@lem8365695 A B P lt2)). Qed.
Lemma lem8365728 {A B : Type'} (f : A -> B) (y : A) : (term1144 A B f y) = (f y).
Proof. exact (EQ_MP (@lem1810 A B f y) (@lem1809 A B f y)). Qed.
Lemma lem8365729 {A B : Type'} (f : type551 A B) (y : A -> B) : (term1145 A B f y) = (f y).
Proof. exact (@lem8365728 (A -> B) (A -> Prop) f y). Qed.
Lemma lem8365730 {A B : Type'} (f : A -> B) : (term1146 A B f) = (term1147 A B f).
Proof. exact (@lem8365729 A B (term1148 A B) f). Qed.
Lemma lem8365731 {A B : Type'} (f : A -> B) : (term1147 A B f) = (term1149 A).
Proof. exact (eq_refl (term1147 A B f)). Qed.
Lemma lem8365732 {A B : Type'} : (term1150 A B) = (term1148 A B).
Proof. exact (fun_ext (fun f : A -> B => @lem8365731 A B f)). Qed.
Lemma lem8365733 {A B : Type'} (f : A -> B) : f = f.
Proof. exact (eq_refl f). Qed.
Lemma lem8365734 {A B : Type'} (f : A -> B) : (term1146 A B f) = (term1147 A B f).
Proof. exact (MK_COMB (@lem8365732 A B) (@lem8365733 A B f)). Qed.
Lemma lem8365735 {A : Type'} : (@eq (A -> Prop)) = (@eq (A -> Prop)).
Proof. exact (eq_refl (@eq (A -> Prop))). Qed.
Lemma lem8365736 {A B : Type'} (f : A -> B) : (term1151 A B f) = (term1152 A B f).
Proof. exact (MK_COMB (@lem8365735 A) (@lem8365734 A B f)). Qed.
Lemma lem8365737 {A B : Type'} (f : A -> B) : (term1147 A B f) = (term1149 A).
Proof. exact (eq_refl (term1147 A B f)). Qed.
Lemma lem8365738 {A B : Type'} (f : A -> B) : ((term1146 A B f) = (term1147 A B f)) = ((term1147 A B f) = (term1149 A)).
Proof. exact (MK_COMB (@lem8365736 A B f) (@lem8365737 A B f)). Qed.
Lemma lem8365739 {A B : Type'} (f : A -> B) : (term1147 A B f) = (term1149 A).
Proof. exact (EQ_MP (@lem8365738 A B f) (@lem8365730 A B f)). Qed.
Lemma lem8365740 {A : Type'} (x : A) : x = x.
Proof. exact (eq_refl x). Qed.
Lemma lem8365741 {A B : Type'} (f : A -> B) (x : A) : (term1153 A B f x) = (term1154 A x).
Proof. exact (MK_COMB (@lem8365739 A B f) (@lem8365740 A x)). Qed.
Lemma lem8365743 {A B : Type'} (f : A -> B) (y : A) : (term1144 A B f y) = (f y).
Proof. exact (EQ_MP (@lem1810 A B f y) (@lem1809 A B f y)). Qed.
Lemma lem8365744 {A : Type'} (f : A -> Prop) (y : A) : (term1155 A f y) = (f y).
Proof. exact (@lem8365743 A Prop f y). Qed.
Lemma lem8365745 {A : Type'} (x : A) : (term1156 A x) = (term1154 A x).
Proof. exact (@lem8365744 A (term1149 A) x). Qed.
Lemma lem8365746 {A : Type'} (x : A) : (term1154 A x) = False.
Proof. exact (eq_refl (term1154 A x)). Qed.
Lemma lem8365747 {A : Type'} : (term1157 A) = (term1149 A).
Proof. exact (fun_ext (fun x : A => @lem8365746 A x)). Qed.
Lemma lem8365748 {A : Type'} (x : A) : x = x.
Proof. exact (eq_refl x). Qed.
Lemma lem8365749 {A : Type'} (x : A) : (term1156 A x) = (term1154 A x).
Proof. exact (MK_COMB (@lem8365747 A) (@lem8365748 A x)). Qed.
Lemma lem8365750 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8365751 {A : Type'} (x : A) : (term1158 A x) = (term1159 A x).
Proof. exact (MK_COMB (@lem8365750) (@lem8365749 A x)). Qed.
Lemma lem8365752 {A : Type'} (x : A) : (term1154 A x) = False.
Proof. exact (eq_refl (term1154 A x)). Qed.
Lemma lem8365753 {A : Type'} (x : A) : ((term1156 A x) = (term1154 A x)) = ((term1154 A x) = False).
Proof. exact (MK_COMB (@lem8365751 A x) (@lem8365752 A x)). Qed.
Lemma lem8365754 {A : Type'} (x : A) : (term1154 A x) = False.
Proof. exact (EQ_MP (@lem8365753 A x) (@lem8365745 A x)). Qed.
Lemma lem8365755 {A B : Type'} (f : A -> B) (x : A) : (term1153 A B f x) = False.
Proof. exact (TRANS (@lem8365741 A B f x) (@lem8365754 A x)). Qed.
Lemma lem8365756 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8365757 {A B : Type'} (f : A -> B) (x : A) : (term1160 A B f x) = (@eq Prop False).
Proof. exact (MK_COMB (@lem8365756) (@lem8365755 A B f x)). Qed.
Lemma lem8365759 {A B : Type'} (f : A -> B) (y : A) : (term1144 A B f y) = (f y).
Proof. exact (EQ_MP (@lem1810 A B f y) (@lem1809 A B f y)). Qed.
Lemma lem8365760 {A B : Type'} (f : type551 A B) (y : A -> B) : (term1145 A B f y) = (f y).
Proof. exact (@lem8365759 (A -> B) (A -> Prop) f y). Qed.
Lemma lem8365761 {A B : Type'} (g : A -> B) : (term1146 A B g) = (term1147 A B g).
Proof. exact (@lem8365760 A B (term1148 A B) g). Qed.
Lemma lem8365762 {A B : Type'} (f : A -> B) : (term1147 A B f) = (term1149 A).
Proof. exact (eq_refl (term1147 A B f)). Qed.
Lemma lem8365763 {A B : Type'} : (term1150 A B) = (term1148 A B).
Proof. exact (fun_ext (fun f : A -> B => @lem8365762 A B f)). Qed.
Lemma lem8365764 {A B : Type'} (g : A -> B) : g = g.
Proof. exact (eq_refl g). Qed.
Lemma lem8365765 {A B : Type'} (g : A -> B) : (term1146 A B g) = (term1147 A B g).
Proof. exact (MK_COMB (@lem8365763 A B) (@lem8365764 A B g)). Qed.
Lemma lem8365766 {A : Type'} : (@eq (A -> Prop)) = (@eq (A -> Prop)).
Proof. exact (eq_refl (@eq (A -> Prop))). Qed.
Lemma lem8365767 {A B : Type'} (g : A -> B) : (term1151 A B g) = (term1152 A B g).
Proof. exact (MK_COMB (@lem8365766 A) (@lem8365765 A B g)). Qed.
Lemma lem8365768 {A B : Type'} (g : A -> B) : (term1147 A B g) = (term1149 A).
Proof. exact (eq_refl (term1147 A B g)). Qed.
Lemma lem8365769 {A B : Type'} (g : A -> B) : ((term1146 A B g) = (term1147 A B g)) = ((term1147 A B g) = (term1149 A)).
Proof. exact (MK_COMB (@lem8365767 A B g) (@lem8365768 A B g)). Qed.
Lemma lem8365770 {A B : Type'} (g : A -> B) : (term1147 A B g) = (term1149 A).
Proof. exact (EQ_MP (@lem8365769 A B g) (@lem8365761 A B g)). Qed.
Lemma lem8365771 {A : Type'} (x : A) : x = x.
Proof. exact (eq_refl x). Qed.
Lemma lem8365772 {A B : Type'} (g : A -> B) (x : A) : (term1153 A B g x) = (term1154 A x).
Proof. exact (MK_COMB (@lem8365770 A B g) (@lem8365771 A x)). Qed.
Lemma lem8365774 {A B : Type'} (f : A -> B) (y : A) : (term1144 A B f y) = (f y).
Proof. exact (EQ_MP (@lem1810 A B f y) (@lem1809 A B f y)). Qed.
Lemma lem8365775 {A : Type'} (f : A -> Prop) (y : A) : (term1155 A f y) = (f y).
Proof. exact (@lem8365774 A Prop f y). Qed.
Lemma lem8365776 {A : Type'} (x : A) : (term1156 A x) = (term1154 A x).
Proof. exact (@lem8365775 A (term1149 A) x). Qed.
Lemma lem8365777 {A : Type'} (x : A) : (term1154 A x) = False.
Proof. exact (eq_refl (term1154 A x)). Qed.
Lemma lem8365778 {A : Type'} : (term1157 A) = (term1149 A).
Proof. exact (fun_ext (fun x : A => @lem8365777 A x)). Qed.
Lemma lem8365779 {A : Type'} (x : A) : x = x.
Proof. exact (eq_refl x). Qed.
Lemma lem8365780 {A : Type'} (x : A) : (term1156 A x) = (term1154 A x).
Proof. exact (MK_COMB (@lem8365778 A) (@lem8365779 A x)). Qed.
Lemma lem8365781 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8365782 {A : Type'} (x : A) : (term1158 A x) = (term1159 A x).
Proof. exact (MK_COMB (@lem8365781) (@lem8365780 A x)). Qed.
Lemma lem8365783 {A : Type'} (x : A) : (term1154 A x) = False.
Proof. exact (eq_refl (term1154 A x)). Qed.
Lemma lem8365784 {A : Type'} (x : A) : ((term1156 A x) = (term1154 A x)) = ((term1154 A x) = False).
Proof. exact (MK_COMB (@lem8365782 A x) (@lem8365783 A x)). Qed.
Lemma lem8365785 {A : Type'} (x : A) : (term1154 A x) = False.
Proof. exact (EQ_MP (@lem8365784 A x) (@lem8365776 A x)). Qed.
Lemma lem8365786 {A B : Type'} (g : A -> B) (x : A) : (term1153 A B g x) = False.
Proof. exact (TRANS (@lem8365772 A B g x) (@lem8365785 A x)). Qed.
Lemma lem8365787 {A B : Type'} (f : A -> B) (g : A -> B) (x : A) : ((term1153 A B f x) = (term1153 A B g x)) = (False = False).
Proof. exact (MK_COMB (@lem8365757 A B f x) (@lem8365786 A B g x)). Qed.
Lemma lem8365789 (t : Prop) : (False = t) = (~ t).
Proof. exact (proj1 (@lem1857 t)). Qed.
Lemma lem8365790 : (False = False) = (~ False).
Proof. exact (@lem8365789 False). Qed.
Lemma lem8365792 : (~ False) = True.
Proof. exact (proj2 (@lem1504)). Qed.
Lemma lem8365793 : (False = False) = True.
Proof. exact (TRANS (@lem8365790) (@lem8365792)). Qed.
Lemma lem8365794 {A B : Type'} (f : A -> B) (g : A -> B) (x : A) : ((term1153 A B f x) = (term1153 A B g x)) = True.
Proof. exact (TRANS (@lem8365787 A B f g x) (@lem8365793)). Qed.
Lemma lem8365795 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8365796 {A B : Type'} (f : A -> B) (g : A -> B) (x : A) : (term1161 A B f g x) = (and True).
Proof. exact (MK_COMB (@lem8365795) (@lem8365794 A B f g x)). Qed.
Lemma lem8365802 {A B : Type'} (f : A -> B) (y : A) : (term1144 A B f y) = (f y).
Proof. exact (EQ_MP (@lem1810 A B f y) (@lem1809 A B f y)). Qed.
Lemma lem8365803 {A B : Type'} (f : type548 A B) (y : A -> B) : (term1162 A B f y) = (f y).
Proof. exact (@lem8365802 (A -> B) (A -> A) f y). Qed.
Lemma lem8365804 {A B : Type'} (anything : A -> A) (f : A -> B) : (term1163 A B anything f) = (term1164 A B anything f).
Proof. exact (@lem8365803 A B (term1165 A B anything) f). Qed.
Lemma lem8365805 {A B : Type'} (f : A -> B) (anything : A -> A) : (term1164 A B anything f) = anything.
Proof. exact (eq_refl (term1164 A B anything f)). Qed.
Lemma lem8365806 {A B : Type'} (anything : A -> A) : (term1166 A B anything) = (term1165 A B anything).
Proof. exact (fun_ext (fun f : A -> B => @lem8365805 A B f anything)). Qed.
Lemma lem8365807 {A B : Type'} (f : A -> B) : f = f.
Proof. exact (eq_refl f). Qed.
Lemma lem8365808 {A B : Type'} (anything : A -> A) (f : A -> B) : (term1163 A B anything f) = (term1164 A B anything f).
Proof. exact (MK_COMB (@lem8365806 A B anything) (@lem8365807 A B f)). Qed.
Lemma lem8365809 {A : Type'} : (@eq (A -> A)) = (@eq (A -> A)).
Proof. exact (eq_refl (@eq (A -> A))). Qed.
Lemma lem8365810 {A B : Type'} (anything : A -> A) (f : A -> B) : (term1167 A B anything f) = (term1168 A B anything f).
Proof. exact (MK_COMB (@lem8365809 A) (@lem8365808 A B anything f)). Qed.
Lemma lem8365811 {A B : Type'} (f : A -> B) (anything : A -> A) : (term1164 A B anything f) = anything.
Proof. exact (eq_refl (term1164 A B anything f)). Qed.
Lemma lem8365812 {A B : Type'} (f : A -> B) (anything : A -> A) : ((term1163 A B anything f) = (term1164 A B anything f)) = ((term1164 A B anything f) = anything).
Proof. exact (MK_COMB (@lem8365810 A B anything f) (@lem8365811 A B f anything)). Qed.
Lemma lem8365813 {A B : Type'} (f : A -> B) (anything : A -> A) : (term1164 A B anything f) = anything.
Proof. exact (EQ_MP (@lem8365812 A B f anything) (@lem8365804 A B anything f)). Qed.
Lemma lem8365814 {A : Type'} (x : A) : x = x.
Proof. exact (eq_refl x). Qed.
Lemma lem8365815 {A B : Type'} (f : A -> B) (anything : A -> A) (x : A) : (term1169 A B anything f x) = (anything x).
Proof. exact (MK_COMB (@lem8365813 A B f anything) (@lem8365814 A x)). Qed.
Lemma lem8365816 {A : Type'} : (@eq A) = (@eq A).
Proof. exact (eq_refl (@eq A)). Qed.
Lemma lem8365817 {A B : Type'} (f : A -> B) (anything : A -> A) (x : A) : (term1170 A B anything f x) = (term1171 A anything x).
Proof. exact (MK_COMB (@lem8365816 A) (@lem8365815 A B f anything x)). Qed.
Lemma lem8365819 {A B : Type'} (f : A -> B) (y : A) : (term1144 A B f y) = (f y).
Proof. exact (EQ_MP (@lem1810 A B f y) (@lem1809 A B f y)). Qed.
Lemma lem8365820 {A B : Type'} (f : type548 A B) (y : A -> B) : (term1162 A B f y) = (f y).
Proof. exact (@lem8365819 (A -> B) (A -> A) f y). Qed.
Lemma lem8365821 {A B : Type'} (anything : A -> A) (g : A -> B) : (term1163 A B anything g) = (term1164 A B anything g).
Proof. exact (@lem8365820 A B (term1165 A B anything) g). Qed.
Lemma lem8365822 {A B : Type'} (f : A -> B) (anything : A -> A) : (term1164 A B anything f) = anything.
Proof. exact (eq_refl (term1164 A B anything f)). Qed.
Lemma lem8365823 {A B : Type'} (anything : A -> A) : (term1166 A B anything) = (term1165 A B anything).
Proof. exact (fun_ext (fun f : A -> B => @lem8365822 A B f anything)). Qed.
Lemma lem8365824 {A B : Type'} (g : A -> B) : g = g.
Proof. exact (eq_refl g). Qed.
Lemma lem8365825 {A B : Type'} (anything : A -> A) (g : A -> B) : (term1163 A B anything g) = (term1164 A B anything g).
Proof. exact (MK_COMB (@lem8365823 A B anything) (@lem8365824 A B g)). Qed.
Lemma lem8365826 {A : Type'} : (@eq (A -> A)) = (@eq (A -> A)).
Proof. exact (eq_refl (@eq (A -> A))). Qed.
Lemma lem8365827 {A B : Type'} (anything : A -> A) (g : A -> B) : (term1167 A B anything g) = (term1168 A B anything g).
Proof. exact (MK_COMB (@lem8365826 A) (@lem8365825 A B anything g)). Qed.
Lemma lem8365828 {A B : Type'} (g : A -> B) (anything : A -> A) : (term1164 A B anything g) = anything.
Proof. exact (eq_refl (term1164 A B anything g)). Qed.
Lemma lem8365829 {A B : Type'} (g : A -> B) (anything : A -> A) : ((term1163 A B anything g) = (term1164 A B anything g)) = ((term1164 A B anything g) = anything).
Proof. exact (MK_COMB (@lem8365827 A B anything g) (@lem8365828 A B g anything)). Qed.
Lemma lem8365830 {A B : Type'} (g : A -> B) (anything : A -> A) : (term1164 A B anything g) = anything.
Proof. exact (EQ_MP (@lem8365829 A B g anything) (@lem8365821 A B anything g)). Qed.
Lemma lem8365831 {A : Type'} (x : A) : x = x.
Proof. exact (eq_refl x). Qed.
Lemma lem8365832 {A B : Type'} (g : A -> B) (anything : A -> A) (x : A) : (term1169 A B anything g x) = (anything x).
Proof. exact (MK_COMB (@lem8365830 A B g anything) (@lem8365831 A x)). Qed.
Lemma lem8365833 {A B : Type'} (f : A -> B) (g : A -> B) (anything : A -> A) (x : A) : ((term1169 A B anything f x) = (term1169 A B anything g x)) = ((anything x) = (anything x)).
Proof. exact (MK_COMB (@lem8365817 A B f anything x) (@lem8365832 A B g anything x)). Qed.
Lemma lem8365835 {A : Type'} (x : A) : (x = x) = True.
Proof. exact (EQ_MP (@lem1863 A x) (@lem1862 A x)). Qed.
Lemma lem8365836 {A : Type'} (x : A) : (x = x) = True.
Proof. exact (@lem8365835 A x). Qed.
Lemma lem8365837 {A : Type'} (anything : A -> A) (x : A) : ((anything x) = (anything x)) = True.
Proof. exact (@lem8365836 A (anything x)). Qed.
Lemma lem8365838 {A B : Type'} (f : A -> B) (anything : A -> A) (g : A -> B) (x : A) : ((term1169 A B anything f x) = (term1169 A B anything g x)) = True.
Proof. exact (TRANS (@lem8365833 A B f g anything x) (@lem8365837 A anything x)). Qed.
Lemma lem8365839 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8365840 {A B : Type'} (f : A -> B) (anything : A -> A) (g : A -> B) (x : A) : (term1172 A B f anything g x) = (and True).
Proof. exact (MK_COMB (@lem8365839) (@lem8365838 A B f anything g x)). Qed.
Lemma lem8365844 {A B : Type'} (f : A -> B) (y : A) : (term1144 A B f y) = (f y).
Proof. exact (EQ_MP (@lem1810 A B f y) (@lem1809 A B f y)). Qed.
Lemma lem8365845 {A B : Type'} (f : type549 A B) (y : A -> B) : (term1173 A B f y) = (f y).
Proof. exact (@lem8365844 (A -> B) (A -> B) f y). Qed.
Lemma lem8365846 {A B : Type'} (f : A -> B) : (term1174 A B f) = (term1175 A B f).
Proof. exact (@lem8365845 A B (term1176 A B) f). Qed.
Lemma lem8365847 {A B : Type'} (f : A -> B) : (term1175 A B f) = (term1177 A B).
Proof. exact (eq_refl (term1175 A B f)). Qed.
Lemma lem8365848 {A B : Type'} : (term1178 A B) = (term1176 A B).
Proof. exact (fun_ext (fun f : A -> B => @lem8365847 A B f)). Qed.
Lemma lem8365849 {A B : Type'} (f : A -> B) : f = f.
Proof. exact (eq_refl f). Qed.
Lemma lem8365850 {A B : Type'} (f : A -> B) : (term1174 A B f) = (term1175 A B f).
Proof. exact (MK_COMB (@lem8365848 A B) (@lem8365849 A B f)). Qed.
Lemma lem8365851 {A B : Type'} : (@eq (A -> B)) = (@eq (A -> B)).
Proof. exact (eq_refl (@eq (A -> B))). Qed.
Lemma lem8365852 {A B : Type'} (f : A -> B) : (term1179 A B f) = (term1180 A B f).
Proof. exact (MK_COMB (@lem8365851 A B) (@lem8365850 A B f)). Qed.
Lemma lem8365853 {A B : Type'} (f : A -> B) : (term1175 A B f) = (term1177 A B).
Proof. exact (eq_refl (term1175 A B f)). Qed.
Lemma lem8365854 {A B : Type'} (f : A -> B) : ((term1174 A B f) = (term1175 A B f)) = ((term1175 A B f) = (term1177 A B)).
Proof. exact (MK_COMB (@lem8365852 A B f) (@lem8365853 A B f)). Qed.
Lemma lem8365855 {A B : Type'} (f : A -> B) : (term1175 A B f) = (term1177 A B).
Proof. exact (EQ_MP (@lem8365854 A B f) (@lem8365846 A B f)). Qed.
Lemma lem8365856 {A : Type'} (x : A) : x = x.
Proof. exact (eq_refl x). Qed.
Lemma lem8365857 {A B : Type'} (f : A -> B) (x : A) : (term1181 A B f x) = (term1182 A B x).
Proof. exact (MK_COMB (@lem8365855 A B f) (@lem8365856 A x)). Qed.
Lemma lem8365859 {A B : Type'} (f : A -> B) (y : A) : (term1144 A B f y) = (f y).
Proof. exact (EQ_MP (@lem1810 A B f y) (@lem1809 A B f y)). Qed.
Lemma lem8365860 {A B : Type'} (f : A -> B) (y : A) : (term1144 A B f y) = (f y).
Proof. exact (@lem8365859 A B f y). Qed.
Lemma lem8365861 {A B : Type'} (x : A) : (term1183 A B x) = (term1182 A B x).
Proof. exact (@lem8365860 A B (term1177 A B) x). Qed.
Lemma lem8365862 {A B : Type'} (x : A) : (term1182 A B x) = (term994 B).
Proof. exact (eq_refl (term1182 A B x)). Qed.
Lemma lem8365863 {A B : Type'} : (term1184 A B) = (term1177 A B).
Proof. exact (fun_ext (fun x : A => @lem8365862 A B x)). Qed.
Lemma lem8365864 {A : Type'} (x : A) : x = x.
Proof. exact (eq_refl x). Qed.
Lemma lem8365865 {A B : Type'} (x : A) : (term1183 A B x) = (term1182 A B x).
Proof. exact (MK_COMB (@lem8365863 A B) (@lem8365864 A x)). Qed.
Lemma lem8365866 {B : Type'} : (@eq B) = (@eq B).
Proof. exact (eq_refl (@eq B)). Qed.
Lemma lem8365867 {A B : Type'} (x : A) : (term1185 A B x) = (term1186 A B x).
Proof. exact (MK_COMB (@lem8365866 B) (@lem8365865 A B x)). Qed.
Lemma lem8365868 {A B : Type'} (x : A) : (term1182 A B x) = (term994 B).
Proof. exact (eq_refl (term1182 A B x)). Qed.
Lemma lem8365869 {A B : Type'} (x : A) : ((term1183 A B x) = (term1182 A B x)) = ((term1182 A B x) = (term994 B)).
Proof. exact (MK_COMB (@lem8365867 A B x) (@lem8365868 A B x)). Qed.
Lemma lem8365870 {A B : Type'} (x : A) : (term1182 A B x) = (term994 B).
Proof. exact (EQ_MP (@lem8365869 A B x) (@lem8365861 A B x)). Qed.
Lemma lem8365871 {A B : Type'} (f : A -> B) (x : A) : (term1181 A B f x) = (term994 B).
Proof. exact (TRANS (@lem8365857 A B f x) (@lem8365870 A B x)). Qed.
Lemma lem8365872 {B : Type'} : (@eq B) = (@eq B).
Proof. exact (eq_refl (@eq B)). Qed.
Lemma lem8365873 {A B : Type'} (f : A -> B) (x : A) : (term1187 A B f x) = (term996 B).
Proof. exact (MK_COMB (@lem8365872 B) (@lem8365871 A B f x)). Qed.
Lemma lem8365875 {A B : Type'} (f : A -> B) (y : A) : (term1144 A B f y) = (f y).
Proof. exact (EQ_MP (@lem1810 A B f y) (@lem1809 A B f y)). Qed.
Lemma lem8365876 {A B : Type'} (f : type549 A B) (y : A -> B) : (term1173 A B f y) = (f y).
Proof. exact (@lem8365875 (A -> B) (A -> B) f y). Qed.
Lemma lem8365877 {A B : Type'} (g : A -> B) : (term1174 A B g) = (term1175 A B g).
Proof. exact (@lem8365876 A B (term1176 A B) g). Qed.
Lemma lem8365878 {A B : Type'} (f : A -> B) : (term1175 A B f) = (term1177 A B).
Proof. exact (eq_refl (term1175 A B f)). Qed.
Lemma lem8365879 {A B : Type'} : (term1178 A B) = (term1176 A B).
Proof. exact (fun_ext (fun f : A -> B => @lem8365878 A B f)). Qed.
Lemma lem8365880 {A B : Type'} (g : A -> B) : g = g.
Proof. exact (eq_refl g). Qed.
Lemma lem8365881 {A B : Type'} (g : A -> B) : (term1174 A B g) = (term1175 A B g).
Proof. exact (MK_COMB (@lem8365879 A B) (@lem8365880 A B g)). Qed.
Lemma lem8365882 {A B : Type'} : (@eq (A -> B)) = (@eq (A -> B)).
Proof. exact (eq_refl (@eq (A -> B))). Qed.
Lemma lem8365883 {A B : Type'} (g : A -> B) : (term1179 A B g) = (term1180 A B g).
Proof. exact (MK_COMB (@lem8365882 A B) (@lem8365881 A B g)). Qed.
Lemma lem8365884 {A B : Type'} (g : A -> B) : (term1175 A B g) = (term1177 A B).
Proof. exact (eq_refl (term1175 A B g)). Qed.
Lemma lem8365885 {A B : Type'} (g : A -> B) : ((term1174 A B g) = (term1175 A B g)) = ((term1175 A B g) = (term1177 A B)).
Proof. exact (MK_COMB (@lem8365883 A B g) (@lem8365884 A B g)). Qed.
Lemma lem8365886 {A B : Type'} (g : A -> B) : (term1175 A B g) = (term1177 A B).
Proof. exact (EQ_MP (@lem8365885 A B g) (@lem8365877 A B g)). Qed.
Lemma lem8365887 {A : Type'} (x : A) : x = x.
Proof. exact (eq_refl x). Qed.
Lemma lem8365888 {A B : Type'} (g : A -> B) (x : A) : (term1181 A B g x) = (term1182 A B x).
Proof. exact (MK_COMB (@lem8365886 A B g) (@lem8365887 A x)). Qed.
Lemma lem8365890 {A B : Type'} (f : A -> B) (y : A) : (term1144 A B f y) = (f y).
Proof. exact (EQ_MP (@lem1810 A B f y) (@lem1809 A B f y)). Qed.
Lemma lem8365891 {A B : Type'} (f : A -> B) (y : A) : (term1144 A B f y) = (f y).
Proof. exact (@lem8365890 A B f y). Qed.
Lemma lem8365892 {A B : Type'} (x : A) : (term1183 A B x) = (term1182 A B x).
Proof. exact (@lem8365891 A B (term1177 A B) x). Qed.
Lemma lem8365893 {A B : Type'} (x : A) : (term1182 A B x) = (term994 B).
Proof. exact (eq_refl (term1182 A B x)). Qed.
Lemma lem8365894 {A B : Type'} : (term1184 A B) = (term1177 A B).
Proof. exact (fun_ext (fun x : A => @lem8365893 A B x)). Qed.
Lemma lem8365895 {A : Type'} (x : A) : x = x.
Proof. exact (eq_refl x). Qed.
Lemma lem8365896 {A B : Type'} (x : A) : (term1183 A B x) = (term1182 A B x).
Proof. exact (MK_COMB (@lem8365894 A B) (@lem8365895 A x)). Qed.
Lemma lem8365897 {B : Type'} : (@eq B) = (@eq B).
Proof. exact (eq_refl (@eq B)). Qed.
Lemma lem8365898 {A B : Type'} (x : A) : (term1185 A B x) = (term1186 A B x).
Proof. exact (MK_COMB (@lem8365897 B) (@lem8365896 A B x)). Qed.
Lemma lem8365899 {A B : Type'} (x : A) : (term1182 A B x) = (term994 B).
Proof. exact (eq_refl (term1182 A B x)). Qed.
Lemma lem8365900 {A B : Type'} (x : A) : ((term1183 A B x) = (term1182 A B x)) = ((term1182 A B x) = (term994 B)).
Proof. exact (MK_COMB (@lem8365898 A B x) (@lem8365899 A B x)). Qed.
Lemma lem8365901 {A B : Type'} (x : A) : (term1182 A B x) = (term994 B).
Proof. exact (EQ_MP (@lem8365900 A B x) (@lem8365892 A B x)). Qed.
Lemma lem8365902 {A B : Type'} (g : A -> B) (x : A) : (term1181 A B g x) = (term994 B).
Proof. exact (TRANS (@lem8365888 A B g x) (@lem8365901 A B x)). Qed.
Lemma lem8365903 {A B : Type'} (f : A -> B) (g : A -> B) (x : A) : ((term1181 A B f x) = (term1181 A B g x)) = ((term994 B) = (term994 B)).
Proof. exact (MK_COMB (@lem8365873 A B f x) (@lem8365902 A B g x)). Qed.
Lemma lem8365905 {A : Type'} (x : A) : (x = x) = True.
Proof. exact (EQ_MP (@lem1863 A x) (@lem1862 A x)). Qed.
Lemma lem8365906 {B : Type'} (x : B) : (x = x) = True.
Proof. exact (@lem8365905 B x). Qed.
Lemma lem8365907 {B : Type'} : ((term994 B) = (term994 B)) = True.
Proof. exact (@lem8365906 B (term994 B)). Qed.
Lemma lem8365908 {A B : Type'} (f : A -> B) (g : A -> B) (x : A) : ((term1181 A B f x) = (term1181 A B g x)) = True.
Proof. exact (TRANS (@lem8365903 A B f g x) (@lem8365907 B)). Qed.
Lemma lem8365909 {A B : Type'} (anything : A -> A) (f : A -> B) (g : A -> B) (x : A) : (term1188 A B anything f g x) = (True /\ True).
Proof. exact (MK_COMB (@lem8365840 A B f anything g x) (@lem8365908 A B f g x)). Qed.
Lemma lem8365911 (t : Prop) : (True /\ t) = t.
Proof. exact (proj1 (@lem1842 t)). Qed.
Lemma lem8365912 : (True /\ True) = True.
Proof. exact (@lem8365911 True). Qed.
Lemma lem8365913 {A B : Type'} (anything : A -> A) (f : A -> B) (g : A -> B) (x : A) : (term1188 A B anything f g x) = True.
Proof. exact (TRANS (@lem8365909 A B anything f g x) (@lem8365912)). Qed.
Lemma lem8365914 {A B : Type'} (anything : A -> A) (f : A -> B) (g : A -> B) (x : A) : (term1189 A B anything f g x) = (True /\ True).
Proof. exact (MK_COMB (@lem8365796 A B f g x) (@lem8365913 A B anything f g x)). Qed.
Lemma lem8365916 (t : Prop) : (True /\ t) = t.
Proof. exact (proj1 (@lem1842 t)). Qed.
Lemma lem8365917 : (True /\ True) = True.
Proof. exact (@lem8365916 True). Qed.
Lemma lem8365918 {A B : Type'} (anything : A -> A) (f : A -> B) (g : A -> B) (x : A) : (term1189 A B anything f g x) = True.
Proof. exact (TRANS (@lem8365914 A B anything f g x) (@lem8365917)). Qed.
Lemma lem8365919 {A B : Type'} (lt2 : type1402 A) (x : A) (f : A -> B) (g : A -> B) : (term1190 A B lt2 x f g) = (term1190 A B lt2 x f g).
Proof. exact (eq_refl (term1190 A B lt2 x f g)). Qed.
Lemma lem8365920 {A B : Type'} (anything : A -> A) (lt2 : type1402 A) (x : A) (f : A -> B) (g : A -> B) : (term1191 A B lt2 anything f g x) = (term1192 A B lt2 x f g).
Proof. exact (MK_COMB (@lem8365919 A B lt2 x f g) (@lem8365918 A B anything f g x)). Qed.
Lemma lem8365922 (t : Prop) : (t -> True) = True.
Proof. exact (proj1 (@lem1821 t)). Qed.
Lemma lem8365923 {A B : Type'} (lt2 : type1402 A) (x : A) (f : A -> B) (g : A -> B) : (term1192 A B lt2 x f g) = True.
Proof. exact (@lem8365922 (term1193 A B lt2 x f g)). Qed.
Lemma lem8365924 {A B : Type'} (lt2 : type1402 A) (anything : A -> A) (f : A -> B) (g : A -> B) (x : A) : (term1191 A B lt2 anything f g x) = True.
Proof. exact (TRANS (@lem8365920 A B anything lt2 x f g) (@lem8365923 A B lt2 x f g)). Qed.
Lemma lem8365925 {A B : Type'} (lt2 : type1402 A) (anything : A -> A) (f : A -> B) (g : A -> B) : (term1194 A B lt2 anything f g) = (term1195 A).
Proof. exact (fun_ext (fun x : A => @lem8365924 A B lt2 anything f g x)). Qed.
Lemma lem8365926 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem8365927 {A B : Type'} (lt2 : type1402 A) (anything : A -> A) (f : A -> B) (g : A -> B) : (term1196 A B lt2 anything f g) = (term1197 A).
Proof. exact (MK_COMB (@lem8365926 A) (@lem8365925 A B lt2 anything f g)). Qed.
Lemma lem8365929 {A : Type'} (t : Prop) : (term1198 A t) = t.
Proof. exact (EQ_MP (@lem1816 A t) (@lem1815 A t)). Qed.
Lemma lem8365930 {A : Type'} (t : Prop) : (term1198 A t) = t.
Proof. exact (@lem8365929 A t). Qed.
Lemma lem8365931 {A : Type'} : (term1197 A) = True.
Proof. exact (@lem8365930 A True). Qed.
Lemma lem8365932 {A B : Type'} (lt2 : type1402 A) (anything : A -> A) (f : A -> B) (g : A -> B) : (term1196 A B lt2 anything f g) = True.
Proof. exact (TRANS (@lem8365927 A B lt2 anything f g) (@lem8365931 A)). Qed.
Lemma lem8365933 {A B : Type'} (lt2 : type1402 A) (anything : A -> A) (f : A -> B) : (term1199 A B lt2 anything f) = (term1200 A B).
Proof. exact (fun_ext (fun g : A -> B => @lem8365932 A B lt2 anything f g)). Qed.
Lemma lem8365934 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem8365935 {A B : Type'} (lt2 : type1402 A) (anything : A -> A) (f : A -> B) : (term1201 A B lt2 anything f) = (term1202 A B).
Proof. exact (MK_COMB (@lem8365934 A B) (@lem8365933 A B lt2 anything f)). Qed.
Lemma lem8365937 {A : Type'} (t : Prop) : (term1198 A t) = t.
Proof. exact (EQ_MP (@lem1816 A t) (@lem1815 A t)). Qed.
Lemma lem8365938 {A B : Type'} (t : Prop) : (term1203 A B t) = t.
Proof. exact (@lem8365937 (A -> B) t). Qed.
Lemma lem8365939 {A B : Type'} : (term1202 A B) = True.
Proof. exact (@lem8365938 A B True). Qed.
Lemma lem8365940 {A B : Type'} (lt2 : type1402 A) (anything : A -> A) (f : A -> B) : (term1201 A B lt2 anything f) = True.
Proof. exact (TRANS (@lem8365935 A B lt2 anything f) (@lem8365939 A B)). Qed.
Lemma lem8365941 {A B : Type'} (lt2 : type1402 A) (anything : A -> A) : (term1204 A B lt2 anything) = (term1200 A B).
Proof. exact (fun_ext (fun f : A -> B => @lem8365940 A B lt2 anything f)). Qed.
Lemma lem8365942 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem8365943 {A B : Type'} (lt2 : type1402 A) (anything : A -> A) : (term1205 A B lt2 anything) = (term1202 A B).
Proof. exact (MK_COMB (@lem8365942 A B) (@lem8365941 A B lt2 anything)). Qed.
Lemma lem8365945 {A : Type'} (t : Prop) : (term1198 A t) = t.
Proof. exact (EQ_MP (@lem1816 A t) (@lem1815 A t)). Qed.
Lemma lem8365946 {A B : Type'} (t : Prop) : (term1203 A B t) = t.
Proof. exact (@lem8365945 (A -> B) t). Qed.
Lemma lem8365947 {A B : Type'} : (term1202 A B) = True.
Proof. exact (@lem8365946 A B True). Qed.
Lemma lem8365948 {A B : Type'} (lt2 : type1402 A) (anything : A -> A) : (term1205 A B lt2 anything) = True.
Proof. exact (TRANS (@lem8365943 A B lt2 anything) (@lem8365947 A B)). Qed.
Lemma lem8365949 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8365950 {A B : Type'} (lt2 : type1402 A) (anything : A -> A) : (term1206 A B lt2 anything) = (and True).
Proof. exact (MK_COMB (@lem8365949) (@lem8365948 A B lt2 anything)). Qed.
Lemma lem8365970 {A B : Type'} (f : A -> B) (y : A) : (term1144 A B f y) = (f y).
Proof. exact (EQ_MP (@lem1810 A B f y) (@lem1809 A B f y)). Qed.
Lemma lem8365971 {A B : Type'} (f : type551 A B) (y : A -> B) : (term1145 A B f y) = (f y).
Proof. exact (@lem8365970 (A -> B) (A -> Prop) f y). Qed.
Lemma lem8365972 {A B : Type'} (f : A -> B) : (term1146 A B f) = (term1147 A B f).
Proof. exact (@lem8365971 A B (term1148 A B) f). Qed.
Lemma lem8365973 {A B : Type'} (f : A -> B) : (term1147 A B f) = (term1149 A).
Proof. exact (eq_refl (term1147 A B f)). Qed.
Lemma lem8365974 {A B : Type'} : (term1150 A B) = (term1148 A B).
Proof. exact (fun_ext (fun f : A -> B => @lem8365973 A B f)). Qed.
Lemma lem8365975 {A B : Type'} (f : A -> B) : f = f.
Proof. exact (eq_refl f). Qed.
Lemma lem8365976 {A B : Type'} (f : A -> B) : (term1146 A B f) = (term1147 A B f).
Proof. exact (MK_COMB (@lem8365974 A B) (@lem8365975 A B f)). Qed.
Lemma lem8365977 {A : Type'} : (@eq (A -> Prop)) = (@eq (A -> Prop)).
Proof. exact (eq_refl (@eq (A -> Prop))). Qed.
Lemma lem8365978 {A B : Type'} (f : A -> B) : (term1151 A B f) = (term1152 A B f).
Proof. exact (MK_COMB (@lem8365977 A) (@lem8365976 A B f)). Qed.
Lemma lem8365979 {A B : Type'} (f : A -> B) : (term1147 A B f) = (term1149 A).
Proof. exact (eq_refl (term1147 A B f)). Qed.
Lemma lem8365980 {A B : Type'} (f : A -> B) : ((term1146 A B f) = (term1147 A B f)) = ((term1147 A B f) = (term1149 A)).
Proof. exact (MK_COMB (@lem8365978 A B f) (@lem8365979 A B f)). Qed.
Lemma lem8365981 {A B : Type'} (f : A -> B) : (term1147 A B f) = (term1149 A).
Proof. exact (EQ_MP (@lem8365980 A B f) (@lem8365972 A B f)). Qed.
Lemma lem8365982 {A : Type'} (x : A) : x = x.
Proof. exact (eq_refl x). Qed.
Lemma lem8365983 {A B : Type'} (f : A -> B) (x : A) : (term1153 A B f x) = (term1154 A x).
Proof. exact (MK_COMB (@lem8365981 A B f) (@lem8365982 A x)). Qed.
Lemma lem8365985 {A B : Type'} (f : A -> B) (y : A) : (term1144 A B f y) = (f y).
Proof. exact (EQ_MP (@lem1810 A B f y) (@lem1809 A B f y)). Qed.
Lemma lem8365986 {A : Type'} (f : A -> Prop) (y : A) : (term1155 A f y) = (f y).
Proof. exact (@lem8365985 A Prop f y). Qed.
Lemma lem8365987 {A : Type'} (x : A) : (term1156 A x) = (term1154 A x).
Proof. exact (@lem8365986 A (term1149 A) x). Qed.
Lemma lem8365988 {A : Type'} (x : A) : (term1154 A x) = False.
Proof. exact (eq_refl (term1154 A x)). Qed.
Lemma lem8365989 {A : Type'} : (term1157 A) = (term1149 A).
Proof. exact (fun_ext (fun x : A => @lem8365988 A x)). Qed.
Lemma lem8365990 {A : Type'} (x : A) : x = x.
Proof. exact (eq_refl x). Qed.
Lemma lem8365991 {A : Type'} (x : A) : (term1156 A x) = (term1154 A x).
Proof. exact (MK_COMB (@lem8365989 A) (@lem8365990 A x)). Qed.
Lemma lem8365992 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8365993 {A : Type'} (x : A) : (term1158 A x) = (term1159 A x).
Proof. exact (MK_COMB (@lem8365992) (@lem8365991 A x)). Qed.
Lemma lem8365994 {A : Type'} (x : A) : (term1154 A x) = False.
Proof. exact (eq_refl (term1154 A x)). Qed.
Lemma lem8365995 {A : Type'} (x : A) : ((term1156 A x) = (term1154 A x)) = ((term1154 A x) = False).
Proof. exact (MK_COMB (@lem8365993 A x) (@lem8365994 A x)). Qed.
Lemma lem8365996 {A : Type'} (x : A) : (term1154 A x) = False.
Proof. exact (EQ_MP (@lem8365995 A x) (@lem8365987 A x)). Qed.
Lemma lem8365997 {A B : Type'} (f : A -> B) (x : A) : (term1153 A B f x) = False.
Proof. exact (TRANS (@lem8365983 A B f x) (@lem8365996 A x)). Qed.
Lemma lem8365998 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8365999 {A B : Type'} (f : A -> B) (x : A) : (term1207 A B f x) = (and False).
Proof. exact (MK_COMB (@lem8365998) (@lem8365997 A B f x)). Qed.
Lemma lem8366001 {A B : Type'} (f : A -> B) (y : A) : (term1144 A B f y) = (f y).
Proof. exact (EQ_MP (@lem1810 A B f y) (@lem1809 A B f y)). Qed.
Lemma lem8366002 {A B : Type'} (f : type548 A B) (y : A -> B) : (term1162 A B f y) = (f y).
Proof. exact (@lem8366001 (A -> B) (A -> A) f y). Qed.
Lemma lem8366003 {A B : Type'} (anything : A -> A) (f : A -> B) : (term1163 A B anything f) = (term1164 A B anything f).
Proof. exact (@lem8366002 A B (term1165 A B anything) f). Qed.
Lemma lem8366004 {A B : Type'} (f : A -> B) (anything : A -> A) : (term1164 A B anything f) = anything.
Proof. exact (eq_refl (term1164 A B anything f)). Qed.
Lemma lem8366005 {A B : Type'} (anything : A -> A) : (term1166 A B anything) = (term1165 A B anything).
Proof. exact (fun_ext (fun f : A -> B => @lem8366004 A B f anything)). Qed.
Lemma lem8366006 {A B : Type'} (f : A -> B) : f = f.
Proof. exact (eq_refl f). Qed.
Lemma lem8366007 {A B : Type'} (anything : A -> A) (f : A -> B) : (term1163 A B anything f) = (term1164 A B anything f).
Proof. exact (MK_COMB (@lem8366005 A B anything) (@lem8366006 A B f)). Qed.
Lemma lem8366008 {A : Type'} : (@eq (A -> A)) = (@eq (A -> A)).
Proof. exact (eq_refl (@eq (A -> A))). Qed.
Lemma lem8366009 {A B : Type'} (anything : A -> A) (f : A -> B) : (term1167 A B anything f) = (term1168 A B anything f).
Proof. exact (MK_COMB (@lem8366008 A) (@lem8366007 A B anything f)). Qed.
Lemma lem8366010 {A B : Type'} (f : A -> B) (anything : A -> A) : (term1164 A B anything f) = anything.
Proof. exact (eq_refl (term1164 A B anything f)). Qed.
Lemma lem8366011 {A B : Type'} (f : A -> B) (anything : A -> A) : ((term1163 A B anything f) = (term1164 A B anything f)) = ((term1164 A B anything f) = anything).
Proof. exact (MK_COMB (@lem8366009 A B anything f) (@lem8366010 A B f anything)). Qed.
Lemma lem8366012 {A B : Type'} (f : A -> B) (anything : A -> A) : (term1164 A B anything f) = anything.
Proof. exact (EQ_MP (@lem8366011 A B f anything) (@lem8366003 A B anything f)). Qed.
Lemma lem8366013 {A : Type'} (x : A) : x = x.
Proof. exact (eq_refl x). Qed.
Lemma lem8366014 {A B : Type'} (f : A -> B) (anything : A -> A) (x : A) : (term1169 A B anything f x) = (anything x).
Proof. exact (MK_COMB (@lem8366012 A B f anything) (@lem8366013 A x)). Qed.
Lemma lem8366015 {A : Type'} (lt2 : type1402 A) (y : A) : (lt2 y) = (lt2 y).
Proof. exact (eq_refl (lt2 y)). Qed.
Lemma lem8366016 {A B : Type'} (f : A -> B) (lt2 : type1402 A) (y : A) (anything : A -> A) (x : A) : (term1208 A B lt2 y anything f x) = (term1209 A lt2 y anything x).
Proof. exact (MK_COMB (@lem8366015 A lt2 y) (@lem8366014 A B f anything x)). Qed.
Lemma lem8366017 {A B : Type'} (f : A -> B) (lt2 : type1402 A) (y : A) (anything : A -> A) (x : A) : (term1210 A B lt2 y anything f x) = (term1211 A lt2 y anything x).
Proof. exact (MK_COMB (@lem8365999 A B f x) (@lem8366016 A B f lt2 y anything x)). Qed.
Lemma lem8366019 (t : Prop) : (False /\ t) = False.
Proof. exact (proj1 (@lem1844 t)). Qed.
Lemma lem8366020 {A : Type'} (lt2 : type1402 A) (y : A) (anything : A -> A) (x : A) : (term1211 A lt2 y anything x) = False.
Proof. exact (@lem8366019 (term1209 A lt2 y anything x)). Qed.
Lemma lem8366021 {A B : Type'} (lt2 : type1402 A) (y : A) (anything : A -> A) (f : A -> B) (x : A) : (term1210 A B lt2 y anything f x) = False.
Proof. exact (TRANS (@lem8366017 A B f lt2 y anything x) (@lem8366020 A lt2 y anything x)). Qed.
Lemma lem8366022 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem8366023 {A B : Type'} (lt2 : type1402 A) (y : A) (anything : A -> A) (f : A -> B) (x : A) : (term1212 A B lt2 y anything f x) = (imp False).
Proof. exact (MK_COMB (@lem8366022) (@lem8366021 A B lt2 y anything f x)). Qed.
Lemma lem8366024 {A : Type'} (lt2 : type1402 A) (y : A) (x : A) : (lt2 y x) = (lt2 y x).
Proof. exact (eq_refl (lt2 y x)). Qed.
Lemma lem8366025 {A B : Type'} (anything : A -> A) (f : A -> B) (lt2 : type1402 A) (y : A) (x : A) : (term1213 A B anything f lt2 y x) = (term1214 A lt2 y x).
Proof. exact (MK_COMB (@lem8366023 A B lt2 y anything f x) (@lem8366024 A lt2 y x)). Qed.
Lemma lem8366027 (t : Prop) : (False -> t) = True.
Proof. exact (proj1 (@lem1822 t)). Qed.
Lemma lem8366028 {A : Type'} (lt2 : type1402 A) (y : A) (x : A) : (term1214 A lt2 y x) = True.
Proof. exact (@lem8366027 (lt2 y x)). Qed.
Lemma lem8366029 {A B : Type'} (anything : A -> A) (f : A -> B) (lt2 : type1402 A) (y : A) (x : A) : (term1213 A B anything f lt2 y x) = True.
Proof. exact (TRANS (@lem8366025 A B anything f lt2 y x) (@lem8366028 A lt2 y x)). Qed.
Lemma lem8366030 {A B : Type'} (anything : A -> A) (f : A -> B) (lt2 : type1402 A) (x : A) : (term1215 A B anything f lt2 x) = (term1195 A).
Proof. exact (fun_ext (fun y : A => @lem8366029 A B anything f lt2 y x)). Qed.
Lemma lem8366031 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem8366032 {A B : Type'} (anything : A -> A) (f : A -> B) (lt2 : type1402 A) (x : A) : (term1216 A B anything f lt2 x) = (term1197 A).
Proof. exact (MK_COMB (@lem8366031 A) (@lem8366030 A B anything f lt2 x)). Qed.
Lemma lem8366034 {A : Type'} (t : Prop) : (term1198 A t) = t.
Proof. exact (EQ_MP (@lem1816 A t) (@lem1815 A t)). Qed.
Lemma lem8366035 {A : Type'} (t : Prop) : (term1198 A t) = t.
Proof. exact (@lem8366034 A t). Qed.
Lemma lem8366036 {A : Type'} : (term1197 A) = True.
Proof. exact (@lem8366035 A True). Qed.
Lemma lem8366037 {A B : Type'} (anything : A -> A) (f : A -> B) (lt2 : type1402 A) (x : A) : (term1216 A B anything f lt2 x) = True.
Proof. exact (TRANS (@lem8366032 A B anything f lt2 x) (@lem8366036 A)). Qed.
Lemma lem8366038 {A B : Type'} (anything : A -> A) (f : A -> B) (lt2 : type1402 A) : (term1217 A B anything f lt2) = (term1195 A).
Proof. exact (fun_ext (fun x : A => @lem8366037 A B anything f lt2 x)). Qed.
Lemma lem8366039 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem8366040 {A B : Type'} (anything : A -> A) (f : A -> B) (lt2 : type1402 A) : (term1218 A B anything f lt2) = (term1197 A).
Proof. exact (MK_COMB (@lem8366039 A) (@lem8366038 A B anything f lt2)). Qed.
Lemma lem8366042 {A : Type'} (t : Prop) : (term1198 A t) = t.
Proof. exact (EQ_MP (@lem1816 A t) (@lem1815 A t)). Qed.
Lemma lem8366043 {A : Type'} (t : Prop) : (term1198 A t) = t.
Proof. exact (@lem8366042 A t). Qed.
Lemma lem8366044 {A : Type'} : (term1197 A) = True.
Proof. exact (@lem8366043 A True). Qed.
Lemma lem8366045 {A B : Type'} (anything : A -> A) (f : A -> B) (lt2 : type1402 A) : (term1218 A B anything f lt2) = True.
Proof. exact (TRANS (@lem8366040 A B anything f lt2) (@lem8366044 A)). Qed.
Lemma lem8366046 {A B : Type'} (anything : A -> A) (lt2 : type1402 A) : (term1219 A B anything lt2) = (term1200 A B).
Proof. exact (fun_ext (fun f : A -> B => @lem8366045 A B anything f lt2)). Qed.
Lemma lem8366047 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem8366048 {A B : Type'} (anything : A -> A) (lt2 : type1402 A) : (term1220 A B anything lt2) = (term1202 A B).
Proof. exact (MK_COMB (@lem8366047 A B) (@lem8366046 A B anything lt2)). Qed.
Lemma lem8366050 {A : Type'} (t : Prop) : (term1198 A t) = t.
Proof. exact (EQ_MP (@lem1816 A t) (@lem1815 A t)). Qed.
Lemma lem8366051 {A B : Type'} (t : Prop) : (term1203 A B t) = t.
Proof. exact (@lem8366050 (A -> B) t). Qed.
Lemma lem8366052 {A B : Type'} : (term1202 A B) = True.
Proof. exact (@lem8366051 A B True). Qed.
Lemma lem8366053 {A B : Type'} (anything : A -> A) (lt2 : type1402 A) : (term1220 A B anything lt2) = True.
Proof. exact (TRANS (@lem8366048 A B anything lt2) (@lem8366052 A B)). Qed.
Lemma lem8366054 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8366055 {A B : Type'} (anything : A -> A) (lt2 : type1402 A) : (term1221 A B anything lt2) = (and True).
Proof. exact (MK_COMB (@lem8366054) (@lem8366053 A B anything lt2)). Qed.
Lemma lem8366067 {A B : Type'} (f : A -> B) (y : A) : (term1144 A B f y) = (f y).
Proof. exact (EQ_MP (@lem1810 A B f y) (@lem1809 A B f y)). Qed.
Lemma lem8366068 {A B : Type'} (f : type551 A B) (y : A -> B) : (term1145 A B f y) = (f y).
Proof. exact (@lem8366067 (A -> B) (A -> Prop) f y). Qed.
Lemma lem8366069 {A B : Type'} (f : A -> B) : (term1146 A B f) = (term1147 A B f).
Proof. exact (@lem8366068 A B (term1148 A B) f). Qed.
Lemma lem8366070 {A B : Type'} (f : A -> B) : (term1147 A B f) = (term1149 A).
Proof. exact (eq_refl (term1147 A B f)). Qed.
Lemma lem8366071 {A B : Type'} : (term1150 A B) = (term1148 A B).
Proof. exact (fun_ext (fun f : A -> B => @lem8366070 A B f)). Qed.
Lemma lem8366072 {A B : Type'} (f : A -> B) : f = f.
Proof. exact (eq_refl f). Qed.
Lemma lem8366073 {A B : Type'} (f : A -> B) : (term1146 A B f) = (term1147 A B f).
Proof. exact (MK_COMB (@lem8366071 A B) (@lem8366072 A B f)). Qed.
Lemma lem8366074 {A : Type'} : (@eq (A -> Prop)) = (@eq (A -> Prop)).
Proof. exact (eq_refl (@eq (A -> Prop))). Qed.
Lemma lem8366075 {A B : Type'} (f : A -> B) : (term1151 A B f) = (term1152 A B f).
Proof. exact (MK_COMB (@lem8366074 A) (@lem8366073 A B f)). Qed.
Lemma lem8366076 {A B : Type'} (f : A -> B) : (term1147 A B f) = (term1149 A).
Proof. exact (eq_refl (term1147 A B f)). Qed.
Lemma lem8366077 {A B : Type'} (f : A -> B) : ((term1146 A B f) = (term1147 A B f)) = ((term1147 A B f) = (term1149 A)).
Proof. exact (MK_COMB (@lem8366075 A B f) (@lem8366076 A B f)). Qed.
Lemma lem8366078 {A B : Type'} (f : A -> B) : (term1147 A B f) = (term1149 A).
Proof. exact (EQ_MP (@lem8366077 A B f) (@lem8366069 A B f)). Qed.
Lemma lem8366079 {A : Type'} (x : A) : x = x.
Proof. exact (eq_refl x). Qed.
Lemma lem8366080 {A B : Type'} (f : A -> B) (x : A) : (term1153 A B f x) = (term1154 A x).
Proof. exact (MK_COMB (@lem8366078 A B f) (@lem8366079 A x)). Qed.
Lemma lem8366082 {A B : Type'} (f : A -> B) (y : A) : (term1144 A B f y) = (f y).
Proof. exact (EQ_MP (@lem1810 A B f y) (@lem1809 A B f y)). Qed.
Lemma lem8366083 {A : Type'} (f : A -> Prop) (y : A) : (term1155 A f y) = (f y).
Proof. exact (@lem8366082 A Prop f y). Qed.
Lemma lem8366084 {A : Type'} (x : A) : (term1156 A x) = (term1154 A x).
Proof. exact (@lem8366083 A (term1149 A) x). Qed.
Lemma lem8366085 {A : Type'} (x : A) : (term1154 A x) = False.
Proof. exact (eq_refl (term1154 A x)). Qed.
Lemma lem8366086 {A : Type'} : (term1157 A) = (term1149 A).
Proof. exact (fun_ext (fun x : A => @lem8366085 A x)). Qed.
Lemma lem8366087 {A : Type'} (x : A) : x = x.
Proof. exact (eq_refl x). Qed.
Lemma lem8366088 {A : Type'} (x : A) : (term1156 A x) = (term1154 A x).
Proof. exact (MK_COMB (@lem8366086 A) (@lem8366087 A x)). Qed.
Lemma lem8366089 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8366090 {A : Type'} (x : A) : (term1158 A x) = (term1159 A x).
Proof. exact (MK_COMB (@lem8366089) (@lem8366088 A x)). Qed.
Lemma lem8366091 {A : Type'} (x : A) : (term1154 A x) = False.
Proof. exact (eq_refl (term1154 A x)). Qed.
Lemma lem8366092 {A : Type'} (x : A) : ((term1156 A x) = (term1154 A x)) = ((term1154 A x) = False).
Proof. exact (MK_COMB (@lem8366090 A x) (@lem8366091 A x)). Qed.
Lemma lem8366093 {A : Type'} (x : A) : (term1154 A x) = False.
Proof. exact (EQ_MP (@lem8366092 A x) (@lem8366084 A x)). Qed.
Lemma lem8366094 {A B : Type'} (f : A -> B) (x : A) : (term1153 A B f x) = False.
Proof. exact (TRANS (@lem8366080 A B f x) (@lem8366093 A x)). Qed.
Lemma lem8366095 {B : Type'} : (@COND B) = (@COND B).
Proof. exact (eq_refl (@COND B)). Qed.
Lemma lem8366096 {A B : Type'} (f : A -> B) (x : A) : (term1222 A B f x) = (@COND B False).
Proof. exact (MK_COMB (@lem8366095 B) (@lem8366094 A B f x)). Qed.
Lemma lem8366098 {A B : Type'} (f : A -> B) (y : A) : (term1144 A B f y) = (f y).
Proof. exact (EQ_MP (@lem1810 A B f y) (@lem1809 A B f y)). Qed.
Lemma lem8366099 {A B : Type'} (f : type548 A B) (y : A -> B) : (term1162 A B f y) = (f y).
Proof. exact (@lem8366098 (A -> B) (A -> A) f y). Qed.
Lemma lem8366100 {A B : Type'} (anything : A -> A) (f : A -> B) : (term1163 A B anything f) = (term1164 A B anything f).
Proof. exact (@lem8366099 A B (term1165 A B anything) f). Qed.
Lemma lem8366101 {A B : Type'} (f : A -> B) (anything : A -> A) : (term1164 A B anything f) = anything.
Proof. exact (eq_refl (term1164 A B anything f)). Qed.
Lemma lem8366102 {A B : Type'} (anything : A -> A) : (term1166 A B anything) = (term1165 A B anything).
Proof. exact (fun_ext (fun f : A -> B => @lem8366101 A B f anything)). Qed.
Lemma lem8366103 {A B : Type'} (f : A -> B) : f = f.
Proof. exact (eq_refl f). Qed.
Lemma lem8366104 {A B : Type'} (anything : A -> A) (f : A -> B) : (term1163 A B anything f) = (term1164 A B anything f).
Proof. exact (MK_COMB (@lem8366102 A B anything) (@lem8366103 A B f)). Qed.
Lemma lem8366105 {A : Type'} : (@eq (A -> A)) = (@eq (A -> A)).
Proof. exact (eq_refl (@eq (A -> A))). Qed.
Lemma lem8366106 {A B : Type'} (anything : A -> A) (f : A -> B) : (term1167 A B anything f) = (term1168 A B anything f).
Proof. exact (MK_COMB (@lem8366105 A) (@lem8366104 A B anything f)). Qed.
Lemma lem8366107 {A B : Type'} (f : A -> B) (anything : A -> A) : (term1164 A B anything f) = anything.
Proof. exact (eq_refl (term1164 A B anything f)). Qed.
Lemma lem8366108 {A B : Type'} (f : A -> B) (anything : A -> A) : ((term1163 A B anything f) = (term1164 A B anything f)) = ((term1164 A B anything f) = anything).
Proof. exact (MK_COMB (@lem8366106 A B anything f) (@lem8366107 A B f anything)). Qed.
Lemma lem8366109 {A B : Type'} (f : A -> B) (anything : A -> A) : (term1164 A B anything f) = anything.
Proof. exact (EQ_MP (@lem8366108 A B f anything) (@lem8366100 A B anything f)). Qed.
Lemma lem8366110 {A : Type'} (x : A) : x = x.
Proof. exact (eq_refl x). Qed.
Lemma lem8366111 {A B : Type'} (f : A -> B) (anything : A -> A) (x : A) : (term1169 A B anything f x) = (anything x).
Proof. exact (MK_COMB (@lem8366109 A B f anything) (@lem8366110 A x)). Qed.
Lemma lem8366112 {A B : Type'} (f : A -> B) : f = f.
Proof. exact (eq_refl f). Qed.
Lemma lem8366113 {A B : Type'} (f : A -> B) (anything : A -> A) (x : A) : (term1223 A B anything f x) = (term1224 A B f anything x).
Proof. exact (MK_COMB (@lem8366112 A B f) (@lem8366111 A B f anything x)). Qed.
Lemma lem8366114 {A B : Type'} (f : A -> B) (anything : A -> A) (x : A) : (term1225 A B anything f x) = (term1226 A B f anything x).
Proof. exact (MK_COMB (@lem8366096 A B f x) (@lem8366113 A B f anything x)). Qed.
Lemma lem8366116 {A B : Type'} (f : A -> B) (y : A) : (term1144 A B f y) = (f y).
Proof. exact (EQ_MP (@lem1810 A B f y) (@lem1809 A B f y)). Qed.
Lemma lem8366117 {A B : Type'} (f : type549 A B) (y : A -> B) : (term1173 A B f y) = (f y).
Proof. exact (@lem8366116 (A -> B) (A -> B) f y). Qed.
Lemma lem8366118 {A B : Type'} (f : A -> B) : (term1174 A B f) = (term1175 A B f).
Proof. exact (@lem8366117 A B (term1176 A B) f). Qed.
Lemma lem8366119 {A B : Type'} (f : A -> B) : (term1175 A B f) = (term1177 A B).
Proof. exact (eq_refl (term1175 A B f)). Qed.
Lemma lem8366120 {A B : Type'} : (term1178 A B) = (term1176 A B).
Proof. exact (fun_ext (fun f : A -> B => @lem8366119 A B f)). Qed.
Lemma lem8366121 {A B : Type'} (f : A -> B) : f = f.
Proof. exact (eq_refl f). Qed.
Lemma lem8366122 {A B : Type'} (f : A -> B) : (term1174 A B f) = (term1175 A B f).
Proof. exact (MK_COMB (@lem8366120 A B) (@lem8366121 A B f)). Qed.
Lemma lem8366123 {A B : Type'} : (@eq (A -> B)) = (@eq (A -> B)).
Proof. exact (eq_refl (@eq (A -> B))). Qed.
Lemma lem8366124 {A B : Type'} (f : A -> B) : (term1179 A B f) = (term1180 A B f).
Proof. exact (MK_COMB (@lem8366123 A B) (@lem8366122 A B f)). Qed.
Lemma lem8366125 {A B : Type'} (f : A -> B) : (term1175 A B f) = (term1177 A B).
Proof. exact (eq_refl (term1175 A B f)). Qed.
Lemma lem8366126 {A B : Type'} (f : A -> B) : ((term1174 A B f) = (term1175 A B f)) = ((term1175 A B f) = (term1177 A B)).
Proof. exact (MK_COMB (@lem8366124 A B f) (@lem8366125 A B f)). Qed.
Lemma lem8366127 {A B : Type'} (f : A -> B) : (term1175 A B f) = (term1177 A B).
Proof. exact (EQ_MP (@lem8366126 A B f) (@lem8366118 A B f)). Qed.
Lemma lem8366128 {A : Type'} (x : A) : x = x.
Proof. exact (eq_refl x). Qed.
Lemma lem8366129 {A B : Type'} (f : A -> B) (x : A) : (term1181 A B f x) = (term1182 A B x).
Proof. exact (MK_COMB (@lem8366127 A B f) (@lem8366128 A x)). Qed.
Lemma lem8366131 {A B : Type'} (f : A -> B) (y : A) : (term1144 A B f y) = (f y).
Proof. exact (EQ_MP (@lem1810 A B f y) (@lem1809 A B f y)). Qed.
Lemma lem8366132 {A B : Type'} (f : A -> B) (y : A) : (term1144 A B f y) = (f y).
Proof. exact (@lem8366131 A B f y). Qed.
Lemma lem8366133 {A B : Type'} (x : A) : (term1183 A B x) = (term1182 A B x).
Proof. exact (@lem8366132 A B (term1177 A B) x). Qed.
Lemma lem8366134 {A B : Type'} (x : A) : (term1182 A B x) = (term994 B).
Proof. exact (eq_refl (term1182 A B x)). Qed.
Lemma lem8366135 {A B : Type'} : (term1184 A B) = (term1177 A B).
Proof. exact (fun_ext (fun x : A => @lem8366134 A B x)). Qed.
Lemma lem8366136 {A : Type'} (x : A) : x = x.
Proof. exact (eq_refl x). Qed.
Lemma lem8366137 {A B : Type'} (x : A) : (term1183 A B x) = (term1182 A B x).
Proof. exact (MK_COMB (@lem8366135 A B) (@lem8366136 A x)). Qed.
Lemma lem8366138 {B : Type'} : (@eq B) = (@eq B).
Proof. exact (eq_refl (@eq B)). Qed.
Lemma lem8366139 {A B : Type'} (x : A) : (term1185 A B x) = (term1186 A B x).
Proof. exact (MK_COMB (@lem8366138 B) (@lem8366137 A B x)). Qed.
Lemma lem8366140 {A B : Type'} (x : A) : (term1182 A B x) = (term994 B).
Proof. exact (eq_refl (term1182 A B x)). Qed.
Lemma lem8366141 {A B : Type'} (x : A) : ((term1183 A B x) = (term1182 A B x)) = ((term1182 A B x) = (term994 B)).
Proof. exact (MK_COMB (@lem8366139 A B x) (@lem8366140 A B x)). Qed.
Lemma lem8366142 {A B : Type'} (x : A) : (term1182 A B x) = (term994 B).
Proof. exact (EQ_MP (@lem8366141 A B x) (@lem8366133 A B x)). Qed.
Lemma lem8366143 {A B : Type'} (f : A -> B) (x : A) : (term1181 A B f x) = (term994 B).
Proof. exact (TRANS (@lem8366129 A B f x) (@lem8366142 A B x)). Qed.
Lemma lem8366144 {A B : Type'} (f : A -> B) (anything : A -> A) (x : A) : (term1227 A B anything f x) = (term1228 A B f anything x).
Proof. exact (MK_COMB (@lem8366114 A B f anything x) (@lem8366143 A B f x)). Qed.
Lemma lem8366146 {A : Type'} (t1 : A) (t2 : A) : (@COND A False t1 t2) = t2.
Proof. exact (proj2 (@lem12653 A t1 t2)). Qed.
Lemma lem8366147 {B : Type'} (t1 : B) (t2 : B) : (@COND B False t1 t2) = t2.
Proof. exact (@lem8366146 B t1 t2). Qed.
Lemma lem8366148 {A B : Type'} (f : A -> B) (anything : A -> A) (x : A) : (term1228 A B f anything x) = (term994 B).
Proof. exact (@lem8366147 B (term1224 A B f anything x) (term994 B)). Qed.
Lemma lem8366149 {A B : Type'} (anything : A -> A) (f : A -> B) (x : A) : (term1227 A B anything f x) = (term994 B).
Proof. exact (TRANS (@lem8366144 A B f anything x) (@lem8366148 A B f anything x)). Qed.
Lemma lem8366150 {B : Type'} : (term996 B) = (term996 B).
Proof. exact (eq_refl (term996 B)). Qed.
Lemma lem8366151 {A B : Type'} (anything : A -> A) (f : A -> B) (x : A) : ((term994 B) = (term1227 A B anything f x)) = ((term994 B) = (term994 B)).
Proof. exact (MK_COMB (@lem8366150 B) (@lem8366149 A B anything f x)). Qed.
Lemma lem8366153 {A : Type'} (x : A) : (x = x) = True.
Proof. exact (EQ_MP (@lem1863 A x) (@lem1862 A x)). Qed.
Lemma lem8366154 {B : Type'} (x : B) : (x = x) = True.
Proof. exact (@lem8366153 B x). Qed.
Lemma lem8366155 {B : Type'} : ((term994 B) = (term994 B)) = True.
Proof. exact (@lem8366154 B (term994 B)). Qed.
Lemma lem8366156 {A B : Type'} (anything : A -> A) (f : A -> B) (x : A) : ((term994 B) = (term1227 A B anything f x)) = True.
Proof. exact (TRANS (@lem8366151 A B anything f x) (@lem8366155 B)). Qed.
Lemma lem8366157 {A B : Type'} (anything : A -> A) (f : A -> B) : (term1229 A B anything f) = (term1195 A).
Proof. exact (fun_ext (fun x : A => @lem8366156 A B anything f x)). Qed.
Lemma lem8366158 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem8366159 {A B : Type'} (anything : A -> A) (f : A -> B) : (term1230 A B anything f) = (term1197 A).
Proof. exact (MK_COMB (@lem8366158 A) (@lem8366157 A B anything f)). Qed.
Lemma lem8366161 {A : Type'} (t : Prop) : (term1198 A t) = t.
Proof. exact (EQ_MP (@lem1816 A t) (@lem1815 A t)). Qed.
Lemma lem8366162 {A : Type'} (t : Prop) : (term1198 A t) = t.
Proof. exact (@lem8366161 A t). Qed.
Lemma lem8366163 {A : Type'} : (term1197 A) = True.
Proof. exact (@lem8366162 A True). Qed.
Lemma lem8366164 {A B : Type'} (anything : A -> A) (f : A -> B) : (term1230 A B anything f) = True.
Proof. exact (TRANS (@lem8366159 A B anything f) (@lem8366163 A)). Qed.
Lemma lem8366165 {A B : Type'} (anything : A -> A) : (term1231 A B anything) = (term1200 A B).
Proof. exact (fun_ext (fun f : A -> B => @lem8366164 A B anything f)). Qed.
Lemma lem8366166 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem8366167 {A B : Type'} (anything : A -> A) : (term1232 A B anything) = (term1202 A B).
Proof. exact (MK_COMB (@lem8366166 A B) (@lem8366165 A B anything)). Qed.
Lemma lem8366169 {A : Type'} (t : Prop) : (term1198 A t) = t.
Proof. exact (EQ_MP (@lem1816 A t) (@lem1815 A t)). Qed.
Lemma lem8366170 {A B : Type'} (t : Prop) : (term1203 A B t) = t.
Proof. exact (@lem8366169 (A -> B) t). Qed.
Lemma lem8366171 {A B : Type'} : (term1202 A B) = True.
Proof. exact (@lem8366170 A B True). Qed.
Lemma lem8366172 {A B : Type'} (anything : A -> A) : (term1232 A B anything) = True.
Proof. exact (TRANS (@lem8366167 A B anything) (@lem8366171 A B)). Qed.
Lemma lem8366173 {A B : Type'} (lt2 : type1402 A) (anything : A -> A) : (term1233 A B lt2 anything) = (True /\ True).
Proof. exact (MK_COMB (@lem8366055 A B anything lt2) (@lem8366172 A B anything)). Qed.
Lemma lem8366175 (t : Prop) : (True /\ t) = t.
Proof. exact (proj1 (@lem1842 t)). Qed.
Lemma lem8366176 : (True /\ True) = True.
Proof. exact (@lem8366175 True). Qed.
Lemma lem8366177 {A B : Type'} (lt2 : type1402 A) (anything : A -> A) : (term1233 A B lt2 anything) = True.
Proof. exact (TRANS (@lem8366173 A B lt2 anything) (@lem8366176)). Qed.
Lemma lem8366178 {A B : Type'} (lt2 : type1402 A) (anything : A -> A) : (term1234 A B lt2 anything) = (True /\ True).
Proof. exact (MK_COMB (@lem8365950 A B lt2 anything) (@lem8366177 A B lt2 anything)). Qed.
Lemma lem8366180 (t : Prop) : (True /\ t) = t.
Proof. exact (proj1 (@lem1842 t)). Qed.
Lemma lem8366181 : (True /\ True) = True.
Proof. exact (@lem8366180 True). Qed.
Lemma lem8366182 {A B : Type'} (lt2 : type1402 A) (anything : A -> A) : (term1234 A B lt2 anything) = True.
Proof. exact (TRANS (@lem8366178 A B lt2 anything) (@lem8366181)). Qed.
Lemma lem8366183 {A B : Type'} (lt2 : type1402 A) (anything : A -> A) : True = (term1234 A B lt2 anything).
Proof. exact (SYM (@lem8366182 A B lt2 anything)). Qed.
Lemma lem8366184 {A B : Type'} (lt2 : type1402 A) (anything : A -> A) : term1234 A B lt2 anything.
Proof. exact (EQ_MP (@lem8366183 A B lt2 anything) (@lem0)). Qed.
Lemma lem8366185 {A B : Type'} (lt2 : type1402 A) (anything : A -> A) : term1235 A B lt2 anything.
Proof. exact (ex_intro (term1236 A B lt2 anything) (term1176 A B) (@lem8366184 A B lt2 anything)). Qed.
Lemma lem8366186 {A B : Type'} (lt2 : type1402 A) : term1237 A B lt2.
Proof. exact (ex_intro (term1238 A B lt2) (term1239 A B) (@lem8366185 A B lt2 (@el (A -> A)))). Qed.
Lemma lem8366187 {A B : Type'} (lt2 : type1402 A) : term1020 A B lt2.
Proof. exact (ex_intro (term1018 A B lt2) (term1148 A B) (@lem8366186 A B lt2)). Qed.
Lemma lem8366188 {A B P : Type'} (lt2 : type1402 A) (clauses : type1635 A B P) (h1 : term958 A B P lt2 clauses) : term958 A B P lt2 clauses.
Proof. exact (h1). Qed.
Lemma lem8366189 {A B P : Type'} (s : P -> A) (t : type558 A B P) (lt2 : type1402 A) (clauses : type1635 A B P) (h1 : term1099 A B P s t lt2 clauses) : term1099 A B P s t lt2 clauses.
Proof. exact (h1). Qed.
Lemma lem8366190 {A B P : Type'} (lt2 : type1402 A) (clauses : type1635 A B P) (h1 : term898 A B P lt2 clauses) : term898 A B P lt2 clauses.
Proof. exact (h1). Qed.
Lemma lem8366191 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (t : type558 A B P) (h1 : term1067 A B P lt2 s t) : term1067 A B P lt2 s t.
Proof. exact (h1). Qed.
Lemma lem8366192 {A B P : Type'} (lt2 : type1402 A) (clauses : type1635 A B P) : (term898 A B P lt2 clauses) = ((term898 A B P lt2 clauses) = True).
Proof. exact (@lem7 (term898 A B P lt2 clauses)). Qed.
Lemma lem8366199 {A B P : Type'} (lt2 : type1402 A) (clauses : type1635 A B P) (h1 : term898 A B P lt2 clauses) : (term898 A B P lt2 clauses) = True.
Proof. exact (EQ_MP (@lem8366192 A B P lt2 clauses) (@lem8366190 A B P lt2 clauses h1)). Qed.
Lemma lem8366200 {A B P : Type'} (lt2 : type1402 A) (clauses : type1635 A B P) (h1 : term898 A B P lt2 clauses) : (term898 A B P lt2 clauses) = True.
Proof. exact (@lem8366199 A B P lt2 clauses h1). Qed.
Lemma lem8366201 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem8366202 {A B P : Type'} (lt2 : type1402 A) (clauses : type1635 A B P) (h1 : term898 A B P lt2 clauses) : (term956 A B P lt2 clauses) = (imp True).
Proof. exact (MK_COMB (@lem8366201) (@lem8366200 A B P lt2 clauses h1)). Qed.
Lemma lem8366277 {A B P : Type'} (lt2 : type1402 A) (clauses : type1635 A B P) : (term955 A B P lt2 clauses) = (term955 A B P lt2 clauses).
Proof. exact (eq_refl (term955 A B P lt2 clauses)). Qed.
Lemma lem8366278 {A B P : Type'} (lt2 : type1402 A) (clauses : type1635 A B P) (h1 : term898 A B P lt2 clauses) : (term958 A B P lt2 clauses) = (term1240 A B P lt2 clauses).
Proof. exact (MK_COMB (@lem8366202 A B P lt2 clauses h1) (@lem8366277 A B P lt2 clauses)). Qed.
Lemma lem8366280 (t : Prop) : (True -> t) = t.
Proof. exact (proj1 (@lem1820 t)). Qed.
Lemma lem8366281 {A B P : Type'} (lt2 : type1402 A) (clauses : type1635 A B P) : (term1240 A B P lt2 clauses) = (term955 A B P lt2 clauses).
Proof. exact (@lem8366280 (term955 A B P lt2 clauses)). Qed.
Lemma lem8366356 {A B P : Type'} (lt2 : type1402 A) (clauses : type1635 A B P) (h1 : term898 A B P lt2 clauses) : (term958 A B P lt2 clauses) = (term955 A B P lt2 clauses).
Proof. exact (TRANS (@lem8366278 A B P lt2 clauses h1) (@lem8366281 A B P lt2 clauses)). Qed.
Lemma lem8366357 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem8366358 {A B P : Type'} (lt2 : type1402 A) (clauses : type1635 A B P) (h1 : term898 A B P lt2 clauses) : (term971 A B P lt2 clauses) = (term1241 A B P lt2 clauses).
Proof. exact (MK_COMB (@lem8366357) (@lem8366356 A B P lt2 clauses h1)). Qed.
Lemma lem8366519 {A B P : Type'} (lt2 : type1402 A) (t : type558 A B P) (s : P -> A) (clauses : type1635 A B P) : (term1242 A B P lt2 t s clauses) = (term1242 A B P lt2 t s clauses).
Proof. exact (eq_refl (term1242 A B P lt2 t s clauses)). Qed.
Lemma lem8366520 {A B P : Type'} (t : type558 A B P) (s : P -> A) (lt2 : type1402 A) (clauses : type1635 A B P) (h1 : term898 A B P lt2 clauses) : (term1243 A B P lt2 t s clauses) = (term1244 A B P lt2 t s clauses).
Proof. exact (MK_COMB (@lem8366358 A B P lt2 clauses h1) (@lem8366519 A B P lt2 t s clauses)). Qed.
Lemma lem8366523 {A B P : Type'} (t : type558 A B P) (s : P -> A) (lt2 : type1402 A) (clauses : type1635 A B P) (h1 : term898 A B P lt2 clauses) : (term1244 A B P lt2 t s clauses) = (term1243 A B P lt2 t s clauses).
Proof. exact (SYM (@lem8366520 A B P t s lt2 clauses h1)). Qed.
Lemma lem8366525 {A : Type'} (P : A -> Prop) (Q : Prop) : (term870 A P Q) = (term871 A P Q).
Proof. exact (EQ_MP (@lem8364283 A P Q) (@lem8364282 A P Q)). Qed.
Lemma lem8366526 {A B : Type'} (P : type112 A B) (Q : Prop) : (term1245 A B P Q) = (term1246 A B P Q).
Proof. exact (@lem8366525 (type551 A B) P Q). Qed.
Lemma lem8366527 {A B P : Type'} (lt2 : type1402 A) (t : type558 A B P) (s : P -> A) (clauses : type1635 A B P) : (term1247 A B P lt2 t s clauses) = (term1248 A B P lt2 t s clauses).
Proof. exact (@lem8366526 A B (term954 A B P lt2 clauses) (term1242 A B P lt2 t s clauses)). Qed.
Lemma lem8366528 {A B P : Type'} (lt2 : type1402 A) (clauses : type1635 A B P) (P' : type551 A B) : (term1249 A B P lt2 clauses P') = (term953 A B P lt2 clauses P').
Proof. exact (eq_refl (term1249 A B P lt2 clauses P')). Qed.
Lemma lem8366529 {A B P : Type'} (lt2 : type1402 A) (clauses : type1635 A B P) : (term1250 A B P lt2 clauses) = (term954 A B P lt2 clauses).
Proof. exact (fun_ext (fun P' : type551 A B => @lem8366528 A B P lt2 clauses P')). Qed.
Lemma lem8366530 {A B : Type'} : (@ex ((A -> B) -> A -> Prop)) = (@ex ((A -> B) -> A -> Prop)).
Proof. exact (eq_refl (@ex ((A -> B) -> A -> Prop))). Qed.
Lemma lem8366531 {A B P : Type'} (lt2 : type1402 A) (clauses : type1635 A B P) : (term1251 A B P lt2 clauses) = (term955 A B P lt2 clauses).
Proof. exact (MK_COMB (@lem8366530 A B) (@lem8366529 A B P lt2 clauses)). Qed.
Lemma lem8366532 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem8366533 {A B P : Type'} (lt2 : type1402 A) (clauses : type1635 A B P) : (term1252 A B P lt2 clauses) = (term1241 A B P lt2 clauses).
Proof. exact (MK_COMB (@lem8366532) (@lem8366531 A B P lt2 clauses)). Qed.
Lemma lem8366534 {A B P : Type'} (lt2 : type1402 A) (t : type558 A B P) (s : P -> A) (clauses : type1635 A B P) : (term1242 A B P lt2 t s clauses) = (term1242 A B P lt2 t s clauses).
Proof. exact (eq_refl (term1242 A B P lt2 t s clauses)). Qed.
Lemma lem8366535 {A B P : Type'} (lt2 : type1402 A) (t : type558 A B P) (s : P -> A) (clauses : type1635 A B P) : (term1247 A B P lt2 t s clauses) = (term1244 A B P lt2 t s clauses).
Proof. exact (MK_COMB (@lem8366533 A B P lt2 clauses) (@lem8366534 A B P lt2 t s clauses)). Qed.
Lemma lem8366536 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8366537 {A B P : Type'} (lt2 : type1402 A) (t : type558 A B P) (s : P -> A) (clauses : type1635 A B P) : (term1253 A B P lt2 t s clauses) = (term1254 A B P lt2 t s clauses).
Proof. exact (MK_COMB (@lem8366536) (@lem8366535 A B P lt2 t s clauses)). Qed.
Lemma lem8366538 {A B P : Type'} (lt2 : type1402 A) (clauses : type1635 A B P) (P' : type551 A B) : (term1249 A B P lt2 clauses P') = (term953 A B P lt2 clauses P').
Proof. exact (eq_refl (term1249 A B P lt2 clauses P')). Qed.
Lemma lem8366539 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem8366540 {A B P : Type'} (lt2 : type1402 A) (clauses : type1635 A B P) (P' : type551 A B) : (term1255 A B P lt2 clauses P') = (term1256 A B P lt2 clauses P').
Proof. exact (MK_COMB (@lem8366539) (@lem8366538 A B P lt2 clauses P')). Qed.
Lemma lem8366541 {A B P : Type'} (lt2 : type1402 A) (t : type558 A B P) (s : P -> A) (clauses : type1635 A B P) : (term1242 A B P lt2 t s clauses) = (term1242 A B P lt2 t s clauses).
Proof. exact (eq_refl (term1242 A B P lt2 t s clauses)). Qed.
Lemma lem8366542 {A B P : Type'} (P' : type551 A B) (lt2 : type1402 A) (t : type558 A B P) (s : P -> A) (clauses : type1635 A B P) : (term1257 A B P P' lt2 t s clauses) = (term1258 A B P P' lt2 t s clauses).
Proof. exact (MK_COMB (@lem8366540 A B P lt2 clauses P') (@lem8366541 A B P lt2 t s clauses)). Qed.
Lemma lem8366543 {A B P : Type'} (lt2 : type1402 A) (t : type558 A B P) (s : P -> A) (clauses : type1635 A B P) : (term1259 A B P lt2 t s clauses) = (term1260 A B P lt2 t s clauses).
Proof. exact (fun_ext (fun P' : type551 A B => @lem8366542 A B P P' lt2 t s clauses)). Qed.
Lemma lem8366544 {A B : Type'} : (@all ((A -> B) -> A -> Prop)) = (@all ((A -> B) -> A -> Prop)).
Proof. exact (eq_refl (@all ((A -> B) -> A -> Prop))). Qed.
Lemma lem8366545 {A B P : Type'} (lt2 : type1402 A) (t : type558 A B P) (s : P -> A) (clauses : type1635 A B P) : (term1248 A B P lt2 t s clauses) = (term1261 A B P lt2 t s clauses).
Proof. exact (MK_COMB (@lem8366544 A B) (@lem8366543 A B P lt2 t s clauses)). Qed.
Lemma lem8366546 {A B P : Type'} (lt2 : type1402 A) (t : type558 A B P) (s : P -> A) (clauses : type1635 A B P) : ((term1247 A B P lt2 t s clauses) = (term1248 A B P lt2 t s clauses)) = ((term1244 A B P lt2 t s clauses) = (term1261 A B P lt2 t s clauses)).
Proof. exact (MK_COMB (@lem8366537 A B P lt2 t s clauses) (@lem8366545 A B P lt2 t s clauses)). Qed.
Lemma lem8366547 {A B P : Type'} (lt2 : type1402 A) (t : type558 A B P) (s : P -> A) (clauses : type1635 A B P) : (term1244 A B P lt2 t s clauses) = (term1261 A B P lt2 t s clauses).
Proof. exact (EQ_MP (@lem8366546 A B P lt2 t s clauses) (@lem8366527 A B P lt2 t s clauses)). Qed.
Lemma lem8366553 {A : Type'} (P : A -> Prop) (Q : Prop) : (term870 A P Q) = (term871 A P Q).
Proof. exact (EQ_MP (@lem8364283 A P Q) (@lem8364282 A P Q)). Qed.
Lemma lem8366554 {A B : Type'} (P : type104 A B) (Q : Prop) : (term1262 A B P Q) = (term1263 A B P Q).
Proof. exact (@lem8366553 (type548 A B) P Q). Qed.
Lemma lem8366555 {A B P : Type'} (P' : type551 A B) (lt2 : type1402 A) (t : type558 A B P) (s : P -> A) (clauses : type1635 A B P) : (term1264 A B P P' lt2 t s clauses) = (term1265 A B P P' lt2 t s clauses).
Proof. exact (@lem8366554 A B (term952 A B P lt2 clauses P') (term1242 A B P lt2 t s clauses)). Qed.
Lemma lem8366556 {A B P : Type'} (lt2 : type1402 A) (clauses : type1635 A B P) (P' : type551 A B) (G : type548 A B) : (term1266 A B P lt2 clauses P' G) = (term951 A B P lt2 clauses P' G).
Proof. exact (eq_refl (term1266 A B P lt2 clauses P' G)). Qed.
Lemma lem8366557 {A B P : Type'} (lt2 : type1402 A) (clauses : type1635 A B P) (P' : type551 A B) : (term1267 A B P lt2 clauses P') = (term952 A B P lt2 clauses P').
Proof. exact (fun_ext (fun G : type548 A B => @lem8366556 A B P lt2 clauses P' G)). Qed.
Lemma lem8366558 {A B : Type'} : (@ex ((A -> B) -> A -> A)) = (@ex ((A -> B) -> A -> A)).
Proof. exact (eq_refl (@ex ((A -> B) -> A -> A))). Qed.
Lemma lem8366559 {A B P : Type'} (lt2 : type1402 A) (clauses : type1635 A B P) (P' : type551 A B) : (term1268 A B P lt2 clauses P') = (term953 A B P lt2 clauses P').
Proof. exact (MK_COMB (@lem8366558 A B) (@lem8366557 A B P lt2 clauses P')). Qed.
Lemma lem8366560 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem8366561 {A B P : Type'} (lt2 : type1402 A) (clauses : type1635 A B P) (P' : type551 A B) : (term1269 A B P lt2 clauses P') = (term1256 A B P lt2 clauses P').
Proof. exact (MK_COMB (@lem8366560) (@lem8366559 A B P lt2 clauses P')). Qed.
Lemma lem8366562 {A B P : Type'} (lt2 : type1402 A) (t : type558 A B P) (s : P -> A) (clauses : type1635 A B P) : (term1242 A B P lt2 t s clauses) = (term1242 A B P lt2 t s clauses).
Proof. exact (eq_refl (term1242 A B P lt2 t s clauses)). Qed.
Lemma lem8366563 {A B P : Type'} (P' : type551 A B) (lt2 : type1402 A) (t : type558 A B P) (s : P -> A) (clauses : type1635 A B P) : (term1264 A B P P' lt2 t s clauses) = (term1258 A B P P' lt2 t s clauses).
Proof. exact (MK_COMB (@lem8366561 A B P lt2 clauses P') (@lem8366562 A B P lt2 t s clauses)). Qed.
Lemma lem8366564 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8366565 {A B P : Type'} (P' : type551 A B) (lt2 : type1402 A) (t : type558 A B P) (s : P -> A) (clauses : type1635 A B P) : (term1270 A B P P' lt2 t s clauses) = (term1271 A B P P' lt2 t s clauses).
Proof. exact (MK_COMB (@lem8366564) (@lem8366563 A B P P' lt2 t s clauses)). Qed.
Lemma lem8366566 {A B P : Type'} (lt2 : type1402 A) (clauses : type1635 A B P) (P' : type551 A B) (G : type548 A B) : (term1266 A B P lt2 clauses P' G) = (term951 A B P lt2 clauses P' G).
Proof. exact (eq_refl (term1266 A B P lt2 clauses P' G)). Qed.
Lemma lem8366567 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem8366568 {A B P : Type'} (lt2 : type1402 A) (clauses : type1635 A B P) (P' : type551 A B) (G : type548 A B) : (term1272 A B P lt2 clauses P' G) = (term1273 A B P lt2 clauses P' G).
Proof. exact (MK_COMB (@lem8366567) (@lem8366566 A B P lt2 clauses P' G)). Qed.
Lemma lem8366569 {A B P : Type'} (lt2 : type1402 A) (t : type558 A B P) (s : P -> A) (clauses : type1635 A B P) : (term1242 A B P lt2 t s clauses) = (term1242 A B P lt2 t s clauses).
Proof. exact (eq_refl (term1242 A B P lt2 t s clauses)). Qed.
Lemma lem8366570 {A B P : Type'} (P' : type551 A B) (G : type548 A B) (lt2 : type1402 A) (t : type558 A B P) (s : P -> A) (clauses : type1635 A B P) : (term1274 A B P P' G lt2 t s clauses) = (term1275 A B P P' G lt2 t s clauses).
Proof. exact (MK_COMB (@lem8366568 A B P lt2 clauses P' G) (@lem8366569 A B P lt2 t s clauses)). Qed.
Lemma lem8366571 {A B P : Type'} (P' : type551 A B) (lt2 : type1402 A) (t : type558 A B P) (s : P -> A) (clauses : type1635 A B P) : (term1276 A B P P' lt2 t s clauses) = (term1277 A B P P' lt2 t s clauses).
Proof. exact (fun_ext (fun G : type548 A B => @lem8366570 A B P P' G lt2 t s clauses)). Qed.
Lemma lem8366572 {A B : Type'} : (@all ((A -> B) -> A -> A)) = (@all ((A -> B) -> A -> A)).
Proof. exact (eq_refl (@all ((A -> B) -> A -> A))). Qed.
Lemma lem8366573 {A B P : Type'} (P' : type551 A B) (lt2 : type1402 A) (t : type558 A B P) (s : P -> A) (clauses : type1635 A B P) : (term1265 A B P P' lt2 t s clauses) = (term1278 A B P P' lt2 t s clauses).
Proof. exact (MK_COMB (@lem8366572 A B) (@lem8366571 A B P P' lt2 t s clauses)). Qed.
Lemma lem8366574 {A B P : Type'} (P' : type551 A B) (lt2 : type1402 A) (t : type558 A B P) (s : P -> A) (clauses : type1635 A B P) : ((term1264 A B P P' lt2 t s clauses) = (term1265 A B P P' lt2 t s clauses)) = ((term1258 A B P P' lt2 t s clauses) = (term1278 A B P P' lt2 t s clauses)).
Proof. exact (MK_COMB (@lem8366565 A B P P' lt2 t s clauses) (@lem8366573 A B P P' lt2 t s clauses)). Qed.
Lemma lem8366575 {A B P : Type'} (P' : type551 A B) (lt2 : type1402 A) (t : type558 A B P) (s : P -> A) (clauses : type1635 A B P) : (term1258 A B P P' lt2 t s clauses) = (term1278 A B P P' lt2 t s clauses).
Proof. exact (EQ_MP (@lem8366574 A B P P' lt2 t s clauses) (@lem8366555 A B P P' lt2 t s clauses)). Qed.
Lemma lem8366581 {A : Type'} (P : A -> Prop) (Q : Prop) : (term870 A P Q) = (term871 A P Q).
Proof. exact (EQ_MP (@lem8364283 A P Q) (@lem8364282 A P Q)). Qed.
Lemma lem8366582 {A B : Type'} (P : type111 A B) (Q : Prop) : (term1279 A B P Q) = (term1280 A B P Q).
Proof. exact (@lem8366581 (type549 A B) P Q). Qed.
Lemma lem8366583 {A B P : Type'} (P' : type551 A B) (G : type548 A B) (lt2 : type1402 A) (t : type558 A B P) (s : P -> A) (clauses : type1635 A B P) : (term1281 A B P P' G lt2 t s clauses) = (term1282 A B P P' G lt2 t s clauses).
Proof. exact (@lem8366582 A B (term950 A B P lt2 clauses P' G) (term1242 A B P lt2 t s clauses)). Qed.
Lemma lem8366584 {A B P : Type'} (lt2 : type1402 A) (clauses : type1635 A B P) (P' : type551 A B) (G : type548 A B) (H' : type549 A B) : (term1283 A B P lt2 clauses P' G H') = (term922 A B P lt2 clauses P' G H').
Proof. exact (eq_refl (term1283 A B P lt2 clauses P' G H')). Qed.
Lemma lem8366585 {A B P : Type'} (lt2 : type1402 A) (clauses : type1635 A B P) (P' : type551 A B) (G : type548 A B) : (term1284 A B P lt2 clauses P' G) = (term950 A B P lt2 clauses P' G).
Proof. exact (fun_ext (fun H' : type549 A B => @lem8366584 A B P lt2 clauses P' G H')). Qed.
Lemma lem8366586 {A B : Type'} : (@ex ((A -> B) -> A -> B)) = (@ex ((A -> B) -> A -> B)).
Proof. exact (eq_refl (@ex ((A -> B) -> A -> B))). Qed.
Lemma lem8366587 {A B P : Type'} (lt2 : type1402 A) (clauses : type1635 A B P) (P' : type551 A B) (G : type548 A B) : (term1285 A B P lt2 clauses P' G) = (term951 A B P lt2 clauses P' G).
Proof. exact (MK_COMB (@lem8366586 A B) (@lem8366585 A B P lt2 clauses P' G)). Qed.
Lemma lem8366588 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem8366589 {A B P : Type'} (lt2 : type1402 A) (clauses : type1635 A B P) (P' : type551 A B) (G : type548 A B) : (term1286 A B P lt2 clauses P' G) = (term1273 A B P lt2 clauses P' G).
Proof. exact (MK_COMB (@lem8366588) (@lem8366587 A B P lt2 clauses P' G)). Qed.
Lemma lem8366590 {A B P : Type'} (lt2 : type1402 A) (t : type558 A B P) (s : P -> A) (clauses : type1635 A B P) : (term1242 A B P lt2 t s clauses) = (term1242 A B P lt2 t s clauses).
Proof. exact (eq_refl (term1242 A B P lt2 t s clauses)). Qed.
Lemma lem8366591 {A B P : Type'} (P' : type551 A B) (G : type548 A B) (lt2 : type1402 A) (t : type558 A B P) (s : P -> A) (clauses : type1635 A B P) : (term1281 A B P P' G lt2 t s clauses) = (term1275 A B P P' G lt2 t s clauses).
Proof. exact (MK_COMB (@lem8366589 A B P lt2 clauses P' G) (@lem8366590 A B P lt2 t s clauses)). Qed.
Lemma lem8366592 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8366593 {A B P : Type'} (P' : type551 A B) (G : type548 A B) (lt2 : type1402 A) (t : type558 A B P) (s : P -> A) (clauses : type1635 A B P) : (term1287 A B P P' G lt2 t s clauses) = (term1288 A B P P' G lt2 t s clauses).
Proof. exact (MK_COMB (@lem8366592) (@lem8366591 A B P P' G lt2 t s clauses)). Qed.
Lemma lem8366594 {A B P : Type'} (lt2 : type1402 A) (clauses : type1635 A B P) (P' : type551 A B) (G : type548 A B) (H' : type549 A B) : (term1283 A B P lt2 clauses P' G H') = (term922 A B P lt2 clauses P' G H').
Proof. exact (eq_refl (term1283 A B P lt2 clauses P' G H')). Qed.
Lemma lem8366595 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem8366596 {A B P : Type'} (lt2 : type1402 A) (clauses : type1635 A B P) (P' : type551 A B) (G : type548 A B) (H' : type549 A B) : (term1289 A B P lt2 clauses P' G H') = (term1290 A B P lt2 clauses P' G H').
Proof. exact (MK_COMB (@lem8366595) (@lem8366594 A B P lt2 clauses P' G H')). Qed.
Lemma lem8366597 {A B P : Type'} (lt2 : type1402 A) (t : type558 A B P) (s : P -> A) (clauses : type1635 A B P) : (term1242 A B P lt2 t s clauses) = (term1242 A B P lt2 t s clauses).
Proof. exact (eq_refl (term1242 A B P lt2 t s clauses)). Qed.
Lemma lem8366598 {A B P : Type'} (P' : type551 A B) (G : type548 A B) (H' : type549 A B) (lt2 : type1402 A) (t : type558 A B P) (s : P -> A) (clauses : type1635 A B P) : (term1291 A B P P' G H' lt2 t s clauses) = (term1292 A B P P' G H' lt2 t s clauses).
Proof. exact (MK_COMB (@lem8366596 A B P lt2 clauses P' G H') (@lem8366597 A B P lt2 t s clauses)). Qed.
Lemma lem8366599 {A B P : Type'} (P' : type551 A B) (G : type548 A B) (lt2 : type1402 A) (t : type558 A B P) (s : P -> A) (clauses : type1635 A B P) : (term1293 A B P P' G lt2 t s clauses) = (term1294 A B P P' G lt2 t s clauses).
Proof. exact (fun_ext (fun H' : type549 A B => @lem8366598 A B P P' G H' lt2 t s clauses)). Qed.
Lemma lem8366600 {A B : Type'} : (@all ((A -> B) -> A -> B)) = (@all ((A -> B) -> A -> B)).
Proof. exact (eq_refl (@all ((A -> B) -> A -> B))). Qed.
Lemma lem8366601 {A B P : Type'} (P' : type551 A B) (G : type548 A B) (lt2 : type1402 A) (t : type558 A B P) (s : P -> A) (clauses : type1635 A B P) : (term1282 A B P P' G lt2 t s clauses) = (term1295 A B P P' G lt2 t s clauses).
Proof. exact (MK_COMB (@lem8366600 A B) (@lem8366599 A B P P' G lt2 t s clauses)). Qed.
Lemma lem8366602 {A B P : Type'} (P' : type551 A B) (G : type548 A B) (lt2 : type1402 A) (t : type558 A B P) (s : P -> A) (clauses : type1635 A B P) : ((term1281 A B P P' G lt2 t s clauses) = (term1282 A B P P' G lt2 t s clauses)) = ((term1275 A B P P' G lt2 t s clauses) = (term1295 A B P P' G lt2 t s clauses)).
Proof. exact (MK_COMB (@lem8366593 A B P P' G lt2 t s clauses) (@lem8366601 A B P P' G lt2 t s clauses)). Qed.
Lemma lem8366603 {A B P : Type'} (P' : type551 A B) (G : type548 A B) (lt2 : type1402 A) (t : type558 A B P) (s : P -> A) (clauses : type1635 A B P) : (term1275 A B P P' G lt2 t s clauses) = (term1295 A B P P' G lt2 t s clauses).
Proof. exact (EQ_MP (@lem8366602 A B P P' G lt2 t s clauses) (@lem8366583 A B P P' G lt2 t s clauses)). Qed.
Lemma lem8366673 {A : Type'} (P : A -> Prop) (Q : Prop) : (term870 A P Q) = (term871 A P Q).
Proof. exact (EQ_MP (@lem8364283 A P Q) (@lem8364282 A P Q)). Qed.
Lemma lem8366674 {A B P : Type'} (P' : type117 A B P) (Q : Prop) : (term1296 A B P P' Q) = (term1297 A B P P' Q).
Proof. exact (@lem8366673 (type560 A B P) P' Q). Qed.
Lemma lem8366675 {A B P : Type'} (lt2 : type1402 A) (t : type558 A B P) (s : P -> A) (clauses : type1635 A B P) : (term1298 A B P lt2 t s clauses) = (term1299 A B P lt2 t s clauses).
Proof. exact (@lem8366674 A B P (term1300 A B P lt2 s t) (term1131 A B P lt2 t s clauses)). Qed.
Lemma lem8366676 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (t : type558 A B P) (P' : type560 A B P) : (term1301 A B P lt2 s t P') = (term1302 A B P lt2 s t P').
Proof. exact (eq_refl (term1301 A B P lt2 s t P')). Qed.
Lemma lem8366677 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (t : type558 A B P) : (term1303 A B P lt2 s t) = (term1300 A B P lt2 s t).
Proof. exact (fun_ext (fun P' : type560 A B P => @lem8366676 A B P lt2 s t P')). Qed.
Lemma lem8366678 {A B P : Type'} : (@ex ((A -> B) -> P -> Prop)) = (@ex ((A -> B) -> P -> Prop)).
Proof. exact (eq_refl (@ex ((A -> B) -> P -> Prop))). Qed.
Lemma lem8366679 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (t : type558 A B P) : (term1304 A B P lt2 s t) = (term1067 A B P lt2 s t).
Proof. exact (MK_COMB (@lem8366678 A B P) (@lem8366677 A B P lt2 s t)). Qed.
Lemma lem8366680 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem8366681 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (t : type558 A B P) : (term1305 A B P lt2 s t) = (term1306 A B P lt2 s t).
Proof. exact (MK_COMB (@lem8366680) (@lem8366679 A B P lt2 s t)). Qed.
Lemma lem8366682 {A B P : Type'} (lt2 : type1402 A) (t : type558 A B P) (s : P -> A) (clauses : type1635 A B P) : (term1131 A B P lt2 t s clauses) = (term1131 A B P lt2 t s clauses).
Proof. exact (eq_refl (term1131 A B P lt2 t s clauses)). Qed.
Lemma lem8366683 {A B P : Type'} (lt2 : type1402 A) (t : type558 A B P) (s : P -> A) (clauses : type1635 A B P) : (term1298 A B P lt2 t s clauses) = (term1242 A B P lt2 t s clauses).
Proof. exact (MK_COMB (@lem8366681 A B P lt2 s t) (@lem8366682 A B P lt2 t s clauses)). Qed.
Lemma lem8366684 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8366685 {A B P : Type'} (lt2 : type1402 A) (t : type558 A B P) (s : P -> A) (clauses : type1635 A B P) : (term1307 A B P lt2 t s clauses) = (term1308 A B P lt2 t s clauses).
Proof. exact (MK_COMB (@lem8366684) (@lem8366683 A B P lt2 t s clauses)). Qed.
Lemma lem8366686 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (t : type558 A B P) (P' : type560 A B P) : (term1301 A B P lt2 s t P') = (term1302 A B P lt2 s t P').
Proof. exact (eq_refl (term1301 A B P lt2 s t P')). Qed.
Lemma lem8366687 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem8366688 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (t : type558 A B P) (P' : type560 A B P) : (term1309 A B P lt2 s t P') = (term1310 A B P lt2 s t P').
Proof. exact (MK_COMB (@lem8366687) (@lem8366686 A B P lt2 s t P')). Qed.
Lemma lem8366689 {A B P : Type'} (lt2 : type1402 A) (t : type558 A B P) (s : P -> A) (clauses : type1635 A B P) : (term1131 A B P lt2 t s clauses) = (term1131 A B P lt2 t s clauses).
Proof. exact (eq_refl (term1131 A B P lt2 t s clauses)). Qed.
Lemma lem8366690 {A B P : Type'} (P' : type560 A B P) (lt2 : type1402 A) (t : type558 A B P) (s : P -> A) (clauses : type1635 A B P) : (term1311 A B P P' lt2 t s clauses) = (term1312 A B P P' lt2 t s clauses).
Proof. exact (MK_COMB (@lem8366688 A B P lt2 s t P') (@lem8366689 A B P lt2 t s clauses)). Qed.
Lemma lem8366691 {A B P : Type'} (lt2 : type1402 A) (t : type558 A B P) (s : P -> A) (clauses : type1635 A B P) : (term1313 A B P lt2 t s clauses) = (term1314 A B P lt2 t s clauses).
Proof. exact (fun_ext (fun P' : type560 A B P => @lem8366690 A B P P' lt2 t s clauses)). Qed.
Lemma lem8366692 {A B P : Type'} : (@all ((A -> B) -> P -> Prop)) = (@all ((A -> B) -> P -> Prop)).
Proof. exact (eq_refl (@all ((A -> B) -> P -> Prop))). Qed.
Lemma lem8366693 {A B P : Type'} (lt2 : type1402 A) (t : type558 A B P) (s : P -> A) (clauses : type1635 A B P) : (term1299 A B P lt2 t s clauses) = (term1315 A B P lt2 t s clauses).
Proof. exact (MK_COMB (@lem8366692 A B P) (@lem8366691 A B P lt2 t s clauses)). Qed.
Lemma lem8366694 {A B P : Type'} (lt2 : type1402 A) (t : type558 A B P) (s : P -> A) (clauses : type1635 A B P) : ((term1298 A B P lt2 t s clauses) = (term1299 A B P lt2 t s clauses)) = ((term1242 A B P lt2 t s clauses) = (term1315 A B P lt2 t s clauses)).
Proof. exact (MK_COMB (@lem8366685 A B P lt2 t s clauses) (@lem8366693 A B P lt2 t s clauses)). Qed.
Lemma lem8366695 {A B P : Type'} (lt2 : type1402 A) (t : type558 A B P) (s : P -> A) (clauses : type1635 A B P) : (term1242 A B P lt2 t s clauses) = (term1315 A B P lt2 t s clauses).
Proof. exact (EQ_MP (@lem8366694 A B P lt2 t s clauses) (@lem8366675 A B P lt2 t s clauses)). Qed.
Lemma lem8366701 {A : Type'} (P : A -> Prop) (Q : Prop) : (term870 A P Q) = (term871 A P Q).
Proof. exact (EQ_MP (@lem8364283 A P Q) (@lem8364282 A P Q)). Qed.
Lemma lem8366702 {A B P : Type'} (P' : type113 A B P) (Q : Prop) : (term1316 A B P P' Q) = (term1317 A B P P' Q).
Proof. exact (@lem8366701 (type557 A B P) P' Q). Qed.
Lemma lem8366703 {A B P : Type'} (P' : type560 A B P) (lt2 : type1402 A) (t : type558 A B P) (s : P -> A) (clauses : type1635 A B P) : (term1318 A B P P' lt2 t s clauses) = (term1319 A B P P' lt2 t s clauses).
Proof. exact (@lem8366702 A B P (term1320 A B P lt2 s t P') (term1131 A B P lt2 t s clauses)). Qed.
Lemma lem8366704 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (t : type558 A B P) (P' : type560 A B P) (G : type557 A B P) : (term1321 A B P lt2 s t P' G) = (term1322 A B P lt2 s t P' G).
Proof. exact (eq_refl (term1321 A B P lt2 s t P' G)). Qed.
Lemma lem8366705 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (t : type558 A B P) (P' : type560 A B P) : (term1323 A B P lt2 s t P') = (term1320 A B P lt2 s t P').
Proof. exact (fun_ext (fun G : type557 A B P => @lem8366704 A B P lt2 s t P' G)). Qed.
Lemma lem8366706 {A B P : Type'} : (@ex ((A -> B) -> P -> A)) = (@ex ((A -> B) -> P -> A)).
Proof. exact (eq_refl (@ex ((A -> B) -> P -> A))). Qed.
Lemma lem8366707 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (t : type558 A B P) (P' : type560 A B P) : (term1324 A B P lt2 s t P') = (term1302 A B P lt2 s t P').
Proof. exact (MK_COMB (@lem8366706 A B P) (@lem8366705 A B P lt2 s t P')). Qed.
Lemma lem8366708 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem8366709 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (t : type558 A B P) (P' : type560 A B P) : (term1325 A B P lt2 s t P') = (term1310 A B P lt2 s t P').
Proof. exact (MK_COMB (@lem8366708) (@lem8366707 A B P lt2 s t P')). Qed.
Lemma lem8366710 {A B P : Type'} (lt2 : type1402 A) (t : type558 A B P) (s : P -> A) (clauses : type1635 A B P) : (term1131 A B P lt2 t s clauses) = (term1131 A B P lt2 t s clauses).
Proof. exact (eq_refl (term1131 A B P lt2 t s clauses)). Qed.
Lemma lem8366711 {A B P : Type'} (P' : type560 A B P) (lt2 : type1402 A) (t : type558 A B P) (s : P -> A) (clauses : type1635 A B P) : (term1318 A B P P' lt2 t s clauses) = (term1312 A B P P' lt2 t s clauses).
Proof. exact (MK_COMB (@lem8366709 A B P lt2 s t P') (@lem8366710 A B P lt2 t s clauses)). Qed.
Lemma lem8366712 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8366713 {A B P : Type'} (P' : type560 A B P) (lt2 : type1402 A) (t : type558 A B P) (s : P -> A) (clauses : type1635 A B P) : (term1326 A B P P' lt2 t s clauses) = (term1327 A B P P' lt2 t s clauses).
Proof. exact (MK_COMB (@lem8366712) (@lem8366711 A B P P' lt2 t s clauses)). Qed.
Lemma lem8366714 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (t : type558 A B P) (P' : type560 A B P) (G : type557 A B P) : (term1321 A B P lt2 s t P' G) = (term1322 A B P lt2 s t P' G).
Proof. exact (eq_refl (term1321 A B P lt2 s t P' G)). Qed.
Lemma lem8366715 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem8366716 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (t : type558 A B P) (P' : type560 A B P) (G : type557 A B P) : (term1328 A B P lt2 s t P' G) = (term1329 A B P lt2 s t P' G).
Proof. exact (MK_COMB (@lem8366715) (@lem8366714 A B P lt2 s t P' G)). Qed.
Lemma lem8366717 {A B P : Type'} (lt2 : type1402 A) (t : type558 A B P) (s : P -> A) (clauses : type1635 A B P) : (term1131 A B P lt2 t s clauses) = (term1131 A B P lt2 t s clauses).
Proof. exact (eq_refl (term1131 A B P lt2 t s clauses)). Qed.
Lemma lem8366718 {A B P : Type'} (P' : type560 A B P) (G : type557 A B P) (lt2 : type1402 A) (t : type558 A B P) (s : P -> A) (clauses : type1635 A B P) : (term1330 A B P P' G lt2 t s clauses) = (term1331 A B P P' G lt2 t s clauses).
Proof. exact (MK_COMB (@lem8366716 A B P lt2 s t P' G) (@lem8366717 A B P lt2 t s clauses)). Qed.
Lemma lem8366719 {A B P : Type'} (P' : type560 A B P) (lt2 : type1402 A) (t : type558 A B P) (s : P -> A) (clauses : type1635 A B P) : (term1332 A B P P' lt2 t s clauses) = (term1333 A B P P' lt2 t s clauses).
Proof. exact (fun_ext (fun G : type557 A B P => @lem8366718 A B P P' G lt2 t s clauses)). Qed.
Lemma lem8366720 {A B P : Type'} : (@all ((A -> B) -> P -> A)) = (@all ((A -> B) -> P -> A)).
Proof. exact (eq_refl (@all ((A -> B) -> P -> A))). Qed.
Lemma lem8366721 {A B P : Type'} (P' : type560 A B P) (lt2 : type1402 A) (t : type558 A B P) (s : P -> A) (clauses : type1635 A B P) : (term1319 A B P P' lt2 t s clauses) = (term1334 A B P P' lt2 t s clauses).
Proof. exact (MK_COMB (@lem8366720 A B P) (@lem8366719 A B P P' lt2 t s clauses)). Qed.
Lemma lem8366722 {A B P : Type'} (P' : type560 A B P) (lt2 : type1402 A) (t : type558 A B P) (s : P -> A) (clauses : type1635 A B P) : ((term1318 A B P P' lt2 t s clauses) = (term1319 A B P P' lt2 t s clauses)) = ((term1312 A B P P' lt2 t s clauses) = (term1334 A B P P' lt2 t s clauses)).
Proof. exact (MK_COMB (@lem8366713 A B P P' lt2 t s clauses) (@lem8366721 A B P P' lt2 t s clauses)). Qed.
Lemma lem8366723 {A B P : Type'} (P' : type560 A B P) (lt2 : type1402 A) (t : type558 A B P) (s : P -> A) (clauses : type1635 A B P) : (term1312 A B P P' lt2 t s clauses) = (term1334 A B P P' lt2 t s clauses).
Proof. exact (EQ_MP (@lem8366722 A B P P' lt2 t s clauses) (@lem8366703 A B P P' lt2 t s clauses)). Qed.
Lemma lem8366729 {A : Type'} (P : A -> Prop) (Q : Prop) : (term870 A P Q) = (term871 A P Q).
Proof. exact (EQ_MP (@lem8364283 A P Q) (@lem8364282 A P Q)). Qed.
Lemma lem8366730 {A B P : Type'} (P' : type116 A B P) (Q : Prop) : (term1335 A B P P' Q) = (term1336 A B P P' Q).
Proof. exact (@lem8366729 (type558 A B P) P' Q). Qed.
Lemma lem8366731 {A B P : Type'} (P' : type560 A B P) (G : type557 A B P) (lt2 : type1402 A) (t : type558 A B P) (s : P -> A) (clauses : type1635 A B P) : (term1337 A B P P' G lt2 t s clauses) = (term1338 A B P P' G lt2 t s clauses).
Proof. exact (@lem8366730 A B P (term1339 A B P lt2 s t P' G) (term1131 A B P lt2 t s clauses)). Qed.
Lemma lem8366732 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (t : type558 A B P) (P' : type560 A B P) (G : type557 A B P) (H : type558 A B P) : (term1340 A B P lt2 s t P' G H) = (term1341 A B P lt2 s t P' G H).
Proof. exact (eq_refl (term1340 A B P lt2 s t P' G H)). Qed.
Lemma lem8366733 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (t : type558 A B P) (P' : type560 A B P) (G : type557 A B P) : (term1342 A B P lt2 s t P' G) = (term1339 A B P lt2 s t P' G).
Proof. exact (fun_ext (fun H : type558 A B P => @lem8366732 A B P lt2 s t P' G H)). Qed.
Lemma lem8366734 {A B P : Type'} : (@ex ((A -> B) -> P -> B)) = (@ex ((A -> B) -> P -> B)).
Proof. exact (eq_refl (@ex ((A -> B) -> P -> B))). Qed.
Lemma lem8366735 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (t : type558 A B P) (P' : type560 A B P) (G : type557 A B P) : (term1343 A B P lt2 s t P' G) = (term1322 A B P lt2 s t P' G).
Proof. exact (MK_COMB (@lem8366734 A B P) (@lem8366733 A B P lt2 s t P' G)). Qed.
Lemma lem8366736 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem8366737 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (t : type558 A B P) (P' : type560 A B P) (G : type557 A B P) : (term1344 A B P lt2 s t P' G) = (term1329 A B P lt2 s t P' G).
Proof. exact (MK_COMB (@lem8366736) (@lem8366735 A B P lt2 s t P' G)). Qed.
Lemma lem8366738 {A B P : Type'} (lt2 : type1402 A) (t : type558 A B P) (s : P -> A) (clauses : type1635 A B P) : (term1131 A B P lt2 t s clauses) = (term1131 A B P lt2 t s clauses).
Proof. exact (eq_refl (term1131 A B P lt2 t s clauses)). Qed.
Lemma lem8366739 {A B P : Type'} (P' : type560 A B P) (G : type557 A B P) (lt2 : type1402 A) (t : type558 A B P) (s : P -> A) (clauses : type1635 A B P) : (term1337 A B P P' G lt2 t s clauses) = (term1331 A B P P' G lt2 t s clauses).
Proof. exact (MK_COMB (@lem8366737 A B P lt2 s t P' G) (@lem8366738 A B P lt2 t s clauses)). Qed.
Lemma lem8366740 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8366741 {A B P : Type'} (P' : type560 A B P) (G : type557 A B P) (lt2 : type1402 A) (t : type558 A B P) (s : P -> A) (clauses : type1635 A B P) : (term1345 A B P P' G lt2 t s clauses) = (term1346 A B P P' G lt2 t s clauses).
Proof. exact (MK_COMB (@lem8366740) (@lem8366739 A B P P' G lt2 t s clauses)). Qed.
Lemma lem8366742 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (t : type558 A B P) (P' : type560 A B P) (G : type557 A B P) (H : type558 A B P) : (term1340 A B P lt2 s t P' G H) = (term1341 A B P lt2 s t P' G H).
Proof. exact (eq_refl (term1340 A B P lt2 s t P' G H)). Qed.
Lemma lem8366743 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem8366744 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (t : type558 A B P) (P' : type560 A B P) (G : type557 A B P) (H : type558 A B P) : (term1347 A B P lt2 s t P' G H) = (term1348 A B P lt2 s t P' G H).
Proof. exact (MK_COMB (@lem8366743) (@lem8366742 A B P lt2 s t P' G H)). Qed.
Lemma lem8366745 {A B P : Type'} (lt2 : type1402 A) (t : type558 A B P) (s : P -> A) (clauses : type1635 A B P) : (term1131 A B P lt2 t s clauses) = (term1131 A B P lt2 t s clauses).
Proof. exact (eq_refl (term1131 A B P lt2 t s clauses)). Qed.
Lemma lem8366746 {A B P : Type'} (P' : type560 A B P) (G : type557 A B P) (H : type558 A B P) (lt2 : type1402 A) (t : type558 A B P) (s : P -> A) (clauses : type1635 A B P) : (term1349 A B P P' G H lt2 t s clauses) = (term1350 A B P P' G H lt2 t s clauses).
Proof. exact (MK_COMB (@lem8366744 A B P lt2 s t P' G H) (@lem8366745 A B P lt2 t s clauses)). Qed.
Lemma lem8366747 {A B P : Type'} (P' : type560 A B P) (G : type557 A B P) (lt2 : type1402 A) (t : type558 A B P) (s : P -> A) (clauses : type1635 A B P) : (term1351 A B P P' G lt2 t s clauses) = (term1352 A B P P' G lt2 t s clauses).
Proof. exact (fun_ext (fun H : type558 A B P => @lem8366746 A B P P' G H lt2 t s clauses)). Qed.
Lemma lem8366748 {A B P : Type'} : (@all ((A -> B) -> P -> B)) = (@all ((A -> B) -> P -> B)).
Proof. exact (eq_refl (@all ((A -> B) -> P -> B))). Qed.
Lemma lem8366749 {A B P : Type'} (P' : type560 A B P) (G : type557 A B P) (lt2 : type1402 A) (t : type558 A B P) (s : P -> A) (clauses : type1635 A B P) : (term1338 A B P P' G lt2 t s clauses) = (term1353 A B P P' G lt2 t s clauses).
Proof. exact (MK_COMB (@lem8366748 A B P) (@lem8366747 A B P P' G lt2 t s clauses)). Qed.
Lemma lem8366750 {A B P : Type'} (P' : type560 A B P) (G : type557 A B P) (lt2 : type1402 A) (t : type558 A B P) (s : P -> A) (clauses : type1635 A B P) : ((term1337 A B P P' G lt2 t s clauses) = (term1338 A B P P' G lt2 t s clauses)) = ((term1331 A B P P' G lt2 t s clauses) = (term1353 A B P P' G lt2 t s clauses)).
Proof. exact (MK_COMB (@lem8366741 A B P P' G lt2 t s clauses) (@lem8366749 A B P P' G lt2 t s clauses)). Qed.
Lemma lem8366751 {A B P : Type'} (P' : type560 A B P) (G : type557 A B P) (lt2 : type1402 A) (t : type558 A B P) (s : P -> A) (clauses : type1635 A B P) : (term1331 A B P P' G lt2 t s clauses) = (term1353 A B P P' G lt2 t s clauses).
Proof. exact (EQ_MP (@lem8366750 A B P P' G lt2 t s clauses) (@lem8366731 A B P P' G lt2 t s clauses)). Qed.
Lemma lem8366904 {A B P : Type'} (P' : type560 A B P) (lt2 : type1402 A) (t : type558 A B P) (s : P -> A) (clauses : type1635 A B P) : (term1333 A B P P' lt2 t s clauses) = (term1354 A B P P' lt2 t s clauses).
Proof. exact (fun_ext (fun G : type557 A B P => @lem8366751 A B P P' G lt2 t s clauses)). Qed.
Lemma lem8366905 {A B P : Type'} : (@all ((A -> B) -> P -> A)) = (@all ((A -> B) -> P -> A)).
Proof. exact (eq_refl (@all ((A -> B) -> P -> A))). Qed.
Lemma lem8366906 {A B P : Type'} (P' : type560 A B P) (lt2 : type1402 A) (t : type558 A B P) (s : P -> A) (clauses : type1635 A B P) : (term1334 A B P P' lt2 t s clauses) = (term1355 A B P P' lt2 t s clauses).
Proof. exact (MK_COMB (@lem8366905 A B P) (@lem8366904 A B P P' lt2 t s clauses)). Qed.
Lemma lem8366911 {A B P : Type'} (P' : type560 A B P) (lt2 : type1402 A) (t : type558 A B P) (s : P -> A) (clauses : type1635 A B P) : (term1312 A B P P' lt2 t s clauses) = (term1355 A B P P' lt2 t s clauses).
Proof. exact (TRANS (@lem8366723 A B P P' lt2 t s clauses) (@lem8366906 A B P P' lt2 t s clauses)). Qed.
Lemma lem8366912 {A B P : Type'} (lt2 : type1402 A) (t : type558 A B P) (s : P -> A) (clauses : type1635 A B P) : (term1314 A B P lt2 t s clauses) = (term1356 A B P lt2 t s clauses).
Proof. exact (fun_ext (fun P' : type560 A B P => @lem8366911 A B P P' lt2 t s clauses)). Qed.
Lemma lem8366913 {A B P : Type'} : (@all ((A -> B) -> P -> Prop)) = (@all ((A -> B) -> P -> Prop)).
Proof. exact (eq_refl (@all ((A -> B) -> P -> Prop))). Qed.
Lemma lem8366914 {A B P : Type'} (lt2 : type1402 A) (t : type558 A B P) (s : P -> A) (clauses : type1635 A B P) : (term1315 A B P lt2 t s clauses) = (term1357 A B P lt2 t s clauses).
Proof. exact (MK_COMB (@lem8366913 A B P) (@lem8366912 A B P lt2 t s clauses)). Qed.
Lemma lem8366919 {A B P : Type'} (lt2 : type1402 A) (t : type558 A B P) (s : P -> A) (clauses : type1635 A B P) : (term1242 A B P lt2 t s clauses) = (term1357 A B P lt2 t s clauses).
Proof. exact (TRANS (@lem8366695 A B P lt2 t s clauses) (@lem8366914 A B P lt2 t s clauses)). Qed.
Lemma lem8366920 {A B P : Type'} (lt2 : type1402 A) (clauses : type1635 A B P) (P' : type551 A B) (G : type548 A B) (H' : type549 A B) : (term1290 A B P lt2 clauses P' G H') = (term1290 A B P lt2 clauses P' G H').
Proof. exact (eq_refl (term1290 A B P lt2 clauses P' G H')). Qed.
Lemma lem8366921 {A B P : Type'} (P' : type551 A B) (G : type548 A B) (H' : type549 A B) (lt2 : type1402 A) (t : type558 A B P) (s : P -> A) (clauses : type1635 A B P) : (term1292 A B P P' G H' lt2 t s clauses) = (term1358 A B P P' G H' lt2 t s clauses).
Proof. exact (MK_COMB (@lem8366920 A B P lt2 clauses P' G H') (@lem8366919 A B P lt2 t s clauses)). Qed.
Lemma lem8366924 {A B P : Type'} (P' : type551 A B) (G : type548 A B) (lt2 : type1402 A) (t : type558 A B P) (s : P -> A) (clauses : type1635 A B P) : (term1294 A B P P' G lt2 t s clauses) = (term1359 A B P P' G lt2 t s clauses).
Proof. exact (fun_ext (fun H' : type549 A B => @lem8366921 A B P P' G H' lt2 t s clauses)). Qed.
Lemma lem8366925 {A B : Type'} : (@all ((A -> B) -> A -> B)) = (@all ((A -> B) -> A -> B)).
Proof. exact (eq_refl (@all ((A -> B) -> A -> B))). Qed.
Lemma lem8366926 {A B P : Type'} (P' : type551 A B) (G : type548 A B) (lt2 : type1402 A) (t : type558 A B P) (s : P -> A) (clauses : type1635 A B P) : (term1295 A B P P' G lt2 t s clauses) = (term1360 A B P P' G lt2 t s clauses).
Proof. exact (MK_COMB (@lem8366925 A B) (@lem8366924 A B P P' G lt2 t s clauses)). Qed.
Lemma lem8366931 {A B P : Type'} (P' : type551 A B) (G : type548 A B) (lt2 : type1402 A) (t : type558 A B P) (s : P -> A) (clauses : type1635 A B P) : (term1275 A B P P' G lt2 t s clauses) = (term1360 A B P P' G lt2 t s clauses).
Proof. exact (TRANS (@lem8366603 A B P P' G lt2 t s clauses) (@lem8366926 A B P P' G lt2 t s clauses)). Qed.
Lemma lem8366932 {A B P : Type'} (P' : type551 A B) (lt2 : type1402 A) (t : type558 A B P) (s : P -> A) (clauses : type1635 A B P) : (term1277 A B P P' lt2 t s clauses) = (term1361 A B P P' lt2 t s clauses).
Proof. exact (fun_ext (fun G : type548 A B => @lem8366931 A B P P' G lt2 t s clauses)). Qed.
Lemma lem8366933 {A B : Type'} : (@all ((A -> B) -> A -> A)) = (@all ((A -> B) -> A -> A)).
Proof. exact (eq_refl (@all ((A -> B) -> A -> A))). Qed.
Lemma lem8366934 {A B P : Type'} (P' : type551 A B) (lt2 : type1402 A) (t : type558 A B P) (s : P -> A) (clauses : type1635 A B P) : (term1278 A B P P' lt2 t s clauses) = (term1362 A B P P' lt2 t s clauses).
Proof. exact (MK_COMB (@lem8366933 A B) (@lem8366932 A B P P' lt2 t s clauses)). Qed.
Lemma lem8366939 {A B P : Type'} (P' : type551 A B) (lt2 : type1402 A) (t : type558 A B P) (s : P -> A) (clauses : type1635 A B P) : (term1258 A B P P' lt2 t s clauses) = (term1362 A B P P' lt2 t s clauses).
Proof. exact (TRANS (@lem8366575 A B P P' lt2 t s clauses) (@lem8366934 A B P P' lt2 t s clauses)). Qed.
Lemma lem8366940 {A B P : Type'} (lt2 : type1402 A) (t : type558 A B P) (s : P -> A) (clauses : type1635 A B P) : (term1260 A B P lt2 t s clauses) = (term1363 A B P lt2 t s clauses).
Proof. exact (fun_ext (fun P' : type551 A B => @lem8366939 A B P P' lt2 t s clauses)). Qed.
Lemma lem8366941 {A B : Type'} : (@all ((A -> B) -> A -> Prop)) = (@all ((A -> B) -> A -> Prop)).
Proof. exact (eq_refl (@all ((A -> B) -> A -> Prop))). Qed.
Lemma lem8366942 {A B P : Type'} (lt2 : type1402 A) (t : type558 A B P) (s : P -> A) (clauses : type1635 A B P) : (term1261 A B P lt2 t s clauses) = (term1364 A B P lt2 t s clauses).
Proof. exact (MK_COMB (@lem8366941 A B) (@lem8366940 A B P lt2 t s clauses)). Qed.
Lemma lem8366947 {A B P : Type'} (lt2 : type1402 A) (t : type558 A B P) (s : P -> A) (clauses : type1635 A B P) : (term1244 A B P lt2 t s clauses) = (term1364 A B P lt2 t s clauses).
Proof. exact (TRANS (@lem8366547 A B P lt2 t s clauses) (@lem8366942 A B P lt2 t s clauses)). Qed.
Lemma lem8366948 {A B P : Type'} (lt2 : type1402 A) (t : type558 A B P) (s : P -> A) (clauses : type1635 A B P) : (term1364 A B P lt2 t s clauses) = (term1244 A B P lt2 t s clauses).
Proof. exact (SYM (@lem8366947 A B P lt2 t s clauses)). Qed.
Lemma lem8366962 {A : Type'} (P : Prop) (Q : A -> Prop) : (term865 A P Q) = (term866 A P Q).
Proof. exact (EQ_MP (@lem8364277 A P Q) (@lem8364276 A P Q)). Qed.
Lemma lem8366963 {A B P : Type'} (P' : Prop) (Q : type117 A B P) : (term1365 A B P P' Q) = (term1366 A B P P' Q).
Proof. exact (@lem8366962 (type560 A B P) P' Q). Qed.
Lemma lem8366964 {A B P : Type'} (P' : type551 A B) (G : type548 A B) (H' : type549 A B) (lt2 : type1402 A) (t : type558 A B P) (s : P -> A) (clauses : type1635 A B P) : (term1367 A B P P' G H' lt2 t s clauses) = (term1368 A B P P' G H' lt2 t s clauses).
Proof. exact (@lem8366963 A B P (term922 A B P lt2 clauses P' G H') (term1356 A B P lt2 t s clauses)). Qed.
Lemma lem8366965 {A B P : Type'} (P' : type560 A B P) (lt2 : type1402 A) (t : type558 A B P) (s : P -> A) (clauses : type1635 A B P) : (term1369 A B P lt2 t s clauses P') = (term1355 A B P P' lt2 t s clauses).
Proof. exact (eq_refl (term1369 A B P lt2 t s clauses P')). Qed.
Lemma lem8366966 {A B P : Type'} (lt2 : type1402 A) (t : type558 A B P) (s : P -> A) (clauses : type1635 A B P) : (term1370 A B P lt2 t s clauses) = (term1356 A B P lt2 t s clauses).
Proof. exact (fun_ext (fun P' : type560 A B P => @lem8366965 A B P P' lt2 t s clauses)). Qed.
Lemma lem8366967 {A B P : Type'} : (@all ((A -> B) -> P -> Prop)) = (@all ((A -> B) -> P -> Prop)).
Proof. exact (eq_refl (@all ((A -> B) -> P -> Prop))). Qed.
Lemma lem8366968 {A B P : Type'} (lt2 : type1402 A) (t : type558 A B P) (s : P -> A) (clauses : type1635 A B P) : (term1371 A B P lt2 t s clauses) = (term1357 A B P lt2 t s clauses).
Proof. exact (MK_COMB (@lem8366967 A B P) (@lem8366966 A B P lt2 t s clauses)). Qed.
Lemma lem8366969 {A B P : Type'} (lt2 : type1402 A) (clauses : type1635 A B P) (P' : type551 A B) (G : type548 A B) (H' : type549 A B) : (term1290 A B P lt2 clauses P' G H') = (term1290 A B P lt2 clauses P' G H').
Proof. exact (eq_refl (term1290 A B P lt2 clauses P' G H')). Qed.
Lemma lem8366970 {A B P : Type'} (P' : type551 A B) (G : type548 A B) (H' : type549 A B) (lt2 : type1402 A) (t : type558 A B P) (s : P -> A) (clauses : type1635 A B P) : (term1367 A B P P' G H' lt2 t s clauses) = (term1358 A B P P' G H' lt2 t s clauses).
Proof. exact (MK_COMB (@lem8366969 A B P lt2 clauses P' G H') (@lem8366968 A B P lt2 t s clauses)). Qed.
Lemma lem8366971 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8366972 {A B P : Type'} (P' : type551 A B) (G : type548 A B) (H' : type549 A B) (lt2 : type1402 A) (t : type558 A B P) (s : P -> A) (clauses : type1635 A B P) : (term1372 A B P P' G H' lt2 t s clauses) = (term1373 A B P P' G H' lt2 t s clauses).
Proof. exact (MK_COMB (@lem8366971) (@lem8366970 A B P P' G H' lt2 t s clauses)). Qed.
Lemma lem8366973 {A B P : Type'} (P' : type560 A B P) (lt2 : type1402 A) (t : type558 A B P) (s : P -> A) (clauses : type1635 A B P) : (term1369 A B P lt2 t s clauses P') = (term1355 A B P P' lt2 t s clauses).
Proof. exact (eq_refl (term1369 A B P lt2 t s clauses P')). Qed.
Lemma lem8366974 {A B P : Type'} (lt2 : type1402 A) (clauses : type1635 A B P) (P' : type551 A B) (G : type548 A B) (H' : type549 A B) : (term1290 A B P lt2 clauses P' G H') = (term1290 A B P lt2 clauses P' G H').
Proof. exact (eq_refl (term1290 A B P lt2 clauses P' G H')). Qed.
Lemma lem8366975 {A B P : Type'} (P' : type551 A B) (G : type548 A B) (H' : type549 A B) (P'' : type560 A B P) (lt2 : type1402 A) (t : type558 A B P) (s : P -> A) (clauses : type1635 A B P) : (term1374 A B P P' G H' lt2 t s clauses P'') = (term1375 A B P P' G H' P'' lt2 t s clauses).
Proof. exact (MK_COMB (@lem8366974 A B P lt2 clauses P' G H') (@lem8366973 A B P P'' lt2 t s clauses)). Qed.
Lemma lem8366976 {A B P : Type'} (P' : type551 A B) (G : type548 A B) (H' : type549 A B) (lt2 : type1402 A) (t : type558 A B P) (s : P -> A) (clauses : type1635 A B P) : (term1376 A B P P' G H' lt2 t s clauses) = (term1377 A B P P' G H' lt2 t s clauses).
Proof. exact (fun_ext (fun P'' : type560 A B P => @lem8366975 A B P P' G H' P'' lt2 t s clauses)). Qed.
Lemma lem8366977 {A B P : Type'} : (@all ((A -> B) -> P -> Prop)) = (@all ((A -> B) -> P -> Prop)).
Proof. exact (eq_refl (@all ((A -> B) -> P -> Prop))). Qed.
Lemma lem8366978 {A B P : Type'} (P' : type551 A B) (G : type548 A B) (H' : type549 A B) (lt2 : type1402 A) (t : type558 A B P) (s : P -> A) (clauses : type1635 A B P) : (term1368 A B P P' G H' lt2 t s clauses) = (term1378 A B P P' G H' lt2 t s clauses).
Proof. exact (MK_COMB (@lem8366977 A B P) (@lem8366976 A B P P' G H' lt2 t s clauses)). Qed.
Lemma lem8366979 {A B P : Type'} (P' : type551 A B) (G : type548 A B) (H' : type549 A B) (lt2 : type1402 A) (t : type558 A B P) (s : P -> A) (clauses : type1635 A B P) : ((term1367 A B P P' G H' lt2 t s clauses) = (term1368 A B P P' G H' lt2 t s clauses)) = ((term1358 A B P P' G H' lt2 t s clauses) = (term1378 A B P P' G H' lt2 t s clauses)).
Proof. exact (MK_COMB (@lem8366972 A B P P' G H' lt2 t s clauses) (@lem8366978 A B P P' G H' lt2 t s clauses)). Qed.
Lemma lem8366980 {A B P : Type'} (P' : type551 A B) (G : type548 A B) (H' : type549 A B) (lt2 : type1402 A) (t : type558 A B P) (s : P -> A) (clauses : type1635 A B P) : (term1358 A B P P' G H' lt2 t s clauses) = (term1378 A B P P' G H' lt2 t s clauses).
Proof. exact (EQ_MP (@lem8366979 A B P P' G H' lt2 t s clauses) (@lem8366964 A B P P' G H' lt2 t s clauses)). Qed.
Lemma lem8366986 {A : Type'} (P : Prop) (Q : A -> Prop) : (term865 A P Q) = (term866 A P Q).
Proof. exact (EQ_MP (@lem8364277 A P Q) (@lem8364276 A P Q)). Qed.
Lemma lem8366987 {A B P : Type'} (P' : Prop) (Q : type113 A B P) : (term1379 A B P P' Q) = (term1380 A B P P' Q).
Proof. exact (@lem8366986 (type557 A B P) P' Q). Qed.
Lemma lem8366988 {A B P : Type'} (P' : type551 A B) (G : type548 A B) (H' : type549 A B) (P'' : type560 A B P) (lt2 : type1402 A) (t : type558 A B P) (s : P -> A) (clauses : type1635 A B P) : (term1381 A B P P' G H' P'' lt2 t s clauses) = (term1382 A B P P' G H' P'' lt2 t s clauses).
Proof. exact (@lem8366987 A B P (term922 A B P lt2 clauses P' G H') (term1354 A B P P'' lt2 t s clauses)). Qed.
Lemma lem8366989 {A B P : Type'} (P' : type560 A B P) (G : type557 A B P) (lt2 : type1402 A) (t : type558 A B P) (s : P -> A) (clauses : type1635 A B P) : (term1383 A B P P' lt2 t s clauses G) = (term1353 A B P P' G lt2 t s clauses).
Proof. exact (eq_refl (term1383 A B P P' lt2 t s clauses G)). Qed.
Lemma lem8366990 {A B P : Type'} (P' : type560 A B P) (lt2 : type1402 A) (t : type558 A B P) (s : P -> A) (clauses : type1635 A B P) : (term1384 A B P P' lt2 t s clauses) = (term1354 A B P P' lt2 t s clauses).
Proof. exact (fun_ext (fun G : type557 A B P => @lem8366989 A B P P' G lt2 t s clauses)). Qed.
Lemma lem8366991 {A B P : Type'} : (@all ((A -> B) -> P -> A)) = (@all ((A -> B) -> P -> A)).
Proof. exact (eq_refl (@all ((A -> B) -> P -> A))). Qed.
Lemma lem8366992 {A B P : Type'} (P' : type560 A B P) (lt2 : type1402 A) (t : type558 A B P) (s : P -> A) (clauses : type1635 A B P) : (term1385 A B P P' lt2 t s clauses) = (term1355 A B P P' lt2 t s clauses).
Proof. exact (MK_COMB (@lem8366991 A B P) (@lem8366990 A B P P' lt2 t s clauses)). Qed.
Lemma lem8366993 {A B P : Type'} (lt2 : type1402 A) (clauses : type1635 A B P) (P' : type551 A B) (G : type548 A B) (H' : type549 A B) : (term1290 A B P lt2 clauses P' G H') = (term1290 A B P lt2 clauses P' G H').
Proof. exact (eq_refl (term1290 A B P lt2 clauses P' G H')). Qed.
Lemma lem8366994 {A B P : Type'} (P' : type551 A B) (G : type548 A B) (H' : type549 A B) (P'' : type560 A B P) (lt2 : type1402 A) (t : type558 A B P) (s : P -> A) (clauses : type1635 A B P) : (term1381 A B P P' G H' P'' lt2 t s clauses) = (term1375 A B P P' G H' P'' lt2 t s clauses).
Proof. exact (MK_COMB (@lem8366993 A B P lt2 clauses P' G H') (@lem8366992 A B P P'' lt2 t s clauses)). Qed.
Lemma lem8366995 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8366996 {A B P : Type'} (P' : type551 A B) (G : type548 A B) (H' : type549 A B) (P'' : type560 A B P) (lt2 : type1402 A) (t : type558 A B P) (s : P -> A) (clauses : type1635 A B P) : (term1386 A B P P' G H' P'' lt2 t s clauses) = (term1387 A B P P' G H' P'' lt2 t s clauses).
Proof. exact (MK_COMB (@lem8366995) (@lem8366994 A B P P' G H' P'' lt2 t s clauses)). Qed.
Lemma lem8366997 {A B P : Type'} (P' : type560 A B P) (G : type557 A B P) (lt2 : type1402 A) (t : type558 A B P) (s : P -> A) (clauses : type1635 A B P) : (term1383 A B P P' lt2 t s clauses G) = (term1353 A B P P' G lt2 t s clauses).
Proof. exact (eq_refl (term1383 A B P P' lt2 t s clauses G)). Qed.
Lemma lem8366998 {A B P : Type'} (lt2 : type1402 A) (clauses : type1635 A B P) (P' : type551 A B) (G : type548 A B) (H' : type549 A B) : (term1290 A B P lt2 clauses P' G H') = (term1290 A B P lt2 clauses P' G H').
Proof. exact (eq_refl (term1290 A B P lt2 clauses P' G H')). Qed.
Lemma lem8366999 {A B P : Type'} (P' : type551 A B) (G : type548 A B) (H' : type549 A B) (P'' : type560 A B P) (G' : type557 A B P) (lt2 : type1402 A) (t : type558 A B P) (s : P -> A) (clauses : type1635 A B P) : (term1388 A B P P' G H' P'' lt2 t s clauses G') = (term1389 A B P P' G H' P'' G' lt2 t s clauses).
Proof. exact (MK_COMB (@lem8366998 A B P lt2 clauses P' G H') (@lem8366997 A B P P'' G' lt2 t s clauses)). Qed.
Lemma lem8367000 {A B P : Type'} (P' : type551 A B) (G : type548 A B) (H' : type549 A B) (P'' : type560 A B P) (lt2 : type1402 A) (t : type558 A B P) (s : P -> A) (clauses : type1635 A B P) : (term1390 A B P P' G H' P'' lt2 t s clauses) = (term1391 A B P P' G H' P'' lt2 t s clauses).
Proof. exact (fun_ext (fun G' : type557 A B P => @lem8366999 A B P P' G H' P'' G' lt2 t s clauses)). Qed.
Lemma lem8367001 {A B P : Type'} : (@all ((A -> B) -> P -> A)) = (@all ((A -> B) -> P -> A)).
Proof. exact (eq_refl (@all ((A -> B) -> P -> A))). Qed.
Lemma lem8367002 {A B P : Type'} (P' : type551 A B) (G : type548 A B) (H' : type549 A B) (P'' : type560 A B P) (lt2 : type1402 A) (t : type558 A B P) (s : P -> A) (clauses : type1635 A B P) : (term1382 A B P P' G H' P'' lt2 t s clauses) = (term1392 A B P P' G H' P'' lt2 t s clauses).
Proof. exact (MK_COMB (@lem8367001 A B P) (@lem8367000 A B P P' G H' P'' lt2 t s clauses)). Qed.
Lemma lem8367003 {A B P : Type'} (P' : type551 A B) (G : type548 A B) (H' : type549 A B) (P'' : type560 A B P) (lt2 : type1402 A) (t : type558 A B P) (s : P -> A) (clauses : type1635 A B P) : ((term1381 A B P P' G H' P'' lt2 t s clauses) = (term1382 A B P P' G H' P'' lt2 t s clauses)) = ((term1375 A B P P' G H' P'' lt2 t s clauses) = (term1392 A B P P' G H' P'' lt2 t s clauses)).
Proof. exact (MK_COMB (@lem8366996 A B P P' G H' P'' lt2 t s clauses) (@lem8367002 A B P P' G H' P'' lt2 t s clauses)). Qed.
Lemma lem8367004 {A B P : Type'} (P' : type551 A B) (G : type548 A B) (H' : type549 A B) (P'' : type560 A B P) (lt2 : type1402 A) (t : type558 A B P) (s : P -> A) (clauses : type1635 A B P) : (term1375 A B P P' G H' P'' lt2 t s clauses) = (term1392 A B P P' G H' P'' lt2 t s clauses).
Proof. exact (EQ_MP (@lem8367003 A B P P' G H' P'' lt2 t s clauses) (@lem8366988 A B P P' G H' P'' lt2 t s clauses)). Qed.
Lemma lem8367010 {A : Type'} (P : Prop) (Q : A -> Prop) : (term865 A P Q) = (term866 A P Q).
Proof. exact (EQ_MP (@lem8364277 A P Q) (@lem8364276 A P Q)). Qed.
Lemma lem8367011 {A B P : Type'} (P' : Prop) (Q : type116 A B P) : (term1393 A B P P' Q) = (term1394 A B P P' Q).
Proof. exact (@lem8367010 (type558 A B P) P' Q). Qed.
Lemma lem8367012 {A B P : Type'} (P' : type551 A B) (G : type548 A B) (H' : type549 A B) (P'' : type560 A B P) (G' : type557 A B P) (lt2 : type1402 A) (t : type558 A B P) (s : P -> A) (clauses : type1635 A B P) : (term1395 A B P P' G H' P'' G' lt2 t s clauses) = (term1396 A B P P' G H' P'' G' lt2 t s clauses).
Proof. exact (@lem8367011 A B P (term922 A B P lt2 clauses P' G H') (term1352 A B P P'' G' lt2 t s clauses)). Qed.
Lemma lem8367013 {A B P : Type'} (P' : type560 A B P) (G : type557 A B P) (H : type558 A B P) (lt2 : type1402 A) (t : type558 A B P) (s : P -> A) (clauses : type1635 A B P) : (term1397 A B P P' G lt2 t s clauses H) = (term1350 A B P P' G H lt2 t s clauses).
Proof. exact (eq_refl (term1397 A B P P' G lt2 t s clauses H)). Qed.
Lemma lem8367014 {A B P : Type'} (P' : type560 A B P) (G : type557 A B P) (lt2 : type1402 A) (t : type558 A B P) (s : P -> A) (clauses : type1635 A B P) : (term1398 A B P P' G lt2 t s clauses) = (term1352 A B P P' G lt2 t s clauses).
Proof. exact (fun_ext (fun H : type558 A B P => @lem8367013 A B P P' G H lt2 t s clauses)). Qed.
Lemma lem8367015 {A B P : Type'} : (@all ((A -> B) -> P -> B)) = (@all ((A -> B) -> P -> B)).
Proof. exact (eq_refl (@all ((A -> B) -> P -> B))). Qed.
Lemma lem8367016 {A B P : Type'} (P' : type560 A B P) (G : type557 A B P) (lt2 : type1402 A) (t : type558 A B P) (s : P -> A) (clauses : type1635 A B P) : (term1399 A B P P' G lt2 t s clauses) = (term1353 A B P P' G lt2 t s clauses).
Proof. exact (MK_COMB (@lem8367015 A B P) (@lem8367014 A B P P' G lt2 t s clauses)). Qed.
Lemma lem8367017 {A B P : Type'} (lt2 : type1402 A) (clauses : type1635 A B P) (P' : type551 A B) (G : type548 A B) (H' : type549 A B) : (term1290 A B P lt2 clauses P' G H') = (term1290 A B P lt2 clauses P' G H').
Proof. exact (eq_refl (term1290 A B P lt2 clauses P' G H')). Qed.
Lemma lem8367018 {A B P : Type'} (P' : type551 A B) (G : type548 A B) (H' : type549 A B) (P'' : type560 A B P) (G' : type557 A B P) (lt2 : type1402 A) (t : type558 A B P) (s : P -> A) (clauses : type1635 A B P) : (term1395 A B P P' G H' P'' G' lt2 t s clauses) = (term1389 A B P P' G H' P'' G' lt2 t s clauses).
Proof. exact (MK_COMB (@lem8367017 A B P lt2 clauses P' G H') (@lem8367016 A B P P'' G' lt2 t s clauses)). Qed.
Lemma lem8367019 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8367020 {A B P : Type'} (P' : type551 A B) (G : type548 A B) (H' : type549 A B) (P'' : type560 A B P) (G' : type557 A B P) (lt2 : type1402 A) (t : type558 A B P) (s : P -> A) (clauses : type1635 A B P) : (term1400 A B P P' G H' P'' G' lt2 t s clauses) = (term1401 A B P P' G H' P'' G' lt2 t s clauses).
Proof. exact (MK_COMB (@lem8367019) (@lem8367018 A B P P' G H' P'' G' lt2 t s clauses)). Qed.
Lemma lem8367021 {A B P : Type'} (P' : type560 A B P) (G : type557 A B P) (H : type558 A B P) (lt2 : type1402 A) (t : type558 A B P) (s : P -> A) (clauses : type1635 A B P) : (term1397 A B P P' G lt2 t s clauses H) = (term1350 A B P P' G H lt2 t s clauses).
Proof. exact (eq_refl (term1397 A B P P' G lt2 t s clauses H)). Qed.
Lemma lem8367022 {A B P : Type'} (lt2 : type1402 A) (clauses : type1635 A B P) (P' : type551 A B) (G : type548 A B) (H' : type549 A B) : (term1290 A B P lt2 clauses P' G H') = (term1290 A B P lt2 clauses P' G H').
Proof. exact (eq_refl (term1290 A B P lt2 clauses P' G H')). Qed.
Lemma lem8367023 {A B P : Type'} (P' : type551 A B) (G : type548 A B) (H' : type549 A B) (P'' : type560 A B P) (G' : type557 A B P) (H : type558 A B P) (lt2 : type1402 A) (t : type558 A B P) (s : P -> A) (clauses : type1635 A B P) : (term1402 A B P P' G H' P'' G' lt2 t s clauses H) = (term1403 A B P P' G H' P'' G' H lt2 t s clauses).
Proof. exact (MK_COMB (@lem8367022 A B P lt2 clauses P' G H') (@lem8367021 A B P P'' G' H lt2 t s clauses)). Qed.
Lemma lem8367024 {A B P : Type'} (P' : type551 A B) (G : type548 A B) (H' : type549 A B) (P'' : type560 A B P) (G' : type557 A B P) (lt2 : type1402 A) (t : type558 A B P) (s : P -> A) (clauses : type1635 A B P) : (term1404 A B P P' G H' P'' G' lt2 t s clauses) = (term1405 A B P P' G H' P'' G' lt2 t s clauses).
Proof. exact (fun_ext (fun H : type558 A B P => @lem8367023 A B P P' G H' P'' G' H lt2 t s clauses)). Qed.
Lemma lem8367025 {A B P : Type'} : (@all ((A -> B) -> P -> B)) = (@all ((A -> B) -> P -> B)).
Proof. exact (eq_refl (@all ((A -> B) -> P -> B))). Qed.
Lemma lem8367026 {A B P : Type'} (P' : type551 A B) (G : type548 A B) (H' : type549 A B) (P'' : type560 A B P) (G' : type557 A B P) (lt2 : type1402 A) (t : type558 A B P) (s : P -> A) (clauses : type1635 A B P) : (term1396 A B P P' G H' P'' G' lt2 t s clauses) = (term1406 A B P P' G H' P'' G' lt2 t s clauses).
Proof. exact (MK_COMB (@lem8367025 A B P) (@lem8367024 A B P P' G H' P'' G' lt2 t s clauses)). Qed.
Lemma lem8367027 {A B P : Type'} (P' : type551 A B) (G : type548 A B) (H' : type549 A B) (P'' : type560 A B P) (G' : type557 A B P) (lt2 : type1402 A) (t : type558 A B P) (s : P -> A) (clauses : type1635 A B P) : ((term1395 A B P P' G H' P'' G' lt2 t s clauses) = (term1396 A B P P' G H' P'' G' lt2 t s clauses)) = ((term1389 A B P P' G H' P'' G' lt2 t s clauses) = (term1406 A B P P' G H' P'' G' lt2 t s clauses)).
Proof. exact (MK_COMB (@lem8367020 A B P P' G H' P'' G' lt2 t s clauses) (@lem8367026 A B P P' G H' P'' G' lt2 t s clauses)). Qed.
Lemma lem8367028 {A B P : Type'} (P' : type551 A B) (G : type548 A B) (H' : type549 A B) (P'' : type560 A B P) (G' : type557 A B P) (lt2 : type1402 A) (t : type558 A B P) (s : P -> A) (clauses : type1635 A B P) : (term1389 A B P P' G H' P'' G' lt2 t s clauses) = (term1406 A B P P' G H' P'' G' lt2 t s clauses).
Proof. exact (EQ_MP (@lem8367027 A B P P' G H' P'' G' lt2 t s clauses) (@lem8367012 A B P P' G H' P'' G' lt2 t s clauses)). Qed.
Lemma lem8367245 {A B P : Type'} (P' : type551 A B) (G : type548 A B) (H' : type549 A B) (P'' : type560 A B P) (lt2 : type1402 A) (t : type558 A B P) (s : P -> A) (clauses : type1635 A B P) : (term1391 A B P P' G H' P'' lt2 t s clauses) = (term1407 A B P P' G H' P'' lt2 t s clauses).
Proof. exact (fun_ext (fun G' : type557 A B P => @lem8367028 A B P P' G H' P'' G' lt2 t s clauses)). Qed.
Lemma lem8367246 {A B P : Type'} : (@all ((A -> B) -> P -> A)) = (@all ((A -> B) -> P -> A)).
Proof. exact (eq_refl (@all ((A -> B) -> P -> A))). Qed.
Lemma lem8367247 {A B P : Type'} (P' : type551 A B) (G : type548 A B) (H' : type549 A B) (P'' : type560 A B P) (lt2 : type1402 A) (t : type558 A B P) (s : P -> A) (clauses : type1635 A B P) : (term1392 A B P P' G H' P'' lt2 t s clauses) = (term1408 A B P P' G H' P'' lt2 t s clauses).
Proof. exact (MK_COMB (@lem8367246 A B P) (@lem8367245 A B P P' G H' P'' lt2 t s clauses)). Qed.
Lemma lem8367252 {A B P : Type'} (P' : type551 A B) (G : type548 A B) (H' : type549 A B) (P'' : type560 A B P) (lt2 : type1402 A) (t : type558 A B P) (s : P -> A) (clauses : type1635 A B P) : (term1375 A B P P' G H' P'' lt2 t s clauses) = (term1408 A B P P' G H' P'' lt2 t s clauses).
Proof. exact (TRANS (@lem8367004 A B P P' G H' P'' lt2 t s clauses) (@lem8367247 A B P P' G H' P'' lt2 t s clauses)). Qed.
Lemma lem8367253 {A B P : Type'} (P' : type551 A B) (G : type548 A B) (H' : type549 A B) (lt2 : type1402 A) (t : type558 A B P) (s : P -> A) (clauses : type1635 A B P) : (term1377 A B P P' G H' lt2 t s clauses) = (term1409 A B P P' G H' lt2 t s clauses).
Proof. exact (fun_ext (fun P'' : type560 A B P => @lem8367252 A B P P' G H' P'' lt2 t s clauses)). Qed.
Lemma lem8367254 {A B P : Type'} : (@all ((A -> B) -> P -> Prop)) = (@all ((A -> B) -> P -> Prop)).
Proof. exact (eq_refl (@all ((A -> B) -> P -> Prop))). Qed.
Lemma lem8367255 {A B P : Type'} (P' : type551 A B) (G : type548 A B) (H' : type549 A B) (lt2 : type1402 A) (t : type558 A B P) (s : P -> A) (clauses : type1635 A B P) : (term1378 A B P P' G H' lt2 t s clauses) = (term1410 A B P P' G H' lt2 t s clauses).
Proof. exact (MK_COMB (@lem8367254 A B P) (@lem8367253 A B P P' G H' lt2 t s clauses)). Qed.
Lemma lem8367260 {A B P : Type'} (P' : type551 A B) (G : type548 A B) (H' : type549 A B) (lt2 : type1402 A) (t : type558 A B P) (s : P -> A) (clauses : type1635 A B P) : (term1358 A B P P' G H' lt2 t s clauses) = (term1410 A B P P' G H' lt2 t s clauses).
Proof. exact (TRANS (@lem8366980 A B P P' G H' lt2 t s clauses) (@lem8367255 A B P P' G H' lt2 t s clauses)). Qed.
Lemma lem8367261 {A B P : Type'} (P' : type551 A B) (G : type548 A B) (lt2 : type1402 A) (t : type558 A B P) (s : P -> A) (clauses : type1635 A B P) : (term1359 A B P P' G lt2 t s clauses) = (term1411 A B P P' G lt2 t s clauses).
Proof. exact (fun_ext (fun H' : type549 A B => @lem8367260 A B P P' G H' lt2 t s clauses)). Qed.
Lemma lem8367262 {A B : Type'} : (@all ((A -> B) -> A -> B)) = (@all ((A -> B) -> A -> B)).
Proof. exact (eq_refl (@all ((A -> B) -> A -> B))). Qed.
Lemma lem8367263 {A B P : Type'} (P' : type551 A B) (G : type548 A B) (lt2 : type1402 A) (t : type558 A B P) (s : P -> A) (clauses : type1635 A B P) : (term1360 A B P P' G lt2 t s clauses) = (term1412 A B P P' G lt2 t s clauses).
Proof. exact (MK_COMB (@lem8367262 A B) (@lem8367261 A B P P' G lt2 t s clauses)). Qed.
Lemma lem8367268 {A B P : Type'} (P' : type551 A B) (lt2 : type1402 A) (t : type558 A B P) (s : P -> A) (clauses : type1635 A B P) : (term1361 A B P P' lt2 t s clauses) = (term1413 A B P P' lt2 t s clauses).
Proof. exact (fun_ext (fun G : type548 A B => @lem8367263 A B P P' G lt2 t s clauses)). Qed.
Lemma lem8367269 {A B : Type'} : (@all ((A -> B) -> A -> A)) = (@all ((A -> B) -> A -> A)).
Proof. exact (eq_refl (@all ((A -> B) -> A -> A))). Qed.
Lemma lem8367270 {A B P : Type'} (P' : type551 A B) (lt2 : type1402 A) (t : type558 A B P) (s : P -> A) (clauses : type1635 A B P) : (term1362 A B P P' lt2 t s clauses) = (term1414 A B P P' lt2 t s clauses).
Proof. exact (MK_COMB (@lem8367269 A B) (@lem8367268 A B P P' lt2 t s clauses)). Qed.
Lemma lem8367275 {A B P : Type'} (lt2 : type1402 A) (t : type558 A B P) (s : P -> A) (clauses : type1635 A B P) : (term1363 A B P lt2 t s clauses) = (term1415 A B P lt2 t s clauses).
Proof. exact (fun_ext (fun P' : type551 A B => @lem8367270 A B P P' lt2 t s clauses)). Qed.
Lemma lem8367276 {A B : Type'} : (@all ((A -> B) -> A -> Prop)) = (@all ((A -> B) -> A -> Prop)).
Proof. exact (eq_refl (@all ((A -> B) -> A -> Prop))). Qed.
Lemma lem8367277 {A B P : Type'} (lt2 : type1402 A) (t : type558 A B P) (s : P -> A) (clauses : type1635 A B P) : (term1364 A B P lt2 t s clauses) = (term1416 A B P lt2 t s clauses).
Proof. exact (MK_COMB (@lem8367276 A B) (@lem8367275 A B P lt2 t s clauses)). Qed.
Lemma lem8367282 {A B P : Type'} (lt2 : type1402 A) (t : type558 A B P) (s : P -> A) (clauses : type1635 A B P) : (term1416 A B P lt2 t s clauses) = (term1364 A B P lt2 t s clauses).
Proof. exact (SYM (@lem8367277 A B P lt2 t s clauses)). Qed.
Lemma lem8367283 {A B P : Type'} (lt2 : type1402 A) (clauses : type1635 A B P) (P1 : type551 A B) (G1 : type548 A B) (H1 : type549 A B) (h1 : term922 A B P lt2 clauses P1 G1 H1) : term922 A B P lt2 clauses P1 G1 H1.
Proof. exact (h1). Qed.
Lemma lem8367284 {A B P : Type'} (lt2 : type1402 A) (clauses : type1635 A B P) (P1 : type551 A B) (G1 : type548 A B) (H1 : type549 A B) (h1 : term919 A B P lt2 clauses P1 G1 H1) : term919 A B P lt2 clauses P1 G1 H1.
Proof. exact (h1). Qed.
Lemma lem8367285 {A B : Type'} (lt2 : type1402 A) (P1 : type551 A B) (G1 : type548 A B) (H1 : type549 A B) (h1 : term1417 A B lt2 P1 G1 H1) : term1417 A B lt2 P1 G1 H1.
Proof. exact (h1). Qed.
Lemma lem8367286 {A B P : Type'} (clauses : type1635 A B P) (P1 : type551 A B) (G1 : type548 A B) (H1 : type549 A B) (h1 : term916 A B P clauses P1 G1 H1) : term916 A B P clauses P1 G1 H1.
Proof. exact (h1). Qed.
Lemma lem8367287 {A B : Type'} (P1 : type551 A B) (G1 : type548 A B) (lt2 : type1402 A) (h1 : term1418 A B P1 G1 lt2) : term1418 A B P1 G1 lt2.
Proof. exact (h1). Qed.
Lemma lem8367288 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (t : type558 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (h1 : term1341 A B P lt2 s t P2 G2 H2) : term1341 A B P lt2 s t P2 G2 H2.
Proof. exact (h1). Qed.
Lemma lem8367289 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (t : type558 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (h1 : term1419 A B P lt2 s t P2 G2 H2) : term1419 A B P lt2 s t P2 G2 H2.
Proof. exact (h1). Qed.
Lemma lem8367290 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (lt2 : type1402 A) (s : P -> A) (h1 : term1420 A B P P2 G2 lt2 s) : term1420 A B P P2 G2 lt2 s.
Proof. exact (h1). Qed.
Lemma lem8367291 {A B P : Type'} (t : type558 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (h1 : term1421 A B P t P2 G2 H2) : term1421 A B P t P2 G2 H2.
Proof. exact (h1). Qed.
Lemma lem8367292 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (h1 : term1422 A B P lt2 s P2 G2 H2) : term1422 A B P lt2 s P2 G2 H2.
Proof. exact (h1). Qed.
Lemma lem8367315 {A B P : Type'} (f : A -> B) (clauses : type1635 A B P) (P1 : type551 A B) (G1 : type548 A B) (H1 : type549 A B) (h1 : term916 A B P clauses P1 G1 H1) : term1423 A B P clauses P1 G1 H1 f.
Proof. exact (@lem8367286 A B P clauses P1 G1 H1 h1 f). Qed.
Lemma lem8367316 {A B P : Type'} (clauses : type1635 A B P) (P1 : type551 A B) (G1 : type548 A B) (H1 : type549 A B) (f : A -> B) : (term1423 A B P clauses P1 G1 H1 f) = (term912 A B P clauses P1 G1 H1 f).
Proof. exact (eq_refl (term1423 A B P clauses P1 G1 H1 f)). Qed.
Lemma lem8367317 {A B P : Type'} (f : A -> B) (clauses : type1635 A B P) (P1 : type551 A B) (G1 : type548 A B) (H1 : type549 A B) (h1 : term916 A B P clauses P1 G1 H1) : term912 A B P clauses P1 G1 H1 f.
Proof. exact (EQ_MP (@lem8367316 A B P clauses P1 G1 H1 f) (@lem8367315 A B P f clauses P1 G1 H1 h1)). Qed.
Lemma lem8367318 {A B P : Type'} (f : A -> B) (x : A) (clauses : type1635 A B P) (P1 : type551 A B) (G1 : type548 A B) (H1 : type549 A B) (h1 : term916 A B P clauses P1 G1 H1) : term1424 A B P clauses P1 G1 H1 f x.
Proof. exact (@lem8367317 A B P f clauses P1 G1 H1 h1 x). Qed.
Lemma lem8367319 {A B P : Type'} (clauses : type1635 A B P) (P1 : type551 A B) (G1 : type548 A B) (H1 : type549 A B) (f : A -> B) (x : A) : (term1424 A B P clauses P1 G1 H1 f x) = ((@CASEWISE B P A (A -> B) clauses f x) = (term908 A B P1 G1 H1 f x)).
Proof. exact (eq_refl (term1424 A B P clauses P1 G1 H1 f x)). Qed.
Lemma lem8367343 {A B P : Type'} (f : A -> B) (t : type558 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (h1 : term1421 A B P t P2 G2 H2) : term1425 A B P t P2 G2 H2 f.
Proof. exact (@lem8367291 A B P t P2 G2 H2 h1 f). Qed.
Lemma lem8367344 {A B P : Type'} (t : type558 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (f : A -> B) : (term1425 A B P t P2 G2 H2 f) = (term1426 A B P t P2 G2 H2 f).
Proof. exact (eq_refl (term1425 A B P t P2 G2 H2 f)). Qed.
Lemma lem8367345 {A B P : Type'} (f : A -> B) (t : type558 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (h1 : term1421 A B P t P2 G2 H2) : term1426 A B P t P2 G2 H2 f.
Proof. exact (EQ_MP (@lem8367344 A B P t P2 G2 H2 f) (@lem8367343 A B P f t P2 G2 H2 h1)). Qed.
Lemma lem8367346 {A B P : Type'} (f : A -> B) (a : P) (t : type558 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (h1 : term1421 A B P t P2 G2 H2) : term1427 A B P t P2 G2 H2 f a.
Proof. exact (@lem8367345 A B P f t P2 G2 H2 h1 a). Qed.
Lemma lem8367347 {A B P : Type'} (t : type558 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (f : A -> B) (a : P) : (term1427 A B P t P2 G2 H2 f a) = ((t f a) = (term1428 A B P P2 G2 H2 f a)).
Proof. exact (eq_refl (term1427 A B P t P2 G2 H2 f a)). Qed.
Lemma lem8367430 {A B P : Type'} (f : A -> B) (a : P) (t : type558 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (h1 : term1421 A B P t P2 G2 H2) : (t f a) = (term1428 A B P P2 G2 H2 f a).
Proof. exact (EQ_MP (@lem8367347 A B P t P2 G2 H2 f a) (@lem8367346 A B P f a t P2 G2 H2 h1)). Qed.
Lemma lem8367431 {A B P : Type'} (f : A -> B) (a : P) (t : type558 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (h1 : term1421 A B P t P2 G2 H2) : (t f a) = (term1428 A B P P2 G2 H2 f a).
Proof. exact (@lem8367430 A B P f a t P2 G2 H2 h1). Qed.
Lemma lem8367432 {A B P : Type'} (f : A -> B) (s : P -> A) (x : A) (t : type558 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (h1 : term1421 A B P t P2 G2 H2) : (term1429 A B P t f s x) = (term1430 A B P P2 G2 H2 f s x).
Proof. exact (@lem8367431 A B P f (term1431 A P s x) t P2 G2 H2 h1). Qed.
Lemma lem8367445 {A B P : Type'} (s : P -> A) (x : A) : (term1432 A B P s x) = (term1432 A B P s x).
Proof. exact (eq_refl (term1432 A B P s x)). Qed.
Lemma lem8367446 {A B P : Type'} (f : A -> B) (s : P -> A) (x : A) (t : type558 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (h1 : term1421 A B P t P2 G2 H2) : (term1433 A B P t f s x) = (term1434 A B P P2 G2 H2 f s x).
Proof. exact (MK_COMB (@lem8367445 A B P s x) (@lem8367432 A B P f s x t P2 G2 H2 h1)). Qed.
Lemma lem8367448 {A B P : Type'} (f : A -> B) (x : A) (clauses : type1635 A B P) (P1 : type551 A B) (G1 : type548 A B) (H1 : type549 A B) (h1 : term916 A B P clauses P1 G1 H1) : (@CASEWISE B P A (A -> B) clauses f x) = (term908 A B P1 G1 H1 f x).
Proof. exact (EQ_MP (@lem8367319 A B P clauses P1 G1 H1 f x) (@lem8367318 A B P f x clauses P1 G1 H1 h1)). Qed.
Lemma lem8367449 {A B P : Type'} (f : A -> B) (x : A) (clauses : type1635 A B P) (P1 : type551 A B) (G1 : type548 A B) (H1 : type549 A B) (h1 : term916 A B P clauses P1 G1 H1) : (@CASEWISE B P A (A -> B) clauses f x) = (term908 A B P1 G1 H1 f x).
Proof. exact (@lem8367448 A B P f x clauses P1 G1 H1 h1). Qed.
Lemma lem8367450 {A B P : Type'} (s : P -> A) (f : A -> B) (x : A) (clauses : type1635 A B P) (P1 : type551 A B) (G1 : type548 A B) (H1 : type549 A B) (t : type558 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (h1 : term916 A B P clauses P1 G1 H1) (h2 : term1421 A B P t P2 G2 H2) : (term1105 A B P t s clauses f x) = (term1435 A B P P2 G2 H2 s P1 G1 H1 f x).
Proof. exact (MK_COMB (@lem8367446 A B P f s x t P2 G2 H2 h2) (@lem8367449 A B P f x clauses P1 G1 H1 h1)). Qed.
Lemma lem8367451 {B : Type'} : (@eq B) = (@eq B).
Proof. exact (eq_refl (@eq B)). Qed.
Lemma lem8367452 {A B P : Type'} (s : P -> A) (f : A -> B) (x : A) (clauses : type1635 A B P) (P1 : type551 A B) (G1 : type548 A B) (H1 : type549 A B) (t : type558 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (h1 : term916 A B P clauses P1 G1 H1) (h2 : term1421 A B P t P2 G2 H2) : (term1107 A B P t s clauses f x) = (term1436 A B P P2 G2 H2 s P1 G1 H1 f x).
Proof. exact (MK_COMB (@lem8367451 B) (@lem8367450 A B P s f x clauses P1 G1 H1 t P2 G2 H2 h1 h2)). Qed.
Lemma lem8367453 {A B : Type'} (P : type551 A B) (G : type548 A B) (H' : type549 A B) (f : A -> B) (x : A) : (term908 A B P G H' f x) = (term908 A B P G H' f x).
Proof. exact (eq_refl (term908 A B P G H' f x)). Qed.
Lemma lem8367454 {A B P : Type'} (s : P -> A) (P' : type551 A B) (G : type548 A B) (H' : type549 A B) (f : A -> B) (x : A) (clauses : type1635 A B P) (P1 : type551 A B) (G1 : type548 A B) (H1 : type549 A B) (t : type558 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (h1 : term916 A B P clauses P1 G1 H1) (h2 : term1421 A B P t P2 G2 H2) : ((term1105 A B P t s clauses f x) = (term908 A B P' G H' f x)) = ((term1435 A B P P2 G2 H2 s P1 G1 H1 f x) = (term908 A B P' G H' f x)).
Proof. exact (MK_COMB (@lem8367452 A B P s f x clauses P1 G1 H1 t P2 G2 H2 h1 h2) (@lem8367453 A B P' G H' f x)). Qed.
Lemma lem8367457 {A B P : Type'} (s : P -> A) (P' : type551 A B) (G : type548 A B) (H' : type549 A B) (f : A -> B) (clauses : type1635 A B P) (P1 : type551 A B) (G1 : type548 A B) (H1 : type549 A B) (t : type558 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (h1 : term916 A B P clauses P1 G1 H1) (h2 : term1421 A B P t P2 G2 H2) : (term1109 A B P t s clauses P' G H' f) = (term1437 A B P P2 G2 H2 s P1 G1 H1 P' G H' f).
Proof. exact (fun_ext (fun x : A => @lem8367454 A B P s P' G H' f x clauses P1 G1 H1 t P2 G2 H2 h1 h2)). Qed.
Lemma lem8367458 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem8367459 {A B P : Type'} (s : P -> A) (P' : type551 A B) (G : type548 A B) (H' : type549 A B) (f : A -> B) (clauses : type1635 A B P) (P1 : type551 A B) (G1 : type548 A B) (H1 : type549 A B) (t : type558 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (h1 : term916 A B P clauses P1 G1 H1) (h2 : term1421 A B P t P2 G2 H2) : (term1111 A B P t s clauses P' G H' f) = (term1438 A B P P2 G2 H2 s P1 G1 H1 P' G H' f).
Proof. exact (MK_COMB (@lem8367458 A) (@lem8367457 A B P s P' G H' f clauses P1 G1 H1 t P2 G2 H2 h1 h2)). Qed.
Lemma lem8367464 {A B P : Type'} (s : P -> A) (P' : type551 A B) (G : type548 A B) (H' : type549 A B) (clauses : type1635 A B P) (P1 : type551 A B) (G1 : type548 A B) (H1 : type549 A B) (t : type558 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (h1 : term916 A B P clauses P1 G1 H1) (h2 : term1421 A B P t P2 G2 H2) : (term1113 A B P t s clauses P' G H') = (term1439 A B P P2 G2 H2 s P1 G1 H1 P' G H').
Proof. exact (fun_ext (fun f : A -> B => @lem8367459 A B P s P' G H' f clauses P1 G1 H1 t P2 G2 H2 h1 h2)). Qed.
Lemma lem8367465 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem8367466 {A B P : Type'} (s : P -> A) (P' : type551 A B) (G : type548 A B) (H' : type549 A B) (clauses : type1635 A B P) (P1 : type551 A B) (G1 : type548 A B) (H1 : type549 A B) (t : type558 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (h1 : term916 A B P clauses P1 G1 H1) (h2 : term1421 A B P t P2 G2 H2) : (term1115 A B P t s clauses P' G H') = (term1440 A B P P2 G2 H2 s P1 G1 H1 P' G H').
Proof. exact (MK_COMB (@lem8367465 A B) (@lem8367464 A B P s P' G H' clauses P1 G1 H1 t P2 G2 H2 h1 h2)). Qed.
Lemma lem8367471 {A B : Type'} (P : type551 A B) (G : type548 A B) (lt2 : type1402 A) : (term917 A B P G lt2) = (term917 A B P G lt2).
Proof. exact (eq_refl (term917 A B P G lt2)). Qed.
Lemma lem8367472 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (P' : type551 A B) (G : type548 A B) (H' : type549 A B) (clauses : type1635 A B P) (P1 : type551 A B) (G1 : type548 A B) (H1 : type549 A B) (t : type558 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (h1 : term916 A B P clauses P1 G1 H1) (h2 : term1421 A B P t P2 G2 H2) : (term1117 A B P lt2 t s clauses P' G H') = (term1441 A B P lt2 P2 G2 H2 s P1 G1 H1 P' G H').
Proof. exact (MK_COMB (@lem8367471 A B P' G lt2) (@lem8367466 A B P s P' G H' clauses P1 G1 H1 t P2 G2 H2 h1 h2)). Qed.
Lemma lem8367475 {A B : Type'} (lt2 : type1402 A) (P : type551 A B) (G : type548 A B) (H' : type549 A B) : (term920 A B lt2 P G H') = (term920 A B lt2 P G H').
Proof. exact (eq_refl (term920 A B lt2 P G H')). Qed.
Lemma lem8367476 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (P' : type551 A B) (G : type548 A B) (H' : type549 A B) (clauses : type1635 A B P) (P1 : type551 A B) (G1 : type548 A B) (H1 : type549 A B) (t : type558 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (h1 : term916 A B P clauses P1 G1 H1) (h2 : term1421 A B P t P2 G2 H2) : (term1119 A B P lt2 t s clauses P' G H') = (term1442 A B P lt2 P2 G2 H2 s P1 G1 H1 P' G H').
Proof. exact (MK_COMB (@lem8367475 A B lt2 P' G H') (@lem8367472 A B P lt2 s P' G H' clauses P1 G1 H1 t P2 G2 H2 h1 h2)). Qed.
Lemma lem8367479 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (P' : type551 A B) (G : type548 A B) (clauses : type1635 A B P) (P1 : type551 A B) (G1 : type548 A B) (H1 : type549 A B) (t : type558 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (h1 : term916 A B P clauses P1 G1 H1) (h2 : term1421 A B P t P2 G2 H2) : (term1121 A B P lt2 t s clauses P' G) = (term1443 A B P lt2 P2 G2 H2 s P1 G1 H1 P' G).
Proof. exact (fun_ext (fun H' : type549 A B => @lem8367476 A B P lt2 s P' G H' clauses P1 G1 H1 t P2 G2 H2 h1 h2)). Qed.
Lemma lem8367480 {A B : Type'} : (@ex ((A -> B) -> A -> B)) = (@ex ((A -> B) -> A -> B)).
Proof. exact (eq_refl (@ex ((A -> B) -> A -> B))). Qed.
Lemma lem8367481 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (P' : type551 A B) (G : type548 A B) (clauses : type1635 A B P) (P1 : type551 A B) (G1 : type548 A B) (H1 : type549 A B) (t : type558 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (h1 : term916 A B P clauses P1 G1 H1) (h2 : term1421 A B P t P2 G2 H2) : (term1123 A B P lt2 t s clauses P' G) = (term1444 A B P lt2 P2 G2 H2 s P1 G1 H1 P' G).
Proof. exact (MK_COMB (@lem8367480 A B) (@lem8367479 A B P lt2 s P' G clauses P1 G1 H1 t P2 G2 H2 h1 h2)). Qed.
Lemma lem8367486 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (P' : type551 A B) (clauses : type1635 A B P) (P1 : type551 A B) (G1 : type548 A B) (H1 : type549 A B) (t : type558 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (h1 : term916 A B P clauses P1 G1 H1) (h2 : term1421 A B P t P2 G2 H2) : (term1125 A B P lt2 t s clauses P') = (term1445 A B P lt2 P2 G2 H2 s P1 G1 H1 P').
Proof. exact (fun_ext (fun G : type548 A B => @lem8367481 A B P lt2 s P' G clauses P1 G1 H1 t P2 G2 H2 h1 h2)). Qed.
Lemma lem8367487 {A B : Type'} : (@ex ((A -> B) -> A -> A)) = (@ex ((A -> B) -> A -> A)).
Proof. exact (eq_refl (@ex ((A -> B) -> A -> A))). Qed.
Lemma lem8367488 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (P' : type551 A B) (clauses : type1635 A B P) (P1 : type551 A B) (G1 : type548 A B) (H1 : type549 A B) (t : type558 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (h1 : term916 A B P clauses P1 G1 H1) (h2 : term1421 A B P t P2 G2 H2) : (term1127 A B P lt2 t s clauses P') = (term1446 A B P lt2 P2 G2 H2 s P1 G1 H1 P').
Proof. exact (MK_COMB (@lem8367487 A B) (@lem8367486 A B P lt2 s P' clauses P1 G1 H1 t P2 G2 H2 h1 h2)). Qed.
Lemma lem8367493 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (clauses : type1635 A B P) (P1 : type551 A B) (G1 : type548 A B) (H1 : type549 A B) (t : type558 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (h1 : term916 A B P clauses P1 G1 H1) (h2 : term1421 A B P t P2 G2 H2) : (term1129 A B P lt2 t s clauses) = (term1447 A B P lt2 P2 G2 H2 s P1 G1 H1).
Proof. exact (fun_ext (fun P' : type551 A B => @lem8367488 A B P lt2 s P' clauses P1 G1 H1 t P2 G2 H2 h1 h2)). Qed.
Lemma lem8367494 {A B : Type'} : (@ex ((A -> B) -> A -> Prop)) = (@ex ((A -> B) -> A -> Prop)).
Proof. exact (eq_refl (@ex ((A -> B) -> A -> Prop))). Qed.
Lemma lem8367495 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (clauses : type1635 A B P) (P1 : type551 A B) (G1 : type548 A B) (H1 : type549 A B) (t : type558 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (h1 : term916 A B P clauses P1 G1 H1) (h2 : term1421 A B P t P2 G2 H2) : (term1131 A B P lt2 t s clauses) = (term1448 A B P lt2 P2 G2 H2 s P1 G1 H1).
Proof. exact (MK_COMB (@lem8367494 A B) (@lem8367493 A B P lt2 s clauses P1 G1 H1 t P2 G2 H2 h1 h2)). Qed.
Lemma lem8367500 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (clauses : type1635 A B P) (P1 : type551 A B) (G1 : type548 A B) (H1 : type549 A B) (t : type558 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (h1 : term916 A B P clauses P1 G1 H1) (h2 : term1421 A B P t P2 G2 H2) : (term1448 A B P lt2 P2 G2 H2 s P1 G1 H1) = (term1131 A B P lt2 t s clauses).
Proof. exact (SYM (@lem8367495 A B P lt2 s clauses P1 G1 H1 t P2 G2 H2 h1 h2)). Qed.
Lemma lem8367502 (p : Prop) : p = (term38 p).
Proof. exact (EQ_MP (@lem10578 p) (@lem10597 p)). Qed.
Lemma lem8367503 {A B P : Type'} (lt2 : type1402 A) (P2 : type560 A B P) (P1 : type551 A B) (G2 : type557 A B P) (G1 : type548 A B) (H2 : type558 A B P) (s : P -> A) (H1 : type549 A B) : (term1449 A B P lt2 P2 P1 G2 G1 H2 s H1) = (term1450 A B P lt2 P2 P1 G2 G1 H2 s H1).
Proof. exact (@lem8367502 (term1449 A B P lt2 P2 P1 G2 G1 H2 s H1)). Qed.
Lemma lem8367504 {A B P : Type'} (lt2 : type1402 A) (P2 : type560 A B P) (P1 : type551 A B) (G2 : type557 A B P) (G1 : type548 A B) (H2 : type558 A B P) (s : P -> A) (H1 : type549 A B) : (term1450 A B P lt2 P2 P1 G2 G1 H2 s H1) = (term1449 A B P lt2 P2 P1 G2 G1 H2 s H1).
Proof. exact (SYM (@lem8367503 A B P lt2 P2 P1 G2 G1 H2 s H1)). Qed.
Lemma lem8367505 {A B P : Type'} (lt2 : type1402 A) (P2 : type560 A B P) (P1 : type551 A B) (G2 : type557 A B P) (G1 : type548 A B) (H2 : type558 A B P) (s : P -> A) (H1 : type549 A B) (h1 : term1451 A B P lt2 P2 P1 G2 G1 H2 s H1) : term1451 A B P lt2 P2 P1 G2 G1 H2 s H1.
Proof. exact (h1). Qed.
Lemma lem8367598 {P : Type'} (P' : P -> Prop) : term1452 P P'.
Proof. exact (@lem19732 P P'). Qed.
Lemma lem8367599 {A P : Type'} (s : P -> A) (x : A) : term1453 A P s x.
Proof. exact (@lem8367598 P (term1454 A P s x)). Qed.
Lemma lem8367600 {A P : Type'} (s : P -> A) (x : A) : (term1455 A P s x) = ((term1456 A P s x) = x).
Proof. exact (eq_refl (term1455 A P s x)). Qed.
Lemma lem8367601 {A P : Type'} (s : P -> A) (x : P) (x' : A) : (term1457 A P s x' x) = ((s x) = x').
Proof. exact (eq_refl (term1457 A P s x' x)). Qed.
Lemma lem8367602 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem8367603 {A P : Type'} (s : P -> A) (x : P) (x' : A) : (term1458 A P s x' x) = (term1459 A P s x x').
Proof. exact (MK_COMB (@lem8367602) (@lem8367601 A P s x x')). Qed.
Lemma lem8367604 {A P : Type'} (x : P) (s : P -> A) (x' : A) : (term1460 A P x s x') = (term1461 A P x s x').
Proof. exact (MK_COMB (@lem8367603 A P s x x') (@lem8367600 A P s x')). Qed.
Lemma lem8367605 {A P : Type'} (s : P -> A) (x : A) : (term1462 A P s x) = (term1463 A P s x).
Proof. exact (fun_ext (fun x' : P => @lem8367604 A P x' s x)). Qed.
Lemma lem8367606 {P : Type'} : (@all P) = (@all P).
Proof. exact (eq_refl (@all P)). Qed.
Lemma lem8367607 {A P : Type'} (s : P -> A) (x : A) : (term1453 A P s x) = (term1464 A P s x).
Proof. exact (MK_COMB (@lem8367606 P) (@lem8367605 A P s x)). Qed.
Lemma lem8367608 {A P : Type'} (s : P -> A) (x : A) : term1464 A P s x.
Proof. exact (EQ_MP (@lem8367607 A P s x) (@lem8367599 A P s x)). Qed.
Lemma lem8367609 {A P : Type'} (s : P -> A) : term1465 A P s.
Proof. exact (fun x : A => @lem8367608 A P s x). Qed.
Lemma lem8367610 {A P : Type'} : term1466 A P.
Proof. exact (fun s : P -> A => @lem8367609 A P s). Qed.
Lemma lem8367611 {A B P : Type'} (clauses : type1635 A B P) (t : type558 A B P) (lt2 : type1402 A) (P2 : type560 A B P) (P1 : type551 A B) (G2 : type557 A B P) (G1 : type548 A B) (H2 : type558 A B P) (s : P -> A) (H1 : type549 A B) (h1 : term1467 A B P clauses t lt2 P2 P1 G2 G1 H2 s H1) : term1467 A B P clauses t lt2 P2 P1 G2 G1 H2 s H1.
Proof. exact (h1). Qed.
Lemma lem8367612 {A B P : Type'} (clauses : type1635 A B P) (t : type558 A B P) (lt2 : type1402 A) (P2 : type560 A B P) (P1 : type551 A B) (G2 : type557 A B P) (G1 : type548 A B) (H2 : type558 A B P) (s : P -> A) (H1 : type549 A B) (h1 : term1467 A B P clauses t lt2 P2 P1 G2 G1 H2 s H1) : term1468 A B P clauses t lt2 P2 P1 G2 G1 H2 s H1.
Proof. exact (@lem8367611 A B P clauses t lt2 P2 P1 G2 G1 H2 s H1 h1 (@lem8367610 A P)). Qed.
Lemma lem8367613 {A B P : Type'} (clauses : type1635 A B P) (t : type558 A B P) (lt2 : type1402 A) (P2 : type560 A B P) (P1 : type551 A B) (G2 : type557 A B P) (G1 : type548 A B) (H2 : type558 A B P) (s : P -> A) (H1 : type549 A B) : term1469 A B P clauses t lt2 P2 P1 G2 G1 H2 s H1.
Proof. exact (fun h0 : term1467 A B P clauses t lt2 P2 P1 G2 G1 H2 s H1 => @lem8367612 A B P clauses t lt2 P2 P1 G2 G1 H2 s H1 h0). Qed.
Lemma lem8367614 {A P : Type'} (_114084 : type794 A P) (h1 : _114084 = (term1470 A P)) : _114084 = (term1470 A P).
Proof. exact (h1). Qed.
Lemma lem8367615 {A P : Type'} (s : P -> A) : s = s.
Proof. exact (eq_refl s). Qed.
Lemma lem8367616 {A P : Type'} (s : P -> A) (_114084 : type794 A P) (h1 : _114084 = (term1470 A P)) : (_114084 s) = (term1471 A P s).
Proof. exact (MK_COMB (@lem8367614 A P _114084 h1) (@lem8367615 A P s)). Qed.
Lemma lem8367617 {A P : Type'} (s : P -> A) : (term1471 A P s) = (term1472 A P s).
Proof. exact (eq_refl (term1471 A P s)). Qed.
Lemma lem8367618 {A P : Type'} (_114084 : type794 A P) (s : P -> A) : (term1473 A P _114084 s) = (term1473 A P _114084 s).
Proof. exact (eq_refl (term1473 A P _114084 s)). Qed.
Lemma lem8367619 {A P : Type'} (_114084 : type794 A P) (s : P -> A) : ((_114084 s) = (term1471 A P s)) = ((_114084 s) = (term1472 A P s)).
Proof. exact (MK_COMB (@lem8367618 A P _114084 s) (@lem8367617 A P s)). Qed.
Lemma lem8367620 {A P : Type'} (s : P -> A) (_114084 : type794 A P) (h1 : _114084 = (term1470 A P)) : (_114084 s) = (term1472 A P s).
Proof. exact (EQ_MP (@lem8367619 A P _114084 s) (@lem8367616 A P s _114084 h1)). Qed.
Lemma lem8367621 {A : Type'} (x : A) : x = x.
Proof. exact (eq_refl x). Qed.
Lemma lem8367622 {A P : Type'} (s : P -> A) (x : A) (_114084 : type794 A P) (h1 : _114084 = (term1470 A P)) : (_114084 s x) = (term1474 A P s x).
Proof. exact (MK_COMB (@lem8367620 A P s _114084 h1) (@lem8367621 A x)). Qed.
Lemma lem8367623 {A P : Type'} (s : P -> A) (x : A) : (term1474 A P s x) = (term1431 A P s x).
Proof. exact (eq_refl (term1474 A P s x)). Qed.
Lemma lem8367624 {A P : Type'} (_114084 : type794 A P) (s : P -> A) (x : A) : (term1475 A P _114084 s x) = (term1475 A P _114084 s x).
Proof. exact (eq_refl (term1475 A P _114084 s x)). Qed.
Lemma lem8367625 {A P : Type'} (_114084 : type794 A P) (s : P -> A) (x : A) : ((_114084 s x) = (term1474 A P s x)) = ((_114084 s x) = (term1431 A P s x)).
Proof. exact (MK_COMB (@lem8367624 A P _114084 s x) (@lem8367623 A P s x)). Qed.
Lemma lem8367626 {A P : Type'} (s : P -> A) (x : A) (_114084 : type794 A P) (h1 : _114084 = (term1470 A P)) : (_114084 s x) = (term1431 A P s x).
Proof. exact (EQ_MP (@lem8367625 A P _114084 s x) (@lem8367622 A P s x _114084 h1)). Qed.
Lemma lem8367627 {A P : Type'} (s : P -> A) (x : A) (_114084 : type794 A P) (h1 : _114084 = (term1470 A P)) : (term1431 A P s x) = (_114084 s x).
Proof. exact (SYM (@lem8367626 A P s x _114084 h1)). Qed.
Lemma lem8367628 {A P : Type'} (s : P -> A) (_114084 : type794 A P) (h1 : _114084 = (term1470 A P)) : term1476 A P _114084 s.
Proof. exact (fun x : A => @lem8367627 A P s x _114084 h1). Qed.
Lemma lem8367629 {A P : Type'} (_114084 : type794 A P) (h1 : _114084 = (term1470 A P)) : term1477 A P _114084.
Proof. exact (fun s : P -> A => @lem8367628 A P s _114084 h1). Qed.
Lemma lem8367630 {A P : Type'} (s : P -> A) (_114084 : type794 A P) (h1 : _114084 = (term1470 A P)) : term1478 A P _114084 s.
Proof. exact (@lem8367629 A P _114084 h1 s). Qed.
Lemma lem8367631 {A P : Type'} (_114084 : type794 A P) (s : P -> A) : (term1478 A P _114084 s) = (term1476 A P _114084 s).
Proof. exact (eq_refl (term1478 A P _114084 s)). Qed.
Lemma lem8367632 {A P : Type'} (s : P -> A) (_114084 : type794 A P) (h1 : _114084 = (term1470 A P)) : term1476 A P _114084 s.
Proof. exact (EQ_MP (@lem8367631 A P _114084 s) (@lem8367630 A P s _114084 h1)). Qed.
Lemma lem8367633 {A P : Type'} (s : P -> A) (x : A) (_114084 : type794 A P) (h1 : _114084 = (term1470 A P)) : term1479 A P _114084 s x.
Proof. exact (@lem8367632 A P s _114084 h1 x). Qed.
Lemma lem8367634 {A P : Type'} (_114084 : type794 A P) (s : P -> A) (x : A) : (term1479 A P _114084 s x) = ((term1431 A P s x) = (_114084 s x)).
Proof. exact (eq_refl (term1479 A P _114084 s x)). Qed.
Lemma lem8367637 {A P : Type'} (s : P -> A) (x : A) (_114084 : type794 A P) (h1 : _114084 = (term1470 A P)) : (term1431 A P s x) = (_114084 s x).
Proof. exact (EQ_MP (@lem8367634 A P _114084 s x) (@lem8367633 A P s x _114084 h1)). Qed.
Lemma lem8367638 {A P : Type'} (s : P -> A) (x : A) (_114084 : type794 A P) (h1 : _114084 = (term1470 A P)) : (term1431 A P s x) = (_114084 s x).
Proof. exact (@lem8367637 A P s x _114084 h1). Qed.
Lemma lem8367639 {A P : Type'} (s : P -> A) : s = s.
Proof. exact (eq_refl s). Qed.
Lemma lem8367640 {A P : Type'} (s : P -> A) (x : A) (_114084 : type794 A P) (h1 : _114084 = (term1470 A P)) : (term1456 A P s x) = (term1480 A P _114084 s x).
Proof. exact (MK_COMB (@lem8367639 A P s) (@lem8367638 A P s x _114084 h1)). Qed.
Lemma lem8367641 {A : Type'} : (@eq A) = (@eq A).
Proof. exact (eq_refl (@eq A)). Qed.
Lemma lem8367642 {A P : Type'} (s : P -> A) (x : A) (_114084 : type794 A P) (h1 : _114084 = (term1470 A P)) : (term1481 A P s x) = (term1482 A P _114084 s x).
Proof. exact (MK_COMB (@lem8367641 A) (@lem8367640 A P s x _114084 h1)). Qed.
Lemma lem8367643 {A : Type'} (x : A) : x = x.
Proof. exact (eq_refl x). Qed.
Lemma lem8367644 {A P : Type'} (s : P -> A) (x : A) (_114084 : type794 A P) (h1 : _114084 = (term1470 A P)) : ((term1456 A P s x) = x) = ((term1480 A P _114084 s x) = x).
Proof. exact (MK_COMB (@lem8367642 A P s x _114084 h1) (@lem8367643 A x)). Qed.
Lemma lem8367645 {A P : Type'} (s : P -> A) (x : P) (x' : A) : (term1459 A P s x x') = (term1459 A P s x x').
Proof. exact (eq_refl (term1459 A P s x x')). Qed.
Lemma lem8367646 {A P : Type'} (x : P) (s : P -> A) (x' : A) (_114084 : type794 A P) (h1 : _114084 = (term1470 A P)) : (term1461 A P x s x') = (term1483 A P x _114084 s x').
Proof. exact (MK_COMB (@lem8367645 A P s x x') (@lem8367644 A P s x' _114084 h1)). Qed.
Lemma lem8367647 {A P : Type'} (s : P -> A) (x : A) (_114084 : type794 A P) (h1 : _114084 = (term1470 A P)) : (term1463 A P s x) = (term1484 A P _114084 s x).
Proof. exact (fun_ext (fun x' : P => @lem8367646 A P x' s x _114084 h1)). Qed.
Lemma lem8367648 {P : Type'} : (@all P) = (@all P).
Proof. exact (eq_refl (@all P)). Qed.
Lemma lem8367649 {A P : Type'} (s : P -> A) (x : A) (_114084 : type794 A P) (h1 : _114084 = (term1470 A P)) : (term1464 A P s x) = (term1485 A P _114084 s x).
Proof. exact (MK_COMB (@lem8367648 P) (@lem8367647 A P s x _114084 h1)). Qed.
Lemma lem8367650 {A P : Type'} (s : P -> A) (_114084 : type794 A P) (h1 : _114084 = (term1470 A P)) : (term1486 A P s) = (term1487 A P _114084 s).
Proof. exact (fun_ext (fun x : A => @lem8367649 A P s x _114084 h1)). Qed.
Lemma lem8367651 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem8367652 {A P : Type'} (s : P -> A) (_114084 : type794 A P) (h1 : _114084 = (term1470 A P)) : (term1465 A P s) = (term1488 A P _114084 s).
Proof. exact (MK_COMB (@lem8367651 A) (@lem8367650 A P s _114084 h1)). Qed.
Lemma lem8367653 {A P : Type'} (_114084 : type794 A P) (h1 : _114084 = (term1470 A P)) : (term1489 A P) = (term1490 A P _114084).
Proof. exact (fun_ext (fun s : P -> A => @lem8367652 A P s _114084 h1)). Qed.
Lemma lem8367654 {A P : Type'} : (@all (P -> A)) = (@all (P -> A)).
Proof. exact (eq_refl (@all (P -> A))). Qed.
Lemma lem8367655 {A P : Type'} (_114084 : type794 A P) (h1 : _114084 = (term1470 A P)) : (term1466 A P) = (term1491 A P _114084).
Proof. exact (MK_COMB (@lem8367654 A P) (@lem8367653 A P _114084 h1)). Qed.
Lemma lem8367656 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem8367657 {A P : Type'} (_114084 : type794 A P) (h1 : _114084 = (term1470 A P)) : (term1492 A P) = (term1493 A P _114084).
Proof. exact (MK_COMB (@lem8367656) (@lem8367655 A P _114084 h1)). Qed.
Lemma lem8367659 {A P : Type'} (s : P -> A) (x : A) (_114084 : type794 A P) (h1 : _114084 = (term1470 A P)) : (term1431 A P s x) = (_114084 s x).
Proof. exact (EQ_MP (@lem8367634 A P _114084 s x) (@lem8367633 A P s x _114084 h1)). Qed.
Lemma lem8367660 {A P : Type'} (s : P -> A) (x : A) (_114084 : type794 A P) (h1 : _114084 = (term1470 A P)) : (term1431 A P s x) = (_114084 s x).
Proof. exact (@lem8367659 A P s x _114084 h1). Qed.
Lemma lem8367661 {A B P : Type'} (P2 : type560 A B P) (f : A -> B) : (P2 f) = (P2 f).
Proof. exact (eq_refl (P2 f)). Qed.
Lemma lem8367662 {A B P : Type'} (P2 : type560 A B P) (f : A -> B) (s : P -> A) (x : A) (_114084 : type794 A P) (h1 : _114084 = (term1470 A P)) : (term1494 A B P P2 f s x) = (term1495 A B P P2 f _114084 s x).
Proof. exact (MK_COMB (@lem8367661 A B P P2 f) (@lem8367660 A P s x _114084 h1)). Qed.
Lemma lem8367663 {A P : Type'} (s : P -> A) (x : A) : (term1496 A P s x) = (term1496 A P s x).
Proof. exact (eq_refl (term1496 A P s x)). Qed.
Lemma lem8367664 {A B P : Type'} (P2 : type560 A B P) (f : A -> B) (s : P -> A) (x : A) (_114084 : type794 A P) (h1 : _114084 = (term1470 A P)) : (term1497 A B P P2 f s x) = (term1498 A B P P2 f _114084 s x).
Proof. exact (MK_COMB (@lem8367663 A P s x) (@lem8367662 A B P P2 f s x _114084 h1)). Qed.
Lemma lem8367665 {A B : Type'} (P1 : type551 A B) (f : A -> B) (x : A) : (P1 f x) = (P1 f x).
Proof. exact (eq_refl (P1 f x)). Qed.
Lemma lem8367666 {A B P : Type'} (P2 : type560 A B P) (s : P -> A) (P1 : type551 A B) (f : A -> B) (x : A) (_114084 : type794 A P) (h1 : _114084 = (term1470 A P)) : (term1499 A B P P2 s P1 f x) = (term1500 A B P P2 _114084 s P1 f x).
Proof. exact (MK_COMB (@lem8367664 A B P P2 f s x _114084 h1) (@lem8367665 A B P1 f x)). Qed.
Lemma lem8367667 {A B P : Type'} (P2 : type560 A B P) (s : P -> A) (P1 : type551 A B) (f : A -> B) (_114084 : type794 A P) (h1 : _114084 = (term1470 A P)) : (term1501 A B P P2 s P1 f) = (term1502 A B P P2 _114084 s P1 f).
Proof. exact (fun_ext (fun x : A => @lem8367666 A B P P2 s P1 f x _114084 h1)). Qed.
Lemma lem8367668 {A B P : Type'} (P2 : type560 A B P) (s : P -> A) (P1 : type551 A B) (_114084 : type794 A P) (h1 : _114084 = (term1470 A P)) : (term1503 A B P P2 s P1) = (term1504 A B P P2 _114084 s P1).
Proof. exact (fun_ext (fun f : A -> B => @lem8367667 A B P P2 s P1 f _114084 h1)). Qed.
Lemma lem8367669 {A B : Type'} (f : A -> B) : f = f.
Proof. exact (eq_refl f). Qed.
Lemma lem8367670 {A B P : Type'} (P2 : type560 A B P) (s : P -> A) (P1 : type551 A B) (f : A -> B) (_114084 : type794 A P) (h1 : _114084 = (term1470 A P)) : (term1505 A B P P2 s P1 f) = (term1506 A B P P2 _114084 s P1 f).
Proof. exact (MK_COMB (@lem8367668 A B P P2 s P1 _114084 h1) (@lem8367669 A B f)). Qed.
Lemma lem8367671 {A : Type'} (x : A) : x = x.
Proof. exact (eq_refl x). Qed.
Lemma lem8367672 {A B P : Type'} (P2 : type560 A B P) (s : P -> A) (P1 : type551 A B) (f : A -> B) (x : A) (_114084 : type794 A P) (h1 : _114084 = (term1470 A P)) : (term1507 A B P P2 s P1 f x) = (term1508 A B P P2 _114084 s P1 f x).
Proof. exact (MK_COMB (@lem8367670 A B P P2 s P1 f _114084 h1) (@lem8367671 A x)). Qed.
Lemma lem8367673 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8367674 {A B P : Type'} (P2 : type560 A B P) (s : P -> A) (P1 : type551 A B) (f : A -> B) (x : A) (_114084 : type794 A P) (h1 : _114084 = (term1470 A P)) : (term1509 A B P P2 s P1 f x) = (term1510 A B P P2 _114084 s P1 f x).
Proof. exact (MK_COMB (@lem8367673) (@lem8367672 A B P P2 s P1 f x _114084 h1)). Qed.
Lemma lem8367676 {A P : Type'} (s : P -> A) (x : A) (_114084 : type794 A P) (h1 : _114084 = (term1470 A P)) : (term1431 A P s x) = (_114084 s x).
Proof. exact (EQ_MP (@lem8367634 A P _114084 s x) (@lem8367633 A P s x _114084 h1)). Qed.
Lemma lem8367677 {A P : Type'} (s : P -> A) (x : A) (_114084 : type794 A P) (h1 : _114084 = (term1470 A P)) : (term1431 A P s x) = (_114084 s x).
Proof. exact (@lem8367676 A P s x _114084 h1). Qed.
Lemma lem8367678 {A B P : Type'} (P2 : type560 A B P) (f : A -> B) : (P2 f) = (P2 f).
Proof. exact (eq_refl (P2 f)). Qed.
Lemma lem8367679 {A B P : Type'} (P2 : type560 A B P) (f : A -> B) (s : P -> A) (x : A) (_114084 : type794 A P) (h1 : _114084 = (term1470 A P)) : (term1494 A B P P2 f s x) = (term1495 A B P P2 f _114084 s x).
Proof. exact (MK_COMB (@lem8367678 A B P P2 f) (@lem8367677 A P s x _114084 h1)). Qed.
Lemma lem8367680 {A P : Type'} (s : P -> A) (x : A) : (term1496 A P s x) = (term1496 A P s x).
Proof. exact (eq_refl (term1496 A P s x)). Qed.
Lemma lem8367681 {A B P : Type'} (P2 : type560 A B P) (f : A -> B) (s : P -> A) (x : A) (_114084 : type794 A P) (h1 : _114084 = (term1470 A P)) : (term1497 A B P P2 f s x) = (term1498 A B P P2 f _114084 s x).
Proof. exact (MK_COMB (@lem8367680 A P s x) (@lem8367679 A B P P2 f s x _114084 h1)). Qed.
Lemma lem8367682 {A B : Type'} (P1 : type551 A B) (f : A -> B) (x : A) : (P1 f x) = (P1 f x).
Proof. exact (eq_refl (P1 f x)). Qed.
Lemma lem8367683 {A B P : Type'} (P2 : type560 A B P) (s : P -> A) (P1 : type551 A B) (f : A -> B) (x : A) (_114084 : type794 A P) (h1 : _114084 = (term1470 A P)) : (term1499 A B P P2 s P1 f x) = (term1500 A B P P2 _114084 s P1 f x).
Proof. exact (MK_COMB (@lem8367681 A B P P2 f s x _114084 h1) (@lem8367682 A B P1 f x)). Qed.
Lemma lem8367684 {A B P : Type'} (P2 : type560 A B P) (s : P -> A) (P1 : type551 A B) (f : A -> B) (_114084 : type794 A P) (h1 : _114084 = (term1470 A P)) : (term1501 A B P P2 s P1 f) = (term1502 A B P P2 _114084 s P1 f).
Proof. exact (fun_ext (fun x : A => @lem8367683 A B P P2 s P1 f x _114084 h1)). Qed.
Lemma lem8367685 {A B P : Type'} (P2 : type560 A B P) (s : P -> A) (P1 : type551 A B) (_114084 : type794 A P) (h1 : _114084 = (term1470 A P)) : (term1503 A B P P2 s P1) = (term1504 A B P P2 _114084 s P1).
Proof. exact (fun_ext (fun f : A -> B => @lem8367684 A B P P2 s P1 f _114084 h1)). Qed.
Lemma lem8367686 {A B : Type'} (g : A -> B) : g = g.
Proof. exact (eq_refl g). Qed.
Lemma lem8367687 {A B P : Type'} (P2 : type560 A B P) (s : P -> A) (P1 : type551 A B) (g : A -> B) (_114084 : type794 A P) (h1 : _114084 = (term1470 A P)) : (term1505 A B P P2 s P1 g) = (term1506 A B P P2 _114084 s P1 g).
Proof. exact (MK_COMB (@lem8367685 A B P P2 s P1 _114084 h1) (@lem8367686 A B g)). Qed.
Lemma lem8367688 {A : Type'} (x : A) : x = x.
Proof. exact (eq_refl x). Qed.
Lemma lem8367689 {A B P : Type'} (P2 : type560 A B P) (s : P -> A) (P1 : type551 A B) (g : A -> B) (x : A) (_114084 : type794 A P) (h1 : _114084 = (term1470 A P)) : (term1507 A B P P2 s P1 g x) = (term1508 A B P P2 _114084 s P1 g x).
Proof. exact (MK_COMB (@lem8367687 A B P P2 s P1 g _114084 h1) (@lem8367688 A x)). Qed.
Lemma lem8367690 {A B P : Type'} (f : A -> B) (P2 : type560 A B P) (s : P -> A) (P1 : type551 A B) (g : A -> B) (x : A) (_114084 : type794 A P) (h1 : _114084 = (term1470 A P)) : ((term1507 A B P P2 s P1 f x) = (term1507 A B P P2 s P1 g x)) = ((term1508 A B P P2 _114084 s P1 f x) = (term1508 A B P P2 _114084 s P1 g x)).
Proof. exact (MK_COMB (@lem8367674 A B P P2 s P1 f x _114084 h1) (@lem8367689 A B P P2 s P1 g x _114084 h1)). Qed.
Lemma lem8367691 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8367692 {A B P : Type'} (f : A -> B) (P2 : type560 A B P) (s : P -> A) (P1 : type551 A B) (g : A -> B) (x : A) (_114084 : type794 A P) (h1 : _114084 = (term1470 A P)) : (term1511 A B P f P2 s P1 g x) = (term1512 A B P f P2 _114084 s P1 g x).
Proof. exact (MK_COMB (@lem8367691) (@lem8367690 A B P f P2 s P1 g x _114084 h1)). Qed.
Lemma lem8367694 {A P : Type'} (s : P -> A) (x : A) (_114084 : type794 A P) (h1 : _114084 = (term1470 A P)) : (term1431 A P s x) = (_114084 s x).
Proof. exact (EQ_MP (@lem8367634 A P _114084 s x) (@lem8367633 A P s x _114084 h1)). Qed.
Lemma lem8367695 {A P : Type'} (s : P -> A) (x : A) (_114084 : type794 A P) (h1 : _114084 = (term1470 A P)) : (term1431 A P s x) = (_114084 s x).
Proof. exact (@lem8367694 A P s x _114084 h1). Qed.
Lemma lem8367696 {A B P : Type'} (G2 : type557 A B P) (f : A -> B) : (G2 f) = (G2 f).
Proof. exact (eq_refl (G2 f)). Qed.
Lemma lem8367697 {A B P : Type'} (G2 : type557 A B P) (f : A -> B) (s : P -> A) (x : A) (_114084 : type794 A P) (h1 : _114084 = (term1470 A P)) : (term1513 A B P G2 f s x) = (term1514 A B P G2 f _114084 s x).
Proof. exact (MK_COMB (@lem8367696 A B P G2 f) (@lem8367695 A P s x _114084 h1)). Qed.
Lemma lem8367698 {A P : Type'} (s : P -> A) (x : A) : (term1515 A P s x) = (term1515 A P s x).
Proof. exact (eq_refl (term1515 A P s x)). Qed.
Lemma lem8367699 {A B P : Type'} (G2 : type557 A B P) (f : A -> B) (s : P -> A) (x : A) (_114084 : type794 A P) (h1 : _114084 = (term1470 A P)) : (term1516 A B P G2 f s x) = (term1517 A B P G2 f _114084 s x).
Proof. exact (MK_COMB (@lem8367698 A P s x) (@lem8367697 A B P G2 f s x _114084 h1)). Qed.
Lemma lem8367700 {A B : Type'} (G1 : type548 A B) (f : A -> B) (x : A) : (G1 f x) = (G1 f x).
Proof. exact (eq_refl (G1 f x)). Qed.
Lemma lem8367701 {A B P : Type'} (G2 : type557 A B P) (s : P -> A) (G1 : type548 A B) (f : A -> B) (x : A) (_114084 : type794 A P) (h1 : _114084 = (term1470 A P)) : (term1518 A B P G2 s G1 f x) = (term1519 A B P G2 _114084 s G1 f x).
Proof. exact (MK_COMB (@lem8367699 A B P G2 f s x _114084 h1) (@lem8367700 A B G1 f x)). Qed.
Lemma lem8367702 {A B P : Type'} (G2 : type557 A B P) (s : P -> A) (G1 : type548 A B) (f : A -> B) (_114084 : type794 A P) (h1 : _114084 = (term1470 A P)) : (term1520 A B P G2 s G1 f) = (term1521 A B P G2 _114084 s G1 f).
Proof. exact (fun_ext (fun x : A => @lem8367701 A B P G2 s G1 f x _114084 h1)). Qed.
Lemma lem8367703 {A B P : Type'} (G2 : type557 A B P) (s : P -> A) (G1 : type548 A B) (_114084 : type794 A P) (h1 : _114084 = (term1470 A P)) : (term1522 A B P G2 s G1) = (term1523 A B P G2 _114084 s G1).
Proof. exact (fun_ext (fun f : A -> B => @lem8367702 A B P G2 s G1 f _114084 h1)). Qed.
Lemma lem8367704 {A B : Type'} (f : A -> B) : f = f.
Proof. exact (eq_refl f). Qed.
Lemma lem8367705 {A B P : Type'} (G2 : type557 A B P) (s : P -> A) (G1 : type548 A B) (f : A -> B) (_114084 : type794 A P) (h1 : _114084 = (term1470 A P)) : (term1524 A B P G2 s G1 f) = (term1525 A B P G2 _114084 s G1 f).
Proof. exact (MK_COMB (@lem8367703 A B P G2 s G1 _114084 h1) (@lem8367704 A B f)). Qed.
Lemma lem8367706 {A : Type'} (x : A) : x = x.
Proof. exact (eq_refl x). Qed.
Lemma lem8367707 {A B P : Type'} (G2 : type557 A B P) (s : P -> A) (G1 : type548 A B) (f : A -> B) (x : A) (_114084 : type794 A P) (h1 : _114084 = (term1470 A P)) : (term1526 A B P G2 s G1 f x) = (term1527 A B P G2 _114084 s G1 f x).
Proof. exact (MK_COMB (@lem8367705 A B P G2 s G1 f _114084 h1) (@lem8367706 A x)). Qed.
Lemma lem8367708 {A : Type'} : (@eq A) = (@eq A).
Proof. exact (eq_refl (@eq A)). Qed.
Lemma lem8367709 {A B P : Type'} (G2 : type557 A B P) (s : P -> A) (G1 : type548 A B) (f : A -> B) (x : A) (_114084 : type794 A P) (h1 : _114084 = (term1470 A P)) : (term1528 A B P G2 s G1 f x) = (term1529 A B P G2 _114084 s G1 f x).
Proof. exact (MK_COMB (@lem8367708 A) (@lem8367707 A B P G2 s G1 f x _114084 h1)). Qed.
Lemma lem8367711 {A P : Type'} (s : P -> A) (x : A) (_114084 : type794 A P) (h1 : _114084 = (term1470 A P)) : (term1431 A P s x) = (_114084 s x).
Proof. exact (EQ_MP (@lem8367634 A P _114084 s x) (@lem8367633 A P s x _114084 h1)). Qed.
Lemma lem8367712 {A P : Type'} (s : P -> A) (x : A) (_114084 : type794 A P) (h1 : _114084 = (term1470 A P)) : (term1431 A P s x) = (_114084 s x).
Proof. exact (@lem8367711 A P s x _114084 h1). Qed.
Lemma lem8367713 {A B P : Type'} (G2 : type557 A B P) (f : A -> B) : (G2 f) = (G2 f).
Proof. exact (eq_refl (G2 f)). Qed.
Lemma lem8367714 {A B P : Type'} (G2 : type557 A B P) (f : A -> B) (s : P -> A) (x : A) (_114084 : type794 A P) (h1 : _114084 = (term1470 A P)) : (term1513 A B P G2 f s x) = (term1514 A B P G2 f _114084 s x).
Proof. exact (MK_COMB (@lem8367713 A B P G2 f) (@lem8367712 A P s x _114084 h1)). Qed.
Lemma lem8367715 {A P : Type'} (s : P -> A) (x : A) : (term1515 A P s x) = (term1515 A P s x).
Proof. exact (eq_refl (term1515 A P s x)). Qed.
Lemma lem8367716 {A B P : Type'} (G2 : type557 A B P) (f : A -> B) (s : P -> A) (x : A) (_114084 : type794 A P) (h1 : _114084 = (term1470 A P)) : (term1516 A B P G2 f s x) = (term1517 A B P G2 f _114084 s x).
Proof. exact (MK_COMB (@lem8367715 A P s x) (@lem8367714 A B P G2 f s x _114084 h1)). Qed.
Lemma lem8367717 {A B : Type'} (G1 : type548 A B) (f : A -> B) (x : A) : (G1 f x) = (G1 f x).
Proof. exact (eq_refl (G1 f x)). Qed.
Lemma lem8367718 {A B P : Type'} (G2 : type557 A B P) (s : P -> A) (G1 : type548 A B) (f : A -> B) (x : A) (_114084 : type794 A P) (h1 : _114084 = (term1470 A P)) : (term1518 A B P G2 s G1 f x) = (term1519 A B P G2 _114084 s G1 f x).
Proof. exact (MK_COMB (@lem8367716 A B P G2 f s x _114084 h1) (@lem8367717 A B G1 f x)). Qed.
Lemma lem8367719 {A B P : Type'} (G2 : type557 A B P) (s : P -> A) (G1 : type548 A B) (f : A -> B) (_114084 : type794 A P) (h1 : _114084 = (term1470 A P)) : (term1520 A B P G2 s G1 f) = (term1521 A B P G2 _114084 s G1 f).
Proof. exact (fun_ext (fun x : A => @lem8367718 A B P G2 s G1 f x _114084 h1)). Qed.
Lemma lem8367720 {A B P : Type'} (G2 : type557 A B P) (s : P -> A) (G1 : type548 A B) (_114084 : type794 A P) (h1 : _114084 = (term1470 A P)) : (term1522 A B P G2 s G1) = (term1523 A B P G2 _114084 s G1).
Proof. exact (fun_ext (fun f : A -> B => @lem8367719 A B P G2 s G1 f _114084 h1)). Qed.
Lemma lem8367721 {A B : Type'} (g : A -> B) : g = g.
Proof. exact (eq_refl g). Qed.
Lemma lem8367722 {A B P : Type'} (G2 : type557 A B P) (s : P -> A) (G1 : type548 A B) (g : A -> B) (_114084 : type794 A P) (h1 : _114084 = (term1470 A P)) : (term1524 A B P G2 s G1 g) = (term1525 A B P G2 _114084 s G1 g).
Proof. exact (MK_COMB (@lem8367720 A B P G2 s G1 _114084 h1) (@lem8367721 A B g)). Qed.
Lemma lem8367723 {A : Type'} (x : A) : x = x.
Proof. exact (eq_refl x). Qed.
Lemma lem8367724 {A B P : Type'} (G2 : type557 A B P) (s : P -> A) (G1 : type548 A B) (g : A -> B) (x : A) (_114084 : type794 A P) (h1 : _114084 = (term1470 A P)) : (term1526 A B P G2 s G1 g x) = (term1527 A B P G2 _114084 s G1 g x).
Proof. exact (MK_COMB (@lem8367722 A B P G2 s G1 g _114084 h1) (@lem8367723 A x)). Qed.
Lemma lem8367725 {A B P : Type'} (f : A -> B) (G2 : type557 A B P) (s : P -> A) (G1 : type548 A B) (g : A -> B) (x : A) (_114084 : type794 A P) (h1 : _114084 = (term1470 A P)) : ((term1526 A B P G2 s G1 f x) = (term1526 A B P G2 s G1 g x)) = ((term1527 A B P G2 _114084 s G1 f x) = (term1527 A B P G2 _114084 s G1 g x)).
Proof. exact (MK_COMB (@lem8367709 A B P G2 s G1 f x _114084 h1) (@lem8367724 A B P G2 s G1 g x _114084 h1)). Qed.
Lemma lem8367726 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8367727 {A B P : Type'} (f : A -> B) (G2 : type557 A B P) (s : P -> A) (G1 : type548 A B) (g : A -> B) (x : A) (_114084 : type794 A P) (h1 : _114084 = (term1470 A P)) : (term1530 A B P f G2 s G1 g x) = (term1531 A B P f G2 _114084 s G1 g x).
Proof. exact (MK_COMB (@lem8367726) (@lem8367725 A B P f G2 s G1 g x _114084 h1)). Qed.
Lemma lem8367729 {A P : Type'} (s : P -> A) (x : A) (_114084 : type794 A P) (h1 : _114084 = (term1470 A P)) : (term1431 A P s x) = (_114084 s x).
Proof. exact (EQ_MP (@lem8367634 A P _114084 s x) (@lem8367633 A P s x _114084 h1)). Qed.
Lemma lem8367730 {A P : Type'} (s : P -> A) (x : A) (_114084 : type794 A P) (h1 : _114084 = (term1470 A P)) : (term1431 A P s x) = (_114084 s x).
Proof. exact (@lem8367729 A P s x _114084 h1). Qed.
Lemma lem8367731 {A B P : Type'} (H2 : type558 A B P) (f : A -> B) : (H2 f) = (H2 f).
Proof. exact (eq_refl (H2 f)). Qed.
Lemma lem8367732 {A B P : Type'} (H2 : type558 A B P) (f : A -> B) (s : P -> A) (x : A) (_114084 : type794 A P) (h1 : _114084 = (term1470 A P)) : (term1429 A B P H2 f s x) = (term1532 A B P H2 f _114084 s x).
Proof. exact (MK_COMB (@lem8367731 A B P H2 f) (@lem8367730 A P s x _114084 h1)). Qed.
Lemma lem8367733 {A B P : Type'} (s : P -> A) (x : A) : (term1432 A B P s x) = (term1432 A B P s x).
Proof. exact (eq_refl (term1432 A B P s x)). Qed.
Lemma lem8367734 {A B P : Type'} (H2 : type558 A B P) (f : A -> B) (s : P -> A) (x : A) (_114084 : type794 A P) (h1 : _114084 = (term1470 A P)) : (term1433 A B P H2 f s x) = (term1533 A B P H2 f _114084 s x).
Proof. exact (MK_COMB (@lem8367733 A B P s x) (@lem8367732 A B P H2 f s x _114084 h1)). Qed.
Lemma lem8367735 {A B : Type'} (H1 : type549 A B) (f : A -> B) (x : A) : (H1 f x) = (H1 f x).
Proof. exact (eq_refl (H1 f x)). Qed.
Lemma lem8367736 {A B P : Type'} (H2 : type558 A B P) (s : P -> A) (H1 : type549 A B) (f : A -> B) (x : A) (_114084 : type794 A P) (h1 : _114084 = (term1470 A P)) : (term1534 A B P H2 s H1 f x) = (term1535 A B P H2 _114084 s H1 f x).
Proof. exact (MK_COMB (@lem8367734 A B P H2 f s x _114084 h1) (@lem8367735 A B H1 f x)). Qed.
Lemma lem8367737 {A B P : Type'} (H2 : type558 A B P) (s : P -> A) (H1 : type549 A B) (f : A -> B) (_114084 : type794 A P) (h1 : _114084 = (term1470 A P)) : (term1536 A B P H2 s H1 f) = (term1537 A B P H2 _114084 s H1 f).
Proof. exact (fun_ext (fun x : A => @lem8367736 A B P H2 s H1 f x _114084 h1)). Qed.
Lemma lem8367738 {A B P : Type'} (H2 : type558 A B P) (s : P -> A) (H1 : type549 A B) (_114084 : type794 A P) (h1 : _114084 = (term1470 A P)) : (term1538 A B P H2 s H1) = (term1539 A B P H2 _114084 s H1).
Proof. exact (fun_ext (fun f : A -> B => @lem8367737 A B P H2 s H1 f _114084 h1)). Qed.
Lemma lem8367739 {A B : Type'} (f : A -> B) : f = f.
Proof. exact (eq_refl f). Qed.
Lemma lem8367740 {A B P : Type'} (H2 : type558 A B P) (s : P -> A) (H1 : type549 A B) (f : A -> B) (_114084 : type794 A P) (h1 : _114084 = (term1470 A P)) : (term1540 A B P H2 s H1 f) = (term1541 A B P H2 _114084 s H1 f).
Proof. exact (MK_COMB (@lem8367738 A B P H2 s H1 _114084 h1) (@lem8367739 A B f)). Qed.
Lemma lem8367741 {A : Type'} (x : A) : x = x.
Proof. exact (eq_refl x). Qed.
Lemma lem8367742 {A B P : Type'} (H2 : type558 A B P) (s : P -> A) (H1 : type549 A B) (f : A -> B) (x : A) (_114084 : type794 A P) (h1 : _114084 = (term1470 A P)) : (term1542 A B P H2 s H1 f x) = (term1543 A B P H2 _114084 s H1 f x).
Proof. exact (MK_COMB (@lem8367740 A B P H2 s H1 f _114084 h1) (@lem8367741 A x)). Qed.
Lemma lem8367743 {B : Type'} : (@eq B) = (@eq B).
Proof. exact (eq_refl (@eq B)). Qed.
Lemma lem8367744 {A B P : Type'} (H2 : type558 A B P) (s : P -> A) (H1 : type549 A B) (f : A -> B) (x : A) (_114084 : type794 A P) (h1 : _114084 = (term1470 A P)) : (term1544 A B P H2 s H1 f x) = (term1545 A B P H2 _114084 s H1 f x).
Proof. exact (MK_COMB (@lem8367743 B) (@lem8367742 A B P H2 s H1 f x _114084 h1)). Qed.
Lemma lem8367746 {A P : Type'} (s : P -> A) (x : A) (_114084 : type794 A P) (h1 : _114084 = (term1470 A P)) : (term1431 A P s x) = (_114084 s x).
Proof. exact (EQ_MP (@lem8367634 A P _114084 s x) (@lem8367633 A P s x _114084 h1)). Qed.
Lemma lem8367747 {A P : Type'} (s : P -> A) (x : A) (_114084 : type794 A P) (h1 : _114084 = (term1470 A P)) : (term1431 A P s x) = (_114084 s x).
Proof. exact (@lem8367746 A P s x _114084 h1). Qed.
Lemma lem8367748 {A B P : Type'} (H2 : type558 A B P) (f : A -> B) : (H2 f) = (H2 f).
Proof. exact (eq_refl (H2 f)). Qed.
Lemma lem8367749 {A B P : Type'} (H2 : type558 A B P) (f : A -> B) (s : P -> A) (x : A) (_114084 : type794 A P) (h1 : _114084 = (term1470 A P)) : (term1429 A B P H2 f s x) = (term1532 A B P H2 f _114084 s x).
Proof. exact (MK_COMB (@lem8367748 A B P H2 f) (@lem8367747 A P s x _114084 h1)). Qed.
Lemma lem8367750 {A B P : Type'} (s : P -> A) (x : A) : (term1432 A B P s x) = (term1432 A B P s x).
Proof. exact (eq_refl (term1432 A B P s x)). Qed.
Lemma lem8367751 {A B P : Type'} (H2 : type558 A B P) (f : A -> B) (s : P -> A) (x : A) (_114084 : type794 A P) (h1 : _114084 = (term1470 A P)) : (term1433 A B P H2 f s x) = (term1533 A B P H2 f _114084 s x).
Proof. exact (MK_COMB (@lem8367750 A B P s x) (@lem8367749 A B P H2 f s x _114084 h1)). Qed.
Lemma lem8367752 {A B : Type'} (H1 : type549 A B) (f : A -> B) (x : A) : (H1 f x) = (H1 f x).
Proof. exact (eq_refl (H1 f x)). Qed.
Lemma lem8367753 {A B P : Type'} (H2 : type558 A B P) (s : P -> A) (H1 : type549 A B) (f : A -> B) (x : A) (_114084 : type794 A P) (h1 : _114084 = (term1470 A P)) : (term1534 A B P H2 s H1 f x) = (term1535 A B P H2 _114084 s H1 f x).
Proof. exact (MK_COMB (@lem8367751 A B P H2 f s x _114084 h1) (@lem8367752 A B H1 f x)). Qed.
Lemma lem8367754 {A B P : Type'} (H2 : type558 A B P) (s : P -> A) (H1 : type549 A B) (f : A -> B) (_114084 : type794 A P) (h1 : _114084 = (term1470 A P)) : (term1536 A B P H2 s H1 f) = (term1537 A B P H2 _114084 s H1 f).
Proof. exact (fun_ext (fun x : A => @lem8367753 A B P H2 s H1 f x _114084 h1)). Qed.
Lemma lem8367755 {A B P : Type'} (H2 : type558 A B P) (s : P -> A) (H1 : type549 A B) (_114084 : type794 A P) (h1 : _114084 = (term1470 A P)) : (term1538 A B P H2 s H1) = (term1539 A B P H2 _114084 s H1).
Proof. exact (fun_ext (fun f : A -> B => @lem8367754 A B P H2 s H1 f _114084 h1)). Qed.
Lemma lem8367756 {A B : Type'} (g : A -> B) : g = g.
Proof. exact (eq_refl g). Qed.
Lemma lem8367757 {A B P : Type'} (H2 : type558 A B P) (s : P -> A) (H1 : type549 A B) (g : A -> B) (_114084 : type794 A P) (h1 : _114084 = (term1470 A P)) : (term1540 A B P H2 s H1 g) = (term1541 A B P H2 _114084 s H1 g).
Proof. exact (MK_COMB (@lem8367755 A B P H2 s H1 _114084 h1) (@lem8367756 A B g)). Qed.
Lemma lem8367758 {A : Type'} (x : A) : x = x.
Proof. exact (eq_refl x). Qed.
Lemma lem8367759 {A B P : Type'} (H2 : type558 A B P) (s : P -> A) (H1 : type549 A B) (g : A -> B) (x : A) (_114084 : type794 A P) (h1 : _114084 = (term1470 A P)) : (term1542 A B P H2 s H1 g x) = (term1543 A B P H2 _114084 s H1 g x).
Proof. exact (MK_COMB (@lem8367757 A B P H2 s H1 g _114084 h1) (@lem8367758 A x)). Qed.
Lemma lem8367760 {A B P : Type'} (f : A -> B) (H2 : type558 A B P) (s : P -> A) (H1 : type549 A B) (g : A -> B) (x : A) (_114084 : type794 A P) (h1 : _114084 = (term1470 A P)) : ((term1542 A B P H2 s H1 f x) = (term1542 A B P H2 s H1 g x)) = ((term1543 A B P H2 _114084 s H1 f x) = (term1543 A B P H2 _114084 s H1 g x)).
Proof. exact (MK_COMB (@lem8367744 A B P H2 s H1 f x _114084 h1) (@lem8367759 A B P H2 s H1 g x _114084 h1)). Qed.
Lemma lem8367761 {A B P : Type'} (G2 : type557 A B P) (G1 : type548 A B) (f : A -> B) (H2 : type558 A B P) (s : P -> A) (H1 : type549 A B) (g : A -> B) (x : A) (_114084 : type794 A P) (h1 : _114084 = (term1470 A P)) : (term1546 A B P G2 G1 f H2 s H1 g x) = (term1547 A B P G2 G1 f H2 _114084 s H1 g x).
Proof. exact (MK_COMB (@lem8367727 A B P f G2 s G1 g x _114084 h1) (@lem8367760 A B P f H2 s H1 g x _114084 h1)). Qed.
Lemma lem8367762 {A B P : Type'} (P2 : type560 A B P) (P1 : type551 A B) (G2 : type557 A B P) (G1 : type548 A B) (f : A -> B) (H2 : type558 A B P) (s : P -> A) (H1 : type549 A B) (g : A -> B) (x : A) (_114084 : type794 A P) (h1 : _114084 = (term1470 A P)) : (term1548 A B P P2 P1 G2 G1 f H2 s H1 g x) = (term1549 A B P P2 P1 G2 G1 f H2 _114084 s H1 g x).
Proof. exact (MK_COMB (@lem8367692 A B P f P2 s P1 g x _114084 h1) (@lem8367761 A B P G2 G1 f H2 s H1 g x _114084 h1)). Qed.
Lemma lem8367763 {A B : Type'} (lt2 : type1402 A) (x : A) (f : A -> B) (g : A -> B) : (term1190 A B lt2 x f g) = (term1190 A B lt2 x f g).
Proof. exact (eq_refl (term1190 A B lt2 x f g)). Qed.
Lemma lem8367764 {A B P : Type'} (lt2 : type1402 A) (P2 : type560 A B P) (P1 : type551 A B) (G2 : type557 A B P) (G1 : type548 A B) (f : A -> B) (H2 : type558 A B P) (s : P -> A) (H1 : type549 A B) (g : A -> B) (x : A) (_114084 : type794 A P) (h1 : _114084 = (term1470 A P)) : (term1550 A B P lt2 P2 P1 G2 G1 f H2 s H1 g x) = (term1551 A B P lt2 P2 P1 G2 G1 f H2 _114084 s H1 g x).
Proof. exact (MK_COMB (@lem8367763 A B lt2 x f g) (@lem8367762 A B P P2 P1 G2 G1 f H2 s H1 g x _114084 h1)). Qed.
Lemma lem8367765 {A B P : Type'} (lt2 : type1402 A) (P2 : type560 A B P) (P1 : type551 A B) (G2 : type557 A B P) (G1 : type548 A B) (f : A -> B) (H2 : type558 A B P) (s : P -> A) (H1 : type549 A B) (g : A -> B) (_114084 : type794 A P) (h1 : _114084 = (term1470 A P)) : (term1552 A B P lt2 P2 P1 G2 G1 f H2 s H1 g) = (term1553 A B P lt2 P2 P1 G2 G1 f H2 _114084 s H1 g).
Proof. exact (fun_ext (fun x : A => @lem8367764 A B P lt2 P2 P1 G2 G1 f H2 s H1 g x _114084 h1)). Qed.
Lemma lem8367766 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem8367767 {A B P : Type'} (lt2 : type1402 A) (P2 : type560 A B P) (P1 : type551 A B) (G2 : type557 A B P) (G1 : type548 A B) (f : A -> B) (H2 : type558 A B P) (s : P -> A) (H1 : type549 A B) (g : A -> B) (_114084 : type794 A P) (h1 : _114084 = (term1470 A P)) : (term1554 A B P lt2 P2 P1 G2 G1 f H2 s H1 g) = (term1555 A B P lt2 P2 P1 G2 G1 f H2 _114084 s H1 g).
Proof. exact (MK_COMB (@lem8367766 A) (@lem8367765 A B P lt2 P2 P1 G2 G1 f H2 s H1 g _114084 h1)). Qed.
Lemma lem8367768 {A B P : Type'} (lt2 : type1402 A) (P2 : type560 A B P) (P1 : type551 A B) (G2 : type557 A B P) (G1 : type548 A B) (f : A -> B) (H2 : type558 A B P) (s : P -> A) (H1 : type549 A B) (_114084 : type794 A P) (h1 : _114084 = (term1470 A P)) : (term1556 A B P lt2 P2 P1 G2 G1 f H2 s H1) = (term1557 A B P lt2 P2 P1 G2 G1 f H2 _114084 s H1).
Proof. exact (fun_ext (fun g : A -> B => @lem8367767 A B P lt2 P2 P1 G2 G1 f H2 s H1 g _114084 h1)). Qed.
Lemma lem8367769 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem8367770 {A B P : Type'} (lt2 : type1402 A) (P2 : type560 A B P) (P1 : type551 A B) (G2 : type557 A B P) (G1 : type548 A B) (f : A -> B) (H2 : type558 A B P) (s : P -> A) (H1 : type549 A B) (_114084 : type794 A P) (h1 : _114084 = (term1470 A P)) : (term1558 A B P lt2 P2 P1 G2 G1 f H2 s H1) = (term1559 A B P lt2 P2 P1 G2 G1 f H2 _114084 s H1).
Proof. exact (MK_COMB (@lem8367769 A B) (@lem8367768 A B P lt2 P2 P1 G2 G1 f H2 s H1 _114084 h1)). Qed.
Lemma lem8367771 {A B P : Type'} (lt2 : type1402 A) (P2 : type560 A B P) (P1 : type551 A B) (G2 : type557 A B P) (G1 : type548 A B) (H2 : type558 A B P) (s : P -> A) (H1 : type549 A B) (_114084 : type794 A P) (h1 : _114084 = (term1470 A P)) : (term1560 A B P lt2 P2 P1 G2 G1 H2 s H1) = (term1561 A B P lt2 P2 P1 G2 G1 H2 _114084 s H1).
Proof. exact (fun_ext (fun f : A -> B => @lem8367770 A B P lt2 P2 P1 G2 G1 f H2 s H1 _114084 h1)). Qed.
Lemma lem8367772 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem8367773 {A B P : Type'} (lt2 : type1402 A) (P2 : type560 A B P) (P1 : type551 A B) (G2 : type557 A B P) (G1 : type548 A B) (H2 : type558 A B P) (s : P -> A) (H1 : type549 A B) (_114084 : type794 A P) (h1 : _114084 = (term1470 A P)) : (term1562 A B P lt2 P2 P1 G2 G1 H2 s H1) = (term1563 A B P lt2 P2 P1 G2 G1 H2 _114084 s H1).
Proof. exact (MK_COMB (@lem8367772 A B) (@lem8367771 A B P lt2 P2 P1 G2 G1 H2 s H1 _114084 h1)). Qed.
Lemma lem8367774 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8367775 {A B P : Type'} (lt2 : type1402 A) (P2 : type560 A B P) (P1 : type551 A B) (G2 : type557 A B P) (G1 : type548 A B) (H2 : type558 A B P) (s : P -> A) (H1 : type549 A B) (_114084 : type794 A P) (h1 : _114084 = (term1470 A P)) : (term1564 A B P lt2 P2 P1 G2 G1 H2 s H1) = (term1565 A B P lt2 P2 P1 G2 G1 H2 _114084 s H1).
Proof. exact (MK_COMB (@lem8367774) (@lem8367773 A B P lt2 P2 P1 G2 G1 H2 s H1 _114084 h1)). Qed.
Lemma lem8367777 {A P : Type'} (s : P -> A) (x : A) (_114084 : type794 A P) (h1 : _114084 = (term1470 A P)) : (term1431 A P s x) = (_114084 s x).
Proof. exact (EQ_MP (@lem8367634 A P _114084 s x) (@lem8367633 A P s x _114084 h1)). Qed.
Lemma lem8367778 {A P : Type'} (s : P -> A) (x : A) (_114084 : type794 A P) (h1 : _114084 = (term1470 A P)) : (term1431 A P s x) = (_114084 s x).
Proof. exact (@lem8367777 A P s x _114084 h1). Qed.
Lemma lem8367779 {A B P : Type'} (P2 : type560 A B P) (f : A -> B) : (P2 f) = (P2 f).
Proof. exact (eq_refl (P2 f)). Qed.
Lemma lem8367780 {A B P : Type'} (P2 : type560 A B P) (f : A -> B) (s : P -> A) (x : A) (_114084 : type794 A P) (h1 : _114084 = (term1470 A P)) : (term1494 A B P P2 f s x) = (term1495 A B P P2 f _114084 s x).
Proof. exact (MK_COMB (@lem8367779 A B P P2 f) (@lem8367778 A P s x _114084 h1)). Qed.
Lemma lem8367781 {A P : Type'} (s : P -> A) (x : A) : (term1496 A P s x) = (term1496 A P s x).
Proof. exact (eq_refl (term1496 A P s x)). Qed.
Lemma lem8367782 {A B P : Type'} (P2 : type560 A B P) (f : A -> B) (s : P -> A) (x : A) (_114084 : type794 A P) (h1 : _114084 = (term1470 A P)) : (term1497 A B P P2 f s x) = (term1498 A B P P2 f _114084 s x).
Proof. exact (MK_COMB (@lem8367781 A P s x) (@lem8367780 A B P P2 f s x _114084 h1)). Qed.
Lemma lem8367783 {A B : Type'} (P1 : type551 A B) (f : A -> B) (x : A) : (P1 f x) = (P1 f x).
Proof. exact (eq_refl (P1 f x)). Qed.
Lemma lem8367784 {A B P : Type'} (P2 : type560 A B P) (s : P -> A) (P1 : type551 A B) (f : A -> B) (x : A) (_114084 : type794 A P) (h1 : _114084 = (term1470 A P)) : (term1499 A B P P2 s P1 f x) = (term1500 A B P P2 _114084 s P1 f x).
Proof. exact (MK_COMB (@lem8367782 A B P P2 f s x _114084 h1) (@lem8367783 A B P1 f x)). Qed.
Lemma lem8367785 {A B P : Type'} (P2 : type560 A B P) (s : P -> A) (P1 : type551 A B) (f : A -> B) (_114084 : type794 A P) (h1 : _114084 = (term1470 A P)) : (term1501 A B P P2 s P1 f) = (term1502 A B P P2 _114084 s P1 f).
Proof. exact (fun_ext (fun x : A => @lem8367784 A B P P2 s P1 f x _114084 h1)). Qed.
Lemma lem8367786 {A B P : Type'} (P2 : type560 A B P) (s : P -> A) (P1 : type551 A B) (_114084 : type794 A P) (h1 : _114084 = (term1470 A P)) : (term1503 A B P P2 s P1) = (term1504 A B P P2 _114084 s P1).
Proof. exact (fun_ext (fun f : A -> B => @lem8367785 A B P P2 s P1 f _114084 h1)). Qed.
Lemma lem8367787 {A B : Type'} (f : A -> B) : f = f.
Proof. exact (eq_refl f). Qed.
Lemma lem8367788 {A B P : Type'} (P2 : type560 A B P) (s : P -> A) (P1 : type551 A B) (f : A -> B) (_114084 : type794 A P) (h1 : _114084 = (term1470 A P)) : (term1505 A B P P2 s P1 f) = (term1506 A B P P2 _114084 s P1 f).
Proof. exact (MK_COMB (@lem8367786 A B P P2 s P1 _114084 h1) (@lem8367787 A B f)). Qed.
Lemma lem8367789 {A : Type'} (x : A) : x = x.
Proof. exact (eq_refl x). Qed.
Lemma lem8367790 {A B P : Type'} (P2 : type560 A B P) (s : P -> A) (P1 : type551 A B) (f : A -> B) (x : A) (_114084 : type794 A P) (h1 : _114084 = (term1470 A P)) : (term1507 A B P P2 s P1 f x) = (term1508 A B P P2 _114084 s P1 f x).
Proof. exact (MK_COMB (@lem8367788 A B P P2 s P1 f _114084 h1) (@lem8367789 A x)). Qed.
Lemma lem8367791 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8367792 {A B P : Type'} (P2 : type560 A B P) (s : P -> A) (P1 : type551 A B) (f : A -> B) (x : A) (_114084 : type794 A P) (h1 : _114084 = (term1470 A P)) : (term1566 A B P P2 s P1 f x) = (term1567 A B P P2 _114084 s P1 f x).
Proof. exact (MK_COMB (@lem8367791) (@lem8367790 A B P P2 s P1 f x _114084 h1)). Qed.
Lemma lem8367794 {A P : Type'} (s : P -> A) (x : A) (_114084 : type794 A P) (h1 : _114084 = (term1470 A P)) : (term1431 A P s x) = (_114084 s x).
Proof. exact (EQ_MP (@lem8367634 A P _114084 s x) (@lem8367633 A P s x _114084 h1)). Qed.
Lemma lem8367795 {A P : Type'} (s : P -> A) (x : A) (_114084 : type794 A P) (h1 : _114084 = (term1470 A P)) : (term1431 A P s x) = (_114084 s x).
Proof. exact (@lem8367794 A P s x _114084 h1). Qed.
Lemma lem8367796 {A B P : Type'} (G2 : type557 A B P) (f : A -> B) : (G2 f) = (G2 f).
Proof. exact (eq_refl (G2 f)). Qed.
Lemma lem8367797 {A B P : Type'} (G2 : type557 A B P) (f : A -> B) (s : P -> A) (x : A) (_114084 : type794 A P) (h1 : _114084 = (term1470 A P)) : (term1513 A B P G2 f s x) = (term1514 A B P G2 f _114084 s x).
Proof. exact (MK_COMB (@lem8367796 A B P G2 f) (@lem8367795 A P s x _114084 h1)). Qed.
Lemma lem8367798 {A P : Type'} (s : P -> A) (x : A) : (term1515 A P s x) = (term1515 A P s x).
Proof. exact (eq_refl (term1515 A P s x)). Qed.
Lemma lem8367799 {A B P : Type'} (G2 : type557 A B P) (f : A -> B) (s : P -> A) (x : A) (_114084 : type794 A P) (h1 : _114084 = (term1470 A P)) : (term1516 A B P G2 f s x) = (term1517 A B P G2 f _114084 s x).
Proof. exact (MK_COMB (@lem8367798 A P s x) (@lem8367797 A B P G2 f s x _114084 h1)). Qed.
Lemma lem8367800 {A B : Type'} (G1 : type548 A B) (f : A -> B) (x : A) : (G1 f x) = (G1 f x).
Proof. exact (eq_refl (G1 f x)). Qed.
Lemma lem8367801 {A B P : Type'} (G2 : type557 A B P) (s : P -> A) (G1 : type548 A B) (f : A -> B) (x : A) (_114084 : type794 A P) (h1 : _114084 = (term1470 A P)) : (term1518 A B P G2 s G1 f x) = (term1519 A B P G2 _114084 s G1 f x).
Proof. exact (MK_COMB (@lem8367799 A B P G2 f s x _114084 h1) (@lem8367800 A B G1 f x)). Qed.
Lemma lem8367802 {A B P : Type'} (G2 : type557 A B P) (s : P -> A) (G1 : type548 A B) (f : A -> B) (_114084 : type794 A P) (h1 : _114084 = (term1470 A P)) : (term1520 A B P G2 s G1 f) = (term1521 A B P G2 _114084 s G1 f).
Proof. exact (fun_ext (fun x : A => @lem8367801 A B P G2 s G1 f x _114084 h1)). Qed.
Lemma lem8367803 {A B P : Type'} (G2 : type557 A B P) (s : P -> A) (G1 : type548 A B) (_114084 : type794 A P) (h1 : _114084 = (term1470 A P)) : (term1522 A B P G2 s G1) = (term1523 A B P G2 _114084 s G1).
Proof. exact (fun_ext (fun f : A -> B => @lem8367802 A B P G2 s G1 f _114084 h1)). Qed.
Lemma lem8367804 {A B : Type'} (f : A -> B) : f = f.
Proof. exact (eq_refl f). Qed.
Lemma lem8367805 {A B P : Type'} (G2 : type557 A B P) (s : P -> A) (G1 : type548 A B) (f : A -> B) (_114084 : type794 A P) (h1 : _114084 = (term1470 A P)) : (term1524 A B P G2 s G1 f) = (term1525 A B P G2 _114084 s G1 f).
Proof. exact (MK_COMB (@lem8367803 A B P G2 s G1 _114084 h1) (@lem8367804 A B f)). Qed.
Lemma lem8367806 {A : Type'} (x : A) : x = x.
Proof. exact (eq_refl x). Qed.
Lemma lem8367807 {A B P : Type'} (G2 : type557 A B P) (s : P -> A) (G1 : type548 A B) (f : A -> B) (x : A) (_114084 : type794 A P) (h1 : _114084 = (term1470 A P)) : (term1526 A B P G2 s G1 f x) = (term1527 A B P G2 _114084 s G1 f x).
Proof. exact (MK_COMB (@lem8367805 A B P G2 s G1 f _114084 h1) (@lem8367806 A x)). Qed.
Lemma lem8367808 {A : Type'} (lt2 : type1402 A) (y : A) : (lt2 y) = (lt2 y).
Proof. exact (eq_refl (lt2 y)). Qed.
Lemma lem8367809 {A B P : Type'} (lt2 : type1402 A) (y : A) (G2 : type557 A B P) (s : P -> A) (G1 : type548 A B) (f : A -> B) (x : A) (_114084 : type794 A P) (h1 : _114084 = (term1470 A P)) : (term1568 A B P lt2 y G2 s G1 f x) = (term1569 A B P lt2 y G2 _114084 s G1 f x).
Proof. exact (MK_COMB (@lem8367808 A lt2 y) (@lem8367807 A B P G2 s G1 f x _114084 h1)). Qed.
Lemma lem8367810 {A B P : Type'} (P2 : type560 A B P) (P1 : type551 A B) (lt2 : type1402 A) (y : A) (G2 : type557 A B P) (s : P -> A) (G1 : type548 A B) (f : A -> B) (x : A) (_114084 : type794 A P) (h1 : _114084 = (term1470 A P)) : (term1570 A B P P2 P1 lt2 y G2 s G1 f x) = (term1571 A B P P2 P1 lt2 y G2 _114084 s G1 f x).
Proof. exact (MK_COMB (@lem8367792 A B P P2 s P1 f x _114084 h1) (@lem8367809 A B P lt2 y G2 s G1 f x _114084 h1)). Qed.
Lemma lem8367811 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem8367812 {A B P : Type'} (P2 : type560 A B P) (P1 : type551 A B) (lt2 : type1402 A) (y : A) (G2 : type557 A B P) (s : P -> A) (G1 : type548 A B) (f : A -> B) (x : A) (_114084 : type794 A P) (h1 : _114084 = (term1470 A P)) : (term1572 A B P P2 P1 lt2 y G2 s G1 f x) = (term1573 A B P P2 P1 lt2 y G2 _114084 s G1 f x).
Proof. exact (MK_COMB (@lem8367811) (@lem8367810 A B P P2 P1 lt2 y G2 s G1 f x _114084 h1)). Qed.
Lemma lem8367813 {A : Type'} (lt2 : type1402 A) (y : A) (x : A) : (lt2 y x) = (lt2 y x).
Proof. exact (eq_refl (lt2 y x)). Qed.
Lemma lem8367814 {A B P : Type'} (P2 : type560 A B P) (P1 : type551 A B) (G2 : type557 A B P) (s : P -> A) (G1 : type548 A B) (f : A -> B) (lt2 : type1402 A) (y : A) (x : A) (_114084 : type794 A P) (h1 : _114084 = (term1470 A P)) : (term1574 A B P P2 P1 G2 s G1 f lt2 y x) = (term1575 A B P P2 P1 G2 _114084 s G1 f lt2 y x).
Proof. exact (MK_COMB (@lem8367812 A B P P2 P1 lt2 y G2 s G1 f x _114084 h1) (@lem8367813 A lt2 y x)). Qed.
Lemma lem8367815 {A B P : Type'} (P2 : type560 A B P) (P1 : type551 A B) (G2 : type557 A B P) (s : P -> A) (G1 : type548 A B) (f : A -> B) (lt2 : type1402 A) (x : A) (_114084 : type794 A P) (h1 : _114084 = (term1470 A P)) : (term1576 A B P P2 P1 G2 s G1 f lt2 x) = (term1577 A B P P2 P1 G2 _114084 s G1 f lt2 x).
Proof. exact (fun_ext (fun y : A => @lem8367814 A B P P2 P1 G2 s G1 f lt2 y x _114084 h1)). Qed.
Lemma lem8367816 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem8367817 {A B P : Type'} (P2 : type560 A B P) (P1 : type551 A B) (G2 : type557 A B P) (s : P -> A) (G1 : type548 A B) (f : A -> B) (lt2 : type1402 A) (x : A) (_114084 : type794 A P) (h1 : _114084 = (term1470 A P)) : (term1578 A B P P2 P1 G2 s G1 f lt2 x) = (term1579 A B P P2 P1 G2 _114084 s G1 f lt2 x).
Proof. exact (MK_COMB (@lem8367816 A) (@lem8367815 A B P P2 P1 G2 s G1 f lt2 x _114084 h1)). Qed.
Lemma lem8367818 {A B P : Type'} (P2 : type560 A B P) (P1 : type551 A B) (G2 : type557 A B P) (s : P -> A) (G1 : type548 A B) (f : A -> B) (lt2 : type1402 A) (_114084 : type794 A P) (h1 : _114084 = (term1470 A P)) : (term1580 A B P P2 P1 G2 s G1 f lt2) = (term1581 A B P P2 P1 G2 _114084 s G1 f lt2).
Proof. exact (fun_ext (fun x : A => @lem8367817 A B P P2 P1 G2 s G1 f lt2 x _114084 h1)). Qed.
Lemma lem8367819 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem8367820 {A B P : Type'} (P2 : type560 A B P) (P1 : type551 A B) (G2 : type557 A B P) (s : P -> A) (G1 : type548 A B) (f : A -> B) (lt2 : type1402 A) (_114084 : type794 A P) (h1 : _114084 = (term1470 A P)) : (term1582 A B P P2 P1 G2 s G1 f lt2) = (term1583 A B P P2 P1 G2 _114084 s G1 f lt2).
Proof. exact (MK_COMB (@lem8367819 A) (@lem8367818 A B P P2 P1 G2 s G1 f lt2 _114084 h1)). Qed.
Lemma lem8367821 {A B P : Type'} (P2 : type560 A B P) (P1 : type551 A B) (G2 : type557 A B P) (s : P -> A) (G1 : type548 A B) (lt2 : type1402 A) (_114084 : type794 A P) (h1 : _114084 = (term1470 A P)) : (term1584 A B P P2 P1 G2 s G1 lt2) = (term1585 A B P P2 P1 G2 _114084 s G1 lt2).
Proof. exact (fun_ext (fun f : A -> B => @lem8367820 A B P P2 P1 G2 s G1 f lt2 _114084 h1)). Qed.
Lemma lem8367822 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem8367823 {A B P : Type'} (P2 : type560 A B P) (P1 : type551 A B) (G2 : type557 A B P) (s : P -> A) (G1 : type548 A B) (lt2 : type1402 A) (_114084 : type794 A P) (h1 : _114084 = (term1470 A P)) : (term1586 A B P P2 P1 G2 s G1 lt2) = (term1587 A B P P2 P1 G2 _114084 s G1 lt2).
Proof. exact (MK_COMB (@lem8367822 A B) (@lem8367821 A B P P2 P1 G2 s G1 lt2 _114084 h1)). Qed.
Lemma lem8367824 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8367825 {A B P : Type'} (P2 : type560 A B P) (P1 : type551 A B) (G2 : type557 A B P) (s : P -> A) (G1 : type548 A B) (lt2 : type1402 A) (_114084 : type794 A P) (h1 : _114084 = (term1470 A P)) : (term1588 A B P P2 P1 G2 s G1 lt2) = (term1589 A B P P2 P1 G2 _114084 s G1 lt2).
Proof. exact (MK_COMB (@lem8367824) (@lem8367823 A B P P2 P1 G2 s G1 lt2 _114084 h1)). Qed.
Lemma lem8367827 {A P : Type'} (s : P -> A) (x : A) (_114084 : type794 A P) (h1 : _114084 = (term1470 A P)) : (term1431 A P s x) = (_114084 s x).
Proof. exact (EQ_MP (@lem8367634 A P _114084 s x) (@lem8367633 A P s x _114084 h1)). Qed.
Lemma lem8367828 {A P : Type'} (s : P -> A) (x : A) (_114084 : type794 A P) (h1 : _114084 = (term1470 A P)) : (term1431 A P s x) = (_114084 s x).
Proof. exact (@lem8367827 A P s x _114084 h1). Qed.
Lemma lem8367829 {A B P : Type'} (P2 : type560 A B P) (f : A -> B) : (P2 f) = (P2 f).
Proof. exact (eq_refl (P2 f)). Qed.
Lemma lem8367830 {A B P : Type'} (P2 : type560 A B P) (f : A -> B) (s : P -> A) (x : A) (_114084 : type794 A P) (h1 : _114084 = (term1470 A P)) : (term1494 A B P P2 f s x) = (term1495 A B P P2 f _114084 s x).
Proof. exact (MK_COMB (@lem8367829 A B P P2 f) (@lem8367828 A P s x _114084 h1)). Qed.
Lemma lem8367831 {B : Type'} : (@COND B) = (@COND B).
Proof. exact (eq_refl (@COND B)). Qed.
Lemma lem8367832 {A B P : Type'} (P2 : type560 A B P) (f : A -> B) (s : P -> A) (x : A) (_114084 : type794 A P) (h1 : _114084 = (term1470 A P)) : (term1590 A B P P2 f s x) = (term1591 A B P P2 f _114084 s x).
Proof. exact (MK_COMB (@lem8367831 B) (@lem8367830 A B P P2 f s x _114084 h1)). Qed.
Lemma lem8367834 {A P : Type'} (s : P -> A) (x : A) (_114084 : type794 A P) (h1 : _114084 = (term1470 A P)) : (term1431 A P s x) = (_114084 s x).
Proof. exact (EQ_MP (@lem8367634 A P _114084 s x) (@lem8367633 A P s x _114084 h1)). Qed.
Lemma lem8367835 {A P : Type'} (s : P -> A) (x : A) (_114084 : type794 A P) (h1 : _114084 = (term1470 A P)) : (term1431 A P s x) = (_114084 s x).
Proof. exact (@lem8367834 A P s x _114084 h1). Qed.
Lemma lem8367836 {A B P : Type'} (G2 : type557 A B P) (f : A -> B) : (G2 f) = (G2 f).
Proof. exact (eq_refl (G2 f)). Qed.
Lemma lem8367837 {A B P : Type'} (G2 : type557 A B P) (f : A -> B) (s : P -> A) (x : A) (_114084 : type794 A P) (h1 : _114084 = (term1470 A P)) : (term1513 A B P G2 f s x) = (term1514 A B P G2 f _114084 s x).
Proof. exact (MK_COMB (@lem8367836 A B P G2 f) (@lem8367835 A P s x _114084 h1)). Qed.
Lemma lem8367838 {A B : Type'} (f : A -> B) : f = f.
Proof. exact (eq_refl f). Qed.
Lemma lem8367839 {A B P : Type'} (G2 : type557 A B P) (f : A -> B) (s : P -> A) (x : A) (_114084 : type794 A P) (h1 : _114084 = (term1470 A P)) : (term1592 A B P G2 f s x) = (term1593 A B P G2 f _114084 s x).
Proof. exact (MK_COMB (@lem8367838 A B f) (@lem8367837 A B P G2 f s x _114084 h1)). Qed.
Lemma lem8367840 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (s : P -> A) (x : A) (_114084 : type794 A P) (h1 : _114084 = (term1470 A P)) : (term1594 A B P P2 G2 f s x) = (term1595 A B P P2 G2 f _114084 s x).
Proof. exact (MK_COMB (@lem8367832 A B P P2 f s x _114084 h1) (@lem8367839 A B P G2 f s x _114084 h1)). Qed.
Lemma lem8367842 {A P : Type'} (s : P -> A) (x : A) (_114084 : type794 A P) (h1 : _114084 = (term1470 A P)) : (term1431 A P s x) = (_114084 s x).
Proof. exact (EQ_MP (@lem8367634 A P _114084 s x) (@lem8367633 A P s x _114084 h1)). Qed.
Lemma lem8367843 {A P : Type'} (s : P -> A) (x : A) (_114084 : type794 A P) (h1 : _114084 = (term1470 A P)) : (term1431 A P s x) = (_114084 s x).
Proof. exact (@lem8367842 A P s x _114084 h1). Qed.
Lemma lem8367844 {A B P : Type'} (H2 : type558 A B P) (f : A -> B) : (H2 f) = (H2 f).
Proof. exact (eq_refl (H2 f)). Qed.
Lemma lem8367845 {A B P : Type'} (H2 : type558 A B P) (f : A -> B) (s : P -> A) (x : A) (_114084 : type794 A P) (h1 : _114084 = (term1470 A P)) : (term1429 A B P H2 f s x) = (term1532 A B P H2 f _114084 s x).
Proof. exact (MK_COMB (@lem8367844 A B P H2 f) (@lem8367843 A P s x _114084 h1)). Qed.
Lemma lem8367846 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (f : A -> B) (s : P -> A) (x : A) (_114084 : type794 A P) (h1 : _114084 = (term1470 A P)) : (term1430 A B P P2 G2 H2 f s x) = (term1596 A B P P2 G2 H2 f _114084 s x).
Proof. exact (MK_COMB (@lem8367840 A B P P2 G2 f s x _114084 h1) (@lem8367845 A B P H2 f s x _114084 h1)). Qed.
Lemma lem8367847 {A B P : Type'} (s : P -> A) (x : A) : (term1432 A B P s x) = (term1432 A B P s x).
Proof. exact (eq_refl (term1432 A B P s x)). Qed.
Lemma lem8367848 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (f : A -> B) (s : P -> A) (x : A) (_114084 : type794 A P) (h1 : _114084 = (term1470 A P)) : (term1434 A B P P2 G2 H2 f s x) = (term1597 A B P P2 G2 H2 f _114084 s x).
Proof. exact (MK_COMB (@lem8367847 A B P s x) (@lem8367846 A B P P2 G2 H2 f s x _114084 h1)). Qed.
Lemma lem8367849 {A B : Type'} (P1 : type551 A B) (G1 : type548 A B) (H1 : type549 A B) (f : A -> B) (x : A) : (term908 A B P1 G1 H1 f x) = (term908 A B P1 G1 H1 f x).
Proof. exact (eq_refl (term908 A B P1 G1 H1 f x)). Qed.
Lemma lem8367850 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (s : P -> A) (P1 : type551 A B) (G1 : type548 A B) (H1 : type549 A B) (f : A -> B) (x : A) (_114084 : type794 A P) (h1 : _114084 = (term1470 A P)) : (term1435 A B P P2 G2 H2 s P1 G1 H1 f x) = (term1598 A B P P2 G2 H2 _114084 s P1 G1 H1 f x).
Proof. exact (MK_COMB (@lem8367848 A B P P2 G2 H2 f s x _114084 h1) (@lem8367849 A B P1 G1 H1 f x)). Qed.
Lemma lem8367851 {B : Type'} : (@eq B) = (@eq B).
Proof. exact (eq_refl (@eq B)). Qed.
Lemma lem8367852 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (s : P -> A) (P1 : type551 A B) (G1 : type548 A B) (H1 : type549 A B) (f : A -> B) (x : A) (_114084 : type794 A P) (h1 : _114084 = (term1470 A P)) : (term1436 A B P P2 G2 H2 s P1 G1 H1 f x) = (term1599 A B P P2 G2 H2 _114084 s P1 G1 H1 f x).
Proof. exact (MK_COMB (@lem8367851 B) (@lem8367850 A B P P2 G2 H2 s P1 G1 H1 f x _114084 h1)). Qed.
Lemma lem8367854 {A P : Type'} (s : P -> A) (x : A) (_114084 : type794 A P) (h1 : _114084 = (term1470 A P)) : (term1431 A P s x) = (_114084 s x).
Proof. exact (EQ_MP (@lem8367634 A P _114084 s x) (@lem8367633 A P s x _114084 h1)). Qed.
Lemma lem8367855 {A P : Type'} (s : P -> A) (x : A) (_114084 : type794 A P) (h1 : _114084 = (term1470 A P)) : (term1431 A P s x) = (_114084 s x).
Proof. exact (@lem8367854 A P s x _114084 h1). Qed.
Lemma lem8367856 {A B P : Type'} (P2 : type560 A B P) (f : A -> B) : (P2 f) = (P2 f).
Proof. exact (eq_refl (P2 f)). Qed.
Lemma lem8367857 {A B P : Type'} (P2 : type560 A B P) (f : A -> B) (s : P -> A) (x : A) (_114084 : type794 A P) (h1 : _114084 = (term1470 A P)) : (term1494 A B P P2 f s x) = (term1495 A B P P2 f _114084 s x).
Proof. exact (MK_COMB (@lem8367856 A B P P2 f) (@lem8367855 A P s x _114084 h1)). Qed.
Lemma lem8367858 {A P : Type'} (s : P -> A) (x : A) : (term1496 A P s x) = (term1496 A P s x).
Proof. exact (eq_refl (term1496 A P s x)). Qed.
Lemma lem8367859 {A B P : Type'} (P2 : type560 A B P) (f : A -> B) (s : P -> A) (x : A) (_114084 : type794 A P) (h1 : _114084 = (term1470 A P)) : (term1497 A B P P2 f s x) = (term1498 A B P P2 f _114084 s x).
Proof. exact (MK_COMB (@lem8367858 A P s x) (@lem8367857 A B P P2 f s x _114084 h1)). Qed.
Lemma lem8367860 {A B : Type'} (P1 : type551 A B) (f : A -> B) (x : A) : (P1 f x) = (P1 f x).
Proof. exact (eq_refl (P1 f x)). Qed.
Lemma lem8367861 {A B P : Type'} (P2 : type560 A B P) (s : P -> A) (P1 : type551 A B) (f : A -> B) (x : A) (_114084 : type794 A P) (h1 : _114084 = (term1470 A P)) : (term1499 A B P P2 s P1 f x) = (term1500 A B P P2 _114084 s P1 f x).
Proof. exact (MK_COMB (@lem8367859 A B P P2 f s x _114084 h1) (@lem8367860 A B P1 f x)). Qed.
Lemma lem8367862 {A B P : Type'} (P2 : type560 A B P) (s : P -> A) (P1 : type551 A B) (f : A -> B) (_114084 : type794 A P) (h1 : _114084 = (term1470 A P)) : (term1501 A B P P2 s P1 f) = (term1502 A B P P2 _114084 s P1 f).
Proof. exact (fun_ext (fun x : A => @lem8367861 A B P P2 s P1 f x _114084 h1)). Qed.
Lemma lem8367863 {A B P : Type'} (P2 : type560 A B P) (s : P -> A) (P1 : type551 A B) (_114084 : type794 A P) (h1 : _114084 = (term1470 A P)) : (term1503 A B P P2 s P1) = (term1504 A B P P2 _114084 s P1).
Proof. exact (fun_ext (fun f : A -> B => @lem8367862 A B P P2 s P1 f _114084 h1)). Qed.
Lemma lem8367864 {A B : Type'} (f : A -> B) : f = f.
Proof. exact (eq_refl f). Qed.
Lemma lem8367865 {A B P : Type'} (P2 : type560 A B P) (s : P -> A) (P1 : type551 A B) (f : A -> B) (_114084 : type794 A P) (h1 : _114084 = (term1470 A P)) : (term1505 A B P P2 s P1 f) = (term1506 A B P P2 _114084 s P1 f).
Proof. exact (MK_COMB (@lem8367863 A B P P2 s P1 _114084 h1) (@lem8367864 A B f)). Qed.
Lemma lem8367866 {A : Type'} (x : A) : x = x.
Proof. exact (eq_refl x). Qed.
Lemma lem8367867 {A B P : Type'} (P2 : type560 A B P) (s : P -> A) (P1 : type551 A B) (f : A -> B) (x : A) (_114084 : type794 A P) (h1 : _114084 = (term1470 A P)) : (term1507 A B P P2 s P1 f x) = (term1508 A B P P2 _114084 s P1 f x).
Proof. exact (MK_COMB (@lem8367865 A B P P2 s P1 f _114084 h1) (@lem8367866 A x)). Qed.
Lemma lem8367868 {B : Type'} : (@COND B) = (@COND B).
Proof. exact (eq_refl (@COND B)). Qed.
Lemma lem8367869 {A B P : Type'} (P2 : type560 A B P) (s : P -> A) (P1 : type551 A B) (f : A -> B) (x : A) (_114084 : type794 A P) (h1 : _114084 = (term1470 A P)) : (term1600 A B P P2 s P1 f x) = (term1601 A B P P2 _114084 s P1 f x).
Proof. exact (MK_COMB (@lem8367868 B) (@lem8367867 A B P P2 s P1 f x _114084 h1)). Qed.
Lemma lem8367871 {A P : Type'} (s : P -> A) (x : A) (_114084 : type794 A P) (h1 : _114084 = (term1470 A P)) : (term1431 A P s x) = (_114084 s x).
Proof. exact (EQ_MP (@lem8367634 A P _114084 s x) (@lem8367633 A P s x _114084 h1)). Qed.
Lemma lem8367872 {A P : Type'} (s : P -> A) (x : A) (_114084 : type794 A P) (h1 : _114084 = (term1470 A P)) : (term1431 A P s x) = (_114084 s x).
Proof. exact (@lem8367871 A P s x _114084 h1). Qed.
Lemma lem8367873 {A B P : Type'} (G2 : type557 A B P) (f : A -> B) : (G2 f) = (G2 f).
Proof. exact (eq_refl (G2 f)). Qed.
Lemma lem8367874 {A B P : Type'} (G2 : type557 A B P) (f : A -> B) (s : P -> A) (x : A) (_114084 : type794 A P) (h1 : _114084 = (term1470 A P)) : (term1513 A B P G2 f s x) = (term1514 A B P G2 f _114084 s x).
Proof. exact (MK_COMB (@lem8367873 A B P G2 f) (@lem8367872 A P s x _114084 h1)). Qed.
Lemma lem8367875 {A P : Type'} (s : P -> A) (x : A) : (term1515 A P s x) = (term1515 A P s x).
Proof. exact (eq_refl (term1515 A P s x)). Qed.
Lemma lem8367876 {A B P : Type'} (G2 : type557 A B P) (f : A -> B) (s : P -> A) (x : A) (_114084 : type794 A P) (h1 : _114084 = (term1470 A P)) : (term1516 A B P G2 f s x) = (term1517 A B P G2 f _114084 s x).
Proof. exact (MK_COMB (@lem8367875 A P s x) (@lem8367874 A B P G2 f s x _114084 h1)). Qed.
Lemma lem8367877 {A B : Type'} (G1 : type548 A B) (f : A -> B) (x : A) : (G1 f x) = (G1 f x).
Proof. exact (eq_refl (G1 f x)). Qed.
Lemma lem8367878 {A B P : Type'} (G2 : type557 A B P) (s : P -> A) (G1 : type548 A B) (f : A -> B) (x : A) (_114084 : type794 A P) (h1 : _114084 = (term1470 A P)) : (term1518 A B P G2 s G1 f x) = (term1519 A B P G2 _114084 s G1 f x).
Proof. exact (MK_COMB (@lem8367876 A B P G2 f s x _114084 h1) (@lem8367877 A B G1 f x)). Qed.
Lemma lem8367879 {A B P : Type'} (G2 : type557 A B P) (s : P -> A) (G1 : type548 A B) (f : A -> B) (_114084 : type794 A P) (h1 : _114084 = (term1470 A P)) : (term1520 A B P G2 s G1 f) = (term1521 A B P G2 _114084 s G1 f).
Proof. exact (fun_ext (fun x : A => @lem8367878 A B P G2 s G1 f x _114084 h1)). Qed.
Lemma lem8367880 {A B P : Type'} (G2 : type557 A B P) (s : P -> A) (G1 : type548 A B) (_114084 : type794 A P) (h1 : _114084 = (term1470 A P)) : (term1522 A B P G2 s G1) = (term1523 A B P G2 _114084 s G1).
Proof. exact (fun_ext (fun f : A -> B => @lem8367879 A B P G2 s G1 f _114084 h1)). Qed.
Lemma lem8367881 {A B : Type'} (f : A -> B) : f = f.
Proof. exact (eq_refl f). Qed.
Lemma lem8367882 {A B P : Type'} (G2 : type557 A B P) (s : P -> A) (G1 : type548 A B) (f : A -> B) (_114084 : type794 A P) (h1 : _114084 = (term1470 A P)) : (term1524 A B P G2 s G1 f) = (term1525 A B P G2 _114084 s G1 f).
Proof. exact (MK_COMB (@lem8367880 A B P G2 s G1 _114084 h1) (@lem8367881 A B f)). Qed.
Lemma lem8367883 {A : Type'} (x : A) : x = x.
Proof. exact (eq_refl x). Qed.
Lemma lem8367884 {A B P : Type'} (G2 : type557 A B P) (s : P -> A) (G1 : type548 A B) (f : A -> B) (x : A) (_114084 : type794 A P) (h1 : _114084 = (term1470 A P)) : (term1526 A B P G2 s G1 f x) = (term1527 A B P G2 _114084 s G1 f x).
Proof. exact (MK_COMB (@lem8367882 A B P G2 s G1 f _114084 h1) (@lem8367883 A x)). Qed.
Lemma lem8367885 {A B : Type'} (f : A -> B) : f = f.
Proof. exact (eq_refl f). Qed.
Lemma lem8367886 {A B P : Type'} (G2 : type557 A B P) (s : P -> A) (G1 : type548 A B) (f : A -> B) (x : A) (_114084 : type794 A P) (h1 : _114084 = (term1470 A P)) : (term1602 A B P G2 s G1 f x) = (term1603 A B P G2 _114084 s G1 f x).
Proof. exact (MK_COMB (@lem8367885 A B f) (@lem8367884 A B P G2 s G1 f x _114084 h1)). Qed.
Lemma lem8367887 {A B P : Type'} (P2 : type560 A B P) (P1 : type551 A B) (G2 : type557 A B P) (s : P -> A) (G1 : type548 A B) (f : A -> B) (x : A) (_114084 : type794 A P) (h1 : _114084 = (term1470 A P)) : (term1604 A B P P2 P1 G2 s G1 f x) = (term1605 A B P P2 P1 G2 _114084 s G1 f x).
Proof. exact (MK_COMB (@lem8367869 A B P P2 s P1 f x _114084 h1) (@lem8367886 A B P G2 s G1 f x _114084 h1)). Qed.
Lemma lem8367889 {A P : Type'} (s : P -> A) (x : A) (_114084 : type794 A P) (h1 : _114084 = (term1470 A P)) : (term1431 A P s x) = (_114084 s x).
Proof. exact (EQ_MP (@lem8367634 A P _114084 s x) (@lem8367633 A P s x _114084 h1)). Qed.
Lemma lem8367890 {A P : Type'} (s : P -> A) (x : A) (_114084 : type794 A P) (h1 : _114084 = (term1470 A P)) : (term1431 A P s x) = (_114084 s x).
Proof. exact (@lem8367889 A P s x _114084 h1). Qed.
Lemma lem8367891 {A B P : Type'} (H2 : type558 A B P) (f : A -> B) : (H2 f) = (H2 f).
Proof. exact (eq_refl (H2 f)). Qed.
Lemma lem8367892 {A B P : Type'} (H2 : type558 A B P) (f : A -> B) (s : P -> A) (x : A) (_114084 : type794 A P) (h1 : _114084 = (term1470 A P)) : (term1429 A B P H2 f s x) = (term1532 A B P H2 f _114084 s x).
Proof. exact (MK_COMB (@lem8367891 A B P H2 f) (@lem8367890 A P s x _114084 h1)). Qed.
Lemma lem8367893 {A B P : Type'} (s : P -> A) (x : A) : (term1432 A B P s x) = (term1432 A B P s x).
Proof. exact (eq_refl (term1432 A B P s x)). Qed.
Lemma lem8367894 {A B P : Type'} (H2 : type558 A B P) (f : A -> B) (s : P -> A) (x : A) (_114084 : type794 A P) (h1 : _114084 = (term1470 A P)) : (term1433 A B P H2 f s x) = (term1533 A B P H2 f _114084 s x).
Proof. exact (MK_COMB (@lem8367893 A B P s x) (@lem8367892 A B P H2 f s x _114084 h1)). Qed.
Lemma lem8367895 {A B : Type'} (H1 : type549 A B) (f : A -> B) (x : A) : (H1 f x) = (H1 f x).
Proof. exact (eq_refl (H1 f x)). Qed.
Lemma lem8367896 {A B P : Type'} (H2 : type558 A B P) (s : P -> A) (H1 : type549 A B) (f : A -> B) (x : A) (_114084 : type794 A P) (h1 : _114084 = (term1470 A P)) : (term1534 A B P H2 s H1 f x) = (term1535 A B P H2 _114084 s H1 f x).
Proof. exact (MK_COMB (@lem8367894 A B P H2 f s x _114084 h1) (@lem8367895 A B H1 f x)). Qed.
Lemma lem8367897 {A B P : Type'} (H2 : type558 A B P) (s : P -> A) (H1 : type549 A B) (f : A -> B) (_114084 : type794 A P) (h1 : _114084 = (term1470 A P)) : (term1536 A B P H2 s H1 f) = (term1537 A B P H2 _114084 s H1 f).
Proof. exact (fun_ext (fun x : A => @lem8367896 A B P H2 s H1 f x _114084 h1)). Qed.
Lemma lem8367898 {A B P : Type'} (H2 : type558 A B P) (s : P -> A) (H1 : type549 A B) (_114084 : type794 A P) (h1 : _114084 = (term1470 A P)) : (term1538 A B P H2 s H1) = (term1539 A B P H2 _114084 s H1).
Proof. exact (fun_ext (fun f : A -> B => @lem8367897 A B P H2 s H1 f _114084 h1)). Qed.
Lemma lem8367899 {A B : Type'} (f : A -> B) : f = f.
Proof. exact (eq_refl f). Qed.
Lemma lem8367900 {A B P : Type'} (H2 : type558 A B P) (s : P -> A) (H1 : type549 A B) (f : A -> B) (_114084 : type794 A P) (h1 : _114084 = (term1470 A P)) : (term1540 A B P H2 s H1 f) = (term1541 A B P H2 _114084 s H1 f).
Proof. exact (MK_COMB (@lem8367898 A B P H2 s H1 _114084 h1) (@lem8367899 A B f)). Qed.
Lemma lem8367901 {A : Type'} (x : A) : x = x.
Proof. exact (eq_refl x). Qed.
Lemma lem8367902 {A B P : Type'} (H2 : type558 A B P) (s : P -> A) (H1 : type549 A B) (f : A -> B) (x : A) (_114084 : type794 A P) (h1 : _114084 = (term1470 A P)) : (term1542 A B P H2 s H1 f x) = (term1543 A B P H2 _114084 s H1 f x).
Proof. exact (MK_COMB (@lem8367900 A B P H2 s H1 f _114084 h1) (@lem8367901 A x)). Qed.
Lemma lem8367903 {A B P : Type'} (P2 : type560 A B P) (P1 : type551 A B) (G2 : type557 A B P) (G1 : type548 A B) (H2 : type558 A B P) (s : P -> A) (H1 : type549 A B) (f : A -> B) (x : A) (_114084 : type794 A P) (h1 : _114084 = (term1470 A P)) : (term1606 A B P P2 P1 G2 G1 H2 s H1 f x) = (term1607 A B P P2 P1 G2 G1 H2 _114084 s H1 f x).
Proof. exact (MK_COMB (@lem8367887 A B P P2 P1 G2 s G1 f x _114084 h1) (@lem8367902 A B P H2 s H1 f x _114084 h1)). Qed.
Lemma lem8367904 {A B P : Type'} (P2 : type560 A B P) (P1 : type551 A B) (G2 : type557 A B P) (G1 : type548 A B) (H2 : type558 A B P) (s : P -> A) (H1 : type549 A B) (f : A -> B) (x : A) (_114084 : type794 A P) (h1 : _114084 = (term1470 A P)) : ((term1435 A B P P2 G2 H2 s P1 G1 H1 f x) = (term1606 A B P P2 P1 G2 G1 H2 s H1 f x)) = ((term1598 A B P P2 G2 H2 _114084 s P1 G1 H1 f x) = (term1607 A B P P2 P1 G2 G1 H2 _114084 s H1 f x)).
Proof. exact (MK_COMB (@lem8367852 A B P P2 G2 H2 s P1 G1 H1 f x _114084 h1) (@lem8367903 A B P P2 P1 G2 G1 H2 s H1 f x _114084 h1)). Qed.
Lemma lem8367905 {A B P : Type'} (P2 : type560 A B P) (P1 : type551 A B) (G2 : type557 A B P) (G1 : type548 A B) (H2 : type558 A B P) (s : P -> A) (H1 : type549 A B) (f : A -> B) (_114084 : type794 A P) (h1 : _114084 = (term1470 A P)) : (term1608 A B P P2 P1 G2 G1 H2 s H1 f) = (term1609 A B P P2 P1 G2 G1 H2 _114084 s H1 f).
Proof. exact (fun_ext (fun x : A => @lem8367904 A B P P2 P1 G2 G1 H2 s H1 f x _114084 h1)). Qed.
Lemma lem8367906 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem8367907 {A B P : Type'} (P2 : type560 A B P) (P1 : type551 A B) (G2 : type557 A B P) (G1 : type548 A B) (H2 : type558 A B P) (s : P -> A) (H1 : type549 A B) (f : A -> B) (_114084 : type794 A P) (h1 : _114084 = (term1470 A P)) : (term1610 A B P P2 P1 G2 G1 H2 s H1 f) = (term1611 A B P P2 P1 G2 G1 H2 _114084 s H1 f).
Proof. exact (MK_COMB (@lem8367906 A) (@lem8367905 A B P P2 P1 G2 G1 H2 s H1 f _114084 h1)). Qed.
Lemma lem8367908 {A B P : Type'} (P2 : type560 A B P) (P1 : type551 A B) (G2 : type557 A B P) (G1 : type548 A B) (H2 : type558 A B P) (s : P -> A) (H1 : type549 A B) (_114084 : type794 A P) (h1 : _114084 = (term1470 A P)) : (term1612 A B P P2 P1 G2 G1 H2 s H1) = (term1613 A B P P2 P1 G2 G1 H2 _114084 s H1).
Proof. exact (fun_ext (fun f : A -> B => @lem8367907 A B P P2 P1 G2 G1 H2 s H1 f _114084 h1)). Qed.
Lemma lem8367909 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem8367910 {A B P : Type'} (P2 : type560 A B P) (P1 : type551 A B) (G2 : type557 A B P) (G1 : type548 A B) (H2 : type558 A B P) (s : P -> A) (H1 : type549 A B) (_114084 : type794 A P) (h1 : _114084 = (term1470 A P)) : (term1614 A B P P2 P1 G2 G1 H2 s H1) = (term1615 A B P P2 P1 G2 G1 H2 _114084 s H1).
Proof. exact (MK_COMB (@lem8367909 A B) (@lem8367908 A B P P2 P1 G2 G1 H2 s H1 _114084 h1)). Qed.
Lemma lem8367911 {A B P : Type'} (lt2 : type1402 A) (P2 : type560 A B P) (P1 : type551 A B) (G2 : type557 A B P) (G1 : type548 A B) (H2 : type558 A B P) (s : P -> A) (H1 : type549 A B) (_114084 : type794 A P) (h1 : _114084 = (term1470 A P)) : (term1616 A B P lt2 P2 P1 G2 G1 H2 s H1) = (term1617 A B P lt2 P2 P1 G2 G1 H2 _114084 s H1).
Proof. exact (MK_COMB (@lem8367825 A B P P2 P1 G2 s G1 lt2 _114084 h1) (@lem8367910 A B P P2 P1 G2 G1 H2 s H1 _114084 h1)). Qed.
Lemma lem8367912 {A B P : Type'} (lt2 : type1402 A) (P2 : type560 A B P) (P1 : type551 A B) (G2 : type557 A B P) (G1 : type548 A B) (H2 : type558 A B P) (s : P -> A) (H1 : type549 A B) (_114084 : type794 A P) (h1 : _114084 = (term1470 A P)) : (term1449 A B P lt2 P2 P1 G2 G1 H2 s H1) = (term1618 A B P lt2 P2 P1 G2 G1 H2 _114084 s H1).
Proof. exact (MK_COMB (@lem8367775 A B P lt2 P2 P1 G2 G1 H2 s H1 _114084 h1) (@lem8367911 A B P lt2 P2 P1 G2 G1 H2 s H1 _114084 h1)). Qed.
Lemma lem8367913 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem8367914 {A B P : Type'} (lt2 : type1402 A) (P2 : type560 A B P) (P1 : type551 A B) (G2 : type557 A B P) (G1 : type548 A B) (H2 : type558 A B P) (s : P -> A) (H1 : type549 A B) (_114084 : type794 A P) (h1 : _114084 = (term1470 A P)) : (term1451 A B P lt2 P2 P1 G2 G1 H2 s H1) = (term1619 A B P lt2 P2 P1 G2 G1 H2 _114084 s H1).
Proof. exact (MK_COMB (@lem8367913) (@lem8367912 A B P lt2 P2 P1 G2 G1 H2 s H1 _114084 h1)). Qed.
Lemma lem8367915 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem8367916 {A B P : Type'} (lt2 : type1402 A) (P2 : type560 A B P) (P1 : type551 A B) (G2 : type557 A B P) (G1 : type548 A B) (H2 : type558 A B P) (s : P -> A) (H1 : type549 A B) (_114084 : type794 A P) (h1 : _114084 = (term1470 A P)) : (term1620 A B P lt2 P2 P1 G2 G1 H2 s H1) = (term1621 A B P lt2 P2 P1 G2 G1 H2 _114084 s H1).
Proof. exact (MK_COMB (@lem8367915) (@lem8367914 A B P lt2 P2 P1 G2 G1 H2 s H1 _114084 h1)). Qed.
Lemma lem8367917 : False = False.
Proof. exact (eq_refl False). Qed.
Lemma lem8367918 {A B P : Type'} (lt2 : type1402 A) (P2 : type560 A B P) (P1 : type551 A B) (G2 : type557 A B P) (G1 : type548 A B) (H2 : type558 A B P) (s : P -> A) (H1 : type549 A B) (_114084 : type794 A P) (h1 : _114084 = (term1470 A P)) : (term1450 A B P lt2 P2 P1 G2 G1 H2 s H1) = (term1622 A B P lt2 P2 P1 G2 G1 H2 _114084 s H1).
Proof. exact (MK_COMB (@lem8367916 A B P lt2 P2 P1 G2 G1 H2 s H1 _114084 h1) (@lem8367917)). Qed.
Lemma lem8367919 {A B P : Type'} (t : type558 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) : (term1623 A B P t P2 G2 H2) = (term1623 A B P t P2 G2 H2).
Proof. exact (eq_refl (term1623 A B P t P2 G2 H2)). Qed.
Lemma lem8367920 {A B P : Type'} (t : type558 A B P) (lt2 : type1402 A) (P2 : type560 A B P) (P1 : type551 A B) (G2 : type557 A B P) (G1 : type548 A B) (H2 : type558 A B P) (s : P -> A) (H1 : type549 A B) (_114084 : type794 A P) (h1 : _114084 = (term1470 A P)) : (term1624 A B P t lt2 P2 P1 G2 G1 H2 s H1) = (term1625 A B P t lt2 P2 P1 G2 G1 H2 _114084 s H1).
Proof. exact (MK_COMB (@lem8367919 A B P t P2 G2 H2) (@lem8367918 A B P lt2 P2 P1 G2 G1 H2 s H1 _114084 h1)). Qed.
Lemma lem8367921 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) : (term1626 A B P lt2 s P2 G2 H2) = (term1626 A B P lt2 s P2 G2 H2).
Proof. exact (eq_refl (term1626 A B P lt2 s P2 G2 H2)). Qed.
Lemma lem8367922 {A B P : Type'} (t : type558 A B P) (lt2 : type1402 A) (P2 : type560 A B P) (P1 : type551 A B) (G2 : type557 A B P) (G1 : type548 A B) (H2 : type558 A B P) (s : P -> A) (H1 : type549 A B) (_114084 : type794 A P) (h1 : _114084 = (term1470 A P)) : (term1627 A B P t lt2 P2 P1 G2 G1 H2 s H1) = (term1628 A B P t lt2 P2 P1 G2 G1 H2 _114084 s H1).
Proof. exact (MK_COMB (@lem8367921 A B P lt2 s P2 G2 H2) (@lem8367920 A B P t lt2 P2 P1 G2 G1 H2 s H1 _114084 h1)). Qed.
Lemma lem8367923 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (lt2 : type1402 A) (s : P -> A) : (term1629 A B P P2 G2 lt2 s) = (term1629 A B P P2 G2 lt2 s).
Proof. exact (eq_refl (term1629 A B P P2 G2 lt2 s)). Qed.
Lemma lem8367924 {A B P : Type'} (t : type558 A B P) (lt2 : type1402 A) (P2 : type560 A B P) (P1 : type551 A B) (G2 : type557 A B P) (G1 : type548 A B) (H2 : type558 A B P) (s : P -> A) (H1 : type549 A B) (_114084 : type794 A P) (h1 : _114084 = (term1470 A P)) : (term1630 A B P t lt2 P2 P1 G2 G1 H2 s H1) = (term1631 A B P t lt2 P2 P1 G2 G1 H2 _114084 s H1).
Proof. exact (MK_COMB (@lem8367923 A B P P2 G2 lt2 s) (@lem8367922 A B P t lt2 P2 P1 G2 G1 H2 s H1 _114084 h1)). Qed.
Lemma lem8367925 {A B P : Type'} (clauses : type1635 A B P) (P1 : type551 A B) (G1 : type548 A B) (H1 : type549 A B) : (term1632 A B P clauses P1 G1 H1) = (term1632 A B P clauses P1 G1 H1).
Proof. exact (eq_refl (term1632 A B P clauses P1 G1 H1)). Qed.
Lemma lem8367926 {A B P : Type'} (clauses : type1635 A B P) (t : type558 A B P) (lt2 : type1402 A) (P2 : type560 A B P) (P1 : type551 A B) (G2 : type557 A B P) (G1 : type548 A B) (H2 : type558 A B P) (s : P -> A) (H1 : type549 A B) (_114084 : type794 A P) (h1 : _114084 = (term1470 A P)) : (term1633 A B P clauses t lt2 P2 P1 G2 G1 H2 s H1) = (term1634 A B P clauses t lt2 P2 P1 G2 G1 H2 _114084 s H1).
Proof. exact (MK_COMB (@lem8367925 A B P clauses P1 G1 H1) (@lem8367924 A B P t lt2 P2 P1 G2 G1 H2 s H1 _114084 h1)). Qed.
Lemma lem8367927 {A B : Type'} (P1 : type551 A B) (G1 : type548 A B) (lt2 : type1402 A) : (term1635 A B P1 G1 lt2) = (term1635 A B P1 G1 lt2).
Proof. exact (eq_refl (term1635 A B P1 G1 lt2)). Qed.
Lemma lem8367928 {A B P : Type'} (clauses : type1635 A B P) (t : type558 A B P) (lt2 : type1402 A) (P2 : type560 A B P) (P1 : type551 A B) (G2 : type557 A B P) (G1 : type548 A B) (H2 : type558 A B P) (s : P -> A) (H1 : type549 A B) (_114084 : type794 A P) (h1 : _114084 = (term1470 A P)) : (term1636 A B P clauses t lt2 P2 P1 G2 G1 H2 s H1) = (term1637 A B P clauses t lt2 P2 P1 G2 G1 H2 _114084 s H1).
Proof. exact (MK_COMB (@lem8367927 A B P1 G1 lt2) (@lem8367926 A B P clauses t lt2 P2 P1 G2 G1 H2 s H1 _114084 h1)). Qed.
Lemma lem8367929 {A B : Type'} (lt2 : type1402 A) (P1 : type551 A B) (G1 : type548 A B) (H1 : type549 A B) : (term1638 A B lt2 P1 G1 H1) = (term1638 A B lt2 P1 G1 H1).
Proof. exact (eq_refl (term1638 A B lt2 P1 G1 H1)). Qed.
Lemma lem8367930 {A B P : Type'} (clauses : type1635 A B P) (t : type558 A B P) (lt2 : type1402 A) (P2 : type560 A B P) (P1 : type551 A B) (G2 : type557 A B P) (G1 : type548 A B) (H2 : type558 A B P) (s : P -> A) (H1 : type549 A B) (_114084 : type794 A P) (h1 : _114084 = (term1470 A P)) : (term1468 A B P clauses t lt2 P2 P1 G2 G1 H2 s H1) = (term1639 A B P clauses t lt2 P2 P1 G2 G1 H2 _114084 s H1).
Proof. exact (MK_COMB (@lem8367929 A B lt2 P1 G1 H1) (@lem8367928 A B P clauses t lt2 P2 P1 G2 G1 H2 s H1 _114084 h1)). Qed.
Lemma lem8367931 {A B P : Type'} (clauses : type1635 A B P) (t : type558 A B P) (lt2 : type1402 A) (P2 : type560 A B P) (P1 : type551 A B) (G2 : type557 A B P) (G1 : type548 A B) (H2 : type558 A B P) (s : P -> A) (H1 : type549 A B) (_114084 : type794 A P) (h1 : _114084 = (term1470 A P)) : (term1467 A B P clauses t lt2 P2 P1 G2 G1 H2 s H1) = (term1640 A B P clauses t lt2 P2 P1 G2 G1 H2 _114084 s H1).
Proof. exact (MK_COMB (@lem8367657 A P _114084 h1) (@lem8367930 A B P clauses t lt2 P2 P1 G2 G1 H2 s H1 _114084 h1)). Qed.
Lemma lem8367932 {A B P : Type'} (clauses : type1635 A B P) (t : type558 A B P) (lt2 : type1402 A) (P2 : type560 A B P) (P1 : type551 A B) (G2 : type557 A B P) (G1 : type548 A B) (H2 : type558 A B P) (s : P -> A) (H1 : type549 A B) (h1 : term1641 A B P clauses t lt2 P2 P1 G2 G1 H2 s H1) : term1641 A B P clauses t lt2 P2 P1 G2 G1 H2 s H1.
Proof. exact (h1). Qed.
Lemma lem8367933 {A B P : Type'} (_114084 : type794 A P) (clauses : type1635 A B P) (t : type558 A B P) (lt2 : type1402 A) (P2 : type560 A B P) (P1 : type551 A B) (G2 : type557 A B P) (G1 : type548 A B) (H2 : type558 A B P) (s : P -> A) (H1 : type549 A B) (h1 : term1641 A B P clauses t lt2 P2 P1 G2 G1 H2 s H1) : term1642 A B P clauses t lt2 P2 P1 G2 G1 H2 s H1 _114084.
Proof. exact (@lem8367932 A B P clauses t lt2 P2 P1 G2 G1 H2 s H1 h1 _114084). Qed.
Lemma lem8367934 {A B P : Type'} (clauses : type1635 A B P) (t : type558 A B P) (lt2 : type1402 A) (P2 : type560 A B P) (P1 : type551 A B) (G2 : type557 A B P) (G1 : type548 A B) (H2 : type558 A B P) (_114084 : type794 A P) (s : P -> A) (H1 : type549 A B) : (term1642 A B P clauses t lt2 P2 P1 G2 G1 H2 s H1 _114084) = (term1640 A B P clauses t lt2 P2 P1 G2 G1 H2 _114084 s H1).
Proof. exact (eq_refl (term1642 A B P clauses t lt2 P2 P1 G2 G1 H2 s H1 _114084)). Qed.
Lemma lem8367935 {A B P : Type'} (_114084 : type794 A P) (clauses : type1635 A B P) (t : type558 A B P) (lt2 : type1402 A) (P2 : type560 A B P) (P1 : type551 A B) (G2 : type557 A B P) (G1 : type548 A B) (H2 : type558 A B P) (s : P -> A) (H1 : type549 A B) (h1 : term1641 A B P clauses t lt2 P2 P1 G2 G1 H2 s H1) : term1640 A B P clauses t lt2 P2 P1 G2 G1 H2 _114084 s H1.
Proof. exact (EQ_MP (@lem8367934 A B P clauses t lt2 P2 P1 G2 G1 H2 _114084 s H1) (@lem8367933 A B P _114084 clauses t lt2 P2 P1 G2 G1 H2 s H1 h1)). Qed.
Lemma lem8367936 {A B P : Type'} (clauses : type1635 A B P) (t : type558 A B P) (lt2 : type1402 A) (P2 : type560 A B P) (P1 : type551 A B) (G2 : type557 A B P) (G1 : type548 A B) (H2 : type558 A B P) (s : P -> A) (H1 : type549 A B) (_114084 : type794 A P) (h1 : _114084 = (term1470 A P)) : (term1640 A B P clauses t lt2 P2 P1 G2 G1 H2 _114084 s H1) = (term1467 A B P clauses t lt2 P2 P1 G2 G1 H2 s H1).
Proof. exact (SYM (@lem8367931 A B P clauses t lt2 P2 P1 G2 G1 H2 s H1 _114084 h1)). Qed.
Lemma lem8367937 {A B P : Type'} (clauses : type1635 A B P) (t : type558 A B P) (lt2 : type1402 A) (P2 : type560 A B P) (P1 : type551 A B) (G2 : type557 A B P) (G1 : type548 A B) (H2 : type558 A B P) (s : P -> A) (H1 : type549 A B) (_114084 : type794 A P) (h1 : term1641 A B P clauses t lt2 P2 P1 G2 G1 H2 s H1) (h2 : _114084 = (term1470 A P)) : term1467 A B P clauses t lt2 P2 P1 G2 G1 H2 s H1.
Proof. exact (EQ_MP (@lem8367936 A B P clauses t lt2 P2 P1 G2 G1 H2 s H1 _114084 h2) (@lem8367935 A B P _114084 clauses t lt2 P2 P1 G2 G1 H2 s H1 h1)). Qed.
Lemma lem8367938 {A B P : Type'} (clauses : type1635 A B P) (t : type558 A B P) (lt2 : type1402 A) (P2 : type560 A B P) (P1 : type551 A B) (G2 : type557 A B P) (G1 : type548 A B) (H2 : type558 A B P) (s : P -> A) (H1 : type549 A B) (_114084 : type794 A P) (h1 : _114084 = (term1470 A P)) : term1643 A B P clauses t lt2 P2 P1 G2 G1 H2 s H1.
Proof. exact (fun h0 : term1641 A B P clauses t lt2 P2 P1 G2 G1 H2 s H1 => @lem8367937 A B P clauses t lt2 P2 P1 G2 G1 H2 s H1 _114084 h0 h1). Qed.
Lemma lem8367939 {A B P : Type'} (clauses : type1635 A B P) (t : type558 A B P) (lt2 : type1402 A) (P2 : type560 A B P) (P1 : type551 A B) (G2 : type557 A B P) (G1 : type548 A B) (H2 : type558 A B P) (s : P -> A) (H1 : type549 A B) : term1644 A B P clauses t lt2 P2 P1 G2 G1 H2 s H1.
Proof. exact (@lem51 (term1467 A B P clauses t lt2 P2 P1 G2 G1 H2 s H1) (term1641 A B P clauses t lt2 P2 P1 G2 G1 H2 s H1) (term1468 A B P clauses t lt2 P2 P1 G2 G1 H2 s H1)). Qed.
Lemma lem8367940 {A B P : Type'} (clauses : type1635 A B P) (t : type558 A B P) (lt2 : type1402 A) (P2 : type560 A B P) (P1 : type551 A B) (G2 : type557 A B P) (G1 : type548 A B) (H2 : type558 A B P) (s : P -> A) (H1 : type549 A B) (_114084 : type794 A P) (h1 : _114084 = (term1470 A P)) : term1645 A B P clauses t lt2 P2 P1 G2 G1 H2 s H1.
Proof. exact (@lem8367939 A B P clauses t lt2 P2 P1 G2 G1 H2 s H1 (@lem8367938 A B P clauses t lt2 P2 P1 G2 G1 H2 s H1 _114084 h1)). Qed.
Lemma lem8367941 {A B P : Type'} (clauses : type1635 A B P) (t : type558 A B P) (lt2 : type1402 A) (P2 : type560 A B P) (P1 : type551 A B) (G2 : type557 A B P) (G1 : type548 A B) (H2 : type558 A B P) (s : P -> A) (H1 : type549 A B) (_114084 : type794 A P) (h1 : _114084 = (term1470 A P)) : term1646 A B P clauses t lt2 P2 P1 G2 G1 H2 s H1.
Proof. exact (@lem8367940 A B P clauses t lt2 P2 P1 G2 G1 H2 s H1 _114084 h1 (@lem8367613 A B P clauses t lt2 P2 P1 G2 G1 H2 s H1)). Qed.
Lemma lem8367942 {A P : Type'} : (term1470 A P) = (term1470 A P).
Proof. exact (eq_refl (term1470 A P)). Qed.
Lemma lem8367943 {A B P : Type'} (_114084 : type794 A P) (clauses : type1635 A B P) (t : type558 A B P) (lt2 : type1402 A) (P2 : type560 A B P) (P1 : type551 A B) (G2 : type557 A B P) (G1 : type548 A B) (H2 : type558 A B P) (s : P -> A) (H1 : type549 A B) : term1647 A B P _114084 clauses t lt2 P2 P1 G2 G1 H2 s H1.
Proof. exact (fun h0 : _114084 = (term1470 A P) => @lem8367941 A B P clauses t lt2 P2 P1 G2 G1 H2 s H1 _114084 h0). Qed.
Lemma lem8367944 {A B P : Type'} (clauses : type1635 A B P) (t : type558 A B P) (lt2 : type1402 A) (P2 : type560 A B P) (P1 : type551 A B) (G2 : type557 A B P) (G1 : type548 A B) (H2 : type558 A B P) (s : P -> A) (H1 : type549 A B) : term1648 A B P clauses t lt2 P2 P1 G2 G1 H2 s H1.
Proof. exact (@lem8367943 A B P (term1470 A P) clauses t lt2 P2 P1 G2 G1 H2 s H1). Qed.
Lemma lem8367945 {A B P : Type'} (clauses : type1635 A B P) (t : type558 A B P) (lt2 : type1402 A) (P2 : type560 A B P) (P1 : type551 A B) (G2 : type557 A B P) (G1 : type548 A B) (H2 : type558 A B P) (s : P -> A) (H1 : type549 A B) : term1646 A B P clauses t lt2 P2 P1 G2 G1 H2 s H1.
Proof. exact (@lem8367944 A B P clauses t lt2 P2 P1 G2 G1 H2 s H1 (@lem8367942 A P)). Qed.
Lemma lem8367946 {A B P : Type'} (clauses : type1635 A B P) (t : type558 A B P) (lt2 : type1402 A) (P2 : type560 A B P) (P1 : type551 A B) (G2 : type557 A B P) (G1 : type548 A B) (H2 : type558 A B P) (s : P -> A) (H1 : type549 A B) (h1 : term1641 A B P clauses t lt2 P2 P1 G2 G1 H2 s H1) : term1641 A B P clauses t lt2 P2 P1 G2 G1 H2 s H1.
Proof. exact (h1). Qed.
Lemma lem8367947 {A B P : Type'} (clauses : type1635 A B P) (t : type558 A B P) (lt2 : type1402 A) (P2 : type560 A B P) (P1 : type551 A B) (G2 : type557 A B P) (G1 : type548 A B) (H2 : type558 A B P) (s : P -> A) (H1 : type549 A B) : term1649 A B P clauses t lt2 P2 P1 G2 G1 H2 s H1.
Proof. exact (fun h0 : term1641 A B P clauses t lt2 P2 P1 G2 G1 H2 s H1 => @lem8367946 A B P clauses t lt2 P2 P1 G2 G1 H2 s H1 h0). Qed.
Lemma lem8367948 {A B P : Type'} (clauses : type1635 A B P) (t : type558 A B P) (lt2 : type1402 A) (P2 : type560 A B P) (P1 : type551 A B) (G2 : type557 A B P) (G1 : type548 A B) (H2 : type558 A B P) (s : P -> A) (H1 : type549 A B) : term1650 A B P clauses t lt2 P2 P1 G2 G1 H2 s H1.
Proof. exact (@lem51 (term1641 A B P clauses t lt2 P2 P1 G2 G1 H2 s H1) (term1641 A B P clauses t lt2 P2 P1 G2 G1 H2 s H1) (term1468 A B P clauses t lt2 P2 P1 G2 G1 H2 s H1)). Qed.
Lemma lem8367949 {A B P : Type'} (clauses : type1635 A B P) (t : type558 A B P) (lt2 : type1402 A) (P2 : type560 A B P) (P1 : type551 A B) (G2 : type557 A B P) (G1 : type548 A B) (H2 : type558 A B P) (s : P -> A) (H1 : type549 A B) : term1651 A B P clauses t lt2 P2 P1 G2 G1 H2 s H1.
Proof. exact (@lem8367948 A B P clauses t lt2 P2 P1 G2 G1 H2 s H1 (@lem8367947 A B P clauses t lt2 P2 P1 G2 G1 H2 s H1)). Qed.
Lemma lem8367950 {A B P : Type'} (clauses : type1635 A B P) (t : type558 A B P) (lt2 : type1402 A) (P2 : type560 A B P) (P1 : type551 A B) (G2 : type557 A B P) (G1 : type548 A B) (H2 : type558 A B P) (s : P -> A) (H1 : type549 A B) : term1646 A B P clauses t lt2 P2 P1 G2 G1 H2 s H1.
Proof. exact (@lem8367949 A B P clauses t lt2 P2 P1 G2 G1 H2 s H1 (@lem8367945 A B P clauses t lt2 P2 P1 G2 G1 H2 s H1)). Qed.
Lemma lem8367951 {A B P : Type'} (clauses : type1635 A B P) (t : type558 A B P) (lt2 : type1402 A) (P2 : type560 A B P) (P1 : type551 A B) (G2 : type557 A B P) (G1 : type548 A B) (H2 : type558 A B P) (s : P -> A) (H1 : type549 A B) (h1 : term1646 A B P clauses t lt2 P2 P1 G2 G1 H2 s H1) : term1646 A B P clauses t lt2 P2 P1 G2 G1 H2 s H1.
Proof. exact (h1). Qed.
Lemma lem8367952 {A B P : Type'} (clauses : type1635 A B P) (t : type558 A B P) (lt2 : type1402 A) (P2 : type560 A B P) (P1 : type551 A B) (G2 : type557 A B P) (G1 : type548 A B) (H2 : type558 A B P) (s : P -> A) (H1 : type549 A B) (h1 : term1641 A B P clauses t lt2 P2 P1 G2 G1 H2 s H1) : term1641 A B P clauses t lt2 P2 P1 G2 G1 H2 s H1.
Proof. exact (h1). Qed.
Lemma lem8367953 {A B P : Type'} (clauses : type1635 A B P) (t : type558 A B P) (lt2 : type1402 A) (P2 : type560 A B P) (P1 : type551 A B) (G2 : type557 A B P) (G1 : type548 A B) (H2 : type558 A B P) (s : P -> A) (H1 : type549 A B) (h1 : term1641 A B P clauses t lt2 P2 P1 G2 G1 H2 s H1) (h2 : term1646 A B P clauses t lt2 P2 P1 G2 G1 H2 s H1) : term1468 A B P clauses t lt2 P2 P1 G2 G1 H2 s H1.
Proof. exact (@lem8367951 A B P clauses t lt2 P2 P1 G2 G1 H2 s H1 h2 (@lem8367952 A B P clauses t lt2 P2 P1 G2 G1 H2 s H1 h1)). Qed.
Lemma lem8367954 {A B P : Type'} (clauses : type1635 A B P) (t : type558 A B P) (lt2 : type1402 A) (P2 : type560 A B P) (P1 : type551 A B) (G2 : type557 A B P) (G1 : type548 A B) (H2 : type558 A B P) (s : P -> A) (H1 : type549 A B) (h1 : term1641 A B P clauses t lt2 P2 P1 G2 G1 H2 s H1) : term1652 A B P clauses t lt2 P2 P1 G2 G1 H2 s H1.
Proof. exact (fun h0 : term1646 A B P clauses t lt2 P2 P1 G2 G1 H2 s H1 => @lem8367953 A B P clauses t lt2 P2 P1 G2 G1 H2 s H1 h1 h0). Qed.
Lemma lem8367955 {A B P : Type'} (clauses : type1635 A B P) (t : type558 A B P) (lt2 : type1402 A) (P2 : type560 A B P) (P1 : type551 A B) (G2 : type557 A B P) (G1 : type548 A B) (H2 : type558 A B P) (s : P -> A) (H1 : type549 A B) (h1 : term1646 A B P clauses t lt2 P2 P1 G2 G1 H2 s H1) : term1646 A B P clauses t lt2 P2 P1 G2 G1 H2 s H1.
Proof. exact (h1). Qed.
Lemma lem8367956 {A B P : Type'} (clauses : type1635 A B P) (t : type558 A B P) (lt2 : type1402 A) (P2 : type560 A B P) (P1 : type551 A B) (G2 : type557 A B P) (G1 : type548 A B) (H2 : type558 A B P) (s : P -> A) (H1 : type549 A B) (h1 : term1641 A B P clauses t lt2 P2 P1 G2 G1 H2 s H1) (h2 : term1646 A B P clauses t lt2 P2 P1 G2 G1 H2 s H1) : term1468 A B P clauses t lt2 P2 P1 G2 G1 H2 s H1.
Proof. exact (@lem8367954 A B P clauses t lt2 P2 P1 G2 G1 H2 s H1 h1 (@lem8367955 A B P clauses t lt2 P2 P1 G2 G1 H2 s H1 h2)). Qed.
Lemma lem8367957 {A B P : Type'} (clauses : type1635 A B P) (t : type558 A B P) (lt2 : type1402 A) (P2 : type560 A B P) (P1 : type551 A B) (G2 : type557 A B P) (G1 : type548 A B) (H2 : type558 A B P) (s : P -> A) (H1 : type549 A B) (h1 : term1646 A B P clauses t lt2 P2 P1 G2 G1 H2 s H1) : term1646 A B P clauses t lt2 P2 P1 G2 G1 H2 s H1.
Proof. exact (fun h0 : term1641 A B P clauses t lt2 P2 P1 G2 G1 H2 s H1 => @lem8367956 A B P clauses t lt2 P2 P1 G2 G1 H2 s H1 h0 h1). Qed.
Lemma lem8367958 {A B P : Type'} (clauses : type1635 A B P) (t : type558 A B P) (lt2 : type1402 A) (P2 : type560 A B P) (P1 : type551 A B) (G2 : type557 A B P) (G1 : type548 A B) (H2 : type558 A B P) (s : P -> A) (H1 : type549 A B) : term1651 A B P clauses t lt2 P2 P1 G2 G1 H2 s H1.
Proof. exact (fun h0 : term1646 A B P clauses t lt2 P2 P1 G2 G1 H2 s H1 => @lem8367957 A B P clauses t lt2 P2 P1 G2 G1 H2 s H1 h0). Qed.
Lemma lem8367961 {A B P : Type'} (clauses : type1635 A B P) (t : type558 A B P) (lt2 : type1402 A) (P2 : type560 A B P) (P1 : type551 A B) (G2 : type557 A B P) (G1 : type548 A B) (H2 : type558 A B P) (s : P -> A) (H1 : type549 A B) : term1646 A B P clauses t lt2 P2 P1 G2 G1 H2 s H1.
Proof. exact (@lem8367958 A B P clauses t lt2 P2 P1 G2 G1 H2 s H1 (@lem8367950 A B P clauses t lt2 P2 P1 G2 G1 H2 s H1)). Qed.
Lemma lem8367962 {A B P : Type'} (clauses : type1635 A B P) (t : type558 A B P) (lt2 : type1402 A) (P2 : type560 A B P) (P1 : type551 A B) (G2 : type557 A B P) (G1 : type548 A B) (H2 : type558 A B P) (s : P -> A) (H1 : type549 A B) : term1646 A B P clauses t lt2 P2 P1 G2 G1 H2 s H1.
Proof. exact (@lem8367961 A B P clauses t lt2 P2 P1 G2 G1 H2 s H1). Qed.
Lemma lem8368132 (t : Prop) : (t -> False) = (~ t).
Proof. exact (proj2 (@lem16474 t)). Qed.
Lemma lem8368133 {A B P : Type'} (lt2 : type1402 A) (P2 : type560 A B P) (P1 : type551 A B) (G2 : type557 A B P) (G1 : type548 A B) (H2 : type558 A B P) (_114084 : type794 A P) (s : P -> A) (H1 : type549 A B) : (term1622 A B P lt2 P2 P1 G2 G1 H2 _114084 s H1) = (term1653 A B P lt2 P2 P1 G2 G1 H2 _114084 s H1).
Proof. exact (@lem8368132 (term1619 A B P lt2 P2 P1 G2 G1 H2 _114084 s H1)). Qed.
Lemma lem8368135 (t : Prop) : (term47 t) = t.
Proof. exact (EQ_MP (@lem16507 t) (@lem16506 t)). Qed.
Lemma lem8368136 {A B P : Type'} (lt2 : type1402 A) (P2 : type560 A B P) (P1 : type551 A B) (G2 : type557 A B P) (G1 : type548 A B) (H2 : type558 A B P) (_114084 : type794 A P) (s : P -> A) (H1 : type549 A B) : (term1653 A B P lt2 P2 P1 G2 G1 H2 _114084 s H1) = (term1618 A B P lt2 P2 P1 G2 G1 H2 _114084 s H1).
Proof. exact (@lem8368135 (term1618 A B P lt2 P2 P1 G2 G1 H2 _114084 s H1)). Qed.
Lemma lem8368139 {A B P : Type'} (lt2 : type1402 A) (P2 : type560 A B P) (P1 : type551 A B) (G2 : type557 A B P) (G1 : type548 A B) (H2 : type558 A B P) (_114084 : type794 A P) (s : P -> A) (H1 : type549 A B) : (term1622 A B P lt2 P2 P1 G2 G1 H2 _114084 s H1) = (term1618 A B P lt2 P2 P1 G2 G1 H2 _114084 s H1).
Proof. exact (TRANS (@lem8368133 A B P lt2 P2 P1 G2 G1 H2 _114084 s H1) (@lem8368136 A B P lt2 P2 P1 G2 G1 H2 _114084 s H1)). Qed.
Lemma lem8368238 {A B P : Type'} (t : type558 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) : (term1623 A B P t P2 G2 H2) = (term1623 A B P t P2 G2 H2).
Proof. exact (eq_refl (term1623 A B P t P2 G2 H2)). Qed.
Lemma lem8368239 {A B P : Type'} (t : type558 A B P) (lt2 : type1402 A) (P2 : type560 A B P) (P1 : type551 A B) (G2 : type557 A B P) (G1 : type548 A B) (H2 : type558 A B P) (_114084 : type794 A P) (s : P -> A) (H1 : type549 A B) : (term1625 A B P t lt2 P2 P1 G2 G1 H2 _114084 s H1) = (term1654 A B P t lt2 P2 P1 G2 G1 H2 _114084 s H1).
Proof. exact (MK_COMB (@lem8368238 A B P t P2 G2 H2) (@lem8368139 A B P lt2 P2 P1 G2 G1 H2 _114084 s H1)). Qed.
Lemma lem8368242 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) : (term1626 A B P lt2 s P2 G2 H2) = (term1626 A B P lt2 s P2 G2 H2).
Proof. exact (eq_refl (term1626 A B P lt2 s P2 G2 H2)). Qed.
Lemma lem8368243 {A B P : Type'} (t : type558 A B P) (lt2 : type1402 A) (P2 : type560 A B P) (P1 : type551 A B) (G2 : type557 A B P) (G1 : type548 A B) (H2 : type558 A B P) (_114084 : type794 A P) (s : P -> A) (H1 : type549 A B) : (term1628 A B P t lt2 P2 P1 G2 G1 H2 _114084 s H1) = (term1655 A B P t lt2 P2 P1 G2 G1 H2 _114084 s H1).
Proof. exact (MK_COMB (@lem8368242 A B P lt2 s P2 G2 H2) (@lem8368239 A B P t lt2 P2 P1 G2 G1 H2 _114084 s H1)). Qed.
Lemma lem8368246 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (lt2 : type1402 A) (s : P -> A) : (term1629 A B P P2 G2 lt2 s) = (term1629 A B P P2 G2 lt2 s).
Proof. exact (eq_refl (term1629 A B P P2 G2 lt2 s)). Qed.
Lemma lem8368247 {A B P : Type'} (t : type558 A B P) (lt2 : type1402 A) (P2 : type560 A B P) (P1 : type551 A B) (G2 : type557 A B P) (G1 : type548 A B) (H2 : type558 A B P) (_114084 : type794 A P) (s : P -> A) (H1 : type549 A B) : (term1631 A B P t lt2 P2 P1 G2 G1 H2 _114084 s H1) = (term1656 A B P t lt2 P2 P1 G2 G1 H2 _114084 s H1).
Proof. exact (MK_COMB (@lem8368246 A B P P2 G2 lt2 s) (@lem8368243 A B P t lt2 P2 P1 G2 G1 H2 _114084 s H1)). Qed.
Lemma lem8368250 {A B P : Type'} (clauses : type1635 A B P) (P1 : type551 A B) (G1 : type548 A B) (H1 : type549 A B) : (term1632 A B P clauses P1 G1 H1) = (term1632 A B P clauses P1 G1 H1).
Proof. exact (eq_refl (term1632 A B P clauses P1 G1 H1)). Qed.
Lemma lem8368251 {A B P : Type'} (clauses : type1635 A B P) (t : type558 A B P) (lt2 : type1402 A) (P2 : type560 A B P) (P1 : type551 A B) (G2 : type557 A B P) (G1 : type548 A B) (H2 : type558 A B P) (_114084 : type794 A P) (s : P -> A) (H1 : type549 A B) : (term1634 A B P clauses t lt2 P2 P1 G2 G1 H2 _114084 s H1) = (term1657 A B P clauses t lt2 P2 P1 G2 G1 H2 _114084 s H1).
Proof. exact (MK_COMB (@lem8368250 A B P clauses P1 G1 H1) (@lem8368247 A B P t lt2 P2 P1 G2 G1 H2 _114084 s H1)). Qed.
Lemma lem8368254 {A B : Type'} (P1 : type551 A B) (G1 : type548 A B) (lt2 : type1402 A) : (term1635 A B P1 G1 lt2) = (term1635 A B P1 G1 lt2).
Proof. exact (eq_refl (term1635 A B P1 G1 lt2)). Qed.
Lemma lem8368255 {A B P : Type'} (clauses : type1635 A B P) (t : type558 A B P) (lt2 : type1402 A) (P2 : type560 A B P) (P1 : type551 A B) (G2 : type557 A B P) (G1 : type548 A B) (H2 : type558 A B P) (_114084 : type794 A P) (s : P -> A) (H1 : type549 A B) : (term1637 A B P clauses t lt2 P2 P1 G2 G1 H2 _114084 s H1) = (term1658 A B P clauses t lt2 P2 P1 G2 G1 H2 _114084 s H1).
Proof. exact (MK_COMB (@lem8368254 A B P1 G1 lt2) (@lem8368251 A B P clauses t lt2 P2 P1 G2 G1 H2 _114084 s H1)). Qed.
Lemma lem8368258 {A B : Type'} (lt2 : type1402 A) (P1 : type551 A B) (G1 : type548 A B) (H1 : type549 A B) : (term1638 A B lt2 P1 G1 H1) = (term1638 A B lt2 P1 G1 H1).
Proof. exact (eq_refl (term1638 A B lt2 P1 G1 H1)). Qed.
Lemma lem8368259 {A B P : Type'} (clauses : type1635 A B P) (t : type558 A B P) (lt2 : type1402 A) (P2 : type560 A B P) (P1 : type551 A B) (G2 : type557 A B P) (G1 : type548 A B) (H2 : type558 A B P) (_114084 : type794 A P) (s : P -> A) (H1 : type549 A B) : (term1639 A B P clauses t lt2 P2 P1 G2 G1 H2 _114084 s H1) = (term1659 A B P clauses t lt2 P2 P1 G2 G1 H2 _114084 s H1).
Proof. exact (MK_COMB (@lem8368258 A B lt2 P1 G1 H1) (@lem8368255 A B P clauses t lt2 P2 P1 G2 G1 H2 _114084 s H1)). Qed.
Lemma lem8368262 {A P : Type'} (_114084 : type794 A P) : (term1493 A P _114084) = (term1493 A P _114084).
Proof. exact (eq_refl (term1493 A P _114084)). Qed.
Lemma lem8368263 {A B P : Type'} (clauses : type1635 A B P) (t : type558 A B P) (lt2 : type1402 A) (P2 : type560 A B P) (P1 : type551 A B) (G2 : type557 A B P) (G1 : type548 A B) (H2 : type558 A B P) (_114084 : type794 A P) (s : P -> A) (H1 : type549 A B) : (term1640 A B P clauses t lt2 P2 P1 G2 G1 H2 _114084 s H1) = (term1660 A B P clauses t lt2 P2 P1 G2 G1 H2 _114084 s H1).
Proof. exact (MK_COMB (@lem8368262 A P _114084) (@lem8368259 A B P clauses t lt2 P2 P1 G2 G1 H2 _114084 s H1)). Qed.
Lemma lem8368266 {A B P : Type'} (clauses : type1635 A B P) (t : type558 A B P) (lt2 : type1402 A) (P2 : type560 A B P) (P1 : type551 A B) (G2 : type557 A B P) (G1 : type548 A B) (H2 : type558 A B P) (s : P -> A) (H1 : type549 A B) : (term1661 A B P clauses t lt2 P2 P1 G2 G1 H2 s H1) = (term1662 A B P clauses t lt2 P2 P1 G2 G1 H2 s H1).
Proof. exact (fun_ext (fun _114084 : type794 A P => @lem8368263 A B P clauses t lt2 P2 P1 G2 G1 H2 _114084 s H1)). Qed.
Lemma lem8368267 {A P : Type'} : (@all ((P -> A) -> A -> P)) = (@all ((P -> A) -> A -> P)).
Proof. exact (eq_refl (@all ((P -> A) -> A -> P))). Qed.
Lemma lem8368268 {A B P : Type'} (clauses : type1635 A B P) (t : type558 A B P) (lt2 : type1402 A) (P2 : type560 A B P) (P1 : type551 A B) (G2 : type557 A B P) (G1 : type548 A B) (H2 : type558 A B P) (s : P -> A) (H1 : type549 A B) : (term1641 A B P clauses t lt2 P2 P1 G2 G1 H2 s H1) = (term1663 A B P clauses t lt2 P2 P1 G2 G1 H2 s H1).
Proof. exact (MK_COMB (@lem8368267 A P) (@lem8368266 A B P clauses t lt2 P2 P1 G2 G1 H2 s H1)). Qed.
Lemma lem8368273 {A B P : Type'} (t : type558 A B P) (lt2 : type1402 A) (P2 : type560 A B P) (P1 : type551 A B) (G2 : type557 A B P) (G1 : type548 A B) (H2 : type558 A B P) (s : P -> A) (H1 : type549 A B) : (term1664 A B P t lt2 P2 P1 G2 G1 H2 s H1) = (term1665 A B P t lt2 P2 P1 G2 G1 H2 s H1).
Proof. exact (fun_ext (fun clauses : type1635 A B P => @lem8368268 A B P clauses t lt2 P2 P1 G2 G1 H2 s H1)). Qed.
Lemma lem8368274 {A B P : Type'} : (@all (list (prod (P -> A) ((A -> B) -> P -> B)))) = (@all (list (prod (P -> A) ((A -> B) -> P -> B)))).
Proof. exact (eq_refl (@all (list (prod (P -> A) ((A -> B) -> P -> B))))). Qed.
Lemma lem8368275 {A B P : Type'} (t : type558 A B P) (lt2 : type1402 A) (P2 : type560 A B P) (P1 : type551 A B) (G2 : type557 A B P) (G1 : type548 A B) (H2 : type558 A B P) (s : P -> A) (H1 : type549 A B) : (term1666 A B P t lt2 P2 P1 G2 G1 H2 s H1) = (term1667 A B P t lt2 P2 P1 G2 G1 H2 s H1).
Proof. exact (MK_COMB (@lem8368274 A B P) (@lem8368273 A B P t lt2 P2 P1 G2 G1 H2 s H1)). Qed.
Lemma lem8368280 {A B P : Type'} (lt2 : type1402 A) (P2 : type560 A B P) (P1 : type551 A B) (G2 : type557 A B P) (G1 : type548 A B) (H2 : type558 A B P) (s : P -> A) (H1 : type549 A B) : (term1668 A B P lt2 P2 P1 G2 G1 H2 s H1) = (term1669 A B P lt2 P2 P1 G2 G1 H2 s H1).
Proof. exact (fun_ext (fun t : type558 A B P => @lem8368275 A B P t lt2 P2 P1 G2 G1 H2 s H1)). Qed.
Lemma lem8368281 {A B P : Type'} : (@all ((A -> B) -> P -> B)) = (@all ((A -> B) -> P -> B)).
Proof. exact (eq_refl (@all ((A -> B) -> P -> B))). Qed.
Lemma lem8368282 {A B P : Type'} (lt2 : type1402 A) (P2 : type560 A B P) (P1 : type551 A B) (G2 : type557 A B P) (G1 : type548 A B) (H2 : type558 A B P) (s : P -> A) (H1 : type549 A B) : (term1670 A B P lt2 P2 P1 G2 G1 H2 s H1) = (term1671 A B P lt2 P2 P1 G2 G1 H2 s H1).
Proof. exact (MK_COMB (@lem8368281 A B P) (@lem8368280 A B P lt2 P2 P1 G2 G1 H2 s H1)). Qed.
Lemma lem8368287 {A B P : Type'} (P2 : type560 A B P) (P1 : type551 A B) (G2 : type557 A B P) (G1 : type548 A B) (H2 : type558 A B P) (s : P -> A) (H1 : type549 A B) : (term1672 A B P P2 P1 G2 G1 H2 s H1) = (term1673 A B P P2 P1 G2 G1 H2 s H1).
Proof. exact (fun_ext (fun lt2 : type1402 A => @lem8368282 A B P lt2 P2 P1 G2 G1 H2 s H1)). Qed.
Lemma lem8368288 {A : Type'} : (@all (A -> A -> Prop)) = (@all (A -> A -> Prop)).
Proof. exact (eq_refl (@all (A -> A -> Prop))). Qed.
Lemma lem8368289 {A B P : Type'} (P2 : type560 A B P) (P1 : type551 A B) (G2 : type557 A B P) (G1 : type548 A B) (H2 : type558 A B P) (s : P -> A) (H1 : type549 A B) : (term1674 A B P P2 P1 G2 G1 H2 s H1) = (term1675 A B P P2 P1 G2 G1 H2 s H1).
Proof. exact (MK_COMB (@lem8368288 A) (@lem8368287 A B P P2 P1 G2 G1 H2 s H1)). Qed.
Lemma lem8368294 {A B P : Type'} (P1 : type551 A B) (G2 : type557 A B P) (G1 : type548 A B) (H2 : type558 A B P) (s : P -> A) (H1 : type549 A B) : (term1676 A B P P1 G2 G1 H2 s H1) = (term1677 A B P P1 G2 G1 H2 s H1).
Proof. exact (fun_ext (fun P2 : type560 A B P => @lem8368289 A B P P2 P1 G2 G1 H2 s H1)). Qed.
Lemma lem8368295 {A B P : Type'} : (@all ((A -> B) -> P -> Prop)) = (@all ((A -> B) -> P -> Prop)).
Proof. exact (eq_refl (@all ((A -> B) -> P -> Prop))). Qed.
Lemma lem8368296 {A B P : Type'} (P1 : type551 A B) (G2 : type557 A B P) (G1 : type548 A B) (H2 : type558 A B P) (s : P -> A) (H1 : type549 A B) : (term1678 A B P P1 G2 G1 H2 s H1) = (term1679 A B P P1 G2 G1 H2 s H1).
Proof. exact (MK_COMB (@lem8368295 A B P) (@lem8368294 A B P P1 G2 G1 H2 s H1)). Qed.
Lemma lem8368301 {A B P : Type'} (G2 : type557 A B P) (G1 : type548 A B) (H2 : type558 A B P) (s : P -> A) (H1 : type549 A B) : (term1680 A B P G2 G1 H2 s H1) = (term1681 A B P G2 G1 H2 s H1).
Proof. exact (fun_ext (fun P1 : type551 A B => @lem8368296 A B P P1 G2 G1 H2 s H1)). Qed.
Lemma lem8368302 {A B : Type'} : (@all ((A -> B) -> A -> Prop)) = (@all ((A -> B) -> A -> Prop)).
Proof. exact (eq_refl (@all ((A -> B) -> A -> Prop))). Qed.
Lemma lem8368303 {A B P : Type'} (G2 : type557 A B P) (G1 : type548 A B) (H2 : type558 A B P) (s : P -> A) (H1 : type549 A B) : (term1682 A B P G2 G1 H2 s H1) = (term1683 A B P G2 G1 H2 s H1).
Proof. exact (MK_COMB (@lem8368302 A B) (@lem8368301 A B P G2 G1 H2 s H1)). Qed.
Lemma lem8368308 {A B P : Type'} (G1 : type548 A B) (H2 : type558 A B P) (s : P -> A) (H1 : type549 A B) : (term1684 A B P G1 H2 s H1) = (term1685 A B P G1 H2 s H1).
Proof. exact (fun_ext (fun G2 : type557 A B P => @lem8368303 A B P G2 G1 H2 s H1)). Qed.
Lemma lem8368309 {A B P : Type'} : (@all ((A -> B) -> P -> A)) = (@all ((A -> B) -> P -> A)).
Proof. exact (eq_refl (@all ((A -> B) -> P -> A))). Qed.
Lemma lem8368310 {A B P : Type'} (G1 : type548 A B) (H2 : type558 A B P) (s : P -> A) (H1 : type549 A B) : (term1686 A B P G1 H2 s H1) = (term1687 A B P G1 H2 s H1).
Proof. exact (MK_COMB (@lem8368309 A B P) (@lem8368308 A B P G1 H2 s H1)). Qed.
Lemma lem8368315 {A B P : Type'} (H2 : type558 A B P) (s : P -> A) (H1 : type549 A B) : (term1688 A B P H2 s H1) = (term1689 A B P H2 s H1).
Proof. exact (fun_ext (fun G1 : type548 A B => @lem8368310 A B P G1 H2 s H1)). Qed.
Lemma lem8368316 {A B : Type'} : (@all ((A -> B) -> A -> A)) = (@all ((A -> B) -> A -> A)).
Proof. exact (eq_refl (@all ((A -> B) -> A -> A))). Qed.
Lemma lem8368317 {A B P : Type'} (H2 : type558 A B P) (s : P -> A) (H1 : type549 A B) : (term1690 A B P H2 s H1) = (term1691 A B P H2 s H1).
Proof. exact (MK_COMB (@lem8368316 A B) (@lem8368315 A B P H2 s H1)). Qed.
Lemma lem8368322 {A B P : Type'} (s : P -> A) (H1 : type549 A B) : (term1692 A B P s H1) = (term1693 A B P s H1).
Proof. exact (fun_ext (fun H2 : type558 A B P => @lem8368317 A B P H2 s H1)). Qed.
Lemma lem8368323 {A B P : Type'} : (@all ((A -> B) -> P -> B)) = (@all ((A -> B) -> P -> B)).
Proof. exact (eq_refl (@all ((A -> B) -> P -> B))). Qed.
Lemma lem8368324 {A B P : Type'} (s : P -> A) (H1 : type549 A B) : (term1694 A B P s H1) = (term1695 A B P s H1).
Proof. exact (MK_COMB (@lem8368323 A B P) (@lem8368322 A B P s H1)). Qed.
Lemma lem8368329 {A B P : Type'} (H1 : type549 A B) : (term1696 A B P H1) = (term1697 A B P H1).
Proof. exact (fun_ext (fun s : P -> A => @lem8368324 A B P s H1)). Qed.
Lemma lem8368330 {A P : Type'} : (@all (P -> A)) = (@all (P -> A)).
Proof. exact (eq_refl (@all (P -> A))). Qed.
Lemma lem8368331 {A B P : Type'} (H1 : type549 A B) : (term1698 A B P H1) = (term1699 A B P H1).
Proof. exact (MK_COMB (@lem8368330 A P) (@lem8368329 A B P H1)). Qed.
Lemma lem8368336 {A B P : Type'} : (term1700 A B P) = (term1701 A B P).
Proof. exact (fun_ext (fun H1 : type549 A B => @lem8368331 A B P H1)). Qed.
Lemma lem8368337 {A B : Type'} : (@all ((A -> B) -> A -> B)) = (@all ((A -> B) -> A -> B)).
Proof. exact (eq_refl (@all ((A -> B) -> A -> B))). Qed.
Lemma lem8368338 {A B P : Type'} : (term1702 A B P) = (term1703 A B P).
Proof. exact (MK_COMB (@lem8368337 A B) (@lem8368336 A B P)). Qed.
Lemma lem8368343 {A B P : Type'} (P2 : type560 A B P) (_114084 : type794 A P) (s : P -> A) (P1 : type551 A B) (f : A -> B) : (term1506 A B P P2 _114084 s P1 f) = (term1502 A B P P2 _114084 s P1 f).
Proof. exact (eq_refl (term1506 A B P P2 _114084 s P1 f)). Qed.
Lemma lem8368344 {A : Type'} (x : A) : x = x.
Proof. exact (eq_refl x). Qed.
Lemma lem8368345 {A B P : Type'} (P2 : type560 A B P) (_114084 : type794 A P) (s : P -> A) (P1 : type551 A B) (f : A -> B) (x : A) : (term1508 A B P P2 _114084 s P1 f x) = (term1704 A B P P2 _114084 s P1 f x).
Proof. exact (MK_COMB (@lem8368343 A B P P2 _114084 s P1 f) (@lem8368344 A x)). Qed.
Lemma lem8368346 {A B P : Type'} (P2 : type560 A B P) (_114084 : type794 A P) (s : P -> A) (P1 : type551 A B) (f : A -> B) (x : A) : (term1704 A B P P2 _114084 s P1 f x) = (term1500 A B P P2 _114084 s P1 f x).
Proof. exact (eq_refl (term1704 A B P P2 _114084 s P1 f x)). Qed.
Lemma lem8368347 {A B P : Type'} (P2 : type560 A B P) (_114084 : type794 A P) (s : P -> A) (P1 : type551 A B) (f : A -> B) (x : A) : (term1508 A B P P2 _114084 s P1 f x) = (term1500 A B P P2 _114084 s P1 f x).
Proof. exact (TRANS (@lem8368345 A B P P2 _114084 s P1 f x) (@lem8368346 A B P P2 _114084 s P1 f x)). Qed.
Lemma lem8368348 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8368349 {A B P : Type'} (P2 : type560 A B P) (_114084 : type794 A P) (s : P -> A) (P1 : type551 A B) (f : A -> B) (x : A) : (term1510 A B P P2 _114084 s P1 f x) = (term1705 A B P P2 _114084 s P1 f x).
Proof. exact (MK_COMB (@lem8368348) (@lem8368347 A B P P2 _114084 s P1 f x)). Qed.
Lemma lem8368350 {A B P : Type'} (P2 : type560 A B P) (_114084 : type794 A P) (s : P -> A) (P1 : type551 A B) (g : A -> B) : (term1506 A B P P2 _114084 s P1 g) = (term1502 A B P P2 _114084 s P1 g).
Proof. exact (eq_refl (term1506 A B P P2 _114084 s P1 g)). Qed.
Lemma lem8368351 {A : Type'} (x : A) : x = x.
Proof. exact (eq_refl x). Qed.
Lemma lem8368352 {A B P : Type'} (P2 : type560 A B P) (_114084 : type794 A P) (s : P -> A) (P1 : type551 A B) (g : A -> B) (x : A) : (term1508 A B P P2 _114084 s P1 g x) = (term1704 A B P P2 _114084 s P1 g x).
Proof. exact (MK_COMB (@lem8368350 A B P P2 _114084 s P1 g) (@lem8368351 A x)). Qed.
Lemma lem8368353 {A B P : Type'} (P2 : type560 A B P) (_114084 : type794 A P) (s : P -> A) (P1 : type551 A B) (g : A -> B) (x : A) : (term1704 A B P P2 _114084 s P1 g x) = (term1500 A B P P2 _114084 s P1 g x).
Proof. exact (eq_refl (term1704 A B P P2 _114084 s P1 g x)). Qed.
Lemma lem8368354 {A B P : Type'} (P2 : type560 A B P) (_114084 : type794 A P) (s : P -> A) (P1 : type551 A B) (g : A -> B) (x : A) : (term1508 A B P P2 _114084 s P1 g x) = (term1500 A B P P2 _114084 s P1 g x).
Proof. exact (TRANS (@lem8368352 A B P P2 _114084 s P1 g x) (@lem8368353 A B P P2 _114084 s P1 g x)). Qed.
Lemma lem8368355 {A B P : Type'} (f : A -> B) (P2 : type560 A B P) (_114084 : type794 A P) (s : P -> A) (P1 : type551 A B) (g : A -> B) (x : A) : ((term1508 A B P P2 _114084 s P1 f x) = (term1508 A B P P2 _114084 s P1 g x)) = ((term1500 A B P P2 _114084 s P1 f x) = (term1500 A B P P2 _114084 s P1 g x)).
Proof. exact (MK_COMB (@lem8368349 A B P P2 _114084 s P1 f x) (@lem8368354 A B P P2 _114084 s P1 g x)). Qed.
Lemma lem8368356 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8368357 {A B P : Type'} (f : A -> B) (P2 : type560 A B P) (_114084 : type794 A P) (s : P -> A) (P1 : type551 A B) (g : A -> B) (x : A) : (term1512 A B P f P2 _114084 s P1 g x) = (term1706 A B P f P2 _114084 s P1 g x).
Proof. exact (MK_COMB (@lem8368356) (@lem8368355 A B P f P2 _114084 s P1 g x)). Qed.
Lemma lem8368358 {A B P : Type'} (G2 : type557 A B P) (_114084 : type794 A P) (s : P -> A) (G1 : type548 A B) (f : A -> B) : (term1525 A B P G2 _114084 s G1 f) = (term1521 A B P G2 _114084 s G1 f).
Proof. exact (eq_refl (term1525 A B P G2 _114084 s G1 f)). Qed.
Lemma lem8368359 {A : Type'} (x : A) : x = x.
Proof. exact (eq_refl x). Qed.
Lemma lem8368360 {A B P : Type'} (G2 : type557 A B P) (_114084 : type794 A P) (s : P -> A) (G1 : type548 A B) (f : A -> B) (x : A) : (term1527 A B P G2 _114084 s G1 f x) = (term1707 A B P G2 _114084 s G1 f x).
Proof. exact (MK_COMB (@lem8368358 A B P G2 _114084 s G1 f) (@lem8368359 A x)). Qed.
Lemma lem8368361 {A B P : Type'} (G2 : type557 A B P) (_114084 : type794 A P) (s : P -> A) (G1 : type548 A B) (f : A -> B) (x : A) : (term1707 A B P G2 _114084 s G1 f x) = (term1519 A B P G2 _114084 s G1 f x).
Proof. exact (eq_refl (term1707 A B P G2 _114084 s G1 f x)). Qed.
Lemma lem8368362 {A B P : Type'} (G2 : type557 A B P) (_114084 : type794 A P) (s : P -> A) (G1 : type548 A B) (f : A -> B) (x : A) : (term1527 A B P G2 _114084 s G1 f x) = (term1519 A B P G2 _114084 s G1 f x).
Proof. exact (TRANS (@lem8368360 A B P G2 _114084 s G1 f x) (@lem8368361 A B P G2 _114084 s G1 f x)). Qed.
Lemma lem8368363 {A : Type'} : (@eq A) = (@eq A).
Proof. exact (eq_refl (@eq A)). Qed.
Lemma lem8368364 {A B P : Type'} (G2 : type557 A B P) (_114084 : type794 A P) (s : P -> A) (G1 : type548 A B) (f : A -> B) (x : A) : (term1529 A B P G2 _114084 s G1 f x) = (term1708 A B P G2 _114084 s G1 f x).
Proof. exact (MK_COMB (@lem8368363 A) (@lem8368362 A B P G2 _114084 s G1 f x)). Qed.
Lemma lem8368365 {A B P : Type'} (G2 : type557 A B P) (_114084 : type794 A P) (s : P -> A) (G1 : type548 A B) (g : A -> B) : (term1525 A B P G2 _114084 s G1 g) = (term1521 A B P G2 _114084 s G1 g).
Proof. exact (eq_refl (term1525 A B P G2 _114084 s G1 g)). Qed.
Lemma lem8368366 {A : Type'} (x : A) : x = x.
Proof. exact (eq_refl x). Qed.
Lemma lem8368367 {A B P : Type'} (G2 : type557 A B P) (_114084 : type794 A P) (s : P -> A) (G1 : type548 A B) (g : A -> B) (x : A) : (term1527 A B P G2 _114084 s G1 g x) = (term1707 A B P G2 _114084 s G1 g x).
Proof. exact (MK_COMB (@lem8368365 A B P G2 _114084 s G1 g) (@lem8368366 A x)). Qed.
Lemma lem8368368 {A B P : Type'} (G2 : type557 A B P) (_114084 : type794 A P) (s : P -> A) (G1 : type548 A B) (g : A -> B) (x : A) : (term1707 A B P G2 _114084 s G1 g x) = (term1519 A B P G2 _114084 s G1 g x).
Proof. exact (eq_refl (term1707 A B P G2 _114084 s G1 g x)). Qed.
Lemma lem8368369 {A B P : Type'} (G2 : type557 A B P) (_114084 : type794 A P) (s : P -> A) (G1 : type548 A B) (g : A -> B) (x : A) : (term1527 A B P G2 _114084 s G1 g x) = (term1519 A B P G2 _114084 s G1 g x).
Proof. exact (TRANS (@lem8368367 A B P G2 _114084 s G1 g x) (@lem8368368 A B P G2 _114084 s G1 g x)). Qed.
Lemma lem8368370 {A B P : Type'} (f : A -> B) (G2 : type557 A B P) (_114084 : type794 A P) (s : P -> A) (G1 : type548 A B) (g : A -> B) (x : A) : ((term1527 A B P G2 _114084 s G1 f x) = (term1527 A B P G2 _114084 s G1 g x)) = ((term1519 A B P G2 _114084 s G1 f x) = (term1519 A B P G2 _114084 s G1 g x)).
Proof. exact (MK_COMB (@lem8368364 A B P G2 _114084 s G1 f x) (@lem8368369 A B P G2 _114084 s G1 g x)). Qed.
Lemma lem8368371 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8368372 {A B P : Type'} (f : A -> B) (G2 : type557 A B P) (_114084 : type794 A P) (s : P -> A) (G1 : type548 A B) (g : A -> B) (x : A) : (term1531 A B P f G2 _114084 s G1 g x) = (term1709 A B P f G2 _114084 s G1 g x).
Proof. exact (MK_COMB (@lem8368371) (@lem8368370 A B P f G2 _114084 s G1 g x)). Qed.
Lemma lem8368373 {A B P : Type'} (H2 : type558 A B P) (_114084 : type794 A P) (s : P -> A) (H1 : type549 A B) (f : A -> B) : (term1541 A B P H2 _114084 s H1 f) = (term1537 A B P H2 _114084 s H1 f).
Proof. exact (eq_refl (term1541 A B P H2 _114084 s H1 f)). Qed.
Lemma lem8368374 {A : Type'} (x : A) : x = x.
Proof. exact (eq_refl x). Qed.
Lemma lem8368375 {A B P : Type'} (H2 : type558 A B P) (_114084 : type794 A P) (s : P -> A) (H1 : type549 A B) (f : A -> B) (x : A) : (term1543 A B P H2 _114084 s H1 f x) = (term1710 A B P H2 _114084 s H1 f x).
Proof. exact (MK_COMB (@lem8368373 A B P H2 _114084 s H1 f) (@lem8368374 A x)). Qed.
Lemma lem8368376 {A B P : Type'} (H2 : type558 A B P) (_114084 : type794 A P) (s : P -> A) (H1 : type549 A B) (f : A -> B) (x : A) : (term1710 A B P H2 _114084 s H1 f x) = (term1535 A B P H2 _114084 s H1 f x).
Proof. exact (eq_refl (term1710 A B P H2 _114084 s H1 f x)). Qed.
Lemma lem8368377 {A B P : Type'} (H2 : type558 A B P) (_114084 : type794 A P) (s : P -> A) (H1 : type549 A B) (f : A -> B) (x : A) : (term1543 A B P H2 _114084 s H1 f x) = (term1535 A B P H2 _114084 s H1 f x).
Proof. exact (TRANS (@lem8368375 A B P H2 _114084 s H1 f x) (@lem8368376 A B P H2 _114084 s H1 f x)). Qed.
Lemma lem8368378 {B : Type'} : (@eq B) = (@eq B).
Proof. exact (eq_refl (@eq B)). Qed.
Lemma lem8368379 {A B P : Type'} (H2 : type558 A B P) (_114084 : type794 A P) (s : P -> A) (H1 : type549 A B) (f : A -> B) (x : A) : (term1545 A B P H2 _114084 s H1 f x) = (term1711 A B P H2 _114084 s H1 f x).
Proof. exact (MK_COMB (@lem8368378 B) (@lem8368377 A B P H2 _114084 s H1 f x)). Qed.
Lemma lem8368380 {A B P : Type'} (H2 : type558 A B P) (_114084 : type794 A P) (s : P -> A) (H1 : type549 A B) (g : A -> B) : (term1541 A B P H2 _114084 s H1 g) = (term1537 A B P H2 _114084 s H1 g).
Proof. exact (eq_refl (term1541 A B P H2 _114084 s H1 g)). Qed.
Lemma lem8368381 {A : Type'} (x : A) : x = x.
Proof. exact (eq_refl x). Qed.
Lemma lem8368382 {A B P : Type'} (H2 : type558 A B P) (_114084 : type794 A P) (s : P -> A) (H1 : type549 A B) (g : A -> B) (x : A) : (term1543 A B P H2 _114084 s H1 g x) = (term1710 A B P H2 _114084 s H1 g x).
Proof. exact (MK_COMB (@lem8368380 A B P H2 _114084 s H1 g) (@lem8368381 A x)). Qed.
Lemma lem8368383 {A B P : Type'} (H2 : type558 A B P) (_114084 : type794 A P) (s : P -> A) (H1 : type549 A B) (g : A -> B) (x : A) : (term1710 A B P H2 _114084 s H1 g x) = (term1535 A B P H2 _114084 s H1 g x).
Proof. exact (eq_refl (term1710 A B P H2 _114084 s H1 g x)). Qed.
Lemma lem8368384 {A B P : Type'} (H2 : type558 A B P) (_114084 : type794 A P) (s : P -> A) (H1 : type549 A B) (g : A -> B) (x : A) : (term1543 A B P H2 _114084 s H1 g x) = (term1535 A B P H2 _114084 s H1 g x).
Proof. exact (TRANS (@lem8368382 A B P H2 _114084 s H1 g x) (@lem8368383 A B P H2 _114084 s H1 g x)). Qed.
Lemma lem8368385 {A B P : Type'} (f : A -> B) (H2 : type558 A B P) (_114084 : type794 A P) (s : P -> A) (H1 : type549 A B) (g : A -> B) (x : A) : ((term1543 A B P H2 _114084 s H1 f x) = (term1543 A B P H2 _114084 s H1 g x)) = ((term1535 A B P H2 _114084 s H1 f x) = (term1535 A B P H2 _114084 s H1 g x)).
Proof. exact (MK_COMB (@lem8368379 A B P H2 _114084 s H1 f x) (@lem8368384 A B P H2 _114084 s H1 g x)). Qed.
Lemma lem8368386 {A B P : Type'} (G2 : type557 A B P) (G1 : type548 A B) (f : A -> B) (H2 : type558 A B P) (_114084 : type794 A P) (s : P -> A) (H1 : type549 A B) (g : A -> B) (x : A) : (term1547 A B P G2 G1 f H2 _114084 s H1 g x) = (term1712 A B P G2 G1 f H2 _114084 s H1 g x).
Proof. exact (MK_COMB (@lem8368372 A B P f G2 _114084 s G1 g x) (@lem8368385 A B P f H2 _114084 s H1 g x)). Qed.
Lemma lem8368387 {A B P : Type'} (P2 : type560 A B P) (P1 : type551 A B) (G2 : type557 A B P) (G1 : type548 A B) (f : A -> B) (H2 : type558 A B P) (_114084 : type794 A P) (s : P -> A) (H1 : type549 A B) (g : A -> B) (x : A) : (term1549 A B P P2 P1 G2 G1 f H2 _114084 s H1 g x) = (term1713 A B P P2 P1 G2 G1 f H2 _114084 s H1 g x).
Proof. exact (MK_COMB (@lem8368357 A B P f P2 _114084 s P1 g x) (@lem8368386 A B P G2 G1 f H2 _114084 s H1 g x)). Qed.
Lemma lem8368388 {A B : Type'} (lt2 : type1402 A) (x : A) (f : A -> B) (g : A -> B) : (term1190 A B lt2 x f g) = (term1190 A B lt2 x f g).
Proof. exact (eq_refl (term1190 A B lt2 x f g)). Qed.
Lemma lem8368389 {A B P : Type'} (lt2 : type1402 A) (P2 : type560 A B P) (P1 : type551 A B) (G2 : type557 A B P) (G1 : type548 A B) (f : A -> B) (H2 : type558 A B P) (_114084 : type794 A P) (s : P -> A) (H1 : type549 A B) (g : A -> B) (x : A) : (term1551 A B P lt2 P2 P1 G2 G1 f H2 _114084 s H1 g x) = (term1714 A B P lt2 P2 P1 G2 G1 f H2 _114084 s H1 g x).
Proof. exact (MK_COMB (@lem8368388 A B lt2 x f g) (@lem8368387 A B P P2 P1 G2 G1 f H2 _114084 s H1 g x)). Qed.
Lemma lem8368390 {A B P : Type'} (lt2 : type1402 A) (P2 : type560 A B P) (P1 : type551 A B) (G2 : type557 A B P) (G1 : type548 A B) (f : A -> B) (H2 : type558 A B P) (_114084 : type794 A P) (s : P -> A) (H1 : type549 A B) (g : A -> B) : (term1553 A B P lt2 P2 P1 G2 G1 f H2 _114084 s H1 g) = (term1715 A B P lt2 P2 P1 G2 G1 f H2 _114084 s H1 g).
Proof. exact (fun_ext (fun x : A => @lem8368389 A B P lt2 P2 P1 G2 G1 f H2 _114084 s H1 g x)). Qed.
Lemma lem8368391 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem8368392 {A B P : Type'} (lt2 : type1402 A) (P2 : type560 A B P) (P1 : type551 A B) (G2 : type557 A B P) (G1 : type548 A B) (f : A -> B) (H2 : type558 A B P) (_114084 : type794 A P) (s : P -> A) (H1 : type549 A B) (g : A -> B) : (term1555 A B P lt2 P2 P1 G2 G1 f H2 _114084 s H1 g) = (term1716 A B P lt2 P2 P1 G2 G1 f H2 _114084 s H1 g).
Proof. exact (MK_COMB (@lem8368391 A) (@lem8368390 A B P lt2 P2 P1 G2 G1 f H2 _114084 s H1 g)). Qed.
Lemma lem8368393 {A B P : Type'} (lt2 : type1402 A) (P2 : type560 A B P) (P1 : type551 A B) (G2 : type557 A B P) (G1 : type548 A B) (f : A -> B) (H2 : type558 A B P) (_114084 : type794 A P) (s : P -> A) (H1 : type549 A B) : (term1557 A B P lt2 P2 P1 G2 G1 f H2 _114084 s H1) = (term1717 A B P lt2 P2 P1 G2 G1 f H2 _114084 s H1).
Proof. exact (fun_ext (fun g : A -> B => @lem8368392 A B P lt2 P2 P1 G2 G1 f H2 _114084 s H1 g)). Qed.
Lemma lem8368394 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem8368395 {A B P : Type'} (lt2 : type1402 A) (P2 : type560 A B P) (P1 : type551 A B) (G2 : type557 A B P) (G1 : type548 A B) (f : A -> B) (H2 : type558 A B P) (_114084 : type794 A P) (s : P -> A) (H1 : type549 A B) : (term1559 A B P lt2 P2 P1 G2 G1 f H2 _114084 s H1) = (term1718 A B P lt2 P2 P1 G2 G1 f H2 _114084 s H1).
Proof. exact (MK_COMB (@lem8368394 A B) (@lem8368393 A B P lt2 P2 P1 G2 G1 f H2 _114084 s H1)). Qed.
Lemma lem8368396 {A B P : Type'} (lt2 : type1402 A) (P2 : type560 A B P) (P1 : type551 A B) (G2 : type557 A B P) (G1 : type548 A B) (H2 : type558 A B P) (_114084 : type794 A P) (s : P -> A) (H1 : type549 A B) : (term1561 A B P lt2 P2 P1 G2 G1 H2 _114084 s H1) = (term1719 A B P lt2 P2 P1 G2 G1 H2 _114084 s H1).
Proof. exact (fun_ext (fun f : A -> B => @lem8368395 A B P lt2 P2 P1 G2 G1 f H2 _114084 s H1)). Qed.
Lemma lem8368397 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem8368398 {A B P : Type'} (lt2 : type1402 A) (P2 : type560 A B P) (P1 : type551 A B) (G2 : type557 A B P) (G1 : type548 A B) (H2 : type558 A B P) (_114084 : type794 A P) (s : P -> A) (H1 : type549 A B) : (term1563 A B P lt2 P2 P1 G2 G1 H2 _114084 s H1) = (term1720 A B P lt2 P2 P1 G2 G1 H2 _114084 s H1).
Proof. exact (MK_COMB (@lem8368397 A B) (@lem8368396 A B P lt2 P2 P1 G2 G1 H2 _114084 s H1)). Qed.
Lemma lem8368399 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8368400 {A B P : Type'} (lt2 : type1402 A) (P2 : type560 A B P) (P1 : type551 A B) (G2 : type557 A B P) (G1 : type548 A B) (H2 : type558 A B P) (_114084 : type794 A P) (s : P -> A) (H1 : type549 A B) : (term1565 A B P lt2 P2 P1 G2 G1 H2 _114084 s H1) = (term1721 A B P lt2 P2 P1 G2 G1 H2 _114084 s H1).
Proof. exact (MK_COMB (@lem8368399) (@lem8368398 A B P lt2 P2 P1 G2 G1 H2 _114084 s H1)). Qed.
Lemma lem8368401 {A B P : Type'} (P2 : type560 A B P) (_114084 : type794 A P) (s : P -> A) (P1 : type551 A B) (f : A -> B) : (term1506 A B P P2 _114084 s P1 f) = (term1502 A B P P2 _114084 s P1 f).
Proof. exact (eq_refl (term1506 A B P P2 _114084 s P1 f)). Qed.
Lemma lem8368402 {A : Type'} (x : A) : x = x.
Proof. exact (eq_refl x). Qed.
Lemma lem8368403 {A B P : Type'} (P2 : type560 A B P) (_114084 : type794 A P) (s : P -> A) (P1 : type551 A B) (f : A -> B) (x : A) : (term1508 A B P P2 _114084 s P1 f x) = (term1704 A B P P2 _114084 s P1 f x).
Proof. exact (MK_COMB (@lem8368401 A B P P2 _114084 s P1 f) (@lem8368402 A x)). Qed.
Lemma lem8368404 {A B P : Type'} (P2 : type560 A B P) (_114084 : type794 A P) (s : P -> A) (P1 : type551 A B) (f : A -> B) (x : A) : (term1704 A B P P2 _114084 s P1 f x) = (term1500 A B P P2 _114084 s P1 f x).
Proof. exact (eq_refl (term1704 A B P P2 _114084 s P1 f x)). Qed.
Lemma lem8368405 {A B P : Type'} (P2 : type560 A B P) (_114084 : type794 A P) (s : P -> A) (P1 : type551 A B) (f : A -> B) (x : A) : (term1508 A B P P2 _114084 s P1 f x) = (term1500 A B P P2 _114084 s P1 f x).
Proof. exact (TRANS (@lem8368403 A B P P2 _114084 s P1 f x) (@lem8368404 A B P P2 _114084 s P1 f x)). Qed.
Lemma lem8368406 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8368407 {A B P : Type'} (P2 : type560 A B P) (_114084 : type794 A P) (s : P -> A) (P1 : type551 A B) (f : A -> B) (x : A) : (term1567 A B P P2 _114084 s P1 f x) = (term1722 A B P P2 _114084 s P1 f x).
Proof. exact (MK_COMB (@lem8368406) (@lem8368405 A B P P2 _114084 s P1 f x)). Qed.
Lemma lem8368408 {A B P : Type'} (G2 : type557 A B P) (_114084 : type794 A P) (s : P -> A) (G1 : type548 A B) (f : A -> B) : (term1525 A B P G2 _114084 s G1 f) = (term1521 A B P G2 _114084 s G1 f).
Proof. exact (eq_refl (term1525 A B P G2 _114084 s G1 f)). Qed.
Lemma lem8368409 {A : Type'} (x : A) : x = x.
Proof. exact (eq_refl x). Qed.
Lemma lem8368410 {A B P : Type'} (G2 : type557 A B P) (_114084 : type794 A P) (s : P -> A) (G1 : type548 A B) (f : A -> B) (x : A) : (term1527 A B P G2 _114084 s G1 f x) = (term1707 A B P G2 _114084 s G1 f x).
Proof. exact (MK_COMB (@lem8368408 A B P G2 _114084 s G1 f) (@lem8368409 A x)). Qed.
Lemma lem8368411 {A B P : Type'} (G2 : type557 A B P) (_114084 : type794 A P) (s : P -> A) (G1 : type548 A B) (f : A -> B) (x : A) : (term1707 A B P G2 _114084 s G1 f x) = (term1519 A B P G2 _114084 s G1 f x).
Proof. exact (eq_refl (term1707 A B P G2 _114084 s G1 f x)). Qed.
Lemma lem8368412 {A B P : Type'} (G2 : type557 A B P) (_114084 : type794 A P) (s : P -> A) (G1 : type548 A B) (f : A -> B) (x : A) : (term1527 A B P G2 _114084 s G1 f x) = (term1519 A B P G2 _114084 s G1 f x).
Proof. exact (TRANS (@lem8368410 A B P G2 _114084 s G1 f x) (@lem8368411 A B P G2 _114084 s G1 f x)). Qed.
Lemma lem8368413 {A : Type'} (lt2 : type1402 A) (y : A) : (lt2 y) = (lt2 y).
Proof. exact (eq_refl (lt2 y)). Qed.
Lemma lem8368414 {A B P : Type'} (lt2 : type1402 A) (y : A) (G2 : type557 A B P) (_114084 : type794 A P) (s : P -> A) (G1 : type548 A B) (f : A -> B) (x : A) : (term1569 A B P lt2 y G2 _114084 s G1 f x) = (term1723 A B P lt2 y G2 _114084 s G1 f x).
Proof. exact (MK_COMB (@lem8368413 A lt2 y) (@lem8368412 A B P G2 _114084 s G1 f x)). Qed.
Lemma lem8368415 {A B P : Type'} (P2 : type560 A B P) (P1 : type551 A B) (lt2 : type1402 A) (y : A) (G2 : type557 A B P) (_114084 : type794 A P) (s : P -> A) (G1 : type548 A B) (f : A -> B) (x : A) : (term1571 A B P P2 P1 lt2 y G2 _114084 s G1 f x) = (term1724 A B P P2 P1 lt2 y G2 _114084 s G1 f x).
Proof. exact (MK_COMB (@lem8368407 A B P P2 _114084 s P1 f x) (@lem8368414 A B P lt2 y G2 _114084 s G1 f x)). Qed.
Lemma lem8368416 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem8368417 {A B P : Type'} (P2 : type560 A B P) (P1 : type551 A B) (lt2 : type1402 A) (y : A) (G2 : type557 A B P) (_114084 : type794 A P) (s : P -> A) (G1 : type548 A B) (f : A -> B) (x : A) : (term1573 A B P P2 P1 lt2 y G2 _114084 s G1 f x) = (term1725 A B P P2 P1 lt2 y G2 _114084 s G1 f x).
Proof. exact (MK_COMB (@lem8368416) (@lem8368415 A B P P2 P1 lt2 y G2 _114084 s G1 f x)). Qed.
Lemma lem8368418 {A : Type'} (lt2 : type1402 A) (y : A) (x : A) : (lt2 y x) = (lt2 y x).
Proof. exact (eq_refl (lt2 y x)). Qed.
Lemma lem8368419 {A B P : Type'} (P2 : type560 A B P) (P1 : type551 A B) (G2 : type557 A B P) (_114084 : type794 A P) (s : P -> A) (G1 : type548 A B) (f : A -> B) (lt2 : type1402 A) (y : A) (x : A) : (term1575 A B P P2 P1 G2 _114084 s G1 f lt2 y x) = (term1726 A B P P2 P1 G2 _114084 s G1 f lt2 y x).
Proof. exact (MK_COMB (@lem8368417 A B P P2 P1 lt2 y G2 _114084 s G1 f x) (@lem8368418 A lt2 y x)). Qed.
Lemma lem8368420 {A B P : Type'} (P2 : type560 A B P) (P1 : type551 A B) (G2 : type557 A B P) (_114084 : type794 A P) (s : P -> A) (G1 : type548 A B) (f : A -> B) (lt2 : type1402 A) (x : A) : (term1577 A B P P2 P1 G2 _114084 s G1 f lt2 x) = (term1727 A B P P2 P1 G2 _114084 s G1 f lt2 x).
Proof. exact (fun_ext (fun y : A => @lem8368419 A B P P2 P1 G2 _114084 s G1 f lt2 y x)). Qed.
Lemma lem8368421 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem8368422 {A B P : Type'} (P2 : type560 A B P) (P1 : type551 A B) (G2 : type557 A B P) (_114084 : type794 A P) (s : P -> A) (G1 : type548 A B) (f : A -> B) (lt2 : type1402 A) (x : A) : (term1579 A B P P2 P1 G2 _114084 s G1 f lt2 x) = (term1728 A B P P2 P1 G2 _114084 s G1 f lt2 x).
Proof. exact (MK_COMB (@lem8368421 A) (@lem8368420 A B P P2 P1 G2 _114084 s G1 f lt2 x)). Qed.
Lemma lem8368423 {A B P : Type'} (P2 : type560 A B P) (P1 : type551 A B) (G2 : type557 A B P) (_114084 : type794 A P) (s : P -> A) (G1 : type548 A B) (f : A -> B) (lt2 : type1402 A) : (term1581 A B P P2 P1 G2 _114084 s G1 f lt2) = (term1729 A B P P2 P1 G2 _114084 s G1 f lt2).
Proof. exact (fun_ext (fun x : A => @lem8368422 A B P P2 P1 G2 _114084 s G1 f lt2 x)). Qed.
Lemma lem8368424 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem8368425 {A B P : Type'} (P2 : type560 A B P) (P1 : type551 A B) (G2 : type557 A B P) (_114084 : type794 A P) (s : P -> A) (G1 : type548 A B) (f : A -> B) (lt2 : type1402 A) : (term1583 A B P P2 P1 G2 _114084 s G1 f lt2) = (term1730 A B P P2 P1 G2 _114084 s G1 f lt2).
Proof. exact (MK_COMB (@lem8368424 A) (@lem8368423 A B P P2 P1 G2 _114084 s G1 f lt2)). Qed.
Lemma lem8368426 {A B P : Type'} (P2 : type560 A B P) (P1 : type551 A B) (G2 : type557 A B P) (_114084 : type794 A P) (s : P -> A) (G1 : type548 A B) (lt2 : type1402 A) : (term1585 A B P P2 P1 G2 _114084 s G1 lt2) = (term1731 A B P P2 P1 G2 _114084 s G1 lt2).
Proof. exact (fun_ext (fun f : A -> B => @lem8368425 A B P P2 P1 G2 _114084 s G1 f lt2)). Qed.
Lemma lem8368427 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem8368428 {A B P : Type'} (P2 : type560 A B P) (P1 : type551 A B) (G2 : type557 A B P) (_114084 : type794 A P) (s : P -> A) (G1 : type548 A B) (lt2 : type1402 A) : (term1587 A B P P2 P1 G2 _114084 s G1 lt2) = (term1732 A B P P2 P1 G2 _114084 s G1 lt2).
Proof. exact (MK_COMB (@lem8368427 A B) (@lem8368426 A B P P2 P1 G2 _114084 s G1 lt2)). Qed.
Lemma lem8368429 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8368430 {A B P : Type'} (P2 : type560 A B P) (P1 : type551 A B) (G2 : type557 A B P) (_114084 : type794 A P) (s : P -> A) (G1 : type548 A B) (lt2 : type1402 A) : (term1589 A B P P2 P1 G2 _114084 s G1 lt2) = (term1733 A B P P2 P1 G2 _114084 s G1 lt2).
Proof. exact (MK_COMB (@lem8368429) (@lem8368428 A B P P2 P1 G2 _114084 s G1 lt2)). Qed.
Lemma lem8368431 {A B P : Type'} (P2 : type560 A B P) (_114084 : type794 A P) (s : P -> A) (P1 : type551 A B) (f : A -> B) : (term1506 A B P P2 _114084 s P1 f) = (term1502 A B P P2 _114084 s P1 f).
Proof. exact (eq_refl (term1506 A B P P2 _114084 s P1 f)). Qed.
Lemma lem8368432 {A : Type'} (x : A) : x = x.
Proof. exact (eq_refl x). Qed.
Lemma lem8368433 {A B P : Type'} (P2 : type560 A B P) (_114084 : type794 A P) (s : P -> A) (P1 : type551 A B) (f : A -> B) (x : A) : (term1508 A B P P2 _114084 s P1 f x) = (term1704 A B P P2 _114084 s P1 f x).
Proof. exact (MK_COMB (@lem8368431 A B P P2 _114084 s P1 f) (@lem8368432 A x)). Qed.
Lemma lem8368434 {A B P : Type'} (P2 : type560 A B P) (_114084 : type794 A P) (s : P -> A) (P1 : type551 A B) (f : A -> B) (x : A) : (term1704 A B P P2 _114084 s P1 f x) = (term1500 A B P P2 _114084 s P1 f x).
Proof. exact (eq_refl (term1704 A B P P2 _114084 s P1 f x)). Qed.
Lemma lem8368435 {A B P : Type'} (P2 : type560 A B P) (_114084 : type794 A P) (s : P -> A) (P1 : type551 A B) (f : A -> B) (x : A) : (term1508 A B P P2 _114084 s P1 f x) = (term1500 A B P P2 _114084 s P1 f x).
Proof. exact (TRANS (@lem8368433 A B P P2 _114084 s P1 f x) (@lem8368434 A B P P2 _114084 s P1 f x)). Qed.
Lemma lem8368436 {B : Type'} : (@COND B) = (@COND B).
Proof. exact (eq_refl (@COND B)). Qed.
Lemma lem8368437 {A B P : Type'} (P2 : type560 A B P) (_114084 : type794 A P) (s : P -> A) (P1 : type551 A B) (f : A -> B) (x : A) : (term1601 A B P P2 _114084 s P1 f x) = (term1734 A B P P2 _114084 s P1 f x).
Proof. exact (MK_COMB (@lem8368436 B) (@lem8368435 A B P P2 _114084 s P1 f x)). Qed.
Lemma lem8368438 {A B P : Type'} (G2 : type557 A B P) (_114084 : type794 A P) (s : P -> A) (G1 : type548 A B) (f : A -> B) : (term1525 A B P G2 _114084 s G1 f) = (term1521 A B P G2 _114084 s G1 f).
Proof. exact (eq_refl (term1525 A B P G2 _114084 s G1 f)). Qed.
Lemma lem8368439 {A : Type'} (x : A) : x = x.
Proof. exact (eq_refl x). Qed.
Lemma lem8368440 {A B P : Type'} (G2 : type557 A B P) (_114084 : type794 A P) (s : P -> A) (G1 : type548 A B) (f : A -> B) (x : A) : (term1527 A B P G2 _114084 s G1 f x) = (term1707 A B P G2 _114084 s G1 f x).
Proof. exact (MK_COMB (@lem8368438 A B P G2 _114084 s G1 f) (@lem8368439 A x)). Qed.
Lemma lem8368441 {A B P : Type'} (G2 : type557 A B P) (_114084 : type794 A P) (s : P -> A) (G1 : type548 A B) (f : A -> B) (x : A) : (term1707 A B P G2 _114084 s G1 f x) = (term1519 A B P G2 _114084 s G1 f x).
Proof. exact (eq_refl (term1707 A B P G2 _114084 s G1 f x)). Qed.
Lemma lem8368442 {A B P : Type'} (G2 : type557 A B P) (_114084 : type794 A P) (s : P -> A) (G1 : type548 A B) (f : A -> B) (x : A) : (term1527 A B P G2 _114084 s G1 f x) = (term1519 A B P G2 _114084 s G1 f x).
Proof. exact (TRANS (@lem8368440 A B P G2 _114084 s G1 f x) (@lem8368441 A B P G2 _114084 s G1 f x)). Qed.
Lemma lem8368443 {A B : Type'} (f : A -> B) : f = f.
Proof. exact (eq_refl f). Qed.
Lemma lem8368444 {A B P : Type'} (G2 : type557 A B P) (_114084 : type794 A P) (s : P -> A) (G1 : type548 A B) (f : A -> B) (x : A) : (term1603 A B P G2 _114084 s G1 f x) = (term1735 A B P G2 _114084 s G1 f x).
Proof. exact (MK_COMB (@lem8368443 A B f) (@lem8368442 A B P G2 _114084 s G1 f x)). Qed.
Lemma lem8368445 {A B P : Type'} (P2 : type560 A B P) (P1 : type551 A B) (G2 : type557 A B P) (_114084 : type794 A P) (s : P -> A) (G1 : type548 A B) (f : A -> B) (x : A) : (term1605 A B P P2 P1 G2 _114084 s G1 f x) = (term1736 A B P P2 P1 G2 _114084 s G1 f x).
Proof. exact (MK_COMB (@lem8368437 A B P P2 _114084 s P1 f x) (@lem8368444 A B P G2 _114084 s G1 f x)). Qed.
Lemma lem8368446 {A B P : Type'} (H2 : type558 A B P) (_114084 : type794 A P) (s : P -> A) (H1 : type549 A B) (f : A -> B) : (term1541 A B P H2 _114084 s H1 f) = (term1537 A B P H2 _114084 s H1 f).
Proof. exact (eq_refl (term1541 A B P H2 _114084 s H1 f)). Qed.
Lemma lem8368447 {A : Type'} (x : A) : x = x.
Proof. exact (eq_refl x). Qed.
Lemma lem8368448 {A B P : Type'} (H2 : type558 A B P) (_114084 : type794 A P) (s : P -> A) (H1 : type549 A B) (f : A -> B) (x : A) : (term1543 A B P H2 _114084 s H1 f x) = (term1710 A B P H2 _114084 s H1 f x).
Proof. exact (MK_COMB (@lem8368446 A B P H2 _114084 s H1 f) (@lem8368447 A x)). Qed.
Lemma lem8368449 {A B P : Type'} (H2 : type558 A B P) (_114084 : type794 A P) (s : P -> A) (H1 : type549 A B) (f : A -> B) (x : A) : (term1710 A B P H2 _114084 s H1 f x) = (term1535 A B P H2 _114084 s H1 f x).
Proof. exact (eq_refl (term1710 A B P H2 _114084 s H1 f x)). Qed.
Lemma lem8368450 {A B P : Type'} (H2 : type558 A B P) (_114084 : type794 A P) (s : P -> A) (H1 : type549 A B) (f : A -> B) (x : A) : (term1543 A B P H2 _114084 s H1 f x) = (term1535 A B P H2 _114084 s H1 f x).
Proof. exact (TRANS (@lem8368448 A B P H2 _114084 s H1 f x) (@lem8368449 A B P H2 _114084 s H1 f x)). Qed.
Lemma lem8368451 {A B P : Type'} (P2 : type560 A B P) (P1 : type551 A B) (G2 : type557 A B P) (G1 : type548 A B) (H2 : type558 A B P) (_114084 : type794 A P) (s : P -> A) (H1 : type549 A B) (f : A -> B) (x : A) : (term1607 A B P P2 P1 G2 G1 H2 _114084 s H1 f x) = (term1737 A B P P2 P1 G2 G1 H2 _114084 s H1 f x).
Proof. exact (MK_COMB (@lem8368445 A B P P2 P1 G2 _114084 s G1 f x) (@lem8368450 A B P H2 _114084 s H1 f x)). Qed.
Lemma lem8368452 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (_114084 : type794 A P) (s : P -> A) (P1 : type551 A B) (G1 : type548 A B) (H1 : type549 A B) (f : A -> B) (x : A) : (term1599 A B P P2 G2 H2 _114084 s P1 G1 H1 f x) = (term1599 A B P P2 G2 H2 _114084 s P1 G1 H1 f x).
Proof. exact (eq_refl (term1599 A B P P2 G2 H2 _114084 s P1 G1 H1 f x)). Qed.
Lemma lem8368453 {A B P : Type'} (P2 : type560 A B P) (P1 : type551 A B) (G2 : type557 A B P) (G1 : type548 A B) (H2 : type558 A B P) (_114084 : type794 A P) (s : P -> A) (H1 : type549 A B) (f : A -> B) (x : A) : ((term1598 A B P P2 G2 H2 _114084 s P1 G1 H1 f x) = (term1607 A B P P2 P1 G2 G1 H2 _114084 s H1 f x)) = ((term1598 A B P P2 G2 H2 _114084 s P1 G1 H1 f x) = (term1737 A B P P2 P1 G2 G1 H2 _114084 s H1 f x)).
Proof. exact (MK_COMB (@lem8368452 A B P P2 G2 H2 _114084 s P1 G1 H1 f x) (@lem8368451 A B P P2 P1 G2 G1 H2 _114084 s H1 f x)). Qed.
Lemma lem8368454 {A B P : Type'} (P2 : type560 A B P) (P1 : type551 A B) (G2 : type557 A B P) (G1 : type548 A B) (H2 : type558 A B P) (_114084 : type794 A P) (s : P -> A) (H1 : type549 A B) (f : A -> B) : (term1609 A B P P2 P1 G2 G1 H2 _114084 s H1 f) = (term1738 A B P P2 P1 G2 G1 H2 _114084 s H1 f).
Proof. exact (fun_ext (fun x : A => @lem8368453 A B P P2 P1 G2 G1 H2 _114084 s H1 f x)). Qed.
Lemma lem8368455 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem8368456 {A B P : Type'} (P2 : type560 A B P) (P1 : type551 A B) (G2 : type557 A B P) (G1 : type548 A B) (H2 : type558 A B P) (_114084 : type794 A P) (s : P -> A) (H1 : type549 A B) (f : A -> B) : (term1611 A B P P2 P1 G2 G1 H2 _114084 s H1 f) = (term1739 A B P P2 P1 G2 G1 H2 _114084 s H1 f).
Proof. exact (MK_COMB (@lem8368455 A) (@lem8368454 A B P P2 P1 G2 G1 H2 _114084 s H1 f)). Qed.
Lemma lem8368457 {A B P : Type'} (P2 : type560 A B P) (P1 : type551 A B) (G2 : type557 A B P) (G1 : type548 A B) (H2 : type558 A B P) (_114084 : type794 A P) (s : P -> A) (H1 : type549 A B) : (term1613 A B P P2 P1 G2 G1 H2 _114084 s H1) = (term1740 A B P P2 P1 G2 G1 H2 _114084 s H1).
Proof. exact (fun_ext (fun f : A -> B => @lem8368456 A B P P2 P1 G2 G1 H2 _114084 s H1 f)). Qed.
Lemma lem8368458 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem8368459 {A B P : Type'} (P2 : type560 A B P) (P1 : type551 A B) (G2 : type557 A B P) (G1 : type548 A B) (H2 : type558 A B P) (_114084 : type794 A P) (s : P -> A) (H1 : type549 A B) : (term1615 A B P P2 P1 G2 G1 H2 _114084 s H1) = (term1741 A B P P2 P1 G2 G1 H2 _114084 s H1).
Proof. exact (MK_COMB (@lem8368458 A B) (@lem8368457 A B P P2 P1 G2 G1 H2 _114084 s H1)). Qed.
Lemma lem8368460 {A B P : Type'} (lt2 : type1402 A) (P2 : type560 A B P) (P1 : type551 A B) (G2 : type557 A B P) (G1 : type548 A B) (H2 : type558 A B P) (_114084 : type794 A P) (s : P -> A) (H1 : type549 A B) : (term1617 A B P lt2 P2 P1 G2 G1 H2 _114084 s H1) = (term1742 A B P lt2 P2 P1 G2 G1 H2 _114084 s H1).
Proof. exact (MK_COMB (@lem8368430 A B P P2 P1 G2 _114084 s G1 lt2) (@lem8368459 A B P P2 P1 G2 G1 H2 _114084 s H1)). Qed.
Lemma lem8368461 {A B P : Type'} (lt2 : type1402 A) (P2 : type560 A B P) (P1 : type551 A B) (G2 : type557 A B P) (G1 : type548 A B) (H2 : type558 A B P) (_114084 : type794 A P) (s : P -> A) (H1 : type549 A B) : (term1618 A B P lt2 P2 P1 G2 G1 H2 _114084 s H1) = (term1743 A B P lt2 P2 P1 G2 G1 H2 _114084 s H1).
Proof. exact (MK_COMB (@lem8368400 A B P lt2 P2 P1 G2 G1 H2 _114084 s H1) (@lem8368460 A B P lt2 P2 P1 G2 G1 H2 _114084 s H1)). Qed.
Lemma lem8368462 {A B P : Type'} (t : type558 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) : (term1623 A B P t P2 G2 H2) = (term1623 A B P t P2 G2 H2).
Proof. exact (eq_refl (term1623 A B P t P2 G2 H2)). Qed.
Lemma lem8368463 {A B P : Type'} (t : type558 A B P) (lt2 : type1402 A) (P2 : type560 A B P) (P1 : type551 A B) (G2 : type557 A B P) (G1 : type548 A B) (H2 : type558 A B P) (_114084 : type794 A P) (s : P -> A) (H1 : type549 A B) : (term1654 A B P t lt2 P2 P1 G2 G1 H2 _114084 s H1) = (term1744 A B P t lt2 P2 P1 G2 G1 H2 _114084 s H1).
Proof. exact (MK_COMB (@lem8368462 A B P t P2 G2 H2) (@lem8368461 A B P lt2 P2 P1 G2 G1 H2 _114084 s H1)). Qed.
Lemma lem8368464 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) : (term1626 A B P lt2 s P2 G2 H2) = (term1626 A B P lt2 s P2 G2 H2).
Proof. exact (eq_refl (term1626 A B P lt2 s P2 G2 H2)). Qed.
Lemma lem8368465 {A B P : Type'} (t : type558 A B P) (lt2 : type1402 A) (P2 : type560 A B P) (P1 : type551 A B) (G2 : type557 A B P) (G1 : type548 A B) (H2 : type558 A B P) (_114084 : type794 A P) (s : P -> A) (H1 : type549 A B) : (term1655 A B P t lt2 P2 P1 G2 G1 H2 _114084 s H1) = (term1745 A B P t lt2 P2 P1 G2 G1 H2 _114084 s H1).
Proof. exact (MK_COMB (@lem8368464 A B P lt2 s P2 G2 H2) (@lem8368463 A B P t lt2 P2 P1 G2 G1 H2 _114084 s H1)). Qed.
Lemma lem8368466 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (lt2 : type1402 A) (s : P -> A) : (term1629 A B P P2 G2 lt2 s) = (term1629 A B P P2 G2 lt2 s).
Proof. exact (eq_refl (term1629 A B P P2 G2 lt2 s)). Qed.
Lemma lem8368467 {A B P : Type'} (t : type558 A B P) (lt2 : type1402 A) (P2 : type560 A B P) (P1 : type551 A B) (G2 : type557 A B P) (G1 : type548 A B) (H2 : type558 A B P) (_114084 : type794 A P) (s : P -> A) (H1 : type549 A B) : (term1656 A B P t lt2 P2 P1 G2 G1 H2 _114084 s H1) = (term1746 A B P t lt2 P2 P1 G2 G1 H2 _114084 s H1).
Proof. exact (MK_COMB (@lem8368466 A B P P2 G2 lt2 s) (@lem8368465 A B P t lt2 P2 P1 G2 G1 H2 _114084 s H1)). Qed.
Lemma lem8368468 {A B P : Type'} (clauses : type1635 A B P) (P1 : type551 A B) (G1 : type548 A B) (H1 : type549 A B) : (term1632 A B P clauses P1 G1 H1) = (term1632 A B P clauses P1 G1 H1).
Proof. exact (eq_refl (term1632 A B P clauses P1 G1 H1)). Qed.
Lemma lem8368469 {A B P : Type'} (clauses : type1635 A B P) (t : type558 A B P) (lt2 : type1402 A) (P2 : type560 A B P) (P1 : type551 A B) (G2 : type557 A B P) (G1 : type548 A B) (H2 : type558 A B P) (_114084 : type794 A P) (s : P -> A) (H1 : type549 A B) : (term1657 A B P clauses t lt2 P2 P1 G2 G1 H2 _114084 s H1) = (term1747 A B P clauses t lt2 P2 P1 G2 G1 H2 _114084 s H1).
Proof. exact (MK_COMB (@lem8368468 A B P clauses P1 G1 H1) (@lem8368467 A B P t lt2 P2 P1 G2 G1 H2 _114084 s H1)). Qed.
Lemma lem8368470 {A B : Type'} (P1 : type551 A B) (G1 : type548 A B) (lt2 : type1402 A) : (term1635 A B P1 G1 lt2) = (term1635 A B P1 G1 lt2).
Proof. exact (eq_refl (term1635 A B P1 G1 lt2)). Qed.
Lemma lem8368471 {A B P : Type'} (clauses : type1635 A B P) (t : type558 A B P) (lt2 : type1402 A) (P2 : type560 A B P) (P1 : type551 A B) (G2 : type557 A B P) (G1 : type548 A B) (H2 : type558 A B P) (_114084 : type794 A P) (s : P -> A) (H1 : type549 A B) : (term1658 A B P clauses t lt2 P2 P1 G2 G1 H2 _114084 s H1) = (term1748 A B P clauses t lt2 P2 P1 G2 G1 H2 _114084 s H1).
Proof. exact (MK_COMB (@lem8368470 A B P1 G1 lt2) (@lem8368469 A B P clauses t lt2 P2 P1 G2 G1 H2 _114084 s H1)). Qed.
Lemma lem8368472 {A B : Type'} (lt2 : type1402 A) (P1 : type551 A B) (G1 : type548 A B) (H1 : type549 A B) : (term1638 A B lt2 P1 G1 H1) = (term1638 A B lt2 P1 G1 H1).
Proof. exact (eq_refl (term1638 A B lt2 P1 G1 H1)). Qed.
Lemma lem8368473 {A B P : Type'} (clauses : type1635 A B P) (t : type558 A B P) (lt2 : type1402 A) (P2 : type560 A B P) (P1 : type551 A B) (G2 : type557 A B P) (G1 : type548 A B) (H2 : type558 A B P) (_114084 : type794 A P) (s : P -> A) (H1 : type549 A B) : (term1659 A B P clauses t lt2 P2 P1 G2 G1 H2 _114084 s H1) = (term1749 A B P clauses t lt2 P2 P1 G2 G1 H2 _114084 s H1).
Proof. exact (MK_COMB (@lem8368472 A B lt2 P1 G1 H1) (@lem8368471 A B P clauses t lt2 P2 P1 G2 G1 H2 _114084 s H1)). Qed.
Lemma lem8368474 {A P : Type'} (_114084 : type794 A P) : (term1493 A P _114084) = (term1493 A P _114084).
Proof. exact (eq_refl (term1493 A P _114084)). Qed.
Lemma lem8368475 {A B P : Type'} (clauses : type1635 A B P) (t : type558 A B P) (lt2 : type1402 A) (P2 : type560 A B P) (P1 : type551 A B) (G2 : type557 A B P) (G1 : type548 A B) (H2 : type558 A B P) (_114084 : type794 A P) (s : P -> A) (H1 : type549 A B) : (term1660 A B P clauses t lt2 P2 P1 G2 G1 H2 _114084 s H1) = (term1750 A B P clauses t lt2 P2 P1 G2 G1 H2 _114084 s H1).
Proof. exact (MK_COMB (@lem8368474 A P _114084) (@lem8368473 A B P clauses t lt2 P2 P1 G2 G1 H2 _114084 s H1)). Qed.
Lemma lem8368476 {A B P : Type'} (clauses : type1635 A B P) (t : type558 A B P) (lt2 : type1402 A) (P2 : type560 A B P) (P1 : type551 A B) (G2 : type557 A B P) (G1 : type548 A B) (H2 : type558 A B P) (s : P -> A) (H1 : type549 A B) : (term1662 A B P clauses t lt2 P2 P1 G2 G1 H2 s H1) = (term1751 A B P clauses t lt2 P2 P1 G2 G1 H2 s H1).
Proof. exact (fun_ext (fun _114084 : type794 A P => @lem8368475 A B P clauses t lt2 P2 P1 G2 G1 H2 _114084 s H1)). Qed.
Lemma lem8368477 {A P : Type'} : (@all ((P -> A) -> A -> P)) = (@all ((P -> A) -> A -> P)).
Proof. exact (eq_refl (@all ((P -> A) -> A -> P))). Qed.
Lemma lem8368478 {A B P : Type'} (clauses : type1635 A B P) (t : type558 A B P) (lt2 : type1402 A) (P2 : type560 A B P) (P1 : type551 A B) (G2 : type557 A B P) (G1 : type548 A B) (H2 : type558 A B P) (s : P -> A) (H1 : type549 A B) : (term1663 A B P clauses t lt2 P2 P1 G2 G1 H2 s H1) = (term1752 A B P clauses t lt2 P2 P1 G2 G1 H2 s H1).
Proof. exact (MK_COMB (@lem8368477 A P) (@lem8368476 A B P clauses t lt2 P2 P1 G2 G1 H2 s H1)). Qed.
Lemma lem8368479 {A B P : Type'} (t : type558 A B P) (lt2 : type1402 A) (P2 : type560 A B P) (P1 : type551 A B) (G2 : type557 A B P) (G1 : type548 A B) (H2 : type558 A B P) (s : P -> A) (H1 : type549 A B) : (term1665 A B P t lt2 P2 P1 G2 G1 H2 s H1) = (term1753 A B P t lt2 P2 P1 G2 G1 H2 s H1).
Proof. exact (fun_ext (fun clauses : type1635 A B P => @lem8368478 A B P clauses t lt2 P2 P1 G2 G1 H2 s H1)). Qed.
Lemma lem8368480 {A B P : Type'} : (@all (list (prod (P -> A) ((A -> B) -> P -> B)))) = (@all (list (prod (P -> A) ((A -> B) -> P -> B)))).
Proof. exact (eq_refl (@all (list (prod (P -> A) ((A -> B) -> P -> B))))). Qed.
Lemma lem8368481 {A B P : Type'} (t : type558 A B P) (lt2 : type1402 A) (P2 : type560 A B P) (P1 : type551 A B) (G2 : type557 A B P) (G1 : type548 A B) (H2 : type558 A B P) (s : P -> A) (H1 : type549 A B) : (term1667 A B P t lt2 P2 P1 G2 G1 H2 s H1) = (term1754 A B P t lt2 P2 P1 G2 G1 H2 s H1).
Proof. exact (MK_COMB (@lem8368480 A B P) (@lem8368479 A B P t lt2 P2 P1 G2 G1 H2 s H1)). Qed.
Lemma lem8368482 {A B P : Type'} (lt2 : type1402 A) (P2 : type560 A B P) (P1 : type551 A B) (G2 : type557 A B P) (G1 : type548 A B) (H2 : type558 A B P) (s : P -> A) (H1 : type549 A B) : (term1669 A B P lt2 P2 P1 G2 G1 H2 s H1) = (term1755 A B P lt2 P2 P1 G2 G1 H2 s H1).
Proof. exact (fun_ext (fun t : type558 A B P => @lem8368481 A B P t lt2 P2 P1 G2 G1 H2 s H1)). Qed.
Lemma lem8368483 {A B P : Type'} : (@all ((A -> B) -> P -> B)) = (@all ((A -> B) -> P -> B)).
Proof. exact (eq_refl (@all ((A -> B) -> P -> B))). Qed.
Lemma lem8368484 {A B P : Type'} (lt2 : type1402 A) (P2 : type560 A B P) (P1 : type551 A B) (G2 : type557 A B P) (G1 : type548 A B) (H2 : type558 A B P) (s : P -> A) (H1 : type549 A B) : (term1671 A B P lt2 P2 P1 G2 G1 H2 s H1) = (term1756 A B P lt2 P2 P1 G2 G1 H2 s H1).
Proof. exact (MK_COMB (@lem8368483 A B P) (@lem8368482 A B P lt2 P2 P1 G2 G1 H2 s H1)). Qed.
Lemma lem8368485 {A B P : Type'} (P2 : type560 A B P) (P1 : type551 A B) (G2 : type557 A B P) (G1 : type548 A B) (H2 : type558 A B P) (s : P -> A) (H1 : type549 A B) : (term1673 A B P P2 P1 G2 G1 H2 s H1) = (term1757 A B P P2 P1 G2 G1 H2 s H1).
Proof. exact (fun_ext (fun lt2 : type1402 A => @lem8368484 A B P lt2 P2 P1 G2 G1 H2 s H1)). Qed.
Lemma lem8368486 {A : Type'} : (@all (A -> A -> Prop)) = (@all (A -> A -> Prop)).
Proof. exact (eq_refl (@all (A -> A -> Prop))). Qed.
Lemma lem8368487 {A B P : Type'} (P2 : type560 A B P) (P1 : type551 A B) (G2 : type557 A B P) (G1 : type548 A B) (H2 : type558 A B P) (s : P -> A) (H1 : type549 A B) : (term1675 A B P P2 P1 G2 G1 H2 s H1) = (term1758 A B P P2 P1 G2 G1 H2 s H1).
Proof. exact (MK_COMB (@lem8368486 A) (@lem8368485 A B P P2 P1 G2 G1 H2 s H1)). Qed.
Lemma lem8368488 {A B P : Type'} (P1 : type551 A B) (G2 : type557 A B P) (G1 : type548 A B) (H2 : type558 A B P) (s : P -> A) (H1 : type549 A B) : (term1677 A B P P1 G2 G1 H2 s H1) = (term1759 A B P P1 G2 G1 H2 s H1).
Proof. exact (fun_ext (fun P2 : type560 A B P => @lem8368487 A B P P2 P1 G2 G1 H2 s H1)). Qed.
Lemma lem8368489 {A B P : Type'} : (@all ((A -> B) -> P -> Prop)) = (@all ((A -> B) -> P -> Prop)).
Proof. exact (eq_refl (@all ((A -> B) -> P -> Prop))). Qed.
Lemma lem8368490 {A B P : Type'} (P1 : type551 A B) (G2 : type557 A B P) (G1 : type548 A B) (H2 : type558 A B P) (s : P -> A) (H1 : type549 A B) : (term1679 A B P P1 G2 G1 H2 s H1) = (term1760 A B P P1 G2 G1 H2 s H1).
Proof. exact (MK_COMB (@lem8368489 A B P) (@lem8368488 A B P P1 G2 G1 H2 s H1)). Qed.
Lemma lem8368491 {A B P : Type'} (G2 : type557 A B P) (G1 : type548 A B) (H2 : type558 A B P) (s : P -> A) (H1 : type549 A B) : (term1681 A B P G2 G1 H2 s H1) = (term1761 A B P G2 G1 H2 s H1).
Proof. exact (fun_ext (fun P1 : type551 A B => @lem8368490 A B P P1 G2 G1 H2 s H1)). Qed.
Lemma lem8368492 {A B : Type'} : (@all ((A -> B) -> A -> Prop)) = (@all ((A -> B) -> A -> Prop)).
Proof. exact (eq_refl (@all ((A -> B) -> A -> Prop))). Qed.
Lemma lem8368493 {A B P : Type'} (G2 : type557 A B P) (G1 : type548 A B) (H2 : type558 A B P) (s : P -> A) (H1 : type549 A B) : (term1683 A B P G2 G1 H2 s H1) = (term1762 A B P G2 G1 H2 s H1).
Proof. exact (MK_COMB (@lem8368492 A B) (@lem8368491 A B P G2 G1 H2 s H1)). Qed.
Lemma lem8368494 {A B P : Type'} (G1 : type548 A B) (H2 : type558 A B P) (s : P -> A) (H1 : type549 A B) : (term1685 A B P G1 H2 s H1) = (term1763 A B P G1 H2 s H1).
Proof. exact (fun_ext (fun G2 : type557 A B P => @lem8368493 A B P G2 G1 H2 s H1)). Qed.
Lemma lem8368495 {A B P : Type'} : (@all ((A -> B) -> P -> A)) = (@all ((A -> B) -> P -> A)).
Proof. exact (eq_refl (@all ((A -> B) -> P -> A))). Qed.
Lemma lem8368496 {A B P : Type'} (G1 : type548 A B) (H2 : type558 A B P) (s : P -> A) (H1 : type549 A B) : (term1687 A B P G1 H2 s H1) = (term1764 A B P G1 H2 s H1).
Proof. exact (MK_COMB (@lem8368495 A B P) (@lem8368494 A B P G1 H2 s H1)). Qed.
Lemma lem8368497 {A B P : Type'} (H2 : type558 A B P) (s : P -> A) (H1 : type549 A B) : (term1689 A B P H2 s H1) = (term1765 A B P H2 s H1).
Proof. exact (fun_ext (fun G1 : type548 A B => @lem8368496 A B P G1 H2 s H1)). Qed.
Lemma lem8368498 {A B : Type'} : (@all ((A -> B) -> A -> A)) = (@all ((A -> B) -> A -> A)).
Proof. exact (eq_refl (@all ((A -> B) -> A -> A))). Qed.
Lemma lem8368499 {A B P : Type'} (H2 : type558 A B P) (s : P -> A) (H1 : type549 A B) : (term1691 A B P H2 s H1) = (term1766 A B P H2 s H1).
Proof. exact (MK_COMB (@lem8368498 A B) (@lem8368497 A B P H2 s H1)). Qed.
Lemma lem8368500 {A B P : Type'} (s : P -> A) (H1 : type549 A B) : (term1693 A B P s H1) = (term1767 A B P s H1).
Proof. exact (fun_ext (fun H2 : type558 A B P => @lem8368499 A B P H2 s H1)). Qed.
Lemma lem8368501 {A B P : Type'} : (@all ((A -> B) -> P -> B)) = (@all ((A -> B) -> P -> B)).
Proof. exact (eq_refl (@all ((A -> B) -> P -> B))). Qed.
Lemma lem8368502 {A B P : Type'} (s : P -> A) (H1 : type549 A B) : (term1695 A B P s H1) = (term1768 A B P s H1).
Proof. exact (MK_COMB (@lem8368501 A B P) (@lem8368500 A B P s H1)). Qed.
Lemma lem8368503 {A B P : Type'} (H1 : type549 A B) : (term1697 A B P H1) = (term1769 A B P H1).
Proof. exact (fun_ext (fun s : P -> A => @lem8368502 A B P s H1)). Qed.
Lemma lem8368504 {A P : Type'} : (@all (P -> A)) = (@all (P -> A)).
Proof. exact (eq_refl (@all (P -> A))). Qed.
Lemma lem8368505 {A B P : Type'} (H1 : type549 A B) : (term1699 A B P H1) = (term1770 A B P H1).
Proof. exact (MK_COMB (@lem8368504 A P) (@lem8368503 A B P H1)). Qed.
Lemma lem8368506 {A B P : Type'} : (term1701 A B P) = (term1771 A B P).
Proof. exact (fun_ext (fun H1 : type549 A B => @lem8368505 A B P H1)). Qed.
Lemma lem8368507 {A B : Type'} : (@all ((A -> B) -> A -> B)) = (@all ((A -> B) -> A -> B)).
Proof. exact (eq_refl (@all ((A -> B) -> A -> B))). Qed.
Lemma lem8368508 {A B P : Type'} : (term1703 A B P) = (term1772 A B P).
Proof. exact (MK_COMB (@lem8368507 A B) (@lem8368506 A B P)). Qed.
Lemma lem8368511 {A B P : Type'} : (term1702 A B P) = (term1772 A B P).
Proof. exact (TRANS (@lem8368338 A B P) (@lem8368508 A B P)). Qed.
Lemma lem8368517 {A P : Type'} (s : P -> A) (x : A) (h1 : (term1773 A P s x) = False) : (term1773 A P s x) = False.
Proof. exact (h1). Qed.
Lemma lem8368518 {A P : Type'} (s : P -> A) (x : A) (h1 : (term1773 A P s x) = False) : (term1773 A P s x) = False.
Proof. exact (@lem8368517 A P s x h1). Qed.
Lemma lem8368519 {B : Type'} : (@COND B) = (@COND B).
Proof. exact (eq_refl (@COND B)). Qed.
Lemma lem8368520 {A B P : Type'} (s : P -> A) (x : A) (h1 : (term1773 A P s x) = False) : (term1432 A B P s x) = (@COND B False).
Proof. exact (MK_COMB (@lem8368519 B) (@lem8368518 A P s x h1)). Qed.
Lemma lem8368521 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (f : A -> B) (_114084 : type794 A P) (s : P -> A) (x : A) : (term1596 A B P P2 G2 H2 f _114084 s x) = (term1596 A B P P2 G2 H2 f _114084 s x).
Proof. exact (eq_refl (term1596 A B P P2 G2 H2 f _114084 s x)). Qed.
Lemma lem8368522 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (f : A -> B) (_114084 : type794 A P) (s : P -> A) (x : A) (h1 : (term1773 A P s x) = False) : (term1597 A B P P2 G2 H2 f _114084 s x) = (term1774 A B P P2 G2 H2 f _114084 s x).
Proof. exact (MK_COMB (@lem8368520 A B P s x h1) (@lem8368521 A B P P2 G2 H2 f _114084 s x)). Qed.
Lemma lem8368523 {A B : Type'} (P1 : type551 A B) (G1 : type548 A B) (H1 : type549 A B) (f : A -> B) (x : A) : (term908 A B P1 G1 H1 f x) = (term908 A B P1 G1 H1 f x).
Proof. exact (eq_refl (term908 A B P1 G1 H1 f x)). Qed.
Lemma lem8368524 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (_114084 : type794 A P) (P1 : type551 A B) (G1 : type548 A B) (H1 : type549 A B) (f : A -> B) (s : P -> A) (x : A) (h1 : (term1773 A P s x) = False) : (term1598 A B P P2 G2 H2 _114084 s P1 G1 H1 f x) = (term1775 A B P P2 G2 H2 _114084 s P1 G1 H1 f x).
Proof. exact (MK_COMB (@lem8368522 A B P P2 G2 H2 f _114084 s x h1) (@lem8368523 A B P1 G1 H1 f x)). Qed.
Lemma lem8368526 {A : Type'} (t1 : A) (t2 : A) : (@COND A False t1 t2) = t2.
Proof. exact (proj2 (@lem12653 A t1 t2)). Qed.
Lemma lem8368527 {B : Type'} (t1 : B) (t2 : B) : (@COND B False t1 t2) = t2.
Proof. exact (@lem8368526 B t1 t2). Qed.
Lemma lem8368528 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (_114084 : type794 A P) (s : P -> A) (P1 : type551 A B) (G1 : type548 A B) (H1 : type549 A B) (f : A -> B) (x : A) : (term1775 A B P P2 G2 H2 _114084 s P1 G1 H1 f x) = (term908 A B P1 G1 H1 f x).
Proof. exact (@lem8368527 B (term1596 A B P P2 G2 H2 f _114084 s x) (term908 A B P1 G1 H1 f x)). Qed.
Lemma lem8368529 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (_114084 : type794 A P) (P1 : type551 A B) (G1 : type548 A B) (H1 : type549 A B) (f : A -> B) (s : P -> A) (x : A) (h1 : (term1773 A P s x) = False) : (term1598 A B P P2 G2 H2 _114084 s P1 G1 H1 f x) = (term908 A B P1 G1 H1 f x).
Proof. exact (TRANS (@lem8368524 A B P P2 G2 H2 _114084 P1 G1 H1 f s x h1) (@lem8368528 A B P P2 G2 H2 _114084 s P1 G1 H1 f x)). Qed.
Lemma lem8368530 {B : Type'} : (@eq B) = (@eq B).
Proof. exact (eq_refl (@eq B)). Qed.
Lemma lem8368531 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (_114084 : type794 A P) (P1 : type551 A B) (G1 : type548 A B) (H1 : type549 A B) (f : A -> B) (s : P -> A) (x : A) (h1 : (term1773 A P s x) = False) : (term1599 A B P P2 G2 H2 _114084 s P1 G1 H1 f x) = (term1776 A B P1 G1 H1 f x).
Proof. exact (MK_COMB (@lem8368530 B) (@lem8368529 A B P P2 G2 H2 _114084 P1 G1 H1 f s x h1)). Qed.
Lemma lem8368535 {A P : Type'} (s : P -> A) (x : A) (h1 : (term1773 A P s x) = False) : (term1773 A P s x) = False.
Proof. exact (h1). Qed.
Lemma lem8368536 {A P : Type'} (s : P -> A) (x : A) (h1 : (term1773 A P s x) = False) : (term1773 A P s x) = False.
Proof. exact (@lem8368535 A P s x h1). Qed.
Lemma lem8368537 : (@COND Prop) = (@COND Prop).
Proof. exact (eq_refl (@COND Prop)). Qed.
Lemma lem8368538 {A P : Type'} (s : P -> A) (x : A) (h1 : (term1773 A P s x) = False) : (term1496 A P s x) = (@COND Prop False).
Proof. exact (MK_COMB (@lem8368537) (@lem8368536 A P s x h1)). Qed.
Lemma lem8368539 {A B P : Type'} (P2 : type560 A B P) (f : A -> B) (_114084 : type794 A P) (s : P -> A) (x : A) : (term1495 A B P P2 f _114084 s x) = (term1495 A B P P2 f _114084 s x).
Proof. exact (eq_refl (term1495 A B P P2 f _114084 s x)). Qed.
Lemma lem8368540 {A B P : Type'} (P2 : type560 A B P) (f : A -> B) (_114084 : type794 A P) (s : P -> A) (x : A) (h1 : (term1773 A P s x) = False) : (term1498 A B P P2 f _114084 s x) = (term1777 A B P P2 f _114084 s x).
Proof. exact (MK_COMB (@lem8368538 A P s x h1) (@lem8368539 A B P P2 f _114084 s x)). Qed.
Lemma lem8368541 {A B : Type'} (P1 : type551 A B) (f : A -> B) (x : A) : (P1 f x) = (P1 f x).
Proof. exact (eq_refl (P1 f x)). Qed.
Lemma lem8368542 {A B P : Type'} (P2 : type560 A B P) (_114084 : type794 A P) (P1 : type551 A B) (f : A -> B) (s : P -> A) (x : A) (h1 : (term1773 A P s x) = False) : (term1500 A B P P2 _114084 s P1 f x) = (term1778 A B P P2 _114084 s P1 f x).
Proof. exact (MK_COMB (@lem8368540 A B P P2 f _114084 s x h1) (@lem8368541 A B P1 f x)). Qed.
Lemma lem8368544 {A : Type'} (t1 : A) (t2 : A) : (@COND A False t1 t2) = t2.
Proof. exact (proj2 (@lem12653 A t1 t2)). Qed.
Lemma lem8368545 (t1 : Prop) (t2 : Prop) : (@COND Prop False t1 t2) = t2.
Proof. exact (@lem8368544 Prop t1 t2). Qed.
Lemma lem8368546 {A B P : Type'} (P2 : type560 A B P) (_114084 : type794 A P) (s : P -> A) (P1 : type551 A B) (f : A -> B) (x : A) : (term1778 A B P P2 _114084 s P1 f x) = (P1 f x).
Proof. exact (@lem8368545 (term1495 A B P P2 f _114084 s x) (P1 f x)). Qed.
Lemma lem8368547 {A B P : Type'} (P2 : type560 A B P) (_114084 : type794 A P) (P1 : type551 A B) (f : A -> B) (s : P -> A) (x : A) (h1 : (term1773 A P s x) = False) : (term1500 A B P P2 _114084 s P1 f x) = (P1 f x).
Proof. exact (TRANS (@lem8368542 A B P P2 _114084 P1 f s x h1) (@lem8368546 A B P P2 _114084 s P1 f x)). Qed.
Lemma lem8368548 {B : Type'} : (@COND B) = (@COND B).
Proof. exact (eq_refl (@COND B)). Qed.
Lemma lem8368549 {A B P : Type'} (P2 : type560 A B P) (_114084 : type794 A P) (P1 : type551 A B) (f : A -> B) (s : P -> A) (x : A) (h1 : (term1773 A P s x) = False) : (term1734 A B P P2 _114084 s P1 f x) = (term1779 A B P1 f x).
Proof. exact (MK_COMB (@lem8368548 B) (@lem8368547 A B P P2 _114084 P1 f s x h1)). Qed.
Lemma lem8368553 {A P : Type'} (s : P -> A) (x : A) (h1 : (term1773 A P s x) = False) : (term1773 A P s x) = False.
Proof. exact (h1). Qed.
Lemma lem8368554 {A P : Type'} (s : P -> A) (x : A) (h1 : (term1773 A P s x) = False) : (term1773 A P s x) = False.
Proof. exact (@lem8368553 A P s x h1). Qed.
Lemma lem8368555 {A : Type'} : (@COND A) = (@COND A).
Proof. exact (eq_refl (@COND A)). Qed.
Lemma lem8368556 {A P : Type'} (s : P -> A) (x : A) (h1 : (term1773 A P s x) = False) : (term1515 A P s x) = (@COND A False).
Proof. exact (MK_COMB (@lem8368555 A) (@lem8368554 A P s x h1)). Qed.
Lemma lem8368557 {A B P : Type'} (G2 : type557 A B P) (f : A -> B) (_114084 : type794 A P) (s : P -> A) (x : A) : (term1514 A B P G2 f _114084 s x) = (term1514 A B P G2 f _114084 s x).
Proof. exact (eq_refl (term1514 A B P G2 f _114084 s x)). Qed.
Lemma lem8368558 {A B P : Type'} (G2 : type557 A B P) (f : A -> B) (_114084 : type794 A P) (s : P -> A) (x : A) (h1 : (term1773 A P s x) = False) : (term1517 A B P G2 f _114084 s x) = (term1780 A B P G2 f _114084 s x).
Proof. exact (MK_COMB (@lem8368556 A P s x h1) (@lem8368557 A B P G2 f _114084 s x)). Qed.
Lemma lem8368559 {A B : Type'} (G1 : type548 A B) (f : A -> B) (x : A) : (G1 f x) = (G1 f x).
Proof. exact (eq_refl (G1 f x)). Qed.
Lemma lem8368560 {A B P : Type'} (G2 : type557 A B P) (_114084 : type794 A P) (G1 : type548 A B) (f : A -> B) (s : P -> A) (x : A) (h1 : (term1773 A P s x) = False) : (term1519 A B P G2 _114084 s G1 f x) = (term1781 A B P G2 _114084 s G1 f x).
Proof. exact (MK_COMB (@lem8368558 A B P G2 f _114084 s x h1) (@lem8368559 A B G1 f x)). Qed.
Lemma lem8368562 {A : Type'} (t1 : A) (t2 : A) : (@COND A False t1 t2) = t2.
Proof. exact (proj2 (@lem12653 A t1 t2)). Qed.
Lemma lem8368563 {A : Type'} (t1 : A) (t2 : A) : (@COND A False t1 t2) = t2.
Proof. exact (@lem8368562 A t1 t2). Qed.
Lemma lem8368564 {A B P : Type'} (G2 : type557 A B P) (_114084 : type794 A P) (s : P -> A) (G1 : type548 A B) (f : A -> B) (x : A) : (term1781 A B P G2 _114084 s G1 f x) = (G1 f x).
Proof. exact (@lem8368563 A (term1514 A B P G2 f _114084 s x) (G1 f x)). Qed.
Lemma lem8368565 {A B P : Type'} (G2 : type557 A B P) (_114084 : type794 A P) (G1 : type548 A B) (f : A -> B) (s : P -> A) (x : A) (h1 : (term1773 A P s x) = False) : (term1519 A B P G2 _114084 s G1 f x) = (G1 f x).
Proof. exact (TRANS (@lem8368560 A B P G2 _114084 G1 f s x h1) (@lem8368564 A B P G2 _114084 s G1 f x)). Qed.
Lemma lem8368566 {A B : Type'} (f : A -> B) : f = f.
Proof. exact (eq_refl f). Qed.
Lemma lem8368567 {A B P : Type'} (G2 : type557 A B P) (_114084 : type794 A P) (G1 : type548 A B) (f : A -> B) (s : P -> A) (x : A) (h1 : (term1773 A P s x) = False) : (term1735 A B P G2 _114084 s G1 f x) = (term1782 A B G1 f x).
Proof. exact (MK_COMB (@lem8368566 A B f) (@lem8368565 A B P G2 _114084 G1 f s x h1)). Qed.
Lemma lem8368568 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (_114084 : type794 A P) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (s : P -> A) (x : A) (h1 : (term1773 A P s x) = False) : (term1736 A B P P2 P1 G2 _114084 s G1 f x) = (term1783 A B P1 G1 f x).
Proof. exact (MK_COMB (@lem8368549 A B P P2 _114084 P1 f s x h1) (@lem8368567 A B P G2 _114084 G1 f s x h1)). Qed.
Lemma lem8368572 {A P : Type'} (s : P -> A) (x : A) (h1 : (term1773 A P s x) = False) : (term1773 A P s x) = False.
Proof. exact (h1). Qed.
Lemma lem8368573 {A P : Type'} (s : P -> A) (x : A) (h1 : (term1773 A P s x) = False) : (term1773 A P s x) = False.
Proof. exact (@lem8368572 A P s x h1). Qed.
Lemma lem8368574 {B : Type'} : (@COND B) = (@COND B).
Proof. exact (eq_refl (@COND B)). Qed.
Lemma lem8368575 {A B P : Type'} (s : P -> A) (x : A) (h1 : (term1773 A P s x) = False) : (term1432 A B P s x) = (@COND B False).
Proof. exact (MK_COMB (@lem8368574 B) (@lem8368573 A P s x h1)). Qed.
Lemma lem8368576 {A B P : Type'} (H2 : type558 A B P) (f : A -> B) (_114084 : type794 A P) (s : P -> A) (x : A) : (term1532 A B P H2 f _114084 s x) = (term1532 A B P H2 f _114084 s x).
Proof. exact (eq_refl (term1532 A B P H2 f _114084 s x)). Qed.
Lemma lem8368577 {A B P : Type'} (H2 : type558 A B P) (f : A -> B) (_114084 : type794 A P) (s : P -> A) (x : A) (h1 : (term1773 A P s x) = False) : (term1533 A B P H2 f _114084 s x) = (term1784 A B P H2 f _114084 s x).
Proof. exact (MK_COMB (@lem8368575 A B P s x h1) (@lem8368576 A B P H2 f _114084 s x)). Qed.
Lemma lem8368578 {A B : Type'} (H1 : type549 A B) (f : A -> B) (x : A) : (H1 f x) = (H1 f x).
Proof. exact (eq_refl (H1 f x)). Qed.
Lemma lem8368579 {A B P : Type'} (H2 : type558 A B P) (_114084 : type794 A P) (H1 : type549 A B) (f : A -> B) (s : P -> A) (x : A) (h1 : (term1773 A P s x) = False) : (term1535 A B P H2 _114084 s H1 f x) = (term1785 A B P H2 _114084 s H1 f x).
Proof. exact (MK_COMB (@lem8368577 A B P H2 f _114084 s x h1) (@lem8368578 A B H1 f x)). Qed.
Lemma lem8368581 {A : Type'} (t1 : A) (t2 : A) : (@COND A False t1 t2) = t2.
Proof. exact (proj2 (@lem12653 A t1 t2)). Qed.
Lemma lem8368582 {B : Type'} (t1 : B) (t2 : B) : (@COND B False t1 t2) = t2.
Proof. exact (@lem8368581 B t1 t2). Qed.
Lemma lem8368583 {A B P : Type'} (H2 : type558 A B P) (_114084 : type794 A P) (s : P -> A) (H1 : type549 A B) (f : A -> B) (x : A) : (term1785 A B P H2 _114084 s H1 f x) = (H1 f x).
Proof. exact (@lem8368582 B (term1532 A B P H2 f _114084 s x) (H1 f x)). Qed.
Lemma lem8368584 {A B P : Type'} (H2 : type558 A B P) (_114084 : type794 A P) (H1 : type549 A B) (f : A -> B) (s : P -> A) (x : A) (h1 : (term1773 A P s x) = False) : (term1535 A B P H2 _114084 s H1 f x) = (H1 f x).
Proof. exact (TRANS (@lem8368579 A B P H2 _114084 H1 f s x h1) (@lem8368583 A B P H2 _114084 s H1 f x)). Qed.
Lemma lem8368585 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (_114084 : type794 A P) (P1 : type551 A B) (G1 : type548 A B) (H1 : type549 A B) (f : A -> B) (s : P -> A) (x : A) (h1 : (term1773 A P s x) = False) : (term1737 A B P P2 P1 G2 G1 H2 _114084 s H1 f x) = (term908 A B P1 G1 H1 f x).
Proof. exact (MK_COMB (@lem8368568 A B P P2 G2 _114084 P1 G1 f s x h1) (@lem8368584 A B P H2 _114084 H1 f s x h1)). Qed.
Lemma lem8368586 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (_114084 : type794 A P) (P1 : type551 A B) (G1 : type548 A B) (H1 : type549 A B) (f : A -> B) (s : P -> A) (x : A) (h1 : (term1773 A P s x) = False) : ((term1598 A B P P2 G2 H2 _114084 s P1 G1 H1 f x) = (term1737 A B P P2 P1 G2 G1 H2 _114084 s H1 f x)) = ((term908 A B P1 G1 H1 f x) = (term908 A B P1 G1 H1 f x)).
Proof. exact (MK_COMB (@lem8368531 A B P P2 G2 H2 _114084 P1 G1 H1 f s x h1) (@lem8368585 A B P P2 G2 H2 _114084 P1 G1 H1 f s x h1)). Qed.
Lemma lem8368588 {A : Type'} (x : A) : (x = x) = True.
Proof. exact (EQ_MP (@lem1863 A x) (@lem1862 A x)). Qed.
Lemma lem8368589 {B : Type'} (x : B) : (x = x) = True.
Proof. exact (@lem8368588 B x). Qed.
Lemma lem8368590 {A B : Type'} (P1 : type551 A B) (G1 : type548 A B) (H1 : type549 A B) (f : A -> B) (x : A) : ((term908 A B P1 G1 H1 f x) = (term908 A B P1 G1 H1 f x)) = True.
Proof. exact (@lem8368589 B (term908 A B P1 G1 H1 f x)). Qed.
Lemma lem8368591 {A B P : Type'} (P2 : type560 A B P) (P1 : type551 A B) (G2 : type557 A B P) (G1 : type548 A B) (H2 : type558 A B P) (_114084 : type794 A P) (H1 : type549 A B) (f : A -> B) (s : P -> A) (x : A) (h1 : (term1773 A P s x) = False) : ((term1598 A B P P2 G2 H2 _114084 s P1 G1 H1 f x) = (term1737 A B P P2 P1 G2 G1 H2 _114084 s H1 f x)) = True.
Proof. exact (TRANS (@lem8368586 A B P P2 G2 H2 _114084 P1 G1 H1 f s x h1) (@lem8368590 A B P1 G1 H1 f x)). Qed.
Lemma lem8368592 {A B P : Type'} (P2 : type560 A B P) (P1 : type551 A B) (G2 : type557 A B P) (G1 : type548 A B) (H2 : type558 A B P) (_114084 : type794 A P) (s : P -> A) (H1 : type549 A B) (f : A -> B) (x : A) : term1786 A B P P2 P1 G2 G1 H2 _114084 s H1 f x.
Proof. exact (fun h0 : (term1773 A P s x) = False => @lem8368591 A B P P2 P1 G2 G1 H2 _114084 H1 f s x h0). Qed.
Lemma lem8368596 {A P : Type'} (s : P -> A) (x : A) (h1 : (term1773 A P s x) = True) : (term1773 A P s x) = True.
Proof. exact (h1). Qed.
Lemma lem8368597 {A P : Type'} (s : P -> A) (x : A) (h1 : (term1773 A P s x) = True) : (term1773 A P s x) = True.
Proof. exact (@lem8368596 A P s x h1). Qed.
Lemma lem8368598 {B : Type'} : (@COND B) = (@COND B).
Proof. exact (eq_refl (@COND B)). Qed.
Lemma lem8368599 {A B P : Type'} (s : P -> A) (x : A) (h1 : (term1773 A P s x) = True) : (term1432 A B P s x) = (@COND B True).
Proof. exact (MK_COMB (@lem8368598 B) (@lem8368597 A P s x h1)). Qed.
Lemma lem8368600 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (f : A -> B) (_114084 : type794 A P) (s : P -> A) (x : A) : (term1596 A B P P2 G2 H2 f _114084 s x) = (term1596 A B P P2 G2 H2 f _114084 s x).
Proof. exact (eq_refl (term1596 A B P P2 G2 H2 f _114084 s x)). Qed.
Lemma lem8368601 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (f : A -> B) (_114084 : type794 A P) (s : P -> A) (x : A) (h1 : (term1773 A P s x) = True) : (term1597 A B P P2 G2 H2 f _114084 s x) = (term1787 A B P P2 G2 H2 f _114084 s x).
Proof. exact (MK_COMB (@lem8368599 A B P s x h1) (@lem8368600 A B P P2 G2 H2 f _114084 s x)). Qed.
Lemma lem8368602 {A B : Type'} (P1 : type551 A B) (G1 : type548 A B) (H1 : type549 A B) (f : A -> B) (x : A) : (term908 A B P1 G1 H1 f x) = (term908 A B P1 G1 H1 f x).
Proof. exact (eq_refl (term908 A B P1 G1 H1 f x)). Qed.
Lemma lem8368603 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (_114084 : type794 A P) (P1 : type551 A B) (G1 : type548 A B) (H1 : type549 A B) (f : A -> B) (s : P -> A) (x : A) (h1 : (term1773 A P s x) = True) : (term1598 A B P P2 G2 H2 _114084 s P1 G1 H1 f x) = (term1788 A B P P2 G2 H2 _114084 s P1 G1 H1 f x).
Proof. exact (MK_COMB (@lem8368601 A B P P2 G2 H2 f _114084 s x h1) (@lem8368602 A B P1 G1 H1 f x)). Qed.
Lemma lem8368605 {A : Type'} (t2 : A) (t1 : A) : (@COND A True t1 t2) = t1.
Proof. exact (proj1 (@lem12653 A t1 t2)). Qed.
Lemma lem8368606 {B : Type'} (t2 : B) (t1 : B) : (@COND B True t1 t2) = t1.
Proof. exact (@lem8368605 B t2 t1). Qed.
Lemma lem8368607 {A B P : Type'} (P1 : type551 A B) (G1 : type548 A B) (H1 : type549 A B) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (f : A -> B) (_114084 : type794 A P) (s : P -> A) (x : A) : (term1788 A B P P2 G2 H2 _114084 s P1 G1 H1 f x) = (term1596 A B P P2 G2 H2 f _114084 s x).
Proof. exact (@lem8368606 B (term908 A B P1 G1 H1 f x) (term1596 A B P P2 G2 H2 f _114084 s x)). Qed.
Lemma lem8368608 {A B P : Type'} (P1 : type551 A B) (G1 : type548 A B) (H1 : type549 A B) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (f : A -> B) (_114084 : type794 A P) (s : P -> A) (x : A) (h1 : (term1773 A P s x) = True) : (term1598 A B P P2 G2 H2 _114084 s P1 G1 H1 f x) = (term1596 A B P P2 G2 H2 f _114084 s x).
Proof. exact (TRANS (@lem8368603 A B P P2 G2 H2 _114084 P1 G1 H1 f s x h1) (@lem8368607 A B P P1 G1 H1 P2 G2 H2 f _114084 s x)). Qed.
Lemma lem8368609 {B : Type'} : (@eq B) = (@eq B).
Proof. exact (eq_refl (@eq B)). Qed.
Lemma lem8368610 {A B P : Type'} (P1 : type551 A B) (G1 : type548 A B) (H1 : type549 A B) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (f : A -> B) (_114084 : type794 A P) (s : P -> A) (x : A) (h1 : (term1773 A P s x) = True) : (term1599 A B P P2 G2 H2 _114084 s P1 G1 H1 f x) = (term1789 A B P P2 G2 H2 f _114084 s x).
Proof. exact (MK_COMB (@lem8368609 B) (@lem8368608 A B P P1 G1 H1 P2 G2 H2 f _114084 s x h1)). Qed.
Lemma lem8368614 {A P : Type'} (s : P -> A) (x : A) (h1 : (term1773 A P s x) = True) : (term1773 A P s x) = True.
Proof. exact (h1). Qed.
Lemma lem8368615 {A P : Type'} (s : P -> A) (x : A) (h1 : (term1773 A P s x) = True) : (term1773 A P s x) = True.
Proof. exact (@lem8368614 A P s x h1). Qed.
Lemma lem8368616 : (@COND Prop) = (@COND Prop).
Proof. exact (eq_refl (@COND Prop)). Qed.
Lemma lem8368617 {A P : Type'} (s : P -> A) (x : A) (h1 : (term1773 A P s x) = True) : (term1496 A P s x) = (@COND Prop True).
Proof. exact (MK_COMB (@lem8368616) (@lem8368615 A P s x h1)). Qed.
Lemma lem8368618 {A B P : Type'} (P2 : type560 A B P) (f : A -> B) (_114084 : type794 A P) (s : P -> A) (x : A) : (term1495 A B P P2 f _114084 s x) = (term1495 A B P P2 f _114084 s x).
Proof. exact (eq_refl (term1495 A B P P2 f _114084 s x)). Qed.
Lemma lem8368619 {A B P : Type'} (P2 : type560 A B P) (f : A -> B) (_114084 : type794 A P) (s : P -> A) (x : A) (h1 : (term1773 A P s x) = True) : (term1498 A B P P2 f _114084 s x) = (term1790 A B P P2 f _114084 s x).
Proof. exact (MK_COMB (@lem8368617 A P s x h1) (@lem8368618 A B P P2 f _114084 s x)). Qed.
Lemma lem8368620 {A B : Type'} (P1 : type551 A B) (f : A -> B) (x : A) : (P1 f x) = (P1 f x).
Proof. exact (eq_refl (P1 f x)). Qed.
Lemma lem8368621 {A B P : Type'} (P2 : type560 A B P) (_114084 : type794 A P) (P1 : type551 A B) (f : A -> B) (s : P -> A) (x : A) (h1 : (term1773 A P s x) = True) : (term1500 A B P P2 _114084 s P1 f x) = (term1791 A B P P2 _114084 s P1 f x).
Proof. exact (MK_COMB (@lem8368619 A B P P2 f _114084 s x h1) (@lem8368620 A B P1 f x)). Qed.
Lemma lem8368623 {A : Type'} (t2 : A) (t1 : A) : (@COND A True t1 t2) = t1.
Proof. exact (proj1 (@lem12653 A t1 t2)). Qed.
Lemma lem8368624 (t2 : Prop) (t1 : Prop) : (@COND Prop True t1 t2) = t1.
Proof. exact (@lem8368623 Prop t2 t1). Qed.
Lemma lem8368625 {A B P : Type'} (P1 : type551 A B) (P2 : type560 A B P) (f : A -> B) (_114084 : type794 A P) (s : P -> A) (x : A) : (term1791 A B P P2 _114084 s P1 f x) = (term1495 A B P P2 f _114084 s x).
Proof. exact (@lem8368624 (P1 f x) (term1495 A B P P2 f _114084 s x)). Qed.
Lemma lem8368626 {A B P : Type'} (P1 : type551 A B) (P2 : type560 A B P) (f : A -> B) (_114084 : type794 A P) (s : P -> A) (x : A) (h1 : (term1773 A P s x) = True) : (term1500 A B P P2 _114084 s P1 f x) = (term1495 A B P P2 f _114084 s x).
Proof. exact (TRANS (@lem8368621 A B P P2 _114084 P1 f s x h1) (@lem8368625 A B P P1 P2 f _114084 s x)). Qed.
Lemma lem8368627 {B : Type'} : (@COND B) = (@COND B).
Proof. exact (eq_refl (@COND B)). Qed.
Lemma lem8368628 {A B P : Type'} (P1 : type551 A B) (P2 : type560 A B P) (f : A -> B) (_114084 : type794 A P) (s : P -> A) (x : A) (h1 : (term1773 A P s x) = True) : (term1734 A B P P2 _114084 s P1 f x) = (term1591 A B P P2 f _114084 s x).
Proof. exact (MK_COMB (@lem8368627 B) (@lem8368626 A B P P1 P2 f _114084 s x h1)). Qed.
Lemma lem8368632 {A P : Type'} (s : P -> A) (x : A) (h1 : (term1773 A P s x) = True) : (term1773 A P s x) = True.
Proof. exact (h1). Qed.
Lemma lem8368633 {A P : Type'} (s : P -> A) (x : A) (h1 : (term1773 A P s x) = True) : (term1773 A P s x) = True.
Proof. exact (@lem8368632 A P s x h1). Qed.
Lemma lem8368634 {A : Type'} : (@COND A) = (@COND A).
Proof. exact (eq_refl (@COND A)). Qed.
Lemma lem8368635 {A P : Type'} (s : P -> A) (x : A) (h1 : (term1773 A P s x) = True) : (term1515 A P s x) = (@COND A True).
Proof. exact (MK_COMB (@lem8368634 A) (@lem8368633 A P s x h1)). Qed.
Lemma lem8368636 {A B P : Type'} (G2 : type557 A B P) (f : A -> B) (_114084 : type794 A P) (s : P -> A) (x : A) : (term1514 A B P G2 f _114084 s x) = (term1514 A B P G2 f _114084 s x).
Proof. exact (eq_refl (term1514 A B P G2 f _114084 s x)). Qed.
Lemma lem8368637 {A B P : Type'} (G2 : type557 A B P) (f : A -> B) (_114084 : type794 A P) (s : P -> A) (x : A) (h1 : (term1773 A P s x) = True) : (term1517 A B P G2 f _114084 s x) = (term1792 A B P G2 f _114084 s x).
Proof. exact (MK_COMB (@lem8368635 A P s x h1) (@lem8368636 A B P G2 f _114084 s x)). Qed.
Lemma lem8368638 {A B : Type'} (G1 : type548 A B) (f : A -> B) (x : A) : (G1 f x) = (G1 f x).
Proof. exact (eq_refl (G1 f x)). Qed.
Lemma lem8368639 {A B P : Type'} (G2 : type557 A B P) (_114084 : type794 A P) (G1 : type548 A B) (f : A -> B) (s : P -> A) (x : A) (h1 : (term1773 A P s x) = True) : (term1519 A B P G2 _114084 s G1 f x) = (term1793 A B P G2 _114084 s G1 f x).
Proof. exact (MK_COMB (@lem8368637 A B P G2 f _114084 s x h1) (@lem8368638 A B G1 f x)). Qed.
Lemma lem8368641 {A : Type'} (t2 : A) (t1 : A) : (@COND A True t1 t2) = t1.
Proof. exact (proj1 (@lem12653 A t1 t2)). Qed.
Lemma lem8368642 {A : Type'} (t2 : A) (t1 : A) : (@COND A True t1 t2) = t1.
Proof. exact (@lem8368641 A t2 t1). Qed.
Lemma lem8368643 {A B P : Type'} (G1 : type548 A B) (G2 : type557 A B P) (f : A -> B) (_114084 : type794 A P) (s : P -> A) (x : A) : (term1793 A B P G2 _114084 s G1 f x) = (term1514 A B P G2 f _114084 s x).
Proof. exact (@lem8368642 A (G1 f x) (term1514 A B P G2 f _114084 s x)). Qed.
Lemma lem8368644 {A B P : Type'} (G1 : type548 A B) (G2 : type557 A B P) (f : A -> B) (_114084 : type794 A P) (s : P -> A) (x : A) (h1 : (term1773 A P s x) = True) : (term1519 A B P G2 _114084 s G1 f x) = (term1514 A B P G2 f _114084 s x).
Proof. exact (TRANS (@lem8368639 A B P G2 _114084 G1 f s x h1) (@lem8368643 A B P G1 G2 f _114084 s x)). Qed.
Lemma lem8368645 {A B : Type'} (f : A -> B) : f = f.
Proof. exact (eq_refl f). Qed.
Lemma lem8368646 {A B P : Type'} (G1 : type548 A B) (G2 : type557 A B P) (f : A -> B) (_114084 : type794 A P) (s : P -> A) (x : A) (h1 : (term1773 A P s x) = True) : (term1735 A B P G2 _114084 s G1 f x) = (term1593 A B P G2 f _114084 s x).
Proof. exact (MK_COMB (@lem8368645 A B f) (@lem8368644 A B P G1 G2 f _114084 s x h1)). Qed.
Lemma lem8368647 {A B P : Type'} (P1 : type551 A B) (G1 : type548 A B) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (_114084 : type794 A P) (s : P -> A) (x : A) (h1 : (term1773 A P s x) = True) : (term1736 A B P P2 P1 G2 _114084 s G1 f x) = (term1595 A B P P2 G2 f _114084 s x).
Proof. exact (MK_COMB (@lem8368628 A B P P1 P2 f _114084 s x h1) (@lem8368646 A B P G1 G2 f _114084 s x h1)). Qed.
Lemma lem8368651 {A P : Type'} (s : P -> A) (x : A) (h1 : (term1773 A P s x) = True) : (term1773 A P s x) = True.
Proof. exact (h1). Qed.
Lemma lem8368652 {A P : Type'} (s : P -> A) (x : A) (h1 : (term1773 A P s x) = True) : (term1773 A P s x) = True.
Proof. exact (@lem8368651 A P s x h1). Qed.
Lemma lem8368653 {B : Type'} : (@COND B) = (@COND B).
Proof. exact (eq_refl (@COND B)). Qed.
Lemma lem8368654 {A B P : Type'} (s : P -> A) (x : A) (h1 : (term1773 A P s x) = True) : (term1432 A B P s x) = (@COND B True).
Proof. exact (MK_COMB (@lem8368653 B) (@lem8368652 A P s x h1)). Qed.
Lemma lem8368655 {A B P : Type'} (H2 : type558 A B P) (f : A -> B) (_114084 : type794 A P) (s : P -> A) (x : A) : (term1532 A B P H2 f _114084 s x) = (term1532 A B P H2 f _114084 s x).
Proof. exact (eq_refl (term1532 A B P H2 f _114084 s x)). Qed.
Lemma lem8368656 {A B P : Type'} (H2 : type558 A B P) (f : A -> B) (_114084 : type794 A P) (s : P -> A) (x : A) (h1 : (term1773 A P s x) = True) : (term1533 A B P H2 f _114084 s x) = (term1794 A B P H2 f _114084 s x).
Proof. exact (MK_COMB (@lem8368654 A B P s x h1) (@lem8368655 A B P H2 f _114084 s x)). Qed.
Lemma lem8368657 {A B : Type'} (H1 : type549 A B) (f : A -> B) (x : A) : (H1 f x) = (H1 f x).
Proof. exact (eq_refl (H1 f x)). Qed.
Lemma lem8368658 {A B P : Type'} (H2 : type558 A B P) (_114084 : type794 A P) (H1 : type549 A B) (f : A -> B) (s : P -> A) (x : A) (h1 : (term1773 A P s x) = True) : (term1535 A B P H2 _114084 s H1 f x) = (term1795 A B P H2 _114084 s H1 f x).
Proof. exact (MK_COMB (@lem8368656 A B P H2 f _114084 s x h1) (@lem8368657 A B H1 f x)). Qed.
Lemma lem8368660 {A : Type'} (t2 : A) (t1 : A) : (@COND A True t1 t2) = t1.
Proof. exact (proj1 (@lem12653 A t1 t2)). Qed.
Lemma lem8368661 {B : Type'} (t2 : B) (t1 : B) : (@COND B True t1 t2) = t1.
Proof. exact (@lem8368660 B t2 t1). Qed.
Lemma lem8368662 {A B P : Type'} (H1 : type549 A B) (H2 : type558 A B P) (f : A -> B) (_114084 : type794 A P) (s : P -> A) (x : A) : (term1795 A B P H2 _114084 s H1 f x) = (term1532 A B P H2 f _114084 s x).
Proof. exact (@lem8368661 B (H1 f x) (term1532 A B P H2 f _114084 s x)). Qed.
Lemma lem8368663 {A B P : Type'} (H1 : type549 A B) (H2 : type558 A B P) (f : A -> B) (_114084 : type794 A P) (s : P -> A) (x : A) (h1 : (term1773 A P s x) = True) : (term1535 A B P H2 _114084 s H1 f x) = (term1532 A B P H2 f _114084 s x).
Proof. exact (TRANS (@lem8368658 A B P H2 _114084 H1 f s x h1) (@lem8368662 A B P H1 H2 f _114084 s x)). Qed.
Lemma lem8368664 {A B P : Type'} (P1 : type551 A B) (G1 : type548 A B) (H1 : type549 A B) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (f : A -> B) (_114084 : type794 A P) (s : P -> A) (x : A) (h1 : (term1773 A P s x) = True) : (term1737 A B P P2 P1 G2 G1 H2 _114084 s H1 f x) = (term1596 A B P P2 G2 H2 f _114084 s x).
Proof. exact (MK_COMB (@lem8368647 A B P P1 G1 P2 G2 f _114084 s x h1) (@lem8368663 A B P H1 H2 f _114084 s x h1)). Qed.
Lemma lem8368665 {A B P : Type'} (P1 : type551 A B) (G1 : type548 A B) (H1 : type549 A B) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (f : A -> B) (_114084 : type794 A P) (s : P -> A) (x : A) (h1 : (term1773 A P s x) = True) : ((term1598 A B P P2 G2 H2 _114084 s P1 G1 H1 f x) = (term1737 A B P P2 P1 G2 G1 H2 _114084 s H1 f x)) = ((term1596 A B P P2 G2 H2 f _114084 s x) = (term1596 A B P P2 G2 H2 f _114084 s x)).
Proof. exact (MK_COMB (@lem8368610 A B P P1 G1 H1 P2 G2 H2 f _114084 s x h1) (@lem8368664 A B P P1 G1 H1 P2 G2 H2 f _114084 s x h1)). Qed.
Lemma lem8368667 {A : Type'} (x : A) : (x = x) = True.
Proof. exact (EQ_MP (@lem1863 A x) (@lem1862 A x)). Qed.
Lemma lem8368668 {B : Type'} (x : B) : (x = x) = True.
Proof. exact (@lem8368667 B x). Qed.
Lemma lem8368669 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (f : A -> B) (_114084 : type794 A P) (s : P -> A) (x : A) : ((term1596 A B P P2 G2 H2 f _114084 s x) = (term1596 A B P P2 G2 H2 f _114084 s x)) = True.
Proof. exact (@lem8368668 B (term1596 A B P P2 G2 H2 f _114084 s x)). Qed.
Lemma lem8368670 {A B P : Type'} (P2 : type560 A B P) (P1 : type551 A B) (G2 : type557 A B P) (G1 : type548 A B) (H2 : type558 A B P) (_114084 : type794 A P) (H1 : type549 A B) (f : A -> B) (s : P -> A) (x : A) (h1 : (term1773 A P s x) = True) : ((term1598 A B P P2 G2 H2 _114084 s P1 G1 H1 f x) = (term1737 A B P P2 P1 G2 G1 H2 _114084 s H1 f x)) = True.
Proof. exact (TRANS (@lem8368665 A B P P1 G1 H1 P2 G2 H2 f _114084 s x h1) (@lem8368669 A B P P2 G2 H2 f _114084 s x)). Qed.
Lemma lem8368671 {A B P : Type'} (P2 : type560 A B P) (P1 : type551 A B) (G2 : type557 A B P) (G1 : type548 A B) (H2 : type558 A B P) (_114084 : type794 A P) (s : P -> A) (H1 : type549 A B) (f : A -> B) (x : A) : term1796 A B P P2 P1 G2 G1 H2 _114084 s H1 f x.
Proof. exact (fun h0 : (term1773 A P s x) = True => @lem8368670 A B P P2 P1 G2 G1 H2 _114084 H1 f s x h0). Qed.
Lemma lem8368672 {A B P : Type'} (P2 : type560 A B P) (P1 : type551 A B) (G2 : type557 A B P) (G1 : type548 A B) (H2 : type558 A B P) (_114084 : type794 A P) (s : P -> A) (H1 : type549 A B) (f : A -> B) (x : A) : term1797 A B P P2 P1 G2 G1 H2 _114084 s H1 f x.
Proof. exact (conj (@lem8368592 A B P P2 P1 G2 G1 H2 _114084 s H1 f x) (@lem8368671 A B P P2 P1 G2 G1 H2 _114084 s H1 f x)). Qed.
Lemma lem8368674 (x : Prop) (x1 : Prop) (b : Prop) (x0 : Prop) : term119 x x1 b x0.
Proof. exact (or_elim (@lem20425 b) (fun h0 : b = True => @lem20612 x x1 x0 b h0) (fun h0 : b = False => @lem20611 x x1 x0 b h0)). Qed.
Lemma lem8368675 {A B P : Type'} (P2 : type560 A B P) (P1 : type551 A B) (G2 : type557 A B P) (G1 : type548 A B) (H2 : type558 A B P) (_114084 : type794 A P) (H1 : type549 A B) (f : A -> B) (s : P -> A) (x : A) : term1798 A B P P2 P1 G2 G1 H2 _114084 H1 f s x.
Proof. exact (@lem8368674 ((term1598 A B P P2 G2 H2 _114084 s P1 G1 H1 f x) = (term1737 A B P P2 P1 G2 G1 H2 _114084 s H1 f x)) True (term1773 A P s x) True). Qed.
Lemma lem8368676 {A B P : Type'} (P2 : type560 A B P) (P1 : type551 A B) (G2 : type557 A B P) (G1 : type548 A B) (H2 : type558 A B P) (_114084 : type794 A P) (H1 : type549 A B) (f : A -> B) (s : P -> A) (x : A) : ((term1598 A B P P2 G2 H2 _114084 s P1 G1 H1 f x) = (term1737 A B P P2 P1 G2 G1 H2 _114084 s H1 f x)) = (term1799 A P s x).
Proof. exact (@lem8368675 A B P P2 P1 G2 G1 H2 _114084 H1 f s x (@lem8368672 A B P P2 P1 G2 G1 H2 _114084 s H1 f x)). Qed.
Lemma lem8368678 (t : Prop) : (t \/ True) = True.
Proof. exact (proj1 (@lem1832 t)). Qed.
Lemma lem8368679 {A P : Type'} (s : P -> A) (x : A) : (term1800 A P s x) = True.
Proof. exact (@lem8368678 (term1773 A P s x)). Qed.
Lemma lem8368681 (t : Prop) : (t \/ True) = True.
Proof. exact (proj1 (@lem1832 t)). Qed.
Lemma lem8368682 {A P : Type'} (s : P -> A) (x : A) : (term1801 A P s x) = True.
Proof. exact (@lem8368681 (term1802 A P s x)). Qed.
Lemma lem8368683 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8368684 {A P : Type'} (s : P -> A) (x : A) : (term1803 A P s x) = (and True).
Proof. exact (MK_COMB (@lem8368683) (@lem8368682 A P s x)). Qed.
Lemma lem8368685 {A P : Type'} (s : P -> A) (x : A) : (term1799 A P s x) = (True /\ True).
Proof. exact (MK_COMB (@lem8368684 A P s x) (@lem8368679 A P s x)). Qed.
Lemma lem8368687 (t : Prop) : (True /\ t) = t.
Proof. exact (proj1 (@lem1842 t)). Qed.
Lemma lem8368688 : (True /\ True) = True.
Proof. exact (@lem8368687 True). Qed.
Lemma lem8368689 {A P : Type'} (s : P -> A) (x : A) : (term1799 A P s x) = True.
Proof. exact (TRANS (@lem8368685 A P s x) (@lem8368688)). Qed.
Lemma lem8368694 {A B P : Type'} (P2 : type560 A B P) (P1 : type551 A B) (G2 : type557 A B P) (G1 : type548 A B) (H2 : type558 A B P) (_114084 : type794 A P) (s : P -> A) (H1 : type549 A B) (f : A -> B) (x : A) : ((term1598 A B P P2 G2 H2 _114084 s P1 G1 H1 f x) = (term1737 A B P P2 P1 G2 G1 H2 _114084 s H1 f x)) = True.
Proof. exact (TRANS (@lem8368676 A B P P2 P1 G2 G1 H2 _114084 H1 f s x) (@lem8368689 A P s x)). Qed.
Lemma lem8368695 {A B P : Type'} (P2 : type560 A B P) (P1 : type551 A B) (G2 : type557 A B P) (G1 : type548 A B) (H2 : type558 A B P) (_114084 : type794 A P) (s : P -> A) (H1 : type549 A B) (f : A -> B) : (term1738 A B P P2 P1 G2 G1 H2 _114084 s H1 f) = (term1195 A).
Proof. exact (fun_ext (fun x : A => @lem8368694 A B P P2 P1 G2 G1 H2 _114084 s H1 f x)). Qed.
Lemma lem8368696 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem8368697 {A B P : Type'} (P2 : type560 A B P) (P1 : type551 A B) (G2 : type557 A B P) (G1 : type548 A B) (H2 : type558 A B P) (_114084 : type794 A P) (s : P -> A) (H1 : type549 A B) (f : A -> B) : (term1739 A B P P2 P1 G2 G1 H2 _114084 s H1 f) = (term1197 A).
Proof. exact (MK_COMB (@lem8368696 A) (@lem8368695 A B P P2 P1 G2 G1 H2 _114084 s H1 f)). Qed.
Lemma lem8368698 {A B P : Type'} (P2 : type560 A B P) (P1 : type551 A B) (G2 : type557 A B P) (G1 : type548 A B) (H2 : type558 A B P) (_114084 : type794 A P) (s : P -> A) (H1 : type549 A B) : (term1740 A B P P2 P1 G2 G1 H2 _114084 s H1) = (term1804 A B).
Proof. exact (fun_ext (fun f : A -> B => @lem8368697 A B P P2 P1 G2 G1 H2 _114084 s H1 f)). Qed.
Lemma lem8368699 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem8368700 {A B P : Type'} (P2 : type560 A B P) (P1 : type551 A B) (G2 : type557 A B P) (G1 : type548 A B) (H2 : type558 A B P) (_114084 : type794 A P) (s : P -> A) (H1 : type549 A B) : (term1741 A B P P2 P1 G2 G1 H2 _114084 s H1) = (term1805 A B).
Proof. exact (MK_COMB (@lem8368699 A B) (@lem8368698 A B P P2 P1 G2 G1 H2 _114084 s H1)). Qed.
Lemma lem8368706 {A P : Type'} (s : P -> A) (x : A) (h1 : (term1773 A P s x) = False) : (term1773 A P s x) = False.
Proof. exact (h1). Qed.
Lemma lem8368707 {A P : Type'} (s : P -> A) (x : A) (h1 : (term1773 A P s x) = False) : (term1773 A P s x) = False.
Proof. exact (@lem8368706 A P s x h1). Qed.
Lemma lem8368708 : (@COND Prop) = (@COND Prop).
Proof. exact (eq_refl (@COND Prop)). Qed.
Lemma lem8368709 {A P : Type'} (s : P -> A) (x : A) (h1 : (term1773 A P s x) = False) : (term1496 A P s x) = (@COND Prop False).
Proof. exact (MK_COMB (@lem8368708) (@lem8368707 A P s x h1)). Qed.
Lemma lem8368710 {A B P : Type'} (P2 : type560 A B P) (f : A -> B) (_114084 : type794 A P) (s : P -> A) (x : A) : (term1495 A B P P2 f _114084 s x) = (term1495 A B P P2 f _114084 s x).
Proof. exact (eq_refl (term1495 A B P P2 f _114084 s x)). Qed.
Lemma lem8368711 {A B P : Type'} (P2 : type560 A B P) (f : A -> B) (_114084 : type794 A P) (s : P -> A) (x : A) (h1 : (term1773 A P s x) = False) : (term1498 A B P P2 f _114084 s x) = (term1777 A B P P2 f _114084 s x).
Proof. exact (MK_COMB (@lem8368709 A P s x h1) (@lem8368710 A B P P2 f _114084 s x)). Qed.
Lemma lem8368712 {A B : Type'} (P1 : type551 A B) (f : A -> B) (x : A) : (P1 f x) = (P1 f x).
Proof. exact (eq_refl (P1 f x)). Qed.
Lemma lem8368713 {A B P : Type'} (P2 : type560 A B P) (_114084 : type794 A P) (P1 : type551 A B) (f : A -> B) (s : P -> A) (x : A) (h1 : (term1773 A P s x) = False) : (term1500 A B P P2 _114084 s P1 f x) = (term1778 A B P P2 _114084 s P1 f x).
Proof. exact (MK_COMB (@lem8368711 A B P P2 f _114084 s x h1) (@lem8368712 A B P1 f x)). Qed.
Lemma lem8368715 {A : Type'} (t1 : A) (t2 : A) : (@COND A False t1 t2) = t2.
Proof. exact (proj2 (@lem12653 A t1 t2)). Qed.
Lemma lem8368716 (t1 : Prop) (t2 : Prop) : (@COND Prop False t1 t2) = t2.
Proof. exact (@lem8368715 Prop t1 t2). Qed.
Lemma lem8368717 {A B P : Type'} (P2 : type560 A B P) (_114084 : type794 A P) (s : P -> A) (P1 : type551 A B) (f : A -> B) (x : A) : (term1778 A B P P2 _114084 s P1 f x) = (P1 f x).
Proof. exact (@lem8368716 (term1495 A B P P2 f _114084 s x) (P1 f x)). Qed.
Lemma lem8368718 {A B P : Type'} (P2 : type560 A B P) (_114084 : type794 A P) (P1 : type551 A B) (f : A -> B) (s : P -> A) (x : A) (h1 : (term1773 A P s x) = False) : (term1500 A B P P2 _114084 s P1 f x) = (P1 f x).
Proof. exact (TRANS (@lem8368713 A B P P2 _114084 P1 f s x h1) (@lem8368717 A B P P2 _114084 s P1 f x)). Qed.
Lemma lem8368719 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8368720 {A B P : Type'} (P2 : type560 A B P) (_114084 : type794 A P) (P1 : type551 A B) (f : A -> B) (s : P -> A) (x : A) (h1 : (term1773 A P s x) = False) : (term1722 A B P P2 _114084 s P1 f x) = (term1806 A B P1 f x).
Proof. exact (MK_COMB (@lem8368719) (@lem8368718 A B P P2 _114084 P1 f s x h1)). Qed.
Lemma lem8368724 {A P : Type'} (s : P -> A) (x : A) (h1 : (term1773 A P s x) = False) : (term1773 A P s x) = False.
Proof. exact (h1). Qed.
Lemma lem8368725 {A P : Type'} (s : P -> A) (x : A) (h1 : (term1773 A P s x) = False) : (term1773 A P s x) = False.
Proof. exact (@lem8368724 A P s x h1). Qed.
Lemma lem8368726 {A : Type'} : (@COND A) = (@COND A).
Proof. exact (eq_refl (@COND A)). Qed.
Lemma lem8368727 {A P : Type'} (s : P -> A) (x : A) (h1 : (term1773 A P s x) = False) : (term1515 A P s x) = (@COND A False).
Proof. exact (MK_COMB (@lem8368726 A) (@lem8368725 A P s x h1)). Qed.
Lemma lem8368728 {A B P : Type'} (G2 : type557 A B P) (f : A -> B) (_114084 : type794 A P) (s : P -> A) (x : A) : (term1514 A B P G2 f _114084 s x) = (term1514 A B P G2 f _114084 s x).
Proof. exact (eq_refl (term1514 A B P G2 f _114084 s x)). Qed.
Lemma lem8368729 {A B P : Type'} (G2 : type557 A B P) (f : A -> B) (_114084 : type794 A P) (s : P -> A) (x : A) (h1 : (term1773 A P s x) = False) : (term1517 A B P G2 f _114084 s x) = (term1780 A B P G2 f _114084 s x).
Proof. exact (MK_COMB (@lem8368727 A P s x h1) (@lem8368728 A B P G2 f _114084 s x)). Qed.
Lemma lem8368730 {A B : Type'} (G1 : type548 A B) (f : A -> B) (x : A) : (G1 f x) = (G1 f x).
Proof. exact (eq_refl (G1 f x)). Qed.
Lemma lem8368731 {A B P : Type'} (G2 : type557 A B P) (_114084 : type794 A P) (G1 : type548 A B) (f : A -> B) (s : P -> A) (x : A) (h1 : (term1773 A P s x) = False) : (term1519 A B P G2 _114084 s G1 f x) = (term1781 A B P G2 _114084 s G1 f x).
Proof. exact (MK_COMB (@lem8368729 A B P G2 f _114084 s x h1) (@lem8368730 A B G1 f x)). Qed.
Lemma lem8368733 {A : Type'} (t1 : A) (t2 : A) : (@COND A False t1 t2) = t2.
Proof. exact (proj2 (@lem12653 A t1 t2)). Qed.
Lemma lem8368734 {A : Type'} (t1 : A) (t2 : A) : (@COND A False t1 t2) = t2.
Proof. exact (@lem8368733 A t1 t2). Qed.
Lemma lem8368735 {A B P : Type'} (G2 : type557 A B P) (_114084 : type794 A P) (s : P -> A) (G1 : type548 A B) (f : A -> B) (x : A) : (term1781 A B P G2 _114084 s G1 f x) = (G1 f x).
Proof. exact (@lem8368734 A (term1514 A B P G2 f _114084 s x) (G1 f x)). Qed.
Lemma lem8368736 {A B P : Type'} (G2 : type557 A B P) (_114084 : type794 A P) (G1 : type548 A B) (f : A -> B) (s : P -> A) (x : A) (h1 : (term1773 A P s x) = False) : (term1519 A B P G2 _114084 s G1 f x) = (G1 f x).
Proof. exact (TRANS (@lem8368731 A B P G2 _114084 G1 f s x h1) (@lem8368735 A B P G2 _114084 s G1 f x)). Qed.
Lemma lem8368737 {A : Type'} (lt2 : type1402 A) (y : A) : (lt2 y) = (lt2 y).
Proof. exact (eq_refl (lt2 y)). Qed.
Lemma lem8368738 {A B P : Type'} (G2 : type557 A B P) (_114084 : type794 A P) (lt2 : type1402 A) (y : A) (G1 : type548 A B) (f : A -> B) (s : P -> A) (x : A) (h1 : (term1773 A P s x) = False) : (term1723 A B P lt2 y G2 _114084 s G1 f x) = (term1807 A B lt2 y G1 f x).
Proof. exact (MK_COMB (@lem8368737 A lt2 y) (@lem8368736 A B P G2 _114084 G1 f s x h1)). Qed.
Lemma lem8368739 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (_114084 : type794 A P) (P1 : type551 A B) (lt2 : type1402 A) (y : A) (G1 : type548 A B) (f : A -> B) (s : P -> A) (x : A) (h1 : (term1773 A P s x) = False) : (term1724 A B P P2 P1 lt2 y G2 _114084 s G1 f x) = (term1808 A B P1 lt2 y G1 f x).
Proof. exact (MK_COMB (@lem8368720 A B P P2 _114084 P1 f s x h1) (@lem8368738 A B P G2 _114084 lt2 y G1 f s x h1)). Qed.
Lemma lem8368742 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem8368743 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (_114084 : type794 A P) (P1 : type551 A B) (lt2 : type1402 A) (y : A) (G1 : type548 A B) (f : A -> B) (s : P -> A) (x : A) (h1 : (term1773 A P s x) = False) : (term1725 A B P P2 P1 lt2 y G2 _114084 s G1 f x) = (term1809 A B P1 lt2 y G1 f x).
Proof. exact (MK_COMB (@lem8368742) (@lem8368739 A B P P2 G2 _114084 P1 lt2 y G1 f s x h1)). Qed.
Lemma lem8368744 {A : Type'} (lt2 : type1402 A) (y : A) (x : A) : (lt2 y x) = (lt2 y x).
Proof. exact (eq_refl (lt2 y x)). Qed.
Lemma lem8368745 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (_114084 : type794 A P) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (lt2 : type1402 A) (y : A) (s : P -> A) (x : A) (h1 : (term1773 A P s x) = False) : (term1726 A B P P2 P1 G2 _114084 s G1 f lt2 y x) = (term1810 A B P1 G1 f lt2 y x).
Proof. exact (MK_COMB (@lem8368743 A B P P2 G2 _114084 P1 lt2 y G1 f s x h1) (@lem8368744 A lt2 y x)). Qed.
Lemma lem8368748 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (_114084 : type794 A P) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (lt2 : type1402 A) (s : P -> A) (x : A) (h1 : (term1773 A P s x) = False) : (term1727 A B P P2 P1 G2 _114084 s G1 f lt2 x) = (term1811 A B P1 G1 f lt2 x).
Proof. exact (fun_ext (fun y : A => @lem8368745 A B P P2 G2 _114084 P1 G1 f lt2 y s x h1)). Qed.
Lemma lem8368749 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem8368750 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (_114084 : type794 A P) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (lt2 : type1402 A) (s : P -> A) (x : A) (h1 : (term1773 A P s x) = False) : (term1728 A B P P2 P1 G2 _114084 s G1 f lt2 x) = (term1812 A B P1 G1 f lt2 x).
Proof. exact (MK_COMB (@lem8368749 A) (@lem8368748 A B P P2 G2 _114084 P1 G1 f lt2 s x h1)). Qed.
Lemma lem8368755 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (_114084 : type794 A P) (s : P -> A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (lt2 : type1402 A) (x : A) : term1813 A B P P2 G2 _114084 s P1 G1 f lt2 x.
Proof. exact (fun h0 : (term1773 A P s x) = False => @lem8368750 A B P P2 G2 _114084 P1 G1 f lt2 s x h0). Qed.
Lemma lem8368759 {A P : Type'} (s : P -> A) (x : A) (h1 : (term1773 A P s x) = True) : (term1773 A P s x) = True.
Proof. exact (h1). Qed.
Lemma lem8368760 {A P : Type'} (s : P -> A) (x : A) (h1 : (term1773 A P s x) = True) : (term1773 A P s x) = True.
Proof. exact (@lem8368759 A P s x h1). Qed.
Lemma lem8368761 : (@COND Prop) = (@COND Prop).
Proof. exact (eq_refl (@COND Prop)). Qed.
Lemma lem8368762 {A P : Type'} (s : P -> A) (x : A) (h1 : (term1773 A P s x) = True) : (term1496 A P s x) = (@COND Prop True).
Proof. exact (MK_COMB (@lem8368761) (@lem8368760 A P s x h1)). Qed.
Lemma lem8368763 {A B P : Type'} (P2 : type560 A B P) (f : A -> B) (_114084 : type794 A P) (s : P -> A) (x : A) : (term1495 A B P P2 f _114084 s x) = (term1495 A B P P2 f _114084 s x).
Proof. exact (eq_refl (term1495 A B P P2 f _114084 s x)). Qed.
Lemma lem8368764 {A B P : Type'} (P2 : type560 A B P) (f : A -> B) (_114084 : type794 A P) (s : P -> A) (x : A) (h1 : (term1773 A P s x) = True) : (term1498 A B P P2 f _114084 s x) = (term1790 A B P P2 f _114084 s x).
Proof. exact (MK_COMB (@lem8368762 A P s x h1) (@lem8368763 A B P P2 f _114084 s x)). Qed.
Lemma lem8368765 {A B : Type'} (P1 : type551 A B) (f : A -> B) (x : A) : (P1 f x) = (P1 f x).
Proof. exact (eq_refl (P1 f x)). Qed.
Lemma lem8368766 {A B P : Type'} (P2 : type560 A B P) (_114084 : type794 A P) (P1 : type551 A B) (f : A -> B) (s : P -> A) (x : A) (h1 : (term1773 A P s x) = True) : (term1500 A B P P2 _114084 s P1 f x) = (term1791 A B P P2 _114084 s P1 f x).
Proof. exact (MK_COMB (@lem8368764 A B P P2 f _114084 s x h1) (@lem8368765 A B P1 f x)). Qed.
Lemma lem8368768 {A : Type'} (t2 : A) (t1 : A) : (@COND A True t1 t2) = t1.
Proof. exact (proj1 (@lem12653 A t1 t2)). Qed.
Lemma lem8368769 (t2 : Prop) (t1 : Prop) : (@COND Prop True t1 t2) = t1.
Proof. exact (@lem8368768 Prop t2 t1). Qed.
Lemma lem8368770 {A B P : Type'} (P1 : type551 A B) (P2 : type560 A B P) (f : A -> B) (_114084 : type794 A P) (s : P -> A) (x : A) : (term1791 A B P P2 _114084 s P1 f x) = (term1495 A B P P2 f _114084 s x).
Proof. exact (@lem8368769 (P1 f x) (term1495 A B P P2 f _114084 s x)). Qed.
Lemma lem8368771 {A B P : Type'} (P1 : type551 A B) (P2 : type560 A B P) (f : A -> B) (_114084 : type794 A P) (s : P -> A) (x : A) (h1 : (term1773 A P s x) = True) : (term1500 A B P P2 _114084 s P1 f x) = (term1495 A B P P2 f _114084 s x).
Proof. exact (TRANS (@lem8368766 A B P P2 _114084 P1 f s x h1) (@lem8368770 A B P P1 P2 f _114084 s x)). Qed.
Lemma lem8368772 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8368773 {A B P : Type'} (P1 : type551 A B) (P2 : type560 A B P) (f : A -> B) (_114084 : type794 A P) (s : P -> A) (x : A) (h1 : (term1773 A P s x) = True) : (term1722 A B P P2 _114084 s P1 f x) = (term1814 A B P P2 f _114084 s x).
Proof. exact (MK_COMB (@lem8368772) (@lem8368771 A B P P1 P2 f _114084 s x h1)). Qed.
Lemma lem8368777 {A P : Type'} (s : P -> A) (x : A) (h1 : (term1773 A P s x) = True) : (term1773 A P s x) = True.
Proof. exact (h1). Qed.
Lemma lem8368778 {A P : Type'} (s : P -> A) (x : A) (h1 : (term1773 A P s x) = True) : (term1773 A P s x) = True.
Proof. exact (@lem8368777 A P s x h1). Qed.
Lemma lem8368779 {A : Type'} : (@COND A) = (@COND A).
Proof. exact (eq_refl (@COND A)). Qed.
Lemma lem8368780 {A P : Type'} (s : P -> A) (x : A) (h1 : (term1773 A P s x) = True) : (term1515 A P s x) = (@COND A True).
Proof. exact (MK_COMB (@lem8368779 A) (@lem8368778 A P s x h1)). Qed.
Lemma lem8368781 {A B P : Type'} (G2 : type557 A B P) (f : A -> B) (_114084 : type794 A P) (s : P -> A) (x : A) : (term1514 A B P G2 f _114084 s x) = (term1514 A B P G2 f _114084 s x).
Proof. exact (eq_refl (term1514 A B P G2 f _114084 s x)). Qed.
Lemma lem8368782 {A B P : Type'} (G2 : type557 A B P) (f : A -> B) (_114084 : type794 A P) (s : P -> A) (x : A) (h1 : (term1773 A P s x) = True) : (term1517 A B P G2 f _114084 s x) = (term1792 A B P G2 f _114084 s x).
Proof. exact (MK_COMB (@lem8368780 A P s x h1) (@lem8368781 A B P G2 f _114084 s x)). Qed.
Lemma lem8368783 {A B : Type'} (G1 : type548 A B) (f : A -> B) (x : A) : (G1 f x) = (G1 f x).
Proof. exact (eq_refl (G1 f x)). Qed.
Lemma lem8368784 {A B P : Type'} (G2 : type557 A B P) (_114084 : type794 A P) (G1 : type548 A B) (f : A -> B) (s : P -> A) (x : A) (h1 : (term1773 A P s x) = True) : (term1519 A B P G2 _114084 s G1 f x) = (term1793 A B P G2 _114084 s G1 f x).
Proof. exact (MK_COMB (@lem8368782 A B P G2 f _114084 s x h1) (@lem8368783 A B G1 f x)). Qed.
Lemma lem8368786 {A : Type'} (t2 : A) (t1 : A) : (@COND A True t1 t2) = t1.
Proof. exact (proj1 (@lem12653 A t1 t2)). Qed.
Lemma lem8368787 {A : Type'} (t2 : A) (t1 : A) : (@COND A True t1 t2) = t1.
Proof. exact (@lem8368786 A t2 t1). Qed.
Lemma lem8368788 {A B P : Type'} (G1 : type548 A B) (G2 : type557 A B P) (f : A -> B) (_114084 : type794 A P) (s : P -> A) (x : A) : (term1793 A B P G2 _114084 s G1 f x) = (term1514 A B P G2 f _114084 s x).
Proof. exact (@lem8368787 A (G1 f x) (term1514 A B P G2 f _114084 s x)). Qed.
Lemma lem8368789 {A B P : Type'} (G1 : type548 A B) (G2 : type557 A B P) (f : A -> B) (_114084 : type794 A P) (s : P -> A) (x : A) (h1 : (term1773 A P s x) = True) : (term1519 A B P G2 _114084 s G1 f x) = (term1514 A B P G2 f _114084 s x).
Proof. exact (TRANS (@lem8368784 A B P G2 _114084 G1 f s x h1) (@lem8368788 A B P G1 G2 f _114084 s x)). Qed.
Lemma lem8368790 {A : Type'} (lt2 : type1402 A) (y : A) : (lt2 y) = (lt2 y).
Proof. exact (eq_refl (lt2 y)). Qed.
Lemma lem8368791 {A B P : Type'} (G1 : type548 A B) (lt2 : type1402 A) (y : A) (G2 : type557 A B P) (f : A -> B) (_114084 : type794 A P) (s : P -> A) (x : A) (h1 : (term1773 A P s x) = True) : (term1723 A B P lt2 y G2 _114084 s G1 f x) = (term1815 A B P lt2 y G2 f _114084 s x).
Proof. exact (MK_COMB (@lem8368790 A lt2 y) (@lem8368789 A B P G1 G2 f _114084 s x h1)). Qed.
Lemma lem8368792 {A B P : Type'} (P1 : type551 A B) (G1 : type548 A B) (P2 : type560 A B P) (lt2 : type1402 A) (y : A) (G2 : type557 A B P) (f : A -> B) (_114084 : type794 A P) (s : P -> A) (x : A) (h1 : (term1773 A P s x) = True) : (term1724 A B P P2 P1 lt2 y G2 _114084 s G1 f x) = (term1816 A B P P2 lt2 y G2 f _114084 s x).
Proof. exact (MK_COMB (@lem8368773 A B P P1 P2 f _114084 s x h1) (@lem8368791 A B P G1 lt2 y G2 f _114084 s x h1)). Qed.
Lemma lem8368795 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem8368796 {A B P : Type'} (P1 : type551 A B) (G1 : type548 A B) (P2 : type560 A B P) (lt2 : type1402 A) (y : A) (G2 : type557 A B P) (f : A -> B) (_114084 : type794 A P) (s : P -> A) (x : A) (h1 : (term1773 A P s x) = True) : (term1725 A B P P2 P1 lt2 y G2 _114084 s G1 f x) = (term1817 A B P P2 lt2 y G2 f _114084 s x).
Proof. exact (MK_COMB (@lem8368795) (@lem8368792 A B P P1 G1 P2 lt2 y G2 f _114084 s x h1)). Qed.
Lemma lem8368797 {A : Type'} (lt2 : type1402 A) (y : A) (x : A) : (lt2 y x) = (lt2 y x).
Proof. exact (eq_refl (lt2 y x)). Qed.
Lemma lem8368798 {A B P : Type'} (P1 : type551 A B) (G1 : type548 A B) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (_114084 : type794 A P) (lt2 : type1402 A) (y : A) (s : P -> A) (x : A) (h1 : (term1773 A P s x) = True) : (term1726 A B P P2 P1 G2 _114084 s G1 f lt2 y x) = (term1818 A B P P2 G2 f _114084 s lt2 y x).
Proof. exact (MK_COMB (@lem8368796 A B P P1 G1 P2 lt2 y G2 f _114084 s x h1) (@lem8368797 A lt2 y x)). Qed.
Lemma lem8368801 {A B P : Type'} (P1 : type551 A B) (G1 : type548 A B) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (_114084 : type794 A P) (lt2 : type1402 A) (s : P -> A) (x : A) (h1 : (term1773 A P s x) = True) : (term1727 A B P P2 P1 G2 _114084 s G1 f lt2 x) = (term1819 A B P P2 G2 f _114084 s lt2 x).
Proof. exact (fun_ext (fun y : A => @lem8368798 A B P P1 G1 P2 G2 f _114084 lt2 y s x h1)). Qed.
Lemma lem8368802 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem8368803 {A B P : Type'} (P1 : type551 A B) (G1 : type548 A B) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (_114084 : type794 A P) (lt2 : type1402 A) (s : P -> A) (x : A) (h1 : (term1773 A P s x) = True) : (term1728 A B P P2 P1 G2 _114084 s G1 f lt2 x) = (term1820 A B P P2 G2 f _114084 s lt2 x).
Proof. exact (MK_COMB (@lem8368802 A) (@lem8368801 A B P P1 G1 P2 G2 f _114084 lt2 s x h1)). Qed.
Lemma lem8368808 {A B P : Type'} (P1 : type551 A B) (G1 : type548 A B) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (_114084 : type794 A P) (s : P -> A) (lt2 : type1402 A) (x : A) : term1821 A B P P1 G1 P2 G2 f _114084 s lt2 x.
Proof. exact (fun h0 : (term1773 A P s x) = True => @lem8368803 A B P P1 G1 P2 G2 f _114084 lt2 s x h0). Qed.
Lemma lem8368809 {A B P : Type'} (P1 : type551 A B) (G1 : type548 A B) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (_114084 : type794 A P) (s : P -> A) (lt2 : type1402 A) (x : A) : term1822 A B P P1 G1 P2 G2 f _114084 s lt2 x.
Proof. exact (conj (@lem8368755 A B P P2 G2 _114084 s P1 G1 f lt2 x) (@lem8368808 A B P P1 G1 P2 G2 f _114084 s lt2 x)). Qed.
Lemma lem8368811 (x : Prop) (x1 : Prop) (b : Prop) (x0 : Prop) : term119 x x1 b x0.
Proof. exact (or_elim (@lem20425 b) (fun h0 : b = True => @lem20612 x x1 x0 b h0) (fun h0 : b = False => @lem20611 x x1 x0 b h0)). Qed.
Lemma lem8368812 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (_114084 : type794 A P) (s : P -> A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (lt2 : type1402 A) (x : A) : term1823 A B P P2 G2 _114084 s P1 G1 f lt2 x.
Proof. exact (@lem8368811 (term1728 A B P P2 P1 G2 _114084 s G1 f lt2 x) (term1820 A B P P2 G2 f _114084 s lt2 x) (term1773 A P s x) (term1812 A B P1 G1 f lt2 x)). Qed.
Lemma lem8368827 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (_114084 : type794 A P) (s : P -> A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (lt2 : type1402 A) (x : A) : (term1728 A B P P2 P1 G2 _114084 s G1 f lt2 x) = (term1824 A B P P2 G2 _114084 s P1 G1 f lt2 x).
Proof. exact (@lem8368812 A B P P2 G2 _114084 s P1 G1 f lt2 x (@lem8368809 A B P P1 G1 P2 G2 f _114084 s lt2 x)). Qed.
Lemma lem8368836 {A B : Type'} (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (lt2 : type1402 A) (y : A) (x : A) : (term1810 A B P1 G1 f lt2 y x) = (term1810 A B P1 G1 f lt2 y x).
Proof. exact (eq_refl (term1810 A B P1 G1 f lt2 y x)). Qed.
Lemma lem8368837 {A B : Type'} (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (lt2 : type1402 A) (x : A) : (term1811 A B P1 G1 f lt2 x) = (term1811 A B P1 G1 f lt2 x).
Proof. exact (fun_ext (fun y : A => @lem8368836 A B P1 G1 f lt2 y x)). Qed.
Lemma lem8368838 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem8368839 {A B : Type'} (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (lt2 : type1402 A) (x : A) : (term1812 A B P1 G1 f lt2 x) = (term1812 A B P1 G1 f lt2 x).
Proof. exact (MK_COMB (@lem8368838 A) (@lem8368837 A B P1 G1 f lt2 x)). Qed.
Lemma lem8368840 {A P : Type'} (s : P -> A) (y : P) (x : A) : ((s y) = x) = ((s y) = x).
Proof. exact (eq_refl ((s y) = x)). Qed.
Lemma lem8368841 {A P : Type'} (s : P -> A) (x : A) : (term1454 A P s x) = (term1454 A P s x).
Proof. exact (fun_ext (fun y : P => @lem8368840 A P s y x)). Qed.
Lemma lem8368842 {P : Type'} : (@ex P) = (@ex P).
Proof. exact (eq_refl (@ex P)). Qed.
Lemma lem8368843 {A P : Type'} (s : P -> A) (x : A) : (term1773 A P s x) = (term1773 A P s x).
Proof. exact (MK_COMB (@lem8368842 P) (@lem8368841 A P s x)). Qed.
Lemma lem8368844 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8368845 {A P : Type'} (s : P -> A) (x : A) : (term1825 A P s x) = (term1825 A P s x).
Proof. exact (MK_COMB (@lem8368844) (@lem8368843 A P s x)). Qed.
Lemma lem8368846 {A B P : Type'} (s : P -> A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (lt2 : type1402 A) (x : A) : (term1826 A B P s P1 G1 f lt2 x) = (term1826 A B P s P1 G1 f lt2 x).
Proof. exact (MK_COMB (@lem8368845 A P s x) (@lem8368839 A B P1 G1 f lt2 x)). Qed.
Lemma lem8368855 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (_114084 : type794 A P) (s : P -> A) (lt2 : type1402 A) (y : A) (x : A) : (term1818 A B P P2 G2 f _114084 s lt2 y x) = (term1818 A B P P2 G2 f _114084 s lt2 y x).
Proof. exact (eq_refl (term1818 A B P P2 G2 f _114084 s lt2 y x)). Qed.
Lemma lem8368856 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (_114084 : type794 A P) (s : P -> A) (lt2 : type1402 A) (x : A) : (term1819 A B P P2 G2 f _114084 s lt2 x) = (term1819 A B P P2 G2 f _114084 s lt2 x).
Proof. exact (fun_ext (fun y : A => @lem8368855 A B P P2 G2 f _114084 s lt2 y x)). Qed.
Lemma lem8368857 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem8368858 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (_114084 : type794 A P) (s : P -> A) (lt2 : type1402 A) (x : A) : (term1820 A B P P2 G2 f _114084 s lt2 x) = (term1820 A B P P2 G2 f _114084 s lt2 x).
Proof. exact (MK_COMB (@lem8368857 A) (@lem8368856 A B P P2 G2 f _114084 s lt2 x)). Qed.
Lemma lem8368859 {A P : Type'} (s : P -> A) (y : P) (x : A) : ((s y) = x) = ((s y) = x).
Proof. exact (eq_refl ((s y) = x)). Qed.
Lemma lem8368860 {A P : Type'} (s : P -> A) (x : A) : (term1454 A P s x) = (term1454 A P s x).
Proof. exact (fun_ext (fun y : P => @lem8368859 A P s y x)). Qed.
Lemma lem8368861 {P : Type'} : (@ex P) = (@ex P).
Proof. exact (eq_refl (@ex P)). Qed.
Lemma lem8368862 {A P : Type'} (s : P -> A) (x : A) : (term1773 A P s x) = (term1773 A P s x).
Proof. exact (MK_COMB (@lem8368861 P) (@lem8368860 A P s x)). Qed.
Lemma lem8368863 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem8368864 {A P : Type'} (s : P -> A) (x : A) : (term1802 A P s x) = (term1802 A P s x).
Proof. exact (MK_COMB (@lem8368863) (@lem8368862 A P s x)). Qed.
Lemma lem8368865 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8368866 {A P : Type'} (s : P -> A) (x : A) : (term1827 A P s x) = (term1827 A P s x).
Proof. exact (MK_COMB (@lem8368865) (@lem8368864 A P s x)). Qed.
Lemma lem8368867 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (_114084 : type794 A P) (s : P -> A) (lt2 : type1402 A) (x : A) : (term1828 A B P P2 G2 f _114084 s lt2 x) = (term1828 A B P P2 G2 f _114084 s lt2 x).
Proof. exact (MK_COMB (@lem8368866 A P s x) (@lem8368858 A B P P2 G2 f _114084 s lt2 x)). Qed.
Lemma lem8368868 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8368869 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (_114084 : type794 A P) (s : P -> A) (lt2 : type1402 A) (x : A) : (term1829 A B P P2 G2 f _114084 s lt2 x) = (term1829 A B P P2 G2 f _114084 s lt2 x).
Proof. exact (MK_COMB (@lem8368868) (@lem8368867 A B P P2 G2 f _114084 s lt2 x)). Qed.
Lemma lem8368870 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (_114084 : type794 A P) (s : P -> A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (lt2 : type1402 A) (x : A) : (term1824 A B P P2 G2 _114084 s P1 G1 f lt2 x) = (term1824 A B P P2 G2 _114084 s P1 G1 f lt2 x).
Proof. exact (MK_COMB (@lem8368869 A B P P2 G2 f _114084 s lt2 x) (@lem8368846 A B P s P1 G1 f lt2 x)). Qed.
Lemma lem8368871 {A B P : Type'} (P2 : type560 A B P) (P1 : type551 A B) (G2 : type557 A B P) (_114084 : type794 A P) (s : P -> A) (G1 : type548 A B) (f : A -> B) (lt2 : type1402 A) (x : A) : (term1830 A B P P2 P1 G2 _114084 s G1 f lt2 x) = (term1830 A B P P2 P1 G2 _114084 s G1 f lt2 x).
Proof. exact (eq_refl (term1830 A B P P2 P1 G2 _114084 s G1 f lt2 x)). Qed.
Lemma lem8368872 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (_114084 : type794 A P) (s : P -> A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (lt2 : type1402 A) (x : A) : ((term1728 A B P P2 P1 G2 _114084 s G1 f lt2 x) = (term1824 A B P P2 G2 _114084 s P1 G1 f lt2 x)) = ((term1728 A B P P2 P1 G2 _114084 s G1 f lt2 x) = (term1824 A B P P2 G2 _114084 s P1 G1 f lt2 x)).
Proof. exact (MK_COMB (@lem8368871 A B P P2 P1 G2 _114084 s G1 f lt2 x) (@lem8368870 A B P P2 G2 _114084 s P1 G1 f lt2 x)). Qed.
Lemma lem8368873 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (_114084 : type794 A P) (s : P -> A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (lt2 : type1402 A) (x : A) : (term1728 A B P P2 P1 G2 _114084 s G1 f lt2 x) = (term1824 A B P P2 G2 _114084 s P1 G1 f lt2 x).
Proof. exact (EQ_MP (@lem8368872 A B P P2 G2 _114084 s P1 G1 f lt2 x) (@lem8368827 A B P P2 G2 _114084 s P1 G1 f lt2 x)). Qed.
Lemma lem8368874 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (_114084 : type794 A P) (s : P -> A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (lt2 : type1402 A) : (term1729 A B P P2 P1 G2 _114084 s G1 f lt2) = (term1831 A B P P2 G2 _114084 s P1 G1 f lt2).
Proof. exact (fun_ext (fun x : A => @lem8368873 A B P P2 G2 _114084 s P1 G1 f lt2 x)). Qed.
Lemma lem8368875 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem8368876 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (_114084 : type794 A P) (s : P -> A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (lt2 : type1402 A) : (term1730 A B P P2 P1 G2 _114084 s G1 f lt2) = (term1832 A B P P2 G2 _114084 s P1 G1 f lt2).
Proof. exact (MK_COMB (@lem8368875 A) (@lem8368874 A B P P2 G2 _114084 s P1 G1 f lt2)). Qed.
Lemma lem8368877 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (_114084 : type794 A P) (s : P -> A) (P1 : type551 A B) (G1 : type548 A B) (lt2 : type1402 A) : (term1731 A B P P2 P1 G2 _114084 s G1 lt2) = (term1833 A B P P2 G2 _114084 s P1 G1 lt2).
Proof. exact (fun_ext (fun f : A -> B => @lem8368876 A B P P2 G2 _114084 s P1 G1 f lt2)). Qed.
Lemma lem8368878 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem8368879 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (_114084 : type794 A P) (s : P -> A) (P1 : type551 A B) (G1 : type548 A B) (lt2 : type1402 A) : (term1732 A B P P2 P1 G2 _114084 s G1 lt2) = (term1834 A B P P2 G2 _114084 s P1 G1 lt2).
Proof. exact (MK_COMB (@lem8368878 A B) (@lem8368877 A B P P2 G2 _114084 s P1 G1 lt2)). Qed.
Lemma lem8368880 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8368881 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (_114084 : type794 A P) (s : P -> A) (P1 : type551 A B) (G1 : type548 A B) (lt2 : type1402 A) : (term1733 A B P P2 P1 G2 _114084 s G1 lt2) = (term1835 A B P P2 G2 _114084 s P1 G1 lt2).
Proof. exact (MK_COMB (@lem8368880) (@lem8368879 A B P P2 G2 _114084 s P1 G1 lt2)). Qed.
Lemma lem8368882 {A B P : Type'} (H2 : type558 A B P) (H1 : type549 A B) (P2 : type560 A B P) (G2 : type557 A B P) (_114084 : type794 A P) (s : P -> A) (P1 : type551 A B) (G1 : type548 A B) (lt2 : type1402 A) : (term1742 A B P lt2 P2 P1 G2 G1 H2 _114084 s H1) = (term1836 A B P P2 G2 _114084 s P1 G1 lt2).
Proof. exact (MK_COMB (@lem8368881 A B P P2 G2 _114084 s P1 G1 lt2) (@lem8368700 A B P P2 P1 G2 G1 H2 _114084 s H1)). Qed.
Lemma lem8368896 {A P : Type'} (s : P -> A) (x : A) (h1 : (term1773 A P s x) = False) : (term1773 A P s x) = False.
Proof. exact (h1). Qed.
Lemma lem8368897 {A P : Type'} (s : P -> A) (x : A) (h1 : (term1773 A P s x) = False) : (term1773 A P s x) = False.
Proof. exact (@lem8368896 A P s x h1). Qed.
Lemma lem8368898 : (@COND Prop) = (@COND Prop).
Proof. exact (eq_refl (@COND Prop)). Qed.
Lemma lem8368899 {A P : Type'} (s : P -> A) (x : A) (h1 : (term1773 A P s x) = False) : (term1496 A P s x) = (@COND Prop False).
Proof. exact (MK_COMB (@lem8368898) (@lem8368897 A P s x h1)). Qed.
Lemma lem8368900 {A B P : Type'} (P2 : type560 A B P) (f : A -> B) (_114084 : type794 A P) (s : P -> A) (x : A) : (term1495 A B P P2 f _114084 s x) = (term1495 A B P P2 f _114084 s x).
Proof. exact (eq_refl (term1495 A B P P2 f _114084 s x)). Qed.
Lemma lem8368901 {A B P : Type'} (P2 : type560 A B P) (f : A -> B) (_114084 : type794 A P) (s : P -> A) (x : A) (h1 : (term1773 A P s x) = False) : (term1498 A B P P2 f _114084 s x) = (term1777 A B P P2 f _114084 s x).
Proof. exact (MK_COMB (@lem8368899 A P s x h1) (@lem8368900 A B P P2 f _114084 s x)). Qed.
Lemma lem8368902 {A B : Type'} (P1 : type551 A B) (f : A -> B) (x : A) : (P1 f x) = (P1 f x).
Proof. exact (eq_refl (P1 f x)). Qed.
Lemma lem8368903 {A B P : Type'} (P2 : type560 A B P) (_114084 : type794 A P) (P1 : type551 A B) (f : A -> B) (s : P -> A) (x : A) (h1 : (term1773 A P s x) = False) : (term1500 A B P P2 _114084 s P1 f x) = (term1778 A B P P2 _114084 s P1 f x).
Proof. exact (MK_COMB (@lem8368901 A B P P2 f _114084 s x h1) (@lem8368902 A B P1 f x)). Qed.
Lemma lem8368905 {A : Type'} (t1 : A) (t2 : A) : (@COND A False t1 t2) = t2.
Proof. exact (proj2 (@lem12653 A t1 t2)). Qed.
Lemma lem8368906 (t1 : Prop) (t2 : Prop) : (@COND Prop False t1 t2) = t2.
Proof. exact (@lem8368905 Prop t1 t2). Qed.
Lemma lem8368907 {A B P : Type'} (P2 : type560 A B P) (_114084 : type794 A P) (s : P -> A) (P1 : type551 A B) (f : A -> B) (x : A) : (term1778 A B P P2 _114084 s P1 f x) = (P1 f x).
Proof. exact (@lem8368906 (term1495 A B P P2 f _114084 s x) (P1 f x)). Qed.
Lemma lem8368908 {A B P : Type'} (P2 : type560 A B P) (_114084 : type794 A P) (P1 : type551 A B) (f : A -> B) (s : P -> A) (x : A) (h1 : (term1773 A P s x) = False) : (term1500 A B P P2 _114084 s P1 f x) = (P1 f x).
Proof. exact (TRANS (@lem8368903 A B P P2 _114084 P1 f s x h1) (@lem8368907 A B P P2 _114084 s P1 f x)). Qed.
Lemma lem8368909 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8368910 {A B P : Type'} (P2 : type560 A B P) (_114084 : type794 A P) (P1 : type551 A B) (f : A -> B) (s : P -> A) (x : A) (h1 : (term1773 A P s x) = False) : (term1705 A B P P2 _114084 s P1 f x) = (term1837 A B P1 f x).
Proof. exact (MK_COMB (@lem8368909) (@lem8368908 A B P P2 _114084 P1 f s x h1)). Qed.
Lemma lem8368914 {A P : Type'} (s : P -> A) (x : A) (h1 : (term1773 A P s x) = False) : (term1773 A P s x) = False.
Proof. exact (h1). Qed.
Lemma lem8368915 {A P : Type'} (s : P -> A) (x : A) (h1 : (term1773 A P s x) = False) : (term1773 A P s x) = False.
Proof. exact (@lem8368914 A P s x h1). Qed.
Lemma lem8368916 : (@COND Prop) = (@COND Prop).
Proof. exact (eq_refl (@COND Prop)). Qed.
Lemma lem8368917 {A P : Type'} (s : P -> A) (x : A) (h1 : (term1773 A P s x) = False) : (term1496 A P s x) = (@COND Prop False).
Proof. exact (MK_COMB (@lem8368916) (@lem8368915 A P s x h1)). Qed.
Lemma lem8368918 {A B P : Type'} (P2 : type560 A B P) (g : A -> B) (_114084 : type794 A P) (s : P -> A) (x : A) : (term1495 A B P P2 g _114084 s x) = (term1495 A B P P2 g _114084 s x).
Proof. exact (eq_refl (term1495 A B P P2 g _114084 s x)). Qed.
Lemma lem8368919 {A B P : Type'} (P2 : type560 A B P) (g : A -> B) (_114084 : type794 A P) (s : P -> A) (x : A) (h1 : (term1773 A P s x) = False) : (term1498 A B P P2 g _114084 s x) = (term1777 A B P P2 g _114084 s x).
Proof. exact (MK_COMB (@lem8368917 A P s x h1) (@lem8368918 A B P P2 g _114084 s x)). Qed.
Lemma lem8368920 {A B : Type'} (P1 : type551 A B) (g : A -> B) (x : A) : (P1 g x) = (P1 g x).
Proof. exact (eq_refl (P1 g x)). Qed.
Lemma lem8368921 {A B P : Type'} (P2 : type560 A B P) (_114084 : type794 A P) (P1 : type551 A B) (g : A -> B) (s : P -> A) (x : A) (h1 : (term1773 A P s x) = False) : (term1500 A B P P2 _114084 s P1 g x) = (term1778 A B P P2 _114084 s P1 g x).
Proof. exact (MK_COMB (@lem8368919 A B P P2 g _114084 s x h1) (@lem8368920 A B P1 g x)). Qed.
Lemma lem8368923 {A : Type'} (t1 : A) (t2 : A) : (@COND A False t1 t2) = t2.
Proof. exact (proj2 (@lem12653 A t1 t2)). Qed.
Lemma lem8368924 (t1 : Prop) (t2 : Prop) : (@COND Prop False t1 t2) = t2.
Proof. exact (@lem8368923 Prop t1 t2). Qed.
Lemma lem8368925 {A B P : Type'} (P2 : type560 A B P) (_114084 : type794 A P) (s : P -> A) (P1 : type551 A B) (g : A -> B) (x : A) : (term1778 A B P P2 _114084 s P1 g x) = (P1 g x).
Proof. exact (@lem8368924 (term1495 A B P P2 g _114084 s x) (P1 g x)). Qed.
Lemma lem8368926 {A B P : Type'} (P2 : type560 A B P) (_114084 : type794 A P) (P1 : type551 A B) (g : A -> B) (s : P -> A) (x : A) (h1 : (term1773 A P s x) = False) : (term1500 A B P P2 _114084 s P1 g x) = (P1 g x).
Proof. exact (TRANS (@lem8368921 A B P P2 _114084 P1 g s x h1) (@lem8368925 A B P P2 _114084 s P1 g x)). Qed.
Lemma lem8368927 {A B P : Type'} (P2 : type560 A B P) (_114084 : type794 A P) (f : A -> B) (P1 : type551 A B) (g : A -> B) (s : P -> A) (x : A) (h1 : (term1773 A P s x) = False) : ((term1500 A B P P2 _114084 s P1 f x) = (term1500 A B P P2 _114084 s P1 g x)) = ((P1 f x) = (P1 g x)).
Proof. exact (MK_COMB (@lem8368910 A B P P2 _114084 P1 f s x h1) (@lem8368926 A B P P2 _114084 P1 g s x h1)). Qed.
Lemma lem8368930 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8368931 {A B P : Type'} (P2 : type560 A B P) (_114084 : type794 A P) (f : A -> B) (P1 : type551 A B) (g : A -> B) (s : P -> A) (x : A) (h1 : (term1773 A P s x) = False) : (term1706 A B P f P2 _114084 s P1 g x) = (term1838 A B f P1 g x).
Proof. exact (MK_COMB (@lem8368930) (@lem8368927 A B P P2 _114084 f P1 g s x h1)). Qed.
Lemma lem8368935 {A P : Type'} (s : P -> A) (x : A) (h1 : (term1773 A P s x) = False) : (term1773 A P s x) = False.
Proof. exact (h1). Qed.
Lemma lem8368936 {A P : Type'} (s : P -> A) (x : A) (h1 : (term1773 A P s x) = False) : (term1773 A P s x) = False.
Proof. exact (@lem8368935 A P s x h1). Qed.
Lemma lem8368937 {A : Type'} : (@COND A) = (@COND A).
Proof. exact (eq_refl (@COND A)). Qed.
Lemma lem8368938 {A P : Type'} (s : P -> A) (x : A) (h1 : (term1773 A P s x) = False) : (term1515 A P s x) = (@COND A False).
Proof. exact (MK_COMB (@lem8368937 A) (@lem8368936 A P s x h1)). Qed.
Lemma lem8368939 {A B P : Type'} (G2 : type557 A B P) (f : A -> B) (_114084 : type794 A P) (s : P -> A) (x : A) : (term1514 A B P G2 f _114084 s x) = (term1514 A B P G2 f _114084 s x).
Proof. exact (eq_refl (term1514 A B P G2 f _114084 s x)). Qed.
Lemma lem8368940 {A B P : Type'} (G2 : type557 A B P) (f : A -> B) (_114084 : type794 A P) (s : P -> A) (x : A) (h1 : (term1773 A P s x) = False) : (term1517 A B P G2 f _114084 s x) = (term1780 A B P G2 f _114084 s x).
Proof. exact (MK_COMB (@lem8368938 A P s x h1) (@lem8368939 A B P G2 f _114084 s x)). Qed.
Lemma lem8368941 {A B : Type'} (G1 : type548 A B) (f : A -> B) (x : A) : (G1 f x) = (G1 f x).
Proof. exact (eq_refl (G1 f x)). Qed.
Lemma lem8368942 {A B P : Type'} (G2 : type557 A B P) (_114084 : type794 A P) (G1 : type548 A B) (f : A -> B) (s : P -> A) (x : A) (h1 : (term1773 A P s x) = False) : (term1519 A B P G2 _114084 s G1 f x) = (term1781 A B P G2 _114084 s G1 f x).
Proof. exact (MK_COMB (@lem8368940 A B P G2 f _114084 s x h1) (@lem8368941 A B G1 f x)). Qed.
Lemma lem8368944 {A : Type'} (t1 : A) (t2 : A) : (@COND A False t1 t2) = t2.
Proof. exact (proj2 (@lem12653 A t1 t2)). Qed.
Lemma lem8368945 {A : Type'} (t1 : A) (t2 : A) : (@COND A False t1 t2) = t2.
Proof. exact (@lem8368944 A t1 t2). Qed.
Lemma lem8368946 {A B P : Type'} (G2 : type557 A B P) (_114084 : type794 A P) (s : P -> A) (G1 : type548 A B) (f : A -> B) (x : A) : (term1781 A B P G2 _114084 s G1 f x) = (G1 f x).
Proof. exact (@lem8368945 A (term1514 A B P G2 f _114084 s x) (G1 f x)). Qed.
Lemma lem8368947 {A B P : Type'} (G2 : type557 A B P) (_114084 : type794 A P) (G1 : type548 A B) (f : A -> B) (s : P -> A) (x : A) (h1 : (term1773 A P s x) = False) : (term1519 A B P G2 _114084 s G1 f x) = (G1 f x).
Proof. exact (TRANS (@lem8368942 A B P G2 _114084 G1 f s x h1) (@lem8368946 A B P G2 _114084 s G1 f x)). Qed.
Lemma lem8368948 {A : Type'} : (@eq A) = (@eq A).
Proof. exact (eq_refl (@eq A)). Qed.
Lemma lem8368949 {A B P : Type'} (G2 : type557 A B P) (_114084 : type794 A P) (G1 : type548 A B) (f : A -> B) (s : P -> A) (x : A) (h1 : (term1773 A P s x) = False) : (term1708 A B P G2 _114084 s G1 f x) = (term1839 A B G1 f x).
Proof. exact (MK_COMB (@lem8368948 A) (@lem8368947 A B P G2 _114084 G1 f s x h1)). Qed.
Lemma lem8368953 {A P : Type'} (s : P -> A) (x : A) (h1 : (term1773 A P s x) = False) : (term1773 A P s x) = False.
Proof. exact (h1). Qed.
Lemma lem8368954 {A P : Type'} (s : P -> A) (x : A) (h1 : (term1773 A P s x) = False) : (term1773 A P s x) = False.
Proof. exact (@lem8368953 A P s x h1). Qed.
Lemma lem8368955 {A : Type'} : (@COND A) = (@COND A).
Proof. exact (eq_refl (@COND A)). Qed.
Lemma lem8368956 {A P : Type'} (s : P -> A) (x : A) (h1 : (term1773 A P s x) = False) : (term1515 A P s x) = (@COND A False).
Proof. exact (MK_COMB (@lem8368955 A) (@lem8368954 A P s x h1)). Qed.
Lemma lem8368957 {A B P : Type'} (G2 : type557 A B P) (g : A -> B) (_114084 : type794 A P) (s : P -> A) (x : A) : (term1514 A B P G2 g _114084 s x) = (term1514 A B P G2 g _114084 s x).
Proof. exact (eq_refl (term1514 A B P G2 g _114084 s x)). Qed.
Lemma lem8368958 {A B P : Type'} (G2 : type557 A B P) (g : A -> B) (_114084 : type794 A P) (s : P -> A) (x : A) (h1 : (term1773 A P s x) = False) : (term1517 A B P G2 g _114084 s x) = (term1780 A B P G2 g _114084 s x).
Proof. exact (MK_COMB (@lem8368956 A P s x h1) (@lem8368957 A B P G2 g _114084 s x)). Qed.
Lemma lem8368959 {A B : Type'} (G1 : type548 A B) (g : A -> B) (x : A) : (G1 g x) = (G1 g x).
Proof. exact (eq_refl (G1 g x)). Qed.
Lemma lem8368960 {A B P : Type'} (G2 : type557 A B P) (_114084 : type794 A P) (G1 : type548 A B) (g : A -> B) (s : P -> A) (x : A) (h1 : (term1773 A P s x) = False) : (term1519 A B P G2 _114084 s G1 g x) = (term1781 A B P G2 _114084 s G1 g x).
Proof. exact (MK_COMB (@lem8368958 A B P G2 g _114084 s x h1) (@lem8368959 A B G1 g x)). Qed.
Lemma lem8368962 {A : Type'} (t1 : A) (t2 : A) : (@COND A False t1 t2) = t2.
Proof. exact (proj2 (@lem12653 A t1 t2)). Qed.
Lemma lem8368963 {A : Type'} (t1 : A) (t2 : A) : (@COND A False t1 t2) = t2.
Proof. exact (@lem8368962 A t1 t2). Qed.
Lemma lem8368964 {A B P : Type'} (G2 : type557 A B P) (_114084 : type794 A P) (s : P -> A) (G1 : type548 A B) (g : A -> B) (x : A) : (term1781 A B P G2 _114084 s G1 g x) = (G1 g x).
Proof. exact (@lem8368963 A (term1514 A B P G2 g _114084 s x) (G1 g x)). Qed.
Lemma lem8368965 {A B P : Type'} (G2 : type557 A B P) (_114084 : type794 A P) (G1 : type548 A B) (g : A -> B) (s : P -> A) (x : A) (h1 : (term1773 A P s x) = False) : (term1519 A B P G2 _114084 s G1 g x) = (G1 g x).
Proof. exact (TRANS (@lem8368960 A B P G2 _114084 G1 g s x h1) (@lem8368964 A B P G2 _114084 s G1 g x)). Qed.
Lemma lem8368966 {A B P : Type'} (G2 : type557 A B P) (_114084 : type794 A P) (f : A -> B) (G1 : type548 A B) (g : A -> B) (s : P -> A) (x : A) (h1 : (term1773 A P s x) = False) : ((term1519 A B P G2 _114084 s G1 f x) = (term1519 A B P G2 _114084 s G1 g x)) = ((G1 f x) = (G1 g x)).
Proof. exact (MK_COMB (@lem8368949 A B P G2 _114084 G1 f s x h1) (@lem8368965 A B P G2 _114084 G1 g s x h1)). Qed.
Lemma lem8368969 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8368970 {A B P : Type'} (G2 : type557 A B P) (_114084 : type794 A P) (f : A -> B) (G1 : type548 A B) (g : A -> B) (s : P -> A) (x : A) (h1 : (term1773 A P s x) = False) : (term1709 A B P f G2 _114084 s G1 g x) = (term1840 A B f G1 g x).
Proof. exact (MK_COMB (@lem8368969) (@lem8368966 A B P G2 _114084 f G1 g s x h1)). Qed.
Lemma lem8368974 {A P : Type'} (s : P -> A) (x : A) (h1 : (term1773 A P s x) = False) : (term1773 A P s x) = False.
Proof. exact (h1). Qed.
Lemma lem8368975 {A P : Type'} (s : P -> A) (x : A) (h1 : (term1773 A P s x) = False) : (term1773 A P s x) = False.
Proof. exact (@lem8368974 A P s x h1). Qed.
Lemma lem8368976 {B : Type'} : (@COND B) = (@COND B).
Proof. exact (eq_refl (@COND B)). Qed.
Lemma lem8368977 {A B P : Type'} (s : P -> A) (x : A) (h1 : (term1773 A P s x) = False) : (term1432 A B P s x) = (@COND B False).
Proof. exact (MK_COMB (@lem8368976 B) (@lem8368975 A P s x h1)). Qed.
Lemma lem8368978 {A B P : Type'} (H2 : type558 A B P) (f : A -> B) (_114084 : type794 A P) (s : P -> A) (x : A) : (term1532 A B P H2 f _114084 s x) = (term1532 A B P H2 f _114084 s x).
Proof. exact (eq_refl (term1532 A B P H2 f _114084 s x)). Qed.
Lemma lem8368979 {A B P : Type'} (H2 : type558 A B P) (f : A -> B) (_114084 : type794 A P) (s : P -> A) (x : A) (h1 : (term1773 A P s x) = False) : (term1533 A B P H2 f _114084 s x) = (term1784 A B P H2 f _114084 s x).
Proof. exact (MK_COMB (@lem8368977 A B P s x h1) (@lem8368978 A B P H2 f _114084 s x)). Qed.
Lemma lem8368980 {A B : Type'} (H1 : type549 A B) (f : A -> B) (x : A) : (H1 f x) = (H1 f x).
Proof. exact (eq_refl (H1 f x)). Qed.
Lemma lem8368981 {A B P : Type'} (H2 : type558 A B P) (_114084 : type794 A P) (H1 : type549 A B) (f : A -> B) (s : P -> A) (x : A) (h1 : (term1773 A P s x) = False) : (term1535 A B P H2 _114084 s H1 f x) = (term1785 A B P H2 _114084 s H1 f x).
Proof. exact (MK_COMB (@lem8368979 A B P H2 f _114084 s x h1) (@lem8368980 A B H1 f x)). Qed.
Lemma lem8368983 {A : Type'} (t1 : A) (t2 : A) : (@COND A False t1 t2) = t2.
Proof. exact (proj2 (@lem12653 A t1 t2)). Qed.
Lemma lem8368984 {B : Type'} (t1 : B) (t2 : B) : (@COND B False t1 t2) = t2.
Proof. exact (@lem8368983 B t1 t2). Qed.
Lemma lem8368985 {A B P : Type'} (H2 : type558 A B P) (_114084 : type794 A P) (s : P -> A) (H1 : type549 A B) (f : A -> B) (x : A) : (term1785 A B P H2 _114084 s H1 f x) = (H1 f x).
Proof. exact (@lem8368984 B (term1532 A B P H2 f _114084 s x) (H1 f x)). Qed.
Lemma lem8368986 {A B P : Type'} (H2 : type558 A B P) (_114084 : type794 A P) (H1 : type549 A B) (f : A -> B) (s : P -> A) (x : A) (h1 : (term1773 A P s x) = False) : (term1535 A B P H2 _114084 s H1 f x) = (H1 f x).
Proof. exact (TRANS (@lem8368981 A B P H2 _114084 H1 f s x h1) (@lem8368985 A B P H2 _114084 s H1 f x)). Qed.
Lemma lem8368987 {B : Type'} : (@eq B) = (@eq B).
Proof. exact (eq_refl (@eq B)). Qed.
Lemma lem8368988 {A B P : Type'} (H2 : type558 A B P) (_114084 : type794 A P) (H1 : type549 A B) (f : A -> B) (s : P -> A) (x : A) (h1 : (term1773 A P s x) = False) : (term1711 A B P H2 _114084 s H1 f x) = (term1841 A B H1 f x).
Proof. exact (MK_COMB (@lem8368987 B) (@lem8368986 A B P H2 _114084 H1 f s x h1)). Qed.
Lemma lem8368992 {A P : Type'} (s : P -> A) (x : A) (h1 : (term1773 A P s x) = False) : (term1773 A P s x) = False.
Proof. exact (h1). Qed.
Lemma lem8368993 {A P : Type'} (s : P -> A) (x : A) (h1 : (term1773 A P s x) = False) : (term1773 A P s x) = False.
Proof. exact (@lem8368992 A P s x h1). Qed.
Lemma lem8368994 {B : Type'} : (@COND B) = (@COND B).
Proof. exact (eq_refl (@COND B)). Qed.
Lemma lem8368995 {A B P : Type'} (s : P -> A) (x : A) (h1 : (term1773 A P s x) = False) : (term1432 A B P s x) = (@COND B False).
Proof. exact (MK_COMB (@lem8368994 B) (@lem8368993 A P s x h1)). Qed.
Lemma lem8368996 {A B P : Type'} (H2 : type558 A B P) (g : A -> B) (_114084 : type794 A P) (s : P -> A) (x : A) : (term1532 A B P H2 g _114084 s x) = (term1532 A B P H2 g _114084 s x).
Proof. exact (eq_refl (term1532 A B P H2 g _114084 s x)). Qed.
Lemma lem8368997 {A B P : Type'} (H2 : type558 A B P) (g : A -> B) (_114084 : type794 A P) (s : P -> A) (x : A) (h1 : (term1773 A P s x) = False) : (term1533 A B P H2 g _114084 s x) = (term1784 A B P H2 g _114084 s x).
Proof. exact (MK_COMB (@lem8368995 A B P s x h1) (@lem8368996 A B P H2 g _114084 s x)). Qed.
Lemma lem8368998 {A B : Type'} (H1 : type549 A B) (g : A -> B) (x : A) : (H1 g x) = (H1 g x).
Proof. exact (eq_refl (H1 g x)). Qed.
Lemma lem8368999 {A B P : Type'} (H2 : type558 A B P) (_114084 : type794 A P) (H1 : type549 A B) (g : A -> B) (s : P -> A) (x : A) (h1 : (term1773 A P s x) = False) : (term1535 A B P H2 _114084 s H1 g x) = (term1785 A B P H2 _114084 s H1 g x).
Proof. exact (MK_COMB (@lem8368997 A B P H2 g _114084 s x h1) (@lem8368998 A B H1 g x)). Qed.
Lemma lem8369001 {A : Type'} (t1 : A) (t2 : A) : (@COND A False t1 t2) = t2.
Proof. exact (proj2 (@lem12653 A t1 t2)). Qed.
Lemma lem8369002 {B : Type'} (t1 : B) (t2 : B) : (@COND B False t1 t2) = t2.
Proof. exact (@lem8369001 B t1 t2). Qed.
Lemma lem8369003 {A B P : Type'} (H2 : type558 A B P) (_114084 : type794 A P) (s : P -> A) (H1 : type549 A B) (g : A -> B) (x : A) : (term1785 A B P H2 _114084 s H1 g x) = (H1 g x).
Proof. exact (@lem8369002 B (term1532 A B P H2 g _114084 s x) (H1 g x)). Qed.
Lemma lem8369004 {A B P : Type'} (H2 : type558 A B P) (_114084 : type794 A P) (H1 : type549 A B) (g : A -> B) (s : P -> A) (x : A) (h1 : (term1773 A P s x) = False) : (term1535 A B P H2 _114084 s H1 g x) = (H1 g x).
Proof. exact (TRANS (@lem8368999 A B P H2 _114084 H1 g s x h1) (@lem8369003 A B P H2 _114084 s H1 g x)). Qed.
Lemma lem8369005 {A B P : Type'} (H2 : type558 A B P) (_114084 : type794 A P) (f : A -> B) (H1 : type549 A B) (g : A -> B) (s : P -> A) (x : A) (h1 : (term1773 A P s x) = False) : ((term1535 A B P H2 _114084 s H1 f x) = (term1535 A B P H2 _114084 s H1 g x)) = ((H1 f x) = (H1 g x)).
Proof. exact (MK_COMB (@lem8368988 A B P H2 _114084 H1 f s x h1) (@lem8369004 A B P H2 _114084 H1 g s x h1)). Qed.
Lemma lem8369008 {A B P : Type'} (G2 : type557 A B P) (H2 : type558 A B P) (_114084 : type794 A P) (G1 : type548 A B) (f : A -> B) (H1 : type549 A B) (g : A -> B) (s : P -> A) (x : A) (h1 : (term1773 A P s x) = False) : (term1712 A B P G2 G1 f H2 _114084 s H1 g x) = (term1842 A B G1 f H1 g x).
Proof. exact (MK_COMB (@lem8368970 A B P G2 _114084 f G1 g s x h1) (@lem8369005 A B P H2 _114084 f H1 g s x h1)). Qed.
Lemma lem8369011 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (_114084 : type794 A P) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (H1 : type549 A B) (g : A -> B) (s : P -> A) (x : A) (h1 : (term1773 A P s x) = False) : (term1713 A B P P2 P1 G2 G1 f H2 _114084 s H1 g x) = (term1843 A B P1 G1 f H1 g x).
Proof. exact (MK_COMB (@lem8368931 A B P P2 _114084 f P1 g s x h1) (@lem8369008 A B P G2 H2 _114084 G1 f H1 g s x h1)). Qed.
Lemma lem8369014 {A B : Type'} (lt2 : type1402 A) (x : A) (f : A -> B) (g : A -> B) : (term1190 A B lt2 x f g) = (term1190 A B lt2 x f g).
Proof. exact (eq_refl (term1190 A B lt2 x f g)). Qed.
Lemma lem8369015 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (_114084 : type794 A P) (lt2 : type1402 A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (H1 : type549 A B) (g : A -> B) (s : P -> A) (x : A) (h1 : (term1773 A P s x) = False) : (term1714 A B P lt2 P2 P1 G2 G1 f H2 _114084 s H1 g x) = (term1844 A B lt2 P1 G1 f H1 g x).
Proof. exact (MK_COMB (@lem8369014 A B lt2 x f g) (@lem8369011 A B P P2 G2 H2 _114084 P1 G1 f H1 g s x h1)). Qed.
Lemma lem8369018 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (_114084 : type794 A P) (s : P -> A) (lt2 : type1402 A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (H1 : type549 A B) (g : A -> B) (x : A) : term1845 A B P P2 G2 H2 _114084 s lt2 P1 G1 f H1 g x.
Proof. exact (fun h0 : (term1773 A P s x) = False => @lem8369015 A B P P2 G2 H2 _114084 lt2 P1 G1 f H1 g s x h0). Qed.
Lemma lem8369030 {A P : Type'} (s : P -> A) (x : A) (h1 : (term1773 A P s x) = True) : (term1773 A P s x) = True.
Proof. exact (h1). Qed.
Lemma lem8369031 {A P : Type'} (s : P -> A) (x : A) (h1 : (term1773 A P s x) = True) : (term1773 A P s x) = True.
Proof. exact (@lem8369030 A P s x h1). Qed.
Lemma lem8369032 : (@COND Prop) = (@COND Prop).
Proof. exact (eq_refl (@COND Prop)). Qed.
Lemma lem8369033 {A P : Type'} (s : P -> A) (x : A) (h1 : (term1773 A P s x) = True) : (term1496 A P s x) = (@COND Prop True).
Proof. exact (MK_COMB (@lem8369032) (@lem8369031 A P s x h1)). Qed.
Lemma lem8369034 {A B P : Type'} (P2 : type560 A B P) (f : A -> B) (_114084 : type794 A P) (s : P -> A) (x : A) : (term1495 A B P P2 f _114084 s x) = (term1495 A B P P2 f _114084 s x).
Proof. exact (eq_refl (term1495 A B P P2 f _114084 s x)). Qed.
Lemma lem8369035 {A B P : Type'} (P2 : type560 A B P) (f : A -> B) (_114084 : type794 A P) (s : P -> A) (x : A) (h1 : (term1773 A P s x) = True) : (term1498 A B P P2 f _114084 s x) = (term1790 A B P P2 f _114084 s x).
Proof. exact (MK_COMB (@lem8369033 A P s x h1) (@lem8369034 A B P P2 f _114084 s x)). Qed.
Lemma lem8369036 {A B : Type'} (P1 : type551 A B) (f : A -> B) (x : A) : (P1 f x) = (P1 f x).
Proof. exact (eq_refl (P1 f x)). Qed.
Lemma lem8369037 {A B P : Type'} (P2 : type560 A B P) (_114084 : type794 A P) (P1 : type551 A B) (f : A -> B) (s : P -> A) (x : A) (h1 : (term1773 A P s x) = True) : (term1500 A B P P2 _114084 s P1 f x) = (term1791 A B P P2 _114084 s P1 f x).
Proof. exact (MK_COMB (@lem8369035 A B P P2 f _114084 s x h1) (@lem8369036 A B P1 f x)). Qed.
Lemma lem8369039 {A : Type'} (t2 : A) (t1 : A) : (@COND A True t1 t2) = t1.
Proof. exact (proj1 (@lem12653 A t1 t2)). Qed.
Lemma lem8369040 (t2 : Prop) (t1 : Prop) : (@COND Prop True t1 t2) = t1.
Proof. exact (@lem8369039 Prop t2 t1). Qed.
Lemma lem8369041 {A B P : Type'} (P1 : type551 A B) (P2 : type560 A B P) (f : A -> B) (_114084 : type794 A P) (s : P -> A) (x : A) : (term1791 A B P P2 _114084 s P1 f x) = (term1495 A B P P2 f _114084 s x).
Proof. exact (@lem8369040 (P1 f x) (term1495 A B P P2 f _114084 s x)). Qed.
Lemma lem8369042 {A B P : Type'} (P1 : type551 A B) (P2 : type560 A B P) (f : A -> B) (_114084 : type794 A P) (s : P -> A) (x : A) (h1 : (term1773 A P s x) = True) : (term1500 A B P P2 _114084 s P1 f x) = (term1495 A B P P2 f _114084 s x).
Proof. exact (TRANS (@lem8369037 A B P P2 _114084 P1 f s x h1) (@lem8369041 A B P P1 P2 f _114084 s x)). Qed.
Lemma lem8369043 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8369044 {A B P : Type'} (P1 : type551 A B) (P2 : type560 A B P) (f : A -> B) (_114084 : type794 A P) (s : P -> A) (x : A) (h1 : (term1773 A P s x) = True) : (term1705 A B P P2 _114084 s P1 f x) = (term1846 A B P P2 f _114084 s x).
Proof. exact (MK_COMB (@lem8369043) (@lem8369042 A B P P1 P2 f _114084 s x h1)). Qed.
Lemma lem8369048 {A P : Type'} (s : P -> A) (x : A) (h1 : (term1773 A P s x) = True) : (term1773 A P s x) = True.
Proof. exact (h1). Qed.
Lemma lem8369049 {A P : Type'} (s : P -> A) (x : A) (h1 : (term1773 A P s x) = True) : (term1773 A P s x) = True.
Proof. exact (@lem8369048 A P s x h1). Qed.
Lemma lem8369050 : (@COND Prop) = (@COND Prop).
Proof. exact (eq_refl (@COND Prop)). Qed.
Lemma lem8369051 {A P : Type'} (s : P -> A) (x : A) (h1 : (term1773 A P s x) = True) : (term1496 A P s x) = (@COND Prop True).
Proof. exact (MK_COMB (@lem8369050) (@lem8369049 A P s x h1)). Qed.
Lemma lem8369052 {A B P : Type'} (P2 : type560 A B P) (g : A -> B) (_114084 : type794 A P) (s : P -> A) (x : A) : (term1495 A B P P2 g _114084 s x) = (term1495 A B P P2 g _114084 s x).
Proof. exact (eq_refl (term1495 A B P P2 g _114084 s x)). Qed.
Lemma lem8369053 {A B P : Type'} (P2 : type560 A B P) (g : A -> B) (_114084 : type794 A P) (s : P -> A) (x : A) (h1 : (term1773 A P s x) = True) : (term1498 A B P P2 g _114084 s x) = (term1790 A B P P2 g _114084 s x).
Proof. exact (MK_COMB (@lem8369051 A P s x h1) (@lem8369052 A B P P2 g _114084 s x)). Qed.
Lemma lem8369054 {A B : Type'} (P1 : type551 A B) (g : A -> B) (x : A) : (P1 g x) = (P1 g x).
Proof. exact (eq_refl (P1 g x)). Qed.
Lemma lem8369055 {A B P : Type'} (P2 : type560 A B P) (_114084 : type794 A P) (P1 : type551 A B) (g : A -> B) (s : P -> A) (x : A) (h1 : (term1773 A P s x) = True) : (term1500 A B P P2 _114084 s P1 g x) = (term1791 A B P P2 _114084 s P1 g x).
Proof. exact (MK_COMB (@lem8369053 A B P P2 g _114084 s x h1) (@lem8369054 A B P1 g x)). Qed.
Lemma lem8369057 {A : Type'} (t2 : A) (t1 : A) : (@COND A True t1 t2) = t1.
Proof. exact (proj1 (@lem12653 A t1 t2)). Qed.
Lemma lem8369058 (t2 : Prop) (t1 : Prop) : (@COND Prop True t1 t2) = t1.
Proof. exact (@lem8369057 Prop t2 t1). Qed.
Lemma lem8369059 {A B P : Type'} (P1 : type551 A B) (P2 : type560 A B P) (g : A -> B) (_114084 : type794 A P) (s : P -> A) (x : A) : (term1791 A B P P2 _114084 s P1 g x) = (term1495 A B P P2 g _114084 s x).
Proof. exact (@lem8369058 (P1 g x) (term1495 A B P P2 g _114084 s x)). Qed.
Lemma lem8369060 {A B P : Type'} (P1 : type551 A B) (P2 : type560 A B P) (g : A -> B) (_114084 : type794 A P) (s : P -> A) (x : A) (h1 : (term1773 A P s x) = True) : (term1500 A B P P2 _114084 s P1 g x) = (term1495 A B P P2 g _114084 s x).
Proof. exact (TRANS (@lem8369055 A B P P2 _114084 P1 g s x h1) (@lem8369059 A B P P1 P2 g _114084 s x)). Qed.
Lemma lem8369061 {A B P : Type'} (P1 : type551 A B) (f : A -> B) (P2 : type560 A B P) (g : A -> B) (_114084 : type794 A P) (s : P -> A) (x : A) (h1 : (term1773 A P s x) = True) : ((term1500 A B P P2 _114084 s P1 f x) = (term1500 A B P P2 _114084 s P1 g x)) = ((term1495 A B P P2 f _114084 s x) = (term1495 A B P P2 g _114084 s x)).
Proof. exact (MK_COMB (@lem8369044 A B P P1 P2 f _114084 s x h1) (@lem8369060 A B P P1 P2 g _114084 s x h1)). Qed.
Lemma lem8369064 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8369065 {A B P : Type'} (P1 : type551 A B) (f : A -> B) (P2 : type560 A B P) (g : A -> B) (_114084 : type794 A P) (s : P -> A) (x : A) (h1 : (term1773 A P s x) = True) : (term1706 A B P f P2 _114084 s P1 g x) = (term1847 A B P f P2 g _114084 s x).
Proof. exact (MK_COMB (@lem8369064) (@lem8369061 A B P P1 f P2 g _114084 s x h1)). Qed.
Lemma lem8369069 {A P : Type'} (s : P -> A) (x : A) (h1 : (term1773 A P s x) = True) : (term1773 A P s x) = True.
Proof. exact (h1). Qed.
Lemma lem8369070 {A P : Type'} (s : P -> A) (x : A) (h1 : (term1773 A P s x) = True) : (term1773 A P s x) = True.
Proof. exact (@lem8369069 A P s x h1). Qed.
Lemma lem8369071 {A : Type'} : (@COND A) = (@COND A).
Proof. exact (eq_refl (@COND A)). Qed.
Lemma lem8369072 {A P : Type'} (s : P -> A) (x : A) (h1 : (term1773 A P s x) = True) : (term1515 A P s x) = (@COND A True).
Proof. exact (MK_COMB (@lem8369071 A) (@lem8369070 A P s x h1)). Qed.
Lemma lem8369073 {A B P : Type'} (G2 : type557 A B P) (f : A -> B) (_114084 : type794 A P) (s : P -> A) (x : A) : (term1514 A B P G2 f _114084 s x) = (term1514 A B P G2 f _114084 s x).
Proof. exact (eq_refl (term1514 A B P G2 f _114084 s x)). Qed.
Lemma lem8369074 {A B P : Type'} (G2 : type557 A B P) (f : A -> B) (_114084 : type794 A P) (s : P -> A) (x : A) (h1 : (term1773 A P s x) = True) : (term1517 A B P G2 f _114084 s x) = (term1792 A B P G2 f _114084 s x).
Proof. exact (MK_COMB (@lem8369072 A P s x h1) (@lem8369073 A B P G2 f _114084 s x)). Qed.
Lemma lem8369075 {A B : Type'} (G1 : type548 A B) (f : A -> B) (x : A) : (G1 f x) = (G1 f x).
Proof. exact (eq_refl (G1 f x)). Qed.
Lemma lem8369076 {A B P : Type'} (G2 : type557 A B P) (_114084 : type794 A P) (G1 : type548 A B) (f : A -> B) (s : P -> A) (x : A) (h1 : (term1773 A P s x) = True) : (term1519 A B P G2 _114084 s G1 f x) = (term1793 A B P G2 _114084 s G1 f x).
Proof. exact (MK_COMB (@lem8369074 A B P G2 f _114084 s x h1) (@lem8369075 A B G1 f x)). Qed.
Lemma lem8369078 {A : Type'} (t2 : A) (t1 : A) : (@COND A True t1 t2) = t1.
Proof. exact (proj1 (@lem12653 A t1 t2)). Qed.
Lemma lem8369079 {A : Type'} (t2 : A) (t1 : A) : (@COND A True t1 t2) = t1.
Proof. exact (@lem8369078 A t2 t1). Qed.
Lemma lem8369080 {A B P : Type'} (G1 : type548 A B) (G2 : type557 A B P) (f : A -> B) (_114084 : type794 A P) (s : P -> A) (x : A) : (term1793 A B P G2 _114084 s G1 f x) = (term1514 A B P G2 f _114084 s x).
Proof. exact (@lem8369079 A (G1 f x) (term1514 A B P G2 f _114084 s x)). Qed.
Lemma lem8369081 {A B P : Type'} (G1 : type548 A B) (G2 : type557 A B P) (f : A -> B) (_114084 : type794 A P) (s : P -> A) (x : A) (h1 : (term1773 A P s x) = True) : (term1519 A B P G2 _114084 s G1 f x) = (term1514 A B P G2 f _114084 s x).
Proof. exact (TRANS (@lem8369076 A B P G2 _114084 G1 f s x h1) (@lem8369080 A B P G1 G2 f _114084 s x)). Qed.
Lemma lem8369082 {A : Type'} : (@eq A) = (@eq A).
Proof. exact (eq_refl (@eq A)). Qed.
Lemma lem8369083 {A B P : Type'} (G1 : type548 A B) (G2 : type557 A B P) (f : A -> B) (_114084 : type794 A P) (s : P -> A) (x : A) (h1 : (term1773 A P s x) = True) : (term1708 A B P G2 _114084 s G1 f x) = (term1848 A B P G2 f _114084 s x).
Proof. exact (MK_COMB (@lem8369082 A) (@lem8369081 A B P G1 G2 f _114084 s x h1)). Qed.
Lemma lem8369087 {A P : Type'} (s : P -> A) (x : A) (h1 : (term1773 A P s x) = True) : (term1773 A P s x) = True.
Proof. exact (h1). Qed.
Lemma lem8369088 {A P : Type'} (s : P -> A) (x : A) (h1 : (term1773 A P s x) = True) : (term1773 A P s x) = True.
Proof. exact (@lem8369087 A P s x h1). Qed.
Lemma lem8369089 {A : Type'} : (@COND A) = (@COND A).
Proof. exact (eq_refl (@COND A)). Qed.
Lemma lem8369090 {A P : Type'} (s : P -> A) (x : A) (h1 : (term1773 A P s x) = True) : (term1515 A P s x) = (@COND A True).
Proof. exact (MK_COMB (@lem8369089 A) (@lem8369088 A P s x h1)). Qed.
Lemma lem8369091 {A B P : Type'} (G2 : type557 A B P) (g : A -> B) (_114084 : type794 A P) (s : P -> A) (x : A) : (term1514 A B P G2 g _114084 s x) = (term1514 A B P G2 g _114084 s x).
Proof. exact (eq_refl (term1514 A B P G2 g _114084 s x)). Qed.
Lemma lem8369092 {A B P : Type'} (G2 : type557 A B P) (g : A -> B) (_114084 : type794 A P) (s : P -> A) (x : A) (h1 : (term1773 A P s x) = True) : (term1517 A B P G2 g _114084 s x) = (term1792 A B P G2 g _114084 s x).
Proof. exact (MK_COMB (@lem8369090 A P s x h1) (@lem8369091 A B P G2 g _114084 s x)). Qed.
Lemma lem8369093 {A B : Type'} (G1 : type548 A B) (g : A -> B) (x : A) : (G1 g x) = (G1 g x).
Proof. exact (eq_refl (G1 g x)). Qed.
Lemma lem8369094 {A B P : Type'} (G2 : type557 A B P) (_114084 : type794 A P) (G1 : type548 A B) (g : A -> B) (s : P -> A) (x : A) (h1 : (term1773 A P s x) = True) : (term1519 A B P G2 _114084 s G1 g x) = (term1793 A B P G2 _114084 s G1 g x).
Proof. exact (MK_COMB (@lem8369092 A B P G2 g _114084 s x h1) (@lem8369093 A B G1 g x)). Qed.
Lemma lem8369096 {A : Type'} (t2 : A) (t1 : A) : (@COND A True t1 t2) = t1.
Proof. exact (proj1 (@lem12653 A t1 t2)). Qed.
Lemma lem8369097 {A : Type'} (t2 : A) (t1 : A) : (@COND A True t1 t2) = t1.
Proof. exact (@lem8369096 A t2 t1). Qed.
Lemma lem8369098 {A B P : Type'} (G1 : type548 A B) (G2 : type557 A B P) (g : A -> B) (_114084 : type794 A P) (s : P -> A) (x : A) : (term1793 A B P G2 _114084 s G1 g x) = (term1514 A B P G2 g _114084 s x).
Proof. exact (@lem8369097 A (G1 g x) (term1514 A B P G2 g _114084 s x)). Qed.
Lemma lem8369099 {A B P : Type'} (G1 : type548 A B) (G2 : type557 A B P) (g : A -> B) (_114084 : type794 A P) (s : P -> A) (x : A) (h1 : (term1773 A P s x) = True) : (term1519 A B P G2 _114084 s G1 g x) = (term1514 A B P G2 g _114084 s x).
Proof. exact (TRANS (@lem8369094 A B P G2 _114084 G1 g s x h1) (@lem8369098 A B P G1 G2 g _114084 s x)). Qed.
Lemma lem8369100 {A B P : Type'} (G1 : type548 A B) (f : A -> B) (G2 : type557 A B P) (g : A -> B) (_114084 : type794 A P) (s : P -> A) (x : A) (h1 : (term1773 A P s x) = True) : ((term1519 A B P G2 _114084 s G1 f x) = (term1519 A B P G2 _114084 s G1 g x)) = ((term1514 A B P G2 f _114084 s x) = (term1514 A B P G2 g _114084 s x)).
Proof. exact (MK_COMB (@lem8369083 A B P G1 G2 f _114084 s x h1) (@lem8369099 A B P G1 G2 g _114084 s x h1)). Qed.
Lemma lem8369103 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8369104 {A B P : Type'} (G1 : type548 A B) (f : A -> B) (G2 : type557 A B P) (g : A -> B) (_114084 : type794 A P) (s : P -> A) (x : A) (h1 : (term1773 A P s x) = True) : (term1709 A B P f G2 _114084 s G1 g x) = (term1849 A B P f G2 g _114084 s x).
Proof. exact (MK_COMB (@lem8369103) (@lem8369100 A B P G1 f G2 g _114084 s x h1)). Qed.
Lemma lem8369108 {A P : Type'} (s : P -> A) (x : A) (h1 : (term1773 A P s x) = True) : (term1773 A P s x) = True.
Proof. exact (h1). Qed.
Lemma lem8369109 {A P : Type'} (s : P -> A) (x : A) (h1 : (term1773 A P s x) = True) : (term1773 A P s x) = True.
Proof. exact (@lem8369108 A P s x h1). Qed.
Lemma lem8369110 {B : Type'} : (@COND B) = (@COND B).
Proof. exact (eq_refl (@COND B)). Qed.
Lemma lem8369111 {A B P : Type'} (s : P -> A) (x : A) (h1 : (term1773 A P s x) = True) : (term1432 A B P s x) = (@COND B True).
Proof. exact (MK_COMB (@lem8369110 B) (@lem8369109 A P s x h1)). Qed.
Lemma lem8369112 {A B P : Type'} (H2 : type558 A B P) (f : A -> B) (_114084 : type794 A P) (s : P -> A) (x : A) : (term1532 A B P H2 f _114084 s x) = (term1532 A B P H2 f _114084 s x).
Proof. exact (eq_refl (term1532 A B P H2 f _114084 s x)). Qed.
Lemma lem8369113 {A B P : Type'} (H2 : type558 A B P) (f : A -> B) (_114084 : type794 A P) (s : P -> A) (x : A) (h1 : (term1773 A P s x) = True) : (term1533 A B P H2 f _114084 s x) = (term1794 A B P H2 f _114084 s x).
Proof. exact (MK_COMB (@lem8369111 A B P s x h1) (@lem8369112 A B P H2 f _114084 s x)). Qed.
Lemma lem8369114 {A B : Type'} (H1 : type549 A B) (f : A -> B) (x : A) : (H1 f x) = (H1 f x).
Proof. exact (eq_refl (H1 f x)). Qed.
Lemma lem8369115 {A B P : Type'} (H2 : type558 A B P) (_114084 : type794 A P) (H1 : type549 A B) (f : A -> B) (s : P -> A) (x : A) (h1 : (term1773 A P s x) = True) : (term1535 A B P H2 _114084 s H1 f x) = (term1795 A B P H2 _114084 s H1 f x).
Proof. exact (MK_COMB (@lem8369113 A B P H2 f _114084 s x h1) (@lem8369114 A B H1 f x)). Qed.
Lemma lem8369117 {A : Type'} (t2 : A) (t1 : A) : (@COND A True t1 t2) = t1.
Proof. exact (proj1 (@lem12653 A t1 t2)). Qed.
Lemma lem8369118 {B : Type'} (t2 : B) (t1 : B) : (@COND B True t1 t2) = t1.
Proof. exact (@lem8369117 B t2 t1). Qed.
Lemma lem8369119 {A B P : Type'} (H1 : type549 A B) (H2 : type558 A B P) (f : A -> B) (_114084 : type794 A P) (s : P -> A) (x : A) : (term1795 A B P H2 _114084 s H1 f x) = (term1532 A B P H2 f _114084 s x).
Proof. exact (@lem8369118 B (H1 f x) (term1532 A B P H2 f _114084 s x)). Qed.
Lemma lem8369120 {A B P : Type'} (H1 : type549 A B) (H2 : type558 A B P) (f : A -> B) (_114084 : type794 A P) (s : P -> A) (x : A) (h1 : (term1773 A P s x) = True) : (term1535 A B P H2 _114084 s H1 f x) = (term1532 A B P H2 f _114084 s x).
Proof. exact (TRANS (@lem8369115 A B P H2 _114084 H1 f s x h1) (@lem8369119 A B P H1 H2 f _114084 s x)). Qed.
Lemma lem8369121 {B : Type'} : (@eq B) = (@eq B).
Proof. exact (eq_refl (@eq B)). Qed.
Lemma lem8369122 {A B P : Type'} (H1 : type549 A B) (H2 : type558 A B P) (f : A -> B) (_114084 : type794 A P) (s : P -> A) (x : A) (h1 : (term1773 A P s x) = True) : (term1711 A B P H2 _114084 s H1 f x) = (term1850 A B P H2 f _114084 s x).
Proof. exact (MK_COMB (@lem8369121 B) (@lem8369120 A B P H1 H2 f _114084 s x h1)). Qed.
Lemma lem8369126 {A P : Type'} (s : P -> A) (x : A) (h1 : (term1773 A P s x) = True) : (term1773 A P s x) = True.
Proof. exact (h1). Qed.
Lemma lem8369127 {A P : Type'} (s : P -> A) (x : A) (h1 : (term1773 A P s x) = True) : (term1773 A P s x) = True.
Proof. exact (@lem8369126 A P s x h1). Qed.
Lemma lem8369128 {B : Type'} : (@COND B) = (@COND B).
Proof. exact (eq_refl (@COND B)). Qed.
Lemma lem8369129 {A B P : Type'} (s : P -> A) (x : A) (h1 : (term1773 A P s x) = True) : (term1432 A B P s x) = (@COND B True).
Proof. exact (MK_COMB (@lem8369128 B) (@lem8369127 A P s x h1)). Qed.
Lemma lem8369130 {A B P : Type'} (H2 : type558 A B P) (g : A -> B) (_114084 : type794 A P) (s : P -> A) (x : A) : (term1532 A B P H2 g _114084 s x) = (term1532 A B P H2 g _114084 s x).
Proof. exact (eq_refl (term1532 A B P H2 g _114084 s x)). Qed.
Lemma lem8369131 {A B P : Type'} (H2 : type558 A B P) (g : A -> B) (_114084 : type794 A P) (s : P -> A) (x : A) (h1 : (term1773 A P s x) = True) : (term1533 A B P H2 g _114084 s x) = (term1794 A B P H2 g _114084 s x).
Proof. exact (MK_COMB (@lem8369129 A B P s x h1) (@lem8369130 A B P H2 g _114084 s x)). Qed.
Lemma lem8369132 {A B : Type'} (H1 : type549 A B) (g : A -> B) (x : A) : (H1 g x) = (H1 g x).
Proof. exact (eq_refl (H1 g x)). Qed.
Lemma lem8369133 {A B P : Type'} (H2 : type558 A B P) (_114084 : type794 A P) (H1 : type549 A B) (g : A -> B) (s : P -> A) (x : A) (h1 : (term1773 A P s x) = True) : (term1535 A B P H2 _114084 s H1 g x) = (term1795 A B P H2 _114084 s H1 g x).
Proof. exact (MK_COMB (@lem8369131 A B P H2 g _114084 s x h1) (@lem8369132 A B H1 g x)). Qed.
Lemma lem8369135 {A : Type'} (t2 : A) (t1 : A) : (@COND A True t1 t2) = t1.
Proof. exact (proj1 (@lem12653 A t1 t2)). Qed.
Lemma lem8369136 {B : Type'} (t2 : B) (t1 : B) : (@COND B True t1 t2) = t1.
Proof. exact (@lem8369135 B t2 t1). Qed.
Lemma lem8369137 {A B P : Type'} (H1 : type549 A B) (H2 : type558 A B P) (g : A -> B) (_114084 : type794 A P) (s : P -> A) (x : A) : (term1795 A B P H2 _114084 s H1 g x) = (term1532 A B P H2 g _114084 s x).
Proof. exact (@lem8369136 B (H1 g x) (term1532 A B P H2 g _114084 s x)). Qed.
Lemma lem8369138 {A B P : Type'} (H1 : type549 A B) (H2 : type558 A B P) (g : A -> B) (_114084 : type794 A P) (s : P -> A) (x : A) (h1 : (term1773 A P s x) = True) : (term1535 A B P H2 _114084 s H1 g x) = (term1532 A B P H2 g _114084 s x).
Proof. exact (TRANS (@lem8369133 A B P H2 _114084 H1 g s x h1) (@lem8369137 A B P H1 H2 g _114084 s x)). Qed.
Lemma lem8369139 {A B P : Type'} (H1 : type549 A B) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (_114084 : type794 A P) (s : P -> A) (x : A) (h1 : (term1773 A P s x) = True) : ((term1535 A B P H2 _114084 s H1 f x) = (term1535 A B P H2 _114084 s H1 g x)) = ((term1532 A B P H2 f _114084 s x) = (term1532 A B P H2 g _114084 s x)).
Proof. exact (MK_COMB (@lem8369122 A B P H1 H2 f _114084 s x h1) (@lem8369138 A B P H1 H2 g _114084 s x h1)). Qed.
Lemma lem8369142 {A B P : Type'} (G1 : type548 A B) (H1 : type549 A B) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (_114084 : type794 A P) (s : P -> A) (x : A) (h1 : (term1773 A P s x) = True) : (term1712 A B P G2 G1 f H2 _114084 s H1 g x) = (term1851 A B P G2 f H2 g _114084 s x).
Proof. exact (MK_COMB (@lem8369104 A B P G1 f G2 g _114084 s x h1) (@lem8369139 A B P H1 f H2 g _114084 s x h1)). Qed.
Lemma lem8369145 {A B P : Type'} (P1 : type551 A B) (G1 : type548 A B) (H1 : type549 A B) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (_114084 : type794 A P) (s : P -> A) (x : A) (h1 : (term1773 A P s x) = True) : (term1713 A B P P2 P1 G2 G1 f H2 _114084 s H1 g x) = (term1852 A B P P2 G2 f H2 g _114084 s x).
Proof. exact (MK_COMB (@lem8369065 A B P P1 f P2 g _114084 s x h1) (@lem8369142 A B P G1 H1 G2 f H2 g _114084 s x h1)). Qed.
Lemma lem8369148 {A B : Type'} (lt2 : type1402 A) (x : A) (f : A -> B) (g : A -> B) : (term1190 A B lt2 x f g) = (term1190 A B lt2 x f g).
Proof. exact (eq_refl (term1190 A B lt2 x f g)). Qed.
Lemma lem8369149 {A B P : Type'} (P1 : type551 A B) (G1 : type548 A B) (H1 : type549 A B) (lt2 : type1402 A) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (_114084 : type794 A P) (s : P -> A) (x : A) (h1 : (term1773 A P s x) = True) : (term1714 A B P lt2 P2 P1 G2 G1 f H2 _114084 s H1 g x) = (term1853 A B P lt2 P2 G2 f H2 g _114084 s x).
Proof. exact (MK_COMB (@lem8369148 A B lt2 x f g) (@lem8369145 A B P P1 G1 H1 P2 G2 f H2 g _114084 s x h1)). Qed.
Lemma lem8369152 {A B P : Type'} (P1 : type551 A B) (G1 : type548 A B) (H1 : type549 A B) (lt2 : type1402 A) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (_114084 : type794 A P) (s : P -> A) (x : A) : term1854 A B P P1 G1 H1 lt2 P2 G2 f H2 g _114084 s x.
Proof. exact (fun h0 : (term1773 A P s x) = True => @lem8369149 A B P P1 G1 H1 lt2 P2 G2 f H2 g _114084 s x h0). Qed.
Lemma lem8369153 {A B P : Type'} (P1 : type551 A B) (G1 : type548 A B) (H1 : type549 A B) (lt2 : type1402 A) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (_114084 : type794 A P) (s : P -> A) (x : A) : term1855 A B P P1 G1 H1 lt2 P2 G2 f H2 g _114084 s x.
Proof. exact (conj (@lem8369018 A B P P2 G2 H2 _114084 s lt2 P1 G1 f H1 g x) (@lem8369152 A B P P1 G1 H1 lt2 P2 G2 f H2 g _114084 s x)). Qed.
Lemma lem8369155 (x : Prop) (x1 : Prop) (b : Prop) (x0 : Prop) : term119 x x1 b x0.
Proof. exact (or_elim (@lem20425 b) (fun h0 : b = True => @lem20612 x x1 x0 b h0) (fun h0 : b = False => @lem20611 x x1 x0 b h0)). Qed.
Lemma lem8369156 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (_114084 : type794 A P) (s : P -> A) (lt2 : type1402 A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (H1 : type549 A B) (g : A -> B) (x : A) : term1856 A B P P2 G2 H2 _114084 s lt2 P1 G1 f H1 g x.
Proof. exact (@lem8369155 (term1714 A B P lt2 P2 P1 G2 G1 f H2 _114084 s H1 g x) (term1853 A B P lt2 P2 G2 f H2 g _114084 s x) (term1773 A P s x) (term1844 A B lt2 P1 G1 f H1 g x)). Qed.
Lemma lem8369171 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (_114084 : type794 A P) (s : P -> A) (lt2 : type1402 A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (H1 : type549 A B) (g : A -> B) (x : A) : (term1714 A B P lt2 P2 P1 G2 G1 f H2 _114084 s H1 g x) = (term1857 A B P P2 G2 H2 _114084 s lt2 P1 G1 f H1 g x).
Proof. exact (@lem8369156 A B P P2 G2 H2 _114084 s lt2 P1 G1 f H1 g x (@lem8369153 A B P P1 G1 H1 lt2 P2 G2 f H2 g _114084 s x)). Qed.
Lemma lem8369184 {A B : Type'} (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (H1 : type549 A B) (g : A -> B) (x : A) : (term1843 A B P1 G1 f H1 g x) = (term1843 A B P1 G1 f H1 g x).
Proof. exact (eq_refl (term1843 A B P1 G1 f H1 g x)). Qed.
Lemma lem8369189 {A B : Type'} (lt2 : type1402 A) (x : A) (f : A -> B) (g : A -> B) (z : A) : (term1858 A B lt2 x f g z) = (term1858 A B lt2 x f g z).
Proof. exact (eq_refl (term1858 A B lt2 x f g z)). Qed.
Lemma lem8369190 {A B : Type'} (lt2 : type1402 A) (x : A) (f : A -> B) (g : A -> B) : (term1859 A B lt2 x f g) = (term1859 A B lt2 x f g).
Proof. exact (fun_ext (fun z : A => @lem8369189 A B lt2 x f g z)). Qed.
Lemma lem8369191 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem8369192 {A B : Type'} (lt2 : type1402 A) (x : A) (f : A -> B) (g : A -> B) : (term1193 A B lt2 x f g) = (term1193 A B lt2 x f g).
Proof. exact (MK_COMB (@lem8369191 A) (@lem8369190 A B lt2 x f g)). Qed.
Lemma lem8369193 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem8369194 {A B : Type'} (lt2 : type1402 A) (x : A) (f : A -> B) (g : A -> B) : (term1190 A B lt2 x f g) = (term1190 A B lt2 x f g).
Proof. exact (MK_COMB (@lem8369193) (@lem8369192 A B lt2 x f g)). Qed.
Lemma lem8369195 {A B : Type'} (lt2 : type1402 A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (H1 : type549 A B) (g : A -> B) (x : A) : (term1844 A B lt2 P1 G1 f H1 g x) = (term1844 A B lt2 P1 G1 f H1 g x).
Proof. exact (MK_COMB (@lem8369194 A B lt2 x f g) (@lem8369184 A B P1 G1 f H1 g x)). Qed.
Lemma lem8369196 {A P : Type'} (s : P -> A) (y : P) (x : A) : ((s y) = x) = ((s y) = x).
Proof. exact (eq_refl ((s y) = x)). Qed.
Lemma lem8369197 {A P : Type'} (s : P -> A) (x : A) : (term1454 A P s x) = (term1454 A P s x).
Proof. exact (fun_ext (fun y : P => @lem8369196 A P s y x)). Qed.
Lemma lem8369198 {P : Type'} : (@ex P) = (@ex P).
Proof. exact (eq_refl (@ex P)). Qed.
Lemma lem8369199 {A P : Type'} (s : P -> A) (x : A) : (term1773 A P s x) = (term1773 A P s x).
Proof. exact (MK_COMB (@lem8369198 P) (@lem8369197 A P s x)). Qed.
Lemma lem8369200 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8369201 {A P : Type'} (s : P -> A) (x : A) : (term1825 A P s x) = (term1825 A P s x).
Proof. exact (MK_COMB (@lem8369200) (@lem8369199 A P s x)). Qed.
Lemma lem8369202 {A B P : Type'} (s : P -> A) (lt2 : type1402 A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (H1 : type549 A B) (g : A -> B) (x : A) : (term1860 A B P s lt2 P1 G1 f H1 g x) = (term1860 A B P s lt2 P1 G1 f H1 g x).
Proof. exact (MK_COMB (@lem8369201 A P s x) (@lem8369195 A B lt2 P1 G1 f H1 g x)). Qed.
Lemma lem8369215 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (_114084 : type794 A P) (s : P -> A) (x : A) : (term1852 A B P P2 G2 f H2 g _114084 s x) = (term1852 A B P P2 G2 f H2 g _114084 s x).
Proof. exact (eq_refl (term1852 A B P P2 G2 f H2 g _114084 s x)). Qed.
Lemma lem8369220 {A B : Type'} (lt2 : type1402 A) (x : A) (f : A -> B) (g : A -> B) (z : A) : (term1858 A B lt2 x f g z) = (term1858 A B lt2 x f g z).
Proof. exact (eq_refl (term1858 A B lt2 x f g z)). Qed.
Lemma lem8369221 {A B : Type'} (lt2 : type1402 A) (x : A) (f : A -> B) (g : A -> B) : (term1859 A B lt2 x f g) = (term1859 A B lt2 x f g).
Proof. exact (fun_ext (fun z : A => @lem8369220 A B lt2 x f g z)). Qed.
Lemma lem8369222 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem8369223 {A B : Type'} (lt2 : type1402 A) (x : A) (f : A -> B) (g : A -> B) : (term1193 A B lt2 x f g) = (term1193 A B lt2 x f g).
Proof. exact (MK_COMB (@lem8369222 A) (@lem8369221 A B lt2 x f g)). Qed.
Lemma lem8369224 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem8369225 {A B : Type'} (lt2 : type1402 A) (x : A) (f : A -> B) (g : A -> B) : (term1190 A B lt2 x f g) = (term1190 A B lt2 x f g).
Proof. exact (MK_COMB (@lem8369224) (@lem8369223 A B lt2 x f g)). Qed.
Lemma lem8369226 {A B P : Type'} (lt2 : type1402 A) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (_114084 : type794 A P) (s : P -> A) (x : A) : (term1853 A B P lt2 P2 G2 f H2 g _114084 s x) = (term1853 A B P lt2 P2 G2 f H2 g _114084 s x).
Proof. exact (MK_COMB (@lem8369225 A B lt2 x f g) (@lem8369215 A B P P2 G2 f H2 g _114084 s x)). Qed.
Lemma lem8369227 {A P : Type'} (s : P -> A) (y : P) (x : A) : ((s y) = x) = ((s y) = x).
Proof. exact (eq_refl ((s y) = x)). Qed.
Lemma lem8369228 {A P : Type'} (s : P -> A) (x : A) : (term1454 A P s x) = (term1454 A P s x).
Proof. exact (fun_ext (fun y : P => @lem8369227 A P s y x)). Qed.
Lemma lem8369229 {P : Type'} : (@ex P) = (@ex P).
Proof. exact (eq_refl (@ex P)). Qed.
Lemma lem8369230 {A P : Type'} (s : P -> A) (x : A) : (term1773 A P s x) = (term1773 A P s x).
Proof. exact (MK_COMB (@lem8369229 P) (@lem8369228 A P s x)). Qed.
Lemma lem8369231 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem8369232 {A P : Type'} (s : P -> A) (x : A) : (term1802 A P s x) = (term1802 A P s x).
Proof. exact (MK_COMB (@lem8369231) (@lem8369230 A P s x)). Qed.
Lemma lem8369233 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8369234 {A P : Type'} (s : P -> A) (x : A) : (term1827 A P s x) = (term1827 A P s x).
Proof. exact (MK_COMB (@lem8369233) (@lem8369232 A P s x)). Qed.
Lemma lem8369235 {A B P : Type'} (lt2 : type1402 A) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (_114084 : type794 A P) (s : P -> A) (x : A) : (term1861 A B P lt2 P2 G2 f H2 g _114084 s x) = (term1861 A B P lt2 P2 G2 f H2 g _114084 s x).
Proof. exact (MK_COMB (@lem8369234 A P s x) (@lem8369226 A B P lt2 P2 G2 f H2 g _114084 s x)). Qed.
Lemma lem8369236 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8369237 {A B P : Type'} (lt2 : type1402 A) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (_114084 : type794 A P) (s : P -> A) (x : A) : (term1862 A B P lt2 P2 G2 f H2 g _114084 s x) = (term1862 A B P lt2 P2 G2 f H2 g _114084 s x).
Proof. exact (MK_COMB (@lem8369236) (@lem8369235 A B P lt2 P2 G2 f H2 g _114084 s x)). Qed.
Lemma lem8369238 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (_114084 : type794 A P) (s : P -> A) (lt2 : type1402 A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (H1 : type549 A B) (g : A -> B) (x : A) : (term1857 A B P P2 G2 H2 _114084 s lt2 P1 G1 f H1 g x) = (term1857 A B P P2 G2 H2 _114084 s lt2 P1 G1 f H1 g x).
Proof. exact (MK_COMB (@lem8369237 A B P lt2 P2 G2 f H2 g _114084 s x) (@lem8369202 A B P s lt2 P1 G1 f H1 g x)). Qed.
Lemma lem8369239 {A B P : Type'} (lt2 : type1402 A) (P2 : type560 A B P) (P1 : type551 A B) (G2 : type557 A B P) (G1 : type548 A B) (f : A -> B) (H2 : type558 A B P) (_114084 : type794 A P) (s : P -> A) (H1 : type549 A B) (g : A -> B) (x : A) : (term1863 A B P lt2 P2 P1 G2 G1 f H2 _114084 s H1 g x) = (term1863 A B P lt2 P2 P1 G2 G1 f H2 _114084 s H1 g x).
Proof. exact (eq_refl (term1863 A B P lt2 P2 P1 G2 G1 f H2 _114084 s H1 g x)). Qed.
Lemma lem8369240 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (_114084 : type794 A P) (s : P -> A) (lt2 : type1402 A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (H1 : type549 A B) (g : A -> B) (x : A) : ((term1714 A B P lt2 P2 P1 G2 G1 f H2 _114084 s H1 g x) = (term1857 A B P P2 G2 H2 _114084 s lt2 P1 G1 f H1 g x)) = ((term1714 A B P lt2 P2 P1 G2 G1 f H2 _114084 s H1 g x) = (term1857 A B P P2 G2 H2 _114084 s lt2 P1 G1 f H1 g x)).
Proof. exact (MK_COMB (@lem8369239 A B P lt2 P2 P1 G2 G1 f H2 _114084 s H1 g x) (@lem8369238 A B P P2 G2 H2 _114084 s lt2 P1 G1 f H1 g x)). Qed.
Lemma lem8369241 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (_114084 : type794 A P) (s : P -> A) (lt2 : type1402 A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (H1 : type549 A B) (g : A -> B) (x : A) : (term1714 A B P lt2 P2 P1 G2 G1 f H2 _114084 s H1 g x) = (term1857 A B P P2 G2 H2 _114084 s lt2 P1 G1 f H1 g x).
Proof. exact (EQ_MP (@lem8369240 A B P P2 G2 H2 _114084 s lt2 P1 G1 f H1 g x) (@lem8369171 A B P P2 G2 H2 _114084 s lt2 P1 G1 f H1 g x)). Qed.
Lemma lem8369242 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (_114084 : type794 A P) (s : P -> A) (lt2 : type1402 A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (H1 : type549 A B) (g : A -> B) : (term1715 A B P lt2 P2 P1 G2 G1 f H2 _114084 s H1 g) = (term1864 A B P P2 G2 H2 _114084 s lt2 P1 G1 f H1 g).
Proof. exact (fun_ext (fun x : A => @lem8369241 A B P P2 G2 H2 _114084 s lt2 P1 G1 f H1 g x)). Qed.
Lemma lem8369243 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem8369244 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (_114084 : type794 A P) (s : P -> A) (lt2 : type1402 A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (H1 : type549 A B) (g : A -> B) : (term1716 A B P lt2 P2 P1 G2 G1 f H2 _114084 s H1 g) = (term1865 A B P P2 G2 H2 _114084 s lt2 P1 G1 f H1 g).
Proof. exact (MK_COMB (@lem8369243 A) (@lem8369242 A B P P2 G2 H2 _114084 s lt2 P1 G1 f H1 g)). Qed.
Lemma lem8369245 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (_114084 : type794 A P) (s : P -> A) (lt2 : type1402 A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (H1 : type549 A B) : (term1717 A B P lt2 P2 P1 G2 G1 f H2 _114084 s H1) = (term1866 A B P P2 G2 H2 _114084 s lt2 P1 G1 f H1).
Proof. exact (fun_ext (fun g : A -> B => @lem8369244 A B P P2 G2 H2 _114084 s lt2 P1 G1 f H1 g)). Qed.
Lemma lem8369246 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem8369247 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (_114084 : type794 A P) (s : P -> A) (lt2 : type1402 A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (H1 : type549 A B) : (term1718 A B P lt2 P2 P1 G2 G1 f H2 _114084 s H1) = (term1867 A B P P2 G2 H2 _114084 s lt2 P1 G1 f H1).
Proof. exact (MK_COMB (@lem8369246 A B) (@lem8369245 A B P P2 G2 H2 _114084 s lt2 P1 G1 f H1)). Qed.
Lemma lem8369248 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (_114084 : type794 A P) (s : P -> A) (lt2 : type1402 A) (P1 : type551 A B) (G1 : type548 A B) (H1 : type549 A B) : (term1719 A B P lt2 P2 P1 G2 G1 H2 _114084 s H1) = (term1868 A B P P2 G2 H2 _114084 s lt2 P1 G1 H1).
Proof. exact (fun_ext (fun f : A -> B => @lem8369247 A B P P2 G2 H2 _114084 s lt2 P1 G1 f H1)). Qed.
Lemma lem8369249 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem8369250 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (_114084 : type794 A P) (s : P -> A) (lt2 : type1402 A) (P1 : type551 A B) (G1 : type548 A B) (H1 : type549 A B) : (term1720 A B P lt2 P2 P1 G2 G1 H2 _114084 s H1) = (term1869 A B P P2 G2 H2 _114084 s lt2 P1 G1 H1).
Proof. exact (MK_COMB (@lem8369249 A B) (@lem8369248 A B P P2 G2 H2 _114084 s lt2 P1 G1 H1)). Qed.
Lemma lem8369251 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8369252 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (_114084 : type794 A P) (s : P -> A) (lt2 : type1402 A) (P1 : type551 A B) (G1 : type548 A B) (H1 : type549 A B) : (term1721 A B P lt2 P2 P1 G2 G1 H2 _114084 s H1) = (term1870 A B P P2 G2 H2 _114084 s lt2 P1 G1 H1).
Proof. exact (MK_COMB (@lem8369251) (@lem8369250 A B P P2 G2 H2 _114084 s lt2 P1 G1 H1)). Qed.
Lemma lem8369253 {A B P : Type'} (H2 : type558 A B P) (H1 : type549 A B) (P2 : type560 A B P) (G2 : type557 A B P) (_114084 : type794 A P) (s : P -> A) (P1 : type551 A B) (G1 : type548 A B) (lt2 : type1402 A) : (term1743 A B P lt2 P2 P1 G2 G1 H2 _114084 s H1) = (term1871 A B P H2 H1 P2 G2 _114084 s P1 G1 lt2).
Proof. exact (MK_COMB (@lem8369252 A B P P2 G2 H2 _114084 s lt2 P1 G1 H1) (@lem8368882 A B P H2 H1 P2 G2 _114084 s P1 G1 lt2)). Qed.
Lemma lem8369257 {A B P : Type'} (P2 : type560 A B P) (f : A -> B) (a : P) (h1 : (P2 f a) = False) : (P2 f a) = False.
Proof. exact (h1). Qed.
Lemma lem8369258 {B : Type'} : (@COND B) = (@COND B).
Proof. exact (eq_refl (@COND B)). Qed.
Lemma lem8369259 {A B P : Type'} (P2 : type560 A B P) (f : A -> B) (a : P) (h1 : (P2 f a) = False) : (term1872 A B P P2 f a) = (@COND B False).
Proof. exact (MK_COMB (@lem8369258 B) (@lem8369257 A B P P2 f a h1)). Qed.
Lemma lem8369260 {A B P : Type'} (G2 : type557 A B P) (f : A -> B) (a : P) : (term1873 A B P G2 f a) = (term1873 A B P G2 f a).
Proof. exact (eq_refl (term1873 A B P G2 f a)). Qed.
Lemma lem8369261 {A B P : Type'} (G2 : type557 A B P) (P2 : type560 A B P) (f : A -> B) (a : P) (h1 : (P2 f a) = False) : (term1874 A B P P2 G2 f a) = (term1875 A B P G2 f a).
Proof. exact (MK_COMB (@lem8369259 A B P P2 f a h1) (@lem8369260 A B P G2 f a)). Qed.
Lemma lem8369262 {A B P : Type'} (H2 : type558 A B P) (f : A -> B) (a : P) : (H2 f a) = (H2 f a).
Proof. exact (eq_refl (H2 f a)). Qed.
Lemma lem8369263 {A B P : Type'} (G2 : type557 A B P) (H2 : type558 A B P) (P2 : type560 A B P) (f : A -> B) (a : P) (h1 : (P2 f a) = False) : (term1428 A B P P2 G2 H2 f a) = (term1876 A B P G2 H2 f a).
Proof. exact (MK_COMB (@lem8369261 A B P G2 P2 f a h1) (@lem8369262 A B P H2 f a)). Qed.
Lemma lem8369265 {A : Type'} (t1 : A) (t2 : A) : (@COND A False t1 t2) = t2.
Proof. exact (proj2 (@lem12653 A t1 t2)). Qed.
Lemma lem8369266 {B : Type'} (t1 : B) (t2 : B) : (@COND B False t1 t2) = t2.
Proof. exact (@lem8369265 B t1 t2). Qed.
Lemma lem8369267 {A B P : Type'} (G2 : type557 A B P) (H2 : type558 A B P) (f : A -> B) (a : P) : (term1876 A B P G2 H2 f a) = (H2 f a).
Proof. exact (@lem8369266 B (term1873 A B P G2 f a) (H2 f a)). Qed.
Lemma lem8369268 {A B P : Type'} (G2 : type557 A B P) (H2 : type558 A B P) (P2 : type560 A B P) (f : A -> B) (a : P) (h1 : (P2 f a) = False) : (term1428 A B P P2 G2 H2 f a) = (H2 f a).
Proof. exact (TRANS (@lem8369263 A B P G2 H2 P2 f a h1) (@lem8369267 A B P G2 H2 f a)). Qed.
Lemma lem8369269 {A B P : Type'} (t : type558 A B P) (f : A -> B) (a : P) : (term1877 A B P t f a) = (term1877 A B P t f a).
Proof. exact (eq_refl (term1877 A B P t f a)). Qed.
Lemma lem8369270 {A B P : Type'} (G2 : type557 A B P) (t : type558 A B P) (H2 : type558 A B P) (P2 : type560 A B P) (f : A -> B) (a : P) (h1 : (P2 f a) = False) : ((t f a) = (term1428 A B P P2 G2 H2 f a)) = ((t f a) = (H2 f a)).
Proof. exact (MK_COMB (@lem8369269 A B P t f a) (@lem8369268 A B P G2 H2 P2 f a h1)). Qed.
Lemma lem8369273 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (t : type558 A B P) (H2 : type558 A B P) (f : A -> B) (a : P) : term1878 A B P P2 G2 t H2 f a.
Proof. exact (fun h0 : (P2 f a) = False => @lem8369270 A B P G2 t H2 P2 f a h0). Qed.
Lemma lem8369275 {A B P : Type'} (P2 : type560 A B P) (f : A -> B) (a : P) (h1 : (P2 f a) = True) : (P2 f a) = True.
Proof. exact (h1). Qed.
Lemma lem8369276 {B : Type'} : (@COND B) = (@COND B).
Proof. exact (eq_refl (@COND B)). Qed.
Lemma lem8369277 {A B P : Type'} (P2 : type560 A B P) (f : A -> B) (a : P) (h1 : (P2 f a) = True) : (term1872 A B P P2 f a) = (@COND B True).
Proof. exact (MK_COMB (@lem8369276 B) (@lem8369275 A B P P2 f a h1)). Qed.
Lemma lem8369278 {A B P : Type'} (G2 : type557 A B P) (f : A -> B) (a : P) : (term1873 A B P G2 f a) = (term1873 A B P G2 f a).
Proof. exact (eq_refl (term1873 A B P G2 f a)). Qed.
Lemma lem8369279 {A B P : Type'} (G2 : type557 A B P) (P2 : type560 A B P) (f : A -> B) (a : P) (h1 : (P2 f a) = True) : (term1874 A B P P2 G2 f a) = (term1879 A B P G2 f a).
Proof. exact (MK_COMB (@lem8369277 A B P P2 f a h1) (@lem8369278 A B P G2 f a)). Qed.
Lemma lem8369280 {A B P : Type'} (H2 : type558 A B P) (f : A -> B) (a : P) : (H2 f a) = (H2 f a).
Proof. exact (eq_refl (H2 f a)). Qed.
Lemma lem8369281 {A B P : Type'} (G2 : type557 A B P) (H2 : type558 A B P) (P2 : type560 A B P) (f : A -> B) (a : P) (h1 : (P2 f a) = True) : (term1428 A B P P2 G2 H2 f a) = (term1880 A B P G2 H2 f a).
Proof. exact (MK_COMB (@lem8369279 A B P G2 P2 f a h1) (@lem8369280 A B P H2 f a)). Qed.
Lemma lem8369283 {A : Type'} (t2 : A) (t1 : A) : (@COND A True t1 t2) = t1.
Proof. exact (proj1 (@lem12653 A t1 t2)). Qed.
Lemma lem8369284 {B : Type'} (t2 : B) (t1 : B) : (@COND B True t1 t2) = t1.
Proof. exact (@lem8369283 B t2 t1). Qed.
Lemma lem8369285 {A B P : Type'} (H2 : type558 A B P) (G2 : type557 A B P) (f : A -> B) (a : P) : (term1880 A B P G2 H2 f a) = (term1873 A B P G2 f a).
Proof. exact (@lem8369284 B (H2 f a) (term1873 A B P G2 f a)). Qed.
Lemma lem8369286 {A B P : Type'} (H2 : type558 A B P) (G2 : type557 A B P) (P2 : type560 A B P) (f : A -> B) (a : P) (h1 : (P2 f a) = True) : (term1428 A B P P2 G2 H2 f a) = (term1873 A B P G2 f a).
Proof. exact (TRANS (@lem8369281 A B P G2 H2 P2 f a h1) (@lem8369285 A B P H2 G2 f a)). Qed.
Lemma lem8369287 {A B P : Type'} (t : type558 A B P) (f : A -> B) (a : P) : (term1877 A B P t f a) = (term1877 A B P t f a).
Proof. exact (eq_refl (term1877 A B P t f a)). Qed.
Lemma lem8369288 {A B P : Type'} (H2 : type558 A B P) (t : type558 A B P) (G2 : type557 A B P) (P2 : type560 A B P) (f : A -> B) (a : P) (h1 : (P2 f a) = True) : ((t f a) = (term1428 A B P P2 G2 H2 f a)) = ((t f a) = (term1873 A B P G2 f a)).
Proof. exact (MK_COMB (@lem8369287 A B P t f a) (@lem8369286 A B P H2 G2 P2 f a h1)). Qed.
Lemma lem8369291 {A B P : Type'} (P2 : type560 A B P) (H2 : type558 A B P) (t : type558 A B P) (G2 : type557 A B P) (f : A -> B) (a : P) : term1881 A B P P2 H2 t G2 f a.
Proof. exact (fun h0 : (P2 f a) = True => @lem8369288 A B P H2 t G2 P2 f a h0). Qed.
Lemma lem8369292 {A B P : Type'} (P2 : type560 A B P) (H2 : type558 A B P) (t : type558 A B P) (G2 : type557 A B P) (f : A -> B) (a : P) : term1882 A B P P2 H2 t G2 f a.
Proof. exact (conj (@lem8369273 A B P P2 G2 t H2 f a) (@lem8369291 A B P P2 H2 t G2 f a)). Qed.
Lemma lem8369294 (x : Prop) (x1 : Prop) (b : Prop) (x0 : Prop) : term119 x x1 b x0.
Proof. exact (or_elim (@lem20425 b) (fun h0 : b = True => @lem20612 x x1 x0 b h0) (fun h0 : b = False => @lem20611 x x1 x0 b h0)). Qed.
Lemma lem8369295 {A B P : Type'} (G2 : type557 A B P) (P2 : type560 A B P) (t : type558 A B P) (H2 : type558 A B P) (f : A -> B) (a : P) : term1883 A B P G2 P2 t H2 f a.
Proof. exact (@lem8369294 ((t f a) = (term1428 A B P P2 G2 H2 f a)) ((t f a) = (term1873 A B P G2 f a)) (P2 f a) ((t f a) = (H2 f a))). Qed.
Lemma lem8369328 {A B P : Type'} (G2 : type557 A B P) (P2 : type560 A B P) (t : type558 A B P) (H2 : type558 A B P) (f : A -> B) (a : P) : ((t f a) = (term1428 A B P P2 G2 H2 f a)) = (term1884 A B P G2 P2 t H2 f a).
Proof. exact (@lem8369295 A B P G2 P2 t H2 f a (@lem8369292 A B P P2 H2 t G2 f a)). Qed.
Lemma lem8369329 {A B P : Type'} (G2 : type557 A B P) (P2 : type560 A B P) (t : type558 A B P) (H2 : type558 A B P) (f : A -> B) : (term1885 A B P t P2 G2 H2 f) = (term1886 A B P G2 P2 t H2 f).
Proof. exact (fun_ext (fun a : P => @lem8369328 A B P G2 P2 t H2 f a)). Qed.
Lemma lem8369330 {P : Type'} : (@all P) = (@all P).
Proof. exact (eq_refl (@all P)). Qed.
Lemma lem8369331 {A B P : Type'} (G2 : type557 A B P) (P2 : type560 A B P) (t : type558 A B P) (H2 : type558 A B P) (f : A -> B) : (term1426 A B P t P2 G2 H2 f) = (term1887 A B P G2 P2 t H2 f).
Proof. exact (MK_COMB (@lem8369330 P) (@lem8369329 A B P G2 P2 t H2 f)). Qed.
Lemma lem8369332 {A B P : Type'} (G2 : type557 A B P) (P2 : type560 A B P) (t : type558 A B P) (H2 : type558 A B P) : (term1888 A B P t P2 G2 H2) = (term1889 A B P G2 P2 t H2).
Proof. exact (fun_ext (fun f : A -> B => @lem8369331 A B P G2 P2 t H2 f)). Qed.
Lemma lem8369333 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem8369334 {A B P : Type'} (G2 : type557 A B P) (P2 : type560 A B P) (t : type558 A B P) (H2 : type558 A B P) : (term1421 A B P t P2 G2 H2) = (term1890 A B P G2 P2 t H2).
Proof. exact (MK_COMB (@lem8369333 A B) (@lem8369332 A B P G2 P2 t H2)). Qed.
Lemma lem8369335 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem8369336 {A B P : Type'} (G2 : type557 A B P) (P2 : type560 A B P) (t : type558 A B P) (H2 : type558 A B P) : (term1623 A B P t P2 G2 H2) = (term1891 A B P G2 P2 t H2).
Proof. exact (MK_COMB (@lem8369335) (@lem8369334 A B P G2 P2 t H2)). Qed.
Lemma lem8369337 {A B P : Type'} (t : type558 A B P) (H2 : type558 A B P) (H1 : type549 A B) (P2 : type560 A B P) (G2 : type557 A B P) (_114084 : type794 A P) (s : P -> A) (P1 : type551 A B) (G1 : type548 A B) (lt2 : type1402 A) : (term1744 A B P t lt2 P2 P1 G2 G1 H2 _114084 s H1) = (term1892 A B P t H2 H1 P2 G2 _114084 s P1 G1 lt2).
Proof. exact (MK_COMB (@lem8369336 A B P G2 P2 t H2) (@lem8369253 A B P H2 H1 P2 G2 _114084 s P1 G1 lt2)). Qed.
Lemma lem8369350 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term1893 A B P P2 G2 f H2 g a) = (term1893 A B P P2 G2 f H2 g a).
Proof. exact (eq_refl (term1893 A B P P2 G2 f H2 g a)). Qed.
Lemma lem8369355 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) (z : A) : (term1894 A B P lt2 s a f g z) = (term1894 A B P lt2 s a f g z).
Proof. exact (eq_refl (term1894 A B P lt2 s a f g z)). Qed.
Lemma lem8369356 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) : (term1895 A B P lt2 s a f g) = (term1895 A B P lt2 s a f g).
Proof. exact (fun_ext (fun z : A => @lem8369355 A B P lt2 s a f g z)). Qed.
Lemma lem8369357 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem8369358 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) : (term1896 A B P lt2 s a f g) = (term1896 A B P lt2 s a f g).
Proof. exact (MK_COMB (@lem8369357 A) (@lem8369356 A B P lt2 s a f g)). Qed.
Lemma lem8369359 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem8369360 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) : (term1897 A B P lt2 s a f g) = (term1897 A B P lt2 s a f g).
Proof. exact (MK_COMB (@lem8369359) (@lem8369358 A B P lt2 s a f g)). Qed.
Lemma lem8369361 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term1898 A B P lt2 s P2 G2 f H2 g a) = (term1898 A B P lt2 s P2 G2 f H2 g a).
Proof. exact (MK_COMB (@lem8369360 A B P lt2 s a f g) (@lem8369350 A B P P2 G2 f H2 g a)). Qed.
Lemma lem8369362 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) : (term1899 A B P lt2 s P2 G2 f H2 g) = (term1899 A B P lt2 s P2 G2 f H2 g).
Proof. exact (fun_ext (fun a : P => @lem8369361 A B P lt2 s P2 G2 f H2 g a)). Qed.
Lemma lem8369363 {P : Type'} : (@all P) = (@all P).
Proof. exact (eq_refl (@all P)). Qed.
Lemma lem8369364 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) : (term1900 A B P lt2 s P2 G2 f H2 g) = (term1900 A B P lt2 s P2 G2 f H2 g).
Proof. exact (MK_COMB (@lem8369363 P) (@lem8369362 A B P lt2 s P2 G2 f H2 g)). Qed.
Lemma lem8369365 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) : (term1901 A B P lt2 s P2 G2 f H2) = (term1901 A B P lt2 s P2 G2 f H2).
Proof. exact (fun_ext (fun g : A -> B => @lem8369364 A B P lt2 s P2 G2 f H2 g)). Qed.
Lemma lem8369366 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem8369367 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) : (term1902 A B P lt2 s P2 G2 f H2) = (term1902 A B P lt2 s P2 G2 f H2).
Proof. exact (MK_COMB (@lem8369366 A B) (@lem8369365 A B P lt2 s P2 G2 f H2)). Qed.
Lemma lem8369368 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) : (term1903 A B P lt2 s P2 G2 H2) = (term1903 A B P lt2 s P2 G2 H2).
Proof. exact (fun_ext (fun f : A -> B => @lem8369367 A B P lt2 s P2 G2 f H2)). Qed.
Lemma lem8369369 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem8369370 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) : (term1422 A B P lt2 s P2 G2 H2) = (term1422 A B P lt2 s P2 G2 H2).
Proof. exact (MK_COMB (@lem8369369 A B) (@lem8369368 A B P lt2 s P2 G2 H2)). Qed.
Lemma lem8369371 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem8369372 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) : (term1626 A B P lt2 s P2 G2 H2) = (term1626 A B P lt2 s P2 G2 H2).
Proof. exact (MK_COMB (@lem8369371) (@lem8369370 A B P lt2 s P2 G2 H2)). Qed.
Lemma lem8369373 {A B P : Type'} (t : type558 A B P) (H2 : type558 A B P) (H1 : type549 A B) (P2 : type560 A B P) (G2 : type557 A B P) (_114084 : type794 A P) (s : P -> A) (P1 : type551 A B) (G1 : type548 A B) (lt2 : type1402 A) : (term1745 A B P t lt2 P2 P1 G2 G1 H2 _114084 s H1) = (term1904 A B P t H2 H1 P2 G2 _114084 s P1 G1 lt2).
Proof. exact (MK_COMB (@lem8369372 A B P lt2 s P2 G2 H2) (@lem8369337 A B P t H2 H1 P2 G2 _114084 s P1 G1 lt2)). Qed.
Lemma lem8369382 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (lt2 : type1402 A) (y : A) (s : P -> A) (a : P) : (term1905 A B P P2 G2 f lt2 y s a) = (term1905 A B P P2 G2 f lt2 y s a).
Proof. exact (eq_refl (term1905 A B P P2 G2 f lt2 y s a)). Qed.
Lemma lem8369383 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (lt2 : type1402 A) (s : P -> A) (a : P) : (term1906 A B P P2 G2 f lt2 s a) = (term1906 A B P P2 G2 f lt2 s a).
Proof. exact (fun_ext (fun y : A => @lem8369382 A B P P2 G2 f lt2 y s a)). Qed.
Lemma lem8369384 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem8369385 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (lt2 : type1402 A) (s : P -> A) (a : P) : (term1907 A B P P2 G2 f lt2 s a) = (term1907 A B P P2 G2 f lt2 s a).
Proof. exact (MK_COMB (@lem8369384 A) (@lem8369383 A B P P2 G2 f lt2 s a)). Qed.
Lemma lem8369386 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (lt2 : type1402 A) (s : P -> A) : (term1908 A B P P2 G2 f lt2 s) = (term1908 A B P P2 G2 f lt2 s).
Proof. exact (fun_ext (fun a : P => @lem8369385 A B P P2 G2 f lt2 s a)). Qed.
Lemma lem8369387 {P : Type'} : (@all P) = (@all P).
Proof. exact (eq_refl (@all P)). Qed.
Lemma lem8369388 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (lt2 : type1402 A) (s : P -> A) : (term1909 A B P P2 G2 f lt2 s) = (term1909 A B P P2 G2 f lt2 s).
Proof. exact (MK_COMB (@lem8369387 P) (@lem8369386 A B P P2 G2 f lt2 s)). Qed.
Lemma lem8369389 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (lt2 : type1402 A) (s : P -> A) : (term1910 A B P P2 G2 lt2 s) = (term1910 A B P P2 G2 lt2 s).
Proof. exact (fun_ext (fun f : A -> B => @lem8369388 A B P P2 G2 f lt2 s)). Qed.
Lemma lem8369390 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem8369391 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (lt2 : type1402 A) (s : P -> A) : (term1420 A B P P2 G2 lt2 s) = (term1420 A B P P2 G2 lt2 s).
Proof. exact (MK_COMB (@lem8369390 A B) (@lem8369389 A B P P2 G2 lt2 s)). Qed.
Lemma lem8369392 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem8369393 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (lt2 : type1402 A) (s : P -> A) : (term1629 A B P P2 G2 lt2 s) = (term1629 A B P P2 G2 lt2 s).
Proof. exact (MK_COMB (@lem8369392) (@lem8369391 A B P P2 G2 lt2 s)). Qed.
Lemma lem8369394 {A B P : Type'} (t : type558 A B P) (H2 : type558 A B P) (H1 : type549 A B) (P2 : type560 A B P) (G2 : type557 A B P) (_114084 : type794 A P) (s : P -> A) (P1 : type551 A B) (G1 : type548 A B) (lt2 : type1402 A) : (term1746 A B P t lt2 P2 P1 G2 G1 H2 _114084 s H1) = (term1911 A B P t H2 H1 P2 G2 _114084 s P1 G1 lt2).
Proof. exact (MK_COMB (@lem8369393 A B P P2 G2 lt2 s) (@lem8369373 A B P t H2 H1 P2 G2 _114084 s P1 G1 lt2)). Qed.
Lemma lem8369398 {A B : Type'} (P1 : type551 A B) (f : A -> B) (x : A) (h1 : (P1 f x) = False) : (P1 f x) = False.
Proof. exact (h1). Qed.
Lemma lem8369399 {B : Type'} : (@COND B) = (@COND B).
Proof. exact (eq_refl (@COND B)). Qed.
Lemma lem8369400 {A B : Type'} (P1 : type551 A B) (f : A -> B) (x : A) (h1 : (P1 f x) = False) : (term1779 A B P1 f x) = (@COND B False).
Proof. exact (MK_COMB (@lem8369399 B) (@lem8369398 A B P1 f x h1)). Qed.
Lemma lem8369401 {A B : Type'} (G1 : type548 A B) (f : A -> B) (x : A) : (term1782 A B G1 f x) = (term1782 A B G1 f x).
Proof. exact (eq_refl (term1782 A B G1 f x)). Qed.
Lemma lem8369402 {A B : Type'} (G1 : type548 A B) (P1 : type551 A B) (f : A -> B) (x : A) (h1 : (P1 f x) = False) : (term1783 A B P1 G1 f x) = (term1912 A B G1 f x).
Proof. exact (MK_COMB (@lem8369400 A B P1 f x h1) (@lem8369401 A B G1 f x)). Qed.
Lemma lem8369403 {A B : Type'} (H1 : type549 A B) (f : A -> B) (x : A) : (H1 f x) = (H1 f x).
Proof. exact (eq_refl (H1 f x)). Qed.
Lemma lem8369404 {A B : Type'} (G1 : type548 A B) (H1 : type549 A B) (P1 : type551 A B) (f : A -> B) (x : A) (h1 : (P1 f x) = False) : (term908 A B P1 G1 H1 f x) = (term1913 A B G1 H1 f x).
Proof. exact (MK_COMB (@lem8369402 A B G1 P1 f x h1) (@lem8369403 A B H1 f x)). Qed.
Lemma lem8369406 {A : Type'} (t1 : A) (t2 : A) : (@COND A False t1 t2) = t2.
Proof. exact (proj2 (@lem12653 A t1 t2)). Qed.
Lemma lem8369407 {B : Type'} (t1 : B) (t2 : B) : (@COND B False t1 t2) = t2.
Proof. exact (@lem8369406 B t1 t2). Qed.
Lemma lem8369408 {A B : Type'} (G1 : type548 A B) (H1 : type549 A B) (f : A -> B) (x : A) : (term1913 A B G1 H1 f x) = (H1 f x).
Proof. exact (@lem8369407 B (term1782 A B G1 f x) (H1 f x)). Qed.
Lemma lem8369409 {A B : Type'} (G1 : type548 A B) (H1 : type549 A B) (P1 : type551 A B) (f : A -> B) (x : A) (h1 : (P1 f x) = False) : (term908 A B P1 G1 H1 f x) = (H1 f x).
Proof. exact (TRANS (@lem8369404 A B G1 H1 P1 f x h1) (@lem8369408 A B G1 H1 f x)). Qed.
Lemma lem8369410 {A B P : Type'} (clauses : type1635 A B P) (f : A -> B) (x : A) : (term907 A B P clauses f x) = (term907 A B P clauses f x).
Proof. exact (eq_refl (term907 A B P clauses f x)). Qed.
Lemma lem8369411 {A B P : Type'} (G1 : type548 A B) (clauses : type1635 A B P) (H1 : type549 A B) (P1 : type551 A B) (f : A -> B) (x : A) (h1 : (P1 f x) = False) : ((@CASEWISE B P A (A -> B) clauses f x) = (term908 A B P1 G1 H1 f x)) = ((@CASEWISE B P A (A -> B) clauses f x) = (H1 f x)).
Proof. exact (MK_COMB (@lem8369410 A B P clauses f x) (@lem8369409 A B G1 H1 P1 f x h1)). Qed.
Lemma lem8369414 {A B P : Type'} (P1 : type551 A B) (G1 : type548 A B) (clauses : type1635 A B P) (H1 : type549 A B) (f : A -> B) (x : A) : term1914 A B P P1 G1 clauses H1 f x.
Proof. exact (fun h0 : (P1 f x) = False => @lem8369411 A B P G1 clauses H1 P1 f x h0). Qed.
Lemma lem8369416 {A B : Type'} (P1 : type551 A B) (f : A -> B) (x : A) (h1 : (P1 f x) = True) : (P1 f x) = True.
Proof. exact (h1). Qed.
Lemma lem8369417 {B : Type'} : (@COND B) = (@COND B).
Proof. exact (eq_refl (@COND B)). Qed.
Lemma lem8369418 {A B : Type'} (P1 : type551 A B) (f : A -> B) (x : A) (h1 : (P1 f x) = True) : (term1779 A B P1 f x) = (@COND B True).
Proof. exact (MK_COMB (@lem8369417 B) (@lem8369416 A B P1 f x h1)). Qed.
Lemma lem8369419 {A B : Type'} (G1 : type548 A B) (f : A -> B) (x : A) : (term1782 A B G1 f x) = (term1782 A B G1 f x).
Proof. exact (eq_refl (term1782 A B G1 f x)). Qed.
Lemma lem8369420 {A B : Type'} (G1 : type548 A B) (P1 : type551 A B) (f : A -> B) (x : A) (h1 : (P1 f x) = True) : (term1783 A B P1 G1 f x) = (term1915 A B G1 f x).
Proof. exact (MK_COMB (@lem8369418 A B P1 f x h1) (@lem8369419 A B G1 f x)). Qed.
Lemma lem8369421 {A B : Type'} (H1 : type549 A B) (f : A -> B) (x : A) : (H1 f x) = (H1 f x).
Proof. exact (eq_refl (H1 f x)). Qed.
Lemma lem8369422 {A B : Type'} (G1 : type548 A B) (H1 : type549 A B) (P1 : type551 A B) (f : A -> B) (x : A) (h1 : (P1 f x) = True) : (term908 A B P1 G1 H1 f x) = (term1916 A B G1 H1 f x).
Proof. exact (MK_COMB (@lem8369420 A B G1 P1 f x h1) (@lem8369421 A B H1 f x)). Qed.
Lemma lem8369424 {A : Type'} (t2 : A) (t1 : A) : (@COND A True t1 t2) = t1.
Proof. exact (proj1 (@lem12653 A t1 t2)). Qed.
Lemma lem8369425 {B : Type'} (t2 : B) (t1 : B) : (@COND B True t1 t2) = t1.
Proof. exact (@lem8369424 B t2 t1). Qed.
Lemma lem8369426 {A B : Type'} (H1 : type549 A B) (G1 : type548 A B) (f : A -> B) (x : A) : (term1916 A B G1 H1 f x) = (term1782 A B G1 f x).
Proof. exact (@lem8369425 B (H1 f x) (term1782 A B G1 f x)). Qed.
Lemma lem8369427 {A B : Type'} (H1 : type549 A B) (G1 : type548 A B) (P1 : type551 A B) (f : A -> B) (x : A) (h1 : (P1 f x) = True) : (term908 A B P1 G1 H1 f x) = (term1782 A B G1 f x).
Proof. exact (TRANS (@lem8369422 A B G1 H1 P1 f x h1) (@lem8369426 A B H1 G1 f x)). Qed.
Lemma lem8369428 {A B P : Type'} (clauses : type1635 A B P) (f : A -> B) (x : A) : (term907 A B P clauses f x) = (term907 A B P clauses f x).
Proof. exact (eq_refl (term907 A B P clauses f x)). Qed.
Lemma lem8369429 {A B P : Type'} (H1 : type549 A B) (clauses : type1635 A B P) (G1 : type548 A B) (P1 : type551 A B) (f : A -> B) (x : A) (h1 : (P1 f x) = True) : ((@CASEWISE B P A (A -> B) clauses f x) = (term908 A B P1 G1 H1 f x)) = ((@CASEWISE B P A (A -> B) clauses f x) = (term1782 A B G1 f x)).
Proof. exact (MK_COMB (@lem8369428 A B P clauses f x) (@lem8369427 A B H1 G1 P1 f x h1)). Qed.
Lemma lem8369432 {A B P : Type'} (P1 : type551 A B) (H1 : type549 A B) (clauses : type1635 A B P) (G1 : type548 A B) (f : A -> B) (x : A) : term1917 A B P P1 H1 clauses G1 f x.
Proof. exact (fun h0 : (P1 f x) = True => @lem8369429 A B P H1 clauses G1 P1 f x h0). Qed.
Lemma lem8369433 {A B P : Type'} (P1 : type551 A B) (H1 : type549 A B) (clauses : type1635 A B P) (G1 : type548 A B) (f : A -> B) (x : A) : term1918 A B P P1 H1 clauses G1 f x.
Proof. exact (conj (@lem8369414 A B P P1 G1 clauses H1 f x) (@lem8369432 A B P P1 H1 clauses G1 f x)). Qed.
Lemma lem8369435 (x : Prop) (x1 : Prop) (b : Prop) (x0 : Prop) : term119 x x1 b x0.
Proof. exact (or_elim (@lem20425 b) (fun h0 : b = True => @lem20612 x x1 x0 b h0) (fun h0 : b = False => @lem20611 x x1 x0 b h0)). Qed.
Lemma lem8369436 {A B P : Type'} (G1 : type548 A B) (P1 : type551 A B) (clauses : type1635 A B P) (H1 : type549 A B) (f : A -> B) (x : A) : term1919 A B P G1 P1 clauses H1 f x.
Proof. exact (@lem8369435 ((@CASEWISE B P A (A -> B) clauses f x) = (term908 A B P1 G1 H1 f x)) ((@CASEWISE B P A (A -> B) clauses f x) = (term1782 A B G1 f x)) (P1 f x) ((@CASEWISE B P A (A -> B) clauses f x) = (H1 f x))). Qed.
Lemma lem8369469 {A B P : Type'} (G1 : type548 A B) (P1 : type551 A B) (clauses : type1635 A B P) (H1 : type549 A B) (f : A -> B) (x : A) : ((@CASEWISE B P A (A -> B) clauses f x) = (term908 A B P1 G1 H1 f x)) = (term1920 A B P G1 P1 clauses H1 f x).
Proof. exact (@lem8369436 A B P G1 P1 clauses H1 f x (@lem8369433 A B P P1 H1 clauses G1 f x)). Qed.
Lemma lem8369470 {A B P : Type'} (G1 : type548 A B) (P1 : type551 A B) (clauses : type1635 A B P) (H1 : type549 A B) (f : A -> B) : (term910 A B P clauses P1 G1 H1 f) = (term1921 A B P G1 P1 clauses H1 f).
Proof. exact (fun_ext (fun x : A => @lem8369469 A B P G1 P1 clauses H1 f x)). Qed.
Lemma lem8369471 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem8369472 {A B P : Type'} (G1 : type548 A B) (P1 : type551 A B) (clauses : type1635 A B P) (H1 : type549 A B) (f : A -> B) : (term912 A B P clauses P1 G1 H1 f) = (term1922 A B P G1 P1 clauses H1 f).
Proof. exact (MK_COMB (@lem8369471 A) (@lem8369470 A B P G1 P1 clauses H1 f)). Qed.
Lemma lem8369473 {A B P : Type'} (G1 : type548 A B) (P1 : type551 A B) (clauses : type1635 A B P) (H1 : type549 A B) : (term914 A B P clauses P1 G1 H1) = (term1923 A B P G1 P1 clauses H1).
Proof. exact (fun_ext (fun f : A -> B => @lem8369472 A B P G1 P1 clauses H1 f)). Qed.
Lemma lem8369474 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem8369475 {A B P : Type'} (G1 : type548 A B) (P1 : type551 A B) (clauses : type1635 A B P) (H1 : type549 A B) : (term916 A B P clauses P1 G1 H1) = (term1924 A B P G1 P1 clauses H1).
Proof. exact (MK_COMB (@lem8369474 A B) (@lem8369473 A B P G1 P1 clauses H1)). Qed.
Lemma lem8369476 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem8369477 {A B P : Type'} (G1 : type548 A B) (P1 : type551 A B) (clauses : type1635 A B P) (H1 : type549 A B) : (term1632 A B P clauses P1 G1 H1) = (term1925 A B P G1 P1 clauses H1).
Proof. exact (MK_COMB (@lem8369476) (@lem8369475 A B P G1 P1 clauses H1)). Qed.
Lemma lem8369478 {A B P : Type'} (clauses : type1635 A B P) (t : type558 A B P) (H2 : type558 A B P) (H1 : type549 A B) (P2 : type560 A B P) (G2 : type557 A B P) (_114084 : type794 A P) (s : P -> A) (P1 : type551 A B) (G1 : type548 A B) (lt2 : type1402 A) : (term1747 A B P clauses t lt2 P2 P1 G2 G1 H2 _114084 s H1) = (term1926 A B P clauses t H2 H1 P2 G2 _114084 s P1 G1 lt2).
Proof. exact (MK_COMB (@lem8369477 A B P G1 P1 clauses H1) (@lem8369394 A B P t H2 H1 P2 G2 _114084 s P1 G1 lt2)). Qed.
Lemma lem8369487 {A B : Type'} (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (lt2 : type1402 A) (y : A) (x : A) : (term1810 A B P1 G1 f lt2 y x) = (term1810 A B P1 G1 f lt2 y x).
Proof. exact (eq_refl (term1810 A B P1 G1 f lt2 y x)). Qed.
Lemma lem8369488 {A B : Type'} (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (lt2 : type1402 A) (x : A) : (term1811 A B P1 G1 f lt2 x) = (term1811 A B P1 G1 f lt2 x).
Proof. exact (fun_ext (fun y : A => @lem8369487 A B P1 G1 f lt2 y x)). Qed.
Lemma lem8369489 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem8369490 {A B : Type'} (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (lt2 : type1402 A) (x : A) : (term1812 A B P1 G1 f lt2 x) = (term1812 A B P1 G1 f lt2 x).
Proof. exact (MK_COMB (@lem8369489 A) (@lem8369488 A B P1 G1 f lt2 x)). Qed.
Lemma lem8369491 {A B : Type'} (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (lt2 : type1402 A) : (term1927 A B P1 G1 f lt2) = (term1927 A B P1 G1 f lt2).
Proof. exact (fun_ext (fun x : A => @lem8369490 A B P1 G1 f lt2 x)). Qed.
Lemma lem8369492 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem8369493 {A B : Type'} (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (lt2 : type1402 A) : (term1928 A B P1 G1 f lt2) = (term1928 A B P1 G1 f lt2).
Proof. exact (MK_COMB (@lem8369492 A) (@lem8369491 A B P1 G1 f lt2)). Qed.
Lemma lem8369494 {A B : Type'} (P1 : type551 A B) (G1 : type548 A B) (lt2 : type1402 A) : (term1929 A B P1 G1 lt2) = (term1929 A B P1 G1 lt2).
Proof. exact (fun_ext (fun f : A -> B => @lem8369493 A B P1 G1 f lt2)). Qed.
Lemma lem8369495 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem8369496 {A B : Type'} (P1 : type551 A B) (G1 : type548 A B) (lt2 : type1402 A) : (term1418 A B P1 G1 lt2) = (term1418 A B P1 G1 lt2).
Proof. exact (MK_COMB (@lem8369495 A B) (@lem8369494 A B P1 G1 lt2)). Qed.
Lemma lem8369497 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem8369498 {A B : Type'} (P1 : type551 A B) (G1 : type548 A B) (lt2 : type1402 A) : (term1635 A B P1 G1 lt2) = (term1635 A B P1 G1 lt2).
Proof. exact (MK_COMB (@lem8369497) (@lem8369496 A B P1 G1 lt2)). Qed.
Lemma lem8369499 {A B P : Type'} (clauses : type1635 A B P) (t : type558 A B P) (H2 : type558 A B P) (H1 : type549 A B) (P2 : type560 A B P) (G2 : type557 A B P) (_114084 : type794 A P) (s : P -> A) (P1 : type551 A B) (G1 : type548 A B) (lt2 : type1402 A) : (term1748 A B P clauses t lt2 P2 P1 G2 G1 H2 _114084 s H1) = (term1930 A B P clauses t H2 H1 P2 G2 _114084 s P1 G1 lt2).
Proof. exact (MK_COMB (@lem8369498 A B P1 G1 lt2) (@lem8369478 A B P clauses t H2 H1 P2 G2 _114084 s P1 G1 lt2)). Qed.
Lemma lem8369512 {A B : Type'} (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (H1 : type549 A B) (g : A -> B) (x : A) : (term1843 A B P1 G1 f H1 g x) = (term1843 A B P1 G1 f H1 g x).
Proof. exact (eq_refl (term1843 A B P1 G1 f H1 g x)). Qed.
Lemma lem8369517 {A B : Type'} (lt2 : type1402 A) (x : A) (f : A -> B) (g : A -> B) (z : A) : (term1858 A B lt2 x f g z) = (term1858 A B lt2 x f g z).
Proof. exact (eq_refl (term1858 A B lt2 x f g z)). Qed.
Lemma lem8369518 {A B : Type'} (lt2 : type1402 A) (x : A) (f : A -> B) (g : A -> B) : (term1859 A B lt2 x f g) = (term1859 A B lt2 x f g).
Proof. exact (fun_ext (fun z : A => @lem8369517 A B lt2 x f g z)). Qed.
Lemma lem8369519 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem8369520 {A B : Type'} (lt2 : type1402 A) (x : A) (f : A -> B) (g : A -> B) : (term1193 A B lt2 x f g) = (term1193 A B lt2 x f g).
Proof. exact (MK_COMB (@lem8369519 A) (@lem8369518 A B lt2 x f g)). Qed.
Lemma lem8369521 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem8369522 {A B : Type'} (lt2 : type1402 A) (x : A) (f : A -> B) (g : A -> B) : (term1190 A B lt2 x f g) = (term1190 A B lt2 x f g).
Proof. exact (MK_COMB (@lem8369521) (@lem8369520 A B lt2 x f g)). Qed.
Lemma lem8369523 {A B : Type'} (lt2 : type1402 A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (H1 : type549 A B) (g : A -> B) (x : A) : (term1844 A B lt2 P1 G1 f H1 g x) = (term1844 A B lt2 P1 G1 f H1 g x).
Proof. exact (MK_COMB (@lem8369522 A B lt2 x f g) (@lem8369512 A B P1 G1 f H1 g x)). Qed.
Lemma lem8369524 {A B : Type'} (lt2 : type1402 A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (H1 : type549 A B) (g : A -> B) : (term1931 A B lt2 P1 G1 f H1 g) = (term1931 A B lt2 P1 G1 f H1 g).
Proof. exact (fun_ext (fun x : A => @lem8369523 A B lt2 P1 G1 f H1 g x)). Qed.
Lemma lem8369525 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem8369526 {A B : Type'} (lt2 : type1402 A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (H1 : type549 A B) (g : A -> B) : (term1932 A B lt2 P1 G1 f H1 g) = (term1932 A B lt2 P1 G1 f H1 g).
Proof. exact (MK_COMB (@lem8369525 A) (@lem8369524 A B lt2 P1 G1 f H1 g)). Qed.
Lemma lem8369527 {A B : Type'} (lt2 : type1402 A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (H1 : type549 A B) : (term1933 A B lt2 P1 G1 f H1) = (term1933 A B lt2 P1 G1 f H1).
Proof. exact (fun_ext (fun g : A -> B => @lem8369526 A B lt2 P1 G1 f H1 g)). Qed.
Lemma lem8369528 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem8369529 {A B : Type'} (lt2 : type1402 A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (H1 : type549 A B) : (term1934 A B lt2 P1 G1 f H1) = (term1934 A B lt2 P1 G1 f H1).
Proof. exact (MK_COMB (@lem8369528 A B) (@lem8369527 A B lt2 P1 G1 f H1)). Qed.
Lemma lem8369530 {A B : Type'} (lt2 : type1402 A) (P1 : type551 A B) (G1 : type548 A B) (H1 : type549 A B) : (term1935 A B lt2 P1 G1 H1) = (term1935 A B lt2 P1 G1 H1).
Proof. exact (fun_ext (fun f : A -> B => @lem8369529 A B lt2 P1 G1 f H1)). Qed.
Lemma lem8369531 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem8369532 {A B : Type'} (lt2 : type1402 A) (P1 : type551 A B) (G1 : type548 A B) (H1 : type549 A B) : (term1417 A B lt2 P1 G1 H1) = (term1417 A B lt2 P1 G1 H1).
Proof. exact (MK_COMB (@lem8369531 A B) (@lem8369530 A B lt2 P1 G1 H1)). Qed.
Lemma lem8369533 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem8369534 {A B : Type'} (lt2 : type1402 A) (P1 : type551 A B) (G1 : type548 A B) (H1 : type549 A B) : (term1638 A B lt2 P1 G1 H1) = (term1638 A B lt2 P1 G1 H1).
Proof. exact (MK_COMB (@lem8369533) (@lem8369532 A B lt2 P1 G1 H1)). Qed.
Lemma lem8369535 {A B P : Type'} (clauses : type1635 A B P) (t : type558 A B P) (H2 : type558 A B P) (H1 : type549 A B) (P2 : type560 A B P) (G2 : type557 A B P) (_114084 : type794 A P) (s : P -> A) (P1 : type551 A B) (G1 : type548 A B) (lt2 : type1402 A) : (term1749 A B P clauses t lt2 P2 P1 G2 G1 H2 _114084 s H1) = (term1936 A B P clauses t H2 H1 P2 G2 _114084 s P1 G1 lt2).
Proof. exact (MK_COMB (@lem8369534 A B lt2 P1 G1 H1) (@lem8369499 A B P clauses t H2 H1 P2 G2 _114084 s P1 G1 lt2)). Qed.
Lemma lem8369540 {A P : Type'} (x : P) (_114084 : type794 A P) (s : P -> A) (x' : A) : (term1483 A P x _114084 s x') = (term1483 A P x _114084 s x').
Proof. exact (eq_refl (term1483 A P x _114084 s x')). Qed.
Lemma lem8369541 {A P : Type'} (_114084 : type794 A P) (s : P -> A) (x : A) : (term1484 A P _114084 s x) = (term1484 A P _114084 s x).
Proof. exact (fun_ext (fun x' : P => @lem8369540 A P x' _114084 s x)). Qed.
Lemma lem8369542 {P : Type'} : (@all P) = (@all P).
Proof. exact (eq_refl (@all P)). Qed.
Lemma lem8369543 {A P : Type'} (_114084 : type794 A P) (s : P -> A) (x : A) : (term1485 A P _114084 s x) = (term1485 A P _114084 s x).
Proof. exact (MK_COMB (@lem8369542 P) (@lem8369541 A P _114084 s x)). Qed.
Lemma lem8369544 {A P : Type'} (_114084 : type794 A P) (s : P -> A) : (term1487 A P _114084 s) = (term1487 A P _114084 s).
Proof. exact (fun_ext (fun x : A => @lem8369543 A P _114084 s x)). Qed.
Lemma lem8369545 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem8369546 {A P : Type'} (_114084 : type794 A P) (s : P -> A) : (term1488 A P _114084 s) = (term1488 A P _114084 s).
Proof. exact (MK_COMB (@lem8369545 A) (@lem8369544 A P _114084 s)). Qed.
Lemma lem8369547 {A P : Type'} (_114084 : type794 A P) : (term1490 A P _114084) = (term1490 A P _114084).
Proof. exact (fun_ext (fun s : P -> A => @lem8369546 A P _114084 s)). Qed.
Lemma lem8369548 {A P : Type'} : (@all (P -> A)) = (@all (P -> A)).
Proof. exact (eq_refl (@all (P -> A))). Qed.
Lemma lem8369549 {A P : Type'} (_114084 : type794 A P) : (term1491 A P _114084) = (term1491 A P _114084).
Proof. exact (MK_COMB (@lem8369548 A P) (@lem8369547 A P _114084)). Qed.
Lemma lem8369550 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem8369551 {A P : Type'} (_114084 : type794 A P) : (term1493 A P _114084) = (term1493 A P _114084).
Proof. exact (MK_COMB (@lem8369550) (@lem8369549 A P _114084)). Qed.
Lemma lem8369552 {A B P : Type'} (clauses : type1635 A B P) (t : type558 A B P) (H2 : type558 A B P) (H1 : type549 A B) (P2 : type560 A B P) (G2 : type557 A B P) (_114084 : type794 A P) (s : P -> A) (P1 : type551 A B) (G1 : type548 A B) (lt2 : type1402 A) : (term1750 A B P clauses t lt2 P2 P1 G2 G1 H2 _114084 s H1) = (term1937 A B P clauses t H2 H1 P2 G2 _114084 s P1 G1 lt2).
Proof. exact (MK_COMB (@lem8369551 A P _114084) (@lem8369535 A B P clauses t H2 H1 P2 G2 _114084 s P1 G1 lt2)). Qed.
Lemma lem8369553 {A B P : Type'} (clauses : type1635 A B P) (t : type558 A B P) (H2 : type558 A B P) (H1 : type549 A B) (P2 : type560 A B P) (G2 : type557 A B P) (s : P -> A) (P1 : type551 A B) (G1 : type548 A B) (lt2 : type1402 A) : (term1751 A B P clauses t lt2 P2 P1 G2 G1 H2 s H1) = (term1938 A B P clauses t H2 H1 P2 G2 s P1 G1 lt2).
Proof. exact (fun_ext (fun _114084 : type794 A P => @lem8369552 A B P clauses t H2 H1 P2 G2 _114084 s P1 G1 lt2)). Qed.
Lemma lem8369554 {A P : Type'} : (@all ((P -> A) -> A -> P)) = (@all ((P -> A) -> A -> P)).
Proof. exact (eq_refl (@all ((P -> A) -> A -> P))). Qed.
Lemma lem8369555 {A B P : Type'} (clauses : type1635 A B P) (t : type558 A B P) (H2 : type558 A B P) (H1 : type549 A B) (P2 : type560 A B P) (G2 : type557 A B P) (s : P -> A) (P1 : type551 A B) (G1 : type548 A B) (lt2 : type1402 A) : (term1752 A B P clauses t lt2 P2 P1 G2 G1 H2 s H1) = (term1939 A B P clauses t H2 H1 P2 G2 s P1 G1 lt2).
Proof. exact (MK_COMB (@lem8369554 A P) (@lem8369553 A B P clauses t H2 H1 P2 G2 s P1 G1 lt2)). Qed.
Lemma lem8369556 {A B P : Type'} (t : type558 A B P) (H2 : type558 A B P) (H1 : type549 A B) (P2 : type560 A B P) (G2 : type557 A B P) (s : P -> A) (P1 : type551 A B) (G1 : type548 A B) (lt2 : type1402 A) : (term1753 A B P t lt2 P2 P1 G2 G1 H2 s H1) = (term1940 A B P t H2 H1 P2 G2 s P1 G1 lt2).
Proof. exact (fun_ext (fun clauses : type1635 A B P => @lem8369555 A B P clauses t H2 H1 P2 G2 s P1 G1 lt2)). Qed.
Lemma lem8369557 {A B P : Type'} : (@all (list (prod (P -> A) ((A -> B) -> P -> B)))) = (@all (list (prod (P -> A) ((A -> B) -> P -> B)))).
Proof. exact (eq_refl (@all (list (prod (P -> A) ((A -> B) -> P -> B))))). Qed.
Lemma lem8369558 {A B P : Type'} (t : type558 A B P) (H2 : type558 A B P) (H1 : type549 A B) (P2 : type560 A B P) (G2 : type557 A B P) (s : P -> A) (P1 : type551 A B) (G1 : type548 A B) (lt2 : type1402 A) : (term1754 A B P t lt2 P2 P1 G2 G1 H2 s H1) = (term1941 A B P t H2 H1 P2 G2 s P1 G1 lt2).
Proof. exact (MK_COMB (@lem8369557 A B P) (@lem8369556 A B P t H2 H1 P2 G2 s P1 G1 lt2)). Qed.
Lemma lem8369559 {A B P : Type'} (H2 : type558 A B P) (H1 : type549 A B) (P2 : type560 A B P) (G2 : type557 A B P) (s : P -> A) (P1 : type551 A B) (G1 : type548 A B) (lt2 : type1402 A) : (term1755 A B P lt2 P2 P1 G2 G1 H2 s H1) = (term1942 A B P H2 H1 P2 G2 s P1 G1 lt2).
Proof. exact (fun_ext (fun t : type558 A B P => @lem8369558 A B P t H2 H1 P2 G2 s P1 G1 lt2)). Qed.
Lemma lem8369560 {A B P : Type'} : (@all ((A -> B) -> P -> B)) = (@all ((A -> B) -> P -> B)).
Proof. exact (eq_refl (@all ((A -> B) -> P -> B))). Qed.
Lemma lem8369561 {A B P : Type'} (H2 : type558 A B P) (H1 : type549 A B) (P2 : type560 A B P) (G2 : type557 A B P) (s : P -> A) (P1 : type551 A B) (G1 : type548 A B) (lt2 : type1402 A) : (term1756 A B P lt2 P2 P1 G2 G1 H2 s H1) = (term1943 A B P H2 H1 P2 G2 s P1 G1 lt2).
Proof. exact (MK_COMB (@lem8369560 A B P) (@lem8369559 A B P H2 H1 P2 G2 s P1 G1 lt2)). Qed.
Lemma lem8369562 {A B P : Type'} (H2 : type558 A B P) (H1 : type549 A B) (P2 : type560 A B P) (G2 : type557 A B P) (s : P -> A) (P1 : type551 A B) (G1 : type548 A B) : (term1757 A B P P2 P1 G2 G1 H2 s H1) = (term1944 A B P H2 H1 P2 G2 s P1 G1).
Proof. exact (fun_ext (fun lt2 : type1402 A => @lem8369561 A B P H2 H1 P2 G2 s P1 G1 lt2)). Qed.
Lemma lem8369563 {A : Type'} : (@all (A -> A -> Prop)) = (@all (A -> A -> Prop)).
Proof. exact (eq_refl (@all (A -> A -> Prop))). Qed.
Lemma lem8369564 {A B P : Type'} (H2 : type558 A B P) (H1 : type549 A B) (P2 : type560 A B P) (G2 : type557 A B P) (s : P -> A) (P1 : type551 A B) (G1 : type548 A B) : (term1758 A B P P2 P1 G2 G1 H2 s H1) = (term1945 A B P H2 H1 P2 G2 s P1 G1).
Proof. exact (MK_COMB (@lem8369563 A) (@lem8369562 A B P H2 H1 P2 G2 s P1 G1)). Qed.
Lemma lem8369565 {A B P : Type'} (H2 : type558 A B P) (H1 : type549 A B) (G2 : type557 A B P) (s : P -> A) (P1 : type551 A B) (G1 : type548 A B) : (term1759 A B P P1 G2 G1 H2 s H1) = (term1946 A B P H2 H1 G2 s P1 G1).
Proof. exact (fun_ext (fun P2 : type560 A B P => @lem8369564 A B P H2 H1 P2 G2 s P1 G1)). Qed.
Lemma lem8369566 {A B P : Type'} : (@all ((A -> B) -> P -> Prop)) = (@all ((A -> B) -> P -> Prop)).
Proof. exact (eq_refl (@all ((A -> B) -> P -> Prop))). Qed.
Lemma lem8369567 {A B P : Type'} (H2 : type558 A B P) (H1 : type549 A B) (G2 : type557 A B P) (s : P -> A) (P1 : type551 A B) (G1 : type548 A B) : (term1760 A B P P1 G2 G1 H2 s H1) = (term1947 A B P H2 H1 G2 s P1 G1).
Proof. exact (MK_COMB (@lem8369566 A B P) (@lem8369565 A B P H2 H1 G2 s P1 G1)). Qed.
Lemma lem8369568 {A B P : Type'} (H2 : type558 A B P) (H1 : type549 A B) (G2 : type557 A B P) (s : P -> A) (G1 : type548 A B) : (term1761 A B P G2 G1 H2 s H1) = (term1948 A B P H2 H1 G2 s G1).
Proof. exact (fun_ext (fun P1 : type551 A B => @lem8369567 A B P H2 H1 G2 s P1 G1)). Qed.
Lemma lem8369569 {A B : Type'} : (@all ((A -> B) -> A -> Prop)) = (@all ((A -> B) -> A -> Prop)).
Proof. exact (eq_refl (@all ((A -> B) -> A -> Prop))). Qed.
Lemma lem8369570 {A B P : Type'} (H2 : type558 A B P) (H1 : type549 A B) (G2 : type557 A B P) (s : P -> A) (G1 : type548 A B) : (term1762 A B P G2 G1 H2 s H1) = (term1949 A B P H2 H1 G2 s G1).
Proof. exact (MK_COMB (@lem8369569 A B) (@lem8369568 A B P H2 H1 G2 s G1)). Qed.
Lemma lem8369571 {A B P : Type'} (H2 : type558 A B P) (H1 : type549 A B) (s : P -> A) (G1 : type548 A B) : (term1763 A B P G1 H2 s H1) = (term1950 A B P H2 H1 s G1).
Proof. exact (fun_ext (fun G2 : type557 A B P => @lem8369570 A B P H2 H1 G2 s G1)). Qed.
Lemma lem8369572 {A B P : Type'} : (@all ((A -> B) -> P -> A)) = (@all ((A -> B) -> P -> A)).
Proof. exact (eq_refl (@all ((A -> B) -> P -> A))). Qed.
Lemma lem8369573 {A B P : Type'} (H2 : type558 A B P) (H1 : type549 A B) (s : P -> A) (G1 : type548 A B) : (term1764 A B P G1 H2 s H1) = (term1951 A B P H2 H1 s G1).
Proof. exact (MK_COMB (@lem8369572 A B P) (@lem8369571 A B P H2 H1 s G1)). Qed.
Lemma lem8369574 {A B P : Type'} (H2 : type558 A B P) (H1 : type549 A B) (s : P -> A) : (term1765 A B P H2 s H1) = (term1952 A B P H2 H1 s).
Proof. exact (fun_ext (fun G1 : type548 A B => @lem8369573 A B P H2 H1 s G1)). Qed.
Lemma lem8369575 {A B : Type'} : (@all ((A -> B) -> A -> A)) = (@all ((A -> B) -> A -> A)).
Proof. exact (eq_refl (@all ((A -> B) -> A -> A))). Qed.
Lemma lem8369576 {A B P : Type'} (H2 : type558 A B P) (H1 : type549 A B) (s : P -> A) : (term1766 A B P H2 s H1) = (term1953 A B P H2 H1 s).
Proof. exact (MK_COMB (@lem8369575 A B) (@lem8369574 A B P H2 H1 s)). Qed.
Lemma lem8369577 {A B P : Type'} (H1 : type549 A B) (s : P -> A) : (term1767 A B P s H1) = (term1954 A B P H1 s).
Proof. exact (fun_ext (fun H2 : type558 A B P => @lem8369576 A B P H2 H1 s)). Qed.
Lemma lem8369578 {A B P : Type'} : (@all ((A -> B) -> P -> B)) = (@all ((A -> B) -> P -> B)).
Proof. exact (eq_refl (@all ((A -> B) -> P -> B))). Qed.
Lemma lem8369579 {A B P : Type'} (H1 : type549 A B) (s : P -> A) : (term1768 A B P s H1) = (term1955 A B P H1 s).
Proof. exact (MK_COMB (@lem8369578 A B P) (@lem8369577 A B P H1 s)). Qed.
Lemma lem8369580 {A B P : Type'} (H1 : type549 A B) : (term1769 A B P H1) = (term1956 A B P H1).
Proof. exact (fun_ext (fun s : P -> A => @lem8369579 A B P H1 s)). Qed.
Lemma lem8369581 {A P : Type'} : (@all (P -> A)) = (@all (P -> A)).
Proof. exact (eq_refl (@all (P -> A))). Qed.
Lemma lem8369582 {A B P : Type'} (H1 : type549 A B) : (term1770 A B P H1) = (term1957 A B P H1).
Proof. exact (MK_COMB (@lem8369581 A P) (@lem8369580 A B P H1)). Qed.
Lemma lem8369583 {A B P : Type'} : (term1771 A B P) = (term1958 A B P).
Proof. exact (fun_ext (fun H1 : type549 A B => @lem8369582 A B P H1)). Qed.
Lemma lem8369584 {A B : Type'} : (@all ((A -> B) -> A -> B)) = (@all ((A -> B) -> A -> B)).
Proof. exact (eq_refl (@all ((A -> B) -> A -> B))). Qed.
Lemma lem8369585 {A B P : Type'} : (term1772 A B P) = (term1959 A B P).
Proof. exact (MK_COMB (@lem8369584 A B) (@lem8369583 A B P)). Qed.
Lemma lem8369586 {A B P : Type'} : (term1702 A B P) = (term1959 A B P).
Proof. exact (TRANS (@lem8368511 A B P) (@lem8369585 A B P)). Qed.
Lemma lem8369950 {A : Type'} (t : Prop) : (term1198 A t) = t.
Proof. exact (EQ_MP (@lem21736 A t) (@lem21735 A t)). Qed.
Lemma lem8369951 {A B : Type'} (t : Prop) : (term1203 A B t) = t.
Proof. exact (@lem8369950 (A -> B) t). Qed.
Lemma lem8369952 {A B : Type'} : (term1805 A B) = (term1197 A).
Proof. exact (@lem8369951 A B (term1197 A)). Qed.
Lemma lem8369954 {A : Type'} (t : Prop) : (term1198 A t) = t.
Proof. exact (EQ_MP (@lem21736 A t) (@lem21735 A t)). Qed.
Lemma lem8369955 {A : Type'} (t : Prop) : (term1198 A t) = t.
Proof. exact (@lem8369954 A t). Qed.
Lemma lem8369956 {A : Type'} : (term1197 A) = True.
Proof. exact (@lem8369955 A True). Qed.
Lemma lem8369957 {A B : Type'} : (term1805 A B) = True.
Proof. exact (TRANS (@lem8369952 A B) (@lem8369956 A)). Qed.
Lemma lem8369958 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (_114084 : type794 A P) (s : P -> A) (P1 : type551 A B) (G1 : type548 A B) (lt2 : type1402 A) : (term1835 A B P P2 G2 _114084 s P1 G1 lt2) = (term1835 A B P P2 G2 _114084 s P1 G1 lt2).
Proof. exact (eq_refl (term1835 A B P P2 G2 _114084 s P1 G1 lt2)). Qed.
Lemma lem8369959 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (_114084 : type794 A P) (s : P -> A) (P1 : type551 A B) (G1 : type548 A B) (lt2 : type1402 A) : (term1836 A B P P2 G2 _114084 s P1 G1 lt2) = (term1960 A B P P2 G2 _114084 s P1 G1 lt2).
Proof. exact (MK_COMB (@lem8369958 A B P P2 G2 _114084 s P1 G1 lt2) (@lem8369957 A B)). Qed.
Lemma lem8369961 (t : Prop) : (t /\ True) = t.
Proof. exact (proj1 (@lem21761 t)). Qed.
Lemma lem8369962 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (_114084 : type794 A P) (s : P -> A) (P1 : type551 A B) (G1 : type548 A B) (lt2 : type1402 A) : (term1960 A B P P2 G2 _114084 s P1 G1 lt2) = (term1834 A B P P2 G2 _114084 s P1 G1 lt2).
Proof. exact (@lem8369961 (term1834 A B P P2 G2 _114084 s P1 G1 lt2)). Qed.
Lemma lem8370013 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (_114084 : type794 A P) (s : P -> A) (P1 : type551 A B) (G1 : type548 A B) (lt2 : type1402 A) : (term1836 A B P P2 G2 _114084 s P1 G1 lt2) = (term1834 A B P P2 G2 _114084 s P1 G1 lt2).
Proof. exact (TRANS (@lem8369959 A B P P2 G2 _114084 s P1 G1 lt2) (@lem8369962 A B P P2 G2 _114084 s P1 G1 lt2)). Qed.
Lemma lem8370014 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (_114084 : type794 A P) (s : P -> A) (lt2 : type1402 A) (P1 : type551 A B) (G1 : type548 A B) (H1 : type549 A B) : (term1870 A B P P2 G2 H2 _114084 s lt2 P1 G1 H1) = (term1870 A B P P2 G2 H2 _114084 s lt2 P1 G1 H1).
Proof. exact (eq_refl (term1870 A B P P2 G2 H2 _114084 s lt2 P1 G1 H1)). Qed.
Lemma lem8370015 {A B P : Type'} (H2 : type558 A B P) (H1 : type549 A B) (P2 : type560 A B P) (G2 : type557 A B P) (_114084 : type794 A P) (s : P -> A) (P1 : type551 A B) (G1 : type548 A B) (lt2 : type1402 A) : (term1871 A B P H2 H1 P2 G2 _114084 s P1 G1 lt2) = (term1961 A B P H2 H1 P2 G2 _114084 s P1 G1 lt2).
Proof. exact (MK_COMB (@lem8370014 A B P P2 G2 H2 _114084 s lt2 P1 G1 H1) (@lem8370013 A B P P2 G2 _114084 s P1 G1 lt2)). Qed.
Lemma lem8370018 {A B P : Type'} (G2 : type557 A B P) (P2 : type560 A B P) (t : type558 A B P) (H2 : type558 A B P) : (term1891 A B P G2 P2 t H2) = (term1891 A B P G2 P2 t H2).
Proof. exact (eq_refl (term1891 A B P G2 P2 t H2)). Qed.
Lemma lem8370019 {A B P : Type'} (t : type558 A B P) (H2 : type558 A B P) (H1 : type549 A B) (P2 : type560 A B P) (G2 : type557 A B P) (_114084 : type794 A P) (s : P -> A) (P1 : type551 A B) (G1 : type548 A B) (lt2 : type1402 A) : (term1892 A B P t H2 H1 P2 G2 _114084 s P1 G1 lt2) = (term1962 A B P t H2 H1 P2 G2 _114084 s P1 G1 lt2).
Proof. exact (MK_COMB (@lem8370018 A B P G2 P2 t H2) (@lem8370015 A B P H2 H1 P2 G2 _114084 s P1 G1 lt2)). Qed.
Lemma lem8370022 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) : (term1626 A B P lt2 s P2 G2 H2) = (term1626 A B P lt2 s P2 G2 H2).
Proof. exact (eq_refl (term1626 A B P lt2 s P2 G2 H2)). Qed.
Lemma lem8370023 {A B P : Type'} (t : type558 A B P) (H2 : type558 A B P) (H1 : type549 A B) (P2 : type560 A B P) (G2 : type557 A B P) (_114084 : type794 A P) (s : P -> A) (P1 : type551 A B) (G1 : type548 A B) (lt2 : type1402 A) : (term1904 A B P t H2 H1 P2 G2 _114084 s P1 G1 lt2) = (term1963 A B P t H2 H1 P2 G2 _114084 s P1 G1 lt2).
Proof. exact (MK_COMB (@lem8370022 A B P lt2 s P2 G2 H2) (@lem8370019 A B P t H2 H1 P2 G2 _114084 s P1 G1 lt2)). Qed.
Lemma lem8370026 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (lt2 : type1402 A) (s : P -> A) : (term1629 A B P P2 G2 lt2 s) = (term1629 A B P P2 G2 lt2 s).
Proof. exact (eq_refl (term1629 A B P P2 G2 lt2 s)). Qed.
Lemma lem8370027 {A B P : Type'} (t : type558 A B P) (H2 : type558 A B P) (H1 : type549 A B) (P2 : type560 A B P) (G2 : type557 A B P) (_114084 : type794 A P) (s : P -> A) (P1 : type551 A B) (G1 : type548 A B) (lt2 : type1402 A) : (term1911 A B P t H2 H1 P2 G2 _114084 s P1 G1 lt2) = (term1964 A B P t H2 H1 P2 G2 _114084 s P1 G1 lt2).
Proof. exact (MK_COMB (@lem8370026 A B P P2 G2 lt2 s) (@lem8370023 A B P t H2 H1 P2 G2 _114084 s P1 G1 lt2)). Qed.
Lemma lem8370030 {A B P : Type'} (G1 : type548 A B) (P1 : type551 A B) (clauses : type1635 A B P) (H1 : type549 A B) : (term1925 A B P G1 P1 clauses H1) = (term1925 A B P G1 P1 clauses H1).
Proof. exact (eq_refl (term1925 A B P G1 P1 clauses H1)). Qed.
Lemma lem8370031 {A B P : Type'} (clauses : type1635 A B P) (t : type558 A B P) (H2 : type558 A B P) (H1 : type549 A B) (P2 : type560 A B P) (G2 : type557 A B P) (_114084 : type794 A P) (s : P -> A) (P1 : type551 A B) (G1 : type548 A B) (lt2 : type1402 A) : (term1926 A B P clauses t H2 H1 P2 G2 _114084 s P1 G1 lt2) = (term1965 A B P clauses t H2 H1 P2 G2 _114084 s P1 G1 lt2).
Proof. exact (MK_COMB (@lem8370030 A B P G1 P1 clauses H1) (@lem8370027 A B P t H2 H1 P2 G2 _114084 s P1 G1 lt2)). Qed.
Lemma lem8370034 {A B : Type'} (P1 : type551 A B) (G1 : type548 A B) (lt2 : type1402 A) : (term1635 A B P1 G1 lt2) = (term1635 A B P1 G1 lt2).
Proof. exact (eq_refl (term1635 A B P1 G1 lt2)). Qed.
Lemma lem8370035 {A B P : Type'} (clauses : type1635 A B P) (t : type558 A B P) (H2 : type558 A B P) (H1 : type549 A B) (P2 : type560 A B P) (G2 : type557 A B P) (_114084 : type794 A P) (s : P -> A) (P1 : type551 A B) (G1 : type548 A B) (lt2 : type1402 A) : (term1930 A B P clauses t H2 H1 P2 G2 _114084 s P1 G1 lt2) = (term1966 A B P clauses t H2 H1 P2 G2 _114084 s P1 G1 lt2).
Proof. exact (MK_COMB (@lem8370034 A B P1 G1 lt2) (@lem8370031 A B P clauses t H2 H1 P2 G2 _114084 s P1 G1 lt2)). Qed.
Lemma lem8370038 {A B : Type'} (lt2 : type1402 A) (P1 : type551 A B) (G1 : type548 A B) (H1 : type549 A B) : (term1638 A B lt2 P1 G1 H1) = (term1638 A B lt2 P1 G1 H1).
Proof. exact (eq_refl (term1638 A B lt2 P1 G1 H1)). Qed.
Lemma lem8370039 {A B P : Type'} (clauses : type1635 A B P) (t : type558 A B P) (H2 : type558 A B P) (H1 : type549 A B) (P2 : type560 A B P) (G2 : type557 A B P) (_114084 : type794 A P) (s : P -> A) (P1 : type551 A B) (G1 : type548 A B) (lt2 : type1402 A) : (term1936 A B P clauses t H2 H1 P2 G2 _114084 s P1 G1 lt2) = (term1967 A B P clauses t H2 H1 P2 G2 _114084 s P1 G1 lt2).
Proof. exact (MK_COMB (@lem8370038 A B lt2 P1 G1 H1) (@lem8370035 A B P clauses t H2 H1 P2 G2 _114084 s P1 G1 lt2)). Qed.
Lemma lem8370042 {A P : Type'} (_114084 : type794 A P) : (term1493 A P _114084) = (term1493 A P _114084).
Proof. exact (eq_refl (term1493 A P _114084)). Qed.
Lemma lem8370043 {A B P : Type'} (clauses : type1635 A B P) (t : type558 A B P) (H2 : type558 A B P) (H1 : type549 A B) (P2 : type560 A B P) (G2 : type557 A B P) (_114084 : type794 A P) (s : P -> A) (P1 : type551 A B) (G1 : type548 A B) (lt2 : type1402 A) : (term1937 A B P clauses t H2 H1 P2 G2 _114084 s P1 G1 lt2) = (term1968 A B P clauses t H2 H1 P2 G2 _114084 s P1 G1 lt2).
Proof. exact (MK_COMB (@lem8370042 A P _114084) (@lem8370039 A B P clauses t H2 H1 P2 G2 _114084 s P1 G1 lt2)). Qed.
Lemma lem8370046 {A B P : Type'} (clauses : type1635 A B P) (t : type558 A B P) (H2 : type558 A B P) (H1 : type549 A B) (P2 : type560 A B P) (G2 : type557 A B P) (s : P -> A) (P1 : type551 A B) (G1 : type548 A B) (lt2 : type1402 A) : (term1938 A B P clauses t H2 H1 P2 G2 s P1 G1 lt2) = (term1969 A B P clauses t H2 H1 P2 G2 s P1 G1 lt2).
Proof. exact (fun_ext (fun _114084 : type794 A P => @lem8370043 A B P clauses t H2 H1 P2 G2 _114084 s P1 G1 lt2)). Qed.
Lemma lem8370047 {A P : Type'} : (@all ((P -> A) -> A -> P)) = (@all ((P -> A) -> A -> P)).
Proof. exact (eq_refl (@all ((P -> A) -> A -> P))). Qed.
Lemma lem8370048 {A B P : Type'} (clauses : type1635 A B P) (t : type558 A B P) (H2 : type558 A B P) (H1 : type549 A B) (P2 : type560 A B P) (G2 : type557 A B P) (s : P -> A) (P1 : type551 A B) (G1 : type548 A B) (lt2 : type1402 A) : (term1939 A B P clauses t H2 H1 P2 G2 s P1 G1 lt2) = (term1970 A B P clauses t H2 H1 P2 G2 s P1 G1 lt2).
Proof. exact (MK_COMB (@lem8370047 A P) (@lem8370046 A B P clauses t H2 H1 P2 G2 s P1 G1 lt2)). Qed.
Lemma lem8370055 {A B P : Type'} (t : type558 A B P) (H2 : type558 A B P) (H1 : type549 A B) (P2 : type560 A B P) (G2 : type557 A B P) (s : P -> A) (P1 : type551 A B) (G1 : type548 A B) (lt2 : type1402 A) : (term1940 A B P t H2 H1 P2 G2 s P1 G1 lt2) = (term1971 A B P t H2 H1 P2 G2 s P1 G1 lt2).
Proof. exact (fun_ext (fun clauses : type1635 A B P => @lem8370048 A B P clauses t H2 H1 P2 G2 s P1 G1 lt2)). Qed.
Lemma lem8370056 {A B P : Type'} : (@all (list (prod (P -> A) ((A -> B) -> P -> B)))) = (@all (list (prod (P -> A) ((A -> B) -> P -> B)))).
Proof. exact (eq_refl (@all (list (prod (P -> A) ((A -> B) -> P -> B))))). Qed.
Lemma lem8370057 {A B P : Type'} (t : type558 A B P) (H2 : type558 A B P) (H1 : type549 A B) (P2 : type560 A B P) (G2 : type557 A B P) (s : P -> A) (P1 : type551 A B) (G1 : type548 A B) (lt2 : type1402 A) : (term1941 A B P t H2 H1 P2 G2 s P1 G1 lt2) = (term1972 A B P t H2 H1 P2 G2 s P1 G1 lt2).
Proof. exact (MK_COMB (@lem8370056 A B P) (@lem8370055 A B P t H2 H1 P2 G2 s P1 G1 lt2)). Qed.
Lemma lem8370064 {A B P : Type'} (H2 : type558 A B P) (H1 : type549 A B) (P2 : type560 A B P) (G2 : type557 A B P) (s : P -> A) (P1 : type551 A B) (G1 : type548 A B) (lt2 : type1402 A) : (term1942 A B P H2 H1 P2 G2 s P1 G1 lt2) = (term1973 A B P H2 H1 P2 G2 s P1 G1 lt2).
Proof. exact (fun_ext (fun t : type558 A B P => @lem8370057 A B P t H2 H1 P2 G2 s P1 G1 lt2)). Qed.
Lemma lem8370065 {A B P : Type'} : (@all ((A -> B) -> P -> B)) = (@all ((A -> B) -> P -> B)).
Proof. exact (eq_refl (@all ((A -> B) -> P -> B))). Qed.
Lemma lem8370066 {A B P : Type'} (H2 : type558 A B P) (H1 : type549 A B) (P2 : type560 A B P) (G2 : type557 A B P) (s : P -> A) (P1 : type551 A B) (G1 : type548 A B) (lt2 : type1402 A) : (term1943 A B P H2 H1 P2 G2 s P1 G1 lt2) = (term1974 A B P H2 H1 P2 G2 s P1 G1 lt2).
Proof. exact (MK_COMB (@lem8370065 A B P) (@lem8370064 A B P H2 H1 P2 G2 s P1 G1 lt2)). Qed.
Lemma lem8370073 {A B P : Type'} (H2 : type558 A B P) (H1 : type549 A B) (P2 : type560 A B P) (G2 : type557 A B P) (s : P -> A) (P1 : type551 A B) (G1 : type548 A B) : (term1944 A B P H2 H1 P2 G2 s P1 G1) = (term1975 A B P H2 H1 P2 G2 s P1 G1).
Proof. exact (fun_ext (fun lt2 : type1402 A => @lem8370066 A B P H2 H1 P2 G2 s P1 G1 lt2)). Qed.
Lemma lem8370074 {A : Type'} : (@all (A -> A -> Prop)) = (@all (A -> A -> Prop)).
Proof. exact (eq_refl (@all (A -> A -> Prop))). Qed.
Lemma lem8370075 {A B P : Type'} (H2 : type558 A B P) (H1 : type549 A B) (P2 : type560 A B P) (G2 : type557 A B P) (s : P -> A) (P1 : type551 A B) (G1 : type548 A B) : (term1945 A B P H2 H1 P2 G2 s P1 G1) = (term1976 A B P H2 H1 P2 G2 s P1 G1).
Proof. exact (MK_COMB (@lem8370074 A) (@lem8370073 A B P H2 H1 P2 G2 s P1 G1)). Qed.
Lemma lem8370082 {A B P : Type'} (H2 : type558 A B P) (H1 : type549 A B) (G2 : type557 A B P) (s : P -> A) (P1 : type551 A B) (G1 : type548 A B) : (term1946 A B P H2 H1 G2 s P1 G1) = (term1977 A B P H2 H1 G2 s P1 G1).
Proof. exact (fun_ext (fun P2 : type560 A B P => @lem8370075 A B P H2 H1 P2 G2 s P1 G1)). Qed.
Lemma lem8370083 {A B P : Type'} : (@all ((A -> B) -> P -> Prop)) = (@all ((A -> B) -> P -> Prop)).
Proof. exact (eq_refl (@all ((A -> B) -> P -> Prop))). Qed.
Lemma lem8370084 {A B P : Type'} (H2 : type558 A B P) (H1 : type549 A B) (G2 : type557 A B P) (s : P -> A) (P1 : type551 A B) (G1 : type548 A B) : (term1947 A B P H2 H1 G2 s P1 G1) = (term1978 A B P H2 H1 G2 s P1 G1).
Proof. exact (MK_COMB (@lem8370083 A B P) (@lem8370082 A B P H2 H1 G2 s P1 G1)). Qed.
Lemma lem8370091 {A B P : Type'} (H2 : type558 A B P) (H1 : type549 A B) (G2 : type557 A B P) (s : P -> A) (G1 : type548 A B) : (term1948 A B P H2 H1 G2 s G1) = (term1979 A B P H2 H1 G2 s G1).
Proof. exact (fun_ext (fun P1 : type551 A B => @lem8370084 A B P H2 H1 G2 s P1 G1)). Qed.
Lemma lem8370092 {A B : Type'} : (@all ((A -> B) -> A -> Prop)) = (@all ((A -> B) -> A -> Prop)).
Proof. exact (eq_refl (@all ((A -> B) -> A -> Prop))). Qed.
Lemma lem8370093 {A B P : Type'} (H2 : type558 A B P) (H1 : type549 A B) (G2 : type557 A B P) (s : P -> A) (G1 : type548 A B) : (term1949 A B P H2 H1 G2 s G1) = (term1980 A B P H2 H1 G2 s G1).
Proof. exact (MK_COMB (@lem8370092 A B) (@lem8370091 A B P H2 H1 G2 s G1)). Qed.
Lemma lem8370100 {A B P : Type'} (H2 : type558 A B P) (H1 : type549 A B) (s : P -> A) (G1 : type548 A B) : (term1950 A B P H2 H1 s G1) = (term1981 A B P H2 H1 s G1).
Proof. exact (fun_ext (fun G2 : type557 A B P => @lem8370093 A B P H2 H1 G2 s G1)). Qed.
Lemma lem8370101 {A B P : Type'} : (@all ((A -> B) -> P -> A)) = (@all ((A -> B) -> P -> A)).
Proof. exact (eq_refl (@all ((A -> B) -> P -> A))). Qed.
Lemma lem8370102 {A B P : Type'} (H2 : type558 A B P) (H1 : type549 A B) (s : P -> A) (G1 : type548 A B) : (term1951 A B P H2 H1 s G1) = (term1982 A B P H2 H1 s G1).
Proof. exact (MK_COMB (@lem8370101 A B P) (@lem8370100 A B P H2 H1 s G1)). Qed.
Lemma lem8370109 {A B P : Type'} (H2 : type558 A B P) (H1 : type549 A B) (s : P -> A) : (term1952 A B P H2 H1 s) = (term1983 A B P H2 H1 s).
Proof. exact (fun_ext (fun G1 : type548 A B => @lem8370102 A B P H2 H1 s G1)). Qed.
Lemma lem8370110 {A B : Type'} : (@all ((A -> B) -> A -> A)) = (@all ((A -> B) -> A -> A)).
Proof. exact (eq_refl (@all ((A -> B) -> A -> A))). Qed.
Lemma lem8370111 {A B P : Type'} (H2 : type558 A B P) (H1 : type549 A B) (s : P -> A) : (term1953 A B P H2 H1 s) = (term1984 A B P H2 H1 s).
Proof. exact (MK_COMB (@lem8370110 A B) (@lem8370109 A B P H2 H1 s)). Qed.
Lemma lem8370118 {A B P : Type'} (H1 : type549 A B) (s : P -> A) : (term1954 A B P H1 s) = (term1985 A B P H1 s).
Proof. exact (fun_ext (fun H2 : type558 A B P => @lem8370111 A B P H2 H1 s)). Qed.
Lemma lem8370119 {A B P : Type'} : (@all ((A -> B) -> P -> B)) = (@all ((A -> B) -> P -> B)).
Proof. exact (eq_refl (@all ((A -> B) -> P -> B))). Qed.
Lemma lem8370120 {A B P : Type'} (H1 : type549 A B) (s : P -> A) : (term1955 A B P H1 s) = (term1986 A B P H1 s).
Proof. exact (MK_COMB (@lem8370119 A B P) (@lem8370118 A B P H1 s)). Qed.
Lemma lem8370127 {A B P : Type'} (H1 : type549 A B) : (term1956 A B P H1) = (term1987 A B P H1).
Proof. exact (fun_ext (fun s : P -> A => @lem8370120 A B P H1 s)). Qed.
Lemma lem8370128 {A P : Type'} : (@all (P -> A)) = (@all (P -> A)).
Proof. exact (eq_refl (@all (P -> A))). Qed.
Lemma lem8370129 {A B P : Type'} (H1 : type549 A B) : (term1957 A B P H1) = (term1988 A B P H1).
Proof. exact (MK_COMB (@lem8370128 A P) (@lem8370127 A B P H1)). Qed.
Lemma lem8370136 {A B P : Type'} : (term1958 A B P) = (term1989 A B P).
Proof. exact (fun_ext (fun H1 : type549 A B => @lem8370129 A B P H1)). Qed.
Lemma lem8370137 {A B : Type'} : (@all ((A -> B) -> A -> B)) = (@all ((A -> B) -> A -> B)).
Proof. exact (eq_refl (@all ((A -> B) -> A -> B))). Qed.
Lemma lem8370138 {A B P : Type'} : (term1959 A B P) = (term1990 A B P).
Proof. exact (MK_COMB (@lem8370137 A B) (@lem8370136 A B P)). Qed.
Lemma lem8370145 {A B P : Type'} : (term1702 A B P) = (term1990 A B P).
Proof. exact (TRANS (@lem8369586 A B P) (@lem8370138 A B P)). Qed.
Lemma lem8370146 {A B P : Type'} : (term1990 A B P) = (term1702 A B P).
Proof. exact (SYM (@lem8370145 A B P)). Qed.
Lemma lem8370147 {A P : Type'} (_114084 : type794 A P) (h1 : term1491 A P _114084) : term1491 A P _114084.
Proof. exact (h1). Qed.
Lemma lem8370148 {A B : Type'} (lt2 : type1402 A) (P1 : type551 A B) (G1 : type548 A B) (H1 : type549 A B) (h1 : term1417 A B lt2 P1 G1 H1) : term1417 A B lt2 P1 G1 H1.
Proof. exact (h1). Qed.
Lemma lem8370149 {A B : Type'} (P1 : type551 A B) (G1 : type548 A B) (lt2 : type1402 A) (h1 : term1418 A B P1 G1 lt2) : term1418 A B P1 G1 lt2.
Proof. exact (h1). Qed.
Lemma lem8370151 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (lt2 : type1402 A) (s : P -> A) (h1 : term1420 A B P P2 G2 lt2 s) : term1420 A B P P2 G2 lt2 s.
Proof. exact (h1). Qed.
Lemma lem8370152 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (h1 : term1422 A B P lt2 s P2 G2 H2) : term1422 A B P lt2 s P2 G2 H2.
Proof. exact (h1). Qed.
Lemma lem8370155 (p : Prop) : p = (term38 p).
Proof. exact (EQ_MP (@lem10578 p) (@lem10597 p)). Qed.
Lemma lem8370156 {A B P : Type'} (H2 : type558 A B P) (H1 : type549 A B) (P2 : type560 A B P) (G2 : type557 A B P) (_114084 : type794 A P) (s : P -> A) (P1 : type551 A B) (G1 : type548 A B) (lt2 : type1402 A) : (term1961 A B P H2 H1 P2 G2 _114084 s P1 G1 lt2) = (term1991 A B P H2 H1 P2 G2 _114084 s P1 G1 lt2).
Proof. exact (@lem8370155 (term1961 A B P H2 H1 P2 G2 _114084 s P1 G1 lt2)). Qed.
Lemma lem8370157 {A B P : Type'} (H2 : type558 A B P) (H1 : type549 A B) (P2 : type560 A B P) (G2 : type557 A B P) (_114084 : type794 A P) (s : P -> A) (P1 : type551 A B) (G1 : type548 A B) (lt2 : type1402 A) : (term1991 A B P H2 H1 P2 G2 _114084 s P1 G1 lt2) = (term1961 A B P H2 H1 P2 G2 _114084 s P1 G1 lt2).
Proof. exact (SYM (@lem8370156 A B P H2 H1 P2 G2 _114084 s P1 G1 lt2)). Qed.
Lemma lem8370158 {A B P : Type'} (H2 : type558 A B P) (H1 : type549 A B) (P2 : type560 A B P) (G2 : type557 A B P) (_114084 : type794 A P) (s : P -> A) (P1 : type551 A B) (G1 : type548 A B) (lt2 : type1402 A) (h1 : term1992 A B P H2 H1 P2 G2 _114084 s P1 G1 lt2) : term1992 A B P H2 H1 P2 G2 _114084 s P1 G1 lt2.
Proof. exact (h1). Qed.
Lemma lem8370165 {A P : Type'} (x : P) (_114084 : type794 A P) (s : P -> A) (x' : A) : (term1483 A P x _114084 s x') = (term1993 A P x _114084 s x').
Proof. exact (@lem17265 ((s x) = x') ((term1480 A P _114084 s x') = x')). Qed.
Lemma lem8370166 {A P : Type'} (_114084 : type794 A P) (s : P -> A) (x : A) : (term1484 A P _114084 s x) = (term1994 A P _114084 s x).
Proof. exact (fun_ext (fun x' : P => @lem8370165 A P x' _114084 s x)). Qed.
Lemma lem8370167 {P : Type'} : (@all P) = (@all P).
Proof. exact (eq_refl (@all P)). Qed.
Lemma lem8370168 {A P : Type'} (_114084 : type794 A P) (s : P -> A) (x : A) : (term1485 A P _114084 s x) = (term1995 A P _114084 s x).
Proof. exact (MK_COMB (@lem8370167 P) (@lem8370166 A P _114084 s x)). Qed.
Lemma lem8370169 {A P : Type'} (_114084 : type794 A P) (s : P -> A) : (term1487 A P _114084 s) = (term1996 A P _114084 s).
Proof. exact (fun_ext (fun x : A => @lem8370168 A P _114084 s x)). Qed.
Lemma lem8370170 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem8370171 {A P : Type'} (_114084 : type794 A P) (s : P -> A) : (term1488 A P _114084 s) = (term1997 A P _114084 s).
Proof. exact (MK_COMB (@lem8370170 A) (@lem8370169 A P _114084 s)). Qed.
Lemma lem8370172 {A P : Type'} (_114084 : type794 A P) : (term1490 A P _114084) = (term1998 A P _114084).
Proof. exact (fun_ext (fun s : P -> A => @lem8370171 A P _114084 s)). Qed.
Lemma lem8370173 {A P : Type'} : (@all (P -> A)) = (@all (P -> A)).
Proof. exact (eq_refl (@all (P -> A))). Qed.
Lemma lem8370174 {A P : Type'} (_114084 : type794 A P) : (term1491 A P _114084) = (term1999 A P _114084).
Proof. exact (MK_COMB (@lem8370173 A P) (@lem8370172 A P _114084)). Qed.
Lemma lem8370204 {A : Type'} (P : A -> Prop) (Q : Prop) : (term2000 A P Q) = (term2001 A P Q).
Proof. exact (EQ_MP (@lem18947 A P Q) (@lem18946 A P Q)). Qed.
Lemma lem8370205 {P : Type'} (P' : P -> Prop) (Q : Prop) : (term2000 P P' Q) = (term2001 P P' Q).
Proof. exact (@lem8370204 P P' Q). Qed.
Lemma lem8370206 {A P : Type'} (_114084 : type794 A P) (s : P -> A) (x : A) : (term2002 A P _114084 s x) = (term2003 A P _114084 s x).
Proof. exact (@lem8370205 P (term2004 A P s x) ((term1480 A P _114084 s x) = x)). Qed.
Lemma lem8370207 {A P : Type'} (s : P -> A) (x : P) (x' : A) : (term2005 A P s x' x) = (term2006 A P s x x').
Proof. exact (eq_refl (term2005 A P s x' x)). Qed.
Lemma lem8370208 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8370209 {A P : Type'} (s : P -> A) (x : P) (x' : A) : (term2007 A P s x' x) = (term2008 A P s x x').
Proof. exact (MK_COMB (@lem8370208) (@lem8370207 A P s x x')). Qed.
Lemma lem8370210 {A P : Type'} (_114084 : type794 A P) (s : P -> A) (x : A) : ((term1480 A P _114084 s x) = x) = ((term1480 A P _114084 s x) = x).
Proof. exact (eq_refl ((term1480 A P _114084 s x) = x)). Qed.
Lemma lem8370211 {A P : Type'} (x : P) (_114084 : type794 A P) (s : P -> A) (x' : A) : (term2009 A P x _114084 s x') = (term1993 A P x _114084 s x').
Proof. exact (MK_COMB (@lem8370209 A P s x x') (@lem8370210 A P _114084 s x')). Qed.
Lemma lem8370212 {A P : Type'} (_114084 : type794 A P) (s : P -> A) (x : A) : (term2010 A P _114084 s x) = (term1994 A P _114084 s x).
Proof. exact (fun_ext (fun x' : P => @lem8370211 A P x' _114084 s x)). Qed.
Lemma lem8370213 {P : Type'} : (@all P) = (@all P).
Proof. exact (eq_refl (@all P)). Qed.
Lemma lem8370214 {A P : Type'} (_114084 : type794 A P) (s : P -> A) (x : A) : (term2002 A P _114084 s x) = (term1995 A P _114084 s x).
Proof. exact (MK_COMB (@lem8370213 P) (@lem8370212 A P _114084 s x)). Qed.
Lemma lem8370215 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8370216 {A P : Type'} (_114084 : type794 A P) (s : P -> A) (x : A) : (term2011 A P _114084 s x) = (term2012 A P _114084 s x).
Proof. exact (MK_COMB (@lem8370215) (@lem8370214 A P _114084 s x)). Qed.
Lemma lem8370217 {A P : Type'} (s : P -> A) (x : P) (x' : A) : (term2005 A P s x' x) = (term2006 A P s x x').
Proof. exact (eq_refl (term2005 A P s x' x)). Qed.
Lemma lem8370218 {A P : Type'} (s : P -> A) (x : A) : (term2013 A P s x) = (term2004 A P s x).
Proof. exact (fun_ext (fun x' : P => @lem8370217 A P s x' x)). Qed.
Lemma lem8370219 {P : Type'} : (@all P) = (@all P).
Proof. exact (eq_refl (@all P)). Qed.
Lemma lem8370220 {A P : Type'} (s : P -> A) (x : A) : (term2014 A P s x) = (term2015 A P s x).
Proof. exact (MK_COMB (@lem8370219 P) (@lem8370218 A P s x)). Qed.
Lemma lem8370221 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8370222 {A P : Type'} (s : P -> A) (x : A) : (term2016 A P s x) = (term2017 A P s x).
Proof. exact (MK_COMB (@lem8370221) (@lem8370220 A P s x)). Qed.
Lemma lem8370223 {A P : Type'} (_114084 : type794 A P) (s : P -> A) (x : A) : ((term1480 A P _114084 s x) = x) = ((term1480 A P _114084 s x) = x).
Proof. exact (eq_refl ((term1480 A P _114084 s x) = x)). Qed.
Lemma lem8370224 {A P : Type'} (_114084 : type794 A P) (s : P -> A) (x : A) : (term2003 A P _114084 s x) = (term2018 A P _114084 s x).
Proof. exact (MK_COMB (@lem8370222 A P s x) (@lem8370223 A P _114084 s x)). Qed.
Lemma lem8370225 {A P : Type'} (_114084 : type794 A P) (s : P -> A) (x : A) : ((term2002 A P _114084 s x) = (term2003 A P _114084 s x)) = ((term1995 A P _114084 s x) = (term2018 A P _114084 s x)).
Proof. exact (MK_COMB (@lem8370216 A P _114084 s x) (@lem8370224 A P _114084 s x)). Qed.
Lemma lem8370226 {A P : Type'} (_114084 : type794 A P) (s : P -> A) (x : A) : (term1995 A P _114084 s x) = (term2018 A P _114084 s x).
Proof. exact (EQ_MP (@lem8370225 A P _114084 s x) (@lem8370206 A P _114084 s x)). Qed.
Lemma lem8370231 {A P : Type'} (_114084 : type794 A P) (s : P -> A) : (term1996 A P _114084 s) = (term2019 A P _114084 s).
Proof. exact (fun_ext (fun x : A => @lem8370226 A P _114084 s x)). Qed.
Lemma lem8370232 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem8370233 {A P : Type'} (_114084 : type794 A P) (s : P -> A) : (term1997 A P _114084 s) = (term2020 A P _114084 s).
Proof. exact (MK_COMB (@lem8370232 A) (@lem8370231 A P _114084 s)). Qed.
Lemma lem8370282 {A P : Type'} (_114084 : type794 A P) : (term1998 A P _114084) = (term2021 A P _114084).
Proof. exact (fun_ext (fun s : P -> A => @lem8370233 A P _114084 s)). Qed.
Lemma lem8370283 {A P : Type'} : (@all (P -> A)) = (@all (P -> A)).
Proof. exact (eq_refl (@all (P -> A))). Qed.
Lemma lem8370290 {A P : Type'} (_114084 : type794 A P) : (term1999 A P _114084) = (term2022 A P _114084).
Proof. exact (MK_COMB (@lem8370283 A P) (@lem8370282 A P _114084)). Qed.
Lemma lem8370291 {A P : Type'} (_114084 : type794 A P) : (term1491 A P _114084) = (term2022 A P _114084).
Proof. exact (TRANS (@lem8370174 A P _114084) (@lem8370290 A P _114084)). Qed.
Lemma lem8370292 {A P : Type'} (_114084 : type794 A P) (h1 : term1491 A P _114084) : term2022 A P _114084.
Proof. exact (EQ_MP (@lem8370291 A P _114084) (@lem8370147 A P _114084 h1)). Qed.
Lemma lem8370299 {A B : Type'} (lt2 : type1402 A) (x : A) (f : A -> B) (g : A -> B) (z : A) : (term2023 A B lt2 x f g z) = (term2024 A B lt2 x f g z).
Proof. exact (@lem17362 (lt2 z x) ((f z) = (g z))). Qed.
Lemma lem8370300 {A : Type'} (P : A -> Prop) : (term145 A P) = (term146 A P).
Proof. exact (@lem18392 A P). Qed.
Lemma lem8370301 {A B : Type'} (lt2 : type1402 A) (x : A) (f : A -> B) (g : A -> B) : (term2025 A B lt2 x f g) = (term2026 A B lt2 x f g).
Proof. exact (@lem8370300 A (term1859 A B lt2 x f g)). Qed.
Lemma lem8370302 {A B : Type'} (lt2 : type1402 A) (x : A) (f : A -> B) (g : A -> B) (z : A) : (term2027 A B lt2 x f g z) = (term1858 A B lt2 x f g z).
Proof. exact (eq_refl (term2027 A B lt2 x f g z)). Qed.
Lemma lem8370303 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem8370304 {A B : Type'} (lt2 : type1402 A) (x : A) (f : A -> B) (g : A -> B) (z : A) : (term2028 A B lt2 x f g z) = (term2023 A B lt2 x f g z).
Proof. exact (MK_COMB (@lem8370303) (@lem8370302 A B lt2 x f g z)). Qed.
Lemma lem8370305 {A B : Type'} (lt2 : type1402 A) (x : A) (f : A -> B) (g : A -> B) (z : A) : (term2028 A B lt2 x f g z) = (term2024 A B lt2 x f g z).
Proof. exact (TRANS (@lem8370304 A B lt2 x f g z) (@lem8370299 A B lt2 x f g z)). Qed.
Lemma lem8370306 {A B : Type'} (lt2 : type1402 A) (x : A) (f : A -> B) (g : A -> B) : (term2029 A B lt2 x f g) = (term2030 A B lt2 x f g).
Proof. exact (fun_ext (fun z : A => @lem8370305 A B lt2 x f g z)). Qed.
Lemma lem8370307 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem8370308 {A B : Type'} (lt2 : type1402 A) (x : A) (f : A -> B) (g : A -> B) : (term2026 A B lt2 x f g) = (term2031 A B lt2 x f g).
Proof. exact (MK_COMB (@lem8370307 A) (@lem8370306 A B lt2 x f g)). Qed.
Lemma lem8370309 {A B : Type'} (lt2 : type1402 A) (x : A) (f : A -> B) (g : A -> B) : (term2025 A B lt2 x f g) = (term2031 A B lt2 x f g).
Proof. exact (TRANS (@lem8370301 A B lt2 x f g) (@lem8370308 A B lt2 x f g)). Qed.
Lemma lem8370324 {A B : Type'} (f : A -> B) (P1 : type551 A B) (g : A -> B) (x : A) : ((P1 f x) = (P1 g x)) = (term2032 A B f P1 g x).
Proof. exact (@lem17784 (P1 f x) (P1 g x)). Qed.
Lemma lem8370329 {A B : Type'} (G1 : type548 A B) (f : A -> B) (H1 : type549 A B) (g : A -> B) (x : A) : (term1842 A B G1 f H1 g x) = (term1842 A B G1 f H1 g x).
Proof. exact (eq_refl (term1842 A B G1 f H1 g x)). Qed.
Lemma lem8370330 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8370331 {A B : Type'} (f : A -> B) (P1 : type551 A B) (g : A -> B) (x : A) : (term1838 A B f P1 g x) = (term2033 A B f P1 g x).
Proof. exact (MK_COMB (@lem8370330) (@lem8370324 A B f P1 g x)). Qed.
Lemma lem8370332 {A B : Type'} (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (H1 : type549 A B) (g : A -> B) (x : A) : (term1843 A B P1 G1 f H1 g x) = (term2034 A B P1 G1 f H1 g x).
Proof. exact (MK_COMB (@lem8370331 A B f P1 g x) (@lem8370329 A B G1 f H1 g x)). Qed.
Lemma lem8370333 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8370334 {A B : Type'} (lt2 : type1402 A) (x : A) (f : A -> B) (g : A -> B) : (term2035 A B lt2 x f g) = (term2036 A B lt2 x f g).
Proof. exact (MK_COMB (@lem8370333) (@lem8370309 A B lt2 x f g)). Qed.
Lemma lem8370335 {A B : Type'} (lt2 : type1402 A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (H1 : type549 A B) (g : A -> B) (x : A) : (term2037 A B lt2 P1 G1 f H1 g x) = (term2038 A B lt2 P1 G1 f H1 g x).
Proof. exact (MK_COMB (@lem8370334 A B lt2 x f g) (@lem8370332 A B P1 G1 f H1 g x)). Qed.
Lemma lem8370336 {A B : Type'} (lt2 : type1402 A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (H1 : type549 A B) (g : A -> B) (x : A) : (term1844 A B lt2 P1 G1 f H1 g x) = (term2037 A B lt2 P1 G1 f H1 g x).
Proof. exact (@lem17265 (term1193 A B lt2 x f g) (term1843 A B P1 G1 f H1 g x)). Qed.
Lemma lem8370337 {A B : Type'} (lt2 : type1402 A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (H1 : type549 A B) (g : A -> B) (x : A) : (term1844 A B lt2 P1 G1 f H1 g x) = (term2038 A B lt2 P1 G1 f H1 g x).
Proof. exact (TRANS (@lem8370336 A B lt2 P1 G1 f H1 g x) (@lem8370335 A B lt2 P1 G1 f H1 g x)). Qed.
Lemma lem8370338 {A B : Type'} (lt2 : type1402 A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (H1 : type549 A B) (g : A -> B) : (term1931 A B lt2 P1 G1 f H1 g) = (term2039 A B lt2 P1 G1 f H1 g).
Proof. exact (fun_ext (fun x : A => @lem8370337 A B lt2 P1 G1 f H1 g x)). Qed.
Lemma lem8370339 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem8370340 {A B : Type'} (lt2 : type1402 A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (H1 : type549 A B) (g : A -> B) : (term1932 A B lt2 P1 G1 f H1 g) = (term2040 A B lt2 P1 G1 f H1 g).
Proof. exact (MK_COMB (@lem8370339 A) (@lem8370338 A B lt2 P1 G1 f H1 g)). Qed.
Lemma lem8370341 {A B : Type'} (lt2 : type1402 A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (H1 : type549 A B) : (term1933 A B lt2 P1 G1 f H1) = (term2041 A B lt2 P1 G1 f H1).
Proof. exact (fun_ext (fun g : A -> B => @lem8370340 A B lt2 P1 G1 f H1 g)). Qed.
Lemma lem8370342 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem8370343 {A B : Type'} (lt2 : type1402 A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (H1 : type549 A B) : (term1934 A B lt2 P1 G1 f H1) = (term2042 A B lt2 P1 G1 f H1).
Proof. exact (MK_COMB (@lem8370342 A B) (@lem8370341 A B lt2 P1 G1 f H1)). Qed.
Lemma lem8370344 {A B : Type'} (lt2 : type1402 A) (P1 : type551 A B) (G1 : type548 A B) (H1 : type549 A B) : (term1935 A B lt2 P1 G1 H1) = (term2043 A B lt2 P1 G1 H1).
Proof. exact (fun_ext (fun f : A -> B => @lem8370343 A B lt2 P1 G1 f H1)). Qed.
Lemma lem8370345 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem8370346 {A B : Type'} (lt2 : type1402 A) (P1 : type551 A B) (G1 : type548 A B) (H1 : type549 A B) : (term1417 A B lt2 P1 G1 H1) = (term2044 A B lt2 P1 G1 H1).
Proof. exact (MK_COMB (@lem8370345 A B) (@lem8370344 A B lt2 P1 G1 H1)). Qed.
Lemma lem8370453 {A : Type'} (P : A -> Prop) (Q : Prop) : (term169 A P Q) = (term170 A P Q).
Proof. exact (EQ_MP (@lem18905 A P Q) (@lem18904 A P Q)). Qed.
Lemma lem8370454 {A : Type'} (P : A -> Prop) (Q : Prop) : (term169 A P Q) = (term170 A P Q).
Proof. exact (@lem8370453 A P Q). Qed.
Lemma lem8370455 {A B : Type'} (lt2 : type1402 A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (H1 : type549 A B) (g : A -> B) (x : A) : (term2045 A B lt2 P1 G1 f H1 g x) = (term2046 A B lt2 P1 G1 f H1 g x).
Proof. exact (@lem8370454 A (term2030 A B lt2 x f g) (term2034 A B P1 G1 f H1 g x)). Qed.
Lemma lem8370456 {A B : Type'} (lt2 : type1402 A) (x : A) (f : A -> B) (g : A -> B) (z : A) : (term2047 A B lt2 x f g z) = (term2024 A B lt2 x f g z).
Proof. exact (eq_refl (term2047 A B lt2 x f g z)). Qed.
Lemma lem8370457 {A B : Type'} (lt2 : type1402 A) (x : A) (f : A -> B) (g : A -> B) : (term2048 A B lt2 x f g) = (term2030 A B lt2 x f g).
Proof. exact (fun_ext (fun z : A => @lem8370456 A B lt2 x f g z)). Qed.
Lemma lem8370458 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem8370459 {A B : Type'} (lt2 : type1402 A) (x : A) (f : A -> B) (g : A -> B) : (term2049 A B lt2 x f g) = (term2031 A B lt2 x f g).
Proof. exact (MK_COMB (@lem8370458 A) (@lem8370457 A B lt2 x f g)). Qed.
Lemma lem8370460 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8370461 {A B : Type'} (lt2 : type1402 A) (x : A) (f : A -> B) (g : A -> B) : (term2050 A B lt2 x f g) = (term2036 A B lt2 x f g).
Proof. exact (MK_COMB (@lem8370460) (@lem8370459 A B lt2 x f g)). Qed.
Lemma lem8370462 {A B : Type'} (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (H1 : type549 A B) (g : A -> B) (x : A) : (term2034 A B P1 G1 f H1 g x) = (term2034 A B P1 G1 f H1 g x).
Proof. exact (eq_refl (term2034 A B P1 G1 f H1 g x)). Qed.
Lemma lem8370463 {A B : Type'} (lt2 : type1402 A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (H1 : type549 A B) (g : A -> B) (x : A) : (term2045 A B lt2 P1 G1 f H1 g x) = (term2038 A B lt2 P1 G1 f H1 g x).
Proof. exact (MK_COMB (@lem8370461 A B lt2 x f g) (@lem8370462 A B P1 G1 f H1 g x)). Qed.
Lemma lem8370464 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8370465 {A B : Type'} (lt2 : type1402 A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (H1 : type549 A B) (g : A -> B) (x : A) : (term2051 A B lt2 P1 G1 f H1 g x) = (term2052 A B lt2 P1 G1 f H1 g x).
Proof. exact (MK_COMB (@lem8370464) (@lem8370463 A B lt2 P1 G1 f H1 g x)). Qed.
Lemma lem8370466 {A B : Type'} (lt2 : type1402 A) (x : A) (f : A -> B) (g : A -> B) (z : A) : (term2047 A B lt2 x f g z) = (term2024 A B lt2 x f g z).
Proof. exact (eq_refl (term2047 A B lt2 x f g z)). Qed.
Lemma lem8370467 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8370468 {A B : Type'} (lt2 : type1402 A) (x : A) (f : A -> B) (g : A -> B) (z : A) : (term2053 A B lt2 x f g z) = (term2054 A B lt2 x f g z).
Proof. exact (MK_COMB (@lem8370467) (@lem8370466 A B lt2 x f g z)). Qed.
Lemma lem8370469 {A B : Type'} (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (H1 : type549 A B) (g : A -> B) (x : A) : (term2034 A B P1 G1 f H1 g x) = (term2034 A B P1 G1 f H1 g x).
Proof. exact (eq_refl (term2034 A B P1 G1 f H1 g x)). Qed.
Lemma lem8370470 {A B : Type'} (lt2 : type1402 A) (z : A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (H1 : type549 A B) (g : A -> B) (x : A) : (term2055 A B lt2 z P1 G1 f H1 g x) = (term2056 A B lt2 z P1 G1 f H1 g x).
Proof. exact (MK_COMB (@lem8370468 A B lt2 x f g z) (@lem8370469 A B P1 G1 f H1 g x)). Qed.
Lemma lem8370471 {A B : Type'} (lt2 : type1402 A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (H1 : type549 A B) (g : A -> B) (x : A) : (term2057 A B lt2 P1 G1 f H1 g x) = (term2058 A B lt2 P1 G1 f H1 g x).
Proof. exact (fun_ext (fun z : A => @lem8370470 A B lt2 z P1 G1 f H1 g x)). Qed.
Lemma lem8370472 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem8370473 {A B : Type'} (lt2 : type1402 A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (H1 : type549 A B) (g : A -> B) (x : A) : (term2046 A B lt2 P1 G1 f H1 g x) = (term2059 A B lt2 P1 G1 f H1 g x).
Proof. exact (MK_COMB (@lem8370472 A) (@lem8370471 A B lt2 P1 G1 f H1 g x)). Qed.
Lemma lem8370474 {A B : Type'} (lt2 : type1402 A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (H1 : type549 A B) (g : A -> B) (x : A) : ((term2045 A B lt2 P1 G1 f H1 g x) = (term2046 A B lt2 P1 G1 f H1 g x)) = ((term2038 A B lt2 P1 G1 f H1 g x) = (term2059 A B lt2 P1 G1 f H1 g x)).
Proof. exact (MK_COMB (@lem8370465 A B lt2 P1 G1 f H1 g x) (@lem8370473 A B lt2 P1 G1 f H1 g x)). Qed.
Lemma lem8370475 {A B : Type'} (lt2 : type1402 A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (H1 : type549 A B) (g : A -> B) (x : A) : (term2038 A B lt2 P1 G1 f H1 g x) = (term2059 A B lt2 P1 G1 f H1 g x).
Proof. exact (EQ_MP (@lem8370474 A B lt2 P1 G1 f H1 g x) (@lem8370455 A B lt2 P1 G1 f H1 g x)). Qed.
Lemma lem8370476 {A B : Type'} (lt2 : type1402 A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (H1 : type549 A B) (g : A -> B) : (term2039 A B lt2 P1 G1 f H1 g) = (term2060 A B lt2 P1 G1 f H1 g).
Proof. exact (fun_ext (fun x : A => @lem8370475 A B lt2 P1 G1 f H1 g x)). Qed.
Lemma lem8370477 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem8370478 {A B : Type'} (lt2 : type1402 A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (H1 : type549 A B) (g : A -> B) : (term2040 A B lt2 P1 G1 f H1 g) = (term2061 A B lt2 P1 G1 f H1 g).
Proof. exact (MK_COMB (@lem8370477 A) (@lem8370476 A B lt2 P1 G1 f H1 g)). Qed.
Lemma lem8370480 {A B : Type'} (P : type1413 A B) : (term188 A B P) = (term189 A B P).
Proof. exact (EQ_MP (@lem18899 A B P) (@lem18898 A B P)). Qed.
Lemma lem8370481 {A : Type'} (P : type1402 A) : (term190 A P) = (term191 A P).
Proof. exact (@lem8370480 A A P). Qed.
Lemma lem8370482 {A B : Type'} (lt2 : type1402 A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (H1 : type549 A B) (g : A -> B) : (term2062 A B lt2 P1 G1 f H1 g) = (term2063 A B lt2 P1 G1 f H1 g).
Proof. exact (@lem8370481 A (term2064 A B lt2 P1 G1 f H1 g)). Qed.
Lemma lem8370483 {A B : Type'} (lt2 : type1402 A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (H1 : type549 A B) (g : A -> B) (x : A) : (term2065 A B lt2 P1 G1 f H1 g x) = (term2058 A B lt2 P1 G1 f H1 g x).
Proof. exact (eq_refl (term2065 A B lt2 P1 G1 f H1 g x)). Qed.
Lemma lem8370484 {A : Type'} (z : A) : z = z.
Proof. exact (eq_refl z). Qed.
Lemma lem8370485 {A B : Type'} (lt2 : type1402 A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (H1 : type549 A B) (g : A -> B) (x : A) (z : A) : (term2066 A B lt2 P1 G1 f H1 g x z) = (term2067 A B lt2 P1 G1 f H1 g x z).
Proof. exact (MK_COMB (@lem8370483 A B lt2 P1 G1 f H1 g x) (@lem8370484 A z)). Qed.
Lemma lem8370486 {A B : Type'} (lt2 : type1402 A) (z : A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (H1 : type549 A B) (g : A -> B) (x : A) : (term2067 A B lt2 P1 G1 f H1 g x z) = (term2056 A B lt2 z P1 G1 f H1 g x).
Proof. exact (eq_refl (term2067 A B lt2 P1 G1 f H1 g x z)). Qed.
Lemma lem8370487 {A B : Type'} (lt2 : type1402 A) (z : A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (H1 : type549 A B) (g : A -> B) (x : A) : (term2066 A B lt2 P1 G1 f H1 g x z) = (term2056 A B lt2 z P1 G1 f H1 g x).
Proof. exact (TRANS (@lem8370485 A B lt2 P1 G1 f H1 g x z) (@lem8370486 A B lt2 z P1 G1 f H1 g x)). Qed.
Lemma lem8370488 {A B : Type'} (lt2 : type1402 A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (H1 : type549 A B) (g : A -> B) (x : A) : (term2068 A B lt2 P1 G1 f H1 g x) = (term2058 A B lt2 P1 G1 f H1 g x).
Proof. exact (fun_ext (fun z : A => @lem8370487 A B lt2 z P1 G1 f H1 g x)). Qed.
Lemma lem8370489 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem8370490 {A B : Type'} (lt2 : type1402 A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (H1 : type549 A B) (g : A -> B) (x : A) : (term2069 A B lt2 P1 G1 f H1 g x) = (term2059 A B lt2 P1 G1 f H1 g x).
Proof. exact (MK_COMB (@lem8370489 A) (@lem8370488 A B lt2 P1 G1 f H1 g x)). Qed.
Lemma lem8370491 {A B : Type'} (lt2 : type1402 A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (H1 : type549 A B) (g : A -> B) : (term2070 A B lt2 P1 G1 f H1 g) = (term2060 A B lt2 P1 G1 f H1 g).
Proof. exact (fun_ext (fun x : A => @lem8370490 A B lt2 P1 G1 f H1 g x)). Qed.
Lemma lem8370492 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem8370493 {A B : Type'} (lt2 : type1402 A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (H1 : type549 A B) (g : A -> B) : (term2062 A B lt2 P1 G1 f H1 g) = (term2061 A B lt2 P1 G1 f H1 g).
Proof. exact (MK_COMB (@lem8370492 A) (@lem8370491 A B lt2 P1 G1 f H1 g)). Qed.
Lemma lem8370494 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8370495 {A B : Type'} (lt2 : type1402 A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (H1 : type549 A B) (g : A -> B) : (term2071 A B lt2 P1 G1 f H1 g) = (term2072 A B lt2 P1 G1 f H1 g).
Proof. exact (MK_COMB (@lem8370494) (@lem8370493 A B lt2 P1 G1 f H1 g)). Qed.
Lemma lem8370496 {A B : Type'} (lt2 : type1402 A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (H1 : type549 A B) (g : A -> B) (x : A) : (term2065 A B lt2 P1 G1 f H1 g x) = (term2058 A B lt2 P1 G1 f H1 g x).
Proof. exact (eq_refl (term2065 A B lt2 P1 G1 f H1 g x)). Qed.
Lemma lem8370497 {A : Type'} (z : A -> A) (x : A) : (z x) = (z x).
Proof. exact (eq_refl (z x)). Qed.
Lemma lem8370498 {A B : Type'} (lt2 : type1402 A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (H1 : type549 A B) (g : A -> B) (z : A -> A) (x : A) : (term2073 A B lt2 P1 G1 f H1 g z x) = (term2074 A B lt2 P1 G1 f H1 g z x).
Proof. exact (MK_COMB (@lem8370496 A B lt2 P1 G1 f H1 g x) (@lem8370497 A z x)). Qed.
Lemma lem8370499 {A B : Type'} (lt2 : type1402 A) (z : A -> A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (H1 : type549 A B) (g : A -> B) (x : A) : (term2074 A B lt2 P1 G1 f H1 g z x) = (term2075 A B lt2 z P1 G1 f H1 g x).
Proof. exact (eq_refl (term2074 A B lt2 P1 G1 f H1 g z x)). Qed.
Lemma lem8370500 {A B : Type'} (lt2 : type1402 A) (z : A -> A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (H1 : type549 A B) (g : A -> B) (x : A) : (term2073 A B lt2 P1 G1 f H1 g z x) = (term2075 A B lt2 z P1 G1 f H1 g x).
Proof. exact (TRANS (@lem8370498 A B lt2 P1 G1 f H1 g z x) (@lem8370499 A B lt2 z P1 G1 f H1 g x)). Qed.
Lemma lem8370501 {A B : Type'} (lt2 : type1402 A) (z : A -> A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (H1 : type549 A B) (g : A -> B) : (term2076 A B lt2 P1 G1 f H1 g z) = (term2077 A B lt2 z P1 G1 f H1 g).
Proof. exact (fun_ext (fun x : A => @lem8370500 A B lt2 z P1 G1 f H1 g x)). Qed.
Lemma lem8370502 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem8370503 {A B : Type'} (lt2 : type1402 A) (z : A -> A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (H1 : type549 A B) (g : A -> B) : (term2078 A B lt2 P1 G1 f H1 g z) = (term2079 A B lt2 z P1 G1 f H1 g).
Proof. exact (MK_COMB (@lem8370502 A) (@lem8370501 A B lt2 z P1 G1 f H1 g)). Qed.
Lemma lem8370504 {A B : Type'} (lt2 : type1402 A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (H1 : type549 A B) (g : A -> B) : (term2080 A B lt2 P1 G1 f H1 g) = (term2081 A B lt2 P1 G1 f H1 g).
Proof. exact (fun_ext (fun z : A -> A => @lem8370503 A B lt2 z P1 G1 f H1 g)). Qed.
Lemma lem8370505 {A : Type'} : (@ex (A -> A)) = (@ex (A -> A)).
Proof. exact (eq_refl (@ex (A -> A))). Qed.
Lemma lem8370506 {A B : Type'} (lt2 : type1402 A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (H1 : type549 A B) (g : A -> B) : (term2063 A B lt2 P1 G1 f H1 g) = (term2082 A B lt2 P1 G1 f H1 g).
Proof. exact (MK_COMB (@lem8370505 A) (@lem8370504 A B lt2 P1 G1 f H1 g)). Qed.
Lemma lem8370507 {A B : Type'} (lt2 : type1402 A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (H1 : type549 A B) (g : A -> B) : ((term2062 A B lt2 P1 G1 f H1 g) = (term2063 A B lt2 P1 G1 f H1 g)) = ((term2061 A B lt2 P1 G1 f H1 g) = (term2082 A B lt2 P1 G1 f H1 g)).
Proof. exact (MK_COMB (@lem8370495 A B lt2 P1 G1 f H1 g) (@lem8370506 A B lt2 P1 G1 f H1 g)). Qed.
Lemma lem8370508 {A B : Type'} (lt2 : type1402 A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (H1 : type549 A B) (g : A -> B) : (term2061 A B lt2 P1 G1 f H1 g) = (term2082 A B lt2 P1 G1 f H1 g).
Proof. exact (EQ_MP (@lem8370507 A B lt2 P1 G1 f H1 g) (@lem8370482 A B lt2 P1 G1 f H1 g)). Qed.
Lemma lem8370509 {A B : Type'} (lt2 : type1402 A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (H1 : type549 A B) (g : A -> B) : (term2040 A B lt2 P1 G1 f H1 g) = (term2082 A B lt2 P1 G1 f H1 g).
Proof. exact (TRANS (@lem8370478 A B lt2 P1 G1 f H1 g) (@lem8370508 A B lt2 P1 G1 f H1 g)). Qed.
Lemma lem8370510 {A B : Type'} (lt2 : type1402 A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (H1 : type549 A B) : (term2041 A B lt2 P1 G1 f H1) = (term2083 A B lt2 P1 G1 f H1).
Proof. exact (fun_ext (fun g : A -> B => @lem8370509 A B lt2 P1 G1 f H1 g)). Qed.
Lemma lem8370511 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem8370512 {A B : Type'} (lt2 : type1402 A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (H1 : type549 A B) : (term2042 A B lt2 P1 G1 f H1) = (term2084 A B lt2 P1 G1 f H1).
Proof. exact (MK_COMB (@lem8370511 A B) (@lem8370510 A B lt2 P1 G1 f H1)). Qed.
Lemma lem8370514 {A B : Type'} (P : type1413 A B) : (term188 A B P) = (term189 A B P).
Proof. exact (EQ_MP (@lem18899 A B P) (@lem18898 A B P)). Qed.
Lemma lem8370515 {A B : Type'} (P : type513 A B) : (term2085 A B P) = (term2086 A B P).
Proof. exact (@lem8370514 (A -> B) (A -> A) P). Qed.
Lemma lem8370516 {A B : Type'} (lt2 : type1402 A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (H1 : type549 A B) : (term2087 A B lt2 P1 G1 f H1) = (term2088 A B lt2 P1 G1 f H1).
Proof. exact (@lem8370515 A B (term2089 A B lt2 P1 G1 f H1)). Qed.
Lemma lem8370517 {A B : Type'} (lt2 : type1402 A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (H1 : type549 A B) (g : A -> B) : (term2090 A B lt2 P1 G1 f H1 g) = (term2081 A B lt2 P1 G1 f H1 g).
Proof. exact (eq_refl (term2090 A B lt2 P1 G1 f H1 g)). Qed.
Lemma lem8370518 {A : Type'} (z : A -> A) : z = z.
Proof. exact (eq_refl z). Qed.
Lemma lem8370519 {A B : Type'} (lt2 : type1402 A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (H1 : type549 A B) (g : A -> B) (z : A -> A) : (term2091 A B lt2 P1 G1 f H1 g z) = (term2092 A B lt2 P1 G1 f H1 g z).
Proof. exact (MK_COMB (@lem8370517 A B lt2 P1 G1 f H1 g) (@lem8370518 A z)). Qed.
Lemma lem8370520 {A B : Type'} (lt2 : type1402 A) (z : A -> A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (H1 : type549 A B) (g : A -> B) : (term2092 A B lt2 P1 G1 f H1 g z) = (term2079 A B lt2 z P1 G1 f H1 g).
Proof. exact (eq_refl (term2092 A B lt2 P1 G1 f H1 g z)). Qed.
Lemma lem8370521 {A B : Type'} (lt2 : type1402 A) (z : A -> A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (H1 : type549 A B) (g : A -> B) : (term2091 A B lt2 P1 G1 f H1 g z) = (term2079 A B lt2 z P1 G1 f H1 g).
Proof. exact (TRANS (@lem8370519 A B lt2 P1 G1 f H1 g z) (@lem8370520 A B lt2 z P1 G1 f H1 g)). Qed.
Lemma lem8370522 {A B : Type'} (lt2 : type1402 A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (H1 : type549 A B) (g : A -> B) : (term2093 A B lt2 P1 G1 f H1 g) = (term2081 A B lt2 P1 G1 f H1 g).
Proof. exact (fun_ext (fun z : A -> A => @lem8370521 A B lt2 z P1 G1 f H1 g)). Qed.
Lemma lem8370523 {A : Type'} : (@ex (A -> A)) = (@ex (A -> A)).
Proof. exact (eq_refl (@ex (A -> A))). Qed.
Lemma lem8370524 {A B : Type'} (lt2 : type1402 A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (H1 : type549 A B) (g : A -> B) : (term2094 A B lt2 P1 G1 f H1 g) = (term2082 A B lt2 P1 G1 f H1 g).
Proof. exact (MK_COMB (@lem8370523 A) (@lem8370522 A B lt2 P1 G1 f H1 g)). Qed.
Lemma lem8370525 {A B : Type'} (lt2 : type1402 A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (H1 : type549 A B) : (term2095 A B lt2 P1 G1 f H1) = (term2083 A B lt2 P1 G1 f H1).
Proof. exact (fun_ext (fun g : A -> B => @lem8370524 A B lt2 P1 G1 f H1 g)). Qed.
Lemma lem8370526 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem8370527 {A B : Type'} (lt2 : type1402 A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (H1 : type549 A B) : (term2087 A B lt2 P1 G1 f H1) = (term2084 A B lt2 P1 G1 f H1).
Proof. exact (MK_COMB (@lem8370526 A B) (@lem8370525 A B lt2 P1 G1 f H1)). Qed.
Lemma lem8370528 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8370529 {A B : Type'} (lt2 : type1402 A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (H1 : type549 A B) : (term2096 A B lt2 P1 G1 f H1) = (term2097 A B lt2 P1 G1 f H1).
Proof. exact (MK_COMB (@lem8370528) (@lem8370527 A B lt2 P1 G1 f H1)). Qed.
Lemma lem8370530 {A B : Type'} (lt2 : type1402 A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (H1 : type549 A B) (g : A -> B) : (term2090 A B lt2 P1 G1 f H1 g) = (term2081 A B lt2 P1 G1 f H1 g).
Proof. exact (eq_refl (term2090 A B lt2 P1 G1 f H1 g)). Qed.
Lemma lem8370531 {A B : Type'} (z : type548 A B) (g : A -> B) : (z g) = (z g).
Proof. exact (eq_refl (z g)). Qed.
Lemma lem8370532 {A B : Type'} (lt2 : type1402 A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (H1 : type549 A B) (z : type548 A B) (g : A -> B) : (term2098 A B lt2 P1 G1 f H1 z g) = (term2099 A B lt2 P1 G1 f H1 z g).
Proof. exact (MK_COMB (@lem8370530 A B lt2 P1 G1 f H1 g) (@lem8370531 A B z g)). Qed.
Lemma lem8370533 {A B : Type'} (lt2 : type1402 A) (z : type548 A B) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (H1 : type549 A B) (g : A -> B) : (term2099 A B lt2 P1 G1 f H1 z g) = (term2100 A B lt2 z P1 G1 f H1 g).
Proof. exact (eq_refl (term2099 A B lt2 P1 G1 f H1 z g)). Qed.
Lemma lem8370534 {A B : Type'} (lt2 : type1402 A) (z : type548 A B) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (H1 : type549 A B) (g : A -> B) : (term2098 A B lt2 P1 G1 f H1 z g) = (term2100 A B lt2 z P1 G1 f H1 g).
Proof. exact (TRANS (@lem8370532 A B lt2 P1 G1 f H1 z g) (@lem8370533 A B lt2 z P1 G1 f H1 g)). Qed.
Lemma lem8370535 {A B : Type'} (lt2 : type1402 A) (z : type548 A B) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (H1 : type549 A B) : (term2101 A B lt2 P1 G1 f H1 z) = (term2102 A B lt2 z P1 G1 f H1).
Proof. exact (fun_ext (fun g : A -> B => @lem8370534 A B lt2 z P1 G1 f H1 g)). Qed.
Lemma lem8370536 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem8370537 {A B : Type'} (lt2 : type1402 A) (z : type548 A B) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (H1 : type549 A B) : (term2103 A B lt2 P1 G1 f H1 z) = (term2104 A B lt2 z P1 G1 f H1).
Proof. exact (MK_COMB (@lem8370536 A B) (@lem8370535 A B lt2 z P1 G1 f H1)). Qed.
Lemma lem8370538 {A B : Type'} (lt2 : type1402 A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (H1 : type549 A B) : (term2105 A B lt2 P1 G1 f H1) = (term2106 A B lt2 P1 G1 f H1).
Proof. exact (fun_ext (fun z : type548 A B => @lem8370537 A B lt2 z P1 G1 f H1)). Qed.
Lemma lem8370539 {A B : Type'} : (@ex ((A -> B) -> A -> A)) = (@ex ((A -> B) -> A -> A)).
Proof. exact (eq_refl (@ex ((A -> B) -> A -> A))). Qed.
Lemma lem8370540 {A B : Type'} (lt2 : type1402 A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (H1 : type549 A B) : (term2088 A B lt2 P1 G1 f H1) = (term2107 A B lt2 P1 G1 f H1).
Proof. exact (MK_COMB (@lem8370539 A B) (@lem8370538 A B lt2 P1 G1 f H1)). Qed.
Lemma lem8370541 {A B : Type'} (lt2 : type1402 A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (H1 : type549 A B) : ((term2087 A B lt2 P1 G1 f H1) = (term2088 A B lt2 P1 G1 f H1)) = ((term2084 A B lt2 P1 G1 f H1) = (term2107 A B lt2 P1 G1 f H1)).
Proof. exact (MK_COMB (@lem8370529 A B lt2 P1 G1 f H1) (@lem8370540 A B lt2 P1 G1 f H1)). Qed.
Lemma lem8370542 {A B : Type'} (lt2 : type1402 A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (H1 : type549 A B) : (term2084 A B lt2 P1 G1 f H1) = (term2107 A B lt2 P1 G1 f H1).
Proof. exact (EQ_MP (@lem8370541 A B lt2 P1 G1 f H1) (@lem8370516 A B lt2 P1 G1 f H1)). Qed.
Lemma lem8370543 {A B : Type'} (lt2 : type1402 A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (H1 : type549 A B) : (term2042 A B lt2 P1 G1 f H1) = (term2107 A B lt2 P1 G1 f H1).
Proof. exact (TRANS (@lem8370512 A B lt2 P1 G1 f H1) (@lem8370542 A B lt2 P1 G1 f H1)). Qed.
Lemma lem8370544 {A B : Type'} (lt2 : type1402 A) (P1 : type551 A B) (G1 : type548 A B) (H1 : type549 A B) : (term2043 A B lt2 P1 G1 H1) = (term2108 A B lt2 P1 G1 H1).
Proof. exact (fun_ext (fun f : A -> B => @lem8370543 A B lt2 P1 G1 f H1)). Qed.
Lemma lem8370545 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem8370546 {A B : Type'} (lt2 : type1402 A) (P1 : type551 A B) (G1 : type548 A B) (H1 : type549 A B) : (term2044 A B lt2 P1 G1 H1) = (term2109 A B lt2 P1 G1 H1).
Proof. exact (MK_COMB (@lem8370545 A B) (@lem8370544 A B lt2 P1 G1 H1)). Qed.
Lemma lem8370548 {A B : Type'} (P : type1413 A B) : (term188 A B P) = (term189 A B P).
Proof. exact (EQ_MP (@lem18899 A B P) (@lem18898 A B P)). Qed.
Lemma lem8370549 {A B : Type'} (P : type493 A B) : (term2110 A B P) = (term2111 A B P).
Proof. exact (@lem8370548 (A -> B) (type548 A B) P). Qed.
Lemma lem8370550 {A B : Type'} (lt2 : type1402 A) (P1 : type551 A B) (G1 : type548 A B) (H1 : type549 A B) : (term2112 A B lt2 P1 G1 H1) = (term2113 A B lt2 P1 G1 H1).
Proof. exact (@lem8370549 A B (term2114 A B lt2 P1 G1 H1)). Qed.
Lemma lem8370551 {A B : Type'} (lt2 : type1402 A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (H1 : type549 A B) : (term2115 A B lt2 P1 G1 H1 f) = (term2106 A B lt2 P1 G1 f H1).
Proof. exact (eq_refl (term2115 A B lt2 P1 G1 H1 f)). Qed.
Lemma lem8370552 {A B : Type'} (z : type548 A B) : z = z.
Proof. exact (eq_refl z). Qed.
Lemma lem8370553 {A B : Type'} (lt2 : type1402 A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (H1 : type549 A B) (z : type548 A B) : (term2116 A B lt2 P1 G1 H1 f z) = (term2117 A B lt2 P1 G1 f H1 z).
Proof. exact (MK_COMB (@lem8370551 A B lt2 P1 G1 f H1) (@lem8370552 A B z)). Qed.
Lemma lem8370554 {A B : Type'} (lt2 : type1402 A) (z : type548 A B) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (H1 : type549 A B) : (term2117 A B lt2 P1 G1 f H1 z) = (term2104 A B lt2 z P1 G1 f H1).
Proof. exact (eq_refl (term2117 A B lt2 P1 G1 f H1 z)). Qed.
Lemma lem8370555 {A B : Type'} (lt2 : type1402 A) (z : type548 A B) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (H1 : type549 A B) : (term2116 A B lt2 P1 G1 H1 f z) = (term2104 A B lt2 z P1 G1 f H1).
Proof. exact (TRANS (@lem8370553 A B lt2 P1 G1 f H1 z) (@lem8370554 A B lt2 z P1 G1 f H1)). Qed.
Lemma lem8370556 {A B : Type'} (lt2 : type1402 A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (H1 : type549 A B) : (term2118 A B lt2 P1 G1 H1 f) = (term2106 A B lt2 P1 G1 f H1).
Proof. exact (fun_ext (fun z : type548 A B => @lem8370555 A B lt2 z P1 G1 f H1)). Qed.
Lemma lem8370557 {A B : Type'} : (@ex ((A -> B) -> A -> A)) = (@ex ((A -> B) -> A -> A)).
Proof. exact (eq_refl (@ex ((A -> B) -> A -> A))). Qed.
Lemma lem8370558 {A B : Type'} (lt2 : type1402 A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (H1 : type549 A B) : (term2119 A B lt2 P1 G1 H1 f) = (term2107 A B lt2 P1 G1 f H1).
Proof. exact (MK_COMB (@lem8370557 A B) (@lem8370556 A B lt2 P1 G1 f H1)). Qed.
Lemma lem8370559 {A B : Type'} (lt2 : type1402 A) (P1 : type551 A B) (G1 : type548 A B) (H1 : type549 A B) : (term2120 A B lt2 P1 G1 H1) = (term2108 A B lt2 P1 G1 H1).
Proof. exact (fun_ext (fun f : A -> B => @lem8370558 A B lt2 P1 G1 f H1)). Qed.
Lemma lem8370560 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem8370561 {A B : Type'} (lt2 : type1402 A) (P1 : type551 A B) (G1 : type548 A B) (H1 : type549 A B) : (term2112 A B lt2 P1 G1 H1) = (term2109 A B lt2 P1 G1 H1).
Proof. exact (MK_COMB (@lem8370560 A B) (@lem8370559 A B lt2 P1 G1 H1)). Qed.
Lemma lem8370562 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8370563 {A B : Type'} (lt2 : type1402 A) (P1 : type551 A B) (G1 : type548 A B) (H1 : type549 A B) : (term2121 A B lt2 P1 G1 H1) = (term2122 A B lt2 P1 G1 H1).
Proof. exact (MK_COMB (@lem8370562) (@lem8370561 A B lt2 P1 G1 H1)). Qed.
Lemma lem8370564 {A B : Type'} (lt2 : type1402 A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (H1 : type549 A B) : (term2115 A B lt2 P1 G1 H1 f) = (term2106 A B lt2 P1 G1 f H1).
Proof. exact (eq_refl (term2115 A B lt2 P1 G1 H1 f)). Qed.
Lemma lem8370565 {A B : Type'} (z : type515 A B) (f : A -> B) : (z f) = (z f).
Proof. exact (eq_refl (z f)). Qed.
Lemma lem8370566 {A B : Type'} (lt2 : type1402 A) (P1 : type551 A B) (G1 : type548 A B) (H1 : type549 A B) (z : type515 A B) (f : A -> B) : (term2123 A B lt2 P1 G1 H1 z f) = (term2124 A B lt2 P1 G1 H1 z f).
Proof. exact (MK_COMB (@lem8370564 A B lt2 P1 G1 f H1) (@lem8370565 A B z f)). Qed.
Lemma lem8370567 {A B : Type'} (lt2 : type1402 A) (z : type515 A B) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (H1 : type549 A B) : (term2124 A B lt2 P1 G1 H1 z f) = (term2125 A B lt2 z P1 G1 f H1).
Proof. exact (eq_refl (term2124 A B lt2 P1 G1 H1 z f)). Qed.
Lemma lem8370568 {A B : Type'} (lt2 : type1402 A) (z : type515 A B) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (H1 : type549 A B) : (term2123 A B lt2 P1 G1 H1 z f) = (term2125 A B lt2 z P1 G1 f H1).
Proof. exact (TRANS (@lem8370566 A B lt2 P1 G1 H1 z f) (@lem8370567 A B lt2 z P1 G1 f H1)). Qed.
Lemma lem8370569 {A B : Type'} (lt2 : type1402 A) (z : type515 A B) (P1 : type551 A B) (G1 : type548 A B) (H1 : type549 A B) : (term2126 A B lt2 P1 G1 H1 z) = (term2127 A B lt2 z P1 G1 H1).
Proof. exact (fun_ext (fun f : A -> B => @lem8370568 A B lt2 z P1 G1 f H1)). Qed.
Lemma lem8370570 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem8370571 {A B : Type'} (lt2 : type1402 A) (z : type515 A B) (P1 : type551 A B) (G1 : type548 A B) (H1 : type549 A B) : (term2128 A B lt2 P1 G1 H1 z) = (term2129 A B lt2 z P1 G1 H1).
Proof. exact (MK_COMB (@lem8370570 A B) (@lem8370569 A B lt2 z P1 G1 H1)). Qed.
Lemma lem8370572 {A B : Type'} (lt2 : type1402 A) (P1 : type551 A B) (G1 : type548 A B) (H1 : type549 A B) : (term2130 A B lt2 P1 G1 H1) = (term2131 A B lt2 P1 G1 H1).
Proof. exact (fun_ext (fun z : type515 A B => @lem8370571 A B lt2 z P1 G1 H1)). Qed.
Lemma lem8370573 {A B : Type'} : (@ex ((A -> B) -> (A -> B) -> A -> A)) = (@ex ((A -> B) -> (A -> B) -> A -> A)).
Proof. exact (eq_refl (@ex ((A -> B) -> (A -> B) -> A -> A))). Qed.
Lemma lem8370574 {A B : Type'} (lt2 : type1402 A) (P1 : type551 A B) (G1 : type548 A B) (H1 : type549 A B) : (term2113 A B lt2 P1 G1 H1) = (term2132 A B lt2 P1 G1 H1).
Proof. exact (MK_COMB (@lem8370573 A B) (@lem8370572 A B lt2 P1 G1 H1)). Qed.
Lemma lem8370575 {A B : Type'} (lt2 : type1402 A) (P1 : type551 A B) (G1 : type548 A B) (H1 : type549 A B) : ((term2112 A B lt2 P1 G1 H1) = (term2113 A B lt2 P1 G1 H1)) = ((term2109 A B lt2 P1 G1 H1) = (term2132 A B lt2 P1 G1 H1)).
Proof. exact (MK_COMB (@lem8370563 A B lt2 P1 G1 H1) (@lem8370574 A B lt2 P1 G1 H1)). Qed.
Lemma lem8370576 {A B : Type'} (lt2 : type1402 A) (P1 : type551 A B) (G1 : type548 A B) (H1 : type549 A B) : (term2109 A B lt2 P1 G1 H1) = (term2132 A B lt2 P1 G1 H1).
Proof. exact (EQ_MP (@lem8370575 A B lt2 P1 G1 H1) (@lem8370550 A B lt2 P1 G1 H1)). Qed.
Lemma lem8370578 {A B : Type'} (lt2 : type1402 A) (P1 : type551 A B) (G1 : type548 A B) (H1 : type549 A B) : (term2044 A B lt2 P1 G1 H1) = (term2132 A B lt2 P1 G1 H1).
Proof. exact (TRANS (@lem8370546 A B lt2 P1 G1 H1) (@lem8370576 A B lt2 P1 G1 H1)). Qed.
Lemma lem8370579 {A B : Type'} (lt2 : type1402 A) (P1 : type551 A B) (G1 : type548 A B) (H1 : type549 A B) : (term1417 A B lt2 P1 G1 H1) = (term2132 A B lt2 P1 G1 H1).
Proof. exact (TRANS (@lem8370346 A B lt2 P1 G1 H1) (@lem8370578 A B lt2 P1 G1 H1)). Qed.
Lemma lem8370580 {A B : Type'} (lt2 : type1402 A) (P1 : type551 A B) (G1 : type548 A B) (H1 : type549 A B) (h1 : term1417 A B lt2 P1 G1 H1) : term2132 A B lt2 P1 G1 H1.
Proof. exact (EQ_MP (@lem8370579 A B lt2 P1 G1 H1) (@lem8370148 A B lt2 P1 G1 H1 h1)). Qed.
Lemma lem8370587 {A B : Type'} (P1 : type551 A B) (lt2 : type1402 A) (y : A) (G1 : type548 A B) (f : A -> B) (x : A) : (term2133 A B P1 lt2 y G1 f x) = (term2134 A B P1 lt2 y G1 f x).
Proof. exact (@lem17045 (P1 f x) (term1807 A B lt2 y G1 f x)). Qed.
Lemma lem8370588 {A : Type'} (lt2 : type1402 A) (y : A) (x : A) : (lt2 y x) = (lt2 y x).
Proof. exact (eq_refl (lt2 y x)). Qed.
Lemma lem8370589 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8370590 {A B : Type'} (P1 : type551 A B) (lt2 : type1402 A) (y : A) (G1 : type548 A B) (f : A -> B) (x : A) : (term2135 A B P1 lt2 y G1 f x) = (term2136 A B P1 lt2 y G1 f x).
Proof. exact (MK_COMB (@lem8370589) (@lem8370587 A B P1 lt2 y G1 f x)). Qed.
Lemma lem8370591 {A B : Type'} (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (lt2 : type1402 A) (y : A) (x : A) : (term2137 A B P1 G1 f lt2 y x) = (term2138 A B P1 G1 f lt2 y x).
Proof. exact (MK_COMB (@lem8370590 A B P1 lt2 y G1 f x) (@lem8370588 A lt2 y x)). Qed.
Lemma lem8370592 {A B : Type'} (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (lt2 : type1402 A) (y : A) (x : A) : (term1810 A B P1 G1 f lt2 y x) = (term2137 A B P1 G1 f lt2 y x).
Proof. exact (@lem17265 (term1808 A B P1 lt2 y G1 f x) (lt2 y x)). Qed.
Lemma lem8370593 {A B : Type'} (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (lt2 : type1402 A) (y : A) (x : A) : (term1810 A B P1 G1 f lt2 y x) = (term2138 A B P1 G1 f lt2 y x).
Proof. exact (TRANS (@lem8370592 A B P1 G1 f lt2 y x) (@lem8370591 A B P1 G1 f lt2 y x)). Qed.
Lemma lem8370594 {A B : Type'} (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (lt2 : type1402 A) (x : A) : (term1811 A B P1 G1 f lt2 x) = (term2139 A B P1 G1 f lt2 x).
Proof. exact (fun_ext (fun y : A => @lem8370593 A B P1 G1 f lt2 y x)). Qed.
Lemma lem8370595 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem8370596 {A B : Type'} (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (lt2 : type1402 A) (x : A) : (term1812 A B P1 G1 f lt2 x) = (term2140 A B P1 G1 f lt2 x).
Proof. exact (MK_COMB (@lem8370595 A) (@lem8370594 A B P1 G1 f lt2 x)). Qed.
Lemma lem8370597 {A B : Type'} (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (lt2 : type1402 A) : (term1927 A B P1 G1 f lt2) = (term2141 A B P1 G1 f lt2).
Proof. exact (fun_ext (fun x : A => @lem8370596 A B P1 G1 f lt2 x)). Qed.
Lemma lem8370598 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem8370599 {A B : Type'} (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (lt2 : type1402 A) : (term1928 A B P1 G1 f lt2) = (term2142 A B P1 G1 f lt2).
Proof. exact (MK_COMB (@lem8370598 A) (@lem8370597 A B P1 G1 f lt2)). Qed.
Lemma lem8370600 {A B : Type'} (P1 : type551 A B) (G1 : type548 A B) (lt2 : type1402 A) : (term1929 A B P1 G1 lt2) = (term2143 A B P1 G1 lt2).
Proof. exact (fun_ext (fun f : A -> B => @lem8370599 A B P1 G1 f lt2)). Qed.
Lemma lem8370601 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem8370662 {A B : Type'} (P1 : type551 A B) (G1 : type548 A B) (lt2 : type1402 A) : (term1418 A B P1 G1 lt2) = (term2144 A B P1 G1 lt2).
Proof. exact (MK_COMB (@lem8370601 A B) (@lem8370600 A B P1 G1 lt2)). Qed.
Lemma lem8370663 {A B : Type'} (P1 : type551 A B) (G1 : type548 A B) (lt2 : type1402 A) (h1 : term1418 A B P1 G1 lt2) : term2144 A B P1 G1 lt2.
Proof. exact (EQ_MP (@lem8370662 A B P1 G1 lt2) (@lem8370149 A B P1 G1 lt2 h1)). Qed.
Lemma lem8370955 {A B P : Type'} (P2 : type560 A B P) (lt2 : type1402 A) (y : A) (G2 : type557 A B P) (f : A -> B) (a : P) : (term2145 A B P P2 lt2 y G2 f a) = (term2146 A B P P2 lt2 y G2 f a).
Proof. exact (@lem17045 (P2 f a) (term2147 A B P lt2 y G2 f a)). Qed.
Lemma lem8370956 {A P : Type'} (lt2 : type1402 A) (y : A) (s : P -> A) (a : P) : (term2148 A P lt2 y s a) = (term2148 A P lt2 y s a).
Proof. exact (eq_refl (term2148 A P lt2 y s a)). Qed.
Lemma lem8370957 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8370958 {A B P : Type'} (P2 : type560 A B P) (lt2 : type1402 A) (y : A) (G2 : type557 A B P) (f : A -> B) (a : P) : (term2149 A B P P2 lt2 y G2 f a) = (term2150 A B P P2 lt2 y G2 f a).
Proof. exact (MK_COMB (@lem8370957) (@lem8370955 A B P P2 lt2 y G2 f a)). Qed.
Lemma lem8370959 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (lt2 : type1402 A) (y : A) (s : P -> A) (a : P) : (term2151 A B P P2 G2 f lt2 y s a) = (term2152 A B P P2 G2 f lt2 y s a).
Proof. exact (MK_COMB (@lem8370958 A B P P2 lt2 y G2 f a) (@lem8370956 A P lt2 y s a)). Qed.
Lemma lem8370960 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (lt2 : type1402 A) (y : A) (s : P -> A) (a : P) : (term1905 A B P P2 G2 f lt2 y s a) = (term2151 A B P P2 G2 f lt2 y s a).
Proof. exact (@lem17265 (term2153 A B P P2 lt2 y G2 f a) (term2148 A P lt2 y s a)). Qed.
Lemma lem8370961 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (lt2 : type1402 A) (y : A) (s : P -> A) (a : P) : (term1905 A B P P2 G2 f lt2 y s a) = (term2152 A B P P2 G2 f lt2 y s a).
Proof. exact (TRANS (@lem8370960 A B P P2 G2 f lt2 y s a) (@lem8370959 A B P P2 G2 f lt2 y s a)). Qed.
Lemma lem8370962 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (lt2 : type1402 A) (s : P -> A) (a : P) : (term1906 A B P P2 G2 f lt2 s a) = (term2154 A B P P2 G2 f lt2 s a).
Proof. exact (fun_ext (fun y : A => @lem8370961 A B P P2 G2 f lt2 y s a)). Qed.
Lemma lem8370963 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem8370964 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (lt2 : type1402 A) (s : P -> A) (a : P) : (term1907 A B P P2 G2 f lt2 s a) = (term2155 A B P P2 G2 f lt2 s a).
Proof. exact (MK_COMB (@lem8370963 A) (@lem8370962 A B P P2 G2 f lt2 s a)). Qed.
Lemma lem8370965 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (lt2 : type1402 A) (s : P -> A) : (term1908 A B P P2 G2 f lt2 s) = (term2156 A B P P2 G2 f lt2 s).
Proof. exact (fun_ext (fun a : P => @lem8370964 A B P P2 G2 f lt2 s a)). Qed.
Lemma lem8370966 {P : Type'} : (@all P) = (@all P).
Proof. exact (eq_refl (@all P)). Qed.
Lemma lem8370967 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (lt2 : type1402 A) (s : P -> A) : (term1909 A B P P2 G2 f lt2 s) = (term2157 A B P P2 G2 f lt2 s).
Proof. exact (MK_COMB (@lem8370966 P) (@lem8370965 A B P P2 G2 f lt2 s)). Qed.
Lemma lem8370968 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (lt2 : type1402 A) (s : P -> A) : (term1910 A B P P2 G2 lt2 s) = (term2158 A B P P2 G2 lt2 s).
Proof. exact (fun_ext (fun f : A -> B => @lem8370967 A B P P2 G2 f lt2 s)). Qed.
Lemma lem8370969 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem8371030 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (lt2 : type1402 A) (s : P -> A) : (term1420 A B P P2 G2 lt2 s) = (term2159 A B P P2 G2 lt2 s).
Proof. exact (MK_COMB (@lem8370969 A B) (@lem8370968 A B P P2 G2 lt2 s)). Qed.
Lemma lem8371031 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (lt2 : type1402 A) (s : P -> A) (h1 : term1420 A B P P2 G2 lt2 s) : term2159 A B P P2 G2 lt2 s.
Proof. exact (EQ_MP (@lem8371030 A B P P2 G2 lt2 s) (@lem8370151 A B P P2 G2 lt2 s h1)). Qed.
Lemma lem8371038 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) (z : A) : (term2160 A B P lt2 s a f g z) = (term2161 A B P lt2 s a f g z).
Proof. exact (@lem17362 (term2148 A P lt2 z s a) ((f z) = (g z))). Qed.
Lemma lem8371039 {A : Type'} (P : A -> Prop) : (term145 A P) = (term146 A P).
Proof. exact (@lem18392 A P). Qed.
Lemma lem8371040 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) : (term2162 A B P lt2 s a f g) = (term2163 A B P lt2 s a f g).
Proof. exact (@lem8371039 A (term1895 A B P lt2 s a f g)). Qed.
Lemma lem8371041 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) (z : A) : (term2164 A B P lt2 s a f g z) = (term1894 A B P lt2 s a f g z).
Proof. exact (eq_refl (term2164 A B P lt2 s a f g z)). Qed.
Lemma lem8371042 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem8371043 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) (z : A) : (term2165 A B P lt2 s a f g z) = (term2160 A B P lt2 s a f g z).
Proof. exact (MK_COMB (@lem8371042) (@lem8371041 A B P lt2 s a f g z)). Qed.
Lemma lem8371044 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) (z : A) : (term2165 A B P lt2 s a f g z) = (term2161 A B P lt2 s a f g z).
Proof. exact (TRANS (@lem8371043 A B P lt2 s a f g z) (@lem8371038 A B P lt2 s a f g z)). Qed.
Lemma lem8371045 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) : (term2166 A B P lt2 s a f g) = (term2167 A B P lt2 s a f g).
Proof. exact (fun_ext (fun z : A => @lem8371044 A B P lt2 s a f g z)). Qed.
Lemma lem8371046 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem8371047 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) : (term2163 A B P lt2 s a f g) = (term2168 A B P lt2 s a f g).
Proof. exact (MK_COMB (@lem8371046 A) (@lem8371045 A B P lt2 s a f g)). Qed.
Lemma lem8371048 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) : (term2162 A B P lt2 s a f g) = (term2168 A B P lt2 s a f g).
Proof. exact (TRANS (@lem8371040 A B P lt2 s a f g) (@lem8371047 A B P lt2 s a f g)). Qed.
Lemma lem8371063 {A B P : Type'} (f : A -> B) (P2 : type560 A B P) (g : A -> B) (a : P) : ((P2 f a) = (P2 g a)) = (term2169 A B P f P2 g a).
Proof. exact (@lem17784 (P2 f a) (P2 g a)). Qed.
Lemma lem8371068 {A B P : Type'} (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term2170 A B P G2 f H2 g a) = (term2170 A B P G2 f H2 g a).
Proof. exact (eq_refl (term2170 A B P G2 f H2 g a)). Qed.
Lemma lem8371069 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8371070 {A B P : Type'} (f : A -> B) (P2 : type560 A B P) (g : A -> B) (a : P) : (term2171 A B P f P2 g a) = (term2172 A B P f P2 g a).
Proof. exact (MK_COMB (@lem8371069) (@lem8371063 A B P f P2 g a)). Qed.
Lemma lem8371071 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term1893 A B P P2 G2 f H2 g a) = (term2173 A B P P2 G2 f H2 g a).
Proof. exact (MK_COMB (@lem8371070 A B P f P2 g a) (@lem8371068 A B P G2 f H2 g a)). Qed.
Lemma lem8371072 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8371073 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) : (term2174 A B P lt2 s a f g) = (term2175 A B P lt2 s a f g).
Proof. exact (MK_COMB (@lem8371072) (@lem8371048 A B P lt2 s a f g)). Qed.
Lemma lem8371074 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term2176 A B P lt2 s P2 G2 f H2 g a) = (term2177 A B P lt2 s P2 G2 f H2 g a).
Proof. exact (MK_COMB (@lem8371073 A B P lt2 s a f g) (@lem8371071 A B P P2 G2 f H2 g a)). Qed.
Lemma lem8371075 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term1898 A B P lt2 s P2 G2 f H2 g a) = (term2176 A B P lt2 s P2 G2 f H2 g a).
Proof. exact (@lem17265 (term1896 A B P lt2 s a f g) (term1893 A B P P2 G2 f H2 g a)). Qed.
Lemma lem8371076 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term1898 A B P lt2 s P2 G2 f H2 g a) = (term2177 A B P lt2 s P2 G2 f H2 g a).
Proof. exact (TRANS (@lem8371075 A B P lt2 s P2 G2 f H2 g a) (@lem8371074 A B P lt2 s P2 G2 f H2 g a)). Qed.
Lemma lem8371077 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) : (term1899 A B P lt2 s P2 G2 f H2 g) = (term2178 A B P lt2 s P2 G2 f H2 g).
Proof. exact (fun_ext (fun a : P => @lem8371076 A B P lt2 s P2 G2 f H2 g a)). Qed.
Lemma lem8371078 {P : Type'} : (@all P) = (@all P).
Proof. exact (eq_refl (@all P)). Qed.
Lemma lem8371079 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) : (term1900 A B P lt2 s P2 G2 f H2 g) = (term2179 A B P lt2 s P2 G2 f H2 g).
Proof. exact (MK_COMB (@lem8371078 P) (@lem8371077 A B P lt2 s P2 G2 f H2 g)). Qed.
Lemma lem8371080 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) : (term1901 A B P lt2 s P2 G2 f H2) = (term2180 A B P lt2 s P2 G2 f H2).
Proof. exact (fun_ext (fun g : A -> B => @lem8371079 A B P lt2 s P2 G2 f H2 g)). Qed.
Lemma lem8371081 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem8371082 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) : (term1902 A B P lt2 s P2 G2 f H2) = (term2181 A B P lt2 s P2 G2 f H2).
Proof. exact (MK_COMB (@lem8371081 A B) (@lem8371080 A B P lt2 s P2 G2 f H2)). Qed.
Lemma lem8371083 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) : (term1903 A B P lt2 s P2 G2 H2) = (term2182 A B P lt2 s P2 G2 H2).
Proof. exact (fun_ext (fun f : A -> B => @lem8371082 A B P lt2 s P2 G2 f H2)). Qed.
Lemma lem8371084 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem8371085 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) : (term1422 A B P lt2 s P2 G2 H2) = (term2183 A B P lt2 s P2 G2 H2).
Proof. exact (MK_COMB (@lem8371084 A B) (@lem8371083 A B P lt2 s P2 G2 H2)). Qed.
Lemma lem8371192 {A : Type'} (P : A -> Prop) (Q : Prop) : (term169 A P Q) = (term170 A P Q).
Proof. exact (EQ_MP (@lem18905 A P Q) (@lem18904 A P Q)). Qed.
Lemma lem8371193 {A : Type'} (P : A -> Prop) (Q : Prop) : (term169 A P Q) = (term170 A P Q).
Proof. exact (@lem8371192 A P Q). Qed.
Lemma lem8371194 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term2184 A B P lt2 s P2 G2 f H2 g a) = (term2185 A B P lt2 s P2 G2 f H2 g a).
Proof. exact (@lem8371193 A (term2167 A B P lt2 s a f g) (term2173 A B P P2 G2 f H2 g a)). Qed.
Lemma lem8371195 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) (z : A) : (term2186 A B P lt2 s a f g z) = (term2161 A B P lt2 s a f g z).
Proof. exact (eq_refl (term2186 A B P lt2 s a f g z)). Qed.
Lemma lem8371196 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) : (term2187 A B P lt2 s a f g) = (term2167 A B P lt2 s a f g).
Proof. exact (fun_ext (fun z : A => @lem8371195 A B P lt2 s a f g z)). Qed.
Lemma lem8371197 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem8371198 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) : (term2188 A B P lt2 s a f g) = (term2168 A B P lt2 s a f g).
Proof. exact (MK_COMB (@lem8371197 A) (@lem8371196 A B P lt2 s a f g)). Qed.
Lemma lem8371199 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8371200 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) : (term2189 A B P lt2 s a f g) = (term2175 A B P lt2 s a f g).
Proof. exact (MK_COMB (@lem8371199) (@lem8371198 A B P lt2 s a f g)). Qed.
Lemma lem8371201 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term2173 A B P P2 G2 f H2 g a) = (term2173 A B P P2 G2 f H2 g a).
Proof. exact (eq_refl (term2173 A B P P2 G2 f H2 g a)). Qed.
Lemma lem8371202 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term2184 A B P lt2 s P2 G2 f H2 g a) = (term2177 A B P lt2 s P2 G2 f H2 g a).
Proof. exact (MK_COMB (@lem8371200 A B P lt2 s a f g) (@lem8371201 A B P P2 G2 f H2 g a)). Qed.
Lemma lem8371203 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8371204 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term2190 A B P lt2 s P2 G2 f H2 g a) = (term2191 A B P lt2 s P2 G2 f H2 g a).
Proof. exact (MK_COMB (@lem8371203) (@lem8371202 A B P lt2 s P2 G2 f H2 g a)). Qed.
Lemma lem8371205 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) (z : A) : (term2186 A B P lt2 s a f g z) = (term2161 A B P lt2 s a f g z).
Proof. exact (eq_refl (term2186 A B P lt2 s a f g z)). Qed.
Lemma lem8371206 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8371207 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (a : P) (f : A -> B) (g : A -> B) (z : A) : (term2192 A B P lt2 s a f g z) = (term2193 A B P lt2 s a f g z).
Proof. exact (MK_COMB (@lem8371206) (@lem8371205 A B P lt2 s a f g z)). Qed.
Lemma lem8371208 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term2173 A B P P2 G2 f H2 g a) = (term2173 A B P P2 G2 f H2 g a).
Proof. exact (eq_refl (term2173 A B P P2 G2 f H2 g a)). Qed.
Lemma lem8371209 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : A) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term2194 A B P lt2 s z P2 G2 f H2 g a) = (term2195 A B P lt2 s z P2 G2 f H2 g a).
Proof. exact (MK_COMB (@lem8371207 A B P lt2 s a f g z) (@lem8371208 A B P P2 G2 f H2 g a)). Qed.
Lemma lem8371210 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term2196 A B P lt2 s P2 G2 f H2 g a) = (term2197 A B P lt2 s P2 G2 f H2 g a).
Proof. exact (fun_ext (fun z : A => @lem8371209 A B P lt2 s z P2 G2 f H2 g a)). Qed.
Lemma lem8371211 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem8371212 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term2185 A B P lt2 s P2 G2 f H2 g a) = (term2198 A B P lt2 s P2 G2 f H2 g a).
Proof. exact (MK_COMB (@lem8371211 A) (@lem8371210 A B P lt2 s P2 G2 f H2 g a)). Qed.
Lemma lem8371213 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : ((term2184 A B P lt2 s P2 G2 f H2 g a) = (term2185 A B P lt2 s P2 G2 f H2 g a)) = ((term2177 A B P lt2 s P2 G2 f H2 g a) = (term2198 A B P lt2 s P2 G2 f H2 g a)).
Proof. exact (MK_COMB (@lem8371204 A B P lt2 s P2 G2 f H2 g a) (@lem8371212 A B P lt2 s P2 G2 f H2 g a)). Qed.
Lemma lem8371214 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term2177 A B P lt2 s P2 G2 f H2 g a) = (term2198 A B P lt2 s P2 G2 f H2 g a).
Proof. exact (EQ_MP (@lem8371213 A B P lt2 s P2 G2 f H2 g a) (@lem8371194 A B P lt2 s P2 G2 f H2 g a)). Qed.
Lemma lem8371215 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) : (term2178 A B P lt2 s P2 G2 f H2 g) = (term2199 A B P lt2 s P2 G2 f H2 g).
Proof. exact (fun_ext (fun a : P => @lem8371214 A B P lt2 s P2 G2 f H2 g a)). Qed.
Lemma lem8371216 {P : Type'} : (@all P) = (@all P).
Proof. exact (eq_refl (@all P)). Qed.
Lemma lem8371217 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) : (term2179 A B P lt2 s P2 G2 f H2 g) = (term2200 A B P lt2 s P2 G2 f H2 g).
Proof. exact (MK_COMB (@lem8371216 P) (@lem8371215 A B P lt2 s P2 G2 f H2 g)). Qed.
Lemma lem8371219 {A B : Type'} (P : type1413 A B) : (term188 A B P) = (term189 A B P).
Proof. exact (EQ_MP (@lem18899 A B P) (@lem18898 A B P)). Qed.
Lemma lem8371220 {A P : Type'} (P' : type1470 A P) : (term2201 A P P') = (term2202 A P P').
Proof. exact (@lem8371219 P A P'). Qed.
Lemma lem8371221 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) : (term2203 A B P lt2 s P2 G2 f H2 g) = (term2204 A B P lt2 s P2 G2 f H2 g).
Proof. exact (@lem8371220 A P (term2205 A B P lt2 s P2 G2 f H2 g)). Qed.
Lemma lem8371222 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term2206 A B P lt2 s P2 G2 f H2 g a) = (term2197 A B P lt2 s P2 G2 f H2 g a).
Proof. exact (eq_refl (term2206 A B P lt2 s P2 G2 f H2 g a)). Qed.
Lemma lem8371223 {A : Type'} (z : A) : z = z.
Proof. exact (eq_refl z). Qed.
Lemma lem8371224 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) (z : A) : (term2207 A B P lt2 s P2 G2 f H2 g a z) = (term2208 A B P lt2 s P2 G2 f H2 g a z).
Proof. exact (MK_COMB (@lem8371222 A B P lt2 s P2 G2 f H2 g a) (@lem8371223 A z)). Qed.
Lemma lem8371225 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : A) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term2208 A B P lt2 s P2 G2 f H2 g a z) = (term2195 A B P lt2 s z P2 G2 f H2 g a).
Proof. exact (eq_refl (term2208 A B P lt2 s P2 G2 f H2 g a z)). Qed.
Lemma lem8371226 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : A) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term2207 A B P lt2 s P2 G2 f H2 g a z) = (term2195 A B P lt2 s z P2 G2 f H2 g a).
Proof. exact (TRANS (@lem8371224 A B P lt2 s P2 G2 f H2 g a z) (@lem8371225 A B P lt2 s z P2 G2 f H2 g a)). Qed.
Lemma lem8371227 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term2209 A B P lt2 s P2 G2 f H2 g a) = (term2197 A B P lt2 s P2 G2 f H2 g a).
Proof. exact (fun_ext (fun z : A => @lem8371226 A B P lt2 s z P2 G2 f H2 g a)). Qed.
Lemma lem8371228 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem8371229 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term2210 A B P lt2 s P2 G2 f H2 g a) = (term2198 A B P lt2 s P2 G2 f H2 g a).
Proof. exact (MK_COMB (@lem8371228 A) (@lem8371227 A B P lt2 s P2 G2 f H2 g a)). Qed.
Lemma lem8371230 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) : (term2211 A B P lt2 s P2 G2 f H2 g) = (term2199 A B P lt2 s P2 G2 f H2 g).
Proof. exact (fun_ext (fun a : P => @lem8371229 A B P lt2 s P2 G2 f H2 g a)). Qed.
Lemma lem8371231 {P : Type'} : (@all P) = (@all P).
Proof. exact (eq_refl (@all P)). Qed.
Lemma lem8371232 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) : (term2203 A B P lt2 s P2 G2 f H2 g) = (term2200 A B P lt2 s P2 G2 f H2 g).
Proof. exact (MK_COMB (@lem8371231 P) (@lem8371230 A B P lt2 s P2 G2 f H2 g)). Qed.
Lemma lem8371233 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8371234 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) : (term2212 A B P lt2 s P2 G2 f H2 g) = (term2213 A B P lt2 s P2 G2 f H2 g).
Proof. exact (MK_COMB (@lem8371233) (@lem8371232 A B P lt2 s P2 G2 f H2 g)). Qed.
Lemma lem8371235 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term2206 A B P lt2 s P2 G2 f H2 g a) = (term2197 A B P lt2 s P2 G2 f H2 g a).
Proof. exact (eq_refl (term2206 A B P lt2 s P2 G2 f H2 g a)). Qed.
Lemma lem8371236 {A P : Type'} (z : P -> A) (a : P) : (z a) = (z a).
Proof. exact (eq_refl (z a)). Qed.
Lemma lem8371237 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (z : P -> A) (a : P) : (term2214 A B P lt2 s P2 G2 f H2 g z a) = (term2215 A B P lt2 s P2 G2 f H2 g z a).
Proof. exact (MK_COMB (@lem8371235 A B P lt2 s P2 G2 f H2 g a) (@lem8371236 A P z a)). Qed.
Lemma lem8371238 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : P -> A) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term2215 A B P lt2 s P2 G2 f H2 g z a) = (term2216 A B P lt2 s z P2 G2 f H2 g a).
Proof. exact (eq_refl (term2215 A B P lt2 s P2 G2 f H2 g z a)). Qed.
Lemma lem8371239 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : P -> A) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term2214 A B P lt2 s P2 G2 f H2 g z a) = (term2216 A B P lt2 s z P2 G2 f H2 g a).
Proof. exact (TRANS (@lem8371237 A B P lt2 s P2 G2 f H2 g z a) (@lem8371238 A B P lt2 s z P2 G2 f H2 g a)). Qed.
Lemma lem8371240 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : P -> A) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) : (term2217 A B P lt2 s P2 G2 f H2 g z) = (term2218 A B P lt2 s z P2 G2 f H2 g).
Proof. exact (fun_ext (fun a : P => @lem8371239 A B P lt2 s z P2 G2 f H2 g a)). Qed.
Lemma lem8371241 {P : Type'} : (@all P) = (@all P).
Proof. exact (eq_refl (@all P)). Qed.
Lemma lem8371242 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : P -> A) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) : (term2219 A B P lt2 s P2 G2 f H2 g z) = (term2220 A B P lt2 s z P2 G2 f H2 g).
Proof. exact (MK_COMB (@lem8371241 P) (@lem8371240 A B P lt2 s z P2 G2 f H2 g)). Qed.
Lemma lem8371243 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) : (term2221 A B P lt2 s P2 G2 f H2 g) = (term2222 A B P lt2 s P2 G2 f H2 g).
Proof. exact (fun_ext (fun z : P -> A => @lem8371242 A B P lt2 s z P2 G2 f H2 g)). Qed.
Lemma lem8371244 {A P : Type'} : (@ex (P -> A)) = (@ex (P -> A)).
Proof. exact (eq_refl (@ex (P -> A))). Qed.
Lemma lem8371245 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) : (term2204 A B P lt2 s P2 G2 f H2 g) = (term2223 A B P lt2 s P2 G2 f H2 g).
Proof. exact (MK_COMB (@lem8371244 A P) (@lem8371243 A B P lt2 s P2 G2 f H2 g)). Qed.
Lemma lem8371246 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) : ((term2203 A B P lt2 s P2 G2 f H2 g) = (term2204 A B P lt2 s P2 G2 f H2 g)) = ((term2200 A B P lt2 s P2 G2 f H2 g) = (term2223 A B P lt2 s P2 G2 f H2 g)).
Proof. exact (MK_COMB (@lem8371234 A B P lt2 s P2 G2 f H2 g) (@lem8371245 A B P lt2 s P2 G2 f H2 g)). Qed.
Lemma lem8371247 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) : (term2200 A B P lt2 s P2 G2 f H2 g) = (term2223 A B P lt2 s P2 G2 f H2 g).
Proof. exact (EQ_MP (@lem8371246 A B P lt2 s P2 G2 f H2 g) (@lem8371221 A B P lt2 s P2 G2 f H2 g)). Qed.
Lemma lem8371248 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) : (term2179 A B P lt2 s P2 G2 f H2 g) = (term2223 A B P lt2 s P2 G2 f H2 g).
Proof. exact (TRANS (@lem8371217 A B P lt2 s P2 G2 f H2 g) (@lem8371247 A B P lt2 s P2 G2 f H2 g)). Qed.
Lemma lem8371249 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) : (term2180 A B P lt2 s P2 G2 f H2) = (term2224 A B P lt2 s P2 G2 f H2).
Proof. exact (fun_ext (fun g : A -> B => @lem8371248 A B P lt2 s P2 G2 f H2 g)). Qed.
Lemma lem8371250 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem8371251 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) : (term2181 A B P lt2 s P2 G2 f H2) = (term2225 A B P lt2 s P2 G2 f H2).
Proof. exact (MK_COMB (@lem8371250 A B) (@lem8371249 A B P lt2 s P2 G2 f H2)). Qed.
Lemma lem8371253 {A B : Type'} (P : type1413 A B) : (term188 A B P) = (term189 A B P).
Proof. exact (EQ_MP (@lem18899 A B P) (@lem18898 A B P)). Qed.
Lemma lem8371254 {A B P : Type'} (P' : type537 A B P) : (term2226 A B P P') = (term2227 A B P P').
Proof. exact (@lem8371253 (A -> B) (P -> A) P'). Qed.
Lemma lem8371255 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) : (term2228 A B P lt2 s P2 G2 f H2) = (term2229 A B P lt2 s P2 G2 f H2).
Proof. exact (@lem8371254 A B P (term2230 A B P lt2 s P2 G2 f H2)). Qed.
Lemma lem8371256 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) : (term2231 A B P lt2 s P2 G2 f H2 g) = (term2222 A B P lt2 s P2 G2 f H2 g).
Proof. exact (eq_refl (term2231 A B P lt2 s P2 G2 f H2 g)). Qed.
Lemma lem8371257 {A P : Type'} (z : P -> A) : z = z.
Proof. exact (eq_refl z). Qed.
Lemma lem8371258 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (z : P -> A) : (term2232 A B P lt2 s P2 G2 f H2 g z) = (term2233 A B P lt2 s P2 G2 f H2 g z).
Proof. exact (MK_COMB (@lem8371256 A B P lt2 s P2 G2 f H2 g) (@lem8371257 A P z)). Qed.
Lemma lem8371259 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : P -> A) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) : (term2233 A B P lt2 s P2 G2 f H2 g z) = (term2220 A B P lt2 s z P2 G2 f H2 g).
Proof. exact (eq_refl (term2233 A B P lt2 s P2 G2 f H2 g z)). Qed.
Lemma lem8371260 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : P -> A) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) : (term2232 A B P lt2 s P2 G2 f H2 g z) = (term2220 A B P lt2 s z P2 G2 f H2 g).
Proof. exact (TRANS (@lem8371258 A B P lt2 s P2 G2 f H2 g z) (@lem8371259 A B P lt2 s z P2 G2 f H2 g)). Qed.
Lemma lem8371261 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) : (term2234 A B P lt2 s P2 G2 f H2 g) = (term2222 A B P lt2 s P2 G2 f H2 g).
Proof. exact (fun_ext (fun z : P -> A => @lem8371260 A B P lt2 s z P2 G2 f H2 g)). Qed.
Lemma lem8371262 {A P : Type'} : (@ex (P -> A)) = (@ex (P -> A)).
Proof. exact (eq_refl (@ex (P -> A))). Qed.
Lemma lem8371263 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) : (term2235 A B P lt2 s P2 G2 f H2 g) = (term2223 A B P lt2 s P2 G2 f H2 g).
Proof. exact (MK_COMB (@lem8371262 A P) (@lem8371261 A B P lt2 s P2 G2 f H2 g)). Qed.
Lemma lem8371264 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) : (term2236 A B P lt2 s P2 G2 f H2) = (term2224 A B P lt2 s P2 G2 f H2).
Proof. exact (fun_ext (fun g : A -> B => @lem8371263 A B P lt2 s P2 G2 f H2 g)). Qed.
Lemma lem8371265 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem8371266 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) : (term2228 A B P lt2 s P2 G2 f H2) = (term2225 A B P lt2 s P2 G2 f H2).
Proof. exact (MK_COMB (@lem8371265 A B) (@lem8371264 A B P lt2 s P2 G2 f H2)). Qed.
Lemma lem8371267 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8371268 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) : (term2237 A B P lt2 s P2 G2 f H2) = (term2238 A B P lt2 s P2 G2 f H2).
Proof. exact (MK_COMB (@lem8371267) (@lem8371266 A B P lt2 s P2 G2 f H2)). Qed.
Lemma lem8371269 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) : (term2231 A B P lt2 s P2 G2 f H2 g) = (term2222 A B P lt2 s P2 G2 f H2 g).
Proof. exact (eq_refl (term2231 A B P lt2 s P2 G2 f H2 g)). Qed.
Lemma lem8371270 {A B P : Type'} (z : type557 A B P) (g : A -> B) : (z g) = (z g).
Proof. exact (eq_refl (z g)). Qed.
Lemma lem8371271 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (z : type557 A B P) (g : A -> B) : (term2239 A B P lt2 s P2 G2 f H2 z g) = (term2240 A B P lt2 s P2 G2 f H2 z g).
Proof. exact (MK_COMB (@lem8371269 A B P lt2 s P2 G2 f H2 g) (@lem8371270 A B P z g)). Qed.
Lemma lem8371272 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type557 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) : (term2240 A B P lt2 s P2 G2 f H2 z g) = (term2241 A B P lt2 s z P2 G2 f H2 g).
Proof. exact (eq_refl (term2240 A B P lt2 s P2 G2 f H2 z g)). Qed.
Lemma lem8371273 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type557 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) : (term2239 A B P lt2 s P2 G2 f H2 z g) = (term2241 A B P lt2 s z P2 G2 f H2 g).
Proof. exact (TRANS (@lem8371271 A B P lt2 s P2 G2 f H2 z g) (@lem8371272 A B P lt2 s z P2 G2 f H2 g)). Qed.
Lemma lem8371274 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type557 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) : (term2242 A B P lt2 s P2 G2 f H2 z) = (term2243 A B P lt2 s z P2 G2 f H2).
Proof. exact (fun_ext (fun g : A -> B => @lem8371273 A B P lt2 s z P2 G2 f H2 g)). Qed.
Lemma lem8371275 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem8371276 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type557 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) : (term2244 A B P lt2 s P2 G2 f H2 z) = (term2245 A B P lt2 s z P2 G2 f H2).
Proof. exact (MK_COMB (@lem8371275 A B) (@lem8371274 A B P lt2 s z P2 G2 f H2)). Qed.
Lemma lem8371277 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) : (term2246 A B P lt2 s P2 G2 f H2) = (term2247 A B P lt2 s P2 G2 f H2).
Proof. exact (fun_ext (fun z : type557 A B P => @lem8371276 A B P lt2 s z P2 G2 f H2)). Qed.
Lemma lem8371278 {A B P : Type'} : (@ex ((A -> B) -> P -> A)) = (@ex ((A -> B) -> P -> A)).
Proof. exact (eq_refl (@ex ((A -> B) -> P -> A))). Qed.
Lemma lem8371279 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) : (term2229 A B P lt2 s P2 G2 f H2) = (term2248 A B P lt2 s P2 G2 f H2).
Proof. exact (MK_COMB (@lem8371278 A B P) (@lem8371277 A B P lt2 s P2 G2 f H2)). Qed.
Lemma lem8371280 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) : ((term2228 A B P lt2 s P2 G2 f H2) = (term2229 A B P lt2 s P2 G2 f H2)) = ((term2225 A B P lt2 s P2 G2 f H2) = (term2248 A B P lt2 s P2 G2 f H2)).
Proof. exact (MK_COMB (@lem8371268 A B P lt2 s P2 G2 f H2) (@lem8371279 A B P lt2 s P2 G2 f H2)). Qed.
Lemma lem8371281 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) : (term2225 A B P lt2 s P2 G2 f H2) = (term2248 A B P lt2 s P2 G2 f H2).
Proof. exact (EQ_MP (@lem8371280 A B P lt2 s P2 G2 f H2) (@lem8371255 A B P lt2 s P2 G2 f H2)). Qed.
Lemma lem8371282 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) : (term2181 A B P lt2 s P2 G2 f H2) = (term2248 A B P lt2 s P2 G2 f H2).
Proof. exact (TRANS (@lem8371251 A B P lt2 s P2 G2 f H2) (@lem8371281 A B P lt2 s P2 G2 f H2)). Qed.
Lemma lem8371283 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) : (term2182 A B P lt2 s P2 G2 H2) = (term2249 A B P lt2 s P2 G2 H2).
Proof. exact (fun_ext (fun f : A -> B => @lem8371282 A B P lt2 s P2 G2 f H2)). Qed.
Lemma lem8371284 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem8371285 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) : (term2183 A B P lt2 s P2 G2 H2) = (term2250 A B P lt2 s P2 G2 H2).
Proof. exact (MK_COMB (@lem8371284 A B) (@lem8371283 A B P lt2 s P2 G2 H2)). Qed.
Lemma lem8371287 {A B : Type'} (P : type1413 A B) : (term188 A B P) = (term189 A B P).
Proof. exact (EQ_MP (@lem18899 A B P) (@lem18898 A B P)). Qed.
Lemma lem8371288 {A B P : Type'} (P' : type495 A B P) : (term2251 A B P P') = (term2252 A B P P').
Proof. exact (@lem8371287 (A -> B) (type557 A B P) P'). Qed.
Lemma lem8371289 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) : (term2253 A B P lt2 s P2 G2 H2) = (term2254 A B P lt2 s P2 G2 H2).
Proof. exact (@lem8371288 A B P (term2255 A B P lt2 s P2 G2 H2)). Qed.
Lemma lem8371290 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) : (term2256 A B P lt2 s P2 G2 H2 f) = (term2247 A B P lt2 s P2 G2 f H2).
Proof. exact (eq_refl (term2256 A B P lt2 s P2 G2 H2 f)). Qed.
Lemma lem8371291 {A B P : Type'} (z : type557 A B P) : z = z.
Proof. exact (eq_refl z). Qed.
Lemma lem8371292 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (z : type557 A B P) : (term2257 A B P lt2 s P2 G2 H2 f z) = (term2258 A B P lt2 s P2 G2 f H2 z).
Proof. exact (MK_COMB (@lem8371290 A B P lt2 s P2 G2 f H2) (@lem8371291 A B P z)). Qed.
Lemma lem8371293 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type557 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) : (term2258 A B P lt2 s P2 G2 f H2 z) = (term2245 A B P lt2 s z P2 G2 f H2).
Proof. exact (eq_refl (term2258 A B P lt2 s P2 G2 f H2 z)). Qed.
Lemma lem8371294 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type557 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) : (term2257 A B P lt2 s P2 G2 H2 f z) = (term2245 A B P lt2 s z P2 G2 f H2).
Proof. exact (TRANS (@lem8371292 A B P lt2 s P2 G2 f H2 z) (@lem8371293 A B P lt2 s z P2 G2 f H2)). Qed.
Lemma lem8371295 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) : (term2259 A B P lt2 s P2 G2 H2 f) = (term2247 A B P lt2 s P2 G2 f H2).
Proof. exact (fun_ext (fun z : type557 A B P => @lem8371294 A B P lt2 s z P2 G2 f H2)). Qed.
Lemma lem8371296 {A B P : Type'} : (@ex ((A -> B) -> P -> A)) = (@ex ((A -> B) -> P -> A)).
Proof. exact (eq_refl (@ex ((A -> B) -> P -> A))). Qed.
Lemma lem8371297 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) : (term2260 A B P lt2 s P2 G2 H2 f) = (term2248 A B P lt2 s P2 G2 f H2).
Proof. exact (MK_COMB (@lem8371296 A B P) (@lem8371295 A B P lt2 s P2 G2 f H2)). Qed.
Lemma lem8371298 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) : (term2261 A B P lt2 s P2 G2 H2) = (term2249 A B P lt2 s P2 G2 H2).
Proof. exact (fun_ext (fun f : A -> B => @lem8371297 A B P lt2 s P2 G2 f H2)). Qed.
Lemma lem8371299 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem8371300 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) : (term2253 A B P lt2 s P2 G2 H2) = (term2250 A B P lt2 s P2 G2 H2).
Proof. exact (MK_COMB (@lem8371299 A B) (@lem8371298 A B P lt2 s P2 G2 H2)). Qed.
Lemma lem8371301 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8371302 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) : (term2262 A B P lt2 s P2 G2 H2) = (term2263 A B P lt2 s P2 G2 H2).
Proof. exact (MK_COMB (@lem8371301) (@lem8371300 A B P lt2 s P2 G2 H2)). Qed.
Lemma lem8371303 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) : (term2256 A B P lt2 s P2 G2 H2 f) = (term2247 A B P lt2 s P2 G2 f H2).
Proof. exact (eq_refl (term2256 A B P lt2 s P2 G2 H2 f)). Qed.
Lemma lem8371304 {A B P : Type'} (z : type518 A B P) (f : A -> B) : (z f) = (z f).
Proof. exact (eq_refl (z f)). Qed.
Lemma lem8371305 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (z : type518 A B P) (f : A -> B) : (term2264 A B P lt2 s P2 G2 H2 z f) = (term2265 A B P lt2 s P2 G2 H2 z f).
Proof. exact (MK_COMB (@lem8371303 A B P lt2 s P2 G2 f H2) (@lem8371304 A B P z f)). Qed.
Lemma lem8371306 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) : (term2265 A B P lt2 s P2 G2 H2 z f) = (term2266 A B P lt2 s z P2 G2 f H2).
Proof. exact (eq_refl (term2265 A B P lt2 s P2 G2 H2 z f)). Qed.
Lemma lem8371307 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) : (term2264 A B P lt2 s P2 G2 H2 z f) = (term2266 A B P lt2 s z P2 G2 f H2).
Proof. exact (TRANS (@lem8371305 A B P lt2 s P2 G2 H2 z f) (@lem8371306 A B P lt2 s z P2 G2 f H2)). Qed.
Lemma lem8371308 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) : (term2267 A B P lt2 s P2 G2 H2 z) = (term2268 A B P lt2 s z P2 G2 H2).
Proof. exact (fun_ext (fun f : A -> B => @lem8371307 A B P lt2 s z P2 G2 f H2)). Qed.
Lemma lem8371309 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem8371310 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) : (term2269 A B P lt2 s P2 G2 H2 z) = (term2270 A B P lt2 s z P2 G2 H2).
Proof. exact (MK_COMB (@lem8371309 A B) (@lem8371308 A B P lt2 s z P2 G2 H2)). Qed.
Lemma lem8371311 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) : (term2271 A B P lt2 s P2 G2 H2) = (term2272 A B P lt2 s P2 G2 H2).
Proof. exact (fun_ext (fun z : type518 A B P => @lem8371310 A B P lt2 s z P2 G2 H2)). Qed.
Lemma lem8371312 {A B P : Type'} : (@ex ((A -> B) -> (A -> B) -> P -> A)) = (@ex ((A -> B) -> (A -> B) -> P -> A)).
Proof. exact (eq_refl (@ex ((A -> B) -> (A -> B) -> P -> A))). Qed.
Lemma lem8371313 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) : (term2254 A B P lt2 s P2 G2 H2) = (term2273 A B P lt2 s P2 G2 H2).
Proof. exact (MK_COMB (@lem8371312 A B P) (@lem8371311 A B P lt2 s P2 G2 H2)). Qed.
Lemma lem8371314 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) : ((term2253 A B P lt2 s P2 G2 H2) = (term2254 A B P lt2 s P2 G2 H2)) = ((term2250 A B P lt2 s P2 G2 H2) = (term2273 A B P lt2 s P2 G2 H2)).
Proof. exact (MK_COMB (@lem8371302 A B P lt2 s P2 G2 H2) (@lem8371313 A B P lt2 s P2 G2 H2)). Qed.
Lemma lem8371315 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) : (term2250 A B P lt2 s P2 G2 H2) = (term2273 A B P lt2 s P2 G2 H2).
Proof. exact (EQ_MP (@lem8371314 A B P lt2 s P2 G2 H2) (@lem8371289 A B P lt2 s P2 G2 H2)). Qed.
Lemma lem8371317 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) : (term2183 A B P lt2 s P2 G2 H2) = (term2273 A B P lt2 s P2 G2 H2).
Proof. exact (TRANS (@lem8371285 A B P lt2 s P2 G2 H2) (@lem8371315 A B P lt2 s P2 G2 H2)). Qed.
Lemma lem8371318 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) : (term1422 A B P lt2 s P2 G2 H2) = (term2273 A B P lt2 s P2 G2 H2).
Proof. exact (TRANS (@lem8371085 A B P lt2 s P2 G2 H2) (@lem8371317 A B P lt2 s P2 G2 H2)). Qed.
Lemma lem8371319 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (h1 : term1422 A B P lt2 s P2 G2 H2) : term2273 A B P lt2 s P2 G2 H2.
Proof. exact (EQ_MP (@lem8371318 A B P lt2 s P2 G2 H2) (@lem8370152 A B P lt2 s P2 G2 H2 h1)). Qed.
Lemma lem8371605 {A P : Type'} (s : P -> A) (y : P) (x : A) : ((s y) = x) = ((s y) = x).
Proof. exact (eq_refl ((s y) = x)). Qed.
Lemma lem8371606 {A P : Type'} (s : P -> A) (x : A) : (term1454 A P s x) = (term1454 A P s x).
Proof. exact (fun_ext (fun y : P => @lem8371605 A P s y x)). Qed.
Lemma lem8371607 {P : Type'} : (@ex P) = (@ex P).
Proof. exact (eq_refl (@ex P)). Qed.
Lemma lem8371608 {A P : Type'} (s : P -> A) (x : A) : (term1773 A P s x) = (term1773 A P s x).
Proof. exact (MK_COMB (@lem8371607 P) (@lem8371606 A P s x)). Qed.
Lemma lem8371609 {A P : Type'} (s : P -> A) (x : A) : (term2274 A P s x) = (term1773 A P s x).
Proof. exact (@lem16933 (term1773 A P s x)). Qed.
Lemma lem8371610 {A P : Type'} (s : P -> A) (x : A) : (term2274 A P s x) = (term1773 A P s x).
Proof. exact (TRANS (@lem8371609 A P s x) (@lem8371608 A P s x)). Qed.
Lemma lem8371617 {A B : Type'} (lt2 : type1402 A) (x : A) (f : A -> B) (g : A -> B) (z : A) : (term1858 A B lt2 x f g z) = (term2275 A B lt2 x f g z).
Proof. exact (@lem17265 (lt2 z x) ((f z) = (g z))). Qed.
Lemma lem8371618 {A B : Type'} (lt2 : type1402 A) (x : A) (f : A -> B) (g : A -> B) : (term1859 A B lt2 x f g) = (term2276 A B lt2 x f g).
Proof. exact (fun_ext (fun z : A => @lem8371617 A B lt2 x f g z)). Qed.
Lemma lem8371619 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem8371620 {A B : Type'} (lt2 : type1402 A) (x : A) (f : A -> B) (g : A -> B) : (term1193 A B lt2 x f g) = (term2277 A B lt2 x f g).
Proof. exact (MK_COMB (@lem8371619 A) (@lem8371618 A B lt2 x f g)). Qed.
Lemma lem8371635 {A B P : Type'} (f : A -> B) (P2 : type560 A B P) (g : A -> B) (_114084 : type794 A P) (s : P -> A) (x : A) : (term2278 A B P f P2 g _114084 s x) = (term2279 A B P f P2 g _114084 s x).
Proof. exact (@lem17646 (term1495 A B P P2 f _114084 s x) (term1495 A B P P2 g _114084 s x)). Qed.
Lemma lem8371642 {A B P : Type'} (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (_114084 : type794 A P) (s : P -> A) (x : A) : (term2280 A B P G2 f H2 g _114084 s x) = (term2281 A B P G2 f H2 g _114084 s x).
Proof. exact (@lem17045 ((term1514 A B P G2 f _114084 s x) = (term1514 A B P G2 g _114084 s x)) ((term1532 A B P H2 f _114084 s x) = (term1532 A B P H2 g _114084 s x))). Qed.
Lemma lem8371643 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8371644 {A B P : Type'} (f : A -> B) (P2 : type560 A B P) (g : A -> B) (_114084 : type794 A P) (s : P -> A) (x : A) : (term2282 A B P f P2 g _114084 s x) = (term2283 A B P f P2 g _114084 s x).
Proof. exact (MK_COMB (@lem8371643) (@lem8371635 A B P f P2 g _114084 s x)). Qed.
Lemma lem8371645 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (_114084 : type794 A P) (s : P -> A) (x : A) : (term2284 A B P P2 G2 f H2 g _114084 s x) = (term2285 A B P P2 G2 f H2 g _114084 s x).
Proof. exact (MK_COMB (@lem8371644 A B P f P2 g _114084 s x) (@lem8371642 A B P G2 f H2 g _114084 s x)). Qed.
Lemma lem8371646 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (_114084 : type794 A P) (s : P -> A) (x : A) : (term2286 A B P P2 G2 f H2 g _114084 s x) = (term2284 A B P P2 G2 f H2 g _114084 s x).
Proof. exact (@lem17045 ((term1495 A B P P2 f _114084 s x) = (term1495 A B P P2 g _114084 s x)) (term1851 A B P G2 f H2 g _114084 s x)). Qed.
Lemma lem8371647 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (_114084 : type794 A P) (s : P -> A) (x : A) : (term2286 A B P P2 G2 f H2 g _114084 s x) = (term2285 A B P P2 G2 f H2 g _114084 s x).
Proof. exact (TRANS (@lem8371646 A B P P2 G2 f H2 g _114084 s x) (@lem8371645 A B P P2 G2 f H2 g _114084 s x)). Qed.
Lemma lem8371648 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8371649 {A B : Type'} (lt2 : type1402 A) (x : A) (f : A -> B) (g : A -> B) : (term2287 A B lt2 x f g) = (term2288 A B lt2 x f g).
Proof. exact (MK_COMB (@lem8371648) (@lem8371620 A B lt2 x f g)). Qed.
Lemma lem8371650 {A B P : Type'} (lt2 : type1402 A) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (_114084 : type794 A P) (s : P -> A) (x : A) : (term2289 A B P lt2 P2 G2 f H2 g _114084 s x) = (term2290 A B P lt2 P2 G2 f H2 g _114084 s x).
Proof. exact (MK_COMB (@lem8371649 A B lt2 x f g) (@lem8371647 A B P P2 G2 f H2 g _114084 s x)). Qed.
Lemma lem8371651 {A B P : Type'} (lt2 : type1402 A) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (_114084 : type794 A P) (s : P -> A) (x : A) : (term2291 A B P lt2 P2 G2 f H2 g _114084 s x) = (term2289 A B P lt2 P2 G2 f H2 g _114084 s x).
Proof. exact (@lem17362 (term1193 A B lt2 x f g) (term1852 A B P P2 G2 f H2 g _114084 s x)). Qed.
Lemma lem8371652 {A B P : Type'} (lt2 : type1402 A) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (_114084 : type794 A P) (s : P -> A) (x : A) : (term2291 A B P lt2 P2 G2 f H2 g _114084 s x) = (term2290 A B P lt2 P2 G2 f H2 g _114084 s x).
Proof. exact (TRANS (@lem8371651 A B P lt2 P2 G2 f H2 g _114084 s x) (@lem8371650 A B P lt2 P2 G2 f H2 g _114084 s x)). Qed.
Lemma lem8371653 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8371654 {A P : Type'} (s : P -> A) (x : A) : (term2292 A P s x) = (term2293 A P s x).
Proof. exact (MK_COMB (@lem8371653) (@lem8371610 A P s x)). Qed.
Lemma lem8371655 {A B P : Type'} (lt2 : type1402 A) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (_114084 : type794 A P) (s : P -> A) (x : A) : (term2294 A B P lt2 P2 G2 f H2 g _114084 s x) = (term2295 A B P lt2 P2 G2 f H2 g _114084 s x).
Proof. exact (MK_COMB (@lem8371654 A P s x) (@lem8371652 A B P lt2 P2 G2 f H2 g _114084 s x)). Qed.
Lemma lem8371656 {A B P : Type'} (lt2 : type1402 A) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (_114084 : type794 A P) (s : P -> A) (x : A) : (term2296 A B P lt2 P2 G2 f H2 g _114084 s x) = (term2294 A B P lt2 P2 G2 f H2 g _114084 s x).
Proof. exact (@lem17160 (term1802 A P s x) (term1853 A B P lt2 P2 G2 f H2 g _114084 s x)). Qed.
Lemma lem8371657 {A B P : Type'} (lt2 : type1402 A) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (_114084 : type794 A P) (s : P -> A) (x : A) : (term2296 A B P lt2 P2 G2 f H2 g _114084 s x) = (term2295 A B P lt2 P2 G2 f H2 g _114084 s x).
Proof. exact (TRANS (@lem8371656 A B P lt2 P2 G2 f H2 g _114084 s x) (@lem8371655 A B P lt2 P2 G2 f H2 g _114084 s x)). Qed.
Lemma lem8371659 {P : Type'} (P' : P -> Prop) : (term2297 P P') = (term2298 P P').
Proof. exact (@lem18394 P P'). Qed.
Lemma lem8371660 {A P : Type'} (s : P -> A) (x : A) : (term1802 A P s x) = (term2299 A P s x).
Proof. exact (@lem8371659 P (term1454 A P s x)). Qed.
Lemma lem8371661 {A P : Type'} (s : P -> A) (y : P) (x : A) : (term1457 A P s x y) = ((s y) = x).
Proof. exact (eq_refl (term1457 A P s x y)). Qed.
Lemma lem8371662 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem8371664 {A P : Type'} (s : P -> A) (y : P) (x : A) : (term2300 A P s x y) = (term2006 A P s y x).
Proof. exact (MK_COMB (@lem8371662) (@lem8371661 A P s y x)). Qed.
Lemma lem8371665 {A P : Type'} (s : P -> A) (x : A) : (term2301 A P s x) = (term2004 A P s x).
Proof. exact (fun_ext (fun y : P => @lem8371664 A P s y x)). Qed.
Lemma lem8371666 {P : Type'} : (@all P) = (@all P).
Proof. exact (eq_refl (@all P)). Qed.
Lemma lem8371667 {A P : Type'} (s : P -> A) (x : A) : (term2299 A P s x) = (term2015 A P s x).
Proof. exact (MK_COMB (@lem8371666 P) (@lem8371665 A P s x)). Qed.
Lemma lem8371668 {A P : Type'} (s : P -> A) (x : A) : (term1802 A P s x) = (term2015 A P s x).
Proof. exact (TRANS (@lem8371660 A P s x) (@lem8371667 A P s x)). Qed.
Lemma lem8371675 {A B : Type'} (lt2 : type1402 A) (x : A) (f : A -> B) (g : A -> B) (z : A) : (term1858 A B lt2 x f g z) = (term2275 A B lt2 x f g z).
Proof. exact (@lem17265 (lt2 z x) ((f z) = (g z))). Qed.
Lemma lem8371676 {A B : Type'} (lt2 : type1402 A) (x : A) (f : A -> B) (g : A -> B) : (term1859 A B lt2 x f g) = (term2276 A B lt2 x f g).
Proof. exact (fun_ext (fun z : A => @lem8371675 A B lt2 x f g z)). Qed.
Lemma lem8371677 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem8371678 {A B : Type'} (lt2 : type1402 A) (x : A) (f : A -> B) (g : A -> B) : (term1193 A B lt2 x f g) = (term2277 A B lt2 x f g).
Proof. exact (MK_COMB (@lem8371677 A) (@lem8371676 A B lt2 x f g)). Qed.
Lemma lem8371693 {A B : Type'} (f : A -> B) (P1 : type551 A B) (g : A -> B) (x : A) : (term2302 A B f P1 g x) = (term2303 A B f P1 g x).
Proof. exact (@lem17646 (P1 f x) (P1 g x)). Qed.
Lemma lem8371700 {A B : Type'} (G1 : type548 A B) (f : A -> B) (H1 : type549 A B) (g : A -> B) (x : A) : (term2304 A B G1 f H1 g x) = (term2305 A B G1 f H1 g x).
Proof. exact (@lem17045 ((G1 f x) = (G1 g x)) ((H1 f x) = (H1 g x))). Qed.
Lemma lem8371701 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8371702 {A B : Type'} (f : A -> B) (P1 : type551 A B) (g : A -> B) (x : A) : (term2306 A B f P1 g x) = (term2307 A B f P1 g x).
Proof. exact (MK_COMB (@lem8371701) (@lem8371693 A B f P1 g x)). Qed.
Lemma lem8371703 {A B : Type'} (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (H1 : type549 A B) (g : A -> B) (x : A) : (term2308 A B P1 G1 f H1 g x) = (term2309 A B P1 G1 f H1 g x).
Proof. exact (MK_COMB (@lem8371702 A B f P1 g x) (@lem8371700 A B G1 f H1 g x)). Qed.
Lemma lem8371704 {A B : Type'} (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (H1 : type549 A B) (g : A -> B) (x : A) : (term2310 A B P1 G1 f H1 g x) = (term2308 A B P1 G1 f H1 g x).
Proof. exact (@lem17045 ((P1 f x) = (P1 g x)) (term1842 A B G1 f H1 g x)). Qed.
Lemma lem8371705 {A B : Type'} (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (H1 : type549 A B) (g : A -> B) (x : A) : (term2310 A B P1 G1 f H1 g x) = (term2309 A B P1 G1 f H1 g x).
Proof. exact (TRANS (@lem8371704 A B P1 G1 f H1 g x) (@lem8371703 A B P1 G1 f H1 g x)). Qed.
Lemma lem8371706 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8371707 {A B : Type'} (lt2 : type1402 A) (x : A) (f : A -> B) (g : A -> B) : (term2287 A B lt2 x f g) = (term2288 A B lt2 x f g).
Proof. exact (MK_COMB (@lem8371706) (@lem8371678 A B lt2 x f g)). Qed.
Lemma lem8371708 {A B : Type'} (lt2 : type1402 A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (H1 : type549 A B) (g : A -> B) (x : A) : (term2311 A B lt2 P1 G1 f H1 g x) = (term2312 A B lt2 P1 G1 f H1 g x).
Proof. exact (MK_COMB (@lem8371707 A B lt2 x f g) (@lem8371705 A B P1 G1 f H1 g x)). Qed.
Lemma lem8371709 {A B : Type'} (lt2 : type1402 A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (H1 : type549 A B) (g : A -> B) (x : A) : (term2313 A B lt2 P1 G1 f H1 g x) = (term2311 A B lt2 P1 G1 f H1 g x).
Proof. exact (@lem17362 (term1193 A B lt2 x f g) (term1843 A B P1 G1 f H1 g x)). Qed.
Lemma lem8371710 {A B : Type'} (lt2 : type1402 A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (H1 : type549 A B) (g : A -> B) (x : A) : (term2313 A B lt2 P1 G1 f H1 g x) = (term2312 A B lt2 P1 G1 f H1 g x).
Proof. exact (TRANS (@lem8371709 A B lt2 P1 G1 f H1 g x) (@lem8371708 A B lt2 P1 G1 f H1 g x)). Qed.
Lemma lem8371711 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8371712 {A P : Type'} (s : P -> A) (x : A) : (term2314 A P s x) = (term2315 A P s x).
Proof. exact (MK_COMB (@lem8371711) (@lem8371668 A P s x)). Qed.
Lemma lem8371713 {A B P : Type'} (s : P -> A) (lt2 : type1402 A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (H1 : type549 A B) (g : A -> B) (x : A) : (term2316 A B P s lt2 P1 G1 f H1 g x) = (term2317 A B P s lt2 P1 G1 f H1 g x).
Proof. exact (MK_COMB (@lem8371712 A P s x) (@lem8371710 A B lt2 P1 G1 f H1 g x)). Qed.
Lemma lem8371714 {A B P : Type'} (s : P -> A) (lt2 : type1402 A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (H1 : type549 A B) (g : A -> B) (x : A) : (term2318 A B P s lt2 P1 G1 f H1 g x) = (term2316 A B P s lt2 P1 G1 f H1 g x).
Proof. exact (@lem17160 (term1773 A P s x) (term1844 A B lt2 P1 G1 f H1 g x)). Qed.
Lemma lem8371715 {A B P : Type'} (s : P -> A) (lt2 : type1402 A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (H1 : type549 A B) (g : A -> B) (x : A) : (term2318 A B P s lt2 P1 G1 f H1 g x) = (term2317 A B P s lt2 P1 G1 f H1 g x).
Proof. exact (TRANS (@lem8371714 A B P s lt2 P1 G1 f H1 g x) (@lem8371713 A B P s lt2 P1 G1 f H1 g x)). Qed.
Lemma lem8371716 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8371717 {A B P : Type'} (lt2 : type1402 A) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (_114084 : type794 A P) (s : P -> A) (x : A) : (term2319 A B P lt2 P2 G2 f H2 g _114084 s x) = (term2320 A B P lt2 P2 G2 f H2 g _114084 s x).
Proof. exact (MK_COMB (@lem8371716) (@lem8371657 A B P lt2 P2 G2 f H2 g _114084 s x)). Qed.
Lemma lem8371718 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (_114084 : type794 A P) (s : P -> A) (lt2 : type1402 A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (H1 : type549 A B) (g : A -> B) (x : A) : (term2321 A B P P2 G2 H2 _114084 s lt2 P1 G1 f H1 g x) = (term2322 A B P P2 G2 H2 _114084 s lt2 P1 G1 f H1 g x).
Proof. exact (MK_COMB (@lem8371717 A B P lt2 P2 G2 f H2 g _114084 s x) (@lem8371715 A B P s lt2 P1 G1 f H1 g x)). Qed.
Lemma lem8371719 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (_114084 : type794 A P) (s : P -> A) (lt2 : type1402 A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (H1 : type549 A B) (g : A -> B) (x : A) : (term2323 A B P P2 G2 H2 _114084 s lt2 P1 G1 f H1 g x) = (term2321 A B P P2 G2 H2 _114084 s lt2 P1 G1 f H1 g x).
Proof. exact (@lem17045 (term1861 A B P lt2 P2 G2 f H2 g _114084 s x) (term1860 A B P s lt2 P1 G1 f H1 g x)). Qed.
Lemma lem8371720 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (_114084 : type794 A P) (s : P -> A) (lt2 : type1402 A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (H1 : type549 A B) (g : A -> B) (x : A) : (term2323 A B P P2 G2 H2 _114084 s lt2 P1 G1 f H1 g x) = (term2322 A B P P2 G2 H2 _114084 s lt2 P1 G1 f H1 g x).
Proof. exact (TRANS (@lem8371719 A B P P2 G2 H2 _114084 s lt2 P1 G1 f H1 g x) (@lem8371718 A B P P2 G2 H2 _114084 s lt2 P1 G1 f H1 g x)). Qed.
Lemma lem8371721 {A : Type'} (P : A -> Prop) : (term145 A P) = (term146 A P).
Proof. exact (@lem18392 A P). Qed.
Lemma lem8371722 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (_114084 : type794 A P) (s : P -> A) (lt2 : type1402 A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (H1 : type549 A B) (g : A -> B) : (term2324 A B P P2 G2 H2 _114084 s lt2 P1 G1 f H1 g) = (term2325 A B P P2 G2 H2 _114084 s lt2 P1 G1 f H1 g).
Proof. exact (@lem8371721 A (term1864 A B P P2 G2 H2 _114084 s lt2 P1 G1 f H1 g)). Qed.
Lemma lem8371723 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (_114084 : type794 A P) (s : P -> A) (lt2 : type1402 A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (H1 : type549 A B) (g : A -> B) (x : A) : (term2326 A B P P2 G2 H2 _114084 s lt2 P1 G1 f H1 g x) = (term1857 A B P P2 G2 H2 _114084 s lt2 P1 G1 f H1 g x).
Proof. exact (eq_refl (term2326 A B P P2 G2 H2 _114084 s lt2 P1 G1 f H1 g x)). Qed.
Lemma lem8371724 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem8371725 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (_114084 : type794 A P) (s : P -> A) (lt2 : type1402 A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (H1 : type549 A B) (g : A -> B) (x : A) : (term2327 A B P P2 G2 H2 _114084 s lt2 P1 G1 f H1 g x) = (term2323 A B P P2 G2 H2 _114084 s lt2 P1 G1 f H1 g x).
Proof. exact (MK_COMB (@lem8371724) (@lem8371723 A B P P2 G2 H2 _114084 s lt2 P1 G1 f H1 g x)). Qed.
Lemma lem8371726 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (_114084 : type794 A P) (s : P -> A) (lt2 : type1402 A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (H1 : type549 A B) (g : A -> B) (x : A) : (term2327 A B P P2 G2 H2 _114084 s lt2 P1 G1 f H1 g x) = (term2322 A B P P2 G2 H2 _114084 s lt2 P1 G1 f H1 g x).
Proof. exact (TRANS (@lem8371725 A B P P2 G2 H2 _114084 s lt2 P1 G1 f H1 g x) (@lem8371720 A B P P2 G2 H2 _114084 s lt2 P1 G1 f H1 g x)). Qed.
Lemma lem8371727 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (_114084 : type794 A P) (s : P -> A) (lt2 : type1402 A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (H1 : type549 A B) (g : A -> B) : (term2328 A B P P2 G2 H2 _114084 s lt2 P1 G1 f H1 g) = (term2329 A B P P2 G2 H2 _114084 s lt2 P1 G1 f H1 g).
Proof. exact (fun_ext (fun x : A => @lem8371726 A B P P2 G2 H2 _114084 s lt2 P1 G1 f H1 g x)). Qed.
Lemma lem8371728 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem8371729 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (_114084 : type794 A P) (s : P -> A) (lt2 : type1402 A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (H1 : type549 A B) (g : A -> B) : (term2325 A B P P2 G2 H2 _114084 s lt2 P1 G1 f H1 g) = (term2330 A B P P2 G2 H2 _114084 s lt2 P1 G1 f H1 g).
Proof. exact (MK_COMB (@lem8371728 A) (@lem8371727 A B P P2 G2 H2 _114084 s lt2 P1 G1 f H1 g)). Qed.
Lemma lem8371730 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (_114084 : type794 A P) (s : P -> A) (lt2 : type1402 A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (H1 : type549 A B) (g : A -> B) : (term2324 A B P P2 G2 H2 _114084 s lt2 P1 G1 f H1 g) = (term2330 A B P P2 G2 H2 _114084 s lt2 P1 G1 f H1 g).
Proof. exact (TRANS (@lem8371722 A B P P2 G2 H2 _114084 s lt2 P1 G1 f H1 g) (@lem8371729 A B P P2 G2 H2 _114084 s lt2 P1 G1 f H1 g)). Qed.
Lemma lem8371731 {A B : Type'} (P : type572 A B) : (term2331 A B P) = (term2332 A B P).
Proof. exact (@lem18392 (A -> B) P). Qed.
Lemma lem8371732 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (_114084 : type794 A P) (s : P -> A) (lt2 : type1402 A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (H1 : type549 A B) : (term2333 A B P P2 G2 H2 _114084 s lt2 P1 G1 f H1) = (term2334 A B P P2 G2 H2 _114084 s lt2 P1 G1 f H1).
Proof. exact (@lem8371731 A B (term1866 A B P P2 G2 H2 _114084 s lt2 P1 G1 f H1)). Qed.
Lemma lem8371733 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (_114084 : type794 A P) (s : P -> A) (lt2 : type1402 A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (H1 : type549 A B) (g : A -> B) : (term2335 A B P P2 G2 H2 _114084 s lt2 P1 G1 f H1 g) = (term1865 A B P P2 G2 H2 _114084 s lt2 P1 G1 f H1 g).
Proof. exact (eq_refl (term2335 A B P P2 G2 H2 _114084 s lt2 P1 G1 f H1 g)). Qed.
Lemma lem8371734 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem8371735 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (_114084 : type794 A P) (s : P -> A) (lt2 : type1402 A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (H1 : type549 A B) (g : A -> B) : (term2336 A B P P2 G2 H2 _114084 s lt2 P1 G1 f H1 g) = (term2324 A B P P2 G2 H2 _114084 s lt2 P1 G1 f H1 g).
Proof. exact (MK_COMB (@lem8371734) (@lem8371733 A B P P2 G2 H2 _114084 s lt2 P1 G1 f H1 g)). Qed.
Lemma lem8371736 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (_114084 : type794 A P) (s : P -> A) (lt2 : type1402 A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (H1 : type549 A B) (g : A -> B) : (term2336 A B P P2 G2 H2 _114084 s lt2 P1 G1 f H1 g) = (term2330 A B P P2 G2 H2 _114084 s lt2 P1 G1 f H1 g).
Proof. exact (TRANS (@lem8371735 A B P P2 G2 H2 _114084 s lt2 P1 G1 f H1 g) (@lem8371730 A B P P2 G2 H2 _114084 s lt2 P1 G1 f H1 g)). Qed.
Lemma lem8371737 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (_114084 : type794 A P) (s : P -> A) (lt2 : type1402 A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (H1 : type549 A B) : (term2337 A B P P2 G2 H2 _114084 s lt2 P1 G1 f H1) = (term2338 A B P P2 G2 H2 _114084 s lt2 P1 G1 f H1).
Proof. exact (fun_ext (fun g : A -> B => @lem8371736 A B P P2 G2 H2 _114084 s lt2 P1 G1 f H1 g)). Qed.
Lemma lem8371738 {A B : Type'} : (@ex (A -> B)) = (@ex (A -> B)).
Proof. exact (eq_refl (@ex (A -> B))). Qed.
Lemma lem8371739 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (_114084 : type794 A P) (s : P -> A) (lt2 : type1402 A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (H1 : type549 A B) : (term2334 A B P P2 G2 H2 _114084 s lt2 P1 G1 f H1) = (term2339 A B P P2 G2 H2 _114084 s lt2 P1 G1 f H1).
Proof. exact (MK_COMB (@lem8371738 A B) (@lem8371737 A B P P2 G2 H2 _114084 s lt2 P1 G1 f H1)). Qed.
Lemma lem8371740 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (_114084 : type794 A P) (s : P -> A) (lt2 : type1402 A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (H1 : type549 A B) : (term2333 A B P P2 G2 H2 _114084 s lt2 P1 G1 f H1) = (term2339 A B P P2 G2 H2 _114084 s lt2 P1 G1 f H1).
Proof. exact (TRANS (@lem8371732 A B P P2 G2 H2 _114084 s lt2 P1 G1 f H1) (@lem8371739 A B P P2 G2 H2 _114084 s lt2 P1 G1 f H1)). Qed.
Lemma lem8371741 {A B : Type'} (P : type572 A B) : (term2331 A B P) = (term2332 A B P).
Proof. exact (@lem18392 (A -> B) P). Qed.
Lemma lem8371742 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (_114084 : type794 A P) (s : P -> A) (lt2 : type1402 A) (P1 : type551 A B) (G1 : type548 A B) (H1 : type549 A B) : (term2340 A B P P2 G2 H2 _114084 s lt2 P1 G1 H1) = (term2341 A B P P2 G2 H2 _114084 s lt2 P1 G1 H1).
Proof. exact (@lem8371741 A B (term1868 A B P P2 G2 H2 _114084 s lt2 P1 G1 H1)). Qed.
Lemma lem8371743 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (_114084 : type794 A P) (s : P -> A) (lt2 : type1402 A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (H1 : type549 A B) : (term2342 A B P P2 G2 H2 _114084 s lt2 P1 G1 H1 f) = (term1867 A B P P2 G2 H2 _114084 s lt2 P1 G1 f H1).
Proof. exact (eq_refl (term2342 A B P P2 G2 H2 _114084 s lt2 P1 G1 H1 f)). Qed.
Lemma lem8371744 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem8371745 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (_114084 : type794 A P) (s : P -> A) (lt2 : type1402 A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (H1 : type549 A B) : (term2343 A B P P2 G2 H2 _114084 s lt2 P1 G1 H1 f) = (term2333 A B P P2 G2 H2 _114084 s lt2 P1 G1 f H1).
Proof. exact (MK_COMB (@lem8371744) (@lem8371743 A B P P2 G2 H2 _114084 s lt2 P1 G1 f H1)). Qed.
Lemma lem8371746 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (_114084 : type794 A P) (s : P -> A) (lt2 : type1402 A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (H1 : type549 A B) : (term2343 A B P P2 G2 H2 _114084 s lt2 P1 G1 H1 f) = (term2339 A B P P2 G2 H2 _114084 s lt2 P1 G1 f H1).
Proof. exact (TRANS (@lem8371745 A B P P2 G2 H2 _114084 s lt2 P1 G1 f H1) (@lem8371740 A B P P2 G2 H2 _114084 s lt2 P1 G1 f H1)). Qed.
Lemma lem8371747 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (_114084 : type794 A P) (s : P -> A) (lt2 : type1402 A) (P1 : type551 A B) (G1 : type548 A B) (H1 : type549 A B) : (term2344 A B P P2 G2 H2 _114084 s lt2 P1 G1 H1) = (term2345 A B P P2 G2 H2 _114084 s lt2 P1 G1 H1).
Proof. exact (fun_ext (fun f : A -> B => @lem8371746 A B P P2 G2 H2 _114084 s lt2 P1 G1 f H1)). Qed.
Lemma lem8371748 {A B : Type'} : (@ex (A -> B)) = (@ex (A -> B)).
Proof. exact (eq_refl (@ex (A -> B))). Qed.
Lemma lem8371749 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (_114084 : type794 A P) (s : P -> A) (lt2 : type1402 A) (P1 : type551 A B) (G1 : type548 A B) (H1 : type549 A B) : (term2341 A B P P2 G2 H2 _114084 s lt2 P1 G1 H1) = (term2346 A B P P2 G2 H2 _114084 s lt2 P1 G1 H1).
Proof. exact (MK_COMB (@lem8371748 A B) (@lem8371747 A B P P2 G2 H2 _114084 s lt2 P1 G1 H1)). Qed.
Lemma lem8371750 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (_114084 : type794 A P) (s : P -> A) (lt2 : type1402 A) (P1 : type551 A B) (G1 : type548 A B) (H1 : type549 A B) : (term2340 A B P P2 G2 H2 _114084 s lt2 P1 G1 H1) = (term2346 A B P P2 G2 H2 _114084 s lt2 P1 G1 H1).
Proof. exact (TRANS (@lem8371742 A B P P2 G2 H2 _114084 s lt2 P1 G1 H1) (@lem8371749 A B P P2 G2 H2 _114084 s lt2 P1 G1 H1)). Qed.
Lemma lem8371751 {A P : Type'} (s : P -> A) (y : P) (x : A) : ((s y) = x) = ((s y) = x).
Proof. exact (eq_refl ((s y) = x)). Qed.
Lemma lem8371752 {A P : Type'} (s : P -> A) (x : A) : (term1454 A P s x) = (term1454 A P s x).
Proof. exact (fun_ext (fun y : P => @lem8371751 A P s y x)). Qed.
Lemma lem8371753 {P : Type'} : (@ex P) = (@ex P).
Proof. exact (eq_refl (@ex P)). Qed.
Lemma lem8371754 {A P : Type'} (s : P -> A) (x : A) : (term1773 A P s x) = (term1773 A P s x).
Proof. exact (MK_COMB (@lem8371753 P) (@lem8371752 A P s x)). Qed.
Lemma lem8371755 {A P : Type'} (s : P -> A) (x : A) : (term2274 A P s x) = (term1773 A P s x).
Proof. exact (@lem16933 (term1773 A P s x)). Qed.
Lemma lem8371756 {A P : Type'} (s : P -> A) (x : A) : (term2274 A P s x) = (term1773 A P s x).
Proof. exact (TRANS (@lem8371755 A P s x) (@lem8371754 A P s x)). Qed.
Lemma lem8371767 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (_114084 : type794 A P) (s : P -> A) (lt2 : type1402 A) (y : A) (x : A) : (term2347 A B P P2 G2 f _114084 s lt2 y x) = (term2348 A B P P2 G2 f _114084 s lt2 y x).
Proof. exact (@lem17362 (term1816 A B P P2 lt2 y G2 f _114084 s x) (lt2 y x)). Qed.
Lemma lem8371768 {A : Type'} (P : A -> Prop) : (term145 A P) = (term146 A P).
Proof. exact (@lem18392 A P). Qed.
Lemma lem8371769 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (_114084 : type794 A P) (s : P -> A) (lt2 : type1402 A) (x : A) : (term2349 A B P P2 G2 f _114084 s lt2 x) = (term2350 A B P P2 G2 f _114084 s lt2 x).
Proof. exact (@lem8371768 A (term1819 A B P P2 G2 f _114084 s lt2 x)). Qed.
Lemma lem8371770 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (_114084 : type794 A P) (s : P -> A) (lt2 : type1402 A) (y : A) (x : A) : (term2351 A B P P2 G2 f _114084 s lt2 x y) = (term1818 A B P P2 G2 f _114084 s lt2 y x).
Proof. exact (eq_refl (term2351 A B P P2 G2 f _114084 s lt2 x y)). Qed.
Lemma lem8371771 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem8371772 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (_114084 : type794 A P) (s : P -> A) (lt2 : type1402 A) (y : A) (x : A) : (term2352 A B P P2 G2 f _114084 s lt2 x y) = (term2347 A B P P2 G2 f _114084 s lt2 y x).
Proof. exact (MK_COMB (@lem8371771) (@lem8371770 A B P P2 G2 f _114084 s lt2 y x)). Qed.
Lemma lem8371773 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (_114084 : type794 A P) (s : P -> A) (lt2 : type1402 A) (y : A) (x : A) : (term2352 A B P P2 G2 f _114084 s lt2 x y) = (term2348 A B P P2 G2 f _114084 s lt2 y x).
Proof. exact (TRANS (@lem8371772 A B P P2 G2 f _114084 s lt2 y x) (@lem8371767 A B P P2 G2 f _114084 s lt2 y x)). Qed.
Lemma lem8371774 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (_114084 : type794 A P) (s : P -> A) (lt2 : type1402 A) (x : A) : (term2353 A B P P2 G2 f _114084 s lt2 x) = (term2354 A B P P2 G2 f _114084 s lt2 x).
Proof. exact (fun_ext (fun y : A => @lem8371773 A B P P2 G2 f _114084 s lt2 y x)). Qed.
Lemma lem8371775 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem8371776 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (_114084 : type794 A P) (s : P -> A) (lt2 : type1402 A) (x : A) : (term2350 A B P P2 G2 f _114084 s lt2 x) = (term2355 A B P P2 G2 f _114084 s lt2 x).
Proof. exact (MK_COMB (@lem8371775 A) (@lem8371774 A B P P2 G2 f _114084 s lt2 x)). Qed.
Lemma lem8371777 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (_114084 : type794 A P) (s : P -> A) (lt2 : type1402 A) (x : A) : (term2349 A B P P2 G2 f _114084 s lt2 x) = (term2355 A B P P2 G2 f _114084 s lt2 x).
Proof. exact (TRANS (@lem8371769 A B P P2 G2 f _114084 s lt2 x) (@lem8371776 A B P P2 G2 f _114084 s lt2 x)). Qed.
Lemma lem8371778 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8371779 {A P : Type'} (s : P -> A) (x : A) : (term2292 A P s x) = (term2293 A P s x).
Proof. exact (MK_COMB (@lem8371778) (@lem8371756 A P s x)). Qed.
Lemma lem8371780 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (_114084 : type794 A P) (s : P -> A) (lt2 : type1402 A) (x : A) : (term2356 A B P P2 G2 f _114084 s lt2 x) = (term2357 A B P P2 G2 f _114084 s lt2 x).
Proof. exact (MK_COMB (@lem8371779 A P s x) (@lem8371777 A B P P2 G2 f _114084 s lt2 x)). Qed.
Lemma lem8371781 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (_114084 : type794 A P) (s : P -> A) (lt2 : type1402 A) (x : A) : (term2358 A B P P2 G2 f _114084 s lt2 x) = (term2356 A B P P2 G2 f _114084 s lt2 x).
Proof. exact (@lem17160 (term1802 A P s x) (term1820 A B P P2 G2 f _114084 s lt2 x)). Qed.
Lemma lem8371782 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (_114084 : type794 A P) (s : P -> A) (lt2 : type1402 A) (x : A) : (term2358 A B P P2 G2 f _114084 s lt2 x) = (term2357 A B P P2 G2 f _114084 s lt2 x).
Proof. exact (TRANS (@lem8371781 A B P P2 G2 f _114084 s lt2 x) (@lem8371780 A B P P2 G2 f _114084 s lt2 x)). Qed.
Lemma lem8371784 {P : Type'} (P' : P -> Prop) : (term2297 P P') = (term2298 P P').
Proof. exact (@lem18394 P P'). Qed.
Lemma lem8371785 {A P : Type'} (s : P -> A) (x : A) : (term1802 A P s x) = (term2299 A P s x).
Proof. exact (@lem8371784 P (term1454 A P s x)). Qed.
Lemma lem8371786 {A P : Type'} (s : P -> A) (y : P) (x : A) : (term1457 A P s x y) = ((s y) = x).
Proof. exact (eq_refl (term1457 A P s x y)). Qed.
Lemma lem8371787 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem8371789 {A P : Type'} (s : P -> A) (y : P) (x : A) : (term2300 A P s x y) = (term2006 A P s y x).
Proof. exact (MK_COMB (@lem8371787) (@lem8371786 A P s y x)). Qed.
Lemma lem8371790 {A P : Type'} (s : P -> A) (x : A) : (term2301 A P s x) = (term2004 A P s x).
Proof. exact (fun_ext (fun y : P => @lem8371789 A P s y x)). Qed.
Lemma lem8371791 {P : Type'} : (@all P) = (@all P).
Proof. exact (eq_refl (@all P)). Qed.
Lemma lem8371792 {A P : Type'} (s : P -> A) (x : A) : (term2299 A P s x) = (term2015 A P s x).
Proof. exact (MK_COMB (@lem8371791 P) (@lem8371790 A P s x)). Qed.
Lemma lem8371793 {A P : Type'} (s : P -> A) (x : A) : (term1802 A P s x) = (term2015 A P s x).
Proof. exact (TRANS (@lem8371785 A P s x) (@lem8371792 A P s x)). Qed.
Lemma lem8371804 {A B : Type'} (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (lt2 : type1402 A) (y : A) (x : A) : (term2359 A B P1 G1 f lt2 y x) = (term2360 A B P1 G1 f lt2 y x).
Proof. exact (@lem17362 (term1808 A B P1 lt2 y G1 f x) (lt2 y x)). Qed.
Lemma lem8371805 {A : Type'} (P : A -> Prop) : (term145 A P) = (term146 A P).
Proof. exact (@lem18392 A P). Qed.
Lemma lem8371806 {A B : Type'} (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (lt2 : type1402 A) (x : A) : (term2361 A B P1 G1 f lt2 x) = (term2362 A B P1 G1 f lt2 x).
Proof. exact (@lem8371805 A (term1811 A B P1 G1 f lt2 x)). Qed.
Lemma lem8371807 {A B : Type'} (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (lt2 : type1402 A) (y : A) (x : A) : (term2363 A B P1 G1 f lt2 x y) = (term1810 A B P1 G1 f lt2 y x).
Proof. exact (eq_refl (term2363 A B P1 G1 f lt2 x y)). Qed.
Lemma lem8371808 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem8371809 {A B : Type'} (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (lt2 : type1402 A) (y : A) (x : A) : (term2364 A B P1 G1 f lt2 x y) = (term2359 A B P1 G1 f lt2 y x).
Proof. exact (MK_COMB (@lem8371808) (@lem8371807 A B P1 G1 f lt2 y x)). Qed.
Lemma lem8371810 {A B : Type'} (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (lt2 : type1402 A) (y : A) (x : A) : (term2364 A B P1 G1 f lt2 x y) = (term2360 A B P1 G1 f lt2 y x).
Proof. exact (TRANS (@lem8371809 A B P1 G1 f lt2 y x) (@lem8371804 A B P1 G1 f lt2 y x)). Qed.
Lemma lem8371811 {A B : Type'} (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (lt2 : type1402 A) (x : A) : (term2365 A B P1 G1 f lt2 x) = (term2366 A B P1 G1 f lt2 x).
Proof. exact (fun_ext (fun y : A => @lem8371810 A B P1 G1 f lt2 y x)). Qed.
Lemma lem8371812 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem8371813 {A B : Type'} (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (lt2 : type1402 A) (x : A) : (term2362 A B P1 G1 f lt2 x) = (term2367 A B P1 G1 f lt2 x).
Proof. exact (MK_COMB (@lem8371812 A) (@lem8371811 A B P1 G1 f lt2 x)). Qed.
Lemma lem8371814 {A B : Type'} (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (lt2 : type1402 A) (x : A) : (term2361 A B P1 G1 f lt2 x) = (term2367 A B P1 G1 f lt2 x).
Proof. exact (TRANS (@lem8371806 A B P1 G1 f lt2 x) (@lem8371813 A B P1 G1 f lt2 x)). Qed.
Lemma lem8371815 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8371816 {A P : Type'} (s : P -> A) (x : A) : (term2314 A P s x) = (term2315 A P s x).
Proof. exact (MK_COMB (@lem8371815) (@lem8371793 A P s x)). Qed.
Lemma lem8371817 {A B P : Type'} (s : P -> A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (lt2 : type1402 A) (x : A) : (term2368 A B P s P1 G1 f lt2 x) = (term2369 A B P s P1 G1 f lt2 x).
Proof. exact (MK_COMB (@lem8371816 A P s x) (@lem8371814 A B P1 G1 f lt2 x)). Qed.
Lemma lem8371818 {A B P : Type'} (s : P -> A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (lt2 : type1402 A) (x : A) : (term2370 A B P s P1 G1 f lt2 x) = (term2368 A B P s P1 G1 f lt2 x).
Proof. exact (@lem17160 (term1773 A P s x) (term1812 A B P1 G1 f lt2 x)). Qed.
Lemma lem8371819 {A B P : Type'} (s : P -> A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (lt2 : type1402 A) (x : A) : (term2370 A B P s P1 G1 f lt2 x) = (term2369 A B P s P1 G1 f lt2 x).
Proof. exact (TRANS (@lem8371818 A B P s P1 G1 f lt2 x) (@lem8371817 A B P s P1 G1 f lt2 x)). Qed.
Lemma lem8371820 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8371821 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (_114084 : type794 A P) (s : P -> A) (lt2 : type1402 A) (x : A) : (term2371 A B P P2 G2 f _114084 s lt2 x) = (term2372 A B P P2 G2 f _114084 s lt2 x).
Proof. exact (MK_COMB (@lem8371820) (@lem8371782 A B P P2 G2 f _114084 s lt2 x)). Qed.
Lemma lem8371822 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (_114084 : type794 A P) (s : P -> A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (lt2 : type1402 A) (x : A) : (term2373 A B P P2 G2 _114084 s P1 G1 f lt2 x) = (term2374 A B P P2 G2 _114084 s P1 G1 f lt2 x).
Proof. exact (MK_COMB (@lem8371821 A B P P2 G2 f _114084 s lt2 x) (@lem8371819 A B P s P1 G1 f lt2 x)). Qed.
Lemma lem8371823 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (_114084 : type794 A P) (s : P -> A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (lt2 : type1402 A) (x : A) : (term2375 A B P P2 G2 _114084 s P1 G1 f lt2 x) = (term2373 A B P P2 G2 _114084 s P1 G1 f lt2 x).
Proof. exact (@lem17045 (term1828 A B P P2 G2 f _114084 s lt2 x) (term1826 A B P s P1 G1 f lt2 x)). Qed.
Lemma lem8371824 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (_114084 : type794 A P) (s : P -> A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (lt2 : type1402 A) (x : A) : (term2375 A B P P2 G2 _114084 s P1 G1 f lt2 x) = (term2374 A B P P2 G2 _114084 s P1 G1 f lt2 x).
Proof. exact (TRANS (@lem8371823 A B P P2 G2 _114084 s P1 G1 f lt2 x) (@lem8371822 A B P P2 G2 _114084 s P1 G1 f lt2 x)). Qed.
Lemma lem8371825 {A : Type'} (P : A -> Prop) : (term145 A P) = (term146 A P).
Proof. exact (@lem18392 A P). Qed.
Lemma lem8371826 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (_114084 : type794 A P) (s : P -> A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (lt2 : type1402 A) : (term2376 A B P P2 G2 _114084 s P1 G1 f lt2) = (term2377 A B P P2 G2 _114084 s P1 G1 f lt2).
Proof. exact (@lem8371825 A (term1831 A B P P2 G2 _114084 s P1 G1 f lt2)). Qed.
Lemma lem8371827 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (_114084 : type794 A P) (s : P -> A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (lt2 : type1402 A) (x : A) : (term2378 A B P P2 G2 _114084 s P1 G1 f lt2 x) = (term1824 A B P P2 G2 _114084 s P1 G1 f lt2 x).
Proof. exact (eq_refl (term2378 A B P P2 G2 _114084 s P1 G1 f lt2 x)). Qed.
Lemma lem8371828 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem8371829 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (_114084 : type794 A P) (s : P -> A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (lt2 : type1402 A) (x : A) : (term2379 A B P P2 G2 _114084 s P1 G1 f lt2 x) = (term2375 A B P P2 G2 _114084 s P1 G1 f lt2 x).
Proof. exact (MK_COMB (@lem8371828) (@lem8371827 A B P P2 G2 _114084 s P1 G1 f lt2 x)). Qed.
Lemma lem8371830 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (_114084 : type794 A P) (s : P -> A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (lt2 : type1402 A) (x : A) : (term2379 A B P P2 G2 _114084 s P1 G1 f lt2 x) = (term2374 A B P P2 G2 _114084 s P1 G1 f lt2 x).
Proof. exact (TRANS (@lem8371829 A B P P2 G2 _114084 s P1 G1 f lt2 x) (@lem8371824 A B P P2 G2 _114084 s P1 G1 f lt2 x)). Qed.
Lemma lem8371831 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (_114084 : type794 A P) (s : P -> A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (lt2 : type1402 A) : (term2380 A B P P2 G2 _114084 s P1 G1 f lt2) = (term2381 A B P P2 G2 _114084 s P1 G1 f lt2).
Proof. exact (fun_ext (fun x : A => @lem8371830 A B P P2 G2 _114084 s P1 G1 f lt2 x)). Qed.
Lemma lem8371832 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem8371833 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (_114084 : type794 A P) (s : P -> A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (lt2 : type1402 A) : (term2377 A B P P2 G2 _114084 s P1 G1 f lt2) = (term2382 A B P P2 G2 _114084 s P1 G1 f lt2).
Proof. exact (MK_COMB (@lem8371832 A) (@lem8371831 A B P P2 G2 _114084 s P1 G1 f lt2)). Qed.
Lemma lem8371834 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (_114084 : type794 A P) (s : P -> A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (lt2 : type1402 A) : (term2376 A B P P2 G2 _114084 s P1 G1 f lt2) = (term2382 A B P P2 G2 _114084 s P1 G1 f lt2).
Proof. exact (TRANS (@lem8371826 A B P P2 G2 _114084 s P1 G1 f lt2) (@lem8371833 A B P P2 G2 _114084 s P1 G1 f lt2)). Qed.
Lemma lem8371835 {A B : Type'} (P : type572 A B) : (term2331 A B P) = (term2332 A B P).
Proof. exact (@lem18392 (A -> B) P). Qed.
Lemma lem8371836 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (_114084 : type794 A P) (s : P -> A) (P1 : type551 A B) (G1 : type548 A B) (lt2 : type1402 A) : (term2383 A B P P2 G2 _114084 s P1 G1 lt2) = (term2384 A B P P2 G2 _114084 s P1 G1 lt2).
Proof. exact (@lem8371835 A B (term1833 A B P P2 G2 _114084 s P1 G1 lt2)). Qed.
Lemma lem8371837 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (_114084 : type794 A P) (s : P -> A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (lt2 : type1402 A) : (term2385 A B P P2 G2 _114084 s P1 G1 lt2 f) = (term1832 A B P P2 G2 _114084 s P1 G1 f lt2).
Proof. exact (eq_refl (term2385 A B P P2 G2 _114084 s P1 G1 lt2 f)). Qed.
Lemma lem8371838 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem8371839 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (_114084 : type794 A P) (s : P -> A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (lt2 : type1402 A) : (term2386 A B P P2 G2 _114084 s P1 G1 lt2 f) = (term2376 A B P P2 G2 _114084 s P1 G1 f lt2).
Proof. exact (MK_COMB (@lem8371838) (@lem8371837 A B P P2 G2 _114084 s P1 G1 f lt2)). Qed.
Lemma lem8371840 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (_114084 : type794 A P) (s : P -> A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (lt2 : type1402 A) : (term2386 A B P P2 G2 _114084 s P1 G1 lt2 f) = (term2382 A B P P2 G2 _114084 s P1 G1 f lt2).
Proof. exact (TRANS (@lem8371839 A B P P2 G2 _114084 s P1 G1 f lt2) (@lem8371834 A B P P2 G2 _114084 s P1 G1 f lt2)). Qed.
Lemma lem8371841 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (_114084 : type794 A P) (s : P -> A) (P1 : type551 A B) (G1 : type548 A B) (lt2 : type1402 A) : (term2387 A B P P2 G2 _114084 s P1 G1 lt2) = (term2388 A B P P2 G2 _114084 s P1 G1 lt2).
Proof. exact (fun_ext (fun f : A -> B => @lem8371840 A B P P2 G2 _114084 s P1 G1 f lt2)). Qed.
Lemma lem8371842 {A B : Type'} : (@ex (A -> B)) = (@ex (A -> B)).
Proof. exact (eq_refl (@ex (A -> B))). Qed.
Lemma lem8371843 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (_114084 : type794 A P) (s : P -> A) (P1 : type551 A B) (G1 : type548 A B) (lt2 : type1402 A) : (term2384 A B P P2 G2 _114084 s P1 G1 lt2) = (term2389 A B P P2 G2 _114084 s P1 G1 lt2).
Proof. exact (MK_COMB (@lem8371842 A B) (@lem8371841 A B P P2 G2 _114084 s P1 G1 lt2)). Qed.
Lemma lem8371844 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (_114084 : type794 A P) (s : P -> A) (P1 : type551 A B) (G1 : type548 A B) (lt2 : type1402 A) : (term2383 A B P P2 G2 _114084 s P1 G1 lt2) = (term2389 A B P P2 G2 _114084 s P1 G1 lt2).
Proof. exact (TRANS (@lem8371836 A B P P2 G2 _114084 s P1 G1 lt2) (@lem8371843 A B P P2 G2 _114084 s P1 G1 lt2)). Qed.
Lemma lem8371845 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8371846 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (_114084 : type794 A P) (s : P -> A) (lt2 : type1402 A) (P1 : type551 A B) (G1 : type548 A B) (H1 : type549 A B) : (term2390 A B P P2 G2 H2 _114084 s lt2 P1 G1 H1) = (term2391 A B P P2 G2 H2 _114084 s lt2 P1 G1 H1).
Proof. exact (MK_COMB (@lem8371845) (@lem8371750 A B P P2 G2 H2 _114084 s lt2 P1 G1 H1)). Qed.
Lemma lem8371847 {A B P : Type'} (H2 : type558 A B P) (H1 : type549 A B) (P2 : type560 A B P) (G2 : type557 A B P) (_114084 : type794 A P) (s : P -> A) (P1 : type551 A B) (G1 : type548 A B) (lt2 : type1402 A) : (term2392 A B P H2 H1 P2 G2 _114084 s P1 G1 lt2) = (term2393 A B P H2 H1 P2 G2 _114084 s P1 G1 lt2).
Proof. exact (MK_COMB (@lem8371846 A B P P2 G2 H2 _114084 s lt2 P1 G1 H1) (@lem8371844 A B P P2 G2 _114084 s P1 G1 lt2)). Qed.
Lemma lem8371848 {A B P : Type'} (H2 : type558 A B P) (H1 : type549 A B) (P2 : type560 A B P) (G2 : type557 A B P) (_114084 : type794 A P) (s : P -> A) (P1 : type551 A B) (G1 : type548 A B) (lt2 : type1402 A) : (term1992 A B P H2 H1 P2 G2 _114084 s P1 G1 lt2) = (term2392 A B P H2 H1 P2 G2 _114084 s P1 G1 lt2).
Proof. exact (@lem17045 (term1869 A B P P2 G2 H2 _114084 s lt2 P1 G1 H1) (term1834 A B P P2 G2 _114084 s P1 G1 lt2)). Qed.
Lemma lem8371849 {A B P : Type'} (H2 : type558 A B P) (H1 : type549 A B) (P2 : type560 A B P) (G2 : type557 A B P) (_114084 : type794 A P) (s : P -> A) (P1 : type551 A B) (G1 : type548 A B) (lt2 : type1402 A) : (term1992 A B P H2 H1 P2 G2 _114084 s P1 G1 lt2) = (term2393 A B P H2 H1 P2 G2 _114084 s P1 G1 lt2).
Proof. exact (TRANS (@lem8371848 A B P H2 H1 P2 G2 _114084 s P1 G1 lt2) (@lem8371847 A B P H2 H1 P2 G2 _114084 s P1 G1 lt2)). Qed.
Lemma lem8371859 {A : Type'} (P : A -> Prop) (Q : A -> Prop) : (term379 A P Q) = (term378 A P Q).
Proof. exact (EQ_MP (@lem18971 A P Q) (@lem18970 A P Q)). Qed.
Lemma lem8371860 {A : Type'} (P : A -> Prop) (Q : A -> Prop) : (term379 A P Q) = (term378 A P Q).
Proof. exact (@lem8371859 A P Q). Qed.
Lemma lem8371861 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (_114084 : type794 A P) (s : P -> A) (lt2 : type1402 A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (H1 : type549 A B) (g : A -> B) : (term2394 A B P P2 G2 H2 _114084 s lt2 P1 G1 f H1 g) = (term2395 A B P P2 G2 H2 _114084 s lt2 P1 G1 f H1 g).
Proof. exact (@lem8371860 A (term2396 A B P lt2 P2 G2 f H2 g _114084 s) (term2397 A B P s lt2 P1 G1 f H1 g)). Qed.
Lemma lem8371862 {A B P : Type'} (lt2 : type1402 A) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (_114084 : type794 A P) (s : P -> A) (x : A) : (term2398 A B P lt2 P2 G2 f H2 g _114084 s x) = (term2295 A B P lt2 P2 G2 f H2 g _114084 s x).
Proof. exact (eq_refl (term2398 A B P lt2 P2 G2 f H2 g _114084 s x)). Qed.
Lemma lem8371863 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8371864 {A B P : Type'} (lt2 : type1402 A) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (_114084 : type794 A P) (s : P -> A) (x : A) : (term2399 A B P lt2 P2 G2 f H2 g _114084 s x) = (term2320 A B P lt2 P2 G2 f H2 g _114084 s x).
Proof. exact (MK_COMB (@lem8371863) (@lem8371862 A B P lt2 P2 G2 f H2 g _114084 s x)). Qed.
Lemma lem8371865 {A B P : Type'} (s : P -> A) (lt2 : type1402 A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (H1 : type549 A B) (g : A -> B) (x : A) : (term2400 A B P s lt2 P1 G1 f H1 g x) = (term2317 A B P s lt2 P1 G1 f H1 g x).
Proof. exact (eq_refl (term2400 A B P s lt2 P1 G1 f H1 g x)). Qed.
Lemma lem8371866 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (_114084 : type794 A P) (s : P -> A) (lt2 : type1402 A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (H1 : type549 A B) (g : A -> B) (x : A) : (term2401 A B P P2 G2 H2 _114084 s lt2 P1 G1 f H1 g x) = (term2322 A B P P2 G2 H2 _114084 s lt2 P1 G1 f H1 g x).
Proof. exact (MK_COMB (@lem8371864 A B P lt2 P2 G2 f H2 g _114084 s x) (@lem8371865 A B P s lt2 P1 G1 f H1 g x)). Qed.
Lemma lem8371867 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (_114084 : type794 A P) (s : P -> A) (lt2 : type1402 A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (H1 : type549 A B) (g : A -> B) : (term2402 A B P P2 G2 H2 _114084 s lt2 P1 G1 f H1 g) = (term2329 A B P P2 G2 H2 _114084 s lt2 P1 G1 f H1 g).
Proof. exact (fun_ext (fun x : A => @lem8371866 A B P P2 G2 H2 _114084 s lt2 P1 G1 f H1 g x)). Qed.
Lemma lem8371868 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem8371869 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (_114084 : type794 A P) (s : P -> A) (lt2 : type1402 A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (H1 : type549 A B) (g : A -> B) : (term2394 A B P P2 G2 H2 _114084 s lt2 P1 G1 f H1 g) = (term2330 A B P P2 G2 H2 _114084 s lt2 P1 G1 f H1 g).
Proof. exact (MK_COMB (@lem8371868 A) (@lem8371867 A B P P2 G2 H2 _114084 s lt2 P1 G1 f H1 g)). Qed.
Lemma lem8371870 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8371871 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (_114084 : type794 A P) (s : P -> A) (lt2 : type1402 A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (H1 : type549 A B) (g : A -> B) : (term2403 A B P P2 G2 H2 _114084 s lt2 P1 G1 f H1 g) = (term2404 A B P P2 G2 H2 _114084 s lt2 P1 G1 f H1 g).
Proof. exact (MK_COMB (@lem8371870) (@lem8371869 A B P P2 G2 H2 _114084 s lt2 P1 G1 f H1 g)). Qed.
Lemma lem8371872 {A B P : Type'} (lt2 : type1402 A) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (_114084 : type794 A P) (s : P -> A) (x : A) : (term2398 A B P lt2 P2 G2 f H2 g _114084 s x) = (term2295 A B P lt2 P2 G2 f H2 g _114084 s x).
Proof. exact (eq_refl (term2398 A B P lt2 P2 G2 f H2 g _114084 s x)). Qed.
Lemma lem8371873 {A B P : Type'} (lt2 : type1402 A) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (_114084 : type794 A P) (s : P -> A) : (term2405 A B P lt2 P2 G2 f H2 g _114084 s) = (term2396 A B P lt2 P2 G2 f H2 g _114084 s).
Proof. exact (fun_ext (fun x : A => @lem8371872 A B P lt2 P2 G2 f H2 g _114084 s x)). Qed.
Lemma lem8371874 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem8371875 {A B P : Type'} (lt2 : type1402 A) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (_114084 : type794 A P) (s : P -> A) : (term2406 A B P lt2 P2 G2 f H2 g _114084 s) = (term2407 A B P lt2 P2 G2 f H2 g _114084 s).
Proof. exact (MK_COMB (@lem8371874 A) (@lem8371873 A B P lt2 P2 G2 f H2 g _114084 s)). Qed.
Lemma lem8371876 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8371877 {A B P : Type'} (lt2 : type1402 A) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (_114084 : type794 A P) (s : P -> A) : (term2408 A B P lt2 P2 G2 f H2 g _114084 s) = (term2409 A B P lt2 P2 G2 f H2 g _114084 s).
Proof. exact (MK_COMB (@lem8371876) (@lem8371875 A B P lt2 P2 G2 f H2 g _114084 s)). Qed.
Lemma lem8371878 {A B P : Type'} (s : P -> A) (lt2 : type1402 A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (H1 : type549 A B) (g : A -> B) (x : A) : (term2400 A B P s lt2 P1 G1 f H1 g x) = (term2317 A B P s lt2 P1 G1 f H1 g x).
Proof. exact (eq_refl (term2400 A B P s lt2 P1 G1 f H1 g x)). Qed.
Lemma lem8371879 {A B P : Type'} (s : P -> A) (lt2 : type1402 A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (H1 : type549 A B) (g : A -> B) : (term2410 A B P s lt2 P1 G1 f H1 g) = (term2397 A B P s lt2 P1 G1 f H1 g).
Proof. exact (fun_ext (fun x : A => @lem8371878 A B P s lt2 P1 G1 f H1 g x)). Qed.
Lemma lem8371880 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem8371881 {A B P : Type'} (s : P -> A) (lt2 : type1402 A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (H1 : type549 A B) (g : A -> B) : (term2411 A B P s lt2 P1 G1 f H1 g) = (term2412 A B P s lt2 P1 G1 f H1 g).
Proof. exact (MK_COMB (@lem8371880 A) (@lem8371879 A B P s lt2 P1 G1 f H1 g)). Qed.
Lemma lem8371882 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (_114084 : type794 A P) (s : P -> A) (lt2 : type1402 A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (H1 : type549 A B) (g : A -> B) : (term2395 A B P P2 G2 H2 _114084 s lt2 P1 G1 f H1 g) = (term2413 A B P P2 G2 H2 _114084 s lt2 P1 G1 f H1 g).
Proof. exact (MK_COMB (@lem8371877 A B P lt2 P2 G2 f H2 g _114084 s) (@lem8371881 A B P s lt2 P1 G1 f H1 g)). Qed.
Lemma lem8371883 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (_114084 : type794 A P) (s : P -> A) (lt2 : type1402 A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (H1 : type549 A B) (g : A -> B) : ((term2394 A B P P2 G2 H2 _114084 s lt2 P1 G1 f H1 g) = (term2395 A B P P2 G2 H2 _114084 s lt2 P1 G1 f H1 g)) = ((term2330 A B P P2 G2 H2 _114084 s lt2 P1 G1 f H1 g) = (term2413 A B P P2 G2 H2 _114084 s lt2 P1 G1 f H1 g)).
Proof. exact (MK_COMB (@lem8371871 A B P P2 G2 H2 _114084 s lt2 P1 G1 f H1 g) (@lem8371882 A B P P2 G2 H2 _114084 s lt2 P1 G1 f H1 g)). Qed.
Lemma lem8371884 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (_114084 : type794 A P) (s : P -> A) (lt2 : type1402 A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (H1 : type549 A B) (g : A -> B) : (term2330 A B P P2 G2 H2 _114084 s lt2 P1 G1 f H1 g) = (term2413 A B P P2 G2 H2 _114084 s lt2 P1 G1 f H1 g).
Proof. exact (EQ_MP (@lem8371883 A B P P2 G2 H2 _114084 s lt2 P1 G1 f H1 g) (@lem8371861 A B P P2 G2 H2 _114084 s lt2 P1 G1 f H1 g)). Qed.
Lemma lem8372085 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (_114084 : type794 A P) (s : P -> A) (lt2 : type1402 A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (H1 : type549 A B) : (term2338 A B P P2 G2 H2 _114084 s lt2 P1 G1 f H1) = (term2414 A B P P2 G2 H2 _114084 s lt2 P1 G1 f H1).
Proof. exact (fun_ext (fun g : A -> B => @lem8371884 A B P P2 G2 H2 _114084 s lt2 P1 G1 f H1 g)). Qed.
Lemma lem8372086 {A B : Type'} : (@ex (A -> B)) = (@ex (A -> B)).
Proof. exact (eq_refl (@ex (A -> B))). Qed.
Lemma lem8372087 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (_114084 : type794 A P) (s : P -> A) (lt2 : type1402 A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (H1 : type549 A B) : (term2339 A B P P2 G2 H2 _114084 s lt2 P1 G1 f H1) = (term2415 A B P P2 G2 H2 _114084 s lt2 P1 G1 f H1).
Proof. exact (MK_COMB (@lem8372086 A B) (@lem8372085 A B P P2 G2 H2 _114084 s lt2 P1 G1 f H1)). Qed.
Lemma lem8372089 {A : Type'} (P : A -> Prop) (Q : A -> Prop) : (term379 A P Q) = (term378 A P Q).
Proof. exact (EQ_MP (@lem18971 A P Q) (@lem18970 A P Q)). Qed.
Lemma lem8372090 {A B : Type'} (P : type572 A B) (Q : type572 A B) : (term2416 A B P Q) = (term2417 A B P Q).
Proof. exact (@lem8372089 (A -> B) P Q). Qed.
Lemma lem8372091 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (_114084 : type794 A P) (s : P -> A) (lt2 : type1402 A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (H1 : type549 A B) : (term2418 A B P P2 G2 H2 _114084 s lt2 P1 G1 f H1) = (term2419 A B P P2 G2 H2 _114084 s lt2 P1 G1 f H1).
Proof. exact (@lem8372090 A B (term2420 A B P lt2 P2 G2 f H2 _114084 s) (term2421 A B P s lt2 P1 G1 f H1)). Qed.
Lemma lem8372092 {A B P : Type'} (lt2 : type1402 A) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (_114084 : type794 A P) (s : P -> A) : (term2422 A B P lt2 P2 G2 f H2 _114084 s g) = (term2407 A B P lt2 P2 G2 f H2 g _114084 s).
Proof. exact (eq_refl (term2422 A B P lt2 P2 G2 f H2 _114084 s g)). Qed.
Lemma lem8372093 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8372094 {A B P : Type'} (lt2 : type1402 A) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (_114084 : type794 A P) (s : P -> A) : (term2423 A B P lt2 P2 G2 f H2 _114084 s g) = (term2409 A B P lt2 P2 G2 f H2 g _114084 s).
Proof. exact (MK_COMB (@lem8372093) (@lem8372092 A B P lt2 P2 G2 f H2 g _114084 s)). Qed.
Lemma lem8372095 {A B P : Type'} (s : P -> A) (lt2 : type1402 A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (H1 : type549 A B) (g : A -> B) : (term2424 A B P s lt2 P1 G1 f H1 g) = (term2412 A B P s lt2 P1 G1 f H1 g).
Proof. exact (eq_refl (term2424 A B P s lt2 P1 G1 f H1 g)). Qed.
Lemma lem8372096 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (_114084 : type794 A P) (s : P -> A) (lt2 : type1402 A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (H1 : type549 A B) (g : A -> B) : (term2425 A B P P2 G2 H2 _114084 s lt2 P1 G1 f H1 g) = (term2413 A B P P2 G2 H2 _114084 s lt2 P1 G1 f H1 g).
Proof. exact (MK_COMB (@lem8372094 A B P lt2 P2 G2 f H2 g _114084 s) (@lem8372095 A B P s lt2 P1 G1 f H1 g)). Qed.
Lemma lem8372097 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (_114084 : type794 A P) (s : P -> A) (lt2 : type1402 A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (H1 : type549 A B) : (term2426 A B P P2 G2 H2 _114084 s lt2 P1 G1 f H1) = (term2414 A B P P2 G2 H2 _114084 s lt2 P1 G1 f H1).
Proof. exact (fun_ext (fun g : A -> B => @lem8372096 A B P P2 G2 H2 _114084 s lt2 P1 G1 f H1 g)). Qed.
Lemma lem8372098 {A B : Type'} : (@ex (A -> B)) = (@ex (A -> B)).
Proof. exact (eq_refl (@ex (A -> B))). Qed.
Lemma lem8372099 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (_114084 : type794 A P) (s : P -> A) (lt2 : type1402 A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (H1 : type549 A B) : (term2418 A B P P2 G2 H2 _114084 s lt2 P1 G1 f H1) = (term2415 A B P P2 G2 H2 _114084 s lt2 P1 G1 f H1).
Proof. exact (MK_COMB (@lem8372098 A B) (@lem8372097 A B P P2 G2 H2 _114084 s lt2 P1 G1 f H1)). Qed.
Lemma lem8372100 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8372101 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (_114084 : type794 A P) (s : P -> A) (lt2 : type1402 A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (H1 : type549 A B) : (term2427 A B P P2 G2 H2 _114084 s lt2 P1 G1 f H1) = (term2428 A B P P2 G2 H2 _114084 s lt2 P1 G1 f H1).
Proof. exact (MK_COMB (@lem8372100) (@lem8372099 A B P P2 G2 H2 _114084 s lt2 P1 G1 f H1)). Qed.
Lemma lem8372102 {A B P : Type'} (lt2 : type1402 A) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (_114084 : type794 A P) (s : P -> A) : (term2422 A B P lt2 P2 G2 f H2 _114084 s g) = (term2407 A B P lt2 P2 G2 f H2 g _114084 s).
Proof. exact (eq_refl (term2422 A B P lt2 P2 G2 f H2 _114084 s g)). Qed.
Lemma lem8372103 {A B P : Type'} (lt2 : type1402 A) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (_114084 : type794 A P) (s : P -> A) : (term2429 A B P lt2 P2 G2 f H2 _114084 s) = (term2420 A B P lt2 P2 G2 f H2 _114084 s).
Proof. exact (fun_ext (fun g : A -> B => @lem8372102 A B P lt2 P2 G2 f H2 g _114084 s)). Qed.
Lemma lem8372104 {A B : Type'} : (@ex (A -> B)) = (@ex (A -> B)).
Proof. exact (eq_refl (@ex (A -> B))). Qed.
Lemma lem8372105 {A B P : Type'} (lt2 : type1402 A) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (_114084 : type794 A P) (s : P -> A) : (term2430 A B P lt2 P2 G2 f H2 _114084 s) = (term2431 A B P lt2 P2 G2 f H2 _114084 s).
Proof. exact (MK_COMB (@lem8372104 A B) (@lem8372103 A B P lt2 P2 G2 f H2 _114084 s)). Qed.
Lemma lem8372106 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8372107 {A B P : Type'} (lt2 : type1402 A) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (_114084 : type794 A P) (s : P -> A) : (term2432 A B P lt2 P2 G2 f H2 _114084 s) = (term2433 A B P lt2 P2 G2 f H2 _114084 s).
Proof. exact (MK_COMB (@lem8372106) (@lem8372105 A B P lt2 P2 G2 f H2 _114084 s)). Qed.
Lemma lem8372108 {A B P : Type'} (s : P -> A) (lt2 : type1402 A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (H1 : type549 A B) (g : A -> B) : (term2424 A B P s lt2 P1 G1 f H1 g) = (term2412 A B P s lt2 P1 G1 f H1 g).
Proof. exact (eq_refl (term2424 A B P s lt2 P1 G1 f H1 g)). Qed.
Lemma lem8372109 {A B P : Type'} (s : P -> A) (lt2 : type1402 A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (H1 : type549 A B) : (term2434 A B P s lt2 P1 G1 f H1) = (term2421 A B P s lt2 P1 G1 f H1).
Proof. exact (fun_ext (fun g : A -> B => @lem8372108 A B P s lt2 P1 G1 f H1 g)). Qed.
Lemma lem8372110 {A B : Type'} : (@ex (A -> B)) = (@ex (A -> B)).
Proof. exact (eq_refl (@ex (A -> B))). Qed.
Lemma lem8372111 {A B P : Type'} (s : P -> A) (lt2 : type1402 A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (H1 : type549 A B) : (term2435 A B P s lt2 P1 G1 f H1) = (term2436 A B P s lt2 P1 G1 f H1).
Proof. exact (MK_COMB (@lem8372110 A B) (@lem8372109 A B P s lt2 P1 G1 f H1)). Qed.
Lemma lem8372112 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (_114084 : type794 A P) (s : P -> A) (lt2 : type1402 A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (H1 : type549 A B) : (term2419 A B P P2 G2 H2 _114084 s lt2 P1 G1 f H1) = (term2437 A B P P2 G2 H2 _114084 s lt2 P1 G1 f H1).
Proof. exact (MK_COMB (@lem8372107 A B P lt2 P2 G2 f H2 _114084 s) (@lem8372111 A B P s lt2 P1 G1 f H1)). Qed.
Lemma lem8372113 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (_114084 : type794 A P) (s : P -> A) (lt2 : type1402 A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (H1 : type549 A B) : ((term2418 A B P P2 G2 H2 _114084 s lt2 P1 G1 f H1) = (term2419 A B P P2 G2 H2 _114084 s lt2 P1 G1 f H1)) = ((term2415 A B P P2 G2 H2 _114084 s lt2 P1 G1 f H1) = (term2437 A B P P2 G2 H2 _114084 s lt2 P1 G1 f H1)).
Proof. exact (MK_COMB (@lem8372101 A B P P2 G2 H2 _114084 s lt2 P1 G1 f H1) (@lem8372112 A B P P2 G2 H2 _114084 s lt2 P1 G1 f H1)). Qed.
Lemma lem8372114 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (_114084 : type794 A P) (s : P -> A) (lt2 : type1402 A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (H1 : type549 A B) : (term2415 A B P P2 G2 H2 _114084 s lt2 P1 G1 f H1) = (term2437 A B P P2 G2 H2 _114084 s lt2 P1 G1 f H1).
Proof. exact (EQ_MP (@lem8372113 A B P P2 G2 H2 _114084 s lt2 P1 G1 f H1) (@lem8372091 A B P P2 G2 H2 _114084 s lt2 P1 G1 f H1)). Qed.
Lemma lem8372323 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (_114084 : type794 A P) (s : P -> A) (lt2 : type1402 A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (H1 : type549 A B) : (term2339 A B P P2 G2 H2 _114084 s lt2 P1 G1 f H1) = (term2437 A B P P2 G2 H2 _114084 s lt2 P1 G1 f H1).
Proof. exact (TRANS (@lem8372087 A B P P2 G2 H2 _114084 s lt2 P1 G1 f H1) (@lem8372114 A B P P2 G2 H2 _114084 s lt2 P1 G1 f H1)). Qed.
Lemma lem8372324 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (_114084 : type794 A P) (s : P -> A) (lt2 : type1402 A) (P1 : type551 A B) (G1 : type548 A B) (H1 : type549 A B) : (term2345 A B P P2 G2 H2 _114084 s lt2 P1 G1 H1) = (term2438 A B P P2 G2 H2 _114084 s lt2 P1 G1 H1).
Proof. exact (fun_ext (fun f : A -> B => @lem8372323 A B P P2 G2 H2 _114084 s lt2 P1 G1 f H1)). Qed.
Lemma lem8372325 {A B : Type'} : (@ex (A -> B)) = (@ex (A -> B)).
Proof. exact (eq_refl (@ex (A -> B))). Qed.
Lemma lem8372326 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (_114084 : type794 A P) (s : P -> A) (lt2 : type1402 A) (P1 : type551 A B) (G1 : type548 A B) (H1 : type549 A B) : (term2346 A B P P2 G2 H2 _114084 s lt2 P1 G1 H1) = (term2439 A B P P2 G2 H2 _114084 s lt2 P1 G1 H1).
Proof. exact (MK_COMB (@lem8372325 A B) (@lem8372324 A B P P2 G2 H2 _114084 s lt2 P1 G1 H1)). Qed.
Lemma lem8372328 {A : Type'} (P : A -> Prop) (Q : A -> Prop) : (term379 A P Q) = (term378 A P Q).
Proof. exact (EQ_MP (@lem18971 A P Q) (@lem18970 A P Q)). Qed.
Lemma lem8372329 {A B : Type'} (P : type572 A B) (Q : type572 A B) : (term2416 A B P Q) = (term2417 A B P Q).
Proof. exact (@lem8372328 (A -> B) P Q). Qed.
Lemma lem8372330 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (_114084 : type794 A P) (s : P -> A) (lt2 : type1402 A) (P1 : type551 A B) (G1 : type548 A B) (H1 : type549 A B) : (term2440 A B P P2 G2 H2 _114084 s lt2 P1 G1 H1) = (term2441 A B P P2 G2 H2 _114084 s lt2 P1 G1 H1).
Proof. exact (@lem8372329 A B (term2442 A B P lt2 P2 G2 H2 _114084 s) (term2443 A B P s lt2 P1 G1 H1)). Qed.
Lemma lem8372331 {A B P : Type'} (lt2 : type1402 A) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (_114084 : type794 A P) (s : P -> A) : (term2444 A B P lt2 P2 G2 H2 _114084 s f) = (term2431 A B P lt2 P2 G2 f H2 _114084 s).
Proof. exact (eq_refl (term2444 A B P lt2 P2 G2 H2 _114084 s f)). Qed.
Lemma lem8372332 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8372333 {A B P : Type'} (lt2 : type1402 A) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (_114084 : type794 A P) (s : P -> A) : (term2445 A B P lt2 P2 G2 H2 _114084 s f) = (term2433 A B P lt2 P2 G2 f H2 _114084 s).
Proof. exact (MK_COMB (@lem8372332) (@lem8372331 A B P lt2 P2 G2 f H2 _114084 s)). Qed.
Lemma lem8372334 {A B P : Type'} (s : P -> A) (lt2 : type1402 A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (H1 : type549 A B) : (term2446 A B P s lt2 P1 G1 H1 f) = (term2436 A B P s lt2 P1 G1 f H1).
Proof. exact (eq_refl (term2446 A B P s lt2 P1 G1 H1 f)). Qed.
Lemma lem8372335 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (_114084 : type794 A P) (s : P -> A) (lt2 : type1402 A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (H1 : type549 A B) : (term2447 A B P P2 G2 H2 _114084 s lt2 P1 G1 H1 f) = (term2437 A B P P2 G2 H2 _114084 s lt2 P1 G1 f H1).
Proof. exact (MK_COMB (@lem8372333 A B P lt2 P2 G2 f H2 _114084 s) (@lem8372334 A B P s lt2 P1 G1 f H1)). Qed.
Lemma lem8372336 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (_114084 : type794 A P) (s : P -> A) (lt2 : type1402 A) (P1 : type551 A B) (G1 : type548 A B) (H1 : type549 A B) : (term2448 A B P P2 G2 H2 _114084 s lt2 P1 G1 H1) = (term2438 A B P P2 G2 H2 _114084 s lt2 P1 G1 H1).
Proof. exact (fun_ext (fun f : A -> B => @lem8372335 A B P P2 G2 H2 _114084 s lt2 P1 G1 f H1)). Qed.
Lemma lem8372337 {A B : Type'} : (@ex (A -> B)) = (@ex (A -> B)).
Proof. exact (eq_refl (@ex (A -> B))). Qed.
Lemma lem8372338 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (_114084 : type794 A P) (s : P -> A) (lt2 : type1402 A) (P1 : type551 A B) (G1 : type548 A B) (H1 : type549 A B) : (term2440 A B P P2 G2 H2 _114084 s lt2 P1 G1 H1) = (term2439 A B P P2 G2 H2 _114084 s lt2 P1 G1 H1).
Proof. exact (MK_COMB (@lem8372337 A B) (@lem8372336 A B P P2 G2 H2 _114084 s lt2 P1 G1 H1)). Qed.
Lemma lem8372339 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8372340 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (_114084 : type794 A P) (s : P -> A) (lt2 : type1402 A) (P1 : type551 A B) (G1 : type548 A B) (H1 : type549 A B) : (term2449 A B P P2 G2 H2 _114084 s lt2 P1 G1 H1) = (term2450 A B P P2 G2 H2 _114084 s lt2 P1 G1 H1).
Proof. exact (MK_COMB (@lem8372339) (@lem8372338 A B P P2 G2 H2 _114084 s lt2 P1 G1 H1)). Qed.
Lemma lem8372341 {A B P : Type'} (lt2 : type1402 A) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (_114084 : type794 A P) (s : P -> A) : (term2444 A B P lt2 P2 G2 H2 _114084 s f) = (term2431 A B P lt2 P2 G2 f H2 _114084 s).
Proof. exact (eq_refl (term2444 A B P lt2 P2 G2 H2 _114084 s f)). Qed.
Lemma lem8372342 {A B P : Type'} (lt2 : type1402 A) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (_114084 : type794 A P) (s : P -> A) : (term2451 A B P lt2 P2 G2 H2 _114084 s) = (term2442 A B P lt2 P2 G2 H2 _114084 s).
Proof. exact (fun_ext (fun f : A -> B => @lem8372341 A B P lt2 P2 G2 f H2 _114084 s)). Qed.
Lemma lem8372343 {A B : Type'} : (@ex (A -> B)) = (@ex (A -> B)).
Proof. exact (eq_refl (@ex (A -> B))). Qed.
Lemma lem8372344 {A B P : Type'} (lt2 : type1402 A) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (_114084 : type794 A P) (s : P -> A) : (term2452 A B P lt2 P2 G2 H2 _114084 s) = (term2453 A B P lt2 P2 G2 H2 _114084 s).
Proof. exact (MK_COMB (@lem8372343 A B) (@lem8372342 A B P lt2 P2 G2 H2 _114084 s)). Qed.
Lemma lem8372345 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8372346 {A B P : Type'} (lt2 : type1402 A) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (_114084 : type794 A P) (s : P -> A) : (term2454 A B P lt2 P2 G2 H2 _114084 s) = (term2455 A B P lt2 P2 G2 H2 _114084 s).
Proof. exact (MK_COMB (@lem8372345) (@lem8372344 A B P lt2 P2 G2 H2 _114084 s)). Qed.
Lemma lem8372347 {A B P : Type'} (s : P -> A) (lt2 : type1402 A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (H1 : type549 A B) : (term2446 A B P s lt2 P1 G1 H1 f) = (term2436 A B P s lt2 P1 G1 f H1).
Proof. exact (eq_refl (term2446 A B P s lt2 P1 G1 H1 f)). Qed.
Lemma lem8372348 {A B P : Type'} (s : P -> A) (lt2 : type1402 A) (P1 : type551 A B) (G1 : type548 A B) (H1 : type549 A B) : (term2456 A B P s lt2 P1 G1 H1) = (term2443 A B P s lt2 P1 G1 H1).
Proof. exact (fun_ext (fun f : A -> B => @lem8372347 A B P s lt2 P1 G1 f H1)). Qed.
Lemma lem8372349 {A B : Type'} : (@ex (A -> B)) = (@ex (A -> B)).
Proof. exact (eq_refl (@ex (A -> B))). Qed.
Lemma lem8372350 {A B P : Type'} (s : P -> A) (lt2 : type1402 A) (P1 : type551 A B) (G1 : type548 A B) (H1 : type549 A B) : (term2457 A B P s lt2 P1 G1 H1) = (term2458 A B P s lt2 P1 G1 H1).
Proof. exact (MK_COMB (@lem8372349 A B) (@lem8372348 A B P s lt2 P1 G1 H1)). Qed.
Lemma lem8372351 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (_114084 : type794 A P) (s : P -> A) (lt2 : type1402 A) (P1 : type551 A B) (G1 : type548 A B) (H1 : type549 A B) : (term2441 A B P P2 G2 H2 _114084 s lt2 P1 G1 H1) = (term2459 A B P P2 G2 H2 _114084 s lt2 P1 G1 H1).
Proof. exact (MK_COMB (@lem8372346 A B P lt2 P2 G2 H2 _114084 s) (@lem8372350 A B P s lt2 P1 G1 H1)). Qed.
Lemma lem8372352 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (_114084 : type794 A P) (s : P -> A) (lt2 : type1402 A) (P1 : type551 A B) (G1 : type548 A B) (H1 : type549 A B) : ((term2440 A B P P2 G2 H2 _114084 s lt2 P1 G1 H1) = (term2441 A B P P2 G2 H2 _114084 s lt2 P1 G1 H1)) = ((term2439 A B P P2 G2 H2 _114084 s lt2 P1 G1 H1) = (term2459 A B P P2 G2 H2 _114084 s lt2 P1 G1 H1)).
Proof. exact (MK_COMB (@lem8372340 A B P P2 G2 H2 _114084 s lt2 P1 G1 H1) (@lem8372351 A B P P2 G2 H2 _114084 s lt2 P1 G1 H1)). Qed.
Lemma lem8372353 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (_114084 : type794 A P) (s : P -> A) (lt2 : type1402 A) (P1 : type551 A B) (G1 : type548 A B) (H1 : type549 A B) : (term2439 A B P P2 G2 H2 _114084 s lt2 P1 G1 H1) = (term2459 A B P P2 G2 H2 _114084 s lt2 P1 G1 H1).
Proof. exact (EQ_MP (@lem8372352 A B P P2 G2 H2 _114084 s lt2 P1 G1 H1) (@lem8372330 A B P P2 G2 H2 _114084 s lt2 P1 G1 H1)). Qed.
Lemma lem8372570 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (_114084 : type794 A P) (s : P -> A) (lt2 : type1402 A) (P1 : type551 A B) (G1 : type548 A B) (H1 : type549 A B) : (term2346 A B P P2 G2 H2 _114084 s lt2 P1 G1 H1) = (term2459 A B P P2 G2 H2 _114084 s lt2 P1 G1 H1).
Proof. exact (TRANS (@lem8372326 A B P P2 G2 H2 _114084 s lt2 P1 G1 H1) (@lem8372353 A B P P2 G2 H2 _114084 s lt2 P1 G1 H1)). Qed.
Lemma lem8372571 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8372572 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (_114084 : type794 A P) (s : P -> A) (lt2 : type1402 A) (P1 : type551 A B) (G1 : type548 A B) (H1 : type549 A B) : (term2391 A B P P2 G2 H2 _114084 s lt2 P1 G1 H1) = (term2460 A B P P2 G2 H2 _114084 s lt2 P1 G1 H1).
Proof. exact (MK_COMB (@lem8372571) (@lem8372570 A B P P2 G2 H2 _114084 s lt2 P1 G1 H1)). Qed.
Lemma lem8372578 {A : Type'} (P : A -> Prop) (Q : A -> Prop) : (term379 A P Q) = (term378 A P Q).
Proof. exact (EQ_MP (@lem18971 A P Q) (@lem18970 A P Q)). Qed.
Lemma lem8372579 {A : Type'} (P : A -> Prop) (Q : A -> Prop) : (term379 A P Q) = (term378 A P Q).
Proof. exact (@lem8372578 A P Q). Qed.
Lemma lem8372580 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (_114084 : type794 A P) (s : P -> A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (lt2 : type1402 A) : (term2461 A B P P2 G2 _114084 s P1 G1 f lt2) = (term2462 A B P P2 G2 _114084 s P1 G1 f lt2).
Proof. exact (@lem8372579 A (term2463 A B P P2 G2 f _114084 s lt2) (term2464 A B P s P1 G1 f lt2)). Qed.
Lemma lem8372581 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (_114084 : type794 A P) (s : P -> A) (lt2 : type1402 A) (x : A) : (term2465 A B P P2 G2 f _114084 s lt2 x) = (term2357 A B P P2 G2 f _114084 s lt2 x).
Proof. exact (eq_refl (term2465 A B P P2 G2 f _114084 s lt2 x)). Qed.
Lemma lem8372582 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8372583 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (_114084 : type794 A P) (s : P -> A) (lt2 : type1402 A) (x : A) : (term2466 A B P P2 G2 f _114084 s lt2 x) = (term2372 A B P P2 G2 f _114084 s lt2 x).
Proof. exact (MK_COMB (@lem8372582) (@lem8372581 A B P P2 G2 f _114084 s lt2 x)). Qed.
Lemma lem8372584 {A B P : Type'} (s : P -> A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (lt2 : type1402 A) (x : A) : (term2467 A B P s P1 G1 f lt2 x) = (term2369 A B P s P1 G1 f lt2 x).
Proof. exact (eq_refl (term2467 A B P s P1 G1 f lt2 x)). Qed.
Lemma lem8372585 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (_114084 : type794 A P) (s : P -> A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (lt2 : type1402 A) (x : A) : (term2468 A B P P2 G2 _114084 s P1 G1 f lt2 x) = (term2374 A B P P2 G2 _114084 s P1 G1 f lt2 x).
Proof. exact (MK_COMB (@lem8372583 A B P P2 G2 f _114084 s lt2 x) (@lem8372584 A B P s P1 G1 f lt2 x)). Qed.
Lemma lem8372586 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (_114084 : type794 A P) (s : P -> A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (lt2 : type1402 A) : (term2469 A B P P2 G2 _114084 s P1 G1 f lt2) = (term2381 A B P P2 G2 _114084 s P1 G1 f lt2).
Proof. exact (fun_ext (fun x : A => @lem8372585 A B P P2 G2 _114084 s P1 G1 f lt2 x)). Qed.
Lemma lem8372587 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem8372588 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (_114084 : type794 A P) (s : P -> A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (lt2 : type1402 A) : (term2461 A B P P2 G2 _114084 s P1 G1 f lt2) = (term2382 A B P P2 G2 _114084 s P1 G1 f lt2).
Proof. exact (MK_COMB (@lem8372587 A) (@lem8372586 A B P P2 G2 _114084 s P1 G1 f lt2)). Qed.
Lemma lem8372589 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8372590 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (_114084 : type794 A P) (s : P -> A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (lt2 : type1402 A) : (term2470 A B P P2 G2 _114084 s P1 G1 f lt2) = (term2471 A B P P2 G2 _114084 s P1 G1 f lt2).
Proof. exact (MK_COMB (@lem8372589) (@lem8372588 A B P P2 G2 _114084 s P1 G1 f lt2)). Qed.
Lemma lem8372591 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (_114084 : type794 A P) (s : P -> A) (lt2 : type1402 A) (x : A) : (term2465 A B P P2 G2 f _114084 s lt2 x) = (term2357 A B P P2 G2 f _114084 s lt2 x).
Proof. exact (eq_refl (term2465 A B P P2 G2 f _114084 s lt2 x)). Qed.
Lemma lem8372592 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (_114084 : type794 A P) (s : P -> A) (lt2 : type1402 A) : (term2472 A B P P2 G2 f _114084 s lt2) = (term2463 A B P P2 G2 f _114084 s lt2).
Proof. exact (fun_ext (fun x : A => @lem8372591 A B P P2 G2 f _114084 s lt2 x)). Qed.
Lemma lem8372593 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem8372594 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (_114084 : type794 A P) (s : P -> A) (lt2 : type1402 A) : (term2473 A B P P2 G2 f _114084 s lt2) = (term2474 A B P P2 G2 f _114084 s lt2).
Proof. exact (MK_COMB (@lem8372593 A) (@lem8372592 A B P P2 G2 f _114084 s lt2)). Qed.
Lemma lem8372595 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8372596 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (_114084 : type794 A P) (s : P -> A) (lt2 : type1402 A) : (term2475 A B P P2 G2 f _114084 s lt2) = (term2476 A B P P2 G2 f _114084 s lt2).
Proof. exact (MK_COMB (@lem8372595) (@lem8372594 A B P P2 G2 f _114084 s lt2)). Qed.
Lemma lem8372597 {A B P : Type'} (s : P -> A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (lt2 : type1402 A) (x : A) : (term2467 A B P s P1 G1 f lt2 x) = (term2369 A B P s P1 G1 f lt2 x).
Proof. exact (eq_refl (term2467 A B P s P1 G1 f lt2 x)). Qed.
Lemma lem8372598 {A B P : Type'} (s : P -> A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (lt2 : type1402 A) : (term2477 A B P s P1 G1 f lt2) = (term2464 A B P s P1 G1 f lt2).
Proof. exact (fun_ext (fun x : A => @lem8372597 A B P s P1 G1 f lt2 x)). Qed.
Lemma lem8372599 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem8372600 {A B P : Type'} (s : P -> A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (lt2 : type1402 A) : (term2478 A B P s P1 G1 f lt2) = (term2479 A B P s P1 G1 f lt2).
Proof. exact (MK_COMB (@lem8372599 A) (@lem8372598 A B P s P1 G1 f lt2)). Qed.
Lemma lem8372601 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (_114084 : type794 A P) (s : P -> A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (lt2 : type1402 A) : (term2462 A B P P2 G2 _114084 s P1 G1 f lt2) = (term2480 A B P P2 G2 _114084 s P1 G1 f lt2).
Proof. exact (MK_COMB (@lem8372596 A B P P2 G2 f _114084 s lt2) (@lem8372600 A B P s P1 G1 f lt2)). Qed.
Lemma lem8372602 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (_114084 : type794 A P) (s : P -> A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (lt2 : type1402 A) : ((term2461 A B P P2 G2 _114084 s P1 G1 f lt2) = (term2462 A B P P2 G2 _114084 s P1 G1 f lt2)) = ((term2382 A B P P2 G2 _114084 s P1 G1 f lt2) = (term2480 A B P P2 G2 _114084 s P1 G1 f lt2)).
Proof. exact (MK_COMB (@lem8372590 A B P P2 G2 _114084 s P1 G1 f lt2) (@lem8372601 A B P P2 G2 _114084 s P1 G1 f lt2)). Qed.
Lemma lem8372603 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (_114084 : type794 A P) (s : P -> A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (lt2 : type1402 A) : (term2382 A B P P2 G2 _114084 s P1 G1 f lt2) = (term2480 A B P P2 G2 _114084 s P1 G1 f lt2).
Proof. exact (EQ_MP (@lem8372602 A B P P2 G2 _114084 s P1 G1 f lt2) (@lem8372580 A B P P2 G2 _114084 s P1 G1 f lt2)). Qed.
Lemma lem8372804 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (_114084 : type794 A P) (s : P -> A) (P1 : type551 A B) (G1 : type548 A B) (lt2 : type1402 A) : (term2388 A B P P2 G2 _114084 s P1 G1 lt2) = (term2481 A B P P2 G2 _114084 s P1 G1 lt2).
Proof. exact (fun_ext (fun f : A -> B => @lem8372603 A B P P2 G2 _114084 s P1 G1 f lt2)). Qed.
Lemma lem8372805 {A B : Type'} : (@ex (A -> B)) = (@ex (A -> B)).
Proof. exact (eq_refl (@ex (A -> B))). Qed.
Lemma lem8372806 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (_114084 : type794 A P) (s : P -> A) (P1 : type551 A B) (G1 : type548 A B) (lt2 : type1402 A) : (term2389 A B P P2 G2 _114084 s P1 G1 lt2) = (term2482 A B P P2 G2 _114084 s P1 G1 lt2).
Proof. exact (MK_COMB (@lem8372805 A B) (@lem8372804 A B P P2 G2 _114084 s P1 G1 lt2)). Qed.
Lemma lem8372808 {A : Type'} (P : A -> Prop) (Q : A -> Prop) : (term379 A P Q) = (term378 A P Q).
Proof. exact (EQ_MP (@lem18971 A P Q) (@lem18970 A P Q)). Qed.
Lemma lem8372809 {A B : Type'} (P : type572 A B) (Q : type572 A B) : (term2416 A B P Q) = (term2417 A B P Q).
Proof. exact (@lem8372808 (A -> B) P Q). Qed.
Lemma lem8372810 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (_114084 : type794 A P) (s : P -> A) (P1 : type551 A B) (G1 : type548 A B) (lt2 : type1402 A) : (term2483 A B P P2 G2 _114084 s P1 G1 lt2) = (term2484 A B P P2 G2 _114084 s P1 G1 lt2).
Proof. exact (@lem8372809 A B (term2485 A B P P2 G2 _114084 s lt2) (term2486 A B P s P1 G1 lt2)). Qed.
Lemma lem8372811 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (_114084 : type794 A P) (s : P -> A) (lt2 : type1402 A) : (term2487 A B P P2 G2 _114084 s lt2 f) = (term2474 A B P P2 G2 f _114084 s lt2).
Proof. exact (eq_refl (term2487 A B P P2 G2 _114084 s lt2 f)). Qed.
Lemma lem8372812 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8372813 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (_114084 : type794 A P) (s : P -> A) (lt2 : type1402 A) : (term2488 A B P P2 G2 _114084 s lt2 f) = (term2476 A B P P2 G2 f _114084 s lt2).
Proof. exact (MK_COMB (@lem8372812) (@lem8372811 A B P P2 G2 f _114084 s lt2)). Qed.
Lemma lem8372814 {A B P : Type'} (s : P -> A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (lt2 : type1402 A) : (term2489 A B P s P1 G1 lt2 f) = (term2479 A B P s P1 G1 f lt2).
Proof. exact (eq_refl (term2489 A B P s P1 G1 lt2 f)). Qed.
Lemma lem8372815 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (_114084 : type794 A P) (s : P -> A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (lt2 : type1402 A) : (term2490 A B P P2 G2 _114084 s P1 G1 lt2 f) = (term2480 A B P P2 G2 _114084 s P1 G1 f lt2).
Proof. exact (MK_COMB (@lem8372813 A B P P2 G2 f _114084 s lt2) (@lem8372814 A B P s P1 G1 f lt2)). Qed.
Lemma lem8372816 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (_114084 : type794 A P) (s : P -> A) (P1 : type551 A B) (G1 : type548 A B) (lt2 : type1402 A) : (term2491 A B P P2 G2 _114084 s P1 G1 lt2) = (term2481 A B P P2 G2 _114084 s P1 G1 lt2).
Proof. exact (fun_ext (fun f : A -> B => @lem8372815 A B P P2 G2 _114084 s P1 G1 f lt2)). Qed.
Lemma lem8372817 {A B : Type'} : (@ex (A -> B)) = (@ex (A -> B)).
Proof. exact (eq_refl (@ex (A -> B))). Qed.
Lemma lem8372818 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (_114084 : type794 A P) (s : P -> A) (P1 : type551 A B) (G1 : type548 A B) (lt2 : type1402 A) : (term2483 A B P P2 G2 _114084 s P1 G1 lt2) = (term2482 A B P P2 G2 _114084 s P1 G1 lt2).
Proof. exact (MK_COMB (@lem8372817 A B) (@lem8372816 A B P P2 G2 _114084 s P1 G1 lt2)). Qed.
Lemma lem8372819 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8372820 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (_114084 : type794 A P) (s : P -> A) (P1 : type551 A B) (G1 : type548 A B) (lt2 : type1402 A) : (term2492 A B P P2 G2 _114084 s P1 G1 lt2) = (term2493 A B P P2 G2 _114084 s P1 G1 lt2).
Proof. exact (MK_COMB (@lem8372819) (@lem8372818 A B P P2 G2 _114084 s P1 G1 lt2)). Qed.
Lemma lem8372821 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (_114084 : type794 A P) (s : P -> A) (lt2 : type1402 A) : (term2487 A B P P2 G2 _114084 s lt2 f) = (term2474 A B P P2 G2 f _114084 s lt2).
Proof. exact (eq_refl (term2487 A B P P2 G2 _114084 s lt2 f)). Qed.
Lemma lem8372822 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (_114084 : type794 A P) (s : P -> A) (lt2 : type1402 A) : (term2494 A B P P2 G2 _114084 s lt2) = (term2485 A B P P2 G2 _114084 s lt2).
Proof. exact (fun_ext (fun f : A -> B => @lem8372821 A B P P2 G2 f _114084 s lt2)). Qed.
Lemma lem8372823 {A B : Type'} : (@ex (A -> B)) = (@ex (A -> B)).
Proof. exact (eq_refl (@ex (A -> B))). Qed.
Lemma lem8372824 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (_114084 : type794 A P) (s : P -> A) (lt2 : type1402 A) : (term2495 A B P P2 G2 _114084 s lt2) = (term2496 A B P P2 G2 _114084 s lt2).
Proof. exact (MK_COMB (@lem8372823 A B) (@lem8372822 A B P P2 G2 _114084 s lt2)). Qed.
Lemma lem8372825 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8372826 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (_114084 : type794 A P) (s : P -> A) (lt2 : type1402 A) : (term2497 A B P P2 G2 _114084 s lt2) = (term2498 A B P P2 G2 _114084 s lt2).
Proof. exact (MK_COMB (@lem8372825) (@lem8372824 A B P P2 G2 _114084 s lt2)). Qed.
Lemma lem8372827 {A B P : Type'} (s : P -> A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (lt2 : type1402 A) : (term2489 A B P s P1 G1 lt2 f) = (term2479 A B P s P1 G1 f lt2).
Proof. exact (eq_refl (term2489 A B P s P1 G1 lt2 f)). Qed.
Lemma lem8372828 {A B P : Type'} (s : P -> A) (P1 : type551 A B) (G1 : type548 A B) (lt2 : type1402 A) : (term2499 A B P s P1 G1 lt2) = (term2486 A B P s P1 G1 lt2).
Proof. exact (fun_ext (fun f : A -> B => @lem8372827 A B P s P1 G1 f lt2)). Qed.
Lemma lem8372829 {A B : Type'} : (@ex (A -> B)) = (@ex (A -> B)).
Proof. exact (eq_refl (@ex (A -> B))). Qed.
Lemma lem8372830 {A B P : Type'} (s : P -> A) (P1 : type551 A B) (G1 : type548 A B) (lt2 : type1402 A) : (term2500 A B P s P1 G1 lt2) = (term2501 A B P s P1 G1 lt2).
Proof. exact (MK_COMB (@lem8372829 A B) (@lem8372828 A B P s P1 G1 lt2)). Qed.
Lemma lem8372831 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (_114084 : type794 A P) (s : P -> A) (P1 : type551 A B) (G1 : type548 A B) (lt2 : type1402 A) : (term2484 A B P P2 G2 _114084 s P1 G1 lt2) = (term2502 A B P P2 G2 _114084 s P1 G1 lt2).
Proof. exact (MK_COMB (@lem8372826 A B P P2 G2 _114084 s lt2) (@lem8372830 A B P s P1 G1 lt2)). Qed.
Lemma lem8372832 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (_114084 : type794 A P) (s : P -> A) (P1 : type551 A B) (G1 : type548 A B) (lt2 : type1402 A) : ((term2483 A B P P2 G2 _114084 s P1 G1 lt2) = (term2484 A B P P2 G2 _114084 s P1 G1 lt2)) = ((term2482 A B P P2 G2 _114084 s P1 G1 lt2) = (term2502 A B P P2 G2 _114084 s P1 G1 lt2)).
Proof. exact (MK_COMB (@lem8372820 A B P P2 G2 _114084 s P1 G1 lt2) (@lem8372831 A B P P2 G2 _114084 s P1 G1 lt2)). Qed.
Lemma lem8372833 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (_114084 : type794 A P) (s : P -> A) (P1 : type551 A B) (G1 : type548 A B) (lt2 : type1402 A) : (term2482 A B P P2 G2 _114084 s P1 G1 lt2) = (term2502 A B P P2 G2 _114084 s P1 G1 lt2).
Proof. exact (EQ_MP (@lem8372832 A B P P2 G2 _114084 s P1 G1 lt2) (@lem8372810 A B P P2 G2 _114084 s P1 G1 lt2)). Qed.
Lemma lem8373042 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (_114084 : type794 A P) (s : P -> A) (P1 : type551 A B) (G1 : type548 A B) (lt2 : type1402 A) : (term2389 A B P P2 G2 _114084 s P1 G1 lt2) = (term2502 A B P P2 G2 _114084 s P1 G1 lt2).
Proof. exact (TRANS (@lem8372806 A B P P2 G2 _114084 s P1 G1 lt2) (@lem8372833 A B P P2 G2 _114084 s P1 G1 lt2)). Qed.
Lemma lem8373043 {A B P : Type'} (H2 : type558 A B P) (H1 : type549 A B) (P2 : type560 A B P) (G2 : type557 A B P) (_114084 : type794 A P) (s : P -> A) (P1 : type551 A B) (G1 : type548 A B) (lt2 : type1402 A) : (term2393 A B P H2 H1 P2 G2 _114084 s P1 G1 lt2) = (term2503 A B P H2 H1 P2 G2 _114084 s P1 G1 lt2).
Proof. exact (MK_COMB (@lem8372572 A B P P2 G2 H2 _114084 s lt2 P1 G1 H1) (@lem8373042 A B P P2 G2 _114084 s P1 G1 lt2)). Qed.
Lemma lem8373045 {A : Type'} (P : A -> Prop) (Q : Prop) : (term2504 A P Q) = (term2505 A P Q).
Proof. exact (EQ_MP (@lem18923 A P Q) (@lem18922 A P Q)). Qed.
Lemma lem8373046 {P : Type'} (P' : P -> Prop) (Q : Prop) : (term2504 P P' Q) = (term2505 P P' Q).
Proof. exact (@lem8373045 P P' Q). Qed.
Lemma lem8373047 {A B P : Type'} (lt2 : type1402 A) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (_114084 : type794 A P) (s : P -> A) (x : A) : (term2506 A B P lt2 P2 G2 f H2 g _114084 s x) = (term2507 A B P lt2 P2 G2 f H2 g _114084 s x).
Proof. exact (@lem8373046 P (term1454 A P s x) (term2290 A B P lt2 P2 G2 f H2 g _114084 s x)). Qed.
Lemma lem8373048 {A P : Type'} (s : P -> A) (y : P) (x : A) : (term1457 A P s x y) = ((s y) = x).
Proof. exact (eq_refl (term1457 A P s x y)). Qed.
Lemma lem8373049 {A P : Type'} (s : P -> A) (x : A) : (term2508 A P s x) = (term1454 A P s x).
Proof. exact (fun_ext (fun y : P => @lem8373048 A P s y x)). Qed.
Lemma lem8373050 {P : Type'} : (@ex P) = (@ex P).
Proof. exact (eq_refl (@ex P)). Qed.
Lemma lem8373051 {A P : Type'} (s : P -> A) (x : A) : (term2509 A P s x) = (term1773 A P s x).
Proof. exact (MK_COMB (@lem8373050 P) (@lem8373049 A P s x)). Qed.
Lemma lem8373052 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8373053 {A P : Type'} (s : P -> A) (x : A) : (term2510 A P s x) = (term2293 A P s x).
Proof. exact (MK_COMB (@lem8373052) (@lem8373051 A P s x)). Qed.
Lemma lem8373054 {A B P : Type'} (lt2 : type1402 A) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (_114084 : type794 A P) (s : P -> A) (x : A) : (term2290 A B P lt2 P2 G2 f H2 g _114084 s x) = (term2290 A B P lt2 P2 G2 f H2 g _114084 s x).
Proof. exact (eq_refl (term2290 A B P lt2 P2 G2 f H2 g _114084 s x)). Qed.
Lemma lem8373055 {A B P : Type'} (lt2 : type1402 A) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (_114084 : type794 A P) (s : P -> A) (x : A) : (term2506 A B P lt2 P2 G2 f H2 g _114084 s x) = (term2295 A B P lt2 P2 G2 f H2 g _114084 s x).
Proof. exact (MK_COMB (@lem8373053 A P s x) (@lem8373054 A B P lt2 P2 G2 f H2 g _114084 s x)). Qed.
Lemma lem8373056 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8373057 {A B P : Type'} (lt2 : type1402 A) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (_114084 : type794 A P) (s : P -> A) (x : A) : (term2511 A B P lt2 P2 G2 f H2 g _114084 s x) = (term2512 A B P lt2 P2 G2 f H2 g _114084 s x).
Proof. exact (MK_COMB (@lem8373056) (@lem8373055 A B P lt2 P2 G2 f H2 g _114084 s x)). Qed.
Lemma lem8373058 {A P : Type'} (s : P -> A) (y : P) (x : A) : (term1457 A P s x y) = ((s y) = x).
Proof. exact (eq_refl (term1457 A P s x y)). Qed.
Lemma lem8373059 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8373060 {A P : Type'} (s : P -> A) (y : P) (x : A) : (term2513 A P s x y) = (term2514 A P s y x).
Proof. exact (MK_COMB (@lem8373059) (@lem8373058 A P s y x)). Qed.
Lemma lem8373061 {A B P : Type'} (lt2 : type1402 A) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (_114084 : type794 A P) (s : P -> A) (x : A) : (term2290 A B P lt2 P2 G2 f H2 g _114084 s x) = (term2290 A B P lt2 P2 G2 f H2 g _114084 s x).
Proof. exact (eq_refl (term2290 A B P lt2 P2 G2 f H2 g _114084 s x)). Qed.
Lemma lem8373062 {A B P : Type'} (y : P) (lt2 : type1402 A) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (_114084 : type794 A P) (s : P -> A) (x : A) : (term2515 A B P y lt2 P2 G2 f H2 g _114084 s x) = (term2516 A B P y lt2 P2 G2 f H2 g _114084 s x).
Proof. exact (MK_COMB (@lem8373060 A P s y x) (@lem8373061 A B P lt2 P2 G2 f H2 g _114084 s x)). Qed.
Lemma lem8373063 {A B P : Type'} (lt2 : type1402 A) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (_114084 : type794 A P) (s : P -> A) (x : A) : (term2517 A B P lt2 P2 G2 f H2 g _114084 s x) = (term2518 A B P lt2 P2 G2 f H2 g _114084 s x).
Proof. exact (fun_ext (fun y : P => @lem8373062 A B P y lt2 P2 G2 f H2 g _114084 s x)). Qed.
Lemma lem8373064 {P : Type'} : (@ex P) = (@ex P).
Proof. exact (eq_refl (@ex P)). Qed.
Lemma lem8373065 {A B P : Type'} (lt2 : type1402 A) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (_114084 : type794 A P) (s : P -> A) (x : A) : (term2507 A B P lt2 P2 G2 f H2 g _114084 s x) = (term2519 A B P lt2 P2 G2 f H2 g _114084 s x).
Proof. exact (MK_COMB (@lem8373064 P) (@lem8373063 A B P lt2 P2 G2 f H2 g _114084 s x)). Qed.
Lemma lem8373066 {A B P : Type'} (lt2 : type1402 A) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (_114084 : type794 A P) (s : P -> A) (x : A) : ((term2506 A B P lt2 P2 G2 f H2 g _114084 s x) = (term2507 A B P lt2 P2 G2 f H2 g _114084 s x)) = ((term2295 A B P lt2 P2 G2 f H2 g _114084 s x) = (term2519 A B P lt2 P2 G2 f H2 g _114084 s x)).
Proof. exact (MK_COMB (@lem8373057 A B P lt2 P2 G2 f H2 g _114084 s x) (@lem8373065 A B P lt2 P2 G2 f H2 g _114084 s x)). Qed.
Lemma lem8373067 {A B P : Type'} (lt2 : type1402 A) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (_114084 : type794 A P) (s : P -> A) (x : A) : (term2295 A B P lt2 P2 G2 f H2 g _114084 s x) = (term2519 A B P lt2 P2 G2 f H2 g _114084 s x).
Proof. exact (EQ_MP (@lem8373066 A B P lt2 P2 G2 f H2 g _114084 s x) (@lem8373047 A B P lt2 P2 G2 f H2 g _114084 s x)). Qed.
Lemma lem8373068 {A B P : Type'} (lt2 : type1402 A) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (_114084 : type794 A P) (s : P -> A) : (term2396 A B P lt2 P2 G2 f H2 g _114084 s) = (term2520 A B P lt2 P2 G2 f H2 g _114084 s).
Proof. exact (fun_ext (fun x : A => @lem8373067 A B P lt2 P2 G2 f H2 g _114084 s x)). Qed.
Lemma lem8373069 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem8373070 {A B P : Type'} (lt2 : type1402 A) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (_114084 : type794 A P) (s : P -> A) : (term2407 A B P lt2 P2 G2 f H2 g _114084 s) = (term2521 A B P lt2 P2 G2 f H2 g _114084 s).
Proof. exact (MK_COMB (@lem8373069 A) (@lem8373068 A B P lt2 P2 G2 f H2 g _114084 s)). Qed.
Lemma lem8373071 {A B P : Type'} (lt2 : type1402 A) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (_114084 : type794 A P) (s : P -> A) : (term2420 A B P lt2 P2 G2 f H2 _114084 s) = (term2522 A B P lt2 P2 G2 f H2 _114084 s).
Proof. exact (fun_ext (fun g : A -> B => @lem8373070 A B P lt2 P2 G2 f H2 g _114084 s)). Qed.
Lemma lem8373072 {A B : Type'} : (@ex (A -> B)) = (@ex (A -> B)).
Proof. exact (eq_refl (@ex (A -> B))). Qed.
Lemma lem8373073 {A B P : Type'} (lt2 : type1402 A) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (_114084 : type794 A P) (s : P -> A) : (term2431 A B P lt2 P2 G2 f H2 _114084 s) = (term2523 A B P lt2 P2 G2 f H2 _114084 s).
Proof. exact (MK_COMB (@lem8373072 A B) (@lem8373071 A B P lt2 P2 G2 f H2 _114084 s)). Qed.
Lemma lem8373074 {A B P : Type'} (lt2 : type1402 A) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (_114084 : type794 A P) (s : P -> A) : (term2442 A B P lt2 P2 G2 H2 _114084 s) = (term2524 A B P lt2 P2 G2 H2 _114084 s).
Proof. exact (fun_ext (fun f : A -> B => @lem8373073 A B P lt2 P2 G2 f H2 _114084 s)). Qed.
Lemma lem8373075 {A B : Type'} : (@ex (A -> B)) = (@ex (A -> B)).
Proof. exact (eq_refl (@ex (A -> B))). Qed.
Lemma lem8373076 {A B P : Type'} (lt2 : type1402 A) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (_114084 : type794 A P) (s : P -> A) : (term2453 A B P lt2 P2 G2 H2 _114084 s) = (term2525 A B P lt2 P2 G2 H2 _114084 s).
Proof. exact (MK_COMB (@lem8373075 A B) (@lem8373074 A B P lt2 P2 G2 H2 _114084 s)). Qed.
Lemma lem8373077 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8373078 {A B P : Type'} (lt2 : type1402 A) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (_114084 : type794 A P) (s : P -> A) : (term2455 A B P lt2 P2 G2 H2 _114084 s) = (term2526 A B P lt2 P2 G2 H2 _114084 s).
Proof. exact (MK_COMB (@lem8373077) (@lem8373076 A B P lt2 P2 G2 H2 _114084 s)). Qed.
Lemma lem8373079 {A B P : Type'} (s : P -> A) (lt2 : type1402 A) (P1 : type551 A B) (G1 : type548 A B) (H1 : type549 A B) : (term2458 A B P s lt2 P1 G1 H1) = (term2458 A B P s lt2 P1 G1 H1).
Proof. exact (eq_refl (term2458 A B P s lt2 P1 G1 H1)). Qed.
Lemma lem8373080 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (_114084 : type794 A P) (s : P -> A) (lt2 : type1402 A) (P1 : type551 A B) (G1 : type548 A B) (H1 : type549 A B) : (term2459 A B P P2 G2 H2 _114084 s lt2 P1 G1 H1) = (term2527 A B P P2 G2 H2 _114084 s lt2 P1 G1 H1).
Proof. exact (MK_COMB (@lem8373078 A B P lt2 P2 G2 H2 _114084 s) (@lem8373079 A B P s lt2 P1 G1 H1)). Qed.
Lemma lem8373082 {A : Type'} (P : A -> Prop) (Q : A -> Prop) : (term378 A P Q) = (term379 A P Q).
Proof. exact (EQ_MP (@lem18917 A P Q) (@lem18916 A P Q)). Qed.
Lemma lem8373083 {A B : Type'} (P : type572 A B) (Q : type572 A B) : (term2417 A B P Q) = (term2416 A B P Q).
Proof. exact (@lem8373082 (A -> B) P Q). Qed.
Lemma lem8373084 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (_114084 : type794 A P) (s : P -> A) (lt2 : type1402 A) (P1 : type551 A B) (G1 : type548 A B) (H1 : type549 A B) : (term2528 A B P P2 G2 H2 _114084 s lt2 P1 G1 H1) = (term2529 A B P P2 G2 H2 _114084 s lt2 P1 G1 H1).
Proof. exact (@lem8373083 A B (term2524 A B P lt2 P2 G2 H2 _114084 s) (term2443 A B P s lt2 P1 G1 H1)). Qed.
Lemma lem8373085 {A B P : Type'} (lt2 : type1402 A) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (_114084 : type794 A P) (s : P -> A) : (term2530 A B P lt2 P2 G2 H2 _114084 s f) = (term2523 A B P lt2 P2 G2 f H2 _114084 s).
Proof. exact (eq_refl (term2530 A B P lt2 P2 G2 H2 _114084 s f)). Qed.
Lemma lem8373086 {A B P : Type'} (lt2 : type1402 A) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (_114084 : type794 A P) (s : P -> A) : (term2531 A B P lt2 P2 G2 H2 _114084 s) = (term2524 A B P lt2 P2 G2 H2 _114084 s).
Proof. exact (fun_ext (fun f : A -> B => @lem8373085 A B P lt2 P2 G2 f H2 _114084 s)). Qed.
Lemma lem8373087 {A B : Type'} : (@ex (A -> B)) = (@ex (A -> B)).
Proof. exact (eq_refl (@ex (A -> B))). Qed.
Lemma lem8373088 {A B P : Type'} (lt2 : type1402 A) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (_114084 : type794 A P) (s : P -> A) : (term2532 A B P lt2 P2 G2 H2 _114084 s) = (term2525 A B P lt2 P2 G2 H2 _114084 s).
Proof. exact (MK_COMB (@lem8373087 A B) (@lem8373086 A B P lt2 P2 G2 H2 _114084 s)). Qed.
Lemma lem8373089 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8373090 {A B P : Type'} (lt2 : type1402 A) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (_114084 : type794 A P) (s : P -> A) : (term2533 A B P lt2 P2 G2 H2 _114084 s) = (term2526 A B P lt2 P2 G2 H2 _114084 s).
Proof. exact (MK_COMB (@lem8373089) (@lem8373088 A B P lt2 P2 G2 H2 _114084 s)). Qed.
Lemma lem8373091 {A B P : Type'} (s : P -> A) (lt2 : type1402 A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (H1 : type549 A B) : (term2446 A B P s lt2 P1 G1 H1 f) = (term2436 A B P s lt2 P1 G1 f H1).
Proof. exact (eq_refl (term2446 A B P s lt2 P1 G1 H1 f)). Qed.
Lemma lem8373092 {A B P : Type'} (s : P -> A) (lt2 : type1402 A) (P1 : type551 A B) (G1 : type548 A B) (H1 : type549 A B) : (term2456 A B P s lt2 P1 G1 H1) = (term2443 A B P s lt2 P1 G1 H1).
Proof. exact (fun_ext (fun f : A -> B => @lem8373091 A B P s lt2 P1 G1 f H1)). Qed.
Lemma lem8373093 {A B : Type'} : (@ex (A -> B)) = (@ex (A -> B)).
Proof. exact (eq_refl (@ex (A -> B))). Qed.
Lemma lem8373094 {A B P : Type'} (s : P -> A) (lt2 : type1402 A) (P1 : type551 A B) (G1 : type548 A B) (H1 : type549 A B) : (term2457 A B P s lt2 P1 G1 H1) = (term2458 A B P s lt2 P1 G1 H1).
Proof. exact (MK_COMB (@lem8373093 A B) (@lem8373092 A B P s lt2 P1 G1 H1)). Qed.
Lemma lem8373095 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (_114084 : type794 A P) (s : P -> A) (lt2 : type1402 A) (P1 : type551 A B) (G1 : type548 A B) (H1 : type549 A B) : (term2528 A B P P2 G2 H2 _114084 s lt2 P1 G1 H1) = (term2527 A B P P2 G2 H2 _114084 s lt2 P1 G1 H1).
Proof. exact (MK_COMB (@lem8373090 A B P lt2 P2 G2 H2 _114084 s) (@lem8373094 A B P s lt2 P1 G1 H1)). Qed.
Lemma lem8373096 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8373097 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (_114084 : type794 A P) (s : P -> A) (lt2 : type1402 A) (P1 : type551 A B) (G1 : type548 A B) (H1 : type549 A B) : (term2534 A B P P2 G2 H2 _114084 s lt2 P1 G1 H1) = (term2535 A B P P2 G2 H2 _114084 s lt2 P1 G1 H1).
Proof. exact (MK_COMB (@lem8373096) (@lem8373095 A B P P2 G2 H2 _114084 s lt2 P1 G1 H1)). Qed.
Lemma lem8373098 {A B P : Type'} (lt2 : type1402 A) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (_114084 : type794 A P) (s : P -> A) : (term2530 A B P lt2 P2 G2 H2 _114084 s f) = (term2523 A B P lt2 P2 G2 f H2 _114084 s).
Proof. exact (eq_refl (term2530 A B P lt2 P2 G2 H2 _114084 s f)). Qed.
Lemma lem8373099 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8373100 {A B P : Type'} (lt2 : type1402 A) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (_114084 : type794 A P) (s : P -> A) : (term2536 A B P lt2 P2 G2 H2 _114084 s f) = (term2537 A B P lt2 P2 G2 f H2 _114084 s).
Proof. exact (MK_COMB (@lem8373099) (@lem8373098 A B P lt2 P2 G2 f H2 _114084 s)). Qed.
Lemma lem8373101 {A B P : Type'} (s : P -> A) (lt2 : type1402 A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (H1 : type549 A B) : (term2446 A B P s lt2 P1 G1 H1 f) = (term2436 A B P s lt2 P1 G1 f H1).
Proof. exact (eq_refl (term2446 A B P s lt2 P1 G1 H1 f)). Qed.
Lemma lem8373102 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (_114084 : type794 A P) (s : P -> A) (lt2 : type1402 A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (H1 : type549 A B) : (term2538 A B P P2 G2 H2 _114084 s lt2 P1 G1 H1 f) = (term2539 A B P P2 G2 H2 _114084 s lt2 P1 G1 f H1).
Proof. exact (MK_COMB (@lem8373100 A B P lt2 P2 G2 f H2 _114084 s) (@lem8373101 A B P s lt2 P1 G1 f H1)). Qed.
Lemma lem8373103 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (_114084 : type794 A P) (s : P -> A) (lt2 : type1402 A) (P1 : type551 A B) (G1 : type548 A B) (H1 : type549 A B) : (term2540 A B P P2 G2 H2 _114084 s lt2 P1 G1 H1) = (term2541 A B P P2 G2 H2 _114084 s lt2 P1 G1 H1).
Proof. exact (fun_ext (fun f : A -> B => @lem8373102 A B P P2 G2 H2 _114084 s lt2 P1 G1 f H1)). Qed.
Lemma lem8373104 {A B : Type'} : (@ex (A -> B)) = (@ex (A -> B)).
Proof. exact (eq_refl (@ex (A -> B))). Qed.
Lemma lem8373105 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (_114084 : type794 A P) (s : P -> A) (lt2 : type1402 A) (P1 : type551 A B) (G1 : type548 A B) (H1 : type549 A B) : (term2529 A B P P2 G2 H2 _114084 s lt2 P1 G1 H1) = (term2542 A B P P2 G2 H2 _114084 s lt2 P1 G1 H1).
Proof. exact (MK_COMB (@lem8373104 A B) (@lem8373103 A B P P2 G2 H2 _114084 s lt2 P1 G1 H1)). Qed.
Lemma lem8373106 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (_114084 : type794 A P) (s : P -> A) (lt2 : type1402 A) (P1 : type551 A B) (G1 : type548 A B) (H1 : type549 A B) : ((term2528 A B P P2 G2 H2 _114084 s lt2 P1 G1 H1) = (term2529 A B P P2 G2 H2 _114084 s lt2 P1 G1 H1)) = ((term2527 A B P P2 G2 H2 _114084 s lt2 P1 G1 H1) = (term2542 A B P P2 G2 H2 _114084 s lt2 P1 G1 H1)).
Proof. exact (MK_COMB (@lem8373097 A B P P2 G2 H2 _114084 s lt2 P1 G1 H1) (@lem8373105 A B P P2 G2 H2 _114084 s lt2 P1 G1 H1)). Qed.
Lemma lem8373107 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (_114084 : type794 A P) (s : P -> A) (lt2 : type1402 A) (P1 : type551 A B) (G1 : type548 A B) (H1 : type549 A B) : (term2527 A B P P2 G2 H2 _114084 s lt2 P1 G1 H1) = (term2542 A B P P2 G2 H2 _114084 s lt2 P1 G1 H1).
Proof. exact (EQ_MP (@lem8373106 A B P P2 G2 H2 _114084 s lt2 P1 G1 H1) (@lem8373084 A B P P2 G2 H2 _114084 s lt2 P1 G1 H1)). Qed.
Lemma lem8373109 {A : Type'} (P : A -> Prop) (Q : A -> Prop) : (term378 A P Q) = (term379 A P Q).
Proof. exact (EQ_MP (@lem18917 A P Q) (@lem18916 A P Q)). Qed.
Lemma lem8373110 {A B : Type'} (P : type572 A B) (Q : type572 A B) : (term2417 A B P Q) = (term2416 A B P Q).
Proof. exact (@lem8373109 (A -> B) P Q). Qed.
Lemma lem8373111 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (_114084 : type794 A P) (s : P -> A) (lt2 : type1402 A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (H1 : type549 A B) : (term2543 A B P P2 G2 H2 _114084 s lt2 P1 G1 f H1) = (term2544 A B P P2 G2 H2 _114084 s lt2 P1 G1 f H1).
Proof. exact (@lem8373110 A B (term2522 A B P lt2 P2 G2 f H2 _114084 s) (term2421 A B P s lt2 P1 G1 f H1)). Qed.
Lemma lem8373112 {A B P : Type'} (lt2 : type1402 A) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (_114084 : type794 A P) (s : P -> A) : (term2545 A B P lt2 P2 G2 f H2 _114084 s g) = (term2521 A B P lt2 P2 G2 f H2 g _114084 s).
Proof. exact (eq_refl (term2545 A B P lt2 P2 G2 f H2 _114084 s g)). Qed.
Lemma lem8373113 {A B P : Type'} (lt2 : type1402 A) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (_114084 : type794 A P) (s : P -> A) : (term2546 A B P lt2 P2 G2 f H2 _114084 s) = (term2522 A B P lt2 P2 G2 f H2 _114084 s).
Proof. exact (fun_ext (fun g : A -> B => @lem8373112 A B P lt2 P2 G2 f H2 g _114084 s)). Qed.
Lemma lem8373114 {A B : Type'} : (@ex (A -> B)) = (@ex (A -> B)).
Proof. exact (eq_refl (@ex (A -> B))). Qed.
Lemma lem8373115 {A B P : Type'} (lt2 : type1402 A) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (_114084 : type794 A P) (s : P -> A) : (term2547 A B P lt2 P2 G2 f H2 _114084 s) = (term2523 A B P lt2 P2 G2 f H2 _114084 s).
Proof. exact (MK_COMB (@lem8373114 A B) (@lem8373113 A B P lt2 P2 G2 f H2 _114084 s)). Qed.
Lemma lem8373116 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8373117 {A B P : Type'} (lt2 : type1402 A) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (_114084 : type794 A P) (s : P -> A) : (term2548 A B P lt2 P2 G2 f H2 _114084 s) = (term2537 A B P lt2 P2 G2 f H2 _114084 s).
Proof. exact (MK_COMB (@lem8373116) (@lem8373115 A B P lt2 P2 G2 f H2 _114084 s)). Qed.
Lemma lem8373118 {A B P : Type'} (s : P -> A) (lt2 : type1402 A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (H1 : type549 A B) (g : A -> B) : (term2424 A B P s lt2 P1 G1 f H1 g) = (term2412 A B P s lt2 P1 G1 f H1 g).
Proof. exact (eq_refl (term2424 A B P s lt2 P1 G1 f H1 g)). Qed.
Lemma lem8373119 {A B P : Type'} (s : P -> A) (lt2 : type1402 A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (H1 : type549 A B) : (term2434 A B P s lt2 P1 G1 f H1) = (term2421 A B P s lt2 P1 G1 f H1).
Proof. exact (fun_ext (fun g : A -> B => @lem8373118 A B P s lt2 P1 G1 f H1 g)). Qed.
Lemma lem8373120 {A B : Type'} : (@ex (A -> B)) = (@ex (A -> B)).
Proof. exact (eq_refl (@ex (A -> B))). Qed.
Lemma lem8373121 {A B P : Type'} (s : P -> A) (lt2 : type1402 A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (H1 : type549 A B) : (term2435 A B P s lt2 P1 G1 f H1) = (term2436 A B P s lt2 P1 G1 f H1).
Proof. exact (MK_COMB (@lem8373120 A B) (@lem8373119 A B P s lt2 P1 G1 f H1)). Qed.
Lemma lem8373122 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (_114084 : type794 A P) (s : P -> A) (lt2 : type1402 A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (H1 : type549 A B) : (term2543 A B P P2 G2 H2 _114084 s lt2 P1 G1 f H1) = (term2539 A B P P2 G2 H2 _114084 s lt2 P1 G1 f H1).
Proof. exact (MK_COMB (@lem8373117 A B P lt2 P2 G2 f H2 _114084 s) (@lem8373121 A B P s lt2 P1 G1 f H1)). Qed.
Lemma lem8373123 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8373124 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (_114084 : type794 A P) (s : P -> A) (lt2 : type1402 A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (H1 : type549 A B) : (term2549 A B P P2 G2 H2 _114084 s lt2 P1 G1 f H1) = (term2550 A B P P2 G2 H2 _114084 s lt2 P1 G1 f H1).
Proof. exact (MK_COMB (@lem8373123) (@lem8373122 A B P P2 G2 H2 _114084 s lt2 P1 G1 f H1)). Qed.
Lemma lem8373125 {A B P : Type'} (lt2 : type1402 A) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (_114084 : type794 A P) (s : P -> A) : (term2545 A B P lt2 P2 G2 f H2 _114084 s g) = (term2521 A B P lt2 P2 G2 f H2 g _114084 s).
Proof. exact (eq_refl (term2545 A B P lt2 P2 G2 f H2 _114084 s g)). Qed.
Lemma lem8373126 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8373127 {A B P : Type'} (lt2 : type1402 A) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (_114084 : type794 A P) (s : P -> A) : (term2551 A B P lt2 P2 G2 f H2 _114084 s g) = (term2552 A B P lt2 P2 G2 f H2 g _114084 s).
Proof. exact (MK_COMB (@lem8373126) (@lem8373125 A B P lt2 P2 G2 f H2 g _114084 s)). Qed.
Lemma lem8373128 {A B P : Type'} (s : P -> A) (lt2 : type1402 A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (H1 : type549 A B) (g : A -> B) : (term2424 A B P s lt2 P1 G1 f H1 g) = (term2412 A B P s lt2 P1 G1 f H1 g).
Proof. exact (eq_refl (term2424 A B P s lt2 P1 G1 f H1 g)). Qed.
Lemma lem8373129 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (_114084 : type794 A P) (s : P -> A) (lt2 : type1402 A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (H1 : type549 A B) (g : A -> B) : (term2553 A B P P2 G2 H2 _114084 s lt2 P1 G1 f H1 g) = (term2554 A B P P2 G2 H2 _114084 s lt2 P1 G1 f H1 g).
Proof. exact (MK_COMB (@lem8373127 A B P lt2 P2 G2 f H2 g _114084 s) (@lem8373128 A B P s lt2 P1 G1 f H1 g)). Qed.
Lemma lem8373130 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (_114084 : type794 A P) (s : P -> A) (lt2 : type1402 A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (H1 : type549 A B) : (term2555 A B P P2 G2 H2 _114084 s lt2 P1 G1 f H1) = (term2556 A B P P2 G2 H2 _114084 s lt2 P1 G1 f H1).
Proof. exact (fun_ext (fun g : A -> B => @lem8373129 A B P P2 G2 H2 _114084 s lt2 P1 G1 f H1 g)). Qed.
Lemma lem8373131 {A B : Type'} : (@ex (A -> B)) = (@ex (A -> B)).
Proof. exact (eq_refl (@ex (A -> B))). Qed.
Lemma lem8373132 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (_114084 : type794 A P) (s : P -> A) (lt2 : type1402 A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (H1 : type549 A B) : (term2544 A B P P2 G2 H2 _114084 s lt2 P1 G1 f H1) = (term2557 A B P P2 G2 H2 _114084 s lt2 P1 G1 f H1).
Proof. exact (MK_COMB (@lem8373131 A B) (@lem8373130 A B P P2 G2 H2 _114084 s lt2 P1 G1 f H1)). Qed.
Lemma lem8373133 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (_114084 : type794 A P) (s : P -> A) (lt2 : type1402 A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (H1 : type549 A B) : ((term2543 A B P P2 G2 H2 _114084 s lt2 P1 G1 f H1) = (term2544 A B P P2 G2 H2 _114084 s lt2 P1 G1 f H1)) = ((term2539 A B P P2 G2 H2 _114084 s lt2 P1 G1 f H1) = (term2557 A B P P2 G2 H2 _114084 s lt2 P1 G1 f H1)).
Proof. exact (MK_COMB (@lem8373124 A B P P2 G2 H2 _114084 s lt2 P1 G1 f H1) (@lem8373132 A B P P2 G2 H2 _114084 s lt2 P1 G1 f H1)). Qed.
Lemma lem8373134 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (_114084 : type794 A P) (s : P -> A) (lt2 : type1402 A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (H1 : type549 A B) : (term2539 A B P P2 G2 H2 _114084 s lt2 P1 G1 f H1) = (term2557 A B P P2 G2 H2 _114084 s lt2 P1 G1 f H1).
Proof. exact (EQ_MP (@lem8373133 A B P P2 G2 H2 _114084 s lt2 P1 G1 f H1) (@lem8373111 A B P P2 G2 H2 _114084 s lt2 P1 G1 f H1)). Qed.
Lemma lem8373136 {A : Type'} (P : A -> Prop) (Q : A -> Prop) : (term378 A P Q) = (term379 A P Q).
Proof. exact (EQ_MP (@lem18917 A P Q) (@lem18916 A P Q)). Qed.
Lemma lem8373137 {A : Type'} (P : A -> Prop) (Q : A -> Prop) : (term378 A P Q) = (term379 A P Q).
Proof. exact (@lem8373136 A P Q). Qed.
Lemma lem8373138 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (_114084 : type794 A P) (s : P -> A) (lt2 : type1402 A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (H1 : type549 A B) (g : A -> B) : (term2558 A B P P2 G2 H2 _114084 s lt2 P1 G1 f H1 g) = (term2559 A B P P2 G2 H2 _114084 s lt2 P1 G1 f H1 g).
Proof. exact (@lem8373137 A (term2520 A B P lt2 P2 G2 f H2 g _114084 s) (term2397 A B P s lt2 P1 G1 f H1 g)). Qed.
Lemma lem8373139 {A B P : Type'} (lt2 : type1402 A) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (_114084 : type794 A P) (s : P -> A) (x : A) : (term2560 A B P lt2 P2 G2 f H2 g _114084 s x) = (term2519 A B P lt2 P2 G2 f H2 g _114084 s x).
Proof. exact (eq_refl (term2560 A B P lt2 P2 G2 f H2 g _114084 s x)). Qed.
Lemma lem8373140 {A B P : Type'} (lt2 : type1402 A) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (_114084 : type794 A P) (s : P -> A) : (term2561 A B P lt2 P2 G2 f H2 g _114084 s) = (term2520 A B P lt2 P2 G2 f H2 g _114084 s).
Proof. exact (fun_ext (fun x : A => @lem8373139 A B P lt2 P2 G2 f H2 g _114084 s x)). Qed.
Lemma lem8373141 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem8373142 {A B P : Type'} (lt2 : type1402 A) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (_114084 : type794 A P) (s : P -> A) : (term2562 A B P lt2 P2 G2 f H2 g _114084 s) = (term2521 A B P lt2 P2 G2 f H2 g _114084 s).
Proof. exact (MK_COMB (@lem8373141 A) (@lem8373140 A B P lt2 P2 G2 f H2 g _114084 s)). Qed.
Lemma lem8373143 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8373144 {A B P : Type'} (lt2 : type1402 A) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (_114084 : type794 A P) (s : P -> A) : (term2563 A B P lt2 P2 G2 f H2 g _114084 s) = (term2552 A B P lt2 P2 G2 f H2 g _114084 s).
Proof. exact (MK_COMB (@lem8373143) (@lem8373142 A B P lt2 P2 G2 f H2 g _114084 s)). Qed.
Lemma lem8373145 {A B P : Type'} (s : P -> A) (lt2 : type1402 A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (H1 : type549 A B) (g : A -> B) (x : A) : (term2400 A B P s lt2 P1 G1 f H1 g x) = (term2317 A B P s lt2 P1 G1 f H1 g x).
Proof. exact (eq_refl (term2400 A B P s lt2 P1 G1 f H1 g x)). Qed.
Lemma lem8373146 {A B P : Type'} (s : P -> A) (lt2 : type1402 A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (H1 : type549 A B) (g : A -> B) : (term2410 A B P s lt2 P1 G1 f H1 g) = (term2397 A B P s lt2 P1 G1 f H1 g).
Proof. exact (fun_ext (fun x : A => @lem8373145 A B P s lt2 P1 G1 f H1 g x)). Qed.
Lemma lem8373147 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem8373148 {A B P : Type'} (s : P -> A) (lt2 : type1402 A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (H1 : type549 A B) (g : A -> B) : (term2411 A B P s lt2 P1 G1 f H1 g) = (term2412 A B P s lt2 P1 G1 f H1 g).
Proof. exact (MK_COMB (@lem8373147 A) (@lem8373146 A B P s lt2 P1 G1 f H1 g)). Qed.
Lemma lem8373149 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (_114084 : type794 A P) (s : P -> A) (lt2 : type1402 A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (H1 : type549 A B) (g : A -> B) : (term2558 A B P P2 G2 H2 _114084 s lt2 P1 G1 f H1 g) = (term2554 A B P P2 G2 H2 _114084 s lt2 P1 G1 f H1 g).
Proof. exact (MK_COMB (@lem8373144 A B P lt2 P2 G2 f H2 g _114084 s) (@lem8373148 A B P s lt2 P1 G1 f H1 g)). Qed.
Lemma lem8373150 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8373151 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (_114084 : type794 A P) (s : P -> A) (lt2 : type1402 A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (H1 : type549 A B) (g : A -> B) : (term2564 A B P P2 G2 H2 _114084 s lt2 P1 G1 f H1 g) = (term2565 A B P P2 G2 H2 _114084 s lt2 P1 G1 f H1 g).
Proof. exact (MK_COMB (@lem8373150) (@lem8373149 A B P P2 G2 H2 _114084 s lt2 P1 G1 f H1 g)). Qed.
Lemma lem8373152 {A B P : Type'} (lt2 : type1402 A) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (_114084 : type794 A P) (s : P -> A) (x : A) : (term2560 A B P lt2 P2 G2 f H2 g _114084 s x) = (term2519 A B P lt2 P2 G2 f H2 g _114084 s x).
Proof. exact (eq_refl (term2560 A B P lt2 P2 G2 f H2 g _114084 s x)). Qed.
Lemma lem8373153 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8373154 {A B P : Type'} (lt2 : type1402 A) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (_114084 : type794 A P) (s : P -> A) (x : A) : (term2566 A B P lt2 P2 G2 f H2 g _114084 s x) = (term2567 A B P lt2 P2 G2 f H2 g _114084 s x).
Proof. exact (MK_COMB (@lem8373153) (@lem8373152 A B P lt2 P2 G2 f H2 g _114084 s x)). Qed.
Lemma lem8373155 {A B P : Type'} (s : P -> A) (lt2 : type1402 A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (H1 : type549 A B) (g : A -> B) (x : A) : (term2400 A B P s lt2 P1 G1 f H1 g x) = (term2317 A B P s lt2 P1 G1 f H1 g x).
Proof. exact (eq_refl (term2400 A B P s lt2 P1 G1 f H1 g x)). Qed.
Lemma lem8373156 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (_114084 : type794 A P) (s : P -> A) (lt2 : type1402 A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (H1 : type549 A B) (g : A -> B) (x : A) : (term2568 A B P P2 G2 H2 _114084 s lt2 P1 G1 f H1 g x) = (term2569 A B P P2 G2 H2 _114084 s lt2 P1 G1 f H1 g x).
Proof. exact (MK_COMB (@lem8373154 A B P lt2 P2 G2 f H2 g _114084 s x) (@lem8373155 A B P s lt2 P1 G1 f H1 g x)). Qed.
Lemma lem8373157 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (_114084 : type794 A P) (s : P -> A) (lt2 : type1402 A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (H1 : type549 A B) (g : A -> B) : (term2570 A B P P2 G2 H2 _114084 s lt2 P1 G1 f H1 g) = (term2571 A B P P2 G2 H2 _114084 s lt2 P1 G1 f H1 g).
Proof. exact (fun_ext (fun x : A => @lem8373156 A B P P2 G2 H2 _114084 s lt2 P1 G1 f H1 g x)). Qed.
Lemma lem8373158 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem8373159 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (_114084 : type794 A P) (s : P -> A) (lt2 : type1402 A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (H1 : type549 A B) (g : A -> B) : (term2559 A B P P2 G2 H2 _114084 s lt2 P1 G1 f H1 g) = (term2572 A B P P2 G2 H2 _114084 s lt2 P1 G1 f H1 g).
Proof. exact (MK_COMB (@lem8373158 A) (@lem8373157 A B P P2 G2 H2 _114084 s lt2 P1 G1 f H1 g)). Qed.
Lemma lem8373160 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (_114084 : type794 A P) (s : P -> A) (lt2 : type1402 A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (H1 : type549 A B) (g : A -> B) : ((term2558 A B P P2 G2 H2 _114084 s lt2 P1 G1 f H1 g) = (term2559 A B P P2 G2 H2 _114084 s lt2 P1 G1 f H1 g)) = ((term2554 A B P P2 G2 H2 _114084 s lt2 P1 G1 f H1 g) = (term2572 A B P P2 G2 H2 _114084 s lt2 P1 G1 f H1 g)).
Proof. exact (MK_COMB (@lem8373151 A B P P2 G2 H2 _114084 s lt2 P1 G1 f H1 g) (@lem8373159 A B P P2 G2 H2 _114084 s lt2 P1 G1 f H1 g)). Qed.
Lemma lem8373161 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (_114084 : type794 A P) (s : P -> A) (lt2 : type1402 A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (H1 : type549 A B) (g : A -> B) : (term2554 A B P P2 G2 H2 _114084 s lt2 P1 G1 f H1 g) = (term2572 A B P P2 G2 H2 _114084 s lt2 P1 G1 f H1 g).
Proof. exact (EQ_MP (@lem8373160 A B P P2 G2 H2 _114084 s lt2 P1 G1 f H1 g) (@lem8373138 A B P P2 G2 H2 _114084 s lt2 P1 G1 f H1 g)). Qed.
Lemma lem8373163 {A : Type'} (P : A -> Prop) (Q : Prop) : (term169 A P Q) = (term170 A P Q).
Proof. exact (EQ_MP (@lem18905 A P Q) (@lem18904 A P Q)). Qed.
Lemma lem8373164 {P : Type'} (P' : P -> Prop) (Q : Prop) : (term169 P P' Q) = (term170 P P' Q).
Proof. exact (@lem8373163 P P' Q). Qed.
Lemma lem8373165 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (_114084 : type794 A P) (s : P -> A) (lt2 : type1402 A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (H1 : type549 A B) (g : A -> B) (x : A) : (term2573 A B P P2 G2 H2 _114084 s lt2 P1 G1 f H1 g x) = (term2574 A B P P2 G2 H2 _114084 s lt2 P1 G1 f H1 g x).
Proof. exact (@lem8373164 P (term2518 A B P lt2 P2 G2 f H2 g _114084 s x) (term2317 A B P s lt2 P1 G1 f H1 g x)). Qed.
Lemma lem8373166 {A B P : Type'} (y : P) (lt2 : type1402 A) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (_114084 : type794 A P) (s : P -> A) (x : A) : (term2575 A B P lt2 P2 G2 f H2 g _114084 s x y) = (term2516 A B P y lt2 P2 G2 f H2 g _114084 s x).
Proof. exact (eq_refl (term2575 A B P lt2 P2 G2 f H2 g _114084 s x y)). Qed.
Lemma lem8373167 {A B P : Type'} (lt2 : type1402 A) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (_114084 : type794 A P) (s : P -> A) (x : A) : (term2576 A B P lt2 P2 G2 f H2 g _114084 s x) = (term2518 A B P lt2 P2 G2 f H2 g _114084 s x).
Proof. exact (fun_ext (fun y : P => @lem8373166 A B P y lt2 P2 G2 f H2 g _114084 s x)). Qed.
Lemma lem8373168 {P : Type'} : (@ex P) = (@ex P).
Proof. exact (eq_refl (@ex P)). Qed.
Lemma lem8373169 {A B P : Type'} (lt2 : type1402 A) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (_114084 : type794 A P) (s : P -> A) (x : A) : (term2577 A B P lt2 P2 G2 f H2 g _114084 s x) = (term2519 A B P lt2 P2 G2 f H2 g _114084 s x).
Proof. exact (MK_COMB (@lem8373168 P) (@lem8373167 A B P lt2 P2 G2 f H2 g _114084 s x)). Qed.
Lemma lem8373170 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8373171 {A B P : Type'} (lt2 : type1402 A) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (_114084 : type794 A P) (s : P -> A) (x : A) : (term2578 A B P lt2 P2 G2 f H2 g _114084 s x) = (term2567 A B P lt2 P2 G2 f H2 g _114084 s x).
Proof. exact (MK_COMB (@lem8373170) (@lem8373169 A B P lt2 P2 G2 f H2 g _114084 s x)). Qed.
Lemma lem8373172 {A B P : Type'} (s : P -> A) (lt2 : type1402 A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (H1 : type549 A B) (g : A -> B) (x : A) : (term2317 A B P s lt2 P1 G1 f H1 g x) = (term2317 A B P s lt2 P1 G1 f H1 g x).
Proof. exact (eq_refl (term2317 A B P s lt2 P1 G1 f H1 g x)). Qed.
Lemma lem8373173 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (_114084 : type794 A P) (s : P -> A) (lt2 : type1402 A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (H1 : type549 A B) (g : A -> B) (x : A) : (term2573 A B P P2 G2 H2 _114084 s lt2 P1 G1 f H1 g x) = (term2569 A B P P2 G2 H2 _114084 s lt2 P1 G1 f H1 g x).
Proof. exact (MK_COMB (@lem8373171 A B P lt2 P2 G2 f H2 g _114084 s x) (@lem8373172 A B P s lt2 P1 G1 f H1 g x)). Qed.
Lemma lem8373174 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8373175 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (_114084 : type794 A P) (s : P -> A) (lt2 : type1402 A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (H1 : type549 A B) (g : A -> B) (x : A) : (term2579 A B P P2 G2 H2 _114084 s lt2 P1 G1 f H1 g x) = (term2580 A B P P2 G2 H2 _114084 s lt2 P1 G1 f H1 g x).
Proof. exact (MK_COMB (@lem8373174) (@lem8373173 A B P P2 G2 H2 _114084 s lt2 P1 G1 f H1 g x)). Qed.
Lemma lem8373176 {A B P : Type'} (y : P) (lt2 : type1402 A) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (_114084 : type794 A P) (s : P -> A) (x : A) : (term2575 A B P lt2 P2 G2 f H2 g _114084 s x y) = (term2516 A B P y lt2 P2 G2 f H2 g _114084 s x).
Proof. exact (eq_refl (term2575 A B P lt2 P2 G2 f H2 g _114084 s x y)). Qed.
Lemma lem8373177 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8373178 {A B P : Type'} (y : P) (lt2 : type1402 A) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (_114084 : type794 A P) (s : P -> A) (x : A) : (term2581 A B P lt2 P2 G2 f H2 g _114084 s x y) = (term2582 A B P y lt2 P2 G2 f H2 g _114084 s x).
Proof. exact (MK_COMB (@lem8373177) (@lem8373176 A B P y lt2 P2 G2 f H2 g _114084 s x)). Qed.
Lemma lem8373179 {A B P : Type'} (s : P -> A) (lt2 : type1402 A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (H1 : type549 A B) (g : A -> B) (x : A) : (term2317 A B P s lt2 P1 G1 f H1 g x) = (term2317 A B P s lt2 P1 G1 f H1 g x).
Proof. exact (eq_refl (term2317 A B P s lt2 P1 G1 f H1 g x)). Qed.
Lemma lem8373180 {A B P : Type'} (y : P) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (_114084 : type794 A P) (s : P -> A) (lt2 : type1402 A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (H1 : type549 A B) (g : A -> B) (x : A) : (term2583 A B P P2 G2 H2 _114084 y s lt2 P1 G1 f H1 g x) = (term2584 A B P y P2 G2 H2 _114084 s lt2 P1 G1 f H1 g x).
Proof. exact (MK_COMB (@lem8373178 A B P y lt2 P2 G2 f H2 g _114084 s x) (@lem8373179 A B P s lt2 P1 G1 f H1 g x)). Qed.
Lemma lem8373181 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (_114084 : type794 A P) (s : P -> A) (lt2 : type1402 A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (H1 : type549 A B) (g : A -> B) (x : A) : (term2585 A B P P2 G2 H2 _114084 s lt2 P1 G1 f H1 g x) = (term2586 A B P P2 G2 H2 _114084 s lt2 P1 G1 f H1 g x).
Proof. exact (fun_ext (fun y : P => @lem8373180 A B P y P2 G2 H2 _114084 s lt2 P1 G1 f H1 g x)). Qed.
Lemma lem8373182 {P : Type'} : (@ex P) = (@ex P).
Proof. exact (eq_refl (@ex P)). Qed.
Lemma lem8373183 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (_114084 : type794 A P) (s : P -> A) (lt2 : type1402 A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (H1 : type549 A B) (g : A -> B) (x : A) : (term2574 A B P P2 G2 H2 _114084 s lt2 P1 G1 f H1 g x) = (term2587 A B P P2 G2 H2 _114084 s lt2 P1 G1 f H1 g x).
Proof. exact (MK_COMB (@lem8373182 P) (@lem8373181 A B P P2 G2 H2 _114084 s lt2 P1 G1 f H1 g x)). Qed.
Lemma lem8373184 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (_114084 : type794 A P) (s : P -> A) (lt2 : type1402 A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (H1 : type549 A B) (g : A -> B) (x : A) : ((term2573 A B P P2 G2 H2 _114084 s lt2 P1 G1 f H1 g x) = (term2574 A B P P2 G2 H2 _114084 s lt2 P1 G1 f H1 g x)) = ((term2569 A B P P2 G2 H2 _114084 s lt2 P1 G1 f H1 g x) = (term2587 A B P P2 G2 H2 _114084 s lt2 P1 G1 f H1 g x)).
Proof. exact (MK_COMB (@lem8373175 A B P P2 G2 H2 _114084 s lt2 P1 G1 f H1 g x) (@lem8373183 A B P P2 G2 H2 _114084 s lt2 P1 G1 f H1 g x)). Qed.
Lemma lem8373185 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (_114084 : type794 A P) (s : P -> A) (lt2 : type1402 A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (H1 : type549 A B) (g : A -> B) (x : A) : (term2569 A B P P2 G2 H2 _114084 s lt2 P1 G1 f H1 g x) = (term2587 A B P P2 G2 H2 _114084 s lt2 P1 G1 f H1 g x).
Proof. exact (EQ_MP (@lem8373184 A B P P2 G2 H2 _114084 s lt2 P1 G1 f H1 g x) (@lem8373165 A B P P2 G2 H2 _114084 s lt2 P1 G1 f H1 g x)). Qed.
Lemma lem8373186 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (_114084 : type794 A P) (s : P -> A) (lt2 : type1402 A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (H1 : type549 A B) (g : A -> B) : (term2571 A B P P2 G2 H2 _114084 s lt2 P1 G1 f H1 g) = (term2588 A B P P2 G2 H2 _114084 s lt2 P1 G1 f H1 g).
Proof. exact (fun_ext (fun x : A => @lem8373185 A B P P2 G2 H2 _114084 s lt2 P1 G1 f H1 g x)). Qed.
Lemma lem8373187 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem8373188 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (_114084 : type794 A P) (s : P -> A) (lt2 : type1402 A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (H1 : type549 A B) (g : A -> B) : (term2572 A B P P2 G2 H2 _114084 s lt2 P1 G1 f H1 g) = (term2589 A B P P2 G2 H2 _114084 s lt2 P1 G1 f H1 g).
Proof. exact (MK_COMB (@lem8373187 A) (@lem8373186 A B P P2 G2 H2 _114084 s lt2 P1 G1 f H1 g)). Qed.
Lemma lem8373189 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (_114084 : type794 A P) (s : P -> A) (lt2 : type1402 A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (H1 : type549 A B) (g : A -> B) : (term2554 A B P P2 G2 H2 _114084 s lt2 P1 G1 f H1 g) = (term2589 A B P P2 G2 H2 _114084 s lt2 P1 G1 f H1 g).
Proof. exact (TRANS (@lem8373161 A B P P2 G2 H2 _114084 s lt2 P1 G1 f H1 g) (@lem8373188 A B P P2 G2 H2 _114084 s lt2 P1 G1 f H1 g)). Qed.
Lemma lem8373190 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (_114084 : type794 A P) (s : P -> A) (lt2 : type1402 A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (H1 : type549 A B) : (term2556 A B P P2 G2 H2 _114084 s lt2 P1 G1 f H1) = (term2590 A B P P2 G2 H2 _114084 s lt2 P1 G1 f H1).
Proof. exact (fun_ext (fun g : A -> B => @lem8373189 A B P P2 G2 H2 _114084 s lt2 P1 G1 f H1 g)). Qed.
Lemma lem8373191 {A B : Type'} : (@ex (A -> B)) = (@ex (A -> B)).
Proof. exact (eq_refl (@ex (A -> B))). Qed.
Lemma lem8373192 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (_114084 : type794 A P) (s : P -> A) (lt2 : type1402 A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (H1 : type549 A B) : (term2557 A B P P2 G2 H2 _114084 s lt2 P1 G1 f H1) = (term2591 A B P P2 G2 H2 _114084 s lt2 P1 G1 f H1).
Proof. exact (MK_COMB (@lem8373191 A B) (@lem8373190 A B P P2 G2 H2 _114084 s lt2 P1 G1 f H1)). Qed.
Lemma lem8373193 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (_114084 : type794 A P) (s : P -> A) (lt2 : type1402 A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (H1 : type549 A B) : (term2539 A B P P2 G2 H2 _114084 s lt2 P1 G1 f H1) = (term2591 A B P P2 G2 H2 _114084 s lt2 P1 G1 f H1).
Proof. exact (TRANS (@lem8373134 A B P P2 G2 H2 _114084 s lt2 P1 G1 f H1) (@lem8373192 A B P P2 G2 H2 _114084 s lt2 P1 G1 f H1)). Qed.
Lemma lem8373194 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (_114084 : type794 A P) (s : P -> A) (lt2 : type1402 A) (P1 : type551 A B) (G1 : type548 A B) (H1 : type549 A B) : (term2541 A B P P2 G2 H2 _114084 s lt2 P1 G1 H1) = (term2592 A B P P2 G2 H2 _114084 s lt2 P1 G1 H1).
Proof. exact (fun_ext (fun f : A -> B => @lem8373193 A B P P2 G2 H2 _114084 s lt2 P1 G1 f H1)). Qed.
Lemma lem8373195 {A B : Type'} : (@ex (A -> B)) = (@ex (A -> B)).
Proof. exact (eq_refl (@ex (A -> B))). Qed.
Lemma lem8373196 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (_114084 : type794 A P) (s : P -> A) (lt2 : type1402 A) (P1 : type551 A B) (G1 : type548 A B) (H1 : type549 A B) : (term2542 A B P P2 G2 H2 _114084 s lt2 P1 G1 H1) = (term2593 A B P P2 G2 H2 _114084 s lt2 P1 G1 H1).
Proof. exact (MK_COMB (@lem8373195 A B) (@lem8373194 A B P P2 G2 H2 _114084 s lt2 P1 G1 H1)). Qed.
Lemma lem8373197 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (_114084 : type794 A P) (s : P -> A) (lt2 : type1402 A) (P1 : type551 A B) (G1 : type548 A B) (H1 : type549 A B) : (term2527 A B P P2 G2 H2 _114084 s lt2 P1 G1 H1) = (term2593 A B P P2 G2 H2 _114084 s lt2 P1 G1 H1).
Proof. exact (TRANS (@lem8373107 A B P P2 G2 H2 _114084 s lt2 P1 G1 H1) (@lem8373196 A B P P2 G2 H2 _114084 s lt2 P1 G1 H1)). Qed.
Lemma lem8373198 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (_114084 : type794 A P) (s : P -> A) (lt2 : type1402 A) (P1 : type551 A B) (G1 : type548 A B) (H1 : type549 A B) : (term2459 A B P P2 G2 H2 _114084 s lt2 P1 G1 H1) = (term2593 A B P P2 G2 H2 _114084 s lt2 P1 G1 H1).
Proof. exact (TRANS (@lem8373080 A B P P2 G2 H2 _114084 s lt2 P1 G1 H1) (@lem8373197 A B P P2 G2 H2 _114084 s lt2 P1 G1 H1)). Qed.
Lemma lem8373199 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8373200 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (_114084 : type794 A P) (s : P -> A) (lt2 : type1402 A) (P1 : type551 A B) (G1 : type548 A B) (H1 : type549 A B) : (term2460 A B P P2 G2 H2 _114084 s lt2 P1 G1 H1) = (term2594 A B P P2 G2 H2 _114084 s lt2 P1 G1 H1).
Proof. exact (MK_COMB (@lem8373199) (@lem8373198 A B P P2 G2 H2 _114084 s lt2 P1 G1 H1)). Qed.
Lemma lem8373202 {A : Type'} (P : A -> Prop) (Q : Prop) : (term2504 A P Q) = (term2505 A P Q).
Proof. exact (EQ_MP (@lem18923 A P Q) (@lem18922 A P Q)). Qed.
Lemma lem8373203 {P : Type'} (P' : P -> Prop) (Q : Prop) : (term2504 P P' Q) = (term2505 P P' Q).
Proof. exact (@lem8373202 P P' Q). Qed.
Lemma lem8373204 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (_114084 : type794 A P) (s : P -> A) (lt2 : type1402 A) (x : A) : (term2595 A B P P2 G2 f _114084 s lt2 x) = (term2596 A B P P2 G2 f _114084 s lt2 x).
Proof. exact (@lem8373203 P (term1454 A P s x) (term2355 A B P P2 G2 f _114084 s lt2 x)). Qed.
Lemma lem8373205 {A P : Type'} (s : P -> A) (y : P) (x : A) : (term1457 A P s x y) = ((s y) = x).
Proof. exact (eq_refl (term1457 A P s x y)). Qed.
Lemma lem8373206 {A P : Type'} (s : P -> A) (x : A) : (term2508 A P s x) = (term1454 A P s x).
Proof. exact (fun_ext (fun y : P => @lem8373205 A P s y x)). Qed.
Lemma lem8373207 {P : Type'} : (@ex P) = (@ex P).
Proof. exact (eq_refl (@ex P)). Qed.
Lemma lem8373208 {A P : Type'} (s : P -> A) (x : A) : (term2509 A P s x) = (term1773 A P s x).
Proof. exact (MK_COMB (@lem8373207 P) (@lem8373206 A P s x)). Qed.
Lemma lem8373209 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8373210 {A P : Type'} (s : P -> A) (x : A) : (term2510 A P s x) = (term2293 A P s x).
Proof. exact (MK_COMB (@lem8373209) (@lem8373208 A P s x)). Qed.
Lemma lem8373211 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (_114084 : type794 A P) (s : P -> A) (lt2 : type1402 A) (x : A) : (term2355 A B P P2 G2 f _114084 s lt2 x) = (term2355 A B P P2 G2 f _114084 s lt2 x).
Proof. exact (eq_refl (term2355 A B P P2 G2 f _114084 s lt2 x)). Qed.
Lemma lem8373212 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (_114084 : type794 A P) (s : P -> A) (lt2 : type1402 A) (x : A) : (term2595 A B P P2 G2 f _114084 s lt2 x) = (term2357 A B P P2 G2 f _114084 s lt2 x).
Proof. exact (MK_COMB (@lem8373210 A P s x) (@lem8373211 A B P P2 G2 f _114084 s lt2 x)). Qed.
Lemma lem8373213 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8373214 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (_114084 : type794 A P) (s : P -> A) (lt2 : type1402 A) (x : A) : (term2597 A B P P2 G2 f _114084 s lt2 x) = (term2598 A B P P2 G2 f _114084 s lt2 x).
Proof. exact (MK_COMB (@lem8373213) (@lem8373212 A B P P2 G2 f _114084 s lt2 x)). Qed.
Lemma lem8373215 {A P : Type'} (s : P -> A) (y : P) (x : A) : (term1457 A P s x y) = ((s y) = x).
Proof. exact (eq_refl (term1457 A P s x y)). Qed.
Lemma lem8373216 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8373217 {A P : Type'} (s : P -> A) (y : P) (x : A) : (term2513 A P s x y) = (term2514 A P s y x).
Proof. exact (MK_COMB (@lem8373216) (@lem8373215 A P s y x)). Qed.
Lemma lem8373218 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (_114084 : type794 A P) (s : P -> A) (lt2 : type1402 A) (x : A) : (term2355 A B P P2 G2 f _114084 s lt2 x) = (term2355 A B P P2 G2 f _114084 s lt2 x).
Proof. exact (eq_refl (term2355 A B P P2 G2 f _114084 s lt2 x)). Qed.
Lemma lem8373219 {A B P : Type'} (y : P) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (_114084 : type794 A P) (s : P -> A) (lt2 : type1402 A) (x : A) : (term2599 A B P y P2 G2 f _114084 s lt2 x) = (term2600 A B P y P2 G2 f _114084 s lt2 x).
Proof. exact (MK_COMB (@lem8373217 A P s y x) (@lem8373218 A B P P2 G2 f _114084 s lt2 x)). Qed.
Lemma lem8373220 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (_114084 : type794 A P) (s : P -> A) (lt2 : type1402 A) (x : A) : (term2601 A B P P2 G2 f _114084 s lt2 x) = (term2602 A B P P2 G2 f _114084 s lt2 x).
Proof. exact (fun_ext (fun y : P => @lem8373219 A B P y P2 G2 f _114084 s lt2 x)). Qed.
Lemma lem8373221 {P : Type'} : (@ex P) = (@ex P).
Proof. exact (eq_refl (@ex P)). Qed.
Lemma lem8373222 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (_114084 : type794 A P) (s : P -> A) (lt2 : type1402 A) (x : A) : (term2596 A B P P2 G2 f _114084 s lt2 x) = (term2603 A B P P2 G2 f _114084 s lt2 x).
Proof. exact (MK_COMB (@lem8373221 P) (@lem8373220 A B P P2 G2 f _114084 s lt2 x)). Qed.
Lemma lem8373223 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (_114084 : type794 A P) (s : P -> A) (lt2 : type1402 A) (x : A) : ((term2595 A B P P2 G2 f _114084 s lt2 x) = (term2596 A B P P2 G2 f _114084 s lt2 x)) = ((term2357 A B P P2 G2 f _114084 s lt2 x) = (term2603 A B P P2 G2 f _114084 s lt2 x)).
Proof. exact (MK_COMB (@lem8373214 A B P P2 G2 f _114084 s lt2 x) (@lem8373222 A B P P2 G2 f _114084 s lt2 x)). Qed.
Lemma lem8373224 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (_114084 : type794 A P) (s : P -> A) (lt2 : type1402 A) (x : A) : (term2357 A B P P2 G2 f _114084 s lt2 x) = (term2603 A B P P2 G2 f _114084 s lt2 x).
Proof. exact (EQ_MP (@lem8373223 A B P P2 G2 f _114084 s lt2 x) (@lem8373204 A B P P2 G2 f _114084 s lt2 x)). Qed.
Lemma lem8373226 {A : Type'} (P : Prop) (Q : A -> Prop) : (term2604 A P Q) = (term2605 A P Q).
Proof. exact (EQ_MP (@lem18929 A P Q) (@lem18928 A P Q)). Qed.
Lemma lem8373227 {A : Type'} (P : Prop) (Q : A -> Prop) : (term2604 A P Q) = (term2605 A P Q).
Proof. exact (@lem8373226 A P Q). Qed.
Lemma lem8373228 {A B P : Type'} (y : P) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (_114084 : type794 A P) (s : P -> A) (lt2 : type1402 A) (x : A) : (term2606 A B P y P2 G2 f _114084 s lt2 x) = (term2607 A B P y P2 G2 f _114084 s lt2 x).
Proof. exact (@lem8373227 A ((s y) = x) (term2354 A B P P2 G2 f _114084 s lt2 x)). Qed.
Lemma lem8373229 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (_114084 : type794 A P) (s : P -> A) (lt2 : type1402 A) (y : A) (x : A) : (term2608 A B P P2 G2 f _114084 s lt2 x y) = (term2348 A B P P2 G2 f _114084 s lt2 y x).
Proof. exact (eq_refl (term2608 A B P P2 G2 f _114084 s lt2 x y)). Qed.
Lemma lem8373230 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (_114084 : type794 A P) (s : P -> A) (lt2 : type1402 A) (x : A) : (term2609 A B P P2 G2 f _114084 s lt2 x) = (term2354 A B P P2 G2 f _114084 s lt2 x).
Proof. exact (fun_ext (fun y : A => @lem8373229 A B P P2 G2 f _114084 s lt2 y x)). Qed.
Lemma lem8373231 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem8373232 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (_114084 : type794 A P) (s : P -> A) (lt2 : type1402 A) (x : A) : (term2610 A B P P2 G2 f _114084 s lt2 x) = (term2355 A B P P2 G2 f _114084 s lt2 x).
Proof. exact (MK_COMB (@lem8373231 A) (@lem8373230 A B P P2 G2 f _114084 s lt2 x)). Qed.
Lemma lem8373233 {A P : Type'} (s : P -> A) (y : P) (x : A) : (term2514 A P s y x) = (term2514 A P s y x).
Proof. exact (eq_refl (term2514 A P s y x)). Qed.
Lemma lem8373234 {A B P : Type'} (y : P) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (_114084 : type794 A P) (s : P -> A) (lt2 : type1402 A) (x : A) : (term2606 A B P y P2 G2 f _114084 s lt2 x) = (term2600 A B P y P2 G2 f _114084 s lt2 x).
Proof. exact (MK_COMB (@lem8373233 A P s y x) (@lem8373232 A B P P2 G2 f _114084 s lt2 x)). Qed.
Lemma lem8373235 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8373236 {A B P : Type'} (y : P) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (_114084 : type794 A P) (s : P -> A) (lt2 : type1402 A) (x : A) : (term2611 A B P y P2 G2 f _114084 s lt2 x) = (term2612 A B P y P2 G2 f _114084 s lt2 x).
Proof. exact (MK_COMB (@lem8373235) (@lem8373234 A B P y P2 G2 f _114084 s lt2 x)). Qed.
Lemma lem8373237 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (_114084 : type794 A P) (s : P -> A) (lt2 : type1402 A) (y : A) (x : A) : (term2608 A B P P2 G2 f _114084 s lt2 x y) = (term2348 A B P P2 G2 f _114084 s lt2 y x).
Proof. exact (eq_refl (term2608 A B P P2 G2 f _114084 s lt2 x y)). Qed.
Lemma lem8373238 {A P : Type'} (s : P -> A) (y : P) (x : A) : (term2514 A P s y x) = (term2514 A P s y x).
Proof. exact (eq_refl (term2514 A P s y x)). Qed.
Lemma lem8373239 {A B P : Type'} (y : P) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (_114084 : type794 A P) (s : P -> A) (lt2 : type1402 A) (y' : A) (x : A) : (term2613 A B P y P2 G2 f _114084 s lt2 x y') = (term2614 A B P y P2 G2 f _114084 s lt2 y' x).
Proof. exact (MK_COMB (@lem8373238 A P s y x) (@lem8373237 A B P P2 G2 f _114084 s lt2 y' x)). Qed.
Lemma lem8373240 {A B P : Type'} (y : P) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (_114084 : type794 A P) (s : P -> A) (lt2 : type1402 A) (x : A) : (term2615 A B P y P2 G2 f _114084 s lt2 x) = (term2616 A B P y P2 G2 f _114084 s lt2 x).
Proof. exact (fun_ext (fun y' : A => @lem8373239 A B P y P2 G2 f _114084 s lt2 y' x)). Qed.
Lemma lem8373241 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem8373242 {A B P : Type'} (y : P) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (_114084 : type794 A P) (s : P -> A) (lt2 : type1402 A) (x : A) : (term2607 A B P y P2 G2 f _114084 s lt2 x) = (term2617 A B P y P2 G2 f _114084 s lt2 x).
Proof. exact (MK_COMB (@lem8373241 A) (@lem8373240 A B P y P2 G2 f _114084 s lt2 x)). Qed.
Lemma lem8373243 {A B P : Type'} (y : P) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (_114084 : type794 A P) (s : P -> A) (lt2 : type1402 A) (x : A) : ((term2606 A B P y P2 G2 f _114084 s lt2 x) = (term2607 A B P y P2 G2 f _114084 s lt2 x)) = ((term2600 A B P y P2 G2 f _114084 s lt2 x) = (term2617 A B P y P2 G2 f _114084 s lt2 x)).
Proof. exact (MK_COMB (@lem8373236 A B P y P2 G2 f _114084 s lt2 x) (@lem8373242 A B P y P2 G2 f _114084 s lt2 x)). Qed.
Lemma lem8373244 {A B P : Type'} (y : P) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (_114084 : type794 A P) (s : P -> A) (lt2 : type1402 A) (x : A) : (term2600 A B P y P2 G2 f _114084 s lt2 x) = (term2617 A B P y P2 G2 f _114084 s lt2 x).
Proof. exact (EQ_MP (@lem8373243 A B P y P2 G2 f _114084 s lt2 x) (@lem8373228 A B P y P2 G2 f _114084 s lt2 x)). Qed.
Lemma lem8373245 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (_114084 : type794 A P) (s : P -> A) (lt2 : type1402 A) (x : A) : (term2602 A B P P2 G2 f _114084 s lt2 x) = (term2618 A B P P2 G2 f _114084 s lt2 x).
Proof. exact (fun_ext (fun y : P => @lem8373244 A B P y P2 G2 f _114084 s lt2 x)). Qed.
Lemma lem8373246 {P : Type'} : (@ex P) = (@ex P).
Proof. exact (eq_refl (@ex P)). Qed.
Lemma lem8373247 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (_114084 : type794 A P) (s : P -> A) (lt2 : type1402 A) (x : A) : (term2603 A B P P2 G2 f _114084 s lt2 x) = (term2619 A B P P2 G2 f _114084 s lt2 x).
Proof. exact (MK_COMB (@lem8373246 P) (@lem8373245 A B P P2 G2 f _114084 s lt2 x)). Qed.
Lemma lem8373248 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (_114084 : type794 A P) (s : P -> A) (lt2 : type1402 A) (x : A) : (term2357 A B P P2 G2 f _114084 s lt2 x) = (term2619 A B P P2 G2 f _114084 s lt2 x).
Proof. exact (TRANS (@lem8373224 A B P P2 G2 f _114084 s lt2 x) (@lem8373247 A B P P2 G2 f _114084 s lt2 x)). Qed.
Lemma lem8373249 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (_114084 : type794 A P) (s : P -> A) (lt2 : type1402 A) : (term2463 A B P P2 G2 f _114084 s lt2) = (term2620 A B P P2 G2 f _114084 s lt2).
Proof. exact (fun_ext (fun x : A => @lem8373248 A B P P2 G2 f _114084 s lt2 x)). Qed.
Lemma lem8373250 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem8373251 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (_114084 : type794 A P) (s : P -> A) (lt2 : type1402 A) : (term2474 A B P P2 G2 f _114084 s lt2) = (term2621 A B P P2 G2 f _114084 s lt2).
Proof. exact (MK_COMB (@lem8373250 A) (@lem8373249 A B P P2 G2 f _114084 s lt2)). Qed.
Lemma lem8373252 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (_114084 : type794 A P) (s : P -> A) (lt2 : type1402 A) : (term2485 A B P P2 G2 _114084 s lt2) = (term2622 A B P P2 G2 _114084 s lt2).
Proof. exact (fun_ext (fun f : A -> B => @lem8373251 A B P P2 G2 f _114084 s lt2)). Qed.
Lemma lem8373253 {A B : Type'} : (@ex (A -> B)) = (@ex (A -> B)).
Proof. exact (eq_refl (@ex (A -> B))). Qed.
Lemma lem8373254 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (_114084 : type794 A P) (s : P -> A) (lt2 : type1402 A) : (term2496 A B P P2 G2 _114084 s lt2) = (term2623 A B P P2 G2 _114084 s lt2).
Proof. exact (MK_COMB (@lem8373253 A B) (@lem8373252 A B P P2 G2 _114084 s lt2)). Qed.
Lemma lem8373255 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8373256 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (_114084 : type794 A P) (s : P -> A) (lt2 : type1402 A) : (term2498 A B P P2 G2 _114084 s lt2) = (term2624 A B P P2 G2 _114084 s lt2).
Proof. exact (MK_COMB (@lem8373255) (@lem8373254 A B P P2 G2 _114084 s lt2)). Qed.
Lemma lem8373258 {A : Type'} (P : Prop) (Q : A -> Prop) : (term2604 A P Q) = (term2605 A P Q).
Proof. exact (EQ_MP (@lem18929 A P Q) (@lem18928 A P Q)). Qed.
Lemma lem8373259 {A : Type'} (P : Prop) (Q : A -> Prop) : (term2604 A P Q) = (term2605 A P Q).
Proof. exact (@lem8373258 A P Q). Qed.
Lemma lem8373260 {A B P : Type'} (s : P -> A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (lt2 : type1402 A) (x : A) : (term2625 A B P s P1 G1 f lt2 x) = (term2626 A B P s P1 G1 f lt2 x).
Proof. exact (@lem8373259 A (term2015 A P s x) (term2366 A B P1 G1 f lt2 x)). Qed.
Lemma lem8373261 {A B : Type'} (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (lt2 : type1402 A) (y : A) (x : A) : (term2627 A B P1 G1 f lt2 x y) = (term2360 A B P1 G1 f lt2 y x).
Proof. exact (eq_refl (term2627 A B P1 G1 f lt2 x y)). Qed.
Lemma lem8373262 {A B : Type'} (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (lt2 : type1402 A) (x : A) : (term2628 A B P1 G1 f lt2 x) = (term2366 A B P1 G1 f lt2 x).
Proof. exact (fun_ext (fun y : A => @lem8373261 A B P1 G1 f lt2 y x)). Qed.
Lemma lem8373263 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem8373264 {A B : Type'} (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (lt2 : type1402 A) (x : A) : (term2629 A B P1 G1 f lt2 x) = (term2367 A B P1 G1 f lt2 x).
Proof. exact (MK_COMB (@lem8373263 A) (@lem8373262 A B P1 G1 f lt2 x)). Qed.
Lemma lem8373265 {A P : Type'} (s : P -> A) (x : A) : (term2315 A P s x) = (term2315 A P s x).
Proof. exact (eq_refl (term2315 A P s x)). Qed.
Lemma lem8373266 {A B P : Type'} (s : P -> A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (lt2 : type1402 A) (x : A) : (term2625 A B P s P1 G1 f lt2 x) = (term2369 A B P s P1 G1 f lt2 x).
Proof. exact (MK_COMB (@lem8373265 A P s x) (@lem8373264 A B P1 G1 f lt2 x)). Qed.
Lemma lem8373267 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8373268 {A B P : Type'} (s : P -> A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (lt2 : type1402 A) (x : A) : (term2630 A B P s P1 G1 f lt2 x) = (term2631 A B P s P1 G1 f lt2 x).
Proof. exact (MK_COMB (@lem8373267) (@lem8373266 A B P s P1 G1 f lt2 x)). Qed.
Lemma lem8373269 {A B : Type'} (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (lt2 : type1402 A) (y : A) (x : A) : (term2627 A B P1 G1 f lt2 x y) = (term2360 A B P1 G1 f lt2 y x).
Proof. exact (eq_refl (term2627 A B P1 G1 f lt2 x y)). Qed.
Lemma lem8373270 {A P : Type'} (s : P -> A) (x : A) : (term2315 A P s x) = (term2315 A P s x).
Proof. exact (eq_refl (term2315 A P s x)). Qed.
Lemma lem8373271 {A B P : Type'} (s : P -> A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (lt2 : type1402 A) (y : A) (x : A) : (term2632 A B P s P1 G1 f lt2 x y) = (term2633 A B P s P1 G1 f lt2 y x).
Proof. exact (MK_COMB (@lem8373270 A P s x) (@lem8373269 A B P1 G1 f lt2 y x)). Qed.
Lemma lem8373272 {A B P : Type'} (s : P -> A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (lt2 : type1402 A) (x : A) : (term2634 A B P s P1 G1 f lt2 x) = (term2635 A B P s P1 G1 f lt2 x).
Proof. exact (fun_ext (fun y : A => @lem8373271 A B P s P1 G1 f lt2 y x)). Qed.
Lemma lem8373273 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem8373274 {A B P : Type'} (s : P -> A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (lt2 : type1402 A) (x : A) : (term2626 A B P s P1 G1 f lt2 x) = (term2636 A B P s P1 G1 f lt2 x).
Proof. exact (MK_COMB (@lem8373273 A) (@lem8373272 A B P s P1 G1 f lt2 x)). Qed.
Lemma lem8373275 {A B P : Type'} (s : P -> A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (lt2 : type1402 A) (x : A) : ((term2625 A B P s P1 G1 f lt2 x) = (term2626 A B P s P1 G1 f lt2 x)) = ((term2369 A B P s P1 G1 f lt2 x) = (term2636 A B P s P1 G1 f lt2 x)).
Proof. exact (MK_COMB (@lem8373268 A B P s P1 G1 f lt2 x) (@lem8373274 A B P s P1 G1 f lt2 x)). Qed.
Lemma lem8373276 {A B P : Type'} (s : P -> A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (lt2 : type1402 A) (x : A) : (term2369 A B P s P1 G1 f lt2 x) = (term2636 A B P s P1 G1 f lt2 x).
Proof. exact (EQ_MP (@lem8373275 A B P s P1 G1 f lt2 x) (@lem8373260 A B P s P1 G1 f lt2 x)). Qed.
Lemma lem8373277 {A B P : Type'} (s : P -> A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (lt2 : type1402 A) : (term2464 A B P s P1 G1 f lt2) = (term2637 A B P s P1 G1 f lt2).
Proof. exact (fun_ext (fun x : A => @lem8373276 A B P s P1 G1 f lt2 x)). Qed.
Lemma lem8373278 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem8373279 {A B P : Type'} (s : P -> A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (lt2 : type1402 A) : (term2479 A B P s P1 G1 f lt2) = (term2638 A B P s P1 G1 f lt2).
Proof. exact (MK_COMB (@lem8373278 A) (@lem8373277 A B P s P1 G1 f lt2)). Qed.
Lemma lem8373280 {A B P : Type'} (s : P -> A) (P1 : type551 A B) (G1 : type548 A B) (lt2 : type1402 A) : (term2486 A B P s P1 G1 lt2) = (term2639 A B P s P1 G1 lt2).
Proof. exact (fun_ext (fun f : A -> B => @lem8373279 A B P s P1 G1 f lt2)). Qed.
Lemma lem8373281 {A B : Type'} : (@ex (A -> B)) = (@ex (A -> B)).
Proof. exact (eq_refl (@ex (A -> B))). Qed.
Lemma lem8373282 {A B P : Type'} (s : P -> A) (P1 : type551 A B) (G1 : type548 A B) (lt2 : type1402 A) : (term2501 A B P s P1 G1 lt2) = (term2640 A B P s P1 G1 lt2).
Proof. exact (MK_COMB (@lem8373281 A B) (@lem8373280 A B P s P1 G1 lt2)). Qed.
Lemma lem8373283 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (_114084 : type794 A P) (s : P -> A) (P1 : type551 A B) (G1 : type548 A B) (lt2 : type1402 A) : (term2502 A B P P2 G2 _114084 s P1 G1 lt2) = (term2641 A B P P2 G2 _114084 s P1 G1 lt2).
Proof. exact (MK_COMB (@lem8373256 A B P P2 G2 _114084 s lt2) (@lem8373282 A B P s P1 G1 lt2)). Qed.
Lemma lem8373285 {A : Type'} (P : A -> Prop) (Q : A -> Prop) : (term378 A P Q) = (term379 A P Q).
Proof. exact (EQ_MP (@lem18917 A P Q) (@lem18916 A P Q)). Qed.
Lemma lem8373286 {A B : Type'} (P : type572 A B) (Q : type572 A B) : (term2417 A B P Q) = (term2416 A B P Q).
Proof. exact (@lem8373285 (A -> B) P Q). Qed.
Lemma lem8373287 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (_114084 : type794 A P) (s : P -> A) (P1 : type551 A B) (G1 : type548 A B) (lt2 : type1402 A) : (term2642 A B P P2 G2 _114084 s P1 G1 lt2) = (term2643 A B P P2 G2 _114084 s P1 G1 lt2).
Proof. exact (@lem8373286 A B (term2622 A B P P2 G2 _114084 s lt2) (term2639 A B P s P1 G1 lt2)). Qed.
Lemma lem8373288 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (_114084 : type794 A P) (s : P -> A) (lt2 : type1402 A) : (term2644 A B P P2 G2 _114084 s lt2 f) = (term2621 A B P P2 G2 f _114084 s lt2).
Proof. exact (eq_refl (term2644 A B P P2 G2 _114084 s lt2 f)). Qed.
Lemma lem8373289 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (_114084 : type794 A P) (s : P -> A) (lt2 : type1402 A) : (term2645 A B P P2 G2 _114084 s lt2) = (term2622 A B P P2 G2 _114084 s lt2).
Proof. exact (fun_ext (fun f : A -> B => @lem8373288 A B P P2 G2 f _114084 s lt2)). Qed.
Lemma lem8373290 {A B : Type'} : (@ex (A -> B)) = (@ex (A -> B)).
Proof. exact (eq_refl (@ex (A -> B))). Qed.
Lemma lem8373291 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (_114084 : type794 A P) (s : P -> A) (lt2 : type1402 A) : (term2646 A B P P2 G2 _114084 s lt2) = (term2623 A B P P2 G2 _114084 s lt2).
Proof. exact (MK_COMB (@lem8373290 A B) (@lem8373289 A B P P2 G2 _114084 s lt2)). Qed.
Lemma lem8373292 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8373293 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (_114084 : type794 A P) (s : P -> A) (lt2 : type1402 A) : (term2647 A B P P2 G2 _114084 s lt2) = (term2624 A B P P2 G2 _114084 s lt2).
Proof. exact (MK_COMB (@lem8373292) (@lem8373291 A B P P2 G2 _114084 s lt2)). Qed.
Lemma lem8373294 {A B P : Type'} (s : P -> A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (lt2 : type1402 A) : (term2648 A B P s P1 G1 lt2 f) = (term2638 A B P s P1 G1 f lt2).
Proof. exact (eq_refl (term2648 A B P s P1 G1 lt2 f)). Qed.
Lemma lem8373295 {A B P : Type'} (s : P -> A) (P1 : type551 A B) (G1 : type548 A B) (lt2 : type1402 A) : (term2649 A B P s P1 G1 lt2) = (term2639 A B P s P1 G1 lt2).
Proof. exact (fun_ext (fun f : A -> B => @lem8373294 A B P s P1 G1 f lt2)). Qed.
Lemma lem8373296 {A B : Type'} : (@ex (A -> B)) = (@ex (A -> B)).
Proof. exact (eq_refl (@ex (A -> B))). Qed.
Lemma lem8373297 {A B P : Type'} (s : P -> A) (P1 : type551 A B) (G1 : type548 A B) (lt2 : type1402 A) : (term2650 A B P s P1 G1 lt2) = (term2640 A B P s P1 G1 lt2).
Proof. exact (MK_COMB (@lem8373296 A B) (@lem8373295 A B P s P1 G1 lt2)). Qed.
Lemma lem8373298 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (_114084 : type794 A P) (s : P -> A) (P1 : type551 A B) (G1 : type548 A B) (lt2 : type1402 A) : (term2642 A B P P2 G2 _114084 s P1 G1 lt2) = (term2641 A B P P2 G2 _114084 s P1 G1 lt2).
Proof. exact (MK_COMB (@lem8373293 A B P P2 G2 _114084 s lt2) (@lem8373297 A B P s P1 G1 lt2)). Qed.
Lemma lem8373299 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8373300 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (_114084 : type794 A P) (s : P -> A) (P1 : type551 A B) (G1 : type548 A B) (lt2 : type1402 A) : (term2651 A B P P2 G2 _114084 s P1 G1 lt2) = (term2652 A B P P2 G2 _114084 s P1 G1 lt2).
Proof. exact (MK_COMB (@lem8373299) (@lem8373298 A B P P2 G2 _114084 s P1 G1 lt2)). Qed.
Lemma lem8373301 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (_114084 : type794 A P) (s : P -> A) (lt2 : type1402 A) : (term2644 A B P P2 G2 _114084 s lt2 f) = (term2621 A B P P2 G2 f _114084 s lt2).
Proof. exact (eq_refl (term2644 A B P P2 G2 _114084 s lt2 f)). Qed.
Lemma lem8373302 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8373303 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (_114084 : type794 A P) (s : P -> A) (lt2 : type1402 A) : (term2653 A B P P2 G2 _114084 s lt2 f) = (term2654 A B P P2 G2 f _114084 s lt2).
Proof. exact (MK_COMB (@lem8373302) (@lem8373301 A B P P2 G2 f _114084 s lt2)). Qed.
Lemma lem8373304 {A B P : Type'} (s : P -> A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (lt2 : type1402 A) : (term2648 A B P s P1 G1 lt2 f) = (term2638 A B P s P1 G1 f lt2).
Proof. exact (eq_refl (term2648 A B P s P1 G1 lt2 f)). Qed.
Lemma lem8373305 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (_114084 : type794 A P) (s : P -> A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (lt2 : type1402 A) : (term2655 A B P P2 G2 _114084 s P1 G1 lt2 f) = (term2656 A B P P2 G2 _114084 s P1 G1 f lt2).
Proof. exact (MK_COMB (@lem8373303 A B P P2 G2 f _114084 s lt2) (@lem8373304 A B P s P1 G1 f lt2)). Qed.
Lemma lem8373306 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (_114084 : type794 A P) (s : P -> A) (P1 : type551 A B) (G1 : type548 A B) (lt2 : type1402 A) : (term2657 A B P P2 G2 _114084 s P1 G1 lt2) = (term2658 A B P P2 G2 _114084 s P1 G1 lt2).
Proof. exact (fun_ext (fun f : A -> B => @lem8373305 A B P P2 G2 _114084 s P1 G1 f lt2)). Qed.
Lemma lem8373307 {A B : Type'} : (@ex (A -> B)) = (@ex (A -> B)).
Proof. exact (eq_refl (@ex (A -> B))). Qed.
Lemma lem8373308 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (_114084 : type794 A P) (s : P -> A) (P1 : type551 A B) (G1 : type548 A B) (lt2 : type1402 A) : (term2643 A B P P2 G2 _114084 s P1 G1 lt2) = (term2659 A B P P2 G2 _114084 s P1 G1 lt2).
Proof. exact (MK_COMB (@lem8373307 A B) (@lem8373306 A B P P2 G2 _114084 s P1 G1 lt2)). Qed.
Lemma lem8373309 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (_114084 : type794 A P) (s : P -> A) (P1 : type551 A B) (G1 : type548 A B) (lt2 : type1402 A) : ((term2642 A B P P2 G2 _114084 s P1 G1 lt2) = (term2643 A B P P2 G2 _114084 s P1 G1 lt2)) = ((term2641 A B P P2 G2 _114084 s P1 G1 lt2) = (term2659 A B P P2 G2 _114084 s P1 G1 lt2)).
Proof. exact (MK_COMB (@lem8373300 A B P P2 G2 _114084 s P1 G1 lt2) (@lem8373308 A B P P2 G2 _114084 s P1 G1 lt2)). Qed.
Lemma lem8373310 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (_114084 : type794 A P) (s : P -> A) (P1 : type551 A B) (G1 : type548 A B) (lt2 : type1402 A) : (term2641 A B P P2 G2 _114084 s P1 G1 lt2) = (term2659 A B P P2 G2 _114084 s P1 G1 lt2).
Proof. exact (EQ_MP (@lem8373309 A B P P2 G2 _114084 s P1 G1 lt2) (@lem8373287 A B P P2 G2 _114084 s P1 G1 lt2)). Qed.
Lemma lem8373312 {A : Type'} (P : A -> Prop) (Q : A -> Prop) : (term378 A P Q) = (term379 A P Q).
Proof. exact (EQ_MP (@lem18917 A P Q) (@lem18916 A P Q)). Qed.
Lemma lem8373313 {A : Type'} (P : A -> Prop) (Q : A -> Prop) : (term378 A P Q) = (term379 A P Q).
Proof. exact (@lem8373312 A P Q). Qed.
Lemma lem8373314 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (_114084 : type794 A P) (s : P -> A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (lt2 : type1402 A) : (term2660 A B P P2 G2 _114084 s P1 G1 f lt2) = (term2661 A B P P2 G2 _114084 s P1 G1 f lt2).
Proof. exact (@lem8373313 A (term2620 A B P P2 G2 f _114084 s lt2) (term2637 A B P s P1 G1 f lt2)). Qed.
Lemma lem8373315 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (_114084 : type794 A P) (s : P -> A) (lt2 : type1402 A) (x : A) : (term2662 A B P P2 G2 f _114084 s lt2 x) = (term2619 A B P P2 G2 f _114084 s lt2 x).
Proof. exact (eq_refl (term2662 A B P P2 G2 f _114084 s lt2 x)). Qed.
Lemma lem8373316 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (_114084 : type794 A P) (s : P -> A) (lt2 : type1402 A) : (term2663 A B P P2 G2 f _114084 s lt2) = (term2620 A B P P2 G2 f _114084 s lt2).
Proof. exact (fun_ext (fun x : A => @lem8373315 A B P P2 G2 f _114084 s lt2 x)). Qed.
Lemma lem8373317 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem8373318 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (_114084 : type794 A P) (s : P -> A) (lt2 : type1402 A) : (term2664 A B P P2 G2 f _114084 s lt2) = (term2621 A B P P2 G2 f _114084 s lt2).
Proof. exact (MK_COMB (@lem8373317 A) (@lem8373316 A B P P2 G2 f _114084 s lt2)). Qed.
Lemma lem8373319 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8373320 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (_114084 : type794 A P) (s : P -> A) (lt2 : type1402 A) : (term2665 A B P P2 G2 f _114084 s lt2) = (term2654 A B P P2 G2 f _114084 s lt2).
Proof. exact (MK_COMB (@lem8373319) (@lem8373318 A B P P2 G2 f _114084 s lt2)). Qed.
Lemma lem8373321 {A B P : Type'} (s : P -> A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (lt2 : type1402 A) (x : A) : (term2666 A B P s P1 G1 f lt2 x) = (term2636 A B P s P1 G1 f lt2 x).
Proof. exact (eq_refl (term2666 A B P s P1 G1 f lt2 x)). Qed.
Lemma lem8373322 {A B P : Type'} (s : P -> A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (lt2 : type1402 A) : (term2667 A B P s P1 G1 f lt2) = (term2637 A B P s P1 G1 f lt2).
Proof. exact (fun_ext (fun x : A => @lem8373321 A B P s P1 G1 f lt2 x)). Qed.
Lemma lem8373323 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem8373324 {A B P : Type'} (s : P -> A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (lt2 : type1402 A) : (term2668 A B P s P1 G1 f lt2) = (term2638 A B P s P1 G1 f lt2).
Proof. exact (MK_COMB (@lem8373323 A) (@lem8373322 A B P s P1 G1 f lt2)). Qed.
Lemma lem8373325 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (_114084 : type794 A P) (s : P -> A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (lt2 : type1402 A) : (term2660 A B P P2 G2 _114084 s P1 G1 f lt2) = (term2656 A B P P2 G2 _114084 s P1 G1 f lt2).
Proof. exact (MK_COMB (@lem8373320 A B P P2 G2 f _114084 s lt2) (@lem8373324 A B P s P1 G1 f lt2)). Qed.
Lemma lem8373326 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8373327 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (_114084 : type794 A P) (s : P -> A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (lt2 : type1402 A) : (term2669 A B P P2 G2 _114084 s P1 G1 f lt2) = (term2670 A B P P2 G2 _114084 s P1 G1 f lt2).
Proof. exact (MK_COMB (@lem8373326) (@lem8373325 A B P P2 G2 _114084 s P1 G1 f lt2)). Qed.
Lemma lem8373328 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (_114084 : type794 A P) (s : P -> A) (lt2 : type1402 A) (x : A) : (term2662 A B P P2 G2 f _114084 s lt2 x) = (term2619 A B P P2 G2 f _114084 s lt2 x).
Proof. exact (eq_refl (term2662 A B P P2 G2 f _114084 s lt2 x)). Qed.
Lemma lem8373329 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8373330 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (_114084 : type794 A P) (s : P -> A) (lt2 : type1402 A) (x : A) : (term2671 A B P P2 G2 f _114084 s lt2 x) = (term2672 A B P P2 G2 f _114084 s lt2 x).
Proof. exact (MK_COMB (@lem8373329) (@lem8373328 A B P P2 G2 f _114084 s lt2 x)). Qed.
Lemma lem8373331 {A B P : Type'} (s : P -> A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (lt2 : type1402 A) (x : A) : (term2666 A B P s P1 G1 f lt2 x) = (term2636 A B P s P1 G1 f lt2 x).
Proof. exact (eq_refl (term2666 A B P s P1 G1 f lt2 x)). Qed.
Lemma lem8373332 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (_114084 : type794 A P) (s : P -> A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (lt2 : type1402 A) (x : A) : (term2673 A B P P2 G2 _114084 s P1 G1 f lt2 x) = (term2674 A B P P2 G2 _114084 s P1 G1 f lt2 x).
Proof. exact (MK_COMB (@lem8373330 A B P P2 G2 f _114084 s lt2 x) (@lem8373331 A B P s P1 G1 f lt2 x)). Qed.
Lemma lem8373333 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (_114084 : type794 A P) (s : P -> A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (lt2 : type1402 A) : (term2675 A B P P2 G2 _114084 s P1 G1 f lt2) = (term2676 A B P P2 G2 _114084 s P1 G1 f lt2).
Proof. exact (fun_ext (fun x : A => @lem8373332 A B P P2 G2 _114084 s P1 G1 f lt2 x)). Qed.
Lemma lem8373334 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem8373335 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (_114084 : type794 A P) (s : P -> A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (lt2 : type1402 A) : (term2661 A B P P2 G2 _114084 s P1 G1 f lt2) = (term2677 A B P P2 G2 _114084 s P1 G1 f lt2).
Proof. exact (MK_COMB (@lem8373334 A) (@lem8373333 A B P P2 G2 _114084 s P1 G1 f lt2)). Qed.
Lemma lem8373336 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (_114084 : type794 A P) (s : P -> A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (lt2 : type1402 A) : ((term2660 A B P P2 G2 _114084 s P1 G1 f lt2) = (term2661 A B P P2 G2 _114084 s P1 G1 f lt2)) = ((term2656 A B P P2 G2 _114084 s P1 G1 f lt2) = (term2677 A B P P2 G2 _114084 s P1 G1 f lt2)).
Proof. exact (MK_COMB (@lem8373327 A B P P2 G2 _114084 s P1 G1 f lt2) (@lem8373335 A B P P2 G2 _114084 s P1 G1 f lt2)). Qed.
Lemma lem8373337 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (_114084 : type794 A P) (s : P -> A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (lt2 : type1402 A) : (term2656 A B P P2 G2 _114084 s P1 G1 f lt2) = (term2677 A B P P2 G2 _114084 s P1 G1 f lt2).
Proof. exact (EQ_MP (@lem8373336 A B P P2 G2 _114084 s P1 G1 f lt2) (@lem8373314 A B P P2 G2 _114084 s P1 G1 f lt2)). Qed.
Lemma lem8373341 {A : Type'} (P : A -> Prop) (Q : Prop) : (term169 A P Q) = (term170 A P Q).
Proof. exact (EQ_MP (@lem18905 A P Q) (@lem18904 A P Q)). Qed.
Lemma lem8373342 {P : Type'} (P' : P -> Prop) (Q : Prop) : (term169 P P' Q) = (term170 P P' Q).
Proof. exact (@lem8373341 P P' Q). Qed.
Lemma lem8373343 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (_114084 : type794 A P) (s : P -> A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (lt2 : type1402 A) (x : A) : (term2678 A B P P2 G2 _114084 s P1 G1 f lt2 x) = (term2679 A B P P2 G2 _114084 s P1 G1 f lt2 x).
Proof. exact (@lem8373342 P (term2618 A B P P2 G2 f _114084 s lt2 x) (term2636 A B P s P1 G1 f lt2 x)). Qed.
Lemma lem8373344 {A B P : Type'} (y : P) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (_114084 : type794 A P) (s : P -> A) (lt2 : type1402 A) (x : A) : (term2680 A B P P2 G2 f _114084 s lt2 x y) = (term2617 A B P y P2 G2 f _114084 s lt2 x).
Proof. exact (eq_refl (term2680 A B P P2 G2 f _114084 s lt2 x y)). Qed.
Lemma lem8373345 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (_114084 : type794 A P) (s : P -> A) (lt2 : type1402 A) (x : A) : (term2681 A B P P2 G2 f _114084 s lt2 x) = (term2618 A B P P2 G2 f _114084 s lt2 x).
Proof. exact (fun_ext (fun y : P => @lem8373344 A B P y P2 G2 f _114084 s lt2 x)). Qed.
Lemma lem8373346 {P : Type'} : (@ex P) = (@ex P).
Proof. exact (eq_refl (@ex P)). Qed.
Lemma lem8373347 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (_114084 : type794 A P) (s : P -> A) (lt2 : type1402 A) (x : A) : (term2682 A B P P2 G2 f _114084 s lt2 x) = (term2619 A B P P2 G2 f _114084 s lt2 x).
Proof. exact (MK_COMB (@lem8373346 P) (@lem8373345 A B P P2 G2 f _114084 s lt2 x)). Qed.
Lemma lem8373348 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8373349 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (_114084 : type794 A P) (s : P -> A) (lt2 : type1402 A) (x : A) : (term2683 A B P P2 G2 f _114084 s lt2 x) = (term2672 A B P P2 G2 f _114084 s lt2 x).
Proof. exact (MK_COMB (@lem8373348) (@lem8373347 A B P P2 G2 f _114084 s lt2 x)). Qed.
Lemma lem8373350 {A B P : Type'} (s : P -> A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (lt2 : type1402 A) (x : A) : (term2636 A B P s P1 G1 f lt2 x) = (term2636 A B P s P1 G1 f lt2 x).
Proof. exact (eq_refl (term2636 A B P s P1 G1 f lt2 x)). Qed.
Lemma lem8373351 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (_114084 : type794 A P) (s : P -> A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (lt2 : type1402 A) (x : A) : (term2678 A B P P2 G2 _114084 s P1 G1 f lt2 x) = (term2674 A B P P2 G2 _114084 s P1 G1 f lt2 x).
Proof. exact (MK_COMB (@lem8373349 A B P P2 G2 f _114084 s lt2 x) (@lem8373350 A B P s P1 G1 f lt2 x)). Qed.
Lemma lem8373352 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8373353 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (_114084 : type794 A P) (s : P -> A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (lt2 : type1402 A) (x : A) : (term2684 A B P P2 G2 _114084 s P1 G1 f lt2 x) = (term2685 A B P P2 G2 _114084 s P1 G1 f lt2 x).
Proof. exact (MK_COMB (@lem8373352) (@lem8373351 A B P P2 G2 _114084 s P1 G1 f lt2 x)). Qed.
Lemma lem8373354 {A B P : Type'} (y : P) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (_114084 : type794 A P) (s : P -> A) (lt2 : type1402 A) (x : A) : (term2680 A B P P2 G2 f _114084 s lt2 x y) = (term2617 A B P y P2 G2 f _114084 s lt2 x).
Proof. exact (eq_refl (term2680 A B P P2 G2 f _114084 s lt2 x y)). Qed.
Lemma lem8373355 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8373356 {A B P : Type'} (y : P) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (_114084 : type794 A P) (s : P -> A) (lt2 : type1402 A) (x : A) : (term2686 A B P P2 G2 f _114084 s lt2 x y) = (term2687 A B P y P2 G2 f _114084 s lt2 x).
Proof. exact (MK_COMB (@lem8373355) (@lem8373354 A B P y P2 G2 f _114084 s lt2 x)). Qed.
Lemma lem8373357 {A B P : Type'} (s : P -> A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (lt2 : type1402 A) (x : A) : (term2636 A B P s P1 G1 f lt2 x) = (term2636 A B P s P1 G1 f lt2 x).
Proof. exact (eq_refl (term2636 A B P s P1 G1 f lt2 x)). Qed.
Lemma lem8373358 {A B P : Type'} (y : P) (P2 : type560 A B P) (G2 : type557 A B P) (_114084 : type794 A P) (s : P -> A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (lt2 : type1402 A) (x : A) : (term2688 A B P P2 G2 _114084 y s P1 G1 f lt2 x) = (term2689 A B P y P2 G2 _114084 s P1 G1 f lt2 x).
Proof. exact (MK_COMB (@lem8373356 A B P y P2 G2 f _114084 s lt2 x) (@lem8373357 A B P s P1 G1 f lt2 x)). Qed.
Lemma lem8373359 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (_114084 : type794 A P) (s : P -> A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (lt2 : type1402 A) (x : A) : (term2690 A B P P2 G2 _114084 s P1 G1 f lt2 x) = (term2691 A B P P2 G2 _114084 s P1 G1 f lt2 x).
Proof. exact (fun_ext (fun y : P => @lem8373358 A B P y P2 G2 _114084 s P1 G1 f lt2 x)). Qed.
Lemma lem8373360 {P : Type'} : (@ex P) = (@ex P).
Proof. exact (eq_refl (@ex P)). Qed.
Lemma lem8373361 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (_114084 : type794 A P) (s : P -> A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (lt2 : type1402 A) (x : A) : (term2679 A B P P2 G2 _114084 s P1 G1 f lt2 x) = (term2692 A B P P2 G2 _114084 s P1 G1 f lt2 x).
Proof. exact (MK_COMB (@lem8373360 P) (@lem8373359 A B P P2 G2 _114084 s P1 G1 f lt2 x)). Qed.
Lemma lem8373362 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (_114084 : type794 A P) (s : P -> A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (lt2 : type1402 A) (x : A) : ((term2678 A B P P2 G2 _114084 s P1 G1 f lt2 x) = (term2679 A B P P2 G2 _114084 s P1 G1 f lt2 x)) = ((term2674 A B P P2 G2 _114084 s P1 G1 f lt2 x) = (term2692 A B P P2 G2 _114084 s P1 G1 f lt2 x)).
Proof. exact (MK_COMB (@lem8373353 A B P P2 G2 _114084 s P1 G1 f lt2 x) (@lem8373361 A B P P2 G2 _114084 s P1 G1 f lt2 x)). Qed.
Lemma lem8373363 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (_114084 : type794 A P) (s : P -> A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (lt2 : type1402 A) (x : A) : (term2674 A B P P2 G2 _114084 s P1 G1 f lt2 x) = (term2692 A B P P2 G2 _114084 s P1 G1 f lt2 x).
Proof. exact (EQ_MP (@lem8373362 A B P P2 G2 _114084 s P1 G1 f lt2 x) (@lem8373343 A B P P2 G2 _114084 s P1 G1 f lt2 x)). Qed.
Lemma lem8373365 {A : Type'} (P : A -> Prop) (Q : A -> Prop) : (term378 A P Q) = (term379 A P Q).
Proof. exact (EQ_MP (@lem18917 A P Q) (@lem18916 A P Q)). Qed.
Lemma lem8373366 {A : Type'} (P : A -> Prop) (Q : A -> Prop) : (term378 A P Q) = (term379 A P Q).
Proof. exact (@lem8373365 A P Q). Qed.
Lemma lem8373367 {A B P : Type'} (y : P) (P2 : type560 A B P) (G2 : type557 A B P) (_114084 : type794 A P) (s : P -> A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (lt2 : type1402 A) (x : A) : (term2693 A B P y P2 G2 _114084 s P1 G1 f lt2 x) = (term2694 A B P y P2 G2 _114084 s P1 G1 f lt2 x).
Proof. exact (@lem8373366 A (term2616 A B P y P2 G2 f _114084 s lt2 x) (term2635 A B P s P1 G1 f lt2 x)). Qed.
Lemma lem8373368 {A B P : Type'} (y : P) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (_114084 : type794 A P) (s : P -> A) (lt2 : type1402 A) (y' : A) (x : A) : (term2695 A B P y P2 G2 f _114084 s lt2 x y') = (term2614 A B P y P2 G2 f _114084 s lt2 y' x).
Proof. exact (eq_refl (term2695 A B P y P2 G2 f _114084 s lt2 x y')). Qed.
Lemma lem8373369 {A B P : Type'} (y : P) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (_114084 : type794 A P) (s : P -> A) (lt2 : type1402 A) (x : A) : (term2696 A B P y P2 G2 f _114084 s lt2 x) = (term2616 A B P y P2 G2 f _114084 s lt2 x).
Proof. exact (fun_ext (fun y' : A => @lem8373368 A B P y P2 G2 f _114084 s lt2 y' x)). Qed.
Lemma lem8373370 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem8373371 {A B P : Type'} (y : P) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (_114084 : type794 A P) (s : P -> A) (lt2 : type1402 A) (x : A) : (term2697 A B P y P2 G2 f _114084 s lt2 x) = (term2617 A B P y P2 G2 f _114084 s lt2 x).
Proof. exact (MK_COMB (@lem8373370 A) (@lem8373369 A B P y P2 G2 f _114084 s lt2 x)). Qed.
Lemma lem8373372 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8373373 {A B P : Type'} (y : P) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (_114084 : type794 A P) (s : P -> A) (lt2 : type1402 A) (x : A) : (term2698 A B P y P2 G2 f _114084 s lt2 x) = (term2687 A B P y P2 G2 f _114084 s lt2 x).
Proof. exact (MK_COMB (@lem8373372) (@lem8373371 A B P y P2 G2 f _114084 s lt2 x)). Qed.
Lemma lem8373374 {A B P : Type'} (s : P -> A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (lt2 : type1402 A) (y : A) (x : A) : (term2699 A B P s P1 G1 f lt2 x y) = (term2633 A B P s P1 G1 f lt2 y x).
Proof. exact (eq_refl (term2699 A B P s P1 G1 f lt2 x y)). Qed.
Lemma lem8373375 {A B P : Type'} (s : P -> A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (lt2 : type1402 A) (x : A) : (term2700 A B P s P1 G1 f lt2 x) = (term2635 A B P s P1 G1 f lt2 x).
Proof. exact (fun_ext (fun y : A => @lem8373374 A B P s P1 G1 f lt2 y x)). Qed.
Lemma lem8373376 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem8373377 {A B P : Type'} (s : P -> A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (lt2 : type1402 A) (x : A) : (term2701 A B P s P1 G1 f lt2 x) = (term2636 A B P s P1 G1 f lt2 x).
Proof. exact (MK_COMB (@lem8373376 A) (@lem8373375 A B P s P1 G1 f lt2 x)). Qed.
Lemma lem8373378 {A B P : Type'} (y : P) (P2 : type560 A B P) (G2 : type557 A B P) (_114084 : type794 A P) (s : P -> A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (lt2 : type1402 A) (x : A) : (term2693 A B P y P2 G2 _114084 s P1 G1 f lt2 x) = (term2689 A B P y P2 G2 _114084 s P1 G1 f lt2 x).
Proof. exact (MK_COMB (@lem8373373 A B P y P2 G2 f _114084 s lt2 x) (@lem8373377 A B P s P1 G1 f lt2 x)). Qed.
Lemma lem8373379 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8373380 {A B P : Type'} (y : P) (P2 : type560 A B P) (G2 : type557 A B P) (_114084 : type794 A P) (s : P -> A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (lt2 : type1402 A) (x : A) : (term2702 A B P y P2 G2 _114084 s P1 G1 f lt2 x) = (term2703 A B P y P2 G2 _114084 s P1 G1 f lt2 x).
Proof. exact (MK_COMB (@lem8373379) (@lem8373378 A B P y P2 G2 _114084 s P1 G1 f lt2 x)). Qed.
Lemma lem8373381 {A B P : Type'} (y : P) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (_114084 : type794 A P) (s : P -> A) (lt2 : type1402 A) (y' : A) (x : A) : (term2695 A B P y P2 G2 f _114084 s lt2 x y') = (term2614 A B P y P2 G2 f _114084 s lt2 y' x).
Proof. exact (eq_refl (term2695 A B P y P2 G2 f _114084 s lt2 x y')). Qed.
Lemma lem8373382 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8373383 {A B P : Type'} (y : P) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (_114084 : type794 A P) (s : P -> A) (lt2 : type1402 A) (y' : A) (x : A) : (term2704 A B P y P2 G2 f _114084 s lt2 x y') = (term2705 A B P y P2 G2 f _114084 s lt2 y' x).
Proof. exact (MK_COMB (@lem8373382) (@lem8373381 A B P y P2 G2 f _114084 s lt2 y' x)). Qed.
Lemma lem8373384 {A B P : Type'} (s : P -> A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (lt2 : type1402 A) (y : A) (x : A) : (term2699 A B P s P1 G1 f lt2 x y) = (term2633 A B P s P1 G1 f lt2 y x).
Proof. exact (eq_refl (term2699 A B P s P1 G1 f lt2 x y)). Qed.
Lemma lem8373385 {A B P : Type'} (y : P) (P2 : type560 A B P) (G2 : type557 A B P) (_114084 : type794 A P) (s : P -> A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (lt2 : type1402 A) (y' : A) (x : A) : (term2706 A B P y P2 G2 _114084 s P1 G1 f lt2 x y') = (term2707 A B P y P2 G2 _114084 s P1 G1 f lt2 y' x).
Proof. exact (MK_COMB (@lem8373383 A B P y P2 G2 f _114084 s lt2 y' x) (@lem8373384 A B P s P1 G1 f lt2 y' x)). Qed.
Lemma lem8373386 {A B P : Type'} (y : P) (P2 : type560 A B P) (G2 : type557 A B P) (_114084 : type794 A P) (s : P -> A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (lt2 : type1402 A) (x : A) : (term2708 A B P y P2 G2 _114084 s P1 G1 f lt2 x) = (term2709 A B P y P2 G2 _114084 s P1 G1 f lt2 x).
Proof. exact (fun_ext (fun y' : A => @lem8373385 A B P y P2 G2 _114084 s P1 G1 f lt2 y' x)). Qed.
Lemma lem8373387 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem8373388 {A B P : Type'} (y : P) (P2 : type560 A B P) (G2 : type557 A B P) (_114084 : type794 A P) (s : P -> A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (lt2 : type1402 A) (x : A) : (term2694 A B P y P2 G2 _114084 s P1 G1 f lt2 x) = (term2710 A B P y P2 G2 _114084 s P1 G1 f lt2 x).
Proof. exact (MK_COMB (@lem8373387 A) (@lem8373386 A B P y P2 G2 _114084 s P1 G1 f lt2 x)). Qed.
Lemma lem8373389 {A B P : Type'} (y : P) (P2 : type560 A B P) (G2 : type557 A B P) (_114084 : type794 A P) (s : P -> A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (lt2 : type1402 A) (x : A) : ((term2693 A B P y P2 G2 _114084 s P1 G1 f lt2 x) = (term2694 A B P y P2 G2 _114084 s P1 G1 f lt2 x)) = ((term2689 A B P y P2 G2 _114084 s P1 G1 f lt2 x) = (term2710 A B P y P2 G2 _114084 s P1 G1 f lt2 x)).
Proof. exact (MK_COMB (@lem8373380 A B P y P2 G2 _114084 s P1 G1 f lt2 x) (@lem8373388 A B P y P2 G2 _114084 s P1 G1 f lt2 x)). Qed.
Lemma lem8373390 {A B P : Type'} (y : P) (P2 : type560 A B P) (G2 : type557 A B P) (_114084 : type794 A P) (s : P -> A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (lt2 : type1402 A) (x : A) : (term2689 A B P y P2 G2 _114084 s P1 G1 f lt2 x) = (term2710 A B P y P2 G2 _114084 s P1 G1 f lt2 x).
Proof. exact (EQ_MP (@lem8373389 A B P y P2 G2 _114084 s P1 G1 f lt2 x) (@lem8373367 A B P y P2 G2 _114084 s P1 G1 f lt2 x)). Qed.
Lemma lem8373391 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (_114084 : type794 A P) (s : P -> A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (lt2 : type1402 A) (x : A) : (term2691 A B P P2 G2 _114084 s P1 G1 f lt2 x) = (term2711 A B P P2 G2 _114084 s P1 G1 f lt2 x).
Proof. exact (fun_ext (fun y : P => @lem8373390 A B P y P2 G2 _114084 s P1 G1 f lt2 x)). Qed.
Lemma lem8373392 {P : Type'} : (@ex P) = (@ex P).
Proof. exact (eq_refl (@ex P)). Qed.
Lemma lem8373393 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (_114084 : type794 A P) (s : P -> A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (lt2 : type1402 A) (x : A) : (term2692 A B P P2 G2 _114084 s P1 G1 f lt2 x) = (term2712 A B P P2 G2 _114084 s P1 G1 f lt2 x).
Proof. exact (MK_COMB (@lem8373392 P) (@lem8373391 A B P P2 G2 _114084 s P1 G1 f lt2 x)). Qed.
Lemma lem8373394 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (_114084 : type794 A P) (s : P -> A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (lt2 : type1402 A) (x : A) : (term2674 A B P P2 G2 _114084 s P1 G1 f lt2 x) = (term2712 A B P P2 G2 _114084 s P1 G1 f lt2 x).
Proof. exact (TRANS (@lem8373363 A B P P2 G2 _114084 s P1 G1 f lt2 x) (@lem8373393 A B P P2 G2 _114084 s P1 G1 f lt2 x)). Qed.
Lemma lem8373395 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (_114084 : type794 A P) (s : P -> A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (lt2 : type1402 A) : (term2676 A B P P2 G2 _114084 s P1 G1 f lt2) = (term2713 A B P P2 G2 _114084 s P1 G1 f lt2).
Proof. exact (fun_ext (fun x : A => @lem8373394 A B P P2 G2 _114084 s P1 G1 f lt2 x)). Qed.
Lemma lem8373396 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem8373397 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (_114084 : type794 A P) (s : P -> A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (lt2 : type1402 A) : (term2677 A B P P2 G2 _114084 s P1 G1 f lt2) = (term2714 A B P P2 G2 _114084 s P1 G1 f lt2).
Proof. exact (MK_COMB (@lem8373396 A) (@lem8373395 A B P P2 G2 _114084 s P1 G1 f lt2)). Qed.
Lemma lem8373398 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (_114084 : type794 A P) (s : P -> A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (lt2 : type1402 A) : (term2656 A B P P2 G2 _114084 s P1 G1 f lt2) = (term2714 A B P P2 G2 _114084 s P1 G1 f lt2).
Proof. exact (TRANS (@lem8373337 A B P P2 G2 _114084 s P1 G1 f lt2) (@lem8373397 A B P P2 G2 _114084 s P1 G1 f lt2)). Qed.
Lemma lem8373399 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (_114084 : type794 A P) (s : P -> A) (P1 : type551 A B) (G1 : type548 A B) (lt2 : type1402 A) : (term2658 A B P P2 G2 _114084 s P1 G1 lt2) = (term2715 A B P P2 G2 _114084 s P1 G1 lt2).
Proof. exact (fun_ext (fun f : A -> B => @lem8373398 A B P P2 G2 _114084 s P1 G1 f lt2)). Qed.
Lemma lem8373400 {A B : Type'} : (@ex (A -> B)) = (@ex (A -> B)).
Proof. exact (eq_refl (@ex (A -> B))). Qed.
Lemma lem8373401 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (_114084 : type794 A P) (s : P -> A) (P1 : type551 A B) (G1 : type548 A B) (lt2 : type1402 A) : (term2659 A B P P2 G2 _114084 s P1 G1 lt2) = (term2716 A B P P2 G2 _114084 s P1 G1 lt2).
Proof. exact (MK_COMB (@lem8373400 A B) (@lem8373399 A B P P2 G2 _114084 s P1 G1 lt2)). Qed.
Lemma lem8373402 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (_114084 : type794 A P) (s : P -> A) (P1 : type551 A B) (G1 : type548 A B) (lt2 : type1402 A) : (term2641 A B P P2 G2 _114084 s P1 G1 lt2) = (term2716 A B P P2 G2 _114084 s P1 G1 lt2).
Proof. exact (TRANS (@lem8373310 A B P P2 G2 _114084 s P1 G1 lt2) (@lem8373401 A B P P2 G2 _114084 s P1 G1 lt2)). Qed.
Lemma lem8373403 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (_114084 : type794 A P) (s : P -> A) (P1 : type551 A B) (G1 : type548 A B) (lt2 : type1402 A) : (term2502 A B P P2 G2 _114084 s P1 G1 lt2) = (term2716 A B P P2 G2 _114084 s P1 G1 lt2).
Proof. exact (TRANS (@lem8373283 A B P P2 G2 _114084 s P1 G1 lt2) (@lem8373402 A B P P2 G2 _114084 s P1 G1 lt2)). Qed.
Lemma lem8373404 {A B P : Type'} (H2 : type558 A B P) (H1 : type549 A B) (P2 : type560 A B P) (G2 : type557 A B P) (_114084 : type794 A P) (s : P -> A) (P1 : type551 A B) (G1 : type548 A B) (lt2 : type1402 A) : (term2503 A B P H2 H1 P2 G2 _114084 s P1 G1 lt2) = (term2717 A B P H2 H1 P2 G2 _114084 s P1 G1 lt2).
Proof. exact (MK_COMB (@lem8373200 A B P P2 G2 H2 _114084 s lt2 P1 G1 H1) (@lem8373403 A B P P2 G2 _114084 s P1 G1 lt2)). Qed.
Lemma lem8373406 {A : Type'} (P : A -> Prop) (Q : A -> Prop) : (term378 A P Q) = (term379 A P Q).
Proof. exact (EQ_MP (@lem18917 A P Q) (@lem18916 A P Q)). Qed.
Lemma lem8373407 {A B : Type'} (P : type572 A B) (Q : type572 A B) : (term2417 A B P Q) = (term2416 A B P Q).
Proof. exact (@lem8373406 (A -> B) P Q). Qed.
Lemma lem8373408 {A B P : Type'} (H2 : type558 A B P) (H1 : type549 A B) (P2 : type560 A B P) (G2 : type557 A B P) (_114084 : type794 A P) (s : P -> A) (P1 : type551 A B) (G1 : type548 A B) (lt2 : type1402 A) : (term2718 A B P H2 H1 P2 G2 _114084 s P1 G1 lt2) = (term2719 A B P H2 H1 P2 G2 _114084 s P1 G1 lt2).
Proof. exact (@lem8373407 A B (term2592 A B P P2 G2 H2 _114084 s lt2 P1 G1 H1) (term2715 A B P P2 G2 _114084 s P1 G1 lt2)). Qed.
Lemma lem8373409 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (_114084 : type794 A P) (s : P -> A) (lt2 : type1402 A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (H1 : type549 A B) : (term2720 A B P P2 G2 H2 _114084 s lt2 P1 G1 H1 f) = (term2591 A B P P2 G2 H2 _114084 s lt2 P1 G1 f H1).
Proof. exact (eq_refl (term2720 A B P P2 G2 H2 _114084 s lt2 P1 G1 H1 f)). Qed.
Lemma lem8373410 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (_114084 : type794 A P) (s : P -> A) (lt2 : type1402 A) (P1 : type551 A B) (G1 : type548 A B) (H1 : type549 A B) : (term2721 A B P P2 G2 H2 _114084 s lt2 P1 G1 H1) = (term2592 A B P P2 G2 H2 _114084 s lt2 P1 G1 H1).
Proof. exact (fun_ext (fun f : A -> B => @lem8373409 A B P P2 G2 H2 _114084 s lt2 P1 G1 f H1)). Qed.
Lemma lem8373411 {A B : Type'} : (@ex (A -> B)) = (@ex (A -> B)).
Proof. exact (eq_refl (@ex (A -> B))). Qed.
Lemma lem8373412 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (_114084 : type794 A P) (s : P -> A) (lt2 : type1402 A) (P1 : type551 A B) (G1 : type548 A B) (H1 : type549 A B) : (term2722 A B P P2 G2 H2 _114084 s lt2 P1 G1 H1) = (term2593 A B P P2 G2 H2 _114084 s lt2 P1 G1 H1).
Proof. exact (MK_COMB (@lem8373411 A B) (@lem8373410 A B P P2 G2 H2 _114084 s lt2 P1 G1 H1)). Qed.
Lemma lem8373413 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8373414 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (_114084 : type794 A P) (s : P -> A) (lt2 : type1402 A) (P1 : type551 A B) (G1 : type548 A B) (H1 : type549 A B) : (term2723 A B P P2 G2 H2 _114084 s lt2 P1 G1 H1) = (term2594 A B P P2 G2 H2 _114084 s lt2 P1 G1 H1).
Proof. exact (MK_COMB (@lem8373413) (@lem8373412 A B P P2 G2 H2 _114084 s lt2 P1 G1 H1)). Qed.
Lemma lem8373415 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (_114084 : type794 A P) (s : P -> A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (lt2 : type1402 A) : (term2724 A B P P2 G2 _114084 s P1 G1 lt2 f) = (term2714 A B P P2 G2 _114084 s P1 G1 f lt2).
Proof. exact (eq_refl (term2724 A B P P2 G2 _114084 s P1 G1 lt2 f)). Qed.
Lemma lem8373416 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (_114084 : type794 A P) (s : P -> A) (P1 : type551 A B) (G1 : type548 A B) (lt2 : type1402 A) : (term2725 A B P P2 G2 _114084 s P1 G1 lt2) = (term2715 A B P P2 G2 _114084 s P1 G1 lt2).
Proof. exact (fun_ext (fun f : A -> B => @lem8373415 A B P P2 G2 _114084 s P1 G1 f lt2)). Qed.
Lemma lem8373417 {A B : Type'} : (@ex (A -> B)) = (@ex (A -> B)).
Proof. exact (eq_refl (@ex (A -> B))). Qed.
Lemma lem8373418 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (_114084 : type794 A P) (s : P -> A) (P1 : type551 A B) (G1 : type548 A B) (lt2 : type1402 A) : (term2726 A B P P2 G2 _114084 s P1 G1 lt2) = (term2716 A B P P2 G2 _114084 s P1 G1 lt2).
Proof. exact (MK_COMB (@lem8373417 A B) (@lem8373416 A B P P2 G2 _114084 s P1 G1 lt2)). Qed.
Lemma lem8373419 {A B P : Type'} (H2 : type558 A B P) (H1 : type549 A B) (P2 : type560 A B P) (G2 : type557 A B P) (_114084 : type794 A P) (s : P -> A) (P1 : type551 A B) (G1 : type548 A B) (lt2 : type1402 A) : (term2718 A B P H2 H1 P2 G2 _114084 s P1 G1 lt2) = (term2717 A B P H2 H1 P2 G2 _114084 s P1 G1 lt2).
Proof. exact (MK_COMB (@lem8373414 A B P P2 G2 H2 _114084 s lt2 P1 G1 H1) (@lem8373418 A B P P2 G2 _114084 s P1 G1 lt2)). Qed.
Lemma lem8373420 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8373421 {A B P : Type'} (H2 : type558 A B P) (H1 : type549 A B) (P2 : type560 A B P) (G2 : type557 A B P) (_114084 : type794 A P) (s : P -> A) (P1 : type551 A B) (G1 : type548 A B) (lt2 : type1402 A) : (term2727 A B P H2 H1 P2 G2 _114084 s P1 G1 lt2) = (term2728 A B P H2 H1 P2 G2 _114084 s P1 G1 lt2).
Proof. exact (MK_COMB (@lem8373420) (@lem8373419 A B P H2 H1 P2 G2 _114084 s P1 G1 lt2)). Qed.
Lemma lem8373422 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (_114084 : type794 A P) (s : P -> A) (lt2 : type1402 A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (H1 : type549 A B) : (term2720 A B P P2 G2 H2 _114084 s lt2 P1 G1 H1 f) = (term2591 A B P P2 G2 H2 _114084 s lt2 P1 G1 f H1).
Proof. exact (eq_refl (term2720 A B P P2 G2 H2 _114084 s lt2 P1 G1 H1 f)). Qed.
Lemma lem8373423 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8373424 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (_114084 : type794 A P) (s : P -> A) (lt2 : type1402 A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (H1 : type549 A B) : (term2729 A B P P2 G2 H2 _114084 s lt2 P1 G1 H1 f) = (term2730 A B P P2 G2 H2 _114084 s lt2 P1 G1 f H1).
Proof. exact (MK_COMB (@lem8373423) (@lem8373422 A B P P2 G2 H2 _114084 s lt2 P1 G1 f H1)). Qed.
Lemma lem8373425 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (_114084 : type794 A P) (s : P -> A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (lt2 : type1402 A) : (term2724 A B P P2 G2 _114084 s P1 G1 lt2 f) = (term2714 A B P P2 G2 _114084 s P1 G1 f lt2).
Proof. exact (eq_refl (term2724 A B P P2 G2 _114084 s P1 G1 lt2 f)). Qed.
Lemma lem8373426 {A B P : Type'} (H2 : type558 A B P) (H1 : type549 A B) (P2 : type560 A B P) (G2 : type557 A B P) (_114084 : type794 A P) (s : P -> A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (lt2 : type1402 A) : (term2731 A B P H2 H1 P2 G2 _114084 s P1 G1 lt2 f) = (term2732 A B P H2 H1 P2 G2 _114084 s P1 G1 f lt2).
Proof. exact (MK_COMB (@lem8373424 A B P P2 G2 H2 _114084 s lt2 P1 G1 f H1) (@lem8373425 A B P P2 G2 _114084 s P1 G1 f lt2)). Qed.
Lemma lem8373427 {A B P : Type'} (H2 : type558 A B P) (H1 : type549 A B) (P2 : type560 A B P) (G2 : type557 A B P) (_114084 : type794 A P) (s : P -> A) (P1 : type551 A B) (G1 : type548 A B) (lt2 : type1402 A) : (term2733 A B P H2 H1 P2 G2 _114084 s P1 G1 lt2) = (term2734 A B P H2 H1 P2 G2 _114084 s P1 G1 lt2).
Proof. exact (fun_ext (fun f : A -> B => @lem8373426 A B P H2 H1 P2 G2 _114084 s P1 G1 f lt2)). Qed.
Lemma lem8373428 {A B : Type'} : (@ex (A -> B)) = (@ex (A -> B)).
Proof. exact (eq_refl (@ex (A -> B))). Qed.
Lemma lem8373429 {A B P : Type'} (H2 : type558 A B P) (H1 : type549 A B) (P2 : type560 A B P) (G2 : type557 A B P) (_114084 : type794 A P) (s : P -> A) (P1 : type551 A B) (G1 : type548 A B) (lt2 : type1402 A) : (term2719 A B P H2 H1 P2 G2 _114084 s P1 G1 lt2) = (term2735 A B P H2 H1 P2 G2 _114084 s P1 G1 lt2).
Proof. exact (MK_COMB (@lem8373428 A B) (@lem8373427 A B P H2 H1 P2 G2 _114084 s P1 G1 lt2)). Qed.
Lemma lem8373430 {A B P : Type'} (H2 : type558 A B P) (H1 : type549 A B) (P2 : type560 A B P) (G2 : type557 A B P) (_114084 : type794 A P) (s : P -> A) (P1 : type551 A B) (G1 : type548 A B) (lt2 : type1402 A) : ((term2718 A B P H2 H1 P2 G2 _114084 s P1 G1 lt2) = (term2719 A B P H2 H1 P2 G2 _114084 s P1 G1 lt2)) = ((term2717 A B P H2 H1 P2 G2 _114084 s P1 G1 lt2) = (term2735 A B P H2 H1 P2 G2 _114084 s P1 G1 lt2)).
Proof. exact (MK_COMB (@lem8373421 A B P H2 H1 P2 G2 _114084 s P1 G1 lt2) (@lem8373429 A B P H2 H1 P2 G2 _114084 s P1 G1 lt2)). Qed.
Lemma lem8373431 {A B P : Type'} (H2 : type558 A B P) (H1 : type549 A B) (P2 : type560 A B P) (G2 : type557 A B P) (_114084 : type794 A P) (s : P -> A) (P1 : type551 A B) (G1 : type548 A B) (lt2 : type1402 A) : (term2717 A B P H2 H1 P2 G2 _114084 s P1 G1 lt2) = (term2735 A B P H2 H1 P2 G2 _114084 s P1 G1 lt2).
Proof. exact (EQ_MP (@lem8373430 A B P H2 H1 P2 G2 _114084 s P1 G1 lt2) (@lem8373408 A B P H2 H1 P2 G2 _114084 s P1 G1 lt2)). Qed.
Lemma lem8373435 {A : Type'} (P : A -> Prop) (Q : Prop) : (term169 A P Q) = (term170 A P Q).
Proof. exact (EQ_MP (@lem18905 A P Q) (@lem18904 A P Q)). Qed.
Lemma lem8373436 {A B : Type'} (P : type572 A B) (Q : Prop) : (term2736 A B P Q) = (term2737 A B P Q).
Proof. exact (@lem8373435 (A -> B) P Q). Qed.
Lemma lem8373437 {A B P : Type'} (H2 : type558 A B P) (H1 : type549 A B) (P2 : type560 A B P) (G2 : type557 A B P) (_114084 : type794 A P) (s : P -> A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (lt2 : type1402 A) : (term2738 A B P H2 H1 P2 G2 _114084 s P1 G1 f lt2) = (term2739 A B P H2 H1 P2 G2 _114084 s P1 G1 f lt2).
Proof. exact (@lem8373436 A B (term2590 A B P P2 G2 H2 _114084 s lt2 P1 G1 f H1) (term2714 A B P P2 G2 _114084 s P1 G1 f lt2)). Qed.
Lemma lem8373438 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (_114084 : type794 A P) (s : P -> A) (lt2 : type1402 A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (H1 : type549 A B) (g : A -> B) : (term2740 A B P P2 G2 H2 _114084 s lt2 P1 G1 f H1 g) = (term2589 A B P P2 G2 H2 _114084 s lt2 P1 G1 f H1 g).
Proof. exact (eq_refl (term2740 A B P P2 G2 H2 _114084 s lt2 P1 G1 f H1 g)). Qed.
Lemma lem8373439 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (_114084 : type794 A P) (s : P -> A) (lt2 : type1402 A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (H1 : type549 A B) : (term2741 A B P P2 G2 H2 _114084 s lt2 P1 G1 f H1) = (term2590 A B P P2 G2 H2 _114084 s lt2 P1 G1 f H1).
Proof. exact (fun_ext (fun g : A -> B => @lem8373438 A B P P2 G2 H2 _114084 s lt2 P1 G1 f H1 g)). Qed.
Lemma lem8373440 {A B : Type'} : (@ex (A -> B)) = (@ex (A -> B)).
Proof. exact (eq_refl (@ex (A -> B))). Qed.
Lemma lem8373441 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (_114084 : type794 A P) (s : P -> A) (lt2 : type1402 A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (H1 : type549 A B) : (term2742 A B P P2 G2 H2 _114084 s lt2 P1 G1 f H1) = (term2591 A B P P2 G2 H2 _114084 s lt2 P1 G1 f H1).
Proof. exact (MK_COMB (@lem8373440 A B) (@lem8373439 A B P P2 G2 H2 _114084 s lt2 P1 G1 f H1)). Qed.
Lemma lem8373442 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8373443 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (_114084 : type794 A P) (s : P -> A) (lt2 : type1402 A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (H1 : type549 A B) : (term2743 A B P P2 G2 H2 _114084 s lt2 P1 G1 f H1) = (term2730 A B P P2 G2 H2 _114084 s lt2 P1 G1 f H1).
Proof. exact (MK_COMB (@lem8373442) (@lem8373441 A B P P2 G2 H2 _114084 s lt2 P1 G1 f H1)). Qed.
Lemma lem8373444 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (_114084 : type794 A P) (s : P -> A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (lt2 : type1402 A) : (term2714 A B P P2 G2 _114084 s P1 G1 f lt2) = (term2714 A B P P2 G2 _114084 s P1 G1 f lt2).
Proof. exact (eq_refl (term2714 A B P P2 G2 _114084 s P1 G1 f lt2)). Qed.
Lemma lem8373445 {A B P : Type'} (H2 : type558 A B P) (H1 : type549 A B) (P2 : type560 A B P) (G2 : type557 A B P) (_114084 : type794 A P) (s : P -> A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (lt2 : type1402 A) : (term2738 A B P H2 H1 P2 G2 _114084 s P1 G1 f lt2) = (term2732 A B P H2 H1 P2 G2 _114084 s P1 G1 f lt2).
Proof. exact (MK_COMB (@lem8373443 A B P P2 G2 H2 _114084 s lt2 P1 G1 f H1) (@lem8373444 A B P P2 G2 _114084 s P1 G1 f lt2)). Qed.
Lemma lem8373446 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8373447 {A B P : Type'} (H2 : type558 A B P) (H1 : type549 A B) (P2 : type560 A B P) (G2 : type557 A B P) (_114084 : type794 A P) (s : P -> A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (lt2 : type1402 A) : (term2744 A B P H2 H1 P2 G2 _114084 s P1 G1 f lt2) = (term2745 A B P H2 H1 P2 G2 _114084 s P1 G1 f lt2).
Proof. exact (MK_COMB (@lem8373446) (@lem8373445 A B P H2 H1 P2 G2 _114084 s P1 G1 f lt2)). Qed.
Lemma lem8373448 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (_114084 : type794 A P) (s : P -> A) (lt2 : type1402 A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (H1 : type549 A B) (g : A -> B) : (term2740 A B P P2 G2 H2 _114084 s lt2 P1 G1 f H1 g) = (term2589 A B P P2 G2 H2 _114084 s lt2 P1 G1 f H1 g).
Proof. exact (eq_refl (term2740 A B P P2 G2 H2 _114084 s lt2 P1 G1 f H1 g)). Qed.
Lemma lem8373449 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8373450 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (_114084 : type794 A P) (s : P -> A) (lt2 : type1402 A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (H1 : type549 A B) (g : A -> B) : (term2746 A B P P2 G2 H2 _114084 s lt2 P1 G1 f H1 g) = (term2747 A B P P2 G2 H2 _114084 s lt2 P1 G1 f H1 g).
Proof. exact (MK_COMB (@lem8373449) (@lem8373448 A B P P2 G2 H2 _114084 s lt2 P1 G1 f H1 g)). Qed.
Lemma lem8373451 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (_114084 : type794 A P) (s : P -> A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (lt2 : type1402 A) : (term2714 A B P P2 G2 _114084 s P1 G1 f lt2) = (term2714 A B P P2 G2 _114084 s P1 G1 f lt2).
Proof. exact (eq_refl (term2714 A B P P2 G2 _114084 s P1 G1 f lt2)). Qed.
Lemma lem8373452 {A B P : Type'} (H2 : type558 A B P) (H1 : type549 A B) (g : A -> B) (P2 : type560 A B P) (G2 : type557 A B P) (_114084 : type794 A P) (s : P -> A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (lt2 : type1402 A) : (term2748 A B P H2 H1 g P2 G2 _114084 s P1 G1 f lt2) = (term2749 A B P H2 H1 g P2 G2 _114084 s P1 G1 f lt2).
Proof. exact (MK_COMB (@lem8373450 A B P P2 G2 H2 _114084 s lt2 P1 G1 f H1 g) (@lem8373451 A B P P2 G2 _114084 s P1 G1 f lt2)). Qed.
Lemma lem8373453 {A B P : Type'} (H2 : type558 A B P) (H1 : type549 A B) (P2 : type560 A B P) (G2 : type557 A B P) (_114084 : type794 A P) (s : P -> A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (lt2 : type1402 A) : (term2750 A B P H2 H1 P2 G2 _114084 s P1 G1 f lt2) = (term2751 A B P H2 H1 P2 G2 _114084 s P1 G1 f lt2).
Proof. exact (fun_ext (fun g : A -> B => @lem8373452 A B P H2 H1 g P2 G2 _114084 s P1 G1 f lt2)). Qed.
Lemma lem8373454 {A B : Type'} : (@ex (A -> B)) = (@ex (A -> B)).
Proof. exact (eq_refl (@ex (A -> B))). Qed.
Lemma lem8373455 {A B P : Type'} (H2 : type558 A B P) (H1 : type549 A B) (P2 : type560 A B P) (G2 : type557 A B P) (_114084 : type794 A P) (s : P -> A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (lt2 : type1402 A) : (term2739 A B P H2 H1 P2 G2 _114084 s P1 G1 f lt2) = (term2752 A B P H2 H1 P2 G2 _114084 s P1 G1 f lt2).
Proof. exact (MK_COMB (@lem8373454 A B) (@lem8373453 A B P H2 H1 P2 G2 _114084 s P1 G1 f lt2)). Qed.
Lemma lem8373456 {A B P : Type'} (H2 : type558 A B P) (H1 : type549 A B) (P2 : type560 A B P) (G2 : type557 A B P) (_114084 : type794 A P) (s : P -> A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (lt2 : type1402 A) : ((term2738 A B P H2 H1 P2 G2 _114084 s P1 G1 f lt2) = (term2739 A B P H2 H1 P2 G2 _114084 s P1 G1 f lt2)) = ((term2732 A B P H2 H1 P2 G2 _114084 s P1 G1 f lt2) = (term2752 A B P H2 H1 P2 G2 _114084 s P1 G1 f lt2)).
Proof. exact (MK_COMB (@lem8373447 A B P H2 H1 P2 G2 _114084 s P1 G1 f lt2) (@lem8373455 A B P H2 H1 P2 G2 _114084 s P1 G1 f lt2)). Qed.
Lemma lem8373457 {A B P : Type'} (H2 : type558 A B P) (H1 : type549 A B) (P2 : type560 A B P) (G2 : type557 A B P) (_114084 : type794 A P) (s : P -> A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (lt2 : type1402 A) : (term2732 A B P H2 H1 P2 G2 _114084 s P1 G1 f lt2) = (term2752 A B P H2 H1 P2 G2 _114084 s P1 G1 f lt2).
Proof. exact (EQ_MP (@lem8373456 A B P H2 H1 P2 G2 _114084 s P1 G1 f lt2) (@lem8373437 A B P H2 H1 P2 G2 _114084 s P1 G1 f lt2)). Qed.
Lemma lem8373459 {A : Type'} (P : A -> Prop) (Q : A -> Prop) : (term378 A P Q) = (term379 A P Q).
Proof. exact (EQ_MP (@lem18917 A P Q) (@lem18916 A P Q)). Qed.
Lemma lem8373460 {A : Type'} (P : A -> Prop) (Q : A -> Prop) : (term378 A P Q) = (term379 A P Q).
Proof. exact (@lem8373459 A P Q). Qed.
Lemma lem8373461 {A B P : Type'} (H2 : type558 A B P) (H1 : type549 A B) (g : A -> B) (P2 : type560 A B P) (G2 : type557 A B P) (_114084 : type794 A P) (s : P -> A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (lt2 : type1402 A) : (term2753 A B P H2 H1 g P2 G2 _114084 s P1 G1 f lt2) = (term2754 A B P H2 H1 g P2 G2 _114084 s P1 G1 f lt2).
Proof. exact (@lem8373460 A (term2588 A B P P2 G2 H2 _114084 s lt2 P1 G1 f H1 g) (term2713 A B P P2 G2 _114084 s P1 G1 f lt2)). Qed.
Lemma lem8373462 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (_114084 : type794 A P) (s : P -> A) (lt2 : type1402 A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (H1 : type549 A B) (g : A -> B) (x : A) : (term2755 A B P P2 G2 H2 _114084 s lt2 P1 G1 f H1 g x) = (term2587 A B P P2 G2 H2 _114084 s lt2 P1 G1 f H1 g x).
Proof. exact (eq_refl (term2755 A B P P2 G2 H2 _114084 s lt2 P1 G1 f H1 g x)). Qed.
Lemma lem8373463 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (_114084 : type794 A P) (s : P -> A) (lt2 : type1402 A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (H1 : type549 A B) (g : A -> B) : (term2756 A B P P2 G2 H2 _114084 s lt2 P1 G1 f H1 g) = (term2588 A B P P2 G2 H2 _114084 s lt2 P1 G1 f H1 g).
Proof. exact (fun_ext (fun x : A => @lem8373462 A B P P2 G2 H2 _114084 s lt2 P1 G1 f H1 g x)). Qed.
Lemma lem8373464 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem8373465 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (_114084 : type794 A P) (s : P -> A) (lt2 : type1402 A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (H1 : type549 A B) (g : A -> B) : (term2757 A B P P2 G2 H2 _114084 s lt2 P1 G1 f H1 g) = (term2589 A B P P2 G2 H2 _114084 s lt2 P1 G1 f H1 g).
Proof. exact (MK_COMB (@lem8373464 A) (@lem8373463 A B P P2 G2 H2 _114084 s lt2 P1 G1 f H1 g)). Qed.
Lemma lem8373466 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8373467 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (_114084 : type794 A P) (s : P -> A) (lt2 : type1402 A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (H1 : type549 A B) (g : A -> B) : (term2758 A B P P2 G2 H2 _114084 s lt2 P1 G1 f H1 g) = (term2747 A B P P2 G2 H2 _114084 s lt2 P1 G1 f H1 g).
Proof. exact (MK_COMB (@lem8373466) (@lem8373465 A B P P2 G2 H2 _114084 s lt2 P1 G1 f H1 g)). Qed.
Lemma lem8373468 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (_114084 : type794 A P) (s : P -> A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (lt2 : type1402 A) (x : A) : (term2759 A B P P2 G2 _114084 s P1 G1 f lt2 x) = (term2712 A B P P2 G2 _114084 s P1 G1 f lt2 x).
Proof. exact (eq_refl (term2759 A B P P2 G2 _114084 s P1 G1 f lt2 x)). Qed.
Lemma lem8373469 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (_114084 : type794 A P) (s : P -> A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (lt2 : type1402 A) : (term2760 A B P P2 G2 _114084 s P1 G1 f lt2) = (term2713 A B P P2 G2 _114084 s P1 G1 f lt2).
Proof. exact (fun_ext (fun x : A => @lem8373468 A B P P2 G2 _114084 s P1 G1 f lt2 x)). Qed.
Lemma lem8373470 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem8373471 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (_114084 : type794 A P) (s : P -> A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (lt2 : type1402 A) : (term2761 A B P P2 G2 _114084 s P1 G1 f lt2) = (term2714 A B P P2 G2 _114084 s P1 G1 f lt2).
Proof. exact (MK_COMB (@lem8373470 A) (@lem8373469 A B P P2 G2 _114084 s P1 G1 f lt2)). Qed.
Lemma lem8373472 {A B P : Type'} (H2 : type558 A B P) (H1 : type549 A B) (g : A -> B) (P2 : type560 A B P) (G2 : type557 A B P) (_114084 : type794 A P) (s : P -> A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (lt2 : type1402 A) : (term2753 A B P H2 H1 g P2 G2 _114084 s P1 G1 f lt2) = (term2749 A B P H2 H1 g P2 G2 _114084 s P1 G1 f lt2).
Proof. exact (MK_COMB (@lem8373467 A B P P2 G2 H2 _114084 s lt2 P1 G1 f H1 g) (@lem8373471 A B P P2 G2 _114084 s P1 G1 f lt2)). Qed.
Lemma lem8373473 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8373474 {A B P : Type'} (H2 : type558 A B P) (H1 : type549 A B) (g : A -> B) (P2 : type560 A B P) (G2 : type557 A B P) (_114084 : type794 A P) (s : P -> A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (lt2 : type1402 A) : (term2762 A B P H2 H1 g P2 G2 _114084 s P1 G1 f lt2) = (term2763 A B P H2 H1 g P2 G2 _114084 s P1 G1 f lt2).
Proof. exact (MK_COMB (@lem8373473) (@lem8373472 A B P H2 H1 g P2 G2 _114084 s P1 G1 f lt2)). Qed.
Lemma lem8373475 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (_114084 : type794 A P) (s : P -> A) (lt2 : type1402 A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (H1 : type549 A B) (g : A -> B) (x : A) : (term2755 A B P P2 G2 H2 _114084 s lt2 P1 G1 f H1 g x) = (term2587 A B P P2 G2 H2 _114084 s lt2 P1 G1 f H1 g x).
Proof. exact (eq_refl (term2755 A B P P2 G2 H2 _114084 s lt2 P1 G1 f H1 g x)). Qed.
Lemma lem8373476 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8373477 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (_114084 : type794 A P) (s : P -> A) (lt2 : type1402 A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (H1 : type549 A B) (g : A -> B) (x : A) : (term2764 A B P P2 G2 H2 _114084 s lt2 P1 G1 f H1 g x) = (term2765 A B P P2 G2 H2 _114084 s lt2 P1 G1 f H1 g x).
Proof. exact (MK_COMB (@lem8373476) (@lem8373475 A B P P2 G2 H2 _114084 s lt2 P1 G1 f H1 g x)). Qed.
Lemma lem8373478 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (_114084 : type794 A P) (s : P -> A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (lt2 : type1402 A) (x : A) : (term2759 A B P P2 G2 _114084 s P1 G1 f lt2 x) = (term2712 A B P P2 G2 _114084 s P1 G1 f lt2 x).
Proof. exact (eq_refl (term2759 A B P P2 G2 _114084 s P1 G1 f lt2 x)). Qed.
Lemma lem8373479 {A B P : Type'} (H2 : type558 A B P) (H1 : type549 A B) (g : A -> B) (P2 : type560 A B P) (G2 : type557 A B P) (_114084 : type794 A P) (s : P -> A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (lt2 : type1402 A) (x : A) : (term2766 A B P H2 H1 g P2 G2 _114084 s P1 G1 f lt2 x) = (term2767 A B P H2 H1 g P2 G2 _114084 s P1 G1 f lt2 x).
Proof. exact (MK_COMB (@lem8373477 A B P P2 G2 H2 _114084 s lt2 P1 G1 f H1 g x) (@lem8373478 A B P P2 G2 _114084 s P1 G1 f lt2 x)). Qed.
Lemma lem8373480 {A B P : Type'} (H2 : type558 A B P) (H1 : type549 A B) (g : A -> B) (P2 : type560 A B P) (G2 : type557 A B P) (_114084 : type794 A P) (s : P -> A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (lt2 : type1402 A) : (term2768 A B P H2 H1 g P2 G2 _114084 s P1 G1 f lt2) = (term2769 A B P H2 H1 g P2 G2 _114084 s P1 G1 f lt2).
Proof. exact (fun_ext (fun x : A => @lem8373479 A B P H2 H1 g P2 G2 _114084 s P1 G1 f lt2 x)). Qed.
Lemma lem8373481 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem8373482 {A B P : Type'} (H2 : type558 A B P) (H1 : type549 A B) (g : A -> B) (P2 : type560 A B P) (G2 : type557 A B P) (_114084 : type794 A P) (s : P -> A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (lt2 : type1402 A) : (term2754 A B P H2 H1 g P2 G2 _114084 s P1 G1 f lt2) = (term2770 A B P H2 H1 g P2 G2 _114084 s P1 G1 f lt2).
Proof. exact (MK_COMB (@lem8373481 A) (@lem8373480 A B P H2 H1 g P2 G2 _114084 s P1 G1 f lt2)). Qed.
Lemma lem8373483 {A B P : Type'} (H2 : type558 A B P) (H1 : type549 A B) (g : A -> B) (P2 : type560 A B P) (G2 : type557 A B P) (_114084 : type794 A P) (s : P -> A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (lt2 : type1402 A) : ((term2753 A B P H2 H1 g P2 G2 _114084 s P1 G1 f lt2) = (term2754 A B P H2 H1 g P2 G2 _114084 s P1 G1 f lt2)) = ((term2749 A B P H2 H1 g P2 G2 _114084 s P1 G1 f lt2) = (term2770 A B P H2 H1 g P2 G2 _114084 s P1 G1 f lt2)).
Proof. exact (MK_COMB (@lem8373474 A B P H2 H1 g P2 G2 _114084 s P1 G1 f lt2) (@lem8373482 A B P H2 H1 g P2 G2 _114084 s P1 G1 f lt2)). Qed.
Lemma lem8373484 {A B P : Type'} (H2 : type558 A B P) (H1 : type549 A B) (g : A -> B) (P2 : type560 A B P) (G2 : type557 A B P) (_114084 : type794 A P) (s : P -> A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (lt2 : type1402 A) : (term2749 A B P H2 H1 g P2 G2 _114084 s P1 G1 f lt2) = (term2770 A B P H2 H1 g P2 G2 _114084 s P1 G1 f lt2).
Proof. exact (EQ_MP (@lem8373483 A B P H2 H1 g P2 G2 _114084 s P1 G1 f lt2) (@lem8373461 A B P H2 H1 g P2 G2 _114084 s P1 G1 f lt2)). Qed.
Lemma lem8373486 {A : Type'} (P : A -> Prop) (Q : A -> Prop) : (term378 A P Q) = (term379 A P Q).
Proof. exact (EQ_MP (@lem18917 A P Q) (@lem18916 A P Q)). Qed.
Lemma lem8373487 {P : Type'} (P' : P -> Prop) (Q : P -> Prop) : (term378 P P' Q) = (term379 P P' Q).
Proof. exact (@lem8373486 P P' Q). Qed.
Lemma lem8373488 {A B P : Type'} (H2 : type558 A B P) (H1 : type549 A B) (g : A -> B) (P2 : type560 A B P) (G2 : type557 A B P) (_114084 : type794 A P) (s : P -> A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (lt2 : type1402 A) (x : A) : (term2771 A B P H2 H1 g P2 G2 _114084 s P1 G1 f lt2 x) = (term2772 A B P H2 H1 g P2 G2 _114084 s P1 G1 f lt2 x).
Proof. exact (@lem8373487 P (term2586 A B P P2 G2 H2 _114084 s lt2 P1 G1 f H1 g x) (term2711 A B P P2 G2 _114084 s P1 G1 f lt2 x)). Qed.
Lemma lem8373489 {A B P : Type'} (y : P) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (_114084 : type794 A P) (s : P -> A) (lt2 : type1402 A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (H1 : type549 A B) (g : A -> B) (x : A) : (term2773 A B P P2 G2 H2 _114084 s lt2 P1 G1 f H1 g x y) = (term2584 A B P y P2 G2 H2 _114084 s lt2 P1 G1 f H1 g x).
Proof. exact (eq_refl (term2773 A B P P2 G2 H2 _114084 s lt2 P1 G1 f H1 g x y)). Qed.
Lemma lem8373490 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (_114084 : type794 A P) (s : P -> A) (lt2 : type1402 A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (H1 : type549 A B) (g : A -> B) (x : A) : (term2774 A B P P2 G2 H2 _114084 s lt2 P1 G1 f H1 g x) = (term2586 A B P P2 G2 H2 _114084 s lt2 P1 G1 f H1 g x).
Proof. exact (fun_ext (fun y : P => @lem8373489 A B P y P2 G2 H2 _114084 s lt2 P1 G1 f H1 g x)). Qed.
Lemma lem8373491 {P : Type'} : (@ex P) = (@ex P).
Proof. exact (eq_refl (@ex P)). Qed.
Lemma lem8373492 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (_114084 : type794 A P) (s : P -> A) (lt2 : type1402 A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (H1 : type549 A B) (g : A -> B) (x : A) : (term2775 A B P P2 G2 H2 _114084 s lt2 P1 G1 f H1 g x) = (term2587 A B P P2 G2 H2 _114084 s lt2 P1 G1 f H1 g x).
Proof. exact (MK_COMB (@lem8373491 P) (@lem8373490 A B P P2 G2 H2 _114084 s lt2 P1 G1 f H1 g x)). Qed.
Lemma lem8373493 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8373494 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (_114084 : type794 A P) (s : P -> A) (lt2 : type1402 A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (H1 : type549 A B) (g : A -> B) (x : A) : (term2776 A B P P2 G2 H2 _114084 s lt2 P1 G1 f H1 g x) = (term2765 A B P P2 G2 H2 _114084 s lt2 P1 G1 f H1 g x).
Proof. exact (MK_COMB (@lem8373493) (@lem8373492 A B P P2 G2 H2 _114084 s lt2 P1 G1 f H1 g x)). Qed.
Lemma lem8373495 {A B P : Type'} (y : P) (P2 : type560 A B P) (G2 : type557 A B P) (_114084 : type794 A P) (s : P -> A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (lt2 : type1402 A) (x : A) : (term2777 A B P P2 G2 _114084 s P1 G1 f lt2 x y) = (term2710 A B P y P2 G2 _114084 s P1 G1 f lt2 x).
Proof. exact (eq_refl (term2777 A B P P2 G2 _114084 s P1 G1 f lt2 x y)). Qed.
Lemma lem8373496 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (_114084 : type794 A P) (s : P -> A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (lt2 : type1402 A) (x : A) : (term2778 A B P P2 G2 _114084 s P1 G1 f lt2 x) = (term2711 A B P P2 G2 _114084 s P1 G1 f lt2 x).
Proof. exact (fun_ext (fun y : P => @lem8373495 A B P y P2 G2 _114084 s P1 G1 f lt2 x)). Qed.
Lemma lem8373497 {P : Type'} : (@ex P) = (@ex P).
Proof. exact (eq_refl (@ex P)). Qed.
Lemma lem8373498 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (_114084 : type794 A P) (s : P -> A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (lt2 : type1402 A) (x : A) : (term2779 A B P P2 G2 _114084 s P1 G1 f lt2 x) = (term2712 A B P P2 G2 _114084 s P1 G1 f lt2 x).
Proof. exact (MK_COMB (@lem8373497 P) (@lem8373496 A B P P2 G2 _114084 s P1 G1 f lt2 x)). Qed.
Lemma lem8373499 {A B P : Type'} (H2 : type558 A B P) (H1 : type549 A B) (g : A -> B) (P2 : type560 A B P) (G2 : type557 A B P) (_114084 : type794 A P) (s : P -> A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (lt2 : type1402 A) (x : A) : (term2771 A B P H2 H1 g P2 G2 _114084 s P1 G1 f lt2 x) = (term2767 A B P H2 H1 g P2 G2 _114084 s P1 G1 f lt2 x).
Proof. exact (MK_COMB (@lem8373494 A B P P2 G2 H2 _114084 s lt2 P1 G1 f H1 g x) (@lem8373498 A B P P2 G2 _114084 s P1 G1 f lt2 x)). Qed.
Lemma lem8373500 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8373501 {A B P : Type'} (H2 : type558 A B P) (H1 : type549 A B) (g : A -> B) (P2 : type560 A B P) (G2 : type557 A B P) (_114084 : type794 A P) (s : P -> A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (lt2 : type1402 A) (x : A) : (term2780 A B P H2 H1 g P2 G2 _114084 s P1 G1 f lt2 x) = (term2781 A B P H2 H1 g P2 G2 _114084 s P1 G1 f lt2 x).
Proof. exact (MK_COMB (@lem8373500) (@lem8373499 A B P H2 H1 g P2 G2 _114084 s P1 G1 f lt2 x)). Qed.
Lemma lem8373502 {A B P : Type'} (y : P) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (_114084 : type794 A P) (s : P -> A) (lt2 : type1402 A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (H1 : type549 A B) (g : A -> B) (x : A) : (term2773 A B P P2 G2 H2 _114084 s lt2 P1 G1 f H1 g x y) = (term2584 A B P y P2 G2 H2 _114084 s lt2 P1 G1 f H1 g x).
Proof. exact (eq_refl (term2773 A B P P2 G2 H2 _114084 s lt2 P1 G1 f H1 g x y)). Qed.
Lemma lem8373503 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8373504 {A B P : Type'} (y : P) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (_114084 : type794 A P) (s : P -> A) (lt2 : type1402 A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (H1 : type549 A B) (g : A -> B) (x : A) : (term2782 A B P P2 G2 H2 _114084 s lt2 P1 G1 f H1 g x y) = (term2783 A B P y P2 G2 H2 _114084 s lt2 P1 G1 f H1 g x).
Proof. exact (MK_COMB (@lem8373503) (@lem8373502 A B P y P2 G2 H2 _114084 s lt2 P1 G1 f H1 g x)). Qed.
Lemma lem8373505 {A B P : Type'} (y : P) (P2 : type560 A B P) (G2 : type557 A B P) (_114084 : type794 A P) (s : P -> A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (lt2 : type1402 A) (x : A) : (term2777 A B P P2 G2 _114084 s P1 G1 f lt2 x y) = (term2710 A B P y P2 G2 _114084 s P1 G1 f lt2 x).
Proof. exact (eq_refl (term2777 A B P P2 G2 _114084 s P1 G1 f lt2 x y)). Qed.
Lemma lem8373506 {A B P : Type'} (H2 : type558 A B P) (H1 : type549 A B) (g : A -> B) (y : P) (P2 : type560 A B P) (G2 : type557 A B P) (_114084 : type794 A P) (s : P -> A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (lt2 : type1402 A) (x : A) : (term2784 A B P H2 H1 g P2 G2 _114084 s P1 G1 f lt2 x y) = (term2785 A B P H2 H1 g y P2 G2 _114084 s P1 G1 f lt2 x).
Proof. exact (MK_COMB (@lem8373504 A B P y P2 G2 H2 _114084 s lt2 P1 G1 f H1 g x) (@lem8373505 A B P y P2 G2 _114084 s P1 G1 f lt2 x)). Qed.
Lemma lem8373507 {A B P : Type'} (H2 : type558 A B P) (H1 : type549 A B) (g : A -> B) (P2 : type560 A B P) (G2 : type557 A B P) (_114084 : type794 A P) (s : P -> A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (lt2 : type1402 A) (x : A) : (term2786 A B P H2 H1 g P2 G2 _114084 s P1 G1 f lt2 x) = (term2787 A B P H2 H1 g P2 G2 _114084 s P1 G1 f lt2 x).
Proof. exact (fun_ext (fun y : P => @lem8373506 A B P H2 H1 g y P2 G2 _114084 s P1 G1 f lt2 x)). Qed.
Lemma lem8373508 {P : Type'} : (@ex P) = (@ex P).
Proof. exact (eq_refl (@ex P)). Qed.
Lemma lem8373509 {A B P : Type'} (H2 : type558 A B P) (H1 : type549 A B) (g : A -> B) (P2 : type560 A B P) (G2 : type557 A B P) (_114084 : type794 A P) (s : P -> A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (lt2 : type1402 A) (x : A) : (term2772 A B P H2 H1 g P2 G2 _114084 s P1 G1 f lt2 x) = (term2788 A B P H2 H1 g P2 G2 _114084 s P1 G1 f lt2 x).
Proof. exact (MK_COMB (@lem8373508 P) (@lem8373507 A B P H2 H1 g P2 G2 _114084 s P1 G1 f lt2 x)). Qed.
Lemma lem8373510 {A B P : Type'} (H2 : type558 A B P) (H1 : type549 A B) (g : A -> B) (P2 : type560 A B P) (G2 : type557 A B P) (_114084 : type794 A P) (s : P -> A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (lt2 : type1402 A) (x : A) : ((term2771 A B P H2 H1 g P2 G2 _114084 s P1 G1 f lt2 x) = (term2772 A B P H2 H1 g P2 G2 _114084 s P1 G1 f lt2 x)) = ((term2767 A B P H2 H1 g P2 G2 _114084 s P1 G1 f lt2 x) = (term2788 A B P H2 H1 g P2 G2 _114084 s P1 G1 f lt2 x)).
Proof. exact (MK_COMB (@lem8373501 A B P H2 H1 g P2 G2 _114084 s P1 G1 f lt2 x) (@lem8373509 A B P H2 H1 g P2 G2 _114084 s P1 G1 f lt2 x)). Qed.
Lemma lem8373511 {A B P : Type'} (H2 : type558 A B P) (H1 : type549 A B) (g : A -> B) (P2 : type560 A B P) (G2 : type557 A B P) (_114084 : type794 A P) (s : P -> A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (lt2 : type1402 A) (x : A) : (term2767 A B P H2 H1 g P2 G2 _114084 s P1 G1 f lt2 x) = (term2788 A B P H2 H1 g P2 G2 _114084 s P1 G1 f lt2 x).
Proof. exact (EQ_MP (@lem8373510 A B P H2 H1 g P2 G2 _114084 s P1 G1 f lt2 x) (@lem8373488 A B P H2 H1 g P2 G2 _114084 s P1 G1 f lt2 x)). Qed.
Lemma lem8373513 {A : Type'} (P : Prop) (Q : A -> Prop) : (term435 A P Q) = (term436 A P Q).
Proof. exact (EQ_MP (@lem18911 A P Q) (@lem18910 A P Q)). Qed.
Lemma lem8373514 {A : Type'} (P : Prop) (Q : A -> Prop) : (term435 A P Q) = (term436 A P Q).
Proof. exact (@lem8373513 A P Q). Qed.
Lemma lem8373515 {A B P : Type'} (H2 : type558 A B P) (H1 : type549 A B) (g : A -> B) (y : P) (P2 : type560 A B P) (G2 : type557 A B P) (_114084 : type794 A P) (s : P -> A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (lt2 : type1402 A) (x : A) : (term2789 A B P H2 H1 g y P2 G2 _114084 s P1 G1 f lt2 x) = (term2790 A B P H2 H1 g y P2 G2 _114084 s P1 G1 f lt2 x).
Proof. exact (@lem8373514 A (term2584 A B P y P2 G2 H2 _114084 s lt2 P1 G1 f H1 g x) (term2709 A B P y P2 G2 _114084 s P1 G1 f lt2 x)). Qed.
Lemma lem8373516 {A B P : Type'} (y : P) (P2 : type560 A B P) (G2 : type557 A B P) (_114084 : type794 A P) (s : P -> A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (lt2 : type1402 A) (y' : A) (x : A) : (term2791 A B P y P2 G2 _114084 s P1 G1 f lt2 x y') = (term2707 A B P y P2 G2 _114084 s P1 G1 f lt2 y' x).
Proof. exact (eq_refl (term2791 A B P y P2 G2 _114084 s P1 G1 f lt2 x y')). Qed.
Lemma lem8373517 {A B P : Type'} (y : P) (P2 : type560 A B P) (G2 : type557 A B P) (_114084 : type794 A P) (s : P -> A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (lt2 : type1402 A) (x : A) : (term2792 A B P y P2 G2 _114084 s P1 G1 f lt2 x) = (term2709 A B P y P2 G2 _114084 s P1 G1 f lt2 x).
Proof. exact (fun_ext (fun y' : A => @lem8373516 A B P y P2 G2 _114084 s P1 G1 f lt2 y' x)). Qed.
Lemma lem8373518 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem8373519 {A B P : Type'} (y : P) (P2 : type560 A B P) (G2 : type557 A B P) (_114084 : type794 A P) (s : P -> A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (lt2 : type1402 A) (x : A) : (term2793 A B P y P2 G2 _114084 s P1 G1 f lt2 x) = (term2710 A B P y P2 G2 _114084 s P1 G1 f lt2 x).
Proof. exact (MK_COMB (@lem8373518 A) (@lem8373517 A B P y P2 G2 _114084 s P1 G1 f lt2 x)). Qed.
Lemma lem8373520 {A B P : Type'} (y : P) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (_114084 : type794 A P) (s : P -> A) (lt2 : type1402 A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (H1 : type549 A B) (g : A -> B) (x : A) : (term2783 A B P y P2 G2 H2 _114084 s lt2 P1 G1 f H1 g x) = (term2783 A B P y P2 G2 H2 _114084 s lt2 P1 G1 f H1 g x).
Proof. exact (eq_refl (term2783 A B P y P2 G2 H2 _114084 s lt2 P1 G1 f H1 g x)). Qed.
Lemma lem8373521 {A B P : Type'} (H2 : type558 A B P) (H1 : type549 A B) (g : A -> B) (y : P) (P2 : type560 A B P) (G2 : type557 A B P) (_114084 : type794 A P) (s : P -> A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (lt2 : type1402 A) (x : A) : (term2789 A B P H2 H1 g y P2 G2 _114084 s P1 G1 f lt2 x) = (term2785 A B P H2 H1 g y P2 G2 _114084 s P1 G1 f lt2 x).
Proof. exact (MK_COMB (@lem8373520 A B P y P2 G2 H2 _114084 s lt2 P1 G1 f H1 g x) (@lem8373519 A B P y P2 G2 _114084 s P1 G1 f lt2 x)). Qed.
Lemma lem8373522 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8373523 {A B P : Type'} (H2 : type558 A B P) (H1 : type549 A B) (g : A -> B) (y : P) (P2 : type560 A B P) (G2 : type557 A B P) (_114084 : type794 A P) (s : P -> A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (lt2 : type1402 A) (x : A) : (term2794 A B P H2 H1 g y P2 G2 _114084 s P1 G1 f lt2 x) = (term2795 A B P H2 H1 g y P2 G2 _114084 s P1 G1 f lt2 x).
Proof. exact (MK_COMB (@lem8373522) (@lem8373521 A B P H2 H1 g y P2 G2 _114084 s P1 G1 f lt2 x)). Qed.
Lemma lem8373524 {A B P : Type'} (y : P) (P2 : type560 A B P) (G2 : type557 A B P) (_114084 : type794 A P) (s : P -> A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (lt2 : type1402 A) (y' : A) (x : A) : (term2791 A B P y P2 G2 _114084 s P1 G1 f lt2 x y') = (term2707 A B P y P2 G2 _114084 s P1 G1 f lt2 y' x).
Proof. exact (eq_refl (term2791 A B P y P2 G2 _114084 s P1 G1 f lt2 x y')). Qed.
Lemma lem8373525 {A B P : Type'} (y : P) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (_114084 : type794 A P) (s : P -> A) (lt2 : type1402 A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (H1 : type549 A B) (g : A -> B) (x : A) : (term2783 A B P y P2 G2 H2 _114084 s lt2 P1 G1 f H1 g x) = (term2783 A B P y P2 G2 H2 _114084 s lt2 P1 G1 f H1 g x).
Proof. exact (eq_refl (term2783 A B P y P2 G2 H2 _114084 s lt2 P1 G1 f H1 g x)). Qed.
Lemma lem8373526 {A B P : Type'} (H2 : type558 A B P) (H1 : type549 A B) (g : A -> B) (y : P) (P2 : type560 A B P) (G2 : type557 A B P) (_114084 : type794 A P) (s : P -> A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (lt2 : type1402 A) (y' : A) (x : A) : (term2796 A B P H2 H1 g y P2 G2 _114084 s P1 G1 f lt2 x y') = (term2797 A B P H2 H1 g y P2 G2 _114084 s P1 G1 f lt2 y' x).
Proof. exact (MK_COMB (@lem8373525 A B P y P2 G2 H2 _114084 s lt2 P1 G1 f H1 g x) (@lem8373524 A B P y P2 G2 _114084 s P1 G1 f lt2 y' x)). Qed.
Lemma lem8373527 {A B P : Type'} (H2 : type558 A B P) (H1 : type549 A B) (g : A -> B) (y : P) (P2 : type560 A B P) (G2 : type557 A B P) (_114084 : type794 A P) (s : P -> A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (lt2 : type1402 A) (x : A) : (term2798 A B P H2 H1 g y P2 G2 _114084 s P1 G1 f lt2 x) = (term2799 A B P H2 H1 g y P2 G2 _114084 s P1 G1 f lt2 x).
Proof. exact (fun_ext (fun y' : A => @lem8373526 A B P H2 H1 g y P2 G2 _114084 s P1 G1 f lt2 y' x)). Qed.
Lemma lem8373528 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem8373529 {A B P : Type'} (H2 : type558 A B P) (H1 : type549 A B) (g : A -> B) (y : P) (P2 : type560 A B P) (G2 : type557 A B P) (_114084 : type794 A P) (s : P -> A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (lt2 : type1402 A) (x : A) : (term2790 A B P H2 H1 g y P2 G2 _114084 s P1 G1 f lt2 x) = (term2800 A B P H2 H1 g y P2 G2 _114084 s P1 G1 f lt2 x).
Proof. exact (MK_COMB (@lem8373528 A) (@lem8373527 A B P H2 H1 g y P2 G2 _114084 s P1 G1 f lt2 x)). Qed.
Lemma lem8373530 {A B P : Type'} (H2 : type558 A B P) (H1 : type549 A B) (g : A -> B) (y : P) (P2 : type560 A B P) (G2 : type557 A B P) (_114084 : type794 A P) (s : P -> A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (lt2 : type1402 A) (x : A) : ((term2789 A B P H2 H1 g y P2 G2 _114084 s P1 G1 f lt2 x) = (term2790 A B P H2 H1 g y P2 G2 _114084 s P1 G1 f lt2 x)) = ((term2785 A B P H2 H1 g y P2 G2 _114084 s P1 G1 f lt2 x) = (term2800 A B P H2 H1 g y P2 G2 _114084 s P1 G1 f lt2 x)).
Proof. exact (MK_COMB (@lem8373523 A B P H2 H1 g y P2 G2 _114084 s P1 G1 f lt2 x) (@lem8373529 A B P H2 H1 g y P2 G2 _114084 s P1 G1 f lt2 x)). Qed.
Lemma lem8373531 {A B P : Type'} (H2 : type558 A B P) (H1 : type549 A B) (g : A -> B) (y : P) (P2 : type560 A B P) (G2 : type557 A B P) (_114084 : type794 A P) (s : P -> A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (lt2 : type1402 A) (x : A) : (term2785 A B P H2 H1 g y P2 G2 _114084 s P1 G1 f lt2 x) = (term2800 A B P H2 H1 g y P2 G2 _114084 s P1 G1 f lt2 x).
Proof. exact (EQ_MP (@lem8373530 A B P H2 H1 g y P2 G2 _114084 s P1 G1 f lt2 x) (@lem8373515 A B P H2 H1 g y P2 G2 _114084 s P1 G1 f lt2 x)). Qed.
Lemma lem8373532 {A B P : Type'} (H2 : type558 A B P) (H1 : type549 A B) (g : A -> B) (P2 : type560 A B P) (G2 : type557 A B P) (_114084 : type794 A P) (s : P -> A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (lt2 : type1402 A) (x : A) : (term2787 A B P H2 H1 g P2 G2 _114084 s P1 G1 f lt2 x) = (term2801 A B P H2 H1 g P2 G2 _114084 s P1 G1 f lt2 x).
Proof. exact (fun_ext (fun y : P => @lem8373531 A B P H2 H1 g y P2 G2 _114084 s P1 G1 f lt2 x)). Qed.
Lemma lem8373533 {P : Type'} : (@ex P) = (@ex P).
Proof. exact (eq_refl (@ex P)). Qed.
Lemma lem8373534 {A B P : Type'} (H2 : type558 A B P) (H1 : type549 A B) (g : A -> B) (P2 : type560 A B P) (G2 : type557 A B P) (_114084 : type794 A P) (s : P -> A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (lt2 : type1402 A) (x : A) : (term2788 A B P H2 H1 g P2 G2 _114084 s P1 G1 f lt2 x) = (term2802 A B P H2 H1 g P2 G2 _114084 s P1 G1 f lt2 x).
Proof. exact (MK_COMB (@lem8373533 P) (@lem8373532 A B P H2 H1 g P2 G2 _114084 s P1 G1 f lt2 x)). Qed.
Lemma lem8373535 {A B P : Type'} (H2 : type558 A B P) (H1 : type549 A B) (g : A -> B) (P2 : type560 A B P) (G2 : type557 A B P) (_114084 : type794 A P) (s : P -> A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (lt2 : type1402 A) (x : A) : (term2767 A B P H2 H1 g P2 G2 _114084 s P1 G1 f lt2 x) = (term2802 A B P H2 H1 g P2 G2 _114084 s P1 G1 f lt2 x).
Proof. exact (TRANS (@lem8373511 A B P H2 H1 g P2 G2 _114084 s P1 G1 f lt2 x) (@lem8373534 A B P H2 H1 g P2 G2 _114084 s P1 G1 f lt2 x)). Qed.
Lemma lem8373536 {A B P : Type'} (H2 : type558 A B P) (H1 : type549 A B) (g : A -> B) (P2 : type560 A B P) (G2 : type557 A B P) (_114084 : type794 A P) (s : P -> A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (lt2 : type1402 A) : (term2769 A B P H2 H1 g P2 G2 _114084 s P1 G1 f lt2) = (term2803 A B P H2 H1 g P2 G2 _114084 s P1 G1 f lt2).
Proof. exact (fun_ext (fun x : A => @lem8373535 A B P H2 H1 g P2 G2 _114084 s P1 G1 f lt2 x)). Qed.
Lemma lem8373537 {A : Type'} : (@ex A) = (@ex A).
Proof. exact (eq_refl (@ex A)). Qed.
Lemma lem8373538 {A B P : Type'} (H2 : type558 A B P) (H1 : type549 A B) (g : A -> B) (P2 : type560 A B P) (G2 : type557 A B P) (_114084 : type794 A P) (s : P -> A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (lt2 : type1402 A) : (term2770 A B P H2 H1 g P2 G2 _114084 s P1 G1 f lt2) = (term2804 A B P H2 H1 g P2 G2 _114084 s P1 G1 f lt2).
Proof. exact (MK_COMB (@lem8373537 A) (@lem8373536 A B P H2 H1 g P2 G2 _114084 s P1 G1 f lt2)). Qed.
Lemma lem8373539 {A B P : Type'} (H2 : type558 A B P) (H1 : type549 A B) (g : A -> B) (P2 : type560 A B P) (G2 : type557 A B P) (_114084 : type794 A P) (s : P -> A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (lt2 : type1402 A) : (term2749 A B P H2 H1 g P2 G2 _114084 s P1 G1 f lt2) = (term2804 A B P H2 H1 g P2 G2 _114084 s P1 G1 f lt2).
Proof. exact (TRANS (@lem8373484 A B P H2 H1 g P2 G2 _114084 s P1 G1 f lt2) (@lem8373538 A B P H2 H1 g P2 G2 _114084 s P1 G1 f lt2)). Qed.
Lemma lem8373540 {A B P : Type'} (H2 : type558 A B P) (H1 : type549 A B) (P2 : type560 A B P) (G2 : type557 A B P) (_114084 : type794 A P) (s : P -> A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (lt2 : type1402 A) : (term2751 A B P H2 H1 P2 G2 _114084 s P1 G1 f lt2) = (term2805 A B P H2 H1 P2 G2 _114084 s P1 G1 f lt2).
Proof. exact (fun_ext (fun g : A -> B => @lem8373539 A B P H2 H1 g P2 G2 _114084 s P1 G1 f lt2)). Qed.
Lemma lem8373541 {A B : Type'} : (@ex (A -> B)) = (@ex (A -> B)).
Proof. exact (eq_refl (@ex (A -> B))). Qed.
Lemma lem8373542 {A B P : Type'} (H2 : type558 A B P) (H1 : type549 A B) (P2 : type560 A B P) (G2 : type557 A B P) (_114084 : type794 A P) (s : P -> A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (lt2 : type1402 A) : (term2752 A B P H2 H1 P2 G2 _114084 s P1 G1 f lt2) = (term2806 A B P H2 H1 P2 G2 _114084 s P1 G1 f lt2).
Proof. exact (MK_COMB (@lem8373541 A B) (@lem8373540 A B P H2 H1 P2 G2 _114084 s P1 G1 f lt2)). Qed.
Lemma lem8373543 {A B P : Type'} (H2 : type558 A B P) (H1 : type549 A B) (P2 : type560 A B P) (G2 : type557 A B P) (_114084 : type794 A P) (s : P -> A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (lt2 : type1402 A) : (term2732 A B P H2 H1 P2 G2 _114084 s P1 G1 f lt2) = (term2806 A B P H2 H1 P2 G2 _114084 s P1 G1 f lt2).
Proof. exact (TRANS (@lem8373457 A B P H2 H1 P2 G2 _114084 s P1 G1 f lt2) (@lem8373542 A B P H2 H1 P2 G2 _114084 s P1 G1 f lt2)). Qed.
Lemma lem8373544 {A B P : Type'} (H2 : type558 A B P) (H1 : type549 A B) (P2 : type560 A B P) (G2 : type557 A B P) (_114084 : type794 A P) (s : P -> A) (P1 : type551 A B) (G1 : type548 A B) (lt2 : type1402 A) : (term2734 A B P H2 H1 P2 G2 _114084 s P1 G1 lt2) = (term2807 A B P H2 H1 P2 G2 _114084 s P1 G1 lt2).
Proof. exact (fun_ext (fun f : A -> B => @lem8373543 A B P H2 H1 P2 G2 _114084 s P1 G1 f lt2)). Qed.
Lemma lem8373545 {A B : Type'} : (@ex (A -> B)) = (@ex (A -> B)).
Proof. exact (eq_refl (@ex (A -> B))). Qed.
Lemma lem8373546 {A B P : Type'} (H2 : type558 A B P) (H1 : type549 A B) (P2 : type560 A B P) (G2 : type557 A B P) (_114084 : type794 A P) (s : P -> A) (P1 : type551 A B) (G1 : type548 A B) (lt2 : type1402 A) : (term2735 A B P H2 H1 P2 G2 _114084 s P1 G1 lt2) = (term2808 A B P H2 H1 P2 G2 _114084 s P1 G1 lt2).
Proof. exact (MK_COMB (@lem8373545 A B) (@lem8373544 A B P H2 H1 P2 G2 _114084 s P1 G1 lt2)). Qed.
Lemma lem8373547 {A B P : Type'} (H2 : type558 A B P) (H1 : type549 A B) (P2 : type560 A B P) (G2 : type557 A B P) (_114084 : type794 A P) (s : P -> A) (P1 : type551 A B) (G1 : type548 A B) (lt2 : type1402 A) : (term2717 A B P H2 H1 P2 G2 _114084 s P1 G1 lt2) = (term2808 A B P H2 H1 P2 G2 _114084 s P1 G1 lt2).
Proof. exact (TRANS (@lem8373431 A B P H2 H1 P2 G2 _114084 s P1 G1 lt2) (@lem8373546 A B P H2 H1 P2 G2 _114084 s P1 G1 lt2)). Qed.
Lemma lem8373548 {A B P : Type'} (H2 : type558 A B P) (H1 : type549 A B) (P2 : type560 A B P) (G2 : type557 A B P) (_114084 : type794 A P) (s : P -> A) (P1 : type551 A B) (G1 : type548 A B) (lt2 : type1402 A) : (term2503 A B P H2 H1 P2 G2 _114084 s P1 G1 lt2) = (term2808 A B P H2 H1 P2 G2 _114084 s P1 G1 lt2).
Proof. exact (TRANS (@lem8373404 A B P H2 H1 P2 G2 _114084 s P1 G1 lt2) (@lem8373547 A B P H2 H1 P2 G2 _114084 s P1 G1 lt2)). Qed.
Lemma lem8373549 {A B P : Type'} (H2 : type558 A B P) (H1 : type549 A B) (P2 : type560 A B P) (G2 : type557 A B P) (_114084 : type794 A P) (s : P -> A) (P1 : type551 A B) (G1 : type548 A B) (lt2 : type1402 A) : (term2393 A B P H2 H1 P2 G2 _114084 s P1 G1 lt2) = (term2808 A B P H2 H1 P2 G2 _114084 s P1 G1 lt2).
Proof. exact (TRANS (@lem8373043 A B P H2 H1 P2 G2 _114084 s P1 G1 lt2) (@lem8373548 A B P H2 H1 P2 G2 _114084 s P1 G1 lt2)). Qed.
Lemma lem8373550 {A B P : Type'} (H2 : type558 A B P) (H1 : type549 A B) (P2 : type560 A B P) (G2 : type557 A B P) (_114084 : type794 A P) (s : P -> A) (P1 : type551 A B) (G1 : type548 A B) (lt2 : type1402 A) : (term1992 A B P H2 H1 P2 G2 _114084 s P1 G1 lt2) = (term2808 A B P H2 H1 P2 G2 _114084 s P1 G1 lt2).
Proof. exact (TRANS (@lem8371849 A B P H2 H1 P2 G2 _114084 s P1 G1 lt2) (@lem8373549 A B P H2 H1 P2 G2 _114084 s P1 G1 lt2)). Qed.
Lemma lem8373551 {A B P : Type'} (H2 : type558 A B P) (H1 : type549 A B) (P2 : type560 A B P) (G2 : type557 A B P) (_114084 : type794 A P) (s : P -> A) (P1 : type551 A B) (G1 : type548 A B) (lt2 : type1402 A) (h1 : term1992 A B P H2 H1 P2 G2 _114084 s P1 G1 lt2) : term2808 A B P H2 H1 P2 G2 _114084 s P1 G1 lt2.
Proof. exact (EQ_MP (@lem8373550 A B P H2 H1 P2 G2 _114084 s P1 G1 lt2) (@lem8370158 A B P H2 H1 P2 G2 _114084 s P1 G1 lt2 h1)). Qed.
Lemma lem8373552 {A B P : Type'} (H2 : type558 A B P) (H1 : type549 A B) (P2 : type560 A B P) (G2 : type557 A B P) (_114084 : type794 A P) (s : P -> A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (lt2 : type1402 A) (h1 : term2806 A B P H2 H1 P2 G2 _114084 s P1 G1 f lt2) : term2806 A B P H2 H1 P2 G2 _114084 s P1 G1 f lt2.
Proof. exact (h1). Qed.
Lemma lem8373553 {A B P : Type'} (H2 : type558 A B P) (H1 : type549 A B) (g : A -> B) (P2 : type560 A B P) (G2 : type557 A B P) (_114084 : type794 A P) (s : P -> A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (lt2 : type1402 A) (h1 : term2804 A B P H2 H1 g P2 G2 _114084 s P1 G1 f lt2) : term2804 A B P H2 H1 g P2 G2 _114084 s P1 G1 f lt2.
Proof. exact (h1). Qed.
Lemma lem8373554 {A B P : Type'} (H2 : type558 A B P) (H1 : type549 A B) (g : A -> B) (P2 : type560 A B P) (G2 : type557 A B P) (_114084 : type794 A P) (s : P -> A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (lt2 : type1402 A) (x : A) (h1 : term2802 A B P H2 H1 g P2 G2 _114084 s P1 G1 f lt2 x) : term2802 A B P H2 H1 g P2 G2 _114084 s P1 G1 f lt2 x.
Proof. exact (h1). Qed.
Lemma lem8373555 {A B P : Type'} (H2 : type558 A B P) (H1 : type549 A B) (g : A -> B) (y : P) (P2 : type560 A B P) (G2 : type557 A B P) (_114084 : type794 A P) (s : P -> A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (lt2 : type1402 A) (x : A) (h1 : term2800 A B P H2 H1 g y P2 G2 _114084 s P1 G1 f lt2 x) : term2800 A B P H2 H1 g y P2 G2 _114084 s P1 G1 f lt2 x.
Proof. exact (h1). Qed.
Lemma lem8373556 {A B P : Type'} (H2 : type558 A B P) (H1 : type549 A B) (g : A -> B) (y : P) (P2 : type560 A B P) (G2 : type557 A B P) (_114084 : type794 A P) (s : P -> A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (lt2 : type1402 A) (y' : A) (x : A) (h1 : term2797 A B P H2 H1 g y P2 G2 _114084 s P1 G1 f lt2 y' x) : term2797 A B P H2 H1 g y P2 G2 _114084 s P1 G1 f lt2 y' x.
Proof. exact (h1). Qed.
Lemma lem8373557 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (h1 : term2270 A B P lt2 s z P2 G2 H2) : term2270 A B P lt2 s z P2 G2 H2.
Proof. exact (h1). Qed.
Lemma lem8373558 {A B : Type'} (lt2 : type1402 A) (z' : type515 A B) (P1 : type551 A B) (G1 : type548 A B) (H1 : type549 A B) (h1 : term2129 A B lt2 z' P1 G1 H1) : term2129 A B lt2 z' P1 G1 H1.
Proof. exact (h1). Qed.
Lemma lem8373559 {A : Type'} : (@eq A) = (@eq A).
Proof. exact (eq_refl (@eq A)). Qed.
Lemma lem8373560 {A P : Type'} (s : P -> A) : s = s.
Proof. exact (eq_refl s). Qed.
Lemma lem8373567 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8373568 {A P : Type'} (f : type794 A P) (x : P -> A) : (f x) = (@I ((P -> A) -> A -> P) f x).
Proof. exact (@lem8373567 (P -> A) (A -> P) f x). Qed.
Lemma lem8373569 {A P : Type'} (_114084 : type794 A P) (s : P -> A) : (_114084 s) = (@I ((P -> A) -> A -> P) _114084 s).
Proof. exact (@lem8373568 A P _114084 s). Qed.
Lemma lem8373570 {A : Type'} (x : A) : x = x.
Proof. exact (eq_refl x). Qed.
Lemma lem8373571 {A P : Type'} (_114084 : type794 A P) (s : P -> A) (x : A) : (_114084 s x) = (@I ((P -> A) -> A -> P) _114084 s x).
Proof. exact (MK_COMB (@lem8373569 A P _114084 s) (@lem8373570 A x)). Qed.
Lemma lem8373573 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8373574 {A P : Type'} (f : A -> P) (x : A) : (f x) = (@I (A -> P) f x).
Proof. exact (@lem8373573 A P f x). Qed.
Lemma lem8373575 {A P : Type'} (_114084 : type794 A P) (s : P -> A) (x : A) : (@I ((P -> A) -> A -> P) _114084 s x) = (term2809 A P _114084 s x).
Proof. exact (@lem8373574 A P (@I ((P -> A) -> A -> P) _114084 s) x). Qed.
Lemma lem8373577 {A P : Type'} (_114084 : type794 A P) (s : P -> A) (x : A) : (_114084 s x) = (term2809 A P _114084 s x).
Proof. exact (TRANS (@lem8373571 A P _114084 s x) (@lem8373575 A P _114084 s x)). Qed.
Lemma lem8373578 {A P : Type'} (_114084 : type794 A P) (s : P -> A) (x : A) : (term1480 A P _114084 s x) = (term2810 A P _114084 s x).
Proof. exact (MK_COMB (@lem8373560 A P s) (@lem8373577 A P _114084 s x)). Qed.
Lemma lem8373580 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8373581 {A P : Type'} (f : P -> A) (x : P) : (f x) = (@I (P -> A) f x).
Proof. exact (@lem8373580 P A f x). Qed.
Lemma lem8373582 {A P : Type'} (_114084 : type794 A P) (s : P -> A) (x : A) : (term2810 A P _114084 s x) = (term2811 A P _114084 s x).
Proof. exact (@lem8373581 A P s (term2809 A P _114084 s x)). Qed.
Lemma lem8373583 {A P : Type'} (_114084 : type794 A P) (s : P -> A) (x : A) : (term1480 A P _114084 s x) = (term2811 A P _114084 s x).
Proof. exact (TRANS (@lem8373578 A P _114084 s x) (@lem8373582 A P _114084 s x)). Qed.
Lemma lem8373584 {A : Type'} (x : A) : x = x.
Proof. exact (eq_refl x). Qed.
Lemma lem8373585 {A P : Type'} (_114084 : type794 A P) (s : P -> A) (x : A) : (term1482 A P _114084 s x) = (term2812 A P _114084 s x).
Proof. exact (MK_COMB (@lem8373559 A) (@lem8373583 A P _114084 s x)). Qed.
Lemma lem8373586 {A P : Type'} (_114084 : type794 A P) (s : P -> A) (x : A) : ((term1480 A P _114084 s x) = x) = ((term2811 A P _114084 s x) = x).
Proof. exact (MK_COMB (@lem8373585 A P _114084 s x) (@lem8373584 A x)). Qed.
Lemma lem8373587 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem8373588 {A : Type'} : (@eq A) = (@eq A).
Proof. exact (eq_refl (@eq A)). Qed.
Lemma lem8373593 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8373594 {A P : Type'} (f : P -> A) (x : P) : (f x) = (@I (P -> A) f x).
Proof. exact (@lem8373593 P A f x). Qed.
Lemma lem8373596 {A P : Type'} (s : P -> A) (x : P) : (s x) = (@I (P -> A) s x).
Proof. exact (@lem8373594 A P s x). Qed.
Lemma lem8373597 {A : Type'} (x : A) : x = x.
Proof. exact (eq_refl x). Qed.
Lemma lem8373598 {A P : Type'} (s : P -> A) (x : P) : (term28 A P s x) = (term618 A P s x).
Proof. exact (MK_COMB (@lem8373588 A) (@lem8373596 A P s x)). Qed.
Lemma lem8373599 {A P : Type'} (s : P -> A) (x : P) (x' : A) : ((s x) = x') = ((@I (P -> A) s x) = x').
Proof. exact (MK_COMB (@lem8373598 A P s x) (@lem8373597 A x')). Qed.
Lemma lem8373600 {A P : Type'} (s : P -> A) (x : P) (x' : A) : (term2006 A P s x x') = (term2813 A P s x x').
Proof. exact (MK_COMB (@lem8373587) (@lem8373599 A P s x x')). Qed.
Lemma lem8373601 {A P : Type'} (s : P -> A) (x : A) : (term2004 A P s x) = (term2814 A P s x).
Proof. exact (fun_ext (fun x' : P => @lem8373600 A P s x' x)). Qed.
Lemma lem8373602 {P : Type'} : (@all P) = (@all P).
Proof. exact (eq_refl (@all P)). Qed.
Lemma lem8373603 {A P : Type'} (s : P -> A) (x : A) : (term2015 A P s x) = (term2815 A P s x).
Proof. exact (MK_COMB (@lem8373602 P) (@lem8373601 A P s x)). Qed.
Lemma lem8373604 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8373605 {A P : Type'} (s : P -> A) (x : A) : (term2017 A P s x) = (term2816 A P s x).
Proof. exact (MK_COMB (@lem8373604) (@lem8373603 A P s x)). Qed.
Lemma lem8373606 {A P : Type'} (_114084 : type794 A P) (s : P -> A) (x : A) : (term2018 A P _114084 s x) = (term2817 A P _114084 s x).
Proof. exact (MK_COMB (@lem8373605 A P s x) (@lem8373586 A P _114084 s x)). Qed.
Lemma lem8373607 {A P : Type'} (_114084 : type794 A P) (s : P -> A) : (term2019 A P _114084 s) = (term2818 A P _114084 s).
Proof. exact (fun_ext (fun x : A => @lem8373606 A P _114084 s x)). Qed.
Lemma lem8373608 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem8373609 {A P : Type'} (_114084 : type794 A P) (s : P -> A) : (term2020 A P _114084 s) = (term2819 A P _114084 s).
Proof. exact (MK_COMB (@lem8373608 A) (@lem8373607 A P _114084 s)). Qed.
Lemma lem8373610 {A P : Type'} (_114084 : type794 A P) : (term2021 A P _114084) = (term2820 A P _114084).
Proof. exact (fun_ext (fun s : P -> A => @lem8373609 A P _114084 s)). Qed.
Lemma lem8373611 {A P : Type'} : (@all (P -> A)) = (@all (P -> A)).
Proof. exact (eq_refl (@all (P -> A))). Qed.
Lemma lem8373612 {A P : Type'} (_114084 : type794 A P) : (term2022 A P _114084) = (term2821 A P _114084).
Proof. exact (MK_COMB (@lem8373611 A P) (@lem8373610 A P _114084)). Qed.
Lemma lem8373613 {A P : Type'} (_114084 : type794 A P) (h1 : term1491 A P _114084) : term2821 A P _114084.
Proof. exact (EQ_MP (@lem8373612 A P _114084) (@lem8370292 A P _114084 h1)). Qed.
Lemma lem8373620 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8373621 {A : Type'} (f : type1402 A) (x : A) : (f x) = (@I (A -> A -> Prop) f x).
Proof. exact (@lem8373620 A (A -> Prop) f x). Qed.
Lemma lem8373622 {A : Type'} (lt2 : type1402 A) (y : A) : (lt2 y) = (@I (A -> A -> Prop) lt2 y).
Proof. exact (@lem8373621 A lt2 y). Qed.
Lemma lem8373623 {A : Type'} (x : A) : x = x.
Proof. exact (eq_refl x). Qed.
Lemma lem8373624 {A : Type'} (lt2 : type1402 A) (y : A) (x : A) : (lt2 y x) = (@I (A -> A -> Prop) lt2 y x).
Proof. exact (MK_COMB (@lem8373622 A lt2 y) (@lem8373623 A x)). Qed.
Lemma lem8373626 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8373627 {A : Type'} (f : A -> Prop) (x : A) : (f x) = (@I (A -> Prop) f x).
Proof. exact (@lem8373626 A Prop f x). Qed.
Lemma lem8373628 {A : Type'} (lt2 : type1402 A) (y : A) (x : A) : (@I (A -> A -> Prop) lt2 y x) = (term586 A lt2 y x).
Proof. exact (@lem8373627 A (@I (A -> A -> Prop) lt2 y) x). Qed.
Lemma lem8373630 {A : Type'} (lt2 : type1402 A) (y : A) (x : A) : (lt2 y x) = (term586 A lt2 y x).
Proof. exact (TRANS (@lem8373624 A lt2 y x) (@lem8373628 A lt2 y x)). Qed.
Lemma lem8373631 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem8373640 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8373641 {A B : Type'} (f : type548 A B) (x : A -> B) : (f x) = (@I ((A -> B) -> A -> A) f x).
Proof. exact (@lem8373640 (A -> B) (A -> A) f x). Qed.
Lemma lem8373642 {A B : Type'} (G1 : type548 A B) (f : A -> B) : (G1 f) = (@I ((A -> B) -> A -> A) G1 f).
Proof. exact (@lem8373641 A B G1 f). Qed.
Lemma lem8373643 {A : Type'} (x : A) : x = x.
Proof. exact (eq_refl x). Qed.
Lemma lem8373644 {A B : Type'} (G1 : type548 A B) (f : A -> B) (x : A) : (G1 f x) = (@I ((A -> B) -> A -> A) G1 f x).
Proof. exact (MK_COMB (@lem8373642 A B G1 f) (@lem8373643 A x)). Qed.
Lemma lem8373646 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8373647 {A : Type'} (f : A -> A) (x : A) : (f x) = (@I (A -> A) f x).
Proof. exact (@lem8373646 A A f x). Qed.
Lemma lem8373648 {A B : Type'} (G1 : type548 A B) (f : A -> B) (x : A) : (@I ((A -> B) -> A -> A) G1 f x) = (term2822 A B G1 f x).
Proof. exact (@lem8373647 A (@I ((A -> B) -> A -> A) G1 f) x). Qed.
Lemma lem8373650 {A B : Type'} (G1 : type548 A B) (f : A -> B) (x : A) : (G1 f x) = (term2822 A B G1 f x).
Proof. exact (TRANS (@lem8373644 A B G1 f x) (@lem8373648 A B G1 f x)). Qed.
Lemma lem8373651 {A : Type'} (lt2 : type1402 A) (y : A) : (lt2 y) = (lt2 y).
Proof. exact (eq_refl (lt2 y)). Qed.
Lemma lem8373652 {A B : Type'} (lt2 : type1402 A) (y : A) (G1 : type548 A B) (f : A -> B) (x : A) : (term1807 A B lt2 y G1 f x) = (term2823 A B lt2 y G1 f x).
Proof. exact (MK_COMB (@lem8373651 A lt2 y) (@lem8373650 A B G1 f x)). Qed.
Lemma lem8373654 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8373655 {A : Type'} (f : type1402 A) (x : A) : (f x) = (@I (A -> A -> Prop) f x).
Proof. exact (@lem8373654 A (A -> Prop) f x). Qed.
Lemma lem8373656 {A : Type'} (lt2 : type1402 A) (y : A) : (lt2 y) = (@I (A -> A -> Prop) lt2 y).
Proof. exact (@lem8373655 A lt2 y). Qed.
Lemma lem8373657 {A B : Type'} (G1 : type548 A B) (f : A -> B) (x : A) : (term2822 A B G1 f x) = (term2822 A B G1 f x).
Proof. exact (eq_refl (term2822 A B G1 f x)). Qed.
Lemma lem8373658 {A B : Type'} (lt2 : type1402 A) (y : A) (G1 : type548 A B) (f : A -> B) (x : A) : (term2823 A B lt2 y G1 f x) = (term2824 A B lt2 y G1 f x).
Proof. exact (MK_COMB (@lem8373656 A lt2 y) (@lem8373657 A B G1 f x)). Qed.
Lemma lem8373660 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8373661 {A : Type'} (f : A -> Prop) (x : A) : (f x) = (@I (A -> Prop) f x).
Proof. exact (@lem8373660 A Prop f x). Qed.
Lemma lem8373662 {A B : Type'} (lt2 : type1402 A) (y : A) (G1 : type548 A B) (f : A -> B) (x : A) : (term2824 A B lt2 y G1 f x) = (term2825 A B lt2 y G1 f x).
Proof. exact (@lem8373661 A (@I (A -> A -> Prop) lt2 y) (term2822 A B G1 f x)). Qed.
Lemma lem8373663 {A B : Type'} (lt2 : type1402 A) (y : A) (G1 : type548 A B) (f : A -> B) (x : A) : (term2823 A B lt2 y G1 f x) = (term2825 A B lt2 y G1 f x).
Proof. exact (TRANS (@lem8373658 A B lt2 y G1 f x) (@lem8373662 A B lt2 y G1 f x)). Qed.
Lemma lem8373664 {A B : Type'} (lt2 : type1402 A) (y : A) (G1 : type548 A B) (f : A -> B) (x : A) : (term1807 A B lt2 y G1 f x) = (term2825 A B lt2 y G1 f x).
Proof. exact (TRANS (@lem8373652 A B lt2 y G1 f x) (@lem8373663 A B lt2 y G1 f x)). Qed.
Lemma lem8373665 {A B : Type'} (lt2 : type1402 A) (y : A) (G1 : type548 A B) (f : A -> B) (x : A) : (term2826 A B lt2 y G1 f x) = (term2827 A B lt2 y G1 f x).
Proof. exact (MK_COMB (@lem8373631) (@lem8373664 A B lt2 y G1 f x)). Qed.
Lemma lem8373666 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem8373673 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8373674 {A B : Type'} (f : type551 A B) (x : A -> B) : (f x) = (@I ((A -> B) -> A -> Prop) f x).
Proof. exact (@lem8373673 (A -> B) (A -> Prop) f x). Qed.
Lemma lem8373675 {A B : Type'} (P1 : type551 A B) (f : A -> B) : (P1 f) = (@I ((A -> B) -> A -> Prop) P1 f).
Proof. exact (@lem8373674 A B P1 f). Qed.
Lemma lem8373676 {A : Type'} (x : A) : x = x.
Proof. exact (eq_refl x). Qed.
Lemma lem8373677 {A B : Type'} (P1 : type551 A B) (f : A -> B) (x : A) : (P1 f x) = (@I ((A -> B) -> A -> Prop) P1 f x).
Proof. exact (MK_COMB (@lem8373675 A B P1 f) (@lem8373676 A x)). Qed.
Lemma lem8373679 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8373680 {A : Type'} (f : A -> Prop) (x : A) : (f x) = (@I (A -> Prop) f x).
Proof. exact (@lem8373679 A Prop f x). Qed.
Lemma lem8373681 {A B : Type'} (P1 : type551 A B) (f : A -> B) (x : A) : (@I ((A -> B) -> A -> Prop) P1 f x) = (term2828 A B P1 f x).
Proof. exact (@lem8373680 A (@I ((A -> B) -> A -> Prop) P1 f) x). Qed.
Lemma lem8373683 {A B : Type'} (P1 : type551 A B) (f : A -> B) (x : A) : (P1 f x) = (term2828 A B P1 f x).
Proof. exact (TRANS (@lem8373677 A B P1 f x) (@lem8373681 A B P1 f x)). Qed.
Lemma lem8373684 {A B : Type'} (P1 : type551 A B) (f : A -> B) (x : A) : (term2829 A B P1 f x) = (term2830 A B P1 f x).
Proof. exact (MK_COMB (@lem8373666) (@lem8373683 A B P1 f x)). Qed.
Lemma lem8373685 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8373686 {A B : Type'} (P1 : type551 A B) (f : A -> B) (x : A) : (term2831 A B P1 f x) = (term2832 A B P1 f x).
Proof. exact (MK_COMB (@lem8373685) (@lem8373684 A B P1 f x)). Qed.
Lemma lem8373687 {A B : Type'} (P1 : type551 A B) (lt2 : type1402 A) (y : A) (G1 : type548 A B) (f : A -> B) (x : A) : (term2134 A B P1 lt2 y G1 f x) = (term2833 A B P1 lt2 y G1 f x).
Proof. exact (MK_COMB (@lem8373686 A B P1 f x) (@lem8373665 A B lt2 y G1 f x)). Qed.
Lemma lem8373688 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8373689 {A B : Type'} (P1 : type551 A B) (lt2 : type1402 A) (y : A) (G1 : type548 A B) (f : A -> B) (x : A) : (term2136 A B P1 lt2 y G1 f x) = (term2834 A B P1 lt2 y G1 f x).
Proof. exact (MK_COMB (@lem8373688) (@lem8373687 A B P1 lt2 y G1 f x)). Qed.
Lemma lem8373690 {A B : Type'} (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (lt2 : type1402 A) (y : A) (x : A) : (term2138 A B P1 G1 f lt2 y x) = (term2835 A B P1 G1 f lt2 y x).
Proof. exact (MK_COMB (@lem8373689 A B P1 lt2 y G1 f x) (@lem8373630 A lt2 y x)). Qed.
Lemma lem8373691 {A B : Type'} (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (lt2 : type1402 A) (x : A) : (term2139 A B P1 G1 f lt2 x) = (term2836 A B P1 G1 f lt2 x).
Proof. exact (fun_ext (fun y : A => @lem8373690 A B P1 G1 f lt2 y x)). Qed.
Lemma lem8373692 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem8373693 {A B : Type'} (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (lt2 : type1402 A) (x : A) : (term2140 A B P1 G1 f lt2 x) = (term2837 A B P1 G1 f lt2 x).
Proof. exact (MK_COMB (@lem8373692 A) (@lem8373691 A B P1 G1 f lt2 x)). Qed.
Lemma lem8373694 {A B : Type'} (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (lt2 : type1402 A) : (term2141 A B P1 G1 f lt2) = (term2838 A B P1 G1 f lt2).
Proof. exact (fun_ext (fun x : A => @lem8373693 A B P1 G1 f lt2 x)). Qed.
Lemma lem8373695 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem8373696 {A B : Type'} (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (lt2 : type1402 A) : (term2142 A B P1 G1 f lt2) = (term2839 A B P1 G1 f lt2).
Proof. exact (MK_COMB (@lem8373695 A) (@lem8373694 A B P1 G1 f lt2)). Qed.
Lemma lem8373697 {A B : Type'} (P1 : type551 A B) (G1 : type548 A B) (lt2 : type1402 A) : (term2143 A B P1 G1 lt2) = (term2840 A B P1 G1 lt2).
Proof. exact (fun_ext (fun f : A -> B => @lem8373696 A B P1 G1 f lt2)). Qed.
Lemma lem8373698 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem8373699 {A B : Type'} (P1 : type551 A B) (G1 : type548 A B) (lt2 : type1402 A) : (term2144 A B P1 G1 lt2) = (term2841 A B P1 G1 lt2).
Proof. exact (MK_COMB (@lem8373698 A B) (@lem8373697 A B P1 G1 lt2)). Qed.
Lemma lem8373700 {A B : Type'} (P1 : type551 A B) (G1 : type548 A B) (lt2 : type1402 A) (h1 : term1418 A B P1 G1 lt2) : term2841 A B P1 G1 lt2.
Proof. exact (EQ_MP (@lem8373699 A B P1 G1 lt2) (@lem8370663 A B P1 G1 lt2 h1)). Qed.
Lemma lem8373864 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8373865 {A P : Type'} (f : P -> A) (x : P) : (f x) = (@I (P -> A) f x).
Proof. exact (@lem8373864 P A f x). Qed.
Lemma lem8373867 {A P : Type'} (s : P -> A) (a : P) : (s a) = (@I (P -> A) s a).
Proof. exact (@lem8373865 A P s a). Qed.
Lemma lem8373868 {A : Type'} (lt2 : type1402 A) (y : A) : (lt2 y) = (lt2 y).
Proof. exact (eq_refl (lt2 y)). Qed.
Lemma lem8373869 {A P : Type'} (lt2 : type1402 A) (y : A) (s : P -> A) (a : P) : (term2148 A P lt2 y s a) = (term2842 A P lt2 y s a).
Proof. exact (MK_COMB (@lem8373868 A lt2 y) (@lem8373867 A P s a)). Qed.
Lemma lem8373871 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8373872 {A : Type'} (f : type1402 A) (x : A) : (f x) = (@I (A -> A -> Prop) f x).
Proof. exact (@lem8373871 A (A -> Prop) f x). Qed.
Lemma lem8373873 {A : Type'} (lt2 : type1402 A) (y : A) : (lt2 y) = (@I (A -> A -> Prop) lt2 y).
Proof. exact (@lem8373872 A lt2 y). Qed.
Lemma lem8373874 {A P : Type'} (s : P -> A) (a : P) : (@I (P -> A) s a) = (@I (P -> A) s a).
Proof. exact (eq_refl (@I (P -> A) s a)). Qed.
Lemma lem8373875 {A P : Type'} (lt2 : type1402 A) (y : A) (s : P -> A) (a : P) : (term2842 A P lt2 y s a) = (term2843 A P lt2 y s a).
Proof. exact (MK_COMB (@lem8373873 A lt2 y) (@lem8373874 A P s a)). Qed.
Lemma lem8373877 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8373878 {A : Type'} (f : A -> Prop) (x : A) : (f x) = (@I (A -> Prop) f x).
Proof. exact (@lem8373877 A Prop f x). Qed.
Lemma lem8373879 {A P : Type'} (lt2 : type1402 A) (y : A) (s : P -> A) (a : P) : (term2843 A P lt2 y s a) = (term2844 A P lt2 y s a).
Proof. exact (@lem8373878 A (@I (A -> A -> Prop) lt2 y) (@I (P -> A) s a)). Qed.
Lemma lem8373880 {A P : Type'} (lt2 : type1402 A) (y : A) (s : P -> A) (a : P) : (term2842 A P lt2 y s a) = (term2844 A P lt2 y s a).
Proof. exact (TRANS (@lem8373875 A P lt2 y s a) (@lem8373879 A P lt2 y s a)). Qed.
Lemma lem8373881 {A P : Type'} (lt2 : type1402 A) (y : A) (s : P -> A) (a : P) : (term2148 A P lt2 y s a) = (term2844 A P lt2 y s a).
Proof. exact (TRANS (@lem8373869 A P lt2 y s a) (@lem8373880 A P lt2 y s a)). Qed.
Lemma lem8373882 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem8373891 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8373892 {A B P : Type'} (f : type557 A B P) (x : A -> B) : (f x) = (@I ((A -> B) -> P -> A) f x).
Proof. exact (@lem8373891 (A -> B) (P -> A) f x). Qed.
Lemma lem8373893 {A B P : Type'} (G2 : type557 A B P) (f : A -> B) : (G2 f) = (@I ((A -> B) -> P -> A) G2 f).
Proof. exact (@lem8373892 A B P G2 f). Qed.
Lemma lem8373894 {P : Type'} (a : P) : a = a.
Proof. exact (eq_refl a). Qed.
Lemma lem8373895 {A B P : Type'} (G2 : type557 A B P) (f : A -> B) (a : P) : (G2 f a) = (@I ((A -> B) -> P -> A) G2 f a).
Proof. exact (MK_COMB (@lem8373893 A B P G2 f) (@lem8373894 P a)). Qed.
Lemma lem8373897 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8373898 {A P : Type'} (f : P -> A) (x : P) : (f x) = (@I (P -> A) f x).
Proof. exact (@lem8373897 P A f x). Qed.
Lemma lem8373899 {A B P : Type'} (G2 : type557 A B P) (f : A -> B) (a : P) : (@I ((A -> B) -> P -> A) G2 f a) = (term2845 A B P G2 f a).
Proof. exact (@lem8373898 A P (@I ((A -> B) -> P -> A) G2 f) a). Qed.
Lemma lem8373901 {A B P : Type'} (G2 : type557 A B P) (f : A -> B) (a : P) : (G2 f a) = (term2845 A B P G2 f a).
Proof. exact (TRANS (@lem8373895 A B P G2 f a) (@lem8373899 A B P G2 f a)). Qed.
Lemma lem8373902 {A : Type'} (lt2 : type1402 A) (y : A) : (lt2 y) = (lt2 y).
Proof. exact (eq_refl (lt2 y)). Qed.
Lemma lem8373903 {A B P : Type'} (lt2 : type1402 A) (y : A) (G2 : type557 A B P) (f : A -> B) (a : P) : (term2147 A B P lt2 y G2 f a) = (term2846 A B P lt2 y G2 f a).
Proof. exact (MK_COMB (@lem8373902 A lt2 y) (@lem8373901 A B P G2 f a)). Qed.
Lemma lem8373905 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8373906 {A : Type'} (f : type1402 A) (x : A) : (f x) = (@I (A -> A -> Prop) f x).
Proof. exact (@lem8373905 A (A -> Prop) f x). Qed.
Lemma lem8373907 {A : Type'} (lt2 : type1402 A) (y : A) : (lt2 y) = (@I (A -> A -> Prop) lt2 y).
Proof. exact (@lem8373906 A lt2 y). Qed.
Lemma lem8373908 {A B P : Type'} (G2 : type557 A B P) (f : A -> B) (a : P) : (term2845 A B P G2 f a) = (term2845 A B P G2 f a).
Proof. exact (eq_refl (term2845 A B P G2 f a)). Qed.
Lemma lem8373909 {A B P : Type'} (lt2 : type1402 A) (y : A) (G2 : type557 A B P) (f : A -> B) (a : P) : (term2846 A B P lt2 y G2 f a) = (term2847 A B P lt2 y G2 f a).
Proof. exact (MK_COMB (@lem8373907 A lt2 y) (@lem8373908 A B P G2 f a)). Qed.
Lemma lem8373911 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8373912 {A : Type'} (f : A -> Prop) (x : A) : (f x) = (@I (A -> Prop) f x).
Proof. exact (@lem8373911 A Prop f x). Qed.
Lemma lem8373913 {A B P : Type'} (lt2 : type1402 A) (y : A) (G2 : type557 A B P) (f : A -> B) (a : P) : (term2847 A B P lt2 y G2 f a) = (term2848 A B P lt2 y G2 f a).
Proof. exact (@lem8373912 A (@I (A -> A -> Prop) lt2 y) (term2845 A B P G2 f a)). Qed.
Lemma lem8373914 {A B P : Type'} (lt2 : type1402 A) (y : A) (G2 : type557 A B P) (f : A -> B) (a : P) : (term2846 A B P lt2 y G2 f a) = (term2848 A B P lt2 y G2 f a).
Proof. exact (TRANS (@lem8373909 A B P lt2 y G2 f a) (@lem8373913 A B P lt2 y G2 f a)). Qed.
Lemma lem8373915 {A B P : Type'} (lt2 : type1402 A) (y : A) (G2 : type557 A B P) (f : A -> B) (a : P) : (term2147 A B P lt2 y G2 f a) = (term2848 A B P lt2 y G2 f a).
Proof. exact (TRANS (@lem8373903 A B P lt2 y G2 f a) (@lem8373914 A B P lt2 y G2 f a)). Qed.
Lemma lem8373916 {A B P : Type'} (lt2 : type1402 A) (y : A) (G2 : type557 A B P) (f : A -> B) (a : P) : (term2849 A B P lt2 y G2 f a) = (term2850 A B P lt2 y G2 f a).
Proof. exact (MK_COMB (@lem8373882) (@lem8373915 A B P lt2 y G2 f a)). Qed.
Lemma lem8373917 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem8373924 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8373925 {A B P : Type'} (f : type560 A B P) (x : A -> B) : (f x) = (@I ((A -> B) -> P -> Prop) f x).
Proof. exact (@lem8373924 (A -> B) (P -> Prop) f x). Qed.
Lemma lem8373926 {A B P : Type'} (P2 : type560 A B P) (f : A -> B) : (P2 f) = (@I ((A -> B) -> P -> Prop) P2 f).
Proof. exact (@lem8373925 A B P P2 f). Qed.
Lemma lem8373927 {P : Type'} (a : P) : a = a.
Proof. exact (eq_refl a). Qed.
Lemma lem8373928 {A B P : Type'} (P2 : type560 A B P) (f : A -> B) (a : P) : (P2 f a) = (@I ((A -> B) -> P -> Prop) P2 f a).
Proof. exact (MK_COMB (@lem8373926 A B P P2 f) (@lem8373927 P a)). Qed.
Lemma lem8373930 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8373931 {P : Type'} (f : P -> Prop) (x : P) : (f x) = (@I (P -> Prop) f x).
Proof. exact (@lem8373930 P Prop f x). Qed.
Lemma lem8373932 {A B P : Type'} (P2 : type560 A B P) (f : A -> B) (a : P) : (@I ((A -> B) -> P -> Prop) P2 f a) = (term2851 A B P P2 f a).
Proof. exact (@lem8373931 P (@I ((A -> B) -> P -> Prop) P2 f) a). Qed.
Lemma lem8373934 {A B P : Type'} (P2 : type560 A B P) (f : A -> B) (a : P) : (P2 f a) = (term2851 A B P P2 f a).
Proof. exact (TRANS (@lem8373928 A B P P2 f a) (@lem8373932 A B P P2 f a)). Qed.
Lemma lem8373935 {A B P : Type'} (P2 : type560 A B P) (f : A -> B) (a : P) : (term2852 A B P P2 f a) = (term2853 A B P P2 f a).
Proof. exact (MK_COMB (@lem8373917) (@lem8373934 A B P P2 f a)). Qed.
Lemma lem8373936 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8373937 {A B P : Type'} (P2 : type560 A B P) (f : A -> B) (a : P) : (term2854 A B P P2 f a) = (term2855 A B P P2 f a).
Proof. exact (MK_COMB (@lem8373936) (@lem8373935 A B P P2 f a)). Qed.
Lemma lem8373938 {A B P : Type'} (P2 : type560 A B P) (lt2 : type1402 A) (y : A) (G2 : type557 A B P) (f : A -> B) (a : P) : (term2146 A B P P2 lt2 y G2 f a) = (term2856 A B P P2 lt2 y G2 f a).
Proof. exact (MK_COMB (@lem8373937 A B P P2 f a) (@lem8373916 A B P lt2 y G2 f a)). Qed.
Lemma lem8373939 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8373940 {A B P : Type'} (P2 : type560 A B P) (lt2 : type1402 A) (y : A) (G2 : type557 A B P) (f : A -> B) (a : P) : (term2150 A B P P2 lt2 y G2 f a) = (term2857 A B P P2 lt2 y G2 f a).
Proof. exact (MK_COMB (@lem8373939) (@lem8373938 A B P P2 lt2 y G2 f a)). Qed.
Lemma lem8373941 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (lt2 : type1402 A) (y : A) (s : P -> A) (a : P) : (term2152 A B P P2 G2 f lt2 y s a) = (term2858 A B P P2 G2 f lt2 y s a).
Proof. exact (MK_COMB (@lem8373940 A B P P2 lt2 y G2 f a) (@lem8373881 A P lt2 y s a)). Qed.
Lemma lem8373942 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (lt2 : type1402 A) (s : P -> A) (a : P) : (term2154 A B P P2 G2 f lt2 s a) = (term2859 A B P P2 G2 f lt2 s a).
Proof. exact (fun_ext (fun y : A => @lem8373941 A B P P2 G2 f lt2 y s a)). Qed.
Lemma lem8373943 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem8373944 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (lt2 : type1402 A) (s : P -> A) (a : P) : (term2155 A B P P2 G2 f lt2 s a) = (term2860 A B P P2 G2 f lt2 s a).
Proof. exact (MK_COMB (@lem8373943 A) (@lem8373942 A B P P2 G2 f lt2 s a)). Qed.
Lemma lem8373945 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (lt2 : type1402 A) (s : P -> A) : (term2156 A B P P2 G2 f lt2 s) = (term2861 A B P P2 G2 f lt2 s).
Proof. exact (fun_ext (fun a : P => @lem8373944 A B P P2 G2 f lt2 s a)). Qed.
Lemma lem8373946 {P : Type'} : (@all P) = (@all P).
Proof. exact (eq_refl (@all P)). Qed.
Lemma lem8373947 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (lt2 : type1402 A) (s : P -> A) : (term2157 A B P P2 G2 f lt2 s) = (term2862 A B P P2 G2 f lt2 s).
Proof. exact (MK_COMB (@lem8373946 P) (@lem8373945 A B P P2 G2 f lt2 s)). Qed.
Lemma lem8373948 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (lt2 : type1402 A) (s : P -> A) : (term2158 A B P P2 G2 lt2 s) = (term2863 A B P P2 G2 lt2 s).
Proof. exact (fun_ext (fun f : A -> B => @lem8373947 A B P P2 G2 f lt2 s)). Qed.
Lemma lem8373949 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem8373950 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (lt2 : type1402 A) (s : P -> A) : (term2159 A B P P2 G2 lt2 s) = (term2864 A B P P2 G2 lt2 s).
Proof. exact (MK_COMB (@lem8373949 A B) (@lem8373948 A B P P2 G2 lt2 s)). Qed.
Lemma lem8373951 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (lt2 : type1402 A) (s : P -> A) (h1 : term1420 A B P P2 G2 lt2 s) : term2864 A B P P2 G2 lt2 s.
Proof. exact (EQ_MP (@lem8373950 A B P P2 G2 lt2 s) (@lem8371031 A B P P2 G2 lt2 s h1)). Qed.
Lemma lem8374091 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem8374098 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8374099 {A : Type'} (f : type1402 A) (x : A) : (f x) = (@I (A -> A -> Prop) f x).
Proof. exact (@lem8374098 A (A -> Prop) f x). Qed.
Lemma lem8374100 {A : Type'} (lt2 : type1402 A) (y' : A) : (lt2 y') = (@I (A -> A -> Prop) lt2 y').
Proof. exact (@lem8374099 A lt2 y'). Qed.
Lemma lem8374101 {A : Type'} (x : A) : x = x.
Proof. exact (eq_refl x). Qed.
Lemma lem8374102 {A : Type'} (lt2 : type1402 A) (y' : A) (x : A) : (lt2 y' x) = (@I (A -> A -> Prop) lt2 y' x).
Proof. exact (MK_COMB (@lem8374100 A lt2 y') (@lem8374101 A x)). Qed.
Lemma lem8374104 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8374105 {A : Type'} (f : A -> Prop) (x : A) : (f x) = (@I (A -> Prop) f x).
Proof. exact (@lem8374104 A Prop f x). Qed.
Lemma lem8374106 {A : Type'} (lt2 : type1402 A) (y' : A) (x : A) : (@I (A -> A -> Prop) lt2 y' x) = (term586 A lt2 y' x).
Proof. exact (@lem8374105 A (@I (A -> A -> Prop) lt2 y') x). Qed.
Lemma lem8374108 {A : Type'} (lt2 : type1402 A) (y' : A) (x : A) : (lt2 y' x) = (term586 A lt2 y' x).
Proof. exact (TRANS (@lem8374102 A lt2 y' x) (@lem8374106 A lt2 y' x)). Qed.
Lemma lem8374109 {A : Type'} (lt2 : type1402 A) (y' : A) (x : A) : (term607 A lt2 y' x) = (term608 A lt2 y' x).
Proof. exact (MK_COMB (@lem8374091) (@lem8374108 A lt2 y' x)). Qed.
Lemma lem8374118 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8374119 {A B : Type'} (f : type548 A B) (x : A -> B) : (f x) = (@I ((A -> B) -> A -> A) f x).
Proof. exact (@lem8374118 (A -> B) (A -> A) f x). Qed.
Lemma lem8374120 {A B : Type'} (G1 : type548 A B) (f : A -> B) : (G1 f) = (@I ((A -> B) -> A -> A) G1 f).
Proof. exact (@lem8374119 A B G1 f). Qed.
Lemma lem8374121 {A : Type'} (x : A) : x = x.
Proof. exact (eq_refl x). Qed.
Lemma lem8374122 {A B : Type'} (G1 : type548 A B) (f : A -> B) (x : A) : (G1 f x) = (@I ((A -> B) -> A -> A) G1 f x).
Proof. exact (MK_COMB (@lem8374120 A B G1 f) (@lem8374121 A x)). Qed.
Lemma lem8374124 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8374125 {A : Type'} (f : A -> A) (x : A) : (f x) = (@I (A -> A) f x).
Proof. exact (@lem8374124 A A f x). Qed.
Lemma lem8374126 {A B : Type'} (G1 : type548 A B) (f : A -> B) (x : A) : (@I ((A -> B) -> A -> A) G1 f x) = (term2822 A B G1 f x).
Proof. exact (@lem8374125 A (@I ((A -> B) -> A -> A) G1 f) x). Qed.
Lemma lem8374128 {A B : Type'} (G1 : type548 A B) (f : A -> B) (x : A) : (G1 f x) = (term2822 A B G1 f x).
Proof. exact (TRANS (@lem8374122 A B G1 f x) (@lem8374126 A B G1 f x)). Qed.
Lemma lem8374129 {A : Type'} (lt2 : type1402 A) (y' : A) : (lt2 y') = (lt2 y').
Proof. exact (eq_refl (lt2 y')). Qed.
Lemma lem8374130 {A B : Type'} (lt2 : type1402 A) (y' : A) (G1 : type548 A B) (f : A -> B) (x : A) : (term1807 A B lt2 y' G1 f x) = (term2823 A B lt2 y' G1 f x).
Proof. exact (MK_COMB (@lem8374129 A lt2 y') (@lem8374128 A B G1 f x)). Qed.
Lemma lem8374132 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8374133 {A : Type'} (f : type1402 A) (x : A) : (f x) = (@I (A -> A -> Prop) f x).
Proof. exact (@lem8374132 A (A -> Prop) f x). Qed.
Lemma lem8374134 {A : Type'} (lt2 : type1402 A) (y' : A) : (lt2 y') = (@I (A -> A -> Prop) lt2 y').
Proof. exact (@lem8374133 A lt2 y'). Qed.
Lemma lem8374135 {A B : Type'} (G1 : type548 A B) (f : A -> B) (x : A) : (term2822 A B G1 f x) = (term2822 A B G1 f x).
Proof. exact (eq_refl (term2822 A B G1 f x)). Qed.
Lemma lem8374136 {A B : Type'} (lt2 : type1402 A) (y' : A) (G1 : type548 A B) (f : A -> B) (x : A) : (term2823 A B lt2 y' G1 f x) = (term2824 A B lt2 y' G1 f x).
Proof. exact (MK_COMB (@lem8374134 A lt2 y') (@lem8374135 A B G1 f x)). Qed.
Lemma lem8374138 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8374139 {A : Type'} (f : A -> Prop) (x : A) : (f x) = (@I (A -> Prop) f x).
Proof. exact (@lem8374138 A Prop f x). Qed.
Lemma lem8374140 {A B : Type'} (lt2 : type1402 A) (y' : A) (G1 : type548 A B) (f : A -> B) (x : A) : (term2824 A B lt2 y' G1 f x) = (term2825 A B lt2 y' G1 f x).
Proof. exact (@lem8374139 A (@I (A -> A -> Prop) lt2 y') (term2822 A B G1 f x)). Qed.
Lemma lem8374141 {A B : Type'} (lt2 : type1402 A) (y' : A) (G1 : type548 A B) (f : A -> B) (x : A) : (term2823 A B lt2 y' G1 f x) = (term2825 A B lt2 y' G1 f x).
Proof. exact (TRANS (@lem8374136 A B lt2 y' G1 f x) (@lem8374140 A B lt2 y' G1 f x)). Qed.
Lemma lem8374142 {A B : Type'} (lt2 : type1402 A) (y' : A) (G1 : type548 A B) (f : A -> B) (x : A) : (term1807 A B lt2 y' G1 f x) = (term2825 A B lt2 y' G1 f x).
Proof. exact (TRANS (@lem8374130 A B lt2 y' G1 f x) (@lem8374141 A B lt2 y' G1 f x)). Qed.
Lemma lem8374149 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8374150 {A B : Type'} (f : type551 A B) (x : A -> B) : (f x) = (@I ((A -> B) -> A -> Prop) f x).
Proof. exact (@lem8374149 (A -> B) (A -> Prop) f x). Qed.
Lemma lem8374151 {A B : Type'} (P1 : type551 A B) (f : A -> B) : (P1 f) = (@I ((A -> B) -> A -> Prop) P1 f).
Proof. exact (@lem8374150 A B P1 f). Qed.
Lemma lem8374152 {A : Type'} (x : A) : x = x.
Proof. exact (eq_refl x). Qed.
Lemma lem8374153 {A B : Type'} (P1 : type551 A B) (f : A -> B) (x : A) : (P1 f x) = (@I ((A -> B) -> A -> Prop) P1 f x).
Proof. exact (MK_COMB (@lem8374151 A B P1 f) (@lem8374152 A x)). Qed.
Lemma lem8374155 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8374156 {A : Type'} (f : A -> Prop) (x : A) : (f x) = (@I (A -> Prop) f x).
Proof. exact (@lem8374155 A Prop f x). Qed.
Lemma lem8374157 {A B : Type'} (P1 : type551 A B) (f : A -> B) (x : A) : (@I ((A -> B) -> A -> Prop) P1 f x) = (term2828 A B P1 f x).
Proof. exact (@lem8374156 A (@I ((A -> B) -> A -> Prop) P1 f) x). Qed.
Lemma lem8374159 {A B : Type'} (P1 : type551 A B) (f : A -> B) (x : A) : (P1 f x) = (term2828 A B P1 f x).
Proof. exact (TRANS (@lem8374153 A B P1 f x) (@lem8374157 A B P1 f x)). Qed.
Lemma lem8374160 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8374161 {A B : Type'} (P1 : type551 A B) (f : A -> B) (x : A) : (term1806 A B P1 f x) = (term2865 A B P1 f x).
Proof. exact (MK_COMB (@lem8374160) (@lem8374159 A B P1 f x)). Qed.
Lemma lem8374162 {A B : Type'} (P1 : type551 A B) (lt2 : type1402 A) (y' : A) (G1 : type548 A B) (f : A -> B) (x : A) : (term1808 A B P1 lt2 y' G1 f x) = (term2866 A B P1 lt2 y' G1 f x).
Proof. exact (MK_COMB (@lem8374161 A B P1 f x) (@lem8374142 A B lt2 y' G1 f x)). Qed.
Lemma lem8374163 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8374164 {A B : Type'} (P1 : type551 A B) (lt2 : type1402 A) (y' : A) (G1 : type548 A B) (f : A -> B) (x : A) : (term2867 A B P1 lt2 y' G1 f x) = (term2868 A B P1 lt2 y' G1 f x).
Proof. exact (MK_COMB (@lem8374163) (@lem8374162 A B P1 lt2 y' G1 f x)). Qed.
Lemma lem8374165 {A B : Type'} (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (lt2 : type1402 A) (y' : A) (x : A) : (term2360 A B P1 G1 f lt2 y' x) = (term2869 A B P1 G1 f lt2 y' x).
Proof. exact (MK_COMB (@lem8374164 A B P1 lt2 y' G1 f x) (@lem8374109 A lt2 y' x)). Qed.
Lemma lem8374166 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem8374167 {A : Type'} : (@eq A) = (@eq A).
Proof. exact (eq_refl (@eq A)). Qed.
Lemma lem8374172 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8374173 {A P : Type'} (f : P -> A) (x : P) : (f x) = (@I (P -> A) f x).
Proof. exact (@lem8374172 P A f x). Qed.
Lemma lem8374175 {A P : Type'} (s : P -> A) (y : P) : (s y) = (@I (P -> A) s y).
Proof. exact (@lem8374173 A P s y). Qed.
Lemma lem8374176 {A : Type'} (x : A) : x = x.
Proof. exact (eq_refl x). Qed.
Lemma lem8374177 {A P : Type'} (s : P -> A) (y : P) : (term28 A P s y) = (term618 A P s y).
Proof. exact (MK_COMB (@lem8374167 A) (@lem8374175 A P s y)). Qed.
Lemma lem8374178 {A P : Type'} (s : P -> A) (y : P) (x : A) : ((s y) = x) = ((@I (P -> A) s y) = x).
Proof. exact (MK_COMB (@lem8374177 A P s y) (@lem8374176 A x)). Qed.
Lemma lem8374179 {A P : Type'} (s : P -> A) (y : P) (x : A) : (term2006 A P s y x) = (term2813 A P s y x).
Proof. exact (MK_COMB (@lem8374166) (@lem8374178 A P s y x)). Qed.
Lemma lem8374180 {A P : Type'} (s : P -> A) (x : A) : (term2004 A P s x) = (term2814 A P s x).
Proof. exact (fun_ext (fun y : P => @lem8374179 A P s y x)). Qed.
Lemma lem8374181 {P : Type'} : (@all P) = (@all P).
Proof. exact (eq_refl (@all P)). Qed.
Lemma lem8374182 {A P : Type'} (s : P -> A) (x : A) : (term2015 A P s x) = (term2815 A P s x).
Proof. exact (MK_COMB (@lem8374181 P) (@lem8374180 A P s x)). Qed.
Lemma lem8374183 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8374184 {A P : Type'} (s : P -> A) (x : A) : (term2315 A P s x) = (term2870 A P s x).
Proof. exact (MK_COMB (@lem8374183) (@lem8374182 A P s x)). Qed.
Lemma lem8374185 {A B P : Type'} (s : P -> A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (lt2 : type1402 A) (y' : A) (x : A) : (term2633 A B P s P1 G1 f lt2 y' x) = (term2871 A B P s P1 G1 f lt2 y' x).
Proof. exact (MK_COMB (@lem8374184 A P s x) (@lem8374165 A B P1 G1 f lt2 y' x)). Qed.
Lemma lem8374186 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem8374193 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8374194 {A : Type'} (f : type1402 A) (x : A) : (f x) = (@I (A -> A -> Prop) f x).
Proof. exact (@lem8374193 A (A -> Prop) f x). Qed.
Lemma lem8374195 {A : Type'} (lt2 : type1402 A) (y' : A) : (lt2 y') = (@I (A -> A -> Prop) lt2 y').
Proof. exact (@lem8374194 A lt2 y'). Qed.
Lemma lem8374196 {A : Type'} (x : A) : x = x.
Proof. exact (eq_refl x). Qed.
Lemma lem8374197 {A : Type'} (lt2 : type1402 A) (y' : A) (x : A) : (lt2 y' x) = (@I (A -> A -> Prop) lt2 y' x).
Proof. exact (MK_COMB (@lem8374195 A lt2 y') (@lem8374196 A x)). Qed.
Lemma lem8374199 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8374200 {A : Type'} (f : A -> Prop) (x : A) : (f x) = (@I (A -> Prop) f x).
Proof. exact (@lem8374199 A Prop f x). Qed.
Lemma lem8374201 {A : Type'} (lt2 : type1402 A) (y' : A) (x : A) : (@I (A -> A -> Prop) lt2 y' x) = (term586 A lt2 y' x).
Proof. exact (@lem8374200 A (@I (A -> A -> Prop) lt2 y') x). Qed.
Lemma lem8374203 {A : Type'} (lt2 : type1402 A) (y' : A) (x : A) : (lt2 y' x) = (term586 A lt2 y' x).
Proof. exact (TRANS (@lem8374197 A lt2 y' x) (@lem8374201 A lt2 y' x)). Qed.
Lemma lem8374204 {A : Type'} (lt2 : type1402 A) (y' : A) (x : A) : (term607 A lt2 y' x) = (term608 A lt2 y' x).
Proof. exact (MK_COMB (@lem8374186) (@lem8374203 A lt2 y' x)). Qed.
Lemma lem8374215 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8374216 {A P : Type'} (f : type794 A P) (x : P -> A) : (f x) = (@I ((P -> A) -> A -> P) f x).
Proof. exact (@lem8374215 (P -> A) (A -> P) f x). Qed.
Lemma lem8374217 {A P : Type'} (_114084 : type794 A P) (s : P -> A) : (_114084 s) = (@I ((P -> A) -> A -> P) _114084 s).
Proof. exact (@lem8374216 A P _114084 s). Qed.
Lemma lem8374218 {A : Type'} (x : A) : x = x.
Proof. exact (eq_refl x). Qed.
Lemma lem8374219 {A P : Type'} (_114084 : type794 A P) (s : P -> A) (x : A) : (_114084 s x) = (@I ((P -> A) -> A -> P) _114084 s x).
Proof. exact (MK_COMB (@lem8374217 A P _114084 s) (@lem8374218 A x)). Qed.
Lemma lem8374221 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8374222 {A P : Type'} (f : A -> P) (x : A) : (f x) = (@I (A -> P) f x).
Proof. exact (@lem8374221 A P f x). Qed.
Lemma lem8374223 {A P : Type'} (_114084 : type794 A P) (s : P -> A) (x : A) : (@I ((P -> A) -> A -> P) _114084 s x) = (term2809 A P _114084 s x).
Proof. exact (@lem8374222 A P (@I ((P -> A) -> A -> P) _114084 s) x). Qed.
Lemma lem8374225 {A P : Type'} (_114084 : type794 A P) (s : P -> A) (x : A) : (_114084 s x) = (term2809 A P _114084 s x).
Proof. exact (TRANS (@lem8374219 A P _114084 s x) (@lem8374223 A P _114084 s x)). Qed.
Lemma lem8374226 {A B P : Type'} (G2 : type557 A B P) (f : A -> B) : (G2 f) = (G2 f).
Proof. exact (eq_refl (G2 f)). Qed.
Lemma lem8374227 {A B P : Type'} (G2 : type557 A B P) (f : A -> B) (_114084 : type794 A P) (s : P -> A) (x : A) : (term1514 A B P G2 f _114084 s x) = (term2872 A B P G2 f _114084 s x).
Proof. exact (MK_COMB (@lem8374226 A B P G2 f) (@lem8374225 A P _114084 s x)). Qed.
Lemma lem8374229 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8374230 {A B P : Type'} (f : type557 A B P) (x : A -> B) : (f x) = (@I ((A -> B) -> P -> A) f x).
Proof. exact (@lem8374229 (A -> B) (P -> A) f x). Qed.
Lemma lem8374231 {A B P : Type'} (G2 : type557 A B P) (f : A -> B) : (G2 f) = (@I ((A -> B) -> P -> A) G2 f).
Proof. exact (@lem8374230 A B P G2 f). Qed.
Lemma lem8374232 {A P : Type'} (_114084 : type794 A P) (s : P -> A) (x : A) : (term2809 A P _114084 s x) = (term2809 A P _114084 s x).
Proof. exact (eq_refl (term2809 A P _114084 s x)). Qed.
Lemma lem8374233 {A B P : Type'} (G2 : type557 A B P) (f : A -> B) (_114084 : type794 A P) (s : P -> A) (x : A) : (term2872 A B P G2 f _114084 s x) = (term2873 A B P G2 f _114084 s x).
Proof. exact (MK_COMB (@lem8374231 A B P G2 f) (@lem8374232 A P _114084 s x)). Qed.
Lemma lem8374235 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8374236 {A P : Type'} (f : P -> A) (x : P) : (f x) = (@I (P -> A) f x).
Proof. exact (@lem8374235 P A f x). Qed.
Lemma lem8374237 {A B P : Type'} (G2 : type557 A B P) (f : A -> B) (_114084 : type794 A P) (s : P -> A) (x : A) : (term2873 A B P G2 f _114084 s x) = (term2874 A B P G2 f _114084 s x).
Proof. exact (@lem8374236 A P (@I ((A -> B) -> P -> A) G2 f) (term2809 A P _114084 s x)). Qed.
Lemma lem8374238 {A B P : Type'} (G2 : type557 A B P) (f : A -> B) (_114084 : type794 A P) (s : P -> A) (x : A) : (term2872 A B P G2 f _114084 s x) = (term2874 A B P G2 f _114084 s x).
Proof. exact (TRANS (@lem8374233 A B P G2 f _114084 s x) (@lem8374237 A B P G2 f _114084 s x)). Qed.
Lemma lem8374239 {A B P : Type'} (G2 : type557 A B P) (f : A -> B) (_114084 : type794 A P) (s : P -> A) (x : A) : (term1514 A B P G2 f _114084 s x) = (term2874 A B P G2 f _114084 s x).
Proof. exact (TRANS (@lem8374227 A B P G2 f _114084 s x) (@lem8374238 A B P G2 f _114084 s x)). Qed.
Lemma lem8374240 {A : Type'} (lt2 : type1402 A) (y' : A) : (lt2 y') = (lt2 y').
Proof. exact (eq_refl (lt2 y')). Qed.
Lemma lem8374241 {A B P : Type'} (lt2 : type1402 A) (y' : A) (G2 : type557 A B P) (f : A -> B) (_114084 : type794 A P) (s : P -> A) (x : A) : (term1815 A B P lt2 y' G2 f _114084 s x) = (term2875 A B P lt2 y' G2 f _114084 s x).
Proof. exact (MK_COMB (@lem8374240 A lt2 y') (@lem8374239 A B P G2 f _114084 s x)). Qed.
Lemma lem8374243 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8374244 {A : Type'} (f : type1402 A) (x : A) : (f x) = (@I (A -> A -> Prop) f x).
Proof. exact (@lem8374243 A (A -> Prop) f x). Qed.
Lemma lem8374245 {A : Type'} (lt2 : type1402 A) (y' : A) : (lt2 y') = (@I (A -> A -> Prop) lt2 y').
Proof. exact (@lem8374244 A lt2 y'). Qed.
Lemma lem8374246 {A B P : Type'} (G2 : type557 A B P) (f : A -> B) (_114084 : type794 A P) (s : P -> A) (x : A) : (term2874 A B P G2 f _114084 s x) = (term2874 A B P G2 f _114084 s x).
Proof. exact (eq_refl (term2874 A B P G2 f _114084 s x)). Qed.
Lemma lem8374247 {A B P : Type'} (lt2 : type1402 A) (y' : A) (G2 : type557 A B P) (f : A -> B) (_114084 : type794 A P) (s : P -> A) (x : A) : (term2875 A B P lt2 y' G2 f _114084 s x) = (term2876 A B P lt2 y' G2 f _114084 s x).
Proof. exact (MK_COMB (@lem8374245 A lt2 y') (@lem8374246 A B P G2 f _114084 s x)). Qed.
Lemma lem8374249 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8374250 {A : Type'} (f : A -> Prop) (x : A) : (f x) = (@I (A -> Prop) f x).
Proof. exact (@lem8374249 A Prop f x). Qed.
Lemma lem8374251 {A B P : Type'} (lt2 : type1402 A) (y' : A) (G2 : type557 A B P) (f : A -> B) (_114084 : type794 A P) (s : P -> A) (x : A) : (term2876 A B P lt2 y' G2 f _114084 s x) = (term2877 A B P lt2 y' G2 f _114084 s x).
Proof. exact (@lem8374250 A (@I (A -> A -> Prop) lt2 y') (term2874 A B P G2 f _114084 s x)). Qed.
Lemma lem8374252 {A B P : Type'} (lt2 : type1402 A) (y' : A) (G2 : type557 A B P) (f : A -> B) (_114084 : type794 A P) (s : P -> A) (x : A) : (term2875 A B P lt2 y' G2 f _114084 s x) = (term2877 A B P lt2 y' G2 f _114084 s x).
Proof. exact (TRANS (@lem8374247 A B P lt2 y' G2 f _114084 s x) (@lem8374251 A B P lt2 y' G2 f _114084 s x)). Qed.
Lemma lem8374253 {A B P : Type'} (lt2 : type1402 A) (y' : A) (G2 : type557 A B P) (f : A -> B) (_114084 : type794 A P) (s : P -> A) (x : A) : (term1815 A B P lt2 y' G2 f _114084 s x) = (term2877 A B P lt2 y' G2 f _114084 s x).
Proof. exact (TRANS (@lem8374241 A B P lt2 y' G2 f _114084 s x) (@lem8374252 A B P lt2 y' G2 f _114084 s x)). Qed.
Lemma lem8374262 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8374263 {A P : Type'} (f : type794 A P) (x : P -> A) : (f x) = (@I ((P -> A) -> A -> P) f x).
Proof. exact (@lem8374262 (P -> A) (A -> P) f x). Qed.
Lemma lem8374264 {A P : Type'} (_114084 : type794 A P) (s : P -> A) : (_114084 s) = (@I ((P -> A) -> A -> P) _114084 s).
Proof. exact (@lem8374263 A P _114084 s). Qed.
Lemma lem8374265 {A : Type'} (x : A) : x = x.
Proof. exact (eq_refl x). Qed.
Lemma lem8374266 {A P : Type'} (_114084 : type794 A P) (s : P -> A) (x : A) : (_114084 s x) = (@I ((P -> A) -> A -> P) _114084 s x).
Proof. exact (MK_COMB (@lem8374264 A P _114084 s) (@lem8374265 A x)). Qed.
Lemma lem8374268 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8374269 {A P : Type'} (f : A -> P) (x : A) : (f x) = (@I (A -> P) f x).
Proof. exact (@lem8374268 A P f x). Qed.
Lemma lem8374270 {A P : Type'} (_114084 : type794 A P) (s : P -> A) (x : A) : (@I ((P -> A) -> A -> P) _114084 s x) = (term2809 A P _114084 s x).
Proof. exact (@lem8374269 A P (@I ((P -> A) -> A -> P) _114084 s) x). Qed.
Lemma lem8374272 {A P : Type'} (_114084 : type794 A P) (s : P -> A) (x : A) : (_114084 s x) = (term2809 A P _114084 s x).
Proof. exact (TRANS (@lem8374266 A P _114084 s x) (@lem8374270 A P _114084 s x)). Qed.
Lemma lem8374273 {A B P : Type'} (P2 : type560 A B P) (f : A -> B) : (P2 f) = (P2 f).
Proof. exact (eq_refl (P2 f)). Qed.
Lemma lem8374274 {A B P : Type'} (P2 : type560 A B P) (f : A -> B) (_114084 : type794 A P) (s : P -> A) (x : A) : (term1495 A B P P2 f _114084 s x) = (term2878 A B P P2 f _114084 s x).
Proof. exact (MK_COMB (@lem8374273 A B P P2 f) (@lem8374272 A P _114084 s x)). Qed.
Lemma lem8374276 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8374277 {A B P : Type'} (f : type560 A B P) (x : A -> B) : (f x) = (@I ((A -> B) -> P -> Prop) f x).
Proof. exact (@lem8374276 (A -> B) (P -> Prop) f x). Qed.
Lemma lem8374278 {A B P : Type'} (P2 : type560 A B P) (f : A -> B) : (P2 f) = (@I ((A -> B) -> P -> Prop) P2 f).
Proof. exact (@lem8374277 A B P P2 f). Qed.
Lemma lem8374279 {A P : Type'} (_114084 : type794 A P) (s : P -> A) (x : A) : (term2809 A P _114084 s x) = (term2809 A P _114084 s x).
Proof. exact (eq_refl (term2809 A P _114084 s x)). Qed.
Lemma lem8374280 {A B P : Type'} (P2 : type560 A B P) (f : A -> B) (_114084 : type794 A P) (s : P -> A) (x : A) : (term2878 A B P P2 f _114084 s x) = (term2879 A B P P2 f _114084 s x).
Proof. exact (MK_COMB (@lem8374278 A B P P2 f) (@lem8374279 A P _114084 s x)). Qed.
Lemma lem8374282 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8374283 {P : Type'} (f : P -> Prop) (x : P) : (f x) = (@I (P -> Prop) f x).
Proof. exact (@lem8374282 P Prop f x). Qed.
Lemma lem8374284 {A B P : Type'} (P2 : type560 A B P) (f : A -> B) (_114084 : type794 A P) (s : P -> A) (x : A) : (term2879 A B P P2 f _114084 s x) = (term2880 A B P P2 f _114084 s x).
Proof. exact (@lem8374283 P (@I ((A -> B) -> P -> Prop) P2 f) (term2809 A P _114084 s x)). Qed.
Lemma lem8374285 {A B P : Type'} (P2 : type560 A B P) (f : A -> B) (_114084 : type794 A P) (s : P -> A) (x : A) : (term2878 A B P P2 f _114084 s x) = (term2880 A B P P2 f _114084 s x).
Proof. exact (TRANS (@lem8374280 A B P P2 f _114084 s x) (@lem8374284 A B P P2 f _114084 s x)). Qed.
Lemma lem8374286 {A B P : Type'} (P2 : type560 A B P) (f : A -> B) (_114084 : type794 A P) (s : P -> A) (x : A) : (term1495 A B P P2 f _114084 s x) = (term2880 A B P P2 f _114084 s x).
Proof. exact (TRANS (@lem8374274 A B P P2 f _114084 s x) (@lem8374285 A B P P2 f _114084 s x)). Qed.
Lemma lem8374287 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8374288 {A B P : Type'} (P2 : type560 A B P) (f : A -> B) (_114084 : type794 A P) (s : P -> A) (x : A) : (term1814 A B P P2 f _114084 s x) = (term2881 A B P P2 f _114084 s x).
Proof. exact (MK_COMB (@lem8374287) (@lem8374286 A B P P2 f _114084 s x)). Qed.
Lemma lem8374289 {A B P : Type'} (P2 : type560 A B P) (lt2 : type1402 A) (y' : A) (G2 : type557 A B P) (f : A -> B) (_114084 : type794 A P) (s : P -> A) (x : A) : (term1816 A B P P2 lt2 y' G2 f _114084 s x) = (term2882 A B P P2 lt2 y' G2 f _114084 s x).
Proof. exact (MK_COMB (@lem8374288 A B P P2 f _114084 s x) (@lem8374253 A B P lt2 y' G2 f _114084 s x)). Qed.
Lemma lem8374290 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8374291 {A B P : Type'} (P2 : type560 A B P) (lt2 : type1402 A) (y' : A) (G2 : type557 A B P) (f : A -> B) (_114084 : type794 A P) (s : P -> A) (x : A) : (term2883 A B P P2 lt2 y' G2 f _114084 s x) = (term2884 A B P P2 lt2 y' G2 f _114084 s x).
Proof. exact (MK_COMB (@lem8374290) (@lem8374289 A B P P2 lt2 y' G2 f _114084 s x)). Qed.
Lemma lem8374292 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (_114084 : type794 A P) (s : P -> A) (lt2 : type1402 A) (y' : A) (x : A) : (term2348 A B P P2 G2 f _114084 s lt2 y' x) = (term2885 A B P P2 G2 f _114084 s lt2 y' x).
Proof. exact (MK_COMB (@lem8374291 A B P P2 lt2 y' G2 f _114084 s x) (@lem8374204 A lt2 y' x)). Qed.
Lemma lem8374293 {A : Type'} : (@eq A) = (@eq A).
Proof. exact (eq_refl (@eq A)). Qed.
Lemma lem8374298 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8374299 {A P : Type'} (f : P -> A) (x : P) : (f x) = (@I (P -> A) f x).
Proof. exact (@lem8374298 P A f x). Qed.
Lemma lem8374301 {A P : Type'} (s : P -> A) (y : P) : (s y) = (@I (P -> A) s y).
Proof. exact (@lem8374299 A P s y). Qed.
Lemma lem8374302 {A : Type'} (x : A) : x = x.
Proof. exact (eq_refl x). Qed.
Lemma lem8374303 {A P : Type'} (s : P -> A) (y : P) : (term28 A P s y) = (term618 A P s y).
Proof. exact (MK_COMB (@lem8374293 A) (@lem8374301 A P s y)). Qed.
Lemma lem8374304 {A P : Type'} (s : P -> A) (y : P) (x : A) : ((s y) = x) = ((@I (P -> A) s y) = x).
Proof. exact (MK_COMB (@lem8374303 A P s y) (@lem8374302 A x)). Qed.
Lemma lem8374305 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8374306 {A P : Type'} (s : P -> A) (y : P) (x : A) : (term2514 A P s y x) = (term2886 A P s y x).
Proof. exact (MK_COMB (@lem8374305) (@lem8374304 A P s y x)). Qed.
Lemma lem8374307 {A B P : Type'} (y : P) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (_114084 : type794 A P) (s : P -> A) (lt2 : type1402 A) (y' : A) (x : A) : (term2614 A B P y P2 G2 f _114084 s lt2 y' x) = (term2887 A B P y P2 G2 f _114084 s lt2 y' x).
Proof. exact (MK_COMB (@lem8374306 A P s y x) (@lem8374292 A B P P2 G2 f _114084 s lt2 y' x)). Qed.
Lemma lem8374308 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8374309 {A B P : Type'} (y : P) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (_114084 : type794 A P) (s : P -> A) (lt2 : type1402 A) (y' : A) (x : A) : (term2705 A B P y P2 G2 f _114084 s lt2 y' x) = (term2888 A B P y P2 G2 f _114084 s lt2 y' x).
Proof. exact (MK_COMB (@lem8374308) (@lem8374307 A B P y P2 G2 f _114084 s lt2 y' x)). Qed.
Lemma lem8374310 {A B P : Type'} (y : P) (P2 : type560 A B P) (G2 : type557 A B P) (_114084 : type794 A P) (s : P -> A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (lt2 : type1402 A) (y' : A) (x : A) : (term2707 A B P y P2 G2 _114084 s P1 G1 f lt2 y' x) = (term2889 A B P y P2 G2 _114084 s P1 G1 f lt2 y' x).
Proof. exact (MK_COMB (@lem8374309 A B P y P2 G2 f _114084 s lt2 y' x) (@lem8374185 A B P s P1 G1 f lt2 y' x)). Qed.
Lemma lem8374311 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem8374312 {B : Type'} : (@eq B) = (@eq B).
Proof. exact (eq_refl (@eq B)). Qed.
Lemma lem8374319 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8374320 {A B : Type'} (f : type549 A B) (x : A -> B) : (f x) = (@I ((A -> B) -> A -> B) f x).
Proof. exact (@lem8374319 (A -> B) (A -> B) f x). Qed.
Lemma lem8374321 {A B : Type'} (H1 : type549 A B) (f : A -> B) : (H1 f) = (@I ((A -> B) -> A -> B) H1 f).
Proof. exact (@lem8374320 A B H1 f). Qed.
Lemma lem8374322 {A : Type'} (x : A) : x = x.
Proof. exact (eq_refl x). Qed.
Lemma lem8374323 {A B : Type'} (H1 : type549 A B) (f : A -> B) (x : A) : (H1 f x) = (@I ((A -> B) -> A -> B) H1 f x).
Proof. exact (MK_COMB (@lem8374321 A B H1 f) (@lem8374322 A x)). Qed.
Lemma lem8374325 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8374326 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (@lem8374325 A B f x). Qed.
Lemma lem8374327 {A B : Type'} (H1 : type549 A B) (f : A -> B) (x : A) : (@I ((A -> B) -> A -> B) H1 f x) = (term2890 A B H1 f x).
Proof. exact (@lem8374326 A B (@I ((A -> B) -> A -> B) H1 f) x). Qed.
Lemma lem8374329 {A B : Type'} (H1 : type549 A B) (f : A -> B) (x : A) : (H1 f x) = (term2890 A B H1 f x).
Proof. exact (TRANS (@lem8374323 A B H1 f x) (@lem8374327 A B H1 f x)). Qed.
Lemma lem8374336 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8374337 {A B : Type'} (f : type549 A B) (x : A -> B) : (f x) = (@I ((A -> B) -> A -> B) f x).
Proof. exact (@lem8374336 (A -> B) (A -> B) f x). Qed.
Lemma lem8374338 {A B : Type'} (H1 : type549 A B) (g : A -> B) : (H1 g) = (@I ((A -> B) -> A -> B) H1 g).
Proof. exact (@lem8374337 A B H1 g). Qed.
Lemma lem8374339 {A : Type'} (x : A) : x = x.
Proof. exact (eq_refl x). Qed.
Lemma lem8374340 {A B : Type'} (H1 : type549 A B) (g : A -> B) (x : A) : (H1 g x) = (@I ((A -> B) -> A -> B) H1 g x).
Proof. exact (MK_COMB (@lem8374338 A B H1 g) (@lem8374339 A x)). Qed.
Lemma lem8374342 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8374343 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (@lem8374342 A B f x). Qed.
Lemma lem8374344 {A B : Type'} (H1 : type549 A B) (g : A -> B) (x : A) : (@I ((A -> B) -> A -> B) H1 g x) = (term2890 A B H1 g x).
Proof. exact (@lem8374343 A B (@I ((A -> B) -> A -> B) H1 g) x). Qed.
Lemma lem8374346 {A B : Type'} (H1 : type549 A B) (g : A -> B) (x : A) : (H1 g x) = (term2890 A B H1 g x).
Proof. exact (TRANS (@lem8374340 A B H1 g x) (@lem8374344 A B H1 g x)). Qed.
Lemma lem8374347 {A B : Type'} (H1 : type549 A B) (f : A -> B) (x : A) : (term1841 A B H1 f x) = (term2891 A B H1 f x).
Proof. exact (MK_COMB (@lem8374312 B) (@lem8374329 A B H1 f x)). Qed.
Lemma lem8374348 {A B : Type'} (f : A -> B) (H1 : type549 A B) (g : A -> B) (x : A) : ((H1 f x) = (H1 g x)) = ((term2890 A B H1 f x) = (term2890 A B H1 g x)).
Proof. exact (MK_COMB (@lem8374347 A B H1 f x) (@lem8374346 A B H1 g x)). Qed.
Lemma lem8374349 {A B : Type'} (f : A -> B) (H1 : type549 A B) (g : A -> B) (x : A) : (term2892 A B f H1 g x) = (term2893 A B f H1 g x).
Proof. exact (MK_COMB (@lem8374311) (@lem8374348 A B f H1 g x)). Qed.
Lemma lem8374350 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem8374351 {A : Type'} : (@eq A) = (@eq A).
Proof. exact (eq_refl (@eq A)). Qed.
Lemma lem8374358 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8374359 {A B : Type'} (f : type548 A B) (x : A -> B) : (f x) = (@I ((A -> B) -> A -> A) f x).
Proof. exact (@lem8374358 (A -> B) (A -> A) f x). Qed.
Lemma lem8374360 {A B : Type'} (G1 : type548 A B) (f : A -> B) : (G1 f) = (@I ((A -> B) -> A -> A) G1 f).
Proof. exact (@lem8374359 A B G1 f). Qed.
Lemma lem8374361 {A : Type'} (x : A) : x = x.
Proof. exact (eq_refl x). Qed.
Lemma lem8374362 {A B : Type'} (G1 : type548 A B) (f : A -> B) (x : A) : (G1 f x) = (@I ((A -> B) -> A -> A) G1 f x).
Proof. exact (MK_COMB (@lem8374360 A B G1 f) (@lem8374361 A x)). Qed.
Lemma lem8374364 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8374365 {A : Type'} (f : A -> A) (x : A) : (f x) = (@I (A -> A) f x).
Proof. exact (@lem8374364 A A f x). Qed.
Lemma lem8374366 {A B : Type'} (G1 : type548 A B) (f : A -> B) (x : A) : (@I ((A -> B) -> A -> A) G1 f x) = (term2822 A B G1 f x).
Proof. exact (@lem8374365 A (@I ((A -> B) -> A -> A) G1 f) x). Qed.
Lemma lem8374368 {A B : Type'} (G1 : type548 A B) (f : A -> B) (x : A) : (G1 f x) = (term2822 A B G1 f x).
Proof. exact (TRANS (@lem8374362 A B G1 f x) (@lem8374366 A B G1 f x)). Qed.
Lemma lem8374375 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8374376 {A B : Type'} (f : type548 A B) (x : A -> B) : (f x) = (@I ((A -> B) -> A -> A) f x).
Proof. exact (@lem8374375 (A -> B) (A -> A) f x). Qed.
Lemma lem8374377 {A B : Type'} (G1 : type548 A B) (g : A -> B) : (G1 g) = (@I ((A -> B) -> A -> A) G1 g).
Proof. exact (@lem8374376 A B G1 g). Qed.
Lemma lem8374378 {A : Type'} (x : A) : x = x.
Proof. exact (eq_refl x). Qed.
Lemma lem8374379 {A B : Type'} (G1 : type548 A B) (g : A -> B) (x : A) : (G1 g x) = (@I ((A -> B) -> A -> A) G1 g x).
Proof. exact (MK_COMB (@lem8374377 A B G1 g) (@lem8374378 A x)). Qed.
Lemma lem8374381 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8374382 {A : Type'} (f : A -> A) (x : A) : (f x) = (@I (A -> A) f x).
Proof. exact (@lem8374381 A A f x). Qed.
Lemma lem8374383 {A B : Type'} (G1 : type548 A B) (g : A -> B) (x : A) : (@I ((A -> B) -> A -> A) G1 g x) = (term2822 A B G1 g x).
Proof. exact (@lem8374382 A (@I ((A -> B) -> A -> A) G1 g) x). Qed.
Lemma lem8374385 {A B : Type'} (G1 : type548 A B) (g : A -> B) (x : A) : (G1 g x) = (term2822 A B G1 g x).
Proof. exact (TRANS (@lem8374379 A B G1 g x) (@lem8374383 A B G1 g x)). Qed.
Lemma lem8374386 {A B : Type'} (G1 : type548 A B) (f : A -> B) (x : A) : (term1839 A B G1 f x) = (term2894 A B G1 f x).
Proof. exact (MK_COMB (@lem8374351 A) (@lem8374368 A B G1 f x)). Qed.
Lemma lem8374387 {A B : Type'} (f : A -> B) (G1 : type548 A B) (g : A -> B) (x : A) : ((G1 f x) = (G1 g x)) = ((term2822 A B G1 f x) = (term2822 A B G1 g x)).
Proof. exact (MK_COMB (@lem8374386 A B G1 f x) (@lem8374385 A B G1 g x)). Qed.
Lemma lem8374388 {A B : Type'} (f : A -> B) (G1 : type548 A B) (g : A -> B) (x : A) : (term2895 A B f G1 g x) = (term2896 A B f G1 g x).
Proof. exact (MK_COMB (@lem8374350) (@lem8374387 A B f G1 g x)). Qed.
Lemma lem8374389 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8374390 {A B : Type'} (f : A -> B) (G1 : type548 A B) (g : A -> B) (x : A) : (term2897 A B f G1 g x) = (term2898 A B f G1 g x).
Proof. exact (MK_COMB (@lem8374389) (@lem8374388 A B f G1 g x)). Qed.
Lemma lem8374391 {A B : Type'} (G1 : type548 A B) (f : A -> B) (H1 : type549 A B) (g : A -> B) (x : A) : (term2305 A B G1 f H1 g x) = (term2899 A B G1 f H1 g x).
Proof. exact (MK_COMB (@lem8374390 A B f G1 g x) (@lem8374349 A B f H1 g x)). Qed.
Lemma lem8374398 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8374399 {A B : Type'} (f : type551 A B) (x : A -> B) : (f x) = (@I ((A -> B) -> A -> Prop) f x).
Proof. exact (@lem8374398 (A -> B) (A -> Prop) f x). Qed.
Lemma lem8374400 {A B : Type'} (P1 : type551 A B) (g : A -> B) : (P1 g) = (@I ((A -> B) -> A -> Prop) P1 g).
Proof. exact (@lem8374399 A B P1 g). Qed.
Lemma lem8374401 {A : Type'} (x : A) : x = x.
Proof. exact (eq_refl x). Qed.
Lemma lem8374402 {A B : Type'} (P1 : type551 A B) (g : A -> B) (x : A) : (P1 g x) = (@I ((A -> B) -> A -> Prop) P1 g x).
Proof. exact (MK_COMB (@lem8374400 A B P1 g) (@lem8374401 A x)). Qed.
Lemma lem8374404 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8374405 {A : Type'} (f : A -> Prop) (x : A) : (f x) = (@I (A -> Prop) f x).
Proof. exact (@lem8374404 A Prop f x). Qed.
Lemma lem8374406 {A B : Type'} (P1 : type551 A B) (g : A -> B) (x : A) : (@I ((A -> B) -> A -> Prop) P1 g x) = (term2828 A B P1 g x).
Proof. exact (@lem8374405 A (@I ((A -> B) -> A -> Prop) P1 g) x). Qed.
Lemma lem8374408 {A B : Type'} (P1 : type551 A B) (g : A -> B) (x : A) : (P1 g x) = (term2828 A B P1 g x).
Proof. exact (TRANS (@lem8374402 A B P1 g x) (@lem8374406 A B P1 g x)). Qed.
Lemma lem8374409 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem8374416 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8374417 {A B : Type'} (f : type551 A B) (x : A -> B) : (f x) = (@I ((A -> B) -> A -> Prop) f x).
Proof. exact (@lem8374416 (A -> B) (A -> Prop) f x). Qed.
Lemma lem8374418 {A B : Type'} (P1 : type551 A B) (f : A -> B) : (P1 f) = (@I ((A -> B) -> A -> Prop) P1 f).
Proof. exact (@lem8374417 A B P1 f). Qed.
Lemma lem8374419 {A : Type'} (x : A) : x = x.
Proof. exact (eq_refl x). Qed.
Lemma lem8374420 {A B : Type'} (P1 : type551 A B) (f : A -> B) (x : A) : (P1 f x) = (@I ((A -> B) -> A -> Prop) P1 f x).
Proof. exact (MK_COMB (@lem8374418 A B P1 f) (@lem8374419 A x)). Qed.
Lemma lem8374422 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8374423 {A : Type'} (f : A -> Prop) (x : A) : (f x) = (@I (A -> Prop) f x).
Proof. exact (@lem8374422 A Prop f x). Qed.
Lemma lem8374424 {A B : Type'} (P1 : type551 A B) (f : A -> B) (x : A) : (@I ((A -> B) -> A -> Prop) P1 f x) = (term2828 A B P1 f x).
Proof. exact (@lem8374423 A (@I ((A -> B) -> A -> Prop) P1 f) x). Qed.
Lemma lem8374426 {A B : Type'} (P1 : type551 A B) (f : A -> B) (x : A) : (P1 f x) = (term2828 A B P1 f x).
Proof. exact (TRANS (@lem8374420 A B P1 f x) (@lem8374424 A B P1 f x)). Qed.
Lemma lem8374427 {A B : Type'} (P1 : type551 A B) (f : A -> B) (x : A) : (term2829 A B P1 f x) = (term2830 A B P1 f x).
Proof. exact (MK_COMB (@lem8374409) (@lem8374426 A B P1 f x)). Qed.
Lemma lem8374428 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8374429 {A B : Type'} (P1 : type551 A B) (f : A -> B) (x : A) : (term2900 A B P1 f x) = (term2901 A B P1 f x).
Proof. exact (MK_COMB (@lem8374428) (@lem8374427 A B P1 f x)). Qed.
Lemma lem8374430 {A B : Type'} (f : A -> B) (P1 : type551 A B) (g : A -> B) (x : A) : (term2902 A B f P1 g x) = (term2903 A B f P1 g x).
Proof. exact (MK_COMB (@lem8374429 A B P1 f x) (@lem8374408 A B P1 g x)). Qed.
Lemma lem8374431 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem8374438 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8374439 {A B : Type'} (f : type551 A B) (x : A -> B) : (f x) = (@I ((A -> B) -> A -> Prop) f x).
Proof. exact (@lem8374438 (A -> B) (A -> Prop) f x). Qed.
Lemma lem8374440 {A B : Type'} (P1 : type551 A B) (g : A -> B) : (P1 g) = (@I ((A -> B) -> A -> Prop) P1 g).
Proof. exact (@lem8374439 A B P1 g). Qed.
Lemma lem8374441 {A : Type'} (x : A) : x = x.
Proof. exact (eq_refl x). Qed.
Lemma lem8374442 {A B : Type'} (P1 : type551 A B) (g : A -> B) (x : A) : (P1 g x) = (@I ((A -> B) -> A -> Prop) P1 g x).
Proof. exact (MK_COMB (@lem8374440 A B P1 g) (@lem8374441 A x)). Qed.
Lemma lem8374444 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8374445 {A : Type'} (f : A -> Prop) (x : A) : (f x) = (@I (A -> Prop) f x).
Proof. exact (@lem8374444 A Prop f x). Qed.
Lemma lem8374446 {A B : Type'} (P1 : type551 A B) (g : A -> B) (x : A) : (@I ((A -> B) -> A -> Prop) P1 g x) = (term2828 A B P1 g x).
Proof. exact (@lem8374445 A (@I ((A -> B) -> A -> Prop) P1 g) x). Qed.
Lemma lem8374448 {A B : Type'} (P1 : type551 A B) (g : A -> B) (x : A) : (P1 g x) = (term2828 A B P1 g x).
Proof. exact (TRANS (@lem8374442 A B P1 g x) (@lem8374446 A B P1 g x)). Qed.
Lemma lem8374449 {A B : Type'} (P1 : type551 A B) (g : A -> B) (x : A) : (term2829 A B P1 g x) = (term2830 A B P1 g x).
Proof. exact (MK_COMB (@lem8374431) (@lem8374448 A B P1 g x)). Qed.
Lemma lem8374456 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8374457 {A B : Type'} (f : type551 A B) (x : A -> B) : (f x) = (@I ((A -> B) -> A -> Prop) f x).
Proof. exact (@lem8374456 (A -> B) (A -> Prop) f x). Qed.
Lemma lem8374458 {A B : Type'} (P1 : type551 A B) (f : A -> B) : (P1 f) = (@I ((A -> B) -> A -> Prop) P1 f).
Proof. exact (@lem8374457 A B P1 f). Qed.
Lemma lem8374459 {A : Type'} (x : A) : x = x.
Proof. exact (eq_refl x). Qed.
Lemma lem8374460 {A B : Type'} (P1 : type551 A B) (f : A -> B) (x : A) : (P1 f x) = (@I ((A -> B) -> A -> Prop) P1 f x).
Proof. exact (MK_COMB (@lem8374458 A B P1 f) (@lem8374459 A x)). Qed.
Lemma lem8374462 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8374463 {A : Type'} (f : A -> Prop) (x : A) : (f x) = (@I (A -> Prop) f x).
Proof. exact (@lem8374462 A Prop f x). Qed.
Lemma lem8374464 {A B : Type'} (P1 : type551 A B) (f : A -> B) (x : A) : (@I ((A -> B) -> A -> Prop) P1 f x) = (term2828 A B P1 f x).
Proof. exact (@lem8374463 A (@I ((A -> B) -> A -> Prop) P1 f) x). Qed.
Lemma lem8374466 {A B : Type'} (P1 : type551 A B) (f : A -> B) (x : A) : (P1 f x) = (term2828 A B P1 f x).
Proof. exact (TRANS (@lem8374460 A B P1 f x) (@lem8374464 A B P1 f x)). Qed.
Lemma lem8374467 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8374468 {A B : Type'} (P1 : type551 A B) (f : A -> B) (x : A) : (term1806 A B P1 f x) = (term2865 A B P1 f x).
Proof. exact (MK_COMB (@lem8374467) (@lem8374466 A B P1 f x)). Qed.
Lemma lem8374469 {A B : Type'} (f : A -> B) (P1 : type551 A B) (g : A -> B) (x : A) : (term2904 A B f P1 g x) = (term2905 A B f P1 g x).
Proof. exact (MK_COMB (@lem8374468 A B P1 f x) (@lem8374449 A B P1 g x)). Qed.
Lemma lem8374470 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8374471 {A B : Type'} (f : A -> B) (P1 : type551 A B) (g : A -> B) (x : A) : (term2906 A B f P1 g x) = (term2907 A B f P1 g x).
Proof. exact (MK_COMB (@lem8374470) (@lem8374469 A B f P1 g x)). Qed.
Lemma lem8374472 {A B : Type'} (f : A -> B) (P1 : type551 A B) (g : A -> B) (x : A) : (term2303 A B f P1 g x) = (term2908 A B f P1 g x).
Proof. exact (MK_COMB (@lem8374471 A B f P1 g x) (@lem8374430 A B f P1 g x)). Qed.
Lemma lem8374473 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8374474 {A B : Type'} (f : A -> B) (P1 : type551 A B) (g : A -> B) (x : A) : (term2307 A B f P1 g x) = (term2909 A B f P1 g x).
Proof. exact (MK_COMB (@lem8374473) (@lem8374472 A B f P1 g x)). Qed.
Lemma lem8374475 {A B : Type'} (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (H1 : type549 A B) (g : A -> B) (x : A) : (term2309 A B P1 G1 f H1 g x) = (term2910 A B P1 G1 f H1 g x).
Proof. exact (MK_COMB (@lem8374474 A B f P1 g x) (@lem8374391 A B G1 f H1 g x)). Qed.
Lemma lem8374476 {B : Type'} : (@eq B) = (@eq B).
Proof. exact (eq_refl (@eq B)). Qed.
Lemma lem8374481 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8374482 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (@lem8374481 A B f x). Qed.
Lemma lem8374484 {A B : Type'} (f : A -> B) (z : A) : (f z) = (@I (A -> B) f z).
Proof. exact (@lem8374482 A B f z). Qed.
Lemma lem8374489 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8374490 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (@lem8374489 A B f x). Qed.
Lemma lem8374492 {A B : Type'} (g : A -> B) (z : A) : (g z) = (@I (A -> B) g z).
Proof. exact (@lem8374490 A B g z). Qed.
Lemma lem8374493 {A B : Type'} (f : A -> B) (z : A) : (term939 A B f z) = (term2911 A B f z).
Proof. exact (MK_COMB (@lem8374476 B) (@lem8374484 A B f z)). Qed.
Lemma lem8374494 {A B : Type'} (f : A -> B) (g : A -> B) (z : A) : ((f z) = (g z)) = ((@I (A -> B) f z) = (@I (A -> B) g z)).
Proof. exact (MK_COMB (@lem8374493 A B f z) (@lem8374492 A B g z)). Qed.
Lemma lem8374495 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem8374502 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8374503 {A : Type'} (f : type1402 A) (x : A) : (f x) = (@I (A -> A -> Prop) f x).
Proof. exact (@lem8374502 A (A -> Prop) f x). Qed.
Lemma lem8374504 {A : Type'} (lt2 : type1402 A) (z : A) : (lt2 z) = (@I (A -> A -> Prop) lt2 z).
Proof. exact (@lem8374503 A lt2 z). Qed.
Lemma lem8374505 {A : Type'} (x : A) : x = x.
Proof. exact (eq_refl x). Qed.
Lemma lem8374506 {A : Type'} (lt2 : type1402 A) (z : A) (x : A) : (lt2 z x) = (@I (A -> A -> Prop) lt2 z x).
Proof. exact (MK_COMB (@lem8374504 A lt2 z) (@lem8374505 A x)). Qed.
Lemma lem8374508 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8374509 {A : Type'} (f : A -> Prop) (x : A) : (f x) = (@I (A -> Prop) f x).
Proof. exact (@lem8374508 A Prop f x). Qed.
Lemma lem8374510 {A : Type'} (lt2 : type1402 A) (z : A) (x : A) : (@I (A -> A -> Prop) lt2 z x) = (term586 A lt2 z x).
Proof. exact (@lem8374509 A (@I (A -> A -> Prop) lt2 z) x). Qed.
Lemma lem8374512 {A : Type'} (lt2 : type1402 A) (z : A) (x : A) : (lt2 z x) = (term586 A lt2 z x).
Proof. exact (TRANS (@lem8374506 A lt2 z x) (@lem8374510 A lt2 z x)). Qed.
Lemma lem8374513 {A : Type'} (lt2 : type1402 A) (z : A) (x : A) : (term607 A lt2 z x) = (term608 A lt2 z x).
Proof. exact (MK_COMB (@lem8374495) (@lem8374512 A lt2 z x)). Qed.
Lemma lem8374514 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8374515 {A : Type'} (lt2 : type1402 A) (z : A) (x : A) : (term619 A lt2 z x) = (term620 A lt2 z x).
Proof. exact (MK_COMB (@lem8374514) (@lem8374513 A lt2 z x)). Qed.
Lemma lem8374516 {A B : Type'} (lt2 : type1402 A) (x : A) (f : A -> B) (g : A -> B) (z : A) : (term2275 A B lt2 x f g z) = (term2912 A B lt2 x f g z).
Proof. exact (MK_COMB (@lem8374515 A lt2 z x) (@lem8374494 A B f g z)). Qed.
Lemma lem8374517 {A B : Type'} (lt2 : type1402 A) (x : A) (f : A -> B) (g : A -> B) : (term2276 A B lt2 x f g) = (term2913 A B lt2 x f g).
Proof. exact (fun_ext (fun z : A => @lem8374516 A B lt2 x f g z)). Qed.
Lemma lem8374518 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem8374519 {A B : Type'} (lt2 : type1402 A) (x : A) (f : A -> B) (g : A -> B) : (term2277 A B lt2 x f g) = (term2914 A B lt2 x f g).
Proof. exact (MK_COMB (@lem8374518 A) (@lem8374517 A B lt2 x f g)). Qed.
Lemma lem8374520 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8374521 {A B : Type'} (lt2 : type1402 A) (x : A) (f : A -> B) (g : A -> B) : (term2288 A B lt2 x f g) = (term2915 A B lt2 x f g).
Proof. exact (MK_COMB (@lem8374520) (@lem8374519 A B lt2 x f g)). Qed.
Lemma lem8374522 {A B : Type'} (lt2 : type1402 A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (H1 : type549 A B) (g : A -> B) (x : A) : (term2312 A B lt2 P1 G1 f H1 g x) = (term2916 A B lt2 P1 G1 f H1 g x).
Proof. exact (MK_COMB (@lem8374521 A B lt2 x f g) (@lem8374475 A B P1 G1 f H1 g x)). Qed.
Lemma lem8374523 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem8374524 {A : Type'} : (@eq A) = (@eq A).
Proof. exact (eq_refl (@eq A)). Qed.
Lemma lem8374529 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8374530 {A P : Type'} (f : P -> A) (x : P) : (f x) = (@I (P -> A) f x).
Proof. exact (@lem8374529 P A f x). Qed.
Lemma lem8374532 {A P : Type'} (s : P -> A) (y : P) : (s y) = (@I (P -> A) s y).
Proof. exact (@lem8374530 A P s y). Qed.
Lemma lem8374533 {A : Type'} (x : A) : x = x.
Proof. exact (eq_refl x). Qed.
Lemma lem8374534 {A P : Type'} (s : P -> A) (y : P) : (term28 A P s y) = (term618 A P s y).
Proof. exact (MK_COMB (@lem8374524 A) (@lem8374532 A P s y)). Qed.
Lemma lem8374535 {A P : Type'} (s : P -> A) (y : P) (x : A) : ((s y) = x) = ((@I (P -> A) s y) = x).
Proof. exact (MK_COMB (@lem8374534 A P s y) (@lem8374533 A x)). Qed.
Lemma lem8374536 {A P : Type'} (s : P -> A) (y : P) (x : A) : (term2006 A P s y x) = (term2813 A P s y x).
Proof. exact (MK_COMB (@lem8374523) (@lem8374535 A P s y x)). Qed.
Lemma lem8374537 {A P : Type'} (s : P -> A) (x : A) : (term2004 A P s x) = (term2814 A P s x).
Proof. exact (fun_ext (fun y : P => @lem8374536 A P s y x)). Qed.
Lemma lem8374538 {P : Type'} : (@all P) = (@all P).
Proof. exact (eq_refl (@all P)). Qed.
Lemma lem8374539 {A P : Type'} (s : P -> A) (x : A) : (term2015 A P s x) = (term2815 A P s x).
Proof. exact (MK_COMB (@lem8374538 P) (@lem8374537 A P s x)). Qed.
Lemma lem8374540 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8374541 {A P : Type'} (s : P -> A) (x : A) : (term2315 A P s x) = (term2870 A P s x).
Proof. exact (MK_COMB (@lem8374540) (@lem8374539 A P s x)). Qed.
Lemma lem8374542 {A B P : Type'} (s : P -> A) (lt2 : type1402 A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (H1 : type549 A B) (g : A -> B) (x : A) : (term2317 A B P s lt2 P1 G1 f H1 g x) = (term2917 A B P s lt2 P1 G1 f H1 g x).
Proof. exact (MK_COMB (@lem8374541 A P s x) (@lem8374522 A B lt2 P1 G1 f H1 g x)). Qed.
Lemma lem8374543 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem8374544 {B : Type'} : (@eq B) = (@eq B).
Proof. exact (eq_refl (@eq B)). Qed.
Lemma lem8374553 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8374554 {A P : Type'} (f : type794 A P) (x : P -> A) : (f x) = (@I ((P -> A) -> A -> P) f x).
Proof. exact (@lem8374553 (P -> A) (A -> P) f x). Qed.
Lemma lem8374555 {A P : Type'} (_114084 : type794 A P) (s : P -> A) : (_114084 s) = (@I ((P -> A) -> A -> P) _114084 s).
Proof. exact (@lem8374554 A P _114084 s). Qed.
Lemma lem8374556 {A : Type'} (x : A) : x = x.
Proof. exact (eq_refl x). Qed.
Lemma lem8374557 {A P : Type'} (_114084 : type794 A P) (s : P -> A) (x : A) : (_114084 s x) = (@I ((P -> A) -> A -> P) _114084 s x).
Proof. exact (MK_COMB (@lem8374555 A P _114084 s) (@lem8374556 A x)). Qed.
Lemma lem8374559 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8374560 {A P : Type'} (f : A -> P) (x : A) : (f x) = (@I (A -> P) f x).
Proof. exact (@lem8374559 A P f x). Qed.
Lemma lem8374561 {A P : Type'} (_114084 : type794 A P) (s : P -> A) (x : A) : (@I ((P -> A) -> A -> P) _114084 s x) = (term2809 A P _114084 s x).
Proof. exact (@lem8374560 A P (@I ((P -> A) -> A -> P) _114084 s) x). Qed.
Lemma lem8374563 {A P : Type'} (_114084 : type794 A P) (s : P -> A) (x : A) : (_114084 s x) = (term2809 A P _114084 s x).
Proof. exact (TRANS (@lem8374557 A P _114084 s x) (@lem8374561 A P _114084 s x)). Qed.
Lemma lem8374564 {A B P : Type'} (H2 : type558 A B P) (f : A -> B) : (H2 f) = (H2 f).
Proof. exact (eq_refl (H2 f)). Qed.
Lemma lem8374565 {A B P : Type'} (H2 : type558 A B P) (f : A -> B) (_114084 : type794 A P) (s : P -> A) (x : A) : (term1532 A B P H2 f _114084 s x) = (term2918 A B P H2 f _114084 s x).
Proof. exact (MK_COMB (@lem8374564 A B P H2 f) (@lem8374563 A P _114084 s x)). Qed.
Lemma lem8374567 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8374568 {A B P : Type'} (f : type558 A B P) (x : A -> B) : (f x) = (@I ((A -> B) -> P -> B) f x).
Proof. exact (@lem8374567 (A -> B) (P -> B) f x). Qed.
Lemma lem8374569 {A B P : Type'} (H2 : type558 A B P) (f : A -> B) : (H2 f) = (@I ((A -> B) -> P -> B) H2 f).
Proof. exact (@lem8374568 A B P H2 f). Qed.
Lemma lem8374570 {A P : Type'} (_114084 : type794 A P) (s : P -> A) (x : A) : (term2809 A P _114084 s x) = (term2809 A P _114084 s x).
Proof. exact (eq_refl (term2809 A P _114084 s x)). Qed.
Lemma lem8374571 {A B P : Type'} (H2 : type558 A B P) (f : A -> B) (_114084 : type794 A P) (s : P -> A) (x : A) : (term2918 A B P H2 f _114084 s x) = (term2919 A B P H2 f _114084 s x).
Proof. exact (MK_COMB (@lem8374569 A B P H2 f) (@lem8374570 A P _114084 s x)). Qed.
Lemma lem8374573 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8374574 {B P : Type'} (f : P -> B) (x : P) : (f x) = (@I (P -> B) f x).
Proof. exact (@lem8374573 P B f x). Qed.
Lemma lem8374575 {A B P : Type'} (H2 : type558 A B P) (f : A -> B) (_114084 : type794 A P) (s : P -> A) (x : A) : (term2919 A B P H2 f _114084 s x) = (term2920 A B P H2 f _114084 s x).
Proof. exact (@lem8374574 B P (@I ((A -> B) -> P -> B) H2 f) (term2809 A P _114084 s x)). Qed.
Lemma lem8374576 {A B P : Type'} (H2 : type558 A B P) (f : A -> B) (_114084 : type794 A P) (s : P -> A) (x : A) : (term2918 A B P H2 f _114084 s x) = (term2920 A B P H2 f _114084 s x).
Proof. exact (TRANS (@lem8374571 A B P H2 f _114084 s x) (@lem8374575 A B P H2 f _114084 s x)). Qed.
Lemma lem8374577 {A B P : Type'} (H2 : type558 A B P) (f : A -> B) (_114084 : type794 A P) (s : P -> A) (x : A) : (term1532 A B P H2 f _114084 s x) = (term2920 A B P H2 f _114084 s x).
Proof. exact (TRANS (@lem8374565 A B P H2 f _114084 s x) (@lem8374576 A B P H2 f _114084 s x)). Qed.
Lemma lem8374586 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8374587 {A P : Type'} (f : type794 A P) (x : P -> A) : (f x) = (@I ((P -> A) -> A -> P) f x).
Proof. exact (@lem8374586 (P -> A) (A -> P) f x). Qed.
Lemma lem8374588 {A P : Type'} (_114084 : type794 A P) (s : P -> A) : (_114084 s) = (@I ((P -> A) -> A -> P) _114084 s).
Proof. exact (@lem8374587 A P _114084 s). Qed.
Lemma lem8374589 {A : Type'} (x : A) : x = x.
Proof. exact (eq_refl x). Qed.
Lemma lem8374590 {A P : Type'} (_114084 : type794 A P) (s : P -> A) (x : A) : (_114084 s x) = (@I ((P -> A) -> A -> P) _114084 s x).
Proof. exact (MK_COMB (@lem8374588 A P _114084 s) (@lem8374589 A x)). Qed.
Lemma lem8374592 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8374593 {A P : Type'} (f : A -> P) (x : A) : (f x) = (@I (A -> P) f x).
Proof. exact (@lem8374592 A P f x). Qed.
Lemma lem8374594 {A P : Type'} (_114084 : type794 A P) (s : P -> A) (x : A) : (@I ((P -> A) -> A -> P) _114084 s x) = (term2809 A P _114084 s x).
Proof. exact (@lem8374593 A P (@I ((P -> A) -> A -> P) _114084 s) x). Qed.
Lemma lem8374596 {A P : Type'} (_114084 : type794 A P) (s : P -> A) (x : A) : (_114084 s x) = (term2809 A P _114084 s x).
Proof. exact (TRANS (@lem8374590 A P _114084 s x) (@lem8374594 A P _114084 s x)). Qed.
Lemma lem8374597 {A B P : Type'} (H2 : type558 A B P) (g : A -> B) : (H2 g) = (H2 g).
Proof. exact (eq_refl (H2 g)). Qed.
Lemma lem8374598 {A B P : Type'} (H2 : type558 A B P) (g : A -> B) (_114084 : type794 A P) (s : P -> A) (x : A) : (term1532 A B P H2 g _114084 s x) = (term2918 A B P H2 g _114084 s x).
Proof. exact (MK_COMB (@lem8374597 A B P H2 g) (@lem8374596 A P _114084 s x)). Qed.
Lemma lem8374600 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8374601 {A B P : Type'} (f : type558 A B P) (x : A -> B) : (f x) = (@I ((A -> B) -> P -> B) f x).
Proof. exact (@lem8374600 (A -> B) (P -> B) f x). Qed.
Lemma lem8374602 {A B P : Type'} (H2 : type558 A B P) (g : A -> B) : (H2 g) = (@I ((A -> B) -> P -> B) H2 g).
Proof. exact (@lem8374601 A B P H2 g). Qed.
Lemma lem8374603 {A P : Type'} (_114084 : type794 A P) (s : P -> A) (x : A) : (term2809 A P _114084 s x) = (term2809 A P _114084 s x).
Proof. exact (eq_refl (term2809 A P _114084 s x)). Qed.
Lemma lem8374604 {A B P : Type'} (H2 : type558 A B P) (g : A -> B) (_114084 : type794 A P) (s : P -> A) (x : A) : (term2918 A B P H2 g _114084 s x) = (term2919 A B P H2 g _114084 s x).
Proof. exact (MK_COMB (@lem8374602 A B P H2 g) (@lem8374603 A P _114084 s x)). Qed.
Lemma lem8374606 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8374607 {B P : Type'} (f : P -> B) (x : P) : (f x) = (@I (P -> B) f x).
Proof. exact (@lem8374606 P B f x). Qed.
Lemma lem8374608 {A B P : Type'} (H2 : type558 A B P) (g : A -> B) (_114084 : type794 A P) (s : P -> A) (x : A) : (term2919 A B P H2 g _114084 s x) = (term2920 A B P H2 g _114084 s x).
Proof. exact (@lem8374607 B P (@I ((A -> B) -> P -> B) H2 g) (term2809 A P _114084 s x)). Qed.
Lemma lem8374609 {A B P : Type'} (H2 : type558 A B P) (g : A -> B) (_114084 : type794 A P) (s : P -> A) (x : A) : (term2918 A B P H2 g _114084 s x) = (term2920 A B P H2 g _114084 s x).
Proof. exact (TRANS (@lem8374604 A B P H2 g _114084 s x) (@lem8374608 A B P H2 g _114084 s x)). Qed.
Lemma lem8374610 {A B P : Type'} (H2 : type558 A B P) (g : A -> B) (_114084 : type794 A P) (s : P -> A) (x : A) : (term1532 A B P H2 g _114084 s x) = (term2920 A B P H2 g _114084 s x).
Proof. exact (TRANS (@lem8374598 A B P H2 g _114084 s x) (@lem8374609 A B P H2 g _114084 s x)). Qed.
Lemma lem8374611 {A B P : Type'} (H2 : type558 A B P) (f : A -> B) (_114084 : type794 A P) (s : P -> A) (x : A) : (term1850 A B P H2 f _114084 s x) = (term2921 A B P H2 f _114084 s x).
Proof. exact (MK_COMB (@lem8374544 B) (@lem8374577 A B P H2 f _114084 s x)). Qed.
Lemma lem8374612 {A B P : Type'} (f : A -> B) (H2 : type558 A B P) (g : A -> B) (_114084 : type794 A P) (s : P -> A) (x : A) : ((term1532 A B P H2 f _114084 s x) = (term1532 A B P H2 g _114084 s x)) = ((term2920 A B P H2 f _114084 s x) = (term2920 A B P H2 g _114084 s x)).
Proof. exact (MK_COMB (@lem8374611 A B P H2 f _114084 s x) (@lem8374610 A B P H2 g _114084 s x)). Qed.
Lemma lem8374613 {A B P : Type'} (f : A -> B) (H2 : type558 A B P) (g : A -> B) (_114084 : type794 A P) (s : P -> A) (x : A) : (term2922 A B P f H2 g _114084 s x) = (term2923 A B P f H2 g _114084 s x).
Proof. exact (MK_COMB (@lem8374543) (@lem8374612 A B P f H2 g _114084 s x)). Qed.
Lemma lem8374614 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem8374615 {A : Type'} : (@eq A) = (@eq A).
Proof. exact (eq_refl (@eq A)). Qed.
Lemma lem8374624 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8374625 {A P : Type'} (f : type794 A P) (x : P -> A) : (f x) = (@I ((P -> A) -> A -> P) f x).
Proof. exact (@lem8374624 (P -> A) (A -> P) f x). Qed.
Lemma lem8374626 {A P : Type'} (_114084 : type794 A P) (s : P -> A) : (_114084 s) = (@I ((P -> A) -> A -> P) _114084 s).
Proof. exact (@lem8374625 A P _114084 s). Qed.
Lemma lem8374627 {A : Type'} (x : A) : x = x.
Proof. exact (eq_refl x). Qed.
Lemma lem8374628 {A P : Type'} (_114084 : type794 A P) (s : P -> A) (x : A) : (_114084 s x) = (@I ((P -> A) -> A -> P) _114084 s x).
Proof. exact (MK_COMB (@lem8374626 A P _114084 s) (@lem8374627 A x)). Qed.
Lemma lem8374630 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8374631 {A P : Type'} (f : A -> P) (x : A) : (f x) = (@I (A -> P) f x).
Proof. exact (@lem8374630 A P f x). Qed.
Lemma lem8374632 {A P : Type'} (_114084 : type794 A P) (s : P -> A) (x : A) : (@I ((P -> A) -> A -> P) _114084 s x) = (term2809 A P _114084 s x).
Proof. exact (@lem8374631 A P (@I ((P -> A) -> A -> P) _114084 s) x). Qed.
Lemma lem8374634 {A P : Type'} (_114084 : type794 A P) (s : P -> A) (x : A) : (_114084 s x) = (term2809 A P _114084 s x).
Proof. exact (TRANS (@lem8374628 A P _114084 s x) (@lem8374632 A P _114084 s x)). Qed.
Lemma lem8374635 {A B P : Type'} (G2 : type557 A B P) (f : A -> B) : (G2 f) = (G2 f).
Proof. exact (eq_refl (G2 f)). Qed.
Lemma lem8374636 {A B P : Type'} (G2 : type557 A B P) (f : A -> B) (_114084 : type794 A P) (s : P -> A) (x : A) : (term1514 A B P G2 f _114084 s x) = (term2872 A B P G2 f _114084 s x).
Proof. exact (MK_COMB (@lem8374635 A B P G2 f) (@lem8374634 A P _114084 s x)). Qed.
Lemma lem8374638 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8374639 {A B P : Type'} (f : type557 A B P) (x : A -> B) : (f x) = (@I ((A -> B) -> P -> A) f x).
Proof. exact (@lem8374638 (A -> B) (P -> A) f x). Qed.
Lemma lem8374640 {A B P : Type'} (G2 : type557 A B P) (f : A -> B) : (G2 f) = (@I ((A -> B) -> P -> A) G2 f).
Proof. exact (@lem8374639 A B P G2 f). Qed.
Lemma lem8374641 {A P : Type'} (_114084 : type794 A P) (s : P -> A) (x : A) : (term2809 A P _114084 s x) = (term2809 A P _114084 s x).
Proof. exact (eq_refl (term2809 A P _114084 s x)). Qed.
Lemma lem8374642 {A B P : Type'} (G2 : type557 A B P) (f : A -> B) (_114084 : type794 A P) (s : P -> A) (x : A) : (term2872 A B P G2 f _114084 s x) = (term2873 A B P G2 f _114084 s x).
Proof. exact (MK_COMB (@lem8374640 A B P G2 f) (@lem8374641 A P _114084 s x)). Qed.
Lemma lem8374644 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8374645 {A P : Type'} (f : P -> A) (x : P) : (f x) = (@I (P -> A) f x).
Proof. exact (@lem8374644 P A f x). Qed.
Lemma lem8374646 {A B P : Type'} (G2 : type557 A B P) (f : A -> B) (_114084 : type794 A P) (s : P -> A) (x : A) : (term2873 A B P G2 f _114084 s x) = (term2874 A B P G2 f _114084 s x).
Proof. exact (@lem8374645 A P (@I ((A -> B) -> P -> A) G2 f) (term2809 A P _114084 s x)). Qed.
Lemma lem8374647 {A B P : Type'} (G2 : type557 A B P) (f : A -> B) (_114084 : type794 A P) (s : P -> A) (x : A) : (term2872 A B P G2 f _114084 s x) = (term2874 A B P G2 f _114084 s x).
Proof. exact (TRANS (@lem8374642 A B P G2 f _114084 s x) (@lem8374646 A B P G2 f _114084 s x)). Qed.
Lemma lem8374648 {A B P : Type'} (G2 : type557 A B P) (f : A -> B) (_114084 : type794 A P) (s : P -> A) (x : A) : (term1514 A B P G2 f _114084 s x) = (term2874 A B P G2 f _114084 s x).
Proof. exact (TRANS (@lem8374636 A B P G2 f _114084 s x) (@lem8374647 A B P G2 f _114084 s x)). Qed.
Lemma lem8374657 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8374658 {A P : Type'} (f : type794 A P) (x : P -> A) : (f x) = (@I ((P -> A) -> A -> P) f x).
Proof. exact (@lem8374657 (P -> A) (A -> P) f x). Qed.
Lemma lem8374659 {A P : Type'} (_114084 : type794 A P) (s : P -> A) : (_114084 s) = (@I ((P -> A) -> A -> P) _114084 s).
Proof. exact (@lem8374658 A P _114084 s). Qed.
Lemma lem8374660 {A : Type'} (x : A) : x = x.
Proof. exact (eq_refl x). Qed.
Lemma lem8374661 {A P : Type'} (_114084 : type794 A P) (s : P -> A) (x : A) : (_114084 s x) = (@I ((P -> A) -> A -> P) _114084 s x).
Proof. exact (MK_COMB (@lem8374659 A P _114084 s) (@lem8374660 A x)). Qed.
Lemma lem8374663 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8374664 {A P : Type'} (f : A -> P) (x : A) : (f x) = (@I (A -> P) f x).
Proof. exact (@lem8374663 A P f x). Qed.
Lemma lem8374665 {A P : Type'} (_114084 : type794 A P) (s : P -> A) (x : A) : (@I ((P -> A) -> A -> P) _114084 s x) = (term2809 A P _114084 s x).
Proof. exact (@lem8374664 A P (@I ((P -> A) -> A -> P) _114084 s) x). Qed.
Lemma lem8374667 {A P : Type'} (_114084 : type794 A P) (s : P -> A) (x : A) : (_114084 s x) = (term2809 A P _114084 s x).
Proof. exact (TRANS (@lem8374661 A P _114084 s x) (@lem8374665 A P _114084 s x)). Qed.
Lemma lem8374668 {A B P : Type'} (G2 : type557 A B P) (g : A -> B) : (G2 g) = (G2 g).
Proof. exact (eq_refl (G2 g)). Qed.
Lemma lem8374669 {A B P : Type'} (G2 : type557 A B P) (g : A -> B) (_114084 : type794 A P) (s : P -> A) (x : A) : (term1514 A B P G2 g _114084 s x) = (term2872 A B P G2 g _114084 s x).
Proof. exact (MK_COMB (@lem8374668 A B P G2 g) (@lem8374667 A P _114084 s x)). Qed.
Lemma lem8374671 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8374672 {A B P : Type'} (f : type557 A B P) (x : A -> B) : (f x) = (@I ((A -> B) -> P -> A) f x).
Proof. exact (@lem8374671 (A -> B) (P -> A) f x). Qed.
Lemma lem8374673 {A B P : Type'} (G2 : type557 A B P) (g : A -> B) : (G2 g) = (@I ((A -> B) -> P -> A) G2 g).
Proof. exact (@lem8374672 A B P G2 g). Qed.
Lemma lem8374674 {A P : Type'} (_114084 : type794 A P) (s : P -> A) (x : A) : (term2809 A P _114084 s x) = (term2809 A P _114084 s x).
Proof. exact (eq_refl (term2809 A P _114084 s x)). Qed.
Lemma lem8374675 {A B P : Type'} (G2 : type557 A B P) (g : A -> B) (_114084 : type794 A P) (s : P -> A) (x : A) : (term2872 A B P G2 g _114084 s x) = (term2873 A B P G2 g _114084 s x).
Proof. exact (MK_COMB (@lem8374673 A B P G2 g) (@lem8374674 A P _114084 s x)). Qed.
Lemma lem8374677 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8374678 {A P : Type'} (f : P -> A) (x : P) : (f x) = (@I (P -> A) f x).
Proof. exact (@lem8374677 P A f x). Qed.
Lemma lem8374679 {A B P : Type'} (G2 : type557 A B P) (g : A -> B) (_114084 : type794 A P) (s : P -> A) (x : A) : (term2873 A B P G2 g _114084 s x) = (term2874 A B P G2 g _114084 s x).
Proof. exact (@lem8374678 A P (@I ((A -> B) -> P -> A) G2 g) (term2809 A P _114084 s x)). Qed.
Lemma lem8374680 {A B P : Type'} (G2 : type557 A B P) (g : A -> B) (_114084 : type794 A P) (s : P -> A) (x : A) : (term2872 A B P G2 g _114084 s x) = (term2874 A B P G2 g _114084 s x).
Proof. exact (TRANS (@lem8374675 A B P G2 g _114084 s x) (@lem8374679 A B P G2 g _114084 s x)). Qed.
Lemma lem8374681 {A B P : Type'} (G2 : type557 A B P) (g : A -> B) (_114084 : type794 A P) (s : P -> A) (x : A) : (term1514 A B P G2 g _114084 s x) = (term2874 A B P G2 g _114084 s x).
Proof. exact (TRANS (@lem8374669 A B P G2 g _114084 s x) (@lem8374680 A B P G2 g _114084 s x)). Qed.
Lemma lem8374682 {A B P : Type'} (G2 : type557 A B P) (f : A -> B) (_114084 : type794 A P) (s : P -> A) (x : A) : (term1848 A B P G2 f _114084 s x) = (term2924 A B P G2 f _114084 s x).
Proof. exact (MK_COMB (@lem8374615 A) (@lem8374648 A B P G2 f _114084 s x)). Qed.
Lemma lem8374683 {A B P : Type'} (f : A -> B) (G2 : type557 A B P) (g : A -> B) (_114084 : type794 A P) (s : P -> A) (x : A) : ((term1514 A B P G2 f _114084 s x) = (term1514 A B P G2 g _114084 s x)) = ((term2874 A B P G2 f _114084 s x) = (term2874 A B P G2 g _114084 s x)).
Proof. exact (MK_COMB (@lem8374682 A B P G2 f _114084 s x) (@lem8374681 A B P G2 g _114084 s x)). Qed.
Lemma lem8374684 {A B P : Type'} (f : A -> B) (G2 : type557 A B P) (g : A -> B) (_114084 : type794 A P) (s : P -> A) (x : A) : (term2925 A B P f G2 g _114084 s x) = (term2926 A B P f G2 g _114084 s x).
Proof. exact (MK_COMB (@lem8374614) (@lem8374683 A B P f G2 g _114084 s x)). Qed.
Lemma lem8374685 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8374686 {A B P : Type'} (f : A -> B) (G2 : type557 A B P) (g : A -> B) (_114084 : type794 A P) (s : P -> A) (x : A) : (term2927 A B P f G2 g _114084 s x) = (term2928 A B P f G2 g _114084 s x).
Proof. exact (MK_COMB (@lem8374685) (@lem8374684 A B P f G2 g _114084 s x)). Qed.
Lemma lem8374687 {A B P : Type'} (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (_114084 : type794 A P) (s : P -> A) (x : A) : (term2281 A B P G2 f H2 g _114084 s x) = (term2929 A B P G2 f H2 g _114084 s x).
Proof. exact (MK_COMB (@lem8374686 A B P f G2 g _114084 s x) (@lem8374613 A B P f H2 g _114084 s x)). Qed.
Lemma lem8374696 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8374697 {A P : Type'} (f : type794 A P) (x : P -> A) : (f x) = (@I ((P -> A) -> A -> P) f x).
Proof. exact (@lem8374696 (P -> A) (A -> P) f x). Qed.
Lemma lem8374698 {A P : Type'} (_114084 : type794 A P) (s : P -> A) : (_114084 s) = (@I ((P -> A) -> A -> P) _114084 s).
Proof. exact (@lem8374697 A P _114084 s). Qed.
Lemma lem8374699 {A : Type'} (x : A) : x = x.
Proof. exact (eq_refl x). Qed.
Lemma lem8374700 {A P : Type'} (_114084 : type794 A P) (s : P -> A) (x : A) : (_114084 s x) = (@I ((P -> A) -> A -> P) _114084 s x).
Proof. exact (MK_COMB (@lem8374698 A P _114084 s) (@lem8374699 A x)). Qed.
Lemma lem8374702 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8374703 {A P : Type'} (f : A -> P) (x : A) : (f x) = (@I (A -> P) f x).
Proof. exact (@lem8374702 A P f x). Qed.
Lemma lem8374704 {A P : Type'} (_114084 : type794 A P) (s : P -> A) (x : A) : (@I ((P -> A) -> A -> P) _114084 s x) = (term2809 A P _114084 s x).
Proof. exact (@lem8374703 A P (@I ((P -> A) -> A -> P) _114084 s) x). Qed.
Lemma lem8374706 {A P : Type'} (_114084 : type794 A P) (s : P -> A) (x : A) : (_114084 s x) = (term2809 A P _114084 s x).
Proof. exact (TRANS (@lem8374700 A P _114084 s x) (@lem8374704 A P _114084 s x)). Qed.
Lemma lem8374707 {A B P : Type'} (P2 : type560 A B P) (g : A -> B) : (P2 g) = (P2 g).
Proof. exact (eq_refl (P2 g)). Qed.
Lemma lem8374708 {A B P : Type'} (P2 : type560 A B P) (g : A -> B) (_114084 : type794 A P) (s : P -> A) (x : A) : (term1495 A B P P2 g _114084 s x) = (term2878 A B P P2 g _114084 s x).
Proof. exact (MK_COMB (@lem8374707 A B P P2 g) (@lem8374706 A P _114084 s x)). Qed.
Lemma lem8374710 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8374711 {A B P : Type'} (f : type560 A B P) (x : A -> B) : (f x) = (@I ((A -> B) -> P -> Prop) f x).
Proof. exact (@lem8374710 (A -> B) (P -> Prop) f x). Qed.
Lemma lem8374712 {A B P : Type'} (P2 : type560 A B P) (g : A -> B) : (P2 g) = (@I ((A -> B) -> P -> Prop) P2 g).
Proof. exact (@lem8374711 A B P P2 g). Qed.
Lemma lem8374713 {A P : Type'} (_114084 : type794 A P) (s : P -> A) (x : A) : (term2809 A P _114084 s x) = (term2809 A P _114084 s x).
Proof. exact (eq_refl (term2809 A P _114084 s x)). Qed.
Lemma lem8374714 {A B P : Type'} (P2 : type560 A B P) (g : A -> B) (_114084 : type794 A P) (s : P -> A) (x : A) : (term2878 A B P P2 g _114084 s x) = (term2879 A B P P2 g _114084 s x).
Proof. exact (MK_COMB (@lem8374712 A B P P2 g) (@lem8374713 A P _114084 s x)). Qed.
Lemma lem8374716 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8374717 {P : Type'} (f : P -> Prop) (x : P) : (f x) = (@I (P -> Prop) f x).
Proof. exact (@lem8374716 P Prop f x). Qed.
Lemma lem8374718 {A B P : Type'} (P2 : type560 A B P) (g : A -> B) (_114084 : type794 A P) (s : P -> A) (x : A) : (term2879 A B P P2 g _114084 s x) = (term2880 A B P P2 g _114084 s x).
Proof. exact (@lem8374717 P (@I ((A -> B) -> P -> Prop) P2 g) (term2809 A P _114084 s x)). Qed.
Lemma lem8374719 {A B P : Type'} (P2 : type560 A B P) (g : A -> B) (_114084 : type794 A P) (s : P -> A) (x : A) : (term2878 A B P P2 g _114084 s x) = (term2880 A B P P2 g _114084 s x).
Proof. exact (TRANS (@lem8374714 A B P P2 g _114084 s x) (@lem8374718 A B P P2 g _114084 s x)). Qed.
Lemma lem8374720 {A B P : Type'} (P2 : type560 A B P) (g : A -> B) (_114084 : type794 A P) (s : P -> A) (x : A) : (term1495 A B P P2 g _114084 s x) = (term2880 A B P P2 g _114084 s x).
Proof. exact (TRANS (@lem8374708 A B P P2 g _114084 s x) (@lem8374719 A B P P2 g _114084 s x)). Qed.
Lemma lem8374721 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem8374730 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8374731 {A P : Type'} (f : type794 A P) (x : P -> A) : (f x) = (@I ((P -> A) -> A -> P) f x).
Proof. exact (@lem8374730 (P -> A) (A -> P) f x). Qed.
Lemma lem8374732 {A P : Type'} (_114084 : type794 A P) (s : P -> A) : (_114084 s) = (@I ((P -> A) -> A -> P) _114084 s).
Proof. exact (@lem8374731 A P _114084 s). Qed.
Lemma lem8374733 {A : Type'} (x : A) : x = x.
Proof. exact (eq_refl x). Qed.
Lemma lem8374734 {A P : Type'} (_114084 : type794 A P) (s : P -> A) (x : A) : (_114084 s x) = (@I ((P -> A) -> A -> P) _114084 s x).
Proof. exact (MK_COMB (@lem8374732 A P _114084 s) (@lem8374733 A x)). Qed.
Lemma lem8374736 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8374737 {A P : Type'} (f : A -> P) (x : A) : (f x) = (@I (A -> P) f x).
Proof. exact (@lem8374736 A P f x). Qed.
Lemma lem8374738 {A P : Type'} (_114084 : type794 A P) (s : P -> A) (x : A) : (@I ((P -> A) -> A -> P) _114084 s x) = (term2809 A P _114084 s x).
Proof. exact (@lem8374737 A P (@I ((P -> A) -> A -> P) _114084 s) x). Qed.
Lemma lem8374740 {A P : Type'} (_114084 : type794 A P) (s : P -> A) (x : A) : (_114084 s x) = (term2809 A P _114084 s x).
Proof. exact (TRANS (@lem8374734 A P _114084 s x) (@lem8374738 A P _114084 s x)). Qed.
Lemma lem8374741 {A B P : Type'} (P2 : type560 A B P) (f : A -> B) : (P2 f) = (P2 f).
Proof. exact (eq_refl (P2 f)). Qed.
Lemma lem8374742 {A B P : Type'} (P2 : type560 A B P) (f : A -> B) (_114084 : type794 A P) (s : P -> A) (x : A) : (term1495 A B P P2 f _114084 s x) = (term2878 A B P P2 f _114084 s x).
Proof. exact (MK_COMB (@lem8374741 A B P P2 f) (@lem8374740 A P _114084 s x)). Qed.
Lemma lem8374744 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8374745 {A B P : Type'} (f : type560 A B P) (x : A -> B) : (f x) = (@I ((A -> B) -> P -> Prop) f x).
Proof. exact (@lem8374744 (A -> B) (P -> Prop) f x). Qed.
Lemma lem8374746 {A B P : Type'} (P2 : type560 A B P) (f : A -> B) : (P2 f) = (@I ((A -> B) -> P -> Prop) P2 f).
Proof. exact (@lem8374745 A B P P2 f). Qed.
Lemma lem8374747 {A P : Type'} (_114084 : type794 A P) (s : P -> A) (x : A) : (term2809 A P _114084 s x) = (term2809 A P _114084 s x).
Proof. exact (eq_refl (term2809 A P _114084 s x)). Qed.
Lemma lem8374748 {A B P : Type'} (P2 : type560 A B P) (f : A -> B) (_114084 : type794 A P) (s : P -> A) (x : A) : (term2878 A B P P2 f _114084 s x) = (term2879 A B P P2 f _114084 s x).
Proof. exact (MK_COMB (@lem8374746 A B P P2 f) (@lem8374747 A P _114084 s x)). Qed.
Lemma lem8374750 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8374751 {P : Type'} (f : P -> Prop) (x : P) : (f x) = (@I (P -> Prop) f x).
Proof. exact (@lem8374750 P Prop f x). Qed.
Lemma lem8374752 {A B P : Type'} (P2 : type560 A B P) (f : A -> B) (_114084 : type794 A P) (s : P -> A) (x : A) : (term2879 A B P P2 f _114084 s x) = (term2880 A B P P2 f _114084 s x).
Proof. exact (@lem8374751 P (@I ((A -> B) -> P -> Prop) P2 f) (term2809 A P _114084 s x)). Qed.
Lemma lem8374753 {A B P : Type'} (P2 : type560 A B P) (f : A -> B) (_114084 : type794 A P) (s : P -> A) (x : A) : (term2878 A B P P2 f _114084 s x) = (term2880 A B P P2 f _114084 s x).
Proof. exact (TRANS (@lem8374748 A B P P2 f _114084 s x) (@lem8374752 A B P P2 f _114084 s x)). Qed.
Lemma lem8374754 {A B P : Type'} (P2 : type560 A B P) (f : A -> B) (_114084 : type794 A P) (s : P -> A) (x : A) : (term1495 A B P P2 f _114084 s x) = (term2880 A B P P2 f _114084 s x).
Proof. exact (TRANS (@lem8374742 A B P P2 f _114084 s x) (@lem8374753 A B P P2 f _114084 s x)). Qed.
Lemma lem8374755 {A B P : Type'} (P2 : type560 A B P) (f : A -> B) (_114084 : type794 A P) (s : P -> A) (x : A) : (term2930 A B P P2 f _114084 s x) = (term2931 A B P P2 f _114084 s x).
Proof. exact (MK_COMB (@lem8374721) (@lem8374754 A B P P2 f _114084 s x)). Qed.
Lemma lem8374756 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8374757 {A B P : Type'} (P2 : type560 A B P) (f : A -> B) (_114084 : type794 A P) (s : P -> A) (x : A) : (term2932 A B P P2 f _114084 s x) = (term2933 A B P P2 f _114084 s x).
Proof. exact (MK_COMB (@lem8374756) (@lem8374755 A B P P2 f _114084 s x)). Qed.
Lemma lem8374758 {A B P : Type'} (f : A -> B) (P2 : type560 A B P) (g : A -> B) (_114084 : type794 A P) (s : P -> A) (x : A) : (term2934 A B P f P2 g _114084 s x) = (term2935 A B P f P2 g _114084 s x).
Proof. exact (MK_COMB (@lem8374757 A B P P2 f _114084 s x) (@lem8374720 A B P P2 g _114084 s x)). Qed.
Lemma lem8374759 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem8374768 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8374769 {A P : Type'} (f : type794 A P) (x : P -> A) : (f x) = (@I ((P -> A) -> A -> P) f x).
Proof. exact (@lem8374768 (P -> A) (A -> P) f x). Qed.
Lemma lem8374770 {A P : Type'} (_114084 : type794 A P) (s : P -> A) : (_114084 s) = (@I ((P -> A) -> A -> P) _114084 s).
Proof. exact (@lem8374769 A P _114084 s). Qed.
Lemma lem8374771 {A : Type'} (x : A) : x = x.
Proof. exact (eq_refl x). Qed.
Lemma lem8374772 {A P : Type'} (_114084 : type794 A P) (s : P -> A) (x : A) : (_114084 s x) = (@I ((P -> A) -> A -> P) _114084 s x).
Proof. exact (MK_COMB (@lem8374770 A P _114084 s) (@lem8374771 A x)). Qed.
Lemma lem8374774 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8374775 {A P : Type'} (f : A -> P) (x : A) : (f x) = (@I (A -> P) f x).
Proof. exact (@lem8374774 A P f x). Qed.
Lemma lem8374776 {A P : Type'} (_114084 : type794 A P) (s : P -> A) (x : A) : (@I ((P -> A) -> A -> P) _114084 s x) = (term2809 A P _114084 s x).
Proof. exact (@lem8374775 A P (@I ((P -> A) -> A -> P) _114084 s) x). Qed.
Lemma lem8374778 {A P : Type'} (_114084 : type794 A P) (s : P -> A) (x : A) : (_114084 s x) = (term2809 A P _114084 s x).
Proof. exact (TRANS (@lem8374772 A P _114084 s x) (@lem8374776 A P _114084 s x)). Qed.
Lemma lem8374779 {A B P : Type'} (P2 : type560 A B P) (g : A -> B) : (P2 g) = (P2 g).
Proof. exact (eq_refl (P2 g)). Qed.
Lemma lem8374780 {A B P : Type'} (P2 : type560 A B P) (g : A -> B) (_114084 : type794 A P) (s : P -> A) (x : A) : (term1495 A B P P2 g _114084 s x) = (term2878 A B P P2 g _114084 s x).
Proof. exact (MK_COMB (@lem8374779 A B P P2 g) (@lem8374778 A P _114084 s x)). Qed.
Lemma lem8374782 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8374783 {A B P : Type'} (f : type560 A B P) (x : A -> B) : (f x) = (@I ((A -> B) -> P -> Prop) f x).
Proof. exact (@lem8374782 (A -> B) (P -> Prop) f x). Qed.
Lemma lem8374784 {A B P : Type'} (P2 : type560 A B P) (g : A -> B) : (P2 g) = (@I ((A -> B) -> P -> Prop) P2 g).
Proof. exact (@lem8374783 A B P P2 g). Qed.
Lemma lem8374785 {A P : Type'} (_114084 : type794 A P) (s : P -> A) (x : A) : (term2809 A P _114084 s x) = (term2809 A P _114084 s x).
Proof. exact (eq_refl (term2809 A P _114084 s x)). Qed.
Lemma lem8374786 {A B P : Type'} (P2 : type560 A B P) (g : A -> B) (_114084 : type794 A P) (s : P -> A) (x : A) : (term2878 A B P P2 g _114084 s x) = (term2879 A B P P2 g _114084 s x).
Proof. exact (MK_COMB (@lem8374784 A B P P2 g) (@lem8374785 A P _114084 s x)). Qed.
Lemma lem8374788 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8374789 {P : Type'} (f : P -> Prop) (x : P) : (f x) = (@I (P -> Prop) f x).
Proof. exact (@lem8374788 P Prop f x). Qed.
Lemma lem8374790 {A B P : Type'} (P2 : type560 A B P) (g : A -> B) (_114084 : type794 A P) (s : P -> A) (x : A) : (term2879 A B P P2 g _114084 s x) = (term2880 A B P P2 g _114084 s x).
Proof. exact (@lem8374789 P (@I ((A -> B) -> P -> Prop) P2 g) (term2809 A P _114084 s x)). Qed.
Lemma lem8374791 {A B P : Type'} (P2 : type560 A B P) (g : A -> B) (_114084 : type794 A P) (s : P -> A) (x : A) : (term2878 A B P P2 g _114084 s x) = (term2880 A B P P2 g _114084 s x).
Proof. exact (TRANS (@lem8374786 A B P P2 g _114084 s x) (@lem8374790 A B P P2 g _114084 s x)). Qed.
Lemma lem8374792 {A B P : Type'} (P2 : type560 A B P) (g : A -> B) (_114084 : type794 A P) (s : P -> A) (x : A) : (term1495 A B P P2 g _114084 s x) = (term2880 A B P P2 g _114084 s x).
Proof. exact (TRANS (@lem8374780 A B P P2 g _114084 s x) (@lem8374791 A B P P2 g _114084 s x)). Qed.
Lemma lem8374793 {A B P : Type'} (P2 : type560 A B P) (g : A -> B) (_114084 : type794 A P) (s : P -> A) (x : A) : (term2930 A B P P2 g _114084 s x) = (term2931 A B P P2 g _114084 s x).
Proof. exact (MK_COMB (@lem8374759) (@lem8374792 A B P P2 g _114084 s x)). Qed.
Lemma lem8374802 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8374803 {A P : Type'} (f : type794 A P) (x : P -> A) : (f x) = (@I ((P -> A) -> A -> P) f x).
Proof. exact (@lem8374802 (P -> A) (A -> P) f x). Qed.
Lemma lem8374804 {A P : Type'} (_114084 : type794 A P) (s : P -> A) : (_114084 s) = (@I ((P -> A) -> A -> P) _114084 s).
Proof. exact (@lem8374803 A P _114084 s). Qed.
Lemma lem8374805 {A : Type'} (x : A) : x = x.
Proof. exact (eq_refl x). Qed.
Lemma lem8374806 {A P : Type'} (_114084 : type794 A P) (s : P -> A) (x : A) : (_114084 s x) = (@I ((P -> A) -> A -> P) _114084 s x).
Proof. exact (MK_COMB (@lem8374804 A P _114084 s) (@lem8374805 A x)). Qed.
Lemma lem8374808 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8374809 {A P : Type'} (f : A -> P) (x : A) : (f x) = (@I (A -> P) f x).
Proof. exact (@lem8374808 A P f x). Qed.
Lemma lem8374810 {A P : Type'} (_114084 : type794 A P) (s : P -> A) (x : A) : (@I ((P -> A) -> A -> P) _114084 s x) = (term2809 A P _114084 s x).
Proof. exact (@lem8374809 A P (@I ((P -> A) -> A -> P) _114084 s) x). Qed.
Lemma lem8374812 {A P : Type'} (_114084 : type794 A P) (s : P -> A) (x : A) : (_114084 s x) = (term2809 A P _114084 s x).
Proof. exact (TRANS (@lem8374806 A P _114084 s x) (@lem8374810 A P _114084 s x)). Qed.
Lemma lem8374813 {A B P : Type'} (P2 : type560 A B P) (f : A -> B) : (P2 f) = (P2 f).
Proof. exact (eq_refl (P2 f)). Qed.
Lemma lem8374814 {A B P : Type'} (P2 : type560 A B P) (f : A -> B) (_114084 : type794 A P) (s : P -> A) (x : A) : (term1495 A B P P2 f _114084 s x) = (term2878 A B P P2 f _114084 s x).
Proof. exact (MK_COMB (@lem8374813 A B P P2 f) (@lem8374812 A P _114084 s x)). Qed.
Lemma lem8374816 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8374817 {A B P : Type'} (f : type560 A B P) (x : A -> B) : (f x) = (@I ((A -> B) -> P -> Prop) f x).
Proof. exact (@lem8374816 (A -> B) (P -> Prop) f x). Qed.
Lemma lem8374818 {A B P : Type'} (P2 : type560 A B P) (f : A -> B) : (P2 f) = (@I ((A -> B) -> P -> Prop) P2 f).
Proof. exact (@lem8374817 A B P P2 f). Qed.
Lemma lem8374819 {A P : Type'} (_114084 : type794 A P) (s : P -> A) (x : A) : (term2809 A P _114084 s x) = (term2809 A P _114084 s x).
Proof. exact (eq_refl (term2809 A P _114084 s x)). Qed.
Lemma lem8374820 {A B P : Type'} (P2 : type560 A B P) (f : A -> B) (_114084 : type794 A P) (s : P -> A) (x : A) : (term2878 A B P P2 f _114084 s x) = (term2879 A B P P2 f _114084 s x).
Proof. exact (MK_COMB (@lem8374818 A B P P2 f) (@lem8374819 A P _114084 s x)). Qed.
Lemma lem8374822 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8374823 {P : Type'} (f : P -> Prop) (x : P) : (f x) = (@I (P -> Prop) f x).
Proof. exact (@lem8374822 P Prop f x). Qed.
Lemma lem8374824 {A B P : Type'} (P2 : type560 A B P) (f : A -> B) (_114084 : type794 A P) (s : P -> A) (x : A) : (term2879 A B P P2 f _114084 s x) = (term2880 A B P P2 f _114084 s x).
Proof. exact (@lem8374823 P (@I ((A -> B) -> P -> Prop) P2 f) (term2809 A P _114084 s x)). Qed.
Lemma lem8374825 {A B P : Type'} (P2 : type560 A B P) (f : A -> B) (_114084 : type794 A P) (s : P -> A) (x : A) : (term2878 A B P P2 f _114084 s x) = (term2880 A B P P2 f _114084 s x).
Proof. exact (TRANS (@lem8374820 A B P P2 f _114084 s x) (@lem8374824 A B P P2 f _114084 s x)). Qed.
Lemma lem8374826 {A B P : Type'} (P2 : type560 A B P) (f : A -> B) (_114084 : type794 A P) (s : P -> A) (x : A) : (term1495 A B P P2 f _114084 s x) = (term2880 A B P P2 f _114084 s x).
Proof. exact (TRANS (@lem8374814 A B P P2 f _114084 s x) (@lem8374825 A B P P2 f _114084 s x)). Qed.
Lemma lem8374827 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8374828 {A B P : Type'} (P2 : type560 A B P) (f : A -> B) (_114084 : type794 A P) (s : P -> A) (x : A) : (term1814 A B P P2 f _114084 s x) = (term2881 A B P P2 f _114084 s x).
Proof. exact (MK_COMB (@lem8374827) (@lem8374826 A B P P2 f _114084 s x)). Qed.
Lemma lem8374829 {A B P : Type'} (f : A -> B) (P2 : type560 A B P) (g : A -> B) (_114084 : type794 A P) (s : P -> A) (x : A) : (term2936 A B P f P2 g _114084 s x) = (term2937 A B P f P2 g _114084 s x).
Proof. exact (MK_COMB (@lem8374828 A B P P2 f _114084 s x) (@lem8374793 A B P P2 g _114084 s x)). Qed.
Lemma lem8374830 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8374831 {A B P : Type'} (f : A -> B) (P2 : type560 A B P) (g : A -> B) (_114084 : type794 A P) (s : P -> A) (x : A) : (term2938 A B P f P2 g _114084 s x) = (term2939 A B P f P2 g _114084 s x).
Proof. exact (MK_COMB (@lem8374830) (@lem8374829 A B P f P2 g _114084 s x)). Qed.
Lemma lem8374832 {A B P : Type'} (f : A -> B) (P2 : type560 A B P) (g : A -> B) (_114084 : type794 A P) (s : P -> A) (x : A) : (term2279 A B P f P2 g _114084 s x) = (term2940 A B P f P2 g _114084 s x).
Proof. exact (MK_COMB (@lem8374831 A B P f P2 g _114084 s x) (@lem8374758 A B P f P2 g _114084 s x)). Qed.
Lemma lem8374833 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8374834 {A B P : Type'} (f : A -> B) (P2 : type560 A B P) (g : A -> B) (_114084 : type794 A P) (s : P -> A) (x : A) : (term2283 A B P f P2 g _114084 s x) = (term2941 A B P f P2 g _114084 s x).
Proof. exact (MK_COMB (@lem8374833) (@lem8374832 A B P f P2 g _114084 s x)). Qed.
Lemma lem8374835 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (_114084 : type794 A P) (s : P -> A) (x : A) : (term2285 A B P P2 G2 f H2 g _114084 s x) = (term2942 A B P P2 G2 f H2 g _114084 s x).
Proof. exact (MK_COMB (@lem8374834 A B P f P2 g _114084 s x) (@lem8374687 A B P G2 f H2 g _114084 s x)). Qed.
Lemma lem8374836 {B : Type'} : (@eq B) = (@eq B).
Proof. exact (eq_refl (@eq B)). Qed.
Lemma lem8374841 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8374842 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (@lem8374841 A B f x). Qed.
Lemma lem8374844 {A B : Type'} (f : A -> B) (z : A) : (f z) = (@I (A -> B) f z).
Proof. exact (@lem8374842 A B f z). Qed.
Lemma lem8374849 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8374850 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (@lem8374849 A B f x). Qed.
Lemma lem8374852 {A B : Type'} (g : A -> B) (z : A) : (g z) = (@I (A -> B) g z).
Proof. exact (@lem8374850 A B g z). Qed.
Lemma lem8374853 {A B : Type'} (f : A -> B) (z : A) : (term939 A B f z) = (term2911 A B f z).
Proof. exact (MK_COMB (@lem8374836 B) (@lem8374844 A B f z)). Qed.
Lemma lem8374854 {A B : Type'} (f : A -> B) (g : A -> B) (z : A) : ((f z) = (g z)) = ((@I (A -> B) f z) = (@I (A -> B) g z)).
Proof. exact (MK_COMB (@lem8374853 A B f z) (@lem8374852 A B g z)). Qed.
Lemma lem8374855 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem8374862 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8374863 {A : Type'} (f : type1402 A) (x : A) : (f x) = (@I (A -> A -> Prop) f x).
Proof. exact (@lem8374862 A (A -> Prop) f x). Qed.
Lemma lem8374864 {A : Type'} (lt2 : type1402 A) (z : A) : (lt2 z) = (@I (A -> A -> Prop) lt2 z).
Proof. exact (@lem8374863 A lt2 z). Qed.
Lemma lem8374865 {A : Type'} (x : A) : x = x.
Proof. exact (eq_refl x). Qed.
Lemma lem8374866 {A : Type'} (lt2 : type1402 A) (z : A) (x : A) : (lt2 z x) = (@I (A -> A -> Prop) lt2 z x).
Proof. exact (MK_COMB (@lem8374864 A lt2 z) (@lem8374865 A x)). Qed.
Lemma lem8374868 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8374869 {A : Type'} (f : A -> Prop) (x : A) : (f x) = (@I (A -> Prop) f x).
Proof. exact (@lem8374868 A Prop f x). Qed.
Lemma lem8374870 {A : Type'} (lt2 : type1402 A) (z : A) (x : A) : (@I (A -> A -> Prop) lt2 z x) = (term586 A lt2 z x).
Proof. exact (@lem8374869 A (@I (A -> A -> Prop) lt2 z) x). Qed.
Lemma lem8374872 {A : Type'} (lt2 : type1402 A) (z : A) (x : A) : (lt2 z x) = (term586 A lt2 z x).
Proof. exact (TRANS (@lem8374866 A lt2 z x) (@lem8374870 A lt2 z x)). Qed.
Lemma lem8374873 {A : Type'} (lt2 : type1402 A) (z : A) (x : A) : (term607 A lt2 z x) = (term608 A lt2 z x).
Proof. exact (MK_COMB (@lem8374855) (@lem8374872 A lt2 z x)). Qed.
Lemma lem8374874 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8374875 {A : Type'} (lt2 : type1402 A) (z : A) (x : A) : (term619 A lt2 z x) = (term620 A lt2 z x).
Proof. exact (MK_COMB (@lem8374874) (@lem8374873 A lt2 z x)). Qed.
Lemma lem8374876 {A B : Type'} (lt2 : type1402 A) (x : A) (f : A -> B) (g : A -> B) (z : A) : (term2275 A B lt2 x f g z) = (term2912 A B lt2 x f g z).
Proof. exact (MK_COMB (@lem8374875 A lt2 z x) (@lem8374854 A B f g z)). Qed.
Lemma lem8374877 {A B : Type'} (lt2 : type1402 A) (x : A) (f : A -> B) (g : A -> B) : (term2276 A B lt2 x f g) = (term2913 A B lt2 x f g).
Proof. exact (fun_ext (fun z : A => @lem8374876 A B lt2 x f g z)). Qed.
Lemma lem8374878 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem8374879 {A B : Type'} (lt2 : type1402 A) (x : A) (f : A -> B) (g : A -> B) : (term2277 A B lt2 x f g) = (term2914 A B lt2 x f g).
Proof. exact (MK_COMB (@lem8374878 A) (@lem8374877 A B lt2 x f g)). Qed.
Lemma lem8374880 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8374881 {A B : Type'} (lt2 : type1402 A) (x : A) (f : A -> B) (g : A -> B) : (term2288 A B lt2 x f g) = (term2915 A B lt2 x f g).
Proof. exact (MK_COMB (@lem8374880) (@lem8374879 A B lt2 x f g)). Qed.
Lemma lem8374882 {A B P : Type'} (lt2 : type1402 A) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (_114084 : type794 A P) (s : P -> A) (x : A) : (term2290 A B P lt2 P2 G2 f H2 g _114084 s x) = (term2943 A B P lt2 P2 G2 f H2 g _114084 s x).
Proof. exact (MK_COMB (@lem8374881 A B lt2 x f g) (@lem8374835 A B P P2 G2 f H2 g _114084 s x)). Qed.
Lemma lem8374883 {A : Type'} : (@eq A) = (@eq A).
Proof. exact (eq_refl (@eq A)). Qed.
Lemma lem8374888 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8374889 {A P : Type'} (f : P -> A) (x : P) : (f x) = (@I (P -> A) f x).
Proof. exact (@lem8374888 P A f x). Qed.
Lemma lem8374891 {A P : Type'} (s : P -> A) (y : P) : (s y) = (@I (P -> A) s y).
Proof. exact (@lem8374889 A P s y). Qed.
Lemma lem8374892 {A : Type'} (x : A) : x = x.
Proof. exact (eq_refl x). Qed.
Lemma lem8374893 {A P : Type'} (s : P -> A) (y : P) : (term28 A P s y) = (term618 A P s y).
Proof. exact (MK_COMB (@lem8374883 A) (@lem8374891 A P s y)). Qed.
Lemma lem8374894 {A P : Type'} (s : P -> A) (y : P) (x : A) : ((s y) = x) = ((@I (P -> A) s y) = x).
Proof. exact (MK_COMB (@lem8374893 A P s y) (@lem8374892 A x)). Qed.
Lemma lem8374895 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8374896 {A P : Type'} (s : P -> A) (y : P) (x : A) : (term2514 A P s y x) = (term2886 A P s y x).
Proof. exact (MK_COMB (@lem8374895) (@lem8374894 A P s y x)). Qed.
Lemma lem8374897 {A B P : Type'} (y : P) (lt2 : type1402 A) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (_114084 : type794 A P) (s : P -> A) (x : A) : (term2516 A B P y lt2 P2 G2 f H2 g _114084 s x) = (term2944 A B P y lt2 P2 G2 f H2 g _114084 s x).
Proof. exact (MK_COMB (@lem8374896 A P s y x) (@lem8374882 A B P lt2 P2 G2 f H2 g _114084 s x)). Qed.
Lemma lem8374898 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8374899 {A B P : Type'} (y : P) (lt2 : type1402 A) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (_114084 : type794 A P) (s : P -> A) (x : A) : (term2582 A B P y lt2 P2 G2 f H2 g _114084 s x) = (term2945 A B P y lt2 P2 G2 f H2 g _114084 s x).
Proof. exact (MK_COMB (@lem8374898) (@lem8374897 A B P y lt2 P2 G2 f H2 g _114084 s x)). Qed.
Lemma lem8374900 {A B P : Type'} (y : P) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (_114084 : type794 A P) (s : P -> A) (lt2 : type1402 A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (H1 : type549 A B) (g : A -> B) (x : A) : (term2584 A B P y P2 G2 H2 _114084 s lt2 P1 G1 f H1 g x) = (term2946 A B P y P2 G2 H2 _114084 s lt2 P1 G1 f H1 g x).
Proof. exact (MK_COMB (@lem8374899 A B P y lt2 P2 G2 f H2 g _114084 s x) (@lem8374542 A B P s lt2 P1 G1 f H1 g x)). Qed.
Lemma lem8374901 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8374902 {A B P : Type'} (y : P) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (_114084 : type794 A P) (s : P -> A) (lt2 : type1402 A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (H1 : type549 A B) (g : A -> B) (x : A) : (term2783 A B P y P2 G2 H2 _114084 s lt2 P1 G1 f H1 g x) = (term2947 A B P y P2 G2 H2 _114084 s lt2 P1 G1 f H1 g x).
Proof. exact (MK_COMB (@lem8374901) (@lem8374900 A B P y P2 G2 H2 _114084 s lt2 P1 G1 f H1 g x)). Qed.
Lemma lem8374903 {A B P : Type'} (H2 : type558 A B P) (H1 : type549 A B) (g : A -> B) (y : P) (P2 : type560 A B P) (G2 : type557 A B P) (_114084 : type794 A P) (s : P -> A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (lt2 : type1402 A) (y' : A) (x : A) : (term2797 A B P H2 H1 g y P2 G2 _114084 s P1 G1 f lt2 y' x) = (term2948 A B P H2 H1 g y P2 G2 _114084 s P1 G1 f lt2 y' x).
Proof. exact (MK_COMB (@lem8374902 A B P y P2 G2 H2 _114084 s lt2 P1 G1 f H1 g x) (@lem8374310 A B P y P2 G2 _114084 s P1 G1 f lt2 y' x)). Qed.
Lemma lem8374904 {A B P : Type'} (H2 : type558 A B P) (H1 : type549 A B) (g : A -> B) (y : P) (P2 : type560 A B P) (G2 : type557 A B P) (_114084 : type794 A P) (s : P -> A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (lt2 : type1402 A) (y' : A) (x : A) (h1 : term2797 A B P H2 H1 g y P2 G2 _114084 s P1 G1 f lt2 y' x) : term2948 A B P H2 H1 g y P2 G2 _114084 s P1 G1 f lt2 y' x.
Proof. exact (EQ_MP (@lem8374903 A B P H2 H1 g y P2 G2 _114084 s P1 G1 f lt2 y' x) (@lem8373556 A B P H2 H1 g y P2 G2 _114084 s P1 G1 f lt2 y' x h1)). Qed.
Lemma lem8374905 {B : Type'} : (@eq B) = (@eq B).
Proof. exact (eq_refl (@eq B)). Qed.
Lemma lem8374912 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8374913 {A B P : Type'} (f : type558 A B P) (x : A -> B) : (f x) = (@I ((A -> B) -> P -> B) f x).
Proof. exact (@lem8374912 (A -> B) (P -> B) f x). Qed.
Lemma lem8374914 {A B P : Type'} (H2 : type558 A B P) (f : A -> B) : (H2 f) = (@I ((A -> B) -> P -> B) H2 f).
Proof. exact (@lem8374913 A B P H2 f). Qed.
Lemma lem8374915 {P : Type'} (a : P) : a = a.
Proof. exact (eq_refl a). Qed.
Lemma lem8374916 {A B P : Type'} (H2 : type558 A B P) (f : A -> B) (a : P) : (H2 f a) = (@I ((A -> B) -> P -> B) H2 f a).
Proof. exact (MK_COMB (@lem8374914 A B P H2 f) (@lem8374915 P a)). Qed.
Lemma lem8374918 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8374919 {B P : Type'} (f : P -> B) (x : P) : (f x) = (@I (P -> B) f x).
Proof. exact (@lem8374918 P B f x). Qed.
Lemma lem8374920 {A B P : Type'} (H2 : type558 A B P) (f : A -> B) (a : P) : (@I ((A -> B) -> P -> B) H2 f a) = (term2949 A B P H2 f a).
Proof. exact (@lem8374919 B P (@I ((A -> B) -> P -> B) H2 f) a). Qed.
Lemma lem8374922 {A B P : Type'} (H2 : type558 A B P) (f : A -> B) (a : P) : (H2 f a) = (term2949 A B P H2 f a).
Proof. exact (TRANS (@lem8374916 A B P H2 f a) (@lem8374920 A B P H2 f a)). Qed.
Lemma lem8374929 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8374930 {A B P : Type'} (f : type558 A B P) (x : A -> B) : (f x) = (@I ((A -> B) -> P -> B) f x).
Proof. exact (@lem8374929 (A -> B) (P -> B) f x). Qed.
Lemma lem8374931 {A B P : Type'} (H2 : type558 A B P) (g : A -> B) : (H2 g) = (@I ((A -> B) -> P -> B) H2 g).
Proof. exact (@lem8374930 A B P H2 g). Qed.
Lemma lem8374932 {P : Type'} (a : P) : a = a.
Proof. exact (eq_refl a). Qed.
Lemma lem8374933 {A B P : Type'} (H2 : type558 A B P) (g : A -> B) (a : P) : (H2 g a) = (@I ((A -> B) -> P -> B) H2 g a).
Proof. exact (MK_COMB (@lem8374931 A B P H2 g) (@lem8374932 P a)). Qed.
Lemma lem8374935 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8374936 {B P : Type'} (f : P -> B) (x : P) : (f x) = (@I (P -> B) f x).
Proof. exact (@lem8374935 P B f x). Qed.
Lemma lem8374937 {A B P : Type'} (H2 : type558 A B P) (g : A -> B) (a : P) : (@I ((A -> B) -> P -> B) H2 g a) = (term2949 A B P H2 g a).
Proof. exact (@lem8374936 B P (@I ((A -> B) -> P -> B) H2 g) a). Qed.
Lemma lem8374939 {A B P : Type'} (H2 : type558 A B P) (g : A -> B) (a : P) : (H2 g a) = (term2949 A B P H2 g a).
Proof. exact (TRANS (@lem8374933 A B P H2 g a) (@lem8374937 A B P H2 g a)). Qed.
Lemma lem8374940 {A B P : Type'} (H2 : type558 A B P) (f : A -> B) (a : P) : (term1877 A B P H2 f a) = (term2950 A B P H2 f a).
Proof. exact (MK_COMB (@lem8374905 B) (@lem8374922 A B P H2 f a)). Qed.
Lemma lem8374941 {A B P : Type'} (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : ((H2 f a) = (H2 g a)) = ((term2949 A B P H2 f a) = (term2949 A B P H2 g a)).
Proof. exact (MK_COMB (@lem8374940 A B P H2 f a) (@lem8374939 A B P H2 g a)). Qed.
Lemma lem8374942 {A : Type'} : (@eq A) = (@eq A).
Proof. exact (eq_refl (@eq A)). Qed.
Lemma lem8374949 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8374950 {A B P : Type'} (f : type557 A B P) (x : A -> B) : (f x) = (@I ((A -> B) -> P -> A) f x).
Proof. exact (@lem8374949 (A -> B) (P -> A) f x). Qed.
Lemma lem8374951 {A B P : Type'} (G2 : type557 A B P) (f : A -> B) : (G2 f) = (@I ((A -> B) -> P -> A) G2 f).
Proof. exact (@lem8374950 A B P G2 f). Qed.
Lemma lem8374952 {P : Type'} (a : P) : a = a.
Proof. exact (eq_refl a). Qed.
Lemma lem8374953 {A B P : Type'} (G2 : type557 A B P) (f : A -> B) (a : P) : (G2 f a) = (@I ((A -> B) -> P -> A) G2 f a).
Proof. exact (MK_COMB (@lem8374951 A B P G2 f) (@lem8374952 P a)). Qed.
Lemma lem8374955 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8374956 {A P : Type'} (f : P -> A) (x : P) : (f x) = (@I (P -> A) f x).
Proof. exact (@lem8374955 P A f x). Qed.
Lemma lem8374957 {A B P : Type'} (G2 : type557 A B P) (f : A -> B) (a : P) : (@I ((A -> B) -> P -> A) G2 f a) = (term2845 A B P G2 f a).
Proof. exact (@lem8374956 A P (@I ((A -> B) -> P -> A) G2 f) a). Qed.
Lemma lem8374959 {A B P : Type'} (G2 : type557 A B P) (f : A -> B) (a : P) : (G2 f a) = (term2845 A B P G2 f a).
Proof. exact (TRANS (@lem8374953 A B P G2 f a) (@lem8374957 A B P G2 f a)). Qed.
Lemma lem8374966 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8374967 {A B P : Type'} (f : type557 A B P) (x : A -> B) : (f x) = (@I ((A -> B) -> P -> A) f x).
Proof. exact (@lem8374966 (A -> B) (P -> A) f x). Qed.
Lemma lem8374968 {A B P : Type'} (G2 : type557 A B P) (g : A -> B) : (G2 g) = (@I ((A -> B) -> P -> A) G2 g).
Proof. exact (@lem8374967 A B P G2 g). Qed.
Lemma lem8374969 {P : Type'} (a : P) : a = a.
Proof. exact (eq_refl a). Qed.
Lemma lem8374970 {A B P : Type'} (G2 : type557 A B P) (g : A -> B) (a : P) : (G2 g a) = (@I ((A -> B) -> P -> A) G2 g a).
Proof. exact (MK_COMB (@lem8374968 A B P G2 g) (@lem8374969 P a)). Qed.
Lemma lem8374972 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8374973 {A P : Type'} (f : P -> A) (x : P) : (f x) = (@I (P -> A) f x).
Proof. exact (@lem8374972 P A f x). Qed.
Lemma lem8374974 {A B P : Type'} (G2 : type557 A B P) (g : A -> B) (a : P) : (@I ((A -> B) -> P -> A) G2 g a) = (term2845 A B P G2 g a).
Proof. exact (@lem8374973 A P (@I ((A -> B) -> P -> A) G2 g) a). Qed.
Lemma lem8374976 {A B P : Type'} (G2 : type557 A B P) (g : A -> B) (a : P) : (G2 g a) = (term2845 A B P G2 g a).
Proof. exact (TRANS (@lem8374970 A B P G2 g a) (@lem8374974 A B P G2 g a)). Qed.
Lemma lem8374977 {A B P : Type'} (G2 : type557 A B P) (f : A -> B) (a : P) : (term2951 A B P G2 f a) = (term2952 A B P G2 f a).
Proof. exact (MK_COMB (@lem8374942 A) (@lem8374959 A B P G2 f a)). Qed.
Lemma lem8374978 {A B P : Type'} (f : A -> B) (G2 : type557 A B P) (g : A -> B) (a : P) : ((G2 f a) = (G2 g a)) = ((term2845 A B P G2 f a) = (term2845 A B P G2 g a)).
Proof. exact (MK_COMB (@lem8374977 A B P G2 f a) (@lem8374976 A B P G2 g a)). Qed.
Lemma lem8374979 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8374980 {A B P : Type'} (f : A -> B) (G2 : type557 A B P) (g : A -> B) (a : P) : (term2953 A B P f G2 g a) = (term2954 A B P f G2 g a).
Proof. exact (MK_COMB (@lem8374979) (@lem8374978 A B P f G2 g a)). Qed.
Lemma lem8374981 {A B P : Type'} (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term2170 A B P G2 f H2 g a) = (term2955 A B P G2 f H2 g a).
Proof. exact (MK_COMB (@lem8374980 A B P f G2 g a) (@lem8374941 A B P f H2 g a)). Qed.
Lemma lem8374988 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8374989 {A B P : Type'} (f : type560 A B P) (x : A -> B) : (f x) = (@I ((A -> B) -> P -> Prop) f x).
Proof. exact (@lem8374988 (A -> B) (P -> Prop) f x). Qed.
Lemma lem8374990 {A B P : Type'} (P2 : type560 A B P) (g : A -> B) : (P2 g) = (@I ((A -> B) -> P -> Prop) P2 g).
Proof. exact (@lem8374989 A B P P2 g). Qed.
Lemma lem8374991 {P : Type'} (a : P) : a = a.
Proof. exact (eq_refl a). Qed.
Lemma lem8374992 {A B P : Type'} (P2 : type560 A B P) (g : A -> B) (a : P) : (P2 g a) = (@I ((A -> B) -> P -> Prop) P2 g a).
Proof. exact (MK_COMB (@lem8374990 A B P P2 g) (@lem8374991 P a)). Qed.
Lemma lem8374994 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8374995 {P : Type'} (f : P -> Prop) (x : P) : (f x) = (@I (P -> Prop) f x).
Proof. exact (@lem8374994 P Prop f x). Qed.
Lemma lem8374996 {A B P : Type'} (P2 : type560 A B P) (g : A -> B) (a : P) : (@I ((A -> B) -> P -> Prop) P2 g a) = (term2851 A B P P2 g a).
Proof. exact (@lem8374995 P (@I ((A -> B) -> P -> Prop) P2 g) a). Qed.
Lemma lem8374998 {A B P : Type'} (P2 : type560 A B P) (g : A -> B) (a : P) : (P2 g a) = (term2851 A B P P2 g a).
Proof. exact (TRANS (@lem8374992 A B P P2 g a) (@lem8374996 A B P P2 g a)). Qed.
Lemma lem8374999 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem8375006 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8375007 {A B P : Type'} (f : type560 A B P) (x : A -> B) : (f x) = (@I ((A -> B) -> P -> Prop) f x).
Proof. exact (@lem8375006 (A -> B) (P -> Prop) f x). Qed.
Lemma lem8375008 {A B P : Type'} (P2 : type560 A B P) (f : A -> B) : (P2 f) = (@I ((A -> B) -> P -> Prop) P2 f).
Proof. exact (@lem8375007 A B P P2 f). Qed.
Lemma lem8375009 {P : Type'} (a : P) : a = a.
Proof. exact (eq_refl a). Qed.
Lemma lem8375010 {A B P : Type'} (P2 : type560 A B P) (f : A -> B) (a : P) : (P2 f a) = (@I ((A -> B) -> P -> Prop) P2 f a).
Proof. exact (MK_COMB (@lem8375008 A B P P2 f) (@lem8375009 P a)). Qed.
Lemma lem8375012 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8375013 {P : Type'} (f : P -> Prop) (x : P) : (f x) = (@I (P -> Prop) f x).
Proof. exact (@lem8375012 P Prop f x). Qed.
Lemma lem8375014 {A B P : Type'} (P2 : type560 A B P) (f : A -> B) (a : P) : (@I ((A -> B) -> P -> Prop) P2 f a) = (term2851 A B P P2 f a).
Proof. exact (@lem8375013 P (@I ((A -> B) -> P -> Prop) P2 f) a). Qed.
Lemma lem8375016 {A B P : Type'} (P2 : type560 A B P) (f : A -> B) (a : P) : (P2 f a) = (term2851 A B P P2 f a).
Proof. exact (TRANS (@lem8375010 A B P P2 f a) (@lem8375014 A B P P2 f a)). Qed.
Lemma lem8375017 {A B P : Type'} (P2 : type560 A B P) (f : A -> B) (a : P) : (term2852 A B P P2 f a) = (term2853 A B P P2 f a).
Proof. exact (MK_COMB (@lem8374999) (@lem8375016 A B P P2 f a)). Qed.
Lemma lem8375018 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8375019 {A B P : Type'} (P2 : type560 A B P) (f : A -> B) (a : P) : (term2854 A B P P2 f a) = (term2855 A B P P2 f a).
Proof. exact (MK_COMB (@lem8375018) (@lem8375017 A B P P2 f a)). Qed.
Lemma lem8375020 {A B P : Type'} (f : A -> B) (P2 : type560 A B P) (g : A -> B) (a : P) : (term2956 A B P f P2 g a) = (term2957 A B P f P2 g a).
Proof. exact (MK_COMB (@lem8375019 A B P P2 f a) (@lem8374998 A B P P2 g a)). Qed.
Lemma lem8375021 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem8375028 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8375029 {A B P : Type'} (f : type560 A B P) (x : A -> B) : (f x) = (@I ((A -> B) -> P -> Prop) f x).
Proof. exact (@lem8375028 (A -> B) (P -> Prop) f x). Qed.
Lemma lem8375030 {A B P : Type'} (P2 : type560 A B P) (g : A -> B) : (P2 g) = (@I ((A -> B) -> P -> Prop) P2 g).
Proof. exact (@lem8375029 A B P P2 g). Qed.
Lemma lem8375031 {P : Type'} (a : P) : a = a.
Proof. exact (eq_refl a). Qed.
Lemma lem8375032 {A B P : Type'} (P2 : type560 A B P) (g : A -> B) (a : P) : (P2 g a) = (@I ((A -> B) -> P -> Prop) P2 g a).
Proof. exact (MK_COMB (@lem8375030 A B P P2 g) (@lem8375031 P a)). Qed.
Lemma lem8375034 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8375035 {P : Type'} (f : P -> Prop) (x : P) : (f x) = (@I (P -> Prop) f x).
Proof. exact (@lem8375034 P Prop f x). Qed.
Lemma lem8375036 {A B P : Type'} (P2 : type560 A B P) (g : A -> B) (a : P) : (@I ((A -> B) -> P -> Prop) P2 g a) = (term2851 A B P P2 g a).
Proof. exact (@lem8375035 P (@I ((A -> B) -> P -> Prop) P2 g) a). Qed.
Lemma lem8375038 {A B P : Type'} (P2 : type560 A B P) (g : A -> B) (a : P) : (P2 g a) = (term2851 A B P P2 g a).
Proof. exact (TRANS (@lem8375032 A B P P2 g a) (@lem8375036 A B P P2 g a)). Qed.
Lemma lem8375039 {A B P : Type'} (P2 : type560 A B P) (g : A -> B) (a : P) : (term2852 A B P P2 g a) = (term2853 A B P P2 g a).
Proof. exact (MK_COMB (@lem8375021) (@lem8375038 A B P P2 g a)). Qed.
Lemma lem8375046 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8375047 {A B P : Type'} (f : type560 A B P) (x : A -> B) : (f x) = (@I ((A -> B) -> P -> Prop) f x).
Proof. exact (@lem8375046 (A -> B) (P -> Prop) f x). Qed.
Lemma lem8375048 {A B P : Type'} (P2 : type560 A B P) (f : A -> B) : (P2 f) = (@I ((A -> B) -> P -> Prop) P2 f).
Proof. exact (@lem8375047 A B P P2 f). Qed.
Lemma lem8375049 {P : Type'} (a : P) : a = a.
Proof. exact (eq_refl a). Qed.
Lemma lem8375050 {A B P : Type'} (P2 : type560 A B P) (f : A -> B) (a : P) : (P2 f a) = (@I ((A -> B) -> P -> Prop) P2 f a).
Proof. exact (MK_COMB (@lem8375048 A B P P2 f) (@lem8375049 P a)). Qed.
Lemma lem8375052 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8375053 {P : Type'} (f : P -> Prop) (x : P) : (f x) = (@I (P -> Prop) f x).
Proof. exact (@lem8375052 P Prop f x). Qed.
Lemma lem8375054 {A B P : Type'} (P2 : type560 A B P) (f : A -> B) (a : P) : (@I ((A -> B) -> P -> Prop) P2 f a) = (term2851 A B P P2 f a).
Proof. exact (@lem8375053 P (@I ((A -> B) -> P -> Prop) P2 f) a). Qed.
Lemma lem8375056 {A B P : Type'} (P2 : type560 A B P) (f : A -> B) (a : P) : (P2 f a) = (term2851 A B P P2 f a).
Proof. exact (TRANS (@lem8375050 A B P P2 f a) (@lem8375054 A B P P2 f a)). Qed.
Lemma lem8375057 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8375058 {A B P : Type'} (P2 : type560 A B P) (f : A -> B) (a : P) : (term2958 A B P P2 f a) = (term2959 A B P P2 f a).
Proof. exact (MK_COMB (@lem8375057) (@lem8375056 A B P P2 f a)). Qed.
Lemma lem8375059 {A B P : Type'} (f : A -> B) (P2 : type560 A B P) (g : A -> B) (a : P) : (term2960 A B P f P2 g a) = (term2961 A B P f P2 g a).
Proof. exact (MK_COMB (@lem8375058 A B P P2 f a) (@lem8375039 A B P P2 g a)). Qed.
Lemma lem8375060 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8375061 {A B P : Type'} (f : A -> B) (P2 : type560 A B P) (g : A -> B) (a : P) : (term2962 A B P f P2 g a) = (term2963 A B P f P2 g a).
Proof. exact (MK_COMB (@lem8375060) (@lem8375059 A B P f P2 g a)). Qed.
Lemma lem8375062 {A B P : Type'} (f : A -> B) (P2 : type560 A B P) (g : A -> B) (a : P) : (term2169 A B P f P2 g a) = (term2964 A B P f P2 g a).
Proof. exact (MK_COMB (@lem8375061 A B P f P2 g a) (@lem8375020 A B P f P2 g a)). Qed.
Lemma lem8375063 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8375064 {A B P : Type'} (f : A -> B) (P2 : type560 A B P) (g : A -> B) (a : P) : (term2172 A B P f P2 g a) = (term2965 A B P f P2 g a).
Proof. exact (MK_COMB (@lem8375063) (@lem8375062 A B P f P2 g a)). Qed.
Lemma lem8375065 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term2173 A B P P2 G2 f H2 g a) = (term2966 A B P P2 G2 f H2 g a).
Proof. exact (MK_COMB (@lem8375064 A B P f P2 g a) (@lem8374981 A B P G2 f H2 g a)). Qed.
Lemma lem8375066 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem8375067 {B : Type'} : (@eq B) = (@eq B).
Proof. exact (eq_refl (@eq B)). Qed.
Lemma lem8375068 {A B : Type'} (f : A -> B) : f = f.
Proof. exact (eq_refl f). Qed.
Lemma lem8375077 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8375078 {A B P : Type'} (f : type518 A B P) (x : A -> B) : (f x) = (@I ((A -> B) -> (A -> B) -> P -> A) f x).
Proof. exact (@lem8375077 (A -> B) (type557 A B P) f x). Qed.
Lemma lem8375079 {A B P : Type'} (z : type518 A B P) (f : A -> B) : (z f) = (@I ((A -> B) -> (A -> B) -> P -> A) z f).
Proof. exact (@lem8375078 A B P z f). Qed.
Lemma lem8375080 {A B : Type'} (g : A -> B) : g = g.
Proof. exact (eq_refl g). Qed.
Lemma lem8375081 {A B P : Type'} (z : type518 A B P) (f : A -> B) (g : A -> B) : (z f g) = (@I ((A -> B) -> (A -> B) -> P -> A) z f g).
Proof. exact (MK_COMB (@lem8375079 A B P z f) (@lem8375080 A B g)). Qed.
Lemma lem8375083 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8375084 {A B P : Type'} (f : type557 A B P) (x : A -> B) : (f x) = (@I ((A -> B) -> P -> A) f x).
Proof. exact (@lem8375083 (A -> B) (P -> A) f x). Qed.
Lemma lem8375085 {A B P : Type'} (z : type518 A B P) (f : A -> B) (g : A -> B) : (@I ((A -> B) -> (A -> B) -> P -> A) z f g) = (term2967 A B P z f g).
Proof. exact (@lem8375084 A B P (@I ((A -> B) -> (A -> B) -> P -> A) z f) g). Qed.
Lemma lem8375086 {A B P : Type'} (z : type518 A B P) (f : A -> B) (g : A -> B) : (z f g) = (term2967 A B P z f g).
Proof. exact (TRANS (@lem8375081 A B P z f g) (@lem8375085 A B P z f g)). Qed.
Lemma lem8375087 {P : Type'} (a : P) : a = a.
Proof. exact (eq_refl a). Qed.
Lemma lem8375088 {A B P : Type'} (z : type518 A B P) (f : A -> B) (g : A -> B) (a : P) : (z f g a) = (term2968 A B P z f g a).
Proof. exact (MK_COMB (@lem8375086 A B P z f g) (@lem8375087 P a)). Qed.
Lemma lem8375090 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8375091 {A P : Type'} (f : P -> A) (x : P) : (f x) = (@I (P -> A) f x).
Proof. exact (@lem8375090 P A f x). Qed.
Lemma lem8375092 {A B P : Type'} (z : type518 A B P) (f : A -> B) (g : A -> B) (a : P) : (term2968 A B P z f g a) = (term2969 A B P z f g a).
Proof. exact (@lem8375091 A P (term2967 A B P z f g) a). Qed.
Lemma lem8375094 {A B P : Type'} (z : type518 A B P) (f : A -> B) (g : A -> B) (a : P) : (z f g a) = (term2969 A B P z f g a).
Proof. exact (TRANS (@lem8375088 A B P z f g a) (@lem8375092 A B P z f g a)). Qed.
Lemma lem8375095 {A B P : Type'} (z : type518 A B P) (f : A -> B) (g : A -> B) (a : P) : (term2970 A B P z f g a) = (term2971 A B P z f g a).
Proof. exact (MK_COMB (@lem8375068 A B f) (@lem8375094 A B P z f g a)). Qed.
Lemma lem8375097 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8375098 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (@lem8375097 A B f x). Qed.
Lemma lem8375099 {A B P : Type'} (z : type518 A B P) (f : A -> B) (g : A -> B) (a : P) : (term2971 A B P z f g a) = (term2972 A B P z f g a).
Proof. exact (@lem8375098 A B f (term2969 A B P z f g a)). Qed.
Lemma lem8375100 {A B P : Type'} (z : type518 A B P) (f : A -> B) (g : A -> B) (a : P) : (term2970 A B P z f g a) = (term2972 A B P z f g a).
Proof. exact (TRANS (@lem8375095 A B P z f g a) (@lem8375099 A B P z f g a)). Qed.
Lemma lem8375101 {A B : Type'} (g : A -> B) : g = g.
Proof. exact (eq_refl g). Qed.
Lemma lem8375110 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8375111 {A B P : Type'} (f : type518 A B P) (x : A -> B) : (f x) = (@I ((A -> B) -> (A -> B) -> P -> A) f x).
Proof. exact (@lem8375110 (A -> B) (type557 A B P) f x). Qed.
Lemma lem8375112 {A B P : Type'} (z : type518 A B P) (f : A -> B) : (z f) = (@I ((A -> B) -> (A -> B) -> P -> A) z f).
Proof. exact (@lem8375111 A B P z f). Qed.
Lemma lem8375113 {A B : Type'} (g : A -> B) : g = g.
Proof. exact (eq_refl g). Qed.
Lemma lem8375114 {A B P : Type'} (z : type518 A B P) (f : A -> B) (g : A -> B) : (z f g) = (@I ((A -> B) -> (A -> B) -> P -> A) z f g).
Proof. exact (MK_COMB (@lem8375112 A B P z f) (@lem8375113 A B g)). Qed.
Lemma lem8375116 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8375117 {A B P : Type'} (f : type557 A B P) (x : A -> B) : (f x) = (@I ((A -> B) -> P -> A) f x).
Proof. exact (@lem8375116 (A -> B) (P -> A) f x). Qed.
Lemma lem8375118 {A B P : Type'} (z : type518 A B P) (f : A -> B) (g : A -> B) : (@I ((A -> B) -> (A -> B) -> P -> A) z f g) = (term2967 A B P z f g).
Proof. exact (@lem8375117 A B P (@I ((A -> B) -> (A -> B) -> P -> A) z f) g). Qed.
Lemma lem8375119 {A B P : Type'} (z : type518 A B P) (f : A -> B) (g : A -> B) : (z f g) = (term2967 A B P z f g).
Proof. exact (TRANS (@lem8375114 A B P z f g) (@lem8375118 A B P z f g)). Qed.
Lemma lem8375120 {P : Type'} (a : P) : a = a.
Proof. exact (eq_refl a). Qed.
Lemma lem8375121 {A B P : Type'} (z : type518 A B P) (f : A -> B) (g : A -> B) (a : P) : (z f g a) = (term2968 A B P z f g a).
Proof. exact (MK_COMB (@lem8375119 A B P z f g) (@lem8375120 P a)). Qed.
Lemma lem8375123 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8375124 {A P : Type'} (f : P -> A) (x : P) : (f x) = (@I (P -> A) f x).
Proof. exact (@lem8375123 P A f x). Qed.
Lemma lem8375125 {A B P : Type'} (z : type518 A B P) (f : A -> B) (g : A -> B) (a : P) : (term2968 A B P z f g a) = (term2969 A B P z f g a).
Proof. exact (@lem8375124 A P (term2967 A B P z f g) a). Qed.
Lemma lem8375127 {A B P : Type'} (z : type518 A B P) (f : A -> B) (g : A -> B) (a : P) : (z f g a) = (term2969 A B P z f g a).
Proof. exact (TRANS (@lem8375121 A B P z f g a) (@lem8375125 A B P z f g a)). Qed.
Lemma lem8375128 {A B P : Type'} (z : type518 A B P) (f : A -> B) (g : A -> B) (a : P) : (term2973 A B P z f g a) = (term2974 A B P z f g a).
Proof. exact (MK_COMB (@lem8375101 A B g) (@lem8375127 A B P z f g a)). Qed.
Lemma lem8375130 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8375131 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (@lem8375130 A B f x). Qed.
Lemma lem8375132 {A B P : Type'} (z : type518 A B P) (f : A -> B) (g : A -> B) (a : P) : (term2974 A B P z f g a) = (term2975 A B P z f g a).
Proof. exact (@lem8375131 A B g (term2969 A B P z f g a)). Qed.
Lemma lem8375133 {A B P : Type'} (z : type518 A B P) (f : A -> B) (g : A -> B) (a : P) : (term2973 A B P z f g a) = (term2975 A B P z f g a).
Proof. exact (TRANS (@lem8375128 A B P z f g a) (@lem8375132 A B P z f g a)). Qed.
Lemma lem8375134 {A B P : Type'} (z : type518 A B P) (f : A -> B) (g : A -> B) (a : P) : (term2976 A B P z f g a) = (term2977 A B P z f g a).
Proof. exact (MK_COMB (@lem8375067 B) (@lem8375100 A B P z f g a)). Qed.
Lemma lem8375135 {A B P : Type'} (z : type518 A B P) (f : A -> B) (g : A -> B) (a : P) : ((term2970 A B P z f g a) = (term2973 A B P z f g a)) = ((term2972 A B P z f g a) = (term2975 A B P z f g a)).
Proof. exact (MK_COMB (@lem8375134 A B P z f g a) (@lem8375133 A B P z f g a)). Qed.
Lemma lem8375136 {A B P : Type'} (z : type518 A B P) (f : A -> B) (g : A -> B) (a : P) : (term2978 A B P z f g a) = (term2979 A B P z f g a).
Proof. exact (MK_COMB (@lem8375066) (@lem8375135 A B P z f g a)). Qed.
Lemma lem8375137 {A : Type'} (lt2 : type1402 A) : lt2 = lt2.
Proof. exact (eq_refl lt2). Qed.
Lemma lem8375146 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8375147 {A B P : Type'} (f : type518 A B P) (x : A -> B) : (f x) = (@I ((A -> B) -> (A -> B) -> P -> A) f x).
Proof. exact (@lem8375146 (A -> B) (type557 A B P) f x). Qed.
Lemma lem8375148 {A B P : Type'} (z : type518 A B P) (f : A -> B) : (z f) = (@I ((A -> B) -> (A -> B) -> P -> A) z f).
Proof. exact (@lem8375147 A B P z f). Qed.
Lemma lem8375149 {A B : Type'} (g : A -> B) : g = g.
Proof. exact (eq_refl g). Qed.
Lemma lem8375150 {A B P : Type'} (z : type518 A B P) (f : A -> B) (g : A -> B) : (z f g) = (@I ((A -> B) -> (A -> B) -> P -> A) z f g).
Proof. exact (MK_COMB (@lem8375148 A B P z f) (@lem8375149 A B g)). Qed.
Lemma lem8375152 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8375153 {A B P : Type'} (f : type557 A B P) (x : A -> B) : (f x) = (@I ((A -> B) -> P -> A) f x).
Proof. exact (@lem8375152 (A -> B) (P -> A) f x). Qed.
Lemma lem8375154 {A B P : Type'} (z : type518 A B P) (f : A -> B) (g : A -> B) : (@I ((A -> B) -> (A -> B) -> P -> A) z f g) = (term2967 A B P z f g).
Proof. exact (@lem8375153 A B P (@I ((A -> B) -> (A -> B) -> P -> A) z f) g). Qed.
Lemma lem8375155 {A B P : Type'} (z : type518 A B P) (f : A -> B) (g : A -> B) : (z f g) = (term2967 A B P z f g).
Proof. exact (TRANS (@lem8375150 A B P z f g) (@lem8375154 A B P z f g)). Qed.
Lemma lem8375156 {P : Type'} (a : P) : a = a.
Proof. exact (eq_refl a). Qed.
Lemma lem8375157 {A B P : Type'} (z : type518 A B P) (f : A -> B) (g : A -> B) (a : P) : (z f g a) = (term2968 A B P z f g a).
Proof. exact (MK_COMB (@lem8375155 A B P z f g) (@lem8375156 P a)). Qed.
Lemma lem8375159 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8375160 {A P : Type'} (f : P -> A) (x : P) : (f x) = (@I (P -> A) f x).
Proof. exact (@lem8375159 P A f x). Qed.
Lemma lem8375161 {A B P : Type'} (z : type518 A B P) (f : A -> B) (g : A -> B) (a : P) : (term2968 A B P z f g a) = (term2969 A B P z f g a).
Proof. exact (@lem8375160 A P (term2967 A B P z f g) a). Qed.
Lemma lem8375163 {A B P : Type'} (z : type518 A B P) (f : A -> B) (g : A -> B) (a : P) : (z f g a) = (term2969 A B P z f g a).
Proof. exact (TRANS (@lem8375157 A B P z f g a) (@lem8375161 A B P z f g a)). Qed.
Lemma lem8375168 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8375169 {A P : Type'} (f : P -> A) (x : P) : (f x) = (@I (P -> A) f x).
Proof. exact (@lem8375168 P A f x). Qed.
Lemma lem8375171 {A P : Type'} (s : P -> A) (a : P) : (s a) = (@I (P -> A) s a).
Proof. exact (@lem8375169 A P s a). Qed.
Lemma lem8375172 {A B P : Type'} (lt2 : type1402 A) (z : type518 A B P) (f : A -> B) (g : A -> B) (a : P) : (term2980 A B P lt2 z f g a) = (term2981 A B P lt2 z f g a).
Proof. exact (MK_COMB (@lem8375137 A lt2) (@lem8375163 A B P z f g a)). Qed.
Lemma lem8375173 {A B P : Type'} (lt2 : type1402 A) (z : type518 A B P) (f : A -> B) (g : A -> B) (s : P -> A) (a : P) : (term2982 A B P lt2 z f g s a) = (term2983 A B P lt2 z f g s a).
Proof. exact (MK_COMB (@lem8375172 A B P lt2 z f g a) (@lem8375171 A P s a)). Qed.
Lemma lem8375175 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8375176 {A : Type'} (f : type1402 A) (x : A) : (f x) = (@I (A -> A -> Prop) f x).
Proof. exact (@lem8375175 A (A -> Prop) f x). Qed.
Lemma lem8375177 {A B P : Type'} (lt2 : type1402 A) (z : type518 A B P) (f : A -> B) (g : A -> B) (a : P) : (term2981 A B P lt2 z f g a) = (term2984 A B P lt2 z f g a).
Proof. exact (@lem8375176 A lt2 (term2969 A B P z f g a)). Qed.
Lemma lem8375178 {A P : Type'} (s : P -> A) (a : P) : (@I (P -> A) s a) = (@I (P -> A) s a).
Proof. exact (eq_refl (@I (P -> A) s a)). Qed.
Lemma lem8375179 {A B P : Type'} (lt2 : type1402 A) (z : type518 A B P) (f : A -> B) (g : A -> B) (s : P -> A) (a : P) : (term2983 A B P lt2 z f g s a) = (term2985 A B P lt2 z f g s a).
Proof. exact (MK_COMB (@lem8375177 A B P lt2 z f g a) (@lem8375178 A P s a)). Qed.
Lemma lem8375181 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8375182 {A : Type'} (f : A -> Prop) (x : A) : (f x) = (@I (A -> Prop) f x).
Proof. exact (@lem8375181 A Prop f x). Qed.
Lemma lem8375183 {A B P : Type'} (lt2 : type1402 A) (z : type518 A B P) (f : A -> B) (g : A -> B) (s : P -> A) (a : P) : (term2985 A B P lt2 z f g s a) = (term2986 A B P lt2 z f g s a).
Proof. exact (@lem8375182 A (term2984 A B P lt2 z f g a) (@I (P -> A) s a)). Qed.
Lemma lem8375184 {A B P : Type'} (lt2 : type1402 A) (z : type518 A B P) (f : A -> B) (g : A -> B) (s : P -> A) (a : P) : (term2983 A B P lt2 z f g s a) = (term2986 A B P lt2 z f g s a).
Proof. exact (TRANS (@lem8375179 A B P lt2 z f g s a) (@lem8375183 A B P lt2 z f g s a)). Qed.
Lemma lem8375185 {A B P : Type'} (lt2 : type1402 A) (z : type518 A B P) (f : A -> B) (g : A -> B) (s : P -> A) (a : P) : (term2982 A B P lt2 z f g s a) = (term2986 A B P lt2 z f g s a).
Proof. exact (TRANS (@lem8375173 A B P lt2 z f g s a) (@lem8375184 A B P lt2 z f g s a)). Qed.
Lemma lem8375186 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8375187 {A B P : Type'} (lt2 : type1402 A) (z : type518 A B P) (f : A -> B) (g : A -> B) (s : P -> A) (a : P) : (term2987 A B P lt2 z f g s a) = (term2988 A B P lt2 z f g s a).
Proof. exact (MK_COMB (@lem8375186) (@lem8375185 A B P lt2 z f g s a)). Qed.
Lemma lem8375188 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (f : A -> B) (g : A -> B) (a : P) : (term2989 A B P lt2 s z f g a) = (term2990 A B P lt2 s z f g a).
Proof. exact (MK_COMB (@lem8375187 A B P lt2 z f g s a) (@lem8375136 A B P z f g a)). Qed.
Lemma lem8375189 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8375190 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (f : A -> B) (g : A -> B) (a : P) : (term2991 A B P lt2 s z f g a) = (term2992 A B P lt2 s z f g a).
Proof. exact (MK_COMB (@lem8375189) (@lem8375188 A B P lt2 s z f g a)). Qed.
Lemma lem8375191 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term2993 A B P lt2 s z P2 G2 f H2 g a) = (term2994 A B P lt2 s z P2 G2 f H2 g a).
Proof. exact (MK_COMB (@lem8375190 A B P lt2 s z f g a) (@lem8375065 A B P P2 G2 f H2 g a)). Qed.
Lemma lem8375192 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) : (term2995 A B P lt2 s z P2 G2 f H2 g) = (term2996 A B P lt2 s z P2 G2 f H2 g).
Proof. exact (fun_ext (fun a : P => @lem8375191 A B P lt2 s z P2 G2 f H2 g a)). Qed.
Lemma lem8375193 {P : Type'} : (@all P) = (@all P).
Proof. exact (eq_refl (@all P)). Qed.
Lemma lem8375194 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) : (term2997 A B P lt2 s z P2 G2 f H2 g) = (term2998 A B P lt2 s z P2 G2 f H2 g).
Proof. exact (MK_COMB (@lem8375193 P) (@lem8375192 A B P lt2 s z P2 G2 f H2 g)). Qed.
Lemma lem8375195 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) : (term2999 A B P lt2 s z P2 G2 f H2) = (term3000 A B P lt2 s z P2 G2 f H2).
Proof. exact (fun_ext (fun g : A -> B => @lem8375194 A B P lt2 s z P2 G2 f H2 g)). Qed.
Lemma lem8375196 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem8375197 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) : (term2266 A B P lt2 s z P2 G2 f H2) = (term3001 A B P lt2 s z P2 G2 f H2).
Proof. exact (MK_COMB (@lem8375196 A B) (@lem8375195 A B P lt2 s z P2 G2 f H2)). Qed.
Lemma lem8375198 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) : (term2268 A B P lt2 s z P2 G2 H2) = (term3002 A B P lt2 s z P2 G2 H2).
Proof. exact (fun_ext (fun f : A -> B => @lem8375197 A B P lt2 s z P2 G2 f H2)). Qed.
Lemma lem8375199 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem8375200 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) : (term2270 A B P lt2 s z P2 G2 H2) = (term3003 A B P lt2 s z P2 G2 H2).
Proof. exact (MK_COMB (@lem8375199 A B) (@lem8375198 A B P lt2 s z P2 G2 H2)). Qed.
Lemma lem8375201 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (h1 : term2270 A B P lt2 s z P2 G2 H2) : term3003 A B P lt2 s z P2 G2 H2.
Proof. exact (EQ_MP (@lem8375200 A B P lt2 s z P2 G2 H2) (@lem8373557 A B P lt2 s z P2 G2 H2 h1)). Qed.
Lemma lem8375202 {B : Type'} : (@eq B) = (@eq B).
Proof. exact (eq_refl (@eq B)). Qed.
Lemma lem8375209 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8375210 {A B : Type'} (f : type549 A B) (x : A -> B) : (f x) = (@I ((A -> B) -> A -> B) f x).
Proof. exact (@lem8375209 (A -> B) (A -> B) f x). Qed.
Lemma lem8375211 {A B : Type'} (H1 : type549 A B) (f : A -> B) : (H1 f) = (@I ((A -> B) -> A -> B) H1 f).
Proof. exact (@lem8375210 A B H1 f). Qed.
Lemma lem8375212 {A : Type'} (x : A) : x = x.
Proof. exact (eq_refl x). Qed.
Lemma lem8375213 {A B : Type'} (H1 : type549 A B) (f : A -> B) (x : A) : (H1 f x) = (@I ((A -> B) -> A -> B) H1 f x).
Proof. exact (MK_COMB (@lem8375211 A B H1 f) (@lem8375212 A x)). Qed.
Lemma lem8375215 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8375216 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (@lem8375215 A B f x). Qed.
Lemma lem8375217 {A B : Type'} (H1 : type549 A B) (f : A -> B) (x : A) : (@I ((A -> B) -> A -> B) H1 f x) = (term2890 A B H1 f x).
Proof. exact (@lem8375216 A B (@I ((A -> B) -> A -> B) H1 f) x). Qed.
Lemma lem8375219 {A B : Type'} (H1 : type549 A B) (f : A -> B) (x : A) : (H1 f x) = (term2890 A B H1 f x).
Proof. exact (TRANS (@lem8375213 A B H1 f x) (@lem8375217 A B H1 f x)). Qed.
Lemma lem8375226 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8375227 {A B : Type'} (f : type549 A B) (x : A -> B) : (f x) = (@I ((A -> B) -> A -> B) f x).
Proof. exact (@lem8375226 (A -> B) (A -> B) f x). Qed.
Lemma lem8375228 {A B : Type'} (H1 : type549 A B) (g : A -> B) : (H1 g) = (@I ((A -> B) -> A -> B) H1 g).
Proof. exact (@lem8375227 A B H1 g). Qed.
Lemma lem8375229 {A : Type'} (x : A) : x = x.
Proof. exact (eq_refl x). Qed.
Lemma lem8375230 {A B : Type'} (H1 : type549 A B) (g : A -> B) (x : A) : (H1 g x) = (@I ((A -> B) -> A -> B) H1 g x).
Proof. exact (MK_COMB (@lem8375228 A B H1 g) (@lem8375229 A x)). Qed.
Lemma lem8375232 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8375233 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (@lem8375232 A B f x). Qed.
Lemma lem8375234 {A B : Type'} (H1 : type549 A B) (g : A -> B) (x : A) : (@I ((A -> B) -> A -> B) H1 g x) = (term2890 A B H1 g x).
Proof. exact (@lem8375233 A B (@I ((A -> B) -> A -> B) H1 g) x). Qed.
Lemma lem8375236 {A B : Type'} (H1 : type549 A B) (g : A -> B) (x : A) : (H1 g x) = (term2890 A B H1 g x).
Proof. exact (TRANS (@lem8375230 A B H1 g x) (@lem8375234 A B H1 g x)). Qed.
Lemma lem8375237 {A B : Type'} (H1 : type549 A B) (f : A -> B) (x : A) : (term1841 A B H1 f x) = (term2891 A B H1 f x).
Proof. exact (MK_COMB (@lem8375202 B) (@lem8375219 A B H1 f x)). Qed.
Lemma lem8375238 {A B : Type'} (f : A -> B) (H1 : type549 A B) (g : A -> B) (x : A) : ((H1 f x) = (H1 g x)) = ((term2890 A B H1 f x) = (term2890 A B H1 g x)).
Proof. exact (MK_COMB (@lem8375237 A B H1 f x) (@lem8375236 A B H1 g x)). Qed.
Lemma lem8375239 {A : Type'} : (@eq A) = (@eq A).
Proof. exact (eq_refl (@eq A)). Qed.
Lemma lem8375246 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8375247 {A B : Type'} (f : type548 A B) (x : A -> B) : (f x) = (@I ((A -> B) -> A -> A) f x).
Proof. exact (@lem8375246 (A -> B) (A -> A) f x). Qed.
Lemma lem8375248 {A B : Type'} (G1 : type548 A B) (f : A -> B) : (G1 f) = (@I ((A -> B) -> A -> A) G1 f).
Proof. exact (@lem8375247 A B G1 f). Qed.
Lemma lem8375249 {A : Type'} (x : A) : x = x.
Proof. exact (eq_refl x). Qed.
Lemma lem8375250 {A B : Type'} (G1 : type548 A B) (f : A -> B) (x : A) : (G1 f x) = (@I ((A -> B) -> A -> A) G1 f x).
Proof. exact (MK_COMB (@lem8375248 A B G1 f) (@lem8375249 A x)). Qed.
Lemma lem8375252 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8375253 {A : Type'} (f : A -> A) (x : A) : (f x) = (@I (A -> A) f x).
Proof. exact (@lem8375252 A A f x). Qed.
Lemma lem8375254 {A B : Type'} (G1 : type548 A B) (f : A -> B) (x : A) : (@I ((A -> B) -> A -> A) G1 f x) = (term2822 A B G1 f x).
Proof. exact (@lem8375253 A (@I ((A -> B) -> A -> A) G1 f) x). Qed.
Lemma lem8375256 {A B : Type'} (G1 : type548 A B) (f : A -> B) (x : A) : (G1 f x) = (term2822 A B G1 f x).
Proof. exact (TRANS (@lem8375250 A B G1 f x) (@lem8375254 A B G1 f x)). Qed.
Lemma lem8375263 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8375264 {A B : Type'} (f : type548 A B) (x : A -> B) : (f x) = (@I ((A -> B) -> A -> A) f x).
Proof. exact (@lem8375263 (A -> B) (A -> A) f x). Qed.
Lemma lem8375265 {A B : Type'} (G1 : type548 A B) (g : A -> B) : (G1 g) = (@I ((A -> B) -> A -> A) G1 g).
Proof. exact (@lem8375264 A B G1 g). Qed.
Lemma lem8375266 {A : Type'} (x : A) : x = x.
Proof. exact (eq_refl x). Qed.
Lemma lem8375267 {A B : Type'} (G1 : type548 A B) (g : A -> B) (x : A) : (G1 g x) = (@I ((A -> B) -> A -> A) G1 g x).
Proof. exact (MK_COMB (@lem8375265 A B G1 g) (@lem8375266 A x)). Qed.
Lemma lem8375269 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8375270 {A : Type'} (f : A -> A) (x : A) : (f x) = (@I (A -> A) f x).
Proof. exact (@lem8375269 A A f x). Qed.
Lemma lem8375271 {A B : Type'} (G1 : type548 A B) (g : A -> B) (x : A) : (@I ((A -> B) -> A -> A) G1 g x) = (term2822 A B G1 g x).
Proof. exact (@lem8375270 A (@I ((A -> B) -> A -> A) G1 g) x). Qed.
Lemma lem8375273 {A B : Type'} (G1 : type548 A B) (g : A -> B) (x : A) : (G1 g x) = (term2822 A B G1 g x).
Proof. exact (TRANS (@lem8375267 A B G1 g x) (@lem8375271 A B G1 g x)). Qed.
Lemma lem8375274 {A B : Type'} (G1 : type548 A B) (f : A -> B) (x : A) : (term1839 A B G1 f x) = (term2894 A B G1 f x).
Proof. exact (MK_COMB (@lem8375239 A) (@lem8375256 A B G1 f x)). Qed.
Lemma lem8375275 {A B : Type'} (f : A -> B) (G1 : type548 A B) (g : A -> B) (x : A) : ((G1 f x) = (G1 g x)) = ((term2822 A B G1 f x) = (term2822 A B G1 g x)).
Proof. exact (MK_COMB (@lem8375274 A B G1 f x) (@lem8375273 A B G1 g x)). Qed.
Lemma lem8375276 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8375277 {A B : Type'} (f : A -> B) (G1 : type548 A B) (g : A -> B) (x : A) : (term1840 A B f G1 g x) = (term3004 A B f G1 g x).
Proof. exact (MK_COMB (@lem8375276) (@lem8375275 A B f G1 g x)). Qed.
Lemma lem8375278 {A B : Type'} (G1 : type548 A B) (f : A -> B) (H1 : type549 A B) (g : A -> B) (x : A) : (term1842 A B G1 f H1 g x) = (term3005 A B G1 f H1 g x).
Proof. exact (MK_COMB (@lem8375277 A B f G1 g x) (@lem8375238 A B f H1 g x)). Qed.
Lemma lem8375285 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8375286 {A B : Type'} (f : type551 A B) (x : A -> B) : (f x) = (@I ((A -> B) -> A -> Prop) f x).
Proof. exact (@lem8375285 (A -> B) (A -> Prop) f x). Qed.
Lemma lem8375287 {A B : Type'} (P1 : type551 A B) (g : A -> B) : (P1 g) = (@I ((A -> B) -> A -> Prop) P1 g).
Proof. exact (@lem8375286 A B P1 g). Qed.
Lemma lem8375288 {A : Type'} (x : A) : x = x.
Proof. exact (eq_refl x). Qed.
Lemma lem8375289 {A B : Type'} (P1 : type551 A B) (g : A -> B) (x : A) : (P1 g x) = (@I ((A -> B) -> A -> Prop) P1 g x).
Proof. exact (MK_COMB (@lem8375287 A B P1 g) (@lem8375288 A x)). Qed.
Lemma lem8375291 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8375292 {A : Type'} (f : A -> Prop) (x : A) : (f x) = (@I (A -> Prop) f x).
Proof. exact (@lem8375291 A Prop f x). Qed.
Lemma lem8375293 {A B : Type'} (P1 : type551 A B) (g : A -> B) (x : A) : (@I ((A -> B) -> A -> Prop) P1 g x) = (term2828 A B P1 g x).
Proof. exact (@lem8375292 A (@I ((A -> B) -> A -> Prop) P1 g) x). Qed.
Lemma lem8375295 {A B : Type'} (P1 : type551 A B) (g : A -> B) (x : A) : (P1 g x) = (term2828 A B P1 g x).
Proof. exact (TRANS (@lem8375289 A B P1 g x) (@lem8375293 A B P1 g x)). Qed.
Lemma lem8375296 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem8375303 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8375304 {A B : Type'} (f : type551 A B) (x : A -> B) : (f x) = (@I ((A -> B) -> A -> Prop) f x).
Proof. exact (@lem8375303 (A -> B) (A -> Prop) f x). Qed.
Lemma lem8375305 {A B : Type'} (P1 : type551 A B) (f : A -> B) : (P1 f) = (@I ((A -> B) -> A -> Prop) P1 f).
Proof. exact (@lem8375304 A B P1 f). Qed.
Lemma lem8375306 {A : Type'} (x : A) : x = x.
Proof. exact (eq_refl x). Qed.
Lemma lem8375307 {A B : Type'} (P1 : type551 A B) (f : A -> B) (x : A) : (P1 f x) = (@I ((A -> B) -> A -> Prop) P1 f x).
Proof. exact (MK_COMB (@lem8375305 A B P1 f) (@lem8375306 A x)). Qed.
Lemma lem8375309 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8375310 {A : Type'} (f : A -> Prop) (x : A) : (f x) = (@I (A -> Prop) f x).
Proof. exact (@lem8375309 A Prop f x). Qed.
Lemma lem8375311 {A B : Type'} (P1 : type551 A B) (f : A -> B) (x : A) : (@I ((A -> B) -> A -> Prop) P1 f x) = (term2828 A B P1 f x).
Proof. exact (@lem8375310 A (@I ((A -> B) -> A -> Prop) P1 f) x). Qed.
Lemma lem8375313 {A B : Type'} (P1 : type551 A B) (f : A -> B) (x : A) : (P1 f x) = (term2828 A B P1 f x).
Proof. exact (TRANS (@lem8375307 A B P1 f x) (@lem8375311 A B P1 f x)). Qed.
Lemma lem8375314 {A B : Type'} (P1 : type551 A B) (f : A -> B) (x : A) : (term2829 A B P1 f x) = (term2830 A B P1 f x).
Proof. exact (MK_COMB (@lem8375296) (@lem8375313 A B P1 f x)). Qed.
Lemma lem8375315 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8375316 {A B : Type'} (P1 : type551 A B) (f : A -> B) (x : A) : (term2831 A B P1 f x) = (term2832 A B P1 f x).
Proof. exact (MK_COMB (@lem8375315) (@lem8375314 A B P1 f x)). Qed.
Lemma lem8375317 {A B : Type'} (f : A -> B) (P1 : type551 A B) (g : A -> B) (x : A) : (term3006 A B f P1 g x) = (term3007 A B f P1 g x).
Proof. exact (MK_COMB (@lem8375316 A B P1 f x) (@lem8375295 A B P1 g x)). Qed.
Lemma lem8375318 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem8375325 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8375326 {A B : Type'} (f : type551 A B) (x : A -> B) : (f x) = (@I ((A -> B) -> A -> Prop) f x).
Proof. exact (@lem8375325 (A -> B) (A -> Prop) f x). Qed.
Lemma lem8375327 {A B : Type'} (P1 : type551 A B) (g : A -> B) : (P1 g) = (@I ((A -> B) -> A -> Prop) P1 g).
Proof. exact (@lem8375326 A B P1 g). Qed.
Lemma lem8375328 {A : Type'} (x : A) : x = x.
Proof. exact (eq_refl x). Qed.
Lemma lem8375329 {A B : Type'} (P1 : type551 A B) (g : A -> B) (x : A) : (P1 g x) = (@I ((A -> B) -> A -> Prop) P1 g x).
Proof. exact (MK_COMB (@lem8375327 A B P1 g) (@lem8375328 A x)). Qed.
Lemma lem8375331 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8375332 {A : Type'} (f : A -> Prop) (x : A) : (f x) = (@I (A -> Prop) f x).
Proof. exact (@lem8375331 A Prop f x). Qed.
Lemma lem8375333 {A B : Type'} (P1 : type551 A B) (g : A -> B) (x : A) : (@I ((A -> B) -> A -> Prop) P1 g x) = (term2828 A B P1 g x).
Proof. exact (@lem8375332 A (@I ((A -> B) -> A -> Prop) P1 g) x). Qed.
Lemma lem8375335 {A B : Type'} (P1 : type551 A B) (g : A -> B) (x : A) : (P1 g x) = (term2828 A B P1 g x).
Proof. exact (TRANS (@lem8375329 A B P1 g x) (@lem8375333 A B P1 g x)). Qed.
Lemma lem8375336 {A B : Type'} (P1 : type551 A B) (g : A -> B) (x : A) : (term2829 A B P1 g x) = (term2830 A B P1 g x).
Proof. exact (MK_COMB (@lem8375318) (@lem8375335 A B P1 g x)). Qed.
Lemma lem8375343 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8375344 {A B : Type'} (f : type551 A B) (x : A -> B) : (f x) = (@I ((A -> B) -> A -> Prop) f x).
Proof. exact (@lem8375343 (A -> B) (A -> Prop) f x). Qed.
Lemma lem8375345 {A B : Type'} (P1 : type551 A B) (f : A -> B) : (P1 f) = (@I ((A -> B) -> A -> Prop) P1 f).
Proof. exact (@lem8375344 A B P1 f). Qed.
Lemma lem8375346 {A : Type'} (x : A) : x = x.
Proof. exact (eq_refl x). Qed.
Lemma lem8375347 {A B : Type'} (P1 : type551 A B) (f : A -> B) (x : A) : (P1 f x) = (@I ((A -> B) -> A -> Prop) P1 f x).
Proof. exact (MK_COMB (@lem8375345 A B P1 f) (@lem8375346 A x)). Qed.
Lemma lem8375349 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8375350 {A : Type'} (f : A -> Prop) (x : A) : (f x) = (@I (A -> Prop) f x).
Proof. exact (@lem8375349 A Prop f x). Qed.
Lemma lem8375351 {A B : Type'} (P1 : type551 A B) (f : A -> B) (x : A) : (@I ((A -> B) -> A -> Prop) P1 f x) = (term2828 A B P1 f x).
Proof. exact (@lem8375350 A (@I ((A -> B) -> A -> Prop) P1 f) x). Qed.
Lemma lem8375353 {A B : Type'} (P1 : type551 A B) (f : A -> B) (x : A) : (P1 f x) = (term2828 A B P1 f x).
Proof. exact (TRANS (@lem8375347 A B P1 f x) (@lem8375351 A B P1 f x)). Qed.
Lemma lem8375354 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8375355 {A B : Type'} (P1 : type551 A B) (f : A -> B) (x : A) : (term3008 A B P1 f x) = (term3009 A B P1 f x).
Proof. exact (MK_COMB (@lem8375354) (@lem8375353 A B P1 f x)). Qed.
Lemma lem8375356 {A B : Type'} (f : A -> B) (P1 : type551 A B) (g : A -> B) (x : A) : (term3010 A B f P1 g x) = (term3011 A B f P1 g x).
Proof. exact (MK_COMB (@lem8375355 A B P1 f x) (@lem8375336 A B P1 g x)). Qed.
Lemma lem8375357 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8375358 {A B : Type'} (f : A -> B) (P1 : type551 A B) (g : A -> B) (x : A) : (term3012 A B f P1 g x) = (term3013 A B f P1 g x).
Proof. exact (MK_COMB (@lem8375357) (@lem8375356 A B f P1 g x)). Qed.
Lemma lem8375359 {A B : Type'} (f : A -> B) (P1 : type551 A B) (g : A -> B) (x : A) : (term2032 A B f P1 g x) = (term3014 A B f P1 g x).
Proof. exact (MK_COMB (@lem8375358 A B f P1 g x) (@lem8375317 A B f P1 g x)). Qed.
Lemma lem8375360 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8375361 {A B : Type'} (f : A -> B) (P1 : type551 A B) (g : A -> B) (x : A) : (term2033 A B f P1 g x) = (term3015 A B f P1 g x).
Proof. exact (MK_COMB (@lem8375360) (@lem8375359 A B f P1 g x)). Qed.
Lemma lem8375362 {A B : Type'} (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (H1 : type549 A B) (g : A -> B) (x : A) : (term2034 A B P1 G1 f H1 g x) = (term3016 A B P1 G1 f H1 g x).
Proof. exact (MK_COMB (@lem8375361 A B f P1 g x) (@lem8375278 A B G1 f H1 g x)). Qed.
Lemma lem8375363 : not = not.
Proof. exact (eq_refl not). Qed.
Lemma lem8375364 {B : Type'} : (@eq B) = (@eq B).
Proof. exact (eq_refl (@eq B)). Qed.
Lemma lem8375365 {A B : Type'} (f : A -> B) : f = f.
Proof. exact (eq_refl f). Qed.
Lemma lem8375374 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8375375 {A B : Type'} (f : type515 A B) (x : A -> B) : (f x) = (@I ((A -> B) -> (A -> B) -> A -> A) f x).
Proof. exact (@lem8375374 (A -> B) (type548 A B) f x). Qed.
Lemma lem8375376 {A B : Type'} (z' : type515 A B) (f : A -> B) : (z' f) = (@I ((A -> B) -> (A -> B) -> A -> A) z' f).
Proof. exact (@lem8375375 A B z' f). Qed.
Lemma lem8375377 {A B : Type'} (g : A -> B) : g = g.
Proof. exact (eq_refl g). Qed.
Lemma lem8375378 {A B : Type'} (z' : type515 A B) (f : A -> B) (g : A -> B) : (z' f g) = (@I ((A -> B) -> (A -> B) -> A -> A) z' f g).
Proof. exact (MK_COMB (@lem8375376 A B z' f) (@lem8375377 A B g)). Qed.
Lemma lem8375380 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8375381 {A B : Type'} (f : type548 A B) (x : A -> B) : (f x) = (@I ((A -> B) -> A -> A) f x).
Proof. exact (@lem8375380 (A -> B) (A -> A) f x). Qed.
Lemma lem8375382 {A B : Type'} (z' : type515 A B) (f : A -> B) (g : A -> B) : (@I ((A -> B) -> (A -> B) -> A -> A) z' f g) = (term3017 A B z' f g).
Proof. exact (@lem8375381 A B (@I ((A -> B) -> (A -> B) -> A -> A) z' f) g). Qed.
Lemma lem8375383 {A B : Type'} (z' : type515 A B) (f : A -> B) (g : A -> B) : (z' f g) = (term3017 A B z' f g).
Proof. exact (TRANS (@lem8375378 A B z' f g) (@lem8375382 A B z' f g)). Qed.
Lemma lem8375384 {A : Type'} (x : A) : x = x.
Proof. exact (eq_refl x). Qed.
Lemma lem8375385 {A B : Type'} (z' : type515 A B) (f : A -> B) (g : A -> B) (x : A) : (z' f g x) = (term3018 A B z' f g x).
Proof. exact (MK_COMB (@lem8375383 A B z' f g) (@lem8375384 A x)). Qed.
Lemma lem8375387 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8375388 {A : Type'} (f : A -> A) (x : A) : (f x) = (@I (A -> A) f x).
Proof. exact (@lem8375387 A A f x). Qed.
Lemma lem8375389 {A B : Type'} (z' : type515 A B) (f : A -> B) (g : A -> B) (x : A) : (term3018 A B z' f g x) = (term3019 A B z' f g x).
Proof. exact (@lem8375388 A (term3017 A B z' f g) x). Qed.
Lemma lem8375391 {A B : Type'} (z' : type515 A B) (f : A -> B) (g : A -> B) (x : A) : (z' f g x) = (term3019 A B z' f g x).
Proof. exact (TRANS (@lem8375385 A B z' f g x) (@lem8375389 A B z' f g x)). Qed.
Lemma lem8375392 {A B : Type'} (z' : type515 A B) (f : A -> B) (g : A -> B) (x : A) : (term3020 A B z' f g x) = (term3021 A B z' f g x).
Proof. exact (MK_COMB (@lem8375365 A B f) (@lem8375391 A B z' f g x)). Qed.
Lemma lem8375394 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8375395 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (@lem8375394 A B f x). Qed.
Lemma lem8375396 {A B : Type'} (z' : type515 A B) (f : A -> B) (g : A -> B) (x : A) : (term3021 A B z' f g x) = (term3022 A B z' f g x).
Proof. exact (@lem8375395 A B f (term3019 A B z' f g x)). Qed.
Lemma lem8375397 {A B : Type'} (z' : type515 A B) (f : A -> B) (g : A -> B) (x : A) : (term3020 A B z' f g x) = (term3022 A B z' f g x).
Proof. exact (TRANS (@lem8375392 A B z' f g x) (@lem8375396 A B z' f g x)). Qed.
Lemma lem8375398 {A B : Type'} (g : A -> B) : g = g.
Proof. exact (eq_refl g). Qed.
Lemma lem8375407 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8375408 {A B : Type'} (f : type515 A B) (x : A -> B) : (f x) = (@I ((A -> B) -> (A -> B) -> A -> A) f x).
Proof. exact (@lem8375407 (A -> B) (type548 A B) f x). Qed.
Lemma lem8375409 {A B : Type'} (z' : type515 A B) (f : A -> B) : (z' f) = (@I ((A -> B) -> (A -> B) -> A -> A) z' f).
Proof. exact (@lem8375408 A B z' f). Qed.
Lemma lem8375410 {A B : Type'} (g : A -> B) : g = g.
Proof. exact (eq_refl g). Qed.
Lemma lem8375411 {A B : Type'} (z' : type515 A B) (f : A -> B) (g : A -> B) : (z' f g) = (@I ((A -> B) -> (A -> B) -> A -> A) z' f g).
Proof. exact (MK_COMB (@lem8375409 A B z' f) (@lem8375410 A B g)). Qed.
Lemma lem8375413 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8375414 {A B : Type'} (f : type548 A B) (x : A -> B) : (f x) = (@I ((A -> B) -> A -> A) f x).
Proof. exact (@lem8375413 (A -> B) (A -> A) f x). Qed.
Lemma lem8375415 {A B : Type'} (z' : type515 A B) (f : A -> B) (g : A -> B) : (@I ((A -> B) -> (A -> B) -> A -> A) z' f g) = (term3017 A B z' f g).
Proof. exact (@lem8375414 A B (@I ((A -> B) -> (A -> B) -> A -> A) z' f) g). Qed.
Lemma lem8375416 {A B : Type'} (z' : type515 A B) (f : A -> B) (g : A -> B) : (z' f g) = (term3017 A B z' f g).
Proof. exact (TRANS (@lem8375411 A B z' f g) (@lem8375415 A B z' f g)). Qed.
Lemma lem8375417 {A : Type'} (x : A) : x = x.
Proof. exact (eq_refl x). Qed.
Lemma lem8375418 {A B : Type'} (z' : type515 A B) (f : A -> B) (g : A -> B) (x : A) : (z' f g x) = (term3018 A B z' f g x).
Proof. exact (MK_COMB (@lem8375416 A B z' f g) (@lem8375417 A x)). Qed.
Lemma lem8375420 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8375421 {A : Type'} (f : A -> A) (x : A) : (f x) = (@I (A -> A) f x).
Proof. exact (@lem8375420 A A f x). Qed.
Lemma lem8375422 {A B : Type'} (z' : type515 A B) (f : A -> B) (g : A -> B) (x : A) : (term3018 A B z' f g x) = (term3019 A B z' f g x).
Proof. exact (@lem8375421 A (term3017 A B z' f g) x). Qed.
Lemma lem8375424 {A B : Type'} (z' : type515 A B) (f : A -> B) (g : A -> B) (x : A) : (z' f g x) = (term3019 A B z' f g x).
Proof. exact (TRANS (@lem8375418 A B z' f g x) (@lem8375422 A B z' f g x)). Qed.
Lemma lem8375425 {A B : Type'} (z' : type515 A B) (f : A -> B) (g : A -> B) (x : A) : (term3023 A B z' f g x) = (term3024 A B z' f g x).
Proof. exact (MK_COMB (@lem8375398 A B g) (@lem8375424 A B z' f g x)). Qed.
Lemma lem8375427 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8375428 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (@lem8375427 A B f x). Qed.
Lemma lem8375429 {A B : Type'} (z' : type515 A B) (f : A -> B) (g : A -> B) (x : A) : (term3024 A B z' f g x) = (term3025 A B z' f g x).
Proof. exact (@lem8375428 A B g (term3019 A B z' f g x)). Qed.
Lemma lem8375430 {A B : Type'} (z' : type515 A B) (f : A -> B) (g : A -> B) (x : A) : (term3023 A B z' f g x) = (term3025 A B z' f g x).
Proof. exact (TRANS (@lem8375425 A B z' f g x) (@lem8375429 A B z' f g x)). Qed.
Lemma lem8375431 {A B : Type'} (z' : type515 A B) (f : A -> B) (g : A -> B) (x : A) : (term3026 A B z' f g x) = (term3027 A B z' f g x).
Proof. exact (MK_COMB (@lem8375364 B) (@lem8375397 A B z' f g x)). Qed.
Lemma lem8375432 {A B : Type'} (z' : type515 A B) (f : A -> B) (g : A -> B) (x : A) : ((term3020 A B z' f g x) = (term3023 A B z' f g x)) = ((term3022 A B z' f g x) = (term3025 A B z' f g x)).
Proof. exact (MK_COMB (@lem8375431 A B z' f g x) (@lem8375430 A B z' f g x)). Qed.
Lemma lem8375433 {A B : Type'} (z' : type515 A B) (f : A -> B) (g : A -> B) (x : A) : (term3028 A B z' f g x) = (term3029 A B z' f g x).
Proof. exact (MK_COMB (@lem8375363) (@lem8375432 A B z' f g x)). Qed.
Lemma lem8375434 {A : Type'} (lt2 : type1402 A) : lt2 = lt2.
Proof. exact (eq_refl lt2). Qed.
Lemma lem8375443 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8375444 {A B : Type'} (f : type515 A B) (x : A -> B) : (f x) = (@I ((A -> B) -> (A -> B) -> A -> A) f x).
Proof. exact (@lem8375443 (A -> B) (type548 A B) f x). Qed.
Lemma lem8375445 {A B : Type'} (z' : type515 A B) (f : A -> B) : (z' f) = (@I ((A -> B) -> (A -> B) -> A -> A) z' f).
Proof. exact (@lem8375444 A B z' f). Qed.
Lemma lem8375446 {A B : Type'} (g : A -> B) : g = g.
Proof. exact (eq_refl g). Qed.
Lemma lem8375447 {A B : Type'} (z' : type515 A B) (f : A -> B) (g : A -> B) : (z' f g) = (@I ((A -> B) -> (A -> B) -> A -> A) z' f g).
Proof. exact (MK_COMB (@lem8375445 A B z' f) (@lem8375446 A B g)). Qed.
Lemma lem8375449 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8375450 {A B : Type'} (f : type548 A B) (x : A -> B) : (f x) = (@I ((A -> B) -> A -> A) f x).
Proof. exact (@lem8375449 (A -> B) (A -> A) f x). Qed.
Lemma lem8375451 {A B : Type'} (z' : type515 A B) (f : A -> B) (g : A -> B) : (@I ((A -> B) -> (A -> B) -> A -> A) z' f g) = (term3017 A B z' f g).
Proof. exact (@lem8375450 A B (@I ((A -> B) -> (A -> B) -> A -> A) z' f) g). Qed.
Lemma lem8375452 {A B : Type'} (z' : type515 A B) (f : A -> B) (g : A -> B) : (z' f g) = (term3017 A B z' f g).
Proof. exact (TRANS (@lem8375447 A B z' f g) (@lem8375451 A B z' f g)). Qed.
Lemma lem8375453 {A : Type'} (x : A) : x = x.
Proof. exact (eq_refl x). Qed.
Lemma lem8375454 {A B : Type'} (z' : type515 A B) (f : A -> B) (g : A -> B) (x : A) : (z' f g x) = (term3018 A B z' f g x).
Proof. exact (MK_COMB (@lem8375452 A B z' f g) (@lem8375453 A x)). Qed.
Lemma lem8375456 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8375457 {A : Type'} (f : A -> A) (x : A) : (f x) = (@I (A -> A) f x).
Proof. exact (@lem8375456 A A f x). Qed.
Lemma lem8375458 {A B : Type'} (z' : type515 A B) (f : A -> B) (g : A -> B) (x : A) : (term3018 A B z' f g x) = (term3019 A B z' f g x).
Proof. exact (@lem8375457 A (term3017 A B z' f g) x). Qed.
Lemma lem8375460 {A B : Type'} (z' : type515 A B) (f : A -> B) (g : A -> B) (x : A) : (z' f g x) = (term3019 A B z' f g x).
Proof. exact (TRANS (@lem8375454 A B z' f g x) (@lem8375458 A B z' f g x)). Qed.
Lemma lem8375461 {A : Type'} (x : A) : x = x.
Proof. exact (eq_refl x). Qed.
Lemma lem8375462 {A B : Type'} (lt2 : type1402 A) (z' : type515 A B) (f : A -> B) (g : A -> B) (x : A) : (term3030 A B lt2 z' f g x) = (term3031 A B lt2 z' f g x).
Proof. exact (MK_COMB (@lem8375434 A lt2) (@lem8375460 A B z' f g x)). Qed.
Lemma lem8375463 {A B : Type'} (lt2 : type1402 A) (z' : type515 A B) (f : A -> B) (g : A -> B) (x : A) : (term3032 A B lt2 z' f g x) = (term3033 A B lt2 z' f g x).
Proof. exact (MK_COMB (@lem8375462 A B lt2 z' f g x) (@lem8375461 A x)). Qed.
Lemma lem8375465 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8375466 {A : Type'} (f : type1402 A) (x : A) : (f x) = (@I (A -> A -> Prop) f x).
Proof. exact (@lem8375465 A (A -> Prop) f x). Qed.
Lemma lem8375467 {A B : Type'} (lt2 : type1402 A) (z' : type515 A B) (f : A -> B) (g : A -> B) (x : A) : (term3031 A B lt2 z' f g x) = (term3034 A B lt2 z' f g x).
Proof. exact (@lem8375466 A lt2 (term3019 A B z' f g x)). Qed.
Lemma lem8375468 {A : Type'} (x : A) : x = x.
Proof. exact (eq_refl x). Qed.
Lemma lem8375469 {A B : Type'} (lt2 : type1402 A) (z' : type515 A B) (f : A -> B) (g : A -> B) (x : A) : (term3033 A B lt2 z' f g x) = (term3035 A B lt2 z' f g x).
Proof. exact (MK_COMB (@lem8375467 A B lt2 z' f g x) (@lem8375468 A x)). Qed.
Lemma lem8375471 {A B : Type'} (f : A -> B) (x : A) : (f x) = (@I (A -> B) f x).
Proof. exact (EQ_MP (@lem20662 A B f x) (@lem20661 A B f x)). Qed.
Lemma lem8375472 {A : Type'} (f : A -> Prop) (x : A) : (f x) = (@I (A -> Prop) f x).
Proof. exact (@lem8375471 A Prop f x). Qed.
Lemma lem8375473 {A B : Type'} (lt2 : type1402 A) (z' : type515 A B) (f : A -> B) (g : A -> B) (x : A) : (term3035 A B lt2 z' f g x) = (term3036 A B lt2 z' f g x).
Proof. exact (@lem8375472 A (term3034 A B lt2 z' f g x) x). Qed.
Lemma lem8375474 {A B : Type'} (lt2 : type1402 A) (z' : type515 A B) (f : A -> B) (g : A -> B) (x : A) : (term3033 A B lt2 z' f g x) = (term3036 A B lt2 z' f g x).
Proof. exact (TRANS (@lem8375469 A B lt2 z' f g x) (@lem8375473 A B lt2 z' f g x)). Qed.
Lemma lem8375475 {A B : Type'} (lt2 : type1402 A) (z' : type515 A B) (f : A -> B) (g : A -> B) (x : A) : (term3032 A B lt2 z' f g x) = (term3036 A B lt2 z' f g x).
Proof. exact (TRANS (@lem8375463 A B lt2 z' f g x) (@lem8375474 A B lt2 z' f g x)). Qed.
Lemma lem8375476 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8375477 {A B : Type'} (lt2 : type1402 A) (z' : type515 A B) (f : A -> B) (g : A -> B) (x : A) : (term3037 A B lt2 z' f g x) = (term3038 A B lt2 z' f g x).
Proof. exact (MK_COMB (@lem8375476) (@lem8375475 A B lt2 z' f g x)). Qed.
Lemma lem8375478 {A B : Type'} (lt2 : type1402 A) (z' : type515 A B) (f : A -> B) (g : A -> B) (x : A) : (term3039 A B lt2 z' f g x) = (term3040 A B lt2 z' f g x).
Proof. exact (MK_COMB (@lem8375477 A B lt2 z' f g x) (@lem8375433 A B z' f g x)). Qed.
Lemma lem8375479 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8375480 {A B : Type'} (lt2 : type1402 A) (z' : type515 A B) (f : A -> B) (g : A -> B) (x : A) : (term3041 A B lt2 z' f g x) = (term3042 A B lt2 z' f g x).
Proof. exact (MK_COMB (@lem8375479) (@lem8375478 A B lt2 z' f g x)). Qed.
Lemma lem8375481 {A B : Type'} (lt2 : type1402 A) (z' : type515 A B) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (H1 : type549 A B) (g : A -> B) (x : A) : (term3043 A B lt2 z' P1 G1 f H1 g x) = (term3044 A B lt2 z' P1 G1 f H1 g x).
Proof. exact (MK_COMB (@lem8375480 A B lt2 z' f g x) (@lem8375362 A B P1 G1 f H1 g x)). Qed.
Lemma lem8375482 {A B : Type'} (lt2 : type1402 A) (z' : type515 A B) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (H1 : type549 A B) (g : A -> B) : (term3045 A B lt2 z' P1 G1 f H1 g) = (term3046 A B lt2 z' P1 G1 f H1 g).
Proof. exact (fun_ext (fun x : A => @lem8375481 A B lt2 z' P1 G1 f H1 g x)). Qed.
Lemma lem8375483 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem8375484 {A B : Type'} (lt2 : type1402 A) (z' : type515 A B) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (H1 : type549 A B) (g : A -> B) : (term3047 A B lt2 z' P1 G1 f H1 g) = (term3048 A B lt2 z' P1 G1 f H1 g).
Proof. exact (MK_COMB (@lem8375483 A) (@lem8375482 A B lt2 z' P1 G1 f H1 g)). Qed.
Lemma lem8375485 {A B : Type'} (lt2 : type1402 A) (z' : type515 A B) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (H1 : type549 A B) : (term3049 A B lt2 z' P1 G1 f H1) = (term3050 A B lt2 z' P1 G1 f H1).
Proof. exact (fun_ext (fun g : A -> B => @lem8375484 A B lt2 z' P1 G1 f H1 g)). Qed.
Lemma lem8375486 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem8375487 {A B : Type'} (lt2 : type1402 A) (z' : type515 A B) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (H1 : type549 A B) : (term2125 A B lt2 z' P1 G1 f H1) = (term3051 A B lt2 z' P1 G1 f H1).
Proof. exact (MK_COMB (@lem8375486 A B) (@lem8375485 A B lt2 z' P1 G1 f H1)). Qed.
Lemma lem8375488 {A B : Type'} (lt2 : type1402 A) (z' : type515 A B) (P1 : type551 A B) (G1 : type548 A B) (H1 : type549 A B) : (term2127 A B lt2 z' P1 G1 H1) = (term3052 A B lt2 z' P1 G1 H1).
Proof. exact (fun_ext (fun f : A -> B => @lem8375487 A B lt2 z' P1 G1 f H1)). Qed.
Lemma lem8375489 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem8375490 {A B : Type'} (lt2 : type1402 A) (z' : type515 A B) (P1 : type551 A B) (G1 : type548 A B) (H1 : type549 A B) : (term2129 A B lt2 z' P1 G1 H1) = (term3053 A B lt2 z' P1 G1 H1).
Proof. exact (MK_COMB (@lem8375489 A B) (@lem8375488 A B lt2 z' P1 G1 H1)). Qed.
Lemma lem8375491 {A B : Type'} (lt2 : type1402 A) (z' : type515 A B) (P1 : type551 A B) (G1 : type548 A B) (H1 : type549 A B) (h1 : term2129 A B lt2 z' P1 G1 H1) : term3053 A B lt2 z' P1 G1 H1.
Proof. exact (EQ_MP (@lem8375490 A B lt2 z' P1 G1 H1) (@lem8373558 A B lt2 z' P1 G1 H1 h1)). Qed.
Lemma lem8375496 {A B P : Type'} (y : P) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (_114084 : type794 A P) (s : P -> A) (lt2 : type1402 A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (H1 : type549 A B) (g : A -> B) (x : A) (h1 : term2946 A B P y P2 G2 H2 _114084 s lt2 P1 G1 f H1 g x) : term2946 A B P y P2 G2 H2 _114084 s lt2 P1 G1 f H1 g x.
Proof. exact (h1). Qed.
Lemma lem8375497 {A B P : Type'} (y : P) (P2 : type560 A B P) (G2 : type557 A B P) (_114084 : type794 A P) (s : P -> A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (lt2 : type1402 A) (y' : A) (x : A) (h1 : term2889 A B P y P2 G2 _114084 s P1 G1 f lt2 y' x) : term2889 A B P y P2 G2 _114084 s P1 G1 f lt2 y' x.
Proof. exact (h1). Qed.
Lemma lem8375498 {A B P : Type'} (y : P) (lt2 : type1402 A) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (_114084 : type794 A P) (s : P -> A) (x : A) (h1 : term2944 A B P y lt2 P2 G2 f H2 g _114084 s x) : term2944 A B P y lt2 P2 G2 f H2 g _114084 s x.
Proof. exact (h1). Qed.
Lemma lem8375499 {A B P : Type'} (s : P -> A) (lt2 : type1402 A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (H1 : type549 A B) (g : A -> B) (x : A) (h1 : term2917 A B P s lt2 P1 G1 f H1 g x) : term2917 A B P s lt2 P1 G1 f H1 g x.
Proof. exact (h1). Qed.
Lemma lem8375500 {A B P : Type'} (y : P) (lt2 : type1402 A) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (_114084 : type794 A P) (s : P -> A) (x : A) (h1 : term2944 A B P y lt2 P2 G2 f H2 g _114084 s x) : term2943 A B P lt2 P2 G2 f H2 g _114084 s x.
Proof. exact (proj2 (@lem8375498 A B P y lt2 P2 G2 f H2 g _114084 s x h1)). Qed.
Lemma lem8375502 {A B P : Type'} (y : P) (lt2 : type1402 A) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (_114084 : type794 A P) (s : P -> A) (x : A) (h1 : term2944 A B P y lt2 P2 G2 f H2 g _114084 s x) : term2942 A B P P2 G2 f H2 g _114084 s x.
Proof. exact (proj2 (@lem8375500 A B P y lt2 P2 G2 f H2 g _114084 s x h1)). Qed.
Lemma lem8375503 {A B P : Type'} (y : P) (lt2 : type1402 A) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (_114084 : type794 A P) (s : P -> A) (x : A) (h1 : term2944 A B P y lt2 P2 G2 f H2 g _114084 s x) : term2914 A B lt2 x f g.
Proof. exact (proj1 (@lem8375500 A B P y lt2 P2 G2 f H2 g _114084 s x h1)). Qed.
Lemma lem8375504 {A B P : Type'} (f : A -> B) (P2 : type560 A B P) (g : A -> B) (_114084 : type794 A P) (s : P -> A) (x : A) (h1 : term2940 A B P f P2 g _114084 s x) : term2940 A B P f P2 g _114084 s x.
Proof. exact (h1). Qed.
Lemma lem8375505 {A B P : Type'} (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (_114084 : type794 A P) (s : P -> A) (x : A) (h1 : term2929 A B P G2 f H2 g _114084 s x) : term2929 A B P G2 f H2 g _114084 s x.
Proof. exact (h1). Qed.
Lemma lem8375506 {A B P : Type'} (f : A -> B) (P2 : type560 A B P) (g : A -> B) (_114084 : type794 A P) (s : P -> A) (x : A) (h1 : term2937 A B P f P2 g _114084 s x) : term2937 A B P f P2 g _114084 s x.
Proof. exact (h1). Qed.
Lemma lem8375507 {A B P : Type'} (f : A -> B) (P2 : type560 A B P) (g : A -> B) (_114084 : type794 A P) (s : P -> A) (x : A) (h1 : term2935 A B P f P2 g _114084 s x) : term2935 A B P f P2 g _114084 s x.
Proof. exact (h1). Qed.
Lemma lem8375514 {A B P : Type'} (s : P -> A) (lt2 : type1402 A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (H1 : type549 A B) (g : A -> B) (x : A) (h1 : term2917 A B P s lt2 P1 G1 f H1 g x) : term2916 A B lt2 P1 G1 f H1 g x.
Proof. exact (proj2 (@lem8375499 A B P s lt2 P1 G1 f H1 g x h1)). Qed.
Lemma lem8375516 {A B P : Type'} (s : P -> A) (lt2 : type1402 A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (H1 : type549 A B) (g : A -> B) (x : A) (h1 : term2917 A B P s lt2 P1 G1 f H1 g x) : term2910 A B P1 G1 f H1 g x.
Proof. exact (proj2 (@lem8375514 A B P s lt2 P1 G1 f H1 g x h1)). Qed.
Lemma lem8375517 {A B P : Type'} (s : P -> A) (lt2 : type1402 A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (H1 : type549 A B) (g : A -> B) (x : A) (h1 : term2917 A B P s lt2 P1 G1 f H1 g x) : term2914 A B lt2 x f g.
Proof. exact (proj1 (@lem8375514 A B P s lt2 P1 G1 f H1 g x h1)). Qed.
Lemma lem8375518 {A B : Type'} (f : A -> B) (P1 : type551 A B) (g : A -> B) (x : A) (h1 : term2908 A B f P1 g x) : term2908 A B f P1 g x.
Proof. exact (h1). Qed.
Lemma lem8375519 {A B : Type'} (G1 : type548 A B) (f : A -> B) (H1 : type549 A B) (g : A -> B) (x : A) (h1 : term2899 A B G1 f H1 g x) : term2899 A B G1 f H1 g x.
Proof. exact (h1). Qed.
Lemma lem8375520 {A B : Type'} (f : A -> B) (P1 : type551 A B) (g : A -> B) (x : A) (h1 : term2905 A B f P1 g x) : term2905 A B f P1 g x.
Proof. exact (h1). Qed.
Lemma lem8375521 {A B : Type'} (f : A -> B) (P1 : type551 A B) (g : A -> B) (x : A) (h1 : term2903 A B f P1 g x) : term2903 A B f P1 g x.
Proof. exact (h1). Qed.
Lemma lem8375528 {A B P : Type'} (y : P) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (_114084 : type794 A P) (s : P -> A) (lt2 : type1402 A) (y' : A) (x : A) (h1 : term2887 A B P y P2 G2 f _114084 s lt2 y' x) : term2887 A B P y P2 G2 f _114084 s lt2 y' x.
Proof. exact (h1). Qed.
Lemma lem8375529 {A B P : Type'} (s : P -> A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (lt2 : type1402 A) (y' : A) (x : A) (h1 : term2871 A B P s P1 G1 f lt2 y' x) : term2871 A B P s P1 G1 f lt2 y' x.
Proof. exact (h1). Qed.
Lemma lem8375530 {A B P : Type'} (y : P) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (_114084 : type794 A P) (s : P -> A) (lt2 : type1402 A) (y' : A) (x : A) (h1 : term2887 A B P y P2 G2 f _114084 s lt2 y' x) : term2885 A B P P2 G2 f _114084 s lt2 y' x.
Proof. exact (proj2 (@lem8375528 A B P y P2 G2 f _114084 s lt2 y' x h1)). Qed.
Lemma lem8375533 {A B P : Type'} (y : P) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (_114084 : type794 A P) (s : P -> A) (lt2 : type1402 A) (y' : A) (x : A) (h1 : term2887 A B P y P2 G2 f _114084 s lt2 y' x) : term2882 A B P P2 lt2 y' G2 f _114084 s x.
Proof. exact (proj1 (@lem8375530 A B P y P2 G2 f _114084 s lt2 y' x h1)). Qed.
Lemma lem8375536 {A B P : Type'} (s : P -> A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (lt2 : type1402 A) (y' : A) (x : A) (h1 : term2871 A B P s P1 G1 f lt2 y' x) : term2869 A B P1 G1 f lt2 y' x.
Proof. exact (proj2 (@lem8375529 A B P s P1 G1 f lt2 y' x h1)). Qed.
Lemma lem8375539 {A B P : Type'} (s : P -> A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (lt2 : type1402 A) (y' : A) (x : A) (h1 : term2871 A B P s P1 G1 f lt2 y' x) : term2866 A B P1 lt2 y' G1 f x.
Proof. exact (proj1 (@lem8375536 A B P s P1 G1 f lt2 y' x h1)). Qed.
Lemma lem8375543 {A : Type'} (P : A -> Prop) (Q : Prop) : (term2001 A P Q) = (term2000 A P Q).
Proof. exact (EQ_MP (@lem19013 A P Q) (@lem19012 A P Q)). Qed.
Lemma lem8375544 {P : Type'} (P' : P -> Prop) (Q : Prop) : (term2001 P P' Q) = (term2000 P P' Q).
Proof. exact (@lem8375543 P P' Q). Qed.
Lemma lem8375545 {A P : Type'} (_114084 : type794 A P) (s : P -> A) (x : A) : (term3054 A P _114084 s x) = (term3055 A P _114084 s x).
Proof. exact (@lem8375544 P (term2814 A P s x) ((term2811 A P _114084 s x) = x)). Qed.
Lemma lem8375546 {A P : Type'} (s : P -> A) (x : P) (x' : A) : (term3056 A P s x' x) = (term2813 A P s x x').
Proof. exact (eq_refl (term3056 A P s x' x)). Qed.
Lemma lem8375547 {A P : Type'} (s : P -> A) (x : A) : (term3057 A P s x) = (term2814 A P s x).
Proof. exact (fun_ext (fun x' : P => @lem8375546 A P s x' x)). Qed.
Lemma lem8375548 {P : Type'} : (@all P) = (@all P).
Proof. exact (eq_refl (@all P)). Qed.
Lemma lem8375549 {A P : Type'} (s : P -> A) (x : A) : (term3058 A P s x) = (term2815 A P s x).
Proof. exact (MK_COMB (@lem8375548 P) (@lem8375547 A P s x)). Qed.
Lemma lem8375550 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8375551 {A P : Type'} (s : P -> A) (x : A) : (term3059 A P s x) = (term2816 A P s x).
Proof. exact (MK_COMB (@lem8375550) (@lem8375549 A P s x)). Qed.
Lemma lem8375552 {A P : Type'} (_114084 : type794 A P) (s : P -> A) (x : A) : ((term2811 A P _114084 s x) = x) = ((term2811 A P _114084 s x) = x).
Proof. exact (eq_refl ((term2811 A P _114084 s x) = x)). Qed.
Lemma lem8375553 {A P : Type'} (_114084 : type794 A P) (s : P -> A) (x : A) : (term3054 A P _114084 s x) = (term2817 A P _114084 s x).
Proof. exact (MK_COMB (@lem8375551 A P s x) (@lem8375552 A P _114084 s x)). Qed.
Lemma lem8375554 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8375555 {A P : Type'} (_114084 : type794 A P) (s : P -> A) (x : A) : (term3060 A P _114084 s x) = (term3061 A P _114084 s x).
Proof. exact (MK_COMB (@lem8375554) (@lem8375553 A P _114084 s x)). Qed.
Lemma lem8375556 {A P : Type'} (s : P -> A) (x : P) (x' : A) : (term3056 A P s x' x) = (term2813 A P s x x').
Proof. exact (eq_refl (term3056 A P s x' x)). Qed.
Lemma lem8375557 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8375558 {A P : Type'} (s : P -> A) (x : P) (x' : A) : (term3062 A P s x' x) = (term3063 A P s x x').
Proof. exact (MK_COMB (@lem8375557) (@lem8375556 A P s x x')). Qed.
Lemma lem8375559 {A P : Type'} (_114084 : type794 A P) (s : P -> A) (x : A) : ((term2811 A P _114084 s x) = x) = ((term2811 A P _114084 s x) = x).
Proof. exact (eq_refl ((term2811 A P _114084 s x) = x)). Qed.
Lemma lem8375560 {A P : Type'} (x : P) (_114084 : type794 A P) (s : P -> A) (x' : A) : (term3064 A P x _114084 s x') = (term3065 A P x _114084 s x').
Proof. exact (MK_COMB (@lem8375558 A P s x x') (@lem8375559 A P _114084 s x')). Qed.
Lemma lem8375561 {A P : Type'} (_114084 : type794 A P) (s : P -> A) (x : A) : (term3066 A P _114084 s x) = (term3067 A P _114084 s x).
Proof. exact (fun_ext (fun x' : P => @lem8375560 A P x' _114084 s x)). Qed.
Lemma lem8375562 {P : Type'} : (@all P) = (@all P).
Proof. exact (eq_refl (@all P)). Qed.
Lemma lem8375563 {A P : Type'} (_114084 : type794 A P) (s : P -> A) (x : A) : (term3055 A P _114084 s x) = (term3068 A P _114084 s x).
Proof. exact (MK_COMB (@lem8375562 P) (@lem8375561 A P _114084 s x)). Qed.
Lemma lem8375564 {A P : Type'} (_114084 : type794 A P) (s : P -> A) (x : A) : ((term3054 A P _114084 s x) = (term3055 A P _114084 s x)) = ((term2817 A P _114084 s x) = (term3068 A P _114084 s x)).
Proof. exact (MK_COMB (@lem8375555 A P _114084 s x) (@lem8375563 A P _114084 s x)). Qed.
Lemma lem8375565 {A P : Type'} (_114084 : type794 A P) (s : P -> A) (x : A) : (term2817 A P _114084 s x) = (term3068 A P _114084 s x).
Proof. exact (EQ_MP (@lem8375564 A P _114084 s x) (@lem8375545 A P _114084 s x)). Qed.
Lemma lem8375566 {A P : Type'} (_114084 : type794 A P) (s : P -> A) : (term2818 A P _114084 s) = (term3069 A P _114084 s).
Proof. exact (fun_ext (fun x : A => @lem8375565 A P _114084 s x)). Qed.
Lemma lem8375567 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem8375568 {A P : Type'} (_114084 : type794 A P) (s : P -> A) : (term2819 A P _114084 s) = (term3070 A P _114084 s).
Proof. exact (MK_COMB (@lem8375567 A) (@lem8375566 A P _114084 s)). Qed.
Lemma lem8375569 {A P : Type'} (_114084 : type794 A P) : (term2820 A P _114084) = (term3071 A P _114084).
Proof. exact (fun_ext (fun s : P -> A => @lem8375568 A P _114084 s)). Qed.
Lemma lem8375570 {A P : Type'} : (@all (P -> A)) = (@all (P -> A)).
Proof. exact (eq_refl (@all (P -> A))). Qed.
Lemma lem8375571 {A P : Type'} (_114084 : type794 A P) : (term2821 A P _114084) = (term3072 A P _114084).
Proof. exact (MK_COMB (@lem8375570 A P) (@lem8375569 A P _114084)). Qed.
Lemma lem8375578 {A P : Type'} (x : P) (_114084 : type794 A P) (s : P -> A) (x' : A) : (term3065 A P x _114084 s x') = (term3065 A P x _114084 s x').
Proof. exact (eq_refl (term3065 A P x _114084 s x')). Qed.
Lemma lem8375579 {A P : Type'} (_114084 : type794 A P) (s : P -> A) (x : A) : (term3067 A P _114084 s x) = (term3067 A P _114084 s x).
Proof. exact (fun_ext (fun x' : P => @lem8375578 A P x' _114084 s x)). Qed.
Lemma lem8375580 {P : Type'} : (@all P) = (@all P).
Proof. exact (eq_refl (@all P)). Qed.
Lemma lem8375581 {A P : Type'} (_114084 : type794 A P) (s : P -> A) (x : A) : (term3068 A P _114084 s x) = (term3068 A P _114084 s x).
Proof. exact (MK_COMB (@lem8375580 P) (@lem8375579 A P _114084 s x)). Qed.
Lemma lem8375582 {A P : Type'} (_114084 : type794 A P) (s : P -> A) : (term3069 A P _114084 s) = (term3069 A P _114084 s).
Proof. exact (fun_ext (fun x : A => @lem8375581 A P _114084 s x)). Qed.
Lemma lem8375583 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem8375584 {A P : Type'} (_114084 : type794 A P) (s : P -> A) : (term3070 A P _114084 s) = (term3070 A P _114084 s).
Proof. exact (MK_COMB (@lem8375583 A) (@lem8375582 A P _114084 s)). Qed.
Lemma lem8375585 {A P : Type'} (_114084 : type794 A P) : (term3071 A P _114084) = (term3071 A P _114084).
Proof. exact (fun_ext (fun s : P -> A => @lem8375584 A P _114084 s)). Qed.
Lemma lem8375586 {A P : Type'} : (@all (P -> A)) = (@all (P -> A)).
Proof. exact (eq_refl (@all (P -> A))). Qed.
Lemma lem8375587 {A P : Type'} (_114084 : type794 A P) : (term3072 A P _114084) = (term3072 A P _114084).
Proof. exact (MK_COMB (@lem8375586 A P) (@lem8375585 A P _114084)). Qed.
Lemma lem8375588 {A P : Type'} (_114084 : type794 A P) : (term2821 A P _114084) = (term3072 A P _114084).
Proof. exact (TRANS (@lem8375571 A P _114084) (@lem8375587 A P _114084)). Qed.
Lemma lem8375589 {A P : Type'} (_114084 : type794 A P) (h1 : term1491 A P _114084) : term3072 A P _114084.
Proof. exact (EQ_MP (@lem8375588 A P _114084) (@lem8373613 A P _114084 h1)). Qed.
Lemma lem8375674 {A B P : Type'} (P2 : type560 A B P) (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term2994 A B P lt2 s z P2 G2 f H2 g a) = (term3073 A B P P2 lt2 s z G2 f H2 g a).
Proof. exact (@lem19490 (term2964 A B P f P2 g a) (term2990 A B P lt2 s z f g a) (term2955 A B P G2 f H2 g a)). Qed.
Lemma lem8375675 {A B P : Type'} (G2 : type557 A B P) (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term3074 A B P lt2 s z G2 f H2 g a) = (term3075 A B P G2 lt2 s z f H2 g a).
Proof. exact (@lem19490 ((term2845 A B P G2 f a) = (term2845 A B P G2 g a)) (term2990 A B P lt2 s z f g a) ((term2949 A B P H2 f a) = (term2949 A B P H2 g a))). Qed.
Lemma lem8375682 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term3076 A B P lt2 s z f H2 g a) = (term3077 A B P lt2 s z f H2 g a).
Proof. exact (@lem19699 (term2986 A B P lt2 z f g s a) (term2979 A B P z f g a) ((term2949 A B P H2 f a) = (term2949 A B P H2 g a))). Qed.
Lemma lem8375689 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (f : A -> B) (G2 : type557 A B P) (g : A -> B) (a : P) : (term3078 A B P lt2 s z f G2 g a) = (term3079 A B P lt2 s z f G2 g a).
Proof. exact (@lem19699 (term2986 A B P lt2 z f g s a) (term2979 A B P z f g a) ((term2845 A B P G2 f a) = (term2845 A B P G2 g a))). Qed.
Lemma lem8375690 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8375691 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (f : A -> B) (G2 : type557 A B P) (g : A -> B) (a : P) : (term3080 A B P lt2 s z f G2 g a) = (term3081 A B P lt2 s z f G2 g a).
Proof. exact (MK_COMB (@lem8375690) (@lem8375689 A B P lt2 s z f G2 g a)). Qed.
Lemma lem8375692 {A B P : Type'} (G2 : type557 A B P) (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term3075 A B P G2 lt2 s z f H2 g a) = (term3082 A B P G2 lt2 s z f H2 g a).
Proof. exact (MK_COMB (@lem8375691 A B P lt2 s z f G2 g a) (@lem8375682 A B P lt2 s z f H2 g a)). Qed.
Lemma lem8375693 {A B P : Type'} (G2 : type557 A B P) (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term3074 A B P lt2 s z G2 f H2 g a) = (term3082 A B P G2 lt2 s z f H2 g a).
Proof. exact (TRANS (@lem8375675 A B P G2 lt2 s z f H2 g a) (@lem8375692 A B P G2 lt2 s z f H2 g a)). Qed.
Lemma lem8375694 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (f : A -> B) (P2 : type560 A B P) (g : A -> B) (a : P) : (term3083 A B P lt2 s z f P2 g a) = (term3084 A B P lt2 s z f P2 g a).
Proof. exact (@lem19490 (term2961 A B P f P2 g a) (term2990 A B P lt2 s z f g a) (term2957 A B P f P2 g a)). Qed.
Lemma lem8375701 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (f : A -> B) (P2 : type560 A B P) (g : A -> B) (a : P) : (term3085 A B P lt2 s z f P2 g a) = (term3086 A B P lt2 s z f P2 g a).
Proof. exact (@lem19699 (term2986 A B P lt2 z f g s a) (term2979 A B P z f g a) (term2957 A B P f P2 g a)). Qed.
Lemma lem8375708 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (f : A -> B) (P2 : type560 A B P) (g : A -> B) (a : P) : (term3087 A B P lt2 s z f P2 g a) = (term3088 A B P lt2 s z f P2 g a).
Proof. exact (@lem19699 (term2986 A B P lt2 z f g s a) (term2979 A B P z f g a) (term2961 A B P f P2 g a)). Qed.
Lemma lem8375709 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8375710 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (f : A -> B) (P2 : type560 A B P) (g : A -> B) (a : P) : (term3089 A B P lt2 s z f P2 g a) = (term3090 A B P lt2 s z f P2 g a).
Proof. exact (MK_COMB (@lem8375709) (@lem8375708 A B P lt2 s z f P2 g a)). Qed.
Lemma lem8375711 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (f : A -> B) (P2 : type560 A B P) (g : A -> B) (a : P) : (term3084 A B P lt2 s z f P2 g a) = (term3091 A B P lt2 s z f P2 g a).
Proof. exact (MK_COMB (@lem8375710 A B P lt2 s z f P2 g a) (@lem8375701 A B P lt2 s z f P2 g a)). Qed.
Lemma lem8375712 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (f : A -> B) (P2 : type560 A B P) (g : A -> B) (a : P) : (term3083 A B P lt2 s z f P2 g a) = (term3091 A B P lt2 s z f P2 g a).
Proof. exact (TRANS (@lem8375694 A B P lt2 s z f P2 g a) (@lem8375711 A B P lt2 s z f P2 g a)). Qed.
Lemma lem8375713 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8375714 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (f : A -> B) (P2 : type560 A B P) (g : A -> B) (a : P) : (term3092 A B P lt2 s z f P2 g a) = (term3093 A B P lt2 s z f P2 g a).
Proof. exact (MK_COMB (@lem8375713) (@lem8375712 A B P lt2 s z f P2 g a)). Qed.
Lemma lem8375715 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term3073 A B P P2 lt2 s z G2 f H2 g a) = (term3094 A B P P2 G2 lt2 s z f H2 g a).
Proof. exact (MK_COMB (@lem8375714 A B P lt2 s z f P2 g a) (@lem8375693 A B P G2 lt2 s z f H2 g a)). Qed.
Lemma lem8375717 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term2994 A B P lt2 s z P2 G2 f H2 g a) = (term3094 A B P P2 G2 lt2 s z f H2 g a).
Proof. exact (TRANS (@lem8375674 A B P P2 lt2 s z G2 f H2 g a) (@lem8375715 A B P P2 G2 lt2 s z f H2 g a)). Qed.
Lemma lem8375718 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) : (term2996 A B P lt2 s z P2 G2 f H2 g) = (term3095 A B P P2 G2 lt2 s z f H2 g).
Proof. exact (fun_ext (fun a : P => @lem8375717 A B P P2 G2 lt2 s z f H2 g a)). Qed.
Lemma lem8375719 {P : Type'} : (@all P) = (@all P).
Proof. exact (eq_refl (@all P)). Qed.
Lemma lem8375720 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) : (term2998 A B P lt2 s z P2 G2 f H2 g) = (term3096 A B P P2 G2 lt2 s z f H2 g).
Proof. exact (MK_COMB (@lem8375719 P) (@lem8375718 A B P P2 G2 lt2 s z f H2 g)). Qed.
Lemma lem8375721 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (f : A -> B) (H2 : type558 A B P) : (term3000 A B P lt2 s z P2 G2 f H2) = (term3097 A B P P2 G2 lt2 s z f H2).
Proof. exact (fun_ext (fun g : A -> B => @lem8375720 A B P P2 G2 lt2 s z f H2 g)). Qed.
Lemma lem8375722 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem8375723 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (f : A -> B) (H2 : type558 A B P) : (term3001 A B P lt2 s z P2 G2 f H2) = (term3098 A B P P2 G2 lt2 s z f H2).
Proof. exact (MK_COMB (@lem8375722 A B) (@lem8375721 A B P P2 G2 lt2 s z f H2)). Qed.
Lemma lem8375724 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (H2 : type558 A B P) : (term3002 A B P lt2 s z P2 G2 H2) = (term3099 A B P P2 G2 lt2 s z H2).
Proof. exact (fun_ext (fun f : A -> B => @lem8375723 A B P P2 G2 lt2 s z f H2)). Qed.
Lemma lem8375725 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem8375727 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (H2 : type558 A B P) : (term3003 A B P lt2 s z P2 G2 H2) = (term3100 A B P P2 G2 lt2 s z H2).
Proof. exact (MK_COMB (@lem8375725 A B) (@lem8375724 A B P P2 G2 lt2 s z H2)). Qed.
Lemma lem8375728 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (h1 : term2270 A B P lt2 s z P2 G2 H2) : term3100 A B P P2 G2 lt2 s z H2.
Proof. exact (EQ_MP (@lem8375727 A B P P2 G2 lt2 s z H2) (@lem8375201 A B P lt2 s z P2 G2 H2 h1)). Qed.
Lemma lem8375893 {A B : Type'} (lt2 : type1402 A) (x : A) (f : A -> B) (g : A -> B) (z : A) : (term2912 A B lt2 x f g z) = (term2912 A B lt2 x f g z).
Proof. exact (eq_refl (term2912 A B lt2 x f g z)). Qed.
Lemma lem8375894 {A B : Type'} (lt2 : type1402 A) (x : A) (f : A -> B) (g : A -> B) : (term2913 A B lt2 x f g) = (term2913 A B lt2 x f g).
Proof. exact (fun_ext (fun z : A => @lem8375893 A B lt2 x f g z)). Qed.
Lemma lem8375895 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem8375897 {A B : Type'} (lt2 : type1402 A) (x : A) (f : A -> B) (g : A -> B) : (term2914 A B lt2 x f g) = (term2914 A B lt2 x f g).
Proof. exact (MK_COMB (@lem8375895 A) (@lem8375894 A B lt2 x f g)). Qed.
Lemma lem8375898 {A B P : Type'} (y : P) (lt2 : type1402 A) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (_114084 : type794 A P) (s : P -> A) (x : A) (h1 : term2944 A B P y lt2 P2 G2 f H2 g _114084 s x) : term2914 A B lt2 x f g.
Proof. exact (EQ_MP (@lem8375897 A B lt2 x f g) (@lem8375503 A B P y lt2 P2 G2 f H2 g _114084 s x h1)). Qed.
Lemma lem8375908 {A : Type'} (P : A -> Prop) (Q : Prop) : (term2001 A P Q) = (term2000 A P Q).
Proof. exact (EQ_MP (@lem19013 A P Q) (@lem19012 A P Q)). Qed.
Lemma lem8375909 {P : Type'} (P' : P -> Prop) (Q : Prop) : (term2001 P P' Q) = (term2000 P P' Q).
Proof. exact (@lem8375908 P P' Q). Qed.
Lemma lem8375910 {A P : Type'} (_114084 : type794 A P) (s : P -> A) (x : A) : (term3054 A P _114084 s x) = (term3055 A P _114084 s x).
Proof. exact (@lem8375909 P (term2814 A P s x) ((term2811 A P _114084 s x) = x)). Qed.
Lemma lem8375911 {A P : Type'} (s : P -> A) (x : P) (x' : A) : (term3056 A P s x' x) = (term2813 A P s x x').
Proof. exact (eq_refl (term3056 A P s x' x)). Qed.
Lemma lem8375912 {A P : Type'} (s : P -> A) (x : A) : (term3057 A P s x) = (term2814 A P s x).
Proof. exact (fun_ext (fun x' : P => @lem8375911 A P s x' x)). Qed.
Lemma lem8375913 {P : Type'} : (@all P) = (@all P).
Proof. exact (eq_refl (@all P)). Qed.
Lemma lem8375914 {A P : Type'} (s : P -> A) (x : A) : (term3058 A P s x) = (term2815 A P s x).
Proof. exact (MK_COMB (@lem8375913 P) (@lem8375912 A P s x)). Qed.
Lemma lem8375915 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8375916 {A P : Type'} (s : P -> A) (x : A) : (term3059 A P s x) = (term2816 A P s x).
Proof. exact (MK_COMB (@lem8375915) (@lem8375914 A P s x)). Qed.
Lemma lem8375917 {A P : Type'} (_114084 : type794 A P) (s : P -> A) (x : A) : ((term2811 A P _114084 s x) = x) = ((term2811 A P _114084 s x) = x).
Proof. exact (eq_refl ((term2811 A P _114084 s x) = x)). Qed.
Lemma lem8375918 {A P : Type'} (_114084 : type794 A P) (s : P -> A) (x : A) : (term3054 A P _114084 s x) = (term2817 A P _114084 s x).
Proof. exact (MK_COMB (@lem8375916 A P s x) (@lem8375917 A P _114084 s x)). Qed.
Lemma lem8375919 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8375920 {A P : Type'} (_114084 : type794 A P) (s : P -> A) (x : A) : (term3060 A P _114084 s x) = (term3061 A P _114084 s x).
Proof. exact (MK_COMB (@lem8375919) (@lem8375918 A P _114084 s x)). Qed.
Lemma lem8375921 {A P : Type'} (s : P -> A) (x : P) (x' : A) : (term3056 A P s x' x) = (term2813 A P s x x').
Proof. exact (eq_refl (term3056 A P s x' x)). Qed.
Lemma lem8375922 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8375923 {A P : Type'} (s : P -> A) (x : P) (x' : A) : (term3062 A P s x' x) = (term3063 A P s x x').
Proof. exact (MK_COMB (@lem8375922) (@lem8375921 A P s x x')). Qed.
Lemma lem8375924 {A P : Type'} (_114084 : type794 A P) (s : P -> A) (x : A) : ((term2811 A P _114084 s x) = x) = ((term2811 A P _114084 s x) = x).
Proof. exact (eq_refl ((term2811 A P _114084 s x) = x)). Qed.
Lemma lem8375925 {A P : Type'} (x : P) (_114084 : type794 A P) (s : P -> A) (x' : A) : (term3064 A P x _114084 s x') = (term3065 A P x _114084 s x').
Proof. exact (MK_COMB (@lem8375923 A P s x x') (@lem8375924 A P _114084 s x')). Qed.
Lemma lem8375926 {A P : Type'} (_114084 : type794 A P) (s : P -> A) (x : A) : (term3066 A P _114084 s x) = (term3067 A P _114084 s x).
Proof. exact (fun_ext (fun x' : P => @lem8375925 A P x' _114084 s x)). Qed.
Lemma lem8375927 {P : Type'} : (@all P) = (@all P).
Proof. exact (eq_refl (@all P)). Qed.
Lemma lem8375928 {A P : Type'} (_114084 : type794 A P) (s : P -> A) (x : A) : (term3055 A P _114084 s x) = (term3068 A P _114084 s x).
Proof. exact (MK_COMB (@lem8375927 P) (@lem8375926 A P _114084 s x)). Qed.
Lemma lem8375929 {A P : Type'} (_114084 : type794 A P) (s : P -> A) (x : A) : ((term3054 A P _114084 s x) = (term3055 A P _114084 s x)) = ((term2817 A P _114084 s x) = (term3068 A P _114084 s x)).
Proof. exact (MK_COMB (@lem8375920 A P _114084 s x) (@lem8375928 A P _114084 s x)). Qed.
Lemma lem8375930 {A P : Type'} (_114084 : type794 A P) (s : P -> A) (x : A) : (term2817 A P _114084 s x) = (term3068 A P _114084 s x).
Proof. exact (EQ_MP (@lem8375929 A P _114084 s x) (@lem8375910 A P _114084 s x)). Qed.
Lemma lem8375931 {A P : Type'} (_114084 : type794 A P) (s : P -> A) : (term2818 A P _114084 s) = (term3069 A P _114084 s).
Proof. exact (fun_ext (fun x : A => @lem8375930 A P _114084 s x)). Qed.
Lemma lem8375932 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem8375933 {A P : Type'} (_114084 : type794 A P) (s : P -> A) : (term2819 A P _114084 s) = (term3070 A P _114084 s).
Proof. exact (MK_COMB (@lem8375932 A) (@lem8375931 A P _114084 s)). Qed.
Lemma lem8375934 {A P : Type'} (_114084 : type794 A P) : (term2820 A P _114084) = (term3071 A P _114084).
Proof. exact (fun_ext (fun s : P -> A => @lem8375933 A P _114084 s)). Qed.
Lemma lem8375935 {A P : Type'} : (@all (P -> A)) = (@all (P -> A)).
Proof. exact (eq_refl (@all (P -> A))). Qed.
Lemma lem8375936 {A P : Type'} (_114084 : type794 A P) : (term2821 A P _114084) = (term3072 A P _114084).
Proof. exact (MK_COMB (@lem8375935 A P) (@lem8375934 A P _114084)). Qed.
Lemma lem8375943 {A P : Type'} (x : P) (_114084 : type794 A P) (s : P -> A) (x' : A) : (term3065 A P x _114084 s x') = (term3065 A P x _114084 s x').
Proof. exact (eq_refl (term3065 A P x _114084 s x')). Qed.
Lemma lem8375944 {A P : Type'} (_114084 : type794 A P) (s : P -> A) (x : A) : (term3067 A P _114084 s x) = (term3067 A P _114084 s x).
Proof. exact (fun_ext (fun x' : P => @lem8375943 A P x' _114084 s x)). Qed.
Lemma lem8375945 {P : Type'} : (@all P) = (@all P).
Proof. exact (eq_refl (@all P)). Qed.
Lemma lem8375946 {A P : Type'} (_114084 : type794 A P) (s : P -> A) (x : A) : (term3068 A P _114084 s x) = (term3068 A P _114084 s x).
Proof. exact (MK_COMB (@lem8375945 P) (@lem8375944 A P _114084 s x)). Qed.
Lemma lem8375947 {A P : Type'} (_114084 : type794 A P) (s : P -> A) : (term3069 A P _114084 s) = (term3069 A P _114084 s).
Proof. exact (fun_ext (fun x : A => @lem8375946 A P _114084 s x)). Qed.
Lemma lem8375948 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem8375949 {A P : Type'} (_114084 : type794 A P) (s : P -> A) : (term3070 A P _114084 s) = (term3070 A P _114084 s).
Proof. exact (MK_COMB (@lem8375948 A) (@lem8375947 A P _114084 s)). Qed.
Lemma lem8375950 {A P : Type'} (_114084 : type794 A P) : (term3071 A P _114084) = (term3071 A P _114084).
Proof. exact (fun_ext (fun s : P -> A => @lem8375949 A P _114084 s)). Qed.
Lemma lem8375951 {A P : Type'} : (@all (P -> A)) = (@all (P -> A)).
Proof. exact (eq_refl (@all (P -> A))). Qed.
Lemma lem8375952 {A P : Type'} (_114084 : type794 A P) : (term3072 A P _114084) = (term3072 A P _114084).
Proof. exact (MK_COMB (@lem8375951 A P) (@lem8375950 A P _114084)). Qed.
Lemma lem8375953 {A P : Type'} (_114084 : type794 A P) : (term2821 A P _114084) = (term3072 A P _114084).
Proof. exact (TRANS (@lem8375936 A P _114084) (@lem8375952 A P _114084)). Qed.
Lemma lem8375954 {A P : Type'} (_114084 : type794 A P) (h1 : term1491 A P _114084) : term3072 A P _114084.
Proof. exact (EQ_MP (@lem8375953 A P _114084) (@lem8373613 A P _114084 h1)). Qed.
Lemma lem8376039 {A B P : Type'} (P2 : type560 A B P) (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term2994 A B P lt2 s z P2 G2 f H2 g a) = (term3073 A B P P2 lt2 s z G2 f H2 g a).
Proof. exact (@lem19490 (term2964 A B P f P2 g a) (term2990 A B P lt2 s z f g a) (term2955 A B P G2 f H2 g a)). Qed.
Lemma lem8376040 {A B P : Type'} (G2 : type557 A B P) (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term3074 A B P lt2 s z G2 f H2 g a) = (term3075 A B P G2 lt2 s z f H2 g a).
Proof. exact (@lem19490 ((term2845 A B P G2 f a) = (term2845 A B P G2 g a)) (term2990 A B P lt2 s z f g a) ((term2949 A B P H2 f a) = (term2949 A B P H2 g a))). Qed.
Lemma lem8376047 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term3076 A B P lt2 s z f H2 g a) = (term3077 A B P lt2 s z f H2 g a).
Proof. exact (@lem19699 (term2986 A B P lt2 z f g s a) (term2979 A B P z f g a) ((term2949 A B P H2 f a) = (term2949 A B P H2 g a))). Qed.
Lemma lem8376054 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (f : A -> B) (G2 : type557 A B P) (g : A -> B) (a : P) : (term3078 A B P lt2 s z f G2 g a) = (term3079 A B P lt2 s z f G2 g a).
Proof. exact (@lem19699 (term2986 A B P lt2 z f g s a) (term2979 A B P z f g a) ((term2845 A B P G2 f a) = (term2845 A B P G2 g a))). Qed.
Lemma lem8376055 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8376056 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (f : A -> B) (G2 : type557 A B P) (g : A -> B) (a : P) : (term3080 A B P lt2 s z f G2 g a) = (term3081 A B P lt2 s z f G2 g a).
Proof. exact (MK_COMB (@lem8376055) (@lem8376054 A B P lt2 s z f G2 g a)). Qed.
Lemma lem8376057 {A B P : Type'} (G2 : type557 A B P) (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term3075 A B P G2 lt2 s z f H2 g a) = (term3082 A B P G2 lt2 s z f H2 g a).
Proof. exact (MK_COMB (@lem8376056 A B P lt2 s z f G2 g a) (@lem8376047 A B P lt2 s z f H2 g a)). Qed.
Lemma lem8376058 {A B P : Type'} (G2 : type557 A B P) (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term3074 A B P lt2 s z G2 f H2 g a) = (term3082 A B P G2 lt2 s z f H2 g a).
Proof. exact (TRANS (@lem8376040 A B P G2 lt2 s z f H2 g a) (@lem8376057 A B P G2 lt2 s z f H2 g a)). Qed.
Lemma lem8376059 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (f : A -> B) (P2 : type560 A B P) (g : A -> B) (a : P) : (term3083 A B P lt2 s z f P2 g a) = (term3084 A B P lt2 s z f P2 g a).
Proof. exact (@lem19490 (term2961 A B P f P2 g a) (term2990 A B P lt2 s z f g a) (term2957 A B P f P2 g a)). Qed.
Lemma lem8376066 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (f : A -> B) (P2 : type560 A B P) (g : A -> B) (a : P) : (term3085 A B P lt2 s z f P2 g a) = (term3086 A B P lt2 s z f P2 g a).
Proof. exact (@lem19699 (term2986 A B P lt2 z f g s a) (term2979 A B P z f g a) (term2957 A B P f P2 g a)). Qed.
Lemma lem8376073 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (f : A -> B) (P2 : type560 A B P) (g : A -> B) (a : P) : (term3087 A B P lt2 s z f P2 g a) = (term3088 A B P lt2 s z f P2 g a).
Proof. exact (@lem19699 (term2986 A B P lt2 z f g s a) (term2979 A B P z f g a) (term2961 A B P f P2 g a)). Qed.
Lemma lem8376074 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8376075 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (f : A -> B) (P2 : type560 A B P) (g : A -> B) (a : P) : (term3089 A B P lt2 s z f P2 g a) = (term3090 A B P lt2 s z f P2 g a).
Proof. exact (MK_COMB (@lem8376074) (@lem8376073 A B P lt2 s z f P2 g a)). Qed.
Lemma lem8376076 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (f : A -> B) (P2 : type560 A B P) (g : A -> B) (a : P) : (term3084 A B P lt2 s z f P2 g a) = (term3091 A B P lt2 s z f P2 g a).
Proof. exact (MK_COMB (@lem8376075 A B P lt2 s z f P2 g a) (@lem8376066 A B P lt2 s z f P2 g a)). Qed.
Lemma lem8376077 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (f : A -> B) (P2 : type560 A B P) (g : A -> B) (a : P) : (term3083 A B P lt2 s z f P2 g a) = (term3091 A B P lt2 s z f P2 g a).
Proof. exact (TRANS (@lem8376059 A B P lt2 s z f P2 g a) (@lem8376076 A B P lt2 s z f P2 g a)). Qed.
Lemma lem8376078 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8376079 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (f : A -> B) (P2 : type560 A B P) (g : A -> B) (a : P) : (term3092 A B P lt2 s z f P2 g a) = (term3093 A B P lt2 s z f P2 g a).
Proof. exact (MK_COMB (@lem8376078) (@lem8376077 A B P lt2 s z f P2 g a)). Qed.
Lemma lem8376080 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term3073 A B P P2 lt2 s z G2 f H2 g a) = (term3094 A B P P2 G2 lt2 s z f H2 g a).
Proof. exact (MK_COMB (@lem8376079 A B P lt2 s z f P2 g a) (@lem8376058 A B P G2 lt2 s z f H2 g a)). Qed.
Lemma lem8376082 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term2994 A B P lt2 s z P2 G2 f H2 g a) = (term3094 A B P P2 G2 lt2 s z f H2 g a).
Proof. exact (TRANS (@lem8376039 A B P P2 lt2 s z G2 f H2 g a) (@lem8376080 A B P P2 G2 lt2 s z f H2 g a)). Qed.
Lemma lem8376083 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) : (term2996 A B P lt2 s z P2 G2 f H2 g) = (term3095 A B P P2 G2 lt2 s z f H2 g).
Proof. exact (fun_ext (fun a : P => @lem8376082 A B P P2 G2 lt2 s z f H2 g a)). Qed.
Lemma lem8376084 {P : Type'} : (@all P) = (@all P).
Proof. exact (eq_refl (@all P)). Qed.
Lemma lem8376085 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) : (term2998 A B P lt2 s z P2 G2 f H2 g) = (term3096 A B P P2 G2 lt2 s z f H2 g).
Proof. exact (MK_COMB (@lem8376084 P) (@lem8376083 A B P P2 G2 lt2 s z f H2 g)). Qed.
Lemma lem8376086 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (f : A -> B) (H2 : type558 A B P) : (term3000 A B P lt2 s z P2 G2 f H2) = (term3097 A B P P2 G2 lt2 s z f H2).
Proof. exact (fun_ext (fun g : A -> B => @lem8376085 A B P P2 G2 lt2 s z f H2 g)). Qed.
Lemma lem8376087 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem8376088 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (f : A -> B) (H2 : type558 A B P) : (term3001 A B P lt2 s z P2 G2 f H2) = (term3098 A B P P2 G2 lt2 s z f H2).
Proof. exact (MK_COMB (@lem8376087 A B) (@lem8376086 A B P P2 G2 lt2 s z f H2)). Qed.
Lemma lem8376089 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (H2 : type558 A B P) : (term3002 A B P lt2 s z P2 G2 H2) = (term3099 A B P P2 G2 lt2 s z H2).
Proof. exact (fun_ext (fun f : A -> B => @lem8376088 A B P P2 G2 lt2 s z f H2)). Qed.
Lemma lem8376090 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem8376092 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (H2 : type558 A B P) : (term3003 A B P lt2 s z P2 G2 H2) = (term3100 A B P P2 G2 lt2 s z H2).
Proof. exact (MK_COMB (@lem8376090 A B) (@lem8376089 A B P P2 G2 lt2 s z H2)). Qed.
Lemma lem8376093 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (h1 : term2270 A B P lt2 s z P2 G2 H2) : term3100 A B P P2 G2 lt2 s z H2.
Proof. exact (EQ_MP (@lem8376092 A B P P2 G2 lt2 s z H2) (@lem8375201 A B P lt2 s z P2 G2 H2 h1)). Qed.
Lemma lem8376258 {A B : Type'} (lt2 : type1402 A) (x : A) (f : A -> B) (g : A -> B) (z : A) : (term2912 A B lt2 x f g z) = (term2912 A B lt2 x f g z).
Proof. exact (eq_refl (term2912 A B lt2 x f g z)). Qed.
Lemma lem8376259 {A B : Type'} (lt2 : type1402 A) (x : A) (f : A -> B) (g : A -> B) : (term2913 A B lt2 x f g) = (term2913 A B lt2 x f g).
Proof. exact (fun_ext (fun z : A => @lem8376258 A B lt2 x f g z)). Qed.
Lemma lem8376260 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem8376262 {A B : Type'} (lt2 : type1402 A) (x : A) (f : A -> B) (g : A -> B) : (term2914 A B lt2 x f g) = (term2914 A B lt2 x f g).
Proof. exact (MK_COMB (@lem8376260 A) (@lem8376259 A B lt2 x f g)). Qed.
Lemma lem8376263 {A B P : Type'} (y : P) (lt2 : type1402 A) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (_114084 : type794 A P) (s : P -> A) (x : A) (h1 : term2944 A B P y lt2 P2 G2 f H2 g _114084 s x) : term2914 A B lt2 x f g.
Proof. exact (EQ_MP (@lem8376262 A B lt2 x f g) (@lem8375503 A B P y lt2 P2 G2 f H2 g _114084 s x h1)). Qed.
Lemma lem8376273 {A : Type'} (P : A -> Prop) (Q : Prop) : (term2001 A P Q) = (term2000 A P Q).
Proof. exact (EQ_MP (@lem19013 A P Q) (@lem19012 A P Q)). Qed.
Lemma lem8376274 {P : Type'} (P' : P -> Prop) (Q : Prop) : (term2001 P P' Q) = (term2000 P P' Q).
Proof. exact (@lem8376273 P P' Q). Qed.
Lemma lem8376275 {A P : Type'} (_114084 : type794 A P) (s : P -> A) (x : A) : (term3054 A P _114084 s x) = (term3055 A P _114084 s x).
Proof. exact (@lem8376274 P (term2814 A P s x) ((term2811 A P _114084 s x) = x)). Qed.
Lemma lem8376276 {A P : Type'} (s : P -> A) (x : P) (x' : A) : (term3056 A P s x' x) = (term2813 A P s x x').
Proof. exact (eq_refl (term3056 A P s x' x)). Qed.
Lemma lem8376277 {A P : Type'} (s : P -> A) (x : A) : (term3057 A P s x) = (term2814 A P s x).
Proof. exact (fun_ext (fun x' : P => @lem8376276 A P s x' x)). Qed.
Lemma lem8376278 {P : Type'} : (@all P) = (@all P).
Proof. exact (eq_refl (@all P)). Qed.
Lemma lem8376279 {A P : Type'} (s : P -> A) (x : A) : (term3058 A P s x) = (term2815 A P s x).
Proof. exact (MK_COMB (@lem8376278 P) (@lem8376277 A P s x)). Qed.
Lemma lem8376280 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8376281 {A P : Type'} (s : P -> A) (x : A) : (term3059 A P s x) = (term2816 A P s x).
Proof. exact (MK_COMB (@lem8376280) (@lem8376279 A P s x)). Qed.
Lemma lem8376282 {A P : Type'} (_114084 : type794 A P) (s : P -> A) (x : A) : ((term2811 A P _114084 s x) = x) = ((term2811 A P _114084 s x) = x).
Proof. exact (eq_refl ((term2811 A P _114084 s x) = x)). Qed.
Lemma lem8376283 {A P : Type'} (_114084 : type794 A P) (s : P -> A) (x : A) : (term3054 A P _114084 s x) = (term2817 A P _114084 s x).
Proof. exact (MK_COMB (@lem8376281 A P s x) (@lem8376282 A P _114084 s x)). Qed.
Lemma lem8376284 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8376285 {A P : Type'} (_114084 : type794 A P) (s : P -> A) (x : A) : (term3060 A P _114084 s x) = (term3061 A P _114084 s x).
Proof. exact (MK_COMB (@lem8376284) (@lem8376283 A P _114084 s x)). Qed.
Lemma lem8376286 {A P : Type'} (s : P -> A) (x : P) (x' : A) : (term3056 A P s x' x) = (term2813 A P s x x').
Proof. exact (eq_refl (term3056 A P s x' x)). Qed.
Lemma lem8376287 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8376288 {A P : Type'} (s : P -> A) (x : P) (x' : A) : (term3062 A P s x' x) = (term3063 A P s x x').
Proof. exact (MK_COMB (@lem8376287) (@lem8376286 A P s x x')). Qed.
Lemma lem8376289 {A P : Type'} (_114084 : type794 A P) (s : P -> A) (x : A) : ((term2811 A P _114084 s x) = x) = ((term2811 A P _114084 s x) = x).
Proof. exact (eq_refl ((term2811 A P _114084 s x) = x)). Qed.
Lemma lem8376290 {A P : Type'} (x : P) (_114084 : type794 A P) (s : P -> A) (x' : A) : (term3064 A P x _114084 s x') = (term3065 A P x _114084 s x').
Proof. exact (MK_COMB (@lem8376288 A P s x x') (@lem8376289 A P _114084 s x')). Qed.
Lemma lem8376291 {A P : Type'} (_114084 : type794 A P) (s : P -> A) (x : A) : (term3066 A P _114084 s x) = (term3067 A P _114084 s x).
Proof. exact (fun_ext (fun x' : P => @lem8376290 A P x' _114084 s x)). Qed.
Lemma lem8376292 {P : Type'} : (@all P) = (@all P).
Proof. exact (eq_refl (@all P)). Qed.
Lemma lem8376293 {A P : Type'} (_114084 : type794 A P) (s : P -> A) (x : A) : (term3055 A P _114084 s x) = (term3068 A P _114084 s x).
Proof. exact (MK_COMB (@lem8376292 P) (@lem8376291 A P _114084 s x)). Qed.
Lemma lem8376294 {A P : Type'} (_114084 : type794 A P) (s : P -> A) (x : A) : ((term3054 A P _114084 s x) = (term3055 A P _114084 s x)) = ((term2817 A P _114084 s x) = (term3068 A P _114084 s x)).
Proof. exact (MK_COMB (@lem8376285 A P _114084 s x) (@lem8376293 A P _114084 s x)). Qed.
Lemma lem8376295 {A P : Type'} (_114084 : type794 A P) (s : P -> A) (x : A) : (term2817 A P _114084 s x) = (term3068 A P _114084 s x).
Proof. exact (EQ_MP (@lem8376294 A P _114084 s x) (@lem8376275 A P _114084 s x)). Qed.
Lemma lem8376296 {A P : Type'} (_114084 : type794 A P) (s : P -> A) : (term2818 A P _114084 s) = (term3069 A P _114084 s).
Proof. exact (fun_ext (fun x : A => @lem8376295 A P _114084 s x)). Qed.
Lemma lem8376297 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem8376298 {A P : Type'} (_114084 : type794 A P) (s : P -> A) : (term2819 A P _114084 s) = (term3070 A P _114084 s).
Proof. exact (MK_COMB (@lem8376297 A) (@lem8376296 A P _114084 s)). Qed.
Lemma lem8376299 {A P : Type'} (_114084 : type794 A P) : (term2820 A P _114084) = (term3071 A P _114084).
Proof. exact (fun_ext (fun s : P -> A => @lem8376298 A P _114084 s)). Qed.
Lemma lem8376300 {A P : Type'} : (@all (P -> A)) = (@all (P -> A)).
Proof. exact (eq_refl (@all (P -> A))). Qed.
Lemma lem8376301 {A P : Type'} (_114084 : type794 A P) : (term2821 A P _114084) = (term3072 A P _114084).
Proof. exact (MK_COMB (@lem8376300 A P) (@lem8376299 A P _114084)). Qed.
Lemma lem8376308 {A P : Type'} (x : P) (_114084 : type794 A P) (s : P -> A) (x' : A) : (term3065 A P x _114084 s x') = (term3065 A P x _114084 s x').
Proof. exact (eq_refl (term3065 A P x _114084 s x')). Qed.
Lemma lem8376309 {A P : Type'} (_114084 : type794 A P) (s : P -> A) (x : A) : (term3067 A P _114084 s x) = (term3067 A P _114084 s x).
Proof. exact (fun_ext (fun x' : P => @lem8376308 A P x' _114084 s x)). Qed.
Lemma lem8376310 {P : Type'} : (@all P) = (@all P).
Proof. exact (eq_refl (@all P)). Qed.
Lemma lem8376311 {A P : Type'} (_114084 : type794 A P) (s : P -> A) (x : A) : (term3068 A P _114084 s x) = (term3068 A P _114084 s x).
Proof. exact (MK_COMB (@lem8376310 P) (@lem8376309 A P _114084 s x)). Qed.
Lemma lem8376312 {A P : Type'} (_114084 : type794 A P) (s : P -> A) : (term3069 A P _114084 s) = (term3069 A P _114084 s).
Proof. exact (fun_ext (fun x : A => @lem8376311 A P _114084 s x)). Qed.
Lemma lem8376313 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem8376314 {A P : Type'} (_114084 : type794 A P) (s : P -> A) : (term3070 A P _114084 s) = (term3070 A P _114084 s).
Proof. exact (MK_COMB (@lem8376313 A) (@lem8376312 A P _114084 s)). Qed.
Lemma lem8376315 {A P : Type'} (_114084 : type794 A P) : (term3071 A P _114084) = (term3071 A P _114084).
Proof. exact (fun_ext (fun s : P -> A => @lem8376314 A P _114084 s)). Qed.
Lemma lem8376316 {A P : Type'} : (@all (P -> A)) = (@all (P -> A)).
Proof. exact (eq_refl (@all (P -> A))). Qed.
Lemma lem8376317 {A P : Type'} (_114084 : type794 A P) : (term3072 A P _114084) = (term3072 A P _114084).
Proof. exact (MK_COMB (@lem8376316 A P) (@lem8376315 A P _114084)). Qed.
Lemma lem8376318 {A P : Type'} (_114084 : type794 A P) : (term2821 A P _114084) = (term3072 A P _114084).
Proof. exact (TRANS (@lem8376301 A P _114084) (@lem8376317 A P _114084)). Qed.
Lemma lem8376319 {A P : Type'} (_114084 : type794 A P) (h1 : term1491 A P _114084) : term3072 A P _114084.
Proof. exact (EQ_MP (@lem8376318 A P _114084) (@lem8373613 A P _114084 h1)). Qed.
Lemma lem8376404 {A B P : Type'} (P2 : type560 A B P) (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term2994 A B P lt2 s z P2 G2 f H2 g a) = (term3073 A B P P2 lt2 s z G2 f H2 g a).
Proof. exact (@lem19490 (term2964 A B P f P2 g a) (term2990 A B P lt2 s z f g a) (term2955 A B P G2 f H2 g a)). Qed.
Lemma lem8376405 {A B P : Type'} (G2 : type557 A B P) (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term3074 A B P lt2 s z G2 f H2 g a) = (term3075 A B P G2 lt2 s z f H2 g a).
Proof. exact (@lem19490 ((term2845 A B P G2 f a) = (term2845 A B P G2 g a)) (term2990 A B P lt2 s z f g a) ((term2949 A B P H2 f a) = (term2949 A B P H2 g a))). Qed.
Lemma lem8376412 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term3076 A B P lt2 s z f H2 g a) = (term3077 A B P lt2 s z f H2 g a).
Proof. exact (@lem19699 (term2986 A B P lt2 z f g s a) (term2979 A B P z f g a) ((term2949 A B P H2 f a) = (term2949 A B P H2 g a))). Qed.
Lemma lem8376419 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (f : A -> B) (G2 : type557 A B P) (g : A -> B) (a : P) : (term3078 A B P lt2 s z f G2 g a) = (term3079 A B P lt2 s z f G2 g a).
Proof. exact (@lem19699 (term2986 A B P lt2 z f g s a) (term2979 A B P z f g a) ((term2845 A B P G2 f a) = (term2845 A B P G2 g a))). Qed.
Lemma lem8376420 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8376421 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (f : A -> B) (G2 : type557 A B P) (g : A -> B) (a : P) : (term3080 A B P lt2 s z f G2 g a) = (term3081 A B P lt2 s z f G2 g a).
Proof. exact (MK_COMB (@lem8376420) (@lem8376419 A B P lt2 s z f G2 g a)). Qed.
Lemma lem8376422 {A B P : Type'} (G2 : type557 A B P) (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term3075 A B P G2 lt2 s z f H2 g a) = (term3082 A B P G2 lt2 s z f H2 g a).
Proof. exact (MK_COMB (@lem8376421 A B P lt2 s z f G2 g a) (@lem8376412 A B P lt2 s z f H2 g a)). Qed.
Lemma lem8376423 {A B P : Type'} (G2 : type557 A B P) (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term3074 A B P lt2 s z G2 f H2 g a) = (term3082 A B P G2 lt2 s z f H2 g a).
Proof. exact (TRANS (@lem8376405 A B P G2 lt2 s z f H2 g a) (@lem8376422 A B P G2 lt2 s z f H2 g a)). Qed.
Lemma lem8376424 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (f : A -> B) (P2 : type560 A B P) (g : A -> B) (a : P) : (term3083 A B P lt2 s z f P2 g a) = (term3084 A B P lt2 s z f P2 g a).
Proof. exact (@lem19490 (term2961 A B P f P2 g a) (term2990 A B P lt2 s z f g a) (term2957 A B P f P2 g a)). Qed.
Lemma lem8376431 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (f : A -> B) (P2 : type560 A B P) (g : A -> B) (a : P) : (term3085 A B P lt2 s z f P2 g a) = (term3086 A B P lt2 s z f P2 g a).
Proof. exact (@lem19699 (term2986 A B P lt2 z f g s a) (term2979 A B P z f g a) (term2957 A B P f P2 g a)). Qed.
Lemma lem8376438 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (f : A -> B) (P2 : type560 A B P) (g : A -> B) (a : P) : (term3087 A B P lt2 s z f P2 g a) = (term3088 A B P lt2 s z f P2 g a).
Proof. exact (@lem19699 (term2986 A B P lt2 z f g s a) (term2979 A B P z f g a) (term2961 A B P f P2 g a)). Qed.
Lemma lem8376439 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8376440 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (f : A -> B) (P2 : type560 A B P) (g : A -> B) (a : P) : (term3089 A B P lt2 s z f P2 g a) = (term3090 A B P lt2 s z f P2 g a).
Proof. exact (MK_COMB (@lem8376439) (@lem8376438 A B P lt2 s z f P2 g a)). Qed.
Lemma lem8376441 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (f : A -> B) (P2 : type560 A B P) (g : A -> B) (a : P) : (term3084 A B P lt2 s z f P2 g a) = (term3091 A B P lt2 s z f P2 g a).
Proof. exact (MK_COMB (@lem8376440 A B P lt2 s z f P2 g a) (@lem8376431 A B P lt2 s z f P2 g a)). Qed.
Lemma lem8376442 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (f : A -> B) (P2 : type560 A B P) (g : A -> B) (a : P) : (term3083 A B P lt2 s z f P2 g a) = (term3091 A B P lt2 s z f P2 g a).
Proof. exact (TRANS (@lem8376424 A B P lt2 s z f P2 g a) (@lem8376441 A B P lt2 s z f P2 g a)). Qed.
Lemma lem8376443 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8376444 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (f : A -> B) (P2 : type560 A B P) (g : A -> B) (a : P) : (term3092 A B P lt2 s z f P2 g a) = (term3093 A B P lt2 s z f P2 g a).
Proof. exact (MK_COMB (@lem8376443) (@lem8376442 A B P lt2 s z f P2 g a)). Qed.
Lemma lem8376445 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term3073 A B P P2 lt2 s z G2 f H2 g a) = (term3094 A B P P2 G2 lt2 s z f H2 g a).
Proof. exact (MK_COMB (@lem8376444 A B P lt2 s z f P2 g a) (@lem8376423 A B P G2 lt2 s z f H2 g a)). Qed.
Lemma lem8376447 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term2994 A B P lt2 s z P2 G2 f H2 g a) = (term3094 A B P P2 G2 lt2 s z f H2 g a).
Proof. exact (TRANS (@lem8376404 A B P P2 lt2 s z G2 f H2 g a) (@lem8376445 A B P P2 G2 lt2 s z f H2 g a)). Qed.
Lemma lem8376448 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) : (term2996 A B P lt2 s z P2 G2 f H2 g) = (term3095 A B P P2 G2 lt2 s z f H2 g).
Proof. exact (fun_ext (fun a : P => @lem8376447 A B P P2 G2 lt2 s z f H2 g a)). Qed.
Lemma lem8376449 {P : Type'} : (@all P) = (@all P).
Proof. exact (eq_refl (@all P)). Qed.
Lemma lem8376450 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) : (term2998 A B P lt2 s z P2 G2 f H2 g) = (term3096 A B P P2 G2 lt2 s z f H2 g).
Proof. exact (MK_COMB (@lem8376449 P) (@lem8376448 A B P P2 G2 lt2 s z f H2 g)). Qed.
Lemma lem8376451 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (f : A -> B) (H2 : type558 A B P) : (term3000 A B P lt2 s z P2 G2 f H2) = (term3097 A B P P2 G2 lt2 s z f H2).
Proof. exact (fun_ext (fun g : A -> B => @lem8376450 A B P P2 G2 lt2 s z f H2 g)). Qed.
Lemma lem8376452 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem8376453 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (f : A -> B) (H2 : type558 A B P) : (term3001 A B P lt2 s z P2 G2 f H2) = (term3098 A B P P2 G2 lt2 s z f H2).
Proof. exact (MK_COMB (@lem8376452 A B) (@lem8376451 A B P P2 G2 lt2 s z f H2)). Qed.
Lemma lem8376454 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (H2 : type558 A B P) : (term3002 A B P lt2 s z P2 G2 H2) = (term3099 A B P P2 G2 lt2 s z H2).
Proof. exact (fun_ext (fun f : A -> B => @lem8376453 A B P P2 G2 lt2 s z f H2)). Qed.
Lemma lem8376455 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem8376457 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (H2 : type558 A B P) : (term3003 A B P lt2 s z P2 G2 H2) = (term3100 A B P P2 G2 lt2 s z H2).
Proof. exact (MK_COMB (@lem8376455 A B) (@lem8376454 A B P P2 G2 lt2 s z H2)). Qed.
Lemma lem8376458 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (h1 : term2270 A B P lt2 s z P2 G2 H2) : term3100 A B P P2 G2 lt2 s z H2.
Proof. exact (EQ_MP (@lem8376457 A B P P2 G2 lt2 s z H2) (@lem8375201 A B P lt2 s z P2 G2 H2 h1)). Qed.
Lemma lem8376623 {A B : Type'} (lt2 : type1402 A) (x : A) (f : A -> B) (g : A -> B) (z : A) : (term2912 A B lt2 x f g z) = (term2912 A B lt2 x f g z).
Proof. exact (eq_refl (term2912 A B lt2 x f g z)). Qed.
Lemma lem8376624 {A B : Type'} (lt2 : type1402 A) (x : A) (f : A -> B) (g : A -> B) : (term2913 A B lt2 x f g) = (term2913 A B lt2 x f g).
Proof. exact (fun_ext (fun z : A => @lem8376623 A B lt2 x f g z)). Qed.
Lemma lem8376625 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem8376627 {A B : Type'} (lt2 : type1402 A) (x : A) (f : A -> B) (g : A -> B) : (term2914 A B lt2 x f g) = (term2914 A B lt2 x f g).
Proof. exact (MK_COMB (@lem8376625 A) (@lem8376624 A B lt2 x f g)). Qed.
Lemma lem8376628 {A B P : Type'} (y : P) (lt2 : type1402 A) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (_114084 : type794 A P) (s : P -> A) (x : A) (h1 : term2944 A B P y lt2 P2 G2 f H2 g _114084 s x) : term2914 A B lt2 x f g.
Proof. exact (EQ_MP (@lem8376627 A B lt2 x f g) (@lem8375503 A B P y lt2 P2 G2 f H2 g _114084 s x h1)). Qed.
Lemma lem8376632 {A B P : Type'} (f : A -> B) (G2 : type557 A B P) (g : A -> B) (_114084 : type794 A P) (s : P -> A) (x : A) (h1 : term2926 A B P f G2 g _114084 s x) : term2926 A B P f G2 g _114084 s x.
Proof. exact (h1). Qed.
Lemma lem8376634 {A : Type'} (P : A -> Prop) (Q : Prop) : (term2001 A P Q) = (term2000 A P Q).
Proof. exact (EQ_MP (@lem19013 A P Q) (@lem19012 A P Q)). Qed.
Lemma lem8376635 {P : Type'} (P' : P -> Prop) (Q : Prop) : (term2001 P P' Q) = (term2000 P P' Q).
Proof. exact (@lem8376634 P P' Q). Qed.
Lemma lem8376636 {A P : Type'} (_114084 : type794 A P) (s : P -> A) (x : A) : (term3054 A P _114084 s x) = (term3055 A P _114084 s x).
Proof. exact (@lem8376635 P (term2814 A P s x) ((term2811 A P _114084 s x) = x)). Qed.
Lemma lem8376637 {A P : Type'} (s : P -> A) (x : P) (x' : A) : (term3056 A P s x' x) = (term2813 A P s x x').
Proof. exact (eq_refl (term3056 A P s x' x)). Qed.
Lemma lem8376638 {A P : Type'} (s : P -> A) (x : A) : (term3057 A P s x) = (term2814 A P s x).
Proof. exact (fun_ext (fun x' : P => @lem8376637 A P s x' x)). Qed.
Lemma lem8376639 {P : Type'} : (@all P) = (@all P).
Proof. exact (eq_refl (@all P)). Qed.
Lemma lem8376640 {A P : Type'} (s : P -> A) (x : A) : (term3058 A P s x) = (term2815 A P s x).
Proof. exact (MK_COMB (@lem8376639 P) (@lem8376638 A P s x)). Qed.
Lemma lem8376641 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8376642 {A P : Type'} (s : P -> A) (x : A) : (term3059 A P s x) = (term2816 A P s x).
Proof. exact (MK_COMB (@lem8376641) (@lem8376640 A P s x)). Qed.
Lemma lem8376643 {A P : Type'} (_114084 : type794 A P) (s : P -> A) (x : A) : ((term2811 A P _114084 s x) = x) = ((term2811 A P _114084 s x) = x).
Proof. exact (eq_refl ((term2811 A P _114084 s x) = x)). Qed.
Lemma lem8376644 {A P : Type'} (_114084 : type794 A P) (s : P -> A) (x : A) : (term3054 A P _114084 s x) = (term2817 A P _114084 s x).
Proof. exact (MK_COMB (@lem8376642 A P s x) (@lem8376643 A P _114084 s x)). Qed.
Lemma lem8376645 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8376646 {A P : Type'} (_114084 : type794 A P) (s : P -> A) (x : A) : (term3060 A P _114084 s x) = (term3061 A P _114084 s x).
Proof. exact (MK_COMB (@lem8376645) (@lem8376644 A P _114084 s x)). Qed.
Lemma lem8376647 {A P : Type'} (s : P -> A) (x : P) (x' : A) : (term3056 A P s x' x) = (term2813 A P s x x').
Proof. exact (eq_refl (term3056 A P s x' x)). Qed.
Lemma lem8376648 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8376649 {A P : Type'} (s : P -> A) (x : P) (x' : A) : (term3062 A P s x' x) = (term3063 A P s x x').
Proof. exact (MK_COMB (@lem8376648) (@lem8376647 A P s x x')). Qed.
Lemma lem8376650 {A P : Type'} (_114084 : type794 A P) (s : P -> A) (x : A) : ((term2811 A P _114084 s x) = x) = ((term2811 A P _114084 s x) = x).
Proof. exact (eq_refl ((term2811 A P _114084 s x) = x)). Qed.
Lemma lem8376651 {A P : Type'} (x : P) (_114084 : type794 A P) (s : P -> A) (x' : A) : (term3064 A P x _114084 s x') = (term3065 A P x _114084 s x').
Proof. exact (MK_COMB (@lem8376649 A P s x x') (@lem8376650 A P _114084 s x')). Qed.
Lemma lem8376652 {A P : Type'} (_114084 : type794 A P) (s : P -> A) (x : A) : (term3066 A P _114084 s x) = (term3067 A P _114084 s x).
Proof. exact (fun_ext (fun x' : P => @lem8376651 A P x' _114084 s x)). Qed.
Lemma lem8376653 {P : Type'} : (@all P) = (@all P).
Proof. exact (eq_refl (@all P)). Qed.
Lemma lem8376654 {A P : Type'} (_114084 : type794 A P) (s : P -> A) (x : A) : (term3055 A P _114084 s x) = (term3068 A P _114084 s x).
Proof. exact (MK_COMB (@lem8376653 P) (@lem8376652 A P _114084 s x)). Qed.
Lemma lem8376655 {A P : Type'} (_114084 : type794 A P) (s : P -> A) (x : A) : ((term3054 A P _114084 s x) = (term3055 A P _114084 s x)) = ((term2817 A P _114084 s x) = (term3068 A P _114084 s x)).
Proof. exact (MK_COMB (@lem8376646 A P _114084 s x) (@lem8376654 A P _114084 s x)). Qed.
Lemma lem8376656 {A P : Type'} (_114084 : type794 A P) (s : P -> A) (x : A) : (term2817 A P _114084 s x) = (term3068 A P _114084 s x).
Proof. exact (EQ_MP (@lem8376655 A P _114084 s x) (@lem8376636 A P _114084 s x)). Qed.
Lemma lem8376657 {A P : Type'} (_114084 : type794 A P) (s : P -> A) : (term2818 A P _114084 s) = (term3069 A P _114084 s).
Proof. exact (fun_ext (fun x : A => @lem8376656 A P _114084 s x)). Qed.
Lemma lem8376658 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem8376659 {A P : Type'} (_114084 : type794 A P) (s : P -> A) : (term2819 A P _114084 s) = (term3070 A P _114084 s).
Proof. exact (MK_COMB (@lem8376658 A) (@lem8376657 A P _114084 s)). Qed.
Lemma lem8376660 {A P : Type'} (_114084 : type794 A P) : (term2820 A P _114084) = (term3071 A P _114084).
Proof. exact (fun_ext (fun s : P -> A => @lem8376659 A P _114084 s)). Qed.
Lemma lem8376661 {A P : Type'} : (@all (P -> A)) = (@all (P -> A)).
Proof. exact (eq_refl (@all (P -> A))). Qed.
Lemma lem8376662 {A P : Type'} (_114084 : type794 A P) : (term2821 A P _114084) = (term3072 A P _114084).
Proof. exact (MK_COMB (@lem8376661 A P) (@lem8376660 A P _114084)). Qed.
Lemma lem8376669 {A P : Type'} (x : P) (_114084 : type794 A P) (s : P -> A) (x' : A) : (term3065 A P x _114084 s x') = (term3065 A P x _114084 s x').
Proof. exact (eq_refl (term3065 A P x _114084 s x')). Qed.
Lemma lem8376670 {A P : Type'} (_114084 : type794 A P) (s : P -> A) (x : A) : (term3067 A P _114084 s x) = (term3067 A P _114084 s x).
Proof. exact (fun_ext (fun x' : P => @lem8376669 A P x' _114084 s x)). Qed.
Lemma lem8376671 {P : Type'} : (@all P) = (@all P).
Proof. exact (eq_refl (@all P)). Qed.
Lemma lem8376672 {A P : Type'} (_114084 : type794 A P) (s : P -> A) (x : A) : (term3068 A P _114084 s x) = (term3068 A P _114084 s x).
Proof. exact (MK_COMB (@lem8376671 P) (@lem8376670 A P _114084 s x)). Qed.
Lemma lem8376673 {A P : Type'} (_114084 : type794 A P) (s : P -> A) : (term3069 A P _114084 s) = (term3069 A P _114084 s).
Proof. exact (fun_ext (fun x : A => @lem8376672 A P _114084 s x)). Qed.
Lemma lem8376674 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem8376675 {A P : Type'} (_114084 : type794 A P) (s : P -> A) : (term3070 A P _114084 s) = (term3070 A P _114084 s).
Proof. exact (MK_COMB (@lem8376674 A) (@lem8376673 A P _114084 s)). Qed.
Lemma lem8376676 {A P : Type'} (_114084 : type794 A P) : (term3071 A P _114084) = (term3071 A P _114084).
Proof. exact (fun_ext (fun s : P -> A => @lem8376675 A P _114084 s)). Qed.
Lemma lem8376677 {A P : Type'} : (@all (P -> A)) = (@all (P -> A)).
Proof. exact (eq_refl (@all (P -> A))). Qed.
Lemma lem8376678 {A P : Type'} (_114084 : type794 A P) : (term3072 A P _114084) = (term3072 A P _114084).
Proof. exact (MK_COMB (@lem8376677 A P) (@lem8376676 A P _114084)). Qed.
Lemma lem8376679 {A P : Type'} (_114084 : type794 A P) : (term2821 A P _114084) = (term3072 A P _114084).
Proof. exact (TRANS (@lem8376662 A P _114084) (@lem8376678 A P _114084)). Qed.
Lemma lem8376680 {A P : Type'} (_114084 : type794 A P) (h1 : term1491 A P _114084) : term3072 A P _114084.
Proof. exact (EQ_MP (@lem8376679 A P _114084) (@lem8373613 A P _114084 h1)). Qed.
Lemma lem8376765 {A B P : Type'} (P2 : type560 A B P) (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term2994 A B P lt2 s z P2 G2 f H2 g a) = (term3073 A B P P2 lt2 s z G2 f H2 g a).
Proof. exact (@lem19490 (term2964 A B P f P2 g a) (term2990 A B P lt2 s z f g a) (term2955 A B P G2 f H2 g a)). Qed.
Lemma lem8376766 {A B P : Type'} (G2 : type557 A B P) (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term3074 A B P lt2 s z G2 f H2 g a) = (term3075 A B P G2 lt2 s z f H2 g a).
Proof. exact (@lem19490 ((term2845 A B P G2 f a) = (term2845 A B P G2 g a)) (term2990 A B P lt2 s z f g a) ((term2949 A B P H2 f a) = (term2949 A B P H2 g a))). Qed.
Lemma lem8376773 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term3076 A B P lt2 s z f H2 g a) = (term3077 A B P lt2 s z f H2 g a).
Proof. exact (@lem19699 (term2986 A B P lt2 z f g s a) (term2979 A B P z f g a) ((term2949 A B P H2 f a) = (term2949 A B P H2 g a))). Qed.
Lemma lem8376780 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (f : A -> B) (G2 : type557 A B P) (g : A -> B) (a : P) : (term3078 A B P lt2 s z f G2 g a) = (term3079 A B P lt2 s z f G2 g a).
Proof. exact (@lem19699 (term2986 A B P lt2 z f g s a) (term2979 A B P z f g a) ((term2845 A B P G2 f a) = (term2845 A B P G2 g a))). Qed.
Lemma lem8376781 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8376782 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (f : A -> B) (G2 : type557 A B P) (g : A -> B) (a : P) : (term3080 A B P lt2 s z f G2 g a) = (term3081 A B P lt2 s z f G2 g a).
Proof. exact (MK_COMB (@lem8376781) (@lem8376780 A B P lt2 s z f G2 g a)). Qed.
Lemma lem8376783 {A B P : Type'} (G2 : type557 A B P) (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term3075 A B P G2 lt2 s z f H2 g a) = (term3082 A B P G2 lt2 s z f H2 g a).
Proof. exact (MK_COMB (@lem8376782 A B P lt2 s z f G2 g a) (@lem8376773 A B P lt2 s z f H2 g a)). Qed.
Lemma lem8376784 {A B P : Type'} (G2 : type557 A B P) (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term3074 A B P lt2 s z G2 f H2 g a) = (term3082 A B P G2 lt2 s z f H2 g a).
Proof. exact (TRANS (@lem8376766 A B P G2 lt2 s z f H2 g a) (@lem8376783 A B P G2 lt2 s z f H2 g a)). Qed.
Lemma lem8376785 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (f : A -> B) (P2 : type560 A B P) (g : A -> B) (a : P) : (term3083 A B P lt2 s z f P2 g a) = (term3084 A B P lt2 s z f P2 g a).
Proof. exact (@lem19490 (term2961 A B P f P2 g a) (term2990 A B P lt2 s z f g a) (term2957 A B P f P2 g a)). Qed.
Lemma lem8376792 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (f : A -> B) (P2 : type560 A B P) (g : A -> B) (a : P) : (term3085 A B P lt2 s z f P2 g a) = (term3086 A B P lt2 s z f P2 g a).
Proof. exact (@lem19699 (term2986 A B P lt2 z f g s a) (term2979 A B P z f g a) (term2957 A B P f P2 g a)). Qed.
Lemma lem8376799 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (f : A -> B) (P2 : type560 A B P) (g : A -> B) (a : P) : (term3087 A B P lt2 s z f P2 g a) = (term3088 A B P lt2 s z f P2 g a).
Proof. exact (@lem19699 (term2986 A B P lt2 z f g s a) (term2979 A B P z f g a) (term2961 A B P f P2 g a)). Qed.
Lemma lem8376800 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8376801 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (f : A -> B) (P2 : type560 A B P) (g : A -> B) (a : P) : (term3089 A B P lt2 s z f P2 g a) = (term3090 A B P lt2 s z f P2 g a).
Proof. exact (MK_COMB (@lem8376800) (@lem8376799 A B P lt2 s z f P2 g a)). Qed.
Lemma lem8376802 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (f : A -> B) (P2 : type560 A B P) (g : A -> B) (a : P) : (term3084 A B P lt2 s z f P2 g a) = (term3091 A B P lt2 s z f P2 g a).
Proof. exact (MK_COMB (@lem8376801 A B P lt2 s z f P2 g a) (@lem8376792 A B P lt2 s z f P2 g a)). Qed.
Lemma lem8376803 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (f : A -> B) (P2 : type560 A B P) (g : A -> B) (a : P) : (term3083 A B P lt2 s z f P2 g a) = (term3091 A B P lt2 s z f P2 g a).
Proof. exact (TRANS (@lem8376785 A B P lt2 s z f P2 g a) (@lem8376802 A B P lt2 s z f P2 g a)). Qed.
Lemma lem8376804 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8376805 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (f : A -> B) (P2 : type560 A B P) (g : A -> B) (a : P) : (term3092 A B P lt2 s z f P2 g a) = (term3093 A B P lt2 s z f P2 g a).
Proof. exact (MK_COMB (@lem8376804) (@lem8376803 A B P lt2 s z f P2 g a)). Qed.
Lemma lem8376806 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term3073 A B P P2 lt2 s z G2 f H2 g a) = (term3094 A B P P2 G2 lt2 s z f H2 g a).
Proof. exact (MK_COMB (@lem8376805 A B P lt2 s z f P2 g a) (@lem8376784 A B P G2 lt2 s z f H2 g a)). Qed.
Lemma lem8376808 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (a : P) : (term2994 A B P lt2 s z P2 G2 f H2 g a) = (term3094 A B P P2 G2 lt2 s z f H2 g a).
Proof. exact (TRANS (@lem8376765 A B P P2 lt2 s z G2 f H2 g a) (@lem8376806 A B P P2 G2 lt2 s z f H2 g a)). Qed.
Lemma lem8376809 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) : (term2996 A B P lt2 s z P2 G2 f H2 g) = (term3095 A B P P2 G2 lt2 s z f H2 g).
Proof. exact (fun_ext (fun a : P => @lem8376808 A B P P2 G2 lt2 s z f H2 g a)). Qed.
Lemma lem8376810 {P : Type'} : (@all P) = (@all P).
Proof. exact (eq_refl (@all P)). Qed.
Lemma lem8376811 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) : (term2998 A B P lt2 s z P2 G2 f H2 g) = (term3096 A B P P2 G2 lt2 s z f H2 g).
Proof. exact (MK_COMB (@lem8376810 P) (@lem8376809 A B P P2 G2 lt2 s z f H2 g)). Qed.
Lemma lem8376812 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (f : A -> B) (H2 : type558 A B P) : (term3000 A B P lt2 s z P2 G2 f H2) = (term3097 A B P P2 G2 lt2 s z f H2).
Proof. exact (fun_ext (fun g : A -> B => @lem8376811 A B P P2 G2 lt2 s z f H2 g)). Qed.
Lemma lem8376813 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem8376814 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (f : A -> B) (H2 : type558 A B P) : (term3001 A B P lt2 s z P2 G2 f H2) = (term3098 A B P P2 G2 lt2 s z f H2).
Proof. exact (MK_COMB (@lem8376813 A B) (@lem8376812 A B P P2 G2 lt2 s z f H2)). Qed.
Lemma lem8376815 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (H2 : type558 A B P) : (term3002 A B P lt2 s z P2 G2 H2) = (term3099 A B P P2 G2 lt2 s z H2).
Proof. exact (fun_ext (fun f : A -> B => @lem8376814 A B P P2 G2 lt2 s z f H2)). Qed.
Lemma lem8376816 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem8376818 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (H2 : type558 A B P) : (term3003 A B P lt2 s z P2 G2 H2) = (term3100 A B P P2 G2 lt2 s z H2).
Proof. exact (MK_COMB (@lem8376816 A B) (@lem8376815 A B P P2 G2 lt2 s z H2)). Qed.
Lemma lem8376819 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (h1 : term2270 A B P lt2 s z P2 G2 H2) : term3100 A B P P2 G2 lt2 s z H2.
Proof. exact (EQ_MP (@lem8376818 A B P P2 G2 lt2 s z H2) (@lem8375201 A B P lt2 s z P2 G2 H2 h1)). Qed.
Lemma lem8376984 {A B : Type'} (lt2 : type1402 A) (x : A) (f : A -> B) (g : A -> B) (z : A) : (term2912 A B lt2 x f g z) = (term2912 A B lt2 x f g z).
Proof. exact (eq_refl (term2912 A B lt2 x f g z)). Qed.
Lemma lem8376985 {A B : Type'} (lt2 : type1402 A) (x : A) (f : A -> B) (g : A -> B) : (term2913 A B lt2 x f g) = (term2913 A B lt2 x f g).
Proof. exact (fun_ext (fun z : A => @lem8376984 A B lt2 x f g z)). Qed.
Lemma lem8376986 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem8376988 {A B : Type'} (lt2 : type1402 A) (x : A) (f : A -> B) (g : A -> B) : (term2914 A B lt2 x f g) = (term2914 A B lt2 x f g).
Proof. exact (MK_COMB (@lem8376986 A) (@lem8376985 A B lt2 x f g)). Qed.
Lemma lem8376989 {A B P : Type'} (y : P) (lt2 : type1402 A) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (_114084 : type794 A P) (s : P -> A) (x : A) (h1 : term2944 A B P y lt2 P2 G2 f H2 g _114084 s x) : term2914 A B lt2 x f g.
Proof. exact (EQ_MP (@lem8376988 A B lt2 x f g) (@lem8375503 A B P y lt2 P2 G2 f H2 g _114084 s x h1)). Qed.
Lemma lem8376993 {A B P : Type'} (f : A -> B) (H2 : type558 A B P) (g : A -> B) (_114084 : type794 A P) (s : P -> A) (x : A) (h1 : term2923 A B P f H2 g _114084 s x) : term2923 A B P f H2 g _114084 s x.
Proof. exact (h1). Qed.
Lemma lem8377215 {A B : Type'} (P1 : type551 A B) (lt2 : type1402 A) (z' : type515 A B) (G1 : type548 A B) (f : A -> B) (H1 : type549 A B) (g : A -> B) (x : A) : (term3044 A B lt2 z' P1 G1 f H1 g x) = (term3101 A B P1 lt2 z' G1 f H1 g x).
Proof. exact (@lem19490 (term3014 A B f P1 g x) (term3040 A B lt2 z' f g x) (term3005 A B G1 f H1 g x)). Qed.
Lemma lem8377216 {A B : Type'} (G1 : type548 A B) (lt2 : type1402 A) (z' : type515 A B) (f : A -> B) (H1 : type549 A B) (g : A -> B) (x : A) : (term3102 A B lt2 z' G1 f H1 g x) = (term3103 A B G1 lt2 z' f H1 g x).
Proof. exact (@lem19490 ((term2822 A B G1 f x) = (term2822 A B G1 g x)) (term3040 A B lt2 z' f g x) ((term2890 A B H1 f x) = (term2890 A B H1 g x))). Qed.
Lemma lem8377223 {A B : Type'} (lt2 : type1402 A) (z' : type515 A B) (f : A -> B) (H1 : type549 A B) (g : A -> B) (x : A) : (term3104 A B lt2 z' f H1 g x) = (term3105 A B lt2 z' f H1 g x).
Proof. exact (@lem19699 (term3036 A B lt2 z' f g x) (term3029 A B z' f g x) ((term2890 A B H1 f x) = (term2890 A B H1 g x))). Qed.
Lemma lem8377230 {A B : Type'} (lt2 : type1402 A) (z' : type515 A B) (f : A -> B) (G1 : type548 A B) (g : A -> B) (x : A) : (term3106 A B lt2 z' f G1 g x) = (term3107 A B lt2 z' f G1 g x).
Proof. exact (@lem19699 (term3036 A B lt2 z' f g x) (term3029 A B z' f g x) ((term2822 A B G1 f x) = (term2822 A B G1 g x))). Qed.
Lemma lem8377231 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8377232 {A B : Type'} (lt2 : type1402 A) (z' : type515 A B) (f : A -> B) (G1 : type548 A B) (g : A -> B) (x : A) : (term3108 A B lt2 z' f G1 g x) = (term3109 A B lt2 z' f G1 g x).
Proof. exact (MK_COMB (@lem8377231) (@lem8377230 A B lt2 z' f G1 g x)). Qed.
Lemma lem8377233 {A B : Type'} (G1 : type548 A B) (lt2 : type1402 A) (z' : type515 A B) (f : A -> B) (H1 : type549 A B) (g : A -> B) (x : A) : (term3103 A B G1 lt2 z' f H1 g x) = (term3110 A B G1 lt2 z' f H1 g x).
Proof. exact (MK_COMB (@lem8377232 A B lt2 z' f G1 g x) (@lem8377223 A B lt2 z' f H1 g x)). Qed.
Lemma lem8377234 {A B : Type'} (G1 : type548 A B) (lt2 : type1402 A) (z' : type515 A B) (f : A -> B) (H1 : type549 A B) (g : A -> B) (x : A) : (term3102 A B lt2 z' G1 f H1 g x) = (term3110 A B G1 lt2 z' f H1 g x).
Proof. exact (TRANS (@lem8377216 A B G1 lt2 z' f H1 g x) (@lem8377233 A B G1 lt2 z' f H1 g x)). Qed.
Lemma lem8377235 {A B : Type'} (lt2 : type1402 A) (z' : type515 A B) (f : A -> B) (P1 : type551 A B) (g : A -> B) (x : A) : (term3111 A B lt2 z' f P1 g x) = (term3112 A B lt2 z' f P1 g x).
Proof. exact (@lem19490 (term3011 A B f P1 g x) (term3040 A B lt2 z' f g x) (term3007 A B f P1 g x)). Qed.
Lemma lem8377242 {A B : Type'} (lt2 : type1402 A) (z' : type515 A B) (f : A -> B) (P1 : type551 A B) (g : A -> B) (x : A) : (term3113 A B lt2 z' f P1 g x) = (term3114 A B lt2 z' f P1 g x).
Proof. exact (@lem19699 (term3036 A B lt2 z' f g x) (term3029 A B z' f g x) (term3007 A B f P1 g x)). Qed.
Lemma lem8377249 {A B : Type'} (lt2 : type1402 A) (z' : type515 A B) (f : A -> B) (P1 : type551 A B) (g : A -> B) (x : A) : (term3115 A B lt2 z' f P1 g x) = (term3116 A B lt2 z' f P1 g x).
Proof. exact (@lem19699 (term3036 A B lt2 z' f g x) (term3029 A B z' f g x) (term3011 A B f P1 g x)). Qed.
Lemma lem8377250 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8377251 {A B : Type'} (lt2 : type1402 A) (z' : type515 A B) (f : A -> B) (P1 : type551 A B) (g : A -> B) (x : A) : (term3117 A B lt2 z' f P1 g x) = (term3118 A B lt2 z' f P1 g x).
Proof. exact (MK_COMB (@lem8377250) (@lem8377249 A B lt2 z' f P1 g x)). Qed.
Lemma lem8377252 {A B : Type'} (lt2 : type1402 A) (z' : type515 A B) (f : A -> B) (P1 : type551 A B) (g : A -> B) (x : A) : (term3112 A B lt2 z' f P1 g x) = (term3119 A B lt2 z' f P1 g x).
Proof. exact (MK_COMB (@lem8377251 A B lt2 z' f P1 g x) (@lem8377242 A B lt2 z' f P1 g x)). Qed.
Lemma lem8377253 {A B : Type'} (lt2 : type1402 A) (z' : type515 A B) (f : A -> B) (P1 : type551 A B) (g : A -> B) (x : A) : (term3111 A B lt2 z' f P1 g x) = (term3119 A B lt2 z' f P1 g x).
Proof. exact (TRANS (@lem8377235 A B lt2 z' f P1 g x) (@lem8377252 A B lt2 z' f P1 g x)). Qed.
Lemma lem8377254 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8377255 {A B : Type'} (lt2 : type1402 A) (z' : type515 A B) (f : A -> B) (P1 : type551 A B) (g : A -> B) (x : A) : (term3120 A B lt2 z' f P1 g x) = (term3121 A B lt2 z' f P1 g x).
Proof. exact (MK_COMB (@lem8377254) (@lem8377253 A B lt2 z' f P1 g x)). Qed.
Lemma lem8377256 {A B : Type'} (P1 : type551 A B) (G1 : type548 A B) (lt2 : type1402 A) (z' : type515 A B) (f : A -> B) (H1 : type549 A B) (g : A -> B) (x : A) : (term3101 A B P1 lt2 z' G1 f H1 g x) = (term3122 A B P1 G1 lt2 z' f H1 g x).
Proof. exact (MK_COMB (@lem8377255 A B lt2 z' f P1 g x) (@lem8377234 A B G1 lt2 z' f H1 g x)). Qed.
Lemma lem8377258 {A B : Type'} (P1 : type551 A B) (G1 : type548 A B) (lt2 : type1402 A) (z' : type515 A B) (f : A -> B) (H1 : type549 A B) (g : A -> B) (x : A) : (term3044 A B lt2 z' P1 G1 f H1 g x) = (term3122 A B P1 G1 lt2 z' f H1 g x).
Proof. exact (TRANS (@lem8377215 A B P1 lt2 z' G1 f H1 g x) (@lem8377256 A B P1 G1 lt2 z' f H1 g x)). Qed.
Lemma lem8377259 {A B : Type'} (P1 : type551 A B) (G1 : type548 A B) (lt2 : type1402 A) (z' : type515 A B) (f : A -> B) (H1 : type549 A B) (g : A -> B) : (term3046 A B lt2 z' P1 G1 f H1 g) = (term3123 A B P1 G1 lt2 z' f H1 g).
Proof. exact (fun_ext (fun x : A => @lem8377258 A B P1 G1 lt2 z' f H1 g x)). Qed.
Lemma lem8377260 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem8377261 {A B : Type'} (P1 : type551 A B) (G1 : type548 A B) (lt2 : type1402 A) (z' : type515 A B) (f : A -> B) (H1 : type549 A B) (g : A -> B) : (term3048 A B lt2 z' P1 G1 f H1 g) = (term3124 A B P1 G1 lt2 z' f H1 g).
Proof. exact (MK_COMB (@lem8377260 A) (@lem8377259 A B P1 G1 lt2 z' f H1 g)). Qed.
Lemma lem8377262 {A B : Type'} (P1 : type551 A B) (G1 : type548 A B) (lt2 : type1402 A) (z' : type515 A B) (f : A -> B) (H1 : type549 A B) : (term3050 A B lt2 z' P1 G1 f H1) = (term3125 A B P1 G1 lt2 z' f H1).
Proof. exact (fun_ext (fun g : A -> B => @lem8377261 A B P1 G1 lt2 z' f H1 g)). Qed.
Lemma lem8377263 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem8377264 {A B : Type'} (P1 : type551 A B) (G1 : type548 A B) (lt2 : type1402 A) (z' : type515 A B) (f : A -> B) (H1 : type549 A B) : (term3051 A B lt2 z' P1 G1 f H1) = (term3126 A B P1 G1 lt2 z' f H1).
Proof. exact (MK_COMB (@lem8377263 A B) (@lem8377262 A B P1 G1 lt2 z' f H1)). Qed.
Lemma lem8377265 {A B : Type'} (P1 : type551 A B) (G1 : type548 A B) (lt2 : type1402 A) (z' : type515 A B) (H1 : type549 A B) : (term3052 A B lt2 z' P1 G1 H1) = (term3127 A B P1 G1 lt2 z' H1).
Proof. exact (fun_ext (fun f : A -> B => @lem8377264 A B P1 G1 lt2 z' f H1)). Qed.
Lemma lem8377266 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem8377268 {A B : Type'} (P1 : type551 A B) (G1 : type548 A B) (lt2 : type1402 A) (z' : type515 A B) (H1 : type549 A B) : (term3053 A B lt2 z' P1 G1 H1) = (term3128 A B P1 G1 lt2 z' H1).
Proof. exact (MK_COMB (@lem8377266 A B) (@lem8377265 A B P1 G1 lt2 z' H1)). Qed.
Lemma lem8377269 {A B : Type'} (lt2 : type1402 A) (z' : type515 A B) (P1 : type551 A B) (G1 : type548 A B) (H1 : type549 A B) (h1 : term2129 A B lt2 z' P1 G1 H1) : term3128 A B P1 G1 lt2 z' H1.
Proof. exact (EQ_MP (@lem8377268 A B P1 G1 lt2 z' H1) (@lem8375491 A B lt2 z' P1 G1 H1 h1)). Qed.
Lemma lem8377348 {A B : Type'} (lt2 : type1402 A) (x : A) (f : A -> B) (g : A -> B) (z : A) : (term2912 A B lt2 x f g z) = (term2912 A B lt2 x f g z).
Proof. exact (eq_refl (term2912 A B lt2 x f g z)). Qed.
Lemma lem8377349 {A B : Type'} (lt2 : type1402 A) (x : A) (f : A -> B) (g : A -> B) : (term2913 A B lt2 x f g) = (term2913 A B lt2 x f g).
Proof. exact (fun_ext (fun z : A => @lem8377348 A B lt2 x f g z)). Qed.
Lemma lem8377350 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem8377352 {A B : Type'} (lt2 : type1402 A) (x : A) (f : A -> B) (g : A -> B) : (term2914 A B lt2 x f g) = (term2914 A B lt2 x f g).
Proof. exact (MK_COMB (@lem8377350 A) (@lem8377349 A B lt2 x f g)). Qed.
Lemma lem8377353 {A B P : Type'} (s : P -> A) (lt2 : type1402 A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (H1 : type549 A B) (g : A -> B) (x : A) (h1 : term2917 A B P s lt2 P1 G1 f H1 g x) : term2914 A B lt2 x f g.
Proof. exact (EQ_MP (@lem8377352 A B lt2 x f g) (@lem8375517 A B P s lt2 P1 G1 f H1 g x h1)). Qed.
Lemma lem8377583 {A B : Type'} (P1 : type551 A B) (lt2 : type1402 A) (z' : type515 A B) (G1 : type548 A B) (f : A -> B) (H1 : type549 A B) (g : A -> B) (x : A) : (term3044 A B lt2 z' P1 G1 f H1 g x) = (term3101 A B P1 lt2 z' G1 f H1 g x).
Proof. exact (@lem19490 (term3014 A B f P1 g x) (term3040 A B lt2 z' f g x) (term3005 A B G1 f H1 g x)). Qed.
Lemma lem8377584 {A B : Type'} (G1 : type548 A B) (lt2 : type1402 A) (z' : type515 A B) (f : A -> B) (H1 : type549 A B) (g : A -> B) (x : A) : (term3102 A B lt2 z' G1 f H1 g x) = (term3103 A B G1 lt2 z' f H1 g x).
Proof. exact (@lem19490 ((term2822 A B G1 f x) = (term2822 A B G1 g x)) (term3040 A B lt2 z' f g x) ((term2890 A B H1 f x) = (term2890 A B H1 g x))). Qed.
Lemma lem8377591 {A B : Type'} (lt2 : type1402 A) (z' : type515 A B) (f : A -> B) (H1 : type549 A B) (g : A -> B) (x : A) : (term3104 A B lt2 z' f H1 g x) = (term3105 A B lt2 z' f H1 g x).
Proof. exact (@lem19699 (term3036 A B lt2 z' f g x) (term3029 A B z' f g x) ((term2890 A B H1 f x) = (term2890 A B H1 g x))). Qed.
Lemma lem8377598 {A B : Type'} (lt2 : type1402 A) (z' : type515 A B) (f : A -> B) (G1 : type548 A B) (g : A -> B) (x : A) : (term3106 A B lt2 z' f G1 g x) = (term3107 A B lt2 z' f G1 g x).
Proof. exact (@lem19699 (term3036 A B lt2 z' f g x) (term3029 A B z' f g x) ((term2822 A B G1 f x) = (term2822 A B G1 g x))). Qed.
Lemma lem8377599 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8377600 {A B : Type'} (lt2 : type1402 A) (z' : type515 A B) (f : A -> B) (G1 : type548 A B) (g : A -> B) (x : A) : (term3108 A B lt2 z' f G1 g x) = (term3109 A B lt2 z' f G1 g x).
Proof. exact (MK_COMB (@lem8377599) (@lem8377598 A B lt2 z' f G1 g x)). Qed.
Lemma lem8377601 {A B : Type'} (G1 : type548 A B) (lt2 : type1402 A) (z' : type515 A B) (f : A -> B) (H1 : type549 A B) (g : A -> B) (x : A) : (term3103 A B G1 lt2 z' f H1 g x) = (term3110 A B G1 lt2 z' f H1 g x).
Proof. exact (MK_COMB (@lem8377600 A B lt2 z' f G1 g x) (@lem8377591 A B lt2 z' f H1 g x)). Qed.
Lemma lem8377602 {A B : Type'} (G1 : type548 A B) (lt2 : type1402 A) (z' : type515 A B) (f : A -> B) (H1 : type549 A B) (g : A -> B) (x : A) : (term3102 A B lt2 z' G1 f H1 g x) = (term3110 A B G1 lt2 z' f H1 g x).
Proof. exact (TRANS (@lem8377584 A B G1 lt2 z' f H1 g x) (@lem8377601 A B G1 lt2 z' f H1 g x)). Qed.
Lemma lem8377603 {A B : Type'} (lt2 : type1402 A) (z' : type515 A B) (f : A -> B) (P1 : type551 A B) (g : A -> B) (x : A) : (term3111 A B lt2 z' f P1 g x) = (term3112 A B lt2 z' f P1 g x).
Proof. exact (@lem19490 (term3011 A B f P1 g x) (term3040 A B lt2 z' f g x) (term3007 A B f P1 g x)). Qed.
Lemma lem8377610 {A B : Type'} (lt2 : type1402 A) (z' : type515 A B) (f : A -> B) (P1 : type551 A B) (g : A -> B) (x : A) : (term3113 A B lt2 z' f P1 g x) = (term3114 A B lt2 z' f P1 g x).
Proof. exact (@lem19699 (term3036 A B lt2 z' f g x) (term3029 A B z' f g x) (term3007 A B f P1 g x)). Qed.
Lemma lem8377617 {A B : Type'} (lt2 : type1402 A) (z' : type515 A B) (f : A -> B) (P1 : type551 A B) (g : A -> B) (x : A) : (term3115 A B lt2 z' f P1 g x) = (term3116 A B lt2 z' f P1 g x).
Proof. exact (@lem19699 (term3036 A B lt2 z' f g x) (term3029 A B z' f g x) (term3011 A B f P1 g x)). Qed.
Lemma lem8377618 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8377619 {A B : Type'} (lt2 : type1402 A) (z' : type515 A B) (f : A -> B) (P1 : type551 A B) (g : A -> B) (x : A) : (term3117 A B lt2 z' f P1 g x) = (term3118 A B lt2 z' f P1 g x).
Proof. exact (MK_COMB (@lem8377618) (@lem8377617 A B lt2 z' f P1 g x)). Qed.
Lemma lem8377620 {A B : Type'} (lt2 : type1402 A) (z' : type515 A B) (f : A -> B) (P1 : type551 A B) (g : A -> B) (x : A) : (term3112 A B lt2 z' f P1 g x) = (term3119 A B lt2 z' f P1 g x).
Proof. exact (MK_COMB (@lem8377619 A B lt2 z' f P1 g x) (@lem8377610 A B lt2 z' f P1 g x)). Qed.
Lemma lem8377621 {A B : Type'} (lt2 : type1402 A) (z' : type515 A B) (f : A -> B) (P1 : type551 A B) (g : A -> B) (x : A) : (term3111 A B lt2 z' f P1 g x) = (term3119 A B lt2 z' f P1 g x).
Proof. exact (TRANS (@lem8377603 A B lt2 z' f P1 g x) (@lem8377620 A B lt2 z' f P1 g x)). Qed.
Lemma lem8377622 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8377623 {A B : Type'} (lt2 : type1402 A) (z' : type515 A B) (f : A -> B) (P1 : type551 A B) (g : A -> B) (x : A) : (term3120 A B lt2 z' f P1 g x) = (term3121 A B lt2 z' f P1 g x).
Proof. exact (MK_COMB (@lem8377622) (@lem8377621 A B lt2 z' f P1 g x)). Qed.
Lemma lem8377624 {A B : Type'} (P1 : type551 A B) (G1 : type548 A B) (lt2 : type1402 A) (z' : type515 A B) (f : A -> B) (H1 : type549 A B) (g : A -> B) (x : A) : (term3101 A B P1 lt2 z' G1 f H1 g x) = (term3122 A B P1 G1 lt2 z' f H1 g x).
Proof. exact (MK_COMB (@lem8377623 A B lt2 z' f P1 g x) (@lem8377602 A B G1 lt2 z' f H1 g x)). Qed.
Lemma lem8377626 {A B : Type'} (P1 : type551 A B) (G1 : type548 A B) (lt2 : type1402 A) (z' : type515 A B) (f : A -> B) (H1 : type549 A B) (g : A -> B) (x : A) : (term3044 A B lt2 z' P1 G1 f H1 g x) = (term3122 A B P1 G1 lt2 z' f H1 g x).
Proof. exact (TRANS (@lem8377583 A B P1 lt2 z' G1 f H1 g x) (@lem8377624 A B P1 G1 lt2 z' f H1 g x)). Qed.
Lemma lem8377627 {A B : Type'} (P1 : type551 A B) (G1 : type548 A B) (lt2 : type1402 A) (z' : type515 A B) (f : A -> B) (H1 : type549 A B) (g : A -> B) : (term3046 A B lt2 z' P1 G1 f H1 g) = (term3123 A B P1 G1 lt2 z' f H1 g).
Proof. exact (fun_ext (fun x : A => @lem8377626 A B P1 G1 lt2 z' f H1 g x)). Qed.
Lemma lem8377628 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem8377629 {A B : Type'} (P1 : type551 A B) (G1 : type548 A B) (lt2 : type1402 A) (z' : type515 A B) (f : A -> B) (H1 : type549 A B) (g : A -> B) : (term3048 A B lt2 z' P1 G1 f H1 g) = (term3124 A B P1 G1 lt2 z' f H1 g).
Proof. exact (MK_COMB (@lem8377628 A) (@lem8377627 A B P1 G1 lt2 z' f H1 g)). Qed.
Lemma lem8377630 {A B : Type'} (P1 : type551 A B) (G1 : type548 A B) (lt2 : type1402 A) (z' : type515 A B) (f : A -> B) (H1 : type549 A B) : (term3050 A B lt2 z' P1 G1 f H1) = (term3125 A B P1 G1 lt2 z' f H1).
Proof. exact (fun_ext (fun g : A -> B => @lem8377629 A B P1 G1 lt2 z' f H1 g)). Qed.
Lemma lem8377631 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem8377632 {A B : Type'} (P1 : type551 A B) (G1 : type548 A B) (lt2 : type1402 A) (z' : type515 A B) (f : A -> B) (H1 : type549 A B) : (term3051 A B lt2 z' P1 G1 f H1) = (term3126 A B P1 G1 lt2 z' f H1).
Proof. exact (MK_COMB (@lem8377631 A B) (@lem8377630 A B P1 G1 lt2 z' f H1)). Qed.
Lemma lem8377633 {A B : Type'} (P1 : type551 A B) (G1 : type548 A B) (lt2 : type1402 A) (z' : type515 A B) (H1 : type549 A B) : (term3052 A B lt2 z' P1 G1 H1) = (term3127 A B P1 G1 lt2 z' H1).
Proof. exact (fun_ext (fun f : A -> B => @lem8377632 A B P1 G1 lt2 z' f H1)). Qed.
Lemma lem8377634 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem8377636 {A B : Type'} (P1 : type551 A B) (G1 : type548 A B) (lt2 : type1402 A) (z' : type515 A B) (H1 : type549 A B) : (term3053 A B lt2 z' P1 G1 H1) = (term3128 A B P1 G1 lt2 z' H1).
Proof. exact (MK_COMB (@lem8377634 A B) (@lem8377633 A B P1 G1 lt2 z' H1)). Qed.
Lemma lem8377637 {A B : Type'} (lt2 : type1402 A) (z' : type515 A B) (P1 : type551 A B) (G1 : type548 A B) (H1 : type549 A B) (h1 : term2129 A B lt2 z' P1 G1 H1) : term3128 A B P1 G1 lt2 z' H1.
Proof. exact (EQ_MP (@lem8377636 A B P1 G1 lt2 z' H1) (@lem8375491 A B lt2 z' P1 G1 H1 h1)). Qed.
Lemma lem8377716 {A B : Type'} (lt2 : type1402 A) (x : A) (f : A -> B) (g : A -> B) (z : A) : (term2912 A B lt2 x f g z) = (term2912 A B lt2 x f g z).
Proof. exact (eq_refl (term2912 A B lt2 x f g z)). Qed.
Lemma lem8377717 {A B : Type'} (lt2 : type1402 A) (x : A) (f : A -> B) (g : A -> B) : (term2913 A B lt2 x f g) = (term2913 A B lt2 x f g).
Proof. exact (fun_ext (fun z : A => @lem8377716 A B lt2 x f g z)). Qed.
Lemma lem8377718 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem8377720 {A B : Type'} (lt2 : type1402 A) (x : A) (f : A -> B) (g : A -> B) : (term2914 A B lt2 x f g) = (term2914 A B lt2 x f g).
Proof. exact (MK_COMB (@lem8377718 A) (@lem8377717 A B lt2 x f g)). Qed.
Lemma lem8377721 {A B P : Type'} (s : P -> A) (lt2 : type1402 A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (H1 : type549 A B) (g : A -> B) (x : A) (h1 : term2917 A B P s lt2 P1 G1 f H1 g x) : term2914 A B lt2 x f g.
Proof. exact (EQ_MP (@lem8377720 A B lt2 x f g) (@lem8375517 A B P s lt2 P1 G1 f H1 g x h1)). Qed.
Lemma lem8377951 {A B : Type'} (P1 : type551 A B) (lt2 : type1402 A) (z' : type515 A B) (G1 : type548 A B) (f : A -> B) (H1 : type549 A B) (g : A -> B) (x : A) : (term3044 A B lt2 z' P1 G1 f H1 g x) = (term3101 A B P1 lt2 z' G1 f H1 g x).
Proof. exact (@lem19490 (term3014 A B f P1 g x) (term3040 A B lt2 z' f g x) (term3005 A B G1 f H1 g x)). Qed.
Lemma lem8377952 {A B : Type'} (G1 : type548 A B) (lt2 : type1402 A) (z' : type515 A B) (f : A -> B) (H1 : type549 A B) (g : A -> B) (x : A) : (term3102 A B lt2 z' G1 f H1 g x) = (term3103 A B G1 lt2 z' f H1 g x).
Proof. exact (@lem19490 ((term2822 A B G1 f x) = (term2822 A B G1 g x)) (term3040 A B lt2 z' f g x) ((term2890 A B H1 f x) = (term2890 A B H1 g x))). Qed.
Lemma lem8377959 {A B : Type'} (lt2 : type1402 A) (z' : type515 A B) (f : A -> B) (H1 : type549 A B) (g : A -> B) (x : A) : (term3104 A B lt2 z' f H1 g x) = (term3105 A B lt2 z' f H1 g x).
Proof. exact (@lem19699 (term3036 A B lt2 z' f g x) (term3029 A B z' f g x) ((term2890 A B H1 f x) = (term2890 A B H1 g x))). Qed.
Lemma lem8377966 {A B : Type'} (lt2 : type1402 A) (z' : type515 A B) (f : A -> B) (G1 : type548 A B) (g : A -> B) (x : A) : (term3106 A B lt2 z' f G1 g x) = (term3107 A B lt2 z' f G1 g x).
Proof. exact (@lem19699 (term3036 A B lt2 z' f g x) (term3029 A B z' f g x) ((term2822 A B G1 f x) = (term2822 A B G1 g x))). Qed.
Lemma lem8377967 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8377968 {A B : Type'} (lt2 : type1402 A) (z' : type515 A B) (f : A -> B) (G1 : type548 A B) (g : A -> B) (x : A) : (term3108 A B lt2 z' f G1 g x) = (term3109 A B lt2 z' f G1 g x).
Proof. exact (MK_COMB (@lem8377967) (@lem8377966 A B lt2 z' f G1 g x)). Qed.
Lemma lem8377969 {A B : Type'} (G1 : type548 A B) (lt2 : type1402 A) (z' : type515 A B) (f : A -> B) (H1 : type549 A B) (g : A -> B) (x : A) : (term3103 A B G1 lt2 z' f H1 g x) = (term3110 A B G1 lt2 z' f H1 g x).
Proof. exact (MK_COMB (@lem8377968 A B lt2 z' f G1 g x) (@lem8377959 A B lt2 z' f H1 g x)). Qed.
Lemma lem8377970 {A B : Type'} (G1 : type548 A B) (lt2 : type1402 A) (z' : type515 A B) (f : A -> B) (H1 : type549 A B) (g : A -> B) (x : A) : (term3102 A B lt2 z' G1 f H1 g x) = (term3110 A B G1 lt2 z' f H1 g x).
Proof. exact (TRANS (@lem8377952 A B G1 lt2 z' f H1 g x) (@lem8377969 A B G1 lt2 z' f H1 g x)). Qed.
Lemma lem8377971 {A B : Type'} (lt2 : type1402 A) (z' : type515 A B) (f : A -> B) (P1 : type551 A B) (g : A -> B) (x : A) : (term3111 A B lt2 z' f P1 g x) = (term3112 A B lt2 z' f P1 g x).
Proof. exact (@lem19490 (term3011 A B f P1 g x) (term3040 A B lt2 z' f g x) (term3007 A B f P1 g x)). Qed.
Lemma lem8377978 {A B : Type'} (lt2 : type1402 A) (z' : type515 A B) (f : A -> B) (P1 : type551 A B) (g : A -> B) (x : A) : (term3113 A B lt2 z' f P1 g x) = (term3114 A B lt2 z' f P1 g x).
Proof. exact (@lem19699 (term3036 A B lt2 z' f g x) (term3029 A B z' f g x) (term3007 A B f P1 g x)). Qed.
Lemma lem8377985 {A B : Type'} (lt2 : type1402 A) (z' : type515 A B) (f : A -> B) (P1 : type551 A B) (g : A -> B) (x : A) : (term3115 A B lt2 z' f P1 g x) = (term3116 A B lt2 z' f P1 g x).
Proof. exact (@lem19699 (term3036 A B lt2 z' f g x) (term3029 A B z' f g x) (term3011 A B f P1 g x)). Qed.
Lemma lem8377986 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8377987 {A B : Type'} (lt2 : type1402 A) (z' : type515 A B) (f : A -> B) (P1 : type551 A B) (g : A -> B) (x : A) : (term3117 A B lt2 z' f P1 g x) = (term3118 A B lt2 z' f P1 g x).
Proof. exact (MK_COMB (@lem8377986) (@lem8377985 A B lt2 z' f P1 g x)). Qed.
Lemma lem8377988 {A B : Type'} (lt2 : type1402 A) (z' : type515 A B) (f : A -> B) (P1 : type551 A B) (g : A -> B) (x : A) : (term3112 A B lt2 z' f P1 g x) = (term3119 A B lt2 z' f P1 g x).
Proof. exact (MK_COMB (@lem8377987 A B lt2 z' f P1 g x) (@lem8377978 A B lt2 z' f P1 g x)). Qed.
Lemma lem8377989 {A B : Type'} (lt2 : type1402 A) (z' : type515 A B) (f : A -> B) (P1 : type551 A B) (g : A -> B) (x : A) : (term3111 A B lt2 z' f P1 g x) = (term3119 A B lt2 z' f P1 g x).
Proof. exact (TRANS (@lem8377971 A B lt2 z' f P1 g x) (@lem8377988 A B lt2 z' f P1 g x)). Qed.
Lemma lem8377990 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8377991 {A B : Type'} (lt2 : type1402 A) (z' : type515 A B) (f : A -> B) (P1 : type551 A B) (g : A -> B) (x : A) : (term3120 A B lt2 z' f P1 g x) = (term3121 A B lt2 z' f P1 g x).
Proof. exact (MK_COMB (@lem8377990) (@lem8377989 A B lt2 z' f P1 g x)). Qed.
Lemma lem8377992 {A B : Type'} (P1 : type551 A B) (G1 : type548 A B) (lt2 : type1402 A) (z' : type515 A B) (f : A -> B) (H1 : type549 A B) (g : A -> B) (x : A) : (term3101 A B P1 lt2 z' G1 f H1 g x) = (term3122 A B P1 G1 lt2 z' f H1 g x).
Proof. exact (MK_COMB (@lem8377991 A B lt2 z' f P1 g x) (@lem8377970 A B G1 lt2 z' f H1 g x)). Qed.
Lemma lem8377994 {A B : Type'} (P1 : type551 A B) (G1 : type548 A B) (lt2 : type1402 A) (z' : type515 A B) (f : A -> B) (H1 : type549 A B) (g : A -> B) (x : A) : (term3044 A B lt2 z' P1 G1 f H1 g x) = (term3122 A B P1 G1 lt2 z' f H1 g x).
Proof. exact (TRANS (@lem8377951 A B P1 lt2 z' G1 f H1 g x) (@lem8377992 A B P1 G1 lt2 z' f H1 g x)). Qed.
Lemma lem8377995 {A B : Type'} (P1 : type551 A B) (G1 : type548 A B) (lt2 : type1402 A) (z' : type515 A B) (f : A -> B) (H1 : type549 A B) (g : A -> B) : (term3046 A B lt2 z' P1 G1 f H1 g) = (term3123 A B P1 G1 lt2 z' f H1 g).
Proof. exact (fun_ext (fun x : A => @lem8377994 A B P1 G1 lt2 z' f H1 g x)). Qed.
Lemma lem8377996 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem8377997 {A B : Type'} (P1 : type551 A B) (G1 : type548 A B) (lt2 : type1402 A) (z' : type515 A B) (f : A -> B) (H1 : type549 A B) (g : A -> B) : (term3048 A B lt2 z' P1 G1 f H1 g) = (term3124 A B P1 G1 lt2 z' f H1 g).
Proof. exact (MK_COMB (@lem8377996 A) (@lem8377995 A B P1 G1 lt2 z' f H1 g)). Qed.
Lemma lem8377998 {A B : Type'} (P1 : type551 A B) (G1 : type548 A B) (lt2 : type1402 A) (z' : type515 A B) (f : A -> B) (H1 : type549 A B) : (term3050 A B lt2 z' P1 G1 f H1) = (term3125 A B P1 G1 lt2 z' f H1).
Proof. exact (fun_ext (fun g : A -> B => @lem8377997 A B P1 G1 lt2 z' f H1 g)). Qed.
Lemma lem8377999 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem8378000 {A B : Type'} (P1 : type551 A B) (G1 : type548 A B) (lt2 : type1402 A) (z' : type515 A B) (f : A -> B) (H1 : type549 A B) : (term3051 A B lt2 z' P1 G1 f H1) = (term3126 A B P1 G1 lt2 z' f H1).
Proof. exact (MK_COMB (@lem8377999 A B) (@lem8377998 A B P1 G1 lt2 z' f H1)). Qed.
Lemma lem8378001 {A B : Type'} (P1 : type551 A B) (G1 : type548 A B) (lt2 : type1402 A) (z' : type515 A B) (H1 : type549 A B) : (term3052 A B lt2 z' P1 G1 H1) = (term3127 A B P1 G1 lt2 z' H1).
Proof. exact (fun_ext (fun f : A -> B => @lem8378000 A B P1 G1 lt2 z' f H1)). Qed.
Lemma lem8378002 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem8378004 {A B : Type'} (P1 : type551 A B) (G1 : type548 A B) (lt2 : type1402 A) (z' : type515 A B) (H1 : type549 A B) : (term3053 A B lt2 z' P1 G1 H1) = (term3128 A B P1 G1 lt2 z' H1).
Proof. exact (MK_COMB (@lem8378002 A B) (@lem8378001 A B P1 G1 lt2 z' H1)). Qed.
Lemma lem8378005 {A B : Type'} (lt2 : type1402 A) (z' : type515 A B) (P1 : type551 A B) (G1 : type548 A B) (H1 : type549 A B) (h1 : term2129 A B lt2 z' P1 G1 H1) : term3128 A B P1 G1 lt2 z' H1.
Proof. exact (EQ_MP (@lem8378004 A B P1 G1 lt2 z' H1) (@lem8375491 A B lt2 z' P1 G1 H1 h1)). Qed.
Lemma lem8378084 {A B : Type'} (lt2 : type1402 A) (x : A) (f : A -> B) (g : A -> B) (z : A) : (term2912 A B lt2 x f g z) = (term2912 A B lt2 x f g z).
Proof. exact (eq_refl (term2912 A B lt2 x f g z)). Qed.
Lemma lem8378085 {A B : Type'} (lt2 : type1402 A) (x : A) (f : A -> B) (g : A -> B) : (term2913 A B lt2 x f g) = (term2913 A B lt2 x f g).
Proof. exact (fun_ext (fun z : A => @lem8378084 A B lt2 x f g z)). Qed.
Lemma lem8378086 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem8378088 {A B : Type'} (lt2 : type1402 A) (x : A) (f : A -> B) (g : A -> B) : (term2914 A B lt2 x f g) = (term2914 A B lt2 x f g).
Proof. exact (MK_COMB (@lem8378086 A) (@lem8378085 A B lt2 x f g)). Qed.
Lemma lem8378089 {A B P : Type'} (s : P -> A) (lt2 : type1402 A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (H1 : type549 A B) (g : A -> B) (x : A) (h1 : term2917 A B P s lt2 P1 G1 f H1 g x) : term2914 A B lt2 x f g.
Proof. exact (EQ_MP (@lem8378088 A B lt2 x f g) (@lem8375517 A B P s lt2 P1 G1 f H1 g x h1)). Qed.
Lemma lem8378093 {A B : Type'} (f : A -> B) (G1 : type548 A B) (g : A -> B) (x : A) (h1 : term2896 A B f G1 g x) : term2896 A B f G1 g x.
Proof. exact (h1). Qed.
Lemma lem8378315 {A B : Type'} (P1 : type551 A B) (lt2 : type1402 A) (z' : type515 A B) (G1 : type548 A B) (f : A -> B) (H1 : type549 A B) (g : A -> B) (x : A) : (term3044 A B lt2 z' P1 G1 f H1 g x) = (term3101 A B P1 lt2 z' G1 f H1 g x).
Proof. exact (@lem19490 (term3014 A B f P1 g x) (term3040 A B lt2 z' f g x) (term3005 A B G1 f H1 g x)). Qed.
Lemma lem8378316 {A B : Type'} (G1 : type548 A B) (lt2 : type1402 A) (z' : type515 A B) (f : A -> B) (H1 : type549 A B) (g : A -> B) (x : A) : (term3102 A B lt2 z' G1 f H1 g x) = (term3103 A B G1 lt2 z' f H1 g x).
Proof. exact (@lem19490 ((term2822 A B G1 f x) = (term2822 A B G1 g x)) (term3040 A B lt2 z' f g x) ((term2890 A B H1 f x) = (term2890 A B H1 g x))). Qed.
Lemma lem8378323 {A B : Type'} (lt2 : type1402 A) (z' : type515 A B) (f : A -> B) (H1 : type549 A B) (g : A -> B) (x : A) : (term3104 A B lt2 z' f H1 g x) = (term3105 A B lt2 z' f H1 g x).
Proof. exact (@lem19699 (term3036 A B lt2 z' f g x) (term3029 A B z' f g x) ((term2890 A B H1 f x) = (term2890 A B H1 g x))). Qed.
Lemma lem8378330 {A B : Type'} (lt2 : type1402 A) (z' : type515 A B) (f : A -> B) (G1 : type548 A B) (g : A -> B) (x : A) : (term3106 A B lt2 z' f G1 g x) = (term3107 A B lt2 z' f G1 g x).
Proof. exact (@lem19699 (term3036 A B lt2 z' f g x) (term3029 A B z' f g x) ((term2822 A B G1 f x) = (term2822 A B G1 g x))). Qed.
Lemma lem8378331 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8378332 {A B : Type'} (lt2 : type1402 A) (z' : type515 A B) (f : A -> B) (G1 : type548 A B) (g : A -> B) (x : A) : (term3108 A B lt2 z' f G1 g x) = (term3109 A B lt2 z' f G1 g x).
Proof. exact (MK_COMB (@lem8378331) (@lem8378330 A B lt2 z' f G1 g x)). Qed.
Lemma lem8378333 {A B : Type'} (G1 : type548 A B) (lt2 : type1402 A) (z' : type515 A B) (f : A -> B) (H1 : type549 A B) (g : A -> B) (x : A) : (term3103 A B G1 lt2 z' f H1 g x) = (term3110 A B G1 lt2 z' f H1 g x).
Proof. exact (MK_COMB (@lem8378332 A B lt2 z' f G1 g x) (@lem8378323 A B lt2 z' f H1 g x)). Qed.
Lemma lem8378334 {A B : Type'} (G1 : type548 A B) (lt2 : type1402 A) (z' : type515 A B) (f : A -> B) (H1 : type549 A B) (g : A -> B) (x : A) : (term3102 A B lt2 z' G1 f H1 g x) = (term3110 A B G1 lt2 z' f H1 g x).
Proof. exact (TRANS (@lem8378316 A B G1 lt2 z' f H1 g x) (@lem8378333 A B G1 lt2 z' f H1 g x)). Qed.
Lemma lem8378335 {A B : Type'} (lt2 : type1402 A) (z' : type515 A B) (f : A -> B) (P1 : type551 A B) (g : A -> B) (x : A) : (term3111 A B lt2 z' f P1 g x) = (term3112 A B lt2 z' f P1 g x).
Proof. exact (@lem19490 (term3011 A B f P1 g x) (term3040 A B lt2 z' f g x) (term3007 A B f P1 g x)). Qed.
Lemma lem8378342 {A B : Type'} (lt2 : type1402 A) (z' : type515 A B) (f : A -> B) (P1 : type551 A B) (g : A -> B) (x : A) : (term3113 A B lt2 z' f P1 g x) = (term3114 A B lt2 z' f P1 g x).
Proof. exact (@lem19699 (term3036 A B lt2 z' f g x) (term3029 A B z' f g x) (term3007 A B f P1 g x)). Qed.
Lemma lem8378349 {A B : Type'} (lt2 : type1402 A) (z' : type515 A B) (f : A -> B) (P1 : type551 A B) (g : A -> B) (x : A) : (term3115 A B lt2 z' f P1 g x) = (term3116 A B lt2 z' f P1 g x).
Proof. exact (@lem19699 (term3036 A B lt2 z' f g x) (term3029 A B z' f g x) (term3011 A B f P1 g x)). Qed.
Lemma lem8378350 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8378351 {A B : Type'} (lt2 : type1402 A) (z' : type515 A B) (f : A -> B) (P1 : type551 A B) (g : A -> B) (x : A) : (term3117 A B lt2 z' f P1 g x) = (term3118 A B lt2 z' f P1 g x).
Proof. exact (MK_COMB (@lem8378350) (@lem8378349 A B lt2 z' f P1 g x)). Qed.
Lemma lem8378352 {A B : Type'} (lt2 : type1402 A) (z' : type515 A B) (f : A -> B) (P1 : type551 A B) (g : A -> B) (x : A) : (term3112 A B lt2 z' f P1 g x) = (term3119 A B lt2 z' f P1 g x).
Proof. exact (MK_COMB (@lem8378351 A B lt2 z' f P1 g x) (@lem8378342 A B lt2 z' f P1 g x)). Qed.
Lemma lem8378353 {A B : Type'} (lt2 : type1402 A) (z' : type515 A B) (f : A -> B) (P1 : type551 A B) (g : A -> B) (x : A) : (term3111 A B lt2 z' f P1 g x) = (term3119 A B lt2 z' f P1 g x).
Proof. exact (TRANS (@lem8378335 A B lt2 z' f P1 g x) (@lem8378352 A B lt2 z' f P1 g x)). Qed.
Lemma lem8378354 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8378355 {A B : Type'} (lt2 : type1402 A) (z' : type515 A B) (f : A -> B) (P1 : type551 A B) (g : A -> B) (x : A) : (term3120 A B lt2 z' f P1 g x) = (term3121 A B lt2 z' f P1 g x).
Proof. exact (MK_COMB (@lem8378354) (@lem8378353 A B lt2 z' f P1 g x)). Qed.
Lemma lem8378356 {A B : Type'} (P1 : type551 A B) (G1 : type548 A B) (lt2 : type1402 A) (z' : type515 A B) (f : A -> B) (H1 : type549 A B) (g : A -> B) (x : A) : (term3101 A B P1 lt2 z' G1 f H1 g x) = (term3122 A B P1 G1 lt2 z' f H1 g x).
Proof. exact (MK_COMB (@lem8378355 A B lt2 z' f P1 g x) (@lem8378334 A B G1 lt2 z' f H1 g x)). Qed.
Lemma lem8378358 {A B : Type'} (P1 : type551 A B) (G1 : type548 A B) (lt2 : type1402 A) (z' : type515 A B) (f : A -> B) (H1 : type549 A B) (g : A -> B) (x : A) : (term3044 A B lt2 z' P1 G1 f H1 g x) = (term3122 A B P1 G1 lt2 z' f H1 g x).
Proof. exact (TRANS (@lem8378315 A B P1 lt2 z' G1 f H1 g x) (@lem8378356 A B P1 G1 lt2 z' f H1 g x)). Qed.
Lemma lem8378359 {A B : Type'} (P1 : type551 A B) (G1 : type548 A B) (lt2 : type1402 A) (z' : type515 A B) (f : A -> B) (H1 : type549 A B) (g : A -> B) : (term3046 A B lt2 z' P1 G1 f H1 g) = (term3123 A B P1 G1 lt2 z' f H1 g).
Proof. exact (fun_ext (fun x : A => @lem8378358 A B P1 G1 lt2 z' f H1 g x)). Qed.
Lemma lem8378360 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem8378361 {A B : Type'} (P1 : type551 A B) (G1 : type548 A B) (lt2 : type1402 A) (z' : type515 A B) (f : A -> B) (H1 : type549 A B) (g : A -> B) : (term3048 A B lt2 z' P1 G1 f H1 g) = (term3124 A B P1 G1 lt2 z' f H1 g).
Proof. exact (MK_COMB (@lem8378360 A) (@lem8378359 A B P1 G1 lt2 z' f H1 g)). Qed.
Lemma lem8378362 {A B : Type'} (P1 : type551 A B) (G1 : type548 A B) (lt2 : type1402 A) (z' : type515 A B) (f : A -> B) (H1 : type549 A B) : (term3050 A B lt2 z' P1 G1 f H1) = (term3125 A B P1 G1 lt2 z' f H1).
Proof. exact (fun_ext (fun g : A -> B => @lem8378361 A B P1 G1 lt2 z' f H1 g)). Qed.
Lemma lem8378363 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem8378364 {A B : Type'} (P1 : type551 A B) (G1 : type548 A B) (lt2 : type1402 A) (z' : type515 A B) (f : A -> B) (H1 : type549 A B) : (term3051 A B lt2 z' P1 G1 f H1) = (term3126 A B P1 G1 lt2 z' f H1).
Proof. exact (MK_COMB (@lem8378363 A B) (@lem8378362 A B P1 G1 lt2 z' f H1)). Qed.
Lemma lem8378365 {A B : Type'} (P1 : type551 A B) (G1 : type548 A B) (lt2 : type1402 A) (z' : type515 A B) (H1 : type549 A B) : (term3052 A B lt2 z' P1 G1 H1) = (term3127 A B P1 G1 lt2 z' H1).
Proof. exact (fun_ext (fun f : A -> B => @lem8378364 A B P1 G1 lt2 z' f H1)). Qed.
Lemma lem8378366 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem8378368 {A B : Type'} (P1 : type551 A B) (G1 : type548 A B) (lt2 : type1402 A) (z' : type515 A B) (H1 : type549 A B) : (term3053 A B lt2 z' P1 G1 H1) = (term3128 A B P1 G1 lt2 z' H1).
Proof. exact (MK_COMB (@lem8378366 A B) (@lem8378365 A B P1 G1 lt2 z' H1)). Qed.
Lemma lem8378369 {A B : Type'} (lt2 : type1402 A) (z' : type515 A B) (P1 : type551 A B) (G1 : type548 A B) (H1 : type549 A B) (h1 : term2129 A B lt2 z' P1 G1 H1) : term3128 A B P1 G1 lt2 z' H1.
Proof. exact (EQ_MP (@lem8378368 A B P1 G1 lt2 z' H1) (@lem8375491 A B lt2 z' P1 G1 H1 h1)). Qed.
Lemma lem8378448 {A B : Type'} (lt2 : type1402 A) (x : A) (f : A -> B) (g : A -> B) (z : A) : (term2912 A B lt2 x f g z) = (term2912 A B lt2 x f g z).
Proof. exact (eq_refl (term2912 A B lt2 x f g z)). Qed.
Lemma lem8378449 {A B : Type'} (lt2 : type1402 A) (x : A) (f : A -> B) (g : A -> B) : (term2913 A B lt2 x f g) = (term2913 A B lt2 x f g).
Proof. exact (fun_ext (fun z : A => @lem8378448 A B lt2 x f g z)). Qed.
Lemma lem8378450 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem8378452 {A B : Type'} (lt2 : type1402 A) (x : A) (f : A -> B) (g : A -> B) : (term2914 A B lt2 x f g) = (term2914 A B lt2 x f g).
Proof. exact (MK_COMB (@lem8378450 A) (@lem8378449 A B lt2 x f g)). Qed.
Lemma lem8378453 {A B P : Type'} (s : P -> A) (lt2 : type1402 A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (H1 : type549 A B) (g : A -> B) (x : A) (h1 : term2917 A B P s lt2 P1 G1 f H1 g x) : term2914 A B lt2 x f g.
Proof. exact (EQ_MP (@lem8378452 A B lt2 x f g) (@lem8375517 A B P s lt2 P1 G1 f H1 g x h1)). Qed.
Lemma lem8378457 {A B : Type'} (f : A -> B) (H1 : type549 A B) (g : A -> B) (x : A) (h1 : term2893 A B f H1 g x) : term2893 A B f H1 g x.
Proof. exact (h1). Qed.
Lemma lem8378459 {A : Type'} (P : A -> Prop) (Q : Prop) : (term2001 A P Q) = (term2000 A P Q).
Proof. exact (EQ_MP (@lem19013 A P Q) (@lem19012 A P Q)). Qed.
Lemma lem8378460 {P : Type'} (P' : P -> Prop) (Q : Prop) : (term2001 P P' Q) = (term2000 P P' Q).
Proof. exact (@lem8378459 P P' Q). Qed.
Lemma lem8378461 {A P : Type'} (_114084 : type794 A P) (s : P -> A) (x : A) : (term3054 A P _114084 s x) = (term3055 A P _114084 s x).
Proof. exact (@lem8378460 P (term2814 A P s x) ((term2811 A P _114084 s x) = x)). Qed.
Lemma lem8378462 {A P : Type'} (s : P -> A) (x : P) (x' : A) : (term3056 A P s x' x) = (term2813 A P s x x').
Proof. exact (eq_refl (term3056 A P s x' x)). Qed.
Lemma lem8378463 {A P : Type'} (s : P -> A) (x : A) : (term3057 A P s x) = (term2814 A P s x).
Proof. exact (fun_ext (fun x' : P => @lem8378462 A P s x' x)). Qed.
Lemma lem8378464 {P : Type'} : (@all P) = (@all P).
Proof. exact (eq_refl (@all P)). Qed.
Lemma lem8378465 {A P : Type'} (s : P -> A) (x : A) : (term3058 A P s x) = (term2815 A P s x).
Proof. exact (MK_COMB (@lem8378464 P) (@lem8378463 A P s x)). Qed.
Lemma lem8378466 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8378467 {A P : Type'} (s : P -> A) (x : A) : (term3059 A P s x) = (term2816 A P s x).
Proof. exact (MK_COMB (@lem8378466) (@lem8378465 A P s x)). Qed.
Lemma lem8378468 {A P : Type'} (_114084 : type794 A P) (s : P -> A) (x : A) : ((term2811 A P _114084 s x) = x) = ((term2811 A P _114084 s x) = x).
Proof. exact (eq_refl ((term2811 A P _114084 s x) = x)). Qed.
Lemma lem8378469 {A P : Type'} (_114084 : type794 A P) (s : P -> A) (x : A) : (term3054 A P _114084 s x) = (term2817 A P _114084 s x).
Proof. exact (MK_COMB (@lem8378467 A P s x) (@lem8378468 A P _114084 s x)). Qed.
Lemma lem8378470 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8378471 {A P : Type'} (_114084 : type794 A P) (s : P -> A) (x : A) : (term3060 A P _114084 s x) = (term3061 A P _114084 s x).
Proof. exact (MK_COMB (@lem8378470) (@lem8378469 A P _114084 s x)). Qed.
Lemma lem8378472 {A P : Type'} (s : P -> A) (x : P) (x' : A) : (term3056 A P s x' x) = (term2813 A P s x x').
Proof. exact (eq_refl (term3056 A P s x' x)). Qed.
Lemma lem8378473 : or = or.
Proof. exact (eq_refl or). Qed.
Lemma lem8378474 {A P : Type'} (s : P -> A) (x : P) (x' : A) : (term3062 A P s x' x) = (term3063 A P s x x').
Proof. exact (MK_COMB (@lem8378473) (@lem8378472 A P s x x')). Qed.
Lemma lem8378475 {A P : Type'} (_114084 : type794 A P) (s : P -> A) (x : A) : ((term2811 A P _114084 s x) = x) = ((term2811 A P _114084 s x) = x).
Proof. exact (eq_refl ((term2811 A P _114084 s x) = x)). Qed.
Lemma lem8378476 {A P : Type'} (x : P) (_114084 : type794 A P) (s : P -> A) (x' : A) : (term3064 A P x _114084 s x') = (term3065 A P x _114084 s x').
Proof. exact (MK_COMB (@lem8378474 A P s x x') (@lem8378475 A P _114084 s x')). Qed.
Lemma lem8378477 {A P : Type'} (_114084 : type794 A P) (s : P -> A) (x : A) : (term3066 A P _114084 s x) = (term3067 A P _114084 s x).
Proof. exact (fun_ext (fun x' : P => @lem8378476 A P x' _114084 s x)). Qed.
Lemma lem8378478 {P : Type'} : (@all P) = (@all P).
Proof. exact (eq_refl (@all P)). Qed.
Lemma lem8378479 {A P : Type'} (_114084 : type794 A P) (s : P -> A) (x : A) : (term3055 A P _114084 s x) = (term3068 A P _114084 s x).
Proof. exact (MK_COMB (@lem8378478 P) (@lem8378477 A P _114084 s x)). Qed.
Lemma lem8378480 {A P : Type'} (_114084 : type794 A P) (s : P -> A) (x : A) : ((term3054 A P _114084 s x) = (term3055 A P _114084 s x)) = ((term2817 A P _114084 s x) = (term3068 A P _114084 s x)).
Proof. exact (MK_COMB (@lem8378471 A P _114084 s x) (@lem8378479 A P _114084 s x)). Qed.
Lemma lem8378481 {A P : Type'} (_114084 : type794 A P) (s : P -> A) (x : A) : (term2817 A P _114084 s x) = (term3068 A P _114084 s x).
Proof. exact (EQ_MP (@lem8378480 A P _114084 s x) (@lem8378461 A P _114084 s x)). Qed.
Lemma lem8378482 {A P : Type'} (_114084 : type794 A P) (s : P -> A) : (term2818 A P _114084 s) = (term3069 A P _114084 s).
Proof. exact (fun_ext (fun x : A => @lem8378481 A P _114084 s x)). Qed.
Lemma lem8378483 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem8378484 {A P : Type'} (_114084 : type794 A P) (s : P -> A) : (term2819 A P _114084 s) = (term3070 A P _114084 s).
Proof. exact (MK_COMB (@lem8378483 A) (@lem8378482 A P _114084 s)). Qed.
Lemma lem8378485 {A P : Type'} (_114084 : type794 A P) : (term2820 A P _114084) = (term3071 A P _114084).
Proof. exact (fun_ext (fun s : P -> A => @lem8378484 A P _114084 s)). Qed.
Lemma lem8378486 {A P : Type'} : (@all (P -> A)) = (@all (P -> A)).
Proof. exact (eq_refl (@all (P -> A))). Qed.
Lemma lem8378487 {A P : Type'} (_114084 : type794 A P) : (term2821 A P _114084) = (term3072 A P _114084).
Proof. exact (MK_COMB (@lem8378486 A P) (@lem8378485 A P _114084)). Qed.
Lemma lem8378494 {A P : Type'} (x : P) (_114084 : type794 A P) (s : P -> A) (x' : A) : (term3065 A P x _114084 s x') = (term3065 A P x _114084 s x').
Proof. exact (eq_refl (term3065 A P x _114084 s x')). Qed.
Lemma lem8378495 {A P : Type'} (_114084 : type794 A P) (s : P -> A) (x : A) : (term3067 A P _114084 s x) = (term3067 A P _114084 s x).
Proof. exact (fun_ext (fun x' : P => @lem8378494 A P x' _114084 s x)). Qed.
Lemma lem8378496 {P : Type'} : (@all P) = (@all P).
Proof. exact (eq_refl (@all P)). Qed.
Lemma lem8378497 {A P : Type'} (_114084 : type794 A P) (s : P -> A) (x : A) : (term3068 A P _114084 s x) = (term3068 A P _114084 s x).
Proof. exact (MK_COMB (@lem8378496 P) (@lem8378495 A P _114084 s x)). Qed.
Lemma lem8378498 {A P : Type'} (_114084 : type794 A P) (s : P -> A) : (term3069 A P _114084 s) = (term3069 A P _114084 s).
Proof. exact (fun_ext (fun x : A => @lem8378497 A P _114084 s x)). Qed.
Lemma lem8378499 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem8378500 {A P : Type'} (_114084 : type794 A P) (s : P -> A) : (term3070 A P _114084 s) = (term3070 A P _114084 s).
Proof. exact (MK_COMB (@lem8378499 A) (@lem8378498 A P _114084 s)). Qed.
Lemma lem8378501 {A P : Type'} (_114084 : type794 A P) : (term3071 A P _114084) = (term3071 A P _114084).
Proof. exact (fun_ext (fun s : P -> A => @lem8378500 A P _114084 s)). Qed.
Lemma lem8378502 {A P : Type'} : (@all (P -> A)) = (@all (P -> A)).
Proof. exact (eq_refl (@all (P -> A))). Qed.
Lemma lem8378503 {A P : Type'} (_114084 : type794 A P) : (term3072 A P _114084) = (term3072 A P _114084).
Proof. exact (MK_COMB (@lem8378502 A P) (@lem8378501 A P _114084)). Qed.
Lemma lem8378504 {A P : Type'} (_114084 : type794 A P) : (term2821 A P _114084) = (term3072 A P _114084).
Proof. exact (TRANS (@lem8378487 A P _114084) (@lem8378503 A P _114084)). Qed.
Lemma lem8378505 {A P : Type'} (_114084 : type794 A P) (h1 : term1491 A P _114084) : term3072 A P _114084.
Proof. exact (EQ_MP (@lem8378504 A P _114084) (@lem8373613 A P _114084 h1)). Qed.
Lemma lem8378544 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (lt2 : type1402 A) (y : A) (s : P -> A) (a : P) : (term2858 A B P P2 G2 f lt2 y s a) = (term2858 A B P P2 G2 f lt2 y s a).
Proof. exact (eq_refl (term2858 A B P P2 G2 f lt2 y s a)). Qed.
Lemma lem8378545 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (lt2 : type1402 A) (s : P -> A) (a : P) : (term2859 A B P P2 G2 f lt2 s a) = (term2859 A B P P2 G2 f lt2 s a).
Proof. exact (fun_ext (fun y : A => @lem8378544 A B P P2 G2 f lt2 y s a)). Qed.
Lemma lem8378546 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem8378547 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (lt2 : type1402 A) (s : P -> A) (a : P) : (term2860 A B P P2 G2 f lt2 s a) = (term2860 A B P P2 G2 f lt2 s a).
Proof. exact (MK_COMB (@lem8378546 A) (@lem8378545 A B P P2 G2 f lt2 s a)). Qed.
Lemma lem8378548 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (lt2 : type1402 A) (s : P -> A) : (term2861 A B P P2 G2 f lt2 s) = (term2861 A B P P2 G2 f lt2 s).
Proof. exact (fun_ext (fun a : P => @lem8378547 A B P P2 G2 f lt2 s a)). Qed.
Lemma lem8378549 {P : Type'} : (@all P) = (@all P).
Proof. exact (eq_refl (@all P)). Qed.
Lemma lem8378550 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (lt2 : type1402 A) (s : P -> A) : (term2862 A B P P2 G2 f lt2 s) = (term2862 A B P P2 G2 f lt2 s).
Proof. exact (MK_COMB (@lem8378549 P) (@lem8378548 A B P P2 G2 f lt2 s)). Qed.
Lemma lem8378551 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (lt2 : type1402 A) (s : P -> A) : (term2863 A B P P2 G2 lt2 s) = (term2863 A B P P2 G2 lt2 s).
Proof. exact (fun_ext (fun f : A -> B => @lem8378550 A B P P2 G2 f lt2 s)). Qed.
Lemma lem8378552 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem8378554 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (lt2 : type1402 A) (s : P -> A) : (term2864 A B P P2 G2 lt2 s) = (term2864 A B P P2 G2 lt2 s).
Proof. exact (MK_COMB (@lem8378552 A B) (@lem8378551 A B P P2 G2 lt2 s)). Qed.
Lemma lem8378555 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (lt2 : type1402 A) (s : P -> A) (h1 : term1420 A B P P2 G2 lt2 s) : term2864 A B P P2 G2 lt2 s.
Proof. exact (EQ_MP (@lem8378554 A B P P2 G2 lt2 s) (@lem8373951 A B P P2 G2 lt2 s h1)). Qed.
Lemma lem8378875 {A B : Type'} (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (lt2 : type1402 A) (y : A) (x : A) : (term2835 A B P1 G1 f lt2 y x) = (term2835 A B P1 G1 f lt2 y x).
Proof. exact (eq_refl (term2835 A B P1 G1 f lt2 y x)). Qed.
Lemma lem8378876 {A B : Type'} (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (lt2 : type1402 A) (x : A) : (term2836 A B P1 G1 f lt2 x) = (term2836 A B P1 G1 f lt2 x).
Proof. exact (fun_ext (fun y : A => @lem8378875 A B P1 G1 f lt2 y x)). Qed.
Lemma lem8378877 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem8378878 {A B : Type'} (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (lt2 : type1402 A) (x : A) : (term2837 A B P1 G1 f lt2 x) = (term2837 A B P1 G1 f lt2 x).
Proof. exact (MK_COMB (@lem8378877 A) (@lem8378876 A B P1 G1 f lt2 x)). Qed.
Lemma lem8378879 {A B : Type'} (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (lt2 : type1402 A) : (term2838 A B P1 G1 f lt2) = (term2838 A B P1 G1 f lt2).
Proof. exact (fun_ext (fun x : A => @lem8378878 A B P1 G1 f lt2 x)). Qed.
Lemma lem8378880 {A : Type'} : (@all A) = (@all A).
Proof. exact (eq_refl (@all A)). Qed.
Lemma lem8378881 {A B : Type'} (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (lt2 : type1402 A) : (term2839 A B P1 G1 f lt2) = (term2839 A B P1 G1 f lt2).
Proof. exact (MK_COMB (@lem8378880 A) (@lem8378879 A B P1 G1 f lt2)). Qed.
Lemma lem8378882 {A B : Type'} (P1 : type551 A B) (G1 : type548 A B) (lt2 : type1402 A) : (term2840 A B P1 G1 lt2) = (term2840 A B P1 G1 lt2).
Proof. exact (fun_ext (fun f : A -> B => @lem8378881 A B P1 G1 f lt2)). Qed.
Lemma lem8378883 {A B : Type'} : (@all (A -> B)) = (@all (A -> B)).
Proof. exact (eq_refl (@all (A -> B))). Qed.
Lemma lem8378885 {A B : Type'} (P1 : type551 A B) (G1 : type548 A B) (lt2 : type1402 A) : (term2841 A B P1 G1 lt2) = (term2841 A B P1 G1 lt2).
Proof. exact (MK_COMB (@lem8378883 A B) (@lem8378882 A B P1 G1 lt2)). Qed.
Lemma lem8378886 {A B : Type'} (P1 : type551 A B) (G1 : type548 A B) (lt2 : type1402 A) (h1 : term1418 A B P1 G1 lt2) : term2841 A B P1 G1 lt2.
Proof. exact (EQ_MP (@lem8378885 A B P1 G1 lt2) (@lem8373700 A B P1 G1 lt2 h1)). Qed.
Lemma lem8379173 {A P : Type'} (_114085 : P -> A) (_114084 : type794 A P) (h1 : term1491 A P _114084) : term3129 A P _114084 _114085.
Proof. exact (@lem8375589 A P _114084 h1 _114085). Qed.
Lemma lem8379174 {A P : Type'} (_114084 : type794 A P) (_114085 : P -> A) : (term3129 A P _114084 _114085) = (term3070 A P _114084 _114085).
Proof. exact (eq_refl (term3129 A P _114084 _114085)). Qed.
Lemma lem8379175 {A P : Type'} (_114085 : P -> A) (_114084 : type794 A P) (h1 : term1491 A P _114084) : term3070 A P _114084 _114085.
Proof. exact (EQ_MP (@lem8379174 A P _114084 _114085) (@lem8379173 A P _114085 _114084 h1)). Qed.
Lemma lem8379176 {A P : Type'} (_114085 : P -> A) (_114086 : A) (_114084 : type794 A P) (h1 : term1491 A P _114084) : term3130 A P _114084 _114085 _114086.
Proof. exact (@lem8379175 A P _114085 _114084 h1 _114086). Qed.
Lemma lem8379177 {A P : Type'} (_114084 : type794 A P) (_114085 : P -> A) (_114086 : A) : (term3130 A P _114084 _114085 _114086) = (term3068 A P _114084 _114085 _114086).
Proof. exact (eq_refl (term3130 A P _114084 _114085 _114086)). Qed.
Lemma lem8379178 {A P : Type'} (_114085 : P -> A) (_114086 : A) (_114084 : type794 A P) (h1 : term1491 A P _114084) : term3068 A P _114084 _114085 _114086.
Proof. exact (EQ_MP (@lem8379177 A P _114084 _114085 _114086) (@lem8379176 A P _114085 _114086 _114084 h1)). Qed.
Lemma lem8379179 {A P : Type'} (_114085 : P -> A) (_114086 : A) (_114087 : P) (_114084 : type794 A P) (h1 : term1491 A P _114084) : term3131 A P _114084 _114085 _114086 _114087.
Proof. exact (@lem8379178 A P _114085 _114086 _114084 h1 _114087). Qed.
Lemma lem8379180 {A P : Type'} (_114087 : P) (_114084 : type794 A P) (_114085 : P -> A) (_114086 : A) : (term3131 A P _114084 _114085 _114086 _114087) = (term3065 A P _114087 _114084 _114085 _114086).
Proof. exact (eq_refl (term3131 A P _114084 _114085 _114086 _114087)). Qed.
Lemma lem8379200 {A B P : Type'} (_114094 : A -> B) (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (h1 : term2270 A B P lt2 s z P2 G2 H2) : term3132 A B P P2 G2 lt2 s z H2 _114094.
Proof. exact (@lem8375728 A B P lt2 s z P2 G2 H2 h1 _114094). Qed.
Lemma lem8379201 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (_114094 : A -> B) (H2 : type558 A B P) : (term3132 A B P P2 G2 lt2 s z H2 _114094) = (term3098 A B P P2 G2 lt2 s z _114094 H2).
Proof. exact (eq_refl (term3132 A B P P2 G2 lt2 s z H2 _114094)). Qed.
Lemma lem8379202 {A B P : Type'} (_114094 : A -> B) (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (h1 : term2270 A B P lt2 s z P2 G2 H2) : term3098 A B P P2 G2 lt2 s z _114094 H2.
Proof. exact (EQ_MP (@lem8379201 A B P P2 G2 lt2 s z _114094 H2) (@lem8379200 A B P _114094 lt2 s z P2 G2 H2 h1)). Qed.
Lemma lem8379203 {A B P : Type'} (_114094 : A -> B) (_114095 : A -> B) (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (h1 : term2270 A B P lt2 s z P2 G2 H2) : term3133 A B P P2 G2 lt2 s z _114094 H2 _114095.
Proof. exact (@lem8379202 A B P _114094 lt2 s z P2 G2 H2 h1 _114095). Qed.
Lemma lem8379204 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (_114094 : A -> B) (H2 : type558 A B P) (_114095 : A -> B) : (term3133 A B P P2 G2 lt2 s z _114094 H2 _114095) = (term3096 A B P P2 G2 lt2 s z _114094 H2 _114095).
Proof. exact (eq_refl (term3133 A B P P2 G2 lt2 s z _114094 H2 _114095)). Qed.
Lemma lem8379205 {A B P : Type'} (_114094 : A -> B) (_114095 : A -> B) (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (h1 : term2270 A B P lt2 s z P2 G2 H2) : term3096 A B P P2 G2 lt2 s z _114094 H2 _114095.
Proof. exact (EQ_MP (@lem8379204 A B P P2 G2 lt2 s z _114094 H2 _114095) (@lem8379203 A B P _114094 _114095 lt2 s z P2 G2 H2 h1)). Qed.
Lemma lem8379206 {A B P : Type'} (_114094 : A -> B) (_114095 : A -> B) (_114096 : P) (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (h1 : term2270 A B P lt2 s z P2 G2 H2) : term3134 A B P P2 G2 lt2 s z _114094 H2 _114095 _114096.
Proof. exact (@lem8379205 A B P _114094 _114095 lt2 s z P2 G2 H2 h1 _114096). Qed.
Lemma lem8379207 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (_114094 : A -> B) (H2 : type558 A B P) (_114095 : A -> B) (_114096 : P) : (term3134 A B P P2 G2 lt2 s z _114094 H2 _114095 _114096) = (term3094 A B P P2 G2 lt2 s z _114094 H2 _114095 _114096).
Proof. exact (eq_refl (term3134 A B P P2 G2 lt2 s z _114094 H2 _114095 _114096)). Qed.
Lemma lem8379208 {A B P : Type'} (_114094 : A -> B) (_114095 : A -> B) (_114096 : P) (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (h1 : term2270 A B P lt2 s z P2 G2 H2) : term3094 A B P P2 G2 lt2 s z _114094 H2 _114095 _114096.
Proof. exact (EQ_MP (@lem8379207 A B P P2 G2 lt2 s z _114094 H2 _114095 _114096) (@lem8379206 A B P _114094 _114095 _114096 lt2 s z P2 G2 H2 h1)). Qed.
Lemma lem8379242 {A B P : Type'} (_114108 : A) (y : P) (lt2 : type1402 A) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (_114084 : type794 A P) (s : P -> A) (x : A) (h1 : term2944 A B P y lt2 P2 G2 f H2 g _114084 s x) : term3135 A B lt2 x f g _114108.
Proof. exact (@lem8375898 A B P y lt2 P2 G2 f H2 g _114084 s x h1 _114108). Qed.
Lemma lem8379243 {A B : Type'} (lt2 : type1402 A) (x : A) (f : A -> B) (g : A -> B) (_114108 : A) : (term3135 A B lt2 x f g _114108) = (term2912 A B lt2 x f g _114108).
Proof. exact (eq_refl (term3135 A B lt2 x f g _114108)). Qed.
Lemma lem8379245 {A P : Type'} (_114109 : P -> A) (_114084 : type794 A P) (h1 : term1491 A P _114084) : term3129 A P _114084 _114109.
Proof. exact (@lem8375954 A P _114084 h1 _114109). Qed.
Lemma lem8379246 {A P : Type'} (_114084 : type794 A P) (_114109 : P -> A) : (term3129 A P _114084 _114109) = (term3070 A P _114084 _114109).
Proof. exact (eq_refl (term3129 A P _114084 _114109)). Qed.
Lemma lem8379247 {A P : Type'} (_114109 : P -> A) (_114084 : type794 A P) (h1 : term1491 A P _114084) : term3070 A P _114084 _114109.
Proof. exact (EQ_MP (@lem8379246 A P _114084 _114109) (@lem8379245 A P _114109 _114084 h1)). Qed.
Lemma lem8379248 {A P : Type'} (_114109 : P -> A) (_114110 : A) (_114084 : type794 A P) (h1 : term1491 A P _114084) : term3130 A P _114084 _114109 _114110.
Proof. exact (@lem8379247 A P _114109 _114084 h1 _114110). Qed.
Lemma lem8379249 {A P : Type'} (_114084 : type794 A P) (_114109 : P -> A) (_114110 : A) : (term3130 A P _114084 _114109 _114110) = (term3068 A P _114084 _114109 _114110).
Proof. exact (eq_refl (term3130 A P _114084 _114109 _114110)). Qed.
Lemma lem8379250 {A P : Type'} (_114109 : P -> A) (_114110 : A) (_114084 : type794 A P) (h1 : term1491 A P _114084) : term3068 A P _114084 _114109 _114110.
Proof. exact (EQ_MP (@lem8379249 A P _114084 _114109 _114110) (@lem8379248 A P _114109 _114110 _114084 h1)). Qed.
Lemma lem8379251 {A P : Type'} (_114109 : P -> A) (_114110 : A) (_114111 : P) (_114084 : type794 A P) (h1 : term1491 A P _114084) : term3131 A P _114084 _114109 _114110 _114111.
Proof. exact (@lem8379250 A P _114109 _114110 _114084 h1 _114111). Qed.
Lemma lem8379252 {A P : Type'} (_114111 : P) (_114084 : type794 A P) (_114109 : P -> A) (_114110 : A) : (term3131 A P _114084 _114109 _114110 _114111) = (term3065 A P _114111 _114084 _114109 _114110).
Proof. exact (eq_refl (term3131 A P _114084 _114109 _114110 _114111)). Qed.
Lemma lem8379272 {A B P : Type'} (_114118 : A -> B) (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (h1 : term2270 A B P lt2 s z P2 G2 H2) : term3132 A B P P2 G2 lt2 s z H2 _114118.
Proof. exact (@lem8376093 A B P lt2 s z P2 G2 H2 h1 _114118). Qed.
Lemma lem8379273 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (_114118 : A -> B) (H2 : type558 A B P) : (term3132 A B P P2 G2 lt2 s z H2 _114118) = (term3098 A B P P2 G2 lt2 s z _114118 H2).
Proof. exact (eq_refl (term3132 A B P P2 G2 lt2 s z H2 _114118)). Qed.
Lemma lem8379274 {A B P : Type'} (_114118 : A -> B) (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (h1 : term2270 A B P lt2 s z P2 G2 H2) : term3098 A B P P2 G2 lt2 s z _114118 H2.
Proof. exact (EQ_MP (@lem8379273 A B P P2 G2 lt2 s z _114118 H2) (@lem8379272 A B P _114118 lt2 s z P2 G2 H2 h1)). Qed.
Lemma lem8379275 {A B P : Type'} (_114118 : A -> B) (_114119 : A -> B) (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (h1 : term2270 A B P lt2 s z P2 G2 H2) : term3133 A B P P2 G2 lt2 s z _114118 H2 _114119.
Proof. exact (@lem8379274 A B P _114118 lt2 s z P2 G2 H2 h1 _114119). Qed.
Lemma lem8379276 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (_114118 : A -> B) (H2 : type558 A B P) (_114119 : A -> B) : (term3133 A B P P2 G2 lt2 s z _114118 H2 _114119) = (term3096 A B P P2 G2 lt2 s z _114118 H2 _114119).
Proof. exact (eq_refl (term3133 A B P P2 G2 lt2 s z _114118 H2 _114119)). Qed.
Lemma lem8379277 {A B P : Type'} (_114118 : A -> B) (_114119 : A -> B) (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (h1 : term2270 A B P lt2 s z P2 G2 H2) : term3096 A B P P2 G2 lt2 s z _114118 H2 _114119.
Proof. exact (EQ_MP (@lem8379276 A B P P2 G2 lt2 s z _114118 H2 _114119) (@lem8379275 A B P _114118 _114119 lt2 s z P2 G2 H2 h1)). Qed.
Lemma lem8379278 {A B P : Type'} (_114118 : A -> B) (_114119 : A -> B) (_114120 : P) (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (h1 : term2270 A B P lt2 s z P2 G2 H2) : term3134 A B P P2 G2 lt2 s z _114118 H2 _114119 _114120.
Proof. exact (@lem8379277 A B P _114118 _114119 lt2 s z P2 G2 H2 h1 _114120). Qed.
Lemma lem8379279 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (_114118 : A -> B) (H2 : type558 A B P) (_114119 : A -> B) (_114120 : P) : (term3134 A B P P2 G2 lt2 s z _114118 H2 _114119 _114120) = (term3094 A B P P2 G2 lt2 s z _114118 H2 _114119 _114120).
Proof. exact (eq_refl (term3134 A B P P2 G2 lt2 s z _114118 H2 _114119 _114120)). Qed.
Lemma lem8379280 {A B P : Type'} (_114118 : A -> B) (_114119 : A -> B) (_114120 : P) (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (h1 : term2270 A B P lt2 s z P2 G2 H2) : term3094 A B P P2 G2 lt2 s z _114118 H2 _114119 _114120.
Proof. exact (EQ_MP (@lem8379279 A B P P2 G2 lt2 s z _114118 H2 _114119 _114120) (@lem8379278 A B P _114118 _114119 _114120 lt2 s z P2 G2 H2 h1)). Qed.
Lemma lem8379314 {A B P : Type'} (_114132 : A) (y : P) (lt2 : type1402 A) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (_114084 : type794 A P) (s : P -> A) (x : A) (h1 : term2944 A B P y lt2 P2 G2 f H2 g _114084 s x) : term3135 A B lt2 x f g _114132.
Proof. exact (@lem8376263 A B P y lt2 P2 G2 f H2 g _114084 s x h1 _114132). Qed.
Lemma lem8379315 {A B : Type'} (lt2 : type1402 A) (x : A) (f : A -> B) (g : A -> B) (_114132 : A) : (term3135 A B lt2 x f g _114132) = (term2912 A B lt2 x f g _114132).
Proof. exact (eq_refl (term3135 A B lt2 x f g _114132)). Qed.
Lemma lem8379317 {A P : Type'} (_114133 : P -> A) (_114084 : type794 A P) (h1 : term1491 A P _114084) : term3129 A P _114084 _114133.
Proof. exact (@lem8376319 A P _114084 h1 _114133). Qed.
Lemma lem8379318 {A P : Type'} (_114084 : type794 A P) (_114133 : P -> A) : (term3129 A P _114084 _114133) = (term3070 A P _114084 _114133).
Proof. exact (eq_refl (term3129 A P _114084 _114133)). Qed.
Lemma lem8379319 {A P : Type'} (_114133 : P -> A) (_114084 : type794 A P) (h1 : term1491 A P _114084) : term3070 A P _114084 _114133.
Proof. exact (EQ_MP (@lem8379318 A P _114084 _114133) (@lem8379317 A P _114133 _114084 h1)). Qed.
Lemma lem8379320 {A P : Type'} (_114133 : P -> A) (_114134 : A) (_114084 : type794 A P) (h1 : term1491 A P _114084) : term3130 A P _114084 _114133 _114134.
Proof. exact (@lem8379319 A P _114133 _114084 h1 _114134). Qed.
Lemma lem8379321 {A P : Type'} (_114084 : type794 A P) (_114133 : P -> A) (_114134 : A) : (term3130 A P _114084 _114133 _114134) = (term3068 A P _114084 _114133 _114134).
Proof. exact (eq_refl (term3130 A P _114084 _114133 _114134)). Qed.
Lemma lem8379322 {A P : Type'} (_114133 : P -> A) (_114134 : A) (_114084 : type794 A P) (h1 : term1491 A P _114084) : term3068 A P _114084 _114133 _114134.
Proof. exact (EQ_MP (@lem8379321 A P _114084 _114133 _114134) (@lem8379320 A P _114133 _114134 _114084 h1)). Qed.
Lemma lem8379323 {A P : Type'} (_114133 : P -> A) (_114134 : A) (_114135 : P) (_114084 : type794 A P) (h1 : term1491 A P _114084) : term3131 A P _114084 _114133 _114134 _114135.
Proof. exact (@lem8379322 A P _114133 _114134 _114084 h1 _114135). Qed.
Lemma lem8379324 {A P : Type'} (_114135 : P) (_114084 : type794 A P) (_114133 : P -> A) (_114134 : A) : (term3131 A P _114084 _114133 _114134 _114135) = (term3065 A P _114135 _114084 _114133 _114134).
Proof. exact (eq_refl (term3131 A P _114084 _114133 _114134 _114135)). Qed.
Lemma lem8379344 {A B P : Type'} (_114142 : A -> B) (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (h1 : term2270 A B P lt2 s z P2 G2 H2) : term3132 A B P P2 G2 lt2 s z H2 _114142.
Proof. exact (@lem8376458 A B P lt2 s z P2 G2 H2 h1 _114142). Qed.
Lemma lem8379345 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (_114142 : A -> B) (H2 : type558 A B P) : (term3132 A B P P2 G2 lt2 s z H2 _114142) = (term3098 A B P P2 G2 lt2 s z _114142 H2).
Proof. exact (eq_refl (term3132 A B P P2 G2 lt2 s z H2 _114142)). Qed.
Lemma lem8379346 {A B P : Type'} (_114142 : A -> B) (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (h1 : term2270 A B P lt2 s z P2 G2 H2) : term3098 A B P P2 G2 lt2 s z _114142 H2.
Proof. exact (EQ_MP (@lem8379345 A B P P2 G2 lt2 s z _114142 H2) (@lem8379344 A B P _114142 lt2 s z P2 G2 H2 h1)). Qed.
Lemma lem8379347 {A B P : Type'} (_114142 : A -> B) (_114143 : A -> B) (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (h1 : term2270 A B P lt2 s z P2 G2 H2) : term3133 A B P P2 G2 lt2 s z _114142 H2 _114143.
Proof. exact (@lem8379346 A B P _114142 lt2 s z P2 G2 H2 h1 _114143). Qed.
Lemma lem8379348 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (_114142 : A -> B) (H2 : type558 A B P) (_114143 : A -> B) : (term3133 A B P P2 G2 lt2 s z _114142 H2 _114143) = (term3096 A B P P2 G2 lt2 s z _114142 H2 _114143).
Proof. exact (eq_refl (term3133 A B P P2 G2 lt2 s z _114142 H2 _114143)). Qed.
Lemma lem8379349 {A B P : Type'} (_114142 : A -> B) (_114143 : A -> B) (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (h1 : term2270 A B P lt2 s z P2 G2 H2) : term3096 A B P P2 G2 lt2 s z _114142 H2 _114143.
Proof. exact (EQ_MP (@lem8379348 A B P P2 G2 lt2 s z _114142 H2 _114143) (@lem8379347 A B P _114142 _114143 lt2 s z P2 G2 H2 h1)). Qed.
Lemma lem8379350 {A B P : Type'} (_114142 : A -> B) (_114143 : A -> B) (_114144 : P) (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (h1 : term2270 A B P lt2 s z P2 G2 H2) : term3134 A B P P2 G2 lt2 s z _114142 H2 _114143 _114144.
Proof. exact (@lem8379349 A B P _114142 _114143 lt2 s z P2 G2 H2 h1 _114144). Qed.
Lemma lem8379351 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (_114142 : A -> B) (H2 : type558 A B P) (_114143 : A -> B) (_114144 : P) : (term3134 A B P P2 G2 lt2 s z _114142 H2 _114143 _114144) = (term3094 A B P P2 G2 lt2 s z _114142 H2 _114143 _114144).
Proof. exact (eq_refl (term3134 A B P P2 G2 lt2 s z _114142 H2 _114143 _114144)). Qed.
Lemma lem8379352 {A B P : Type'} (_114142 : A -> B) (_114143 : A -> B) (_114144 : P) (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (h1 : term2270 A B P lt2 s z P2 G2 H2) : term3094 A B P P2 G2 lt2 s z _114142 H2 _114143 _114144.
Proof. exact (EQ_MP (@lem8379351 A B P P2 G2 lt2 s z _114142 H2 _114143 _114144) (@lem8379350 A B P _114142 _114143 _114144 lt2 s z P2 G2 H2 h1)). Qed.
Lemma lem8379386 {A B P : Type'} (_114156 : A) (y : P) (lt2 : type1402 A) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (_114084 : type794 A P) (s : P -> A) (x : A) (h1 : term2944 A B P y lt2 P2 G2 f H2 g _114084 s x) : term3135 A B lt2 x f g _114156.
Proof. exact (@lem8376628 A B P y lt2 P2 G2 f H2 g _114084 s x h1 _114156). Qed.
Lemma lem8379387 {A B : Type'} (lt2 : type1402 A) (x : A) (f : A -> B) (g : A -> B) (_114156 : A) : (term3135 A B lt2 x f g _114156) = (term2912 A B lt2 x f g _114156).
Proof. exact (eq_refl (term3135 A B lt2 x f g _114156)). Qed.
Lemma lem8379389 {A P : Type'} (_114157 : P -> A) (_114084 : type794 A P) (h1 : term1491 A P _114084) : term3129 A P _114084 _114157.
Proof. exact (@lem8376680 A P _114084 h1 _114157). Qed.
Lemma lem8379390 {A P : Type'} (_114084 : type794 A P) (_114157 : P -> A) : (term3129 A P _114084 _114157) = (term3070 A P _114084 _114157).
Proof. exact (eq_refl (term3129 A P _114084 _114157)). Qed.
Lemma lem8379391 {A P : Type'} (_114157 : P -> A) (_114084 : type794 A P) (h1 : term1491 A P _114084) : term3070 A P _114084 _114157.
Proof. exact (EQ_MP (@lem8379390 A P _114084 _114157) (@lem8379389 A P _114157 _114084 h1)). Qed.
Lemma lem8379392 {A P : Type'} (_114157 : P -> A) (_114158 : A) (_114084 : type794 A P) (h1 : term1491 A P _114084) : term3130 A P _114084 _114157 _114158.
Proof. exact (@lem8379391 A P _114157 _114084 h1 _114158). Qed.
Lemma lem8379393 {A P : Type'} (_114084 : type794 A P) (_114157 : P -> A) (_114158 : A) : (term3130 A P _114084 _114157 _114158) = (term3068 A P _114084 _114157 _114158).
Proof. exact (eq_refl (term3130 A P _114084 _114157 _114158)). Qed.
Lemma lem8379394 {A P : Type'} (_114157 : P -> A) (_114158 : A) (_114084 : type794 A P) (h1 : term1491 A P _114084) : term3068 A P _114084 _114157 _114158.
Proof. exact (EQ_MP (@lem8379393 A P _114084 _114157 _114158) (@lem8379392 A P _114157 _114158 _114084 h1)). Qed.
Lemma lem8379395 {A P : Type'} (_114157 : P -> A) (_114158 : A) (_114159 : P) (_114084 : type794 A P) (h1 : term1491 A P _114084) : term3131 A P _114084 _114157 _114158 _114159.
Proof. exact (@lem8379394 A P _114157 _114158 _114084 h1 _114159). Qed.
Lemma lem8379396 {A P : Type'} (_114159 : P) (_114084 : type794 A P) (_114157 : P -> A) (_114158 : A) : (term3131 A P _114084 _114157 _114158 _114159) = (term3065 A P _114159 _114084 _114157 _114158).
Proof. exact (eq_refl (term3131 A P _114084 _114157 _114158 _114159)). Qed.
Lemma lem8379416 {A B P : Type'} (_114166 : A -> B) (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (h1 : term2270 A B P lt2 s z P2 G2 H2) : term3132 A B P P2 G2 lt2 s z H2 _114166.
Proof. exact (@lem8376819 A B P lt2 s z P2 G2 H2 h1 _114166). Qed.
Lemma lem8379417 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (_114166 : A -> B) (H2 : type558 A B P) : (term3132 A B P P2 G2 lt2 s z H2 _114166) = (term3098 A B P P2 G2 lt2 s z _114166 H2).
Proof. exact (eq_refl (term3132 A B P P2 G2 lt2 s z H2 _114166)). Qed.
Lemma lem8379418 {A B P : Type'} (_114166 : A -> B) (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (h1 : term2270 A B P lt2 s z P2 G2 H2) : term3098 A B P P2 G2 lt2 s z _114166 H2.
Proof. exact (EQ_MP (@lem8379417 A B P P2 G2 lt2 s z _114166 H2) (@lem8379416 A B P _114166 lt2 s z P2 G2 H2 h1)). Qed.
Lemma lem8379419 {A B P : Type'} (_114166 : A -> B) (_114167 : A -> B) (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (h1 : term2270 A B P lt2 s z P2 G2 H2) : term3133 A B P P2 G2 lt2 s z _114166 H2 _114167.
Proof. exact (@lem8379418 A B P _114166 lt2 s z P2 G2 H2 h1 _114167). Qed.
Lemma lem8379420 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (_114166 : A -> B) (H2 : type558 A B P) (_114167 : A -> B) : (term3133 A B P P2 G2 lt2 s z _114166 H2 _114167) = (term3096 A B P P2 G2 lt2 s z _114166 H2 _114167).
Proof. exact (eq_refl (term3133 A B P P2 G2 lt2 s z _114166 H2 _114167)). Qed.
Lemma lem8379421 {A B P : Type'} (_114166 : A -> B) (_114167 : A -> B) (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (h1 : term2270 A B P lt2 s z P2 G2 H2) : term3096 A B P P2 G2 lt2 s z _114166 H2 _114167.
Proof. exact (EQ_MP (@lem8379420 A B P P2 G2 lt2 s z _114166 H2 _114167) (@lem8379419 A B P _114166 _114167 lt2 s z P2 G2 H2 h1)). Qed.
Lemma lem8379422 {A B P : Type'} (_114166 : A -> B) (_114167 : A -> B) (_114168 : P) (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (h1 : term2270 A B P lt2 s z P2 G2 H2) : term3134 A B P P2 G2 lt2 s z _114166 H2 _114167 _114168.
Proof. exact (@lem8379421 A B P _114166 _114167 lt2 s z P2 G2 H2 h1 _114168). Qed.
Lemma lem8379423 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (_114166 : A -> B) (H2 : type558 A B P) (_114167 : A -> B) (_114168 : P) : (term3134 A B P P2 G2 lt2 s z _114166 H2 _114167 _114168) = (term3094 A B P P2 G2 lt2 s z _114166 H2 _114167 _114168).
Proof. exact (eq_refl (term3134 A B P P2 G2 lt2 s z _114166 H2 _114167 _114168)). Qed.
Lemma lem8379424 {A B P : Type'} (_114166 : A -> B) (_114167 : A -> B) (_114168 : P) (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (h1 : term2270 A B P lt2 s z P2 G2 H2) : term3094 A B P P2 G2 lt2 s z _114166 H2 _114167 _114168.
Proof. exact (EQ_MP (@lem8379423 A B P P2 G2 lt2 s z _114166 H2 _114167 _114168) (@lem8379422 A B P _114166 _114167 _114168 lt2 s z P2 G2 H2 h1)). Qed.
Lemma lem8379458 {A B P : Type'} (_114180 : A) (y : P) (lt2 : type1402 A) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (_114084 : type794 A P) (s : P -> A) (x : A) (h1 : term2944 A B P y lt2 P2 G2 f H2 g _114084 s x) : term3135 A B lt2 x f g _114180.
Proof. exact (@lem8376989 A B P y lt2 P2 G2 f H2 g _114084 s x h1 _114180). Qed.
Lemma lem8379459 {A B : Type'} (lt2 : type1402 A) (x : A) (f : A -> B) (g : A -> B) (_114180 : A) : (term3135 A B lt2 x f g _114180) = (term2912 A B lt2 x f g _114180).
Proof. exact (eq_refl (term3135 A B lt2 x f g _114180)). Qed.
Lemma lem8379497 {A B : Type'} (_114193 : A -> B) (lt2 : type1402 A) (z' : type515 A B) (P1 : type551 A B) (G1 : type548 A B) (H1 : type549 A B) (h1 : term2129 A B lt2 z' P1 G1 H1) : term3136 A B P1 G1 lt2 z' H1 _114193.
Proof. exact (@lem8377269 A B lt2 z' P1 G1 H1 h1 _114193). Qed.
Lemma lem8379498 {A B : Type'} (P1 : type551 A B) (G1 : type548 A B) (lt2 : type1402 A) (z' : type515 A B) (_114193 : A -> B) (H1 : type549 A B) : (term3136 A B P1 G1 lt2 z' H1 _114193) = (term3126 A B P1 G1 lt2 z' _114193 H1).
Proof. exact (eq_refl (term3136 A B P1 G1 lt2 z' H1 _114193)). Qed.
Lemma lem8379499 {A B : Type'} (_114193 : A -> B) (lt2 : type1402 A) (z' : type515 A B) (P1 : type551 A B) (G1 : type548 A B) (H1 : type549 A B) (h1 : term2129 A B lt2 z' P1 G1 H1) : term3126 A B P1 G1 lt2 z' _114193 H1.
Proof. exact (EQ_MP (@lem8379498 A B P1 G1 lt2 z' _114193 H1) (@lem8379497 A B _114193 lt2 z' P1 G1 H1 h1)). Qed.
Lemma lem8379500 {A B : Type'} (_114193 : A -> B) (_114194 : A -> B) (lt2 : type1402 A) (z' : type515 A B) (P1 : type551 A B) (G1 : type548 A B) (H1 : type549 A B) (h1 : term2129 A B lt2 z' P1 G1 H1) : term3137 A B P1 G1 lt2 z' _114193 H1 _114194.
Proof. exact (@lem8379499 A B _114193 lt2 z' P1 G1 H1 h1 _114194). Qed.
Lemma lem8379501 {A B : Type'} (P1 : type551 A B) (G1 : type548 A B) (lt2 : type1402 A) (z' : type515 A B) (_114193 : A -> B) (H1 : type549 A B) (_114194 : A -> B) : (term3137 A B P1 G1 lt2 z' _114193 H1 _114194) = (term3124 A B P1 G1 lt2 z' _114193 H1 _114194).
Proof. exact (eq_refl (term3137 A B P1 G1 lt2 z' _114193 H1 _114194)). Qed.
Lemma lem8379502 {A B : Type'} (_114193 : A -> B) (_114194 : A -> B) (lt2 : type1402 A) (z' : type515 A B) (P1 : type551 A B) (G1 : type548 A B) (H1 : type549 A B) (h1 : term2129 A B lt2 z' P1 G1 H1) : term3124 A B P1 G1 lt2 z' _114193 H1 _114194.
Proof. exact (EQ_MP (@lem8379501 A B P1 G1 lt2 z' _114193 H1 _114194) (@lem8379500 A B _114193 _114194 lt2 z' P1 G1 H1 h1)). Qed.
Lemma lem8379503 {A B : Type'} (_114193 : A -> B) (_114194 : A -> B) (_114195 : A) (lt2 : type1402 A) (z' : type515 A B) (P1 : type551 A B) (G1 : type548 A B) (H1 : type549 A B) (h1 : term2129 A B lt2 z' P1 G1 H1) : term3138 A B P1 G1 lt2 z' _114193 H1 _114194 _114195.
Proof. exact (@lem8379502 A B _114193 _114194 lt2 z' P1 G1 H1 h1 _114195). Qed.
Lemma lem8379504 {A B : Type'} (P1 : type551 A B) (G1 : type548 A B) (lt2 : type1402 A) (z' : type515 A B) (_114193 : A -> B) (H1 : type549 A B) (_114194 : A -> B) (_114195 : A) : (term3138 A B P1 G1 lt2 z' _114193 H1 _114194 _114195) = (term3122 A B P1 G1 lt2 z' _114193 H1 _114194 _114195).
Proof. exact (eq_refl (term3138 A B P1 G1 lt2 z' _114193 H1 _114194 _114195)). Qed.
Lemma lem8379505 {A B : Type'} (_114193 : A -> B) (_114194 : A -> B) (_114195 : A) (lt2 : type1402 A) (z' : type515 A B) (P1 : type551 A B) (G1 : type548 A B) (H1 : type549 A B) (h1 : term2129 A B lt2 z' P1 G1 H1) : term3122 A B P1 G1 lt2 z' _114193 H1 _114194 _114195.
Proof. exact (EQ_MP (@lem8379504 A B P1 G1 lt2 z' _114193 H1 _114194 _114195) (@lem8379503 A B _114193 _114194 _114195 lt2 z' P1 G1 H1 h1)). Qed.
Lemma lem8379533 {A B P : Type'} (_114205 : A) (s : P -> A) (lt2 : type1402 A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (H1 : type549 A B) (g : A -> B) (x : A) (h1 : term2917 A B P s lt2 P1 G1 f H1 g x) : term3135 A B lt2 x f g _114205.
Proof. exact (@lem8377353 A B P s lt2 P1 G1 f H1 g x h1 _114205). Qed.
Lemma lem8379534 {A B : Type'} (lt2 : type1402 A) (x : A) (f : A -> B) (g : A -> B) (_114205 : A) : (term3135 A B lt2 x f g _114205) = (term2912 A B lt2 x f g _114205).
Proof. exact (eq_refl (term3135 A B lt2 x f g _114205)). Qed.
Lemma lem8379572 {A B : Type'} (_114218 : A -> B) (lt2 : type1402 A) (z' : type515 A B) (P1 : type551 A B) (G1 : type548 A B) (H1 : type549 A B) (h1 : term2129 A B lt2 z' P1 G1 H1) : term3136 A B P1 G1 lt2 z' H1 _114218.
Proof. exact (@lem8377637 A B lt2 z' P1 G1 H1 h1 _114218). Qed.
Lemma lem8379573 {A B : Type'} (P1 : type551 A B) (G1 : type548 A B) (lt2 : type1402 A) (z' : type515 A B) (_114218 : A -> B) (H1 : type549 A B) : (term3136 A B P1 G1 lt2 z' H1 _114218) = (term3126 A B P1 G1 lt2 z' _114218 H1).
Proof. exact (eq_refl (term3136 A B P1 G1 lt2 z' H1 _114218)). Qed.
Lemma lem8379574 {A B : Type'} (_114218 : A -> B) (lt2 : type1402 A) (z' : type515 A B) (P1 : type551 A B) (G1 : type548 A B) (H1 : type549 A B) (h1 : term2129 A B lt2 z' P1 G1 H1) : term3126 A B P1 G1 lt2 z' _114218 H1.
Proof. exact (EQ_MP (@lem8379573 A B P1 G1 lt2 z' _114218 H1) (@lem8379572 A B _114218 lt2 z' P1 G1 H1 h1)). Qed.
Lemma lem8379575 {A B : Type'} (_114218 : A -> B) (_114219 : A -> B) (lt2 : type1402 A) (z' : type515 A B) (P1 : type551 A B) (G1 : type548 A B) (H1 : type549 A B) (h1 : term2129 A B lt2 z' P1 G1 H1) : term3137 A B P1 G1 lt2 z' _114218 H1 _114219.
Proof. exact (@lem8379574 A B _114218 lt2 z' P1 G1 H1 h1 _114219). Qed.
Lemma lem8379576 {A B : Type'} (P1 : type551 A B) (G1 : type548 A B) (lt2 : type1402 A) (z' : type515 A B) (_114218 : A -> B) (H1 : type549 A B) (_114219 : A -> B) : (term3137 A B P1 G1 lt2 z' _114218 H1 _114219) = (term3124 A B P1 G1 lt2 z' _114218 H1 _114219).
Proof. exact (eq_refl (term3137 A B P1 G1 lt2 z' _114218 H1 _114219)). Qed.
Lemma lem8379577 {A B : Type'} (_114218 : A -> B) (_114219 : A -> B) (lt2 : type1402 A) (z' : type515 A B) (P1 : type551 A B) (G1 : type548 A B) (H1 : type549 A B) (h1 : term2129 A B lt2 z' P1 G1 H1) : term3124 A B P1 G1 lt2 z' _114218 H1 _114219.
Proof. exact (EQ_MP (@lem8379576 A B P1 G1 lt2 z' _114218 H1 _114219) (@lem8379575 A B _114218 _114219 lt2 z' P1 G1 H1 h1)). Qed.
Lemma lem8379578 {A B : Type'} (_114218 : A -> B) (_114219 : A -> B) (_114220 : A) (lt2 : type1402 A) (z' : type515 A B) (P1 : type551 A B) (G1 : type548 A B) (H1 : type549 A B) (h1 : term2129 A B lt2 z' P1 G1 H1) : term3138 A B P1 G1 lt2 z' _114218 H1 _114219 _114220.
Proof. exact (@lem8379577 A B _114218 _114219 lt2 z' P1 G1 H1 h1 _114220). Qed.
Lemma lem8379579 {A B : Type'} (P1 : type551 A B) (G1 : type548 A B) (lt2 : type1402 A) (z' : type515 A B) (_114218 : A -> B) (H1 : type549 A B) (_114219 : A -> B) (_114220 : A) : (term3138 A B P1 G1 lt2 z' _114218 H1 _114219 _114220) = (term3122 A B P1 G1 lt2 z' _114218 H1 _114219 _114220).
Proof. exact (eq_refl (term3138 A B P1 G1 lt2 z' _114218 H1 _114219 _114220)). Qed.
Lemma lem8379580 {A B : Type'} (_114218 : A -> B) (_114219 : A -> B) (_114220 : A) (lt2 : type1402 A) (z' : type515 A B) (P1 : type551 A B) (G1 : type548 A B) (H1 : type549 A B) (h1 : term2129 A B lt2 z' P1 G1 H1) : term3122 A B P1 G1 lt2 z' _114218 H1 _114219 _114220.
Proof. exact (EQ_MP (@lem8379579 A B P1 G1 lt2 z' _114218 H1 _114219 _114220) (@lem8379578 A B _114218 _114219 _114220 lt2 z' P1 G1 H1 h1)). Qed.
Lemma lem8379608 {A B P : Type'} (_114230 : A) (s : P -> A) (lt2 : type1402 A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (H1 : type549 A B) (g : A -> B) (x : A) (h1 : term2917 A B P s lt2 P1 G1 f H1 g x) : term3135 A B lt2 x f g _114230.
Proof. exact (@lem8377721 A B P s lt2 P1 G1 f H1 g x h1 _114230). Qed.
Lemma lem8379609 {A B : Type'} (lt2 : type1402 A) (x : A) (f : A -> B) (g : A -> B) (_114230 : A) : (term3135 A B lt2 x f g _114230) = (term2912 A B lt2 x f g _114230).
Proof. exact (eq_refl (term3135 A B lt2 x f g _114230)). Qed.
Lemma lem8379647 {A B : Type'} (_114243 : A -> B) (lt2 : type1402 A) (z' : type515 A B) (P1 : type551 A B) (G1 : type548 A B) (H1 : type549 A B) (h1 : term2129 A B lt2 z' P1 G1 H1) : term3136 A B P1 G1 lt2 z' H1 _114243.
Proof. exact (@lem8378005 A B lt2 z' P1 G1 H1 h1 _114243). Qed.
Lemma lem8379648 {A B : Type'} (P1 : type551 A B) (G1 : type548 A B) (lt2 : type1402 A) (z' : type515 A B) (_114243 : A -> B) (H1 : type549 A B) : (term3136 A B P1 G1 lt2 z' H1 _114243) = (term3126 A B P1 G1 lt2 z' _114243 H1).
Proof. exact (eq_refl (term3136 A B P1 G1 lt2 z' H1 _114243)). Qed.
Lemma lem8379649 {A B : Type'} (_114243 : A -> B) (lt2 : type1402 A) (z' : type515 A B) (P1 : type551 A B) (G1 : type548 A B) (H1 : type549 A B) (h1 : term2129 A B lt2 z' P1 G1 H1) : term3126 A B P1 G1 lt2 z' _114243 H1.
Proof. exact (EQ_MP (@lem8379648 A B P1 G1 lt2 z' _114243 H1) (@lem8379647 A B _114243 lt2 z' P1 G1 H1 h1)). Qed.
Lemma lem8379650 {A B : Type'} (_114243 : A -> B) (_114244 : A -> B) (lt2 : type1402 A) (z' : type515 A B) (P1 : type551 A B) (G1 : type548 A B) (H1 : type549 A B) (h1 : term2129 A B lt2 z' P1 G1 H1) : term3137 A B P1 G1 lt2 z' _114243 H1 _114244.
Proof. exact (@lem8379649 A B _114243 lt2 z' P1 G1 H1 h1 _114244). Qed.
Lemma lem8379651 {A B : Type'} (P1 : type551 A B) (G1 : type548 A B) (lt2 : type1402 A) (z' : type515 A B) (_114243 : A -> B) (H1 : type549 A B) (_114244 : A -> B) : (term3137 A B P1 G1 lt2 z' _114243 H1 _114244) = (term3124 A B P1 G1 lt2 z' _114243 H1 _114244).
Proof. exact (eq_refl (term3137 A B P1 G1 lt2 z' _114243 H1 _114244)). Qed.
Lemma lem8379652 {A B : Type'} (_114243 : A -> B) (_114244 : A -> B) (lt2 : type1402 A) (z' : type515 A B) (P1 : type551 A B) (G1 : type548 A B) (H1 : type549 A B) (h1 : term2129 A B lt2 z' P1 G1 H1) : term3124 A B P1 G1 lt2 z' _114243 H1 _114244.
Proof. exact (EQ_MP (@lem8379651 A B P1 G1 lt2 z' _114243 H1 _114244) (@lem8379650 A B _114243 _114244 lt2 z' P1 G1 H1 h1)). Qed.
Lemma lem8379653 {A B : Type'} (_114243 : A -> B) (_114244 : A -> B) (_114245 : A) (lt2 : type1402 A) (z' : type515 A B) (P1 : type551 A B) (G1 : type548 A B) (H1 : type549 A B) (h1 : term2129 A B lt2 z' P1 G1 H1) : term3138 A B P1 G1 lt2 z' _114243 H1 _114244 _114245.
Proof. exact (@lem8379652 A B _114243 _114244 lt2 z' P1 G1 H1 h1 _114245). Qed.
Lemma lem8379654 {A B : Type'} (P1 : type551 A B) (G1 : type548 A B) (lt2 : type1402 A) (z' : type515 A B) (_114243 : A -> B) (H1 : type549 A B) (_114244 : A -> B) (_114245 : A) : (term3138 A B P1 G1 lt2 z' _114243 H1 _114244 _114245) = (term3122 A B P1 G1 lt2 z' _114243 H1 _114244 _114245).
Proof. exact (eq_refl (term3138 A B P1 G1 lt2 z' _114243 H1 _114244 _114245)). Qed.
Lemma lem8379655 {A B : Type'} (_114243 : A -> B) (_114244 : A -> B) (_114245 : A) (lt2 : type1402 A) (z' : type515 A B) (P1 : type551 A B) (G1 : type548 A B) (H1 : type549 A B) (h1 : term2129 A B lt2 z' P1 G1 H1) : term3122 A B P1 G1 lt2 z' _114243 H1 _114244 _114245.
Proof. exact (EQ_MP (@lem8379654 A B P1 G1 lt2 z' _114243 H1 _114244 _114245) (@lem8379653 A B _114243 _114244 _114245 lt2 z' P1 G1 H1 h1)). Qed.
Lemma lem8379683 {A B P : Type'} (_114255 : A) (s : P -> A) (lt2 : type1402 A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (H1 : type549 A B) (g : A -> B) (x : A) (h1 : term2917 A B P s lt2 P1 G1 f H1 g x) : term3135 A B lt2 x f g _114255.
Proof. exact (@lem8378089 A B P s lt2 P1 G1 f H1 g x h1 _114255). Qed.
Lemma lem8379684 {A B : Type'} (lt2 : type1402 A) (x : A) (f : A -> B) (g : A -> B) (_114255 : A) : (term3135 A B lt2 x f g _114255) = (term2912 A B lt2 x f g _114255).
Proof. exact (eq_refl (term3135 A B lt2 x f g _114255)). Qed.
Lemma lem8379722 {A B : Type'} (_114268 : A -> B) (lt2 : type1402 A) (z' : type515 A B) (P1 : type551 A B) (G1 : type548 A B) (H1 : type549 A B) (h1 : term2129 A B lt2 z' P1 G1 H1) : term3136 A B P1 G1 lt2 z' H1 _114268.
Proof. exact (@lem8378369 A B lt2 z' P1 G1 H1 h1 _114268). Qed.
Lemma lem8379723 {A B : Type'} (P1 : type551 A B) (G1 : type548 A B) (lt2 : type1402 A) (z' : type515 A B) (_114268 : A -> B) (H1 : type549 A B) : (term3136 A B P1 G1 lt2 z' H1 _114268) = (term3126 A B P1 G1 lt2 z' _114268 H1).
Proof. exact (eq_refl (term3136 A B P1 G1 lt2 z' H1 _114268)). Qed.
Lemma lem8379724 {A B : Type'} (_114268 : A -> B) (lt2 : type1402 A) (z' : type515 A B) (P1 : type551 A B) (G1 : type548 A B) (H1 : type549 A B) (h1 : term2129 A B lt2 z' P1 G1 H1) : term3126 A B P1 G1 lt2 z' _114268 H1.
Proof. exact (EQ_MP (@lem8379723 A B P1 G1 lt2 z' _114268 H1) (@lem8379722 A B _114268 lt2 z' P1 G1 H1 h1)). Qed.
Lemma lem8379725 {A B : Type'} (_114268 : A -> B) (_114269 : A -> B) (lt2 : type1402 A) (z' : type515 A B) (P1 : type551 A B) (G1 : type548 A B) (H1 : type549 A B) (h1 : term2129 A B lt2 z' P1 G1 H1) : term3137 A B P1 G1 lt2 z' _114268 H1 _114269.
Proof. exact (@lem8379724 A B _114268 lt2 z' P1 G1 H1 h1 _114269). Qed.
Lemma lem8379726 {A B : Type'} (P1 : type551 A B) (G1 : type548 A B) (lt2 : type1402 A) (z' : type515 A B) (_114268 : A -> B) (H1 : type549 A B) (_114269 : A -> B) : (term3137 A B P1 G1 lt2 z' _114268 H1 _114269) = (term3124 A B P1 G1 lt2 z' _114268 H1 _114269).
Proof. exact (eq_refl (term3137 A B P1 G1 lt2 z' _114268 H1 _114269)). Qed.
Lemma lem8379727 {A B : Type'} (_114268 : A -> B) (_114269 : A -> B) (lt2 : type1402 A) (z' : type515 A B) (P1 : type551 A B) (G1 : type548 A B) (H1 : type549 A B) (h1 : term2129 A B lt2 z' P1 G1 H1) : term3124 A B P1 G1 lt2 z' _114268 H1 _114269.
Proof. exact (EQ_MP (@lem8379726 A B P1 G1 lt2 z' _114268 H1 _114269) (@lem8379725 A B _114268 _114269 lt2 z' P1 G1 H1 h1)). Qed.
Lemma lem8379728 {A B : Type'} (_114268 : A -> B) (_114269 : A -> B) (_114270 : A) (lt2 : type1402 A) (z' : type515 A B) (P1 : type551 A B) (G1 : type548 A B) (H1 : type549 A B) (h1 : term2129 A B lt2 z' P1 G1 H1) : term3138 A B P1 G1 lt2 z' _114268 H1 _114269 _114270.
Proof. exact (@lem8379727 A B _114268 _114269 lt2 z' P1 G1 H1 h1 _114270). Qed.
Lemma lem8379729 {A B : Type'} (P1 : type551 A B) (G1 : type548 A B) (lt2 : type1402 A) (z' : type515 A B) (_114268 : A -> B) (H1 : type549 A B) (_114269 : A -> B) (_114270 : A) : (term3138 A B P1 G1 lt2 z' _114268 H1 _114269 _114270) = (term3122 A B P1 G1 lt2 z' _114268 H1 _114269 _114270).
Proof. exact (eq_refl (term3138 A B P1 G1 lt2 z' _114268 H1 _114269 _114270)). Qed.
Lemma lem8379730 {A B : Type'} (_114268 : A -> B) (_114269 : A -> B) (_114270 : A) (lt2 : type1402 A) (z' : type515 A B) (P1 : type551 A B) (G1 : type548 A B) (H1 : type549 A B) (h1 : term2129 A B lt2 z' P1 G1 H1) : term3122 A B P1 G1 lt2 z' _114268 H1 _114269 _114270.
Proof. exact (EQ_MP (@lem8379729 A B P1 G1 lt2 z' _114268 H1 _114269 _114270) (@lem8379728 A B _114268 _114269 _114270 lt2 z' P1 G1 H1 h1)). Qed.
Lemma lem8379758 {A B P : Type'} (_114280 : A) (s : P -> A) (lt2 : type1402 A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (H1 : type549 A B) (g : A -> B) (x : A) (h1 : term2917 A B P s lt2 P1 G1 f H1 g x) : term3135 A B lt2 x f g _114280.
Proof. exact (@lem8378453 A B P s lt2 P1 G1 f H1 g x h1 _114280). Qed.
Lemma lem8379759 {A B : Type'} (lt2 : type1402 A) (x : A) (f : A -> B) (g : A -> B) (_114280 : A) : (term3135 A B lt2 x f g _114280) = (term2912 A B lt2 x f g _114280).
Proof. exact (eq_refl (term3135 A B lt2 x f g _114280)). Qed.
Lemma lem8379761 {A P : Type'} (_114281 : P -> A) (_114084 : type794 A P) (h1 : term1491 A P _114084) : term3129 A P _114084 _114281.
Proof. exact (@lem8378505 A P _114084 h1 _114281). Qed.
Lemma lem8379762 {A P : Type'} (_114084 : type794 A P) (_114281 : P -> A) : (term3129 A P _114084 _114281) = (term3070 A P _114084 _114281).
Proof. exact (eq_refl (term3129 A P _114084 _114281)). Qed.
Lemma lem8379763 {A P : Type'} (_114281 : P -> A) (_114084 : type794 A P) (h1 : term1491 A P _114084) : term3070 A P _114084 _114281.
Proof. exact (EQ_MP (@lem8379762 A P _114084 _114281) (@lem8379761 A P _114281 _114084 h1)). Qed.
Lemma lem8379764 {A P : Type'} (_114281 : P -> A) (_114282 : A) (_114084 : type794 A P) (h1 : term1491 A P _114084) : term3130 A P _114084 _114281 _114282.
Proof. exact (@lem8379763 A P _114281 _114084 h1 _114282). Qed.
Lemma lem8379765 {A P : Type'} (_114084 : type794 A P) (_114281 : P -> A) (_114282 : A) : (term3130 A P _114084 _114281 _114282) = (term3068 A P _114084 _114281 _114282).
Proof. exact (eq_refl (term3130 A P _114084 _114281 _114282)). Qed.
Lemma lem8379766 {A P : Type'} (_114281 : P -> A) (_114282 : A) (_114084 : type794 A P) (h1 : term1491 A P _114084) : term3068 A P _114084 _114281 _114282.
Proof. exact (EQ_MP (@lem8379765 A P _114084 _114281 _114282) (@lem8379764 A P _114281 _114282 _114084 h1)). Qed.
Lemma lem8379767 {A P : Type'} (_114281 : P -> A) (_114282 : A) (_114283 : P) (_114084 : type794 A P) (h1 : term1491 A P _114084) : term3131 A P _114084 _114281 _114282 _114283.
Proof. exact (@lem8379766 A P _114281 _114282 _114084 h1 _114283). Qed.
Lemma lem8379768 {A P : Type'} (_114283 : P) (_114084 : type794 A P) (_114281 : P -> A) (_114282 : A) : (term3131 A P _114084 _114281 _114282 _114283) = (term3065 A P _114283 _114084 _114281 _114282).
Proof. exact (eq_refl (term3131 A P _114084 _114281 _114282 _114283)). Qed.
Lemma lem8379779 {A B P : Type'} (_114287 : A -> B) (P2 : type560 A B P) (G2 : type557 A B P) (lt2 : type1402 A) (s : P -> A) (h1 : term1420 A B P P2 G2 lt2 s) : term3139 A B P P2 G2 lt2 s _114287.
Proof. exact (@lem8378555 A B P P2 G2 lt2 s h1 _114287). Qed.
Lemma lem8379780 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (_114287 : A -> B) (lt2 : type1402 A) (s : P -> A) : (term3139 A B P P2 G2 lt2 s _114287) = (term2862 A B P P2 G2 _114287 lt2 s).
Proof. exact (eq_refl (term3139 A B P P2 G2 lt2 s _114287)). Qed.
Lemma lem8379781 {A B P : Type'} (_114287 : A -> B) (P2 : type560 A B P) (G2 : type557 A B P) (lt2 : type1402 A) (s : P -> A) (h1 : term1420 A B P P2 G2 lt2 s) : term2862 A B P P2 G2 _114287 lt2 s.
Proof. exact (EQ_MP (@lem8379780 A B P P2 G2 _114287 lt2 s) (@lem8379779 A B P _114287 P2 G2 lt2 s h1)). Qed.
Lemma lem8379782 {A B P : Type'} (_114287 : A -> B) (_114288 : P) (P2 : type560 A B P) (G2 : type557 A B P) (lt2 : type1402 A) (s : P -> A) (h1 : term1420 A B P P2 G2 lt2 s) : term3140 A B P P2 G2 _114287 lt2 s _114288.
Proof. exact (@lem8379781 A B P _114287 P2 G2 lt2 s h1 _114288). Qed.
Lemma lem8379783 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (_114287 : A -> B) (lt2 : type1402 A) (s : P -> A) (_114288 : P) : (term3140 A B P P2 G2 _114287 lt2 s _114288) = (term2860 A B P P2 G2 _114287 lt2 s _114288).
Proof. exact (eq_refl (term3140 A B P P2 G2 _114287 lt2 s _114288)). Qed.
Lemma lem8379784 {A B P : Type'} (_114287 : A -> B) (_114288 : P) (P2 : type560 A B P) (G2 : type557 A B P) (lt2 : type1402 A) (s : P -> A) (h1 : term1420 A B P P2 G2 lt2 s) : term2860 A B P P2 G2 _114287 lt2 s _114288.
Proof. exact (EQ_MP (@lem8379783 A B P P2 G2 _114287 lt2 s _114288) (@lem8379782 A B P _114287 _114288 P2 G2 lt2 s h1)). Qed.
Lemma lem8379785 {A B P : Type'} (_114287 : A -> B) (_114288 : P) (_114289 : A) (P2 : type560 A B P) (G2 : type557 A B P) (lt2 : type1402 A) (s : P -> A) (h1 : term1420 A B P P2 G2 lt2 s) : term3141 A B P P2 G2 _114287 lt2 s _114288 _114289.
Proof. exact (@lem8379784 A B P _114287 _114288 P2 G2 lt2 s h1 _114289). Qed.
Lemma lem8379786 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (_114287 : A -> B) (lt2 : type1402 A) (_114289 : A) (s : P -> A) (_114288 : P) : (term3141 A B P P2 G2 _114287 lt2 s _114288 _114289) = (term2858 A B P P2 G2 _114287 lt2 _114289 s _114288).
Proof. exact (eq_refl (term3141 A B P P2 G2 _114287 lt2 s _114288 _114289)). Qed.
Lemma lem8379787 {A B P : Type'} (_114287 : A -> B) (_114289 : A) (_114288 : P) (P2 : type560 A B P) (G2 : type557 A B P) (lt2 : type1402 A) (s : P -> A) (h1 : term1420 A B P P2 G2 lt2 s) : term2858 A B P P2 G2 _114287 lt2 _114289 s _114288.
Proof. exact (EQ_MP (@lem8379786 A B P P2 G2 _114287 lt2 _114289 s _114288) (@lem8379785 A B P _114287 _114288 _114289 P2 G2 lt2 s h1)). Qed.
Lemma lem8379839 {A B : Type'} (_114307 : A -> B) (P1 : type551 A B) (G1 : type548 A B) (lt2 : type1402 A) (h1 : term1418 A B P1 G1 lt2) : term3142 A B P1 G1 lt2 _114307.
Proof. exact (@lem8378886 A B P1 G1 lt2 h1 _114307). Qed.
Lemma lem8379840 {A B : Type'} (P1 : type551 A B) (G1 : type548 A B) (_114307 : A -> B) (lt2 : type1402 A) : (term3142 A B P1 G1 lt2 _114307) = (term2839 A B P1 G1 _114307 lt2).
Proof. exact (eq_refl (term3142 A B P1 G1 lt2 _114307)). Qed.
Lemma lem8379841 {A B : Type'} (_114307 : A -> B) (P1 : type551 A B) (G1 : type548 A B) (lt2 : type1402 A) (h1 : term1418 A B P1 G1 lt2) : term2839 A B P1 G1 _114307 lt2.
Proof. exact (EQ_MP (@lem8379840 A B P1 G1 _114307 lt2) (@lem8379839 A B _114307 P1 G1 lt2 h1)). Qed.
Lemma lem8379842 {A B : Type'} (_114307 : A -> B) (_114308 : A) (P1 : type551 A B) (G1 : type548 A B) (lt2 : type1402 A) (h1 : term1418 A B P1 G1 lt2) : term3143 A B P1 G1 _114307 lt2 _114308.
Proof. exact (@lem8379841 A B _114307 P1 G1 lt2 h1 _114308). Qed.
Lemma lem8379843 {A B : Type'} (P1 : type551 A B) (G1 : type548 A B) (_114307 : A -> B) (lt2 : type1402 A) (_114308 : A) : (term3143 A B P1 G1 _114307 lt2 _114308) = (term2837 A B P1 G1 _114307 lt2 _114308).
Proof. exact (eq_refl (term3143 A B P1 G1 _114307 lt2 _114308)). Qed.
Lemma lem8379844 {A B : Type'} (_114307 : A -> B) (_114308 : A) (P1 : type551 A B) (G1 : type548 A B) (lt2 : type1402 A) (h1 : term1418 A B P1 G1 lt2) : term2837 A B P1 G1 _114307 lt2 _114308.
Proof. exact (EQ_MP (@lem8379843 A B P1 G1 _114307 lt2 _114308) (@lem8379842 A B _114307 _114308 P1 G1 lt2 h1)). Qed.
Lemma lem8379845 {A B : Type'} (_114307 : A -> B) (_114308 : A) (_114309 : A) (P1 : type551 A B) (G1 : type548 A B) (lt2 : type1402 A) (h1 : term1418 A B P1 G1 lt2) : term3144 A B P1 G1 _114307 lt2 _114308 _114309.
Proof. exact (@lem8379844 A B _114307 _114308 P1 G1 lt2 h1 _114309). Qed.
Lemma lem8379846 {A B : Type'} (P1 : type551 A B) (G1 : type548 A B) (_114307 : A -> B) (lt2 : type1402 A) (_114309 : A) (_114308 : A) : (term3144 A B P1 G1 _114307 lt2 _114308 _114309) = (term2835 A B P1 G1 _114307 lt2 _114309 _114308).
Proof. exact (eq_refl (term3144 A B P1 G1 _114307 lt2 _114308 _114309)). Qed.
Lemma lem8379847 {A B : Type'} (_114307 : A -> B) (_114309 : A) (_114308 : A) (P1 : type551 A B) (G1 : type548 A B) (lt2 : type1402 A) (h1 : term1418 A B P1 G1 lt2) : term2835 A B P1 G1 _114307 lt2 _114309 _114308.
Proof. exact (EQ_MP (@lem8379846 A B P1 G1 _114307 lt2 _114309 _114308) (@lem8379845 A B _114307 _114308 _114309 P1 G1 lt2 h1)). Qed.
Lemma lem8379917 {A B P : Type'} (_114094 : A -> B) (_114095 : A -> B) (_114096 : P) (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (h1 : term2270 A B P lt2 s z P2 G2 H2) : term3091 A B P lt2 s z _114094 P2 _114095 _114096.
Proof. exact (proj1 (@lem8379208 A B P _114094 _114095 _114096 lt2 s z P2 G2 H2 h1)). Qed.
Lemma lem8379924 {A B P : Type'} (_114094 : A -> B) (_114095 : A -> B) (_114096 : P) (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (h1 : term2270 A B P lt2 s z P2 G2 H2) : term3086 A B P lt2 s z _114094 P2 _114095 _114096.
Proof. exact (proj2 (@lem8379917 A B P _114094 _114095 _114096 lt2 s z P2 G2 H2 h1)). Qed.
Lemma lem8379945 {A B P : Type'} (_114118 : A -> B) (_114119 : A -> B) (_114120 : P) (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (h1 : term2270 A B P lt2 s z P2 G2 H2) : term3091 A B P lt2 s z _114118 P2 _114119 _114120.
Proof. exact (proj1 (@lem8379280 A B P _114118 _114119 _114120 lt2 s z P2 G2 H2 h1)). Qed.
Lemma lem8379953 {A B P : Type'} (_114118 : A -> B) (_114119 : A -> B) (_114120 : P) (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (h1 : term2270 A B P lt2 s z P2 G2 H2) : term3088 A B P lt2 s z _114118 P2 _114119 _114120.
Proof. exact (proj1 (@lem8379945 A B P _114118 _114119 _114120 lt2 s z P2 G2 H2 h1)). Qed.
Lemma lem8379972 {A B P : Type'} (_114142 : A -> B) (_114143 : A -> B) (_114144 : P) (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (h1 : term2270 A B P lt2 s z P2 G2 H2) : term3082 A B P G2 lt2 s z _114142 H2 _114143 _114144.
Proof. exact (proj2 (@lem8379352 A B P _114142 _114143 _114144 lt2 s z P2 G2 H2 h1)). Qed.
Lemma lem8379975 {A B P : Type'} (_114142 : A -> B) (_114143 : A -> B) (_114144 : P) (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (h1 : term2270 A B P lt2 s z P2 G2 H2) : term3079 A B P lt2 s z _114142 G2 _114143 _114144.
Proof. exact (proj1 (@lem8379972 A B P _114142 _114143 _114144 lt2 s z P2 G2 H2 h1)). Qed.
Lemma lem8380000 {A B P : Type'} (_114166 : A -> B) (_114167 : A -> B) (_114168 : P) (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (h1 : term2270 A B P lt2 s z P2 G2 H2) : term3082 A B P G2 lt2 s z _114166 H2 _114167 _114168.
Proof. exact (proj2 (@lem8379424 A B P _114166 _114167 _114168 lt2 s z P2 G2 H2 h1)). Qed.
Lemma lem8380002 {A B P : Type'} (_114166 : A -> B) (_114167 : A -> B) (_114168 : P) (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (h1 : term2270 A B P lt2 s z P2 G2 H2) : term3077 A B P lt2 s z _114166 H2 _114167 _114168.
Proof. exact (proj2 (@lem8380000 A B P _114166 _114167 _114168 lt2 s z P2 G2 H2 h1)). Qed.
Lemma lem8380015 {A B : Type'} (_114193 : A -> B) (_114194 : A -> B) (_114195 : A) (lt2 : type1402 A) (z' : type515 A B) (P1 : type551 A B) (G1 : type548 A B) (H1 : type549 A B) (h1 : term2129 A B lt2 z' P1 G1 H1) : term3119 A B lt2 z' _114193 P1 _114194 _114195.
Proof. exact (proj1 (@lem8379505 A B _114193 _114194 _114195 lt2 z' P1 G1 H1 h1)). Qed.
Lemma lem8380022 {A B : Type'} (_114193 : A -> B) (_114194 : A -> B) (_114195 : A) (lt2 : type1402 A) (z' : type515 A B) (P1 : type551 A B) (G1 : type548 A B) (H1 : type549 A B) (h1 : term2129 A B lt2 z' P1 G1 H1) : term3114 A B lt2 z' _114193 P1 _114194 _114195.
Proof. exact (proj2 (@lem8380015 A B _114193 _114194 _114195 lt2 z' P1 G1 H1 h1)). Qed.
Lemma lem8380043 {A B : Type'} (_114218 : A -> B) (_114219 : A -> B) (_114220 : A) (lt2 : type1402 A) (z' : type515 A B) (P1 : type551 A B) (G1 : type548 A B) (H1 : type549 A B) (h1 : term2129 A B lt2 z' P1 G1 H1) : term3119 A B lt2 z' _114218 P1 _114219 _114220.
Proof. exact (proj1 (@lem8379580 A B _114218 _114219 _114220 lt2 z' P1 G1 H1 h1)). Qed.
Lemma lem8380051 {A B : Type'} (_114218 : A -> B) (_114219 : A -> B) (_114220 : A) (lt2 : type1402 A) (z' : type515 A B) (P1 : type551 A B) (G1 : type548 A B) (H1 : type549 A B) (h1 : term2129 A B lt2 z' P1 G1 H1) : term3116 A B lt2 z' _114218 P1 _114219 _114220.
Proof. exact (proj1 (@lem8380043 A B _114218 _114219 _114220 lt2 z' P1 G1 H1 h1)). Qed.
Lemma lem8380070 {A B : Type'} (_114243 : A -> B) (_114244 : A -> B) (_114245 : A) (lt2 : type1402 A) (z' : type515 A B) (P1 : type551 A B) (G1 : type548 A B) (H1 : type549 A B) (h1 : term2129 A B lt2 z' P1 G1 H1) : term3110 A B G1 lt2 z' _114243 H1 _114244 _114245.
Proof. exact (proj2 (@lem8379655 A B _114243 _114244 _114245 lt2 z' P1 G1 H1 h1)). Qed.
Lemma lem8380073 {A B : Type'} (_114243 : A -> B) (_114244 : A -> B) (_114245 : A) (lt2 : type1402 A) (z' : type515 A B) (P1 : type551 A B) (G1 : type548 A B) (H1 : type549 A B) (h1 : term2129 A B lt2 z' P1 G1 H1) : term3107 A B lt2 z' _114243 G1 _114244 _114245.
Proof. exact (proj1 (@lem8380070 A B _114243 _114244 _114245 lt2 z' P1 G1 H1 h1)). Qed.
Lemma lem8380098 {A B : Type'} (_114268 : A -> B) (_114269 : A -> B) (_114270 : A) (lt2 : type1402 A) (z' : type515 A B) (P1 : type551 A B) (G1 : type548 A B) (H1 : type549 A B) (h1 : term2129 A B lt2 z' P1 G1 H1) : term3110 A B G1 lt2 z' _114268 H1 _114269 _114270.
Proof. exact (proj2 (@lem8379730 A B _114268 _114269 _114270 lt2 z' P1 G1 H1 h1)). Qed.
Lemma lem8380100 {A B : Type'} (_114268 : A -> B) (_114269 : A -> B) (_114270 : A) (lt2 : type1402 A) (z' : type515 A B) (P1 : type551 A B) (G1 : type548 A B) (H1 : type549 A B) (h1 : term2129 A B lt2 z' P1 G1 H1) : term3105 A B lt2 z' _114268 H1 _114269 _114270.
Proof. exact (proj2 (@lem8380098 A B _114268 _114269 _114270 lt2 z' P1 G1 H1 h1)). Qed.
Lemma lem8380237 {A B P : Type'} (y : P) (lt2 : type1402 A) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (_114084 : type794 A P) (s : P -> A) (x : A) (h1 : term2944 A B P y lt2 P2 G2 f H2 g _114084 s x) : (@I (P -> A) s y) = x.
Proof. exact (proj1 (@lem8375498 A B P y lt2 P2 G2 f H2 g _114084 s x h1)). Qed.
Lemma lem8380243 {A B P : Type'} (_114108 : A) (y : P) (lt2 : type1402 A) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (_114084 : type794 A P) (s : P -> A) (x : A) (h1 : term2944 A B P y lt2 P2 G2 f H2 g _114084 s x) : term2912 A B lt2 x f g _114108.
Proof. exact (EQ_MP (@lem8379243 A B lt2 x f g _114108) (@lem8379242 A B P _114108 y lt2 P2 G2 f H2 g _114084 s x h1)). Qed.
Lemma lem8380245 {A B P : Type'} (f : A -> B) (P2 : type560 A B P) (g : A -> B) (_114084 : type794 A P) (s : P -> A) (x : A) (h1 : term2937 A B P f P2 g _114084 s x) : term2880 A B P P2 f _114084 s x.
Proof. exact (proj1 (@lem8375506 A B P f P2 g _114084 s x h1)). Qed.
Lemma lem8380247 {A B P : Type'} (f : A -> B) (P2 : type560 A B P) (g : A -> B) (_114084 : type794 A P) (s : P -> A) (x : A) (h1 : term2937 A B P f P2 g _114084 s x) : term2931 A B P P2 g _114084 s x.
Proof. exact (proj2 (@lem8375506 A B P f P2 g _114084 s x h1)). Qed.
Lemma lem8380431 {A B P : Type'} (y : P) (lt2 : type1402 A) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (_114084 : type794 A P) (s : P -> A) (x : A) (h1 : term2944 A B P y lt2 P2 G2 f H2 g _114084 s x) : (@I (P -> A) s y) = x.
Proof. exact (proj1 (@lem8375498 A B P y lt2 P2 G2 f H2 g _114084 s x h1)). Qed.
Lemma lem8380437 {A B P : Type'} (_114132 : A) (y : P) (lt2 : type1402 A) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (_114084 : type794 A P) (s : P -> A) (x : A) (h1 : term2944 A B P y lt2 P2 G2 f H2 g _114084 s x) : term2912 A B lt2 x f g _114132.
Proof. exact (EQ_MP (@lem8379315 A B lt2 x f g _114132) (@lem8379314 A B P _114132 y lt2 P2 G2 f H2 g _114084 s x h1)). Qed.
Lemma lem8380439 {A B P : Type'} (f : A -> B) (P2 : type560 A B P) (g : A -> B) (_114084 : type794 A P) (s : P -> A) (x : A) (h1 : term2935 A B P f P2 g _114084 s x) : term2931 A B P P2 f _114084 s x.
Proof. exact (proj1 (@lem8375507 A B P f P2 g _114084 s x h1)). Qed.
Lemma lem8380441 {A B P : Type'} (f : A -> B) (P2 : type560 A B P) (g : A -> B) (_114084 : type794 A P) (s : P -> A) (x : A) (h1 : term2935 A B P f P2 g _114084 s x) : term2880 A B P P2 g _114084 s x.
Proof. exact (proj2 (@lem8375507 A B P f P2 g _114084 s x h1)). Qed.
Lemma lem8380625 {A B P : Type'} (y : P) (lt2 : type1402 A) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (_114084 : type794 A P) (s : P -> A) (x : A) (h1 : term2944 A B P y lt2 P2 G2 f H2 g _114084 s x) : (@I (P -> A) s y) = x.
Proof. exact (proj1 (@lem8375498 A B P y lt2 P2 G2 f H2 g _114084 s x h1)). Qed.
Lemma lem8380631 {A B P : Type'} (_114156 : A) (y : P) (lt2 : type1402 A) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (_114084 : type794 A P) (s : P -> A) (x : A) (h1 : term2944 A B P y lt2 P2 G2 f H2 g _114084 s x) : term2912 A B lt2 x f g _114156.
Proof. exact (EQ_MP (@lem8379387 A B lt2 x f g _114156) (@lem8379386 A B P _114156 y lt2 P2 G2 f H2 g _114084 s x h1)). Qed.
Lemma lem8380633 {A B P : Type'} (f : A -> B) (G2 : type557 A B P) (g : A -> B) (_114084 : type794 A P) (s : P -> A) (x : A) (h1 : term2926 A B P f G2 g _114084 s x) : term2926 A B P f G2 g _114084 s x.
Proof. exact (h1). Qed.
Lemma lem8380817 {A B P : Type'} (y : P) (lt2 : type1402 A) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (_114084 : type794 A P) (s : P -> A) (x : A) (h1 : term2944 A B P y lt2 P2 G2 f H2 g _114084 s x) : (@I (P -> A) s y) = x.
Proof. exact (proj1 (@lem8375498 A B P y lt2 P2 G2 f H2 g _114084 s x h1)). Qed.
Lemma lem8380823 {A B P : Type'} (_114180 : A) (y : P) (lt2 : type1402 A) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (_114084 : type794 A P) (s : P -> A) (x : A) (h1 : term2944 A B P y lt2 P2 G2 f H2 g _114084 s x) : term2912 A B lt2 x f g _114180.
Proof. exact (EQ_MP (@lem8379459 A B lt2 x f g _114180) (@lem8379458 A B P _114180 y lt2 P2 G2 f H2 g _114084 s x h1)). Qed.
Lemma lem8380825 {A B P : Type'} (f : A -> B) (H2 : type558 A B P) (g : A -> B) (_114084 : type794 A P) (s : P -> A) (x : A) (h1 : term2923 A B P f H2 g _114084 s x) : term2923 A B P f H2 g _114084 s x.
Proof. exact (h1). Qed.
Lemma lem8381015 {A B P : Type'} (_114205 : A) (s : P -> A) (lt2 : type1402 A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (H1 : type549 A B) (g : A -> B) (x : A) (h1 : term2917 A B P s lt2 P1 G1 f H1 g x) : term2912 A B lt2 x f g _114205.
Proof. exact (EQ_MP (@lem8379534 A B lt2 x f g _114205) (@lem8379533 A B P _114205 s lt2 P1 G1 f H1 g x h1)). Qed.
Lemma lem8381019 {A B : Type'} (f : A -> B) (P1 : type551 A B) (g : A -> B) (x : A) (h1 : term2905 A B f P1 g x) : term2830 A B P1 g x.
Proof. exact (proj2 (@lem8375520 A B f P1 g x h1)). Qed.
Lemma lem8381053 {A B : Type'} (_114193 : A -> B) (_114194 : A -> B) (_114195 : A) (lt2 : type1402 A) (z' : type515 A B) (P1 : type551 A B) (G1 : type548 A B) (H1 : type549 A B) (h1 : term2129 A B lt2 z' P1 G1 H1) : term3145 A B lt2 z' _114193 P1 _114194 _114195.
Proof. exact (proj1 (@lem8380022 A B _114193 _114194 _114195 lt2 z' P1 G1 H1 h1)). Qed.
Lemma lem8381063 {A B : Type'} (_114193 : A -> B) (_114194 : A -> B) (_114195 : A) (lt2 : type1402 A) (z' : type515 A B) (P1 : type551 A B) (G1 : type548 A B) (H1 : type549 A B) (h1 : term2129 A B lt2 z' P1 G1 H1) : term3146 A B z' _114193 P1 _114194 _114195.
Proof. exact (proj2 (@lem8380022 A B _114193 _114194 _114195 lt2 z' P1 G1 H1 h1)). Qed.
Lemma lem8381209 {A B P : Type'} (_114230 : A) (s : P -> A) (lt2 : type1402 A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (H1 : type549 A B) (g : A -> B) (x : A) (h1 : term2917 A B P s lt2 P1 G1 f H1 g x) : term2912 A B lt2 x f g _114230.
Proof. exact (EQ_MP (@lem8379609 A B lt2 x f g _114230) (@lem8379608 A B P _114230 s lt2 P1 G1 f H1 g x h1)). Qed.
Lemma lem8381211 {A B : Type'} (f : A -> B) (P1 : type551 A B) (g : A -> B) (x : A) (h1 : term2903 A B f P1 g x) : term2830 A B P1 f x.
Proof. exact (proj1 (@lem8375521 A B f P1 g x h1)). Qed.
Lemma lem8381267 {A B : Type'} (_114218 : A -> B) (_114219 : A -> B) (_114220 : A) (lt2 : type1402 A) (z' : type515 A B) (P1 : type551 A B) (G1 : type548 A B) (H1 : type549 A B) (h1 : term2129 A B lt2 z' P1 G1 H1) : term3147 A B lt2 z' _114218 P1 _114219 _114220.
Proof. exact (proj1 (@lem8380051 A B _114218 _114219 _114220 lt2 z' P1 G1 H1 h1)). Qed.
Lemma lem8381277 {A B : Type'} (_114218 : A -> B) (_114219 : A -> B) (_114220 : A) (lt2 : type1402 A) (z' : type515 A B) (P1 : type551 A B) (G1 : type548 A B) (H1 : type549 A B) (h1 : term2129 A B lt2 z' P1 G1 H1) : term3148 A B z' _114218 P1 _114219 _114220.
Proof. exact (proj2 (@lem8380051 A B _114218 _114219 _114220 lt2 z' P1 G1 H1 h1)). Qed.
Lemma lem8381403 {A B P : Type'} (_114255 : A) (s : P -> A) (lt2 : type1402 A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (H1 : type549 A B) (g : A -> B) (x : A) (h1 : term2917 A B P s lt2 P1 G1 f H1 g x) : term2912 A B lt2 x f g _114255.
Proof. exact (EQ_MP (@lem8379684 A B lt2 x f g _114255) (@lem8379683 A B P _114255 s lt2 P1 G1 f H1 g x h1)). Qed.
Lemma lem8381405 {A B : Type'} (f : A -> B) (G1 : type548 A B) (g : A -> B) (x : A) (h1 : term2896 A B f G1 g x) : term2896 A B f G1 g x.
Proof. exact (h1). Qed.
Lemma lem8381423 {A B : Type'} (_114243 : A -> B) (_114244 : A -> B) (_114245 : A) (lt2 : type1402 A) (z' : type515 A B) (P1 : type551 A B) (G1 : type548 A B) (H1 : type549 A B) (h1 : term2129 A B lt2 z' P1 G1 H1) : term3149 A B lt2 z' _114243 G1 _114244 _114245.
Proof. exact (proj1 (@lem8380073 A B _114243 _114244 _114245 lt2 z' P1 G1 H1 h1)). Qed.
Lemma lem8381429 {A B : Type'} (_114243 : A -> B) (_114244 : A -> B) (_114245 : A) (lt2 : type1402 A) (z' : type515 A B) (P1 : type551 A B) (G1 : type548 A B) (H1 : type549 A B) (h1 : term2129 A B lt2 z' P1 G1 H1) : term3150 A B z' _114243 G1 _114244 _114245.
Proof. exact (proj2 (@lem8380073 A B _114243 _114244 _114245 lt2 z' P1 G1 H1 h1)). Qed.
Lemma lem8381595 {A B P : Type'} (_114280 : A) (s : P -> A) (lt2 : type1402 A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (H1 : type549 A B) (g : A -> B) (x : A) (h1 : term2917 A B P s lt2 P1 G1 f H1 g x) : term2912 A B lt2 x f g _114280.
Proof. exact (EQ_MP (@lem8379759 A B lt2 x f g _114280) (@lem8379758 A B P _114280 s lt2 P1 G1 f H1 g x h1)). Qed.
Lemma lem8381597 {A B : Type'} (f : A -> B) (H1 : type549 A B) (g : A -> B) (x : A) (h1 : term2893 A B f H1 g x) : term2893 A B f H1 g x.
Proof. exact (h1). Qed.
Lemma lem8381603 {A B : Type'} (_114268 : A -> B) (_114269 : A -> B) (_114270 : A) (lt2 : type1402 A) (z' : type515 A B) (P1 : type551 A B) (G1 : type548 A B) (H1 : type549 A B) (h1 : term2129 A B lt2 z' P1 G1 H1) : term3151 A B lt2 z' _114268 H1 _114269 _114270.
Proof. exact (proj1 (@lem8380100 A B _114268 _114269 _114270 lt2 z' P1 G1 H1 h1)). Qed.
Lemma lem8381609 {A B : Type'} (_114268 : A -> B) (_114269 : A -> B) (_114270 : A) (lt2 : type1402 A) (z' : type515 A B) (P1 : type551 A B) (G1 : type548 A B) (H1 : type549 A B) (h1 : term2129 A B lt2 z' P1 G1 H1) : term3152 A B z' _114268 H1 _114269 _114270.
Proof. exact (proj2 (@lem8380100 A B _114268 _114269 _114270 lt2 z' P1 G1 H1 h1)). Qed.
Lemma lem8381754 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (_114287 : A -> B) (lt2 : type1402 A) (_114289 : A) (s : P -> A) (_114288 : P) : (term2858 A B P P2 G2 _114287 lt2 _114289 s _114288) = (term3153 A B P P2 G2 _114287 lt2 _114289 s _114288).
Proof. exact (@lem8364272 (term2853 A B P P2 _114287 _114288) (term2850 A B P lt2 _114289 G2 _114287 _114288) (term2844 A P lt2 _114289 s _114288)). Qed.
Lemma lem8381781 {A B P : Type'} (y : P) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (_114084 : type794 A P) (s : P -> A) (lt2 : type1402 A) (y' : A) (x : A) (h1 : term2887 A B P y P2 G2 f _114084 s lt2 y' x) : (@I (P -> A) s y) = x.
Proof. exact (proj1 (@lem8375528 A B P y P2 G2 f _114084 s lt2 y' x h1)). Qed.
Lemma lem8381783 {A B P : Type'} (y : P) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (_114084 : type794 A P) (s : P -> A) (lt2 : type1402 A) (y' : A) (x : A) (h1 : term2887 A B P y P2 G2 f _114084 s lt2 y' x) : term608 A lt2 y' x.
Proof. exact (proj2 (@lem8375530 A B P y P2 G2 f _114084 s lt2 y' x h1)). Qed.
Lemma lem8381785 {A B P : Type'} (y : P) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (_114084 : type794 A P) (s : P -> A) (lt2 : type1402 A) (y' : A) (x : A) (h1 : term2887 A B P y P2 G2 f _114084 s lt2 y' x) : term2880 A B P P2 f _114084 s x.
Proof. exact (proj1 (@lem8375533 A B P y P2 G2 f _114084 s lt2 y' x h1)). Qed.
Lemma lem8381787 {A B P : Type'} (y : P) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (_114084 : type794 A P) (s : P -> A) (lt2 : type1402 A) (y' : A) (x : A) (h1 : term2887 A B P y P2 G2 f _114084 s lt2 y' x) : term2877 A B P lt2 y' G2 f _114084 s x.
Proof. exact (proj2 (@lem8375533 A B P y P2 G2 f _114084 s lt2 y' x h1)). Qed.
Lemma lem8381932 {A B : Type'} (P1 : type551 A B) (G1 : type548 A B) (_114307 : A -> B) (lt2 : type1402 A) (_114309 : A) (_114308 : A) : (term2835 A B P1 G1 _114307 lt2 _114309 _114308) = (term3154 A B P1 G1 _114307 lt2 _114309 _114308).
Proof. exact (@lem8364272 (term2830 A B P1 _114307 _114308) (term2827 A B lt2 _114309 G1 _114307 _114308) (term586 A lt2 _114309 _114308)). Qed.
Lemma lem8381933 {A B : Type'} (_114307 : A -> B) (_114309 : A) (_114308 : A) (P1 : type551 A B) (G1 : type548 A B) (lt2 : type1402 A) (h1 : term1418 A B P1 G1 lt2) : term3154 A B P1 G1 _114307 lt2 _114309 _114308.
Proof. exact (EQ_MP (@lem8381932 A B P1 G1 _114307 lt2 _114309 _114308) (@lem8379847 A B _114307 _114309 _114308 P1 G1 lt2 h1)). Qed.
Lemma lem8381973 {A B P : Type'} (s : P -> A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (lt2 : type1402 A) (y' : A) (x : A) (h1 : term2871 A B P s P1 G1 f lt2 y' x) : term608 A lt2 y' x.
Proof. exact (proj2 (@lem8375536 A B P s P1 G1 f lt2 y' x h1)). Qed.
Lemma lem8382106 {A B P : Type'} (y : P) (lt2 : type1402 A) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (_114084 : type794 A P) (s : P -> A) (x : A) (h1 : term2944 A B P y lt2 P2 G2 f H2 g _114084 s x) : x = (@I (P -> A) s y).
Proof. exact (SYM (@lem8380237 A B P y lt2 P2 G2 f H2 g _114084 s x h1)). Qed.
Lemma lem8382134 {A P : Type'} (_114087 : P) (_114085 : P -> A) (_114086 : A) (_114084 : type794 A P) (h1 : term1491 A P _114084) : term3065 A P _114087 _114084 _114085 _114086.
Proof. exact (EQ_MP (@lem8379180 A P _114087 _114084 _114085 _114086) (@lem8379179 A P _114085 _114086 _114087 _114084 h1)). Qed.
Lemma lem8382219 {A B : Type'} (lt2 : type1402 A) (f : A -> B) (g : A -> B) (_114108 : A) : (term3155 A B lt2 f g _114108) = (term3155 A B lt2 f g _114108).
Proof. exact (eq_refl (term3155 A B lt2 f g _114108)). Qed.
Lemma lem8382220 {A B P : Type'} (_114108 : A) (y : P) (lt2 : type1402 A) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (_114084 : type794 A P) (s : P -> A) (x : A) (h1 : term2944 A B P y lt2 P2 G2 f H2 g _114084 s x) : (term3156 A B lt2 f g _114108 x) = (term3157 A B P lt2 f g _114108 s y).
Proof. exact (MK_COMB (@lem8382219 A B lt2 f g _114108) (@lem8382106 A B P y lt2 P2 G2 f H2 g _114084 s x h1)). Qed.
Lemma lem8382221 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (y : P) (f : A -> B) (g : A -> B) (_114108 : A) : (term3157 A B P lt2 f g _114108 s y) = (term3158 A B P lt2 s y f g _114108).
Proof. exact (eq_refl (term3157 A B P lt2 f g _114108 s y)). Qed.
Lemma lem8382222 {A B : Type'} (lt2 : type1402 A) (f : A -> B) (g : A -> B) (_114108 : A) (x : A) : (term3159 A B lt2 f g _114108 x) = (term3159 A B lt2 f g _114108 x).
Proof. exact (eq_refl (term3159 A B lt2 f g _114108 x)). Qed.
Lemma lem8382223 {A B P : Type'} (x : A) (lt2 : type1402 A) (s : P -> A) (y : P) (f : A -> B) (g : A -> B) (_114108 : A) : ((term3156 A B lt2 f g _114108 x) = (term3157 A B P lt2 f g _114108 s y)) = ((term3156 A B lt2 f g _114108 x) = (term3158 A B P lt2 s y f g _114108)).
Proof. exact (MK_COMB (@lem8382222 A B lt2 f g _114108 x) (@lem8382221 A B P lt2 s y f g _114108)). Qed.
Lemma lem8382224 {A B : Type'} (lt2 : type1402 A) (x : A) (f : A -> B) (g : A -> B) (_114108 : A) : (term3156 A B lt2 f g _114108 x) = (term2912 A B lt2 x f g _114108).
Proof. exact (eq_refl (term3156 A B lt2 f g _114108 x)). Qed.
Lemma lem8382225 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8382226 {A B : Type'} (lt2 : type1402 A) (x : A) (f : A -> B) (g : A -> B) (_114108 : A) : (term3159 A B lt2 f g _114108 x) = (term3160 A B lt2 x f g _114108).
Proof. exact (MK_COMB (@lem8382225) (@lem8382224 A B lt2 x f g _114108)). Qed.
Lemma lem8382227 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (y : P) (f : A -> B) (g : A -> B) (_114108 : A) : (term3158 A B P lt2 s y f g _114108) = (term3158 A B P lt2 s y f g _114108).
Proof. exact (eq_refl (term3158 A B P lt2 s y f g _114108)). Qed.
Lemma lem8382228 {A B P : Type'} (x : A) (lt2 : type1402 A) (s : P -> A) (y : P) (f : A -> B) (g : A -> B) (_114108 : A) : ((term3156 A B lt2 f g _114108 x) = (term3158 A B P lt2 s y f g _114108)) = ((term2912 A B lt2 x f g _114108) = (term3158 A B P lt2 s y f g _114108)).
Proof. exact (MK_COMB (@lem8382226 A B lt2 x f g _114108) (@lem8382227 A B P lt2 s y f g _114108)). Qed.
Lemma lem8382229 {A B P : Type'} (x : A) (lt2 : type1402 A) (s : P -> A) (y : P) (f : A -> B) (g : A -> B) (_114108 : A) : ((term3156 A B lt2 f g _114108 x) = (term3157 A B P lt2 f g _114108 s y)) = ((term2912 A B lt2 x f g _114108) = (term3158 A B P lt2 s y f g _114108)).
Proof. exact (TRANS (@lem8382223 A B P x lt2 s y f g _114108) (@lem8382228 A B P x lt2 s y f g _114108)). Qed.
Lemma lem8382230 {A B P : Type'} (_114108 : A) (y : P) (lt2 : type1402 A) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (_114084 : type794 A P) (s : P -> A) (x : A) (h1 : term2944 A B P y lt2 P2 G2 f H2 g _114084 s x) : (term2912 A B lt2 x f g _114108) = (term3158 A B P lt2 s y f g _114108).
Proof. exact (EQ_MP (@lem8382229 A B P x lt2 s y f g _114108) (@lem8382220 A B P _114108 y lt2 P2 G2 f H2 g _114084 s x h1)). Qed.
Lemma lem8382231 {A B P : Type'} (_114108 : A) (y : P) (lt2 : type1402 A) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (_114084 : type794 A P) (s : P -> A) (x : A) (h1 : term2944 A B P y lt2 P2 G2 f H2 g _114084 s x) : term3158 A B P lt2 s y f g _114108.
Proof. exact (EQ_MP (@lem8382230 A B P _114108 y lt2 P2 G2 f H2 g _114084 s x h1) (@lem8380243 A B P _114108 y lt2 P2 G2 f H2 g _114084 s x h1)). Qed.
Lemma lem8382232 {A B P : Type'} (P2 : type560 A B P) (f : A -> B) (_114084 : type794 A P) (s : P -> A) : (term3161 A B P P2 f _114084 s) = (term3161 A B P P2 f _114084 s).
Proof. exact (eq_refl (term3161 A B P P2 f _114084 s)). Qed.
Lemma lem8382233 {A B P : Type'} (y : P) (lt2 : type1402 A) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (_114084 : type794 A P) (s : P -> A) (x : A) (h1 : term2944 A B P y lt2 P2 G2 f H2 g _114084 s x) : (term3162 A B P P2 f _114084 s x) = (term3163 A B P P2 f _114084 s y).
Proof. exact (MK_COMB (@lem8382232 A B P P2 f _114084 s) (@lem8382106 A B P y lt2 P2 G2 f H2 g _114084 s x h1)). Qed.
Lemma lem8382234 {A B P : Type'} (P2 : type560 A B P) (f : A -> B) (_114084 : type794 A P) (s : P -> A) (y : P) : (term3163 A B P P2 f _114084 s y) = (term3164 A B P P2 f _114084 s y).
Proof. exact (eq_refl (term3163 A B P P2 f _114084 s y)). Qed.
Lemma lem8382235 {A B P : Type'} (P2 : type560 A B P) (f : A -> B) (_114084 : type794 A P) (s : P -> A) (x : A) : (term3165 A B P P2 f _114084 s x) = (term3165 A B P P2 f _114084 s x).
Proof. exact (eq_refl (term3165 A B P P2 f _114084 s x)). Qed.
Lemma lem8382236 {A B P : Type'} (x : A) (P2 : type560 A B P) (f : A -> B) (_114084 : type794 A P) (s : P -> A) (y : P) : ((term3162 A B P P2 f _114084 s x) = (term3163 A B P P2 f _114084 s y)) = ((term3162 A B P P2 f _114084 s x) = (term3164 A B P P2 f _114084 s y)).
Proof. exact (MK_COMB (@lem8382235 A B P P2 f _114084 s x) (@lem8382234 A B P P2 f _114084 s y)). Qed.
Lemma lem8382237 {A B P : Type'} (P2 : type560 A B P) (f : A -> B) (_114084 : type794 A P) (s : P -> A) (x : A) : (term3162 A B P P2 f _114084 s x) = (term2880 A B P P2 f _114084 s x).
Proof. exact (eq_refl (term3162 A B P P2 f _114084 s x)). Qed.
Lemma lem8382238 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8382239 {A B P : Type'} (P2 : type560 A B P) (f : A -> B) (_114084 : type794 A P) (s : P -> A) (x : A) : (term3165 A B P P2 f _114084 s x) = (term3166 A B P P2 f _114084 s x).
Proof. exact (MK_COMB (@lem8382238) (@lem8382237 A B P P2 f _114084 s x)). Qed.
Lemma lem8382240 {A B P : Type'} (P2 : type560 A B P) (f : A -> B) (_114084 : type794 A P) (s : P -> A) (y : P) : (term3164 A B P P2 f _114084 s y) = (term3164 A B P P2 f _114084 s y).
Proof. exact (eq_refl (term3164 A B P P2 f _114084 s y)). Qed.
Lemma lem8382241 {A B P : Type'} (x : A) (P2 : type560 A B P) (f : A -> B) (_114084 : type794 A P) (s : P -> A) (y : P) : ((term3162 A B P P2 f _114084 s x) = (term3164 A B P P2 f _114084 s y)) = ((term2880 A B P P2 f _114084 s x) = (term3164 A B P P2 f _114084 s y)).
Proof. exact (MK_COMB (@lem8382239 A B P P2 f _114084 s x) (@lem8382240 A B P P2 f _114084 s y)). Qed.
Lemma lem8382242 {A B P : Type'} (x : A) (P2 : type560 A B P) (f : A -> B) (_114084 : type794 A P) (s : P -> A) (y : P) : ((term3162 A B P P2 f _114084 s x) = (term3163 A B P P2 f _114084 s y)) = ((term2880 A B P P2 f _114084 s x) = (term3164 A B P P2 f _114084 s y)).
Proof. exact (TRANS (@lem8382236 A B P x P2 f _114084 s y) (@lem8382241 A B P x P2 f _114084 s y)). Qed.
Lemma lem8382243 {A B P : Type'} (y : P) (lt2 : type1402 A) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (_114084 : type794 A P) (s : P -> A) (x : A) (h1 : term2944 A B P y lt2 P2 G2 f H2 g _114084 s x) : (term2880 A B P P2 f _114084 s x) = (term3164 A B P P2 f _114084 s y).
Proof. exact (EQ_MP (@lem8382242 A B P x P2 f _114084 s y) (@lem8382233 A B P y lt2 P2 G2 f H2 g _114084 s x h1)). Qed.
Lemma lem8382245 {A B P : Type'} (P2 : type560 A B P) (g : A -> B) (_114084 : type794 A P) (s : P -> A) : (term3167 A B P P2 g _114084 s) = (term3167 A B P P2 g _114084 s).
Proof. exact (eq_refl (term3167 A B P P2 g _114084 s)). Qed.
Lemma lem8382246 {A B P : Type'} (y : P) (lt2 : type1402 A) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (_114084 : type794 A P) (s : P -> A) (x : A) (h1 : term2944 A B P y lt2 P2 G2 f H2 g _114084 s x) : (term3168 A B P P2 g _114084 s x) = (term3169 A B P P2 g _114084 s y).
Proof. exact (MK_COMB (@lem8382245 A B P P2 g _114084 s) (@lem8382106 A B P y lt2 P2 G2 f H2 g _114084 s x h1)). Qed.
Lemma lem8382247 {A B P : Type'} (P2 : type560 A B P) (g : A -> B) (_114084 : type794 A P) (s : P -> A) (y : P) : (term3169 A B P P2 g _114084 s y) = (term3170 A B P P2 g _114084 s y).
Proof. exact (eq_refl (term3169 A B P P2 g _114084 s y)). Qed.
Lemma lem8382248 {A B P : Type'} (P2 : type560 A B P) (g : A -> B) (_114084 : type794 A P) (s : P -> A) (x : A) : (term3171 A B P P2 g _114084 s x) = (term3171 A B P P2 g _114084 s x).
Proof. exact (eq_refl (term3171 A B P P2 g _114084 s x)). Qed.
Lemma lem8382249 {A B P : Type'} (x : A) (P2 : type560 A B P) (g : A -> B) (_114084 : type794 A P) (s : P -> A) (y : P) : ((term3168 A B P P2 g _114084 s x) = (term3169 A B P P2 g _114084 s y)) = ((term3168 A B P P2 g _114084 s x) = (term3170 A B P P2 g _114084 s y)).
Proof. exact (MK_COMB (@lem8382248 A B P P2 g _114084 s x) (@lem8382247 A B P P2 g _114084 s y)). Qed.
Lemma lem8382250 {A B P : Type'} (P2 : type560 A B P) (g : A -> B) (_114084 : type794 A P) (s : P -> A) (x : A) : (term3168 A B P P2 g _114084 s x) = (term2931 A B P P2 g _114084 s x).
Proof. exact (eq_refl (term3168 A B P P2 g _114084 s x)). Qed.
Lemma lem8382251 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8382252 {A B P : Type'} (P2 : type560 A B P) (g : A -> B) (_114084 : type794 A P) (s : P -> A) (x : A) : (term3171 A B P P2 g _114084 s x) = (term3172 A B P P2 g _114084 s x).
Proof. exact (MK_COMB (@lem8382251) (@lem8382250 A B P P2 g _114084 s x)). Qed.
Lemma lem8382253 {A B P : Type'} (P2 : type560 A B P) (g : A -> B) (_114084 : type794 A P) (s : P -> A) (y : P) : (term3170 A B P P2 g _114084 s y) = (term3170 A B P P2 g _114084 s y).
Proof. exact (eq_refl (term3170 A B P P2 g _114084 s y)). Qed.
Lemma lem8382254 {A B P : Type'} (x : A) (P2 : type560 A B P) (g : A -> B) (_114084 : type794 A P) (s : P -> A) (y : P) : ((term3168 A B P P2 g _114084 s x) = (term3170 A B P P2 g _114084 s y)) = ((term2931 A B P P2 g _114084 s x) = (term3170 A B P P2 g _114084 s y)).
Proof. exact (MK_COMB (@lem8382252 A B P P2 g _114084 s x) (@lem8382253 A B P P2 g _114084 s y)). Qed.
Lemma lem8382255 {A B P : Type'} (x : A) (P2 : type560 A B P) (g : A -> B) (_114084 : type794 A P) (s : P -> A) (y : P) : ((term3168 A B P P2 g _114084 s x) = (term3169 A B P P2 g _114084 s y)) = ((term2931 A B P P2 g _114084 s x) = (term3170 A B P P2 g _114084 s y)).
Proof. exact (TRANS (@lem8382249 A B P x P2 g _114084 s y) (@lem8382254 A B P x P2 g _114084 s y)). Qed.
Lemma lem8382256 {A B P : Type'} (y : P) (lt2 : type1402 A) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (_114084 : type794 A P) (s : P -> A) (x : A) (h1 : term2944 A B P y lt2 P2 G2 f H2 g _114084 s x) : (term2931 A B P P2 g _114084 s x) = (term3170 A B P P2 g _114084 s y).
Proof. exact (EQ_MP (@lem8382255 A B P x P2 g _114084 s y) (@lem8382246 A B P y lt2 P2 G2 f H2 g _114084 s x h1)). Qed.
Lemma lem8382257 {A B P : Type'} (y : P) (lt2 : type1402 A) (G2 : type557 A B P) (H2 : type558 A B P) (f : A -> B) (P2 : type560 A B P) (g : A -> B) (_114084 : type794 A P) (s : P -> A) (x : A) (h1 : term2944 A B P y lt2 P2 G2 f H2 g _114084 s x) (h2 : term2937 A B P f P2 g _114084 s x) : term3170 A B P P2 g _114084 s y.
Proof. exact (EQ_MP (@lem8382256 A B P y lt2 P2 G2 f H2 g _114084 s x h1) (@lem8380247 A B P f P2 g _114084 s x h2)). Qed.
Lemma lem8382439 {A B P : Type'} (_114094 : A -> B) (_114095 : A -> B) (_114096 : P) (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (h1 : term2270 A B P lt2 s z P2 G2 H2) : term3173 A B P lt2 z s _114094 P2 _114095 _114096.
Proof. exact (proj1 (@lem8379924 A B P _114094 _114095 _114096 lt2 s z P2 G2 H2 h1)). Qed.
Lemma lem8382453 {A B P : Type'} (_114094 : A -> B) (_114095 : A -> B) (_114096 : P) (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (h1 : term2270 A B P lt2 s z P2 G2 H2) : term3174 A B P z _114094 P2 _114095 _114096.
Proof. exact (proj2 (@lem8379924 A B P _114094 _114095 _114096 lt2 s z P2 G2 H2 h1)). Qed.
Lemma lem8382482 {A B P : Type'} (y : P) (lt2 : type1402 A) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (_114084 : type794 A P) (s : P -> A) (x : A) (h1 : term2944 A B P y lt2 P2 G2 f H2 g _114084 s x) : x = (@I (P -> A) s y).
Proof. exact (SYM (@lem8380431 A B P y lt2 P2 G2 f H2 g _114084 s x h1)). Qed.
Lemma lem8382510 {A P : Type'} (_114111 : P) (_114109 : P -> A) (_114110 : A) (_114084 : type794 A P) (h1 : term1491 A P _114084) : term3065 A P _114111 _114084 _114109 _114110.
Proof. exact (EQ_MP (@lem8379252 A P _114111 _114084 _114109 _114110) (@lem8379251 A P _114109 _114110 _114111 _114084 h1)). Qed.
Lemma lem8382595 {A B : Type'} (lt2 : type1402 A) (f : A -> B) (g : A -> B) (_114132 : A) : (term3155 A B lt2 f g _114132) = (term3155 A B lt2 f g _114132).
Proof. exact (eq_refl (term3155 A B lt2 f g _114132)). Qed.
Lemma lem8382596 {A B P : Type'} (_114132 : A) (y : P) (lt2 : type1402 A) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (_114084 : type794 A P) (s : P -> A) (x : A) (h1 : term2944 A B P y lt2 P2 G2 f H2 g _114084 s x) : (term3156 A B lt2 f g _114132 x) = (term3157 A B P lt2 f g _114132 s y).
Proof. exact (MK_COMB (@lem8382595 A B lt2 f g _114132) (@lem8382482 A B P y lt2 P2 G2 f H2 g _114084 s x h1)). Qed.
Lemma lem8382597 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (y : P) (f : A -> B) (g : A -> B) (_114132 : A) : (term3157 A B P lt2 f g _114132 s y) = (term3158 A B P lt2 s y f g _114132).
Proof. exact (eq_refl (term3157 A B P lt2 f g _114132 s y)). Qed.
Lemma lem8382598 {A B : Type'} (lt2 : type1402 A) (f : A -> B) (g : A -> B) (_114132 : A) (x : A) : (term3159 A B lt2 f g _114132 x) = (term3159 A B lt2 f g _114132 x).
Proof. exact (eq_refl (term3159 A B lt2 f g _114132 x)). Qed.
Lemma lem8382599 {A B P : Type'} (x : A) (lt2 : type1402 A) (s : P -> A) (y : P) (f : A -> B) (g : A -> B) (_114132 : A) : ((term3156 A B lt2 f g _114132 x) = (term3157 A B P lt2 f g _114132 s y)) = ((term3156 A B lt2 f g _114132 x) = (term3158 A B P lt2 s y f g _114132)).
Proof. exact (MK_COMB (@lem8382598 A B lt2 f g _114132 x) (@lem8382597 A B P lt2 s y f g _114132)). Qed.
Lemma lem8382600 {A B : Type'} (lt2 : type1402 A) (x : A) (f : A -> B) (g : A -> B) (_114132 : A) : (term3156 A B lt2 f g _114132 x) = (term2912 A B lt2 x f g _114132).
Proof. exact (eq_refl (term3156 A B lt2 f g _114132 x)). Qed.
Lemma lem8382601 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8382602 {A B : Type'} (lt2 : type1402 A) (x : A) (f : A -> B) (g : A -> B) (_114132 : A) : (term3159 A B lt2 f g _114132 x) = (term3160 A B lt2 x f g _114132).
Proof. exact (MK_COMB (@lem8382601) (@lem8382600 A B lt2 x f g _114132)). Qed.
Lemma lem8382603 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (y : P) (f : A -> B) (g : A -> B) (_114132 : A) : (term3158 A B P lt2 s y f g _114132) = (term3158 A B P lt2 s y f g _114132).
Proof. exact (eq_refl (term3158 A B P lt2 s y f g _114132)). Qed.
Lemma lem8382604 {A B P : Type'} (x : A) (lt2 : type1402 A) (s : P -> A) (y : P) (f : A -> B) (g : A -> B) (_114132 : A) : ((term3156 A B lt2 f g _114132 x) = (term3158 A B P lt2 s y f g _114132)) = ((term2912 A B lt2 x f g _114132) = (term3158 A B P lt2 s y f g _114132)).
Proof. exact (MK_COMB (@lem8382602 A B lt2 x f g _114132) (@lem8382603 A B P lt2 s y f g _114132)). Qed.
Lemma lem8382605 {A B P : Type'} (x : A) (lt2 : type1402 A) (s : P -> A) (y : P) (f : A -> B) (g : A -> B) (_114132 : A) : ((term3156 A B lt2 f g _114132 x) = (term3157 A B P lt2 f g _114132 s y)) = ((term2912 A B lt2 x f g _114132) = (term3158 A B P lt2 s y f g _114132)).
Proof. exact (TRANS (@lem8382599 A B P x lt2 s y f g _114132) (@lem8382604 A B P x lt2 s y f g _114132)). Qed.
Lemma lem8382606 {A B P : Type'} (_114132 : A) (y : P) (lt2 : type1402 A) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (_114084 : type794 A P) (s : P -> A) (x : A) (h1 : term2944 A B P y lt2 P2 G2 f H2 g _114084 s x) : (term2912 A B lt2 x f g _114132) = (term3158 A B P lt2 s y f g _114132).
Proof. exact (EQ_MP (@lem8382605 A B P x lt2 s y f g _114132) (@lem8382596 A B P _114132 y lt2 P2 G2 f H2 g _114084 s x h1)). Qed.
Lemma lem8382607 {A B P : Type'} (_114132 : A) (y : P) (lt2 : type1402 A) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (_114084 : type794 A P) (s : P -> A) (x : A) (h1 : term2944 A B P y lt2 P2 G2 f H2 g _114084 s x) : term3158 A B P lt2 s y f g _114132.
Proof. exact (EQ_MP (@lem8382606 A B P _114132 y lt2 P2 G2 f H2 g _114084 s x h1) (@lem8380437 A B P _114132 y lt2 P2 G2 f H2 g _114084 s x h1)). Qed.
Lemma lem8382608 {A B P : Type'} (P2 : type560 A B P) (f : A -> B) (_114084 : type794 A P) (s : P -> A) : (term3167 A B P P2 f _114084 s) = (term3167 A B P P2 f _114084 s).
Proof. exact (eq_refl (term3167 A B P P2 f _114084 s)). Qed.
Lemma lem8382609 {A B P : Type'} (y : P) (lt2 : type1402 A) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (_114084 : type794 A P) (s : P -> A) (x : A) (h1 : term2944 A B P y lt2 P2 G2 f H2 g _114084 s x) : (term3168 A B P P2 f _114084 s x) = (term3169 A B P P2 f _114084 s y).
Proof. exact (MK_COMB (@lem8382608 A B P P2 f _114084 s) (@lem8382482 A B P y lt2 P2 G2 f H2 g _114084 s x h1)). Qed.
Lemma lem8382610 {A B P : Type'} (P2 : type560 A B P) (f : A -> B) (_114084 : type794 A P) (s : P -> A) (y : P) : (term3169 A B P P2 f _114084 s y) = (term3170 A B P P2 f _114084 s y).
Proof. exact (eq_refl (term3169 A B P P2 f _114084 s y)). Qed.
Lemma lem8382611 {A B P : Type'} (P2 : type560 A B P) (f : A -> B) (_114084 : type794 A P) (s : P -> A) (x : A) : (term3171 A B P P2 f _114084 s x) = (term3171 A B P P2 f _114084 s x).
Proof. exact (eq_refl (term3171 A B P P2 f _114084 s x)). Qed.
Lemma lem8382612 {A B P : Type'} (x : A) (P2 : type560 A B P) (f : A -> B) (_114084 : type794 A P) (s : P -> A) (y : P) : ((term3168 A B P P2 f _114084 s x) = (term3169 A B P P2 f _114084 s y)) = ((term3168 A B P P2 f _114084 s x) = (term3170 A B P P2 f _114084 s y)).
Proof. exact (MK_COMB (@lem8382611 A B P P2 f _114084 s x) (@lem8382610 A B P P2 f _114084 s y)). Qed.
Lemma lem8382613 {A B P : Type'} (P2 : type560 A B P) (f : A -> B) (_114084 : type794 A P) (s : P -> A) (x : A) : (term3168 A B P P2 f _114084 s x) = (term2931 A B P P2 f _114084 s x).
Proof. exact (eq_refl (term3168 A B P P2 f _114084 s x)). Qed.
Lemma lem8382614 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8382615 {A B P : Type'} (P2 : type560 A B P) (f : A -> B) (_114084 : type794 A P) (s : P -> A) (x : A) : (term3171 A B P P2 f _114084 s x) = (term3172 A B P P2 f _114084 s x).
Proof. exact (MK_COMB (@lem8382614) (@lem8382613 A B P P2 f _114084 s x)). Qed.
Lemma lem8382616 {A B P : Type'} (P2 : type560 A B P) (f : A -> B) (_114084 : type794 A P) (s : P -> A) (y : P) : (term3170 A B P P2 f _114084 s y) = (term3170 A B P P2 f _114084 s y).
Proof. exact (eq_refl (term3170 A B P P2 f _114084 s y)). Qed.
Lemma lem8382617 {A B P : Type'} (x : A) (P2 : type560 A B P) (f : A -> B) (_114084 : type794 A P) (s : P -> A) (y : P) : ((term3168 A B P P2 f _114084 s x) = (term3170 A B P P2 f _114084 s y)) = ((term2931 A B P P2 f _114084 s x) = (term3170 A B P P2 f _114084 s y)).
Proof. exact (MK_COMB (@lem8382615 A B P P2 f _114084 s x) (@lem8382616 A B P P2 f _114084 s y)). Qed.
Lemma lem8382618 {A B P : Type'} (x : A) (P2 : type560 A B P) (f : A -> B) (_114084 : type794 A P) (s : P -> A) (y : P) : ((term3168 A B P P2 f _114084 s x) = (term3169 A B P P2 f _114084 s y)) = ((term2931 A B P P2 f _114084 s x) = (term3170 A B P P2 f _114084 s y)).
Proof. exact (TRANS (@lem8382612 A B P x P2 f _114084 s y) (@lem8382617 A B P x P2 f _114084 s y)). Qed.
Lemma lem8382619 {A B P : Type'} (y : P) (lt2 : type1402 A) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (_114084 : type794 A P) (s : P -> A) (x : A) (h1 : term2944 A B P y lt2 P2 G2 f H2 g _114084 s x) : (term2931 A B P P2 f _114084 s x) = (term3170 A B P P2 f _114084 s y).
Proof. exact (EQ_MP (@lem8382618 A B P x P2 f _114084 s y) (@lem8382609 A B P y lt2 P2 G2 f H2 g _114084 s x h1)). Qed.
Lemma lem8382620 {A B P : Type'} (y : P) (lt2 : type1402 A) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (_114084 : type794 A P) (s : P -> A) (x : A) (h1 : term2935 A B P f P2 g _114084 s x) (h2 : term2944 A B P y lt2 P2 G2 f H2 g _114084 s x) : term3170 A B P P2 f _114084 s y.
Proof. exact (EQ_MP (@lem8382619 A B P y lt2 P2 G2 f H2 g _114084 s x h2) (@lem8380439 A B P f P2 g _114084 s x h1)). Qed.
Lemma lem8382621 {A B P : Type'} (P2 : type560 A B P) (g : A -> B) (_114084 : type794 A P) (s : P -> A) : (term3161 A B P P2 g _114084 s) = (term3161 A B P P2 g _114084 s).
Proof. exact (eq_refl (term3161 A B P P2 g _114084 s)). Qed.
Lemma lem8382622 {A B P : Type'} (y : P) (lt2 : type1402 A) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (_114084 : type794 A P) (s : P -> A) (x : A) (h1 : term2944 A B P y lt2 P2 G2 f H2 g _114084 s x) : (term3162 A B P P2 g _114084 s x) = (term3163 A B P P2 g _114084 s y).
Proof. exact (MK_COMB (@lem8382621 A B P P2 g _114084 s) (@lem8382482 A B P y lt2 P2 G2 f H2 g _114084 s x h1)). Qed.
Lemma lem8382623 {A B P : Type'} (P2 : type560 A B P) (g : A -> B) (_114084 : type794 A P) (s : P -> A) (y : P) : (term3163 A B P P2 g _114084 s y) = (term3164 A B P P2 g _114084 s y).
Proof. exact (eq_refl (term3163 A B P P2 g _114084 s y)). Qed.
Lemma lem8382624 {A B P : Type'} (P2 : type560 A B P) (g : A -> B) (_114084 : type794 A P) (s : P -> A) (x : A) : (term3165 A B P P2 g _114084 s x) = (term3165 A B P P2 g _114084 s x).
Proof. exact (eq_refl (term3165 A B P P2 g _114084 s x)). Qed.
Lemma lem8382625 {A B P : Type'} (x : A) (P2 : type560 A B P) (g : A -> B) (_114084 : type794 A P) (s : P -> A) (y : P) : ((term3162 A B P P2 g _114084 s x) = (term3163 A B P P2 g _114084 s y)) = ((term3162 A B P P2 g _114084 s x) = (term3164 A B P P2 g _114084 s y)).
Proof. exact (MK_COMB (@lem8382624 A B P P2 g _114084 s x) (@lem8382623 A B P P2 g _114084 s y)). Qed.
Lemma lem8382626 {A B P : Type'} (P2 : type560 A B P) (g : A -> B) (_114084 : type794 A P) (s : P -> A) (x : A) : (term3162 A B P P2 g _114084 s x) = (term2880 A B P P2 g _114084 s x).
Proof. exact (eq_refl (term3162 A B P P2 g _114084 s x)). Qed.
Lemma lem8382627 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8382628 {A B P : Type'} (P2 : type560 A B P) (g : A -> B) (_114084 : type794 A P) (s : P -> A) (x : A) : (term3165 A B P P2 g _114084 s x) = (term3166 A B P P2 g _114084 s x).
Proof. exact (MK_COMB (@lem8382627) (@lem8382626 A B P P2 g _114084 s x)). Qed.
Lemma lem8382629 {A B P : Type'} (P2 : type560 A B P) (g : A -> B) (_114084 : type794 A P) (s : P -> A) (y : P) : (term3164 A B P P2 g _114084 s y) = (term3164 A B P P2 g _114084 s y).
Proof. exact (eq_refl (term3164 A B P P2 g _114084 s y)). Qed.
Lemma lem8382630 {A B P : Type'} (x : A) (P2 : type560 A B P) (g : A -> B) (_114084 : type794 A P) (s : P -> A) (y : P) : ((term3162 A B P P2 g _114084 s x) = (term3164 A B P P2 g _114084 s y)) = ((term2880 A B P P2 g _114084 s x) = (term3164 A B P P2 g _114084 s y)).
Proof. exact (MK_COMB (@lem8382628 A B P P2 g _114084 s x) (@lem8382629 A B P P2 g _114084 s y)). Qed.
Lemma lem8382631 {A B P : Type'} (x : A) (P2 : type560 A B P) (g : A -> B) (_114084 : type794 A P) (s : P -> A) (y : P) : ((term3162 A B P P2 g _114084 s x) = (term3163 A B P P2 g _114084 s y)) = ((term2880 A B P P2 g _114084 s x) = (term3164 A B P P2 g _114084 s y)).
Proof. exact (TRANS (@lem8382625 A B P x P2 g _114084 s y) (@lem8382630 A B P x P2 g _114084 s y)). Qed.
Lemma lem8382632 {A B P : Type'} (y : P) (lt2 : type1402 A) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (_114084 : type794 A P) (s : P -> A) (x : A) (h1 : term2944 A B P y lt2 P2 G2 f H2 g _114084 s x) : (term2880 A B P P2 g _114084 s x) = (term3164 A B P P2 g _114084 s y).
Proof. exact (EQ_MP (@lem8382631 A B P x P2 g _114084 s y) (@lem8382622 A B P y lt2 P2 G2 f H2 g _114084 s x h1)). Qed.
Lemma lem8382843 {A B P : Type'} (_114118 : A -> B) (_114119 : A -> B) (_114120 : P) (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (h1 : term2270 A B P lt2 s z P2 G2 H2) : term3175 A B P lt2 z s _114118 P2 _114119 _114120.
Proof. exact (proj1 (@lem8379953 A B P _114118 _114119 _114120 lt2 s z P2 G2 H2 h1)). Qed.
Lemma lem8382857 {A B P : Type'} (_114118 : A -> B) (_114119 : A -> B) (_114120 : P) (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (h1 : term2270 A B P lt2 s z P2 G2 H2) : term3176 A B P z _114118 P2 _114119 _114120.
Proof. exact (proj2 (@lem8379953 A B P _114118 _114119 _114120 lt2 s z P2 G2 H2 h1)). Qed.
Lemma lem8382858 {A B P : Type'} (y : P) (lt2 : type1402 A) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (_114084 : type794 A P) (s : P -> A) (x : A) (h1 : term2944 A B P y lt2 P2 G2 f H2 g _114084 s x) : x = (@I (P -> A) s y).
Proof. exact (SYM (@lem8380625 A B P y lt2 P2 G2 f H2 g _114084 s x h1)). Qed.
Lemma lem8382886 {A P : Type'} (_114135 : P) (_114133 : P -> A) (_114134 : A) (_114084 : type794 A P) (h1 : term1491 A P _114084) : term3065 A P _114135 _114084 _114133 _114134.
Proof. exact (EQ_MP (@lem8379324 A P _114135 _114084 _114133 _114134) (@lem8379323 A P _114133 _114134 _114135 _114084 h1)). Qed.
Lemma lem8382971 {A B : Type'} (lt2 : type1402 A) (f : A -> B) (g : A -> B) (_114156 : A) : (term3155 A B lt2 f g _114156) = (term3155 A B lt2 f g _114156).
Proof. exact (eq_refl (term3155 A B lt2 f g _114156)). Qed.
Lemma lem8382972 {A B P : Type'} (_114156 : A) (y : P) (lt2 : type1402 A) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (_114084 : type794 A P) (s : P -> A) (x : A) (h1 : term2944 A B P y lt2 P2 G2 f H2 g _114084 s x) : (term3156 A B lt2 f g _114156 x) = (term3157 A B P lt2 f g _114156 s y).
Proof. exact (MK_COMB (@lem8382971 A B lt2 f g _114156) (@lem8382858 A B P y lt2 P2 G2 f H2 g _114084 s x h1)). Qed.
Lemma lem8382973 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (y : P) (f : A -> B) (g : A -> B) (_114156 : A) : (term3157 A B P lt2 f g _114156 s y) = (term3158 A B P lt2 s y f g _114156).
Proof. exact (eq_refl (term3157 A B P lt2 f g _114156 s y)). Qed.
Lemma lem8382974 {A B : Type'} (lt2 : type1402 A) (f : A -> B) (g : A -> B) (_114156 : A) (x : A) : (term3159 A B lt2 f g _114156 x) = (term3159 A B lt2 f g _114156 x).
Proof. exact (eq_refl (term3159 A B lt2 f g _114156 x)). Qed.
Lemma lem8382975 {A B P : Type'} (x : A) (lt2 : type1402 A) (s : P -> A) (y : P) (f : A -> B) (g : A -> B) (_114156 : A) : ((term3156 A B lt2 f g _114156 x) = (term3157 A B P lt2 f g _114156 s y)) = ((term3156 A B lt2 f g _114156 x) = (term3158 A B P lt2 s y f g _114156)).
Proof. exact (MK_COMB (@lem8382974 A B lt2 f g _114156 x) (@lem8382973 A B P lt2 s y f g _114156)). Qed.
Lemma lem8382976 {A B : Type'} (lt2 : type1402 A) (x : A) (f : A -> B) (g : A -> B) (_114156 : A) : (term3156 A B lt2 f g _114156 x) = (term2912 A B lt2 x f g _114156).
Proof. exact (eq_refl (term3156 A B lt2 f g _114156 x)). Qed.
Lemma lem8382977 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8382978 {A B : Type'} (lt2 : type1402 A) (x : A) (f : A -> B) (g : A -> B) (_114156 : A) : (term3159 A B lt2 f g _114156 x) = (term3160 A B lt2 x f g _114156).
Proof. exact (MK_COMB (@lem8382977) (@lem8382976 A B lt2 x f g _114156)). Qed.
Lemma lem8382979 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (y : P) (f : A -> B) (g : A -> B) (_114156 : A) : (term3158 A B P lt2 s y f g _114156) = (term3158 A B P lt2 s y f g _114156).
Proof. exact (eq_refl (term3158 A B P lt2 s y f g _114156)). Qed.
Lemma lem8382980 {A B P : Type'} (x : A) (lt2 : type1402 A) (s : P -> A) (y : P) (f : A -> B) (g : A -> B) (_114156 : A) : ((term3156 A B lt2 f g _114156 x) = (term3158 A B P lt2 s y f g _114156)) = ((term2912 A B lt2 x f g _114156) = (term3158 A B P lt2 s y f g _114156)).
Proof. exact (MK_COMB (@lem8382978 A B lt2 x f g _114156) (@lem8382979 A B P lt2 s y f g _114156)). Qed.
Lemma lem8382981 {A B P : Type'} (x : A) (lt2 : type1402 A) (s : P -> A) (y : P) (f : A -> B) (g : A -> B) (_114156 : A) : ((term3156 A B lt2 f g _114156 x) = (term3157 A B P lt2 f g _114156 s y)) = ((term2912 A B lt2 x f g _114156) = (term3158 A B P lt2 s y f g _114156)).
Proof. exact (TRANS (@lem8382975 A B P x lt2 s y f g _114156) (@lem8382980 A B P x lt2 s y f g _114156)). Qed.
Lemma lem8382982 {A B P : Type'} (_114156 : A) (y : P) (lt2 : type1402 A) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (_114084 : type794 A P) (s : P -> A) (x : A) (h1 : term2944 A B P y lt2 P2 G2 f H2 g _114084 s x) : (term2912 A B lt2 x f g _114156) = (term3158 A B P lt2 s y f g _114156).
Proof. exact (EQ_MP (@lem8382981 A B P x lt2 s y f g _114156) (@lem8382972 A B P _114156 y lt2 P2 G2 f H2 g _114084 s x h1)). Qed.
Lemma lem8382983 {A B P : Type'} (_114156 : A) (y : P) (lt2 : type1402 A) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (_114084 : type794 A P) (s : P -> A) (x : A) (h1 : term2944 A B P y lt2 P2 G2 f H2 g _114084 s x) : term3158 A B P lt2 s y f g _114156.
Proof. exact (EQ_MP (@lem8382982 A B P _114156 y lt2 P2 G2 f H2 g _114084 s x h1) (@lem8380631 A B P _114156 y lt2 P2 G2 f H2 g _114084 s x h1)). Qed.
Lemma lem8382984 {A B P : Type'} (f : A -> B) (G2 : type557 A B P) (g : A -> B) (_114084 : type794 A P) (s : P -> A) : (term3177 A B P f G2 g _114084 s) = (term3177 A B P f G2 g _114084 s).
Proof. exact (eq_refl (term3177 A B P f G2 g _114084 s)). Qed.
Lemma lem8382985 {A B P : Type'} (y : P) (lt2 : type1402 A) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (_114084 : type794 A P) (s : P -> A) (x : A) (h1 : term2944 A B P y lt2 P2 G2 f H2 g _114084 s x) : (term3178 A B P f G2 g _114084 s x) = (term3179 A B P f G2 g _114084 s y).
Proof. exact (MK_COMB (@lem8382984 A B P f G2 g _114084 s) (@lem8382858 A B P y lt2 P2 G2 f H2 g _114084 s x h1)). Qed.
Lemma lem8382986 {A B P : Type'} (f : A -> B) (G2 : type557 A B P) (g : A -> B) (_114084 : type794 A P) (s : P -> A) (y : P) : (term3179 A B P f G2 g _114084 s y) = (term3180 A B P f G2 g _114084 s y).
Proof. exact (eq_refl (term3179 A B P f G2 g _114084 s y)). Qed.
Lemma lem8382987 {A B P : Type'} (f : A -> B) (G2 : type557 A B P) (g : A -> B) (_114084 : type794 A P) (s : P -> A) (x : A) : (term3181 A B P f G2 g _114084 s x) = (term3181 A B P f G2 g _114084 s x).
Proof. exact (eq_refl (term3181 A B P f G2 g _114084 s x)). Qed.
Lemma lem8382988 {A B P : Type'} (x : A) (f : A -> B) (G2 : type557 A B P) (g : A -> B) (_114084 : type794 A P) (s : P -> A) (y : P) : ((term3178 A B P f G2 g _114084 s x) = (term3179 A B P f G2 g _114084 s y)) = ((term3178 A B P f G2 g _114084 s x) = (term3180 A B P f G2 g _114084 s y)).
Proof. exact (MK_COMB (@lem8382987 A B P f G2 g _114084 s x) (@lem8382986 A B P f G2 g _114084 s y)). Qed.
Lemma lem8382989 {A B P : Type'} (f : A -> B) (G2 : type557 A B P) (g : A -> B) (_114084 : type794 A P) (s : P -> A) (x : A) : (term3178 A B P f G2 g _114084 s x) = (term2926 A B P f G2 g _114084 s x).
Proof. exact (eq_refl (term3178 A B P f G2 g _114084 s x)). Qed.
Lemma lem8382990 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8382991 {A B P : Type'} (f : A -> B) (G2 : type557 A B P) (g : A -> B) (_114084 : type794 A P) (s : P -> A) (x : A) : (term3181 A B P f G2 g _114084 s x) = (term3182 A B P f G2 g _114084 s x).
Proof. exact (MK_COMB (@lem8382990) (@lem8382989 A B P f G2 g _114084 s x)). Qed.
Lemma lem8382992 {A B P : Type'} (f : A -> B) (G2 : type557 A B P) (g : A -> B) (_114084 : type794 A P) (s : P -> A) (y : P) : (term3180 A B P f G2 g _114084 s y) = (term3180 A B P f G2 g _114084 s y).
Proof. exact (eq_refl (term3180 A B P f G2 g _114084 s y)). Qed.
Lemma lem8382993 {A B P : Type'} (x : A) (f : A -> B) (G2 : type557 A B P) (g : A -> B) (_114084 : type794 A P) (s : P -> A) (y : P) : ((term3178 A B P f G2 g _114084 s x) = (term3180 A B P f G2 g _114084 s y)) = ((term2926 A B P f G2 g _114084 s x) = (term3180 A B P f G2 g _114084 s y)).
Proof. exact (MK_COMB (@lem8382991 A B P f G2 g _114084 s x) (@lem8382992 A B P f G2 g _114084 s y)). Qed.
Lemma lem8382994 {A B P : Type'} (x : A) (f : A -> B) (G2 : type557 A B P) (g : A -> B) (_114084 : type794 A P) (s : P -> A) (y : P) : ((term3178 A B P f G2 g _114084 s x) = (term3179 A B P f G2 g _114084 s y)) = ((term2926 A B P f G2 g _114084 s x) = (term3180 A B P f G2 g _114084 s y)).
Proof. exact (TRANS (@lem8382988 A B P x f G2 g _114084 s y) (@lem8382993 A B P x f G2 g _114084 s y)). Qed.
Lemma lem8382995 {A B P : Type'} (y : P) (lt2 : type1402 A) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (_114084 : type794 A P) (s : P -> A) (x : A) (h1 : term2944 A B P y lt2 P2 G2 f H2 g _114084 s x) : (term2926 A B P f G2 g _114084 s x) = (term3180 A B P f G2 g _114084 s y).
Proof. exact (EQ_MP (@lem8382994 A B P x f G2 g _114084 s y) (@lem8382985 A B P y lt2 P2 G2 f H2 g _114084 s x h1)). Qed.
Lemma lem8382996 {A B P : Type'} (y : P) (lt2 : type1402 A) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (_114084 : type794 A P) (s : P -> A) (x : A) (h1 : term2926 A B P f G2 g _114084 s x) (h2 : term2944 A B P y lt2 P2 G2 f H2 g _114084 s x) : term3180 A B P f G2 g _114084 s y.
Proof. exact (EQ_MP (@lem8382995 A B P y lt2 P2 G2 f H2 g _114084 s x h2) (@lem8380633 A B P f G2 g _114084 s x h1)). Qed.
Lemma lem8383150 {A B P : Type'} (_114142 : A -> B) (_114143 : A -> B) (_114144 : P) (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (h1 : term2270 A B P lt2 s z P2 G2 H2) : term3183 A B P lt2 z s _114142 G2 _114143 _114144.
Proof. exact (proj1 (@lem8379975 A B P _114142 _114143 _114144 lt2 s z P2 G2 H2 h1)). Qed.
Lemma lem8383164 {A B P : Type'} (_114142 : A -> B) (_114143 : A -> B) (_114144 : P) (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (h1 : term2270 A B P lt2 s z P2 G2 H2) : term3184 A B P z _114142 G2 _114143 _114144.
Proof. exact (proj2 (@lem8379975 A B P _114142 _114143 _114144 lt2 s z P2 G2 H2 h1)). Qed.
Lemma lem8383221 {A B P : Type'} (y : P) (lt2 : type1402 A) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (_114084 : type794 A P) (s : P -> A) (x : A) (h1 : term2944 A B P y lt2 P2 G2 f H2 g _114084 s x) : x = (@I (P -> A) s y).
Proof. exact (SYM (@lem8380817 A B P y lt2 P2 G2 f H2 g _114084 s x h1)). Qed.
Lemma lem8383249 {A P : Type'} (_114159 : P) (_114157 : P -> A) (_114158 : A) (_114084 : type794 A P) (h1 : term1491 A P _114084) : term3065 A P _114159 _114084 _114157 _114158.
Proof. exact (EQ_MP (@lem8379396 A P _114159 _114084 _114157 _114158) (@lem8379395 A P _114157 _114158 _114159 _114084 h1)). Qed.
Lemma lem8383334 {A B : Type'} (lt2 : type1402 A) (f : A -> B) (g : A -> B) (_114180 : A) : (term3155 A B lt2 f g _114180) = (term3155 A B lt2 f g _114180).
Proof. exact (eq_refl (term3155 A B lt2 f g _114180)). Qed.
Lemma lem8383335 {A B P : Type'} (_114180 : A) (y : P) (lt2 : type1402 A) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (_114084 : type794 A P) (s : P -> A) (x : A) (h1 : term2944 A B P y lt2 P2 G2 f H2 g _114084 s x) : (term3156 A B lt2 f g _114180 x) = (term3157 A B P lt2 f g _114180 s y).
Proof. exact (MK_COMB (@lem8383334 A B lt2 f g _114180) (@lem8383221 A B P y lt2 P2 G2 f H2 g _114084 s x h1)). Qed.
Lemma lem8383336 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (y : P) (f : A -> B) (g : A -> B) (_114180 : A) : (term3157 A B P lt2 f g _114180 s y) = (term3158 A B P lt2 s y f g _114180).
Proof. exact (eq_refl (term3157 A B P lt2 f g _114180 s y)). Qed.
Lemma lem8383337 {A B : Type'} (lt2 : type1402 A) (f : A -> B) (g : A -> B) (_114180 : A) (x : A) : (term3159 A B lt2 f g _114180 x) = (term3159 A B lt2 f g _114180 x).
Proof. exact (eq_refl (term3159 A B lt2 f g _114180 x)). Qed.
Lemma lem8383338 {A B P : Type'} (x : A) (lt2 : type1402 A) (s : P -> A) (y : P) (f : A -> B) (g : A -> B) (_114180 : A) : ((term3156 A B lt2 f g _114180 x) = (term3157 A B P lt2 f g _114180 s y)) = ((term3156 A B lt2 f g _114180 x) = (term3158 A B P lt2 s y f g _114180)).
Proof. exact (MK_COMB (@lem8383337 A B lt2 f g _114180 x) (@lem8383336 A B P lt2 s y f g _114180)). Qed.
Lemma lem8383339 {A B : Type'} (lt2 : type1402 A) (x : A) (f : A -> B) (g : A -> B) (_114180 : A) : (term3156 A B lt2 f g _114180 x) = (term2912 A B lt2 x f g _114180).
Proof. exact (eq_refl (term3156 A B lt2 f g _114180 x)). Qed.
Lemma lem8383340 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8383341 {A B : Type'} (lt2 : type1402 A) (x : A) (f : A -> B) (g : A -> B) (_114180 : A) : (term3159 A B lt2 f g _114180 x) = (term3160 A B lt2 x f g _114180).
Proof. exact (MK_COMB (@lem8383340) (@lem8383339 A B lt2 x f g _114180)). Qed.
Lemma lem8383342 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (y : P) (f : A -> B) (g : A -> B) (_114180 : A) : (term3158 A B P lt2 s y f g _114180) = (term3158 A B P lt2 s y f g _114180).
Proof. exact (eq_refl (term3158 A B P lt2 s y f g _114180)). Qed.
Lemma lem8383343 {A B P : Type'} (x : A) (lt2 : type1402 A) (s : P -> A) (y : P) (f : A -> B) (g : A -> B) (_114180 : A) : ((term3156 A B lt2 f g _114180 x) = (term3158 A B P lt2 s y f g _114180)) = ((term2912 A B lt2 x f g _114180) = (term3158 A B P lt2 s y f g _114180)).
Proof. exact (MK_COMB (@lem8383341 A B lt2 x f g _114180) (@lem8383342 A B P lt2 s y f g _114180)). Qed.
Lemma lem8383344 {A B P : Type'} (x : A) (lt2 : type1402 A) (s : P -> A) (y : P) (f : A -> B) (g : A -> B) (_114180 : A) : ((term3156 A B lt2 f g _114180 x) = (term3157 A B P lt2 f g _114180 s y)) = ((term2912 A B lt2 x f g _114180) = (term3158 A B P lt2 s y f g _114180)).
Proof. exact (TRANS (@lem8383338 A B P x lt2 s y f g _114180) (@lem8383343 A B P x lt2 s y f g _114180)). Qed.
Lemma lem8383345 {A B P : Type'} (_114180 : A) (y : P) (lt2 : type1402 A) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (_114084 : type794 A P) (s : P -> A) (x : A) (h1 : term2944 A B P y lt2 P2 G2 f H2 g _114084 s x) : (term2912 A B lt2 x f g _114180) = (term3158 A B P lt2 s y f g _114180).
Proof. exact (EQ_MP (@lem8383344 A B P x lt2 s y f g _114180) (@lem8383335 A B P _114180 y lt2 P2 G2 f H2 g _114084 s x h1)). Qed.
Lemma lem8383346 {A B P : Type'} (_114180 : A) (y : P) (lt2 : type1402 A) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (_114084 : type794 A P) (s : P -> A) (x : A) (h1 : term2944 A B P y lt2 P2 G2 f H2 g _114084 s x) : term3158 A B P lt2 s y f g _114180.
Proof. exact (EQ_MP (@lem8383345 A B P _114180 y lt2 P2 G2 f H2 g _114084 s x h1) (@lem8380823 A B P _114180 y lt2 P2 G2 f H2 g _114084 s x h1)). Qed.
Lemma lem8383347 {A B P : Type'} (f : A -> B) (H2 : type558 A B P) (g : A -> B) (_114084 : type794 A P) (s : P -> A) : (term3185 A B P f H2 g _114084 s) = (term3185 A B P f H2 g _114084 s).
Proof. exact (eq_refl (term3185 A B P f H2 g _114084 s)). Qed.
Lemma lem8383348 {A B P : Type'} (y : P) (lt2 : type1402 A) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (_114084 : type794 A P) (s : P -> A) (x : A) (h1 : term2944 A B P y lt2 P2 G2 f H2 g _114084 s x) : (term3186 A B P f H2 g _114084 s x) = (term3187 A B P f H2 g _114084 s y).
Proof. exact (MK_COMB (@lem8383347 A B P f H2 g _114084 s) (@lem8383221 A B P y lt2 P2 G2 f H2 g _114084 s x h1)). Qed.
Lemma lem8383349 {A B P : Type'} (f : A -> B) (H2 : type558 A B P) (g : A -> B) (_114084 : type794 A P) (s : P -> A) (y : P) : (term3187 A B P f H2 g _114084 s y) = (term3188 A B P f H2 g _114084 s y).
Proof. exact (eq_refl (term3187 A B P f H2 g _114084 s y)). Qed.
Lemma lem8383350 {A B P : Type'} (f : A -> B) (H2 : type558 A B P) (g : A -> B) (_114084 : type794 A P) (s : P -> A) (x : A) : (term3189 A B P f H2 g _114084 s x) = (term3189 A B P f H2 g _114084 s x).
Proof. exact (eq_refl (term3189 A B P f H2 g _114084 s x)). Qed.
Lemma lem8383351 {A B P : Type'} (x : A) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (_114084 : type794 A P) (s : P -> A) (y : P) : ((term3186 A B P f H2 g _114084 s x) = (term3187 A B P f H2 g _114084 s y)) = ((term3186 A B P f H2 g _114084 s x) = (term3188 A B P f H2 g _114084 s y)).
Proof. exact (MK_COMB (@lem8383350 A B P f H2 g _114084 s x) (@lem8383349 A B P f H2 g _114084 s y)). Qed.
Lemma lem8383352 {A B P : Type'} (f : A -> B) (H2 : type558 A B P) (g : A -> B) (_114084 : type794 A P) (s : P -> A) (x : A) : (term3186 A B P f H2 g _114084 s x) = (term2923 A B P f H2 g _114084 s x).
Proof. exact (eq_refl (term3186 A B P f H2 g _114084 s x)). Qed.
Lemma lem8383353 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8383354 {A B P : Type'} (f : A -> B) (H2 : type558 A B P) (g : A -> B) (_114084 : type794 A P) (s : P -> A) (x : A) : (term3189 A B P f H2 g _114084 s x) = (term3190 A B P f H2 g _114084 s x).
Proof. exact (MK_COMB (@lem8383353) (@lem8383352 A B P f H2 g _114084 s x)). Qed.
Lemma lem8383355 {A B P : Type'} (f : A -> B) (H2 : type558 A B P) (g : A -> B) (_114084 : type794 A P) (s : P -> A) (y : P) : (term3188 A B P f H2 g _114084 s y) = (term3188 A B P f H2 g _114084 s y).
Proof. exact (eq_refl (term3188 A B P f H2 g _114084 s y)). Qed.
Lemma lem8383356 {A B P : Type'} (x : A) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (_114084 : type794 A P) (s : P -> A) (y : P) : ((term3186 A B P f H2 g _114084 s x) = (term3188 A B P f H2 g _114084 s y)) = ((term2923 A B P f H2 g _114084 s x) = (term3188 A B P f H2 g _114084 s y)).
Proof. exact (MK_COMB (@lem8383354 A B P f H2 g _114084 s x) (@lem8383355 A B P f H2 g _114084 s y)). Qed.
Lemma lem8383357 {A B P : Type'} (x : A) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (_114084 : type794 A P) (s : P -> A) (y : P) : ((term3186 A B P f H2 g _114084 s x) = (term3187 A B P f H2 g _114084 s y)) = ((term2923 A B P f H2 g _114084 s x) = (term3188 A B P f H2 g _114084 s y)).
Proof. exact (TRANS (@lem8383351 A B P x f H2 g _114084 s y) (@lem8383356 A B P x f H2 g _114084 s y)). Qed.
Lemma lem8383358 {A B P : Type'} (y : P) (lt2 : type1402 A) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (_114084 : type794 A P) (s : P -> A) (x : A) (h1 : term2944 A B P y lt2 P2 G2 f H2 g _114084 s x) : (term2923 A B P f H2 g _114084 s x) = (term3188 A B P f H2 g _114084 s y).
Proof. exact (EQ_MP (@lem8383357 A B P x f H2 g _114084 s y) (@lem8383348 A B P y lt2 P2 G2 f H2 g _114084 s x h1)). Qed.
Lemma lem8383359 {A B P : Type'} (y : P) (lt2 : type1402 A) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (_114084 : type794 A P) (s : P -> A) (x : A) (h1 : term2923 A B P f H2 g _114084 s x) (h2 : term2944 A B P y lt2 P2 G2 f H2 g _114084 s x) : term3188 A B P f H2 g _114084 s y.
Proof. exact (EQ_MP (@lem8383358 A B P y lt2 P2 G2 f H2 g _114084 s x h2) (@lem8380825 A B P f H2 g _114084 s x h1)). Qed.
Lemma lem8383485 {A B P : Type'} (_114166 : A -> B) (_114167 : A -> B) (_114168 : P) (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (h1 : term2270 A B P lt2 s z P2 G2 H2) : term3191 A B P lt2 z s _114166 H2 _114167 _114168.
Proof. exact (proj1 (@lem8380002 A B P _114166 _114167 _114168 lt2 s z P2 G2 H2 h1)). Qed.
Lemma lem8383499 {A B P : Type'} (_114166 : A -> B) (_114167 : A -> B) (_114168 : P) (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (h1 : term2270 A B P lt2 s z P2 G2 H2) : term3192 A B P z _114166 H2 _114167 _114168.
Proof. exact (proj2 (@lem8380002 A B P _114166 _114167 _114168 lt2 s z P2 G2 H2 h1)). Qed.
Lemma lem8383584 {A B P : Type'} (y : P) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (_114084 : type794 A P) (s : P -> A) (lt2 : type1402 A) (y' : A) (x : A) (h1 : term2887 A B P y P2 G2 f _114084 s lt2 y' x) : x = (@I (P -> A) s y).
Proof. exact (SYM (@lem8381781 A B P y P2 G2 f _114084 s lt2 y' x h1)). Qed.
Lemma lem8383612 {A P : Type'} (_114283 : P) (_114281 : P -> A) (_114282 : A) (_114084 : type794 A P) (h1 : term1491 A P _114084) : term3065 A P _114283 _114084 _114281 _114282.
Proof. exact (EQ_MP (@lem8379768 A P _114283 _114084 _114281 _114282) (@lem8379767 A P _114281 _114282 _114283 _114084 h1)). Qed.
Lemma lem8383640 {A B P : Type'} (_114287 : A -> B) (_114289 : A) (_114288 : P) (P2 : type560 A B P) (G2 : type557 A B P) (lt2 : type1402 A) (s : P -> A) (h1 : term1420 A B P P2 G2 lt2 s) : term3153 A B P P2 G2 _114287 lt2 _114289 s _114288.
Proof. exact (EQ_MP (@lem8381754 A B P P2 G2 _114287 lt2 _114289 s _114288) (@lem8379787 A B P _114287 _114289 _114288 P2 G2 lt2 s h1)). Qed.
Lemma lem8383697 {A : Type'} (lt2 : type1402 A) (y' : A) : (term3193 A lt2 y') = (term3193 A lt2 y').
Proof. exact (eq_refl (term3193 A lt2 y')). Qed.
Lemma lem8383698 {A B P : Type'} (y : P) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (_114084 : type794 A P) (s : P -> A) (lt2 : type1402 A) (y' : A) (x : A) (h1 : term2887 A B P y P2 G2 f _114084 s lt2 y' x) : (term3194 A lt2 y' x) = (term3195 A P lt2 y' s y).
Proof. exact (MK_COMB (@lem8383697 A lt2 y') (@lem8383584 A B P y P2 G2 f _114084 s lt2 y' x h1)). Qed.
Lemma lem8383699 {A P : Type'} (lt2 : type1402 A) (y' : A) (s : P -> A) (y : P) : (term3195 A P lt2 y' s y) = (term3196 A P lt2 y' s y).
Proof. exact (eq_refl (term3195 A P lt2 y' s y)). Qed.
Lemma lem8383700 {A : Type'} (lt2 : type1402 A) (y' : A) (x : A) : (term3197 A lt2 y' x) = (term3197 A lt2 y' x).
Proof. exact (eq_refl (term3197 A lt2 y' x)). Qed.
Lemma lem8383701 {A P : Type'} (x : A) (lt2 : type1402 A) (y' : A) (s : P -> A) (y : P) : ((term3194 A lt2 y' x) = (term3195 A P lt2 y' s y)) = ((term3194 A lt2 y' x) = (term3196 A P lt2 y' s y)).
Proof. exact (MK_COMB (@lem8383700 A lt2 y' x) (@lem8383699 A P lt2 y' s y)). Qed.
Lemma lem8383702 {A : Type'} (lt2 : type1402 A) (y' : A) (x : A) : (term3194 A lt2 y' x) = (term608 A lt2 y' x).
Proof. exact (eq_refl (term3194 A lt2 y' x)). Qed.
Lemma lem8383703 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8383704 {A : Type'} (lt2 : type1402 A) (y' : A) (x : A) : (term3197 A lt2 y' x) = (term3198 A lt2 y' x).
Proof. exact (MK_COMB (@lem8383703) (@lem8383702 A lt2 y' x)). Qed.
Lemma lem8383705 {A P : Type'} (lt2 : type1402 A) (y' : A) (s : P -> A) (y : P) : (term3196 A P lt2 y' s y) = (term3196 A P lt2 y' s y).
Proof. exact (eq_refl (term3196 A P lt2 y' s y)). Qed.
Lemma lem8383706 {A P : Type'} (x : A) (lt2 : type1402 A) (y' : A) (s : P -> A) (y : P) : ((term3194 A lt2 y' x) = (term3196 A P lt2 y' s y)) = ((term608 A lt2 y' x) = (term3196 A P lt2 y' s y)).
Proof. exact (MK_COMB (@lem8383704 A lt2 y' x) (@lem8383705 A P lt2 y' s y)). Qed.
Lemma lem8383707 {A P : Type'} (x : A) (lt2 : type1402 A) (y' : A) (s : P -> A) (y : P) : ((term3194 A lt2 y' x) = (term3195 A P lt2 y' s y)) = ((term608 A lt2 y' x) = (term3196 A P lt2 y' s y)).
Proof. exact (TRANS (@lem8383701 A P x lt2 y' s y) (@lem8383706 A P x lt2 y' s y)). Qed.
Lemma lem8383708 {A B P : Type'} (y : P) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (_114084 : type794 A P) (s : P -> A) (lt2 : type1402 A) (y' : A) (x : A) (h1 : term2887 A B P y P2 G2 f _114084 s lt2 y' x) : (term608 A lt2 y' x) = (term3196 A P lt2 y' s y).
Proof. exact (EQ_MP (@lem8383707 A P x lt2 y' s y) (@lem8383698 A B P y P2 G2 f _114084 s lt2 y' x h1)). Qed.
Lemma lem8383709 {A B P : Type'} (y : P) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (_114084 : type794 A P) (s : P -> A) (lt2 : type1402 A) (y' : A) (x : A) (h1 : term2887 A B P y P2 G2 f _114084 s lt2 y' x) : term3196 A P lt2 y' s y.
Proof. exact (EQ_MP (@lem8383708 A B P y P2 G2 f _114084 s lt2 y' x h1) (@lem8381783 A B P y P2 G2 f _114084 s lt2 y' x h1)). Qed.
Lemma lem8383710 {A B P : Type'} (P2 : type560 A B P) (f : A -> B) (_114084 : type794 A P) (s : P -> A) : (term3161 A B P P2 f _114084 s) = (term3161 A B P P2 f _114084 s).
Proof. exact (eq_refl (term3161 A B P P2 f _114084 s)). Qed.
Lemma lem8383711 {A B P : Type'} (y : P) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (_114084 : type794 A P) (s : P -> A) (lt2 : type1402 A) (y' : A) (x : A) (h1 : term2887 A B P y P2 G2 f _114084 s lt2 y' x) : (term3162 A B P P2 f _114084 s x) = (term3163 A B P P2 f _114084 s y).
Proof. exact (MK_COMB (@lem8383710 A B P P2 f _114084 s) (@lem8383584 A B P y P2 G2 f _114084 s lt2 y' x h1)). Qed.
Lemma lem8383712 {A B P : Type'} (P2 : type560 A B P) (f : A -> B) (_114084 : type794 A P) (s : P -> A) (y : P) : (term3163 A B P P2 f _114084 s y) = (term3164 A B P P2 f _114084 s y).
Proof. exact (eq_refl (term3163 A B P P2 f _114084 s y)). Qed.
Lemma lem8383713 {A B P : Type'} (P2 : type560 A B P) (f : A -> B) (_114084 : type794 A P) (s : P -> A) (x : A) : (term3165 A B P P2 f _114084 s x) = (term3165 A B P P2 f _114084 s x).
Proof. exact (eq_refl (term3165 A B P P2 f _114084 s x)). Qed.
Lemma lem8383714 {A B P : Type'} (x : A) (P2 : type560 A B P) (f : A -> B) (_114084 : type794 A P) (s : P -> A) (y : P) : ((term3162 A B P P2 f _114084 s x) = (term3163 A B P P2 f _114084 s y)) = ((term3162 A B P P2 f _114084 s x) = (term3164 A B P P2 f _114084 s y)).
Proof. exact (MK_COMB (@lem8383713 A B P P2 f _114084 s x) (@lem8383712 A B P P2 f _114084 s y)). Qed.
Lemma lem8383715 {A B P : Type'} (P2 : type560 A B P) (f : A -> B) (_114084 : type794 A P) (s : P -> A) (x : A) : (term3162 A B P P2 f _114084 s x) = (term2880 A B P P2 f _114084 s x).
Proof. exact (eq_refl (term3162 A B P P2 f _114084 s x)). Qed.
Lemma lem8383716 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8383717 {A B P : Type'} (P2 : type560 A B P) (f : A -> B) (_114084 : type794 A P) (s : P -> A) (x : A) : (term3165 A B P P2 f _114084 s x) = (term3166 A B P P2 f _114084 s x).
Proof. exact (MK_COMB (@lem8383716) (@lem8383715 A B P P2 f _114084 s x)). Qed.
Lemma lem8383718 {A B P : Type'} (P2 : type560 A B P) (f : A -> B) (_114084 : type794 A P) (s : P -> A) (y : P) : (term3164 A B P P2 f _114084 s y) = (term3164 A B P P2 f _114084 s y).
Proof. exact (eq_refl (term3164 A B P P2 f _114084 s y)). Qed.
Lemma lem8383719 {A B P : Type'} (x : A) (P2 : type560 A B P) (f : A -> B) (_114084 : type794 A P) (s : P -> A) (y : P) : ((term3162 A B P P2 f _114084 s x) = (term3164 A B P P2 f _114084 s y)) = ((term2880 A B P P2 f _114084 s x) = (term3164 A B P P2 f _114084 s y)).
Proof. exact (MK_COMB (@lem8383717 A B P P2 f _114084 s x) (@lem8383718 A B P P2 f _114084 s y)). Qed.
Lemma lem8383720 {A B P : Type'} (x : A) (P2 : type560 A B P) (f : A -> B) (_114084 : type794 A P) (s : P -> A) (y : P) : ((term3162 A B P P2 f _114084 s x) = (term3163 A B P P2 f _114084 s y)) = ((term2880 A B P P2 f _114084 s x) = (term3164 A B P P2 f _114084 s y)).
Proof. exact (TRANS (@lem8383714 A B P x P2 f _114084 s y) (@lem8383719 A B P x P2 f _114084 s y)). Qed.
Lemma lem8383721 {A B P : Type'} (y : P) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (_114084 : type794 A P) (s : P -> A) (lt2 : type1402 A) (y' : A) (x : A) (h1 : term2887 A B P y P2 G2 f _114084 s lt2 y' x) : (term2880 A B P P2 f _114084 s x) = (term3164 A B P P2 f _114084 s y).
Proof. exact (EQ_MP (@lem8383720 A B P x P2 f _114084 s y) (@lem8383711 A B P y P2 G2 f _114084 s lt2 y' x h1)). Qed.
Lemma lem8383723 {A B P : Type'} (lt2 : type1402 A) (y' : A) (G2 : type557 A B P) (f : A -> B) (_114084 : type794 A P) (s : P -> A) : (term3199 A B P lt2 y' G2 f _114084 s) = (term3199 A B P lt2 y' G2 f _114084 s).
Proof. exact (eq_refl (term3199 A B P lt2 y' G2 f _114084 s)). Qed.
Lemma lem8383724 {A B P : Type'} (y : P) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (_114084 : type794 A P) (s : P -> A) (lt2 : type1402 A) (y' : A) (x : A) (h1 : term2887 A B P y P2 G2 f _114084 s lt2 y' x) : (term3200 A B P lt2 y' G2 f _114084 s x) = (term3201 A B P lt2 y' G2 f _114084 s y).
Proof. exact (MK_COMB (@lem8383723 A B P lt2 y' G2 f _114084 s) (@lem8383584 A B P y P2 G2 f _114084 s lt2 y' x h1)). Qed.
Lemma lem8383725 {A B P : Type'} (lt2 : type1402 A) (y' : A) (G2 : type557 A B P) (f : A -> B) (_114084 : type794 A P) (s : P -> A) (y : P) : (term3201 A B P lt2 y' G2 f _114084 s y) = (term3202 A B P lt2 y' G2 f _114084 s y).
Proof. exact (eq_refl (term3201 A B P lt2 y' G2 f _114084 s y)). Qed.
Lemma lem8383726 {A B P : Type'} (lt2 : type1402 A) (y' : A) (G2 : type557 A B P) (f : A -> B) (_114084 : type794 A P) (s : P -> A) (x : A) : (term3203 A B P lt2 y' G2 f _114084 s x) = (term3203 A B P lt2 y' G2 f _114084 s x).
Proof. exact (eq_refl (term3203 A B P lt2 y' G2 f _114084 s x)). Qed.
Lemma lem8383727 {A B P : Type'} (x : A) (lt2 : type1402 A) (y' : A) (G2 : type557 A B P) (f : A -> B) (_114084 : type794 A P) (s : P -> A) (y : P) : ((term3200 A B P lt2 y' G2 f _114084 s x) = (term3201 A B P lt2 y' G2 f _114084 s y)) = ((term3200 A B P lt2 y' G2 f _114084 s x) = (term3202 A B P lt2 y' G2 f _114084 s y)).
Proof. exact (MK_COMB (@lem8383726 A B P lt2 y' G2 f _114084 s x) (@lem8383725 A B P lt2 y' G2 f _114084 s y)). Qed.
Lemma lem8383728 {A B P : Type'} (lt2 : type1402 A) (y' : A) (G2 : type557 A B P) (f : A -> B) (_114084 : type794 A P) (s : P -> A) (x : A) : (term3200 A B P lt2 y' G2 f _114084 s x) = (term2877 A B P lt2 y' G2 f _114084 s x).
Proof. exact (eq_refl (term3200 A B P lt2 y' G2 f _114084 s x)). Qed.
Lemma lem8383729 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8383730 {A B P : Type'} (lt2 : type1402 A) (y' : A) (G2 : type557 A B P) (f : A -> B) (_114084 : type794 A P) (s : P -> A) (x : A) : (term3203 A B P lt2 y' G2 f _114084 s x) = (term3204 A B P lt2 y' G2 f _114084 s x).
Proof. exact (MK_COMB (@lem8383729) (@lem8383728 A B P lt2 y' G2 f _114084 s x)). Qed.
Lemma lem8383731 {A B P : Type'} (lt2 : type1402 A) (y' : A) (G2 : type557 A B P) (f : A -> B) (_114084 : type794 A P) (s : P -> A) (y : P) : (term3202 A B P lt2 y' G2 f _114084 s y) = (term3202 A B P lt2 y' G2 f _114084 s y).
Proof. exact (eq_refl (term3202 A B P lt2 y' G2 f _114084 s y)). Qed.
Lemma lem8383732 {A B P : Type'} (x : A) (lt2 : type1402 A) (y' : A) (G2 : type557 A B P) (f : A -> B) (_114084 : type794 A P) (s : P -> A) (y : P) : ((term3200 A B P lt2 y' G2 f _114084 s x) = (term3202 A B P lt2 y' G2 f _114084 s y)) = ((term2877 A B P lt2 y' G2 f _114084 s x) = (term3202 A B P lt2 y' G2 f _114084 s y)).
Proof. exact (MK_COMB (@lem8383730 A B P lt2 y' G2 f _114084 s x) (@lem8383731 A B P lt2 y' G2 f _114084 s y)). Qed.
Lemma lem8383733 {A B P : Type'} (x : A) (lt2 : type1402 A) (y' : A) (G2 : type557 A B P) (f : A -> B) (_114084 : type794 A P) (s : P -> A) (y : P) : ((term3200 A B P lt2 y' G2 f _114084 s x) = (term3201 A B P lt2 y' G2 f _114084 s y)) = ((term2877 A B P lt2 y' G2 f _114084 s x) = (term3202 A B P lt2 y' G2 f _114084 s y)).
Proof. exact (TRANS (@lem8383727 A B P x lt2 y' G2 f _114084 s y) (@lem8383732 A B P x lt2 y' G2 f _114084 s y)). Qed.
Lemma lem8383734 {A B P : Type'} (y : P) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (_114084 : type794 A P) (s : P -> A) (lt2 : type1402 A) (y' : A) (x : A) (h1 : term2887 A B P y P2 G2 f _114084 s lt2 y' x) : (term2877 A B P lt2 y' G2 f _114084 s x) = (term3202 A B P lt2 y' G2 f _114084 s y).
Proof. exact (EQ_MP (@lem8383733 A B P x lt2 y' G2 f _114084 s y) (@lem8383724 A B P y P2 G2 f _114084 s lt2 y' x h1)). Qed.
Lemma lem8383979 {A : Type'} : (@I (A -> Prop)) = (@I (A -> Prop)).
Proof. exact (eq_refl (@I (A -> Prop))). Qed.
Lemma lem8383980 {A : Type'} (_114598 : A -> Prop) (_114600 : A -> Prop) (h1 : _114598 = _114600) : _114598 = _114600.
Proof. exact (h1). Qed.
Lemma lem8383981 {A : Type'} (_114599 : A) (_114601 : A) (h1 : _114599 = _114601) : _114599 = _114601.
Proof. exact (h1). Qed.
Lemma lem8383982 {A : Type'} (_114598 : A -> Prop) (_114600 : A -> Prop) (h1 : _114598 = _114600) : (@I (A -> Prop) _114598) = (@I (A -> Prop) _114600).
Proof. exact (MK_COMB (@lem8383979 A) (@lem8383980 A _114598 _114600 h1)). Qed.
Lemma lem8383983 {A : Type'} (_114599 : A) (_114601 : A) (_114598 : A -> Prop) (_114600 : A -> Prop) (h1 : _114599 = _114601) (h2 : _114598 = _114600) : (@I (A -> Prop) _114598 _114599) = (@I (A -> Prop) _114600 _114601).
Proof. exact (MK_COMB (@lem8383982 A _114598 _114600 h2) (@lem8383981 A _114599 _114601 h1)). Qed.
Lemma lem8383985 (b : Prop) (a : Prop) : term3205 b a.
Proof. exact (EQ_MP (@lem21501 b a) (@lem21598 b a)). Qed.
Lemma lem8383986 {A : Type'} (_114600 : A -> Prop) (_114601 : A) (_114598 : A -> Prop) (_114599 : A) : term3206 A _114600 _114601 _114598 _114599.
Proof. exact (@lem8383985 (@I (A -> Prop) _114600 _114601) (@I (A -> Prop) _114598 _114599)). Qed.
Lemma lem8383987 {A : Type'} (_114599 : A) (_114601 : A) (_114598 : A -> Prop) (_114600 : A -> Prop) (h1 : _114599 = _114601) (h2 : _114598 = _114600) : term3207 A _114600 _114601 _114598 _114599.
Proof. exact (@lem8383986 A _114600 _114601 _114598 _114599 (@lem8383983 A _114599 _114601 _114598 _114600 h1 h2)). Qed.
Lemma lem8383988 {A : Type'} (_114600 : A -> Prop) (_114598 : A -> Prop) (_114599 : A) (_114601 : A) (h1 : _114599 = _114601) : term3208 A _114600 _114601 _114598 _114599.
Proof. exact (fun h0 : _114598 = _114600 => @lem8383987 A _114599 _114601 _114598 _114600 h1 h0). Qed.
Lemma lem8383990 (a : Prop) (b : Prop) : (a -> b) = (term3209 a b).
Proof. exact (EQ_MP (@lem21394 a b) (@lem21490 a b)). Qed.
Lemma lem8383991 {A : Type'} (_114600 : A -> Prop) (_114601 : A) (_114598 : A -> Prop) (_114599 : A) : (term3208 A _114600 _114601 _114598 _114599) = (term3210 A _114600 _114601 _114598 _114599).
Proof. exact (@lem8383990 (_114598 = _114600) (term3207 A _114600 _114601 _114598 _114599)). Qed.
Lemma lem8383992 {A : Type'} (_114600 : A -> Prop) (_114598 : A -> Prop) (_114599 : A) (_114601 : A) (h1 : _114599 = _114601) : term3210 A _114600 _114601 _114598 _114599.
Proof. exact (EQ_MP (@lem8383991 A _114600 _114601 _114598 _114599) (@lem8383988 A _114600 _114598 _114599 _114601 h1)). Qed.
Lemma lem8383993 {A : Type'} (_114600 : A -> Prop) (_114601 : A) (_114598 : A -> Prop) (_114599 : A) : term3211 A _114600 _114601 _114598 _114599.
Proof. exact (fun h0 : _114599 = _114601 => @lem8383992 A _114600 _114598 _114599 _114601 h0). Qed.
Lemma lem8383995 (a : Prop) (b : Prop) : (a -> b) = (term3209 a b).
Proof. exact (EQ_MP (@lem21394 a b) (@lem21490 a b)). Qed.
Lemma lem8383996 {A : Type'} (_114600 : A -> Prop) (_114601 : A) (_114598 : A -> Prop) (_114599 : A) : (term3211 A _114600 _114601 _114598 _114599) = (term3212 A _114600 _114601 _114598 _114599).
Proof. exact (@lem8383995 (_114599 = _114601) (term3210 A _114600 _114601 _114598 _114599)). Qed.
Lemma lem8383997 {A : Type'} (_114600 : A -> Prop) (_114601 : A) (_114598 : A -> Prop) (_114599 : A) : term3212 A _114600 _114601 _114598 _114599.
Proof. exact (EQ_MP (@lem8383996 A _114600 _114601 _114598 _114599) (@lem8383993 A _114600 _114601 _114598 _114599)). Qed.
Lemma lem8384283 {A : Type'} (x : A) : x = x.
Proof. exact (@lem21386 A x). Qed.
Lemma lem8384284 {A : Type'} (x : A) : x = x.
Proof. exact (@lem8384283 A x). Qed.
Lemma lem8384285 {A P : Type'} (s : P -> A) (y : P) : (@I (P -> A) s y) = (@I (P -> A) s y).
Proof. exact (@lem8384284 A (@I (P -> A) s y)). Qed.
Lemma lem8384286 {A P : Type'} (s : P -> A) (y : P) : term3213 A P s y.
Proof. exact (fun h0 : term3214 A P s y => @lem8384285 A P s y). Qed.
Lemma lem8384288 (p : Prop) : (term748 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8384289 {A P : Type'} (s : P -> A) (y : P) : (term3213 A P s y) = ((@I (P -> A) s y) = (@I (P -> A) s y)).
Proof. exact (@lem8384288 ((@I (P -> A) s y) = (@I (P -> A) s y))). Qed.
Lemma lem8384290 {A P : Type'} (s : P -> A) (y : P) : (@I (P -> A) s y) = (@I (P -> A) s y).
Proof. exact (EQ_MP (@lem8384289 A P s y) (@lem8384286 A P s y)). Qed.
Lemma lem8384296 (q : Prop) (p : Prop) : (p \/ q) = (q \/ p).
Proof. exact (proj1 (@lem827 (@el Prop) p q)). Qed.
Lemma lem8384297 {A P : Type'} (_114084 : type794 A P) (_114085 : P -> A) (_114087 : P) (_114086 : A) : (term3065 A P _114087 _114084 _114085 _114086) = (term3215 A P _114084 _114085 _114087 _114086).
Proof. exact (@lem8384296 ((term2811 A P _114084 _114085 _114086) = _114086) (term2813 A P _114085 _114087 _114086)). Qed.
Lemma lem8384307 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8384308 {A P : Type'} (_114084 : type794 A P) (_114085 : P -> A) (_114087 : P) (_114086 : A) : (term3216 A P _114087 _114084 _114085 _114086) = (term3217 A P _114084 _114085 _114087 _114086).
Proof. exact (MK_COMB (@lem8384307) (@lem8384297 A P _114084 _114085 _114087 _114086)). Qed.
Lemma lem8384318 {A P : Type'} (_114084 : type794 A P) (_114085 : P -> A) (_114087 : P) (_114086 : A) : (term3215 A P _114084 _114085 _114087 _114086) = (term3215 A P _114084 _114085 _114087 _114086).
Proof. exact (eq_refl (term3215 A P _114084 _114085 _114087 _114086)). Qed.
Lemma lem8384319 {A P : Type'} (_114084 : type794 A P) (_114085 : P -> A) (_114087 : P) (_114086 : A) : ((term3065 A P _114087 _114084 _114085 _114086) = (term3215 A P _114084 _114085 _114087 _114086)) = ((term3215 A P _114084 _114085 _114087 _114086) = (term3215 A P _114084 _114085 _114087 _114086)).
Proof. exact (MK_COMB (@lem8384308 A P _114084 _114085 _114087 _114086) (@lem8384318 A P _114084 _114085 _114087 _114086)). Qed.
Lemma lem8384321 {A : Type'} (x : A) : (x = x) = True.
Proof. exact (EQ_MP (@lem20665 A x) (@lem20664 A x)). Qed.
Lemma lem8384322 (x : Prop) : (x = x) = True.
Proof. exact (@lem8384321 Prop x). Qed.
Lemma lem8384323 {A P : Type'} (_114084 : type794 A P) (_114085 : P -> A) (_114087 : P) (_114086 : A) : ((term3215 A P _114084 _114085 _114087 _114086) = (term3215 A P _114084 _114085 _114087 _114086)) = True.
Proof. exact (@lem8384322 (term3215 A P _114084 _114085 _114087 _114086)). Qed.
Lemma lem8384324 {A P : Type'} (_114084 : type794 A P) (_114085 : P -> A) (_114087 : P) (_114086 : A) : ((term3065 A P _114087 _114084 _114085 _114086) = (term3215 A P _114084 _114085 _114087 _114086)) = True.
Proof. exact (TRANS (@lem8384319 A P _114084 _114085 _114087 _114086) (@lem8384323 A P _114084 _114085 _114087 _114086)). Qed.
Lemma lem8384325 {A P : Type'} (_114084 : type794 A P) (_114085 : P -> A) (_114087 : P) (_114086 : A) : True = ((term3065 A P _114087 _114084 _114085 _114086) = (term3215 A P _114084 _114085 _114087 _114086)).
Proof. exact (SYM (@lem8384324 A P _114084 _114085 _114087 _114086)). Qed.
Lemma lem8384326 {A P : Type'} (_114084 : type794 A P) (_114085 : P -> A) (_114087 : P) (_114086 : A) : (term3065 A P _114087 _114084 _114085 _114086) = (term3215 A P _114084 _114085 _114087 _114086).
Proof. exact (EQ_MP (@lem8384325 A P _114084 _114085 _114087 _114086) (@lem0)). Qed.
Lemma lem8384327 {A P : Type'} (_114085 : P -> A) (_114087 : P) (_114086 : A) (_114084 : type794 A P) (h1 : term1491 A P _114084) : term3215 A P _114084 _114085 _114087 _114086.
Proof. exact (EQ_MP (@lem8384326 A P _114084 _114085 _114087 _114086) (@lem8382134 A P _114087 _114085 _114086 _114084 h1)). Qed.
Lemma lem8384329 (b : Prop) (a : Prop) : (a \/ b) = (term754 b a).
Proof. exact (EQ_MP (@lem20682 b a) (@lem20764 b a)). Qed.
Lemma lem8384330 {A P : Type'} (_114087 : P) (_114084 : type794 A P) (_114085 : P -> A) (_114086 : A) : (term3215 A P _114084 _114085 _114087 _114086) = (term3218 A P _114087 _114084 _114085 _114086).
Proof. exact (@lem8384329 (term2813 A P _114085 _114087 _114086) ((term2811 A P _114084 _114085 _114086) = _114086)). Qed.
Lemma lem8384332 (a : Prop) : (term47 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem8384333 {A P : Type'} (_114085 : P -> A) (_114087 : P) (_114086 : A) : (term3219 A P _114085 _114087 _114086) = ((@I (P -> A) _114085 _114087) = _114086).
Proof. exact (@lem8384332 ((@I (P -> A) _114085 _114087) = _114086)). Qed.
Lemma lem8384334 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem8384335 {A P : Type'} (_114085 : P -> A) (_114087 : P) (_114086 : A) : (term3220 A P _114085 _114087 _114086) = (term3221 A P _114085 _114087 _114086).
Proof. exact (MK_COMB (@lem8384334) (@lem8384333 A P _114085 _114087 _114086)). Qed.
Lemma lem8384336 {A P : Type'} (_114084 : type794 A P) (_114085 : P -> A) (_114086 : A) : ((term2811 A P _114084 _114085 _114086) = _114086) = ((term2811 A P _114084 _114085 _114086) = _114086).
Proof. exact (eq_refl ((term2811 A P _114084 _114085 _114086) = _114086)). Qed.
Lemma lem8384337 {A P : Type'} (_114087 : P) (_114084 : type794 A P) (_114085 : P -> A) (_114086 : A) : (term3218 A P _114087 _114084 _114085 _114086) = (term3222 A P _114087 _114084 _114085 _114086).
Proof. exact (MK_COMB (@lem8384335 A P _114085 _114087 _114086) (@lem8384336 A P _114084 _114085 _114086)). Qed.
Lemma lem8384338 {A P : Type'} (_114087 : P) (_114084 : type794 A P) (_114085 : P -> A) (_114086 : A) : (term3215 A P _114084 _114085 _114087 _114086) = (term3222 A P _114087 _114084 _114085 _114086).
Proof. exact (TRANS (@lem8384330 A P _114087 _114084 _114085 _114086) (@lem8384337 A P _114087 _114084 _114085 _114086)). Qed.
Lemma lem8384341 {A P : Type'} (_114087 : P) (_114085 : P -> A) (_114086 : A) (_114084 : type794 A P) (h1 : term1491 A P _114084) : term3222 A P _114087 _114084 _114085 _114086.
Proof. exact (EQ_MP (@lem8384338 A P _114087 _114084 _114085 _114086) (@lem8384327 A P _114085 _114087 _114086 _114084 h1)). Qed.
Lemma lem8384342 {A P : Type'} (_114087 : P) (_114085 : P -> A) (_114086 : A) (_114084 : type794 A P) (h1 : term1491 A P _114084) : term3222 A P _114087 _114084 _114085 _114086.
Proof. exact (@lem8384341 A P _114087 _114085 _114086 _114084 h1). Qed.
Lemma lem8384343 {A P : Type'} (s : P -> A) (y : P) (_114084 : type794 A P) (h1 : term1491 A P _114084) : term3223 A P _114084 s y.
Proof. exact (@lem8384342 A P y s (@I (P -> A) s y) _114084 h1). Qed.
Lemma lem8384346 {A P : Type'} (s : P -> A) (y : P) (_114084 : type794 A P) (h1 : term1491 A P _114084) : (term3224 A P _114084 s y) = (@I (P -> A) s y).
Proof. exact (@lem8384343 A P s y _114084 h1 (@lem8384290 A P s y)). Qed.
Lemma lem8384347 {A P : Type'} (s : P -> A) (y : P) (_114084 : type794 A P) (h1 : term1491 A P _114084) : (term3224 A P _114084 s y) = (@I (P -> A) s y).
Proof. exact (@lem8384346 A P s y _114084 h1). Qed.
Lemma lem8384348 {A P : Type'} (s : P -> A) (y : P) (_114084 : type794 A P) (h1 : term1491 A P _114084) : term3225 A P _114084 s y.
Proof. exact (fun h0 : term3226 A P _114084 s y => @lem8384347 A P s y _114084 h1). Qed.
Lemma lem8384350 (p : Prop) : (term748 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8384351 {A P : Type'} (_114084 : type794 A P) (s : P -> A) (y : P) : (term3225 A P _114084 s y) = ((term3224 A P _114084 s y) = (@I (P -> A) s y)).
Proof. exact (@lem8384350 ((term3224 A P _114084 s y) = (@I (P -> A) s y))). Qed.
Lemma lem8384352 {A P : Type'} (s : P -> A) (y : P) (_114084 : type794 A P) (h1 : term1491 A P _114084) : (term3224 A P _114084 s y) = (@I (P -> A) s y).
Proof. exact (EQ_MP (@lem8384351 A P _114084 s y) (@lem8384348 A P s y _114084 h1)). Qed.
Lemma lem8384354 {A : Type'} (x : A -> Prop) : x = x.
Proof. exact (@lem21386 (A -> Prop) x). Qed.
Lemma lem8384355 {A : Type'} (x : A -> Prop) : x = x.
Proof. exact (@lem8384354 A x). Qed.
Lemma lem8384356 {A B P : Type'} (lt2 : type1402 A) (z : type518 A B P) (f : A -> B) (g : A -> B) (_114084 : type794 A P) (s : P -> A) (y : P) : (term3227 A B P lt2 z f g _114084 s y) = (term3227 A B P lt2 z f g _114084 s y).
Proof. exact (@lem8384355 A (term3227 A B P lt2 z f g _114084 s y)). Qed.
Lemma lem8384357 {A B P : Type'} (lt2 : type1402 A) (z : type518 A B P) (f : A -> B) (g : A -> B) (_114084 : type794 A P) (s : P -> A) (y : P) : term3228 A B P lt2 z f g _114084 s y.
Proof. exact (fun h0 : term3229 A B P lt2 z f g _114084 s y => @lem8384356 A B P lt2 z f g _114084 s y). Qed.
Lemma lem8384359 (p : Prop) : (term748 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8384360 {A B P : Type'} (lt2 : type1402 A) (z : type518 A B P) (f : A -> B) (g : A -> B) (_114084 : type794 A P) (s : P -> A) (y : P) : (term3228 A B P lt2 z f g _114084 s y) = ((term3227 A B P lt2 z f g _114084 s y) = (term3227 A B P lt2 z f g _114084 s y)).
Proof. exact (@lem8384359 ((term3227 A B P lt2 z f g _114084 s y) = (term3227 A B P lt2 z f g _114084 s y))). Qed.
Lemma lem8384361 {A B P : Type'} (lt2 : type1402 A) (z : type518 A B P) (f : A -> B) (g : A -> B) (_114084 : type794 A P) (s : P -> A) (y : P) : (term3227 A B P lt2 z f g _114084 s y) = (term3227 A B P lt2 z f g _114084 s y).
Proof. exact (EQ_MP (@lem8384360 A B P lt2 z f g _114084 s y) (@lem8384357 A B P lt2 z f g _114084 s y)). Qed.
Lemma lem8384363 {A B P : Type'} (y : P) (lt2 : type1402 A) (G2 : type557 A B P) (H2 : type558 A B P) (f : A -> B) (P2 : type560 A B P) (g : A -> B) (_114084 : type794 A P) (s : P -> A) (x : A) (h1 : term2944 A B P y lt2 P2 G2 f H2 g _114084 s x) (h2 : term2937 A B P f P2 g _114084 s x) : term3164 A B P P2 f _114084 s y.
Proof. exact (EQ_MP (@lem8382243 A B P y lt2 P2 G2 f H2 g _114084 s x h1) (@lem8380245 A B P f P2 g _114084 s x h2)). Qed.
Lemma lem8384364 {A B P : Type'} (y : P) (lt2 : type1402 A) (G2 : type557 A B P) (H2 : type558 A B P) (f : A -> B) (P2 : type560 A B P) (g : A -> B) (_114084 : type794 A P) (s : P -> A) (x : A) (h1 : term2944 A B P y lt2 P2 G2 f H2 g _114084 s x) (h2 : term2937 A B P f P2 g _114084 s x) : term3230 A B P P2 f _114084 s y.
Proof. exact (fun h0 : term3170 A B P P2 f _114084 s y => @lem8384363 A B P y lt2 G2 H2 f P2 g _114084 s x h1 h2). Qed.
Lemma lem8384366 (p : Prop) : (term748 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8384367 {A B P : Type'} (P2 : type560 A B P) (f : A -> B) (_114084 : type794 A P) (s : P -> A) (y : P) : (term3230 A B P P2 f _114084 s y) = (term3164 A B P P2 f _114084 s y).
Proof. exact (@lem8384366 (term3164 A B P P2 f _114084 s y)). Qed.
Lemma lem8384368 {A B P : Type'} (y : P) (lt2 : type1402 A) (G2 : type557 A B P) (H2 : type558 A B P) (f : A -> B) (P2 : type560 A B P) (g : A -> B) (_114084 : type794 A P) (s : P -> A) (x : A) (h1 : term2944 A B P y lt2 P2 G2 f H2 g _114084 s x) (h2 : term2937 A B P f P2 g _114084 s x) : term3164 A B P P2 f _114084 s y.
Proof. exact (EQ_MP (@lem8384367 A B P P2 f _114084 s y) (@lem8384364 A B P y lt2 G2 H2 f P2 g _114084 s x h1 h2)). Qed.
Lemma lem8384371 {A B P : Type'} (P2 : type560 A B P) (g : A -> B) (_114084 : type794 A P) (s : P -> A) (y : P) (h1 : term3170 A B P P2 g _114084 s y) : term3170 A B P P2 g _114084 s y.
Proof. exact (h1). Qed.
Lemma lem8384372 {A B P : Type'} (P2 : type560 A B P) (g : A -> B) (_114084 : type794 A P) (s : P -> A) (y : P) (h1 : term3170 A B P P2 g _114084 s y) : term3231 A B P P2 g _114084 s y.
Proof. exact (fun h0 : term3164 A B P P2 g _114084 s y => @lem8384371 A B P P2 g _114084 s y h1). Qed.
Lemma lem8384374 (p : Prop) : (term753 p) = (~ p).
Proof. exact (EQ_MP (@lem21028 p) (@lem21107 p)). Qed.
Lemma lem8384375 {A B P : Type'} (P2 : type560 A B P) (g : A -> B) (_114084 : type794 A P) (s : P -> A) (y : P) : (term3231 A B P P2 g _114084 s y) = (term3170 A B P P2 g _114084 s y).
Proof. exact (@lem8384374 (term3164 A B P P2 g _114084 s y)). Qed.
Lemma lem8384376 {A B P : Type'} (P2 : type560 A B P) (g : A -> B) (_114084 : type794 A P) (s : P -> A) (y : P) (h1 : term3170 A B P P2 g _114084 s y) : term3170 A B P P2 g _114084 s y.
Proof. exact (EQ_MP (@lem8384375 A B P P2 g _114084 s y) (@lem8384372 A B P P2 g _114084 s y h1)). Qed.
Lemma lem8384378 (b : Prop) (a : Prop) : (a \/ b) = (term754 b a).
Proof. exact (EQ_MP (@lem20682 b a) (@lem20764 b a)). Qed.
Lemma lem8384379 {A B P : Type'} (P2 : type560 A B P) (lt2 : type1402 A) (z : type518 A B P) (_114094 : A -> B) (_114095 : A -> B) (s : P -> A) (_114096 : P) : (term3173 A B P lt2 z s _114094 P2 _114095 _114096) = (term3232 A B P P2 lt2 z _114094 _114095 s _114096).
Proof. exact (@lem8384378 (term2957 A B P _114094 P2 _114095 _114096) (term2986 A B P lt2 z _114094 _114095 s _114096)). Qed.
Lemma lem8384381 (a : Prop) (b : Prop) : (term756 a b) = (term757 a b).
Proof. exact (EQ_MP (@lem20789 a b) (@lem20895 a b)). Qed.
Lemma lem8384382 {A B P : Type'} (_114094 : A -> B) (P2 : type560 A B P) (_114095 : A -> B) (_114096 : P) : (term3233 A B P _114094 P2 _114095 _114096) = (term3234 A B P _114094 P2 _114095 _114096).
Proof. exact (@lem8384381 (term2853 A B P P2 _114094 _114096) (term2851 A B P P2 _114095 _114096)). Qed.
Lemma lem8384384 (a : Prop) : (term47 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem8384385 {A B P : Type'} (P2 : type560 A B P) (_114094 : A -> B) (_114096 : P) : (term3235 A B P P2 _114094 _114096) = (term2851 A B P P2 _114094 _114096).
Proof. exact (@lem8384384 (term2851 A B P P2 _114094 _114096)). Qed.
Lemma lem8384386 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8384387 {A B P : Type'} (P2 : type560 A B P) (_114094 : A -> B) (_114096 : P) : (term3236 A B P P2 _114094 _114096) = (term3237 A B P P2 _114094 _114096).
Proof. exact (MK_COMB (@lem8384386) (@lem8384385 A B P P2 _114094 _114096)). Qed.
Lemma lem8384388 {A B P : Type'} (P2 : type560 A B P) (_114095 : A -> B) (_114096 : P) : (term2853 A B P P2 _114095 _114096) = (term2853 A B P P2 _114095 _114096).
Proof. exact (eq_refl (term2853 A B P P2 _114095 _114096)). Qed.
Lemma lem8384389 {A B P : Type'} (_114094 : A -> B) (P2 : type560 A B P) (_114095 : A -> B) (_114096 : P) : (term3234 A B P _114094 P2 _114095 _114096) = (term3238 A B P _114094 P2 _114095 _114096).
Proof. exact (MK_COMB (@lem8384387 A B P P2 _114094 _114096) (@lem8384388 A B P P2 _114095 _114096)). Qed.
Lemma lem8384390 {A B P : Type'} (_114094 : A -> B) (P2 : type560 A B P) (_114095 : A -> B) (_114096 : P) : (term3233 A B P _114094 P2 _114095 _114096) = (term3238 A B P _114094 P2 _114095 _114096).
Proof. exact (TRANS (@lem8384382 A B P _114094 P2 _114095 _114096) (@lem8384389 A B P _114094 P2 _114095 _114096)). Qed.
Lemma lem8384391 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem8384392 {A B P : Type'} (_114094 : A -> B) (P2 : type560 A B P) (_114095 : A -> B) (_114096 : P) : (term3239 A B P _114094 P2 _114095 _114096) = (term3240 A B P _114094 P2 _114095 _114096).
Proof. exact (MK_COMB (@lem8384391) (@lem8384390 A B P _114094 P2 _114095 _114096)). Qed.
Lemma lem8384393 {A B P : Type'} (lt2 : type1402 A) (z : type518 A B P) (_114094 : A -> B) (_114095 : A -> B) (s : P -> A) (_114096 : P) : (term2986 A B P lt2 z _114094 _114095 s _114096) = (term2986 A B P lt2 z _114094 _114095 s _114096).
Proof. exact (eq_refl (term2986 A B P lt2 z _114094 _114095 s _114096)). Qed.
Lemma lem8384394 {A B P : Type'} (P2 : type560 A B P) (lt2 : type1402 A) (z : type518 A B P) (_114094 : A -> B) (_114095 : A -> B) (s : P -> A) (_114096 : P) : (term3232 A B P P2 lt2 z _114094 _114095 s _114096) = (term3241 A B P P2 lt2 z _114094 _114095 s _114096).
Proof. exact (MK_COMB (@lem8384392 A B P _114094 P2 _114095 _114096) (@lem8384393 A B P lt2 z _114094 _114095 s _114096)). Qed.
Lemma lem8384395 {A B P : Type'} (P2 : type560 A B P) (lt2 : type1402 A) (z : type518 A B P) (_114094 : A -> B) (_114095 : A -> B) (s : P -> A) (_114096 : P) : (term3173 A B P lt2 z s _114094 P2 _114095 _114096) = (term3241 A B P P2 lt2 z _114094 _114095 s _114096).
Proof. exact (TRANS (@lem8384379 A B P P2 lt2 z _114094 _114095 s _114096) (@lem8384394 A B P P2 lt2 z _114094 _114095 s _114096)). Qed.
Lemma lem8384397 {A B P : Type'} (y : P) (lt2 : type1402 A) (G2 : type557 A B P) (H2 : type558 A B P) (f : A -> B) (P2 : type560 A B P) (g : A -> B) (_114084 : type794 A P) (s : P -> A) (x : A) (h1 : term3170 A B P P2 g _114084 s y) (h2 : term2944 A B P y lt2 P2 G2 f H2 g _114084 s x) (h3 : term2937 A B P f P2 g _114084 s x) : term3242 A B P f P2 g _114084 s y.
Proof. exact (conj (@lem8384368 A B P y lt2 G2 H2 f P2 g _114084 s x h2 h3) (@lem8384376 A B P P2 g _114084 s y h1)). Qed.
Lemma lem8384399 {A B P : Type'} (_114094 : A -> B) (_114095 : A -> B) (_114096 : P) (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (h1 : term2270 A B P lt2 s z P2 G2 H2) : term3241 A B P P2 lt2 z _114094 _114095 s _114096.
Proof. exact (EQ_MP (@lem8384395 A B P P2 lt2 z _114094 _114095 s _114096) (@lem8382439 A B P _114094 _114095 _114096 lt2 s z P2 G2 H2 h1)). Qed.
Lemma lem8384400 {A B P : Type'} (_114094 : A -> B) (_114095 : A -> B) (_114096 : P) (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (h1 : term2270 A B P lt2 s z P2 G2 H2) : term3241 A B P P2 lt2 z _114094 _114095 s _114096.
Proof. exact (@lem8384399 A B P _114094 _114095 _114096 lt2 s z P2 G2 H2 h1). Qed.
Lemma lem8384401 {A B P : Type'} (f : A -> B) (g : A -> B) (_114084 : type794 A P) (y : P) (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (h1 : term2270 A B P lt2 s z P2 G2 H2) : term3243 A B P P2 lt2 z f g _114084 s y.
Proof. exact (@lem8384400 A B P f g (term3244 A P _114084 s y) lt2 s z P2 G2 H2 h1). Qed.
Lemma lem8384404 {A B P : Type'} (z : type518 A B P) (y : P) (lt2 : type1402 A) (G2 : type557 A B P) (H2 : type558 A B P) (f : A -> B) (P2 : type560 A B P) (g : A -> B) (_114084 : type794 A P) (s : P -> A) (x : A) (h1 : term2270 A B P lt2 s z P2 G2 H2) (h2 : term3170 A B P P2 g _114084 s y) (h3 : term2944 A B P y lt2 P2 G2 f H2 g _114084 s x) (h4 : term2937 A B P f P2 g _114084 s x) : term3245 A B P lt2 z f g _114084 s y.
Proof. exact (@lem8384401 A B P f g _114084 y lt2 s z P2 G2 H2 h1 (@lem8384397 A B P y lt2 G2 H2 f P2 g _114084 s x h2 h3 h4)). Qed.
Lemma lem8384405 {A B P : Type'} (z : type518 A B P) (y : P) (lt2 : type1402 A) (G2 : type557 A B P) (H2 : type558 A B P) (f : A -> B) (P2 : type560 A B P) (g : A -> B) (_114084 : type794 A P) (s : P -> A) (x : A) (h1 : term2270 A B P lt2 s z P2 G2 H2) (h2 : term3170 A B P P2 g _114084 s y) (h3 : term2944 A B P y lt2 P2 G2 f H2 g _114084 s x) (h4 : term2937 A B P f P2 g _114084 s x) : term3246 A B P lt2 z f g _114084 s y.
Proof. exact (fun h0 : term3247 A B P lt2 z f g _114084 s y => @lem8384404 A B P z y lt2 G2 H2 f P2 g _114084 s x h1 h2 h3 h4). Qed.
Lemma lem8384407 (p : Prop) : (term748 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8384408 {A B P : Type'} (lt2 : type1402 A) (z : type518 A B P) (f : A -> B) (g : A -> B) (_114084 : type794 A P) (s : P -> A) (y : P) : (term3246 A B P lt2 z f g _114084 s y) = (term3245 A B P lt2 z f g _114084 s y).
Proof. exact (@lem8384407 (term3245 A B P lt2 z f g _114084 s y)). Qed.
Lemma lem8384409 {A B P : Type'} (z : type518 A B P) (y : P) (lt2 : type1402 A) (G2 : type557 A B P) (H2 : type558 A B P) (f : A -> B) (P2 : type560 A B P) (g : A -> B) (_114084 : type794 A P) (s : P -> A) (x : A) (h1 : term2270 A B P lt2 s z P2 G2 H2) (h2 : term3170 A B P P2 g _114084 s y) (h3 : term2944 A B P y lt2 P2 G2 f H2 g _114084 s x) (h4 : term2937 A B P f P2 g _114084 s x) : term3245 A B P lt2 z f g _114084 s y.
Proof. exact (EQ_MP (@lem8384408 A B P lt2 z f g _114084 s y) (@lem8384405 A B P z y lt2 G2 H2 f P2 g _114084 s x h1 h2 h3 h4)). Qed.
Lemma lem8384427 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem8384428 {A : Type'} (_114601 : A) (_114600 : A -> Prop) (_114598 : A -> Prop) (_114599 : A) : (term3210 A _114600 _114601 _114598 _114599) = (term3248 A _114601 _114600 _114598 _114599).
Proof. exact (@lem8384427 (@I (A -> Prop) _114600 _114601) (term3249 A _114598 _114600) (term3250 A _114598 _114599)). Qed.
Lemma lem8384446 {A : Type'} (_114599 : A) (_114601 : A) : (term3251 A _114599 _114601) = (term3251 A _114599 _114601).
Proof. exact (eq_refl (term3251 A _114599 _114601)). Qed.
Lemma lem8384447 {A : Type'} (_114601 : A) (_114600 : A -> Prop) (_114598 : A -> Prop) (_114599 : A) : (term3212 A _114600 _114601 _114598 _114599) = (term3252 A _114601 _114600 _114598 _114599).
Proof. exact (MK_COMB (@lem8384446 A _114599 _114601) (@lem8384428 A _114601 _114600 _114598 _114599)). Qed.
Lemma lem8384451 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem8384452 {A : Type'} (_114601 : A) (_114600 : A -> Prop) (_114598 : A -> Prop) (_114599 : A) : (term3252 A _114601 _114600 _114598 _114599) = (term3253 A _114601 _114600 _114598 _114599).
Proof. exact (@lem8384451 (@I (A -> Prop) _114600 _114601) (term3254 A _114599 _114601) (term3255 A _114600 _114598 _114599)). Qed.
Lemma lem8384482 {A : Type'} (_114601 : A) (_114600 : A -> Prop) (_114598 : A -> Prop) (_114599 : A) : (term3212 A _114600 _114601 _114598 _114599) = (term3253 A _114601 _114600 _114598 _114599).
Proof. exact (TRANS (@lem8384447 A _114601 _114600 _114598 _114599) (@lem8384452 A _114601 _114600 _114598 _114599)). Qed.
Lemma lem8384483 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8384484 {A : Type'} (_114601 : A) (_114600 : A -> Prop) (_114598 : A -> Prop) (_114599 : A) : (term3256 A _114600 _114601 _114598 _114599) = (term3257 A _114601 _114600 _114598 _114599).
Proof. exact (MK_COMB (@lem8384483) (@lem8384482 A _114601 _114600 _114598 _114599)). Qed.
Lemma lem8384514 {A : Type'} (_114601 : A) (_114600 : A -> Prop) (_114598 : A -> Prop) (_114599 : A) : (term3253 A _114601 _114600 _114598 _114599) = (term3253 A _114601 _114600 _114598 _114599).
Proof. exact (eq_refl (term3253 A _114601 _114600 _114598 _114599)). Qed.
Lemma lem8384515 {A : Type'} (_114601 : A) (_114600 : A -> Prop) (_114598 : A -> Prop) (_114599 : A) : ((term3212 A _114600 _114601 _114598 _114599) = (term3253 A _114601 _114600 _114598 _114599)) = ((term3253 A _114601 _114600 _114598 _114599) = (term3253 A _114601 _114600 _114598 _114599)).
Proof. exact (MK_COMB (@lem8384484 A _114601 _114600 _114598 _114599) (@lem8384514 A _114601 _114600 _114598 _114599)). Qed.
Lemma lem8384517 {A : Type'} (x : A) : (x = x) = True.
Proof. exact (EQ_MP (@lem20665 A x) (@lem20664 A x)). Qed.
Lemma lem8384518 (x : Prop) : (x = x) = True.
Proof. exact (@lem8384517 Prop x). Qed.
Lemma lem8384519 {A : Type'} (_114601 : A) (_114600 : A -> Prop) (_114598 : A -> Prop) (_114599 : A) : ((term3253 A _114601 _114600 _114598 _114599) = (term3253 A _114601 _114600 _114598 _114599)) = True.
Proof. exact (@lem8384518 (term3253 A _114601 _114600 _114598 _114599)). Qed.
Lemma lem8384520 {A : Type'} (_114601 : A) (_114600 : A -> Prop) (_114598 : A -> Prop) (_114599 : A) : ((term3212 A _114600 _114601 _114598 _114599) = (term3253 A _114601 _114600 _114598 _114599)) = True.
Proof. exact (TRANS (@lem8384515 A _114601 _114600 _114598 _114599) (@lem8384519 A _114601 _114600 _114598 _114599)). Qed.
Lemma lem8384521 {A : Type'} (_114601 : A) (_114600 : A -> Prop) (_114598 : A -> Prop) (_114599 : A) : True = ((term3212 A _114600 _114601 _114598 _114599) = (term3253 A _114601 _114600 _114598 _114599)).
Proof. exact (SYM (@lem8384520 A _114601 _114600 _114598 _114599)). Qed.
Lemma lem8384522 {A : Type'} (_114601 : A) (_114600 : A -> Prop) (_114598 : A -> Prop) (_114599 : A) : (term3212 A _114600 _114601 _114598 _114599) = (term3253 A _114601 _114600 _114598 _114599).
Proof. exact (EQ_MP (@lem8384521 A _114601 _114600 _114598 _114599) (@lem0)). Qed.
Lemma lem8384523 {A : Type'} (_114601 : A) (_114600 : A -> Prop) (_114598 : A -> Prop) (_114599 : A) : term3253 A _114601 _114600 _114598 _114599.
Proof. exact (EQ_MP (@lem8384522 A _114601 _114600 _114598 _114599) (@lem8383997 A _114600 _114601 _114598 _114599)). Qed.
Lemma lem8384525 (b : Prop) (a : Prop) : (a \/ b) = (term754 b a).
Proof. exact (EQ_MP (@lem20682 b a) (@lem20764 b a)). Qed.
Lemma lem8384526 {A : Type'} (_114598 : A -> Prop) (_114599 : A) (_114600 : A -> Prop) (_114601 : A) : (term3253 A _114601 _114600 _114598 _114599) = (term3258 A _114598 _114599 _114600 _114601).
Proof. exact (@lem8384525 (term3259 A _114601 _114600 _114598 _114599) (@I (A -> Prop) _114600 _114601)). Qed.
Lemma lem8384528 (a : Prop) (b : Prop) : (term756 a b) = (term757 a b).
Proof. exact (EQ_MP (@lem20789 a b) (@lem20895 a b)). Qed.
Lemma lem8384529 {A : Type'} (_114601 : A) (_114600 : A -> Prop) (_114598 : A -> Prop) (_114599 : A) : (term3260 A _114601 _114600 _114598 _114599) = (term3261 A _114601 _114600 _114598 _114599).
Proof. exact (@lem8384528 (term3254 A _114599 _114601) (term3255 A _114600 _114598 _114599)). Qed.
Lemma lem8384531 (a : Prop) : (term47 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem8384532 {A : Type'} (_114599 : A) (_114601 : A) : (term3262 A _114599 _114601) = (_114599 = _114601).
Proof. exact (@lem8384531 (_114599 = _114601)). Qed.
Lemma lem8384533 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8384534 {A : Type'} (_114599 : A) (_114601 : A) : (term3263 A _114599 _114601) = (term3264 A _114599 _114601).
Proof. exact (MK_COMB (@lem8384533) (@lem8384532 A _114599 _114601)). Qed.
Lemma lem8384536 (a : Prop) (b : Prop) : (term756 a b) = (term757 a b).
Proof. exact (EQ_MP (@lem20789 a b) (@lem20895 a b)). Qed.
Lemma lem8384537 {A : Type'} (_114600 : A -> Prop) (_114598 : A -> Prop) (_114599 : A) : (term3265 A _114600 _114598 _114599) = (term3266 A _114600 _114598 _114599).
Proof. exact (@lem8384536 (term3249 A _114598 _114600) (term3250 A _114598 _114599)). Qed.
Lemma lem8384539 (a : Prop) : (term47 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem8384540 {A : Type'} (_114598 : A -> Prop) (_114600 : A -> Prop) : (term3267 A _114598 _114600) = (_114598 = _114600).
Proof. exact (@lem8384539 (_114598 = _114600)). Qed.
Lemma lem8384541 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8384542 {A : Type'} (_114598 : A -> Prop) (_114600 : A -> Prop) : (term3268 A _114598 _114600) = (term3269 A _114598 _114600).
Proof. exact (MK_COMB (@lem8384541) (@lem8384540 A _114598 _114600)). Qed.
Lemma lem8384544 (a : Prop) : (term47 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem8384545 {A : Type'} (_114598 : A -> Prop) (_114599 : A) : (term3270 A _114598 _114599) = (@I (A -> Prop) _114598 _114599).
Proof. exact (@lem8384544 (@I (A -> Prop) _114598 _114599)). Qed.
Lemma lem8384546 {A : Type'} (_114600 : A -> Prop) (_114598 : A -> Prop) (_114599 : A) : (term3266 A _114600 _114598 _114599) = (term3271 A _114600 _114598 _114599).
Proof. exact (MK_COMB (@lem8384542 A _114598 _114600) (@lem8384545 A _114598 _114599)). Qed.
Lemma lem8384547 {A : Type'} (_114600 : A -> Prop) (_114598 : A -> Prop) (_114599 : A) : (term3265 A _114600 _114598 _114599) = (term3271 A _114600 _114598 _114599).
Proof. exact (TRANS (@lem8384537 A _114600 _114598 _114599) (@lem8384546 A _114600 _114598 _114599)). Qed.
Lemma lem8384548 {A : Type'} (_114601 : A) (_114600 : A -> Prop) (_114598 : A -> Prop) (_114599 : A) : (term3261 A _114601 _114600 _114598 _114599) = (term3272 A _114601 _114600 _114598 _114599).
Proof. exact (MK_COMB (@lem8384534 A _114599 _114601) (@lem8384547 A _114600 _114598 _114599)). Qed.
Lemma lem8384549 {A : Type'} (_114601 : A) (_114600 : A -> Prop) (_114598 : A -> Prop) (_114599 : A) : (term3260 A _114601 _114600 _114598 _114599) = (term3272 A _114601 _114600 _114598 _114599).
Proof. exact (TRANS (@lem8384529 A _114601 _114600 _114598 _114599) (@lem8384548 A _114601 _114600 _114598 _114599)). Qed.
Lemma lem8384550 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem8384551 {A : Type'} (_114601 : A) (_114600 : A -> Prop) (_114598 : A -> Prop) (_114599 : A) : (term3273 A _114601 _114600 _114598 _114599) = (term3274 A _114601 _114600 _114598 _114599).
Proof. exact (MK_COMB (@lem8384550) (@lem8384549 A _114601 _114600 _114598 _114599)). Qed.
Lemma lem8384552 {A : Type'} (_114600 : A -> Prop) (_114601 : A) : (@I (A -> Prop) _114600 _114601) = (@I (A -> Prop) _114600 _114601).
Proof. exact (eq_refl (@I (A -> Prop) _114600 _114601)). Qed.
Lemma lem8384553 {A : Type'} (_114598 : A -> Prop) (_114599 : A) (_114600 : A -> Prop) (_114601 : A) : (term3258 A _114598 _114599 _114600 _114601) = (term3275 A _114598 _114599 _114600 _114601).
Proof. exact (MK_COMB (@lem8384551 A _114601 _114600 _114598 _114599) (@lem8384552 A _114600 _114601)). Qed.
Lemma lem8384554 {A : Type'} (_114598 : A -> Prop) (_114599 : A) (_114600 : A -> Prop) (_114601 : A) : (term3253 A _114601 _114600 _114598 _114599) = (term3275 A _114598 _114599 _114600 _114601).
Proof. exact (TRANS (@lem8384526 A _114598 _114599 _114600 _114601) (@lem8384553 A _114598 _114599 _114600 _114601)). Qed.
Lemma lem8384556 {A B P : Type'} (z : type518 A B P) (y : P) (lt2 : type1402 A) (G2 : type557 A B P) (H2 : type558 A B P) (f : A -> B) (P2 : type560 A B P) (g : A -> B) (_114084 : type794 A P) (s : P -> A) (x : A) (h1 : term2270 A B P lt2 s z P2 G2 H2) (h2 : term3170 A B P P2 g _114084 s y) (h3 : term2944 A B P y lt2 P2 G2 f H2 g _114084 s x) (h4 : term2937 A B P f P2 g _114084 s x) : term3276 A B P lt2 z f g _114084 s y.
Proof. exact (conj (@lem8384361 A B P lt2 z f g _114084 s y) (@lem8384409 A B P z y lt2 G2 H2 f P2 g _114084 s x h1 h2 h3 h4)). Qed.
Lemma lem8384557 {A B P : Type'} (z : type518 A B P) (y : P) (lt2 : type1402 A) (G2 : type557 A B P) (H2 : type558 A B P) (f : A -> B) (P2 : type560 A B P) (g : A -> B) (_114084 : type794 A P) (s : P -> A) (x : A) (h1 : term2270 A B P lt2 s z P2 G2 H2) (h2 : term1491 A P _114084) (h3 : term3170 A B P P2 g _114084 s y) (h4 : term2944 A B P y lt2 P2 G2 f H2 g _114084 s x) (h5 : term2937 A B P f P2 g _114084 s x) : term3277 A B P lt2 z f g _114084 s y.
Proof. exact (conj (@lem8384352 A P s y _114084 h2) (@lem8384556 A B P z y lt2 G2 H2 f P2 g _114084 s x h1 h3 h4 h5)). Qed.
Lemma lem8384559 {A : Type'} (_114598 : A -> Prop) (_114599 : A) (_114600 : A -> Prop) (_114601 : A) : term3275 A _114598 _114599 _114600 _114601.
Proof. exact (EQ_MP (@lem8384554 A _114598 _114599 _114600 _114601) (@lem8384523 A _114601 _114600 _114598 _114599)). Qed.
Lemma lem8384560 {A : Type'} (_114598 : A -> Prop) (_114599 : A) (_114600 : A -> Prop) (_114601 : A) : term3275 A _114598 _114599 _114600 _114601.
Proof. exact (@lem8384559 A _114598 _114599 _114600 _114601). Qed.
Lemma lem8384561 {A B P : Type'} (lt2 : type1402 A) (z : type518 A B P) (f : A -> B) (g : A -> B) (_114084 : type794 A P) (s : P -> A) (y : P) : term3278 A B P lt2 z f g _114084 s y.
Proof. exact (@lem8384560 A (term3227 A B P lt2 z f g _114084 s y) (term3224 A P _114084 s y) (term3227 A B P lt2 z f g _114084 s y) (@I (P -> A) s y)). Qed.
Lemma lem8384564 {A B P : Type'} (z : type518 A B P) (y : P) (lt2 : type1402 A) (G2 : type557 A B P) (H2 : type558 A B P) (f : A -> B) (P2 : type560 A B P) (g : A -> B) (_114084 : type794 A P) (s : P -> A) (x : A) (h1 : term2270 A B P lt2 s z P2 G2 H2) (h2 : term1491 A P _114084) (h3 : term3170 A B P P2 g _114084 s y) (h4 : term2944 A B P y lt2 P2 G2 f H2 g _114084 s x) (h5 : term2937 A B P f P2 g _114084 s x) : term3279 A B P lt2 z f g _114084 s y.
Proof. exact (@lem8384561 A B P lt2 z f g _114084 s y (@lem8384557 A B P z y lt2 G2 H2 f P2 g _114084 s x h1 h2 h3 h4 h5)). Qed.
Lemma lem8384565 {A B P : Type'} (z : type518 A B P) (y : P) (lt2 : type1402 A) (G2 : type557 A B P) (H2 : type558 A B P) (f : A -> B) (P2 : type560 A B P) (g : A -> B) (_114084 : type794 A P) (s : P -> A) (x : A) (h1 : term2270 A B P lt2 s z P2 G2 H2) (h2 : term1491 A P _114084) (h3 : term3170 A B P P2 g _114084 s y) (h4 : term2944 A B P y lt2 P2 G2 f H2 g _114084 s x) (h5 : term2937 A B P f P2 g _114084 s x) : term3280 A B P lt2 z f g _114084 s y.
Proof. exact (fun h0 : term3281 A B P lt2 z f g _114084 s y => @lem8384564 A B P z y lt2 G2 H2 f P2 g _114084 s x h1 h2 h3 h4 h5). Qed.
Lemma lem8384567 (p : Prop) : (term748 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8384568 {A B P : Type'} (lt2 : type1402 A) (z : type518 A B P) (f : A -> B) (g : A -> B) (_114084 : type794 A P) (s : P -> A) (y : P) : (term3280 A B P lt2 z f g _114084 s y) = (term3279 A B P lt2 z f g _114084 s y).
Proof. exact (@lem8384567 (term3279 A B P lt2 z f g _114084 s y)). Qed.
Lemma lem8384569 {A B P : Type'} (z : type518 A B P) (y : P) (lt2 : type1402 A) (G2 : type557 A B P) (H2 : type558 A B P) (f : A -> B) (P2 : type560 A B P) (g : A -> B) (_114084 : type794 A P) (s : P -> A) (x : A) (h1 : term2270 A B P lt2 s z P2 G2 H2) (h2 : term1491 A P _114084) (h3 : term3170 A B P P2 g _114084 s y) (h4 : term2944 A B P y lt2 P2 G2 f H2 g _114084 s x) (h5 : term2937 A B P f P2 g _114084 s x) : term3279 A B P lt2 z f g _114084 s y.
Proof. exact (EQ_MP (@lem8384568 A B P lt2 z f g _114084 s y) (@lem8384565 A B P z y lt2 G2 H2 f P2 g _114084 s x h1 h2 h3 h4 h5)). Qed.
Lemma lem8384575 (q : Prop) (p : Prop) : (p \/ q) = (q \/ p).
Proof. exact (proj1 (@lem827 (@el Prop) p q)). Qed.
Lemma lem8384576 {A B P : Type'} (f : A -> B) (g : A -> B) (lt2 : type1402 A) (_114108 : A) (s : P -> A) (y : P) : (term3158 A B P lt2 s y f g _114108) = (term3282 A B P f g lt2 _114108 s y).
Proof. exact (@lem8384575 ((@I (A -> B) f _114108) = (@I (A -> B) g _114108)) (term3196 A P lt2 _114108 s y)). Qed.
Lemma lem8384584 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8384585 {A B P : Type'} (f : A -> B) (g : A -> B) (lt2 : type1402 A) (_114108 : A) (s : P -> A) (y : P) : (term3283 A B P lt2 s y f g _114108) = (term3284 A B P f g lt2 _114108 s y).
Proof. exact (MK_COMB (@lem8384584) (@lem8384576 A B P f g lt2 _114108 s y)). Qed.
Lemma lem8384593 {A B P : Type'} (f : A -> B) (g : A -> B) (lt2 : type1402 A) (_114108 : A) (s : P -> A) (y : P) : (term3282 A B P f g lt2 _114108 s y) = (term3282 A B P f g lt2 _114108 s y).
Proof. exact (eq_refl (term3282 A B P f g lt2 _114108 s y)). Qed.
Lemma lem8384594 {A B P : Type'} (f : A -> B) (g : A -> B) (lt2 : type1402 A) (_114108 : A) (s : P -> A) (y : P) : ((term3158 A B P lt2 s y f g _114108) = (term3282 A B P f g lt2 _114108 s y)) = ((term3282 A B P f g lt2 _114108 s y) = (term3282 A B P f g lt2 _114108 s y)).
Proof. exact (MK_COMB (@lem8384585 A B P f g lt2 _114108 s y) (@lem8384593 A B P f g lt2 _114108 s y)). Qed.
Lemma lem8384596 {A : Type'} (x : A) : (x = x) = True.
Proof. exact (EQ_MP (@lem20665 A x) (@lem20664 A x)). Qed.
Lemma lem8384597 (x : Prop) : (x = x) = True.
Proof. exact (@lem8384596 Prop x). Qed.
Lemma lem8384598 {A B P : Type'} (f : A -> B) (g : A -> B) (lt2 : type1402 A) (_114108 : A) (s : P -> A) (y : P) : ((term3282 A B P f g lt2 _114108 s y) = (term3282 A B P f g lt2 _114108 s y)) = True.
Proof. exact (@lem8384597 (term3282 A B P f g lt2 _114108 s y)). Qed.
Lemma lem8384599 {A B P : Type'} (f : A -> B) (g : A -> B) (lt2 : type1402 A) (_114108 : A) (s : P -> A) (y : P) : ((term3158 A B P lt2 s y f g _114108) = (term3282 A B P f g lt2 _114108 s y)) = True.
Proof. exact (TRANS (@lem8384594 A B P f g lt2 _114108 s y) (@lem8384598 A B P f g lt2 _114108 s y)). Qed.
Lemma lem8384600 {A B P : Type'} (f : A -> B) (g : A -> B) (lt2 : type1402 A) (_114108 : A) (s : P -> A) (y : P) : True = ((term3158 A B P lt2 s y f g _114108) = (term3282 A B P f g lt2 _114108 s y)).
Proof. exact (SYM (@lem8384599 A B P f g lt2 _114108 s y)). Qed.
Lemma lem8384601 {A B P : Type'} (f : A -> B) (g : A -> B) (lt2 : type1402 A) (_114108 : A) (s : P -> A) (y : P) : (term3158 A B P lt2 s y f g _114108) = (term3282 A B P f g lt2 _114108 s y).
Proof. exact (EQ_MP (@lem8384600 A B P f g lt2 _114108 s y) (@lem0)). Qed.
Lemma lem8384602 {A B P : Type'} (_114108 : A) (y : P) (lt2 : type1402 A) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (_114084 : type794 A P) (s : P -> A) (x : A) (h1 : term2944 A B P y lt2 P2 G2 f H2 g _114084 s x) : term3282 A B P f g lt2 _114108 s y.
Proof. exact (EQ_MP (@lem8384601 A B P f g lt2 _114108 s y) (@lem8382231 A B P _114108 y lt2 P2 G2 f H2 g _114084 s x h1)). Qed.
Lemma lem8384604 (b : Prop) (a : Prop) : (a \/ b) = (term754 b a).
Proof. exact (EQ_MP (@lem20682 b a) (@lem20764 b a)). Qed.
Lemma lem8384605 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (y : P) (f : A -> B) (g : A -> B) (_114108 : A) : (term3282 A B P f g lt2 _114108 s y) = (term3285 A B P lt2 s y f g _114108).
Proof. exact (@lem8384604 (term3196 A P lt2 _114108 s y) ((@I (A -> B) f _114108) = (@I (A -> B) g _114108))). Qed.
Lemma lem8384607 (a : Prop) : (term47 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem8384608 {A P : Type'} (lt2 : type1402 A) (_114108 : A) (s : P -> A) (y : P) : (term3286 A P lt2 _114108 s y) = (term2844 A P lt2 _114108 s y).
Proof. exact (@lem8384607 (term2844 A P lt2 _114108 s y)). Qed.
Lemma lem8384609 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem8384610 {A P : Type'} (lt2 : type1402 A) (_114108 : A) (s : P -> A) (y : P) : (term3287 A P lt2 _114108 s y) = (term3288 A P lt2 _114108 s y).
Proof. exact (MK_COMB (@lem8384609) (@lem8384608 A P lt2 _114108 s y)). Qed.
Lemma lem8384611 {A B : Type'} (f : A -> B) (g : A -> B) (_114108 : A) : ((@I (A -> B) f _114108) = (@I (A -> B) g _114108)) = ((@I (A -> B) f _114108) = (@I (A -> B) g _114108)).
Proof. exact (eq_refl ((@I (A -> B) f _114108) = (@I (A -> B) g _114108))). Qed.
Lemma lem8384612 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (y : P) (f : A -> B) (g : A -> B) (_114108 : A) : (term3285 A B P lt2 s y f g _114108) = (term3289 A B P lt2 s y f g _114108).
Proof. exact (MK_COMB (@lem8384610 A P lt2 _114108 s y) (@lem8384611 A B f g _114108)). Qed.
Lemma lem8384613 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (y : P) (f : A -> B) (g : A -> B) (_114108 : A) : (term3282 A B P f g lt2 _114108 s y) = (term3289 A B P lt2 s y f g _114108).
Proof. exact (TRANS (@lem8384605 A B P lt2 s y f g _114108) (@lem8384612 A B P lt2 s y f g _114108)). Qed.
Lemma lem8384616 {A B P : Type'} (_114108 : A) (y : P) (lt2 : type1402 A) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (_114084 : type794 A P) (s : P -> A) (x : A) (h1 : term2944 A B P y lt2 P2 G2 f H2 g _114084 s x) : term3289 A B P lt2 s y f g _114108.
Proof. exact (EQ_MP (@lem8384613 A B P lt2 s y f g _114108) (@lem8384602 A B P _114108 y lt2 P2 G2 f H2 g _114084 s x h1)). Qed.
Lemma lem8384617 {A B P : Type'} (_114108 : A) (y : P) (lt2 : type1402 A) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (_114084 : type794 A P) (s : P -> A) (x : A) (h1 : term2944 A B P y lt2 P2 G2 f H2 g _114084 s x) : term3289 A B P lt2 s y f g _114108.
Proof. exact (@lem8384616 A B P _114108 y lt2 P2 G2 f H2 g _114084 s x h1). Qed.
Lemma lem8384618 {A B P : Type'} (z : type518 A B P) (y : P) (lt2 : type1402 A) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (_114084 : type794 A P) (s : P -> A) (x : A) (h1 : term2944 A B P y lt2 P2 G2 f H2 g _114084 s x) : term3290 A B P lt2 z f g _114084 s y.
Proof. exact (@lem8384617 A B P (term3291 A B P z f g _114084 s y) y lt2 P2 G2 f H2 g _114084 s x h1). Qed.
Lemma lem8384621 {A B P : Type'} (z : type518 A B P) (y : P) (lt2 : type1402 A) (G2 : type557 A B P) (H2 : type558 A B P) (f : A -> B) (P2 : type560 A B P) (g : A -> B) (_114084 : type794 A P) (s : P -> A) (x : A) (h1 : term2270 A B P lt2 s z P2 G2 H2) (h2 : term1491 A P _114084) (h3 : term3170 A B P P2 g _114084 s y) (h4 : term2944 A B P y lt2 P2 G2 f H2 g _114084 s x) (h5 : term2937 A B P f P2 g _114084 s x) : (term3292 A B P z f g _114084 s y) = (term3293 A B P z f g _114084 s y).
Proof. exact (@lem8384618 A B P z y lt2 P2 G2 f H2 g _114084 s x h4 (@lem8384569 A B P z y lt2 G2 H2 f P2 g _114084 s x h1 h2 h3 h4 h5)). Qed.
Lemma lem8384622 {A B P : Type'} (z : type518 A B P) (y : P) (lt2 : type1402 A) (G2 : type557 A B P) (H2 : type558 A B P) (f : A -> B) (P2 : type560 A B P) (g : A -> B) (_114084 : type794 A P) (s : P -> A) (x : A) (h1 : term2270 A B P lt2 s z P2 G2 H2) (h2 : term1491 A P _114084) (h3 : term3170 A B P P2 g _114084 s y) (h4 : term2944 A B P y lt2 P2 G2 f H2 g _114084 s x) (h5 : term2937 A B P f P2 g _114084 s x) : term3294 A B P z f g _114084 s y.
Proof. exact (fun h0 : term3295 A B P z f g _114084 s y => @lem8384621 A B P z y lt2 G2 H2 f P2 g _114084 s x h1 h2 h3 h4 h5). Qed.
Lemma lem8384624 (p : Prop) : (term748 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8384625 {A B P : Type'} (z : type518 A B P) (f : A -> B) (g : A -> B) (_114084 : type794 A P) (s : P -> A) (y : P) : (term3294 A B P z f g _114084 s y) = ((term3292 A B P z f g _114084 s y) = (term3293 A B P z f g _114084 s y)).
Proof. exact (@lem8384624 ((term3292 A B P z f g _114084 s y) = (term3293 A B P z f g _114084 s y))). Qed.
Lemma lem8384626 {A B P : Type'} (z : type518 A B P) (y : P) (lt2 : type1402 A) (G2 : type557 A B P) (H2 : type558 A B P) (f : A -> B) (P2 : type560 A B P) (g : A -> B) (_114084 : type794 A P) (s : P -> A) (x : A) (h1 : term2270 A B P lt2 s z P2 G2 H2) (h2 : term1491 A P _114084) (h3 : term3170 A B P P2 g _114084 s y) (h4 : term2944 A B P y lt2 P2 G2 f H2 g _114084 s x) (h5 : term2937 A B P f P2 g _114084 s x) : (term3292 A B P z f g _114084 s y) = (term3293 A B P z f g _114084 s y).
Proof. exact (EQ_MP (@lem8384625 A B P z f g _114084 s y) (@lem8384622 A B P z y lt2 G2 H2 f P2 g _114084 s x h1 h2 h3 h4 h5)). Qed.
Lemma lem8384628 {A B P : Type'} (y : P) (lt2 : type1402 A) (G2 : type557 A B P) (H2 : type558 A B P) (f : A -> B) (P2 : type560 A B P) (g : A -> B) (_114084 : type794 A P) (s : P -> A) (x : A) (h1 : term2944 A B P y lt2 P2 G2 f H2 g _114084 s x) (h2 : term2937 A B P f P2 g _114084 s x) : term3164 A B P P2 f _114084 s y.
Proof. exact (EQ_MP (@lem8382243 A B P y lt2 P2 G2 f H2 g _114084 s x h1) (@lem8380245 A B P f P2 g _114084 s x h2)). Qed.
Lemma lem8384629 {A B P : Type'} (y : P) (lt2 : type1402 A) (G2 : type557 A B P) (H2 : type558 A B P) (f : A -> B) (P2 : type560 A B P) (g : A -> B) (_114084 : type794 A P) (s : P -> A) (x : A) (h1 : term2944 A B P y lt2 P2 G2 f H2 g _114084 s x) (h2 : term2937 A B P f P2 g _114084 s x) : term3230 A B P P2 f _114084 s y.
Proof. exact (fun h0 : term3170 A B P P2 f _114084 s y => @lem8384628 A B P y lt2 G2 H2 f P2 g _114084 s x h1 h2). Qed.
Lemma lem8384631 (p : Prop) : (term748 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8384632 {A B P : Type'} (P2 : type560 A B P) (f : A -> B) (_114084 : type794 A P) (s : P -> A) (y : P) : (term3230 A B P P2 f _114084 s y) = (term3164 A B P P2 f _114084 s y).
Proof. exact (@lem8384631 (term3164 A B P P2 f _114084 s y)). Qed.
Lemma lem8384633 {A B P : Type'} (y : P) (lt2 : type1402 A) (G2 : type557 A B P) (H2 : type558 A B P) (f : A -> B) (P2 : type560 A B P) (g : A -> B) (_114084 : type794 A P) (s : P -> A) (x : A) (h1 : term2944 A B P y lt2 P2 G2 f H2 g _114084 s x) (h2 : term2937 A B P f P2 g _114084 s x) : term3164 A B P P2 f _114084 s y.
Proof. exact (EQ_MP (@lem8384632 A B P P2 f _114084 s y) (@lem8384629 A B P y lt2 G2 H2 f P2 g _114084 s x h1 h2)). Qed.
Lemma lem8384651 (q : Prop) (p : Prop) : (p \/ q) = (q \/ p).
Proof. exact (proj1 (@lem827 (@el Prop) p q)). Qed.
Lemma lem8384652 {A B P : Type'} (_114095 : A -> B) (P2 : type560 A B P) (_114094 : A -> B) (_114096 : P) : (term2957 A B P _114094 P2 _114095 _114096) = (term2961 A B P _114095 P2 _114094 _114096).
Proof. exact (@lem8384651 (term2851 A B P P2 _114095 _114096) (term2853 A B P P2 _114094 _114096)). Qed.
Lemma lem8384658 {A B P : Type'} (z : type518 A B P) (_114094 : A -> B) (_114095 : A -> B) (_114096 : P) : (term3296 A B P z _114094 _114095 _114096) = (term3296 A B P z _114094 _114095 _114096).
Proof. exact (eq_refl (term3296 A B P z _114094 _114095 _114096)). Qed.
Lemma lem8384659 {A B P : Type'} (z : type518 A B P) (_114095 : A -> B) (P2 : type560 A B P) (_114094 : A -> B) (_114096 : P) : (term3174 A B P z _114094 P2 _114095 _114096) = (term3297 A B P z _114095 P2 _114094 _114096).
Proof. exact (MK_COMB (@lem8384658 A B P z _114094 _114095 _114096) (@lem8384652 A B P _114095 P2 _114094 _114096)). Qed.
Lemma lem8384663 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem8384664 {A B P : Type'} (z : type518 A B P) (_114095 : A -> B) (P2 : type560 A B P) (_114094 : A -> B) (_114096 : P) : (term3297 A B P z _114095 P2 _114094 _114096) = (term3298 A B P z _114095 P2 _114094 _114096).
Proof. exact (@lem8384663 (term2851 A B P P2 _114095 _114096) (term2979 A B P z _114094 _114095 _114096) (term2853 A B P P2 _114094 _114096)). Qed.
Lemma lem8384682 {A B P : Type'} (z : type518 A B P) (_114095 : A -> B) (P2 : type560 A B P) (_114094 : A -> B) (_114096 : P) : (term3174 A B P z _114094 P2 _114095 _114096) = (term3298 A B P z _114095 P2 _114094 _114096).
Proof. exact (TRANS (@lem8384659 A B P z _114095 P2 _114094 _114096) (@lem8384664 A B P z _114095 P2 _114094 _114096)). Qed.
Lemma lem8384683 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8384684 {A B P : Type'} (z : type518 A B P) (_114095 : A -> B) (P2 : type560 A B P) (_114094 : A -> B) (_114096 : P) : (term3299 A B P z _114094 P2 _114095 _114096) = (term3300 A B P z _114095 P2 _114094 _114096).
Proof. exact (MK_COMB (@lem8384683) (@lem8384682 A B P z _114095 P2 _114094 _114096)). Qed.
Lemma lem8384702 {A B P : Type'} (z : type518 A B P) (_114095 : A -> B) (P2 : type560 A B P) (_114094 : A -> B) (_114096 : P) : (term3298 A B P z _114095 P2 _114094 _114096) = (term3298 A B P z _114095 P2 _114094 _114096).
Proof. exact (eq_refl (term3298 A B P z _114095 P2 _114094 _114096)). Qed.
Lemma lem8384703 {A B P : Type'} (z : type518 A B P) (_114095 : A -> B) (P2 : type560 A B P) (_114094 : A -> B) (_114096 : P) : ((term3174 A B P z _114094 P2 _114095 _114096) = (term3298 A B P z _114095 P2 _114094 _114096)) = ((term3298 A B P z _114095 P2 _114094 _114096) = (term3298 A B P z _114095 P2 _114094 _114096)).
Proof. exact (MK_COMB (@lem8384684 A B P z _114095 P2 _114094 _114096) (@lem8384702 A B P z _114095 P2 _114094 _114096)). Qed.
Lemma lem8384705 {A : Type'} (x : A) : (x = x) = True.
Proof. exact (EQ_MP (@lem20665 A x) (@lem20664 A x)). Qed.
Lemma lem8384706 (x : Prop) : (x = x) = True.
Proof. exact (@lem8384705 Prop x). Qed.
Lemma lem8384707 {A B P : Type'} (z : type518 A B P) (_114095 : A -> B) (P2 : type560 A B P) (_114094 : A -> B) (_114096 : P) : ((term3298 A B P z _114095 P2 _114094 _114096) = (term3298 A B P z _114095 P2 _114094 _114096)) = True.
Proof. exact (@lem8384706 (term3298 A B P z _114095 P2 _114094 _114096)). Qed.
Lemma lem8384708 {A B P : Type'} (z : type518 A B P) (_114095 : A -> B) (P2 : type560 A B P) (_114094 : A -> B) (_114096 : P) : ((term3174 A B P z _114094 P2 _114095 _114096) = (term3298 A B P z _114095 P2 _114094 _114096)) = True.
Proof. exact (TRANS (@lem8384703 A B P z _114095 P2 _114094 _114096) (@lem8384707 A B P z _114095 P2 _114094 _114096)). Qed.
Lemma lem8384709 {A B P : Type'} (z : type518 A B P) (_114095 : A -> B) (P2 : type560 A B P) (_114094 : A -> B) (_114096 : P) : True = ((term3174 A B P z _114094 P2 _114095 _114096) = (term3298 A B P z _114095 P2 _114094 _114096)).
Proof. exact (SYM (@lem8384708 A B P z _114095 P2 _114094 _114096)). Qed.
Lemma lem8384710 {A B P : Type'} (z : type518 A B P) (_114095 : A -> B) (P2 : type560 A B P) (_114094 : A -> B) (_114096 : P) : (term3174 A B P z _114094 P2 _114095 _114096) = (term3298 A B P z _114095 P2 _114094 _114096).
Proof. exact (EQ_MP (@lem8384709 A B P z _114095 P2 _114094 _114096) (@lem0)). Qed.
Lemma lem8384711 {A B P : Type'} (_114095 : A -> B) (_114094 : A -> B) (_114096 : P) (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (h1 : term2270 A B P lt2 s z P2 G2 H2) : term3298 A B P z _114095 P2 _114094 _114096.
Proof. exact (EQ_MP (@lem8384710 A B P z _114095 P2 _114094 _114096) (@lem8382453 A B P _114094 _114095 _114096 lt2 s z P2 G2 H2 h1)). Qed.
Lemma lem8384713 (b : Prop) (a : Prop) : (a \/ b) = (term754 b a).
Proof. exact (EQ_MP (@lem20682 b a) (@lem20764 b a)). Qed.
Lemma lem8384714 {A B P : Type'} (z : type518 A B P) (_114094 : A -> B) (P2 : type560 A B P) (_114095 : A -> B) (_114096 : P) : (term3298 A B P z _114095 P2 _114094 _114096) = (term3301 A B P z _114094 P2 _114095 _114096).
Proof. exact (@lem8384713 (term3302 A B P z _114095 P2 _114094 _114096) (term2851 A B P P2 _114095 _114096)). Qed.
Lemma lem8384716 (a : Prop) (b : Prop) : (term756 a b) = (term757 a b).
Proof. exact (EQ_MP (@lem20789 a b) (@lem20895 a b)). Qed.
Lemma lem8384717 {A B P : Type'} (z : type518 A B P) (_114095 : A -> B) (P2 : type560 A B P) (_114094 : A -> B) (_114096 : P) : (term3303 A B P z _114095 P2 _114094 _114096) = (term3304 A B P z _114095 P2 _114094 _114096).
Proof. exact (@lem8384716 (term2979 A B P z _114094 _114095 _114096) (term2853 A B P P2 _114094 _114096)). Qed.
Lemma lem8384719 (a : Prop) : (term47 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem8384720 {A B P : Type'} (z : type518 A B P) (_114094 : A -> B) (_114095 : A -> B) (_114096 : P) : (term3305 A B P z _114094 _114095 _114096) = ((term2972 A B P z _114094 _114095 _114096) = (term2975 A B P z _114094 _114095 _114096)).
Proof. exact (@lem8384719 ((term2972 A B P z _114094 _114095 _114096) = (term2975 A B P z _114094 _114095 _114096))). Qed.
Lemma lem8384721 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8384722 {A B P : Type'} (z : type518 A B P) (_114094 : A -> B) (_114095 : A -> B) (_114096 : P) : (term3306 A B P z _114094 _114095 _114096) = (term3307 A B P z _114094 _114095 _114096).
Proof. exact (MK_COMB (@lem8384721) (@lem8384720 A B P z _114094 _114095 _114096)). Qed.
Lemma lem8384724 (a : Prop) : (term47 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem8384725 {A B P : Type'} (P2 : type560 A B P) (_114094 : A -> B) (_114096 : P) : (term3235 A B P P2 _114094 _114096) = (term2851 A B P P2 _114094 _114096).
Proof. exact (@lem8384724 (term2851 A B P P2 _114094 _114096)). Qed.
Lemma lem8384726 {A B P : Type'} (z : type518 A B P) (_114095 : A -> B) (P2 : type560 A B P) (_114094 : A -> B) (_114096 : P) : (term3304 A B P z _114095 P2 _114094 _114096) = (term3308 A B P z _114095 P2 _114094 _114096).
Proof. exact (MK_COMB (@lem8384722 A B P z _114094 _114095 _114096) (@lem8384725 A B P P2 _114094 _114096)). Qed.
Lemma lem8384727 {A B P : Type'} (z : type518 A B P) (_114095 : A -> B) (P2 : type560 A B P) (_114094 : A -> B) (_114096 : P) : (term3303 A B P z _114095 P2 _114094 _114096) = (term3308 A B P z _114095 P2 _114094 _114096).
Proof. exact (TRANS (@lem8384717 A B P z _114095 P2 _114094 _114096) (@lem8384726 A B P z _114095 P2 _114094 _114096)). Qed.
Lemma lem8384728 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem8384729 {A B P : Type'} (z : type518 A B P) (_114095 : A -> B) (P2 : type560 A B P) (_114094 : A -> B) (_114096 : P) : (term3309 A B P z _114095 P2 _114094 _114096) = (term3310 A B P z _114095 P2 _114094 _114096).
Proof. exact (MK_COMB (@lem8384728) (@lem8384727 A B P z _114095 P2 _114094 _114096)). Qed.
Lemma lem8384730 {A B P : Type'} (P2 : type560 A B P) (_114095 : A -> B) (_114096 : P) : (term2851 A B P P2 _114095 _114096) = (term2851 A B P P2 _114095 _114096).
Proof. exact (eq_refl (term2851 A B P P2 _114095 _114096)). Qed.
Lemma lem8384731 {A B P : Type'} (z : type518 A B P) (_114094 : A -> B) (P2 : type560 A B P) (_114095 : A -> B) (_114096 : P) : (term3301 A B P z _114094 P2 _114095 _114096) = (term3311 A B P z _114094 P2 _114095 _114096).
Proof. exact (MK_COMB (@lem8384729 A B P z _114095 P2 _114094 _114096) (@lem8384730 A B P P2 _114095 _114096)). Qed.
Lemma lem8384732 {A B P : Type'} (z : type518 A B P) (_114094 : A -> B) (P2 : type560 A B P) (_114095 : A -> B) (_114096 : P) : (term3298 A B P z _114095 P2 _114094 _114096) = (term3311 A B P z _114094 P2 _114095 _114096).
Proof. exact (TRANS (@lem8384714 A B P z _114094 P2 _114095 _114096) (@lem8384731 A B P z _114094 P2 _114095 _114096)). Qed.
Lemma lem8384734 {A B P : Type'} (z : type518 A B P) (y : P) (lt2 : type1402 A) (G2 : type557 A B P) (H2 : type558 A B P) (f : A -> B) (P2 : type560 A B P) (g : A -> B) (_114084 : type794 A P) (s : P -> A) (x : A) (h1 : term2270 A B P lt2 s z P2 G2 H2) (h2 : term1491 A P _114084) (h3 : term3170 A B P P2 g _114084 s y) (h4 : term2944 A B P y lt2 P2 G2 f H2 g _114084 s x) (h5 : term2937 A B P f P2 g _114084 s x) : term3312 A B P z g P2 f _114084 s y.
Proof. exact (conj (@lem8384626 A B P z y lt2 G2 H2 f P2 g _114084 s x h1 h2 h3 h4 h5) (@lem8384633 A B P y lt2 G2 H2 f P2 g _114084 s x h4 h5)). Qed.
Lemma lem8384736 {A B P : Type'} (_114094 : A -> B) (_114095 : A -> B) (_114096 : P) (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (h1 : term2270 A B P lt2 s z P2 G2 H2) : term3311 A B P z _114094 P2 _114095 _114096.
Proof. exact (EQ_MP (@lem8384732 A B P z _114094 P2 _114095 _114096) (@lem8384711 A B P _114095 _114094 _114096 lt2 s z P2 G2 H2 h1)). Qed.
Lemma lem8384737 {A B P : Type'} (_114094 : A -> B) (_114095 : A -> B) (_114096 : P) (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (h1 : term2270 A B P lt2 s z P2 G2 H2) : term3311 A B P z _114094 P2 _114095 _114096.
Proof. exact (@lem8384736 A B P _114094 _114095 _114096 lt2 s z P2 G2 H2 h1). Qed.
Lemma lem8384738 {A B P : Type'} (f : A -> B) (g : A -> B) (_114084 : type794 A P) (y : P) (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (h1 : term2270 A B P lt2 s z P2 G2 H2) : term3313 A B P z f P2 g _114084 s y.
Proof. exact (@lem8384737 A B P f g (term3244 A P _114084 s y) lt2 s z P2 G2 H2 h1). Qed.
Lemma lem8384741 {A B P : Type'} (z : type518 A B P) (y : P) (lt2 : type1402 A) (G2 : type557 A B P) (H2 : type558 A B P) (f : A -> B) (P2 : type560 A B P) (g : A -> B) (_114084 : type794 A P) (s : P -> A) (x : A) (h1 : term2270 A B P lt2 s z P2 G2 H2) (h2 : term1491 A P _114084) (h3 : term3170 A B P P2 g _114084 s y) (h4 : term2944 A B P y lt2 P2 G2 f H2 g _114084 s x) (h5 : term2937 A B P f P2 g _114084 s x) : term3164 A B P P2 g _114084 s y.
Proof. exact (@lem8384738 A B P f g _114084 y lt2 s z P2 G2 H2 h1 (@lem8384734 A B P z y lt2 G2 H2 f P2 g _114084 s x h1 h2 h3 h4 h5)). Qed.
Lemma lem8384742 {A B P : Type'} (z : type518 A B P) (y : P) (lt2 : type1402 A) (G2 : type557 A B P) (H2 : type558 A B P) (f : A -> B) (P2 : type560 A B P) (g : A -> B) (_114084 : type794 A P) (s : P -> A) (x : A) (h1 : term2270 A B P lt2 s z P2 G2 H2) (h2 : term1491 A P _114084) (h3 : term2944 A B P y lt2 P2 G2 f H2 g _114084 s x) (h4 : term2937 A B P f P2 g _114084 s x) : term3230 A B P P2 g _114084 s y.
Proof. exact (fun h0 : term3170 A B P P2 g _114084 s y => @lem8384741 A B P z y lt2 G2 H2 f P2 g _114084 s x h1 h2 h0 h3 h4). Qed.
Lemma lem8384744 (p : Prop) : (term748 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8384745 {A B P : Type'} (P2 : type560 A B P) (g : A -> B) (_114084 : type794 A P) (s : P -> A) (y : P) : (term3230 A B P P2 g _114084 s y) = (term3164 A B P P2 g _114084 s y).
Proof. exact (@lem8384744 (term3164 A B P P2 g _114084 s y)). Qed.
Lemma lem8384746 {A B P : Type'} (z : type518 A B P) (y : P) (lt2 : type1402 A) (G2 : type557 A B P) (H2 : type558 A B P) (f : A -> B) (P2 : type560 A B P) (g : A -> B) (_114084 : type794 A P) (s : P -> A) (x : A) (h1 : term2270 A B P lt2 s z P2 G2 H2) (h2 : term1491 A P _114084) (h3 : term2944 A B P y lt2 P2 G2 f H2 g _114084 s x) (h4 : term2937 A B P f P2 g _114084 s x) : term3164 A B P P2 g _114084 s y.
Proof. exact (EQ_MP (@lem8384745 A B P P2 g _114084 s y) (@lem8384742 A B P z y lt2 G2 H2 f P2 g _114084 s x h1 h2 h3 h4)). Qed.
Lemma lem8384749 (p : Prop) : (~ p) = (p -> False).
Proof. exact (EQ_MP (@lem21021 p) (@lem0)). Qed.
Lemma lem8384751 {A B P : Type'} (P2 : type560 A B P) (g : A -> B) (_114084 : type794 A P) (s : P -> A) (y : P) : (term3170 A B P P2 g _114084 s y) = (term3314 A B P P2 g _114084 s y).
Proof. exact (@lem8384749 (term3164 A B P P2 g _114084 s y)). Qed.
Lemma lem8384754 {A B P : Type'} (y : P) (lt2 : type1402 A) (G2 : type557 A B P) (H2 : type558 A B P) (f : A -> B) (P2 : type560 A B P) (g : A -> B) (_114084 : type794 A P) (s : P -> A) (x : A) (h1 : term2944 A B P y lt2 P2 G2 f H2 g _114084 s x) (h2 : term2937 A B P f P2 g _114084 s x) : term3314 A B P P2 g _114084 s y.
Proof. exact (EQ_MP (@lem8384751 A B P P2 g _114084 s y) (@lem8382257 A B P y lt2 G2 H2 f P2 g _114084 s x h1 h2)). Qed.
Lemma lem8384757 {A B P : Type'} (z : type518 A B P) (y : P) (lt2 : type1402 A) (G2 : type557 A B P) (H2 : type558 A B P) (f : A -> B) (P2 : type560 A B P) (g : A -> B) (_114084 : type794 A P) (s : P -> A) (x : A) (h1 : term2270 A B P lt2 s z P2 G2 H2) (h2 : term1491 A P _114084) (h3 : term2944 A B P y lt2 P2 G2 f H2 g _114084 s x) (h4 : term2937 A B P f P2 g _114084 s x) : False.
Proof. exact (@lem8384754 A B P y lt2 G2 H2 f P2 g _114084 s x h3 h4 (@lem8384746 A B P z y lt2 G2 H2 f P2 g _114084 s x h1 h2 h3 h4)). Qed.
Lemma lem8384758 {A B P : Type'} (z : type518 A B P) (y : P) (lt2 : type1402 A) (G2 : type557 A B P) (H2 : type558 A B P) (f : A -> B) (P2 : type560 A B P) (g : A -> B) (_114084 : type794 A P) (s : P -> A) (x : A) (h1 : term2270 A B P lt2 s z P2 G2 H2) (h2 : term1491 A P _114084) (h3 : term2944 A B P y lt2 P2 G2 f H2 g _114084 s x) (h4 : term2937 A B P f P2 g _114084 s x) : term750.
Proof. exact (fun h0 : ~ False => @lem8384757 A B P z y lt2 G2 H2 f P2 g _114084 s x h1 h2 h3 h4). Qed.
Lemma lem8384760 (p : Prop) : (term748 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8384761 : term750 = False.
Proof. exact (@lem8384760 False). Qed.
Lemma lem8384782 {A : Type'} : (@I (A -> Prop)) = (@I (A -> Prop)).
Proof. exact (eq_refl (@I (A -> Prop))). Qed.
Lemma lem8384783 {A : Type'} (_114670 : A -> Prop) (_114672 : A -> Prop) (h1 : _114670 = _114672) : _114670 = _114672.
Proof. exact (h1). Qed.
Lemma lem8384784 {A : Type'} (_114671 : A) (_114673 : A) (h1 : _114671 = _114673) : _114671 = _114673.
Proof. exact (h1). Qed.
Lemma lem8384785 {A : Type'} (_114670 : A -> Prop) (_114672 : A -> Prop) (h1 : _114670 = _114672) : (@I (A -> Prop) _114670) = (@I (A -> Prop) _114672).
Proof. exact (MK_COMB (@lem8384782 A) (@lem8384783 A _114670 _114672 h1)). Qed.
Lemma lem8384786 {A : Type'} (_114671 : A) (_114673 : A) (_114670 : A -> Prop) (_114672 : A -> Prop) (h1 : _114671 = _114673) (h2 : _114670 = _114672) : (@I (A -> Prop) _114670 _114671) = (@I (A -> Prop) _114672 _114673).
Proof. exact (MK_COMB (@lem8384785 A _114670 _114672 h2) (@lem8384784 A _114671 _114673 h1)). Qed.
Lemma lem8384788 (b : Prop) (a : Prop) : term3205 b a.
Proof. exact (EQ_MP (@lem21501 b a) (@lem21598 b a)). Qed.
Lemma lem8384789 {A : Type'} (_114672 : A -> Prop) (_114673 : A) (_114670 : A -> Prop) (_114671 : A) : term3206 A _114672 _114673 _114670 _114671.
Proof. exact (@lem8384788 (@I (A -> Prop) _114672 _114673) (@I (A -> Prop) _114670 _114671)). Qed.
Lemma lem8384790 {A : Type'} (_114671 : A) (_114673 : A) (_114670 : A -> Prop) (_114672 : A -> Prop) (h1 : _114671 = _114673) (h2 : _114670 = _114672) : term3207 A _114672 _114673 _114670 _114671.
Proof. exact (@lem8384789 A _114672 _114673 _114670 _114671 (@lem8384786 A _114671 _114673 _114670 _114672 h1 h2)). Qed.
Lemma lem8384791 {A : Type'} (_114672 : A -> Prop) (_114670 : A -> Prop) (_114671 : A) (_114673 : A) (h1 : _114671 = _114673) : term3208 A _114672 _114673 _114670 _114671.
Proof. exact (fun h0 : _114670 = _114672 => @lem8384790 A _114671 _114673 _114670 _114672 h1 h0). Qed.
Lemma lem8384793 (a : Prop) (b : Prop) : (a -> b) = (term3209 a b).
Proof. exact (EQ_MP (@lem21394 a b) (@lem21490 a b)). Qed.
Lemma lem8384794 {A : Type'} (_114672 : A -> Prop) (_114673 : A) (_114670 : A -> Prop) (_114671 : A) : (term3208 A _114672 _114673 _114670 _114671) = (term3210 A _114672 _114673 _114670 _114671).
Proof. exact (@lem8384793 (_114670 = _114672) (term3207 A _114672 _114673 _114670 _114671)). Qed.
Lemma lem8384795 {A : Type'} (_114672 : A -> Prop) (_114670 : A -> Prop) (_114671 : A) (_114673 : A) (h1 : _114671 = _114673) : term3210 A _114672 _114673 _114670 _114671.
Proof. exact (EQ_MP (@lem8384794 A _114672 _114673 _114670 _114671) (@lem8384791 A _114672 _114670 _114671 _114673 h1)). Qed.
Lemma lem8384796 {A : Type'} (_114672 : A -> Prop) (_114673 : A) (_114670 : A -> Prop) (_114671 : A) : term3211 A _114672 _114673 _114670 _114671.
Proof. exact (fun h0 : _114671 = _114673 => @lem8384795 A _114672 _114670 _114671 _114673 h0). Qed.
Lemma lem8384798 (a : Prop) (b : Prop) : (a -> b) = (term3209 a b).
Proof. exact (EQ_MP (@lem21394 a b) (@lem21490 a b)). Qed.
Lemma lem8384799 {A : Type'} (_114672 : A -> Prop) (_114673 : A) (_114670 : A -> Prop) (_114671 : A) : (term3211 A _114672 _114673 _114670 _114671) = (term3212 A _114672 _114673 _114670 _114671).
Proof. exact (@lem8384798 (_114671 = _114673) (term3210 A _114672 _114673 _114670 _114671)). Qed.
Lemma lem8384800 {A : Type'} (_114672 : A -> Prop) (_114673 : A) (_114670 : A -> Prop) (_114671 : A) : term3212 A _114672 _114673 _114670 _114671.
Proof. exact (EQ_MP (@lem8384799 A _114672 _114673 _114670 _114671) (@lem8384796 A _114672 _114673 _114670 _114671)). Qed.
Lemma lem8385086 {A : Type'} (x : A) : x = x.
Proof. exact (@lem21386 A x). Qed.
Lemma lem8385087 {A : Type'} (x : A) : x = x.
Proof. exact (@lem8385086 A x). Qed.
Lemma lem8385088 {A P : Type'} (s : P -> A) (y : P) : (@I (P -> A) s y) = (@I (P -> A) s y).
Proof. exact (@lem8385087 A (@I (P -> A) s y)). Qed.
Lemma lem8385089 {A P : Type'} (s : P -> A) (y : P) : term3213 A P s y.
Proof. exact (fun h0 : term3214 A P s y => @lem8385088 A P s y). Qed.
Lemma lem8385091 (p : Prop) : (term748 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8385092 {A P : Type'} (s : P -> A) (y : P) : (term3213 A P s y) = ((@I (P -> A) s y) = (@I (P -> A) s y)).
Proof. exact (@lem8385091 ((@I (P -> A) s y) = (@I (P -> A) s y))). Qed.
Lemma lem8385093 {A P : Type'} (s : P -> A) (y : P) : (@I (P -> A) s y) = (@I (P -> A) s y).
Proof. exact (EQ_MP (@lem8385092 A P s y) (@lem8385089 A P s y)). Qed.
Lemma lem8385099 (q : Prop) (p : Prop) : (p \/ q) = (q \/ p).
Proof. exact (proj1 (@lem827 (@el Prop) p q)). Qed.
Lemma lem8385100 {A P : Type'} (_114084 : type794 A P) (_114109 : P -> A) (_114111 : P) (_114110 : A) : (term3065 A P _114111 _114084 _114109 _114110) = (term3215 A P _114084 _114109 _114111 _114110).
Proof. exact (@lem8385099 ((term2811 A P _114084 _114109 _114110) = _114110) (term2813 A P _114109 _114111 _114110)). Qed.
Lemma lem8385110 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8385111 {A P : Type'} (_114084 : type794 A P) (_114109 : P -> A) (_114111 : P) (_114110 : A) : (term3216 A P _114111 _114084 _114109 _114110) = (term3217 A P _114084 _114109 _114111 _114110).
Proof. exact (MK_COMB (@lem8385110) (@lem8385100 A P _114084 _114109 _114111 _114110)). Qed.
Lemma lem8385121 {A P : Type'} (_114084 : type794 A P) (_114109 : P -> A) (_114111 : P) (_114110 : A) : (term3215 A P _114084 _114109 _114111 _114110) = (term3215 A P _114084 _114109 _114111 _114110).
Proof. exact (eq_refl (term3215 A P _114084 _114109 _114111 _114110)). Qed.
Lemma lem8385122 {A P : Type'} (_114084 : type794 A P) (_114109 : P -> A) (_114111 : P) (_114110 : A) : ((term3065 A P _114111 _114084 _114109 _114110) = (term3215 A P _114084 _114109 _114111 _114110)) = ((term3215 A P _114084 _114109 _114111 _114110) = (term3215 A P _114084 _114109 _114111 _114110)).
Proof. exact (MK_COMB (@lem8385111 A P _114084 _114109 _114111 _114110) (@lem8385121 A P _114084 _114109 _114111 _114110)). Qed.
Lemma lem8385124 {A : Type'} (x : A) : (x = x) = True.
Proof. exact (EQ_MP (@lem20665 A x) (@lem20664 A x)). Qed.
Lemma lem8385125 (x : Prop) : (x = x) = True.
Proof. exact (@lem8385124 Prop x). Qed.
Lemma lem8385126 {A P : Type'} (_114084 : type794 A P) (_114109 : P -> A) (_114111 : P) (_114110 : A) : ((term3215 A P _114084 _114109 _114111 _114110) = (term3215 A P _114084 _114109 _114111 _114110)) = True.
Proof. exact (@lem8385125 (term3215 A P _114084 _114109 _114111 _114110)). Qed.
Lemma lem8385127 {A P : Type'} (_114084 : type794 A P) (_114109 : P -> A) (_114111 : P) (_114110 : A) : ((term3065 A P _114111 _114084 _114109 _114110) = (term3215 A P _114084 _114109 _114111 _114110)) = True.
Proof. exact (TRANS (@lem8385122 A P _114084 _114109 _114111 _114110) (@lem8385126 A P _114084 _114109 _114111 _114110)). Qed.
Lemma lem8385128 {A P : Type'} (_114084 : type794 A P) (_114109 : P -> A) (_114111 : P) (_114110 : A) : True = ((term3065 A P _114111 _114084 _114109 _114110) = (term3215 A P _114084 _114109 _114111 _114110)).
Proof. exact (SYM (@lem8385127 A P _114084 _114109 _114111 _114110)). Qed.
Lemma lem8385129 {A P : Type'} (_114084 : type794 A P) (_114109 : P -> A) (_114111 : P) (_114110 : A) : (term3065 A P _114111 _114084 _114109 _114110) = (term3215 A P _114084 _114109 _114111 _114110).
Proof. exact (EQ_MP (@lem8385128 A P _114084 _114109 _114111 _114110) (@lem0)). Qed.
Lemma lem8385130 {A P : Type'} (_114109 : P -> A) (_114111 : P) (_114110 : A) (_114084 : type794 A P) (h1 : term1491 A P _114084) : term3215 A P _114084 _114109 _114111 _114110.
Proof. exact (EQ_MP (@lem8385129 A P _114084 _114109 _114111 _114110) (@lem8382510 A P _114111 _114109 _114110 _114084 h1)). Qed.
Lemma lem8385132 (b : Prop) (a : Prop) : (a \/ b) = (term754 b a).
Proof. exact (EQ_MP (@lem20682 b a) (@lem20764 b a)). Qed.
Lemma lem8385133 {A P : Type'} (_114111 : P) (_114084 : type794 A P) (_114109 : P -> A) (_114110 : A) : (term3215 A P _114084 _114109 _114111 _114110) = (term3218 A P _114111 _114084 _114109 _114110).
Proof. exact (@lem8385132 (term2813 A P _114109 _114111 _114110) ((term2811 A P _114084 _114109 _114110) = _114110)). Qed.
Lemma lem8385135 (a : Prop) : (term47 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem8385136 {A P : Type'} (_114109 : P -> A) (_114111 : P) (_114110 : A) : (term3219 A P _114109 _114111 _114110) = ((@I (P -> A) _114109 _114111) = _114110).
Proof. exact (@lem8385135 ((@I (P -> A) _114109 _114111) = _114110)). Qed.
Lemma lem8385137 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem8385138 {A P : Type'} (_114109 : P -> A) (_114111 : P) (_114110 : A) : (term3220 A P _114109 _114111 _114110) = (term3221 A P _114109 _114111 _114110).
Proof. exact (MK_COMB (@lem8385137) (@lem8385136 A P _114109 _114111 _114110)). Qed.
Lemma lem8385139 {A P : Type'} (_114084 : type794 A P) (_114109 : P -> A) (_114110 : A) : ((term2811 A P _114084 _114109 _114110) = _114110) = ((term2811 A P _114084 _114109 _114110) = _114110).
Proof. exact (eq_refl ((term2811 A P _114084 _114109 _114110) = _114110)). Qed.
Lemma lem8385140 {A P : Type'} (_114111 : P) (_114084 : type794 A P) (_114109 : P -> A) (_114110 : A) : (term3218 A P _114111 _114084 _114109 _114110) = (term3222 A P _114111 _114084 _114109 _114110).
Proof. exact (MK_COMB (@lem8385138 A P _114109 _114111 _114110) (@lem8385139 A P _114084 _114109 _114110)). Qed.
Lemma lem8385141 {A P : Type'} (_114111 : P) (_114084 : type794 A P) (_114109 : P -> A) (_114110 : A) : (term3215 A P _114084 _114109 _114111 _114110) = (term3222 A P _114111 _114084 _114109 _114110).
Proof. exact (TRANS (@lem8385133 A P _114111 _114084 _114109 _114110) (@lem8385140 A P _114111 _114084 _114109 _114110)). Qed.
Lemma lem8385144 {A P : Type'} (_114111 : P) (_114109 : P -> A) (_114110 : A) (_114084 : type794 A P) (h1 : term1491 A P _114084) : term3222 A P _114111 _114084 _114109 _114110.
Proof. exact (EQ_MP (@lem8385141 A P _114111 _114084 _114109 _114110) (@lem8385130 A P _114109 _114111 _114110 _114084 h1)). Qed.
Lemma lem8385145 {A P : Type'} (_114111 : P) (_114109 : P -> A) (_114110 : A) (_114084 : type794 A P) (h1 : term1491 A P _114084) : term3222 A P _114111 _114084 _114109 _114110.
Proof. exact (@lem8385144 A P _114111 _114109 _114110 _114084 h1). Qed.
Lemma lem8385146 {A P : Type'} (s : P -> A) (y : P) (_114084 : type794 A P) (h1 : term1491 A P _114084) : term3223 A P _114084 s y.
Proof. exact (@lem8385145 A P y s (@I (P -> A) s y) _114084 h1). Qed.
Lemma lem8385149 {A P : Type'} (s : P -> A) (y : P) (_114084 : type794 A P) (h1 : term1491 A P _114084) : (term3224 A P _114084 s y) = (@I (P -> A) s y).
Proof. exact (@lem8385146 A P s y _114084 h1 (@lem8385093 A P s y)). Qed.
Lemma lem8385150 {A P : Type'} (s : P -> A) (y : P) (_114084 : type794 A P) (h1 : term1491 A P _114084) : (term3224 A P _114084 s y) = (@I (P -> A) s y).
Proof. exact (@lem8385149 A P s y _114084 h1). Qed.
Lemma lem8385151 {A P : Type'} (s : P -> A) (y : P) (_114084 : type794 A P) (h1 : term1491 A P _114084) : term3225 A P _114084 s y.
Proof. exact (fun h0 : term3226 A P _114084 s y => @lem8385150 A P s y _114084 h1). Qed.
Lemma lem8385153 (p : Prop) : (term748 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8385154 {A P : Type'} (_114084 : type794 A P) (s : P -> A) (y : P) : (term3225 A P _114084 s y) = ((term3224 A P _114084 s y) = (@I (P -> A) s y)).
Proof. exact (@lem8385153 ((term3224 A P _114084 s y) = (@I (P -> A) s y))). Qed.
Lemma lem8385155 {A P : Type'} (s : P -> A) (y : P) (_114084 : type794 A P) (h1 : term1491 A P _114084) : (term3224 A P _114084 s y) = (@I (P -> A) s y).
Proof. exact (EQ_MP (@lem8385154 A P _114084 s y) (@lem8385151 A P s y _114084 h1)). Qed.
Lemma lem8385157 {A : Type'} (x : A -> Prop) : x = x.
Proof. exact (@lem21386 (A -> Prop) x). Qed.
Lemma lem8385158 {A : Type'} (x : A -> Prop) : x = x.
Proof. exact (@lem8385157 A x). Qed.
Lemma lem8385159 {A B P : Type'} (lt2 : type1402 A) (z : type518 A B P) (f : A -> B) (g : A -> B) (_114084 : type794 A P) (s : P -> A) (y : P) : (term3227 A B P lt2 z f g _114084 s y) = (term3227 A B P lt2 z f g _114084 s y).
Proof. exact (@lem8385158 A (term3227 A B P lt2 z f g _114084 s y)). Qed.
Lemma lem8385160 {A B P : Type'} (lt2 : type1402 A) (z : type518 A B P) (f : A -> B) (g : A -> B) (_114084 : type794 A P) (s : P -> A) (y : P) : term3228 A B P lt2 z f g _114084 s y.
Proof. exact (fun h0 : term3229 A B P lt2 z f g _114084 s y => @lem8385159 A B P lt2 z f g _114084 s y). Qed.
Lemma lem8385162 (p : Prop) : (term748 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8385163 {A B P : Type'} (lt2 : type1402 A) (z : type518 A B P) (f : A -> B) (g : A -> B) (_114084 : type794 A P) (s : P -> A) (y : P) : (term3228 A B P lt2 z f g _114084 s y) = ((term3227 A B P lt2 z f g _114084 s y) = (term3227 A B P lt2 z f g _114084 s y)).
Proof. exact (@lem8385162 ((term3227 A B P lt2 z f g _114084 s y) = (term3227 A B P lt2 z f g _114084 s y))). Qed.
Lemma lem8385164 {A B P : Type'} (lt2 : type1402 A) (z : type518 A B P) (f : A -> B) (g : A -> B) (_114084 : type794 A P) (s : P -> A) (y : P) : (term3227 A B P lt2 z f g _114084 s y) = (term3227 A B P lt2 z f g _114084 s y).
Proof. exact (EQ_MP (@lem8385163 A B P lt2 z f g _114084 s y) (@lem8385160 A B P lt2 z f g _114084 s y)). Qed.
Lemma lem8385167 {A B P : Type'} (P2 : type560 A B P) (f : A -> B) (_114084 : type794 A P) (s : P -> A) (y : P) (h1 : term3170 A B P P2 f _114084 s y) : term3170 A B P P2 f _114084 s y.
Proof. exact (h1). Qed.
Lemma lem8385168 {A B P : Type'} (P2 : type560 A B P) (f : A -> B) (_114084 : type794 A P) (s : P -> A) (y : P) (h1 : term3170 A B P P2 f _114084 s y) : term3231 A B P P2 f _114084 s y.
Proof. exact (fun h0 : term3164 A B P P2 f _114084 s y => @lem8385167 A B P P2 f _114084 s y h1). Qed.
Lemma lem8385170 (p : Prop) : (term753 p) = (~ p).
Proof. exact (EQ_MP (@lem21028 p) (@lem21107 p)). Qed.
Lemma lem8385171 {A B P : Type'} (P2 : type560 A B P) (f : A -> B) (_114084 : type794 A P) (s : P -> A) (y : P) : (term3231 A B P P2 f _114084 s y) = (term3170 A B P P2 f _114084 s y).
Proof. exact (@lem8385170 (term3164 A B P P2 f _114084 s y)). Qed.
Lemma lem8385172 {A B P : Type'} (P2 : type560 A B P) (f : A -> B) (_114084 : type794 A P) (s : P -> A) (y : P) (h1 : term3170 A B P P2 f _114084 s y) : term3170 A B P P2 f _114084 s y.
Proof. exact (EQ_MP (@lem8385171 A B P P2 f _114084 s y) (@lem8385168 A B P P2 f _114084 s y h1)). Qed.
Lemma lem8385174 {A B P : Type'} (y : P) (lt2 : type1402 A) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (_114084 : type794 A P) (s : P -> A) (x : A) (h1 : term2935 A B P f P2 g _114084 s x) (h2 : term2944 A B P y lt2 P2 G2 f H2 g _114084 s x) : term3164 A B P P2 g _114084 s y.
Proof. exact (EQ_MP (@lem8382632 A B P y lt2 P2 G2 f H2 g _114084 s x h2) (@lem8380441 A B P f P2 g _114084 s x h1)). Qed.
Lemma lem8385175 {A B P : Type'} (y : P) (lt2 : type1402 A) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (_114084 : type794 A P) (s : P -> A) (x : A) (h1 : term2935 A B P f P2 g _114084 s x) (h2 : term2944 A B P y lt2 P2 G2 f H2 g _114084 s x) : term3230 A B P P2 g _114084 s y.
Proof. exact (fun h0 : term3170 A B P P2 g _114084 s y => @lem8385174 A B P y lt2 P2 G2 f H2 g _114084 s x h1 h2). Qed.
Lemma lem8385177 (p : Prop) : (term748 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8385178 {A B P : Type'} (P2 : type560 A B P) (g : A -> B) (_114084 : type794 A P) (s : P -> A) (y : P) : (term3230 A B P P2 g _114084 s y) = (term3164 A B P P2 g _114084 s y).
Proof. exact (@lem8385177 (term3164 A B P P2 g _114084 s y)). Qed.
Lemma lem8385179 {A B P : Type'} (y : P) (lt2 : type1402 A) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (_114084 : type794 A P) (s : P -> A) (x : A) (h1 : term2935 A B P f P2 g _114084 s x) (h2 : term2944 A B P y lt2 P2 G2 f H2 g _114084 s x) : term3164 A B P P2 g _114084 s y.
Proof. exact (EQ_MP (@lem8385178 A B P P2 g _114084 s y) (@lem8385175 A B P y lt2 P2 G2 f H2 g _114084 s x h1 h2)). Qed.
Lemma lem8385181 (b : Prop) (a : Prop) : (a \/ b) = (term754 b a).
Proof. exact (EQ_MP (@lem20682 b a) (@lem20764 b a)). Qed.
Lemma lem8385182 {A B P : Type'} (P2 : type560 A B P) (lt2 : type1402 A) (z : type518 A B P) (_114118 : A -> B) (_114119 : A -> B) (s : P -> A) (_114120 : P) : (term3175 A B P lt2 z s _114118 P2 _114119 _114120) = (term3315 A B P P2 lt2 z _114118 _114119 s _114120).
Proof. exact (@lem8385181 (term2961 A B P _114118 P2 _114119 _114120) (term2986 A B P lt2 z _114118 _114119 s _114120)). Qed.
Lemma lem8385184 (a : Prop) (b : Prop) : (term756 a b) = (term757 a b).
Proof. exact (EQ_MP (@lem20789 a b) (@lem20895 a b)). Qed.
Lemma lem8385185 {A B P : Type'} (_114118 : A -> B) (P2 : type560 A B P) (_114119 : A -> B) (_114120 : P) : (term3316 A B P _114118 P2 _114119 _114120) = (term3317 A B P _114118 P2 _114119 _114120).
Proof. exact (@lem8385184 (term2851 A B P P2 _114118 _114120) (term2853 A B P P2 _114119 _114120)). Qed.
Lemma lem8385187 (a : Prop) : (term47 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem8385188 {A B P : Type'} (P2 : type560 A B P) (_114119 : A -> B) (_114120 : P) : (term3235 A B P P2 _114119 _114120) = (term2851 A B P P2 _114119 _114120).
Proof. exact (@lem8385187 (term2851 A B P P2 _114119 _114120)). Qed.
Lemma lem8385189 {A B P : Type'} (P2 : type560 A B P) (_114118 : A -> B) (_114120 : P) : (term3318 A B P P2 _114118 _114120) = (term3318 A B P P2 _114118 _114120).
Proof. exact (eq_refl (term3318 A B P P2 _114118 _114120)). Qed.
Lemma lem8385190 {A B P : Type'} (_114118 : A -> B) (P2 : type560 A B P) (_114119 : A -> B) (_114120 : P) : (term3317 A B P _114118 P2 _114119 _114120) = (term3319 A B P _114118 P2 _114119 _114120).
Proof. exact (MK_COMB (@lem8385189 A B P P2 _114118 _114120) (@lem8385188 A B P P2 _114119 _114120)). Qed.
Lemma lem8385191 {A B P : Type'} (_114118 : A -> B) (P2 : type560 A B P) (_114119 : A -> B) (_114120 : P) : (term3316 A B P _114118 P2 _114119 _114120) = (term3319 A B P _114118 P2 _114119 _114120).
Proof. exact (TRANS (@lem8385185 A B P _114118 P2 _114119 _114120) (@lem8385190 A B P _114118 P2 _114119 _114120)). Qed.
Lemma lem8385192 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem8385193 {A B P : Type'} (_114118 : A -> B) (P2 : type560 A B P) (_114119 : A -> B) (_114120 : P) : (term3320 A B P _114118 P2 _114119 _114120) = (term3321 A B P _114118 P2 _114119 _114120).
Proof. exact (MK_COMB (@lem8385192) (@lem8385191 A B P _114118 P2 _114119 _114120)). Qed.
Lemma lem8385194 {A B P : Type'} (lt2 : type1402 A) (z : type518 A B P) (_114118 : A -> B) (_114119 : A -> B) (s : P -> A) (_114120 : P) : (term2986 A B P lt2 z _114118 _114119 s _114120) = (term2986 A B P lt2 z _114118 _114119 s _114120).
Proof. exact (eq_refl (term2986 A B P lt2 z _114118 _114119 s _114120)). Qed.
Lemma lem8385195 {A B P : Type'} (P2 : type560 A B P) (lt2 : type1402 A) (z : type518 A B P) (_114118 : A -> B) (_114119 : A -> B) (s : P -> A) (_114120 : P) : (term3315 A B P P2 lt2 z _114118 _114119 s _114120) = (term3322 A B P P2 lt2 z _114118 _114119 s _114120).
Proof. exact (MK_COMB (@lem8385193 A B P _114118 P2 _114119 _114120) (@lem8385194 A B P lt2 z _114118 _114119 s _114120)). Qed.
Lemma lem8385196 {A B P : Type'} (P2 : type560 A B P) (lt2 : type1402 A) (z : type518 A B P) (_114118 : A -> B) (_114119 : A -> B) (s : P -> A) (_114120 : P) : (term3175 A B P lt2 z s _114118 P2 _114119 _114120) = (term3322 A B P P2 lt2 z _114118 _114119 s _114120).
Proof. exact (TRANS (@lem8385182 A B P P2 lt2 z _114118 _114119 s _114120) (@lem8385195 A B P P2 lt2 z _114118 _114119 s _114120)). Qed.
Lemma lem8385198 {A B P : Type'} (y : P) (lt2 : type1402 A) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (_114084 : type794 A P) (s : P -> A) (x : A) (h1 : term3170 A B P P2 f _114084 s y) (h2 : term2935 A B P f P2 g _114084 s x) (h3 : term2944 A B P y lt2 P2 G2 f H2 g _114084 s x) : term3323 A B P f P2 g _114084 s y.
Proof. exact (conj (@lem8385172 A B P P2 f _114084 s y h1) (@lem8385179 A B P y lt2 P2 G2 f H2 g _114084 s x h2 h3)). Qed.
Lemma lem8385200 {A B P : Type'} (_114118 : A -> B) (_114119 : A -> B) (_114120 : P) (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (h1 : term2270 A B P lt2 s z P2 G2 H2) : term3322 A B P P2 lt2 z _114118 _114119 s _114120.
Proof. exact (EQ_MP (@lem8385196 A B P P2 lt2 z _114118 _114119 s _114120) (@lem8382843 A B P _114118 _114119 _114120 lt2 s z P2 G2 H2 h1)). Qed.
Lemma lem8385201 {A B P : Type'} (_114118 : A -> B) (_114119 : A -> B) (_114120 : P) (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (h1 : term2270 A B P lt2 s z P2 G2 H2) : term3322 A B P P2 lt2 z _114118 _114119 s _114120.
Proof. exact (@lem8385200 A B P _114118 _114119 _114120 lt2 s z P2 G2 H2 h1). Qed.
Lemma lem8385202 {A B P : Type'} (f : A -> B) (g : A -> B) (_114084 : type794 A P) (y : P) (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (h1 : term2270 A B P lt2 s z P2 G2 H2) : term3324 A B P P2 lt2 z f g _114084 s y.
Proof. exact (@lem8385201 A B P f g (term3244 A P _114084 s y) lt2 s z P2 G2 H2 h1). Qed.
Lemma lem8385205 {A B P : Type'} (z : type518 A B P) (y : P) (lt2 : type1402 A) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (_114084 : type794 A P) (s : P -> A) (x : A) (h1 : term2270 A B P lt2 s z P2 G2 H2) (h2 : term3170 A B P P2 f _114084 s y) (h3 : term2935 A B P f P2 g _114084 s x) (h4 : term2944 A B P y lt2 P2 G2 f H2 g _114084 s x) : term3245 A B P lt2 z f g _114084 s y.
Proof. exact (@lem8385202 A B P f g _114084 y lt2 s z P2 G2 H2 h1 (@lem8385198 A B P y lt2 P2 G2 f H2 g _114084 s x h2 h3 h4)). Qed.
Lemma lem8385206 {A B P : Type'} (z : type518 A B P) (y : P) (lt2 : type1402 A) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (_114084 : type794 A P) (s : P -> A) (x : A) (h1 : term2270 A B P lt2 s z P2 G2 H2) (h2 : term3170 A B P P2 f _114084 s y) (h3 : term2935 A B P f P2 g _114084 s x) (h4 : term2944 A B P y lt2 P2 G2 f H2 g _114084 s x) : term3246 A B P lt2 z f g _114084 s y.
Proof. exact (fun h0 : term3247 A B P lt2 z f g _114084 s y => @lem8385205 A B P z y lt2 P2 G2 f H2 g _114084 s x h1 h2 h3 h4). Qed.
Lemma lem8385208 (p : Prop) : (term748 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8385209 {A B P : Type'} (lt2 : type1402 A) (z : type518 A B P) (f : A -> B) (g : A -> B) (_114084 : type794 A P) (s : P -> A) (y : P) : (term3246 A B P lt2 z f g _114084 s y) = (term3245 A B P lt2 z f g _114084 s y).
Proof. exact (@lem8385208 (term3245 A B P lt2 z f g _114084 s y)). Qed.
Lemma lem8385210 {A B P : Type'} (z : type518 A B P) (y : P) (lt2 : type1402 A) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (_114084 : type794 A P) (s : P -> A) (x : A) (h1 : term2270 A B P lt2 s z P2 G2 H2) (h2 : term3170 A B P P2 f _114084 s y) (h3 : term2935 A B P f P2 g _114084 s x) (h4 : term2944 A B P y lt2 P2 G2 f H2 g _114084 s x) : term3245 A B P lt2 z f g _114084 s y.
Proof. exact (EQ_MP (@lem8385209 A B P lt2 z f g _114084 s y) (@lem8385206 A B P z y lt2 P2 G2 f H2 g _114084 s x h1 h2 h3 h4)). Qed.
Lemma lem8385228 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem8385229 {A : Type'} (_114673 : A) (_114672 : A -> Prop) (_114670 : A -> Prop) (_114671 : A) : (term3210 A _114672 _114673 _114670 _114671) = (term3248 A _114673 _114672 _114670 _114671).
Proof. exact (@lem8385228 (@I (A -> Prop) _114672 _114673) (term3249 A _114670 _114672) (term3250 A _114670 _114671)). Qed.
Lemma lem8385247 {A : Type'} (_114671 : A) (_114673 : A) : (term3251 A _114671 _114673) = (term3251 A _114671 _114673).
Proof. exact (eq_refl (term3251 A _114671 _114673)). Qed.
Lemma lem8385248 {A : Type'} (_114673 : A) (_114672 : A -> Prop) (_114670 : A -> Prop) (_114671 : A) : (term3212 A _114672 _114673 _114670 _114671) = (term3252 A _114673 _114672 _114670 _114671).
Proof. exact (MK_COMB (@lem8385247 A _114671 _114673) (@lem8385229 A _114673 _114672 _114670 _114671)). Qed.
Lemma lem8385252 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem8385253 {A : Type'} (_114673 : A) (_114672 : A -> Prop) (_114670 : A -> Prop) (_114671 : A) : (term3252 A _114673 _114672 _114670 _114671) = (term3253 A _114673 _114672 _114670 _114671).
Proof. exact (@lem8385252 (@I (A -> Prop) _114672 _114673) (term3254 A _114671 _114673) (term3255 A _114672 _114670 _114671)). Qed.
Lemma lem8385283 {A : Type'} (_114673 : A) (_114672 : A -> Prop) (_114670 : A -> Prop) (_114671 : A) : (term3212 A _114672 _114673 _114670 _114671) = (term3253 A _114673 _114672 _114670 _114671).
Proof. exact (TRANS (@lem8385248 A _114673 _114672 _114670 _114671) (@lem8385253 A _114673 _114672 _114670 _114671)). Qed.
Lemma lem8385284 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8385285 {A : Type'} (_114673 : A) (_114672 : A -> Prop) (_114670 : A -> Prop) (_114671 : A) : (term3256 A _114672 _114673 _114670 _114671) = (term3257 A _114673 _114672 _114670 _114671).
Proof. exact (MK_COMB (@lem8385284) (@lem8385283 A _114673 _114672 _114670 _114671)). Qed.
Lemma lem8385315 {A : Type'} (_114673 : A) (_114672 : A -> Prop) (_114670 : A -> Prop) (_114671 : A) : (term3253 A _114673 _114672 _114670 _114671) = (term3253 A _114673 _114672 _114670 _114671).
Proof. exact (eq_refl (term3253 A _114673 _114672 _114670 _114671)). Qed.
Lemma lem8385316 {A : Type'} (_114673 : A) (_114672 : A -> Prop) (_114670 : A -> Prop) (_114671 : A) : ((term3212 A _114672 _114673 _114670 _114671) = (term3253 A _114673 _114672 _114670 _114671)) = ((term3253 A _114673 _114672 _114670 _114671) = (term3253 A _114673 _114672 _114670 _114671)).
Proof. exact (MK_COMB (@lem8385285 A _114673 _114672 _114670 _114671) (@lem8385315 A _114673 _114672 _114670 _114671)). Qed.
Lemma lem8385318 {A : Type'} (x : A) : (x = x) = True.
Proof. exact (EQ_MP (@lem20665 A x) (@lem20664 A x)). Qed.
Lemma lem8385319 (x : Prop) : (x = x) = True.
Proof. exact (@lem8385318 Prop x). Qed.
Lemma lem8385320 {A : Type'} (_114673 : A) (_114672 : A -> Prop) (_114670 : A -> Prop) (_114671 : A) : ((term3253 A _114673 _114672 _114670 _114671) = (term3253 A _114673 _114672 _114670 _114671)) = True.
Proof. exact (@lem8385319 (term3253 A _114673 _114672 _114670 _114671)). Qed.
Lemma lem8385321 {A : Type'} (_114673 : A) (_114672 : A -> Prop) (_114670 : A -> Prop) (_114671 : A) : ((term3212 A _114672 _114673 _114670 _114671) = (term3253 A _114673 _114672 _114670 _114671)) = True.
Proof. exact (TRANS (@lem8385316 A _114673 _114672 _114670 _114671) (@lem8385320 A _114673 _114672 _114670 _114671)). Qed.
Lemma lem8385322 {A : Type'} (_114673 : A) (_114672 : A -> Prop) (_114670 : A -> Prop) (_114671 : A) : True = ((term3212 A _114672 _114673 _114670 _114671) = (term3253 A _114673 _114672 _114670 _114671)).
Proof. exact (SYM (@lem8385321 A _114673 _114672 _114670 _114671)). Qed.
Lemma lem8385323 {A : Type'} (_114673 : A) (_114672 : A -> Prop) (_114670 : A -> Prop) (_114671 : A) : (term3212 A _114672 _114673 _114670 _114671) = (term3253 A _114673 _114672 _114670 _114671).
Proof. exact (EQ_MP (@lem8385322 A _114673 _114672 _114670 _114671) (@lem0)). Qed.
Lemma lem8385324 {A : Type'} (_114673 : A) (_114672 : A -> Prop) (_114670 : A -> Prop) (_114671 : A) : term3253 A _114673 _114672 _114670 _114671.
Proof. exact (EQ_MP (@lem8385323 A _114673 _114672 _114670 _114671) (@lem8384800 A _114672 _114673 _114670 _114671)). Qed.
Lemma lem8385326 (b : Prop) (a : Prop) : (a \/ b) = (term754 b a).
Proof. exact (EQ_MP (@lem20682 b a) (@lem20764 b a)). Qed.
Lemma lem8385327 {A : Type'} (_114670 : A -> Prop) (_114671 : A) (_114672 : A -> Prop) (_114673 : A) : (term3253 A _114673 _114672 _114670 _114671) = (term3258 A _114670 _114671 _114672 _114673).
Proof. exact (@lem8385326 (term3259 A _114673 _114672 _114670 _114671) (@I (A -> Prop) _114672 _114673)). Qed.
Lemma lem8385329 (a : Prop) (b : Prop) : (term756 a b) = (term757 a b).
Proof. exact (EQ_MP (@lem20789 a b) (@lem20895 a b)). Qed.
Lemma lem8385330 {A : Type'} (_114673 : A) (_114672 : A -> Prop) (_114670 : A -> Prop) (_114671 : A) : (term3260 A _114673 _114672 _114670 _114671) = (term3261 A _114673 _114672 _114670 _114671).
Proof. exact (@lem8385329 (term3254 A _114671 _114673) (term3255 A _114672 _114670 _114671)). Qed.
Lemma lem8385332 (a : Prop) : (term47 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem8385333 {A : Type'} (_114671 : A) (_114673 : A) : (term3262 A _114671 _114673) = (_114671 = _114673).
Proof. exact (@lem8385332 (_114671 = _114673)). Qed.
Lemma lem8385334 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8385335 {A : Type'} (_114671 : A) (_114673 : A) : (term3263 A _114671 _114673) = (term3264 A _114671 _114673).
Proof. exact (MK_COMB (@lem8385334) (@lem8385333 A _114671 _114673)). Qed.
Lemma lem8385337 (a : Prop) (b : Prop) : (term756 a b) = (term757 a b).
Proof. exact (EQ_MP (@lem20789 a b) (@lem20895 a b)). Qed.
Lemma lem8385338 {A : Type'} (_114672 : A -> Prop) (_114670 : A -> Prop) (_114671 : A) : (term3265 A _114672 _114670 _114671) = (term3266 A _114672 _114670 _114671).
Proof. exact (@lem8385337 (term3249 A _114670 _114672) (term3250 A _114670 _114671)). Qed.
Lemma lem8385340 (a : Prop) : (term47 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem8385341 {A : Type'} (_114670 : A -> Prop) (_114672 : A -> Prop) : (term3267 A _114670 _114672) = (_114670 = _114672).
Proof. exact (@lem8385340 (_114670 = _114672)). Qed.
Lemma lem8385342 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8385343 {A : Type'} (_114670 : A -> Prop) (_114672 : A -> Prop) : (term3268 A _114670 _114672) = (term3269 A _114670 _114672).
Proof. exact (MK_COMB (@lem8385342) (@lem8385341 A _114670 _114672)). Qed.
Lemma lem8385345 (a : Prop) : (term47 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem8385346 {A : Type'} (_114670 : A -> Prop) (_114671 : A) : (term3270 A _114670 _114671) = (@I (A -> Prop) _114670 _114671).
Proof. exact (@lem8385345 (@I (A -> Prop) _114670 _114671)). Qed.
Lemma lem8385347 {A : Type'} (_114672 : A -> Prop) (_114670 : A -> Prop) (_114671 : A) : (term3266 A _114672 _114670 _114671) = (term3271 A _114672 _114670 _114671).
Proof. exact (MK_COMB (@lem8385343 A _114670 _114672) (@lem8385346 A _114670 _114671)). Qed.
Lemma lem8385348 {A : Type'} (_114672 : A -> Prop) (_114670 : A -> Prop) (_114671 : A) : (term3265 A _114672 _114670 _114671) = (term3271 A _114672 _114670 _114671).
Proof. exact (TRANS (@lem8385338 A _114672 _114670 _114671) (@lem8385347 A _114672 _114670 _114671)). Qed.
Lemma lem8385349 {A : Type'} (_114673 : A) (_114672 : A -> Prop) (_114670 : A -> Prop) (_114671 : A) : (term3261 A _114673 _114672 _114670 _114671) = (term3272 A _114673 _114672 _114670 _114671).
Proof. exact (MK_COMB (@lem8385335 A _114671 _114673) (@lem8385348 A _114672 _114670 _114671)). Qed.
Lemma lem8385350 {A : Type'} (_114673 : A) (_114672 : A -> Prop) (_114670 : A -> Prop) (_114671 : A) : (term3260 A _114673 _114672 _114670 _114671) = (term3272 A _114673 _114672 _114670 _114671).
Proof. exact (TRANS (@lem8385330 A _114673 _114672 _114670 _114671) (@lem8385349 A _114673 _114672 _114670 _114671)). Qed.
Lemma lem8385351 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem8385352 {A : Type'} (_114673 : A) (_114672 : A -> Prop) (_114670 : A -> Prop) (_114671 : A) : (term3273 A _114673 _114672 _114670 _114671) = (term3274 A _114673 _114672 _114670 _114671).
Proof. exact (MK_COMB (@lem8385351) (@lem8385350 A _114673 _114672 _114670 _114671)). Qed.
Lemma lem8385353 {A : Type'} (_114672 : A -> Prop) (_114673 : A) : (@I (A -> Prop) _114672 _114673) = (@I (A -> Prop) _114672 _114673).
Proof. exact (eq_refl (@I (A -> Prop) _114672 _114673)). Qed.
Lemma lem8385354 {A : Type'} (_114670 : A -> Prop) (_114671 : A) (_114672 : A -> Prop) (_114673 : A) : (term3258 A _114670 _114671 _114672 _114673) = (term3275 A _114670 _114671 _114672 _114673).
Proof. exact (MK_COMB (@lem8385352 A _114673 _114672 _114670 _114671) (@lem8385353 A _114672 _114673)). Qed.
Lemma lem8385355 {A : Type'} (_114670 : A -> Prop) (_114671 : A) (_114672 : A -> Prop) (_114673 : A) : (term3253 A _114673 _114672 _114670 _114671) = (term3275 A _114670 _114671 _114672 _114673).
Proof. exact (TRANS (@lem8385327 A _114670 _114671 _114672 _114673) (@lem8385354 A _114670 _114671 _114672 _114673)). Qed.
Lemma lem8385357 {A B P : Type'} (z : type518 A B P) (y : P) (lt2 : type1402 A) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (_114084 : type794 A P) (s : P -> A) (x : A) (h1 : term2270 A B P lt2 s z P2 G2 H2) (h2 : term3170 A B P P2 f _114084 s y) (h3 : term2935 A B P f P2 g _114084 s x) (h4 : term2944 A B P y lt2 P2 G2 f H2 g _114084 s x) : term3276 A B P lt2 z f g _114084 s y.
Proof. exact (conj (@lem8385164 A B P lt2 z f g _114084 s y) (@lem8385210 A B P z y lt2 P2 G2 f H2 g _114084 s x h1 h2 h3 h4)). Qed.
Lemma lem8385358 {A B P : Type'} (z : type518 A B P) (y : P) (lt2 : type1402 A) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (_114084 : type794 A P) (s : P -> A) (x : A) (h1 : term2270 A B P lt2 s z P2 G2 H2) (h2 : term1491 A P _114084) (h3 : term3170 A B P P2 f _114084 s y) (h4 : term2935 A B P f P2 g _114084 s x) (h5 : term2944 A B P y lt2 P2 G2 f H2 g _114084 s x) : term3277 A B P lt2 z f g _114084 s y.
Proof. exact (conj (@lem8385155 A P s y _114084 h2) (@lem8385357 A B P z y lt2 P2 G2 f H2 g _114084 s x h1 h3 h4 h5)). Qed.
Lemma lem8385360 {A : Type'} (_114670 : A -> Prop) (_114671 : A) (_114672 : A -> Prop) (_114673 : A) : term3275 A _114670 _114671 _114672 _114673.
Proof. exact (EQ_MP (@lem8385355 A _114670 _114671 _114672 _114673) (@lem8385324 A _114673 _114672 _114670 _114671)). Qed.
Lemma lem8385361 {A : Type'} (_114670 : A -> Prop) (_114671 : A) (_114672 : A -> Prop) (_114673 : A) : term3275 A _114670 _114671 _114672 _114673.
Proof. exact (@lem8385360 A _114670 _114671 _114672 _114673). Qed.
Lemma lem8385362 {A B P : Type'} (lt2 : type1402 A) (z : type518 A B P) (f : A -> B) (g : A -> B) (_114084 : type794 A P) (s : P -> A) (y : P) : term3278 A B P lt2 z f g _114084 s y.
Proof. exact (@lem8385361 A (term3227 A B P lt2 z f g _114084 s y) (term3224 A P _114084 s y) (term3227 A B P lt2 z f g _114084 s y) (@I (P -> A) s y)). Qed.
Lemma lem8385365 {A B P : Type'} (z : type518 A B P) (y : P) (lt2 : type1402 A) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (_114084 : type794 A P) (s : P -> A) (x : A) (h1 : term2270 A B P lt2 s z P2 G2 H2) (h2 : term1491 A P _114084) (h3 : term3170 A B P P2 f _114084 s y) (h4 : term2935 A B P f P2 g _114084 s x) (h5 : term2944 A B P y lt2 P2 G2 f H2 g _114084 s x) : term3279 A B P lt2 z f g _114084 s y.
Proof. exact (@lem8385362 A B P lt2 z f g _114084 s y (@lem8385358 A B P z y lt2 P2 G2 f H2 g _114084 s x h1 h2 h3 h4 h5)). Qed.
Lemma lem8385366 {A B P : Type'} (z : type518 A B P) (y : P) (lt2 : type1402 A) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (_114084 : type794 A P) (s : P -> A) (x : A) (h1 : term2270 A B P lt2 s z P2 G2 H2) (h2 : term1491 A P _114084) (h3 : term3170 A B P P2 f _114084 s y) (h4 : term2935 A B P f P2 g _114084 s x) (h5 : term2944 A B P y lt2 P2 G2 f H2 g _114084 s x) : term3280 A B P lt2 z f g _114084 s y.
Proof. exact (fun h0 : term3281 A B P lt2 z f g _114084 s y => @lem8385365 A B P z y lt2 P2 G2 f H2 g _114084 s x h1 h2 h3 h4 h5). Qed.
Lemma lem8385368 (p : Prop) : (term748 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8385369 {A B P : Type'} (lt2 : type1402 A) (z : type518 A B P) (f : A -> B) (g : A -> B) (_114084 : type794 A P) (s : P -> A) (y : P) : (term3280 A B P lt2 z f g _114084 s y) = (term3279 A B P lt2 z f g _114084 s y).
Proof. exact (@lem8385368 (term3279 A B P lt2 z f g _114084 s y)). Qed.
Lemma lem8385370 {A B P : Type'} (z : type518 A B P) (y : P) (lt2 : type1402 A) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (_114084 : type794 A P) (s : P -> A) (x : A) (h1 : term2270 A B P lt2 s z P2 G2 H2) (h2 : term1491 A P _114084) (h3 : term3170 A B P P2 f _114084 s y) (h4 : term2935 A B P f P2 g _114084 s x) (h5 : term2944 A B P y lt2 P2 G2 f H2 g _114084 s x) : term3279 A B P lt2 z f g _114084 s y.
Proof. exact (EQ_MP (@lem8385369 A B P lt2 z f g _114084 s y) (@lem8385366 A B P z y lt2 P2 G2 f H2 g _114084 s x h1 h2 h3 h4 h5)). Qed.
Lemma lem8385376 (q : Prop) (p : Prop) : (p \/ q) = (q \/ p).
Proof. exact (proj1 (@lem827 (@el Prop) p q)). Qed.
Lemma lem8385377 {A B P : Type'} (f : A -> B) (g : A -> B) (lt2 : type1402 A) (_114132 : A) (s : P -> A) (y : P) : (term3158 A B P lt2 s y f g _114132) = (term3282 A B P f g lt2 _114132 s y).
Proof. exact (@lem8385376 ((@I (A -> B) f _114132) = (@I (A -> B) g _114132)) (term3196 A P lt2 _114132 s y)). Qed.
Lemma lem8385385 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8385386 {A B P : Type'} (f : A -> B) (g : A -> B) (lt2 : type1402 A) (_114132 : A) (s : P -> A) (y : P) : (term3283 A B P lt2 s y f g _114132) = (term3284 A B P f g lt2 _114132 s y).
Proof. exact (MK_COMB (@lem8385385) (@lem8385377 A B P f g lt2 _114132 s y)). Qed.
Lemma lem8385394 {A B P : Type'} (f : A -> B) (g : A -> B) (lt2 : type1402 A) (_114132 : A) (s : P -> A) (y : P) : (term3282 A B P f g lt2 _114132 s y) = (term3282 A B P f g lt2 _114132 s y).
Proof. exact (eq_refl (term3282 A B P f g lt2 _114132 s y)). Qed.
Lemma lem8385395 {A B P : Type'} (f : A -> B) (g : A -> B) (lt2 : type1402 A) (_114132 : A) (s : P -> A) (y : P) : ((term3158 A B P lt2 s y f g _114132) = (term3282 A B P f g lt2 _114132 s y)) = ((term3282 A B P f g lt2 _114132 s y) = (term3282 A B P f g lt2 _114132 s y)).
Proof. exact (MK_COMB (@lem8385386 A B P f g lt2 _114132 s y) (@lem8385394 A B P f g lt2 _114132 s y)). Qed.
Lemma lem8385397 {A : Type'} (x : A) : (x = x) = True.
Proof. exact (EQ_MP (@lem20665 A x) (@lem20664 A x)). Qed.
Lemma lem8385398 (x : Prop) : (x = x) = True.
Proof. exact (@lem8385397 Prop x). Qed.
Lemma lem8385399 {A B P : Type'} (f : A -> B) (g : A -> B) (lt2 : type1402 A) (_114132 : A) (s : P -> A) (y : P) : ((term3282 A B P f g lt2 _114132 s y) = (term3282 A B P f g lt2 _114132 s y)) = True.
Proof. exact (@lem8385398 (term3282 A B P f g lt2 _114132 s y)). Qed.
Lemma lem8385400 {A B P : Type'} (f : A -> B) (g : A -> B) (lt2 : type1402 A) (_114132 : A) (s : P -> A) (y : P) : ((term3158 A B P lt2 s y f g _114132) = (term3282 A B P f g lt2 _114132 s y)) = True.
Proof. exact (TRANS (@lem8385395 A B P f g lt2 _114132 s y) (@lem8385399 A B P f g lt2 _114132 s y)). Qed.
Lemma lem8385401 {A B P : Type'} (f : A -> B) (g : A -> B) (lt2 : type1402 A) (_114132 : A) (s : P -> A) (y : P) : True = ((term3158 A B P lt2 s y f g _114132) = (term3282 A B P f g lt2 _114132 s y)).
Proof. exact (SYM (@lem8385400 A B P f g lt2 _114132 s y)). Qed.
Lemma lem8385402 {A B P : Type'} (f : A -> B) (g : A -> B) (lt2 : type1402 A) (_114132 : A) (s : P -> A) (y : P) : (term3158 A B P lt2 s y f g _114132) = (term3282 A B P f g lt2 _114132 s y).
Proof. exact (EQ_MP (@lem8385401 A B P f g lt2 _114132 s y) (@lem0)). Qed.
Lemma lem8385403 {A B P : Type'} (_114132 : A) (y : P) (lt2 : type1402 A) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (_114084 : type794 A P) (s : P -> A) (x : A) (h1 : term2944 A B P y lt2 P2 G2 f H2 g _114084 s x) : term3282 A B P f g lt2 _114132 s y.
Proof. exact (EQ_MP (@lem8385402 A B P f g lt2 _114132 s y) (@lem8382607 A B P _114132 y lt2 P2 G2 f H2 g _114084 s x h1)). Qed.
Lemma lem8385405 (b : Prop) (a : Prop) : (a \/ b) = (term754 b a).
Proof. exact (EQ_MP (@lem20682 b a) (@lem20764 b a)). Qed.
Lemma lem8385406 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (y : P) (f : A -> B) (g : A -> B) (_114132 : A) : (term3282 A B P f g lt2 _114132 s y) = (term3285 A B P lt2 s y f g _114132).
Proof. exact (@lem8385405 (term3196 A P lt2 _114132 s y) ((@I (A -> B) f _114132) = (@I (A -> B) g _114132))). Qed.
Lemma lem8385408 (a : Prop) : (term47 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem8385409 {A P : Type'} (lt2 : type1402 A) (_114132 : A) (s : P -> A) (y : P) : (term3286 A P lt2 _114132 s y) = (term2844 A P lt2 _114132 s y).
Proof. exact (@lem8385408 (term2844 A P lt2 _114132 s y)). Qed.
Lemma lem8385410 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem8385411 {A P : Type'} (lt2 : type1402 A) (_114132 : A) (s : P -> A) (y : P) : (term3287 A P lt2 _114132 s y) = (term3288 A P lt2 _114132 s y).
Proof. exact (MK_COMB (@lem8385410) (@lem8385409 A P lt2 _114132 s y)). Qed.
Lemma lem8385412 {A B : Type'} (f : A -> B) (g : A -> B) (_114132 : A) : ((@I (A -> B) f _114132) = (@I (A -> B) g _114132)) = ((@I (A -> B) f _114132) = (@I (A -> B) g _114132)).
Proof. exact (eq_refl ((@I (A -> B) f _114132) = (@I (A -> B) g _114132))). Qed.
Lemma lem8385413 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (y : P) (f : A -> B) (g : A -> B) (_114132 : A) : (term3285 A B P lt2 s y f g _114132) = (term3289 A B P lt2 s y f g _114132).
Proof. exact (MK_COMB (@lem8385411 A P lt2 _114132 s y) (@lem8385412 A B f g _114132)). Qed.
Lemma lem8385414 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (y : P) (f : A -> B) (g : A -> B) (_114132 : A) : (term3282 A B P f g lt2 _114132 s y) = (term3289 A B P lt2 s y f g _114132).
Proof. exact (TRANS (@lem8385406 A B P lt2 s y f g _114132) (@lem8385413 A B P lt2 s y f g _114132)). Qed.
Lemma lem8385417 {A B P : Type'} (_114132 : A) (y : P) (lt2 : type1402 A) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (_114084 : type794 A P) (s : P -> A) (x : A) (h1 : term2944 A B P y lt2 P2 G2 f H2 g _114084 s x) : term3289 A B P lt2 s y f g _114132.
Proof. exact (EQ_MP (@lem8385414 A B P lt2 s y f g _114132) (@lem8385403 A B P _114132 y lt2 P2 G2 f H2 g _114084 s x h1)). Qed.
Lemma lem8385418 {A B P : Type'} (_114132 : A) (y : P) (lt2 : type1402 A) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (_114084 : type794 A P) (s : P -> A) (x : A) (h1 : term2944 A B P y lt2 P2 G2 f H2 g _114084 s x) : term3289 A B P lt2 s y f g _114132.
Proof. exact (@lem8385417 A B P _114132 y lt2 P2 G2 f H2 g _114084 s x h1). Qed.
Lemma lem8385419 {A B P : Type'} (z : type518 A B P) (y : P) (lt2 : type1402 A) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (_114084 : type794 A P) (s : P -> A) (x : A) (h1 : term2944 A B P y lt2 P2 G2 f H2 g _114084 s x) : term3290 A B P lt2 z f g _114084 s y.
Proof. exact (@lem8385418 A B P (term3291 A B P z f g _114084 s y) y lt2 P2 G2 f H2 g _114084 s x h1). Qed.
Lemma lem8385422 {A B P : Type'} (z : type518 A B P) (y : P) (lt2 : type1402 A) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (_114084 : type794 A P) (s : P -> A) (x : A) (h1 : term2270 A B P lt2 s z P2 G2 H2) (h2 : term1491 A P _114084) (h3 : term3170 A B P P2 f _114084 s y) (h4 : term2935 A B P f P2 g _114084 s x) (h5 : term2944 A B P y lt2 P2 G2 f H2 g _114084 s x) : (term3292 A B P z f g _114084 s y) = (term3293 A B P z f g _114084 s y).
Proof. exact (@lem8385419 A B P z y lt2 P2 G2 f H2 g _114084 s x h5 (@lem8385370 A B P z y lt2 P2 G2 f H2 g _114084 s x h1 h2 h3 h4 h5)). Qed.
Lemma lem8385423 {A B P : Type'} (z : type518 A B P) (y : P) (lt2 : type1402 A) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (_114084 : type794 A P) (s : P -> A) (x : A) (h1 : term2270 A B P lt2 s z P2 G2 H2) (h2 : term1491 A P _114084) (h3 : term3170 A B P P2 f _114084 s y) (h4 : term2935 A B P f P2 g _114084 s x) (h5 : term2944 A B P y lt2 P2 G2 f H2 g _114084 s x) : term3294 A B P z f g _114084 s y.
Proof. exact (fun h0 : term3295 A B P z f g _114084 s y => @lem8385422 A B P z y lt2 P2 G2 f H2 g _114084 s x h1 h2 h3 h4 h5). Qed.
Lemma lem8385425 (p : Prop) : (term748 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8385426 {A B P : Type'} (z : type518 A B P) (f : A -> B) (g : A -> B) (_114084 : type794 A P) (s : P -> A) (y : P) : (term3294 A B P z f g _114084 s y) = ((term3292 A B P z f g _114084 s y) = (term3293 A B P z f g _114084 s y)).
Proof. exact (@lem8385425 ((term3292 A B P z f g _114084 s y) = (term3293 A B P z f g _114084 s y))). Qed.
Lemma lem8385427 {A B P : Type'} (z : type518 A B P) (y : P) (lt2 : type1402 A) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (_114084 : type794 A P) (s : P -> A) (x : A) (h1 : term2270 A B P lt2 s z P2 G2 H2) (h2 : term1491 A P _114084) (h3 : term3170 A B P P2 f _114084 s y) (h4 : term2935 A B P f P2 g _114084 s x) (h5 : term2944 A B P y lt2 P2 G2 f H2 g _114084 s x) : (term3292 A B P z f g _114084 s y) = (term3293 A B P z f g _114084 s y).
Proof. exact (EQ_MP (@lem8385426 A B P z f g _114084 s y) (@lem8385423 A B P z y lt2 P2 G2 f H2 g _114084 s x h1 h2 h3 h4 h5)). Qed.
Lemma lem8385429 {A B P : Type'} (y : P) (lt2 : type1402 A) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (_114084 : type794 A P) (s : P -> A) (x : A) (h1 : term2935 A B P f P2 g _114084 s x) (h2 : term2944 A B P y lt2 P2 G2 f H2 g _114084 s x) : term3164 A B P P2 g _114084 s y.
Proof. exact (EQ_MP (@lem8382632 A B P y lt2 P2 G2 f H2 g _114084 s x h2) (@lem8380441 A B P f P2 g _114084 s x h1)). Qed.
Lemma lem8385430 {A B P : Type'} (y : P) (lt2 : type1402 A) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (_114084 : type794 A P) (s : P -> A) (x : A) (h1 : term2935 A B P f P2 g _114084 s x) (h2 : term2944 A B P y lt2 P2 G2 f H2 g _114084 s x) : term3230 A B P P2 g _114084 s y.
Proof. exact (fun h0 : term3170 A B P P2 g _114084 s y => @lem8385429 A B P y lt2 P2 G2 f H2 g _114084 s x h1 h2). Qed.
Lemma lem8385432 (p : Prop) : (term748 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8385433 {A B P : Type'} (P2 : type560 A B P) (g : A -> B) (_114084 : type794 A P) (s : P -> A) (y : P) : (term3230 A B P P2 g _114084 s y) = (term3164 A B P P2 g _114084 s y).
Proof. exact (@lem8385432 (term3164 A B P P2 g _114084 s y)). Qed.
Lemma lem8385434 {A B P : Type'} (y : P) (lt2 : type1402 A) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (_114084 : type794 A P) (s : P -> A) (x : A) (h1 : term2935 A B P f P2 g _114084 s x) (h2 : term2944 A B P y lt2 P2 G2 f H2 g _114084 s x) : term3164 A B P P2 g _114084 s y.
Proof. exact (EQ_MP (@lem8385433 A B P P2 g _114084 s y) (@lem8385430 A B P y lt2 P2 G2 f H2 g _114084 s x h1 h2)). Qed.
Lemma lem8385440 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem8385441 {A B P : Type'} (z : type518 A B P) (_114118 : A -> B) (P2 : type560 A B P) (_114119 : A -> B) (_114120 : P) : (term3176 A B P z _114118 P2 _114119 _114120) = (term3325 A B P z _114118 P2 _114119 _114120).
Proof. exact (@lem8385440 (term2851 A B P P2 _114118 _114120) (term2979 A B P z _114118 _114119 _114120) (term2853 A B P P2 _114119 _114120)). Qed.
Lemma lem8385459 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8385460 {A B P : Type'} (z : type518 A B P) (_114118 : A -> B) (P2 : type560 A B P) (_114119 : A -> B) (_114120 : P) : (term3326 A B P z _114118 P2 _114119 _114120) = (term3327 A B P z _114118 P2 _114119 _114120).
Proof. exact (MK_COMB (@lem8385459) (@lem8385441 A B P z _114118 P2 _114119 _114120)). Qed.
Lemma lem8385478 {A B P : Type'} (z : type518 A B P) (_114118 : A -> B) (P2 : type560 A B P) (_114119 : A -> B) (_114120 : P) : (term3325 A B P z _114118 P2 _114119 _114120) = (term3325 A B P z _114118 P2 _114119 _114120).
Proof. exact (eq_refl (term3325 A B P z _114118 P2 _114119 _114120)). Qed.
Lemma lem8385479 {A B P : Type'} (z : type518 A B P) (_114118 : A -> B) (P2 : type560 A B P) (_114119 : A -> B) (_114120 : P) : ((term3176 A B P z _114118 P2 _114119 _114120) = (term3325 A B P z _114118 P2 _114119 _114120)) = ((term3325 A B P z _114118 P2 _114119 _114120) = (term3325 A B P z _114118 P2 _114119 _114120)).
Proof. exact (MK_COMB (@lem8385460 A B P z _114118 P2 _114119 _114120) (@lem8385478 A B P z _114118 P2 _114119 _114120)). Qed.
Lemma lem8385481 {A : Type'} (x : A) : (x = x) = True.
Proof. exact (EQ_MP (@lem20665 A x) (@lem20664 A x)). Qed.
Lemma lem8385482 (x : Prop) : (x = x) = True.
Proof. exact (@lem8385481 Prop x). Qed.
Lemma lem8385483 {A B P : Type'} (z : type518 A B P) (_114118 : A -> B) (P2 : type560 A B P) (_114119 : A -> B) (_114120 : P) : ((term3325 A B P z _114118 P2 _114119 _114120) = (term3325 A B P z _114118 P2 _114119 _114120)) = True.
Proof. exact (@lem8385482 (term3325 A B P z _114118 P2 _114119 _114120)). Qed.
Lemma lem8385484 {A B P : Type'} (z : type518 A B P) (_114118 : A -> B) (P2 : type560 A B P) (_114119 : A -> B) (_114120 : P) : ((term3176 A B P z _114118 P2 _114119 _114120) = (term3325 A B P z _114118 P2 _114119 _114120)) = True.
Proof. exact (TRANS (@lem8385479 A B P z _114118 P2 _114119 _114120) (@lem8385483 A B P z _114118 P2 _114119 _114120)). Qed.
Lemma lem8385485 {A B P : Type'} (z : type518 A B P) (_114118 : A -> B) (P2 : type560 A B P) (_114119 : A -> B) (_114120 : P) : True = ((term3176 A B P z _114118 P2 _114119 _114120) = (term3325 A B P z _114118 P2 _114119 _114120)).
Proof. exact (SYM (@lem8385484 A B P z _114118 P2 _114119 _114120)). Qed.
Lemma lem8385486 {A B P : Type'} (z : type518 A B P) (_114118 : A -> B) (P2 : type560 A B P) (_114119 : A -> B) (_114120 : P) : (term3176 A B P z _114118 P2 _114119 _114120) = (term3325 A B P z _114118 P2 _114119 _114120).
Proof. exact (EQ_MP (@lem8385485 A B P z _114118 P2 _114119 _114120) (@lem0)). Qed.
Lemma lem8385487 {A B P : Type'} (_114118 : A -> B) (_114119 : A -> B) (_114120 : P) (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (h1 : term2270 A B P lt2 s z P2 G2 H2) : term3325 A B P z _114118 P2 _114119 _114120.
Proof. exact (EQ_MP (@lem8385486 A B P z _114118 P2 _114119 _114120) (@lem8382857 A B P _114118 _114119 _114120 lt2 s z P2 G2 H2 h1)). Qed.
Lemma lem8385489 (b : Prop) (a : Prop) : (a \/ b) = (term754 b a).
Proof. exact (EQ_MP (@lem20682 b a) (@lem20764 b a)). Qed.
Lemma lem8385490 {A B P : Type'} (z : type518 A B P) (_114119 : A -> B) (P2 : type560 A B P) (_114118 : A -> B) (_114120 : P) : (term3325 A B P z _114118 P2 _114119 _114120) = (term3328 A B P z _114119 P2 _114118 _114120).
Proof. exact (@lem8385489 (term3329 A B P z _114118 P2 _114119 _114120) (term2851 A B P P2 _114118 _114120)). Qed.
Lemma lem8385492 (a : Prop) (b : Prop) : (term756 a b) = (term757 a b).
Proof. exact (EQ_MP (@lem20789 a b) (@lem20895 a b)). Qed.
Lemma lem8385493 {A B P : Type'} (z : type518 A B P) (_114118 : A -> B) (P2 : type560 A B P) (_114119 : A -> B) (_114120 : P) : (term3330 A B P z _114118 P2 _114119 _114120) = (term3331 A B P z _114118 P2 _114119 _114120).
Proof. exact (@lem8385492 (term2979 A B P z _114118 _114119 _114120) (term2853 A B P P2 _114119 _114120)). Qed.
Lemma lem8385495 (a : Prop) : (term47 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem8385496 {A B P : Type'} (z : type518 A B P) (_114118 : A -> B) (_114119 : A -> B) (_114120 : P) : (term3305 A B P z _114118 _114119 _114120) = ((term2972 A B P z _114118 _114119 _114120) = (term2975 A B P z _114118 _114119 _114120)).
Proof. exact (@lem8385495 ((term2972 A B P z _114118 _114119 _114120) = (term2975 A B P z _114118 _114119 _114120))). Qed.
Lemma lem8385497 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8385498 {A B P : Type'} (z : type518 A B P) (_114118 : A -> B) (_114119 : A -> B) (_114120 : P) : (term3306 A B P z _114118 _114119 _114120) = (term3307 A B P z _114118 _114119 _114120).
Proof. exact (MK_COMB (@lem8385497) (@lem8385496 A B P z _114118 _114119 _114120)). Qed.
Lemma lem8385500 (a : Prop) : (term47 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem8385501 {A B P : Type'} (P2 : type560 A B P) (_114119 : A -> B) (_114120 : P) : (term3235 A B P P2 _114119 _114120) = (term2851 A B P P2 _114119 _114120).
Proof. exact (@lem8385500 (term2851 A B P P2 _114119 _114120)). Qed.
Lemma lem8385502 {A B P : Type'} (z : type518 A B P) (_114118 : A -> B) (P2 : type560 A B P) (_114119 : A -> B) (_114120 : P) : (term3331 A B P z _114118 P2 _114119 _114120) = (term3332 A B P z _114118 P2 _114119 _114120).
Proof. exact (MK_COMB (@lem8385498 A B P z _114118 _114119 _114120) (@lem8385501 A B P P2 _114119 _114120)). Qed.
Lemma lem8385503 {A B P : Type'} (z : type518 A B P) (_114118 : A -> B) (P2 : type560 A B P) (_114119 : A -> B) (_114120 : P) : (term3330 A B P z _114118 P2 _114119 _114120) = (term3332 A B P z _114118 P2 _114119 _114120).
Proof. exact (TRANS (@lem8385493 A B P z _114118 P2 _114119 _114120) (@lem8385502 A B P z _114118 P2 _114119 _114120)). Qed.
Lemma lem8385504 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem8385505 {A B P : Type'} (z : type518 A B P) (_114118 : A -> B) (P2 : type560 A B P) (_114119 : A -> B) (_114120 : P) : (term3333 A B P z _114118 P2 _114119 _114120) = (term3334 A B P z _114118 P2 _114119 _114120).
Proof. exact (MK_COMB (@lem8385504) (@lem8385503 A B P z _114118 P2 _114119 _114120)). Qed.
Lemma lem8385506 {A B P : Type'} (P2 : type560 A B P) (_114118 : A -> B) (_114120 : P) : (term2851 A B P P2 _114118 _114120) = (term2851 A B P P2 _114118 _114120).
Proof. exact (eq_refl (term2851 A B P P2 _114118 _114120)). Qed.
Lemma lem8385507 {A B P : Type'} (z : type518 A B P) (_114119 : A -> B) (P2 : type560 A B P) (_114118 : A -> B) (_114120 : P) : (term3328 A B P z _114119 P2 _114118 _114120) = (term3335 A B P z _114119 P2 _114118 _114120).
Proof. exact (MK_COMB (@lem8385505 A B P z _114118 P2 _114119 _114120) (@lem8385506 A B P P2 _114118 _114120)). Qed.
Lemma lem8385508 {A B P : Type'} (z : type518 A B P) (_114119 : A -> B) (P2 : type560 A B P) (_114118 : A -> B) (_114120 : P) : (term3325 A B P z _114118 P2 _114119 _114120) = (term3335 A B P z _114119 P2 _114118 _114120).
Proof. exact (TRANS (@lem8385490 A B P z _114119 P2 _114118 _114120) (@lem8385507 A B P z _114119 P2 _114118 _114120)). Qed.
Lemma lem8385510 {A B P : Type'} (z : type518 A B P) (y : P) (lt2 : type1402 A) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (_114084 : type794 A P) (s : P -> A) (x : A) (h1 : term2270 A B P lt2 s z P2 G2 H2) (h2 : term1491 A P _114084) (h3 : term3170 A B P P2 f _114084 s y) (h4 : term2935 A B P f P2 g _114084 s x) (h5 : term2944 A B P y lt2 P2 G2 f H2 g _114084 s x) : term3336 A B P z f P2 g _114084 s y.
Proof. exact (conj (@lem8385427 A B P z y lt2 P2 G2 f H2 g _114084 s x h1 h2 h3 h4 h5) (@lem8385434 A B P y lt2 P2 G2 f H2 g _114084 s x h4 h5)). Qed.
Lemma lem8385512 {A B P : Type'} (_114119 : A -> B) (_114118 : A -> B) (_114120 : P) (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (h1 : term2270 A B P lt2 s z P2 G2 H2) : term3335 A B P z _114119 P2 _114118 _114120.
Proof. exact (EQ_MP (@lem8385508 A B P z _114119 P2 _114118 _114120) (@lem8385487 A B P _114118 _114119 _114120 lt2 s z P2 G2 H2 h1)). Qed.
Lemma lem8385513 {A B P : Type'} (_114119 : A -> B) (_114118 : A -> B) (_114120 : P) (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (h1 : term2270 A B P lt2 s z P2 G2 H2) : term3335 A B P z _114119 P2 _114118 _114120.
Proof. exact (@lem8385512 A B P _114119 _114118 _114120 lt2 s z P2 G2 H2 h1). Qed.
Lemma lem8385514 {A B P : Type'} (g : A -> B) (f : A -> B) (_114084 : type794 A P) (y : P) (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (h1 : term2270 A B P lt2 s z P2 G2 H2) : term3337 A B P z g P2 f _114084 s y.
Proof. exact (@lem8385513 A B P g f (term3244 A P _114084 s y) lt2 s z P2 G2 H2 h1). Qed.
Lemma lem8385517 {A B P : Type'} (z : type518 A B P) (y : P) (lt2 : type1402 A) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (_114084 : type794 A P) (s : P -> A) (x : A) (h1 : term2270 A B P lt2 s z P2 G2 H2) (h2 : term1491 A P _114084) (h3 : term3170 A B P P2 f _114084 s y) (h4 : term2935 A B P f P2 g _114084 s x) (h5 : term2944 A B P y lt2 P2 G2 f H2 g _114084 s x) : term3164 A B P P2 f _114084 s y.
Proof. exact (@lem8385514 A B P g f _114084 y lt2 s z P2 G2 H2 h1 (@lem8385510 A B P z y lt2 P2 G2 f H2 g _114084 s x h1 h2 h3 h4 h5)). Qed.
Lemma lem8385518 {A B P : Type'} (z : type518 A B P) (y : P) (lt2 : type1402 A) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (_114084 : type794 A P) (s : P -> A) (x : A) (h1 : term2270 A B P lt2 s z P2 G2 H2) (h2 : term1491 A P _114084) (h3 : term2935 A B P f P2 g _114084 s x) (h4 : term2944 A B P y lt2 P2 G2 f H2 g _114084 s x) : term3230 A B P P2 f _114084 s y.
Proof. exact (fun h0 : term3170 A B P P2 f _114084 s y => @lem8385517 A B P z y lt2 P2 G2 f H2 g _114084 s x h1 h2 h0 h3 h4). Qed.
Lemma lem8385520 (p : Prop) : (term748 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8385521 {A B P : Type'} (P2 : type560 A B P) (f : A -> B) (_114084 : type794 A P) (s : P -> A) (y : P) : (term3230 A B P P2 f _114084 s y) = (term3164 A B P P2 f _114084 s y).
Proof. exact (@lem8385520 (term3164 A B P P2 f _114084 s y)). Qed.
Lemma lem8385522 {A B P : Type'} (z : type518 A B P) (y : P) (lt2 : type1402 A) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (_114084 : type794 A P) (s : P -> A) (x : A) (h1 : term2270 A B P lt2 s z P2 G2 H2) (h2 : term1491 A P _114084) (h3 : term2935 A B P f P2 g _114084 s x) (h4 : term2944 A B P y lt2 P2 G2 f H2 g _114084 s x) : term3164 A B P P2 f _114084 s y.
Proof. exact (EQ_MP (@lem8385521 A B P P2 f _114084 s y) (@lem8385518 A B P z y lt2 P2 G2 f H2 g _114084 s x h1 h2 h3 h4)). Qed.
Lemma lem8385525 (p : Prop) : (~ p) = (p -> False).
Proof. exact (EQ_MP (@lem21021 p) (@lem0)). Qed.
Lemma lem8385527 {A B P : Type'} (P2 : type560 A B P) (f : A -> B) (_114084 : type794 A P) (s : P -> A) (y : P) : (term3170 A B P P2 f _114084 s y) = (term3314 A B P P2 f _114084 s y).
Proof. exact (@lem8385525 (term3164 A B P P2 f _114084 s y)). Qed.
Lemma lem8385530 {A B P : Type'} (y : P) (lt2 : type1402 A) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (_114084 : type794 A P) (s : P -> A) (x : A) (h1 : term2935 A B P f P2 g _114084 s x) (h2 : term2944 A B P y lt2 P2 G2 f H2 g _114084 s x) : term3314 A B P P2 f _114084 s y.
Proof. exact (EQ_MP (@lem8385527 A B P P2 f _114084 s y) (@lem8382620 A B P y lt2 P2 G2 f H2 g _114084 s x h1 h2)). Qed.
Lemma lem8385533 {A B P : Type'} (z : type518 A B P) (y : P) (lt2 : type1402 A) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (_114084 : type794 A P) (s : P -> A) (x : A) (h1 : term2270 A B P lt2 s z P2 G2 H2) (h2 : term1491 A P _114084) (h3 : term2935 A B P f P2 g _114084 s x) (h4 : term2944 A B P y lt2 P2 G2 f H2 g _114084 s x) : False.
Proof. exact (@lem8385530 A B P y lt2 P2 G2 f H2 g _114084 s x h3 h4 (@lem8385522 A B P z y lt2 P2 G2 f H2 g _114084 s x h1 h2 h3 h4)). Qed.
Lemma lem8385534 {A B P : Type'} (z : type518 A B P) (y : P) (lt2 : type1402 A) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (_114084 : type794 A P) (s : P -> A) (x : A) (h1 : term2270 A B P lt2 s z P2 G2 H2) (h2 : term1491 A P _114084) (h3 : term2935 A B P f P2 g _114084 s x) (h4 : term2944 A B P y lt2 P2 G2 f H2 g _114084 s x) : term750.
Proof. exact (fun h0 : ~ False => @lem8385533 A B P z y lt2 P2 G2 f H2 g _114084 s x h1 h2 h3 h4). Qed.
Lemma lem8385536 (p : Prop) : (term748 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8385537 : term750 = False.
Proof. exact (@lem8385536 False). Qed.
Lemma lem8385558 {A : Type'} : (@I (A -> Prop)) = (@I (A -> Prop)).
Proof. exact (eq_refl (@I (A -> Prop))). Qed.
Lemma lem8385559 {A : Type'} (_114742 : A -> Prop) (_114744 : A -> Prop) (h1 : _114742 = _114744) : _114742 = _114744.
Proof. exact (h1). Qed.
Lemma lem8385560 {A : Type'} (_114743 : A) (_114745 : A) (h1 : _114743 = _114745) : _114743 = _114745.
Proof. exact (h1). Qed.
Lemma lem8385561 {A : Type'} (_114742 : A -> Prop) (_114744 : A -> Prop) (h1 : _114742 = _114744) : (@I (A -> Prop) _114742) = (@I (A -> Prop) _114744).
Proof. exact (MK_COMB (@lem8385558 A) (@lem8385559 A _114742 _114744 h1)). Qed.
Lemma lem8385562 {A : Type'} (_114743 : A) (_114745 : A) (_114742 : A -> Prop) (_114744 : A -> Prop) (h1 : _114743 = _114745) (h2 : _114742 = _114744) : (@I (A -> Prop) _114742 _114743) = (@I (A -> Prop) _114744 _114745).
Proof. exact (MK_COMB (@lem8385561 A _114742 _114744 h2) (@lem8385560 A _114743 _114745 h1)). Qed.
Lemma lem8385564 (b : Prop) (a : Prop) : term3205 b a.
Proof. exact (EQ_MP (@lem21501 b a) (@lem21598 b a)). Qed.
Lemma lem8385565 {A : Type'} (_114744 : A -> Prop) (_114745 : A) (_114742 : A -> Prop) (_114743 : A) : term3206 A _114744 _114745 _114742 _114743.
Proof. exact (@lem8385564 (@I (A -> Prop) _114744 _114745) (@I (A -> Prop) _114742 _114743)). Qed.
Lemma lem8385566 {A : Type'} (_114743 : A) (_114745 : A) (_114742 : A -> Prop) (_114744 : A -> Prop) (h1 : _114743 = _114745) (h2 : _114742 = _114744) : term3207 A _114744 _114745 _114742 _114743.
Proof. exact (@lem8385565 A _114744 _114745 _114742 _114743 (@lem8385562 A _114743 _114745 _114742 _114744 h1 h2)). Qed.
Lemma lem8385567 {A : Type'} (_114744 : A -> Prop) (_114742 : A -> Prop) (_114743 : A) (_114745 : A) (h1 : _114743 = _114745) : term3208 A _114744 _114745 _114742 _114743.
Proof. exact (fun h0 : _114742 = _114744 => @lem8385566 A _114743 _114745 _114742 _114744 h1 h0). Qed.
Lemma lem8385569 (a : Prop) (b : Prop) : (a -> b) = (term3209 a b).
Proof. exact (EQ_MP (@lem21394 a b) (@lem21490 a b)). Qed.
Lemma lem8385570 {A : Type'} (_114744 : A -> Prop) (_114745 : A) (_114742 : A -> Prop) (_114743 : A) : (term3208 A _114744 _114745 _114742 _114743) = (term3210 A _114744 _114745 _114742 _114743).
Proof. exact (@lem8385569 (_114742 = _114744) (term3207 A _114744 _114745 _114742 _114743)). Qed.
Lemma lem8385571 {A : Type'} (_114744 : A -> Prop) (_114742 : A -> Prop) (_114743 : A) (_114745 : A) (h1 : _114743 = _114745) : term3210 A _114744 _114745 _114742 _114743.
Proof. exact (EQ_MP (@lem8385570 A _114744 _114745 _114742 _114743) (@lem8385567 A _114744 _114742 _114743 _114745 h1)). Qed.
Lemma lem8385572 {A : Type'} (_114744 : A -> Prop) (_114745 : A) (_114742 : A -> Prop) (_114743 : A) : term3211 A _114744 _114745 _114742 _114743.
Proof. exact (fun h0 : _114743 = _114745 => @lem8385571 A _114744 _114742 _114743 _114745 h0). Qed.
Lemma lem8385574 (a : Prop) (b : Prop) : (a -> b) = (term3209 a b).
Proof. exact (EQ_MP (@lem21394 a b) (@lem21490 a b)). Qed.
Lemma lem8385575 {A : Type'} (_114744 : A -> Prop) (_114745 : A) (_114742 : A -> Prop) (_114743 : A) : (term3211 A _114744 _114745 _114742 _114743) = (term3212 A _114744 _114745 _114742 _114743).
Proof. exact (@lem8385574 (_114743 = _114745) (term3210 A _114744 _114745 _114742 _114743)). Qed.
Lemma lem8385576 {A : Type'} (_114744 : A -> Prop) (_114745 : A) (_114742 : A -> Prop) (_114743 : A) : term3212 A _114744 _114745 _114742 _114743.
Proof. exact (EQ_MP (@lem8385575 A _114744 _114745 _114742 _114743) (@lem8385572 A _114744 _114745 _114742 _114743)). Qed.
Lemma lem8385862 {A : Type'} (x : A) : x = x.
Proof. exact (@lem21386 A x). Qed.
Lemma lem8385863 {A : Type'} (x : A) : x = x.
Proof. exact (@lem8385862 A x). Qed.
Lemma lem8385864 {A P : Type'} (s : P -> A) (y : P) : (@I (P -> A) s y) = (@I (P -> A) s y).
Proof. exact (@lem8385863 A (@I (P -> A) s y)). Qed.
Lemma lem8385865 {A P : Type'} (s : P -> A) (y : P) : term3213 A P s y.
Proof. exact (fun h0 : term3214 A P s y => @lem8385864 A P s y). Qed.
Lemma lem8385867 (p : Prop) : (term748 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8385868 {A P : Type'} (s : P -> A) (y : P) : (term3213 A P s y) = ((@I (P -> A) s y) = (@I (P -> A) s y)).
Proof. exact (@lem8385867 ((@I (P -> A) s y) = (@I (P -> A) s y))). Qed.
Lemma lem8385869 {A P : Type'} (s : P -> A) (y : P) : (@I (P -> A) s y) = (@I (P -> A) s y).
Proof. exact (EQ_MP (@lem8385868 A P s y) (@lem8385865 A P s y)). Qed.
Lemma lem8385875 (q : Prop) (p : Prop) : (p \/ q) = (q \/ p).
Proof. exact (proj1 (@lem827 (@el Prop) p q)). Qed.
Lemma lem8385876 {A P : Type'} (_114084 : type794 A P) (_114133 : P -> A) (_114135 : P) (_114134 : A) : (term3065 A P _114135 _114084 _114133 _114134) = (term3215 A P _114084 _114133 _114135 _114134).
Proof. exact (@lem8385875 ((term2811 A P _114084 _114133 _114134) = _114134) (term2813 A P _114133 _114135 _114134)). Qed.
Lemma lem8385886 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8385887 {A P : Type'} (_114084 : type794 A P) (_114133 : P -> A) (_114135 : P) (_114134 : A) : (term3216 A P _114135 _114084 _114133 _114134) = (term3217 A P _114084 _114133 _114135 _114134).
Proof. exact (MK_COMB (@lem8385886) (@lem8385876 A P _114084 _114133 _114135 _114134)). Qed.
Lemma lem8385897 {A P : Type'} (_114084 : type794 A P) (_114133 : P -> A) (_114135 : P) (_114134 : A) : (term3215 A P _114084 _114133 _114135 _114134) = (term3215 A P _114084 _114133 _114135 _114134).
Proof. exact (eq_refl (term3215 A P _114084 _114133 _114135 _114134)). Qed.
Lemma lem8385898 {A P : Type'} (_114084 : type794 A P) (_114133 : P -> A) (_114135 : P) (_114134 : A) : ((term3065 A P _114135 _114084 _114133 _114134) = (term3215 A P _114084 _114133 _114135 _114134)) = ((term3215 A P _114084 _114133 _114135 _114134) = (term3215 A P _114084 _114133 _114135 _114134)).
Proof. exact (MK_COMB (@lem8385887 A P _114084 _114133 _114135 _114134) (@lem8385897 A P _114084 _114133 _114135 _114134)). Qed.
Lemma lem8385900 {A : Type'} (x : A) : (x = x) = True.
Proof. exact (EQ_MP (@lem20665 A x) (@lem20664 A x)). Qed.
Lemma lem8385901 (x : Prop) : (x = x) = True.
Proof. exact (@lem8385900 Prop x). Qed.
Lemma lem8385902 {A P : Type'} (_114084 : type794 A P) (_114133 : P -> A) (_114135 : P) (_114134 : A) : ((term3215 A P _114084 _114133 _114135 _114134) = (term3215 A P _114084 _114133 _114135 _114134)) = True.
Proof. exact (@lem8385901 (term3215 A P _114084 _114133 _114135 _114134)). Qed.
Lemma lem8385903 {A P : Type'} (_114084 : type794 A P) (_114133 : P -> A) (_114135 : P) (_114134 : A) : ((term3065 A P _114135 _114084 _114133 _114134) = (term3215 A P _114084 _114133 _114135 _114134)) = True.
Proof. exact (TRANS (@lem8385898 A P _114084 _114133 _114135 _114134) (@lem8385902 A P _114084 _114133 _114135 _114134)). Qed.
Lemma lem8385904 {A P : Type'} (_114084 : type794 A P) (_114133 : P -> A) (_114135 : P) (_114134 : A) : True = ((term3065 A P _114135 _114084 _114133 _114134) = (term3215 A P _114084 _114133 _114135 _114134)).
Proof. exact (SYM (@lem8385903 A P _114084 _114133 _114135 _114134)). Qed.
Lemma lem8385905 {A P : Type'} (_114084 : type794 A P) (_114133 : P -> A) (_114135 : P) (_114134 : A) : (term3065 A P _114135 _114084 _114133 _114134) = (term3215 A P _114084 _114133 _114135 _114134).
Proof. exact (EQ_MP (@lem8385904 A P _114084 _114133 _114135 _114134) (@lem0)). Qed.
Lemma lem8385906 {A P : Type'} (_114133 : P -> A) (_114135 : P) (_114134 : A) (_114084 : type794 A P) (h1 : term1491 A P _114084) : term3215 A P _114084 _114133 _114135 _114134.
Proof. exact (EQ_MP (@lem8385905 A P _114084 _114133 _114135 _114134) (@lem8382886 A P _114135 _114133 _114134 _114084 h1)). Qed.
Lemma lem8385908 (b : Prop) (a : Prop) : (a \/ b) = (term754 b a).
Proof. exact (EQ_MP (@lem20682 b a) (@lem20764 b a)). Qed.
Lemma lem8385909 {A P : Type'} (_114135 : P) (_114084 : type794 A P) (_114133 : P -> A) (_114134 : A) : (term3215 A P _114084 _114133 _114135 _114134) = (term3218 A P _114135 _114084 _114133 _114134).
Proof. exact (@lem8385908 (term2813 A P _114133 _114135 _114134) ((term2811 A P _114084 _114133 _114134) = _114134)). Qed.
Lemma lem8385911 (a : Prop) : (term47 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem8385912 {A P : Type'} (_114133 : P -> A) (_114135 : P) (_114134 : A) : (term3219 A P _114133 _114135 _114134) = ((@I (P -> A) _114133 _114135) = _114134).
Proof. exact (@lem8385911 ((@I (P -> A) _114133 _114135) = _114134)). Qed.
Lemma lem8385913 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem8385914 {A P : Type'} (_114133 : P -> A) (_114135 : P) (_114134 : A) : (term3220 A P _114133 _114135 _114134) = (term3221 A P _114133 _114135 _114134).
Proof. exact (MK_COMB (@lem8385913) (@lem8385912 A P _114133 _114135 _114134)). Qed.
Lemma lem8385915 {A P : Type'} (_114084 : type794 A P) (_114133 : P -> A) (_114134 : A) : ((term2811 A P _114084 _114133 _114134) = _114134) = ((term2811 A P _114084 _114133 _114134) = _114134).
Proof. exact (eq_refl ((term2811 A P _114084 _114133 _114134) = _114134)). Qed.
Lemma lem8385916 {A P : Type'} (_114135 : P) (_114084 : type794 A P) (_114133 : P -> A) (_114134 : A) : (term3218 A P _114135 _114084 _114133 _114134) = (term3222 A P _114135 _114084 _114133 _114134).
Proof. exact (MK_COMB (@lem8385914 A P _114133 _114135 _114134) (@lem8385915 A P _114084 _114133 _114134)). Qed.
Lemma lem8385917 {A P : Type'} (_114135 : P) (_114084 : type794 A P) (_114133 : P -> A) (_114134 : A) : (term3215 A P _114084 _114133 _114135 _114134) = (term3222 A P _114135 _114084 _114133 _114134).
Proof. exact (TRANS (@lem8385909 A P _114135 _114084 _114133 _114134) (@lem8385916 A P _114135 _114084 _114133 _114134)). Qed.
Lemma lem8385920 {A P : Type'} (_114135 : P) (_114133 : P -> A) (_114134 : A) (_114084 : type794 A P) (h1 : term1491 A P _114084) : term3222 A P _114135 _114084 _114133 _114134.
Proof. exact (EQ_MP (@lem8385917 A P _114135 _114084 _114133 _114134) (@lem8385906 A P _114133 _114135 _114134 _114084 h1)). Qed.
Lemma lem8385921 {A P : Type'} (_114135 : P) (_114133 : P -> A) (_114134 : A) (_114084 : type794 A P) (h1 : term1491 A P _114084) : term3222 A P _114135 _114084 _114133 _114134.
Proof. exact (@lem8385920 A P _114135 _114133 _114134 _114084 h1). Qed.
Lemma lem8385922 {A P : Type'} (s : P -> A) (y : P) (_114084 : type794 A P) (h1 : term1491 A P _114084) : term3223 A P _114084 s y.
Proof. exact (@lem8385921 A P y s (@I (P -> A) s y) _114084 h1). Qed.
Lemma lem8385925 {A P : Type'} (s : P -> A) (y : P) (_114084 : type794 A P) (h1 : term1491 A P _114084) : (term3224 A P _114084 s y) = (@I (P -> A) s y).
Proof. exact (@lem8385922 A P s y _114084 h1 (@lem8385869 A P s y)). Qed.
Lemma lem8385926 {A P : Type'} (s : P -> A) (y : P) (_114084 : type794 A P) (h1 : term1491 A P _114084) : (term3224 A P _114084 s y) = (@I (P -> A) s y).
Proof. exact (@lem8385925 A P s y _114084 h1). Qed.
Lemma lem8385927 {A P : Type'} (s : P -> A) (y : P) (_114084 : type794 A P) (h1 : term1491 A P _114084) : term3225 A P _114084 s y.
Proof. exact (fun h0 : term3226 A P _114084 s y => @lem8385926 A P s y _114084 h1). Qed.
Lemma lem8385929 (p : Prop) : (term748 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8385930 {A P : Type'} (_114084 : type794 A P) (s : P -> A) (y : P) : (term3225 A P _114084 s y) = ((term3224 A P _114084 s y) = (@I (P -> A) s y)).
Proof. exact (@lem8385929 ((term3224 A P _114084 s y) = (@I (P -> A) s y))). Qed.
Lemma lem8385931 {A P : Type'} (s : P -> A) (y : P) (_114084 : type794 A P) (h1 : term1491 A P _114084) : (term3224 A P _114084 s y) = (@I (P -> A) s y).
Proof. exact (EQ_MP (@lem8385930 A P _114084 s y) (@lem8385927 A P s y _114084 h1)). Qed.
Lemma lem8385933 {A : Type'} (x : A -> Prop) : x = x.
Proof. exact (@lem21386 (A -> Prop) x). Qed.
Lemma lem8385934 {A : Type'} (x : A -> Prop) : x = x.
Proof. exact (@lem8385933 A x). Qed.
Lemma lem8385935 {A B P : Type'} (lt2 : type1402 A) (z : type518 A B P) (f : A -> B) (g : A -> B) (_114084 : type794 A P) (s : P -> A) (y : P) : (term3227 A B P lt2 z f g _114084 s y) = (term3227 A B P lt2 z f g _114084 s y).
Proof. exact (@lem8385934 A (term3227 A B P lt2 z f g _114084 s y)). Qed.
Lemma lem8385936 {A B P : Type'} (lt2 : type1402 A) (z : type518 A B P) (f : A -> B) (g : A -> B) (_114084 : type794 A P) (s : P -> A) (y : P) : term3228 A B P lt2 z f g _114084 s y.
Proof. exact (fun h0 : term3229 A B P lt2 z f g _114084 s y => @lem8385935 A B P lt2 z f g _114084 s y). Qed.
Lemma lem8385938 (p : Prop) : (term748 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8385939 {A B P : Type'} (lt2 : type1402 A) (z : type518 A B P) (f : A -> B) (g : A -> B) (_114084 : type794 A P) (s : P -> A) (y : P) : (term3228 A B P lt2 z f g _114084 s y) = ((term3227 A B P lt2 z f g _114084 s y) = (term3227 A B P lt2 z f g _114084 s y)).
Proof. exact (@lem8385938 ((term3227 A B P lt2 z f g _114084 s y) = (term3227 A B P lt2 z f g _114084 s y))). Qed.
Lemma lem8385940 {A B P : Type'} (lt2 : type1402 A) (z : type518 A B P) (f : A -> B) (g : A -> B) (_114084 : type794 A P) (s : P -> A) (y : P) : (term3227 A B P lt2 z f g _114084 s y) = (term3227 A B P lt2 z f g _114084 s y).
Proof. exact (EQ_MP (@lem8385939 A B P lt2 z f g _114084 s y) (@lem8385936 A B P lt2 z f g _114084 s y)). Qed.
Lemma lem8385943 {A B P : Type'} (f : A -> B) (G2 : type557 A B P) (g : A -> B) (_114084 : type794 A P) (s : P -> A) (y : P) (h1 : term3180 A B P f G2 g _114084 s y) : term3180 A B P f G2 g _114084 s y.
Proof. exact (h1). Qed.
Lemma lem8385944 {A B P : Type'} (f : A -> B) (G2 : type557 A B P) (g : A -> B) (_114084 : type794 A P) (s : P -> A) (y : P) (h1 : term3180 A B P f G2 g _114084 s y) : term3338 A B P f G2 g _114084 s y.
Proof. exact (fun h0 : (term3339 A B P G2 f _114084 s y) = (term3339 A B P G2 g _114084 s y) => @lem8385943 A B P f G2 g _114084 s y h1). Qed.
Lemma lem8385946 (p : Prop) : (term753 p) = (~ p).
Proof. exact (EQ_MP (@lem21028 p) (@lem21107 p)). Qed.
Lemma lem8385947 {A B P : Type'} (f : A -> B) (G2 : type557 A B P) (g : A -> B) (_114084 : type794 A P) (s : P -> A) (y : P) : (term3338 A B P f G2 g _114084 s y) = (term3180 A B P f G2 g _114084 s y).
Proof. exact (@lem8385946 ((term3339 A B P G2 f _114084 s y) = (term3339 A B P G2 g _114084 s y))). Qed.
Lemma lem8385948 {A B P : Type'} (f : A -> B) (G2 : type557 A B P) (g : A -> B) (_114084 : type794 A P) (s : P -> A) (y : P) (h1 : term3180 A B P f G2 g _114084 s y) : term3180 A B P f G2 g _114084 s y.
Proof. exact (EQ_MP (@lem8385947 A B P f G2 g _114084 s y) (@lem8385944 A B P f G2 g _114084 s y h1)). Qed.
Lemma lem8385950 (b : Prop) (a : Prop) : (a \/ b) = (term754 b a).
Proof. exact (EQ_MP (@lem20682 b a) (@lem20764 b a)). Qed.
Lemma lem8385953 {A B P : Type'} (G2 : type557 A B P) (z : type518 A B P) (_114142 : A -> B) (_114143 : A -> B) (_114144 : P) : (term3184 A B P z _114142 G2 _114143 _114144) = (term3340 A B P G2 z _114142 _114143 _114144).
Proof. exact (@lem8385950 ((term2845 A B P G2 _114142 _114144) = (term2845 A B P G2 _114143 _114144)) (term2979 A B P z _114142 _114143 _114144)). Qed.
Lemma lem8385956 {A B P : Type'} (_114142 : A -> B) (_114143 : A -> B) (_114144 : P) (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (h1 : term2270 A B P lt2 s z P2 G2 H2) : term3340 A B P G2 z _114142 _114143 _114144.
Proof. exact (EQ_MP (@lem8385953 A B P G2 z _114142 _114143 _114144) (@lem8383164 A B P _114142 _114143 _114144 lt2 s z P2 G2 H2 h1)). Qed.
Lemma lem8385957 {A B P : Type'} (_114142 : A -> B) (_114143 : A -> B) (_114144 : P) (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (h1 : term2270 A B P lt2 s z P2 G2 H2) : term3340 A B P G2 z _114142 _114143 _114144.
Proof. exact (@lem8385956 A B P _114142 _114143 _114144 lt2 s z P2 G2 H2 h1). Qed.
Lemma lem8385958 {A B P : Type'} (f : A -> B) (g : A -> B) (_114084 : type794 A P) (y : P) (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (h1 : term2270 A B P lt2 s z P2 G2 H2) : term3341 A B P G2 z f g _114084 s y.
Proof. exact (@lem8385957 A B P f g (term3244 A P _114084 s y) lt2 s z P2 G2 H2 h1). Qed.
Lemma lem8385961 {A B P : Type'} (lt2 : type1402 A) (z : type518 A B P) (P2 : type560 A B P) (H2 : type558 A B P) (f : A -> B) (G2 : type557 A B P) (g : A -> B) (_114084 : type794 A P) (s : P -> A) (y : P) (h1 : term2270 A B P lt2 s z P2 G2 H2) (h2 : term3180 A B P f G2 g _114084 s y) : term3295 A B P z f g _114084 s y.
Proof. exact (@lem8385958 A B P f g _114084 y lt2 s z P2 G2 H2 h1 (@lem8385948 A B P f G2 g _114084 s y h2)). Qed.
Lemma lem8385962 {A B P : Type'} (lt2 : type1402 A) (z : type518 A B P) (P2 : type560 A B P) (H2 : type558 A B P) (f : A -> B) (G2 : type557 A B P) (g : A -> B) (_114084 : type794 A P) (s : P -> A) (y : P) (h1 : term2270 A B P lt2 s z P2 G2 H2) (h2 : term3180 A B P f G2 g _114084 s y) : term3342 A B P z f g _114084 s y.
Proof. exact (fun h0 : (term3292 A B P z f g _114084 s y) = (term3293 A B P z f g _114084 s y) => @lem8385961 A B P lt2 z P2 H2 f G2 g _114084 s y h1 h2). Qed.
Lemma lem8385964 (p : Prop) : (term753 p) = (~ p).
Proof. exact (EQ_MP (@lem21028 p) (@lem21107 p)). Qed.
Lemma lem8385965 {A B P : Type'} (z : type518 A B P) (f : A -> B) (g : A -> B) (_114084 : type794 A P) (s : P -> A) (y : P) : (term3342 A B P z f g _114084 s y) = (term3295 A B P z f g _114084 s y).
Proof. exact (@lem8385964 ((term3292 A B P z f g _114084 s y) = (term3293 A B P z f g _114084 s y))). Qed.
Lemma lem8385966 {A B P : Type'} (lt2 : type1402 A) (z : type518 A B P) (P2 : type560 A B P) (H2 : type558 A B P) (f : A -> B) (G2 : type557 A B P) (g : A -> B) (_114084 : type794 A P) (s : P -> A) (y : P) (h1 : term2270 A B P lt2 s z P2 G2 H2) (h2 : term3180 A B P f G2 g _114084 s y) : term3295 A B P z f g _114084 s y.
Proof. exact (EQ_MP (@lem8385965 A B P z f g _114084 s y) (@lem8385962 A B P lt2 z P2 H2 f G2 g _114084 s y h1 h2)). Qed.
Lemma lem8385968 (b : Prop) (a : Prop) : (a \/ b) = (term754 b a).
Proof. exact (EQ_MP (@lem20682 b a) (@lem20764 b a)). Qed.
Lemma lem8385971 {A B P : Type'} (f : A -> B) (g : A -> B) (lt2 : type1402 A) (_114156 : A) (s : P -> A) (y : P) : (term3158 A B P lt2 s y f g _114156) = (term3343 A B P f g lt2 _114156 s y).
Proof. exact (@lem8385968 ((@I (A -> B) f _114156) = (@I (A -> B) g _114156)) (term3196 A P lt2 _114156 s y)). Qed.
Lemma lem8385974 {A B P : Type'} (_114156 : A) (y : P) (lt2 : type1402 A) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (_114084 : type794 A P) (s : P -> A) (x : A) (h1 : term2944 A B P y lt2 P2 G2 f H2 g _114084 s x) : term3343 A B P f g lt2 _114156 s y.
Proof. exact (EQ_MP (@lem8385971 A B P f g lt2 _114156 s y) (@lem8382983 A B P _114156 y lt2 P2 G2 f H2 g _114084 s x h1)). Qed.
Lemma lem8385975 {A B P : Type'} (_114156 : A) (y : P) (lt2 : type1402 A) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (_114084 : type794 A P) (s : P -> A) (x : A) (h1 : term2944 A B P y lt2 P2 G2 f H2 g _114084 s x) : term3343 A B P f g lt2 _114156 s y.
Proof. exact (@lem8385974 A B P _114156 y lt2 P2 G2 f H2 g _114084 s x h1). Qed.
Lemma lem8385976 {A B P : Type'} (z : type518 A B P) (y : P) (lt2 : type1402 A) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (_114084 : type794 A P) (s : P -> A) (x : A) (h1 : term2944 A B P y lt2 P2 G2 f H2 g _114084 s x) : term3344 A B P lt2 z f g _114084 s y.
Proof. exact (@lem8385975 A B P (term3291 A B P z f g _114084 s y) y lt2 P2 G2 f H2 g _114084 s x h1). Qed.
Lemma lem8385979 {A B P : Type'} (z : type518 A B P) (y : P) (lt2 : type1402 A) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (_114084 : type794 A P) (s : P -> A) (x : A) (h1 : term2270 A B P lt2 s z P2 G2 H2) (h2 : term3180 A B P f G2 g _114084 s y) (h3 : term2944 A B P y lt2 P2 G2 f H2 g _114084 s x) : term3281 A B P lt2 z f g _114084 s y.
Proof. exact (@lem8385976 A B P z y lt2 P2 G2 f H2 g _114084 s x h3 (@lem8385966 A B P lt2 z P2 H2 f G2 g _114084 s y h1 h2)). Qed.
Lemma lem8385980 {A B P : Type'} (z : type518 A B P) (y : P) (lt2 : type1402 A) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (_114084 : type794 A P) (s : P -> A) (x : A) (h1 : term2270 A B P lt2 s z P2 G2 H2) (h2 : term3180 A B P f G2 g _114084 s y) (h3 : term2944 A B P y lt2 P2 G2 f H2 g _114084 s x) : term3345 A B P lt2 z f g _114084 s y.
Proof. exact (fun h0 : term3279 A B P lt2 z f g _114084 s y => @lem8385979 A B P z y lt2 P2 G2 f H2 g _114084 s x h1 h2 h3). Qed.
Lemma lem8385982 (p : Prop) : (term753 p) = (~ p).
Proof. exact (EQ_MP (@lem21028 p) (@lem21107 p)). Qed.
Lemma lem8385983 {A B P : Type'} (lt2 : type1402 A) (z : type518 A B P) (f : A -> B) (g : A -> B) (_114084 : type794 A P) (s : P -> A) (y : P) : (term3345 A B P lt2 z f g _114084 s y) = (term3281 A B P lt2 z f g _114084 s y).
Proof. exact (@lem8385982 (term3279 A B P lt2 z f g _114084 s y)). Qed.
Lemma lem8385984 {A B P : Type'} (z : type518 A B P) (y : P) (lt2 : type1402 A) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (_114084 : type794 A P) (s : P -> A) (x : A) (h1 : term2270 A B P lt2 s z P2 G2 H2) (h2 : term3180 A B P f G2 g _114084 s y) (h3 : term2944 A B P y lt2 P2 G2 f H2 g _114084 s x) : term3281 A B P lt2 z f g _114084 s y.
Proof. exact (EQ_MP (@lem8385983 A B P lt2 z f g _114084 s y) (@lem8385980 A B P z y lt2 P2 G2 f H2 g _114084 s x h1 h2 h3)). Qed.
Lemma lem8386002 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem8386003 {A : Type'} (_114745 : A) (_114744 : A -> Prop) (_114742 : A -> Prop) (_114743 : A) : (term3210 A _114744 _114745 _114742 _114743) = (term3248 A _114745 _114744 _114742 _114743).
Proof. exact (@lem8386002 (@I (A -> Prop) _114744 _114745) (term3249 A _114742 _114744) (term3250 A _114742 _114743)). Qed.
Lemma lem8386021 {A : Type'} (_114743 : A) (_114745 : A) : (term3251 A _114743 _114745) = (term3251 A _114743 _114745).
Proof. exact (eq_refl (term3251 A _114743 _114745)). Qed.
Lemma lem8386022 {A : Type'} (_114745 : A) (_114744 : A -> Prop) (_114742 : A -> Prop) (_114743 : A) : (term3212 A _114744 _114745 _114742 _114743) = (term3252 A _114745 _114744 _114742 _114743).
Proof. exact (MK_COMB (@lem8386021 A _114743 _114745) (@lem8386003 A _114745 _114744 _114742 _114743)). Qed.
Lemma lem8386026 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem8386027 {A : Type'} (_114745 : A) (_114744 : A -> Prop) (_114742 : A -> Prop) (_114743 : A) : (term3252 A _114745 _114744 _114742 _114743) = (term3253 A _114745 _114744 _114742 _114743).
Proof. exact (@lem8386026 (@I (A -> Prop) _114744 _114745) (term3254 A _114743 _114745) (term3255 A _114744 _114742 _114743)). Qed.
Lemma lem8386057 {A : Type'} (_114745 : A) (_114744 : A -> Prop) (_114742 : A -> Prop) (_114743 : A) : (term3212 A _114744 _114745 _114742 _114743) = (term3253 A _114745 _114744 _114742 _114743).
Proof. exact (TRANS (@lem8386022 A _114745 _114744 _114742 _114743) (@lem8386027 A _114745 _114744 _114742 _114743)). Qed.
Lemma lem8386058 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8386059 {A : Type'} (_114745 : A) (_114744 : A -> Prop) (_114742 : A -> Prop) (_114743 : A) : (term3256 A _114744 _114745 _114742 _114743) = (term3257 A _114745 _114744 _114742 _114743).
Proof. exact (MK_COMB (@lem8386058) (@lem8386057 A _114745 _114744 _114742 _114743)). Qed.
Lemma lem8386063 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem8386064 {A : Type'} (_114743 : A) (_114742 : A -> Prop) (_114744 : A -> Prop) (_114745 : A) : (term3346 A _114743 _114742 _114744 _114745) = (term3347 A _114743 _114742 _114744 _114745).
Proof. exact (@lem8386063 (term3254 A _114743 _114745) (term3250 A _114742 _114743) (term3348 A _114742 _114744 _114745)). Qed.
Lemma lem8386080 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem8386081 {A : Type'} (_114742 : A -> Prop) (_114743 : A) (_114744 : A -> Prop) (_114745 : A) : (term3349 A _114743 _114742 _114744 _114745) = (term3350 A _114742 _114743 _114744 _114745).
Proof. exact (@lem8386080 (term3249 A _114742 _114744) (term3250 A _114742 _114743) (@I (A -> Prop) _114744 _114745)). Qed.
Lemma lem8386097 (q : Prop) (p : Prop) : (p \/ q) = (q \/ p).
Proof. exact (proj1 (@lem827 (@el Prop) p q)). Qed.
Lemma lem8386098 {A : Type'} (_114744 : A -> Prop) (_114745 : A) (_114742 : A -> Prop) (_114743 : A) : (term3351 A _114742 _114743 _114744 _114745) = (term3207 A _114744 _114745 _114742 _114743).
Proof. exact (@lem8386097 (@I (A -> Prop) _114744 _114745) (term3250 A _114742 _114743)). Qed.
Lemma lem8386104 {A : Type'} (_114742 : A -> Prop) (_114744 : A -> Prop) : (term3352 A _114742 _114744) = (term3352 A _114742 _114744).
Proof. exact (eq_refl (term3352 A _114742 _114744)). Qed.
Lemma lem8386105 {A : Type'} (_114744 : A -> Prop) (_114745 : A) (_114742 : A -> Prop) (_114743 : A) : (term3350 A _114742 _114743 _114744 _114745) = (term3210 A _114744 _114745 _114742 _114743).
Proof. exact (MK_COMB (@lem8386104 A _114742 _114744) (@lem8386098 A _114744 _114745 _114742 _114743)). Qed.
Lemma lem8386109 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem8386110 {A : Type'} (_114745 : A) (_114744 : A -> Prop) (_114742 : A -> Prop) (_114743 : A) : (term3210 A _114744 _114745 _114742 _114743) = (term3248 A _114745 _114744 _114742 _114743).
Proof. exact (@lem8386109 (@I (A -> Prop) _114744 _114745) (term3249 A _114742 _114744) (term3250 A _114742 _114743)). Qed.
Lemma lem8386128 {A : Type'} (_114745 : A) (_114744 : A -> Prop) (_114742 : A -> Prop) (_114743 : A) : (term3350 A _114742 _114743 _114744 _114745) = (term3248 A _114745 _114744 _114742 _114743).
Proof. exact (TRANS (@lem8386105 A _114744 _114745 _114742 _114743) (@lem8386110 A _114745 _114744 _114742 _114743)). Qed.
Lemma lem8386129 {A : Type'} (_114745 : A) (_114744 : A -> Prop) (_114742 : A -> Prop) (_114743 : A) : (term3349 A _114743 _114742 _114744 _114745) = (term3248 A _114745 _114744 _114742 _114743).
Proof. exact (TRANS (@lem8386081 A _114742 _114743 _114744 _114745) (@lem8386128 A _114745 _114744 _114742 _114743)). Qed.
Lemma lem8386130 {A : Type'} (_114743 : A) (_114745 : A) : (term3251 A _114743 _114745) = (term3251 A _114743 _114745).
Proof. exact (eq_refl (term3251 A _114743 _114745)). Qed.
Lemma lem8386131 {A : Type'} (_114745 : A) (_114744 : A -> Prop) (_114742 : A -> Prop) (_114743 : A) : (term3347 A _114743 _114742 _114744 _114745) = (term3252 A _114745 _114744 _114742 _114743).
Proof. exact (MK_COMB (@lem8386130 A _114743 _114745) (@lem8386129 A _114745 _114744 _114742 _114743)). Qed.
Lemma lem8386135 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem8386136 {A : Type'} (_114745 : A) (_114744 : A -> Prop) (_114742 : A -> Prop) (_114743 : A) : (term3252 A _114745 _114744 _114742 _114743) = (term3253 A _114745 _114744 _114742 _114743).
Proof. exact (@lem8386135 (@I (A -> Prop) _114744 _114745) (term3254 A _114743 _114745) (term3255 A _114744 _114742 _114743)). Qed.
Lemma lem8386166 {A : Type'} (_114745 : A) (_114744 : A -> Prop) (_114742 : A -> Prop) (_114743 : A) : (term3347 A _114743 _114742 _114744 _114745) = (term3253 A _114745 _114744 _114742 _114743).
Proof. exact (TRANS (@lem8386131 A _114745 _114744 _114742 _114743) (@lem8386136 A _114745 _114744 _114742 _114743)). Qed.
Lemma lem8386167 {A : Type'} (_114745 : A) (_114744 : A -> Prop) (_114742 : A -> Prop) (_114743 : A) : (term3346 A _114743 _114742 _114744 _114745) = (term3253 A _114745 _114744 _114742 _114743).
Proof. exact (TRANS (@lem8386064 A _114743 _114742 _114744 _114745) (@lem8386166 A _114745 _114744 _114742 _114743)). Qed.
Lemma lem8386168 {A : Type'} (_114745 : A) (_114744 : A -> Prop) (_114742 : A -> Prop) (_114743 : A) : ((term3212 A _114744 _114745 _114742 _114743) = (term3346 A _114743 _114742 _114744 _114745)) = ((term3253 A _114745 _114744 _114742 _114743) = (term3253 A _114745 _114744 _114742 _114743)).
Proof. exact (MK_COMB (@lem8386059 A _114745 _114744 _114742 _114743) (@lem8386167 A _114745 _114744 _114742 _114743)). Qed.
Lemma lem8386170 {A : Type'} (x : A) : (x = x) = True.
Proof. exact (EQ_MP (@lem20665 A x) (@lem20664 A x)). Qed.
Lemma lem8386171 (x : Prop) : (x = x) = True.
Proof. exact (@lem8386170 Prop x). Qed.
Lemma lem8386172 {A : Type'} (_114745 : A) (_114744 : A -> Prop) (_114742 : A -> Prop) (_114743 : A) : ((term3253 A _114745 _114744 _114742 _114743) = (term3253 A _114745 _114744 _114742 _114743)) = True.
Proof. exact (@lem8386171 (term3253 A _114745 _114744 _114742 _114743)). Qed.
Lemma lem8386173 {A : Type'} (_114743 : A) (_114742 : A -> Prop) (_114744 : A -> Prop) (_114745 : A) : ((term3212 A _114744 _114745 _114742 _114743) = (term3346 A _114743 _114742 _114744 _114745)) = True.
Proof. exact (TRANS (@lem8386168 A _114745 _114744 _114742 _114743) (@lem8386172 A _114745 _114744 _114742 _114743)). Qed.
Lemma lem8386174 {A : Type'} (_114743 : A) (_114742 : A -> Prop) (_114744 : A -> Prop) (_114745 : A) : True = ((term3212 A _114744 _114745 _114742 _114743) = (term3346 A _114743 _114742 _114744 _114745)).
Proof. exact (SYM (@lem8386173 A _114743 _114742 _114744 _114745)). Qed.
Lemma lem8386175 {A : Type'} (_114743 : A) (_114742 : A -> Prop) (_114744 : A -> Prop) (_114745 : A) : (term3212 A _114744 _114745 _114742 _114743) = (term3346 A _114743 _114742 _114744 _114745).
Proof. exact (EQ_MP (@lem8386174 A _114743 _114742 _114744 _114745) (@lem0)). Qed.
Lemma lem8386176 {A : Type'} (_114743 : A) (_114742 : A -> Prop) (_114744 : A -> Prop) (_114745 : A) : term3346 A _114743 _114742 _114744 _114745.
Proof. exact (EQ_MP (@lem8386175 A _114743 _114742 _114744 _114745) (@lem8385576 A _114744 _114745 _114742 _114743)). Qed.
Lemma lem8386178 (b : Prop) (a : Prop) : (a \/ b) = (term754 b a).
Proof. exact (EQ_MP (@lem20682 b a) (@lem20764 b a)). Qed.
Lemma lem8386179 {A : Type'} (_114744 : A -> Prop) (_114745 : A) (_114742 : A -> Prop) (_114743 : A) : (term3346 A _114743 _114742 _114744 _114745) = (term3353 A _114744 _114745 _114742 _114743).
Proof. exact (@lem8386178 (term3354 A _114743 _114742 _114744 _114745) (term3250 A _114742 _114743)). Qed.
Lemma lem8386181 (a : Prop) (b : Prop) : (term756 a b) = (term757 a b).
Proof. exact (EQ_MP (@lem20789 a b) (@lem20895 a b)). Qed.
Lemma lem8386182 {A : Type'} (_114743 : A) (_114742 : A -> Prop) (_114744 : A -> Prop) (_114745 : A) : (term3355 A _114743 _114742 _114744 _114745) = (term3356 A _114743 _114742 _114744 _114745).
Proof. exact (@lem8386181 (term3254 A _114743 _114745) (term3348 A _114742 _114744 _114745)). Qed.
Lemma lem8386184 (a : Prop) : (term47 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem8386185 {A : Type'} (_114743 : A) (_114745 : A) : (term3262 A _114743 _114745) = (_114743 = _114745).
Proof. exact (@lem8386184 (_114743 = _114745)). Qed.
Lemma lem8386186 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8386187 {A : Type'} (_114743 : A) (_114745 : A) : (term3263 A _114743 _114745) = (term3264 A _114743 _114745).
Proof. exact (MK_COMB (@lem8386186) (@lem8386185 A _114743 _114745)). Qed.
Lemma lem8386189 (a : Prop) (b : Prop) : (term756 a b) = (term757 a b).
Proof. exact (EQ_MP (@lem20789 a b) (@lem20895 a b)). Qed.
Lemma lem8386190 {A : Type'} (_114742 : A -> Prop) (_114744 : A -> Prop) (_114745 : A) : (term3357 A _114742 _114744 _114745) = (term3358 A _114742 _114744 _114745).
Proof. exact (@lem8386189 (term3249 A _114742 _114744) (@I (A -> Prop) _114744 _114745)). Qed.
Lemma lem8386192 (a : Prop) : (term47 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem8386193 {A : Type'} (_114742 : A -> Prop) (_114744 : A -> Prop) : (term3267 A _114742 _114744) = (_114742 = _114744).
Proof. exact (@lem8386192 (_114742 = _114744)). Qed.
Lemma lem8386194 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8386195 {A : Type'} (_114742 : A -> Prop) (_114744 : A -> Prop) : (term3268 A _114742 _114744) = (term3269 A _114742 _114744).
Proof. exact (MK_COMB (@lem8386194) (@lem8386193 A _114742 _114744)). Qed.
Lemma lem8386196 {A : Type'} (_114744 : A -> Prop) (_114745 : A) : (term3250 A _114744 _114745) = (term3250 A _114744 _114745).
Proof. exact (eq_refl (term3250 A _114744 _114745)). Qed.
Lemma lem8386197 {A : Type'} (_114742 : A -> Prop) (_114744 : A -> Prop) (_114745 : A) : (term3358 A _114742 _114744 _114745) = (term3359 A _114742 _114744 _114745).
Proof. exact (MK_COMB (@lem8386195 A _114742 _114744) (@lem8386196 A _114744 _114745)). Qed.
Lemma lem8386198 {A : Type'} (_114742 : A -> Prop) (_114744 : A -> Prop) (_114745 : A) : (term3357 A _114742 _114744 _114745) = (term3359 A _114742 _114744 _114745).
Proof. exact (TRANS (@lem8386190 A _114742 _114744 _114745) (@lem8386197 A _114742 _114744 _114745)). Qed.
Lemma lem8386199 {A : Type'} (_114743 : A) (_114742 : A -> Prop) (_114744 : A -> Prop) (_114745 : A) : (term3356 A _114743 _114742 _114744 _114745) = (term3360 A _114743 _114742 _114744 _114745).
Proof. exact (MK_COMB (@lem8386187 A _114743 _114745) (@lem8386198 A _114742 _114744 _114745)). Qed.
Lemma lem8386200 {A : Type'} (_114743 : A) (_114742 : A -> Prop) (_114744 : A -> Prop) (_114745 : A) : (term3355 A _114743 _114742 _114744 _114745) = (term3360 A _114743 _114742 _114744 _114745).
Proof. exact (TRANS (@lem8386182 A _114743 _114742 _114744 _114745) (@lem8386199 A _114743 _114742 _114744 _114745)). Qed.
Lemma lem8386201 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem8386202 {A : Type'} (_114743 : A) (_114742 : A -> Prop) (_114744 : A -> Prop) (_114745 : A) : (term3361 A _114743 _114742 _114744 _114745) = (term3362 A _114743 _114742 _114744 _114745).
Proof. exact (MK_COMB (@lem8386201) (@lem8386200 A _114743 _114742 _114744 _114745)). Qed.
Lemma lem8386203 {A : Type'} (_114742 : A -> Prop) (_114743 : A) : (term3250 A _114742 _114743) = (term3250 A _114742 _114743).
Proof. exact (eq_refl (term3250 A _114742 _114743)). Qed.
Lemma lem8386204 {A : Type'} (_114744 : A -> Prop) (_114745 : A) (_114742 : A -> Prop) (_114743 : A) : (term3353 A _114744 _114745 _114742 _114743) = (term3363 A _114744 _114745 _114742 _114743).
Proof. exact (MK_COMB (@lem8386202 A _114743 _114742 _114744 _114745) (@lem8386203 A _114742 _114743)). Qed.
Lemma lem8386205 {A : Type'} (_114744 : A -> Prop) (_114745 : A) (_114742 : A -> Prop) (_114743 : A) : (term3346 A _114743 _114742 _114744 _114745) = (term3363 A _114744 _114745 _114742 _114743).
Proof. exact (TRANS (@lem8386179 A _114744 _114745 _114742 _114743) (@lem8386204 A _114744 _114745 _114742 _114743)). Qed.
Lemma lem8386207 {A B P : Type'} (z : type518 A B P) (y : P) (lt2 : type1402 A) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (_114084 : type794 A P) (s : P -> A) (x : A) (h1 : term2270 A B P lt2 s z P2 G2 H2) (h2 : term3180 A B P f G2 g _114084 s y) (h3 : term2944 A B P y lt2 P2 G2 f H2 g _114084 s x) : term3364 A B P lt2 z f g _114084 s y.
Proof. exact (conj (@lem8385940 A B P lt2 z f g _114084 s y) (@lem8385984 A B P z y lt2 P2 G2 f H2 g _114084 s x h1 h2 h3)). Qed.
Lemma lem8386208 {A B P : Type'} (z : type518 A B P) (y : P) (lt2 : type1402 A) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (_114084 : type794 A P) (s : P -> A) (x : A) (h1 : term2270 A B P lt2 s z P2 G2 H2) (h2 : term1491 A P _114084) (h3 : term3180 A B P f G2 g _114084 s y) (h4 : term2944 A B P y lt2 P2 G2 f H2 g _114084 s x) : term3365 A B P lt2 z f g _114084 s y.
Proof. exact (conj (@lem8385931 A P s y _114084 h2) (@lem8386207 A B P z y lt2 P2 G2 f H2 g _114084 s x h1 h3 h4)). Qed.
Lemma lem8386210 {A : Type'} (_114744 : A -> Prop) (_114745 : A) (_114742 : A -> Prop) (_114743 : A) : term3363 A _114744 _114745 _114742 _114743.
Proof. exact (EQ_MP (@lem8386205 A _114744 _114745 _114742 _114743) (@lem8386176 A _114743 _114742 _114744 _114745)). Qed.
Lemma lem8386211 {A : Type'} (_114744 : A -> Prop) (_114745 : A) (_114742 : A -> Prop) (_114743 : A) : term3363 A _114744 _114745 _114742 _114743.
Proof. exact (@lem8386210 A _114744 _114745 _114742 _114743). Qed.
Lemma lem8386212 {A B P : Type'} (lt2 : type1402 A) (z : type518 A B P) (f : A -> B) (g : A -> B) (_114084 : type794 A P) (s : P -> A) (y : P) : term3366 A B P lt2 z f g _114084 s y.
Proof. exact (@lem8386211 A (term3227 A B P lt2 z f g _114084 s y) (@I (P -> A) s y) (term3227 A B P lt2 z f g _114084 s y) (term3224 A P _114084 s y)). Qed.
Lemma lem8386215 {A B P : Type'} (z : type518 A B P) (y : P) (lt2 : type1402 A) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (_114084 : type794 A P) (s : P -> A) (x : A) (h1 : term2270 A B P lt2 s z P2 G2 H2) (h2 : term1491 A P _114084) (h3 : term3180 A B P f G2 g _114084 s y) (h4 : term2944 A B P y lt2 P2 G2 f H2 g _114084 s x) : term3247 A B P lt2 z f g _114084 s y.
Proof. exact (@lem8386212 A B P lt2 z f g _114084 s y (@lem8386208 A B P z y lt2 P2 G2 f H2 g _114084 s x h1 h2 h3 h4)). Qed.
Lemma lem8386216 {A B P : Type'} (z : type518 A B P) (y : P) (lt2 : type1402 A) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (_114084 : type794 A P) (s : P -> A) (x : A) (h1 : term2270 A B P lt2 s z P2 G2 H2) (h2 : term1491 A P _114084) (h3 : term3180 A B P f G2 g _114084 s y) (h4 : term2944 A B P y lt2 P2 G2 f H2 g _114084 s x) : term3367 A B P lt2 z f g _114084 s y.
Proof. exact (fun h0 : term3245 A B P lt2 z f g _114084 s y => @lem8386215 A B P z y lt2 P2 G2 f H2 g _114084 s x h1 h2 h3 h4). Qed.
Lemma lem8386218 (p : Prop) : (term753 p) = (~ p).
Proof. exact (EQ_MP (@lem21028 p) (@lem21107 p)). Qed.
Lemma lem8386219 {A B P : Type'} (lt2 : type1402 A) (z : type518 A B P) (f : A -> B) (g : A -> B) (_114084 : type794 A P) (s : P -> A) (y : P) : (term3367 A B P lt2 z f g _114084 s y) = (term3247 A B P lt2 z f g _114084 s y).
Proof. exact (@lem8386218 (term3245 A B P lt2 z f g _114084 s y)). Qed.
Lemma lem8386220 {A B P : Type'} (z : type518 A B P) (y : P) (lt2 : type1402 A) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (_114084 : type794 A P) (s : P -> A) (x : A) (h1 : term2270 A B P lt2 s z P2 G2 H2) (h2 : term1491 A P _114084) (h3 : term3180 A B P f G2 g _114084 s y) (h4 : term2944 A B P y lt2 P2 G2 f H2 g _114084 s x) : term3247 A B P lt2 z f g _114084 s y.
Proof. exact (EQ_MP (@lem8386219 A B P lt2 z f g _114084 s y) (@lem8386216 A B P z y lt2 P2 G2 f H2 g _114084 s x h1 h2 h3 h4)). Qed.
Lemma lem8386226 (q : Prop) (p : Prop) : (p \/ q) = (q \/ p).
Proof. exact (proj1 (@lem827 (@el Prop) p q)). Qed.
Lemma lem8386227 {A B P : Type'} (G2 : type557 A B P) (lt2 : type1402 A) (z : type518 A B P) (_114142 : A -> B) (_114143 : A -> B) (s : P -> A) (_114144 : P) : (term3183 A B P lt2 z s _114142 G2 _114143 _114144) = (term3368 A B P G2 lt2 z _114142 _114143 s _114144).
Proof. exact (@lem8386226 ((term2845 A B P G2 _114142 _114144) = (term2845 A B P G2 _114143 _114144)) (term2986 A B P lt2 z _114142 _114143 s _114144)). Qed.
Lemma lem8386235 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8386236 {A B P : Type'} (G2 : type557 A B P) (lt2 : type1402 A) (z : type518 A B P) (_114142 : A -> B) (_114143 : A -> B) (s : P -> A) (_114144 : P) : (term3369 A B P lt2 z s _114142 G2 _114143 _114144) = (term3370 A B P G2 lt2 z _114142 _114143 s _114144).
Proof. exact (MK_COMB (@lem8386235) (@lem8386227 A B P G2 lt2 z _114142 _114143 s _114144)). Qed.
Lemma lem8386244 {A B P : Type'} (G2 : type557 A B P) (lt2 : type1402 A) (z : type518 A B P) (_114142 : A -> B) (_114143 : A -> B) (s : P -> A) (_114144 : P) : (term3368 A B P G2 lt2 z _114142 _114143 s _114144) = (term3368 A B P G2 lt2 z _114142 _114143 s _114144).
Proof. exact (eq_refl (term3368 A B P G2 lt2 z _114142 _114143 s _114144)). Qed.
Lemma lem8386245 {A B P : Type'} (G2 : type557 A B P) (lt2 : type1402 A) (z : type518 A B P) (_114142 : A -> B) (_114143 : A -> B) (s : P -> A) (_114144 : P) : ((term3183 A B P lt2 z s _114142 G2 _114143 _114144) = (term3368 A B P G2 lt2 z _114142 _114143 s _114144)) = ((term3368 A B P G2 lt2 z _114142 _114143 s _114144) = (term3368 A B P G2 lt2 z _114142 _114143 s _114144)).
Proof. exact (MK_COMB (@lem8386236 A B P G2 lt2 z _114142 _114143 s _114144) (@lem8386244 A B P G2 lt2 z _114142 _114143 s _114144)). Qed.
Lemma lem8386247 {A : Type'} (x : A) : (x = x) = True.
Proof. exact (EQ_MP (@lem20665 A x) (@lem20664 A x)). Qed.
Lemma lem8386248 (x : Prop) : (x = x) = True.
Proof. exact (@lem8386247 Prop x). Qed.
Lemma lem8386249 {A B P : Type'} (G2 : type557 A B P) (lt2 : type1402 A) (z : type518 A B P) (_114142 : A -> B) (_114143 : A -> B) (s : P -> A) (_114144 : P) : ((term3368 A B P G2 lt2 z _114142 _114143 s _114144) = (term3368 A B P G2 lt2 z _114142 _114143 s _114144)) = True.
Proof. exact (@lem8386248 (term3368 A B P G2 lt2 z _114142 _114143 s _114144)). Qed.
Lemma lem8386250 {A B P : Type'} (G2 : type557 A B P) (lt2 : type1402 A) (z : type518 A B P) (_114142 : A -> B) (_114143 : A -> B) (s : P -> A) (_114144 : P) : ((term3183 A B P lt2 z s _114142 G2 _114143 _114144) = (term3368 A B P G2 lt2 z _114142 _114143 s _114144)) = True.
Proof. exact (TRANS (@lem8386245 A B P G2 lt2 z _114142 _114143 s _114144) (@lem8386249 A B P G2 lt2 z _114142 _114143 s _114144)). Qed.
Lemma lem8386251 {A B P : Type'} (G2 : type557 A B P) (lt2 : type1402 A) (z : type518 A B P) (_114142 : A -> B) (_114143 : A -> B) (s : P -> A) (_114144 : P) : True = ((term3183 A B P lt2 z s _114142 G2 _114143 _114144) = (term3368 A B P G2 lt2 z _114142 _114143 s _114144)).
Proof. exact (SYM (@lem8386250 A B P G2 lt2 z _114142 _114143 s _114144)). Qed.
Lemma lem8386252 {A B P : Type'} (G2 : type557 A B P) (lt2 : type1402 A) (z : type518 A B P) (_114142 : A -> B) (_114143 : A -> B) (s : P -> A) (_114144 : P) : (term3183 A B P lt2 z s _114142 G2 _114143 _114144) = (term3368 A B P G2 lt2 z _114142 _114143 s _114144).
Proof. exact (EQ_MP (@lem8386251 A B P G2 lt2 z _114142 _114143 s _114144) (@lem0)). Qed.
Lemma lem8386253 {A B P : Type'} (_114142 : A -> B) (_114143 : A -> B) (_114144 : P) (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (h1 : term2270 A B P lt2 s z P2 G2 H2) : term3368 A B P G2 lt2 z _114142 _114143 s _114144.
Proof. exact (EQ_MP (@lem8386252 A B P G2 lt2 z _114142 _114143 s _114144) (@lem8383150 A B P _114142 _114143 _114144 lt2 s z P2 G2 H2 h1)). Qed.
Lemma lem8386255 (b : Prop) (a : Prop) : (a \/ b) = (term754 b a).
Proof. exact (EQ_MP (@lem20682 b a) (@lem20764 b a)). Qed.
Lemma lem8386258 {A B P : Type'} (lt2 : type1402 A) (z : type518 A B P) (s : P -> A) (_114142 : A -> B) (G2 : type557 A B P) (_114143 : A -> B) (_114144 : P) : (term3368 A B P G2 lt2 z _114142 _114143 s _114144) = (term3371 A B P lt2 z s _114142 G2 _114143 _114144).
Proof. exact (@lem8386255 (term2986 A B P lt2 z _114142 _114143 s _114144) ((term2845 A B P G2 _114142 _114144) = (term2845 A B P G2 _114143 _114144))). Qed.
Lemma lem8386261 {A B P : Type'} (_114142 : A -> B) (_114143 : A -> B) (_114144 : P) (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (h1 : term2270 A B P lt2 s z P2 G2 H2) : term3371 A B P lt2 z s _114142 G2 _114143 _114144.
Proof. exact (EQ_MP (@lem8386258 A B P lt2 z s _114142 G2 _114143 _114144) (@lem8386253 A B P _114142 _114143 _114144 lt2 s z P2 G2 H2 h1)). Qed.
Lemma lem8386262 {A B P : Type'} (_114142 : A -> B) (_114143 : A -> B) (_114144 : P) (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (h1 : term2270 A B P lt2 s z P2 G2 H2) : term3371 A B P lt2 z s _114142 G2 _114143 _114144.
Proof. exact (@lem8386261 A B P _114142 _114143 _114144 lt2 s z P2 G2 H2 h1). Qed.
Lemma lem8386263 {A B P : Type'} (f : A -> B) (g : A -> B) (_114084 : type794 A P) (y : P) (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (h1 : term2270 A B P lt2 s z P2 G2 H2) : term3372 A B P lt2 z f G2 g _114084 s y.
Proof. exact (@lem8386262 A B P f g (term3244 A P _114084 s y) lt2 s z P2 G2 H2 h1). Qed.
Lemma lem8386266 {A B P : Type'} (z : type518 A B P) (y : P) (lt2 : type1402 A) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (_114084 : type794 A P) (s : P -> A) (x : A) (h1 : term2270 A B P lt2 s z P2 G2 H2) (h2 : term1491 A P _114084) (h3 : term3180 A B P f G2 g _114084 s y) (h4 : term2944 A B P y lt2 P2 G2 f H2 g _114084 s x) : (term3339 A B P G2 f _114084 s y) = (term3339 A B P G2 g _114084 s y).
Proof. exact (@lem8386263 A B P f g _114084 y lt2 s z P2 G2 H2 h1 (@lem8386220 A B P z y lt2 P2 G2 f H2 g _114084 s x h1 h2 h3 h4)). Qed.
Lemma lem8386267 {A B P : Type'} (z : type518 A B P) (y : P) (lt2 : type1402 A) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (_114084 : type794 A P) (s : P -> A) (x : A) (h1 : term2270 A B P lt2 s z P2 G2 H2) (h2 : term1491 A P _114084) (h3 : term2944 A B P y lt2 P2 G2 f H2 g _114084 s x) : term3373 A B P f G2 g _114084 s y.
Proof. exact (fun h0 : term3180 A B P f G2 g _114084 s y => @lem8386266 A B P z y lt2 P2 G2 f H2 g _114084 s x h1 h2 h0 h3). Qed.
Lemma lem8386269 (p : Prop) : (term748 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8386270 {A B P : Type'} (f : A -> B) (G2 : type557 A B P) (g : A -> B) (_114084 : type794 A P) (s : P -> A) (y : P) : (term3373 A B P f G2 g _114084 s y) = ((term3339 A B P G2 f _114084 s y) = (term3339 A B P G2 g _114084 s y)).
Proof. exact (@lem8386269 ((term3339 A B P G2 f _114084 s y) = (term3339 A B P G2 g _114084 s y))). Qed.
Lemma lem8386271 {A B P : Type'} (z : type518 A B P) (y : P) (lt2 : type1402 A) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (_114084 : type794 A P) (s : P -> A) (x : A) (h1 : term2270 A B P lt2 s z P2 G2 H2) (h2 : term1491 A P _114084) (h3 : term2944 A B P y lt2 P2 G2 f H2 g _114084 s x) : (term3339 A B P G2 f _114084 s y) = (term3339 A B P G2 g _114084 s y).
Proof. exact (EQ_MP (@lem8386270 A B P f G2 g _114084 s y) (@lem8386267 A B P z y lt2 P2 G2 f H2 g _114084 s x h1 h2 h3)). Qed.
Lemma lem8386274 (p : Prop) : (~ p) = (p -> False).
Proof. exact (EQ_MP (@lem21021 p) (@lem0)). Qed.
Lemma lem8386276 {A B P : Type'} (f : A -> B) (G2 : type557 A B P) (g : A -> B) (_114084 : type794 A P) (s : P -> A) (y : P) : (term3180 A B P f G2 g _114084 s y) = (term3374 A B P f G2 g _114084 s y).
Proof. exact (@lem8386274 ((term3339 A B P G2 f _114084 s y) = (term3339 A B P G2 g _114084 s y))). Qed.
Lemma lem8386279 {A B P : Type'} (y : P) (lt2 : type1402 A) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (_114084 : type794 A P) (s : P -> A) (x : A) (h1 : term2926 A B P f G2 g _114084 s x) (h2 : term2944 A B P y lt2 P2 G2 f H2 g _114084 s x) : term3374 A B P f G2 g _114084 s y.
Proof. exact (EQ_MP (@lem8386276 A B P f G2 g _114084 s y) (@lem8382996 A B P y lt2 P2 G2 f H2 g _114084 s x h1 h2)). Qed.
Lemma lem8386282 {A B P : Type'} (z : type518 A B P) (y : P) (lt2 : type1402 A) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (_114084 : type794 A P) (s : P -> A) (x : A) (h1 : term2270 A B P lt2 s z P2 G2 H2) (h2 : term1491 A P _114084) (h3 : term2926 A B P f G2 g _114084 s x) (h4 : term2944 A B P y lt2 P2 G2 f H2 g _114084 s x) : False.
Proof. exact (@lem8386279 A B P y lt2 P2 G2 f H2 g _114084 s x h3 h4 (@lem8386271 A B P z y lt2 P2 G2 f H2 g _114084 s x h1 h2 h4)). Qed.
Lemma lem8386283 {A B P : Type'} (z : type518 A B P) (y : P) (lt2 : type1402 A) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (_114084 : type794 A P) (s : P -> A) (x : A) (h1 : term2270 A B P lt2 s z P2 G2 H2) (h2 : term1491 A P _114084) (h3 : term2926 A B P f G2 g _114084 s x) (h4 : term2944 A B P y lt2 P2 G2 f H2 g _114084 s x) : term750.
Proof. exact (fun h0 : ~ False => @lem8386282 A B P z y lt2 P2 G2 f H2 g _114084 s x h1 h2 h3 h4). Qed.
Lemma lem8386285 (p : Prop) : (term748 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8386286 : term750 = False.
Proof. exact (@lem8386285 False). Qed.
Lemma lem8386307 {A : Type'} : (@I (A -> Prop)) = (@I (A -> Prop)).
Proof. exact (eq_refl (@I (A -> Prop))). Qed.
Lemma lem8386308 {A : Type'} (_114814 : A -> Prop) (_114816 : A -> Prop) (h1 : _114814 = _114816) : _114814 = _114816.
Proof. exact (h1). Qed.
Lemma lem8386309 {A : Type'} (_114815 : A) (_114817 : A) (h1 : _114815 = _114817) : _114815 = _114817.
Proof. exact (h1). Qed.
Lemma lem8386310 {A : Type'} (_114814 : A -> Prop) (_114816 : A -> Prop) (h1 : _114814 = _114816) : (@I (A -> Prop) _114814) = (@I (A -> Prop) _114816).
Proof. exact (MK_COMB (@lem8386307 A) (@lem8386308 A _114814 _114816 h1)). Qed.
Lemma lem8386311 {A : Type'} (_114815 : A) (_114817 : A) (_114814 : A -> Prop) (_114816 : A -> Prop) (h1 : _114815 = _114817) (h2 : _114814 = _114816) : (@I (A -> Prop) _114814 _114815) = (@I (A -> Prop) _114816 _114817).
Proof. exact (MK_COMB (@lem8386310 A _114814 _114816 h2) (@lem8386309 A _114815 _114817 h1)). Qed.
Lemma lem8386313 (b : Prop) (a : Prop) : term3205 b a.
Proof. exact (EQ_MP (@lem21501 b a) (@lem21598 b a)). Qed.
Lemma lem8386314 {A : Type'} (_114816 : A -> Prop) (_114817 : A) (_114814 : A -> Prop) (_114815 : A) : term3206 A _114816 _114817 _114814 _114815.
Proof. exact (@lem8386313 (@I (A -> Prop) _114816 _114817) (@I (A -> Prop) _114814 _114815)). Qed.
Lemma lem8386315 {A : Type'} (_114815 : A) (_114817 : A) (_114814 : A -> Prop) (_114816 : A -> Prop) (h1 : _114815 = _114817) (h2 : _114814 = _114816) : term3207 A _114816 _114817 _114814 _114815.
Proof. exact (@lem8386314 A _114816 _114817 _114814 _114815 (@lem8386311 A _114815 _114817 _114814 _114816 h1 h2)). Qed.
Lemma lem8386316 {A : Type'} (_114816 : A -> Prop) (_114814 : A -> Prop) (_114815 : A) (_114817 : A) (h1 : _114815 = _114817) : term3208 A _114816 _114817 _114814 _114815.
Proof. exact (fun h0 : _114814 = _114816 => @lem8386315 A _114815 _114817 _114814 _114816 h1 h0). Qed.
Lemma lem8386318 (a : Prop) (b : Prop) : (a -> b) = (term3209 a b).
Proof. exact (EQ_MP (@lem21394 a b) (@lem21490 a b)). Qed.
Lemma lem8386319 {A : Type'} (_114816 : A -> Prop) (_114817 : A) (_114814 : A -> Prop) (_114815 : A) : (term3208 A _114816 _114817 _114814 _114815) = (term3210 A _114816 _114817 _114814 _114815).
Proof. exact (@lem8386318 (_114814 = _114816) (term3207 A _114816 _114817 _114814 _114815)). Qed.
Lemma lem8386320 {A : Type'} (_114816 : A -> Prop) (_114814 : A -> Prop) (_114815 : A) (_114817 : A) (h1 : _114815 = _114817) : term3210 A _114816 _114817 _114814 _114815.
Proof. exact (EQ_MP (@lem8386319 A _114816 _114817 _114814 _114815) (@lem8386316 A _114816 _114814 _114815 _114817 h1)). Qed.
Lemma lem8386321 {A : Type'} (_114816 : A -> Prop) (_114817 : A) (_114814 : A -> Prop) (_114815 : A) : term3211 A _114816 _114817 _114814 _114815.
Proof. exact (fun h0 : _114815 = _114817 => @lem8386320 A _114816 _114814 _114815 _114817 h0). Qed.
Lemma lem8386323 (a : Prop) (b : Prop) : (a -> b) = (term3209 a b).
Proof. exact (EQ_MP (@lem21394 a b) (@lem21490 a b)). Qed.
Lemma lem8386324 {A : Type'} (_114816 : A -> Prop) (_114817 : A) (_114814 : A -> Prop) (_114815 : A) : (term3211 A _114816 _114817 _114814 _114815) = (term3212 A _114816 _114817 _114814 _114815).
Proof. exact (@lem8386323 (_114815 = _114817) (term3210 A _114816 _114817 _114814 _114815)). Qed.
Lemma lem8386325 {A : Type'} (_114816 : A -> Prop) (_114817 : A) (_114814 : A -> Prop) (_114815 : A) : term3212 A _114816 _114817 _114814 _114815.
Proof. exact (EQ_MP (@lem8386324 A _114816 _114817 _114814 _114815) (@lem8386321 A _114816 _114817 _114814 _114815)). Qed.
Lemma lem8386611 {A : Type'} (x : A) : x = x.
Proof. exact (@lem21386 A x). Qed.
Lemma lem8386612 {A : Type'} (x : A) : x = x.
Proof. exact (@lem8386611 A x). Qed.
Lemma lem8386613 {A P : Type'} (s : P -> A) (y : P) : (@I (P -> A) s y) = (@I (P -> A) s y).
Proof. exact (@lem8386612 A (@I (P -> A) s y)). Qed.
Lemma lem8386614 {A P : Type'} (s : P -> A) (y : P) : term3213 A P s y.
Proof. exact (fun h0 : term3214 A P s y => @lem8386613 A P s y). Qed.
Lemma lem8386616 (p : Prop) : (term748 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8386617 {A P : Type'} (s : P -> A) (y : P) : (term3213 A P s y) = ((@I (P -> A) s y) = (@I (P -> A) s y)).
Proof. exact (@lem8386616 ((@I (P -> A) s y) = (@I (P -> A) s y))). Qed.
Lemma lem8386618 {A P : Type'} (s : P -> A) (y : P) : (@I (P -> A) s y) = (@I (P -> A) s y).
Proof. exact (EQ_MP (@lem8386617 A P s y) (@lem8386614 A P s y)). Qed.
Lemma lem8386624 (q : Prop) (p : Prop) : (p \/ q) = (q \/ p).
Proof. exact (proj1 (@lem827 (@el Prop) p q)). Qed.
Lemma lem8386625 {A P : Type'} (_114084 : type794 A P) (_114157 : P -> A) (_114159 : P) (_114158 : A) : (term3065 A P _114159 _114084 _114157 _114158) = (term3215 A P _114084 _114157 _114159 _114158).
Proof. exact (@lem8386624 ((term2811 A P _114084 _114157 _114158) = _114158) (term2813 A P _114157 _114159 _114158)). Qed.
Lemma lem8386635 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8386636 {A P : Type'} (_114084 : type794 A P) (_114157 : P -> A) (_114159 : P) (_114158 : A) : (term3216 A P _114159 _114084 _114157 _114158) = (term3217 A P _114084 _114157 _114159 _114158).
Proof. exact (MK_COMB (@lem8386635) (@lem8386625 A P _114084 _114157 _114159 _114158)). Qed.
Lemma lem8386646 {A P : Type'} (_114084 : type794 A P) (_114157 : P -> A) (_114159 : P) (_114158 : A) : (term3215 A P _114084 _114157 _114159 _114158) = (term3215 A P _114084 _114157 _114159 _114158).
Proof. exact (eq_refl (term3215 A P _114084 _114157 _114159 _114158)). Qed.
Lemma lem8386647 {A P : Type'} (_114084 : type794 A P) (_114157 : P -> A) (_114159 : P) (_114158 : A) : ((term3065 A P _114159 _114084 _114157 _114158) = (term3215 A P _114084 _114157 _114159 _114158)) = ((term3215 A P _114084 _114157 _114159 _114158) = (term3215 A P _114084 _114157 _114159 _114158)).
Proof. exact (MK_COMB (@lem8386636 A P _114084 _114157 _114159 _114158) (@lem8386646 A P _114084 _114157 _114159 _114158)). Qed.
Lemma lem8386649 {A : Type'} (x : A) : (x = x) = True.
Proof. exact (EQ_MP (@lem20665 A x) (@lem20664 A x)). Qed.
Lemma lem8386650 (x : Prop) : (x = x) = True.
Proof. exact (@lem8386649 Prop x). Qed.
Lemma lem8386651 {A P : Type'} (_114084 : type794 A P) (_114157 : P -> A) (_114159 : P) (_114158 : A) : ((term3215 A P _114084 _114157 _114159 _114158) = (term3215 A P _114084 _114157 _114159 _114158)) = True.
Proof. exact (@lem8386650 (term3215 A P _114084 _114157 _114159 _114158)). Qed.
Lemma lem8386652 {A P : Type'} (_114084 : type794 A P) (_114157 : P -> A) (_114159 : P) (_114158 : A) : ((term3065 A P _114159 _114084 _114157 _114158) = (term3215 A P _114084 _114157 _114159 _114158)) = True.
Proof. exact (TRANS (@lem8386647 A P _114084 _114157 _114159 _114158) (@lem8386651 A P _114084 _114157 _114159 _114158)). Qed.
Lemma lem8386653 {A P : Type'} (_114084 : type794 A P) (_114157 : P -> A) (_114159 : P) (_114158 : A) : True = ((term3065 A P _114159 _114084 _114157 _114158) = (term3215 A P _114084 _114157 _114159 _114158)).
Proof. exact (SYM (@lem8386652 A P _114084 _114157 _114159 _114158)). Qed.
Lemma lem8386654 {A P : Type'} (_114084 : type794 A P) (_114157 : P -> A) (_114159 : P) (_114158 : A) : (term3065 A P _114159 _114084 _114157 _114158) = (term3215 A P _114084 _114157 _114159 _114158).
Proof. exact (EQ_MP (@lem8386653 A P _114084 _114157 _114159 _114158) (@lem0)). Qed.
Lemma lem8386655 {A P : Type'} (_114157 : P -> A) (_114159 : P) (_114158 : A) (_114084 : type794 A P) (h1 : term1491 A P _114084) : term3215 A P _114084 _114157 _114159 _114158.
Proof. exact (EQ_MP (@lem8386654 A P _114084 _114157 _114159 _114158) (@lem8383249 A P _114159 _114157 _114158 _114084 h1)). Qed.
Lemma lem8386657 (b : Prop) (a : Prop) : (a \/ b) = (term754 b a).
Proof. exact (EQ_MP (@lem20682 b a) (@lem20764 b a)). Qed.
Lemma lem8386658 {A P : Type'} (_114159 : P) (_114084 : type794 A P) (_114157 : P -> A) (_114158 : A) : (term3215 A P _114084 _114157 _114159 _114158) = (term3218 A P _114159 _114084 _114157 _114158).
Proof. exact (@lem8386657 (term2813 A P _114157 _114159 _114158) ((term2811 A P _114084 _114157 _114158) = _114158)). Qed.
Lemma lem8386660 (a : Prop) : (term47 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem8386661 {A P : Type'} (_114157 : P -> A) (_114159 : P) (_114158 : A) : (term3219 A P _114157 _114159 _114158) = ((@I (P -> A) _114157 _114159) = _114158).
Proof. exact (@lem8386660 ((@I (P -> A) _114157 _114159) = _114158)). Qed.
Lemma lem8386662 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem8386663 {A P : Type'} (_114157 : P -> A) (_114159 : P) (_114158 : A) : (term3220 A P _114157 _114159 _114158) = (term3221 A P _114157 _114159 _114158).
Proof. exact (MK_COMB (@lem8386662) (@lem8386661 A P _114157 _114159 _114158)). Qed.
Lemma lem8386664 {A P : Type'} (_114084 : type794 A P) (_114157 : P -> A) (_114158 : A) : ((term2811 A P _114084 _114157 _114158) = _114158) = ((term2811 A P _114084 _114157 _114158) = _114158).
Proof. exact (eq_refl ((term2811 A P _114084 _114157 _114158) = _114158)). Qed.
Lemma lem8386665 {A P : Type'} (_114159 : P) (_114084 : type794 A P) (_114157 : P -> A) (_114158 : A) : (term3218 A P _114159 _114084 _114157 _114158) = (term3222 A P _114159 _114084 _114157 _114158).
Proof. exact (MK_COMB (@lem8386663 A P _114157 _114159 _114158) (@lem8386664 A P _114084 _114157 _114158)). Qed.
Lemma lem8386666 {A P : Type'} (_114159 : P) (_114084 : type794 A P) (_114157 : P -> A) (_114158 : A) : (term3215 A P _114084 _114157 _114159 _114158) = (term3222 A P _114159 _114084 _114157 _114158).
Proof. exact (TRANS (@lem8386658 A P _114159 _114084 _114157 _114158) (@lem8386665 A P _114159 _114084 _114157 _114158)). Qed.
Lemma lem8386669 {A P : Type'} (_114159 : P) (_114157 : P -> A) (_114158 : A) (_114084 : type794 A P) (h1 : term1491 A P _114084) : term3222 A P _114159 _114084 _114157 _114158.
Proof. exact (EQ_MP (@lem8386666 A P _114159 _114084 _114157 _114158) (@lem8386655 A P _114157 _114159 _114158 _114084 h1)). Qed.
Lemma lem8386670 {A P : Type'} (_114159 : P) (_114157 : P -> A) (_114158 : A) (_114084 : type794 A P) (h1 : term1491 A P _114084) : term3222 A P _114159 _114084 _114157 _114158.
Proof. exact (@lem8386669 A P _114159 _114157 _114158 _114084 h1). Qed.
Lemma lem8386671 {A P : Type'} (s : P -> A) (y : P) (_114084 : type794 A P) (h1 : term1491 A P _114084) : term3223 A P _114084 s y.
Proof. exact (@lem8386670 A P y s (@I (P -> A) s y) _114084 h1). Qed.
Lemma lem8386674 {A P : Type'} (s : P -> A) (y : P) (_114084 : type794 A P) (h1 : term1491 A P _114084) : (term3224 A P _114084 s y) = (@I (P -> A) s y).
Proof. exact (@lem8386671 A P s y _114084 h1 (@lem8386618 A P s y)). Qed.
Lemma lem8386675 {A P : Type'} (s : P -> A) (y : P) (_114084 : type794 A P) (h1 : term1491 A P _114084) : (term3224 A P _114084 s y) = (@I (P -> A) s y).
Proof. exact (@lem8386674 A P s y _114084 h1). Qed.
Lemma lem8386676 {A P : Type'} (s : P -> A) (y : P) (_114084 : type794 A P) (h1 : term1491 A P _114084) : term3225 A P _114084 s y.
Proof. exact (fun h0 : term3226 A P _114084 s y => @lem8386675 A P s y _114084 h1). Qed.
Lemma lem8386678 (p : Prop) : (term748 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8386679 {A P : Type'} (_114084 : type794 A P) (s : P -> A) (y : P) : (term3225 A P _114084 s y) = ((term3224 A P _114084 s y) = (@I (P -> A) s y)).
Proof. exact (@lem8386678 ((term3224 A P _114084 s y) = (@I (P -> A) s y))). Qed.
Lemma lem8386680 {A P : Type'} (s : P -> A) (y : P) (_114084 : type794 A P) (h1 : term1491 A P _114084) : (term3224 A P _114084 s y) = (@I (P -> A) s y).
Proof. exact (EQ_MP (@lem8386679 A P _114084 s y) (@lem8386676 A P s y _114084 h1)). Qed.
Lemma lem8386682 {A : Type'} (x : A -> Prop) : x = x.
Proof. exact (@lem21386 (A -> Prop) x). Qed.
Lemma lem8386683 {A : Type'} (x : A -> Prop) : x = x.
Proof. exact (@lem8386682 A x). Qed.
Lemma lem8386684 {A B P : Type'} (lt2 : type1402 A) (z : type518 A B P) (f : A -> B) (g : A -> B) (_114084 : type794 A P) (s : P -> A) (y : P) : (term3227 A B P lt2 z f g _114084 s y) = (term3227 A B P lt2 z f g _114084 s y).
Proof. exact (@lem8386683 A (term3227 A B P lt2 z f g _114084 s y)). Qed.
Lemma lem8386685 {A B P : Type'} (lt2 : type1402 A) (z : type518 A B P) (f : A -> B) (g : A -> B) (_114084 : type794 A P) (s : P -> A) (y : P) : term3228 A B P lt2 z f g _114084 s y.
Proof. exact (fun h0 : term3229 A B P lt2 z f g _114084 s y => @lem8386684 A B P lt2 z f g _114084 s y). Qed.
Lemma lem8386687 (p : Prop) : (term748 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8386688 {A B P : Type'} (lt2 : type1402 A) (z : type518 A B P) (f : A -> B) (g : A -> B) (_114084 : type794 A P) (s : P -> A) (y : P) : (term3228 A B P lt2 z f g _114084 s y) = ((term3227 A B P lt2 z f g _114084 s y) = (term3227 A B P lt2 z f g _114084 s y)).
Proof. exact (@lem8386687 ((term3227 A B P lt2 z f g _114084 s y) = (term3227 A B P lt2 z f g _114084 s y))). Qed.
Lemma lem8386689 {A B P : Type'} (lt2 : type1402 A) (z : type518 A B P) (f : A -> B) (g : A -> B) (_114084 : type794 A P) (s : P -> A) (y : P) : (term3227 A B P lt2 z f g _114084 s y) = (term3227 A B P lt2 z f g _114084 s y).
Proof. exact (EQ_MP (@lem8386688 A B P lt2 z f g _114084 s y) (@lem8386685 A B P lt2 z f g _114084 s y)). Qed.
Lemma lem8386692 {A B P : Type'} (f : A -> B) (H2 : type558 A B P) (g : A -> B) (_114084 : type794 A P) (s : P -> A) (y : P) (h1 : term3188 A B P f H2 g _114084 s y) : term3188 A B P f H2 g _114084 s y.
Proof. exact (h1). Qed.
Lemma lem8386693 {A B P : Type'} (f : A -> B) (H2 : type558 A B P) (g : A -> B) (_114084 : type794 A P) (s : P -> A) (y : P) (h1 : term3188 A B P f H2 g _114084 s y) : term3375 A B P f H2 g _114084 s y.
Proof. exact (fun h0 : (term3376 A B P H2 f _114084 s y) = (term3376 A B P H2 g _114084 s y) => @lem8386692 A B P f H2 g _114084 s y h1). Qed.
Lemma lem8386695 (p : Prop) : (term753 p) = (~ p).
Proof. exact (EQ_MP (@lem21028 p) (@lem21107 p)). Qed.
Lemma lem8386696 {A B P : Type'} (f : A -> B) (H2 : type558 A B P) (g : A -> B) (_114084 : type794 A P) (s : P -> A) (y : P) : (term3375 A B P f H2 g _114084 s y) = (term3188 A B P f H2 g _114084 s y).
Proof. exact (@lem8386695 ((term3376 A B P H2 f _114084 s y) = (term3376 A B P H2 g _114084 s y))). Qed.
Lemma lem8386697 {A B P : Type'} (f : A -> B) (H2 : type558 A B P) (g : A -> B) (_114084 : type794 A P) (s : P -> A) (y : P) (h1 : term3188 A B P f H2 g _114084 s y) : term3188 A B P f H2 g _114084 s y.
Proof. exact (EQ_MP (@lem8386696 A B P f H2 g _114084 s y) (@lem8386693 A B P f H2 g _114084 s y h1)). Qed.
Lemma lem8386699 (b : Prop) (a : Prop) : (a \/ b) = (term754 b a).
Proof. exact (EQ_MP (@lem20682 b a) (@lem20764 b a)). Qed.
Lemma lem8386702 {A B P : Type'} (H2 : type558 A B P) (z : type518 A B P) (_114166 : A -> B) (_114167 : A -> B) (_114168 : P) : (term3192 A B P z _114166 H2 _114167 _114168) = (term3377 A B P H2 z _114166 _114167 _114168).
Proof. exact (@lem8386699 ((term2949 A B P H2 _114166 _114168) = (term2949 A B P H2 _114167 _114168)) (term2979 A B P z _114166 _114167 _114168)). Qed.
Lemma lem8386705 {A B P : Type'} (_114166 : A -> B) (_114167 : A -> B) (_114168 : P) (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (h1 : term2270 A B P lt2 s z P2 G2 H2) : term3377 A B P H2 z _114166 _114167 _114168.
Proof. exact (EQ_MP (@lem8386702 A B P H2 z _114166 _114167 _114168) (@lem8383499 A B P _114166 _114167 _114168 lt2 s z P2 G2 H2 h1)). Qed.
Lemma lem8386706 {A B P : Type'} (_114166 : A -> B) (_114167 : A -> B) (_114168 : P) (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (h1 : term2270 A B P lt2 s z P2 G2 H2) : term3377 A B P H2 z _114166 _114167 _114168.
Proof. exact (@lem8386705 A B P _114166 _114167 _114168 lt2 s z P2 G2 H2 h1). Qed.
Lemma lem8386707 {A B P : Type'} (f : A -> B) (g : A -> B) (_114084 : type794 A P) (y : P) (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (h1 : term2270 A B P lt2 s z P2 G2 H2) : term3378 A B P H2 z f g _114084 s y.
Proof. exact (@lem8386706 A B P f g (term3244 A P _114084 s y) lt2 s z P2 G2 H2 h1). Qed.
Lemma lem8386710 {A B P : Type'} (lt2 : type1402 A) (z : type518 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (_114084 : type794 A P) (s : P -> A) (y : P) (h1 : term2270 A B P lt2 s z P2 G2 H2) (h2 : term3188 A B P f H2 g _114084 s y) : term3295 A B P z f g _114084 s y.
Proof. exact (@lem8386707 A B P f g _114084 y lt2 s z P2 G2 H2 h1 (@lem8386697 A B P f H2 g _114084 s y h2)). Qed.
Lemma lem8386711 {A B P : Type'} (lt2 : type1402 A) (z : type518 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (_114084 : type794 A P) (s : P -> A) (y : P) (h1 : term2270 A B P lt2 s z P2 G2 H2) (h2 : term3188 A B P f H2 g _114084 s y) : term3342 A B P z f g _114084 s y.
Proof. exact (fun h0 : (term3292 A B P z f g _114084 s y) = (term3293 A B P z f g _114084 s y) => @lem8386710 A B P lt2 z P2 G2 f H2 g _114084 s y h1 h2). Qed.
Lemma lem8386713 (p : Prop) : (term753 p) = (~ p).
Proof. exact (EQ_MP (@lem21028 p) (@lem21107 p)). Qed.
Lemma lem8386714 {A B P : Type'} (z : type518 A B P) (f : A -> B) (g : A -> B) (_114084 : type794 A P) (s : P -> A) (y : P) : (term3342 A B P z f g _114084 s y) = (term3295 A B P z f g _114084 s y).
Proof. exact (@lem8386713 ((term3292 A B P z f g _114084 s y) = (term3293 A B P z f g _114084 s y))). Qed.
Lemma lem8386715 {A B P : Type'} (lt2 : type1402 A) (z : type518 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (_114084 : type794 A P) (s : P -> A) (y : P) (h1 : term2270 A B P lt2 s z P2 G2 H2) (h2 : term3188 A B P f H2 g _114084 s y) : term3295 A B P z f g _114084 s y.
Proof. exact (EQ_MP (@lem8386714 A B P z f g _114084 s y) (@lem8386711 A B P lt2 z P2 G2 f H2 g _114084 s y h1 h2)). Qed.
Lemma lem8386717 (b : Prop) (a : Prop) : (a \/ b) = (term754 b a).
Proof. exact (EQ_MP (@lem20682 b a) (@lem20764 b a)). Qed.
Lemma lem8386720 {A B P : Type'} (f : A -> B) (g : A -> B) (lt2 : type1402 A) (_114180 : A) (s : P -> A) (y : P) : (term3158 A B P lt2 s y f g _114180) = (term3343 A B P f g lt2 _114180 s y).
Proof. exact (@lem8386717 ((@I (A -> B) f _114180) = (@I (A -> B) g _114180)) (term3196 A P lt2 _114180 s y)). Qed.
Lemma lem8386723 {A B P : Type'} (_114180 : A) (y : P) (lt2 : type1402 A) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (_114084 : type794 A P) (s : P -> A) (x : A) (h1 : term2944 A B P y lt2 P2 G2 f H2 g _114084 s x) : term3343 A B P f g lt2 _114180 s y.
Proof. exact (EQ_MP (@lem8386720 A B P f g lt2 _114180 s y) (@lem8383346 A B P _114180 y lt2 P2 G2 f H2 g _114084 s x h1)). Qed.
Lemma lem8386724 {A B P : Type'} (_114180 : A) (y : P) (lt2 : type1402 A) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (_114084 : type794 A P) (s : P -> A) (x : A) (h1 : term2944 A B P y lt2 P2 G2 f H2 g _114084 s x) : term3343 A B P f g lt2 _114180 s y.
Proof. exact (@lem8386723 A B P _114180 y lt2 P2 G2 f H2 g _114084 s x h1). Qed.
Lemma lem8386725 {A B P : Type'} (z : type518 A B P) (y : P) (lt2 : type1402 A) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (_114084 : type794 A P) (s : P -> A) (x : A) (h1 : term2944 A B P y lt2 P2 G2 f H2 g _114084 s x) : term3344 A B P lt2 z f g _114084 s y.
Proof. exact (@lem8386724 A B P (term3291 A B P z f g _114084 s y) y lt2 P2 G2 f H2 g _114084 s x h1). Qed.
Lemma lem8386728 {A B P : Type'} (z : type518 A B P) (y : P) (lt2 : type1402 A) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (_114084 : type794 A P) (s : P -> A) (x : A) (h1 : term2270 A B P lt2 s z P2 G2 H2) (h2 : term3188 A B P f H2 g _114084 s y) (h3 : term2944 A B P y lt2 P2 G2 f H2 g _114084 s x) : term3281 A B P lt2 z f g _114084 s y.
Proof. exact (@lem8386725 A B P z y lt2 P2 G2 f H2 g _114084 s x h3 (@lem8386715 A B P lt2 z P2 G2 f H2 g _114084 s y h1 h2)). Qed.
Lemma lem8386729 {A B P : Type'} (z : type518 A B P) (y : P) (lt2 : type1402 A) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (_114084 : type794 A P) (s : P -> A) (x : A) (h1 : term2270 A B P lt2 s z P2 G2 H2) (h2 : term3188 A B P f H2 g _114084 s y) (h3 : term2944 A B P y lt2 P2 G2 f H2 g _114084 s x) : term3345 A B P lt2 z f g _114084 s y.
Proof. exact (fun h0 : term3279 A B P lt2 z f g _114084 s y => @lem8386728 A B P z y lt2 P2 G2 f H2 g _114084 s x h1 h2 h3). Qed.
Lemma lem8386731 (p : Prop) : (term753 p) = (~ p).
Proof. exact (EQ_MP (@lem21028 p) (@lem21107 p)). Qed.
Lemma lem8386732 {A B P : Type'} (lt2 : type1402 A) (z : type518 A B P) (f : A -> B) (g : A -> B) (_114084 : type794 A P) (s : P -> A) (y : P) : (term3345 A B P lt2 z f g _114084 s y) = (term3281 A B P lt2 z f g _114084 s y).
Proof. exact (@lem8386731 (term3279 A B P lt2 z f g _114084 s y)). Qed.
Lemma lem8386733 {A B P : Type'} (z : type518 A B P) (y : P) (lt2 : type1402 A) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (_114084 : type794 A P) (s : P -> A) (x : A) (h1 : term2270 A B P lt2 s z P2 G2 H2) (h2 : term3188 A B P f H2 g _114084 s y) (h3 : term2944 A B P y lt2 P2 G2 f H2 g _114084 s x) : term3281 A B P lt2 z f g _114084 s y.
Proof. exact (EQ_MP (@lem8386732 A B P lt2 z f g _114084 s y) (@lem8386729 A B P z y lt2 P2 G2 f H2 g _114084 s x h1 h2 h3)). Qed.
Lemma lem8386751 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem8386752 {A : Type'} (_114817 : A) (_114816 : A -> Prop) (_114814 : A -> Prop) (_114815 : A) : (term3210 A _114816 _114817 _114814 _114815) = (term3248 A _114817 _114816 _114814 _114815).
Proof. exact (@lem8386751 (@I (A -> Prop) _114816 _114817) (term3249 A _114814 _114816) (term3250 A _114814 _114815)). Qed.
Lemma lem8386770 {A : Type'} (_114815 : A) (_114817 : A) : (term3251 A _114815 _114817) = (term3251 A _114815 _114817).
Proof. exact (eq_refl (term3251 A _114815 _114817)). Qed.
Lemma lem8386771 {A : Type'} (_114817 : A) (_114816 : A -> Prop) (_114814 : A -> Prop) (_114815 : A) : (term3212 A _114816 _114817 _114814 _114815) = (term3252 A _114817 _114816 _114814 _114815).
Proof. exact (MK_COMB (@lem8386770 A _114815 _114817) (@lem8386752 A _114817 _114816 _114814 _114815)). Qed.
Lemma lem8386775 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem8386776 {A : Type'} (_114817 : A) (_114816 : A -> Prop) (_114814 : A -> Prop) (_114815 : A) : (term3252 A _114817 _114816 _114814 _114815) = (term3253 A _114817 _114816 _114814 _114815).
Proof. exact (@lem8386775 (@I (A -> Prop) _114816 _114817) (term3254 A _114815 _114817) (term3255 A _114816 _114814 _114815)). Qed.
Lemma lem8386806 {A : Type'} (_114817 : A) (_114816 : A -> Prop) (_114814 : A -> Prop) (_114815 : A) : (term3212 A _114816 _114817 _114814 _114815) = (term3253 A _114817 _114816 _114814 _114815).
Proof. exact (TRANS (@lem8386771 A _114817 _114816 _114814 _114815) (@lem8386776 A _114817 _114816 _114814 _114815)). Qed.
Lemma lem8386807 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8386808 {A : Type'} (_114817 : A) (_114816 : A -> Prop) (_114814 : A -> Prop) (_114815 : A) : (term3256 A _114816 _114817 _114814 _114815) = (term3257 A _114817 _114816 _114814 _114815).
Proof. exact (MK_COMB (@lem8386807) (@lem8386806 A _114817 _114816 _114814 _114815)). Qed.
Lemma lem8386812 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem8386813 {A : Type'} (_114815 : A) (_114814 : A -> Prop) (_114816 : A -> Prop) (_114817 : A) : (term3346 A _114815 _114814 _114816 _114817) = (term3347 A _114815 _114814 _114816 _114817).
Proof. exact (@lem8386812 (term3254 A _114815 _114817) (term3250 A _114814 _114815) (term3348 A _114814 _114816 _114817)). Qed.
Lemma lem8386829 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem8386830 {A : Type'} (_114814 : A -> Prop) (_114815 : A) (_114816 : A -> Prop) (_114817 : A) : (term3349 A _114815 _114814 _114816 _114817) = (term3350 A _114814 _114815 _114816 _114817).
Proof. exact (@lem8386829 (term3249 A _114814 _114816) (term3250 A _114814 _114815) (@I (A -> Prop) _114816 _114817)). Qed.
Lemma lem8386846 (q : Prop) (p : Prop) : (p \/ q) = (q \/ p).
Proof. exact (proj1 (@lem827 (@el Prop) p q)). Qed.
Lemma lem8386847 {A : Type'} (_114816 : A -> Prop) (_114817 : A) (_114814 : A -> Prop) (_114815 : A) : (term3351 A _114814 _114815 _114816 _114817) = (term3207 A _114816 _114817 _114814 _114815).
Proof. exact (@lem8386846 (@I (A -> Prop) _114816 _114817) (term3250 A _114814 _114815)). Qed.
Lemma lem8386853 {A : Type'} (_114814 : A -> Prop) (_114816 : A -> Prop) : (term3352 A _114814 _114816) = (term3352 A _114814 _114816).
Proof. exact (eq_refl (term3352 A _114814 _114816)). Qed.
Lemma lem8386854 {A : Type'} (_114816 : A -> Prop) (_114817 : A) (_114814 : A -> Prop) (_114815 : A) : (term3350 A _114814 _114815 _114816 _114817) = (term3210 A _114816 _114817 _114814 _114815).
Proof. exact (MK_COMB (@lem8386853 A _114814 _114816) (@lem8386847 A _114816 _114817 _114814 _114815)). Qed.
Lemma lem8386858 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem8386859 {A : Type'} (_114817 : A) (_114816 : A -> Prop) (_114814 : A -> Prop) (_114815 : A) : (term3210 A _114816 _114817 _114814 _114815) = (term3248 A _114817 _114816 _114814 _114815).
Proof. exact (@lem8386858 (@I (A -> Prop) _114816 _114817) (term3249 A _114814 _114816) (term3250 A _114814 _114815)). Qed.
Lemma lem8386877 {A : Type'} (_114817 : A) (_114816 : A -> Prop) (_114814 : A -> Prop) (_114815 : A) : (term3350 A _114814 _114815 _114816 _114817) = (term3248 A _114817 _114816 _114814 _114815).
Proof. exact (TRANS (@lem8386854 A _114816 _114817 _114814 _114815) (@lem8386859 A _114817 _114816 _114814 _114815)). Qed.
Lemma lem8386878 {A : Type'} (_114817 : A) (_114816 : A -> Prop) (_114814 : A -> Prop) (_114815 : A) : (term3349 A _114815 _114814 _114816 _114817) = (term3248 A _114817 _114816 _114814 _114815).
Proof. exact (TRANS (@lem8386830 A _114814 _114815 _114816 _114817) (@lem8386877 A _114817 _114816 _114814 _114815)). Qed.
Lemma lem8386879 {A : Type'} (_114815 : A) (_114817 : A) : (term3251 A _114815 _114817) = (term3251 A _114815 _114817).
Proof. exact (eq_refl (term3251 A _114815 _114817)). Qed.
Lemma lem8386880 {A : Type'} (_114817 : A) (_114816 : A -> Prop) (_114814 : A -> Prop) (_114815 : A) : (term3347 A _114815 _114814 _114816 _114817) = (term3252 A _114817 _114816 _114814 _114815).
Proof. exact (MK_COMB (@lem8386879 A _114815 _114817) (@lem8386878 A _114817 _114816 _114814 _114815)). Qed.
Lemma lem8386884 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem8386885 {A : Type'} (_114817 : A) (_114816 : A -> Prop) (_114814 : A -> Prop) (_114815 : A) : (term3252 A _114817 _114816 _114814 _114815) = (term3253 A _114817 _114816 _114814 _114815).
Proof. exact (@lem8386884 (@I (A -> Prop) _114816 _114817) (term3254 A _114815 _114817) (term3255 A _114816 _114814 _114815)). Qed.
Lemma lem8386915 {A : Type'} (_114817 : A) (_114816 : A -> Prop) (_114814 : A -> Prop) (_114815 : A) : (term3347 A _114815 _114814 _114816 _114817) = (term3253 A _114817 _114816 _114814 _114815).
Proof. exact (TRANS (@lem8386880 A _114817 _114816 _114814 _114815) (@lem8386885 A _114817 _114816 _114814 _114815)). Qed.
Lemma lem8386916 {A : Type'} (_114817 : A) (_114816 : A -> Prop) (_114814 : A -> Prop) (_114815 : A) : (term3346 A _114815 _114814 _114816 _114817) = (term3253 A _114817 _114816 _114814 _114815).
Proof. exact (TRANS (@lem8386813 A _114815 _114814 _114816 _114817) (@lem8386915 A _114817 _114816 _114814 _114815)). Qed.
Lemma lem8386917 {A : Type'} (_114817 : A) (_114816 : A -> Prop) (_114814 : A -> Prop) (_114815 : A) : ((term3212 A _114816 _114817 _114814 _114815) = (term3346 A _114815 _114814 _114816 _114817)) = ((term3253 A _114817 _114816 _114814 _114815) = (term3253 A _114817 _114816 _114814 _114815)).
Proof. exact (MK_COMB (@lem8386808 A _114817 _114816 _114814 _114815) (@lem8386916 A _114817 _114816 _114814 _114815)). Qed.
Lemma lem8386919 {A : Type'} (x : A) : (x = x) = True.
Proof. exact (EQ_MP (@lem20665 A x) (@lem20664 A x)). Qed.
Lemma lem8386920 (x : Prop) : (x = x) = True.
Proof. exact (@lem8386919 Prop x). Qed.
Lemma lem8386921 {A : Type'} (_114817 : A) (_114816 : A -> Prop) (_114814 : A -> Prop) (_114815 : A) : ((term3253 A _114817 _114816 _114814 _114815) = (term3253 A _114817 _114816 _114814 _114815)) = True.
Proof. exact (@lem8386920 (term3253 A _114817 _114816 _114814 _114815)). Qed.
Lemma lem8386922 {A : Type'} (_114815 : A) (_114814 : A -> Prop) (_114816 : A -> Prop) (_114817 : A) : ((term3212 A _114816 _114817 _114814 _114815) = (term3346 A _114815 _114814 _114816 _114817)) = True.
Proof. exact (TRANS (@lem8386917 A _114817 _114816 _114814 _114815) (@lem8386921 A _114817 _114816 _114814 _114815)). Qed.
Lemma lem8386923 {A : Type'} (_114815 : A) (_114814 : A -> Prop) (_114816 : A -> Prop) (_114817 : A) : True = ((term3212 A _114816 _114817 _114814 _114815) = (term3346 A _114815 _114814 _114816 _114817)).
Proof. exact (SYM (@lem8386922 A _114815 _114814 _114816 _114817)). Qed.
Lemma lem8386924 {A : Type'} (_114815 : A) (_114814 : A -> Prop) (_114816 : A -> Prop) (_114817 : A) : (term3212 A _114816 _114817 _114814 _114815) = (term3346 A _114815 _114814 _114816 _114817).
Proof. exact (EQ_MP (@lem8386923 A _114815 _114814 _114816 _114817) (@lem0)). Qed.
Lemma lem8386925 {A : Type'} (_114815 : A) (_114814 : A -> Prop) (_114816 : A -> Prop) (_114817 : A) : term3346 A _114815 _114814 _114816 _114817.
Proof. exact (EQ_MP (@lem8386924 A _114815 _114814 _114816 _114817) (@lem8386325 A _114816 _114817 _114814 _114815)). Qed.
Lemma lem8386927 (b : Prop) (a : Prop) : (a \/ b) = (term754 b a).
Proof. exact (EQ_MP (@lem20682 b a) (@lem20764 b a)). Qed.
Lemma lem8386928 {A : Type'} (_114816 : A -> Prop) (_114817 : A) (_114814 : A -> Prop) (_114815 : A) : (term3346 A _114815 _114814 _114816 _114817) = (term3353 A _114816 _114817 _114814 _114815).
Proof. exact (@lem8386927 (term3354 A _114815 _114814 _114816 _114817) (term3250 A _114814 _114815)). Qed.
Lemma lem8386930 (a : Prop) (b : Prop) : (term756 a b) = (term757 a b).
Proof. exact (EQ_MP (@lem20789 a b) (@lem20895 a b)). Qed.
Lemma lem8386931 {A : Type'} (_114815 : A) (_114814 : A -> Prop) (_114816 : A -> Prop) (_114817 : A) : (term3355 A _114815 _114814 _114816 _114817) = (term3356 A _114815 _114814 _114816 _114817).
Proof. exact (@lem8386930 (term3254 A _114815 _114817) (term3348 A _114814 _114816 _114817)). Qed.
Lemma lem8386933 (a : Prop) : (term47 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem8386934 {A : Type'} (_114815 : A) (_114817 : A) : (term3262 A _114815 _114817) = (_114815 = _114817).
Proof. exact (@lem8386933 (_114815 = _114817)). Qed.
Lemma lem8386935 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8386936 {A : Type'} (_114815 : A) (_114817 : A) : (term3263 A _114815 _114817) = (term3264 A _114815 _114817).
Proof. exact (MK_COMB (@lem8386935) (@lem8386934 A _114815 _114817)). Qed.
Lemma lem8386938 (a : Prop) (b : Prop) : (term756 a b) = (term757 a b).
Proof. exact (EQ_MP (@lem20789 a b) (@lem20895 a b)). Qed.
Lemma lem8386939 {A : Type'} (_114814 : A -> Prop) (_114816 : A -> Prop) (_114817 : A) : (term3357 A _114814 _114816 _114817) = (term3358 A _114814 _114816 _114817).
Proof. exact (@lem8386938 (term3249 A _114814 _114816) (@I (A -> Prop) _114816 _114817)). Qed.
Lemma lem8386941 (a : Prop) : (term47 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem8386942 {A : Type'} (_114814 : A -> Prop) (_114816 : A -> Prop) : (term3267 A _114814 _114816) = (_114814 = _114816).
Proof. exact (@lem8386941 (_114814 = _114816)). Qed.
Lemma lem8386943 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8386944 {A : Type'} (_114814 : A -> Prop) (_114816 : A -> Prop) : (term3268 A _114814 _114816) = (term3269 A _114814 _114816).
Proof. exact (MK_COMB (@lem8386943) (@lem8386942 A _114814 _114816)). Qed.
Lemma lem8386945 {A : Type'} (_114816 : A -> Prop) (_114817 : A) : (term3250 A _114816 _114817) = (term3250 A _114816 _114817).
Proof. exact (eq_refl (term3250 A _114816 _114817)). Qed.
Lemma lem8386946 {A : Type'} (_114814 : A -> Prop) (_114816 : A -> Prop) (_114817 : A) : (term3358 A _114814 _114816 _114817) = (term3359 A _114814 _114816 _114817).
Proof. exact (MK_COMB (@lem8386944 A _114814 _114816) (@lem8386945 A _114816 _114817)). Qed.
Lemma lem8386947 {A : Type'} (_114814 : A -> Prop) (_114816 : A -> Prop) (_114817 : A) : (term3357 A _114814 _114816 _114817) = (term3359 A _114814 _114816 _114817).
Proof. exact (TRANS (@lem8386939 A _114814 _114816 _114817) (@lem8386946 A _114814 _114816 _114817)). Qed.
Lemma lem8386948 {A : Type'} (_114815 : A) (_114814 : A -> Prop) (_114816 : A -> Prop) (_114817 : A) : (term3356 A _114815 _114814 _114816 _114817) = (term3360 A _114815 _114814 _114816 _114817).
Proof. exact (MK_COMB (@lem8386936 A _114815 _114817) (@lem8386947 A _114814 _114816 _114817)). Qed.
Lemma lem8386949 {A : Type'} (_114815 : A) (_114814 : A -> Prop) (_114816 : A -> Prop) (_114817 : A) : (term3355 A _114815 _114814 _114816 _114817) = (term3360 A _114815 _114814 _114816 _114817).
Proof. exact (TRANS (@lem8386931 A _114815 _114814 _114816 _114817) (@lem8386948 A _114815 _114814 _114816 _114817)). Qed.
Lemma lem8386950 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem8386951 {A : Type'} (_114815 : A) (_114814 : A -> Prop) (_114816 : A -> Prop) (_114817 : A) : (term3361 A _114815 _114814 _114816 _114817) = (term3362 A _114815 _114814 _114816 _114817).
Proof. exact (MK_COMB (@lem8386950) (@lem8386949 A _114815 _114814 _114816 _114817)). Qed.
Lemma lem8386952 {A : Type'} (_114814 : A -> Prop) (_114815 : A) : (term3250 A _114814 _114815) = (term3250 A _114814 _114815).
Proof. exact (eq_refl (term3250 A _114814 _114815)). Qed.
Lemma lem8386953 {A : Type'} (_114816 : A -> Prop) (_114817 : A) (_114814 : A -> Prop) (_114815 : A) : (term3353 A _114816 _114817 _114814 _114815) = (term3363 A _114816 _114817 _114814 _114815).
Proof. exact (MK_COMB (@lem8386951 A _114815 _114814 _114816 _114817) (@lem8386952 A _114814 _114815)). Qed.
Lemma lem8386954 {A : Type'} (_114816 : A -> Prop) (_114817 : A) (_114814 : A -> Prop) (_114815 : A) : (term3346 A _114815 _114814 _114816 _114817) = (term3363 A _114816 _114817 _114814 _114815).
Proof. exact (TRANS (@lem8386928 A _114816 _114817 _114814 _114815) (@lem8386953 A _114816 _114817 _114814 _114815)). Qed.
Lemma lem8386956 {A B P : Type'} (z : type518 A B P) (y : P) (lt2 : type1402 A) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (_114084 : type794 A P) (s : P -> A) (x : A) (h1 : term2270 A B P lt2 s z P2 G2 H2) (h2 : term3188 A B P f H2 g _114084 s y) (h3 : term2944 A B P y lt2 P2 G2 f H2 g _114084 s x) : term3364 A B P lt2 z f g _114084 s y.
Proof. exact (conj (@lem8386689 A B P lt2 z f g _114084 s y) (@lem8386733 A B P z y lt2 P2 G2 f H2 g _114084 s x h1 h2 h3)). Qed.
Lemma lem8386957 {A B P : Type'} (z : type518 A B P) (y : P) (lt2 : type1402 A) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (_114084 : type794 A P) (s : P -> A) (x : A) (h1 : term2270 A B P lt2 s z P2 G2 H2) (h2 : term1491 A P _114084) (h3 : term3188 A B P f H2 g _114084 s y) (h4 : term2944 A B P y lt2 P2 G2 f H2 g _114084 s x) : term3365 A B P lt2 z f g _114084 s y.
Proof. exact (conj (@lem8386680 A P s y _114084 h2) (@lem8386956 A B P z y lt2 P2 G2 f H2 g _114084 s x h1 h3 h4)). Qed.
Lemma lem8386959 {A : Type'} (_114816 : A -> Prop) (_114817 : A) (_114814 : A -> Prop) (_114815 : A) : term3363 A _114816 _114817 _114814 _114815.
Proof. exact (EQ_MP (@lem8386954 A _114816 _114817 _114814 _114815) (@lem8386925 A _114815 _114814 _114816 _114817)). Qed.
Lemma lem8386960 {A : Type'} (_114816 : A -> Prop) (_114817 : A) (_114814 : A -> Prop) (_114815 : A) : term3363 A _114816 _114817 _114814 _114815.
Proof. exact (@lem8386959 A _114816 _114817 _114814 _114815). Qed.
Lemma lem8386961 {A B P : Type'} (lt2 : type1402 A) (z : type518 A B P) (f : A -> B) (g : A -> B) (_114084 : type794 A P) (s : P -> A) (y : P) : term3366 A B P lt2 z f g _114084 s y.
Proof. exact (@lem8386960 A (term3227 A B P lt2 z f g _114084 s y) (@I (P -> A) s y) (term3227 A B P lt2 z f g _114084 s y) (term3224 A P _114084 s y)). Qed.
Lemma lem8386964 {A B P : Type'} (z : type518 A B P) (y : P) (lt2 : type1402 A) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (_114084 : type794 A P) (s : P -> A) (x : A) (h1 : term2270 A B P lt2 s z P2 G2 H2) (h2 : term1491 A P _114084) (h3 : term3188 A B P f H2 g _114084 s y) (h4 : term2944 A B P y lt2 P2 G2 f H2 g _114084 s x) : term3247 A B P lt2 z f g _114084 s y.
Proof. exact (@lem8386961 A B P lt2 z f g _114084 s y (@lem8386957 A B P z y lt2 P2 G2 f H2 g _114084 s x h1 h2 h3 h4)). Qed.
Lemma lem8386965 {A B P : Type'} (z : type518 A B P) (y : P) (lt2 : type1402 A) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (_114084 : type794 A P) (s : P -> A) (x : A) (h1 : term2270 A B P lt2 s z P2 G2 H2) (h2 : term1491 A P _114084) (h3 : term3188 A B P f H2 g _114084 s y) (h4 : term2944 A B P y lt2 P2 G2 f H2 g _114084 s x) : term3367 A B P lt2 z f g _114084 s y.
Proof. exact (fun h0 : term3245 A B P lt2 z f g _114084 s y => @lem8386964 A B P z y lt2 P2 G2 f H2 g _114084 s x h1 h2 h3 h4). Qed.
Lemma lem8386967 (p : Prop) : (term753 p) = (~ p).
Proof. exact (EQ_MP (@lem21028 p) (@lem21107 p)). Qed.
Lemma lem8386968 {A B P : Type'} (lt2 : type1402 A) (z : type518 A B P) (f : A -> B) (g : A -> B) (_114084 : type794 A P) (s : P -> A) (y : P) : (term3367 A B P lt2 z f g _114084 s y) = (term3247 A B P lt2 z f g _114084 s y).
Proof. exact (@lem8386967 (term3245 A B P lt2 z f g _114084 s y)). Qed.
Lemma lem8386969 {A B P : Type'} (z : type518 A B P) (y : P) (lt2 : type1402 A) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (_114084 : type794 A P) (s : P -> A) (x : A) (h1 : term2270 A B P lt2 s z P2 G2 H2) (h2 : term1491 A P _114084) (h3 : term3188 A B P f H2 g _114084 s y) (h4 : term2944 A B P y lt2 P2 G2 f H2 g _114084 s x) : term3247 A B P lt2 z f g _114084 s y.
Proof. exact (EQ_MP (@lem8386968 A B P lt2 z f g _114084 s y) (@lem8386965 A B P z y lt2 P2 G2 f H2 g _114084 s x h1 h2 h3 h4)). Qed.
Lemma lem8386975 (q : Prop) (p : Prop) : (p \/ q) = (q \/ p).
Proof. exact (proj1 (@lem827 (@el Prop) p q)). Qed.
Lemma lem8386976 {A B P : Type'} (H2 : type558 A B P) (lt2 : type1402 A) (z : type518 A B P) (_114166 : A -> B) (_114167 : A -> B) (s : P -> A) (_114168 : P) : (term3191 A B P lt2 z s _114166 H2 _114167 _114168) = (term3379 A B P H2 lt2 z _114166 _114167 s _114168).
Proof. exact (@lem8386975 ((term2949 A B P H2 _114166 _114168) = (term2949 A B P H2 _114167 _114168)) (term2986 A B P lt2 z _114166 _114167 s _114168)). Qed.
Lemma lem8386984 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8386985 {A B P : Type'} (H2 : type558 A B P) (lt2 : type1402 A) (z : type518 A B P) (_114166 : A -> B) (_114167 : A -> B) (s : P -> A) (_114168 : P) : (term3380 A B P lt2 z s _114166 H2 _114167 _114168) = (term3381 A B P H2 lt2 z _114166 _114167 s _114168).
Proof. exact (MK_COMB (@lem8386984) (@lem8386976 A B P H2 lt2 z _114166 _114167 s _114168)). Qed.
Lemma lem8386993 {A B P : Type'} (H2 : type558 A B P) (lt2 : type1402 A) (z : type518 A B P) (_114166 : A -> B) (_114167 : A -> B) (s : P -> A) (_114168 : P) : (term3379 A B P H2 lt2 z _114166 _114167 s _114168) = (term3379 A B P H2 lt2 z _114166 _114167 s _114168).
Proof. exact (eq_refl (term3379 A B P H2 lt2 z _114166 _114167 s _114168)). Qed.
Lemma lem8386994 {A B P : Type'} (H2 : type558 A B P) (lt2 : type1402 A) (z : type518 A B P) (_114166 : A -> B) (_114167 : A -> B) (s : P -> A) (_114168 : P) : ((term3191 A B P lt2 z s _114166 H2 _114167 _114168) = (term3379 A B P H2 lt2 z _114166 _114167 s _114168)) = ((term3379 A B P H2 lt2 z _114166 _114167 s _114168) = (term3379 A B P H2 lt2 z _114166 _114167 s _114168)).
Proof. exact (MK_COMB (@lem8386985 A B P H2 lt2 z _114166 _114167 s _114168) (@lem8386993 A B P H2 lt2 z _114166 _114167 s _114168)). Qed.
Lemma lem8386996 {A : Type'} (x : A) : (x = x) = True.
Proof. exact (EQ_MP (@lem20665 A x) (@lem20664 A x)). Qed.
Lemma lem8386997 (x : Prop) : (x = x) = True.
Proof. exact (@lem8386996 Prop x). Qed.
Lemma lem8386998 {A B P : Type'} (H2 : type558 A B P) (lt2 : type1402 A) (z : type518 A B P) (_114166 : A -> B) (_114167 : A -> B) (s : P -> A) (_114168 : P) : ((term3379 A B P H2 lt2 z _114166 _114167 s _114168) = (term3379 A B P H2 lt2 z _114166 _114167 s _114168)) = True.
Proof. exact (@lem8386997 (term3379 A B P H2 lt2 z _114166 _114167 s _114168)). Qed.
Lemma lem8386999 {A B P : Type'} (H2 : type558 A B P) (lt2 : type1402 A) (z : type518 A B P) (_114166 : A -> B) (_114167 : A -> B) (s : P -> A) (_114168 : P) : ((term3191 A B P lt2 z s _114166 H2 _114167 _114168) = (term3379 A B P H2 lt2 z _114166 _114167 s _114168)) = True.
Proof. exact (TRANS (@lem8386994 A B P H2 lt2 z _114166 _114167 s _114168) (@lem8386998 A B P H2 lt2 z _114166 _114167 s _114168)). Qed.
Lemma lem8387000 {A B P : Type'} (H2 : type558 A B P) (lt2 : type1402 A) (z : type518 A B P) (_114166 : A -> B) (_114167 : A -> B) (s : P -> A) (_114168 : P) : True = ((term3191 A B P lt2 z s _114166 H2 _114167 _114168) = (term3379 A B P H2 lt2 z _114166 _114167 s _114168)).
Proof. exact (SYM (@lem8386999 A B P H2 lt2 z _114166 _114167 s _114168)). Qed.
Lemma lem8387001 {A B P : Type'} (H2 : type558 A B P) (lt2 : type1402 A) (z : type518 A B P) (_114166 : A -> B) (_114167 : A -> B) (s : P -> A) (_114168 : P) : (term3191 A B P lt2 z s _114166 H2 _114167 _114168) = (term3379 A B P H2 lt2 z _114166 _114167 s _114168).
Proof. exact (EQ_MP (@lem8387000 A B P H2 lt2 z _114166 _114167 s _114168) (@lem0)). Qed.
Lemma lem8387002 {A B P : Type'} (_114166 : A -> B) (_114167 : A -> B) (_114168 : P) (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (h1 : term2270 A B P lt2 s z P2 G2 H2) : term3379 A B P H2 lt2 z _114166 _114167 s _114168.
Proof. exact (EQ_MP (@lem8387001 A B P H2 lt2 z _114166 _114167 s _114168) (@lem8383485 A B P _114166 _114167 _114168 lt2 s z P2 G2 H2 h1)). Qed.
Lemma lem8387004 (b : Prop) (a : Prop) : (a \/ b) = (term754 b a).
Proof. exact (EQ_MP (@lem20682 b a) (@lem20764 b a)). Qed.
Lemma lem8387007 {A B P : Type'} (lt2 : type1402 A) (z : type518 A B P) (s : P -> A) (_114166 : A -> B) (H2 : type558 A B P) (_114167 : A -> B) (_114168 : P) : (term3379 A B P H2 lt2 z _114166 _114167 s _114168) = (term3382 A B P lt2 z s _114166 H2 _114167 _114168).
Proof. exact (@lem8387004 (term2986 A B P lt2 z _114166 _114167 s _114168) ((term2949 A B P H2 _114166 _114168) = (term2949 A B P H2 _114167 _114168))). Qed.
Lemma lem8387010 {A B P : Type'} (_114166 : A -> B) (_114167 : A -> B) (_114168 : P) (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (h1 : term2270 A B P lt2 s z P2 G2 H2) : term3382 A B P lt2 z s _114166 H2 _114167 _114168.
Proof. exact (EQ_MP (@lem8387007 A B P lt2 z s _114166 H2 _114167 _114168) (@lem8387002 A B P _114166 _114167 _114168 lt2 s z P2 G2 H2 h1)). Qed.
Lemma lem8387011 {A B P : Type'} (_114166 : A -> B) (_114167 : A -> B) (_114168 : P) (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (h1 : term2270 A B P lt2 s z P2 G2 H2) : term3382 A B P lt2 z s _114166 H2 _114167 _114168.
Proof. exact (@lem8387010 A B P _114166 _114167 _114168 lt2 s z P2 G2 H2 h1). Qed.
Lemma lem8387012 {A B P : Type'} (f : A -> B) (g : A -> B) (_114084 : type794 A P) (y : P) (lt2 : type1402 A) (s : P -> A) (z : type518 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (h1 : term2270 A B P lt2 s z P2 G2 H2) : term3383 A B P lt2 z f H2 g _114084 s y.
Proof. exact (@lem8387011 A B P f g (term3244 A P _114084 s y) lt2 s z P2 G2 H2 h1). Qed.
Lemma lem8387015 {A B P : Type'} (z : type518 A B P) (y : P) (lt2 : type1402 A) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (_114084 : type794 A P) (s : P -> A) (x : A) (h1 : term2270 A B P lt2 s z P2 G2 H2) (h2 : term1491 A P _114084) (h3 : term3188 A B P f H2 g _114084 s y) (h4 : term2944 A B P y lt2 P2 G2 f H2 g _114084 s x) : (term3376 A B P H2 f _114084 s y) = (term3376 A B P H2 g _114084 s y).
Proof. exact (@lem8387012 A B P f g _114084 y lt2 s z P2 G2 H2 h1 (@lem8386969 A B P z y lt2 P2 G2 f H2 g _114084 s x h1 h2 h3 h4)). Qed.
Lemma lem8387016 {A B P : Type'} (z : type518 A B P) (y : P) (lt2 : type1402 A) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (_114084 : type794 A P) (s : P -> A) (x : A) (h1 : term2270 A B P lt2 s z P2 G2 H2) (h2 : term1491 A P _114084) (h3 : term2944 A B P y lt2 P2 G2 f H2 g _114084 s x) : term3384 A B P f H2 g _114084 s y.
Proof. exact (fun h0 : term3188 A B P f H2 g _114084 s y => @lem8387015 A B P z y lt2 P2 G2 f H2 g _114084 s x h1 h2 h0 h3). Qed.
Lemma lem8387018 (p : Prop) : (term748 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8387019 {A B P : Type'} (f : A -> B) (H2 : type558 A B P) (g : A -> B) (_114084 : type794 A P) (s : P -> A) (y : P) : (term3384 A B P f H2 g _114084 s y) = ((term3376 A B P H2 f _114084 s y) = (term3376 A B P H2 g _114084 s y)).
Proof. exact (@lem8387018 ((term3376 A B P H2 f _114084 s y) = (term3376 A B P H2 g _114084 s y))). Qed.
Lemma lem8387020 {A B P : Type'} (z : type518 A B P) (y : P) (lt2 : type1402 A) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (_114084 : type794 A P) (s : P -> A) (x : A) (h1 : term2270 A B P lt2 s z P2 G2 H2) (h2 : term1491 A P _114084) (h3 : term2944 A B P y lt2 P2 G2 f H2 g _114084 s x) : (term3376 A B P H2 f _114084 s y) = (term3376 A B P H2 g _114084 s y).
Proof. exact (EQ_MP (@lem8387019 A B P f H2 g _114084 s y) (@lem8387016 A B P z y lt2 P2 G2 f H2 g _114084 s x h1 h2 h3)). Qed.
Lemma lem8387023 (p : Prop) : (~ p) = (p -> False).
Proof. exact (EQ_MP (@lem21021 p) (@lem0)). Qed.
Lemma lem8387025 {A B P : Type'} (f : A -> B) (H2 : type558 A B P) (g : A -> B) (_114084 : type794 A P) (s : P -> A) (y : P) : (term3188 A B P f H2 g _114084 s y) = (term3385 A B P f H2 g _114084 s y).
Proof. exact (@lem8387023 ((term3376 A B P H2 f _114084 s y) = (term3376 A B P H2 g _114084 s y))). Qed.
Lemma lem8387028 {A B P : Type'} (y : P) (lt2 : type1402 A) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (_114084 : type794 A P) (s : P -> A) (x : A) (h1 : term2923 A B P f H2 g _114084 s x) (h2 : term2944 A B P y lt2 P2 G2 f H2 g _114084 s x) : term3385 A B P f H2 g _114084 s y.
Proof. exact (EQ_MP (@lem8387025 A B P f H2 g _114084 s y) (@lem8383359 A B P y lt2 P2 G2 f H2 g _114084 s x h1 h2)). Qed.
Lemma lem8387031 {A B P : Type'} (z : type518 A B P) (y : P) (lt2 : type1402 A) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (_114084 : type794 A P) (s : P -> A) (x : A) (h1 : term2270 A B P lt2 s z P2 G2 H2) (h2 : term1491 A P _114084) (h3 : term2923 A B P f H2 g _114084 s x) (h4 : term2944 A B P y lt2 P2 G2 f H2 g _114084 s x) : False.
Proof. exact (@lem8387028 A B P y lt2 P2 G2 f H2 g _114084 s x h3 h4 (@lem8387020 A B P z y lt2 P2 G2 f H2 g _114084 s x h1 h2 h4)). Qed.
Lemma lem8387032 {A B P : Type'} (z : type518 A B P) (y : P) (lt2 : type1402 A) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (_114084 : type794 A P) (s : P -> A) (x : A) (h1 : term2270 A B P lt2 s z P2 G2 H2) (h2 : term1491 A P _114084) (h3 : term2923 A B P f H2 g _114084 s x) (h4 : term2944 A B P y lt2 P2 G2 f H2 g _114084 s x) : term750.
Proof. exact (fun h0 : ~ False => @lem8387031 A B P z y lt2 P2 G2 f H2 g _114084 s x h1 h2 h3 h4). Qed.
Lemma lem8387034 (p : Prop) : (term748 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8387035 : term750 = False.
Proof. exact (@lem8387034 False). Qed.
Lemma lem8387360 {A B : Type'} (f : A -> B) (P1 : type551 A B) (g : A -> B) (x : A) (h1 : term2905 A B f P1 g x) : term2828 A B P1 f x.
Proof. exact (proj1 (@lem8375520 A B f P1 g x h1)). Qed.
Lemma lem8387361 {A B : Type'} (f : A -> B) (P1 : type551 A B) (g : A -> B) (x : A) (h1 : term2905 A B f P1 g x) : term3386 A B P1 f x.
Proof. exact (fun h0 : term2830 A B P1 f x => @lem8387360 A B f P1 g x h1). Qed.
Lemma lem8387363 (p : Prop) : (term748 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8387364 {A B : Type'} (P1 : type551 A B) (f : A -> B) (x : A) : (term3386 A B P1 f x) = (term2828 A B P1 f x).
Proof. exact (@lem8387363 (term2828 A B P1 f x)). Qed.
Lemma lem8387365 {A B : Type'} (f : A -> B) (P1 : type551 A B) (g : A -> B) (x : A) (h1 : term2905 A B f P1 g x) : term2828 A B P1 f x.
Proof. exact (EQ_MP (@lem8387364 A B P1 f x) (@lem8387361 A B f P1 g x h1)). Qed.
Lemma lem8387368 {A B : Type'} (P1 : type551 A B) (g : A -> B) (x : A) (h1 : term2830 A B P1 g x) : term2830 A B P1 g x.
Proof. exact (h1). Qed.
Lemma lem8387369 {A B : Type'} (P1 : type551 A B) (g : A -> B) (x : A) (h1 : term2830 A B P1 g x) : term3387 A B P1 g x.
Proof. exact (fun h0 : term2828 A B P1 g x => @lem8387368 A B P1 g x h1). Qed.
Lemma lem8387371 (p : Prop) : (term753 p) = (~ p).
Proof. exact (EQ_MP (@lem21028 p) (@lem21107 p)). Qed.
Lemma lem8387372 {A B : Type'} (P1 : type551 A B) (g : A -> B) (x : A) : (term3387 A B P1 g x) = (term2830 A B P1 g x).
Proof. exact (@lem8387371 (term2828 A B P1 g x)). Qed.
Lemma lem8387373 {A B : Type'} (P1 : type551 A B) (g : A -> B) (x : A) (h1 : term2830 A B P1 g x) : term2830 A B P1 g x.
Proof. exact (EQ_MP (@lem8387372 A B P1 g x) (@lem8387369 A B P1 g x h1)). Qed.
Lemma lem8387375 (b : Prop) (a : Prop) : (a \/ b) = (term754 b a).
Proof. exact (EQ_MP (@lem20682 b a) (@lem20764 b a)). Qed.
Lemma lem8387376 {A B : Type'} (P1 : type551 A B) (lt2 : type1402 A) (z' : type515 A B) (_114193 : A -> B) (_114194 : A -> B) (_114195 : A) : (term3145 A B lt2 z' _114193 P1 _114194 _114195) = (term3388 A B P1 lt2 z' _114193 _114194 _114195).
Proof. exact (@lem8387375 (term3007 A B _114193 P1 _114194 _114195) (term3036 A B lt2 z' _114193 _114194 _114195)). Qed.
Lemma lem8387378 (a : Prop) (b : Prop) : (term756 a b) = (term757 a b).
Proof. exact (EQ_MP (@lem20789 a b) (@lem20895 a b)). Qed.
Lemma lem8387379 {A B : Type'} (_114193 : A -> B) (P1 : type551 A B) (_114194 : A -> B) (_114195 : A) : (term3389 A B _114193 P1 _114194 _114195) = (term3390 A B _114193 P1 _114194 _114195).
Proof. exact (@lem8387378 (term2830 A B P1 _114193 _114195) (term2828 A B P1 _114194 _114195)). Qed.
Lemma lem8387381 (a : Prop) : (term47 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem8387382 {A B : Type'} (P1 : type551 A B) (_114193 : A -> B) (_114195 : A) : (term3391 A B P1 _114193 _114195) = (term2828 A B P1 _114193 _114195).
Proof. exact (@lem8387381 (term2828 A B P1 _114193 _114195)). Qed.
Lemma lem8387383 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8387384 {A B : Type'} (P1 : type551 A B) (_114193 : A -> B) (_114195 : A) : (term3392 A B P1 _114193 _114195) = (term2865 A B P1 _114193 _114195).
Proof. exact (MK_COMB (@lem8387383) (@lem8387382 A B P1 _114193 _114195)). Qed.
Lemma lem8387385 {A B : Type'} (P1 : type551 A B) (_114194 : A -> B) (_114195 : A) : (term2830 A B P1 _114194 _114195) = (term2830 A B P1 _114194 _114195).
Proof. exact (eq_refl (term2830 A B P1 _114194 _114195)). Qed.
Lemma lem8387386 {A B : Type'} (_114193 : A -> B) (P1 : type551 A B) (_114194 : A -> B) (_114195 : A) : (term3390 A B _114193 P1 _114194 _114195) = (term2905 A B _114193 P1 _114194 _114195).
Proof. exact (MK_COMB (@lem8387384 A B P1 _114193 _114195) (@lem8387385 A B P1 _114194 _114195)). Qed.
Lemma lem8387387 {A B : Type'} (_114193 : A -> B) (P1 : type551 A B) (_114194 : A -> B) (_114195 : A) : (term3389 A B _114193 P1 _114194 _114195) = (term2905 A B _114193 P1 _114194 _114195).
Proof. exact (TRANS (@lem8387379 A B _114193 P1 _114194 _114195) (@lem8387386 A B _114193 P1 _114194 _114195)). Qed.
Lemma lem8387388 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem8387389 {A B : Type'} (_114193 : A -> B) (P1 : type551 A B) (_114194 : A -> B) (_114195 : A) : (term3393 A B _114193 P1 _114194 _114195) = (term3394 A B _114193 P1 _114194 _114195).
Proof. exact (MK_COMB (@lem8387388) (@lem8387387 A B _114193 P1 _114194 _114195)). Qed.
Lemma lem8387390 {A B : Type'} (lt2 : type1402 A) (z' : type515 A B) (_114193 : A -> B) (_114194 : A -> B) (_114195 : A) : (term3036 A B lt2 z' _114193 _114194 _114195) = (term3036 A B lt2 z' _114193 _114194 _114195).
Proof. exact (eq_refl (term3036 A B lt2 z' _114193 _114194 _114195)). Qed.
Lemma lem8387391 {A B : Type'} (P1 : type551 A B) (lt2 : type1402 A) (z' : type515 A B) (_114193 : A -> B) (_114194 : A -> B) (_114195 : A) : (term3388 A B P1 lt2 z' _114193 _114194 _114195) = (term3395 A B P1 lt2 z' _114193 _114194 _114195).
Proof. exact (MK_COMB (@lem8387389 A B _114193 P1 _114194 _114195) (@lem8387390 A B lt2 z' _114193 _114194 _114195)). Qed.
Lemma lem8387392 {A B : Type'} (P1 : type551 A B) (lt2 : type1402 A) (z' : type515 A B) (_114193 : A -> B) (_114194 : A -> B) (_114195 : A) : (term3145 A B lt2 z' _114193 P1 _114194 _114195) = (term3395 A B P1 lt2 z' _114193 _114194 _114195).
Proof. exact (TRANS (@lem8387376 A B P1 lt2 z' _114193 _114194 _114195) (@lem8387391 A B P1 lt2 z' _114193 _114194 _114195)). Qed.
Lemma lem8387394 {A B : Type'} (f : A -> B) (P1 : type551 A B) (g : A -> B) (x : A) (h1 : term2830 A B P1 g x) (h2 : term2905 A B f P1 g x) : term2905 A B f P1 g x.
Proof. exact (conj (@lem8387365 A B f P1 g x h2) (@lem8387373 A B P1 g x h1)). Qed.
Lemma lem8387396 {A B : Type'} (_114193 : A -> B) (_114194 : A -> B) (_114195 : A) (lt2 : type1402 A) (z' : type515 A B) (P1 : type551 A B) (G1 : type548 A B) (H1 : type549 A B) (h1 : term2129 A B lt2 z' P1 G1 H1) : term3395 A B P1 lt2 z' _114193 _114194 _114195.
Proof. exact (EQ_MP (@lem8387392 A B P1 lt2 z' _114193 _114194 _114195) (@lem8381053 A B _114193 _114194 _114195 lt2 z' P1 G1 H1 h1)). Qed.
Lemma lem8387397 {A B : Type'} (_114193 : A -> B) (_114194 : A -> B) (_114195 : A) (lt2 : type1402 A) (z' : type515 A B) (P1 : type551 A B) (G1 : type548 A B) (H1 : type549 A B) (h1 : term2129 A B lt2 z' P1 G1 H1) : term3395 A B P1 lt2 z' _114193 _114194 _114195.
Proof. exact (@lem8387396 A B _114193 _114194 _114195 lt2 z' P1 G1 H1 h1). Qed.
Lemma lem8387398 {A B : Type'} (f : A -> B) (g : A -> B) (x : A) (lt2 : type1402 A) (z' : type515 A B) (P1 : type551 A B) (G1 : type548 A B) (H1 : type549 A B) (h1 : term2129 A B lt2 z' P1 G1 H1) : term3395 A B P1 lt2 z' f g x.
Proof. exact (@lem8387397 A B f g x lt2 z' P1 G1 H1 h1). Qed.
Lemma lem8387401 {A B : Type'} (lt2 : type1402 A) (z' : type515 A B) (G1 : type548 A B) (H1 : type549 A B) (f : A -> B) (P1 : type551 A B) (g : A -> B) (x : A) (h1 : term2129 A B lt2 z' P1 G1 H1) (h2 : term2830 A B P1 g x) (h3 : term2905 A B f P1 g x) : term3036 A B lt2 z' f g x.
Proof. exact (@lem8387398 A B f g x lt2 z' P1 G1 H1 h1 (@lem8387394 A B f P1 g x h2 h3)). Qed.
Lemma lem8387402 {A B : Type'} (lt2 : type1402 A) (z' : type515 A B) (G1 : type548 A B) (H1 : type549 A B) (f : A -> B) (P1 : type551 A B) (g : A -> B) (x : A) (h1 : term2129 A B lt2 z' P1 G1 H1) (h2 : term2830 A B P1 g x) (h3 : term2905 A B f P1 g x) : term3396 A B lt2 z' f g x.
Proof. exact (fun h0 : term3397 A B lt2 z' f g x => @lem8387401 A B lt2 z' G1 H1 f P1 g x h1 h2 h3). Qed.
Lemma lem8387404 (p : Prop) : (term748 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8387405 {A B : Type'} (lt2 : type1402 A) (z' : type515 A B) (f : A -> B) (g : A -> B) (x : A) : (term3396 A B lt2 z' f g x) = (term3036 A B lt2 z' f g x).
Proof. exact (@lem8387404 (term3036 A B lt2 z' f g x)). Qed.
Lemma lem8387406 {A B : Type'} (lt2 : type1402 A) (z' : type515 A B) (G1 : type548 A B) (H1 : type549 A B) (f : A -> B) (P1 : type551 A B) (g : A -> B) (x : A) (h1 : term2129 A B lt2 z' P1 G1 H1) (h2 : term2830 A B P1 g x) (h3 : term2905 A B f P1 g x) : term3036 A B lt2 z' f g x.
Proof. exact (EQ_MP (@lem8387405 A B lt2 z' f g x) (@lem8387402 A B lt2 z' G1 H1 f P1 g x h1 h2 h3)). Qed.
Lemma lem8387412 (q : Prop) (p : Prop) : (p \/ q) = (q \/ p).
Proof. exact (proj1 (@lem827 (@el Prop) p q)). Qed.
Lemma lem8387413 {A B : Type'} (f : A -> B) (g : A -> B) (lt2 : type1402 A) (_114205 : A) (x : A) : (term2912 A B lt2 x f g _114205) = (term3398 A B f g lt2 _114205 x).
Proof. exact (@lem8387412 ((@I (A -> B) f _114205) = (@I (A -> B) g _114205)) (term608 A lt2 _114205 x)). Qed.
Lemma lem8387421 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8387422 {A B : Type'} (f : A -> B) (g : A -> B) (lt2 : type1402 A) (_114205 : A) (x : A) : (term3160 A B lt2 x f g _114205) = (term3399 A B f g lt2 _114205 x).
Proof. exact (MK_COMB (@lem8387421) (@lem8387413 A B f g lt2 _114205 x)). Qed.
Lemma lem8387430 {A B : Type'} (f : A -> B) (g : A -> B) (lt2 : type1402 A) (_114205 : A) (x : A) : (term3398 A B f g lt2 _114205 x) = (term3398 A B f g lt2 _114205 x).
Proof. exact (eq_refl (term3398 A B f g lt2 _114205 x)). Qed.
Lemma lem8387431 {A B : Type'} (f : A -> B) (g : A -> B) (lt2 : type1402 A) (_114205 : A) (x : A) : ((term2912 A B lt2 x f g _114205) = (term3398 A B f g lt2 _114205 x)) = ((term3398 A B f g lt2 _114205 x) = (term3398 A B f g lt2 _114205 x)).
Proof. exact (MK_COMB (@lem8387422 A B f g lt2 _114205 x) (@lem8387430 A B f g lt2 _114205 x)). Qed.
Lemma lem8387433 {A : Type'} (x : A) : (x = x) = True.
Proof. exact (EQ_MP (@lem20665 A x) (@lem20664 A x)). Qed.
Lemma lem8387434 (x : Prop) : (x = x) = True.
Proof. exact (@lem8387433 Prop x). Qed.
Lemma lem8387435 {A B : Type'} (f : A -> B) (g : A -> B) (lt2 : type1402 A) (_114205 : A) (x : A) : ((term3398 A B f g lt2 _114205 x) = (term3398 A B f g lt2 _114205 x)) = True.
Proof. exact (@lem8387434 (term3398 A B f g lt2 _114205 x)). Qed.
Lemma lem8387436 {A B : Type'} (f : A -> B) (g : A -> B) (lt2 : type1402 A) (_114205 : A) (x : A) : ((term2912 A B lt2 x f g _114205) = (term3398 A B f g lt2 _114205 x)) = True.
Proof. exact (TRANS (@lem8387431 A B f g lt2 _114205 x) (@lem8387435 A B f g lt2 _114205 x)). Qed.
Lemma lem8387437 {A B : Type'} (f : A -> B) (g : A -> B) (lt2 : type1402 A) (_114205 : A) (x : A) : True = ((term2912 A B lt2 x f g _114205) = (term3398 A B f g lt2 _114205 x)).
Proof. exact (SYM (@lem8387436 A B f g lt2 _114205 x)). Qed.
Lemma lem8387438 {A B : Type'} (f : A -> B) (g : A -> B) (lt2 : type1402 A) (_114205 : A) (x : A) : (term2912 A B lt2 x f g _114205) = (term3398 A B f g lt2 _114205 x).
Proof. exact (EQ_MP (@lem8387437 A B f g lt2 _114205 x) (@lem0)). Qed.
Lemma lem8387439 {A B P : Type'} (_114205 : A) (s : P -> A) (lt2 : type1402 A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (H1 : type549 A B) (g : A -> B) (x : A) (h1 : term2917 A B P s lt2 P1 G1 f H1 g x) : term3398 A B f g lt2 _114205 x.
Proof. exact (EQ_MP (@lem8387438 A B f g lt2 _114205 x) (@lem8381015 A B P _114205 s lt2 P1 G1 f H1 g x h1)). Qed.
Lemma lem8387441 (b : Prop) (a : Prop) : (a \/ b) = (term754 b a).
Proof. exact (EQ_MP (@lem20682 b a) (@lem20764 b a)). Qed.
Lemma lem8387442 {A B : Type'} (lt2 : type1402 A) (x : A) (f : A -> B) (g : A -> B) (_114205 : A) : (term3398 A B f g lt2 _114205 x) = (term3400 A B lt2 x f g _114205).
Proof. exact (@lem8387441 (term608 A lt2 _114205 x) ((@I (A -> B) f _114205) = (@I (A -> B) g _114205))). Qed.
Lemma lem8387444 (a : Prop) : (term47 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem8387445 {A : Type'} (lt2 : type1402 A) (_114205 : A) (x : A) : (term771 A lt2 _114205 x) = (term586 A lt2 _114205 x).
Proof. exact (@lem8387444 (term586 A lt2 _114205 x)). Qed.
Lemma lem8387446 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem8387447 {A : Type'} (lt2 : type1402 A) (_114205 : A) (x : A) : (term772 A lt2 _114205 x) = (term773 A lt2 _114205 x).
Proof. exact (MK_COMB (@lem8387446) (@lem8387445 A lt2 _114205 x)). Qed.
Lemma lem8387448 {A B : Type'} (f : A -> B) (g : A -> B) (_114205 : A) : ((@I (A -> B) f _114205) = (@I (A -> B) g _114205)) = ((@I (A -> B) f _114205) = (@I (A -> B) g _114205)).
Proof. exact (eq_refl ((@I (A -> B) f _114205) = (@I (A -> B) g _114205))). Qed.
Lemma lem8387449 {A B : Type'} (lt2 : type1402 A) (x : A) (f : A -> B) (g : A -> B) (_114205 : A) : (term3400 A B lt2 x f g _114205) = (term3401 A B lt2 x f g _114205).
Proof. exact (MK_COMB (@lem8387447 A lt2 _114205 x) (@lem8387448 A B f g _114205)). Qed.
Lemma lem8387450 {A B : Type'} (lt2 : type1402 A) (x : A) (f : A -> B) (g : A -> B) (_114205 : A) : (term3398 A B f g lt2 _114205 x) = (term3401 A B lt2 x f g _114205).
Proof. exact (TRANS (@lem8387442 A B lt2 x f g _114205) (@lem8387449 A B lt2 x f g _114205)). Qed.
Lemma lem8387453 {A B P : Type'} (_114205 : A) (s : P -> A) (lt2 : type1402 A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (H1 : type549 A B) (g : A -> B) (x : A) (h1 : term2917 A B P s lt2 P1 G1 f H1 g x) : term3401 A B lt2 x f g _114205.
Proof. exact (EQ_MP (@lem8387450 A B lt2 x f g _114205) (@lem8387439 A B P _114205 s lt2 P1 G1 f H1 g x h1)). Qed.
Lemma lem8387454 {A B P : Type'} (_114205 : A) (s : P -> A) (lt2 : type1402 A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (H1 : type549 A B) (g : A -> B) (x : A) (h1 : term2917 A B P s lt2 P1 G1 f H1 g x) : term3401 A B lt2 x f g _114205.
Proof. exact (@lem8387453 A B P _114205 s lt2 P1 G1 f H1 g x h1). Qed.
Lemma lem8387455 {A B P : Type'} (z' : type515 A B) (s : P -> A) (lt2 : type1402 A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (H1 : type549 A B) (g : A -> B) (x : A) (h1 : term2917 A B P s lt2 P1 G1 f H1 g x) : term3402 A B lt2 z' f g x.
Proof. exact (@lem8387454 A B P (term3019 A B z' f g x) s lt2 P1 G1 f H1 g x h1). Qed.
Lemma lem8387458 {A B P : Type'} (z' : type515 A B) (s : P -> A) (lt2 : type1402 A) (G1 : type548 A B) (H1 : type549 A B) (f : A -> B) (P1 : type551 A B) (g : A -> B) (x : A) (h1 : term2129 A B lt2 z' P1 G1 H1) (h2 : term2830 A B P1 g x) (h3 : term2917 A B P s lt2 P1 G1 f H1 g x) (h4 : term2905 A B f P1 g x) : (term3022 A B z' f g x) = (term3025 A B z' f g x).
Proof. exact (@lem8387455 A B P z' s lt2 P1 G1 f H1 g x h3 (@lem8387406 A B lt2 z' G1 H1 f P1 g x h1 h2 h4)). Qed.
Lemma lem8387459 {A B P : Type'} (z' : type515 A B) (s : P -> A) (lt2 : type1402 A) (G1 : type548 A B) (H1 : type549 A B) (f : A -> B) (P1 : type551 A B) (g : A -> B) (x : A) (h1 : term2129 A B lt2 z' P1 G1 H1) (h2 : term2830 A B P1 g x) (h3 : term2917 A B P s lt2 P1 G1 f H1 g x) (h4 : term2905 A B f P1 g x) : term3403 A B z' f g x.
Proof. exact (fun h0 : term3029 A B z' f g x => @lem8387458 A B P z' s lt2 G1 H1 f P1 g x h1 h2 h3 h4). Qed.
Lemma lem8387461 (p : Prop) : (term748 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8387462 {A B : Type'} (z' : type515 A B) (f : A -> B) (g : A -> B) (x : A) : (term3403 A B z' f g x) = ((term3022 A B z' f g x) = (term3025 A B z' f g x)).
Proof. exact (@lem8387461 ((term3022 A B z' f g x) = (term3025 A B z' f g x))). Qed.
Lemma lem8387463 {A B P : Type'} (z' : type515 A B) (s : P -> A) (lt2 : type1402 A) (G1 : type548 A B) (H1 : type549 A B) (f : A -> B) (P1 : type551 A B) (g : A -> B) (x : A) (h1 : term2129 A B lt2 z' P1 G1 H1) (h2 : term2830 A B P1 g x) (h3 : term2917 A B P s lt2 P1 G1 f H1 g x) (h4 : term2905 A B f P1 g x) : (term3022 A B z' f g x) = (term3025 A B z' f g x).
Proof. exact (EQ_MP (@lem8387462 A B z' f g x) (@lem8387459 A B P z' s lt2 G1 H1 f P1 g x h1 h2 h3 h4)). Qed.
Lemma lem8387465 {A B : Type'} (f : A -> B) (P1 : type551 A B) (g : A -> B) (x : A) (h1 : term2905 A B f P1 g x) : term2828 A B P1 f x.
Proof. exact (proj1 (@lem8375520 A B f P1 g x h1)). Qed.
Lemma lem8387466 {A B : Type'} (f : A -> B) (P1 : type551 A B) (g : A -> B) (x : A) (h1 : term2905 A B f P1 g x) : term3386 A B P1 f x.
Proof. exact (fun h0 : term2830 A B P1 f x => @lem8387465 A B f P1 g x h1). Qed.
Lemma lem8387468 (p : Prop) : (term748 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8387469 {A B : Type'} (P1 : type551 A B) (f : A -> B) (x : A) : (term3386 A B P1 f x) = (term2828 A B P1 f x).
Proof. exact (@lem8387468 (term2828 A B P1 f x)). Qed.
Lemma lem8387470 {A B : Type'} (f : A -> B) (P1 : type551 A B) (g : A -> B) (x : A) (h1 : term2905 A B f P1 g x) : term2828 A B P1 f x.
Proof. exact (EQ_MP (@lem8387469 A B P1 f x) (@lem8387466 A B f P1 g x h1)). Qed.
Lemma lem8387488 (q : Prop) (p : Prop) : (p \/ q) = (q \/ p).
Proof. exact (proj1 (@lem827 (@el Prop) p q)). Qed.
Lemma lem8387489 {A B : Type'} (_114194 : A -> B) (P1 : type551 A B) (_114193 : A -> B) (_114195 : A) : (term3007 A B _114193 P1 _114194 _114195) = (term3011 A B _114194 P1 _114193 _114195).
Proof. exact (@lem8387488 (term2828 A B P1 _114194 _114195) (term2830 A B P1 _114193 _114195)). Qed.
Lemma lem8387495 {A B : Type'} (z' : type515 A B) (_114193 : A -> B) (_114194 : A -> B) (_114195 : A) : (term3404 A B z' _114193 _114194 _114195) = (term3404 A B z' _114193 _114194 _114195).
Proof. exact (eq_refl (term3404 A B z' _114193 _114194 _114195)). Qed.
Lemma lem8387496 {A B : Type'} (z' : type515 A B) (_114194 : A -> B) (P1 : type551 A B) (_114193 : A -> B) (_114195 : A) : (term3146 A B z' _114193 P1 _114194 _114195) = (term3405 A B z' _114194 P1 _114193 _114195).
Proof. exact (MK_COMB (@lem8387495 A B z' _114193 _114194 _114195) (@lem8387489 A B _114194 P1 _114193 _114195)). Qed.
Lemma lem8387500 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem8387501 {A B : Type'} (z' : type515 A B) (_114194 : A -> B) (P1 : type551 A B) (_114193 : A -> B) (_114195 : A) : (term3405 A B z' _114194 P1 _114193 _114195) = (term3406 A B z' _114194 P1 _114193 _114195).
Proof. exact (@lem8387500 (term2828 A B P1 _114194 _114195) (term3029 A B z' _114193 _114194 _114195) (term2830 A B P1 _114193 _114195)). Qed.
Lemma lem8387519 {A B : Type'} (z' : type515 A B) (_114194 : A -> B) (P1 : type551 A B) (_114193 : A -> B) (_114195 : A) : (term3146 A B z' _114193 P1 _114194 _114195) = (term3406 A B z' _114194 P1 _114193 _114195).
Proof. exact (TRANS (@lem8387496 A B z' _114194 P1 _114193 _114195) (@lem8387501 A B z' _114194 P1 _114193 _114195)). Qed.
Lemma lem8387520 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8387521 {A B : Type'} (z' : type515 A B) (_114194 : A -> B) (P1 : type551 A B) (_114193 : A -> B) (_114195 : A) : (term3407 A B z' _114193 P1 _114194 _114195) = (term3408 A B z' _114194 P1 _114193 _114195).
Proof. exact (MK_COMB (@lem8387520) (@lem8387519 A B z' _114194 P1 _114193 _114195)). Qed.
Lemma lem8387539 {A B : Type'} (z' : type515 A B) (_114194 : A -> B) (P1 : type551 A B) (_114193 : A -> B) (_114195 : A) : (term3406 A B z' _114194 P1 _114193 _114195) = (term3406 A B z' _114194 P1 _114193 _114195).
Proof. exact (eq_refl (term3406 A B z' _114194 P1 _114193 _114195)). Qed.
Lemma lem8387540 {A B : Type'} (z' : type515 A B) (_114194 : A -> B) (P1 : type551 A B) (_114193 : A -> B) (_114195 : A) : ((term3146 A B z' _114193 P1 _114194 _114195) = (term3406 A B z' _114194 P1 _114193 _114195)) = ((term3406 A B z' _114194 P1 _114193 _114195) = (term3406 A B z' _114194 P1 _114193 _114195)).
Proof. exact (MK_COMB (@lem8387521 A B z' _114194 P1 _114193 _114195) (@lem8387539 A B z' _114194 P1 _114193 _114195)). Qed.
Lemma lem8387542 {A : Type'} (x : A) : (x = x) = True.
Proof. exact (EQ_MP (@lem20665 A x) (@lem20664 A x)). Qed.
Lemma lem8387543 (x : Prop) : (x = x) = True.
Proof. exact (@lem8387542 Prop x). Qed.
Lemma lem8387544 {A B : Type'} (z' : type515 A B) (_114194 : A -> B) (P1 : type551 A B) (_114193 : A -> B) (_114195 : A) : ((term3406 A B z' _114194 P1 _114193 _114195) = (term3406 A B z' _114194 P1 _114193 _114195)) = True.
Proof. exact (@lem8387543 (term3406 A B z' _114194 P1 _114193 _114195)). Qed.
Lemma lem8387545 {A B : Type'} (z' : type515 A B) (_114194 : A -> B) (P1 : type551 A B) (_114193 : A -> B) (_114195 : A) : ((term3146 A B z' _114193 P1 _114194 _114195) = (term3406 A B z' _114194 P1 _114193 _114195)) = True.
Proof. exact (TRANS (@lem8387540 A B z' _114194 P1 _114193 _114195) (@lem8387544 A B z' _114194 P1 _114193 _114195)). Qed.
Lemma lem8387546 {A B : Type'} (z' : type515 A B) (_114194 : A -> B) (P1 : type551 A B) (_114193 : A -> B) (_114195 : A) : True = ((term3146 A B z' _114193 P1 _114194 _114195) = (term3406 A B z' _114194 P1 _114193 _114195)).
Proof. exact (SYM (@lem8387545 A B z' _114194 P1 _114193 _114195)). Qed.
Lemma lem8387547 {A B : Type'} (z' : type515 A B) (_114194 : A -> B) (P1 : type551 A B) (_114193 : A -> B) (_114195 : A) : (term3146 A B z' _114193 P1 _114194 _114195) = (term3406 A B z' _114194 P1 _114193 _114195).
Proof. exact (EQ_MP (@lem8387546 A B z' _114194 P1 _114193 _114195) (@lem0)). Qed.
Lemma lem8387548 {A B : Type'} (_114194 : A -> B) (_114193 : A -> B) (_114195 : A) (lt2 : type1402 A) (z' : type515 A B) (P1 : type551 A B) (G1 : type548 A B) (H1 : type549 A B) (h1 : term2129 A B lt2 z' P1 G1 H1) : term3406 A B z' _114194 P1 _114193 _114195.
Proof. exact (EQ_MP (@lem8387547 A B z' _114194 P1 _114193 _114195) (@lem8381063 A B _114193 _114194 _114195 lt2 z' P1 G1 H1 h1)). Qed.
Lemma lem8387550 (b : Prop) (a : Prop) : (a \/ b) = (term754 b a).
Proof. exact (EQ_MP (@lem20682 b a) (@lem20764 b a)). Qed.
Lemma lem8387551 {A B : Type'} (z' : type515 A B) (_114193 : A -> B) (P1 : type551 A B) (_114194 : A -> B) (_114195 : A) : (term3406 A B z' _114194 P1 _114193 _114195) = (term3409 A B z' _114193 P1 _114194 _114195).
Proof. exact (@lem8387550 (term3410 A B z' _114194 P1 _114193 _114195) (term2828 A B P1 _114194 _114195)). Qed.
Lemma lem8387553 (a : Prop) (b : Prop) : (term756 a b) = (term757 a b).
Proof. exact (EQ_MP (@lem20789 a b) (@lem20895 a b)). Qed.
Lemma lem8387554 {A B : Type'} (z' : type515 A B) (_114194 : A -> B) (P1 : type551 A B) (_114193 : A -> B) (_114195 : A) : (term3411 A B z' _114194 P1 _114193 _114195) = (term3412 A B z' _114194 P1 _114193 _114195).
Proof. exact (@lem8387553 (term3029 A B z' _114193 _114194 _114195) (term2830 A B P1 _114193 _114195)). Qed.
Lemma lem8387556 (a : Prop) : (term47 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem8387557 {A B : Type'} (z' : type515 A B) (_114193 : A -> B) (_114194 : A -> B) (_114195 : A) : (term3413 A B z' _114193 _114194 _114195) = ((term3022 A B z' _114193 _114194 _114195) = (term3025 A B z' _114193 _114194 _114195)).
Proof. exact (@lem8387556 ((term3022 A B z' _114193 _114194 _114195) = (term3025 A B z' _114193 _114194 _114195))). Qed.
Lemma lem8387558 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8387559 {A B : Type'} (z' : type515 A B) (_114193 : A -> B) (_114194 : A -> B) (_114195 : A) : (term3414 A B z' _114193 _114194 _114195) = (term3415 A B z' _114193 _114194 _114195).
Proof. exact (MK_COMB (@lem8387558) (@lem8387557 A B z' _114193 _114194 _114195)). Qed.
Lemma lem8387561 (a : Prop) : (term47 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem8387562 {A B : Type'} (P1 : type551 A B) (_114193 : A -> B) (_114195 : A) : (term3391 A B P1 _114193 _114195) = (term2828 A B P1 _114193 _114195).
Proof. exact (@lem8387561 (term2828 A B P1 _114193 _114195)). Qed.
Lemma lem8387563 {A B : Type'} (z' : type515 A B) (_114194 : A -> B) (P1 : type551 A B) (_114193 : A -> B) (_114195 : A) : (term3412 A B z' _114194 P1 _114193 _114195) = (term3416 A B z' _114194 P1 _114193 _114195).
Proof. exact (MK_COMB (@lem8387559 A B z' _114193 _114194 _114195) (@lem8387562 A B P1 _114193 _114195)). Qed.
Lemma lem8387564 {A B : Type'} (z' : type515 A B) (_114194 : A -> B) (P1 : type551 A B) (_114193 : A -> B) (_114195 : A) : (term3411 A B z' _114194 P1 _114193 _114195) = (term3416 A B z' _114194 P1 _114193 _114195).
Proof. exact (TRANS (@lem8387554 A B z' _114194 P1 _114193 _114195) (@lem8387563 A B z' _114194 P1 _114193 _114195)). Qed.
Lemma lem8387565 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem8387566 {A B : Type'} (z' : type515 A B) (_114194 : A -> B) (P1 : type551 A B) (_114193 : A -> B) (_114195 : A) : (term3417 A B z' _114194 P1 _114193 _114195) = (term3418 A B z' _114194 P1 _114193 _114195).
Proof. exact (MK_COMB (@lem8387565) (@lem8387564 A B z' _114194 P1 _114193 _114195)). Qed.
Lemma lem8387567 {A B : Type'} (P1 : type551 A B) (_114194 : A -> B) (_114195 : A) : (term2828 A B P1 _114194 _114195) = (term2828 A B P1 _114194 _114195).
Proof. exact (eq_refl (term2828 A B P1 _114194 _114195)). Qed.
Lemma lem8387568 {A B : Type'} (z' : type515 A B) (_114193 : A -> B) (P1 : type551 A B) (_114194 : A -> B) (_114195 : A) : (term3409 A B z' _114193 P1 _114194 _114195) = (term3419 A B z' _114193 P1 _114194 _114195).
Proof. exact (MK_COMB (@lem8387566 A B z' _114194 P1 _114193 _114195) (@lem8387567 A B P1 _114194 _114195)). Qed.
Lemma lem8387569 {A B : Type'} (z' : type515 A B) (_114193 : A -> B) (P1 : type551 A B) (_114194 : A -> B) (_114195 : A) : (term3406 A B z' _114194 P1 _114193 _114195) = (term3419 A B z' _114193 P1 _114194 _114195).
Proof. exact (TRANS (@lem8387551 A B z' _114193 P1 _114194 _114195) (@lem8387568 A B z' _114193 P1 _114194 _114195)). Qed.
Lemma lem8387571 {A B P : Type'} (z' : type515 A B) (s : P -> A) (lt2 : type1402 A) (G1 : type548 A B) (H1 : type549 A B) (f : A -> B) (P1 : type551 A B) (g : A -> B) (x : A) (h1 : term2129 A B lt2 z' P1 G1 H1) (h2 : term2830 A B P1 g x) (h3 : term2917 A B P s lt2 P1 G1 f H1 g x) (h4 : term2905 A B f P1 g x) : term3416 A B z' g P1 f x.
Proof. exact (conj (@lem8387463 A B P z' s lt2 G1 H1 f P1 g x h1 h2 h3 h4) (@lem8387470 A B f P1 g x h4)). Qed.
Lemma lem8387573 {A B : Type'} (_114193 : A -> B) (_114194 : A -> B) (_114195 : A) (lt2 : type1402 A) (z' : type515 A B) (P1 : type551 A B) (G1 : type548 A B) (H1 : type549 A B) (h1 : term2129 A B lt2 z' P1 G1 H1) : term3419 A B z' _114193 P1 _114194 _114195.
Proof. exact (EQ_MP (@lem8387569 A B z' _114193 P1 _114194 _114195) (@lem8387548 A B _114194 _114193 _114195 lt2 z' P1 G1 H1 h1)). Qed.
Lemma lem8387574 {A B : Type'} (_114193 : A -> B) (_114194 : A -> B) (_114195 : A) (lt2 : type1402 A) (z' : type515 A B) (P1 : type551 A B) (G1 : type548 A B) (H1 : type549 A B) (h1 : term2129 A B lt2 z' P1 G1 H1) : term3419 A B z' _114193 P1 _114194 _114195.
Proof. exact (@lem8387573 A B _114193 _114194 _114195 lt2 z' P1 G1 H1 h1). Qed.
Lemma lem8387575 {A B : Type'} (f : A -> B) (g : A -> B) (x : A) (lt2 : type1402 A) (z' : type515 A B) (P1 : type551 A B) (G1 : type548 A B) (H1 : type549 A B) (h1 : term2129 A B lt2 z' P1 G1 H1) : term3419 A B z' f P1 g x.
Proof. exact (@lem8387574 A B f g x lt2 z' P1 G1 H1 h1). Qed.
Lemma lem8387578 {A B P : Type'} (z' : type515 A B) (s : P -> A) (lt2 : type1402 A) (G1 : type548 A B) (H1 : type549 A B) (f : A -> B) (P1 : type551 A B) (g : A -> B) (x : A) (h1 : term2129 A B lt2 z' P1 G1 H1) (h2 : term2830 A B P1 g x) (h3 : term2917 A B P s lt2 P1 G1 f H1 g x) (h4 : term2905 A B f P1 g x) : term2828 A B P1 g x.
Proof. exact (@lem8387575 A B f g x lt2 z' P1 G1 H1 h1 (@lem8387571 A B P z' s lt2 G1 H1 f P1 g x h1 h2 h3 h4)). Qed.
Lemma lem8387579 {A B P : Type'} (z' : type515 A B) (s : P -> A) (lt2 : type1402 A) (G1 : type548 A B) (H1 : type549 A B) (f : A -> B) (P1 : type551 A B) (g : A -> B) (x : A) (h1 : term2129 A B lt2 z' P1 G1 H1) (h2 : term2917 A B P s lt2 P1 G1 f H1 g x) (h3 : term2905 A B f P1 g x) : term3386 A B P1 g x.
Proof. exact (fun h0 : term2830 A B P1 g x => @lem8387578 A B P z' s lt2 G1 H1 f P1 g x h1 h0 h2 h3). Qed.
Lemma lem8387581 (p : Prop) : (term748 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8387582 {A B : Type'} (P1 : type551 A B) (g : A -> B) (x : A) : (term3386 A B P1 g x) = (term2828 A B P1 g x).
Proof. exact (@lem8387581 (term2828 A B P1 g x)). Qed.
Lemma lem8387583 {A B P : Type'} (z' : type515 A B) (s : P -> A) (lt2 : type1402 A) (G1 : type548 A B) (H1 : type549 A B) (f : A -> B) (P1 : type551 A B) (g : A -> B) (x : A) (h1 : term2129 A B lt2 z' P1 G1 H1) (h2 : term2917 A B P s lt2 P1 G1 f H1 g x) (h3 : term2905 A B f P1 g x) : term2828 A B P1 g x.
Proof. exact (EQ_MP (@lem8387582 A B P1 g x) (@lem8387579 A B P z' s lt2 G1 H1 f P1 g x h1 h2 h3)). Qed.
Lemma lem8387586 (p : Prop) : (~ p) = (p -> False).
Proof. exact (EQ_MP (@lem21021 p) (@lem0)). Qed.
Lemma lem8387588 {A B : Type'} (P1 : type551 A B) (g : A -> B) (x : A) : (term2830 A B P1 g x) = (term3420 A B P1 g x).
Proof. exact (@lem8387586 (term2828 A B P1 g x)). Qed.
Lemma lem8387591 {A B : Type'} (f : A -> B) (P1 : type551 A B) (g : A -> B) (x : A) (h1 : term2905 A B f P1 g x) : term3420 A B P1 g x.
Proof. exact (EQ_MP (@lem8387588 A B P1 g x) (@lem8381019 A B f P1 g x h1)). Qed.
Lemma lem8387594 {A B P : Type'} (z' : type515 A B) (s : P -> A) (lt2 : type1402 A) (G1 : type548 A B) (H1 : type549 A B) (f : A -> B) (P1 : type551 A B) (g : A -> B) (x : A) (h1 : term2129 A B lt2 z' P1 G1 H1) (h2 : term2917 A B P s lt2 P1 G1 f H1 g x) (h3 : term2905 A B f P1 g x) : False.
Proof. exact (@lem8387591 A B f P1 g x h3 (@lem8387583 A B P z' s lt2 G1 H1 f P1 g x h1 h2 h3)). Qed.
Lemma lem8387595 {A B P : Type'} (z' : type515 A B) (s : P -> A) (lt2 : type1402 A) (G1 : type548 A B) (H1 : type549 A B) (f : A -> B) (P1 : type551 A B) (g : A -> B) (x : A) (h1 : term2129 A B lt2 z' P1 G1 H1) (h2 : term2917 A B P s lt2 P1 G1 f H1 g x) (h3 : term2905 A B f P1 g x) : term750.
Proof. exact (fun h0 : ~ False => @lem8387594 A B P z' s lt2 G1 H1 f P1 g x h1 h2 h3). Qed.
Lemma lem8387597 (p : Prop) : (term748 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8387598 : term750 = False.
Proof. exact (@lem8387597 False). Qed.
Lemma lem8387599 {A B P : Type'} (z' : type515 A B) (s : P -> A) (lt2 : type1402 A) (G1 : type548 A B) (H1 : type549 A B) (f : A -> B) (P1 : type551 A B) (g : A -> B) (x : A) (h1 : term2129 A B lt2 z' P1 G1 H1) (h2 : term2917 A B P s lt2 P1 G1 f H1 g x) (h3 : term2905 A B f P1 g x) : False.
Proof. exact (EQ_MP (@lem8387598) (@lem8387595 A B P z' s lt2 G1 H1 f P1 g x h1 h2 h3)). Qed.
Lemma lem8387924 {A B : Type'} (P1 : type551 A B) (f : A -> B) (x : A) (h1 : term2830 A B P1 f x) : term2830 A B P1 f x.
Proof. exact (h1). Qed.
Lemma lem8387925 {A B : Type'} (P1 : type551 A B) (f : A -> B) (x : A) (h1 : term2830 A B P1 f x) : term3387 A B P1 f x.
Proof. exact (fun h0 : term2828 A B P1 f x => @lem8387924 A B P1 f x h1). Qed.
Lemma lem8387927 (p : Prop) : (term753 p) = (~ p).
Proof. exact (EQ_MP (@lem21028 p) (@lem21107 p)). Qed.
Lemma lem8387928 {A B : Type'} (P1 : type551 A B) (f : A -> B) (x : A) : (term3387 A B P1 f x) = (term2830 A B P1 f x).
Proof. exact (@lem8387927 (term2828 A B P1 f x)). Qed.
Lemma lem8387929 {A B : Type'} (P1 : type551 A B) (f : A -> B) (x : A) (h1 : term2830 A B P1 f x) : term2830 A B P1 f x.
Proof. exact (EQ_MP (@lem8387928 A B P1 f x) (@lem8387925 A B P1 f x h1)). Qed.
Lemma lem8387931 {A B : Type'} (f : A -> B) (P1 : type551 A B) (g : A -> B) (x : A) (h1 : term2903 A B f P1 g x) : term2828 A B P1 g x.
Proof. exact (proj2 (@lem8375521 A B f P1 g x h1)). Qed.
Lemma lem8387932 {A B : Type'} (f : A -> B) (P1 : type551 A B) (g : A -> B) (x : A) (h1 : term2903 A B f P1 g x) : term3386 A B P1 g x.
Proof. exact (fun h0 : term2830 A B P1 g x => @lem8387931 A B f P1 g x h1). Qed.
Lemma lem8387934 (p : Prop) : (term748 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8387935 {A B : Type'} (P1 : type551 A B) (g : A -> B) (x : A) : (term3386 A B P1 g x) = (term2828 A B P1 g x).
Proof. exact (@lem8387934 (term2828 A B P1 g x)). Qed.
Lemma lem8387936 {A B : Type'} (f : A -> B) (P1 : type551 A B) (g : A -> B) (x : A) (h1 : term2903 A B f P1 g x) : term2828 A B P1 g x.
Proof. exact (EQ_MP (@lem8387935 A B P1 g x) (@lem8387932 A B f P1 g x h1)). Qed.
Lemma lem8387938 (b : Prop) (a : Prop) : (a \/ b) = (term754 b a).
Proof. exact (EQ_MP (@lem20682 b a) (@lem20764 b a)). Qed.
Lemma lem8387939 {A B : Type'} (P1 : type551 A B) (lt2 : type1402 A) (z' : type515 A B) (_114218 : A -> B) (_114219 : A -> B) (_114220 : A) : (term3147 A B lt2 z' _114218 P1 _114219 _114220) = (term3421 A B P1 lt2 z' _114218 _114219 _114220).
Proof. exact (@lem8387938 (term3011 A B _114218 P1 _114219 _114220) (term3036 A B lt2 z' _114218 _114219 _114220)). Qed.
Lemma lem8387941 (a : Prop) (b : Prop) : (term756 a b) = (term757 a b).
Proof. exact (EQ_MP (@lem20789 a b) (@lem20895 a b)). Qed.
Lemma lem8387942 {A B : Type'} (_114218 : A -> B) (P1 : type551 A B) (_114219 : A -> B) (_114220 : A) : (term3422 A B _114218 P1 _114219 _114220) = (term3423 A B _114218 P1 _114219 _114220).
Proof. exact (@lem8387941 (term2828 A B P1 _114218 _114220) (term2830 A B P1 _114219 _114220)). Qed.
Lemma lem8387944 (a : Prop) : (term47 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem8387945 {A B : Type'} (P1 : type551 A B) (_114219 : A -> B) (_114220 : A) : (term3391 A B P1 _114219 _114220) = (term2828 A B P1 _114219 _114220).
Proof. exact (@lem8387944 (term2828 A B P1 _114219 _114220)). Qed.
Lemma lem8387946 {A B : Type'} (P1 : type551 A B) (_114218 : A -> B) (_114220 : A) : (term2901 A B P1 _114218 _114220) = (term2901 A B P1 _114218 _114220).
Proof. exact (eq_refl (term2901 A B P1 _114218 _114220)). Qed.
Lemma lem8387947 {A B : Type'} (_114218 : A -> B) (P1 : type551 A B) (_114219 : A -> B) (_114220 : A) : (term3423 A B _114218 P1 _114219 _114220) = (term2903 A B _114218 P1 _114219 _114220).
Proof. exact (MK_COMB (@lem8387946 A B P1 _114218 _114220) (@lem8387945 A B P1 _114219 _114220)). Qed.
Lemma lem8387948 {A B : Type'} (_114218 : A -> B) (P1 : type551 A B) (_114219 : A -> B) (_114220 : A) : (term3422 A B _114218 P1 _114219 _114220) = (term2903 A B _114218 P1 _114219 _114220).
Proof. exact (TRANS (@lem8387942 A B _114218 P1 _114219 _114220) (@lem8387947 A B _114218 P1 _114219 _114220)). Qed.
Lemma lem8387949 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem8387950 {A B : Type'} (_114218 : A -> B) (P1 : type551 A B) (_114219 : A -> B) (_114220 : A) : (term3424 A B _114218 P1 _114219 _114220) = (term3425 A B _114218 P1 _114219 _114220).
Proof. exact (MK_COMB (@lem8387949) (@lem8387948 A B _114218 P1 _114219 _114220)). Qed.
Lemma lem8387951 {A B : Type'} (lt2 : type1402 A) (z' : type515 A B) (_114218 : A -> B) (_114219 : A -> B) (_114220 : A) : (term3036 A B lt2 z' _114218 _114219 _114220) = (term3036 A B lt2 z' _114218 _114219 _114220).
Proof. exact (eq_refl (term3036 A B lt2 z' _114218 _114219 _114220)). Qed.
Lemma lem8387952 {A B : Type'} (P1 : type551 A B) (lt2 : type1402 A) (z' : type515 A B) (_114218 : A -> B) (_114219 : A -> B) (_114220 : A) : (term3421 A B P1 lt2 z' _114218 _114219 _114220) = (term3426 A B P1 lt2 z' _114218 _114219 _114220).
Proof. exact (MK_COMB (@lem8387950 A B _114218 P1 _114219 _114220) (@lem8387951 A B lt2 z' _114218 _114219 _114220)). Qed.
Lemma lem8387953 {A B : Type'} (P1 : type551 A B) (lt2 : type1402 A) (z' : type515 A B) (_114218 : A -> B) (_114219 : A -> B) (_114220 : A) : (term3147 A B lt2 z' _114218 P1 _114219 _114220) = (term3426 A B P1 lt2 z' _114218 _114219 _114220).
Proof. exact (TRANS (@lem8387939 A B P1 lt2 z' _114218 _114219 _114220) (@lem8387952 A B P1 lt2 z' _114218 _114219 _114220)). Qed.
Lemma lem8387955 {A B : Type'} (f : A -> B) (P1 : type551 A B) (g : A -> B) (x : A) (h1 : term2830 A B P1 f x) (h2 : term2903 A B f P1 g x) : term2903 A B f P1 g x.
Proof. exact (conj (@lem8387929 A B P1 f x h1) (@lem8387936 A B f P1 g x h2)). Qed.
Lemma lem8387957 {A B : Type'} (_114218 : A -> B) (_114219 : A -> B) (_114220 : A) (lt2 : type1402 A) (z' : type515 A B) (P1 : type551 A B) (G1 : type548 A B) (H1 : type549 A B) (h1 : term2129 A B lt2 z' P1 G1 H1) : term3426 A B P1 lt2 z' _114218 _114219 _114220.
Proof. exact (EQ_MP (@lem8387953 A B P1 lt2 z' _114218 _114219 _114220) (@lem8381267 A B _114218 _114219 _114220 lt2 z' P1 G1 H1 h1)). Qed.
Lemma lem8387958 {A B : Type'} (_114218 : A -> B) (_114219 : A -> B) (_114220 : A) (lt2 : type1402 A) (z' : type515 A B) (P1 : type551 A B) (G1 : type548 A B) (H1 : type549 A B) (h1 : term2129 A B lt2 z' P1 G1 H1) : term3426 A B P1 lt2 z' _114218 _114219 _114220.
Proof. exact (@lem8387957 A B _114218 _114219 _114220 lt2 z' P1 G1 H1 h1). Qed.
Lemma lem8387959 {A B : Type'} (f : A -> B) (g : A -> B) (x : A) (lt2 : type1402 A) (z' : type515 A B) (P1 : type551 A B) (G1 : type548 A B) (H1 : type549 A B) (h1 : term2129 A B lt2 z' P1 G1 H1) : term3426 A B P1 lt2 z' f g x.
Proof. exact (@lem8387958 A B f g x lt2 z' P1 G1 H1 h1). Qed.
Lemma lem8387962 {A B : Type'} (lt2 : type1402 A) (z' : type515 A B) (G1 : type548 A B) (H1 : type549 A B) (f : A -> B) (P1 : type551 A B) (g : A -> B) (x : A) (h1 : term2129 A B lt2 z' P1 G1 H1) (h2 : term2830 A B P1 f x) (h3 : term2903 A B f P1 g x) : term3036 A B lt2 z' f g x.
Proof. exact (@lem8387959 A B f g x lt2 z' P1 G1 H1 h1 (@lem8387955 A B f P1 g x h2 h3)). Qed.
Lemma lem8387963 {A B : Type'} (lt2 : type1402 A) (z' : type515 A B) (G1 : type548 A B) (H1 : type549 A B) (f : A -> B) (P1 : type551 A B) (g : A -> B) (x : A) (h1 : term2129 A B lt2 z' P1 G1 H1) (h2 : term2830 A B P1 f x) (h3 : term2903 A B f P1 g x) : term3396 A B lt2 z' f g x.
Proof. exact (fun h0 : term3397 A B lt2 z' f g x => @lem8387962 A B lt2 z' G1 H1 f P1 g x h1 h2 h3). Qed.
Lemma lem8387965 (p : Prop) : (term748 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8387966 {A B : Type'} (lt2 : type1402 A) (z' : type515 A B) (f : A -> B) (g : A -> B) (x : A) : (term3396 A B lt2 z' f g x) = (term3036 A B lt2 z' f g x).
Proof. exact (@lem8387965 (term3036 A B lt2 z' f g x)). Qed.
Lemma lem8387967 {A B : Type'} (lt2 : type1402 A) (z' : type515 A B) (G1 : type548 A B) (H1 : type549 A B) (f : A -> B) (P1 : type551 A B) (g : A -> B) (x : A) (h1 : term2129 A B lt2 z' P1 G1 H1) (h2 : term2830 A B P1 f x) (h3 : term2903 A B f P1 g x) : term3036 A B lt2 z' f g x.
Proof. exact (EQ_MP (@lem8387966 A B lt2 z' f g x) (@lem8387963 A B lt2 z' G1 H1 f P1 g x h1 h2 h3)). Qed.
Lemma lem8387973 (q : Prop) (p : Prop) : (p \/ q) = (q \/ p).
Proof. exact (proj1 (@lem827 (@el Prop) p q)). Qed.
Lemma lem8387974 {A B : Type'} (f : A -> B) (g : A -> B) (lt2 : type1402 A) (_114230 : A) (x : A) : (term2912 A B lt2 x f g _114230) = (term3398 A B f g lt2 _114230 x).
Proof. exact (@lem8387973 ((@I (A -> B) f _114230) = (@I (A -> B) g _114230)) (term608 A lt2 _114230 x)). Qed.
Lemma lem8387982 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8387983 {A B : Type'} (f : A -> B) (g : A -> B) (lt2 : type1402 A) (_114230 : A) (x : A) : (term3160 A B lt2 x f g _114230) = (term3399 A B f g lt2 _114230 x).
Proof. exact (MK_COMB (@lem8387982) (@lem8387974 A B f g lt2 _114230 x)). Qed.
Lemma lem8387991 {A B : Type'} (f : A -> B) (g : A -> B) (lt2 : type1402 A) (_114230 : A) (x : A) : (term3398 A B f g lt2 _114230 x) = (term3398 A B f g lt2 _114230 x).
Proof. exact (eq_refl (term3398 A B f g lt2 _114230 x)). Qed.
Lemma lem8387992 {A B : Type'} (f : A -> B) (g : A -> B) (lt2 : type1402 A) (_114230 : A) (x : A) : ((term2912 A B lt2 x f g _114230) = (term3398 A B f g lt2 _114230 x)) = ((term3398 A B f g lt2 _114230 x) = (term3398 A B f g lt2 _114230 x)).
Proof. exact (MK_COMB (@lem8387983 A B f g lt2 _114230 x) (@lem8387991 A B f g lt2 _114230 x)). Qed.
Lemma lem8387994 {A : Type'} (x : A) : (x = x) = True.
Proof. exact (EQ_MP (@lem20665 A x) (@lem20664 A x)). Qed.
Lemma lem8387995 (x : Prop) : (x = x) = True.
Proof. exact (@lem8387994 Prop x). Qed.
Lemma lem8387996 {A B : Type'} (f : A -> B) (g : A -> B) (lt2 : type1402 A) (_114230 : A) (x : A) : ((term3398 A B f g lt2 _114230 x) = (term3398 A B f g lt2 _114230 x)) = True.
Proof. exact (@lem8387995 (term3398 A B f g lt2 _114230 x)). Qed.
Lemma lem8387997 {A B : Type'} (f : A -> B) (g : A -> B) (lt2 : type1402 A) (_114230 : A) (x : A) : ((term2912 A B lt2 x f g _114230) = (term3398 A B f g lt2 _114230 x)) = True.
Proof. exact (TRANS (@lem8387992 A B f g lt2 _114230 x) (@lem8387996 A B f g lt2 _114230 x)). Qed.
Lemma lem8387998 {A B : Type'} (f : A -> B) (g : A -> B) (lt2 : type1402 A) (_114230 : A) (x : A) : True = ((term2912 A B lt2 x f g _114230) = (term3398 A B f g lt2 _114230 x)).
Proof. exact (SYM (@lem8387997 A B f g lt2 _114230 x)). Qed.
Lemma lem8387999 {A B : Type'} (f : A -> B) (g : A -> B) (lt2 : type1402 A) (_114230 : A) (x : A) : (term2912 A B lt2 x f g _114230) = (term3398 A B f g lt2 _114230 x).
Proof. exact (EQ_MP (@lem8387998 A B f g lt2 _114230 x) (@lem0)). Qed.
Lemma lem8388000 {A B P : Type'} (_114230 : A) (s : P -> A) (lt2 : type1402 A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (H1 : type549 A B) (g : A -> B) (x : A) (h1 : term2917 A B P s lt2 P1 G1 f H1 g x) : term3398 A B f g lt2 _114230 x.
Proof. exact (EQ_MP (@lem8387999 A B f g lt2 _114230 x) (@lem8381209 A B P _114230 s lt2 P1 G1 f H1 g x h1)). Qed.
Lemma lem8388002 (b : Prop) (a : Prop) : (a \/ b) = (term754 b a).
Proof. exact (EQ_MP (@lem20682 b a) (@lem20764 b a)). Qed.
Lemma lem8388003 {A B : Type'} (lt2 : type1402 A) (x : A) (f : A -> B) (g : A -> B) (_114230 : A) : (term3398 A B f g lt2 _114230 x) = (term3400 A B lt2 x f g _114230).
Proof. exact (@lem8388002 (term608 A lt2 _114230 x) ((@I (A -> B) f _114230) = (@I (A -> B) g _114230))). Qed.
Lemma lem8388005 (a : Prop) : (term47 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem8388006 {A : Type'} (lt2 : type1402 A) (_114230 : A) (x : A) : (term771 A lt2 _114230 x) = (term586 A lt2 _114230 x).
Proof. exact (@lem8388005 (term586 A lt2 _114230 x)). Qed.
Lemma lem8388007 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem8388008 {A : Type'} (lt2 : type1402 A) (_114230 : A) (x : A) : (term772 A lt2 _114230 x) = (term773 A lt2 _114230 x).
Proof. exact (MK_COMB (@lem8388007) (@lem8388006 A lt2 _114230 x)). Qed.
Lemma lem8388009 {A B : Type'} (f : A -> B) (g : A -> B) (_114230 : A) : ((@I (A -> B) f _114230) = (@I (A -> B) g _114230)) = ((@I (A -> B) f _114230) = (@I (A -> B) g _114230)).
Proof. exact (eq_refl ((@I (A -> B) f _114230) = (@I (A -> B) g _114230))). Qed.
Lemma lem8388010 {A B : Type'} (lt2 : type1402 A) (x : A) (f : A -> B) (g : A -> B) (_114230 : A) : (term3400 A B lt2 x f g _114230) = (term3401 A B lt2 x f g _114230).
Proof. exact (MK_COMB (@lem8388008 A lt2 _114230 x) (@lem8388009 A B f g _114230)). Qed.
Lemma lem8388011 {A B : Type'} (lt2 : type1402 A) (x : A) (f : A -> B) (g : A -> B) (_114230 : A) : (term3398 A B f g lt2 _114230 x) = (term3401 A B lt2 x f g _114230).
Proof. exact (TRANS (@lem8388003 A B lt2 x f g _114230) (@lem8388010 A B lt2 x f g _114230)). Qed.
Lemma lem8388014 {A B P : Type'} (_114230 : A) (s : P -> A) (lt2 : type1402 A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (H1 : type549 A B) (g : A -> B) (x : A) (h1 : term2917 A B P s lt2 P1 G1 f H1 g x) : term3401 A B lt2 x f g _114230.
Proof. exact (EQ_MP (@lem8388011 A B lt2 x f g _114230) (@lem8388000 A B P _114230 s lt2 P1 G1 f H1 g x h1)). Qed.
Lemma lem8388015 {A B P : Type'} (_114230 : A) (s : P -> A) (lt2 : type1402 A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (H1 : type549 A B) (g : A -> B) (x : A) (h1 : term2917 A B P s lt2 P1 G1 f H1 g x) : term3401 A B lt2 x f g _114230.
Proof. exact (@lem8388014 A B P _114230 s lt2 P1 G1 f H1 g x h1). Qed.
Lemma lem8388016 {A B P : Type'} (z' : type515 A B) (s : P -> A) (lt2 : type1402 A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (H1 : type549 A B) (g : A -> B) (x : A) (h1 : term2917 A B P s lt2 P1 G1 f H1 g x) : term3402 A B lt2 z' f g x.
Proof. exact (@lem8388015 A B P (term3019 A B z' f g x) s lt2 P1 G1 f H1 g x h1). Qed.
Lemma lem8388019 {A B P : Type'} (z' : type515 A B) (s : P -> A) (lt2 : type1402 A) (G1 : type548 A B) (H1 : type549 A B) (f : A -> B) (P1 : type551 A B) (g : A -> B) (x : A) (h1 : term2129 A B lt2 z' P1 G1 H1) (h2 : term2830 A B P1 f x) (h3 : term2917 A B P s lt2 P1 G1 f H1 g x) (h4 : term2903 A B f P1 g x) : (term3022 A B z' f g x) = (term3025 A B z' f g x).
Proof. exact (@lem8388016 A B P z' s lt2 P1 G1 f H1 g x h3 (@lem8387967 A B lt2 z' G1 H1 f P1 g x h1 h2 h4)). Qed.
Lemma lem8388020 {A B P : Type'} (z' : type515 A B) (s : P -> A) (lt2 : type1402 A) (G1 : type548 A B) (H1 : type549 A B) (f : A -> B) (P1 : type551 A B) (g : A -> B) (x : A) (h1 : term2129 A B lt2 z' P1 G1 H1) (h2 : term2830 A B P1 f x) (h3 : term2917 A B P s lt2 P1 G1 f H1 g x) (h4 : term2903 A B f P1 g x) : term3403 A B z' f g x.
Proof. exact (fun h0 : term3029 A B z' f g x => @lem8388019 A B P z' s lt2 G1 H1 f P1 g x h1 h2 h3 h4). Qed.
Lemma lem8388022 (p : Prop) : (term748 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8388023 {A B : Type'} (z' : type515 A B) (f : A -> B) (g : A -> B) (x : A) : (term3403 A B z' f g x) = ((term3022 A B z' f g x) = (term3025 A B z' f g x)).
Proof. exact (@lem8388022 ((term3022 A B z' f g x) = (term3025 A B z' f g x))). Qed.
Lemma lem8388024 {A B P : Type'} (z' : type515 A B) (s : P -> A) (lt2 : type1402 A) (G1 : type548 A B) (H1 : type549 A B) (f : A -> B) (P1 : type551 A B) (g : A -> B) (x : A) (h1 : term2129 A B lt2 z' P1 G1 H1) (h2 : term2830 A B P1 f x) (h3 : term2917 A B P s lt2 P1 G1 f H1 g x) (h4 : term2903 A B f P1 g x) : (term3022 A B z' f g x) = (term3025 A B z' f g x).
Proof. exact (EQ_MP (@lem8388023 A B z' f g x) (@lem8388020 A B P z' s lt2 G1 H1 f P1 g x h1 h2 h3 h4)). Qed.
Lemma lem8388026 {A B : Type'} (f : A -> B) (P1 : type551 A B) (g : A -> B) (x : A) (h1 : term2903 A B f P1 g x) : term2828 A B P1 g x.
Proof. exact (proj2 (@lem8375521 A B f P1 g x h1)). Qed.
Lemma lem8388027 {A B : Type'} (f : A -> B) (P1 : type551 A B) (g : A -> B) (x : A) (h1 : term2903 A B f P1 g x) : term3386 A B P1 g x.
Proof. exact (fun h0 : term2830 A B P1 g x => @lem8388026 A B f P1 g x h1). Qed.
Lemma lem8388029 (p : Prop) : (term748 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8388030 {A B : Type'} (P1 : type551 A B) (g : A -> B) (x : A) : (term3386 A B P1 g x) = (term2828 A B P1 g x).
Proof. exact (@lem8388029 (term2828 A B P1 g x)). Qed.
Lemma lem8388031 {A B : Type'} (f : A -> B) (P1 : type551 A B) (g : A -> B) (x : A) (h1 : term2903 A B f P1 g x) : term2828 A B P1 g x.
Proof. exact (EQ_MP (@lem8388030 A B P1 g x) (@lem8388027 A B f P1 g x h1)). Qed.
Lemma lem8388037 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem8388038 {A B : Type'} (z' : type515 A B) (_114218 : A -> B) (P1 : type551 A B) (_114219 : A -> B) (_114220 : A) : (term3148 A B z' _114218 P1 _114219 _114220) = (term3427 A B z' _114218 P1 _114219 _114220).
Proof. exact (@lem8388037 (term2828 A B P1 _114218 _114220) (term3029 A B z' _114218 _114219 _114220) (term2830 A B P1 _114219 _114220)). Qed.
Lemma lem8388056 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8388057 {A B : Type'} (z' : type515 A B) (_114218 : A -> B) (P1 : type551 A B) (_114219 : A -> B) (_114220 : A) : (term3428 A B z' _114218 P1 _114219 _114220) = (term3429 A B z' _114218 P1 _114219 _114220).
Proof. exact (MK_COMB (@lem8388056) (@lem8388038 A B z' _114218 P1 _114219 _114220)). Qed.
Lemma lem8388075 {A B : Type'} (z' : type515 A B) (_114218 : A -> B) (P1 : type551 A B) (_114219 : A -> B) (_114220 : A) : (term3427 A B z' _114218 P1 _114219 _114220) = (term3427 A B z' _114218 P1 _114219 _114220).
Proof. exact (eq_refl (term3427 A B z' _114218 P1 _114219 _114220)). Qed.
Lemma lem8388076 {A B : Type'} (z' : type515 A B) (_114218 : A -> B) (P1 : type551 A B) (_114219 : A -> B) (_114220 : A) : ((term3148 A B z' _114218 P1 _114219 _114220) = (term3427 A B z' _114218 P1 _114219 _114220)) = ((term3427 A B z' _114218 P1 _114219 _114220) = (term3427 A B z' _114218 P1 _114219 _114220)).
Proof. exact (MK_COMB (@lem8388057 A B z' _114218 P1 _114219 _114220) (@lem8388075 A B z' _114218 P1 _114219 _114220)). Qed.
Lemma lem8388078 {A : Type'} (x : A) : (x = x) = True.
Proof. exact (EQ_MP (@lem20665 A x) (@lem20664 A x)). Qed.
Lemma lem8388079 (x : Prop) : (x = x) = True.
Proof. exact (@lem8388078 Prop x). Qed.
Lemma lem8388080 {A B : Type'} (z' : type515 A B) (_114218 : A -> B) (P1 : type551 A B) (_114219 : A -> B) (_114220 : A) : ((term3427 A B z' _114218 P1 _114219 _114220) = (term3427 A B z' _114218 P1 _114219 _114220)) = True.
Proof. exact (@lem8388079 (term3427 A B z' _114218 P1 _114219 _114220)). Qed.
Lemma lem8388081 {A B : Type'} (z' : type515 A B) (_114218 : A -> B) (P1 : type551 A B) (_114219 : A -> B) (_114220 : A) : ((term3148 A B z' _114218 P1 _114219 _114220) = (term3427 A B z' _114218 P1 _114219 _114220)) = True.
Proof. exact (TRANS (@lem8388076 A B z' _114218 P1 _114219 _114220) (@lem8388080 A B z' _114218 P1 _114219 _114220)). Qed.
Lemma lem8388082 {A B : Type'} (z' : type515 A B) (_114218 : A -> B) (P1 : type551 A B) (_114219 : A -> B) (_114220 : A) : True = ((term3148 A B z' _114218 P1 _114219 _114220) = (term3427 A B z' _114218 P1 _114219 _114220)).
Proof. exact (SYM (@lem8388081 A B z' _114218 P1 _114219 _114220)). Qed.
Lemma lem8388083 {A B : Type'} (z' : type515 A B) (_114218 : A -> B) (P1 : type551 A B) (_114219 : A -> B) (_114220 : A) : (term3148 A B z' _114218 P1 _114219 _114220) = (term3427 A B z' _114218 P1 _114219 _114220).
Proof. exact (EQ_MP (@lem8388082 A B z' _114218 P1 _114219 _114220) (@lem0)). Qed.
Lemma lem8388084 {A B : Type'} (_114218 : A -> B) (_114219 : A -> B) (_114220 : A) (lt2 : type1402 A) (z' : type515 A B) (P1 : type551 A B) (G1 : type548 A B) (H1 : type549 A B) (h1 : term2129 A B lt2 z' P1 G1 H1) : term3427 A B z' _114218 P1 _114219 _114220.
Proof. exact (EQ_MP (@lem8388083 A B z' _114218 P1 _114219 _114220) (@lem8381277 A B _114218 _114219 _114220 lt2 z' P1 G1 H1 h1)). Qed.
Lemma lem8388086 (b : Prop) (a : Prop) : (a \/ b) = (term754 b a).
Proof. exact (EQ_MP (@lem20682 b a) (@lem20764 b a)). Qed.
Lemma lem8388087 {A B : Type'} (z' : type515 A B) (_114219 : A -> B) (P1 : type551 A B) (_114218 : A -> B) (_114220 : A) : (term3427 A B z' _114218 P1 _114219 _114220) = (term3430 A B z' _114219 P1 _114218 _114220).
Proof. exact (@lem8388086 (term3431 A B z' _114218 P1 _114219 _114220) (term2828 A B P1 _114218 _114220)). Qed.
Lemma lem8388089 (a : Prop) (b : Prop) : (term756 a b) = (term757 a b).
Proof. exact (EQ_MP (@lem20789 a b) (@lem20895 a b)). Qed.
Lemma lem8388090 {A B : Type'} (z' : type515 A B) (_114218 : A -> B) (P1 : type551 A B) (_114219 : A -> B) (_114220 : A) : (term3432 A B z' _114218 P1 _114219 _114220) = (term3433 A B z' _114218 P1 _114219 _114220).
Proof. exact (@lem8388089 (term3029 A B z' _114218 _114219 _114220) (term2830 A B P1 _114219 _114220)). Qed.
Lemma lem8388092 (a : Prop) : (term47 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem8388093 {A B : Type'} (z' : type515 A B) (_114218 : A -> B) (_114219 : A -> B) (_114220 : A) : (term3413 A B z' _114218 _114219 _114220) = ((term3022 A B z' _114218 _114219 _114220) = (term3025 A B z' _114218 _114219 _114220)).
Proof. exact (@lem8388092 ((term3022 A B z' _114218 _114219 _114220) = (term3025 A B z' _114218 _114219 _114220))). Qed.
Lemma lem8388094 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8388095 {A B : Type'} (z' : type515 A B) (_114218 : A -> B) (_114219 : A -> B) (_114220 : A) : (term3414 A B z' _114218 _114219 _114220) = (term3415 A B z' _114218 _114219 _114220).
Proof. exact (MK_COMB (@lem8388094) (@lem8388093 A B z' _114218 _114219 _114220)). Qed.
Lemma lem8388097 (a : Prop) : (term47 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem8388098 {A B : Type'} (P1 : type551 A B) (_114219 : A -> B) (_114220 : A) : (term3391 A B P1 _114219 _114220) = (term2828 A B P1 _114219 _114220).
Proof. exact (@lem8388097 (term2828 A B P1 _114219 _114220)). Qed.
Lemma lem8388099 {A B : Type'} (z' : type515 A B) (_114218 : A -> B) (P1 : type551 A B) (_114219 : A -> B) (_114220 : A) : (term3433 A B z' _114218 P1 _114219 _114220) = (term3434 A B z' _114218 P1 _114219 _114220).
Proof. exact (MK_COMB (@lem8388095 A B z' _114218 _114219 _114220) (@lem8388098 A B P1 _114219 _114220)). Qed.
Lemma lem8388100 {A B : Type'} (z' : type515 A B) (_114218 : A -> B) (P1 : type551 A B) (_114219 : A -> B) (_114220 : A) : (term3432 A B z' _114218 P1 _114219 _114220) = (term3434 A B z' _114218 P1 _114219 _114220).
Proof. exact (TRANS (@lem8388090 A B z' _114218 P1 _114219 _114220) (@lem8388099 A B z' _114218 P1 _114219 _114220)). Qed.
Lemma lem8388101 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem8388102 {A B : Type'} (z' : type515 A B) (_114218 : A -> B) (P1 : type551 A B) (_114219 : A -> B) (_114220 : A) : (term3435 A B z' _114218 P1 _114219 _114220) = (term3436 A B z' _114218 P1 _114219 _114220).
Proof. exact (MK_COMB (@lem8388101) (@lem8388100 A B z' _114218 P1 _114219 _114220)). Qed.
Lemma lem8388103 {A B : Type'} (P1 : type551 A B) (_114218 : A -> B) (_114220 : A) : (term2828 A B P1 _114218 _114220) = (term2828 A B P1 _114218 _114220).
Proof. exact (eq_refl (term2828 A B P1 _114218 _114220)). Qed.
Lemma lem8388104 {A B : Type'} (z' : type515 A B) (_114219 : A -> B) (P1 : type551 A B) (_114218 : A -> B) (_114220 : A) : (term3430 A B z' _114219 P1 _114218 _114220) = (term3437 A B z' _114219 P1 _114218 _114220).
Proof. exact (MK_COMB (@lem8388102 A B z' _114218 P1 _114219 _114220) (@lem8388103 A B P1 _114218 _114220)). Qed.
Lemma lem8388105 {A B : Type'} (z' : type515 A B) (_114219 : A -> B) (P1 : type551 A B) (_114218 : A -> B) (_114220 : A) : (term3427 A B z' _114218 P1 _114219 _114220) = (term3437 A B z' _114219 P1 _114218 _114220).
Proof. exact (TRANS (@lem8388087 A B z' _114219 P1 _114218 _114220) (@lem8388104 A B z' _114219 P1 _114218 _114220)). Qed.
Lemma lem8388107 {A B P : Type'} (z' : type515 A B) (s : P -> A) (lt2 : type1402 A) (G1 : type548 A B) (H1 : type549 A B) (f : A -> B) (P1 : type551 A B) (g : A -> B) (x : A) (h1 : term2129 A B lt2 z' P1 G1 H1) (h2 : term2830 A B P1 f x) (h3 : term2917 A B P s lt2 P1 G1 f H1 g x) (h4 : term2903 A B f P1 g x) : term3434 A B z' f P1 g x.
Proof. exact (conj (@lem8388024 A B P z' s lt2 G1 H1 f P1 g x h1 h2 h3 h4) (@lem8388031 A B f P1 g x h4)). Qed.
Lemma lem8388109 {A B : Type'} (_114219 : A -> B) (_114218 : A -> B) (_114220 : A) (lt2 : type1402 A) (z' : type515 A B) (P1 : type551 A B) (G1 : type548 A B) (H1 : type549 A B) (h1 : term2129 A B lt2 z' P1 G1 H1) : term3437 A B z' _114219 P1 _114218 _114220.
Proof. exact (EQ_MP (@lem8388105 A B z' _114219 P1 _114218 _114220) (@lem8388084 A B _114218 _114219 _114220 lt2 z' P1 G1 H1 h1)). Qed.
Lemma lem8388110 {A B : Type'} (_114219 : A -> B) (_114218 : A -> B) (_114220 : A) (lt2 : type1402 A) (z' : type515 A B) (P1 : type551 A B) (G1 : type548 A B) (H1 : type549 A B) (h1 : term2129 A B lt2 z' P1 G1 H1) : term3437 A B z' _114219 P1 _114218 _114220.
Proof. exact (@lem8388109 A B _114219 _114218 _114220 lt2 z' P1 G1 H1 h1). Qed.
Lemma lem8388111 {A B : Type'} (g : A -> B) (f : A -> B) (x : A) (lt2 : type1402 A) (z' : type515 A B) (P1 : type551 A B) (G1 : type548 A B) (H1 : type549 A B) (h1 : term2129 A B lt2 z' P1 G1 H1) : term3437 A B z' g P1 f x.
Proof. exact (@lem8388110 A B g f x lt2 z' P1 G1 H1 h1). Qed.
Lemma lem8388114 {A B P : Type'} (z' : type515 A B) (s : P -> A) (lt2 : type1402 A) (G1 : type548 A B) (H1 : type549 A B) (f : A -> B) (P1 : type551 A B) (g : A -> B) (x : A) (h1 : term2129 A B lt2 z' P1 G1 H1) (h2 : term2830 A B P1 f x) (h3 : term2917 A B P s lt2 P1 G1 f H1 g x) (h4 : term2903 A B f P1 g x) : term2828 A B P1 f x.
Proof. exact (@lem8388111 A B g f x lt2 z' P1 G1 H1 h1 (@lem8388107 A B P z' s lt2 G1 H1 f P1 g x h1 h2 h3 h4)). Qed.
Lemma lem8388115 {A B P : Type'} (z' : type515 A B) (s : P -> A) (lt2 : type1402 A) (G1 : type548 A B) (H1 : type549 A B) (f : A -> B) (P1 : type551 A B) (g : A -> B) (x : A) (h1 : term2129 A B lt2 z' P1 G1 H1) (h2 : term2917 A B P s lt2 P1 G1 f H1 g x) (h3 : term2903 A B f P1 g x) : term3386 A B P1 f x.
Proof. exact (fun h0 : term2830 A B P1 f x => @lem8388114 A B P z' s lt2 G1 H1 f P1 g x h1 h0 h2 h3). Qed.
Lemma lem8388117 (p : Prop) : (term748 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8388118 {A B : Type'} (P1 : type551 A B) (f : A -> B) (x : A) : (term3386 A B P1 f x) = (term2828 A B P1 f x).
Proof. exact (@lem8388117 (term2828 A B P1 f x)). Qed.
Lemma lem8388119 {A B P : Type'} (z' : type515 A B) (s : P -> A) (lt2 : type1402 A) (G1 : type548 A B) (H1 : type549 A B) (f : A -> B) (P1 : type551 A B) (g : A -> B) (x : A) (h1 : term2129 A B lt2 z' P1 G1 H1) (h2 : term2917 A B P s lt2 P1 G1 f H1 g x) (h3 : term2903 A B f P1 g x) : term2828 A B P1 f x.
Proof. exact (EQ_MP (@lem8388118 A B P1 f x) (@lem8388115 A B P z' s lt2 G1 H1 f P1 g x h1 h2 h3)). Qed.
Lemma lem8388122 (p : Prop) : (~ p) = (p -> False).
Proof. exact (EQ_MP (@lem21021 p) (@lem0)). Qed.
Lemma lem8388124 {A B : Type'} (P1 : type551 A B) (f : A -> B) (x : A) : (term2830 A B P1 f x) = (term3420 A B P1 f x).
Proof. exact (@lem8388122 (term2828 A B P1 f x)). Qed.
Lemma lem8388127 {A B : Type'} (f : A -> B) (P1 : type551 A B) (g : A -> B) (x : A) (h1 : term2903 A B f P1 g x) : term3420 A B P1 f x.
Proof. exact (EQ_MP (@lem8388124 A B P1 f x) (@lem8381211 A B f P1 g x h1)). Qed.
Lemma lem8388130 {A B P : Type'} (z' : type515 A B) (s : P -> A) (lt2 : type1402 A) (G1 : type548 A B) (H1 : type549 A B) (f : A -> B) (P1 : type551 A B) (g : A -> B) (x : A) (h1 : term2129 A B lt2 z' P1 G1 H1) (h2 : term2917 A B P s lt2 P1 G1 f H1 g x) (h3 : term2903 A B f P1 g x) : False.
Proof. exact (@lem8388127 A B f P1 g x h3 (@lem8388119 A B P z' s lt2 G1 H1 f P1 g x h1 h2 h3)). Qed.
Lemma lem8388131 {A B P : Type'} (z' : type515 A B) (s : P -> A) (lt2 : type1402 A) (G1 : type548 A B) (H1 : type549 A B) (f : A -> B) (P1 : type551 A B) (g : A -> B) (x : A) (h1 : term2129 A B lt2 z' P1 G1 H1) (h2 : term2917 A B P s lt2 P1 G1 f H1 g x) (h3 : term2903 A B f P1 g x) : term750.
Proof. exact (fun h0 : ~ False => @lem8388130 A B P z' s lt2 G1 H1 f P1 g x h1 h2 h3). Qed.
Lemma lem8388133 (p : Prop) : (term748 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8388134 : term750 = False.
Proof. exact (@lem8388133 False). Qed.
Lemma lem8388135 {A B P : Type'} (z' : type515 A B) (s : P -> A) (lt2 : type1402 A) (G1 : type548 A B) (H1 : type549 A B) (f : A -> B) (P1 : type551 A B) (g : A -> B) (x : A) (h1 : term2129 A B lt2 z' P1 G1 H1) (h2 : term2917 A B P s lt2 P1 G1 f H1 g x) (h3 : term2903 A B f P1 g x) : False.
Proof. exact (EQ_MP (@lem8388134) (@lem8388131 A B P z' s lt2 G1 H1 f P1 g x h1 h2 h3)). Qed.
Lemma lem8388460 {A B : Type'} (f : A -> B) (G1 : type548 A B) (g : A -> B) (x : A) (h1 : term2896 A B f G1 g x) : term2896 A B f G1 g x.
Proof. exact (h1). Qed.
Lemma lem8388461 {A B : Type'} (f : A -> B) (G1 : type548 A B) (g : A -> B) (x : A) (h1 : term2896 A B f G1 g x) : term3438 A B f G1 g x.
Proof. exact (fun h0 : (term2822 A B G1 f x) = (term2822 A B G1 g x) => @lem8388460 A B f G1 g x h1). Qed.
Lemma lem8388463 (p : Prop) : (term753 p) = (~ p).
Proof. exact (EQ_MP (@lem21028 p) (@lem21107 p)). Qed.
Lemma lem8388464 {A B : Type'} (f : A -> B) (G1 : type548 A B) (g : A -> B) (x : A) : (term3438 A B f G1 g x) = (term2896 A B f G1 g x).
Proof. exact (@lem8388463 ((term2822 A B G1 f x) = (term2822 A B G1 g x))). Qed.
Lemma lem8388465 {A B : Type'} (f : A -> B) (G1 : type548 A B) (g : A -> B) (x : A) (h1 : term2896 A B f G1 g x) : term2896 A B f G1 g x.
Proof. exact (EQ_MP (@lem8388464 A B f G1 g x) (@lem8388461 A B f G1 g x h1)). Qed.
Lemma lem8388467 (b : Prop) (a : Prop) : (a \/ b) = (term754 b a).
Proof. exact (EQ_MP (@lem20682 b a) (@lem20764 b a)). Qed.
Lemma lem8388470 {A B : Type'} (G1 : type548 A B) (lt2 : type1402 A) (z' : type515 A B) (_114243 : A -> B) (_114244 : A -> B) (_114245 : A) : (term3149 A B lt2 z' _114243 G1 _114244 _114245) = (term3439 A B G1 lt2 z' _114243 _114244 _114245).
Proof. exact (@lem8388467 ((term2822 A B G1 _114243 _114245) = (term2822 A B G1 _114244 _114245)) (term3036 A B lt2 z' _114243 _114244 _114245)). Qed.
Lemma lem8388473 {A B : Type'} (_114243 : A -> B) (_114244 : A -> B) (_114245 : A) (lt2 : type1402 A) (z' : type515 A B) (P1 : type551 A B) (G1 : type548 A B) (H1 : type549 A B) (h1 : term2129 A B lt2 z' P1 G1 H1) : term3439 A B G1 lt2 z' _114243 _114244 _114245.
Proof. exact (EQ_MP (@lem8388470 A B G1 lt2 z' _114243 _114244 _114245) (@lem8381423 A B _114243 _114244 _114245 lt2 z' P1 G1 H1 h1)). Qed.
Lemma lem8388474 {A B : Type'} (_114243 : A -> B) (_114244 : A -> B) (_114245 : A) (lt2 : type1402 A) (z' : type515 A B) (P1 : type551 A B) (G1 : type548 A B) (H1 : type549 A B) (h1 : term2129 A B lt2 z' P1 G1 H1) : term3439 A B G1 lt2 z' _114243 _114244 _114245.
Proof. exact (@lem8388473 A B _114243 _114244 _114245 lt2 z' P1 G1 H1 h1). Qed.
Lemma lem8388475 {A B : Type'} (f : A -> B) (g : A -> B) (x : A) (lt2 : type1402 A) (z' : type515 A B) (P1 : type551 A B) (G1 : type548 A B) (H1 : type549 A B) (h1 : term2129 A B lt2 z' P1 G1 H1) : term3439 A B G1 lt2 z' f g x.
Proof. exact (@lem8388474 A B f g x lt2 z' P1 G1 H1 h1). Qed.
Lemma lem8388478 {A B : Type'} (lt2 : type1402 A) (z' : type515 A B) (P1 : type551 A B) (H1 : type549 A B) (f : A -> B) (G1 : type548 A B) (g : A -> B) (x : A) (h1 : term2129 A B lt2 z' P1 G1 H1) (h2 : term2896 A B f G1 g x) : term3036 A B lt2 z' f g x.
Proof. exact (@lem8388475 A B f g x lt2 z' P1 G1 H1 h1 (@lem8388465 A B f G1 g x h2)). Qed.
Lemma lem8388479 {A B : Type'} (lt2 : type1402 A) (z' : type515 A B) (P1 : type551 A B) (H1 : type549 A B) (f : A -> B) (G1 : type548 A B) (g : A -> B) (x : A) (h1 : term2129 A B lt2 z' P1 G1 H1) (h2 : term2896 A B f G1 g x) : term3396 A B lt2 z' f g x.
Proof. exact (fun h0 : term3397 A B lt2 z' f g x => @lem8388478 A B lt2 z' P1 H1 f G1 g x h1 h2). Qed.
Lemma lem8388481 (p : Prop) : (term748 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8388482 {A B : Type'} (lt2 : type1402 A) (z' : type515 A B) (f : A -> B) (g : A -> B) (x : A) : (term3396 A B lt2 z' f g x) = (term3036 A B lt2 z' f g x).
Proof. exact (@lem8388481 (term3036 A B lt2 z' f g x)). Qed.
Lemma lem8388483 {A B : Type'} (lt2 : type1402 A) (z' : type515 A B) (P1 : type551 A B) (H1 : type549 A B) (f : A -> B) (G1 : type548 A B) (g : A -> B) (x : A) (h1 : term2129 A B lt2 z' P1 G1 H1) (h2 : term2896 A B f G1 g x) : term3036 A B lt2 z' f g x.
Proof. exact (EQ_MP (@lem8388482 A B lt2 z' f g x) (@lem8388479 A B lt2 z' P1 H1 f G1 g x h1 h2)). Qed.
Lemma lem8388489 (q : Prop) (p : Prop) : (p \/ q) = (q \/ p).
Proof. exact (proj1 (@lem827 (@el Prop) p q)). Qed.
Lemma lem8388490 {A B : Type'} (f : A -> B) (g : A -> B) (lt2 : type1402 A) (_114255 : A) (x : A) : (term2912 A B lt2 x f g _114255) = (term3398 A B f g lt2 _114255 x).
Proof. exact (@lem8388489 ((@I (A -> B) f _114255) = (@I (A -> B) g _114255)) (term608 A lt2 _114255 x)). Qed.
Lemma lem8388498 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8388499 {A B : Type'} (f : A -> B) (g : A -> B) (lt2 : type1402 A) (_114255 : A) (x : A) : (term3160 A B lt2 x f g _114255) = (term3399 A B f g lt2 _114255 x).
Proof. exact (MK_COMB (@lem8388498) (@lem8388490 A B f g lt2 _114255 x)). Qed.
Lemma lem8388507 {A B : Type'} (f : A -> B) (g : A -> B) (lt2 : type1402 A) (_114255 : A) (x : A) : (term3398 A B f g lt2 _114255 x) = (term3398 A B f g lt2 _114255 x).
Proof. exact (eq_refl (term3398 A B f g lt2 _114255 x)). Qed.
Lemma lem8388508 {A B : Type'} (f : A -> B) (g : A -> B) (lt2 : type1402 A) (_114255 : A) (x : A) : ((term2912 A B lt2 x f g _114255) = (term3398 A B f g lt2 _114255 x)) = ((term3398 A B f g lt2 _114255 x) = (term3398 A B f g lt2 _114255 x)).
Proof. exact (MK_COMB (@lem8388499 A B f g lt2 _114255 x) (@lem8388507 A B f g lt2 _114255 x)). Qed.
Lemma lem8388510 {A : Type'} (x : A) : (x = x) = True.
Proof. exact (EQ_MP (@lem20665 A x) (@lem20664 A x)). Qed.
Lemma lem8388511 (x : Prop) : (x = x) = True.
Proof. exact (@lem8388510 Prop x). Qed.
Lemma lem8388512 {A B : Type'} (f : A -> B) (g : A -> B) (lt2 : type1402 A) (_114255 : A) (x : A) : ((term3398 A B f g lt2 _114255 x) = (term3398 A B f g lt2 _114255 x)) = True.
Proof. exact (@lem8388511 (term3398 A B f g lt2 _114255 x)). Qed.
Lemma lem8388513 {A B : Type'} (f : A -> B) (g : A -> B) (lt2 : type1402 A) (_114255 : A) (x : A) : ((term2912 A B lt2 x f g _114255) = (term3398 A B f g lt2 _114255 x)) = True.
Proof. exact (TRANS (@lem8388508 A B f g lt2 _114255 x) (@lem8388512 A B f g lt2 _114255 x)). Qed.
Lemma lem8388514 {A B : Type'} (f : A -> B) (g : A -> B) (lt2 : type1402 A) (_114255 : A) (x : A) : True = ((term2912 A B lt2 x f g _114255) = (term3398 A B f g lt2 _114255 x)).
Proof. exact (SYM (@lem8388513 A B f g lt2 _114255 x)). Qed.
Lemma lem8388515 {A B : Type'} (f : A -> B) (g : A -> B) (lt2 : type1402 A) (_114255 : A) (x : A) : (term2912 A B lt2 x f g _114255) = (term3398 A B f g lt2 _114255 x).
Proof. exact (EQ_MP (@lem8388514 A B f g lt2 _114255 x) (@lem0)). Qed.
Lemma lem8388516 {A B P : Type'} (_114255 : A) (s : P -> A) (lt2 : type1402 A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (H1 : type549 A B) (g : A -> B) (x : A) (h1 : term2917 A B P s lt2 P1 G1 f H1 g x) : term3398 A B f g lt2 _114255 x.
Proof. exact (EQ_MP (@lem8388515 A B f g lt2 _114255 x) (@lem8381403 A B P _114255 s lt2 P1 G1 f H1 g x h1)). Qed.
Lemma lem8388518 (b : Prop) (a : Prop) : (a \/ b) = (term754 b a).
Proof. exact (EQ_MP (@lem20682 b a) (@lem20764 b a)). Qed.
Lemma lem8388519 {A B : Type'} (lt2 : type1402 A) (x : A) (f : A -> B) (g : A -> B) (_114255 : A) : (term3398 A B f g lt2 _114255 x) = (term3400 A B lt2 x f g _114255).
Proof. exact (@lem8388518 (term608 A lt2 _114255 x) ((@I (A -> B) f _114255) = (@I (A -> B) g _114255))). Qed.
Lemma lem8388521 (a : Prop) : (term47 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem8388522 {A : Type'} (lt2 : type1402 A) (_114255 : A) (x : A) : (term771 A lt2 _114255 x) = (term586 A lt2 _114255 x).
Proof. exact (@lem8388521 (term586 A lt2 _114255 x)). Qed.
Lemma lem8388523 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem8388524 {A : Type'} (lt2 : type1402 A) (_114255 : A) (x : A) : (term772 A lt2 _114255 x) = (term773 A lt2 _114255 x).
Proof. exact (MK_COMB (@lem8388523) (@lem8388522 A lt2 _114255 x)). Qed.
Lemma lem8388525 {A B : Type'} (f : A -> B) (g : A -> B) (_114255 : A) : ((@I (A -> B) f _114255) = (@I (A -> B) g _114255)) = ((@I (A -> B) f _114255) = (@I (A -> B) g _114255)).
Proof. exact (eq_refl ((@I (A -> B) f _114255) = (@I (A -> B) g _114255))). Qed.
Lemma lem8388526 {A B : Type'} (lt2 : type1402 A) (x : A) (f : A -> B) (g : A -> B) (_114255 : A) : (term3400 A B lt2 x f g _114255) = (term3401 A B lt2 x f g _114255).
Proof. exact (MK_COMB (@lem8388524 A lt2 _114255 x) (@lem8388525 A B f g _114255)). Qed.
Lemma lem8388527 {A B : Type'} (lt2 : type1402 A) (x : A) (f : A -> B) (g : A -> B) (_114255 : A) : (term3398 A B f g lt2 _114255 x) = (term3401 A B lt2 x f g _114255).
Proof. exact (TRANS (@lem8388519 A B lt2 x f g _114255) (@lem8388526 A B lt2 x f g _114255)). Qed.
Lemma lem8388530 {A B P : Type'} (_114255 : A) (s : P -> A) (lt2 : type1402 A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (H1 : type549 A B) (g : A -> B) (x : A) (h1 : term2917 A B P s lt2 P1 G1 f H1 g x) : term3401 A B lt2 x f g _114255.
Proof. exact (EQ_MP (@lem8388527 A B lt2 x f g _114255) (@lem8388516 A B P _114255 s lt2 P1 G1 f H1 g x h1)). Qed.
Lemma lem8388531 {A B P : Type'} (_114255 : A) (s : P -> A) (lt2 : type1402 A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (H1 : type549 A B) (g : A -> B) (x : A) (h1 : term2917 A B P s lt2 P1 G1 f H1 g x) : term3401 A B lt2 x f g _114255.
Proof. exact (@lem8388530 A B P _114255 s lt2 P1 G1 f H1 g x h1). Qed.
Lemma lem8388532 {A B P : Type'} (z' : type515 A B) (s : P -> A) (lt2 : type1402 A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (H1 : type549 A B) (g : A -> B) (x : A) (h1 : term2917 A B P s lt2 P1 G1 f H1 g x) : term3402 A B lt2 z' f g x.
Proof. exact (@lem8388531 A B P (term3019 A B z' f g x) s lt2 P1 G1 f H1 g x h1). Qed.
Lemma lem8388535 {A B P : Type'} (z' : type515 A B) (s : P -> A) (lt2 : type1402 A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (H1 : type549 A B) (g : A -> B) (x : A) (h1 : term2129 A B lt2 z' P1 G1 H1) (h2 : term2896 A B f G1 g x) (h3 : term2917 A B P s lt2 P1 G1 f H1 g x) : (term3022 A B z' f g x) = (term3025 A B z' f g x).
Proof. exact (@lem8388532 A B P z' s lt2 P1 G1 f H1 g x h3 (@lem8388483 A B lt2 z' P1 H1 f G1 g x h1 h2)). Qed.
Lemma lem8388536 {A B P : Type'} (z' : type515 A B) (s : P -> A) (lt2 : type1402 A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (H1 : type549 A B) (g : A -> B) (x : A) (h1 : term2129 A B lt2 z' P1 G1 H1) (h2 : term2896 A B f G1 g x) (h3 : term2917 A B P s lt2 P1 G1 f H1 g x) : term3403 A B z' f g x.
Proof. exact (fun h0 : term3029 A B z' f g x => @lem8388535 A B P z' s lt2 P1 G1 f H1 g x h1 h2 h3). Qed.
Lemma lem8388538 (p : Prop) : (term748 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8388539 {A B : Type'} (z' : type515 A B) (f : A -> B) (g : A -> B) (x : A) : (term3403 A B z' f g x) = ((term3022 A B z' f g x) = (term3025 A B z' f g x)).
Proof. exact (@lem8388538 ((term3022 A B z' f g x) = (term3025 A B z' f g x))). Qed.
Lemma lem8388540 {A B P : Type'} (z' : type515 A B) (s : P -> A) (lt2 : type1402 A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (H1 : type549 A B) (g : A -> B) (x : A) (h1 : term2129 A B lt2 z' P1 G1 H1) (h2 : term2896 A B f G1 g x) (h3 : term2917 A B P s lt2 P1 G1 f H1 g x) : (term3022 A B z' f g x) = (term3025 A B z' f g x).
Proof. exact (EQ_MP (@lem8388539 A B z' f g x) (@lem8388536 A B P z' s lt2 P1 G1 f H1 g x h1 h2 h3)). Qed.
Lemma lem8388546 (q : Prop) (p : Prop) : (p \/ q) = (q \/ p).
Proof. exact (proj1 (@lem827 (@el Prop) p q)). Qed.
Lemma lem8388547 {A B : Type'} (G1 : type548 A B) (z' : type515 A B) (_114243 : A -> B) (_114244 : A -> B) (_114245 : A) : (term3150 A B z' _114243 G1 _114244 _114245) = (term3440 A B G1 z' _114243 _114244 _114245).
Proof. exact (@lem8388546 ((term2822 A B G1 _114243 _114245) = (term2822 A B G1 _114244 _114245)) (term3029 A B z' _114243 _114244 _114245)). Qed.
Lemma lem8388557 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8388558 {A B : Type'} (G1 : type548 A B) (z' : type515 A B) (_114243 : A -> B) (_114244 : A -> B) (_114245 : A) : (term3441 A B z' _114243 G1 _114244 _114245) = (term3442 A B G1 z' _114243 _114244 _114245).
Proof. exact (MK_COMB (@lem8388557) (@lem8388547 A B G1 z' _114243 _114244 _114245)). Qed.
Lemma lem8388568 {A B : Type'} (G1 : type548 A B) (z' : type515 A B) (_114243 : A -> B) (_114244 : A -> B) (_114245 : A) : (term3440 A B G1 z' _114243 _114244 _114245) = (term3440 A B G1 z' _114243 _114244 _114245).
Proof. exact (eq_refl (term3440 A B G1 z' _114243 _114244 _114245)). Qed.
Lemma lem8388569 {A B : Type'} (G1 : type548 A B) (z' : type515 A B) (_114243 : A -> B) (_114244 : A -> B) (_114245 : A) : ((term3150 A B z' _114243 G1 _114244 _114245) = (term3440 A B G1 z' _114243 _114244 _114245)) = ((term3440 A B G1 z' _114243 _114244 _114245) = (term3440 A B G1 z' _114243 _114244 _114245)).
Proof. exact (MK_COMB (@lem8388558 A B G1 z' _114243 _114244 _114245) (@lem8388568 A B G1 z' _114243 _114244 _114245)). Qed.
Lemma lem8388571 {A : Type'} (x : A) : (x = x) = True.
Proof. exact (EQ_MP (@lem20665 A x) (@lem20664 A x)). Qed.
Lemma lem8388572 (x : Prop) : (x = x) = True.
Proof. exact (@lem8388571 Prop x). Qed.
Lemma lem8388573 {A B : Type'} (G1 : type548 A B) (z' : type515 A B) (_114243 : A -> B) (_114244 : A -> B) (_114245 : A) : ((term3440 A B G1 z' _114243 _114244 _114245) = (term3440 A B G1 z' _114243 _114244 _114245)) = True.
Proof. exact (@lem8388572 (term3440 A B G1 z' _114243 _114244 _114245)). Qed.
Lemma lem8388574 {A B : Type'} (G1 : type548 A B) (z' : type515 A B) (_114243 : A -> B) (_114244 : A -> B) (_114245 : A) : ((term3150 A B z' _114243 G1 _114244 _114245) = (term3440 A B G1 z' _114243 _114244 _114245)) = True.
Proof. exact (TRANS (@lem8388569 A B G1 z' _114243 _114244 _114245) (@lem8388573 A B G1 z' _114243 _114244 _114245)). Qed.
Lemma lem8388575 {A B : Type'} (G1 : type548 A B) (z' : type515 A B) (_114243 : A -> B) (_114244 : A -> B) (_114245 : A) : True = ((term3150 A B z' _114243 G1 _114244 _114245) = (term3440 A B G1 z' _114243 _114244 _114245)).
Proof. exact (SYM (@lem8388574 A B G1 z' _114243 _114244 _114245)). Qed.
Lemma lem8388576 {A B : Type'} (G1 : type548 A B) (z' : type515 A B) (_114243 : A -> B) (_114244 : A -> B) (_114245 : A) : (term3150 A B z' _114243 G1 _114244 _114245) = (term3440 A B G1 z' _114243 _114244 _114245).
Proof. exact (EQ_MP (@lem8388575 A B G1 z' _114243 _114244 _114245) (@lem0)). Qed.
Lemma lem8388577 {A B : Type'} (_114243 : A -> B) (_114244 : A -> B) (_114245 : A) (lt2 : type1402 A) (z' : type515 A B) (P1 : type551 A B) (G1 : type548 A B) (H1 : type549 A B) (h1 : term2129 A B lt2 z' P1 G1 H1) : term3440 A B G1 z' _114243 _114244 _114245.
Proof. exact (EQ_MP (@lem8388576 A B G1 z' _114243 _114244 _114245) (@lem8381429 A B _114243 _114244 _114245 lt2 z' P1 G1 H1 h1)). Qed.
Lemma lem8388579 (b : Prop) (a : Prop) : (a \/ b) = (term754 b a).
Proof. exact (EQ_MP (@lem20682 b a) (@lem20764 b a)). Qed.
Lemma lem8388580 {A B : Type'} (z' : type515 A B) (_114243 : A -> B) (G1 : type548 A B) (_114244 : A -> B) (_114245 : A) : (term3440 A B G1 z' _114243 _114244 _114245) = (term3443 A B z' _114243 G1 _114244 _114245).
Proof. exact (@lem8388579 (term3029 A B z' _114243 _114244 _114245) ((term2822 A B G1 _114243 _114245) = (term2822 A B G1 _114244 _114245))). Qed.
Lemma lem8388582 (a : Prop) : (term47 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem8388583 {A B : Type'} (z' : type515 A B) (_114243 : A -> B) (_114244 : A -> B) (_114245 : A) : (term3413 A B z' _114243 _114244 _114245) = ((term3022 A B z' _114243 _114244 _114245) = (term3025 A B z' _114243 _114244 _114245)).
Proof. exact (@lem8388582 ((term3022 A B z' _114243 _114244 _114245) = (term3025 A B z' _114243 _114244 _114245))). Qed.
Lemma lem8388584 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem8388585 {A B : Type'} (z' : type515 A B) (_114243 : A -> B) (_114244 : A -> B) (_114245 : A) : (term3444 A B z' _114243 _114244 _114245) = (term3445 A B z' _114243 _114244 _114245).
Proof. exact (MK_COMB (@lem8388584) (@lem8388583 A B z' _114243 _114244 _114245)). Qed.
Lemma lem8388586 {A B : Type'} (_114243 : A -> B) (G1 : type548 A B) (_114244 : A -> B) (_114245 : A) : ((term2822 A B G1 _114243 _114245) = (term2822 A B G1 _114244 _114245)) = ((term2822 A B G1 _114243 _114245) = (term2822 A B G1 _114244 _114245)).
Proof. exact (eq_refl ((term2822 A B G1 _114243 _114245) = (term2822 A B G1 _114244 _114245))). Qed.
Lemma lem8388587 {A B : Type'} (z' : type515 A B) (_114243 : A -> B) (G1 : type548 A B) (_114244 : A -> B) (_114245 : A) : (term3443 A B z' _114243 G1 _114244 _114245) = (term3446 A B z' _114243 G1 _114244 _114245).
Proof. exact (MK_COMB (@lem8388585 A B z' _114243 _114244 _114245) (@lem8388586 A B _114243 G1 _114244 _114245)). Qed.
Lemma lem8388588 {A B : Type'} (z' : type515 A B) (_114243 : A -> B) (G1 : type548 A B) (_114244 : A -> B) (_114245 : A) : (term3440 A B G1 z' _114243 _114244 _114245) = (term3446 A B z' _114243 G1 _114244 _114245).
Proof. exact (TRANS (@lem8388580 A B z' _114243 G1 _114244 _114245) (@lem8388587 A B z' _114243 G1 _114244 _114245)). Qed.
Lemma lem8388591 {A B : Type'} (_114243 : A -> B) (_114244 : A -> B) (_114245 : A) (lt2 : type1402 A) (z' : type515 A B) (P1 : type551 A B) (G1 : type548 A B) (H1 : type549 A B) (h1 : term2129 A B lt2 z' P1 G1 H1) : term3446 A B z' _114243 G1 _114244 _114245.
Proof. exact (EQ_MP (@lem8388588 A B z' _114243 G1 _114244 _114245) (@lem8388577 A B _114243 _114244 _114245 lt2 z' P1 G1 H1 h1)). Qed.
Lemma lem8388592 {A B : Type'} (_114243 : A -> B) (_114244 : A -> B) (_114245 : A) (lt2 : type1402 A) (z' : type515 A B) (P1 : type551 A B) (G1 : type548 A B) (H1 : type549 A B) (h1 : term2129 A B lt2 z' P1 G1 H1) : term3446 A B z' _114243 G1 _114244 _114245.
Proof. exact (@lem8388591 A B _114243 _114244 _114245 lt2 z' P1 G1 H1 h1). Qed.
Lemma lem8388593 {A B : Type'} (f : A -> B) (g : A -> B) (x : A) (lt2 : type1402 A) (z' : type515 A B) (P1 : type551 A B) (G1 : type548 A B) (H1 : type549 A B) (h1 : term2129 A B lt2 z' P1 G1 H1) : term3446 A B z' f G1 g x.
Proof. exact (@lem8388592 A B f g x lt2 z' P1 G1 H1 h1). Qed.
Lemma lem8388596 {A B P : Type'} (z' : type515 A B) (s : P -> A) (lt2 : type1402 A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (H1 : type549 A B) (g : A -> B) (x : A) (h1 : term2129 A B lt2 z' P1 G1 H1) (h2 : term2896 A B f G1 g x) (h3 : term2917 A B P s lt2 P1 G1 f H1 g x) : (term2822 A B G1 f x) = (term2822 A B G1 g x).
Proof. exact (@lem8388593 A B f g x lt2 z' P1 G1 H1 h1 (@lem8388540 A B P z' s lt2 P1 G1 f H1 g x h1 h2 h3)). Qed.
Lemma lem8388597 {A B P : Type'} (z' : type515 A B) (s : P -> A) (lt2 : type1402 A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (H1 : type549 A B) (g : A -> B) (x : A) (h1 : term2129 A B lt2 z' P1 G1 H1) (h2 : term2917 A B P s lt2 P1 G1 f H1 g x) : term3447 A B f G1 g x.
Proof. exact (fun h0 : term2896 A B f G1 g x => @lem8388596 A B P z' s lt2 P1 G1 f H1 g x h1 h0 h2). Qed.
Lemma lem8388599 (p : Prop) : (term748 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8388600 {A B : Type'} (f : A -> B) (G1 : type548 A B) (g : A -> B) (x : A) : (term3447 A B f G1 g x) = ((term2822 A B G1 f x) = (term2822 A B G1 g x)).
Proof. exact (@lem8388599 ((term2822 A B G1 f x) = (term2822 A B G1 g x))). Qed.
Lemma lem8388601 {A B P : Type'} (z' : type515 A B) (s : P -> A) (lt2 : type1402 A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (H1 : type549 A B) (g : A -> B) (x : A) (h1 : term2129 A B lt2 z' P1 G1 H1) (h2 : term2917 A B P s lt2 P1 G1 f H1 g x) : (term2822 A B G1 f x) = (term2822 A B G1 g x).
Proof. exact (EQ_MP (@lem8388600 A B f G1 g x) (@lem8388597 A B P z' s lt2 P1 G1 f H1 g x h1 h2)). Qed.
Lemma lem8388604 (p : Prop) : (~ p) = (p -> False).
Proof. exact (EQ_MP (@lem21021 p) (@lem0)). Qed.
Lemma lem8388606 {A B : Type'} (f : A -> B) (G1 : type548 A B) (g : A -> B) (x : A) : (term2896 A B f G1 g x) = (term3448 A B f G1 g x).
Proof. exact (@lem8388604 ((term2822 A B G1 f x) = (term2822 A B G1 g x))). Qed.
Lemma lem8388609 {A B : Type'} (f : A -> B) (G1 : type548 A B) (g : A -> B) (x : A) (h1 : term2896 A B f G1 g x) : term3448 A B f G1 g x.
Proof. exact (EQ_MP (@lem8388606 A B f G1 g x) (@lem8381405 A B f G1 g x h1)). Qed.
Lemma lem8388612 {A B P : Type'} (z' : type515 A B) (s : P -> A) (lt2 : type1402 A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (H1 : type549 A B) (g : A -> B) (x : A) (h1 : term2129 A B lt2 z' P1 G1 H1) (h2 : term2896 A B f G1 g x) (h3 : term2917 A B P s lt2 P1 G1 f H1 g x) : False.
Proof. exact (@lem8388609 A B f G1 g x h2 (@lem8388601 A B P z' s lt2 P1 G1 f H1 g x h1 h3)). Qed.
Lemma lem8388613 {A B P : Type'} (z' : type515 A B) (s : P -> A) (lt2 : type1402 A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (H1 : type549 A B) (g : A -> B) (x : A) (h1 : term2129 A B lt2 z' P1 G1 H1) (h2 : term2896 A B f G1 g x) (h3 : term2917 A B P s lt2 P1 G1 f H1 g x) : term750.
Proof. exact (fun h0 : ~ False => @lem8388612 A B P z' s lt2 P1 G1 f H1 g x h1 h2 h3). Qed.
Lemma lem8388615 (p : Prop) : (term748 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8388616 : term750 = False.
Proof. exact (@lem8388615 False). Qed.
Lemma lem8388617 {A B P : Type'} (z' : type515 A B) (s : P -> A) (lt2 : type1402 A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (H1 : type549 A B) (g : A -> B) (x : A) (h1 : term2129 A B lt2 z' P1 G1 H1) (h2 : term2896 A B f G1 g x) (h3 : term2917 A B P s lt2 P1 G1 f H1 g x) : False.
Proof. exact (EQ_MP (@lem8388616) (@lem8388613 A B P z' s lt2 P1 G1 f H1 g x h1 h2 h3)). Qed.
Lemma lem8388942 {A B : Type'} (f : A -> B) (H1 : type549 A B) (g : A -> B) (x : A) (h1 : term2893 A B f H1 g x) : term2893 A B f H1 g x.
Proof. exact (h1). Qed.
Lemma lem8388943 {A B : Type'} (f : A -> B) (H1 : type549 A B) (g : A -> B) (x : A) (h1 : term2893 A B f H1 g x) : term3449 A B f H1 g x.
Proof. exact (fun h0 : (term2890 A B H1 f x) = (term2890 A B H1 g x) => @lem8388942 A B f H1 g x h1). Qed.
Lemma lem8388945 (p : Prop) : (term753 p) = (~ p).
Proof. exact (EQ_MP (@lem21028 p) (@lem21107 p)). Qed.
Lemma lem8388946 {A B : Type'} (f : A -> B) (H1 : type549 A B) (g : A -> B) (x : A) : (term3449 A B f H1 g x) = (term2893 A B f H1 g x).
Proof. exact (@lem8388945 ((term2890 A B H1 f x) = (term2890 A B H1 g x))). Qed.
Lemma lem8388947 {A B : Type'} (f : A -> B) (H1 : type549 A B) (g : A -> B) (x : A) (h1 : term2893 A B f H1 g x) : term2893 A B f H1 g x.
Proof. exact (EQ_MP (@lem8388946 A B f H1 g x) (@lem8388943 A B f H1 g x h1)). Qed.
Lemma lem8388949 (b : Prop) (a : Prop) : (a \/ b) = (term754 b a).
Proof. exact (EQ_MP (@lem20682 b a) (@lem20764 b a)). Qed.
Lemma lem8388952 {A B : Type'} (H1 : type549 A B) (lt2 : type1402 A) (z' : type515 A B) (_114268 : A -> B) (_114269 : A -> B) (_114270 : A) : (term3151 A B lt2 z' _114268 H1 _114269 _114270) = (term3450 A B H1 lt2 z' _114268 _114269 _114270).
Proof. exact (@lem8388949 ((term2890 A B H1 _114268 _114270) = (term2890 A B H1 _114269 _114270)) (term3036 A B lt2 z' _114268 _114269 _114270)). Qed.
Lemma lem8388955 {A B : Type'} (_114268 : A -> B) (_114269 : A -> B) (_114270 : A) (lt2 : type1402 A) (z' : type515 A B) (P1 : type551 A B) (G1 : type548 A B) (H1 : type549 A B) (h1 : term2129 A B lt2 z' P1 G1 H1) : term3450 A B H1 lt2 z' _114268 _114269 _114270.
Proof. exact (EQ_MP (@lem8388952 A B H1 lt2 z' _114268 _114269 _114270) (@lem8381603 A B _114268 _114269 _114270 lt2 z' P1 G1 H1 h1)). Qed.
Lemma lem8388956 {A B : Type'} (_114268 : A -> B) (_114269 : A -> B) (_114270 : A) (lt2 : type1402 A) (z' : type515 A B) (P1 : type551 A B) (G1 : type548 A B) (H1 : type549 A B) (h1 : term2129 A B lt2 z' P1 G1 H1) : term3450 A B H1 lt2 z' _114268 _114269 _114270.
Proof. exact (@lem8388955 A B _114268 _114269 _114270 lt2 z' P1 G1 H1 h1). Qed.
Lemma lem8388957 {A B : Type'} (f : A -> B) (g : A -> B) (x : A) (lt2 : type1402 A) (z' : type515 A B) (P1 : type551 A B) (G1 : type548 A B) (H1 : type549 A B) (h1 : term2129 A B lt2 z' P1 G1 H1) : term3450 A B H1 lt2 z' f g x.
Proof. exact (@lem8388956 A B f g x lt2 z' P1 G1 H1 h1). Qed.
Lemma lem8388960 {A B : Type'} (lt2 : type1402 A) (z' : type515 A B) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (H1 : type549 A B) (g : A -> B) (x : A) (h1 : term2129 A B lt2 z' P1 G1 H1) (h2 : term2893 A B f H1 g x) : term3036 A B lt2 z' f g x.
Proof. exact (@lem8388957 A B f g x lt2 z' P1 G1 H1 h1 (@lem8388947 A B f H1 g x h2)). Qed.
Lemma lem8388961 {A B : Type'} (lt2 : type1402 A) (z' : type515 A B) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (H1 : type549 A B) (g : A -> B) (x : A) (h1 : term2129 A B lt2 z' P1 G1 H1) (h2 : term2893 A B f H1 g x) : term3396 A B lt2 z' f g x.
Proof. exact (fun h0 : term3397 A B lt2 z' f g x => @lem8388960 A B lt2 z' P1 G1 f H1 g x h1 h2). Qed.
Lemma lem8388963 (p : Prop) : (term748 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8388964 {A B : Type'} (lt2 : type1402 A) (z' : type515 A B) (f : A -> B) (g : A -> B) (x : A) : (term3396 A B lt2 z' f g x) = (term3036 A B lt2 z' f g x).
Proof. exact (@lem8388963 (term3036 A B lt2 z' f g x)). Qed.
Lemma lem8388965 {A B : Type'} (lt2 : type1402 A) (z' : type515 A B) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (H1 : type549 A B) (g : A -> B) (x : A) (h1 : term2129 A B lt2 z' P1 G1 H1) (h2 : term2893 A B f H1 g x) : term3036 A B lt2 z' f g x.
Proof. exact (EQ_MP (@lem8388964 A B lt2 z' f g x) (@lem8388961 A B lt2 z' P1 G1 f H1 g x h1 h2)). Qed.
Lemma lem8388971 (q : Prop) (p : Prop) : (p \/ q) = (q \/ p).
Proof. exact (proj1 (@lem827 (@el Prop) p q)). Qed.
Lemma lem8388972 {A B : Type'} (f : A -> B) (g : A -> B) (lt2 : type1402 A) (_114280 : A) (x : A) : (term2912 A B lt2 x f g _114280) = (term3398 A B f g lt2 _114280 x).
Proof. exact (@lem8388971 ((@I (A -> B) f _114280) = (@I (A -> B) g _114280)) (term608 A lt2 _114280 x)). Qed.
Lemma lem8388980 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8388981 {A B : Type'} (f : A -> B) (g : A -> B) (lt2 : type1402 A) (_114280 : A) (x : A) : (term3160 A B lt2 x f g _114280) = (term3399 A B f g lt2 _114280 x).
Proof. exact (MK_COMB (@lem8388980) (@lem8388972 A B f g lt2 _114280 x)). Qed.
Lemma lem8388989 {A B : Type'} (f : A -> B) (g : A -> B) (lt2 : type1402 A) (_114280 : A) (x : A) : (term3398 A B f g lt2 _114280 x) = (term3398 A B f g lt2 _114280 x).
Proof. exact (eq_refl (term3398 A B f g lt2 _114280 x)). Qed.
Lemma lem8388990 {A B : Type'} (f : A -> B) (g : A -> B) (lt2 : type1402 A) (_114280 : A) (x : A) : ((term2912 A B lt2 x f g _114280) = (term3398 A B f g lt2 _114280 x)) = ((term3398 A B f g lt2 _114280 x) = (term3398 A B f g lt2 _114280 x)).
Proof. exact (MK_COMB (@lem8388981 A B f g lt2 _114280 x) (@lem8388989 A B f g lt2 _114280 x)). Qed.
Lemma lem8388992 {A : Type'} (x : A) : (x = x) = True.
Proof. exact (EQ_MP (@lem20665 A x) (@lem20664 A x)). Qed.
Lemma lem8388993 (x : Prop) : (x = x) = True.
Proof. exact (@lem8388992 Prop x). Qed.
Lemma lem8388994 {A B : Type'} (f : A -> B) (g : A -> B) (lt2 : type1402 A) (_114280 : A) (x : A) : ((term3398 A B f g lt2 _114280 x) = (term3398 A B f g lt2 _114280 x)) = True.
Proof. exact (@lem8388993 (term3398 A B f g lt2 _114280 x)). Qed.
Lemma lem8388995 {A B : Type'} (f : A -> B) (g : A -> B) (lt2 : type1402 A) (_114280 : A) (x : A) : ((term2912 A B lt2 x f g _114280) = (term3398 A B f g lt2 _114280 x)) = True.
Proof. exact (TRANS (@lem8388990 A B f g lt2 _114280 x) (@lem8388994 A B f g lt2 _114280 x)). Qed.
Lemma lem8388996 {A B : Type'} (f : A -> B) (g : A -> B) (lt2 : type1402 A) (_114280 : A) (x : A) : True = ((term2912 A B lt2 x f g _114280) = (term3398 A B f g lt2 _114280 x)).
Proof. exact (SYM (@lem8388995 A B f g lt2 _114280 x)). Qed.
Lemma lem8388997 {A B : Type'} (f : A -> B) (g : A -> B) (lt2 : type1402 A) (_114280 : A) (x : A) : (term2912 A B lt2 x f g _114280) = (term3398 A B f g lt2 _114280 x).
Proof. exact (EQ_MP (@lem8388996 A B f g lt2 _114280 x) (@lem0)). Qed.
Lemma lem8388998 {A B P : Type'} (_114280 : A) (s : P -> A) (lt2 : type1402 A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (H1 : type549 A B) (g : A -> B) (x : A) (h1 : term2917 A B P s lt2 P1 G1 f H1 g x) : term3398 A B f g lt2 _114280 x.
Proof. exact (EQ_MP (@lem8388997 A B f g lt2 _114280 x) (@lem8381595 A B P _114280 s lt2 P1 G1 f H1 g x h1)). Qed.
Lemma lem8389000 (b : Prop) (a : Prop) : (a \/ b) = (term754 b a).
Proof. exact (EQ_MP (@lem20682 b a) (@lem20764 b a)). Qed.
Lemma lem8389001 {A B : Type'} (lt2 : type1402 A) (x : A) (f : A -> B) (g : A -> B) (_114280 : A) : (term3398 A B f g lt2 _114280 x) = (term3400 A B lt2 x f g _114280).
Proof. exact (@lem8389000 (term608 A lt2 _114280 x) ((@I (A -> B) f _114280) = (@I (A -> B) g _114280))). Qed.
Lemma lem8389003 (a : Prop) : (term47 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem8389004 {A : Type'} (lt2 : type1402 A) (_114280 : A) (x : A) : (term771 A lt2 _114280 x) = (term586 A lt2 _114280 x).
Proof. exact (@lem8389003 (term586 A lt2 _114280 x)). Qed.
Lemma lem8389005 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem8389006 {A : Type'} (lt2 : type1402 A) (_114280 : A) (x : A) : (term772 A lt2 _114280 x) = (term773 A lt2 _114280 x).
Proof. exact (MK_COMB (@lem8389005) (@lem8389004 A lt2 _114280 x)). Qed.
Lemma lem8389007 {A B : Type'} (f : A -> B) (g : A -> B) (_114280 : A) : ((@I (A -> B) f _114280) = (@I (A -> B) g _114280)) = ((@I (A -> B) f _114280) = (@I (A -> B) g _114280)).
Proof. exact (eq_refl ((@I (A -> B) f _114280) = (@I (A -> B) g _114280))). Qed.
Lemma lem8389008 {A B : Type'} (lt2 : type1402 A) (x : A) (f : A -> B) (g : A -> B) (_114280 : A) : (term3400 A B lt2 x f g _114280) = (term3401 A B lt2 x f g _114280).
Proof. exact (MK_COMB (@lem8389006 A lt2 _114280 x) (@lem8389007 A B f g _114280)). Qed.
Lemma lem8389009 {A B : Type'} (lt2 : type1402 A) (x : A) (f : A -> B) (g : A -> B) (_114280 : A) : (term3398 A B f g lt2 _114280 x) = (term3401 A B lt2 x f g _114280).
Proof. exact (TRANS (@lem8389001 A B lt2 x f g _114280) (@lem8389008 A B lt2 x f g _114280)). Qed.
Lemma lem8389012 {A B P : Type'} (_114280 : A) (s : P -> A) (lt2 : type1402 A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (H1 : type549 A B) (g : A -> B) (x : A) (h1 : term2917 A B P s lt2 P1 G1 f H1 g x) : term3401 A B lt2 x f g _114280.
Proof. exact (EQ_MP (@lem8389009 A B lt2 x f g _114280) (@lem8388998 A B P _114280 s lt2 P1 G1 f H1 g x h1)). Qed.
Lemma lem8389013 {A B P : Type'} (_114280 : A) (s : P -> A) (lt2 : type1402 A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (H1 : type549 A B) (g : A -> B) (x : A) (h1 : term2917 A B P s lt2 P1 G1 f H1 g x) : term3401 A B lt2 x f g _114280.
Proof. exact (@lem8389012 A B P _114280 s lt2 P1 G1 f H1 g x h1). Qed.
Lemma lem8389014 {A B P : Type'} (z' : type515 A B) (s : P -> A) (lt2 : type1402 A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (H1 : type549 A B) (g : A -> B) (x : A) (h1 : term2917 A B P s lt2 P1 G1 f H1 g x) : term3402 A B lt2 z' f g x.
Proof. exact (@lem8389013 A B P (term3019 A B z' f g x) s lt2 P1 G1 f H1 g x h1). Qed.
Lemma lem8389017 {A B P : Type'} (z' : type515 A B) (s : P -> A) (lt2 : type1402 A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (H1 : type549 A B) (g : A -> B) (x : A) (h1 : term2129 A B lt2 z' P1 G1 H1) (h2 : term2893 A B f H1 g x) (h3 : term2917 A B P s lt2 P1 G1 f H1 g x) : (term3022 A B z' f g x) = (term3025 A B z' f g x).
Proof. exact (@lem8389014 A B P z' s lt2 P1 G1 f H1 g x h3 (@lem8388965 A B lt2 z' P1 G1 f H1 g x h1 h2)). Qed.
Lemma lem8389018 {A B P : Type'} (z' : type515 A B) (s : P -> A) (lt2 : type1402 A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (H1 : type549 A B) (g : A -> B) (x : A) (h1 : term2129 A B lt2 z' P1 G1 H1) (h2 : term2893 A B f H1 g x) (h3 : term2917 A B P s lt2 P1 G1 f H1 g x) : term3403 A B z' f g x.
Proof. exact (fun h0 : term3029 A B z' f g x => @lem8389017 A B P z' s lt2 P1 G1 f H1 g x h1 h2 h3). Qed.
Lemma lem8389020 (p : Prop) : (term748 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8389021 {A B : Type'} (z' : type515 A B) (f : A -> B) (g : A -> B) (x : A) : (term3403 A B z' f g x) = ((term3022 A B z' f g x) = (term3025 A B z' f g x)).
Proof. exact (@lem8389020 ((term3022 A B z' f g x) = (term3025 A B z' f g x))). Qed.
Lemma lem8389022 {A B P : Type'} (z' : type515 A B) (s : P -> A) (lt2 : type1402 A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (H1 : type549 A B) (g : A -> B) (x : A) (h1 : term2129 A B lt2 z' P1 G1 H1) (h2 : term2893 A B f H1 g x) (h3 : term2917 A B P s lt2 P1 G1 f H1 g x) : (term3022 A B z' f g x) = (term3025 A B z' f g x).
Proof. exact (EQ_MP (@lem8389021 A B z' f g x) (@lem8389018 A B P z' s lt2 P1 G1 f H1 g x h1 h2 h3)). Qed.
Lemma lem8389028 (q : Prop) (p : Prop) : (p \/ q) = (q \/ p).
Proof. exact (proj1 (@lem827 (@el Prop) p q)). Qed.
Lemma lem8389029 {A B : Type'} (H1 : type549 A B) (z' : type515 A B) (_114268 : A -> B) (_114269 : A -> B) (_114270 : A) : (term3152 A B z' _114268 H1 _114269 _114270) = (term3451 A B H1 z' _114268 _114269 _114270).
Proof. exact (@lem8389028 ((term2890 A B H1 _114268 _114270) = (term2890 A B H1 _114269 _114270)) (term3029 A B z' _114268 _114269 _114270)). Qed.
Lemma lem8389039 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8389040 {A B : Type'} (H1 : type549 A B) (z' : type515 A B) (_114268 : A -> B) (_114269 : A -> B) (_114270 : A) : (term3452 A B z' _114268 H1 _114269 _114270) = (term3453 A B H1 z' _114268 _114269 _114270).
Proof. exact (MK_COMB (@lem8389039) (@lem8389029 A B H1 z' _114268 _114269 _114270)). Qed.
Lemma lem8389050 {A B : Type'} (H1 : type549 A B) (z' : type515 A B) (_114268 : A -> B) (_114269 : A -> B) (_114270 : A) : (term3451 A B H1 z' _114268 _114269 _114270) = (term3451 A B H1 z' _114268 _114269 _114270).
Proof. exact (eq_refl (term3451 A B H1 z' _114268 _114269 _114270)). Qed.
Lemma lem8389051 {A B : Type'} (H1 : type549 A B) (z' : type515 A B) (_114268 : A -> B) (_114269 : A -> B) (_114270 : A) : ((term3152 A B z' _114268 H1 _114269 _114270) = (term3451 A B H1 z' _114268 _114269 _114270)) = ((term3451 A B H1 z' _114268 _114269 _114270) = (term3451 A B H1 z' _114268 _114269 _114270)).
Proof. exact (MK_COMB (@lem8389040 A B H1 z' _114268 _114269 _114270) (@lem8389050 A B H1 z' _114268 _114269 _114270)). Qed.
Lemma lem8389053 {A : Type'} (x : A) : (x = x) = True.
Proof. exact (EQ_MP (@lem20665 A x) (@lem20664 A x)). Qed.
Lemma lem8389054 (x : Prop) : (x = x) = True.
Proof. exact (@lem8389053 Prop x). Qed.
Lemma lem8389055 {A B : Type'} (H1 : type549 A B) (z' : type515 A B) (_114268 : A -> B) (_114269 : A -> B) (_114270 : A) : ((term3451 A B H1 z' _114268 _114269 _114270) = (term3451 A B H1 z' _114268 _114269 _114270)) = True.
Proof. exact (@lem8389054 (term3451 A B H1 z' _114268 _114269 _114270)). Qed.
Lemma lem8389056 {A B : Type'} (H1 : type549 A B) (z' : type515 A B) (_114268 : A -> B) (_114269 : A -> B) (_114270 : A) : ((term3152 A B z' _114268 H1 _114269 _114270) = (term3451 A B H1 z' _114268 _114269 _114270)) = True.
Proof. exact (TRANS (@lem8389051 A B H1 z' _114268 _114269 _114270) (@lem8389055 A B H1 z' _114268 _114269 _114270)). Qed.
Lemma lem8389057 {A B : Type'} (H1 : type549 A B) (z' : type515 A B) (_114268 : A -> B) (_114269 : A -> B) (_114270 : A) : True = ((term3152 A B z' _114268 H1 _114269 _114270) = (term3451 A B H1 z' _114268 _114269 _114270)).
Proof. exact (SYM (@lem8389056 A B H1 z' _114268 _114269 _114270)). Qed.
Lemma lem8389058 {A B : Type'} (H1 : type549 A B) (z' : type515 A B) (_114268 : A -> B) (_114269 : A -> B) (_114270 : A) : (term3152 A B z' _114268 H1 _114269 _114270) = (term3451 A B H1 z' _114268 _114269 _114270).
Proof. exact (EQ_MP (@lem8389057 A B H1 z' _114268 _114269 _114270) (@lem0)). Qed.
Lemma lem8389059 {A B : Type'} (_114268 : A -> B) (_114269 : A -> B) (_114270 : A) (lt2 : type1402 A) (z' : type515 A B) (P1 : type551 A B) (G1 : type548 A B) (H1 : type549 A B) (h1 : term2129 A B lt2 z' P1 G1 H1) : term3451 A B H1 z' _114268 _114269 _114270.
Proof. exact (EQ_MP (@lem8389058 A B H1 z' _114268 _114269 _114270) (@lem8381609 A B _114268 _114269 _114270 lt2 z' P1 G1 H1 h1)). Qed.
Lemma lem8389061 (b : Prop) (a : Prop) : (a \/ b) = (term754 b a).
Proof. exact (EQ_MP (@lem20682 b a) (@lem20764 b a)). Qed.
Lemma lem8389062 {A B : Type'} (z' : type515 A B) (_114268 : A -> B) (H1 : type549 A B) (_114269 : A -> B) (_114270 : A) : (term3451 A B H1 z' _114268 _114269 _114270) = (term3454 A B z' _114268 H1 _114269 _114270).
Proof. exact (@lem8389061 (term3029 A B z' _114268 _114269 _114270) ((term2890 A B H1 _114268 _114270) = (term2890 A B H1 _114269 _114270))). Qed.
Lemma lem8389064 (a : Prop) : (term47 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem8389065 {A B : Type'} (z' : type515 A B) (_114268 : A -> B) (_114269 : A -> B) (_114270 : A) : (term3413 A B z' _114268 _114269 _114270) = ((term3022 A B z' _114268 _114269 _114270) = (term3025 A B z' _114268 _114269 _114270)).
Proof. exact (@lem8389064 ((term3022 A B z' _114268 _114269 _114270) = (term3025 A B z' _114268 _114269 _114270))). Qed.
Lemma lem8389066 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem8389067 {A B : Type'} (z' : type515 A B) (_114268 : A -> B) (_114269 : A -> B) (_114270 : A) : (term3444 A B z' _114268 _114269 _114270) = (term3445 A B z' _114268 _114269 _114270).
Proof. exact (MK_COMB (@lem8389066) (@lem8389065 A B z' _114268 _114269 _114270)). Qed.
Lemma lem8389068 {A B : Type'} (_114268 : A -> B) (H1 : type549 A B) (_114269 : A -> B) (_114270 : A) : ((term2890 A B H1 _114268 _114270) = (term2890 A B H1 _114269 _114270)) = ((term2890 A B H1 _114268 _114270) = (term2890 A B H1 _114269 _114270)).
Proof. exact (eq_refl ((term2890 A B H1 _114268 _114270) = (term2890 A B H1 _114269 _114270))). Qed.
Lemma lem8389069 {A B : Type'} (z' : type515 A B) (_114268 : A -> B) (H1 : type549 A B) (_114269 : A -> B) (_114270 : A) : (term3454 A B z' _114268 H1 _114269 _114270) = (term3455 A B z' _114268 H1 _114269 _114270).
Proof. exact (MK_COMB (@lem8389067 A B z' _114268 _114269 _114270) (@lem8389068 A B _114268 H1 _114269 _114270)). Qed.
Lemma lem8389070 {A B : Type'} (z' : type515 A B) (_114268 : A -> B) (H1 : type549 A B) (_114269 : A -> B) (_114270 : A) : (term3451 A B H1 z' _114268 _114269 _114270) = (term3455 A B z' _114268 H1 _114269 _114270).
Proof. exact (TRANS (@lem8389062 A B z' _114268 H1 _114269 _114270) (@lem8389069 A B z' _114268 H1 _114269 _114270)). Qed.
Lemma lem8389073 {A B : Type'} (_114268 : A -> B) (_114269 : A -> B) (_114270 : A) (lt2 : type1402 A) (z' : type515 A B) (P1 : type551 A B) (G1 : type548 A B) (H1 : type549 A B) (h1 : term2129 A B lt2 z' P1 G1 H1) : term3455 A B z' _114268 H1 _114269 _114270.
Proof. exact (EQ_MP (@lem8389070 A B z' _114268 H1 _114269 _114270) (@lem8389059 A B _114268 _114269 _114270 lt2 z' P1 G1 H1 h1)). Qed.
Lemma lem8389074 {A B : Type'} (_114268 : A -> B) (_114269 : A -> B) (_114270 : A) (lt2 : type1402 A) (z' : type515 A B) (P1 : type551 A B) (G1 : type548 A B) (H1 : type549 A B) (h1 : term2129 A B lt2 z' P1 G1 H1) : term3455 A B z' _114268 H1 _114269 _114270.
Proof. exact (@lem8389073 A B _114268 _114269 _114270 lt2 z' P1 G1 H1 h1). Qed.
Lemma lem8389075 {A B : Type'} (f : A -> B) (g : A -> B) (x : A) (lt2 : type1402 A) (z' : type515 A B) (P1 : type551 A B) (G1 : type548 A B) (H1 : type549 A B) (h1 : term2129 A B lt2 z' P1 G1 H1) : term3455 A B z' f H1 g x.
Proof. exact (@lem8389074 A B f g x lt2 z' P1 G1 H1 h1). Qed.
Lemma lem8389078 {A B P : Type'} (z' : type515 A B) (s : P -> A) (lt2 : type1402 A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (H1 : type549 A B) (g : A -> B) (x : A) (h1 : term2129 A B lt2 z' P1 G1 H1) (h2 : term2893 A B f H1 g x) (h3 : term2917 A B P s lt2 P1 G1 f H1 g x) : (term2890 A B H1 f x) = (term2890 A B H1 g x).
Proof. exact (@lem8389075 A B f g x lt2 z' P1 G1 H1 h1 (@lem8389022 A B P z' s lt2 P1 G1 f H1 g x h1 h2 h3)). Qed.
Lemma lem8389079 {A B P : Type'} (z' : type515 A B) (s : P -> A) (lt2 : type1402 A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (H1 : type549 A B) (g : A -> B) (x : A) (h1 : term2129 A B lt2 z' P1 G1 H1) (h2 : term2917 A B P s lt2 P1 G1 f H1 g x) : term3456 A B f H1 g x.
Proof. exact (fun h0 : term2893 A B f H1 g x => @lem8389078 A B P z' s lt2 P1 G1 f H1 g x h1 h0 h2). Qed.
Lemma lem8389081 (p : Prop) : (term748 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8389082 {A B : Type'} (f : A -> B) (H1 : type549 A B) (g : A -> B) (x : A) : (term3456 A B f H1 g x) = ((term2890 A B H1 f x) = (term2890 A B H1 g x)).
Proof. exact (@lem8389081 ((term2890 A B H1 f x) = (term2890 A B H1 g x))). Qed.
Lemma lem8389083 {A B P : Type'} (z' : type515 A B) (s : P -> A) (lt2 : type1402 A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (H1 : type549 A B) (g : A -> B) (x : A) (h1 : term2129 A B lt2 z' P1 G1 H1) (h2 : term2917 A B P s lt2 P1 G1 f H1 g x) : (term2890 A B H1 f x) = (term2890 A B H1 g x).
Proof. exact (EQ_MP (@lem8389082 A B f H1 g x) (@lem8389079 A B P z' s lt2 P1 G1 f H1 g x h1 h2)). Qed.
Lemma lem8389086 (p : Prop) : (~ p) = (p -> False).
Proof. exact (EQ_MP (@lem21021 p) (@lem0)). Qed.
Lemma lem8389088 {A B : Type'} (f : A -> B) (H1 : type549 A B) (g : A -> B) (x : A) : (term2893 A B f H1 g x) = (term3457 A B f H1 g x).
Proof. exact (@lem8389086 ((term2890 A B H1 f x) = (term2890 A B H1 g x))). Qed.
Lemma lem8389091 {A B : Type'} (f : A -> B) (H1 : type549 A B) (g : A -> B) (x : A) (h1 : term2893 A B f H1 g x) : term3457 A B f H1 g x.
Proof. exact (EQ_MP (@lem8389088 A B f H1 g x) (@lem8381597 A B f H1 g x h1)). Qed.
Lemma lem8389094 {A B P : Type'} (z' : type515 A B) (s : P -> A) (lt2 : type1402 A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (H1 : type549 A B) (g : A -> B) (x : A) (h1 : term2129 A B lt2 z' P1 G1 H1) (h2 : term2893 A B f H1 g x) (h3 : term2917 A B P s lt2 P1 G1 f H1 g x) : False.
Proof. exact (@lem8389091 A B f H1 g x h2 (@lem8389083 A B P z' s lt2 P1 G1 f H1 g x h1 h3)). Qed.
Lemma lem8389095 {A B P : Type'} (z' : type515 A B) (s : P -> A) (lt2 : type1402 A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (H1 : type549 A B) (g : A -> B) (x : A) (h1 : term2129 A B lt2 z' P1 G1 H1) (h2 : term2893 A B f H1 g x) (h3 : term2917 A B P s lt2 P1 G1 f H1 g x) : term750.
Proof. exact (fun h0 : ~ False => @lem8389094 A B P z' s lt2 P1 G1 f H1 g x h1 h2 h3). Qed.
Lemma lem8389097 (p : Prop) : (term748 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8389098 : term750 = False.
Proof. exact (@lem8389097 False). Qed.
Lemma lem8389099 {A B P : Type'} (z' : type515 A B) (s : P -> A) (lt2 : type1402 A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (H1 : type549 A B) (g : A -> B) (x : A) (h1 : term2129 A B lt2 z' P1 G1 H1) (h2 : term2893 A B f H1 g x) (h3 : term2917 A B P s lt2 P1 G1 f H1 g x) : False.
Proof. exact (EQ_MP (@lem8389098) (@lem8389095 A B P z' s lt2 P1 G1 f H1 g x h1 h2 h3)). Qed.
Lemma lem8389119 {A : Type'} : (@I (A -> Prop)) = (@I (A -> Prop)).
Proof. exact (eq_refl (@I (A -> Prop))). Qed.
Lemma lem8389120 {A : Type'} (_115174 : A -> Prop) (_115176 : A -> Prop) (h1 : _115174 = _115176) : _115174 = _115176.
Proof. exact (h1). Qed.
Lemma lem8389121 {A : Type'} (_115175 : A) (_115177 : A) (h1 : _115175 = _115177) : _115175 = _115177.
Proof. exact (h1). Qed.
Lemma lem8389122 {A : Type'} (_115174 : A -> Prop) (_115176 : A -> Prop) (h1 : _115174 = _115176) : (@I (A -> Prop) _115174) = (@I (A -> Prop) _115176).
Proof. exact (MK_COMB (@lem8389119 A) (@lem8389120 A _115174 _115176 h1)). Qed.
Lemma lem8389123 {A : Type'} (_115175 : A) (_115177 : A) (_115174 : A -> Prop) (_115176 : A -> Prop) (h1 : _115175 = _115177) (h2 : _115174 = _115176) : (@I (A -> Prop) _115174 _115175) = (@I (A -> Prop) _115176 _115177).
Proof. exact (MK_COMB (@lem8389122 A _115174 _115176 h2) (@lem8389121 A _115175 _115177 h1)). Qed.
Lemma lem8389125 (b : Prop) (a : Prop) : term3205 b a.
Proof. exact (EQ_MP (@lem21501 b a) (@lem21598 b a)). Qed.
Lemma lem8389126 {A : Type'} (_115176 : A -> Prop) (_115177 : A) (_115174 : A -> Prop) (_115175 : A) : term3206 A _115176 _115177 _115174 _115175.
Proof. exact (@lem8389125 (@I (A -> Prop) _115176 _115177) (@I (A -> Prop) _115174 _115175)). Qed.
Lemma lem8389127 {A : Type'} (_115175 : A) (_115177 : A) (_115174 : A -> Prop) (_115176 : A -> Prop) (h1 : _115175 = _115177) (h2 : _115174 = _115176) : term3207 A _115176 _115177 _115174 _115175.
Proof. exact (@lem8389126 A _115176 _115177 _115174 _115175 (@lem8389123 A _115175 _115177 _115174 _115176 h1 h2)). Qed.
Lemma lem8389128 {A : Type'} (_115176 : A -> Prop) (_115174 : A -> Prop) (_115175 : A) (_115177 : A) (h1 : _115175 = _115177) : term3208 A _115176 _115177 _115174 _115175.
Proof. exact (fun h0 : _115174 = _115176 => @lem8389127 A _115175 _115177 _115174 _115176 h1 h0). Qed.
Lemma lem8389130 (a : Prop) (b : Prop) : (a -> b) = (term3209 a b).
Proof. exact (EQ_MP (@lem21394 a b) (@lem21490 a b)). Qed.
Lemma lem8389131 {A : Type'} (_115176 : A -> Prop) (_115177 : A) (_115174 : A -> Prop) (_115175 : A) : (term3208 A _115176 _115177 _115174 _115175) = (term3210 A _115176 _115177 _115174 _115175).
Proof. exact (@lem8389130 (_115174 = _115176) (term3207 A _115176 _115177 _115174 _115175)). Qed.
Lemma lem8389132 {A : Type'} (_115176 : A -> Prop) (_115174 : A -> Prop) (_115175 : A) (_115177 : A) (h1 : _115175 = _115177) : term3210 A _115176 _115177 _115174 _115175.
Proof. exact (EQ_MP (@lem8389131 A _115176 _115177 _115174 _115175) (@lem8389128 A _115176 _115174 _115175 _115177 h1)). Qed.
Lemma lem8389133 {A : Type'} (_115176 : A -> Prop) (_115177 : A) (_115174 : A -> Prop) (_115175 : A) : term3211 A _115176 _115177 _115174 _115175.
Proof. exact (fun h0 : _115175 = _115177 => @lem8389132 A _115176 _115174 _115175 _115177 h0). Qed.
Lemma lem8389135 (a : Prop) (b : Prop) : (a -> b) = (term3209 a b).
Proof. exact (EQ_MP (@lem21394 a b) (@lem21490 a b)). Qed.
Lemma lem8389136 {A : Type'} (_115176 : A -> Prop) (_115177 : A) (_115174 : A -> Prop) (_115175 : A) : (term3211 A _115176 _115177 _115174 _115175) = (term3212 A _115176 _115177 _115174 _115175).
Proof. exact (@lem8389135 (_115175 = _115177) (term3210 A _115176 _115177 _115174 _115175)). Qed.
Lemma lem8389137 {A : Type'} (_115176 : A -> Prop) (_115177 : A) (_115174 : A -> Prop) (_115175 : A) : term3212 A _115176 _115177 _115174 _115175.
Proof. exact (EQ_MP (@lem8389136 A _115176 _115177 _115174 _115175) (@lem8389133 A _115176 _115177 _115174 _115175)). Qed.
Lemma lem8389423 {A : Type'} (x : A) : x = x.
Proof. exact (@lem21386 A x). Qed.
Lemma lem8389424 {A : Type'} (x : A) : x = x.
Proof. exact (@lem8389423 A x). Qed.
Lemma lem8389425 {A P : Type'} (s : P -> A) (y : P) : (@I (P -> A) s y) = (@I (P -> A) s y).
Proof. exact (@lem8389424 A (@I (P -> A) s y)). Qed.
Lemma lem8389426 {A P : Type'} (s : P -> A) (y : P) : term3213 A P s y.
Proof. exact (fun h0 : term3214 A P s y => @lem8389425 A P s y). Qed.
Lemma lem8389428 (p : Prop) : (term748 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8389429 {A P : Type'} (s : P -> A) (y : P) : (term3213 A P s y) = ((@I (P -> A) s y) = (@I (P -> A) s y)).
Proof. exact (@lem8389428 ((@I (P -> A) s y) = (@I (P -> A) s y))). Qed.
Lemma lem8389430 {A P : Type'} (s : P -> A) (y : P) : (@I (P -> A) s y) = (@I (P -> A) s y).
Proof. exact (EQ_MP (@lem8389429 A P s y) (@lem8389426 A P s y)). Qed.
Lemma lem8389436 (q : Prop) (p : Prop) : (p \/ q) = (q \/ p).
Proof. exact (proj1 (@lem827 (@el Prop) p q)). Qed.
Lemma lem8389437 {A P : Type'} (_114084 : type794 A P) (_114281 : P -> A) (_114283 : P) (_114282 : A) : (term3065 A P _114283 _114084 _114281 _114282) = (term3215 A P _114084 _114281 _114283 _114282).
Proof. exact (@lem8389436 ((term2811 A P _114084 _114281 _114282) = _114282) (term2813 A P _114281 _114283 _114282)). Qed.
Lemma lem8389447 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8389448 {A P : Type'} (_114084 : type794 A P) (_114281 : P -> A) (_114283 : P) (_114282 : A) : (term3216 A P _114283 _114084 _114281 _114282) = (term3217 A P _114084 _114281 _114283 _114282).
Proof. exact (MK_COMB (@lem8389447) (@lem8389437 A P _114084 _114281 _114283 _114282)). Qed.
Lemma lem8389458 {A P : Type'} (_114084 : type794 A P) (_114281 : P -> A) (_114283 : P) (_114282 : A) : (term3215 A P _114084 _114281 _114283 _114282) = (term3215 A P _114084 _114281 _114283 _114282).
Proof. exact (eq_refl (term3215 A P _114084 _114281 _114283 _114282)). Qed.
Lemma lem8389459 {A P : Type'} (_114084 : type794 A P) (_114281 : P -> A) (_114283 : P) (_114282 : A) : ((term3065 A P _114283 _114084 _114281 _114282) = (term3215 A P _114084 _114281 _114283 _114282)) = ((term3215 A P _114084 _114281 _114283 _114282) = (term3215 A P _114084 _114281 _114283 _114282)).
Proof. exact (MK_COMB (@lem8389448 A P _114084 _114281 _114283 _114282) (@lem8389458 A P _114084 _114281 _114283 _114282)). Qed.
Lemma lem8389461 {A : Type'} (x : A) : (x = x) = True.
Proof. exact (EQ_MP (@lem20665 A x) (@lem20664 A x)). Qed.
Lemma lem8389462 (x : Prop) : (x = x) = True.
Proof. exact (@lem8389461 Prop x). Qed.
Lemma lem8389463 {A P : Type'} (_114084 : type794 A P) (_114281 : P -> A) (_114283 : P) (_114282 : A) : ((term3215 A P _114084 _114281 _114283 _114282) = (term3215 A P _114084 _114281 _114283 _114282)) = True.
Proof. exact (@lem8389462 (term3215 A P _114084 _114281 _114283 _114282)). Qed.
Lemma lem8389464 {A P : Type'} (_114084 : type794 A P) (_114281 : P -> A) (_114283 : P) (_114282 : A) : ((term3065 A P _114283 _114084 _114281 _114282) = (term3215 A P _114084 _114281 _114283 _114282)) = True.
Proof. exact (TRANS (@lem8389459 A P _114084 _114281 _114283 _114282) (@lem8389463 A P _114084 _114281 _114283 _114282)). Qed.
Lemma lem8389465 {A P : Type'} (_114084 : type794 A P) (_114281 : P -> A) (_114283 : P) (_114282 : A) : True = ((term3065 A P _114283 _114084 _114281 _114282) = (term3215 A P _114084 _114281 _114283 _114282)).
Proof. exact (SYM (@lem8389464 A P _114084 _114281 _114283 _114282)). Qed.
Lemma lem8389466 {A P : Type'} (_114084 : type794 A P) (_114281 : P -> A) (_114283 : P) (_114282 : A) : (term3065 A P _114283 _114084 _114281 _114282) = (term3215 A P _114084 _114281 _114283 _114282).
Proof. exact (EQ_MP (@lem8389465 A P _114084 _114281 _114283 _114282) (@lem0)). Qed.
Lemma lem8389467 {A P : Type'} (_114281 : P -> A) (_114283 : P) (_114282 : A) (_114084 : type794 A P) (h1 : term1491 A P _114084) : term3215 A P _114084 _114281 _114283 _114282.
Proof. exact (EQ_MP (@lem8389466 A P _114084 _114281 _114283 _114282) (@lem8383612 A P _114283 _114281 _114282 _114084 h1)). Qed.
Lemma lem8389469 (b : Prop) (a : Prop) : (a \/ b) = (term754 b a).
Proof. exact (EQ_MP (@lem20682 b a) (@lem20764 b a)). Qed.
Lemma lem8389470 {A P : Type'} (_114283 : P) (_114084 : type794 A P) (_114281 : P -> A) (_114282 : A) : (term3215 A P _114084 _114281 _114283 _114282) = (term3218 A P _114283 _114084 _114281 _114282).
Proof. exact (@lem8389469 (term2813 A P _114281 _114283 _114282) ((term2811 A P _114084 _114281 _114282) = _114282)). Qed.
Lemma lem8389472 (a : Prop) : (term47 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem8389473 {A P : Type'} (_114281 : P -> A) (_114283 : P) (_114282 : A) : (term3219 A P _114281 _114283 _114282) = ((@I (P -> A) _114281 _114283) = _114282).
Proof. exact (@lem8389472 ((@I (P -> A) _114281 _114283) = _114282)). Qed.
Lemma lem8389474 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem8389475 {A P : Type'} (_114281 : P -> A) (_114283 : P) (_114282 : A) : (term3220 A P _114281 _114283 _114282) = (term3221 A P _114281 _114283 _114282).
Proof. exact (MK_COMB (@lem8389474) (@lem8389473 A P _114281 _114283 _114282)). Qed.
Lemma lem8389476 {A P : Type'} (_114084 : type794 A P) (_114281 : P -> A) (_114282 : A) : ((term2811 A P _114084 _114281 _114282) = _114282) = ((term2811 A P _114084 _114281 _114282) = _114282).
Proof. exact (eq_refl ((term2811 A P _114084 _114281 _114282) = _114282)). Qed.
Lemma lem8389477 {A P : Type'} (_114283 : P) (_114084 : type794 A P) (_114281 : P -> A) (_114282 : A) : (term3218 A P _114283 _114084 _114281 _114282) = (term3222 A P _114283 _114084 _114281 _114282).
Proof. exact (MK_COMB (@lem8389475 A P _114281 _114283 _114282) (@lem8389476 A P _114084 _114281 _114282)). Qed.
Lemma lem8389478 {A P : Type'} (_114283 : P) (_114084 : type794 A P) (_114281 : P -> A) (_114282 : A) : (term3215 A P _114084 _114281 _114283 _114282) = (term3222 A P _114283 _114084 _114281 _114282).
Proof. exact (TRANS (@lem8389470 A P _114283 _114084 _114281 _114282) (@lem8389477 A P _114283 _114084 _114281 _114282)). Qed.
Lemma lem8389481 {A P : Type'} (_114283 : P) (_114281 : P -> A) (_114282 : A) (_114084 : type794 A P) (h1 : term1491 A P _114084) : term3222 A P _114283 _114084 _114281 _114282.
Proof. exact (EQ_MP (@lem8389478 A P _114283 _114084 _114281 _114282) (@lem8389467 A P _114281 _114283 _114282 _114084 h1)). Qed.
Lemma lem8389482 {A P : Type'} (_114283 : P) (_114281 : P -> A) (_114282 : A) (_114084 : type794 A P) (h1 : term1491 A P _114084) : term3222 A P _114283 _114084 _114281 _114282.
Proof. exact (@lem8389481 A P _114283 _114281 _114282 _114084 h1). Qed.
Lemma lem8389483 {A P : Type'} (s : P -> A) (y : P) (_114084 : type794 A P) (h1 : term1491 A P _114084) : term3223 A P _114084 s y.
Proof. exact (@lem8389482 A P y s (@I (P -> A) s y) _114084 h1). Qed.
Lemma lem8389486 {A P : Type'} (s : P -> A) (y : P) (_114084 : type794 A P) (h1 : term1491 A P _114084) : (term3224 A P _114084 s y) = (@I (P -> A) s y).
Proof. exact (@lem8389483 A P s y _114084 h1 (@lem8389430 A P s y)). Qed.
Lemma lem8389487 {A P : Type'} (s : P -> A) (y : P) (_114084 : type794 A P) (h1 : term1491 A P _114084) : (term3224 A P _114084 s y) = (@I (P -> A) s y).
Proof. exact (@lem8389486 A P s y _114084 h1). Qed.
Lemma lem8389488 {A P : Type'} (s : P -> A) (y : P) (_114084 : type794 A P) (h1 : term1491 A P _114084) : term3225 A P _114084 s y.
Proof. exact (fun h0 : term3226 A P _114084 s y => @lem8389487 A P s y _114084 h1). Qed.
Lemma lem8389490 (p : Prop) : (term748 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8389491 {A P : Type'} (_114084 : type794 A P) (s : P -> A) (y : P) : (term3225 A P _114084 s y) = ((term3224 A P _114084 s y) = (@I (P -> A) s y)).
Proof. exact (@lem8389490 ((term3224 A P _114084 s y) = (@I (P -> A) s y))). Qed.
Lemma lem8389492 {A P : Type'} (s : P -> A) (y : P) (_114084 : type794 A P) (h1 : term1491 A P _114084) : (term3224 A P _114084 s y) = (@I (P -> A) s y).
Proof. exact (EQ_MP (@lem8389491 A P _114084 s y) (@lem8389488 A P s y _114084 h1)). Qed.
Lemma lem8389494 {A : Type'} (x : A -> Prop) : x = x.
Proof. exact (@lem21386 (A -> Prop) x). Qed.
Lemma lem8389495 {A : Type'} (x : A -> Prop) : x = x.
Proof. exact (@lem8389494 A x). Qed.
Lemma lem8389496 {A : Type'} (lt2 : type1402 A) (y' : A) : (@I (A -> A -> Prop) lt2 y') = (@I (A -> A -> Prop) lt2 y').
Proof. exact (@lem8389495 A (@I (A -> A -> Prop) lt2 y')). Qed.
Lemma lem8389497 {A : Type'} (lt2 : type1402 A) (y' : A) : term3458 A lt2 y'.
Proof. exact (fun h0 : term3459 A lt2 y' => @lem8389496 A lt2 y'). Qed.
Lemma lem8389499 (p : Prop) : (term748 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8389500 {A : Type'} (lt2 : type1402 A) (y' : A) : (term3458 A lt2 y') = ((@I (A -> A -> Prop) lt2 y') = (@I (A -> A -> Prop) lt2 y')).
Proof. exact (@lem8389499 ((@I (A -> A -> Prop) lt2 y') = (@I (A -> A -> Prop) lt2 y'))). Qed.
Lemma lem8389501 {A : Type'} (lt2 : type1402 A) (y' : A) : (@I (A -> A -> Prop) lt2 y') = (@I (A -> A -> Prop) lt2 y').
Proof. exact (EQ_MP (@lem8389500 A lt2 y') (@lem8389497 A lt2 y')). Qed.
Lemma lem8389503 {A B P : Type'} (y : P) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (_114084 : type794 A P) (s : P -> A) (lt2 : type1402 A) (y' : A) (x : A) (h1 : term2887 A B P y P2 G2 f _114084 s lt2 y' x) : term3164 A B P P2 f _114084 s y.
Proof. exact (EQ_MP (@lem8383721 A B P y P2 G2 f _114084 s lt2 y' x h1) (@lem8381785 A B P y P2 G2 f _114084 s lt2 y' x h1)). Qed.
Lemma lem8389504 {A B P : Type'} (y : P) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (_114084 : type794 A P) (s : P -> A) (lt2 : type1402 A) (y' : A) (x : A) (h1 : term2887 A B P y P2 G2 f _114084 s lt2 y' x) : term3230 A B P P2 f _114084 s y.
Proof. exact (fun h0 : term3170 A B P P2 f _114084 s y => @lem8389503 A B P y P2 G2 f _114084 s lt2 y' x h1). Qed.
Lemma lem8389506 (p : Prop) : (term748 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8389507 {A B P : Type'} (P2 : type560 A B P) (f : A -> B) (_114084 : type794 A P) (s : P -> A) (y : P) : (term3230 A B P P2 f _114084 s y) = (term3164 A B P P2 f _114084 s y).
Proof. exact (@lem8389506 (term3164 A B P P2 f _114084 s y)). Qed.
Lemma lem8389508 {A B P : Type'} (y : P) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (_114084 : type794 A P) (s : P -> A) (lt2 : type1402 A) (y' : A) (x : A) (h1 : term2887 A B P y P2 G2 f _114084 s lt2 y' x) : term3164 A B P P2 f _114084 s y.
Proof. exact (EQ_MP (@lem8389507 A B P P2 f _114084 s y) (@lem8389504 A B P y P2 G2 f _114084 s lt2 y' x h1)). Qed.
Lemma lem8389510 {A B P : Type'} (y : P) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (_114084 : type794 A P) (s : P -> A) (lt2 : type1402 A) (y' : A) (x : A) (h1 : term2887 A B P y P2 G2 f _114084 s lt2 y' x) : term3202 A B P lt2 y' G2 f _114084 s y.
Proof. exact (EQ_MP (@lem8383734 A B P y P2 G2 f _114084 s lt2 y' x h1) (@lem8381787 A B P y P2 G2 f _114084 s lt2 y' x h1)). Qed.
Lemma lem8389511 {A B P : Type'} (y : P) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (_114084 : type794 A P) (s : P -> A) (lt2 : type1402 A) (y' : A) (x : A) (h1 : term2887 A B P y P2 G2 f _114084 s lt2 y' x) : term3460 A B P lt2 y' G2 f _114084 s y.
Proof. exact (fun h0 : term3461 A B P lt2 y' G2 f _114084 s y => @lem8389510 A B P y P2 G2 f _114084 s lt2 y' x h1). Qed.
Lemma lem8389513 (p : Prop) : (term748 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8389514 {A B P : Type'} (lt2 : type1402 A) (y' : A) (G2 : type557 A B P) (f : A -> B) (_114084 : type794 A P) (s : P -> A) (y : P) : (term3460 A B P lt2 y' G2 f _114084 s y) = (term3202 A B P lt2 y' G2 f _114084 s y).
Proof. exact (@lem8389513 (term3202 A B P lt2 y' G2 f _114084 s y)). Qed.
Lemma lem8389515 {A B P : Type'} (y : P) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (_114084 : type794 A P) (s : P -> A) (lt2 : type1402 A) (y' : A) (x : A) (h1 : term2887 A B P y P2 G2 f _114084 s lt2 y' x) : term3202 A B P lt2 y' G2 f _114084 s y.
Proof. exact (EQ_MP (@lem8389514 A B P lt2 y' G2 f _114084 s y) (@lem8389511 A B P y P2 G2 f _114084 s lt2 y' x h1)). Qed.
Lemma lem8389521 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem8389522 {A B P : Type'} (G2 : type557 A B P) (P2 : type560 A B P) (_114287 : A -> B) (lt2 : type1402 A) (_114289 : A) (s : P -> A) (_114288 : P) : (term3153 A B P P2 G2 _114287 lt2 _114289 s _114288) = (term3462 A B P G2 P2 _114287 lt2 _114289 s _114288).
Proof. exact (@lem8389521 (term2850 A B P lt2 _114289 G2 _114287 _114288) (term2853 A B P P2 _114287 _114288) (term2844 A P lt2 _114289 s _114288)). Qed.
Lemma lem8389536 (q : Prop) (p : Prop) : (p \/ q) = (q \/ p).
Proof. exact (proj1 (@lem827 (@el Prop) p q)). Qed.
Lemma lem8389537 {A B P : Type'} (lt2 : type1402 A) (_114289 : A) (s : P -> A) (P2 : type560 A B P) (_114287 : A -> B) (_114288 : P) : (term3463 A B P P2 _114287 lt2 _114289 s _114288) = (term3464 A B P lt2 _114289 s P2 _114287 _114288).
Proof. exact (@lem8389536 (term2844 A P lt2 _114289 s _114288) (term2853 A B P P2 _114287 _114288)). Qed.
Lemma lem8389543 {A B P : Type'} (lt2 : type1402 A) (_114289 : A) (G2 : type557 A B P) (_114287 : A -> B) (_114288 : P) : (term3465 A B P lt2 _114289 G2 _114287 _114288) = (term3465 A B P lt2 _114289 G2 _114287 _114288).
Proof. exact (eq_refl (term3465 A B P lt2 _114289 G2 _114287 _114288)). Qed.
Lemma lem8389544 {A B P : Type'} (G2 : type557 A B P) (lt2 : type1402 A) (_114289 : A) (s : P -> A) (P2 : type560 A B P) (_114287 : A -> B) (_114288 : P) : (term3462 A B P G2 P2 _114287 lt2 _114289 s _114288) = (term3466 A B P G2 lt2 _114289 s P2 _114287 _114288).
Proof. exact (MK_COMB (@lem8389543 A B P lt2 _114289 G2 _114287 _114288) (@lem8389537 A B P lt2 _114289 s P2 _114287 _114288)). Qed.
Lemma lem8389548 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem8389549 {A B P : Type'} (s : P -> A) (lt2 : type1402 A) (_114289 : A) (G2 : type557 A B P) (P2 : type560 A B P) (_114287 : A -> B) (_114288 : P) : (term3466 A B P G2 lt2 _114289 s P2 _114287 _114288) = (term3467 A B P s lt2 _114289 G2 P2 _114287 _114288).
Proof. exact (@lem8389548 (term2844 A P lt2 _114289 s _114288) (term2850 A B P lt2 _114289 G2 _114287 _114288) (term2853 A B P P2 _114287 _114288)). Qed.
Lemma lem8389565 {A B P : Type'} (s : P -> A) (lt2 : type1402 A) (_114289 : A) (G2 : type557 A B P) (P2 : type560 A B P) (_114287 : A -> B) (_114288 : P) : (term3462 A B P G2 P2 _114287 lt2 _114289 s _114288) = (term3467 A B P s lt2 _114289 G2 P2 _114287 _114288).
Proof. exact (TRANS (@lem8389544 A B P G2 lt2 _114289 s P2 _114287 _114288) (@lem8389549 A B P s lt2 _114289 G2 P2 _114287 _114288)). Qed.
Lemma lem8389566 {A B P : Type'} (s : P -> A) (lt2 : type1402 A) (_114289 : A) (G2 : type557 A B P) (P2 : type560 A B P) (_114287 : A -> B) (_114288 : P) : (term3153 A B P P2 G2 _114287 lt2 _114289 s _114288) = (term3467 A B P s lt2 _114289 G2 P2 _114287 _114288).
Proof. exact (TRANS (@lem8389522 A B P G2 P2 _114287 lt2 _114289 s _114288) (@lem8389565 A B P s lt2 _114289 G2 P2 _114287 _114288)). Qed.
Lemma lem8389567 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8389568 {A B P : Type'} (s : P -> A) (lt2 : type1402 A) (_114289 : A) (G2 : type557 A B P) (P2 : type560 A B P) (_114287 : A -> B) (_114288 : P) : (term3468 A B P P2 G2 _114287 lt2 _114289 s _114288) = (term3469 A B P s lt2 _114289 G2 P2 _114287 _114288).
Proof. exact (MK_COMB (@lem8389567) (@lem8389566 A B P s lt2 _114289 G2 P2 _114287 _114288)). Qed.
Lemma lem8389582 (q : Prop) (p : Prop) : (p \/ q) = (q \/ p).
Proof. exact (proj1 (@lem827 (@el Prop) p q)). Qed.
Lemma lem8389583 {A B P : Type'} (lt2 : type1402 A) (_114289 : A) (G2 : type557 A B P) (P2 : type560 A B P) (_114287 : A -> B) (_114288 : P) : (term2856 A B P P2 lt2 _114289 G2 _114287 _114288) = (term3470 A B P lt2 _114289 G2 P2 _114287 _114288).
Proof. exact (@lem8389582 (term2850 A B P lt2 _114289 G2 _114287 _114288) (term2853 A B P P2 _114287 _114288)). Qed.
Lemma lem8389589 {A P : Type'} (lt2 : type1402 A) (_114289 : A) (s : P -> A) (_114288 : P) : (term3471 A P lt2 _114289 s _114288) = (term3471 A P lt2 _114289 s _114288).
Proof. exact (eq_refl (term3471 A P lt2 _114289 s _114288)). Qed.
Lemma lem8389590 {A B P : Type'} (s : P -> A) (lt2 : type1402 A) (_114289 : A) (G2 : type557 A B P) (P2 : type560 A B P) (_114287 : A -> B) (_114288 : P) : (term3472 A B P s P2 lt2 _114289 G2 _114287 _114288) = (term3467 A B P s lt2 _114289 G2 P2 _114287 _114288).
Proof. exact (MK_COMB (@lem8389589 A P lt2 _114289 s _114288) (@lem8389583 A B P lt2 _114289 G2 P2 _114287 _114288)). Qed.
Lemma lem8389601 {A B P : Type'} (s : P -> A) (lt2 : type1402 A) (_114289 : A) (G2 : type557 A B P) (P2 : type560 A B P) (_114287 : A -> B) (_114288 : P) : ((term3153 A B P P2 G2 _114287 lt2 _114289 s _114288) = (term3472 A B P s P2 lt2 _114289 G2 _114287 _114288)) = ((term3467 A B P s lt2 _114289 G2 P2 _114287 _114288) = (term3467 A B P s lt2 _114289 G2 P2 _114287 _114288)).
Proof. exact (MK_COMB (@lem8389568 A B P s lt2 _114289 G2 P2 _114287 _114288) (@lem8389590 A B P s lt2 _114289 G2 P2 _114287 _114288)). Qed.
Lemma lem8389603 {A : Type'} (x : A) : (x = x) = True.
Proof. exact (EQ_MP (@lem20665 A x) (@lem20664 A x)). Qed.
Lemma lem8389604 (x : Prop) : (x = x) = True.
Proof. exact (@lem8389603 Prop x). Qed.
Lemma lem8389605 {A B P : Type'} (s : P -> A) (lt2 : type1402 A) (_114289 : A) (G2 : type557 A B P) (P2 : type560 A B P) (_114287 : A -> B) (_114288 : P) : ((term3467 A B P s lt2 _114289 G2 P2 _114287 _114288) = (term3467 A B P s lt2 _114289 G2 P2 _114287 _114288)) = True.
Proof. exact (@lem8389604 (term3467 A B P s lt2 _114289 G2 P2 _114287 _114288)). Qed.
Lemma lem8389606 {A B P : Type'} (s : P -> A) (P2 : type560 A B P) (lt2 : type1402 A) (_114289 : A) (G2 : type557 A B P) (_114287 : A -> B) (_114288 : P) : ((term3153 A B P P2 G2 _114287 lt2 _114289 s _114288) = (term3472 A B P s P2 lt2 _114289 G2 _114287 _114288)) = True.
Proof. exact (TRANS (@lem8389601 A B P s lt2 _114289 G2 P2 _114287 _114288) (@lem8389605 A B P s lt2 _114289 G2 P2 _114287 _114288)). Qed.
Lemma lem8389607 {A B P : Type'} (s : P -> A) (P2 : type560 A B P) (lt2 : type1402 A) (_114289 : A) (G2 : type557 A B P) (_114287 : A -> B) (_114288 : P) : True = ((term3153 A B P P2 G2 _114287 lt2 _114289 s _114288) = (term3472 A B P s P2 lt2 _114289 G2 _114287 _114288)).
Proof. exact (SYM (@lem8389606 A B P s P2 lt2 _114289 G2 _114287 _114288)). Qed.
Lemma lem8389608 {A B P : Type'} (s : P -> A) (P2 : type560 A B P) (lt2 : type1402 A) (_114289 : A) (G2 : type557 A B P) (_114287 : A -> B) (_114288 : P) : (term3153 A B P P2 G2 _114287 lt2 _114289 s _114288) = (term3472 A B P s P2 lt2 _114289 G2 _114287 _114288).
Proof. exact (EQ_MP (@lem8389607 A B P s P2 lt2 _114289 G2 _114287 _114288) (@lem0)). Qed.
Lemma lem8389609 {A B P : Type'} (_114289 : A) (_114287 : A -> B) (_114288 : P) (P2 : type560 A B P) (G2 : type557 A B P) (lt2 : type1402 A) (s : P -> A) (h1 : term1420 A B P P2 G2 lt2 s) : term3472 A B P s P2 lt2 _114289 G2 _114287 _114288.
Proof. exact (EQ_MP (@lem8389608 A B P s P2 lt2 _114289 G2 _114287 _114288) (@lem8383640 A B P _114287 _114289 _114288 P2 G2 lt2 s h1)). Qed.
Lemma lem8389611 (b : Prop) (a : Prop) : (a \/ b) = (term754 b a).
Proof. exact (EQ_MP (@lem20682 b a) (@lem20764 b a)). Qed.
Lemma lem8389612 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (_114287 : A -> B) (lt2 : type1402 A) (_114289 : A) (s : P -> A) (_114288 : P) : (term3472 A B P s P2 lt2 _114289 G2 _114287 _114288) = (term3473 A B P P2 G2 _114287 lt2 _114289 s _114288).
Proof. exact (@lem8389611 (term2856 A B P P2 lt2 _114289 G2 _114287 _114288) (term2844 A P lt2 _114289 s _114288)). Qed.
Lemma lem8389614 (a : Prop) (b : Prop) : (term756 a b) = (term757 a b).
Proof. exact (EQ_MP (@lem20789 a b) (@lem20895 a b)). Qed.
Lemma lem8389615 {A B P : Type'} (P2 : type560 A B P) (lt2 : type1402 A) (_114289 : A) (G2 : type557 A B P) (_114287 : A -> B) (_114288 : P) : (term3474 A B P P2 lt2 _114289 G2 _114287 _114288) = (term3475 A B P P2 lt2 _114289 G2 _114287 _114288).
Proof. exact (@lem8389614 (term2853 A B P P2 _114287 _114288) (term2850 A B P lt2 _114289 G2 _114287 _114288)). Qed.
Lemma lem8389617 (a : Prop) : (term47 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem8389618 {A B P : Type'} (P2 : type560 A B P) (_114287 : A -> B) (_114288 : P) : (term3235 A B P P2 _114287 _114288) = (term2851 A B P P2 _114287 _114288).
Proof. exact (@lem8389617 (term2851 A B P P2 _114287 _114288)). Qed.
Lemma lem8389619 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8389620 {A B P : Type'} (P2 : type560 A B P) (_114287 : A -> B) (_114288 : P) : (term3236 A B P P2 _114287 _114288) = (term3237 A B P P2 _114287 _114288).
Proof. exact (MK_COMB (@lem8389619) (@lem8389618 A B P P2 _114287 _114288)). Qed.
Lemma lem8389622 (a : Prop) : (term47 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem8389623 {A B P : Type'} (lt2 : type1402 A) (_114289 : A) (G2 : type557 A B P) (_114287 : A -> B) (_114288 : P) : (term3476 A B P lt2 _114289 G2 _114287 _114288) = (term2848 A B P lt2 _114289 G2 _114287 _114288).
Proof. exact (@lem8389622 (term2848 A B P lt2 _114289 G2 _114287 _114288)). Qed.
Lemma lem8389624 {A B P : Type'} (P2 : type560 A B P) (lt2 : type1402 A) (_114289 : A) (G2 : type557 A B P) (_114287 : A -> B) (_114288 : P) : (term3475 A B P P2 lt2 _114289 G2 _114287 _114288) = (term3477 A B P P2 lt2 _114289 G2 _114287 _114288).
Proof. exact (MK_COMB (@lem8389620 A B P P2 _114287 _114288) (@lem8389623 A B P lt2 _114289 G2 _114287 _114288)). Qed.
Lemma lem8389625 {A B P : Type'} (P2 : type560 A B P) (lt2 : type1402 A) (_114289 : A) (G2 : type557 A B P) (_114287 : A -> B) (_114288 : P) : (term3474 A B P P2 lt2 _114289 G2 _114287 _114288) = (term3477 A B P P2 lt2 _114289 G2 _114287 _114288).
Proof. exact (TRANS (@lem8389615 A B P P2 lt2 _114289 G2 _114287 _114288) (@lem8389624 A B P P2 lt2 _114289 G2 _114287 _114288)). Qed.
Lemma lem8389626 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem8389627 {A B P : Type'} (P2 : type560 A B P) (lt2 : type1402 A) (_114289 : A) (G2 : type557 A B P) (_114287 : A -> B) (_114288 : P) : (term3478 A B P P2 lt2 _114289 G2 _114287 _114288) = (term3479 A B P P2 lt2 _114289 G2 _114287 _114288).
Proof. exact (MK_COMB (@lem8389626) (@lem8389625 A B P P2 lt2 _114289 G2 _114287 _114288)). Qed.
Lemma lem8389628 {A P : Type'} (lt2 : type1402 A) (_114289 : A) (s : P -> A) (_114288 : P) : (term2844 A P lt2 _114289 s _114288) = (term2844 A P lt2 _114289 s _114288).
Proof. exact (eq_refl (term2844 A P lt2 _114289 s _114288)). Qed.
Lemma lem8389629 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (_114287 : A -> B) (lt2 : type1402 A) (_114289 : A) (s : P -> A) (_114288 : P) : (term3473 A B P P2 G2 _114287 lt2 _114289 s _114288) = (term3480 A B P P2 G2 _114287 lt2 _114289 s _114288).
Proof. exact (MK_COMB (@lem8389627 A B P P2 lt2 _114289 G2 _114287 _114288) (@lem8389628 A P lt2 _114289 s _114288)). Qed.
Lemma lem8389630 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (_114287 : A -> B) (lt2 : type1402 A) (_114289 : A) (s : P -> A) (_114288 : P) : (term3472 A B P s P2 lt2 _114289 G2 _114287 _114288) = (term3480 A B P P2 G2 _114287 lt2 _114289 s _114288).
Proof. exact (TRANS (@lem8389612 A B P P2 G2 _114287 lt2 _114289 s _114288) (@lem8389629 A B P P2 G2 _114287 lt2 _114289 s _114288)). Qed.
Lemma lem8389632 {A B P : Type'} (y : P) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (_114084 : type794 A P) (s : P -> A) (lt2 : type1402 A) (y' : A) (x : A) (h1 : term2887 A B P y P2 G2 f _114084 s lt2 y' x) : term3481 A B P P2 lt2 y' G2 f _114084 s y.
Proof. exact (conj (@lem8389508 A B P y P2 G2 f _114084 s lt2 y' x h1) (@lem8389515 A B P y P2 G2 f _114084 s lt2 y' x h1)). Qed.
Lemma lem8389634 {A B P : Type'} (_114287 : A -> B) (_114289 : A) (_114288 : P) (P2 : type560 A B P) (G2 : type557 A B P) (lt2 : type1402 A) (s : P -> A) (h1 : term1420 A B P P2 G2 lt2 s) : term3480 A B P P2 G2 _114287 lt2 _114289 s _114288.
Proof. exact (EQ_MP (@lem8389630 A B P P2 G2 _114287 lt2 _114289 s _114288) (@lem8389609 A B P _114289 _114287 _114288 P2 G2 lt2 s h1)). Qed.
Lemma lem8389635 {A B P : Type'} (_114287 : A -> B) (_114289 : A) (_114288 : P) (P2 : type560 A B P) (G2 : type557 A B P) (lt2 : type1402 A) (s : P -> A) (h1 : term1420 A B P P2 G2 lt2 s) : term3480 A B P P2 G2 _114287 lt2 _114289 s _114288.
Proof. exact (@lem8389634 A B P _114287 _114289 _114288 P2 G2 lt2 s h1). Qed.
Lemma lem8389636 {A B P : Type'} (f : A -> B) (y' : A) (_114084 : type794 A P) (y : P) (P2 : type560 A B P) (G2 : type557 A B P) (lt2 : type1402 A) (s : P -> A) (h1 : term1420 A B P P2 G2 lt2 s) : term3482 A B P P2 G2 f lt2 y' _114084 s y.
Proof. exact (@lem8389635 A B P f y' (term3244 A P _114084 s y) P2 G2 lt2 s h1). Qed.
Lemma lem8389639 {A B P : Type'} (y : P) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (_114084 : type794 A P) (s : P -> A) (lt2 : type1402 A) (y' : A) (x : A) (h1 : term1420 A B P P2 G2 lt2 s) (h2 : term2887 A B P y P2 G2 f _114084 s lt2 y' x) : term3483 A P lt2 y' _114084 s y.
Proof. exact (@lem8389636 A B P f y' _114084 y P2 G2 lt2 s h1 (@lem8389632 A B P y P2 G2 f _114084 s lt2 y' x h2)). Qed.
Lemma lem8389640 {A B P : Type'} (y : P) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (_114084 : type794 A P) (s : P -> A) (lt2 : type1402 A) (y' : A) (x : A) (h1 : term1420 A B P P2 G2 lt2 s) (h2 : term2887 A B P y P2 G2 f _114084 s lt2 y' x) : term3484 A P lt2 y' _114084 s y.
Proof. exact (fun h0 : term3485 A P lt2 y' _114084 s y => @lem8389639 A B P y P2 G2 f _114084 s lt2 y' x h1 h2). Qed.
Lemma lem8389642 (p : Prop) : (term748 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8389643 {A P : Type'} (lt2 : type1402 A) (y' : A) (_114084 : type794 A P) (s : P -> A) (y : P) : (term3484 A P lt2 y' _114084 s y) = (term3483 A P lt2 y' _114084 s y).
Proof. exact (@lem8389642 (term3483 A P lt2 y' _114084 s y)). Qed.
Lemma lem8389644 {A B P : Type'} (y : P) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (_114084 : type794 A P) (s : P -> A) (lt2 : type1402 A) (y' : A) (x : A) (h1 : term1420 A B P P2 G2 lt2 s) (h2 : term2887 A B P y P2 G2 f _114084 s lt2 y' x) : term3483 A P lt2 y' _114084 s y.
Proof. exact (EQ_MP (@lem8389643 A P lt2 y' _114084 s y) (@lem8389640 A B P y P2 G2 f _114084 s lt2 y' x h1 h2)). Qed.
Lemma lem8389662 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem8389663 {A : Type'} (_115177 : A) (_115176 : A -> Prop) (_115174 : A -> Prop) (_115175 : A) : (term3210 A _115176 _115177 _115174 _115175) = (term3248 A _115177 _115176 _115174 _115175).
Proof. exact (@lem8389662 (@I (A -> Prop) _115176 _115177) (term3249 A _115174 _115176) (term3250 A _115174 _115175)). Qed.
Lemma lem8389681 {A : Type'} (_115175 : A) (_115177 : A) : (term3251 A _115175 _115177) = (term3251 A _115175 _115177).
Proof. exact (eq_refl (term3251 A _115175 _115177)). Qed.
Lemma lem8389682 {A : Type'} (_115177 : A) (_115176 : A -> Prop) (_115174 : A -> Prop) (_115175 : A) : (term3212 A _115176 _115177 _115174 _115175) = (term3252 A _115177 _115176 _115174 _115175).
Proof. exact (MK_COMB (@lem8389681 A _115175 _115177) (@lem8389663 A _115177 _115176 _115174 _115175)). Qed.
Lemma lem8389686 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem8389687 {A : Type'} (_115177 : A) (_115176 : A -> Prop) (_115174 : A -> Prop) (_115175 : A) : (term3252 A _115177 _115176 _115174 _115175) = (term3253 A _115177 _115176 _115174 _115175).
Proof. exact (@lem8389686 (@I (A -> Prop) _115176 _115177) (term3254 A _115175 _115177) (term3255 A _115176 _115174 _115175)). Qed.
Lemma lem8389717 {A : Type'} (_115177 : A) (_115176 : A -> Prop) (_115174 : A -> Prop) (_115175 : A) : (term3212 A _115176 _115177 _115174 _115175) = (term3253 A _115177 _115176 _115174 _115175).
Proof. exact (TRANS (@lem8389682 A _115177 _115176 _115174 _115175) (@lem8389687 A _115177 _115176 _115174 _115175)). Qed.
Lemma lem8389718 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8389719 {A : Type'} (_115177 : A) (_115176 : A -> Prop) (_115174 : A -> Prop) (_115175 : A) : (term3256 A _115176 _115177 _115174 _115175) = (term3257 A _115177 _115176 _115174 _115175).
Proof. exact (MK_COMB (@lem8389718) (@lem8389717 A _115177 _115176 _115174 _115175)). Qed.
Lemma lem8389749 {A : Type'} (_115177 : A) (_115176 : A -> Prop) (_115174 : A -> Prop) (_115175 : A) : (term3253 A _115177 _115176 _115174 _115175) = (term3253 A _115177 _115176 _115174 _115175).
Proof. exact (eq_refl (term3253 A _115177 _115176 _115174 _115175)). Qed.
Lemma lem8389750 {A : Type'} (_115177 : A) (_115176 : A -> Prop) (_115174 : A -> Prop) (_115175 : A) : ((term3212 A _115176 _115177 _115174 _115175) = (term3253 A _115177 _115176 _115174 _115175)) = ((term3253 A _115177 _115176 _115174 _115175) = (term3253 A _115177 _115176 _115174 _115175)).
Proof. exact (MK_COMB (@lem8389719 A _115177 _115176 _115174 _115175) (@lem8389749 A _115177 _115176 _115174 _115175)). Qed.
Lemma lem8389752 {A : Type'} (x : A) : (x = x) = True.
Proof. exact (EQ_MP (@lem20665 A x) (@lem20664 A x)). Qed.
Lemma lem8389753 (x : Prop) : (x = x) = True.
Proof. exact (@lem8389752 Prop x). Qed.
Lemma lem8389754 {A : Type'} (_115177 : A) (_115176 : A -> Prop) (_115174 : A -> Prop) (_115175 : A) : ((term3253 A _115177 _115176 _115174 _115175) = (term3253 A _115177 _115176 _115174 _115175)) = True.
Proof. exact (@lem8389753 (term3253 A _115177 _115176 _115174 _115175)). Qed.
Lemma lem8389755 {A : Type'} (_115177 : A) (_115176 : A -> Prop) (_115174 : A -> Prop) (_115175 : A) : ((term3212 A _115176 _115177 _115174 _115175) = (term3253 A _115177 _115176 _115174 _115175)) = True.
Proof. exact (TRANS (@lem8389750 A _115177 _115176 _115174 _115175) (@lem8389754 A _115177 _115176 _115174 _115175)). Qed.
Lemma lem8389756 {A : Type'} (_115177 : A) (_115176 : A -> Prop) (_115174 : A -> Prop) (_115175 : A) : True = ((term3212 A _115176 _115177 _115174 _115175) = (term3253 A _115177 _115176 _115174 _115175)).
Proof. exact (SYM (@lem8389755 A _115177 _115176 _115174 _115175)). Qed.
Lemma lem8389757 {A : Type'} (_115177 : A) (_115176 : A -> Prop) (_115174 : A -> Prop) (_115175 : A) : (term3212 A _115176 _115177 _115174 _115175) = (term3253 A _115177 _115176 _115174 _115175).
Proof. exact (EQ_MP (@lem8389756 A _115177 _115176 _115174 _115175) (@lem0)). Qed.
Lemma lem8389758 {A : Type'} (_115177 : A) (_115176 : A -> Prop) (_115174 : A -> Prop) (_115175 : A) : term3253 A _115177 _115176 _115174 _115175.
Proof. exact (EQ_MP (@lem8389757 A _115177 _115176 _115174 _115175) (@lem8389137 A _115176 _115177 _115174 _115175)). Qed.
Lemma lem8389760 (b : Prop) (a : Prop) : (a \/ b) = (term754 b a).
Proof. exact (EQ_MP (@lem20682 b a) (@lem20764 b a)). Qed.
Lemma lem8389761 {A : Type'} (_115174 : A -> Prop) (_115175 : A) (_115176 : A -> Prop) (_115177 : A) : (term3253 A _115177 _115176 _115174 _115175) = (term3258 A _115174 _115175 _115176 _115177).
Proof. exact (@lem8389760 (term3259 A _115177 _115176 _115174 _115175) (@I (A -> Prop) _115176 _115177)). Qed.
Lemma lem8389763 (a : Prop) (b : Prop) : (term756 a b) = (term757 a b).
Proof. exact (EQ_MP (@lem20789 a b) (@lem20895 a b)). Qed.
Lemma lem8389764 {A : Type'} (_115177 : A) (_115176 : A -> Prop) (_115174 : A -> Prop) (_115175 : A) : (term3260 A _115177 _115176 _115174 _115175) = (term3261 A _115177 _115176 _115174 _115175).
Proof. exact (@lem8389763 (term3254 A _115175 _115177) (term3255 A _115176 _115174 _115175)). Qed.
Lemma lem8389766 (a : Prop) : (term47 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem8389767 {A : Type'} (_115175 : A) (_115177 : A) : (term3262 A _115175 _115177) = (_115175 = _115177).
Proof. exact (@lem8389766 (_115175 = _115177)). Qed.
Lemma lem8389768 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8389769 {A : Type'} (_115175 : A) (_115177 : A) : (term3263 A _115175 _115177) = (term3264 A _115175 _115177).
Proof. exact (MK_COMB (@lem8389768) (@lem8389767 A _115175 _115177)). Qed.
Lemma lem8389771 (a : Prop) (b : Prop) : (term756 a b) = (term757 a b).
Proof. exact (EQ_MP (@lem20789 a b) (@lem20895 a b)). Qed.
Lemma lem8389772 {A : Type'} (_115176 : A -> Prop) (_115174 : A -> Prop) (_115175 : A) : (term3265 A _115176 _115174 _115175) = (term3266 A _115176 _115174 _115175).
Proof. exact (@lem8389771 (term3249 A _115174 _115176) (term3250 A _115174 _115175)). Qed.
Lemma lem8389774 (a : Prop) : (term47 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem8389775 {A : Type'} (_115174 : A -> Prop) (_115176 : A -> Prop) : (term3267 A _115174 _115176) = (_115174 = _115176).
Proof. exact (@lem8389774 (_115174 = _115176)). Qed.
Lemma lem8389776 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8389777 {A : Type'} (_115174 : A -> Prop) (_115176 : A -> Prop) : (term3268 A _115174 _115176) = (term3269 A _115174 _115176).
Proof. exact (MK_COMB (@lem8389776) (@lem8389775 A _115174 _115176)). Qed.
Lemma lem8389779 (a : Prop) : (term47 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem8389780 {A : Type'} (_115174 : A -> Prop) (_115175 : A) : (term3270 A _115174 _115175) = (@I (A -> Prop) _115174 _115175).
Proof. exact (@lem8389779 (@I (A -> Prop) _115174 _115175)). Qed.
Lemma lem8389781 {A : Type'} (_115176 : A -> Prop) (_115174 : A -> Prop) (_115175 : A) : (term3266 A _115176 _115174 _115175) = (term3271 A _115176 _115174 _115175).
Proof. exact (MK_COMB (@lem8389777 A _115174 _115176) (@lem8389780 A _115174 _115175)). Qed.
Lemma lem8389782 {A : Type'} (_115176 : A -> Prop) (_115174 : A -> Prop) (_115175 : A) : (term3265 A _115176 _115174 _115175) = (term3271 A _115176 _115174 _115175).
Proof. exact (TRANS (@lem8389772 A _115176 _115174 _115175) (@lem8389781 A _115176 _115174 _115175)). Qed.
Lemma lem8389783 {A : Type'} (_115177 : A) (_115176 : A -> Prop) (_115174 : A -> Prop) (_115175 : A) : (term3261 A _115177 _115176 _115174 _115175) = (term3272 A _115177 _115176 _115174 _115175).
Proof. exact (MK_COMB (@lem8389769 A _115175 _115177) (@lem8389782 A _115176 _115174 _115175)). Qed.
Lemma lem8389784 {A : Type'} (_115177 : A) (_115176 : A -> Prop) (_115174 : A -> Prop) (_115175 : A) : (term3260 A _115177 _115176 _115174 _115175) = (term3272 A _115177 _115176 _115174 _115175).
Proof. exact (TRANS (@lem8389764 A _115177 _115176 _115174 _115175) (@lem8389783 A _115177 _115176 _115174 _115175)). Qed.
Lemma lem8389785 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem8389786 {A : Type'} (_115177 : A) (_115176 : A -> Prop) (_115174 : A -> Prop) (_115175 : A) : (term3273 A _115177 _115176 _115174 _115175) = (term3274 A _115177 _115176 _115174 _115175).
Proof. exact (MK_COMB (@lem8389785) (@lem8389784 A _115177 _115176 _115174 _115175)). Qed.
Lemma lem8389787 {A : Type'} (_115176 : A -> Prop) (_115177 : A) : (@I (A -> Prop) _115176 _115177) = (@I (A -> Prop) _115176 _115177).
Proof. exact (eq_refl (@I (A -> Prop) _115176 _115177)). Qed.
Lemma lem8389788 {A : Type'} (_115174 : A -> Prop) (_115175 : A) (_115176 : A -> Prop) (_115177 : A) : (term3258 A _115174 _115175 _115176 _115177) = (term3275 A _115174 _115175 _115176 _115177).
Proof. exact (MK_COMB (@lem8389786 A _115177 _115176 _115174 _115175) (@lem8389787 A _115176 _115177)). Qed.
Lemma lem8389789 {A : Type'} (_115174 : A -> Prop) (_115175 : A) (_115176 : A -> Prop) (_115177 : A) : (term3253 A _115177 _115176 _115174 _115175) = (term3275 A _115174 _115175 _115176 _115177).
Proof. exact (TRANS (@lem8389761 A _115174 _115175 _115176 _115177) (@lem8389788 A _115174 _115175 _115176 _115177)). Qed.
Lemma lem8389791 {A B P : Type'} (y : P) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (_114084 : type794 A P) (s : P -> A) (lt2 : type1402 A) (y' : A) (x : A) (h1 : term1420 A B P P2 G2 lt2 s) (h2 : term2887 A B P y P2 G2 f _114084 s lt2 y' x) : term3486 A P lt2 y' _114084 s y.
Proof. exact (conj (@lem8389501 A lt2 y') (@lem8389644 A B P y P2 G2 f _114084 s lt2 y' x h1 h2)). Qed.
Lemma lem8389792 {A B P : Type'} (y : P) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (_114084 : type794 A P) (s : P -> A) (lt2 : type1402 A) (y' : A) (x : A) (h1 : term1420 A B P P2 G2 lt2 s) (h2 : term1491 A P _114084) (h3 : term2887 A B P y P2 G2 f _114084 s lt2 y' x) : term3487 A P lt2 y' _114084 s y.
Proof. exact (conj (@lem8389492 A P s y _114084 h2) (@lem8389791 A B P y P2 G2 f _114084 s lt2 y' x h1 h3)). Qed.
Lemma lem8389794 {A : Type'} (_115174 : A -> Prop) (_115175 : A) (_115176 : A -> Prop) (_115177 : A) : term3275 A _115174 _115175 _115176 _115177.
Proof. exact (EQ_MP (@lem8389789 A _115174 _115175 _115176 _115177) (@lem8389758 A _115177 _115176 _115174 _115175)). Qed.
Lemma lem8389795 {A : Type'} (_115174 : A -> Prop) (_115175 : A) (_115176 : A -> Prop) (_115177 : A) : term3275 A _115174 _115175 _115176 _115177.
Proof. exact (@lem8389794 A _115174 _115175 _115176 _115177). Qed.
Lemma lem8389796 {A P : Type'} (_114084 : type794 A P) (lt2 : type1402 A) (y' : A) (s : P -> A) (y : P) : term3488 A P _114084 lt2 y' s y.
Proof. exact (@lem8389795 A (@I (A -> A -> Prop) lt2 y') (term3224 A P _114084 s y) (@I (A -> A -> Prop) lt2 y') (@I (P -> A) s y)). Qed.
Lemma lem8389799 {A B P : Type'} (y : P) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (_114084 : type794 A P) (s : P -> A) (lt2 : type1402 A) (y' : A) (x : A) (h1 : term1420 A B P P2 G2 lt2 s) (h2 : term1491 A P _114084) (h3 : term2887 A B P y P2 G2 f _114084 s lt2 y' x) : term2844 A P lt2 y' s y.
Proof. exact (@lem8389796 A P _114084 lt2 y' s y (@lem8389792 A B P y P2 G2 f _114084 s lt2 y' x h1 h2 h3)). Qed.
Lemma lem8389800 {A B P : Type'} (y : P) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (_114084 : type794 A P) (s : P -> A) (lt2 : type1402 A) (y' : A) (x : A) (h1 : term1420 A B P P2 G2 lt2 s) (h2 : term1491 A P _114084) (h3 : term2887 A B P y P2 G2 f _114084 s lt2 y' x) : term3489 A P lt2 y' s y.
Proof. exact (fun h0 : term3196 A P lt2 y' s y => @lem8389799 A B P y P2 G2 f _114084 s lt2 y' x h1 h2 h3). Qed.
Lemma lem8389802 (p : Prop) : (term748 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8389803 {A P : Type'} (lt2 : type1402 A) (y' : A) (s : P -> A) (y : P) : (term3489 A P lt2 y' s y) = (term2844 A P lt2 y' s y).
Proof. exact (@lem8389802 (term2844 A P lt2 y' s y)). Qed.
Lemma lem8389804 {A B P : Type'} (y : P) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (_114084 : type794 A P) (s : P -> A) (lt2 : type1402 A) (y' : A) (x : A) (h1 : term1420 A B P P2 G2 lt2 s) (h2 : term1491 A P _114084) (h3 : term2887 A B P y P2 G2 f _114084 s lt2 y' x) : term2844 A P lt2 y' s y.
Proof. exact (EQ_MP (@lem8389803 A P lt2 y' s y) (@lem8389800 A B P y P2 G2 f _114084 s lt2 y' x h1 h2 h3)). Qed.
Lemma lem8389807 (p : Prop) : (~ p) = (p -> False).
Proof. exact (EQ_MP (@lem21021 p) (@lem0)). Qed.
Lemma lem8389809 {A P : Type'} (lt2 : type1402 A) (y' : A) (s : P -> A) (y : P) : (term3196 A P lt2 y' s y) = (term3490 A P lt2 y' s y).
Proof. exact (@lem8389807 (term2844 A P lt2 y' s y)). Qed.
Lemma lem8389812 {A B P : Type'} (y : P) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (_114084 : type794 A P) (s : P -> A) (lt2 : type1402 A) (y' : A) (x : A) (h1 : term2887 A B P y P2 G2 f _114084 s lt2 y' x) : term3490 A P lt2 y' s y.
Proof. exact (EQ_MP (@lem8389809 A P lt2 y' s y) (@lem8383709 A B P y P2 G2 f _114084 s lt2 y' x h1)). Qed.
Lemma lem8389815 {A B P : Type'} (y : P) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (_114084 : type794 A P) (s : P -> A) (lt2 : type1402 A) (y' : A) (x : A) (h1 : term1420 A B P P2 G2 lt2 s) (h2 : term1491 A P _114084) (h3 : term2887 A B P y P2 G2 f _114084 s lt2 y' x) : False.
Proof. exact (@lem8389812 A B P y P2 G2 f _114084 s lt2 y' x h3 (@lem8389804 A B P y P2 G2 f _114084 s lt2 y' x h1 h2 h3)). Qed.
Lemma lem8389816 {A B P : Type'} (y : P) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (_114084 : type794 A P) (s : P -> A) (lt2 : type1402 A) (y' : A) (x : A) (h1 : term1420 A B P P2 G2 lt2 s) (h2 : term1491 A P _114084) (h3 : term2887 A B P y P2 G2 f _114084 s lt2 y' x) : term750.
Proof. exact (fun h0 : ~ False => @lem8389815 A B P y P2 G2 f _114084 s lt2 y' x h1 h2 h3). Qed.
Lemma lem8389818 (p : Prop) : (term748 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8389819 : term750 = False.
Proof. exact (@lem8389818 False). Qed.
Lemma lem8390144 {A B P : Type'} (s : P -> A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (lt2 : type1402 A) (y' : A) (x : A) (h1 : term2871 A B P s P1 G1 f lt2 y' x) : term2828 A B P1 f x.
Proof. exact (proj1 (@lem8375539 A B P s P1 G1 f lt2 y' x h1)). Qed.
Lemma lem8390145 {A B P : Type'} (s : P -> A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (lt2 : type1402 A) (y' : A) (x : A) (h1 : term2871 A B P s P1 G1 f lt2 y' x) : term3386 A B P1 f x.
Proof. exact (fun h0 : term2830 A B P1 f x => @lem8390144 A B P s P1 G1 f lt2 y' x h1). Qed.
Lemma lem8390147 (p : Prop) : (term748 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8390148 {A B : Type'} (P1 : type551 A B) (f : A -> B) (x : A) : (term3386 A B P1 f x) = (term2828 A B P1 f x).
Proof. exact (@lem8390147 (term2828 A B P1 f x)). Qed.
Lemma lem8390149 {A B P : Type'} (s : P -> A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (lt2 : type1402 A) (y' : A) (x : A) (h1 : term2871 A B P s P1 G1 f lt2 y' x) : term2828 A B P1 f x.
Proof. exact (EQ_MP (@lem8390148 A B P1 f x) (@lem8390145 A B P s P1 G1 f lt2 y' x h1)). Qed.
Lemma lem8390151 {A B P : Type'} (s : P -> A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (lt2 : type1402 A) (y' : A) (x : A) (h1 : term2871 A B P s P1 G1 f lt2 y' x) : term2825 A B lt2 y' G1 f x.
Proof. exact (proj2 (@lem8375539 A B P s P1 G1 f lt2 y' x h1)). Qed.
Lemma lem8390152 {A B P : Type'} (s : P -> A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (lt2 : type1402 A) (y' : A) (x : A) (h1 : term2871 A B P s P1 G1 f lt2 y' x) : term3491 A B lt2 y' G1 f x.
Proof. exact (fun h0 : term2827 A B lt2 y' G1 f x => @lem8390151 A B P s P1 G1 f lt2 y' x h1). Qed.
Lemma lem8390154 (p : Prop) : (term748 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8390155 {A B : Type'} (lt2 : type1402 A) (y' : A) (G1 : type548 A B) (f : A -> B) (x : A) : (term3491 A B lt2 y' G1 f x) = (term2825 A B lt2 y' G1 f x).
Proof. exact (@lem8390154 (term2825 A B lt2 y' G1 f x)). Qed.
Lemma lem8390156 {A B P : Type'} (s : P -> A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (lt2 : type1402 A) (y' : A) (x : A) (h1 : term2871 A B P s P1 G1 f lt2 y' x) : term2825 A B lt2 y' G1 f x.
Proof. exact (EQ_MP (@lem8390155 A B lt2 y' G1 f x) (@lem8390152 A B P s P1 G1 f lt2 y' x h1)). Qed.
Lemma lem8390162 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem8390163 {A B : Type'} (G1 : type548 A B) (P1 : type551 A B) (_114307 : A -> B) (lt2 : type1402 A) (_114309 : A) (_114308 : A) : (term3154 A B P1 G1 _114307 lt2 _114309 _114308) = (term3492 A B G1 P1 _114307 lt2 _114309 _114308).
Proof. exact (@lem8390162 (term2827 A B lt2 _114309 G1 _114307 _114308) (term2830 A B P1 _114307 _114308) (term586 A lt2 _114309 _114308)). Qed.
Lemma lem8390177 (q : Prop) (p : Prop) : (p \/ q) = (q \/ p).
Proof. exact (proj1 (@lem827 (@el Prop) p q)). Qed.
Lemma lem8390178 {A B : Type'} (lt2 : type1402 A) (_114309 : A) (P1 : type551 A B) (_114307 : A -> B) (_114308 : A) : (term3493 A B P1 _114307 lt2 _114309 _114308) = (term3494 A B lt2 _114309 P1 _114307 _114308).
Proof. exact (@lem8390177 (term586 A lt2 _114309 _114308) (term2830 A B P1 _114307 _114308)). Qed.
Lemma lem8390184 {A B : Type'} (lt2 : type1402 A) (_114309 : A) (G1 : type548 A B) (_114307 : A -> B) (_114308 : A) : (term3495 A B lt2 _114309 G1 _114307 _114308) = (term3495 A B lt2 _114309 G1 _114307 _114308).
Proof. exact (eq_refl (term3495 A B lt2 _114309 G1 _114307 _114308)). Qed.
Lemma lem8390185 {A B : Type'} (G1 : type548 A B) (lt2 : type1402 A) (_114309 : A) (P1 : type551 A B) (_114307 : A -> B) (_114308 : A) : (term3492 A B G1 P1 _114307 lt2 _114309 _114308) = (term3496 A B G1 lt2 _114309 P1 _114307 _114308).
Proof. exact (MK_COMB (@lem8390184 A B lt2 _114309 G1 _114307 _114308) (@lem8390178 A B lt2 _114309 P1 _114307 _114308)). Qed.
Lemma lem8390189 (q : Prop) (p : Prop) (r : Prop) : (term5 p q r) = (term5 q p r).
Proof. exact (proj1 (@lem20668 r p q)). Qed.
Lemma lem8390190 {A B : Type'} (lt2 : type1402 A) (_114309 : A) (G1 : type548 A B) (P1 : type551 A B) (_114307 : A -> B) (_114308 : A) : (term3496 A B G1 lt2 _114309 P1 _114307 _114308) = (term3497 A B lt2 _114309 G1 P1 _114307 _114308).
Proof. exact (@lem8390189 (term586 A lt2 _114309 _114308) (term2827 A B lt2 _114309 G1 _114307 _114308) (term2830 A B P1 _114307 _114308)). Qed.
Lemma lem8390206 {A B : Type'} (lt2 : type1402 A) (_114309 : A) (G1 : type548 A B) (P1 : type551 A B) (_114307 : A -> B) (_114308 : A) : (term3492 A B G1 P1 _114307 lt2 _114309 _114308) = (term3497 A B lt2 _114309 G1 P1 _114307 _114308).
Proof. exact (TRANS (@lem8390185 A B G1 lt2 _114309 P1 _114307 _114308) (@lem8390190 A B lt2 _114309 G1 P1 _114307 _114308)). Qed.
Lemma lem8390207 {A B : Type'} (lt2 : type1402 A) (_114309 : A) (G1 : type548 A B) (P1 : type551 A B) (_114307 : A -> B) (_114308 : A) : (term3154 A B P1 G1 _114307 lt2 _114309 _114308) = (term3497 A B lt2 _114309 G1 P1 _114307 _114308).
Proof. exact (TRANS (@lem8390163 A B G1 P1 _114307 lt2 _114309 _114308) (@lem8390206 A B lt2 _114309 G1 P1 _114307 _114308)). Qed.
Lemma lem8390208 : (@eq Prop) = (@eq Prop).
Proof. exact (eq_refl (@eq Prop)). Qed.
Lemma lem8390209 {A B : Type'} (lt2 : type1402 A) (_114309 : A) (G1 : type548 A B) (P1 : type551 A B) (_114307 : A -> B) (_114308 : A) : (term3498 A B P1 G1 _114307 lt2 _114309 _114308) = (term3499 A B lt2 _114309 G1 P1 _114307 _114308).
Proof. exact (MK_COMB (@lem8390208) (@lem8390207 A B lt2 _114309 G1 P1 _114307 _114308)). Qed.
Lemma lem8390223 (q : Prop) (p : Prop) : (p \/ q) = (q \/ p).
Proof. exact (proj1 (@lem827 (@el Prop) p q)). Qed.
Lemma lem8390224 {A B : Type'} (lt2 : type1402 A) (_114309 : A) (G1 : type548 A B) (P1 : type551 A B) (_114307 : A -> B) (_114308 : A) : (term2833 A B P1 lt2 _114309 G1 _114307 _114308) = (term3500 A B lt2 _114309 G1 P1 _114307 _114308).
Proof. exact (@lem8390223 (term2827 A B lt2 _114309 G1 _114307 _114308) (term2830 A B P1 _114307 _114308)). Qed.
Lemma lem8390230 {A : Type'} (lt2 : type1402 A) (_114309 : A) (_114308 : A) : (term841 A lt2 _114309 _114308) = (term841 A lt2 _114309 _114308).
Proof. exact (eq_refl (term841 A lt2 _114309 _114308)). Qed.
Lemma lem8390231 {A B : Type'} (lt2 : type1402 A) (_114309 : A) (G1 : type548 A B) (P1 : type551 A B) (_114307 : A -> B) (_114308 : A) : (term3501 A B P1 lt2 _114309 G1 _114307 _114308) = (term3497 A B lt2 _114309 G1 P1 _114307 _114308).
Proof. exact (MK_COMB (@lem8390230 A lt2 _114309 _114308) (@lem8390224 A B lt2 _114309 G1 P1 _114307 _114308)). Qed.
Lemma lem8390242 {A B : Type'} (lt2 : type1402 A) (_114309 : A) (G1 : type548 A B) (P1 : type551 A B) (_114307 : A -> B) (_114308 : A) : ((term3154 A B P1 G1 _114307 lt2 _114309 _114308) = (term3501 A B P1 lt2 _114309 G1 _114307 _114308)) = ((term3497 A B lt2 _114309 G1 P1 _114307 _114308) = (term3497 A B lt2 _114309 G1 P1 _114307 _114308)).
Proof. exact (MK_COMB (@lem8390209 A B lt2 _114309 G1 P1 _114307 _114308) (@lem8390231 A B lt2 _114309 G1 P1 _114307 _114308)). Qed.
Lemma lem8390244 {A : Type'} (x : A) : (x = x) = True.
Proof. exact (EQ_MP (@lem20665 A x) (@lem20664 A x)). Qed.
Lemma lem8390245 (x : Prop) : (x = x) = True.
Proof. exact (@lem8390244 Prop x). Qed.
Lemma lem8390246 {A B : Type'} (lt2 : type1402 A) (_114309 : A) (G1 : type548 A B) (P1 : type551 A B) (_114307 : A -> B) (_114308 : A) : ((term3497 A B lt2 _114309 G1 P1 _114307 _114308) = (term3497 A B lt2 _114309 G1 P1 _114307 _114308)) = True.
Proof. exact (@lem8390245 (term3497 A B lt2 _114309 G1 P1 _114307 _114308)). Qed.
Lemma lem8390247 {A B : Type'} (P1 : type551 A B) (lt2 : type1402 A) (_114309 : A) (G1 : type548 A B) (_114307 : A -> B) (_114308 : A) : ((term3154 A B P1 G1 _114307 lt2 _114309 _114308) = (term3501 A B P1 lt2 _114309 G1 _114307 _114308)) = True.
Proof. exact (TRANS (@lem8390242 A B lt2 _114309 G1 P1 _114307 _114308) (@lem8390246 A B lt2 _114309 G1 P1 _114307 _114308)). Qed.
Lemma lem8390248 {A B : Type'} (P1 : type551 A B) (lt2 : type1402 A) (_114309 : A) (G1 : type548 A B) (_114307 : A -> B) (_114308 : A) : True = ((term3154 A B P1 G1 _114307 lt2 _114309 _114308) = (term3501 A B P1 lt2 _114309 G1 _114307 _114308)).
Proof. exact (SYM (@lem8390247 A B P1 lt2 _114309 G1 _114307 _114308)). Qed.
Lemma lem8390249 {A B : Type'} (P1 : type551 A B) (lt2 : type1402 A) (_114309 : A) (G1 : type548 A B) (_114307 : A -> B) (_114308 : A) : (term3154 A B P1 G1 _114307 lt2 _114309 _114308) = (term3501 A B P1 lt2 _114309 G1 _114307 _114308).
Proof. exact (EQ_MP (@lem8390248 A B P1 lt2 _114309 G1 _114307 _114308) (@lem0)). Qed.
Lemma lem8390250 {A B : Type'} (_114309 : A) (_114307 : A -> B) (_114308 : A) (P1 : type551 A B) (G1 : type548 A B) (lt2 : type1402 A) (h1 : term1418 A B P1 G1 lt2) : term3501 A B P1 lt2 _114309 G1 _114307 _114308.
Proof. exact (EQ_MP (@lem8390249 A B P1 lt2 _114309 G1 _114307 _114308) (@lem8381933 A B _114307 _114309 _114308 P1 G1 lt2 h1)). Qed.
Lemma lem8390252 (b : Prop) (a : Prop) : (a \/ b) = (term754 b a).
Proof. exact (EQ_MP (@lem20682 b a) (@lem20764 b a)). Qed.
Lemma lem8390253 {A B : Type'} (P1 : type551 A B) (G1 : type548 A B) (_114307 : A -> B) (lt2 : type1402 A) (_114309 : A) (_114308 : A) : (term3501 A B P1 lt2 _114309 G1 _114307 _114308) = (term3502 A B P1 G1 _114307 lt2 _114309 _114308).
Proof. exact (@lem8390252 (term2833 A B P1 lt2 _114309 G1 _114307 _114308) (term586 A lt2 _114309 _114308)). Qed.
Lemma lem8390255 (a : Prop) (b : Prop) : (term756 a b) = (term757 a b).
Proof. exact (EQ_MP (@lem20789 a b) (@lem20895 a b)). Qed.
Lemma lem8390256 {A B : Type'} (P1 : type551 A B) (lt2 : type1402 A) (_114309 : A) (G1 : type548 A B) (_114307 : A -> B) (_114308 : A) : (term3503 A B P1 lt2 _114309 G1 _114307 _114308) = (term3504 A B P1 lt2 _114309 G1 _114307 _114308).
Proof. exact (@lem8390255 (term2830 A B P1 _114307 _114308) (term2827 A B lt2 _114309 G1 _114307 _114308)). Qed.
Lemma lem8390258 (a : Prop) : (term47 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem8390259 {A B : Type'} (P1 : type551 A B) (_114307 : A -> B) (_114308 : A) : (term3391 A B P1 _114307 _114308) = (term2828 A B P1 _114307 _114308).
Proof. exact (@lem8390258 (term2828 A B P1 _114307 _114308)). Qed.
Lemma lem8390260 : and = and.
Proof. exact (eq_refl and). Qed.
Lemma lem8390261 {A B : Type'} (P1 : type551 A B) (_114307 : A -> B) (_114308 : A) : (term3392 A B P1 _114307 _114308) = (term2865 A B P1 _114307 _114308).
Proof. exact (MK_COMB (@lem8390260) (@lem8390259 A B P1 _114307 _114308)). Qed.
Lemma lem8390263 (a : Prop) : (term47 a) = a.
Proof. exact (EQ_MP (@lem20780 a) (@lem0)). Qed.
Lemma lem8390264 {A B : Type'} (lt2 : type1402 A) (_114309 : A) (G1 : type548 A B) (_114307 : A -> B) (_114308 : A) : (term3505 A B lt2 _114309 G1 _114307 _114308) = (term2825 A B lt2 _114309 G1 _114307 _114308).
Proof. exact (@lem8390263 (term2825 A B lt2 _114309 G1 _114307 _114308)). Qed.
Lemma lem8390265 {A B : Type'} (P1 : type551 A B) (lt2 : type1402 A) (_114309 : A) (G1 : type548 A B) (_114307 : A -> B) (_114308 : A) : (term3504 A B P1 lt2 _114309 G1 _114307 _114308) = (term2866 A B P1 lt2 _114309 G1 _114307 _114308).
Proof. exact (MK_COMB (@lem8390261 A B P1 _114307 _114308) (@lem8390264 A B lt2 _114309 G1 _114307 _114308)). Qed.
Lemma lem8390266 {A B : Type'} (P1 : type551 A B) (lt2 : type1402 A) (_114309 : A) (G1 : type548 A B) (_114307 : A -> B) (_114308 : A) : (term3503 A B P1 lt2 _114309 G1 _114307 _114308) = (term2866 A B P1 lt2 _114309 G1 _114307 _114308).
Proof. exact (TRANS (@lem8390256 A B P1 lt2 _114309 G1 _114307 _114308) (@lem8390265 A B P1 lt2 _114309 G1 _114307 _114308)). Qed.
Lemma lem8390267 : imp = imp.
Proof. exact (eq_refl imp). Qed.
Lemma lem8390268 {A B : Type'} (P1 : type551 A B) (lt2 : type1402 A) (_114309 : A) (G1 : type548 A B) (_114307 : A -> B) (_114308 : A) : (term3506 A B P1 lt2 _114309 G1 _114307 _114308) = (term3507 A B P1 lt2 _114309 G1 _114307 _114308).
Proof. exact (MK_COMB (@lem8390267) (@lem8390266 A B P1 lt2 _114309 G1 _114307 _114308)). Qed.
Lemma lem8390269 {A : Type'} (lt2 : type1402 A) (_114309 : A) (_114308 : A) : (term586 A lt2 _114309 _114308) = (term586 A lt2 _114309 _114308).
Proof. exact (eq_refl (term586 A lt2 _114309 _114308)). Qed.
Lemma lem8390270 {A B : Type'} (P1 : type551 A B) (G1 : type548 A B) (_114307 : A -> B) (lt2 : type1402 A) (_114309 : A) (_114308 : A) : (term3502 A B P1 G1 _114307 lt2 _114309 _114308) = (term3508 A B P1 G1 _114307 lt2 _114309 _114308).
Proof. exact (MK_COMB (@lem8390268 A B P1 lt2 _114309 G1 _114307 _114308) (@lem8390269 A lt2 _114309 _114308)). Qed.
Lemma lem8390271 {A B : Type'} (P1 : type551 A B) (G1 : type548 A B) (_114307 : A -> B) (lt2 : type1402 A) (_114309 : A) (_114308 : A) : (term3501 A B P1 lt2 _114309 G1 _114307 _114308) = (term3508 A B P1 G1 _114307 lt2 _114309 _114308).
Proof. exact (TRANS (@lem8390253 A B P1 G1 _114307 lt2 _114309 _114308) (@lem8390270 A B P1 G1 _114307 lt2 _114309 _114308)). Qed.
Lemma lem8390273 {A B P : Type'} (s : P -> A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (lt2 : type1402 A) (y' : A) (x : A) (h1 : term2871 A B P s P1 G1 f lt2 y' x) : term2866 A B P1 lt2 y' G1 f x.
Proof. exact (conj (@lem8390149 A B P s P1 G1 f lt2 y' x h1) (@lem8390156 A B P s P1 G1 f lt2 y' x h1)). Qed.
Lemma lem8390275 {A B : Type'} (_114307 : A -> B) (_114309 : A) (_114308 : A) (P1 : type551 A B) (G1 : type548 A B) (lt2 : type1402 A) (h1 : term1418 A B P1 G1 lt2) : term3508 A B P1 G1 _114307 lt2 _114309 _114308.
Proof. exact (EQ_MP (@lem8390271 A B P1 G1 _114307 lt2 _114309 _114308) (@lem8390250 A B _114309 _114307 _114308 P1 G1 lt2 h1)). Qed.
Lemma lem8390276 {A B : Type'} (_114307 : A -> B) (_114309 : A) (_114308 : A) (P1 : type551 A B) (G1 : type548 A B) (lt2 : type1402 A) (h1 : term1418 A B P1 G1 lt2) : term3508 A B P1 G1 _114307 lt2 _114309 _114308.
Proof. exact (@lem8390275 A B _114307 _114309 _114308 P1 G1 lt2 h1). Qed.
Lemma lem8390277 {A B : Type'} (f : A -> B) (y' : A) (x : A) (P1 : type551 A B) (G1 : type548 A B) (lt2 : type1402 A) (h1 : term1418 A B P1 G1 lt2) : term3508 A B P1 G1 f lt2 y' x.
Proof. exact (@lem8390276 A B f y' x P1 G1 lt2 h1). Qed.
Lemma lem8390280 {A B P : Type'} (s : P -> A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (lt2 : type1402 A) (y' : A) (x : A) (h1 : term1418 A B P1 G1 lt2) (h2 : term2871 A B P s P1 G1 f lt2 y' x) : term586 A lt2 y' x.
Proof. exact (@lem8390277 A B f y' x P1 G1 lt2 h1 (@lem8390273 A B P s P1 G1 f lt2 y' x h2)). Qed.
Lemma lem8390281 {A B P : Type'} (s : P -> A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (lt2 : type1402 A) (y' : A) (x : A) (h1 : term1418 A B P1 G1 lt2) (h2 : term2871 A B P s P1 G1 f lt2 y' x) : term850 A lt2 y' x.
Proof. exact (fun h0 : term608 A lt2 y' x => @lem8390280 A B P s P1 G1 f lt2 y' x h1 h2). Qed.
Lemma lem8390283 (p : Prop) : (term748 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8390284 {A : Type'} (lt2 : type1402 A) (y' : A) (x : A) : (term850 A lt2 y' x) = (term586 A lt2 y' x).
Proof. exact (@lem8390283 (term586 A lt2 y' x)). Qed.
Lemma lem8390285 {A B P : Type'} (s : P -> A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (lt2 : type1402 A) (y' : A) (x : A) (h1 : term1418 A B P1 G1 lt2) (h2 : term2871 A B P s P1 G1 f lt2 y' x) : term586 A lt2 y' x.
Proof. exact (EQ_MP (@lem8390284 A lt2 y' x) (@lem8390281 A B P s P1 G1 f lt2 y' x h1 h2)). Qed.
Lemma lem8390288 (p : Prop) : (~ p) = (p -> False).
Proof. exact (EQ_MP (@lem21021 p) (@lem0)). Qed.
Lemma lem8390290 {A : Type'} (lt2 : type1402 A) (y' : A) (x : A) : (term608 A lt2 y' x) = (term851 A lt2 y' x).
Proof. exact (@lem8390288 (term586 A lt2 y' x)). Qed.
Lemma lem8390293 {A B P : Type'} (s : P -> A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (lt2 : type1402 A) (y' : A) (x : A) (h1 : term2871 A B P s P1 G1 f lt2 y' x) : term851 A lt2 y' x.
Proof. exact (EQ_MP (@lem8390290 A lt2 y' x) (@lem8381973 A B P s P1 G1 f lt2 y' x h1)). Qed.
Lemma lem8390296 {A B P : Type'} (s : P -> A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (lt2 : type1402 A) (y' : A) (x : A) (h1 : term1418 A B P1 G1 lt2) (h2 : term2871 A B P s P1 G1 f lt2 y' x) : False.
Proof. exact (@lem8390293 A B P s P1 G1 f lt2 y' x h2 (@lem8390285 A B P s P1 G1 f lt2 y' x h1 h2)). Qed.
Lemma lem8390297 {A B P : Type'} (s : P -> A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (lt2 : type1402 A) (y' : A) (x : A) (h1 : term1418 A B P1 G1 lt2) (h2 : term2871 A B P s P1 G1 f lt2 y' x) : term750.
Proof. exact (fun h0 : ~ False => @lem8390296 A B P s P1 G1 f lt2 y' x h1 h2). Qed.
Lemma lem8390299 (p : Prop) : (term748 p) = p.
Proof. exact (EQ_MP (@lem21114 p) (@lem21182 p)). Qed.
Lemma lem8390300 : term750 = False.
Proof. exact (@lem8390299 False). Qed.
Lemma lem8390301 {A B P : Type'} (s : P -> A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (lt2 : type1402 A) (y' : A) (x : A) (h1 : term1418 A B P1 G1 lt2) (h2 : term2871 A B P s P1 G1 f lt2 y' x) : False.
Proof. exact (EQ_MP (@lem8390300) (@lem8390297 A B P s P1 G1 f lt2 y' x h1 h2)). Qed.
Lemma lem8390302 {A B P : Type'} (y : P) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (_114084 : type794 A P) (s : P -> A) (lt2 : type1402 A) (y' : A) (x : A) (h1 : term1420 A B P P2 G2 lt2 s) (h2 : term1491 A P _114084) (h3 : term2887 A B P y P2 G2 f _114084 s lt2 y' x) : False.
Proof. exact (EQ_MP (@lem8389819) (@lem8389816 A B P y P2 G2 f _114084 s lt2 y' x h1 h2 h3)). Qed.
Lemma lem8390303 {A B P : Type'} (z : type518 A B P) (y : P) (lt2 : type1402 A) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (_114084 : type794 A P) (s : P -> A) (x : A) (h1 : term2270 A B P lt2 s z P2 G2 H2) (h2 : term1491 A P _114084) (h3 : term2923 A B P f H2 g _114084 s x) (h4 : term2944 A B P y lt2 P2 G2 f H2 g _114084 s x) : False.
Proof. exact (EQ_MP (@lem8387035) (@lem8387032 A B P z y lt2 P2 G2 f H2 g _114084 s x h1 h2 h3 h4)). Qed.
Lemma lem8390304 {A B P : Type'} (z : type518 A B P) (y : P) (lt2 : type1402 A) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (_114084 : type794 A P) (s : P -> A) (x : A) (h1 : term2270 A B P lt2 s z P2 G2 H2) (h2 : term1491 A P _114084) (h3 : term2926 A B P f G2 g _114084 s x) (h4 : term2944 A B P y lt2 P2 G2 f H2 g _114084 s x) : False.
Proof. exact (EQ_MP (@lem8386286) (@lem8386283 A B P z y lt2 P2 G2 f H2 g _114084 s x h1 h2 h3 h4)). Qed.
Lemma lem8390305 {A B P : Type'} (z : type518 A B P) (y : P) (lt2 : type1402 A) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (_114084 : type794 A P) (s : P -> A) (x : A) (h1 : term2270 A B P lt2 s z P2 G2 H2) (h2 : term1491 A P _114084) (h3 : term2935 A B P f P2 g _114084 s x) (h4 : term2944 A B P y lt2 P2 G2 f H2 g _114084 s x) : False.
Proof. exact (EQ_MP (@lem8385537) (@lem8385534 A B P z y lt2 P2 G2 f H2 g _114084 s x h1 h2 h3 h4)). Qed.
Lemma lem8390306 {A B P : Type'} (z : type518 A B P) (y : P) (lt2 : type1402 A) (G2 : type557 A B P) (H2 : type558 A B P) (f : A -> B) (P2 : type560 A B P) (g : A -> B) (_114084 : type794 A P) (s : P -> A) (x : A) (h1 : term2270 A B P lt2 s z P2 G2 H2) (h2 : term1491 A P _114084) (h3 : term2944 A B P y lt2 P2 G2 f H2 g _114084 s x) (h4 : term2937 A B P f P2 g _114084 s x) : False.
Proof. exact (EQ_MP (@lem8384761) (@lem8384758 A B P z y lt2 G2 H2 f P2 g _114084 s x h1 h2 h3 h4)). Qed.
Lemma lem8390307 {A B P : Type'} (z' : type515 A B) (s : P -> A) (lt2 : type1402 A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (H1 : type549 A B) (g : A -> B) (x : A) (h1 : term2129 A B lt2 z' P1 G1 H1) (h2 : term2893 A B f H1 g x) (h3 : term2917 A B P s lt2 P1 G1 f H1 g x) : (term2893 A B f H1 g x) = False.
Proof. exact (prop_ext (fun h4 : term2893 A B f H1 g x => @lem8389099 A B P z' s lt2 P1 G1 f H1 g x h1 h2 h3) (fun h4 : False => @lem8381597 A B f H1 g x h2)). Qed.
Lemma lem8390308 {A B P : Type'} (z' : type515 A B) (s : P -> A) (lt2 : type1402 A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (H1 : type549 A B) (g : A -> B) (x : A) (h1 : term2129 A B lt2 z' P1 G1 H1) (h2 : term2893 A B f H1 g x) (h3 : term2917 A B P s lt2 P1 G1 f H1 g x) : False.
Proof. exact (EQ_MP (@lem8390307 A B P z' s lt2 P1 G1 f H1 g x h1 h2 h3) (@lem8381597 A B f H1 g x h2)). Qed.
Lemma lem8390309 {A B P : Type'} (z' : type515 A B) (s : P -> A) (lt2 : type1402 A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (H1 : type549 A B) (g : A -> B) (x : A) (h1 : term2129 A B lt2 z' P1 G1 H1) (h2 : term2896 A B f G1 g x) (h3 : term2917 A B P s lt2 P1 G1 f H1 g x) : (term2896 A B f G1 g x) = False.
Proof. exact (prop_ext (fun h4 : term2896 A B f G1 g x => @lem8388617 A B P z' s lt2 P1 G1 f H1 g x h1 h2 h3) (fun h4 : False => @lem8381405 A B f G1 g x h2)). Qed.
Lemma lem8390310 {A B P : Type'} (z' : type515 A B) (s : P -> A) (lt2 : type1402 A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (H1 : type549 A B) (g : A -> B) (x : A) (h1 : term2129 A B lt2 z' P1 G1 H1) (h2 : term2896 A B f G1 g x) (h3 : term2917 A B P s lt2 P1 G1 f H1 g x) : False.
Proof. exact (EQ_MP (@lem8390309 A B P z' s lt2 P1 G1 f H1 g x h1 h2 h3) (@lem8381405 A B f G1 g x h2)). Qed.
Lemma lem8390311 {A B P : Type'} (z : type518 A B P) (y : P) (lt2 : type1402 A) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (_114084 : type794 A P) (s : P -> A) (x : A) (h1 : term2270 A B P lt2 s z P2 G2 H2) (h2 : term1491 A P _114084) (h3 : term2923 A B P f H2 g _114084 s x) (h4 : term2944 A B P y lt2 P2 G2 f H2 g _114084 s x) : (term2923 A B P f H2 g _114084 s x) = False.
Proof. exact (prop_ext (fun h5 : term2923 A B P f H2 g _114084 s x => @lem8390303 A B P z y lt2 P2 G2 f H2 g _114084 s x h1 h2 h3 h4) (fun h5 : False => @lem8380825 A B P f H2 g _114084 s x h3)). Qed.
Lemma lem8390312 {A B P : Type'} (z : type518 A B P) (y : P) (lt2 : type1402 A) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (_114084 : type794 A P) (s : P -> A) (x : A) (h1 : term2270 A B P lt2 s z P2 G2 H2) (h2 : term1491 A P _114084) (h3 : term2923 A B P f H2 g _114084 s x) (h4 : term2944 A B P y lt2 P2 G2 f H2 g _114084 s x) : False.
Proof. exact (EQ_MP (@lem8390311 A B P z y lt2 P2 G2 f H2 g _114084 s x h1 h2 h3 h4) (@lem8380825 A B P f H2 g _114084 s x h3)). Qed.
Lemma lem8390313 {A B P : Type'} (z : type518 A B P) (y : P) (lt2 : type1402 A) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (_114084 : type794 A P) (s : P -> A) (x : A) (h1 : term2270 A B P lt2 s z P2 G2 H2) (h2 : term1491 A P _114084) (h3 : term2926 A B P f G2 g _114084 s x) (h4 : term2944 A B P y lt2 P2 G2 f H2 g _114084 s x) : (term2926 A B P f G2 g _114084 s x) = False.
Proof. exact (prop_ext (fun h5 : term2926 A B P f G2 g _114084 s x => @lem8390304 A B P z y lt2 P2 G2 f H2 g _114084 s x h1 h2 h3 h4) (fun h5 : False => @lem8380633 A B P f G2 g _114084 s x h3)). Qed.
Lemma lem8390314 {A B P : Type'} (z : type518 A B P) (y : P) (lt2 : type1402 A) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (_114084 : type794 A P) (s : P -> A) (x : A) (h1 : term2270 A B P lt2 s z P2 G2 H2) (h2 : term1491 A P _114084) (h3 : term2926 A B P f G2 g _114084 s x) (h4 : term2944 A B P y lt2 P2 G2 f H2 g _114084 s x) : False.
Proof. exact (EQ_MP (@lem8390313 A B P z y lt2 P2 G2 f H2 g _114084 s x h1 h2 h3 h4) (@lem8380633 A B P f G2 g _114084 s x h3)). Qed.
Lemma lem8390315 {A B P : Type'} (z' : type515 A B) (s : P -> A) (lt2 : type1402 A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (H1 : type549 A B) (g : A -> B) (x : A) (h1 : term2129 A B lt2 z' P1 G1 H1) (h2 : term2893 A B f H1 g x) (h3 : term2917 A B P s lt2 P1 G1 f H1 g x) : (term2893 A B f H1 g x) = False.
Proof. exact (prop_ext (fun h4 : term2893 A B f H1 g x => @lem8390308 A B P z' s lt2 P1 G1 f H1 g x h1 h2 h3) (fun h4 : False => @lem8378457 A B f H1 g x h2)). Qed.
Lemma lem8390316 {A B P : Type'} (z' : type515 A B) (s : P -> A) (lt2 : type1402 A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (H1 : type549 A B) (g : A -> B) (x : A) (h1 : term2129 A B lt2 z' P1 G1 H1) (h2 : term2893 A B f H1 g x) (h3 : term2917 A B P s lt2 P1 G1 f H1 g x) : False.
Proof. exact (EQ_MP (@lem8390315 A B P z' s lt2 P1 G1 f H1 g x h1 h2 h3) (@lem8378457 A B f H1 g x h2)). Qed.
Lemma lem8390317 {A B P : Type'} (z' : type515 A B) (s : P -> A) (lt2 : type1402 A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (H1 : type549 A B) (g : A -> B) (x : A) (h1 : term2129 A B lt2 z' P1 G1 H1) (h2 : term2896 A B f G1 g x) (h3 : term2917 A B P s lt2 P1 G1 f H1 g x) : (term2896 A B f G1 g x) = False.
Proof. exact (prop_ext (fun h4 : term2896 A B f G1 g x => @lem8390310 A B P z' s lt2 P1 G1 f H1 g x h1 h2 h3) (fun h4 : False => @lem8378093 A B f G1 g x h2)). Qed.
Lemma lem8390318 {A B P : Type'} (z' : type515 A B) (s : P -> A) (lt2 : type1402 A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (H1 : type549 A B) (g : A -> B) (x : A) (h1 : term2129 A B lt2 z' P1 G1 H1) (h2 : term2896 A B f G1 g x) (h3 : term2917 A B P s lt2 P1 G1 f H1 g x) : False.
Proof. exact (EQ_MP (@lem8390317 A B P z' s lt2 P1 G1 f H1 g x h1 h2 h3) (@lem8378093 A B f G1 g x h2)). Qed.
Lemma lem8390319 {A B P : Type'} (z : type518 A B P) (y : P) (lt2 : type1402 A) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (_114084 : type794 A P) (s : P -> A) (x : A) (h1 : term2270 A B P lt2 s z P2 G2 H2) (h2 : term1491 A P _114084) (h3 : term2923 A B P f H2 g _114084 s x) (h4 : term2944 A B P y lt2 P2 G2 f H2 g _114084 s x) : (term2923 A B P f H2 g _114084 s x) = False.
Proof. exact (prop_ext (fun h5 : term2923 A B P f H2 g _114084 s x => @lem8390312 A B P z y lt2 P2 G2 f H2 g _114084 s x h1 h2 h3 h4) (fun h5 : False => @lem8376993 A B P f H2 g _114084 s x h3)). Qed.
Lemma lem8390320 {A B P : Type'} (z : type518 A B P) (y : P) (lt2 : type1402 A) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (_114084 : type794 A P) (s : P -> A) (x : A) (h1 : term2270 A B P lt2 s z P2 G2 H2) (h2 : term1491 A P _114084) (h3 : term2923 A B P f H2 g _114084 s x) (h4 : term2944 A B P y lt2 P2 G2 f H2 g _114084 s x) : False.
Proof. exact (EQ_MP (@lem8390319 A B P z y lt2 P2 G2 f H2 g _114084 s x h1 h2 h3 h4) (@lem8376993 A B P f H2 g _114084 s x h3)). Qed.
Lemma lem8390321 {A B P : Type'} (z : type518 A B P) (y : P) (lt2 : type1402 A) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (_114084 : type794 A P) (s : P -> A) (x : A) (h1 : term2270 A B P lt2 s z P2 G2 H2) (h2 : term1491 A P _114084) (h3 : term2926 A B P f G2 g _114084 s x) (h4 : term2944 A B P y lt2 P2 G2 f H2 g _114084 s x) : (term2926 A B P f G2 g _114084 s x) = False.
Proof. exact (prop_ext (fun h5 : term2926 A B P f G2 g _114084 s x => @lem8390314 A B P z y lt2 P2 G2 f H2 g _114084 s x h1 h2 h3 h4) (fun h5 : False => @lem8376632 A B P f G2 g _114084 s x h3)). Qed.
Lemma lem8390322 {A B P : Type'} (z : type518 A B P) (y : P) (lt2 : type1402 A) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (_114084 : type794 A P) (s : P -> A) (x : A) (h1 : term2270 A B P lt2 s z P2 G2 H2) (h2 : term1491 A P _114084) (h3 : term2926 A B P f G2 g _114084 s x) (h4 : term2944 A B P y lt2 P2 G2 f H2 g _114084 s x) : False.
Proof. exact (EQ_MP (@lem8390321 A B P z y lt2 P2 G2 f H2 g _114084 s x h1 h2 h3 h4) (@lem8376632 A B P f G2 g _114084 s x h3)). Qed.
Lemma lem8390323 {A B P : Type'} (z' : type515 A B) (s : P -> A) (lt2 : type1402 A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (H1 : type549 A B) (g : A -> B) (x : A) (h1 : term2129 A B lt2 z' P1 G1 H1) (h2 : term2893 A B f H1 g x) (h3 : term2917 A B P s lt2 P1 G1 f H1 g x) : (term2893 A B f H1 g x) = False.
Proof. exact (prop_ext (fun h4 : term2893 A B f H1 g x => @lem8390316 A B P z' s lt2 P1 G1 f H1 g x h1 h2 h3) (fun h4 : False => @lem8378457 A B f H1 g x h2)). Qed.
Lemma lem8390324 {A B P : Type'} (z' : type515 A B) (s : P -> A) (lt2 : type1402 A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (H1 : type549 A B) (g : A -> B) (x : A) (h1 : term2129 A B lt2 z' P1 G1 H1) (h2 : term2893 A B f H1 g x) (h3 : term2917 A B P s lt2 P1 G1 f H1 g x) : False.
Proof. exact (EQ_MP (@lem8390323 A B P z' s lt2 P1 G1 f H1 g x h1 h2 h3) (@lem8378457 A B f H1 g x h2)). Qed.
Lemma lem8390325 {A B P : Type'} (z' : type515 A B) (s : P -> A) (lt2 : type1402 A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (H1 : type549 A B) (g : A -> B) (x : A) (h1 : term2129 A B lt2 z' P1 G1 H1) (h2 : term2896 A B f G1 g x) (h3 : term2917 A B P s lt2 P1 G1 f H1 g x) : (term2896 A B f G1 g x) = False.
Proof. exact (prop_ext (fun h4 : term2896 A B f G1 g x => @lem8390318 A B P z' s lt2 P1 G1 f H1 g x h1 h2 h3) (fun h4 : False => @lem8378093 A B f G1 g x h2)). Qed.
Lemma lem8390326 {A B P : Type'} (z' : type515 A B) (s : P -> A) (lt2 : type1402 A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (H1 : type549 A B) (g : A -> B) (x : A) (h1 : term2129 A B lt2 z' P1 G1 H1) (h2 : term2896 A B f G1 g x) (h3 : term2917 A B P s lt2 P1 G1 f H1 g x) : False.
Proof. exact (EQ_MP (@lem8390325 A B P z' s lt2 P1 G1 f H1 g x h1 h2 h3) (@lem8378093 A B f G1 g x h2)). Qed.
Lemma lem8390327 {A B P : Type'} (z : type518 A B P) (y : P) (lt2 : type1402 A) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (_114084 : type794 A P) (s : P -> A) (x : A) (h1 : term2270 A B P lt2 s z P2 G2 H2) (h2 : term1491 A P _114084) (h3 : term2923 A B P f H2 g _114084 s x) (h4 : term2944 A B P y lt2 P2 G2 f H2 g _114084 s x) : (term2923 A B P f H2 g _114084 s x) = False.
Proof. exact (prop_ext (fun h5 : term2923 A B P f H2 g _114084 s x => @lem8390320 A B P z y lt2 P2 G2 f H2 g _114084 s x h1 h2 h3 h4) (fun h5 : False => @lem8376993 A B P f H2 g _114084 s x h3)). Qed.
Lemma lem8390328 {A B P : Type'} (z : type518 A B P) (y : P) (lt2 : type1402 A) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (_114084 : type794 A P) (s : P -> A) (x : A) (h1 : term2270 A B P lt2 s z P2 G2 H2) (h2 : term1491 A P _114084) (h3 : term2923 A B P f H2 g _114084 s x) (h4 : term2944 A B P y lt2 P2 G2 f H2 g _114084 s x) : False.
Proof. exact (EQ_MP (@lem8390327 A B P z y lt2 P2 G2 f H2 g _114084 s x h1 h2 h3 h4) (@lem8376993 A B P f H2 g _114084 s x h3)). Qed.
Lemma lem8390329 {A B P : Type'} (z : type518 A B P) (y : P) (lt2 : type1402 A) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (_114084 : type794 A P) (s : P -> A) (x : A) (h1 : term2270 A B P lt2 s z P2 G2 H2) (h2 : term1491 A P _114084) (h3 : term2926 A B P f G2 g _114084 s x) (h4 : term2944 A B P y lt2 P2 G2 f H2 g _114084 s x) : (term2926 A B P f G2 g _114084 s x) = False.
Proof. exact (prop_ext (fun h5 : term2926 A B P f G2 g _114084 s x => @lem8390322 A B P z y lt2 P2 G2 f H2 g _114084 s x h1 h2 h3 h4) (fun h5 : False => @lem8376632 A B P f G2 g _114084 s x h3)). Qed.
Lemma lem8390330 {A B P : Type'} (z : type518 A B P) (y : P) (lt2 : type1402 A) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (_114084 : type794 A P) (s : P -> A) (x : A) (h1 : term2270 A B P lt2 s z P2 G2 H2) (h2 : term1491 A P _114084) (h3 : term2926 A B P f G2 g _114084 s x) (h4 : term2944 A B P y lt2 P2 G2 f H2 g _114084 s x) : False.
Proof. exact (EQ_MP (@lem8390329 A B P z y lt2 P2 G2 f H2 g _114084 s x h1 h2 h3 h4) (@lem8376632 A B P f G2 g _114084 s x h3)). Qed.
Lemma lem8390331 {A B P : Type'} (y : P) (P2 : type560 A B P) (G2 : type557 A B P) (_114084 : type794 A P) (s : P -> A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (lt2 : type1402 A) (y' : A) (x : A) (h1 : term1418 A B P1 G1 lt2) (h2 : term1420 A B P P2 G2 lt2 s) (h3 : term1491 A P _114084) (h4 : term2889 A B P y P2 G2 _114084 s P1 G1 f lt2 y' x) : False.
Proof. exact (or_elim (@lem8375497 A B P y P2 G2 _114084 s P1 G1 f lt2 y' x h4) (fun h0 : term2887 A B P y P2 G2 f _114084 s lt2 y' x => @lem8390302 A B P y P2 G2 f _114084 s lt2 y' x h2 h3 h0) (fun h0 : term2871 A B P s P1 G1 f lt2 y' x => @lem8390301 A B P s P1 G1 f lt2 y' x h1 h0)). Qed.
Lemma lem8390332 {A B P : Type'} (z' : type515 A B) (s : P -> A) (lt2 : type1402 A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (H1 : type549 A B) (g : A -> B) (x : A) (h1 : term2129 A B lt2 z' P1 G1 H1) (h2 : term2917 A B P s lt2 P1 G1 f H1 g x) (h3 : term2899 A B G1 f H1 g x) : False.
Proof. exact (or_elim (@lem8375519 A B G1 f H1 g x h3) (fun h0 : term2896 A B f G1 g x => @lem8390326 A B P z' s lt2 P1 G1 f H1 g x h1 h0 h2) (fun h0 : term2893 A B f H1 g x => @lem8390324 A B P z' s lt2 P1 G1 f H1 g x h1 h0 h2)). Qed.
Lemma lem8390333 {A B P : Type'} (z' : type515 A B) (s : P -> A) (lt2 : type1402 A) (G1 : type548 A B) (H1 : type549 A B) (f : A -> B) (P1 : type551 A B) (g : A -> B) (x : A) (h1 : term2129 A B lt2 z' P1 G1 H1) (h2 : term2917 A B P s lt2 P1 G1 f H1 g x) (h3 : term2908 A B f P1 g x) : False.
Proof. exact (or_elim (@lem8375518 A B f P1 g x h3) (fun h0 : term2905 A B f P1 g x => @lem8387599 A B P z' s lt2 G1 H1 f P1 g x h1 h2 h0) (fun h0 : term2903 A B f P1 g x => @lem8388135 A B P z' s lt2 G1 H1 f P1 g x h1 h2 h0)). Qed.
Lemma lem8390334 {A B P : Type'} (z' : type515 A B) (s : P -> A) (lt2 : type1402 A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (H1 : type549 A B) (g : A -> B) (x : A) (h1 : term2129 A B lt2 z' P1 G1 H1) (h2 : term2917 A B P s lt2 P1 G1 f H1 g x) : False.
Proof. exact (or_elim (@lem8375516 A B P s lt2 P1 G1 f H1 g x h2) (fun h0 : term2908 A B f P1 g x => @lem8390333 A B P z' s lt2 G1 H1 f P1 g x h1 h2 h0) (fun h0 : term2899 A B G1 f H1 g x => @lem8390332 A B P z' s lt2 P1 G1 f H1 g x h1 h2 h0)). Qed.
Lemma lem8390335 {A B P : Type'} (z : type518 A B P) (y : P) (lt2 : type1402 A) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (_114084 : type794 A P) (s : P -> A) (x : A) (h1 : term2270 A B P lt2 s z P2 G2 H2) (h2 : term1491 A P _114084) (h3 : term2944 A B P y lt2 P2 G2 f H2 g _114084 s x) (h4 : term2929 A B P G2 f H2 g _114084 s x) : False.
Proof. exact (or_elim (@lem8375505 A B P G2 f H2 g _114084 s x h4) (fun h0 : term2926 A B P f G2 g _114084 s x => @lem8390330 A B P z y lt2 P2 G2 f H2 g _114084 s x h1 h2 h0 h3) (fun h0 : term2923 A B P f H2 g _114084 s x => @lem8390328 A B P z y lt2 P2 G2 f H2 g _114084 s x h1 h2 h0 h3)). Qed.
Lemma lem8390336 {A B P : Type'} (z : type518 A B P) (y : P) (lt2 : type1402 A) (G2 : type557 A B P) (H2 : type558 A B P) (f : A -> B) (P2 : type560 A B P) (g : A -> B) (_114084 : type794 A P) (s : P -> A) (x : A) (h1 : term2270 A B P lt2 s z P2 G2 H2) (h2 : term1491 A P _114084) (h3 : term2944 A B P y lt2 P2 G2 f H2 g _114084 s x) (h4 : term2940 A B P f P2 g _114084 s x) : False.
Proof. exact (or_elim (@lem8375504 A B P f P2 g _114084 s x h4) (fun h0 : term2937 A B P f P2 g _114084 s x => @lem8390306 A B P z y lt2 G2 H2 f P2 g _114084 s x h1 h2 h3 h0) (fun h0 : term2935 A B P f P2 g _114084 s x => @lem8390305 A B P z y lt2 P2 G2 f H2 g _114084 s x h1 h2 h0 h3)). Qed.
Lemma lem8390337 {A B P : Type'} (z : type518 A B P) (y : P) (lt2 : type1402 A) (P2 : type560 A B P) (G2 : type557 A B P) (f : A -> B) (H2 : type558 A B P) (g : A -> B) (_114084 : type794 A P) (s : P -> A) (x : A) (h1 : term2270 A B P lt2 s z P2 G2 H2) (h2 : term1491 A P _114084) (h3 : term2944 A B P y lt2 P2 G2 f H2 g _114084 s x) : False.
Proof. exact (or_elim (@lem8375502 A B P y lt2 P2 G2 f H2 g _114084 s x h3) (fun h0 : term2940 A B P f P2 g _114084 s x => @lem8390336 A B P z y lt2 G2 H2 f P2 g _114084 s x h1 h2 h3 h0) (fun h0 : term2929 A B P G2 f H2 g _114084 s x => @lem8390335 A B P z y lt2 P2 G2 f H2 g _114084 s x h1 h2 h3 h0)). Qed.
Lemma lem8390338 {A B P : Type'} (z' : type515 A B) (z : type518 A B P) (y : P) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (_114084 : type794 A P) (s : P -> A) (lt2 : type1402 A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (H1 : type549 A B) (g : A -> B) (x : A) (h1 : term2129 A B lt2 z' P1 G1 H1) (h2 : term2270 A B P lt2 s z P2 G2 H2) (h3 : term1491 A P _114084) (h4 : term2946 A B P y P2 G2 H2 _114084 s lt2 P1 G1 f H1 g x) : False.
Proof. exact (or_elim (@lem8375496 A B P y P2 G2 H2 _114084 s lt2 P1 G1 f H1 g x h4) (fun h0 : term2944 A B P y lt2 P2 G2 f H2 g _114084 s x => @lem8390337 A B P z y lt2 P2 G2 f H2 g _114084 s x h2 h3 h0) (fun h0 : term2917 A B P s lt2 P1 G1 f H1 g x => @lem8390334 A B P z' s lt2 P1 G1 f H1 g x h1 h0)). Qed.
Lemma lem8390339 {A B P : Type'} (z' : type515 A B) (z : type518 A B P) (H2 : type558 A B P) (H1 : type549 A B) (g : A -> B) (y : P) (P2 : type560 A B P) (G2 : type557 A B P) (_114084 : type794 A P) (s : P -> A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (lt2 : type1402 A) (y' : A) (x : A) (h1 : term1418 A B P1 G1 lt2) (h2 : term1420 A B P P2 G2 lt2 s) (h3 : term2129 A B lt2 z' P1 G1 H1) (h4 : term2270 A B P lt2 s z P2 G2 H2) (h5 : term1491 A P _114084) (h6 : term2797 A B P H2 H1 g y P2 G2 _114084 s P1 G1 f lt2 y' x) : False.
Proof. exact (or_elim (@lem8374904 A B P H2 H1 g y P2 G2 _114084 s P1 G1 f lt2 y' x h6) (fun h0 : term2946 A B P y P2 G2 H2 _114084 s lt2 P1 G1 f H1 g x => @lem8390338 A B P z' z y P2 G2 H2 _114084 s lt2 P1 G1 f H1 g x h3 h4 h5 h0) (fun h0 : term2889 A B P y P2 G2 _114084 s P1 G1 f lt2 y' x => @lem8390331 A B P y P2 G2 _114084 s P1 G1 f lt2 y' x h1 h2 h5 h0)). Qed.
Lemma lem8390340 {A B P : Type'} (z : type518 A B P) (H2 : type558 A B P) (H1 : type549 A B) (g : A -> B) (y : P) (P2 : type560 A B P) (G2 : type557 A B P) (_114084 : type794 A P) (s : P -> A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (lt2 : type1402 A) (y' : A) (x : A) (h1 : term1418 A B P1 G1 lt2) (h2 : term1420 A B P P2 G2 lt2 s) (h3 : term1417 A B lt2 P1 G1 H1) (h4 : term2270 A B P lt2 s z P2 G2 H2) (h5 : term1491 A P _114084) (h6 : term2797 A B P H2 H1 g y P2 G2 _114084 s P1 G1 f lt2 y' x) : False.
Proof. exact (ex_elim (@lem8370580 A B lt2 P1 G1 H1 h3) (fun z' : type515 A B => fun h0 : term2131 A B lt2 P1 G1 H1 z' => @lem8390339 A B P z' z H2 H1 g y P2 G2 _114084 s P1 G1 f lt2 y' x h1 h2 h0 h4 h5 h6)). Qed.
Lemma lem8390341 {A B P : Type'} (H2 : type558 A B P) (H1 : type549 A B) (g : A -> B) (y : P) (P2 : type560 A B P) (G2 : type557 A B P) (_114084 : type794 A P) (s : P -> A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (lt2 : type1402 A) (y' : A) (x : A) (h1 : term1418 A B P1 G1 lt2) (h2 : term1420 A B P P2 G2 lt2 s) (h3 : term1417 A B lt2 P1 G1 H1) (h4 : term1422 A B P lt2 s P2 G2 H2) (h5 : term1491 A P _114084) (h6 : term2797 A B P H2 H1 g y P2 G2 _114084 s P1 G1 f lt2 y' x) : False.
Proof. exact (ex_elim (@lem8371319 A B P lt2 s P2 G2 H2 h4) (fun z : type518 A B P => fun h0 : term2272 A B P lt2 s P2 G2 H2 z => @lem8390340 A B P z H2 H1 g y P2 G2 _114084 s P1 G1 f lt2 y' x h1 h2 h3 h0 h5 h6)). Qed.
Lemma lem8390342 {A B P : Type'} (H2 : type558 A B P) (H1 : type549 A B) (g : A -> B) (y : P) (P2 : type560 A B P) (G2 : type557 A B P) (_114084 : type794 A P) (s : P -> A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (lt2 : type1402 A) (x : A) (h1 : term1418 A B P1 G1 lt2) (h2 : term1420 A B P P2 G2 lt2 s) (h3 : term1417 A B lt2 P1 G1 H1) (h4 : term1422 A B P lt2 s P2 G2 H2) (h5 : term1491 A P _114084) (h6 : term2800 A B P H2 H1 g y P2 G2 _114084 s P1 G1 f lt2 x) : False.
Proof. exact (ex_elim (@lem8373555 A B P H2 H1 g y P2 G2 _114084 s P1 G1 f lt2 x h6) (fun y' : A => fun h0 : term2799 A B P H2 H1 g y P2 G2 _114084 s P1 G1 f lt2 x y' => @lem8390341 A B P H2 H1 g y P2 G2 _114084 s P1 G1 f lt2 y' x h1 h2 h3 h4 h5 h0)). Qed.
Lemma lem8390343 {A B P : Type'} (H2 : type558 A B P) (H1 : type549 A B) (g : A -> B) (P2 : type560 A B P) (G2 : type557 A B P) (_114084 : type794 A P) (s : P -> A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (lt2 : type1402 A) (x : A) (h1 : term1418 A B P1 G1 lt2) (h2 : term1420 A B P P2 G2 lt2 s) (h3 : term1417 A B lt2 P1 G1 H1) (h4 : term1422 A B P lt2 s P2 G2 H2) (h5 : term1491 A P _114084) (h6 : term2802 A B P H2 H1 g P2 G2 _114084 s P1 G1 f lt2 x) : False.
Proof. exact (ex_elim (@lem8373554 A B P H2 H1 g P2 G2 _114084 s P1 G1 f lt2 x h6) (fun y : P => fun h0 : term2801 A B P H2 H1 g P2 G2 _114084 s P1 G1 f lt2 x y => @lem8390342 A B P H2 H1 g y P2 G2 _114084 s P1 G1 f lt2 x h1 h2 h3 h4 h5 h0)). Qed.
Lemma lem8390344 {A B P : Type'} (H2 : type558 A B P) (H1 : type549 A B) (g : A -> B) (P2 : type560 A B P) (G2 : type557 A B P) (_114084 : type794 A P) (s : P -> A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (lt2 : type1402 A) (h1 : term1418 A B P1 G1 lt2) (h2 : term1420 A B P P2 G2 lt2 s) (h3 : term1417 A B lt2 P1 G1 H1) (h4 : term1422 A B P lt2 s P2 G2 H2) (h5 : term1491 A P _114084) (h6 : term2804 A B P H2 H1 g P2 G2 _114084 s P1 G1 f lt2) : False.
Proof. exact (ex_elim (@lem8373553 A B P H2 H1 g P2 G2 _114084 s P1 G1 f lt2 h6) (fun x : A => fun h0 : term2803 A B P H2 H1 g P2 G2 _114084 s P1 G1 f lt2 x => @lem8390343 A B P H2 H1 g P2 G2 _114084 s P1 G1 f lt2 x h1 h2 h3 h4 h5 h0)). Qed.
Lemma lem8390345 {A B P : Type'} (H2 : type558 A B P) (H1 : type549 A B) (P2 : type560 A B P) (G2 : type557 A B P) (_114084 : type794 A P) (s : P -> A) (P1 : type551 A B) (G1 : type548 A B) (f : A -> B) (lt2 : type1402 A) (h1 : term1418 A B P1 G1 lt2) (h2 : term1420 A B P P2 G2 lt2 s) (h3 : term1417 A B lt2 P1 G1 H1) (h4 : term1422 A B P lt2 s P2 G2 H2) (h5 : term1491 A P _114084) (h6 : term2806 A B P H2 H1 P2 G2 _114084 s P1 G1 f lt2) : False.
Proof. exact (ex_elim (@lem8373552 A B P H2 H1 P2 G2 _114084 s P1 G1 f lt2 h6) (fun g : A -> B => fun h0 : term2805 A B P H2 H1 P2 G2 _114084 s P1 G1 f lt2 g => @lem8390344 A B P H2 H1 g P2 G2 _114084 s P1 G1 f lt2 h1 h2 h3 h4 h5 h0)). Qed.
Lemma lem8390346 {A B P : Type'} (H2 : type558 A B P) (H1 : type549 A B) (P2 : type560 A B P) (G2 : type557 A B P) (_114084 : type794 A P) (s : P -> A) (P1 : type551 A B) (G1 : type548 A B) (lt2 : type1402 A) (h1 : term1418 A B P1 G1 lt2) (h2 : term1420 A B P P2 G2 lt2 s) (h3 : term1417 A B lt2 P1 G1 H1) (h4 : term1422 A B P lt2 s P2 G2 H2) (h5 : term1491 A P _114084) (h6 : term1992 A B P H2 H1 P2 G2 _114084 s P1 G1 lt2) : False.
Proof. exact (ex_elim (@lem8373551 A B P H2 H1 P2 G2 _114084 s P1 G1 lt2 h6) (fun f : A -> B => fun h0 : term2807 A B P H2 H1 P2 G2 _114084 s P1 G1 lt2 f => @lem8390345 A B P H2 H1 P2 G2 _114084 s P1 G1 f lt2 h1 h2 h3 h4 h5 h0)). Qed.
Lemma lem8390347 {A B P : Type'} (H2 : type558 A B P) (H1 : type549 A B) (P2 : type560 A B P) (G2 : type557 A B P) (_114084 : type794 A P) (s : P -> A) (P1 : type551 A B) (G1 : type548 A B) (lt2 : type1402 A) (h1 : term1418 A B P1 G1 lt2) (h2 : term1420 A B P P2 G2 lt2 s) (h3 : term1417 A B lt2 P1 G1 H1) (h4 : term1422 A B P lt2 s P2 G2 H2) (h5 : term1491 A P _114084) (h6 : term1992 A B P H2 H1 P2 G2 _114084 s P1 G1 lt2) : (term1992 A B P H2 H1 P2 G2 _114084 s P1 G1 lt2) = False.
Proof. exact (prop_ext (fun h7 : term1992 A B P H2 H1 P2 G2 _114084 s P1 G1 lt2 => @lem8390346 A B P H2 H1 P2 G2 _114084 s P1 G1 lt2 h1 h2 h3 h4 h5 h6) (fun h7 : False => @lem8370158 A B P H2 H1 P2 G2 _114084 s P1 G1 lt2 h6)). Qed.
Lemma lem8390348 {A B P : Type'} (H2 : type558 A B P) (H1 : type549 A B) (P2 : type560 A B P) (G2 : type557 A B P) (_114084 : type794 A P) (s : P -> A) (P1 : type551 A B) (G1 : type548 A B) (lt2 : type1402 A) (h1 : term1418 A B P1 G1 lt2) (h2 : term1420 A B P P2 G2 lt2 s) (h3 : term1417 A B lt2 P1 G1 H1) (h4 : term1422 A B P lt2 s P2 G2 H2) (h5 : term1491 A P _114084) (h6 : term1992 A B P H2 H1 P2 G2 _114084 s P1 G1 lt2) : False.
Proof. exact (EQ_MP (@lem8390347 A B P H2 H1 P2 G2 _114084 s P1 G1 lt2 h1 h2 h3 h4 h5 h6) (@lem8370158 A B P H2 H1 P2 G2 _114084 s P1 G1 lt2 h6)). Qed.
Lemma lem8390349 {A B P : Type'} (P1 : type551 A B) (G1 : type548 A B) (H1 : type549 A B) (lt2 : type1402 A) (s : P -> A) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (_114084 : type794 A P) (h1 : term1418 A B P1 G1 lt2) (h2 : term1420 A B P P2 G2 lt2 s) (h3 : term1417 A B lt2 P1 G1 H1) (h4 : term1422 A B P lt2 s P2 G2 H2) (h5 : term1491 A P _114084) : term1991 A B P H2 H1 P2 G2 _114084 s P1 G1 lt2.
Proof. exact (fun h0 : term1992 A B P H2 H1 P2 G2 _114084 s P1 G1 lt2 => @lem8390348 A B P H2 H1 P2 G2 _114084 s P1 G1 lt2 h1 h2 h3 h4 h5 h0). Qed.
Lemma lem8390350 {A B P : Type'} (P1 : type551 A B) (G1 : type548 A B) (H1 : type549 A B) (lt2 : type1402 A) (s : P -> A) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (_114084 : type794 A P) (h1 : term1418 A B P1 G1 lt2) (h2 : term1420 A B P P2 G2 lt2 s) (h3 : term1417 A B lt2 P1 G1 H1) (h4 : term1422 A B P lt2 s P2 G2 H2) (h5 : term1491 A P _114084) : term1961 A B P H2 H1 P2 G2 _114084 s P1 G1 lt2.
Proof. exact (EQ_MP (@lem8370157 A B P H2 H1 P2 G2 _114084 s P1 G1 lt2) (@lem8390349 A B P P1 G1 H1 lt2 s P2 G2 H2 _114084 h1 h2 h3 h4 h5)). Qed.
Lemma lem8390351 {A B P : Type'} (t : type558 A B P) (P1 : type551 A B) (G1 : type548 A B) (H1 : type549 A B) (lt2 : type1402 A) (s : P -> A) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (_114084 : type794 A P) (h1 : term1418 A B P1 G1 lt2) (h2 : term1420 A B P P2 G2 lt2 s) (h3 : term1417 A B lt2 P1 G1 H1) (h4 : term1422 A B P lt2 s P2 G2 H2) (h5 : term1491 A P _114084) : term1962 A B P t H2 H1 P2 G2 _114084 s P1 G1 lt2.
Proof. exact (fun h0 : term1890 A B P G2 P2 t H2 => @lem8390350 A B P P1 G1 H1 lt2 s P2 G2 H2 _114084 h1 h2 h3 h4 h5). Qed.
Lemma lem8390352 {A B P : Type'} (t : type558 A B P) (H2 : type558 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (s : P -> A) (lt2 : type1402 A) (P1 : type551 A B) (G1 : type548 A B) (H1 : type549 A B) (_114084 : type794 A P) (h1 : term1418 A B P1 G1 lt2) (h2 : term1420 A B P P2 G2 lt2 s) (h3 : term1417 A B lt2 P1 G1 H1) (h4 : term1491 A P _114084) : term1963 A B P t H2 H1 P2 G2 _114084 s P1 G1 lt2.
Proof. exact (fun h0 : term1422 A B P lt2 s P2 G2 H2 => @lem8390351 A B P t P1 G1 H1 lt2 s P2 G2 H2 _114084 h1 h2 h3 h0 h4). Qed.
Lemma lem8390353 {A B P : Type'} (t : type558 A B P) (H2 : type558 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (s : P -> A) (lt2 : type1402 A) (P1 : type551 A B) (G1 : type548 A B) (H1 : type549 A B) (_114084 : type794 A P) (h1 : term1418 A B P1 G1 lt2) (h2 : term1417 A B lt2 P1 G1 H1) (h3 : term1491 A P _114084) : term1964 A B P t H2 H1 P2 G2 _114084 s P1 G1 lt2.
Proof. exact (fun h0 : term1420 A B P P2 G2 lt2 s => @lem8390352 A B P t H2 P2 G2 s lt2 P1 G1 H1 _114084 h1 h0 h2 h3). Qed.
Lemma lem8390354 {A B P : Type'} (clauses : type1635 A B P) (t : type558 A B P) (H2 : type558 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (s : P -> A) (lt2 : type1402 A) (P1 : type551 A B) (G1 : type548 A B) (H1 : type549 A B) (_114084 : type794 A P) (h1 : term1418 A B P1 G1 lt2) (h2 : term1417 A B lt2 P1 G1 H1) (h3 : term1491 A P _114084) : term1965 A B P clauses t H2 H1 P2 G2 _114084 s P1 G1 lt2.
Proof. exact (fun h0 : term1924 A B P G1 P1 clauses H1 => @lem8390353 A B P t H2 P2 G2 s lt2 P1 G1 H1 _114084 h1 h2 h3). Qed.
Lemma lem8390355 {A B P : Type'} (clauses : type1635 A B P) (t : type558 A B P) (H2 : type558 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (s : P -> A) (lt2 : type1402 A) (P1 : type551 A B) (G1 : type548 A B) (H1 : type549 A B) (_114084 : type794 A P) (h1 : term1417 A B lt2 P1 G1 H1) (h2 : term1491 A P _114084) : term1966 A B P clauses t H2 H1 P2 G2 _114084 s P1 G1 lt2.
Proof. exact (fun h0 : term1418 A B P1 G1 lt2 => @lem8390354 A B P clauses t H2 P2 G2 s lt2 P1 G1 H1 _114084 h0 h1 h2). Qed.
Lemma lem8390356 {A B P : Type'} (clauses : type1635 A B P) (t : type558 A B P) (H2 : type558 A B P) (H1 : type549 A B) (P2 : type560 A B P) (G2 : type557 A B P) (s : P -> A) (P1 : type551 A B) (G1 : type548 A B) (lt2 : type1402 A) (_114084 : type794 A P) (h1 : term1491 A P _114084) : term1967 A B P clauses t H2 H1 P2 G2 _114084 s P1 G1 lt2.
Proof. exact (fun h0 : term1417 A B lt2 P1 G1 H1 => @lem8390355 A B P clauses t H2 P2 G2 s lt2 P1 G1 H1 _114084 h0 h1). Qed.
Lemma lem8390357 {A B P : Type'} (clauses : type1635 A B P) (t : type558 A B P) (H2 : type558 A B P) (H1 : type549 A B) (P2 : type560 A B P) (G2 : type557 A B P) (_114084 : type794 A P) (s : P -> A) (P1 : type551 A B) (G1 : type548 A B) (lt2 : type1402 A) : term1968 A B P clauses t H2 H1 P2 G2 _114084 s P1 G1 lt2.
Proof. exact (fun h0 : term1491 A P _114084 => @lem8390356 A B P clauses t H2 H1 P2 G2 s P1 G1 lt2 _114084 h0). Qed.
Lemma lem8390362 {A B P : Type'} (clauses : type1635 A B P) (t : type558 A B P) (H2 : type558 A B P) (H1 : type549 A B) (P2 : type560 A B P) (G2 : type557 A B P) (s : P -> A) (P1 : type551 A B) (G1 : type548 A B) (lt2 : type1402 A) : term1970 A B P clauses t H2 H1 P2 G2 s P1 G1 lt2.
Proof. exact (fun _114084 : type794 A P => @lem8390357 A B P clauses t H2 H1 P2 G2 _114084 s P1 G1 lt2). Qed.
Lemma lem8390367 {A B P : Type'} (t : type558 A B P) (H2 : type558 A B P) (H1 : type549 A B) (P2 : type560 A B P) (G2 : type557 A B P) (s : P -> A) (P1 : type551 A B) (G1 : type548 A B) (lt2 : type1402 A) : term1972 A B P t H2 H1 P2 G2 s P1 G1 lt2.
Proof. exact (fun clauses : type1635 A B P => @lem8390362 A B P clauses t H2 H1 P2 G2 s P1 G1 lt2). Qed.
Lemma lem8390372 {A B P : Type'} (H2 : type558 A B P) (H1 : type549 A B) (P2 : type560 A B P) (G2 : type557 A B P) (s : P -> A) (P1 : type551 A B) (G1 : type548 A B) (lt2 : type1402 A) : term1974 A B P H2 H1 P2 G2 s P1 G1 lt2.
Proof. exact (fun t : type558 A B P => @lem8390367 A B P t H2 H1 P2 G2 s P1 G1 lt2). Qed.
Lemma lem8390377 {A B P : Type'} (H2 : type558 A B P) (H1 : type549 A B) (P2 : type560 A B P) (G2 : type557 A B P) (s : P -> A) (P1 : type551 A B) (G1 : type548 A B) : term1976 A B P H2 H1 P2 G2 s P1 G1.
Proof. exact (fun lt2 : type1402 A => @lem8390372 A B P H2 H1 P2 G2 s P1 G1 lt2). Qed.
Lemma lem8390382 {A B P : Type'} (H2 : type558 A B P) (H1 : type549 A B) (G2 : type557 A B P) (s : P -> A) (P1 : type551 A B) (G1 : type548 A B) : term1978 A B P H2 H1 G2 s P1 G1.
Proof. exact (fun P2 : type560 A B P => @lem8390377 A B P H2 H1 P2 G2 s P1 G1). Qed.
Lemma lem8390387 {A B P : Type'} (H2 : type558 A B P) (H1 : type549 A B) (G2 : type557 A B P) (s : P -> A) (G1 : type548 A B) : term1980 A B P H2 H1 G2 s G1.
Proof. exact (fun P1 : type551 A B => @lem8390382 A B P H2 H1 G2 s P1 G1). Qed.
Lemma lem8390392 {A B P : Type'} (H2 : type558 A B P) (H1 : type549 A B) (s : P -> A) (G1 : type548 A B) : term1982 A B P H2 H1 s G1.
Proof. exact (fun G2 : type557 A B P => @lem8390387 A B P H2 H1 G2 s G1). Qed.
Lemma lem8390397 {A B P : Type'} (H2 : type558 A B P) (H1 : type549 A B) (s : P -> A) : term1984 A B P H2 H1 s.
Proof. exact (fun G1 : type548 A B => @lem8390392 A B P H2 H1 s G1). Qed.
Lemma lem8390402 {A B P : Type'} (H1 : type549 A B) (s : P -> A) : term1986 A B P H1 s.
Proof. exact (fun H2 : type558 A B P => @lem8390397 A B P H2 H1 s). Qed.
Lemma lem8390407 {A B P : Type'} (H1 : type549 A B) : term1988 A B P H1.
Proof. exact (fun s : P -> A => @lem8390402 A B P H1 s). Qed.
Lemma lem8390412 {A B P : Type'} : term1990 A B P.
Proof. exact (fun H1 : type549 A B => @lem8390407 A B P H1). Qed.
Lemma lem8390413 {A B P : Type'} : term1702 A B P.
Proof. exact (EQ_MP (@lem8370146 A B P) (@lem8390412 A B P)). Qed.
Lemma lem8390414 {A B P : Type'} (H1 : type549 A B) : term3509 A B P H1.
Proof. exact (@lem8390413 A B P H1). Qed.
Lemma lem8390415 {A B P : Type'} (H1 : type549 A B) : (term3509 A B P H1) = (term1698 A B P H1).
Proof. exact (eq_refl (term3509 A B P H1)). Qed.
Lemma lem8390416 {A B P : Type'} (H1 : type549 A B) : term1698 A B P H1.
Proof. exact (EQ_MP (@lem8390415 A B P H1) (@lem8390414 A B P H1)). Qed.
Lemma lem8390417 {A B P : Type'} (H1 : type549 A B) (s : P -> A) : term3510 A B P H1 s.
Proof. exact (@lem8390416 A B P H1 s). Qed.
Lemma lem8390418 {A B P : Type'} (s : P -> A) (H1 : type549 A B) : (term3510 A B P H1 s) = (term1694 A B P s H1).
Proof. exact (eq_refl (term3510 A B P H1 s)). Qed.
Lemma lem8390419 {A B P : Type'} (s : P -> A) (H1 : type549 A B) : term1694 A B P s H1.
Proof. exact (EQ_MP (@lem8390418 A B P s H1) (@lem8390417 A B P H1 s)). Qed.
Lemma lem8390420 {A B P : Type'} (s : P -> A) (H1 : type549 A B) (H2 : type558 A B P) : term3511 A B P s H1 H2.
Proof. exact (@lem8390419 A B P s H1 H2). Qed.
Lemma lem8390421 {A B P : Type'} (H2 : type558 A B P) (s : P -> A) (H1 : type549 A B) : (term3511 A B P s H1 H2) = (term1690 A B P H2 s H1).
Proof. exact (eq_refl (term3511 A B P s H1 H2)). Qed.
Lemma lem8390422 {A B P : Type'} (H2 : type558 A B P) (s : P -> A) (H1 : type549 A B) : term1690 A B P H2 s H1.
Proof. exact (EQ_MP (@lem8390421 A B P H2 s H1) (@lem8390420 A B P s H1 H2)). Qed.
Lemma lem8390423 {A B P : Type'} (H2 : type558 A B P) (s : P -> A) (H1 : type549 A B) (G1 : type548 A B) : term3512 A B P H2 s H1 G1.
Proof. exact (@lem8390422 A B P H2 s H1 G1). Qed.
Lemma lem8390424 {A B P : Type'} (G1 : type548 A B) (H2 : type558 A B P) (s : P -> A) (H1 : type549 A B) : (term3512 A B P H2 s H1 G1) = (term1686 A B P G1 H2 s H1).
Proof. exact (eq_refl (term3512 A B P H2 s H1 G1)). Qed.
Lemma lem8390425 {A B P : Type'} (G1 : type548 A B) (H2 : type558 A B P) (s : P -> A) (H1 : type549 A B) : term1686 A B P G1 H2 s H1.
Proof. exact (EQ_MP (@lem8390424 A B P G1 H2 s H1) (@lem8390423 A B P H2 s H1 G1)). Qed.
Lemma lem8390426 {A B P : Type'} (G1 : type548 A B) (H2 : type558 A B P) (s : P -> A) (H1 : type549 A B) (G2 : type557 A B P) : term3513 A B P G1 H2 s H1 G2.
Proof. exact (@lem8390425 A B P G1 H2 s H1 G2). Qed.
Lemma lem8390427 {A B P : Type'} (G2 : type557 A B P) (G1 : type548 A B) (H2 : type558 A B P) (s : P -> A) (H1 : type549 A B) : (term3513 A B P G1 H2 s H1 G2) = (term1682 A B P G2 G1 H2 s H1).
Proof. exact (eq_refl (term3513 A B P G1 H2 s H1 G2)). Qed.
Lemma lem8390428 {A B P : Type'} (G2 : type557 A B P) (G1 : type548 A B) (H2 : type558 A B P) (s : P -> A) (H1 : type549 A B) : term1682 A B P G2 G1 H2 s H1.
Proof. exact (EQ_MP (@lem8390427 A B P G2 G1 H2 s H1) (@lem8390426 A B P G1 H2 s H1 G2)). Qed.
Lemma lem8390429 {A B P : Type'} (G2 : type557 A B P) (G1 : type548 A B) (H2 : type558 A B P) (s : P -> A) (H1 : type549 A B) (P1 : type551 A B) : term3514 A B P G2 G1 H2 s H1 P1.
Proof. exact (@lem8390428 A B P G2 G1 H2 s H1 P1). Qed.
Lemma lem8390430 {A B P : Type'} (P1 : type551 A B) (G2 : type557 A B P) (G1 : type548 A B) (H2 : type558 A B P) (s : P -> A) (H1 : type549 A B) : (term3514 A B P G2 G1 H2 s H1 P1) = (term1678 A B P P1 G2 G1 H2 s H1).
Proof. exact (eq_refl (term3514 A B P G2 G1 H2 s H1 P1)). Qed.
Lemma lem8390431 {A B P : Type'} (P1 : type551 A B) (G2 : type557 A B P) (G1 : type548 A B) (H2 : type558 A B P) (s : P -> A) (H1 : type549 A B) : term1678 A B P P1 G2 G1 H2 s H1.
Proof. exact (EQ_MP (@lem8390430 A B P P1 G2 G1 H2 s H1) (@lem8390429 A B P G2 G1 H2 s H1 P1)). Qed.
Lemma lem8390432 {A B P : Type'} (P1 : type551 A B) (G2 : type557 A B P) (G1 : type548 A B) (H2 : type558 A B P) (s : P -> A) (H1 : type549 A B) (P2 : type560 A B P) : term3515 A B P P1 G2 G1 H2 s H1 P2.
Proof. exact (@lem8390431 A B P P1 G2 G1 H2 s H1 P2). Qed.
Lemma lem8390433 {A B P : Type'} (P2 : type560 A B P) (P1 : type551 A B) (G2 : type557 A B P) (G1 : type548 A B) (H2 : type558 A B P) (s : P -> A) (H1 : type549 A B) : (term3515 A B P P1 G2 G1 H2 s H1 P2) = (term1674 A B P P2 P1 G2 G1 H2 s H1).
Proof. exact (eq_refl (term3515 A B P P1 G2 G1 H2 s H1 P2)). Qed.
Lemma lem8390434 {A B P : Type'} (P2 : type560 A B P) (P1 : type551 A B) (G2 : type557 A B P) (G1 : type548 A B) (H2 : type558 A B P) (s : P -> A) (H1 : type549 A B) : term1674 A B P P2 P1 G2 G1 H2 s H1.
Proof. exact (EQ_MP (@lem8390433 A B P P2 P1 G2 G1 H2 s H1) (@lem8390432 A B P P1 G2 G1 H2 s H1 P2)). Qed.
Lemma lem8390435 {A B P : Type'} (P2 : type560 A B P) (P1 : type551 A B) (G2 : type557 A B P) (G1 : type548 A B) (H2 : type558 A B P) (s : P -> A) (H1 : type549 A B) (lt2 : type1402 A) : term3516 A B P P2 P1 G2 G1 H2 s H1 lt2.
Proof. exact (@lem8390434 A B P P2 P1 G2 G1 H2 s H1 lt2). Qed.
Lemma lem8390436 {A B P : Type'} (lt2 : type1402 A) (P2 : type560 A B P) (P1 : type551 A B) (G2 : type557 A B P) (G1 : type548 A B) (H2 : type558 A B P) (s : P -> A) (H1 : type549 A B) : (term3516 A B P P2 P1 G2 G1 H2 s H1 lt2) = (term1670 A B P lt2 P2 P1 G2 G1 H2 s H1).
Proof. exact (eq_refl (term3516 A B P P2 P1 G2 G1 H2 s H1 lt2)). Qed.
Lemma lem8390437 {A B P : Type'} (lt2 : type1402 A) (P2 : type560 A B P) (P1 : type551 A B) (G2 : type557 A B P) (G1 : type548 A B) (H2 : type558 A B P) (s : P -> A) (H1 : type549 A B) : term1670 A B P lt2 P2 P1 G2 G1 H2 s H1.
Proof. exact (EQ_MP (@lem8390436 A B P lt2 P2 P1 G2 G1 H2 s H1) (@lem8390435 A B P P2 P1 G2 G1 H2 s H1 lt2)). Qed.
Lemma lem8390438 {A B P : Type'} (lt2 : type1402 A) (P2 : type560 A B P) (P1 : type551 A B) (G2 : type557 A B P) (G1 : type548 A B) (H2 : type558 A B P) (s : P -> A) (H1 : type549 A B) (t : type558 A B P) : term3517 A B P lt2 P2 P1 G2 G1 H2 s H1 t.
Proof. exact (@lem8390437 A B P lt2 P2 P1 G2 G1 H2 s H1 t). Qed.
Lemma lem8390439 {A B P : Type'} (t : type558 A B P) (lt2 : type1402 A) (P2 : type560 A B P) (P1 : type551 A B) (G2 : type557 A B P) (G1 : type548 A B) (H2 : type558 A B P) (s : P -> A) (H1 : type549 A B) : (term3517 A B P lt2 P2 P1 G2 G1 H2 s H1 t) = (term1666 A B P t lt2 P2 P1 G2 G1 H2 s H1).
Proof. exact (eq_refl (term3517 A B P lt2 P2 P1 G2 G1 H2 s H1 t)). Qed.
Lemma lem8390440 {A B P : Type'} (t : type558 A B P) (lt2 : type1402 A) (P2 : type560 A B P) (P1 : type551 A B) (G2 : type557 A B P) (G1 : type548 A B) (H2 : type558 A B P) (s : P -> A) (H1 : type549 A B) : term1666 A B P t lt2 P2 P1 G2 G1 H2 s H1.
Proof. exact (EQ_MP (@lem8390439 A B P t lt2 P2 P1 G2 G1 H2 s H1) (@lem8390438 A B P lt2 P2 P1 G2 G1 H2 s H1 t)). Qed.
Lemma lem8390441 {A B P : Type'} (t : type558 A B P) (lt2 : type1402 A) (P2 : type560 A B P) (P1 : type551 A B) (G2 : type557 A B P) (G1 : type548 A B) (H2 : type558 A B P) (s : P -> A) (H1 : type549 A B) (clauses : type1635 A B P) : term3518 A B P t lt2 P2 P1 G2 G1 H2 s H1 clauses.
Proof. exact (@lem8390440 A B P t lt2 P2 P1 G2 G1 H2 s H1 clauses). Qed.
Lemma lem8390442 {A B P : Type'} (clauses : type1635 A B P) (t : type558 A B P) (lt2 : type1402 A) (P2 : type560 A B P) (P1 : type551 A B) (G2 : type557 A B P) (G1 : type548 A B) (H2 : type558 A B P) (s : P -> A) (H1 : type549 A B) : (term3518 A B P t lt2 P2 P1 G2 G1 H2 s H1 clauses) = (term1641 A B P clauses t lt2 P2 P1 G2 G1 H2 s H1).
Proof. exact (eq_refl (term3518 A B P t lt2 P2 P1 G2 G1 H2 s H1 clauses)). Qed.
Lemma lem8390443 {A B P : Type'} (clauses : type1635 A B P) (t : type558 A B P) (lt2 : type1402 A) (P2 : type560 A B P) (P1 : type551 A B) (G2 : type557 A B P) (G1 : type548 A B) (H2 : type558 A B P) (s : P -> A) (H1 : type549 A B) : term1641 A B P clauses t lt2 P2 P1 G2 G1 H2 s H1.
Proof. exact (EQ_MP (@lem8390442 A B P clauses t lt2 P2 P1 G2 G1 H2 s H1) (@lem8390441 A B P t lt2 P2 P1 G2 G1 H2 s H1 clauses)). Qed.
Lemma lem8390445 {A B P : Type'} (clauses : type1635 A B P) (t : type558 A B P) (lt2 : type1402 A) (P2 : type560 A B P) (P1 : type551 A B) (G2 : type557 A B P) (G1 : type548 A B) (H2 : type558 A B P) (s : P -> A) (H1 : type549 A B) : term1468 A B P clauses t lt2 P2 P1 G2 G1 H2 s H1.
Proof. exact (@lem8367962 A B P clauses t lt2 P2 P1 G2 G1 H2 s H1 (@lem8390443 A B P clauses t lt2 P2 P1 G2 G1 H2 s H1)). Qed.
Lemma lem8390446 {A B P : Type'} (clauses : type1635 A B P) (t : type558 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (s : P -> A) (lt2 : type1402 A) (P1 : type551 A B) (G1 : type548 A B) (H1 : type549 A B) (h1 : term1417 A B lt2 P1 G1 H1) : term1636 A B P clauses t lt2 P2 P1 G2 G1 H2 s H1.
Proof. exact (@lem8390445 A B P clauses t lt2 P2 P1 G2 G1 H2 s H1 (@lem8367285 A B lt2 P1 G1 H1 h1)). Qed.
Lemma lem8390447 {A B P : Type'} (clauses : type1635 A B P) (t : type558 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (s : P -> A) (lt2 : type1402 A) (P1 : type551 A B) (G1 : type548 A B) (H1 : type549 A B) (h1 : term1418 A B P1 G1 lt2) (h2 : term1417 A B lt2 P1 G1 H1) : term1633 A B P clauses t lt2 P2 P1 G2 G1 H2 s H1.
Proof. exact (@lem8390446 A B P clauses t P2 G2 H2 s lt2 P1 G1 H1 h2 (@lem8367287 A B P1 G1 lt2 h1)). Qed.
Lemma lem8390448 {A B P : Type'} (t : type558 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (s : P -> A) (clauses : type1635 A B P) (lt2 : type1402 A) (P1 : type551 A B) (G1 : type548 A B) (H1 : type549 A B) (h1 : term1418 A B P1 G1 lt2) (h2 : term916 A B P clauses P1 G1 H1) (h3 : term1417 A B lt2 P1 G1 H1) : term1630 A B P t lt2 P2 P1 G2 G1 H2 s H1.
Proof. exact (@lem8390447 A B P clauses t P2 G2 H2 s lt2 P1 G1 H1 h1 h3 (@lem8367286 A B P clauses P1 G1 H1 h2)). Qed.
Lemma lem8390449 {A B P : Type'} (t : type558 A B P) (H2 : type558 A B P) (clauses : type1635 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (s : P -> A) (lt2 : type1402 A) (P1 : type551 A B) (G1 : type548 A B) (H1 : type549 A B) (h1 : term1418 A B P1 G1 lt2) (h2 : term916 A B P clauses P1 G1 H1) (h3 : term1420 A B P P2 G2 lt2 s) (h4 : term1417 A B lt2 P1 G1 H1) : term1627 A B P t lt2 P2 P1 G2 G1 H2 s H1.
Proof. exact (@lem8390448 A B P t P2 G2 H2 s clauses lt2 P1 G1 H1 h1 h2 h4 (@lem8367290 A B P P2 G2 lt2 s h3)). Qed.
Lemma lem8390450 {A B P : Type'} (t : type558 A B P) (clauses : type1635 A B P) (P1 : type551 A B) (G1 : type548 A B) (H1 : type549 A B) (lt2 : type1402 A) (s : P -> A) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (h1 : term1418 A B P1 G1 lt2) (h2 : term916 A B P clauses P1 G1 H1) (h3 : term1420 A B P P2 G2 lt2 s) (h4 : term1417 A B lt2 P1 G1 H1) (h5 : term1422 A B P lt2 s P2 G2 H2) : term1624 A B P t lt2 P2 P1 G2 G1 H2 s H1.
Proof. exact (@lem8390449 A B P t H2 clauses P2 G2 s lt2 P1 G1 H1 h1 h2 h3 h4 (@lem8367292 A B P lt2 s P2 G2 H2 h5)). Qed.
Lemma lem8390451 {A B P : Type'} (clauses : type1635 A B P) (t : type558 A B P) (P1 : type551 A B) (G1 : type548 A B) (H1 : type549 A B) (lt2 : type1402 A) (s : P -> A) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (h1 : term1418 A B P1 G1 lt2) (h2 : term916 A B P clauses P1 G1 H1) (h3 : term1420 A B P P2 G2 lt2 s) (h4 : term1421 A B P t P2 G2 H2) (h5 : term1417 A B lt2 P1 G1 H1) (h6 : term1422 A B P lt2 s P2 G2 H2) : term1450 A B P lt2 P2 P1 G2 G1 H2 s H1.
Proof. exact (@lem8390450 A B P t clauses P1 G1 H1 lt2 s P2 G2 H2 h1 h2 h3 h5 h6 (@lem8367291 A B P t P2 G2 H2 h4)). Qed.
Lemma lem8390452 {A B P : Type'} (clauses : type1635 A B P) (t : type558 A B P) (lt2 : type1402 A) (P2 : type560 A B P) (P1 : type551 A B) (G2 : type557 A B P) (G1 : type548 A B) (H2 : type558 A B P) (s : P -> A) (H1 : type549 A B) (h1 : term1418 A B P1 G1 lt2) (h2 : term916 A B P clauses P1 G1 H1) (h3 : term1420 A B P P2 G2 lt2 s) (h4 : term1421 A B P t P2 G2 H2) (h5 : term1417 A B lt2 P1 G1 H1) (h6 : term1422 A B P lt2 s P2 G2 H2) (h7 : term1451 A B P lt2 P2 P1 G2 G1 H2 s H1) : False.
Proof. exact (@lem8390451 A B P clauses t P1 G1 H1 lt2 s P2 G2 H2 h1 h2 h3 h4 h5 h6 (@lem8367505 A B P lt2 P2 P1 G2 G1 H2 s H1 h7)). Qed.
Lemma lem8390453 {A B P : Type'} (clauses : type1635 A B P) (t : type558 A B P) (lt2 : type1402 A) (P2 : type560 A B P) (P1 : type551 A B) (G2 : type557 A B P) (G1 : type548 A B) (H2 : type558 A B P) (s : P -> A) (H1 : type549 A B) (h1 : term1418 A B P1 G1 lt2) (h2 : term916 A B P clauses P1 G1 H1) (h3 : term1420 A B P P2 G2 lt2 s) (h4 : term1421 A B P t P2 G2 H2) (h5 : term1417 A B lt2 P1 G1 H1) (h6 : term1422 A B P lt2 s P2 G2 H2) (h7 : term1451 A B P lt2 P2 P1 G2 G1 H2 s H1) : (term1451 A B P lt2 P2 P1 G2 G1 H2 s H1) = False.
Proof. exact (prop_ext (fun h8 : term1451 A B P lt2 P2 P1 G2 G1 H2 s H1 => @lem8390452 A B P clauses t lt2 P2 P1 G2 G1 H2 s H1 h1 h2 h3 h4 h5 h6 h7) (fun h8 : False => @lem8367505 A B P lt2 P2 P1 G2 G1 H2 s H1 h7)). Qed.
Lemma lem8390454 {A B P : Type'} (clauses : type1635 A B P) (t : type558 A B P) (lt2 : type1402 A) (P2 : type560 A B P) (P1 : type551 A B) (G2 : type557 A B P) (G1 : type548 A B) (H2 : type558 A B P) (s : P -> A) (H1 : type549 A B) (h1 : term1418 A B P1 G1 lt2) (h2 : term916 A B P clauses P1 G1 H1) (h3 : term1420 A B P P2 G2 lt2 s) (h4 : term1421 A B P t P2 G2 H2) (h5 : term1417 A B lt2 P1 G1 H1) (h6 : term1422 A B P lt2 s P2 G2 H2) (h7 : term1451 A B P lt2 P2 P1 G2 G1 H2 s H1) : False.
Proof. exact (EQ_MP (@lem8390453 A B P clauses t lt2 P2 P1 G2 G1 H2 s H1 h1 h2 h3 h4 h5 h6 h7) (@lem8367505 A B P lt2 P2 P1 G2 G1 H2 s H1 h7)). Qed.
Lemma lem8390455 {A B P : Type'} (clauses : type1635 A B P) (t : type558 A B P) (P1 : type551 A B) (G1 : type548 A B) (H1 : type549 A B) (lt2 : type1402 A) (s : P -> A) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (h1 : term1418 A B P1 G1 lt2) (h2 : term916 A B P clauses P1 G1 H1) (h3 : term1420 A B P P2 G2 lt2 s) (h4 : term1421 A B P t P2 G2 H2) (h5 : term1417 A B lt2 P1 G1 H1) (h6 : term1422 A B P lt2 s P2 G2 H2) : term1450 A B P lt2 P2 P1 G2 G1 H2 s H1.
Proof. exact (fun h0 : term1451 A B P lt2 P2 P1 G2 G1 H2 s H1 => @lem8390454 A B P clauses t lt2 P2 P1 G2 G1 H2 s H1 h1 h2 h3 h4 h5 h6 h0). Qed.
Lemma lem8390456 {A B P : Type'} (clauses : type1635 A B P) (t : type558 A B P) (P1 : type551 A B) (G1 : type548 A B) (H1 : type549 A B) (lt2 : type1402 A) (s : P -> A) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (h1 : term1418 A B P1 G1 lt2) (h2 : term916 A B P clauses P1 G1 H1) (h3 : term1420 A B P P2 G2 lt2 s) (h4 : term1421 A B P t P2 G2 H2) (h5 : term1417 A B lt2 P1 G1 H1) (h6 : term1422 A B P lt2 s P2 G2 H2) : term1449 A B P lt2 P2 P1 G2 G1 H2 s H1.
Proof. exact (EQ_MP (@lem8367504 A B P lt2 P2 P1 G2 G1 H2 s H1) (@lem8390455 A B P clauses t P1 G1 H1 lt2 s P2 G2 H2 h1 h2 h3 h4 h5 h6)). Qed.
Lemma lem8390457 {A B P : Type'} (clauses : type1635 A B P) (t : type558 A B P) (P1 : type551 A B) (G1 : type548 A B) (H1 : type549 A B) (lt2 : type1402 A) (s : P -> A) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (h1 : term1418 A B P1 G1 lt2) (h2 : term916 A B P clauses P1 G1 H1) (h3 : term1420 A B P P2 G2 lt2 s) (h4 : term1421 A B P t P2 G2 H2) (h5 : term1417 A B lt2 P1 G1 H1) (h6 : term1422 A B P lt2 s P2 G2 H2) : term3519 A B P lt2 H2 H1 P2 P1 G2 s G1.
Proof. exact (ex_intro (term3520 A B P lt2 H2 H1 P2 P1 G2 s G1) (term1538 A B P H2 s H1) (@lem8390456 A B P clauses t P1 G1 H1 lt2 s P2 G2 H2 h1 h2 h3 h4 h5 h6)). Qed.
Lemma lem8390458 {A B P : Type'} (clauses : type1635 A B P) (t : type558 A B P) (P1 : type551 A B) (G1 : type548 A B) (H1 : type549 A B) (lt2 : type1402 A) (s : P -> A) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (h1 : term1418 A B P1 G1 lt2) (h2 : term916 A B P clauses P1 G1 H1) (h3 : term1420 A B P P2 G2 lt2 s) (h4 : term1421 A B P t P2 G2 H2) (h5 : term1417 A B lt2 P1 G1 H1) (h6 : term1422 A B P lt2 s P2 G2 H2) : term3521 A B P lt2 G2 H2 G1 H1 P2 s P1.
Proof. exact (ex_intro (term3522 A B P lt2 G2 H2 G1 H1 P2 s P1) (term1522 A B P G2 s G1) (@lem8390457 A B P clauses t P1 G1 H1 lt2 s P2 G2 H2 h1 h2 h3 h4 h5 h6)). Qed.
Lemma lem8390459 {A B P : Type'} (clauses : type1635 A B P) (t : type558 A B P) (P1 : type551 A B) (G1 : type548 A B) (H1 : type549 A B) (lt2 : type1402 A) (s : P -> A) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (h1 : term1418 A B P1 G1 lt2) (h2 : term916 A B P clauses P1 G1 H1) (h3 : term1420 A B P P2 G2 lt2 s) (h4 : term1421 A B P t P2 G2 H2) (h5 : term1417 A B lt2 P1 G1 H1) (h6 : term1422 A B P lt2 s P2 G2 H2) : term1448 A B P lt2 P2 G2 H2 s P1 G1 H1.
Proof. exact (ex_intro (term1447 A B P lt2 P2 G2 H2 s P1 G1 H1) (term1503 A B P P2 s P1) (@lem8390458 A B P clauses t P1 G1 H1 lt2 s P2 G2 H2 h1 h2 h3 h4 h5 h6)). Qed.
Lemma lem8390460 {A B P : Type'} (clauses : type1635 A B P) (t : type558 A B P) (P1 : type551 A B) (G1 : type548 A B) (H1 : type549 A B) (lt2 : type1402 A) (s : P -> A) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (h1 : term1418 A B P1 G1 lt2) (h2 : term916 A B P clauses P1 G1 H1) (h3 : term1420 A B P P2 G2 lt2 s) (h4 : term1421 A B P t P2 G2 H2) (h5 : term1417 A B lt2 P1 G1 H1) (h6 : term1422 A B P lt2 s P2 G2 H2) : term1131 A B P lt2 t s clauses.
Proof. exact (EQ_MP (@lem8367500 A B P lt2 s clauses P1 G1 H1 t P2 G2 H2 h2 h4) (@lem8390459 A B P clauses t P1 G1 H1 lt2 s P2 G2 H2 h1 h2 h3 h4 h5 h6)). Qed.
Lemma lem8390461 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (t : type558 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (h1 : term1341 A B P lt2 s t P2 G2 H2) : term1419 A B P lt2 s t P2 G2 H2.
Proof. exact (proj2 (@lem8367288 A B P lt2 s t P2 G2 H2 h1)). Qed.
Lemma lem8390462 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (t : type558 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (h1 : term1341 A B P lt2 s t P2 G2 H2) : term1420 A B P P2 G2 lt2 s.
Proof. exact (proj1 (@lem8367288 A B P lt2 s t P2 G2 H2 h1)). Qed.
Lemma lem8390463 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (t : type558 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (h1 : term1419 A B P lt2 s t P2 G2 H2) : term1421 A B P t P2 G2 H2.
Proof. exact (proj2 (@lem8367289 A B P lt2 s t P2 G2 H2 h1)). Qed.
Lemma lem8390464 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) (t : type558 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (h1 : term1419 A B P lt2 s t P2 G2 H2) : term1422 A B P lt2 s P2 G2 H2.
Proof. exact (proj1 (@lem8367289 A B P lt2 s t P2 G2 H2 h1)). Qed.
Lemma lem8390465 {A B P : Type'} (clauses : type1635 A B P) (t : type558 A B P) (P1 : type551 A B) (G1 : type548 A B) (H1 : type549 A B) (lt2 : type1402 A) (s : P -> A) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (h1 : term1418 A B P1 G1 lt2) (h2 : term916 A B P clauses P1 G1 H1) (h3 : term1420 A B P P2 G2 lt2 s) (h4 : term1421 A B P t P2 G2 H2) (h5 : term1417 A B lt2 P1 G1 H1) (h6 : term1422 A B P lt2 s P2 G2 H2) : (term1421 A B P t P2 G2 H2) = (term1131 A B P lt2 t s clauses).
Proof. exact (prop_ext (fun h7 : term1421 A B P t P2 G2 H2 => @lem8390460 A B P clauses t P1 G1 H1 lt2 s P2 G2 H2 h1 h2 h3 h4 h5 h6) (fun h7 : term1131 A B P lt2 t s clauses => @lem8367291 A B P t P2 G2 H2 h4)). Qed.
Lemma lem8390466 {A B P : Type'} (clauses : type1635 A B P) (t : type558 A B P) (P1 : type551 A B) (G1 : type548 A B) (H1 : type549 A B) (lt2 : type1402 A) (s : P -> A) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (h1 : term1418 A B P1 G1 lt2) (h2 : term916 A B P clauses P1 G1 H1) (h3 : term1420 A B P P2 G2 lt2 s) (h4 : term1421 A B P t P2 G2 H2) (h5 : term1417 A B lt2 P1 G1 H1) (h6 : term1422 A B P lt2 s P2 G2 H2) : term1131 A B P lt2 t s clauses.
Proof. exact (EQ_MP (@lem8390465 A B P clauses t P1 G1 H1 lt2 s P2 G2 H2 h1 h2 h3 h4 h5 h6) (@lem8367291 A B P t P2 G2 H2 h4)). Qed.
Lemma lem8390467 {A B P : Type'} (clauses : type1635 A B P) (t : type558 A B P) (P1 : type551 A B) (G1 : type548 A B) (H1 : type549 A B) (lt2 : type1402 A) (s : P -> A) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (h1 : term1418 A B P1 G1 lt2) (h2 : term916 A B P clauses P1 G1 H1) (h3 : term1420 A B P P2 G2 lt2 s) (h4 : term1421 A B P t P2 G2 H2) (h5 : term1417 A B lt2 P1 G1 H1) (h6 : term1422 A B P lt2 s P2 G2 H2) : (term1422 A B P lt2 s P2 G2 H2) = (term1131 A B P lt2 t s clauses).
Proof. exact (prop_ext (fun h7 : term1422 A B P lt2 s P2 G2 H2 => @lem8390466 A B P clauses t P1 G1 H1 lt2 s P2 G2 H2 h1 h2 h3 h4 h5 h6) (fun h7 : term1131 A B P lt2 t s clauses => @lem8367292 A B P lt2 s P2 G2 H2 h6)). Qed.
Lemma lem8390468 {A B P : Type'} (clauses : type1635 A B P) (t : type558 A B P) (P1 : type551 A B) (G1 : type548 A B) (H1 : type549 A B) (lt2 : type1402 A) (s : P -> A) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (h1 : term1418 A B P1 G1 lt2) (h2 : term916 A B P clauses P1 G1 H1) (h3 : term1420 A B P P2 G2 lt2 s) (h4 : term1421 A B P t P2 G2 H2) (h5 : term1417 A B lt2 P1 G1 H1) (h6 : term1422 A B P lt2 s P2 G2 H2) : term1131 A B P lt2 t s clauses.
Proof. exact (EQ_MP (@lem8390467 A B P clauses t P1 G1 H1 lt2 s P2 G2 H2 h1 h2 h3 h4 h5 h6) (@lem8367292 A B P lt2 s P2 G2 H2 h6)). Qed.
Lemma lem8390469 {A B P : Type'} (clauses : type1635 A B P) (P1 : type551 A B) (G1 : type548 A B) (H1 : type549 A B) (lt2 : type1402 A) (s : P -> A) (t : type558 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (h1 : term1418 A B P1 G1 lt2) (h2 : term916 A B P clauses P1 G1 H1) (h3 : term1420 A B P P2 G2 lt2 s) (h4 : term1417 A B lt2 P1 G1 H1) (h5 : term1422 A B P lt2 s P2 G2 H2) (h6 : term1419 A B P lt2 s t P2 G2 H2) : (term1421 A B P t P2 G2 H2) = (term1131 A B P lt2 t s clauses).
Proof. exact (prop_ext (fun h7 : term1421 A B P t P2 G2 H2 => @lem8390468 A B P clauses t P1 G1 H1 lt2 s P2 G2 H2 h1 h2 h3 h7 h4 h5) (fun h7 : term1131 A B P lt2 t s clauses => @lem8390463 A B P lt2 s t P2 G2 H2 h6)). Qed.
Lemma lem8390470 {A B P : Type'} (clauses : type1635 A B P) (P1 : type551 A B) (G1 : type548 A B) (H1 : type549 A B) (lt2 : type1402 A) (s : P -> A) (t : type558 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (h1 : term1418 A B P1 G1 lt2) (h2 : term916 A B P clauses P1 G1 H1) (h3 : term1420 A B P P2 G2 lt2 s) (h4 : term1417 A B lt2 P1 G1 H1) (h5 : term1422 A B P lt2 s P2 G2 H2) (h6 : term1419 A B P lt2 s t P2 G2 H2) : term1131 A B P lt2 t s clauses.
Proof. exact (EQ_MP (@lem8390469 A B P clauses P1 G1 H1 lt2 s t P2 G2 H2 h1 h2 h3 h4 h5 h6) (@lem8390463 A B P lt2 s t P2 G2 H2 h6)). Qed.
Lemma lem8390471 {A B P : Type'} (clauses : type1635 A B P) (P1 : type551 A B) (G1 : type548 A B) (H1 : type549 A B) (lt2 : type1402 A) (s : P -> A) (t : type558 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (h1 : term1418 A B P1 G1 lt2) (h2 : term916 A B P clauses P1 G1 H1) (h3 : term1420 A B P P2 G2 lt2 s) (h4 : term1417 A B lt2 P1 G1 H1) (h5 : term1419 A B P lt2 s t P2 G2 H2) : (term1422 A B P lt2 s P2 G2 H2) = (term1131 A B P lt2 t s clauses).
Proof. exact (prop_ext (fun h6 : term1422 A B P lt2 s P2 G2 H2 => @lem8390470 A B P clauses P1 G1 H1 lt2 s t P2 G2 H2 h1 h2 h3 h4 h6 h5) (fun h6 : term1131 A B P lt2 t s clauses => @lem8390464 A B P lt2 s t P2 G2 H2 h5)). Qed.
Lemma lem8390472 {A B P : Type'} (clauses : type1635 A B P) (P1 : type551 A B) (G1 : type548 A B) (H1 : type549 A B) (lt2 : type1402 A) (s : P -> A) (t : type558 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (h1 : term1418 A B P1 G1 lt2) (h2 : term916 A B P clauses P1 G1 H1) (h3 : term1420 A B P P2 G2 lt2 s) (h4 : term1417 A B lt2 P1 G1 H1) (h5 : term1419 A B P lt2 s t P2 G2 H2) : term1131 A B P lt2 t s clauses.
Proof. exact (EQ_MP (@lem8390471 A B P clauses P1 G1 H1 lt2 s t P2 G2 H2 h1 h2 h3 h4 h5) (@lem8390464 A B P lt2 s t P2 G2 H2 h5)). Qed.
Lemma lem8390473 {A B P : Type'} (clauses : type1635 A B P) (P1 : type551 A B) (G1 : type548 A B) (H1 : type549 A B) (lt2 : type1402 A) (s : P -> A) (t : type558 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (h1 : term1418 A B P1 G1 lt2) (h2 : term916 A B P clauses P1 G1 H1) (h3 : term1420 A B P P2 G2 lt2 s) (h4 : term1417 A B lt2 P1 G1 H1) (h5 : term1419 A B P lt2 s t P2 G2 H2) : (term1420 A B P P2 G2 lt2 s) = (term1131 A B P lt2 t s clauses).
Proof. exact (prop_ext (fun h6 : term1420 A B P P2 G2 lt2 s => @lem8390472 A B P clauses P1 G1 H1 lt2 s t P2 G2 H2 h1 h2 h3 h4 h5) (fun h6 : term1131 A B P lt2 t s clauses => @lem8367290 A B P P2 G2 lt2 s h3)). Qed.
Lemma lem8390474 {A B P : Type'} (clauses : type1635 A B P) (P1 : type551 A B) (G1 : type548 A B) (H1 : type549 A B) (lt2 : type1402 A) (s : P -> A) (t : type558 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (h1 : term1418 A B P1 G1 lt2) (h2 : term916 A B P clauses P1 G1 H1) (h3 : term1420 A B P P2 G2 lt2 s) (h4 : term1417 A B lt2 P1 G1 H1) (h5 : term1419 A B P lt2 s t P2 G2 H2) : term1131 A B P lt2 t s clauses.
Proof. exact (EQ_MP (@lem8390473 A B P clauses P1 G1 H1 lt2 s t P2 G2 H2 h1 h2 h3 h4 h5) (@lem8367290 A B P P2 G2 lt2 s h3)). Qed.
Lemma lem8390475 {A B P : Type'} (clauses : type1635 A B P) (P1 : type551 A B) (G1 : type548 A B) (H1 : type549 A B) (lt2 : type1402 A) (s : P -> A) (t : type558 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (h1 : term1418 A B P1 G1 lt2) (h2 : term916 A B P clauses P1 G1 H1) (h3 : term1420 A B P P2 G2 lt2 s) (h4 : term1417 A B lt2 P1 G1 H1) (h5 : term1341 A B P lt2 s t P2 G2 H2) : (term1419 A B P lt2 s t P2 G2 H2) = (term1131 A B P lt2 t s clauses).
Proof. exact (prop_ext (fun h6 : term1419 A B P lt2 s t P2 G2 H2 => @lem8390474 A B P clauses P1 G1 H1 lt2 s t P2 G2 H2 h1 h2 h3 h4 h6) (fun h6 : term1131 A B P lt2 t s clauses => @lem8390461 A B P lt2 s t P2 G2 H2 h5)). Qed.
Lemma lem8390476 {A B P : Type'} (clauses : type1635 A B P) (P1 : type551 A B) (G1 : type548 A B) (H1 : type549 A B) (lt2 : type1402 A) (s : P -> A) (t : type558 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (h1 : term1418 A B P1 G1 lt2) (h2 : term916 A B P clauses P1 G1 H1) (h3 : term1420 A B P P2 G2 lt2 s) (h4 : term1417 A B lt2 P1 G1 H1) (h5 : term1341 A B P lt2 s t P2 G2 H2) : term1131 A B P lt2 t s clauses.
Proof. exact (EQ_MP (@lem8390475 A B P clauses P1 G1 H1 lt2 s t P2 G2 H2 h1 h2 h3 h4 h5) (@lem8390461 A B P lt2 s t P2 G2 H2 h5)). Qed.
Lemma lem8390477 {A B P : Type'} (clauses : type1635 A B P) (P1 : type551 A B) (G1 : type548 A B) (H1 : type549 A B) (lt2 : type1402 A) (s : P -> A) (t : type558 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (h1 : term1418 A B P1 G1 lt2) (h2 : term916 A B P clauses P1 G1 H1) (h3 : term1417 A B lt2 P1 G1 H1) (h4 : term1341 A B P lt2 s t P2 G2 H2) : (term1420 A B P P2 G2 lt2 s) = (term1131 A B P lt2 t s clauses).
Proof. exact (prop_ext (fun h5 : term1420 A B P P2 G2 lt2 s => @lem8390476 A B P clauses P1 G1 H1 lt2 s t P2 G2 H2 h1 h2 h5 h3 h4) (fun h5 : term1131 A B P lt2 t s clauses => @lem8390462 A B P lt2 s t P2 G2 H2 h4)). Qed.
Lemma lem8390478 {A B P : Type'} (clauses : type1635 A B P) (P1 : type551 A B) (G1 : type548 A B) (H1 : type549 A B) (lt2 : type1402 A) (s : P -> A) (t : type558 A B P) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (h1 : term1418 A B P1 G1 lt2) (h2 : term916 A B P clauses P1 G1 H1) (h3 : term1417 A B lt2 P1 G1 H1) (h4 : term1341 A B P lt2 s t P2 G2 H2) : term1131 A B P lt2 t s clauses.
Proof. exact (EQ_MP (@lem8390477 A B P clauses P1 G1 H1 lt2 s t P2 G2 H2 h1 h2 h3 h4) (@lem8390462 A B P lt2 s t P2 G2 H2 h4)). Qed.
Lemma lem8390479 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (t : type558 A B P) (s : P -> A) (clauses : type1635 A B P) (lt2 : type1402 A) (P1 : type551 A B) (G1 : type548 A B) (H1 : type549 A B) (h1 : term1418 A B P1 G1 lt2) (h2 : term916 A B P clauses P1 G1 H1) (h3 : term1417 A B lt2 P1 G1 H1) : term1350 A B P P2 G2 H2 lt2 t s clauses.
Proof. exact (fun h0 : term1341 A B P lt2 s t P2 G2 H2 => @lem8390478 A B P clauses P1 G1 H1 lt2 s t P2 G2 H2 h1 h2 h3 h0). Qed.
Lemma lem8390480 {A B P : Type'} (lt2 : type1402 A) (clauses : type1635 A B P) (P1 : type551 A B) (G1 : type548 A B) (H1 : type549 A B) (h1 : term922 A B P lt2 clauses P1 G1 H1) : term919 A B P lt2 clauses P1 G1 H1.
Proof. exact (proj2 (@lem8367283 A B P lt2 clauses P1 G1 H1 h1)). Qed.
Lemma lem8390481 {A B P : Type'} (lt2 : type1402 A) (clauses : type1635 A B P) (P1 : type551 A B) (G1 : type548 A B) (H1 : type549 A B) (h1 : term922 A B P lt2 clauses P1 G1 H1) : term1417 A B lt2 P1 G1 H1.
Proof. exact (proj1 (@lem8367283 A B P lt2 clauses P1 G1 H1 h1)). Qed.
Lemma lem8390482 {A B P : Type'} (lt2 : type1402 A) (clauses : type1635 A B P) (P1 : type551 A B) (G1 : type548 A B) (H1 : type549 A B) (h1 : term919 A B P lt2 clauses P1 G1 H1) : term916 A B P clauses P1 G1 H1.
Proof. exact (proj2 (@lem8367284 A B P lt2 clauses P1 G1 H1 h1)). Qed.
Lemma lem8390483 {A B P : Type'} (lt2 : type1402 A) (clauses : type1635 A B P) (P1 : type551 A B) (G1 : type548 A B) (H1 : type549 A B) (h1 : term919 A B P lt2 clauses P1 G1 H1) : term1418 A B P1 G1 lt2.
Proof. exact (proj1 (@lem8367284 A B P lt2 clauses P1 G1 H1 h1)). Qed.
Lemma lem8390484 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (t : type558 A B P) (s : P -> A) (clauses : type1635 A B P) (lt2 : type1402 A) (P1 : type551 A B) (G1 : type548 A B) (H1 : type549 A B) (h1 : term1418 A B P1 G1 lt2) (h2 : term916 A B P clauses P1 G1 H1) (h3 : term1417 A B lt2 P1 G1 H1) : (term916 A B P clauses P1 G1 H1) = (term1350 A B P P2 G2 H2 lt2 t s clauses).
Proof. exact (prop_ext (fun h4 : term916 A B P clauses P1 G1 H1 => @lem8390479 A B P P2 G2 H2 t s clauses lt2 P1 G1 H1 h1 h2 h3) (fun h4 : term1350 A B P P2 G2 H2 lt2 t s clauses => @lem8367286 A B P clauses P1 G1 H1 h2)). Qed.
Lemma lem8390485 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (t : type558 A B P) (s : P -> A) (clauses : type1635 A B P) (lt2 : type1402 A) (P1 : type551 A B) (G1 : type548 A B) (H1 : type549 A B) (h1 : term1418 A B P1 G1 lt2) (h2 : term916 A B P clauses P1 G1 H1) (h3 : term1417 A B lt2 P1 G1 H1) : term1350 A B P P2 G2 H2 lt2 t s clauses.
Proof. exact (EQ_MP (@lem8390484 A B P P2 G2 H2 t s clauses lt2 P1 G1 H1 h1 h2 h3) (@lem8367286 A B P clauses P1 G1 H1 h2)). Qed.
Lemma lem8390486 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (t : type558 A B P) (s : P -> A) (clauses : type1635 A B P) (lt2 : type1402 A) (P1 : type551 A B) (G1 : type548 A B) (H1 : type549 A B) (h1 : term1418 A B P1 G1 lt2) (h2 : term916 A B P clauses P1 G1 H1) (h3 : term1417 A B lt2 P1 G1 H1) : (term1418 A B P1 G1 lt2) = (term1350 A B P P2 G2 H2 lt2 t s clauses).
Proof. exact (prop_ext (fun h4 : term1418 A B P1 G1 lt2 => @lem8390485 A B P P2 G2 H2 t s clauses lt2 P1 G1 H1 h1 h2 h3) (fun h4 : term1350 A B P P2 G2 H2 lt2 t s clauses => @lem8367287 A B P1 G1 lt2 h1)). Qed.
Lemma lem8390487 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (t : type558 A B P) (s : P -> A) (clauses : type1635 A B P) (lt2 : type1402 A) (P1 : type551 A B) (G1 : type548 A B) (H1 : type549 A B) (h1 : term1418 A B P1 G1 lt2) (h2 : term916 A B P clauses P1 G1 H1) (h3 : term1417 A B lt2 P1 G1 H1) : term1350 A B P P2 G2 H2 lt2 t s clauses.
Proof. exact (EQ_MP (@lem8390486 A B P P2 G2 H2 t s clauses lt2 P1 G1 H1 h1 h2 h3) (@lem8367287 A B P1 G1 lt2 h1)). Qed.
Lemma lem8390488 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (t : type558 A B P) (s : P -> A) (lt2 : type1402 A) (clauses : type1635 A B P) (P1 : type551 A B) (G1 : type548 A B) (H1 : type549 A B) (h1 : term1418 A B P1 G1 lt2) (h2 : term1417 A B lt2 P1 G1 H1) (h3 : term919 A B P lt2 clauses P1 G1 H1) : (term916 A B P clauses P1 G1 H1) = (term1350 A B P P2 G2 H2 lt2 t s clauses).
Proof. exact (prop_ext (fun h4 : term916 A B P clauses P1 G1 H1 => @lem8390487 A B P P2 G2 H2 t s clauses lt2 P1 G1 H1 h1 h4 h2) (fun h4 : term1350 A B P P2 G2 H2 lt2 t s clauses => @lem8390482 A B P lt2 clauses P1 G1 H1 h3)). Qed.
Lemma lem8390489 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (t : type558 A B P) (s : P -> A) (lt2 : type1402 A) (clauses : type1635 A B P) (P1 : type551 A B) (G1 : type548 A B) (H1 : type549 A B) (h1 : term1418 A B P1 G1 lt2) (h2 : term1417 A B lt2 P1 G1 H1) (h3 : term919 A B P lt2 clauses P1 G1 H1) : term1350 A B P P2 G2 H2 lt2 t s clauses.
Proof. exact (EQ_MP (@lem8390488 A B P P2 G2 H2 t s lt2 clauses P1 G1 H1 h1 h2 h3) (@lem8390482 A B P lt2 clauses P1 G1 H1 h3)). Qed.
Lemma lem8390490 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (t : type558 A B P) (s : P -> A) (lt2 : type1402 A) (clauses : type1635 A B P) (P1 : type551 A B) (G1 : type548 A B) (H1 : type549 A B) (h1 : term1417 A B lt2 P1 G1 H1) (h2 : term919 A B P lt2 clauses P1 G1 H1) : (term1418 A B P1 G1 lt2) = (term1350 A B P P2 G2 H2 lt2 t s clauses).
Proof. exact (prop_ext (fun h3 : term1418 A B P1 G1 lt2 => @lem8390489 A B P P2 G2 H2 t s lt2 clauses P1 G1 H1 h3 h1 h2) (fun h3 : term1350 A B P P2 G2 H2 lt2 t s clauses => @lem8390483 A B P lt2 clauses P1 G1 H1 h2)). Qed.
Lemma lem8390491 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (t : type558 A B P) (s : P -> A) (lt2 : type1402 A) (clauses : type1635 A B P) (P1 : type551 A B) (G1 : type548 A B) (H1 : type549 A B) (h1 : term1417 A B lt2 P1 G1 H1) (h2 : term919 A B P lt2 clauses P1 G1 H1) : term1350 A B P P2 G2 H2 lt2 t s clauses.
Proof. exact (EQ_MP (@lem8390490 A B P P2 G2 H2 t s lt2 clauses P1 G1 H1 h1 h2) (@lem8390483 A B P lt2 clauses P1 G1 H1 h2)). Qed.
Lemma lem8390492 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (t : type558 A B P) (s : P -> A) (lt2 : type1402 A) (clauses : type1635 A B P) (P1 : type551 A B) (G1 : type548 A B) (H1 : type549 A B) (h1 : term1417 A B lt2 P1 G1 H1) (h2 : term919 A B P lt2 clauses P1 G1 H1) : (term1417 A B lt2 P1 G1 H1) = (term1350 A B P P2 G2 H2 lt2 t s clauses).
Proof. exact (prop_ext (fun h3 : term1417 A B lt2 P1 G1 H1 => @lem8390491 A B P P2 G2 H2 t s lt2 clauses P1 G1 H1 h1 h2) (fun h3 : term1350 A B P P2 G2 H2 lt2 t s clauses => @lem8367285 A B lt2 P1 G1 H1 h1)). Qed.
Lemma lem8390493 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (t : type558 A B P) (s : P -> A) (lt2 : type1402 A) (clauses : type1635 A B P) (P1 : type551 A B) (G1 : type548 A B) (H1 : type549 A B) (h1 : term1417 A B lt2 P1 G1 H1) (h2 : term919 A B P lt2 clauses P1 G1 H1) : term1350 A B P P2 G2 H2 lt2 t s clauses.
Proof. exact (EQ_MP (@lem8390492 A B P P2 G2 H2 t s lt2 clauses P1 G1 H1 h1 h2) (@lem8367285 A B lt2 P1 G1 H1 h1)). Qed.
Lemma lem8390494 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (t : type558 A B P) (s : P -> A) (lt2 : type1402 A) (clauses : type1635 A B P) (P1 : type551 A B) (G1 : type548 A B) (H1 : type549 A B) (h1 : term1417 A B lt2 P1 G1 H1) (h2 : term922 A B P lt2 clauses P1 G1 H1) : (term919 A B P lt2 clauses P1 G1 H1) = (term1350 A B P P2 G2 H2 lt2 t s clauses).
Proof. exact (prop_ext (fun h3 : term919 A B P lt2 clauses P1 G1 H1 => @lem8390493 A B P P2 G2 H2 t s lt2 clauses P1 G1 H1 h1 h3) (fun h3 : term1350 A B P P2 G2 H2 lt2 t s clauses => @lem8390480 A B P lt2 clauses P1 G1 H1 h2)). Qed.
Lemma lem8390495 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (t : type558 A B P) (s : P -> A) (lt2 : type1402 A) (clauses : type1635 A B P) (P1 : type551 A B) (G1 : type548 A B) (H1 : type549 A B) (h1 : term1417 A B lt2 P1 G1 H1) (h2 : term922 A B P lt2 clauses P1 G1 H1) : term1350 A B P P2 G2 H2 lt2 t s clauses.
Proof. exact (EQ_MP (@lem8390494 A B P P2 G2 H2 t s lt2 clauses P1 G1 H1 h1 h2) (@lem8390480 A B P lt2 clauses P1 G1 H1 h2)). Qed.
Lemma lem8390496 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (t : type558 A B P) (s : P -> A) (lt2 : type1402 A) (clauses : type1635 A B P) (P1 : type551 A B) (G1 : type548 A B) (H1 : type549 A B) (h1 : term922 A B P lt2 clauses P1 G1 H1) : (term1417 A B lt2 P1 G1 H1) = (term1350 A B P P2 G2 H2 lt2 t s clauses).
Proof. exact (prop_ext (fun h2 : term1417 A B lt2 P1 G1 H1 => @lem8390495 A B P P2 G2 H2 t s lt2 clauses P1 G1 H1 h2 h1) (fun h2 : term1350 A B P P2 G2 H2 lt2 t s clauses => @lem8390481 A B P lt2 clauses P1 G1 H1 h1)). Qed.
Lemma lem8390497 {A B P : Type'} (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (t : type558 A B P) (s : P -> A) (lt2 : type1402 A) (clauses : type1635 A B P) (P1 : type551 A B) (G1 : type548 A B) (H1 : type549 A B) (h1 : term922 A B P lt2 clauses P1 G1 H1) : term1350 A B P P2 G2 H2 lt2 t s clauses.
Proof. exact (EQ_MP (@lem8390496 A B P P2 G2 H2 t s lt2 clauses P1 G1 H1 h1) (@lem8390481 A B P lt2 clauses P1 G1 H1 h1)). Qed.
Lemma lem8390498 {A B P : Type'} (P1 : type551 A B) (G1 : type548 A B) (H1 : type549 A B) (P2 : type560 A B P) (G2 : type557 A B P) (H2 : type558 A B P) (lt2 : type1402 A) (t : type558 A B P) (s : P -> A) (clauses : type1635 A B P) : term1403 A B P P1 G1 H1 P2 G2 H2 lt2 t s clauses.
Proof. exact (fun h0 : term922 A B P lt2 clauses P1 G1 H1 => @lem8390497 A B P P2 G2 H2 t s lt2 clauses P1 G1 H1 h0). Qed.
Lemma lem8390503 {A B P : Type'} (P1 : type551 A B) (G1 : type548 A B) (H1 : type549 A B) (P2 : type560 A B P) (G2 : type557 A B P) (lt2 : type1402 A) (t : type558 A B P) (s : P -> A) (clauses : type1635 A B P) : term1406 A B P P1 G1 H1 P2 G2 lt2 t s clauses.
Proof. exact (fun H2 : type558 A B P => @lem8390498 A B P P1 G1 H1 P2 G2 H2 lt2 t s clauses). Qed.
Lemma lem8390508 {A B P : Type'} (P1 : type551 A B) (G1 : type548 A B) (H1 : type549 A B) (P2 : type560 A B P) (lt2 : type1402 A) (t : type558 A B P) (s : P -> A) (clauses : type1635 A B P) : term1408 A B P P1 G1 H1 P2 lt2 t s clauses.
Proof. exact (fun G2 : type557 A B P => @lem8390503 A B P P1 G1 H1 P2 G2 lt2 t s clauses). Qed.
Lemma lem8390513 {A B P : Type'} (P1 : type551 A B) (G1 : type548 A B) (H1 : type549 A B) (lt2 : type1402 A) (t : type558 A B P) (s : P -> A) (clauses : type1635 A B P) : term1410 A B P P1 G1 H1 lt2 t s clauses.
Proof. exact (fun P2 : type560 A B P => @lem8390508 A B P P1 G1 H1 P2 lt2 t s clauses). Qed.
Lemma lem8390518 {A B P : Type'} (P1 : type551 A B) (G1 : type548 A B) (lt2 : type1402 A) (t : type558 A B P) (s : P -> A) (clauses : type1635 A B P) : term1412 A B P P1 G1 lt2 t s clauses.
Proof. exact (fun H1 : type549 A B => @lem8390513 A B P P1 G1 H1 lt2 t s clauses). Qed.
Lemma lem8390523 {A B P : Type'} (P1 : type551 A B) (lt2 : type1402 A) (t : type558 A B P) (s : P -> A) (clauses : type1635 A B P) : term1414 A B P P1 lt2 t s clauses.
Proof. exact (fun G1 : type548 A B => @lem8390518 A B P P1 G1 lt2 t s clauses). Qed.
Lemma lem8390528 {A B P : Type'} (lt2 : type1402 A) (t : type558 A B P) (s : P -> A) (clauses : type1635 A B P) : term1416 A B P lt2 t s clauses.
Proof. exact (fun P1 : type551 A B => @lem8390523 A B P P1 lt2 t s clauses). Qed.
Lemma lem8390529 {A B P : Type'} (lt2 : type1402 A) (t : type558 A B P) (s : P -> A) (clauses : type1635 A B P) : term1364 A B P lt2 t s clauses.
Proof. exact (EQ_MP (@lem8367282 A B P lt2 t s clauses) (@lem8390528 A B P lt2 t s clauses)). Qed.
Lemma lem8390530 {A B P : Type'} (lt2 : type1402 A) (t : type558 A B P) (s : P -> A) (clauses : type1635 A B P) : term1244 A B P lt2 t s clauses.
Proof. exact (EQ_MP (@lem8366948 A B P lt2 t s clauses) (@lem8390529 A B P lt2 t s clauses)). Qed.
Lemma lem8390531 {A B P : Type'} (t : type558 A B P) (s : P -> A) (lt2 : type1402 A) (clauses : type1635 A B P) (h1 : term898 A B P lt2 clauses) : term1243 A B P lt2 t s clauses.
Proof. exact (EQ_MP (@lem8366523 A B P t s lt2 clauses h1) (@lem8390530 A B P lt2 t s clauses)). Qed.
Lemma lem8390532 {A B P : Type'} (t : type558 A B P) (s : P -> A) (lt2 : type1402 A) (clauses : type1635 A B P) (h1 : term958 A B P lt2 clauses) (h2 : term898 A B P lt2 clauses) : term1242 A B P lt2 t s clauses.
Proof. exact (@lem8390531 A B P t s lt2 clauses h2 (@lem8366188 A B P lt2 clauses h1)). Qed.
Lemma lem8390533 {A B P : Type'} (s : P -> A) (t : type558 A B P) (lt2 : type1402 A) (clauses : type1635 A B P) (h1 : term1099 A B P s t lt2 clauses) : term898 A B P lt2 clauses.
Proof. exact (proj2 (@lem8366189 A B P s t lt2 clauses h1)). Qed.
Lemma lem8390534 {A B P : Type'} (s : P -> A) (t : type558 A B P) (lt2 : type1402 A) (clauses : type1635 A B P) (h1 : term1099 A B P s t lt2 clauses) : term1067 A B P lt2 s t.
Proof. exact (proj1 (@lem8366189 A B P s t lt2 clauses h1)). Qed.
Lemma lem8390535 {A B P : Type'} (t : type558 A B P) (s : P -> A) (lt2 : type1402 A) (clauses : type1635 A B P) (h1 : term958 A B P lt2 clauses) (h2 : term898 A B P lt2 clauses) : (term898 A B P lt2 clauses) = (term1242 A B P lt2 t s clauses).
Proof. exact (prop_ext (fun h3 : term898 A B P lt2 clauses => @lem8390532 A B P t s lt2 clauses h1 h2) (fun h3 : term1242 A B P lt2 t s clauses => @lem8366190 A B P lt2 clauses h2)). Qed.
Lemma lem8390536 {A B P : Type'} (t : type558 A B P) (s : P -> A) (lt2 : type1402 A) (clauses : type1635 A B P) (h1 : term958 A B P lt2 clauses) (h2 : term898 A B P lt2 clauses) : term1242 A B P lt2 t s clauses.
Proof. exact (EQ_MP (@lem8390535 A B P t s lt2 clauses h1 h2) (@lem8366190 A B P lt2 clauses h2)). Qed.
Lemma lem8390537 {A B P : Type'} (s : P -> A) (t : type558 A B P) (lt2 : type1402 A) (clauses : type1635 A B P) (h1 : term1067 A B P lt2 s t) (h2 : term958 A B P lt2 clauses) (h3 : term898 A B P lt2 clauses) : term1131 A B P lt2 t s clauses.
Proof. exact (@lem8390536 A B P t s lt2 clauses h2 h3 (@lem8366191 A B P lt2 s t h1)). Qed.
Lemma lem8390538 {A B P : Type'} (s : P -> A) (t : type558 A B P) (lt2 : type1402 A) (clauses : type1635 A B P) (h1 : term1067 A B P lt2 s t) (h2 : term1099 A B P s t lt2 clauses) (h3 : term958 A B P lt2 clauses) : (term898 A B P lt2 clauses) = (term1131 A B P lt2 t s clauses).
Proof. exact (prop_ext (fun h4 : term898 A B P lt2 clauses => @lem8390537 A B P s t lt2 clauses h1 h3 h4) (fun h4 : term1131 A B P lt2 t s clauses => @lem8390533 A B P s t lt2 clauses h2)). Qed.
Lemma lem8390539 {A B P : Type'} (s : P -> A) (t : type558 A B P) (lt2 : type1402 A) (clauses : type1635 A B P) (h1 : term1067 A B P lt2 s t) (h2 : term1099 A B P s t lt2 clauses) (h3 : term958 A B P lt2 clauses) : term1131 A B P lt2 t s clauses.
Proof. exact (EQ_MP (@lem8390538 A B P s t lt2 clauses h1 h2 h3) (@lem8390533 A B P s t lt2 clauses h2)). Qed.
Lemma lem8390540 {A B P : Type'} (s : P -> A) (t : type558 A B P) (lt2 : type1402 A) (clauses : type1635 A B P) (h1 : term1099 A B P s t lt2 clauses) (h2 : term958 A B P lt2 clauses) : (term1067 A B P lt2 s t) = (term1131 A B P lt2 t s clauses).
Proof. exact (prop_ext (fun h3 : term1067 A B P lt2 s t => @lem8390539 A B P s t lt2 clauses h3 h1 h2) (fun h3 : term1131 A B P lt2 t s clauses => @lem8390534 A B P s t lt2 clauses h1)). Qed.
Lemma lem8390541 {A B P : Type'} (s : P -> A) (t : type558 A B P) (lt2 : type1402 A) (clauses : type1635 A B P) (h1 : term1099 A B P s t lt2 clauses) (h2 : term958 A B P lt2 clauses) : term1131 A B P lt2 t s clauses.
Proof. exact (EQ_MP (@lem8390540 A B P s t lt2 clauses h1 h2) (@lem8390534 A B P s t lt2 clauses h1)). Qed.
Lemma lem8390542 {A B P : Type'} (t : type558 A B P) (s : P -> A) (lt2 : type1402 A) (clauses : type1635 A B P) (h1 : term958 A B P lt2 clauses) : term1133 A B P lt2 t s clauses.
Proof. exact (fun h0 : term1099 A B P s t lt2 clauses => @lem8390541 A B P s t lt2 clauses h0 h1). Qed.
Lemma lem8390543 {A B P : Type'} (lt2 : type1402 A) (t : type558 A B P) (s : P -> A) (clauses : type1635 A B P) : term1135 A B P lt2 t s clauses.
Proof. exact (fun h0 : term958 A B P lt2 clauses => @lem8390542 A B P t s lt2 clauses h0). Qed.
Lemma lem8390548 {A B P : Type'} (lt2 : type1402 A) (t : type558 A B P) (s : P -> A) : term1138 A B P lt2 t s.
Proof. exact (fun clauses : type1635 A B P => @lem8390543 A B P lt2 t s clauses). Qed.
Lemma lem8390553 {A B P : Type'} (lt2 : type1402 A) (s : P -> A) : term1140 A B P lt2 s.
Proof. exact (fun t : type558 A B P => @lem8390548 A B P lt2 t s). Qed.
Lemma lem8390558 {A B P : Type'} (lt2 : type1402 A) : term1142 A B P lt2.
Proof. exact (fun s : P -> A => @lem8390553 A B P lt2 s). Qed.
Lemma lem8390559 {A B P : Type'} (lt2 : type1402 A) : term1143 A B P lt2.
Proof. exact (conj (@lem8366187 A B lt2) (@lem8390558 A B P lt2)). Qed.
Lemma lem8390560 {A B P : Type'} (lt2 : type1402 A) : term985 A B P lt2.
Proof. exact (EQ_MP (@lem8365698 A B P lt2) (@lem8390559 A B P lt2)). Qed.
Lemma lem8390561 {A B P : Type'} (lt2 : type1402 A) : term962 A B P lt2.
Proof. exact (@lem8364690 A B P lt2 (@lem8390560 A B P lt2)). Qed.
Lemma lem8390562 {A B P : Type'} (lt2 : type1402 A) (h1 : @WF A lt2) : term961 A B P lt2.
Proof. exact (EQ_MP (@lem8364663 A B P lt2 h1) (@lem8390561 A B P lt2)). Qed.
Lemma lem8390563 {A B P : Type'} (clauses : type1635 A B P) (lt2 : type1402 A) (h1 : @WF A lt2) : term3523 A B P lt2 clauses.
Proof. exact (@lem8390562 A B P lt2 h1 clauses). Qed.
Lemma lem8390564 {A B P : Type'} (lt2 : type1402 A) (clauses : type1635 A B P) : (term3523 A B P lt2 clauses) = (term957 A B P lt2 clauses).
Proof. exact (eq_refl (term3523 A B P lt2 clauses)). Qed.
Lemma lem8390565 {A B P : Type'} (clauses : type1635 A B P) (lt2 : type1402 A) (h1 : @WF A lt2) : term957 A B P lt2 clauses.
Proof. exact (EQ_MP (@lem8390564 A B P lt2 clauses) (@lem8390563 A B P clauses lt2 h1)). Qed.
Lemma lem8390566 {A B P : Type'} (lt2 : type1402 A) (clauses : type1635 A B P) (h1 : @WF A lt2) (h2 : term898 A B P lt2 clauses) : term936 A B P lt2 clauses.
Proof. exact (@lem8390565 A B P clauses lt2 h1 (@lem8364340 A B P lt2 clauses h2)). Qed.
Lemma lem8390567 {A B P : Type'} (lt2 : type1402 A) (clauses : type1635 A B P) (h1 : @WF A lt2) (h2 : term898 A B P lt2 clauses) : term947 A B P clauses.
Proof. exact (@lem8364392 A B P lt2 clauses (@lem8390566 A B P lt2 clauses h1 h2)). Qed.
Lemma lem8390568 {A B P : Type'} (lt2 : type1402 A) (clauses : type1635 A B P) (h1 : term897 A B P lt2 clauses) : term898 A B P lt2 clauses.
Proof. exact (proj2 (@lem8364339 A B P lt2 clauses h1)). Qed.
Lemma lem8390569 {A B P : Type'} (lt2 : type1402 A) (clauses : type1635 A B P) (h1 : term897 A B P lt2 clauses) : @WF A lt2.
Proof. exact (proj1 (@lem8364339 A B P lt2 clauses h1)). Qed.
Lemma lem8390570 {A B P : Type'} (lt2 : type1402 A) (clauses : type1635 A B P) (h1 : @WF A lt2) (h2 : term898 A B P lt2 clauses) : (term898 A B P lt2 clauses) = (term947 A B P clauses).
Proof. exact (prop_ext (fun h3 : term898 A B P lt2 clauses => @lem8390567 A B P lt2 clauses h1 h2) (fun h3 : term947 A B P clauses => @lem8364340 A B P lt2 clauses h2)). Qed.
Lemma lem8390571 {A B P : Type'} (lt2 : type1402 A) (clauses : type1635 A B P) (h1 : @WF A lt2) (h2 : term898 A B P lt2 clauses) : term947 A B P clauses.
Proof. exact (EQ_MP (@lem8390570 A B P lt2 clauses h1 h2) (@lem8364340 A B P lt2 clauses h2)). Qed.
Lemma lem8390572 {A B P : Type'} (lt2 : type1402 A) (clauses : type1635 A B P) (h1 : @WF A lt2) (h2 : term898 A B P lt2 clauses) : (@WF A lt2) = (term947 A B P clauses).
Proof. exact (prop_ext (fun h3 : @WF A lt2 => @lem8390571 A B P lt2 clauses h1 h2) (fun h3 : term947 A B P clauses => @lem8364341 A lt2 h1)). Qed.
Lemma lem8390573 {A B P : Type'} (lt2 : type1402 A) (clauses : type1635 A B P) (h1 : @WF A lt2) (h2 : term898 A B P lt2 clauses) : term947 A B P clauses.
Proof. exact (EQ_MP (@lem8390572 A B P lt2 clauses h1 h2) (@lem8364341 A lt2 h1)). Qed.
Lemma lem8390574 {A B P : Type'} (lt2 : type1402 A) (clauses : type1635 A B P) (h1 : @WF A lt2) (h2 : term897 A B P lt2 clauses) : (term898 A B P lt2 clauses) = (term947 A B P clauses).
Proof. exact (prop_ext (fun h3 : term898 A B P lt2 clauses => @lem8390573 A B P lt2 clauses h1 h3) (fun h3 : term947 A B P clauses => @lem8390568 A B P lt2 clauses h2)). Qed.
Lemma lem8390575 {A B P : Type'} (lt2 : type1402 A) (clauses : type1635 A B P) (h1 : @WF A lt2) (h2 : term897 A B P lt2 clauses) : term947 A B P clauses.
Proof. exact (EQ_MP (@lem8390574 A B P lt2 clauses h1 h2) (@lem8390568 A B P lt2 clauses h2)). Qed.
Lemma lem8390576 {A B P : Type'} (lt2 : type1402 A) (clauses : type1635 A B P) (h1 : term897 A B P lt2 clauses) : (@WF A lt2) = (term947 A B P clauses).
Proof. exact (prop_ext (fun h2 : @WF A lt2 => @lem8390575 A B P lt2 clauses h2 h1) (fun h2 : term947 A B P clauses => @lem8390569 A B P lt2 clauses h1)). Qed.
Lemma lem8390577 {A B P : Type'} (lt2 : type1402 A) (clauses : type1635 A B P) (h1 : term897 A B P lt2 clauses) : term947 A B P clauses.
Proof. exact (EQ_MP (@lem8390576 A B P lt2 clauses h1) (@lem8390569 A B P lt2 clauses h1)). Qed.
Lemma lem8390578 {A B P : Type'} (lt2 : type1402 A) (clauses : type1635 A B P) : term3524 A B P lt2 clauses.
Proof. exact (fun h0 : term897 A B P lt2 clauses => @lem8390577 A B P lt2 clauses h0). Qed.
Lemma lem8390583 {A B P : Type'} (lt2 : type1402 A) : term3525 A B P lt2.
Proof. exact (fun clauses : type1635 A B P => @lem8390578 A B P lt2 clauses). Qed.
Lemma lem8390588 {A B P : Type'} : term3526 A B P.
Proof. exact (fun lt2 : type1402 A => @lem8390583 A B P lt2). Qed.
