require open hol-light.theory_hol;
require open hol-light.hol_types;
require open hol-light.hol_type_abbrevs;
require open hol-light.hol_terms;
symbol term2 a0 a1 (x0: El (fun a1 bool)) ≔ (λ y0 : El (type1470 a0 a1), ((@GSPEC (prod a1 a0)) (λ y1 : El (prod a1 a0), (∃ (λ y2 : El a1, (∃ (λ y3 : El a0, ((@SETSPEC (prod a1 a0)) y1 (∧ ((@IN a1) y2 x0) ((@IN a0) y3 (y0 y2))) ((@̦‚ a1 a0) y2 y3)))))))));
symbol term8 a0 a1 (x0: El (fun a1 bool)) (x1: El (type1470 a0 a1)) ≔ ((λ y0 : El (type1470 a0 a1), (= ((@disjoint_union a0 a1) x0 y0) ((@GSPEC (prod a1 a0)) (λ y1 : El (prod a1 a0), (∃ (λ y2 : El a1, (∃ (λ y3 : El a0, ((@SETSPEC (prod a1 a0)) y1 (∧ ((@IN a1) y2 x0) ((@IN a0) y3 (y0 y2))) ((@̦‚ a1 a0) y2 y3)))))))))) x1);
symbol term3 a0 a1 (x0: El (fun a1 bool)) (x1: El (type1470 a0 a1)) ≔ ((λ y0 : El (type1470 a0 a1), ((@GSPEC (prod a1 a0)) (λ y1 : El (prod a1 a0), (∃ (λ y2 : El a1, (∃ (λ y3 : El a0, ((@SETSPEC (prod a1 a0)) y1 (∧ ((@IN a1) y2 x0) ((@IN a0) y3 (y0 y2))) ((@̦‚ a1 a0) y2 y3))))))))) x1);
symbol term1 a0 a1 (x0: El (fun a1 bool)) ≔ ((λ y0 : El (fun a1 bool), (λ y1 : El (type1470 a0 a1), ((@GSPEC (prod a1 a0)) (λ y2 : El (prod a1 a0), (∃ (λ y3 : El a1, (∃ (λ y4 : El a0, ((@SETSPEC (prod a1 a0)) y2 (∧ ((@IN a1) y3 y0) ((@IN a0) y4 (y1 y3))) ((@̦‚ a1 a0) y3 y4)))))))))) x0);
symbol term0 a0 a1 ≔ (λ y0 : El (fun a1 bool), (λ y1 : El (type1470 a0 a1), ((@GSPEC (prod a1 a0)) (λ y2 : El (prod a1 a0), (∃ (λ y3 : El a1, (∃ (λ y4 : El a0, ((@SETSPEC (prod a1 a0)) y2 (∧ ((@IN a1) y3 y0) ((@IN a0) y4 (y1 y3))) ((@̦‚ a1 a0) y3 y4))))))))));
symbol term6 a0 a1 ≔ (∀ (λ y0 : El (fun a1 bool), (∀ (λ y1 : El (type1470 a0 a1), (= ((@disjoint_union a0 a1) y0 y1) ((@GSPEC (prod a1 a0)) (λ y2 : El (prod a1 a0), (∃ (λ y3 : El a1, (∃ (λ y4 : El a0, ((@SETSPEC (prod a1 a0)) y2 (∧ ((@IN a1) y3 y0) ((@IN a0) y4 (y1 y3))) ((@̦‚ a1 a0) y3 y4)))))))))))));
symbol term5 a0 a1 (x0: El (fun a1 bool)) ≔ (∀ (λ y0 : El (type1470 a0 a1), (= ((@disjoint_union a0 a1) x0 y0) ((@GSPEC (prod a1 a0)) (λ y1 : El (prod a1 a0), (∃ (λ y2 : El a1, (∃ (λ y3 : El a0, ((@SETSPEC (prod a1 a0)) y1 (∧ ((@IN a1) y2 x0) ((@IN a0) y3 (y0 y2))) ((@̦‚ a1 a0) y2 y3)))))))))));
symbol term4 a0 a1 (x0: El (fun a1 bool)) (x1: El (type1470 a0 a1)) ≔ ((@GSPEC (prod a1 a0)) (λ y0 : El (prod a1 a0), (∃ (λ y1 : El a1, (∃ (λ y2 : El a0, ((@SETSPEC (prod a1 a0)) y0 (∧ ((@IN a1) y1 x0) ((@IN a0) y2 (x1 y1))) ((@̦‚ a1 a0) y1 y2))))))));
symbol term7 a0 a1 (x0: El (fun a1 bool)) ≔ ((λ y0 : El (fun a1 bool), (∀ (λ y1 : El (type1470 a0 a1), (= ((@disjoint_union a0 a1) y0 y1) ((@GSPEC (prod a1 a0)) (λ y2 : El (prod a1 a0), (∃ (λ y3 : El a1, (∃ (λ y4 : El a0, ((@SETSPEC (prod a1 a0)) y2 (∧ ((@IN a1) y3 y0) ((@IN a0) y4 (y1 y3))) ((@̦‚ a1 a0) y3 y4)))))))))))) x0);
