Require Import coq.
Require Import theory_hol.
Require Import hol_types.
Require Import hol_type_abbrevs.
Require Import hol_terms.
Definition term1 := forall y0 : type1673, ((@ε ((prod nat (prod nat (prod nat nat))) -> nat -> nat) (fun y1 : type1292 => forall y2 : type1673, ((y1 y2 (NUMERAL 0)) = (NUMERAL (BIT1 0))) /\ (forall y3 : nat, (y1 y2 (S y3)) = (Nat.mul (S y3) (y1 y2 y3)))) y0 (NUMERAL 0)) = (NUMERAL (BIT1 0))) /\ (forall y1 : nat, (@ε ((prod nat (prod nat (prod nat nat))) -> nat -> nat) (fun y2 : type1292 => forall y3 : type1673, ((y2 y3 (NUMERAL 0)) = (NUMERAL (BIT1 0))) /\ (forall y4 : nat, (y2 y3 (S y4)) = (Nat.mul (S y4) (y2 y3 y4)))) y0 (S y1)) = (Nat.mul (S y1) (@ε ((prod nat (prod nat (prod nat nat))) -> nat -> nat) (fun y2 : type1292 => forall y3 : type1673, ((y2 y3 (NUMERAL 0)) = (NUMERAL (BIT1 0))) /\ (forall y4 : nat, (y2 y3 (S y4)) = (Nat.mul (S y4) (y2 y3 y4)))) y0 y1))).
Definition term15 (x0 : nat) := @eq nat (@ε ((prod nat (prod nat (prod nat nat))) -> nat -> nat) (fun y0 : type1292 => forall y1 : type1673, ((y0 y1 (NUMERAL 0)) = (NUMERAL (BIT1 0))) /\ (forall y2 : nat, (y0 y1 (S y2)) = (Nat.mul (S y2) (y0 y1 y2)))) (@pair nat (prod nat (prod nat nat)) (NUMERAL (BIT0 (BIT1 (BIT1 (BIT0 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat nat) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat nat (NUMERAL (BIT1 (BIT1 (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 0)))))))) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 (BIT0 (BIT1 0))))))))))) (S x0)).
Definition term22 := fun y0 : nat => (Factorial.fact (S y0)) = (Nat.mul (S y0) (Factorial.fact y0)).
Definition term12 := and ((Factorial.fact (NUMERAL 0)) = (NUMERAL (BIT1 0))).
Definition term5 := @ε ((prod nat (prod nat (prod nat nat))) -> nat -> nat) (fun y0 : type1292 => forall y1 : type1673, ((y0 y1 (NUMERAL 0)) = (NUMERAL (BIT1 0))) /\ (forall y2 : nat, (y0 y1 (S y2)) = (Nat.mul (S y2) (y0 y1 y2)))) (@pair nat (prod nat (prod nat nat)) (NUMERAL (BIT0 (BIT1 (BIT1 (BIT0 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat nat) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat nat (NUMERAL (BIT1 (BIT1 (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 0)))))))) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 (BIT0 (BIT1 0))))))))))).
Definition term18 (x0 : nat) := Nat.mul (S x0).
Definition term0 := (fun y0 : type1292 => forall y1 : type1673, ((y0 y1 (NUMERAL 0)) = (NUMERAL (BIT1 0))) /\ (forall y2 : nat, (y0 y1 (S y2)) = (Nat.mul (S y2) (y0 y1 y2)))) (@ε ((prod nat (prod nat (prod nat nat))) -> nat -> nat) (fun y0 : type1292 => forall y1 : type1673, ((y0 y1 (NUMERAL 0)) = (NUMERAL (BIT1 0))) /\ (forall y2 : nat, (y0 y1 (S y2)) = (Nat.mul (S y2) (y0 y1 y2))))).
Definition term17 (x0 : nat) := @ε ((prod nat (prod nat (prod nat nat))) -> nat -> nat) (fun y0 : type1292 => forall y1 : type1673, ((y0 y1 (NUMERAL 0)) = (NUMERAL (BIT1 0))) /\ (forall y2 : nat, (y0 y1 (S y2)) = (Nat.mul (S y2) (y0 y1 y2)))) (@pair nat (prod nat (prod nat nat)) (NUMERAL (BIT0 (BIT1 (BIT1 (BIT0 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat nat) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat nat (NUMERAL (BIT1 (BIT1 (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 0)))))))) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 (BIT0 (BIT1 0))))))))))) x0.
Definition term9 := @eq nat (Factorial.fact (NUMERAL 0)).
Definition term13 (x0 : nat) := @ε ((prod nat (prod nat (prod nat nat))) -> nat -> nat) (fun y0 : type1292 => forall y1 : type1673, ((y0 y1 (NUMERAL 0)) = (NUMERAL (BIT1 0))) /\ (forall y2 : nat, (y0 y1 (S y2)) = (Nat.mul (S y2) (y0 y1 y2)))) (@pair nat (prod nat (prod nat nat)) (NUMERAL (BIT0 (BIT1 (BIT1 (BIT0 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat nat) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat nat (NUMERAL (BIT1 (BIT1 (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 0)))))))) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 (BIT0 (BIT1 0))))))))))) (S x0).
Definition term3 := @pair nat (prod nat (prod nat nat)) (NUMERAL (BIT0 (BIT1 (BIT1 (BIT0 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat nat) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat nat (NUMERAL (BIT1 (BIT1 (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 0)))))))) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 (BIT0 (BIT1 0)))))))))).
Definition term16 (x0 : nat) := @eq nat (Factorial.fact (S x0)).
Definition term24 := forall y0 : nat, (Factorial.fact (S y0)) = (Nat.mul (S y0) (Factorial.fact y0)).
Definition term23 := forall y0 : nat, (@ε ((prod nat (prod nat (prod nat nat))) -> nat -> nat) (fun y1 : type1292 => forall y2 : type1673, ((y1 y2 (NUMERAL 0)) = (NUMERAL (BIT1 0))) /\ (forall y3 : nat, (y1 y2 (S y3)) = (Nat.mul (S y3) (y1 y2 y3)))) (@pair nat (prod nat (prod nat nat)) (NUMERAL (BIT0 (BIT1 (BIT1 (BIT0 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat nat) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat nat (NUMERAL (BIT1 (BIT1 (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 0)))))))) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 (BIT0 (BIT1 0))))))))))) (S y0)) = (Nat.mul (S y0) (@ε ((prod nat (prod nat (prod nat nat))) -> nat -> nat) (fun y1 : type1292 => forall y2 : type1673, ((y1 y2 (NUMERAL 0)) = (NUMERAL (BIT1 0))) /\ (forall y3 : nat, (y1 y2 (S y3)) = (Nat.mul (S y3) (y1 y2 y3)))) (@pair nat (prod nat (prod nat nat)) (NUMERAL (BIT0 (BIT1 (BIT1 (BIT0 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat nat) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat nat (NUMERAL (BIT1 (BIT1 (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 0)))))))) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 (BIT0 (BIT1 0))))))))))) y0)).
Definition term21 := fun y0 : nat => (@ε ((prod nat (prod nat (prod nat nat))) -> nat -> nat) (fun y1 : type1292 => forall y2 : type1673, ((y1 y2 (NUMERAL 0)) = (NUMERAL (BIT1 0))) /\ (forall y3 : nat, (y1 y2 (S y3)) = (Nat.mul (S y3) (y1 y2 y3)))) (@pair nat (prod nat (prod nat nat)) (NUMERAL (BIT0 (BIT1 (BIT1 (BIT0 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat nat) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat nat (NUMERAL (BIT1 (BIT1 (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 0)))))))) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 (BIT0 (BIT1 0))))))))))) (S y0)) = (Nat.mul (S y0) (@ε ((prod nat (prod nat (prod nat nat))) -> nat -> nat) (fun y1 : type1292 => forall y2 : type1673, ((y1 y2 (NUMERAL 0)) = (NUMERAL (BIT1 0))) /\ (forall y3 : nat, (y1 y2 (S y3)) = (Nat.mul (S y3) (y1 y2 y3)))) (@pair nat (prod nat (prod nat nat)) (NUMERAL (BIT0 (BIT1 (BIT1 (BIT0 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat nat) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat nat (NUMERAL (BIT1 (BIT1 (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 0)))))))) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 (BIT0 (BIT1 0))))))))))) y0)).
Definition term2 := (fun y0 : type1673 => ((@ε ((prod nat (prod nat (prod nat nat))) -> nat -> nat) (fun y1 : type1292 => forall y2 : type1673, ((y1 y2 (NUMERAL 0)) = (NUMERAL (BIT1 0))) /\ (forall y3 : nat, (y1 y2 (S y3)) = (Nat.mul (S y3) (y1 y2 y3)))) y0 (NUMERAL 0)) = (NUMERAL (BIT1 0))) /\ (forall y1 : nat, (@ε ((prod nat (prod nat (prod nat nat))) -> nat -> nat) (fun y2 : type1292 => forall y3 : type1673, ((y2 y3 (NUMERAL 0)) = (NUMERAL (BIT1 0))) /\ (forall y4 : nat, (y2 y3 (S y4)) = (Nat.mul (S y4) (y2 y3 y4)))) y0 (S y1)) = (Nat.mul (S y1) (@ε ((prod nat (prod nat (prod nat nat))) -> nat -> nat) (fun y2 : type1292 => forall y3 : type1673, ((y2 y3 (NUMERAL 0)) = (NUMERAL (BIT1 0))) /\ (forall y4 : nat, (y2 y3 (S y4)) = (Nat.mul (S y4) (y2 y3 y4)))) y0 y1)))) (@pair nat (prod nat (prod nat nat)) (NUMERAL (BIT0 (BIT1 (BIT1 (BIT0 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat nat) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat nat (NUMERAL (BIT1 (BIT1 (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 0)))))))) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 (BIT0 (BIT1 0))))))))))).
Definition term8 := @eq nat (@ε ((prod nat (prod nat (prod nat nat))) -> nat -> nat) (fun y0 : type1292 => forall y1 : type1673, ((y0 y1 (NUMERAL 0)) = (NUMERAL (BIT1 0))) /\ (forall y2 : nat, (y0 y1 (S y2)) = (Nat.mul (S y2) (y0 y1 y2)))) (@pair nat (prod nat (prod nat nat)) (NUMERAL (BIT0 (BIT1 (BIT1 (BIT0 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat nat) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat nat (NUMERAL (BIT1 (BIT1 (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 0)))))))) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 (BIT0 (BIT1 0))))))))))) (NUMERAL 0)).
Definition term4 := ((@ε ((prod nat (prod nat (prod nat nat))) -> nat -> nat) (fun y0 : type1292 => forall y1 : type1673, ((y0 y1 (NUMERAL 0)) = (NUMERAL (BIT1 0))) /\ (forall y2 : nat, (y0 y1 (S y2)) = (Nat.mul (S y2) (y0 y1 y2)))) (@pair nat (prod nat (prod nat nat)) (NUMERAL (BIT0 (BIT1 (BIT1 (BIT0 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat nat) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat nat (NUMERAL (BIT1 (BIT1 (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 0)))))))) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 (BIT0 (BIT1 0))))))))))) (NUMERAL 0)) = (NUMERAL (BIT1 0))) /\ (forall y0 : nat, (@ε ((prod nat (prod nat (prod nat nat))) -> nat -> nat) (fun y1 : type1292 => forall y2 : type1673, ((y1 y2 (NUMERAL 0)) = (NUMERAL (BIT1 0))) /\ (forall y3 : nat, (y1 y2 (S y3)) = (Nat.mul (S y3) (y1 y2 y3)))) (@pair nat (prod nat (prod nat nat)) (NUMERAL (BIT0 (BIT1 (BIT1 (BIT0 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat nat) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat nat (NUMERAL (BIT1 (BIT1 (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 0)))))))) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 (BIT0 (BIT1 0))))))))))) (S y0)) = (Nat.mul (S y0) (@ε ((prod nat (prod nat (prod nat nat))) -> nat -> nat) (fun y1 : type1292 => forall y2 : type1673, ((y1 y2 (NUMERAL 0)) = (NUMERAL (BIT1 0))) /\ (forall y3 : nat, (y1 y2 (S y3)) = (Nat.mul (S y3) (y1 y2 y3)))) (@pair nat (prod nat (prod nat nat)) (NUMERAL (BIT0 (BIT1 (BIT1 (BIT0 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat nat) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat nat (NUMERAL (BIT1 (BIT1 (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 0)))))))) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 (BIT0 (BIT1 0))))))))))) y0))).
Definition term25 := ((Factorial.fact (NUMERAL 0)) = (NUMERAL (BIT1 0))) /\ (forall y0 : nat, (Factorial.fact (S y0)) = (Nat.mul (S y0) (Factorial.fact y0))).
Definition term11 := and ((@ε ((prod nat (prod nat (prod nat nat))) -> nat -> nat) (fun y0 : type1292 => forall y1 : type1673, ((y0 y1 (NUMERAL 0)) = (NUMERAL (BIT1 0))) /\ (forall y2 : nat, (y0 y1 (S y2)) = (Nat.mul (S y2) (y0 y1 y2)))) (@pair nat (prod nat (prod nat nat)) (NUMERAL (BIT0 (BIT1 (BIT1 (BIT0 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat nat) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat nat (NUMERAL (BIT1 (BIT1 (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 0)))))))) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 (BIT0 (BIT1 0))))))))))) (NUMERAL 0)) = (NUMERAL (BIT1 0))).
Definition term6 := @ε ((prod nat (prod nat (prod nat nat))) -> nat -> nat) (fun y0 : type1292 => forall y1 : type1673, ((y0 y1 (NUMERAL 0)) = (NUMERAL (BIT1 0))) /\ (forall y2 : nat, (y0 y1 (S y2)) = (Nat.mul (S y2) (y0 y1 y2)))) (@pair nat (prod nat (prod nat nat)) (NUMERAL (BIT0 (BIT1 (BIT1 (BIT0 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat nat) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat nat (NUMERAL (BIT1 (BIT1 (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 0)))))))) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 (BIT0 (BIT1 0))))))))))) (NUMERAL 0).
Definition term7 := Factorial.fact (NUMERAL 0).
Definition term20 (x0 : nat) := Nat.mul (S x0) (Factorial.fact x0).
Definition term14 (x0 : nat) := Factorial.fact (S x0).
Definition term19 (x0 : nat) := Nat.mul (S x0) (@ε ((prod nat (prod nat (prod nat nat))) -> nat -> nat) (fun y0 : type1292 => forall y1 : type1673, ((y0 y1 (NUMERAL 0)) = (NUMERAL (BIT1 0))) /\ (forall y2 : nat, (y0 y1 (S y2)) = (Nat.mul (S y2) (y0 y1 y2)))) (@pair nat (prod nat (prod nat nat)) (NUMERAL (BIT0 (BIT1 (BIT1 (BIT0 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat (prod nat nat) (NUMERAL (BIT1 (BIT0 (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 0)))))))) (@pair nat nat (NUMERAL (BIT1 (BIT1 (BIT0 (BIT0 (BIT0 (BIT0 (BIT1 0)))))))) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 (BIT0 (BIT1 0))))))))))) x0).
Definition term10 := NUMERAL (BIT1 0).
