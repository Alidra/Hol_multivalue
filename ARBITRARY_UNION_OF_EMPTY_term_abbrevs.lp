require open hol-light.theory_hol;
require open hol-light.hol_types;
require open hol-light.hol_type_abbrevs;
require open hol-light.hol_terms;
symbol term3 a0 (x0: El (type180 a0)) (x1: El (type686 a0)) ≔ ((λ y0 : El (type686 a0), (⇒ (x0 (@EMPTY (fun a0 bool))) ((@UNION_OF a0) x0 y0 (@EMPTY a0)))) x1);
symbol term5 a0 (x0: El (type180 a0)) (x1: El (type686 a0)) ≔ (⇒ (x0 (@EMPTY (fun a0 bool))) (= ((@UNION_OF a0) x0 x1 (@EMPTY a0)) T));
symbol term11 a0 (x0: El bool) ≔ (∀ (λ y0 : El a0, x0));
symbol term0 a0 (x0: El (type686 a0)) ≔ ((λ y0 : El (type686 a0), (= ((@ARBITRARY a0) y0) T)) x0);
symbol term2 a0 (x0: El (type180 a0)) ≔ (∀ (λ y0 : El (type686 a0), (⇒ (x0 (@EMPTY (fun a0 bool))) ((@UNION_OF a0) x0 y0 (@EMPTY a0)))));
symbol term6 a0 (x0: El (type686 a0)) ≔ (⇒ ((@ARBITRARY a0) (@EMPTY (fun a0 bool))) (= ((@UNION_OF a0) (@ARBITRARY a0) x0 (@EMPTY a0)) T));
symbol term10 a0 ≔ (∀ (λ y0 : El (type686 a0), T));
symbol term7 a0 ≔ (λ y0 : El (type686 a0), ((@UNION_OF a0) (@ARBITRARY a0) y0 (@EMPTY a0)));
symbol term8 a0 ≔ (λ y0 : El (type686 a0), T);
symbol term1 a0 (x0: El (type180 a0)) ≔ ((λ y0 : El (type180 a0), (∀ (λ y1 : El (type686 a0), (⇒ (y0 (@EMPTY (fun a0 bool))) ((@UNION_OF a0) y0 y1 (@EMPTY a0)))))) x0);
symbol term9 a0 ≔ (∀ (λ y0 : El (type686 a0), ((@UNION_OF a0) (@ARBITRARY a0) y0 (@EMPTY a0))));
symbol term12 a0 (x0: El bool) ≔ (∀ (λ y0 : El (type686 a0), x0));
symbol term4 a0 (x0: El (type180 a0)) (x1: El (type686 a0)) ≔ (⇒ (x0 (@EMPTY (fun a0 bool))) ((@UNION_OF a0) x0 x1 (@EMPTY a0)));
