Require Import coq.
Require Import theory_hol.
Require Import hol_types.
Require Import hol_type_abbrevs.
Require Import hol_terms.
Definition term64 (a0 : Type') (x0 : a0) (x1 : a0 -> Prop) (x2 : a0 -> Prop) (x3 : a0) := @SETSPEC a0 x0 ((fun y0 : a0 => (@IN a0 y0 x1) /\ (~ (x2 y0))) x3).
Definition term44 (a0 : Type') (x0 : a0) (x1 : a0 -> Prop) (x2 : a0 -> Prop) (x3 : a0) := @SETSPEC a0 x0 ((@IN a0 x3 x1) /\ (x2 x3)) x3.
Definition term13 (a0 : Type') (x0 : a0) (x1 : a0) (x2 : a0) := ((x1 = x0) /\ (x0 = x2)) -> x1 = x2.
Definition term144 (a0 : Type') (x0 : a0 -> Prop) (x1 : a0) := (fun y0 : a0 => ~ (x0 y0)) x1.
Definition term2 (a0 : Type') (x0 : a0 -> Prop) := forall y0 : a0, (@IN a0 y0 (@GSPEC a0 (fun y1 : a0 => exists y2 : a0, @SETSPEC a0 y1 (x0 y2) y2))) = (x0 y0).
Definition term161 (a0 : Type') (a1 : Type') (x0 : type1400 a1) (x1 : a0 -> Prop) (x2 : a0 -> Prop) (x3 : a0 -> a1) (x4 : a0 -> a1) := x0 (@iterate a1 a0 x0 (@GSPEC a0 (fun y0 : a0 => exists y1 : a0, @SETSPEC a0 y0 ((@IN a0 y1 x1) /\ (x2 y1)) y1)) (fun y0 : a0 => @COND a1 (x2 y0) (x3 y0) (x4 y0))) (@iterate a1 a0 x0 (@GSPEC a0 (fun y0 : a0 => exists y1 : a0, @SETSPEC a0 y0 ((@IN a0 y1 x1) /\ (~ (x2 y1))) y1)) (fun y0 : a0 => @COND a1 (x2 y0) (x3 y0) (x4 y0))).
Definition term209 (a0 : Type') (x0 : a0 -> Prop) (x1 : a0 -> Prop) (x2 : a0) := or ((x0 x2) /\ (~ (((x0 x2) /\ (x1 x2)) \/ ((x0 x2) /\ (~ (x1 x2)))))).
Definition term153 (a0 : Type') (x0 : a0 -> Prop) (x1 : a0 -> Prop) := @FINITE a0 (@GSPEC a0 (fun y0 : a0 => exists y1 : a0, @SETSPEC a0 y0 ((@IN a0 y1 x0) /\ (~ (x1 y1))) y1)).
Definition term152 (a0 : Type') (x0 : a0 -> Prop) (x1 : a0 -> Prop) := @FINITE a0 (@GSPEC a0 (fun y0 : a0 => exists y1 : a0, @SETSPEC a0 y0 ((@IN a0 y1 x0) /\ ((fun y2 : a0 => ~ (x1 y2)) y1)) y1)).
Definition term133 (a0 : Type') (x0 : a0 -> Prop) (x1 : a0 -> Prop) := @FINITE a0 (@GSPEC a0 (fun y0 : a0 => exists y1 : a0, @SETSPEC a0 y0 ((@IN a0 y1 x0) /\ (x1 y1)) y1)).
Definition term106 := (~ False) -> False.
Definition term213 (a0 : Type') (x0 : a0 -> Prop) := (fun y0 : a0 -> Prop => forall y1 : a0 -> Prop, (~ (forall y2 : a0, (y1 y2) = (((y1 y2) /\ (y0 y2)) \/ ((y1 y2) /\ (~ (y0 y2)))))) -> False) x0.
Definition term108 (a0 : Type') (x0 : a0 -> Prop) := (fun y0 : a0 -> Prop => forall y1 : a0 -> Prop, (~ (forall y2 : a0, ~ (((y1 y2) /\ (y0 y2)) /\ ((y1 y2) /\ (~ (y0 y2)))))) -> False) x0.
Definition term207 (a0 : Type') (x0 : a0 -> Prop) (x1 : a0 -> Prop) (x2 : a0) := (x0 x2) /\ (~ (((x0 x2) /\ (x1 x2)) \/ ((x0 x2) /\ (~ (x1 x2))))).
Definition term275 (a0 : Type') (a1 : Type') (x0 : a0 -> a1) (x1 : a0 -> a1) (x2 : a0) := @COND a1 True (x0 x2) (x1 x2).
Definition term21 (a0 : Type') := (forall y0 : a0, forall y1 : a0, forall y2 : a0, ((y0 = y1) /\ (y1 = y2)) -> y0 = y2) -> forall y0 : a0, forall y1 : a0, (exists y2 : a0, (y0 = y2) /\ (y2 = y1)) -> y0 = y1.
Definition term310 (a0 : Type') (a1 : Type') (x0 : type1400 a1) (x1 : a0 -> Prop) (x2 : a0 -> Prop) (x3 : a0 -> a1) (x4 : a0 -> a1) := @iterate a1 a0 x0 (@GSPEC a0 (fun y0 : a0 => exists y1 : a0, @SETSPEC a0 y0 ((@IN a0 y1 x1) /\ (x2 y1)) y1)) (fun y0 : a0 => @COND a1 (x2 y0) (x3 y0) (x4 y0)).
Definition term308 (a0 : Type') (a1 : Type') (x0 : type1400 a1) (x1 : a0 -> Prop) (x2 : a0 -> Prop) (x3 : a0 -> a1) (x4 : a0 -> a1) := @iterate a1 a0 x0 (@GSPEC a0 (fun y0 : a0 => exists y1 : a0, @SETSPEC a0 y0 ((@IN a0 y1 x1) /\ (~ (x2 y1))) y1)) (fun y0 : a0 => @COND a1 (x2 y0) (x3 y0) (x4 y0)).
Definition term1 (a0 : Type') (x0 : a0 -> Prop) := (fun y0 : a0 -> Prop => forall y1 : a0, (@IN a0 y1 (@GSPEC a0 (fun y2 : a0 => exists y3 : a0, @SETSPEC a0 y2 (y0 y3) y3))) = (y0 y1)) x0.
Definition term322 (a0 : Type') (a1 : Type') (x0 : type1400 a1) := (@monoidal a1 x0) -> forall y0 : a0 -> Prop, forall y1 : a0 -> Prop, forall y2 : a0 -> a1, forall y3 : a0 -> a1, (@FINITE a0 y0) -> (@iterate a1 a0 x0 y0 (fun y4 : a0 => @COND a1 (y1 y4) (y2 y4) (y3 y4))) = (x0 (@iterate a1 a0 x0 (@GSPEC a0 (fun y4 : a0 => exists y5 : a0, @SETSPEC a0 y4 ((@IN a0 y5 y0) /\ (y1 y5)) y5)) y2) (@iterate a1 a0 x0 (@GSPEC a0 (fun y4 : a0 => exists y5 : a0, @SETSPEC a0 y4 ((@IN a0 y5 y0) /\ (~ (y1 y5))) y5)) y3)).
Definition term111 (a0 : Type') (a1 : Type') (x0 : type1400 a1) := (@monoidal a1 x0) -> forall y0 : a0 -> a1, forall y1 : a0 -> Prop, forall y2 : a0 -> Prop, ((@FINITE a0 y1) /\ ((@FINITE a0 y2) /\ (@DISJOINT a0 y1 y2))) -> (@iterate a1 a0 x0 (@UNION a0 y1 y2) y0) = (x0 (@iterate a1 a0 x0 y1 y0) (@iterate a1 a0 x0 y2 y0)).
Definition term6 (a0 : Type') (a1 : Type') (x0 : type1400 a1) := (@monoidal a1 x0) -> forall y0 : a0 -> a1, forall y1 : a0 -> a1, forall y2 : a0 -> Prop, (forall y3 : a0, (@IN a0 y3 y2) -> (y0 y3) = (y1 y3)) -> (@iterate a1 a0 x0 y2 y0) = (@iterate a1 a0 x0 y2 y1).
Definition term169 (a0 : Type') (x0 : a0 -> Prop) (x1 : a0) (x2 : a0 -> Prop) := (@IN a0 x1 x0) \/ (@IN a0 x1 x2).
Definition term311 (a0 : Type') (a1 : Type') (x0 : type1400 a1) (x1 : a0 -> Prop) (x2 : a0 -> Prop) (x3 : a0 -> a1) := @iterate a1 a0 x0 (@GSPEC a0 (fun y0 : a0 => exists y1 : a0, @SETSPEC a0 y0 ((@IN a0 y1 x1) /\ (x2 y1)) y1)) x3.
Definition term309 (a0 : Type') (a1 : Type') (x0 : type1400 a1) (x1 : a0 -> Prop) (x2 : a0 -> Prop) (x3 : a0 -> a1) := @iterate a1 a0 x0 (@GSPEC a0 (fun y0 : a0 => exists y1 : a0, @SETSPEC a0 y0 ((@IN a0 y1 x1) /\ (~ (x2 y1))) y1)) x3.
Definition term115 (a0 : Type') (x0 : a0 -> Prop) (x1 : a0 -> Prop) := imp ((@FINITE a0 x0) /\ ((@FINITE a0 x1) /\ (@DISJOINT a0 x0 x1))).
Definition term197 (a0 : Type') (x0 : a0 -> Prop) (x1 : a0) := or (~ (x0 x1)).
Definition term98 (a0 : Type') (x0 : a0 -> Prop) := forall y0 : a0 -> Prop, forall y1 : a0, ~ (((y0 y1) /\ (x0 y1)) /\ ((y0 y1) /\ (~ (x0 y1)))).
Definition term156 (a0 : Type') (x0 : a0 -> Prop) := imp (@FINITE a0 x0).
Definition term175 (a0 : Type') (x0 : a0 -> Prop) (x1 : a0 -> Prop) := fun y0 : a0 => (@IN a0 y0 x0) = (@IN a0 y0 (@UNION a0 (@GSPEC a0 (fun y1 : a0 => exists y2 : a0, @SETSPEC a0 y1 ((@IN a0 y2 x0) /\ (x1 y2)) y2)) (@GSPEC a0 (fun y1 : a0 => exists y2 : a0, @SETSPEC a0 y1 ((@IN a0 y2 x0) /\ (~ (x1 y2))) y2)))).
Definition term113 (a0 : Type') (a1 : Type') (x0 : type1400 a1) (x1 : a0 -> Prop) (x2 : a0 -> Prop) (x3 : a0 -> a1) := @iterate a1 a0 x0 (@UNION a0 x1 x2) x3.
Definition term94 (x0 : Prop) := ~ (~ x0).
Definition term253 (a0 : Type') (a1 : Type') (x0 : a0 -> Prop) (x1 : a0 -> a1) (x2 : a0 -> a1) (x3 : a0) := @COND a1 (x0 x3) (x1 x3) (x2 x3).
Definition term313 (a0 : Type') (a1 : Type') (x0 : type1400 a1) (x1 : a0 -> Prop) (x2 : a0 -> Prop) (x3 : a0 -> a1) := x0 (@iterate a1 a0 x0 (@GSPEC a0 (fun y0 : a0 => exists y1 : a0, @SETSPEC a0 y0 ((@IN a0 y1 x1) /\ (x2 y1)) y1)) x3).
Definition term244 (a0 : Type') (a1 : Type') (x0 : a0 -> Prop) (x1 : a0 -> a1) (x2 : a0 -> a1) (x3 : a0) := (fun y0 : a0 => @COND a1 (x0 y0) (x1 y0) (x2 y0)) x3.
Definition term262 (a0 : Type') (a1 : Type') (x0 : a0 -> Prop) (x1 : a0 -> a1) (x2 : a0 -> a1) (x3 : a0) (x4 : Prop) := (fun y0 : Prop => forall y1 : a1, forall y2 : a1, ((x0 x3) = y0) -> (y0 -> (x1 x3) = y1) -> ((~ y0) -> (x2 x3) = y2) -> (@COND a1 (x0 x3) (x1 x3) (x2 x3)) = (@COND a1 y0 y1 y2)) x4.
Definition term14 (a0 : Type') (x0 : a0) (x1 : a0) (x2 : a0) := (x0 = x1) /\ (x1 = x2).
Definition term179 (a0 : Type') (x0 : a0 -> Prop) (x1 : a0 -> Prop) := ~ (forall y0 : a0, (x0 y0) = (((x0 y0) /\ (x1 y0)) \/ ((x0 y0) /\ (~ (x1 y0))))).
Definition term145 (a0 : Type') (x0 : a0 -> Prop) (x1 : a0 -> Prop) (x2 : a0) := (@IN a0 x2 x0) /\ ((fun y0 : a0 => ~ (x1 y0)) x2).
Definition term164 (a0 : Type') (x0 : a0 -> Prop) (x1 : a0 -> Prop) := @UNION a0 (@GSPEC a0 (fun y0 : a0 => exists y1 : a0, @SETSPEC a0 y0 ((@IN a0 y1 x0) /\ (x1 y1)) y1)) (@GSPEC a0 (fun y0 : a0 => exists y1 : a0, @SETSPEC a0 y0 ((@IN a0 y1 x0) /\ (~ (x1 y1))) y1)).
Definition term206 (a0 : Type') (x0 : a0 -> Prop) (x1 : a0 -> Prop) (x2 : a0) := (~ (x0 x2)) /\ (((x0 x2) /\ (x1 x2)) \/ ((x0 x2) /\ (~ (x1 x2)))).
Definition term57 (a0 : Type') (x0 : a0 -> Prop) (x1 : a0 -> Prop) (x2 : a0) := (x0 x2) /\ (x1 x2).
Definition term306 (a0 : Type') (a1 : Type') (x0 : a0 -> Prop) (x1 : a0 -> Prop) (x2 : a0 -> a1) (x3 : a0 -> a1) := fun y0 : a0 => (@IN a0 y0 (@GSPEC a0 (fun y1 : a0 => exists y2 : a0, @SETSPEC a0 y1 ((@IN a0 y2 x0) /\ (~ (x1 y2))) y2))) -> ((fun y1 : a0 => @COND a1 (x1 y1) (x2 y1) (x3 y1)) y0) = (x3 y0).
Definition term281 (a0 : Type') (a1 : Type') (x0 : a0 -> Prop) (x1 : a0 -> Prop) (x2 : a0 -> a1) (x3 : a0 -> a1) := fun y0 : a0 => (@IN a0 y0 (@GSPEC a0 (fun y1 : a0 => exists y2 : a0, @SETSPEC a0 y1 ((@IN a0 y2 x0) /\ (x1 y2)) y2))) -> ((fun y1 : a0 => @COND a1 (x1 y1) (x3 y1) (x2 y1)) y0) = (x3 y0).
Definition term252 (a0 : Type') (a1 : Type') (x0 : a0 -> Prop) (x1 : a0 -> a1) (x2 : a0 -> a1) (x3 : a0) := (fun y0 : a0 => (fun y1 : a0 => @COND a1 (x0 y1) (x1 y1) (x2 y1)) y0) x3.
Definition term79 (a0 : Type') (x0 : a0 -> Prop) (x1 : a0 -> Prop) (x2 : a0) := (x0 x2) /\ (~ (x1 x2)).
Definition term215 (a0 : Type') (a1 : Type') (x0 : type1400 a1) (x1 : a0 -> Prop) (x2 : a0 -> Prop) := @iterate a1 a0 x0 (@UNION a0 (@GSPEC a0 (fun y0 : a0 => exists y1 : a0, @SETSPEC a0 y0 ((@IN a0 y1 x1) /\ (x2 y1)) y1)) (@GSPEC a0 (fun y0 : a0 => exists y1 : a0, @SETSPEC a0 y0 ((@IN a0 y1 x1) /\ (~ (x2 y1))) y1))).
Definition term285 (a0 : Type') (x0 : Prop) := forall y0 : a0, x0.
Definition term290 (a0 : Type') (a1 : Type') (x0 : a0 -> Prop) (x1 : a0 -> Prop) (x2 : a0 -> a1) (x3 : a0 -> a1) (x4 : a0) (x5 : Prop) (x6 : Prop) := ((@IN a0 x4 (@GSPEC a0 (fun y0 : a0 => exists y1 : a0, @SETSPEC a0 y0 ((@IN a0 y1 x0) /\ (~ (x1 y1))) y1))) = x5) -> (x5 -> (((fun y0 : a0 => @COND a1 (x1 y0) (x2 y0) (x3 y0)) x4) = (x3 x4)) = x6) -> ((@IN a0 x4 (@GSPEC a0 (fun y0 : a0 => exists y1 : a0, @SETSPEC a0 y0 ((@IN a0 y1 x0) /\ (~ (x1 y1))) y1))) -> ((fun y0 : a0 => @COND a1 (x1 y0) (x2 y0) (x3 y0)) x4) = (x3 x4)) = (x5 -> x6).
Definition term248 (a0 : Type') (a1 : Type') (x0 : a0 -> Prop) (x1 : a0 -> Prop) (x2 : a0 -> a1) (x3 : a0 -> a1) (x4 : a0) (x5 : Prop) (x6 : Prop) := ((@IN a0 x4 (@GSPEC a0 (fun y0 : a0 => exists y1 : a0, @SETSPEC a0 y0 ((@IN a0 y1 x0) /\ (x1 y1)) y1))) = x5) -> (x5 -> (((fun y0 : a0 => @COND a1 (x1 y0) (x3 y0) (x2 y0)) x4) = (x3 x4)) = x6) -> ((@IN a0 x4 (@GSPEC a0 (fun y0 : a0 => exists y1 : a0, @SETSPEC a0 y0 ((@IN a0 y1 x0) /\ (x1 y1)) y1))) -> ((fun y0 : a0 => @COND a1 (x1 y0) (x3 y0) (x2 y0)) x4) = (x3 x4)) = (x5 -> x6).
Definition term78 (a0 : Type') (x0 : a0 -> Prop) (x1 : a0) := ~ (x0 x1).
Definition term69 (a0 : Type') (x0 : a0) (x1 : a0 -> Prop) (x2 : a0 -> Prop) := fun y0 : a0 => @SETSPEC a0 x0 ((@IN a0 y0 x1) /\ (~ (x2 y0))) y0.
Definition term70 (a0 : Type') (x0 : a0) (x1 : a0 -> Prop) (x2 : a0 -> Prop) := exists y0 : a0, @SETSPEC a0 x0 ((fun y1 : a0 => (@IN a0 y1 x1) /\ (~ (x2 y1))) y0) y0.
Definition term47 (a0 : Type') (x0 : a0) (x1 : a0 -> Prop) (x2 : a0 -> Prop) := exists y0 : a0, @SETSPEC a0 x0 ((fun y1 : a0 => (@IN a0 y1 x1) /\ (x2 y1)) y0) y0.
Definition term321 (a0 : Type') (a1 : Type') (x0 : type1400 a1) := forall y0 : a0 -> Prop, forall y1 : a0 -> Prop, forall y2 : a0 -> a1, forall y3 : a0 -> a1, (@FINITE a0 y0) -> (@iterate a1 a0 x0 y0 (fun y4 : a0 => @COND a1 (y1 y4) (y2 y4) (y3 y4))) = (x0 (@iterate a1 a0 x0 (@GSPEC a0 (fun y4 : a0 => exists y5 : a0, @SETSPEC a0 y4 ((@IN a0 y5 y0) /\ (y1 y5)) y5)) y2) (@iterate a1 a0 x0 (@GSPEC a0 (fun y4 : a0 => exists y5 : a0, @SETSPEC a0 y4 ((@IN a0 y5 y0) /\ (~ (y1 y5))) y5)) y3)).
Definition term320 (a0 : Type') (a1 : Type') (x0 : type1400 a1) (x1 : a0 -> Prop) := forall y0 : a0 -> Prop, forall y1 : a0 -> a1, forall y2 : a0 -> a1, (@FINITE a0 x1) -> (@iterate a1 a0 x0 x1 (fun y3 : a0 => @COND a1 (y0 y3) (y1 y3) (y2 y3))) = (x0 (@iterate a1 a0 x0 (@GSPEC a0 (fun y3 : a0 => exists y4 : a0, @SETSPEC a0 y3 ((@IN a0 y4 x1) /\ (y0 y4)) y4)) y1) (@iterate a1 a0 x0 (@GSPEC a0 (fun y3 : a0 => exists y4 : a0, @SETSPEC a0 y3 ((@IN a0 y4 x1) /\ (~ (y0 y4))) y4)) y2)).
Definition term227 (a0 : Type') (a1 : Type') (x0 : type1400 a1) := forall y0 : a0 -> a1, forall y1 : a0 -> Prop, forall y2 : a0 -> a1, (forall y3 : a0, (@IN a0 y3 y1) -> (y0 y3) = (y2 y3)) -> (@iterate a1 a0 x0 y1 y0) = (@iterate a1 a0 x0 y1 y2).
Definition term216 (a0 : Type') (a1 : Type') (x0 : type1400 a1) := forall y0 : a0 -> a1, forall y1 : a0 -> a1, forall y2 : a0 -> Prop, (forall y3 : a0, (@IN a0 y3 y2) -> (y0 y3) = (y1 y3)) -> (@iterate a1 a0 x0 y2 y0) = (@iterate a1 a0 x0 y2 y1).
Definition term191 (a0 : Type') := forall y0 : a0 -> Prop, forall y1 : a0 -> Prop, forall y2 : a0, (y1 y2) = (((y1 y2) /\ (y0 y2)) \/ ((y1 y2) /\ (~ (y0 y2)))).
Definition term128 (a0 : Type') (a1 : Type') (x0 : type1400 a1) := forall y0 : a0 -> a1, forall y1 : a0 -> Prop, forall y2 : a0 -> Prop, ((@FINITE a0 y1) /\ ((@FINITE a0 y2) /\ (@DISJOINT a0 y1 y2))) -> (x0 (@iterate a1 a0 x0 y1 y0) (@iterate a1 a0 x0 y2 y0)) = (@iterate a1 a0 x0 (@UNION a0 y1 y2) y0).
Definition term112 (a0 : Type') (a1 : Type') (x0 : type1400 a1) := forall y0 : a0 -> a1, forall y1 : a0 -> Prop, forall y2 : a0 -> Prop, ((@FINITE a0 y1) /\ ((@FINITE a0 y2) /\ (@DISJOINT a0 y1 y2))) -> (@iterate a1 a0 x0 (@UNION a0 y1 y2) y0) = (x0 (@iterate a1 a0 x0 y1 y0) (@iterate a1 a0 x0 y2 y0)).
Definition term102 (a0 : Type') := forall y0 : a0 -> Prop, forall y1 : a0 -> Prop, forall y2 : a0, ~ (((y1 y2) /\ (y0 y2)) /\ ((y1 y2) /\ (~ (y0 y2)))).
Definition term166 (a0 : Type') (x0 : a0) (x1 : a0 -> Prop) := @eq Prop (@IN a0 x0 x1).
Definition term87 (x0 : Prop) := (~ x0) -> False.
Definition term256 (a0 : Type') (a1 : Type') (x0 : a0 -> Prop) (x1 : a0 -> a1) (x2 : a0 -> a1) (x3 : a0) := @eq a1 ((fun y0 : a0 => @COND a1 (x0 y0) (x1 y0) (x2 y0)) x3).
Definition term270 (a0 : Type') (a1 : Type') (x0 : a0 -> a1) (x1 : a0) := True -> (x0 x1) = (x0 x1).
Definition term280 (a0 : Type') (x0 : a0 -> Prop) (x1 : a0 -> Prop) (x2 : a0) := ((@IN a0 x2 x0) /\ (x1 x2)) -> True.
Definition term131 (a0 : Type') (x0 : a0 -> Prop) (x1 : a0 -> Prop) := (fun y0 : a0 -> Prop => (@FINITE a0 x0) -> @FINITE a0 (@GSPEC a0 (fun y1 : a0 => exists y2 : a0, @SETSPEC a0 y1 ((@IN a0 y2 x0) /\ (y0 y2)) y2))) x1.
Definition term192 (a0 : Type') (x0 : a0 -> Prop) (x1 : a0 -> Prop) (x2 : a0) := (~ ((x0 x2) = (((x0 x2) /\ (x1 x2)) \/ ((x0 x2) /\ (~ (x1 x2)))))) -> False.
Definition term223 (a0 : Type') (a1 : Type') (x0 : a0 -> Prop) (x1 : a0 -> a1) (x2 : a0 -> a1) := forall y0 : a0, (@IN a0 y0 x0) -> (x1 y0) = (x2 y0).
Definition term42 (a0 : Type') (x0 : a0) (x1 : a0 -> Prop) (x2 : a0 -> Prop) (x3 : a0) := @SETSPEC a0 x0 ((@IN a0 x3 x1) /\ (x2 x3)).
Definition term284 (a0 : Type') := forall y0 : a0, True.
Definition term204 (a0 : Type') (x0 : a0 -> Prop) (x1 : a0 -> Prop) (x2 : a0) := ((~ (x0 x2)) \/ (~ (x1 x2))) /\ ((~ (x0 x2)) \/ (x1 x2)).
Definition term32 (a0 : Type') (x0 : a0 -> Prop) (x1 : a0 -> Prop) := forall y0 : a0, (@IN a0 y0 (@INTER a0 (@GSPEC a0 (fun y1 : a0 => exists y2 : a0, @SETSPEC a0 y1 ((@IN a0 y2 x0) /\ (x1 y2)) y2)) (@GSPEC a0 (fun y1 : a0 => exists y2 : a0, @SETSPEC a0 y1 ((@IN a0 y2 x0) /\ (~ (x1 y2))) y2)))) = (@IN a0 y0 (@EMPTY a0)).
Definition term323 (a0 : Type') (a1 : Type') := forall y0 : type1400 a1, (@monoidal a1 y0) -> forall y1 : a0 -> Prop, forall y2 : a0 -> Prop, forall y3 : a0 -> a1, forall y4 : a0 -> a1, (@FINITE a0 y1) -> (@iterate a1 a0 y0 y1 (fun y5 : a0 => @COND a1 (y2 y5) (y3 y5) (y4 y5))) = (y0 (@iterate a1 a0 y0 (@GSPEC a0 (fun y5 : a0 => exists y6 : a0, @SETSPEC a0 y5 ((@IN a0 y6 y1) /\ (y2 y6)) y6)) y3) (@iterate a1 a0 y0 (@GSPEC a0 (fun y5 : a0 => exists y6 : a0, @SETSPEC a0 y5 ((@IN a0 y6 y1) /\ (~ (y2 y6))) y6)) y4)).
Definition term258 (a0 : Type') (x0 : Prop) (x1 : a0) (x2 : a0) (x3 : Prop) (x4 : a0) := forall y0 : a0, (x0 = x3) -> (x3 -> x1 = x4) -> ((~ x3) -> x2 = y0) -> (@COND a0 x0 x1 x2) = (@COND a0 x3 x4 y0).
Definition term39 (a0 : Type') (x0 : a0 -> Prop) (x1 : a0 -> Prop) := fun y0 : a0 => (@IN a0 y0 x0) /\ (x1 y0).
Definition term11 (a0 : Type') (x0 : a0) (x1 : a0) := forall y0 : a0, ((x1 = x0) /\ (x0 = y0)) -> x1 = y0.
Definition term196 (a0 : Type') (x0 : a0 -> Prop) (x1 : a0) := ~ (~ (x0 x1)).
Definition term65 (a0 : Type') (x0 : a0) (x1 : a0 -> Prop) (x2 : a0 -> Prop) (x3 : a0) := @SETSPEC a0 x0 ((@IN a0 x3 x1) /\ (~ (x2 x3))).
Definition term8 (a0 : Type') (x0 : a0) := (fun y0 : a0 => forall y1 : a0, forall y2 : a0, ((y0 = y1) /\ (y1 = y2)) -> y0 = y2) x0.
Definition term132 (a0 : Type') (x0 : a0 -> Prop) (x1 : a0 -> Prop) := (@FINITE a0 x0) -> @FINITE a0 (@GSPEC a0 (fun y0 : a0 => exists y1 : a0, @SETSPEC a0 y0 ((@IN a0 y1 x0) /\ (x1 y1)) y1)).
Definition term228 (a0 : Type') (a1 : Type') (x0 : type1400 a1) := (forall y0 : a0 -> a1, forall y1 : a0 -> a1, forall y2 : a0 -> Prop, (forall y3 : a0, (@IN a0 y3 y2) -> (y0 y3) = (y1 y3)) -> (@iterate a1 a0 x0 y2 y0) = (@iterate a1 a0 x0 y2 y1)) -> forall y0 : a0 -> a1, forall y1 : a0 -> Prop, forall y2 : a0 -> a1, (forall y3 : a0, (@IN a0 y3 y1) -> (y0 y3) = (y2 y3)) -> (@iterate a1 a0 x0 y1 y0) = (@iterate a1 a0 x0 y1 y2).
Definition term31 (a0 : Type') (x0 : a0 -> Prop) (x1 : a0 -> Prop) := forall y0 : a0, (@IN a0 y0 x0) = (@IN a0 y0 x1).
Definition term265 (a0 : Type') (a1 : Type') (x0 : a0 -> Prop) (x1 : a0 -> a1) (x2 : a0 -> a1) (x3 : a0) (x4 : Prop) (x5 : a1) := forall y0 : a1, ((x0 x3) = x4) -> (x4 -> (x1 x3) = x5) -> ((~ x4) -> (x2 x3) = y0) -> (@COND a1 (x0 x3) (x1 x3) (x2 x3)) = (@COND a1 x4 x5 y0).
Definition term146 (a0 : Type') (x0 : a0) (x1 : a0 -> Prop) (x2 : a0 -> Prop) (x3 : a0) := @SETSPEC a0 x0 ((@IN a0 x3 x1) /\ ((fun y0 : a0 => ~ (x2 y0)) x3)).
Definition term104 (x0 : Prop) := (~ x0) -> x0.
Definition term292 (a0 : Type') (a1 : Type') (x0 : a0 -> a1) (x1 : a0 -> a1) (x2 : a0 -> Prop) (x3 : a0 -> Prop) (x4 : a0) (x5 : Prop) := (((@IN a0 x4 x2) /\ (~ (x3 x4))) -> (((fun y0 : a0 => @COND a1 (x3 y0) (x0 y0) (x1 y0)) x4) = (x1 x4)) = x5) -> ((@IN a0 x4 (@GSPEC a0 (fun y0 : a0 => exists y1 : a0, @SETSPEC a0 y0 ((@IN a0 y1 x2) /\ (~ (x3 y1))) y1))) -> ((fun y0 : a0 => @COND a1 (x3 y0) (x0 y0) (x1 y0)) x4) = (x1 x4)) = (((@IN a0 x4 x2) /\ (~ (x3 x4))) -> x5).
Definition term250 (a0 : Type') (a1 : Type') (x0 : a0 -> a1) (x1 : a0 -> a1) (x2 : a0 -> Prop) (x3 : a0 -> Prop) (x4 : a0) (x5 : Prop) := (((@IN a0 x4 x2) /\ (x3 x4)) -> (((fun y0 : a0 => @COND a1 (x3 y0) (x1 y0) (x0 y0)) x4) = (x1 x4)) = x5) -> ((@IN a0 x4 (@GSPEC a0 (fun y0 : a0 => exists y1 : a0, @SETSPEC a0 y0 ((@IN a0 y1 x2) /\ (x3 y1)) y1))) -> ((fun y0 : a0 => @COND a1 (x3 y0) (x1 y0) (x0 y0)) x4) = (x1 x4)) = (((@IN a0 x4 x2) /\ (x3 x4)) -> x5).
Definition term317 (a0 : Type') (a1 : Type') (x0 : a0 -> a1) (x1 : type1400 a1) (x2 : a0 -> Prop) (x3 : a0 -> Prop) (x4 : a0 -> a1) := (@FINITE a0 x2) -> (@iterate a1 a0 x1 x2 (fun y0 : a0 => @COND a1 (x3 y0) (x0 y0) (x4 y0))) = (x1 (@iterate a1 a0 x1 (@GSPEC a0 (fun y0 : a0 => exists y1 : a0, @SETSPEC a0 y0 ((@IN a0 y1 x2) /\ (x3 y1)) y1)) x0) (@iterate a1 a0 x1 (@GSPEC a0 (fun y0 : a0 => exists y1 : a0, @SETSPEC a0 y0 ((@IN a0 y1 x2) /\ (~ (x3 y1))) y1)) x4)).
Definition term120 (a0 : Type') (a1 : Type') (x0 : a0 -> Prop) (x1 : type1400 a1) (x2 : a0 -> a1) := forall y0 : a0 -> Prop, ((@FINITE a0 x0) /\ ((@FINITE a0 y0) /\ (@DISJOINT a0 x0 y0))) -> (@iterate a1 a0 x1 (@UNION a0 x0 y0) x2) = (x1 (@iterate a1 a0 x1 x0 x2) (@iterate a1 a0 x1 y0 x2)).
Definition term130 (a0 : Type') (x0 : a0 -> Prop) := forall y0 : a0 -> Prop, (@FINITE a0 x0) -> @FINITE a0 (@GSPEC a0 (fun y1 : a0 => exists y2 : a0, @SETSPEC a0 y1 ((@IN a0 y2 x0) /\ (y0 y2)) y2)).
Definition term299 (a0 : Type') (a1 : Type') (x0 : a0 -> a1) (x1 : a0) := (~ False) -> (x0 x1) = (x0 x1).
Definition term22 (a0 : Type') (x0 : a0) := (fun y0 : a0 => forall y1 : a0, (exists y2 : a0, (y0 = y2) /\ (y2 = y1)) -> y0 = y1) x0.
Definition term123 (a0 : Type') (a1 : Type') (x0 : type1400 a1) (x1 : a0 -> a1) := fun y0 : a0 -> Prop => forall y1 : a0 -> Prop, ((@FINITE a0 y0) /\ ((@FINITE a0 y1) /\ (@DISJOINT a0 y0 y1))) -> (x0 (@iterate a1 a0 x0 y0 x1) (@iterate a1 a0 x0 y1 x1)) = (@iterate a1 a0 x0 (@UNION a0 y0 y1) x1).
Definition term122 (a0 : Type') (a1 : Type') (x0 : type1400 a1) (x1 : a0 -> a1) := fun y0 : a0 -> Prop => forall y1 : a0 -> Prop, ((@FINITE a0 y0) /\ ((@FINITE a0 y1) /\ (@DISJOINT a0 y0 y1))) -> (@iterate a1 a0 x0 (@UNION a0 y0 y1) x1) = (x0 (@iterate a1 a0 x0 y0 x1) (@iterate a1 a0 x0 y1 x1)).
Definition term157 (a0 : Type') (x0 : a0 -> Prop) (x1 : a0 -> Prop) := (@FINITE a0 x0) -> (@FINITE a0 (@GSPEC a0 (fun y0 : a0 => exists y1 : a0, @SETSPEC a0 y0 ((@IN a0 y1 x0) /\ (~ (x1 y1))) y1))) = True.
Definition term142 (a0 : Type') (x0 : a0 -> Prop) (x1 : a0 -> Prop) := (@FINITE a0 x0) -> (@FINITE a0 (@GSPEC a0 (fun y0 : a0 => exists y1 : a0, @SETSPEC a0 y0 ((@IN a0 y1 x0) /\ ((fun y2 : a0 => ~ (x1 y2)) y1)) y1))) = True.
Definition term140 (a0 : Type') (x0 : a0 -> Prop) (x1 : a0 -> Prop) := (@FINITE a0 x0) -> (@FINITE a0 (@GSPEC a0 (fun y0 : a0 => exists y1 : a0, @SETSPEC a0 y0 ((@IN a0 y1 x0) /\ (x1 y1)) y1))) = True.
Definition term80 (a0 : Type') (x0 : a0 -> Prop) (x1 : a0 -> Prop) (x2 : a0) := ((x0 x2) /\ (x1 x2)) /\ ((x0 x2) /\ (~ (x1 x2))).
Definition term27 (a0 : Type') (x0 : a0 -> Prop) (x1 : a0 -> Prop) := @DISJOINT a0 (@GSPEC a0 (fun y0 : a0 => exists y1 : a0, @SETSPEC a0 y0 ((@IN a0 y1 x0) /\ (x1 y1)) y1)) (@GSPEC a0 (fun y0 : a0 => exists y1 : a0, @SETSPEC a0 y0 ((@IN a0 y1 x0) /\ (~ (x1 y1))) y1)).
Definition term33 (a0 : Type') (x0 : a0) (x1 : a0 -> Prop) (x2 : a0 -> Prop) := @IN a0 x0 (@INTER a0 x1 x2).
Definition term273 (a0 : Type') (a1 : Type') (x0 : a0 -> a1) (x1 : a0) := (~ True) -> (x0 x1) = (x0 x1).
Definition term294 (a0 : Type') (a1 : Type') (x0 : a0 -> Prop) (x1 : a0 -> a1) (x2 : a0 -> a1) (x3 : a0) (x4 : a1) (x5 : a1) := ((x0 x3) = False) -> (False -> (x1 x3) = x4) -> ((~ False) -> (x2 x3) = x5) -> (@COND a1 (x0 x3) (x1 x3) (x2 x3)) = (@COND a1 False x4 x5).
Definition term72 (a0 : Type') (x0 : a0 -> Prop) (x1 : a0 -> Prop) := fun y0 : a0 => exists y1 : a0, @SETSPEC a0 y0 ((fun y2 : a0 => (@IN a0 y2 x0) /\ (~ (x1 y2))) y1) y1.
Definition term49 (a0 : Type') (x0 : a0 -> Prop) (x1 : a0 -> Prop) := fun y0 : a0 => exists y1 : a0, @SETSPEC a0 y0 ((fun y2 : a0 => (@IN a0 y2 x0) /\ (x1 y2)) y1) y1.
Definition term167 (a0 : Type') (x0 : a0 -> Prop) (x1 : a0) := @eq Prop (x0 x1).
Definition term203 (a0 : Type') (x0 : a0 -> Prop) (x1 : a0 -> Prop) (x2 : a0) := (~ ((x0 x2) /\ (x1 x2))) /\ (~ ((x0 x2) /\ (~ (x1 x2)))).
Definition term276 (a0 : Type') (a1 : Type') (x0 : a0 -> a1) (x1 : a0) := @eq a1 (x0 x1).
Definition term12 (a0 : Type') (x0 : a0) (x1 : a0) (x2 : a0) := (fun y0 : a0 => ((x1 = x0) /\ (x0 = y0)) -> x1 = y0) x2.
Definition term143 (a0 : Type') (x0 : a0 -> Prop) := fun y0 : a0 => ~ (x0 y0).
Definition term297 (a0 : Type') (a1 : Type') (x0 : a0 -> Prop) (x1 : a0 -> a1) (x2 : a0 -> a1) (x3 : a0) (x4 : a1) := (False -> (x2 x3) = (x2 x3)) -> ((~ False) -> (x1 x3) = x4) -> (@COND a1 (x0 x3) (x2 x3) (x1 x3)) = (@COND a1 False (x2 x3) x4).
Definition term17 (a0 : Type') (x0 : a0) (x1 : a0) := fun y0 : a0 => (x0 = y0) /\ (y0 = x1).
Definition term231 (a0 : Type') (a1 : Type') (x0 : a0 -> a1) (x1 : type1400 a1) (x2 : a0 -> Prop) (x3 : a0 -> a1) := (fun y0 : a0 -> a1 => (forall y1 : a0, (@IN a0 y1 x2) -> (x0 y1) = (y0 y1)) -> (@iterate a1 a0 x1 x2 x0) = (@iterate a1 a0 x1 x2 y0)) x3.
Definition term96 (a0 : Type') (x0 : a0 -> Prop) := fun y0 : a0 -> Prop => forall y1 : a0, ~ (((y0 y1) /\ (x0 y1)) /\ ((y0 y1) /\ (~ (x0 y1)))).
Definition term168 (a0 : Type') (x0 : a0) (x1 : a0 -> Prop) (x2 : a0 -> Prop) := @IN a0 x0 (@UNION a0 x1 x2).
Definition term202 (a0 : Type') (x0 : a0 -> Prop) (x1 : a0 -> Prop) (x2 : a0) := and ((~ (x0 x2)) \/ (~ (x1 x2))).
Definition term312 (a0 : Type') (a1 : Type') (x0 : type1400 a1) (x1 : a0 -> Prop) (x2 : a0 -> Prop) (x3 : a0 -> a1) (x4 : a0 -> a1) := x0 (@iterate a1 a0 x0 (@GSPEC a0 (fun y0 : a0 => exists y1 : a0, @SETSPEC a0 y0 ((@IN a0 y1 x1) /\ (x2 y1)) y1)) (fun y0 : a0 => @COND a1 (x2 y0) (x3 y0) (x4 y0))).
Definition term138 (a0 : Type') (a1 : Type') (x0 : type1400 a1) (x1 : a0 -> Prop) (x2 : a0 -> Prop) (x3 : a0 -> a1) (x4 : a0 -> a1) := ((@FINITE a0 (@GSPEC a0 (fun y0 : a0 => exists y1 : a0, @SETSPEC a0 y0 ((@IN a0 y1 x1) /\ (x2 y1)) y1))) /\ ((@FINITE a0 (@GSPEC a0 (fun y0 : a0 => exists y1 : a0, @SETSPEC a0 y0 ((@IN a0 y1 x1) /\ (~ (x2 y1))) y1))) /\ (@DISJOINT a0 (@GSPEC a0 (fun y0 : a0 => exists y1 : a0, @SETSPEC a0 y0 ((@IN a0 y1 x1) /\ (x2 y1)) y1)) (@GSPEC a0 (fun y0 : a0 => exists y1 : a0, @SETSPEC a0 y0 ((@IN a0 y1 x1) /\ (~ (x2 y1))) y1))))) -> (x0 (@iterate a1 a0 x0 (@GSPEC a0 (fun y0 : a0 => exists y1 : a0, @SETSPEC a0 y0 ((@IN a0 y1 x1) /\ (x2 y1)) y1)) (fun y0 : a0 => @COND a1 (x2 y0) (x3 y0) (x4 y0))) (@iterate a1 a0 x0 (@GSPEC a0 (fun y0 : a0 => exists y1 : a0, @SETSPEC a0 y0 ((@IN a0 y1 x1) /\ (~ (x2 y1))) y1)) (fun y0 : a0 => @COND a1 (x2 y0) (x3 y0) (x4 y0)))) = (@iterate a1 a0 x0 (@UNION a0 (@GSPEC a0 (fun y0 : a0 => exists y1 : a0, @SETSPEC a0 y0 ((@IN a0 y1 x1) /\ (x2 y1)) y1)) (@GSPEC a0 (fun y0 : a0 => exists y1 : a0, @SETSPEC a0 y0 ((@IN a0 y1 x1) /\ (~ (x2 y1))) y1))) (fun y0 : a0 => @COND a1 (x2 y0) (x3 y0) (x4 y0))).
Definition term289 (a0 : Type') (a1 : Type') (x0 : a0 -> Prop) (x1 : a0 -> Prop) (x2 : a0 -> a1) (x3 : a0 -> a1) (x4 : a0) (x5 : Prop) (x6 : Prop) := (fun y0 : Prop => ((@IN a0 x4 (@GSPEC a0 (fun y1 : a0 => exists y2 : a0, @SETSPEC a0 y1 ((@IN a0 y2 x0) /\ (~ (x1 y2))) y2))) = x5) -> (x5 -> (((fun y1 : a0 => @COND a1 (x1 y1) (x2 y1) (x3 y1)) x4) = (x3 x4)) = y0) -> ((@IN a0 x4 (@GSPEC a0 (fun y1 : a0 => exists y2 : a0, @SETSPEC a0 y1 ((@IN a0 y2 x0) /\ (~ (x1 y2))) y2))) -> ((fun y1 : a0 => @COND a1 (x1 y1) (x2 y1) (x3 y1)) x4) = (x3 x4)) = (x5 -> y0)) x6.
Definition term247 (a0 : Type') (a1 : Type') (x0 : a0 -> Prop) (x1 : a0 -> Prop) (x2 : a0 -> a1) (x3 : a0 -> a1) (x4 : a0) (x5 : Prop) (x6 : Prop) := (fun y0 : Prop => ((@IN a0 x4 (@GSPEC a0 (fun y1 : a0 => exists y2 : a0, @SETSPEC a0 y1 ((@IN a0 y2 x0) /\ (x1 y2)) y2))) = x5) -> (x5 -> (((fun y1 : a0 => @COND a1 (x1 y1) (x3 y1) (x2 y1)) x4) = (x3 x4)) = y0) -> ((@IN a0 x4 (@GSPEC a0 (fun y1 : a0 => exists y2 : a0, @SETSPEC a0 y1 ((@IN a0 y2 x0) /\ (x1 y2)) y2))) -> ((fun y1 : a0 => @COND a1 (x1 y1) (x3 y1) (x2 y1)) x4) = (x3 x4)) = (x5 -> y0)) x6.
Definition term174 (a0 : Type') (x0 : a0 -> Prop) (x1 : a0 -> Prop) (x2 : a0) := ((x0 x2) /\ (x1 x2)) \/ ((x0 x2) /\ (~ (x1 x2))).
Definition term230 (a0 : Type') (a1 : Type') (x0 : a0 -> a1) (x1 : type1400 a1) (x2 : a0 -> Prop) := (fun y0 : a0 -> Prop => forall y1 : a0 -> a1, (forall y2 : a0, (@IN a0 y2 y0) -> (x0 y2) = (y1 y2)) -> (@iterate a1 a0 x1 y0 x0) = (@iterate a1 a0 x1 y0 y1)) x2.
Definition term135 (a0 : Type') (a1 : Type') (x0 : type1400 a1) (x1 : a0 -> a1) (x2 : a0 -> Prop) := (fun y0 : a0 -> Prop => forall y1 : a0 -> Prop, ((@FINITE a0 y0) /\ ((@FINITE a0 y1) /\ (@DISJOINT a0 y0 y1))) -> (x0 (@iterate a1 a0 x0 y0 x1) (@iterate a1 a0 x0 y1 x1)) = (@iterate a1 a0 x0 (@UNION a0 y0 y1) x1)) x2.
Definition term238 (a0 : Type') (a1 : Type') (x0 : a0 -> a1) (x1 : type1400 a1) (x2 : a0 -> Prop) (x3 : a0 -> Prop) (x4 : a0 -> a1) := @eq Prop ((fun y0 : Prop => (forall y1 : a0, (@IN a0 y1 (@GSPEC a0 (fun y2 : a0 => exists y3 : a0, @SETSPEC a0 y2 ((@IN a0 y3 x2) /\ (~ (x3 y3))) y3))) -> ((fun y2 : a0 => @COND a1 (x3 y2) (x0 y2) (x4 y2)) y1) = (x4 y1)) -> y0) ((@iterate a1 a0 x1 (@GSPEC a0 (fun y0 : a0 => exists y1 : a0, @SETSPEC a0 y0 ((@IN a0 y1 x2) /\ (~ (x3 y1))) y1)) (fun y0 : a0 => @COND a1 (x3 y0) (x0 y0) (x4 y0))) = (@iterate a1 a0 x1 (@GSPEC a0 (fun y0 : a0 => exists y1 : a0, @SETSPEC a0 y0 ((@IN a0 y1 x2) /\ (~ (x3 y1))) y1)) x4))).
Definition term234 (a0 : Type') (a1 : Type') (x0 : a0 -> a1) (x1 : type1400 a1) (x2 : a0 -> Prop) (x3 : a0 -> Prop) (x4 : a0 -> a1) := @eq Prop ((fun y0 : Prop => (forall y1 : a0, (@IN a0 y1 (@GSPEC a0 (fun y2 : a0 => exists y3 : a0, @SETSPEC a0 y2 ((@IN a0 y3 x2) /\ (x3 y3)) y3))) -> ((fun y2 : a0 => @COND a1 (x3 y2) (x4 y2) (x0 y2)) y1) = (x4 y1)) -> y0) ((@iterate a1 a0 x1 (@GSPEC a0 (fun y0 : a0 => exists y1 : a0, @SETSPEC a0 y0 ((@IN a0 y1 x2) /\ (x3 y1)) y1)) (fun y0 : a0 => @COND a1 (x3 y0) (x4 y0) (x0 y0))) = (@iterate a1 a0 x1 (@GSPEC a0 (fun y0 : a0 => exists y1 : a0, @SETSPEC a0 y0 ((@IN a0 y1 x2) /\ (x3 y1)) y1)) x4))).
Definition term240 (x0 : Prop) (x1 : Prop) (x2 : Prop) (x3 : Prop) := (x0 = x2) -> (x2 -> x1 = x3) -> (x0 -> x1) = (x2 -> x3).
Definition term75 (a0 : Type') (x0 : a0) (x1 : a0 -> Prop) (x2 : a0 -> Prop) := @IN a0 x0 (@GSPEC a0 (fun y0 : a0 => exists y1 : a0, @SETSPEC a0 y0 ((@IN a0 y1 x1) /\ (~ (x2 y1))) y1)).
Definition term60 (a0 : Type') (x0 : a0) (x1 : a0 -> Prop) (x2 : a0 -> Prop) := @IN a0 x0 (@GSPEC a0 (fun y0 : a0 => exists y1 : a0, @SETSPEC a0 y0 ((fun y2 : a0 => (@IN a0 y2 x1) /\ (~ (x2 y2))) y1) y1)).
Definition term52 (a0 : Type') (x0 : a0) (x1 : a0 -> Prop) (x2 : a0 -> Prop) := @IN a0 x0 (@GSPEC a0 (fun y0 : a0 => exists y1 : a0, @SETSPEC a0 y0 ((@IN a0 y1 x1) /\ (x2 y1)) y1)).
Definition term37 (a0 : Type') (x0 : a0) (x1 : a0 -> Prop) (x2 : a0 -> Prop) := @IN a0 x0 (@GSPEC a0 (fun y0 : a0 => exists y1 : a0, @SETSPEC a0 y0 ((fun y2 : a0 => (@IN a0 y2 x1) /\ (x2 y2)) y1) y1)).
Definition term4 (a0 : Type') (x0 : a0) (x1 : a0 -> Prop) := @IN a0 x0 (@GSPEC a0 (fun y0 : a0 => exists y1 : a0, @SETSPEC a0 y0 (x1 y1) y1)).
Definition term63 (a0 : Type') (x0 : a0 -> Prop) (x1 : a0 -> Prop) (x2 : a0) := (@IN a0 x2 x0) /\ (~ (x1 x2)).
Definition term38 (a0 : Type') (x0 : a0 -> Prop) (x1 : a0 -> Prop) (x2 : a0) := (fun y0 : a0 => (@IN a0 y0 x0) /\ (x1 y0)) x2.
Definition term136 (a0 : Type') (a1 : Type') (x0 : type1400 a1) (x1 : a0 -> Prop) (x2 : a0 -> a1) (x3 : a0 -> Prop) := (fun y0 : a0 -> Prop => ((@FINITE a0 x1) /\ ((@FINITE a0 y0) /\ (@DISJOINT a0 x1 y0))) -> (x0 (@iterate a1 a0 x0 x1 x2) (@iterate a1 a0 x0 y0 x2)) = (@iterate a1 a0 x0 (@UNION a0 x1 y0) x2)) x3.
Definition term119 (a0 : Type') (a1 : Type') (x0 : type1400 a1) (x1 : a0 -> Prop) (x2 : a0 -> a1) := fun y0 : a0 -> Prop => ((@FINITE a0 x1) /\ ((@FINITE a0 y0) /\ (@DISJOINT a0 x1 y0))) -> (x0 (@iterate a1 a0 x0 x1 x2) (@iterate a1 a0 x0 y0 x2)) = (@iterate a1 a0 x0 (@UNION a0 x1 y0) x2).
Definition term118 (a0 : Type') (a1 : Type') (x0 : a0 -> Prop) (x1 : type1400 a1) (x2 : a0 -> a1) := fun y0 : a0 -> Prop => ((@FINITE a0 x0) /\ ((@FINITE a0 y0) /\ (@DISJOINT a0 x0 y0))) -> (@iterate a1 a0 x1 (@UNION a0 x0 y0) x2) = (x1 (@iterate a1 a0 x1 x0 x2) (@iterate a1 a0 x1 y0 x2)).
Definition term159 (a0 : Type') (x0 : a0 -> Prop) (x1 : a0 -> Prop) := (@FINITE a0 (@GSPEC a0 (fun y0 : a0 => exists y1 : a0, @SETSPEC a0 y0 ((@IN a0 y1 x0) /\ (~ (x1 y1))) y1))) /\ (@DISJOINT a0 (@GSPEC a0 (fun y0 : a0 => exists y1 : a0, @SETSPEC a0 y0 ((@IN a0 y1 x0) /\ (x1 y1)) y1)) (@GSPEC a0 (fun y0 : a0 => exists y1 : a0, @SETSPEC a0 y0 ((@IN a0 y1 x0) /\ (~ (x1 y1))) y1))).
Definition term19 (a0 : Type') (x0 : a0) := forall y0 : a0, (exists y1 : a0, (x0 = y1) /\ (y1 = y0)) -> x0 = y0.
Definition term55 (a0 : Type') (x0 : a0) (x1 : a0 -> Prop) := and (@IN a0 x0 x1).
Definition term219 (a0 : Type') (a1 : Type') (x0 : a0 -> a1) (x1 : type1400 a1) (x2 : a0 -> a1) := (fun y0 : a0 -> a1 => forall y1 : a0 -> Prop, (forall y2 : a0, (@IN a0 y2 y1) -> (x0 y2) = (y0 y2)) -> (@iterate a1 a0 x1 y1 x0) = (@iterate a1 a0 x1 y1 y0)) x2.
Definition term77 (a0 : Type') (x0 : a0) (x1 : a0 -> Prop) (x2 : a0 -> Prop) := @eq Prop (@IN a0 x0 (@GSPEC a0 (fun y0 : a0 => exists y1 : a0, @SETSPEC a0 y0 ((@IN a0 y1 x1) /\ (~ (x2 y1))) y1))).
Definition term76 (a0 : Type') (x0 : a0) (x1 : a0 -> Prop) (x2 : a0 -> Prop) := @eq Prop (@IN a0 x0 (@GSPEC a0 (fun y0 : a0 => exists y1 : a0, @SETSPEC a0 y0 ((fun y2 : a0 => (@IN a0 y2 x1) /\ (~ (x2 y2))) y1) y1))).
Definition term54 (a0 : Type') (x0 : a0) (x1 : a0 -> Prop) (x2 : a0 -> Prop) := @eq Prop (@IN a0 x0 (@GSPEC a0 (fun y0 : a0 => exists y1 : a0, @SETSPEC a0 y0 ((@IN a0 y1 x1) /\ (x2 y1)) y1))).
Definition term53 (a0 : Type') (x0 : a0) (x1 : a0 -> Prop) (x2 : a0 -> Prop) := @eq Prop (@IN a0 x0 (@GSPEC a0 (fun y0 : a0 => exists y1 : a0, @SETSPEC a0 y0 ((fun y2 : a0 => (@IN a0 y2 x1) /\ (x2 y2)) y1) y1))).
Definition term170 (a0 : Type') (x0 : a0) (x1 : a0 -> Prop) (x2 : a0 -> Prop) := @IN a0 x0 (@UNION a0 (@GSPEC a0 (fun y0 : a0 => exists y1 : a0, @SETSPEC a0 y0 ((@IN a0 y1 x1) /\ (x2 y1)) y1)) (@GSPEC a0 (fun y0 : a0 => exists y1 : a0, @SETSPEC a0 y0 ((@IN a0 y1 x1) /\ (~ (x2 y1))) y1))).
Definition term23 (a0 : Type') (x0 : a0) (x1 : a0) := (fun y0 : a0 => (exists y1 : a0, (x0 = y1) /\ (y1 = y0)) -> x0 = y0) x1.
Definition term236 (a0 : Type') (a1 : Type') (x0 : a0 -> a1) (x1 : type1400 a1) (x2 : a0 -> Prop) (x3 : a0 -> Prop) (x4 : a0 -> a1) := (forall y0 : a0, (@IN a0 y0 (@GSPEC a0 (fun y1 : a0 => exists y2 : a0, @SETSPEC a0 y1 ((@IN a0 y2 x2) /\ (~ (x3 y2))) y2))) -> ((fun y1 : a0 => @COND a1 (x3 y1) (x0 y1) (x4 y1)) y0) = (x4 y0)) -> (@iterate a1 a0 x1 (@GSPEC a0 (fun y0 : a0 => exists y1 : a0, @SETSPEC a0 y0 ((@IN a0 y1 x2) /\ (~ (x3 y1))) y1)) (fun y0 : a0 => @COND a1 (x3 y0) (x0 y0) (x4 y0))) = (@iterate a1 a0 x1 (@GSPEC a0 (fun y0 : a0 => exists y1 : a0, @SETSPEC a0 y0 ((@IN a0 y1 x2) /\ (~ (x3 y1))) y1)) x4).
Definition term232 (a0 : Type') (a1 : Type') (x0 : a0 -> a1) (x1 : type1400 a1) (x2 : a0 -> Prop) (x3 : a0 -> Prop) (x4 : a0 -> a1) := (forall y0 : a0, (@IN a0 y0 (@GSPEC a0 (fun y1 : a0 => exists y2 : a0, @SETSPEC a0 y1 ((@IN a0 y2 x2) /\ (x3 y2)) y2))) -> ((fun y1 : a0 => @COND a1 (x3 y1) (x4 y1) (x0 y1)) y0) = (x4 y0)) -> (@iterate a1 a0 x1 (@GSPEC a0 (fun y0 : a0 => exists y1 : a0, @SETSPEC a0 y0 ((@IN a0 y1 x2) /\ (x3 y1)) y1)) (fun y0 : a0 => @COND a1 (x3 y0) (x4 y0) (x0 y0))) = (@iterate a1 a0 x1 (@GSPEC a0 (fun y0 : a0 => exists y1 : a0, @SETSPEC a0 y0 ((@IN a0 y1 x2) /\ (x3 y1)) y1)) x4).
Definition term173 (a0 : Type') (x0 : a0 -> Prop) (x1 : a0 -> Prop) (x2 : a0) := or ((x0 x2) /\ (x1 x2)).
Definition term180 (a0 : Type') (x0 : a0 -> Prop) (x1 : a0 -> Prop) := ((~ (forall y0 : a0, (x0 y0) = (((x0 y0) /\ (x1 y0)) \/ ((x0 y0) /\ (~ (x1 y0)))))) -> False) -> (~ (forall y0 : a0, (x0 y0) = (((x0 y0) /\ (x1 y0)) \/ ((x0 y0) /\ (~ (x1 y0)))))) -> False.
Definition term90 (a0 : Type') (x0 : a0 -> Prop) (x1 : a0 -> Prop) := ((~ (forall y0 : a0, ~ (((x0 y0) /\ (x1 y0)) /\ ((x0 y0) /\ (~ (x1 y0)))))) -> False) -> (~ (forall y0 : a0, ~ (((x0 y0) /\ (x1 y0)) /\ ((x0 y0) /\ (~ (x1 y0)))))) -> False.
Definition term59 (a0 : Type') (x0 : a0 -> Prop) (x1 : a0 -> Prop) (x2 : a0) := and ((x0 x2) /\ (x1 x2)).
Definition term287 (a0 : Type') (a1 : Type') (x0 : a0 -> Prop) (x1 : a0 -> Prop) (x2 : a0 -> a1) (x3 : a0 -> a1) (x4 : a0) (x5 : Prop) := (fun y0 : Prop => forall y1 : Prop, ((@IN a0 x4 (@GSPEC a0 (fun y2 : a0 => exists y3 : a0, @SETSPEC a0 y2 ((@IN a0 y3 x0) /\ (~ (x1 y3))) y3))) = y0) -> (y0 -> (((fun y2 : a0 => @COND a1 (x1 y2) (x2 y2) (x3 y2)) x4) = (x3 x4)) = y1) -> ((@IN a0 x4 (@GSPEC a0 (fun y2 : a0 => exists y3 : a0, @SETSPEC a0 y2 ((@IN a0 y3 x0) /\ (~ (x1 y3))) y3))) -> ((fun y2 : a0 => @COND a1 (x1 y2) (x2 y2) (x3 y2)) x4) = (x3 x4)) = (y0 -> y1)) x5.
Definition term245 (a0 : Type') (a1 : Type') (x0 : a0 -> Prop) (x1 : a0 -> Prop) (x2 : a0 -> a1) (x3 : a0 -> a1) (x4 : a0) (x5 : Prop) := (fun y0 : Prop => forall y1 : Prop, ((@IN a0 x4 (@GSPEC a0 (fun y2 : a0 => exists y3 : a0, @SETSPEC a0 y2 ((@IN a0 y3 x0) /\ (x1 y3)) y3))) = y0) -> (y0 -> (((fun y2 : a0 => @COND a1 (x1 y2) (x3 y2) (x2 y2)) x4) = (x3 x4)) = y1) -> ((@IN a0 x4 (@GSPEC a0 (fun y2 : a0 => exists y3 : a0, @SETSPEC a0 y2 ((@IN a0 y3 x0) /\ (x1 y3)) y3))) -> ((fun y2 : a0 => @COND a1 (x1 y2) (x3 y2) (x2 y2)) x4) = (x3 x4)) = (y0 -> y1)) x5.
Definition term107 (a0 : Type') (x0 : a0 -> Prop) (x1 : a0 -> Prop) (x2 : a0) := (((x0 x2) /\ (x1 x2)) /\ ((x0 x2) /\ (~ (x1 x2)))) -> False.
Definition term251 (a0 : Type') (a1 : Type') (x0 : a0 -> a1) (x1 : a0) := (fun y0 : a0 => x0 y0) x1.
Definition term28 (a0 : Type') (x0 : a0 -> Prop) (x1 : a0 -> Prop) := @INTER a0 (@GSPEC a0 (fun y0 : a0 => exists y1 : a0, @SETSPEC a0 y0 ((@IN a0 y1 x0) /\ (x1 y1)) y1)) (@GSPEC a0 (fun y0 : a0 => exists y1 : a0, @SETSPEC a0 y0 ((@IN a0 y1 x0) /\ (~ (x1 y1))) y1)).
Definition term271 (a0 : Type') (a1 : Type') (x0 : a0 -> Prop) (x1 : a0 -> a1) (x2 : a0 -> a1) (x3 : a0) (x4 : a1) := (True -> (x2 x3) = (x2 x3)) -> ((~ True) -> (x1 x3) = x4) -> (@COND a1 (x0 x3) (x2 x3) (x1 x3)) = (@COND a1 True (x2 x3) x4).
Definition term114 (a0 : Type') (a1 : Type') (x0 : a0 -> Prop) (x1 : type1400 a1) (x2 : a0 -> Prop) (x3 : a0 -> a1) := x1 (@iterate a1 a0 x1 x0 x3) (@iterate a1 a0 x1 x2 x3).
Definition term151 (a0 : Type') (x0 : a0 -> Prop) (x1 : a0 -> Prop) := @GSPEC a0 (fun y0 : a0 => exists y1 : a0, @SETSPEC a0 y0 ((@IN a0 y1 x0) /\ ((fun y2 : a0 => ~ (x1 y2)) y1)) y1).
Definition term74 (a0 : Type') (x0 : a0 -> Prop) (x1 : a0 -> Prop) := @GSPEC a0 (fun y0 : a0 => exists y1 : a0, @SETSPEC a0 y0 ((fun y2 : a0 => (@IN a0 y2 x0) /\ (~ (x1 y2))) y1) y1).
Definition term51 (a0 : Type') (x0 : a0 -> Prop) (x1 : a0 -> Prop) := @GSPEC a0 (fun y0 : a0 => exists y1 : a0, @SETSPEC a0 y0 ((fun y2 : a0 => (@IN a0 y2 x0) /\ (x1 y2)) y1) y1).
Definition term30 (a0 : Type') (x0 : a0 -> Prop) (x1 : a0 -> Prop) := @GSPEC a0 (fun y0 : a0 => exists y1 : a0, @SETSPEC a0 y0 ((@IN a0 y1 x0) /\ (~ (x1 y1))) y1).
Definition term29 (a0 : Type') (x0 : a0 -> Prop) (x1 : a0 -> Prop) := @GSPEC a0 (fun y0 : a0 => exists y1 : a0, @SETSPEC a0 y0 ((@IN a0 y1 x0) /\ (x1 y1)) y1).
Definition term85 (a0 : Type') (x0 : a0 -> Prop) (x1 : a0 -> Prop) := fun y0 : a0 => ~ (((x0 y0) /\ (x1 y0)) /\ ((x0 y0) /\ (~ (x1 y0)))).
Definition term185 (a0 : Type') (x0 : a0 -> Prop) := fun y0 : a0 -> Prop => forall y1 : a0, (y0 y1) = (((y0 y1) /\ (x0 y1)) \/ ((y0 y1) /\ (~ (x0 y1)))).
Definition term318 (a0 : Type') (a1 : Type') (x0 : a0 -> a1) (x1 : type1400 a1) (x2 : a0 -> Prop) (x3 : a0 -> Prop) := forall y0 : a0 -> a1, (@FINITE a0 x2) -> (@iterate a1 a0 x1 x2 (fun y1 : a0 => @COND a1 (x3 y1) (x0 y1) (y0 y1))) = (x1 (@iterate a1 a0 x1 (@GSPEC a0 (fun y1 : a0 => exists y2 : a0, @SETSPEC a0 y1 ((@IN a0 y2 x2) /\ (x3 y2)) y2)) x0) (@iterate a1 a0 x1 (@GSPEC a0 (fun y1 : a0 => exists y2 : a0, @SETSPEC a0 y1 ((@IN a0 y2 x2) /\ (~ (x3 y2))) y2)) y0)).
Definition term10 (a0 : Type') (x0 : a0) (x1 : a0) := (fun y0 : a0 => forall y1 : a0, ((x0 = y0) /\ (y0 = y1)) -> x0 = y1) x1.
Definition term16 (a0 : Type') (x0 : a0) (x1 : a0) := exists y0 : a0, (x0 = y0) /\ (y0 = x1).
Definition term303 (a0 : Type') (a1 : Type') (x0 : a0 -> a1) (x1 : a0 -> a1) (x2 : a0 -> Prop) (x3 : a0 -> Prop) (x4 : a0) := (((@IN a0 x4 x2) /\ (~ (x3 x4))) -> (((fun y0 : a0 => @COND a1 (x3 y0) (x0 y0) (x1 y0)) x4) = (x1 x4)) = True) -> ((@IN a0 x4 (@GSPEC a0 (fun y0 : a0 => exists y1 : a0, @SETSPEC a0 y0 ((@IN a0 y1 x2) /\ (~ (x3 y1))) y1))) -> ((fun y0 : a0 => @COND a1 (x3 y0) (x0 y0) (x1 y0)) x4) = (x1 x4)) = (((@IN a0 x4 x2) /\ (~ (x3 x4))) -> True).
Definition term278 (a0 : Type') (a1 : Type') (x0 : a0 -> a1) (x1 : a0 -> a1) (x2 : a0 -> Prop) (x3 : a0 -> Prop) (x4 : a0) := (((@IN a0 x4 x2) /\ (x3 x4)) -> (((fun y0 : a0 => @COND a1 (x3 y0) (x1 y0) (x0 y0)) x4) = (x1 x4)) = True) -> ((@IN a0 x4 (@GSPEC a0 (fun y0 : a0 => exists y1 : a0, @SETSPEC a0 y0 ((@IN a0 y1 x2) /\ (x3 y1)) y1))) -> ((fun y0 : a0 => @COND a1 (x3 y0) (x1 y0) (x0 y0)) x4) = (x1 x4)) = (((@IN a0 x4 x2) /\ (x3 x4)) -> True).
Definition term67 (a0 : Type') (x0 : a0) (x1 : a0 -> Prop) (x2 : a0 -> Prop) (x3 : a0) := @SETSPEC a0 x0 ((@IN a0 x3 x1) /\ (~ (x2 x3))) x3.
Definition term208 (a0 : Type') (x0 : a0 -> Prop) (x1 : a0 -> Prop) (x2 : a0) := (x0 x2) /\ (((~ (x0 x2)) \/ (~ (x1 x2))) /\ ((~ (x0 x2)) \/ (x1 x2))).
Definition term300 (a0 : Type') (a1 : Type') (x0 : a0 -> Prop) (x1 : a0 -> a1) (x2 : a0 -> a1) (x3 : a0) := ((~ False) -> (x2 x3) = (x2 x3)) -> (@COND a1 (x0 x3) (x1 x3) (x2 x3)) = (@COND a1 False (x1 x3) (x2 x3)).
Definition term274 (a0 : Type') (a1 : Type') (x0 : a0 -> Prop) (x1 : a0 -> a1) (x2 : a0 -> a1) (x3 : a0) := ((~ True) -> (x2 x3) = (x2 x3)) -> (@COND a1 (x0 x3) (x1 x3) (x2 x3)) = (@COND a1 True (x1 x3) (x2 x3)).
Definition term190 (a0 : Type') := forall y0 : a0 -> Prop, forall y1 : a0 -> Prop, (~ (forall y2 : a0, (y1 y2) = (((y1 y2) /\ (y0 y2)) \/ ((y1 y2) /\ (~ (y0 y2)))))) -> False.
Definition term101 (a0 : Type') := forall y0 : a0 -> Prop, forall y1 : a0 -> Prop, (~ (forall y2 : a0, ~ (((y1 y2) /\ (y0 y2)) /\ ((y1 y2) /\ (~ (y0 y2)))))) -> False.
Definition term224 (a0 : Type') (a1 : Type') (x0 : a0 -> a1) (x1 : type1400 a1) (x2 : a0 -> Prop) (x3 : a0 -> a1) := (forall y0 : a0 -> a1, forall y1 : a0 -> a1, forall y2 : a0 -> Prop, (forall y3 : a0, (@IN a0 y3 y2) -> (y0 y3) = (y1 y3)) -> (@iterate a1 a0 x1 y2 y0) = (@iterate a1 a0 x1 y2 y1)) -> (@iterate a1 a0 x1 x2 x0) = (@iterate a1 a0 x1 x2 x3).
Definition term269 (a0 : Type') (a1 : Type') (x0 : a0 -> Prop) (x1 : a0 -> a1) (x2 : a0 -> a1) (x3 : a0) (x4 : a1) (x5 : a1) := (True -> (x1 x3) = x4) -> ((~ True) -> (x2 x3) = x5) -> (@COND a1 (x0 x3) (x1 x3) (x2 x3)) = (@COND a1 True x4 x5).
Definition term282 (a0 : Type') := fun y0 : a0 => True.
Definition term86 (a0 : Type') (x0 : a0 -> Prop) (x1 : a0 -> Prop) := forall y0 : a0, ~ (((x0 y0) /\ (x1 y0)) /\ ((x0 y0) /\ (~ (x1 y0)))).
Definition term198 (a0 : Type') (x0 : a0 -> Prop) (x1 : a0 -> Prop) (x2 : a0) := (~ (x0 x2)) \/ (~ (~ (x1 x2))).
Definition term24 (a0 : Type') (a1 : Type') (x0 : a0 -> a1) (x1 : type1400 a1) (x2 : a0 -> Prop) (x3 : a0 -> Prop) (x4 : a0 -> a1) := (exists y0 : a1, ((@iterate a1 a0 x1 x2 (fun y1 : a0 => @COND a1 (x3 y1) (x0 y1) (x4 y1))) = y0) /\ (y0 = (x1 (@iterate a1 a0 x1 (@GSPEC a0 (fun y1 : a0 => exists y2 : a0, @SETSPEC a0 y1 ((@IN a0 y2 x2) /\ (x3 y2)) y2)) x0) (@iterate a1 a0 x1 (@GSPEC a0 (fun y1 : a0 => exists y2 : a0, @SETSPEC a0 y1 ((@IN a0 y2 x2) /\ (~ (x3 y2))) y2)) x4)))) -> (@iterate a1 a0 x1 x2 (fun y0 : a0 => @COND a1 (x3 y0) (x0 y0) (x4 y0))) = (x1 (@iterate a1 a0 x1 (@GSPEC a0 (fun y0 : a0 => exists y1 : a0, @SETSPEC a0 y0 ((@IN a0 y1 x2) /\ (x3 y1)) y1)) x0) (@iterate a1 a0 x1 (@GSPEC a0 (fun y0 : a0 => exists y1 : a0, @SETSPEC a0 y0 ((@IN a0 y1 x2) /\ (~ (x3 y1))) y1)) x4)).
Definition term81 (a0 : Type') (x0 : a0) (x1 : a0 -> Prop) (x2 : a0 -> Prop) := @eq Prop (@IN a0 x0 (@INTER a0 (@GSPEC a0 (fun y0 : a0 => exists y1 : a0, @SETSPEC a0 y0 ((@IN a0 y1 x1) /\ (x2 y1)) y1)) (@GSPEC a0 (fun y0 : a0 => exists y1 : a0, @SETSPEC a0 y0 ((@IN a0 y1 x1) /\ (~ (x2 y1))) y1)))).
Definition term18 (a0 : Type') (x0 : a0) (x1 : a0) := (exists y0 : a0, (x0 = y0) /\ (y0 = x1)) -> x0 = x1.
Definition term56 (a0 : Type') (x0 : a0 -> Prop) (x1 : a0) := and (x0 x1).
Definition term193 (a0 : Type') (x0 : a0 -> Prop) (x1 : a0 -> Prop) (x2 : a0) := ~ ((x0 x2) = (((x0 x2) /\ (x1 x2)) \/ ((x0 x2) /\ (~ (x1 x2))))).
Definition term68 (a0 : Type') (x0 : a0) (x1 : a0 -> Prop) (x2 : a0 -> Prop) := fun y0 : a0 => @SETSPEC a0 x0 ((fun y1 : a0 => (@IN a0 y1 x1) /\ (~ (x2 y1))) y0) y0.
Definition term45 (a0 : Type') (x0 : a0) (x1 : a0 -> Prop) (x2 : a0 -> Prop) := fun y0 : a0 => @SETSPEC a0 x0 ((fun y1 : a0 => (@IN a0 y1 x1) /\ (x2 y1)) y0) y0.
Definition term200 (a0 : Type') (x0 : a0 -> Prop) (x1 : a0 -> Prop) (x2 : a0) := ~ ((x0 x2) /\ (~ (x1 x2))).
Definition term266 (a0 : Type') (a1 : Type') (x0 : a0 -> Prop) (x1 : a0 -> a1) (x2 : a0 -> a1) (x3 : a0) (x4 : Prop) (x5 : a1) (x6 : a1) := (fun y0 : a1 => ((x0 x3) = x4) -> (x4 -> (x1 x3) = x5) -> ((~ x4) -> (x2 x3) = y0) -> (@COND a1 (x0 x3) (x1 x3) (x2 x3)) = (@COND a1 x4 x5 y0)) x6.
Definition term149 (a0 : Type') (x0 : a0) (x1 : a0 -> Prop) (x2 : a0 -> Prop) := exists y0 : a0, @SETSPEC a0 x0 ((@IN a0 y0 x1) /\ ((fun y1 : a0 => ~ (x2 y1)) y0)) y0.
Definition term71 (a0 : Type') (x0 : a0) (x1 : a0 -> Prop) (x2 : a0 -> Prop) := exists y0 : a0, @SETSPEC a0 x0 ((@IN a0 y0 x1) /\ (~ (x2 y0))) y0.
Definition term48 (a0 : Type') (x0 : a0) (x1 : a0 -> Prop) (x2 : a0 -> Prop) := exists y0 : a0, @SETSPEC a0 x0 ((@IN a0 y0 x1) /\ (x2 y0)) y0.
Definition term116 (a0 : Type') (a1 : Type') (x0 : a0 -> Prop) (x1 : type1400 a1) (x2 : a0 -> Prop) (x3 : a0 -> a1) := ((@FINITE a0 x0) /\ ((@FINITE a0 x2) /\ (@DISJOINT a0 x0 x2))) -> (@iterate a1 a0 x1 (@UNION a0 x0 x2) x3) = (x1 (@iterate a1 a0 x1 x0 x3) (@iterate a1 a0 x1 x2 x3)).
Definition term301 (a0 : Type') (a1 : Type') (x0 : a0 -> a1) (x1 : a0 -> a1) (x2 : a0) := @COND a1 False (x0 x2) (x1 x2).
Definition term7 (a0 : Type') := forall y0 : a0, forall y1 : a0, forall y2 : a0, ((y0 = y1) /\ (y1 = y2)) -> y0 = y2.
Definition term293 (a0 : Type') (x0 : a0 -> Prop) (x1 : a0) := (~ (x0 x1)) -> (x0 x1) = False.
Definition term237 (a0 : Type') (a1 : Type') (x0 : a0 -> a1) (x1 : type1400 a1) (x2 : a0 -> Prop) (x3 : a0 -> Prop) (x4 : a0 -> a1) := (fun y0 : Prop => (forall y1 : a0, (@IN a0 y1 (@GSPEC a0 (fun y2 : a0 => exists y3 : a0, @SETSPEC a0 y2 ((@IN a0 y3 x2) /\ (~ (x3 y3))) y3))) -> ((fun y2 : a0 => @COND a1 (x3 y2) (x0 y2) (x4 y2)) y1) = (x4 y1)) -> y0) ((@iterate a1 a0 x1 (@GSPEC a0 (fun y0 : a0 => exists y1 : a0, @SETSPEC a0 y0 ((@IN a0 y1 x2) /\ (~ (x3 y1))) y1)) (fun y0 : a0 => @COND a1 (x3 y0) (x0 y0) (x4 y0))) = (@iterate a1 a0 x1 (@GSPEC a0 (fun y0 : a0 => exists y1 : a0, @SETSPEC a0 y0 ((@IN a0 y1 x2) /\ (~ (x3 y1))) y1)) x4)).
Definition term233 (a0 : Type') (a1 : Type') (x0 : a0 -> a1) (x1 : type1400 a1) (x2 : a0 -> Prop) (x3 : a0 -> Prop) (x4 : a0 -> a1) := (fun y0 : Prop => (forall y1 : a0, (@IN a0 y1 (@GSPEC a0 (fun y2 : a0 => exists y3 : a0, @SETSPEC a0 y2 ((@IN a0 y3 x2) /\ (x3 y3)) y3))) -> ((fun y2 : a0 => @COND a1 (x3 y2) (x4 y2) (x0 y2)) y1) = (x4 y1)) -> y0) ((@iterate a1 a0 x1 (@GSPEC a0 (fun y0 : a0 => exists y1 : a0, @SETSPEC a0 y0 ((@IN a0 y1 x2) /\ (x3 y1)) y1)) (fun y0 : a0 => @COND a1 (x3 y0) (x4 y0) (x0 y0))) = (@iterate a1 a0 x1 (@GSPEC a0 (fun y0 : a0 => exists y1 : a0, @SETSPEC a0 y0 ((@IN a0 y1 x2) /\ (x3 y1)) y1)) x4)).
Definition term89 (a0 : Type') (x0 : a0 -> Prop) (x1 : a0 -> Prop) := ~ (forall y0 : a0, ~ (((x0 y0) /\ (x1 y0)) /\ ((x0 y0) /\ (~ (x1 y0))))).
Definition term26 (a0 : Type') (a1 : Type') (x0 : a0 -> a1) (x1 : type1400 a1) (x2 : a0 -> Prop) (x3 : a0 -> Prop) (x4 : a0 -> a1) := x1 (@iterate a1 a0 x1 (@GSPEC a0 (fun y0 : a0 => exists y1 : a0, @SETSPEC a0 y0 ((@IN a0 y1 x2) /\ (x3 y1)) y1)) x0) (@iterate a1 a0 x1 (@GSPEC a0 (fun y0 : a0 => exists y1 : a0, @SETSPEC a0 y0 ((@IN a0 y1 x2) /\ (~ (x3 y1))) y1)) x4).
Definition term82 (a0 : Type') (x0 : a0 -> Prop) (x1 : a0 -> Prop) (x2 : a0) := @eq Prop (((x0 x2) /\ (x1 x2)) /\ ((x0 x2) /\ (~ (x1 x2)))).
Definition term176 (a0 : Type') (x0 : a0 -> Prop) (x1 : a0 -> Prop) := fun y0 : a0 => (x0 y0) = (((x0 y0) /\ (x1 y0)) \/ ((x0 y0) /\ (~ (x1 y0)))).
Definition term129 (a0 : Type') (x0 : a0 -> Prop) := (fun y0 : a0 -> Prop => forall y1 : a0 -> Prop, (@FINITE a0 y0) -> @FINITE a0 (@GSPEC a0 (fun y2 : a0 => exists y3 : a0, @SETSPEC a0 y2 ((@IN a0 y3 y0) /\ (y1 y3)) y3))) x0.
Definition term171 (a0 : Type') (x0 : a0) (x1 : a0 -> Prop) (x2 : a0 -> Prop) := (@IN a0 x0 (@GSPEC a0 (fun y0 : a0 => exists y1 : a0, @SETSPEC a0 y0 ((@IN a0 y1 x1) /\ (x2 y1)) y1))) \/ (@IN a0 x0 (@GSPEC a0 (fun y0 : a0 => exists y1 : a0, @SETSPEC a0 y0 ((@IN a0 y1 x1) /\ (~ (x2 y1))) y1))).
Definition term163 (a0 : Type') (a1 : Type') (x0 : type1400 a1) (x1 : a0 -> Prop) (x2 : a0 -> Prop) (x3 : a0 -> a1) (x4 : a0 -> a1) := @eq a1 (@iterate a1 a0 x0 x1 (fun y0 : a0 => @COND a1 (x2 y0) (x3 y0) (x4 y0))).
Definition term183 (a0 : Type') (x0 : a0 -> Prop) (x1 : a0 -> Prop) := ~ (~ (forall y0 : a0, (x0 y0) = (((x0 y0) /\ (x1 y0)) \/ ((x0 y0) /\ (~ (x1 y0)))))).
Definition term93 (a0 : Type') (x0 : a0 -> Prop) (x1 : a0 -> Prop) := ~ (~ (forall y0 : a0, ~ (((x0 y0) /\ (x1 y0)) /\ ((x0 y0) /\ (~ (x1 y0)))))).
Definition term314 (a0 : Type') (a1 : Type') (x0 : a0 -> a1) (x1 : type1400 a1) (x2 : a0 -> Prop) (x3 : a0 -> Prop) (x4 : a0 -> a1) := ((@iterate a1 a0 x1 x2 (fun y0 : a0 => @COND a1 (x3 y0) (x0 y0) (x4 y0))) = (x1 (@iterate a1 a0 x1 (@GSPEC a0 (fun y0 : a0 => exists y1 : a0, @SETSPEC a0 y0 ((@IN a0 y1 x2) /\ (x3 y1)) y1)) (fun y0 : a0 => @COND a1 (x3 y0) (x0 y0) (x4 y0))) (@iterate a1 a0 x1 (@GSPEC a0 (fun y0 : a0 => exists y1 : a0, @SETSPEC a0 y0 ((@IN a0 y1 x2) /\ (~ (x3 y1))) y1)) (fun y0 : a0 => @COND a1 (x3 y0) (x0 y0) (x4 y0))))) /\ ((x1 (@iterate a1 a0 x1 (@GSPEC a0 (fun y0 : a0 => exists y1 : a0, @SETSPEC a0 y0 ((@IN a0 y1 x2) /\ (x3 y1)) y1)) (fun y0 : a0 => @COND a1 (x3 y0) (x0 y0) (x4 y0))) (@iterate a1 a0 x1 (@GSPEC a0 (fun y0 : a0 => exists y1 : a0, @SETSPEC a0 y0 ((@IN a0 y1 x2) /\ (~ (x3 y1))) y1)) (fun y0 : a0 => @COND a1 (x3 y0) (x0 y0) (x4 y0)))) = (x1 (@iterate a1 a0 x1 (@GSPEC a0 (fun y0 : a0 => exists y1 : a0, @SETSPEC a0 y0 ((@IN a0 y1 x2) /\ (x3 y1)) y1)) x0) (@iterate a1 a0 x1 (@GSPEC a0 (fun y0 : a0 => exists y1 : a0, @SETSPEC a0 y0 ((@IN a0 y1 x2) /\ (~ (x3 y1))) y1)) x4))).
Definition term178 (a0 : Type') (x0 : a0 -> Prop) (x1 : a0 -> Prop) := (~ (forall y0 : a0, (x0 y0) = (((x0 y0) /\ (x1 y0)) \/ ((x0 y0) /\ (~ (x1 y0)))))) -> False.
Definition term88 (a0 : Type') (x0 : a0 -> Prop) (x1 : a0 -> Prop) := (~ (forall y0 : a0, ~ (((x0 y0) /\ (x1 y0)) /\ ((x0 y0) /\ (~ (x1 y0)))))) -> False.
Definition term211 (a0 : Type') (x0 : a0 -> Prop) (x1 : a0 -> Prop) (x2 : a0) := ((x0 x2) /\ (~ (((x0 x2) /\ (x1 x2)) \/ ((x0 x2) /\ (~ (x1 x2)))))) \/ ((~ (x0 x2)) /\ (((x0 x2) /\ (x1 x2)) \/ ((x0 x2) /\ (~ (x1 x2))))).
Definition term288 (a0 : Type') (a1 : Type') (x0 : a0 -> Prop) (x1 : a0 -> Prop) (x2 : a0 -> a1) (x3 : a0 -> a1) (x4 : a0) (x5 : Prop) := forall y0 : Prop, ((@IN a0 x4 (@GSPEC a0 (fun y1 : a0 => exists y2 : a0, @SETSPEC a0 y1 ((@IN a0 y2 x0) /\ (~ (x1 y2))) y2))) = x5) -> (x5 -> (((fun y1 : a0 => @COND a1 (x1 y1) (x2 y1) (x3 y1)) x4) = (x3 x4)) = y0) -> ((@IN a0 x4 (@GSPEC a0 (fun y1 : a0 => exists y2 : a0, @SETSPEC a0 y1 ((@IN a0 y2 x0) /\ (~ (x1 y2))) y2))) -> ((fun y1 : a0 => @COND a1 (x1 y1) (x2 y1) (x3 y1)) x4) = (x3 x4)) = (x5 -> y0).
Definition term246 (a0 : Type') (a1 : Type') (x0 : a0 -> Prop) (x1 : a0 -> Prop) (x2 : a0 -> a1) (x3 : a0 -> a1) (x4 : a0) (x5 : Prop) := forall y0 : Prop, ((@IN a0 x4 (@GSPEC a0 (fun y1 : a0 => exists y2 : a0, @SETSPEC a0 y1 ((@IN a0 y2 x0) /\ (x1 y2)) y2))) = x5) -> (x5 -> (((fun y1 : a0 => @COND a1 (x1 y1) (x3 y1) (x2 y1)) x4) = (x3 x4)) = y0) -> ((@IN a0 x4 (@GSPEC a0 (fun y1 : a0 => exists y2 : a0, @SETSPEC a0 y1 ((@IN a0 y2 x0) /\ (x1 y2)) y2))) -> ((fun y1 : a0 => @COND a1 (x1 y1) (x3 y1) (x2 y1)) x4) = (x3 x4)) = (x5 -> y0).
Definition term241 (x0 : Prop) (x1 : Prop) (x2 : Prop) := forall y0 : Prop, (x0 = x2) -> (x2 -> x1 = y0) -> (x0 -> x1) = (x2 -> y0).
Definition term214 (a0 : Type') (x0 : a0 -> Prop) (x1 : a0 -> Prop) := (fun y0 : a0 -> Prop => (~ (forall y1 : a0, (y0 y1) = (((y0 y1) /\ (x0 y1)) \/ ((y0 y1) /\ (~ (x0 y1)))))) -> False) x1.
Definition term109 (a0 : Type') (x0 : a0 -> Prop) (x1 : a0 -> Prop) := (fun y0 : a0 -> Prop => (~ (forall y1 : a0, ~ (((y0 y1) /\ (x0 y1)) /\ ((y0 y1) /\ (~ (x0 y1)))))) -> False) x1.
Definition term83 (a0 : Type') (x0 : a0 -> Prop) (x1 : a0 -> Prop) (x2 : a0) := ~ (((x0 x2) /\ (x1 x2)) /\ ((x0 x2) /\ (~ (x1 x2)))).
Definition term165 (a0 : Type') (x0 : a0 -> Prop) (x1 : a0 -> Prop) := forall y0 : a0, (@IN a0 y0 x0) = (@IN a0 y0 (@UNION a0 (@GSPEC a0 (fun y1 : a0 => exists y2 : a0, @SETSPEC a0 y1 ((@IN a0 y2 x0) /\ (x1 y2)) y2)) (@GSPEC a0 (fun y1 : a0 => exists y2 : a0, @SETSPEC a0 y1 ((@IN a0 y2 x0) /\ (~ (x1 y2))) y2)))).
Definition term137 (a0 : Type') (x0 : a0 -> Prop) (x1 : a0 -> Prop) := (@FINITE a0 x0) /\ ((@FINITE a0 x1) /\ (@DISJOINT a0 x0 x1)).
Definition term117 (a0 : Type') (a1 : Type') (x0 : type1400 a1) (x1 : a0 -> Prop) (x2 : a0 -> Prop) (x3 : a0 -> a1) := ((@FINITE a0 x1) /\ ((@FINITE a0 x2) /\ (@DISJOINT a0 x1 x2))) -> (x0 (@iterate a1 a0 x0 x1 x3) (@iterate a1 a0 x0 x2 x3)) = (@iterate a1 a0 x0 (@UNION a0 x1 x2) x3).
Definition term15 (a0 : Type') (x0 : a0) (x1 : a0) := (forall y0 : a0, forall y1 : a0, forall y2 : a0, ((y0 = y1) /\ (y1 = y2)) -> y0 = y2) -> x0 = x1.
Definition term36 (a0 : Type') (x0 : a0) (x1 : a0 -> Prop) (x2 : a0 -> Prop) := (@IN a0 x0 (@GSPEC a0 (fun y0 : a0 => exists y1 : a0, @SETSPEC a0 y0 ((@IN a0 y1 x1) /\ (x2 y1)) y1))) /\ (@IN a0 x0 (@GSPEC a0 (fun y0 : a0 => exists y1 : a0, @SETSPEC a0 y0 ((@IN a0 y1 x1) /\ (~ (x2 y1))) y1))).
Definition term40 (a0 : Type') (x0 : a0 -> Prop) (x1 : a0 -> Prop) (x2 : a0) := (@IN a0 x2 x0) /\ (x1 x2).
Definition term315 (a0 : Type') (a1 : Type') (x0 : a0 -> a1) (x1 : type1400 a1) (x2 : a0 -> Prop) (x3 : a0 -> Prop) (x4 : a0 -> a1) := exists y0 : a1, ((@iterate a1 a0 x1 x2 (fun y1 : a0 => @COND a1 (x3 y1) (x0 y1) (x4 y1))) = y0) /\ (y0 = (x1 (@iterate a1 a0 x1 (@GSPEC a0 (fun y1 : a0 => exists y2 : a0, @SETSPEC a0 y1 ((@IN a0 y2 x2) /\ (x3 y2)) y2)) x0) (@iterate a1 a0 x1 (@GSPEC a0 (fun y1 : a0 => exists y2 : a0, @SETSPEC a0 y1 ((@IN a0 y2 x2) /\ (~ (x3 y2))) y2)) x4))).
Definition term254 (a0 : Type') (a1 : Type') (x0 : a0 -> Prop) (x1 : a0 -> a1) (x2 : a0 -> a1) := fun y0 : a0 => (fun y1 : a0 => @COND a1 (x0 y1) (x1 y1) (x2 y1)) y0.
Definition term181 (a0 : Type') (x0 : a0 -> Prop) (x1 : a0 -> Prop) := (((~ (forall y0 : a0, (x0 y0) = (((x0 y0) /\ (x1 y0)) \/ ((x0 y0) /\ (~ (x1 y0)))))) -> False) -> (~ (forall y0 : a0, (x0 y0) = (((x0 y0) /\ (x1 y0)) \/ ((x0 y0) /\ (~ (x1 y0)))))) -> False) -> (~ (forall y0 : a0, (x0 y0) = (((x0 y0) /\ (x1 y0)) \/ ((x0 y0) /\ (~ (x1 y0)))))) -> False.
Definition term91 (a0 : Type') (x0 : a0 -> Prop) (x1 : a0 -> Prop) := (((~ (forall y0 : a0, ~ (((x0 y0) /\ (x1 y0)) /\ ((x0 y0) /\ (~ (x1 y0)))))) -> False) -> (~ (forall y0 : a0, ~ (((x0 y0) /\ (x1 y0)) /\ ((x0 y0) /\ (~ (x1 y0)))))) -> False) -> (~ (forall y0 : a0, ~ (((x0 y0) /\ (x1 y0)) /\ ((x0 y0) /\ (~ (x1 y0)))))) -> False.
Definition term186 (a0 : Type') (x0 : a0 -> Prop) := forall y0 : a0 -> Prop, (~ (forall y1 : a0, (y0 y1) = (((y0 y1) /\ (x0 y1)) \/ ((y0 y1) /\ (~ (x0 y1)))))) -> False.
Definition term97 (a0 : Type') (x0 : a0 -> Prop) := forall y0 : a0 -> Prop, (~ (forall y1 : a0, ~ (((y0 y1) /\ (x0 y1)) /\ ((y0 y1) /\ (~ (x0 y1)))))) -> False.
Definition term150 (a0 : Type') (x0 : a0 -> Prop) (x1 : a0 -> Prop) := fun y0 : a0 => exists y1 : a0, @SETSPEC a0 y0 ((@IN a0 y1 x0) /\ ((fun y2 : a0 => ~ (x1 y2)) y1)) y1.
Definition term73 (a0 : Type') (x0 : a0 -> Prop) (x1 : a0 -> Prop) := fun y0 : a0 => exists y1 : a0, @SETSPEC a0 y0 ((@IN a0 y1 x0) /\ (~ (x1 y1))) y1.
Definition term50 (a0 : Type') (x0 : a0 -> Prop) (x1 : a0 -> Prop) := fun y0 : a0 => exists y1 : a0, @SETSPEC a0 y0 ((@IN a0 y1 x0) /\ (x1 y1)) y1.
Definition term286 (a0 : Type') (a1 : Type') (x0 : a0 -> Prop) (x1 : a0 -> Prop) (x2 : a0 -> a1) (x3 : a0 -> a1) (x4 : a0) := forall y0 : Prop, forall y1 : Prop, ((@IN a0 x4 (@GSPEC a0 (fun y2 : a0 => exists y3 : a0, @SETSPEC a0 y2 ((@IN a0 y3 x0) /\ (~ (x1 y3))) y3))) = y0) -> (y0 -> (((fun y2 : a0 => @COND a1 (x1 y2) (x2 y2) (x3 y2)) x4) = (x3 x4)) = y1) -> ((@IN a0 x4 (@GSPEC a0 (fun y2 : a0 => exists y3 : a0, @SETSPEC a0 y2 ((@IN a0 y3 x0) /\ (~ (x1 y3))) y3))) -> ((fun y2 : a0 => @COND a1 (x1 y2) (x2 y2) (x3 y2)) x4) = (x3 x4)) = (y0 -> y1).
Definition term261 (a0 : Type') (a1 : Type') (x0 : a0 -> Prop) (x1 : a0 -> a1) (x2 : a0 -> a1) (x3 : a0) := forall y0 : Prop, forall y1 : a1, forall y2 : a1, ((x0 x3) = y0) -> (y0 -> (x1 x3) = y1) -> ((~ y0) -> (x2 x3) = y2) -> (@COND a1 (x0 x3) (x1 x3) (x2 x3)) = (@COND a1 y0 y1 y2).
Definition term260 (a0 : Type') (x0 : Prop) (x1 : a0) (x2 : a0) := forall y0 : Prop, forall y1 : a0, forall y2 : a0, (x0 = y0) -> (y0 -> x1 = y1) -> ((~ y0) -> x2 = y2) -> (@COND a0 x0 x1 x2) = (@COND a0 y0 y1 y2).
Definition term243 (a0 : Type') (a1 : Type') (x0 : a0 -> Prop) (x1 : a0 -> Prop) (x2 : a0 -> a1) (x3 : a0 -> a1) (x4 : a0) := forall y0 : Prop, forall y1 : Prop, ((@IN a0 x4 (@GSPEC a0 (fun y2 : a0 => exists y3 : a0, @SETSPEC a0 y2 ((@IN a0 y3 x0) /\ (x1 y3)) y3))) = y0) -> (y0 -> (((fun y2 : a0 => @COND a1 (x1 y2) (x3 y2) (x2 y2)) x4) = (x3 x4)) = y1) -> ((@IN a0 x4 (@GSPEC a0 (fun y2 : a0 => exists y3 : a0, @SETSPEC a0 y2 ((@IN a0 y3 x0) /\ (x1 y3)) y3))) -> ((fun y2 : a0 => @COND a1 (x1 y2) (x3 y2) (x2 y2)) x4) = (x3 x4)) = (y0 -> y1).
Definition term242 (x0 : Prop) (x1 : Prop) := forall y0 : Prop, forall y1 : Prop, (x0 = y0) -> (y0 -> x1 = y1) -> (x0 -> x1) = (y0 -> y1).
Definition term229 (a0 : Type') (a1 : Type') (x0 : type1400 a1) (x1 : a0 -> a1) := (fun y0 : a0 -> a1 => forall y1 : a0 -> Prop, forall y2 : a0 -> a1, (forall y3 : a0, (@IN a0 y3 y1) -> (y0 y3) = (y2 y3)) -> (@iterate a1 a0 x0 y1 y0) = (@iterate a1 a0 x0 y1 y2)) x1.
Definition term217 (a0 : Type') (a1 : Type') (x0 : type1400 a1) (x1 : a0 -> a1) := (fun y0 : a0 -> a1 => forall y1 : a0 -> a1, forall y2 : a0 -> Prop, (forall y3 : a0, (@IN a0 y3 y2) -> (y0 y3) = (y1 y3)) -> (@iterate a1 a0 x0 y2 y0) = (@iterate a1 a0 x0 y2 y1)) x1.
Definition term134 (a0 : Type') (a1 : Type') (x0 : type1400 a1) (x1 : a0 -> a1) := (fun y0 : a0 -> a1 => forall y1 : a0 -> Prop, forall y2 : a0 -> Prop, ((@FINITE a0 y1) /\ ((@FINITE a0 y2) /\ (@DISJOINT a0 y1 y2))) -> (x0 (@iterate a1 a0 x0 y1 y0) (@iterate a1 a0 x0 y2 y0)) = (@iterate a1 a0 x0 (@UNION a0 y1 y2) y0)) x1.
Definition term319 (a0 : Type') (a1 : Type') (x0 : type1400 a1) (x1 : a0 -> Prop) (x2 : a0 -> Prop) := forall y0 : a0 -> a1, forall y1 : a0 -> a1, (@FINITE a0 x1) -> (@iterate a1 a0 x0 x1 (fun y2 : a0 => @COND a1 (x2 y2) (y0 y2) (y1 y2))) = (x0 (@iterate a1 a0 x0 (@GSPEC a0 (fun y2 : a0 => exists y3 : a0, @SETSPEC a0 y2 ((@IN a0 y3 x1) /\ (x2 y3)) y3)) y0) (@iterate a1 a0 x0 (@GSPEC a0 (fun y2 : a0 => exists y3 : a0, @SETSPEC a0 y2 ((@IN a0 y3 x1) /\ (~ (x2 y3))) y3)) y1)).
Definition term226 (a0 : Type') (a1 : Type') (x0 : a0 -> a1) (x1 : type1400 a1) := forall y0 : a0 -> Prop, forall y1 : a0 -> a1, (forall y2 : a0, (@IN a0 y2 y0) -> (x0 y2) = (y1 y2)) -> (@iterate a1 a0 x1 y0 x0) = (@iterate a1 a0 x1 y0 y1).
Definition term218 (a0 : Type') (a1 : Type') (x0 : a0 -> a1) (x1 : type1400 a1) := forall y0 : a0 -> a1, forall y1 : a0 -> Prop, (forall y2 : a0, (@IN a0 y2 y1) -> (x0 y2) = (y0 y2)) -> (@iterate a1 a0 x1 y1 x0) = (@iterate a1 a0 x1 y1 y0).
Definition term125 (a0 : Type') (a1 : Type') (x0 : type1400 a1) (x1 : a0 -> a1) := forall y0 : a0 -> Prop, forall y1 : a0 -> Prop, ((@FINITE a0 y0) /\ ((@FINITE a0 y1) /\ (@DISJOINT a0 y0 y1))) -> (x0 (@iterate a1 a0 x0 y0 x1) (@iterate a1 a0 x0 y1 x1)) = (@iterate a1 a0 x0 (@UNION a0 y0 y1) x1).
Definition term124 (a0 : Type') (a1 : Type') (x0 : type1400 a1) (x1 : a0 -> a1) := forall y0 : a0 -> Prop, forall y1 : a0 -> Prop, ((@FINITE a0 y0) /\ ((@FINITE a0 y1) /\ (@DISJOINT a0 y0 y1))) -> (@iterate a1 a0 x0 (@UNION a0 y0 y1) x1) = (x0 (@iterate a1 a0 x0 y0 x1) (@iterate a1 a0 x0 y1 x1)).
Definition term268 (a0 : Type') (a1 : Type') (x0 : a0 -> Prop) (x1 : a0 -> a1) (x2 : a0 -> a1) (x3 : a0) (x4 : a1) (x5 : a1) := ((x0 x3) = True) -> (True -> (x1 x3) = x4) -> ((~ True) -> (x2 x3) = x5) -> (@COND a1 (x0 x3) (x1 x3) (x2 x3)) = (@COND a1 True x4 x5).
Definition term35 (a0 : Type') (x0 : a0) (x1 : a0 -> Prop) (x2 : a0 -> Prop) := @IN a0 x0 (@INTER a0 (@GSPEC a0 (fun y0 : a0 => exists y1 : a0, @SETSPEC a0 y0 ((@IN a0 y1 x1) /\ (x2 y1)) y1)) (@GSPEC a0 (fun y0 : a0 => exists y1 : a0, @SETSPEC a0 y0 ((@IN a0 y1 x1) /\ (~ (x2 y1))) y1))).
Definition term3 (a0 : Type') (x0 : a0 -> Prop) (x1 : a0) := (fun y0 : a0 => (@IN a0 y0 (@GSPEC a0 (fun y1 : a0 => exists y2 : a0, @SETSPEC a0 y1 (x0 y2) y2))) = (x0 y0)) x1.
Definition term177 (a0 : Type') (x0 : a0 -> Prop) (x1 : a0 -> Prop) := forall y0 : a0, (x0 y0) = (((x0 y0) /\ (x1 y0)) \/ ((x0 y0) /\ (~ (x1 y0)))).
Definition term296 (a0 : Type') (a1 : Type') (x0 : a0 -> a1) (x1 : a0) := False -> (x0 x1) = (x0 x1).
Definition term316 (a0 : Type') (a1 : Type') (x0 : a0 -> a1) (x1 : type1400 a1) (x2 : a0 -> Prop) (x3 : a0 -> Prop) (x4 : a0 -> a1) := fun y0 : a1 => ((@iterate a1 a0 x1 x2 (fun y1 : a0 => @COND a1 (x3 y1) (x0 y1) (x4 y1))) = y0) /\ (y0 = (x1 (@iterate a1 a0 x1 (@GSPEC a0 (fun y1 : a0 => exists y2 : a0, @SETSPEC a0 y1 ((@IN a0 y2 x2) /\ (x3 y2)) y2)) x0) (@iterate a1 a0 x1 (@GSPEC a0 (fun y1 : a0 => exists y2 : a0, @SETSPEC a0 y1 ((@IN a0 y2 x2) /\ (~ (x3 y2))) y2)) x4))).
Definition term188 (a0 : Type') := fun y0 : a0 -> Prop => forall y1 : a0 -> Prop, (~ (forall y2 : a0, (y1 y2) = (((y1 y2) /\ (y0 y2)) \/ ((y1 y2) /\ (~ (y0 y2)))))) -> False.
Definition term99 (a0 : Type') := fun y0 : a0 -> Prop => forall y1 : a0 -> Prop, (~ (forall y2 : a0, ~ (((y1 y2) /\ (y0 y2)) /\ ((y1 y2) /\ (~ (y0 y2)))))) -> False.
Definition term62 (a0 : Type') (x0 : a0 -> Prop) (x1 : a0 -> Prop) := fun y0 : a0 => (@IN a0 y0 x0) /\ (~ (x1 y0)).
Definition term34 (a0 : Type') (x0 : a0 -> Prop) (x1 : a0) (x2 : a0 -> Prop) := (@IN a0 x1 x0) /\ (@IN a0 x1 x2).
Definition term304 (a0 : Type') (a1 : Type') (x0 : a0 -> Prop) (x1 : a0 -> Prop) (x2 : a0 -> a1) (x3 : a0 -> a1) (x4 : a0) := (@IN a0 x4 (@GSPEC a0 (fun y0 : a0 => exists y1 : a0, @SETSPEC a0 y0 ((@IN a0 y1 x0) /\ (~ (x1 y1))) y1))) -> ((fun y0 : a0 => @COND a1 (x1 y0) (x2 y0) (x3 y0)) x4) = (x3 x4).
Definition term279 (a0 : Type') (a1 : Type') (x0 : a0 -> Prop) (x1 : a0 -> Prop) (x2 : a0 -> a1) (x3 : a0 -> a1) (x4 : a0) := (@IN a0 x4 (@GSPEC a0 (fun y0 : a0 => exists y1 : a0, @SETSPEC a0 y0 ((@IN a0 y1 x0) /\ (x1 y1)) y1))) -> ((fun y0 : a0 => @COND a1 (x1 y0) (x3 y0) (x2 y0)) x4) = (x3 x4).
Definition term221 (a0 : Type') (a1 : Type') (x0 : a0 -> a1) (x1 : type1400 a1) (x2 : a0 -> a1) (x3 : a0 -> Prop) := (fun y0 : a0 -> Prop => (forall y1 : a0, (@IN a0 y1 y0) -> (x0 y1) = (x2 y1)) -> (@iterate a1 a0 x1 y0 x0) = (@iterate a1 a0 x1 y0 x2)) x3.
Definition term205 (a0 : Type') (x0 : a0 -> Prop) (x1 : a0 -> Prop) (x2 : a0) := ~ (((x0 x2) /\ (x1 x2)) \/ ((x0 x2) /\ (~ (x1 x2)))).
Definition term155 (a0 : Type') (x0 : a0 -> Prop) (x1 : a0 -> Prop) := @eq Prop (@FINITE a0 (@GSPEC a0 (fun y0 : a0 => exists y1 : a0, @SETSPEC a0 y0 ((@IN a0 y1 x0) /\ (~ (x1 y1))) y1))).
Definition term154 (a0 : Type') (x0 : a0 -> Prop) (x1 : a0 -> Prop) := @eq Prop (@FINITE a0 (@GSPEC a0 (fun y0 : a0 => exists y1 : a0, @SETSPEC a0 y0 ((@IN a0 y1 x0) /\ ((fun y2 : a0 => ~ (x1 y2)) y1)) y1))).
Definition term84 (a0 : Type') (x0 : a0 -> Prop) (x1 : a0 -> Prop) := fun y0 : a0 => (@IN a0 y0 (@INTER a0 (@GSPEC a0 (fun y1 : a0 => exists y2 : a0, @SETSPEC a0 y1 ((@IN a0 y2 x0) /\ (x1 y2)) y2)) (@GSPEC a0 (fun y1 : a0 => exists y2 : a0, @SETSPEC a0 y1 ((@IN a0 y2 x0) /\ (~ (x1 y2))) y2)))) = (@IN a0 y0 (@EMPTY a0)).
Definition term249 (a0 : Type') (a1 : Type') (x0 : a0 -> a1) (x1 : a0 -> a1) (x2 : a0 -> Prop) (x3 : a0 -> Prop) (x4 : a0) (x5 : Prop) := ((@IN a0 x4 (@GSPEC a0 (fun y0 : a0 => exists y1 : a0, @SETSPEC a0 y0 ((@IN a0 y1 x2) /\ (x3 y1)) y1))) = ((@IN a0 x4 x2) /\ (x3 x4))) -> (((@IN a0 x4 x2) /\ (x3 x4)) -> (((fun y0 : a0 => @COND a1 (x3 y0) (x1 y0) (x0 y0)) x4) = (x1 x4)) = x5) -> ((@IN a0 x4 (@GSPEC a0 (fun y0 : a0 => exists y1 : a0, @SETSPEC a0 y0 ((@IN a0 y1 x2) /\ (x3 y1)) y1))) -> ((fun y0 : a0 => @COND a1 (x3 y0) (x1 y0) (x0 y0)) x4) = (x1 x4)) = (((@IN a0 x4 x2) /\ (x3 x4)) -> x5).
Definition term58 (a0 : Type') (x0 : a0) (x1 : a0 -> Prop) (x2 : a0 -> Prop) := and (@IN a0 x0 (@GSPEC a0 (fun y0 : a0 => exists y1 : a0, @SETSPEC a0 y0 ((@IN a0 y1 x1) /\ (x2 y1)) y1))).
Definition term259 (a0 : Type') (x0 : Prop) (x1 : a0) (x2 : a0) (x3 : Prop) := forall y0 : a0, forall y1 : a0, (x0 = x3) -> (x3 -> x1 = y0) -> ((~ x3) -> x2 = y1) -> (@COND a0 x0 x1 x2) = (@COND a0 x3 y0 y1).
Definition term20 (a0 : Type') := forall y0 : a0, forall y1 : a0, (exists y2 : a0, (y0 = y2) /\ (y2 = y1)) -> y0 = y1.
Definition term9 (a0 : Type') (x0 : a0) := forall y0 : a0, forall y1 : a0, ((x0 = y0) /\ (y0 = y1)) -> x0 = y1.
Definition term195 (a0 : Type') (x0 : a0 -> Prop) (x1 : a0 -> Prop) (x2 : a0) := (~ (x0 x2)) \/ (~ (x1 x2)).
Definition term46 (a0 : Type') (x0 : a0) (x1 : a0 -> Prop) (x2 : a0 -> Prop) := fun y0 : a0 => @SETSPEC a0 x0 ((@IN a0 y0 x1) /\ (x2 y0)) y0.
Definition term127 (a0 : Type') (a1 : Type') (x0 : type1400 a1) := fun y0 : a0 -> a1 => forall y1 : a0 -> Prop, forall y2 : a0 -> Prop, ((@FINITE a0 y1) /\ ((@FINITE a0 y2) /\ (@DISJOINT a0 y1 y2))) -> (x0 (@iterate a1 a0 x0 y1 y0) (@iterate a1 a0 x0 y2 y0)) = (@iterate a1 a0 x0 (@UNION a0 y1 y2) y0).
Definition term126 (a0 : Type') (a1 : Type') (x0 : type1400 a1) := fun y0 : a0 -> a1 => forall y1 : a0 -> Prop, forall y2 : a0 -> Prop, ((@FINITE a0 y1) /\ ((@FINITE a0 y2) /\ (@DISJOINT a0 y1 y2))) -> (@iterate a1 a0 x0 (@UNION a0 y1 y2) y0) = (x0 (@iterate a1 a0 x0 y1 y0) (@iterate a1 a0 x0 y2 y0)).
Definition term263 (a0 : Type') (a1 : Type') (x0 : a0 -> Prop) (x1 : a0 -> a1) (x2 : a0 -> a1) (x3 : a0) (x4 : Prop) := forall y0 : a1, forall y1 : a1, ((x0 x3) = x4) -> (x4 -> (x1 x3) = y0) -> ((~ x4) -> (x2 x3) = y1) -> (@COND a1 (x0 x3) (x1 x3) (x2 x3)) = (@COND a1 x4 y0 y1).
Definition term61 (a0 : Type') (x0 : a0 -> Prop) (x1 : a0 -> Prop) (x2 : a0) := (fun y0 : a0 => (@IN a0 y0 x0) /\ (~ (x1 y0))) x2.
Definition term199 (a0 : Type') (x0 : a0 -> Prop) (x1 : a0 -> Prop) (x2 : a0) := (~ (x0 x2)) \/ (x1 x2).
Definition term298 (a0 : Type') (a1 : Type') (x0 : a0 -> Prop) (x1 : a0 -> a1) (x2 : a0 -> a1) (x3 : a0) (x4 : a1) := ((~ False) -> (x1 x3) = x4) -> (@COND a1 (x0 x3) (x2 x3) (x1 x3)) = (@COND a1 False (x2 x3) x4).
Definition term272 (a0 : Type') (a1 : Type') (x0 : a0 -> Prop) (x1 : a0 -> a1) (x2 : a0 -> a1) (x3 : a0) (x4 : a1) := ((~ True) -> (x1 x3) = x4) -> (@COND a1 (x0 x3) (x2 x3) (x1 x3)) = (@COND a1 True (x2 x3) x4).
Definition term277 (a0 : Type') (a1 : Type') (x0 : a0 -> Prop) (x1 : a0 -> Prop) (x2 : a0 -> a1) (x3 : a0 -> a1) (x4 : a0) := ((@IN a0 x4 x0) /\ (x1 x4)) -> (((fun y0 : a0 => @COND a1 (x1 y0) (x3 y0) (x2 y0)) x4) = (x3 x4)) = True.
Definition term267 (a0 : Type') (a1 : Type') (x0 : a0 -> Prop) (x1 : a0 -> a1) (x2 : a0 -> a1) (x3 : a0) (x4 : Prop) (x5 : a1) (x6 : a1) := ((x0 x3) = x4) -> (x4 -> (x1 x3) = x5) -> ((~ x4) -> (x2 x3) = x6) -> (@COND a1 (x0 x3) (x1 x3) (x2 x3)) = (@COND a1 x4 x5 x6).
Definition term148 (a0 : Type') (x0 : a0) (x1 : a0 -> Prop) (x2 : a0 -> Prop) := fun y0 : a0 => @SETSPEC a0 x0 ((@IN a0 y0 x1) /\ ((fun y1 : a0 => ~ (x2 y1)) y0)) y0.
Definition term105 (a0 : Type') (x0 : a0 -> Prop) (x1 : a0) := (x0 x1) -> False.
Definition term255 (a0 : Type') (a1 : Type') (x0 : a0 -> Prop) (x1 : a0 -> a1) (x2 : a0 -> a1) (x3 : a0) := @eq a1 ((fun y0 : a0 => (fun y1 : a0 => @COND a1 (x0 y1) (x1 y1) (x2 y1)) y0) x3).
Definition term305 (a0 : Type') (x0 : a0 -> Prop) (x1 : a0 -> Prop) (x2 : a0) := ((@IN a0 x2 x0) /\ (~ (x1 x2))) -> True.
Definition term172 (a0 : Type') (x0 : a0) (x1 : a0 -> Prop) (x2 : a0 -> Prop) := or (@IN a0 x0 (@GSPEC a0 (fun y0 : a0 => exists y1 : a0, @SETSPEC a0 y0 ((@IN a0 y1 x1) /\ (x2 y1)) y1))).
Definition term110 (a0 : Type') (a1 : Type') (x0 : type1400 a1) := (fun y0 : type1400 a1 => (@monoidal a1 y0) -> forall y1 : a0 -> a1, forall y2 : a0 -> Prop, forall y3 : a0 -> Prop, ((@FINITE a0 y2) /\ ((@FINITE a0 y3) /\ (@DISJOINT a0 y2 y3))) -> (@iterate a1 a0 y0 (@UNION a0 y2 y3) y1) = (y0 (@iterate a1 a0 y0 y2 y1) (@iterate a1 a0 y0 y3 y1))) x0.
Definition term5 (a0 : Type') (a1 : Type') (x0 : type1400 a1) := (fun y0 : type1400 a1 => (@monoidal a1 y0) -> forall y1 : a0 -> a1, forall y2 : a0 -> a1, forall y3 : a0 -> Prop, (forall y4 : a0, (@IN a0 y4 y3) -> (y1 y4) = (y2 y4)) -> (@iterate a1 a0 y0 y3 y1) = (@iterate a1 a0 y0 y3 y2)) x0.
Definition term189 (a0 : Type') := fun y0 : a0 -> Prop => forall y1 : a0 -> Prop, forall y2 : a0, (y1 y2) = (((y1 y2) /\ (y0 y2)) \/ ((y1 y2) /\ (~ (y0 y2)))).
Definition term100 (a0 : Type') := fun y0 : a0 -> Prop => forall y1 : a0 -> Prop, forall y2 : a0, ~ (((y1 y2) /\ (y0 y2)) /\ ((y1 y2) /\ (~ (y0 y2)))).
Definition term307 (a0 : Type') (a1 : Type') (x0 : a0 -> Prop) (x1 : a0 -> Prop) (x2 : a0 -> a1) (x3 : a0 -> a1) := forall y0 : a0, (@IN a0 y0 (@GSPEC a0 (fun y1 : a0 => exists y2 : a0, @SETSPEC a0 y1 ((@IN a0 y2 x0) /\ (~ (x1 y2))) y2))) -> ((fun y1 : a0 => @COND a1 (x1 y1) (x2 y1) (x3 y1)) y0) = (x3 y0).
Definition term283 (a0 : Type') (a1 : Type') (x0 : a0 -> Prop) (x1 : a0 -> Prop) (x2 : a0 -> a1) (x3 : a0 -> a1) := forall y0 : a0, (@IN a0 y0 (@GSPEC a0 (fun y1 : a0 => exists y2 : a0, @SETSPEC a0 y1 ((@IN a0 y2 x0) /\ (x1 y2)) y2))) -> ((fun y1 : a0 => @COND a1 (x1 y1) (x3 y1) (x2 y1)) y0) = (x3 y0).
Definition term182 (a0 : Type') (x0 : a0 -> Prop) (x1 : a0 -> Prop) := (((~ (forall y0 : a0, (x0 y0) = (((x0 y0) /\ (x1 y0)) \/ ((x0 y0) /\ (~ (x1 y0)))))) -> False) -> (~ (forall y0 : a0, (x0 y0) = (((x0 y0) /\ (x1 y0)) \/ ((x0 y0) /\ (~ (x1 y0)))))) -> False) -> ((~ (forall y0 : a0, (x0 y0) = (((x0 y0) /\ (x1 y0)) \/ ((x0 y0) /\ (~ (x1 y0)))))) -> False) -> (~ (forall y0 : a0, (x0 y0) = (((x0 y0) /\ (x1 y0)) \/ ((x0 y0) /\ (~ (x1 y0)))))) -> False.
Definition term92 (a0 : Type') (x0 : a0 -> Prop) (x1 : a0 -> Prop) := (((~ (forall y0 : a0, ~ (((x0 y0) /\ (x1 y0)) /\ ((x0 y0) /\ (~ (x1 y0)))))) -> False) -> (~ (forall y0 : a0, ~ (((x0 y0) /\ (x1 y0)) /\ ((x0 y0) /\ (~ (x1 y0)))))) -> False) -> ((~ (forall y0 : a0, ~ (((x0 y0) /\ (x1 y0)) /\ ((x0 y0) /\ (~ (x1 y0)))))) -> False) -> (~ (forall y0 : a0, ~ (((x0 y0) /\ (x1 y0)) /\ ((x0 y0) /\ (~ (x1 y0)))))) -> False.
Definition term66 (a0 : Type') (x0 : a0) (x1 : a0 -> Prop) (x2 : a0 -> Prop) (x3 : a0) := @SETSPEC a0 x0 ((fun y0 : a0 => (@IN a0 y0 x1) /\ (~ (x2 y0))) x3) x3.
Definition term43 (a0 : Type') (x0 : a0) (x1 : a0 -> Prop) (x2 : a0 -> Prop) (x3 : a0) := @SETSPEC a0 x0 ((fun y0 : a0 => (@IN a0 y0 x1) /\ (x2 y0)) x3) x3.
Definition term184 (a0 : Type') (x0 : a0 -> Prop) := fun y0 : a0 -> Prop => (~ (forall y1 : a0, (y0 y1) = (((y0 y1) /\ (x0 y1)) \/ ((y0 y1) /\ (~ (x0 y1)))))) -> False.
Definition term95 (a0 : Type') (x0 : a0 -> Prop) := fun y0 : a0 -> Prop => (~ (forall y1 : a0, ~ (((y0 y1) /\ (x0 y1)) /\ ((y0 y1) /\ (~ (x0 y1)))))) -> False.
Definition term162 (a0 : Type') (a1 : Type') (x0 : type1400 a1) (x1 : a0 -> Prop) (x2 : a0 -> Prop) (x3 : a0 -> a1) (x4 : a0 -> a1) := @iterate a1 a0 x0 (@UNION a0 (@GSPEC a0 (fun y0 : a0 => exists y1 : a0, @SETSPEC a0 y0 ((@IN a0 y1 x1) /\ (x2 y1)) y1)) (@GSPEC a0 (fun y0 : a0 => exists y1 : a0, @SETSPEC a0 y0 ((@IN a0 y1 x1) /\ (~ (x2 y1))) y1))) (fun y0 : a0 => @COND a1 (x2 y0) (x3 y0) (x4 y0)).
Definition term121 (a0 : Type') (a1 : Type') (x0 : type1400 a1) (x1 : a0 -> Prop) (x2 : a0 -> a1) := forall y0 : a0 -> Prop, ((@FINITE a0 x1) /\ ((@FINITE a0 y0) /\ (@DISJOINT a0 x1 y0))) -> (x0 (@iterate a1 a0 x0 x1 x2) (@iterate a1 a0 x0 y0 x2)) = (@iterate a1 a0 x0 (@UNION a0 x1 y0) x2).
Definition term201 (a0 : Type') (x0 : a0 -> Prop) (x1 : a0 -> Prop) (x2 : a0) := and (~ ((x0 x2) /\ (x1 x2))).
Definition term264 (a0 : Type') (a1 : Type') (x0 : a0 -> Prop) (x1 : a0 -> a1) (x2 : a0 -> a1) (x3 : a0) (x4 : Prop) (x5 : a1) := (fun y0 : a1 => forall y1 : a1, ((x0 x3) = x4) -> (x4 -> (x1 x3) = y0) -> ((~ x4) -> (x2 x3) = y1) -> (@COND a1 (x0 x3) (x1 x3) (x2 x3)) = (@COND a1 x4 y0 y1)) x5.
Definition term160 (a0 : Type') (x0 : a0 -> Prop) (x1 : a0 -> Prop) := (@FINITE a0 (@GSPEC a0 (fun y0 : a0 => exists y1 : a0, @SETSPEC a0 y0 ((@IN a0 y1 x0) /\ (x1 y1)) y1))) /\ ((@FINITE a0 (@GSPEC a0 (fun y0 : a0 => exists y1 : a0, @SETSPEC a0 y0 ((@IN a0 y1 x0) /\ (~ (x1 y1))) y1))) /\ (@DISJOINT a0 (@GSPEC a0 (fun y0 : a0 => exists y1 : a0, @SETSPEC a0 y0 ((@IN a0 y1 x0) /\ (x1 y1)) y1)) (@GSPEC a0 (fun y0 : a0 => exists y1 : a0, @SETSPEC a0 y0 ((@IN a0 y1 x0) /\ (~ (x1 y1))) y1)))).
Definition term158 (a0 : Type') (x0 : a0 -> Prop) (x1 : a0 -> Prop) := and (@FINITE a0 (@GSPEC a0 (fun y0 : a0 => exists y1 : a0, @SETSPEC a0 y0 ((@IN a0 y1 x0) /\ (~ (x1 y1))) y1))).
Definition term141 (a0 : Type') (x0 : a0 -> Prop) (x1 : a0 -> Prop) := and (@FINITE a0 (@GSPEC a0 (fun y0 : a0 => exists y1 : a0, @SETSPEC a0 y0 ((@IN a0 y1 x0) /\ (x1 y1)) y1))).
Definition term222 (a0 : Type') (a1 : Type') (x0 : a0 -> a1) (x1 : type1400 a1) (x2 : a0 -> Prop) (x3 : a0 -> a1) := (forall y0 : a0, (@IN a0 y0 x2) -> (x0 y0) = (x3 y0)) -> (@iterate a1 a0 x1 x2 x0) = (@iterate a1 a0 x1 x2 x3).
Definition term25 (a0 : Type') (a1 : Type') (x0 : type1400 a1) (x1 : a0 -> Prop) (x2 : a0 -> Prop) (x3 : a0 -> a1) (x4 : a0 -> a1) := @iterate a1 a0 x0 x1 (fun y0 : a0 => @COND a1 (x2 y0) (x3 y0) (x4 y0)).
Definition term103 (a0 : Type') (x0 : a0 -> Prop) (x1 : a0) := (~ (x0 x1)) -> x0 x1.
Definition term194 (a0 : Type') (x0 : a0 -> Prop) (x1 : a0 -> Prop) (x2 : a0) := ~ ((x0 x2) /\ (x1 x2)).
Definition term257 (a0 : Type') (x0 : Prop) (x1 : a0) (x2 : a0) (x3 : Prop) (x4 : a0) (x5 : a0) := (x0 = x3) -> (x3 -> x1 = x4) -> ((~ x3) -> x2 = x5) -> (@COND a0 x0 x1 x2) = (@COND a0 x3 x4 x5).
Definition term210 (a0 : Type') (x0 : a0 -> Prop) (x1 : a0 -> Prop) (x2 : a0) := or ((x0 x2) /\ (((~ (x0 x2)) \/ (~ (x1 x2))) /\ ((~ (x0 x2)) \/ (x1 x2)))).
Definition term187 (a0 : Type') (x0 : a0 -> Prop) := forall y0 : a0 -> Prop, forall y1 : a0, (y0 y1) = (((y0 y1) /\ (x0 y1)) \/ ((y0 y1) /\ (~ (x0 y1)))).
Definition term0 (a0 : Type') := forall y0 : a0 -> Prop, forall y1 : a0, (@IN a0 y1 (@GSPEC a0 (fun y2 : a0 => exists y3 : a0, @SETSPEC a0 y2 (y0 y3) y3))) = (y0 y1).
Definition term225 (a0 : Type') (a1 : Type') (x0 : a0 -> a1) (x1 : type1400 a1) (x2 : a0 -> Prop) := forall y0 : a0 -> a1, (forall y1 : a0, (@IN a0 y1 x2) -> (x0 y1) = (y0 y1)) -> (@iterate a1 a0 x1 x2 x0) = (@iterate a1 a0 x1 x2 y0).
Definition term220 (a0 : Type') (a1 : Type') (x0 : a0 -> a1) (x1 : type1400 a1) (x2 : a0 -> a1) := forall y0 : a0 -> Prop, (forall y1 : a0, (@IN a0 y1 y0) -> (x0 y1) = (x2 y1)) -> (@iterate a1 a0 x1 y0 x0) = (@iterate a1 a0 x1 y0 x2).
Definition term212 (a0 : Type') (x0 : a0 -> Prop) (x1 : a0 -> Prop) (x2 : a0) := ((x0 x2) /\ (((~ (x0 x2)) \/ (~ (x1 x2))) /\ ((~ (x0 x2)) \/ (x1 x2)))) \/ ((~ (x0 x2)) /\ (((x0 x2) /\ (x1 x2)) \/ ((x0 x2) /\ (~ (x1 x2))))).
Definition term302 (a0 : Type') (a1 : Type') (x0 : a0 -> Prop) (x1 : a0 -> Prop) (x2 : a0 -> a1) (x3 : a0 -> a1) (x4 : a0) := ((@IN a0 x4 x0) /\ (~ (x1 x4))) -> (((fun y0 : a0 => @COND a1 (x1 y0) (x2 y0) (x3 y0)) x4) = (x3 x4)) = True.
Definition term147 (a0 : Type') (x0 : a0) (x1 : a0 -> Prop) (x2 : a0 -> Prop) (x3 : a0) := @SETSPEC a0 x0 ((@IN a0 x3 x1) /\ ((fun y0 : a0 => ~ (x2 y0)) x3)) x3.
Definition term239 (a0 : Type') (a1 : Type') (x0 : a0 -> a1) (x1 : type1400 a1) (x2 : a0 -> Prop) (x3 : a0 -> Prop) (x4 : a0 -> a1) := @eq Prop ((forall y0 : a0, (@IN a0 y0 (@GSPEC a0 (fun y1 : a0 => exists y2 : a0, @SETSPEC a0 y1 ((@IN a0 y2 x2) /\ (~ (x3 y2))) y2))) -> ((fun y1 : a0 => @COND a1 (x3 y1) (x0 y1) (x4 y1)) y0) = (x4 y0)) -> (@iterate a1 a0 x1 (@GSPEC a0 (fun y0 : a0 => exists y1 : a0, @SETSPEC a0 y0 ((@IN a0 y1 x2) /\ (~ (x3 y1))) y1)) (fun y0 : a0 => @COND a1 (x3 y0) (x0 y0) (x4 y0))) = (@iterate a1 a0 x1 (@GSPEC a0 (fun y0 : a0 => exists y1 : a0, @SETSPEC a0 y0 ((@IN a0 y1 x2) /\ (~ (x3 y1))) y1)) x4)).
Definition term235 (a0 : Type') (a1 : Type') (x0 : a0 -> a1) (x1 : type1400 a1) (x2 : a0 -> Prop) (x3 : a0 -> Prop) (x4 : a0 -> a1) := @eq Prop ((forall y0 : a0, (@IN a0 y0 (@GSPEC a0 (fun y1 : a0 => exists y2 : a0, @SETSPEC a0 y1 ((@IN a0 y2 x2) /\ (x3 y2)) y2))) -> ((fun y1 : a0 => @COND a1 (x3 y1) (x4 y1) (x0 y1)) y0) = (x4 y0)) -> (@iterate a1 a0 x1 (@GSPEC a0 (fun y0 : a0 => exists y1 : a0, @SETSPEC a0 y0 ((@IN a0 y1 x2) /\ (x3 y1)) y1)) (fun y0 : a0 => @COND a1 (x3 y0) (x4 y0) (x0 y0))) = (@iterate a1 a0 x1 (@GSPEC a0 (fun y0 : a0 => exists y1 : a0, @SETSPEC a0 y0 ((@IN a0 y1 x2) /\ (x3 y1)) y1)) x4)).
Definition term139 (a0 : Type') (a1 : Type') (x0 : a0 -> Prop) (x1 : a0 -> a1) (x2 : a0 -> a1) := fun y0 : a0 => @COND a1 (x0 y0) (x1 y0) (x2 y0).
Definition term295 (a0 : Type') (a1 : Type') (x0 : a0 -> Prop) (x1 : a0 -> a1) (x2 : a0 -> a1) (x3 : a0) (x4 : a1) (x5 : a1) := (False -> (x1 x3) = x4) -> ((~ False) -> (x2 x3) = x5) -> (@COND a1 (x0 x3) (x1 x3) (x2 x3)) = (@COND a1 False x4 x5).
Definition term41 (a0 : Type') (x0 : a0) (x1 : a0 -> Prop) (x2 : a0 -> Prop) (x3 : a0) := @SETSPEC a0 x0 ((fun y0 : a0 => (@IN a0 y0 x1) /\ (x2 y0)) x3).
Definition term291 (a0 : Type') (a1 : Type') (x0 : a0 -> a1) (x1 : a0 -> a1) (x2 : a0 -> Prop) (x3 : a0 -> Prop) (x4 : a0) (x5 : Prop) := ((@IN a0 x4 (@GSPEC a0 (fun y0 : a0 => exists y1 : a0, @SETSPEC a0 y0 ((@IN a0 y1 x2) /\ (~ (x3 y1))) y1))) = ((@IN a0 x4 x2) /\ (~ (x3 x4)))) -> (((@IN a0 x4 x2) /\ (~ (x3 x4))) -> (((fun y0 : a0 => @COND a1 (x3 y0) (x0 y0) (x1 y0)) x4) = (x1 x4)) = x5) -> ((@IN a0 x4 (@GSPEC a0 (fun y0 : a0 => exists y1 : a0, @SETSPEC a0 y0 ((@IN a0 y1 x2) /\ (~ (x3 y1))) y1))) -> ((fun y0 : a0 => @COND a1 (x3 y0) (x0 y0) (x1 y0)) x4) = (x1 x4)) = (((@IN a0 x4 x2) /\ (~ (x3 x4))) -> x5).
