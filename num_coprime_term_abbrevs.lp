require open hol-light.theory_hol;
require open hol-light.hol_types;
require open hol-light.hol_type_abbrevs;
require open hol-light.hol_terms;
symbol term21 (x0: El num) ≔ ((@= (fun num bool)) ((λ y0 : El num, (λ y1 : El num, (int_coprime ((@̦‚ int int) (int_of_num y0) (int_of_num y1))))) x0));
symbol term20 (x0: El num) (x1: El num) ≔ (λ y0 : El num, (int_coprime ((@̦‚ int int) (int_of_num ((@FST num num) ((@̦‚ num num) x0 x1))) (int_of_num y0))));
symbol term14 a0 a1 (x0: El a0) (x1: El a1) ≔ ((@FST a0 a1) ((@̦‚ a0 a1) x0 x1));
symbol term3 ≔ (∀ (λ y0 : El (prod num num), (= (num_coprime y0) (int_coprime ((@̦‚ int int) (int_of_num ((@FST num num) y0)) (int_of_num ((@SND num num) y0)))))));
symbol term24 (x0: El num) (x1: El num) ≔ ((λ y0 : El num, (int_coprime ((@̦‚ int int) (int_of_num x0) (int_of_num y0)))) x1);
symbol term7 a0 a1 (x0: El a0) ≔ ((λ y0 : El a0, (∀ (λ y1 : El a1, (= ((@SND a0 a1) ((@̦‚ a0 a1) y0 y1)) y1)))) x0);
symbol term5 (x0: El num) (x1: El num) ≔ (num_coprime ((@̦‚ num num) x0 x1));
symbol term12 a0 a1 (x0: El a0) ≔ (∀ (λ y0 : El a1, (= ((@FST a0 a1) ((@̦‚ a0 a1) x0 y0)) x0)));
symbol term28 (x0: El num) (x1: El num) ≔ ((@= bool) (int_coprime ((@̦‚ int int) (int_of_num x0) (int_of_num x1))));
symbol term0 ≔ (λ y0 : El (prod num num), (int_coprime ((@̦‚ int int) (int_of_num ((@FST num num) y0)) (int_of_num ((@SND num num) y0)))));
symbol term23 (x0: El num) ≔ ((@= (fun num bool)) (λ y0 : El num, (int_coprime ((@̦‚ int int) (int_of_num x0) (int_of_num y0)))));
symbol term16 (x0: El num) (x1: El num) ≔ ((@SND num num) ((@̦‚ num num) x0 x1));
symbol term6 (x0: El num) (x1: El num) ≔ (int_coprime ((@̦‚ int int) (int_of_num ((@FST num num) ((@̦‚ num num) x0 x1))) (int_of_num ((@SND num num) ((@̦‚ num num) x0 x1)))));
symbol term18 (x0: El num) ≔ ((λ y0 : El num, (λ y1 : El num, (int_coprime ((@̦‚ int int) (int_of_num y0) (int_of_num y1))))) x0);
symbol term11 a0 a1 (x0: El a0) ≔ ((λ y0 : El a0, (∀ (λ y1 : El a1, (= ((@FST a0 a1) ((@̦‚ a0 a1) y0 y1)) y0)))) x0);
symbol term17 ≔ (λ y0 : El num, (λ y1 : El num, (int_coprime ((@̦‚ int int) (int_of_num y0) (int_of_num y1)))));
symbol term25 (x0: El num) (x1: El num) ≔ ((λ y0 : El num, (int_coprime ((@̦‚ int int) (int_of_num ((@FST num num) ((@̦‚ num num) x0 x1))) (int_of_num y0)))) ((@SND num num) ((@̦‚ num num) x0 x1)));
symbol term30 ≔ (∀ (λ y0 : El num, (∀ (λ y1 : El num, (= (num_coprime ((@̦‚ num num) y0 y1)) (int_coprime ((@̦‚ int int) (int_of_num y0) (int_of_num y1))))))));
symbol term29 (x0: El num) ≔ (∀ (λ y0 : El num, (= (num_coprime ((@̦‚ num num) x0 y0)) (int_coprime ((@̦‚ int int) (int_of_num x0) (int_of_num y0))))));
symbol term15 (x0: El num) (x1: El num) ≔ ((@FST num num) ((@̦‚ num num) x0 x1));
symbol term26 (x0: El num) (x1: El num) ≔ ((@= bool) ((λ y0 : El num, (int_coprime ((@̦‚ int int) (int_of_num x0) (int_of_num y0)))) x1));
symbol term8 a0 a1 (x0: El a0) ≔ (∀ (λ y0 : El a1, (= ((@SND a0 a1) ((@̦‚ a0 a1) x0 y0)) y0)));
symbol term9 a0 a1 (x0: El a0) (x1: El a1) ≔ ((λ y0 : El a1, (= ((@SND a0 a1) ((@̦‚ a0 a1) x0 y0)) y0)) x1);
symbol term1 (x0: El (prod num num)) ≔ ((λ y0 : El (prod num num), (int_coprime ((@̦‚ int int) (int_of_num ((@FST num num) y0)) (int_of_num ((@SND num num) y0))))) x0);
symbol term10 a0 a1 (x0: El a0) (x1: El a1) ≔ ((@SND a0 a1) ((@̦‚ a0 a1) x0 x1));
symbol term13 a0 a1 (x0: El a0) (x1: El a1) ≔ ((λ y0 : El a1, (= ((@FST a0 a1) ((@̦‚ a0 a1) x0 y0)) x0)) x1);
symbol term4 (x0: El (prod num num)) ≔ ((λ y0 : El (prod num num), (= (num_coprime y0) (int_coprime ((@̦‚ int int) (int_of_num ((@FST num num) y0)) (int_of_num ((@SND num num) y0)))))) x0);
symbol term27 (x0: El num) (x1: El num) ≔ (int_coprime ((@̦‚ int int) (int_of_num x0) (int_of_num x1)));
symbol term2 (x0: El (prod num num)) ≔ (int_coprime ((@̦‚ int int) (int_of_num ((@FST num num) x0)) (int_of_num ((@SND num num) x0))));
symbol term19 (x0: El num) (x1: El num) ≔ ((λ y0 : El num, (λ y1 : El num, (int_coprime ((@̦‚ int int) (int_of_num y0) (int_of_num y1))))) ((@FST num num) ((@̦‚ num num) x0 x1)));
symbol term22 (x0: El num) ≔ (λ y0 : El num, (int_coprime ((@̦‚ int int) (int_of_num x0) (int_of_num y0))));
