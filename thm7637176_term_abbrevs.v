Require Import coq.
Require Import theory_hol.
Require Import hol_types.
Require Import hol_type_abbrevs.
Require Import hol_terms.
Definition term0 (a0 : Type') (a1 : Type') := forall y0 : a0 -> a1, forall y1 : a0 -> Prop, forall y2 : nat, ((forall y3 : a0, forall y4 : a0, ((@IN a0 y3 y1) /\ ((@IN a0 y4 y1) /\ ((y0 y3) = (y0 y4)))) -> y3 = y4) /\ (@HAS_SIZE a0 y1 y2)) -> @HAS_SIZE a1 (@IMAGE a0 a1 y0 y1) y2.
Definition term4 (a0 : Type') (a1 : Type') (x0 : a0 -> a1) (x1 : a0 -> Prop) := forall y0 : nat, ((forall y1 : a0, forall y2 : a0, ((@IN a0 y1 x1) /\ ((@IN a0 y2 x1) /\ ((x0 y1) = (x0 y2)))) -> y1 = y2) /\ (@HAS_SIZE a0 x1 y0)) -> @HAS_SIZE a1 (@IMAGE a0 a1 x0 x1) y0.
Definition term6 (a0 : Type') (a1 : Type') (x0 : a0 -> a1) (x1 : a0 -> Prop) (x2 : nat) := ((forall y0 : a0, forall y1 : a0, ((@IN a0 y0 x1) /\ ((@IN a0 y1 x1) /\ ((x0 y0) = (x0 y1)))) -> y0 = y1) /\ (@HAS_SIZE a0 x1 x2)) -> @HAS_SIZE a1 (@IMAGE a0 a1 x0 x1) x2.
Definition term10 (a0 : Type') (a1 : Type') := (forall y0 : a0 -> a1, forall y1 : a0 -> Prop, forall y2 : nat, ((forall y3 : a0, forall y4 : a0, ((@IN a0 y3 y1) /\ ((@IN a0 y4 y1) /\ ((y0 y3) = (y0 y4)))) -> y3 = y4) /\ (@HAS_SIZE a0 y1 y2)) -> @HAS_SIZE a1 (@IMAGE a0 a1 y0 y1) y2) -> forall y0 : a0 -> a1, forall y1 : a0 -> Prop, forall y2 : nat, ((forall y3 : a0, forall y4 : a0, ((@IN a0 y3 y1) /\ ((@IN a0 y4 y1) /\ ((y0 y3) = (y0 y4)))) -> y3 = y4) /\ (@HAS_SIZE a0 y1 y2)) -> @HAS_SIZE a1 (@IMAGE a0 a1 y0 y1) y2.
Definition term1 (a0 : Type') (a1 : Type') (x0 : a0 -> a1) := (fun y0 : a0 -> a1 => forall y1 : a0 -> Prop, forall y2 : nat, ((forall y3 : a0, forall y4 : a0, ((@IN a0 y3 y1) /\ ((@IN a0 y4 y1) /\ ((y0 y3) = (y0 y4)))) -> y3 = y4) /\ (@HAS_SIZE a0 y1 y2)) -> @HAS_SIZE a1 (@IMAGE a0 a1 y0 y1) y2) x0.
Definition term5 (a0 : Type') (a1 : Type') (x0 : a0 -> a1) (x1 : a0 -> Prop) (x2 : nat) := (fun y0 : nat => ((forall y1 : a0, forall y2 : a0, ((@IN a0 y1 x1) /\ ((@IN a0 y2 x1) /\ ((x0 y1) = (x0 y2)))) -> y1 = y2) /\ (@HAS_SIZE a0 x1 y0)) -> @HAS_SIZE a1 (@IMAGE a0 a1 x0 x1) y0) x2.
Definition term3 (a0 : Type') (a1 : Type') (x0 : a0 -> a1) (x1 : a0 -> Prop) := (fun y0 : a0 -> Prop => forall y1 : nat, ((forall y2 : a0, forall y3 : a0, ((@IN a0 y2 y0) /\ ((@IN a0 y3 y0) /\ ((x0 y2) = (x0 y3)))) -> y2 = y3) /\ (@HAS_SIZE a0 y0 y1)) -> @HAS_SIZE a1 (@IMAGE a0 a1 x0 y0) y1) x1.
Definition term8 (a0 : Type') (a1 : Type') (x0 : a0 -> a1) (x1 : a0 -> Prop) (x2 : nat) := @HAS_SIZE a1 (@IMAGE a0 a1 x0 x1) x2.
Definition term9 (a0 : Type') (a1 : Type') (x0 : a0 -> a1) (x1 : a0 -> Prop) (x2 : nat) := (forall y0 : a0 -> a1, forall y1 : a0 -> Prop, forall y2 : nat, ((forall y3 : a0, forall y4 : a0, ((@IN a0 y3 y1) /\ ((@IN a0 y4 y1) /\ ((y0 y3) = (y0 y4)))) -> y3 = y4) /\ (@HAS_SIZE a0 y1 y2)) -> @HAS_SIZE a1 (@IMAGE a0 a1 y0 y1) y2) -> @HAS_SIZE a1 (@IMAGE a0 a1 x0 x1) x2.
Definition term2 (a0 : Type') (a1 : Type') (x0 : a0 -> a1) := forall y0 : a0 -> Prop, forall y1 : nat, ((forall y2 : a0, forall y3 : a0, ((@IN a0 y2 y0) /\ ((@IN a0 y3 y0) /\ ((x0 y2) = (x0 y3)))) -> y2 = y3) /\ (@HAS_SIZE a0 y0 y1)) -> @HAS_SIZE a1 (@IMAGE a0 a1 x0 y0) y1.
Definition term7 (a0 : Type') (a1 : Type') (x0 : a0 -> a1) (x1 : a0 -> Prop) (x2 : nat) := (forall y0 : a0, forall y1 : a0, ((@IN a0 y0 x1) /\ ((@IN a0 y1 x1) /\ ((x0 y0) = (x0 y1)))) -> y0 = y1) /\ (@HAS_SIZE a0 x1 x2).
