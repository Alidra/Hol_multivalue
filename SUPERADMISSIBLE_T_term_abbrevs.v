Require Import coq.
Require Import theory_hol.
Require Import hol_types.
Require Import hol_type_abbrevs.
Require Import hol_terms.
Definition term33 (a0 : Type') (x0 : a0) := (fun y0 : a0 => (fun y1 : a0 => True) y0) x0.
Definition term39 (a0 : Type') (a1 : Type') (a2 : Type') (x0 : type1402 a0) (x1 : a2 -> a0) (x2 : a2) (x3 : a0 -> a1) (x4 : a0 -> a1) := ((fun y0 : a0 -> a1 => fun y1 : a2 => True) x4 x2) /\ (forall y0 : a0, (x0 y0 (x1 x2)) -> (x3 y0) = (x4 y0)).
Definition term50 (a0 : Type') (x0 : Prop) := forall y0 : a0, x0.
Definition term30 (a0 : Type') (a1 : Type') (a2 : Type') (x0 : a0 -> a1) (x1 : a2) := (fun y0 : a0 -> a1 => fun y1 : a2 => True) x0 x1.
Definition term21 (a0 : Type') (a1 : Type') (a2 : Type') (x0 : type1402 a0) (x1 : a2 -> a0) := forall y0 : a0 -> a1, forall y1 : a0 -> a1, forall y2 : a2, (((fun y3 : a0 -> a1 => fun y4 : a2 => True) y0 y2) /\ (((fun y3 : a0 -> a1 => fun y4 : a2 => True) y1 y2) /\ (forall y3 : a0, (x0 y3 (x1 y2)) -> (y0 y3) = (y1 y3)))) -> ((fun y3 : a0 -> a1 => fun y4 : a2 => True) y0 y2) = ((fun y3 : a0 -> a1 => fun y4 : a2 => True) y1 y2).
Definition term19 (a0 : Type') (a1 : Type') (a2 : Type') (x0 : type560 a0 a1 a2) (x1 : type1402 a0) (x2 : a2 -> a0) (x3 : type560 a0 a1 a2) := forall y0 : a0 -> a1, forall y1 : a0 -> a1, forall y2 : a2, ((x0 y0 y2) /\ ((x0 y1 y2) /\ (forall y3 : a0, (x1 y3 (x2 y2)) -> (y0 y3) = (y1 y3)))) -> (x3 y0 y2) = (x3 y1 y2).
Definition term7 (a0 : Type') (a1 : Type') (a2 : Type') (a3 : Type') (a4 : Type') (x0 : type800 a1 a2 a4) (x1 : type1470 a0 a2) (x2 : a4 -> a0) (x3 : type801 a1 a2 a3 a4) := forall y0 : a2 -> a1, forall y1 : a2 -> a1, forall y2 : a4, ((x0 y0 y2) /\ ((x0 y1 y2) /\ (forall y3 : a2, (x1 y3 (x2 y2)) -> (y0 y3) = (y1 y3)))) -> (x3 y0 y2) = (x3 y1 y2).
Definition term1 (a0 : Type') (a1 : Type') (a2 : Type') (a3 : Type') (a4 : Type') (x0 : type800 a1 a2 a4) := forall y0 : type1470 a0 a2, forall y1 : a4 -> a0, forall y2 : type801 a1 a2 a3 a4, (@admissible a0 a1 a2 a3 a4 y0 x0 y1 y2) = (forall y3 : a2 -> a1, forall y4 : a2 -> a1, forall y5 : a4, ((x0 y3 y5) /\ ((x0 y4 y5) /\ (forall y6 : a2, (y0 y6 (y1 y5)) -> (y3 y6) = (y4 y6)))) -> (y2 y3 y5) = (y2 y4 y5)).
Definition term40 (a0 : Type') (a1 : Type') (a2 : Type') (x0 : type1402 a0) (x1 : a2 -> a0) (x2 : a2) (x3 : a0 -> a1) (x4 : a0 -> a1) := True /\ (forall y0 : a0, (x0 y0 (x1 x2)) -> (x3 y0) = (x4 y0)).
Definition term13 (a0 : Type') (a1 : Type') (a2 : Type') (x0 : type1402 a0) (x1 : type560 a0 a1 a2) (x2 : a2 -> a0) := forall y0 : type558 a0 a1 a2, (@superadmissible a0 a1 a2 x0 x1 x2 y0) = ((@admissible a0 a1 a0 Prop a2 x0 (fun y1 : a0 -> a1 => fun y2 : a2 => True) x2 x1) -> @tailadmissible a0 a1 a2 x0 x1 x2 y0).
Definition term27 (a0 : Type') (a1 : Type') (a2 : Type') := fun y0 : a0 -> a1 => (fun y1 : a0 -> a1 => fun y2 : a2 => True) y0.
Definition term43 (a0 : Type') (a1 : Type') (a2 : Type') (x0 : type1402 a0) (x1 : a2 -> a0) (x2 : a2) (x3 : a0 -> a1) (x4 : a0 -> a1) := imp (forall y0 : a0, (x0 y0 (x1 x2)) -> (x3 y0) = (x4 y0)).
Definition term49 (a0 : Type') := forall y0 : a0, True.
Definition term8 (a0 : Type') (a1 : Type') (a2 : Type') (x0 : type1402 a0) := (fun y0 : type1402 a0 => forall y1 : type560 a0 a1 a2, forall y2 : a2 -> a0, forall y3 : type558 a0 a1 a2, (@superadmissible a0 a1 a2 y0 y1 y2 y3) = ((@admissible a0 a1 a0 Prop a2 y0 (fun y4 : a0 -> a1 => fun y5 : a2 => True) y2 y1) -> @tailadmissible a0 a1 a2 y0 y1 y2 y3)) x0.
Definition term61 (a0 : Type') (a1 : Type') (a2 : Type') (x0 : type1402 a0) (x1 : a2 -> a0) (x2 : type558 a0 a1 a2) := @eq Prop (@tailadmissible a0 a1 a2 x0 (fun y0 : a0 -> a1 => fun y1 : a2 => True) x1 x2).
Definition term60 (a0 : Type') (a1 : Type') (a2 : Type') (x0 : type1402 a0) (x1 : a2 -> a0) (x2 : type558 a0 a1 a2) := @eq Prop (@superadmissible a0 a1 a2 x0 (fun y0 : a0 -> a1 => fun y1 : a2 => True) x1 x2).
Definition term23 (a0 : Type') (a1 : Type') (a2 : Type') (x0 : type560 a0 a1 a2) (x1 : a0 -> a1) := (fun y0 : a0 -> a1 => x0 y0) x1.
Definition term55 (a0 : Type') (a1 : Type') (x0 : Prop) := forall y0 : a0 -> a1, x0.
Definition term9 (a0 : Type') (a1 : Type') (a2 : Type') (x0 : type1402 a0) := forall y0 : type560 a0 a1 a2, forall y1 : a2 -> a0, forall y2 : type558 a0 a1 a2, (@superadmissible a0 a1 a2 x0 y0 y1 y2) = ((@admissible a0 a1 a0 Prop a2 x0 (fun y3 : a0 -> a1 => fun y4 : a2 => True) y1 y0) -> @tailadmissible a0 a1 a2 x0 y0 y1 y2).
Definition term59 (a0 : Type') (a1 : Type') (a2 : Type') (x0 : type1402 a0) (x1 : a2 -> a0) (x2 : type558 a0 a1 a2) := True -> @tailadmissible a0 a1 a2 x0 (fun y0 : a0 -> a1 => fun y1 : a2 => True) x1 x2.
Definition term46 (a0 : Type') (a1 : Type') (a2 : Type') (x0 : type1402 a0) (x1 : a2 -> a0) (x2 : a2) (x3 : a0 -> a1) (x4 : a0 -> a1) := (forall y0 : a0, (x0 y0 (x1 x2)) -> (x3 y0) = (x4 y0)) -> True.
Definition term16 (a0 : Type') (a1 : Type') (a2 : Type') (x0 : type1402 a0) (x1 : a2 -> a0) (x2 : type558 a0 a1 a2) := @superadmissible a0 a1 a2 x0 (fun y0 : a0 -> a1 => fun y1 : a2 => True) x1 x2.
Definition term37 (a0 : Type') (a1 : Type') (a2 : Type') (x0 : a0 -> a1) (x1 : a2) := and ((fun y0 : a0 -> a1 => fun y1 : a2 => True) x0 x1).
Definition term24 (a0 : Type') (a1 : Type') (a2 : Type') (x0 : a0 -> a1) := (fun y0 : a0 -> a1 => (fun y1 : a0 -> a1 => fun y2 : a2 => True) y0) x0.
Definition term36 (a0 : Type') (x0 : a0) := @eq Prop ((fun y0 : a0 => True) x0).
Definition term12 (a0 : Type') (a1 : Type') (a2 : Type') (x0 : type1402 a0) (x1 : type560 a0 a1 a2) (x2 : a2 -> a0) := (fun y0 : a2 -> a0 => forall y1 : type558 a0 a1 a2, (@superadmissible a0 a1 a2 x0 x1 y0 y1) = ((@admissible a0 a1 a0 Prop a2 x0 (fun y2 : a0 -> a1 => fun y3 : a2 => True) y0 x1) -> @tailadmissible a0 a1 a2 x0 x1 y0 y1)) x2.
Definition term22 (a0 : Type') (a1 : Type') (x0 : a0 -> a1) (x1 : a0) := (fun y0 : a0 => x0 y0) x1.
Definition term26 (a0 : Type') := fun y0 : a0 => True.
Definition term32 (a0 : Type') (x0 : a0 -> Prop) (x1 : a0) := (fun y0 : a0 => x0 y0) x1.
Definition term48 (a0 : Type') (a1 : Type') (a2 : Type') (x0 : type1402 a0) (x1 : a2 -> a0) (x2 : a0 -> a1) (x3 : a0 -> a1) := forall y0 : a2, (((fun y1 : a0 -> a1 => fun y2 : a2 => True) x2 y0) /\ (((fun y1 : a0 -> a1 => fun y2 : a2 => True) x3 y0) /\ (forall y1 : a0, (x0 y1 (x1 y0)) -> (x2 y1) = (x3 y1)))) -> ((fun y1 : a0 -> a1 => fun y2 : a2 => True) x2 y0) = ((fun y1 : a0 -> a1 => fun y2 : a2 => True) x3 y0).
Definition term6 (a0 : Type') (a1 : Type') (a2 : Type') (a3 : Type') (a4 : Type') (x0 : type800 a1 a2 a4) (x1 : type1470 a0 a2) (x2 : a4 -> a0) (x3 : type801 a1 a2 a3 a4) := (fun y0 : type801 a1 a2 a3 a4 => (@admissible a0 a1 a2 a3 a4 x1 x0 x2 y0) = (forall y1 : a2 -> a1, forall y2 : a2 -> a1, forall y3 : a4, ((x0 y1 y3) /\ ((x0 y2 y3) /\ (forall y4 : a2, (x1 y4 (x2 y3)) -> (y1 y4) = (y2 y4)))) -> (y0 y1 y3) = (y0 y2 y3))) x3.
Definition term34 (a0 : Type') := fun y0 : a0 => (fun y1 : a0 => True) y0.
Definition term52 (a0 : Type') (a1 : Type') := fun y0 : a0 -> a1 => True.
Definition term10 (a0 : Type') (a1 : Type') (a2 : Type') (x0 : type1402 a0) (x1 : type560 a0 a1 a2) := (fun y0 : type560 a0 a1 a2 => forall y1 : a2 -> a0, forall y2 : type558 a0 a1 a2, (@superadmissible a0 a1 a2 x0 y0 y1 y2) = ((@admissible a0 a1 a0 Prop a2 x0 (fun y3 : a0 -> a1 => fun y4 : a2 => True) y1 y0) -> @tailadmissible a0 a1 a2 x0 y0 y1 y2)) x1.
Definition term11 (a0 : Type') (a1 : Type') (a2 : Type') (x0 : type1402 a0) (x1 : type560 a0 a1 a2) := forall y0 : a2 -> a0, forall y1 : type558 a0 a1 a2, (@superadmissible a0 a1 a2 x0 x1 y0 y1) = ((@admissible a0 a1 a0 Prop a2 x0 (fun y2 : a0 -> a1 => fun y3 : a2 => True) y0 x1) -> @tailadmissible a0 a1 a2 x0 x1 y0 y1).
Definition term3 (a0 : Type') (a1 : Type') (a2 : Type') (a3 : Type') (a4 : Type') (x0 : type800 a1 a2 a4) (x1 : type1470 a0 a2) := forall y0 : a4 -> a0, forall y1 : type801 a1 a2 a3 a4, (@admissible a0 a1 a2 a3 a4 x1 x0 y0 y1) = (forall y2 : a2 -> a1, forall y3 : a2 -> a1, forall y4 : a4, ((x0 y2 y4) /\ ((x0 y3 y4) /\ (forall y5 : a2, (x1 y5 (y0 y4)) -> (y2 y5) = (y3 y5)))) -> (y1 y2 y4) = (y1 y3 y4)).
Definition term28 (a0 : Type') (a1 : Type') (a2 : Type') (x0 : a0 -> a1) := @eq (a2 -> Prop) ((fun y0 : a0 -> a1 => (fun y1 : a0 -> a1 => fun y2 : a2 => True) y0) x0).
Definition term17 (a0 : Type') (a1 : Type') (a2 : Type') (x0 : type1402 a0) (x1 : a2 -> a0) (x2 : type558 a0 a1 a2) := (@admissible a0 a1 a0 Prop a2 x0 (fun y0 : a0 -> a1 => fun y1 : a2 => True) x1 (fun y0 : a0 -> a1 => fun y1 : a2 => True)) -> @tailadmissible a0 a1 a2 x0 (fun y0 : a0 -> a1 => fun y1 : a2 => True) x1 x2.
Definition term2 (a0 : Type') (a1 : Type') (a2 : Type') (a3 : Type') (a4 : Type') (x0 : type800 a1 a2 a4) (x1 : type1470 a0 a2) := (fun y0 : type1470 a0 a2 => forall y1 : a4 -> a0, forall y2 : type801 a1 a2 a3 a4, (@admissible a0 a1 a2 a3 a4 y0 x0 y1 y2) = (forall y3 : a2 -> a1, forall y4 : a2 -> a1, forall y5 : a4, ((x0 y3 y5) /\ ((x0 y4 y5) /\ (forall y6 : a2, (y0 y6 (y1 y5)) -> (y3 y6) = (y4 y6)))) -> (y2 y3 y5) = (y2 y4 y5))) x1.
Definition term15 (a0 : Type') (a1 : Type') (a2 : Type') (x0 : type1402 a0) (x1 : type560 a0 a1 a2) (x2 : a2 -> a0) (x3 : type558 a0 a1 a2) := (@admissible a0 a1 a0 Prop a2 x0 (fun y0 : a0 -> a1 => fun y1 : a2 => True) x2 x1) -> @tailadmissible a0 a1 a2 x0 x1 x2 x3.
Definition term56 (a0 : Type') (a1 : Type') (a2 : Type') (x0 : type1402 a0) (x1 : a2 -> a0) := fun y0 : a0 -> a1 => forall y1 : a0 -> a1, forall y2 : a2, (((fun y3 : a0 -> a1 => fun y4 : a2 => True) y0 y2) /\ (((fun y3 : a0 -> a1 => fun y4 : a2 => True) y1 y2) /\ (forall y3 : a0, (x0 y3 (x1 y2)) -> (y0 y3) = (y1 y3)))) -> ((fun y3 : a0 -> a1 => fun y4 : a2 => True) y0 y2) = ((fun y3 : a0 -> a1 => fun y4 : a2 => True) y1 y2).
Definition term18 (a0 : Type') (a1 : Type') (a2 : Type') := fun y0 : a0 -> a1 => fun y1 : a2 => True.
Definition term47 (a0 : Type') (a1 : Type') (a2 : Type') (x0 : type1402 a0) (x1 : a2 -> a0) (x2 : a0 -> a1) (x3 : a0 -> a1) := fun y0 : a2 => (((fun y1 : a0 -> a1 => fun y2 : a2 => True) x2 y0) /\ (((fun y1 : a0 -> a1 => fun y2 : a2 => True) x3 y0) /\ (forall y1 : a0, (x0 y1 (x1 y0)) -> (x2 y1) = (x3 y1)))) -> ((fun y1 : a0 -> a1 => fun y2 : a2 => True) x2 y0) = ((fun y1 : a0 -> a1 => fun y2 : a2 => True) x3 y0).
Definition term14 (a0 : Type') (a1 : Type') (a2 : Type') (x0 : type1402 a0) (x1 : type560 a0 a1 a2) (x2 : a2 -> a0) (x3 : type558 a0 a1 a2) := (fun y0 : type558 a0 a1 a2 => (@superadmissible a0 a1 a2 x0 x1 x2 y0) = ((@admissible a0 a1 a0 Prop a2 x0 (fun y1 : a0 -> a1 => fun y2 : a2 => True) x2 x1) -> @tailadmissible a0 a1 a2 x0 x1 x2 y0)) x3.
Definition term20 (a0 : Type') (a1 : Type') (a2 : Type') (x0 : type1402 a0) (x1 : a2 -> a0) := @admissible a0 a1 a0 Prop a2 x0 (fun y0 : a0 -> a1 => fun y1 : a2 => True) x1 (fun y0 : a0 -> a1 => fun y1 : a2 => True).
Definition term29 (a0 : Type') (a1 : Type') (a2 : Type') (x0 : a0 -> a1) := @eq (a2 -> Prop) ((fun y0 : a0 -> a1 => fun y1 : a2 => True) x0).
Definition term38 (a0 : Type') (a1 : Type') (a2 : Type') (x0 : type1402 a0) (x1 : a2 -> a0) (x2 : a2) (x3 : a0 -> a1) (x4 : a0 -> a1) := forall y0 : a0, (x0 y0 (x1 x2)) -> (x3 y0) = (x4 y0).
Definition term58 (a0 : Type') (a1 : Type') (a2 : Type') (x0 : type1402 a0) (x1 : a2 -> a0) (x2 : type558 a0 a1 a2) := @tailadmissible a0 a1 a2 x0 (fun y0 : a0 -> a1 => fun y1 : a2 => True) x1 x2.
Definition term5 (a0 : Type') (a1 : Type') (a2 : Type') (a3 : Type') (a4 : Type') (x0 : type800 a1 a2 a4) (x1 : type1470 a0 a2) (x2 : a4 -> a0) := forall y0 : type801 a1 a2 a3 a4, (@admissible a0 a1 a2 a3 a4 x1 x0 x2 y0) = (forall y1 : a2 -> a1, forall y2 : a2 -> a1, forall y3 : a4, ((x0 y1 y3) /\ ((x0 y2 y3) /\ (forall y4 : a2, (x1 y4 (x2 y3)) -> (y1 y4) = (y2 y4)))) -> (y0 y1 y3) = (y0 y2 y3)).
Definition term44 (a0 : Type') (a1 : Type') (a2 : Type') (x0 : a0 -> a1) (x1 : a2) := @eq Prop ((fun y0 : a0 -> a1 => fun y1 : a2 => True) x0 x1).
Definition term51 (a0 : Type') (a1 : Type') (a2 : Type') (x0 : type1402 a0) (x1 : a2 -> a0) (x2 : a0 -> a1) := fun y0 : a0 -> a1 => forall y1 : a2, (((fun y2 : a0 -> a1 => fun y3 : a2 => True) x2 y1) /\ (((fun y2 : a0 -> a1 => fun y3 : a2 => True) y0 y1) /\ (forall y2 : a0, (x0 y2 (x1 y1)) -> (x2 y2) = (y0 y2)))) -> ((fun y2 : a0 -> a1 => fun y3 : a2 => True) x2 y1) = ((fun y2 : a0 -> a1 => fun y3 : a2 => True) y0 y1).
Definition term31 (a0 : Type') (x0 : a0) := (fun y0 : a0 => True) x0.
Definition term57 (a0 : Type') (a1 : Type') (a2 : Type') (x0 : type1402 a0) (x1 : a2 -> a0) := imp (@admissible a0 a1 a0 Prop a2 x0 (fun y0 : a0 -> a1 => fun y1 : a2 => True) x1 (fun y0 : a0 -> a1 => fun y1 : a2 => True)).
Definition term45 (a0 : Type') (a1 : Type') (a2 : Type') (x0 : type1402 a0) (x1 : a2 -> a0) (x2 : a0 -> a1) (x3 : a0 -> a1) (x4 : a2) := (((fun y0 : a0 -> a1 => fun y1 : a2 => True) x2 x4) /\ (((fun y0 : a0 -> a1 => fun y1 : a2 => True) x3 x4) /\ (forall y0 : a0, (x0 y0 (x1 x4)) -> (x2 y0) = (x3 y0)))) -> ((fun y0 : a0 -> a1 => fun y1 : a2 => True) x2 x4) = ((fun y0 : a0 -> a1 => fun y1 : a2 => True) x3 x4).
Definition term25 (a0 : Type') (a1 : Type') (a2 : Type') (x0 : a0 -> a1) := (fun y0 : a0 -> a1 => fun y1 : a2 => True) x0.
Definition term4 (a0 : Type') (a1 : Type') (a2 : Type') (a3 : Type') (a4 : Type') (x0 : type800 a1 a2 a4) (x1 : type1470 a0 a2) (x2 : a4 -> a0) := (fun y0 : a4 -> a0 => forall y1 : type801 a1 a2 a3 a4, (@admissible a0 a1 a2 a3 a4 x1 x0 y0 y1) = (forall y2 : a2 -> a1, forall y3 : a2 -> a1, forall y4 : a4, ((x0 y2 y4) /\ ((x0 y3 y4) /\ (forall y5 : a2, (x1 y5 (y0 y4)) -> (y2 y5) = (y3 y5)))) -> (y1 y2 y4) = (y1 y3 y4))) x2.
Definition term53 (a0 : Type') (a1 : Type') (a2 : Type') (x0 : type1402 a0) (x1 : a2 -> a0) (x2 : a0 -> a1) := forall y0 : a0 -> a1, forall y1 : a2, (((fun y2 : a0 -> a1 => fun y3 : a2 => True) x2 y1) /\ (((fun y2 : a0 -> a1 => fun y3 : a2 => True) y0 y1) /\ (forall y2 : a0, (x0 y2 (x1 y1)) -> (x2 y2) = (y0 y2)))) -> ((fun y2 : a0 -> a1 => fun y3 : a2 => True) x2 y1) = ((fun y2 : a0 -> a1 => fun y3 : a2 => True) y0 y1).
Definition term42 (a0 : Type') (a1 : Type') (a2 : Type') (x0 : type1402 a0) (x1 : a2 -> a0) (x2 : a2) (x3 : a0 -> a1) (x4 : a0 -> a1) := imp (((fun y0 : a0 -> a1 => fun y1 : a2 => True) x3 x2) /\ (((fun y0 : a0 -> a1 => fun y1 : a2 => True) x4 x2) /\ (forall y0 : a0, (x0 y0 (x1 x2)) -> (x3 y0) = (x4 y0)))).
Definition term41 (a0 : Type') (a1 : Type') (a2 : Type') (x0 : type1402 a0) (x1 : a2 -> a0) (x2 : a2) (x3 : a0 -> a1) (x4 : a0 -> a1) := ((fun y0 : a0 -> a1 => fun y1 : a2 => True) x3 x2) /\ (((fun y0 : a0 -> a1 => fun y1 : a2 => True) x4 x2) /\ (forall y0 : a0, (x0 y0 (x1 x2)) -> (x3 y0) = (x4 y0))).
Definition term54 (a0 : Type') (a1 : Type') := forall y0 : a0 -> a1, True.
Definition term35 (a0 : Type') (x0 : a0) := @eq Prop ((fun y0 : a0 => (fun y1 : a0 => True) y0) x0).
Definition term0 (a0 : Type') (a1 : Type') (a2 : Type') (a3 : Type') (a4 : Type') (x0 : type800 a1 a2 a4) := (fun y0 : type800 a1 a2 a4 => forall y1 : type1470 a0 a2, forall y2 : a4 -> a0, forall y3 : type801 a1 a2 a3 a4, (@admissible a0 a1 a2 a3 a4 y1 y0 y2 y3) = (forall y4 : a2 -> a1, forall y5 : a2 -> a1, forall y6 : a4, ((y0 y4 y6) /\ ((y0 y5 y6) /\ (forall y7 : a2, (y1 y7 (y2 y6)) -> (y4 y7) = (y5 y7)))) -> (y3 y4 y6) = (y3 y5 y6))) x0.
